	.file	"mv-search.c"
# GNU C (Ubuntu/Linaro 4.8.1-10ubuntu9) version 4.8.1 (x86_64-linux-gnu)
#	compiled by GNU C version 4.8.1, GMP version 5.1.2, MPFR version 3.1.1-p2, MPC version 1.0.1
# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
# options passed:  -imultiarch x86_64-linux-gnu -D SPEC_CPU -D NDEBUG
# -D SPEC_CPU_LP64 mv-search.c -mtune=generic -march=x86-64 -g
# -fverbose-asm -fno-strict-aliasing -fstack-protector -Wformat
# -Wformat-security
# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg -fcommon
# -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
# -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
# -fident -finline-atomics -fira-hoist-pressure -fira-share-save-slots
# -fira-share-spill-slots -fivopts -fkeep-static-consts
# -fleading-underscore -fmath-errno -fmerge-debug-strings
# -fmove-loop-invariants -fpeephole -fprefetch-loop-arrays
# -freg-struct-return -fsched-critical-path-heuristic
# -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
# -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
# -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fshow-column
# -fsigned-zeros -fsplit-ivs-in-unroller -fstack-protector
# -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
# -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
# -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
# -ftree-parallelize-loops= -ftree-phiprop -ftree-pta -ftree-reassoc
# -ftree-scev-cprop -ftree-slp-vectorize -ftree-vect-loop-version
# -funit-at-a-time -funwind-tables -fverbose-asm -fzero-initialized-in-bss
# -m128bit-long-double -m64 -m80387 -maccumulate-outgoing-args
# -malign-stringops -mfancy-math-387 -mfp-ret-in-387 -mfxsr -mglibc
# -mieee-fp -mlong-double-80 -mmmx -mno-sse4 -mpush-args -mred-zone -msse
# -msse2 -mtls-direct-seg-refs

	.text
.Ltext0:
	.globl	QP2QUANT
	.section	.rodata
	.align 32
	.type	QP2QUANT, @object
	.size	QP2QUANT, 160
QP2QUANT:
	.long	1
	.long	1
	.long	1
	.long	1
	.long	2
	.long	2
	.long	2
	.long	2
	.long	3
	.long	3
	.long	3
	.long	4
	.long	4
	.long	4
	.long	5
	.long	6
	.long	6
	.long	7
	.long	8
	.long	9
	.long	10
	.long	11
	.long	13
	.long	14
	.long	16
	.long	18
	.long	20
	.long	23
	.long	25
	.long	29
	.long	32
	.long	36
	.long	40
	.long	45
	.long	51
	.long	57
	.long	64
	.long	72
	.long	81
	.long	91
	.local	PelY_14
	.comm	PelY_14,8,8
	.local	PelY_14b
	.comm	PelY_14b,8,8
	.local	PelYline_11
	.comm	PelYline_11,8,8
	.comm	max_mvd,4,4
	.comm	spiral_search_x,8,8
	.comm	spiral_search_y,8,8
	.comm	mvbits,8,8
	.comm	refbits,8,8
	.comm	byte_abs,8,8
	.comm	motion_cost,8,8
	.local	search_setup_done
	.comm	search_setup_done,8,8
	.local	search_center_x
	.comm	search_center_x,8,8
	.local	search_center_y
	.comm	search_center_y,8,8
	.local	pos_00
	.comm	pos_00,8,8
	.local	BlockSAD
	.comm	BlockSAD,8,8
	.local	max_search_range
	.comm	max_search_range,8,8
	.align 8
.LC0:
	.string	"InitializeFastFullIntegerSearch: BlockSAD"
	.align 8
.LC1:
	.string	"InitializeFastFullIntegerSearch: search_setup_done"
	.align 8
.LC2:
	.string	"InitializeFastFullIntegerSearch: search_center_x"
	.align 8
.LC3:
	.string	"InitializeFastFullIntegerSearch: search_center_y"
	.align 8
.LC4:
	.string	"InitializeFastFullIntegerSearch: pos_00"
	.align 8
.LC5:
	.string	"InitializeFastFullIntegerSearch: max_search_range"
	.text
	.globl	InitializeFastFullIntegerSearch
	.type	InitializeFastFullIntegerSearch, @function
InitializeFastFullIntegerSearch:
.LFB2:
	.file 1 "mv-search.c"
	.loc 1 90 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 92 0
	movq	input(%rip), %rax	# input, input.0
	movl	32(%rax), %eax	# input.0_10->search_range, tmp227
	movl	%eax, -24(%rbp)	# tmp227, search_range
	.loc 1 93 0
	movl	-24(%rbp), %eax	# search_range, tmp228
	addl	%eax, %eax	# D.21082
	leal	1(%rax), %edx	#, D.21082
	movl	-24(%rbp), %eax	# search_range, tmp229
	addl	%eax, %eax	# D.21082
	addl	$1, %eax	#, D.21082
	imull	%edx, %eax	# D.21082, tmp230
	movl	%eax, -20(%rbp)	# tmp230, max_pos
	.loc 1 95 0
	movl	$16, %edi	#,
	call	malloc	#
	movq	%rax, BlockSAD(%rip)	# BlockSAD.1, BlockSAD
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.2
	testq	%rax, %rax	# BlockSAD.2
	jne	.L2	#,
	.loc 1 96 0
	movl	$.LC0, %edi	#,
	call	no_mem_exit	#
.L2:
	.loc 1 98 0
	movl	$0, -28(%rbp)	#, list
	jmp	.L3	#
.L14:
	.loc 1 100 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.3
	movl	-28(%rbp), %edx	# list, tmp232
	movslq	%edx, %rdx	# tmp232, D.21083
	salq	$3, %rdx	#, D.21083
	leaq	(%rax,%rdx), %rbx	#, D.21084
	movq	img(%rip), %rax	# img, img.4
	movl	36(%rax), %eax	# img.4_24->max_num_references, D.21082
	addl	$1, %eax	#, D.21082
	cltq
	salq	$3, %rax	#, D.21083
	movq	%rax, %rdi	# D.21083,
	call	malloc	#
	movq	%rax, (%rbx)	# D.21085, *_23
	movq	(%rbx), %rax	# *_23, D.21086
	testq	%rax, %rax	# D.21086
	jne	.L4	#,
	.loc 1 101 0
	movl	$.LC0, %edi	#,
	call	no_mem_exit	#
.L4:
	.loc 1 102 0
	movl	$0, -40(%rbp)	#, i
	jmp	.L5	#
.L13:
	.loc 1 104 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.5
	movl	-28(%rbp), %edx	# list, tmp234
	movslq	%edx, %rdx	# tmp234, D.21083
	salq	$3, %rdx	#, D.21083
	addq	%rdx, %rax	# D.21083, D.21084
	movq	(%rax), %rax	# *_37, D.21086
	movl	-40(%rbp), %edx	# i, tmp235
	movslq	%edx, %rdx	# tmp235, D.21083
	salq	$3, %rdx	#, D.21083
	leaq	(%rax,%rdx), %rbx	#, D.21086
	movl	$64, %edi	#,
	call	malloc	#
	movq	%rax, (%rbx)	# D.21085, *_41
	movq	(%rbx), %rax	# *_41, D.21087
	testq	%rax, %rax	# D.21087
	jne	.L6	#,
	.loc 1 105 0
	movl	$.LC0, %edi	#,
	call	no_mem_exit	#
.L6:
	.loc 1 106 0
	movl	$1, -36(%rbp)	#, j
	jmp	.L7	#
.L12:
	.loc 1 108 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.6
	movl	-28(%rbp), %edx	# list, tmp237
	movslq	%edx, %rdx	# tmp237, D.21083
	salq	$3, %rdx	#, D.21083
	addq	%rdx, %rax	# D.21083, D.21084
	movq	(%rax), %rax	# *_48, D.21086
	movl	-40(%rbp), %edx	# i, tmp238
	movslq	%edx, %rdx	# tmp238, D.21083
	salq	$3, %rdx	#, D.21083
	addq	%rdx, %rax	# D.21083, D.21086
	movq	(%rax), %rax	# *_52, D.21087
	movl	-36(%rbp), %edx	# j, tmp239
	movslq	%edx, %rdx	# tmp239, D.21083
	salq	$3, %rdx	#, D.21083
	leaq	(%rax,%rdx), %rbx	#, D.21087
	movl	$128, %edi	#,
	call	malloc	#
	movq	%rax, (%rbx)	# D.21085, *_56
	movq	(%rbx), %rax	# *_56, D.21088
	testq	%rax, %rax	# D.21088
	jne	.L8	#,
	.loc 1 109 0
	movl	$.LC0, %edi	#,
	call	no_mem_exit	#
.L8:
	.loc 1 110 0
	movl	$0, -32(%rbp)	#, k
	jmp	.L9	#
.L11:
	.loc 1 112 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.7
	movl	-28(%rbp), %edx	# list, tmp241
	movslq	%edx, %rdx	# tmp241, D.21083
	salq	$3, %rdx	#, D.21083
	addq	%rdx, %rax	# D.21083, D.21084
	movq	(%rax), %rax	# *_63, D.21086
	movl	-40(%rbp), %edx	# i, tmp242
	movslq	%edx, %rdx	# tmp242, D.21083
	salq	$3, %rdx	#, D.21083
	addq	%rdx, %rax	# D.21083, D.21086
	movq	(%rax), %rax	# *_67, D.21087
	movl	-36(%rbp), %edx	# j, tmp243
	movslq	%edx, %rdx	# tmp243, D.21083
	salq	$3, %rdx	#, D.21083
	addq	%rdx, %rax	# D.21083, D.21087
	movq	(%rax), %rax	# *_71, D.21088
	movl	-32(%rbp), %edx	# k, tmp244
	movslq	%edx, %rdx	# tmp244, D.21083
	salq	$3, %rdx	#, D.21083
	leaq	(%rax,%rdx), %rbx	#, D.21088
	movl	-20(%rbp), %eax	# max_pos, tmp245
	cltq
	salq	$2, %rax	#, D.21083
	movq	%rax, %rdi	# D.21083,
	call	malloc	#
	movq	%rax, (%rbx)	# D.21085, *_75
	movq	(%rbx), %rax	# *_75, D.21089
	testq	%rax, %rax	# D.21089
	jne	.L10	#,
	.loc 1 113 0
	movl	$.LC0, %edi	#,
	call	no_mem_exit	#
.L10:
	.loc 1 110 0
	addl	$1, -32(%rbp)	#, k
.L9:
	.loc 1 110 0 is_stmt 0 discriminator 1
	cmpl	$15, -32(%rbp)	#, k
	jle	.L11	#,
	.loc 1 106 0 is_stmt 1
	addl	$1, -36(%rbp)	#, j
.L7:
	.loc 1 106 0 is_stmt 0 discriminator 1
	cmpl	$7, -36(%rbp)	#, j
	jle	.L12	#,
	.loc 1 102 0 is_stmt 1
	addl	$1, -40(%rbp)	#, i
.L5:
	.loc 1 102 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.8
	movl	36(%rax), %eax	# img.8_32->max_num_references, D.21082
	cmpl	-40(%rbp), %eax	# i, D.21082
	jge	.L13	#,
	.loc 1 98 0 is_stmt 1
	addl	$1, -28(%rbp)	#, list
.L3:
	.loc 1 98 0 is_stmt 0 discriminator 1
	cmpl	$1, -28(%rbp)	#, list
	jle	.L14	#,
	.loc 1 119 0 is_stmt 1
	movl	$16, %edi	#,
	call	malloc	#
	movq	%rax, search_setup_done(%rip)	# search_setup_done.9, search_setup_done
	movq	search_setup_done(%rip), %rax	# search_setup_done, search_setup_done.10
	testq	%rax, %rax	# search_setup_done.10
	jne	.L15	#,
	.loc 1 120 0
	movl	$.LC1, %edi	#,
	call	no_mem_exit	#
.L15:
	.loc 1 121 0
	movl	$16, %edi	#,
	call	malloc	#
	movq	%rax, search_center_x(%rip)	# search_center_x.11, search_center_x
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.12
	testq	%rax, %rax	# search_center_x.12
	jne	.L16	#,
	.loc 1 122 0
	movl	$.LC2, %edi	#,
	call	no_mem_exit	#
.L16:
	.loc 1 123 0
	movl	$16, %edi	#,
	call	malloc	#
	movq	%rax, search_center_y(%rip)	# search_center_y.13, search_center_y
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.14
	testq	%rax, %rax	# search_center_y.14
	jne	.L17	#,
	.loc 1 124 0
	movl	$.LC3, %edi	#,
	call	no_mem_exit	#
.L17:
	.loc 1 125 0
	movl	$16, %edi	#,
	call	malloc	#
	movq	%rax, pos_00(%rip)	# pos_00.15, pos_00
	movq	pos_00(%rip), %rax	# pos_00, pos_00.16
	testq	%rax, %rax	# pos_00.16
	jne	.L18	#,
	.loc 1 126 0
	movl	$.LC4, %edi	#,
	call	no_mem_exit	#
.L18:
	.loc 1 127 0
	movl	$16, %edi	#,
	call	malloc	#
	movq	%rax, max_search_range(%rip)	# max_search_range.17, max_search_range
	movq	max_search_range(%rip), %rax	# max_search_range, max_search_range.18
	testq	%rax, %rax	# max_search_range.18
	jne	.L19	#,
	.loc 1 128 0
	movl	$.LC5, %edi	#,
	call	no_mem_exit	#
.L19:
	.loc 1 130 0
	movl	$0, -28(%rbp)	#, list
	jmp	.L20	#
.L26:
	.loc 1 132 0
	movq	search_setup_done(%rip), %rax	# search_setup_done, search_setup_done.19
	movl	-28(%rbp), %edx	# list, tmp252
	movslq	%edx, %rdx	# tmp252, D.21083
	salq	$3, %rdx	#, D.21083
	leaq	(%rax,%rdx), %rbx	#, D.21088
	movq	img(%rip), %rax	# img, img.20
	movl	36(%rax), %eax	# img.20_99->max_num_references, D.21082
	addl	$1, %eax	#, D.21082
	cltq
	salq	$2, %rax	#, D.21083
	movq	%rax, %rdi	# D.21083,
	call	malloc	#
	movq	%rax, (%rbx)	# D.21085, *_98
	movq	(%rbx), %rax	# *_98, D.21089
	testq	%rax, %rax	# D.21089
	jne	.L21	#,
	.loc 1 133 0
	movl	$.LC1, %edi	#,
	call	no_mem_exit	#
.L21:
	.loc 1 134 0
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.21
	movl	-28(%rbp), %edx	# list, tmp254
	movslq	%edx, %rdx	# tmp254, D.21083
	salq	$3, %rdx	#, D.21083
	leaq	(%rax,%rdx), %rbx	#, D.21088
	movq	img(%rip), %rax	# img, img.22
	movl	36(%rax), %eax	# img.22_110->max_num_references, D.21082
	addl	$1, %eax	#, D.21082
	cltq
	salq	$2, %rax	#, D.21083
	movq	%rax, %rdi	# D.21083,
	call	malloc	#
	movq	%rax, (%rbx)	# D.21085, *_109
	movq	(%rbx), %rax	# *_109, D.21089
	testq	%rax, %rax	# D.21089
	jne	.L22	#,
	.loc 1 135 0
	movl	$.LC2, %edi	#,
	call	no_mem_exit	#
.L22:
	.loc 1 136 0
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.23
	movl	-28(%rbp), %edx	# list, tmp256
	movslq	%edx, %rdx	# tmp256, D.21083
	salq	$3, %rdx	#, D.21083
	leaq	(%rax,%rdx), %rbx	#, D.21088
	movq	img(%rip), %rax	# img, img.24
	movl	36(%rax), %eax	# img.24_121->max_num_references, D.21082
	addl	$1, %eax	#, D.21082
	cltq
	salq	$2, %rax	#, D.21083
	movq	%rax, %rdi	# D.21083,
	call	malloc	#
	movq	%rax, (%rbx)	# D.21085, *_120
	movq	(%rbx), %rax	# *_120, D.21089
	testq	%rax, %rax	# D.21089
	jne	.L23	#,
	.loc 1 137 0
	movl	$.LC3, %edi	#,
	call	no_mem_exit	#
.L23:
	.loc 1 138 0
	movq	pos_00(%rip), %rax	# pos_00, pos_00.25
	movl	-28(%rbp), %edx	# list, tmp258
	movslq	%edx, %rdx	# tmp258, D.21083
	salq	$3, %rdx	#, D.21083
	leaq	(%rax,%rdx), %rbx	#, D.21088
	movq	img(%rip), %rax	# img, img.26
	movl	36(%rax), %eax	# img.26_132->max_num_references, D.21082
	addl	$1, %eax	#, D.21082
	cltq
	salq	$2, %rax	#, D.21083
	movq	%rax, %rdi	# D.21083,
	call	malloc	#
	movq	%rax, (%rbx)	# D.21085, *_131
	movq	(%rbx), %rax	# *_131, D.21089
	testq	%rax, %rax	# D.21089
	jne	.L24	#,
	.loc 1 139 0
	movl	$.LC4, %edi	#,
	call	no_mem_exit	#
.L24:
	.loc 1 140 0
	movq	max_search_range(%rip), %rax	# max_search_range, max_search_range.27
	movl	-28(%rbp), %edx	# list, tmp260
	movslq	%edx, %rdx	# tmp260, D.21083
	salq	$3, %rdx	#, D.21083
	leaq	(%rax,%rdx), %rbx	#, D.21088
	movq	img(%rip), %rax	# img, img.28
	movl	36(%rax), %eax	# img.28_143->max_num_references, D.21082
	addl	$1, %eax	#, D.21082
	cltq
	salq	$2, %rax	#, D.21083
	movq	%rax, %rdi	# D.21083,
	call	malloc	#
	movq	%rax, (%rbx)	# D.21085, *_142
	movq	(%rbx), %rax	# *_142, D.21089
	testq	%rax, %rax	# D.21089
	jne	.L25	#,
	.loc 1 141 0
	movl	$.LC5, %edi	#,
	call	no_mem_exit	#
.L25:
	.loc 1 130 0
	addl	$1, -28(%rbp)	#, list
.L20:
	.loc 1 130 0 is_stmt 0 discriminator 1
	cmpl	$1, -28(%rbp)	#, list
	jle	.L26	#,
	.loc 1 145 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.29
	movl	2436(%rax), %eax	# input.29_151->full_search, D.21082
	cmpl	$2, %eax	#, D.21082
	jne	.L27	#,
	.loc 1 147 0
	movl	$0, -28(%rbp)	#, list
	jmp	.L28	#
.L31:
	.loc 1 148 0
	movl	$0, -40(%rbp)	#, i
	jmp	.L29	#
.L30:
	.loc 1 149 0 discriminator 2
	movq	max_search_range(%rip), %rax	# max_search_range, max_search_range.30
	movl	-28(%rbp), %edx	# list, tmp262
	movslq	%edx, %rdx	# tmp262, D.21083
	salq	$3, %rdx	#, D.21083
	addq	%rdx, %rax	# D.21083, D.21088
	movq	(%rax), %rax	# *_160, D.21089
	movl	-40(%rbp), %edx	# i, tmp263
	movslq	%edx, %rdx	# tmp263, D.21083
	salq	$2, %rdx	#, D.21083
	addq	%rax, %rdx	# D.21089, D.21089
	movl	-24(%rbp), %eax	# search_range, tmp264
	movl	%eax, (%rdx)	# tmp264, *_164
	.loc 1 148 0 discriminator 2
	addl	$1, -40(%rbp)	#, i
.L29:
	.loc 1 148 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.31
	movl	36(%rax), %eax	# img.31_155->max_num_references, D.21082
	cmpl	-40(%rbp), %eax	# i, D.21082
	jge	.L30	#,
	.loc 1 147 0 is_stmt 1
	addl	$1, -28(%rbp)	#, list
.L28:
	.loc 1 147 0 is_stmt 0 discriminator 1
	cmpl	$1, -28(%rbp)	#, list
	jle	.L31	#,
	jmp	.L1	#
.L27:
	.loc 1 153 0 is_stmt 1
	movl	$0, -28(%rbp)	#, list
	jmp	.L33	#
.L36:
	.loc 1 155 0
	movq	max_search_range(%rip), %rax	# max_search_range, max_search_range.32
	movl	-28(%rbp), %edx	# list, tmp265
	movslq	%edx, %rdx	# tmp265, D.21083
	salq	$3, %rdx	#, D.21083
	addq	%rdx, %rax	# D.21083, D.21088
	movq	(%rax), %rdx	# *_171, D.21089
	movq	max_search_range(%rip), %rax	# max_search_range, max_search_range.33
	movl	-28(%rbp), %ecx	# list, tmp266
	movslq	%ecx, %rcx	# tmp266, D.21083
	salq	$3, %rcx	#, D.21083
	addq	%rcx, %rax	# D.21083, D.21088
	movq	(%rax), %rcx	# *_176, D.21089
	movq	img(%rip), %rax	# img, img.34
	movl	36(%rax), %eax	# img.34_178->max_num_references, D.21082
	cltq
	salq	$2, %rax	#, D.21083
	addq	%rcx, %rax	# D.21089, D.21089
	movl	-24(%rbp), %ecx	# search_range, tmp267
	movl	%ecx, (%rax)	# tmp267, *_182
	movl	(%rax), %eax	# *_182, D.21082
	movl	%eax, (%rdx)	# D.21082, *_172
	.loc 1 156 0
	movl	$1, -40(%rbp)	#, i
	jmp	.L34	#
.L35:
	.loc 1 156 0 is_stmt 0 discriminator 2
	movq	max_search_range(%rip), %rax	# max_search_range, max_search_range.35
	movl	-28(%rbp), %edx	# list, tmp268
	movslq	%edx, %rdx	# tmp268, D.21083
	salq	$3, %rdx	#, D.21083
	addq	%rdx, %rax	# D.21083, D.21088
	movq	(%rax), %rax	# *_190, D.21089
	movl	-40(%rbp), %edx	# i, tmp269
	movslq	%edx, %rdx	# tmp269, D.21083
	salq	$2, %rdx	#, D.21083
	addq	%rax, %rdx	# D.21089, D.21089
	movl	-24(%rbp), %eax	# search_range, tmp270
	movl	%eax, %ecx	# tmp270, tmp271
	shrl	$31, %ecx	#, tmp271
	addl	%ecx, %eax	# tmp271, tmp272
	sarl	%eax	# tmp273
	movl	%eax, (%rdx)	# D.21082, *_194
	addl	$1, -40(%rbp)	#, i
.L34:
	.loc 1 156 0 discriminator 1
	movq	img(%rip), %rax	# img, img.36
	movl	36(%rax), %eax	# img.36_185->max_num_references, D.21082
	cmpl	-40(%rbp), %eax	# i, D.21082
	jg	.L35	#,
	.loc 1 153 0 is_stmt 1
	addl	$1, -28(%rbp)	#, list
.L33:
	.loc 1 153 0 is_stmt 0 discriminator 1
	cmpl	$1, -28(%rbp)	#, list
	jle	.L36	#,
.L1:
	.loc 1 160 0 is_stmt 1
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	InitializeFastFullIntegerSearch, .-InitializeFastFullIntegerSearch
	.globl	ClearFastFullIntegerSearch
	.type	ClearFastFullIntegerSearch, @function
ClearFastFullIntegerSearch:
.LFB3:
	.loc 1 172 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 175 0
	movl	$0, -4(%rbp)	#, list
	jmp	.L38	#
.L45:
	.loc 1 177 0
	movl	$0, -16(%rbp)	#, i
	jmp	.L39	#
.L44:
	.loc 1 179 0
	movl	$1, -12(%rbp)	#, j
	jmp	.L40	#
.L43:
	.loc 1 181 0
	movl	$0, -8(%rbp)	#, k
	jmp	.L41	#
.L42:
	.loc 1 183 0 discriminator 2
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.37
	movl	-4(%rbp), %edx	# list, tmp136
	movslq	%edx, %rdx	# tmp136, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21098
	movq	(%rax), %rax	# *_15, D.21099
	movl	-16(%rbp), %edx	# i, tmp137
	movslq	%edx, %rdx	# tmp137, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21099
	movq	(%rax), %rax	# *_19, D.21100
	movl	-12(%rbp), %edx	# j, tmp138
	movslq	%edx, %rdx	# tmp138, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21100
	movq	(%rax), %rax	# *_23, D.21101
	movl	-8(%rbp), %edx	# k, tmp139
	movslq	%edx, %rdx	# tmp139, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21101
	movq	(%rax), %rax	# *_27, D.21102
	movq	%rax, %rdi	# D.21102,
	call	free	#
	.loc 1 181 0 discriminator 2
	addl	$1, -8(%rbp)	#, k
.L41:
	.loc 1 181 0 is_stmt 0 discriminator 1
	cmpl	$15, -8(%rbp)	#, k
	jle	.L42	#,
	.loc 1 185 0 is_stmt 1
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.38
	movl	-4(%rbp), %edx	# list, tmp140
	movslq	%edx, %rdx	# tmp140, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21098
	movq	(%rax), %rax	# *_33, D.21099
	movl	-16(%rbp), %edx	# i, tmp141
	movslq	%edx, %rdx	# tmp141, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21099
	movq	(%rax), %rax	# *_37, D.21100
	movl	-12(%rbp), %edx	# j, tmp142
	movslq	%edx, %rdx	# tmp142, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21100
	movq	(%rax), %rax	# *_41, D.21101
	movq	%rax, %rdi	# D.21101,
	call	free	#
	.loc 1 179 0
	addl	$1, -12(%rbp)	#, j
.L40:
	.loc 1 179 0 is_stmt 0 discriminator 1
	cmpl	$7, -12(%rbp)	#, j
	jle	.L43	#,
	.loc 1 187 0 is_stmt 1
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.39
	movl	-4(%rbp), %edx	# list, tmp143
	movslq	%edx, %rdx	# tmp143, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21098
	movq	(%rax), %rax	# *_47, D.21099
	movl	-16(%rbp), %edx	# i, tmp144
	movslq	%edx, %rdx	# tmp144, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21099
	movq	(%rax), %rax	# *_51, D.21100
	movq	%rax, %rdi	# D.21100,
	call	free	#
	.loc 1 177 0
	addl	$1, -16(%rbp)	#, i
.L39:
	.loc 1 177 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.40
	movl	36(%rax), %eax	# img.40_8->max_num_references, D.21096
	cmpl	-16(%rbp), %eax	# i, D.21096
	jge	.L44	#,
	.loc 1 189 0 is_stmt 1
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.41
	movl	-4(%rbp), %edx	# list, tmp145
	movslq	%edx, %rdx	# tmp145, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21098
	movq	(%rax), %rax	# *_57, D.21099
	movq	%rax, %rdi	# D.21099,
	call	free	#
	.loc 1 175 0
	addl	$1, -4(%rbp)	#, list
.L38:
	.loc 1 175 0 is_stmt 0 discriminator 1
	cmpl	$1, -4(%rbp)	#, list
	jle	.L45	#,
	.loc 1 191 0 is_stmt 1
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.42
	movq	%rax, %rdi	# BlockSAD.42,
	call	free	#
	.loc 1 193 0
	movl	$0, -4(%rbp)	#, list
	jmp	.L46	#
.L47:
	.loc 1 195 0 discriminator 2
	movq	search_setup_done(%rip), %rax	# search_setup_done, search_setup_done.43
	movl	-4(%rbp), %edx	# list, tmp146
	movslq	%edx, %rdx	# tmp146, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21101
	movq	(%rax), %rax	# *_65, D.21102
	movq	%rax, %rdi	# D.21102,
	call	free	#
	.loc 1 196 0 discriminator 2
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.44
	movl	-4(%rbp), %edx	# list, tmp147
	movslq	%edx, %rdx	# tmp147, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21101
	movq	(%rax), %rax	# *_70, D.21102
	movq	%rax, %rdi	# D.21102,
	call	free	#
	.loc 1 197 0 discriminator 2
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.45
	movl	-4(%rbp), %edx	# list, tmp148
	movslq	%edx, %rdx	# tmp148, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21101
	movq	(%rax), %rax	# *_75, D.21102
	movq	%rax, %rdi	# D.21102,
	call	free	#
	.loc 1 198 0 discriminator 2
	movq	pos_00(%rip), %rax	# pos_00, pos_00.46
	movl	-4(%rbp), %edx	# list, tmp149
	movslq	%edx, %rdx	# tmp149, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21101
	movq	(%rax), %rax	# *_80, D.21102
	movq	%rax, %rdi	# D.21102,
	call	free	#
	.loc 1 199 0 discriminator 2
	movq	max_search_range(%rip), %rax	# max_search_range, max_search_range.47
	movl	-4(%rbp), %edx	# list, tmp150
	movslq	%edx, %rdx	# tmp150, D.21097
	salq	$3, %rdx	#, D.21097
	addq	%rdx, %rax	# D.21097, D.21101
	movq	(%rax), %rax	# *_85, D.21102
	movq	%rax, %rdi	# D.21102,
	call	free	#
	.loc 1 193 0 discriminator 2
	addl	$1, -4(%rbp)	#, list
.L46:
	.loc 1 193 0 is_stmt 0 discriminator 1
	cmpl	$1, -4(%rbp)	#, list
	jle	.L47	#,
	.loc 1 201 0 is_stmt 1
	movq	search_setup_done(%rip), %rax	# search_setup_done, search_setup_done.48
	movq	%rax, %rdi	# search_setup_done.48,
	call	free	#
	.loc 1 202 0
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.49
	movq	%rax, %rdi	# search_center_x.49,
	call	free	#
	.loc 1 203 0
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.50
	movq	%rax, %rdi	# search_center_y.50,
	call	free	#
	.loc 1 204 0
	movq	pos_00(%rip), %rax	# pos_00, pos_00.51
	movq	%rax, %rdi	# pos_00.51,
	call	free	#
	.loc 1 205 0
	movq	max_search_range(%rip), %rax	# max_search_range, max_search_range.52
	movq	%rax, %rdi	# max_search_range.52,
	call	free	#
	.loc 1 207 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	ClearFastFullIntegerSearch, .-ClearFastFullIntegerSearch
	.globl	ResetFastFullIntegerSearch
	.type	ResetFastFullIntegerSearch, @function
ResetFastFullIntegerSearch:
.LFB4:
	.loc 1 219 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 222 0
	movl	$0, -4(%rbp)	#, list
	jmp	.L49	#
.L52:
	.loc 1 223 0
	movl	$0, -8(%rbp)	#, i
	jmp	.L50	#
.L51:
	.loc 1 224 0 discriminator 2
	movq	search_setup_done(%rip), %rax	# search_setup_done, search_setup_done.53
	movl	-4(%rbp), %edx	# list, tmp69
	movslq	%edx, %rdx	# tmp69, D.21104
	salq	$3, %rdx	#, D.21104
	addq	%rdx, %rax	# D.21104, D.21105
	movq	(%rax), %rax	# *_10, D.21106
	movl	-8(%rbp), %edx	# i, tmp70
	movslq	%edx, %rdx	# tmp70, D.21104
	salq	$2, %rdx	#, D.21104
	addq	%rdx, %rax	# D.21104, D.21106
	movl	$0, (%rax)	#, *_14
	.loc 1 223 0 discriminator 2
	addl	$1, -8(%rbp)	#, i
.L50:
	.loc 1 223 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.54
	movl	36(%rax), %eax	# img.54_5->max_num_references, D.21103
	cmpl	-8(%rbp), %eax	# i, D.21103
	jge	.L51	#,
	.loc 1 222 0 is_stmt 1
	addl	$1, -4(%rbp)	#, list
.L49:
	.loc 1 222 0 is_stmt 0 discriminator 1
	cmpl	$1, -4(%rbp)	#, list
	jle	.L52	#,
	.loc 1 225 0 is_stmt 1
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	ResetFastFullIntegerSearch, .-ResetFastFullIntegerSearch
	.globl	SetupLargerBlocks
	.type	SetupLargerBlocks, @function
SetupLargerBlocks:
.LFB5:
	.loc 1 235 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movl	%edi, -60(%rbp)	# list, list
	movl	%esi, -64(%rbp)	# refindex, refindex
	movl	%edx, -68(%rbp)	# max_pos, max_pos
	.loc 1 243 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.55
	movl	-60(%rbp), %edx	# list, tmp470
	movslq	%edx, %rdx	# tmp470, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_30, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp471
	movslq	%edx, %rdx	# tmp471, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_35, D.21110
	movq	48(%rax), %rax	# MEM[(int * * *)_36 + 48B], tmp472
	movq	%rax, -48(%rbp)	# tmp472, _bo
	.loc 1 244 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.56
	movl	-60(%rbp), %edx	# list, tmp473
	movslq	%edx, %rdx	# tmp473, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_41, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp474
	movslq	%edx, %rdx	# tmp474, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_45, D.21110
	movq	56(%rax), %rax	# MEM[(int * * *)_46 + 56B], tmp475
	movq	%rax, -40(%rbp)	# tmp475, _bi
	.loc 1 245 0
	movq	-40(%rbp), %rax	# _bi, tmp479
	addq	$32, %rax	#, tmp478
	movq	%rax, -32(%rbp)	# tmp478, _bj
	.loc 1 246 0
	movq	-48(%rbp), %rax	# _bo, tmp480
	movq	(%rax), %rbx	# *_bo_37, _o
	movq	-40(%rbp), %rax	# _bi, tmp481
	movq	(%rax), %r12	# *_bi_47, _i
	movq	-32(%rbp), %rax	# _bj, tmp482
	movq	(%rax), %r13	# *_bj_48, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L54	#
.L55:
	.loc 1 246 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp483
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp484
	movslq	%edx, %rdx	# tmp484, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_59, D.21112
	movl	-52(%rbp), %edx	# pos, tmp485
	movslq	%edx, %rdx	# tmp485, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_63, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_56
	addl	$1, -52(%rbp)	#, pos
.L54:
	.loc 1 246 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp486
	cmpl	-68(%rbp), %eax	# max_pos, tmp486
	jl	.L55	#,
	.loc 1 246 0 discriminator 3
	addq	$8, -48(%rbp)	#, _bo
	addq	$8, -40(%rbp)	#, _bi
	addq	$8, -32(%rbp)	#, _bj
	.loc 1 247 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp487
	movq	(%rax), %rbx	# *_bo_67, _o
	movq	-40(%rbp), %rax	# _bi, tmp488
	movq	(%rax), %r12	# *_bi_68, _i
	movq	-32(%rbp), %rax	# _bj, tmp489
	movq	(%rax), %r13	# *_bj_69, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L56	#
.L57:
	.loc 1 247 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp490
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp491
	movslq	%edx, %rdx	# tmp491, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_79, D.21112
	movl	-52(%rbp), %edx	# pos, tmp492
	movslq	%edx, %rdx	# tmp492, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_83, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_76
	addl	$1, -52(%rbp)	#, pos
.L56:
	.loc 1 247 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp493
	cmpl	-68(%rbp), %eax	# max_pos, tmp493
	jl	.L57	#,
	.loc 1 247 0 discriminator 3
	addq	$8, -48(%rbp)	#, _bo
	addq	$8, -40(%rbp)	#, _bi
	addq	$8, -32(%rbp)	#, _bj
	.loc 1 248 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp494
	movq	(%rax), %rbx	# *_bo_87, _o
	movq	-40(%rbp), %rax	# _bi, tmp495
	movq	(%rax), %r12	# *_bi_88, _i
	movq	-32(%rbp), %rax	# _bj, tmp496
	movq	(%rax), %r13	# *_bj_89, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L58	#
.L59:
	.loc 1 248 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp497
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp498
	movslq	%edx, %rdx	# tmp498, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_99, D.21112
	movl	-52(%rbp), %edx	# pos, tmp499
	movslq	%edx, %rdx	# tmp499, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_103, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_96
	addl	$1, -52(%rbp)	#, pos
.L58:
	.loc 1 248 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp500
	cmpl	-68(%rbp), %eax	# max_pos, tmp500
	jl	.L59	#,
	.loc 1 248 0 discriminator 3
	addq	$8, -48(%rbp)	#, _bo
	addq	$8, -40(%rbp)	#, _bi
	addq	$8, -32(%rbp)	#, _bj
	.loc 1 249 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp501
	movq	(%rax), %rbx	# *_bo_107, _o
	movq	-40(%rbp), %rax	# _bi, tmp502
	movq	(%rax), %r12	# *_bi_108, _i
	movq	-32(%rbp), %rax	# _bj, tmp503
	movq	(%rax), %r13	# *_bj_109, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L60	#
.L61:
	.loc 1 249 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp504
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp505
	movslq	%edx, %rdx	# tmp505, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_119, D.21112
	movl	-52(%rbp), %edx	# pos, tmp506
	movslq	%edx, %rdx	# tmp506, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_123, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_116
	addl	$1, -52(%rbp)	#, pos
.L60:
	.loc 1 249 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp507
	cmpl	-68(%rbp), %eax	# max_pos, tmp507
	jl	.L61	#,
	.loc 1 249 0 discriminator 3
	addq	$40, -48(%rbp)	#, _bo
	addq	$40, -40(%rbp)	#, _bi
	addq	$40, -32(%rbp)	#, _bj
	.loc 1 250 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp508
	movq	(%rax), %rbx	# *_bo_127, _o
	movq	-40(%rbp), %rax	# _bi, tmp509
	movq	(%rax), %r12	# *_bi_128, _i
	movq	-32(%rbp), %rax	# _bj, tmp510
	movq	(%rax), %r13	# *_bj_129, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L62	#
.L63:
	.loc 1 250 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp511
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp512
	movslq	%edx, %rdx	# tmp512, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_139, D.21112
	movl	-52(%rbp), %edx	# pos, tmp513
	movslq	%edx, %rdx	# tmp513, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_143, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_136
	addl	$1, -52(%rbp)	#, pos
.L62:
	.loc 1 250 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp514
	cmpl	-68(%rbp), %eax	# max_pos, tmp514
	jl	.L63	#,
	.loc 1 250 0 discriminator 3
	addq	$8, -48(%rbp)	#, _bo
	addq	$8, -40(%rbp)	#, _bi
	addq	$8, -32(%rbp)	#, _bj
	.loc 1 251 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp515
	movq	(%rax), %rbx	# *_bo_147, _o
	movq	-40(%rbp), %rax	# _bi, tmp516
	movq	(%rax), %r12	# *_bi_148, _i
	movq	-32(%rbp), %rax	# _bj, tmp517
	movq	(%rax), %r13	# *_bj_149, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L64	#
.L65:
	.loc 1 251 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp518
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp519
	movslq	%edx, %rdx	# tmp519, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_159, D.21112
	movl	-52(%rbp), %edx	# pos, tmp520
	movslq	%edx, %rdx	# tmp520, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_163, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_156
	addl	$1, -52(%rbp)	#, pos
.L64:
	.loc 1 251 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp521
	cmpl	-68(%rbp), %eax	# max_pos, tmp521
	jl	.L65	#,
	.loc 1 251 0 discriminator 3
	addq	$8, -48(%rbp)	#, _bo
	addq	$8, -40(%rbp)	#, _bi
	addq	$8, -32(%rbp)	#, _bj
	.loc 1 252 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp522
	movq	(%rax), %rbx	# *_bo_167, _o
	movq	-40(%rbp), %rax	# _bi, tmp523
	movq	(%rax), %r12	# *_bi_168, _i
	movq	-32(%rbp), %rax	# _bj, tmp524
	movq	(%rax), %r13	# *_bj_169, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L66	#
.L67:
	.loc 1 252 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp525
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp526
	movslq	%edx, %rdx	# tmp526, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_179, D.21112
	movl	-52(%rbp), %edx	# pos, tmp527
	movslq	%edx, %rdx	# tmp527, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_183, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_176
	addl	$1, -52(%rbp)	#, pos
.L66:
	.loc 1 252 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp528
	cmpl	-68(%rbp), %eax	# max_pos, tmp528
	jl	.L67	#,
	.loc 1 252 0 discriminator 3
	addq	$8, -48(%rbp)	#, _bo
	addq	$8, -40(%rbp)	#, _bi
	addq	$8, -32(%rbp)	#, _bj
	.loc 1 253 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp529
	movq	(%rax), %rbx	# *_bo_187, _o
	movq	-40(%rbp), %rax	# _bi, tmp530
	movq	(%rax), %r12	# *_bi_188, _i
	movq	-32(%rbp), %rax	# _bj, tmp531
	movq	(%rax), %r13	# *_bj_189, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L68	#
.L69:
	.loc 1 253 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp532
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp533
	movslq	%edx, %rdx	# tmp533, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_199, D.21112
	movl	-52(%rbp), %edx	# pos, tmp534
	movslq	%edx, %rdx	# tmp534, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_203, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_196
	addl	$1, -52(%rbp)	#, pos
.L68:
	.loc 1 253 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp535
	cmpl	-68(%rbp), %eax	# max_pos, tmp535
	jl	.L69	#,
	.loc 1 256 0 is_stmt 1
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.57
	movl	-60(%rbp), %edx	# list, tmp536
	movslq	%edx, %rdx	# tmp536, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_210, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp537
	movslq	%edx, %rdx	# tmp537, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_214, D.21110
	movq	40(%rax), %rax	# MEM[(int * * *)_215 + 40B], tmp538
	movq	%rax, -48(%rbp)	# tmp538, _bo
	.loc 1 257 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.58
	movl	-60(%rbp), %edx	# list, tmp539
	movslq	%edx, %rdx	# tmp539, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_220, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp540
	movslq	%edx, %rdx	# tmp540, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_224, D.21110
	movq	56(%rax), %rax	# MEM[(int * * *)_225 + 56B], tmp541
	movq	%rax, -40(%rbp)	# tmp541, _bi
	.loc 1 258 0
	movq	-40(%rbp), %rax	# _bi, tmp545
	addq	$8, %rax	#, tmp544
	movq	%rax, -32(%rbp)	# tmp544, _bj
	.loc 1 259 0
	movq	-48(%rbp), %rax	# _bo, tmp546
	movq	(%rax), %rbx	# *_bo_216, _o
	movq	-40(%rbp), %rax	# _bi, tmp547
	movq	(%rax), %r12	# *_bi_226, _i
	movq	-32(%rbp), %rax	# _bj, tmp548
	movq	(%rax), %r13	# *_bj_227, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L70	#
.L71:
	.loc 1 259 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp549
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp550
	movslq	%edx, %rdx	# tmp550, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_237, D.21112
	movl	-52(%rbp), %edx	# pos, tmp551
	movslq	%edx, %rdx	# tmp551, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_241, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_234
	addl	$1, -52(%rbp)	#, pos
.L70:
	.loc 1 259 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp552
	cmpl	-68(%rbp), %eax	# max_pos, tmp552
	jl	.L71	#,
	.loc 1 259 0 discriminator 3
	addq	$16, -48(%rbp)	#, _bo
	addq	$16, -40(%rbp)	#, _bi
	addq	$16, -32(%rbp)	#, _bj
	.loc 1 260 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp553
	movq	(%rax), %rbx	# *_bo_245, _o
	movq	-40(%rbp), %rax	# _bi, tmp554
	movq	(%rax), %r12	# *_bi_246, _i
	movq	-32(%rbp), %rax	# _bj, tmp555
	movq	(%rax), %r13	# *_bj_247, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L72	#
.L73:
	.loc 1 260 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp556
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp557
	movslq	%edx, %rdx	# tmp557, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_257, D.21112
	movl	-52(%rbp), %edx	# pos, tmp558
	movslq	%edx, %rdx	# tmp558, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_261, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_254
	addl	$1, -52(%rbp)	#, pos
.L72:
	.loc 1 260 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp559
	cmpl	-68(%rbp), %eax	# max_pos, tmp559
	jl	.L73	#,
	.loc 1 260 0 discriminator 3
	addq	$16, -48(%rbp)	#, _bo
	addq	$16, -40(%rbp)	#, _bi
	addq	$16, -32(%rbp)	#, _bj
	.loc 1 261 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp560
	movq	(%rax), %rbx	# *_bo_265, _o
	movq	-40(%rbp), %rax	# _bi, tmp561
	movq	(%rax), %r12	# *_bi_266, _i
	movq	-32(%rbp), %rax	# _bj, tmp562
	movq	(%rax), %r13	# *_bj_267, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L74	#
.L75:
	.loc 1 261 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp563
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp564
	movslq	%edx, %rdx	# tmp564, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_277, D.21112
	movl	-52(%rbp), %edx	# pos, tmp565
	movslq	%edx, %rdx	# tmp565, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_281, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_274
	addl	$1, -52(%rbp)	#, pos
.L74:
	.loc 1 261 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp566
	cmpl	-68(%rbp), %eax	# max_pos, tmp566
	jl	.L75	#,
	.loc 1 261 0 discriminator 3
	addq	$16, -48(%rbp)	#, _bo
	addq	$16, -40(%rbp)	#, _bi
	addq	$16, -32(%rbp)	#, _bj
	.loc 1 262 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp567
	movq	(%rax), %rbx	# *_bo_285, _o
	movq	-40(%rbp), %rax	# _bi, tmp568
	movq	(%rax), %r12	# *_bi_286, _i
	movq	-32(%rbp), %rax	# _bj, tmp569
	movq	(%rax), %r13	# *_bj_287, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L76	#
.L77:
	.loc 1 262 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp570
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp571
	movslq	%edx, %rdx	# tmp571, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_297, D.21112
	movl	-52(%rbp), %edx	# pos, tmp572
	movslq	%edx, %rdx	# tmp572, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_301, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_294
	addl	$1, -52(%rbp)	#, pos
.L76:
	.loc 1 262 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp573
	cmpl	-68(%rbp), %eax	# max_pos, tmp573
	jl	.L77	#,
	.loc 1 262 0 discriminator 3
	addq	$16, -48(%rbp)	#, _bo
	addq	$16, -40(%rbp)	#, _bi
	addq	$16, -32(%rbp)	#, _bj
	.loc 1 263 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp574
	movq	(%rax), %rbx	# *_bo_305, _o
	movq	-40(%rbp), %rax	# _bi, tmp575
	movq	(%rax), %r12	# *_bi_306, _i
	movq	-32(%rbp), %rax	# _bj, tmp576
	movq	(%rax), %r13	# *_bj_307, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L78	#
.L79:
	.loc 1 263 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp577
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp578
	movslq	%edx, %rdx	# tmp578, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_317, D.21112
	movl	-52(%rbp), %edx	# pos, tmp579
	movslq	%edx, %rdx	# tmp579, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_321, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_314
	addl	$1, -52(%rbp)	#, pos
.L78:
	.loc 1 263 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp580
	cmpl	-68(%rbp), %eax	# max_pos, tmp580
	jl	.L79	#,
	.loc 1 263 0 discriminator 3
	addq	$16, -48(%rbp)	#, _bo
	addq	$16, -40(%rbp)	#, _bi
	addq	$16, -32(%rbp)	#, _bj
	.loc 1 264 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp581
	movq	(%rax), %rbx	# *_bo_325, _o
	movq	-40(%rbp), %rax	# _bi, tmp582
	movq	(%rax), %r12	# *_bi_326, _i
	movq	-32(%rbp), %rax	# _bj, tmp583
	movq	(%rax), %r13	# *_bj_327, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L80	#
.L81:
	.loc 1 264 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp584
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp585
	movslq	%edx, %rdx	# tmp585, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_337, D.21112
	movl	-52(%rbp), %edx	# pos, tmp586
	movslq	%edx, %rdx	# tmp586, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_341, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_334
	addl	$1, -52(%rbp)	#, pos
.L80:
	.loc 1 264 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp587
	cmpl	-68(%rbp), %eax	# max_pos, tmp587
	jl	.L81	#,
	.loc 1 264 0 discriminator 3
	addq	$16, -48(%rbp)	#, _bo
	addq	$16, -40(%rbp)	#, _bi
	addq	$16, -32(%rbp)	#, _bj
	.loc 1 265 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp588
	movq	(%rax), %rbx	# *_bo_345, _o
	movq	-40(%rbp), %rax	# _bi, tmp589
	movq	(%rax), %r12	# *_bi_346, _i
	movq	-32(%rbp), %rax	# _bj, tmp590
	movq	(%rax), %r13	# *_bj_347, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L82	#
.L83:
	.loc 1 265 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp591
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp592
	movslq	%edx, %rdx	# tmp592, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_357, D.21112
	movl	-52(%rbp), %edx	# pos, tmp593
	movslq	%edx, %rdx	# tmp593, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_361, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_354
	addl	$1, -52(%rbp)	#, pos
.L82:
	.loc 1 265 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp594
	cmpl	-68(%rbp), %eax	# max_pos, tmp594
	jl	.L83	#,
	.loc 1 265 0 discriminator 3
	addq	$16, -48(%rbp)	#, _bo
	addq	$16, -40(%rbp)	#, _bi
	addq	$16, -32(%rbp)	#, _bj
	.loc 1 266 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp595
	movq	(%rax), %rbx	# *_bo_365, _o
	movq	-40(%rbp), %rax	# _bi, tmp596
	movq	(%rax), %r12	# *_bi_366, _i
	movq	-32(%rbp), %rax	# _bj, tmp597
	movq	(%rax), %r13	# *_bj_367, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L84	#
.L85:
	.loc 1 266 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp598
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp599
	movslq	%edx, %rdx	# tmp599, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_377, D.21112
	movl	-52(%rbp), %edx	# pos, tmp600
	movslq	%edx, %rdx	# tmp600, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_381, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_374
	addl	$1, -52(%rbp)	#, pos
.L84:
	.loc 1 266 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp601
	cmpl	-68(%rbp), %eax	# max_pos, tmp601
	jl	.L85	#,
	.loc 1 269 0 is_stmt 1
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.59
	movl	-60(%rbp), %edx	# list, tmp602
	movslq	%edx, %rdx	# tmp602, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_388, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp603
	movslq	%edx, %rdx	# tmp603, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_392, D.21110
	movq	32(%rax), %rax	# MEM[(int * * *)_393 + 32B], tmp604
	movq	%rax, -48(%rbp)	# tmp604, _bo
	.loc 1 270 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.60
	movl	-60(%rbp), %edx	# list, tmp605
	movslq	%edx, %rdx	# tmp605, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_398, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp606
	movslq	%edx, %rdx	# tmp606, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_402, D.21110
	movq	48(%rax), %rax	# MEM[(int * * *)_403 + 48B], tmp607
	movq	%rax, -40(%rbp)	# tmp607, _bi
	.loc 1 271 0
	movq	-40(%rbp), %rax	# _bi, tmp611
	addq	$8, %rax	#, tmp610
	movq	%rax, -32(%rbp)	# tmp610, _bj
	.loc 1 272 0
	movq	-48(%rbp), %rax	# _bo, tmp612
	movq	(%rax), %rbx	# *_bo_394, _o
	movq	-40(%rbp), %rax	# _bi, tmp613
	movq	(%rax), %r12	# *_bi_404, _i
	movq	-32(%rbp), %rax	# _bj, tmp614
	movq	(%rax), %r13	# *_bj_405, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L86	#
.L87:
	.loc 1 272 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp615
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp616
	movslq	%edx, %rdx	# tmp616, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_415, D.21112
	movl	-52(%rbp), %edx	# pos, tmp617
	movslq	%edx, %rdx	# tmp617, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_419, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_412
	addl	$1, -52(%rbp)	#, pos
.L86:
	.loc 1 272 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp618
	cmpl	-68(%rbp), %eax	# max_pos, tmp618
	jl	.L87	#,
	.loc 1 272 0 discriminator 3
	addq	$16, -48(%rbp)	#, _bo
	addq	$16, -40(%rbp)	#, _bi
	addq	$16, -32(%rbp)	#, _bj
	.loc 1 273 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp619
	movq	(%rax), %rbx	# *_bo_423, _o
	movq	-40(%rbp), %rax	# _bi, tmp620
	movq	(%rax), %r12	# *_bi_424, _i
	movq	-32(%rbp), %rax	# _bj, tmp621
	movq	(%rax), %r13	# *_bj_425, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L88	#
.L89:
	.loc 1 273 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp622
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp623
	movslq	%edx, %rdx	# tmp623, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_435, D.21112
	movl	-52(%rbp), %edx	# pos, tmp624
	movslq	%edx, %rdx	# tmp624, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_439, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_432
	addl	$1, -52(%rbp)	#, pos
.L88:
	.loc 1 273 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp625
	cmpl	-68(%rbp), %eax	# max_pos, tmp625
	jl	.L89	#,
	.loc 1 273 0 discriminator 3
	addq	$48, -48(%rbp)	#, _bo
	addq	$48, -40(%rbp)	#, _bi
	addq	$48, -32(%rbp)	#, _bj
	.loc 1 274 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp626
	movq	(%rax), %rbx	# *_bo_443, _o
	movq	-40(%rbp), %rax	# _bi, tmp627
	movq	(%rax), %r12	# *_bi_444, _i
	movq	-32(%rbp), %rax	# _bj, tmp628
	movq	(%rax), %r13	# *_bj_445, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L90	#
.L91:
	.loc 1 274 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp629
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp630
	movslq	%edx, %rdx	# tmp630, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_455, D.21112
	movl	-52(%rbp), %edx	# pos, tmp631
	movslq	%edx, %rdx	# tmp631, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_459, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_452
	addl	$1, -52(%rbp)	#, pos
.L90:
	.loc 1 274 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp632
	cmpl	-68(%rbp), %eax	# max_pos, tmp632
	jl	.L91	#,
	.loc 1 274 0 discriminator 3
	addq	$16, -48(%rbp)	#, _bo
	addq	$16, -40(%rbp)	#, _bi
	addq	$16, -32(%rbp)	#, _bj
	.loc 1 275 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp633
	movq	(%rax), %rbx	# *_bo_463, _o
	movq	-40(%rbp), %rax	# _bi, tmp634
	movq	(%rax), %r12	# *_bi_464, _i
	movq	-32(%rbp), %rax	# _bj, tmp635
	movq	(%rax), %r13	# *_bj_465, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L92	#
.L93:
	.loc 1 275 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp636
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp637
	movslq	%edx, %rdx	# tmp637, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_475, D.21112
	movl	-52(%rbp), %edx	# pos, tmp638
	movslq	%edx, %rdx	# tmp638, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_479, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_472
	addl	$1, -52(%rbp)	#, pos
.L92:
	.loc 1 275 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp639
	cmpl	-68(%rbp), %eax	# max_pos, tmp639
	jl	.L93	#,
	.loc 1 278 0 is_stmt 1
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.61
	movl	-60(%rbp), %edx	# list, tmp640
	movslq	%edx, %rdx	# tmp640, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_486, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp641
	movslq	%edx, %rdx	# tmp641, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_490, D.21110
	movq	24(%rax), %rax	# MEM[(int * * *)_491 + 24B], tmp642
	movq	%rax, -48(%rbp)	# tmp642, _bo
	.loc 1 279 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.62
	movl	-60(%rbp), %edx	# list, tmp643
	movslq	%edx, %rdx	# tmp643, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_496, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp644
	movslq	%edx, %rdx	# tmp644, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_500, D.21110
	movq	32(%rax), %rax	# MEM[(int * * *)_501 + 32B], tmp645
	movq	%rax, -40(%rbp)	# tmp645, _bi
	.loc 1 280 0
	movq	-40(%rbp), %rax	# _bi, tmp649
	addq	$64, %rax	#, tmp648
	movq	%rax, -32(%rbp)	# tmp648, _bj
	.loc 1 281 0
	movq	-48(%rbp), %rax	# _bo, tmp650
	movq	(%rax), %rbx	# *_bo_492, _o
	movq	-40(%rbp), %rax	# _bi, tmp651
	movq	(%rax), %r12	# *_bi_502, _i
	movq	-32(%rbp), %rax	# _bj, tmp652
	movq	(%rax), %r13	# *_bj_503, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L94	#
.L95:
	.loc 1 281 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp653
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp654
	movslq	%edx, %rdx	# tmp654, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_513, D.21112
	movl	-52(%rbp), %edx	# pos, tmp655
	movslq	%edx, %rdx	# tmp655, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_517, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_510
	addl	$1, -52(%rbp)	#, pos
.L94:
	.loc 1 281 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp656
	cmpl	-68(%rbp), %eax	# max_pos, tmp656
	jl	.L95	#,
	.loc 1 281 0 discriminator 3
	addq	$16, -48(%rbp)	#, _bo
	addq	$16, -40(%rbp)	#, _bi
	addq	$16, -32(%rbp)	#, _bj
	.loc 1 282 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp657
	movq	(%rax), %rbx	# *_bo_521, _o
	movq	-40(%rbp), %rax	# _bi, tmp658
	movq	(%rax), %r12	# *_bi_522, _i
	movq	-32(%rbp), %rax	# _bj, tmp659
	movq	(%rax), %r13	# *_bj_523, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L96	#
.L97:
	.loc 1 282 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp660
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp661
	movslq	%edx, %rdx	# tmp661, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_533, D.21112
	movl	-52(%rbp), %edx	# pos, tmp662
	movslq	%edx, %rdx	# tmp662, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_537, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_530
	addl	$1, -52(%rbp)	#, pos
.L96:
	.loc 1 282 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp663
	cmpl	-68(%rbp), %eax	# max_pos, tmp663
	jl	.L97	#,
	.loc 1 285 0 is_stmt 1
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.63
	movl	-60(%rbp), %edx	# list, tmp664
	movslq	%edx, %rdx	# tmp664, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_544, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp665
	movslq	%edx, %rdx	# tmp665, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_548, D.21110
	movq	16(%rax), %rax	# MEM[(int * * *)_549 + 16B], tmp666
	movq	%rax, -48(%rbp)	# tmp666, _bo
	.loc 1 286 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.64
	movl	-60(%rbp), %edx	# list, tmp667
	movslq	%edx, %rdx	# tmp667, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_554, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp668
	movslq	%edx, %rdx	# tmp668, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_558, D.21110
	movq	32(%rax), %rax	# MEM[(int * * *)_559 + 32B], tmp669
	movq	%rax, -40(%rbp)	# tmp669, _bi
	.loc 1 287 0
	movq	-40(%rbp), %rax	# _bi, tmp673
	addq	$16, %rax	#, tmp672
	movq	%rax, -32(%rbp)	# tmp672, _bj
	.loc 1 288 0
	movq	-48(%rbp), %rax	# _bo, tmp674
	movq	(%rax), %rbx	# *_bo_550, _o
	movq	-40(%rbp), %rax	# _bi, tmp675
	movq	(%rax), %r12	# *_bi_560, _i
	movq	-32(%rbp), %rax	# _bj, tmp676
	movq	(%rax), %r13	# *_bj_561, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L98	#
.L99:
	.loc 1 288 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp677
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp678
	movslq	%edx, %rdx	# tmp678, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_571, D.21112
	movl	-52(%rbp), %edx	# pos, tmp679
	movslq	%edx, %rdx	# tmp679, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_575, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_568
	addl	$1, -52(%rbp)	#, pos
.L98:
	.loc 1 288 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp680
	cmpl	-68(%rbp), %eax	# max_pos, tmp680
	jl	.L99	#,
	.loc 1 288 0 discriminator 3
	addq	$64, -48(%rbp)	#, _bo
	addq	$64, -40(%rbp)	#, _bi
	addq	$64, -32(%rbp)	#, _bj
	.loc 1 289 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# _bo, tmp681
	movq	(%rax), %rbx	# *_bo_579, _o
	movq	-40(%rbp), %rax	# _bi, tmp682
	movq	(%rax), %r12	# *_bi_580, _i
	movq	-32(%rbp), %rax	# _bj, tmp683
	movq	(%rax), %r13	# *_bj_581, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L100	#
.L101:
	.loc 1 289 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp684
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp685
	movslq	%edx, %rdx	# tmp685, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_591, D.21112
	movl	-52(%rbp), %edx	# pos, tmp686
	movslq	%edx, %rdx	# tmp686, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_595, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_588
	addl	$1, -52(%rbp)	#, pos
.L100:
	.loc 1 289 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp687
	cmpl	-68(%rbp), %eax	# max_pos, tmp687
	jl	.L101	#,
	.loc 1 292 0 is_stmt 1
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.65
	movl	-60(%rbp), %edx	# list, tmp688
	movslq	%edx, %rdx	# tmp688, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_602, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp689
	movslq	%edx, %rdx	# tmp689, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_606, D.21110
	movq	8(%rax), %rax	# MEM[(int * * *)_607 + 8B], tmp690
	movq	%rax, -48(%rbp)	# tmp690, _bo
	.loc 1 293 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.66
	movl	-60(%rbp), %edx	# list, tmp691
	movslq	%edx, %rdx	# tmp691, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21108
	movq	(%rax), %rax	# *_612, D.21109
	movl	-64(%rbp), %edx	# refindex, tmp692
	movslq	%edx, %rdx	# tmp692, D.21107
	salq	$3, %rdx	#, D.21107
	addq	%rdx, %rax	# D.21107, D.21109
	movq	(%rax), %rax	# *_616, D.21110
	movq	24(%rax), %rax	# MEM[(int * * *)_617 + 24B], tmp693
	movq	%rax, -40(%rbp)	# tmp693, _bi
	.loc 1 294 0
	movq	-40(%rbp), %rax	# _bi, tmp697
	addq	$16, %rax	#, tmp696
	movq	%rax, -32(%rbp)	# tmp696, _bj
	.loc 1 295 0
	movq	-48(%rbp), %rax	# _bo, tmp698
	movq	(%rax), %rbx	# *_bo_608, _o
	movq	-40(%rbp), %rax	# _bi, tmp699
	movq	(%rax), %r12	# *_bi_618, _i
	movq	-32(%rbp), %rax	# _bj, tmp700
	movq	(%rax), %r13	# *_bj_619, _j
	movl	$0, -52(%rbp)	#, pos
	jmp	.L102	#
.L103:
	.loc 1 295 0 is_stmt 0 discriminator 2
	movl	-52(%rbp), %eax	# pos, tmp701
	cltq
	salq	$2, %rax	#, D.21107
	addq	%rbx, %rax	# _o, D.21111
	movl	-52(%rbp), %edx	# pos, tmp702
	movslq	%edx, %rdx	# tmp702, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r12, %rdx	# _i, D.21111
	movl	(%rdx), %ecx	# *_629, D.21112
	movl	-52(%rbp), %edx	# pos, tmp703
	movslq	%edx, %rdx	# tmp703, D.21107
	salq	$2, %rdx	#, D.21107
	addq	%r13, %rdx	# _j, D.21111
	movl	(%rdx), %edx	# *_633, D.21112
	addl	%ecx, %edx	# D.21112, D.21112
	movl	%edx, (%rax)	# D.21112, *_626
	addl	$1, -52(%rbp)	#, pos
.L102:
	.loc 1 295 0 discriminator 1
	movl	-52(%rbp), %eax	# pos, tmp704
	cmpl	-68(%rbp), %eax	# max_pos, tmp704
	jl	.L103	#,
	.loc 1 296 0 is_stmt 1
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	SetupLargerBlocks, .-SetupLargerBlocks
	.globl	SetupFastFullPelSearch
	.type	SetupFastFullPelSearch, @function
SetupFastFullPelSearch:
.LFB6:
	.loc 1 306 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$688, %rsp	#,
	movl	%edi, %eax	# ref, tmp530
	movl	%esi, -664(%rbp)	# list, list
	movw	%ax, -660(%rbp)	# tmp530, ref
	.loc 1 308 0
	leaq	-512(%rbp), %rax	#, tmp531
	movq	%rax, -552(%rbp)	# tmp531, orgptr
	.loc 1 317 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.67
	movl	-664(%rbp), %edx	# list, tmp532
	movslq	%edx, %rdx	# tmp532, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21114
	movq	(%rax), %rax	# *_28, D.21115
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21115
	movq	(%rax), %rax	# *_33, D.21116
	movq	56(%rax), %rax	# MEM[(int * * *)_34 + 56B], tmp533
	movq	%rax, -536(%rbp)	# tmp533, block_sad
	.loc 1 318 0
	movq	max_search_range(%rip), %rax	# max_search_range, max_search_range.68
	movl	-664(%rbp), %edx	# list, tmp534
	movslq	%edx, %rdx	# tmp534, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_39, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21118
	movl	(%rax), %eax	# *_43, tmp535
	movl	%eax, -604(%rbp)	# tmp535, search_range
	.loc 1 319 0
	movl	-604(%rbp), %eax	# search_range, tmp536
	addl	%eax, %eax	# D.21119
	leal	1(%rax), %edx	#, D.21119
	movl	-604(%rbp), %eax	# search_range, tmp537
	addl	%eax, %eax	# D.21119
	addl	$1, %eax	#, D.21119
	imull	%edx, %eax	# D.21119, tmp538
	movl	%eax, -600(%rbp)	# tmp538, max_pos
	.loc 1 321 0
	movq	img(%rip), %rax	# img, img.70
	movl	72400(%rax), %eax	# img.70_50->MbaffFrameFlag, D.21119
	testl	%eax, %eax	# D.21119
	je	.L105	#,
	.loc 1 321 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.71
	movq	14168(%rax), %rdx	# img.71_52->mb_data, D.21120
	movq	img(%rip), %rax	# img, img.72
	movl	12(%rax), %eax	# img.72_54->current_mb_nr, D.21119
	cltq
	imulq	$632, %rax, %rax	#, D.21113, D.21113
	addq	%rdx, %rax	# D.21120, D.21120
	movl	532(%rax), %eax	# _58->mb_field, D.21119
	testl	%eax, %eax	# D.21119
	je	.L105	#,
	movq	img(%rip), %rax	# img, img.74
	movl	12(%rax), %eax	# img.74_60->current_mb_nr, D.21119
	andl	$1, %eax	#, D.21121
	testl	%eax, %eax	# D.21121
	je	.L106	#,
	movl	$4, %eax	#, iftmp.73
	jmp	.L107	#
.L106:
	.loc 1 321 0 discriminator 2
	movl	$2, %eax	#, iftmp.73
.L107:
	.loc 1 321 0 discriminator 3
	jmp	.L108	#
.L105:
	.loc 1 321 0 discriminator 2
	movl	$0, %eax	#, iftmp.69
.L108:
	.loc 1 321 0 discriminator 3
	movl	%eax, -596(%rbp)	# iftmp.69, list_offset
	.loc 1 323 0 is_stmt 1 discriminator 3
	movq	active_pps(%rip), %rax	# active_pps, active_pps.76
	movl	192(%rax), %eax	# active_pps.76_69->weighted_pred_flag, D.21122
	testl	%eax, %eax	# D.21122
	je	.L109	#,
	.loc 1 323 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.77
	movl	24(%rax), %eax	# img.77_71->type, D.21119
	testl	%eax, %eax	# D.21119
	je	.L110	#,
	.loc 1 323 0 discriminator 2
	movq	img(%rip), %rax	# img, img.78
	movl	24(%rax), %eax	# img.78_73->type, D.21119
	cmpl	$3, %eax	#, D.21119
	je	.L110	#,
.L109:
	.loc 1 324 0 is_stmt 1 discriminator 2
	movq	active_pps(%rip), %rax	# active_pps, active_pps.79
	movl	196(%rax), %eax	# active_pps.79_75->weighted_bipred_idc, D.21123
	.loc 1 323 0 discriminator 2
	testl	%eax, %eax	# D.21123
	je	.L111	#,
	.loc 1 324 0
	movq	img(%rip), %rax	# img, img.80
	movl	24(%rax), %eax	# img.80_77->type, D.21119
	cmpl	$1, %eax	#, D.21119
	jne	.L111	#,
.L110:
	.loc 1 323 0 discriminator 1
	movl	$1, %eax	#, iftmp.75
	jmp	.L112	#
.L111:
	.loc 1 323 0 is_stmt 0 discriminator 3
	movl	$0, %eax	#, iftmp.75
.L112:
	.loc 1 323 0 discriminator 4
	movl	%eax, -592(%rbp)	# iftmp.75, apply_weights
	.loc 1 327 0 is_stmt 1 discriminator 4
	movl	-596(%rbp), %eax	# list_offset, tmp539
	movl	-664(%rbp), %edx	# list, tmp540
	addl	%edx, %eax	# tmp540, D.21119
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21124
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21124
	movq	(%rax), %rax	# *_86, tmp542
	movq	%rax, -528(%rbp)	# tmp542, ref_picture
	.loc 1 330 0 discriminator 4
	cmpl	$0, -592(%rbp)	#, apply_weights
	je	.L113	#,
	.loc 1 330 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.81
	movl	1292(%rax), %eax	# input.81_88->UseWeightedReferenceME, D.21119
	testl	%eax, %eax	# D.21119
	je	.L113	#,
	.loc 1 331 0 is_stmt 1
	movq	-528(%rbp), %rax	# ref_picture, tmp543
	movq	6440(%rax), %rax	# ref_picture_87->imgY_11_w, tmp544
	movq	%rax, -544(%rbp)	# tmp544, ref_pic
	jmp	.L114	#
.L113:
	.loc 1 333 0
	movq	-528(%rbp), %rax	# ref_picture, tmp545
	movq	6432(%rax), %rax	# ref_picture_87->imgY_11, tmp546
	movq	%rax, -544(%rbp)	# tmp546, ref_pic
.L114:
	.loc 1 335 0
	movq	-528(%rbp), %rax	# ref_picture, tmp547
	movl	6392(%rax), %eax	# ref_picture_87->size_x, D.21119
	subl	$17, %eax	#, tmp548
	movl	%eax, -588(%rbp)	# tmp548, max_width
	.loc 1 336 0
	movq	-528(%rbp), %rax	# ref_picture, tmp549
	movl	6396(%rax), %eax	# ref_picture_87->size_y, D.21119
	subl	$17, %eax	#, tmp550
	movl	%eax, -584(%rbp)	# tmp550, max_height
	.loc 1 338 0
	movq	-528(%rbp), %rax	# ref_picture, tmp551
	movl	6392(%rax), %eax	# ref_picture_87->size_x, tmp552
	movl	%eax, -580(%rbp)	# tmp552, img_width
	.loc 1 339 0
	movq	-528(%rbp), %rax	# ref_picture, tmp553
	movl	6396(%rax), %eax	# ref_picture_87->size_y, tmp554
	movl	%eax, -576(%rbp)	# tmp554, img_height
	.loc 1 342 0
	movswl	-660(%rbp), %ecx	# ref, D.21119
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.82
	movq	6504(%rax), %rdx	# enc_picture.82_99->mv, D.21125
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.83
	movq	6480(%rax), %rsi	# enc_picture.83_101->ref_idx, D.21126
	movl	-664(%rbp), %edi	# list, tmp555
	leaq	-656(%rbp), %rax	#, tmp556
	movl	$16, 16(%rsp)	#,
	movl	$16, 8(%rsp)	#,
	movl	$0, (%rsp)	#,
	movl	$0, %r9d	#,
	movl	%edi, %r8d	# tmp555,
	movq	%rax, %rdi	# tmp556,
	call	SetMotionVectorPredictor	#
	.loc 1 343 0
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.84
	movl	-664(%rbp), %edx	# list, tmp557
	movslq	%edx, %rdx	# tmp557, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_106, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rax, %rdx	# D.21118, D.21118
	movzwl	-656(%rbp), %eax	# pmv, D.21127
	leal	3(%rax), %ecx	#, tmp559
	testw	%ax, %ax	# tmp558
	cmovs	%ecx, %eax	# tmp559,, tmp558
	sarw	$2, %ax	#, tmp560
	cwtl
	movl	%eax, (%rdx)	# D.21119, *_110
	.loc 1 344 0
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.85
	movl	-664(%rbp), %edx	# list, tmp561
	movslq	%edx, %rdx	# tmp561, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_117, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rax, %rdx	# D.21118, D.21118
	movzwl	-654(%rbp), %eax	# pmv, D.21127
	leal	3(%rax), %ecx	#, tmp563
	testw	%ax, %ax	# tmp562
	cmovs	%ecx, %eax	# tmp563,, tmp562
	sarw	$2, %ax	#, tmp564
	cwtl
	movl	%eax, (%rdx)	# D.21119, *_121
	.loc 1 346 0
	movq	input(%rip), %rax	# input, input.86
	movl	2464(%rax), %eax	# input.86_125->rdopt, D.21119
	testl	%eax, %eax	# D.21119
	jne	.L115	#,
	.loc 1 349 0
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.87
	movl	-664(%rbp), %edx	# list, tmp565
	movslq	%edx, %rdx	# tmp565, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_130, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	leaq	(%rax,%rdx), %rcx	#, D.21118
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.88
	movl	-664(%rbp), %edx	# list, tmp566
	movslq	%edx, %rdx	# tmp566, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_138, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21118
	movl	(%rax), %edx	# *_142, D.21119
	movl	-604(%rbp), %eax	# search_range, tmp567
	cmpl	%eax, %edx	# tmp567, D.21119
	cmovle	%edx, %eax	# D.21119,, D.21119
	movl	-604(%rbp), %edx	# search_range, tmp568
	negl	%edx	# D.21119
	cmpl	%edx, %eax	# D.21119, D.21119
	cmovl	%edx, %eax	# D.21119,, D.21119, D.21119
	movl	%eax, (%rcx)	# D.21119, *_134
	.loc 1 350 0
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.89
	movl	-664(%rbp), %edx	# list, tmp569
	movslq	%edx, %rdx	# tmp569, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_150, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	leaq	(%rax,%rdx), %rcx	#, D.21118
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.90
	movl	-664(%rbp), %edx	# list, tmp570
	movslq	%edx, %rdx	# tmp570, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_158, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21118
	movl	(%rax), %edx	# *_162, D.21119
	movl	-604(%rbp), %eax	# search_range, tmp571
	cmpl	%eax, %edx	# tmp571, D.21119
	cmovle	%edx, %eax	# D.21119,, D.21119
	movl	-604(%rbp), %edx	# search_range, tmp572
	negl	%edx	# D.21119
	cmpl	%edx, %eax	# D.21119, D.21119
	cmovl	%edx, %eax	# D.21119,, D.21119, D.21119
	movl	%eax, (%rcx)	# D.21119, *_154
.L115:
	.loc 1 353 0
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.91
	movl	-664(%rbp), %edx	# list, tmp573
	movslq	%edx, %rdx	# tmp573, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_170, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rax, %rdx	# D.21118, D.21118
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.92
	movl	-664(%rbp), %ecx	# list, tmp574
	movslq	%ecx, %rcx	# tmp574, D.21113
	salq	$3, %rcx	#, D.21113
	addq	%rcx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_178, D.21118
	movswq	-660(%rbp), %rcx	# ref, D.21113
	salq	$2, %rcx	#, D.21113
	addq	%rcx, %rax	# D.21113, D.21118
	movl	(%rax), %ecx	# *_182, D.21119
	movq	img(%rip), %rax	# img, img.93
	movl	168(%rax), %eax	# img.93_184->opix_x, D.21119
	addl	%ecx, %eax	# D.21119, D.21119
	movl	%eax, (%rdx)	# D.21119, *_174
	.loc 1 354 0
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.94
	movl	-664(%rbp), %edx	# list, tmp575
	movslq	%edx, %rdx	# tmp575, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_190, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rax, %rdx	# D.21118, D.21118
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.95
	movl	-664(%rbp), %ecx	# list, tmp576
	movslq	%ecx, %rcx	# tmp576, D.21113
	salq	$3, %rcx	#, D.21113
	addq	%rcx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_198, D.21118
	movswq	-660(%rbp), %rcx	# ref, D.21113
	salq	$2, %rcx	#, D.21113
	addq	%rcx, %rax	# D.21113, D.21118
	movl	(%rax), %ecx	# *_202, D.21119
	movq	img(%rip), %rax	# img, img.96
	movl	172(%rax), %eax	# img.96_204->opix_y, D.21119
	addl	%ecx, %eax	# D.21119, D.21119
	movl	%eax, (%rdx)	# D.21119, *_194
	.loc 1 356 0
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.97
	movl	-664(%rbp), %edx	# list, tmp577
	movslq	%edx, %rdx	# tmp577, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_210, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21118
	movl	(%rax), %eax	# *_214, tmp578
	movl	%eax, -572(%rbp)	# tmp578, offset_x
	.loc 1 357 0
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.98
	movl	-664(%rbp), %edx	# list, tmp579
	movslq	%edx, %rdx	# tmp579, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_219, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21118
	movl	(%rax), %eax	# *_223, tmp580
	movl	%eax, -568(%rbp)	# tmp580, offset_y
	.loc 1 360 0
	movq	img(%rip), %rax	# img, img.99
	movl	172(%rax), %eax	# img.99_225->opix_y, tmp581
	movl	%eax, -644(%rbp)	# tmp581, y
	jmp	.L116	#
.L119:
	.loc 1 361 0
	movq	img(%rip), %rax	# img, img.100
	movl	168(%rax), %eax	# img.100_230->opix_x, tmp582
	movl	%eax, -648(%rbp)	# tmp582, x
	jmp	.L117	#
.L118:
	.loc 1 362 0 discriminator 2
	movq	-552(%rbp), %rax	# orgptr, orgptr.101
	leaq	2(%rax), %rdx	#, tmp583
	movq	%rdx, -552(%rbp)	# tmp583, orgptr
	movq	imgY_org(%rip), %rdx	# imgY_org, imgY_org.102
	movl	-644(%rbp), %ecx	# y, tmp584
	movslq	%ecx, %rcx	# tmp584, D.21113
	salq	$3, %rcx	#, D.21113
	addq	%rcx, %rdx	# D.21113, D.21128
	movq	(%rdx), %rdx	# *_240, D.21129
	movl	-648(%rbp), %ecx	# x, tmp585
	movslq	%ecx, %rcx	# tmp585, D.21113
	addq	%rcx, %rcx	# D.21113
	addq	%rcx, %rdx	# D.21113, D.21129
	movzwl	(%rdx), %edx	# *_244, D.21130
	movw	%dx, (%rax)	# D.21130, *orgptr.101_235
	.loc 1 361 0 discriminator 2
	addl	$1, -648(%rbp)	#, x
.L117:
	.loc 1 361 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.103
	movl	168(%rax), %eax	# img.103_232->opix_x, D.21119
	addl	$16, %eax	#, D.21119
	cmpl	-648(%rbp), %eax	# x, D.21119
	jg	.L118	#,
	.loc 1 360 0 is_stmt 1
	addl	$1, -644(%rbp)	#, y
.L116:
	.loc 1 360 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.104
	movl	172(%rax), %eax	# img.104_227->opix_y, D.21119
	addl	$16, %eax	#, D.21119
	cmpl	-644(%rbp), %eax	# y, D.21119
	jg	.L119	#,
	.loc 1 366 0 is_stmt 1
	movl	-572(%rbp), %eax	# offset_x, tmp586
	cmpl	-604(%rbp), %eax	# search_range, tmp586
	jl	.L120	#,
	.loc 1 366 0 is_stmt 0 discriminator 1
	movl	-604(%rbp), %eax	# search_range, tmp587
	movl	-588(%rbp), %edx	# max_width, tmp588
	subl	%eax, %edx	# tmp587, D.21119
	movl	%edx, %eax	# D.21119, D.21119
	cmpl	-572(%rbp), %eax	# offset_x, D.21119
	jl	.L120	#,
	movl	-568(%rbp), %eax	# offset_y, tmp589
	cmpl	-604(%rbp), %eax	# search_range, tmp589
	jl	.L120	#,
	.loc 1 367 0 is_stmt 1
	movl	-604(%rbp), %eax	# search_range, tmp590
	movl	-584(%rbp), %edx	# max_height, tmp591
	subl	%eax, %edx	# tmp590, D.21119
	movl	%edx, %eax	# D.21119, D.21119
	cmpl	-568(%rbp), %eax	# offset_y, D.21119
	jl	.L120	#,
	.loc 1 369 0
	movl	$0, -640(%rbp)	#, range_partly_outside
	movq	$FastLine16Y_11, PelYline_11(%rip)	#, PelYline_11
	jmp	.L121	#
.L120:
	.loc 1 373 0
	movl	$1, -640(%rbp)	#, range_partly_outside
.L121:
	.loc 1 377 0
	movq	input(%rip), %rax	# input, input.105
	movl	2464(%rax), %eax	# input.105_252->rdopt, D.21119
	testl	%eax, %eax	# D.21119
	jne	.L122	#,
	.loc 1 379 0
	movq	img(%rip), %rax	# img, img.106
	movl	168(%rax), %eax	# img.106_254->opix_x, D.21119
	subl	-572(%rbp), %eax	# offset_x, tmp593
	movl	%eax, -564(%rbp)	# tmp593, ref_x
	.loc 1 380 0
	movq	img(%rip), %rax	# img, img.107
	movl	172(%rax), %eax	# img.107_257->opix_y, D.21119
	subl	-568(%rbp), %eax	# offset_y, tmp595
	movl	%eax, -560(%rbp)	# tmp595, ref_y
	.loc 1 382 0
	movl	$0, -636(%rbp)	#, pos
	jmp	.L123	#
.L125:
	.loc 1 384 0
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.108
	movl	-636(%rbp), %edx	# pos, tmp596
	movslq	%edx, %rdx	# tmp596, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21118
	movl	(%rax), %eax	# *_264, D.21119
	cmpl	-564(%rbp), %eax	# ref_x, D.21119
	jne	.L124	#,
	.loc 1 385 0 discriminator 1
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.109
	movl	-636(%rbp), %edx	# pos, tmp597
	movslq	%edx, %rdx	# tmp597, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21118
	movl	(%rax), %eax	# *_269, D.21119
	.loc 1 384 0 discriminator 1
	cmpl	-560(%rbp), %eax	# ref_y, D.21119
	jne	.L124	#,
	.loc 1 387 0
	movq	pos_00(%rip), %rax	# pos_00, pos_00.110
	movl	-664(%rbp), %edx	# list, tmp598
	movslq	%edx, %rdx	# tmp598, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_274, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rax, %rdx	# D.21118, D.21118
	movl	-636(%rbp), %eax	# pos, tmp599
	movl	%eax, (%rdx)	# tmp599, *_278
	.loc 1 388 0
	jmp	.L122	#
.L124:
	.loc 1 382 0
	addl	$1, -636(%rbp)	#, pos
.L123:
	.loc 1 382 0 is_stmt 0 discriminator 1
	movl	-636(%rbp), %eax	# pos, tmp600
	cmpl	-600(%rbp), %eax	# max_pos, tmp600
	jl	.L125	#,
.L122:
	.loc 1 394 0 is_stmt 1
	movl	$0, -636(%rbp)	#, pos
	jmp	.L126	#
.L133:
	.loc 1 396 0
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.111
	movl	-636(%rbp), %edx	# pos, tmp601
	movslq	%edx, %rdx	# tmp601, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21118
	movl	(%rax), %edx	# *_284, D.21119
	movl	-568(%rbp), %eax	# offset_y, tmp605
	addl	%edx, %eax	# D.21119, tmp604
	movl	%eax, -632(%rbp)	# tmp604, abs_y
	.loc 1 397 0
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.112
	movl	-636(%rbp), %edx	# pos, tmp606
	movslq	%edx, %rdx	# tmp606, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21118
	movl	(%rax), %edx	# *_290, D.21119
	movl	-572(%rbp), %eax	# offset_x, tmp610
	addl	%edx, %eax	# D.21119, tmp609
	movl	%eax, -556(%rbp)	# tmp609, abs_x
	.loc 1 399 0
	cmpl	$0, -640(%rbp)	#, range_partly_outside
	je	.L127	#,
	.loc 1 401 0
	cmpl	$0, -632(%rbp)	#, abs_y
	js	.L128	#,
	.loc 1 401 0 is_stmt 0 discriminator 1
	movl	-632(%rbp), %eax	# abs_y, tmp611
	cmpl	-584(%rbp), %eax	# max_height, tmp611
	jg	.L128	#,
	cmpl	$0, -556(%rbp)	#, abs_x
	js	.L128	#,
	.loc 1 402 0 is_stmt 1
	movl	-556(%rbp), %eax	# abs_x, tmp612
	cmpl	-588(%rbp), %eax	# max_width, tmp612
	jg	.L128	#,
	.loc 1 404 0
	movq	$FastLine16Y_11, PelYline_11(%rip)	#, PelYline_11
	jmp	.L127	#
.L128:
	.loc 1 408 0
	movq	$UMVLine16Y_11, PelYline_11(%rip)	#, PelYline_11
.L127:
	.loc 1 412 0
	leaq	-512(%rbp), %rax	#, tmp613
	movq	%rax, -552(%rbp)	# tmp613, orgptr
	.loc 1 413 0
	movl	$0, -628(%rbp)	#, bindex
	.loc 1 414 0
	movl	$0, -624(%rbp)	#, blky
	jmp	.L129	#
.L132:
	.loc 1 416 0
	movl	$0, -608(%rbp)	#, LineSadBlk3
	movl	-608(%rbp), %eax	# LineSadBlk3, tmp614
	movl	%eax, -612(%rbp)	# tmp614, LineSadBlk2
	movl	-612(%rbp), %eax	# LineSadBlk2, tmp615
	movl	%eax, -616(%rbp)	# tmp615, LineSadBlk1
	movl	-616(%rbp), %eax	# LineSadBlk1, tmp616
	movl	%eax, -620(%rbp)	# tmp616, LineSadBlk0
	.loc 1 417 0
	movl	$0, -644(%rbp)	#, y
	jmp	.L130	#
.L131:
	.loc 1 419 0 discriminator 2
	movq	PelYline_11(%rip), %r9	# PelYline_11, PelYline_11.113
	movl	-632(%rbp), %eax	# abs_y, abs_y.114
	leal	1(%rax), %edx	#, tmp617
	movl	%edx, -632(%rbp)	# tmp617, abs_y
	movl	-580(%rbp), %esi	# img_width, tmp618
	movl	-576(%rbp), %ecx	# img_height, tmp619
	movl	-556(%rbp), %edx	# abs_x, tmp620
	movq	-544(%rbp), %rdi	# ref_pic, tmp621
	movl	%esi, %r8d	# tmp618,
	movl	%eax, %esi	# abs_y.114,
	call	*%r9	# PelYline_11.113
	movq	%rax, -520(%rbp)	# tmp622, refptr
	.loc 1 421 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.115
	movq	-520(%rbp), %rax	# refptr, refptr.116
	leaq	2(%rax), %rdx	#, tmp623
	movq	%rdx, -520(%rbp)	# tmp623, refptr
	movzwl	(%rax), %eax	# *refptr.116_306, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.117
	leaq	2(%rax), %rdx	#, tmp624
	movq	%rdx, -552(%rbp)	# tmp624, orgptr
	movzwl	(%rax), %eax	# *orgptr.117_310, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.115, D.21118
	movl	(%rax), %eax	# *_317, D.21119
	addl	%eax, -620(%rbp)	# D.21119, LineSadBlk0
	.loc 1 422 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.118
	movq	-520(%rbp), %rax	# refptr, refptr.119
	leaq	2(%rax), %rdx	#, tmp625
	movq	%rdx, -520(%rbp)	# tmp625, refptr
	movzwl	(%rax), %eax	# *refptr.119_321, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.120
	leaq	2(%rax), %rdx	#, tmp626
	movq	%rdx, -552(%rbp)	# tmp626, orgptr
	movzwl	(%rax), %eax	# *orgptr.120_325, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.118, D.21118
	movl	(%rax), %eax	# *_332, D.21119
	addl	%eax, -620(%rbp)	# D.21119, LineSadBlk0
	.loc 1 423 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.121
	movq	-520(%rbp), %rax	# refptr, refptr.122
	leaq	2(%rax), %rdx	#, tmp627
	movq	%rdx, -520(%rbp)	# tmp627, refptr
	movzwl	(%rax), %eax	# *refptr.122_336, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.123
	leaq	2(%rax), %rdx	#, tmp628
	movq	%rdx, -552(%rbp)	# tmp628, orgptr
	movzwl	(%rax), %eax	# *orgptr.123_340, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.121, D.21118
	movl	(%rax), %eax	# *_347, D.21119
	addl	%eax, -620(%rbp)	# D.21119, LineSadBlk0
	.loc 1 424 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.124
	movq	-520(%rbp), %rax	# refptr, refptr.125
	leaq	2(%rax), %rdx	#, tmp629
	movq	%rdx, -520(%rbp)	# tmp629, refptr
	movzwl	(%rax), %eax	# *refptr.125_351, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.126
	leaq	2(%rax), %rdx	#, tmp630
	movq	%rdx, -552(%rbp)	# tmp630, orgptr
	movzwl	(%rax), %eax	# *orgptr.126_355, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.124, D.21118
	movl	(%rax), %eax	# *_362, D.21119
	addl	%eax, -620(%rbp)	# D.21119, LineSadBlk0
	.loc 1 425 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.127
	movq	-520(%rbp), %rax	# refptr, refptr.128
	leaq	2(%rax), %rdx	#, tmp631
	movq	%rdx, -520(%rbp)	# tmp631, refptr
	movzwl	(%rax), %eax	# *refptr.128_366, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.129
	leaq	2(%rax), %rdx	#, tmp632
	movq	%rdx, -552(%rbp)	# tmp632, orgptr
	movzwl	(%rax), %eax	# *orgptr.129_370, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.127, D.21118
	movl	(%rax), %eax	# *_377, D.21119
	addl	%eax, -616(%rbp)	# D.21119, LineSadBlk1
	.loc 1 426 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.130
	movq	-520(%rbp), %rax	# refptr, refptr.131
	leaq	2(%rax), %rdx	#, tmp633
	movq	%rdx, -520(%rbp)	# tmp633, refptr
	movzwl	(%rax), %eax	# *refptr.131_381, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.132
	leaq	2(%rax), %rdx	#, tmp634
	movq	%rdx, -552(%rbp)	# tmp634, orgptr
	movzwl	(%rax), %eax	# *orgptr.132_385, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.130, D.21118
	movl	(%rax), %eax	# *_392, D.21119
	addl	%eax, -616(%rbp)	# D.21119, LineSadBlk1
	.loc 1 427 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.133
	movq	-520(%rbp), %rax	# refptr, refptr.134
	leaq	2(%rax), %rdx	#, tmp635
	movq	%rdx, -520(%rbp)	# tmp635, refptr
	movzwl	(%rax), %eax	# *refptr.134_396, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.135
	leaq	2(%rax), %rdx	#, tmp636
	movq	%rdx, -552(%rbp)	# tmp636, orgptr
	movzwl	(%rax), %eax	# *orgptr.135_400, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.133, D.21118
	movl	(%rax), %eax	# *_407, D.21119
	addl	%eax, -616(%rbp)	# D.21119, LineSadBlk1
	.loc 1 428 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.136
	movq	-520(%rbp), %rax	# refptr, refptr.137
	leaq	2(%rax), %rdx	#, tmp637
	movq	%rdx, -520(%rbp)	# tmp637, refptr
	movzwl	(%rax), %eax	# *refptr.137_411, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.138
	leaq	2(%rax), %rdx	#, tmp638
	movq	%rdx, -552(%rbp)	# tmp638, orgptr
	movzwl	(%rax), %eax	# *orgptr.138_415, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.136, D.21118
	movl	(%rax), %eax	# *_422, D.21119
	addl	%eax, -616(%rbp)	# D.21119, LineSadBlk1
	.loc 1 429 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.139
	movq	-520(%rbp), %rax	# refptr, refptr.140
	leaq	2(%rax), %rdx	#, tmp639
	movq	%rdx, -520(%rbp)	# tmp639, refptr
	movzwl	(%rax), %eax	# *refptr.140_426, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.141
	leaq	2(%rax), %rdx	#, tmp640
	movq	%rdx, -552(%rbp)	# tmp640, orgptr
	movzwl	(%rax), %eax	# *orgptr.141_430, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.139, D.21118
	movl	(%rax), %eax	# *_437, D.21119
	addl	%eax, -612(%rbp)	# D.21119, LineSadBlk2
	.loc 1 430 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.142
	movq	-520(%rbp), %rax	# refptr, refptr.143
	leaq	2(%rax), %rdx	#, tmp641
	movq	%rdx, -520(%rbp)	# tmp641, refptr
	movzwl	(%rax), %eax	# *refptr.143_441, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.144
	leaq	2(%rax), %rdx	#, tmp642
	movq	%rdx, -552(%rbp)	# tmp642, orgptr
	movzwl	(%rax), %eax	# *orgptr.144_445, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.142, D.21118
	movl	(%rax), %eax	# *_452, D.21119
	addl	%eax, -612(%rbp)	# D.21119, LineSadBlk2
	.loc 1 431 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.145
	movq	-520(%rbp), %rax	# refptr, refptr.146
	leaq	2(%rax), %rdx	#, tmp643
	movq	%rdx, -520(%rbp)	# tmp643, refptr
	movzwl	(%rax), %eax	# *refptr.146_456, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.147
	leaq	2(%rax), %rdx	#, tmp644
	movq	%rdx, -552(%rbp)	# tmp644, orgptr
	movzwl	(%rax), %eax	# *orgptr.147_460, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.145, D.21118
	movl	(%rax), %eax	# *_467, D.21119
	addl	%eax, -612(%rbp)	# D.21119, LineSadBlk2
	.loc 1 432 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.148
	movq	-520(%rbp), %rax	# refptr, refptr.149
	leaq	2(%rax), %rdx	#, tmp645
	movq	%rdx, -520(%rbp)	# tmp645, refptr
	movzwl	(%rax), %eax	# *refptr.149_471, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.150
	leaq	2(%rax), %rdx	#, tmp646
	movq	%rdx, -552(%rbp)	# tmp646, orgptr
	movzwl	(%rax), %eax	# *orgptr.150_475, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.148, D.21118
	movl	(%rax), %eax	# *_482, D.21119
	addl	%eax, -612(%rbp)	# D.21119, LineSadBlk2
	.loc 1 433 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.151
	movq	-520(%rbp), %rax	# refptr, refptr.152
	leaq	2(%rax), %rdx	#, tmp647
	movq	%rdx, -520(%rbp)	# tmp647, refptr
	movzwl	(%rax), %eax	# *refptr.152_486, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.153
	leaq	2(%rax), %rdx	#, tmp648
	movq	%rdx, -552(%rbp)	# tmp648, orgptr
	movzwl	(%rax), %eax	# *orgptr.153_490, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.151, D.21118
	movl	(%rax), %eax	# *_497, D.21119
	addl	%eax, -608(%rbp)	# D.21119, LineSadBlk3
	.loc 1 434 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.154
	movq	-520(%rbp), %rax	# refptr, refptr.155
	leaq	2(%rax), %rdx	#, tmp649
	movq	%rdx, -520(%rbp)	# tmp649, refptr
	movzwl	(%rax), %eax	# *refptr.155_501, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.156
	leaq	2(%rax), %rdx	#, tmp650
	movq	%rdx, -552(%rbp)	# tmp650, orgptr
	movzwl	(%rax), %eax	# *orgptr.156_505, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.154, D.21118
	movl	(%rax), %eax	# *_512, D.21119
	addl	%eax, -608(%rbp)	# D.21119, LineSadBlk3
	.loc 1 435 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.157
	movq	-520(%rbp), %rax	# refptr, refptr.158
	leaq	2(%rax), %rdx	#, tmp651
	movq	%rdx, -520(%rbp)	# tmp651, refptr
	movzwl	(%rax), %eax	# *refptr.158_516, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.159
	leaq	2(%rax), %rdx	#, tmp652
	movq	%rdx, -552(%rbp)	# tmp652, orgptr
	movzwl	(%rax), %eax	# *orgptr.159_520, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.157, D.21118
	movl	(%rax), %eax	# *_527, D.21119
	addl	%eax, -608(%rbp)	# D.21119, LineSadBlk3
	.loc 1 436 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.160
	movq	-520(%rbp), %rax	# refptr, refptr.161
	leaq	2(%rax), %rdx	#, tmp653
	movq	%rdx, -520(%rbp)	# tmp653, refptr
	movzwl	(%rax), %eax	# *refptr.161_531, D.21130
	movzwl	%ax, %esi	# D.21130, D.21119
	movq	-552(%rbp), %rax	# orgptr, orgptr.162
	leaq	2(%rax), %rdx	#, tmp654
	movq	%rdx, -552(%rbp)	# tmp654, orgptr
	movzwl	(%rax), %eax	# *orgptr.162_535, D.21130
	movzwl	%ax, %eax	# D.21130, D.21119
	subl	%eax, %esi	# D.21119, D.21119
	movl	%esi, %eax	# D.21119, D.21119
	cltq
	salq	$2, %rax	#, D.21113
	addq	%rcx, %rax	# byte_abs.160, D.21118
	movl	(%rax), %eax	# *_542, D.21119
	addl	%eax, -608(%rbp)	# D.21119, LineSadBlk3
	.loc 1 417 0 discriminator 2
	addl	$1, -644(%rbp)	#, y
.L130:
	.loc 1 417 0 is_stmt 0 discriminator 1
	cmpl	$3, -644(%rbp)	#, y
	jle	.L131	#,
	.loc 1 438 0 is_stmt 1
	movl	-628(%rbp), %eax	# bindex, bindex.163
	leal	1(%rax), %edx	#, tmp655
	movl	%edx, -628(%rbp)	# tmp655, bindex
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21113
	movq	-536(%rbp), %rax	# block_sad, tmp656
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_550, D.21118
	movl	-636(%rbp), %edx	# pos, tmp657
	movslq	%edx, %rdx	# tmp657, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rax, %rdx	# D.21118, D.21118
	movl	-620(%rbp), %eax	# LineSadBlk0, tmp658
	movl	%eax, (%rdx)	# tmp658, *_554
	.loc 1 439 0
	movl	-628(%rbp), %eax	# bindex, bindex.164
	leal	1(%rax), %edx	#, tmp659
	movl	%edx, -628(%rbp)	# tmp659, bindex
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21113
	movq	-536(%rbp), %rax	# block_sad, tmp660
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_559, D.21118
	movl	-636(%rbp), %edx	# pos, tmp661
	movslq	%edx, %rdx	# tmp661, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rax, %rdx	# D.21118, D.21118
	movl	-616(%rbp), %eax	# LineSadBlk1, tmp662
	movl	%eax, (%rdx)	# tmp662, *_563
	.loc 1 440 0
	movl	-628(%rbp), %eax	# bindex, bindex.165
	leal	1(%rax), %edx	#, tmp663
	movl	%edx, -628(%rbp)	# tmp663, bindex
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21113
	movq	-536(%rbp), %rax	# block_sad, tmp664
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_568, D.21118
	movl	-636(%rbp), %edx	# pos, tmp665
	movslq	%edx, %rdx	# tmp665, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rax, %rdx	# D.21118, D.21118
	movl	-612(%rbp), %eax	# LineSadBlk2, tmp666
	movl	%eax, (%rdx)	# tmp666, *_572
	.loc 1 441 0
	movl	-628(%rbp), %eax	# bindex, bindex.166
	leal	1(%rax), %edx	#, tmp667
	movl	%edx, -628(%rbp)	# tmp667, bindex
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21113
	movq	-536(%rbp), %rax	# block_sad, tmp668
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_577, D.21118
	movl	-636(%rbp), %edx	# pos, tmp669
	movslq	%edx, %rdx	# tmp669, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rax, %rdx	# D.21118, D.21118
	movl	-608(%rbp), %eax	# LineSadBlk3, tmp670
	movl	%eax, (%rdx)	# tmp670, *_581
	.loc 1 414 0
	addl	$1, -624(%rbp)	#, blky
.L129:
	.loc 1 414 0 is_stmt 0 discriminator 1
	cmpl	$3, -624(%rbp)	#, blky
	jle	.L132	#,
	.loc 1 394 0 is_stmt 1
	addl	$1, -636(%rbp)	#, pos
.L126:
	.loc 1 394 0 is_stmt 0 discriminator 1
	movl	-636(%rbp), %eax	# pos, tmp671
	cmpl	-600(%rbp), %eax	# max_pos, tmp671
	jl	.L133	#,
	.loc 1 447 0 is_stmt 1
	movswl	-660(%rbp), %ecx	# ref, D.21119
	movl	-600(%rbp), %edx	# max_pos, tmp672
	movl	-664(%rbp), %eax	# list, tmp673
	movl	%ecx, %esi	# D.21119,
	movl	%eax, %edi	# tmp673,
	call	SetupLargerBlocks	#
	.loc 1 451 0
	movq	search_setup_done(%rip), %rax	# search_setup_done, search_setup_done.167
	movl	-664(%rbp), %edx	# list, tmp674
	movslq	%edx, %rdx	# tmp674, D.21113
	salq	$3, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21117
	movq	(%rax), %rax	# *_588, D.21118
	movswq	-660(%rbp), %rdx	# ref, D.21113
	salq	$2, %rdx	#, D.21113
	addq	%rdx, %rax	# D.21113, D.21118
	movl	$1, (%rax)	#, *_592
	.loc 1 452 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	SetupFastFullPelSearch, .-SetupFastFullPelSearch
	.globl	SetMotionVectorPredictor
	.type	SetMotionVectorPredictor, @function
SetMotionVectorPredictor:
.LFB7:
	.loc 1 470 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$256, %rsp	#,
	movq	%rdi, -216(%rbp)	# pmv, pmv
	movq	%rsi, -224(%rbp)	# refPic, refPic
	movq	%rdx, -232(%rbp)	# tmp_mv, tmp_mv
	movl	%ecx, %eax	# ref_frame, tmp918
	movl	%r8d, -240(%rbp)	# list, list
	movl	%r9d, -244(%rbp)	# block_x, block_x
	movw	%ax, -236(%rbp)	# tmp918, ref_frame
	.loc 1 471 0
	movl	-244(%rbp), %eax	# block_x, tmp922
	sall	$2, %eax	#, tmp921
	movl	%eax, -160(%rbp)	# tmp921, mb_x
	.loc 1 472 0
	movl	16(%rbp), %eax	# block_y, tmp926
	sall	$2, %eax	#, tmp925
	movl	%eax, -156(%rbp)	# tmp925, mb_y
	.loc 1 473 0
	movq	img(%rip), %rax	# img, img.168
	movl	12(%rax), %eax	# img.168_64->current_mb_nr, tmp927
	movl	%eax, -152(%rbp)	# tmp927, mb_nr
	.loc 1 475 0
	movl	$0, -196(%rbp)	#, pred_vec
	.loc 1 481 0
	movl	$0, -172(%rbp)	#, SAD_a
	movl	$0, -168(%rbp)	#, SAD_b
	movl	$0, -164(%rbp)	#, SAD_c
	movl	$0, -148(%rbp)	#, SAD_d
	.loc 1 484 0
	movq	input(%rip), %rax	# input, input.169
	movl	3292(%rax), %eax	# input.169_71->FMEnable, D.21131
	testl	%eax, %eax	# D.21131
	je	.L135	#,
	.loc 1 484 0 is_stmt 0 discriminator 1
	movl	$0, pred_SAD_space(%rip)	#, pred_SAD_space
.L135:
	.loc 1 486 0 is_stmt 1
	leaq	-128(%rbp), %rdx	#, tmp928
	movl	-244(%rbp), %esi	# block_x, tmp929
	movl	-152(%rbp), %eax	# mb_nr, tmp930
	movq	%rdx, %r9	# tmp928,
	movl	$0, %r8d	#,
	movl	$-1, %ecx	#,
	movl	16(%rbp), %edx	# block_y,
	movl	%eax, %edi	# tmp930,
	call	getLuma4x4Neighbour	#
	.loc 1 487 0
	leaq	-96(%rbp), %rdx	#, tmp931
	movl	-244(%rbp), %esi	# block_x, tmp932
	movl	-152(%rbp), %eax	# mb_nr, tmp933
	movq	%rdx, %r9	# tmp931,
	movl	$-1, %r8d	#,
	movl	$0, %ecx	#,
	movl	16(%rbp), %edx	# block_y,
	movl	%eax, %edi	# tmp933,
	call	getLuma4x4Neighbour	#
	.loc 1 488 0
	leaq	-64(%rbp), %rcx	#, tmp934
	movl	24(%rbp), %edx	# blockshape_x, tmp935
	movl	-244(%rbp), %esi	# block_x, tmp936
	movl	-152(%rbp), %eax	# mb_nr, tmp937
	movq	%rcx, %r9	# tmp934,
	movl	$-1, %r8d	#,
	movl	%edx, %ecx	# tmp935,
	movl	16(%rbp), %edx	# block_y,
	movl	%eax, %edi	# tmp937,
	call	getLuma4x4Neighbour	#
	.loc 1 489 0
	leaq	-32(%rbp), %rdx	#, tmp938
	movl	-244(%rbp), %esi	# block_x, tmp939
	movl	-152(%rbp), %eax	# mb_nr, tmp940
	movq	%rdx, %r9	# tmp938,
	movl	$-1, %r8d	#,
	movl	$-1, %ecx	#,
	movl	16(%rbp), %edx	# block_y,
	movl	%eax, %edi	# tmp940,
	call	getLuma4x4Neighbour	#
	.loc 1 491 0
	cmpl	$0, -156(%rbp)	#, mb_y
	jle	.L136	#,
	.loc 1 493 0
	cmpl	$7, -160(%rbp)	#, mb_x
	jg	.L137	#,
	.loc 1 495 0
	cmpl	$8, -156(%rbp)	#, mb_y
	jne	.L138	#,
	.loc 1 497 0
	cmpl	$16, 24(%rbp)	#, blockshape_x
	jne	.L139	#,
	.loc 1 497 0 is_stmt 0 discriminator 1
	movl	$0, -64(%rbp)	#, block_c.available
	jmp	.L136	#
.L139:
	.loc 1 498 0 is_stmt 1
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	andl	$1, %eax	#, D.21131
	movl	%eax, -64(%rbp)	# D.21131, block_c.available
	jmp	.L136	#
.L138:
	.loc 1 502 0
	movl	24(%rbp), %eax	# blockshape_x, tmp941
	movl	-160(%rbp), %edx	# mb_x, tmp942
	addl	%edx, %eax	# tmp942, D.21131
	cmpl	$8, %eax	#, D.21131
	je	.L142	#,
	.loc 1 502 0 is_stmt 0 discriminator 1
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	andl	$1, %eax	#, D.21131
	movl	%eax, -64(%rbp)	# D.21131, block_c.available
	jmp	.L136	#
.L142:
	.loc 1 503 0 is_stmt 1
	movl	$0, -64(%rbp)	#, block_c.available
	jmp	.L136	#
.L137:
	.loc 1 508 0
	movl	24(%rbp), %eax	# blockshape_x, tmp943
	movl	-160(%rbp), %edx	# mb_x, tmp944
	addl	%edx, %eax	# tmp944, D.21131
	cmpl	$16, %eax	#, D.21131
	je	.L143	#,
	.loc 1 508 0 is_stmt 0 discriminator 1
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	andl	$1, %eax	#, D.21131
	movl	%eax, -64(%rbp)	# D.21131, block_c.available
	jmp	.L136	#
.L143:
	.loc 1 509 0 is_stmt 1
	movl	$0, -64(%rbp)	#, block_c.available
.L136:
	.loc 1 513 0
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	testl	%eax, %eax	# D.21131
	jne	.L144	#,
	.loc 1 515 0
	movq	-32(%rbp), %rax	# block_d, tmp945
	movq	%rax, -64(%rbp)	# tmp945, block_c
	movq	-24(%rbp), %rax	# block_d, tmp946
	movq	%rax, -56(%rbp)	# tmp946, block_c
	movq	-16(%rbp), %rax	# block_d, tmp947
	movq	%rax, -48(%rbp)	# tmp947, block_c
.L144:
	.loc 1 518 0
	movl	$0, -192(%rbp)	#, mvPredType
	.loc 1 520 0
	movq	img(%rip), %rax	# img, img.170
	movl	72400(%rax), %eax	# img.170_84->MbaffFrameFlag, D.21131
	testl	%eax, %eax	# D.21131
	jne	.L145	#,
	.loc 1 522 0
	movl	-128(%rbp), %eax	# block_a.available, D.21131
	testl	%eax, %eax	# D.21131
	je	.L146	#,
	.loc 1 522 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp948
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp949
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_91, D.21134
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_96, D.21135
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_101, D.21136
	cwtl
	jmp	.L147	#
.L146:
	.loc 1 522 0 discriminator 2
	movl	$-1, %eax	#, iftmp.171
.L147:
	.loc 1 522 0 discriminator 3
	movl	%eax, -188(%rbp)	# iftmp.171, rFrameL
	.loc 1 523 0 is_stmt 1 discriminator 3
	movl	-96(%rbp), %eax	# block_b.available, D.21131
	testl	%eax, %eax	# D.21131
	je	.L148	#,
	.loc 1 523 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp950
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp951
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_109, D.21134
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_114, D.21135
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_119, D.21136
	cwtl
	jmp	.L149	#
.L148:
	.loc 1 523 0 discriminator 2
	movl	$-1, %eax	#, iftmp.172
.L149:
	.loc 1 523 0 discriminator 3
	movl	%eax, -184(%rbp)	# iftmp.172, rFrameU
	.loc 1 524 0 is_stmt 1 discriminator 3
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	testl	%eax, %eax	# D.21131
	je	.L150	#,
	.loc 1 524 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp952
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp953
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_127, D.21134
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_132, D.21135
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_137, D.21136
	cwtl
	jmp	.L151	#
.L150:
	.loc 1 524 0 discriminator 2
	movl	$-1, %eax	#, iftmp.173
.L151:
	.loc 1 524 0 discriminator 3
	movl	%eax, -180(%rbp)	# iftmp.173, rFrameUR
	jmp	.L152	#
.L145:
	.loc 1 528 0 is_stmt 1
	movq	img(%rip), %rax	# img, img.174
	movq	14168(%rax), %rdx	# img.174_142->mb_data, D.21137
	movq	img(%rip), %rax	# img, img.175
	movl	12(%rax), %eax	# img.175_144->current_mb_nr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _148->mb_field, D.21131
	testl	%eax, %eax	# D.21131
	je	.L153	#,
	.loc 1 530 0
	movl	-128(%rbp), %eax	# block_a.available, D.21131
	.loc 1 533 0
	testl	%eax, %eax	# D.21131
	je	.L154	#,
	.loc 1 531 0
	movq	img(%rip), %rax	# img, img.178
	movq	14168(%rax), %rdx	# img.178_151->mb_data, D.21137
	movl	-124(%rbp), %eax	# block_a.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _156->mb_field, D.21131
	.loc 1 532 0
	testl	%eax, %eax	# D.21131
	je	.L155	#,
	.loc 1 532 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp954
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp955
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_160, D.21134
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_165, D.21135
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_170, D.21136
	cwtl
	jmp	.L157	#
.L155:
	.loc 1 533 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp956
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp957
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_175, D.21134
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_180, D.21135
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_185, D.21136
	cwtl
	.loc 1 532 0 discriminator 2
	addl	%eax, %eax	# iftmp.177
	jmp	.L157	#
.L154:
	.loc 1 533 0 discriminator 1
	movl	$-1, %eax	#, iftmp.176
.L157:
	.loc 1 530 0
	movl	%eax, -188(%rbp)	# iftmp.176, rFrameL
	.loc 1 535 0
	movl	-96(%rbp), %eax	# block_b.available, D.21131
	.loc 1 538 0
	testl	%eax, %eax	# D.21131
	je	.L158	#,
	.loc 1 536 0
	movq	img(%rip), %rax	# img, img.181
	movq	14168(%rax), %rdx	# img.181_193->mb_data, D.21137
	movl	-92(%rbp), %eax	# block_b.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _198->mb_field, D.21131
	.loc 1 537 0
	testl	%eax, %eax	# D.21131
	je	.L159	#,
	.loc 1 537 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp958
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp959
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_202, D.21134
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_207, D.21135
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_212, D.21136
	cwtl
	jmp	.L161	#
.L159:
	.loc 1 538 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp960
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp961
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_217, D.21134
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_222, D.21135
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_227, D.21136
	cwtl
	.loc 1 537 0 discriminator 2
	addl	%eax, %eax	# iftmp.180
	jmp	.L161	#
.L158:
	.loc 1 538 0 discriminator 1
	movl	$-1, %eax	#, iftmp.179
.L161:
	.loc 1 535 0
	movl	%eax, -184(%rbp)	# iftmp.179, rFrameU
	.loc 1 540 0
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	.loc 1 543 0
	testl	%eax, %eax	# D.21131
	je	.L162	#,
	.loc 1 541 0
	movq	img(%rip), %rax	# img, img.184
	movq	14168(%rax), %rdx	# img.184_235->mb_data, D.21137
	movl	-60(%rbp), %eax	# block_c.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _240->mb_field, D.21131
	.loc 1 542 0
	testl	%eax, %eax	# D.21131
	je	.L163	#,
	.loc 1 542 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp962
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp963
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_244, D.21134
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_249, D.21135
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_254, D.21136
	cwtl
	jmp	.L165	#
.L163:
	.loc 1 543 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp964
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp965
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_259, D.21134
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_264, D.21135
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_269, D.21136
	cwtl
	.loc 1 542 0 discriminator 2
	addl	%eax, %eax	# iftmp.183
	jmp	.L165	#
.L162:
	.loc 1 543 0 discriminator 1
	movl	$-1, %eax	#, iftmp.182
.L165:
	.loc 1 540 0 discriminator 7
	movl	%eax, -180(%rbp)	# iftmp.182, rFrameUR
	jmp	.L152	#
.L153:
	.loc 1 548 0
	movl	-128(%rbp), %eax	# block_a.available, D.21131
	.loc 1 551 0
	testl	%eax, %eax	# D.21131
	je	.L166	#,
	.loc 1 549 0
	movq	img(%rip), %rax	# img, img.187
	movq	14168(%rax), %rdx	# img.187_277->mb_data, D.21137
	movl	-124(%rbp), %eax	# block_a.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _282->mb_field, D.21131
	.loc 1 550 0
	testl	%eax, %eax	# D.21131
	je	.L167	#,
	.loc 1 550 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp966
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp967
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_286, D.21134
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_291, D.21135
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_296, D.21136
	sarw	%ax	# D.21136
	cwtl
	jmp	.L169	#
.L167:
	.loc 1 551 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp968
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp969
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_302, D.21134
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_307, D.21135
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_312, D.21136
	.loc 1 550 0 discriminator 2
	cwtl
	jmp	.L169	#
.L166:
	.loc 1 551 0 discriminator 1
	movl	$-1, %eax	#, iftmp.185
.L169:
	.loc 1 548 0
	movl	%eax, -188(%rbp)	# iftmp.185, rFrameL
	.loc 1 553 0
	movl	-96(%rbp), %eax	# block_b.available, D.21131
	.loc 1 556 0
	testl	%eax, %eax	# D.21131
	je	.L170	#,
	.loc 1 554 0
	movq	img(%rip), %rax	# img, img.190
	movq	14168(%rax), %rdx	# img.190_319->mb_data, D.21137
	movl	-92(%rbp), %eax	# block_b.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _324->mb_field, D.21131
	.loc 1 555 0
	testl	%eax, %eax	# D.21131
	je	.L171	#,
	.loc 1 555 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp970
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp971
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_328, D.21134
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_333, D.21135
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_338, D.21136
	sarw	%ax	# D.21136
	cwtl
	jmp	.L173	#
.L171:
	.loc 1 556 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp972
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp973
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_344, D.21134
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_349, D.21135
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_354, D.21136
	.loc 1 555 0 discriminator 2
	cwtl
	jmp	.L173	#
.L170:
	.loc 1 556 0 discriminator 1
	movl	$-1, %eax	#, iftmp.188
.L173:
	.loc 1 553 0
	movl	%eax, -184(%rbp)	# iftmp.188, rFrameU
	.loc 1 558 0
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	.loc 1 561 0
	testl	%eax, %eax	# D.21131
	je	.L174	#,
	.loc 1 559 0
	movq	img(%rip), %rax	# img, img.193
	movq	14168(%rax), %rdx	# img.193_361->mb_data, D.21137
	movl	-60(%rbp), %eax	# block_c.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _366->mb_field, D.21131
	.loc 1 560 0
	testl	%eax, %eax	# D.21131
	je	.L175	#,
	.loc 1 560 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp974
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp975
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_370, D.21134
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_375, D.21135
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_380, D.21136
	sarw	%ax	# D.21136
	cwtl
	jmp	.L177	#
.L175:
	.loc 1 561 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp976
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-224(%rbp), %rax	# refPic, tmp977
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_386, D.21134
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_391, D.21135
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_396, D.21136
	.loc 1 560 0 discriminator 2
	cwtl
	jmp	.L177	#
.L174:
	.loc 1 561 0 discriminator 1
	movl	$-1, %eax	#, iftmp.191
.L177:
	.loc 1 558 0
	movl	%eax, -180(%rbp)	# iftmp.191, rFrameUR
.L152:
	.loc 1 569 0
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-188(%rbp), %eax	# rFrameL, D.21131
	jne	.L178	#,
	.loc 1 569 0 is_stmt 0 discriminator 1
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-184(%rbp), %eax	# rFrameU, D.21131
	je	.L178	#,
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-180(%rbp), %eax	# rFrameUR, D.21131
	je	.L178	#,
	movl	$1, -192(%rbp)	#, mvPredType
	jmp	.L179	#
.L178:
	.loc 1 570 0 is_stmt 1
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-188(%rbp), %eax	# rFrameL, D.21131
	je	.L180	#,
	.loc 1 570 0 is_stmt 0 discriminator 1
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-184(%rbp), %eax	# rFrameU, D.21131
	jne	.L180	#,
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-180(%rbp), %eax	# rFrameUR, D.21131
	je	.L180	#,
	movl	$2, -192(%rbp)	#, mvPredType
	jmp	.L179	#
.L180:
	.loc 1 571 0 is_stmt 1
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-188(%rbp), %eax	# rFrameL, D.21131
	je	.L179	#,
	.loc 1 571 0 is_stmt 0 discriminator 1
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-184(%rbp), %eax	# rFrameU, D.21131
	je	.L179	#,
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-180(%rbp), %eax	# rFrameUR, D.21131
	jne	.L179	#,
	movl	$3, -192(%rbp)	#, mvPredType
.L179:
	.loc 1 573 0 is_stmt 1
	cmpl	$8, 24(%rbp)	#, blockshape_x
	jne	.L181	#,
	.loc 1 573 0 is_stmt 0 discriminator 1
	cmpl	$16, 32(%rbp)	#, blockshape_y
	jne	.L181	#,
	.loc 1 575 0 is_stmt 1
	cmpl	$0, -160(%rbp)	#, mb_x
	jne	.L182	#,
	.loc 1 577 0
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-188(%rbp), %eax	# rFrameL, D.21131
	jne	.L184	#,
	.loc 1 578 0
	movl	$1, -192(%rbp)	#, mvPredType
	.loc 1 575 0
	jmp	.L185	#
.L182:
	.loc 1 582 0
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-180(%rbp), %eax	# rFrameUR, D.21131
	jne	.L184	#,
	.loc 1 583 0
	movl	$3, -192(%rbp)	#, mvPredType
	.loc 1 575 0
	jmp	.L185	#
.L184:
	jmp	.L185	#
.L181:
	.loc 1 586 0
	cmpl	$16, 24(%rbp)	#, blockshape_x
	jne	.L185	#,
	.loc 1 586 0 is_stmt 0 discriminator 1
	cmpl	$8, 32(%rbp)	#, blockshape_y
	jne	.L185	#,
	.loc 1 588 0 is_stmt 1
	cmpl	$0, -156(%rbp)	#, mb_y
	jne	.L186	#,
	.loc 1 590 0
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-184(%rbp), %eax	# rFrameU, D.21131
	jne	.L185	#,
	.loc 1 591 0
	movl	$2, -192(%rbp)	#, mvPredType
	jmp	.L185	#
.L186:
	.loc 1 595 0
	movswl	-236(%rbp), %eax	# ref_frame, D.21131
	cmpl	-188(%rbp), %eax	# rFrameL, D.21131
	jne	.L185	#,
	.loc 1 596 0
	movl	$1, -192(%rbp)	#, mvPredType
.L185:
	.loc 1 600 0
	movl	$0, -176(%rbp)	#, hv
	jmp	.L188	#
.L256:
	.loc 1 602 0
	movq	img(%rip), %rax	# img, img.194
	movl	72400(%rax), %eax	# img.194_425->MbaffFrameFlag, D.21131
	testl	%eax, %eax	# D.21131
	je	.L189	#,
	.loc 1 602 0 is_stmt 0 discriminator 1
	cmpl	$0, -176(%rbp)	#, hv
	jne	.L190	#,
.L189:
	.loc 1 604 0 is_stmt 1
	movl	-128(%rbp), %eax	# block_a.available, D.21131
	testl	%eax, %eax	# D.21131
	je	.L191	#,
	.loc 1 604 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp978
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp979
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_739, D.21133
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_744, D.21134
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_749, D.21135
	movl	-176(%rbp), %edx	# hv, tmp980
	movslq	%edx, %rdx	# tmp980, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_753, D.21136
	cwtl
	jmp	.L192	#
.L191:
	.loc 1 604 0 discriminator 2
	movl	$0, %eax	#, iftmp.195
.L192:
	.loc 1 604 0 discriminator 3
	movl	%eax, -208(%rbp)	# iftmp.195, mv_a
	.loc 1 605 0 is_stmt 1 discriminator 3
	movl	-96(%rbp), %eax	# block_b.available, D.21131
	testl	%eax, %eax	# D.21131
	je	.L193	#,
	.loc 1 605 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp981
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp982
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_761, D.21133
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_766, D.21134
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_771, D.21135
	movl	-176(%rbp), %edx	# hv, tmp983
	movslq	%edx, %rdx	# tmp983, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_775, D.21136
	cwtl
	jmp	.L194	#
.L193:
	.loc 1 605 0 discriminator 2
	movl	$0, %eax	#, iftmp.196
.L194:
	.loc 1 605 0 discriminator 3
	movl	%eax, -204(%rbp)	# iftmp.196, mv_b
	.loc 1 606 0 is_stmt 1 discriminator 3
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	testl	%eax, %eax	# D.21131
	je	.L195	#,
	.loc 1 606 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp984
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp985
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_783, D.21133
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_788, D.21134
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_793, D.21135
	movl	-176(%rbp), %edx	# hv, tmp986
	movslq	%edx, %rdx	# tmp986, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_797, D.21136
	cwtl
	jmp	.L196	#
.L195:
	.loc 1 606 0 discriminator 2
	movl	$0, %eax	#, iftmp.197
.L196:
	.loc 1 606 0 discriminator 3
	movl	%eax, -200(%rbp)	# iftmp.197, mv_c
	jmp	.L197	#
.L190:
	.loc 1 610 0 is_stmt 1
	movq	img(%rip), %rax	# img, img.198
	movq	14168(%rax), %rdx	# img.198_427->mb_data, D.21137
	movq	img(%rip), %rax	# img, img.199
	movl	12(%rax), %eax	# img.199_429->current_mb_nr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _433->mb_field, D.21131
	testl	%eax, %eax	# D.21131
	je	.L198	#,
	.loc 1 612 0
	movl	-128(%rbp), %eax	# block_a.available, D.21131
	.loc 1 614 0
	testl	%eax, %eax	# D.21131
	je	.L199	#,
	.loc 1 612 0
	movq	img(%rip), %rax	# img, img.202
	movq	14168(%rax), %rdx	# img.202_436->mb_data, D.21137
	movl	-124(%rbp), %eax	# block_a.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _441->mb_field, D.21131
	.loc 1 613 0
	testl	%eax, %eax	# D.21131
	je	.L200	#,
	.loc 1 613 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp987
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp988
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_446, D.21133
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_451, D.21134
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_456, D.21135
	movl	-176(%rbp), %edx	# hv, tmp989
	movslq	%edx, %rdx	# tmp989, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_460, D.21136
	cwtl
	jmp	.L202	#
.L200:
	.loc 1 614 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp990
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp991
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_465, D.21133
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_470, D.21134
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_475, D.21135
	movl	-176(%rbp), %edx	# hv, tmp992
	movslq	%edx, %rdx	# tmp992, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_479, D.21136
	movl	%eax, %edx	# D.21136, tmp993
	shrw	$15, %dx	#, tmp993
	addl	%edx, %eax	# tmp993, tmp994
	sarw	%ax	# tmp995
	.loc 1 613 0 discriminator 2
	cwtl
	jmp	.L202	#
.L199:
	.loc 1 614 0 discriminator 1
	movl	$0, %eax	#, iftmp.200
.L202:
	.loc 1 612 0
	movl	%eax, -208(%rbp)	# iftmp.200, mv_a
	.loc 1 616 0
	movl	-96(%rbp), %eax	# block_b.available, D.21131
	.loc 1 618 0
	testl	%eax, %eax	# D.21131
	je	.L203	#,
	.loc 1 616 0
	movq	img(%rip), %rax	# img, img.205
	movq	14168(%rax), %rdx	# img.205_487->mb_data, D.21137
	movl	-92(%rbp), %eax	# block_b.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _492->mb_field, D.21131
	.loc 1 617 0
	testl	%eax, %eax	# D.21131
	je	.L204	#,
	.loc 1 617 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp996
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp997
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_496, D.21133
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_501, D.21134
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_506, D.21135
	movl	-176(%rbp), %edx	# hv, tmp998
	movslq	%edx, %rdx	# tmp998, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_510, D.21136
	cwtl
	jmp	.L206	#
.L204:
	.loc 1 618 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp999
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp1000
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_515, D.21133
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_520, D.21134
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_525, D.21135
	movl	-176(%rbp), %edx	# hv, tmp1001
	movslq	%edx, %rdx	# tmp1001, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_529, D.21136
	movl	%eax, %edx	# D.21136, tmp1002
	shrw	$15, %dx	#, tmp1002
	addl	%edx, %eax	# tmp1002, tmp1003
	sarw	%ax	# tmp1004
	.loc 1 617 0 discriminator 2
	cwtl
	jmp	.L206	#
.L203:
	.loc 1 618 0 discriminator 1
	movl	$0, %eax	#, iftmp.203
.L206:
	.loc 1 616 0
	movl	%eax, -204(%rbp)	# iftmp.203, mv_b
	.loc 1 620 0
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	.loc 1 622 0
	testl	%eax, %eax	# D.21131
	je	.L207	#,
	.loc 1 620 0
	movq	img(%rip), %rax	# img, img.208
	movq	14168(%rax), %rdx	# img.208_537->mb_data, D.21137
	movl	-60(%rbp), %eax	# block_c.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _542->mb_field, D.21131
	.loc 1 621 0
	testl	%eax, %eax	# D.21131
	je	.L208	#,
	.loc 1 621 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp1005
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp1006
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_546, D.21133
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_551, D.21134
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_556, D.21135
	movl	-176(%rbp), %edx	# hv, tmp1007
	movslq	%edx, %rdx	# tmp1007, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_560, D.21136
	cwtl
	jmp	.L210	#
.L208:
	.loc 1 622 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp1008
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp1009
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_565, D.21133
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_570, D.21134
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_575, D.21135
	movl	-176(%rbp), %edx	# hv, tmp1010
	movslq	%edx, %rdx	# tmp1010, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_579, D.21136
	movl	%eax, %edx	# D.21136, tmp1011
	shrw	$15, %dx	#, tmp1011
	addl	%edx, %eax	# tmp1011, tmp1012
	sarw	%ax	# tmp1013
	.loc 1 621 0 discriminator 2
	cwtl
	jmp	.L210	#
.L207:
	.loc 1 622 0 discriminator 1
	movl	$0, %eax	#, iftmp.206
.L210:
	.loc 1 620 0 discriminator 14
	movl	%eax, -200(%rbp)	# iftmp.206, mv_c
	jmp	.L197	#
.L198:
	.loc 1 627 0
	movl	-128(%rbp), %eax	# block_a.available, D.21131
	.loc 1 629 0
	testl	%eax, %eax	# D.21131
	je	.L211	#,
	.loc 1 627 0
	movq	img(%rip), %rax	# img, img.211
	movq	14168(%rax), %rdx	# img.211_587->mb_data, D.21137
	movl	-124(%rbp), %eax	# block_a.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _592->mb_field, D.21131
	.loc 1 628 0
	testl	%eax, %eax	# D.21131
	je	.L212	#,
	.loc 1 628 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp1014
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp1015
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_596, D.21133
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_601, D.21134
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_606, D.21135
	movl	-176(%rbp), %edx	# hv, tmp1016
	movslq	%edx, %rdx	# tmp1016, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_610, D.21136
	cwtl
	addl	%eax, %eax	# iftmp.210
	jmp	.L214	#
.L212:
	.loc 1 629 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp1017
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp1018
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_616, D.21133
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_621, D.21134
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_626, D.21135
	movl	-176(%rbp), %edx	# hv, tmp1019
	movslq	%edx, %rdx	# tmp1019, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_630, D.21136
	.loc 1 628 0 discriminator 2
	cwtl
	jmp	.L214	#
.L211:
	.loc 1 629 0 discriminator 1
	movl	$0, %eax	#, iftmp.209
.L214:
	.loc 1 627 0
	movl	%eax, -208(%rbp)	# iftmp.209, mv_a
	.loc 1 631 0
	movl	-96(%rbp), %eax	# block_b.available, D.21131
	.loc 1 633 0
	testl	%eax, %eax	# D.21131
	je	.L215	#,
	.loc 1 631 0
	movq	img(%rip), %rax	# img, img.214
	movq	14168(%rax), %rdx	# img.214_637->mb_data, D.21137
	movl	-92(%rbp), %eax	# block_b.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _642->mb_field, D.21131
	.loc 1 632 0
	testl	%eax, %eax	# D.21131
	je	.L216	#,
	.loc 1 632 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp1020
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp1021
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_646, D.21133
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_651, D.21134
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_656, D.21135
	movl	-176(%rbp), %edx	# hv, tmp1022
	movslq	%edx, %rdx	# tmp1022, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_660, D.21136
	cwtl
	addl	%eax, %eax	# iftmp.213
	jmp	.L218	#
.L216:
	.loc 1 633 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp1023
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp1024
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_666, D.21133
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_671, D.21134
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_676, D.21135
	movl	-176(%rbp), %edx	# hv, tmp1025
	movslq	%edx, %rdx	# tmp1025, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_680, D.21136
	.loc 1 632 0 discriminator 2
	cwtl
	jmp	.L218	#
.L215:
	.loc 1 633 0 discriminator 1
	movl	$0, %eax	#, iftmp.212
.L218:
	.loc 1 631 0
	movl	%eax, -204(%rbp)	# iftmp.212, mv_b
	.loc 1 635 0
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	.loc 1 637 0
	testl	%eax, %eax	# D.21131
	je	.L219	#,
	.loc 1 635 0
	movq	img(%rip), %rax	# img, img.217
	movq	14168(%rax), %rdx	# img.217_687->mb_data, D.21137
	movl	-60(%rbp), %eax	# block_c.mb_addr, D.21131
	cltq
	imulq	$632, %rax, %rax	#, D.21132, D.21132
	addq	%rdx, %rax	# D.21137, D.21137
	movl	532(%rax), %eax	# _692->mb_field, D.21131
	.loc 1 636 0
	testl	%eax, %eax	# D.21131
	je	.L220	#,
	.loc 1 636 0 is_stmt 0 discriminator 1
	movl	-240(%rbp), %eax	# list, tmp1026
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp1027
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_696, D.21133
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_701, D.21134
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_706, D.21135
	movl	-176(%rbp), %edx	# hv, tmp1028
	movslq	%edx, %rdx	# tmp1028, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_710, D.21136
	cwtl
	addl	%eax, %eax	# iftmp.216
	jmp	.L222	#
.L220:
	.loc 1 637 0 is_stmt 1 discriminator 2
	movl	-240(%rbp), %eax	# list, tmp1029
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21132
	movq	-232(%rbp), %rax	# tmp_mv, tmp1030
	addq	%rdx, %rax	# D.21132, D.21138
	movq	(%rax), %rax	# *_716, D.21133
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21133
	movq	(%rax), %rax	# *_721, D.21134
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21134
	movq	(%rax), %rax	# *_726, D.21135
	movl	-176(%rbp), %edx	# hv, tmp1031
	movslq	%edx, %rdx	# tmp1031, D.21132
	addq	%rdx, %rdx	# D.21132
	addq	%rdx, %rax	# D.21132, D.21135
	movzwl	(%rax), %eax	# *_730, D.21136
	.loc 1 636 0 discriminator 2
	cwtl
	jmp	.L222	#
.L219:
	.loc 1 637 0 discriminator 1
	movl	$0, %eax	#, iftmp.215
.L222:
	.loc 1 635 0
	movl	%eax, -200(%rbp)	# iftmp.215, mv_c
.L197:
	.loc 1 642 0
	movq	input(%rip), %rax	# input, input.218
	movl	3292(%rax), %eax	# input.218_802->FMEnable, D.21131
	testl	%eax, %eax	# D.21131
	je	.L223	#,
	.loc 1 644 0
	movl	-128(%rbp), %eax	# block_a.available, D.21131
	testl	%eax, %eax	# D.21131
	je	.L224	#,
	.loc 1 644 0 is_stmt 0 discriminator 1
	cmpl	$1, -240(%rbp)	#, list
	jne	.L225	#,
	movq	all_bwmincost(%rip), %rax	# all_bwmincost, all_bwmincost.221
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21139
	movq	(%rax), %rax	# *_809, D.21140
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21140
	movq	(%rax), %rax	# *_814, D.21141
	movq	(%rax), %rax	# *_815, D.21142
	movl	FME_blocktype(%rip), %edx	# FME_blocktype, FME_blocktype.222
	movslq	%edx, %rdx	# FME_blocktype.222, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21142
	movq	(%rax), %rax	# *_820, D.21143
	movl	(%rax), %eax	# *_821, iftmp.220
	jmp	.L227	#
.L225:
	.loc 1 644 0 discriminator 2
	movq	all_mincost(%rip), %rax	# all_mincost, all_mincost.223
	movl	-112(%rbp), %edx	# block_a.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21139
	movq	(%rax), %rax	# *_827, D.21140
	movl	-108(%rbp), %edx	# block_a.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21140
	movq	(%rax), %rax	# *_832, D.21141
	movswq	-236(%rbp), %rdx	# ref_frame, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21141
	movq	(%rax), %rax	# *_836, D.21142
	movl	FME_blocktype(%rip), %edx	# FME_blocktype, FME_blocktype.224
	movslq	%edx, %rdx	# FME_blocktype.224, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21142
	movq	(%rax), %rax	# *_841, D.21143
	movl	(%rax), %eax	# *_842, iftmp.220
	jmp	.L227	#
.L224:
	movl	$0, %eax	#, iftmp.219
.L227:
	.loc 1 644 0 discriminator 3
	movl	%eax, -172(%rbp)	# iftmp.219, SAD_a
	.loc 1 645 0 is_stmt 1 discriminator 3
	movl	-96(%rbp), %eax	# block_b.available, D.21131
	testl	%eax, %eax	# D.21131
	je	.L228	#,
	.loc 1 645 0 is_stmt 0 discriminator 1
	cmpl	$1, -240(%rbp)	#, list
	jne	.L229	#,
	movq	all_bwmincost(%rip), %rax	# all_bwmincost, all_bwmincost.227
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21139
	movq	(%rax), %rax	# *_852, D.21140
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21140
	movq	(%rax), %rax	# *_857, D.21141
	movq	(%rax), %rax	# *_858, D.21142
	movl	FME_blocktype(%rip), %edx	# FME_blocktype, FME_blocktype.228
	movslq	%edx, %rdx	# FME_blocktype.228, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21142
	movq	(%rax), %rax	# *_863, D.21143
	movl	(%rax), %eax	# *_864, iftmp.226
	jmp	.L231	#
.L229:
	.loc 1 645 0 discriminator 2
	movq	all_mincost(%rip), %rax	# all_mincost, all_mincost.229
	movl	-80(%rbp), %edx	# block_b.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21139
	movq	(%rax), %rax	# *_870, D.21140
	movl	-76(%rbp), %edx	# block_b.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21140
	movq	(%rax), %rax	# *_875, D.21141
	movswq	-236(%rbp), %rdx	# ref_frame, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21141
	movq	(%rax), %rax	# *_879, D.21142
	movl	FME_blocktype(%rip), %edx	# FME_blocktype, FME_blocktype.230
	movslq	%edx, %rdx	# FME_blocktype.230, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21142
	movq	(%rax), %rax	# *_884, D.21143
	movl	(%rax), %eax	# *_885, iftmp.226
	jmp	.L231	#
.L228:
	movl	$0, %eax	#, iftmp.225
.L231:
	.loc 1 645 0 discriminator 3
	movl	%eax, -168(%rbp)	# iftmp.225, SAD_b
	.loc 1 646 0 is_stmt 1 discriminator 3
	movl	-32(%rbp), %eax	# block_d.available, D.21131
	testl	%eax, %eax	# D.21131
	je	.L232	#,
	.loc 1 646 0 is_stmt 0 discriminator 1
	cmpl	$1, -240(%rbp)	#, list
	jne	.L233	#,
	movq	all_bwmincost(%rip), %rax	# all_bwmincost, all_bwmincost.233
	movl	-16(%rbp), %edx	# block_d.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21139
	movq	(%rax), %rax	# *_895, D.21140
	movl	-12(%rbp), %edx	# block_d.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21140
	movq	(%rax), %rax	# *_900, D.21141
	movq	(%rax), %rax	# *_901, D.21142
	movl	FME_blocktype(%rip), %edx	# FME_blocktype, FME_blocktype.234
	movslq	%edx, %rdx	# FME_blocktype.234, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21142
	movq	(%rax), %rax	# *_906, D.21143
	movl	(%rax), %eax	# *_907, iftmp.232
	jmp	.L235	#
.L233:
	.loc 1 646 0 discriminator 2
	movq	all_mincost(%rip), %rax	# all_mincost, all_mincost.235
	movl	-16(%rbp), %edx	# block_d.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21139
	movq	(%rax), %rax	# *_913, D.21140
	movl	-12(%rbp), %edx	# block_d.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21140
	movq	(%rax), %rax	# *_918, D.21141
	movswq	-236(%rbp), %rdx	# ref_frame, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21141
	movq	(%rax), %rax	# *_922, D.21142
	movl	FME_blocktype(%rip), %edx	# FME_blocktype, FME_blocktype.236
	movslq	%edx, %rdx	# FME_blocktype.236, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21142
	movq	(%rax), %rax	# *_927, D.21143
	movl	(%rax), %eax	# *_928, iftmp.232
	jmp	.L235	#
.L232:
	movl	$0, %eax	#, iftmp.231
.L235:
	.loc 1 646 0 discriminator 3
	movl	%eax, -148(%rbp)	# iftmp.231, SAD_d
	.loc 1 647 0 is_stmt 1 discriminator 3
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	testl	%eax, %eax	# D.21131
	je	.L236	#,
	.loc 1 647 0 is_stmt 0 discriminator 1
	cmpl	$1, -240(%rbp)	#, list
	jne	.L237	#,
	movq	all_bwmincost(%rip), %rax	# all_bwmincost, all_bwmincost.239
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21139
	movq	(%rax), %rax	# *_938, D.21140
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21140
	movq	(%rax), %rax	# *_943, D.21141
	movq	(%rax), %rax	# *_944, D.21142
	movl	FME_blocktype(%rip), %edx	# FME_blocktype, FME_blocktype.240
	movslq	%edx, %rdx	# FME_blocktype.240, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21142
	movq	(%rax), %rax	# *_949, D.21143
	movl	(%rax), %eax	# *_950, iftmp.238
	jmp	.L239	#
.L237:
	.loc 1 647 0 discriminator 2
	movq	all_mincost(%rip), %rax	# all_mincost, all_mincost.241
	movl	-48(%rbp), %edx	# block_c.pos_x, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21139
	movq	(%rax), %rax	# *_956, D.21140
	movl	-44(%rbp), %edx	# block_c.pos_y, D.21131
	movslq	%edx, %rdx	# D.21131, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21140
	movq	(%rax), %rax	# *_961, D.21141
	movswq	-236(%rbp), %rdx	# ref_frame, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21141
	movq	(%rax), %rax	# *_965, D.21142
	movl	FME_blocktype(%rip), %edx	# FME_blocktype, FME_blocktype.242
	movslq	%edx, %rdx	# FME_blocktype.242, D.21132
	salq	$3, %rdx	#, D.21132
	addq	%rdx, %rax	# D.21132, D.21142
	movq	(%rax), %rax	# *_970, D.21143
	movl	(%rax), %eax	# *_971, iftmp.238
	jmp	.L239	#
.L236:
	movl	-148(%rbp), %eax	# SAD_d, iftmp.237
.L239:
	.loc 1 647 0 discriminator 3
	movl	%eax, -164(%rbp)	# iftmp.237, SAD_c
.L223:
	.loc 1 650 0 is_stmt 1
	movl	-192(%rbp), %eax	# mvPredType, mvPredType
	cmpl	$1, %eax	#, mvPredType
	je	.L241	#,
	cmpl	$1, %eax	#, mvPredType
	jg	.L242	#,
	testl	%eax, %eax	# mvPredType
	je	.L243	#,
	.loc 1 682 0
	jmp	.L252	#
.L242:
	.loc 1 650 0
	cmpl	$2, %eax	#, mvPredType
	je	.L244	#,
	cmpl	$3, %eax	#, mvPredType
	je	.L245	#,
	.loc 1 682 0
	jmp	.L252	#
.L243:
	.loc 1 653 0
	movl	-96(%rbp), %eax	# block_b.available, D.21131
	testl	%eax, %eax	# D.21131
	jne	.L246	#,
	.loc 1 653 0 is_stmt 0 discriminator 1
	movl	-64(%rbp), %eax	# block_c.available, D.21131
	testl	%eax, %eax	# D.21131
	jne	.L246	#,
	.loc 1 655 0 is_stmt 1
	movl	-208(%rbp), %eax	# mv_a, tmp1033
	movl	%eax, -196(%rbp)	# tmp1033, pred_vec
	.loc 1 656 0
	movq	input(%rip), %rax	# input, input.243
	movl	3292(%rax), %eax	# input.243_979->FMEnable, D.21131
	testl	%eax, %eax	# D.21131
	je	.L247	#,
	.loc 1 656 0 is_stmt 0 discriminator 1
	movl	-176(%rbp), %eax	# hv, tmp1035
	cltq
	movl	-172(%rbp), %edx	# SAD_a, tmp1036
	movl	%edx, -144(%rbp,%rax,4)	# tmp1036, temp_pred_SAD
	jmp	.L248	#
.L247:
	.loc 1 656 0 discriminator 2
	jmp	.L248	#
.L246:
	.loc 1 660 0 is_stmt 1
	movl	-204(%rbp), %eax	# mv_b, tmp1037
	movl	-208(%rbp), %edx	# mv_a, tmp1038
	addl	%eax, %edx	# tmp1037, D.21131
	movl	-200(%rbp), %eax	# mv_c, tmp1039
	leal	(%rdx,%rax), %ecx	#, D.21131
	movl	-204(%rbp), %eax	# mv_b, tmp1040
	cmpl	%eax, -200(%rbp)	# tmp1040, mv_c
	cmovle	-200(%rbp), %eax	# mv_c,, D.21131
	movl	%eax, %edx	# D.21131, D.21131
	movl	-208(%rbp), %eax	# mv_a, tmp1041
	cmpl	%eax, %edx	# tmp1041, D.21131
	cmovle	%edx, %eax	# D.21131,, D.21131
	subl	%eax, %ecx	# D.21131, D.21131
	movl	-204(%rbp), %eax	# mv_b, tmp1042
	cmpl	%eax, -200(%rbp)	# tmp1042, mv_c
	cmovge	-200(%rbp), %eax	# mv_c,, D.21131
	movl	%eax, %edx	# D.21131, D.21131
	movl	-208(%rbp), %eax	# mv_a, tmp1043
	cmpl	%eax, %edx	# tmp1043, D.21131
	cmovge	%edx, %eax	# D.21131,, D.21131
	subl	%eax, %ecx	# D.21131, tmp1044
	movl	%ecx, %eax	# tmp1044, tmp1044
	movl	%eax, -196(%rbp)	# tmp1044, pred_vec
.L248:
	.loc 1 662 0
	movq	input(%rip), %rax	# input, input.244
	movl	3292(%rax), %eax	# input.244_989->FMEnable, D.21131
	testl	%eax, %eax	# D.21131
	je	.L249	#,
	.loc 1 664 0
	movl	-196(%rbp), %eax	# pred_vec, tmp1045
	cmpl	-208(%rbp), %eax	# mv_a, tmp1045
	jne	.L250	#,
	.loc 1 664 0 is_stmt 0 discriminator 1
	cmpl	$0, -172(%rbp)	#, SAD_a
	je	.L250	#,
	movl	-176(%rbp), %eax	# hv, tmp1047
	cltq
	movl	-172(%rbp), %edx	# SAD_a, tmp1048
	movl	%edx, -144(%rbp,%rax,4)	# tmp1048, temp_pred_SAD
	jmp	.L249	#
.L250:
	.loc 1 665 0 is_stmt 1
	movl	-196(%rbp), %eax	# pred_vec, tmp1049
	cmpl	-204(%rbp), %eax	# mv_b, tmp1049
	jne	.L251	#,
	.loc 1 665 0 is_stmt 0 discriminator 1
	cmpl	$0, -168(%rbp)	#, SAD_b
	je	.L251	#,
	movl	-176(%rbp), %eax	# hv, tmp1051
	cltq
	movl	-168(%rbp), %edx	# SAD_b, tmp1052
	movl	%edx, -144(%rbp,%rax,4)	# tmp1052, temp_pred_SAD
	jmp	.L249	#
.L251:
	.loc 1 666 0 is_stmt 1
	movl	-176(%rbp), %eax	# hv, tmp1054
	cltq
	movl	-164(%rbp), %edx	# SAD_c, tmp1055
	movl	%edx, -144(%rbp,%rax,4)	# tmp1055, temp_pred_SAD
	.loc 1 668 0
	jmp	.L252	#
.L249:
	jmp	.L252	#
.L241:
	.loc 1 670 0
	movl	-208(%rbp), %eax	# mv_a, tmp1056
	movl	%eax, -196(%rbp)	# tmp1056, pred_vec
	.loc 1 671 0
	movq	input(%rip), %rax	# input, input.245
	movl	3292(%rax), %eax	# input.245_992->FMEnable, D.21131
	testl	%eax, %eax	# D.21131
	je	.L253	#,
	.loc 1 671 0 is_stmt 0 discriminator 1
	movl	-176(%rbp), %eax	# hv, tmp1058
	cltq
	movl	-172(%rbp), %edx	# SAD_a, tmp1059
	movl	%edx, -144(%rbp,%rax,4)	# tmp1059, temp_pred_SAD
	.loc 1 672 0 is_stmt 1 discriminator 1
	jmp	.L252	#
.L253:
	.loc 1 672 0 is_stmt 0
	jmp	.L252	#
.L244:
	.loc 1 674 0 is_stmt 1
	movl	-204(%rbp), %eax	# mv_b, tmp1060
	movl	%eax, -196(%rbp)	# tmp1060, pred_vec
	.loc 1 675 0
	movq	input(%rip), %rax	# input, input.246
	movl	3292(%rax), %eax	# input.246_995->FMEnable, D.21131
	testl	%eax, %eax	# D.21131
	je	.L254	#,
	.loc 1 675 0 is_stmt 0 discriminator 1
	movl	-176(%rbp), %eax	# hv, tmp1062
	cltq
	movl	-168(%rbp), %edx	# SAD_b, tmp1063
	movl	%edx, -144(%rbp,%rax,4)	# tmp1063, temp_pred_SAD
	.loc 1 676 0 is_stmt 1 discriminator 1
	jmp	.L252	#
.L254:
	.loc 1 676 0 is_stmt 0
	jmp	.L252	#
.L245:
	.loc 1 678 0 is_stmt 1
	movl	-200(%rbp), %eax	# mv_c, tmp1064
	movl	%eax, -196(%rbp)	# tmp1064, pred_vec
	.loc 1 679 0
	movq	input(%rip), %rax	# input, input.247
	movl	3292(%rax), %eax	# input.247_998->FMEnable, D.21131
	testl	%eax, %eax	# D.21131
	je	.L255	#,
	.loc 1 679 0 is_stmt 0 discriminator 1
	movl	-176(%rbp), %eax	# hv, tmp1066
	cltq
	movl	-164(%rbp), %edx	# SAD_c, tmp1067
	movl	%edx, -144(%rbp,%rax,4)	# tmp1067, temp_pred_SAD
	.loc 1 680 0 is_stmt 1 discriminator 1
	jmp	.L258	#
.L255:
.L258:
	.loc 1 680 0 is_stmt 0
	nop
.L252:
	.loc 1 685 0 is_stmt 1
	movl	-176(%rbp), %eax	# hv, tmp1068
	cltq
	leaq	(%rax,%rax), %rdx	#, D.21132
	movq	-216(%rbp), %rax	# pmv, tmp1069
	addq	%rax, %rdx	# tmp1069, D.21135
	movl	-196(%rbp), %eax	# pred_vec, tmp1070
	movw	%ax, (%rdx)	# D.21136, *_1003
	.loc 1 600 0
	addl	$1, -176(%rbp)	#, hv
.L188:
	.loc 1 600 0 is_stmt 0 discriminator 1
	cmpl	$1, -176(%rbp)	#, hv
	jle	.L256	#,
	.loc 1 689 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.248
	movl	3292(%rax), %eax	# input.248_1006->FMEnable, D.21131
	testl	%eax, %eax	# D.21131
	je	.L134	#,
	.loc 1 689 0 is_stmt 0 discriminator 1
	movl	-144(%rbp), %edx	# temp_pred_SAD, D.21131
	movl	-140(%rbp), %eax	# temp_pred_SAD, D.21131
	cmpl	%eax, %edx	# D.21131, D.21131
	cmovle	%edx, %eax	# D.21131,, pred_SAD_space.249
	movl	%eax, pred_SAD_space(%rip)	# pred_SAD_space.249, pred_SAD_space
.L134:
	.loc 1 690 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	SetMotionVectorPredictor, .-SetMotionVectorPredictor
	.section	.rodata
	.align 8
.LC8:
	.string	"Init_Motion_Search_Module: spiral_search_x"
	.align 8
.LC9:
	.string	"Init_Motion_Search_Module: spiral_search_y"
	.align 8
.LC10:
	.string	"Init_Motion_Search_Module: mvbits"
	.align 8
.LC11:
	.string	"Init_Motion_Search_Module: refbits"
	.align 8
.LC12:
	.string	"Init_Motion_Search_Module: byte_abs"
	.text
	.globl	Init_Motion_Search_Module
	.type	Init_Motion_Search_Module, @function
Init_Motion_Search_Module:
.LFB8:
	.loc 1 700 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	.loc 1 703 0
	movq	img(%rip), %rax	# img, img.251
	movl	72684(%rax), %edx	# img.251_13->max_imgpel_value, D.21145
	movq	img(%rip), %rax	# img, img.252
	movl	72688(%rax), %eax	# img.252_15->max_imgpel_value_uv, D.21145
	cmpl	%eax, %edx	# D.21145, D.21145
	jle	.L260	#,
	.loc 1 703 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.253
	movl	72684(%rax), %eax	# img.253_17->max_imgpel_value, D.21145
	addl	$1, %eax	#, D.21145
	addl	%eax, %eax	# iftmp.250
	jmp	.L261	#
.L260:
	.loc 1 703 0 discriminator 2
	movq	img(%rip), %rax	# img, img.254
	movl	72688(%rax), %eax	# img.254_21->max_imgpel_value_uv, D.21145
	addl	$1, %eax	#, D.21145
	addl	%eax, %eax	# iftmp.250
.L261:
	.loc 1 703 0 discriminator 3
	movl	%eax, -40(%rbp)	# iftmp.250, byte_abs_range
	.loc 1 704 0 is_stmt 1 discriminator 3
	movq	input(%rip), %rax	# input, input.255
	movl	32(%rax), %eax	# input.255_26->search_range, tmp208
	movl	%eax, -36(%rbp)	# tmp208, search_range
	.loc 1 705 0 discriminator 3
	movq	img(%rip), %rax	# img, img.256
	movl	36(%rax), %eax	# img.256_28->max_num_references, tmp209
	movl	%eax, -32(%rbp)	# tmp209, number_of_reference_frames
	.loc 1 706 0 discriminator 3
	movl	-36(%rbp), %eax	# search_range, tmp210
	addl	%eax, %eax	# D.21145
	leal	1(%rax), %edx	#, D.21145
	movl	-36(%rbp), %eax	# search_range, tmp211
	addl	%eax, %eax	# D.21145
	addl	$1, %eax	#, D.21145
	imull	%edx, %eax	# D.21145, D.21145
	movl	$9, %edx	#, tmp213
	cmpl	$9, %eax	#, D.21145
	cmovl	%edx, %eax	# D.21145,, tmp213, tmp212
	movl	%eax, -28(%rbp)	# tmp212, max_search_points
	.loc 1 707 0 discriminator 3
	movl	-32(%rbp), %eax	# number_of_reference_frames, tmp214
	addl	$1, %eax	#, D.21145
	movl	$16, %edx	#, tmp215
	cmpl	$16, %eax	#, D.21145
	cmovl	%edx, %eax	# D.21145,, tmp215, D.21145
	cvtsi2sd	%eax, %xmm0	# D.21145, D.21146
	call	log	#
	movsd	.LC6(%rip), %xmm1	#, tmp216
	divsd	%xmm1, %xmm0	# tmp216, D.21146
	movsd	.LC7(%rip), %xmm1	#, tmp217
	addsd	%xmm1, %xmm0	# tmp217, D.21146
	call	floor	#
	cvttsd2si	%xmm0, %eax	# D.21146, D.21145
	addl	%eax, %eax	# D.21145
	addl	$1, %eax	#, tmp218
	movl	%eax, -24(%rbp)	# tmp218, max_ref_bits
	.loc 1 708 0 discriminator 3
	movl	-24(%rbp), %eax	# max_ref_bits, tmp219
	sarl	%eax	# D.21145
	addl	$1, %eax	#, D.21145
	movl	$1, %edx	#, tmp220
	movl	%eax, %ecx	# D.21145, tmp303
	sall	%cl, %edx	# tmp303, D.21145
	movl	%edx, %eax	# D.21145, D.21145
	subl	$1, %eax	#, tmp221
	movl	%eax, -20(%rbp)	# tmp221, max_ref
	.loc 1 709 0 discriminator 3
	movl	-36(%rbp), %eax	# search_range, tmp222
	sall	$3, %eax	#, D.21145
	addl	$12, %eax	#, tmp223
	movl	%eax, -16(%rbp)	# tmp223, number_of_subpel_positions
	.loc 1 710 0 discriminator 3
	movl	-16(%rbp), %eax	# number_of_subpel_positions, tmp224
	addl	$1, %eax	#, D.21145
	cvtsi2sd	%eax, %xmm0	# D.21145, D.21146
	call	log	#
	movsd	.LC6(%rip), %xmm1	#, tmp225
	divsd	%xmm1, %xmm0	# tmp225, D.21146
	movsd	.LC7(%rip), %xmm1	#, tmp226
	addsd	%xmm1, %xmm0	# tmp226, D.21146
	call	ceil	#
	cvttsd2si	%xmm0, %eax	# D.21146, D.21145
	addl	%eax, %eax	# D.21145
	addl	$3, %eax	#, tmp227
	movl	%eax, -12(%rbp)	# tmp227, max_mv_bits
	.loc 1 711 0 discriminator 3
	movl	-12(%rbp), %eax	# max_mv_bits, tmp228
	sarl	%eax	# D.21145
	movl	$1, %edx	#, tmp229
	movl	%eax, %ecx	# D.21145, tmp305
	sall	%cl, %edx	# tmp305, D.21145
	movl	%edx, %eax	# D.21145, D.21145
	subl	$1, %eax	#, max_mvd.257
	movl	%eax, max_mvd(%rip)	# max_mvd.257, max_mvd
	.loc 1 716 0 discriminator 3
	movl	-28(%rbp), %eax	# max_search_points, tmp230
	cltq
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.21147,
	call	calloc	#
	movq	%rax, spiral_search_x(%rip)	# spiral_search_x.258, spiral_search_x
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.259
	testq	%rax, %rax	# spiral_search_x.259
	jne	.L262	#,
	.loc 1 717 0
	movl	$.LC8, %edi	#,
	call	no_mem_exit	#
.L262:
	.loc 1 718 0
	movl	-28(%rbp), %eax	# max_search_points, tmp232
	cltq
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.21147,
	call	calloc	#
	movq	%rax, spiral_search_y(%rip)	# spiral_search_y.260, spiral_search_y
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.261
	testq	%rax, %rax	# spiral_search_y.261
	jne	.L263	#,
	.loc 1 719 0
	movl	$.LC9, %edi	#,
	call	no_mem_exit	#
.L263:
	.loc 1 720 0
	movl	max_mvd(%rip), %eax	# max_mvd, max_mvd.262
	addl	%eax, %eax	# D.21145
	addl	$1, %eax	#, D.21145
	cltq
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.21147,
	call	calloc	#
	movq	%rax, mvbits(%rip)	# mvbits.263, mvbits
	movq	mvbits(%rip), %rax	# mvbits, mvbits.264
	testq	%rax, %rax	# mvbits.264
	jne	.L264	#,
	.loc 1 721 0
	movl	$.LC10, %edi	#,
	call	no_mem_exit	#
.L264:
	.loc 1 722 0
	movl	-20(%rbp), %eax	# max_ref, tmp235
	cltq
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.21147,
	call	calloc	#
	movq	%rax, refbits(%rip)	# refbits.265, refbits
	movq	refbits(%rip), %rax	# refbits, refbits.266
	testq	%rax, %rax	# refbits.266
	jne	.L265	#,
	.loc 1 723 0
	movl	$.LC11, %edi	#,
	call	no_mem_exit	#
.L265:
	.loc 1 724 0
	movl	-40(%rbp), %eax	# byte_abs_range, tmp237
	cltq
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.21147,
	call	calloc	#
	movq	%rax, byte_abs(%rip)	# byte_abs.267, byte_abs
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.268
	testq	%rax, %rax	# byte_abs.268
	jne	.L266	#,
	.loc 1 725 0
	movl	$.LC12, %edi	#,
	call	no_mem_exit	#
.L266:
	.loc 1 727 0
	movq	img(%rip), %rax	# img, img.269
	movl	36(%rax), %eax	# img.269_82->max_num_references, D.21145
	addl	$1, %eax	#, D.21145
	movl	$4, %r8d	#,
	movl	%eax, %ecx	# D.21145,
	movl	$2, %edx	#,
	movl	$8, %esi	#,
	movl	$motion_cost, %edi	#,
	call	get_mem4Dint	#
	.loc 1 730 0
	movq	mvbits(%rip), %rax	# mvbits, mvbits.270
	movl	max_mvd(%rip), %edx	# max_mvd, max_mvd.271
	movslq	%edx, %rdx	# max_mvd.271, D.21147
	salq	$2, %rdx	#, D.21147
	addq	%rdx, %rax	# D.21147, mvbits.272
	movq	%rax, mvbits(%rip)	# mvbits.272, mvbits
	.loc 1 731 0
	movq	byte_abs(%rip), %rdx	# byte_abs, byte_abs.273
	movl	-40(%rbp), %eax	# byte_abs_range, tmp239
	movl	%eax, %ecx	# tmp239, tmp240
	shrl	$31, %ecx	#, tmp240
	addl	%ecx, %eax	# tmp240, tmp241
	sarl	%eax	# tmp242
	cltq
	salq	$2, %rax	#, D.21147
	addq	%rdx, %rax	# byte_abs.273, byte_abs.274
	movq	%rax, byte_abs(%rip)	# byte_abs.274, byte_abs
	.loc 1 737 0
	movq	mvbits(%rip), %rax	# mvbits, mvbits.275
	movl	$1, (%rax)	#, *mvbits.275_95
	.loc 1 738 0
	movl	$3, -56(%rbp)	#, bits
	jmp	.L267	#
.L270:
	.loc 1 740 0
	movl	-56(%rbp), %eax	# bits, tmp243
	sarl	%eax	# D.21145
	movl	$1, %edx	#, tmp244
	movl	%eax, %ecx	# D.21145, tmp308
	sall	%cl, %edx	# tmp308, tmp245
	movl	%edx, %eax	# tmp245, tmp245
	movl	%eax, -8(%rbp)	# tmp245, imax
	.loc 1 741 0
	movl	-8(%rbp), %eax	# imax, tmp249
	sarl	%eax	# tmp248
	movl	%eax, -4(%rbp)	# tmp248, imin
	.loc 1 743 0
	movl	-4(%rbp), %eax	# imin, tmp250
	movl	%eax, -52(%rbp)	# tmp250, i
	jmp	.L268	#
.L269:
	.loc 1 743 0 is_stmt 0 discriminator 2
	movq	mvbits(%rip), %rax	# mvbits, mvbits.276
	movl	-52(%rbp), %edx	# i, tmp251
	negl	%edx	# D.21145
	movslq	%edx, %rdx	# D.21145, D.21147
	salq	$2, %rdx	#, D.21147
	leaq	(%rax,%rdx), %rcx	#, D.21148
	movq	mvbits(%rip), %rax	# mvbits, mvbits.277
	movl	-52(%rbp), %edx	# i, tmp252
	movslq	%edx, %rdx	# tmp252, D.21147
	salq	$2, %rdx	#, D.21147
	addq	%rdx, %rax	# D.21147, D.21148
	movl	-56(%rbp), %edx	# bits, tmp253
	movl	%edx, (%rax)	# tmp253, *_109
	movl	(%rax), %eax	# *_109, D.21145
	movl	%eax, (%rcx)	# D.21145, *_105
	addl	$1, -52(%rbp)	#, i
.L268:
	.loc 1 743 0 discriminator 1
	movl	-52(%rbp), %eax	# i, tmp254
	cmpl	-8(%rbp), %eax	# imax, tmp254
	jl	.L269	#,
	.loc 1 738 0 is_stmt 1
	addl	$2, -56(%rbp)	#, bits
.L267:
	.loc 1 738 0 is_stmt 0 discriminator 1
	movl	-56(%rbp), %eax	# bits, tmp255
	cmpl	-12(%rbp), %eax	# max_mv_bits, tmp255
	jle	.L270	#,
	.loc 1 746 0 is_stmt 1
	movq	refbits(%rip), %rax	# refbits, refbits.278
	movl	$1, (%rax)	#, *refbits.278_113
	.loc 1 747 0
	movl	$3, -56(%rbp)	#, bits
	jmp	.L271	#
.L274:
	.loc 1 749 0
	movl	-56(%rbp), %eax	# bits, tmp256
	sarl	%eax	# D.21145
	addl	$1, %eax	#, D.21145
	movl	$1, %edx	#, tmp257
	movl	%eax, %ecx	# D.21145, tmp310
	sall	%cl, %edx	# tmp310, D.21145
	movl	%edx, %eax	# D.21145, D.21145
	subl	$1, %eax	#, tmp258
	movl	%eax, -8(%rbp)	# tmp258, imax
	.loc 1 750 0
	movl	-8(%rbp), %eax	# imax, tmp262
	sarl	%eax	# tmp261
	movl	%eax, -4(%rbp)	# tmp261, imin
	.loc 1 752 0
	movl	-4(%rbp), %eax	# imin, tmp263
	movl	%eax, -52(%rbp)	# tmp263, i
	jmp	.L272	#
.L273:
	.loc 1 752 0 is_stmt 0 discriminator 2
	movq	refbits(%rip), %rax	# refbits, refbits.279
	movl	-52(%rbp), %edx	# i, tmp264
	movslq	%edx, %rdx	# tmp264, D.21147
	salq	$2, %rdx	#, D.21147
	addq	%rax, %rdx	# refbits.279, D.21148
	movl	-56(%rbp), %eax	# bits, tmp265
	movl	%eax, (%rdx)	# tmp265, *_124
	addl	$1, -52(%rbp)	#, i
.L272:
	.loc 1 752 0 discriminator 1
	movl	-52(%rbp), %eax	# i, tmp266
	cmpl	-8(%rbp), %eax	# imax, tmp266
	jl	.L273	#,
	.loc 1 747 0 is_stmt 1
	addl	$2, -56(%rbp)	#, bits
.L271:
	.loc 1 747 0 is_stmt 0 discriminator 1
	movl	-56(%rbp), %eax	# bits, tmp267
	cmpl	-24(%rbp), %eax	# max_ref_bits, tmp267
	jle	.L274	#,
	.loc 1 755 0 is_stmt 1
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.280
	movl	$0, (%rax)	#, *byte_abs.280_127
	.loc 1 756 0
	movl	$1, -52(%rbp)	#, i
	jmp	.L275	#
.L276:
	.loc 1 756 0 is_stmt 0 discriminator 2
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.281
	movl	-52(%rbp), %edx	# i, tmp268
	movslq	%edx, %rdx	# tmp268, D.21147
	salq	$2, %rdx	#, D.21147
	leaq	(%rax,%rdx), %rcx	#, D.21148
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.282
	movl	-52(%rbp), %edx	# i, tmp269
	negl	%edx	# D.21145
	movslq	%edx, %rdx	# D.21145, D.21147
	salq	$2, %rdx	#, D.21147
	addq	%rdx, %rax	# D.21147, D.21148
	movl	-52(%rbp), %edx	# i, tmp270
	movl	%edx, (%rax)	# tmp270, *_138
	movl	(%rax), %eax	# *_138, D.21145
	movl	%eax, (%rcx)	# D.21145, *_133
	addl	$1, -52(%rbp)	#, i
.L275:
	.loc 1 756 0 discriminator 1
	movl	-40(%rbp), %eax	# byte_abs_range, tmp271
	movl	%eax, %edx	# tmp271, tmp272
	shrl	$31, %edx	#, tmp272
	addl	%edx, %eax	# tmp272, tmp273
	sarl	%eax	# tmp274
	cmpl	-52(%rbp), %eax	# i, D.21145
	jg	.L276	#,
	.loc 1 758 0 is_stmt 1
	movq	spiral_search_x(%rip), %rdx	# spiral_search_x, spiral_search_x.283
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.284
	movl	$0, (%rax)	#, *spiral_search_y.284_142
	movl	(%rax), %eax	# *spiral_search_y.284_142, D.21145
	movl	%eax, (%rdx)	# D.21145, *spiral_search_x.283_141
	.loc 1 759 0
	movl	$1, -48(%rbp)	#, k
	movl	$1, -44(%rbp)	#, l
	jmp	.L277	#
.L282:
	.loc 1 761 0
	movl	$1, %eax	#, tmp278
	subl	-44(%rbp), %eax	# l, tmp277
	movl	%eax, -52(%rbp)	# tmp277, i
	jmp	.L278	#
.L279:
	.loc 1 763 0 discriminator 2
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.285
	movl	-48(%rbp), %edx	# k, tmp279
	movslq	%edx, %rdx	# tmp279, D.21147
	salq	$2, %rdx	#, D.21147
	addq	%rax, %rdx	# spiral_search_x.285, D.21148
	movl	-52(%rbp), %eax	# i, tmp280
	movl	%eax, (%rdx)	# tmp280, *_151
	movq	spiral_search_y(%rip), %rcx	# spiral_search_y, spiral_search_y.286
	movl	-48(%rbp), %eax	# k, k.287
	leal	1(%rax), %edx	#, tmp281
	movl	%edx, -48(%rbp)	# tmp281, k
	cltq
	salq	$2, %rax	#, D.21147
	addq	%rcx, %rax	# spiral_search_y.286, D.21148
	movl	-44(%rbp), %edx	# l, tmp282
	negl	%edx	# D.21145
	movl	%edx, (%rax)	# D.21145, *_157
	.loc 1 764 0 discriminator 2
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.288
	movl	-48(%rbp), %edx	# k, tmp283
	movslq	%edx, %rdx	# tmp283, D.21147
	salq	$2, %rdx	#, D.21147
	addq	%rax, %rdx	# spiral_search_x.288, D.21148
	movl	-52(%rbp), %eax	# i, tmp284
	movl	%eax, (%rdx)	# tmp284, *_162
	movq	spiral_search_y(%rip), %rcx	# spiral_search_y, spiral_search_y.289
	movl	-48(%rbp), %eax	# k, k.290
	leal	1(%rax), %edx	#, tmp285
	movl	%edx, -48(%rbp)	# tmp285, k
	cltq
	salq	$2, %rax	#, D.21147
	leaq	(%rcx,%rax), %rdx	#, D.21148
	movl	-44(%rbp), %eax	# l, tmp286
	movl	%eax, (%rdx)	# tmp286, *_168
	.loc 1 761 0 discriminator 2
	addl	$1, -52(%rbp)	#, i
.L278:
	.loc 1 761 0 is_stmt 0 discriminator 1
	movl	-52(%rbp), %eax	# i, tmp287
	cmpl	-44(%rbp), %eax	# l, tmp287
	jl	.L279	#,
	.loc 1 766 0 is_stmt 1
	movl	-44(%rbp), %eax	# l, tmp291
	negl	%eax	# tmp290
	movl	%eax, -52(%rbp)	# tmp290, i
	jmp	.L280	#
.L281:
	.loc 1 768 0 discriminator 2
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.291
	movl	-48(%rbp), %edx	# k, tmp292
	movslq	%edx, %rdx	# tmp292, D.21147
	salq	$2, %rdx	#, D.21147
	addq	%rdx, %rax	# D.21147, D.21148
	movl	-44(%rbp), %edx	# l, tmp293
	negl	%edx	# D.21145
	movl	%edx, (%rax)	# D.21145, *_174
	movq	spiral_search_y(%rip), %rcx	# spiral_search_y, spiral_search_y.292
	movl	-48(%rbp), %eax	# k, k.293
	leal	1(%rax), %edx	#, tmp294
	movl	%edx, -48(%rbp)	# tmp294, k
	cltq
	salq	$2, %rax	#, D.21147
	leaq	(%rcx,%rax), %rdx	#, D.21148
	movl	-52(%rbp), %eax	# i, tmp295
	movl	%eax, (%rdx)	# tmp295, *_181
	.loc 1 769 0 discriminator 2
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.294
	movl	-48(%rbp), %edx	# k, tmp296
	movslq	%edx, %rdx	# tmp296, D.21147
	salq	$2, %rdx	#, D.21147
	addq	%rax, %rdx	# spiral_search_x.294, D.21148
	movl	-44(%rbp), %eax	# l, tmp297
	movl	%eax, (%rdx)	# tmp297, *_185
	movq	spiral_search_y(%rip), %rcx	# spiral_search_y, spiral_search_y.295
	movl	-48(%rbp), %eax	# k, k.296
	leal	1(%rax), %edx	#, tmp298
	movl	%edx, -48(%rbp)	# tmp298, k
	cltq
	salq	$2, %rax	#, D.21147
	leaq	(%rcx,%rax), %rdx	#, D.21148
	movl	-52(%rbp), %eax	# i, tmp299
	movl	%eax, (%rdx)	# tmp299, *_191
	.loc 1 766 0 discriminator 2
	addl	$1, -52(%rbp)	#, i
.L280:
	.loc 1 766 0 is_stmt 0 discriminator 1
	movl	-52(%rbp), %eax	# i, tmp300
	cmpl	-44(%rbp), %eax	# l, tmp300
	jle	.L281	#,
	.loc 1 759 0 is_stmt 1
	addl	$1, -44(%rbp)	#, l
.L277:
	.loc 1 759 0 is_stmt 0 discriminator 1
	movl	$1, %eax	#, tmp301
	cmpl	$0, -36(%rbp)	#, search_range
	cmovg	-36(%rbp), %eax	# search_range,, D.21145
	cmpl	-44(%rbp), %eax	# l, D.21145
	jge	.L282	#,
	.loc 1 774 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.297
	movl	3292(%rax), %eax	# input.297_194->FMEnable, D.21145
	testl	%eax, %eax	# D.21145
	jne	.L259	#,
	.loc 1 775 0
	movl	$0, %eax	#,
	call	InitializeFastFullIntegerSearch	#
.L259:
	.loc 1 777 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	Init_Motion_Search_Module, .-Init_Motion_Search_Module
	.globl	Clear_Motion_Search_Module
	.type	Clear_Motion_Search_Module, @function
Clear_Motion_Search_Module:
.LFB9:
	.loc 1 788 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 790 0
	movq	mvbits(%rip), %rax	# mvbits, mvbits.298
	movl	max_mvd(%rip), %edx	# max_mvd, max_mvd.299
	movslq	%edx, %rdx	# max_mvd.299, D.21154
	salq	$2, %rdx	#, D.21154
	negq	%rdx	# D.21155
	addq	%rdx, %rax	# D.21155, mvbits.300
	movq	%rax, mvbits(%rip)	# mvbits.300, mvbits
	.loc 1 791 0
	movq	byte_abs(%rip), %rdx	# byte_abs, byte_abs.301
	movq	img(%rip), %rax	# img, img.303
	movl	72684(%rax), %ecx	# img.303_9->max_imgpel_value, D.21156
	movq	img(%rip), %rax	# img, img.304
	movl	72688(%rax), %eax	# img.304_11->max_imgpel_value_uv, D.21156
	cmpl	%eax, %ecx	# D.21156, D.21156
	jle	.L285	#,
	.loc 1 791 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.305
	movl	72684(%rax), %eax	# img.305_13->max_imgpel_value, D.21156
	addl	$1, %eax	#, D.21156
	cltq
	salq	$2, %rax	#, D.21154
	negq	%rax	# iftmp.302
	jmp	.L286	#
.L285:
	.loc 1 791 0 discriminator 2
	movq	img(%rip), %rax	# img, img.306
	movl	72688(%rax), %eax	# img.306_19->max_imgpel_value_uv, D.21156
	addl	$1, %eax	#, D.21156
	cltq
	salq	$2, %rax	#, D.21154
	negq	%rax	# iftmp.302
.L286:
	.loc 1 791 0 discriminator 3
	addq	%rdx, %rax	# byte_abs.301, byte_abs.307
	movq	%rax, byte_abs(%rip)	# byte_abs.307, byte_abs
	.loc 1 794 0 is_stmt 1 discriminator 3
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.308
	movq	%rax, %rdi	# spiral_search_x.308,
	call	free	#
	.loc 1 795 0 discriminator 3
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.309
	movq	%rax, %rdi	# spiral_search_y.309,
	call	free	#
	.loc 1 796 0 discriminator 3
	movq	mvbits(%rip), %rax	# mvbits, mvbits.310
	movq	%rax, %rdi	# mvbits.310,
	call	free	#
	.loc 1 797 0 discriminator 3
	movq	refbits(%rip), %rax	# refbits, refbits.311
	movq	%rax, %rdi	# refbits.311,
	call	free	#
	.loc 1 798 0 discriminator 3
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.312
	movq	%rax, %rdi	# byte_abs.312,
	call	free	#
	.loc 1 799 0 discriminator 3
	movq	motion_cost(%rip), %rax	# motion_cost, motion_cost.313
	movl	$2, %edx	#,
	movl	$8, %esi	#,
	movq	%rax, %rdi	# motion_cost.313,
	call	free_mem4Dint	#
	.loc 1 802 0 discriminator 3
	movq	input(%rip), %rax	# input, input.314
	movl	3292(%rax), %eax	# input.314_32->FMEnable, D.21156
	testl	%eax, %eax	# D.21156
	jne	.L284	#,
	.loc 1 803 0
	movl	$0, %eax	#,
	call	ClearFastFullIntegerSearch	#
.L284:
	.loc 1 805 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	Clear_Motion_Search_Module, .-Clear_Motion_Search_Module
	.globl	FullPelBlockMotionSearch
	.type	FullPelBlockMotionSearch, @function
FullPelBlockMotionSearch:
.LFB10:
	.loc 1 829 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$176, %rsp	#,
	movq	%rdi, -136(%rbp)	# orig_pic, orig_pic
	movl	%esi, %eax	# ref, tmp251
	movl	%edx, -144(%rbp)	# list, list
	movl	%ecx, -148(%rbp)	# pic_pix_x, pic_pix_x
	movl	%r8d, -152(%rbp)	# pic_pix_y, pic_pix_y
	movl	%r9d, -156(%rbp)	# blocktype, blocktype
	movl	16(%rbp), %ecx	# pred_mv_x, tmp252
	movl	24(%rbp), %edx	# pred_mv_y, tmp253
	movsd	%xmm0, -176(%rbp)	# lambda, lambda
	movw	%ax, -140(%rbp)	# tmp251, ref
	movw	%cx, -160(%rbp)	# tmp252, pred_mv_x
	movw	%dx, -164(%rbp)	# tmp253, pred_mv_y
	.loc 1 835 0
	movq	img(%rip), %rax	# img, img.316
	movl	72400(%rax), %eax	# img.316_20->MbaffFrameFlag, D.21157
	testl	%eax, %eax	# D.21157
	je	.L289	#,
	.loc 1 835 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.317
	movq	14168(%rax), %rdx	# img.317_22->mb_data, D.21158
	movq	img(%rip), %rax	# img, img.318
	movl	12(%rax), %eax	# img.318_24->current_mb_nr, D.21157
	cltq
	imulq	$632, %rax, %rax	#, D.21159, D.21159
	addq	%rdx, %rax	# D.21158, D.21158
	movl	532(%rax), %eax	# _28->mb_field, D.21157
	testl	%eax, %eax	# D.21157
	je	.L289	#,
	movq	img(%rip), %rax	# img, img.320
	movl	12(%rax), %eax	# img.320_30->current_mb_nr, D.21157
	andl	$1, %eax	#, D.21160
	testl	%eax, %eax	# D.21160
	je	.L290	#,
	movl	$4, %eax	#, iftmp.319
	jmp	.L291	#
.L290:
	.loc 1 835 0 discriminator 2
	movl	$2, %eax	#, iftmp.319
.L291:
	.loc 1 835 0 discriminator 3
	jmp	.L292	#
.L289:
	.loc 1 835 0 discriminator 2
	movl	$0, %eax	#, iftmp.315
.L292:
	.loc 1 835 0 discriminator 3
	movl	%eax, -96(%rbp)	# iftmp.315, list_offset
	.loc 1 836 0 is_stmt 1 discriminator 3
	movl	-96(%rbp), %eax	# list_offset, tmp254
	movl	-144(%rbp), %edx	# list, tmp255
	addl	%edx, %eax	# tmp255, D.21157
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21161
	movswq	-140(%rbp), %rdx	# ref, D.21159
	salq	$3, %rdx	#, D.21159
	addq	%rdx, %rax	# D.21159, D.21161
	movq	(%rax), %rax	# *_45, D.21162
	movq	6432(%rax), %rax	# _46->imgY_11, tmp257
	movq	%rax, -8(%rbp)	# tmp257, ref_pic
	.loc 1 837 0 discriminator 3
	movl	-96(%rbp), %eax	# list_offset, tmp258
	movl	-144(%rbp), %edx	# list, tmp259
	addl	%edx, %eax	# tmp259, D.21157
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21161
	movswq	-140(%rbp), %rdx	# ref, D.21159
	salq	$3, %rdx	#, D.21159
	addq	%rdx, %rax	# D.21159, D.21161
	movq	(%rax), %rax	# *_52, D.21162
	movl	6392(%rax), %eax	# _53->size_x, tmp261
	movl	%eax, -92(%rbp)	# tmp261, img_width
	.loc 1 838 0 discriminator 3
	movl	-96(%rbp), %eax	# list_offset, tmp262
	movl	-144(%rbp), %edx	# list, tmp263
	addl	%edx, %eax	# tmp263, D.21157
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21161
	movswq	-140(%rbp), %rdx	# ref, D.21159
	salq	$3, %rdx	#, D.21159
	addq	%rdx, %rax	# D.21159, D.21161
	movq	(%rax), %rax	# *_59, D.21162
	movl	6396(%rax), %eax	# _60->size_y, tmp265
	movl	%eax, -88(%rbp)	# tmp265, img_height
	.loc 1 840 0 discriminator 3
	movl	$0, -100(%rbp)	#, best_pos
	.loc 1 841 0 discriminator 3
	movl	48(%rbp), %eax	# search_range, tmp266
	addl	%eax, %eax	# D.21157
	leal	1(%rax), %edx	#, D.21157
	movl	48(%rbp), %eax	# search_range, tmp267
	addl	%eax, %eax	# D.21157
	addl	$1, %eax	#, D.21157
	imull	%edx, %eax	# D.21157, tmp268
	movl	%eax, -84(%rbp)	# tmp268, max_pos
	.loc 1 842 0 discriminator 3
	movsd	-176(%rbp), %xmm1	# lambda, tmp269
	movsd	.LC13(%rip), %xmm0	#, tmp270
	mulsd	%xmm1, %xmm0	# tmp269, D.21163
	movsd	.LC14(%rip), %xmm1	#, tmp271
	addsd	%xmm1, %xmm0	# tmp271, D.21163
	cvttsd2si	%xmm0, %eax	# D.21163, tmp272
	movl	%eax, -80(%rbp)	# tmp272, lambda_factor
	.loc 1 843 0 discriminator 3
	movq	input(%rip), %rax	# input, input.321
	movl	-156(%rbp), %edx	# blocktype, tmp274
	movslq	%edx, %rdx	# tmp274, tmp273
	movl	84(%rax,%rdx,8), %eax	# input.321_73->blc_size, tmp275
	movl	%eax, -76(%rbp)	# tmp275, blocksize_y
	.loc 1 844 0 discriminator 3
	movq	input(%rip), %rax	# input, input.322
	movl	-156(%rbp), %edx	# blocktype, tmp277
	movslq	%edx, %rdx	# tmp277, tmp276
	addq	$10, %rdx	#, tmp278
	movl	(%rax,%rdx,8), %eax	# input.322_76->blc_size, tmp279
	movl	%eax, -72(%rbp)	# tmp279, blocksize_x
	.loc 1 845 0 discriminator 3
	movl	-72(%rbp), %eax	# blocksize_x, tmp283
	sarl	$2, %eax	#, tmp282
	movl	%eax, -68(%rbp)	# tmp282, blocksize_x4
	.loc 1 846 0 discriminator 3
	movl	-148(%rbp), %eax	# pic_pix_x, tmp284
	leal	0(,%rax,4), %edx	#, D.21157
	movswl	-160(%rbp), %eax	# pred_mv_x, D.21157
	addl	%edx, %eax	# D.21157, tmp285
	movl	%eax, -64(%rbp)	# tmp285, pred_x
	.loc 1 847 0 discriminator 3
	movl	-152(%rbp), %eax	# pic_pix_y, tmp286
	leal	0(,%rax,4), %edx	#, D.21157
	movswl	-164(%rbp), %eax	# pred_mv_y, D.21157
	addl	%edx, %eax	# D.21157, tmp287
	movl	%eax, -60(%rbp)	# tmp287, pred_y
	.loc 1 848 0 discriminator 3
	movq	32(%rbp), %rax	# mv_x, tmp288
	movzwl	(%rax), %eax	# *mv_x_89(D), D.21164
	movswl	%ax, %edx	# D.21164, D.21157
	movl	-148(%rbp), %eax	# pic_pix_x, tmp292
	addl	%edx, %eax	# D.21157, tmp291
	movl	%eax, -56(%rbp)	# tmp291, center_x
	.loc 1 849 0 discriminator 3
	movq	40(%rbp), %rax	# mv_y, tmp293
	movzwl	(%rax), %eax	# *mv_y_93(D), D.21164
	movswl	%ax, %edx	# D.21164, D.21157
	movl	-152(%rbp), %eax	# pic_pix_y, tmp297
	addl	%edx, %eax	# D.21157, tmp296
	movl	%eax, -52(%rbp)	# tmp296, center_y
	.loc 1 850 0 discriminator 3
	cmpl	$1, -156(%rbp)	#, blocktype
	jne	.L293	#,
	.loc 1 850 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.324
	movl	2464(%rax), %eax	# input.324_97->rdopt, D.21157
	testl	%eax, %eax	# D.21157
	jne	.L293	#,
	movq	img(%rip), %rax	# img, img.325
	movl	24(%rax), %eax	# img.325_99->type, D.21157
	cmpl	$1, %eax	#, D.21157
	je	.L293	#,
	cmpw	$0, -140(%rbp)	#, ref
	jne	.L293	#,
	.loc 1 850 0 discriminator 3
	movl	$1, %eax	#, iftmp.323
	jmp	.L294	#
.L293:
	.loc 1 850 0 discriminator 2
	movl	$0, %eax	#, iftmp.323
.L294:
	.loc 1 850 0 discriminator 4
	movl	%eax, -48(%rbp)	# iftmp.323, check_for_00
	.loc 1 852 0 is_stmt 1 discriminator 4
	movq	active_pps(%rip), %rax	# active_pps, active_pps.327
	movl	192(%rax), %eax	# active_pps.327_104->weighted_pred_flag, D.21165
	testl	%eax, %eax	# D.21165
	je	.L295	#,
	.loc 1 852 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.328
	movl	24(%rax), %eax	# img.328_106->type, D.21157
	testl	%eax, %eax	# D.21157
	je	.L296	#,
	.loc 1 852 0 discriminator 2
	movq	img(%rip), %rax	# img, img.329
	movl	24(%rax), %eax	# img.329_108->type, D.21157
	cmpl	$3, %eax	#, D.21157
	je	.L296	#,
.L295:
	.loc 1 853 0 is_stmt 1 discriminator 2
	movq	active_pps(%rip), %rax	# active_pps, active_pps.330
	movl	196(%rax), %eax	# active_pps.330_110->weighted_bipred_idc, D.21166
	.loc 1 852 0 discriminator 2
	testl	%eax, %eax	# D.21166
	je	.L297	#,
	.loc 1 853 0
	movq	img(%rip), %rax	# img, img.331
	movl	24(%rax), %eax	# img.331_112->type, D.21157
	cmpl	$1, %eax	#, D.21157
	jne	.L297	#,
.L296:
	.loc 1 852 0 discriminator 1
	movl	$1, %eax	#, iftmp.326
	jmp	.L298	#
.L297:
	.loc 1 852 0 is_stmt 0 discriminator 3
	movl	$0, %eax	#, iftmp.326
.L298:
	.loc 1 852 0 discriminator 4
	movl	%eax, -44(%rbp)	# iftmp.326, apply_weights
	.loc 1 856 0 is_stmt 1 discriminator 4
	cmpl	$0, -44(%rbp)	#, apply_weights
	je	.L299	#,
	.loc 1 856 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.332
	movl	1292(%rax), %eax	# input.332_117->UseWeightedReferenceME, D.21157
	testl	%eax, %eax	# D.21157
	je	.L299	#,
	.loc 1 857 0 is_stmt 1
	movl	-96(%rbp), %eax	# list_offset, tmp298
	movl	-144(%rbp), %edx	# list, tmp299
	addl	%edx, %eax	# tmp299, D.21157
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21161
	movswq	-140(%rbp), %rdx	# ref, D.21159
	salq	$3, %rdx	#, D.21159
	addq	%rdx, %rax	# D.21159, D.21161
	movq	(%rax), %rax	# *_123, D.21162
	movq	6440(%rax), %rax	# _124->imgY_11_w, tmp301
	movq	%rax, -8(%rbp)	# tmp301, ref_pic
	jmp	.L300	#
.L299:
	.loc 1 859 0
	movl	-96(%rbp), %eax	# list_offset, tmp302
	movl	-144(%rbp), %edx	# list, tmp303
	addl	%edx, %eax	# tmp303, D.21157
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21161
	movswq	-140(%rbp), %rdx	# ref, D.21159
	salq	$3, %rdx	#, D.21159
	addq	%rdx, %rax	# D.21159, D.21161
	movq	(%rax), %rax	# *_130, D.21162
	movq	6432(%rax), %rax	# _131->imgY_11, tmp305
	movq	%rax, -8(%rbp)	# tmp305, ref_pic
.L300:
	.loc 1 862 0
	movl	-56(%rbp), %eax	# center_x, tmp306
	cmpl	48(%rbp), %eax	# search_range, tmp306
	jle	.L301	#,
	.loc 1 862 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.333
	movl	52(%rax), %eax	# img.333_133->width, D.21157
	subl	$1, %eax	#, D.21157
	subl	48(%rbp), %eax	# search_range, D.21157
	subl	-72(%rbp), %eax	# blocksize_x, D.21157
	cmpl	-56(%rbp), %eax	# center_x, D.21157
	jle	.L301	#,
	movl	-52(%rbp), %eax	# center_y, tmp307
	cmpl	48(%rbp), %eax	# search_range, tmp307
	jle	.L301	#,
	.loc 1 863 0 is_stmt 1
	movq	img(%rip), %rax	# img, img.334
	movl	60(%rax), %eax	# img.334_138->height, D.21157
	subl	$1, %eax	#, D.21157
	subl	48(%rbp), %eax	# search_range, D.21157
	subl	-76(%rbp), %eax	# blocksize_y, D.21157
	cmpl	-52(%rbp), %eax	# center_y, D.21157
	jle	.L301	#,
	.loc 1 865 0
	movq	$FastLineX, -16(%rbp)	#, get_ref_line
	jmp	.L302	#
.L301:
	.loc 1 869 0
	movq	$UMVLineX, -16(%rbp)	#, get_ref_line
.L302:
	.loc 1 874 0
	movl	$0, -116(%rbp)	#, pos
	jmp	.L303	#
.L313:
	.loc 1 877 0
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.335
	movl	-116(%rbp), %edx	# pos, tmp308
	movslq	%edx, %rdx	# tmp308, D.21159
	salq	$2, %rdx	#, D.21159
	addq	%rdx, %rax	# D.21159, D.21167
	movl	(%rax), %edx	# *_150, D.21157
	movl	-56(%rbp), %eax	# center_x, tmp312
	addl	%edx, %eax	# D.21157, tmp311
	movl	%eax, -40(%rbp)	# tmp311, cand_x
	.loc 1 878 0
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.336
	movl	-116(%rbp), %edx	# pos, tmp313
	movslq	%edx, %rdx	# tmp313, D.21159
	salq	$2, %rdx	#, D.21159
	addq	%rdx, %rax	# D.21159, D.21167
	movl	(%rax), %edx	# *_156, D.21157
	movl	-52(%rbp), %eax	# center_y, tmp317
	addl	%edx, %eax	# D.21157, tmp316
	movl	%eax, -36(%rbp)	# tmp316, cand_y
	.loc 1 881 0
	movq	mvbits(%rip), %rax	# mvbits, mvbits.337
	movl	-40(%rbp), %edx	# cand_x, tmp318
	sall	$2, %edx	#, D.21157
	subl	-64(%rbp), %edx	# pred_x, D.21157
	movslq	%edx, %rdx	# D.21157, D.21159
	salq	$2, %rdx	#, D.21159
	addq	%rdx, %rax	# D.21159, D.21167
	movl	(%rax), %edx	# *_164, D.21157
	movq	mvbits(%rip), %rax	# mvbits, mvbits.338
	movl	-36(%rbp), %ecx	# cand_y, tmp319
	sall	$2, %ecx	#, D.21157
	subl	-60(%rbp), %ecx	# pred_y, D.21157
	movslq	%ecx, %rcx	# D.21157, D.21159
	salq	$2, %rcx	#, D.21159
	addq	%rcx, %rax	# D.21159, D.21167
	movl	(%rax), %eax	# *_171, D.21157
	addl	%edx, %eax	# D.21157, D.21157
	imull	-80(%rbp), %eax	# lambda_factor, D.21157
	sarl	$16, %eax	#, tmp320
	movl	%eax, -104(%rbp)	# tmp320, mcost
	.loc 1 882 0
	cmpl	$0, -48(%rbp)	#, check_for_00
	je	.L304	#,
	.loc 1 882 0 is_stmt 0 discriminator 1
	movl	-40(%rbp), %eax	# cand_x, tmp321
	cmpl	-148(%rbp), %eax	# pic_pix_x, tmp321
	jne	.L304	#,
	movl	-36(%rbp), %eax	# cand_y, tmp322
	cmpl	-152(%rbp), %eax	# pic_pix_y, tmp322
	jne	.L304	#,
	.loc 1 884 0 is_stmt 1
	movl	-80(%rbp), %eax	# lambda_factor, tmp323
	sall	$4, %eax	#, D.21157
	sarl	$16, %eax	#, D.21157
	subl	%eax, -104(%rbp)	# D.21157, mcost
.L304:
	.loc 1 886 0
	movl	-104(%rbp), %eax	# mcost, tmp324
	cmpl	56(%rbp), %eax	# min_mcost, tmp324
	jl	.L305	#,
	.loc 1 886 0 is_stmt 0 discriminator 1
	jmp	.L306	#
.L305:
	.loc 1 889 0 is_stmt 1
	movl	$0, -112(%rbp)	#, y
	jmp	.L307	#
.L312:
	.loc 1 891 0
	movl	-112(%rbp), %eax	# y, tmp325
	movl	-36(%rbp), %edx	# cand_y, tmp326
	leal	(%rdx,%rax), %r10d	#, D.21157
	movl	-92(%rbp), %r8d	# img_width, tmp327
	movl	-88(%rbp), %ecx	# img_height, tmp328
	movl	-40(%rbp), %edx	# cand_x, tmp329
	movq	-8(%rbp), %rsi	# ref_pic, tmp330
	movl	-72(%rbp), %edi	# blocksize_x, tmp331
	movq	-16(%rbp), %rax	# get_ref_line, tmp332
	movl	%r8d, %r9d	# tmp327,
	movl	%ecx, %r8d	# tmp328,
	movl	%edx, %ecx	# tmp329,
	movl	%r10d, %edx	# D.21157,
	call	*%rax	# tmp332
	movq	%rax, -24(%rbp)	# tmp333, ref_line
	.loc 1 892 0
	movl	-112(%rbp), %eax	# y, tmp334
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21159
	movq	-136(%rbp), %rax	# orig_pic, tmp335
	addq	%rdx, %rax	# D.21159, D.21168
	movq	(%rax), %rax	# *_185, tmp336
	movq	%rax, -32(%rbp)	# tmp336, orig_line
	.loc 1 894 0
	movl	$0, -108(%rbp)	#, x4
	jmp	.L308	#
.L309:
	.loc 1 896 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.339
	movq	-32(%rbp), %rax	# orig_line, orig_line.340
	leaq	2(%rax), %rdx	#, tmp337
	movq	%rdx, -32(%rbp)	# tmp337, orig_line
	movzwl	(%rax), %eax	# *orig_line.340_189, D.21169
	movzwl	%ax, %esi	# D.21169, D.21157
	movq	-24(%rbp), %rax	# ref_line, ref_line.341
	leaq	2(%rax), %rdx	#, tmp338
	movq	%rdx, -24(%rbp)	# tmp338, ref_line
	movzwl	(%rax), %eax	# *ref_line.341_193, D.21169
	movzwl	%ax, %eax	# D.21169, D.21157
	subl	%eax, %esi	# D.21157, D.21157
	movl	%esi, %eax	# D.21157, D.21157
	cltq
	salq	$2, %rax	#, D.21159
	addq	%rcx, %rax	# byte_abs.339, D.21167
	movl	(%rax), %eax	# *_200, D.21157
	addl	%eax, -104(%rbp)	# D.21157, mcost
	.loc 1 897 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.342
	movq	-32(%rbp), %rax	# orig_line, orig_line.343
	leaq	2(%rax), %rdx	#, tmp339
	movq	%rdx, -32(%rbp)	# tmp339, orig_line
	movzwl	(%rax), %eax	# *orig_line.343_204, D.21169
	movzwl	%ax, %esi	# D.21169, D.21157
	movq	-24(%rbp), %rax	# ref_line, ref_line.344
	leaq	2(%rax), %rdx	#, tmp340
	movq	%rdx, -24(%rbp)	# tmp340, ref_line
	movzwl	(%rax), %eax	# *ref_line.344_208, D.21169
	movzwl	%ax, %eax	# D.21169, D.21157
	subl	%eax, %esi	# D.21157, D.21157
	movl	%esi, %eax	# D.21157, D.21157
	cltq
	salq	$2, %rax	#, D.21159
	addq	%rcx, %rax	# byte_abs.342, D.21167
	movl	(%rax), %eax	# *_215, D.21157
	addl	%eax, -104(%rbp)	# D.21157, mcost
	.loc 1 898 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.345
	movq	-32(%rbp), %rax	# orig_line, orig_line.346
	leaq	2(%rax), %rdx	#, tmp341
	movq	%rdx, -32(%rbp)	# tmp341, orig_line
	movzwl	(%rax), %eax	# *orig_line.346_219, D.21169
	movzwl	%ax, %esi	# D.21169, D.21157
	movq	-24(%rbp), %rax	# ref_line, ref_line.347
	leaq	2(%rax), %rdx	#, tmp342
	movq	%rdx, -24(%rbp)	# tmp342, ref_line
	movzwl	(%rax), %eax	# *ref_line.347_223, D.21169
	movzwl	%ax, %eax	# D.21169, D.21157
	subl	%eax, %esi	# D.21157, D.21157
	movl	%esi, %eax	# D.21157, D.21157
	cltq
	salq	$2, %rax	#, D.21159
	addq	%rcx, %rax	# byte_abs.345, D.21167
	movl	(%rax), %eax	# *_230, D.21157
	addl	%eax, -104(%rbp)	# D.21157, mcost
	.loc 1 899 0 discriminator 2
	movq	byte_abs(%rip), %rcx	# byte_abs, byte_abs.348
	movq	-32(%rbp), %rax	# orig_line, orig_line.349
	leaq	2(%rax), %rdx	#, tmp343
	movq	%rdx, -32(%rbp)	# tmp343, orig_line
	movzwl	(%rax), %eax	# *orig_line.349_234, D.21169
	movzwl	%ax, %esi	# D.21169, D.21157
	movq	-24(%rbp), %rax	# ref_line, ref_line.350
	leaq	2(%rax), %rdx	#, tmp344
	movq	%rdx, -24(%rbp)	# tmp344, ref_line
	movzwl	(%rax), %eax	# *ref_line.350_238, D.21169
	movzwl	%ax, %eax	# D.21169, D.21157
	subl	%eax, %esi	# D.21157, D.21157
	movl	%esi, %eax	# D.21157, D.21157
	cltq
	salq	$2, %rax	#, D.21159
	addq	%rcx, %rax	# byte_abs.348, D.21167
	movl	(%rax), %eax	# *_245, D.21157
	addl	%eax, -104(%rbp)	# D.21157, mcost
	.loc 1 894 0 discriminator 2
	addl	$1, -108(%rbp)	#, x4
.L308:
	.loc 1 894 0 is_stmt 0 discriminator 1
	movl	-108(%rbp), %eax	# x4, tmp345
	cmpl	-68(%rbp), %eax	# blocksize_x4, tmp345
	jl	.L309	#,
	.loc 1 902 0 is_stmt 1
	movl	-104(%rbp), %eax	# mcost, tmp346
	cmpl	56(%rbp), %eax	# min_mcost, tmp346
	jl	.L310	#,
	.loc 1 904 0
	jmp	.L311	#
.L310:
	.loc 1 889 0
	addl	$1, -112(%rbp)	#, y
.L307:
	.loc 1 889 0 is_stmt 0 discriminator 1
	movl	-112(%rbp), %eax	# y, tmp347
	cmpl	-76(%rbp), %eax	# blocksize_y, tmp347
	jl	.L312	#,
.L311:
	.loc 1 909 0 is_stmt 1
	movl	-104(%rbp), %eax	# mcost, tmp348
	cmpl	56(%rbp), %eax	# min_mcost, tmp348
	jge	.L306	#,
	.loc 1 911 0
	movl	-116(%rbp), %eax	# pos, tmp349
	movl	%eax, -100(%rbp)	# tmp349, best_pos
	.loc 1 912 0
	movl	-104(%rbp), %eax	# mcost, tmp350
	movl	%eax, 56(%rbp)	# tmp350, min_mcost
.L306:
	.loc 1 874 0
	addl	$1, -116(%rbp)	#, pos
.L303:
	.loc 1 874 0 is_stmt 0 discriminator 1
	movl	-116(%rbp), %eax	# pos, tmp351
	cmpl	-84(%rbp), %eax	# max_pos, tmp351
	jl	.L313	#,
	.loc 1 918 0 is_stmt 1
	cmpl	$0, -100(%rbp)	#, best_pos
	je	.L314	#,
	.loc 1 920 0
	movq	32(%rbp), %rax	# mv_x, tmp352
	movzwl	(%rax), %eax	# *mv_x_89(D), D.21164
	movl	%eax, %edx	# D.21164, D.21170
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.351
	movl	-100(%rbp), %ecx	# best_pos, tmp353
	movslq	%ecx, %rcx	# tmp353, D.21159
	salq	$2, %rcx	#, D.21159
	addq	%rcx, %rax	# D.21159, D.21167
	movl	(%rax), %eax	# *_258, D.21157
	addl	%edx, %eax	# D.21170, D.21170
	movl	%eax, %edx	# D.21170, D.21164
	movq	32(%rbp), %rax	# mv_x, tmp354
	movw	%dx, (%rax)	# D.21164, *mv_x_89(D)
	.loc 1 921 0
	movq	40(%rbp), %rax	# mv_y, tmp355
	movzwl	(%rax), %eax	# *mv_y_93(D), D.21164
	movl	%eax, %edx	# D.21164, D.21170
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.352
	movl	-100(%rbp), %ecx	# best_pos, tmp356
	movslq	%ecx, %rcx	# tmp356, D.21159
	salq	$2, %rcx	#, D.21159
	addq	%rcx, %rax	# D.21159, D.21167
	movl	(%rax), %eax	# *_268, D.21157
	addl	%edx, %eax	# D.21170, D.21170
	movl	%eax, %edx	# D.21170, D.21164
	movq	40(%rbp), %rax	# mv_y, tmp357
	movw	%dx, (%rax)	# D.21164, *mv_y_93(D)
.L314:
	.loc 1 923 0
	movl	56(%rbp), %eax	# min_mcost, D.21157
	.loc 1 924 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	FullPelBlockMotionSearch, .-FullPelBlockMotionSearch
	.globl	FastFullPelBlockMotionSearch
	.type	FastFullPelBlockMotionSearch, @function
FastFullPelBlockMotionSearch:
.LFB11:
	.loc 1 948 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$96, %rsp	#,
	movq	%rdi, -56(%rbp)	# orig_pic, orig_pic
	movl	%esi, %eax	# ref, tmp210
	movl	%edx, -64(%rbp)	# list, list
	movl	%ecx, -68(%rbp)	# pic_pix_x, pic_pix_x
	movl	%r8d, -72(%rbp)	# pic_pix_y, pic_pix_y
	movl	%r9d, -76(%rbp)	# blocktype, blocktype
	movl	16(%rbp), %ecx	# pred_mv_x, tmp211
	movl	24(%rbp), %edx	# pred_mv_y, tmp212
	movsd	%xmm0, -96(%rbp)	# lambda, lambda
	movw	%ax, -60(%rbp)	# tmp210, ref
	movw	%cx, -80(%rbp)	# tmp211, pred_mv_x
	movw	%dx, -84(%rbp)	# tmp212, pred_mv_y
	.loc 1 951 0
	movl	48(%rbp), %eax	# search_range, tmp213
	addl	%eax, %eax	# D.21171
	leal	1(%rax), %edx	#, D.21171
	movl	48(%rbp), %eax	# search_range, tmp214
	addl	%eax, %eax	# D.21171
	addl	$1, %eax	#, D.21171
	imull	%edx, %eax	# D.21171, tmp215
	movl	%eax, -40(%rbp)	# tmp215, max_pos
	.loc 1 952 0
	movsd	-96(%rbp), %xmm1	# lambda, tmp216
	movsd	.LC13(%rip), %xmm0	#, tmp217
	mulsd	%xmm1, %xmm0	# tmp216, D.21172
	movsd	.LC14(%rip), %xmm1	#, tmp218
	addsd	%xmm1, %xmm0	# tmp218, D.21172
	cvttsd2si	%xmm0, %eax	# D.21172, tmp219
	movl	%eax, -36(%rbp)	# tmp219, lambda_factor
	.loc 1 953 0
	movl	$0, -44(%rbp)	#, best_pos
	.loc 1 957 0
	movq	img(%rip), %rax	# img, img.353
	movl	172(%rax), %eax	# img.353_20->opix_y, D.21171
	movl	-72(%rbp), %edx	# pic_pix_y, tmp220
	movl	%edx, %ecx	# tmp220, D.21171
	subl	%eax, %ecx	# D.21171, D.21171
	movq	img(%rip), %rax	# img, img.354
	movl	168(%rax), %eax	# img.354_24->opix_x, D.21171
	movl	-68(%rbp), %edx	# pic_pix_x, tmp221
	subl	%eax, %edx	# D.21171, D.21171
	movl	%edx, %eax	# D.21171, D.21171
	sarl	$2, %eax	#, D.21171
	addl	%ecx, %eax	# D.21171, tmp222
	movl	%eax, -32(%rbp)	# tmp222, block_index
	.loc 1 958 0
	movq	BlockSAD(%rip), %rax	# BlockSAD, BlockSAD.355
	movl	-64(%rbp), %edx	# list, tmp223
	movslq	%edx, %rdx	# tmp223, D.21173
	salq	$3, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21174
	movq	(%rax), %rax	# *_34, D.21175
	movswq	-60(%rbp), %rdx	# ref, D.21173
	salq	$3, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21175
	movq	(%rax), %rax	# *_39, D.21176
	movl	-76(%rbp), %edx	# blocktype, tmp224
	movslq	%edx, %rdx	# tmp224, D.21173
	salq	$3, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21176
	movq	(%rax), %rax	# *_44, D.21177
	movl	-32(%rbp), %edx	# block_index, tmp225
	movslq	%edx, %rdx	# tmp225, D.21173
	salq	$3, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21177
	movq	(%rax), %rax	# *_48, tmp226
	movq	%rax, -8(%rbp)	# tmp226, block_sad
	.loc 1 961 0
	movq	search_setup_done(%rip), %rax	# search_setup_done, search_setup_done.356
	movl	-64(%rbp), %edx	# list, tmp227
	movslq	%edx, %rdx	# tmp227, D.21173
	salq	$3, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21177
	movq	(%rax), %rax	# *_53, D.21178
	movswq	-60(%rbp), %rdx	# ref, D.21173
	salq	$2, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %eax	# *_57, D.21171
	testl	%eax, %eax	# D.21171
	jne	.L317	#,
	.loc 1 963 0
	movswl	-60(%rbp), %eax	# ref, D.21171
	movl	-64(%rbp), %edx	# list, tmp228
	movl	%edx, %esi	# tmp228,
	movl	%eax, %edi	# D.21171,
	call	SetupFastFullPelSearch	#
.L317:
	.loc 1 966 0
	movq	search_center_x(%rip), %rax	# search_center_x, search_center_x.357
	movl	-64(%rbp), %edx	# list, tmp229
	movslq	%edx, %rdx	# tmp229, D.21173
	salq	$3, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21177
	movq	(%rax), %rax	# *_63, D.21178
	movswq	-60(%rbp), %rdx	# ref, D.21173
	salq	$2, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %edx	# *_67, D.21171
	movq	img(%rip), %rax	# img, img.358
	movl	168(%rax), %eax	# img.358_69->opix_x, D.21171
	subl	%eax, %edx	# D.21171, tmp230
	movl	%edx, %eax	# tmp230, tmp230
	movl	%eax, -28(%rbp)	# tmp230, offset_x
	.loc 1 967 0
	movq	search_center_y(%rip), %rax	# search_center_y, search_center_y.359
	movl	-64(%rbp), %edx	# list, tmp231
	movslq	%edx, %rdx	# tmp231, D.21173
	salq	$3, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21177
	movq	(%rax), %rax	# *_75, D.21178
	movswq	-60(%rbp), %rdx	# ref, D.21173
	salq	$2, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %edx	# *_79, D.21171
	movq	img(%rip), %rax	# img, img.360
	movl	172(%rax), %eax	# img.360_81->opix_y, D.21171
	subl	%eax, %edx	# D.21171, tmp232
	movl	%edx, %eax	# tmp232, tmp232
	movl	%eax, -24(%rbp)	# tmp232, offset_y
	.loc 1 970 0
	movq	input(%rip), %rax	# input, input.361
	movl	2464(%rax), %eax	# input.361_84->rdopt, D.21171
	testl	%eax, %eax	# D.21171
	jne	.L318	#,
	.loc 1 972 0
	movq	pos_00(%rip), %rax	# pos_00, pos_00.362
	movl	-64(%rbp), %edx	# list, tmp233
	movslq	%edx, %rdx	# tmp233, D.21173
	salq	$3, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21177
	movq	(%rax), %rax	# *_90, D.21178
	movswq	-60(%rbp), %rdx	# ref, D.21173
	salq	$2, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %eax	# *_94, D.21171
	cltq
	leaq	0(,%rax,4), %rdx	#, D.21173
	movq	-8(%rbp), %rax	# block_sad, tmp234
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %eax	# *_98, D.21171
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.363
	movswl	-80(%rbp), %ecx	# pred_mv_x, D.21171
	negl	%ecx	# D.21171
	movslq	%ecx, %rcx	# D.21171, D.21173
	salq	$2, %rcx	#, D.21173
	addq	%rcx, %rdx	# D.21173, D.21178
	movl	(%rdx), %ecx	# *_106, D.21171
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.364
	movswl	-84(%rbp), %esi	# pred_mv_y, D.21171
	negl	%esi	# D.21171
	movslq	%esi, %rsi	# D.21171, D.21173
	salq	$2, %rsi	#, D.21173
	addq	%rsi, %rdx	# D.21173, D.21178
	movl	(%rdx), %edx	# *_114, D.21171
	addl	%ecx, %edx	# D.21171, D.21171
	imull	-36(%rbp), %edx	# lambda_factor, D.21171
	sarl	$16, %edx	#, D.21171
	addl	%edx, %eax	# D.21171, tmp235
	movl	%eax, -20(%rbp)	# tmp235, mcost
	.loc 1 974 0
	movl	-20(%rbp), %eax	# mcost, tmp236
	cmpl	56(%rbp), %eax	# min_mcost, tmp236
	jge	.L318	#,
	.loc 1 976 0
	movl	-20(%rbp), %eax	# mcost, tmp237
	movl	%eax, 56(%rbp)	# tmp237, min_mcost
	.loc 1 977 0
	movq	pos_00(%rip), %rax	# pos_00, pos_00.365
	movl	-64(%rbp), %edx	# list, tmp238
	movslq	%edx, %rdx	# tmp238, D.21173
	salq	$3, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21177
	movq	(%rax), %rax	# *_124, D.21178
	movswq	-60(%rbp), %rdx	# ref, D.21173
	salq	$2, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %eax	# *_128, tmp239
	movl	%eax, -44(%rbp)	# tmp239, best_pos
.L318:
	.loc 1 982 0
	movl	$0, -48(%rbp)	#, pos
	jmp	.L319	#
.L321:
	.loc 1 985 0
	movq	-8(%rbp), %rax	# block_sad, tmp240
	movl	(%rax), %eax	# *block_sad_8, D.21171
	cmpl	56(%rbp), %eax	# min_mcost, D.21171
	jge	.L320	#,
	.loc 1 988 0
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.366
	movl	-48(%rbp), %edx	# pos, tmp241
	movslq	%edx, %rdx	# tmp241, D.21173
	salq	$2, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %edx	# *_135, D.21171
	movl	-28(%rbp), %eax	# offset_x, tmp245
	addl	%edx, %eax	# D.21171, tmp244
	movl	%eax, -16(%rbp)	# tmp244, cand_x
	.loc 1 989 0
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.367
	movl	-48(%rbp), %edx	# pos, tmp246
	movslq	%edx, %rdx	# tmp246, D.21173
	salq	$2, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %edx	# *_141, D.21171
	movl	-24(%rbp), %eax	# offset_y, tmp250
	addl	%edx, %eax	# D.21171, tmp249
	movl	%eax, -12(%rbp)	# tmp249, cand_y
	.loc 1 990 0
	movq	-8(%rbp), %rax	# block_sad, tmp251
	movl	(%rax), %eax	# *block_sad_8, tmp252
	movl	%eax, -20(%rbp)	# tmp252, mcost
	.loc 1 991 0
	movq	mvbits(%rip), %rax	# mvbits, mvbits.368
	movl	-16(%rbp), %edx	# cand_x, tmp253
	leal	0(,%rdx,4), %ecx	#, D.21171
	movswl	-80(%rbp), %edx	# pred_mv_x, D.21171
	subl	%edx, %ecx	# D.21171, D.21171
	movl	%ecx, %edx	# D.21171, D.21171
	movslq	%edx, %rdx	# D.21171, D.21173
	salq	$2, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %edx	# *_151, D.21171
	movq	mvbits(%rip), %rax	# mvbits, mvbits.369
	movl	-12(%rbp), %ecx	# cand_y, tmp254
	leal	0(,%rcx,4), %esi	#, D.21171
	movswl	-84(%rbp), %ecx	# pred_mv_y, D.21171
	subl	%ecx, %esi	# D.21171, D.21171
	movl	%esi, %ecx	# D.21171, D.21171
	movslq	%ecx, %rcx	# D.21171, D.21173
	salq	$2, %rcx	#, D.21173
	addq	%rcx, %rax	# D.21173, D.21178
	movl	(%rax), %eax	# *_159, D.21171
	addl	%edx, %eax	# D.21171, D.21171
	imull	-36(%rbp), %eax	# lambda_factor, D.21171
	sarl	$16, %eax	#, D.21171
	addl	%eax, -20(%rbp)	# D.21171, mcost
	.loc 1 994 0
	movl	-20(%rbp), %eax	# mcost, tmp255
	cmpl	56(%rbp), %eax	# min_mcost, tmp255
	jge	.L320	#,
	.loc 1 996 0
	movl	-20(%rbp), %eax	# mcost, tmp256
	movl	%eax, 56(%rbp)	# tmp256, min_mcost
	.loc 1 997 0
	movl	-48(%rbp), %eax	# pos, tmp257
	movl	%eax, -44(%rbp)	# tmp257, best_pos
.L320:
	.loc 1 982 0
	addl	$1, -48(%rbp)	#, pos
	addq	$4, -8(%rbp)	#, block_sad
.L319:
	.loc 1 982 0 is_stmt 0 discriminator 1
	movl	-48(%rbp), %eax	# pos, tmp258
	cmpl	-40(%rbp), %eax	# max_pos, tmp258
	jl	.L321	#,
	.loc 1 1003 0 is_stmt 1
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.370
	movl	-44(%rbp), %edx	# best_pos, tmp259
	movslq	%edx, %rdx	# tmp259, D.21173
	salq	$2, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %eax	# *_172, D.21171
	movl	%eax, %edx	# D.21171, D.21179
	movl	-28(%rbp), %eax	# offset_x, tmp260
	addl	%edx, %eax	# D.21179, D.21179
	movl	%eax, %edx	# D.21179, D.21180
	movq	32(%rbp), %rax	# mv_x, tmp261
	movw	%dx, (%rax)	# D.21180, *mv_x_178(D)
	.loc 1 1004 0
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.371
	movl	-44(%rbp), %edx	# best_pos, tmp262
	movslq	%edx, %rdx	# tmp262, D.21173
	salq	$2, %rdx	#, D.21173
	addq	%rdx, %rax	# D.21173, D.21178
	movl	(%rax), %eax	# *_182, D.21171
	movl	%eax, %edx	# D.21171, D.21179
	movl	-24(%rbp), %eax	# offset_y, tmp263
	addl	%edx, %eax	# D.21179, D.21179
	movl	%eax, %edx	# D.21179, D.21180
	movq	40(%rbp), %rax	# mv_y, tmp264
	movw	%dx, (%rax)	# D.21180, *mv_y_188(D)
	.loc 1 1005 0
	movl	56(%rbp), %eax	# min_mcost, D.21171
	.loc 1 1006 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	FastFullPelBlockMotionSearch, .-FastFullPelBlockMotionSearch
	.globl	SATD
	.type	SATD, @function
SATD:
.LFB12:
	.loc 1 1018 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$36, %rsp	#,
	movq	%rdi, -152(%rbp)	# diff, diff
	movl	%esi, -156(%rbp)	# use_hadamard, use_hadamard
	.loc 1 1019 0
	movl	$0, -136(%rbp)	#, satd
	.loc 1 1021 0
	cmpl	$0, -156(%rbp)	#, use_hadamard
	je	.L324	#,
	.loc 1 1024 0
	movq	-152(%rbp), %rax	# diff, tmp294
	movl	(%rax), %edx	# *diff_9(D), D.21181
	movq	-152(%rbp), %rax	# diff, tmp295
	addq	$48, %rax	#, D.21182
	movl	(%rax), %eax	# *_11, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -128(%rbp)	# D.21181, m
	.loc 1 1025 0
	movq	-152(%rbp), %rax	# diff, tmp296
	addq	$16, %rax	#, D.21182
	movl	(%rax), %edx	# *_14, D.21181
	movq	-152(%rbp), %rax	# diff, tmp297
	addq	$32, %rax	#, D.21182
	movl	(%rax), %eax	# *_16, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -112(%rbp)	# D.21181, m
	.loc 1 1026 0
	movq	-152(%rbp), %rax	# diff, tmp298
	addq	$16, %rax	#, D.21182
	movl	(%rax), %edx	# *_19, D.21181
	movq	-152(%rbp), %rax	# diff, tmp299
	addq	$32, %rax	#, D.21182
	movl	(%rax), %eax	# *_21, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -96(%rbp)	# D.21181, m
	.loc 1 1027 0
	movq	-152(%rbp), %rax	# diff, tmp300
	movl	(%rax), %edx	# *diff_9(D), D.21181
	movq	-152(%rbp), %rax	# diff, tmp301
	addq	$48, %rax	#, D.21182
	movl	(%rax), %eax	# *_25, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -80(%rbp)	# D.21181, m
	.loc 1 1028 0
	movq	-152(%rbp), %rax	# diff, tmp302
	addq	$4, %rax	#, D.21182
	movl	(%rax), %edx	# *_28, D.21181
	movq	-152(%rbp), %rax	# diff, tmp303
	addq	$52, %rax	#, D.21182
	movl	(%rax), %eax	# *_30, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -124(%rbp)	# D.21181, m
	.loc 1 1029 0
	movq	-152(%rbp), %rax	# diff, tmp304
	addq	$20, %rax	#, D.21182
	movl	(%rax), %edx	# *_33, D.21181
	movq	-152(%rbp), %rax	# diff, tmp305
	addq	$36, %rax	#, D.21182
	movl	(%rax), %eax	# *_35, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -108(%rbp)	# D.21181, m
	.loc 1 1030 0
	movq	-152(%rbp), %rax	# diff, tmp306
	addq	$20, %rax	#, D.21182
	movl	(%rax), %edx	# *_38, D.21181
	movq	-152(%rbp), %rax	# diff, tmp307
	addq	$36, %rax	#, D.21182
	movl	(%rax), %eax	# *_40, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -92(%rbp)	# D.21181, m
	.loc 1 1031 0
	movq	-152(%rbp), %rax	# diff, tmp308
	addq	$4, %rax	#, D.21182
	movl	(%rax), %edx	# *_43, D.21181
	movq	-152(%rbp), %rax	# diff, tmp309
	addq	$52, %rax	#, D.21182
	movl	(%rax), %eax	# *_45, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -76(%rbp)	# D.21181, m
	.loc 1 1032 0
	movq	-152(%rbp), %rax	# diff, tmp310
	addq	$8, %rax	#, D.21182
	movl	(%rax), %edx	# *_48, D.21181
	movq	-152(%rbp), %rax	# diff, tmp311
	addq	$56, %rax	#, D.21182
	movl	(%rax), %eax	# *_50, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -120(%rbp)	# D.21181, m
	.loc 1 1033 0
	movq	-152(%rbp), %rax	# diff, tmp312
	addq	$24, %rax	#, D.21182
	movl	(%rax), %edx	# *_53, D.21181
	movq	-152(%rbp), %rax	# diff, tmp313
	addq	$40, %rax	#, D.21182
	movl	(%rax), %eax	# *_55, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -104(%rbp)	# D.21181, m
	.loc 1 1034 0
	movq	-152(%rbp), %rax	# diff, tmp314
	addq	$24, %rax	#, D.21182
	movl	(%rax), %edx	# *_58, D.21181
	movq	-152(%rbp), %rax	# diff, tmp315
	addq	$40, %rax	#, D.21182
	movl	(%rax), %eax	# *_60, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -88(%rbp)	# D.21181, m
	.loc 1 1035 0
	movq	-152(%rbp), %rax	# diff, tmp316
	addq	$8, %rax	#, D.21182
	movl	(%rax), %edx	# *_63, D.21181
	movq	-152(%rbp), %rax	# diff, tmp317
	addq	$56, %rax	#, D.21182
	movl	(%rax), %eax	# *_65, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -72(%rbp)	# D.21181, m
	.loc 1 1036 0
	movq	-152(%rbp), %rax	# diff, tmp318
	addq	$12, %rax	#, D.21182
	movl	(%rax), %edx	# *_68, D.21181
	movq	-152(%rbp), %rax	# diff, tmp319
	addq	$60, %rax	#, D.21182
	movl	(%rax), %eax	# *_70, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -116(%rbp)	# D.21181, m
	.loc 1 1037 0
	movq	-152(%rbp), %rax	# diff, tmp320
	addq	$28, %rax	#, D.21182
	movl	(%rax), %edx	# *_73, D.21181
	movq	-152(%rbp), %rax	# diff, tmp321
	addq	$44, %rax	#, D.21182
	movl	(%rax), %eax	# *_75, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -100(%rbp)	# D.21181, m
	.loc 1 1038 0
	movq	-152(%rbp), %rax	# diff, tmp322
	addq	$28, %rax	#, D.21182
	movl	(%rax), %edx	# *_78, D.21181
	movq	-152(%rbp), %rax	# diff, tmp323
	addq	$44, %rax	#, D.21182
	movl	(%rax), %eax	# *_80, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -84(%rbp)	# D.21181, m
	.loc 1 1039 0
	movq	-152(%rbp), %rax	# diff, tmp324
	addq	$12, %rax	#, D.21182
	movl	(%rax), %edx	# *_83, D.21181
	movq	-152(%rbp), %rax	# diff, tmp325
	addq	$60, %rax	#, D.21182
	movl	(%rax), %eax	# *_85, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -68(%rbp)	# D.21181, m
	.loc 1 1041 0
	movl	-128(%rbp), %edx	# m, D.21181
	movl	-112(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -64(%rbp)	# D.21181, d
	.loc 1 1042 0
	movl	-128(%rbp), %edx	# m, D.21181
	movl	-112(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -32(%rbp)	# D.21181, d
	.loc 1 1043 0
	movl	-96(%rbp), %edx	# m, D.21181
	movl	-80(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -48(%rbp)	# D.21181, d
	.loc 1 1044 0
	movl	-80(%rbp), %edx	# m, D.21181
	movl	-96(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -16(%rbp)	# D.21181, d
	.loc 1 1045 0
	movl	-124(%rbp), %edx	# m, D.21181
	movl	-108(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -60(%rbp)	# D.21181, d
	.loc 1 1046 0
	movl	-124(%rbp), %edx	# m, D.21181
	movl	-108(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -28(%rbp)	# D.21181, d
	.loc 1 1047 0
	movl	-92(%rbp), %edx	# m, D.21181
	movl	-76(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -44(%rbp)	# D.21181, d
	.loc 1 1048 0
	movl	-76(%rbp), %edx	# m, D.21181
	movl	-92(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -12(%rbp)	# D.21181, d
	.loc 1 1049 0
	movl	-120(%rbp), %edx	# m, D.21181
	movl	-104(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -56(%rbp)	# D.21181, d
	.loc 1 1050 0
	movl	-120(%rbp), %edx	# m, D.21181
	movl	-104(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -24(%rbp)	# D.21181, d
	.loc 1 1051 0
	movl	-88(%rbp), %edx	# m, D.21181
	movl	-72(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -40(%rbp)	# D.21181, d
	.loc 1 1052 0
	movl	-72(%rbp), %edx	# m, D.21181
	movl	-88(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -8(%rbp)	# D.21181, d
	.loc 1 1053 0
	movl	-116(%rbp), %edx	# m, D.21181
	movl	-100(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -52(%rbp)	# D.21181, d
	.loc 1 1054 0
	movl	-116(%rbp), %edx	# m, D.21181
	movl	-100(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -20(%rbp)	# D.21181, d
	.loc 1 1055 0
	movl	-84(%rbp), %edx	# m, D.21181
	movl	-68(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -36(%rbp)	# D.21181, d
	.loc 1 1056 0
	movl	-68(%rbp), %edx	# m, D.21181
	movl	-84(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -4(%rbp)	# D.21181, d
	.loc 1 1058 0
	movl	-64(%rbp), %edx	# d, D.21181
	movl	-52(%rbp), %eax	# d, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -128(%rbp)	# D.21181, m
	.loc 1 1059 0
	movl	-60(%rbp), %edx	# d, D.21181
	movl	-56(%rbp), %eax	# d, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -124(%rbp)	# D.21181, m
	.loc 1 1060 0
	movl	-60(%rbp), %edx	# d, D.21181
	movl	-56(%rbp), %eax	# d, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -120(%rbp)	# D.21181, m
	.loc 1 1061 0
	movl	-64(%rbp), %edx	# d, D.21181
	movl	-52(%rbp), %eax	# d, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -116(%rbp)	# D.21181, m
	.loc 1 1062 0
	movl	-48(%rbp), %edx	# d, D.21181
	movl	-36(%rbp), %eax	# d, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -112(%rbp)	# D.21181, m
	.loc 1 1063 0
	movl	-44(%rbp), %edx	# d, D.21181
	movl	-40(%rbp), %eax	# d, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -108(%rbp)	# D.21181, m
	.loc 1 1064 0
	movl	-44(%rbp), %edx	# d, D.21181
	movl	-40(%rbp), %eax	# d, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -104(%rbp)	# D.21181, m
	.loc 1 1065 0
	movl	-48(%rbp), %edx	# d, D.21181
	movl	-36(%rbp), %eax	# d, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -100(%rbp)	# D.21181, m
	.loc 1 1066 0
	movl	-32(%rbp), %edx	# d, D.21181
	movl	-20(%rbp), %eax	# d, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -96(%rbp)	# D.21181, m
	.loc 1 1067 0
	movl	-28(%rbp), %edx	# d, D.21181
	movl	-24(%rbp), %eax	# d, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -92(%rbp)	# D.21181, m
	.loc 1 1068 0
	movl	-28(%rbp), %edx	# d, D.21181
	movl	-24(%rbp), %eax	# d, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -88(%rbp)	# D.21181, m
	.loc 1 1069 0
	movl	-32(%rbp), %edx	# d, D.21181
	movl	-20(%rbp), %eax	# d, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -84(%rbp)	# D.21181, m
	.loc 1 1070 0
	movl	-16(%rbp), %edx	# d, D.21181
	movl	-4(%rbp), %eax	# d, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -80(%rbp)	# D.21181, m
	.loc 1 1071 0
	movl	-12(%rbp), %edx	# d, D.21181
	movl	-8(%rbp), %eax	# d, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -76(%rbp)	# D.21181, m
	.loc 1 1072 0
	movl	-12(%rbp), %edx	# d, D.21181
	movl	-8(%rbp), %eax	# d, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -72(%rbp)	# D.21181, m
	.loc 1 1073 0
	movl	-16(%rbp), %edx	# d, D.21181
	movl	-4(%rbp), %eax	# d, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -68(%rbp)	# D.21181, m
	.loc 1 1075 0
	movl	-128(%rbp), %edx	# m, D.21181
	movl	-124(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -64(%rbp)	# D.21181, d
	.loc 1 1076 0
	movl	-128(%rbp), %edx	# m, D.21181
	movl	-124(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -60(%rbp)	# D.21181, d
	.loc 1 1077 0
	movl	-120(%rbp), %edx	# m, D.21181
	movl	-116(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -56(%rbp)	# D.21181, d
	.loc 1 1078 0
	movl	-116(%rbp), %edx	# m, D.21181
	movl	-120(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -52(%rbp)	# D.21181, d
	.loc 1 1079 0
	movl	-112(%rbp), %edx	# m, D.21181
	movl	-108(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -48(%rbp)	# D.21181, d
	.loc 1 1080 0
	movl	-112(%rbp), %edx	# m, D.21181
	movl	-108(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -44(%rbp)	# D.21181, d
	.loc 1 1081 0
	movl	-104(%rbp), %edx	# m, D.21181
	movl	-100(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -40(%rbp)	# D.21181, d
	.loc 1 1082 0
	movl	-100(%rbp), %edx	# m, D.21181
	movl	-104(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -36(%rbp)	# D.21181, d
	.loc 1 1083 0
	movl	-96(%rbp), %edx	# m, D.21181
	movl	-92(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -32(%rbp)	# D.21181, d
	.loc 1 1084 0
	movl	-96(%rbp), %edx	# m, D.21181
	movl	-92(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -28(%rbp)	# D.21181, d
	.loc 1 1085 0
	movl	-88(%rbp), %edx	# m, D.21181
	movl	-84(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -24(%rbp)	# D.21181, d
	.loc 1 1086 0
	movl	-84(%rbp), %edx	# m, D.21181
	movl	-88(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -20(%rbp)	# D.21181, d
	.loc 1 1087 0
	movl	-80(%rbp), %edx	# m, D.21181
	movl	-76(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -16(%rbp)	# D.21181, d
	.loc 1 1088 0
	movl	-80(%rbp), %edx	# m, D.21181
	movl	-76(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -12(%rbp)	# D.21181, d
	.loc 1 1089 0
	movl	-72(%rbp), %edx	# m, D.21181
	movl	-68(%rbp), %eax	# m, D.21181
	addl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -8(%rbp)	# D.21181, d
	.loc 1 1090 0
	movl	-68(%rbp), %edx	# m, D.21181
	movl	-72(%rbp), %eax	# m, D.21181
	subl	%eax, %edx	# D.21181, D.21181
	movl	%edx, %eax	# D.21181, D.21181
	movl	%eax, -4(%rbp)	# D.21181, d
	.loc 1 1093 0
	movl	$0, -140(%rbp)	#, k
	movl	-140(%rbp), %eax	# k, tmp327
	cltq
	movl	-64(%rbp,%rax,4), %eax	# d, tmp328
	movl	%eax, -132(%rbp)	# tmp328, dd
	jmp	.L325	#
.L326:
	.loc 1 1095 0 discriminator 2
	movl	-132(%rbp), %eax	# dd, tmp330
	cltd
	movl	%edx, %eax	# tmp329, D.21181
	xorl	-132(%rbp), %eax	# dd, D.21181
	subl	%edx, %eax	# tmp329, D.21181
	addl	%eax, -136(%rbp)	# D.21181, satd
	.loc 1 1093 0 discriminator 2
	addl	$1, -140(%rbp)	#, k
	movl	-140(%rbp), %eax	# k, tmp332
	cltq
	movl	-64(%rbp,%rax,4), %eax	# d, tmp333
	movl	%eax, -132(%rbp)	# tmp333, dd
.L325:
	.loc 1 1093 0 is_stmt 0 discriminator 1
	cmpl	$15, -140(%rbp)	#, k
	jle	.L326	#,
	.loc 1 1097 0 is_stmt 1
	movl	-136(%rbp), %eax	# satd, tmp334
	addl	$1, %eax	#, D.21181
	sarl	%eax	# tmp335
	movl	%eax, -136(%rbp)	# tmp335, satd
	jmp	.L327	#
.L324:
	.loc 1 1102 0
	movl	$0, -140(%rbp)	#, k
	jmp	.L328	#
.L329:
	.loc 1 1104 0 discriminator 2
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.372
	movl	-140(%rbp), %edx	# k, tmp336
	movslq	%edx, %rdx	# tmp336, D.21183
	leaq	0(,%rdx,4), %rcx	#, D.21183
	movq	-152(%rbp), %rdx	# diff, tmp337
	addq	%rcx, %rdx	# D.21183, D.21182
	movl	(%rdx), %edx	# *_244, D.21181
	movslq	%edx, %rdx	# D.21181, D.21183
	salq	$2, %rdx	#, D.21183
	addq	%rdx, %rax	# D.21183, D.21182
	movl	(%rax), %eax	# *_248, D.21181
	addl	%eax, -136(%rbp)	# D.21181, satd
	.loc 1 1102 0 discriminator 2
	addl	$1, -140(%rbp)	#, k
.L328:
	.loc 1 1102 0 is_stmt 0 discriminator 1
	cmpl	$15, -140(%rbp)	#, k
	jle	.L329	#,
.L327:
	.loc 1 1108 0 is_stmt 1
	movl	-136(%rbp), %eax	# satd, D.21181
	.loc 1 1109 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	SATD, .-SATD
	.globl	SATD8X8
	.type	SATD8X8, @function
SATD8X8:
.LFB13:
	.loc 1 1119 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$676, %rsp	#,
	movq	%rdi, -792(%rbp)	# diff, diff
	movl	%esi, -796(%rbp)	# use_hadamard, use_hadamard
	.loc 1 1120 0
	movl	$0, -772(%rbp)	#, sad
	.loc 1 1123 0
	cmpl	$0, -796(%rbp)	#, use_hadamard
	je	.L332	#,
	.loc 1 1126 0
	movl	$0, -776(%rbp)	#, j
	jmp	.L333	#
.L334:
	.loc 1 1128 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp295
	sall	$3, %eax	#, D.21184
	cltq
	leaq	0(,%rax,4), %rdx	#, D.21185
	movq	-792(%rbp), %rax	# diff, tmp296
	addq	%rdx, %rax	# D.21185, D.21186
	movl	(%rax), %edx	# *_17, D.21184
	movl	-776(%rbp), %eax	# j, tmp297
	sall	$3, %eax	#, D.21184
	cltq
	addq	$4, %rax	#, D.21187
	leaq	0(,%rax,4), %rcx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp298
	addq	%rcx, %rax	# D.21187, D.21186
	movl	(%rax), %eax	# *_23, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp300
	cltq
	salq	$5, %rax	#, tmp301
	addq	%rbp, %rax	#, tmp302
	subq	$512, %rax	#, tmp303
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1129 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp304
	sall	$3, %eax	#, D.21184
	cltq
	addq	$1, %rax	#, D.21187
	leaq	0(,%rax,4), %rdx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp305
	addq	%rdx, %rax	# D.21187, D.21186
	movl	(%rax), %edx	# *_30, D.21184
	movl	-776(%rbp), %eax	# j, tmp306
	sall	$3, %eax	#, D.21184
	cltq
	addq	$5, %rax	#, D.21187
	leaq	0(,%rax,4), %rcx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp307
	addq	%rcx, %rax	# D.21187, D.21186
	movl	(%rax), %eax	# *_36, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp309
	cltq
	salq	$5, %rax	#, tmp310
	addq	%rbp, %rax	#, tmp311
	subq	$508, %rax	#, tmp312
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1130 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp313
	sall	$3, %eax	#, D.21184
	cltq
	addq	$2, %rax	#, D.21187
	leaq	0(,%rax,4), %rdx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp314
	addq	%rdx, %rax	# D.21187, D.21186
	movl	(%rax), %edx	# *_43, D.21184
	movl	-776(%rbp), %eax	# j, tmp315
	sall	$3, %eax	#, D.21184
	cltq
	addq	$6, %rax	#, D.21187
	leaq	0(,%rax,4), %rcx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp316
	addq	%rcx, %rax	# D.21187, D.21186
	movl	(%rax), %eax	# *_49, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp318
	cltq
	salq	$5, %rax	#, tmp319
	addq	%rbp, %rax	#, tmp320
	subq	$504, %rax	#, tmp321
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1131 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp322
	sall	$3, %eax	#, D.21184
	cltq
	addq	$3, %rax	#, D.21187
	leaq	0(,%rax,4), %rdx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp323
	addq	%rdx, %rax	# D.21187, D.21186
	movl	(%rax), %edx	# *_56, D.21184
	movl	-776(%rbp), %eax	# j, tmp324
	sall	$3, %eax	#, D.21184
	cltq
	addq	$7, %rax	#, D.21187
	leaq	0(,%rax,4), %rcx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp325
	addq	%rcx, %rax	# D.21187, D.21186
	movl	(%rax), %eax	# *_62, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp327
	cltq
	salq	$5, %rax	#, tmp328
	addq	%rbp, %rax	#, tmp329
	subq	$500, %rax	#, tmp330
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1132 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp331
	sall	$3, %eax	#, D.21184
	cltq
	leaq	0(,%rax,4), %rdx	#, D.21185
	movq	-792(%rbp), %rax	# diff, tmp332
	addq	%rdx, %rax	# D.21185, D.21186
	movl	(%rax), %edx	# *_68, D.21184
	movl	-776(%rbp), %eax	# j, tmp333
	sall	$3, %eax	#, D.21184
	cltq
	addq	$4, %rax	#, D.21187
	leaq	0(,%rax,4), %rcx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp334
	addq	%rcx, %rax	# D.21187, D.21186
	movl	(%rax), %eax	# *_74, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp336
	cltq
	salq	$5, %rax	#, tmp337
	addq	%rbp, %rax	#, tmp338
	subq	$496, %rax	#, tmp339
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1133 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp340
	sall	$3, %eax	#, D.21184
	cltq
	addq	$1, %rax	#, D.21187
	leaq	0(,%rax,4), %rdx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp341
	addq	%rdx, %rax	# D.21187, D.21186
	movl	(%rax), %edx	# *_81, D.21184
	movl	-776(%rbp), %eax	# j, tmp342
	sall	$3, %eax	#, D.21184
	cltq
	addq	$5, %rax	#, D.21187
	leaq	0(,%rax,4), %rcx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp343
	addq	%rcx, %rax	# D.21187, D.21186
	movl	(%rax), %eax	# *_87, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp345
	cltq
	salq	$5, %rax	#, tmp346
	addq	%rbp, %rax	#, tmp347
	subq	$492, %rax	#, tmp348
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1134 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp349
	sall	$3, %eax	#, D.21184
	cltq
	addq	$2, %rax	#, D.21187
	leaq	0(,%rax,4), %rdx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp350
	addq	%rdx, %rax	# D.21187, D.21186
	movl	(%rax), %edx	# *_94, D.21184
	movl	-776(%rbp), %eax	# j, tmp351
	sall	$3, %eax	#, D.21184
	cltq
	addq	$6, %rax	#, D.21187
	leaq	0(,%rax,4), %rcx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp352
	addq	%rcx, %rax	# D.21187, D.21186
	movl	(%rax), %eax	# *_100, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp354
	cltq
	salq	$5, %rax	#, tmp355
	addq	%rbp, %rax	#, tmp356
	subq	$488, %rax	#, tmp357
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1135 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp358
	sall	$3, %eax	#, D.21184
	cltq
	addq	$3, %rax	#, D.21187
	leaq	0(,%rax,4), %rdx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp359
	addq	%rdx, %rax	# D.21187, D.21186
	movl	(%rax), %edx	# *_107, D.21184
	movl	-776(%rbp), %eax	# j, tmp360
	sall	$3, %eax	#, D.21184
	cltq
	addq	$7, %rax	#, D.21187
	leaq	0(,%rax,4), %rcx	#, D.21187
	movq	-792(%rbp), %rax	# diff, tmp361
	addq	%rcx, %rax	# D.21187, D.21186
	movl	(%rax), %eax	# *_113, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp363
	cltq
	salq	$5, %rax	#, tmp364
	addq	%rbp, %rax	#, tmp365
	subq	$484, %rax	#, tmp366
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1137 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp368
	cltq
	salq	$5, %rax	#, tmp369
	addq	%rbp, %rax	#, tmp370
	subq	$512, %rax	#, tmp371
	movl	(%rax), %edx	# m2, D.21184
	movl	-776(%rbp), %eax	# j, tmp373
	cltq
	salq	$5, %rax	#, tmp374
	addq	%rbp, %rax	#, tmp375
	subq	$504, %rax	#, tmp376
	movl	(%rax), %eax	# m2, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp378
	cltq
	salq	$5, %rax	#, tmp379
	addq	%rbp, %rax	#, tmp380
	subq	$768, %rax	#, tmp381
	movl	%edx, (%rax)	# D.21184, m1
	.loc 1 1138 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp383
	cltq
	salq	$5, %rax	#, tmp384
	addq	%rbp, %rax	#, tmp385
	subq	$508, %rax	#, tmp386
	movl	(%rax), %edx	# m2, D.21184
	movl	-776(%rbp), %eax	# j, tmp388
	cltq
	salq	$5, %rax	#, tmp389
	addq	%rbp, %rax	#, tmp390
	subq	$500, %rax	#, tmp391
	movl	(%rax), %eax	# m2, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp393
	cltq
	salq	$5, %rax	#, tmp394
	addq	%rbp, %rax	#, tmp395
	subq	$764, %rax	#, tmp396
	movl	%edx, (%rax)	# D.21184, m1
	.loc 1 1139 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp398
	cltq
	salq	$5, %rax	#, tmp399
	addq	%rbp, %rax	#, tmp400
	subq	$512, %rax	#, tmp401
	movl	(%rax), %edx	# m2, D.21184
	movl	-776(%rbp), %eax	# j, tmp403
	cltq
	salq	$5, %rax	#, tmp404
	addq	%rbp, %rax	#, tmp405
	subq	$504, %rax	#, tmp406
	movl	(%rax), %eax	# m2, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp408
	cltq
	salq	$5, %rax	#, tmp409
	addq	%rbp, %rax	#, tmp410
	subq	$760, %rax	#, tmp411
	movl	%edx, (%rax)	# D.21184, m1
	.loc 1 1140 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp413
	cltq
	salq	$5, %rax	#, tmp414
	addq	%rbp, %rax	#, tmp415
	subq	$508, %rax	#, tmp416
	movl	(%rax), %edx	# m2, D.21184
	movl	-776(%rbp), %eax	# j, tmp418
	cltq
	salq	$5, %rax	#, tmp419
	addq	%rbp, %rax	#, tmp420
	subq	$500, %rax	#, tmp421
	movl	(%rax), %eax	# m2, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp423
	cltq
	salq	$5, %rax	#, tmp424
	addq	%rbp, %rax	#, tmp425
	subq	$756, %rax	#, tmp426
	movl	%edx, (%rax)	# D.21184, m1
	.loc 1 1141 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp428
	cltq
	salq	$5, %rax	#, tmp429
	addq	%rbp, %rax	#, tmp430
	subq	$496, %rax	#, tmp431
	movl	(%rax), %edx	# m2, D.21184
	movl	-776(%rbp), %eax	# j, tmp433
	cltq
	salq	$5, %rax	#, tmp434
	addq	%rbp, %rax	#, tmp435
	subq	$488, %rax	#, tmp436
	movl	(%rax), %eax	# m2, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp438
	cltq
	salq	$5, %rax	#, tmp439
	addq	%rbp, %rax	#, tmp440
	subq	$752, %rax	#, tmp441
	movl	%edx, (%rax)	# D.21184, m1
	.loc 1 1142 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp443
	cltq
	salq	$5, %rax	#, tmp444
	addq	%rbp, %rax	#, tmp445
	subq	$492, %rax	#, tmp446
	movl	(%rax), %edx	# m2, D.21184
	movl	-776(%rbp), %eax	# j, tmp448
	cltq
	salq	$5, %rax	#, tmp449
	addq	%rbp, %rax	#, tmp450
	subq	$484, %rax	#, tmp451
	movl	(%rax), %eax	# m2, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp453
	cltq
	salq	$5, %rax	#, tmp454
	addq	%rbp, %rax	#, tmp455
	subq	$748, %rax	#, tmp456
	movl	%edx, (%rax)	# D.21184, m1
	.loc 1 1143 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp458
	cltq
	salq	$5, %rax	#, tmp459
	addq	%rbp, %rax	#, tmp460
	subq	$496, %rax	#, tmp461
	movl	(%rax), %edx	# m2, D.21184
	movl	-776(%rbp), %eax	# j, tmp463
	cltq
	salq	$5, %rax	#, tmp464
	addq	%rbp, %rax	#, tmp465
	subq	$488, %rax	#, tmp466
	movl	(%rax), %eax	# m2, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp468
	cltq
	salq	$5, %rax	#, tmp469
	addq	%rbp, %rax	#, tmp470
	subq	$744, %rax	#, tmp471
	movl	%edx, (%rax)	# D.21184, m1
	.loc 1 1144 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp473
	cltq
	salq	$5, %rax	#, tmp474
	addq	%rbp, %rax	#, tmp475
	subq	$492, %rax	#, tmp476
	movl	(%rax), %edx	# m2, D.21184
	movl	-776(%rbp), %eax	# j, tmp478
	cltq
	salq	$5, %rax	#, tmp479
	addq	%rbp, %rax	#, tmp480
	subq	$484, %rax	#, tmp481
	movl	(%rax), %eax	# m2, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp483
	cltq
	salq	$5, %rax	#, tmp484
	addq	%rbp, %rax	#, tmp485
	subq	$740, %rax	#, tmp486
	movl	%edx, (%rax)	# D.21184, m1
	.loc 1 1146 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp488
	cltq
	salq	$5, %rax	#, tmp489
	addq	%rbp, %rax	#, tmp490
	subq	$768, %rax	#, tmp491
	movl	(%rax), %edx	# m1, D.21184
	movl	-776(%rbp), %eax	# j, tmp493
	cltq
	salq	$5, %rax	#, tmp494
	addq	%rbp, %rax	#, tmp495
	subq	$764, %rax	#, tmp496
	movl	(%rax), %eax	# m1, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp498
	cltq
	salq	$5, %rax	#, tmp499
	addq	%rbp, %rax	#, tmp500
	subq	$512, %rax	#, tmp501
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1147 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp503
	cltq
	salq	$5, %rax	#, tmp504
	addq	%rbp, %rax	#, tmp505
	subq	$768, %rax	#, tmp506
	movl	(%rax), %edx	# m1, D.21184
	movl	-776(%rbp), %eax	# j, tmp508
	cltq
	salq	$5, %rax	#, tmp509
	addq	%rbp, %rax	#, tmp510
	subq	$764, %rax	#, tmp511
	movl	(%rax), %eax	# m1, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp513
	cltq
	salq	$5, %rax	#, tmp514
	addq	%rbp, %rax	#, tmp515
	subq	$508, %rax	#, tmp516
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1148 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp518
	cltq
	salq	$5, %rax	#, tmp519
	addq	%rbp, %rax	#, tmp520
	subq	$760, %rax	#, tmp521
	movl	(%rax), %edx	# m1, D.21184
	movl	-776(%rbp), %eax	# j, tmp523
	cltq
	salq	$5, %rax	#, tmp524
	addq	%rbp, %rax	#, tmp525
	subq	$756, %rax	#, tmp526
	movl	(%rax), %eax	# m1, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp528
	cltq
	salq	$5, %rax	#, tmp529
	addq	%rbp, %rax	#, tmp530
	subq	$504, %rax	#, tmp531
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1149 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp533
	cltq
	salq	$5, %rax	#, tmp534
	addq	%rbp, %rax	#, tmp535
	subq	$760, %rax	#, tmp536
	movl	(%rax), %edx	# m1, D.21184
	movl	-776(%rbp), %eax	# j, tmp538
	cltq
	salq	$5, %rax	#, tmp539
	addq	%rbp, %rax	#, tmp540
	subq	$756, %rax	#, tmp541
	movl	(%rax), %eax	# m1, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp543
	cltq
	salq	$5, %rax	#, tmp544
	addq	%rbp, %rax	#, tmp545
	subq	$500, %rax	#, tmp546
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1150 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp548
	cltq
	salq	$5, %rax	#, tmp549
	addq	%rbp, %rax	#, tmp550
	subq	$752, %rax	#, tmp551
	movl	(%rax), %edx	# m1, D.21184
	movl	-776(%rbp), %eax	# j, tmp553
	cltq
	salq	$5, %rax	#, tmp554
	addq	%rbp, %rax	#, tmp555
	subq	$748, %rax	#, tmp556
	movl	(%rax), %eax	# m1, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp558
	cltq
	salq	$5, %rax	#, tmp559
	addq	%rbp, %rax	#, tmp560
	subq	$496, %rax	#, tmp561
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1151 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp563
	cltq
	salq	$5, %rax	#, tmp564
	addq	%rbp, %rax	#, tmp565
	subq	$752, %rax	#, tmp566
	movl	(%rax), %edx	# m1, D.21184
	movl	-776(%rbp), %eax	# j, tmp568
	cltq
	salq	$5, %rax	#, tmp569
	addq	%rbp, %rax	#, tmp570
	subq	$748, %rax	#, tmp571
	movl	(%rax), %eax	# m1, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp573
	cltq
	salq	$5, %rax	#, tmp574
	addq	%rbp, %rax	#, tmp575
	subq	$492, %rax	#, tmp576
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1152 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp578
	cltq
	salq	$5, %rax	#, tmp579
	addq	%rbp, %rax	#, tmp580
	subq	$744, %rax	#, tmp581
	movl	(%rax), %edx	# m1, D.21184
	movl	-776(%rbp), %eax	# j, tmp583
	cltq
	salq	$5, %rax	#, tmp584
	addq	%rbp, %rax	#, tmp585
	subq	$740, %rax	#, tmp586
	movl	(%rax), %eax	# m1, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp588
	cltq
	salq	$5, %rax	#, tmp589
	addq	%rbp, %rax	#, tmp590
	subq	$488, %rax	#, tmp591
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1153 0 discriminator 2
	movl	-776(%rbp), %eax	# j, tmp593
	cltq
	salq	$5, %rax	#, tmp594
	addq	%rbp, %rax	#, tmp595
	subq	$744, %rax	#, tmp596
	movl	(%rax), %edx	# m1, D.21184
	movl	-776(%rbp), %eax	# j, tmp598
	cltq
	salq	$5, %rax	#, tmp599
	addq	%rbp, %rax	#, tmp600
	subq	$740, %rax	#, tmp601
	movl	(%rax), %eax	# m1, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-776(%rbp), %eax	# j, tmp603
	cltq
	salq	$5, %rax	#, tmp604
	addq	%rbp, %rax	#, tmp605
	subq	$484, %rax	#, tmp606
	movl	%edx, (%rax)	# D.21184, m2
	.loc 1 1126 0 discriminator 2
	addl	$1, -776(%rbp)	#, j
.L333:
	.loc 1 1126 0 is_stmt 0 discriminator 1
	cmpl	$7, -776(%rbp)	#, j
	jle	.L334	#,
	.loc 1 1157 0 is_stmt 1
	movl	$0, -780(%rbp)	#, i
	jmp	.L335	#
.L336:
	.loc 1 1159 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp608
	cltq
	movl	-512(%rbp,%rax,4), %edx	# m2, D.21184
	movl	-780(%rbp), %eax	# i, tmp610
	cltq
	addq	$32, %rax	#, tmp611
	movl	-512(%rbp,%rax,4), %eax	# m2, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp613
	cltq
	movl	%edx, -256(%rbp,%rax,4)	# D.21184, m3
	.loc 1 1160 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp615
	cltq
	addq	$8, %rax	#, tmp616
	movl	-512(%rbp,%rax,4), %edx	# m2, D.21184
	movl	-780(%rbp), %eax	# i, tmp618
	cltq
	addq	$40, %rax	#, tmp619
	movl	-512(%rbp,%rax,4), %eax	# m2, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp621
	cltq
	addq	$8, %rax	#, tmp622
	movl	%edx, -256(%rbp,%rax,4)	# D.21184, m3
	.loc 1 1161 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp624
	cltq
	addq	$16, %rax	#, tmp625
	movl	-512(%rbp,%rax,4), %edx	# m2, D.21184
	movl	-780(%rbp), %eax	# i, tmp627
	cltq
	addq	$48, %rax	#, tmp628
	movl	-512(%rbp,%rax,4), %eax	# m2, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp630
	cltq
	addq	$16, %rax	#, tmp631
	movl	%edx, -256(%rbp,%rax,4)	# D.21184, m3
	.loc 1 1162 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp633
	cltq
	addq	$24, %rax	#, tmp634
	movl	-512(%rbp,%rax,4), %edx	# m2, D.21184
	movl	-780(%rbp), %eax	# i, tmp636
	cltq
	addq	$56, %rax	#, tmp637
	movl	-512(%rbp,%rax,4), %eax	# m2, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp639
	cltq
	addq	$24, %rax	#, tmp640
	movl	%edx, -256(%rbp,%rax,4)	# D.21184, m3
	.loc 1 1163 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp642
	cltq
	movl	-512(%rbp,%rax,4), %edx	# m2, D.21184
	movl	-780(%rbp), %eax	# i, tmp644
	cltq
	addq	$32, %rax	#, tmp645
	movl	-512(%rbp,%rax,4), %eax	# m2, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp647
	cltq
	addq	$32, %rax	#, tmp648
	movl	%edx, -256(%rbp,%rax,4)	# D.21184, m3
	.loc 1 1164 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp650
	cltq
	addq	$8, %rax	#, tmp651
	movl	-512(%rbp,%rax,4), %edx	# m2, D.21184
	movl	-780(%rbp), %eax	# i, tmp653
	cltq
	addq	$40, %rax	#, tmp654
	movl	-512(%rbp,%rax,4), %eax	# m2, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp656
	cltq
	addq	$40, %rax	#, tmp657
	movl	%edx, -256(%rbp,%rax,4)	# D.21184, m3
	.loc 1 1165 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp659
	cltq
	addq	$16, %rax	#, tmp660
	movl	-512(%rbp,%rax,4), %edx	# m2, D.21184
	movl	-780(%rbp), %eax	# i, tmp662
	cltq
	addq	$48, %rax	#, tmp663
	movl	-512(%rbp,%rax,4), %eax	# m2, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp665
	cltq
	addq	$48, %rax	#, tmp666
	movl	%edx, -256(%rbp,%rax,4)	# D.21184, m3
	.loc 1 1166 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp668
	cltq
	addq	$24, %rax	#, tmp669
	movl	-512(%rbp,%rax,4), %edx	# m2, D.21184
	movl	-780(%rbp), %eax	# i, tmp671
	cltq
	addq	$56, %rax	#, tmp672
	movl	-512(%rbp,%rax,4), %eax	# m2, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp674
	cltq
	addq	$56, %rax	#, tmp675
	movl	%edx, -256(%rbp,%rax,4)	# D.21184, m3
	.loc 1 1168 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp677
	cltq
	movl	-256(%rbp,%rax,4), %edx	# m3, D.21184
	movl	-780(%rbp), %eax	# i, tmp679
	cltq
	addq	$16, %rax	#, tmp680
	movl	-256(%rbp,%rax,4), %eax	# m3, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp682
	cltq
	movl	%edx, -768(%rbp,%rax,4)	# D.21184, m1
	.loc 1 1169 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp684
	cltq
	addq	$8, %rax	#, tmp685
	movl	-256(%rbp,%rax,4), %edx	# m3, D.21184
	movl	-780(%rbp), %eax	# i, tmp687
	cltq
	addq	$24, %rax	#, tmp688
	movl	-256(%rbp,%rax,4), %eax	# m3, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp690
	cltq
	addq	$8, %rax	#, tmp691
	movl	%edx, -768(%rbp,%rax,4)	# D.21184, m1
	.loc 1 1170 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp693
	cltq
	movl	-256(%rbp,%rax,4), %edx	# m3, D.21184
	movl	-780(%rbp), %eax	# i, tmp695
	cltq
	addq	$16, %rax	#, tmp696
	movl	-256(%rbp,%rax,4), %eax	# m3, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp698
	cltq
	addq	$16, %rax	#, tmp699
	movl	%edx, -768(%rbp,%rax,4)	# D.21184, m1
	.loc 1 1171 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp701
	cltq
	addq	$8, %rax	#, tmp702
	movl	-256(%rbp,%rax,4), %edx	# m3, D.21184
	movl	-780(%rbp), %eax	# i, tmp704
	cltq
	addq	$24, %rax	#, tmp705
	movl	-256(%rbp,%rax,4), %eax	# m3, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp707
	cltq
	addq	$24, %rax	#, tmp708
	movl	%edx, -768(%rbp,%rax,4)	# D.21184, m1
	.loc 1 1172 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp710
	cltq
	addq	$32, %rax	#, tmp711
	movl	-256(%rbp,%rax,4), %edx	# m3, D.21184
	movl	-780(%rbp), %eax	# i, tmp713
	cltq
	addq	$48, %rax	#, tmp714
	movl	-256(%rbp,%rax,4), %eax	# m3, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp716
	cltq
	addq	$32, %rax	#, tmp717
	movl	%edx, -768(%rbp,%rax,4)	# D.21184, m1
	.loc 1 1173 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp719
	cltq
	addq	$40, %rax	#, tmp720
	movl	-256(%rbp,%rax,4), %edx	# m3, D.21184
	movl	-780(%rbp), %eax	# i, tmp722
	cltq
	addq	$56, %rax	#, tmp723
	movl	-256(%rbp,%rax,4), %eax	# m3, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp725
	cltq
	addq	$40, %rax	#, tmp726
	movl	%edx, -768(%rbp,%rax,4)	# D.21184, m1
	.loc 1 1174 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp728
	cltq
	addq	$32, %rax	#, tmp729
	movl	-256(%rbp,%rax,4), %edx	# m3, D.21184
	movl	-780(%rbp), %eax	# i, tmp731
	cltq
	addq	$48, %rax	#, tmp732
	movl	-256(%rbp,%rax,4), %eax	# m3, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp734
	cltq
	addq	$48, %rax	#, tmp735
	movl	%edx, -768(%rbp,%rax,4)	# D.21184, m1
	.loc 1 1175 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp737
	cltq
	addq	$40, %rax	#, tmp738
	movl	-256(%rbp,%rax,4), %edx	# m3, D.21184
	movl	-780(%rbp), %eax	# i, tmp740
	cltq
	addq	$56, %rax	#, tmp741
	movl	-256(%rbp,%rax,4), %eax	# m3, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp743
	cltq
	addq	$56, %rax	#, tmp744
	movl	%edx, -768(%rbp,%rax,4)	# D.21184, m1
	.loc 1 1177 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp746
	cltq
	movl	-768(%rbp,%rax,4), %edx	# m1, D.21184
	movl	-780(%rbp), %eax	# i, tmp748
	cltq
	addq	$8, %rax	#, tmp749
	movl	-768(%rbp,%rax,4), %eax	# m1, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp751
	cltq
	movl	%edx, -512(%rbp,%rax,4)	# D.21184, m2
	.loc 1 1178 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp753
	cltq
	movl	-768(%rbp,%rax,4), %edx	# m1, D.21184
	movl	-780(%rbp), %eax	# i, tmp755
	cltq
	addq	$8, %rax	#, tmp756
	movl	-768(%rbp,%rax,4), %eax	# m1, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp758
	cltq
	addq	$8, %rax	#, tmp759
	movl	%edx, -512(%rbp,%rax,4)	# D.21184, m2
	.loc 1 1179 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp761
	cltq
	addq	$16, %rax	#, tmp762
	movl	-768(%rbp,%rax,4), %edx	# m1, D.21184
	movl	-780(%rbp), %eax	# i, tmp764
	cltq
	addq	$24, %rax	#, tmp765
	movl	-768(%rbp,%rax,4), %eax	# m1, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp767
	cltq
	addq	$16, %rax	#, tmp768
	movl	%edx, -512(%rbp,%rax,4)	# D.21184, m2
	.loc 1 1180 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp770
	cltq
	addq	$16, %rax	#, tmp771
	movl	-768(%rbp,%rax,4), %edx	# m1, D.21184
	movl	-780(%rbp), %eax	# i, tmp773
	cltq
	addq	$24, %rax	#, tmp774
	movl	-768(%rbp,%rax,4), %eax	# m1, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp776
	cltq
	addq	$24, %rax	#, tmp777
	movl	%edx, -512(%rbp,%rax,4)	# D.21184, m2
	.loc 1 1181 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp779
	cltq
	addq	$32, %rax	#, tmp780
	movl	-768(%rbp,%rax,4), %edx	# m1, D.21184
	movl	-780(%rbp), %eax	# i, tmp782
	cltq
	addq	$40, %rax	#, tmp783
	movl	-768(%rbp,%rax,4), %eax	# m1, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp785
	cltq
	addq	$32, %rax	#, tmp786
	movl	%edx, -512(%rbp,%rax,4)	# D.21184, m2
	.loc 1 1182 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp788
	cltq
	addq	$32, %rax	#, tmp789
	movl	-768(%rbp,%rax,4), %edx	# m1, D.21184
	movl	-780(%rbp), %eax	# i, tmp791
	cltq
	addq	$40, %rax	#, tmp792
	movl	-768(%rbp,%rax,4), %eax	# m1, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp794
	cltq
	addq	$40, %rax	#, tmp795
	movl	%edx, -512(%rbp,%rax,4)	# D.21184, m2
	.loc 1 1183 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp797
	cltq
	addq	$48, %rax	#, tmp798
	movl	-768(%rbp,%rax,4), %edx	# m1, D.21184
	movl	-780(%rbp), %eax	# i, tmp800
	cltq
	addq	$56, %rax	#, tmp801
	movl	-768(%rbp,%rax,4), %eax	# m1, D.21184
	addl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp803
	cltq
	addq	$48, %rax	#, tmp804
	movl	%edx, -512(%rbp,%rax,4)	# D.21184, m2
	.loc 1 1184 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp806
	cltq
	addq	$48, %rax	#, tmp807
	movl	-768(%rbp,%rax,4), %edx	# m1, D.21184
	movl	-780(%rbp), %eax	# i, tmp809
	cltq
	addq	$56, %rax	#, tmp810
	movl	-768(%rbp,%rax,4), %eax	# m1, D.21184
	subl	%eax, %edx	# D.21184, D.21184
	movl	-780(%rbp), %eax	# i, tmp812
	cltq
	addq	$56, %rax	#, tmp813
	movl	%edx, -512(%rbp,%rax,4)	# D.21184, m2
	.loc 1 1157 0 discriminator 2
	addl	$1, -780(%rbp)	#, i
.L335:
	.loc 1 1157 0 is_stmt 0 discriminator 1
	cmpl	$7, -780(%rbp)	#, i
	jle	.L336	#,
	.loc 1 1186 0 is_stmt 1
	movl	$0, -776(%rbp)	#, j
	jmp	.L337	#
.L340:
	.loc 1 1187 0
	movl	$0, -780(%rbp)	#, i
	jmp	.L338	#
.L339:
	.loc 1 1188 0 discriminator 2
	movl	-780(%rbp), %eax	# i, tmp815
	cltq
	movl	-776(%rbp), %edx	# j, tmp817
	movslq	%edx, %rdx	# tmp817, tmp816
	salq	$3, %rdx	#, tmp818
	addq	%rdx, %rax	# tmp818, tmp819
	movl	-512(%rbp,%rax,4), %eax	# m2, D.21184
	cltd
	xorl	%edx, %eax	# tmp820, D.21184
	subl	%edx, %eax	# tmp820, D.21184
	addl	%eax, -772(%rbp)	# D.21184, sad
	.loc 1 1187 0 discriminator 2
	addl	$1, -780(%rbp)	#, i
.L338:
	.loc 1 1187 0 is_stmt 0 discriminator 1
	cmpl	$7, -780(%rbp)	#, i
	jle	.L339	#,
	.loc 1 1186 0 is_stmt 1
	addl	$1, -776(%rbp)	#, j
.L337:
	.loc 1 1186 0 is_stmt 0 discriminator 1
	cmpl	$7, -776(%rbp)	#, j
	jle	.L340	#,
	.loc 1 1189 0 is_stmt 1
	movl	-772(%rbp), %eax	# sad, tmp821
	addl	$2, %eax	#, D.21184
	sarl	$2, %eax	#, tmp822
	movl	%eax, -772(%rbp)	# tmp822, sad
	jmp	.L341	#
.L332:
	.loc 1 1193 0
	movl	$0, -780(%rbp)	#, i
	jmp	.L342	#
.L343:
	.loc 1 1194 0 discriminator 2
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.373
	movl	-780(%rbp), %edx	# i, tmp823
	movslq	%edx, %rdx	# tmp823, D.21185
	leaq	0(,%rdx,4), %rcx	#, D.21185
	movq	-792(%rbp), %rdx	# diff, tmp824
	addq	%rcx, %rdx	# D.21185, D.21186
	movl	(%rdx), %edx	# *_252, D.21184
	movslq	%edx, %rdx	# D.21184, D.21185
	salq	$2, %rdx	#, D.21185
	addq	%rdx, %rax	# D.21185, D.21186
	movl	(%rax), %eax	# *_256, D.21184
	addl	%eax, -772(%rbp)	# D.21184, sad
	.loc 1 1193 0 discriminator 2
	addl	$1, -780(%rbp)	#, i
.L342:
	.loc 1 1193 0 is_stmt 0 discriminator 1
	cmpl	$63, -780(%rbp)	#, i
	jle	.L343	#,
.L341:
	.loc 1 1197 0 is_stmt 1
	movl	-772(%rbp), %eax	# sad, D.21184
	.loc 1 1198 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE13:
	.size	SATD8X8, .-SATD8X8
	.globl	find_SATD
	.type	find_SATD, @function
find_SATD:
.LFB14:
	.loc 1 1208 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$1088, %rsp	#,
	movq	%rdi, -1080(%rbp)	# curr_diff, curr_diff
	movl	%esi, -1084(%rbp)	# use_hadamard, use_hadamard
	movl	%edx, -1088(%rbp)	# blocktype, blocktype
	.loc 1 1209 0
	movl	$0, -1040(%rbp)	#, sad
	.loc 1 1210 0
	movq	input(%rip), %rax	# input, input.374
	movl	-1088(%rbp), %edx	# blocktype, tmp103
	movslq	%edx, %rdx	# tmp103, tmp102
	addq	$10, %rdx	#, tmp104
	movl	(%rax,%rdx,8), %eax	# input.374_15->blc_size, tmp105
	movl	%eax, -1036(%rbp)	# tmp105, block_size_x
	.loc 1 1211 0
	movq	input(%rip), %rax	# input, input.375
	movl	-1088(%rbp), %edx	# blocktype, tmp107
	movslq	%edx, %rdx	# tmp107, tmp106
	movl	84(%rax,%rdx,8), %eax	# input.375_18->blc_size, tmp108
	movl	%eax, -1032(%rbp)	# tmp108, block_size_y
	.loc 1 1212 0
	cmpl	$4, -1088(%rbp)	#, blocktype
	jle	.L346	#,
	.loc 1 1212 0 is_stmt 0 discriminator 1
	movl	$4, %eax	#, iftmp.376
	jmp	.L347	#
.L346:
	.loc 1 1212 0 discriminator 2
	movl	$8, %eax	#, iftmp.376
.L347:
	.loc 1 1212 0 discriminator 3
	movl	%eax, -1028(%rbp)	# iftmp.376, block_size
	.loc 1 1215 0 is_stmt 1 discriminator 3
	movl	$0, -1052(%rbp)	#, k
	.loc 1 1216 0 discriminator 3
	movl	$0, -1044(%rbp)	#, y
	jmp	.L348	#
.L355:
	.loc 1 1217 0
	movl	$0, -1048(%rbp)	#, x
	jmp	.L349	#
.L354:
	.loc 1 1218 0
	movl	-1044(%rbp), %eax	# y, tmp109
	movl	%eax, -1056(%rbp)	# tmp109, j
	jmp	.L350	#
.L353:
	.loc 1 1219 0
	movl	-1048(%rbp), %eax	# x, tmp110
	movl	%eax, -1060(%rbp)	# tmp110, i
	jmp	.L351	#
.L352:
	.loc 1 1220 0 discriminator 2
	movl	-1056(%rbp), %eax	# j, tmp111
	cltq
	salq	$6, %rax	#, D.21189
	movq	%rax, %rdx	# D.21189, D.21189
	movq	-1080(%rbp), %rax	# curr_diff, tmp112
	addq	%rax, %rdx	# tmp112, D.21190
	movl	-1060(%rbp), %eax	# i, tmp114
	cltq
	movl	(%rdx,%rax,4), %edx	# *_33, D.21188
	movl	-1052(%rbp), %eax	# k, tmp116
	cltq
	movl	%edx, -1024(%rbp,%rax,4)	# D.21188, diff
	.loc 1 1219 0 discriminator 2
	addl	$1, -1060(%rbp)	#, i
	addl	$1, -1052(%rbp)	#, k
.L351:
	.loc 1 1219 0 is_stmt 0 discriminator 1
	movl	-1028(%rbp), %eax	# block_size, tmp117
	movl	-1048(%rbp), %edx	# x, tmp118
	addl	%edx, %eax	# tmp118, D.21188
	cmpl	-1060(%rbp), %eax	# i, D.21188
	jg	.L352	#,
	.loc 1 1218 0 is_stmt 1
	addl	$1, -1056(%rbp)	#, j
.L350:
	.loc 1 1218 0 is_stmt 0 discriminator 1
	movl	-1028(%rbp), %eax	# block_size, tmp119
	movl	-1044(%rbp), %edx	# y, tmp120
	addl	%edx, %eax	# tmp120, D.21188
	cmpl	-1056(%rbp), %eax	# j, D.21188
	jg	.L353	#,
	.loc 1 1217 0 is_stmt 1
	movl	-1028(%rbp), %eax	# block_size, tmp121
	addl	%eax, -1048(%rbp)	# tmp121, x
.L349:
	.loc 1 1217 0 is_stmt 0 discriminator 1
	movl	-1048(%rbp), %eax	# x, tmp122
	cmpl	-1036(%rbp), %eax	# block_size_x, tmp122
	jl	.L354	#,
	.loc 1 1216 0 is_stmt 1
	movl	-1028(%rbp), %eax	# block_size, tmp123
	addl	%eax, -1044(%rbp)	# tmp123, y
.L348:
	.loc 1 1216 0 is_stmt 0 discriminator 1
	movl	-1044(%rbp), %eax	# y, tmp124
	cmpl	-1032(%rbp), %eax	# block_size_y, tmp124
	jl	.L355	#,
	.loc 1 1222 0 is_stmt 1
	cmpl	$0, -1084(%rbp)	#, use_hadamard
	je	.L356	#,
	.loc 1 1224 0
	cmpl	$7, -1088(%rbp)	#, blocktype
	ja	.L357	#,
	movl	-1088(%rbp), %eax	# blocktype, tmp125
	movq	.L359(,%rax,8), %rax	#, tmp126
	jmp	*%rax	# tmp126
	.section	.rodata
	.align 8
	.align 4
.L359:
	.quad	.L357
	.quad	.L358
	.quad	.L360
	.quad	.L360
	.quad	.L361
	.quad	.L362
	.quad	.L362
	.quad	.L363
	.text
.L358:
	.loc 1 1228 0
	movq	input(%rip), %rax	# input, input.377
	movl	24(%rax), %edx	# input.377_41->hadamard, D.21188
	leaq	-1024(%rbp), %rax	#, tmp127
	movl	%edx, %esi	# D.21188,
	movq	%rax, %rdi	# tmp127,
	call	SATD8X8	#
	movl	%eax, -1040(%rbp)	# tmp128, sad
	.loc 1 1229 0
	movq	input(%rip), %rax	# input, input.378
	movl	24(%rax), %eax	# input.378_44->hadamard, D.21188
	leaq	-1024(%rbp), %rdx	#, tmp129
	addq	$256, %rdx	#, tmp130
	movl	%eax, %esi	# D.21188,
	movq	%rdx, %rdi	# tmp130,
	call	SATD8X8	#
	addl	%eax, -1040(%rbp)	# D.21188, sad
	.loc 1 1230 0
	movq	input(%rip), %rax	# input, input.379
	movl	24(%rax), %eax	# input.379_48->hadamard, D.21188
	leaq	-1024(%rbp), %rdx	#, tmp131
	addq	$512, %rdx	#, tmp132
	movl	%eax, %esi	# D.21188,
	movq	%rdx, %rdi	# tmp132,
	call	SATD8X8	#
	addl	%eax, -1040(%rbp)	# D.21188, sad
	.loc 1 1231 0
	movq	input(%rip), %rax	# input, input.380
	movl	24(%rax), %eax	# input.380_52->hadamard, D.21188
	leaq	-1024(%rbp), %rdx	#, tmp133
	addq	$768, %rdx	#, tmp134
	movl	%eax, %esi	# D.21188,
	movq	%rdx, %rdi	# tmp134,
	call	SATD8X8	#
	addl	%eax, -1040(%rbp)	# D.21188, sad
	.loc 1 1232 0
	jmp	.L364	#
.L360:
	.loc 1 1235 0
	movq	input(%rip), %rax	# input, input.381
	movl	24(%rax), %edx	# input.381_56->hadamard, D.21188
	leaq	-1024(%rbp), %rax	#, tmp135
	movl	%edx, %esi	# D.21188,
	movq	%rax, %rdi	# tmp135,
	call	SATD8X8	#
	movl	%eax, -1040(%rbp)	# tmp136, sad
	.loc 1 1236 0
	movq	input(%rip), %rax	# input, input.382
	movl	24(%rax), %eax	# input.382_59->hadamard, D.21188
	leaq	-1024(%rbp), %rdx	#, tmp137
	addq	$256, %rdx	#, tmp138
	movl	%eax, %esi	# D.21188,
	movq	%rdx, %rdi	# tmp138,
	call	SATD8X8	#
	addl	%eax, -1040(%rbp)	# D.21188, sad
	.loc 1 1237 0
	jmp	.L364	#
.L361:
	.loc 1 1239 0
	movq	input(%rip), %rax	# input, input.383
	movl	24(%rax), %edx	# input.383_63->hadamard, D.21188
	leaq	-1024(%rbp), %rax	#, tmp139
	movl	%edx, %esi	# D.21188,
	movq	%rax, %rdi	# tmp139,
	call	SATD8X8	#
	movl	%eax, -1040(%rbp)	# tmp140, sad
	.loc 1 1240 0
	jmp	.L364	#
.L362:
	.loc 1 1243 0
	movq	input(%rip), %rax	# input, input.384
	movl	24(%rax), %edx	# input.384_66->hadamard, D.21188
	leaq	-1024(%rbp), %rax	#, tmp141
	movl	%edx, %esi	# D.21188,
	movq	%rax, %rdi	# tmp141,
	call	SATD	#
	movl	%eax, -1040(%rbp)	# tmp142, sad
	.loc 1 1244 0
	movq	input(%rip), %rax	# input, input.385
	movl	24(%rax), %eax	# input.385_69->hadamard, D.21188
	leaq	-1024(%rbp), %rdx	#, tmp143
	addq	$64, %rdx	#, tmp144
	movl	%eax, %esi	# D.21188,
	movq	%rdx, %rdi	# tmp144,
	call	SATD	#
	addl	%eax, -1040(%rbp)	# D.21188, sad
	.loc 1 1245 0
	jmp	.L364	#
.L363:
	.loc 1 1247 0
	movq	input(%rip), %rax	# input, input.386
	movl	24(%rax), %edx	# input.386_73->hadamard, D.21188
	leaq	-1024(%rbp), %rax	#, tmp145
	movl	%edx, %esi	# D.21188,
	movq	%rax, %rdi	# tmp145,
	call	SATD	#
	movl	%eax, -1040(%rbp)	# tmp146, sad
	.loc 1 1248 0
	jmp	.L364	#
.L357:
	.loc 1 1249 0
	movl	$-1, -1040(%rbp)	#, sad
	.loc 1 1250 0
	nop
.L364:
	jmp	.L365	#
.L356:
	.loc 1 1255 0
	movl	$0, -1060(%rbp)	#, i
	jmp	.L366	#
.L367:
	.loc 1 1256 0 discriminator 2
	movq	byte_abs(%rip), %rdx	# byte_abs, byte_abs.387
	movl	-1060(%rbp), %eax	# i, tmp148
	cltq
	movl	-1024(%rbp,%rax,4), %eax	# diff, D.21188
	cltq
	salq	$2, %rax	#, D.21189
	addq	%rdx, %rax	# byte_abs.387, D.21191
	movl	(%rax), %eax	# *_83, D.21188
	addl	%eax, -1040(%rbp)	# D.21188, sad
	.loc 1 1255 0 discriminator 2
	addl	$1, -1060(%rbp)	#, i
.L366:
	.loc 1 1255 0 is_stmt 0 discriminator 1
	movl	-1032(%rbp), %eax	# block_size_y, tmp149
	imull	-1036(%rbp), %eax	# block_size_x, D.21188
	cmpl	-1060(%rbp), %eax	# i, D.21188
	jg	.L367	#,
.L365:
	.loc 1 1259 0 is_stmt 1
	movl	-1040(%rbp), %eax	# sad, D.21188
	.loc 1 1260 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE14:
	.size	find_SATD, .-find_SATD
	.globl	SubPelBlockMotionSearch
	.type	SubPelBlockMotionSearch, @function
SubPelBlockMotionSearch:
.LFB15:
	.loc 1 1284 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$1296, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -1272(%rbp)	# orig_pic, orig_pic
	movl	%esi, %eax	# ref, tmp715
	movl	%edx, -1280(%rbp)	# list, list
	movl	%ecx, -1284(%rbp)	# pic_pix_x, pic_pix_x
	movl	%r8d, -1288(%rbp)	# pic_pix_y, pic_pix_y
	movl	%r9d, -1292(%rbp)	# blocktype, blocktype
	movl	16(%rbp), %ecx	# pred_mv_x, tmp716
	movl	24(%rbp), %edx	# pred_mv_y, tmp717
	movsd	%xmm0, -1312(%rbp)	# lambda, lambda
	movw	%ax, -1276(%rbp)	# tmp715, ref
	movw	%cx, -1296(%rbp)	# tmp716, pred_mv_x
	movw	%dx, -1300(%rbp)	# tmp717, pred_mv_y
	.loc 1 1294 0
	movsd	-1312(%rbp), %xmm1	# lambda, tmp718
	movsd	.LC13(%rip), %xmm0	#, tmp719
	mulsd	%xmm1, %xmm0	# tmp718, D.21192
	movsd	.LC14(%rip), %xmm1	#, tmp720
	addsd	%xmm1, %xmm0	# tmp720, D.21192
	cvttsd2si	%xmm0, %eax	# D.21192, tmp721
	movl	%eax, -1224(%rbp)	# tmp721, lambda_factor
	.loc 1 1295 0
	movl	$0, -1220(%rbp)	#, mv_shift
	.loc 1 1296 0
	cmpl	$1, -1292(%rbp)	#, blocktype
	jne	.L370	#,
	.loc 1 1296 0 is_stmt 0 discriminator 1
	movq	32(%rbp), %rax	# mv_x, tmp722
	movzwl	(%rax), %eax	# *mv_x_53(D), D.21193
	testw	%ax, %ax	# D.21193
	jne	.L370	#,
	movq	40(%rbp), %rax	# mv_y, tmp723
	movzwl	(%rax), %eax	# *mv_y_55(D), D.21193
	testw	%ax, %ax	# D.21193
	jne	.L370	#,
	movq	input(%rip), %rax	# input, input.389
	movl	24(%rax), %eax	# input.389_57->hadamard, D.21194
	testl	%eax, %eax	# D.21194
	je	.L370	#,
	movq	input(%rip), %rax	# input, input.390
	movl	2464(%rax), %eax	# input.390_59->rdopt, D.21194
	testl	%eax, %eax	# D.21194
	jne	.L370	#,
	movq	img(%rip), %rax	# img, img.391
	movl	24(%rax), %eax	# img.391_61->type, D.21194
	cmpl	$1, %eax	#, D.21194
	je	.L370	#,
	cmpw	$0, -1276(%rbp)	#, ref
	jne	.L370	#,
	.loc 1 1296 0 discriminator 3
	movl	$1, %eax	#, iftmp.388
	jmp	.L371	#
.L370:
	.loc 1 1296 0 discriminator 2
	movl	$0, %eax	#, iftmp.388
.L371:
	.loc 1 1296 0 discriminator 4
	movl	%eax, -1216(%rbp)	# iftmp.388, check_position0
	.loc 1 1297 0 is_stmt 1 discriminator 4
	movq	input(%rip), %rax	# input, input.392
	movl	-1292(%rbp), %edx	# blocktype, tmp725
	movslq	%edx, %rdx	# tmp725, tmp724
	addq	$10, %rdx	#, tmp726
	movl	(%rax,%rdx,8), %eax	# input.392_67->blc_size, tmp727
	movl	%eax, -1212(%rbp)	# tmp727, blocksize_x
	.loc 1 1298 0 discriminator 4
	movq	input(%rip), %rax	# input, input.393
	movl	-1292(%rbp), %edx	# blocktype, tmp729
	movslq	%edx, %rdx	# tmp729, tmp728
	movl	84(%rax,%rdx,8), %eax	# input.393_69->blc_size, tmp730
	movl	%eax, -1208(%rbp)	# tmp730, blocksize_y
	.loc 1 1299 0 discriminator 4
	movl	-1284(%rbp), %eax	# pic_pix_x, tmp734
	sall	$2, %eax	#, tmp733
	movl	%eax, -1204(%rbp)	# tmp733, pic4_pix_x
	.loc 1 1300 0 discriminator 4
	movl	-1288(%rbp), %eax	# pic_pix_y, tmp738
	sall	$2, %eax	#, tmp737
	movl	%eax, -1200(%rbp)	# tmp737, pic4_pix_y
	.loc 1 1301 0 discriminator 4
	movq	input(%rip), %rax	# input, input.395
	movl	24(%rax), %eax	# input.395_75->hadamard, D.21194
	testl	%eax, %eax	# D.21194
	je	.L372	#,
	.loc 1 1301 0 is_stmt 0 discriminator 2
	movq	input(%rip), %rax	# input, input.396
	movl	28(%rax), %eax	# input.396_77->hadamardqpel, D.21194
	testl	%eax, %eax	# D.21194
	je	.L373	#,
.L372:
	.loc 1 1301 0 discriminator 1
	movl	$1, %eax	#, iftmp.394
	jmp	.L374	#
.L373:
	.loc 1 1301 0 discriminator 3
	movl	$0, %eax	#, iftmp.394
.L374:
	.loc 1 1301 0 discriminator 4
	movl	%eax, -1196(%rbp)	# iftmp.394, min_pos2
	.loc 1 1302 0 is_stmt 1 discriminator 4
	movq	input(%rip), %rax	# input, input.398
	movl	24(%rax), %eax	# input.398_82->hadamard, D.21194
	testl	%eax, %eax	# D.21194
	je	.L375	#,
	.loc 1 1302 0 is_stmt 0 discriminator 1
	movl	$1, %eax	#, tmp739
	cmpl	$0, 48(%rbp)	#, search_pos2
	cmovg	48(%rbp), %eax	# search_pos2,, iftmp.397
	jmp	.L376	#
.L375:
	.loc 1 1302 0 discriminator 2
	movl	48(%rbp), %eax	# search_pos2, iftmp.397
.L376:
	.loc 1 1302 0 discriminator 3
	movl	%eax, -1192(%rbp)	# iftmp.397, max_pos2
	.loc 1 1303 0 is_stmt 1 discriminator 3
	movq	img(%rip), %rax	# img, img.400
	movl	72400(%rax), %eax	# img.400_88->MbaffFrameFlag, D.21194
	testl	%eax, %eax	# D.21194
	je	.L377	#,
	.loc 1 1303 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.401
	movq	14168(%rax), %rdx	# img.401_90->mb_data, D.21195
	movq	img(%rip), %rax	# img, img.402
	movl	12(%rax), %eax	# img.402_92->current_mb_nr, D.21194
	cltq
	imulq	$632, %rax, %rax	#, D.21196, D.21196
	addq	%rdx, %rax	# D.21195, D.21195
	movl	532(%rax), %eax	# _96->mb_field, D.21194
	testl	%eax, %eax	# D.21194
	je	.L377	#,
	movq	img(%rip), %rax	# img, img.404
	movl	12(%rax), %eax	# img.404_98->current_mb_nr, D.21194
	andl	$1, %eax	#, D.21197
	testl	%eax, %eax	# D.21197
	je	.L378	#,
	movl	$4, %eax	#, iftmp.403
	jmp	.L379	#
.L378:
	.loc 1 1303 0 discriminator 2
	movl	$2, %eax	#, iftmp.403
.L379:
	.loc 1 1303 0 discriminator 3
	jmp	.L380	#
.L377:
	.loc 1 1303 0 discriminator 2
	movl	$0, %eax	#, iftmp.399
.L380:
	.loc 1 1303 0 discriminator 3
	movl	%eax, -1188(%rbp)	# iftmp.399, list_offset
	.loc 1 1305 0 is_stmt 1 discriminator 3
	movq	active_pps(%rip), %rax	# active_pps, active_pps.406
	movl	192(%rax), %eax	# active_pps.406_107->weighted_pred_flag, D.21198
	testl	%eax, %eax	# D.21198
	je	.L381	#,
	.loc 1 1305 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.407
	movl	24(%rax), %eax	# img.407_109->type, D.21194
	testl	%eax, %eax	# D.21194
	je	.L382	#,
	.loc 1 1305 0 discriminator 2
	movq	img(%rip), %rax	# img, img.408
	movl	24(%rax), %eax	# img.408_111->type, D.21194
	cmpl	$3, %eax	#, D.21194
	je	.L382	#,
.L381:
	.loc 1 1306 0 is_stmt 1 discriminator 2
	movq	active_pps(%rip), %rax	# active_pps, active_pps.409
	movl	196(%rax), %eax	# active_pps.409_113->weighted_bipred_idc, D.21199
	.loc 1 1305 0 discriminator 2
	testl	%eax, %eax	# D.21199
	je	.L383	#,
	.loc 1 1306 0
	movq	img(%rip), %rax	# img, img.410
	movl	24(%rax), %eax	# img.410_115->type, D.21194
	cmpl	$1, %eax	#, D.21194
	jne	.L383	#,
.L382:
	.loc 1 1305 0 discriminator 1
	movl	$1, %eax	#, iftmp.405
	jmp	.L384	#
.L383:
	.loc 1 1305 0 is_stmt 0 discriminator 3
	movl	$0, %eax	#, iftmp.405
.L384:
	.loc 1 1305 0 discriminator 4
	movl	%eax, -1184(%rbp)	# iftmp.405, apply_weights
	.loc 1 1310 0 is_stmt 1 discriminator 4
	movq	input(%rip), %rax	# input, input.412
	movl	28(%rax), %eax	# input.412_120->hadamardqpel, D.21194
	testl	%eax, %eax	# D.21194
	jne	.L385	#,
	.loc 1 1310 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.413
	movl	24(%rax), %eax	# input.413_122->hadamard, iftmp.411
	jmp	.L386	#
.L385:
	.loc 1 1310 0 discriminator 2
	movl	$0, %eax	#, iftmp.411
.L386:
	.loc 1 1310 0 discriminator 3
	movl	%eax, -1180(%rbp)	# iftmp.411, halfpelhadamard
	.loc 1 1311 0 is_stmt 1 discriminator 3
	movq	input(%rip), %rax	# input, input.414
	movl	28(%rax), %eax	# input.414_126->hadamardqpel, D.21194
	testl	%eax, %eax	# D.21194
	sete	%al	#, D.21200
	movzbl	%al, %eax	# D.21200, tmp740
	movl	%eax, -1176(%rbp)	# tmp740, qpelstart
	.loc 1 1313 0 discriminator 3
	movl	-1188(%rbp), %eax	# list_offset, tmp741
	movl	-1280(%rbp), %edx	# list, tmp742
	addl	%edx, %eax	# tmp742, D.21194
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21201
	movswq	-1276(%rbp), %rdx	# ref, D.21196
	salq	$3, %rdx	#, D.21196
	addq	%rdx, %rax	# D.21196, D.21201
	movq	(%rax), %rax	# *_135, tmp744
	movq	%rax, -1128(%rbp)	# tmp744, ref_picture
	.loc 1 1316 0 discriminator 3
	cmpl	$0, -1184(%rbp)	#, apply_weights
	je	.L387	#,
	.loc 1 1316 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.415
	movl	1292(%rax), %eax	# input.415_137->UseWeightedReferenceME, D.21194
	testl	%eax, %eax	# D.21194
	je	.L387	#,
	.loc 1 1318 0 is_stmt 1
	movl	-1188(%rbp), %eax	# list_offset, tmp745
	movl	-1280(%rbp), %edx	# list, tmp746
	addl	%edx, %eax	# tmp746, D.21194
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21201
	movswq	-1276(%rbp), %rdx	# ref, D.21196
	salq	$3, %rdx	#, D.21196
	addq	%rdx, %rax	# D.21196, D.21201
	movq	(%rax), %rax	# *_143, D.21202
	movq	6456(%rax), %rax	# _144->imgY_ups_w, tmp748
	movq	%rax, -1136(%rbp)	# tmp748, ref_pic
	jmp	.L388	#
.L387:
	.loc 1 1321 0
	movl	-1188(%rbp), %eax	# list_offset, tmp749
	movl	-1280(%rbp), %edx	# list, tmp750
	addl	%edx, %eax	# tmp750, D.21194
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21201
	movswq	-1276(%rbp), %rdx	# ref, D.21196
	salq	$3, %rdx	#, D.21196
	addq	%rdx, %rax	# D.21196, D.21201
	movq	(%rax), %rax	# *_150, D.21202
	movq	6448(%rax), %rax	# _151->imgY_ups, tmp752
	movq	%rax, -1136(%rbp)	# tmp752, ref_pic
.L388:
	.loc 1 1323 0
	movq	-1128(%rbp), %rax	# ref_picture, tmp753
	movl	6392(%rax), %eax	# ref_picture_136->size_x, tmp754
	movl	%eax, -1172(%rbp)	# tmp754, img_width
	.loc 1 1324 0
	movq	-1128(%rbp), %rax	# ref_picture, tmp755
	movl	6396(%rax), %eax	# ref_picture_136->size_y, tmp756
	movl	%eax, -1168(%rbp)	# tmp756, img_height
	.loc 1 1326 0
	movq	-1128(%rbp), %rax	# ref_picture, tmp757
	movl	6392(%rax), %eax	# ref_picture_136->size_x, D.21194
	subl	-1212(%rbp), %eax	# blocksize_x, D.21194
	addl	$1, %eax	#, D.21194
	sall	$2, %eax	#, tmp758
	movl	%eax, -1164(%rbp)	# tmp758, max_pos_x4
	.loc 1 1327 0
	movq	-1128(%rbp), %rax	# ref_picture, tmp759
	movl	6396(%rax), %eax	# ref_picture_136->size_y, D.21194
	subl	-1208(%rbp), %eax	# blocksize_y, D.21194
	addl	$1, %eax	#, D.21194
	sall	$2, %eax	#, tmp760
	movl	%eax, -1160(%rbp)	# tmp760, max_pos_y4
	.loc 1 1335 0
	movq	32(%rbp), %rax	# mv_x, tmp761
	movzwl	(%rax), %eax	# *mv_x_53(D), D.21193
	cwtl
	sall	$2, %eax	#, D.21194
	movl	%eax, %edx	# D.21194, D.21193
	movq	32(%rbp), %rax	# mv_x, tmp762
	movw	%dx, (%rax)	# D.21193, *mv_x_53(D)
	.loc 1 1336 0
	movq	40(%rbp), %rax	# mv_y, tmp763
	movzwl	(%rax), %eax	# *mv_y_55(D), D.21193
	cwtl
	sall	$2, %eax	#, D.21194
	movl	%eax, %edx	# D.21194, D.21193
	movq	40(%rbp), %rax	# mv_y, tmp764
	movw	%dx, (%rax)	# D.21193, *mv_y_55(D)
	.loc 1 1338 0
	movq	32(%rbp), %rax	# mv_x, tmp765
	movzwl	(%rax), %eax	# *mv_x_53(D), D.21193
	movswl	%ax, %edx	# D.21193, D.21194
	movl	-1204(%rbp), %eax	# pic4_pix_x, tmp766
	addl	%edx, %eax	# D.21194, D.21194
	cmpl	$1, %eax	#, D.21194
	jle	.L389	#,
	.loc 1 1338 0 is_stmt 0 discriminator 1
	movq	32(%rbp), %rax	# mv_x, tmp767
	movzwl	(%rax), %eax	# *mv_x_53(D), D.21193
	movswl	%ax, %edx	# D.21193, D.21194
	movl	-1204(%rbp), %eax	# pic4_pix_x, tmp768
	addl	%eax, %edx	# tmp768, D.21194
	movl	-1164(%rbp), %eax	# max_pos_x4, tmp769
	subl	$2, %eax	#, D.21194
	cmpl	%eax, %edx	# D.21194, D.21194
	jge	.L389	#,
	.loc 1 1339 0 is_stmt 1 discriminator 1
	movq	40(%rbp), %rax	# mv_y, tmp770
	movzwl	(%rax), %eax	# *mv_y_55(D), D.21193
	movswl	%ax, %edx	# D.21193, D.21194
	movl	-1200(%rbp), %eax	# pic4_pix_y, tmp771
	addl	%edx, %eax	# D.21194, D.21194
	.loc 1 1338 0 discriminator 1
	cmpl	$1, %eax	#, D.21194
	jle	.L389	#,
	.loc 1 1339 0
	movq	40(%rbp), %rax	# mv_y, tmp772
	movzwl	(%rax), %eax	# *mv_y_55(D), D.21193
	movswl	%ax, %edx	# D.21193, D.21194
	movl	-1200(%rbp), %eax	# pic4_pix_y, tmp773
	addl	%eax, %edx	# tmp773, D.21194
	movl	-1160(%rbp), %eax	# max_pos_y4, tmp774
	subl	$2, %eax	#, D.21194
	cmpl	%eax, %edx	# D.21194, D.21194
	jge	.L389	#,
	.loc 1 1341 0
	movq	$FastPelY_14, PelY_14(%rip)	#, PelY_14
	jmp	.L390	#
.L389:
	.loc 1 1345 0
	movq	$UMVPelY_14, PelY_14(%rip)	#, PelY_14
.L390:
	.loc 1 1348 0
	movl	$0, -1244(%rbp)	#, best_pos
	movl	-1196(%rbp), %eax	# min_pos2, tmp775
	movl	%eax, -1248(%rbp)	# tmp775, pos
	jmp	.L391	#
.L408:
	.loc 1 1350 0
	movq	32(%rbp), %rax	# mv_x, tmp776
	movzwl	(%rax), %eax	# *mv_x_53(D), D.21193
	cwtl
	movq	spiral_search_x(%rip), %rdx	# spiral_search_x, spiral_search_x.416
	movl	-1248(%rbp), %ecx	# pos, tmp777
	movslq	%ecx, %rcx	# tmp777, D.21196
	salq	$2, %rcx	#, D.21196
	addq	%rcx, %rdx	# D.21196, D.21203
	movl	(%rdx), %edx	# *_193, D.21194
	addl	%edx, %edx	# D.21194
	addl	%edx, %eax	# D.21194, tmp778
	movl	%eax, -1156(%rbp)	# tmp778, cand_mv_x
	.loc 1 1351 0
	movq	40(%rbp), %rax	# mv_y, tmp779
	movzwl	(%rax), %eax	# *mv_y_55(D), D.21193
	cwtl
	movq	spiral_search_y(%rip), %rdx	# spiral_search_y, spiral_search_y.417
	movl	-1248(%rbp), %ecx	# pos, tmp780
	movslq	%ecx, %rcx	# tmp780, D.21196
	salq	$2, %rcx	#, D.21196
	addq	%rcx, %rdx	# D.21196, D.21203
	movl	(%rdx), %edx	# *_202, D.21194
	addl	%edx, %edx	# D.21194
	addl	%edx, %eax	# D.21194, tmp781
	movl	%eax, -1152(%rbp)	# tmp781, cand_mv_y
	.loc 1 1354 0
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.418
	movl	-1220(%rbp), %eax	# mv_shift, tmp782
	movl	-1156(%rbp), %esi	# cand_mv_x, tmp783
	movl	%eax, %ecx	# tmp782, tmp1200
	sall	%cl, %esi	# tmp1200, D.21194
	movl	%esi, %ecx	# D.21194, D.21194
	movswl	-1296(%rbp), %eax	# pred_mv_x, D.21194
	subl	%eax, %ecx	# D.21194, D.21194
	movl	%ecx, %eax	# D.21194, D.21194
	cltq
	salq	$2, %rax	#, D.21196
	addq	%rdx, %rax	# mvbits.418, D.21203
	movl	(%rax), %edx	# *_213, D.21194
	movq	mvbits(%rip), %rsi	# mvbits, mvbits.419
	movl	-1220(%rbp), %eax	# mv_shift, tmp784
	movl	-1152(%rbp), %edi	# cand_mv_y, tmp785
	movl	%eax, %ecx	# tmp784, tmp1203
	sall	%cl, %edi	# tmp1203, D.21194
	movl	%edi, %ecx	# D.21194, D.21194
	movswl	-1300(%rbp), %eax	# pred_mv_y, D.21194
	subl	%eax, %ecx	# D.21194, D.21194
	movl	%ecx, %eax	# D.21194, D.21194
	cltq
	salq	$2, %rax	#, D.21196
	addq	%rsi, %rax	# mvbits.419, D.21203
	movl	(%rax), %eax	# *_222, D.21194
	addl	%edx, %eax	# D.21194, D.21194
	imull	-1224(%rbp), %eax	# lambda_factor, D.21194
	sarl	$16, %eax	#, tmp786
	movl	%eax, -1240(%rbp)	# tmp786, mcost
	.loc 1 1355 0
	cmpl	$0, -1216(%rbp)	#, check_position0
	je	.L392	#,
	.loc 1 1355 0 is_stmt 0 discriminator 1
	cmpl	$0, -1248(%rbp)	#, pos
	jne	.L392	#,
	.loc 1 1357 0 is_stmt 1
	movl	-1224(%rbp), %eax	# lambda_factor, tmp787
	sall	$4, %eax	#, D.21194
	sarl	$16, %eax	#, D.21194
	subl	%eax, -1240(%rbp)	# D.21194, mcost
.L392:
	.loc 1 1360 0
	movl	-1240(%rbp), %eax	# mcost, tmp788
	cmpl	64(%rbp), %eax	# min_mcost, tmp788
	jl	.L393	#,
	.loc 1 1360 0 is_stmt 0 discriminator 1
	jmp	.L394	#
.L393:
	.loc 1 1363 0 is_stmt 1
	movl	$0, -1232(%rbp)	#, y0
	movl	$0, -1236(%rbp)	#, abort_search
	jmp	.L395	#
.L406:
	.loc 1 1365 0
	movl	-1232(%rbp), %eax	# y0, tmp789
	movl	-1288(%rbp), %edx	# pic_pix_y, tmp790
	addl	%edx, %eax	# tmp790, D.21194
	leal	0(,%rax,4), %edx	#, D.21194
	movl	-1152(%rbp), %eax	# cand_mv_y, tmp794
	addl	%edx, %eax	# D.21194, tmp793
	movl	%eax, -1148(%rbp)	# tmp793, ry0
	.loc 1 1367 0
	movl	$0, -1228(%rbp)	#, x0
	jmp	.L396	#
.L404:
	.loc 1 1369 0
	movl	-1228(%rbp), %eax	# x0, tmp795
	movl	-1284(%rbp), %edx	# pic_pix_x, tmp796
	addl	%edx, %eax	# tmp796, D.21194
	leal	0(,%rax,4), %edx	#, D.21194
	movl	-1156(%rbp), %eax	# cand_mv_x, tmp800
	addl	%edx, %eax	# D.21194, tmp799
	movl	%eax, -1144(%rbp)	# tmp799, rx0
	.loc 1 1370 0
	leaq	-1104(%rbp), %rax	#, tmp801
	movq	%rax, -1120(%rbp)	# tmp801, d
	.loc 1 1372 0
	movl	-1232(%rbp), %eax	# y0, tmp802
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21196
	movq	-1272(%rbp), %rax	# orig_pic, tmp803
	addq	%rdx, %rax	# D.21196, D.21204
	movq	(%rax), %rax	# *_243, tmp804
	movq	%rax, -1112(%rbp)	# tmp804, orig_line
	movl	-1148(%rbp), %eax	# ry0, tmp805
	movl	%eax, -1140(%rbp)	# tmp805, ry
	.loc 1 1373 0
	movq	-1120(%rbp), %rbx	# d, d.420
	leaq	4(%rbx), %rax	#, tmp806
	movq	%rax, -1120(%rbp)	# tmp806, d
	movl	-1228(%rbp), %eax	# x0, tmp807
	cltq
	leaq	(%rax,%rax), %rdx	#, D.21196
	movq	-1112(%rbp), %rax	# orig_line, tmp808
	addq	%rdx, %rax	# D.21196, D.21205
	movzwl	(%rax), %eax	# *_250, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.421
	movl	-1172(%rbp), %r8d	# img_width, tmp809
	movl	-1168(%rbp), %ecx	# img_height, tmp810
	movl	-1144(%rbp), %edx	# rx0, tmp811
	movl	-1140(%rbp), %esi	# ry, tmp812
	movq	-1136(%rbp), %rdi	# ref_pic, tmp813
	call	*%rax	# PelY_14.421
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.420_246
	.loc 1 1374 0
	movq	-1120(%rbp), %rbx	# d, d.422
	leaq	4(%rbx), %rax	#, tmp814
	movq	%rax, -1120(%rbp)	# tmp814, d
	movl	-1228(%rbp), %eax	# x0, tmp815
	cltq
	addq	$1, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp816
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_262, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.423
	movl	-1144(%rbp), %edx	# rx0, tmp817
	leal	4(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp818
	movl	-1168(%rbp), %edx	# img_height, tmp819
	movl	-1140(%rbp), %esi	# ry, tmp820
	movq	-1136(%rbp), %rdi	# ref_pic, tmp821
	movl	%ecx, %r8d	# tmp818,
	movl	%edx, %ecx	# tmp819,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.423
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.422_257
	.loc 1 1375 0
	movq	-1120(%rbp), %rbx	# d, d.424
	leaq	4(%rbx), %rax	#, tmp822
	movq	%rax, -1120(%rbp)	# tmp822, d
	movl	-1228(%rbp), %eax	# x0, tmp823
	cltq
	addq	$2, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp824
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_275, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.425
	movl	-1144(%rbp), %edx	# rx0, tmp825
	leal	8(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp826
	movl	-1168(%rbp), %edx	# img_height, tmp827
	movl	-1140(%rbp), %esi	# ry, tmp828
	movq	-1136(%rbp), %rdi	# ref_pic, tmp829
	movl	%ecx, %r8d	# tmp826,
	movl	%edx, %ecx	# tmp827,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.425
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.424_270
	.loc 1 1376 0
	movq	-1120(%rbp), %rbx	# d, d.426
	leaq	4(%rbx), %rax	#, tmp830
	movq	%rax, -1120(%rbp)	# tmp830, d
	movl	-1228(%rbp), %eax	# x0, tmp831
	cltq
	addq	$3, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp832
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_288, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.427
	movl	-1144(%rbp), %edx	# rx0, tmp833
	leal	12(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp834
	movl	-1168(%rbp), %edx	# img_height, tmp835
	movl	-1140(%rbp), %esi	# ry, tmp836
	movq	-1136(%rbp), %rdi	# ref_pic, tmp837
	movl	%ecx, %r8d	# tmp834,
	movl	%edx, %ecx	# tmp835,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.427
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.426_283
	.loc 1 1378 0
	movl	-1232(%rbp), %eax	# y0, tmp838
	cltq
	addq	$1, %rax	#, D.21207
	leaq	0(,%rax,8), %rdx	#, D.21207
	movq	-1272(%rbp), %rax	# orig_pic, tmp839
	addq	%rdx, %rax	# D.21207, D.21204
	movq	(%rax), %rax	# *_299, tmp840
	movq	%rax, -1112(%rbp)	# tmp840, orig_line
	movl	-1148(%rbp), %eax	# ry0, tmp844
	addl	$4, %eax	#, tmp843
	movl	%eax, -1140(%rbp)	# tmp843, ry
	.loc 1 1379 0
	movq	-1120(%rbp), %rbx	# d, d.428
	leaq	4(%rbx), %rax	#, tmp845
	movq	%rax, -1120(%rbp)	# tmp845, d
	movl	-1228(%rbp), %eax	# x0, tmp846
	cltq
	leaq	(%rax,%rax), %rdx	#, D.21196
	movq	-1112(%rbp), %rax	# orig_line, tmp847
	addq	%rdx, %rax	# D.21196, D.21205
	movzwl	(%rax), %eax	# *_306, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.429
	movl	-1172(%rbp), %r8d	# img_width, tmp848
	movl	-1168(%rbp), %ecx	# img_height, tmp849
	movl	-1144(%rbp), %edx	# rx0, tmp850
	movl	-1140(%rbp), %esi	# ry, tmp851
	movq	-1136(%rbp), %rdi	# ref_pic, tmp852
	call	*%rax	# PelY_14.429
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.428_302
	.loc 1 1380 0
	movq	-1120(%rbp), %rbx	# d, d.430
	leaq	4(%rbx), %rax	#, tmp853
	movq	%rax, -1120(%rbp)	# tmp853, d
	movl	-1228(%rbp), %eax	# x0, tmp854
	cltq
	addq	$1, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp855
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_318, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.431
	movl	-1144(%rbp), %edx	# rx0, tmp856
	leal	4(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp857
	movl	-1168(%rbp), %edx	# img_height, tmp858
	movl	-1140(%rbp), %esi	# ry, tmp859
	movq	-1136(%rbp), %rdi	# ref_pic, tmp860
	movl	%ecx, %r8d	# tmp857,
	movl	%edx, %ecx	# tmp858,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.431
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.430_313
	.loc 1 1381 0
	movq	-1120(%rbp), %rbx	# d, d.432
	leaq	4(%rbx), %rax	#, tmp861
	movq	%rax, -1120(%rbp)	# tmp861, d
	movl	-1228(%rbp), %eax	# x0, tmp862
	cltq
	addq	$2, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp863
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_331, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.433
	movl	-1144(%rbp), %edx	# rx0, tmp864
	leal	8(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp865
	movl	-1168(%rbp), %edx	# img_height, tmp866
	movl	-1140(%rbp), %esi	# ry, tmp867
	movq	-1136(%rbp), %rdi	# ref_pic, tmp868
	movl	%ecx, %r8d	# tmp865,
	movl	%edx, %ecx	# tmp866,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.433
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.432_326
	.loc 1 1382 0
	movq	-1120(%rbp), %rbx	# d, d.434
	leaq	4(%rbx), %rax	#, tmp869
	movq	%rax, -1120(%rbp)	# tmp869, d
	movl	-1228(%rbp), %eax	# x0, tmp870
	cltq
	addq	$3, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp871
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_344, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.435
	movl	-1144(%rbp), %edx	# rx0, tmp872
	leal	12(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp873
	movl	-1168(%rbp), %edx	# img_height, tmp874
	movl	-1140(%rbp), %esi	# ry, tmp875
	movq	-1136(%rbp), %rdi	# ref_pic, tmp876
	movl	%ecx, %r8d	# tmp873,
	movl	%edx, %ecx	# tmp874,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.435
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.434_339
	.loc 1 1384 0
	movl	-1232(%rbp), %eax	# y0, tmp877
	cltq
	addq	$2, %rax	#, D.21207
	leaq	0(,%rax,8), %rdx	#, D.21207
	movq	-1272(%rbp), %rax	# orig_pic, tmp878
	addq	%rdx, %rax	# D.21207, D.21204
	movq	(%rax), %rax	# *_355, tmp879
	movq	%rax, -1112(%rbp)	# tmp879, orig_line
	movl	-1148(%rbp), %eax	# ry0, tmp883
	addl	$8, %eax	#, tmp882
	movl	%eax, -1140(%rbp)	# tmp882, ry
	.loc 1 1385 0
	movq	-1120(%rbp), %rbx	# d, d.436
	leaq	4(%rbx), %rax	#, tmp884
	movq	%rax, -1120(%rbp)	# tmp884, d
	movl	-1228(%rbp), %eax	# x0, tmp885
	cltq
	leaq	(%rax,%rax), %rdx	#, D.21196
	movq	-1112(%rbp), %rax	# orig_line, tmp886
	addq	%rdx, %rax	# D.21196, D.21205
	movzwl	(%rax), %eax	# *_362, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.437
	movl	-1172(%rbp), %r8d	# img_width, tmp887
	movl	-1168(%rbp), %ecx	# img_height, tmp888
	movl	-1144(%rbp), %edx	# rx0, tmp889
	movl	-1140(%rbp), %esi	# ry, tmp890
	movq	-1136(%rbp), %rdi	# ref_pic, tmp891
	call	*%rax	# PelY_14.437
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.436_358
	.loc 1 1386 0
	movq	-1120(%rbp), %rbx	# d, d.438
	leaq	4(%rbx), %rax	#, tmp892
	movq	%rax, -1120(%rbp)	# tmp892, d
	movl	-1228(%rbp), %eax	# x0, tmp893
	cltq
	addq	$1, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp894
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_374, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.439
	movl	-1144(%rbp), %edx	# rx0, tmp895
	leal	4(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp896
	movl	-1168(%rbp), %edx	# img_height, tmp897
	movl	-1140(%rbp), %esi	# ry, tmp898
	movq	-1136(%rbp), %rdi	# ref_pic, tmp899
	movl	%ecx, %r8d	# tmp896,
	movl	%edx, %ecx	# tmp897,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.439
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.438_369
	.loc 1 1387 0
	movq	-1120(%rbp), %rbx	# d, d.440
	leaq	4(%rbx), %rax	#, tmp900
	movq	%rax, -1120(%rbp)	# tmp900, d
	movl	-1228(%rbp), %eax	# x0, tmp901
	cltq
	addq	$2, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp902
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_387, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.441
	movl	-1144(%rbp), %edx	# rx0, tmp903
	leal	8(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp904
	movl	-1168(%rbp), %edx	# img_height, tmp905
	movl	-1140(%rbp), %esi	# ry, tmp906
	movq	-1136(%rbp), %rdi	# ref_pic, tmp907
	movl	%ecx, %r8d	# tmp904,
	movl	%edx, %ecx	# tmp905,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.441
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.440_382
	.loc 1 1388 0
	movq	-1120(%rbp), %rbx	# d, d.442
	leaq	4(%rbx), %rax	#, tmp908
	movq	%rax, -1120(%rbp)	# tmp908, d
	movl	-1228(%rbp), %eax	# x0, tmp909
	cltq
	addq	$3, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp910
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_400, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.443
	movl	-1144(%rbp), %edx	# rx0, tmp911
	leal	12(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp912
	movl	-1168(%rbp), %edx	# img_height, tmp913
	movl	-1140(%rbp), %esi	# ry, tmp914
	movq	-1136(%rbp), %rdi	# ref_pic, tmp915
	movl	%ecx, %r8d	# tmp912,
	movl	%edx, %ecx	# tmp913,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.443
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.442_395
	.loc 1 1390 0
	movl	-1232(%rbp), %eax	# y0, tmp916
	cltq
	addq	$3, %rax	#, D.21207
	leaq	0(,%rax,8), %rdx	#, D.21207
	movq	-1272(%rbp), %rax	# orig_pic, tmp917
	addq	%rdx, %rax	# D.21207, D.21204
	movq	(%rax), %rax	# *_411, tmp918
	movq	%rax, -1112(%rbp)	# tmp918, orig_line
	movl	-1148(%rbp), %eax	# ry0, tmp922
	addl	$12, %eax	#, tmp921
	movl	%eax, -1140(%rbp)	# tmp921, ry
	.loc 1 1391 0
	movq	-1120(%rbp), %rbx	# d, d.444
	leaq	4(%rbx), %rax	#, tmp923
	movq	%rax, -1120(%rbp)	# tmp923, d
	movl	-1228(%rbp), %eax	# x0, tmp924
	cltq
	leaq	(%rax,%rax), %rdx	#, D.21196
	movq	-1112(%rbp), %rax	# orig_line, tmp925
	addq	%rdx, %rax	# D.21196, D.21205
	movzwl	(%rax), %eax	# *_418, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.445
	movl	-1172(%rbp), %r8d	# img_width, tmp926
	movl	-1168(%rbp), %ecx	# img_height, tmp927
	movl	-1144(%rbp), %edx	# rx0, tmp928
	movl	-1140(%rbp), %esi	# ry, tmp929
	movq	-1136(%rbp), %rdi	# ref_pic, tmp930
	call	*%rax	# PelY_14.445
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.444_414
	.loc 1 1392 0
	movq	-1120(%rbp), %rbx	# d, d.446
	leaq	4(%rbx), %rax	#, tmp931
	movq	%rax, -1120(%rbp)	# tmp931, d
	movl	-1228(%rbp), %eax	# x0, tmp932
	cltq
	addq	$1, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp933
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_430, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.447
	movl	-1144(%rbp), %edx	# rx0, tmp934
	leal	4(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp935
	movl	-1168(%rbp), %edx	# img_height, tmp936
	movl	-1140(%rbp), %esi	# ry, tmp937
	movq	-1136(%rbp), %rdi	# ref_pic, tmp938
	movl	%ecx, %r8d	# tmp935,
	movl	%edx, %ecx	# tmp936,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.447
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.446_425
	.loc 1 1393 0
	movq	-1120(%rbp), %rbx	# d, d.448
	leaq	4(%rbx), %rax	#, tmp939
	movq	%rax, -1120(%rbp)	# tmp939, d
	movl	-1228(%rbp), %eax	# x0, tmp940
	cltq
	addq	$2, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp941
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_443, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.449
	movl	-1144(%rbp), %edx	# rx0, tmp942
	leal	8(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp943
	movl	-1168(%rbp), %edx	# img_height, tmp944
	movl	-1140(%rbp), %esi	# ry, tmp945
	movq	-1136(%rbp), %rdi	# ref_pic, tmp946
	movl	%ecx, %r8d	# tmp943,
	movl	%edx, %ecx	# tmp944,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.449
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.448_438
	.loc 1 1394 0
	movl	-1228(%rbp), %eax	# x0, tmp947
	cltq
	addq	$3, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp948
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_454, D.21206
	movzwl	%ax, %ebx	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.450
	movl	-1144(%rbp), %edx	# rx0, tmp949
	leal	12(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp950
	movl	-1168(%rbp), %edx	# img_height, tmp951
	movl	-1140(%rbp), %esi	# ry, tmp952
	movq	-1136(%rbp), %rdi	# ref_pic, tmp953
	movl	%ecx, %r8d	# tmp950,
	movl	%edx, %ecx	# tmp951,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.450
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %ebx	# D.21194, D.21194
	movl	%ebx, %edx	# D.21194, D.21194
	movq	-1120(%rbp), %rax	# d, tmp954
	movl	%edx, (%rax)	# D.21194, *d_439
	.loc 1 1396 0
	movq	input(%rip), %rax	# input, input.451
	movl	3220(%rax), %eax	# input.451_462->AllowTransform8x8, D.21194
	testl	%eax, %eax	# D.21194
	jne	.L397	#,
	.loc 1 1398 0
	movl	-1180(%rbp), %edx	# halfpelhadamard, tmp955
	leaq	-1104(%rbp), %rax	#, tmp956
	movl	%edx, %esi	# tmp955,
	movq	%rax, %rdi	# tmp956,
	call	SATD	#
	addl	%eax, -1240(%rbp)	# D.21194, mcost
	movl	-1240(%rbp), %eax	# mcost, tmp957
	cmpl	64(%rbp), %eax	# min_mcost, tmp957
	jle	.L398	#,
	.loc 1 1400 0
	movl	$1, -1236(%rbp)	#, abort_search
	.loc 1 1401 0
	jmp	.L399	#
.L397:
	.loc 1 1406 0
	movl	$0, -1256(%rbp)	#, j
	movl	$0, -1252(%rbp)	#, k
	jmp	.L400	#
.L403:
	.loc 1 1407 0
	movl	$0, -1260(%rbp)	#, i
	jmp	.L401	#
.L402:
	.loc 1 1408 0 discriminator 2
	movl	-1256(%rbp), %eax	# j, tmp958
	movl	-1232(%rbp), %edx	# y0, tmp959
	leal	(%rdx,%rax), %ecx	#, D.21194
	movl	-1260(%rbp), %eax	# i, tmp960
	movl	-1228(%rbp), %edx	# x0, tmp961
	addl	%eax, %edx	# tmp960, D.21194
	movl	-1252(%rbp), %eax	# k, tmp963
	cltq
	movl	-1104(%rbp,%rax,4), %eax	# diff, D.21194
	movslq	%edx, %rdx	# D.21194, tmp964
	movslq	%ecx, %rcx	# D.21194, tmp965
	salq	$4, %rcx	#, tmp966
	addq	%rcx, %rdx	# tmp966, tmp967
	movl	%eax, -1040(%rbp,%rdx,4)	# D.21194, curr_diff
	.loc 1 1407 0 discriminator 2
	addl	$1, -1260(%rbp)	#, i
	addl	$1, -1252(%rbp)	#, k
.L401:
	.loc 1 1407 0 is_stmt 0 discriminator 1
	cmpl	$3, -1260(%rbp)	#, i
	jle	.L402	#,
	.loc 1 1406 0 is_stmt 1
	addl	$1, -1256(%rbp)	#, j
.L400:
	.loc 1 1406 0 is_stmt 0 discriminator 1
	cmpl	$3, -1256(%rbp)	#, j
	jle	.L403	#,
.L398:
	.loc 1 1367 0 is_stmt 1
	addl	$4, -1228(%rbp)	#, x0
.L396:
	.loc 1 1367 0 is_stmt 0 discriminator 1
	movl	-1228(%rbp), %eax	# x0, tmp968
	cmpl	-1212(%rbp), %eax	# blocksize_x, tmp968
	jl	.L404	#,
.L399:
	.loc 1 1363 0 is_stmt 1
	addl	$4, -1232(%rbp)	#, y0
.L395:
	.loc 1 1363 0 is_stmt 0 discriminator 1
	movl	-1232(%rbp), %eax	# y0, tmp969
	cmpl	-1208(%rbp), %eax	# blocksize_y, tmp969
	jge	.L405	#,
	.loc 1 1363 0 discriminator 2
	cmpl	$0, -1236(%rbp)	#, abort_search
	je	.L406	#,
.L405:
	.loc 1 1413 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.452
	movl	3220(%rax), %eax	# input.452_478->AllowTransform8x8, D.21194
	testl	%eax, %eax	# D.21194
	je	.L407	#,
	.loc 1 1414 0
	movl	-1292(%rbp), %edx	# blocktype, tmp970
	movl	-1180(%rbp), %ecx	# halfpelhadamard, tmp971
	leaq	-1040(%rbp), %rax	#, tmp972
	movl	%ecx, %esi	# tmp971,
	movq	%rax, %rdi	# tmp972,
	call	find_SATD	#
	addl	%eax, -1240(%rbp)	# D.21194, mcost
.L407:
	.loc 1 1416 0
	movl	-1240(%rbp), %eax	# mcost, tmp973
	cmpl	64(%rbp), %eax	# min_mcost, tmp973
	jge	.L394	#,
	.loc 1 1418 0
	movl	-1240(%rbp), %eax	# mcost, tmp974
	movl	%eax, 64(%rbp)	# tmp974, min_mcost
	.loc 1 1419 0
	movl	-1248(%rbp), %eax	# pos, tmp975
	movl	%eax, -1244(%rbp)	# tmp975, best_pos
.L394:
	.loc 1 1348 0
	addl	$1, -1248(%rbp)	#, pos
.L391:
	.loc 1 1348 0 is_stmt 0 discriminator 1
	movl	-1248(%rbp), %eax	# pos, tmp976
	cmpl	-1192(%rbp), %eax	# max_pos2, tmp976
	jl	.L408	#,
	.loc 1 1422 0 is_stmt 1
	cmpl	$0, -1244(%rbp)	#, best_pos
	je	.L409	#,
	.loc 1 1424 0
	movq	32(%rbp), %rax	# mv_x, tmp977
	movzwl	(%rax), %eax	# *mv_x_53(D), D.21193
	movq	spiral_search_x(%rip), %rdx	# spiral_search_x, spiral_search_x.453
	movl	-1244(%rbp), %ecx	# best_pos, tmp978
	movslq	%ecx, %rcx	# tmp978, D.21196
	salq	$2, %rcx	#, D.21196
	addq	%rcx, %rdx	# D.21196, D.21203
	movl	(%rdx), %edx	# *_490, D.21194
	addl	%edx, %edx	# D.21208
	addl	%edx, %eax	# D.21208, D.21208
	movl	%eax, %edx	# D.21208, D.21193
	movq	32(%rbp), %rax	# mv_x, tmp979
	movw	%dx, (%rax)	# D.21193, *mv_x_53(D)
	.loc 1 1425 0
	movq	40(%rbp), %rax	# mv_y, tmp980
	movzwl	(%rax), %eax	# *mv_y_55(D), D.21193
	movq	spiral_search_y(%rip), %rdx	# spiral_search_y, spiral_search_y.454
	movl	-1244(%rbp), %ecx	# best_pos, tmp981
	movslq	%ecx, %rcx	# tmp981, D.21196
	salq	$2, %rcx	#, D.21196
	addq	%rcx, %rdx	# D.21196, D.21203
	movl	(%rdx), %edx	# *_501, D.21194
	addl	%edx, %edx	# D.21208
	addl	%edx, %eax	# D.21208, D.21208
	movl	%eax, %edx	# D.21208, D.21193
	movq	40(%rbp), %rax	# mv_y, tmp982
	movw	%dx, (%rax)	# D.21193, *mv_y_55(D)
.L409:
	.loc 1 1429 0
	movq	input(%rip), %rax	# input, input.455
	movl	28(%rax), %eax	# input.455_507->hadamardqpel, D.21194
	testl	%eax, %eax	# D.21194
	je	.L410	#,
	.loc 1 1430 0
	movl	$2147483647, 64(%rbp)	#, min_mcost
.L410:
	.loc 1 1438 0
	movq	32(%rbp), %rax	# mv_x, tmp983
	movzwl	(%rax), %eax	# *mv_x_53(D), D.21193
	movswl	%ax, %edx	# D.21193, D.21194
	movl	-1204(%rbp), %eax	# pic4_pix_x, tmp984
	addl	%edx, %eax	# D.21194, D.21194
	cmpl	$1, %eax	#, D.21194
	jle	.L411	#,
	.loc 1 1438 0 is_stmt 0 discriminator 1
	movq	32(%rbp), %rax	# mv_x, tmp985
	movzwl	(%rax), %eax	# *mv_x_53(D), D.21193
	movswl	%ax, %edx	# D.21193, D.21194
	movl	-1204(%rbp), %eax	# pic4_pix_x, tmp986
	addl	%eax, %edx	# tmp986, D.21194
	movl	-1164(%rbp), %eax	# max_pos_x4, tmp987
	subl	$1, %eax	#, D.21194
	cmpl	%eax, %edx	# D.21194, D.21194
	jge	.L411	#,
	.loc 1 1439 0 is_stmt 1 discriminator 1
	movq	40(%rbp), %rax	# mv_y, tmp988
	movzwl	(%rax), %eax	# *mv_y_55(D), D.21193
	movswl	%ax, %edx	# D.21193, D.21194
	movl	-1200(%rbp), %eax	# pic4_pix_y, tmp989
	addl	%edx, %eax	# D.21194, D.21194
	.loc 1 1438 0 discriminator 1
	cmpl	$1, %eax	#, D.21194
	jle	.L411	#,
	.loc 1 1439 0
	movq	40(%rbp), %rax	# mv_y, tmp990
	movzwl	(%rax), %eax	# *mv_y_55(D), D.21193
	movswl	%ax, %edx	# D.21193, D.21194
	movl	-1200(%rbp), %eax	# pic4_pix_y, tmp991
	addl	%eax, %edx	# tmp991, D.21194
	movl	-1160(%rbp), %eax	# max_pos_y4, tmp992
	subl	$1, %eax	#, D.21194
	cmpl	%eax, %edx	# D.21194, D.21194
	jge	.L411	#,
	.loc 1 1441 0
	movq	$FastPelY_14, PelY_14(%rip)	#, PelY_14
	jmp	.L412	#
.L411:
	.loc 1 1445 0
	movq	$UMVPelY_14, PelY_14(%rip)	#, PelY_14
.L412:
	.loc 1 1448 0
	movl	$0, -1244(%rbp)	#, best_pos
	movl	-1176(%rbp), %eax	# qpelstart, tmp993
	movl	%eax, -1248(%rbp)	# tmp993, pos
	jmp	.L413	#
.L429:
	.loc 1 1450 0
	movq	32(%rbp), %rax	# mv_x, tmp994
	movzwl	(%rax), %eax	# *mv_x_53(D), D.21193
	movswl	%ax, %edx	# D.21193, D.21194
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.456
	movl	-1248(%rbp), %ecx	# pos, tmp995
	movslq	%ecx, %rcx	# tmp995, D.21196
	salq	$2, %rcx	#, D.21196
	addq	%rcx, %rax	# D.21196, D.21203
	movl	(%rax), %eax	# *_532, D.21194
	addl	%edx, %eax	# D.21194, tmp996
	movl	%eax, -1156(%rbp)	# tmp996, cand_mv_x
	.loc 1 1451 0
	movq	40(%rbp), %rax	# mv_y, tmp997
	movzwl	(%rax), %eax	# *mv_y_55(D), D.21193
	movswl	%ax, %edx	# D.21193, D.21194
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.457
	movl	-1248(%rbp), %ecx	# pos, tmp998
	movslq	%ecx, %rcx	# tmp998, D.21196
	salq	$2, %rcx	#, D.21196
	addq	%rcx, %rax	# D.21196, D.21203
	movl	(%rax), %eax	# *_540, D.21194
	addl	%edx, %eax	# D.21194, tmp999
	movl	%eax, -1152(%rbp)	# tmp999, cand_mv_y
	.loc 1 1454 0
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.458
	movl	-1220(%rbp), %eax	# mv_shift, tmp1000
	movl	-1156(%rbp), %esi	# cand_mv_x, tmp1001
	movl	%eax, %ecx	# tmp1000, tmp1222
	sall	%cl, %esi	# tmp1222, D.21194
	movl	%esi, %ecx	# D.21194, D.21194
	movswl	-1296(%rbp), %eax	# pred_mv_x, D.21194
	subl	%eax, %ecx	# D.21194, D.21194
	movl	%ecx, %eax	# D.21194, D.21194
	cltq
	salq	$2, %rax	#, D.21196
	addq	%rdx, %rax	# mvbits.458, D.21203
	movl	(%rax), %edx	# *_549, D.21194
	movq	mvbits(%rip), %rsi	# mvbits, mvbits.459
	movl	-1220(%rbp), %eax	# mv_shift, tmp1002
	movl	-1152(%rbp), %edi	# cand_mv_y, tmp1003
	movl	%eax, %ecx	# tmp1002, tmp1225
	sall	%cl, %edi	# tmp1225, D.21194
	movl	%edi, %ecx	# D.21194, D.21194
	movswl	-1300(%rbp), %eax	# pred_mv_y, D.21194
	subl	%eax, %ecx	# D.21194, D.21194
	movl	%ecx, %eax	# D.21194, D.21194
	cltq
	salq	$2, %rax	#, D.21196
	addq	%rsi, %rax	# mvbits.459, D.21203
	movl	(%rax), %eax	# *_557, D.21194
	addl	%edx, %eax	# D.21194, D.21194
	imull	-1224(%rbp), %eax	# lambda_factor, D.21194
	sarl	$16, %eax	#, tmp1004
	movl	%eax, -1240(%rbp)	# tmp1004, mcost
	.loc 1 1456 0
	movl	-1240(%rbp), %eax	# mcost, tmp1005
	cmpl	64(%rbp), %eax	# min_mcost, tmp1005
	jl	.L414	#,
	.loc 1 1456 0 is_stmt 0 discriminator 1
	jmp	.L415	#
.L414:
	.loc 1 1459 0 is_stmt 1
	movl	$0, -1232(%rbp)	#, y0
	movl	$0, -1236(%rbp)	#, abort_search
	jmp	.L416	#
.L427:
	.loc 1 1461 0
	movl	-1232(%rbp), %eax	# y0, tmp1006
	movl	-1288(%rbp), %edx	# pic_pix_y, tmp1007
	addl	%edx, %eax	# tmp1007, D.21194
	leal	0(,%rax,4), %edx	#, D.21194
	movl	-1152(%rbp), %eax	# cand_mv_y, tmp1011
	addl	%edx, %eax	# D.21194, tmp1010
	movl	%eax, -1148(%rbp)	# tmp1010, ry0
	.loc 1 1463 0
	movl	$0, -1228(%rbp)	#, x0
	jmp	.L417	#
.L425:
	.loc 1 1465 0
	movl	-1228(%rbp), %eax	# x0, tmp1012
	movl	-1284(%rbp), %edx	# pic_pix_x, tmp1013
	addl	%edx, %eax	# tmp1013, D.21194
	leal	0(,%rax,4), %edx	#, D.21194
	movl	-1156(%rbp), %eax	# cand_mv_x, tmp1017
	addl	%edx, %eax	# D.21194, tmp1016
	movl	%eax, -1144(%rbp)	# tmp1016, rx0
	.loc 1 1466 0
	leaq	-1104(%rbp), %rax	#, tmp1018
	movq	%rax, -1120(%rbp)	# tmp1018, d
	.loc 1 1468 0
	movl	-1232(%rbp), %eax	# y0, tmp1019
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21196
	movq	-1272(%rbp), %rax	# orig_pic, tmp1020
	addq	%rdx, %rax	# D.21196, D.21204
	movq	(%rax), %rax	# *_574, tmp1021
	movq	%rax, -1112(%rbp)	# tmp1021, orig_line
	movl	-1148(%rbp), %eax	# ry0, tmp1022
	movl	%eax, -1140(%rbp)	# tmp1022, ry
	.loc 1 1469 0
	movq	-1120(%rbp), %rbx	# d, d.460
	leaq	4(%rbx), %rax	#, tmp1023
	movq	%rax, -1120(%rbp)	# tmp1023, d
	movl	-1228(%rbp), %eax	# x0, tmp1024
	cltq
	leaq	(%rax,%rax), %rdx	#, D.21196
	movq	-1112(%rbp), %rax	# orig_line, tmp1025
	addq	%rdx, %rax	# D.21196, D.21205
	movzwl	(%rax), %eax	# *_581, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.461
	movl	-1172(%rbp), %r8d	# img_width, tmp1026
	movl	-1168(%rbp), %ecx	# img_height, tmp1027
	movl	-1144(%rbp), %edx	# rx0, tmp1028
	movl	-1140(%rbp), %esi	# ry, tmp1029
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1030
	call	*%rax	# PelY_14.461
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.460_577
	.loc 1 1470 0
	movq	-1120(%rbp), %rbx	# d, d.462
	leaq	4(%rbx), %rax	#, tmp1031
	movq	%rax, -1120(%rbp)	# tmp1031, d
	movl	-1228(%rbp), %eax	# x0, tmp1032
	cltq
	addq	$1, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1033
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_593, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.463
	movl	-1144(%rbp), %edx	# rx0, tmp1034
	leal	4(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1035
	movl	-1168(%rbp), %edx	# img_height, tmp1036
	movl	-1140(%rbp), %esi	# ry, tmp1037
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1038
	movl	%ecx, %r8d	# tmp1035,
	movl	%edx, %ecx	# tmp1036,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.463
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.462_588
	.loc 1 1471 0
	movq	-1120(%rbp), %rbx	# d, d.464
	leaq	4(%rbx), %rax	#, tmp1039
	movq	%rax, -1120(%rbp)	# tmp1039, d
	movl	-1228(%rbp), %eax	# x0, tmp1040
	cltq
	addq	$2, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1041
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_606, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.465
	movl	-1144(%rbp), %edx	# rx0, tmp1042
	leal	8(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1043
	movl	-1168(%rbp), %edx	# img_height, tmp1044
	movl	-1140(%rbp), %esi	# ry, tmp1045
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1046
	movl	%ecx, %r8d	# tmp1043,
	movl	%edx, %ecx	# tmp1044,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.465
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.464_601
	.loc 1 1472 0
	movq	-1120(%rbp), %rbx	# d, d.466
	leaq	4(%rbx), %rax	#, tmp1047
	movq	%rax, -1120(%rbp)	# tmp1047, d
	movl	-1228(%rbp), %eax	# x0, tmp1048
	cltq
	addq	$3, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1049
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_619, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.467
	movl	-1144(%rbp), %edx	# rx0, tmp1050
	leal	12(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1051
	movl	-1168(%rbp), %edx	# img_height, tmp1052
	movl	-1140(%rbp), %esi	# ry, tmp1053
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1054
	movl	%ecx, %r8d	# tmp1051,
	movl	%edx, %ecx	# tmp1052,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.467
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.466_614
	.loc 1 1474 0
	movl	-1232(%rbp), %eax	# y0, tmp1055
	cltq
	addq	$1, %rax	#, D.21207
	leaq	0(,%rax,8), %rdx	#, D.21207
	movq	-1272(%rbp), %rax	# orig_pic, tmp1056
	addq	%rdx, %rax	# D.21207, D.21204
	movq	(%rax), %rax	# *_630, tmp1057
	movq	%rax, -1112(%rbp)	# tmp1057, orig_line
	movl	-1148(%rbp), %eax	# ry0, tmp1061
	addl	$4, %eax	#, tmp1060
	movl	%eax, -1140(%rbp)	# tmp1060, ry
	.loc 1 1475 0
	movq	-1120(%rbp), %rbx	# d, d.468
	leaq	4(%rbx), %rax	#, tmp1062
	movq	%rax, -1120(%rbp)	# tmp1062, d
	movl	-1228(%rbp), %eax	# x0, tmp1063
	cltq
	leaq	(%rax,%rax), %rdx	#, D.21196
	movq	-1112(%rbp), %rax	# orig_line, tmp1064
	addq	%rdx, %rax	# D.21196, D.21205
	movzwl	(%rax), %eax	# *_637, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.469
	movl	-1172(%rbp), %r8d	# img_width, tmp1065
	movl	-1168(%rbp), %ecx	# img_height, tmp1066
	movl	-1144(%rbp), %edx	# rx0, tmp1067
	movl	-1140(%rbp), %esi	# ry, tmp1068
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1069
	call	*%rax	# PelY_14.469
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.468_633
	.loc 1 1476 0
	movq	-1120(%rbp), %rbx	# d, d.470
	leaq	4(%rbx), %rax	#, tmp1070
	movq	%rax, -1120(%rbp)	# tmp1070, d
	movl	-1228(%rbp), %eax	# x0, tmp1071
	cltq
	addq	$1, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1072
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_649, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.471
	movl	-1144(%rbp), %edx	# rx0, tmp1073
	leal	4(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1074
	movl	-1168(%rbp), %edx	# img_height, tmp1075
	movl	-1140(%rbp), %esi	# ry, tmp1076
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1077
	movl	%ecx, %r8d	# tmp1074,
	movl	%edx, %ecx	# tmp1075,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.471
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.470_644
	.loc 1 1477 0
	movq	-1120(%rbp), %rbx	# d, d.472
	leaq	4(%rbx), %rax	#, tmp1078
	movq	%rax, -1120(%rbp)	# tmp1078, d
	movl	-1228(%rbp), %eax	# x0, tmp1079
	cltq
	addq	$2, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1080
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_662, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.473
	movl	-1144(%rbp), %edx	# rx0, tmp1081
	leal	8(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1082
	movl	-1168(%rbp), %edx	# img_height, tmp1083
	movl	-1140(%rbp), %esi	# ry, tmp1084
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1085
	movl	%ecx, %r8d	# tmp1082,
	movl	%edx, %ecx	# tmp1083,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.473
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.472_657
	.loc 1 1478 0
	movq	-1120(%rbp), %rbx	# d, d.474
	leaq	4(%rbx), %rax	#, tmp1086
	movq	%rax, -1120(%rbp)	# tmp1086, d
	movl	-1228(%rbp), %eax	# x0, tmp1087
	cltq
	addq	$3, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1088
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_675, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.475
	movl	-1144(%rbp), %edx	# rx0, tmp1089
	leal	12(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1090
	movl	-1168(%rbp), %edx	# img_height, tmp1091
	movl	-1140(%rbp), %esi	# ry, tmp1092
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1093
	movl	%ecx, %r8d	# tmp1090,
	movl	%edx, %ecx	# tmp1091,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.475
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.474_670
	.loc 1 1480 0
	movl	-1232(%rbp), %eax	# y0, tmp1094
	cltq
	addq	$2, %rax	#, D.21207
	leaq	0(,%rax,8), %rdx	#, D.21207
	movq	-1272(%rbp), %rax	# orig_pic, tmp1095
	addq	%rdx, %rax	# D.21207, D.21204
	movq	(%rax), %rax	# *_686, tmp1096
	movq	%rax, -1112(%rbp)	# tmp1096, orig_line
	movl	-1148(%rbp), %eax	# ry0, tmp1100
	addl	$8, %eax	#, tmp1099
	movl	%eax, -1140(%rbp)	# tmp1099, ry
	.loc 1 1481 0
	movq	-1120(%rbp), %rbx	# d, d.476
	leaq	4(%rbx), %rax	#, tmp1101
	movq	%rax, -1120(%rbp)	# tmp1101, d
	movl	-1228(%rbp), %eax	# x0, tmp1102
	cltq
	leaq	(%rax,%rax), %rdx	#, D.21196
	movq	-1112(%rbp), %rax	# orig_line, tmp1103
	addq	%rdx, %rax	# D.21196, D.21205
	movzwl	(%rax), %eax	# *_693, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.477
	movl	-1172(%rbp), %r8d	# img_width, tmp1104
	movl	-1168(%rbp), %ecx	# img_height, tmp1105
	movl	-1144(%rbp), %edx	# rx0, tmp1106
	movl	-1140(%rbp), %esi	# ry, tmp1107
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1108
	call	*%rax	# PelY_14.477
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.476_689
	.loc 1 1482 0
	movq	-1120(%rbp), %rbx	# d, d.478
	leaq	4(%rbx), %rax	#, tmp1109
	movq	%rax, -1120(%rbp)	# tmp1109, d
	movl	-1228(%rbp), %eax	# x0, tmp1110
	cltq
	addq	$1, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1111
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_705, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.479
	movl	-1144(%rbp), %edx	# rx0, tmp1112
	leal	4(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1113
	movl	-1168(%rbp), %edx	# img_height, tmp1114
	movl	-1140(%rbp), %esi	# ry, tmp1115
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1116
	movl	%ecx, %r8d	# tmp1113,
	movl	%edx, %ecx	# tmp1114,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.479
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.478_700
	.loc 1 1483 0
	movq	-1120(%rbp), %rbx	# d, d.480
	leaq	4(%rbx), %rax	#, tmp1117
	movq	%rax, -1120(%rbp)	# tmp1117, d
	movl	-1228(%rbp), %eax	# x0, tmp1118
	cltq
	addq	$2, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1119
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_718, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.481
	movl	-1144(%rbp), %edx	# rx0, tmp1120
	leal	8(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1121
	movl	-1168(%rbp), %edx	# img_height, tmp1122
	movl	-1140(%rbp), %esi	# ry, tmp1123
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1124
	movl	%ecx, %r8d	# tmp1121,
	movl	%edx, %ecx	# tmp1122,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.481
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.480_713
	.loc 1 1484 0
	movq	-1120(%rbp), %rbx	# d, d.482
	leaq	4(%rbx), %rax	#, tmp1125
	movq	%rax, -1120(%rbp)	# tmp1125, d
	movl	-1228(%rbp), %eax	# x0, tmp1126
	cltq
	addq	$3, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1127
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_731, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.483
	movl	-1144(%rbp), %edx	# rx0, tmp1128
	leal	12(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1129
	movl	-1168(%rbp), %edx	# img_height, tmp1130
	movl	-1140(%rbp), %esi	# ry, tmp1131
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1132
	movl	%ecx, %r8d	# tmp1129,
	movl	%edx, %ecx	# tmp1130,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.483
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.482_726
	.loc 1 1486 0
	movl	-1232(%rbp), %eax	# y0, tmp1133
	cltq
	addq	$3, %rax	#, D.21207
	leaq	0(,%rax,8), %rdx	#, D.21207
	movq	-1272(%rbp), %rax	# orig_pic, tmp1134
	addq	%rdx, %rax	# D.21207, D.21204
	movq	(%rax), %rax	# *_742, tmp1135
	movq	%rax, -1112(%rbp)	# tmp1135, orig_line
	movl	-1148(%rbp), %eax	# ry0, tmp1139
	addl	$12, %eax	#, tmp1138
	movl	%eax, -1140(%rbp)	# tmp1138, ry
	.loc 1 1487 0
	movq	-1120(%rbp), %rbx	# d, d.484
	leaq	4(%rbx), %rax	#, tmp1140
	movq	%rax, -1120(%rbp)	# tmp1140, d
	movl	-1228(%rbp), %eax	# x0, tmp1141
	cltq
	leaq	(%rax,%rax), %rdx	#, D.21196
	movq	-1112(%rbp), %rax	# orig_line, tmp1142
	addq	%rdx, %rax	# D.21196, D.21205
	movzwl	(%rax), %eax	# *_749, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.485
	movl	-1172(%rbp), %r8d	# img_width, tmp1143
	movl	-1168(%rbp), %ecx	# img_height, tmp1144
	movl	-1144(%rbp), %edx	# rx0, tmp1145
	movl	-1140(%rbp), %esi	# ry, tmp1146
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1147
	call	*%rax	# PelY_14.485
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.484_745
	.loc 1 1488 0
	movq	-1120(%rbp), %rbx	# d, d.486
	leaq	4(%rbx), %rax	#, tmp1148
	movq	%rax, -1120(%rbp)	# tmp1148, d
	movl	-1228(%rbp), %eax	# x0, tmp1149
	cltq
	addq	$1, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1150
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_761, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.487
	movl	-1144(%rbp), %edx	# rx0, tmp1151
	leal	4(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1152
	movl	-1168(%rbp), %edx	# img_height, tmp1153
	movl	-1140(%rbp), %esi	# ry, tmp1154
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1155
	movl	%ecx, %r8d	# tmp1152,
	movl	%edx, %ecx	# tmp1153,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.487
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.486_756
	.loc 1 1489 0
	movq	-1120(%rbp), %rbx	# d, d.488
	leaq	4(%rbx), %rax	#, tmp1156
	movq	%rax, -1120(%rbp)	# tmp1156, d
	movl	-1228(%rbp), %eax	# x0, tmp1157
	cltq
	addq	$2, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1158
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_774, D.21206
	movzwl	%ax, %r12d	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.489
	movl	-1144(%rbp), %edx	# rx0, tmp1159
	leal	8(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1160
	movl	-1168(%rbp), %edx	# img_height, tmp1161
	movl	-1140(%rbp), %esi	# ry, tmp1162
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1163
	movl	%ecx, %r8d	# tmp1160,
	movl	%edx, %ecx	# tmp1161,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.489
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %r12d	# D.21194, D.21194
	movl	%r12d, %eax	# D.21194, D.21194
	movl	%eax, (%rbx)	# D.21194, *d.488_769
	.loc 1 1490 0
	movl	-1228(%rbp), %eax	# x0, tmp1164
	cltq
	addq	$3, %rax	#, D.21207
	leaq	(%rax,%rax), %rdx	#, D.21207
	movq	-1112(%rbp), %rax	# orig_line, tmp1165
	addq	%rdx, %rax	# D.21207, D.21205
	movzwl	(%rax), %eax	# *_785, D.21206
	movzwl	%ax, %ebx	# D.21206, D.21194
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.490
	movl	-1144(%rbp), %edx	# rx0, tmp1166
	leal	12(%rdx), %r9d	#, D.21194
	movl	-1172(%rbp), %ecx	# img_width, tmp1167
	movl	-1168(%rbp), %edx	# img_height, tmp1168
	movl	-1140(%rbp), %esi	# ry, tmp1169
	movq	-1136(%rbp), %rdi	# ref_pic, tmp1170
	movl	%ecx, %r8d	# tmp1167,
	movl	%edx, %ecx	# tmp1168,
	movl	%r9d, %edx	# D.21194,
	call	*%rax	# PelY_14.490
	movzwl	%ax, %eax	# D.21206, D.21194
	subl	%eax, %ebx	# D.21194, D.21194
	movl	%ebx, %edx	# D.21194, D.21194
	movq	-1120(%rbp), %rax	# d, tmp1171
	movl	%edx, (%rax)	# D.21194, *d_770
	.loc 1 1492 0
	movq	input(%rip), %rax	# input, input.491
	movl	3220(%rax), %eax	# input.491_793->AllowTransform8x8, D.21194
	testl	%eax, %eax	# D.21194
	jne	.L418	#,
	.loc 1 1494 0
	movq	input(%rip), %rax	# input, input.492
	movl	24(%rax), %edx	# input.492_795->hadamard, D.21194
	leaq	-1104(%rbp), %rax	#, tmp1172
	movl	%edx, %esi	# D.21194,
	movq	%rax, %rdi	# tmp1172,
	call	SATD	#
	addl	%eax, -1240(%rbp)	# D.21194, mcost
	movl	-1240(%rbp), %eax	# mcost, tmp1173
	cmpl	64(%rbp), %eax	# min_mcost, tmp1173
	jle	.L419	#,
	.loc 1 1496 0
	movl	$1, -1236(%rbp)	#, abort_search
	.loc 1 1497 0
	jmp	.L420	#
.L418:
	.loc 1 1502 0
	movl	$0, -1256(%rbp)	#, j
	movl	$0, -1252(%rbp)	#, k
	jmp	.L421	#
.L424:
	.loc 1 1503 0
	movl	$0, -1260(%rbp)	#, i
	jmp	.L422	#
.L423:
	.loc 1 1504 0 discriminator 2
	movl	-1256(%rbp), %eax	# j, tmp1174
	movl	-1232(%rbp), %edx	# y0, tmp1175
	leal	(%rdx,%rax), %ecx	#, D.21194
	movl	-1260(%rbp), %eax	# i, tmp1176
	movl	-1228(%rbp), %edx	# x0, tmp1177
	addl	%eax, %edx	# tmp1176, D.21194
	movl	-1252(%rbp), %eax	# k, tmp1179
	cltq
	movl	-1104(%rbp,%rax,4), %eax	# diff, D.21194
	movslq	%edx, %rdx	# D.21194, tmp1180
	movslq	%ecx, %rcx	# D.21194, tmp1181
	salq	$4, %rcx	#, tmp1182
	addq	%rcx, %rdx	# tmp1182, tmp1183
	movl	%eax, -1040(%rbp,%rdx,4)	# D.21194, curr_diff
	.loc 1 1503 0 discriminator 2
	addl	$1, -1260(%rbp)	#, i
	addl	$1, -1252(%rbp)	#, k
.L422:
	.loc 1 1503 0 is_stmt 0 discriminator 1
	cmpl	$3, -1260(%rbp)	#, i
	jle	.L423	#,
	.loc 1 1502 0 is_stmt 1
	addl	$1, -1256(%rbp)	#, j
.L421:
	.loc 1 1502 0 is_stmt 0 discriminator 1
	cmpl	$3, -1256(%rbp)	#, j
	jle	.L424	#,
.L419:
	.loc 1 1463 0 is_stmt 1
	addl	$4, -1228(%rbp)	#, x0
.L417:
	.loc 1 1463 0 is_stmt 0 discriminator 1
	movl	-1228(%rbp), %eax	# x0, tmp1184
	cmpl	-1212(%rbp), %eax	# blocksize_x, tmp1184
	jl	.L425	#,
.L420:
	.loc 1 1459 0 is_stmt 1
	addl	$4, -1232(%rbp)	#, y0
.L416:
	.loc 1 1459 0 is_stmt 0 discriminator 1
	movl	-1232(%rbp), %eax	# y0, tmp1185
	cmpl	-1208(%rbp), %eax	# blocksize_y, tmp1185
	jge	.L426	#,
	.loc 1 1459 0 discriminator 2
	cmpl	$0, -1236(%rbp)	#, abort_search
	je	.L427	#,
.L426:
	.loc 1 1509 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.493
	movl	3220(%rax), %eax	# input.493_811->AllowTransform8x8, D.21194
	testl	%eax, %eax	# D.21194
	je	.L428	#,
	.loc 1 1510 0
	movq	input(%rip), %rax	# input, input.494
	movl	24(%rax), %ecx	# input.494_813->hadamard, D.21194
	movl	-1292(%rbp), %edx	# blocktype, tmp1186
	leaq	-1040(%rbp), %rax	#, tmp1187
	movl	%ecx, %esi	# D.21194,
	movq	%rax, %rdi	# tmp1187,
	call	find_SATD	#
	addl	%eax, -1240(%rbp)	# D.21194, mcost
.L428:
	.loc 1 1512 0
	movl	-1240(%rbp), %eax	# mcost, tmp1188
	cmpl	64(%rbp), %eax	# min_mcost, tmp1188
	jge	.L415	#,
	.loc 1 1514 0
	movl	-1240(%rbp), %eax	# mcost, tmp1189
	movl	%eax, 64(%rbp)	# tmp1189, min_mcost
	.loc 1 1515 0
	movl	-1248(%rbp), %eax	# pos, tmp1190
	movl	%eax, -1244(%rbp)	# tmp1190, best_pos
.L415:
	.loc 1 1448 0
	addl	$1, -1248(%rbp)	#, pos
.L413:
	.loc 1 1448 0 is_stmt 0 discriminator 1
	movl	-1248(%rbp), %eax	# pos, tmp1191
	cmpl	56(%rbp), %eax	# search_pos4, tmp1191
	jl	.L429	#,
	.loc 1 1518 0 is_stmt 1
	cmpl	$0, -1244(%rbp)	#, best_pos
	je	.L430	#,
	.loc 1 1520 0
	movq	32(%rbp), %rax	# mv_x, tmp1192
	movzwl	(%rax), %eax	# *mv_x_53(D), D.21193
	movl	%eax, %edx	# D.21193, D.21208
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.495
	movl	-1244(%rbp), %ecx	# best_pos, tmp1193
	movslq	%ecx, %rcx	# tmp1193, D.21196
	salq	$2, %rcx	#, D.21196
	addq	%rcx, %rax	# D.21196, D.21203
	movl	(%rax), %eax	# *_825, D.21194
	addl	%edx, %eax	# D.21208, D.21208
	movl	%eax, %edx	# D.21208, D.21193
	movq	32(%rbp), %rax	# mv_x, tmp1194
	movw	%dx, (%rax)	# D.21193, *mv_x_53(D)
	.loc 1 1521 0
	movq	40(%rbp), %rax	# mv_y, tmp1195
	movzwl	(%rax), %eax	# *mv_y_55(D), D.21193
	movl	%eax, %edx	# D.21193, D.21208
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.496
	movl	-1244(%rbp), %ecx	# best_pos, tmp1196
	movslq	%ecx, %rcx	# tmp1196, D.21196
	salq	$2, %rcx	#, D.21196
	addq	%rcx, %rax	# D.21196, D.21203
	movl	(%rax), %eax	# *_835, D.21194
	addl	%edx, %eax	# D.21208, D.21208
	movl	%eax, %edx	# D.21208, D.21193
	movq	40(%rbp), %rax	# mv_y, tmp1197
	movw	%dx, (%rax)	# D.21193, *mv_y_55(D)
.L430:
	.loc 1 1525 0
	movl	64(%rbp), %eax	# min_mcost, D.21194
	.loc 1 1526 0
	addq	$1296, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE15:
	.size	SubPelBlockMotionSearch, .-SubPelBlockMotionSearch
	.globl	FullPelBlockMotionBiPred
	.type	FullPelBlockMotionBiPred, @function
FullPelBlockMotionBiPred:
.LFB16:
	.loc 1 1555 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$240, %rsp	#,
	movq	%rdi, -184(%rbp)	# orig_pic, orig_pic
	movl	%esi, %eax	# ref, tmp577
	movl	%edx, -192(%rbp)	# list, list
	movl	%ecx, -196(%rbp)	# pic_pix_x, pic_pix_x
	movl	%r8d, -200(%rbp)	# pic_pix_y, pic_pix_y
	movl	%r9d, -204(%rbp)	# blocktype, blocktype
	movl	24(%rbp), %edi	# pred_mv_x1, tmp578
	movl	32(%rbp), %esi	# pred_mv_y1, tmp579
	movl	40(%rbp), %ecx	# pred_mv_x2, tmp580
	movl	48(%rbp), %edx	# pred_mv_y2, tmp581
	movsd	%xmm0, -232(%rbp)	# lambda, lambda
	movw	%ax, -188(%rbp)	# tmp577, ref
	movw	%di, -208(%rbp)	# tmp578, pred_mv_x1
	movw	%si, -212(%rbp)	# tmp579, pred_mv_y1
	movw	%cx, -216(%rbp)	# tmp580, pred_mv_x2
	movw	%dx, -220(%rbp)	# tmp581, pred_mv_y2
	.loc 1 1562 0
	movq	img(%rip), %rax	# img, img.498
	movl	72400(%rax), %eax	# img.498_39->MbaffFrameFlag, D.21209
	testl	%eax, %eax	# D.21209
	je	.L433	#,
	.loc 1 1562 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.499
	movq	14168(%rax), %rdx	# img.499_41->mb_data, D.21210
	movq	img(%rip), %rax	# img, img.500
	movl	12(%rax), %eax	# img.500_43->current_mb_nr, D.21209
	cltq
	imulq	$632, %rax, %rax	#, D.21211, D.21211
	addq	%rdx, %rax	# D.21210, D.21210
	movl	532(%rax), %eax	# _47->mb_field, D.21209
	testl	%eax, %eax	# D.21209
	je	.L433	#,
	movq	img(%rip), %rax	# img, img.502
	movl	12(%rax), %eax	# img.502_49->current_mb_nr, D.21209
	andl	$1, %eax	#, D.21212
	testl	%eax, %eax	# D.21212
	je	.L434	#,
	movl	$4, %eax	#, iftmp.501
	jmp	.L435	#
.L434:
	.loc 1 1562 0 discriminator 2
	movl	$2, %eax	#, iftmp.501
.L435:
	.loc 1 1562 0 discriminator 3
	jmp	.L436	#
.L433:
	.loc 1 1562 0 discriminator 2
	movl	$0, %eax	#, iftmp.497
.L436:
	.loc 1 1562 0 discriminator 3
	movl	%eax, -116(%rbp)	# iftmp.497, list_offset
	.loc 1 1563 0 is_stmt 1 discriminator 3
	movl	-116(%rbp), %eax	# list_offset, tmp582
	movl	-192(%rbp), %edx	# list, tmp583
	addl	%edx, %eax	# tmp583, D.21209
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21213
	movswq	-188(%rbp), %rdx	# ref, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21213
	movq	(%rax), %rax	# *_64, D.21214
	movq	6432(%rax), %rax	# _65->imgY_11, tmp585
	movq	%rax, -16(%rbp)	# tmp585, ref1_pic
	.loc 1 1564 0 discriminator 3
	cmpl	$0, -192(%rbp)	#, list
	jne	.L437	#,
	.loc 1 1564 0 is_stmt 0 discriminator 1
	movl	-116(%rbp), %eax	# list_offset, tmp586
	addl	$1, %eax	#, iftmp.503
	jmp	.L438	#
.L437:
	.loc 1 1564 0 discriminator 2
	movl	-116(%rbp), %eax	# list_offset, iftmp.503
.L438:
	.loc 1 1564 0 discriminator 3
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21213
	movq	(%rax), %rax	# *_69, D.21214
	movq	6432(%rax), %rax	# _70->imgY_11, tmp588
	movq	%rax, -8(%rbp)	# tmp588, ref2_pic
	.loc 1 1565 0 is_stmt 1 discriminator 3
	movl	-116(%rbp), %eax	# list_offset, tmp589
	movl	-192(%rbp), %edx	# list, tmp590
	addl	%edx, %eax	# tmp590, D.21209
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21213
	movswq	-188(%rbp), %rdx	# ref, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21213
	movq	(%rax), %rax	# *_76, D.21214
	movl	6392(%rax), %eax	# _77->size_x, tmp592
	movl	%eax, -112(%rbp)	# tmp592, img_width
	.loc 1 1566 0 discriminator 3
	movl	-116(%rbp), %eax	# list_offset, tmp593
	movl	-192(%rbp), %edx	# list, tmp594
	addl	%edx, %eax	# tmp594, D.21209
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21213
	movswq	-188(%rbp), %rdx	# ref, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21213
	movq	(%rax), %rax	# *_83, D.21214
	movl	6396(%rax), %eax	# _84->size_y, tmp596
	movl	%eax, -108(%rbp)	# tmp596, img_height
	.loc 1 1568 0 discriminator 3
	movl	$0, -120(%rbp)	#, best_pos
	.loc 1 1569 0 discriminator 3
	movl	88(%rbp), %eax	# search_range, tmp597
	addl	%eax, %eax	# D.21209
	leal	1(%rax), %edx	#, D.21209
	movl	88(%rbp), %eax	# search_range, tmp598
	addl	%eax, %eax	# D.21209
	addl	$1, %eax	#, D.21209
	imull	%edx, %eax	# D.21209, tmp599
	movl	%eax, -104(%rbp)	# tmp599, max_pos
	.loc 1 1570 0 discriminator 3
	movsd	-232(%rbp), %xmm1	# lambda, tmp600
	movsd	.LC13(%rip), %xmm0	#, tmp601
	mulsd	%xmm1, %xmm0	# tmp600, D.21215
	movsd	.LC14(%rip), %xmm1	#, tmp602
	addsd	%xmm1, %xmm0	# tmp602, D.21215
	cvttsd2si	%xmm0, %eax	# D.21215, tmp603
	movl	%eax, -100(%rbp)	# tmp603, lambda_factor
	.loc 1 1571 0 discriminator 3
	movq	input(%rip), %rax	# input, input.504
	movl	-204(%rbp), %edx	# blocktype, tmp605
	movslq	%edx, %rdx	# tmp605, tmp604
	movl	84(%rax,%rdx,8), %eax	# input.504_97->blc_size, tmp606
	movl	%eax, -96(%rbp)	# tmp606, blocksize_y
	.loc 1 1572 0 discriminator 3
	movq	input(%rip), %rax	# input, input.505
	movl	-204(%rbp), %edx	# blocktype, tmp608
	movslq	%edx, %rdx	# tmp608, tmp607
	addq	$10, %rdx	#, tmp609
	movl	(%rax,%rdx,8), %eax	# input.505_100->blc_size, tmp610
	movl	%eax, -92(%rbp)	# tmp610, blocksize_x
	.loc 1 1573 0 discriminator 3
	movl	-92(%rbp), %eax	# blocksize_x, tmp614
	sarl	$2, %eax	#, tmp613
	movl	%eax, -88(%rbp)	# tmp613, blocksize_x4
	.loc 1 1574 0 discriminator 3
	movl	-196(%rbp), %eax	# pic_pix_x, tmp615
	leal	0(,%rax,4), %edx	#, D.21209
	movswl	-208(%rbp), %eax	# pred_mv_x1, D.21209
	addl	%edx, %eax	# D.21209, tmp616
	movl	%eax, -84(%rbp)	# tmp616, pred_x1
	.loc 1 1575 0 discriminator 3
	movl	-200(%rbp), %eax	# pic_pix_y, tmp617
	leal	0(,%rax,4), %edx	#, D.21209
	movswl	-212(%rbp), %eax	# pred_mv_y1, D.21209
	addl	%edx, %eax	# D.21209, tmp618
	movl	%eax, -80(%rbp)	# tmp618, pred_y1
	.loc 1 1576 0 discriminator 3
	movl	-196(%rbp), %eax	# pic_pix_x, tmp619
	leal	0(,%rax,4), %edx	#, D.21209
	movswl	-216(%rbp), %eax	# pred_mv_x2, D.21209
	addl	%edx, %eax	# D.21209, tmp620
	movl	%eax, -76(%rbp)	# tmp620, pred_x2
	.loc 1 1577 0 discriminator 3
	movl	-200(%rbp), %eax	# pic_pix_y, tmp621
	leal	0(,%rax,4), %edx	#, D.21209
	movswl	-220(%rbp), %eax	# pred_mv_y2, D.21209
	addl	%edx, %eax	# D.21209, tmp622
	movl	%eax, -72(%rbp)	# tmp622, pred_y2
	.loc 1 1578 0 discriminator 3
	movq	56(%rbp), %rax	# mv_x, tmp623
	movzwl	(%rax), %eax	# *mv_x_121(D), D.21216
	movl	%eax, %edx	# D.21216, D.21217
	movl	-196(%rbp), %eax	# pic_pix_x, tmp624
	addl	%edx, %eax	# D.21217, D.21217
	movw	%ax, -162(%rbp)	# D.21217, center_x
	.loc 1 1579 0 discriminator 3
	movq	64(%rbp), %rax	# mv_y, tmp625
	movzwl	(%rax), %eax	# *mv_y_127(D), D.21216
	movl	%eax, %edx	# D.21216, D.21217
	movl	-200(%rbp), %eax	# pic_pix_y, tmp626
	addl	%edx, %eax	# D.21217, D.21217
	movw	%ax, -160(%rbp)	# D.21217, center_y
	.loc 1 1580 0 discriminator 3
	movq	72(%rbp), %rax	# s_mv_x, tmp627
	movzwl	(%rax), %eax	# *s_mv_x_133(D), D.21216
	movl	%eax, %edx	# D.21216, D.21217
	movl	-196(%rbp), %eax	# pic_pix_x, tmp628
	addl	%edx, %eax	# D.21217, D.21217
	movw	%ax, -158(%rbp)	# D.21217, ref1_center_x
	.loc 1 1581 0 discriminator 3
	movq	80(%rbp), %rax	# s_mv_y, tmp629
	movzwl	(%rax), %eax	# *s_mv_y_139(D), D.21216
	movl	%eax, %edx	# D.21216, D.21217
	movl	-200(%rbp), %eax	# pic_pix_y, tmp630
	addl	%edx, %eax	# D.21217, D.21217
	movw	%ax, -156(%rbp)	# D.21217, ref1_center_y
	.loc 1 1585 0 discriminator 3
	movq	active_pps(%rip), %rax	# active_pps, active_pps.506
	movl	196(%rax), %eax	# active_pps.506_145->weighted_bipred_idc, D.21218
	testl	%eax, %eax	# D.21218
	setne	%al	#, D.21219
	movzbl	%al, %eax	# D.21219, tmp631
	movw	%ax, -154(%rbp)	# tmp631, apply_weights
	.loc 1 1586 0 discriminator 3
	cmpw	$0, -154(%rbp)	#, apply_weights
	je	.L439	#,
	.loc 1 1586 0 is_stmt 0 discriminator 1
	cmpl	$0, -192(%rbp)	#, list
	jne	.L440	#,
	.loc 1 1586 0 discriminator 3
	movq	wbp_weight(%rip), %rax	# wbp_weight, wbp_weight.509
	movl	-116(%rbp), %edx	# list_offset, tmp632
	movslq	%edx, %rdx	# tmp632, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21220
	movq	(%rax), %rax	# *_152, D.21221
	movswq	-188(%rbp), %rdx	# ref, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21221
	movq	(%rax), %rax	# *_156, D.21222
	movq	(%rax), %rax	# *_157, D.21223
	movl	(%rax), %eax	# *_158, D.21209
	jmp	.L442	#
.L440:
	.loc 1 1586 0 discriminator 4
	movq	wbp_weight(%rip), %rax	# wbp_weight, wbp_weight.510
	movl	-116(%rbp), %edx	# list_offset, tmp633
	movslq	%edx, %rdx	# tmp633, D.21224
	addq	$1, %rdx	#, D.21224
	salq	$3, %rdx	#, D.21224
	addq	%rdx, %rax	# D.21224, D.21220
	movq	(%rax), %rax	# *_165, D.21221
	movq	(%rax), %rax	# *_166, D.21222
	movswq	-188(%rbp), %rdx	# ref, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21222
	movq	(%rax), %rax	# *_170, D.21223
	movl	(%rax), %eax	# *_171, D.21209
	jmp	.L442	#
.L439:
	.loc 1 1586 0 discriminator 2
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.511
	movl	$1, %edx	#, tmp634
	movl	%eax, %ecx	# luma_log_weight_denom.511, tmp746
	sall	%cl, %edx	# tmp746, D.21209
	movl	%edx, %eax	# D.21209, D.21209
.L442:
	.loc 1 1586 0 discriminator 5
	movw	%ax, -152(%rbp)	# iftmp.507, weightSpic
	.loc 1 1587 0 is_stmt 1 discriminator 5
	cmpw	$0, -154(%rbp)	#, apply_weights
	je	.L443	#,
	.loc 1 1587 0 is_stmt 0 discriminator 1
	cmpl	$0, -192(%rbp)	#, list
	jne	.L444	#,
	.loc 1 1587 0 discriminator 3
	movq	wbp_weight(%rip), %rax	# wbp_weight, wbp_weight.514
	movl	-116(%rbp), %edx	# list_offset, tmp635
	movslq	%edx, %rdx	# tmp635, D.21224
	addq	$1, %rdx	#, D.21224
	salq	$3, %rdx	#, D.21224
	addq	%rdx, %rax	# D.21224, D.21220
	movq	(%rax), %rax	# *_183, D.21221
	movswq	-188(%rbp), %rdx	# ref, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21221
	movq	(%rax), %rax	# *_187, D.21222
	movq	(%rax), %rax	# *_188, D.21223
	movl	(%rax), %eax	# *_189, D.21209
	jmp	.L446	#
.L444:
	.loc 1 1587 0 discriminator 4
	movq	wbp_weight(%rip), %rax	# wbp_weight, wbp_weight.515
	movl	-116(%rbp), %edx	# list_offset, tmp636
	movslq	%edx, %rdx	# tmp636, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21220
	movq	(%rax), %rax	# *_195, D.21221
	movq	(%rax), %rax	# *_196, D.21222
	movswq	-188(%rbp), %rdx	# ref, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21222
	movq	(%rax), %rax	# *_200, D.21223
	movl	(%rax), %eax	# *_201, D.21209
	jmp	.L446	#
.L443:
	.loc 1 1587 0 discriminator 2
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.516
	movl	$1, %edx	#, tmp637
	movl	%eax, %ecx	# luma_log_weight_denom.516, tmp748
	sall	%cl, %edx	# tmp748, D.21209
	movl	%edx, %eax	# D.21209, D.21209
.L446:
	.loc 1 1587 0 discriminator 5
	movw	%ax, -150(%rbp)	# iftmp.512, weightRpic
	.loc 1 1588 0 is_stmt 1 discriminator 5
	cmpw	$0, -154(%rbp)	#, apply_weights
	je	.L447	#,
	.loc 1 1588 0 is_stmt 0 discriminator 1
	cmpl	$0, -192(%rbp)	#, list
	jne	.L448	#,
	.loc 1 1588 0 discriminator 3
	movq	wp_offset(%rip), %rax	# wp_offset, wp_offset.519
	movl	-116(%rbp), %edx	# list_offset, tmp638
	movslq	%edx, %rdx	# tmp638, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21221
	movq	(%rax), %rax	# *_212, D.21222
	movswq	-188(%rbp), %rdx	# ref, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21222
	movq	(%rax), %rax	# *_216, D.21223
	movl	(%rax), %eax	# *_217, D.21209
	jmp	.L450	#
.L448:
	.loc 1 1588 0 discriminator 4
	movq	wp_offset(%rip), %rax	# wp_offset, wp_offset.520
	movl	-116(%rbp), %edx	# list_offset, tmp639
	movslq	%edx, %rdx	# tmp639, D.21224
	addq	$1, %rdx	#, D.21224
	salq	$3, %rdx	#, D.21224
	addq	%rdx, %rax	# D.21224, D.21221
	movq	(%rax), %rax	# *_224, D.21222
	movq	(%rax), %rax	# *_225, D.21223
	movl	(%rax), %eax	# *_226, D.21209
	jmp	.L450	#
.L447:
	.loc 1 1588 0 discriminator 2
	movl	$0, %eax	#, iftmp.517
.L450:
	.loc 1 1588 0 discriminator 5
	movw	%ax, -148(%rbp)	# iftmp.517, offsetSpic
	.loc 1 1589 0 is_stmt 1 discriminator 5
	cmpw	$0, -154(%rbp)	#, apply_weights
	je	.L451	#,
	.loc 1 1589 0 is_stmt 0 discriminator 1
	cmpl	$0, -192(%rbp)	#, list
	jne	.L452	#,
	.loc 1 1589 0 discriminator 3
	movq	wp_offset(%rip), %rax	# wp_offset, wp_offset.523
	movl	-116(%rbp), %edx	# list_offset, tmp640
	movslq	%edx, %rdx	# tmp640, D.21224
	addq	$1, %rdx	#, D.21224
	salq	$3, %rdx	#, D.21224
	addq	%rdx, %rax	# D.21224, D.21221
	movq	(%rax), %rax	# *_236, D.21222
	movswq	-188(%rbp), %rdx	# ref, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21222
	movq	(%rax), %rax	# *_240, D.21223
	movl	(%rax), %eax	# *_241, D.21209
	jmp	.L454	#
.L452:
	.loc 1 1589 0 discriminator 4
	movq	wp_offset(%rip), %rax	# wp_offset, wp_offset.524
	movl	-116(%rbp), %edx	# list_offset, tmp641
	movslq	%edx, %rdx	# tmp641, D.21211
	salq	$3, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21221
	movq	(%rax), %rax	# *_247, D.21222
	movq	(%rax), %rax	# *_248, D.21223
	movl	(%rax), %eax	# *_249, D.21209
	jmp	.L454	#
.L451:
	.loc 1 1589 0 discriminator 2
	movl	$0, %eax	#, iftmp.521
.L454:
	.loc 1 1589 0 discriminator 5
	movw	%ax, -146(%rbp)	# iftmp.521, offsetRpic
	.loc 1 1591 0 is_stmt 1 discriminator 5
	movswl	-146(%rbp), %edx	# offsetRpic, D.21209
	movswl	-148(%rbp), %eax	# offsetSpic, D.21209
	addl	%edx, %eax	# D.21209, D.21209
	addl	$1, %eax	#, D.21209
	sarl	%eax	# D.21209
	movw	%ax, -144(%rbp)	# D.21209, offsetBi
	.loc 1 1593 0 discriminator 5
	movswl	-162(%rbp), %eax	# center_x, D.21209
	cmpl	88(%rbp), %eax	# search_range, D.21209
	jle	.L455	#,
	.loc 1 1593 0 is_stmt 0 discriminator 1
	movswl	-162(%rbp), %edx	# center_x, D.21209
	movq	img(%rip), %rax	# img, img.525
	movl	52(%rax), %eax	# img.525_263->width, D.21209
	subl	$1, %eax	#, D.21209
	subl	88(%rbp), %eax	# search_range, D.21209
	subl	-92(%rbp), %eax	# blocksize_x, D.21209
	cmpl	%eax, %edx	# D.21209, D.21209
	jge	.L455	#,
	.loc 1 1594 0 is_stmt 1 discriminator 1
	movswl	-160(%rbp), %eax	# center_y, D.21209
	.loc 1 1593 0 discriminator 1
	cmpl	88(%rbp), %eax	# search_range, D.21209
	jle	.L455	#,
	.loc 1 1594 0
	movswl	-160(%rbp), %edx	# center_y, D.21209
	movq	img(%rip), %rax	# img, img.526
	movl	60(%rax), %eax	# img.526_270->height, D.21209
	subl	$1, %eax	#, D.21209
	subl	88(%rbp), %eax	# search_range, D.21209
	subl	-96(%rbp), %eax	# blocksize_y, D.21209
	cmpl	%eax, %edx	# D.21209, D.21209
	jge	.L455	#,
	.loc 1 1596 0
	movq	$FastLineX, -24(%rbp)	#, get_ref_line2
	jmp	.L456	#
.L455:
	.loc 1 1600 0
	movq	$UMVLineX, -24(%rbp)	#, get_ref_line2
.L456:
	.loc 1 1604 0
	movswl	-158(%rbp), %eax	# ref1_center_x, D.21209
	cmpl	88(%rbp), %eax	# search_range, D.21209
	jle	.L457	#,
	.loc 1 1604 0 is_stmt 0 discriminator 1
	movswl	-158(%rbp), %edx	# ref1_center_x, D.21209
	movq	img(%rip), %rax	# img, img.527
	movl	52(%rax), %eax	# img.527_279->width, D.21209
	subl	$1, %eax	#, D.21209
	subl	88(%rbp), %eax	# search_range, D.21209
	subl	-92(%rbp), %eax	# blocksize_x, D.21209
	cmpl	%eax, %edx	# D.21209, D.21209
	jge	.L457	#,
	.loc 1 1605 0 is_stmt 1 discriminator 1
	movswl	-156(%rbp), %eax	# ref1_center_y, D.21209
	.loc 1 1604 0 discriminator 1
	cmpl	88(%rbp), %eax	# search_range, D.21209
	jle	.L457	#,
	.loc 1 1605 0
	movswl	-156(%rbp), %edx	# ref1_center_y, D.21209
	movq	img(%rip), %rax	# img, img.528
	movl	60(%rax), %eax	# img.528_286->height, D.21209
	subl	$1, %eax	#, D.21209
	subl	88(%rbp), %eax	# search_range, D.21209
	subl	-96(%rbp), %eax	# blocksize_y, D.21209
	cmpl	%eax, %edx	# D.21209, D.21209
	jge	.L457	#,
	.loc 1 1607 0
	movq	$FastLineX, -32(%rbp)	#, get_ref_line1
	jmp	.L458	#
.L457:
	.loc 1 1611 0
	movq	$UMVLineX, -32(%rbp)	#, get_ref_line1
.L458:
	.loc 1 1615 0
	movl	$0, -136(%rbp)	#, pos
	jmp	.L459	#
.L483:
	.loc 1 1618 0
	movswl	-162(%rbp), %edx	# center_x, D.21209
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.529
	movl	-136(%rbp), %ecx	# pos, tmp642
	movslq	%ecx, %rcx	# tmp642, D.21211
	salq	$2, %rcx	#, D.21211
	addq	%rcx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_299, D.21209
	addl	%edx, %eax	# D.21209, tmp643
	movl	%eax, -68(%rbp)	# tmp643, cand_x
	.loc 1 1619 0
	movswl	-160(%rbp), %edx	# center_y, D.21209
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.530
	movl	-136(%rbp), %ecx	# pos, tmp644
	movslq	%ecx, %rcx	# tmp644, D.21211
	salq	$2, %rcx	#, D.21211
	addq	%rcx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_306, D.21209
	addl	%edx, %eax	# D.21209, tmp645
	movl	%eax, -64(%rbp)	# tmp645, cand_y
	.loc 1 1622 0
	movq	mvbits(%rip), %rax	# mvbits, mvbits.531
	movswl	-158(%rbp), %edx	# ref1_center_x, D.21209
	sall	$2, %edx	#, D.21209
	subl	-84(%rbp), %edx	# pred_x1, D.21209
	movslq	%edx, %rdx	# D.21209, D.21211
	salq	$2, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21223
	movl	(%rax), %edx	# *_315, D.21209
	movq	mvbits(%rip), %rax	# mvbits, mvbits.532
	movswl	-156(%rbp), %ecx	# ref1_center_y, D.21209
	sall	$2, %ecx	#, D.21209
	subl	-80(%rbp), %ecx	# pred_y1, D.21209
	movslq	%ecx, %rcx	# D.21209, D.21211
	salq	$2, %rcx	#, D.21211
	addq	%rcx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_323, D.21209
	addl	%edx, %eax	# D.21209, D.21209
	imull	-100(%rbp), %eax	# lambda_factor, D.21209
	sarl	$16, %eax	#, tmp646
	movl	%eax, -124(%rbp)	# tmp646, mcost
	.loc 1 1623 0
	movq	mvbits(%rip), %rax	# mvbits, mvbits.533
	movl	-68(%rbp), %edx	# cand_x, tmp647
	sall	$2, %edx	#, D.21209
	subl	-76(%rbp), %edx	# pred_x2, D.21209
	movslq	%edx, %rdx	# D.21209, D.21211
	salq	$2, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21223
	movl	(%rax), %edx	# *_333, D.21209
	movq	mvbits(%rip), %rax	# mvbits, mvbits.534
	movl	-64(%rbp), %ecx	# cand_y, tmp648
	sall	$2, %ecx	#, D.21209
	subl	-72(%rbp), %ecx	# pred_y2, D.21209
	movslq	%ecx, %rcx	# D.21209, D.21211
	salq	$2, %rcx	#, D.21211
	addq	%rcx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_340, D.21209
	addl	%edx, %eax	# D.21209, D.21209
	imull	-100(%rbp), %eax	# lambda_factor, D.21209
	sarl	$16, %eax	#, D.21209
	addl	%eax, -124(%rbp)	# D.21209, mcost
	.loc 1 1625 0
	movl	-124(%rbp), %eax	# mcost, tmp649
	cmpl	96(%rbp), %eax	# min_mcost, tmp649
	jl	.L460	#,
	.loc 1 1625 0 is_stmt 0 discriminator 1
	jmp	.L461	#
.L460:
	.loc 1 1628 0 is_stmt 1
	cmpw	$0, -154(%rbp)	#, apply_weights
	je	.L462	#,
	.loc 1 1630 0
	movl	$0, -132(%rbp)	#, y
	jmp	.L463	#
.L476:
	.loc 1 1632 0
	movl	-132(%rbp), %eax	# y, tmp650
	movl	-64(%rbp), %edx	# cand_y, tmp651
	leal	(%rdx,%rax), %r10d	#, D.21209
	movl	-112(%rbp), %r8d	# img_width, tmp652
	movl	-108(%rbp), %ecx	# img_height, tmp653
	movl	-68(%rbp), %edx	# cand_x, tmp654
	movq	-8(%rbp), %rsi	# ref2_pic, tmp655
	movl	-92(%rbp), %edi	# blocksize_x, tmp656
	movq	-24(%rbp), %rax	# get_ref_line2, tmp657
	movl	%r8d, %r9d	# tmp652,
	movl	%ecx, %r8d	# tmp653,
	movl	%edx, %ecx	# tmp654,
	movl	%r10d, %edx	# D.21209,
	call	*%rax	# tmp657
	movq	%rax, -48(%rbp)	# tmp658, ref2_line
	.loc 1 1633 0
	movswl	-158(%rbp), %edx	# ref1_center_x, D.21209
	movswl	-156(%rbp), %ecx	# ref1_center_y, D.21209
	movl	-132(%rbp), %eax	# y, tmp659
	leal	(%rcx,%rax), %r10d	#, D.21209
	movl	-112(%rbp), %r8d	# img_width, tmp660
	movl	-108(%rbp), %ecx	# img_height, tmp661
	movq	-16(%rbp), %rsi	# ref1_pic, tmp662
	movl	-92(%rbp), %edi	# blocksize_x, tmp663
	movq	-32(%rbp), %rax	# get_ref_line1, tmp664
	movl	%r8d, %r9d	# tmp660,
	movl	%ecx, %r8d	# tmp661,
	movl	%edx, %ecx	# D.21209,
	movl	%r10d, %edx	# D.21209,
	call	*%rax	# tmp664
	movq	%rax, -40(%rbp)	# tmp665, ref1_line
	.loc 1 1634 0
	movl	-132(%rbp), %eax	# y, tmp666
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21211
	movq	-184(%rbp), %rax	# orig_pic, tmp667
	addq	%rdx, %rax	# D.21211, D.21225
	movq	(%rax), %rax	# *_356, tmp668
	movq	%rax, -56(%rbp)	# tmp668, orig_line
	.loc 1 1636 0
	movl	$0, -128(%rbp)	#, x4
	jmp	.L464	#
.L473:
	.loc 1 1638 0
	movq	-40(%rbp), %rax	# ref1_line, ref1_line.535
	leaq	2(%rax), %rdx	#, tmp669
	movq	%rdx, -40(%rbp)	# tmp669, ref1_line
	movzwl	(%rax), %edx	# *ref1_line.535_359, D.21226
	movzwl	-152(%rbp), %eax	# weightSpic, weightSpic.536
	imull	%edx, %eax	# D.21226, D.21217
	movw	%ax, -142(%rbp)	# D.21217, pixel1
	.loc 1 1639 0
	movq	-48(%rbp), %rax	# ref2_line, ref2_line.537
	leaq	2(%rax), %rdx	#, tmp670
	movq	%rdx, -48(%rbp)	# tmp670, ref2_line
	movzwl	(%rax), %edx	# *ref2_line.537_365, D.21226
	movzwl	-150(%rbp), %eax	# weightRpic, weightRpic.538
	imull	%edx, %eax	# D.21226, D.21217
	movw	%ax, -140(%rbp)	# D.21217, pixel2
	.loc 1 1640 0
	movswl	-142(%rbp), %edx	# pixel1, D.21209
	movswl	-140(%rbp), %eax	# pixel2, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.540
	addl	%eax, %eax	# D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.541
	addl	$1, %eax	#, D.21209
	movl	%eax, %ecx	# D.21209, tmp749
	sarl	%cl, %edx	# tmp749, D.21209
	movswl	-144(%rbp), %eax	# offsetBi, D.21209
	addl	%edx, %eax	# D.21209, D.21209
	testl	%eax, %eax	# D.21209
	js	.L465	#,
	.loc 1 1640 0 is_stmt 0 discriminator 1
	movswl	-142(%rbp), %edx	# pixel1, D.21209
	movswl	-140(%rbp), %eax	# pixel2, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.542
	addl	%eax, %eax	# D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.543
	addl	$1, %eax	#, D.21209
	movl	%eax, %ecx	# D.21209, tmp750
	sarl	%cl, %edx	# tmp750, D.21209
	movswl	-144(%rbp), %eax	# offsetBi, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movq	img(%rip), %rax	# img, img.544
	movl	72684(%rax), %eax	# img.544_393->max_imgpel_value, D.21209
	cmpl	%eax, %edx	# D.21209, D.21209
	cmovle	%edx, %eax	# D.21209,, D.21209
	jmp	.L466	#
.L465:
	.loc 1 1640 0 discriminator 2
	movl	$0, %eax	#, iftmp.539
.L466:
	.loc 1 1640 0 discriminator 3
	movw	%ax, -138(%rbp)	# iftmp.539, weightedpel
	.loc 1 1642 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# orig_line, orig_line.545
	leaq	2(%rax), %rdx	#, tmp671
	movq	%rdx, -56(%rbp)	# tmp671, orig_line
	movzwl	(%rax), %eax	# *orig_line.545_399, D.21226
	movzwl	%ax, %edx	# D.21226, D.21209
	movswl	-138(%rbp), %eax	# weightedpel, D.21209
	subl	%eax, %edx	# D.21209, tmp672
	movl	%edx, %eax	# tmp672, tmp672
	movl	%eax, -60(%rbp)	# tmp672, bi_diff
	.loc 1 1643 0 discriminator 3
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.546
	movl	-60(%rbp), %edx	# bi_diff, tmp673
	movslq	%edx, %rdx	# tmp673, D.21211
	salq	$2, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_408, D.21209
	addl	%eax, -124(%rbp)	# D.21209, mcost
	.loc 1 1645 0 discriminator 3
	movq	-40(%rbp), %rax	# ref1_line, ref1_line.547
	leaq	2(%rax), %rdx	#, tmp674
	movq	%rdx, -40(%rbp)	# tmp674, ref1_line
	movzwl	(%rax), %edx	# *ref1_line.547_411, D.21226
	movzwl	-152(%rbp), %eax	# weightSpic, weightSpic.548
	imull	%edx, %eax	# D.21226, D.21217
	movw	%ax, -142(%rbp)	# D.21217, pixel1
	.loc 1 1646 0 discriminator 3
	movq	-48(%rbp), %rax	# ref2_line, ref2_line.549
	leaq	2(%rax), %rdx	#, tmp675
	movq	%rdx, -48(%rbp)	# tmp675, ref2_line
	movzwl	(%rax), %edx	# *ref2_line.549_417, D.21226
	movzwl	-150(%rbp), %eax	# weightRpic, weightRpic.550
	imull	%edx, %eax	# D.21226, D.21217
	movw	%ax, -140(%rbp)	# D.21217, pixel2
	.loc 1 1647 0 discriminator 3
	movswl	-142(%rbp), %edx	# pixel1, D.21209
	movswl	-140(%rbp), %eax	# pixel2, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.552
	addl	%eax, %eax	# D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.553
	addl	$1, %eax	#, D.21209
	movl	%eax, %ecx	# D.21209, tmp752
	sarl	%cl, %edx	# tmp752, D.21209
	movswl	-144(%rbp), %eax	# offsetBi, D.21209
	addl	%edx, %eax	# D.21209, D.21209
	testl	%eax, %eax	# D.21209
	js	.L467	#,
	.loc 1 1647 0 is_stmt 0 discriminator 1
	movswl	-142(%rbp), %edx	# pixel1, D.21209
	movswl	-140(%rbp), %eax	# pixel2, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.554
	addl	%eax, %eax	# D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.555
	addl	$1, %eax	#, D.21209
	movl	%eax, %ecx	# D.21209, tmp753
	sarl	%cl, %edx	# tmp753, D.21209
	movswl	-144(%rbp), %eax	# offsetBi, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movq	img(%rip), %rax	# img, img.556
	movl	72684(%rax), %eax	# img.556_445->max_imgpel_value, D.21209
	cmpl	%eax, %edx	# D.21209, D.21209
	cmovle	%edx, %eax	# D.21209,, D.21209
	jmp	.L468	#
.L467:
	.loc 1 1647 0 discriminator 2
	movl	$0, %eax	#, iftmp.551
.L468:
	.loc 1 1647 0 discriminator 3
	movw	%ax, -138(%rbp)	# iftmp.551, weightedpel
	.loc 1 1649 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# orig_line, orig_line.557
	leaq	2(%rax), %rdx	#, tmp676
	movq	%rdx, -56(%rbp)	# tmp676, orig_line
	movzwl	(%rax), %eax	# *orig_line.557_451, D.21226
	movzwl	%ax, %edx	# D.21226, D.21209
	movswl	-138(%rbp), %eax	# weightedpel, D.21209
	subl	%eax, %edx	# D.21209, tmp677
	movl	%edx, %eax	# tmp677, tmp677
	movl	%eax, -60(%rbp)	# tmp677, bi_diff
	.loc 1 1650 0 discriminator 3
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.558
	movl	-60(%rbp), %edx	# bi_diff, tmp678
	movslq	%edx, %rdx	# tmp678, D.21211
	salq	$2, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_460, D.21209
	addl	%eax, -124(%rbp)	# D.21209, mcost
	.loc 1 1652 0 discriminator 3
	movq	-40(%rbp), %rax	# ref1_line, ref1_line.559
	leaq	2(%rax), %rdx	#, tmp679
	movq	%rdx, -40(%rbp)	# tmp679, ref1_line
	movzwl	(%rax), %edx	# *ref1_line.559_463, D.21226
	movzwl	-152(%rbp), %eax	# weightSpic, weightSpic.560
	imull	%edx, %eax	# D.21226, D.21217
	movw	%ax, -142(%rbp)	# D.21217, pixel1
	.loc 1 1653 0 discriminator 3
	movq	-48(%rbp), %rax	# ref2_line, ref2_line.561
	leaq	2(%rax), %rdx	#, tmp680
	movq	%rdx, -48(%rbp)	# tmp680, ref2_line
	movzwl	(%rax), %edx	# *ref2_line.561_469, D.21226
	movzwl	-150(%rbp), %eax	# weightRpic, weightRpic.562
	imull	%edx, %eax	# D.21226, D.21217
	movw	%ax, -140(%rbp)	# D.21217, pixel2
	.loc 1 1654 0 discriminator 3
	movswl	-142(%rbp), %edx	# pixel1, D.21209
	movswl	-140(%rbp), %eax	# pixel2, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.564
	addl	%eax, %eax	# D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.565
	addl	$1, %eax	#, D.21209
	movl	%eax, %ecx	# D.21209, tmp755
	sarl	%cl, %edx	# tmp755, D.21209
	movswl	-144(%rbp), %eax	# offsetBi, D.21209
	addl	%edx, %eax	# D.21209, D.21209
	testl	%eax, %eax	# D.21209
	js	.L469	#,
	.loc 1 1654 0 is_stmt 0 discriminator 1
	movswl	-142(%rbp), %edx	# pixel1, D.21209
	movswl	-140(%rbp), %eax	# pixel2, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.566
	addl	%eax, %eax	# D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.567
	addl	$1, %eax	#, D.21209
	movl	%eax, %ecx	# D.21209, tmp756
	sarl	%cl, %edx	# tmp756, D.21209
	movswl	-144(%rbp), %eax	# offsetBi, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movq	img(%rip), %rax	# img, img.568
	movl	72684(%rax), %eax	# img.568_497->max_imgpel_value, D.21209
	cmpl	%eax, %edx	# D.21209, D.21209
	cmovle	%edx, %eax	# D.21209,, D.21209
	jmp	.L470	#
.L469:
	.loc 1 1654 0 discriminator 2
	movl	$0, %eax	#, iftmp.563
.L470:
	.loc 1 1654 0 discriminator 3
	movw	%ax, -138(%rbp)	# iftmp.563, weightedpel
	.loc 1 1656 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# orig_line, orig_line.569
	leaq	2(%rax), %rdx	#, tmp681
	movq	%rdx, -56(%rbp)	# tmp681, orig_line
	movzwl	(%rax), %eax	# *orig_line.569_503, D.21226
	movzwl	%ax, %edx	# D.21226, D.21209
	movswl	-138(%rbp), %eax	# weightedpel, D.21209
	subl	%eax, %edx	# D.21209, tmp682
	movl	%edx, %eax	# tmp682, tmp682
	movl	%eax, -60(%rbp)	# tmp682, bi_diff
	.loc 1 1657 0 discriminator 3
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.570
	movl	-60(%rbp), %edx	# bi_diff, tmp683
	movslq	%edx, %rdx	# tmp683, D.21211
	salq	$2, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_512, D.21209
	addl	%eax, -124(%rbp)	# D.21209, mcost
	.loc 1 1659 0 discriminator 3
	movq	-40(%rbp), %rax	# ref1_line, ref1_line.571
	leaq	2(%rax), %rdx	#, tmp684
	movq	%rdx, -40(%rbp)	# tmp684, ref1_line
	movzwl	(%rax), %edx	# *ref1_line.571_515, D.21226
	movzwl	-152(%rbp), %eax	# weightSpic, weightSpic.572
	imull	%edx, %eax	# D.21226, D.21217
	movw	%ax, -142(%rbp)	# D.21217, pixel1
	.loc 1 1660 0 discriminator 3
	movq	-48(%rbp), %rax	# ref2_line, ref2_line.573
	leaq	2(%rax), %rdx	#, tmp685
	movq	%rdx, -48(%rbp)	# tmp685, ref2_line
	movzwl	(%rax), %edx	# *ref2_line.573_521, D.21226
	movzwl	-150(%rbp), %eax	# weightRpic, weightRpic.574
	imull	%edx, %eax	# D.21226, D.21217
	movw	%ax, -140(%rbp)	# D.21217, pixel2
	.loc 1 1661 0 discriminator 3
	movswl	-142(%rbp), %edx	# pixel1, D.21209
	movswl	-140(%rbp), %eax	# pixel2, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.576
	addl	%eax, %eax	# D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.577
	addl	$1, %eax	#, D.21209
	movl	%eax, %ecx	# D.21209, tmp758
	sarl	%cl, %edx	# tmp758, D.21209
	movswl	-144(%rbp), %eax	# offsetBi, D.21209
	addl	%edx, %eax	# D.21209, D.21209
	testl	%eax, %eax	# D.21209
	js	.L471	#,
	.loc 1 1661 0 is_stmt 0 discriminator 1
	movswl	-142(%rbp), %edx	# pixel1, D.21209
	movswl	-140(%rbp), %eax	# pixel2, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.578
	addl	%eax, %eax	# D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.579
	addl	$1, %eax	#, D.21209
	movl	%eax, %ecx	# D.21209, tmp759
	sarl	%cl, %edx	# tmp759, D.21209
	movswl	-144(%rbp), %eax	# offsetBi, D.21209
	addl	%eax, %edx	# D.21209, D.21209
	movq	img(%rip), %rax	# img, img.580
	movl	72684(%rax), %eax	# img.580_549->max_imgpel_value, D.21209
	cmpl	%eax, %edx	# D.21209, D.21209
	cmovle	%edx, %eax	# D.21209,, D.21209
	jmp	.L472	#
.L471:
	.loc 1 1661 0 discriminator 2
	movl	$0, %eax	#, iftmp.575
.L472:
	.loc 1 1661 0 discriminator 3
	movw	%ax, -138(%rbp)	# iftmp.575, weightedpel
	.loc 1 1663 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# orig_line, orig_line.581
	leaq	2(%rax), %rdx	#, tmp686
	movq	%rdx, -56(%rbp)	# tmp686, orig_line
	movzwl	(%rax), %eax	# *orig_line.581_555, D.21226
	movzwl	%ax, %edx	# D.21226, D.21209
	movswl	-138(%rbp), %eax	# weightedpel, D.21209
	subl	%eax, %edx	# D.21209, tmp687
	movl	%edx, %eax	# tmp687, tmp687
	movl	%eax, -60(%rbp)	# tmp687, bi_diff
	.loc 1 1664 0 discriminator 3
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.582
	movl	-60(%rbp), %edx	# bi_diff, tmp688
	movslq	%edx, %rdx	# tmp688, D.21211
	salq	$2, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_564, D.21209
	addl	%eax, -124(%rbp)	# D.21209, mcost
	.loc 1 1636 0 discriminator 3
	addl	$1, -128(%rbp)	#, x4
.L464:
	.loc 1 1636 0 is_stmt 0 discriminator 1
	movl	-128(%rbp), %eax	# x4, tmp689
	cmpl	-88(%rbp), %eax	# blocksize_x4, tmp689
	jl	.L473	#,
	.loc 1 1667 0 is_stmt 1
	movl	-124(%rbp), %eax	# mcost, tmp690
	cmpl	96(%rbp), %eax	# min_mcost, tmp690
	jl	.L474	#,
	.loc 1 1669 0
	nop
	jmp	.L477	#
.L474:
	.loc 1 1630 0
	addl	$1, -132(%rbp)	#, y
.L463:
	.loc 1 1630 0 is_stmt 0 discriminator 1
	movl	-132(%rbp), %eax	# y, tmp691
	cmpl	-96(%rbp), %eax	# blocksize_y, tmp691
	jl	.L476	#,
	jmp	.L477	#
.L462:
	.loc 1 1675 0 is_stmt 1
	movl	$0, -132(%rbp)	#, y
	jmp	.L478	#
.L482:
	.loc 1 1677 0
	movl	-132(%rbp), %eax	# y, tmp692
	movl	-64(%rbp), %edx	# cand_y, tmp693
	leal	(%rdx,%rax), %r10d	#, D.21209
	movl	-112(%rbp), %r8d	# img_width, tmp694
	movl	-108(%rbp), %ecx	# img_height, tmp695
	movl	-68(%rbp), %edx	# cand_x, tmp696
	movq	-8(%rbp), %rsi	# ref2_pic, tmp697
	movl	-92(%rbp), %edi	# blocksize_x, tmp698
	movq	-24(%rbp), %rax	# get_ref_line2, tmp699
	movl	%r8d, %r9d	# tmp694,
	movl	%ecx, %r8d	# tmp695,
	movl	%edx, %ecx	# tmp696,
	movl	%r10d, %edx	# D.21209,
	call	*%rax	# tmp699
	movq	%rax, -48(%rbp)	# tmp700, ref2_line
	.loc 1 1678 0
	movswl	-158(%rbp), %edx	# ref1_center_x, D.21209
	movswl	-156(%rbp), %ecx	# ref1_center_y, D.21209
	movl	-132(%rbp), %eax	# y, tmp701
	leal	(%rcx,%rax), %r10d	#, D.21209
	movl	-112(%rbp), %r8d	# img_width, tmp702
	movl	-108(%rbp), %ecx	# img_height, tmp703
	movq	-16(%rbp), %rsi	# ref1_pic, tmp704
	movl	-92(%rbp), %edi	# blocksize_x, tmp705
	movq	-32(%rbp), %rax	# get_ref_line1, tmp706
	movl	%r8d, %r9d	# tmp702,
	movl	%ecx, %r8d	# tmp703,
	movl	%edx, %ecx	# D.21209,
	movl	%r10d, %edx	# D.21209,
	call	*%rax	# tmp706
	movq	%rax, -40(%rbp)	# tmp707, ref1_line
	.loc 1 1679 0
	movl	-132(%rbp), %eax	# y, tmp708
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21211
	movq	-184(%rbp), %rax	# orig_pic, tmp709
	addq	%rdx, %rax	# D.21211, D.21225
	movq	(%rax), %rax	# *_578, tmp710
	movq	%rax, -56(%rbp)	# tmp710, orig_line
	.loc 1 1681 0
	movl	$0, -128(%rbp)	#, x4
	jmp	.L479	#
.L480:
	.loc 1 1683 0 discriminator 2
	movq	-56(%rbp), %rax	# orig_line, orig_line.583
	leaq	2(%rax), %rdx	#, tmp711
	movq	%rdx, -56(%rbp)	# tmp711, orig_line
	movzwl	(%rax), %eax	# *orig_line.583_581, D.21226
	movzwl	%ax, %ecx	# D.21226, D.21209
	movq	-40(%rbp), %rax	# ref1_line, ref1_line.584
	leaq	2(%rax), %rdx	#, tmp712
	movq	%rdx, -40(%rbp)	# tmp712, ref1_line
	movzwl	(%rax), %eax	# *ref1_line.584_585, D.21226
	movzwl	%ax, %esi	# D.21226, D.21209
	movq	-48(%rbp), %rax	# ref2_line, ref2_line.585
	leaq	2(%rax), %rdx	#, tmp713
	movq	%rdx, -48(%rbp)	# tmp713, ref2_line
	movzwl	(%rax), %eax	# *ref2_line.585_589, D.21226
	movzwl	%ax, %eax	# D.21226, D.21209
	addl	%esi, %eax	# D.21209, D.21209
	sarl	%eax	# D.21209
	subl	%eax, %ecx	# D.21209, tmp714
	movl	%ecx, %eax	# tmp714, tmp714
	movl	%eax, -60(%rbp)	# tmp714, bi_diff
	.loc 1 1684 0 discriminator 2
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.586
	movl	-60(%rbp), %edx	# bi_diff, tmp715
	movslq	%edx, %rdx	# tmp715, D.21211
	salq	$2, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_599, D.21209
	addl	%eax, -124(%rbp)	# D.21209, mcost
	.loc 1 1685 0 discriminator 2
	movq	-56(%rbp), %rax	# orig_line, orig_line.587
	leaq	2(%rax), %rdx	#, tmp716
	movq	%rdx, -56(%rbp)	# tmp716, orig_line
	movzwl	(%rax), %eax	# *orig_line.587_602, D.21226
	movzwl	%ax, %ecx	# D.21226, D.21209
	movq	-40(%rbp), %rax	# ref1_line, ref1_line.588
	leaq	2(%rax), %rdx	#, tmp717
	movq	%rdx, -40(%rbp)	# tmp717, ref1_line
	movzwl	(%rax), %eax	# *ref1_line.588_606, D.21226
	movzwl	%ax, %esi	# D.21226, D.21209
	movq	-48(%rbp), %rax	# ref2_line, ref2_line.589
	leaq	2(%rax), %rdx	#, tmp718
	movq	%rdx, -48(%rbp)	# tmp718, ref2_line
	movzwl	(%rax), %eax	# *ref2_line.589_610, D.21226
	movzwl	%ax, %eax	# D.21226, D.21209
	addl	%esi, %eax	# D.21209, D.21209
	sarl	%eax	# D.21209
	subl	%eax, %ecx	# D.21209, tmp719
	movl	%ecx, %eax	# tmp719, tmp719
	movl	%eax, -60(%rbp)	# tmp719, bi_diff
	.loc 1 1686 0 discriminator 2
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.590
	movl	-60(%rbp), %edx	# bi_diff, tmp720
	movslq	%edx, %rdx	# tmp720, D.21211
	salq	$2, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_620, D.21209
	addl	%eax, -124(%rbp)	# D.21209, mcost
	.loc 1 1687 0 discriminator 2
	movq	-56(%rbp), %rax	# orig_line, orig_line.591
	leaq	2(%rax), %rdx	#, tmp721
	movq	%rdx, -56(%rbp)	# tmp721, orig_line
	movzwl	(%rax), %eax	# *orig_line.591_623, D.21226
	movzwl	%ax, %ecx	# D.21226, D.21209
	movq	-40(%rbp), %rax	# ref1_line, ref1_line.592
	leaq	2(%rax), %rdx	#, tmp722
	movq	%rdx, -40(%rbp)	# tmp722, ref1_line
	movzwl	(%rax), %eax	# *ref1_line.592_627, D.21226
	movzwl	%ax, %esi	# D.21226, D.21209
	movq	-48(%rbp), %rax	# ref2_line, ref2_line.593
	leaq	2(%rax), %rdx	#, tmp723
	movq	%rdx, -48(%rbp)	# tmp723, ref2_line
	movzwl	(%rax), %eax	# *ref2_line.593_631, D.21226
	movzwl	%ax, %eax	# D.21226, D.21209
	addl	%esi, %eax	# D.21209, D.21209
	sarl	%eax	# D.21209
	subl	%eax, %ecx	# D.21209, tmp724
	movl	%ecx, %eax	# tmp724, tmp724
	movl	%eax, -60(%rbp)	# tmp724, bi_diff
	.loc 1 1688 0 discriminator 2
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.594
	movl	-60(%rbp), %edx	# bi_diff, tmp725
	movslq	%edx, %rdx	# tmp725, D.21211
	salq	$2, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_641, D.21209
	addl	%eax, -124(%rbp)	# D.21209, mcost
	.loc 1 1689 0 discriminator 2
	movq	-56(%rbp), %rax	# orig_line, orig_line.595
	leaq	2(%rax), %rdx	#, tmp726
	movq	%rdx, -56(%rbp)	# tmp726, orig_line
	movzwl	(%rax), %eax	# *orig_line.595_644, D.21226
	movzwl	%ax, %ecx	# D.21226, D.21209
	movq	-40(%rbp), %rax	# ref1_line, ref1_line.596
	leaq	2(%rax), %rdx	#, tmp727
	movq	%rdx, -40(%rbp)	# tmp727, ref1_line
	movzwl	(%rax), %eax	# *ref1_line.596_648, D.21226
	movzwl	%ax, %esi	# D.21226, D.21209
	movq	-48(%rbp), %rax	# ref2_line, ref2_line.597
	leaq	2(%rax), %rdx	#, tmp728
	movq	%rdx, -48(%rbp)	# tmp728, ref2_line
	movzwl	(%rax), %eax	# *ref2_line.597_652, D.21226
	movzwl	%ax, %eax	# D.21226, D.21209
	addl	%esi, %eax	# D.21209, D.21209
	sarl	%eax	# D.21209
	subl	%eax, %ecx	# D.21209, tmp729
	movl	%ecx, %eax	# tmp729, tmp729
	movl	%eax, -60(%rbp)	# tmp729, bi_diff
	.loc 1 1690 0 discriminator 2
	movq	byte_abs(%rip), %rax	# byte_abs, byte_abs.598
	movl	-60(%rbp), %edx	# bi_diff, tmp730
	movslq	%edx, %rdx	# tmp730, D.21211
	salq	$2, %rdx	#, D.21211
	addq	%rdx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_662, D.21209
	addl	%eax, -124(%rbp)	# D.21209, mcost
	.loc 1 1681 0 discriminator 2
	addl	$1, -128(%rbp)	#, x4
.L479:
	.loc 1 1681 0 is_stmt 0 discriminator 1
	movl	-128(%rbp), %eax	# x4, tmp731
	cmpl	-88(%rbp), %eax	# blocksize_x4, tmp731
	jl	.L480	#,
	.loc 1 1693 0 is_stmt 1
	movl	-124(%rbp), %eax	# mcost, tmp732
	cmpl	96(%rbp), %eax	# min_mcost, tmp732
	jl	.L481	#,
	.loc 1 1695 0
	jmp	.L477	#
.L481:
	.loc 1 1675 0
	addl	$1, -132(%rbp)	#, y
.L478:
	.loc 1 1675 0 is_stmt 0 discriminator 1
	movl	-132(%rbp), %eax	# y, tmp733
	cmpl	-96(%rbp), %eax	# blocksize_y, tmp733
	jl	.L482	#,
.L477:
	.loc 1 1701 0 is_stmt 1
	movl	-124(%rbp), %eax	# mcost, tmp734
	cmpl	96(%rbp), %eax	# min_mcost, tmp734
	jge	.L461	#,
	.loc 1 1703 0
	movl	-136(%rbp), %eax	# pos, tmp735
	movl	%eax, -120(%rbp)	# tmp735, best_pos
	.loc 1 1704 0
	movl	-124(%rbp), %eax	# mcost, tmp736
	movl	%eax, 96(%rbp)	# tmp736, min_mcost
.L461:
	.loc 1 1615 0
	addl	$1, -136(%rbp)	#, pos
.L459:
	.loc 1 1615 0 is_stmt 0 discriminator 1
	movl	-136(%rbp), %eax	# pos, tmp737
	cmpl	-104(%rbp), %eax	# max_pos, tmp737
	jl	.L483	#,
	.loc 1 1710 0 is_stmt 1
	cmpl	$0, -120(%rbp)	#, best_pos
	je	.L484	#,
	.loc 1 1712 0
	movq	56(%rbp), %rax	# mv_x, tmp738
	movzwl	(%rax), %eax	# *mv_x_121(D), D.21216
	movl	%eax, %edx	# D.21216, D.21217
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.599
	movl	-120(%rbp), %ecx	# best_pos, tmp739
	movslq	%ecx, %rcx	# tmp739, D.21211
	salq	$2, %rcx	#, D.21211
	addq	%rcx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_675, D.21209
	addl	%edx, %eax	# D.21217, D.21217
	movl	%eax, %edx	# D.21217, D.21216
	movq	56(%rbp), %rax	# mv_x, tmp740
	movw	%dx, (%rax)	# D.21216, *mv_x_121(D)
	.loc 1 1713 0
	movq	64(%rbp), %rax	# mv_y, tmp741
	movzwl	(%rax), %eax	# *mv_y_127(D), D.21216
	movl	%eax, %edx	# D.21216, D.21217
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.600
	movl	-120(%rbp), %ecx	# best_pos, tmp742
	movslq	%ecx, %rcx	# tmp742, D.21211
	salq	$2, %rcx	#, D.21211
	addq	%rcx, %rax	# D.21211, D.21223
	movl	(%rax), %eax	# *_685, D.21209
	addl	%edx, %eax	# D.21217, D.21217
	movl	%eax, %edx	# D.21217, D.21216
	movq	64(%rbp), %rax	# mv_y, tmp743
	movw	%dx, (%rax)	# D.21216, *mv_y_127(D)
.L484:
	.loc 1 1715 0
	movl	96(%rbp), %eax	# min_mcost, D.21209
	.loc 1 1716 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE16:
	.size	FullPelBlockMotionBiPred, .-FullPelBlockMotionBiPred
	.globl	SubPelBlockSearchBiPred
	.type	SubPelBlockSearchBiPred, @function
SubPelBlockSearchBiPred:
.LFB17:
	.loc 1 1742 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$1288, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -1272(%rbp)	# orig_pic, orig_pic
	movl	%esi, %eax	# ref, tmp4092
	movl	%edx, -1280(%rbp)	# list, list
	movl	%ecx, -1284(%rbp)	# pic_pix_x, pic_pix_x
	movl	%r8d, -1288(%rbp)	# pic_pix_y, pic_pix_y
	movl	%r9d, -1292(%rbp)	# blocktype, blocktype
	movl	16(%rbp), %ecx	# pred_mv_x, tmp4093
	movl	24(%rbp), %edx	# pred_mv_y, tmp4094
	movsd	%xmm0, -1312(%rbp)	# lambda, lambda
	movw	%ax, -1276(%rbp)	# tmp4092, ref
	movw	%cx, -1296(%rbp)	# tmp4093, pred_mv_x
	movw	%dx, -1300(%rbp)	# tmp4094, pred_mv_y
	.loc 1 1754 0
	movsd	-1312(%rbp), %xmm1	# lambda, tmp4095
	movsd	.LC13(%rip), %xmm0	#, tmp4096
	mulsd	%xmm1, %xmm0	# tmp4095, D.21227
	movsd	.LC14(%rip), %xmm1	#, tmp4097
	addsd	%xmm1, %xmm0	# tmp4097, D.21227
	cvttsd2si	%xmm0, %eax	# D.21227, tmp4098
	movl	%eax, -1184(%rbp)	# tmp4098, lambda_factor
	.loc 1 1755 0
	movw	$0, -1244(%rbp)	#, mv_shift
	.loc 1 1756 0
	movq	input(%rip), %rax	# input, input.601
	movl	-1292(%rbp), %edx	# blocktype, tmp4100
	movslq	%edx, %rdx	# tmp4100, tmp4099
	addq	$10, %rdx	#, tmp4101
	movl	(%rax,%rdx,8), %eax	# input.601_138->blc_size, D.21228
	movw	%ax, -1242(%rbp)	# D.21228, blocksize_x
	.loc 1 1757 0
	movq	input(%rip), %rax	# input, input.602
	movl	-1292(%rbp), %edx	# blocktype, tmp4103
	movslq	%edx, %rdx	# tmp4103, tmp4102
	movl	84(%rax,%rdx,8), %eax	# input.602_142->blc_size, D.21228
	movw	%ax, -1240(%rbp)	# D.21228, blocksize_y
	.loc 1 1758 0
	movl	-1284(%rbp), %eax	# pic_pix_x, tmp4104
	sall	$2, %eax	#, D.21228
	movw	%ax, -1238(%rbp)	# D.21228, pic4_pix_x
	.loc 1 1759 0
	movl	-1288(%rbp), %eax	# pic_pix_y, tmp4105
	sall	$2, %eax	#, D.21228
	movw	%ax, -1236(%rbp)	# D.21228, pic4_pix_y
	.loc 1 1760 0
	movq	input(%rip), %rax	# input, input.603
	movl	24(%rax), %eax	# input.603_151->hadamard, D.21228
	testl	%eax, %eax	# D.21228
	sete	%al	#, D.21229
	movzbl	%al, %eax	# D.21229, tmp4106
	movw	%ax, -1234(%rbp)	# tmp4106, min_pos2
	.loc 1 1761 0
	movq	input(%rip), %rax	# input, input.605
	movl	24(%rax), %eax	# input.605_155->hadamard, D.21228
	testl	%eax, %eax	# D.21228
	je	.L487	#,
	.loc 1 1761 0 is_stmt 0 discriminator 1
	movl	$1, %eax	#, tmp4107
	cmpl	$0, 64(%rbp)	#, search_pos2
	cmovg	64(%rbp), %eax	# search_pos2,, D.21228
	jmp	.L488	#
.L487:
	.loc 1 1761 0 discriminator 2
	movl	64(%rbp), %eax	# search_pos2, tmp4108
.L488:
	.loc 1 1761 0 discriminator 3
	movw	%ax, -1232(%rbp)	# iftmp.604, max_pos2
	.loc 1 1762 0 is_stmt 1 discriminator 3
	movq	img(%rip), %rax	# img, img.607
	movl	72400(%rax), %eax	# img.607_162->MbaffFrameFlag, D.21228
	testl	%eax, %eax	# D.21228
	je	.L489	#,
	.loc 1 1762 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.608
	movq	14168(%rax), %rdx	# img.608_164->mb_data, D.21230
	movq	img(%rip), %rax	# img, img.609
	movl	12(%rax), %eax	# img.609_166->current_mb_nr, D.21228
	cltq
	imulq	$632, %rax, %rax	#, D.21231, D.21231
	addq	%rdx, %rax	# D.21230, D.21230
	movl	532(%rax), %eax	# _170->mb_field, D.21228
	testl	%eax, %eax	# D.21228
	je	.L489	#,
	movq	img(%rip), %rax	# img, img.611
	movl	12(%rax), %eax	# img.611_172->current_mb_nr, D.21228
	andl	$1, %eax	#, D.21232
	testl	%eax, %eax	# D.21232
	je	.L490	#,
	.loc 1 1762 0 discriminator 3
	movl	$4, %eax	#, iftmp.610
	jmp	.L491	#
.L490:
	.loc 1 1762 0 discriminator 4
	movl	$2, %eax	#, iftmp.610
.L491:
	.loc 1 1762 0 discriminator 5
	jmp	.L492	#
.L489:
	.loc 1 1762 0 discriminator 2
	movl	$0, %eax	#, iftmp.606
.L492:
	.loc 1 1762 0 discriminator 6
	movw	%ax, -1230(%rbp)	# iftmp.606, list_offset
	.loc 1 1764 0 is_stmt 1 discriminator 6
	movq	active_pps(%rip), %rax	# active_pps, active_pps.612
	movl	196(%rax), %eax	# active_pps.612_181->weighted_bipred_idc, D.21233
	movw	%ax, -1228(%rbp)	# D.21233, apply_weights
	.loc 1 1765 0 discriminator 6
	cmpw	$0, -1228(%rbp)	#, apply_weights
	je	.L493	#,
	.loc 1 1765 0 is_stmt 0 discriminator 1
	cmpl	$0, -1280(%rbp)	#, list
	jne	.L494	#,
	.loc 1 1765 0 discriminator 3
	movq	wbp_weight(%rip), %rax	# wbp_weight, wbp_weight.615
	movswq	-1230(%rbp), %rdx	# list_offset, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21234
	movq	(%rax), %rax	# *_188, D.21235
	movswq	-1276(%rbp), %rdx	# ref, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21235
	movq	(%rax), %rax	# *_193, D.21236
	movq	(%rax), %rax	# *_194, D.21237
	movl	(%rax), %eax	# *_195, D.21228
	jmp	.L496	#
.L494:
	.loc 1 1765 0 discriminator 4
	movq	wbp_weight(%rip), %rax	# wbp_weight, wbp_weight.616
	movswq	-1230(%rbp), %rdx	# list_offset, D.21238
	addq	$1, %rdx	#, D.21238
	salq	$3, %rdx	#, D.21238
	addq	%rdx, %rax	# D.21238, D.21234
	movq	(%rax), %rax	# *_202, D.21235
	movq	(%rax), %rax	# *_203, D.21236
	movswq	-1276(%rbp), %rdx	# ref, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21236
	movq	(%rax), %rax	# *_207, D.21237
	movl	(%rax), %eax	# *_208, D.21228
	jmp	.L496	#
.L493:
	.loc 1 1765 0 discriminator 2
	movl	$1, %eax	#, iftmp.613
.L496:
	.loc 1 1765 0 discriminator 5
	movw	%ax, -1226(%rbp)	# iftmp.613, weightSpic
	.loc 1 1766 0 is_stmt 1 discriminator 5
	cmpw	$0, -1228(%rbp)	#, apply_weights
	je	.L497	#,
	.loc 1 1766 0 is_stmt 0 discriminator 1
	cmpl	$0, -1280(%rbp)	#, list
	jne	.L498	#,
	.loc 1 1766 0 discriminator 3
	movq	wbp_weight(%rip), %rax	# wbp_weight, wbp_weight.619
	movswq	-1230(%rbp), %rdx	# list_offset, D.21238
	addq	$1, %rdx	#, D.21238
	salq	$3, %rdx	#, D.21238
	addq	%rdx, %rax	# D.21238, D.21234
	movq	(%rax), %rax	# *_218, D.21235
	movswq	-1276(%rbp), %rdx	# ref, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21235
	movq	(%rax), %rax	# *_222, D.21236
	movq	(%rax), %rax	# *_223, D.21237
	movl	(%rax), %eax	# *_224, D.21228
	jmp	.L500	#
.L498:
	.loc 1 1766 0 discriminator 4
	movq	wbp_weight(%rip), %rax	# wbp_weight, wbp_weight.620
	movswq	-1230(%rbp), %rdx	# list_offset, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21234
	movq	(%rax), %rax	# *_230, D.21235
	movq	(%rax), %rax	# *_231, D.21236
	movswq	-1276(%rbp), %rdx	# ref, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21236
	movq	(%rax), %rax	# *_235, D.21237
	movl	(%rax), %eax	# *_236, D.21228
	jmp	.L500	#
.L497:
	.loc 1 1766 0 discriminator 2
	movl	$1, %eax	#, iftmp.617
.L500:
	.loc 1 1766 0 discriminator 5
	movw	%ax, -1224(%rbp)	# iftmp.617, weightRpic
	.loc 1 1767 0 is_stmt 1 discriminator 5
	cmpw	$0, -1228(%rbp)	#, apply_weights
	je	.L501	#,
	.loc 1 1767 0 is_stmt 0 discriminator 1
	cmpl	$0, -1280(%rbp)	#, list
	jne	.L502	#,
	.loc 1 1767 0 discriminator 3
	movq	wp_offset(%rip), %rax	# wp_offset, wp_offset.623
	movswq	-1230(%rbp), %rdx	# list_offset, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21235
	movq	(%rax), %rax	# *_245, D.21236
	movswq	-1276(%rbp), %rdx	# ref, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21236
	movq	(%rax), %rax	# *_249, D.21237
	movl	(%rax), %eax	# *_250, D.21228
	jmp	.L504	#
.L502:
	.loc 1 1767 0 discriminator 4
	movq	wp_offset(%rip), %rax	# wp_offset, wp_offset.624
	movswq	-1230(%rbp), %rdx	# list_offset, D.21238
	addq	$1, %rdx	#, D.21238
	salq	$3, %rdx	#, D.21238
	addq	%rdx, %rax	# D.21238, D.21235
	movq	(%rax), %rax	# *_257, D.21236
	movq	(%rax), %rax	# *_258, D.21237
	movl	(%rax), %eax	# *_259, D.21228
	jmp	.L504	#
.L501:
	.loc 1 1767 0 discriminator 2
	movl	$0, %eax	#, iftmp.621
.L504:
	.loc 1 1767 0 discriminator 5
	movw	%ax, -1222(%rbp)	# iftmp.621, offsetSpic
	.loc 1 1768 0 is_stmt 1 discriminator 5
	cmpw	$0, -1228(%rbp)	#, apply_weights
	je	.L505	#,
	.loc 1 1768 0 is_stmt 0 discriminator 1
	cmpl	$0, -1280(%rbp)	#, list
	jne	.L506	#,
	.loc 1 1768 0 discriminator 3
	movq	wp_offset(%rip), %rax	# wp_offset, wp_offset.627
	movswq	-1230(%rbp), %rdx	# list_offset, D.21238
	addq	$1, %rdx	#, D.21238
	salq	$3, %rdx	#, D.21238
	addq	%rdx, %rax	# D.21238, D.21235
	movq	(%rax), %rax	# *_269, D.21236
	movswq	-1276(%rbp), %rdx	# ref, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21236
	movq	(%rax), %rax	# *_273, D.21237
	movl	(%rax), %eax	# *_274, D.21228
	jmp	.L508	#
.L506:
	.loc 1 1768 0 discriminator 4
	movq	wp_offset(%rip), %rax	# wp_offset, wp_offset.628
	movswq	-1230(%rbp), %rdx	# list_offset, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21235
	movq	(%rax), %rax	# *_280, D.21236
	movq	(%rax), %rax	# *_281, D.21237
	movl	(%rax), %eax	# *_282, D.21228
	jmp	.L508	#
.L505:
	.loc 1 1768 0 discriminator 2
	movl	$0, %eax	#, iftmp.625
.L508:
	.loc 1 1768 0 discriminator 5
	movw	%ax, -1220(%rbp)	# iftmp.625, offsetRpic
	.loc 1 1770 0 is_stmt 1 discriminator 5
	movswl	-1220(%rbp), %edx	# offsetRpic, D.21228
	movswl	-1222(%rbp), %eax	# offsetSpic, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	addl	$1, %eax	#, D.21228
	sarl	%eax	# D.21228
	movw	%ax, -1218(%rbp)	# D.21228, offsetBi
	.loc 1 1775 0 discriminator 5
	movq	input(%rip), %rax	# input, input.630
	movl	28(%rax), %eax	# input.630_294->hadamardqpel, D.21228
	testl	%eax, %eax	# D.21228
	jne	.L509	#,
	.loc 1 1775 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.631
	movl	24(%rax), %eax	# input.631_296->hadamard, iftmp.629
	jmp	.L510	#
.L509:
	.loc 1 1775 0 discriminator 2
	movl	$0, %eax	#, iftmp.629
.L510:
	.loc 1 1775 0 discriminator 3
	movl	%eax, -1180(%rbp)	# iftmp.629, halfpelhadamard
	.loc 1 1776 0 is_stmt 1 discriminator 3
	movq	input(%rip), %rax	# input, input.632
	movl	28(%rax), %eax	# input.632_300->hadamardqpel, D.21228
	testl	%eax, %eax	# D.21228
	sete	%al	#, D.21229
	movzbl	%al, %eax	# D.21229, tmp4109
	movl	%eax, -1176(%rbp)	# tmp4109, qpelstart
	.loc 1 1778 0 discriminator 3
	movswl	-1230(%rbp), %edx	# list_offset, D.21228
	movl	-1280(%rbp), %eax	# list, tmp4110
	addl	%edx, %eax	# D.21228, D.21228
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21239
	movswq	-1276(%rbp), %rdx	# ref, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21239
	movq	(%rax), %rax	# *_309, D.21240
	movq	6448(%rax), %rax	# _310->imgY_ups, tmp4112
	movq	%rax, -1160(%rbp)	# tmp4112, ref1_pic
	.loc 1 1779 0 discriminator 3
	cmpl	$0, -1280(%rbp)	#, list
	jne	.L511	#,
	.loc 1 1779 0 is_stmt 0 discriminator 1
	movswl	-1230(%rbp), %eax	# list_offset, D.21228
	addl	$1, %eax	#, iftmp.633
	jmp	.L512	#
.L511:
	.loc 1 1779 0 discriminator 2
	movswl	-1230(%rbp), %eax	# list_offset, iftmp.633
.L512:
	.loc 1 1779 0 discriminator 3
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21239
	movq	(%rax), %rax	# *_315, D.21240
	movq	6448(%rax), %rax	# _316->imgY_ups, tmp4114
	movq	%rax, -1152(%rbp)	# tmp4114, ref2_pic
	.loc 1 1781 0 is_stmt 1 discriminator 3
	movswl	-1230(%rbp), %edx	# list_offset, D.21228
	movl	-1280(%rbp), %eax	# list, tmp4115
	addl	%edx, %eax	# D.21228, D.21228
	cltq
	movq	listX(,%rax,8), %rax	# listX, D.21239
	movswq	-1276(%rbp), %rdx	# ref, D.21231
	salq	$3, %rdx	#, D.21231
	addq	%rdx, %rax	# D.21231, D.21239
	movq	(%rax), %rax	# *_323, tmp4117
	movq	%rax, -1144(%rbp)	# tmp4117, ref_picture
	.loc 1 1784 0 discriminator 3
	movq	-1144(%rbp), %rax	# ref_picture, tmp4118
	movl	6392(%rax), %eax	# ref_picture_324->size_x, tmp4119
	movl	%eax, -1172(%rbp)	# tmp4119, img_width
	.loc 1 1785 0 discriminator 3
	movq	-1144(%rbp), %rax	# ref_picture, tmp4120
	movl	6396(%rax), %eax	# ref_picture_324->size_y, tmp4121
	movl	%eax, -1168(%rbp)	# tmp4121, img_height
	.loc 1 1787 0 discriminator 3
	movq	-1144(%rbp), %rax	# ref_picture, tmp4122
	movl	6392(%rax), %edx	# ref_picture_324->size_x, D.21228
	movswl	-1242(%rbp), %eax	# blocksize_x, D.21228
	subl	%eax, %edx	# D.21228, D.21228
	movl	%edx, %eax	# D.21228, D.21228
	addl	$1, %eax	#, D.21228
	sall	$2, %eax	#, D.21228
	movw	%ax, -1216(%rbp)	# D.21228, max_pos_x4
	.loc 1 1788 0 discriminator 3
	movq	-1144(%rbp), %rax	# ref_picture, tmp4123
	movl	6396(%rax), %edx	# ref_picture_324->size_y, D.21228
	movswl	-1240(%rbp), %eax	# blocksize_y, D.21228
	subl	%eax, %edx	# D.21228, D.21228
	movl	%edx, %eax	# D.21228, D.21228
	addl	$1, %eax	#, D.21228
	sall	$2, %eax	#, D.21228
	movw	%ax, -1214(%rbp)	# D.21228, max_pos_y4
	.loc 1 1798 0 discriminator 3
	movq	32(%rbp), %rax	# mv_x, tmp4124
	movzwl	(%rax), %eax	# *mv_x_339(D), D.21241
	cwtl
	sall	$2, %eax	#, D.21228
	movl	%eax, %edx	# D.21228, D.21241
	movq	32(%rbp), %rax	# mv_x, tmp4125
	movw	%dx, (%rax)	# D.21241, *mv_x_339(D)
	.loc 1 1799 0 discriminator 3
	movq	40(%rbp), %rax	# mv_y, tmp4126
	movzwl	(%rax), %eax	# *mv_y_344(D), D.21241
	cwtl
	sall	$2, %eax	#, D.21228
	movl	%eax, %edx	# D.21228, D.21241
	movq	40(%rbp), %rax	# mv_y, tmp4127
	movw	%dx, (%rax)	# D.21241, *mv_y_344(D)
	.loc 1 1801 0 discriminator 3
	movswl	-1238(%rbp), %edx	# pic4_pix_x, D.21228
	movq	32(%rbp), %rax	# mv_x, tmp4128
	movzwl	(%rax), %eax	# *mv_x_339(D), D.21241
	cwtl
	addl	%edx, %eax	# D.21228, D.21228
	cmpl	$1, %eax	#, D.21228
	jle	.L513	#,
	.loc 1 1801 0 is_stmt 0 discriminator 1
	movswl	-1238(%rbp), %edx	# pic4_pix_x, D.21228
	movq	32(%rbp), %rax	# mv_x, tmp4129
	movzwl	(%rax), %eax	# *mv_x_339(D), D.21241
	cwtl
	addl	%eax, %edx	# D.21228, D.21228
	movswl	-1216(%rbp), %eax	# max_pos_x4, D.21228
	subl	$2, %eax	#, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jge	.L513	#,
	.loc 1 1802 0 is_stmt 1 discriminator 1
	movswl	-1236(%rbp), %edx	# pic4_pix_y, D.21228
	movq	40(%rbp), %rax	# mv_y, tmp4130
	movzwl	(%rax), %eax	# *mv_y_344(D), D.21241
	cwtl
	addl	%edx, %eax	# D.21228, D.21228
	.loc 1 1801 0 discriminator 1
	cmpl	$1, %eax	#, D.21228
	jle	.L513	#,
	.loc 1 1802 0
	movswl	-1236(%rbp), %edx	# pic4_pix_y, D.21228
	movq	40(%rbp), %rax	# mv_y, tmp4131
	movzwl	(%rax), %eax	# *mv_y_344(D), D.21241
	cwtl
	addl	%eax, %edx	# D.21228, D.21228
	movswl	-1214(%rbp), %eax	# max_pos_y4, D.21228
	subl	$2, %eax	#, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jge	.L513	#,
	.loc 1 1804 0
	movq	$FastPelY_14, PelY_14(%rip)	#, PelY_14
	jmp	.L514	#
.L513:
	.loc 1 1808 0
	movq	$UMVPelY_14, PelY_14(%rip)	#, PelY_14
.L514:
	.loc 1 1811 0
	movswl	-1238(%rbp), %edx	# pic4_pix_x, D.21228
	movq	48(%rbp), %rax	# s_mv_x, tmp4132
	movzwl	(%rax), %eax	# *s_mv_x_370(D), D.21241
	cwtl
	addl	%edx, %eax	# D.21228, D.21228
	cmpl	$1, %eax	#, D.21228
	jle	.L515	#,
	.loc 1 1811 0 is_stmt 0 discriminator 1
	movswl	-1238(%rbp), %edx	# pic4_pix_x, D.21228
	movq	48(%rbp), %rax	# s_mv_x, tmp4133
	movzwl	(%rax), %eax	# *s_mv_x_370(D), D.21241
	cwtl
	addl	%eax, %edx	# D.21228, D.21228
	movswl	-1216(%rbp), %eax	# max_pos_x4, D.21228
	subl	$2, %eax	#, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jge	.L515	#,
	.loc 1 1812 0 is_stmt 1 discriminator 1
	movswl	-1236(%rbp), %edx	# pic4_pix_y, D.21228
	movq	56(%rbp), %rax	# s_mv_y, tmp4134
	movzwl	(%rax), %eax	# *s_mv_y_381(D), D.21241
	cwtl
	addl	%edx, %eax	# D.21228, D.21228
	.loc 1 1811 0 discriminator 1
	cmpl	$1, %eax	#, D.21228
	jle	.L515	#,
	.loc 1 1812 0
	movswl	-1236(%rbp), %edx	# pic4_pix_y, D.21228
	movq	56(%rbp), %rax	# s_mv_y, tmp4135
	movzwl	(%rax), %eax	# *s_mv_y_381(D), D.21241
	cwtl
	addl	%eax, %edx	# D.21228, D.21228
	movswl	-1214(%rbp), %eax	# max_pos_y4, D.21228
	subl	$2, %eax	#, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jge	.L515	#,
	.loc 1 1814 0
	movq	$FastPelY_14, PelY_14b(%rip)	#, PelY_14b
	jmp	.L516	#
.L515:
	.loc 1 1818 0
	movq	$UMVPelY_14, PelY_14b(%rip)	#, PelY_14b
.L516:
	.loc 1 1822 0
	movw	$0, -1254(%rbp)	#, best_pos
	movzwl	-1234(%rbp), %eax	# min_pos2, tmp4136
	movw	%ax, -1256(%rbp)	# tmp4136, pos
	jmp	.L517	#
.L606:
	.loc 1 1824 0
	movq	32(%rbp), %rax	# mv_x, tmp4137
	movzwl	(%rax), %eax	# *mv_x_339(D), D.21241
	movq	spiral_search_x(%rip), %rdx	# spiral_search_x, spiral_search_x.634
	movswq	-1256(%rbp), %rcx	# pos, D.21231
	salq	$2, %rcx	#, D.21231
	addq	%rcx, %rdx	# D.21231, D.21237
	movl	(%rdx), %edx	# *_399, D.21228
	addl	%edx, %edx	# D.21242
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1212(%rbp)	# D.21242, cand_mv_x
	.loc 1 1825 0
	movq	40(%rbp), %rax	# mv_y, tmp4138
	movzwl	(%rax), %eax	# *mv_y_344(D), D.21241
	movq	spiral_search_y(%rip), %rdx	# spiral_search_y, spiral_search_y.635
	movswq	-1256(%rbp), %rcx	# pos, D.21231
	salq	$2, %rcx	#, D.21231
	addq	%rcx, %rdx	# D.21231, D.21237
	movl	(%rdx), %edx	# *_410, D.21228
	addl	%edx, %edx	# D.21242
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1210(%rbp)	# D.21242, cand_mv_y
	.loc 1 1828 0
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.636
	movswl	-1212(%rbp), %esi	# cand_mv_x, D.21228
	movswl	-1244(%rbp), %eax	# mv_shift, D.21228
	movl	%eax, %ecx	# D.21228, tmp5173
	sall	%cl, %esi	# tmp5173, D.21228
	movl	%esi, %ecx	# D.21228, D.21228
	movswl	-1296(%rbp), %eax	# pred_mv_x, D.21228
	subl	%eax, %ecx	# D.21228, D.21228
	movl	%ecx, %eax	# D.21228, D.21228
	cltq
	salq	$2, %rax	#, D.21231
	addq	%rdx, %rax	# mvbits.636, D.21237
	movl	(%rax), %edx	# *_425, D.21228
	movq	mvbits(%rip), %rsi	# mvbits, mvbits.637
	movswl	-1210(%rbp), %edi	# cand_mv_y, D.21228
	movswl	-1244(%rbp), %eax	# mv_shift, D.21228
	movl	%eax, %ecx	# D.21228, tmp5176
	sall	%cl, %edi	# tmp5176, D.21228
	movl	%edi, %ecx	# D.21228, D.21228
	movswl	-1300(%rbp), %eax	# pred_mv_y, D.21228
	subl	%eax, %ecx	# D.21228, D.21228
	movl	%ecx, %eax	# D.21228, D.21228
	cltq
	salq	$2, %rax	#, D.21231
	addq	%rsi, %rax	# mvbits.637, D.21237
	movl	(%rax), %eax	# *_436, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	imull	-1184(%rbp), %eax	# lambda_factor, D.21228
	sarl	$16, %eax	#, D.21228
	movw	%ax, -1252(%rbp)	# D.21228, mcost
	.loc 1 1831 0
	movw	$0, -1248(%rbp)	#, y0
	movw	$0, -1250(%rbp)	#, abort_search
	jmp	.L518	#
.L603:
	.loc 1 1833 0
	movl	-1288(%rbp), %eax	# pic_pix_y, tmp4139
	movl	%eax, %edx	# tmp4139, D.21242
	movzwl	-1248(%rbp), %eax	# y0, y0.638
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movq	56(%rbp), %rax	# s_mv_y, tmp4140
	movzwl	(%rax), %eax	# *s_mv_y_381(D), D.21241
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1208(%rbp)	# D.21242, sy0
	.loc 1 1834 0
	movl	-1288(%rbp), %eax	# pic_pix_y, tmp4141
	movl	%eax, %edx	# tmp4141, D.21242
	movzwl	-1248(%rbp), %eax	# y0, y0.639
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movzwl	-1210(%rbp), %eax	# cand_mv_y, cand_mv_y.640
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1206(%rbp)	# D.21242, ry0
	.loc 1 1836 0
	cmpw	$0, -1228(%rbp)	#, apply_weights
	je	.L519	#,
	.loc 1 1838 0
	movw	$0, -1246(%rbp)	#, x0
	jmp	.L520	#
.L592:
	.loc 1 1840 0
	movl	-1284(%rbp), %eax	# pic_pix_x, tmp4142
	movl	%eax, %edx	# tmp4142, D.21242
	movzwl	-1246(%rbp), %eax	# x0, x0.641
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movq	48(%rbp), %rax	# s_mv_x, tmp4143
	movzwl	(%rax), %eax	# *s_mv_x_370(D), D.21241
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1204(%rbp)	# D.21242, sx0
	.loc 1 1841 0
	movl	-1284(%rbp), %eax	# pic_pix_x, tmp4144
	movl	%eax, %edx	# tmp4144, D.21242
	movzwl	-1246(%rbp), %eax	# x0, x0.642
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movzwl	-1212(%rbp), %eax	# cand_mv_x, cand_mv_x.643
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1202(%rbp)	# D.21242, rx0
	.loc 1 1842 0
	leaq	-1120(%rbp), %rax	#, tmp4145
	movq	%rax, -1136(%rbp)	# tmp4145, d
	.loc 1 1844 0
	movzwl	-1208(%rbp), %eax	# sy0, tmp4146
	movw	%ax, -1200(%rbp)	# tmp4146, sy
	.loc 1 1845 0
	movzwl	-1206(%rbp), %eax	# ry0, tmp4147
	movw	%ax, -1198(%rbp)	# tmp4147, ry
	.loc 1 1846 0
	movswq	-1248(%rbp), %rax	# y0, D.21231
	leaq	0(,%rax,8), %rdx	#, D.21231
	movq	-1272(%rbp), %rax	# orig_pic, tmp4148
	addq	%rdx, %rax	# D.21231, D.21243
	movq	(%rax), %rax	# *_481, tmp4149
	movq	%rax, -1128(%rbp)	# tmp4149, orig_line
	.loc 1 1847 0
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.645
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4150
	movl	-1168(%rbp), %ecx	# img_height, tmp4151
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4152
	call	*%rax	# PelY_14b.645
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.646
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4153
	movl	-1168(%rbp), %ecx	# img_height, tmp4154
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4155
	call	*%rax	# PelY_14.646
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.647
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.648
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5178
	sarl	%cl, %edx	# tmp5178, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L521	#,
	.loc 1 1847 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.650
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4156
	movl	-1168(%rbp), %ecx	# img_height, tmp4157
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4158
	call	*%rax	# PelY_14b.650
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.651
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4159
	movl	-1168(%rbp), %ecx	# img_height, tmp4160
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4161
	call	*%rax	# PelY_14.651
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.652
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.653
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5179
	sarl	%cl, %edx	# tmp5179, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.654
	movl	72684(%rax), %eax	# img.654_529->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L522	#,
	movq	img(%rip), %rax	# img, img.655
	movl	72684(%rax), %eax	# img.655_531->max_imgpel_value, iftmp.649
	jmp	.L524	#
.L522:
	.loc 1 1847 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.656
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4162
	movl	-1168(%rbp), %ecx	# img_height, tmp4163
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4164
	call	*%rax	# PelY_14b.656
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.657
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4165
	movl	-1168(%rbp), %ecx	# img_height, tmp4166
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4167
	call	*%rax	# PelY_14.657
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.658
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.659
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5180
	sarl	%cl, %edx	# tmp5180, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.649
	jmp	.L524	#
.L521:
	movl	$0, %eax	#, iftmp.644
.L524:
	.loc 1 1847 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.644, weightedpel
	.loc 1 1850 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.660
	leaq	4(%rax), %rdx	#, tmp4168
	movq	%rdx, -1136(%rbp)	# tmp4168, d
	movswq	-1246(%rbp), %rdx	# x0, D.21231
	leaq	(%rdx,%rdx), %rcx	#, D.21231
	movq	-1128(%rbp), %rdx	# orig_line, tmp4169
	addq	%rcx, %rdx	# D.21231, D.21245
	movzwl	(%rdx), %edx	# *_563, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.660_559
	.loc 1 1851 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.662
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4170
	movl	-1168(%rbp), %edx	# img_height, tmp4171
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4172
	movl	%ecx, %r8d	# tmp4170,
	movl	%edx, %ecx	# tmp4171,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.662
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.663
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4173
	movl	-1168(%rbp), %edx	# img_height, tmp4174
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4175
	movl	%ecx, %r8d	# tmp4173,
	movl	%edx, %ecx	# tmp4174,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.663
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.664
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.665
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5181
	sarl	%cl, %edx	# tmp5181, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L525	#,
	.loc 1 1851 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.667
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4176
	movl	-1168(%rbp), %edx	# img_height, tmp4177
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4178
	movl	%ecx, %r8d	# tmp4176,
	movl	%edx, %ecx	# tmp4177,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.667
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.668
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4179
	movl	-1168(%rbp), %edx	# img_height, tmp4180
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4181
	movl	%ecx, %r8d	# tmp4179,
	movl	%edx, %ecx	# tmp4180,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.668
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.669
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.670
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5182
	sarl	%cl, %edx	# tmp5182, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.671
	movl	72684(%rax), %eax	# img.671_617->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L526	#,
	movq	img(%rip), %rax	# img, img.672
	movl	72684(%rax), %eax	# img.672_619->max_imgpel_value, iftmp.666
	jmp	.L528	#
.L526:
	.loc 1 1851 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.673
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4182
	movl	-1168(%rbp), %edx	# img_height, tmp4183
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4184
	movl	%ecx, %r8d	# tmp4182,
	movl	%edx, %ecx	# tmp4183,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.673
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.674
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4185
	movl	-1168(%rbp), %edx	# img_height, tmp4186
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4187
	movl	%ecx, %r8d	# tmp4185,
	movl	%edx, %ecx	# tmp4186,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.674
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.675
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.676
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5183
	sarl	%cl, %edx	# tmp5183, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.666
	jmp	.L528	#
.L525:
	movl	$0, %eax	#, iftmp.661
.L528:
	.loc 1 1851 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.661, weightedpel
	.loc 1 1854 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.677
	leaq	4(%rax), %rdx	#, tmp4188
	movq	%rdx, -1136(%rbp)	# tmp4188, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$1, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4189
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_654, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.677_649
	.loc 1 1855 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.679
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4190
	movl	-1168(%rbp), %edx	# img_height, tmp4191
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4192
	movl	%ecx, %r8d	# tmp4190,
	movl	%edx, %ecx	# tmp4191,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.679
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.680
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4193
	movl	-1168(%rbp), %edx	# img_height, tmp4194
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4195
	movl	%ecx, %r8d	# tmp4193,
	movl	%edx, %ecx	# tmp4194,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.680
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.681
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.682
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5184
	sarl	%cl, %edx	# tmp5184, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L529	#,
	.loc 1 1855 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.684
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4196
	movl	-1168(%rbp), %edx	# img_height, tmp4197
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4198
	movl	%ecx, %r8d	# tmp4196,
	movl	%edx, %ecx	# tmp4197,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.684
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.685
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4199
	movl	-1168(%rbp), %edx	# img_height, tmp4200
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4201
	movl	%ecx, %r8d	# tmp4199,
	movl	%edx, %ecx	# tmp4200,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.685
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.686
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.687
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5185
	sarl	%cl, %edx	# tmp5185, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.688
	movl	72684(%rax), %eax	# img.688_708->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L530	#,
	movq	img(%rip), %rax	# img, img.689
	movl	72684(%rax), %eax	# img.689_710->max_imgpel_value, iftmp.683
	jmp	.L532	#
.L530:
	.loc 1 1855 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.690
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4202
	movl	-1168(%rbp), %edx	# img_height, tmp4203
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4204
	movl	%ecx, %r8d	# tmp4202,
	movl	%edx, %ecx	# tmp4203,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.690
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.691
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4205
	movl	-1168(%rbp), %edx	# img_height, tmp4206
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4207
	movl	%ecx, %r8d	# tmp4205,
	movl	%edx, %ecx	# tmp4206,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.691
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.692
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.693
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5186
	sarl	%cl, %edx	# tmp5186, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.683
	jmp	.L532	#
.L529:
	movl	$0, %eax	#, iftmp.678
.L532:
	.loc 1 1855 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.678, weightedpel
	.loc 1 1858 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.694
	leaq	4(%rax), %rdx	#, tmp4208
	movq	%rdx, -1136(%rbp)	# tmp4208, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$2, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4209
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_745, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.694_740
	.loc 1 1859 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.696
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4210
	movl	-1168(%rbp), %edx	# img_height, tmp4211
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4212
	movl	%ecx, %r8d	# tmp4210,
	movl	%edx, %ecx	# tmp4211,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.696
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.697
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4213
	movl	-1168(%rbp), %edx	# img_height, tmp4214
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4215
	movl	%ecx, %r8d	# tmp4213,
	movl	%edx, %ecx	# tmp4214,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.697
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.698
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.699
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5187
	sarl	%cl, %edx	# tmp5187, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L533	#,
	.loc 1 1859 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.701
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4216
	movl	-1168(%rbp), %edx	# img_height, tmp4217
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4218
	movl	%ecx, %r8d	# tmp4216,
	movl	%edx, %ecx	# tmp4217,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.701
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.702
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4219
	movl	-1168(%rbp), %edx	# img_height, tmp4220
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4221
	movl	%ecx, %r8d	# tmp4219,
	movl	%edx, %ecx	# tmp4220,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.702
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.703
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.704
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5188
	sarl	%cl, %edx	# tmp5188, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.705
	movl	72684(%rax), %eax	# img.705_799->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L534	#,
	movq	img(%rip), %rax	# img, img.706
	movl	72684(%rax), %eax	# img.706_801->max_imgpel_value, iftmp.700
	jmp	.L536	#
.L534:
	.loc 1 1859 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.707
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4222
	movl	-1168(%rbp), %edx	# img_height, tmp4223
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4224
	movl	%ecx, %r8d	# tmp4222,
	movl	%edx, %ecx	# tmp4223,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.707
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.708
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4225
	movl	-1168(%rbp), %edx	# img_height, tmp4226
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4227
	movl	%ecx, %r8d	# tmp4225,
	movl	%edx, %ecx	# tmp4226,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.708
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.709
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.710
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5189
	sarl	%cl, %edx	# tmp5189, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.700
	jmp	.L536	#
.L533:
	movl	$0, %eax	#, iftmp.695
.L536:
	.loc 1 1859 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.695, weightedpel
	.loc 1 1862 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.711
	leaq	4(%rax), %rdx	#, tmp4228
	movq	%rdx, -1136(%rbp)	# tmp4228, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$3, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4229
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_836, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.711_831
	.loc 1 1864 0 discriminator 3
	movzwl	-1208(%rbp), %eax	# sy0, sy0.712
	addl	$4, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 1865 0 discriminator 3
	movzwl	-1206(%rbp), %eax	# ry0, ry0.713
	addl	$4, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 1866 0 discriminator 3
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp4230
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_849, tmp4231
	movq	%rax, -1128(%rbp)	# tmp4231, orig_line
	.loc 1 1867 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.715
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4232
	movl	-1168(%rbp), %ecx	# img_height, tmp4233
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4234
	call	*%rax	# PelY_14b.715
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.716
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4235
	movl	-1168(%rbp), %ecx	# img_height, tmp4236
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4237
	call	*%rax	# PelY_14.716
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.717
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.718
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5190
	sarl	%cl, %edx	# tmp5190, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L537	#,
	.loc 1 1867 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.720
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4238
	movl	-1168(%rbp), %ecx	# img_height, tmp4239
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4240
	call	*%rax	# PelY_14b.720
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.721
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4241
	movl	-1168(%rbp), %ecx	# img_height, tmp4242
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4243
	call	*%rax	# PelY_14.721
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.722
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.723
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5191
	sarl	%cl, %edx	# tmp5191, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.724
	movl	72684(%rax), %eax	# img.724_897->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L538	#,
	movq	img(%rip), %rax	# img, img.725
	movl	72684(%rax), %eax	# img.725_899->max_imgpel_value, iftmp.719
	jmp	.L540	#
.L538:
	.loc 1 1867 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.726
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4244
	movl	-1168(%rbp), %ecx	# img_height, tmp4245
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4246
	call	*%rax	# PelY_14b.726
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.727
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4247
	movl	-1168(%rbp), %ecx	# img_height, tmp4248
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4249
	call	*%rax	# PelY_14.727
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.728
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.729
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5192
	sarl	%cl, %edx	# tmp5192, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.719
	jmp	.L540	#
.L537:
	movl	$0, %eax	#, iftmp.714
.L540:
	.loc 1 1867 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.714, weightedpel
	.loc 1 1870 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.730
	leaq	4(%rax), %rdx	#, tmp4250
	movq	%rdx, -1136(%rbp)	# tmp4250, d
	movswq	-1246(%rbp), %rdx	# x0, D.21231
	leaq	(%rdx,%rdx), %rcx	#, D.21231
	movq	-1128(%rbp), %rdx	# orig_line, tmp4251
	addq	%rcx, %rdx	# D.21231, D.21245
	movzwl	(%rdx), %edx	# *_931, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.730_927
	.loc 1 1871 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.732
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4252
	movl	-1168(%rbp), %edx	# img_height, tmp4253
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4254
	movl	%ecx, %r8d	# tmp4252,
	movl	%edx, %ecx	# tmp4253,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.732
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.733
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4255
	movl	-1168(%rbp), %edx	# img_height, tmp4256
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4257
	movl	%ecx, %r8d	# tmp4255,
	movl	%edx, %ecx	# tmp4256,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.733
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.734
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.735
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5193
	sarl	%cl, %edx	# tmp5193, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L541	#,
	.loc 1 1871 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.737
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4258
	movl	-1168(%rbp), %edx	# img_height, tmp4259
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4260
	movl	%ecx, %r8d	# tmp4258,
	movl	%edx, %ecx	# tmp4259,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.737
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.738
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4261
	movl	-1168(%rbp), %edx	# img_height, tmp4262
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4263
	movl	%ecx, %r8d	# tmp4261,
	movl	%edx, %ecx	# tmp4262,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.738
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.739
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.740
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5194
	sarl	%cl, %edx	# tmp5194, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.741
	movl	72684(%rax), %eax	# img.741_985->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L542	#,
	movq	img(%rip), %rax	# img, img.742
	movl	72684(%rax), %eax	# img.742_987->max_imgpel_value, iftmp.736
	jmp	.L544	#
.L542:
	.loc 1 1871 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.743
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4264
	movl	-1168(%rbp), %edx	# img_height, tmp4265
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4266
	movl	%ecx, %r8d	# tmp4264,
	movl	%edx, %ecx	# tmp4265,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.743
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.744
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4267
	movl	-1168(%rbp), %edx	# img_height, tmp4268
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4269
	movl	%ecx, %r8d	# tmp4267,
	movl	%edx, %ecx	# tmp4268,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.744
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.745
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.746
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5195
	sarl	%cl, %edx	# tmp5195, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.736
	jmp	.L544	#
.L541:
	movl	$0, %eax	#, iftmp.731
.L544:
	.loc 1 1871 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.731, weightedpel
	.loc 1 1874 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.747
	leaq	4(%rax), %rdx	#, tmp4270
	movq	%rdx, -1136(%rbp)	# tmp4270, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$1, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4271
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_1022, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.747_1017
	.loc 1 1875 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.749
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4272
	movl	-1168(%rbp), %edx	# img_height, tmp4273
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4274
	movl	%ecx, %r8d	# tmp4272,
	movl	%edx, %ecx	# tmp4273,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.749
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.750
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4275
	movl	-1168(%rbp), %edx	# img_height, tmp4276
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4277
	movl	%ecx, %r8d	# tmp4275,
	movl	%edx, %ecx	# tmp4276,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.750
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.751
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.752
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5196
	sarl	%cl, %edx	# tmp5196, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L545	#,
	.loc 1 1875 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.754
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4278
	movl	-1168(%rbp), %edx	# img_height, tmp4279
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4280
	movl	%ecx, %r8d	# tmp4278,
	movl	%edx, %ecx	# tmp4279,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.754
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.755
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4281
	movl	-1168(%rbp), %edx	# img_height, tmp4282
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4283
	movl	%ecx, %r8d	# tmp4281,
	movl	%edx, %ecx	# tmp4282,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.755
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.756
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.757
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5197
	sarl	%cl, %edx	# tmp5197, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.758
	movl	72684(%rax), %eax	# img.758_1076->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L546	#,
	movq	img(%rip), %rax	# img, img.759
	movl	72684(%rax), %eax	# img.759_1078->max_imgpel_value, iftmp.753
	jmp	.L548	#
.L546:
	.loc 1 1875 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.760
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4284
	movl	-1168(%rbp), %edx	# img_height, tmp4285
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4286
	movl	%ecx, %r8d	# tmp4284,
	movl	%edx, %ecx	# tmp4285,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.760
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.761
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4287
	movl	-1168(%rbp), %edx	# img_height, tmp4288
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4289
	movl	%ecx, %r8d	# tmp4287,
	movl	%edx, %ecx	# tmp4288,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.761
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.762
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.763
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5198
	sarl	%cl, %edx	# tmp5198, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.753
	jmp	.L548	#
.L545:
	movl	$0, %eax	#, iftmp.748
.L548:
	.loc 1 1875 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.748, weightedpel
	.loc 1 1878 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.764
	leaq	4(%rax), %rdx	#, tmp4290
	movq	%rdx, -1136(%rbp)	# tmp4290, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$2, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4291
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_1113, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.764_1108
	.loc 1 1879 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.766
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4292
	movl	-1168(%rbp), %edx	# img_height, tmp4293
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4294
	movl	%ecx, %r8d	# tmp4292,
	movl	%edx, %ecx	# tmp4293,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.766
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.767
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4295
	movl	-1168(%rbp), %edx	# img_height, tmp4296
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4297
	movl	%ecx, %r8d	# tmp4295,
	movl	%edx, %ecx	# tmp4296,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.767
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.768
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.769
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5199
	sarl	%cl, %edx	# tmp5199, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L549	#,
	.loc 1 1879 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.771
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4298
	movl	-1168(%rbp), %edx	# img_height, tmp4299
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4300
	movl	%ecx, %r8d	# tmp4298,
	movl	%edx, %ecx	# tmp4299,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.771
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.772
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4301
	movl	-1168(%rbp), %edx	# img_height, tmp4302
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4303
	movl	%ecx, %r8d	# tmp4301,
	movl	%edx, %ecx	# tmp4302,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.772
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.773
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.774
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5200
	sarl	%cl, %edx	# tmp5200, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.775
	movl	72684(%rax), %eax	# img.775_1167->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L550	#,
	movq	img(%rip), %rax	# img, img.776
	movl	72684(%rax), %eax	# img.776_1169->max_imgpel_value, iftmp.770
	jmp	.L552	#
.L550:
	.loc 1 1879 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.777
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4304
	movl	-1168(%rbp), %edx	# img_height, tmp4305
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4306
	movl	%ecx, %r8d	# tmp4304,
	movl	%edx, %ecx	# tmp4305,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.777
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.778
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4307
	movl	-1168(%rbp), %edx	# img_height, tmp4308
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4309
	movl	%ecx, %r8d	# tmp4307,
	movl	%edx, %ecx	# tmp4308,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.778
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.779
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.780
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5201
	sarl	%cl, %edx	# tmp5201, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.770
	jmp	.L552	#
.L549:
	movl	$0, %eax	#, iftmp.765
.L552:
	.loc 1 1879 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.765, weightedpel
	.loc 1 1882 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.781
	leaq	4(%rax), %rdx	#, tmp4310
	movq	%rdx, -1136(%rbp)	# tmp4310, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$3, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4311
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_1204, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.781_1199
	.loc 1 1884 0 discriminator 3
	movzwl	-1208(%rbp), %eax	# sy0, sy0.782
	addl	$8, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 1885 0 discriminator 3
	movzwl	-1206(%rbp), %eax	# ry0, ry0.783
	addl	$8, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 1886 0 discriminator 3
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp4312
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_1217, tmp4313
	movq	%rax, -1128(%rbp)	# tmp4313, orig_line
	.loc 1 1887 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.785
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4314
	movl	-1168(%rbp), %ecx	# img_height, tmp4315
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4316
	call	*%rax	# PelY_14b.785
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.786
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4317
	movl	-1168(%rbp), %ecx	# img_height, tmp4318
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4319
	call	*%rax	# PelY_14.786
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.787
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.788
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5202
	sarl	%cl, %edx	# tmp5202, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L553	#,
	.loc 1 1887 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.790
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4320
	movl	-1168(%rbp), %ecx	# img_height, tmp4321
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4322
	call	*%rax	# PelY_14b.790
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.791
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4323
	movl	-1168(%rbp), %ecx	# img_height, tmp4324
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4325
	call	*%rax	# PelY_14.791
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.792
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.793
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5203
	sarl	%cl, %edx	# tmp5203, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.794
	movl	72684(%rax), %eax	# img.794_1265->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L554	#,
	movq	img(%rip), %rax	# img, img.795
	movl	72684(%rax), %eax	# img.795_1267->max_imgpel_value, iftmp.789
	jmp	.L556	#
.L554:
	.loc 1 1887 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.796
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4326
	movl	-1168(%rbp), %ecx	# img_height, tmp4327
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4328
	call	*%rax	# PelY_14b.796
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.797
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4329
	movl	-1168(%rbp), %ecx	# img_height, tmp4330
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4331
	call	*%rax	# PelY_14.797
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.798
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.799
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5204
	sarl	%cl, %edx	# tmp5204, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.789
	jmp	.L556	#
.L553:
	movl	$0, %eax	#, iftmp.784
.L556:
	.loc 1 1887 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.784, weightedpel
	.loc 1 1890 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.800
	leaq	4(%rax), %rdx	#, tmp4332
	movq	%rdx, -1136(%rbp)	# tmp4332, d
	movswq	-1246(%rbp), %rdx	# x0, D.21231
	leaq	(%rdx,%rdx), %rcx	#, D.21231
	movq	-1128(%rbp), %rdx	# orig_line, tmp4333
	addq	%rcx, %rdx	# D.21231, D.21245
	movzwl	(%rdx), %edx	# *_1299, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.800_1295
	.loc 1 1891 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.802
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4334
	movl	-1168(%rbp), %edx	# img_height, tmp4335
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4336
	movl	%ecx, %r8d	# tmp4334,
	movl	%edx, %ecx	# tmp4335,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.802
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.803
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4337
	movl	-1168(%rbp), %edx	# img_height, tmp4338
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4339
	movl	%ecx, %r8d	# tmp4337,
	movl	%edx, %ecx	# tmp4338,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.803
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.804
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.805
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5205
	sarl	%cl, %edx	# tmp5205, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L557	#,
	.loc 1 1891 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.807
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4340
	movl	-1168(%rbp), %edx	# img_height, tmp4341
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4342
	movl	%ecx, %r8d	# tmp4340,
	movl	%edx, %ecx	# tmp4341,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.807
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.808
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4343
	movl	-1168(%rbp), %edx	# img_height, tmp4344
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4345
	movl	%ecx, %r8d	# tmp4343,
	movl	%edx, %ecx	# tmp4344,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.808
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.809
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.810
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5206
	sarl	%cl, %edx	# tmp5206, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.811
	movl	72684(%rax), %eax	# img.811_1353->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L558	#,
	movq	img(%rip), %rax	# img, img.812
	movl	72684(%rax), %eax	# img.812_1355->max_imgpel_value, iftmp.806
	jmp	.L560	#
.L558:
	.loc 1 1891 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.813
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4346
	movl	-1168(%rbp), %edx	# img_height, tmp4347
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4348
	movl	%ecx, %r8d	# tmp4346,
	movl	%edx, %ecx	# tmp4347,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.813
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.814
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4349
	movl	-1168(%rbp), %edx	# img_height, tmp4350
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4351
	movl	%ecx, %r8d	# tmp4349,
	movl	%edx, %ecx	# tmp4350,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.814
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.815
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.816
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5207
	sarl	%cl, %edx	# tmp5207, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.806
	jmp	.L560	#
.L557:
	movl	$0, %eax	#, iftmp.801
.L560:
	.loc 1 1891 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.801, weightedpel
	.loc 1 1894 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.817
	leaq	4(%rax), %rdx	#, tmp4352
	movq	%rdx, -1136(%rbp)	# tmp4352, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$1, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4353
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_1390, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.817_1385
	.loc 1 1895 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.819
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4354
	movl	-1168(%rbp), %edx	# img_height, tmp4355
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4356
	movl	%ecx, %r8d	# tmp4354,
	movl	%edx, %ecx	# tmp4355,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.819
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.820
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4357
	movl	-1168(%rbp), %edx	# img_height, tmp4358
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4359
	movl	%ecx, %r8d	# tmp4357,
	movl	%edx, %ecx	# tmp4358,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.820
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.821
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.822
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5208
	sarl	%cl, %edx	# tmp5208, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L561	#,
	.loc 1 1895 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.824
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4360
	movl	-1168(%rbp), %edx	# img_height, tmp4361
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4362
	movl	%ecx, %r8d	# tmp4360,
	movl	%edx, %ecx	# tmp4361,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.824
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.825
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4363
	movl	-1168(%rbp), %edx	# img_height, tmp4364
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4365
	movl	%ecx, %r8d	# tmp4363,
	movl	%edx, %ecx	# tmp4364,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.825
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.826
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.827
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5209
	sarl	%cl, %edx	# tmp5209, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.828
	movl	72684(%rax), %eax	# img.828_1444->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L562	#,
	movq	img(%rip), %rax	# img, img.829
	movl	72684(%rax), %eax	# img.829_1446->max_imgpel_value, iftmp.823
	jmp	.L564	#
.L562:
	.loc 1 1895 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.830
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4366
	movl	-1168(%rbp), %edx	# img_height, tmp4367
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4368
	movl	%ecx, %r8d	# tmp4366,
	movl	%edx, %ecx	# tmp4367,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.830
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.831
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4369
	movl	-1168(%rbp), %edx	# img_height, tmp4370
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4371
	movl	%ecx, %r8d	# tmp4369,
	movl	%edx, %ecx	# tmp4370,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.831
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.832
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.833
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5210
	sarl	%cl, %edx	# tmp5210, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.823
	jmp	.L564	#
.L561:
	movl	$0, %eax	#, iftmp.818
.L564:
	.loc 1 1895 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.818, weightedpel
	.loc 1 1898 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.834
	leaq	4(%rax), %rdx	#, tmp4372
	movq	%rdx, -1136(%rbp)	# tmp4372, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$2, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4373
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_1481, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.834_1476
	.loc 1 1899 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.836
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4374
	movl	-1168(%rbp), %edx	# img_height, tmp4375
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4376
	movl	%ecx, %r8d	# tmp4374,
	movl	%edx, %ecx	# tmp4375,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.836
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.837
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4377
	movl	-1168(%rbp), %edx	# img_height, tmp4378
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4379
	movl	%ecx, %r8d	# tmp4377,
	movl	%edx, %ecx	# tmp4378,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.837
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.838
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.839
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5211
	sarl	%cl, %edx	# tmp5211, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L565	#,
	.loc 1 1899 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.841
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4380
	movl	-1168(%rbp), %edx	# img_height, tmp4381
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4382
	movl	%ecx, %r8d	# tmp4380,
	movl	%edx, %ecx	# tmp4381,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.841
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.842
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4383
	movl	-1168(%rbp), %edx	# img_height, tmp4384
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4385
	movl	%ecx, %r8d	# tmp4383,
	movl	%edx, %ecx	# tmp4384,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.842
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.843
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.844
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5212
	sarl	%cl, %edx	# tmp5212, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.845
	movl	72684(%rax), %eax	# img.845_1535->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L566	#,
	movq	img(%rip), %rax	# img, img.846
	movl	72684(%rax), %eax	# img.846_1537->max_imgpel_value, iftmp.840
	jmp	.L568	#
.L566:
	.loc 1 1899 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.847
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4386
	movl	-1168(%rbp), %edx	# img_height, tmp4387
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4388
	movl	%ecx, %r8d	# tmp4386,
	movl	%edx, %ecx	# tmp4387,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.847
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.848
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4389
	movl	-1168(%rbp), %edx	# img_height, tmp4390
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4391
	movl	%ecx, %r8d	# tmp4389,
	movl	%edx, %ecx	# tmp4390,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.848
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.849
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.850
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5213
	sarl	%cl, %edx	# tmp5213, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.840
	jmp	.L568	#
.L565:
	movl	$0, %eax	#, iftmp.835
.L568:
	.loc 1 1899 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.835, weightedpel
	.loc 1 1902 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.851
	leaq	4(%rax), %rdx	#, tmp4392
	movq	%rdx, -1136(%rbp)	# tmp4392, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$3, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4393
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_1572, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.851_1567
	.loc 1 1904 0 discriminator 3
	movzwl	-1208(%rbp), %eax	# sy0, sy0.852
	addl	$12, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 1905 0 discriminator 3
	movzwl	-1206(%rbp), %eax	# ry0, ry0.853
	addl	$12, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 1906 0 discriminator 3
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp4394
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_1585, tmp4395
	movq	%rax, -1128(%rbp)	# tmp4395, orig_line
	.loc 1 1907 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.855
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4396
	movl	-1168(%rbp), %ecx	# img_height, tmp4397
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4398
	call	*%rax	# PelY_14b.855
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.856
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4399
	movl	-1168(%rbp), %ecx	# img_height, tmp4400
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4401
	call	*%rax	# PelY_14.856
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.857
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.858
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5214
	sarl	%cl, %edx	# tmp5214, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L569	#,
	.loc 1 1907 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.860
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4402
	movl	-1168(%rbp), %ecx	# img_height, tmp4403
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4404
	call	*%rax	# PelY_14b.860
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.861
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4405
	movl	-1168(%rbp), %ecx	# img_height, tmp4406
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4407
	call	*%rax	# PelY_14.861
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.862
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.863
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5215
	sarl	%cl, %edx	# tmp5215, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.864
	movl	72684(%rax), %eax	# img.864_1633->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L570	#,
	movq	img(%rip), %rax	# img, img.865
	movl	72684(%rax), %eax	# img.865_1635->max_imgpel_value, iftmp.859
	jmp	.L572	#
.L570:
	.loc 1 1907 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.866
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4408
	movl	-1168(%rbp), %ecx	# img_height, tmp4409
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4410
	call	*%rax	# PelY_14b.866
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.867
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4411
	movl	-1168(%rbp), %ecx	# img_height, tmp4412
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4413
	call	*%rax	# PelY_14.867
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.868
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.869
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5216
	sarl	%cl, %edx	# tmp5216, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.859
	jmp	.L572	#
.L569:
	movl	$0, %eax	#, iftmp.854
.L572:
	.loc 1 1907 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.854, weightedpel
	.loc 1 1910 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.870
	leaq	4(%rax), %rdx	#, tmp4414
	movq	%rdx, -1136(%rbp)	# tmp4414, d
	movswq	-1246(%rbp), %rdx	# x0, D.21231
	leaq	(%rdx,%rdx), %rcx	#, D.21231
	movq	-1128(%rbp), %rdx	# orig_line, tmp4415
	addq	%rcx, %rdx	# D.21231, D.21245
	movzwl	(%rdx), %edx	# *_1667, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.870_1663
	.loc 1 1911 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.872
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4416
	movl	-1168(%rbp), %edx	# img_height, tmp4417
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4418
	movl	%ecx, %r8d	# tmp4416,
	movl	%edx, %ecx	# tmp4417,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.872
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.873
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4419
	movl	-1168(%rbp), %edx	# img_height, tmp4420
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4421
	movl	%ecx, %r8d	# tmp4419,
	movl	%edx, %ecx	# tmp4420,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.873
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.874
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.875
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5217
	sarl	%cl, %edx	# tmp5217, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L573	#,
	.loc 1 1911 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.877
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4422
	movl	-1168(%rbp), %edx	# img_height, tmp4423
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4424
	movl	%ecx, %r8d	# tmp4422,
	movl	%edx, %ecx	# tmp4423,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.877
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.878
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4425
	movl	-1168(%rbp), %edx	# img_height, tmp4426
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4427
	movl	%ecx, %r8d	# tmp4425,
	movl	%edx, %ecx	# tmp4426,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.878
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.879
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.880
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5218
	sarl	%cl, %edx	# tmp5218, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.881
	movl	72684(%rax), %eax	# img.881_1721->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L574	#,
	movq	img(%rip), %rax	# img, img.882
	movl	72684(%rax), %eax	# img.882_1723->max_imgpel_value, iftmp.876
	jmp	.L576	#
.L574:
	.loc 1 1911 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.883
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4428
	movl	-1168(%rbp), %edx	# img_height, tmp4429
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4430
	movl	%ecx, %r8d	# tmp4428,
	movl	%edx, %ecx	# tmp4429,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.883
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.884
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4431
	movl	-1168(%rbp), %edx	# img_height, tmp4432
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4433
	movl	%ecx, %r8d	# tmp4431,
	movl	%edx, %ecx	# tmp4432,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.884
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.885
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.886
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5219
	sarl	%cl, %edx	# tmp5219, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.876
	jmp	.L576	#
.L573:
	movl	$0, %eax	#, iftmp.871
.L576:
	.loc 1 1911 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.871, weightedpel
	.loc 1 1914 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.887
	leaq	4(%rax), %rdx	#, tmp4434
	movq	%rdx, -1136(%rbp)	# tmp4434, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$1, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4435
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_1758, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.887_1753
	.loc 1 1915 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.889
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4436
	movl	-1168(%rbp), %edx	# img_height, tmp4437
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4438
	movl	%ecx, %r8d	# tmp4436,
	movl	%edx, %ecx	# tmp4437,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.889
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.890
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4439
	movl	-1168(%rbp), %edx	# img_height, tmp4440
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4441
	movl	%ecx, %r8d	# tmp4439,
	movl	%edx, %ecx	# tmp4440,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.890
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.891
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.892
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5220
	sarl	%cl, %edx	# tmp5220, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L577	#,
	.loc 1 1915 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.894
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4442
	movl	-1168(%rbp), %edx	# img_height, tmp4443
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4444
	movl	%ecx, %r8d	# tmp4442,
	movl	%edx, %ecx	# tmp4443,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.894
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.895
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4445
	movl	-1168(%rbp), %edx	# img_height, tmp4446
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4447
	movl	%ecx, %r8d	# tmp4445,
	movl	%edx, %ecx	# tmp4446,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.895
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.896
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.897
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5221
	sarl	%cl, %edx	# tmp5221, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.898
	movl	72684(%rax), %eax	# img.898_1812->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L578	#,
	movq	img(%rip), %rax	# img, img.899
	movl	72684(%rax), %eax	# img.899_1814->max_imgpel_value, iftmp.893
	jmp	.L580	#
.L578:
	.loc 1 1915 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.900
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4448
	movl	-1168(%rbp), %edx	# img_height, tmp4449
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4450
	movl	%ecx, %r8d	# tmp4448,
	movl	%edx, %ecx	# tmp4449,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.900
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.901
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4451
	movl	-1168(%rbp), %edx	# img_height, tmp4452
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4453
	movl	%ecx, %r8d	# tmp4451,
	movl	%edx, %ecx	# tmp4452,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.901
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.902
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.903
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5222
	sarl	%cl, %edx	# tmp5222, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.893
	jmp	.L580	#
.L577:
	movl	$0, %eax	#, iftmp.888
.L580:
	.loc 1 1915 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.888, weightedpel
	.loc 1 1918 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.904
	leaq	4(%rax), %rdx	#, tmp4454
	movq	%rdx, -1136(%rbp)	# tmp4454, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$2, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4455
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_1849, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.904_1844
	.loc 1 1919 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.906
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4456
	movl	-1168(%rbp), %edx	# img_height, tmp4457
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4458
	movl	%ecx, %r8d	# tmp4456,
	movl	%edx, %ecx	# tmp4457,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.906
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.907
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4459
	movl	-1168(%rbp), %edx	# img_height, tmp4460
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4461
	movl	%ecx, %r8d	# tmp4459,
	movl	%edx, %ecx	# tmp4460,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.907
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.908
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.909
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5223
	sarl	%cl, %edx	# tmp5223, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L581	#,
	.loc 1 1919 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.911
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4462
	movl	-1168(%rbp), %edx	# img_height, tmp4463
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4464
	movl	%ecx, %r8d	# tmp4462,
	movl	%edx, %ecx	# tmp4463,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.911
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.912
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4465
	movl	-1168(%rbp), %edx	# img_height, tmp4466
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4467
	movl	%ecx, %r8d	# tmp4465,
	movl	%edx, %ecx	# tmp4466,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.912
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.913
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.914
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5224
	sarl	%cl, %edx	# tmp5224, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.915
	movl	72684(%rax), %eax	# img.915_1903->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L582	#,
	movq	img(%rip), %rax	# img, img.916
	movl	72684(%rax), %eax	# img.916_1905->max_imgpel_value, iftmp.910
	jmp	.L584	#
.L582:
	.loc 1 1919 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.917
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4468
	movl	-1168(%rbp), %edx	# img_height, tmp4469
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4470
	movl	%ecx, %r8d	# tmp4468,
	movl	%edx, %ecx	# tmp4469,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.917
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.918
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4471
	movl	-1168(%rbp), %edx	# img_height, tmp4472
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4473
	movl	%ecx, %r8d	# tmp4471,
	movl	%edx, %ecx	# tmp4472,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.918
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.919
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.920
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5225
	sarl	%cl, %edx	# tmp5225, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.910
	jmp	.L584	#
.L581:
	movl	$0, %eax	#, iftmp.905
.L584:
	.loc 1 1919 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.905, weightedpel
	.loc 1 1922 0 is_stmt 1 discriminator 3
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4474
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_1938, D.21244
	movzwl	%ax, %eax	# D.21244, D.21228
	subl	-1164(%rbp), %eax	# weightedpel, D.21228
	movl	%eax, %edx	# D.21228, D.21228
	movq	-1136(%rbp), %rax	# d, tmp4475
	movl	%edx, (%rax)	# D.21228, *d_1845
	.loc 1 1925 0 discriminator 3
	movq	input(%rip), %rax	# input, input.921
	movl	3220(%rax), %eax	# input.921_1942->AllowTransform8x8, D.21228
	testl	%eax, %eax	# D.21228
	jne	.L585	#,
	.loc 1 1927 0
	movl	-1180(%rbp), %edx	# halfpelhadamard, tmp4476
	leaq	-1120(%rbp), %rax	#, tmp4477
	movl	%edx, %esi	# tmp4476,
	movq	%rax, %rdi	# tmp4477,
	call	SATD	#
	movl	%eax, %edx	# D.21228, D.21242
	movzwl	-1252(%rbp), %eax	# mcost, mcost.922
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1252(%rbp)	# D.21242, mcost
	movswl	-1252(%rbp), %eax	# mcost, D.21228
	cmpl	80(%rbp), %eax	# min_mcost, D.21228
	jle	.L586	#,
	.loc 1 1929 0
	movw	$1, -1250(%rbp)	#, abort_search
	.loc 1 1930 0
	nop
	jmp	.L593	#
.L585:
	.loc 1 1935 0
	movl	$0, -1192(%rbp)	#, j
	movl	$0, -1188(%rbp)	#, k
	jmp	.L588	#
.L591:
	.loc 1 1936 0
	movl	$0, -1196(%rbp)	#, i
	jmp	.L589	#
.L590:
	.loc 1 1937 0 discriminator 2
	movswl	-1248(%rbp), %edx	# y0, D.21228
	movl	-1192(%rbp), %eax	# j, tmp4478
	leal	(%rdx,%rax), %ecx	#, D.21228
	movswl	-1246(%rbp), %edx	# x0, D.21228
	movl	-1196(%rbp), %eax	# i, tmp4479
	addl	%eax, %edx	# tmp4479, D.21228
	movl	-1188(%rbp), %eax	# k, tmp4481
	cltq
	movl	-1120(%rbp,%rax,4), %eax	# diff, D.21228
	movslq	%edx, %rdx	# D.21228, tmp4482
	movslq	%ecx, %rcx	# D.21228, tmp4483
	salq	$4, %rcx	#, tmp4484
	addq	%rcx, %rdx	# tmp4484, tmp4485
	movl	%eax, -1056(%rbp,%rdx,4)	# D.21228, curr_diff
	.loc 1 1936 0 discriminator 2
	addl	$1, -1196(%rbp)	#, i
	addl	$1, -1188(%rbp)	#, k
.L589:
	.loc 1 1936 0 is_stmt 0 discriminator 1
	cmpl	$3, -1196(%rbp)	#, i
	jle	.L590	#,
	.loc 1 1935 0 is_stmt 1
	addl	$1, -1192(%rbp)	#, j
.L588:
	.loc 1 1935 0 is_stmt 0 discriminator 1
	cmpl	$3, -1192(%rbp)	#, j
	jle	.L591	#,
.L586:
	.loc 1 1838 0 is_stmt 1
	movzwl	-1246(%rbp), %eax	# x0, x0.923
	addl	$4, %eax	#, D.21242
	movw	%ax, -1246(%rbp)	# D.21242, x0
.L520:
	.loc 1 1838 0 is_stmt 0 discriminator 1
	movzwl	-1246(%rbp), %eax	# x0, tmp4486
	cmpw	-1242(%rbp), %ax	# blocksize_x, tmp4486
	jl	.L592	#,
	jmp	.L593	#
.L519:
	.loc 1 1944 0 is_stmt 1
	movw	$0, -1246(%rbp)	#, x0
	jmp	.L594	#
.L601:
	.loc 1 1946 0
	movl	-1284(%rbp), %eax	# pic_pix_x, tmp4487
	movl	%eax, %edx	# tmp4487, D.21242
	movzwl	-1246(%rbp), %eax	# x0, x0.924
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movq	48(%rbp), %rax	# s_mv_x, tmp4488
	movzwl	(%rax), %eax	# *s_mv_x_370(D), D.21241
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1204(%rbp)	# D.21242, sx0
	.loc 1 1947 0
	movl	-1284(%rbp), %eax	# pic_pix_x, tmp4489
	movl	%eax, %edx	# tmp4489, D.21242
	movzwl	-1246(%rbp), %eax	# x0, x0.925
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movzwl	-1212(%rbp), %eax	# cand_mv_x, cand_mv_x.926
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1202(%rbp)	# D.21242, rx0
	.loc 1 1948 0
	leaq	-1120(%rbp), %rax	#, tmp4490
	movq	%rax, -1136(%rbp)	# tmp4490, d
	.loc 1 1950 0
	movzwl	-1208(%rbp), %eax	# sy0, tmp4491
	movw	%ax, -1200(%rbp)	# tmp4491, sy
	.loc 1 1951 0
	movzwl	-1206(%rbp), %eax	# ry0, tmp4492
	movw	%ax, -1198(%rbp)	# tmp4492, ry
	.loc 1 1952 0
	movswq	-1248(%rbp), %rax	# y0, D.21231
	leaq	0(,%rax,8), %rdx	#, D.21231
	movq	-1272(%rbp), %rax	# orig_pic, tmp4493
	addq	%rdx, %rax	# D.21231, D.21243
	movq	(%rax), %rax	# *_1986, tmp4494
	movq	%rax, -1128(%rbp)	# tmp4494, orig_line
	.loc 1 1953 0
	movq	-1136(%rbp), %rbx	# d, d.927
	leaq	4(%rbx), %rax	#, tmp4495
	movq	%rax, -1136(%rbp)	# tmp4495, d
	movswq	-1246(%rbp), %rax	# x0, D.21231
	leaq	(%rax,%rax), %rdx	#, D.21231
	movq	-1128(%rbp), %rax	# orig_line, tmp4496
	addq	%rdx, %rax	# D.21231, D.21245
	movzwl	(%rax), %eax	# *_1992, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.928
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4497
	movl	-1168(%rbp), %ecx	# img_height, tmp4498
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4499
	call	*%rax	# PelY_14b.928
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.929
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4500
	movl	-1168(%rbp), %ecx	# img_height, tmp4501
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4502
	call	*%rax	# PelY_14.929
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.927_1988
	.loc 1 1954 0
	movq	-1136(%rbp), %rbx	# d, d.930
	leaq	4(%rbx), %rax	#, tmp4503
	movq	%rax, -1136(%rbp)	# tmp4503, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4504
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2013, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.931
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4505
	movl	-1168(%rbp), %edx	# img_height, tmp4506
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4507
	movl	%ecx, %r8d	# tmp4505,
	movl	%edx, %ecx	# tmp4506,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.931
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.932
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4508
	movl	-1168(%rbp), %edx	# img_height, tmp4509
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4510
	movl	%ecx, %r8d	# tmp4508,
	movl	%edx, %ecx	# tmp4509,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.932
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.930_2008
	.loc 1 1955 0
	movq	-1136(%rbp), %rbx	# d, d.933
	leaq	4(%rbx), %rax	#, tmp4511
	movq	%rax, -1136(%rbp)	# tmp4511, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4512
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2036, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.934
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4513
	movl	-1168(%rbp), %edx	# img_height, tmp4514
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4515
	movl	%ecx, %r8d	# tmp4513,
	movl	%edx, %ecx	# tmp4514,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.934
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.935
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4516
	movl	-1168(%rbp), %edx	# img_height, tmp4517
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4518
	movl	%ecx, %r8d	# tmp4516,
	movl	%edx, %ecx	# tmp4517,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.935
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.933_2031
	.loc 1 1956 0
	movq	-1136(%rbp), %rbx	# d, d.936
	leaq	4(%rbx), %rax	#, tmp4519
	movq	%rax, -1136(%rbp)	# tmp4519, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4520
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2059, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.937
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4521
	movl	-1168(%rbp), %edx	# img_height, tmp4522
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4523
	movl	%ecx, %r8d	# tmp4521,
	movl	%edx, %ecx	# tmp4522,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.937
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.938
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4524
	movl	-1168(%rbp), %edx	# img_height, tmp4525
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4526
	movl	%ecx, %r8d	# tmp4524,
	movl	%edx, %ecx	# tmp4525,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.938
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.936_2054
	.loc 1 1958 0
	movzwl	-1208(%rbp), %eax	# sy0, sy0.939
	addl	$4, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 1959 0
	movzwl	-1206(%rbp), %eax	# ry0, ry0.940
	addl	$4, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 1960 0
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp4527
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_2086, tmp4528
	movq	%rax, -1128(%rbp)	# tmp4528, orig_line
	.loc 1 1961 0
	movq	-1136(%rbp), %rbx	# d, d.941
	leaq	4(%rbx), %rax	#, tmp4529
	movq	%rax, -1136(%rbp)	# tmp4529, d
	movswq	-1246(%rbp), %rax	# x0, D.21231
	leaq	(%rax,%rax), %rdx	#, D.21231
	movq	-1128(%rbp), %rax	# orig_line, tmp4530
	addq	%rdx, %rax	# D.21231, D.21245
	movzwl	(%rax), %eax	# *_2092, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.942
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4531
	movl	-1168(%rbp), %ecx	# img_height, tmp4532
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4533
	call	*%rax	# PelY_14b.942
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.943
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4534
	movl	-1168(%rbp), %ecx	# img_height, tmp4535
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4536
	call	*%rax	# PelY_14.943
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	$2, %eax	#, D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.941_2088
	.loc 1 1962 0
	movq	-1136(%rbp), %rbx	# d, d.944
	leaq	4(%rbx), %rax	#, tmp4537
	movq	%rax, -1136(%rbp)	# tmp4537, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4538
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2113, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.945
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4539
	movl	-1168(%rbp), %edx	# img_height, tmp4540
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4541
	movl	%ecx, %r8d	# tmp4539,
	movl	%edx, %ecx	# tmp4540,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.945
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.946
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4542
	movl	-1168(%rbp), %edx	# img_height, tmp4543
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4544
	movl	%ecx, %r8d	# tmp4542,
	movl	%edx, %ecx	# tmp4543,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.946
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	$2, %eax	#, D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.944_2108
	.loc 1 1963 0
	movq	-1136(%rbp), %rbx	# d, d.947
	leaq	4(%rbx), %rax	#, tmp4545
	movq	%rax, -1136(%rbp)	# tmp4545, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4546
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2136, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.948
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4547
	movl	-1168(%rbp), %edx	# img_height, tmp4548
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4549
	movl	%ecx, %r8d	# tmp4547,
	movl	%edx, %ecx	# tmp4548,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.948
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.949
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4550
	movl	-1168(%rbp), %edx	# img_height, tmp4551
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4552
	movl	%ecx, %r8d	# tmp4550,
	movl	%edx, %ecx	# tmp4551,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.949
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	$2, %eax	#, D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.947_2131
	.loc 1 1964 0
	movq	-1136(%rbp), %rbx	# d, d.950
	leaq	4(%rbx), %rax	#, tmp4553
	movq	%rax, -1136(%rbp)	# tmp4553, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4554
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2159, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.951
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4555
	movl	-1168(%rbp), %edx	# img_height, tmp4556
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4557
	movl	%ecx, %r8d	# tmp4555,
	movl	%edx, %ecx	# tmp4556,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.951
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.952
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4558
	movl	-1168(%rbp), %edx	# img_height, tmp4559
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4560
	movl	%ecx, %r8d	# tmp4558,
	movl	%edx, %ecx	# tmp4559,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.952
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	$2, %eax	#, D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.950_2154
	.loc 1 1966 0
	movzwl	-1208(%rbp), %eax	# sy0, sy0.953
	addl	$8, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 1967 0
	movzwl	-1206(%rbp), %eax	# ry0, ry0.954
	addl	$8, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 1968 0
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp4561
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_2186, tmp4562
	movq	%rax, -1128(%rbp)	# tmp4562, orig_line
	.loc 1 1969 0
	movq	-1136(%rbp), %rbx	# d, d.955
	leaq	4(%rbx), %rax	#, tmp4563
	movq	%rax, -1136(%rbp)	# tmp4563, d
	movswq	-1246(%rbp), %rax	# x0, D.21231
	leaq	(%rax,%rax), %rdx	#, D.21231
	movq	-1128(%rbp), %rax	# orig_line, tmp4564
	addq	%rdx, %rax	# D.21231, D.21245
	movzwl	(%rax), %eax	# *_2192, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.956
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4565
	movl	-1168(%rbp), %ecx	# img_height, tmp4566
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4567
	call	*%rax	# PelY_14b.956
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.957
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4568
	movl	-1168(%rbp), %ecx	# img_height, tmp4569
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4570
	call	*%rax	# PelY_14.957
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.955_2188
	.loc 1 1970 0
	movq	-1136(%rbp), %rbx	# d, d.958
	leaq	4(%rbx), %rax	#, tmp4571
	movq	%rax, -1136(%rbp)	# tmp4571, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4572
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2213, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.959
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4573
	movl	-1168(%rbp), %edx	# img_height, tmp4574
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4575
	movl	%ecx, %r8d	# tmp4573,
	movl	%edx, %ecx	# tmp4574,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.959
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.960
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4576
	movl	-1168(%rbp), %edx	# img_height, tmp4577
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4578
	movl	%ecx, %r8d	# tmp4576,
	movl	%edx, %ecx	# tmp4577,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.960
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.958_2208
	.loc 1 1971 0
	movq	-1136(%rbp), %rbx	# d, d.961
	leaq	4(%rbx), %rax	#, tmp4579
	movq	%rax, -1136(%rbp)	# tmp4579, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4580
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2236, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.962
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4581
	movl	-1168(%rbp), %edx	# img_height, tmp4582
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4583
	movl	%ecx, %r8d	# tmp4581,
	movl	%edx, %ecx	# tmp4582,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.962
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.963
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4584
	movl	-1168(%rbp), %edx	# img_height, tmp4585
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4586
	movl	%ecx, %r8d	# tmp4584,
	movl	%edx, %ecx	# tmp4585,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.963
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.961_2231
	.loc 1 1972 0
	movq	-1136(%rbp), %rbx	# d, d.964
	leaq	4(%rbx), %rax	#, tmp4587
	movq	%rax, -1136(%rbp)	# tmp4587, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4588
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2259, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.965
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4589
	movl	-1168(%rbp), %edx	# img_height, tmp4590
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4591
	movl	%ecx, %r8d	# tmp4589,
	movl	%edx, %ecx	# tmp4590,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.965
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.966
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4592
	movl	-1168(%rbp), %edx	# img_height, tmp4593
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4594
	movl	%ecx, %r8d	# tmp4592,
	movl	%edx, %ecx	# tmp4593,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.966
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.964_2254
	.loc 1 1974 0
	movzwl	-1208(%rbp), %eax	# sy0, sy0.967
	addl	$12, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 1975 0
	movzwl	-1206(%rbp), %eax	# ry0, ry0.968
	addl	$12, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 1976 0
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp4595
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_2286, tmp4596
	movq	%rax, -1128(%rbp)	# tmp4596, orig_line
	.loc 1 1977 0
	movq	-1136(%rbp), %rbx	# d, d.969
	leaq	4(%rbx), %rax	#, tmp4597
	movq	%rax, -1136(%rbp)	# tmp4597, d
	movswq	-1246(%rbp), %rax	# x0, D.21231
	leaq	(%rax,%rax), %rdx	#, D.21231
	movq	-1128(%rbp), %rax	# orig_line, tmp4598
	addq	%rdx, %rax	# D.21231, D.21245
	movzwl	(%rax), %eax	# *_2292, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.970
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4599
	movl	-1168(%rbp), %ecx	# img_height, tmp4600
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4601
	call	*%rax	# PelY_14b.970
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.971
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4602
	movl	-1168(%rbp), %ecx	# img_height, tmp4603
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4604
	call	*%rax	# PelY_14.971
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.969_2288
	.loc 1 1978 0
	movq	-1136(%rbp), %rbx	# d, d.972
	leaq	4(%rbx), %rax	#, tmp4605
	movq	%rax, -1136(%rbp)	# tmp4605, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4606
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2313, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.973
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4607
	movl	-1168(%rbp), %edx	# img_height, tmp4608
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4609
	movl	%ecx, %r8d	# tmp4607,
	movl	%edx, %ecx	# tmp4608,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.973
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.974
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4610
	movl	-1168(%rbp), %edx	# img_height, tmp4611
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4612
	movl	%ecx, %r8d	# tmp4610,
	movl	%edx, %ecx	# tmp4611,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.974
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.972_2308
	.loc 1 1979 0
	movq	-1136(%rbp), %rbx	# d, d.975
	leaq	4(%rbx), %rax	#, tmp4613
	movq	%rax, -1136(%rbp)	# tmp4613, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4614
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2336, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.976
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4615
	movl	-1168(%rbp), %edx	# img_height, tmp4616
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4617
	movl	%ecx, %r8d	# tmp4615,
	movl	%edx, %ecx	# tmp4616,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.976
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.977
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4618
	movl	-1168(%rbp), %edx	# img_height, tmp4619
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4620
	movl	%ecx, %r8d	# tmp4618,
	movl	%edx, %ecx	# tmp4619,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.977
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.975_2331
	.loc 1 1980 0
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4621
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_2357, D.21244
	movzwl	%ax, %ebx	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.978
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4622
	movl	-1168(%rbp), %edx	# img_height, tmp4623
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4624
	movl	%ecx, %r8d	# tmp4622,
	movl	%edx, %ecx	# tmp4623,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.978
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.979
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4625
	movl	-1168(%rbp), %edx	# img_height, tmp4626
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4627
	movl	%ecx, %r8d	# tmp4625,
	movl	%edx, %ecx	# tmp4626,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.979
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r12d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %ebx	# D.21228, D.21228
	movl	%ebx, %edx	# D.21228, D.21228
	movq	-1136(%rbp), %rax	# d, tmp4628
	movl	%edx, (%rax)	# D.21228, *d_2332
	.loc 1 1983 0
	movq	input(%rip), %rax	# input, input.980
	movl	3220(%rax), %eax	# input.980_2375->AllowTransform8x8, D.21228
	testl	%eax, %eax	# D.21228
	jne	.L595	#,
	.loc 1 1985 0
	movl	-1180(%rbp), %edx	# halfpelhadamard, tmp4629
	leaq	-1120(%rbp), %rax	#, tmp4630
	movl	%edx, %esi	# tmp4629,
	movq	%rax, %rdi	# tmp4630,
	call	SATD	#
	movl	%eax, %edx	# D.21228, D.21242
	movzwl	-1252(%rbp), %eax	# mcost, mcost.981
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1252(%rbp)	# D.21242, mcost
	movswl	-1252(%rbp), %eax	# mcost, D.21228
	cmpl	80(%rbp), %eax	# min_mcost, D.21228
	jle	.L596	#,
	.loc 1 1987 0
	movw	$1, -1250(%rbp)	#, abort_search
	.loc 1 1988 0
	jmp	.L593	#
.L595:
	.loc 1 1993 0
	movl	$0, -1192(%rbp)	#, j
	movl	$0, -1188(%rbp)	#, k
	jmp	.L597	#
.L600:
	.loc 1 1994 0
	movl	$0, -1196(%rbp)	#, i
	jmp	.L598	#
.L599:
	.loc 1 1995 0 discriminator 2
	movswl	-1248(%rbp), %edx	# y0, D.21228
	movl	-1192(%rbp), %eax	# j, tmp4631
	leal	(%rdx,%rax), %ecx	#, D.21228
	movswl	-1246(%rbp), %edx	# x0, D.21228
	movl	-1196(%rbp), %eax	# i, tmp4632
	addl	%eax, %edx	# tmp4632, D.21228
	movl	-1188(%rbp), %eax	# k, tmp4634
	cltq
	movl	-1120(%rbp,%rax,4), %eax	# diff, D.21228
	movslq	%edx, %rdx	# D.21228, tmp4635
	movslq	%ecx, %rcx	# D.21228, tmp4636
	salq	$4, %rcx	#, tmp4637
	addq	%rcx, %rdx	# tmp4637, tmp4638
	movl	%eax, -1056(%rbp,%rdx,4)	# D.21228, curr_diff
	.loc 1 1994 0 discriminator 2
	addl	$1, -1196(%rbp)	#, i
	addl	$1, -1188(%rbp)	#, k
.L598:
	.loc 1 1994 0 is_stmt 0 discriminator 1
	cmpl	$3, -1196(%rbp)	#, i
	jle	.L599	#,
	.loc 1 1993 0 is_stmt 1
	addl	$1, -1192(%rbp)	#, j
.L597:
	.loc 1 1993 0 is_stmt 0 discriminator 1
	cmpl	$3, -1192(%rbp)	#, j
	jle	.L600	#,
.L596:
	.loc 1 1944 0 is_stmt 1
	movzwl	-1246(%rbp), %eax	# x0, x0.982
	addl	$4, %eax	#, D.21242
	movw	%ax, -1246(%rbp)	# D.21242, x0
.L594:
	.loc 1 1944 0 is_stmt 0 discriminator 1
	movzwl	-1246(%rbp), %eax	# x0, tmp4639
	cmpw	-1242(%rbp), %ax	# blocksize_x, tmp4639
	jl	.L601	#,
.L593:
	.loc 1 1831 0 is_stmt 1
	movzwl	-1248(%rbp), %eax	# y0, y0.983
	addl	$4, %eax	#, D.21242
	movw	%ax, -1248(%rbp)	# D.21242, y0
.L518:
	.loc 1 1831 0 is_stmt 0 discriminator 1
	movzwl	-1248(%rbp), %eax	# y0, tmp4640
	cmpw	-1240(%rbp), %ax	# blocksize_y, tmp4640
	jge	.L602	#,
	.loc 1 1831 0 discriminator 2
	cmpw	$0, -1250(%rbp)	#, abort_search
	je	.L603	#,
.L602:
	.loc 1 2002 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.984
	movl	3220(%rax), %eax	# input.984_2401->AllowTransform8x8, D.21228
	testl	%eax, %eax	# D.21228
	je	.L604	#,
	.loc 1 2003 0
	movl	-1292(%rbp), %edx	# blocktype, tmp4641
	movl	-1180(%rbp), %ecx	# halfpelhadamard, tmp4642
	leaq	-1056(%rbp), %rax	#, tmp4643
	movl	%ecx, %esi	# tmp4642,
	movq	%rax, %rdi	# tmp4643,
	call	find_SATD	#
	movl	%eax, %edx	# D.21228, D.21242
	movzwl	-1252(%rbp), %eax	# mcost, mcost.985
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1252(%rbp)	# D.21242, mcost
.L604:
	.loc 1 2006 0
	movswl	-1252(%rbp), %eax	# mcost, D.21228
	cmpl	80(%rbp), %eax	# min_mcost, D.21228
	jge	.L605	#,
	.loc 1 2008 0
	movswl	-1252(%rbp), %eax	# mcost, tmp4644
	movl	%eax, 80(%rbp)	# tmp4644, min_mcost
	.loc 1 2009 0
	movzwl	-1256(%rbp), %eax	# pos, tmp4645
	movw	%ax, -1254(%rbp)	# tmp4645, best_pos
.L605:
	.loc 1 1822 0
	movzwl	-1256(%rbp), %eax	# pos, pos.986
	addl	$1, %eax	#, tmp4646
	movw	%ax, -1256(%rbp)	# tmp4646, pos
.L517:
	.loc 1 1822 0 is_stmt 0 discriminator 1
	movzwl	-1256(%rbp), %eax	# pos, tmp4647
	cmpw	-1232(%rbp), %ax	# max_pos2, tmp4647
	jl	.L606	#,
	.loc 1 2012 0 is_stmt 1
	cmpw	$0, -1254(%rbp)	#, best_pos
	je	.L607	#,
	.loc 1 2014 0
	movq	32(%rbp), %rax	# mv_x, tmp4648
	movzwl	(%rax), %eax	# *mv_x_339(D), D.21241
	movq	spiral_search_x(%rip), %rdx	# spiral_search_x, spiral_search_x.987
	movswq	-1254(%rbp), %rcx	# best_pos, D.21231
	salq	$2, %rcx	#, D.21231
	addq	%rcx, %rdx	# D.21231, D.21237
	movl	(%rdx), %edx	# *_2418, D.21228
	addl	%edx, %edx	# D.21242
	addl	%edx, %eax	# D.21242, D.21242
	movl	%eax, %edx	# D.21242, D.21241
	movq	32(%rbp), %rax	# mv_x, tmp4649
	movw	%dx, (%rax)	# D.21241, *mv_x_339(D)
	.loc 1 2015 0
	movq	40(%rbp), %rax	# mv_y, tmp4650
	movzwl	(%rax), %eax	# *mv_y_344(D), D.21241
	movq	spiral_search_y(%rip), %rdx	# spiral_search_y, spiral_search_y.988
	movswq	-1254(%rbp), %rcx	# best_pos, D.21231
	salq	$2, %rcx	#, D.21231
	addq	%rcx, %rdx	# D.21231, D.21237
	movl	(%rdx), %edx	# *_2429, D.21228
	addl	%edx, %edx	# D.21242
	addl	%edx, %eax	# D.21242, D.21242
	movl	%eax, %edx	# D.21242, D.21241
	movq	40(%rbp), %rax	# mv_y, tmp4651
	movw	%dx, (%rax)	# D.21241, *mv_y_344(D)
.L607:
	.loc 1 2018 0
	movq	input(%rip), %rax	# input, input.989
	movl	28(%rax), %eax	# input.989_2435->hadamardqpel, D.21228
	testl	%eax, %eax	# D.21228
	je	.L608	#,
	.loc 1 2019 0
	movl	$2147483647, 80(%rbp)	#, min_mcost
.L608:
	.loc 1 2027 0
	movswl	-1238(%rbp), %edx	# pic4_pix_x, D.21228
	movq	32(%rbp), %rax	# mv_x, tmp4652
	movzwl	(%rax), %eax	# *mv_x_339(D), D.21241
	cwtl
	addl	%edx, %eax	# D.21228, D.21228
	cmpl	$1, %eax	#, D.21228
	jle	.L609	#,
	.loc 1 2027 0 is_stmt 0 discriminator 1
	movswl	-1238(%rbp), %edx	# pic4_pix_x, D.21228
	movq	32(%rbp), %rax	# mv_x, tmp4653
	movzwl	(%rax), %eax	# *mv_x_339(D), D.21241
	cwtl
	addl	%eax, %edx	# D.21228, D.21228
	movswl	-1216(%rbp), %eax	# max_pos_x4, D.21228
	subl	$1, %eax	#, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jge	.L609	#,
	.loc 1 2028 0 is_stmt 1 discriminator 1
	movswl	-1236(%rbp), %edx	# pic4_pix_y, D.21228
	movq	40(%rbp), %rax	# mv_y, tmp4654
	movzwl	(%rax), %eax	# *mv_y_344(D), D.21241
	cwtl
	addl	%edx, %eax	# D.21228, D.21228
	.loc 1 2027 0 discriminator 1
	cmpl	$1, %eax	#, D.21228
	jle	.L609	#,
	.loc 1 2028 0
	movswl	-1236(%rbp), %edx	# pic4_pix_y, D.21228
	movq	40(%rbp), %rax	# mv_y, tmp4655
	movzwl	(%rax), %eax	# *mv_y_344(D), D.21241
	cwtl
	addl	%eax, %edx	# D.21228, D.21228
	movswl	-1214(%rbp), %eax	# max_pos_y4, D.21228
	subl	$1, %eax	#, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jge	.L609	#,
	.loc 1 2030 0
	movq	$FastPelY_14, PelY_14(%rip)	#, PelY_14
	jmp	.L610	#
.L609:
	.loc 1 2034 0
	movq	$UMVPelY_14, PelY_14(%rip)	#, PelY_14
.L610:
	.loc 1 2037 0
	movw	$0, -1254(%rbp)	#, best_pos
	movl	-1176(%rbp), %eax	# qpelstart, tmp4656
	movw	%ax, -1256(%rbp)	# tmp4656, pos
	jmp	.L611	#
.L700:
	.loc 1 2039 0
	movq	32(%rbp), %rax	# mv_x, tmp4657
	movzwl	(%rax), %eax	# *mv_x_339(D), D.21241
	movl	%eax, %edx	# D.21241, D.21242
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.990
	movswq	-1256(%rbp), %rcx	# pos, D.21231
	salq	$2, %rcx	#, D.21231
	addq	%rcx, %rax	# D.21231, D.21237
	movl	(%rax), %eax	# *_2467, D.21228
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1212(%rbp)	# D.21242, cand_mv_x
	.loc 1 2040 0
	movq	40(%rbp), %rax	# mv_y, tmp4658
	movzwl	(%rax), %eax	# *mv_y_344(D), D.21241
	movl	%eax, %edx	# D.21241, D.21242
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.991
	movswq	-1256(%rbp), %rcx	# pos, D.21231
	salq	$2, %rcx	#, D.21231
	addq	%rcx, %rax	# D.21231, D.21237
	movl	(%rax), %eax	# *_2477, D.21228
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1210(%rbp)	# D.21242, cand_mv_y
	.loc 1 2043 0
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.992
	movswl	-1212(%rbp), %esi	# cand_mv_x, D.21228
	movswl	-1244(%rbp), %eax	# mv_shift, D.21228
	movl	%eax, %ecx	# D.21228, tmp5244
	sall	%cl, %esi	# tmp5244, D.21228
	movl	%esi, %ecx	# D.21228, D.21228
	movswl	-1296(%rbp), %eax	# pred_mv_x, D.21228
	subl	%eax, %ecx	# D.21228, D.21228
	movl	%ecx, %eax	# D.21228, D.21228
	cltq
	salq	$2, %rax	#, D.21231
	addq	%rdx, %rax	# mvbits.992, D.21237
	movl	(%rax), %edx	# *_2490, D.21228
	movq	mvbits(%rip), %rsi	# mvbits, mvbits.993
	movswl	-1210(%rbp), %edi	# cand_mv_y, D.21228
	movswl	-1244(%rbp), %eax	# mv_shift, D.21228
	movl	%eax, %ecx	# D.21228, tmp5247
	sall	%cl, %edi	# tmp5247, D.21228
	movl	%edi, %ecx	# D.21228, D.21228
	movswl	-1300(%rbp), %eax	# pred_mv_y, D.21228
	subl	%eax, %ecx	# D.21228, D.21228
	movl	%ecx, %eax	# D.21228, D.21228
	cltq
	salq	$2, %rax	#, D.21231
	addq	%rsi, %rax	# mvbits.993, D.21237
	movl	(%rax), %eax	# *_2500, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	imull	-1184(%rbp), %eax	# lambda_factor, D.21228
	sarl	$16, %eax	#, D.21228
	movw	%ax, -1252(%rbp)	# D.21228, mcost
	.loc 1 2046 0
	movw	$0, -1248(%rbp)	#, y0
	movw	$0, -1250(%rbp)	#, abort_search
	jmp	.L612	#
.L697:
	.loc 1 2048 0
	movl	-1288(%rbp), %eax	# pic_pix_y, tmp4659
	movl	%eax, %edx	# tmp4659, D.21242
	movzwl	-1248(%rbp), %eax	# y0, y0.994
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movq	56(%rbp), %rax	# s_mv_y, tmp4660
	movzwl	(%rax), %eax	# *s_mv_y_381(D), D.21241
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1208(%rbp)	# D.21242, sy0
	.loc 1 2049 0
	movl	-1288(%rbp), %eax	# pic_pix_y, tmp4661
	movl	%eax, %edx	# tmp4661, D.21242
	movzwl	-1248(%rbp), %eax	# y0, y0.995
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movzwl	-1210(%rbp), %eax	# cand_mv_y, cand_mv_y.996
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1206(%rbp)	# D.21242, ry0
	.loc 1 2051 0
	cmpw	$0, -1228(%rbp)	#, apply_weights
	je	.L613	#,
	.loc 1 2054 0
	movw	$0, -1246(%rbp)	#, x0
	jmp	.L614	#
.L686:
	.loc 1 2056 0
	movzwl	-1208(%rbp), %eax	# sy0, tmp4662
	movw	%ax, -1200(%rbp)	# tmp4662, sy
	.loc 1 2057 0
	movl	-1284(%rbp), %eax	# pic_pix_x, tmp4663
	movl	%eax, %edx	# tmp4663, D.21242
	movzwl	-1246(%rbp), %eax	# x0, x0.997
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movq	48(%rbp), %rax	# s_mv_x, tmp4664
	movzwl	(%rax), %eax	# *s_mv_x_370(D), D.21241
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1204(%rbp)	# D.21242, sx0
	.loc 1 2058 0
	movl	-1284(%rbp), %eax	# pic_pix_x, tmp4665
	movl	%eax, %edx	# tmp4665, D.21242
	movzwl	-1246(%rbp), %eax	# x0, x0.998
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movzwl	-1212(%rbp), %eax	# cand_mv_x, cand_mv_x.999
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1202(%rbp)	# D.21242, rx0
	.loc 1 2059 0
	leaq	-1120(%rbp), %rax	#, tmp4666
	movq	%rax, -1136(%rbp)	# tmp4666, d
	.loc 1 2061 0
	movzwl	-1208(%rbp), %eax	# sy0, tmp4667
	movw	%ax, -1200(%rbp)	# tmp4667, sy
	.loc 1 2062 0
	movswq	-1248(%rbp), %rax	# y0, D.21231
	leaq	0(,%rax,8), %rdx	#, D.21231
	movq	-1272(%rbp), %rax	# orig_pic, tmp4668
	addq	%rdx, %rax	# D.21231, D.21243
	movq	(%rax), %rax	# *_2544, tmp4669
	movq	%rax, -1128(%rbp)	# tmp4669, orig_line
	movzwl	-1206(%rbp), %eax	# ry0, tmp4670
	movw	%ax, -1198(%rbp)	# tmp4670, ry
	.loc 1 2063 0
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1001
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4671
	movl	-1168(%rbp), %ecx	# img_height, tmp4672
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4673
	call	*%rax	# PelY_14b.1001
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1002
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4674
	movl	-1168(%rbp), %ecx	# img_height, tmp4675
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4676
	call	*%rax	# PelY_14.1002
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1003
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1004
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5249
	sarl	%cl, %edx	# tmp5249, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L615	#,
	.loc 1 2063 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1006
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4677
	movl	-1168(%rbp), %ecx	# img_height, tmp4678
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4679
	call	*%rax	# PelY_14b.1006
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1007
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4680
	movl	-1168(%rbp), %ecx	# img_height, tmp4681
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4682
	call	*%rax	# PelY_14.1007
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1008
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1009
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5250
	sarl	%cl, %edx	# tmp5250, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1010
	movl	72684(%rax), %eax	# img.1010_2593->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L616	#,
	movq	img(%rip), %rax	# img, img.1011
	movl	72684(%rax), %eax	# img.1011_2595->max_imgpel_value, iftmp.1005
	jmp	.L618	#
.L616:
	.loc 1 2063 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1012
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4683
	movl	-1168(%rbp), %ecx	# img_height, tmp4684
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4685
	call	*%rax	# PelY_14b.1012
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1013
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4686
	movl	-1168(%rbp), %ecx	# img_height, tmp4687
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4688
	call	*%rax	# PelY_14.1013
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1014
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1015
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5251
	sarl	%cl, %edx	# tmp5251, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1005
	jmp	.L618	#
.L615:
	movl	$0, %eax	#, iftmp.1000
.L618:
	.loc 1 2063 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1000, weightedpel
	.loc 1 2067 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1016
	leaq	4(%rax), %rdx	#, tmp4689
	movq	%rdx, -1136(%rbp)	# tmp4689, d
	movswq	-1246(%rbp), %rdx	# x0, D.21231
	leaq	(%rdx,%rdx), %rcx	#, D.21231
	movq	-1128(%rbp), %rdx	# orig_line, tmp4690
	addq	%rcx, %rdx	# D.21231, D.21245
	movzwl	(%rdx), %edx	# *_2627, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1016_2623
	.loc 1 2068 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1018
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4691
	movl	-1168(%rbp), %edx	# img_height, tmp4692
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4693
	movl	%ecx, %r8d	# tmp4691,
	movl	%edx, %ecx	# tmp4692,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1018
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1019
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4694
	movl	-1168(%rbp), %edx	# img_height, tmp4695
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4696
	movl	%ecx, %r8d	# tmp4694,
	movl	%edx, %ecx	# tmp4695,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1019
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1020
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1021
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5252
	sarl	%cl, %edx	# tmp5252, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L619	#,
	.loc 1 2068 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1023
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4697
	movl	-1168(%rbp), %edx	# img_height, tmp4698
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4699
	movl	%ecx, %r8d	# tmp4697,
	movl	%edx, %ecx	# tmp4698,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1023
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1024
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4700
	movl	-1168(%rbp), %edx	# img_height, tmp4701
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4702
	movl	%ecx, %r8d	# tmp4700,
	movl	%edx, %ecx	# tmp4701,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1024
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1025
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1026
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5253
	sarl	%cl, %edx	# tmp5253, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1027
	movl	72684(%rax), %eax	# img.1027_2681->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L620	#,
	movq	img(%rip), %rax	# img, img.1028
	movl	72684(%rax), %eax	# img.1028_2683->max_imgpel_value, iftmp.1022
	jmp	.L622	#
.L620:
	.loc 1 2068 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1029
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4703
	movl	-1168(%rbp), %edx	# img_height, tmp4704
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4705
	movl	%ecx, %r8d	# tmp4703,
	movl	%edx, %ecx	# tmp4704,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1029
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1030
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4706
	movl	-1168(%rbp), %edx	# img_height, tmp4707
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4708
	movl	%ecx, %r8d	# tmp4706,
	movl	%edx, %ecx	# tmp4707,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1030
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1031
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1032
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5254
	sarl	%cl, %edx	# tmp5254, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1022
	jmp	.L622	#
.L619:
	movl	$0, %eax	#, iftmp.1017
.L622:
	.loc 1 2068 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1017, weightedpel
	.loc 1 2072 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1033
	leaq	4(%rax), %rdx	#, tmp4709
	movq	%rdx, -1136(%rbp)	# tmp4709, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$1, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4710
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_2718, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1033_2713
	.loc 1 2073 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1035
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4711
	movl	-1168(%rbp), %edx	# img_height, tmp4712
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4713
	movl	%ecx, %r8d	# tmp4711,
	movl	%edx, %ecx	# tmp4712,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1035
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1036
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4714
	movl	-1168(%rbp), %edx	# img_height, tmp4715
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4716
	movl	%ecx, %r8d	# tmp4714,
	movl	%edx, %ecx	# tmp4715,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1036
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1037
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1038
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5255
	sarl	%cl, %edx	# tmp5255, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L623	#,
	.loc 1 2073 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1040
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4717
	movl	-1168(%rbp), %edx	# img_height, tmp4718
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4719
	movl	%ecx, %r8d	# tmp4717,
	movl	%edx, %ecx	# tmp4718,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1040
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1041
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4720
	movl	-1168(%rbp), %edx	# img_height, tmp4721
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4722
	movl	%ecx, %r8d	# tmp4720,
	movl	%edx, %ecx	# tmp4721,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1041
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1042
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1043
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5256
	sarl	%cl, %edx	# tmp5256, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1044
	movl	72684(%rax), %eax	# img.1044_2772->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L624	#,
	movq	img(%rip), %rax	# img, img.1045
	movl	72684(%rax), %eax	# img.1045_2774->max_imgpel_value, iftmp.1039
	jmp	.L626	#
.L624:
	.loc 1 2073 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1046
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4723
	movl	-1168(%rbp), %edx	# img_height, tmp4724
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4725
	movl	%ecx, %r8d	# tmp4723,
	movl	%edx, %ecx	# tmp4724,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1046
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1047
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4726
	movl	-1168(%rbp), %edx	# img_height, tmp4727
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4728
	movl	%ecx, %r8d	# tmp4726,
	movl	%edx, %ecx	# tmp4727,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1047
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1048
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1049
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5257
	sarl	%cl, %edx	# tmp5257, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1039
	jmp	.L626	#
.L623:
	movl	$0, %eax	#, iftmp.1034
.L626:
	.loc 1 2073 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1034, weightedpel
	.loc 1 2077 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1050
	leaq	4(%rax), %rdx	#, tmp4729
	movq	%rdx, -1136(%rbp)	# tmp4729, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$2, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4730
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_2809, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1050_2804
	.loc 1 2078 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1052
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4731
	movl	-1168(%rbp), %edx	# img_height, tmp4732
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4733
	movl	%ecx, %r8d	# tmp4731,
	movl	%edx, %ecx	# tmp4732,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1052
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1053
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4734
	movl	-1168(%rbp), %edx	# img_height, tmp4735
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4736
	movl	%ecx, %r8d	# tmp4734,
	movl	%edx, %ecx	# tmp4735,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1053
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1054
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1055
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5258
	sarl	%cl, %edx	# tmp5258, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L627	#,
	.loc 1 2078 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1057
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4737
	movl	-1168(%rbp), %edx	# img_height, tmp4738
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4739
	movl	%ecx, %r8d	# tmp4737,
	movl	%edx, %ecx	# tmp4738,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1057
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1058
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4740
	movl	-1168(%rbp), %edx	# img_height, tmp4741
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4742
	movl	%ecx, %r8d	# tmp4740,
	movl	%edx, %ecx	# tmp4741,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1058
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1059
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1060
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5259
	sarl	%cl, %edx	# tmp5259, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1061
	movl	72684(%rax), %eax	# img.1061_2863->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L628	#,
	movq	img(%rip), %rax	# img, img.1062
	movl	72684(%rax), %eax	# img.1062_2865->max_imgpel_value, iftmp.1056
	jmp	.L630	#
.L628:
	.loc 1 2078 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1063
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4743
	movl	-1168(%rbp), %edx	# img_height, tmp4744
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4745
	movl	%ecx, %r8d	# tmp4743,
	movl	%edx, %ecx	# tmp4744,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1063
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1064
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4746
	movl	-1168(%rbp), %edx	# img_height, tmp4747
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4748
	movl	%ecx, %r8d	# tmp4746,
	movl	%edx, %ecx	# tmp4747,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1064
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1065
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1066
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5260
	sarl	%cl, %edx	# tmp5260, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1056
	jmp	.L630	#
.L627:
	movl	$0, %eax	#, iftmp.1051
.L630:
	.loc 1 2078 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1051, weightedpel
	.loc 1 2082 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1067
	leaq	4(%rax), %rdx	#, tmp4749
	movq	%rdx, -1136(%rbp)	# tmp4749, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$3, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4750
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_2900, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1067_2895
	.loc 1 2084 0 discriminator 3
	movzwl	-1208(%rbp), %eax	# sy0, sy0.1068
	addl	$4, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 2085 0 discriminator 3
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp4751
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_2910, tmp4752
	movq	%rax, -1128(%rbp)	# tmp4752, orig_line
	movzwl	-1206(%rbp), %eax	# ry0, ry0.1069
	addl	$4, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 2086 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1071
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4753
	movl	-1168(%rbp), %ecx	# img_height, tmp4754
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4755
	call	*%rax	# PelY_14b.1071
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1072
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4756
	movl	-1168(%rbp), %ecx	# img_height, tmp4757
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4758
	call	*%rax	# PelY_14.1072
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1073
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1074
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5261
	sarl	%cl, %edx	# tmp5261, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L631	#,
	.loc 1 2086 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1076
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4759
	movl	-1168(%rbp), %ecx	# img_height, tmp4760
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4761
	call	*%rax	# PelY_14b.1076
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1077
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4762
	movl	-1168(%rbp), %ecx	# img_height, tmp4763
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4764
	call	*%rax	# PelY_14.1077
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1078
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1079
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5262
	sarl	%cl, %edx	# tmp5262, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1080
	movl	72684(%rax), %eax	# img.1080_2961->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L632	#,
	movq	img(%rip), %rax	# img, img.1081
	movl	72684(%rax), %eax	# img.1081_2963->max_imgpel_value, iftmp.1075
	jmp	.L634	#
.L632:
	.loc 1 2086 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1082
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4765
	movl	-1168(%rbp), %ecx	# img_height, tmp4766
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4767
	call	*%rax	# PelY_14b.1082
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1083
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4768
	movl	-1168(%rbp), %ecx	# img_height, tmp4769
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4770
	call	*%rax	# PelY_14.1083
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1084
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1085
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5263
	sarl	%cl, %edx	# tmp5263, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1075
	jmp	.L634	#
.L631:
	movl	$0, %eax	#, iftmp.1070
.L634:
	.loc 1 2086 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1070, weightedpel
	.loc 1 2090 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1086
	leaq	4(%rax), %rdx	#, tmp4771
	movq	%rdx, -1136(%rbp)	# tmp4771, d
	movswq	-1246(%rbp), %rdx	# x0, D.21231
	leaq	(%rdx,%rdx), %rcx	#, D.21231
	movq	-1128(%rbp), %rdx	# orig_line, tmp4772
	addq	%rcx, %rdx	# D.21231, D.21245
	movzwl	(%rdx), %edx	# *_2995, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1086_2991
	.loc 1 2091 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1088
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4773
	movl	-1168(%rbp), %edx	# img_height, tmp4774
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4775
	movl	%ecx, %r8d	# tmp4773,
	movl	%edx, %ecx	# tmp4774,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1088
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1089
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4776
	movl	-1168(%rbp), %edx	# img_height, tmp4777
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4778
	movl	%ecx, %r8d	# tmp4776,
	movl	%edx, %ecx	# tmp4777,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1089
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1090
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1091
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5264
	sarl	%cl, %edx	# tmp5264, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L635	#,
	.loc 1 2091 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1093
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4779
	movl	-1168(%rbp), %edx	# img_height, tmp4780
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4781
	movl	%ecx, %r8d	# tmp4779,
	movl	%edx, %ecx	# tmp4780,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1093
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1094
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4782
	movl	-1168(%rbp), %edx	# img_height, tmp4783
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4784
	movl	%ecx, %r8d	# tmp4782,
	movl	%edx, %ecx	# tmp4783,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1094
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1095
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1096
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5265
	sarl	%cl, %edx	# tmp5265, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1097
	movl	72684(%rax), %eax	# img.1097_3049->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L636	#,
	movq	img(%rip), %rax	# img, img.1098
	movl	72684(%rax), %eax	# img.1098_3051->max_imgpel_value, iftmp.1092
	jmp	.L638	#
.L636:
	.loc 1 2091 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1099
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4785
	movl	-1168(%rbp), %edx	# img_height, tmp4786
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4787
	movl	%ecx, %r8d	# tmp4785,
	movl	%edx, %ecx	# tmp4786,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1099
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1100
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4788
	movl	-1168(%rbp), %edx	# img_height, tmp4789
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4790
	movl	%ecx, %r8d	# tmp4788,
	movl	%edx, %ecx	# tmp4789,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1100
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1101
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1102
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5266
	sarl	%cl, %edx	# tmp5266, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1092
	jmp	.L638	#
.L635:
	movl	$0, %eax	#, iftmp.1087
.L638:
	.loc 1 2091 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1087, weightedpel
	.loc 1 2095 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1103
	leaq	4(%rax), %rdx	#, tmp4791
	movq	%rdx, -1136(%rbp)	# tmp4791, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$1, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4792
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_3086, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1103_3081
	.loc 1 2096 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1105
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4793
	movl	-1168(%rbp), %edx	# img_height, tmp4794
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4795
	movl	%ecx, %r8d	# tmp4793,
	movl	%edx, %ecx	# tmp4794,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1105
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1106
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4796
	movl	-1168(%rbp), %edx	# img_height, tmp4797
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4798
	movl	%ecx, %r8d	# tmp4796,
	movl	%edx, %ecx	# tmp4797,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1106
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1107
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1108
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5267
	sarl	%cl, %edx	# tmp5267, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L639	#,
	.loc 1 2096 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1110
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4799
	movl	-1168(%rbp), %edx	# img_height, tmp4800
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4801
	movl	%ecx, %r8d	# tmp4799,
	movl	%edx, %ecx	# tmp4800,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1110
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1111
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4802
	movl	-1168(%rbp), %edx	# img_height, tmp4803
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4804
	movl	%ecx, %r8d	# tmp4802,
	movl	%edx, %ecx	# tmp4803,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1111
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1112
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1113
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5268
	sarl	%cl, %edx	# tmp5268, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1114
	movl	72684(%rax), %eax	# img.1114_3140->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L640	#,
	movq	img(%rip), %rax	# img, img.1115
	movl	72684(%rax), %eax	# img.1115_3142->max_imgpel_value, iftmp.1109
	jmp	.L642	#
.L640:
	.loc 1 2096 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1116
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4805
	movl	-1168(%rbp), %edx	# img_height, tmp4806
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4807
	movl	%ecx, %r8d	# tmp4805,
	movl	%edx, %ecx	# tmp4806,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1116
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1117
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4808
	movl	-1168(%rbp), %edx	# img_height, tmp4809
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4810
	movl	%ecx, %r8d	# tmp4808,
	movl	%edx, %ecx	# tmp4809,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1117
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1118
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1119
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5269
	sarl	%cl, %edx	# tmp5269, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1109
	jmp	.L642	#
.L639:
	movl	$0, %eax	#, iftmp.1104
.L642:
	.loc 1 2096 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1104, weightedpel
	.loc 1 2100 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1120
	leaq	4(%rax), %rdx	#, tmp4811
	movq	%rdx, -1136(%rbp)	# tmp4811, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$2, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4812
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_3177, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1120_3172
	.loc 1 2101 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1122
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4813
	movl	-1168(%rbp), %edx	# img_height, tmp4814
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4815
	movl	%ecx, %r8d	# tmp4813,
	movl	%edx, %ecx	# tmp4814,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1122
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1123
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4816
	movl	-1168(%rbp), %edx	# img_height, tmp4817
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4818
	movl	%ecx, %r8d	# tmp4816,
	movl	%edx, %ecx	# tmp4817,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1123
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1124
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1125
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5270
	sarl	%cl, %edx	# tmp5270, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L643	#,
	.loc 1 2101 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1127
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4819
	movl	-1168(%rbp), %edx	# img_height, tmp4820
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4821
	movl	%ecx, %r8d	# tmp4819,
	movl	%edx, %ecx	# tmp4820,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1127
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1128
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4822
	movl	-1168(%rbp), %edx	# img_height, tmp4823
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4824
	movl	%ecx, %r8d	# tmp4822,
	movl	%edx, %ecx	# tmp4823,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1128
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1129
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1130
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5271
	sarl	%cl, %edx	# tmp5271, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1131
	movl	72684(%rax), %eax	# img.1131_3231->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L644	#,
	movq	img(%rip), %rax	# img, img.1132
	movl	72684(%rax), %eax	# img.1132_3233->max_imgpel_value, iftmp.1126
	jmp	.L646	#
.L644:
	.loc 1 2101 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1133
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4825
	movl	-1168(%rbp), %edx	# img_height, tmp4826
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4827
	movl	%ecx, %r8d	# tmp4825,
	movl	%edx, %ecx	# tmp4826,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1133
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1134
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4828
	movl	-1168(%rbp), %edx	# img_height, tmp4829
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4830
	movl	%ecx, %r8d	# tmp4828,
	movl	%edx, %ecx	# tmp4829,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1134
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1135
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1136
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5272
	sarl	%cl, %edx	# tmp5272, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1126
	jmp	.L646	#
.L643:
	movl	$0, %eax	#, iftmp.1121
.L646:
	.loc 1 2101 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1121, weightedpel
	.loc 1 2105 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1137
	leaq	4(%rax), %rdx	#, tmp4831
	movq	%rdx, -1136(%rbp)	# tmp4831, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$3, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4832
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_3268, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1137_3263
	.loc 1 2107 0 discriminator 3
	movzwl	-1208(%rbp), %eax	# sy0, sy0.1138
	addl	$8, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 2108 0 discriminator 3
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp4833
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_3278, tmp4834
	movq	%rax, -1128(%rbp)	# tmp4834, orig_line
	movzwl	-1206(%rbp), %eax	# ry0, ry0.1139
	addl	$8, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 2109 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1141
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4835
	movl	-1168(%rbp), %ecx	# img_height, tmp4836
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4837
	call	*%rax	# PelY_14b.1141
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1142
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4838
	movl	-1168(%rbp), %ecx	# img_height, tmp4839
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4840
	call	*%rax	# PelY_14.1142
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1143
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1144
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5273
	sarl	%cl, %edx	# tmp5273, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L647	#,
	.loc 1 2109 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1146
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4841
	movl	-1168(%rbp), %ecx	# img_height, tmp4842
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4843
	call	*%rax	# PelY_14b.1146
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1147
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4844
	movl	-1168(%rbp), %ecx	# img_height, tmp4845
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4846
	call	*%rax	# PelY_14.1147
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1148
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1149
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5274
	sarl	%cl, %edx	# tmp5274, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1150
	movl	72684(%rax), %eax	# img.1150_3329->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L648	#,
	movq	img(%rip), %rax	# img, img.1151
	movl	72684(%rax), %eax	# img.1151_3331->max_imgpel_value, iftmp.1145
	jmp	.L650	#
.L648:
	.loc 1 2109 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1152
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4847
	movl	-1168(%rbp), %ecx	# img_height, tmp4848
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4849
	call	*%rax	# PelY_14b.1152
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1153
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4850
	movl	-1168(%rbp), %ecx	# img_height, tmp4851
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4852
	call	*%rax	# PelY_14.1153
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1154
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1155
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5275
	sarl	%cl, %edx	# tmp5275, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1145
	jmp	.L650	#
.L647:
	movl	$0, %eax	#, iftmp.1140
.L650:
	.loc 1 2109 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1140, weightedpel
	.loc 1 2113 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1156
	leaq	4(%rax), %rdx	#, tmp4853
	movq	%rdx, -1136(%rbp)	# tmp4853, d
	movswq	-1246(%rbp), %rdx	# x0, D.21231
	leaq	(%rdx,%rdx), %rcx	#, D.21231
	movq	-1128(%rbp), %rdx	# orig_line, tmp4854
	addq	%rcx, %rdx	# D.21231, D.21245
	movzwl	(%rdx), %edx	# *_3363, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1156_3359
	.loc 1 2114 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1158
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4855
	movl	-1168(%rbp), %edx	# img_height, tmp4856
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4857
	movl	%ecx, %r8d	# tmp4855,
	movl	%edx, %ecx	# tmp4856,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1158
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1159
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4858
	movl	-1168(%rbp), %edx	# img_height, tmp4859
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4860
	movl	%ecx, %r8d	# tmp4858,
	movl	%edx, %ecx	# tmp4859,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1159
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1160
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1161
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5276
	sarl	%cl, %edx	# tmp5276, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L651	#,
	.loc 1 2114 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1163
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4861
	movl	-1168(%rbp), %edx	# img_height, tmp4862
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4863
	movl	%ecx, %r8d	# tmp4861,
	movl	%edx, %ecx	# tmp4862,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1163
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1164
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4864
	movl	-1168(%rbp), %edx	# img_height, tmp4865
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4866
	movl	%ecx, %r8d	# tmp4864,
	movl	%edx, %ecx	# tmp4865,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1164
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1165
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1166
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5277
	sarl	%cl, %edx	# tmp5277, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1167
	movl	72684(%rax), %eax	# img.1167_3417->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L652	#,
	movq	img(%rip), %rax	# img, img.1168
	movl	72684(%rax), %eax	# img.1168_3419->max_imgpel_value, iftmp.1162
	jmp	.L654	#
.L652:
	.loc 1 2114 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1169
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4867
	movl	-1168(%rbp), %edx	# img_height, tmp4868
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4869
	movl	%ecx, %r8d	# tmp4867,
	movl	%edx, %ecx	# tmp4868,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1169
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1170
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4870
	movl	-1168(%rbp), %edx	# img_height, tmp4871
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4872
	movl	%ecx, %r8d	# tmp4870,
	movl	%edx, %ecx	# tmp4871,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1170
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1171
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1172
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5278
	sarl	%cl, %edx	# tmp5278, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1162
	jmp	.L654	#
.L651:
	movl	$0, %eax	#, iftmp.1157
.L654:
	.loc 1 2114 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1157, weightedpel
	.loc 1 2118 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1173
	leaq	4(%rax), %rdx	#, tmp4873
	movq	%rdx, -1136(%rbp)	# tmp4873, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$1, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4874
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_3454, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1173_3449
	.loc 1 2119 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1175
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4875
	movl	-1168(%rbp), %edx	# img_height, tmp4876
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4877
	movl	%ecx, %r8d	# tmp4875,
	movl	%edx, %ecx	# tmp4876,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1175
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1176
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4878
	movl	-1168(%rbp), %edx	# img_height, tmp4879
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4880
	movl	%ecx, %r8d	# tmp4878,
	movl	%edx, %ecx	# tmp4879,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1176
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1177
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1178
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5279
	sarl	%cl, %edx	# tmp5279, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L655	#,
	.loc 1 2119 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1180
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4881
	movl	-1168(%rbp), %edx	# img_height, tmp4882
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4883
	movl	%ecx, %r8d	# tmp4881,
	movl	%edx, %ecx	# tmp4882,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1180
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1181
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4884
	movl	-1168(%rbp), %edx	# img_height, tmp4885
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4886
	movl	%ecx, %r8d	# tmp4884,
	movl	%edx, %ecx	# tmp4885,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1181
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1182
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1183
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5280
	sarl	%cl, %edx	# tmp5280, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1184
	movl	72684(%rax), %eax	# img.1184_3508->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L656	#,
	movq	img(%rip), %rax	# img, img.1185
	movl	72684(%rax), %eax	# img.1185_3510->max_imgpel_value, iftmp.1179
	jmp	.L658	#
.L656:
	.loc 1 2119 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1186
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4887
	movl	-1168(%rbp), %edx	# img_height, tmp4888
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4889
	movl	%ecx, %r8d	# tmp4887,
	movl	%edx, %ecx	# tmp4888,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1186
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1187
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4890
	movl	-1168(%rbp), %edx	# img_height, tmp4891
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4892
	movl	%ecx, %r8d	# tmp4890,
	movl	%edx, %ecx	# tmp4891,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1187
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1188
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1189
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5281
	sarl	%cl, %edx	# tmp5281, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1179
	jmp	.L658	#
.L655:
	movl	$0, %eax	#, iftmp.1174
.L658:
	.loc 1 2119 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1174, weightedpel
	.loc 1 2123 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1190
	leaq	4(%rax), %rdx	#, tmp4893
	movq	%rdx, -1136(%rbp)	# tmp4893, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$2, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4894
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_3545, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1190_3540
	.loc 1 2124 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1192
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4895
	movl	-1168(%rbp), %edx	# img_height, tmp4896
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4897
	movl	%ecx, %r8d	# tmp4895,
	movl	%edx, %ecx	# tmp4896,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1192
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1193
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4898
	movl	-1168(%rbp), %edx	# img_height, tmp4899
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4900
	movl	%ecx, %r8d	# tmp4898,
	movl	%edx, %ecx	# tmp4899,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1193
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1194
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1195
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5282
	sarl	%cl, %edx	# tmp5282, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L659	#,
	.loc 1 2124 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1197
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4901
	movl	-1168(%rbp), %edx	# img_height, tmp4902
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4903
	movl	%ecx, %r8d	# tmp4901,
	movl	%edx, %ecx	# tmp4902,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1197
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1198
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4904
	movl	-1168(%rbp), %edx	# img_height, tmp4905
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4906
	movl	%ecx, %r8d	# tmp4904,
	movl	%edx, %ecx	# tmp4905,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1198
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1199
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1200
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5283
	sarl	%cl, %edx	# tmp5283, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1201
	movl	72684(%rax), %eax	# img.1201_3599->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L660	#,
	movq	img(%rip), %rax	# img, img.1202
	movl	72684(%rax), %eax	# img.1202_3601->max_imgpel_value, iftmp.1196
	jmp	.L662	#
.L660:
	.loc 1 2124 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1203
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4907
	movl	-1168(%rbp), %edx	# img_height, tmp4908
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4909
	movl	%ecx, %r8d	# tmp4907,
	movl	%edx, %ecx	# tmp4908,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1203
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1204
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4910
	movl	-1168(%rbp), %edx	# img_height, tmp4911
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4912
	movl	%ecx, %r8d	# tmp4910,
	movl	%edx, %ecx	# tmp4911,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1204
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1205
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1206
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5284
	sarl	%cl, %edx	# tmp5284, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1196
	jmp	.L662	#
.L659:
	movl	$0, %eax	#, iftmp.1191
.L662:
	.loc 1 2124 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1191, weightedpel
	.loc 1 2128 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1207
	leaq	4(%rax), %rdx	#, tmp4913
	movq	%rdx, -1136(%rbp)	# tmp4913, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$3, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4914
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_3636, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1207_3631
	.loc 1 2130 0 discriminator 3
	movzwl	-1208(%rbp), %eax	# sy0, sy0.1208
	addl	$12, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 2131 0 discriminator 3
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp4915
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_3646, tmp4916
	movq	%rax, -1128(%rbp)	# tmp4916, orig_line
	movzwl	-1206(%rbp), %eax	# ry0, ry0.1209
	addl	$12, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 2132 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1211
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4917
	movl	-1168(%rbp), %ecx	# img_height, tmp4918
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4919
	call	*%rax	# PelY_14b.1211
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1212
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4920
	movl	-1168(%rbp), %ecx	# img_height, tmp4921
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4922
	call	*%rax	# PelY_14.1212
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1213
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1214
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5285
	sarl	%cl, %edx	# tmp5285, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L663	#,
	.loc 1 2132 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1216
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4923
	movl	-1168(%rbp), %ecx	# img_height, tmp4924
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4925
	call	*%rax	# PelY_14b.1216
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1217
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4926
	movl	-1168(%rbp), %ecx	# img_height, tmp4927
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4928
	call	*%rax	# PelY_14.1217
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1218
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1219
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5286
	sarl	%cl, %edx	# tmp5286, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1220
	movl	72684(%rax), %eax	# img.1220_3697->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L664	#,
	movq	img(%rip), %rax	# img, img.1221
	movl	72684(%rax), %eax	# img.1221_3699->max_imgpel_value, iftmp.1215
	jmp	.L666	#
.L664:
	.loc 1 2132 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1222
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4929
	movl	-1168(%rbp), %ecx	# img_height, tmp4930
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4931
	call	*%rax	# PelY_14b.1222
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1223
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp4932
	movl	-1168(%rbp), %ecx	# img_height, tmp4933
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4934
	call	*%rax	# PelY_14.1223
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1224
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1225
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5287
	sarl	%cl, %edx	# tmp5287, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1215
	jmp	.L666	#
.L663:
	movl	$0, %eax	#, iftmp.1210
.L666:
	.loc 1 2132 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1210, weightedpel
	.loc 1 2136 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1226
	leaq	4(%rax), %rdx	#, tmp4935
	movq	%rdx, -1136(%rbp)	# tmp4935, d
	movswq	-1246(%rbp), %rdx	# x0, D.21231
	leaq	(%rdx,%rdx), %rcx	#, D.21231
	movq	-1128(%rbp), %rdx	# orig_line, tmp4936
	addq	%rcx, %rdx	# D.21231, D.21245
	movzwl	(%rdx), %edx	# *_3731, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1226_3727
	.loc 1 2137 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1228
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4937
	movl	-1168(%rbp), %edx	# img_height, tmp4938
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4939
	movl	%ecx, %r8d	# tmp4937,
	movl	%edx, %ecx	# tmp4938,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1228
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1229
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4940
	movl	-1168(%rbp), %edx	# img_height, tmp4941
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4942
	movl	%ecx, %r8d	# tmp4940,
	movl	%edx, %ecx	# tmp4941,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1229
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1230
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1231
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5288
	sarl	%cl, %edx	# tmp5288, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L667	#,
	.loc 1 2137 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1233
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4943
	movl	-1168(%rbp), %edx	# img_height, tmp4944
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4945
	movl	%ecx, %r8d	# tmp4943,
	movl	%edx, %ecx	# tmp4944,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1233
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1234
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4946
	movl	-1168(%rbp), %edx	# img_height, tmp4947
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4948
	movl	%ecx, %r8d	# tmp4946,
	movl	%edx, %ecx	# tmp4947,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1234
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1235
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1236
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5289
	sarl	%cl, %edx	# tmp5289, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1237
	movl	72684(%rax), %eax	# img.1237_3785->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L668	#,
	movq	img(%rip), %rax	# img, img.1238
	movl	72684(%rax), %eax	# img.1238_3787->max_imgpel_value, iftmp.1232
	jmp	.L670	#
.L668:
	.loc 1 2137 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1239
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4949
	movl	-1168(%rbp), %edx	# img_height, tmp4950
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4951
	movl	%ecx, %r8d	# tmp4949,
	movl	%edx, %ecx	# tmp4950,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1239
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1240
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4952
	movl	-1168(%rbp), %edx	# img_height, tmp4953
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4954
	movl	%ecx, %r8d	# tmp4952,
	movl	%edx, %ecx	# tmp4953,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1240
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1241
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1242
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5290
	sarl	%cl, %edx	# tmp5290, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1232
	jmp	.L670	#
.L667:
	movl	$0, %eax	#, iftmp.1227
.L670:
	.loc 1 2137 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1227, weightedpel
	.loc 1 2141 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1243
	leaq	4(%rax), %rdx	#, tmp4955
	movq	%rdx, -1136(%rbp)	# tmp4955, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$1, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4956
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_3822, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1243_3817
	.loc 1 2142 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1245
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4957
	movl	-1168(%rbp), %edx	# img_height, tmp4958
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4959
	movl	%ecx, %r8d	# tmp4957,
	movl	%edx, %ecx	# tmp4958,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1245
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1246
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4960
	movl	-1168(%rbp), %edx	# img_height, tmp4961
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4962
	movl	%ecx, %r8d	# tmp4960,
	movl	%edx, %ecx	# tmp4961,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1246
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1247
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1248
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5291
	sarl	%cl, %edx	# tmp5291, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L671	#,
	.loc 1 2142 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1250
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4963
	movl	-1168(%rbp), %edx	# img_height, tmp4964
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4965
	movl	%ecx, %r8d	# tmp4963,
	movl	%edx, %ecx	# tmp4964,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1250
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1251
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4966
	movl	-1168(%rbp), %edx	# img_height, tmp4967
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4968
	movl	%ecx, %r8d	# tmp4966,
	movl	%edx, %ecx	# tmp4967,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1251
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1252
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1253
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5292
	sarl	%cl, %edx	# tmp5292, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1254
	movl	72684(%rax), %eax	# img.1254_3876->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L672	#,
	movq	img(%rip), %rax	# img, img.1255
	movl	72684(%rax), %eax	# img.1255_3878->max_imgpel_value, iftmp.1249
	jmp	.L674	#
.L672:
	.loc 1 2142 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1256
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4969
	movl	-1168(%rbp), %edx	# img_height, tmp4970
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4971
	movl	%ecx, %r8d	# tmp4969,
	movl	%edx, %ecx	# tmp4970,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1256
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1257
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4972
	movl	-1168(%rbp), %edx	# img_height, tmp4973
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4974
	movl	%ecx, %r8d	# tmp4972,
	movl	%edx, %ecx	# tmp4973,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1257
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1258
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1259
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5293
	sarl	%cl, %edx	# tmp5293, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1249
	jmp	.L674	#
.L671:
	movl	$0, %eax	#, iftmp.1244
.L674:
	.loc 1 2142 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1244, weightedpel
	.loc 1 2146 0 is_stmt 1 discriminator 3
	movq	-1136(%rbp), %rax	# d, d.1260
	leaq	4(%rax), %rdx	#, tmp4975
	movq	%rdx, -1136(%rbp)	# tmp4975, d
	movswq	-1246(%rbp), %rdx	# x0, D.21238
	addq	$2, %rdx	#, D.21238
	leaq	(%rdx,%rdx), %rcx	#, D.21238
	movq	-1128(%rbp), %rdx	# orig_line, tmp4976
	addq	%rcx, %rdx	# D.21238, D.21245
	movzwl	(%rdx), %edx	# *_3913, D.21244
	movzwl	%dx, %edx	# D.21244, D.21228
	subl	-1164(%rbp), %edx	# weightedpel, D.21228
	movl	%edx, (%rax)	# D.21228, *d.1260_3908
	.loc 1 2147 0 discriminator 3
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1262
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4977
	movl	-1168(%rbp), %edx	# img_height, tmp4978
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4979
	movl	%ecx, %r8d	# tmp4977,
	movl	%edx, %ecx	# tmp4978,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1262
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1263
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4980
	movl	-1168(%rbp), %edx	# img_height, tmp4981
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4982
	movl	%ecx, %r8d	# tmp4980,
	movl	%edx, %ecx	# tmp4981,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1263
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1264
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1265
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5294
	sarl	%cl, %edx	# tmp5294, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, D.21228
	testl	%eax, %eax	# D.21228
	js	.L675	#,
	.loc 1 2147 0 is_stmt 0 discriminator 1
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1267
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4983
	movl	-1168(%rbp), %edx	# img_height, tmp4984
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4985
	movl	%ecx, %r8d	# tmp4983,
	movl	%edx, %ecx	# tmp4984,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1267
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1268
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4986
	movl	-1168(%rbp), %edx	# img_height, tmp4987
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4988
	movl	%ecx, %r8d	# tmp4986,
	movl	%edx, %ecx	# tmp4987,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1268
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1269
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1270
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5295
	sarl	%cl, %edx	# tmp5295, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movq	img(%rip), %rax	# img, img.1271
	movl	72684(%rax), %eax	# img.1271_3967->max_imgpel_value, D.21228
	cmpl	%eax, %edx	# D.21228, D.21228
	jle	.L676	#,
	movq	img(%rip), %rax	# img, img.1272
	movl	72684(%rax), %eax	# img.1272_3969->max_imgpel_value, iftmp.1266
	jmp	.L678	#
.L676:
	.loc 1 2147 0 discriminator 2
	movswl	-1226(%rbp), %ebx	# weightSpic, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1273
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4989
	movl	-1168(%rbp), %edx	# img_height, tmp4990
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp4991
	movl	%ecx, %r8d	# tmp4989,
	movl	%edx, %ecx	# tmp4990,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1273
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%eax, %ebx	# D.21228, D.21228
	movswl	-1224(%rbp), %r12d	# weightRpic, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1274
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp4992
	movl	-1168(%rbp), %edx	# img_height, tmp4993
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp4994
	movl	%ecx, %r8d	# tmp4992,
	movl	%edx, %ecx	# tmp4993,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1274
	movzwl	%ax, %eax	# D.21244, D.21228
	imull	%r12d, %eax	# D.21228, D.21228
	leal	(%rbx,%rax), %edx	#, D.21228
	movl	wp_luma_round(%rip), %eax	# wp_luma_round, wp_luma_round.1275
	addl	%eax, %eax	# D.21228
	addl	%eax, %edx	# D.21228, D.21228
	movl	luma_log_weight_denom(%rip), %eax	# luma_log_weight_denom, luma_log_weight_denom.1276
	addl	$1, %eax	#, D.21228
	movl	%eax, %ecx	# D.21228, tmp5296
	sarl	%cl, %edx	# tmp5296, D.21228
	movswl	-1218(%rbp), %eax	# offsetBi, D.21228
	addl	%edx, %eax	# D.21228, iftmp.1266
	jmp	.L678	#
.L675:
	movl	$0, %eax	#, iftmp.1261
.L678:
	.loc 1 2147 0 discriminator 3
	movl	%eax, -1164(%rbp)	# iftmp.1261, weightedpel
	.loc 1 2151 0 is_stmt 1 discriminator 3
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp4995
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4002, D.21244
	movzwl	%ax, %eax	# D.21244, D.21228
	subl	-1164(%rbp), %eax	# weightedpel, D.21228
	movl	%eax, %edx	# D.21228, D.21228
	movq	-1136(%rbp), %rax	# d, tmp4996
	movl	%edx, (%rax)	# D.21228, *d_3909
	.loc 1 2154 0 discriminator 3
	movq	input(%rip), %rax	# input, input.1277
	movl	3220(%rax), %eax	# input.1277_4006->AllowTransform8x8, D.21228
	testl	%eax, %eax	# D.21228
	jne	.L679	#,
	.loc 1 2156 0
	movq	input(%rip), %rax	# input, input.1278
	movl	24(%rax), %edx	# input.1278_4008->hadamard, D.21228
	leaq	-1120(%rbp), %rax	#, tmp4997
	movl	%edx, %esi	# D.21228,
	movq	%rax, %rdi	# tmp4997,
	call	SATD	#
	movl	%eax, %edx	# D.21228, D.21242
	movzwl	-1252(%rbp), %eax	# mcost, mcost.1279
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1252(%rbp)	# D.21242, mcost
	movswl	-1252(%rbp), %eax	# mcost, D.21228
	cmpl	80(%rbp), %eax	# min_mcost, D.21228
	jle	.L680	#,
	.loc 1 2158 0
	movw	$1, -1250(%rbp)	#, abort_search
	.loc 1 2159 0
	nop
	jmp	.L687	#
.L679:
	.loc 1 2164 0
	movl	$0, -1192(%rbp)	#, j
	movl	$0, -1188(%rbp)	#, k
	jmp	.L682	#
.L685:
	.loc 1 2165 0
	movl	$0, -1196(%rbp)	#, i
	jmp	.L683	#
.L684:
	.loc 1 2166 0 discriminator 2
	movswl	-1248(%rbp), %edx	# y0, D.21228
	movl	-1192(%rbp), %eax	# j, tmp4998
	leal	(%rdx,%rax), %ecx	#, D.21228
	movswl	-1246(%rbp), %edx	# x0, D.21228
	movl	-1196(%rbp), %eax	# i, tmp4999
	addl	%eax, %edx	# tmp4999, D.21228
	movl	-1188(%rbp), %eax	# k, tmp5001
	cltq
	movl	-1120(%rbp,%rax,4), %eax	# diff, D.21228
	movslq	%edx, %rdx	# D.21228, tmp5002
	movslq	%ecx, %rcx	# D.21228, tmp5003
	salq	$4, %rcx	#, tmp5004
	addq	%rcx, %rdx	# tmp5004, tmp5005
	movl	%eax, -1056(%rbp,%rdx,4)	# D.21228, curr_diff
	.loc 1 2165 0 discriminator 2
	addl	$1, -1196(%rbp)	#, i
	addl	$1, -1188(%rbp)	#, k
.L683:
	.loc 1 2165 0 is_stmt 0 discriminator 1
	cmpl	$3, -1196(%rbp)	#, i
	jle	.L684	#,
	.loc 1 2164 0 is_stmt 1
	addl	$1, -1192(%rbp)	#, j
.L682:
	.loc 1 2164 0 is_stmt 0 discriminator 1
	cmpl	$3, -1192(%rbp)	#, j
	jle	.L685	#,
.L680:
	.loc 1 2054 0 is_stmt 1
	movzwl	-1246(%rbp), %eax	# x0, x0.1280
	addl	$4, %eax	#, D.21242
	movw	%ax, -1246(%rbp)	# D.21242, x0
.L614:
	.loc 1 2054 0 is_stmt 0 discriminator 1
	movzwl	-1246(%rbp), %eax	# x0, tmp5006
	cmpw	-1242(%rbp), %ax	# blocksize_x, tmp5006
	jl	.L686	#,
	jmp	.L687	#
.L613:
	.loc 1 2172 0 is_stmt 1
	movw	$0, -1246(%rbp)	#, x0
	jmp	.L688	#
.L695:
	.loc 1 2175 0
	movl	-1284(%rbp), %eax	# pic_pix_x, tmp5007
	movl	%eax, %edx	# tmp5007, D.21242
	movzwl	-1246(%rbp), %eax	# x0, x0.1281
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movq	48(%rbp), %rax	# s_mv_x, tmp5008
	movzwl	(%rax), %eax	# *s_mv_x_370(D), D.21241
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1204(%rbp)	# D.21242, sx0
	.loc 1 2176 0
	movl	-1284(%rbp), %eax	# pic_pix_x, tmp5009
	movl	%eax, %edx	# tmp5009, D.21242
	movzwl	-1246(%rbp), %eax	# x0, x0.1282
	addl	%edx, %eax	# D.21242, D.21242
	leal	0(,%rax,4), %edx	#, D.21242
	movzwl	-1212(%rbp), %eax	# cand_mv_x, cand_mv_x.1283
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1202(%rbp)	# D.21242, rx0
	.loc 1 2177 0
	leaq	-1120(%rbp), %rax	#, tmp5010
	movq	%rax, -1136(%rbp)	# tmp5010, d
	.loc 1 2179 0
	movzwl	-1208(%rbp), %eax	# sy0, tmp5011
	movw	%ax, -1200(%rbp)	# tmp5011, sy
	.loc 1 2180 0
	movzwl	-1206(%rbp), %eax	# ry0, tmp5012
	movw	%ax, -1198(%rbp)	# tmp5012, ry
	.loc 1 2181 0
	movswq	-1248(%rbp), %rax	# y0, D.21231
	leaq	0(,%rax,8), %rdx	#, D.21231
	movq	-1272(%rbp), %rax	# orig_pic, tmp5013
	addq	%rdx, %rax	# D.21231, D.21243
	movq	(%rax), %rax	# *_4052, tmp5014
	movq	%rax, -1128(%rbp)	# tmp5014, orig_line
	.loc 1 2182 0
	movq	-1136(%rbp), %rbx	# d, d.1284
	leaq	4(%rbx), %rax	#, tmp5015
	movq	%rax, -1136(%rbp)	# tmp5015, d
	movswq	-1246(%rbp), %rax	# x0, D.21231
	leaq	(%rax,%rax), %rdx	#, D.21231
	movq	-1128(%rbp), %rax	# orig_line, tmp5016
	addq	%rdx, %rax	# D.21231, D.21245
	movzwl	(%rax), %eax	# *_4058, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1285
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp5017
	movl	-1168(%rbp), %ecx	# img_height, tmp5018
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5019
	call	*%rax	# PelY_14b.1285
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1286
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp5020
	movl	-1168(%rbp), %ecx	# img_height, tmp5021
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5022
	call	*%rax	# PelY_14.1286
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1284_4054
	.loc 1 2183 0
	movq	-1136(%rbp), %rbx	# d, d.1287
	leaq	4(%rbx), %rax	#, tmp5023
	movq	%rax, -1136(%rbp)	# tmp5023, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5024
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4079, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1288
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5025
	movl	-1168(%rbp), %edx	# img_height, tmp5026
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5027
	movl	%ecx, %r8d	# tmp5025,
	movl	%edx, %ecx	# tmp5026,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1288
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1289
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5028
	movl	-1168(%rbp), %edx	# img_height, tmp5029
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5030
	movl	%ecx, %r8d	# tmp5028,
	movl	%edx, %ecx	# tmp5029,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1289
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1287_4074
	.loc 1 2184 0
	movq	-1136(%rbp), %rbx	# d, d.1290
	leaq	4(%rbx), %rax	#, tmp5031
	movq	%rax, -1136(%rbp)	# tmp5031, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5032
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4102, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1291
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5033
	movl	-1168(%rbp), %edx	# img_height, tmp5034
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5035
	movl	%ecx, %r8d	# tmp5033,
	movl	%edx, %ecx	# tmp5034,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1291
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1292
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5036
	movl	-1168(%rbp), %edx	# img_height, tmp5037
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5038
	movl	%ecx, %r8d	# tmp5036,
	movl	%edx, %ecx	# tmp5037,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1292
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1290_4097
	.loc 1 2185 0
	movq	-1136(%rbp), %rbx	# d, d.1293
	leaq	4(%rbx), %rax	#, tmp5039
	movq	%rax, -1136(%rbp)	# tmp5039, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5040
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4125, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1294
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5041
	movl	-1168(%rbp), %edx	# img_height, tmp5042
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5043
	movl	%ecx, %r8d	# tmp5041,
	movl	%edx, %ecx	# tmp5042,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1294
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1295
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5044
	movl	-1168(%rbp), %edx	# img_height, tmp5045
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5046
	movl	%ecx, %r8d	# tmp5044,
	movl	%edx, %ecx	# tmp5045,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1295
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1293_4120
	.loc 1 2187 0
	movzwl	-1208(%rbp), %eax	# sy0, sy0.1296
	addl	$4, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 2188 0
	movzwl	-1206(%rbp), %eax	# ry0, ry0.1297
	addl	$4, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 2189 0
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp5047
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_4152, tmp5048
	movq	%rax, -1128(%rbp)	# tmp5048, orig_line
	.loc 1 2190 0
	movq	-1136(%rbp), %rbx	# d, d.1298
	leaq	4(%rbx), %rax	#, tmp5049
	movq	%rax, -1136(%rbp)	# tmp5049, d
	movswq	-1246(%rbp), %rax	# x0, D.21231
	leaq	(%rax,%rax), %rdx	#, D.21231
	movq	-1128(%rbp), %rax	# orig_line, tmp5050
	addq	%rdx, %rax	# D.21231, D.21245
	movzwl	(%rax), %eax	# *_4158, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1299
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp5051
	movl	-1168(%rbp), %ecx	# img_height, tmp5052
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5053
	call	*%rax	# PelY_14b.1299
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1300
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp5054
	movl	-1168(%rbp), %ecx	# img_height, tmp5055
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5056
	call	*%rax	# PelY_14.1300
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1298_4154
	.loc 1 2191 0
	movq	-1136(%rbp), %rbx	# d, d.1301
	leaq	4(%rbx), %rax	#, tmp5057
	movq	%rax, -1136(%rbp)	# tmp5057, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5058
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4179, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1302
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5059
	movl	-1168(%rbp), %edx	# img_height, tmp5060
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5061
	movl	%ecx, %r8d	# tmp5059,
	movl	%edx, %ecx	# tmp5060,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1302
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1303
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5062
	movl	-1168(%rbp), %edx	# img_height, tmp5063
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5064
	movl	%ecx, %r8d	# tmp5062,
	movl	%edx, %ecx	# tmp5063,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1303
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1301_4174
	.loc 1 2192 0
	movq	-1136(%rbp), %rbx	# d, d.1304
	leaq	4(%rbx), %rax	#, tmp5065
	movq	%rax, -1136(%rbp)	# tmp5065, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5066
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4202, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1305
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5067
	movl	-1168(%rbp), %edx	# img_height, tmp5068
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5069
	movl	%ecx, %r8d	# tmp5067,
	movl	%edx, %ecx	# tmp5068,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1305
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1306
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5070
	movl	-1168(%rbp), %edx	# img_height, tmp5071
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5072
	movl	%ecx, %r8d	# tmp5070,
	movl	%edx, %ecx	# tmp5071,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1306
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1304_4197
	.loc 1 2193 0
	movq	-1136(%rbp), %rbx	# d, d.1307
	leaq	4(%rbx), %rax	#, tmp5073
	movq	%rax, -1136(%rbp)	# tmp5073, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5074
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4225, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1308
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5075
	movl	-1168(%rbp), %edx	# img_height, tmp5076
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5077
	movl	%ecx, %r8d	# tmp5075,
	movl	%edx, %ecx	# tmp5076,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1308
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1309
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5078
	movl	-1168(%rbp), %edx	# img_height, tmp5079
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5080
	movl	%ecx, %r8d	# tmp5078,
	movl	%edx, %ecx	# tmp5079,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1309
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1307_4220
	.loc 1 2195 0
	movzwl	-1208(%rbp), %eax	# sy0, sy0.1310
	addl	$8, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 2196 0
	movzwl	-1206(%rbp), %eax	# ry0, ry0.1311
	addl	$8, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 2197 0
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp5081
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_4252, tmp5082
	movq	%rax, -1128(%rbp)	# tmp5082, orig_line
	.loc 1 2198 0
	movq	-1136(%rbp), %rbx	# d, d.1312
	leaq	4(%rbx), %rax	#, tmp5083
	movq	%rax, -1136(%rbp)	# tmp5083, d
	movswq	-1246(%rbp), %rax	# x0, D.21231
	leaq	(%rax,%rax), %rdx	#, D.21231
	movq	-1128(%rbp), %rax	# orig_line, tmp5084
	addq	%rdx, %rax	# D.21231, D.21245
	movzwl	(%rax), %eax	# *_4258, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1313
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp5085
	movl	-1168(%rbp), %ecx	# img_height, tmp5086
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5087
	call	*%rax	# PelY_14b.1313
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1314
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp5088
	movl	-1168(%rbp), %ecx	# img_height, tmp5089
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5090
	call	*%rax	# PelY_14.1314
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1312_4254
	.loc 1 2199 0
	movq	-1136(%rbp), %rbx	# d, d.1315
	leaq	4(%rbx), %rax	#, tmp5091
	movq	%rax, -1136(%rbp)	# tmp5091, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5092
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4279, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1316
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5093
	movl	-1168(%rbp), %edx	# img_height, tmp5094
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5095
	movl	%ecx, %r8d	# tmp5093,
	movl	%edx, %ecx	# tmp5094,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1316
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1317
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5096
	movl	-1168(%rbp), %edx	# img_height, tmp5097
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5098
	movl	%ecx, %r8d	# tmp5096,
	movl	%edx, %ecx	# tmp5097,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1317
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1315_4274
	.loc 1 2200 0
	movq	-1136(%rbp), %rbx	# d, d.1318
	leaq	4(%rbx), %rax	#, tmp5099
	movq	%rax, -1136(%rbp)	# tmp5099, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5100
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4302, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1319
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5101
	movl	-1168(%rbp), %edx	# img_height, tmp5102
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5103
	movl	%ecx, %r8d	# tmp5101,
	movl	%edx, %ecx	# tmp5102,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1319
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1320
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5104
	movl	-1168(%rbp), %edx	# img_height, tmp5105
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5106
	movl	%ecx, %r8d	# tmp5104,
	movl	%edx, %ecx	# tmp5105,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1320
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1318_4297
	.loc 1 2201 0
	movq	-1136(%rbp), %rbx	# d, d.1321
	leaq	4(%rbx), %rax	#, tmp5107
	movq	%rax, -1136(%rbp)	# tmp5107, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5108
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4325, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1322
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5109
	movl	-1168(%rbp), %edx	# img_height, tmp5110
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5111
	movl	%ecx, %r8d	# tmp5109,
	movl	%edx, %ecx	# tmp5110,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1322
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1323
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5112
	movl	-1168(%rbp), %edx	# img_height, tmp5113
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5114
	movl	%ecx, %r8d	# tmp5112,
	movl	%edx, %ecx	# tmp5113,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1323
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1321_4320
	.loc 1 2203 0
	movzwl	-1208(%rbp), %eax	# sy0, sy0.1324
	addl	$12, %eax	#, D.21242
	movw	%ax, -1200(%rbp)	# D.21242, sy
	.loc 1 2204 0
	movzwl	-1206(%rbp), %eax	# ry0, ry0.1325
	addl	$12, %eax	#, D.21242
	movw	%ax, -1198(%rbp)	# D.21242, ry
	.loc 1 2205 0
	movswq	-1248(%rbp), %rax	# y0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	0(,%rax,8), %rdx	#, D.21238
	movq	-1272(%rbp), %rax	# orig_pic, tmp5115
	addq	%rdx, %rax	# D.21238, D.21243
	movq	(%rax), %rax	# *_4352, tmp5116
	movq	%rax, -1128(%rbp)	# tmp5116, orig_line
	.loc 1 2206 0
	movq	-1136(%rbp), %rbx	# d, d.1326
	leaq	4(%rbx), %rax	#, tmp5117
	movq	%rax, -1136(%rbp)	# tmp5117, d
	movswq	-1246(%rbp), %rax	# x0, D.21231
	leaq	(%rax,%rax), %rdx	#, D.21231
	movq	-1128(%rbp), %rax	# orig_line, tmp5118
	addq	%rdx, %rax	# D.21231, D.21245
	movzwl	(%rax), %eax	# *_4358, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1327
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp5119
	movl	-1168(%rbp), %ecx	# img_height, tmp5120
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5121
	call	*%rax	# PelY_14b.1327
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1328
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %r8d	# img_width, tmp5122
	movl	-1168(%rbp), %ecx	# img_height, tmp5123
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5124
	call	*%rax	# PelY_14.1328
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1326_4354
	.loc 1 2207 0
	movq	-1136(%rbp), %rbx	# d, d.1329
	leaq	4(%rbx), %rax	#, tmp5125
	movq	%rax, -1136(%rbp)	# tmp5125, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$1, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5126
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4379, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1330
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5127
	movl	-1168(%rbp), %edx	# img_height, tmp5128
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5129
	movl	%ecx, %r8d	# tmp5127,
	movl	%edx, %ecx	# tmp5128,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1330
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1331
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	4(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5130
	movl	-1168(%rbp), %edx	# img_height, tmp5131
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5132
	movl	%ecx, %r8d	# tmp5130,
	movl	%edx, %ecx	# tmp5131,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1331
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1329_4374
	.loc 1 2208 0
	movq	-1136(%rbp), %rbx	# d, d.1332
	leaq	4(%rbx), %rax	#, tmp5133
	movq	%rax, -1136(%rbp)	# tmp5133, d
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$2, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5134
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4402, D.21244
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1333
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5135
	movl	-1168(%rbp), %edx	# img_height, tmp5136
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5137
	movl	%ecx, %r8d	# tmp5135,
	movl	%edx, %ecx	# tmp5136,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1333
	movzwl	%ax, %r13d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1334
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	8(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5138
	movl	-1168(%rbp), %edx	# img_height, tmp5139
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5140
	movl	%ecx, %r8d	# tmp5138,
	movl	%edx, %ecx	# tmp5139,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1334
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r13d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %r12d	# D.21228, D.21228
	movl	%r12d, %eax	# D.21228, D.21228
	movl	%eax, (%rbx)	# D.21228, *d.1332_4397
	.loc 1 2209 0
	movswq	-1246(%rbp), %rax	# x0, D.21238
	addq	$3, %rax	#, D.21238
	leaq	(%rax,%rax), %rdx	#, D.21238
	movq	-1128(%rbp), %rax	# orig_line, tmp5141
	addq	%rdx, %rax	# D.21238, D.21245
	movzwl	(%rax), %eax	# *_4423, D.21244
	movzwl	%ax, %ebx	# D.21244, D.21228
	movq	PelY_14b(%rip), %rax	# PelY_14b, PelY_14b.1335
	movswl	-1204(%rbp), %edx	# sx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1200(%rbp), %esi	# sy, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5142
	movl	-1168(%rbp), %edx	# img_height, tmp5143
	movq	-1160(%rbp), %rdi	# ref1_pic, tmp5144
	movl	%ecx, %r8d	# tmp5142,
	movl	%edx, %ecx	# tmp5143,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14b.1335
	movzwl	%ax, %r12d	# D.21244, D.21228
	movq	PelY_14(%rip), %rax	# PelY_14, PelY_14.1336
	movswl	-1202(%rbp), %edx	# rx0, D.21228
	leal	12(%rdx), %r9d	#, D.21228
	movswl	-1198(%rbp), %esi	# ry, D.21228
	movl	-1172(%rbp), %ecx	# img_width, tmp5145
	movl	-1168(%rbp), %edx	# img_height, tmp5146
	movq	-1152(%rbp), %rdi	# ref2_pic, tmp5147
	movl	%ecx, %r8d	# tmp5145,
	movl	%edx, %ecx	# tmp5146,
	movl	%r9d, %edx	# D.21228,
	call	*%rax	# PelY_14.1336
	movzwl	%ax, %eax	# D.21244, D.21228
	addl	%r12d, %eax	# D.21228, D.21228
	sarl	%eax	# D.21228
	subl	%eax, %ebx	# D.21228, D.21228
	movl	%ebx, %edx	# D.21228, D.21228
	movq	-1136(%rbp), %rax	# d, tmp5148
	movl	%edx, (%rax)	# D.21228, *d_4398
	.loc 1 2212 0
	movq	input(%rip), %rax	# input, input.1337
	movl	3220(%rax), %eax	# input.1337_4441->AllowTransform8x8, D.21228
	testl	%eax, %eax	# D.21228
	jne	.L689	#,
	.loc 1 2214 0
	movq	input(%rip), %rax	# input, input.1338
	movl	24(%rax), %edx	# input.1338_4443->hadamard, D.21228
	leaq	-1120(%rbp), %rax	#, tmp5149
	movl	%edx, %esi	# D.21228,
	movq	%rax, %rdi	# tmp5149,
	call	SATD	#
	movl	%eax, %edx	# D.21228, D.21242
	movzwl	-1252(%rbp), %eax	# mcost, mcost.1339
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1252(%rbp)	# D.21242, mcost
	movswl	-1252(%rbp), %eax	# mcost, D.21228
	cmpl	80(%rbp), %eax	# min_mcost, D.21228
	jle	.L690	#,
	.loc 1 2216 0
	movw	$1, -1250(%rbp)	#, abort_search
	.loc 1 2217 0
	jmp	.L687	#
.L689:
	.loc 1 2222 0
	movl	$0, -1192(%rbp)	#, j
	movl	$0, -1188(%rbp)	#, k
	jmp	.L691	#
.L694:
	.loc 1 2223 0
	movl	$0, -1196(%rbp)	#, i
	jmp	.L692	#
.L693:
	.loc 1 2224 0 discriminator 2
	movswl	-1248(%rbp), %edx	# y0, D.21228
	movl	-1192(%rbp), %eax	# j, tmp5150
	leal	(%rdx,%rax), %ecx	#, D.21228
	movswl	-1246(%rbp), %edx	# x0, D.21228
	movl	-1196(%rbp), %eax	# i, tmp5151
	addl	%eax, %edx	# tmp5151, D.21228
	movl	-1188(%rbp), %eax	# k, tmp5153
	cltq
	movl	-1120(%rbp,%rax,4), %eax	# diff, D.21228
	movslq	%edx, %rdx	# D.21228, tmp5154
	movslq	%ecx, %rcx	# D.21228, tmp5155
	salq	$4, %rcx	#, tmp5156
	addq	%rcx, %rdx	# tmp5156, tmp5157
	movl	%eax, -1056(%rbp,%rdx,4)	# D.21228, curr_diff
	.loc 1 2223 0 discriminator 2
	addl	$1, -1196(%rbp)	#, i
	addl	$1, -1188(%rbp)	#, k
.L692:
	.loc 1 2223 0 is_stmt 0 discriminator 1
	cmpl	$3, -1196(%rbp)	#, i
	jle	.L693	#,
	.loc 1 2222 0 is_stmt 1
	addl	$1, -1192(%rbp)	#, j
.L691:
	.loc 1 2222 0 is_stmt 0 discriminator 1
	cmpl	$3, -1192(%rbp)	#, j
	jle	.L694	#,
.L690:
	.loc 1 2172 0 is_stmt 1
	movzwl	-1246(%rbp), %eax	# x0, x0.1340
	addl	$4, %eax	#, D.21242
	movw	%ax, -1246(%rbp)	# D.21242, x0
.L688:
	.loc 1 2172 0 is_stmt 0 discriminator 1
	movzwl	-1246(%rbp), %eax	# x0, tmp5158
	cmpw	-1242(%rbp), %ax	# blocksize_x, tmp5158
	jl	.L695	#,
.L687:
	.loc 1 2046 0 is_stmt 1
	movzwl	-1248(%rbp), %eax	# y0, y0.1341
	addl	$4, %eax	#, D.21242
	movw	%ax, -1248(%rbp)	# D.21242, y0
.L612:
	.loc 1 2046 0 is_stmt 0 discriminator 1
	movzwl	-1248(%rbp), %eax	# y0, tmp5159
	cmpw	-1240(%rbp), %ax	# blocksize_y, tmp5159
	jge	.L696	#,
	.loc 1 2046 0 discriminator 2
	cmpw	$0, -1250(%rbp)	#, abort_search
	je	.L697	#,
.L696:
	.loc 1 2230 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1342
	movl	3220(%rax), %eax	# input.1342_4469->AllowTransform8x8, D.21228
	testl	%eax, %eax	# D.21228
	je	.L698	#,
	.loc 1 2231 0
	movq	input(%rip), %rax	# input, input.1343
	movl	24(%rax), %ecx	# input.1343_4471->hadamard, D.21228
	movl	-1292(%rbp), %edx	# blocktype, tmp5160
	leaq	-1056(%rbp), %rax	#, tmp5161
	movl	%ecx, %esi	# D.21228,
	movq	%rax, %rdi	# tmp5161,
	call	find_SATD	#
	movl	%eax, %edx	# D.21228, D.21242
	movzwl	-1252(%rbp), %eax	# mcost, mcost.1344
	addl	%edx, %eax	# D.21242, D.21242
	movw	%ax, -1252(%rbp)	# D.21242, mcost
.L698:
	.loc 1 2233 0
	movswl	-1252(%rbp), %eax	# mcost, D.21228
	cmpl	80(%rbp), %eax	# min_mcost, D.21228
	jge	.L699	#,
	.loc 1 2235 0
	movswl	-1252(%rbp), %eax	# mcost, tmp5162
	movl	%eax, 80(%rbp)	# tmp5162, min_mcost
	.loc 1 2236 0
	movzwl	-1256(%rbp), %eax	# pos, tmp5163
	movw	%ax, -1254(%rbp)	# tmp5163, best_pos
.L699:
	.loc 1 2037 0
	movzwl	-1256(%rbp), %eax	# pos, pos.1345
	addl	$1, %eax	#, tmp5164
	movw	%ax, -1256(%rbp)	# tmp5164, pos
.L611:
	.loc 1 2037 0 is_stmt 0 discriminator 1
	movswl	-1256(%rbp), %eax	# pos, D.21228
	cmpl	72(%rbp), %eax	# search_pos4, D.21228
	jl	.L700	#,
	.loc 1 2239 0 is_stmt 1
	cmpw	$0, -1254(%rbp)	#, best_pos
	je	.L701	#,
	.loc 1 2241 0
	movq	32(%rbp), %rax	# mv_x, tmp5165
	movzwl	(%rax), %eax	# *mv_x_339(D), D.21241
	movl	%eax, %edx	# D.21241, D.21242
	movq	spiral_search_x(%rip), %rax	# spiral_search_x, spiral_search_x.1346
	movswq	-1254(%rbp), %rcx	# best_pos, D.21231
	salq	$2, %rcx	#, D.21231
	addq	%rcx, %rax	# D.21231, D.21237
	movl	(%rax), %eax	# *_4488, D.21228
	addl	%edx, %eax	# D.21242, D.21242
	movl	%eax, %edx	# D.21242, D.21241
	movq	32(%rbp), %rax	# mv_x, tmp5166
	movw	%dx, (%rax)	# D.21241, *mv_x_339(D)
	.loc 1 2242 0
	movq	40(%rbp), %rax	# mv_y, tmp5167
	movzwl	(%rax), %eax	# *mv_y_344(D), D.21241
	movl	%eax, %edx	# D.21241, D.21242
	movq	spiral_search_y(%rip), %rax	# spiral_search_y, spiral_search_y.1347
	movswq	-1254(%rbp), %rcx	# best_pos, D.21231
	salq	$2, %rcx	#, D.21231
	addq	%rcx, %rax	# D.21231, D.21237
	movl	(%rax), %eax	# *_4498, D.21228
	addl	%edx, %eax	# D.21242, D.21242
	movl	%eax, %edx	# D.21242, D.21241
	movq	40(%rbp), %rax	# mv_y, tmp5168
	movw	%dx, (%rax)	# D.21241, *mv_y_344(D)
.L701:
	.loc 1 2246 0
	movl	80(%rbp), %eax	# min_mcost, D.21228
	.loc 1 2247 0
	addq	$1288, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE17:
	.size	SubPelBlockSearchBiPred, .-SubPelBlockSearchBiPred
	.globl	BPredPartitionCost
	.type	BPredPartitionCost, @function
BPredPartitionCost:
.LFB18:
	.loc 1 2261 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$1424, %rsp	#,
	movl	%edi, -1380(%rbp)	# blocktype, blocktype
	movl	%esi, -1384(%rbp)	# block8x8, block8x8
	movl	%ecx, %eax	# bw_ref, tmp312
	movl	%r8d, -1396(%rbp)	# lambda_factor, lambda_factor
	movl	%r9d, -1400(%rbp)	# list, list
	movw	%dx, -1388(%rbp)	# tmp311, fw_ref
	movw	%ax, -1392(%rbp)	# tmp312, bw_ref
	.loc 1 2267 0
	movq	input(%rip), %rax	# input, input.1348
	movl	-1380(%rbp), %edx	# blocktype, tmp314
	movslq	%edx, %rdx	# tmp314, tmp313
	addq	$10, %rdx	#, tmp315
	movl	(%rax,%rdx,8), %eax	# input.1348_26->blc_size, D.21246
	movl	$8, %edx	#, tmp317
	cmpl	$8, %eax	#, D.21246
	cmovg	%edx, %eax	# D.21246,, tmp317, tmp316
	movl	%eax, -1340(%rbp)	# tmp316, bsx
	.loc 1 2268 0
	movq	input(%rip), %rax	# input, input.1349
	movl	-1380(%rbp), %edx	# blocktype, tmp319
	movslq	%edx, %rdx	# tmp319, tmp318
	movl	84(%rax,%rdx,8), %eax	# input.1349_30->blc_size, D.21246
	movl	$8, %edx	#, tmp321
	cmpl	$8, %eax	#, D.21246
	cmovg	%edx, %eax	# D.21246,, tmp321, tmp320
	movl	%eax, -1336(%rbp)	# tmp320, bsy
	.loc 1 2272 0
	movl	$0, -1352(%rbp)	#, mvd_bits
	.loc 1 2273 0
	movl	$4, %eax	#, tmp323
	cmpl	$4, -1380(%rbp)	#, blocktype
	cmovle	-1380(%rbp), %eax	# blocktype,, tmp322
	movl	%eax, -1332(%rbp)	# tmp322, parttype
	.loc 1 2274 0
	movq	input(%rip), %rax	# input, input.1350
	movl	-1332(%rbp), %edx	# parttype, tmp325
	movslq	%edx, %rdx	# tmp325, tmp324
	addq	$18, %rdx	#, tmp326
	movl	(%rax,%rdx,8), %eax	# input.1350_35->part_size, tmp327
	movl	%eax, -1328(%rbp)	# tmp327, step_h0
	.loc 1 2275 0
	movq	input(%rip), %rax	# input, input.1351
	movl	-1332(%rbp), %edx	# parttype, tmp329
	movslq	%edx, %rdx	# tmp329, tmp328
	movl	148(%rax,%rdx,8), %eax	# input.1351_37->part_size, tmp330
	movl	%eax, -1324(%rbp)	# tmp330, step_v0
	.loc 1 2276 0
	movq	input(%rip), %rax	# input, input.1352
	movl	-1380(%rbp), %edx	# blocktype, tmp332
	movslq	%edx, %rdx	# tmp332, tmp331
	addq	$18, %rdx	#, tmp333
	movl	(%rax,%rdx,8), %eax	# input.1352_39->part_size, tmp334
	movl	%eax, -1320(%rbp)	# tmp334, step_h
	.loc 1 2277 0
	movq	input(%rip), %rax	# input, input.1353
	movl	-1380(%rbp), %edx	# blocktype, tmp336
	movslq	%edx, %rdx	# tmp336, tmp335
	movl	148(%rax,%rdx,8), %eax	# input.1353_41->part_size, tmp337
	movl	%eax, -1316(%rbp)	# tmp337, step_v
	.loc 1 2280 0
	cmpl	$0, -1400(%rbp)	#, list
	je	.L704	#,
	.loc 1 2280 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1355
	movq	71936(%rax), %rax	# img.1355_44->bipred_mv1, iftmp.1354
	jmp	.L705	#
.L704:
	.loc 1 2280 0 discriminator 2
	movq	img(%rip), %rax	# img, img.1356
	movq	71944(%rax), %rax	# img.1356_46->bipred_mv2, iftmp.1354
.L705:
	.loc 1 2280 0 discriminator 3
	movq	%rax, -1296(%rbp)	# iftmp.1354, all_mv
	.loc 1 2281 0 is_stmt 1 discriminator 3
	movq	img(%rip), %rax	# img, img.1357
	movq	71920(%rax), %rax	# img.1357_49->pred_mv, tmp338
	movq	%rax, -1288(%rbp)	# tmp338, p_mv
	.loc 1 2284 0 discriminator 3
	movl	-1384(%rbp), %eax	# block8x8, tmp340
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp342
	movslq	%edx, %rdx	# tmp342, tmp341
	salq	$2, %rdx	#, tmp343
	addq	%rdx, %rax	# tmp343, tmp344
	movl	by0.6461(,%rax,4), %eax	# by0, tmp345
	movl	%eax, -1376(%rbp)	# tmp345, v
	jmp	.L706	#
.L709:
	.loc 1 2285 0
	movl	-1384(%rbp), %eax	# block8x8, tmp347
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp349
	movslq	%edx, %rdx	# tmp349, tmp348
	salq	$2, %rdx	#, tmp350
	addq	%rdx, %rax	# tmp350, tmp351
	movl	bx0.6460(,%rax,4), %eax	# bx0, tmp352
	movl	%eax, -1372(%rbp)	# tmp352, h
	jmp	.L707	#
.L708:
	.loc 1 2287 0 discriminator 2
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.1358
	movl	-1372(%rbp), %eax	# h, tmp353
	cltq
	leaq	0(,%rax,8), %rcx	#, D.21247
	movq	-1296(%rbp), %rax	# all_mv, tmp354
	addq	%rcx, %rax	# D.21247, D.21248
	movq	(%rax), %rax	# *_61, D.21249
	movl	-1376(%rbp), %ecx	# v, tmp355
	movslq	%ecx, %rcx	# tmp355, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rax	# D.21247, D.21249
	movq	(%rax), %rax	# *_65, D.21250
	movq	(%rax), %rax	# *_66, D.21251
	movswq	-1388(%rbp), %rcx	# fw_ref, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rax	# D.21247, D.21251
	movq	(%rax), %rax	# *_71, D.21252
	movl	-1380(%rbp), %ecx	# blocktype, tmp356
	movslq	%ecx, %rcx	# tmp356, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rax	# D.21247, D.21252
	movq	(%rax), %rax	# *_75, D.21253
	movzwl	(%rax), %eax	# *_76, D.21254
	movswl	%ax, %ecx	# D.21254, D.21246
	movl	-1372(%rbp), %eax	# h, tmp357
	cltq
	leaq	0(,%rax,8), %rsi	#, D.21247
	movq	-1288(%rbp), %rax	# p_mv, tmp358
	addq	%rsi, %rax	# D.21247, D.21248
	movq	(%rax), %rax	# *_81, D.21249
	movl	-1376(%rbp), %esi	# v, tmp359
	movslq	%esi, %rsi	# tmp359, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rax	# D.21247, D.21249
	movq	(%rax), %rax	# *_85, D.21250
	movq	(%rax), %rax	# *_86, D.21251
	movswq	-1388(%rbp), %rsi	# fw_ref, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rax	# D.21247, D.21251
	movq	(%rax), %rax	# *_90, D.21252
	movl	-1380(%rbp), %esi	# blocktype, tmp360
	movslq	%esi, %rsi	# tmp360, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rax	# D.21247, D.21252
	movq	(%rax), %rax	# *_94, D.21253
	movzwl	(%rax), %eax	# *_95, D.21254
	cwtl
	subl	%eax, %ecx	# D.21246, D.21246
	movl	%ecx, %eax	# D.21246, D.21246
	cltq
	salq	$2, %rax	#, D.21247
	addq	%rdx, %rax	# mvbits.1358, D.21255
	movl	(%rax), %eax	# *_101, D.21246
	addl	%eax, -1352(%rbp)	# D.21246, mvd_bits
	.loc 1 2288 0 discriminator 2
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.1359
	movl	-1372(%rbp), %eax	# h, tmp361
	cltq
	leaq	0(,%rax,8), %rcx	#, D.21247
	movq	-1296(%rbp), %rax	# all_mv, tmp362
	addq	%rcx, %rax	# D.21247, D.21248
	movq	(%rax), %rax	# *_107, D.21249
	movl	-1376(%rbp), %ecx	# v, tmp363
	movslq	%ecx, %rcx	# tmp363, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rax	# D.21247, D.21249
	movq	(%rax), %rax	# *_111, D.21250
	movq	(%rax), %rax	# *_112, D.21251
	movswq	-1388(%rbp), %rcx	# fw_ref, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rax	# D.21247, D.21251
	movq	(%rax), %rax	# *_116, D.21252
	movl	-1380(%rbp), %ecx	# blocktype, tmp364
	movslq	%ecx, %rcx	# tmp364, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rax	# D.21247, D.21252
	movq	(%rax), %rax	# *_120, D.21253
	addq	$2, %rax	#, D.21253
	movzwl	(%rax), %eax	# *_122, D.21254
	movswl	%ax, %ecx	# D.21254, D.21246
	movl	-1372(%rbp), %eax	# h, tmp365
	cltq
	leaq	0(,%rax,8), %rsi	#, D.21247
	movq	-1288(%rbp), %rax	# p_mv, tmp366
	addq	%rsi, %rax	# D.21247, D.21248
	movq	(%rax), %rax	# *_127, D.21249
	movl	-1376(%rbp), %esi	# v, tmp367
	movslq	%esi, %rsi	# tmp367, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rax	# D.21247, D.21249
	movq	(%rax), %rax	# *_131, D.21250
	movq	(%rax), %rax	# *_132, D.21251
	movswq	-1388(%rbp), %rsi	# fw_ref, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rax	# D.21247, D.21251
	movq	(%rax), %rax	# *_136, D.21252
	movl	-1380(%rbp), %esi	# blocktype, tmp368
	movslq	%esi, %rsi	# tmp368, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rax	# D.21247, D.21252
	movq	(%rax), %rax	# *_140, D.21253
	addq	$2, %rax	#, D.21253
	movzwl	(%rax), %eax	# *_142, D.21254
	cwtl
	subl	%eax, %ecx	# D.21246, D.21246
	movl	%ecx, %eax	# D.21246, D.21246
	cltq
	salq	$2, %rax	#, D.21247
	addq	%rdx, %rax	# mvbits.1359, D.21255
	movl	(%rax), %eax	# *_148, D.21246
	addl	%eax, -1352(%rbp)	# D.21246, mvd_bits
	.loc 1 2290 0 discriminator 2
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.1360
	movl	-1372(%rbp), %eax	# h, tmp369
	cltq
	leaq	0(,%rax,8), %rcx	#, D.21247
	movq	-1296(%rbp), %rax	# all_mv, tmp370
	addq	%rcx, %rax	# D.21247, D.21248
	movq	(%rax), %rax	# *_154, D.21249
	movl	-1376(%rbp), %ecx	# v, tmp371
	movslq	%ecx, %rcx	# tmp371, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rax	# D.21247, D.21249
	movq	(%rax), %rax	# *_158, D.21250
	addq	$8, %rax	#, D.21250
	movq	(%rax), %rax	# *_160, D.21251
	movswq	-1392(%rbp), %rcx	# bw_ref, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rax	# D.21247, D.21251
	movq	(%rax), %rax	# *_165, D.21252
	movl	-1380(%rbp), %ecx	# blocktype, tmp372
	movslq	%ecx, %rcx	# tmp372, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rax	# D.21247, D.21252
	movq	(%rax), %rax	# *_169, D.21253
	movzwl	(%rax), %eax	# *_170, D.21254
	movswl	%ax, %ecx	# D.21254, D.21246
	movl	-1372(%rbp), %eax	# h, tmp373
	cltq
	leaq	0(,%rax,8), %rsi	#, D.21247
	movq	-1288(%rbp), %rax	# p_mv, tmp374
	addq	%rsi, %rax	# D.21247, D.21248
	movq	(%rax), %rax	# *_175, D.21249
	movl	-1376(%rbp), %esi	# v, tmp375
	movslq	%esi, %rsi	# tmp375, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rax	# D.21247, D.21249
	movq	(%rax), %rax	# *_179, D.21250
	addq	$8, %rax	#, D.21250
	movq	(%rax), %rax	# *_181, D.21251
	movswq	-1392(%rbp), %rsi	# bw_ref, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rax	# D.21247, D.21251
	movq	(%rax), %rax	# *_185, D.21252
	movl	-1380(%rbp), %esi	# blocktype, tmp376
	movslq	%esi, %rsi	# tmp376, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rax	# D.21247, D.21252
	movq	(%rax), %rax	# *_189, D.21253
	movzwl	(%rax), %eax	# *_190, D.21254
	cwtl
	subl	%eax, %ecx	# D.21246, D.21246
	movl	%ecx, %eax	# D.21246, D.21246
	cltq
	salq	$2, %rax	#, D.21247
	addq	%rdx, %rax	# mvbits.1360, D.21255
	movl	(%rax), %eax	# *_196, D.21246
	addl	%eax, -1352(%rbp)	# D.21246, mvd_bits
	.loc 1 2291 0 discriminator 2
	movq	mvbits(%rip), %rax	# mvbits, mvbits.1361
	movl	-1372(%rbp), %edx	# h, tmp377
	movslq	%edx, %rdx	# tmp377, D.21247
	leaq	0(,%rdx,8), %rcx	#, D.21247
	movq	-1296(%rbp), %rdx	# all_mv, tmp378
	addq	%rcx, %rdx	# D.21247, D.21248
	movq	(%rdx), %rdx	# *_202, D.21249
	movl	-1376(%rbp), %ecx	# v, tmp379
	movslq	%ecx, %rcx	# tmp379, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rdx	# D.21247, D.21249
	movq	(%rdx), %rdx	# *_206, D.21250
	addq	$8, %rdx	#, D.21250
	movq	(%rdx), %rdx	# *_208, D.21251
	movswq	-1392(%rbp), %rcx	# bw_ref, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rdx	# D.21247, D.21251
	movq	(%rdx), %rdx	# *_212, D.21252
	movl	-1380(%rbp), %ecx	# blocktype, tmp380
	movslq	%ecx, %rcx	# tmp380, D.21247
	salq	$3, %rcx	#, D.21247
	addq	%rcx, %rdx	# D.21247, D.21252
	movq	(%rdx), %rdx	# *_216, D.21253
	addq	$2, %rdx	#, D.21253
	movzwl	(%rdx), %edx	# *_218, D.21254
	movswl	%dx, %ecx	# D.21254, D.21246
	movl	-1372(%rbp), %edx	# h, tmp381
	movslq	%edx, %rdx	# tmp381, D.21247
	leaq	0(,%rdx,8), %rsi	#, D.21247
	movq	-1288(%rbp), %rdx	# p_mv, tmp382
	addq	%rsi, %rdx	# D.21247, D.21248
	movq	(%rdx), %rdx	# *_223, D.21249
	movl	-1376(%rbp), %esi	# v, tmp383
	movslq	%esi, %rsi	# tmp383, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rdx	# D.21247, D.21249
	movq	(%rdx), %rdx	# *_227, D.21250
	addq	$8, %rdx	#, D.21250
	movq	(%rdx), %rdx	# *_229, D.21251
	movswq	-1392(%rbp), %rsi	# bw_ref, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rdx	# D.21247, D.21251
	movq	(%rdx), %rdx	# *_233, D.21252
	movl	-1380(%rbp), %esi	# blocktype, tmp384
	movslq	%esi, %rsi	# tmp384, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rdx	# D.21247, D.21252
	movq	(%rdx), %rdx	# *_237, D.21253
	addq	$2, %rdx	#, D.21253
	movzwl	(%rdx), %edx	# *_239, D.21254
	movswl	%dx, %edx	# D.21254, D.21246
	subl	%edx, %ecx	# D.21246, D.21246
	movl	%ecx, %edx	# D.21246, D.21246
	movslq	%edx, %rdx	# D.21246, D.21247
	salq	$2, %rdx	#, D.21247
	addq	%rdx, %rax	# D.21247, D.21255
	movl	(%rax), %eax	# *_245, D.21246
	addl	%eax, -1352(%rbp)	# D.21246, mvd_bits
	.loc 1 2285 0 discriminator 2
	movl	-1320(%rbp), %eax	# step_h, tmp385
	addl	%eax, -1372(%rbp)	# tmp385, h
.L707:
	.loc 1 2285 0 is_stmt 0 discriminator 1
	movl	-1384(%rbp), %eax	# block8x8, tmp387
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp389
	movslq	%edx, %rdx	# tmp389, tmp388
	salq	$2, %rdx	#, tmp390
	addq	%rdx, %rax	# tmp390, tmp391
	movl	bx0.6460(,%rax,4), %edx	# bx0, D.21246
	movl	-1328(%rbp), %eax	# step_h0, tmp392
	addl	%edx, %eax	# D.21246, D.21246
	cmpl	-1372(%rbp), %eax	# h, D.21246
	jg	.L708	#,
	.loc 1 2284 0 is_stmt 1
	movl	-1316(%rbp), %eax	# step_v, tmp393
	addl	%eax, -1376(%rbp)	# tmp393, v
.L706:
	.loc 1 2284 0 is_stmt 0 discriminator 1
	movl	-1384(%rbp), %eax	# block8x8, tmp395
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp397
	movslq	%edx, %rdx	# tmp397, tmp396
	salq	$2, %rdx	#, tmp398
	addq	%rdx, %rax	# tmp398, tmp399
	movl	by0.6461(,%rax,4), %edx	# by0, D.21246
	movl	-1324(%rbp), %eax	# step_v0, tmp400
	addl	%edx, %eax	# D.21246, D.21246
	cmpl	-1376(%rbp), %eax	# v, D.21246
	jg	.L709	#,
	.loc 1 2294 0 is_stmt 1
	movl	-1396(%rbp), %eax	# lambda_factor, tmp401
	imull	-1352(%rbp), %eax	# mvd_bits, D.21246
	sarl	$16, %eax	#, tmp402
	movl	%eax, -1368(%rbp)	# tmp402, mcost
	.loc 1 2297 0
	movl	$0, -1344(%rbp)	#, byy
	movl	-1384(%rbp), %eax	# block8x8, tmp404
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp406
	movslq	%edx, %rdx	# tmp406, tmp405
	salq	$2, %rdx	#, tmp407
	addq	%rdx, %rax	# tmp407, tmp408
	movl	by0.6461(,%rax,4), %eax	# by0, tmp409
	movl	%eax, -1376(%rbp)	# tmp409, v
	jmp	.L710	#
.L719:
	.loc 1 2299 0
	movq	img(%rip), %rax	# img, img.1362
	movl	172(%rax), %edx	# img.1362_257->opix_y, D.21246
	movl	-1376(%rbp), %eax	# v, tmp413
	sall	$2, %eax	#, tmp412
	movl	%eax, -1312(%rbp)	# tmp412, block_y
	movl	-1312(%rbp), %eax	# block_y, tmp417
	addl	%edx, %eax	# D.21246, tmp416
	movl	%eax, -1308(%rbp)	# tmp416, pic_pix_y
	.loc 1 2301 0
	movl	$0, -1348(%rbp)	#, bxx
	movl	-1384(%rbp), %eax	# block8x8, tmp419
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp421
	movslq	%edx, %rdx	# tmp421, tmp420
	salq	$2, %rdx	#, tmp422
	addq	%rdx, %rax	# tmp422, tmp423
	movl	bx0.6460(,%rax,4), %eax	# bx0, tmp424
	movl	%eax, -1372(%rbp)	# tmp424, h
	jmp	.L711	#
.L718:
	.loc 1 2303 0
	movq	img(%rip), %rax	# img, img.1363
	movl	168(%rax), %edx	# img.1363_265->opix_x, D.21246
	movl	-1372(%rbp), %eax	# h, tmp428
	sall	$2, %eax	#, tmp427
	movl	%eax, -1304(%rbp)	# tmp427, block_x
	movl	-1304(%rbp), %eax	# block_x, tmp432
	addl	%edx, %eax	# D.21246, tmp431
	movl	%eax, -1300(%rbp)	# tmp431, pic_pix_x
	.loc 1 2305 0
	movswl	-1392(%rbp), %ecx	# bw_ref, D.21246
	movswl	-1388(%rbp), %r9d	# fw_ref, D.21246
	movl	-1380(%rbp), %r8d	# blocktype, tmp433
	movl	-1380(%rbp), %edx	# blocktype, tmp434
	movl	-1312(%rbp), %esi	# block_y, tmp435
	movl	-1304(%rbp), %eax	# block_x, tmp436
	movl	-1400(%rbp), %edi	# list, tmp437
	movl	%edi, 8(%rsp)	# tmp437,
	movl	%ecx, (%rsp)	# D.21246,
	movl	%edx, %ecx	# tmp434,
	movl	$2, %edx	#,
	movl	%eax, %edi	# tmp436,
	call	LumaPrediction4x4Bi	#
	.loc 1 2307 0
	movl	$0, -1360(%rbp)	#, j
	movl	-1360(%rbp), %eax	# j, tmp438
	movl	%eax, -1356(%rbp)	# tmp438, k
	jmp	.L712	#
.L715:
	.loc 1 2308 0
	movl	$0, -1364(%rbp)	#, i
	jmp	.L713	#
.L714:
	.loc 1 2310 0 discriminator 2
	movl	-1360(%rbp), %eax	# j, tmp439
	movl	-1344(%rbp), %edx	# byy, tmp440
	addl	%edx, %eax	# tmp440, D.21246
	movl	-1364(%rbp), %edx	# i, tmp441
	movl	-1348(%rbp), %ecx	# bxx, tmp442
	addl	%ecx, %edx	# tmp442, D.21246
	.loc 1 2311 0 discriminator 2
	movq	imgY_org(%rip), %rcx	# imgY_org, imgY_org.1364
	movl	-1360(%rbp), %esi	# j, tmp443
	movl	-1308(%rbp), %edi	# pic_pix_y, tmp444
	addl	%edi, %esi	# tmp444, D.21246
	movslq	%esi, %rsi	# D.21246, D.21247
	salq	$3, %rsi	#, D.21247
	addq	%rsi, %rcx	# D.21247, D.21256
	movq	(%rcx), %rcx	# *_280, D.21257
	movl	-1364(%rbp), %esi	# i, tmp445
	movl	-1300(%rbp), %edi	# pic_pix_x, tmp446
	addl	%edi, %esi	# tmp446, D.21246
	movslq	%esi, %rsi	# D.21246, D.21247
	addq	%rsi, %rsi	# D.21247
	addq	%rsi, %rcx	# D.21247, D.21257
	movzwl	(%rcx), %ecx	# *_285, D.21258
	movzwl	%cx, %esi	# D.21258, D.21246
	movq	img(%rip), %rcx	# img, img.1365
	movl	-1304(%rbp), %edi	# block_x, tmp447
	movl	-1364(%rbp), %r8d	# i, tmp448
	leal	(%r8,%rdi), %r9d	#, D.21246
	movl	-1312(%rbp), %edi	# block_y, tmp449
	movl	-1360(%rbp), %r8d	# j, tmp450
	addl	%r8d, %edi	# tmp450, D.21246
	movslq	%edi, %rdi	# D.21246, tmp451
	movslq	%r9d, %r8	# D.21246, tmp452
	salq	$4, %r8	#, tmp453
	addq	%r8, %rdi	# tmp453, tmp454
	addq	$6296, %rdi	#, tmp455
	movzwl	8(%rcx,%rdi,2), %ecx	# img.1365_288->mpr, D.21258
	movzwl	%cx, %ecx	# D.21258, D.21246
	subl	%ecx, %esi	# D.21246, D.21246
	.loc 1 2310 0 discriminator 2
	movslq	%edx, %rcx	# D.21246, tmp456
	movslq	%eax, %rdi	# D.21246, tmp457
	salq	$4, %rdi	#, tmp458
	addq	%rdi, %rcx	# tmp458, tmp459
	movl	%esi, -1024(%rbp,%rcx,4)	# D.21246, curr_blk
	movslq	%edx, %rdx	# D.21246, tmp460
	cltq
	salq	$4, %rax	#, tmp462
	addq	%rdx, %rax	# tmp460, tmp463
	movl	-1024(%rbp,%rax,4), %edx	# curr_blk, D.21246
	movl	-1356(%rbp), %eax	# k, tmp465
	cltq
	movl	%edx, -1280(%rbp,%rax,4)	# D.21246, diff
	.loc 1 2308 0 discriminator 2
	addl	$1, -1364(%rbp)	#, i
	addl	$1, -1356(%rbp)	#, k
.L713:
	.loc 1 2308 0 is_stmt 0 discriminator 1
	cmpl	$3, -1364(%rbp)	#, i
	jle	.L714	#,
	.loc 1 2307 0 is_stmt 1
	addl	$1, -1360(%rbp)	#, j
.L712:
	.loc 1 2307 0 is_stmt 0 discriminator 1
	cmpl	$3, -1360(%rbp)	#, j
	jle	.L715	#,
	.loc 1 2314 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1366
	movl	3220(%rax), %eax	# input.1366_298->AllowTransform8x8, D.21246
	testl	%eax, %eax	# D.21246
	je	.L716	#,
	.loc 1 2314 0 is_stmt 0 discriminator 1
	cmpl	$4, -1380(%rbp)	#, blocktype
	jle	.L717	#,
.L716:
	.loc 1 2315 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1367
	movl	24(%rax), %edx	# input.1367_300->hadamard, D.21246
	leaq	-1280(%rbp), %rax	#, tmp466
	movl	%edx, %esi	# D.21246,
	movq	%rax, %rdi	# tmp466,
	call	SATD	#
	addl	%eax, -1368(%rbp)	# D.21246, mcost
.L717:
	.loc 1 2301 0
	addl	$4, -1348(%rbp)	#, bxx
	addl	$1, -1372(%rbp)	#, h
.L711:
	.loc 1 2301 0 is_stmt 0 discriminator 1
	movl	-1384(%rbp), %eax	# block8x8, tmp468
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp470
	movslq	%edx, %rdx	# tmp470, tmp469
	salq	$2, %rdx	#, tmp471
	addq	%rdx, %rax	# tmp471, tmp472
	movl	bx0.6460(,%rax,4), %edx	# bx0, D.21246
	movl	-1328(%rbp), %eax	# step_h0, tmp473
	addl	%edx, %eax	# D.21246, D.21246
	cmpl	-1372(%rbp), %eax	# h, D.21246
	jg	.L718	#,
	.loc 1 2297 0 is_stmt 1
	addl	$4, -1344(%rbp)	#, byy
	addl	$1, -1376(%rbp)	#, v
.L710:
	.loc 1 2297 0 is_stmt 0 discriminator 1
	movl	-1384(%rbp), %eax	# block8x8, tmp475
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp477
	movslq	%edx, %rdx	# tmp477, tmp476
	salq	$2, %rdx	#, tmp478
	addq	%rdx, %rax	# tmp478, tmp479
	movl	by0.6461(,%rax,4), %edx	# by0, D.21246
	movl	-1324(%rbp), %eax	# step_v0, tmp480
	addl	%edx, %eax	# D.21246, D.21246
	cmpl	-1376(%rbp), %eax	# v, D.21246
	jg	.L719	#,
	.loc 1 2319 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1368
	movl	3220(%rax), %eax	# input.1368_308->AllowTransform8x8, D.21246
	testl	%eax, %eax	# D.21246
	je	.L720	#,
	.loc 1 2319 0 is_stmt 0 discriminator 1
	cmpl	$4, -1380(%rbp)	#, blocktype
	jg	.L720	#,
	.loc 1 2321 0 is_stmt 1
	movl	$0, -1344(%rbp)	#, byy
	jmp	.L721	#
.L728:
	.loc 1 2322 0
	movl	$0, -1348(%rbp)	#, bxx
	jmp	.L722	#
.L727:
	.loc 1 2324 0
	movl	$0, -1356(%rbp)	#, k
	.loc 1 2325 0
	movl	$0, -1364(%rbp)	#, i
	jmp	.L723	#
.L726:
	.loc 1 2326 0
	movl	$0, -1360(%rbp)	#, j
	jmp	.L724	#
.L725:
	.loc 1 2327 0 discriminator 2
	movl	-1356(%rbp), %eax	# k, k.1369
	leal	1(%rax), %edx	#, tmp481
	movl	%edx, -1356(%rbp)	# tmp481, k
	movl	-1344(%rbp), %edx	# byy, tmp482
	movl	-1364(%rbp), %ecx	# i, tmp483
	leal	(%rcx,%rdx), %esi	#, D.21246
	movl	-1348(%rbp), %edx	# bxx, tmp484
	movl	-1360(%rbp), %ecx	# j, tmp485
	addl	%ecx, %edx	# tmp485, D.21246
	movslq	%edx, %rdx	# D.21246, tmp486
	movslq	%esi, %rcx	# D.21246, tmp487
	salq	$4, %rcx	#, tmp488
	addq	%rcx, %rdx	# tmp488, tmp489
	movl	-1024(%rbp,%rdx,4), %edx	# curr_blk, D.21246
	cltq
	movl	%edx, -1280(%rbp,%rax,4)	# D.21246, diff
	.loc 1 2326 0 discriminator 2
	addl	$1, -1360(%rbp)	#, j
.L724:
	.loc 1 2326 0 is_stmt 0 discriminator 1
	cmpl	$7, -1360(%rbp)	#, j
	jle	.L725	#,
	.loc 1 2325 0 is_stmt 1
	addl	$1, -1364(%rbp)	#, i
.L723:
	.loc 1 2325 0 is_stmt 0 discriminator 1
	cmpl	$7, -1364(%rbp)	#, i
	jle	.L726	#,
	.loc 1 2329 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1370
	movl	24(%rax), %edx	# input.1370_326->hadamard, D.21246
	leaq	-1280(%rbp), %rax	#, tmp491
	movl	%edx, %esi	# D.21246,
	movq	%rax, %rdi	# tmp491,
	call	SATD8X8	#
	addl	%eax, -1368(%rbp)	# D.21246, mcost
	.loc 1 2322 0
	movl	-1340(%rbp), %eax	# bsx, tmp492
	addl	%eax, -1348(%rbp)	# tmp492, bxx
.L722:
	.loc 1 2322 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1371
	movl	-1332(%rbp), %edx	# parttype, tmp494
	movslq	%edx, %rdx	# tmp494, tmp493
	addq	$10, %rdx	#, tmp495
	movl	(%rax,%rdx,8), %eax	# input.1371_314->blc_size, D.21246
	cmpl	-1348(%rbp), %eax	# bxx, D.21246
	jg	.L727	#,
	.loc 1 2321 0 is_stmt 1
	movl	-1336(%rbp), %eax	# bsy, tmp496
	addl	%eax, -1344(%rbp)	# tmp496, byy
.L721:
	.loc 1 2321 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1372
	movl	-1332(%rbp), %edx	# parttype, tmp498
	movslq	%edx, %rdx	# tmp498, tmp497
	movl	84(%rax,%rdx,8), %eax	# input.1372_311->blc_size, D.21246
	cmpl	-1344(%rbp), %eax	# byy, D.21246
	jg	.L728	#,
.L720:
	.loc 1 2333 0 is_stmt 1
	movl	-1368(%rbp), %eax	# mcost, D.21246
	.loc 1 2334 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE18:
	.size	BPredPartitionCost, .-BPredPartitionCost
	.globl	BlockMotionSearch
	.type	BlockMotionSearch, @function
BlockMotionSearch:
.LFB19:
	.loc 1 2356 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$296, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movl	%edi, %eax	# ref, tmp1971
	movl	%esi, -200(%rbp)	# list, list
	movl	%edx, -204(%rbp)	# mb_x, mb_x
	movl	%ecx, -208(%rbp)	# mb_y, mb_y
	movl	%r8d, -212(%rbp)	# blocktype, blocktype
	movl	%r9d, -216(%rbp)	# search_range, search_range
	movsd	%xmm0, -224(%rbp)	# lambda, lambda
	movw	%ax, -196(%rbp)	# tmp1971, ref
	.loc 1 2366 0
	movl	$2147483647, -140(%rbp)	#, max_value
	.loc 1 2367 0
	movl	-140(%rbp), %eax	# max_value, tmp1972
	movl	%eax, -156(%rbp)	# tmp1972, min_mcost
	.loc 1 2369 0
	movl	-204(%rbp), %eax	# mb_x, tmp1976
	sarl	$2, %eax	#, tmp1975
	movl	%eax, -136(%rbp)	# tmp1975, block_x
	.loc 1 2370 0
	movl	-208(%rbp), %eax	# mb_y, tmp1980
	sarl	$2, %eax	#, tmp1979
	movl	%eax, -132(%rbp)	# tmp1979, block_y
	.loc 1 2372 0
	movq	input(%rip), %rax	# input, input.1373
	movl	-212(%rbp), %edx	# blocktype, tmp1982
	movslq	%edx, %rdx	# tmp1982, tmp1981
	addq	$10, %rdx	#, tmp1983
	movl	(%rax,%rdx,8), %eax	# input.1373_59->blc_size, tmp1984
	movl	%eax, -128(%rbp)	# tmp1984, bsx
	.loc 1 2373 0
	movq	input(%rip), %rax	# input, input.1374
	movl	-212(%rbp), %edx	# blocktype, tmp1986
	movslq	%edx, %rdx	# tmp1986, tmp1985
	movl	84(%rax,%rdx,8), %eax	# input.1374_62->blc_size, tmp1987
	movl	%eax, -124(%rbp)	# tmp1987, bsy
	.loc 1 2375 0
	movq	img(%rip), %rax	# img, img.1375
	movl	168(%rax), %edx	# img.1375_64->opix_x, D.21259
	movl	-204(%rbp), %eax	# mb_x, tmp1991
	addl	%edx, %eax	# D.21259, tmp1990
	movl	%eax, -120(%rbp)	# tmp1990, pic_pix_x
	.loc 1 2376 0
	movq	img(%rip), %rax	# img, img.1376
	movl	172(%rax), %edx	# img.1376_67->opix_y, D.21259
	movl	-208(%rbp), %eax	# mb_y, tmp1995
	addl	%edx, %eax	# D.21259, tmp1994
	movl	%eax, -116(%rbp)	# tmp1994, pic_pix_y
	.loc 1 2380 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1377
	movq	6504(%rax), %rax	# enc_picture.1377_70->mv, D.21260
	movl	-200(%rbp), %edx	# list, tmp1996
	movslq	%edx, %rdx	# tmp1996, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_75, tmp1997
	movq	%rax, -96(%rbp)	# tmp1997, mv_array
	.loc 1 2381 0
	movq	img(%rip), %rax	# img, img.1378
	movq	71928(%rax), %rax	# img.1378_77->all_mv, tmp1998
	movq	%rax, -88(%rbp)	# tmp1998, all_mv
	.loc 1 2393 0
	movl	$0, -152(%rbp)	#, N_Bframe
	movl	$0, -148(%rbp)	#, n_Bframe
	.loc 1 2396 0
	movq	$0, -64(%rbp)	#, tstruct1.time
	.loc 1 2397 0
	movw	$0, -56(%rbp)	#, tstruct1.millitm
	.loc 1 2398 0
	movw	$0, -54(%rbp)	#, tstruct1.timezone
	.loc 1 2399 0
	movw	$0, -52(%rbp)	#, tstruct1.dstflag
	.loc 1 2408 0
	movq	input(%rip), %rax	# input, input.1379
	movl	3292(%rax), %eax	# input.1379_81->FMEnable, D.21259
	testl	%eax, %eax	# D.21259
	je	.L731	#,
	.loc 1 2410 0
	movq	input(%rip), %rax	# input, input.1380
	movl	1236(%rax), %eax	# input.1380_83->successive_Bframe, tmp1999
	movl	%eax, -152(%rbp)	# tmp1999, N_Bframe
	.loc 1 2411 0
	cmpl	$0, -152(%rbp)	#, N_Bframe
	je	.L732	#,
	.loc 1 2411 0 is_stmt 0 discriminator 1
	movl	Bframe_ctr(%rip), %eax	# Bframe_ctr, Bframe_ctr.1382
	cltd
	idivl	-152(%rbp)	# N_Bframe
	movl	%edx, %eax	# tmp2000, D.21259
	addl	$1, %eax	#, iftmp.1381
	jmp	.L733	#
.L732:
	.loc 1 2411 0 discriminator 2
	movl	$0, %eax	#, iftmp.1381
.L733:
	.loc 1 2411 0 discriminator 3
	movl	%eax, -148(%rbp)	# iftmp.1381, n_Bframe
.L731:
	.loc 1 2414 0 is_stmt 1
	movq	img(%rip), %rax	# img, img.1383
	movq	71920(%rax), %rax	# img.1383_90->pred_mv, D.21262
	movl	-136(%rbp), %edx	# block_x, tmp2002
	movslq	%edx, %rdx	# tmp2002, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_94, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2003
	movslq	%edx, %rdx	# tmp2003, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_98, D.21260
	movl	-200(%rbp), %edx	# list, tmp2004
	movslq	%edx, %rdx	# tmp2004, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_102, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_107, D.21265
	movl	-212(%rbp), %edx	# blocktype, tmp2005
	movslq	%edx, %rdx	# tmp2005, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_111, tmp2006
	movq	%rax, -80(%rbp)	# tmp2006, pred_mv
	.loc 1 2419 0
	movl	$0, -160(%rbp)	#, j
	jmp	.L734	#
.L737:
	.loc 1 2421 0
	movl	$0, -164(%rbp)	#, i
	jmp	.L735	#
.L736:
	.loc 1 2423 0 discriminator 2
	movl	-160(%rbp), %eax	# j, tmp2008
	cltq
	movq	orig_pic.6526(,%rax,8), %rax	# orig_pic, D.21266
	movl	-164(%rbp), %edx	# i, tmp2009
	movslq	%edx, %rdx	# tmp2009, D.21261
	addq	%rdx, %rdx	# D.21261
	addq	%rax, %rdx	# D.21266, D.21266
	movq	imgY_org(%rip), %rax	# imgY_org, imgY_org.1384
	movl	-160(%rbp), %ecx	# j, tmp2010
	movl	-116(%rbp), %esi	# pic_pix_y, tmp2011
	addl	%esi, %ecx	# tmp2011, D.21259
	movslq	%ecx, %rcx	# D.21259, D.21261
	salq	$3, %rcx	#, D.21261
	addq	%rcx, %rax	# D.21261, D.21267
	movq	(%rax), %rax	# *_123, D.21266
	movl	-164(%rbp), %ecx	# i, tmp2012
	movl	-120(%rbp), %esi	# pic_pix_x, tmp2013
	addl	%esi, %ecx	# tmp2013, D.21259
	movslq	%ecx, %rcx	# D.21259, D.21261
	addq	%rcx, %rcx	# D.21261
	addq	%rcx, %rax	# D.21261, D.21266
	movzwl	(%rax), %eax	# *_128, D.21268
	movw	%ax, (%rdx)	# D.21268, *_118
	.loc 1 2421 0 discriminator 2
	addl	$1, -164(%rbp)	#, i
.L735:
	.loc 1 2421 0 is_stmt 0 discriminator 1
	movl	-164(%rbp), %eax	# i, tmp2014
	cmpl	-128(%rbp), %eax	# bsx, tmp2014
	jl	.L736	#,
	.loc 1 2419 0 is_stmt 1
	addl	$1, -160(%rbp)	#, j
.L734:
	.loc 1 2419 0 is_stmt 0 discriminator 1
	movl	-160(%rbp), %eax	# j, tmp2015
	cmpl	-124(%rbp), %eax	# bsy, tmp2015
	jl	.L737	#,
	.loc 1 2427 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1385
	movl	3292(%rax), %eax	# input.1385_132->FMEnable, D.21259
	testl	%eax, %eax	# D.21259
	je	.L738	#,
	.loc 1 2430 0
	cmpl	$6, -212(%rbp)	#, blocktype
	jle	.L739	#,
	.loc 1 2432 0
	movl	-136(%rbp), %eax	# block_x, tmp2016
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2017
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_136, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2018
	movslq	%edx, %rdx	# tmp2018, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_140, D.21260
	movl	-200(%rbp), %edx	# list, tmp2019
	movslq	%edx, %rdx	# tmp2019, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_144, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_148, D.21265
	addq	$40, %rax	#, D.21265
	movq	(%rax), %rax	# *_150, D.21269
	movzwl	(%rax), %eax	# *_151, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2433 0
	movl	-136(%rbp), %eax	# block_x, tmp2020
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2021
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_156, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2022
	movslq	%edx, %rdx	# tmp2022, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_160, D.21260
	movl	-200(%rbp), %edx	# list, tmp2023
	movslq	%edx, %rdx	# tmp2023, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_164, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_168, D.21265
	addq	$40, %rax	#, D.21265
	movq	(%rax), %rax	# *_170, D.21269
	addq	$2, %rax	#, D.21269
	movzwl	(%rax), %eax	# *_172, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer+4(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2434 0
	cmpl	$1, -200(%rbp)	#, list
	jne	.L740	#,
	.loc 1 2434 0 is_stmt 0 discriminator 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1387
	movq	img(%rip), %rax	# img, img.1388
	movl	152(%rax), %eax	# img.1388_176->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2024
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1387, D.21271
	movq	(%rax), %rdx	# *_182, D.21272
	movq	img(%rip), %rax	# img, img.1389
	movl	156(%rax), %eax	# img.1389_184->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2025
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_190, D.21273
	movq	(%rax), %rax	# *_191, D.21274
	addq	$40, %rax	#, D.21274
	movq	(%rax), %rax	# *_193, D.21275
	movl	(%rax), %eax	# *_194, iftmp.1386
	jmp	.L741	#
.L740:
	.loc 1 2434 0 discriminator 2
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1390
	movq	img(%rip), %rax	# img, img.1391
	movl	152(%rax), %eax	# img.1391_197->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2026
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1390, D.21271
	movq	(%rax), %rdx	# *_203, D.21272
	movq	img(%rip), %rax	# img, img.1392
	movl	156(%rax), %eax	# img.1392_205->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2027
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_211, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_215, D.21274
	addq	$40, %rax	#, D.21274
	movq	(%rax), %rax	# *_217, D.21275
	movl	(%rax), %eax	# *_218, iftmp.1386
.L741:
	.loc 1 2434 0 discriminator 1
	movl	%eax, pred_SAD_uplayer(%rip)	# iftmp.1386, pred_SAD_uplayer
	.loc 1 2435 0 is_stmt 1 discriminator 1
	movl	pred_SAD_uplayer(%rip), %eax	# pred_SAD_uplayer, pred_SAD_uplayer.1393
	movl	%eax, %edx	# pred_SAD_uplayer.1393, tmp2028
	shrl	$31, %edx	#, tmp2028
	addl	%edx, %eax	# tmp2028, tmp2029
	sarl	%eax	# tmp2030
	movl	%eax, pred_SAD_uplayer(%rip)	# pred_SAD_uplayer.1394, pred_SAD_uplayer
	jmp	.L742	#
.L739:
	.loc 1 2438 0
	cmpl	$4, -212(%rbp)	#, blocktype
	jle	.L743	#,
	.loc 1 2440 0
	movl	-136(%rbp), %eax	# block_x, tmp2031
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2032
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_224, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2033
	movslq	%edx, %rdx	# tmp2033, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_228, D.21260
	movl	-200(%rbp), %edx	# list, tmp2034
	movslq	%edx, %rdx	# tmp2034, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_232, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_236, D.21265
	addq	$32, %rax	#, D.21265
	movq	(%rax), %rax	# *_238, D.21269
	movzwl	(%rax), %eax	# *_239, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2441 0
	movl	-136(%rbp), %eax	# block_x, tmp2035
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2036
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_244, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2037
	movslq	%edx, %rdx	# tmp2037, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_248, D.21260
	movl	-200(%rbp), %edx	# list, tmp2038
	movslq	%edx, %rdx	# tmp2038, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_252, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_256, D.21265
	addq	$32, %rax	#, D.21265
	movq	(%rax), %rax	# *_258, D.21269
	addq	$2, %rax	#, D.21269
	movzwl	(%rax), %eax	# *_260, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer+4(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2442 0
	cmpl	$1, -200(%rbp)	#, list
	jne	.L744	#,
	.loc 1 2442 0 is_stmt 0 discriminator 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1396
	movq	img(%rip), %rax	# img, img.1397
	movl	152(%rax), %eax	# img.1397_264->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2039
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1396, D.21271
	movq	(%rax), %rdx	# *_270, D.21272
	movq	img(%rip), %rax	# img, img.1398
	movl	156(%rax), %eax	# img.1398_272->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2040
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_278, D.21273
	movq	(%rax), %rax	# *_279, D.21274
	addq	$32, %rax	#, D.21274
	movq	(%rax), %rax	# *_281, D.21275
	movl	(%rax), %eax	# *_282, iftmp.1395
	jmp	.L745	#
.L744:
	.loc 1 2442 0 discriminator 2
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1399
	movq	img(%rip), %rax	# img, img.1400
	movl	152(%rax), %eax	# img.1400_285->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2041
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1399, D.21271
	movq	(%rax), %rdx	# *_291, D.21272
	movq	img(%rip), %rax	# img, img.1401
	movl	156(%rax), %eax	# img.1401_293->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2042
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_299, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_303, D.21274
	addq	$32, %rax	#, D.21274
	movq	(%rax), %rax	# *_305, D.21275
	movl	(%rax), %eax	# *_306, iftmp.1395
.L745:
	movl	%eax, pred_SAD_uplayer(%rip)	# iftmp.1395, pred_SAD_uplayer
	.loc 1 2443 0 is_stmt 1 discriminator 2
	movl	pred_SAD_uplayer(%rip), %eax	# pred_SAD_uplayer, pred_SAD_uplayer.1402
	movl	%eax, %edx	# pred_SAD_uplayer.1402, tmp2043
	shrl	$31, %edx	#, tmp2043
	addl	%edx, %eax	# tmp2043, tmp2044
	sarl	%eax	# tmp2045
	movl	%eax, pred_SAD_uplayer(%rip)	# pred_SAD_uplayer.1403, pred_SAD_uplayer
	jmp	.L742	#
.L743:
	.loc 1 2446 0
	cmpl	$4, -212(%rbp)	#, blocktype
	jne	.L746	#,
	.loc 1 2448 0
	movl	-136(%rbp), %eax	# block_x, tmp2046
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2047
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_312, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2048
	movslq	%edx, %rdx	# tmp2048, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_316, D.21260
	movl	-200(%rbp), %edx	# list, tmp2049
	movslq	%edx, %rdx	# tmp2049, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_320, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_324, D.21265
	addq	$16, %rax	#, D.21265
	movq	(%rax), %rax	# *_326, D.21269
	movzwl	(%rax), %eax	# *_327, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2449 0
	movl	-136(%rbp), %eax	# block_x, tmp2050
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2051
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_332, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2052
	movslq	%edx, %rdx	# tmp2052, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_336, D.21260
	movl	-200(%rbp), %edx	# list, tmp2053
	movslq	%edx, %rdx	# tmp2053, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_340, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_344, D.21265
	addq	$16, %rax	#, D.21265
	movq	(%rax), %rax	# *_346, D.21269
	addq	$2, %rax	#, D.21269
	movzwl	(%rax), %eax	# *_348, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer+4(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2450 0
	cmpl	$1, -200(%rbp)	#, list
	jne	.L747	#,
	.loc 1 2450 0 is_stmt 0 discriminator 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1405
	movq	img(%rip), %rax	# img, img.1406
	movl	152(%rax), %eax	# img.1406_352->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2054
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1405, D.21271
	movq	(%rax), %rdx	# *_358, D.21272
	movq	img(%rip), %rax	# img, img.1407
	movl	156(%rax), %eax	# img.1407_360->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2055
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_366, D.21273
	movq	(%rax), %rax	# *_367, D.21274
	addq	$16, %rax	#, D.21274
	movq	(%rax), %rax	# *_369, D.21275
	movl	(%rax), %eax	# *_370, iftmp.1404
	jmp	.L748	#
.L747:
	.loc 1 2450 0 discriminator 2
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1408
	movq	img(%rip), %rax	# img, img.1409
	movl	152(%rax), %eax	# img.1409_373->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2056
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1408, D.21271
	movq	(%rax), %rdx	# *_379, D.21272
	movq	img(%rip), %rax	# img, img.1410
	movl	156(%rax), %eax	# img.1410_381->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2057
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_387, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_391, D.21274
	addq	$16, %rax	#, D.21274
	movq	(%rax), %rax	# *_393, D.21275
	movl	(%rax), %eax	# *_394, iftmp.1404
.L748:
	.loc 1 2450 0 discriminator 3
	movl	%eax, pred_SAD_uplayer(%rip)	# iftmp.1404, pred_SAD_uplayer
	.loc 1 2451 0 is_stmt 1 discriminator 3
	movl	pred_SAD_uplayer(%rip), %eax	# pred_SAD_uplayer, pred_SAD_uplayer.1411
	movl	%eax, %edx	# pred_SAD_uplayer.1411, tmp2058
	shrl	$31, %edx	#, tmp2058
	addl	%edx, %eax	# tmp2058, tmp2059
	sarl	%eax	# tmp2060
	movl	%eax, pred_SAD_uplayer(%rip)	# pred_SAD_uplayer.1412, pred_SAD_uplayer
	jmp	.L742	#
.L746:
	.loc 1 2453 0
	cmpl	$1, -212(%rbp)	#, blocktype
	jle	.L742	#,
	.loc 1 2455 0
	movl	-136(%rbp), %eax	# block_x, tmp2061
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2062
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_400, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2063
	movslq	%edx, %rdx	# tmp2063, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_404, D.21260
	movl	-200(%rbp), %edx	# list, tmp2064
	movslq	%edx, %rdx	# tmp2064, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_408, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_412, D.21265
	addq	$8, %rax	#, D.21265
	movq	(%rax), %rax	# *_414, D.21269
	movzwl	(%rax), %eax	# *_415, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2456 0
	movl	-136(%rbp), %eax	# block_x, tmp2065
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2066
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_420, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2067
	movslq	%edx, %rdx	# tmp2067, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_424, D.21260
	movl	-200(%rbp), %edx	# list, tmp2068
	movslq	%edx, %rdx	# tmp2068, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_428, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_432, D.21265
	addq	$8, %rax	#, D.21265
	movq	(%rax), %rax	# *_434, D.21269
	addq	$2, %rax	#, D.21269
	movzwl	(%rax), %eax	# *_436, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer+4(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2457 0
	cmpl	$1, -200(%rbp)	#, list
	jne	.L749	#,
	.loc 1 2457 0 is_stmt 0 discriminator 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1414
	movq	img(%rip), %rax	# img, img.1415
	movl	152(%rax), %eax	# img.1415_440->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2069
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1414, D.21271
	movq	(%rax), %rdx	# *_446, D.21272
	movq	img(%rip), %rax	# img, img.1416
	movl	156(%rax), %eax	# img.1416_448->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2070
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_454, D.21273
	movq	(%rax), %rax	# *_455, D.21274
	addq	$8, %rax	#, D.21274
	movq	(%rax), %rax	# *_457, D.21275
	movl	(%rax), %eax	# *_458, iftmp.1413
	jmp	.L750	#
.L749:
	.loc 1 2457 0 discriminator 2
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1417
	movq	img(%rip), %rax	# img, img.1418
	movl	152(%rax), %eax	# img.1418_461->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2071
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1417, D.21271
	movq	(%rax), %rdx	# *_467, D.21272
	movq	img(%rip), %rax	# img, img.1419
	movl	156(%rax), %eax	# img.1419_469->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2072
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_475, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_479, D.21274
	addq	$8, %rax	#, D.21274
	movq	(%rax), %rax	# *_481, D.21275
	movl	(%rax), %eax	# *_482, iftmp.1413
.L750:
	.loc 1 2457 0 discriminator 3
	movl	%eax, pred_SAD_uplayer(%rip)	# iftmp.1413, pred_SAD_uplayer
	.loc 1 2458 0 is_stmt 1 discriminator 3
	movl	pred_SAD_uplayer(%rip), %eax	# pred_SAD_uplayer, pred_SAD_uplayer.1420
	movl	%eax, %edx	# pred_SAD_uplayer.1420, tmp2073
	shrl	$31, %edx	#, tmp2073
	addl	%edx, %eax	# tmp2073, tmp2074
	sarl	%eax	# tmp2075
	movl	%eax, pred_SAD_uplayer(%rip)	# pred_SAD_uplayer.1421, pred_SAD_uplayer
.L742:
	.loc 1 2461 0
	movq	img(%rip), %rax	# img, img.1422
	movl	24(%rax), %eax	# img.1422_486->type, D.21259
	cmpl	$1, %eax	#, D.21259
	jne	.L751	#,
	.loc 1 2461 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1423
	movl	72496(%rax), %eax	# img.1423_488->nal_reference_idc, D.21259
	testl	%eax, %eax	# D.21259
	jle	.L751	#,
	.loc 1 2463 0 is_stmt 1
	cmpl	$6, -212(%rbp)	#, blocktype
	jle	.L752	#,
	.loc 1 2465 0
	movl	-136(%rbp), %eax	# block_x, tmp2076
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2077
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_492, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2078
	movslq	%edx, %rdx	# tmp2078, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_496, D.21260
	movl	-200(%rbp), %edx	# list, tmp2079
	movslq	%edx, %rdx	# tmp2079, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_500, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_504, D.21265
	addq	$40, %rax	#, D.21265
	movq	(%rax), %rax	# *_506, D.21269
	movzwl	(%rax), %eax	# *_507, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2466 0
	movl	-136(%rbp), %eax	# block_x, tmp2080
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2081
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_512, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2082
	movslq	%edx, %rdx	# tmp2082, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_516, D.21260
	movl	-200(%rbp), %edx	# list, tmp2083
	movslq	%edx, %rdx	# tmp2083, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_520, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_524, D.21265
	addq	$40, %rax	#, D.21265
	movq	(%rax), %rax	# *_526, D.21269
	addq	$2, %rax	#, D.21269
	movzwl	(%rax), %eax	# *_528, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer+4(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2467 0
	cmpl	$1, -200(%rbp)	#, list
	jne	.L753	#,
	.loc 1 2467 0 is_stmt 0 discriminator 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1425
	movq	img(%rip), %rax	# img, img.1426
	movl	152(%rax), %eax	# img.1426_532->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2084
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1425, D.21271
	movq	(%rax), %rdx	# *_538, D.21272
	movq	img(%rip), %rax	# img, img.1427
	movl	156(%rax), %eax	# img.1427_540->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2085
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_546, D.21273
	movq	(%rax), %rax	# *_547, D.21274
	addq	$40, %rax	#, D.21274
	movq	(%rax), %rax	# *_549, D.21275
	movl	(%rax), %eax	# *_550, iftmp.1424
	jmp	.L754	#
.L753:
	.loc 1 2467 0 discriminator 2
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1428
	movq	img(%rip), %rax	# img, img.1429
	movl	152(%rax), %eax	# img.1429_553->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2086
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1428, D.21271
	movq	(%rax), %rdx	# *_559, D.21272
	movq	img(%rip), %rax	# img, img.1430
	movl	156(%rax), %eax	# img.1430_561->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2087
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_567, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_571, D.21274
	addq	$40, %rax	#, D.21274
	movq	(%rax), %rax	# *_573, D.21275
	movl	(%rax), %eax	# *_574, iftmp.1424
.L754:
	.loc 1 2467 0 discriminator 4
	movl	%eax, pred_SAD_uplayer(%rip)	# iftmp.1424, pred_SAD_uplayer
	.loc 1 2468 0 is_stmt 1 discriminator 4
	movl	pred_SAD_uplayer(%rip), %eax	# pred_SAD_uplayer, pred_SAD_uplayer.1431
	movl	%eax, %edx	# pred_SAD_uplayer.1431, tmp2088
	shrl	$31, %edx	#, tmp2088
	addl	%edx, %eax	# tmp2088, tmp2089
	sarl	%eax	# tmp2090
	movl	%eax, pred_SAD_uplayer(%rip)	# pred_SAD_uplayer.1432, pred_SAD_uplayer
	jmp	.L751	#
.L752:
	.loc 1 2470 0
	cmpl	$4, -212(%rbp)	#, blocktype
	jle	.L755	#,
	.loc 1 2472 0
	movl	-136(%rbp), %eax	# block_x, tmp2091
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2092
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_580, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2093
	movslq	%edx, %rdx	# tmp2093, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_584, D.21260
	movl	-200(%rbp), %edx	# list, tmp2094
	movslq	%edx, %rdx	# tmp2094, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_588, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_592, D.21265
	addq	$32, %rax	#, D.21265
	movq	(%rax), %rax	# *_594, D.21269
	movzwl	(%rax), %eax	# *_595, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2473 0
	movl	-136(%rbp), %eax	# block_x, tmp2095
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2096
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_600, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2097
	movslq	%edx, %rdx	# tmp2097, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_604, D.21260
	movl	-200(%rbp), %edx	# list, tmp2098
	movslq	%edx, %rdx	# tmp2098, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_608, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_612, D.21265
	addq	$32, %rax	#, D.21265
	movq	(%rax), %rax	# *_614, D.21269
	addq	$2, %rax	#, D.21269
	movzwl	(%rax), %eax	# *_616, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer+4(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2474 0
	cmpl	$1, -200(%rbp)	#, list
	jne	.L756	#,
	.loc 1 2474 0 is_stmt 0 discriminator 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1434
	movq	img(%rip), %rax	# img, img.1435
	movl	152(%rax), %eax	# img.1435_620->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2099
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1434, D.21271
	movq	(%rax), %rdx	# *_626, D.21272
	movq	img(%rip), %rax	# img, img.1436
	movl	156(%rax), %eax	# img.1436_628->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2100
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_634, D.21273
	movq	(%rax), %rax	# *_635, D.21274
	addq	$32, %rax	#, D.21274
	movq	(%rax), %rax	# *_637, D.21275
	movl	(%rax), %eax	# *_638, iftmp.1433
	jmp	.L757	#
.L756:
	.loc 1 2474 0 discriminator 2
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1437
	movq	img(%rip), %rax	# img, img.1438
	movl	152(%rax), %eax	# img.1438_641->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2101
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1437, D.21271
	movq	(%rax), %rdx	# *_647, D.21272
	movq	img(%rip), %rax	# img, img.1439
	movl	156(%rax), %eax	# img.1439_649->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2102
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_655, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_659, D.21274
	addq	$32, %rax	#, D.21274
	movq	(%rax), %rax	# *_661, D.21275
	movl	(%rax), %eax	# *_662, iftmp.1433
.L757:
	.loc 1 2474 0 discriminator 5
	movl	%eax, pred_SAD_uplayer(%rip)	# iftmp.1433, pred_SAD_uplayer
	.loc 1 2475 0 is_stmt 1 discriminator 5
	movl	pred_SAD_uplayer(%rip), %eax	# pred_SAD_uplayer, pred_SAD_uplayer.1440
	movl	%eax, %edx	# pred_SAD_uplayer.1440, tmp2103
	shrl	$31, %edx	#, tmp2103
	addl	%edx, %eax	# tmp2103, tmp2104
	sarl	%eax	# tmp2105
	movl	%eax, pred_SAD_uplayer(%rip)	# pred_SAD_uplayer.1441, pred_SAD_uplayer
	jmp	.L751	#
.L755:
	.loc 1 2477 0
	cmpl	$4, -212(%rbp)	#, blocktype
	jne	.L758	#,
	.loc 1 2479 0
	movl	-136(%rbp), %eax	# block_x, tmp2106
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2107
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_668, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2108
	movslq	%edx, %rdx	# tmp2108, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_672, D.21260
	movl	-200(%rbp), %edx	# list, tmp2109
	movslq	%edx, %rdx	# tmp2109, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_676, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_680, D.21265
	addq	$16, %rax	#, D.21265
	movq	(%rax), %rax	# *_682, D.21269
	movzwl	(%rax), %eax	# *_683, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2480 0
	movl	-136(%rbp), %eax	# block_x, tmp2110
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2111
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_688, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2112
	movslq	%edx, %rdx	# tmp2112, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_692, D.21260
	movl	-200(%rbp), %edx	# list, tmp2113
	movslq	%edx, %rdx	# tmp2113, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_696, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_700, D.21265
	addq	$16, %rax	#, D.21265
	movq	(%rax), %rax	# *_702, D.21269
	addq	$2, %rax	#, D.21269
	movzwl	(%rax), %eax	# *_704, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer+4(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2481 0
	cmpl	$1, -200(%rbp)	#, list
	jne	.L759	#,
	.loc 1 2481 0 is_stmt 0 discriminator 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1443
	movq	img(%rip), %rax	# img, img.1444
	movl	152(%rax), %eax	# img.1444_708->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2114
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1443, D.21271
	movq	(%rax), %rdx	# *_714, D.21272
	movq	img(%rip), %rax	# img, img.1445
	movl	156(%rax), %eax	# img.1445_716->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2115
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_722, D.21273
	movq	(%rax), %rax	# *_723, D.21274
	addq	$16, %rax	#, D.21274
	movq	(%rax), %rax	# *_725, D.21275
	movl	(%rax), %eax	# *_726, iftmp.1442
	jmp	.L760	#
.L759:
	.loc 1 2481 0 discriminator 2
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1446
	movq	img(%rip), %rax	# img, img.1447
	movl	152(%rax), %eax	# img.1447_729->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2116
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1446, D.21271
	movq	(%rax), %rdx	# *_735, D.21272
	movq	img(%rip), %rax	# img, img.1448
	movl	156(%rax), %eax	# img.1448_737->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2117
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_743, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_747, D.21274
	addq	$16, %rax	#, D.21274
	movq	(%rax), %rax	# *_749, D.21275
	movl	(%rax), %eax	# *_750, iftmp.1442
.L760:
	.loc 1 2481 0 discriminator 6
	movl	%eax, pred_SAD_uplayer(%rip)	# iftmp.1442, pred_SAD_uplayer
	.loc 1 2482 0 is_stmt 1 discriminator 6
	movl	pred_SAD_uplayer(%rip), %eax	# pred_SAD_uplayer, pred_SAD_uplayer.1449
	movl	%eax, %edx	# pred_SAD_uplayer.1449, tmp2118
	shrl	$31, %edx	#, tmp2118
	addl	%edx, %eax	# tmp2118, tmp2119
	sarl	%eax	# tmp2120
	movl	%eax, pred_SAD_uplayer(%rip)	# pred_SAD_uplayer.1450, pred_SAD_uplayer
	jmp	.L751	#
.L758:
	.loc 1 2484 0
	cmpl	$1, -212(%rbp)	#, blocktype
	jle	.L751	#,
	.loc 1 2486 0
	movl	-136(%rbp), %eax	# block_x, tmp2121
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2122
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_756, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2123
	movslq	%edx, %rdx	# tmp2123, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_760, D.21260
	movl	-200(%rbp), %edx	# list, tmp2124
	movslq	%edx, %rdx	# tmp2124, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_764, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_768, D.21265
	addq	$8, %rax	#, D.21265
	movq	(%rax), %rax	# *_770, D.21269
	movzwl	(%rax), %eax	# *_771, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2487 0
	movl	-136(%rbp), %eax	# block_x, tmp2125
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2126
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_776, D.21263
	movl	-132(%rbp), %edx	# block_y, tmp2127
	movslq	%edx, %rdx	# tmp2127, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_780, D.21260
	movl	-200(%rbp), %edx	# list, tmp2128
	movslq	%edx, %rdx	# tmp2128, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_784, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_788, D.21265
	addq	$8, %rax	#, D.21265
	movq	(%rax), %rax	# *_790, D.21269
	addq	$2, %rax	#, D.21269
	movzwl	(%rax), %eax	# *_792, D.21270
	cwtl
	movl	%eax, pred_MV_uplayer+4(%rip)	# D.21259, pred_MV_uplayer
	.loc 1 2488 0
	cmpl	$1, -200(%rbp)	#, list
	jne	.L761	#,
	.loc 1 2488 0 is_stmt 0 discriminator 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1452
	movq	img(%rip), %rax	# img, img.1453
	movl	152(%rax), %eax	# img.1453_796->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2129
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1452, D.21271
	movq	(%rax), %rdx	# *_802, D.21272
	movq	img(%rip), %rax	# img, img.1454
	movl	156(%rax), %eax	# img.1454_804->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2130
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_810, D.21273
	movq	(%rax), %rax	# *_811, D.21274
	addq	$8, %rax	#, D.21274
	movq	(%rax), %rax	# *_813, D.21275
	movl	(%rax), %eax	# *_814, iftmp.1451
	jmp	.L762	#
.L761:
	.loc 1 2488 0 discriminator 2
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1455
	movq	img(%rip), %rax	# img, img.1456
	movl	152(%rax), %eax	# img.1456_817->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2131
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1455, D.21271
	movq	(%rax), %rdx	# *_823, D.21272
	movq	img(%rip), %rax	# img, img.1457
	movl	156(%rax), %eax	# img.1457_825->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2132
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_831, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_835, D.21274
	addq	$8, %rax	#, D.21274
	movq	(%rax), %rax	# *_837, D.21275
	movl	(%rax), %eax	# *_838, iftmp.1451
.L762:
	.loc 1 2488 0 discriminator 3
	movl	%eax, pred_SAD_uplayer(%rip)	# iftmp.1451, pred_SAD_uplayer
	.loc 1 2489 0 is_stmt 1 discriminator 3
	movl	pred_SAD_uplayer(%rip), %eax	# pred_SAD_uplayer, pred_SAD_uplayer.1458
	movl	%eax, %edx	# pred_SAD_uplayer.1458, tmp2133
	shrl	$31, %edx	#, tmp2133
	addl	%edx, %eax	# tmp2133, tmp2134
	sarl	%eax	# tmp2135
	movl	%eax, pred_SAD_uplayer(%rip)	# pred_SAD_uplayer.1459, pred_SAD_uplayer
.L751:
	.loc 1 2493 0
	movl	flag_intra_SAD(%rip), %eax	# flag_intra_SAD, flag_intra_SAD.1461
	testl	%eax, %eax	# flag_intra_SAD.1461
	jne	.L763	#,
	.loc 1 2493 0 is_stmt 0 discriminator 1
	movl	pred_SAD_uplayer(%rip), %eax	# pred_SAD_uplayer, iftmp.1460
	jmp	.L764	#
.L763:
	.loc 1 2493 0 discriminator 2
	movl	$0, %eax	#, iftmp.1460
.L764:
	.loc 1 2493 0 discriminator 3
	movl	%eax, pred_SAD_uplayer(%rip)	# iftmp.1460, pred_SAD_uplayer
	.loc 1 2496 0 is_stmt 1 discriminator 3
	movq	img(%rip), %rax	# img, img.1462
	movl	(%rax), %eax	# img.1462_845->number, D.21259
	movswl	-196(%rbp), %edx	# ref, D.21259
	addl	$1, %edx	#, D.21259
	cmpl	%edx, %eax	# D.21259, D.21259
	jle	.L765	#,
	.loc 1 2498 0
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1463
	movq	img(%rip), %rax	# img, img.1464
	movl	152(%rax), %eax	# img.1464_850->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2136
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1463, D.21271
	movq	(%rax), %rdx	# *_856, D.21272
	movq	img(%rip), %rax	# img, img.1465
	movl	156(%rax), %eax	# img.1465_858->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2137
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_864, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_868, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2138
	movslq	%edx, %rdx	# tmp2138, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_872, D.21275
	movl	(%rax), %eax	# *_873, pred_SAD_time.1466
	movl	%eax, pred_SAD_time(%rip)	# pred_SAD_time.1466, pred_SAD_time
	.loc 1 2499 0
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1467
	movq	img(%rip), %rax	# img, img.1468
	movl	152(%rax), %eax	# img.1468_876->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2139
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1467, D.21271
	movq	(%rax), %rdx	# *_882, D.21272
	movq	img(%rip), %rax	# img, img.1469
	movl	156(%rax), %eax	# img.1469_884->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2140
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_890, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_894, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2141
	movslq	%edx, %rdx	# tmp2141, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_898, D.21275
	movl	4(%rax), %eax	# MEM[(int *)_899 + 4B], D.21259
	movl	%eax, pred_MV_time(%rip)	# D.21259, pred_MV_time
	.loc 1 2500 0
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1470
	movq	img(%rip), %rax	# img, img.1471
	movl	152(%rax), %eax	# img.1471_902->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2142
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1470, D.21271
	movq	(%rax), %rdx	# *_908, D.21272
	movq	img(%rip), %rax	# img, img.1472
	movl	156(%rax), %eax	# img.1472_910->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2143
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_916, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_920, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2144
	movslq	%edx, %rdx	# tmp2144, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_924, D.21275
	movl	8(%rax), %eax	# MEM[(int *)_925 + 8B], D.21259
	movl	%eax, pred_MV_time+4(%rip)	# D.21259, pred_MV_time
.L765:
	.loc 1 2503 0
	cmpl	$1, -200(%rbp)	#, list
	jne	.L766	#,
	.loc 1 2503 0 is_stmt 0 discriminator 1
	movl	Bframe_ctr(%rip), %eax	# Bframe_ctr, Bframe_ctr.1473
	cltd
	idivl	-152(%rbp)	# N_Bframe
	movl	%edx, %eax	# tmp2145, D.21259
	cmpl	$1, %eax	#, D.21259
	jle	.L766	#,
	.loc 1 2505 0 is_stmt 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1474
	movq	img(%rip), %rax	# img, img.1475
	movl	152(%rax), %eax	# img.1475_930->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2147
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1474, D.21271
	movq	(%rax), %rdx	# *_936, D.21272
	movq	img(%rip), %rax	# img, img.1476
	movl	156(%rax), %eax	# img.1476_938->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2148
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_944, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_948, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2149
	movslq	%edx, %rdx	# tmp2149, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_952, D.21275
	movl	(%rax), %eax	# *_953, pred_SAD_time.1477
	movl	%eax, pred_SAD_time(%rip)	# pred_SAD_time.1477, pred_SAD_time
	.loc 1 2506 0
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1478
	movq	img(%rip), %rax	# img, img.1479
	movl	152(%rax), %eax	# img.1479_956->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2150
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1478, D.21271
	movq	(%rax), %rdx	# *_962, D.21272
	movq	img(%rip), %rax	# img, img.1480
	movl	156(%rax), %eax	# img.1480_964->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2151
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_970, D.21273
	movq	(%rax), %rax	# *_971, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2152
	movslq	%edx, %rdx	# tmp2152, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_975, D.21275
	addq	$4, %rax	#, D.21275
	movl	(%rax), %eax	# *_977, D.21259
	cvtsi2sd	%eax, %xmm1	# D.21259, D.21276
	cmpl	$1, -148(%rbp)	#, n_Bframe
	jne	.L767	#,
	.loc 1 2506 0 is_stmt 0 discriminator 1
	cvtsi2sd	-152(%rbp), %xmm0	# N_Bframe, iftmp.1481
	jmp	.L768	#
.L767:
	.loc 1 2506 0 discriminator 2
	movl	-148(%rbp), %eax	# n_Bframe, tmp2153
	movl	-152(%rbp), %edx	# N_Bframe, tmp2154
	subl	%eax, %edx	# tmp2153, D.21259
	movl	%edx, %eax	# D.21259, D.21259
	cvtsi2sd	%eax, %xmm0	# D.21259, D.21276
	movsd	.LC15(%rip), %xmm2	#, tmp2155
	addsd	%xmm2, %xmm0	# tmp2155, D.21276
	movl	-148(%rbp), %eax	# n_Bframe, tmp2156
	movl	-152(%rbp), %edx	# N_Bframe, tmp2157
	subl	%eax, %edx	# tmp2156, D.21259
	movl	%edx, %eax	# D.21259, D.21259
	cvtsi2sd	%eax, %xmm2	# D.21259, D.21276
	movsd	.LC16(%rip), %xmm3	#, tmp2158
	addsd	%xmm3, %xmm2	# tmp2158, D.21276
	divsd	%xmm2, %xmm0	# D.21276, iftmp.1481
.L768:
	.loc 1 2506 0 discriminator 3
	mulsd	%xmm1, %xmm0	# D.21276, D.21276
	cvttsd2si	%xmm0, %eax	# D.21276, D.21259
	movl	%eax, pred_MV_time(%rip)	# D.21259, pred_MV_time
	.loc 1 2507 0 is_stmt 1 discriminator 3
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1482
	movq	img(%rip), %rax	# img, img.1483
	movl	152(%rax), %eax	# img.1483_991->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2159
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1482, D.21271
	movq	(%rax), %rdx	# *_997, D.21272
	movq	img(%rip), %rax	# img, img.1484
	movl	156(%rax), %eax	# img.1484_999->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2160
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1005, D.21273
	movq	(%rax), %rax	# *_1006, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2161
	movslq	%edx, %rdx	# tmp2161, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1010, D.21275
	addq	$8, %rax	#, D.21275
	movl	(%rax), %eax	# *_1012, D.21259
	cvtsi2sd	%eax, %xmm1	# D.21259, D.21276
	cmpl	$1, -148(%rbp)	#, n_Bframe
	jne	.L769	#,
	.loc 1 2507 0 is_stmt 0 discriminator 1
	cvtsi2sd	-152(%rbp), %xmm0	# N_Bframe, iftmp.1485
	jmp	.L770	#
.L769:
	.loc 1 2507 0 discriminator 2
	movl	-148(%rbp), %eax	# n_Bframe, tmp2162
	movl	-152(%rbp), %edx	# N_Bframe, tmp2163
	subl	%eax, %edx	# tmp2162, D.21259
	movl	%edx, %eax	# D.21259, D.21259
	cvtsi2sd	%eax, %xmm0	# D.21259, D.21276
	movsd	.LC15(%rip), %xmm2	#, tmp2164
	addsd	%xmm2, %xmm0	# tmp2164, D.21276
	movl	-148(%rbp), %eax	# n_Bframe, tmp2165
	movl	-152(%rbp), %edx	# N_Bframe, tmp2166
	subl	%eax, %edx	# tmp2165, D.21259
	movl	%edx, %eax	# D.21259, D.21259
	cvtsi2sd	%eax, %xmm2	# D.21259, D.21276
	movsd	.LC16(%rip), %xmm3	#, tmp2167
	addsd	%xmm3, %xmm2	# tmp2167, D.21276
	divsd	%xmm2, %xmm0	# D.21276, iftmp.1485
.L770:
	.loc 1 2507 0 discriminator 3
	mulsd	%xmm1, %xmm0	# D.21276, D.21276
	cvttsd2si	%xmm0, %eax	# D.21276, D.21259
	movl	%eax, pred_MV_time+4(%rip)	# D.21259, pred_MV_time
.L766:
	.loc 1 2510 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1486
	movl	2880(%rax), %eax	# input.1486_1025->PicInterlace, D.21259
	cmpl	$1, %eax	#, D.21259
	jne	.L771	#,
	.loc 1 2512 0
	movq	img(%rip), %rax	# img, img.1487
	movl	24(%rax), %eax	# img.1487_1027->type, D.21259
	testl	%eax, %eax	# D.21259
	jne	.L772	#,
	.loc 1 2512 0 is_stmt 0 discriminator 1
	cmpw	$1, -196(%rbp)	#, ref
	jle	.L772	#,
	.loc 1 2514 0 is_stmt 1
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1488
	movq	img(%rip), %rax	# img, img.1489
	movl	152(%rax), %eax	# img.1489_1030->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2168
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1488, D.21271
	movq	(%rax), %rdx	# *_1036, D.21272
	movq	img(%rip), %rax	# img, img.1490
	movl	156(%rax), %eax	# img.1490_1038->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2169
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1044, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	subq	$16, %rdx	#, D.21277
	addq	%rdx, %rax	# D.21277, D.21273
	movq	(%rax), %rax	# *_1049, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2170
	movslq	%edx, %rdx	# tmp2170, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1053, D.21275
	movl	(%rax), %eax	# *_1054, pred_SAD_ref.1491
	movl	%eax, pred_SAD_ref(%rip)	# pred_SAD_ref.1491, pred_SAD_ref
	.loc 1 2515 0
	movl	flag_intra_SAD(%rip), %eax	# flag_intra_SAD, flag_intra_SAD.1493
	testl	%eax, %eax	# flag_intra_SAD.1493
	jne	.L773	#,
	.loc 1 2515 0 is_stmt 0 discriminator 1
	movl	pred_SAD_ref(%rip), %eax	# pred_SAD_ref, iftmp.1492
	jmp	.L774	#
.L773:
	.loc 1 2515 0 discriminator 2
	movl	$0, %eax	#, iftmp.1492
.L774:
	.loc 1 2515 0 discriminator 3
	movl	%eax, pred_SAD_ref(%rip)	# iftmp.1492, pred_SAD_ref
	.loc 1 2516 0 is_stmt 1 discriminator 3
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1494
	movq	img(%rip), %rax	# img, img.1495
	movl	152(%rax), %eax	# img.1495_1060->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2171
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1494, D.21271
	movq	(%rax), %rdx	# *_1066, D.21272
	movq	img(%rip), %rax	# img, img.1496
	movl	156(%rax), %eax	# img.1496_1068->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2172
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1074, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	subq	$16, %rdx	#, D.21277
	addq	%rdx, %rax	# D.21277, D.21273
	movq	(%rax), %rax	# *_1079, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2173
	movslq	%edx, %rdx	# tmp2173, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1083, D.21275
	movl	4(%rax), %eax	# MEM[(int *)_1084 + 4B], D.21259
	movl	%eax, pred_MV_ref(%rip)	# D.21259, pred_MV_ref
	.loc 1 2517 0 discriminator 3
	movl	pred_MV_ref(%rip), %eax	# pred_MV_ref, D.21259
	movzwl	-196(%rbp), %edx	# ref, tmp2174
	sarw	%dx	# D.21270
	movswl	%dx, %edx	# D.21270, D.21259
	addl	$1, %edx	#, D.21259
	imull	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm0	# D.21259, D.21278
	movzwl	-196(%rbp), %eax	# ref, tmp2175
	sarw	%ax	# D.21270
	cwtl
	cvtsi2ss	%eax, %xmm1	# tmp2176, D.21278
	divss	%xmm1, %xmm0	# D.21278, D.21278
	cvttss2si	%xmm0, %eax	# D.21278, D.21259
	movl	%eax, pred_MV_ref(%rip)	# D.21259, pred_MV_ref
	.loc 1 2518 0 discriminator 3
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1497
	movq	img(%rip), %rax	# img, img.1498
	movl	152(%rax), %eax	# img.1498_1097->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2177
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1497, D.21271
	movq	(%rax), %rdx	# *_1103, D.21272
	movq	img(%rip), %rax	# img, img.1499
	movl	156(%rax), %eax	# img.1499_1105->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2178
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1111, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	subq	$16, %rdx	#, D.21277
	addq	%rdx, %rax	# D.21277, D.21273
	movq	(%rax), %rax	# *_1116, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2179
	movslq	%edx, %rdx	# tmp2179, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1120, D.21275
	movl	8(%rax), %eax	# MEM[(int *)_1121 + 8B], D.21259
	movl	%eax, pred_MV_ref+4(%rip)	# D.21259, pred_MV_ref
	.loc 1 2519 0 discriminator 3
	movl	pred_MV_ref+4(%rip), %eax	# pred_MV_ref, D.21259
	movzwl	-196(%rbp), %edx	# ref, tmp2180
	sarw	%dx	# D.21270
	movswl	%dx, %edx	# D.21270, D.21259
	addl	$1, %edx	#, D.21259
	imull	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm0	# D.21259, D.21278
	movzwl	-196(%rbp), %eax	# ref, tmp2181
	sarw	%ax	# D.21270
	cwtl
	cvtsi2ss	%eax, %xmm1	# tmp2182, D.21278
	divss	%xmm1, %xmm0	# D.21278, D.21278
	cvttss2si	%xmm0, %eax	# D.21278, D.21259
	movl	%eax, pred_MV_ref+4(%rip)	# D.21259, pred_MV_ref
.L772:
	.loc 1 2521 0
	movq	img(%rip), %rax	# img, img.1500
	movl	24(%rax), %eax	# img.1500_1133->type, D.21259
	cmpl	$1, %eax	#, D.21259
	jne	.L738	#,
	.loc 1 2521 0 is_stmt 0 discriminator 1
	cmpl	$0, -200(%rbp)	#, list
	jne	.L738	#,
	cmpw	$0, -196(%rbp)	#, ref
	je	.L776	#,
	cmpw	$1, -196(%rbp)	#, ref
	jne	.L738	#,
.L776:
	.loc 1 2523 0 is_stmt 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1501
	movq	img(%rip), %rax	# img, img.1502
	movl	152(%rax), %eax	# img.1502_1136->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2183
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1501, D.21271
	movq	(%rax), %rdx	# *_1142, D.21272
	movq	img(%rip), %rax	# img, img.1503
	movl	156(%rax), %eax	# img.1503_1144->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2184
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1150, D.21273
	movq	(%rax), %rax	# *_1151, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2185
	movslq	%edx, %rdx	# tmp2185, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1155, D.21275
	movl	(%rax), %eax	# *_1156, pred_SAD_ref.1504
	movl	%eax, pred_SAD_ref(%rip)	# pred_SAD_ref.1504, pred_SAD_ref
	.loc 1 2524 0
	movl	flag_intra_SAD(%rip), %eax	# flag_intra_SAD, flag_intra_SAD.1506
	testl	%eax, %eax	# flag_intra_SAD.1506
	jne	.L777	#,
	.loc 1 2524 0 is_stmt 0 discriminator 1
	movl	pred_SAD_ref(%rip), %eax	# pred_SAD_ref, iftmp.1505
	jmp	.L778	#
.L777:
	.loc 1 2524 0 discriminator 2
	movl	$0, %eax	#, iftmp.1505
.L778:
	.loc 1 2524 0 discriminator 3
	movl	%eax, pred_SAD_ref(%rip)	# iftmp.1505, pred_SAD_ref
	.loc 1 2525 0 is_stmt 1 discriminator 3
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1507
	movq	img(%rip), %rax	# img, img.1508
	movl	152(%rax), %eax	# img.1508_1162->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2186
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1507, D.21271
	movq	(%rax), %rdx	# *_1168, D.21272
	movq	img(%rip), %rax	# img, img.1509
	movl	156(%rax), %eax	# img.1509_1170->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2187
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1176, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_1180, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2188
	movslq	%edx, %rdx	# tmp2188, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1184, D.21275
	addq	$4, %rax	#, D.21275
	movl	(%rax), %eax	# *_1186, D.21259
	movl	-148(%rbp), %edx	# n_Bframe, tmp2189
	negl	%edx	# D.21259
	imull	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm0	# D.21259, D.21278
	movl	-148(%rbp), %eax	# n_Bframe, tmp2190
	movl	-152(%rbp), %edx	# N_Bframe, tmp2191
	subl	%eax, %edx	# tmp2190, D.21259
	movl	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm1	# D.21259, D.21278
	movss	.LC17(%rip), %xmm2	#, tmp2192
	addss	%xmm2, %xmm1	# tmp2192, D.21278
	divss	%xmm1, %xmm0	# D.21278, D.21278
	cvttss2si	%xmm0, %eax	# D.21278, D.21259
	movl	%eax, pred_MV_ref(%rip)	# D.21259, pred_MV_ref
	.loc 1 2526 0 discriminator 3
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1510
	movq	img(%rip), %rax	# img, img.1511
	movl	152(%rax), %eax	# img.1511_1197->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2193
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1510, D.21271
	movq	(%rax), %rdx	# *_1203, D.21272
	movq	img(%rip), %rax	# img, img.1512
	movl	156(%rax), %eax	# img.1512_1205->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2194
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1211, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_1215, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2195
	movslq	%edx, %rdx	# tmp2195, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1219, D.21275
	addq	$8, %rax	#, D.21275
	movl	(%rax), %eax	# *_1221, D.21259
	movl	-148(%rbp), %edx	# n_Bframe, tmp2196
	negl	%edx	# D.21259
	imull	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm0	# D.21259, D.21278
	movl	-148(%rbp), %eax	# n_Bframe, tmp2197
	movl	-152(%rbp), %edx	# N_Bframe, tmp2198
	subl	%eax, %edx	# tmp2197, D.21259
	movl	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm1	# D.21259, D.21278
	movss	.LC17(%rip), %xmm2	#, tmp2199
	addss	%xmm2, %xmm1	# tmp2199, D.21278
	divss	%xmm1, %xmm0	# D.21278, D.21278
	cvttss2si	%xmm0, %eax	# D.21278, D.21259
	movl	%eax, pred_MV_ref+4(%rip)	# D.21259, pred_MV_ref
	jmp	.L738	#
.L771:
	.loc 1 2531 0
	cmpw	$0, -196(%rbp)	#, ref
	jle	.L779	#,
	.loc 1 2533 0
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1513
	movq	img(%rip), %rax	# img, img.1514
	movl	152(%rax), %eax	# img.1514_1232->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2200
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1513, D.21271
	movq	(%rax), %rdx	# *_1238, D.21272
	movq	img(%rip), %rax	# img, img.1515
	movl	156(%rax), %eax	# img.1515_1240->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2201
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1246, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	subq	$8, %rdx	#, D.21277
	addq	%rdx, %rax	# D.21277, D.21273
	movq	(%rax), %rax	# *_1251, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2202
	movslq	%edx, %rdx	# tmp2202, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1255, D.21275
	movl	(%rax), %eax	# *_1256, pred_SAD_ref.1516
	movl	%eax, pred_SAD_ref(%rip)	# pred_SAD_ref.1516, pred_SAD_ref
	.loc 1 2534 0
	movl	flag_intra_SAD(%rip), %eax	# flag_intra_SAD, flag_intra_SAD.1518
	testl	%eax, %eax	# flag_intra_SAD.1518
	jne	.L780	#,
	.loc 1 2534 0 is_stmt 0 discriminator 1
	movl	pred_SAD_ref(%rip), %eax	# pred_SAD_ref, iftmp.1517
	jmp	.L781	#
.L780:
	.loc 1 2534 0 discriminator 2
	movl	$0, %eax	#, iftmp.1517
.L781:
	.loc 1 2534 0 discriminator 3
	movl	%eax, pred_SAD_ref(%rip)	# iftmp.1517, pred_SAD_ref
	.loc 1 2535 0 is_stmt 1 discriminator 3
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1519
	movq	img(%rip), %rax	# img, img.1520
	movl	152(%rax), %eax	# img.1520_1262->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2203
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1519, D.21271
	movq	(%rax), %rdx	# *_1268, D.21272
	movq	img(%rip), %rax	# img, img.1521
	movl	156(%rax), %eax	# img.1521_1270->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2204
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1276, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	subq	$8, %rdx	#, D.21277
	addq	%rdx, %rax	# D.21277, D.21273
	movq	(%rax), %rax	# *_1281, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2205
	movslq	%edx, %rdx	# tmp2205, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1285, D.21275
	movl	4(%rax), %eax	# MEM[(int *)_1286 + 4B], D.21259
	movl	%eax, pred_MV_ref(%rip)	# D.21259, pred_MV_ref
	.loc 1 2536 0 discriminator 3
	movl	pred_MV_ref(%rip), %eax	# pred_MV_ref, D.21259
	movswl	-196(%rbp), %edx	# ref, D.21259
	addl	$1, %edx	#, D.21259
	imull	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm0	# D.21259, D.21278
	movswl	-196(%rbp), %eax	# ref, tmp2206
	cvtsi2ss	%eax, %xmm1	# tmp2206, D.21278
	divss	%xmm1, %xmm0	# D.21278, D.21278
	cvttss2si	%xmm0, %eax	# D.21278, D.21259
	movl	%eax, pred_MV_ref(%rip)	# D.21259, pred_MV_ref
	.loc 1 2537 0 discriminator 3
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1522
	movq	img(%rip), %rax	# img, img.1523
	movl	152(%rax), %eax	# img.1523_1297->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2207
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1522, D.21271
	movq	(%rax), %rdx	# *_1303, D.21272
	movq	img(%rip), %rax	# img, img.1524
	movl	156(%rax), %eax	# img.1524_1305->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2208
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1311, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	subq	$8, %rdx	#, D.21277
	addq	%rdx, %rax	# D.21277, D.21273
	movq	(%rax), %rax	# *_1316, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2209
	movslq	%edx, %rdx	# tmp2209, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1320, D.21275
	movl	8(%rax), %eax	# MEM[(int *)_1321 + 8B], D.21259
	movl	%eax, pred_MV_ref+4(%rip)	# D.21259, pred_MV_ref
	.loc 1 2538 0 discriminator 3
	movl	pred_MV_ref+4(%rip), %eax	# pred_MV_ref, D.21259
	movswl	-196(%rbp), %edx	# ref, D.21259
	addl	$1, %edx	#, D.21259
	imull	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm0	# D.21259, D.21278
	movswl	-196(%rbp), %eax	# ref, tmp2210
	cvtsi2ss	%eax, %xmm1	# tmp2210, D.21278
	divss	%xmm1, %xmm0	# D.21278, D.21278
	cvttss2si	%xmm0, %eax	# D.21278, D.21259
	movl	%eax, pred_MV_ref+4(%rip)	# D.21259, pred_MV_ref
.L779:
	.loc 1 2540 0
	movq	img(%rip), %rax	# img, img.1525
	movl	24(%rax), %eax	# img.1525_1331->type, D.21259
	cmpl	$1, %eax	#, D.21259
	jne	.L738	#,
	.loc 1 2540 0 is_stmt 0 discriminator 1
	cmpl	$0, -200(%rbp)	#, list
	jne	.L738	#,
	cmpw	$0, -196(%rbp)	#, ref
	jne	.L738	#,
	.loc 1 2542 0 is_stmt 1
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1526
	movq	img(%rip), %rax	# img, img.1527
	movl	152(%rax), %eax	# img.1527_1334->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2211
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1526, D.21271
	movq	(%rax), %rdx	# *_1340, D.21272
	movq	img(%rip), %rax	# img, img.1528
	movl	156(%rax), %eax	# img.1528_1342->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2212
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1348, D.21273
	movq	(%rax), %rax	# *_1349, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2213
	movslq	%edx, %rdx	# tmp2213, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1353, D.21275
	movl	(%rax), %eax	# *_1354, pred_SAD_ref.1529
	movl	%eax, pred_SAD_ref(%rip)	# pred_SAD_ref.1529, pred_SAD_ref
	.loc 1 2543 0
	movl	flag_intra_SAD(%rip), %eax	# flag_intra_SAD, flag_intra_SAD.1531
	testl	%eax, %eax	# flag_intra_SAD.1531
	jne	.L782	#,
	.loc 1 2543 0 is_stmt 0 discriminator 1
	movl	pred_SAD_ref(%rip), %eax	# pred_SAD_ref, iftmp.1530
	jmp	.L783	#
.L782:
	.loc 1 2543 0 discriminator 2
	movl	$0, %eax	#, iftmp.1530
.L783:
	.loc 1 2543 0 discriminator 3
	movl	%eax, pred_SAD_ref(%rip)	# iftmp.1530, pred_SAD_ref
	.loc 1 2544 0 is_stmt 1 discriminator 3
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1532
	movq	img(%rip), %rax	# img, img.1533
	movl	152(%rax), %eax	# img.1533_1360->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2214
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1532, D.21271
	movq	(%rax), %rdx	# *_1366, D.21272
	movq	img(%rip), %rax	# img, img.1534
	movl	156(%rax), %eax	# img.1534_1368->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2215
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1374, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_1378, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2216
	movslq	%edx, %rdx	# tmp2216, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1382, D.21275
	addq	$4, %rax	#, D.21275
	movl	(%rax), %eax	# *_1384, D.21259
	movl	-148(%rbp), %edx	# n_Bframe, tmp2217
	negl	%edx	# D.21259
	imull	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm0	# D.21259, D.21278
	movl	-148(%rbp), %eax	# n_Bframe, tmp2218
	movl	-152(%rbp), %edx	# N_Bframe, tmp2219
	subl	%eax, %edx	# tmp2218, D.21259
	movl	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm1	# D.21259, D.21278
	movss	.LC17(%rip), %xmm2	#, tmp2220
	addss	%xmm2, %xmm1	# tmp2220, D.21278
	divss	%xmm1, %xmm0	# D.21278, D.21278
	cvttss2si	%xmm0, %eax	# D.21278, D.21259
	movl	%eax, pred_MV_ref(%rip)	# D.21259, pred_MV_ref
	.loc 1 2545 0 discriminator 3
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1535
	movq	img(%rip), %rax	# img, img.1536
	movl	152(%rax), %eax	# img.1536_1395->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2221
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1535, D.21271
	movq	(%rax), %rdx	# *_1401, D.21272
	movq	img(%rip), %rax	# img, img.1537
	movl	156(%rax), %eax	# img.1537_1403->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2222
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1409, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_1413, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2223
	movslq	%edx, %rdx	# tmp2223, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1417, D.21275
	addq	$8, %rax	#, D.21275
	movl	(%rax), %eax	# *_1419, D.21259
	movl	-148(%rbp), %edx	# n_Bframe, tmp2224
	negl	%edx	# D.21259
	imull	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm0	# D.21259, D.21278
	movl	-148(%rbp), %eax	# n_Bframe, tmp2225
	movl	-152(%rbp), %edx	# N_Bframe, tmp2226
	subl	%eax, %edx	# tmp2225, D.21259
	movl	%edx, %eax	# D.21259, D.21259
	cvtsi2ss	%eax, %xmm1	# D.21259, D.21278
	movss	.LC17(%rip), %xmm2	#, tmp2227
	addss	%xmm2, %xmm1	# tmp2227, D.21278
	divss	%xmm1, %xmm0	# D.21278, D.21278
	cvttss2si	%xmm0, %eax	# D.21278, D.21259
	movl	%eax, pred_MV_ref+4(%rip)	# D.21259, pred_MV_ref
.L738:
	.loc 1 2554 0
	movq	input(%rip), %rax	# input, input.1538
	movl	3292(%rax), %eax	# input.1538_1429->FMEnable, D.21259
	testl	%eax, %eax	# D.21259
	je	.L784	#,
	.loc 1 2555 0
	movl	-212(%rbp), %eax	# blocktype, tmp2228
	movl	%eax, FME_blocktype(%rip)	# tmp2228, FME_blocktype
.L784:
	.loc 1 2557 0
	movswl	-196(%rbp), %ecx	# ref, D.21259
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1539
	movq	6504(%rax), %rdx	# enc_picture.1539_1432->mv, D.21260
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1540
	movq	6480(%rax), %rsi	# enc_picture.1540_1434->ref_idx, D.21264
	movl	-136(%rbp), %r9d	# block_x, tmp2229
	movl	-200(%rbp), %r8d	# list, tmp2230
	movq	-80(%rbp), %rax	# pred_mv, tmp2231
	movl	-124(%rbp), %edi	# bsy, tmp2232
	movl	%edi, 16(%rsp)	# tmp2232,
	movl	-128(%rbp), %edi	# bsx, tmp2233
	movl	%edi, 8(%rsp)	# tmp2233,
	movl	-132(%rbp), %edi	# block_y, tmp2234
	movl	%edi, (%rsp)	# tmp2234,
	movq	%rax, %rdi	# tmp2231,
	call	SetMotionVectorPredictor	#
	.loc 1 2559 0
	movq	-80(%rbp), %rax	# pred_mv, tmp2235
	movzwl	(%rax), %eax	# *pred_mv_112, tmp2236
	movw	%ax, -168(%rbp)	# tmp2236, pred_mv_x
	.loc 1 2560 0
	movq	-80(%rbp), %rax	# pred_mv, tmp2237
	movzwl	2(%rax), %eax	# MEM[(short int *)pred_mv_112 + 2B], tmp2238
	movw	%ax, -166(%rbp)	# tmp2238, pred_mv_y
	.loc 1 2566 0
	movq	input(%rip), %rax	# input, input.1541
	movl	3292(%rax), %eax	# input.1541_1438->FMEnable, D.21259
	testl	%eax, %eax	# D.21259
	je	.L785	#,
	.loc 1 2568 0
	movzwl	-168(%rbp), %eax	# pred_mv_x, tmp2239
	leal	3(%rax), %edx	#, tmp2241
	testw	%ax, %ax	# tmp2240
	cmovs	%edx, %eax	# tmp2241,, tmp2240
	sarw	$2, %ax	#, tmp2242
	movw	%ax, -190(%rbp)	# mv_x.1542, mv_x
	.loc 1 2569 0
	movzwl	-166(%rbp), %eax	# pred_mv_y, tmp2243
	leal	3(%rax), %edx	#, tmp2245
	testw	%ax, %ax	# tmp2244
	cmovs	%edx, %eax	# tmp2245,, tmp2244
	sarw	$2, %ax	#, tmp2246
	movw	%ax, -188(%rbp)	# mv_y.1543, mv_y
	.loc 1 2570 0
	movq	input(%rip), %rax	# input, input.1544
	movl	2464(%rax), %eax	# input.1544_1442->rdopt, D.21259
	testl	%eax, %eax	# D.21259
	jne	.L786	#,
	.loc 1 2573 0
	movzwl	-190(%rbp), %eax	# mv_x, mv_x.1545
	movswl	%ax, %edx	# mv_x.1545, D.21259
	movl	-216(%rbp), %eax	# search_range, tmp2247
	cmpl	%eax, %edx	# tmp2247, D.21259
	cmovle	%edx, %eax	# D.21259,, D.21259
	movl	-216(%rbp), %edx	# search_range, tmp2248
	negl	%edx	# D.21259
	cmpl	%edx, %eax	# D.21259, D.21259
	cmovl	%edx, %eax	# D.21259,, D.21259, D.21259
	movw	%ax, -190(%rbp)	# mv_x.1546, mv_x
	.loc 1 2574 0
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1547
	movswl	%ax, %edx	# mv_y.1547, D.21259
	movl	-216(%rbp), %eax	# search_range, tmp2249
	cmpl	%eax, %edx	# tmp2249, D.21259
	cmovle	%edx, %eax	# D.21259,, D.21259
	movl	-216(%rbp), %edx	# search_range, tmp2250
	negl	%edx	# D.21259
	cmpl	%edx, %eax	# D.21259, D.21259
	cmovl	%edx, %eax	# D.21259,, D.21259, D.21259
	movw	%ax, -188(%rbp)	# mv_y.1548, mv_y
.L786:
	.loc 1 2577 0
	movswl	-166(%rbp), %r8d	# pred_mv_y, D.21259
	movswl	-168(%rbp), %edi	# pred_mv_x, D.21259
	movswl	-196(%rbp), %esi	# ref, D.21259
	movq	-224(%rbp), %rax	# lambda, tmp2251
	movl	-212(%rbp), %r11d	# blocktype, tmp2252
	movl	-116(%rbp), %r10d	# pic_pix_y, tmp2253
	movl	-120(%rbp), %ecx	# pic_pix_x, tmp2254
	movl	-200(%rbp), %edx	# list, tmp2255
	movl	-156(%rbp), %r9d	# min_mcost, tmp2256
	movl	%r9d, 40(%rsp)	# tmp2256,
	movl	-216(%rbp), %r9d	# search_range, tmp2257
	movl	%r9d, 32(%rsp)	# tmp2257,
	leaq	-188(%rbp), %r9	#, tmp2258
	movq	%r9, 24(%rsp)	# tmp2258,
	leaq	-190(%rbp), %r9	#, tmp2259
	movq	%r9, 16(%rsp)	# tmp2259,
	movl	%r8d, 8(%rsp)	# D.21259,
	movl	%edi, (%rsp)	# D.21259,
	movq	%rax, -232(%rbp)	# tmp2251, %sfp
	movsd	-232(%rbp), %xmm0	# %sfp,
	movl	%r11d, %r9d	# tmp2252,
	movl	%r10d, %r8d	# tmp2253,
	movl	$orig_pic.6526, %edi	#,
	call	FastIntegerPelBlockMotionSearch	#
	movl	%eax, -156(%rbp)	# tmp2260, min_mcost
	.loc 1 2581 0
	movl	$0, -164(%rbp)	#, i
	jmp	.L787	#
.L792:
	.loc 1 2583 0
	movl	$0, -160(%rbp)	#, j
	jmp	.L788	#
.L791:
	.loc 1 2585 0
	cmpl	$0, -200(%rbp)	#, list
	jne	.L789	#,
	.loc 1 2586 0
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1549
	movq	img(%rip), %rax	# img, img.1550
	movl	152(%rax), %eax	# img.1550_1467->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2261
	addl	%eax, %ecx	# tmp2261, D.21259
	movl	-164(%rbp), %eax	# i, tmp2262
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1549, D.21271
	movq	(%rax), %rdx	# *_1474, D.21272
	movq	img(%rip), %rax	# img, img.1551
	movl	156(%rax), %eax	# img.1551_1476->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2263
	addl	%eax, %ecx	# tmp2263, D.21259
	movl	-160(%rbp), %eax	# j, tmp2264
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1483, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_1487, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2265
	movslq	%edx, %rdx	# tmp2265, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1491, D.21275
	movl	-156(%rbp), %edx	# min_mcost, tmp2266
	movl	%edx, (%rax)	# tmp2266, *_1492
	jmp	.L790	#
.L789:
	.loc 1 2588 0
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1552
	movq	img(%rip), %rax	# img, img.1553
	movl	152(%rax), %eax	# img.1553_1494->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2267
	addl	%eax, %ecx	# tmp2267, D.21259
	movl	-164(%rbp), %eax	# i, tmp2268
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1552, D.21271
	movq	(%rax), %rdx	# *_1501, D.21272
	movq	img(%rip), %rax	# img, img.1554
	movl	156(%rax), %eax	# img.1554_1503->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2269
	addl	%eax, %ecx	# tmp2269, D.21259
	movl	-160(%rbp), %eax	# j, tmp2270
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1510, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_1514, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2271
	movslq	%edx, %rdx	# tmp2271, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1518, D.21275
	movl	-156(%rbp), %edx	# min_mcost, tmp2272
	movl	%edx, (%rax)	# tmp2272, *_1519
.L790:
	.loc 1 2583 0
	addl	$1, -160(%rbp)	#, j
.L788:
	.loc 1 2583 0 is_stmt 0 discriminator 1
	movl	-124(%rbp), %eax	# bsy, tmp2273
	sarl	$2, %eax	#, D.21259
	cmpl	-160(%rbp), %eax	# j, D.21259
	jg	.L791	#,
	.loc 1 2581 0 is_stmt 1
	addl	$1, -164(%rbp)	#, i
.L787:
	.loc 1 2581 0 is_stmt 0 discriminator 1
	movl	-128(%rbp), %eax	# bsx, tmp2274
	sarl	$2, %eax	#, D.21259
	cmpl	-164(%rbp), %eax	# i, D.21259
	jg	.L792	#,
	jmp	.L793	#
.L785:
	.loc 1 2615 0 is_stmt 1
	movswl	-166(%rbp), %r8d	# pred_mv_y, D.21259
	movswl	-168(%rbp), %edi	# pred_mv_x, D.21259
	movswl	-196(%rbp), %esi	# ref, D.21259
	movq	-224(%rbp), %rax	# lambda, tmp2275
	movl	-212(%rbp), %r11d	# blocktype, tmp2276
	movl	-116(%rbp), %r10d	# pic_pix_y, tmp2277
	movl	-120(%rbp), %ecx	# pic_pix_x, tmp2278
	movl	-200(%rbp), %edx	# list, tmp2279
	movl	-156(%rbp), %r9d	# min_mcost, tmp2280
	movl	%r9d, 40(%rsp)	# tmp2280,
	movl	-216(%rbp), %r9d	# search_range, tmp2281
	movl	%r9d, 32(%rsp)	# tmp2281,
	leaq	-188(%rbp), %r9	#, tmp2282
	movq	%r9, 24(%rsp)	# tmp2282,
	leaq	-190(%rbp), %r9	#, tmp2283
	movq	%r9, 16(%rsp)	# tmp2283,
	movl	%r8d, 8(%rsp)	# D.21259,
	movl	%edi, (%rsp)	# D.21259,
	movq	%rax, -232(%rbp)	# tmp2275, %sfp
	movsd	-232(%rbp), %xmm0	# %sfp,
	movl	%r11d, %r9d	# tmp2276,
	movl	%r10d, %r8d	# tmp2277,
	movl	$orig_pic.6526, %edi	#,
	call	FastFullPelBlockMotionSearch	#
	movl	%eax, -156(%rbp)	# tmp2284, min_mcost
.L793:
	.loc 1 2626 0
	movq	input(%rip), %rax	# input, input.1555
	movl	24(%rax), %eax	# input.1555_1526->hadamard, D.21259
	testl	%eax, %eax	# D.21259
	je	.L794	#,
	.loc 1 2626 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1556
	movl	28(%rax), %eax	# input.1556_1528->hadamardqpel, D.21259
	testl	%eax, %eax	# D.21259
	jne	.L794	#,
	.loc 1 2628 0 is_stmt 1
	movl	-140(%rbp), %eax	# max_value, tmp2285
	movl	%eax, -156(%rbp)	# tmp2285, min_mcost
.L794:
	.loc 1 2631 0
	movq	input(%rip), %rax	# input, input.1557
	movl	3292(%rax), %eax	# input.1557_1531->FMEnable, D.21259
	testl	%eax, %eax	# D.21259
	je	.L795	#,
	.loc 1 2633 0
	cmpl	$3, -212(%rbp)	#, blocktype
	jle	.L796	#,
	.loc 1 2635 0
	movswl	-166(%rbp), %r8d	# pred_mv_y, D.21259
	movswl	-168(%rbp), %edi	# pred_mv_x, D.21259
	movswl	-196(%rbp), %esi	# ref, D.21259
	movq	-224(%rbp), %rax	# lambda, tmp2286
	movl	-212(%rbp), %r11d	# blocktype, tmp2287
	movl	-116(%rbp), %r10d	# pic_pix_y, tmp2288
	movl	-120(%rbp), %ecx	# pic_pix_x, tmp2289
	movl	-200(%rbp), %edx	# list, tmp2290
	movl	$0, 56(%rsp)	#,
	movl	-156(%rbp), %r9d	# min_mcost, tmp2291
	movl	%r9d, 48(%rsp)	# tmp2291,
	movl	$9, 40(%rsp)	#,
	movl	$9, 32(%rsp)	#,
	leaq	-188(%rbp), %r9	#, tmp2292
	movq	%r9, 24(%rsp)	# tmp2292,
	leaq	-190(%rbp), %r9	#, tmp2293
	movq	%r9, 16(%rsp)	# tmp2293,
	movl	%r8d, 8(%rsp)	# D.21259,
	movl	%edi, (%rsp)	# D.21259,
	movq	%rax, -232(%rbp)	# tmp2286, %sfp
	movsd	-232(%rbp), %xmm0	# %sfp,
	movl	%r11d, %r9d	# tmp2287,
	movl	%r10d, %r8d	# tmp2288,
	movl	$orig_pic.6526, %edi	#,
	call	FastSubPelBlockMotionSearch	#
	movl	%eax, -156(%rbp)	# tmp2294, min_mcost
	jmp	.L797	#
.L796:
	.loc 1 2641 0
	movswl	-166(%rbp), %r8d	# pred_mv_y, D.21259
	movswl	-168(%rbp), %edi	# pred_mv_x, D.21259
	movswl	-196(%rbp), %esi	# ref, D.21259
	movq	-224(%rbp), %rax	# lambda, tmp2295
	movl	-212(%rbp), %r11d	# blocktype, tmp2296
	movl	-116(%rbp), %r10d	# pic_pix_y, tmp2297
	movl	-120(%rbp), %ecx	# pic_pix_x, tmp2298
	movl	-200(%rbp), %edx	# list, tmp2299
	movl	-156(%rbp), %r9d	# min_mcost, tmp2300
	movl	%r9d, 48(%rsp)	# tmp2300,
	movl	$9, 40(%rsp)	#,
	movl	$9, 32(%rsp)	#,
	leaq	-188(%rbp), %r9	#, tmp2301
	movq	%r9, 24(%rsp)	# tmp2301,
	leaq	-190(%rbp), %r9	#, tmp2302
	movq	%r9, 16(%rsp)	# tmp2302,
	movl	%r8d, 8(%rsp)	# D.21259,
	movl	%edi, (%rsp)	# D.21259,
	movq	%rax, -232(%rbp)	# tmp2295, %sfp
	movsd	-232(%rbp), %xmm0	# %sfp,
	movl	%r11d, %r9d	# tmp2296,
	movl	%r10d, %r8d	# tmp2297,
	movl	$orig_pic.6526, %edi	#,
	call	SubPelBlockMotionSearch	#
	movl	%eax, -156(%rbp)	# tmp2303, min_mcost
.L797:
	.loc 1 2647 0
	movl	$0, -164(%rbp)	#, i
	jmp	.L798	#
.L803:
	.loc 1 2649 0
	movl	$0, -160(%rbp)	#, j
	jmp	.L799	#
.L802:
	.loc 1 2651 0
	cmpl	$0, -200(%rbp)	#, list
	jne	.L800	#,
	.loc 1 2653 0
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1558
	movq	img(%rip), %rax	# img, img.1559
	movl	152(%rax), %eax	# img.1559_1546->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2304
	addl	%eax, %ecx	# tmp2304, D.21259
	movl	-164(%rbp), %eax	# i, tmp2305
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1558, D.21271
	movq	(%rax), %rdx	# *_1553, D.21272
	movq	img(%rip), %rax	# img, img.1560
	movl	156(%rax), %eax	# img.1560_1555->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2306
	addl	%eax, %ecx	# tmp2306, D.21259
	movl	-160(%rbp), %eax	# j, tmp2307
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1562, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_1566, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2308
	movslq	%edx, %rdx	# tmp2308, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1570, D.21275
	leaq	4(%rax), %rdx	#, D.21275
	movzwl	-190(%rbp), %eax	# mv_x, mv_x.1561
	cwtl
	movl	%eax, (%rdx)	# D.21259, *_1572
	.loc 1 2654 0
	movq	all_mincost(%rip), %rdx	# all_mincost, all_mincost.1562
	movq	img(%rip), %rax	# img, img.1563
	movl	152(%rax), %eax	# img.1563_1576->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2309
	addl	%eax, %ecx	# tmp2309, D.21259
	movl	-164(%rbp), %eax	# i, tmp2310
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_mincost.1562, D.21271
	movq	(%rax), %rdx	# *_1583, D.21272
	movq	img(%rip), %rax	# img, img.1564
	movl	156(%rax), %eax	# img.1564_1585->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2311
	addl	%eax, %ecx	# tmp2311, D.21259
	movl	-160(%rbp), %eax	# j, tmp2312
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1592, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_1596, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2313
	movslq	%edx, %rdx	# tmp2313, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1600, D.21275
	leaq	8(%rax), %rdx	#, D.21275
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1565
	cwtl
	movl	%eax, (%rdx)	# D.21259, *_1602
	jmp	.L801	#
.L800:
	.loc 1 2658 0
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1566
	movq	img(%rip), %rax	# img, img.1567
	movl	152(%rax), %eax	# img.1567_1606->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2314
	addl	%eax, %ecx	# tmp2314, D.21259
	movl	-164(%rbp), %eax	# i, tmp2315
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1566, D.21271
	movq	(%rax), %rdx	# *_1613, D.21272
	movq	img(%rip), %rax	# img, img.1568
	movl	156(%rax), %eax	# img.1568_1615->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2316
	addl	%eax, %ecx	# tmp2316, D.21259
	movl	-160(%rbp), %eax	# j, tmp2317
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1622, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_1626, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2318
	movslq	%edx, %rdx	# tmp2318, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1630, D.21275
	leaq	4(%rax), %rdx	#, D.21275
	movzwl	-190(%rbp), %eax	# mv_x, mv_x.1569
	cwtl
	movl	%eax, (%rdx)	# D.21259, *_1632
	.loc 1 2659 0
	movq	all_bwmincost(%rip), %rdx	# all_bwmincost, all_bwmincost.1570
	movq	img(%rip), %rax	# img, img.1571
	movl	152(%rax), %eax	# img.1571_1636->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2319
	addl	%eax, %ecx	# tmp2319, D.21259
	movl	-164(%rbp), %eax	# i, tmp2320
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# all_bwmincost.1570, D.21271
	movq	(%rax), %rdx	# *_1643, D.21272
	movq	img(%rip), %rax	# img, img.1572
	movl	156(%rax), %eax	# img.1572_1645->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %ecx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2321
	addl	%eax, %ecx	# tmp2321, D.21259
	movl	-160(%rbp), %eax	# j, tmp2322
	addl	%ecx, %eax	# D.21259, D.21259
	cltq
	salq	$3, %rax	#, D.21261
	addq	%rdx, %rax	# D.21272, D.21272
	movq	(%rax), %rax	# *_1652, D.21273
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21273
	movq	(%rax), %rax	# *_1656, D.21274
	movl	-212(%rbp), %edx	# blocktype, tmp2323
	movslq	%edx, %rdx	# tmp2323, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21274
	movq	(%rax), %rax	# *_1660, D.21275
	leaq	8(%rax), %rdx	#, D.21275
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1573
	cwtl
	movl	%eax, (%rdx)	# D.21259, *_1662
.L801:
	.loc 1 2649 0
	addl	$1, -160(%rbp)	#, j
.L799:
	.loc 1 2649 0 is_stmt 0 discriminator 1
	movl	-124(%rbp), %eax	# bsy, tmp2324
	sarl	$2, %eax	#, D.21259
	cmpl	-160(%rbp), %eax	# j, D.21259
	jg	.L802	#,
	.loc 1 2647 0 is_stmt 1
	addl	$1, -164(%rbp)	#, i
.L798:
	.loc 1 2647 0 is_stmt 0 discriminator 1
	movl	-128(%rbp), %eax	# bsx, tmp2325
	sarl	$2, %eax	#, D.21259
	cmpl	-164(%rbp), %eax	# i, D.21259
	jg	.L803	#,
	jmp	.L804	#
.L795:
	.loc 1 2667 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1574
	movl	24(%rax), %eax	# input.1574_1667->hadamard, D.21259
	testl	%eax, %eax	# D.21259
	je	.L805	#,
	.loc 1 2667 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1575
	movl	28(%rax), %eax	# input.1575_1669->hadamardqpel, D.21259
	testl	%eax, %eax	# D.21259
	jne	.L805	#,
	.loc 1 2669 0 is_stmt 1
	movl	-140(%rbp), %eax	# max_value, tmp2326
	movl	%eax, -156(%rbp)	# tmp2326, min_mcost
.L805:
	.loc 1 2672 0
	movswl	-166(%rbp), %r8d	# pred_mv_y, D.21259
	movswl	-168(%rbp), %edi	# pred_mv_x, D.21259
	movswl	-196(%rbp), %esi	# ref, D.21259
	movq	-224(%rbp), %rax	# lambda, tmp2327
	movl	-212(%rbp), %r11d	# blocktype, tmp2328
	movl	-116(%rbp), %r10d	# pic_pix_y, tmp2329
	movl	-120(%rbp), %ecx	# pic_pix_x, tmp2330
	movl	-200(%rbp), %edx	# list, tmp2331
	movl	-156(%rbp), %r9d	# min_mcost, tmp2332
	movl	%r9d, 48(%rsp)	# tmp2332,
	movl	$9, 40(%rsp)	#,
	movl	$9, 32(%rsp)	#,
	leaq	-188(%rbp), %r9	#, tmp2333
	movq	%r9, 24(%rsp)	# tmp2333,
	leaq	-190(%rbp), %r9	#, tmp2334
	movq	%r9, 16(%rsp)	# tmp2334,
	movl	%r8d, 8(%rsp)	# D.21259,
	movl	%edi, (%rsp)	# D.21259,
	movq	%rax, -232(%rbp)	# tmp2327, %sfp
	movsd	-232(%rbp), %xmm0	# %sfp,
	movl	%r11d, %r9d	# tmp2328,
	movl	%r10d, %r8d	# tmp2329,
	movl	$orig_pic.6526, %edi	#,
	call	SubPelBlockMotionSearch	#
	movl	%eax, -156(%rbp)	# tmp2335, min_mcost
.L804:
	.loc 1 2677 0
	movq	input(%rip), %rax	# input, input.1576
	movl	2464(%rax), %eax	# input.1576_1676->rdopt, D.21259
	testl	%eax, %eax	# D.21259
	jne	.L806	#,
	.loc 1 2680 0
	cmpl	$1, -212(%rbp)	#, blocktype
	jne	.L806	#,
	.loc 1 2680 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1577
	movl	24(%rax), %eax	# img.1577_1678->type, D.21259
	testl	%eax, %eax	# D.21259
	je	.L807	#,
	movq	img(%rip), %rax	# img, img.1578
	movl	24(%rax), %eax	# img.1578_1680->type, D.21259
	cmpl	$3, %eax	#, D.21259
	jne	.L806	#,
.L807:
.LBB2:
	.loc 1 2684 0 is_stmt 1
	movl	$0, %eax	#,
	call	FindSkipModeMotionVector	#
	.loc 1 2686 0
	movq	-224(%rbp), %rax	# lambda, tmp2336
	movq	%rax, -232(%rbp)	# tmp2336, %sfp
	movsd	-232(%rbp), %xmm0	# %sfp,
	call	GetSkipCostMB	#
	movl	%eax, -112(%rbp)	# tmp2337, cost
	.loc 1 2687 0
	movsd	-224(%rbp), %xmm1	# lambda, tmp2338
	movsd	.LC18(%rip), %xmm0	#, tmp2339
	mulsd	%xmm1, %xmm0	# tmp2338, D.21276
	movsd	.LC19(%rip), %xmm1	#, tmp2340
	addsd	%xmm1, %xmm0	# tmp2340, D.21276
	call	floor	#
	cvttsd2si	%xmm0, %eax	# D.21276, D.21259
	subl	%eax, -112(%rbp)	# D.21259, cost
	.loc 1 2689 0
	movl	-112(%rbp), %eax	# cost, tmp2341
	cmpl	-156(%rbp), %eax	# min_mcost, tmp2341
	jge	.L806	#,
	.loc 1 2691 0
	movl	-112(%rbp), %eax	# cost, tmp2342
	movl	%eax, -156(%rbp)	# tmp2342, min_mcost
	.loc 1 2692 0
	movq	img(%rip), %rax	# img, img.1579
	movq	71928(%rax), %rax	# img.1579_1689->all_mv, D.21262
	movq	(%rax), %rax	# *_1690, D.21263
	movq	(%rax), %rax	# *_1691, D.21260
	movq	(%rax), %rax	# *_1692, D.21264
	movq	(%rax), %rax	# *_1693, D.21265
	movq	(%rax), %rax	# *_1694, D.21269
	movzwl	(%rax), %eax	# *_1695, mv_x.1580
	movw	%ax, -190(%rbp)	# mv_x.1580, mv_x
	.loc 1 2693 0
	movq	img(%rip), %rax	# img, img.1581
	movq	71928(%rax), %rax	# img.1581_1697->all_mv, D.21262
	movq	(%rax), %rax	# *_1698, D.21263
	movq	(%rax), %rax	# *_1699, D.21260
	movq	(%rax), %rax	# *_1700, D.21264
	movq	(%rax), %rax	# *_1701, D.21265
	movq	(%rax), %rax	# *_1702, D.21269
	movzwl	2(%rax), %eax	# MEM[(short int *)_1703 + 2B], mv_y.1582
	movw	%ax, -188(%rbp)	# mv_y.1582, mv_y
.L806:
.LBE2:
	.loc 1 2702 0
	movq	input(%rip), %rax	# input, input.1583
	movl	3292(%rax), %eax	# input.1583_1705->FMEnable, D.21259
	testl	%eax, %eax	# D.21259
	je	.L808	#,
.LBB3:
	.loc 1 2704 0
	movq	img(%rip), %rax	# img, img.1584
	movl	152(%rax), %eax	# img.1584_1707->pix_x, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %edx	# D.21259, D.21259
	movl	-136(%rbp), %eax	# block_x, tmp2346
	addl	%edx, %eax	# D.21259, tmp2345
	movl	%eax, -108(%rbp)	# tmp2345, h4x4blkno
	.loc 1 2705 0
	movq	img(%rip), %rax	# img, img.1585
	movl	156(%rax), %eax	# img.1585_1711->pix_y, D.21259
	sarl	$2, %eax	#, D.21259
	movl	%eax, %edx	# D.21259, D.21259
	movl	-132(%rbp), %eax	# block_y, tmp2350
	addl	%edx, %eax	# D.21259, tmp2349
	movl	%eax, -104(%rbp)	# tmp2349, v4x4blkno
	.loc 1 2706 0
	movl	$0, -164(%rbp)	#, i
	jmp	.L809	#
.L812:
	.loc 1 2708 0
	movl	$0, -160(%rbp)	#, j
	jmp	.L810	#
.L811:
	.loc 1 2710 0 discriminator 2
	movl	-164(%rbp), %eax	# i, tmp2351
	movl	-136(%rbp), %edx	# block_x, tmp2352
	addl	%edx, %eax	# tmp2352, D.21259
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2353
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_1722, D.21263
	movl	-160(%rbp), %edx	# j, tmp2354
	movl	-132(%rbp), %ecx	# block_y, tmp2355
	addl	%ecx, %edx	# tmp2355, D.21259
	movslq	%edx, %rdx	# D.21259, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_1727, D.21260
	movl	-200(%rbp), %edx	# list, tmp2356
	movslq	%edx, %rdx	# tmp2356, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_1731, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_1735, D.21265
	movl	-212(%rbp), %edx	# blocktype, tmp2357
	movslq	%edx, %rdx	# tmp2357, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_1739, D.21269
	movzwl	-190(%rbp), %edx	# mv_x, mv_x.1586
	movw	%dx, (%rax)	# mv_x.1586, *_1740
	.loc 1 2711 0 discriminator 2
	movl	-164(%rbp), %eax	# i, tmp2358
	movl	-136(%rbp), %edx	# block_x, tmp2359
	addl	%edx, %eax	# tmp2359, D.21259
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2360
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_1745, D.21263
	movl	-160(%rbp), %edx	# j, tmp2361
	movl	-132(%rbp), %ecx	# block_y, tmp2362
	addl	%ecx, %edx	# tmp2362, D.21259
	movslq	%edx, %rdx	# D.21259, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_1750, D.21260
	movl	-200(%rbp), %edx	# list, tmp2363
	movslq	%edx, %rdx	# tmp2363, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_1754, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_1758, D.21265
	movl	-212(%rbp), %edx	# blocktype, tmp2364
	movslq	%edx, %rdx	# tmp2364, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_1762, D.21269
	leaq	2(%rax), %rdx	#, D.21269
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1587
	movw	%ax, (%rdx)	# mv_y.1587, *_1764
	.loc 1 2712 0 discriminator 2
	movl	-164(%rbp), %eax	# i, tmp2365
	movl	-108(%rbp), %edx	# h4x4blkno, tmp2366
	addl	%edx, %eax	# tmp2366, D.21259
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-96(%rbp), %rax	# mv_array, tmp2367
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_1769, D.21265
	movl	-160(%rbp), %edx	# j, tmp2368
	movl	-104(%rbp), %ecx	# v4x4blkno, tmp2369
	addl	%ecx, %edx	# tmp2369, D.21259
	movslq	%edx, %rdx	# D.21259, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_1774, D.21269
	movzwl	-190(%rbp), %edx	# mv_x, mv_x.1588
	movw	%dx, (%rax)	# mv_x.1588, *_1775
	.loc 1 2713 0 discriminator 2
	movl	-164(%rbp), %eax	# i, tmp2370
	movl	-108(%rbp), %edx	# h4x4blkno, tmp2371
	addl	%edx, %eax	# tmp2371, D.21259
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-96(%rbp), %rax	# mv_array, tmp2372
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_1780, D.21265
	movl	-160(%rbp), %edx	# j, tmp2373
	movl	-104(%rbp), %ecx	# v4x4blkno, tmp2374
	addl	%ecx, %edx	# tmp2374, D.21259
	movslq	%edx, %rdx	# D.21259, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_1785, D.21269
	leaq	2(%rax), %rdx	#, D.21269
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1589
	movw	%ax, (%rdx)	# mv_y.1589, *_1787
	.loc 1 2708 0 discriminator 2
	addl	$1, -160(%rbp)	#, j
.L810:
	.loc 1 2708 0 is_stmt 0 discriminator 1
	movl	-124(%rbp), %eax	# bsy, tmp2375
	sarl	$2, %eax	#, D.21259
	cmpl	-160(%rbp), %eax	# j, D.21259
	jg	.L811	#,
	.loc 1 2706 0 is_stmt 1
	addl	$1, -164(%rbp)	#, i
.L809:
	.loc 1 2706 0 is_stmt 0 discriminator 1
	movl	-128(%rbp), %eax	# bsx, tmp2376
	sarl	$2, %eax	#, D.21259
	cmpl	-164(%rbp), %eax	# i, D.21259
	jg	.L812	#,
.LBE3:
	jmp	.L813	#
.L808:
	.loc 1 2719 0 is_stmt 1
	movl	$0, -164(%rbp)	#, i
	jmp	.L814	#
.L817:
	.loc 1 2721 0
	movl	$0, -160(%rbp)	#, j
	jmp	.L815	#
.L816:
	.loc 1 2723 0 discriminator 2
	movl	-164(%rbp), %eax	# i, tmp2377
	movl	-136(%rbp), %edx	# block_x, tmp2378
	addl	%edx, %eax	# tmp2378, D.21259
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2379
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_1798, D.21263
	movl	-160(%rbp), %edx	# j, tmp2380
	movl	-132(%rbp), %ecx	# block_y, tmp2381
	addl	%ecx, %edx	# tmp2381, D.21259
	movslq	%edx, %rdx	# D.21259, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_1803, D.21260
	movl	-200(%rbp), %edx	# list, tmp2382
	movslq	%edx, %rdx	# tmp2382, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_1807, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_1811, D.21265
	movl	-212(%rbp), %edx	# blocktype, tmp2383
	movslq	%edx, %rdx	# tmp2383, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_1815, D.21269
	movzwl	-190(%rbp), %edx	# mv_x, mv_x.1590
	movw	%dx, (%rax)	# mv_x.1590, *_1816
	.loc 1 2724 0 discriminator 2
	movl	-164(%rbp), %eax	# i, tmp2384
	movl	-136(%rbp), %edx	# block_x, tmp2385
	addl	%edx, %eax	# tmp2385, D.21259
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-88(%rbp), %rax	# all_mv, tmp2386
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_1821, D.21263
	movl	-160(%rbp), %edx	# j, tmp2387
	movl	-132(%rbp), %ecx	# block_y, tmp2388
	addl	%ecx, %edx	# tmp2388, D.21259
	movslq	%edx, %rdx	# D.21259, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_1826, D.21260
	movl	-200(%rbp), %edx	# list, tmp2389
	movslq	%edx, %rdx	# tmp2389, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_1830, D.21264
	movswq	-196(%rbp), %rdx	# ref, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21264
	movq	(%rax), %rax	# *_1834, D.21265
	movl	-212(%rbp), %edx	# blocktype, tmp2390
	movslq	%edx, %rdx	# tmp2390, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_1838, D.21269
	leaq	2(%rax), %rdx	#, D.21269
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1591
	movw	%ax, (%rdx)	# mv_y.1591, *_1840
	.loc 1 2721 0 discriminator 2
	addl	$1, -160(%rbp)	#, j
.L815:
	.loc 1 2721 0 is_stmt 0 discriminator 1
	movl	-124(%rbp), %eax	# bsy, tmp2391
	sarl	$2, %eax	#, D.21259
	cmpl	-160(%rbp), %eax	# j, D.21259
	jg	.L816	#,
	.loc 1 2719 0 is_stmt 1
	addl	$1, -164(%rbp)	#, i
.L814:
	.loc 1 2719 0 is_stmt 0 discriminator 1
	movl	-128(%rbp), %eax	# bsx, tmp2392
	sarl	$2, %eax	#, D.21259
	cmpl	-164(%rbp), %eax	# i, D.21259
	jg	.L817	#,
.L813:
	.loc 1 2729 0 is_stmt 1
	movq	img(%rip), %rax	# img, img.1592
	movl	24(%rax), %eax	# img.1592_1844->type, D.21259
	cmpl	$1, %eax	#, D.21259
	jne	.L818	#,
	.loc 1 2729 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1593
	movl	1256(%rax), %eax	# input.1593_1846->BiPredMotionEstimation, D.21259
	testl	%eax, %eax	# D.21259
	je	.L818	#,
	cmpl	$1, -212(%rbp)	#, blocktype
	jne	.L818	#,
	cmpw	$0, -196(%rbp)	#, ref
	jne	.L818	#,
.LBB4:
	.loc 1 2732 0 is_stmt 1
	cmpl	$0, -200(%rbp)	#, list
	je	.L819	#,
	.loc 1 2732 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1595
	movq	71936(%rax), %rax	# img.1595_1848->bipred_mv1, iftmp.1594
	jmp	.L820	#
.L819:
	.loc 1 2732 0 discriminator 2
	movq	img(%rip), %rax	# img, img.1596
	movq	71944(%rax), %rax	# img.1596_1850->bipred_mv2, iftmp.1594
.L820:
	.loc 1 2732 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.1594, bipred_mv
	.loc 1 2733 0 is_stmt 1 discriminator 3
	movl	-140(%rbp), %eax	# max_value, tmp2393
	movl	%eax, -144(%rbp)	# tmp2393, min_mcostbi
	.loc 1 2736 0 discriminator 3
	movw	$0, -174(%rbp)	#, pred_mv_x2
	movw	$0, -172(%rbp)	#, pred_mv_y2
	.loc 1 2737 0 discriminator 3
	movl	-200(%rbp), %eax	# list, tmp2394
	movw	%ax, -170(%rbp)	# tmp2394, iterlist
	.loc 1 2740 0 discriminator 3
	cmpl	$0, -200(%rbp)	#, list
	sete	%al	#, D.21279
	movzbl	%al, %edi	# D.21279, D.21259
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1597
	movq	6504(%rax), %rdx	# enc_picture.1597_1859->mv, D.21260
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1598
	movq	6480(%rax), %rsi	# enc_picture.1598_1861->ref_idx, D.21264
	movl	-136(%rbp), %r8d	# block_x, tmp2395
	leaq	-48(%rbp), %rax	#, tmp2396
	movl	-124(%rbp), %ecx	# bsy, tmp2397
	movl	%ecx, 16(%rsp)	# tmp2397,
	movl	-128(%rbp), %ecx	# bsx, tmp2398
	movl	%ecx, 8(%rsp)	# tmp2398,
	movl	-132(%rbp), %ecx	# block_y, tmp2399
	movl	%ecx, (%rsp)	# tmp2399,
	movl	%r8d, %r9d	# tmp2395,
	movl	%edi, %r8d	# D.21259,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp2396,
	call	SetMotionVectorPredictor	#
	.loc 1 2742 0 discriminator 3
	movzwl	-190(%rbp), %eax	# mv_x, mv_x.1599
	cwtl
	addl	$2, %eax	#, D.21259
	sarl	$2, %eax	#, D.21259
	movw	%ax, -190(%rbp)	# mv_x.1600, mv_x
	.loc 1 2743 0 discriminator 3
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1601
	cwtl
	addl	$2, %eax	#, D.21259
	sarl	$2, %eax	#, D.21259
	movw	%ax, -188(%rbp)	# mv_y.1602, mv_y
	.loc 1 2745 0 discriminator 3
	movl	$0, -164(%rbp)	#, i
	jmp	.L821	#
.L826:
	.loc 1 2747 0
	movl	-164(%rbp), %eax	# i, i.1603
	andl	$1, %eax	#, D.21280
	testl	%eax, %eax	# D.21280
	je	.L822	#,
	.loc 1 2749 0
	movq	-80(%rbp), %rax	# pred_mv, tmp2400
	movzwl	(%rax), %eax	# *pred_mv_112, tmp2401
	movw	%ax, -174(%rbp)	# tmp2401, pred_mv_x2
	.loc 1 2750 0
	movq	-80(%rbp), %rax	# pred_mv, tmp2402
	movzwl	2(%rax), %eax	# MEM[(short int *)pred_mv_112 + 2B], tmp2403
	movw	%ax, -172(%rbp)	# tmp2403, pred_mv_y2
	.loc 1 2751 0
	movzwl	-48(%rbp), %eax	# pred_mv_bi, tmp2404
	movw	%ax, -178(%rbp)	# tmp2404, pred_mv_x1
	.loc 1 2752 0
	movzwl	-46(%rbp), %eax	# pred_mv_bi, tmp2405
	movw	%ax, -176(%rbp)	# tmp2405, pred_mv_y1
	.loc 1 2753 0
	movzwl	-186(%rbp), %eax	# bimv_x, bimv_x.1604
	movw	%ax, -182(%rbp)	# bimv_x.1604, tempmv_x
	.loc 1 2754 0
	movzwl	-184(%rbp), %eax	# bimv_y, bimv_y.1605
	movw	%ax, -180(%rbp)	# bimv_y.1605, tempmv_y
	.loc 1 2755 0
	movzwl	-190(%rbp), %eax	# mv_x, mv_x.1606
	movw	%ax, -186(%rbp)	# mv_x.1606, bimv_x
	.loc 1 2756 0
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1607
	movw	%ax, -184(%rbp)	# mv_y.1607, bimv_y
	.loc 1 2757 0
	cmpl	$0, -200(%rbp)	#, list
	sete	%al	#, D.21279
	movzbl	%al, %eax	# D.21279, tmp2406
	movw	%ax, -170(%rbp)	# tmp2406, iterlist
	jmp	.L823	#
.L822:
	.loc 1 2762 0
	movq	-80(%rbp), %rax	# pred_mv, tmp2407
	movzwl	(%rax), %eax	# *pred_mv_112, tmp2408
	movw	%ax, -178(%rbp)	# tmp2408, pred_mv_x1
	.loc 1 2763 0
	movq	-80(%rbp), %rax	# pred_mv, tmp2409
	movzwl	2(%rax), %eax	# MEM[(short int *)pred_mv_112 + 2B], tmp2410
	movw	%ax, -176(%rbp)	# tmp2410, pred_mv_y1
	.loc 1 2764 0
	movzwl	-48(%rbp), %eax	# pred_mv_bi, tmp2411
	movw	%ax, -174(%rbp)	# tmp2411, pred_mv_x2
	.loc 1 2765 0
	movzwl	-46(%rbp), %eax	# pred_mv_bi, tmp2412
	movw	%ax, -172(%rbp)	# tmp2412, pred_mv_y2
	.loc 1 2767 0
	cmpl	$0, -164(%rbp)	#, i
	je	.L824	#,
	.loc 1 2769 0
	movzwl	-186(%rbp), %eax	# bimv_x, bimv_x.1608
	movw	%ax, -182(%rbp)	# bimv_x.1608, tempmv_x
	.loc 1 2770 0
	movzwl	-184(%rbp), %eax	# bimv_y, bimv_y.1609
	movw	%ax, -180(%rbp)	# bimv_y.1609, tempmv_y
	.loc 1 2771 0
	movzwl	-190(%rbp), %eax	# mv_x, mv_x.1610
	movw	%ax, -186(%rbp)	# mv_x.1610, bimv_x
	.loc 1 2772 0
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1611
	movw	%ax, -184(%rbp)	# mv_y.1611, bimv_y
	jmp	.L825	#
.L824:
	.loc 1 2776 0
	movzwl	-190(%rbp), %eax	# mv_x, mv_x.1612
	movw	%ax, -182(%rbp)	# mv_x.1612, tempmv_x
	.loc 1 2777 0
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1613
	movw	%ax, -180(%rbp)	# mv_y.1613, tempmv_y
	.loc 1 2778 0
	movswl	-174(%rbp), %eax	# pred_mv_x2, D.21259
	addl	$2, %eax	#, D.21259
	sarl	$2, %eax	#, D.21259
	movw	%ax, -186(%rbp)	# bimv_x.1614, bimv_x
	.loc 1 2779 0
	movswl	-172(%rbp), %eax	# pred_mv_y2, D.21259
	addl	$2, %eax	#, D.21259
	sarl	$2, %eax	#, D.21259
	movw	%ax, -184(%rbp)	# bimv_y.1615, bimv_y
.L825:
	.loc 1 2782 0
	movl	-200(%rbp), %eax	# list, tmp2413
	movw	%ax, -170(%rbp)	# tmp2413, iterlist
.L823:
	.loc 1 2787 0
	movq	input(%rip), %rax	# input, input.1616
	movl	1264(%rax), %edx	# input.1616_1907->BiPredMESearchRange, D.21259
	.loc 1 2785 0
	movl	-164(%rbp), %eax	# i, tmp2414
	movl	%eax, %ecx	# tmp2414, tmp2584
	sarl	%cl, %edx	# tmp2584, D.21259
	movl	%edx, %r13d	# D.21259, D.21259
	movswl	-172(%rbp), %r10d	# pred_mv_y2, D.21259
	movswl	-174(%rbp), %r9d	# pred_mv_x2, D.21259
	movswl	-176(%rbp), %r8d	# pred_mv_y1, D.21259
	movswl	-178(%rbp), %edi	# pred_mv_x1, D.21259
	movswl	-170(%rbp), %edx	# iterlist, D.21259
	movswl	-196(%rbp), %esi	# ref, D.21259
	movq	-224(%rbp), %rax	# lambda, tmp2415
	movl	-212(%rbp), %r12d	# blocktype, tmp2416
	movl	-116(%rbp), %ebx	# pic_pix_y, tmp2417
	movl	-120(%rbp), %ecx	# pic_pix_x, tmp2418
	movl	-144(%rbp), %r11d	# min_mcostbi, tmp2419
	movl	%r11d, 80(%rsp)	# tmp2419,
	movl	%r13d, 72(%rsp)	# D.21259,
	leaq	-180(%rbp), %r11	#, tmp2420
	movq	%r11, 64(%rsp)	# tmp2420,
	leaq	-182(%rbp), %r11	#, tmp2421
	movq	%r11, 56(%rsp)	# tmp2421,
	leaq	-184(%rbp), %r11	#, tmp2422
	movq	%r11, 48(%rsp)	# tmp2422,
	leaq	-186(%rbp), %r11	#, tmp2423
	movq	%r11, 40(%rsp)	# tmp2423,
	movl	%r10d, 32(%rsp)	# D.21259,
	movl	%r9d, 24(%rsp)	# D.21259,
	movl	%r8d, 16(%rsp)	# D.21259,
	movl	%edi, 8(%rsp)	# D.21259,
	movl	-164(%rbp), %edi	# i, tmp2424
	movl	%edi, (%rsp)	# tmp2424,
	movq	%rax, -232(%rbp)	# tmp2415, %sfp
	movsd	-232(%rbp), %xmm0	# %sfp,
	movl	%r12d, %r9d	# tmp2416,
	movl	%ebx, %r8d	# tmp2417,
	movl	$orig_pic.6526, %edi	#,
	call	FullPelBlockMotionBiPred	#
	movl	%eax, -144(%rbp)	# tmp2425, min_mcostbi
	.loc 1 2789 0
	movzwl	-182(%rbp), %eax	# tempmv_x, tempmv_x.1617
	movw	%ax, -190(%rbp)	# tempmv_x.1617, mv_x
	.loc 1 2790 0
	movzwl	-180(%rbp), %eax	# tempmv_y, tempmv_y.1618
	movw	%ax, -188(%rbp)	# tempmv_y.1618, mv_y
	.loc 1 2745 0
	addl	$1, -164(%rbp)	#, i
.L821:
	.loc 1 2745 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1619
	movl	1260(%rax), %eax	# input.1619_1874->BiPredMERefinements, D.21259
	cmpl	-164(%rbp), %eax	# i, D.21259
	jge	.L826	#,
	.loc 1 2794 0 is_stmt 1
	movzwl	-182(%rbp), %eax	# tempmv_x, tempmv_x.1620
	cwtl
	sall	$2, %eax	#, D.21259
	movw	%ax, -182(%rbp)	# tempmv_x.1621, tempmv_x
	.loc 1 2795 0
	movzwl	-180(%rbp), %eax	# tempmv_y, tempmv_y.1622
	cwtl
	sall	$2, %eax	#, D.21259
	movw	%ax, -180(%rbp)	# tempmv_y.1623, tempmv_y
	.loc 1 2797 0
	movq	input(%rip), %rax	# input, input.1624
	movl	1268(%rax), %eax	# input.1624_1928->BiPredMESubPel, D.21259
	testl	%eax, %eax	# D.21259
	je	.L827	#,
	.loc 1 2799 0
	movq	input(%rip), %rax	# input, input.1625
	movl	24(%rax), %eax	# input.1625_1930->hadamard, D.21259
	testl	%eax, %eax	# D.21259
	je	.L828	#,
	.loc 1 2801 0
	movl	-140(%rbp), %eax	# max_value, tmp2426
	movl	%eax, -144(%rbp)	# tmp2426, min_mcostbi
.L828:
	.loc 1 2804 0
	movsd	-224(%rbp), %xmm1	# lambda, tmp2427
	movsd	.LC14(%rip), %xmm0	#, tmp2428
	mulsd	%xmm1, %xmm0	# tmp2427, D.21276
	movswl	-172(%rbp), %esi	# pred_mv_y2, D.21259
	movswl	-174(%rbp), %ecx	# pred_mv_x2, D.21259
	movswl	-170(%rbp), %eax	# iterlist, D.21259
	movl	-212(%rbp), %r9d	# blocktype, tmp2429
	movl	-116(%rbp), %r8d	# pic_pix_y, tmp2430
	movl	-120(%rbp), %edx	# pic_pix_x, tmp2431
	movl	-144(%rbp), %edi	# min_mcostbi, tmp2432
	movl	%edi, 64(%rsp)	# tmp2432,
	movl	$9, 56(%rsp)	#,
	movl	$9, 48(%rsp)	#,
	leaq	-180(%rbp), %rdi	#, tmp2433
	movq	%rdi, 40(%rsp)	# tmp2433,
	leaq	-182(%rbp), %rdi	#, tmp2434
	movq	%rdi, 32(%rsp)	# tmp2434,
	leaq	-184(%rbp), %rdi	#, tmp2435
	movq	%rdi, 24(%rsp)	# tmp2435,
	leaq	-186(%rbp), %rdi	#, tmp2436
	movq	%rdi, 16(%rsp)	# tmp2436,
	movl	%esi, 8(%rsp)	# D.21259,
	movl	%ecx, (%rsp)	# D.21259,
	movl	%edx, %ecx	# tmp2431,
	movl	%eax, %edx	# D.21259,
	movl	$0, %esi	#,
	movl	$orig_pic.6526, %edi	#,
	call	SubPelBlockSearchBiPred	#
	movl	%eax, -144(%rbp)	# tmp2437, min_mcostbi
	jmp	.L829	#
.L827:
	.loc 1 2810 0
	movzwl	-186(%rbp), %eax	# bimv_x, bimv_x.1626
	cwtl
	sall	$2, %eax	#, D.21259
	movw	%ax, -186(%rbp)	# bimv_x.1627, bimv_x
	.loc 1 2811 0
	movzwl	-184(%rbp), %eax	# bimv_y, bimv_y.1628
	cwtl
	sall	$2, %eax	#, D.21259
	movw	%ax, -184(%rbp)	# bimv_y.1629, bimv_y
.L829:
	.loc 1 2814 0
	movq	input(%rip), %rax	# input, input.1630
	movl	1268(%rax), %eax	# input.1630_1946->BiPredMESubPel, D.21259
	cmpl	$2, %eax	#, D.21259
	jne	.L830	#,
	.loc 1 2816 0
	movq	input(%rip), %rax	# input, input.1631
	movl	24(%rax), %eax	# input.1631_1948->hadamard, D.21259
	testl	%eax, %eax	# D.21259
	je	.L831	#,
	.loc 1 2818 0
	movl	-140(%rbp), %eax	# max_value, tmp2438
	movl	%eax, -144(%rbp)	# tmp2438, min_mcostbi
.L831:
	.loc 1 2821 0
	movsd	-224(%rbp), %xmm1	# lambda, tmp2439
	movsd	.LC14(%rip), %xmm0	#, tmp2440
	mulsd	%xmm1, %xmm0	# tmp2439, D.21276
	movswl	-166(%rbp), %esi	# pred_mv_y, D.21259
	movswl	-168(%rbp), %ecx	# pred_mv_x, D.21259
	cmpw	$0, -170(%rbp)	#, iterlist
	sete	%al	#, D.21279
	movzbl	%al, %eax	# D.21279, D.21259
	movl	-212(%rbp), %r9d	# blocktype, tmp2441
	movl	-116(%rbp), %r8d	# pic_pix_y, tmp2442
	movl	-120(%rbp), %edx	# pic_pix_x, tmp2443
	movl	-144(%rbp), %edi	# min_mcostbi, tmp2444
	movl	%edi, 64(%rsp)	# tmp2444,
	movl	$9, 56(%rsp)	#,
	movl	$9, 48(%rsp)	#,
	leaq	-184(%rbp), %rdi	#, tmp2445
	movq	%rdi, 40(%rsp)	# tmp2445,
	leaq	-186(%rbp), %rdi	#, tmp2446
	movq	%rdi, 32(%rsp)	# tmp2446,
	leaq	-188(%rbp), %rdi	#, tmp2447
	movq	%rdi, 24(%rsp)	# tmp2447,
	leaq	-190(%rbp), %rdi	#, tmp2448
	movq	%rdi, 16(%rsp)	# tmp2448,
	movl	%esi, 8(%rsp)	# D.21259,
	movl	%ecx, (%rsp)	# D.21259,
	movl	%edx, %ecx	# tmp2443,
	movl	%eax, %edx	# D.21259,
	movl	$0, %esi	#,
	movl	$orig_pic.6526, %edi	#,
	call	SubPelBlockSearchBiPred	#
	movl	%eax, -144(%rbp)	# tmp2449, min_mcostbi
	jmp	.L832	#
.L830:
	.loc 1 2827 0
	movzwl	-182(%rbp), %eax	# tempmv_x, tempmv_x.1632
	movw	%ax, -190(%rbp)	# tempmv_x.1632, mv_x
	.loc 1 2828 0
	movzwl	-180(%rbp), %eax	# tempmv_y, tempmv_y.1633
	movw	%ax, -188(%rbp)	# tempmv_y.1633, mv_y
.L832:
	.loc 1 2831 0
	movl	$0, -164(%rbp)	#, i
	jmp	.L833	#
.L840:
	.loc 1 2833 0
	movl	$0, -160(%rbp)	#, j
	jmp	.L834	#
.L839:
	.loc 1 2835 0
	movl	-164(%rbp), %eax	# i, tmp2450
	movl	-136(%rbp), %edx	# block_x, tmp2451
	addl	%edx, %eax	# tmp2451, D.21259
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-72(%rbp), %rax	# bipred_mv, tmp2452
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_1966, D.21263
	movl	-160(%rbp), %edx	# j, tmp2453
	movl	-132(%rbp), %ecx	# block_y, tmp2454
	addl	%ecx, %edx	# tmp2454, D.21259
	movslq	%edx, %rdx	# D.21259, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_1971, D.21260
	movswq	-170(%rbp), %rdx	# iterlist, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_1975, D.21264
	movq	(%rax), %rax	# *_1976, D.21265
	movl	-212(%rbp), %edx	# blocktype, tmp2455
	movslq	%edx, %rdx	# tmp2455, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_1980, D.21269
	movzwl	-190(%rbp), %edx	# mv_x, mv_x.1634
	movw	%dx, (%rax)	# mv_x.1634, *_1981
	.loc 1 2836 0
	movl	-164(%rbp), %eax	# i, tmp2456
	movl	-136(%rbp), %edx	# block_x, tmp2457
	addl	%edx, %eax	# tmp2457, D.21259
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-72(%rbp), %rax	# bipred_mv, tmp2458
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_1986, D.21263
	movl	-160(%rbp), %edx	# j, tmp2459
	movl	-132(%rbp), %ecx	# block_y, tmp2460
	addl	%ecx, %edx	# tmp2460, D.21259
	movslq	%edx, %rdx	# D.21259, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rax	# *_1991, D.21260
	movswq	-170(%rbp), %rdx	# iterlist, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21260
	movq	(%rax), %rax	# *_1995, D.21264
	movq	(%rax), %rax	# *_1996, D.21265
	movl	-212(%rbp), %edx	# blocktype, tmp2461
	movslq	%edx, %rdx	# tmp2461, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_2000, D.21269
	leaq	2(%rax), %rdx	#, D.21269
	movzwl	-188(%rbp), %eax	# mv_y, mv_y.1635
	movw	%ax, (%rdx)	# mv_y.1635, *_2002
	.loc 1 2837 0
	movl	-164(%rbp), %eax	# i, tmp2462
	movl	-136(%rbp), %edx	# block_x, tmp2463
	addl	%edx, %eax	# tmp2463, D.21259
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-72(%rbp), %rax	# bipred_mv, tmp2464
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_2007, D.21263
	movl	-160(%rbp), %edx	# j, tmp2465
	movl	-132(%rbp), %ecx	# block_y, tmp2466
	addl	%ecx, %edx	# tmp2466, D.21259
	movslq	%edx, %rdx	# D.21259, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rdx	# *_2012, D.21260
	cmpw	$0, -170(%rbp)	#, iterlist
	jne	.L835	#,
	.loc 1 2837 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1636
	jmp	.L836	#
.L835:
	.loc 1 2837 0 discriminator 2
	movl	$0, %eax	#, iftmp.1636
.L836:
	.loc 1 2837 0 discriminator 3
	addq	%rdx, %rax	# D.21260, D.21260
	movq	(%rax), %rax	# *_2016, D.21264
	movq	(%rax), %rax	# *_2017, D.21265
	movl	-212(%rbp), %edx	# blocktype, tmp2467
	movslq	%edx, %rdx	# tmp2467, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_2021, D.21269
	movzwl	-186(%rbp), %edx	# bimv_x, bimv_x.1637
	movw	%dx, (%rax)	# bimv_x.1637, *_2022
	.loc 1 2838 0 is_stmt 1 discriminator 3
	movl	-164(%rbp), %eax	# i, tmp2468
	movl	-136(%rbp), %edx	# block_x, tmp2469
	addl	%edx, %eax	# tmp2469, D.21259
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21261
	movq	-72(%rbp), %rax	# bipred_mv, tmp2470
	addq	%rdx, %rax	# D.21261, D.21262
	movq	(%rax), %rax	# *_2027, D.21263
	movl	-160(%rbp), %edx	# j, tmp2471
	movl	-132(%rbp), %ecx	# block_y, tmp2472
	addl	%ecx, %edx	# tmp2472, D.21259
	movslq	%edx, %rdx	# D.21259, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21263
	movq	(%rax), %rdx	# *_2032, D.21260
	cmpw	$0, -170(%rbp)	#, iterlist
	jne	.L837	#,
	.loc 1 2838 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1638
	jmp	.L838	#
.L837:
	.loc 1 2838 0 discriminator 2
	movl	$0, %eax	#, iftmp.1638
.L838:
	.loc 1 2838 0 discriminator 3
	addq	%rdx, %rax	# D.21260, D.21260
	movq	(%rax), %rax	# *_2036, D.21264
	movq	(%rax), %rax	# *_2037, D.21265
	movl	-212(%rbp), %edx	# blocktype, tmp2473
	movslq	%edx, %rdx	# tmp2473, D.21261
	salq	$3, %rdx	#, D.21261
	addq	%rdx, %rax	# D.21261, D.21265
	movq	(%rax), %rax	# *_2041, D.21269
	leaq	2(%rax), %rdx	#, D.21269
	movzwl	-184(%rbp), %eax	# bimv_y, bimv_y.1639
	movw	%ax, (%rdx)	# bimv_y.1639, *_2043
	.loc 1 2833 0 is_stmt 1 discriminator 3
	addl	$1, -160(%rbp)	#, j
.L834:
	.loc 1 2833 0 is_stmt 0 discriminator 1
	movl	-124(%rbp), %eax	# bsy, tmp2474
	sarl	$2, %eax	#, D.21259
	cmpl	-160(%rbp), %eax	# j, D.21259
	jg	.L839	#,
	.loc 1 2831 0 is_stmt 1
	addl	$1, -164(%rbp)	#, i
.L833:
	.loc 1 2831 0 is_stmt 0 discriminator 1
	movl	-128(%rbp), %eax	# bsx, tmp2475
	sarl	$2, %eax	#, D.21259
	cmpl	-164(%rbp), %eax	# i, D.21259
	jg	.L840	#,
.L818:
.LBE4:
	.loc 1 2846 0 is_stmt 1
	movq	$0, -48(%rbp)	#, tstruct2.time
	.loc 1 2847 0
	movw	$0, -40(%rbp)	#, tstruct2.millitm
	.loc 1 2848 0
	movw	$0, -38(%rbp)	#, tstruct2.timezone
	.loc 1 2849 0
	movw	$0, -36(%rbp)	#, tstruct2.dstflag
	.loc 1 2858 0
	movq	-48(%rbp), %rax	# tstruct2.time, D.21281
	imull	$1000, %eax, %edx	#, D.21280, D.21280
	movzwl	-40(%rbp), %eax	# tstruct2.millitm, D.21268
	movzwl	%ax, %eax	# D.21268, D.21280
	leal	(%rdx,%rax), %ecx	#, D.21280
	movq	-64(%rbp), %rax	# tstruct1.time, D.21281
	imull	$-1000, %eax, %edx	#, D.21280, D.21280
	movzwl	-56(%rbp), %eax	# tstruct1.millitm, D.21268
	movzwl	%ax, %eax	# D.21268, D.21280
	subl	%eax, %edx	# D.21280, D.21280
	movl	%edx, %eax	# D.21280, D.21280
	addl	%ecx, %eax	# D.21280, D.21280
	movl	%eax, -100(%rbp)	# D.21280, me_tmp_time
	.loc 1 2859 0
	movl	me_tot_time(%rip), %edx	# me_tot_time, me_tot_time.1640
	movl	-100(%rbp), %eax	# me_tmp_time, tmp2476
	addl	%edx, %eax	# me_tot_time.1640, me_tot_time.1641
	movl	%eax, me_tot_time(%rip)	# me_tot_time.1641, me_tot_time
	.loc 1 2860 0
	movl	me_time(%rip), %edx	# me_time, me_time.1642
	movl	-100(%rbp), %eax	# me_tmp_time, tmp2477
	addl	%edx, %eax	# me_time.1642, me_time.1643
	movl	%eax, me_time(%rip)	# me_time.1643, me_time
	.loc 1 2862 0
	movl	-156(%rbp), %eax	# min_mcost, D.21259
	.loc 1 2863 0
	addq	$296, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE19:
	.size	BlockMotionSearch, .-BlockMotionSearch
	.globl	BIDPartitionCost
	.type	BIDPartitionCost, @function
BIDPartitionCost:
.LFB20:
	.loc 1 2877 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$1408, %rsp	#,
	movl	%edi, -1380(%rbp)	# blocktype, blocktype
	movl	%esi, -1384(%rbp)	# block8x8, block8x8
	movl	%ecx, %eax	# bw_ref, tmp310
	movl	%r8d, -1396(%rbp)	# lambda_factor, lambda_factor
	movw	%dx, -1388(%rbp)	# tmp309, fw_ref
	movw	%ax, -1392(%rbp)	# tmp310, bw_ref
	.loc 1 2884 0
	movq	input(%rip), %rax	# input, input.1644
	movl	-1380(%rbp), %edx	# blocktype, tmp312
	movslq	%edx, %rdx	# tmp312, tmp311
	addq	$10, %rdx	#, tmp313
	movl	(%rax,%rdx,8), %eax	# input.1644_25->blc_size, D.21284
	movl	$8, %edx	#, tmp315
	cmpl	$8, %eax	#, D.21284
	cmovg	%edx, %eax	# D.21284,, tmp315, tmp314
	movl	%eax, -1340(%rbp)	# tmp314, bsx
	.loc 1 2885 0
	movq	input(%rip), %rax	# input, input.1645
	movl	-1380(%rbp), %edx	# blocktype, tmp317
	movslq	%edx, %rdx	# tmp317, tmp316
	movl	84(%rax,%rdx,8), %eax	# input.1645_29->blc_size, D.21284
	movl	$8, %edx	#, tmp319
	cmpl	$8, %eax	#, D.21284
	cmovg	%edx, %eax	# D.21284,, tmp319, tmp318
	movl	%eax, -1336(%rbp)	# tmp318, bsy
	.loc 1 2889 0
	movl	$0, -1352(%rbp)	#, mvd_bits
	.loc 1 2890 0
	movl	$4, %eax	#, tmp321
	cmpl	$4, -1380(%rbp)	#, blocktype
	cmovle	-1380(%rbp), %eax	# blocktype,, tmp320
	movl	%eax, -1332(%rbp)	# tmp320, parttype
	.loc 1 2891 0
	movq	input(%rip), %rax	# input, input.1646
	movl	-1332(%rbp), %edx	# parttype, tmp323
	movslq	%edx, %rdx	# tmp323, tmp322
	addq	$18, %rdx	#, tmp324
	movl	(%rax,%rdx,8), %eax	# input.1646_34->part_size, tmp325
	movl	%eax, -1328(%rbp)	# tmp325, step_h0
	.loc 1 2892 0
	movq	input(%rip), %rax	# input, input.1647
	movl	-1332(%rbp), %edx	# parttype, tmp327
	movslq	%edx, %rdx	# tmp327, tmp326
	movl	148(%rax,%rdx,8), %eax	# input.1647_36->part_size, tmp328
	movl	%eax, -1324(%rbp)	# tmp328, step_v0
	.loc 1 2893 0
	movq	input(%rip), %rax	# input, input.1648
	movl	-1380(%rbp), %edx	# blocktype, tmp330
	movslq	%edx, %rdx	# tmp330, tmp329
	addq	$18, %rdx	#, tmp331
	movl	(%rax,%rdx,8), %eax	# input.1648_38->part_size, tmp332
	movl	%eax, -1320(%rbp)	# tmp332, step_h
	.loc 1 2894 0
	movq	input(%rip), %rax	# input, input.1649
	movl	-1380(%rbp), %edx	# blocktype, tmp334
	movslq	%edx, %rdx	# tmp334, tmp333
	movl	148(%rax,%rdx,8), %eax	# input.1649_40->part_size, tmp335
	movl	%eax, -1316(%rbp)	# tmp335, step_v
	.loc 1 2897 0
	movq	img(%rip), %rax	# img, img.1650
	movq	71928(%rax), %rax	# img.1650_42->all_mv, tmp336
	movq	%rax, -1296(%rbp)	# tmp336, all_mv
	.loc 1 2898 0
	movq	img(%rip), %rax	# img, img.1651
	movq	71920(%rax), %rax	# img.1651_44->pred_mv, tmp337
	movq	%rax, -1288(%rbp)	# tmp337, p_mv
	.loc 1 2901 0
	movl	-1384(%rbp), %eax	# block8x8, tmp339
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp341
	movslq	%edx, %rdx	# tmp341, tmp340
	salq	$2, %rdx	#, tmp342
	addq	%rdx, %rax	# tmp342, tmp343
	movl	by0.6611(,%rax,4), %eax	# by0, tmp344
	movl	%eax, -1376(%rbp)	# tmp344, v
	jmp	.L843	#
.L846:
	.loc 1 2902 0
	movl	-1384(%rbp), %eax	# block8x8, tmp346
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp348
	movslq	%edx, %rdx	# tmp348, tmp347
	salq	$2, %rdx	#, tmp349
	addq	%rdx, %rax	# tmp349, tmp350
	movl	bx0.6610(,%rax,4), %eax	# bx0, tmp351
	movl	%eax, -1372(%rbp)	# tmp351, h
	jmp	.L844	#
.L845:
	.loc 1 2904 0 discriminator 2
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.1652
	movl	-1372(%rbp), %eax	# h, tmp352
	cltq
	leaq	0(,%rax,8), %rcx	#, D.21285
	movq	-1296(%rbp), %rax	# all_mv, tmp353
	addq	%rcx, %rax	# D.21285, D.21286
	movq	(%rax), %rax	# *_56, D.21287
	movl	-1376(%rbp), %ecx	# v, tmp354
	movslq	%ecx, %rcx	# tmp354, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rax	# D.21285, D.21287
	movq	(%rax), %rax	# *_60, D.21288
	movq	(%rax), %rax	# *_61, D.21289
	movswq	-1388(%rbp), %rcx	# fw_ref, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rax	# D.21285, D.21289
	movq	(%rax), %rax	# *_66, D.21290
	movl	-1380(%rbp), %ecx	# blocktype, tmp355
	movslq	%ecx, %rcx	# tmp355, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rax	# D.21285, D.21290
	movq	(%rax), %rax	# *_70, D.21291
	movzwl	(%rax), %eax	# *_71, D.21292
	movswl	%ax, %ecx	# D.21292, D.21284
	movl	-1372(%rbp), %eax	# h, tmp356
	cltq
	leaq	0(,%rax,8), %rsi	#, D.21285
	movq	-1288(%rbp), %rax	# p_mv, tmp357
	addq	%rsi, %rax	# D.21285, D.21286
	movq	(%rax), %rax	# *_76, D.21287
	movl	-1376(%rbp), %esi	# v, tmp358
	movslq	%esi, %rsi	# tmp358, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rax	# D.21285, D.21287
	movq	(%rax), %rax	# *_80, D.21288
	movq	(%rax), %rax	# *_81, D.21289
	movswq	-1388(%rbp), %rsi	# fw_ref, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rax	# D.21285, D.21289
	movq	(%rax), %rax	# *_85, D.21290
	movl	-1380(%rbp), %esi	# blocktype, tmp359
	movslq	%esi, %rsi	# tmp359, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rax	# D.21285, D.21290
	movq	(%rax), %rax	# *_89, D.21291
	movzwl	(%rax), %eax	# *_90, D.21292
	cwtl
	subl	%eax, %ecx	# D.21284, D.21284
	movl	%ecx, %eax	# D.21284, D.21284
	cltq
	salq	$2, %rax	#, D.21285
	addq	%rdx, %rax	# mvbits.1652, D.21293
	movl	(%rax), %eax	# *_96, D.21284
	addl	%eax, -1352(%rbp)	# D.21284, mvd_bits
	.loc 1 2905 0 discriminator 2
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.1653
	movl	-1372(%rbp), %eax	# h, tmp360
	cltq
	leaq	0(,%rax,8), %rcx	#, D.21285
	movq	-1296(%rbp), %rax	# all_mv, tmp361
	addq	%rcx, %rax	# D.21285, D.21286
	movq	(%rax), %rax	# *_102, D.21287
	movl	-1376(%rbp), %ecx	# v, tmp362
	movslq	%ecx, %rcx	# tmp362, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rax	# D.21285, D.21287
	movq	(%rax), %rax	# *_106, D.21288
	movq	(%rax), %rax	# *_107, D.21289
	movswq	-1388(%rbp), %rcx	# fw_ref, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rax	# D.21285, D.21289
	movq	(%rax), %rax	# *_111, D.21290
	movl	-1380(%rbp), %ecx	# blocktype, tmp363
	movslq	%ecx, %rcx	# tmp363, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rax	# D.21285, D.21290
	movq	(%rax), %rax	# *_115, D.21291
	addq	$2, %rax	#, D.21291
	movzwl	(%rax), %eax	# *_117, D.21292
	movswl	%ax, %ecx	# D.21292, D.21284
	movl	-1372(%rbp), %eax	# h, tmp364
	cltq
	leaq	0(,%rax,8), %rsi	#, D.21285
	movq	-1288(%rbp), %rax	# p_mv, tmp365
	addq	%rsi, %rax	# D.21285, D.21286
	movq	(%rax), %rax	# *_122, D.21287
	movl	-1376(%rbp), %esi	# v, tmp366
	movslq	%esi, %rsi	# tmp366, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rax	# D.21285, D.21287
	movq	(%rax), %rax	# *_126, D.21288
	movq	(%rax), %rax	# *_127, D.21289
	movswq	-1388(%rbp), %rsi	# fw_ref, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rax	# D.21285, D.21289
	movq	(%rax), %rax	# *_131, D.21290
	movl	-1380(%rbp), %esi	# blocktype, tmp367
	movslq	%esi, %rsi	# tmp367, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rax	# D.21285, D.21290
	movq	(%rax), %rax	# *_135, D.21291
	addq	$2, %rax	#, D.21291
	movzwl	(%rax), %eax	# *_137, D.21292
	cwtl
	subl	%eax, %ecx	# D.21284, D.21284
	movl	%ecx, %eax	# D.21284, D.21284
	cltq
	salq	$2, %rax	#, D.21285
	addq	%rdx, %rax	# mvbits.1653, D.21293
	movl	(%rax), %eax	# *_143, D.21284
	addl	%eax, -1352(%rbp)	# D.21284, mvd_bits
	.loc 1 2907 0 discriminator 2
	movq	mvbits(%rip), %rdx	# mvbits, mvbits.1654
	movl	-1372(%rbp), %eax	# h, tmp368
	cltq
	leaq	0(,%rax,8), %rcx	#, D.21285
	movq	-1296(%rbp), %rax	# all_mv, tmp369
	addq	%rcx, %rax	# D.21285, D.21286
	movq	(%rax), %rax	# *_149, D.21287
	movl	-1376(%rbp), %ecx	# v, tmp370
	movslq	%ecx, %rcx	# tmp370, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rax	# D.21285, D.21287
	movq	(%rax), %rax	# *_153, D.21288
	addq	$8, %rax	#, D.21288
	movq	(%rax), %rax	# *_155, D.21289
	movswq	-1392(%rbp), %rcx	# bw_ref, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rax	# D.21285, D.21289
	movq	(%rax), %rax	# *_160, D.21290
	movl	-1380(%rbp), %ecx	# blocktype, tmp371
	movslq	%ecx, %rcx	# tmp371, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rax	# D.21285, D.21290
	movq	(%rax), %rax	# *_164, D.21291
	movzwl	(%rax), %eax	# *_165, D.21292
	movswl	%ax, %ecx	# D.21292, D.21284
	movl	-1372(%rbp), %eax	# h, tmp372
	cltq
	leaq	0(,%rax,8), %rsi	#, D.21285
	movq	-1288(%rbp), %rax	# p_mv, tmp373
	addq	%rsi, %rax	# D.21285, D.21286
	movq	(%rax), %rax	# *_170, D.21287
	movl	-1376(%rbp), %esi	# v, tmp374
	movslq	%esi, %rsi	# tmp374, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rax	# D.21285, D.21287
	movq	(%rax), %rax	# *_174, D.21288
	addq	$8, %rax	#, D.21288
	movq	(%rax), %rax	# *_176, D.21289
	movswq	-1392(%rbp), %rsi	# bw_ref, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rax	# D.21285, D.21289
	movq	(%rax), %rax	# *_180, D.21290
	movl	-1380(%rbp), %esi	# blocktype, tmp375
	movslq	%esi, %rsi	# tmp375, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rax	# D.21285, D.21290
	movq	(%rax), %rax	# *_184, D.21291
	movzwl	(%rax), %eax	# *_185, D.21292
	cwtl
	subl	%eax, %ecx	# D.21284, D.21284
	movl	%ecx, %eax	# D.21284, D.21284
	cltq
	salq	$2, %rax	#, D.21285
	addq	%rdx, %rax	# mvbits.1654, D.21293
	movl	(%rax), %eax	# *_191, D.21284
	addl	%eax, -1352(%rbp)	# D.21284, mvd_bits
	.loc 1 2908 0 discriminator 2
	movq	mvbits(%rip), %rax	# mvbits, mvbits.1655
	movl	-1372(%rbp), %edx	# h, tmp376
	movslq	%edx, %rdx	# tmp376, D.21285
	leaq	0(,%rdx,8), %rcx	#, D.21285
	movq	-1296(%rbp), %rdx	# all_mv, tmp377
	addq	%rcx, %rdx	# D.21285, D.21286
	movq	(%rdx), %rdx	# *_197, D.21287
	movl	-1376(%rbp), %ecx	# v, tmp378
	movslq	%ecx, %rcx	# tmp378, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rdx	# D.21285, D.21287
	movq	(%rdx), %rdx	# *_201, D.21288
	addq	$8, %rdx	#, D.21288
	movq	(%rdx), %rdx	# *_203, D.21289
	movswq	-1392(%rbp), %rcx	# bw_ref, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rdx	# D.21285, D.21289
	movq	(%rdx), %rdx	# *_207, D.21290
	movl	-1380(%rbp), %ecx	# blocktype, tmp379
	movslq	%ecx, %rcx	# tmp379, D.21285
	salq	$3, %rcx	#, D.21285
	addq	%rcx, %rdx	# D.21285, D.21290
	movq	(%rdx), %rdx	# *_211, D.21291
	addq	$2, %rdx	#, D.21291
	movzwl	(%rdx), %edx	# *_213, D.21292
	movswl	%dx, %ecx	# D.21292, D.21284
	movl	-1372(%rbp), %edx	# h, tmp380
	movslq	%edx, %rdx	# tmp380, D.21285
	leaq	0(,%rdx,8), %rsi	#, D.21285
	movq	-1288(%rbp), %rdx	# p_mv, tmp381
	addq	%rsi, %rdx	# D.21285, D.21286
	movq	(%rdx), %rdx	# *_218, D.21287
	movl	-1376(%rbp), %esi	# v, tmp382
	movslq	%esi, %rsi	# tmp382, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rdx	# D.21285, D.21287
	movq	(%rdx), %rdx	# *_222, D.21288
	addq	$8, %rdx	#, D.21288
	movq	(%rdx), %rdx	# *_224, D.21289
	movswq	-1392(%rbp), %rsi	# bw_ref, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rdx	# D.21285, D.21289
	movq	(%rdx), %rdx	# *_228, D.21290
	movl	-1380(%rbp), %esi	# blocktype, tmp383
	movslq	%esi, %rsi	# tmp383, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rdx	# D.21285, D.21290
	movq	(%rdx), %rdx	# *_232, D.21291
	addq	$2, %rdx	#, D.21291
	movzwl	(%rdx), %edx	# *_234, D.21292
	movswl	%dx, %edx	# D.21292, D.21284
	subl	%edx, %ecx	# D.21284, D.21284
	movl	%ecx, %edx	# D.21284, D.21284
	movslq	%edx, %rdx	# D.21284, D.21285
	salq	$2, %rdx	#, D.21285
	addq	%rdx, %rax	# D.21285, D.21293
	movl	(%rax), %eax	# *_240, D.21284
	addl	%eax, -1352(%rbp)	# D.21284, mvd_bits
	.loc 1 2902 0 discriminator 2
	movl	-1320(%rbp), %eax	# step_h, tmp384
	addl	%eax, -1372(%rbp)	# tmp384, h
.L844:
	.loc 1 2902 0 is_stmt 0 discriminator 1
	movl	-1384(%rbp), %eax	# block8x8, tmp386
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp388
	movslq	%edx, %rdx	# tmp388, tmp387
	salq	$2, %rdx	#, tmp389
	addq	%rdx, %rax	# tmp389, tmp390
	movl	bx0.6610(,%rax,4), %edx	# bx0, D.21284
	movl	-1328(%rbp), %eax	# step_h0, tmp391
	addl	%edx, %eax	# D.21284, D.21284
	cmpl	-1372(%rbp), %eax	# h, D.21284
	jg	.L845	#,
	.loc 1 2901 0 is_stmt 1
	movl	-1316(%rbp), %eax	# step_v, tmp392
	addl	%eax, -1376(%rbp)	# tmp392, v
.L843:
	.loc 1 2901 0 is_stmt 0 discriminator 1
	movl	-1384(%rbp), %eax	# block8x8, tmp394
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp396
	movslq	%edx, %rdx	# tmp396, tmp395
	salq	$2, %rdx	#, tmp397
	addq	%rdx, %rax	# tmp397, tmp398
	movl	by0.6611(,%rax,4), %edx	# by0, D.21284
	movl	-1324(%rbp), %eax	# step_v0, tmp399
	addl	%edx, %eax	# D.21284, D.21284
	cmpl	-1376(%rbp), %eax	# v, D.21284
	jg	.L846	#,
	.loc 1 2911 0 is_stmt 1
	movl	-1396(%rbp), %eax	# lambda_factor, tmp400
	imull	-1352(%rbp), %eax	# mvd_bits, D.21284
	sarl	$16, %eax	#, tmp401
	movl	%eax, -1368(%rbp)	# tmp401, mcost
	.loc 1 2914 0
	movl	$0, -1344(%rbp)	#, byy
	movl	-1384(%rbp), %eax	# block8x8, tmp403
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp405
	movslq	%edx, %rdx	# tmp405, tmp404
	salq	$2, %rdx	#, tmp406
	addq	%rdx, %rax	# tmp406, tmp407
	movl	by0.6611(,%rax,4), %eax	# by0, tmp408
	movl	%eax, -1376(%rbp)	# tmp408, v
	jmp	.L847	#
.L856:
	.loc 1 2916 0
	movq	img(%rip), %rax	# img, img.1656
	movl	172(%rax), %edx	# img.1656_252->opix_y, D.21284
	movl	-1376(%rbp), %eax	# v, tmp412
	sall	$2, %eax	#, tmp411
	movl	%eax, -1312(%rbp)	# tmp411, block_y
	movl	-1312(%rbp), %eax	# block_y, tmp416
	addl	%edx, %eax	# D.21284, tmp415
	movl	%eax, -1308(%rbp)	# tmp415, pic_pix_y
	.loc 1 2918 0
	movl	$0, -1348(%rbp)	#, bxx
	movl	-1384(%rbp), %eax	# block8x8, tmp418
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp420
	movslq	%edx, %rdx	# tmp420, tmp419
	salq	$2, %rdx	#, tmp421
	addq	%rdx, %rax	# tmp421, tmp422
	movl	bx0.6610(,%rax,4), %eax	# bx0, tmp423
	movl	%eax, -1372(%rbp)	# tmp423, h
	jmp	.L848	#
.L855:
	.loc 1 2920 0
	movq	img(%rip), %rax	# img, img.1657
	movl	168(%rax), %edx	# img.1657_260->opix_x, D.21284
	movl	-1372(%rbp), %eax	# h, tmp427
	sall	$2, %eax	#, tmp426
	movl	%eax, -1304(%rbp)	# tmp426, block_x
	movl	-1304(%rbp), %eax	# block_x, tmp431
	addl	%edx, %eax	# D.21284, tmp430
	movl	%eax, -1300(%rbp)	# tmp430, pic_pix_x
	.loc 1 2922 0
	movswl	-1392(%rbp), %ecx	# bw_ref, D.21284
	movswl	-1388(%rbp), %r8d	# fw_ref, D.21284
	movl	-1380(%rbp), %edi	# blocktype, tmp432
	movl	-1380(%rbp), %edx	# blocktype, tmp433
	movl	-1312(%rbp), %esi	# block_y, tmp434
	movl	-1304(%rbp), %eax	# block_x, tmp435
	movl	%ecx, (%rsp)	# D.21284,
	movl	%r8d, %r9d	# D.21284,
	movl	%edi, %r8d	# tmp432,
	movl	%edx, %ecx	# tmp433,
	movl	$2, %edx	#,
	movl	%eax, %edi	# tmp435,
	call	LumaPrediction4x4	#
	.loc 1 2924 0
	movl	$0, -1360(%rbp)	#, j
	movl	-1360(%rbp), %eax	# j, tmp436
	movl	%eax, -1356(%rbp)	# tmp436, k
	jmp	.L849	#
.L852:
	.loc 1 2925 0
	movl	$0, -1364(%rbp)	#, i
	jmp	.L850	#
.L851:
	.loc 1 2927 0 discriminator 2
	movl	-1360(%rbp), %eax	# j, tmp437
	movl	-1344(%rbp), %edx	# byy, tmp438
	addl	%edx, %eax	# tmp438, D.21284
	movl	-1364(%rbp), %edx	# i, tmp439
	movl	-1348(%rbp), %ecx	# bxx, tmp440
	addl	%ecx, %edx	# tmp440, D.21284
	.loc 1 2928 0 discriminator 2
	movq	imgY_org(%rip), %rcx	# imgY_org, imgY_org.1658
	movl	-1360(%rbp), %esi	# j, tmp441
	movl	-1308(%rbp), %edi	# pic_pix_y, tmp442
	addl	%edi, %esi	# tmp442, D.21284
	movslq	%esi, %rsi	# D.21284, D.21285
	salq	$3, %rsi	#, D.21285
	addq	%rsi, %rcx	# D.21285, D.21294
	movq	(%rcx), %rcx	# *_275, D.21295
	movl	-1364(%rbp), %esi	# i, tmp443
	movl	-1300(%rbp), %edi	# pic_pix_x, tmp444
	addl	%edi, %esi	# tmp444, D.21284
	movslq	%esi, %rsi	# D.21284, D.21285
	addq	%rsi, %rsi	# D.21285
	addq	%rsi, %rcx	# D.21285, D.21295
	movzwl	(%rcx), %ecx	# *_280, D.21296
	movzwl	%cx, %esi	# D.21296, D.21284
	movq	img(%rip), %rcx	# img, img.1659
	movl	-1304(%rbp), %edi	# block_x, tmp445
	movl	-1364(%rbp), %r8d	# i, tmp446
	leal	(%r8,%rdi), %r9d	#, D.21284
	movl	-1312(%rbp), %edi	# block_y, tmp447
	movl	-1360(%rbp), %r8d	# j, tmp448
	addl	%r8d, %edi	# tmp448, D.21284
	movslq	%edi, %rdi	# D.21284, tmp449
	movslq	%r9d, %r8	# D.21284, tmp450
	salq	$4, %r8	#, tmp451
	addq	%r8, %rdi	# tmp451, tmp452
	addq	$6296, %rdi	#, tmp453
	movzwl	8(%rcx,%rdi,2), %ecx	# img.1659_283->mpr, D.21296
	movzwl	%cx, %ecx	# D.21296, D.21284
	subl	%ecx, %esi	# D.21284, D.21284
	.loc 1 2927 0 discriminator 2
	movslq	%edx, %rcx	# D.21284, tmp454
	movslq	%eax, %rdi	# D.21284, tmp455
	salq	$4, %rdi	#, tmp456
	addq	%rdi, %rcx	# tmp456, tmp457
	movl	%esi, -1024(%rbp,%rcx,4)	# D.21284, curr_blk
	movslq	%edx, %rdx	# D.21284, tmp458
	cltq
	salq	$4, %rax	#, tmp460
	addq	%rdx, %rax	# tmp458, tmp461
	movl	-1024(%rbp,%rax,4), %edx	# curr_blk, D.21284
	movl	-1356(%rbp), %eax	# k, tmp463
	cltq
	movl	%edx, -1280(%rbp,%rax,4)	# D.21284, diff
	.loc 1 2925 0 discriminator 2
	addl	$1, -1364(%rbp)	#, i
	addl	$1, -1356(%rbp)	#, k
.L850:
	.loc 1 2925 0 is_stmt 0 discriminator 1
	cmpl	$3, -1364(%rbp)	#, i
	jle	.L851	#,
	.loc 1 2924 0 is_stmt 1
	addl	$1, -1360(%rbp)	#, j
.L849:
	.loc 1 2924 0 is_stmt 0 discriminator 1
	cmpl	$3, -1360(%rbp)	#, j
	jle	.L852	#,
	.loc 1 2930 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1660
	movl	3220(%rax), %eax	# input.1660_293->AllowTransform8x8, D.21284
	testl	%eax, %eax	# D.21284
	je	.L853	#,
	.loc 1 2930 0 is_stmt 0 discriminator 1
	cmpl	$4, -1380(%rbp)	#, blocktype
	jle	.L854	#,
.L853:
	.loc 1 2931 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1661
	movl	24(%rax), %edx	# input.1661_295->hadamard, D.21284
	leaq	-1280(%rbp), %rax	#, tmp464
	movl	%edx, %esi	# D.21284,
	movq	%rax, %rdi	# tmp464,
	call	SATD	#
	addl	%eax, -1368(%rbp)	# D.21284, mcost
.L854:
	.loc 1 2918 0
	addl	$4, -1348(%rbp)	#, bxx
	addl	$1, -1372(%rbp)	#, h
.L848:
	.loc 1 2918 0 is_stmt 0 discriminator 1
	movl	-1384(%rbp), %eax	# block8x8, tmp466
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp468
	movslq	%edx, %rdx	# tmp468, tmp467
	salq	$2, %rdx	#, tmp469
	addq	%rdx, %rax	# tmp469, tmp470
	movl	bx0.6610(,%rax,4), %edx	# bx0, D.21284
	movl	-1328(%rbp), %eax	# step_h0, tmp471
	addl	%edx, %eax	# D.21284, D.21284
	cmpl	-1372(%rbp), %eax	# h, D.21284
	jg	.L855	#,
	.loc 1 2914 0 is_stmt 1
	addl	$4, -1344(%rbp)	#, byy
	addl	$1, -1376(%rbp)	#, v
.L847:
	.loc 1 2914 0 is_stmt 0 discriminator 1
	movl	-1384(%rbp), %eax	# block8x8, tmp473
	cltq
	movl	-1332(%rbp), %edx	# parttype, tmp475
	movslq	%edx, %rdx	# tmp475, tmp474
	salq	$2, %rdx	#, tmp476
	addq	%rdx, %rax	# tmp476, tmp477
	movl	by0.6611(,%rax,4), %edx	# by0, D.21284
	movl	-1324(%rbp), %eax	# step_v0, tmp478
	addl	%edx, %eax	# D.21284, D.21284
	cmpl	-1376(%rbp), %eax	# v, D.21284
	jg	.L856	#,
	.loc 1 2935 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1662
	movl	3220(%rax), %eax	# input.1662_303->AllowTransform8x8, D.21284
	testl	%eax, %eax	# D.21284
	je	.L857	#,
	.loc 1 2935 0 is_stmt 0 discriminator 1
	cmpl	$4, -1380(%rbp)	#, blocktype
	jg	.L857	#,
	.loc 1 2937 0 is_stmt 1
	movl	$0, -1344(%rbp)	#, byy
	jmp	.L858	#
.L865:
	.loc 1 2938 0
	movl	$0, -1348(%rbp)	#, bxx
	jmp	.L859	#
.L864:
	.loc 1 2940 0
	movl	$0, -1356(%rbp)	#, k
	.loc 1 2941 0
	movl	$0, -1364(%rbp)	#, i
	jmp	.L860	#
.L863:
	.loc 1 2942 0
	movl	$0, -1360(%rbp)	#, j
	jmp	.L861	#
.L862:
	.loc 1 2943 0 discriminator 2
	movl	-1356(%rbp), %eax	# k, k.1663
	leal	1(%rax), %edx	#, tmp479
	movl	%edx, -1356(%rbp)	# tmp479, k
	movl	-1344(%rbp), %edx	# byy, tmp480
	movl	-1364(%rbp), %ecx	# i, tmp481
	leal	(%rcx,%rdx), %esi	#, D.21284
	movl	-1348(%rbp), %edx	# bxx, tmp482
	movl	-1360(%rbp), %ecx	# j, tmp483
	addl	%ecx, %edx	# tmp483, D.21284
	movslq	%edx, %rdx	# D.21284, tmp484
	movslq	%esi, %rcx	# D.21284, tmp485
	salq	$4, %rcx	#, tmp486
	addq	%rcx, %rdx	# tmp486, tmp487
	movl	-1024(%rbp,%rdx,4), %edx	# curr_blk, D.21284
	cltq
	movl	%edx, -1280(%rbp,%rax,4)	# D.21284, diff
	.loc 1 2942 0 discriminator 2
	addl	$1, -1360(%rbp)	#, j
.L861:
	.loc 1 2942 0 is_stmt 0 discriminator 1
	cmpl	$7, -1360(%rbp)	#, j
	jle	.L862	#,
	.loc 1 2941 0 is_stmt 1
	addl	$1, -1364(%rbp)	#, i
.L860:
	.loc 1 2941 0 is_stmt 0 discriminator 1
	cmpl	$7, -1364(%rbp)	#, i
	jle	.L863	#,
	.loc 1 2945 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1664
	movl	24(%rax), %edx	# input.1664_321->hadamard, D.21284
	leaq	-1280(%rbp), %rax	#, tmp489
	movl	%edx, %esi	# D.21284,
	movq	%rax, %rdi	# tmp489,
	call	SATD8X8	#
	addl	%eax, -1368(%rbp)	# D.21284, mcost
	.loc 1 2938 0
	movl	-1340(%rbp), %eax	# bsx, tmp490
	addl	%eax, -1348(%rbp)	# tmp490, bxx
.L859:
	.loc 1 2938 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1665
	movl	-1332(%rbp), %edx	# parttype, tmp492
	movslq	%edx, %rdx	# tmp492, tmp491
	addq	$10, %rdx	#, tmp493
	movl	(%rax,%rdx,8), %eax	# input.1665_309->blc_size, D.21284
	cmpl	-1348(%rbp), %eax	# bxx, D.21284
	jg	.L864	#,
	.loc 1 2937 0 is_stmt 1
	movl	-1336(%rbp), %eax	# bsy, tmp494
	addl	%eax, -1344(%rbp)	# tmp494, byy
.L858:
	.loc 1 2937 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1666
	movl	-1332(%rbp), %edx	# parttype, tmp496
	movslq	%edx, %rdx	# tmp496, tmp495
	movl	84(%rax,%rdx,8), %eax	# input.1666_306->blc_size, D.21284
	cmpl	-1344(%rbp), %eax	# byy, D.21284
	jg	.L865	#,
.L857:
	.loc 1 2948 0 is_stmt 1
	movl	-1368(%rbp), %eax	# mcost, D.21284
	.loc 1 2949 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE20:
	.size	BIDPartitionCost, .-BIDPartitionCost
	.globl	GetSkipCostMB
	.type	GetSkipCostMB, @function
GetSkipCostMB:
.LFB21:
	.loc 1 2958 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$640, %rsp	#,
	movsd	%xmm0, -632(%rbp)	# lambda, lambda
	.loc 1 2961 0
	movl	$0, -600(%rbp)	#, cost
	.loc 1 2967 0
	movl	$0, -596(%rbp)	#, block
	jmp	.L868	#
.L884:
	.loc 1 2969 0
	movl	-596(%rbp), %eax	# block, tmp107
	movl	%eax, %edx	# tmp107, tmp108
	shrl	$31, %edx	#, tmp108
	addl	%edx, %eax	# tmp108, tmp109
	sarl	%eax	# tmp110
	sall	$3, %eax	#, tmp111
	movl	%eax, -592(%rbp)	# tmp111, mb_y
	.loc 1 2970 0
	movl	-596(%rbp), %eax	# block, tmp112
	cltd
	shrl	$31, %edx	#, tmp114
	addl	%edx, %eax	# tmp114, tmp115
	andl	$1, %eax	#, tmp116
	subl	%edx, %eax	# tmp114, tmp117
	sall	$3, %eax	#, tmp118
	movl	%eax, -588(%rbp)	# tmp118, mb_x
	.loc 1 2971 0
	movl	-592(%rbp), %eax	# mb_y, tmp119
	movl	%eax, -620(%rbp)	# tmp119, block_y
	jmp	.L869	#
.L878:
	.loc 1 2973 0
	movq	img(%rip), %rax	# img, img.1667
	movl	172(%rax), %edx	# img.1667_25->opix_y, D.21297
	movl	-620(%rbp), %eax	# block_y, tmp123
	addl	%edx, %eax	# D.21297, tmp122
	movl	%eax, -584(%rbp)	# tmp122, pic_pix_y
	.loc 1 2975 0
	movl	-588(%rbp), %eax	# mb_x, tmp124
	movl	%eax, -616(%rbp)	# tmp124, block_x
	jmp	.L870	#
.L877:
	.loc 1 2977 0
	movq	img(%rip), %rax	# img, img.1668
	movl	168(%rax), %edx	# img.1668_30->opix_x, D.21297
	movl	-616(%rbp), %eax	# block_x, tmp128
	addl	%edx, %eax	# D.21297, tmp127
	movl	%eax, -580(%rbp)	# tmp127, pic_pix_x
	.loc 1 2980 0
	movl	-620(%rbp), %esi	# block_y, tmp129
	movl	-616(%rbp), %eax	# block_x, tmp130
	movl	$0, (%rsp)	#,
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movl	%eax, %edi	# tmp130,
	call	LumaPrediction4x4	#
	.loc 1 2983 0
	movl	$0, -608(%rbp)	#, j
	movl	-608(%rbp), %eax	# j, tmp131
	movl	%eax, -604(%rbp)	# tmp131, k
	jmp	.L871	#
.L874:
	.loc 1 2984 0
	movl	$0, -612(%rbp)	#, i
	jmp	.L872	#
.L873:
	.loc 1 2986 0 discriminator 2
	movl	-592(%rbp), %eax	# mb_y, tmp132
	movl	-620(%rbp), %edx	# block_y, tmp133
	subl	%eax, %edx	# tmp132, D.21297
	movl	-608(%rbp), %eax	# j, tmp134
	addl	%edx, %eax	# D.21297, D.21297
	movl	-588(%rbp), %edx	# mb_x, tmp135
	movl	-616(%rbp), %ecx	# block_x, tmp136
	subl	%edx, %ecx	# tmp135, D.21297
	movl	-612(%rbp), %edx	# i, tmp137
	addl	%ecx, %edx	# D.21297, D.21297
	movq	imgY_org(%rip), %rcx	# imgY_org, imgY_org.1669
	movl	-608(%rbp), %esi	# j, tmp138
	movl	-584(%rbp), %edi	# pic_pix_y, tmp139
	addl	%edi, %esi	# tmp139, D.21297
	movslq	%esi, %rsi	# D.21297, D.21298
	salq	$3, %rsi	#, D.21298
	addq	%rsi, %rcx	# D.21298, D.21299
	movq	(%rcx), %rcx	# *_44, D.21300
	movl	-612(%rbp), %esi	# i, tmp140
	movl	-580(%rbp), %edi	# pic_pix_x, tmp141
	addl	%edi, %esi	# tmp141, D.21297
	movslq	%esi, %rsi	# D.21297, D.21298
	addq	%rsi, %rsi	# D.21298
	addq	%rsi, %rcx	# D.21298, D.21300
	movzwl	(%rcx), %ecx	# *_49, D.21301
	movzwl	%cx, %esi	# D.21301, D.21297
	movq	img(%rip), %rcx	# img, img.1670
	movl	-616(%rbp), %edi	# block_x, tmp142
	movl	-612(%rbp), %r8d	# i, tmp143
	leal	(%r8,%rdi), %r9d	#, D.21297
	movl	-620(%rbp), %edi	# block_y, tmp144
	movl	-608(%rbp), %r8d	# j, tmp145
	addl	%r8d, %edi	# tmp145, D.21297
	movslq	%edi, %rdi	# D.21297, tmp146
	movslq	%r9d, %r8	# D.21297, tmp147
	salq	$4, %r8	#, tmp148
	addq	%r8, %rdi	# tmp148, tmp149
	addq	$6296, %rdi	#, tmp150
	movzwl	8(%rcx,%rdi,2), %ecx	# img.1670_52->mpr, D.21301
	movzwl	%cx, %ecx	# D.21301, D.21297
	subl	%ecx, %esi	# D.21297, D.21297
	movslq	%edx, %rcx	# D.21297, tmp151
	movslq	%eax, %rdi	# D.21297, tmp152
	salq	$3, %rdi	#, tmp153
	addq	%rdi, %rcx	# tmp153, tmp154
	movl	%esi, -512(%rbp,%rcx,4)	# D.21297, curr_diff
	movslq	%edx, %rdx	# D.21297, tmp155
	cltq
	salq	$3, %rax	#, tmp157
	addq	%rdx, %rax	# tmp155, tmp158
	movl	-512(%rbp,%rax,4), %edx	# curr_diff, D.21297
	movl	-604(%rbp), %eax	# k, tmp160
	cltq
	movl	%edx, -576(%rbp,%rax,4)	# D.21297, diff
	.loc 1 2984 0 discriminator 2
	addl	$1, -612(%rbp)	#, i
	addl	$1, -604(%rbp)	#, k
.L872:
	.loc 1 2984 0 is_stmt 0 discriminator 1
	cmpl	$3, -612(%rbp)	#, i
	jle	.L873	#,
	.loc 1 2983 0 is_stmt 1
	addl	$1, -608(%rbp)	#, j
.L871:
	.loc 1 2983 0 is_stmt 0 discriminator 1
	cmpl	$3, -608(%rbp)	#, j
	jle	.L874	#,
	.loc 1 2989 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1671
	movl	2464(%rax), %eax	# input.1671_62->rdopt, D.21297
	testl	%eax, %eax	# D.21297
	jne	.L875	#,
	.loc 1 2989 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1672
	movl	3220(%rax), %eax	# input.1672_64->AllowTransform8x8, D.21297
	testl	%eax, %eax	# D.21297
	jne	.L876	#,
.L875:
	.loc 1 2990 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1673
	movl	24(%rax), %edx	# input.1673_66->hadamard, D.21297
	leaq	-576(%rbp), %rax	#, tmp161
	movl	%edx, %esi	# D.21297,
	movq	%rax, %rdi	# tmp161,
	call	SATD	#
	addl	%eax, -600(%rbp)	# D.21297, cost
.L876:
	.loc 1 2975 0
	addl	$4, -616(%rbp)	#, block_x
.L870:
	.loc 1 2975 0 is_stmt 0 discriminator 1
	movl	-588(%rbp), %eax	# mb_x, tmp162
	addl	$8, %eax	#, D.21297
	cmpl	-616(%rbp), %eax	# block_x, D.21297
	jg	.L877	#,
	.loc 1 2971 0 is_stmt 1
	addl	$4, -620(%rbp)	#, block_y
.L869:
	.loc 1 2971 0 is_stmt 0 discriminator 1
	movl	-592(%rbp), %eax	# mb_y, tmp163
	addl	$8, %eax	#, D.21297
	cmpl	-620(%rbp), %eax	# block_y, D.21297
	jg	.L878	#,
	.loc 1 2994 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1674
	movl	2464(%rax), %eax	# input.1674_72->rdopt, D.21297
	testl	%eax, %eax	# D.21297
	jne	.L879	#,
	.loc 1 2994 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1675
	movl	3220(%rax), %eax	# input.1675_74->AllowTransform8x8, D.21297
	testl	%eax, %eax	# D.21297
	je	.L879	#,
	.loc 1 2996 0 is_stmt 1
	movl	$0, -604(%rbp)	#, k
	.loc 1 2997 0
	movl	$0, -608(%rbp)	#, j
	jmp	.L880	#
.L883:
	.loc 1 2998 0
	movl	$0, -612(%rbp)	#, i
	jmp	.L881	#
.L882:
	.loc 1 2999 0 discriminator 2
	movl	-612(%rbp), %eax	# i, tmp165
	cltq
	movl	-608(%rbp), %edx	# j, tmp167
	movslq	%edx, %rdx	# tmp167, tmp166
	salq	$3, %rdx	#, tmp168
	addq	%rdx, %rax	# tmp168, tmp169
	movl	-512(%rbp,%rax,4), %edx	# curr_diff, D.21297
	movl	-604(%rbp), %eax	# k, tmp171
	cltq
	movl	%edx, -256(%rbp,%rax,4)	# D.21297, diff8x8
	.loc 1 2998 0 discriminator 2
	addl	$1, -612(%rbp)	#, i
	addl	$1, -604(%rbp)	#, k
.L881:
	.loc 1 2998 0 is_stmt 0 discriminator 1
	cmpl	$7, -612(%rbp)	#, i
	jle	.L882	#,
	.loc 1 2997 0 is_stmt 1
	addl	$1, -608(%rbp)	#, j
.L880:
	.loc 1 2997 0 is_stmt 0 discriminator 1
	cmpl	$7, -608(%rbp)	#, j
	jle	.L883	#,
	.loc 1 3001 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1676
	movl	24(%rax), %edx	# input.1676_83->hadamard, D.21297
	leaq	-256(%rbp), %rax	#, tmp172
	movl	%edx, %esi	# D.21297,
	movq	%rax, %rdi	# tmp172,
	call	SATD8X8	#
	addl	%eax, -600(%rbp)	# D.21297, cost
.L879:
	.loc 1 2967 0
	addl	$1, -596(%rbp)	#, block
.L868:
	.loc 1 2967 0 is_stmt 0 discriminator 1
	cmpl	$3, -596(%rbp)	#, block
	jle	.L884	#,
	.loc 1 3005 0 is_stmt 1
	movl	-600(%rbp), %eax	# cost, D.21297
	.loc 1 3007 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE21:
	.size	GetSkipCostMB, .-GetSkipCostMB
	.globl	FindSkipModeMotionVector
	.type	FindSkipModeMotionVector, @function
FindSkipModeMotionVector:
.LFB22:
	.loc 1 3016 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$160, %rsp	#,
	.loc 1 3018 0
	movq	img(%rip), %rax	# img, img.1677
	movq	71928(%rax), %rax	# img.1677_15->all_mv, tmp244
	movq	%rax, -80(%rbp)	# tmp244, all_mv
	.loc 1 3025 0
	movl	$0, -104(%rbp)	#, a_mv_y
	.loc 1 3026 0
	movl	$0, -100(%rbp)	#, a_ref_idx
	.loc 1 3027 0
	movl	$0, -96(%rbp)	#, b_mv_y
	.loc 1 3028 0
	movl	$0, -92(%rbp)	#, b_ref_idx
	.loc 1 3030 0
	movq	img(%rip), %rax	# img, img.1678
	movq	14168(%rax), %rdx	# img.1678_21->mb_data, D.21302
	movq	img(%rip), %rax	# img, img.1679
	movl	12(%rax), %eax	# img.1679_23->current_mb_nr, D.21303
	cltq
	imulq	$632, %rax, %rax	#, D.21304, D.21304
	addq	%rdx, %rax	# D.21302, tmp245
	movq	%rax, -72(%rbp)	# tmp245, currMB
	.loc 1 3032 0
	movq	img(%rip), %rax	# img, img.1680
	movl	12(%rax), %eax	# img.1680_28->current_mb_nr, D.21303
	leaq	-64(%rbp), %rdx	#, tmp246
	movq	%rdx, %r9	# tmp246,
	movl	$0, %r8d	#,
	movl	$-1, %ecx	#,
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movl	%eax, %edi	# D.21303,
	call	getLuma4x4Neighbour	#
	.loc 1 3033 0
	movq	img(%rip), %rax	# img, img.1681
	movl	12(%rax), %eax	# img.1681_30->current_mb_nr, D.21303
	leaq	-32(%rbp), %rdx	#, tmp247
	movq	%rdx, %r9	# tmp247,
	movl	$-1, %r8d	#,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movl	%eax, %edi	# D.21303,
	call	getLuma4x4Neighbour	#
	.loc 1 3035 0
	movl	-64(%rbp), %eax	# mb_a.available, D.21303
	testl	%eax, %eax	# D.21303
	je	.L887	#,
	.loc 1 3037 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1682
	movq	6504(%rax), %rax	# enc_picture.1682_33->mv, D.21305
	movq	(%rax), %rax	# *_34, D.21306
	movl	-48(%rbp), %edx	# mb_a.pos_x, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21306
	movq	(%rax), %rax	# *_39, D.21307
	movl	-44(%rbp), %edx	# mb_a.pos_y, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21307
	movq	(%rax), %rax	# *_44, D.21308
	addq	$2, %rax	#, D.21308
	movzwl	(%rax), %eax	# *_46, D.21309
	cwtl
	movl	%eax, -104(%rbp)	# tmp248, a_mv_y
	.loc 1 3038 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1683
	movq	6480(%rax), %rax	# enc_picture.1683_49->ref_idx, D.21306
	movq	(%rax), %rax	# *_50, D.21307
	movl	-48(%rbp), %edx	# mb_a.pos_x, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21307
	movq	(%rax), %rax	# *_55, D.21308
	movl	-44(%rbp), %edx	# mb_a.pos_y, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	addq	%rdx, %rdx	# D.21304
	addq	%rdx, %rax	# D.21304, D.21308
	movzwl	(%rax), %eax	# *_60, D.21309
	cwtl
	movl	%eax, -100(%rbp)	# tmp249, a_ref_idx
	.loc 1 3040 0
	movq	-72(%rbp), %rax	# currMB, tmp250
	movl	532(%rax), %eax	# currMB_27->mb_field, D.21303
	testl	%eax, %eax	# D.21303
	je	.L888	#,
	.loc 1 3040 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1684
	movq	14168(%rax), %rdx	# img.1684_64->mb_data, D.21302
	movl	-60(%rbp), %eax	# mb_a.mb_addr, D.21303
	cltq
	imulq	$632, %rax, %rax	#, D.21304, D.21304
	addq	%rdx, %rax	# D.21302, D.21302
	movl	532(%rax), %eax	# _69->mb_field, D.21303
	testl	%eax, %eax	# D.21303
	jne	.L888	#,
	.loc 1 3042 0 is_stmt 1
	movl	-104(%rbp), %eax	# a_mv_y, tmp252
	movl	%eax, %edx	# tmp252, tmp253
	shrl	$31, %edx	#, tmp253
	addl	%edx, %eax	# tmp253, tmp254
	sarl	%eax	# tmp255
	movl	%eax, -104(%rbp)	# tmp255, a_mv_y
	.loc 1 3043 0
	sall	-100(%rbp)	# a_ref_idx
.L888:
	.loc 1 3045 0
	movq	-72(%rbp), %rax	# currMB, tmp256
	movl	532(%rax), %eax	# currMB_27->mb_field, D.21303
	testl	%eax, %eax	# D.21303
	jne	.L887	#,
	.loc 1 3045 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1685
	movq	14168(%rax), %rdx	# img.1685_74->mb_data, D.21302
	movl	-60(%rbp), %eax	# mb_a.mb_addr, D.21303
	cltq
	imulq	$632, %rax, %rax	#, D.21304, D.21304
	addq	%rdx, %rax	# D.21302, D.21302
	movl	532(%rax), %eax	# _79->mb_field, D.21303
	testl	%eax, %eax	# D.21303
	je	.L887	#,
	.loc 1 3047 0 is_stmt 1
	sall	-104(%rbp)	# a_mv_y
	.loc 1 3048 0
	sarl	-100(%rbp)	# a_ref_idx
.L887:
	.loc 1 3052 0
	movl	-32(%rbp), %eax	# mb_b.available, D.21303
	testl	%eax, %eax	# D.21303
	je	.L889	#,
	.loc 1 3054 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1686
	movq	6504(%rax), %rax	# enc_picture.1686_84->mv, D.21305
	movq	(%rax), %rax	# *_85, D.21306
	movl	-16(%rbp), %edx	# mb_b.pos_x, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21306
	movq	(%rax), %rax	# *_90, D.21307
	movl	-12(%rbp), %edx	# mb_b.pos_y, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21307
	movq	(%rax), %rax	# *_95, D.21308
	addq	$2, %rax	#, D.21308
	movzwl	(%rax), %eax	# *_97, D.21309
	cwtl
	movl	%eax, -96(%rbp)	# tmp257, b_mv_y
	.loc 1 3055 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1687
	movq	6480(%rax), %rax	# enc_picture.1687_100->ref_idx, D.21306
	movq	(%rax), %rax	# *_101, D.21307
	movl	-16(%rbp), %edx	# mb_b.pos_x, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21307
	movq	(%rax), %rax	# *_106, D.21308
	movl	-12(%rbp), %edx	# mb_b.pos_y, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	addq	%rdx, %rdx	# D.21304
	addq	%rdx, %rax	# D.21304, D.21308
	movzwl	(%rax), %eax	# *_111, D.21309
	cwtl
	movl	%eax, -92(%rbp)	# tmp258, b_ref_idx
	.loc 1 3057 0
	movq	-72(%rbp), %rax	# currMB, tmp259
	movl	532(%rax), %eax	# currMB_27->mb_field, D.21303
	testl	%eax, %eax	# D.21303
	je	.L890	#,
	.loc 1 3057 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1688
	movq	14168(%rax), %rdx	# img.1688_115->mb_data, D.21302
	movl	-28(%rbp), %eax	# mb_b.mb_addr, D.21303
	cltq
	imulq	$632, %rax, %rax	#, D.21304, D.21304
	addq	%rdx, %rax	# D.21302, D.21302
	movl	532(%rax), %eax	# _120->mb_field, D.21303
	testl	%eax, %eax	# D.21303
	jne	.L890	#,
	.loc 1 3059 0 is_stmt 1
	movl	-96(%rbp), %eax	# b_mv_y, tmp261
	movl	%eax, %edx	# tmp261, tmp262
	shrl	$31, %edx	#, tmp262
	addl	%edx, %eax	# tmp262, tmp263
	sarl	%eax	# tmp264
	movl	%eax, -96(%rbp)	# tmp264, b_mv_y
	.loc 1 3060 0
	sall	-92(%rbp)	# b_ref_idx
.L890:
	.loc 1 3062 0
	movq	-72(%rbp), %rax	# currMB, tmp265
	movl	532(%rax), %eax	# currMB_27->mb_field, D.21303
	testl	%eax, %eax	# D.21303
	jne	.L889	#,
	.loc 1 3062 0 is_stmt 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1689
	movq	14168(%rax), %rdx	# img.1689_125->mb_data, D.21302
	movl	-28(%rbp), %eax	# mb_b.mb_addr, D.21303
	cltq
	imulq	$632, %rax, %rax	#, D.21304, D.21304
	addq	%rdx, %rax	# D.21302, D.21302
	movl	532(%rax), %eax	# _130->mb_field, D.21303
	testl	%eax, %eax	# D.21303
	je	.L889	#,
	.loc 1 3064 0 is_stmt 1
	sall	-96(%rbp)	# b_mv_y
	.loc 1 3065 0
	sarl	-92(%rbp)	# b_ref_idx
.L889:
	.loc 1 3069 0
	movl	-64(%rbp), %eax	# mb_a.available, D.21303
	testl	%eax, %eax	# D.21303
	je	.L891	#,
	.loc 1 3069 0 is_stmt 0 discriminator 2
	cmpl	$0, -100(%rbp)	#, a_ref_idx
	jne	.L892	#,
	.loc 1 3069 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1691
	movq	6504(%rax), %rax	# enc_picture.1691_135->mv, D.21305
	movq	(%rax), %rax	# *_136, D.21306
	movl	-48(%rbp), %edx	# mb_a.pos_x, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21306
	movq	(%rax), %rax	# *_141, D.21307
	movl	-44(%rbp), %edx	# mb_a.pos_y, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21307
	movq	(%rax), %rax	# *_146, D.21308
	movzwl	(%rax), %eax	# *_147, D.21309
	testw	%ax, %ax	# D.21309
	jne	.L892	#,
	.loc 1 3069 0 discriminator 1
	cmpl	$0, -104(%rbp)	#, a_mv_y
	jne	.L892	#,
.L891:
	movl	$1, %eax	#, iftmp.1690
	jmp	.L893	#
.L892:
	.loc 1 3069 0 discriminator 4
	movl	$0, %eax	#, iftmp.1690
.L893:
	.loc 1 3069 0 discriminator 5
	movl	%eax, -88(%rbp)	# iftmp.1690, zeroMotionLeft
	.loc 1 3070 0 is_stmt 1 discriminator 5
	movl	-32(%rbp), %eax	# mb_b.available, D.21303
	testl	%eax, %eax	# D.21303
	je	.L894	#,
	.loc 1 3070 0 is_stmt 0 discriminator 2
	cmpl	$0, -92(%rbp)	#, b_ref_idx
	jne	.L895	#,
	.loc 1 3070 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1693
	movq	6504(%rax), %rax	# enc_picture.1693_153->mv, D.21305
	movq	(%rax), %rax	# *_154, D.21306
	movl	-16(%rbp), %edx	# mb_b.pos_x, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21306
	movq	(%rax), %rax	# *_159, D.21307
	movl	-12(%rbp), %edx	# mb_b.pos_y, D.21303
	movslq	%edx, %rdx	# D.21303, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21307
	movq	(%rax), %rax	# *_164, D.21308
	movzwl	(%rax), %eax	# *_165, D.21309
	testw	%ax, %ax	# D.21309
	jne	.L895	#,
	.loc 1 3070 0 discriminator 1
	cmpl	$0, -96(%rbp)	#, b_mv_y
	jne	.L895	#,
.L894:
	movl	$1, %eax	#, iftmp.1692
	jmp	.L896	#
.L895:
	.loc 1 3070 0 discriminator 4
	movl	$0, %eax	#, iftmp.1692
.L896:
	.loc 1 3070 0 discriminator 5
	movl	%eax, -84(%rbp)	# iftmp.1692, zeroMotionAbove
	.loc 1 3072 0 is_stmt 1 discriminator 5
	cmpl	$0, -84(%rbp)	#, zeroMotionAbove
	jne	.L897	#,
	.loc 1 3072 0 is_stmt 0 discriminator 1
	cmpl	$0, -88(%rbp)	#, zeroMotionLeft
	je	.L898	#,
.L897:
	.loc 1 3074 0 is_stmt 1
	movl	$0, -108(%rbp)	#, by
	jmp	.L899	#
.L902:
	.loc 1 3075 0
	movl	$0, -112(%rbp)	#, bx
	jmp	.L900	#
.L901:
	.loc 1 3077 0 discriminator 2
	movl	-112(%rbp), %eax	# bx, tmp266
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21304
	movq	-80(%rbp), %rax	# all_mv, tmp267
	addq	%rdx, %rax	# D.21304, D.21310
	movq	(%rax), %rax	# *_207, D.21311
	movl	-108(%rbp), %edx	# by, tmp268
	movslq	%edx, %rdx	# tmp268, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21311
	movq	(%rax), %rax	# *_211, D.21305
	movq	(%rax), %rax	# *_212, D.21306
	movq	(%rax), %rax	# *_213, D.21307
	movq	(%rax), %rax	# *_214, D.21308
	movw	$0, (%rax)	#, *_215
	.loc 1 3078 0 discriminator 2
	movl	-112(%rbp), %eax	# bx, tmp269
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21304
	movq	-80(%rbp), %rax	# all_mv, tmp270
	addq	%rdx, %rax	# D.21304, D.21310
	movq	(%rax), %rax	# *_218, D.21311
	movl	-108(%rbp), %edx	# by, tmp271
	movslq	%edx, %rdx	# tmp271, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21311
	movq	(%rax), %rax	# *_222, D.21305
	movq	(%rax), %rax	# *_223, D.21306
	movq	(%rax), %rax	# *_224, D.21307
	movq	(%rax), %rax	# *_225, D.21308
	addq	$2, %rax	#, D.21308
	movw	$0, (%rax)	#, *_227
	.loc 1 3075 0 discriminator 2
	addl	$1, -112(%rbp)	#, bx
.L900:
	.loc 1 3075 0 is_stmt 0 discriminator 1
	cmpl	$3, -112(%rbp)	#, bx
	jle	.L901	#,
	.loc 1 3074 0 is_stmt 1
	addl	$1, -108(%rbp)	#, by
.L899:
	.loc 1 3074 0 is_stmt 0 discriminator 1
	cmpl	$3, -108(%rbp)	#, by
	jle	.L902	#,
	.loc 1 3072 0 is_stmt 1
	jmp	.L886	#
.L898:
	.loc 1 3083 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1694
	movq	6504(%rax), %rdx	# enc_picture.1694_170->mv, D.21305
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1695
	movq	6480(%rax), %rsi	# enc_picture.1695_172->ref_idx, D.21306
	leaq	-128(%rbp), %rax	#, tmp272
	movl	$16, 16(%rsp)	#,
	movl	$16, 8(%rsp)	#,
	movl	$0, (%rsp)	#,
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp272,
	call	SetMotionVectorPredictor	#
	.loc 1 3084 0
	movl	$0, -108(%rbp)	#, by
	jmp	.L904	#
.L907:
	.loc 1 3085 0
	movl	$0, -112(%rbp)	#, bx
	jmp	.L905	#
.L906:
	.loc 1 3087 0 discriminator 2
	movl	-112(%rbp), %eax	# bx, tmp273
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21304
	movq	-80(%rbp), %rax	# all_mv, tmp274
	addq	%rdx, %rax	# D.21304, D.21310
	movq	(%rax), %rax	# *_178, D.21311
	movl	-108(%rbp), %edx	# by, tmp275
	movslq	%edx, %rdx	# tmp275, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21311
	movq	(%rax), %rax	# *_182, D.21305
	movq	(%rax), %rax	# *_183, D.21306
	movq	(%rax), %rax	# *_184, D.21307
	movq	(%rax), %rax	# *_185, D.21308
	movzwl	-128(%rbp), %edx	# pmv, D.21309
	movw	%dx, (%rax)	# D.21309, *_186
	.loc 1 3088 0 discriminator 2
	movl	-112(%rbp), %eax	# bx, tmp276
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21304
	movq	-80(%rbp), %rax	# all_mv, tmp277
	addq	%rdx, %rax	# D.21304, D.21310
	movq	(%rax), %rax	# *_190, D.21311
	movl	-108(%rbp), %edx	# by, tmp278
	movslq	%edx, %rdx	# tmp278, D.21304
	salq	$3, %rdx	#, D.21304
	addq	%rdx, %rax	# D.21304, D.21311
	movq	(%rax), %rax	# *_194, D.21305
	movq	(%rax), %rax	# *_195, D.21306
	movq	(%rax), %rax	# *_196, D.21307
	movq	(%rax), %rax	# *_197, D.21308
	leaq	2(%rax), %rdx	#, D.21308
	movzwl	-126(%rbp), %eax	# pmv, D.21309
	movw	%ax, (%rdx)	# D.21309, *_199
	.loc 1 3085 0 discriminator 2
	addl	$1, -112(%rbp)	#, bx
.L905:
	.loc 1 3085 0 is_stmt 0 discriminator 1
	cmpl	$3, -112(%rbp)	#, bx
	jle	.L906	#,
	.loc 1 3084 0 is_stmt 1
	addl	$1, -108(%rbp)	#, by
.L904:
	.loc 1 3084 0 is_stmt 0 discriminator 1
	cmpl	$3, -108(%rbp)	#, by
	jle	.L907	#,
.L886:
	.loc 1 3091 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE22:
	.size	FindSkipModeMotionVector, .-FindSkipModeMotionVector
	.globl	Get_Direct_Cost8x8
	.type	Get_Direct_Cost8x8, @function
Get_Direct_Cost8x8:
.LFB23:
	.loc 1 3100 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$664, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -644(%rbp)	# block, block
	movq	%rsi, -656(%rbp)	# cost8x8, cost8x8
	.loc 1 3104 0
	movl	$0, -612(%rbp)	#, cost
	.loc 1 3105 0
	movl	-644(%rbp), %eax	# block, tmp155
	movl	%eax, %edx	# tmp155, tmp156
	shrl	$31, %edx	#, tmp156
	addl	%edx, %eax	# tmp156, tmp157
	sarl	%eax	# tmp158
	sall	$3, %eax	#, tmp159
	movl	%eax, -608(%rbp)	# tmp159, mb_y
	.loc 1 3106 0
	movl	-644(%rbp), %eax	# block, tmp160
	cltd
	shrl	$31, %edx	#, tmp162
	addl	%edx, %eax	# tmp162, tmp163
	andl	$1, %eax	#, tmp164
	subl	%edx, %eax	# tmp162, tmp165
	sall	$3, %eax	#, tmp166
	movl	%eax, -604(%rbp)	# tmp166, mb_x
	.loc 1 3108 0
	movl	-608(%rbp), %eax	# mb_y, tmp167
	movl	%eax, -632(%rbp)	# tmp167, block_y
	jmp	.L909	#
.L918:
	.loc 1 3110 0
	movq	img(%rip), %rax	# img, img.1696
	movl	172(%rax), %edx	# img.1696_22->opix_y, D.21312
	movl	-632(%rbp), %eax	# block_y, tmp171
	addl	%edx, %eax	# D.21312, tmp170
	movl	%eax, -600(%rbp)	# tmp170, pic_pix_y
	.loc 1 3112 0
	movl	-604(%rbp), %eax	# mb_x, tmp172
	movl	%eax, -628(%rbp)	# tmp172, block_x
	jmp	.L910	#
.L917:
	.loc 1 3114 0
	movq	img(%rip), %rax	# img, img.1697
	movl	168(%rax), %edx	# img.1697_27->opix_x, D.21312
	movl	-628(%rbp), %eax	# block_x, tmp176
	addl	%edx, %eax	# D.21312, tmp175
	movl	%eax, -596(%rbp)	# tmp175, pic_pix_x
	.loc 1 3116 0
	movq	direct_pdir(%rip), %rax	# direct_pdir, direct_pdir.1698
	movl	-596(%rbp), %edx	# pic_pix_x, tmp177
	sarl	$2, %edx	#, D.21312
	movslq	%edx, %rdx	# D.21312, D.21313
	salq	$3, %rdx	#, D.21313
	addq	%rdx, %rax	# D.21313, D.21314
	movq	(%rax), %rax	# *_34, D.21315
	movl	-600(%rbp), %edx	# pic_pix_y, tmp178
	sarl	$2, %edx	#, D.21312
	movslq	%edx, %rdx	# D.21312, D.21313
	addq	%rdx, %rdx	# D.21313
	addq	%rdx, %rax	# D.21313, D.21315
	movzwl	(%rax), %eax	# *_39, D.21316
	testw	%ax, %ax	# D.21316
	jns	.L911	#,
	.loc 1 3118 0
	movq	-656(%rbp), %rax	# cost8x8, tmp179
	movl	$2147483647, (%rax)	#, *cost8x8_41(D)
	.loc 1 3119 0
	movl	$2147483647, %eax	#, D.21312
	jmp	.L924	#
.L911:
	.loc 1 3126 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1699
	addq	$8, %rax	#, D.21317
	movq	(%rax), %rax	# *_44, D.21314
	movl	-596(%rbp), %edx	# pic_pix_x, tmp180
	sarl	$2, %edx	#, D.21312
	movslq	%edx, %rdx	# D.21312, D.21313
	salq	$3, %rdx	#, D.21313
	addq	%rdx, %rax	# D.21313, D.21314
	movq	(%rax), %rax	# *_49, D.21315
	movl	-600(%rbp), %edx	# pic_pix_y, tmp181
	sarl	$2, %edx	#, D.21312
	movslq	%edx, %rdx	# D.21312, D.21313
	addq	%rdx, %rdx	# D.21313
	addq	%rdx, %rax	# D.21313, D.21315
	movzwl	(%rax), %eax	# *_54, D.21316
	.loc 1 3124 0
	movswl	%ax, %ecx	# D.21316, D.21312
	.loc 1 3125 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1700
	movq	(%rax), %rax	# *direct_ref_idx.1700_57, D.21314
	movl	-596(%rbp), %edx	# pic_pix_x, tmp182
	sarl	$2, %edx	#, D.21312
	movslq	%edx, %rdx	# D.21312, D.21313
	salq	$3, %rdx	#, D.21313
	addq	%rdx, %rax	# D.21313, D.21314
	movq	(%rax), %rax	# *_62, D.21315
	movl	-600(%rbp), %edx	# pic_pix_y, tmp183
	sarl	$2, %edx	#, D.21312
	movslq	%edx, %rdx	# D.21312, D.21313
	addq	%rdx, %rdx	# D.21313
	addq	%rdx, %rax	# D.21313, D.21315
	movzwl	(%rax), %eax	# *_67, D.21316
	.loc 1 3124 0
	movswl	%ax, %edi	# D.21316, D.21312
	movq	direct_pdir(%rip), %rax	# direct_pdir, direct_pdir.1701
	movl	-596(%rbp), %edx	# pic_pix_x, tmp184
	sarl	$2, %edx	#, D.21312
	movslq	%edx, %rdx	# D.21312, D.21313
	salq	$3, %rdx	#, D.21313
	addq	%rdx, %rax	# D.21313, D.21314
	movq	(%rax), %rax	# *_74, D.21315
	movl	-600(%rbp), %edx	# pic_pix_y, tmp185
	sarl	$2, %edx	#, D.21312
	movslq	%edx, %rdx	# D.21312, D.21313
	addq	%rdx, %rdx	# D.21313
	addq	%rdx, %rax	# D.21313, D.21315
	movzwl	(%rax), %eax	# *_79, D.21316
	movswl	%ax, %edx	# D.21316, D.21312
	movl	-632(%rbp), %esi	# block_y, tmp186
	movl	-628(%rbp), %eax	# block_x, tmp187
	movl	%ecx, (%rsp)	# D.21312,
	movl	%edi, %r9d	# D.21312,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	%eax, %edi	# tmp187,
	call	LumaPrediction4x4	#
	.loc 1 3129 0
	movl	$0, -620(%rbp)	#, j
	movl	-620(%rbp), %eax	# j, tmp188
	movl	%eax, -616(%rbp)	# tmp188, k
	jmp	.L913	#
.L916:
	.loc 1 3130 0
	movl	$0, -624(%rbp)	#, i
	jmp	.L914	#
.L915:
	.loc 1 3132 0 discriminator 2
	movl	-608(%rbp), %eax	# mb_y, tmp189
	movl	-632(%rbp), %edx	# block_y, tmp190
	subl	%eax, %edx	# tmp189, D.21312
	movl	-620(%rbp), %eax	# j, tmp191
	addl	%edx, %eax	# D.21312, D.21312
	movl	-604(%rbp), %edx	# mb_x, tmp192
	movl	-628(%rbp), %ecx	# block_x, tmp193
	subl	%edx, %ecx	# tmp192, D.21312
	movl	-624(%rbp), %edx	# i, tmp194
	addl	%ecx, %edx	# D.21312, D.21312
	.loc 1 3133 0 discriminator 2
	movq	imgY_org(%rip), %rcx	# imgY_org, imgY_org.1702
	movl	-620(%rbp), %esi	# j, tmp195
	movl	-600(%rbp), %edi	# pic_pix_y, tmp196
	addl	%edi, %esi	# tmp196, D.21312
	movslq	%esi, %rsi	# D.21312, D.21313
	salq	$3, %rsi	#, D.21313
	addq	%rsi, %rcx	# D.21313, D.21318
	movq	(%rcx), %rcx	# *_93, D.21319
	movl	-624(%rbp), %esi	# i, tmp197
	movl	-596(%rbp), %edi	# pic_pix_x, tmp198
	addl	%edi, %esi	# tmp198, D.21312
	movslq	%esi, %rsi	# D.21312, D.21313
	addq	%rsi, %rsi	# D.21313
	addq	%rsi, %rcx	# D.21313, D.21319
	movzwl	(%rcx), %ecx	# *_98, D.21320
	movzwl	%cx, %esi	# D.21320, D.21312
	movq	img(%rip), %rcx	# img, img.1703
	movl	-628(%rbp), %edi	# block_x, tmp199
	movl	-624(%rbp), %r8d	# i, tmp200
	leal	(%r8,%rdi), %r9d	#, D.21312
	movl	-632(%rbp), %edi	# block_y, tmp201
	movl	-620(%rbp), %r8d	# j, tmp202
	addl	%r8d, %edi	# tmp202, D.21312
	movslq	%edi, %rdi	# D.21312, tmp203
	movslq	%r9d, %r8	# D.21312, tmp204
	salq	$4, %r8	#, tmp205
	addq	%r8, %rdi	# tmp205, tmp206
	addq	$6296, %rdi	#, tmp207
	movzwl	8(%rcx,%rdi,2), %ecx	# img.1703_101->mpr, D.21320
	movzwl	%cx, %ecx	# D.21320, D.21312
	subl	%ecx, %esi	# D.21312, D.21312
	.loc 1 3132 0 discriminator 2
	movslq	%edx, %rcx	# D.21312, tmp208
	movslq	%eax, %rdi	# D.21312, tmp209
	salq	$3, %rdi	#, tmp210
	addq	%rdi, %rcx	# tmp210, tmp211
	movl	%esi, -528(%rbp,%rcx,4)	# D.21312, curr_diff
	movslq	%edx, %rdx	# D.21312, tmp212
	cltq
	salq	$3, %rax	#, tmp214
	addq	%rdx, %rax	# tmp212, tmp215
	movl	-528(%rbp,%rax,4), %edx	# curr_diff, D.21312
	movl	-616(%rbp), %eax	# k, tmp217
	cltq
	movl	%edx, -592(%rbp,%rax,4)	# D.21312, diff
	.loc 1 3130 0 discriminator 2
	addl	$1, -624(%rbp)	#, i
	addl	$1, -616(%rbp)	#, k
.L914:
	.loc 1 3130 0 is_stmt 0 discriminator 1
	cmpl	$3, -624(%rbp)	#, i
	jle	.L915	#,
	.loc 1 3129 0 is_stmt 1
	addl	$1, -620(%rbp)	#, j
.L913:
	.loc 1 3129 0 is_stmt 0 discriminator 1
	cmpl	$3, -620(%rbp)	#, j
	jle	.L916	#,
	.loc 1 3136 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1704
	movl	24(%rax), %edx	# input.1704_111->hadamard, D.21312
	leaq	-592(%rbp), %rax	#, tmp218
	movl	%edx, %esi	# D.21312,
	movq	%rax, %rdi	# tmp218,
	call	SATD	#
	addl	%eax, -612(%rbp)	# D.21312, cost
	.loc 1 3112 0
	addl	$4, -628(%rbp)	#, block_x
.L910:
	.loc 1 3112 0 is_stmt 0 discriminator 1
	movl	-604(%rbp), %eax	# mb_x, tmp219
	addl	$8, %eax	#, D.21312
	cmpl	-628(%rbp), %eax	# block_x, D.21312
	jg	.L917	#,
	.loc 1 3108 0 is_stmt 1
	addl	$4, -632(%rbp)	#, block_y
.L909:
	.loc 1 3108 0 is_stmt 0 discriminator 1
	movl	-608(%rbp), %eax	# mb_y, tmp220
	addl	$8, %eax	#, D.21312
	cmpl	-632(%rbp), %eax	# block_y, D.21312
	jg	.L918	#,
	.loc 1 3140 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1705
	movl	2464(%rax), %eax	# input.1705_117->rdopt, D.21312
	testl	%eax, %eax	# D.21312
	jne	.L919	#,
	.loc 1 3140 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1706
	movl	3220(%rax), %eax	# input.1706_119->AllowTransform8x8, D.21312
	testl	%eax, %eax	# D.21312
	je	.L919	#,
	.loc 1 3142 0 is_stmt 1
	movl	$0, -616(%rbp)	#, k
	.loc 1 3143 0
	movl	$0, -620(%rbp)	#, j
	jmp	.L920	#
.L923:
	.loc 1 3144 0
	movl	$0, -624(%rbp)	#, i
	jmp	.L921	#
.L922:
	.loc 1 3145 0 discriminator 2
	movl	-624(%rbp), %eax	# i, tmp222
	cltq
	movl	-620(%rbp), %edx	# j, tmp224
	movslq	%edx, %rdx	# tmp224, tmp223
	salq	$3, %rdx	#, tmp225
	addq	%rdx, %rax	# tmp225, tmp226
	movl	-528(%rbp,%rax,4), %edx	# curr_diff, D.21312
	movl	-616(%rbp), %eax	# k, tmp228
	cltq
	movl	%edx, -272(%rbp,%rax,4)	# D.21312, diff8x8
	.loc 1 3144 0 discriminator 2
	addl	$1, -624(%rbp)	#, i
	addl	$1, -616(%rbp)	#, k
.L921:
	.loc 1 3144 0 is_stmt 0 discriminator 1
	cmpl	$7, -624(%rbp)	#, i
	jle	.L922	#,
	.loc 1 3143 0 is_stmt 1
	addl	$1, -620(%rbp)	#, j
.L920:
	.loc 1 3143 0 is_stmt 0 discriminator 1
	cmpl	$7, -620(%rbp)	#, j
	jle	.L923	#,
	.loc 1 3147 0 is_stmt 1
	movq	-656(%rbp), %rax	# cost8x8, tmp229
	movl	(%rax), %ebx	# *cost8x8_41(D), D.21312
	movq	input(%rip), %rax	# input, input.1707
	movl	24(%rax), %edx	# input.1707_129->hadamard, D.21312
	leaq	-272(%rbp), %rax	#, tmp230
	movl	%edx, %esi	# D.21312,
	movq	%rax, %rdi	# tmp230,
	call	SATD8X8	#
	leal	(%rbx,%rax), %edx	#, D.21312
	movq	-656(%rbp), %rax	# cost8x8, tmp231
	movl	%edx, (%rax)	# D.21312, *cost8x8_41(D)
.L919:
	.loc 1 3150 0
	movl	-612(%rbp), %eax	# cost, D.21312
.L924:
	.loc 1 3151 0
	addq	$664, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE23:
	.size	Get_Direct_Cost8x8, .-Get_Direct_Cost8x8
	.globl	Get_Direct_CostMB
	.type	Get_Direct_CostMB, @function
Get_Direct_CostMB:
.LFB24:
	.loc 1 3162 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movsd	%xmm0, -24(%rbp)	# lambda, lambda
	.loc 1 3164 0
	movl	$0, -4(%rbp)	#, cost
	.loc 1 3165 0
	movl	$0, -12(%rbp)	#, cost8x8
	.loc 1 3167 0
	movl	$0, -8(%rbp)	#, i
	jmp	.L926	#
.L930:
	.loc 1 3169 0
	leaq	-12(%rbp), %rdx	#, tmp72
	movl	-8(%rbp), %eax	# i, tmp73
	movq	%rdx, %rsi	# tmp72,
	movl	%eax, %edi	# tmp73,
	call	Get_Direct_Cost8x8	#
	addl	%eax, -4(%rbp)	# D.21321, cost
	.loc 1 3170 0
	cmpl	$2147483647, -4(%rbp)	#, cost
	je	.L927	#,
	.loc 1 3170 0 is_stmt 0 discriminator 2
	movl	-12(%rbp), %eax	# cost8x8, cost8x8.1708
	cmpl	$2147483647, %eax	#, cost8x8.1708
	jne	.L928	#,
.L927:
	.loc 1 3170 0 discriminator 1
	movl	-4(%rbp), %eax	# cost, D.21321
	jmp	.L937	#
.L928:
	.loc 1 3167 0 is_stmt 1
	addl	$1, -8(%rbp)	#, i
.L926:
	.loc 1 3167 0 is_stmt 0 discriminator 1
	cmpl	$3, -8(%rbp)	#, i
	jle	.L930	#,
	.loc 1 3174 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1709
	movl	3220(%rax), %eax	# input.1709_13->AllowTransform8x8, D.21321
	cmpl	$1, %eax	#, D.21321
	je	.L932	#,
	cmpl	$2, %eax	#, D.21321
	je	.L933	#,
	.loc 1 3190 0
	jmp	.L936	#
.L932:
	.loc 1 3177 0
	movl	-12(%rbp), %eax	# cost8x8, cost8x8.1710
	cmpl	-4(%rbp), %eax	# cost, cost8x8.1710
	jl	.L934	#,
	.loc 1 3178 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1711
	movl	2384(%rax), %eax	# input.1711_16->InterSearch8x4, D.21321
	.loc 1 3177 0 discriminator 1
	testl	%eax, %eax	# D.21321
	je	.L934	#,
	.loc 1 3179 0
	movq	input(%rip), %rax	# input, input.1712
	movl	2388(%rax), %eax	# input.1712_18->InterSearch4x8, D.21321
	.loc 1 3178 0
	testl	%eax, %eax	# D.21321
	je	.L934	#,
	.loc 1 3180 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1713
	movl	2392(%rax), %eax	# input.1713_20->InterSearch4x4, D.21321
	.loc 1 3178 0 discriminator 1
	testl	%eax, %eax	# D.21321
	jne	.L935	#,
.L934:
	.loc 1 3183 0
	movl	-12(%rbp), %eax	# cost8x8, tmp74
	movl	%eax, -4(%rbp)	# tmp74, cost
	.loc 1 3185 0
	jmp	.L936	#
.L935:
	jmp	.L936	#
.L933:
	.loc 1 3187 0
	movl	-12(%rbp), %eax	# cost8x8, tmp75
	movl	%eax, -4(%rbp)	# tmp75, cost
	.loc 1 3188 0
	nop
.L936:
	.loc 1 3193 0
	movl	-4(%rbp), %eax	# cost, D.21321
.L937:
	.loc 1 3195 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE24:
	.size	Get_Direct_CostMB, .-Get_Direct_CostMB
	.globl	PartitionMotionSearch
	.type	PartitionMotionSearch, @function
PartitionMotionSearch:
.LFB25:
	.loc 1 3208 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -116(%rbp)	# blocktype, blocktype
	movl	%esi, -120(%rbp)	# block8x8, block8x8
	movsd	%xmm0, -128(%rbp)	# lambda, lambda
	.loc 1 3216 0
	movq	img(%rip), %rax	# img, img.1714
	movl	24(%rax), %eax	# img.1714_11->type, D.21322
	cmpl	$1, %eax	#, D.21322
	sete	%al	#, D.21323
	movzbl	%al, %eax	# D.21323, tmp247
	movl	%eax, -72(%rbp)	# tmp247, bslice
	.loc 1 3217 0
	movl	$4, %eax	#, tmp249
	cmpl	$4, -116(%rbp)	#, blocktype
	cmovle	-116(%rbp), %eax	# blocktype,, tmp248
	movl	%eax, -68(%rbp)	# tmp248, parttype
	.loc 1 3218 0
	movq	input(%rip), %rax	# input, input.1715
	movl	-68(%rbp), %edx	# parttype, tmp251
	movslq	%edx, %rdx	# tmp251, tmp250
	addq	$18, %rdx	#, tmp252
	movl	(%rax,%rdx,8), %eax	# input.1715_17->part_size, tmp253
	movl	%eax, -64(%rbp)	# tmp253, step_h0
	.loc 1 3219 0
	movq	input(%rip), %rax	# input, input.1716
	movl	-68(%rbp), %edx	# parttype, tmp255
	movslq	%edx, %rdx	# tmp255, tmp254
	movl	148(%rax,%rdx,8), %eax	# input.1716_19->part_size, tmp256
	movl	%eax, -60(%rbp)	# tmp256, step_v0
	.loc 1 3220 0
	movq	input(%rip), %rax	# input, input.1717
	movl	-116(%rbp), %edx	# blocktype, tmp258
	movslq	%edx, %rdx	# tmp258, tmp257
	addq	$18, %rdx	#, tmp259
	movl	(%rax,%rdx,8), %eax	# input.1717_21->part_size, tmp260
	movl	%eax, -56(%rbp)	# tmp260, step_h
	.loc 1 3221 0
	movq	input(%rip), %rax	# input, input.1718
	movl	-116(%rbp), %edx	# blocktype, tmp262
	movslq	%edx, %rdx	# tmp262, tmp261
	movl	148(%rax,%rdx,8), %eax	# input.1718_23->part_size, tmp263
	movl	%eax, -52(%rbp)	# tmp263, step_v
	.loc 1 3226 0
	movq	img(%rip), %rax	# img, img.1719
	movq	14168(%rax), %rdx	# img.1719_25->mb_data, D.21324
	movq	img(%rip), %rax	# img, img.1720
	movl	12(%rax), %eax	# img.1720_27->current_mb_nr, D.21322
	cltq
	imulq	$632, %rax, %rax	#, D.21325, D.21325
	addq	%rdx, %rax	# D.21324, D.21324
	movl	532(%rax), %eax	# _31->mb_field, D.21322
	testl	%eax, %eax	# D.21322
	je	.L939	#,
	.loc 1 3228 0
	movq	img(%rip), %rax	# img, img.1721
	movl	12(%rax), %eax	# img.1721_33->current_mb_nr, D.21322
	andl	$1, %eax	#, D.21326
	testl	%eax, %eax	# D.21326
	je	.L940	#,
	.loc 1 3229 0
	movl	$4, -76(%rbp)	#, list_offset
	jmp	.L942	#
.L940:
	.loc 1 3231 0
	movl	$2, -76(%rbp)	#, list_offset
	jmp	.L942	#
.L939:
	.loc 1 3235 0
	movl	$0, -76(%rbp)	#, list_offset
.L942:
	.loc 1 3238 0
	cmpl	$0, -72(%rbp)	#, bslice
	je	.L943	#,
	.loc 1 3238 0 is_stmt 0 discriminator 1
	movl	$2, %eax	#, iftmp.1722
	jmp	.L944	#
.L943:
	.loc 1 3238 0 discriminator 2
	movl	$1, %eax	#, iftmp.1722
.L944:
	.loc 1 3238 0 discriminator 3
	movl	%eax, -48(%rbp)	# iftmp.1722, numlists
	.loc 1 3241 0 is_stmt 1 discriminator 3
	movl	$0, -80(%rbp)	#, list
	jmp	.L945	#
.L959:
	.loc 1 3243 0
	movw	$0, -102(%rbp)	#, ref
	jmp	.L946	#
.L958:
	.loc 1 3247 0
	movq	input(%rip), %rax	# input, input.1723
	movl	2436(%rax), %eax	# input.1723_48->full_search, D.21322
	cmpl	$2, %eax	#, D.21322
	jne	.L947	#,
	.loc 1 3247 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1724
	movl	32(%rax), %eax	# input.1724_50->search_range, tmp264
	movl	%eax, -92(%rbp)	# tmp264, search_range
	jmp	.L948	#
.L947:
	.loc 1 3248 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1725
	movl	2436(%rax), %eax	# input.1725_52->full_search, D.21322
	cmpl	$1, %eax	#, D.21322
	jne	.L949	#,
	.loc 1 3248 0 is_stmt 0 discriminator 1
	movq	input(%rip), %rax	# input, input.1726
	movl	32(%rax), %eax	# input.1726_54->search_range, D.21322
	movl	$1, %edx	#, tmp265
	cmpw	$0, -102(%rbp)	#, ref
	cmovle	-102(%rbp), %dx	# ref,, D.21327
	movswl	%dx, %edx	# D.21327, D.21322
	leal	1(%rdx), %ebx	#, D.21322
	cltd
	idivl	%ebx	# D.21322
	movl	%eax, -92(%rbp)	# tmp266, search_range
	jmp	.L948	#
.L949:
	.loc 1 3249 0 is_stmt 1
	movq	input(%rip), %rax	# input, input.1727
	movl	32(%rax), %eax	# input.1727_60->search_range, D.21322
	movl	$1, %edx	#, tmp268
	cmpw	$0, -102(%rbp)	#, ref
	cmovle	-102(%rbp), %dx	# ref,, D.21327
	movswl	%dx, %edx	# D.21327, D.21322
	leal	1(%rdx), %ecx	#, D.21322
	movl	$2, %edx	#, tmp269
	cmpl	$2, -116(%rbp)	#, blocktype
	cmovle	-116(%rbp), %edx	# blocktype,, D.21322
	movl	%edx, %ebx	# D.21322, D.21322
	imull	%ecx, %ebx	# D.21322, D.21322
	cltd
	idivl	%ebx	# D.21322
	movl	%eax, -92(%rbp)	# tmp270, search_range
.L948:
	.loc 1 3255 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1728
	movq	6480(%rax), %rax	# enc_picture.1728_68->ref_idx, D.21328
	movl	-80(%rbp), %edx	# list, tmp272
	movslq	%edx, %rdx	# tmp272, D.21325
	salq	$3, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21328
	movq	(%rax), %rax	# *_72, tmp273
	movq	%rax, -32(%rbp)	# tmp273, ref_array
	.loc 1 3256 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1729
	movq	6504(%rax), %rax	# enc_picture.1729_74->mv, D.21329
	movl	-80(%rbp), %edx	# list, tmp274
	movslq	%edx, %rdx	# tmp274, D.21325
	salq	$3, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21329
	movq	(%rax), %rax	# *_78, tmp275
	movq	%rax, -24(%rbp)	# tmp275, mv_array
	.loc 1 3259 0
	movq	motion_cost(%rip), %rax	# motion_cost, motion_cost.1730
	movl	-116(%rbp), %edx	# blocktype, tmp276
	movslq	%edx, %rdx	# tmp276, D.21325
	salq	$3, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21330
	movq	(%rax), %rax	# *_83, D.21331
	movl	-80(%rbp), %edx	# list, tmp277
	movslq	%edx, %rdx	# tmp277, D.21325
	salq	$3, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21331
	movq	(%rax), %rax	# *_87, D.21332
	movswq	-102(%rbp), %rdx	# ref, D.21325
	salq	$3, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21332
	movq	(%rax), %rax	# *_91, D.21333
	movl	-120(%rbp), %edx	# block8x8, tmp278
	movslq	%edx, %rdx	# tmp278, D.21325
	salq	$2, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21333
	movl	$0, (%rax)	#, *_96
	.loc 1 3262 0
	movl	-120(%rbp), %eax	# block8x8, tmp280
	cltq
	movl	-68(%rbp), %edx	# parttype, tmp282
	movslq	%edx, %rdx	# tmp282, tmp281
	salq	$2, %rdx	#, tmp283
	addq	%rdx, %rax	# tmp283, tmp284
	movl	by0.6785(,%rax,4), %eax	# by0, tmp285
	movl	%eax, -100(%rbp)	# tmp285, v
	jmp	.L950	#
.L957:
	.loc 1 3264 0
	movq	img(%rip), %rax	# img, img.1731
	movl	148(%rax), %edx	# img.1731_100->block_y, D.21322
	movl	-100(%rbp), %eax	# v, tmp289
	addl	%edx, %eax	# D.21322, tmp288
	movl	%eax, -44(%rbp)	# tmp288, pic_block_y
	.loc 1 3266 0
	movl	-120(%rbp), %eax	# block8x8, tmp291
	cltq
	movl	-68(%rbp), %edx	# parttype, tmp293
	movslq	%edx, %rdx	# tmp293, tmp292
	salq	$2, %rdx	#, tmp294
	addq	%rdx, %rax	# tmp294, tmp295
	movl	bx0.6784(,%rax,4), %eax	# bx0, tmp296
	movl	%eax, -96(%rbp)	# tmp296, h
	jmp	.L951	#
.L956:
	.loc 1 3268 0
	movq	img(%rip), %rax	# img, img.1732
	movl	144(%rax), %edx	# img.1732_106->block_x, D.21322
	movl	-96(%rbp), %eax	# h, tmp300
	addl	%edx, %eax	# D.21322, tmp299
	movl	%eax, -40(%rbp)	# tmp299, pic_block_x
	.loc 1 3272 0
	movl	-100(%rbp), %eax	# v, tmp301
	leal	0(,%rax,4), %ecx	#, D.21322
	movl	-96(%rbp), %eax	# h, tmp302
	leal	0(,%rax,4), %edx	#, D.21322
	movswl	-102(%rbp), %edi	# ref, D.21322
	movq	-128(%rbp), %rax	# lambda, tmp303
	movl	-92(%rbp), %r9d	# search_range, tmp304
	movl	-116(%rbp), %r8d	# blocktype, tmp305
	movl	-80(%rbp), %esi	# list, tmp306
	movq	%rax, -136(%rbp)	# tmp303, %sfp
	movsd	-136(%rbp), %xmm0	# %sfp,
	call	BlockMotionSearch	#
	movl	%eax, -36(%rbp)	# tmp307, mcost
	.loc 1 3273 0
	movq	motion_cost(%rip), %rax	# motion_cost, motion_cost.1733
	movl	-116(%rbp), %edx	# blocktype, tmp308
	movslq	%edx, %rdx	# tmp308, D.21325
	salq	$3, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21330
	movq	(%rax), %rax	# *_117, D.21331
	movl	-80(%rbp), %edx	# list, tmp309
	movslq	%edx, %rdx	# tmp309, D.21325
	salq	$3, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21331
	movq	(%rax), %rax	# *_121, D.21332
	movswq	-102(%rbp), %rdx	# ref, D.21325
	salq	$3, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21332
	movq	(%rax), %rax	# *_125, D.21333
	movl	-120(%rbp), %edx	# block8x8, tmp310
	movslq	%edx, %rdx	# tmp310, D.21325
	salq	$2, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21333
	movq	motion_cost(%rip), %rdx	# motion_cost, motion_cost.1734
	movl	-116(%rbp), %ecx	# blocktype, tmp311
	movslq	%ecx, %rcx	# tmp311, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rdx	# D.21325, D.21330
	movq	(%rdx), %rdx	# *_133, D.21331
	movl	-80(%rbp), %ecx	# list, tmp312
	movslq	%ecx, %rcx	# tmp312, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rdx	# D.21325, D.21331
	movq	(%rdx), %rdx	# *_137, D.21332
	movswq	-102(%rbp), %rcx	# ref, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rdx	# D.21325, D.21332
	movq	(%rdx), %rdx	# *_141, D.21333
	movl	-120(%rbp), %ecx	# block8x8, tmp313
	movslq	%ecx, %rcx	# tmp313, D.21325
	salq	$2, %rcx	#, D.21325
	addq	%rcx, %rdx	# D.21325, D.21333
	movl	(%rdx), %ecx	# *_145, D.21322
	movl	-36(%rbp), %edx	# mcost, tmp314
	addl	%ecx, %edx	# D.21322, D.21322
	movl	%edx, (%rax)	# D.21322, *_129
	.loc 1 3276 0
	movl	$0, -84(%rbp)	#, j
	jmp	.L952	#
.L955:
	.loc 1 3277 0
	movl	$0, -88(%rbp)	#, i
	jmp	.L953	#
.L954:
	.loc 1 3279 0 discriminator 2
	movl	-88(%rbp), %eax	# i, tmp315
	movl	-40(%rbp), %edx	# pic_block_x, tmp316
	addl	%edx, %eax	# tmp316, D.21322
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21325
	movq	-24(%rbp), %rax	# mv_array, tmp317
	addq	%rdx, %rax	# D.21325, D.21328
	movq	(%rax), %rax	# *_153, D.21334
	movl	-84(%rbp), %edx	# j, tmp318
	movl	-44(%rbp), %ecx	# pic_block_y, tmp319
	addl	%ecx, %edx	# tmp319, D.21322
	movslq	%edx, %rdx	# D.21322, D.21325
	salq	$3, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21334
	movq	(%rax), %rax	# *_158, D.21335
	movq	img(%rip), %rdx	# img, img.1735
	movq	71928(%rdx), %rdx	# img.1735_160->all_mv, D.21336
	movl	-96(%rbp), %ecx	# h, tmp320
	movslq	%ecx, %rcx	# tmp320, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rdx	# D.21325, D.21336
	movq	(%rdx), %rdx	# *_164, D.21337
	movl	-100(%rbp), %ecx	# v, tmp321
	movslq	%ecx, %rcx	# tmp321, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rdx	# D.21325, D.21337
	movq	(%rdx), %rdx	# *_168, D.21329
	movl	-80(%rbp), %ecx	# list, tmp322
	movslq	%ecx, %rcx	# tmp322, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rdx	# D.21325, D.21329
	movq	(%rdx), %rdx	# *_172, D.21328
	movswq	-102(%rbp), %rcx	# ref, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rdx	# D.21325, D.21328
	movq	(%rdx), %rdx	# *_176, D.21334
	movl	-116(%rbp), %ecx	# blocktype, tmp323
	movslq	%ecx, %rcx	# tmp323, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rdx	# D.21325, D.21334
	movq	(%rdx), %rdx	# *_180, D.21335
	movzwl	(%rdx), %edx	# *_181, D.21327
	movw	%dx, (%rax)	# D.21327, *_159
	.loc 1 3280 0 discriminator 2
	movl	-88(%rbp), %eax	# i, tmp324
	movl	-40(%rbp), %edx	# pic_block_x, tmp325
	addl	%edx, %eax	# tmp325, D.21322
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21325
	movq	-24(%rbp), %rax	# mv_array, tmp326
	addq	%rdx, %rax	# D.21325, D.21328
	movq	(%rax), %rax	# *_186, D.21334
	movl	-84(%rbp), %edx	# j, tmp327
	movl	-44(%rbp), %ecx	# pic_block_y, tmp328
	addl	%ecx, %edx	# tmp328, D.21322
	movslq	%edx, %rdx	# D.21322, D.21325
	salq	$3, %rdx	#, D.21325
	addq	%rdx, %rax	# D.21325, D.21334
	movq	(%rax), %rax	# *_191, D.21335
	leaq	2(%rax), %rdx	#, D.21335
	movq	img(%rip), %rax	# img, img.1736
	movq	71928(%rax), %rax	# img.1736_194->all_mv, D.21336
	movl	-96(%rbp), %ecx	# h, tmp329
	movslq	%ecx, %rcx	# tmp329, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rax	# D.21325, D.21336
	movq	(%rax), %rax	# *_198, D.21337
	movl	-100(%rbp), %ecx	# v, tmp330
	movslq	%ecx, %rcx	# tmp330, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rax	# D.21325, D.21337
	movq	(%rax), %rax	# *_202, D.21329
	movl	-80(%rbp), %ecx	# list, tmp331
	movslq	%ecx, %rcx	# tmp331, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rax	# D.21325, D.21329
	movq	(%rax), %rax	# *_206, D.21328
	movswq	-102(%rbp), %rcx	# ref, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rax	# D.21325, D.21328
	movq	(%rax), %rax	# *_210, D.21334
	movl	-116(%rbp), %ecx	# blocktype, tmp332
	movslq	%ecx, %rcx	# tmp332, D.21325
	salq	$3, %rcx	#, D.21325
	addq	%rcx, %rax	# D.21325, D.21334
	movq	(%rax), %rax	# *_214, D.21335
	movzwl	2(%rax), %eax	# MEM[(short int *)_215 + 2B], D.21327
	movw	%ax, (%rdx)	# D.21327, *_193
	.loc 1 3281 0 discriminator 2
	movl	-88(%rbp), %eax	# i, tmp333
	movl	-40(%rbp), %edx	# pic_block_x, tmp334
	addl	%edx, %eax	# tmp334, D.21322
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21325
	movq	-32(%rbp), %rax	# ref_array, tmp335
	addq	%rdx, %rax	# D.21325, D.21334
	movq	(%rax), %rax	# *_220, D.21335
	movl	-84(%rbp), %edx	# j, tmp336
	movl	-44(%rbp), %ecx	# pic_block_y, tmp337
	addl	%ecx, %edx	# tmp337, D.21322
	movslq	%edx, %rdx	# D.21322, D.21325
	addq	%rdx, %rdx	# D.21325
	addq	%rax, %rdx	# D.21335, D.21335
	movzwl	-102(%rbp), %eax	# ref, tmp338
	movw	%ax, (%rdx)	# tmp338, *_225
	.loc 1 3277 0 discriminator 2
	addl	$1, -88(%rbp)	#, i
.L953:
	.loc 1 3277 0 is_stmt 0 discriminator 1
	movl	-88(%rbp), %eax	# i, tmp339
	cmpl	-56(%rbp), %eax	# step_h, tmp339
	jl	.L954	#,
	.loc 1 3276 0 is_stmt 1
	addl	$1, -84(%rbp)	#, j
.L952:
	.loc 1 3276 0 is_stmt 0 discriminator 1
	movl	-84(%rbp), %eax	# j, tmp340
	cmpl	-52(%rbp), %eax	# step_v, tmp340
	jl	.L955	#,
	.loc 1 3266 0 is_stmt 1
	movl	-56(%rbp), %eax	# step_h, tmp341
	addl	%eax, -96(%rbp)	# tmp341, h
.L951:
	.loc 1 3266 0 is_stmt 0 discriminator 1
	movl	-120(%rbp), %eax	# block8x8, tmp343
	cltq
	movl	-68(%rbp), %edx	# parttype, tmp345
	movslq	%edx, %rdx	# tmp345, tmp344
	salq	$2, %rdx	#, tmp346
	addq	%rdx, %rax	# tmp346, tmp347
	movl	bx0.6784(,%rax,4), %edx	# bx0, D.21322
	movl	-64(%rbp), %eax	# step_h0, tmp348
	addl	%edx, %eax	# D.21322, D.21322
	cmpl	-96(%rbp), %eax	# h, D.21322
	jg	.L956	#,
	.loc 1 3262 0 is_stmt 1
	movl	-52(%rbp), %eax	# step_v, tmp349
	addl	%eax, -100(%rbp)	# tmp349, v
.L950:
	.loc 1 3262 0 is_stmt 0 discriminator 1
	movl	-120(%rbp), %eax	# block8x8, tmp351
	cltq
	movl	-68(%rbp), %edx	# parttype, tmp353
	movslq	%edx, %rdx	# tmp353, tmp352
	salq	$2, %rdx	#, tmp354
	addq	%rdx, %rax	# tmp354, tmp355
	movl	by0.6785(,%rax,4), %edx	# by0, D.21322
	movl	-60(%rbp), %eax	# step_v0, tmp356
	addl	%edx, %eax	# D.21322, D.21322
	cmpl	-100(%rbp), %eax	# v, D.21322
	jg	.L957	#,
	.loc 1 3243 0 is_stmt 1
	movzwl	-102(%rbp), %eax	# ref, ref.1737
	addl	$1, %eax	#, tmp357
	movw	%ax, -102(%rbp)	# tmp357, ref
.L946:
	.loc 1 3243 0 is_stmt 0 discriminator 1
	movswl	-102(%rbp), %edx	# ref, D.21322
	movl	-76(%rbp), %eax	# list_offset, tmp358
	movl	-80(%rbp), %ecx	# list, tmp359
	addl	%ecx, %eax	# tmp359, D.21322
	cltq
	movl	listXsize(,%rax,4), %eax	# listXsize, D.21322
	cmpl	%eax, %edx	# D.21322, D.21322
	jl	.L958	#,
	.loc 1 3241 0 is_stmt 1
	addl	$1, -80(%rbp)	#, list
.L945:
	.loc 1 3241 0 is_stmt 0 discriminator 1
	movl	-80(%rbp), %eax	# list, tmp361
	cmpl	-48(%rbp), %eax	# numlists, tmp361
	jl	.L959	#,
	.loc 1 3287 0 is_stmt 1
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE25:
	.size	PartitionMotionSearch, .-PartitionMotionSearch
	.globl	Get_Direct_Motion_Vectors
	.type	Get_Direct_Motion_Vectors, @function
Get_Direct_Motion_Vectors:
.LFB26:
	.loc 1 3300 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$320, %rsp	#,
	.loc 1 3303 0
	movq	img(%rip), %rax	# img, img.1738
	movq	71928(%rax), %rax	# img.1738_68->all_mv, tmp1740
	movq	%rax, -144(%rbp)	# tmp1740, all_mvs
	.loc 1 3309 0
	movq	img(%rip), %rax	# img, img.1739
	movq	14168(%rax), %rdx	# img.1739_70->mb_data, D.21338
	movq	img(%rip), %rax	# img, img.1740
	movl	12(%rax), %eax	# img.1740_72->current_mb_nr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, tmp1741
	movq	%rax, -136(%rbp)	# tmp1741, currMB
	.loc 1 3311 0
	movq	img(%rip), %rax	# img, img.1741
	movl	72400(%rax), %eax	# img.1741_77->MbaffFrameFlag, D.21339
	testl	%eax, %eax	# D.21339
	je	.L961	#,
	.loc 1 3311 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# currMB, tmp1742
	movl	532(%rax), %eax	# currMB_76->mb_field, D.21339
	testl	%eax, %eax	# D.21339
	je	.L961	#,
	.loc 1 3313 0 is_stmt 1
	movq	img(%rip), %rax	# img, img.1742
	movl	12(%rax), %eax	# img.1742_80->current_mb_nr, D.21339
	andl	$1, %eax	#, D.21341
	testl	%eax, %eax	# D.21341
	je	.L962	#,
	.loc 1 3315 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1743
	movq	4856(%rax), %rax	# Co_located.1743_84->bottom_moving_block, tmp1743
	movq	%rax, -176(%rbp)	# tmp1743, moving_block
	.loc 1 3316 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1744
	movq	4848(%rax), %rax	# Co_located.1744_86->bottom_mv, tmp1744
	movq	%rax, -168(%rbp)	# tmp1744, co_located_mv
	.loc 1 3317 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1745
	movq	4832(%rax), %rax	# Co_located.1745_88->bottom_ref_idx, tmp1745
	movq	%rax, -160(%rbp)	# tmp1745, co_located_ref_idx
	.loc 1 3318 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1746
	movq	4840(%rax), %rax	# Co_located.1746_90->bottom_ref_pic_id, tmp1746
	movq	%rax, -152(%rbp)	# tmp1746, co_located_ref_id
	.loc 1 3313 0
	jmp	.L964	#
.L962:
	.loc 1 3322 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1747
	movq	3240(%rax), %rax	# Co_located.1747_92->top_moving_block, tmp1747
	movq	%rax, -176(%rbp)	# tmp1747, moving_block
	.loc 1 3323 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1748
	movq	3232(%rax), %rax	# Co_located.1748_94->top_mv, tmp1748
	movq	%rax, -168(%rbp)	# tmp1748, co_located_mv
	.loc 1 3324 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1749
	movq	3216(%rax), %rax	# Co_located.1749_96->top_ref_idx, tmp1749
	movq	%rax, -160(%rbp)	# tmp1749, co_located_ref_idx
	.loc 1 3325 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1750
	movq	3224(%rax), %rax	# Co_located.1750_98->top_ref_pic_id, tmp1750
	movq	%rax, -152(%rbp)	# tmp1750, co_located_ref_id
	.loc 1 3313 0
	jmp	.L964	#
.L961:
	.loc 1 3330 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1751
	movq	1624(%rax), %rax	# Co_located.1751_100->moving_block, tmp1751
	movq	%rax, -176(%rbp)	# tmp1751, moving_block
	.loc 1 3331 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1752
	movq	1616(%rax), %rax	# Co_located.1752_102->mv, tmp1752
	movq	%rax, -168(%rbp)	# tmp1752, co_located_mv
	.loc 1 3332 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1753
	movq	1600(%rax), %rax	# Co_located.1753_104->ref_idx, tmp1753
	movq	%rax, -160(%rbp)	# tmp1753, co_located_ref_idx
	.loc 1 3333 0
	movq	Co_located(%rip), %rax	# Co_located, Co_located.1754
	movq	1608(%rax), %rax	# Co_located.1754_106->ref_pic_id, tmp1754
	movq	%rax, -152(%rbp)	# tmp1754, co_located_ref_id
.L964:
	.loc 1 3336 0
	movq	img(%rip), %rax	# img, img.1755
	movl	71996(%rax), %eax	# img.1755_108->direct_spatial_mv_pred_flag, D.21339
	testl	%eax, %eax	# D.21339
	je	.L965	#,
.LBB5:
	.loc 1 3342 0
	movw	$0, -256(%rbp)	#, pmvfw
	movw	$0, -254(%rbp)	#, pmvfw
	movw	$0, -240(%rbp)	#, pmvbw
	movw	$0, -238(%rbp)	#, pmvbw
	.loc 1 3346 0
	movq	img(%rip), %rax	# img, img.1756
	movl	12(%rax), %eax	# img.1756_110->current_mb_nr, D.21339
	leaq	-128(%rbp), %rdx	#, tmp1755
	movq	%rdx, %r9	# tmp1755,
	movl	$0, %r8d	#,
	movl	$-1, %ecx	#,
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movl	%eax, %edi	# D.21339,
	call	getLuma4x4Neighbour	#
	.loc 1 3347 0
	movq	img(%rip), %rax	# img, img.1757
	movl	12(%rax), %eax	# img.1757_112->current_mb_nr, D.21339
	leaq	-96(%rbp), %rdx	#, tmp1756
	movq	%rdx, %r9	# tmp1756,
	movl	$-1, %r8d	#,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movl	%eax, %edi	# D.21339,
	call	getLuma4x4Neighbour	#
	.loc 1 3348 0
	movq	img(%rip), %rax	# img, img.1758
	movl	12(%rax), %eax	# img.1758_114->current_mb_nr, D.21339
	leaq	-32(%rbp), %rdx	#, tmp1757
	movq	%rdx, %r9	# tmp1757,
	movl	$-1, %r8d	#,
	movl	$16, %ecx	#,
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movl	%eax, %edi	# D.21339,
	call	getLuma4x4Neighbour	#
	.loc 1 3349 0
	movq	img(%rip), %rax	# img, img.1759
	movl	12(%rax), %eax	# img.1759_116->current_mb_nr, D.21339
	leaq	-64(%rbp), %rdx	#, tmp1758
	movq	%rdx, %r9	# tmp1758,
	movl	$-1, %r8d	#,
	movl	$-1, %ecx	#,
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movl	%eax, %edi	# D.21339,
	call	getLuma4x4Neighbour	#
	.loc 1 3351 0
	movq	img(%rip), %rax	# img, img.1760
	movl	72400(%rax), %eax	# img.1760_118->MbaffFrameFlag, D.21339
	testl	%eax, %eax	# D.21339
	jne	.L966	#,
	.loc 1 3353 0
	movl	-128(%rbp), %eax	# mb_left.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L967	#,
	.loc 1 3353 0 is_stmt 0 discriminator 1
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1762
	movq	6480(%rax), %rax	# enc_picture.1762_121->ref_idx, D.21342
	movq	(%rax), %rax	# *_122, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_127, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_132, iftmp.1761
	jmp	.L968	#
.L967:
	.loc 1 3353 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1761
.L968:
	.loc 1 3353 0 discriminator 3
	movw	%ax, -276(%rbp)	# iftmp.1761, fw_rFrameL
	.loc 1 3354 0 is_stmt 1 discriminator 3
	movl	-96(%rbp), %eax	# mb_up.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L969	#,
	.loc 1 3354 0 is_stmt 0 discriminator 1
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1764
	movq	6480(%rax), %rax	# enc_picture.1764_137->ref_idx, D.21342
	movq	(%rax), %rax	# *_138, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_143, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_148, iftmp.1763
	jmp	.L970	#
.L969:
	.loc 1 3354 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1763
.L970:
	.loc 1 3354 0 discriminator 3
	movw	%ax, -274(%rbp)	# iftmp.1763, fw_rFrameU
	.loc 1 3355 0 is_stmt 1 discriminator 3
	movl	-64(%rbp), %eax	# mb_upleft.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L971	#,
	.loc 1 3355 0 is_stmt 0 discriminator 1
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1766
	movq	6480(%rax), %rax	# enc_picture.1766_153->ref_idx, D.21342
	movq	(%rax), %rax	# *_154, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_159, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_164, iftmp.1765
	jmp	.L972	#
.L971:
	.loc 1 3355 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1765
.L972:
	.loc 1 3355 0 discriminator 3
	movw	%ax, -264(%rbp)	# iftmp.1765, fw_rFrameUL
	.loc 1 3356 0 is_stmt 1 discriminator 3
	movl	-32(%rbp), %eax	# mb_upright.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L973	#,
	.loc 1 3356 0 is_stmt 0 discriminator 1
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1768
	movq	6480(%rax), %rax	# enc_picture.1768_169->ref_idx, D.21342
	movq	(%rax), %rax	# *_170, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_175, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_180, iftmp.1767
	jmp	.L974	#
.L973:
	.loc 1 3356 0 discriminator 2
	movzwl	-264(%rbp), %eax	# fw_rFrameUL, iftmp.1767
.L974:
	.loc 1 3356 0 discriminator 3
	movw	%ax, -272(%rbp)	# iftmp.1767, fw_rFrameUR
	.loc 1 3358 0 is_stmt 1 discriminator 3
	movl	-128(%rbp), %eax	# mb_left.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L975	#,
	.loc 1 3358 0 is_stmt 0 discriminator 1
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1770
	movq	6480(%rax), %rax	# enc_picture.1770_185->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_187, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_192, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_197, iftmp.1769
	jmp	.L976	#
.L975:
	.loc 1 3358 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1769
.L976:
	.loc 1 3358 0 discriminator 3
	movw	%ax, -270(%rbp)	# iftmp.1769, bw_rFrameL
	.loc 1 3359 0 is_stmt 1 discriminator 3
	movl	-96(%rbp), %eax	# mb_up.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L977	#,
	.loc 1 3359 0 is_stmt 0 discriminator 1
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1772
	movq	6480(%rax), %rax	# enc_picture.1772_202->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_204, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_209, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_214, iftmp.1771
	jmp	.L978	#
.L977:
	.loc 1 3359 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1771
.L978:
	.loc 1 3359 0 discriminator 3
	movw	%ax, -268(%rbp)	# iftmp.1771, bw_rFrameU
	.loc 1 3360 0 is_stmt 1 discriminator 3
	movl	-64(%rbp), %eax	# mb_upleft.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L979	#,
	.loc 1 3360 0 is_stmt 0 discriminator 1
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1774
	movq	6480(%rax), %rax	# enc_picture.1774_219->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_221, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_226, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_231, iftmp.1773
	jmp	.L980	#
.L979:
	.loc 1 3360 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1773
.L980:
	.loc 1 3360 0 discriminator 3
	movw	%ax, -262(%rbp)	# iftmp.1773, bw_rFrameUL
	.loc 1 3361 0 is_stmt 1 discriminator 3
	movl	-32(%rbp), %eax	# mb_upright.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L981	#,
	.loc 1 3361 0 is_stmt 0 discriminator 1
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1776
	movq	6480(%rax), %rax	# enc_picture.1776_236->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_238, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_243, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_248, iftmp.1775
	jmp	.L982	#
.L981:
	.loc 1 3361 0 discriminator 2
	movzwl	-262(%rbp), %eax	# bw_rFrameUL, iftmp.1775
.L982:
	.loc 1 3361 0 discriminator 1
	movw	%ax, -266(%rbp)	# iftmp.1775, bw_rFrameUR
	jmp	.L983	#
.L966:
	.loc 1 3365 0 is_stmt 1
	movq	-136(%rbp), %rax	# currMB, tmp1759
	movl	532(%rax), %eax	# currMB_76->mb_field, D.21339
	testl	%eax, %eax	# D.21339
	je	.L984	#,
	.loc 1 3367 0
	movl	-128(%rbp), %eax	# mb_left.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L985	#,
	.loc 1 3368 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1779
	movq	14168(%rax), %rdx	# img.1779_254->mb_data, D.21338
	movl	-124(%rbp), %eax	# mb_left.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _259->mb_field, D.21339
	.loc 1 3367 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L986	#,
	.loc 1 3368 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1780
	movq	6480(%rax), %rax	# enc_picture.1780_261->ref_idx, D.21342
	movq	(%rax), %rax	# *_262, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_267, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_272, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L987	#,
.L986:
	.loc 1 3369 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1781
	movq	6480(%rax), %rax	# enc_picture.1781_290->ref_idx, D.21342
	movq	(%rax), %rax	# *_291, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_296, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3367 0 discriminator 3
	movzwl	(%rax), %eax	# *_301, iftmp.1778
	jmp	.L988	#
.L987:
	.loc 1 3370 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1782
	movq	6480(%rax), %rax	# enc_picture.1782_274->ref_idx, D.21342
	movq	(%rax), %rax	# *_275, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_280, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_285, D.21345
	.loc 1 3367 0
	addl	%eax, %eax	# D.21346
.L988:
	jmp	.L989	#
.L985:
	.loc 1 3367 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1777
.L989:
	.loc 1 3367 0 discriminator 5
	movw	%ax, -276(%rbp)	# iftmp.1777, fw_rFrameL
	.loc 1 3372 0 is_stmt 1 discriminator 5
	movl	-96(%rbp), %eax	# mb_up.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L990	#,
	.loc 1 3373 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1785
	movq	14168(%rax), %rdx	# img.1785_307->mb_data, D.21338
	movl	-92(%rbp), %eax	# mb_up.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _312->mb_field, D.21339
	.loc 1 3372 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L991	#,
	.loc 1 3373 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1786
	movq	6480(%rax), %rax	# enc_picture.1786_314->ref_idx, D.21342
	movq	(%rax), %rax	# *_315, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_320, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_325, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L992	#,
.L991:
	.loc 1 3374 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1787
	movq	6480(%rax), %rax	# enc_picture.1787_343->ref_idx, D.21342
	movq	(%rax), %rax	# *_344, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_349, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3372 0 discriminator 3
	movzwl	(%rax), %eax	# *_354, iftmp.1784
	jmp	.L993	#
.L992:
	.loc 1 3375 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1788
	movq	6480(%rax), %rax	# enc_picture.1788_327->ref_idx, D.21342
	movq	(%rax), %rax	# *_328, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_333, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_338, D.21345
	.loc 1 3372 0
	addl	%eax, %eax	# D.21346
.L993:
	jmp	.L994	#
.L990:
	.loc 1 3372 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1783
.L994:
	.loc 1 3372 0 discriminator 5
	movw	%ax, -274(%rbp)	# iftmp.1783, fw_rFrameU
	.loc 1 3377 0 is_stmt 1 discriminator 5
	movl	-64(%rbp), %eax	# mb_upleft.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L995	#,
	.loc 1 3378 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1791
	movq	14168(%rax), %rdx	# img.1791_360->mb_data, D.21338
	movl	-60(%rbp), %eax	# mb_upleft.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _365->mb_field, D.21339
	.loc 1 3377 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L996	#,
	.loc 1 3378 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1792
	movq	6480(%rax), %rax	# enc_picture.1792_367->ref_idx, D.21342
	movq	(%rax), %rax	# *_368, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_373, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_378, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L997	#,
.L996:
	.loc 1 3379 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1793
	movq	6480(%rax), %rax	# enc_picture.1793_396->ref_idx, D.21342
	movq	(%rax), %rax	# *_397, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_402, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3377 0 discriminator 3
	movzwl	(%rax), %eax	# *_407, iftmp.1790
	jmp	.L998	#
.L997:
	.loc 1 3380 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1794
	movq	6480(%rax), %rax	# enc_picture.1794_380->ref_idx, D.21342
	movq	(%rax), %rax	# *_381, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_386, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_391, D.21345
	.loc 1 3377 0
	addl	%eax, %eax	# D.21346
.L998:
	jmp	.L999	#
.L995:
	.loc 1 3377 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1789
.L999:
	.loc 1 3377 0 discriminator 5
	movw	%ax, -264(%rbp)	# iftmp.1789, fw_rFrameUL
	.loc 1 3382 0 is_stmt 1 discriminator 5
	movl	-32(%rbp), %eax	# mb_upright.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1000	#,
	.loc 1 3383 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1797
	movq	14168(%rax), %rdx	# img.1797_413->mb_data, D.21338
	movl	-28(%rbp), %eax	# mb_upright.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _418->mb_field, D.21339
	.loc 1 3382 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1001	#,
	.loc 1 3383 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1798
	movq	6480(%rax), %rax	# enc_picture.1798_420->ref_idx, D.21342
	movq	(%rax), %rax	# *_421, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_426, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_431, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1002	#,
.L1001:
	.loc 1 3384 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1799
	movq	6480(%rax), %rax	# enc_picture.1799_449->ref_idx, D.21342
	movq	(%rax), %rax	# *_450, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_455, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3382 0 discriminator 3
	movzwl	(%rax), %eax	# *_460, iftmp.1796
	jmp	.L1003	#
.L1002:
	.loc 1 3385 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1800
	movq	6480(%rax), %rax	# enc_picture.1800_433->ref_idx, D.21342
	movq	(%rax), %rax	# *_434, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_439, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_444, D.21345
	.loc 1 3382 0
	addl	%eax, %eax	# D.21346
.L1003:
	jmp	.L1004	#
.L1000:
	.loc 1 3382 0 is_stmt 0 discriminator 2
	movzwl	-264(%rbp), %eax	# fw_rFrameUL, iftmp.1795
.L1004:
	.loc 1 3382 0 discriminator 5
	movw	%ax, -272(%rbp)	# iftmp.1795, fw_rFrameUR
	.loc 1 3387 0 is_stmt 1 discriminator 5
	movl	-128(%rbp), %eax	# mb_left.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1005	#,
	.loc 1 3388 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1803
	movq	14168(%rax), %rdx	# img.1803_466->mb_data, D.21338
	movl	-124(%rbp), %eax	# mb_left.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _471->mb_field, D.21339
	.loc 1 3387 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1006	#,
	.loc 1 3388 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1804
	movq	6480(%rax), %rax	# enc_picture.1804_473->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_475, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_480, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_485, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1007	#,
.L1006:
	.loc 1 3389 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1805
	movq	6480(%rax), %rax	# enc_picture.1805_504->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_506, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_511, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3387 0 discriminator 3
	movzwl	(%rax), %eax	# *_516, iftmp.1802
	jmp	.L1008	#
.L1007:
	.loc 1 3390 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1806
	movq	6480(%rax), %rax	# enc_picture.1806_487->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_489, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_494, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_499, D.21345
	.loc 1 3387 0
	addl	%eax, %eax	# D.21346
.L1008:
	jmp	.L1009	#
.L1005:
	.loc 1 3387 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1801
.L1009:
	.loc 1 3387 0 discriminator 5
	movw	%ax, -270(%rbp)	# iftmp.1801, bw_rFrameL
	.loc 1 3392 0 is_stmt 1 discriminator 5
	movl	-96(%rbp), %eax	# mb_up.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1010	#,
	.loc 1 3393 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1809
	movq	14168(%rax), %rdx	# img.1809_522->mb_data, D.21338
	movl	-92(%rbp), %eax	# mb_up.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _527->mb_field, D.21339
	.loc 1 3392 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1011	#,
	.loc 1 3393 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1810
	movq	6480(%rax), %rax	# enc_picture.1810_529->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_531, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_536, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_541, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1012	#,
.L1011:
	.loc 1 3394 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1811
	movq	6480(%rax), %rax	# enc_picture.1811_560->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_562, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_567, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3392 0 discriminator 3
	movzwl	(%rax), %eax	# *_572, iftmp.1808
	jmp	.L1013	#
.L1012:
	.loc 1 3395 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1812
	movq	6480(%rax), %rax	# enc_picture.1812_543->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_545, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_550, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_555, D.21345
	.loc 1 3392 0
	addl	%eax, %eax	# D.21346
.L1013:
	jmp	.L1014	#
.L1010:
	.loc 1 3392 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1807
.L1014:
	.loc 1 3392 0 discriminator 5
	movw	%ax, -268(%rbp)	# iftmp.1807, bw_rFrameU
	.loc 1 3397 0 is_stmt 1 discriminator 5
	movl	-64(%rbp), %eax	# mb_upleft.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1015	#,
	.loc 1 3398 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1815
	movq	14168(%rax), %rdx	# img.1815_578->mb_data, D.21338
	movl	-60(%rbp), %eax	# mb_upleft.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _583->mb_field, D.21339
	.loc 1 3397 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1016	#,
	.loc 1 3398 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1816
	movq	6480(%rax), %rax	# enc_picture.1816_585->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_587, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_592, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_597, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1017	#,
.L1016:
	.loc 1 3399 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1817
	movq	6480(%rax), %rax	# enc_picture.1817_616->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_618, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_623, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3397 0 discriminator 3
	movzwl	(%rax), %eax	# *_628, iftmp.1814
	jmp	.L1018	#
.L1017:
	.loc 1 3400 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1818
	movq	6480(%rax), %rax	# enc_picture.1818_599->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_601, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_606, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_611, D.21345
	.loc 1 3397 0
	addl	%eax, %eax	# D.21346
.L1018:
	jmp	.L1019	#
.L1015:
	.loc 1 3397 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1813
.L1019:
	.loc 1 3397 0 discriminator 5
	movw	%ax, -262(%rbp)	# iftmp.1813, bw_rFrameUL
	.loc 1 3402 0 is_stmt 1 discriminator 5
	movl	-32(%rbp), %eax	# mb_upright.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1020	#,
	.loc 1 3403 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1821
	movq	14168(%rax), %rdx	# img.1821_634->mb_data, D.21338
	movl	-28(%rbp), %eax	# mb_upright.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _639->mb_field, D.21339
	.loc 1 3402 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1021	#,
	.loc 1 3403 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1822
	movq	6480(%rax), %rax	# enc_picture.1822_641->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_643, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_648, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_653, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1022	#,
.L1021:
	.loc 1 3404 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1823
	movq	6480(%rax), %rax	# enc_picture.1823_672->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_674, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_679, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3402 0 discriminator 3
	movzwl	(%rax), %eax	# *_684, iftmp.1820
	jmp	.L1023	#
.L1022:
	.loc 1 3405 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1824
	movq	6480(%rax), %rax	# enc_picture.1824_655->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_657, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_662, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_667, D.21345
	.loc 1 3402 0
	addl	%eax, %eax	# D.21346
.L1023:
	jmp	.L1024	#
.L1020:
	.loc 1 3402 0 is_stmt 0 discriminator 2
	movzwl	-262(%rbp), %eax	# bw_rFrameUL, iftmp.1819
.L1024:
	movw	%ax, -266(%rbp)	# iftmp.1819, bw_rFrameUR
	jmp	.L983	#
.L984:
	.loc 1 3409 0 is_stmt 1
	movl	-128(%rbp), %eax	# mb_left.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1025	#,
	.loc 1 3410 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1827
	movq	14168(%rax), %rdx	# img.1827_690->mb_data, D.21338
	movl	-124(%rbp), %eax	# mb_left.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _695->mb_field, D.21339
	.loc 1 3409 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1026	#,
	.loc 1 3410 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1828
	movq	6480(%rax), %rax	# enc_picture.1828_697->ref_idx, D.21342
	movq	(%rax), %rax	# *_698, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_703, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_708, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1027	#,
.L1026:
	.loc 1 3411 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1829
	movq	6480(%rax), %rax	# enc_picture.1829_723->ref_idx, D.21342
	movq	(%rax), %rax	# *_724, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_729, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_734, D.21345
	.loc 1 3409 0 discriminator 3
	sarw	%ax	# iftmp.1826
	jmp	.L1028	#
.L1027:
	.loc 1 3412 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1830
	movq	6480(%rax), %rax	# enc_picture.1830_710->ref_idx, D.21342
	movq	(%rax), %rax	# *_711, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_716, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3409 0
	movzwl	(%rax), %eax	# *_721, iftmp.1826
.L1028:
	jmp	.L1029	#
.L1025:
	.loc 1 3409 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1825
.L1029:
	.loc 1 3409 0 discriminator 5
	movw	%ax, -276(%rbp)	# iftmp.1825, fw_rFrameL
	.loc 1 3414 0 is_stmt 1 discriminator 5
	movl	-96(%rbp), %eax	# mb_up.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1030	#,
	.loc 1 3415 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1833
	movq	14168(%rax), %rdx	# img.1833_741->mb_data, D.21338
	movl	-92(%rbp), %eax	# mb_up.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _746->mb_field, D.21339
	.loc 1 3414 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1031	#,
	.loc 1 3415 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1834
	movq	6480(%rax), %rax	# enc_picture.1834_748->ref_idx, D.21342
	movq	(%rax), %rax	# *_749, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_754, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_759, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1032	#,
.L1031:
	.loc 1 3416 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1835
	movq	6480(%rax), %rax	# enc_picture.1835_774->ref_idx, D.21342
	movq	(%rax), %rax	# *_775, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_780, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_785, D.21345
	.loc 1 3414 0 discriminator 3
	sarw	%ax	# iftmp.1832
	jmp	.L1033	#
.L1032:
	.loc 1 3417 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1836
	movq	6480(%rax), %rax	# enc_picture.1836_761->ref_idx, D.21342
	movq	(%rax), %rax	# *_762, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_767, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3414 0
	movzwl	(%rax), %eax	# *_772, iftmp.1832
.L1033:
	jmp	.L1034	#
.L1030:
	.loc 1 3414 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1831
.L1034:
	.loc 1 3414 0 discriminator 5
	movw	%ax, -274(%rbp)	# iftmp.1831, fw_rFrameU
	.loc 1 3419 0 is_stmt 1 discriminator 5
	movl	-64(%rbp), %eax	# mb_upleft.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1035	#,
	.loc 1 3420 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1839
	movq	14168(%rax), %rdx	# img.1839_792->mb_data, D.21338
	movl	-60(%rbp), %eax	# mb_upleft.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _797->mb_field, D.21339
	.loc 1 3419 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1036	#,
	.loc 1 3420 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1840
	movq	6480(%rax), %rax	# enc_picture.1840_799->ref_idx, D.21342
	movq	(%rax), %rax	# *_800, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_805, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_810, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1037	#,
.L1036:
	.loc 1 3421 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1841
	movq	6480(%rax), %rax	# enc_picture.1841_825->ref_idx, D.21342
	movq	(%rax), %rax	# *_826, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_831, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_836, D.21345
	.loc 1 3419 0 discriminator 3
	sarw	%ax	# iftmp.1838
	jmp	.L1038	#
.L1037:
	.loc 1 3422 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1842
	movq	6480(%rax), %rax	# enc_picture.1842_812->ref_idx, D.21342
	movq	(%rax), %rax	# *_813, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_818, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3419 0
	movzwl	(%rax), %eax	# *_823, iftmp.1838
.L1038:
	jmp	.L1039	#
.L1035:
	.loc 1 3419 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1837
.L1039:
	.loc 1 3419 0 discriminator 5
	movw	%ax, -264(%rbp)	# iftmp.1837, fw_rFrameUL
	.loc 1 3424 0 is_stmt 1 discriminator 5
	movl	-32(%rbp), %eax	# mb_upright.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1040	#,
	.loc 1 3425 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1845
	movq	14168(%rax), %rdx	# img.1845_843->mb_data, D.21338
	movl	-28(%rbp), %eax	# mb_upright.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _848->mb_field, D.21339
	.loc 1 3424 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1041	#,
	.loc 1 3425 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1846
	movq	6480(%rax), %rax	# enc_picture.1846_850->ref_idx, D.21342
	movq	(%rax), %rax	# *_851, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_856, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_861, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1042	#,
.L1041:
	.loc 1 3426 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1847
	movq	6480(%rax), %rax	# enc_picture.1847_876->ref_idx, D.21342
	movq	(%rax), %rax	# *_877, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_882, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_887, D.21345
	.loc 1 3424 0 discriminator 3
	sarw	%ax	# iftmp.1844
	jmp	.L1043	#
.L1042:
	.loc 1 3427 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1848
	movq	6480(%rax), %rax	# enc_picture.1848_863->ref_idx, D.21342
	movq	(%rax), %rax	# *_864, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_869, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3424 0
	movzwl	(%rax), %eax	# *_874, iftmp.1844
.L1043:
	jmp	.L1044	#
.L1040:
	.loc 1 3424 0 is_stmt 0 discriminator 2
	movzwl	-264(%rbp), %eax	# fw_rFrameUL, iftmp.1843
.L1044:
	.loc 1 3424 0 discriminator 5
	movw	%ax, -272(%rbp)	# iftmp.1843, fw_rFrameUR
	.loc 1 3429 0 is_stmt 1 discriminator 5
	movl	-128(%rbp), %eax	# mb_left.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1045	#,
	.loc 1 3430 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1851
	movq	14168(%rax), %rdx	# img.1851_894->mb_data, D.21338
	movl	-124(%rbp), %eax	# mb_left.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _899->mb_field, D.21339
	.loc 1 3429 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1046	#,
	.loc 1 3430 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1852
	movq	6480(%rax), %rax	# enc_picture.1852_901->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_903, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_908, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_913, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1047	#,
.L1046:
	.loc 1 3431 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1853
	movq	6480(%rax), %rax	# enc_picture.1853_929->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_931, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_936, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_941, D.21345
	.loc 1 3429 0 discriminator 3
	sarw	%ax	# iftmp.1850
	jmp	.L1048	#
.L1047:
	.loc 1 3432 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1854
	movq	6480(%rax), %rax	# enc_picture.1854_915->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_917, D.21343
	movl	-112(%rbp), %edx	# mb_left.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_922, D.21344
	movl	-108(%rbp), %edx	# mb_left.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3429 0
	movzwl	(%rax), %eax	# *_927, iftmp.1850
.L1048:
	jmp	.L1049	#
.L1045:
	.loc 1 3429 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1849
.L1049:
	.loc 1 3429 0 discriminator 5
	movw	%ax, -270(%rbp)	# iftmp.1849, bw_rFrameL
	.loc 1 3434 0 is_stmt 1 discriminator 5
	movl	-96(%rbp), %eax	# mb_up.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1050	#,
	.loc 1 3435 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1857
	movq	14168(%rax), %rdx	# img.1857_948->mb_data, D.21338
	movl	-92(%rbp), %eax	# mb_up.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _953->mb_field, D.21339
	.loc 1 3434 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1051	#,
	.loc 1 3435 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1858
	movq	6480(%rax), %rax	# enc_picture.1858_955->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_957, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_962, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_967, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1052	#,
.L1051:
	.loc 1 3436 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1859
	movq	6480(%rax), %rax	# enc_picture.1859_983->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_985, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_990, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_995, D.21345
	.loc 1 3434 0 discriminator 3
	sarw	%ax	# iftmp.1856
	jmp	.L1053	#
.L1052:
	.loc 1 3437 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1860
	movq	6480(%rax), %rax	# enc_picture.1860_969->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_971, D.21343
	movl	-80(%rbp), %edx	# mb_up.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_976, D.21344
	movl	-76(%rbp), %edx	# mb_up.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3434 0
	movzwl	(%rax), %eax	# *_981, iftmp.1856
.L1053:
	jmp	.L1054	#
.L1050:
	.loc 1 3434 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1855
.L1054:
	.loc 1 3434 0 discriminator 5
	movw	%ax, -268(%rbp)	# iftmp.1855, bw_rFrameU
	.loc 1 3439 0 is_stmt 1 discriminator 5
	movl	-64(%rbp), %eax	# mb_upleft.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1055	#,
	.loc 1 3440 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1863
	movq	14168(%rax), %rdx	# img.1863_1002->mb_data, D.21338
	movl	-60(%rbp), %eax	# mb_upleft.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _1007->mb_field, D.21339
	.loc 1 3439 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1056	#,
	.loc 1 3440 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1864
	movq	6480(%rax), %rax	# enc_picture.1864_1009->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1011, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1016, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_1021, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1057	#,
.L1056:
	.loc 1 3441 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1865
	movq	6480(%rax), %rax	# enc_picture.1865_1037->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1039, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1044, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_1049, D.21345
	.loc 1 3439 0 discriminator 3
	sarw	%ax	# iftmp.1862
	jmp	.L1058	#
.L1057:
	.loc 1 3442 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1866
	movq	6480(%rax), %rax	# enc_picture.1866_1023->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1025, D.21343
	movl	-48(%rbp), %edx	# mb_upleft.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1030, D.21344
	movl	-44(%rbp), %edx	# mb_upleft.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3439 0
	movzwl	(%rax), %eax	# *_1035, iftmp.1862
.L1058:
	jmp	.L1059	#
.L1055:
	.loc 1 3439 0 is_stmt 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1861
.L1059:
	.loc 1 3439 0 discriminator 5
	movw	%ax, -262(%rbp)	# iftmp.1861, bw_rFrameUL
	.loc 1 3444 0 is_stmt 1 discriminator 5
	movl	-32(%rbp), %eax	# mb_upright.available, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1060	#,
	.loc 1 3445 0 discriminator 1
	movq	img(%rip), %rax	# img, img.1869
	movq	14168(%rax), %rdx	# img.1869_1056->mb_data, D.21338
	movl	-28(%rbp), %eax	# mb_upright.mb_addr, D.21339
	cltq
	imulq	$632, %rax, %rax	#, D.21340, D.21340
	addq	%rdx, %rax	# D.21338, D.21338
	movl	532(%rax), %eax	# _1061->mb_field, D.21339
	.loc 1 3444 0 discriminator 1
	testl	%eax, %eax	# D.21339
	jne	.L1061	#,
	.loc 1 3445 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1870
	movq	6480(%rax), %rax	# enc_picture.1870_1063->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1065, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1070, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_1075, D.21345
	testw	%ax, %ax	# D.21345
	jns	.L1062	#,
.L1061:
	.loc 1 3446 0 discriminator 3
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1871
	movq	6480(%rax), %rax	# enc_picture.1871_1091->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1093, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1098, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_1103, D.21345
	.loc 1 3444 0 discriminator 3
	sarw	%ax	# iftmp.1868
	jmp	.L1063	#
.L1062:
	.loc 1 3447 0
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1872
	movq	6480(%rax), %rax	# enc_picture.1872_1077->ref_idx, D.21342
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1079, D.21343
	movl	-16(%rbp), %edx	# mb_upright.pos_x, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1084, D.21344
	movl	-12(%rbp), %edx	# mb_upright.pos_y, D.21339
	movslq	%edx, %rdx	# D.21339, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	.loc 1 3444 0
	movzwl	(%rax), %eax	# *_1089, iftmp.1868
.L1063:
	jmp	.L1064	#
.L1060:
	.loc 1 3444 0 is_stmt 0 discriminator 2
	movzwl	-262(%rbp), %eax	# bw_rFrameUL, iftmp.1867
.L1064:
	.loc 1 3444 0 discriminator 5
	movw	%ax, -266(%rbp)	# iftmp.1867, bw_rFrameUR
.L983:
	.loc 1 3451 0 is_stmt 1
	cmpw	$0, -276(%rbp)	#, fw_rFrameL
	js	.L1065	#,
	.loc 1 3451 0 is_stmt 0 discriminator 1
	cmpw	$0, -274(%rbp)	#, fw_rFrameU
	js	.L1065	#,
	movzwl	-276(%rbp), %eax	# fw_rFrameL, tmp1760
	cmpw	%ax, -274(%rbp)	# tmp1760, fw_rFrameU
	cmovle	-274(%rbp), %ax	# fw_rFrameU,, iftmp.1873
	jmp	.L1066	#
.L1065:
	.loc 1 3451 0 discriminator 2
	movzwl	-276(%rbp), %eax	# fw_rFrameL, tmp1761
	cmpw	%ax, -274(%rbp)	# tmp1761, fw_rFrameU
	cmovge	-274(%rbp), %ax	# fw_rFrameU,, iftmp.1873
.L1066:
	.loc 1 3451 0 discriminator 3
	movw	%ax, -260(%rbp)	# iftmp.1873, fw_rFrame
	.loc 1 3452 0 is_stmt 1 discriminator 3
	cmpw	$0, -260(%rbp)	#, fw_rFrame
	js	.L1067	#,
	.loc 1 3452 0 is_stmt 0 discriminator 1
	cmpw	$0, -272(%rbp)	#, fw_rFrameUR
	js	.L1067	#,
	movzwl	-260(%rbp), %eax	# fw_rFrame, tmp1762
	cmpw	%ax, -272(%rbp)	# tmp1762, fw_rFrameUR
	cmovle	-272(%rbp), %ax	# fw_rFrameUR,, iftmp.1874
	jmp	.L1068	#
.L1067:
	.loc 1 3452 0 discriminator 2
	movzwl	-260(%rbp), %eax	# fw_rFrame, tmp1763
	cmpw	%ax, -272(%rbp)	# tmp1763, fw_rFrameUR
	cmovge	-272(%rbp), %ax	# fw_rFrameUR,, iftmp.1874
.L1068:
	.loc 1 3452 0 discriminator 3
	movw	%ax, -260(%rbp)	# iftmp.1874, fw_rFrame
	.loc 1 3454 0 is_stmt 1 discriminator 3
	cmpw	$0, -270(%rbp)	#, bw_rFrameL
	js	.L1069	#,
	.loc 1 3454 0 is_stmt 0 discriminator 1
	cmpw	$0, -268(%rbp)	#, bw_rFrameU
	js	.L1069	#,
	movzwl	-270(%rbp), %eax	# bw_rFrameL, tmp1764
	cmpw	%ax, -268(%rbp)	# tmp1764, bw_rFrameU
	cmovle	-268(%rbp), %ax	# bw_rFrameU,, iftmp.1875
	jmp	.L1070	#
.L1069:
	.loc 1 3454 0 discriminator 2
	movzwl	-270(%rbp), %eax	# bw_rFrameL, tmp1765
	cmpw	%ax, -268(%rbp)	# tmp1765, bw_rFrameU
	cmovge	-268(%rbp), %ax	# bw_rFrameU,, iftmp.1875
.L1070:
	.loc 1 3454 0 discriminator 3
	movw	%ax, -258(%rbp)	# iftmp.1875, bw_rFrame
	.loc 1 3455 0 is_stmt 1 discriminator 3
	cmpw	$0, -258(%rbp)	#, bw_rFrame
	js	.L1071	#,
	.loc 1 3455 0 is_stmt 0 discriminator 1
	cmpw	$0, -266(%rbp)	#, bw_rFrameUR
	js	.L1071	#,
	movzwl	-258(%rbp), %eax	# bw_rFrame, tmp1766
	cmpw	%ax, -266(%rbp)	# tmp1766, bw_rFrameUR
	cmovle	-266(%rbp), %ax	# bw_rFrameUR,, iftmp.1876
	jmp	.L1072	#
.L1071:
	.loc 1 3455 0 discriminator 2
	movzwl	-258(%rbp), %eax	# bw_rFrame, tmp1767
	cmpw	%ax, -266(%rbp)	# tmp1767, bw_rFrameUR
	cmovge	-266(%rbp), %ax	# bw_rFrameUR,, iftmp.1876
.L1072:
	.loc 1 3455 0 discriminator 3
	movw	%ax, -258(%rbp)	# iftmp.1876, bw_rFrame
	.loc 1 3457 0 is_stmt 1 discriminator 3
	cmpw	$0, -260(%rbp)	#, fw_rFrame
	js	.L1073	#,
	.loc 1 3458 0
	movswl	-260(%rbp), %ecx	# fw_rFrame, D.21339
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1877
	movq	6504(%rax), %rdx	# enc_picture.1877_1122->mv, D.21347
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1878
	movq	6480(%rax), %rsi	# enc_picture.1878_1124->ref_idx, D.21342
	leaq	-256(%rbp), %rax	#, tmp1768
	movl	$16, 16(%rsp)	#,
	movl	$16, 8(%rsp)	#,
	movl	$0, (%rsp)	#,
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rax, %rdi	# tmp1768,
	call	SetMotionVectorPredictor	#
.L1073:
	.loc 1 3460 0
	cmpw	$0, -258(%rbp)	#, bw_rFrame
	js	.L1074	#,
	.loc 1 3461 0
	movswl	-258(%rbp), %ecx	# bw_rFrame, D.21339
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1879
	movq	6504(%rax), %rdx	# enc_picture.1879_1127->mv, D.21347
	movq	enc_picture(%rip), %rax	# enc_picture, enc_picture.1880
	movq	6480(%rax), %rsi	# enc_picture.1880_1129->ref_idx, D.21342
	leaq	-240(%rbp), %rax	#, tmp1769
	movl	$16, 16(%rsp)	#,
	movl	$16, 8(%rsp)	#,
	movl	$0, (%rsp)	#,
	movl	$0, %r9d	#,
	movl	$1, %r8d	#,
	movq	%rax, %rdi	# tmp1769,
	call	SetMotionVectorPredictor	#
.L1074:
	.loc 1 3463 0
	movl	$0, -220(%rbp)	#, block_y
	jmp	.L1075	#
.L1090:
	.loc 1 3465 0
	movq	img(%rip), %rax	# img, img.1881
	movl	156(%rax), %eax	# img.1881_1132->pix_y, D.21339
	sarl	$2, %eax	#, D.21339
	movl	%eax, %edx	# D.21339, D.21339
	movl	-220(%rbp), %eax	# block_y, tmp1773
	addl	%edx, %eax	# D.21339, tmp1772
	movl	%eax, -208(%rbp)	# tmp1772, pic_block_y
	.loc 1 3466 0
	movq	img(%rip), %rax	# img, img.1882
	movl	172(%rax), %eax	# img.1882_1136->opix_y, D.21339
	sarl	$2, %eax	#, D.21339
	movl	%eax, %edx	# D.21339, D.21339
	movl	-220(%rbp), %eax	# block_y, tmp1777
	addl	%edx, %eax	# D.21339, tmp1776
	movl	%eax, -204(%rbp)	# tmp1776, opic_block_y
	.loc 1 3468 0
	movl	$0, -224(%rbp)	#, block_x
	jmp	.L1076	#
.L1089:
	.loc 1 3470 0
	movq	img(%rip), %rax	# img, img.1883
	movl	152(%rax), %eax	# img.1883_1141->pix_x, D.21339
	sarl	$2, %eax	#, D.21339
	movl	%eax, %edx	# D.21339, D.21339
	movl	-224(%rbp), %eax	# block_x, tmp1781
	addl	%edx, %eax	# D.21339, tmp1780
	movl	%eax, -200(%rbp)	# tmp1780, pic_block_x
	.loc 1 3471 0
	movq	img(%rip), %rax	# img, img.1884
	movl	168(%rax), %eax	# img.1884_1145->opix_x, D.21339
	sarl	$2, %eax	#, D.21339
	movl	%eax, %edx	# D.21339, D.21339
	movl	-224(%rbp), %eax	# block_x, tmp1785
	addl	%edx, %eax	# D.21339, tmp1784
	movl	%eax, -196(%rbp)	# tmp1784, opic_block_x
	.loc 1 3473 0
	cmpw	$0, -260(%rbp)	#, fw_rFrame
	js	.L1077	#,
	.loc 1 3475 0
	cmpw	$0, -260(%rbp)	#, fw_rFrame
	jne	.L1078	#,
	.loc 1 3475 0 is_stmt 0 discriminator 1
	movl	-196(%rbp), %eax	# opic_block_x, tmp1786
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-176(%rbp), %rax	# moving_block, tmp1787
	addq	%rdx, %rax	# D.21340, D.21348
	movq	(%rax), %rdx	# *_1151, D.21349
	movl	-204(%rbp), %eax	# opic_block_y, tmp1788
	cltq
	addq	%rdx, %rax	# D.21349, D.21349
	movzbl	(%rax), %eax	# *_1154, D.21351
	testb	%al, %al	# D.21351
	jne	.L1078	#,
	.loc 1 3477 0 is_stmt 1
	movl	-224(%rbp), %eax	# block_x, tmp1789
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1790
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1158, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1791
	movslq	%edx, %rdx	# tmp1791, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1162, D.21347
	movq	(%rax), %rax	# *_1163, D.21342
	movq	(%rax), %rax	# *_1164, D.21343
	movq	(%rax), %rax	# *_1165, D.21344
	movw	$0, (%rax)	#, *_1166
	.loc 1 3478 0
	movl	-224(%rbp), %eax	# block_x, tmp1792
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1793
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1169, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1794
	movslq	%edx, %rdx	# tmp1794, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1173, D.21347
	movq	(%rax), %rax	# *_1174, D.21342
	movq	(%rax), %rax	# *_1175, D.21343
	movq	(%rax), %rax	# *_1176, D.21344
	addq	$2, %rax	#, D.21344
	movw	$0, (%rax)	#, *_1178
	.loc 1 3479 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1885
	movq	(%rax), %rax	# *direct_ref_idx.1885_1179, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1795
	movslq	%edx, %rdx	# tmp1795, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1183, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1796
	movslq	%edx, %rdx	# tmp1796, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$0, (%rax)	#, *_1187
	jmp	.L1080	#
.L1078:
	.loc 1 3483 0
	movl	-224(%rbp), %eax	# block_x, tmp1797
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1798
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1190, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1799
	movslq	%edx, %rdx	# tmp1799, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1194, D.21347
	movq	(%rax), %rax	# *_1195, D.21342
	movswq	-260(%rbp), %rdx	# fw_rFrame, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21342
	movq	(%rax), %rax	# *_1199, D.21343
	movq	(%rax), %rax	# *_1200, D.21344
	movzwl	-256(%rbp), %edx	# pmvfw, D.21345
	movw	%dx, (%rax)	# D.21345, *_1201
	.loc 1 3484 0
	movl	-224(%rbp), %eax	# block_x, tmp1800
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1801
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1205, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1802
	movslq	%edx, %rdx	# tmp1802, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1209, D.21347
	movq	(%rax), %rax	# *_1210, D.21342
	movswq	-260(%rbp), %rdx	# fw_rFrame, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21342
	movq	(%rax), %rax	# *_1214, D.21343
	movq	(%rax), %rax	# *_1215, D.21344
	leaq	2(%rax), %rdx	#, D.21344
	movzwl	-254(%rbp), %eax	# pmvfw, D.21345
	movw	%ax, (%rdx)	# D.21345, *_1217
	.loc 1 3485 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1886
	movq	(%rax), %rax	# *direct_ref_idx.1886_1219, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1803
	movslq	%edx, %rdx	# tmp1803, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1223, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1804
	movslq	%edx, %rdx	# tmp1804, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rax, %rdx	# D.21344, D.21344
	movzwl	-260(%rbp), %eax	# fw_rFrame, tmp1805
	movw	%ax, (%rdx)	# tmp1805, *_1227
	jmp	.L1080	#
.L1077:
	.loc 1 3490 0
	movl	-224(%rbp), %eax	# block_x, tmp1806
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1807
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1230, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1808
	movslq	%edx, %rdx	# tmp1808, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1234, D.21347
	movq	(%rax), %rax	# *_1235, D.21342
	movq	(%rax), %rax	# *_1236, D.21343
	movq	(%rax), %rax	# *_1237, D.21344
	movw	$0, (%rax)	#, *_1238
	.loc 1 3491 0
	movl	-224(%rbp), %eax	# block_x, tmp1809
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1810
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1241, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1811
	movslq	%edx, %rdx	# tmp1811, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1245, D.21347
	movq	(%rax), %rax	# *_1246, D.21342
	movq	(%rax), %rax	# *_1247, D.21343
	movq	(%rax), %rax	# *_1248, D.21344
	addq	$2, %rax	#, D.21344
	movw	$0, (%rax)	#, *_1250
	.loc 1 3492 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1887
	movq	(%rax), %rax	# *direct_ref_idx.1887_1251, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1812
	movslq	%edx, %rdx	# tmp1812, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1255, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1813
	movslq	%edx, %rdx	# tmp1813, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$-1, (%rax)	#, *_1259
.L1080:
	.loc 1 3495 0
	cmpw	$0, -258(%rbp)	#, bw_rFrame
	js	.L1081	#,
	.loc 1 3497 0
	cmpw	$0, -258(%rbp)	#, bw_rFrame
	jne	.L1082	#,
	.loc 1 3497 0 is_stmt 0 discriminator 1
	movl	-196(%rbp), %eax	# opic_block_x, tmp1814
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-176(%rbp), %rax	# moving_block, tmp1815
	addq	%rdx, %rax	# D.21340, D.21348
	movq	(%rax), %rdx	# *_1262, D.21349
	movl	-204(%rbp), %eax	# opic_block_y, tmp1816
	cltq
	addq	%rdx, %rax	# D.21349, D.21349
	movzbl	(%rax), %eax	# *_1265, D.21351
	testb	%al, %al	# D.21351
	jne	.L1082	#,
	.loc 1 3499 0 is_stmt 1
	movl	-224(%rbp), %eax	# block_x, tmp1817
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1818
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1269, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1819
	movslq	%edx, %rdx	# tmp1819, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1273, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1275, D.21342
	movq	(%rax), %rax	# *_1276, D.21343
	movq	(%rax), %rax	# *_1277, D.21344
	movw	$0, (%rax)	#, *_1278
	.loc 1 3500 0
	movl	-224(%rbp), %eax	# block_x, tmp1820
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1821
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1281, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1822
	movslq	%edx, %rdx	# tmp1822, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1285, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1287, D.21342
	movq	(%rax), %rax	# *_1288, D.21343
	movq	(%rax), %rax	# *_1289, D.21344
	addq	$2, %rax	#, D.21344
	movw	$0, (%rax)	#, *_1291
	.loc 1 3501 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1888
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1293, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1823
	movslq	%edx, %rdx	# tmp1823, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1297, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1824
	movslq	%edx, %rdx	# tmp1824, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rax, %rdx	# D.21344, D.21344
	movzwl	-258(%rbp), %eax	# bw_rFrame, tmp1825
	movw	%ax, (%rdx)	# tmp1825, *_1301
	jmp	.L1084	#
.L1082:
	.loc 1 3505 0
	movl	-224(%rbp), %eax	# block_x, tmp1826
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1827
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1304, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1828
	movslq	%edx, %rdx	# tmp1828, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1308, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1310, D.21342
	movswq	-258(%rbp), %rdx	# bw_rFrame, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21342
	movq	(%rax), %rax	# *_1314, D.21343
	movq	(%rax), %rax	# *_1315, D.21344
	movzwl	-240(%rbp), %edx	# pmvbw, D.21345
	movw	%dx, (%rax)	# D.21345, *_1316
	.loc 1 3506 0
	movl	-224(%rbp), %eax	# block_x, tmp1829
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1830
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1320, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1831
	movslq	%edx, %rdx	# tmp1831, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1324, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1326, D.21342
	movswq	-258(%rbp), %rdx	# bw_rFrame, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21342
	movq	(%rax), %rax	# *_1330, D.21343
	movq	(%rax), %rax	# *_1331, D.21344
	leaq	2(%rax), %rdx	#, D.21344
	movzwl	-238(%rbp), %eax	# pmvbw, D.21345
	movw	%ax, (%rdx)	# D.21345, *_1333
	.loc 1 3507 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1889
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1336, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1832
	movslq	%edx, %rdx	# tmp1832, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1340, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1833
	movslq	%edx, %rdx	# tmp1833, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rax, %rdx	# D.21344, D.21344
	movzwl	-258(%rbp), %eax	# bw_rFrame, tmp1834
	movw	%ax, (%rdx)	# tmp1834, *_1344
	jmp	.L1084	#
.L1081:
	.loc 1 3512 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1890
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1346, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1835
	movslq	%edx, %rdx	# tmp1835, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1350, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1836
	movslq	%edx, %rdx	# tmp1836, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$-1, (%rax)	#, *_1354
	.loc 1 3514 0
	movl	-224(%rbp), %eax	# block_x, tmp1837
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1838
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1357, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1839
	movslq	%edx, %rdx	# tmp1839, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1361, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1363, D.21342
	movq	(%rax), %rax	# *_1364, D.21343
	movq	(%rax), %rax	# *_1365, D.21344
	movw	$0, (%rax)	#, *_1366
	.loc 1 3515 0
	movl	-224(%rbp), %eax	# block_x, tmp1840
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1841
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1369, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1842
	movslq	%edx, %rdx	# tmp1842, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1373, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1375, D.21342
	movq	(%rax), %rax	# *_1376, D.21343
	movq	(%rax), %rax	# *_1377, D.21344
	addq	$2, %rax	#, D.21344
	movw	$0, (%rax)	#, *_1379
.L1084:
	.loc 1 3518 0
	cmpw	$0, -260(%rbp)	#, fw_rFrame
	jns	.L1085	#,
	.loc 1 3518 0 is_stmt 0 discriminator 1
	cmpw	$0, -258(%rbp)	#, bw_rFrame
	jns	.L1085	#,
	.loc 1 3520 0 is_stmt 1
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1891
	movq	(%rax), %rax	# *direct_ref_idx.1891_1380, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1843
	movslq	%edx, %rdx	# tmp1843, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1384, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1844
	movslq	%edx, %rdx	# tmp1844, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rax, %rdx	# D.21344, D.21344
	.loc 1 3521 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1892
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1390, D.21343
	movl	-200(%rbp), %ecx	# pic_block_x, tmp1845
	movslq	%ecx, %rcx	# tmp1845, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1394, D.21344
	movl	-208(%rbp), %ecx	# pic_block_y, tmp1846
	movslq	%ecx, %rcx	# tmp1846, D.21340
	addq	%rcx, %rcx	# D.21340
	addq	%rcx, %rax	# D.21340, D.21344
	movw	$0, (%rax)	#, *_1398
	movzwl	(%rax), %eax	# *_1398, D.21345
	.loc 1 3520 0
	movw	%ax, (%rdx)	# D.21345, *_1388
.L1085:
	.loc 1 3524 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1893
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1401, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1847
	movslq	%edx, %rdx	# tmp1847, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1405, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1848
	movslq	%edx, %rdx	# tmp1848, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_1409, D.21345
	cmpw	$-1, %ax	#, D.21345
	jne	.L1086	#,
	.loc 1 3524 0 is_stmt 0 discriminator 1
	movq	direct_pdir(%rip), %rax	# direct_pdir, direct_pdir.1894
	movl	-200(%rbp), %edx	# pic_block_x, tmp1849
	movslq	%edx, %rdx	# tmp1849, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1414, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1850
	movslq	%edx, %rdx	# tmp1850, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$0, (%rax)	#, *_1418
	jmp	.L1087	#
.L1086:
	.loc 1 3525 0 is_stmt 1
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1895
	movq	(%rax), %rax	# *direct_ref_idx.1895_1419, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1851
	movslq	%edx, %rdx	# tmp1851, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1423, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1852
	movslq	%edx, %rdx	# tmp1852, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_1427, D.21345
	cmpw	$-1, %ax	#, D.21345
	jne	.L1088	#,
	.loc 1 3525 0 is_stmt 0 discriminator 1
	movq	direct_pdir(%rip), %rax	# direct_pdir, direct_pdir.1896
	movl	-200(%rbp), %edx	# pic_block_x, tmp1853
	movslq	%edx, %rdx	# tmp1853, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1432, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1854
	movslq	%edx, %rdx	# tmp1854, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$1, (%rax)	#, *_1436
	jmp	.L1087	#
.L1088:
	.loc 1 3526 0 is_stmt 1
	movq	direct_pdir(%rip), %rax	# direct_pdir, direct_pdir.1897
	movl	-200(%rbp), %edx	# pic_block_x, tmp1855
	movslq	%edx, %rdx	# tmp1855, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1440, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1856
	movslq	%edx, %rdx	# tmp1856, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$2, (%rax)	#, *_1444
.L1087:
	.loc 1 3468 0
	addl	$1, -224(%rbp)	#, block_x
.L1076:
	.loc 1 3468 0 is_stmt 0 discriminator 1
	cmpl	$3, -224(%rbp)	#, block_x
	jle	.L1089	#,
	.loc 1 3463 0 is_stmt 1
	addl	$1, -220(%rbp)	#, block_y
.L1075:
	.loc 1 3463 0 is_stmt 0 discriminator 1
	cmpl	$3, -220(%rbp)	#, block_y
	jle	.L1090	#,
.LBE5:
	jmp	.L960	#
.L965:
	.loc 1 3533 0 is_stmt 1
	movl	$0, -220(%rbp)	#, block_y
	jmp	.L1092	#
.L1108:
	.loc 1 3535 0
	movq	img(%rip), %rax	# img, img.1898
	movl	156(%rax), %eax	# img.1898_1448->pix_y, D.21339
	sarl	$2, %eax	#, D.21339
	movl	%eax, %edx	# D.21339, D.21339
	movl	-220(%rbp), %eax	# block_y, tmp1860
	addl	%edx, %eax	# D.21339, tmp1859
	movl	%eax, -208(%rbp)	# tmp1859, pic_block_y
	.loc 1 3536 0
	movq	img(%rip), %rax	# img, img.1899
	movl	172(%rax), %eax	# img.1899_1452->opix_y, D.21339
	sarl	$2, %eax	#, D.21339
	movl	%eax, %edx	# D.21339, D.21339
	movl	-220(%rbp), %eax	# block_y, tmp1864
	addl	%edx, %eax	# D.21339, tmp1863
	movl	%eax, -204(%rbp)	# tmp1863, opic_block_y
	.loc 1 3538 0
	movl	$0, -224(%rbp)	#, block_x
	jmp	.L1093	#
.L1107:
.LBB6:
	.loc 1 3543 0
	movq	img(%rip), %rax	# img, img.1901
	movl	72400(%rax), %eax	# img.1901_1457->MbaffFrameFlag, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1094	#,
	.loc 1 3543 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# currMB, tmp1865
	movl	532(%rax), %eax	# currMB_76->mb_field, D.21339
	testl	%eax, %eax	# D.21339
	je	.L1094	#,
	movq	img(%rip), %rax	# img, img.1903
	movl	12(%rax), %eax	# img.1903_1460->current_mb_nr, D.21339
	andl	$1, %eax	#, D.21341
	testl	%eax, %eax	# D.21341
	je	.L1095	#,
	movl	$4, %eax	#, iftmp.1902
	jmp	.L1096	#
.L1095:
	.loc 1 3543 0 discriminator 2
	movl	$2, %eax	#, iftmp.1902
.L1096:
	.loc 1 3543 0 discriminator 3
	jmp	.L1097	#
.L1094:
	.loc 1 3543 0 discriminator 2
	movl	$0, %eax	#, iftmp.1900
.L1097:
	.loc 1 3543 0 discriminator 3
	movl	%eax, -192(%rbp)	# iftmp.1900, list_offset
	.loc 1 3545 0 is_stmt 1 discriminator 3
	movq	img(%rip), %rax	# img, img.1904
	movl	152(%rax), %eax	# img.1904_1469->pix_x, D.21339
	sarl	$2, %eax	#, D.21339
	movl	%eax, %edx	# D.21339, D.21339
	movl	-224(%rbp), %eax	# block_x, tmp1869
	addl	%edx, %eax	# D.21339, tmp1868
	movl	%eax, -200(%rbp)	# tmp1868, pic_block_x
	.loc 1 3546 0 discriminator 3
	movq	img(%rip), %rax	# img, img.1905
	movl	168(%rax), %eax	# img.1905_1473->opix_x, D.21339
	sarl	$2, %eax	#, D.21339
	movl	%eax, %edx	# D.21339, D.21339
	movl	-224(%rbp), %eax	# block_x, tmp1873
	addl	%edx, %eax	# D.21339, tmp1872
	movl	%eax, -196(%rbp)	# tmp1872, opic_block_x
	.loc 1 3548 0 discriminator 3
	movq	-160(%rbp), %rax	# co_located_ref_idx, tmp1874
	movq	(%rax), %rax	# *co_located_ref_idx_10, D.21343
	movl	-196(%rbp), %edx	# opic_block_x, tmp1875
	movslq	%edx, %rdx	# tmp1875, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1480, D.21344
	movl	-204(%rbp), %edx	# opic_block_y, tmp1876
	movslq	%edx, %rdx	# tmp1876, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_1484, D.21345
	cmpw	$-1, %ax	#, D.21345
	sete	%al	#, D.21354
	movzbl	%al, %eax	# D.21354, tmp1877
	movl	%eax, -188(%rbp)	# tmp1877, refList
	.loc 1 3549 0 discriminator 3
	movl	-188(%rbp), %eax	# refList, tmp1878
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-160(%rbp), %rax	# co_located_ref_idx, tmp1879
	addq	%rdx, %rax	# D.21340, D.21342
	movq	(%rax), %rax	# *_1490, D.21343
	movl	-196(%rbp), %edx	# opic_block_x, tmp1880
	movslq	%edx, %rdx	# tmp1880, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1494, D.21344
	movl	-204(%rbp), %edx	# opic_block_y, tmp1881
	movslq	%edx, %rdx	# tmp1881, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movzwl	(%rax), %eax	# *_1498, D.21345
	cwtl
	movl	%eax, -184(%rbp)	# tmp1882, ref_idx
	.loc 1 3552 0 discriminator 3
	cmpl	$-1, -184(%rbp)	#, ref_idx
	jne	.L1098	#,
	.loc 1 3554 0
	movl	-224(%rbp), %eax	# block_x, tmp1883
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1884
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1503, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1885
	movslq	%edx, %rdx	# tmp1885, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1507, D.21347
	movq	(%rax), %rax	# *_1508, D.21342
	movq	(%rax), %rax	# *_1509, D.21343
	movq	(%rax), %rax	# *_1510, D.21344
	movw	$0, (%rax)	#, *_1511
	.loc 1 3555 0
	movl	-224(%rbp), %eax	# block_x, tmp1886
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1887
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1514, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1888
	movslq	%edx, %rdx	# tmp1888, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1518, D.21347
	movq	(%rax), %rax	# *_1519, D.21342
	movq	(%rax), %rax	# *_1520, D.21343
	movq	(%rax), %rax	# *_1521, D.21344
	addq	$2, %rax	#, D.21344
	movw	$0, (%rax)	#, *_1523
	.loc 1 3556 0
	movl	-224(%rbp), %eax	# block_x, tmp1889
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1890
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1526, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1891
	movslq	%edx, %rdx	# tmp1891, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1530, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1532, D.21342
	movq	(%rax), %rax	# *_1533, D.21343
	movq	(%rax), %rax	# *_1534, D.21344
	movw	$0, (%rax)	#, *_1535
	.loc 1 3557 0
	movl	-224(%rbp), %eax	# block_x, tmp1892
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1893
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1538, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1894
	movslq	%edx, %rdx	# tmp1894, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1542, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1544, D.21342
	movq	(%rax), %rax	# *_1545, D.21343
	movq	(%rax), %rax	# *_1546, D.21344
	addq	$2, %rax	#, D.21344
	movw	$0, (%rax)	#, *_1548
	.loc 1 3558 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1906
	movq	(%rax), %rax	# *direct_ref_idx.1906_1549, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1895
	movslq	%edx, %rdx	# tmp1895, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1553, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1896
	movslq	%edx, %rdx	# tmp1896, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$0, (%rax)	#, *_1557
	.loc 1 3559 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1907
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1559, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1897
	movslq	%edx, %rdx	# tmp1897, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1563, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1898
	movslq	%edx, %rdx	# tmp1898, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$0, (%rax)	#, *_1567
	.loc 1 3560 0
	movq	direct_pdir(%rip), %rax	# direct_pdir, direct_pdir.1908
	movl	-200(%rbp), %edx	# pic_block_x, tmp1899
	movslq	%edx, %rdx	# tmp1899, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1571, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1900
	movslq	%edx, %rdx	# tmp1900, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$2, (%rax)	#, *_1575
	jmp	.L1099	#
.L1098:
.LBB7:
	.loc 1 3565 0
	movl	$-135792468, -216(%rbp)	#, mapped_idx
	.loc 1 3569 0
	movl	$0, -212(%rbp)	#, iref
	jmp	.L1100	#
.L1103:
	.loc 1 3571 0
	movq	enc_picture(%rip), %rcx	# enc_picture, enc_picture.1909
	movl	-212(%rbp), %eax	# iref, tmp1902
	movslq	%eax, %rsi	# tmp1902, tmp1901
	movl	-192(%rbp), %eax	# list_offset, tmp1904
	movslq	%eax, %rdx	# tmp1904, tmp1903
	movq	%rdx, %rax	# tmp1903, tmp1905
	salq	$5, %rax	#, tmp1906
	addq	%rdx, %rax	# tmp1903, tmp1905
	addq	%rsi, %rax	# tmp1901, tmp1907
	addq	$2, %rax	#, tmp1908
	movq	8(%rcx,%rax,8), %rdx	# enc_picture.1909_1582->ref_pic_num, D.21355
	movl	-188(%rbp), %eax	# refList, tmp1909
	cltq
	leaq	0(,%rax,8), %rcx	#, D.21340
	movq	-152(%rbp), %rax	# co_located_ref_id, tmp1910
	addq	%rcx, %rax	# D.21340, D.21356
	movq	(%rax), %rax	# *_1586, D.21357
	movl	-196(%rbp), %ecx	# opic_block_x, tmp1911
	movslq	%ecx, %rcx	# tmp1911, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rax	# D.21340, D.21357
	movq	(%rax), %rax	# *_1590, D.21358
	movl	-204(%rbp), %ecx	# opic_block_y, tmp1912
	movslq	%ecx, %rcx	# tmp1912, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rax	# D.21340, D.21358
	movq	(%rax), %rax	# *_1594, D.21355
	cmpq	%rax, %rdx	# D.21355, D.21355
	jne	.L1101	#,
	.loc 1 3573 0
	movl	-212(%rbp), %eax	# iref, tmp1913
	movl	%eax, -216(%rbp)	# tmp1913, mapped_idx
	.loc 1 3574 0
	jmp	.L1102	#
.L1101:
	.loc 1 3578 0
	movl	$-135792468, -216(%rbp)	#, mapped_idx
	.loc 1 3569 0
	addl	$1, -212(%rbp)	#, iref
.L1100:
	.loc 1 3569 0 is_stmt 0 discriminator 1
	movl	-192(%rbp), %eax	# list_offset, tmp1915
	cltq
	movl	listXsize(,%rax,4), %edx	# listXsize, D.21339
	movq	img(%rip), %rax	# img, img.1910
	movl	72000(%rax), %eax	# img.1910_1579->num_ref_idx_l0_active, D.21339
	cmpl	%eax, %edx	# D.21339, D.21339
	cmovle	%edx, %eax	# D.21339,, D.21339
	cmpl	-212(%rbp), %eax	# iref, D.21339
	jg	.L1103	#,
.L1102:
	.loc 1 3583 0 is_stmt 1
	cmpl	$-135792468, -216(%rbp)	#, mapped_idx
	je	.L1104	#,
	.loc 1 3585 0
	movq	img(%rip), %rcx	# img, img.1911
	movl	-216(%rbp), %eax	# mapped_idx, tmp1917
	movslq	%eax, %rsi	# tmp1917, tmp1916
	movl	-192(%rbp), %eax	# list_offset, tmp1919
	movslq	%eax, %rdx	# tmp1919, tmp1918
	movq	%rdx, %rax	# tmp1918, tmp1920
	salq	$4, %rax	#, tmp1921
	subq	%rdx, %rax	# tmp1918, tmp1920
	addq	%rsi, %rax	# tmp1916, tmp1922
	addq	$18004, %rax	#, tmp1923
	movl	(%rcx,%rax,4), %eax	# img.1911_1599->mvscale, tmp1924
	movl	%eax, -180(%rbp)	# tmp1924, mv_scale
	.loc 1 3587 0
	cmpl	$9999, -180(%rbp)	#, mv_scale
	jne	.L1105	#,
	.loc 1 3590 0
	movl	-224(%rbp), %eax	# block_x, tmp1925
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1926
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1603, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1927
	movslq	%edx, %rdx	# tmp1927, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1607, D.21347
	movq	(%rax), %rax	# *_1608, D.21342
	movq	(%rax), %rax	# *_1609, D.21343
	movq	(%rax), %rax	# *_1610, D.21344
	movl	-188(%rbp), %edx	# refList, tmp1928
	movslq	%edx, %rdx	# tmp1928, D.21340
	leaq	0(,%rdx,8), %rcx	#, D.21340
	movq	-168(%rbp), %rdx	# co_located_mv, tmp1929
	addq	%rcx, %rdx	# D.21340, D.21347
	movq	(%rdx), %rdx	# *_1614, D.21342
	movl	-196(%rbp), %ecx	# opic_block_x, tmp1930
	movslq	%ecx, %rcx	# tmp1930, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rdx	# D.21340, D.21342
	movq	(%rdx), %rdx	# *_1618, D.21343
	movl	-204(%rbp), %ecx	# opic_block_y, tmp1931
	movslq	%ecx, %rcx	# tmp1931, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rdx	# D.21340, D.21343
	movq	(%rdx), %rdx	# *_1622, D.21344
	movzwl	(%rdx), %edx	# *_1623, D.21345
	movw	%dx, (%rax)	# D.21345, *_1611
	.loc 1 3591 0
	movl	-224(%rbp), %eax	# block_x, tmp1932
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1933
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1627, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1934
	movslq	%edx, %rdx	# tmp1934, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1631, D.21347
	movq	(%rax), %rax	# *_1632, D.21342
	movq	(%rax), %rax	# *_1633, D.21343
	movq	(%rax), %rax	# *_1634, D.21344
	leaq	2(%rax), %rdx	#, D.21344
	movl	-188(%rbp), %eax	# refList, tmp1935
	cltq
	leaq	0(,%rax,8), %rcx	#, D.21340
	movq	-168(%rbp), %rax	# co_located_mv, tmp1936
	addq	%rcx, %rax	# D.21340, D.21347
	movq	(%rax), %rax	# *_1639, D.21342
	movl	-196(%rbp), %ecx	# opic_block_x, tmp1937
	movslq	%ecx, %rcx	# tmp1937, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rax	# D.21340, D.21342
	movq	(%rax), %rax	# *_1643, D.21343
	movl	-204(%rbp), %ecx	# opic_block_y, tmp1938
	movslq	%ecx, %rcx	# tmp1938, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1647, D.21344
	movzwl	2(%rax), %eax	# MEM[(short int *)_1648 + 2B], D.21345
	movw	%ax, (%rdx)	# D.21345, *_1636
	.loc 1 3593 0
	movl	-224(%rbp), %eax	# block_x, tmp1939
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1940
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1652, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1941
	movslq	%edx, %rdx	# tmp1941, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1656, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1658, D.21342
	movq	(%rax), %rax	# *_1659, D.21343
	movq	(%rax), %rax	# *_1660, D.21344
	movw	$0, (%rax)	#, *_1661
	.loc 1 3594 0
	movl	-224(%rbp), %eax	# block_x, tmp1942
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1943
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1664, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1944
	movslq	%edx, %rdx	# tmp1944, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1668, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1670, D.21342
	movq	(%rax), %rax	# *_1671, D.21343
	movq	(%rax), %rax	# *_1672, D.21344
	addq	$2, %rax	#, D.21344
	movw	$0, (%rax)	#, *_1674
	jmp	.L1106	#
.L1105:
	.loc 1 3598 0
	movl	-224(%rbp), %eax	# block_x, tmp1945
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1946
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1677, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1947
	movslq	%edx, %rdx	# tmp1947, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1681, D.21347
	movq	(%rax), %rax	# *_1682, D.21342
	movl	-216(%rbp), %edx	# mapped_idx, tmp1948
	movslq	%edx, %rdx	# tmp1948, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21342
	movq	(%rax), %rax	# *_1686, D.21343
	movq	(%rax), %rax	# *_1687, D.21344
	movl	-188(%rbp), %edx	# refList, tmp1949
	movslq	%edx, %rdx	# tmp1949, D.21340
	leaq	0(,%rdx,8), %rcx	#, D.21340
	movq	-168(%rbp), %rdx	# co_located_mv, tmp1950
	addq	%rcx, %rdx	# D.21340, D.21347
	movq	(%rdx), %rdx	# *_1691, D.21342
	movl	-196(%rbp), %ecx	# opic_block_x, tmp1951
	movslq	%ecx, %rcx	# tmp1951, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rdx	# D.21340, D.21342
	movq	(%rdx), %rdx	# *_1695, D.21343
	movl	-204(%rbp), %ecx	# opic_block_y, tmp1952
	movslq	%ecx, %rcx	# tmp1952, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rdx	# D.21340, D.21343
	movq	(%rdx), %rdx	# *_1699, D.21344
	movzwl	(%rdx), %edx	# *_1700, D.21345
	movswl	%dx, %edx	# D.21345, D.21339
	imull	-180(%rbp), %edx	# mv_scale, D.21339
	subl	$-128, %edx	#, D.21339
	sarl	$8, %edx	#, D.21339
	movw	%dx, (%rax)	# D.21345, *_1688
	.loc 1 3599 0
	movl	-224(%rbp), %eax	# block_x, tmp1953
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1954
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1709, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1955
	movslq	%edx, %rdx	# tmp1955, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1713, D.21347
	movq	(%rax), %rax	# *_1714, D.21342
	movl	-216(%rbp), %edx	# mapped_idx, tmp1956
	movslq	%edx, %rdx	# tmp1956, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21342
	movq	(%rax), %rax	# *_1718, D.21343
	movq	(%rax), %rax	# *_1719, D.21344
	leaq	2(%rax), %rdx	#, D.21344
	movl	-188(%rbp), %eax	# refList, tmp1957
	cltq
	leaq	0(,%rax,8), %rcx	#, D.21340
	movq	-168(%rbp), %rax	# co_located_mv, tmp1958
	addq	%rcx, %rax	# D.21340, D.21347
	movq	(%rax), %rax	# *_1724, D.21342
	movl	-196(%rbp), %ecx	# opic_block_x, tmp1959
	movslq	%ecx, %rcx	# tmp1959, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rax	# D.21340, D.21342
	movq	(%rax), %rax	# *_1728, D.21343
	movl	-204(%rbp), %ecx	# opic_block_y, tmp1960
	movslq	%ecx, %rcx	# tmp1960, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1732, D.21344
	addq	$2, %rax	#, D.21344
	movzwl	(%rax), %eax	# *_1734, D.21345
	cwtl
	imull	-180(%rbp), %eax	# mv_scale, D.21339
	subl	$-128, %eax	#, D.21339
	sarl	$8, %eax	#, D.21339
	movw	%ax, (%rdx)	# D.21345, *_1721
	.loc 1 3601 0
	movl	-224(%rbp), %eax	# block_x, tmp1961
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1962
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1743, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1963
	movslq	%edx, %rdx	# tmp1963, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1747, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1749, D.21342
	movq	(%rax), %rax	# *_1750, D.21343
	movq	(%rax), %rax	# *_1751, D.21344
	movl	-180(%rbp), %edx	# mv_scale, tmp1964
	leal	-256(%rdx), %esi	#, D.21339
	movl	-188(%rbp), %edx	# refList, tmp1965
	movslq	%edx, %rdx	# tmp1965, D.21340
	leaq	0(,%rdx,8), %rcx	#, D.21340
	movq	-168(%rbp), %rdx	# co_located_mv, tmp1966
	addq	%rcx, %rdx	# D.21340, D.21347
	movq	(%rdx), %rdx	# *_1756, D.21342
	movl	-196(%rbp), %ecx	# opic_block_x, tmp1967
	movslq	%ecx, %rcx	# tmp1967, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rdx	# D.21340, D.21342
	movq	(%rdx), %rdx	# *_1760, D.21343
	movl	-204(%rbp), %ecx	# opic_block_y, tmp1968
	movslq	%ecx, %rcx	# tmp1968, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rdx	# D.21340, D.21343
	movq	(%rdx), %rdx	# *_1764, D.21344
	movzwl	(%rdx), %edx	# *_1765, D.21345
	movswl	%dx, %edx	# D.21345, D.21339
	imull	%esi, %edx	# D.21339, D.21339
	subl	$-128, %edx	#, D.21339
	sarl	$8, %edx	#, D.21339
	movw	%dx, (%rax)	# D.21345, *_1752
	.loc 1 3602 0
	movl	-224(%rbp), %eax	# block_x, tmp1969
	cltq
	leaq	0(,%rax,8), %rdx	#, D.21340
	movq	-144(%rbp), %rax	# all_mvs, tmp1970
	addq	%rdx, %rax	# D.21340, D.21352
	movq	(%rax), %rax	# *_1774, D.21353
	movl	-220(%rbp), %edx	# block_y, tmp1971
	movslq	%edx, %rdx	# tmp1971, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21353
	movq	(%rax), %rax	# *_1778, D.21347
	addq	$8, %rax	#, D.21347
	movq	(%rax), %rax	# *_1780, D.21342
	movq	(%rax), %rax	# *_1781, D.21343
	movq	(%rax), %rax	# *_1782, D.21344
	leaq	2(%rax), %rdx	#, D.21344
	movl	-180(%rbp), %eax	# mv_scale, tmp1972
	leal	-256(%rax), %esi	#, D.21339
	movl	-188(%rbp), %eax	# refList, tmp1973
	cltq
	leaq	0(,%rax,8), %rcx	#, D.21340
	movq	-168(%rbp), %rax	# co_located_mv, tmp1974
	addq	%rcx, %rax	# D.21340, D.21347
	movq	(%rax), %rax	# *_1788, D.21342
	movl	-196(%rbp), %ecx	# opic_block_x, tmp1975
	movslq	%ecx, %rcx	# tmp1975, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rax	# D.21340, D.21342
	movq	(%rax), %rax	# *_1792, D.21343
	movl	-204(%rbp), %ecx	# opic_block_y, tmp1976
	movslq	%ecx, %rcx	# tmp1976, D.21340
	salq	$3, %rcx	#, D.21340
	addq	%rcx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1796, D.21344
	addq	$2, %rax	#, D.21344
	movzwl	(%rax), %eax	# *_1798, D.21345
	cwtl
	imull	%esi, %eax	# D.21339, D.21339
	subl	$-128, %eax	#, D.21339
	sarl	$8, %eax	#, D.21339
	movw	%ax, (%rdx)	# D.21345, *_1784
.L1106:
	.loc 1 3604 0 discriminator 1
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1912
	movq	(%rax), %rax	# *direct_ref_idx.1912_1805, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1977
	movslq	%edx, %rdx	# tmp1977, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1809, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1978
	movslq	%edx, %rdx	# tmp1978, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rax, %rdx	# D.21344, D.21344
	movl	-216(%rbp), %eax	# mapped_idx, tmp1979
	movw	%ax, (%rdx)	# D.21345, *_1813
	.loc 1 3605 0 discriminator 1
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1913
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1816, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1980
	movslq	%edx, %rdx	# tmp1980, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1820, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1981
	movslq	%edx, %rdx	# tmp1981, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$0, (%rax)	#, *_1824
	.loc 1 3606 0 discriminator 1
	movq	direct_pdir(%rip), %rax	# direct_pdir, direct_pdir.1914
	movl	-200(%rbp), %edx	# pic_block_x, tmp1982
	movslq	%edx, %rdx	# tmp1982, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1828, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1983
	movslq	%edx, %rdx	# tmp1983, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$2, (%rax)	#, *_1832
	jmp	.L1099	#
.L1104:
	.loc 1 3610 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1915
	movq	(%rax), %rax	# *direct_ref_idx.1915_1833, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1984
	movslq	%edx, %rdx	# tmp1984, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1837, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1985
	movslq	%edx, %rdx	# tmp1985, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$-1, (%rax)	#, *_1841
	.loc 1 3611 0
	movq	direct_ref_idx(%rip), %rax	# direct_ref_idx, direct_ref_idx.1916
	addq	$8, %rax	#, D.21342
	movq	(%rax), %rax	# *_1843, D.21343
	movl	-200(%rbp), %edx	# pic_block_x, tmp1986
	movslq	%edx, %rdx	# tmp1986, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1847, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1987
	movslq	%edx, %rdx	# tmp1987, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$-1, (%rax)	#, *_1851
	.loc 1 3612 0
	movq	direct_pdir(%rip), %rax	# direct_pdir, direct_pdir.1917
	movl	-200(%rbp), %edx	# pic_block_x, tmp1988
	movslq	%edx, %rdx	# tmp1988, D.21340
	salq	$3, %rdx	#, D.21340
	addq	%rdx, %rax	# D.21340, D.21343
	movq	(%rax), %rax	# *_1855, D.21344
	movl	-208(%rbp), %edx	# pic_block_y, tmp1989
	movslq	%edx, %rdx	# tmp1989, D.21340
	addq	%rdx, %rdx	# D.21340
	addq	%rdx, %rax	# D.21340, D.21344
	movw	$-1, (%rax)	#, *_1859
.L1099:
.LBE7:
.LBE6:
	.loc 1 3538 0
	addl	$1, -224(%rbp)	#, block_x
.L1093:
	.loc 1 3538 0 is_stmt 0 discriminator 1
	cmpl	$3, -224(%rbp)	#, block_x
	jle	.L1107	#,
	.loc 1 3533 0 is_stmt 1
	addl	$1, -220(%rbp)	#, block_y
.L1092:
	.loc 1 3533 0 is_stmt 0 discriminator 1
	cmpl	$3, -220(%rbp)	#, block_y
	jle	.L1108	#,
.L960:
	.loc 1 3618 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE26:
	.size	Get_Direct_Motion_Vectors, .-Get_Direct_Motion_Vectors
	.globl	sign
	.type	sign, @function
sign:
.LFB27:
	.loc 1 3627 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movl	%edi, -20(%rbp)	# a, a
	movl	%esi, -24(%rbp)	# b, b
	.loc 1 3629 0
	movl	-20(%rbp), %eax	# a, tmp62
	sarl	$31, %eax	#, tmp61
	movl	%eax, %edx	# tmp61, tmp64
	xorl	-20(%rbp), %edx	# a, tmp64
	subl	%eax, %edx	# tmp61, tmp65
	movl	%edx, %eax	# tmp65, tmp65
	movl	%eax, -4(%rbp)	# tmp65, x
	.loc 1 3630 0
	cmpl	$0, -24(%rbp)	#, b
	js	.L1110	#,
	.loc 1 3631 0
	movl	-4(%rbp), %eax	# x, D.21359
	jmp	.L1111	#
.L1110:
	.loc 1 3633 0
	movl	-4(%rbp), %eax	# x, tmp66
	negl	%eax	# D.21359
.L1111:
	.loc 1 3634 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE27:
	.size	sign, .-sign
	.data
	.align 32
	.type	by0.6461, @object
	.size	by0.6461, 80
by0.6461:
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2
	.long	2
	.align 32
	.type	bx0.6460, @object
	.size	bx0.6460, 80
bx0.6460:
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2
	.long	0
	.long	0
	.long	0
	.long	2
	.long	0
	.long	2
	.align 32
	.type	orig_pic.6526, @object
	.size	orig_pic.6526, 128
orig_pic.6526:
	.quad	orig_val.6525
	.quad	orig_val.6525+32
	.quad	orig_val.6525+64
	.quad	orig_val.6525+96
	.quad	orig_val.6525+128
	.quad	orig_val.6525+160
	.quad	orig_val.6525+192
	.quad	orig_val.6525+224
	.quad	orig_val.6525+256
	.quad	orig_val.6525+288
	.quad	orig_val.6525+320
	.quad	orig_val.6525+352
	.quad	orig_val.6525+384
	.quad	orig_val.6525+416
	.quad	orig_val.6525+448
	.quad	orig_val.6525+480
	.local	orig_val.6525
	.comm	orig_val.6525,512,32
	.align 32
	.type	by0.6611, @object
	.size	by0.6611, 80
by0.6611:
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2
	.long	2
	.align 32
	.type	bx0.6610, @object
	.size	bx0.6610, 80
bx0.6610:
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2
	.long	0
	.long	0
	.long	0
	.long	2
	.long	0
	.long	2
	.align 32
	.type	by0.6785, @object
	.size	by0.6785, 80
by0.6785:
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2
	.long	2
	.align 32
	.type	bx0.6784, @object
	.size	bx0.6784, 80
bx0.6784:
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2
	.long	0
	.long	0
	.long	0
	.long	2
	.long	0
	.long	2
	.section	.rodata
	.align 8
.LC6:
	.long	4277811695
	.long	1072049730
	.align 8
.LC7:
	.long	3654794683
	.long	1037794527
	.align 8
.LC13:
	.long	0
	.long	1089470464
	.align 8
.LC14:
	.long	0
	.long	1071644672
	.align 8
.LC15:
	.long	0
	.long	1072693248
	.align 8
.LC16:
	.long	0
	.long	1073741824
	.align 4
.LC17:
	.long	1065353216
	.align 8
.LC18:
	.long	0
	.long	1075838976
	.align 8
.LC19:
	.long	2446413372
	.long	1071644252
	.text
.Letext0:
	.file 2 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 3 "/usr/include/time.h"
	.file 4 "/usr/include/x86_64-linux-gnu/sys/types.h"
	.file 5 "defines.h"
	.file 6 "parsetcommon.h"
	.file 7 "global.h"
	.file 8 "mbuffer.h"
	.file 9 "/usr/include/x86_64-linux-gnu/sys/timeb.h"
	.file 10 "image.h"
	.file 11 "mv-search.h"
	.file 12 "fast_me.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x510f
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF842
	.byte	0x1
	.long	.LASF843
	.long	.LASF844
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF0
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.long	.LASF1
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.long	.LASF2
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.long	.LASF3
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x4
	.long	0x34
	.long	0x75
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.byte	0
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF7
	.uleb128 0x6
	.long	.LASF10
	.byte	0x2
	.byte	0x94
	.long	0x5e
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF8
	.uleb128 0x7
	.byte	0x8
	.long	0x34
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF9
	.uleb128 0x6
	.long	.LASF11
	.byte	0x3
	.byte	0x4b
	.long	0x7c
	.uleb128 0x6
	.long	.LASF12
	.byte	0x4
	.byte	0xc5
	.long	0x5e
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF13
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.long	.LASF14
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.long	.LASF15
	.uleb128 0x6
	.long	.LASF16
	.byte	0x5
	.byte	0x1e
	.long	0x3b
	.uleb128 0x8
	.byte	0x4
	.byte	0x6
	.byte	0x2a
	.long	0xe6
	.uleb128 0x9
	.long	.LASF17
	.sleb128 0
	.uleb128 0x9
	.long	.LASF18
	.sleb128 1
	.byte	0
	.uleb128 0x6
	.long	.LASF19
	.byte	0x6
	.byte	0x2d
	.long	0xd1
	.uleb128 0xa
	.byte	0xf0
	.byte	0x6
	.byte	0x67
	.long	0x262
	.uleb128 0xb
	.long	.LASF20
	.byte	0x6
	.byte	0x69
	.long	0xe6
	.byte	0
	.uleb128 0xb
	.long	.LASF21
	.byte	0x6
	.byte	0x6a
	.long	0x49
	.byte	0x4
	.uleb128 0xb
	.long	.LASF22
	.byte	0x6
	.byte	0x6b
	.long	0x49
	.byte	0x8
	.uleb128 0xb
	.long	.LASF23
	.byte	0x6
	.byte	0x6c
	.long	0xe6
	.byte	0xc
	.uleb128 0xb
	.long	.LASF24
	.byte	0x6
	.byte	0x6e
	.long	0xe6
	.byte	0x10
	.uleb128 0xb
	.long	.LASF25
	.byte	0x6
	.byte	0x6f
	.long	0xe6
	.byte	0x14
	.uleb128 0xb
	.long	.LASF26
	.byte	0x6
	.byte	0x70
	.long	0x262
	.byte	0x18
	.uleb128 0xb
	.long	.LASF27
	.byte	0x6
	.byte	0x73
	.long	0xe6
	.byte	0x38
	.uleb128 0xb
	.long	.LASF28
	.byte	0x6
	.byte	0x74
	.long	0x49
	.byte	0x3c
	.uleb128 0xb
	.long	.LASF29
	.byte	0x6
	.byte	0x75
	.long	0x49
	.byte	0x40
	.uleb128 0xb
	.long	.LASF30
	.byte	0x6
	.byte	0x77
	.long	0x272
	.byte	0x44
	.uleb128 0xb
	.long	.LASF31
	.byte	0x6
	.byte	0x79
	.long	0x272
	.byte	0x64
	.uleb128 0xb
	.long	.LASF32
	.byte	0x6
	.byte	0x7a
	.long	0x272
	.byte	0x84
	.uleb128 0xb
	.long	.LASF33
	.byte	0x6
	.byte	0x7c
	.long	0xe6
	.byte	0xa4
	.uleb128 0xb
	.long	.LASF34
	.byte	0x6
	.byte	0x7d
	.long	0x49
	.byte	0xa8
	.uleb128 0xb
	.long	.LASF35
	.byte	0x6
	.byte	0x7f
	.long	0x49
	.byte	0xac
	.uleb128 0xb
	.long	.LASF36
	.byte	0x6
	.byte	0x80
	.long	0x282
	.byte	0xb0
	.uleb128 0xb
	.long	.LASF37
	.byte	0x6
	.byte	0x82
	.long	0x34
	.byte	0xb8
	.uleb128 0xb
	.long	.LASF38
	.byte	0x6
	.byte	0x83
	.long	0x34
	.byte	0xbc
	.uleb128 0xb
	.long	.LASF39
	.byte	0x6
	.byte	0x84
	.long	0xe6
	.byte	0xc0
	.uleb128 0xb
	.long	.LASF40
	.byte	0x6
	.byte	0x85
	.long	0x49
	.byte	0xc4
	.uleb128 0xb
	.long	.LASF41
	.byte	0x6
	.byte	0x86
	.long	0x34
	.byte	0xc8
	.uleb128 0xb
	.long	.LASF42
	.byte	0x6
	.byte	0x87
	.long	0x34
	.byte	0xcc
	.uleb128 0xb
	.long	.LASF43
	.byte	0x6
	.byte	0x88
	.long	0x34
	.byte	0xd0
	.uleb128 0xb
	.long	.LASF44
	.byte	0x6
	.byte	0x8a
	.long	0x34
	.byte	0xd4
	.uleb128 0xb
	.long	.LASF45
	.byte	0x6
	.byte	0x8b
	.long	0x34
	.byte	0xd8
	.uleb128 0xb
	.long	.LASF46
	.byte	0x6
	.byte	0x8d
	.long	0xe6
	.byte	0xdc
	.uleb128 0xb
	.long	.LASF47
	.byte	0x6
	.byte	0x8e
	.long	0xe6
	.byte	0xe0
	.uleb128 0xb
	.long	.LASF48
	.byte	0x6
	.byte	0x8f
	.long	0xe6
	.byte	0xe4
	.uleb128 0xb
	.long	.LASF49
	.byte	0x6
	.byte	0x90
	.long	0xe6
	.byte	0xe8
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0x272
	.uleb128 0x5
	.long	0x75
	.byte	0x7
	.byte	0
	.uleb128 0x4
	.long	0x49
	.long	0x282
	.uleb128 0x5
	.long	0x75
	.byte	0x7
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0xc6
	.uleb128 0x6
	.long	.LASF50
	.byte	0x6
	.byte	0x91
	.long	0xf1
	.uleb128 0x4
	.long	0x34
	.long	0x2a3
	.uleb128 0x5
	.long	0x75
	.byte	0xff
	.byte	0
	.uleb128 0x6
	.long	.LASF51
	.byte	0x7
	.byte	0x3e
	.long	0xa6
	.uleb128 0x8
	.byte	0x4
	.byte	0x7
	.byte	0x70
	.long	0x2c9
	.uleb128 0x9
	.long	.LASF52
	.sleb128 0
	.uleb128 0x9
	.long	.LASF53
	.sleb128 1
	.uleb128 0x9
	.long	.LASF54
	.sleb128 2
	.byte	0
	.uleb128 0x8
	.byte	0x4
	.byte	0x7
	.byte	0x9b
	.long	0x308
	.uleb128 0x9
	.long	.LASF55
	.sleb128 0
	.uleb128 0x9
	.long	.LASF56
	.sleb128 1
	.uleb128 0x9
	.long	.LASF57
	.sleb128 2
	.uleb128 0x9
	.long	.LASF58
	.sleb128 3
	.uleb128 0x9
	.long	.LASF59
	.sleb128 4
	.uleb128 0x9
	.long	.LASF60
	.sleb128 5
	.uleb128 0x9
	.long	.LASF61
	.sleb128 6
	.uleb128 0x9
	.long	.LASF62
	.sleb128 7
	.uleb128 0x9
	.long	.LASF63
	.sleb128 8
	.byte	0
	.uleb128 0x8
	.byte	0x4
	.byte	0x7
	.byte	0xba
	.long	0x323
	.uleb128 0x9
	.long	.LASF64
	.sleb128 0
	.uleb128 0x9
	.long	.LASF65
	.sleb128 1
	.uleb128 0x9
	.long	.LASF66
	.sleb128 2
	.byte	0
	.uleb128 0x6
	.long	.LASF67
	.byte	0x7
	.byte	0xbe
	.long	0x308
	.uleb128 0x8
	.byte	0x4
	.byte	0x7
	.byte	0xc1
	.long	0x355
	.uleb128 0x9
	.long	.LASF68
	.sleb128 0
	.uleb128 0x9
	.long	.LASF69
	.sleb128 1
	.uleb128 0x9
	.long	.LASF70
	.sleb128 2
	.uleb128 0x9
	.long	.LASF71
	.sleb128 3
	.uleb128 0x9
	.long	.LASF72
	.sleb128 4
	.byte	0
	.uleb128 0xa
	.byte	0x68
	.byte	0x7
	.byte	0xcf
	.long	0x445
	.uleb128 0xb
	.long	.LASF73
	.byte	0x7
	.byte	0xd1
	.long	0x49
	.byte	0
	.uleb128 0xb
	.long	.LASF74
	.byte	0x7
	.byte	0xd1
	.long	0x49
	.byte	0x4
	.uleb128 0xb
	.long	.LASF75
	.byte	0x7
	.byte	0xd2
	.long	0x49
	.byte	0x8
	.uleb128 0xb
	.long	.LASF76
	.byte	0x7
	.byte	0xd3
	.long	0x49
	.byte	0xc
	.uleb128 0xb
	.long	.LASF77
	.byte	0x7
	.byte	0xd4
	.long	0x49
	.byte	0x10
	.uleb128 0xb
	.long	.LASF78
	.byte	0x7
	.byte	0xd5
	.long	0x282
	.byte	0x18
	.uleb128 0xb
	.long	.LASF79
	.byte	0x7
	.byte	0xd6
	.long	0x8e
	.byte	0x20
	.uleb128 0xb
	.long	.LASF80
	.byte	0x7
	.byte	0xd9
	.long	0x49
	.byte	0x28
	.uleb128 0xb
	.long	.LASF81
	.byte	0x7
	.byte	0xd9
	.long	0x49
	.byte	0x2c
	.uleb128 0xb
	.long	.LASF82
	.byte	0x7
	.byte	0xda
	.long	0x49
	.byte	0x30
	.uleb128 0xb
	.long	.LASF83
	.byte	0x7
	.byte	0xdb
	.long	0x49
	.byte	0x34
	.uleb128 0xb
	.long	.LASF84
	.byte	0x7
	.byte	0xdc
	.long	0x49
	.byte	0x38
	.uleb128 0xb
	.long	.LASF85
	.byte	0x7
	.byte	0xdd
	.long	0x282
	.byte	0x40
	.uleb128 0xb
	.long	.LASF86
	.byte	0x7
	.byte	0xde
	.long	0x8e
	.byte	0x48
	.uleb128 0xc
	.string	"C"
	.byte	0x7
	.byte	0xdf
	.long	0x34
	.byte	0x50
	.uleb128 0xc
	.string	"CS"
	.byte	0x7
	.byte	0xdf
	.long	0x34
	.byte	0x54
	.uleb128 0xc
	.string	"E"
	.byte	0x7
	.byte	0xe0
	.long	0x34
	.byte	0x58
	.uleb128 0xc
	.string	"ES"
	.byte	0x7
	.byte	0xe0
	.long	0x34
	.byte	0x5c
	.uleb128 0xc
	.string	"B"
	.byte	0x7
	.byte	0xe1
	.long	0x34
	.byte	0x60
	.uleb128 0xc
	.string	"BS"
	.byte	0x7
	.byte	0xe1
	.long	0x34
	.byte	0x64
	.byte	0
	.uleb128 0x6
	.long	.LASF87
	.byte	0x7
	.byte	0xe2
	.long	0x355
	.uleb128 0x6
	.long	.LASF88
	.byte	0x7
	.byte	0xe4
	.long	0x45b
	.uleb128 0x7
	.byte	0x8
	.long	0x445
	.uleb128 0xa
	.byte	0x10
	.byte	0x7
	.byte	0xe7
	.long	0x48e
	.uleb128 0xb
	.long	.LASF89
	.byte	0x7
	.byte	0xe9
	.long	0x42
	.byte	0
	.uleb128 0xc
	.string	"MPS"
	.byte	0x7
	.byte	0xea
	.long	0x3b
	.byte	0x2
	.uleb128 0xb
	.long	.LASF90
	.byte	0x7
	.byte	0xec
	.long	0x2d
	.byte	0x8
	.byte	0
	.uleb128 0x6
	.long	.LASF91
	.byte	0x7
	.byte	0xee
	.long	0x461
	.uleb128 0xd
	.value	0x5e0
	.byte	0x7
	.value	0x102
	.long	0x505
	.uleb128 0xe
	.long	.LASF92
	.byte	0x7
	.value	0x104
	.long	0x505
	.byte	0
	.uleb128 0xf
	.long	.LASF93
	.byte	0x7
	.value	0x105
	.long	0x51b
	.value	0x210
	.uleb128 0xf
	.long	.LASF94
	.byte	0x7
	.value	0x106
	.long	0x531
	.value	0x330
	.uleb128 0xf
	.long	.LASF95
	.byte	0x7
	.value	0x107
	.long	0x547
	.value	0x470
	.uleb128 0xf
	.long	.LASF96
	.byte	0x7
	.value	0x108
	.long	0x55d
	.value	0x530
	.uleb128 0xf
	.long	.LASF97
	.byte	0x7
	.value	0x109
	.long	0x55d
	.value	0x570
	.uleb128 0xf
	.long	.LASF98
	.byte	0x7
	.value	0x10a
	.long	0x56d
	.value	0x5b0
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x51b
	.uleb128 0x5
	.long	0x75
	.byte	0x2
	.uleb128 0x5
	.long	0x75
	.byte	0xa
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x531
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.uleb128 0x5
	.long	0x75
	.byte	0x8
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x547
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.uleb128 0x5
	.long	0x75
	.byte	0x9
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x55d
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.uleb128 0x5
	.long	0x75
	.byte	0x5
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x56d
	.uleb128 0x5
	.long	0x75
	.byte	0x3
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x57d
	.uleb128 0x5
	.long	0x75
	.byte	0x2
	.byte	0
	.uleb128 0x10
	.long	.LASF99
	.byte	0x7
	.value	0x10c
	.long	0x499
	.uleb128 0xd
	.value	0x2f60
	.byte	0x7
	.value	0x119
	.long	0x61d
	.uleb128 0xe
	.long	.LASF100
	.byte	0x7
	.value	0x11b
	.long	0x61d
	.byte	0
	.uleb128 0xe
	.long	.LASF101
	.byte	0x7
	.value	0x11c
	.long	0x55d
	.byte	0x20
	.uleb128 0xe
	.long	.LASF102
	.byte	0x7
	.value	0x11d
	.long	0x62d
	.byte	0x60
	.uleb128 0xf
	.long	.LASF103
	.byte	0x7
	.value	0x11e
	.long	0x643
	.value	0x120
	.uleb128 0xf
	.long	.LASF104
	.byte	0x7
	.value	0x11f
	.long	0x659
	.value	0x3a0
	.uleb128 0xf
	.long	.LASF105
	.byte	0x7
	.value	0x120
	.long	0x659
	.value	0xd00
	.uleb128 0xf
	.long	.LASF106
	.byte	0x7
	.value	0x121
	.long	0x66f
	.value	0x1660
	.uleb128 0xf
	.long	.LASF107
	.byte	0x7
	.value	0x122
	.long	0x66f
	.value	0x1980
	.uleb128 0xf
	.long	.LASF108
	.byte	0x7
	.value	0x123
	.long	0x659
	.value	0x1ca0
	.uleb128 0xf
	.long	.LASF109
	.byte	0x7
	.value	0x124
	.long	0x659
	.value	0x2600
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x62d
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x643
	.uleb128 0x5
	.long	0x75
	.byte	0x2
	.uleb128 0x5
	.long	0x75
	.byte	0x3
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x659
	.uleb128 0x5
	.long	0x75
	.byte	0x9
	.uleb128 0x5
	.long	0x75
	.byte	0x3
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x66f
	.uleb128 0x5
	.long	0x75
	.byte	0x9
	.uleb128 0x5
	.long	0x75
	.byte	0xe
	.byte	0
	.uleb128 0x4
	.long	0x48e
	.long	0x685
	.uleb128 0x5
	.long	0x75
	.byte	0x9
	.uleb128 0x5
	.long	0x75
	.byte	0x4
	.byte	0
	.uleb128 0x10
	.long	.LASF110
	.byte	0x7
	.value	0x125
	.long	0x589
	.uleb128 0x11
	.long	.LASF116
	.byte	0x18
	.byte	0x7
	.value	0x129
	.long	0x6e9
	.uleb128 0xe
	.long	.LASF111
	.byte	0x7
	.value	0x12b
	.long	0x34
	.byte	0
	.uleb128 0xe
	.long	.LASF112
	.byte	0x7
	.value	0x12c
	.long	0x34
	.byte	0x4
	.uleb128 0x12
	.string	"x"
	.byte	0x7
	.value	0x12d
	.long	0x34
	.byte	0x8
	.uleb128 0x12
	.string	"y"
	.byte	0x7
	.value	0x12e
	.long	0x34
	.byte	0xc
	.uleb128 0xe
	.long	.LASF113
	.byte	0x7
	.value	0x12f
	.long	0x34
	.byte	0x10
	.uleb128 0xe
	.long	.LASF114
	.byte	0x7
	.value	0x130
	.long	0x34
	.byte	0x14
	.byte	0
	.uleb128 0x10
	.long	.LASF115
	.byte	0x7
	.value	0x131
	.long	0x691
	.uleb128 0x11
	.long	.LASF117
	.byte	0x10
	.byte	0x7
	.value	0x134
	.long	0x72a
	.uleb128 0xe
	.long	.LASF118
	.byte	0x7
	.value	0x136
	.long	0x34
	.byte	0
	.uleb128 0xe
	.long	.LASF119
	.byte	0x7
	.value	0x137
	.long	0x34
	.byte	0x4
	.uleb128 0xe
	.long	.LASF120
	.byte	0x7
	.value	0x138
	.long	0x72a
	.byte	0x8
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x6f5
	.uleb128 0x10
	.long	.LASF121
	.byte	0x7
	.value	0x139
	.long	0x6f5
	.uleb128 0x11
	.long	.LASF122
	.byte	0x20
	.byte	0x7
	.value	0x13c
	.long	0x798
	.uleb128 0xe
	.long	.LASF123
	.byte	0x7
	.value	0x13e
	.long	0x34
	.byte	0
	.uleb128 0xe
	.long	.LASF124
	.byte	0x7
	.value	0x13f
	.long	0x34
	.byte	0x4
	.uleb128 0xe
	.long	.LASF125
	.byte	0x7
	.value	0x140
	.long	0x34
	.byte	0x8
	.uleb128 0xe
	.long	.LASF126
	.byte	0x7
	.value	0x141
	.long	0x34
	.byte	0xc
	.uleb128 0xe
	.long	.LASF127
	.byte	0x7
	.value	0x142
	.long	0x34
	.byte	0x10
	.uleb128 0xe
	.long	.LASF120
	.byte	0x7
	.value	0x143
	.long	0x798
	.byte	0x18
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x73c
	.uleb128 0x10
	.long	.LASF128
	.byte	0x7
	.value	0x144
	.long	0x73c
	.uleb128 0x11
	.long	.LASF129
	.byte	0x30
	.byte	0x7
	.value	0x147
	.long	0x838
	.uleb128 0xe
	.long	.LASF130
	.byte	0x7
	.value	0x149
	.long	0x34
	.byte	0
	.uleb128 0xe
	.long	.LASF131
	.byte	0x7
	.value	0x14a
	.long	0x34
	.byte	0x4
	.uleb128 0xe
	.long	.LASF132
	.byte	0x7
	.value	0x14b
	.long	0x34
	.byte	0x8
	.uleb128 0x12
	.string	"len"
	.byte	0x7
	.value	0x14c
	.long	0x34
	.byte	0xc
	.uleb128 0x12
	.string	"inf"
	.byte	0x7
	.value	0x14d
	.long	0x34
	.byte	0x10
	.uleb128 0xe
	.long	.LASF133
	.byte	0x7
	.value	0x14e
	.long	0x49
	.byte	0x14
	.uleb128 0xe
	.long	.LASF134
	.byte	0x7
	.value	0x14f
	.long	0x34
	.byte	0x18
	.uleb128 0x12
	.string	"k"
	.byte	0x7
	.value	0x150
	.long	0x34
	.byte	0x1c
	.uleb128 0xe
	.long	.LASF135
	.byte	0x7
	.value	0x158
	.long	0x852
	.byte	0x20
	.uleb128 0xe
	.long	.LASF136
	.byte	0x7
	.value	0x15a
	.long	0x86e
	.byte	0x28
	.byte	0
	.uleb128 0x13
	.long	0x852
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x8e
	.uleb128 0x14
	.long	0x8e
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x838
	.uleb128 0x13
	.long	0x868
	.uleb128 0x14
	.long	0x868
	.uleb128 0x14
	.long	0x450
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x7aa
	.uleb128 0x7
	.byte	0x8
	.long	0x858
	.uleb128 0x10
	.long	.LASF137
	.byte	0x7
	.value	0x15c
	.long	0x7aa
	.uleb128 0x15
	.long	.LASF138
	.value	0x278
	.byte	0x7
	.value	0x15f
	.long	0xafa
	.uleb128 0xe
	.long	.LASF139
	.byte	0x7
	.value	0x161
	.long	0x34
	.byte	0
	.uleb128 0xe
	.long	.LASF140
	.byte	0x7
	.value	0x162
	.long	0x34
	.byte	0x4
	.uleb128 0xe
	.long	.LASF141
	.byte	0x7
	.value	0x163
	.long	0x34
	.byte	0x8
	.uleb128 0x12
	.string	"qp"
	.byte	0x7
	.value	0x164
	.long	0x34
	.byte	0xc
	.uleb128 0xe
	.long	.LASF142
	.byte	0x7
	.value	0x165
	.long	0x34
	.byte	0x10
	.uleb128 0xe
	.long	.LASF143
	.byte	0x7
	.value	0x166
	.long	0x262
	.byte	0x14
	.uleb128 0xe
	.long	.LASF144
	.byte	0x7
	.value	0x168
	.long	0xafa
	.byte	0x38
	.uleb128 0xe
	.long	.LASF145
	.byte	0x7
	.value	0x169
	.long	0xafa
	.byte	0x40
	.uleb128 0xe
	.long	.LASF146
	.byte	0x7
	.value	0x16b
	.long	0x34
	.byte	0x48
	.uleb128 0x12
	.string	"mvd"
	.byte	0x7
	.value	0x16c
	.long	0xb00
	.byte	0x4c
	.uleb128 0xf
	.long	.LASF147
	.byte	0x7
	.value	0x16d
	.long	0xb22
	.value	0x14c
	.uleb128 0xf
	.long	.LASF148
	.byte	0x7
	.value	0x16e
	.long	0xb22
	.value	0x18c
	.uleb128 0x16
	.string	"cbp"
	.byte	0x7
	.value	0x16f
	.long	0x34
	.value	0x1cc
	.uleb128 0xf
	.long	.LASF149
	.byte	0x7
	.value	0x170
	.long	0x2a3
	.value	0x1d0
	.uleb128 0xf
	.long	.LASF150
	.byte	0x7
	.value	0x171
	.long	0xb32
	.value	0x1d8
	.uleb128 0xf
	.long	.LASF151
	.byte	0x7
	.value	0x172
	.long	0xb32
	.value	0x1e8
	.uleb128 0xf
	.long	.LASF152
	.byte	0x7
	.value	0x173
	.long	0x2d
	.value	0x1f8
	.uleb128 0xf
	.long	.LASF153
	.byte	0x7
	.value	0x175
	.long	0x34
	.value	0x200
	.uleb128 0xf
	.long	.LASF154
	.byte	0x7
	.value	0x176
	.long	0x34
	.value	0x204
	.uleb128 0xf
	.long	.LASF155
	.byte	0x7
	.value	0x177
	.long	0x34
	.value	0x208
	.uleb128 0xf
	.long	.LASF156
	.byte	0x7
	.value	0x179
	.long	0x34
	.value	0x20c
	.uleb128 0xf
	.long	.LASF157
	.byte	0x7
	.value	0x17a
	.long	0x34
	.value	0x210
	.uleb128 0xf
	.long	.LASF158
	.byte	0x7
	.value	0x17c
	.long	0x34
	.value	0x214
	.uleb128 0xf
	.long	.LASF159
	.byte	0x7
	.value	0x17e
	.long	0x34
	.value	0x218
	.uleb128 0xf
	.long	.LASF160
	.byte	0x7
	.value	0x17e
	.long	0x34
	.value	0x21c
	.uleb128 0xf
	.long	.LASF161
	.byte	0x7
	.value	0x17e
	.long	0x34
	.value	0x220
	.uleb128 0xf
	.long	.LASF162
	.byte	0x7
	.value	0x17e
	.long	0x34
	.value	0x224
	.uleb128 0xf
	.long	.LASF163
	.byte	0x7
	.value	0x17f
	.long	0x34
	.value	0x228
	.uleb128 0xf
	.long	.LASF164
	.byte	0x7
	.value	0x17f
	.long	0x34
	.value	0x22c
	.uleb128 0xf
	.long	.LASF165
	.byte	0x7
	.value	0x17f
	.long	0x34
	.value	0x230
	.uleb128 0xf
	.long	.LASF166
	.byte	0x7
	.value	0x17f
	.long	0x34
	.value	0x234
	.uleb128 0xf
	.long	.LASF167
	.byte	0x7
	.value	0x181
	.long	0x34
	.value	0x238
	.uleb128 0xf
	.long	.LASF168
	.byte	0x7
	.value	0x182
	.long	0x34
	.value	0x23c
	.uleb128 0xf
	.long	.LASF169
	.byte	0x7
	.value	0x183
	.long	0x34
	.value	0x240
	.uleb128 0xf
	.long	.LASF170
	.byte	0x7
	.value	0x186
	.long	0x34
	.value	0x244
	.uleb128 0xf
	.long	.LASF171
	.byte	0x7
	.value	0x18a
	.long	0xbf
	.value	0x248
	.uleb128 0xf
	.long	.LASF172
	.byte	0x7
	.value	0x18b
	.long	0x34
	.value	0x250
	.uleb128 0xf
	.long	.LASF173
	.byte	0x7
	.value	0x18c
	.long	0x34
	.value	0x254
	.uleb128 0xf
	.long	.LASF174
	.byte	0x7
	.value	0x18d
	.long	0x34
	.value	0x258
	.uleb128 0xf
	.long	.LASF175
	.byte	0x7
	.value	0x18e
	.long	0x34
	.value	0x25c
	.uleb128 0xf
	.long	.LASF176
	.byte	0x7
	.value	0x18f
	.long	0x34
	.value	0x260
	.uleb128 0xf
	.long	.LASF177
	.byte	0x7
	.value	0x191
	.long	0x34
	.value	0x264
	.uleb128 0xf
	.long	.LASF178
	.byte	0x7
	.value	0x192
	.long	0x34
	.value	0x268
	.uleb128 0xf
	.long	.LASF179
	.byte	0x7
	.value	0x193
	.long	0x34
	.value	0x26c
	.uleb128 0xf
	.long	.LASF180
	.byte	0x7
	.value	0x195
	.long	0x34
	.value	0x270
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x880
	.uleb128 0x4
	.long	0x34
	.long	0xb22
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.uleb128 0x5
	.long	0x75
	.byte	0x3
	.uleb128 0x5
	.long	0x75
	.byte	0x3
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0xb32
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0xb42
	.uleb128 0x5
	.long	0x75
	.byte	0x3
	.byte	0
	.uleb128 0x10
	.long	.LASF181
	.byte	0x7
	.value	0x196
	.long	0x880
	.uleb128 0x17
	.byte	0x30
	.byte	0x7
	.value	0x19b
	.long	0xbe7
	.uleb128 0xe
	.long	.LASF182
	.byte	0x7
	.value	0x19d
	.long	0x34
	.byte	0
	.uleb128 0xe
	.long	.LASF183
	.byte	0x7
	.value	0x19e
	.long	0x34
	.byte	0x4
	.uleb128 0xe
	.long	.LASF184
	.byte	0x7
	.value	0x19f
	.long	0xc6
	.byte	0x8
	.uleb128 0xe
	.long	.LASF185
	.byte	0x7
	.value	0x1a0
	.long	0x34
	.byte	0xc
	.uleb128 0xe
	.long	.LASF186
	.byte	0x7
	.value	0x1a1
	.long	0x34
	.byte	0x10
	.uleb128 0xe
	.long	.LASF187
	.byte	0x7
	.value	0x1a2
	.long	0xc6
	.byte	0x14
	.uleb128 0xe
	.long	.LASF188
	.byte	0x7
	.value	0x1a4
	.long	0xc6
	.byte	0x15
	.uleb128 0xe
	.long	.LASF189
	.byte	0x7
	.value	0x1a5
	.long	0x34
	.byte	0x18
	.uleb128 0xe
	.long	.LASF190
	.byte	0x7
	.value	0x1a6
	.long	0x34
	.byte	0x1c
	.uleb128 0xe
	.long	.LASF191
	.byte	0x7
	.value	0x1a8
	.long	0x282
	.byte	0x20
	.uleb128 0xe
	.long	.LASF192
	.byte	0x7
	.value	0x1a9
	.long	0x34
	.byte	0x28
	.byte	0
	.uleb128 0x10
	.long	.LASF193
	.byte	0x7
	.value	0x1ab
	.long	0xb4e
	.uleb128 0x11
	.long	.LASF194
	.byte	0x78
	.byte	0x7
	.value	0x1ae
	.long	0xc28
	.uleb128 0xe
	.long	.LASF195
	.byte	0x7
	.value	0x1b1
	.long	0xc28
	.byte	0
	.uleb128 0xe
	.long	.LASF196
	.byte	0x7
	.value	0x1b2
	.long	0x445
	.byte	0x8
	.uleb128 0xe
	.long	.LASF197
	.byte	0x7
	.value	0x1b4
	.long	0xc4e
	.byte	0x70
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0xbe7
	.uleb128 0x18
	.long	0x34
	.long	0xc42
	.uleb128 0x14
	.long	0xc42
	.uleb128 0x14
	.long	0xc48
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x874
	.uleb128 0x7
	.byte	0x8
	.long	0xbf3
	.uleb128 0x7
	.byte	0x8
	.long	0xc2e
	.uleb128 0x10
	.long	.LASF198
	.byte	0x7
	.value	0x1b8
	.long	0xbf3
	.uleb128 0x17
	.byte	0x98
	.byte	0x7
	.value	0x1bb
	.long	0xd6d
	.uleb128 0xe
	.long	.LASF199
	.byte	0x7
	.value	0x1bd
	.long	0x34
	.byte	0
	.uleb128 0x12
	.string	"qp"
	.byte	0x7
	.value	0x1be
	.long	0x34
	.byte	0x4
	.uleb128 0xe
	.long	.LASF200
	.byte	0x7
	.value	0x1bf
	.long	0x34
	.byte	0x8
	.uleb128 0xe
	.long	.LASF201
	.byte	0x7
	.value	0x1c0
	.long	0x34
	.byte	0xc
	.uleb128 0xe
	.long	.LASF202
	.byte	0x7
	.value	0x1c1
	.long	0x34
	.byte	0x10
	.uleb128 0xe
	.long	.LASF203
	.byte	0x7
	.value	0x1c2
	.long	0x34
	.byte	0x14
	.uleb128 0xe
	.long	.LASF204
	.byte	0x7
	.value	0x1c3
	.long	0xd6d
	.byte	0x18
	.uleb128 0xe
	.long	.LASF205
	.byte	0x7
	.value	0x1c4
	.long	0xd73
	.byte	0x20
	.uleb128 0xe
	.long	.LASF206
	.byte	0x7
	.value	0x1c5
	.long	0xd79
	.byte	0x28
	.uleb128 0xe
	.long	.LASF207
	.byte	0x7
	.value	0x1c8
	.long	0xd7f
	.byte	0x30
	.uleb128 0xe
	.long	.LASF208
	.byte	0x7
	.value	0x1ca
	.long	0x34
	.byte	0x38
	.uleb128 0xe
	.long	.LASF209
	.byte	0x7
	.value	0x1cb
	.long	0x8e
	.byte	0x40
	.uleb128 0xe
	.long	.LASF210
	.byte	0x7
	.value	0x1cc
	.long	0x8e
	.byte	0x48
	.uleb128 0xe
	.long	.LASF211
	.byte	0x7
	.value	0x1cd
	.long	0x8e
	.byte	0x50
	.uleb128 0xe
	.long	.LASF212
	.byte	0x7
	.value	0x1ce
	.long	0x34
	.byte	0x58
	.uleb128 0xe
	.long	.LASF213
	.byte	0x7
	.value	0x1cf
	.long	0x8e
	.byte	0x60
	.uleb128 0xe
	.long	.LASF214
	.byte	0x7
	.value	0x1d0
	.long	0x8e
	.byte	0x68
	.uleb128 0xe
	.long	.LASF215
	.byte	0x7
	.value	0x1d1
	.long	0x8e
	.byte	0x70
	.uleb128 0xe
	.long	.LASF216
	.byte	0x7
	.value	0x1d3
	.long	0xd94
	.byte	0x78
	.uleb128 0xe
	.long	.LASF217
	.byte	0x7
	.value	0x1d5
	.long	0xd9a
	.byte	0x80
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0xc54
	.uleb128 0x7
	.byte	0x8
	.long	0x57d
	.uleb128 0x7
	.byte	0x8
	.long	0x685
	.uleb128 0x7
	.byte	0x8
	.long	0x730
	.uleb128 0x18
	.long	0xe6
	.long	0xd94
	.uleb128 0x14
	.long	0x34
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0xd85
	.uleb128 0x4
	.long	0x34
	.long	0xdb0
	.uleb128 0x5
	.long	0x75
	.byte	0x2
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.byte	0
	.uleb128 0x10
	.long	.LASF218
	.byte	0x7
	.value	0x1d7
	.long	0xc60
	.uleb128 0xd
	.value	0x338
	.byte	0x7
	.value	0x1db
	.long	0xe26
	.uleb128 0xe
	.long	.LASF219
	.byte	0x7
	.value	0x1dd
	.long	0x34
	.byte	0
	.uleb128 0xe
	.long	.LASF220
	.byte	0x7
	.value	0x1de
	.long	0x34
	.byte	0x4
	.uleb128 0xe
	.long	.LASF221
	.byte	0x7
	.value	0x1df
	.long	0xe26
	.byte	0x8
	.uleb128 0xf
	.long	.LASF222
	.byte	0x7
	.value	0x1e0
	.long	0x34
	.value	0x328
	.uleb128 0xf
	.long	.LASF223
	.byte	0x7
	.value	0x1e1
	.long	0xb8
	.value	0x32c
	.uleb128 0xf
	.long	.LASF224
	.byte	0x7
	.value	0x1e2
	.long	0xb8
	.value	0x330
	.uleb128 0xf
	.long	.LASF225
	.byte	0x7
	.value	0x1e3
	.long	0xb8
	.value	0x334
	.byte	0
	.uleb128 0x4
	.long	0xe36
	.long	0xe36
	.uleb128 0x5
	.long	0x75
	.byte	0x63
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0xdb0
	.uleb128 0x10
	.long	.LASF226
	.byte	0x7
	.value	0x1e4
	.long	0xdbc
	.uleb128 0x7
	.byte	0x8
	.long	0x8e
	.uleb128 0x7
	.byte	0x8
	.long	0xe54
	.uleb128 0x7
	.byte	0x8
	.long	0xe5a
	.uleb128 0x7
	.byte	0x8
	.long	0x42
	.uleb128 0x7
	.byte	0x8
	.long	0x282
	.uleb128 0xd
	.value	0xe08
	.byte	0x7
	.value	0x295
	.long	0x166e
	.uleb128 0xe
	.long	.LASF227
	.byte	0x7
	.value	0x297
	.long	0x34
	.byte	0
	.uleb128 0xe
	.long	.LASF228
	.byte	0x7
	.value	0x298
	.long	0x34
	.byte	0x4
	.uleb128 0xe
	.long	.LASF229
	.byte	0x7
	.value	0x29a
	.long	0x34
	.byte	0x8
	.uleb128 0x12
	.string	"qp0"
	.byte	0x7
	.value	0x29b
	.long	0x34
	.byte	0xc
	.uleb128 0x12
	.string	"qpN"
	.byte	0x7
	.value	0x29c
	.long	0x34
	.byte	0x10
	.uleb128 0xe
	.long	.LASF230
	.byte	0x7
	.value	0x29d
	.long	0x34
	.byte	0x14
	.uleb128 0xe
	.long	.LASF231
	.byte	0x7
	.value	0x29e
	.long	0x34
	.byte	0x18
	.uleb128 0xe
	.long	.LASF232
	.byte	0x7
	.value	0x2a0
	.long	0x34
	.byte	0x1c
	.uleb128 0xe
	.long	.LASF233
	.byte	0x7
	.value	0x2a1
	.long	0x34
	.byte	0x20
	.uleb128 0xe
	.long	.LASF234
	.byte	0x7
	.value	0x2a4
	.long	0x34
	.byte	0x24
	.uleb128 0xe
	.long	.LASF235
	.byte	0x7
	.value	0x2a5
	.long	0x34
	.byte	0x28
	.uleb128 0xe
	.long	.LASF236
	.byte	0x7
	.value	0x2a6
	.long	0x34
	.byte	0x2c
	.uleb128 0xe
	.long	.LASF237
	.byte	0x7
	.value	0x2a7
	.long	0x34
	.byte	0x30
	.uleb128 0xe
	.long	.LASF238
	.byte	0x7
	.value	0x2a8
	.long	0x34
	.byte	0x34
	.uleb128 0xe
	.long	.LASF239
	.byte	0x7
	.value	0x2a9
	.long	0x34
	.byte	0x38
	.uleb128 0xe
	.long	.LASF240
	.byte	0x7
	.value	0x2aa
	.long	0x34
	.byte	0x3c
	.uleb128 0xe
	.long	.LASF241
	.byte	0x7
	.value	0x2ac
	.long	0x34
	.byte	0x40
	.uleb128 0xe
	.long	.LASF242
	.byte	0x7
	.value	0x2ad
	.long	0x34
	.byte	0x44
	.uleb128 0xe
	.long	.LASF243
	.byte	0x7
	.value	0x2ae
	.long	0x34
	.byte	0x48
	.uleb128 0xe
	.long	.LASF244
	.byte	0x7
	.value	0x2af
	.long	0x34
	.byte	0x4c
	.uleb128 0xe
	.long	.LASF245
	.byte	0x7
	.value	0x2b3
	.long	0x166e
	.byte	0x50
	.uleb128 0xe
	.long	.LASF246
	.byte	0x7
	.value	0x2b4
	.long	0x166e
	.byte	0x90
	.uleb128 0xe
	.long	.LASF247
	.byte	0x7
	.value	0x2b5
	.long	0x34
	.byte	0xd0
	.uleb128 0xe
	.long	.LASF248
	.byte	0x7
	.value	0x2b6
	.long	0x34
	.byte	0xd4
	.uleb128 0xe
	.long	.LASF249
	.byte	0x7
	.value	0x2b7
	.long	0x34
	.byte	0xd8
	.uleb128 0xe
	.long	.LASF250
	.byte	0x7
	.value	0x2b8
	.long	0x34
	.byte	0xdc
	.uleb128 0xe
	.long	.LASF251
	.byte	0x7
	.value	0x2b9
	.long	0x1684
	.byte	0xe0
	.uleb128 0xf
	.long	.LASF252
	.byte	0x7
	.value	0x2ba
	.long	0x1684
	.value	0x1a8
	.uleb128 0xf
	.long	.LASF253
	.byte	0x7
	.value	0x2bb
	.long	0x1684
	.value	0x270
	.uleb128 0xf
	.long	.LASF254
	.byte	0x7
	.value	0x2bc
	.long	0x1684
	.value	0x338
	.uleb128 0xf
	.long	.LASF255
	.byte	0x7
	.value	0x2bd
	.long	0x1684
	.value	0x400
	.uleb128 0xf
	.long	.LASF256
	.byte	0x7
	.value	0x2be
	.long	0x34
	.value	0x4c8
	.uleb128 0xf
	.long	.LASF257
	.byte	0x7
	.value	0x2c0
	.long	0x34
	.value	0x4cc
	.uleb128 0xf
	.long	.LASF258
	.byte	0x7
	.value	0x2c1
	.long	0x34
	.value	0x4d0
	.uleb128 0xf
	.long	.LASF259
	.byte	0x7
	.value	0x2c4
	.long	0x34
	.value	0x4d4
	.uleb128 0x16
	.string	"qpB"
	.byte	0x7
	.value	0x2c5
	.long	0x34
	.value	0x4d8
	.uleb128 0xf
	.long	.LASF260
	.byte	0x7
	.value	0x2c6
	.long	0x34
	.value	0x4dc
	.uleb128 0xf
	.long	.LASF261
	.byte	0x7
	.value	0x2c7
	.long	0x34
	.value	0x4e0
	.uleb128 0xf
	.long	.LASF262
	.byte	0x7
	.value	0x2c8
	.long	0x34
	.value	0x4e4
	.uleb128 0xf
	.long	.LASF263
	.byte	0x7
	.value	0x2ca
	.long	0x34
	.value	0x4e8
	.uleb128 0xf
	.long	.LASF264
	.byte	0x7
	.value	0x2cb
	.long	0x34
	.value	0x4ec
	.uleb128 0xf
	.long	.LASF265
	.byte	0x7
	.value	0x2cc
	.long	0x34
	.value	0x4f0
	.uleb128 0xf
	.long	.LASF266
	.byte	0x7
	.value	0x2cd
	.long	0x34
	.value	0x4f4
	.uleb128 0xf
	.long	.LASF267
	.byte	0x7
	.value	0x2d1
	.long	0x34
	.value	0x4f8
	.uleb128 0xf
	.long	.LASF142
	.byte	0x7
	.value	0x2d2
	.long	0x34
	.value	0x4fc
	.uleb128 0xf
	.long	.LASF268
	.byte	0x7
	.value	0x2d3
	.long	0x34
	.value	0x500
	.uleb128 0xf
	.long	.LASF269
	.byte	0x7
	.value	0x2d5
	.long	0x34
	.value	0x504
	.uleb128 0xf
	.long	.LASF270
	.byte	0x7
	.value	0x2d6
	.long	0x34
	.value	0x508
	.uleb128 0xf
	.long	.LASF271
	.byte	0x7
	.value	0x2d7
	.long	0x34
	.value	0x50c
	.uleb128 0xf
	.long	.LASF272
	.byte	0x7
	.value	0x2d8
	.long	0x34
	.value	0x510
	.uleb128 0xf
	.long	.LASF273
	.byte	0x7
	.value	0x2d9
	.long	0x34
	.value	0x514
	.uleb128 0xf
	.long	.LASF274
	.byte	0x7
	.value	0x2da
	.long	0x34
	.value	0x518
	.uleb128 0xf
	.long	.LASF275
	.byte	0x7
	.value	0x2db
	.long	0x34
	.value	0x51c
	.uleb128 0xf
	.long	.LASF276
	.byte	0x7
	.value	0x2dc
	.long	0x34
	.value	0x520
	.uleb128 0xf
	.long	.LASF277
	.byte	0x7
	.value	0x2dd
	.long	0x34
	.value	0x524
	.uleb128 0xf
	.long	.LASF278
	.byte	0x7
	.value	0x2de
	.long	0x34
	.value	0x528
	.uleb128 0xf
	.long	.LASF279
	.byte	0x7
	.value	0x2df
	.long	0x1694
	.value	0x52c
	.uleb128 0xf
	.long	.LASF280
	.byte	0x7
	.value	0x2e0
	.long	0x34
	.value	0x92c
	.uleb128 0xf
	.long	.LASF281
	.byte	0x7
	.value	0x2e1
	.long	0x34
	.value	0x930
	.uleb128 0xf
	.long	.LASF282
	.byte	0x7
	.value	0x2e3
	.long	0x34
	.value	0x934
	.uleb128 0xf
	.long	.LASF283
	.byte	0x7
	.value	0x2e4
	.long	0x34
	.value	0x938
	.uleb128 0xf
	.long	.LASF284
	.byte	0x7
	.value	0x2e5
	.long	0x34
	.value	0x93c
	.uleb128 0xf
	.long	.LASF285
	.byte	0x7
	.value	0x2e7
	.long	0x34
	.value	0x940
	.uleb128 0xf
	.long	.LASF286
	.byte	0x7
	.value	0x2e8
	.long	0x34
	.value	0x944
	.uleb128 0xf
	.long	.LASF287
	.byte	0x7
	.value	0x2e9
	.long	0x34
	.value	0x948
	.uleb128 0xf
	.long	.LASF288
	.byte	0x7
	.value	0x2ea
	.long	0x34
	.value	0x94c
	.uleb128 0xf
	.long	.LASF289
	.byte	0x7
	.value	0x2eb
	.long	0x34
	.value	0x950
	.uleb128 0xf
	.long	.LASF290
	.byte	0x7
	.value	0x2ec
	.long	0x34
	.value	0x954
	.uleb128 0xf
	.long	.LASF291
	.byte	0x7
	.value	0x2ed
	.long	0x34
	.value	0x958
	.uleb128 0xf
	.long	.LASF292
	.byte	0x7
	.value	0x2ef
	.long	0x34
	.value	0x95c
	.uleb128 0xf
	.long	.LASF293
	.byte	0x7
	.value	0x2f0
	.long	0x34
	.value	0x960
	.uleb128 0xf
	.long	.LASF294
	.byte	0x7
	.value	0x2f1
	.long	0x34
	.value	0x964
	.uleb128 0xf
	.long	.LASF295
	.byte	0x7
	.value	0x2f2
	.long	0x34
	.value	0x968
	.uleb128 0xf
	.long	.LASF296
	.byte	0x7
	.value	0x2f3
	.long	0x34
	.value	0x96c
	.uleb128 0xf
	.long	.LASF297
	.byte	0x7
	.value	0x2f4
	.long	0x34
	.value	0x970
	.uleb128 0xf
	.long	.LASF298
	.byte	0x7
	.value	0x2f5
	.long	0x34
	.value	0x974
	.uleb128 0xf
	.long	.LASF299
	.byte	0x7
	.value	0x2f7
	.long	0xbf
	.value	0x978
	.uleb128 0xf
	.long	.LASF43
	.byte	0x7
	.value	0x2f9
	.long	0x34
	.value	0x980
	.uleb128 0xf
	.long	.LASF300
	.byte	0x7
	.value	0x2fb
	.long	0x34
	.value	0x984
	.uleb128 0xf
	.long	.LASF301
	.byte	0x7
	.value	0x2fe
	.long	0x34
	.value	0x988
	.uleb128 0xf
	.long	.LASF302
	.byte	0x7
	.value	0x301
	.long	0x34
	.value	0x98c
	.uleb128 0xf
	.long	.LASF303
	.byte	0x7
	.value	0x301
	.long	0x34
	.value	0x990
	.uleb128 0xf
	.long	.LASF304
	.byte	0x7
	.value	0x301
	.long	0x34
	.value	0x994
	.uleb128 0xf
	.long	.LASF305
	.byte	0x7
	.value	0x302
	.long	0x34
	.value	0x998
	.uleb128 0xf
	.long	.LASF306
	.byte	0x7
	.value	0x302
	.long	0x34
	.value	0x99c
	.uleb128 0xf
	.long	.LASF307
	.byte	0x7
	.value	0x304
	.long	0x34
	.value	0x9a0
	.uleb128 0xf
	.long	.LASF308
	.byte	0x7
	.value	0x305
	.long	0x34
	.value	0x9a4
	.uleb128 0xf
	.long	.LASF309
	.byte	0x7
	.value	0x306
	.long	0x34
	.value	0x9a8
	.uleb128 0xf
	.long	.LASF310
	.byte	0x7
	.value	0x309
	.long	0x34
	.value	0x9ac
	.uleb128 0xf
	.long	.LASF311
	.byte	0x7
	.value	0x30a
	.long	0x1684
	.value	0x9b0
	.uleb128 0xf
	.long	.LASF312
	.byte	0x7
	.value	0x30b
	.long	0x1684
	.value	0xa78
	.uleb128 0xf
	.long	.LASF313
	.byte	0x7
	.value	0x30e
	.long	0x34
	.value	0xb40
	.uleb128 0xf
	.long	.LASF314
	.byte	0x7
	.value	0x30f
	.long	0x34
	.value	0xb44
	.uleb128 0xf
	.long	.LASF315
	.byte	0x7
	.value	0x311
	.long	0x34
	.value	0xb48
	.uleb128 0xf
	.long	.LASF316
	.byte	0x7
	.value	0x313
	.long	0x34
	.value	0xb4c
	.uleb128 0xf
	.long	.LASF317
	.byte	0x7
	.value	0x314
	.long	0x34
	.value	0xb50
	.uleb128 0xf
	.long	.LASF318
	.byte	0x7
	.value	0x315
	.long	0x34
	.value	0xb54
	.uleb128 0xf
	.long	.LASF319
	.byte	0x7
	.value	0x316
	.long	0x34
	.value	0xb58
	.uleb128 0xf
	.long	.LASF320
	.byte	0x7
	.value	0x317
	.long	0x34
	.value	0xb5c
	.uleb128 0xf
	.long	.LASF321
	.byte	0x7
	.value	0x318
	.long	0x34
	.value	0xb60
	.uleb128 0xf
	.long	.LASF322
	.byte	0x7
	.value	0x319
	.long	0x34
	.value	0xb64
	.uleb128 0xf
	.long	.LASF323
	.byte	0x7
	.value	0x31b
	.long	0x34
	.value	0xb68
	.uleb128 0xf
	.long	.LASF324
	.byte	0x7
	.value	0x31d
	.long	0x34
	.value	0xb6c
	.uleb128 0xf
	.long	.LASF177
	.byte	0x7
	.value	0x31e
	.long	0x34
	.value	0xb70
	.uleb128 0xf
	.long	.LASF178
	.byte	0x7
	.value	0x31f
	.long	0x34
	.value	0xb74
	.uleb128 0xf
	.long	.LASF179
	.byte	0x7
	.value	0x320
	.long	0x34
	.value	0xb78
	.uleb128 0xf
	.long	.LASF325
	.byte	0x7
	.value	0x322
	.long	0x34
	.value	0xb7c
	.uleb128 0xf
	.long	.LASF326
	.byte	0x7
	.value	0x323
	.long	0x34
	.value	0xb80
	.uleb128 0xf
	.long	.LASF327
	.byte	0x7
	.value	0x324
	.long	0x34
	.value	0xb84
	.uleb128 0xf
	.long	.LASF328
	.byte	0x7
	.value	0x327
	.long	0x1684
	.value	0xb88
	.uleb128 0xf
	.long	.LASF28
	.byte	0x7
	.value	0x328
	.long	0x34
	.value	0xc50
	.uleb128 0xf
	.long	.LASF29
	.byte	0x7
	.value	0x329
	.long	0x34
	.value	0xc54
	.uleb128 0xf
	.long	.LASF31
	.byte	0x7
	.value	0x32b
	.long	0x8e
	.value	0xc58
	.uleb128 0xf
	.long	.LASF32
	.byte	0x7
	.value	0x32c
	.long	0x8e
	.value	0xc60
	.uleb128 0xf
	.long	.LASF36
	.byte	0x7
	.value	0x32d
	.long	0x282
	.value	0xc68
	.uleb128 0xf
	.long	.LASF30
	.byte	0x7
	.value	0x32e
	.long	0x8e
	.value	0xc70
	.uleb128 0xf
	.long	.LASF33
	.byte	0x7
	.value	0x330
	.long	0x34
	.value	0xc78
	.uleb128 0xf
	.long	.LASF34
	.byte	0x7
	.value	0x331
	.long	0x34
	.value	0xc7c
	.uleb128 0xf
	.long	.LASF329
	.byte	0x7
	.value	0x332
	.long	0x34
	.value	0xc80
	.uleb128 0xf
	.long	.LASF330
	.byte	0x7
	.value	0x334
	.long	0x34
	.value	0xc84
	.uleb128 0xf
	.long	.LASF331
	.byte	0x7
	.value	0x335
	.long	0x34
	.value	0xc88
	.uleb128 0xf
	.long	.LASF332
	.byte	0x7
	.value	0x337
	.long	0x34
	.value	0xc8c
	.uleb128 0xf
	.long	.LASF333
	.byte	0x7
	.value	0x338
	.long	0x34
	.value	0xc90
	.uleb128 0xf
	.long	.LASF334
	.byte	0x7
	.value	0x339
	.long	0x34
	.value	0xc94
	.uleb128 0xf
	.long	.LASF335
	.byte	0x7
	.value	0x33a
	.long	0x34
	.value	0xc98
	.uleb128 0xf
	.long	.LASF336
	.byte	0x7
	.value	0x33b
	.long	0x34
	.value	0xc9c
	.uleb128 0xf
	.long	.LASF337
	.byte	0x7
	.value	0x33c
	.long	0x34
	.value	0xca0
	.uleb128 0xf
	.long	.LASF338
	.byte	0x7
	.value	0x33f
	.long	0x34
	.value	0xca4
	.uleb128 0xf
	.long	.LASF339
	.byte	0x7
	.value	0x340
	.long	0x34
	.value	0xca8
	.uleb128 0xf
	.long	.LASF340
	.byte	0x7
	.value	0x341
	.long	0x34
	.value	0xcac
	.uleb128 0xf
	.long	.LASF341
	.byte	0x7
	.value	0x342
	.long	0x34
	.value	0xcb0
	.uleb128 0xf
	.long	.LASF342
	.byte	0x7
	.value	0x343
	.long	0x34
	.value	0xcb4
	.uleb128 0xf
	.long	.LASF343
	.byte	0x7
	.value	0x345
	.long	0x34
	.value	0xcb8
	.uleb128 0xf
	.long	.LASF344
	.byte	0x7
	.value	0x346
	.long	0x262
	.value	0xcbc
	.uleb128 0xf
	.long	.LASF345
	.byte	0x7
	.value	0x349
	.long	0x34
	.value	0xcdc
	.uleb128 0xf
	.long	.LASF346
	.byte	0x7
	.value	0x34c
	.long	0x34
	.value	0xce0
	.uleb128 0xf
	.long	.LASF347
	.byte	0x7
	.value	0x34d
	.long	0x34
	.value	0xce4
	.uleb128 0xf
	.long	.LASF348
	.byte	0x7
	.value	0x34e
	.long	0x34
	.value	0xce8
	.uleb128 0xf
	.long	.LASF349
	.byte	0x7
	.value	0x34f
	.long	0x34
	.value	0xcec
	.uleb128 0xf
	.long	.LASF350
	.byte	0x7
	.value	0x350
	.long	0x34
	.value	0xcf0
	.uleb128 0xf
	.long	.LASF44
	.byte	0x7
	.value	0x351
	.long	0x34
	.value	0xcf4
	.uleb128 0xf
	.long	.LASF45
	.byte	0x7
	.value	0x352
	.long	0x34
	.value	0xcf8
	.uleb128 0xf
	.long	.LASF351
	.byte	0x7
	.value	0x355
	.long	0x34
	.value	0xcfc
	.uleb128 0xf
	.long	.LASF352
	.byte	0x7
	.value	0x358
	.long	0x34
	.value	0xd00
	.uleb128 0xf
	.long	.LASF353
	.byte	0x7
	.value	0x35b
	.long	0x34
	.value	0xd04
	.uleb128 0xf
	.long	.LASF354
	.byte	0x7
	.value	0x35c
	.long	0x16a5
	.value	0xd08
	.uleb128 0xf
	.long	.LASF355
	.byte	0x7
	.value	0x35e
	.long	0x1684
	.value	0xd38
	.uleb128 0xf
	.long	.LASF356
	.byte	0x7
	.value	0x35f
	.long	0x34
	.value	0xe00
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0x1684
	.uleb128 0x5
	.long	0x75
	.byte	0x7
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.byte	0
	.uleb128 0x4
	.long	0x87
	.long	0x1694
	.uleb128 0x5
	.long	0x75
	.byte	0xc7
	.byte	0
	.uleb128 0x4
	.long	0x87
	.long	0x16a5
	.uleb128 0x19
	.long	0x75
	.value	0x3ff
	.byte	0
	.uleb128 0x4
	.long	0xbf
	.long	0x16b5
	.uleb128 0x5
	.long	0x75
	.byte	0x5
	.byte	0
	.uleb128 0x10
	.long	.LASF357
	.byte	0x7
	.value	0x361
	.long	0xe66
	.uleb128 0x1a
	.long	0x11c20
	.byte	0x7
	.value	0x364
	.long	0x20a6
	.uleb128 0xe
	.long	.LASF358
	.byte	0x7
	.value	0x366
	.long	0x34
	.byte	0
	.uleb128 0x12
	.string	"pn"
	.byte	0x7
	.value	0x367
	.long	0x34
	.byte	0x4
	.uleb128 0xe
	.long	.LASF359
	.byte	0x7
	.value	0x368
	.long	0x34
	.byte	0x8
	.uleb128 0xe
	.long	.LASF360
	.byte	0x7
	.value	0x369
	.long	0x34
	.byte	0xc
	.uleb128 0xe
	.long	.LASF361
	.byte	0x7
	.value	0x36a
	.long	0x34
	.byte	0x10
	.uleb128 0xe
	.long	.LASF362
	.byte	0x7
	.value	0x36b
	.long	0x34
	.byte	0x14
	.uleb128 0xe
	.long	.LASF130
	.byte	0x7
	.value	0x36c
	.long	0x34
	.byte	0x18
	.uleb128 0xe
	.long	.LASF363
	.byte	0x7
	.value	0x36d
	.long	0x34
	.byte	0x1c
	.uleb128 0xe
	.long	.LASF234
	.byte	0x7
	.value	0x36e
	.long	0x34
	.byte	0x20
	.uleb128 0xe
	.long	.LASF364
	.byte	0x7
	.value	0x36f
	.long	0x34
	.byte	0x24
	.uleb128 0x12
	.string	"qp"
	.byte	0x7
	.value	0x370
	.long	0x34
	.byte	0x28
	.uleb128 0xe
	.long	.LASF142
	.byte	0x7
	.value	0x371
	.long	0x34
	.byte	0x2c
	.uleb128 0xe
	.long	.LASF365
	.byte	0x7
	.value	0x372
	.long	0xb8
	.byte	0x30
	.uleb128 0xe
	.long	.LASF366
	.byte	0x7
	.value	0x373
	.long	0x34
	.byte	0x34
	.uleb128 0xe
	.long	.LASF367
	.byte	0x7
	.value	0x374
	.long	0x34
	.byte	0x38
	.uleb128 0xe
	.long	.LASF368
	.byte	0x7
	.value	0x375
	.long	0x34
	.byte	0x3c
	.uleb128 0xe
	.long	.LASF369
	.byte	0x7
	.value	0x376
	.long	0x34
	.byte	0x40
	.uleb128 0xe
	.long	.LASF370
	.byte	0x7
	.value	0x377
	.long	0x34
	.byte	0x44
	.uleb128 0xe
	.long	.LASF371
	.byte	0x7
	.value	0x378
	.long	0x34
	.byte	0x48
	.uleb128 0xe
	.long	.LASF372
	.byte	0x7
	.value	0x379
	.long	0x34
	.byte	0x4c
	.uleb128 0xe
	.long	.LASF373
	.byte	0x7
	.value	0x37a
	.long	0x34
	.byte	0x50
	.uleb128 0xe
	.long	.LASF374
	.byte	0x7
	.value	0x37b
	.long	0x34
	.byte	0x54
	.uleb128 0xe
	.long	.LASF375
	.byte	0x7
	.value	0x37c
	.long	0x34
	.byte	0x58
	.uleb128 0xe
	.long	.LASF376
	.byte	0x7
	.value	0x37d
	.long	0x34
	.byte	0x5c
	.uleb128 0xe
	.long	.LASF377
	.byte	0x7
	.value	0x37e
	.long	0x34
	.byte	0x60
	.uleb128 0xe
	.long	.LASF378
	.byte	0x7
	.value	0x37f
	.long	0xe48
	.byte	0x68
	.uleb128 0xe
	.long	.LASF379
	.byte	0x7
	.value	0x380
	.long	0xe48
	.byte	0x70
	.uleb128 0xe
	.long	.LASF380
	.byte	0x7
	.value	0x382
	.long	0x34
	.byte	0x78
	.uleb128 0xe
	.long	.LASF381
	.byte	0x7
	.value	0x383
	.long	0x20a6
	.byte	0x80
	.uleb128 0xe
	.long	.LASF382
	.byte	0x7
	.value	0x385
	.long	0x34
	.byte	0x88
	.uleb128 0xe
	.long	.LASF383
	.byte	0x7
	.value	0x386
	.long	0x34
	.byte	0x8c
	.uleb128 0xe
	.long	.LASF384
	.byte	0x7
	.value	0x387
	.long	0x34
	.byte	0x90
	.uleb128 0xe
	.long	.LASF385
	.byte	0x7
	.value	0x388
	.long	0x34
	.byte	0x94
	.uleb128 0xe
	.long	.LASF386
	.byte	0x7
	.value	0x389
	.long	0x34
	.byte	0x98
	.uleb128 0xe
	.long	.LASF387
	.byte	0x7
	.value	0x38a
	.long	0x34
	.byte	0x9c
	.uleb128 0xe
	.long	.LASF388
	.byte	0x7
	.value	0x38b
	.long	0x34
	.byte	0xa0
	.uleb128 0xe
	.long	.LASF389
	.byte	0x7
	.value	0x38c
	.long	0x34
	.byte	0xa4
	.uleb128 0xe
	.long	.LASF390
	.byte	0x7
	.value	0x38e
	.long	0x34
	.byte	0xa8
	.uleb128 0xe
	.long	.LASF391
	.byte	0x7
	.value	0x38f
	.long	0x34
	.byte	0xac
	.uleb128 0xe
	.long	.LASF392
	.byte	0x7
	.value	0x390
	.long	0x34
	.byte	0xb0
	.uleb128 0xe
	.long	.LASF393
	.byte	0x7
	.value	0x391
	.long	0x34
	.byte	0xb4
	.uleb128 0xe
	.long	.LASF394
	.byte	0x7
	.value	0x395
	.long	0x20ac
	.byte	0xb8
	.uleb128 0xf
	.long	.LASF395
	.byte	0x7
	.value	0x397
	.long	0x20c8
	.value	0x12b8
	.uleb128 0xf
	.long	.LASF396
	.byte	0x7
	.value	0x398
	.long	0x20e4
	.value	0x1cb8
	.uleb128 0xf
	.long	.LASF397
	.byte	0x7
	.value	0x399
	.long	0x2100
	.value	0x2138
	.uleb128 0x16
	.string	"mpr"
	.byte	0x7
	.value	0x39a
	.long	0x2122
	.value	0x3138
	.uleb128 0x16
	.string	"m7"
	.byte	0x7
	.value	0x39b
	.long	0x2138
	.value	0x3338
	.uleb128 0xf
	.long	.LASF398
	.byte	0x7
	.value	0x39d
	.long	0x214e
	.value	0x3738
	.uleb128 0xf
	.long	.LASF399
	.byte	0x7
	.value	0x39e
	.long	0x20a6
	.value	0x3740
	.uleb128 0xf
	.long	.LASF400
	.byte	0x7
	.value	0x3a0
	.long	0x2154
	.value	0x3748
	.uleb128 0xf
	.long	.LASF401
	.byte	0x7
	.value	0x3a1
	.long	0xe36
	.value	0x3750
	.uleb128 0xf
	.long	.LASF402
	.byte	0x7
	.value	0x3a2
	.long	0x215a
	.value	0x3758
	.uleb128 0xf
	.long	.LASF403
	.byte	0x7
	.value	0x3a3
	.long	0x2160
	.value	0x3760
	.uleb128 0x1b
	.long	.LASF404
	.byte	0x7
	.value	0x3a5
	.long	0x8e
	.long	0x11860
	.uleb128 0x1b
	.long	.LASF405
	.byte	0x7
	.value	0x3a6
	.long	0x8e
	.long	0x11868
	.uleb128 0x1c
	.string	"tr"
	.byte	0x7
	.value	0x3a8
	.long	0x34
	.long	0x11870
	.uleb128 0x1b
	.long	.LASF406
	.byte	0x7
	.value	0x3a9
	.long	0x34
	.long	0x11874
	.uleb128 0x1b
	.long	.LASF407
	.byte	0x7
	.value	0x3aa
	.long	0x49
	.long	0x11878
	.uleb128 0x1b
	.long	.LASF408
	.byte	0x7
	.value	0x3ab
	.long	0x49
	.long	0x1187c
	.uleb128 0x1b
	.long	.LASF409
	.byte	0x7
	.value	0x3ac
	.long	0x2171
	.long	0x11880
	.uleb128 0x1b
	.long	.LASF410
	.byte	0x7
	.value	0x3ad
	.long	0x34
	.long	0x118c0
	.uleb128 0x1b
	.long	.LASF411
	.byte	0x7
	.value	0x3ae
	.long	0x34
	.long	0x118c4
	.uleb128 0x1b
	.long	.LASF412
	.byte	0x7
	.value	0x3af
	.long	0x34
	.long	0x118c8
	.uleb128 0x1b
	.long	.LASF413
	.byte	0x7
	.value	0x3b0
	.long	0x34
	.long	0x118cc
	.uleb128 0x1b
	.long	.LASF414
	.byte	0x7
	.value	0x3b1
	.long	0x34
	.long	0x118d0
	.uleb128 0x1b
	.long	.LASF415
	.byte	0x7
	.value	0x3b4
	.long	0xbf
	.long	0x118d8
	.uleb128 0x1b
	.long	.LASF416
	.byte	0x7
	.value	0x3b5
	.long	0x34
	.long	0x118e0
	.uleb128 0x1b
	.long	.LASF417
	.byte	0x7
	.value	0x3b6
	.long	0x34
	.long	0x118e4
	.uleb128 0x1b
	.long	.LASF418
	.byte	0x7
	.value	0x3b7
	.long	0x34
	.long	0x118e8
	.uleb128 0x1b
	.long	.LASF419
	.byte	0x7
	.value	0x3b8
	.long	0x34
	.long	0x118ec
	.uleb128 0x1b
	.long	.LASF420
	.byte	0x7
	.value	0x3ba
	.long	0x2187
	.long	0x118f0
	.uleb128 0x1b
	.long	.LASF421
	.byte	0x7
	.value	0x3bb
	.long	0x2187
	.long	0x118f8
	.uleb128 0x1b
	.long	.LASF422
	.byte	0x7
	.value	0x3bd
	.long	0x2187
	.long	0x11900
	.uleb128 0x1b
	.long	.LASF423
	.byte	0x7
	.value	0x3be
	.long	0x2187
	.long	0x11908
	.uleb128 0x1b
	.long	.LASF170
	.byte	0x7
	.value	0x3bf
	.long	0x21ab
	.long	0x11910
	.uleb128 0x1b
	.long	.LASF177
	.byte	0x7
	.value	0x3c3
	.long	0x34
	.long	0x11930
	.uleb128 0x1b
	.long	.LASF178
	.byte	0x7
	.value	0x3c4
	.long	0x34
	.long	0x11934
	.uleb128 0x1b
	.long	.LASF179
	.byte	0x7
	.value	0x3c5
	.long	0x34
	.long	0x11938
	.uleb128 0x1b
	.long	.LASF261
	.byte	0x7
	.value	0x3c7
	.long	0x34
	.long	0x1193c
	.uleb128 0x1b
	.long	.LASF424
	.byte	0x7
	.value	0x3c9
	.long	0x34
	.long	0x11940
	.uleb128 0x1b
	.long	.LASF425
	.byte	0x7
	.value	0x3ca
	.long	0x34
	.long	0x11944
	.uleb128 0x1b
	.long	.LASF426
	.byte	0x7
	.value	0x3cc
	.long	0x34
	.long	0x11948
	.uleb128 0x1b
	.long	.LASF427
	.byte	0x7
	.value	0x3cd
	.long	0x34
	.long	0x1194c
	.uleb128 0x1b
	.long	.LASF428
	.byte	0x7
	.value	0x3ce
	.long	0x21bb
	.long	0x11950
	.uleb128 0x1b
	.long	.LASF429
	.byte	0x7
	.value	0x3cf
	.long	0x34
	.long	0x11ab8
	.uleb128 0x1b
	.long	.LASF430
	.byte	0x7
	.value	0x3d0
	.long	0x34
	.long	0x11abc
	.uleb128 0x1b
	.long	.LASF431
	.byte	0x7
	.value	0x3d2
	.long	0x34
	.long	0x11ac0
	.uleb128 0x1b
	.long	.LASF432
	.byte	0x7
	.value	0x3d3
	.long	0x34
	.long	0x11ac4
	.uleb128 0x1b
	.long	.LASF433
	.byte	0x7
	.value	0x3d4
	.long	0x34
	.long	0x11ac8
	.uleb128 0x1b
	.long	.LASF434
	.byte	0x7
	.value	0x3d6
	.long	0x34
	.long	0x11acc
	.uleb128 0x1b
	.long	.LASF435
	.byte	0x7
	.value	0x3d8
	.long	0x34
	.long	0x11ad0
	.uleb128 0x1b
	.long	.LASF331
	.byte	0x7
	.value	0x3dc
	.long	0x49
	.long	0x11ad4
	.uleb128 0x1b
	.long	.LASF436
	.byte	0x7
	.value	0x3e0
	.long	0x49
	.long	0x11ad8
	.uleb128 0x1b
	.long	.LASF437
	.byte	0x7
	.value	0x3e1
	.long	0x34
	.long	0x11adc
	.uleb128 0x1b
	.long	.LASF438
	.byte	0x7
	.value	0x3e2
	.long	0x34
	.long	0x11ae0
	.uleb128 0x1b
	.long	.LASF439
	.byte	0x7
	.value	0x3e3
	.long	0x49
	.long	0x11ae4
	.uleb128 0x1b
	.long	.LASF440
	.byte	0x7
	.value	0x3e4
	.long	0x21d1
	.long	0x11ae8
	.uleb128 0x1b
	.long	.LASF441
	.byte	0x7
	.value	0x3e9
	.long	0x49
	.long	0x11aec
	.uleb128 0x1b
	.long	.LASF442
	.byte	0x7
	.value	0x3ea
	.long	0x34
	.long	0x11af0
	.uleb128 0x1b
	.long	.LASF443
	.byte	0x7
	.value	0x3ec
	.long	0x65
	.long	0x11af4
	.uleb128 0x1b
	.long	.LASF444
	.byte	0x7
	.value	0x3f0
	.long	0x49
	.long	0x11afc
	.uleb128 0x1b
	.long	.LASF445
	.byte	0x7
	.value	0x3f1
	.long	0x34
	.long	0x11b00
	.uleb128 0x1b
	.long	.LASF446
	.byte	0x7
	.value	0x3f2
	.long	0x34
	.long	0x11b04
	.uleb128 0x1b
	.long	.LASF447
	.byte	0x7
	.value	0x3f3
	.long	0x34
	.long	0x11b08
	.uleb128 0x1b
	.long	.LASF448
	.byte	0x7
	.value	0x3f4
	.long	0x34
	.long	0x11b0c
	.uleb128 0x1b
	.long	.LASF449
	.byte	0x7
	.value	0x3f5
	.long	0x49
	.long	0x11b10
	.uleb128 0x1b
	.long	.LASF450
	.byte	0x7
	.value	0x3f7
	.long	0x49
	.long	0x11b14
	.uleb128 0x1b
	.long	.LASF451
	.byte	0x7
	.value	0x3f8
	.long	0x49
	.long	0x11b18
	.uleb128 0x1b
	.long	.LASF452
	.byte	0x7
	.value	0x3f9
	.long	0x49
	.long	0x11b1c
	.uleb128 0x1b
	.long	.LASF453
	.byte	0x7
	.value	0x3fa
	.long	0x49
	.long	0x11b20
	.uleb128 0x1b
	.long	.LASF454
	.byte	0x7
	.value	0x3fb
	.long	0x49
	.long	0x11b24
	.uleb128 0x1b
	.long	.LASF455
	.byte	0x7
	.value	0x3fc
	.long	0x49
	.long	0x11b28
	.uleb128 0x1b
	.long	.LASF27
	.byte	0x7
	.value	0x3ff
	.long	0x49
	.long	0x11b2c
	.uleb128 0x1b
	.long	.LASF456
	.byte	0x7
	.value	0x403
	.long	0x34
	.long	0x11b30
	.uleb128 0x1b
	.long	.LASF457
	.byte	0x7
	.value	0x405
	.long	0x34
	.long	0x11b34
	.uleb128 0x1b
	.long	.LASF458
	.byte	0x7
	.value	0x406
	.long	0x34
	.long	0x11b38
	.uleb128 0x1b
	.long	.LASF459
	.byte	0x7
	.value	0x407
	.long	0x34
	.long	0x11b3c
	.uleb128 0x1b
	.long	.LASF460
	.byte	0x7
	.value	0x409
	.long	0x21e1
	.long	0x11b40
	.uleb128 0x1b
	.long	.LASF333
	.byte	0x7
	.value	0x40b
	.long	0x34
	.long	0x11b48
	.uleb128 0x1b
	.long	.LASF461
	.byte	0x7
	.value	0x40f
	.long	0x34
	.long	0x11b4c
	.uleb128 0x1b
	.long	.LASF462
	.byte	0x7
	.value	0x410
	.long	0x34
	.long	0x11b50
	.uleb128 0x1b
	.long	.LASF463
	.byte	0x7
	.value	0x411
	.long	0x34
	.long	0x11b54
	.uleb128 0x1b
	.long	.LASF464
	.byte	0x7
	.value	0x412
	.long	0x34
	.long	0x11b58
	.uleb128 0x1b
	.long	.LASF465
	.byte	0x7
	.value	0x413
	.long	0xbf
	.long	0x11b60
	.uleb128 0x1b
	.long	.LASF466
	.byte	0x7
	.value	0x414
	.long	0x34
	.long	0x11b68
	.uleb128 0x1b
	.long	.LASF467
	.byte	0x7
	.value	0x415
	.long	0x34
	.long	0x11b6c
	.uleb128 0x1b
	.long	.LASF468
	.byte	0x7
	.value	0x416
	.long	0x34
	.long	0x11b70
	.uleb128 0x1b
	.long	.LASF469
	.byte	0x7
	.value	0x417
	.long	0x34
	.long	0x11b74
	.uleb128 0x1b
	.long	.LASF470
	.byte	0x7
	.value	0x418
	.long	0x34
	.long	0x11b78
	.uleb128 0x1b
	.long	.LASF471
	.byte	0x7
	.value	0x419
	.long	0x34
	.long	0x11b7c
	.uleb128 0x1b
	.long	.LASF472
	.byte	0x7
	.value	0x41a
	.long	0x34
	.long	0x11b80
	.uleb128 0x1b
	.long	.LASF473
	.byte	0x7
	.value	0x41b
	.long	0x21e7
	.long	0x11b88
	.uleb128 0x1b
	.long	.LASF474
	.byte	0x7
	.value	0x41c
	.long	0x34
	.long	0x11b90
	.uleb128 0x1b
	.long	.LASF475
	.byte	0x7
	.value	0x41d
	.long	0x34
	.long	0x11b94
	.uleb128 0x1b
	.long	.LASF476
	.byte	0x7
	.value	0x41e
	.long	0x34
	.long	0x11b98
	.uleb128 0x1b
	.long	.LASF477
	.byte	0x7
	.value	0x41f
	.long	0x34
	.long	0x11b9c
	.uleb128 0x1b
	.long	.LASF478
	.byte	0x7
	.value	0x420
	.long	0x34
	.long	0x11ba0
	.uleb128 0x1b
	.long	.LASF479
	.byte	0x7
	.value	0x421
	.long	0x34
	.long	0x11ba4
	.uleb128 0x1b
	.long	.LASF480
	.byte	0x7
	.value	0x422
	.long	0x34
	.long	0x11ba8
	.uleb128 0x1b
	.long	.LASF481
	.byte	0x7
	.value	0x423
	.long	0x34
	.long	0x11bac
	.uleb128 0x1b
	.long	.LASF482
	.byte	0x7
	.value	0x424
	.long	0x34
	.long	0x11bb0
	.uleb128 0x1b
	.long	.LASF483
	.byte	0x7
	.value	0x425
	.long	0x34
	.long	0x11bb4
	.uleb128 0x1b
	.long	.LASF484
	.byte	0x7
	.value	0x426
	.long	0x34
	.long	0x11bb8
	.uleb128 0x1b
	.long	.LASF485
	.byte	0x7
	.value	0x428
	.long	0x34
	.long	0x11bbc
	.uleb128 0x1b
	.long	.LASF486
	.byte	0x7
	.value	0x42a
	.long	0x34
	.long	0x11bc0
	.uleb128 0x1b
	.long	.LASF487
	.byte	0x7
	.value	0x42b
	.long	0x34
	.long	0x11bc4
	.uleb128 0x1b
	.long	.LASF488
	.byte	0x7
	.value	0x42c
	.long	0x34
	.long	0x11bc8
	.uleb128 0x1b
	.long	.LASF329
	.byte	0x7
	.value	0x42e
	.long	0x34
	.long	0x11bcc
	.uleb128 0x1b
	.long	.LASF489
	.byte	0x7
	.value	0x430
	.long	0x34
	.long	0x11bd0
	.uleb128 0x1b
	.long	.LASF490
	.byte	0x7
	.value	0x431
	.long	0x34
	.long	0x11bd4
	.uleb128 0x1b
	.long	.LASF491
	.byte	0x7
	.value	0x432
	.long	0x34
	.long	0x11bd8
	.uleb128 0x1b
	.long	.LASF492
	.byte	0x7
	.value	0x433
	.long	0x34
	.long	0x11bdc
	.uleb128 0x1b
	.long	.LASF493
	.byte	0x7
	.value	0x434
	.long	0x34
	.long	0x11be0
	.uleb128 0x1b
	.long	.LASF494
	.byte	0x7
	.value	0x435
	.long	0x34
	.long	0x11be4
	.uleb128 0x1b
	.long	.LASF495
	.byte	0x7
	.value	0x436
	.long	0x49
	.long	0x11be8
	.uleb128 0x1b
	.long	.LASF496
	.byte	0x7
	.value	0x437
	.long	0x34
	.long	0x11bec
	.uleb128 0x1b
	.long	.LASF497
	.byte	0x7
	.value	0x438
	.long	0x34
	.long	0x11bf0
	.uleb128 0x1b
	.long	.LASF498
	.byte	0x7
	.value	0x43a
	.long	0x34
	.long	0x11bf4
	.uleb128 0x1b
	.long	.LASF499
	.byte	0x7
	.value	0x43b
	.long	0x34
	.long	0x11bf8
	.uleb128 0x1b
	.long	.LASF243
	.byte	0x7
	.value	0x43c
	.long	0x34
	.long	0x11bfc
	.uleb128 0x1b
	.long	.LASF500
	.byte	0x7
	.value	0x43d
	.long	0x34
	.long	0x11c00
	.uleb128 0x1b
	.long	.LASF501
	.byte	0x7
	.value	0x43e
	.long	0x34
	.long	0x11c04
	.uleb128 0x1b
	.long	.LASF502
	.byte	0x7
	.value	0x43f
	.long	0x34
	.long	0x11c08
	.uleb128 0x1b
	.long	.LASF503
	.byte	0x7
	.value	0x441
	.long	0x65
	.long	0x11c0c
	.uleb128 0x1b
	.long	.LASF352
	.byte	0x7
	.value	0x444
	.long	0x34
	.long	0x11c14
	.uleb128 0x1b
	.long	.LASF504
	.byte	0x7
	.value	0x446
	.long	0x34
	.long	0x11c18
	.uleb128 0x1b
	.long	.LASF505
	.byte	0x7
	.value	0x447
	.long	0x34
	.long	0x11c1c
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0xe48
	.uleb128 0x4
	.long	0x42
	.long	0x20c8
	.uleb128 0x5
	.long	0x75
	.byte	0x8
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.byte	0
	.uleb128 0x4
	.long	0x42
	.long	0x20e4
	.uleb128 0x5
	.long	0x75
	.byte	0x4
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.byte	0
	.uleb128 0x4
	.long	0x42
	.long	0x2100
	.uleb128 0x5
	.long	0x75
	.byte	0x8
	.uleb128 0x5
	.long	0x75
	.byte	0x7
	.uleb128 0x5
	.long	0x75
	.byte	0x7
	.byte	0
	.uleb128 0x4
	.long	0x42
	.long	0x2122
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.uleb128 0x5
	.long	0x75
	.byte	0x3
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.byte	0
	.uleb128 0x4
	.long	0x42
	.long	0x2138
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0x214e
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x20a6
	.uleb128 0x7
	.byte	0x8
	.long	0xe3c
	.uleb128 0x7
	.byte	0x8
	.long	0xb42
	.uleb128 0x4
	.long	0x874
	.long	0x2171
	.uleb128 0x19
	.long	0x75
	.value	0x4af
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0x2187
	.uleb128 0x5
	.long	0x75
	.byte	0x3
	.uleb128 0x5
	.long	0x75
	.byte	0x3
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x218d
	.uleb128 0x7
	.byte	0x8
	.long	0x2193
	.uleb128 0x7
	.byte	0x8
	.long	0x2199
	.uleb128 0x7
	.byte	0x8
	.long	0x219f
	.uleb128 0x7
	.byte	0x8
	.long	0x21a5
	.uleb128 0x7
	.byte	0x8
	.long	0x57
	.uleb128 0x4
	.long	0x57
	.long	0x21bb
	.uleb128 0x5
	.long	0x75
	.byte	0xe
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0x21d1
	.uleb128 0x5
	.long	0x75
	.byte	0x5
	.uleb128 0x5
	.long	0x75
	.byte	0xe
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0x21e1
	.uleb128 0x5
	.long	0x75
	.byte	0
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x79e
	.uleb128 0x7
	.byte	0x8
	.long	0xbf
	.uleb128 0x10
	.long	.LASF506
	.byte	0x7
	.value	0x449
	.long	0x16c1
	.uleb128 0x1d
	.long	.LASF507
	.value	0x19b8
	.byte	0x8
	.byte	0x15
	.long	0x246f
	.uleb128 0xb
	.long	.LASF363
	.byte	0x8
	.byte	0x17
	.long	0x323
	.byte	0
	.uleb128 0xc
	.string	"poc"
	.byte	0x8
	.byte	0x19
	.long	0x34
	.byte	0x4
	.uleb128 0xb
	.long	.LASF508
	.byte	0x8
	.byte	0x1a
	.long	0x34
	.byte	0x8
	.uleb128 0xb
	.long	.LASF509
	.byte	0x8
	.byte	0x1b
	.long	0x34
	.byte	0xc
	.uleb128 0xb
	.long	.LASF510
	.byte	0x8
	.byte	0x1c
	.long	0x34
	.byte	0x10
	.uleb128 0xb
	.long	.LASF511
	.byte	0x8
	.byte	0x1d
	.long	0x34
	.byte	0x14
	.uleb128 0xb
	.long	.LASF512
	.byte	0x8
	.byte	0x1e
	.long	0x246f
	.byte	0x18
	.uleb128 0x1e
	.long	.LASF513
	.byte	0x8
	.byte	0x1f
	.long	0x246f
	.value	0x648
	.uleb128 0x1e
	.long	.LASF514
	.byte	0x8
	.byte	0x20
	.long	0x246f
	.value	0xc78
	.uleb128 0x1e
	.long	.LASF515
	.byte	0x8
	.byte	0x21
	.long	0x246f
	.value	0x12a8
	.uleb128 0x1e
	.long	.LASF449
	.byte	0x8
	.byte	0x22
	.long	0x49
	.value	0x18d8
	.uleb128 0x1e
	.long	.LASF516
	.byte	0x8
	.byte	0x23
	.long	0x34
	.value	0x18dc
	.uleb128 0x1e
	.long	.LASF125
	.byte	0x8
	.byte	0x24
	.long	0x34
	.value	0x18e0
	.uleb128 0x1e
	.long	.LASF126
	.byte	0x8
	.byte	0x25
	.long	0x34
	.value	0x18e4
	.uleb128 0x1e
	.long	.LASF517
	.byte	0x8
	.byte	0x27
	.long	0x34
	.value	0x18e8
	.uleb128 0x1e
	.long	.LASF518
	.byte	0x8
	.byte	0x28
	.long	0x34
	.value	0x18ec
	.uleb128 0x1e
	.long	.LASF519
	.byte	0x8
	.byte	0x29
	.long	0x34
	.value	0x18f0
	.uleb128 0x1e
	.long	.LASF520
	.byte	0x8
	.byte	0x2a
	.long	0x34
	.value	0x18f4
	.uleb128 0x1e
	.long	.LASF521
	.byte	0x8
	.byte	0x2c
	.long	0x34
	.value	0x18f8
	.uleb128 0x1e
	.long	.LASF522
	.byte	0x8
	.byte	0x2c
	.long	0x34
	.value	0x18fc
	.uleb128 0x1e
	.long	.LASF523
	.byte	0x8
	.byte	0x2c
	.long	0x34
	.value	0x1900
	.uleb128 0x1e
	.long	.LASF524
	.byte	0x8
	.byte	0x2c
	.long	0x34
	.value	0x1904
	.uleb128 0x1e
	.long	.LASF525
	.byte	0x8
	.byte	0x2d
	.long	0x34
	.value	0x1908
	.uleb128 0x1e
	.long	.LASF526
	.byte	0x8
	.byte	0x2e
	.long	0x34
	.value	0x190c
	.uleb128 0x1e
	.long	.LASF435
	.byte	0x8
	.byte	0x2f
	.long	0x34
	.value	0x1910
	.uleb128 0x1e
	.long	.LASF527
	.byte	0x8
	.byte	0x31
	.long	0xe54
	.value	0x1918
	.uleb128 0x1e
	.long	.LASF528
	.byte	0x8
	.byte	0x32
	.long	0xe5a
	.value	0x1920
	.uleb128 0x1e
	.long	.LASF529
	.byte	0x8
	.byte	0x33
	.long	0xe5a
	.value	0x1928
	.uleb128 0x1e
	.long	.LASF530
	.byte	0x8
	.byte	0x34
	.long	0xe54
	.value	0x1930
	.uleb128 0x1e
	.long	.LASF531
	.byte	0x8
	.byte	0x35
	.long	0xe54
	.value	0x1938
	.uleb128 0x1e
	.long	.LASF532
	.byte	0x8
	.byte	0x36
	.long	0xe4e
	.value	0x1940
	.uleb128 0x1e
	.long	.LASF158
	.byte	0x8
	.byte	0x38
	.long	0x282
	.value	0x1948
	.uleb128 0x1e
	.long	.LASF533
	.byte	0x8
	.byte	0x3a
	.long	0x2199
	.value	0x1950
	.uleb128 0x1e
	.long	.LASF534
	.byte	0x8
	.byte	0x3c
	.long	0x2485
	.value	0x1958
	.uleb128 0x1e
	.long	.LASF535
	.byte	0x8
	.byte	0x3f
	.long	0x2485
	.value	0x1960
	.uleb128 0x1f
	.string	"mv"
	.byte	0x8
	.byte	0x42
	.long	0x2193
	.value	0x1968
	.uleb128 0x1e
	.long	.LASF536
	.byte	0x8
	.byte	0x44
	.long	0xe60
	.value	0x1970
	.uleb128 0x1e
	.long	.LASF537
	.byte	0x8
	.byte	0x45
	.long	0xe60
	.value	0x1978
	.uleb128 0x1e
	.long	.LASF427
	.byte	0x8
	.byte	0x47
	.long	0x2497
	.value	0x1980
	.uleb128 0x1e
	.long	.LASF538
	.byte	0x8
	.byte	0x48
	.long	0x2497
	.value	0x1988
	.uleb128 0x1e
	.long	.LASF539
	.byte	0x8
	.byte	0x49
	.long	0x2497
	.value	0x1990
	.uleb128 0x1e
	.long	.LASF540
	.byte	0x8
	.byte	0x4b
	.long	0x34
	.value	0x1998
	.uleb128 0x1e
	.long	.LASF541
	.byte	0x8
	.byte	0x4c
	.long	0x34
	.value	0x199c
	.uleb128 0x1e
	.long	.LASF542
	.byte	0x8
	.byte	0x4d
	.long	0x34
	.value	0x19a0
	.uleb128 0x1e
	.long	.LASF543
	.byte	0x8
	.byte	0x4e
	.long	0x34
	.value	0x19a4
	.uleb128 0x1e
	.long	.LASF544
	.byte	0x8
	.byte	0x4f
	.long	0x34
	.value	0x19a8
	.uleb128 0x1e
	.long	.LASF545
	.byte	0x8
	.byte	0x50
	.long	0x34
	.value	0x19ac
	.uleb128 0x1e
	.long	.LASF546
	.byte	0x8
	.byte	0x51
	.long	0x34
	.value	0x19b0
	.byte	0
	.uleb128 0x4
	.long	0x2a3
	.long	0x2485
	.uleb128 0x5
	.long	0x75
	.byte	0x5
	.uleb128 0x5
	.long	0x75
	.byte	0x20
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x248b
	.uleb128 0x7
	.byte	0x8
	.long	0x2491
	.uleb128 0x7
	.byte	0x8
	.long	0x2a3
	.uleb128 0x7
	.byte	0x8
	.long	0x21f9
	.uleb128 0x6
	.long	.LASF547
	.byte	0x8
	.byte	0x52
	.long	0x21f9
	.uleb128 0x1d
	.long	.LASF548
	.value	0x1310
	.byte	0x8
	.byte	0x56
	.long	0x25b5
	.uleb128 0xb
	.long	.LASF549
	.byte	0x8
	.byte	0x58
	.long	0x34
	.byte	0
	.uleb128 0xb
	.long	.LASF521
	.byte	0x8
	.byte	0x59
	.long	0x34
	.byte	0x4
	.uleb128 0xb
	.long	.LASF522
	.byte	0x8
	.byte	0x59
	.long	0x34
	.byte	0x8
	.uleb128 0xb
	.long	.LASF512
	.byte	0x8
	.byte	0x5b
	.long	0x246f
	.byte	0x10
	.uleb128 0x1e
	.long	.LASF533
	.byte	0x8
	.byte	0x5d
	.long	0x2199
	.value	0x640
	.uleb128 0x1e
	.long	.LASF534
	.byte	0x8
	.byte	0x5e
	.long	0x2485
	.value	0x648
	.uleb128 0x1f
	.string	"mv"
	.byte	0x8
	.byte	0x5f
	.long	0x2193
	.value	0x650
	.uleb128 0x1e
	.long	.LASF536
	.byte	0x8
	.byte	0x60
	.long	0xe60
	.value	0x658
	.uleb128 0x1e
	.long	.LASF514
	.byte	0x8
	.byte	0x63
	.long	0x246f
	.value	0x660
	.uleb128 0x1e
	.long	.LASF550
	.byte	0x8
	.byte	0x64
	.long	0x2199
	.value	0xc90
	.uleb128 0x1e
	.long	.LASF551
	.byte	0x8
	.byte	0x65
	.long	0x2485
	.value	0xc98
	.uleb128 0x1e
	.long	.LASF552
	.byte	0x8
	.byte	0x66
	.long	0x2193
	.value	0xca0
	.uleb128 0x1e
	.long	.LASF553
	.byte	0x8
	.byte	0x67
	.long	0xe60
	.value	0xca8
	.uleb128 0x1e
	.long	.LASF515
	.byte	0x8
	.byte	0x6a
	.long	0x246f
	.value	0xcb0
	.uleb128 0x1e
	.long	.LASF554
	.byte	0x8
	.byte	0x6b
	.long	0x2199
	.value	0x12e0
	.uleb128 0x1e
	.long	.LASF555
	.byte	0x8
	.byte	0x6c
	.long	0x2485
	.value	0x12e8
	.uleb128 0x1e
	.long	.LASF556
	.byte	0x8
	.byte	0x6d
	.long	0x2193
	.value	0x12f0
	.uleb128 0x1e
	.long	.LASF557
	.byte	0x8
	.byte	0x6e
	.long	0xe60
	.value	0x12f8
	.uleb128 0x1e
	.long	.LASF517
	.byte	0x8
	.byte	0x70
	.long	0x34
	.value	0x1300
	.uleb128 0x1e
	.long	.LASF537
	.byte	0x8
	.byte	0x71
	.long	0xe60
	.value	0x1308
	.byte	0
	.uleb128 0x6
	.long	.LASF558
	.byte	0x8
	.byte	0x73
	.long	0x24a8
	.uleb128 0x7
	.byte	0x8
	.long	0x249d
	.uleb128 0x20
	.long	.LASF559
	.byte	0x10
	.byte	0x9
	.byte	0x1f
	.long	0x2603
	.uleb128 0xb
	.long	.LASF560
	.byte	0x9
	.byte	0x21
	.long	0x9b
	.byte	0
	.uleb128 0xb
	.long	.LASF561
	.byte	0x9
	.byte	0x22
	.long	0x42
	.byte	0x8
	.uleb128 0xb
	.long	.LASF562
	.byte	0x9
	.byte	0x23
	.long	0x57
	.byte	0xa
	.uleb128 0xb
	.long	.LASF563
	.byte	0x9
	.byte	0x24
	.long	0x57
	.byte	0xc
	.byte	0
	.uleb128 0x21
	.long	.LASF566
	.byte	0x1
	.byte	0x59
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x266f
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.byte	0x5b
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x22
	.string	"j"
	.byte	0x1
	.byte	0x5b
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x22
	.string	"k"
	.byte	0x1
	.byte	0x5b
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF564
	.byte	0x1
	.byte	0x5b
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x23
	.long	.LASF233
	.byte	0x1
	.byte	0x5c
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF565
	.byte	0x1
	.byte	0x5d
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x21
	.long	.LASF567
	.byte	0x1
	.byte	0xab
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x26bf
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.byte	0xad
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x22
	.string	"j"
	.byte	0x1
	.byte	0xad
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x22
	.string	"k"
	.byte	0x1
	.byte	0xad
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x23
	.long	.LASF564
	.byte	0x1
	.byte	0xad
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x24
	.long	.LASF568
	.byte	0x1
	.byte	0xda
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x26f7
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.byte	0xdc
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x23
	.long	.LASF564
	.byte	0x1
	.byte	0xdc
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x25
	.long	.LASF570
	.byte	0x1
	.byte	0xea
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x279f
	.uleb128 0x26
	.long	.LASF564
	.byte	0x1
	.byte	0xea
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x26
	.long	.LASF569
	.byte	0x1
	.byte	0xea
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x26
	.long	.LASF565
	.byte	0x1
	.byte	0xea
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x22
	.string	"pos"
	.byte	0x1
	.byte	0xef
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x22
	.string	"_bo"
	.byte	0x1
	.byte	0xef
	.long	0xe48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x22
	.string	"_bi"
	.byte	0x1
	.byte	0xef
	.long	0xe48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x22
	.string	"_bj"
	.byte	0x1
	.byte	0xef
	.long	0xe48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"_o"
	.byte	0x1
	.byte	0xf0
	.long	0x8e
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x22
	.string	"_i"
	.byte	0x1
	.byte	0xf0
	.long	0x8e
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x22
	.string	"_j"
	.byte	0x1
	.byte	0xf0
	.long	0x8e
	.uleb128 0x1
	.byte	0x5d
	.byte	0
	.uleb128 0x27
	.long	.LASF571
	.byte	0x1
	.value	0x131
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.long	0x29ca
	.uleb128 0x28
	.string	"ref"
	.byte	0x1
	.value	0x131
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -676
	.uleb128 0x29
	.long	.LASF564
	.byte	0x1
	.value	0x131
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -680
	.uleb128 0x2a
	.string	"pmv"
	.byte	0x1
	.value	0x133
	.long	0x29ca
	.uleb128 0x3
	.byte	0x91
	.sleb128 -672
	.uleb128 0x2b
	.long	.LASF572
	.byte	0x1
	.value	0x134
	.long	0x29da
	.uleb128 0x3
	.byte	0x91
	.sleb128 -528
	.uleb128 0x2b
	.long	.LASF573
	.byte	0x1
	.value	0x134
	.long	0xe5a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -568
	.uleb128 0x2b
	.long	.LASF574
	.byte	0x1
	.value	0x134
	.long	0xe5a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -536
	.uleb128 0x2b
	.long	.LASF575
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -588
	.uleb128 0x2b
	.long	.LASF576
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -584
	.uleb128 0x2a
	.string	"x"
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -664
	.uleb128 0x2a
	.string	"y"
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -660
	.uleb128 0x2b
	.long	.LASF577
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -656
	.uleb128 0x2b
	.long	.LASF578
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -580
	.uleb128 0x2b
	.long	.LASF579
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -576
	.uleb128 0x2a
	.string	"pos"
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -652
	.uleb128 0x2b
	.long	.LASF580
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -572
	.uleb128 0x2b
	.long	.LASF581
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -648
	.uleb128 0x2b
	.long	.LASF582
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -644
	.uleb128 0x2b
	.long	.LASF583
	.byte	0x1
	.value	0x135
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -640
	.uleb128 0x2b
	.long	.LASF584
	.byte	0x1
	.value	0x136
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -636
	.uleb128 0x2b
	.long	.LASF585
	.byte	0x1
	.value	0x136
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -632
	.uleb128 0x2b
	.long	.LASF586
	.byte	0x1
	.value	0x136
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -628
	.uleb128 0x2b
	.long	.LASF587
	.byte	0x1
	.value	0x136
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -624
	.uleb128 0x2b
	.long	.LASF588
	.byte	0x1
	.value	0x137
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -604
	.uleb128 0x2b
	.long	.LASF589
	.byte	0x1
	.value	0x137
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -600
	.uleb128 0x2b
	.long	.LASF241
	.byte	0x1
	.value	0x138
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -596
	.uleb128 0x2b
	.long	.LASF242
	.byte	0x1
	.value	0x138
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -592
	.uleb128 0x2b
	.long	.LASF590
	.byte	0x1
	.value	0x13a
	.long	0x25c0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -544
	.uleb128 0x2b
	.long	.LASF591
	.byte	0x1
	.value	0x13b
	.long	0xe5a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -560
	.uleb128 0x2b
	.long	.LASF592
	.byte	0x1
	.value	0x13d
	.long	0xe48
	.uleb128 0x3
	.byte	0x91
	.sleb128 -552
	.uleb128 0x2b
	.long	.LASF233
	.byte	0x1
	.value	0x13e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -620
	.uleb128 0x2b
	.long	.LASF565
	.byte	0x1
	.value	0x13f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -616
	.uleb128 0x2b
	.long	.LASF593
	.byte	0x1
	.value	0x141
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -612
	.uleb128 0x2b
	.long	.LASF594
	.byte	0x1
	.value	0x143
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -608
	.byte	0
	.uleb128 0x4
	.long	0x57
	.long	0x29da
	.uleb128 0x5
	.long	0x75
	.byte	0x1
	.byte	0
	.uleb128 0x4
	.long	0x42
	.long	0x29ea
	.uleb128 0x5
	.long	0x75
	.byte	0xff
	.byte	0
	.uleb128 0x27
	.long	.LASF595
	.byte	0x1
	.value	0x1cd
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x2be4
	.uleb128 0x28
	.string	"pmv"
	.byte	0x1
	.value	0x1cd
	.long	0x21a5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x29
	.long	.LASF596
	.byte	0x1
	.value	0x1ce
	.long	0x2199
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x29
	.long	.LASF597
	.byte	0x1
	.value	0x1cf
	.long	0x2193
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x29
	.long	.LASF598
	.byte	0x1
	.value	0x1d0
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -252
	.uleb128 0x29
	.long	.LASF564
	.byte	0x1
	.value	0x1d1
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x29
	.long	.LASF384
	.byte	0x1
	.value	0x1d2
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -260
	.uleb128 0x29
	.long	.LASF385
	.byte	0x1
	.value	0x1d3
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x29
	.long	.LASF599
	.byte	0x1
	.value	0x1d4
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x29
	.long	.LASF600
	.byte	0x1
	.value	0x1d5
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x2b
	.long	.LASF382
	.byte	0x1
	.value	0x1d7
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x2b
	.long	.LASF383
	.byte	0x1
	.value	0x1d8
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x2b
	.long	.LASF601
	.byte	0x1
	.value	0x1d9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2b
	.long	.LASF602
	.byte	0x1
	.value	0x1db
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x2b
	.long	.LASF603
	.byte	0x1
	.value	0x1db
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -220
	.uleb128 0x2b
	.long	.LASF604
	.byte	0x1
	.value	0x1db
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x2b
	.long	.LASF605
	.byte	0x1
	.value	0x1db
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x2b
	.long	.LASF606
	.byte	0x1
	.value	0x1dc
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x2b
	.long	.LASF607
	.byte	0x1
	.value	0x1dc
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x2b
	.long	.LASF608
	.byte	0x1
	.value	0x1dc
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x2b
	.long	.LASF609
	.byte	0x1
	.value	0x1dc
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x2a
	.string	"hv"
	.byte	0x1
	.value	0x1dd
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2b
	.long	.LASF610
	.byte	0x1
	.value	0x1df
	.long	0x6e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2b
	.long	.LASF611
	.byte	0x1
	.value	0x1df
	.long	0x6e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF612
	.byte	0x1
	.value	0x1df
	.long	0x6e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.long	.LASF613
	.byte	0x1
	.value	0x1df
	.long	0x6e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF614
	.byte	0x1
	.value	0x1e1
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x2b
	.long	.LASF615
	.byte	0x1
	.value	0x1e1
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x2b
	.long	.LASF616
	.byte	0x1
	.value	0x1e1
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x2b
	.long	.LASF617
	.byte	0x1
	.value	0x1e1
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x2b
	.long	.LASF618
	.byte	0x1
	.value	0x1e2
	.long	0x65
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.byte	0
	.uleb128 0x2c
	.long	.LASF619
	.byte	0x1
	.value	0x2bb
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.long	0x2cd1
	.uleb128 0x2b
	.long	.LASF620
	.byte	0x1
	.value	0x2bd
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0x2bd
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2b
	.long	.LASF621
	.byte	0x1
	.value	0x2bd
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2b
	.long	.LASF622
	.byte	0x1
	.value	0x2bd
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2a
	.string	"k"
	.byte	0x1
	.value	0x2bd
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.string	"l"
	.byte	0x1
	.value	0x2bd
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2b
	.long	.LASF623
	.byte	0x1
	.value	0x2bf
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF233
	.byte	0x1
	.value	0x2c0
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2b
	.long	.LASF624
	.byte	0x1
	.value	0x2c1
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF625
	.byte	0x1
	.value	0x2c2
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2b
	.long	.LASF626
	.byte	0x1
	.value	0x2c3
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.long	.LASF627
	.byte	0x1
	.value	0x2c4
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2b
	.long	.LASF628
	.byte	0x1
	.value	0x2c5
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2b
	.long	.LASF629
	.byte	0x1
	.value	0x2c6
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x2d
	.long	.LASF845
	.byte	0x1
	.value	0x313
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x2e
	.long	.LASF656
	.byte	0x1
	.value	0x330
	.long	0x34
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f5f
	.uleb128 0x29
	.long	.LASF630
	.byte	0x1
	.value	0x330
	.long	0xe54
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x28
	.string	"ref"
	.byte	0x1
	.value	0x331
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x29
	.long	.LASF564
	.byte	0x1
	.value	0x332
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x29
	.long	.LASF631
	.byte	0x1
	.value	0x333
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x29
	.long	.LASF632
	.byte	0x1
	.value	0x334
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x29
	.long	.LASF633
	.byte	0x1
	.value	0x335
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x29
	.long	.LASF634
	.byte	0x1
	.value	0x336
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x29
	.long	.LASF635
	.byte	0x1
	.value	0x337
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x29
	.long	.LASF636
	.byte	0x1
	.value	0x338
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x29
	.long	.LASF637
	.byte	0x1
	.value	0x339
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x29
	.long	.LASF233
	.byte	0x1
	.value	0x33a
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x29
	.long	.LASF638
	.byte	0x1
	.value	0x33b
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x29
	.long	.LASF639
	.byte	0x1
	.value	0x33c
	.long	0xbf
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2a
	.string	"pos"
	.byte	0x1
	.value	0x33e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x2b
	.long	.LASF640
	.byte	0x1
	.value	0x33e
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF641
	.byte	0x1
	.value	0x33e
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2a
	.string	"y"
	.byte	0x1
	.value	0x33e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.string	"x4"
	.byte	0x1
	.value	0x33e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x2b
	.long	.LASF642
	.byte	0x1
	.value	0x33e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2b
	.long	.LASF643
	.byte	0x1
	.value	0x340
	.long	0xe5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF644
	.byte	0x1
	.value	0x340
	.long	0xe5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.long	.LASF645
	.byte	0x1
	.value	0x341
	.long	0x2f87
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2b
	.long	.LASF593
	.byte	0x1
	.value	0x343
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF591
	.byte	0x1
	.value	0x344
	.long	0xe5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.long	.LASF241
	.byte	0x1
	.value	0x345
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x2b
	.long	.LASF242
	.byte	0x1
	.value	0x346
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2b
	.long	.LASF646
	.byte	0x1
	.value	0x348
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x2b
	.long	.LASF565
	.byte	0x1
	.value	0x349
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x2b
	.long	.LASF647
	.byte	0x1
	.value	0x34a
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2b
	.long	.LASF648
	.byte	0x1
	.value	0x34b
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x2b
	.long	.LASF649
	.byte	0x1
	.value	0x34c
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2b
	.long	.LASF650
	.byte	0x1
	.value	0x34d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x2b
	.long	.LASF651
	.byte	0x1
	.value	0x34e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.long	.LASF652
	.byte	0x1
	.value	0x34f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2b
	.long	.LASF653
	.byte	0x1
	.value	0x350
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2b
	.long	.LASF654
	.byte	0x1
	.value	0x351
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2b
	.long	.LASF655
	.byte	0x1
	.value	0x352
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.long	.LASF594
	.byte	0x1
	.value	0x354
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.uleb128 0x18
	.long	0xe5a
	.long	0x2f87
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0xe5a
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x34
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x2f5f
	.uleb128 0x2e
	.long	.LASF657
	.byte	0x1
	.value	0x3a7
	.long	0x34
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.uleb128 0x1
	.byte	0x9c
	.long	0x3121
	.uleb128 0x29
	.long	.LASF630
	.byte	0x1
	.value	0x3a7
	.long	0xe54
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x28
	.string	"ref"
	.byte	0x1
	.value	0x3a8
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x29
	.long	.LASF564
	.byte	0x1
	.value	0x3a9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x29
	.long	.LASF631
	.byte	0x1
	.value	0x3aa
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x29
	.long	.LASF632
	.byte	0x1
	.value	0x3ab
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.long	.LASF633
	.byte	0x1
	.value	0x3ac
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x29
	.long	.LASF634
	.byte	0x1
	.value	0x3ad
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x29
	.long	.LASF635
	.byte	0x1
	.value	0x3ae
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x29
	.long	.LASF636
	.byte	0x1
	.value	0x3af
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x29
	.long	.LASF637
	.byte	0x1
	.value	0x3b0
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x29
	.long	.LASF233
	.byte	0x1
	.value	0x3b1
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x29
	.long	.LASF638
	.byte	0x1
	.value	0x3b2
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x29
	.long	.LASF639
	.byte	0x1
	.value	0x3b3
	.long	0xbf
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.string	"pos"
	.byte	0x1
	.value	0x3b5
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.long	.LASF575
	.byte	0x1
	.value	0x3b5
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2b
	.long	.LASF576
	.byte	0x1
	.value	0x3b5
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.long	.LASF640
	.byte	0x1
	.value	0x3b5
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2b
	.long	.LASF641
	.byte	0x1
	.value	0x3b5
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2b
	.long	.LASF642
	.byte	0x1
	.value	0x3b5
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2b
	.long	.LASF565
	.byte	0x1
	.value	0x3b7
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF647
	.byte	0x1
	.value	0x3b8
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2b
	.long	.LASF646
	.byte	0x1
	.value	0x3b9
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2b
	.long	.LASF658
	.byte	0x1
	.value	0x3ba
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF592
	.byte	0x1
	.value	0x3bb
	.long	0x8e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2f
	.long	.LASF659
	.byte	0x1
	.value	0x3f9
	.long	0x34
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x31ad
	.uleb128 0x29
	.long	.LASF660
	.byte	0x1
	.value	0x3f9
	.long	0x8e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x29
	.long	.LASF661
	.byte	0x1
	.value	0x3f9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x2a
	.string	"k"
	.byte	0x1
	.value	0x3fb
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x2b
	.long	.LASF662
	.byte	0x1
	.value	0x3fb
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2a
	.string	"m"
	.byte	0x1
	.value	0x3fb
	.long	0xb22
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2a
	.string	"dd"
	.byte	0x1
	.value	0x3fb
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x2a
	.string	"d"
	.byte	0x1
	.value	0x3fb
	.long	0xb22
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x2f
	.long	.LASF663
	.byte	0x1
	.value	0x45e
	.long	0x34
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x3249
	.uleb128 0x29
	.long	.LASF660
	.byte	0x1
	.value	0x45e
	.long	0x8e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -808
	.uleb128 0x29
	.long	.LASF661
	.byte	0x1
	.value	0x45e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -812
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0x460
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -796
	.uleb128 0x2a
	.string	"j"
	.byte	0x1
	.value	0x460
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -792
	.uleb128 0x2a
	.string	"sad"
	.byte	0x1
	.value	0x460
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -788
	.uleb128 0x2a
	.string	"m1"
	.byte	0x1
	.value	0x461
	.long	0x3249
	.uleb128 0x3
	.byte	0x91
	.sleb128 -784
	.uleb128 0x2a
	.string	"m2"
	.byte	0x1
	.value	0x461
	.long	0x3249
	.uleb128 0x3
	.byte	0x91
	.sleb128 -528
	.uleb128 0x2a
	.string	"m3"
	.byte	0x1
	.value	0x461
	.long	0x3249
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0x325f
	.uleb128 0x5
	.long	0x75
	.byte	0x7
	.uleb128 0x5
	.long	0x75
	.byte	0x7
	.byte	0
	.uleb128 0x2e
	.long	.LASF664
	.byte	0x1
	.value	0x4b7
	.long	0x34
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.long	0x3348
	.uleb128 0x29
	.long	.LASF665
	.byte	0x1
	.value	0x4b7
	.long	0x3348
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1096
	.uleb128 0x29
	.long	.LASF661
	.byte	0x1
	.value	0x4b7
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1100
	.uleb128 0x29
	.long	.LASF633
	.byte	0x1
	.value	0x4b7
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1104
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0x4b9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1076
	.uleb128 0x2a
	.string	"j"
	.byte	0x1
	.value	0x4b9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1072
	.uleb128 0x2a
	.string	"k"
	.byte	0x1
	.value	0x4b9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1068
	.uleb128 0x2a
	.string	"x"
	.byte	0x1
	.value	0x4b9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1064
	.uleb128 0x2a
	.string	"y"
	.byte	0x1
	.value	0x4b9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1060
	.uleb128 0x2a
	.string	"sad"
	.byte	0x1
	.value	0x4b9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1056
	.uleb128 0x2b
	.long	.LASF666
	.byte	0x1
	.value	0x4ba
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1052
	.uleb128 0x2b
	.long	.LASF667
	.byte	0x1
	.value	0x4bb
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1048
	.uleb128 0x2b
	.long	.LASF668
	.byte	0x1
	.value	0x4bc
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1044
	.uleb128 0x2b
	.long	.LASF660
	.byte	0x1
	.value	0x4bd
	.long	0x293
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1040
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0xb22
	.uleb128 0x2e
	.long	.LASF669
	.byte	0x1
	.value	0x4f5
	.long	0x34
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.uleb128 0x1
	.byte	0x9c
	.long	0x3691
	.uleb128 0x29
	.long	.LASF630
	.byte	0x1
	.value	0x4f5
	.long	0xe54
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1288
	.uleb128 0x28
	.string	"ref"
	.byte	0x1
	.value	0x4f6
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1292
	.uleb128 0x29
	.long	.LASF564
	.byte	0x1
	.value	0x4f7
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1296
	.uleb128 0x29
	.long	.LASF631
	.byte	0x1
	.value	0x4f8
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1300
	.uleb128 0x29
	.long	.LASF632
	.byte	0x1
	.value	0x4f9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1304
	.uleb128 0x29
	.long	.LASF633
	.byte	0x1
	.value	0x4fa
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1308
	.uleb128 0x29
	.long	.LASF634
	.byte	0x1
	.value	0x4fb
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1312
	.uleb128 0x29
	.long	.LASF635
	.byte	0x1
	.value	0x4fc
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1316
	.uleb128 0x29
	.long	.LASF636
	.byte	0x1
	.value	0x4fd
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x29
	.long	.LASF637
	.byte	0x1
	.value	0x4fe
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x29
	.long	.LASF670
	.byte	0x1
	.value	0x4ff
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x29
	.long	.LASF671
	.byte	0x1
	.value	0x500
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x29
	.long	.LASF638
	.byte	0x1
	.value	0x501
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 48
	.uleb128 0x29
	.long	.LASF639
	.byte	0x1
	.value	0x502
	.long	0xbf
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1328
	.uleb128 0x2b
	.long	.LASF665
	.byte	0x1
	.value	0x505
	.long	0x2138
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1056
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0x505
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1276
	.uleb128 0x2a
	.string	"j"
	.byte	0x1
	.value	0x505
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1272
	.uleb128 0x2a
	.string	"k"
	.byte	0x1
	.value	0x505
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1268
	.uleb128 0x2b
	.long	.LASF660
	.byte	0x1
	.value	0x506
	.long	0xb22
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1120
	.uleb128 0x2a
	.string	"d"
	.byte	0x1
	.value	0x506
	.long	0x8e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1136
	.uleb128 0x2a
	.string	"pos"
	.byte	0x1
	.value	0x507
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1264
	.uleb128 0x2b
	.long	.LASF646
	.byte	0x1
	.value	0x507
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1260
	.uleb128 0x2b
	.long	.LASF642
	.byte	0x1
	.value	0x507
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1256
	.uleb128 0x2b
	.long	.LASF672
	.byte	0x1
	.value	0x507
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1252
	.uleb128 0x2a
	.string	"y0"
	.byte	0x1
	.value	0x508
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1248
	.uleb128 0x2a
	.string	"x0"
	.byte	0x1
	.value	0x508
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1244
	.uleb128 0x2a
	.string	"ry0"
	.byte	0x1
	.value	0x508
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1164
	.uleb128 0x2a
	.string	"rx0"
	.byte	0x1
	.value	0x508
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1160
	.uleb128 0x2a
	.string	"ry"
	.byte	0x1
	.value	0x508
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1156
	.uleb128 0x2b
	.long	.LASF673
	.byte	0x1
	.value	0x509
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1172
	.uleb128 0x2b
	.long	.LASF674
	.byte	0x1
	.value	0x509
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1168
	.uleb128 0x2b
	.long	.LASF675
	.byte	0x1
	.value	0x50a
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1180
	.uleb128 0x2b
	.long	.LASF676
	.byte	0x1
	.value	0x50a
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1176
	.uleb128 0x2b
	.long	.LASF643
	.byte	0x1
	.value	0x50b
	.long	0xe5a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1128
	.uleb128 0x2b
	.long	.LASF591
	.byte	0x1
	.value	0x50c
	.long	0xe54
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1152
	.uleb128 0x2b
	.long	.LASF590
	.byte	0x1
	.value	0x50d
	.long	0x25c0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1144
	.uleb128 0x2b
	.long	.LASF647
	.byte	0x1
	.value	0x50e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1240
	.uleb128 0x2b
	.long	.LASF677
	.byte	0x1
	.value	0x50f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1236
	.uleb128 0x2b
	.long	.LASF678
	.byte	0x1
	.value	0x510
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1232
	.uleb128 0x2b
	.long	.LASF649
	.byte	0x1
	.value	0x511
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1228
	.uleb128 0x2b
	.long	.LASF648
	.byte	0x1
	.value	0x512
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1224
	.uleb128 0x2b
	.long	.LASF679
	.byte	0x1
	.value	0x513
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1220
	.uleb128 0x2b
	.long	.LASF680
	.byte	0x1
	.value	0x514
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1216
	.uleb128 0x2b
	.long	.LASF681
	.byte	0x1
	.value	0x515
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1212
	.uleb128 0x2b
	.long	.LASF682
	.byte	0x1
	.value	0x516
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1208
	.uleb128 0x2b
	.long	.LASF593
	.byte	0x1
	.value	0x517
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1204
	.uleb128 0x2b
	.long	.LASF594
	.byte	0x1
	.value	0x519
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1200
	.uleb128 0x2b
	.long	.LASF241
	.byte	0x1
	.value	0x51c
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1188
	.uleb128 0x2b
	.long	.LASF242
	.byte	0x1
	.value	0x51c
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1184
	.uleb128 0x2b
	.long	.LASF683
	.byte	0x1
	.value	0x51e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1196
	.uleb128 0x2b
	.long	.LASF684
	.byte	0x1
	.value	0x51f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1192
	.byte	0
	.uleb128 0x2e
	.long	.LASF685
	.byte	0x1
	.value	0x601
	.long	0x34
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0x3a47
	.uleb128 0x29
	.long	.LASF630
	.byte	0x1
	.value	0x601
	.long	0xe54
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x28
	.string	"ref"
	.byte	0x1
	.value	0x602
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x29
	.long	.LASF564
	.byte	0x1
	.value	0x603
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x29
	.long	.LASF631
	.byte	0x1
	.value	0x604
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x29
	.long	.LASF632
	.byte	0x1
	.value	0x605
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x29
	.long	.LASF633
	.byte	0x1
	.value	0x606
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -220
	.uleb128 0x29
	.long	.LASF686
	.byte	0x1
	.value	0x607
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x29
	.long	.LASF687
	.byte	0x1
	.value	0x608
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x29
	.long	.LASF688
	.byte	0x1
	.value	0x609
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -228
	.uleb128 0x29
	.long	.LASF689
	.byte	0x1
	.value	0x60a
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x29
	.long	.LASF690
	.byte	0x1
	.value	0x60b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -236
	.uleb128 0x29
	.long	.LASF636
	.byte	0x1
	.value	0x60c
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x29
	.long	.LASF637
	.byte	0x1
	.value	0x60d
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 48
	.uleb128 0x29
	.long	.LASF691
	.byte	0x1
	.value	0x60e
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 56
	.uleb128 0x29
	.long	.LASF692
	.byte	0x1
	.value	0x60f
	.long	0x21a5
	.uleb128 0x3
	.byte	0x91
	.sleb128 64
	.uleb128 0x29
	.long	.LASF233
	.byte	0x1
	.value	0x610
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 72
	.uleb128 0x29
	.long	.LASF638
	.byte	0x1
	.value	0x611
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 80
	.uleb128 0x29
	.long	.LASF639
	.byte	0x1
	.value	0x612
	.long	0xbf
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x2a
	.string	"pos"
	.byte	0x1
	.value	0x614
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2b
	.long	.LASF640
	.byte	0x1
	.value	0x614
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x2b
	.long	.LASF641
	.byte	0x1
	.value	0x614
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.string	"y"
	.byte	0x1
	.value	0x614
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x2a
	.string	"x4"
	.byte	0x1
	.value	0x614
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2b
	.long	.LASF642
	.byte	0x1
	.value	0x614
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x2b
	.long	.LASF643
	.byte	0x1
	.value	0x616
	.long	0xe5a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2b
	.long	.LASF693
	.byte	0x1
	.value	0x616
	.long	0xe5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.long	.LASF694
	.byte	0x1
	.value	0x616
	.long	0xe5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF695
	.byte	0x1
	.value	0x617
	.long	0x2f87
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF696
	.byte	0x1
	.value	0x618
	.long	0x2f87
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.long	.LASF593
	.byte	0x1
	.value	0x61a
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x2b
	.long	.LASF697
	.byte	0x1
	.value	0x61b
	.long	0xe5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2b
	.long	.LASF698
	.byte	0x1
	.value	0x61c
	.long	0xe5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.long	.LASF241
	.byte	0x1
	.value	0x61d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2b
	.long	.LASF242
	.byte	0x1
	.value	0x61e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x2b
	.long	.LASF646
	.byte	0x1
	.value	0x620
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2b
	.long	.LASF565
	.byte	0x1
	.value	0x621
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2b
	.long	.LASF647
	.byte	0x1
	.value	0x622
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x2b
	.long	.LASF648
	.byte	0x1
	.value	0x623
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF649
	.byte	0x1
	.value	0x624
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x2b
	.long	.LASF650
	.byte	0x1
	.value	0x625
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2b
	.long	.LASF699
	.byte	0x1
	.value	0x626
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x2b
	.long	.LASF700
	.byte	0x1
	.value	0x627
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2b
	.long	.LASF701
	.byte	0x1
	.value	0x628
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x2b
	.long	.LASF702
	.byte	0x1
	.value	0x629
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2b
	.long	.LASF653
	.byte	0x1
	.value	0x62a
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -178
	.uleb128 0x2b
	.long	.LASF654
	.byte	0x1
	.value	0x62b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x2b
	.long	.LASF703
	.byte	0x1
	.value	0x62c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -174
	.uleb128 0x2b
	.long	.LASF704
	.byte	0x1
	.value	0x62d
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x2b
	.long	.LASF705
	.byte	0x1
	.value	0x630
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2b
	.long	.LASF594
	.byte	0x1
	.value	0x631
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -170
	.uleb128 0x2b
	.long	.LASF706
	.byte	0x1
	.value	0x632
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2b
	.long	.LASF707
	.byte	0x1
	.value	0x633
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -166
	.uleb128 0x2b
	.long	.LASF708
	.byte	0x1
	.value	0x634
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x2b
	.long	.LASF709
	.byte	0x1
	.value	0x635
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -162
	.uleb128 0x2b
	.long	.LASF710
	.byte	0x1
	.value	0x636
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -154
	.uleb128 0x2b
	.long	.LASF711
	.byte	0x1
	.value	0x636
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -158
	.uleb128 0x2b
	.long	.LASF712
	.byte	0x1
	.value	0x636
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x2b
	.long	.LASF713
	.byte	0x1
	.value	0x637
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.byte	0
	.uleb128 0x2e
	.long	.LASF714
	.byte	0x1
	.value	0x6bd
	.long	0x34
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x3e38
	.uleb128 0x29
	.long	.LASF630
	.byte	0x1
	.value	0x6bd
	.long	0xe54
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1288
	.uleb128 0x28
	.string	"ref"
	.byte	0x1
	.value	0x6be
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1292
	.uleb128 0x29
	.long	.LASF564
	.byte	0x1
	.value	0x6bf
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1296
	.uleb128 0x29
	.long	.LASF631
	.byte	0x1
	.value	0x6c0
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1300
	.uleb128 0x29
	.long	.LASF632
	.byte	0x1
	.value	0x6c1
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1304
	.uleb128 0x29
	.long	.LASF633
	.byte	0x1
	.value	0x6c2
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1308
	.uleb128 0x29
	.long	.LASF634
	.byte	0x1
	.value	0x6c3
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1312
	.uleb128 0x29
	.long	.LASF635
	.byte	0x1
	.value	0x6c4
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1316
	.uleb128 0x29
	.long	.LASF636
	.byte	0x1
	.value	0x6c5
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x29
	.long	.LASF637
	.byte	0x1
	.value	0x6c6
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x29
	.long	.LASF691
	.byte	0x1
	.value	0x6c7
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x29
	.long	.LASF692
	.byte	0x1
	.value	0x6c8
	.long	0x21a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x29
	.long	.LASF670
	.byte	0x1
	.value	0x6c9
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 48
	.uleb128 0x29
	.long	.LASF671
	.byte	0x1
	.value	0x6ca
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 56
	.uleb128 0x29
	.long	.LASF638
	.byte	0x1
	.value	0x6cb
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 64
	.uleb128 0x29
	.long	.LASF639
	.byte	0x1
	.value	0x6cc
	.long	0xbf
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1328
	.uleb128 0x2b
	.long	.LASF665
	.byte	0x1
	.value	0x6cf
	.long	0x2138
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1072
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0x6cf
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1212
	.uleb128 0x2a
	.string	"j"
	.byte	0x1
	.value	0x6cf
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1208
	.uleb128 0x2a
	.string	"k"
	.byte	0x1
	.value	0x6cf
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1204
	.uleb128 0x2b
	.long	.LASF660
	.byte	0x1
	.value	0x6d0
	.long	0xb22
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1136
	.uleb128 0x2a
	.string	"d"
	.byte	0x1
	.value	0x6d0
	.long	0x8e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1152
	.uleb128 0x2a
	.string	"pos"
	.byte	0x1
	.value	0x6d1
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1272
	.uleb128 0x2b
	.long	.LASF646
	.byte	0x1
	.value	0x6d1
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1270
	.uleb128 0x2b
	.long	.LASF642
	.byte	0x1
	.value	0x6d1
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1268
	.uleb128 0x2b
	.long	.LASF672
	.byte	0x1
	.value	0x6d1
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1266
	.uleb128 0x2a
	.string	"y0"
	.byte	0x1
	.value	0x6d2
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1264
	.uleb128 0x2a
	.string	"x0"
	.byte	0x1
	.value	0x6d2
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1262
	.uleb128 0x2a
	.string	"ry0"
	.byte	0x1
	.value	0x6d2
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1222
	.uleb128 0x2a
	.string	"rx0"
	.byte	0x1
	.value	0x6d2
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1218
	.uleb128 0x2a
	.string	"ry"
	.byte	0x1
	.value	0x6d2
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1214
	.uleb128 0x2a
	.string	"sy0"
	.byte	0x1
	.value	0x6d3
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1224
	.uleb128 0x2a
	.string	"sy"
	.byte	0x1
	.value	0x6d3
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1216
	.uleb128 0x2a
	.string	"sx0"
	.byte	0x1
	.value	0x6d3
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1220
	.uleb128 0x2b
	.long	.LASF673
	.byte	0x1
	.value	0x6d4
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1228
	.uleb128 0x2b
	.long	.LASF674
	.byte	0x1
	.value	0x6d4
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1226
	.uleb128 0x2b
	.long	.LASF675
	.byte	0x1
	.value	0x6d5
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1232
	.uleb128 0x2b
	.long	.LASF676
	.byte	0x1
	.value	0x6d5
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1230
	.uleb128 0x2b
	.long	.LASF643
	.byte	0x1
	.value	0x6d6
	.long	0xe5a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1144
	.uleb128 0x2b
	.long	.LASF590
	.byte	0x1
	.value	0x6d8
	.long	0x25c0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1160
	.uleb128 0x2b
	.long	.LASF647
	.byte	0x1
	.value	0x6da
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1200
	.uleb128 0x2b
	.long	.LASF677
	.byte	0x1
	.value	0x6db
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1260
	.uleb128 0x2b
	.long	.LASF649
	.byte	0x1
	.value	0x6dc
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1258
	.uleb128 0x2b
	.long	.LASF648
	.byte	0x1
	.value	0x6dd
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1256
	.uleb128 0x2b
	.long	.LASF679
	.byte	0x1
	.value	0x6de
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1254
	.uleb128 0x2b
	.long	.LASF680
	.byte	0x1
	.value	0x6df
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1252
	.uleb128 0x2b
	.long	.LASF681
	.byte	0x1
	.value	0x6e0
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1250
	.uleb128 0x2b
	.long	.LASF682
	.byte	0x1
	.value	0x6e1
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1248
	.uleb128 0x2b
	.long	.LASF593
	.byte	0x1
	.value	0x6e2
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1246
	.uleb128 0x2b
	.long	.LASF594
	.byte	0x1
	.value	0x6e4
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1244
	.uleb128 0x2b
	.long	.LASF706
	.byte	0x1
	.value	0x6e5
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1242
	.uleb128 0x2b
	.long	.LASF707
	.byte	0x1
	.value	0x6e6
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1240
	.uleb128 0x2b
	.long	.LASF708
	.byte	0x1
	.value	0x6e7
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1238
	.uleb128 0x2b
	.long	.LASF709
	.byte	0x1
	.value	0x6e8
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1236
	.uleb128 0x2b
	.long	.LASF713
	.byte	0x1
	.value	0x6ea
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1234
	.uleb128 0x2b
	.long	.LASF710
	.byte	0x1
	.value	0x6eb
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1180
	.uleb128 0x2b
	.long	.LASF241
	.byte	0x1
	.value	0x6ed
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1188
	.uleb128 0x2b
	.long	.LASF242
	.byte	0x1
	.value	0x6ed
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1184
	.uleb128 0x2b
	.long	.LASF683
	.byte	0x1
	.value	0x6ef
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1196
	.uleb128 0x2b
	.long	.LASF684
	.byte	0x1
	.value	0x6f0
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1192
	.uleb128 0x2b
	.long	.LASF697
	.byte	0x1
	.value	0x6f2
	.long	0xe54
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1176
	.uleb128 0x2b
	.long	.LASF698
	.byte	0x1
	.value	0x6f3
	.long	0xe54
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1168
	.byte	0
	.uleb128 0x2e
	.long	.LASF715
	.byte	0x1
	.value	0x8cf
	.long	0x34
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0x405d
	.uleb128 0x29
	.long	.LASF633
	.byte	0x1
	.value	0x8cf
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1396
	.uleb128 0x29
	.long	.LASF716
	.byte	0x1
	.value	0x8d0
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1400
	.uleb128 0x29
	.long	.LASF717
	.byte	0x1
	.value	0x8d1
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1404
	.uleb128 0x29
	.long	.LASF718
	.byte	0x1
	.value	0x8d2
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1408
	.uleb128 0x29
	.long	.LASF647
	.byte	0x1
	.value	0x8d3
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1412
	.uleb128 0x29
	.long	.LASF564
	.byte	0x1
	.value	0x8d4
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1416
	.uleb128 0x2a
	.string	"bx0"
	.byte	0x1
	.value	0x8d6
	.long	0x405d
	.uleb128 0x9
	.byte	0x3
	.quad	bx0.6460
	.uleb128 0x2a
	.string	"by0"
	.byte	0x1
	.value	0x8d7
	.long	0x405d
	.uleb128 0x9
	.byte	0x3
	.quad	by0.6461
	.uleb128 0x2b
	.long	.LASF660
	.byte	0x1
	.value	0x8d9
	.long	0x4073
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1296
	.uleb128 0x2b
	.long	.LASF719
	.byte	0x1
	.value	0x8da
	.long	0x2138
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1040
	.uleb128 0x2a
	.string	"bsx"
	.byte	0x1
	.value	0x8db
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1356
	.uleb128 0x2a
	.string	"bsy"
	.byte	0x1
	.value	0x8dc
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1352
	.uleb128 0x2b
	.long	.LASF631
	.byte	0x1
	.value	0x8de
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1316
	.uleb128 0x2b
	.long	.LASF632
	.byte	0x1
	.value	0x8de
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1324
	.uleb128 0x2b
	.long	.LASF384
	.byte	0x1
	.value	0x8de
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1320
	.uleb128 0x2b
	.long	.LASF385
	.byte	0x1
	.value	0x8de
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1328
	.uleb128 0x2a
	.string	"v"
	.byte	0x1
	.value	0x8df
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1392
	.uleb128 0x2a
	.string	"h"
	.byte	0x1
	.value	0x8df
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1388
	.uleb128 0x2b
	.long	.LASF642
	.byte	0x1
	.value	0x8df
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1384
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0x8df
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1380
	.uleb128 0x2a
	.string	"j"
	.byte	0x1
	.value	0x8df
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1376
	.uleb128 0x2a
	.string	"k"
	.byte	0x1
	.value	0x8df
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1372
	.uleb128 0x2b
	.long	.LASF720
	.byte	0x1
	.value	0x8e0
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1368
	.uleb128 0x2b
	.long	.LASF721
	.byte	0x1
	.value	0x8e1
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1348
	.uleb128 0x2b
	.long	.LASF722
	.byte	0x1
	.value	0x8e2
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1344
	.uleb128 0x2b
	.long	.LASF723
	.byte	0x1
	.value	0x8e3
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1340
	.uleb128 0x2b
	.long	.LASF724
	.byte	0x1
	.value	0x8e4
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1336
	.uleb128 0x2b
	.long	.LASF725
	.byte	0x1
	.value	0x8e5
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1332
	.uleb128 0x2a
	.string	"bxx"
	.byte	0x1
	.value	0x8e6
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1364
	.uleb128 0x2a
	.string	"byy"
	.byte	0x1
	.value	0x8e6
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1360
	.uleb128 0x2b
	.long	.LASF421
	.byte	0x1
	.value	0x8e8
	.long	0x2187
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1312
	.uleb128 0x2b
	.long	.LASF726
	.byte	0x1
	.value	0x8e9
	.long	0x2187
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1304
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0x4073
	.uleb128 0x5
	.long	0x75
	.byte	0x4
	.uleb128 0x5
	.long	0x75
	.byte	0x3
	.byte	0
	.uleb128 0x4
	.long	0x34
	.long	0x4083
	.uleb128 0x5
	.long	0x75
	.byte	0x3f
	.byte	0
	.uleb128 0x2e
	.long	.LASF727
	.byte	0x1
	.value	0x92c
	.long	0x34
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0x43ca
	.uleb128 0x28
	.string	"ref"
	.byte	0x1
	.value	0x92c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x29
	.long	.LASF564
	.byte	0x1
	.value	0x92d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x29
	.long	.LASF382
	.byte	0x1
	.value	0x92e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -220
	.uleb128 0x29
	.long	.LASF383
	.byte	0x1
	.value	0x92f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x29
	.long	.LASF633
	.byte	0x1
	.value	0x930
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -228
	.uleb128 0x29
	.long	.LASF233
	.byte	0x1
	.value	0x931
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x29
	.long	.LASF639
	.byte	0x1
	.value	0x932
	.long	0xbf
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x2b
	.long	.LASF728
	.byte	0x1
	.value	0x935
	.long	0x29da
	.uleb128 0x9
	.byte	0x3
	.quad	orig_val.6525
	.uleb128 0x2b
	.long	.LASF630
	.byte	0x1
	.value	0x936
	.long	0x43ca
	.uleb128 0x9
	.byte	0x3
	.quad	orig_pic.6526
	.uleb128 0x2b
	.long	.LASF634
	.byte	0x1
	.value	0x93b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x2b
	.long	.LASF635
	.byte	0x1
	.value	0x93b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -182
	.uleb128 0x2b
	.long	.LASF636
	.byte	0x1
	.value	0x93b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -206
	.uleb128 0x2b
	.long	.LASF637
	.byte	0x1
	.value	0x93b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0x93c
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x2a
	.string	"j"
	.byte	0x1
	.value	0x93c
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x2b
	.long	.LASF729
	.byte	0x1
	.value	0x93e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x2b
	.long	.LASF638
	.byte	0x1
	.value	0x93f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x2b
	.long	.LASF384
	.byte	0x1
	.value	0x941
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2b
	.long	.LASF385
	.byte	0x1
	.value	0x942
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x2a
	.string	"bsx"
	.byte	0x1
	.value	0x944
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2a
	.string	"bsy"
	.byte	0x1
	.value	0x945
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x2b
	.long	.LASF631
	.byte	0x1
	.value	0x947
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2b
	.long	.LASF632
	.byte	0x1
	.value	0x948
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x2b
	.long	.LASF420
	.byte	0x1
	.value	0x94a
	.long	0x21a5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2b
	.long	.LASF730
	.byte	0x1
	.value	0x94c
	.long	0x2199
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF421
	.byte	0x1
	.value	0x94d
	.long	0x2187
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2b
	.long	.LASF731
	.byte	0x1
	.value	0x953
	.long	0x25c6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.long	.LASF732
	.byte	0x1
	.value	0x954
	.long	0x25c6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.long	.LASF733
	.byte	0x1
	.value	0x957
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x2b
	.long	.LASF734
	.byte	0x1
	.value	0x959
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2b
	.long	.LASF735
	.byte	0x1
	.value	0x959
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x30
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.long	0x42c2
	.uleb128 0x2b
	.long	.LASF736
	.byte	0x1
	.value	0xa7a
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.byte	0
	.uleb128 0x30
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.long	0x42f8
	.uleb128 0x2b
	.long	.LASF737
	.byte	0x1
	.value	0xa90
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x2b
	.long	.LASF738
	.byte	0x1
	.value	0xa91
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x31
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.uleb128 0x2b
	.long	.LASF739
	.byte	0x1
	.value	0xaac
	.long	0x2187
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2b
	.long	.LASF740
	.byte	0x1
	.value	0xaad
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2b
	.long	.LASF741
	.byte	0x1
	.value	0xaae
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -202
	.uleb128 0x2b
	.long	.LASF742
	.byte	0x1
	.value	0xaae
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x2b
	.long	.LASF743
	.byte	0x1
	.value	0xaae
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -198
	.uleb128 0x2b
	.long	.LASF744
	.byte	0x1
	.value	0xaae
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x2b
	.long	.LASF687
	.byte	0x1
	.value	0xaaf
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -194
	.uleb128 0x2b
	.long	.LASF688
	.byte	0x1
	.value	0xaaf
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2b
	.long	.LASF689
	.byte	0x1
	.value	0xab0
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -190
	.uleb128 0x2b
	.long	.LASF690
	.byte	0x1
	.value	0xab0
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x2b
	.long	.LASF745
	.byte	0x1
	.value	0xab1
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -186
	.uleb128 0x2b
	.long	.LASF746
	.byte	0x1
	.value	0xab2
	.long	0x29ca
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xe5a
	.long	0x43da
	.uleb128 0x5
	.long	0x75
	.byte	0xf
	.byte	0
	.uleb128 0x2e
	.long	.LASF747
	.byte	0x1
	.value	0xb38
	.long	0x34
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x45ef
	.uleb128 0x29
	.long	.LASF633
	.byte	0x1
	.value	0xb38
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1396
	.uleb128 0x29
	.long	.LASF716
	.byte	0x1
	.value	0xb39
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1400
	.uleb128 0x29
	.long	.LASF717
	.byte	0x1
	.value	0xb3a
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1404
	.uleb128 0x29
	.long	.LASF718
	.byte	0x1
	.value	0xb3b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1408
	.uleb128 0x29
	.long	.LASF647
	.byte	0x1
	.value	0xb3c
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1412
	.uleb128 0x2a
	.string	"bx0"
	.byte	0x1
	.value	0xb3e
	.long	0x405d
	.uleb128 0x9
	.byte	0x3
	.quad	bx0.6610
	.uleb128 0x2a
	.string	"by0"
	.byte	0x1
	.value	0xb3f
	.long	0x405d
	.uleb128 0x9
	.byte	0x3
	.quad	by0.6611
	.uleb128 0x2b
	.long	.LASF660
	.byte	0x1
	.value	0xb42
	.long	0x4073
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1296
	.uleb128 0x2b
	.long	.LASF719
	.byte	0x1
	.value	0xb43
	.long	0x2138
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1040
	.uleb128 0x2a
	.string	"bsx"
	.byte	0x1
	.value	0xb44
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1356
	.uleb128 0x2a
	.string	"bsy"
	.byte	0x1
	.value	0xb45
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1352
	.uleb128 0x2b
	.long	.LASF631
	.byte	0x1
	.value	0xb47
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1316
	.uleb128 0x2b
	.long	.LASF632
	.byte	0x1
	.value	0xb47
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1324
	.uleb128 0x2b
	.long	.LASF384
	.byte	0x1
	.value	0xb47
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1320
	.uleb128 0x2b
	.long	.LASF385
	.byte	0x1
	.value	0xb47
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1328
	.uleb128 0x2a
	.string	"v"
	.byte	0x1
	.value	0xb48
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1392
	.uleb128 0x2a
	.string	"h"
	.byte	0x1
	.value	0xb48
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1388
	.uleb128 0x2b
	.long	.LASF642
	.byte	0x1
	.value	0xb48
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1384
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0xb48
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1380
	.uleb128 0x2a
	.string	"j"
	.byte	0x1
	.value	0xb48
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1376
	.uleb128 0x2a
	.string	"k"
	.byte	0x1
	.value	0xb48
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1372
	.uleb128 0x2b
	.long	.LASF720
	.byte	0x1
	.value	0xb49
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1368
	.uleb128 0x2b
	.long	.LASF721
	.byte	0x1
	.value	0xb4a
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1348
	.uleb128 0x2b
	.long	.LASF722
	.byte	0x1
	.value	0xb4b
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1344
	.uleb128 0x2b
	.long	.LASF723
	.byte	0x1
	.value	0xb4c
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1340
	.uleb128 0x2b
	.long	.LASF724
	.byte	0x1
	.value	0xb4d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1336
	.uleb128 0x2b
	.long	.LASF725
	.byte	0x1
	.value	0xb4e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1332
	.uleb128 0x2a
	.string	"bxx"
	.byte	0x1
	.value	0xb4f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1364
	.uleb128 0x2a
	.string	"byy"
	.byte	0x1
	.value	0xb4f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1360
	.uleb128 0x2b
	.long	.LASF421
	.byte	0x1
	.value	0xb51
	.long	0x2187
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1312
	.uleb128 0x2b
	.long	.LASF726
	.byte	0x1
	.value	0xb52
	.long	0x2187
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1304
	.byte	0
	.uleb128 0x2e
	.long	.LASF748
	.byte	0x1
	.value	0xb8d
	.long	0x34
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.long	0x46fc
	.uleb128 0x29
	.long	.LASF639
	.byte	0x1
	.value	0xb8d
	.long	0xbf
	.uleb128 0x3
	.byte	0x91
	.sleb128 -648
	.uleb128 0x2b
	.long	.LASF385
	.byte	0x1
	.value	0xb8f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -636
	.uleb128 0x2b
	.long	.LASF384
	.byte	0x1
	.value	0xb8f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -632
	.uleb128 0x2b
	.long	.LASF632
	.byte	0x1
	.value	0xb8f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -600
	.uleb128 0x2b
	.long	.LASF631
	.byte	0x1
	.value	0xb8f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -596
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0xb8f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -628
	.uleb128 0x2a
	.string	"j"
	.byte	0x1
	.value	0xb8f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -624
	.uleb128 0x2a
	.string	"k"
	.byte	0x1
	.value	0xb8f
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -620
	.uleb128 0x2b
	.long	.LASF660
	.byte	0x1
	.value	0xb90
	.long	0xb22
	.uleb128 0x3
	.byte	0x91
	.sleb128 -592
	.uleb128 0x2b
	.long	.LASF736
	.byte	0x1
	.value	0xb91
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -616
	.uleb128 0x2b
	.long	.LASF665
	.byte	0x1
	.value	0xb94
	.long	0x3249
	.uleb128 0x3
	.byte	0x91
	.sleb128 -528
	.uleb128 0x2b
	.long	.LASF749
	.byte	0x1
	.value	0xb94
	.long	0x4073
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.uleb128 0x2b
	.long	.LASF382
	.byte	0x1
	.value	0xb95
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -604
	.uleb128 0x2b
	.long	.LASF383
	.byte	0x1
	.value	0xb95
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -608
	.uleb128 0x2b
	.long	.LASF750
	.byte	0x1
	.value	0xb96
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -612
	.byte	0
	.uleb128 0x2c
	.long	.LASF751
	.byte	0x1
	.value	0xbc7
	.quad	.LFB22
	.quad	.LFE22-.LFB22
	.uleb128 0x1
	.byte	0x9c
	.long	0x47e8
	.uleb128 0x2a
	.string	"bx"
	.byte	0x1
	.value	0xbc9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.string	"by"
	.byte	0x1
	.value	0xbc9
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x2b
	.long	.LASF421
	.byte	0x1
	.value	0xbca
	.long	0x2187
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2a
	.string	"pmv"
	.byte	0x1
	.value	0xbcc
	.long	0x29ca
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2b
	.long	.LASF752
	.byte	0x1
	.value	0xbce
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x2b
	.long	.LASF753
	.byte	0x1
	.value	0xbcf
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2b
	.long	.LASF754
	.byte	0x1
	.value	0xbd0
	.long	0x6e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.long	.LASF755
	.byte	0x1
	.value	0xbd0
	.long	0x6e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF756
	.byte	0x1
	.value	0xbd1
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2b
	.long	.LASF757
	.byte	0x1
	.value	0xbd2
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x2b
	.long	.LASF758
	.byte	0x1
	.value	0xbd3
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF759
	.byte	0x1
	.value	0xbd4
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x2b
	.long	.LASF760
	.byte	0x1
	.value	0xbd6
	.long	0x215a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x2e
	.long	.LASF761
	.byte	0x1
	.value	0xc1b
	.long	0x34
	.quad	.LFB23
	.quad	.LFE23-.LFB23
	.uleb128 0x1
	.byte	0x9c
	.long	0x48f5
	.uleb128 0x29
	.long	.LASF750
	.byte	0x1
	.value	0xc1b
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -660
	.uleb128 0x29
	.long	.LASF762
	.byte	0x1
	.value	0xc1b
	.long	0x8e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -672
	.uleb128 0x2b
	.long	.LASF385
	.byte	0x1
	.value	0xc1d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -648
	.uleb128 0x2b
	.long	.LASF384
	.byte	0x1
	.value	0xc1d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -644
	.uleb128 0x2b
	.long	.LASF632
	.byte	0x1
	.value	0xc1d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -616
	.uleb128 0x2b
	.long	.LASF631
	.byte	0x1
	.value	0xc1d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -612
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0xc1d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -640
	.uleb128 0x2a
	.string	"j"
	.byte	0x1
	.value	0xc1d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -636
	.uleb128 0x2a
	.string	"k"
	.byte	0x1
	.value	0xc1d
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -632
	.uleb128 0x2b
	.long	.LASF665
	.byte	0x1
	.value	0xc1e
	.long	0x3249
	.uleb128 0x3
	.byte	0x91
	.sleb128 -544
	.uleb128 0x2b
	.long	.LASF749
	.byte	0x1
	.value	0xc1e
	.long	0x4073
	.uleb128 0x3
	.byte	0x91
	.sleb128 -288
	.uleb128 0x2b
	.long	.LASF660
	.byte	0x1
	.value	0xc1f
	.long	0xb22
	.uleb128 0x3
	.byte	0x91
	.sleb128 -608
	.uleb128 0x2b
	.long	.LASF736
	.byte	0x1
	.value	0xc20
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -628
	.uleb128 0x2b
	.long	.LASF383
	.byte	0x1
	.value	0xc21
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -624
	.uleb128 0x2b
	.long	.LASF382
	.byte	0x1
	.value	0xc22
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -620
	.byte	0
	.uleb128 0x2e
	.long	.LASF763
	.byte	0x1
	.value	0xc59
	.long	0x34
	.quad	.LFB24
	.quad	.LFE24-.LFB24
	.uleb128 0x1
	.byte	0x9c
	.long	0x4952
	.uleb128 0x29
	.long	.LASF639
	.byte	0x1
	.value	0xc59
	.long	0xbf
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0xc5b
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.long	.LASF736
	.byte	0x1
	.value	0xc5c
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2b
	.long	.LASF762
	.byte	0x1
	.value	0xc5d
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x27
	.long	.LASF764
	.byte	0x1
	.value	0xc85
	.quad	.LFB25
	.quad	.LFE25-.LFB25
	.uleb128 0x1
	.byte	0x9c
	.long	0x4aff
	.uleb128 0x29
	.long	.LASF633
	.byte	0x1
	.value	0xc85
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x29
	.long	.LASF716
	.byte	0x1
	.value	0xc86
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x29
	.long	.LASF639
	.byte	0x1
	.value	0xc87
	.long	0xbf
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2a
	.string	"bx0"
	.byte	0x1
	.value	0xc89
	.long	0x405d
	.uleb128 0x9
	.byte	0x3
	.quad	bx0.6784
	.uleb128 0x2a
	.string	"by0"
	.byte	0x1
	.value	0xc8a
	.long	0x405d
	.uleb128 0x9
	.byte	0x3
	.quad	by0.6785
	.uleb128 0x2b
	.long	.LASF765
	.byte	0x1
	.value	0xc8c
	.long	0x219f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF730
	.byte	0x1
	.value	0xc8c
	.long	0x2199
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.string	"ref"
	.byte	0x1
	.value	0xc8d
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -118
	.uleb128 0x2a
	.string	"v"
	.byte	0x1
	.value	0xc8e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x2a
	.string	"h"
	.byte	0x1
	.value	0xc8e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF642
	.byte	0x1
	.value	0xc8e
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2b
	.long	.LASF233
	.byte	0x1
	.value	0xc8e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.value	0xc8e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.string	"j"
	.byte	0x1
	.value	0xc8e
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x2b
	.long	.LASF766
	.byte	0x1
	.value	0xc8f
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF767
	.byte	0x1
	.value	0xc8f
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2b
	.long	.LASF768
	.byte	0x1
	.value	0xc90
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2b
	.long	.LASF721
	.byte	0x1
	.value	0xc91
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x2b
	.long	.LASF722
	.byte	0x1
	.value	0xc92
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.long	.LASF723
	.byte	0x1
	.value	0xc93
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2b
	.long	.LASF724
	.byte	0x1
	.value	0xc94
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2b
	.long	.LASF725
	.byte	0x1
	.value	0xc95
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2b
	.long	.LASF564
	.byte	0x1
	.value	0xc96
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2b
	.long	.LASF769
	.byte	0x1
	.value	0xc97
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.long	.LASF593
	.byte	0x1
	.value	0xc98
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.uleb128 0x2c
	.long	.LASF770
	.byte	0x1
	.value	0xce3
	.quad	.LFB26
	.quad	.LFE26-.LFB26
	.uleb128 0x1
	.byte	0x9c
	.long	0x4d77
	.uleb128 0x2b
	.long	.LASF384
	.byte	0x1
	.value	0xce6
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x2b
	.long	.LASF385
	.byte	0x1
	.value	0xce6
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -236
	.uleb128 0x2b
	.long	.LASF766
	.byte	0x1
	.value	0xce6
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x2b
	.long	.LASF767
	.byte	0x1
	.value	0xce6
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x2b
	.long	.LASF771
	.byte	0x1
	.value	0xce6
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x2b
	.long	.LASF772
	.byte	0x1
	.value	0xce6
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -220
	.uleb128 0x2b
	.long	.LASF773
	.byte	0x1
	.value	0xce7
	.long	0x2187
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2b
	.long	.LASF774
	.byte	0x1
	.value	0xce8
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x2b
	.long	.LASF536
	.byte	0x1
	.value	0xce9
	.long	0xe60
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2b
	.long	.LASF775
	.byte	0x1
	.value	0xcea
	.long	0x2193
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x2b
	.long	.LASF776
	.byte	0x1
	.value	0xceb
	.long	0x2199
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x2b
	.long	.LASF777
	.byte	0x1
	.value	0xcec
	.long	0x2485
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2b
	.long	.LASF760
	.byte	0x1
	.value	0xced
	.long	0x215a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x30
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.long	0x4d02
	.uleb128 0x2b
	.long	.LASF778
	.byte	0x1
	.value	0xd0b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -292
	.uleb128 0x2b
	.long	.LASF779
	.byte	0x1
	.value	0xd0b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -290
	.uleb128 0x2b
	.long	.LASF780
	.byte	0x1
	.value	0xd0b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -280
	.uleb128 0x2b
	.long	.LASF781
	.byte	0x1
	.value	0xd0b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -288
	.uleb128 0x2b
	.long	.LASF782
	.byte	0x1
	.value	0xd0c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -286
	.uleb128 0x2b
	.long	.LASF783
	.byte	0x1
	.value	0xd0c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -284
	.uleb128 0x2b
	.long	.LASF784
	.byte	0x1
	.value	0xd0c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -278
	.uleb128 0x2b
	.long	.LASF785
	.byte	0x1
	.value	0xd0c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -282
	.uleb128 0x2b
	.long	.LASF786
	.byte	0x1
	.value	0xd0d
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -276
	.uleb128 0x2b
	.long	.LASF787
	.byte	0x1
	.value	0xd0d
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -274
	.uleb128 0x2b
	.long	.LASF788
	.byte	0x1
	.value	0xd0e
	.long	0x29ca
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.uleb128 0x2b
	.long	.LASF789
	.byte	0x1
	.value	0xd0e
	.long	0x29ca
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x2b
	.long	.LASF790
	.byte	0x1
	.value	0xd10
	.long	0x6e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2b
	.long	.LASF791
	.byte	0x1
	.value	0xd10
	.long	0x6e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF792
	.byte	0x1
	.value	0xd10
	.long	0x6e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.long	.LASF793
	.byte	0x1
	.value	0xd10
	.long	0x6e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x31
	.quad	.LBB6
	.quad	.LBE6-.LBB6
	.uleb128 0x2b
	.long	.LASF794
	.byte	0x1
	.value	0xdd4
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x2b
	.long	.LASF533
	.byte	0x1
	.value	0xdd5
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x2b
	.long	.LASF593
	.byte	0x1
	.value	0xdd7
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x31
	.quad	.LBB7
	.quad	.LBE7-.LBB7
	.uleb128 0x2b
	.long	.LASF795
	.byte	0x1
	.value	0xded
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x2b
	.long	.LASF796
	.byte	0x1
	.value	0xdee
	.long	0x34
	.uleb128 0x3
	.byte	0x91
	.sleb128 -228
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2f
	.long	.LASF797
	.byte	0x1
	.value	0xe2a
	.long	0x34
	.quad	.LFB27
	.quad	.LFE27-.LFB27
	.uleb128 0x1
	.byte	0x9c
	.long	0x4dc1
	.uleb128 0x28
	.string	"a"
	.byte	0x1
	.value	0xe2a
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x28
	.string	"b"
	.byte	0x1
	.value	0xe2a
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.string	"x"
	.byte	0x1
	.value	0xe2c
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.long	0x42
	.long	0x4de4
	.uleb128 0x14
	.long	0xe54
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x34
	.byte	0
	.uleb128 0x23
	.long	.LASF798
	.byte	0x1
	.byte	0x2b
	.long	0x4df9
	.uleb128 0x9
	.byte	0x3
	.quad	PelY_14
	.uleb128 0x7
	.byte	0x8
	.long	0x4dc1
	.uleb128 0x23
	.long	.LASF799
	.byte	0x1
	.byte	0x2c
	.long	0x4df9
	.uleb128 0x9
	.byte	0x3
	.quad	PelY_14b
	.uleb128 0x18
	.long	0xe5a
	.long	0x4e37
	.uleb128 0x14
	.long	0xe5a
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x34
	.uleb128 0x14
	.long	0x34
	.byte	0
	.uleb128 0x23
	.long	.LASF800
	.byte	0x1
	.byte	0x2d
	.long	0x4e4c
	.uleb128 0x9
	.byte	0x3
	.quad	PelYline_11
	.uleb128 0x7
	.byte	0x8
	.long	0x4e14
	.uleb128 0x23
	.long	.LASF801
	.byte	0x1
	.byte	0x49
	.long	0xe48
	.uleb128 0x9
	.byte	0x3
	.quad	search_setup_done
	.uleb128 0x23
	.long	.LASF802
	.byte	0x1
	.byte	0x4a
	.long	0xe48
	.uleb128 0x9
	.byte	0x3
	.quad	search_center_x
	.uleb128 0x23
	.long	.LASF803
	.byte	0x1
	.byte	0x4b
	.long	0xe48
	.uleb128 0x9
	.byte	0x3
	.quad	search_center_y
	.uleb128 0x23
	.long	.LASF804
	.byte	0x1
	.byte	0x4c
	.long	0xe48
	.uleb128 0x9
	.byte	0x3
	.quad	pos_00
	.uleb128 0x23
	.long	.LASF805
	.byte	0x1
	.byte	0x4d
	.long	0x4ebb
	.uleb128 0x9
	.byte	0x3
	.quad	BlockSAD
	.uleb128 0x7
	.byte	0x8
	.long	0x214e
	.uleb128 0x23
	.long	.LASF806
	.byte	0x1
	.byte	0x4e
	.long	0xe48
	.uleb128 0x9
	.byte	0x3
	.quad	max_search_range
	.uleb128 0x32
	.long	.LASF807
	.byte	0x7
	.value	0x1ee
	.long	0xe54
	.uleb128 0x32
	.long	.LASF808
	.byte	0x7
	.value	0x1f5
	.long	0x34
	.uleb128 0x32
	.long	.LASF809
	.byte	0x7
	.value	0x1f5
	.long	0x34
	.uleb128 0x32
	.long	.LASF810
	.byte	0x7
	.value	0x1f6
	.long	0x4f06
	.uleb128 0x7
	.byte	0x8
	.long	0x288
	.uleb128 0x32
	.long	.LASF811
	.byte	0x7
	.value	0x201
	.long	0x20a6
	.uleb128 0x32
	.long	.LASF812
	.byte	0x7
	.value	0x202
	.long	0x214e
	.uleb128 0x32
	.long	.LASF813
	.byte	0x7
	.value	0x203
	.long	0x34
	.uleb128 0x32
	.long	.LASF814
	.byte	0x7
	.value	0x205
	.long	0x34
	.uleb128 0x32
	.long	.LASF815
	.byte	0x7
	.value	0x215
	.long	0x2199
	.uleb128 0x32
	.long	.LASF816
	.byte	0x7
	.value	0x216
	.long	0x219f
	.uleb128 0x32
	.long	.LASF817
	.byte	0x7
	.value	0x21d
	.long	0x34
	.uleb128 0x32
	.long	.LASF818
	.byte	0x7
	.value	0x4b7
	.long	0x4f6c
	.uleb128 0x7
	.byte	0x8
	.long	0x16b5
	.uleb128 0x33
	.string	"img"
	.byte	0x7
	.value	0x4b8
	.long	0x4f7e
	.uleb128 0x7
	.byte	0x8
	.long	0x21ed
	.uleb128 0x34
	.long	.LASF819
	.byte	0x1
	.byte	0x34
	.long	0x8e
	.uleb128 0x9
	.byte	0x3
	.quad	refbits
	.uleb128 0x34
	.long	.LASF820
	.byte	0x1
	.byte	0x36
	.long	0x214e
	.uleb128 0x9
	.byte	0x3
	.quad	motion_cost
	.uleb128 0x4
	.long	0x4fbe
	.long	0x4fbe
	.uleb128 0x5
	.long	0x75
	.byte	0x5
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.long	0x25c0
	.uleb128 0x35
	.long	.LASF821
	.byte	0x8
	.byte	0xa0
	.long	0x4fae
	.uleb128 0x4
	.long	0x34
	.long	0x4fdf
	.uleb128 0x5
	.long	0x75
	.byte	0x5
	.byte	0
	.uleb128 0x35
	.long	.LASF822
	.byte	0x8
	.byte	0xa1
	.long	0x4fcf
	.uleb128 0x35
	.long	.LASF823
	.byte	0xa
	.byte	0x13
	.long	0x25c0
	.uleb128 0x4
	.long	0x34
	.long	0x5005
	.uleb128 0x5
	.long	0x75
	.byte	0x27
	.byte	0
	.uleb128 0x34
	.long	.LASF824
	.byte	0xb
	.byte	0x14
	.long	0x501a
	.uleb128 0x9
	.byte	0x3
	.quad	QP2QUANT
	.uleb128 0x36
	.long	0x4ff5
	.uleb128 0x35
	.long	.LASF825
	.byte	0xc
	.byte	0x59
	.long	0x4ebb
	.uleb128 0x35
	.long	.LASF826
	.byte	0xc
	.byte	0x5a
	.long	0x4ebb
	.uleb128 0x35
	.long	.LASF827
	.byte	0xc
	.byte	0x5b
	.long	0x34
	.uleb128 0x35
	.long	.LASF828
	.byte	0xc
	.byte	0x5b
	.long	0x34
	.uleb128 0x35
	.long	.LASF829
	.byte	0xc
	.byte	0x5b
	.long	0x34
	.uleb128 0x35
	.long	.LASF830
	.byte	0xc
	.byte	0x5b
	.long	0x34
	.uleb128 0x35
	.long	.LASF831
	.byte	0xc
	.byte	0x5c
	.long	0x34
	.uleb128 0x35
	.long	.LASF832
	.byte	0xc
	.byte	0x5d
	.long	0x65
	.uleb128 0x35
	.long	.LASF833
	.byte	0xc
	.byte	0x5d
	.long	0x65
	.uleb128 0x35
	.long	.LASF834
	.byte	0xc
	.byte	0x5d
	.long	0x65
	.uleb128 0x35
	.long	.LASF835
	.byte	0xc
	.byte	0x66
	.long	0x34
	.uleb128 0x34
	.long	.LASF836
	.byte	0x1
	.byte	0x30
	.long	0x34
	.uleb128 0x9
	.byte	0x3
	.quad	max_mvd
	.uleb128 0x34
	.long	.LASF837
	.byte	0x1
	.byte	0x31
	.long	0x8e
	.uleb128 0x9
	.byte	0x3
	.quad	spiral_search_x
	.uleb128 0x34
	.long	.LASF838
	.byte	0x1
	.byte	0x32
	.long	0x8e
	.uleb128 0x9
	.byte	0x3
	.quad	spiral_search_y
	.uleb128 0x34
	.long	.LASF839
	.byte	0x1
	.byte	0x33
	.long	0x8e
	.uleb128 0x9
	.byte	0x3
	.quad	mvbits
	.uleb128 0x34
	.long	.LASF840
	.byte	0x1
	.byte	0x35
	.long	0x8e
	.uleb128 0x9
	.byte	0x3
	.quad	byte_abs
	.uleb128 0x35
	.long	.LASF841
	.byte	0x1
	.byte	0x50
	.long	0x510c
	.uleb128 0x7
	.byte	0x8
	.long	0x25b5
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0x6
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x34
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x35
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x36
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF831:
	.string	"FME_blocktype"
.LASF492:
	.string	"bitdepth_luma_qp_scale"
.LASF342:
	.string	"channel_type"
.LASF42:
	.string	"pic_init_qs_minus26"
.LASF547:
	.string	"StorablePicture"
.LASF493:
	.string	"bitdepth_chroma_qp_scale"
.LASF343:
	.string	"ScalingMatrixPresentFlag"
.LASF458:
	.string	"no_output_of_prior_pics_flag"
.LASF58:
	.string	"BITS_INTER_MB"
.LASF425:
	.string	"num_ref_idx_l1_active"
.LASF441:
	.string	"pic_order_cnt_lsb"
.LASF624:
	.string	"number_of_reference_frames"
.LASF662:
	.string	"satd"
.LASF482:
	.string	"write_macroblock"
.LASF7:
	.string	"sizetype"
.LASF485:
	.string	"DeblockCall"
.LASF531:
	.string	"imgY_ups_w"
.LASF63:
	.string	"MAX_BITCOUNTER_MB"
.LASF835:
	.string	"flag_intra_SAD"
.LASF768:
	.string	"bslice"
.LASF729:
	.string	"max_value"
.LASF367:
	.string	"width_cr"
.LASF454:
	.string	"PicSizeInMbs"
.LASF69:
	.string	"B_SLICE"
.LASF403:
	.string	"MB_SyntaxElements"
.LASF605:
	.string	"pred_vec"
.LASF529:
	.string	"imgY_11_w"
.LASF398:
	.string	"cofAC"
.LASF764:
	.string	"PartitionMotionSearch"
.LASF523:
	.string	"size_x_cr"
.LASF754:
	.string	"mb_a"
.LASF755:
	.string	"mb_b"
.LASF500:
	.string	"lossless_qpprime_flag"
.LASF281:
	.string	"PocMemoryManagement"
.LASF413:
	.string	"imgtr_next_P_fld"
.LASF233:
	.string	"search_range"
.LASF428:
	.string	"mvscale"
.LASF51:
	.string	"int64"
.LASF804:
	.string	"pos_00"
.LASF221:
	.string	"slices"
.LASF125:
	.string	"long_term_pic_num"
.LASF68:
	.string	"P_SLICE"
.LASF379:
	.string	"ipredmode8x8"
.LASF383:
	.string	"mb_y"
.LASF460:
	.string	"dec_ref_pic_marking_buffer"
.LASF250:
	.string	"infile_header"
.LASF779:
	.string	"fw_rFrameU"
.LASF300:
	.string	"full_search"
.LASF551:
	.string	"top_ref_pic_id"
.LASF11:
	.string	"time_t"
.LASF46:
	.string	"deblocking_filter_control_present_flag"
.LASF337:
	.string	"DisplayEncParams"
.LASF647:
	.string	"lambda_factor"
.LASF747:
	.string	"BIDPartitionCost"
.LASF602:
	.string	"mv_a"
.LASF603:
	.string	"mv_b"
.LASF604:
	.string	"mv_c"
.LASF427:
	.string	"top_field"
.LASF667:
	.string	"block_size_y"
.LASF703:
	.string	"ref1_center_x"
.LASF47:
	.string	"constrained_intra_pred_flag"
.LASF89:
	.string	"state"
.LASF833:
	.string	"pred_MV_ref"
.LASF296:
	.string	"Intra16x16ParDisable"
.LASF103:
	.string	"bcbp_contexts"
.LASF129:
	.string	"syntaxelement"
.LASF259:
	.string	"successive_Bframe"
.LASF770:
	.string	"Get_Direct_Motion_Vectors"
.LASF269:
	.string	"WeightedPrediction"
.LASF130:
	.string	"type"
.LASF418:
	.string	"fw_mb_mode"
.LASF455:
	.string	"FrameSizeInMbs"
.LASF535:
	.string	"ref_id"
.LASF814:
	.string	"wp_luma_round"
.LASF177:
	.string	"LFDisableIdc"
.LASF525:
	.string	"chroma_vector_adjustment"
.LASF262:
	.string	"directInferenceFlag"
.LASF190:
	.string	"bits_to_go_skip"
.LASF420:
	.string	"pred_mv"
.LASF332:
	.string	"context_init_method"
.LASF645:
	.string	"get_ref_line"
.LASF334:
	.string	"AllowTransform8x8"
.LASF663:
	.string	"SATD8X8"
.LASF498:
	.string	"num_blk8x8_uv"
.LASF780:
	.string	"fw_rFrameUL"
.LASF248:
	.string	"slice_argument"
.LASF207:
	.string	"rmpni_buffer"
.LASF753:
	.string	"zeroMotionLeft"
.LASF781:
	.string	"fw_rFrameUR"
.LASF289:
	.string	"InterSearch8x4"
.LASF158:
	.string	"mb_field"
.LASF288:
	.string	"InterSearch8x8"
.LASF321:
	.string	"NumFramesInELSubSeq"
.LASF584:
	.string	"LineSadBlk0"
.LASF585:
	.string	"LineSadBlk1"
.LASF586:
	.string	"LineSadBlk2"
.LASF126:
	.string	"long_term_frame_idx"
.LASF588:
	.string	"max_width"
.LASF515:
	.string	"bottom_ref_pic_num"
.LASF378:
	.string	"ipredmode"
.LASF275:
	.string	"RDBSliceWeightOnly"
.LASF240:
	.string	"GenerateMultiplePPS"
.LASF150:
	.string	"b8mode"
.LASF843:
	.string	"mv-search.c"
.LASF557:
	.string	"bottom_moving_block"
.LASF723:
	.string	"step_v0"
.LASF216:
	.string	"slice_too_big"
.LASF657:
	.string	"FastFullPelBlockMotionSearch"
.LASF395:
	.string	"mprr_2"
.LASF396:
	.string	"mprr_3"
.LASF748:
	.string	"GetSkipCostMB"
.LASF660:
	.string	"diff"
.LASF183:
	.string	"bits_to_go"
.LASF122:
	.string	"DecRefPicMarking_s"
.LASF128:
	.string	"DecRefPicMarking_t"
.LASF39:
	.string	"weighted_pred_flag"
.LASF620:
	.string	"bits"
.LASF589:
	.string	"max_height"
.LASF573:
	.string	"orgptr"
.LASF483:
	.string	"bot_MB"
.LASF481:
	.string	"BasicUnit"
.LASF234:
	.string	"num_ref_frames"
.LASF85:
	.string	"EcodestrmS"
.LASF405:
	.string	"intra_block"
.LASF62:
	.string	"BITS_DELTA_QUANT_MB"
.LASF6:
	.string	"long int"
.LASF504:
	.string	"auto_crop_right"
.LASF686:
	.string	"iteration"
.LASF577:
	.string	"range_partly_outside"
.LASF516:
	.string	"pic_num"
.LASF397:
	.string	"mprr_c"
.LASF167:
	.string	"all_blk_8x8"
.LASF746:
	.string	"pred_mv_bi"
.LASF309:
	.string	"nobskip"
.LASF456:
	.string	"nal_reference_idc"
.LASF447:
	.string	"framepoc"
.LASF687:
	.string	"pred_mv_x1"
.LASF689:
	.string	"pred_mv_x2"
.LASF462:
	.string	"NumberofTextureBits"
.LASF393:
	.string	"opix_c_y"
.LASF271:
	.string	"UseWeightedReferenceME"
.LASF518:
	.string	"used_for_reference"
.LASF323:
	.string	"RandomIntraMBRefresh"
.LASF484:
	.string	"write_macroblock_frame"
.LASF187:
	.string	"stored_byte_buf"
.LASF55:
	.string	"BITS_HEADER"
.LASF357:
	.string	"InputParameters"
.LASF324:
	.string	"LFSendParameters"
.LASF451:
	.string	"PicHeightInMapUnits"
.LASF666:
	.string	"block_size_x"
.LASF513:
	.string	"frm_ref_pic_num"
.LASF836:
	.string	"max_mvd"
.LASF470:
	.string	"NumberofGOP"
.LASF490:
	.string	"bitdepth_luma"
.LASF59:
	.string	"BITS_CBP_MB"
.LASF392:
	.string	"opix_c_x"
.LASF75:
	.string	"Ebuffer"
.LASF688:
	.string	"pred_mv_y1"
.LASF690:
	.string	"pred_mv_y2"
.LASF644:
	.string	"ref_line"
.LASF251:
	.string	"infile"
.LASF253:
	.string	"ReconFile"
.LASF74:
	.string	"Erange"
.LASF681:
	.string	"min_pos2"
.LASF4:
	.string	"signed char"
.LASF365:
	.string	"framerate"
.LASF202:
	.string	"max_part_nr"
.LASF88:
	.string	"EncodingEnvironmentPtr"
.LASF436:
	.string	"delta_pic_order_always_zero_flag"
.LASF382:
	.string	"mb_x"
.LASF737:
	.string	"h4x4blkno"
.LASF695:
	.string	"get_ref_line1"
.LASF598:
	.string	"ref_frame"
.LASF749:
	.string	"diff8x8"
.LASF157:
	.string	"IntraChromaPredModeFlag"
.LASF127:
	.string	"max_long_term_frame_idx_plus1"
.LASF134:
	.string	"context"
.LASF21:
	.string	"pic_parameter_set_id"
.LASF52:
	.string	"FRAME_CODING"
.LASF211:
	.string	"long_term_pic_idx_l0"
.LASF215:
	.string	"long_term_pic_idx_l1"
.LASF208:
	.string	"ref_pic_list_reordering_flag_l0"
.LASF212:
	.string	"ref_pic_list_reordering_flag_l1"
.LASF472:
	.string	"NumberofPPicture"
.LASF711:
	.string	"pixel1"
.LASF712:
	.string	"pixel2"
.LASF467:
	.string	"NumberofMBHeaderBits"
.LASF816:
	.string	"direct_pdir"
.LASF399:
	.string	"cofDC"
.LASF1:
	.string	"unsigned char"
.LASF148:
	.string	"intra_pred_modes8x8"
.LASF26:
	.string	"pic_scaling_list_present_flag"
.LASF601:
	.string	"mb_nr"
.LASF617:
	.string	"SAD_d"
.LASF266:
	.string	"BiPredMESubPel"
.LASF651:
	.string	"pred_x"
.LASF652:
	.string	"pred_y"
.LASF54:
	.string	"ADAPTIVE_CODING"
.LASF486:
	.string	"last_pic_bottom_field"
.LASF263:
	.string	"BiPredMotionEstimation"
.LASF422:
	.string	"bipred_mv1"
.LASF423:
	.string	"bipred_mv2"
.LASF105:
	.string	"last_contexts"
.LASF156:
	.string	"c_ipred_mode"
.LASF30:
	.string	"run_length_minus1"
.LASF497:
	.string	"max_imgpel_value_uv"
.LASF244:
	.string	"intra_upd"
.LASF209:
	.string	"remapping_of_pic_nums_idc_l0"
.LASF213:
	.string	"remapping_of_pic_nums_idc_l1"
.LASF550:
	.string	"top_ref_idx"
.LASF210:
	.string	"abs_diff_pic_num_minus1_l0"
.LASF214:
	.string	"abs_diff_pic_num_minus1_l1"
.LASF327:
	.string	"SPPercentageThreshold"
.LASF184:
	.string	"byte_buf"
.LASF227:
	.string	"ProfileIDC"
.LASF671:
	.string	"search_pos4"
.LASF170:
	.string	"bi_pred_me"
.LASF618:
	.string	"temp_pred_SAD"
.LASF632:
	.string	"pic_pix_y"
.LASF141:
	.string	"delta_qp"
.LASF760:
	.string	"currMB"
.LASF43:
	.string	"chroma_qp_index_offset"
.LASF364:
	.string	"max_num_references"
.LASF8:
	.string	"char"
.LASF568:
	.string	"ResetFastFullIntegerSearch"
.LASF377:
	.string	"block_c_x"
.LASF812:
	.string	"wbp_weight"
.LASF736:
	.string	"cost"
.LASF98:
	.string	"transform_size_contexts"
.LASF459:
	.string	"long_term_reference_flag"
.LASF238:
	.string	"Log2MaxFrameNum"
.LASF639:
	.string	"lambda"
.LASF705:
	.string	"bi_diff"
.LASF373:
	.string	"is_intra_block"
.LASF656:
	.string	"FullPelBlockMotionSearch"
.LASF201:
	.string	"start_mb_nr"
.LASF821:
	.string	"listX"
.LASF338:
	.string	"RCEnable"
.LASF802:
	.string	"search_center_x"
.LASF803:
	.string	"search_center_y"
.LASF273:
	.string	"RDPictureIntra"
.LASF237:
	.string	"B_List1_refs"
.LASF112:
	.string	"mb_addr"
.LASF559:
	.string	"timeb"
.LASF260:
	.string	"qpBRSOffset"
.LASF520:
	.string	"non_existing"
.LASF325:
	.string	"SparePictureOption"
.LASF761:
	.string	"Get_Direct_Cost8x8"
.LASF56:
	.string	"BITS_TOTAL_MB"
.LASF731:
	.string	"tstruct1"
.LASF732:
	.string	"tstruct2"
.LASF734:
	.string	"N_Bframe"
.LASF783:
	.string	"bw_rFrameU"
.LASF302:
	.string	"qpN2"
.LASF562:
	.string	"timezone"
.LASF256:
	.string	"intra_period"
.LASF144:
	.string	"mb_available_up"
.LASF443:
	.string	"delta_pic_order_cnt"
.LASF757:
	.string	"a_ref_idx"
.LASF658:
	.string	"block_index"
.LASF291:
	.string	"InterSearch4x4"
.LASF290:
	.string	"InterSearch4x8"
.LASF844:
	.string	"/home/yunqi/SPEC2006/benchspec/CPU2006/464.h264ref/build/build_base_amd64-m64-gcc43-nn.0000"
.LASF622:
	.string	"imax"
.LASF528:
	.string	"imgY_11"
.LASF461:
	.string	"NumberofHeaderBits"
.LASF305:
	.string	"qp02"
.LASF359:
	.string	"nb_references"
.LASF133:
	.string	"bitpattern"
.LASF72:
	.string	"SI_SLICE"
.LASF97:
	.string	"mb_aff_contexts"
.LASF168:
	.string	"luma_transform_size_8x8_flag"
.LASF344:
	.string	"ScalingListPresentFlag"
.LASF385:
	.string	"block_y"
.LASF276:
	.string	"SkipIntraInInterSlices"
.LASF635:
	.string	"pred_mv_y"
.LASF400:
	.string	"currentPicture"
.LASF93:
	.string	"b8_type_contexts"
.LASF50:
	.string	"pic_parameter_set_rbsp_t"
.LASF595:
	.string	"SetMotionVectorPredictor"
.LASF32:
	.string	"bottom_right"
.LASF270:
	.string	"WeightedBiprediction"
.LASF416:
	.string	"p_interval"
.LASF226:
	.string	"Picture"
.LASF509:
	.string	"bottom_poc"
.LASF414:
	.string	"imgtr_last_P_fld"
.LASF790:
	.string	"mb_left"
.LASF640:
	.string	"cand_x"
.LASF818:
	.string	"input"
.LASF312:
	.string	"LeakyBucketParamFile"
.LASF758:
	.string	"b_mv_y"
.LASF530:
	.string	"imgY_ups"
.LASF229:
	.string	"no_frames"
.LASF173:
	.string	"prev_delta_qp"
.LASF839:
	.string	"mvbits"
.LASF792:
	.string	"mb_upleft"
.LASF41:
	.string	"pic_init_qp_minus26"
.LASF708:
	.string	"offsetSpic"
.LASF241:
	.string	"img_width"
.LASF280:
	.string	"PyramidRefReorder"
.LASF762:
	.string	"cost8x8"
.LASF730:
	.string	"mv_array"
.LASF374:
	.string	"is_v_block"
.LASF247:
	.string	"slice_mode"
.LASF285:
	.string	"InterSearch16x16"
.LASF809:
	.string	"me_time"
.LASF376:
	.string	"mb_y_intra"
.LASF92:
	.string	"mb_type_contexts"
.LASF815:
	.string	"direct_ref_idx"
.LASF31:
	.string	"top_left"
.LASF665:
	.string	"curr_diff"
.LASF191:
	.string	"streamBuffer"
.LASF83:
	.string	"Ebits_to_goS"
.LASF569:
	.string	"refindex"
.LASF609:
	.string	"rFrameUR"
.LASF286:
	.string	"InterSearch16x8"
.LASF473:
	.string	"MADofMB"
.LASF664:
	.string	"find_SATD"
.LASF676:
	.string	"max_pos_y4"
.LASF772:
	.string	"opic_block_y"
.LASF739:
	.string	"bipred_mv"
.LASF424:
	.string	"num_ref_idx_l0_active"
.LASF333:
	.string	"model_number"
.LASF70:
	.string	"I_SLICE"
.LASF265:
	.string	"BiPredMESearchRange"
.LASF138:
	.string	"macroblock"
.LASF445:
	.string	"toppoc"
.LASF719:
	.string	"curr_blk"
.LASF435:
	.string	"MbaffFrameFlag"
.LASF73:
	.string	"Elow"
.LASF390:
	.string	"opix_x"
.LASF341:
	.string	"basicunit"
.LASF634:
	.string	"pred_mv_x"
.LASF508:
	.string	"top_poc"
.LASF313:
	.string	"PicInterlace"
.LASF200:
	.string	"picture_type"
.LASF503:
	.string	"chroma_qp_offset"
.LASF279:
	.string	"ExplicitPyramidFormat"
.LASF453:
	.string	"PicHeightInMbs"
.LASF351:
	.string	"lossless_qpprime_y_zero_flag"
.LASF49:
	.string	"vui_pic_parameters_flag"
.LASF507:
	.string	"storable_picture"
.LASF825:
	.string	"all_mincost"
.LASF255:
	.string	"QmatrixFile"
.LASF580:
	.string	"abs_x"
.LASF581:
	.string	"abs_y"
.LASF426:
	.string	"field_mode"
.LASF756:
	.string	"a_mv_y"
.LASF272:
	.string	"RDPictureDecision"
.LASF87:
	.string	"EncodingEnvironment"
.LASF197:
	.string	"writeSyntaxElement"
.LASF626:
	.string	"max_ref_bits"
.LASF797:
	.string	"sign"
.LASF614:
	.string	"SAD_a"
.LASF615:
	.string	"SAD_b"
.LASF616:
	.string	"SAD_c"
.LASF228:
	.string	"LevelIDC"
.LASF0:
	.string	"long unsigned int"
.LASF101:
	.string	"cipr_contexts"
.LASF726:
	.string	"p_mv"
.LASF86:
	.string	"Ecodestrm_lenS"
.LASF769:
	.string	"numlists"
.LASF714:
	.string	"SubPelBlockSearchBiPred"
.LASF765:
	.string	"ref_array"
.LASF339:
	.string	"bit_rate"
.LASF203:
	.string	"num_mb"
.LASF692:
	.string	"s_mv_y"
.LASF446:
	.string	"bottompoc"
.LASF706:
	.string	"weightSpic"
.LASF709:
	.string	"offsetRpic"
.LASF239:
	.string	"ResendPPS"
.LASF740:
	.string	"min_mcostbi"
.LASF827:
	.string	"pred_SAD_space"
.LASF699:
	.string	"pred_x1"
.LASF701:
	.string	"pred_x2"
.LASF294:
	.string	"Intra4x4DiagDisable"
.LASF410:
	.string	"pstruct_next_P"
.LASF575:
	.string	"offset_x"
.LASF576:
	.string	"offset_y"
.LASF154:
	.string	"lf_alpha_c0_offset"
.LASF505:
	.string	"auto_crop_bottom"
.LASF655:
	.string	"check_for_00"
.LASF254:
	.string	"TraceFile"
.LASF654:
	.string	"center_y"
.LASF653:
	.string	"center_x"
.LASF704:
	.string	"ref1_center_y"
.LASF249:
	.string	"UseConstrainedIntraPred"
.LASF659:
	.string	"SATD"
.LASF111:
	.string	"available"
.LASF474:
	.string	"BasicUnitQP"
.LASF466:
	.string	"NumberofMBTextureBits"
.LASF811:
	.string	"wp_offset"
.LASF628:
	.string	"number_of_subpel_positions"
.LASF152:
	.string	"cbp_bits"
.LASF700:
	.string	"pred_y1"
.LASF702:
	.string	"pred_y2"
.LASF526:
	.string	"coded_frame"
.LASF510:
	.string	"frame_poc"
.LASF388:
	.string	"pix_c_x"
.LASF389:
	.string	"pix_c_y"
.LASF231:
	.string	"hadamard"
.LASF417:
	.string	"b_frame_to_code"
.LASF222:
	.string	"bits_per_picture"
.LASF375:
	.string	"mb_y_upd"
.LASF356:
	.string	"OffsetMatrixPresentFlag"
.LASF713:
	.string	"offsetBi"
.LASF319:
	.string	"NoOfDecoders"
.LASF118:
	.string	"RMPNI"
.LASF808:
	.string	"me_tot_time"
.LASF625:
	.string	"max_search_points"
.LASF66:
	.string	"BOTTOM_FIELD"
.LASF178:
	.string	"LFAlphaC0Offset"
.LASF820:
	.string	"motion_cost"
.LASF155:
	.string	"lf_beta_offset"
.LASF721:
	.string	"parttype"
.LASF124:
	.string	"difference_of_pic_nums_minus1"
.LASF608:
	.string	"rFrameU"
.LASF322:
	.string	"NumFrameIn2ndIGOP"
.LASF444:
	.string	"field_picture"
.LASF257:
	.string	"idr_enable"
.LASF394:
	.string	"mprr"
.LASF258:
	.string	"start_frame"
.LASF527:
	.string	"imgY"
.LASF99:
	.string	"MotionInfoContexts"
.LASF799:
	.string	"PelY_14b"
.LASF828:
	.string	"pred_SAD_time"
.LASF673:
	.string	"cand_mv_x"
.LASF674:
	.string	"cand_mv_y"
.LASF9:
	.string	"long long int"
.LASF37:
	.string	"num_ref_idx_l0_active_minus1"
.LASF778:
	.string	"fw_rFrameL"
.LASF415:
	.string	"b_interval"
.LASF76:
	.string	"Ebits_to_go"
.LASF407:
	.string	"fld_flag"
.LASF715:
	.string	"BPredPartitionCost"
.LASF409:
	.string	"direct_intraP_ref"
.LASF366:
	.string	"width"
.LASF20:
	.string	"Valid"
.LASF146:
	.string	"mb_type"
.LASF186:
	.string	"stored_bits_to_go"
.LASF502:
	.string	"mb_cr_size_y"
.LASF590:
	.string	"ref_picture"
.LASF553:
	.string	"top_moving_block"
.LASF440:
	.string	"offset_for_ref_frame"
.LASF591:
	.string	"ref_pic"
.LASF140:
	.string	"slice_nr"
.LASF817:
	.string	"Bframe_ctr"
.LASF224:
	.string	"distortion_u"
.LASF225:
	.string	"distortion_v"
.LASF223:
	.string	"distortion_y"
.LASF189:
	.string	"byte_pos_skip"
.LASF179:
	.string	"LFBetaOffset"
.LASF15:
	.string	"double"
.LASF682:
	.string	"max_pos2"
.LASF641:
	.string	"cand_y"
.LASF326:
	.string	"SPDetectionThreshold"
.LASF759:
	.string	"b_ref_idx"
.LASF539:
	.string	"frame"
.LASF185:
	.string	"stored_byte_pos"
.LASF352:
	.string	"residue_transform_flag"
.LASF838:
	.string	"spiral_search_y"
.LASF412:
	.string	"imgtr_last_P_frm"
.LASF807:
	.string	"imgY_org"
.LASF727:
	.string	"BlockMotionSearch"
.LASF555:
	.string	"bottom_ref_pic_id"
.LASF789:
	.string	"pmvbw"
.LASF106:
	.string	"one_contexts"
.LASF524:
	.string	"size_y_cr"
.LASF314:
	.string	"MbInterlace"
.LASF142:
	.string	"qpsp"
.LASF14:
	.string	"float"
.LASF336:
	.string	"ReportFrameStats"
.LASF278:
	.string	"PyramidCoding"
.LASF90:
	.string	"count"
.LASF174:
	.string	"prev_cbp"
.LASF282:
	.string	"symbol_mode"
.LASF592:
	.string	"block_sad"
.LASF91:
	.string	"BiContextType"
.LASF519:
	.string	"is_output"
.LASF822:
	.string	"listXsize"
.LASF408:
	.string	"rd_pass"
.LASF404:
	.string	"quad"
.LASF3:
	.string	"unsigned int"
.LASF115:
	.string	"PixelPos"
.LASF107:
	.string	"abs_contexts"
.LASF629:
	.string	"max_mv_bits"
.LASF77:
	.string	"Ebits_to_follow"
.LASF810:
	.string	"active_pps"
.LASF192:
	.string	"write_flag"
.LASF361:
	.string	"total_number_mb"
.LASF621:
	.string	"imin"
.LASF45:
	.string	"cr_qp_index_offset"
.LASF79:
	.string	"Ecodestrm_len"
.LASF206:
	.string	"tex_ctx"
.LASF267:
	.string	"sp_periodicity"
.LASF791:
	.string	"mb_up"
.LASF554:
	.string	"bottom_ref_idx"
.LASF773:
	.string	"all_mvs"
.LASF471:
	.string	"TotalQpforPPicture"
.LASF145:
	.string	"mb_available_left"
.LASF117:
	.string	"RMPNIbuffer_s"
.LASF121:
	.string	"RMPNIbuffer_t"
.LASF329:
	.string	"slice_group_change_cycle"
.LASF354:
	.string	"LambdaWeight"
.LASF110:
	.string	"TextureInfoContexts"
.LASF538:
	.string	"bottom_field"
.LASF360:
	.string	"current_mb_nr"
.LASF607:
	.string	"rFrameL"
.LASF310:
	.string	"NumberLeakyBuckets"
.LASF512:
	.string	"ref_pic_num"
.LASF431:
	.string	"layer"
.LASF151:
	.string	"b8pdir"
.LASF219:
	.string	"no_slices"
.LASF438:
	.string	"offset_for_top_to_bottom_field"
.LASF735:
	.string	"n_Bframe"
.LASF298:
	.string	"ChromaIntraDisable"
.LASF411:
	.string	"imgtr_next_P_frm"
.LASF476:
	.string	"FieldControl"
.LASF566:
	.string	"InitializeFastFullIntegerSearch"
.LASF468:
	.string	"NumberofCodedBFrame"
.LASF564:
	.string	"list"
.LASF430:
	.string	"i16offset"
.LASF297:
	.string	"Intra16x16PlaneDisable"
.LASF116:
	.string	"pix_pos"
.LASF268:
	.string	"qpsp_pred"
.LASF750:
	.string	"block"
.LASF829:
	.string	"pred_SAD_ref"
.LASF331:
	.string	"pic_order_cnt_type"
.LASF386:
	.string	"pix_x"
.LASF387:
	.string	"pix_y"
.LASF571:
	.string	"SetupFastFullPelSearch"
.LASF842:
	.string	"GNU C 4.8.1 -mtune=generic -march=x86-64 -g -fno-strict-aliasing -fstack-protector"
.LASF646:
	.string	"best_pos"
.LASF696:
	.string	"get_ref_line2"
.LASF501:
	.string	"mb_cr_size_x"
.LASF823:
	.string	"enc_picture"
.LASF506:
	.string	"ImageParameters"
.LASF196:
	.string	"ee_cabac"
.LASF649:
	.string	"blocksize_x"
.LASF648:
	.string	"blocksize_y"
.LASF17:
	.string	"FALSE"
.LASF175:
	.string	"predict_qp"
.LASF537:
	.string	"field_frame"
.LASF610:
	.string	"block_a"
.LASF611:
	.string	"block_b"
.LASF612:
	.string	"block_c"
.LASF613:
	.string	"block_d"
.LASF832:
	.string	"pred_MV_time"
.LASF793:
	.string	"mb_upright"
.LASF53:
	.string	"FIELD_CODING"
.LASF561:
	.string	"millitm"
.LASF232:
	.string	"hadamardqpel"
.LASF113:
	.string	"pos_x"
.LASF114:
	.string	"pos_y"
.LASF293:
	.string	"Intra4x4ParDisable"
.LASF766:
	.string	"pic_block_x"
.LASF384:
	.string	"block_x"
.LASF311:
	.string	"LeakyBucketRateFile"
.LASF242:
	.string	"img_height"
.LASF246:
	.string	"part_size"
.LASF284:
	.string	"partition_mode"
.LASF487:
	.string	"last_has_mmco_5"
.LASF546:
	.string	"frame_cropping_rect_bottom_offset"
.LASF109:
	.string	"fld_last_contexts"
.LASF834:
	.string	"pred_MV_uplayer"
.LASF437:
	.string	"offset_for_non_ref_pic"
.LASF48:
	.string	"redundant_pic_cnt_present_flag"
.LASF180:
	.string	"skip_flag"
.LASF449:
	.string	"frame_num"
.LASF104:
	.string	"map_contexts"
.LASF328:
	.string	"SliceGroupConfigFileName"
.LASF71:
	.string	"SP_SLICE"
.LASF123:
	.string	"memory_management_control_operation"
.LASF826:
	.string	"all_bwmincost"
.LASF315:
	.string	"IntraBottom"
.LASF776:
	.string	"co_located_ref_idx"
.LASF193:
	.string	"Bitstream"
.LASF355:
	.string	"QOffsetMatrixFile"
.LASF678:
	.string	"check_position0"
.LASF236:
	.string	"B_List0_refs"
.LASF722:
	.string	"step_h0"
.LASF763:
	.string	"Get_Direct_CostMB"
.LASF433:
	.string	"NoResidueDirect"
.LASF549:
	.string	"mb_adaptive_frame_field_flag"
.LASF693:
	.string	"ref2_line"
.LASF480:
	.string	"NumberofCodedMacroBlocks"
.LASF23:
	.string	"entropy_coding_mode_flag"
.LASF199:
	.string	"picture_id"
.LASF541:
	.string	"frame_mbs_only_flag"
.LASF784:
	.string	"bw_rFrameUL"
.LASF406:
	.string	"fld_type"
.LASF469:
	.string	"NumberofCodedPFrame"
.LASF38:
	.string	"num_ref_idx_l1_active_minus1"
.LASF785:
	.string	"bw_rFrameUR"
.LASF567:
	.string	"ClearFastFullIntegerSearch"
.LASF13:
	.string	"long long unsigned int"
.LASF57:
	.string	"BITS_MB_MODE"
.LASF694:
	.string	"ref1_line"
.LASF675:
	.string	"max_pos_x4"
.LASF264:
	.string	"BiPredMERefinements"
.LASF795:
	.string	"mapped_idx"
.LASF147:
	.string	"intra_pred_modes"
.LASF369:
	.string	"height_cr"
.LASF421:
	.string	"all_mv"
.LASF563:
	.string	"dstflag"
.LASF304:
	.string	"qp2start"
.LASF787:
	.string	"bw_rFrame"
.LASF830:
	.string	"pred_SAD_uplayer"
.LASF741:
	.string	"bimv_x"
.LASF368:
	.string	"height"
.LASF363:
	.string	"structure"
.LASF217:
	.string	"field_ctx"
.LASF650:
	.string	"blocksize_x4"
.LASF40:
	.string	"weighted_bipred_idc"
.LASF198:
	.string	"DataPartition"
.LASF717:
	.string	"fw_ref"
.LASF402:
	.string	"mb_data"
.LASF545:
	.string	"frame_cropping_rect_top_offset"
.LASF340:
	.string	"SeinitialQP"
.LASF710:
	.string	"weightedpel"
.LASF464:
	.string	"NumberofBasicUnitTextureBits"
.LASF439:
	.string	"num_ref_frames_in_pic_order_cnt_cycle"
.LASF574:
	.string	"refptr"
.LASF218:
	.string	"Slice"
.LASF194:
	.string	"datapartition"
.LASF84:
	.string	"Ebits_to_followS"
.LASF685:
	.string	"FullPelBlockMotionBiPred"
.LASF370:
	.string	"height_cr_frame"
.LASF684:
	.string	"qpelstart"
.LASF565:
	.string	"max_pos"
.LASF636:
	.string	"mv_x"
.LASF478:
	.string	"Frame_Total_Number_MB"
.LASF637:
	.string	"mv_y"
.LASF10:
	.string	"__time_t"
.LASF131:
	.string	"value1"
.LASF132:
	.string	"value2"
.LASF638:
	.string	"min_mcost"
.LASF691:
	.string	"s_mv_x"
.LASF548:
	.string	"colocated_params"
.LASF543:
	.string	"frame_cropping_rect_left_offset"
.LASF350:
	.string	"rgb_input_flag"
.LASF195:
	.string	"bitstream"
.LASF235:
	.string	"P_List0_refs"
.LASF320:
	.string	"RestrictRef"
.LASF514:
	.string	"top_ref_pic_num"
.LASF80:
	.string	"ElowS"
.LASF572:
	.string	"orig_blocks"
.LASF679:
	.string	"pic4_pix_x"
.LASF680:
	.string	"pic4_pix_y"
.LASF743:
	.string	"tempmv_x"
.LASF744:
	.string	"tempmv_y"
.LASF29:
	.string	"slice_group_map_type"
.LASF800:
	.string	"PelYline_11"
.LASF19:
	.string	"Boolean"
.LASF668:
	.string	"block_size"
.LASF560:
	.string	"time"
.LASF283:
	.string	"of_mode"
.LASF494:
	.string	"bitdepth_lambda_scale"
.LASF845:
	.string	"Clear_Motion_Search_Module"
.LASF308:
	.string	"disthres"
.LASF432:
	.string	"old_layer"
.LASF358:
	.string	"number"
.LASF619:
	.string	"Init_Motion_Search_Module"
.LASF540:
	.string	"chroma_format_idc"
.LASF306:
	.string	"qpBRS2Offset"
.LASF496:
	.string	"max_imgpel_value"
.LASF801:
	.string	"search_setup_done"
.LASF450:
	.string	"PicWidthInMbs"
.LASF22:
	.string	"seq_parameter_set_id"
.LASF720:
	.string	"mvd_bits"
.LASF771:
	.string	"opic_block_x"
.LASF316:
	.string	"LossRateA"
.LASF317:
	.string	"LossRateB"
.LASF318:
	.string	"LossRateC"
.LASF742:
	.string	"bimv_y"
.LASF597:
	.string	"tmp_mv"
.LASF489:
	.string	"pic_unit_size_on_disk"
.LASF495:
	.string	"dc_pred_value"
.LASF499:
	.string	"num_cdc_coeff"
.LASF840:
	.string	"byte_abs"
.LASF697:
	.string	"ref1_pic"
.LASF349:
	.string	"img_width_cr"
.LASF623:
	.string	"byte_abs_range"
.LASF181:
	.string	"Macroblock"
.LASF95:
	.string	"ref_no_contexts"
.LASF841:
	.string	"Co_located"
.LASF245:
	.string	"blc_size"
.LASF788:
	.string	"pmvfw"
.LASF64:
	.string	"FRAME"
.LASF457:
	.string	"adaptive_ref_pic_buffering_flag"
.LASF61:
	.string	"BITS_COEFF_UV_MB"
.LASF16:
	.string	"byte"
.LASF120:
	.string	"Next"
.LASF277:
	.string	"BRefPictures"
.LASF119:
	.string	"Data"
.LASF475:
	.string	"TopFieldFlag"
.LASF5:
	.string	"short int"
.LASF511:
	.string	"order_num"
.LASF728:
	.string	"orig_val"
.LASF536:
	.string	"moving_block"
.LASF78:
	.string	"Ecodestrm"
.LASF391:
	.string	"opix_y"
.LASF243:
	.string	"yuv_format"
.LASF345:
	.string	"FMEnable"
.LASF434:
	.string	"redundant_pic_cnt"
.LASF631:
	.string	"pic_pix_x"
.LASF745:
	.string	"iterlist"
.LASF419:
	.string	"bw_mb_mode"
.LASF330:
	.string	"redundant_slice_flag"
.LASF587:
	.string	"LineSadBlk3"
.LASF738:
	.string	"v4x4blkno"
.LASF794:
	.string	"refList"
.LASF346:
	.string	"BitDepthLuma"
.LASF18:
	.string	"TRUE"
.LASF805:
	.string	"BlockSAD"
.LASF777:
	.string	"co_located_ref_id"
.LASF606:
	.string	"mvPredType"
.LASF782:
	.string	"bw_rFrameL"
.LASF307:
	.string	"rdopt"
.LASF82:
	.string	"EbufferS"
.LASF698:
	.string	"ref2_pic"
.LASF677:
	.string	"mv_shift"
.LASF448:
	.string	"ThisPOC"
.LASF716:
	.string	"block8x8"
.LASF465:
	.string	"TotalMADBasicUnit"
.LASF172:
	.string	"prev_qp"
.LASF582:
	.string	"bindex"
.LASF633:
	.string	"blocktype"
.LASF292:
	.string	"IntraDisableInterOnly"
.LASF94:
	.string	"mv_res_contexts"
.LASF806:
	.string	"max_search_range"
.LASF287:
	.string	"InterSearch8x16"
.LASF630:
	.string	"orig_pic"
.LASF171:
	.string	"actj"
.LASF796:
	.string	"iref"
.LASF28:
	.string	"num_slice_groups_minus1"
.LASF442:
	.string	"delta_pic_order_cnt_bottom"
.LASF627:
	.string	"max_ref"
.LASF429:
	.string	"buf_cycle"
.LASF60:
	.string	"BITS_COEFF_Y_MB"
.LASF380:
	.string	"cod_counter"
.LASF813:
	.string	"luma_log_weight_denom"
.LASF669:
	.string	"SubPelBlockMotionSearch"
.LASF204:
	.string	"partArr"
.LASF182:
	.string	"byte_pos"
.LASF252:
	.string	"outfile"
.LASF100:
	.string	"ipr_contexts"
.LASF159:
	.string	"mbAddrA"
.LASF160:
	.string	"mbAddrB"
.LASF161:
	.string	"mbAddrC"
.LASF162:
	.string	"mbAddrD"
.LASF335:
	.string	"LowPassForIntra8x8"
.LASF381:
	.string	"nz_coeff"
.LASF642:
	.string	"mcost"
.LASF643:
	.string	"orig_line"
.LASF96:
	.string	"delta_qp_contexts"
.LASF295:
	.string	"Intra4x4DirDisable"
.LASF552:
	.string	"top_mv"
.LASF463:
	.string	"NumberofBasicUnitHeaderBits"
.LASF751:
	.string	"FindSkipModeMotionVector"
.LASF583:
	.string	"blky"
.LASF137:
	.string	"SyntaxElement"
.LASF303:
	.string	"qpB2"
.LASF774:
	.string	"mv_scale"
.LASF775:
	.string	"co_located_mv"
.LASF347:
	.string	"BitDepthChroma"
.LASF479:
	.string	"IFLAG"
.LASF724:
	.string	"step_h"
.LASF488:
	.string	"pre_frame_num"
.LASF767:
	.string	"pic_block_y"
.LASF27:
	.string	"pic_order_present_flag"
.LASF798:
	.string	"PelY_14"
.LASF153:
	.string	"lf_disable"
.LASF725:
	.string	"step_v"
.LASF786:
	.string	"fw_rFrame"
.LASF670:
	.string	"search_pos2"
.LASF65:
	.string	"TOP_FIELD"
.LASF707:
	.string	"weightRpic"
.LASF521:
	.string	"size_x"
.LASF824:
	.string	"QP2QUANT"
.LASF522:
	.string	"size_y"
.LASF661:
	.string	"use_hadamard"
.LASF220:
	.string	"idr_flag"
.LASF718:
	.string	"bw_ref"
.LASF594:
	.string	"apply_weights"
.LASF837:
	.string	"spiral_search_x"
.LASF570:
	.string	"SetupLargerBlocks"
.LASF2:
	.string	"short unsigned int"
.LASF477:
	.string	"FieldFrame"
.LASF301:
	.string	"last_frame"
.LASF544:
	.string	"frame_cropping_rect_right_offset"
.LASF176:
	.string	"predict_error"
.LASF362:
	.string	"current_slice_nr"
.LASF261:
	.string	"direct_spatial_mv_pred_flag"
.LASF230:
	.string	"jumpd"
.LASF556:
	.string	"bottom_mv"
.LASF491:
	.string	"bitdepth_chroma"
.LASF135:
	.string	"mapping"
.LASF533:
	.string	"ref_idx"
.LASF348:
	.string	"img_height_cr"
.LASF599:
	.string	"blockshape_x"
.LASF600:
	.string	"blockshape_y"
.LASF542:
	.string	"frame_cropping_flag"
.LASF532:
	.string	"imgUV"
.LASF34:
	.string	"slice_group_change_rate_minus1"
.LASF558:
	.string	"ColocatedParams"
.LASF534:
	.string	"ref_pic_id"
.LASF12:
	.string	"int64_t"
.LASF593:
	.string	"list_offset"
.LASF136:
	.string	"writing"
.LASF36:
	.string	"slice_group_id"
.LASF108:
	.string	"fld_map_contexts"
.LASF188:
	.string	"byte_buf_skip"
.LASF33:
	.string	"slice_group_change_direction_flag"
.LASF25:
	.string	"pic_scaling_matrix_present_flag"
.LASF299:
	.string	"FrameRate"
.LASF274:
	.string	"RDPSliceWeightOnly"
.LASF102:
	.string	"cbp_contexts"
.LASF44:
	.string	"cb_qp_index_offset"
.LASF205:
	.string	"mot_ctx"
.LASF672:
	.string	"abort_search"
.LASF35:
	.string	"pic_size_in_map_units_minus1"
.LASF683:
	.string	"halfpelhadamard"
.LASF169:
	.string	"NoMbPartLessThan8x8Flag"
.LASF371:
	.string	"subblock_x"
.LASF372:
	.string	"subblock_y"
.LASF752:
	.string	"zeroMotionAbove"
.LASF578:
	.string	"ref_x"
.LASF579:
	.string	"ref_y"
.LASF517:
	.string	"is_long_term"
.LASF819:
	.string	"refbits"
.LASF24:
	.string	"transform_8x8_mode_flag"
.LASF353:
	.string	"UseExplicitLambdaParams"
.LASF139:
	.string	"currSEnr"
.LASF733:
	.string	"me_tmp_time"
.LASF67:
	.string	"PictureStructure"
.LASF452:
	.string	"FrameHeightInMbs"
.LASF401:
	.string	"currentSlice"
.LASF143:
	.string	"bitcounter"
.LASF81:
	.string	"ErangeS"
.LASF163:
	.string	"mbAvailA"
.LASF164:
	.string	"mbAvailB"
.LASF165:
	.string	"mbAvailC"
.LASF166:
	.string	"mbAvailD"
.LASF149:
	.string	"cbp_blk"
.LASF596:
	.string	"refPic"
	.ident	"GCC: (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1"
	.section	.note.GNU-stack,"",@progbits
