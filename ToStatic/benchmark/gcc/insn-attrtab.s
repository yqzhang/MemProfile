	.file	"insn-attrtab.c"
# GNU C (Ubuntu/Linaro 4.8.1-10ubuntu9) version 4.8.1 (x86_64-linux-gnu)
#	compiled by GNU C version 4.8.1, GMP version 5.1.2, MPFR version 3.1.1-p2, MPC version 1.0.1
# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
# options passed:  -I . -imultiarch x86_64-linux-gnu -D SPEC_CPU -D NDEBUG
# -D SPEC_CPU_LP64 insn-attrtab.c -mtune=generic -march=x86-64 -g
# -fverbose-asm -fno-strict-aliasing -fstack-protector -Wformat
# -Wformat-security
# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg -fcommon
# -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
# -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
# -fident -finline-atomics -fira-hoist-pressure -fira-share-save-slots
# -fira-share-spill-slots -fivopts -fkeep-static-consts
# -fleading-underscore -fmath-errno -fmerge-debug-strings
# -fmove-loop-invariants -fpeephole -fprefetch-loop-arrays
# -freg-struct-return -fsched-critical-path-heuristic
# -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
# -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
# -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fshow-column
# -fsigned-zeros -fsplit-ivs-in-unroller -fstack-protector
# -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
# -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
# -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
# -ftree-parallelize-loops= -ftree-phiprop -ftree-pta -ftree-reassoc
# -ftree-scev-cprop -ftree-slp-vectorize -ftree-vect-loop-version
# -funit-at-a-time -funwind-tables -fverbose-asm -fzero-initialized-in-bss
# -m128bit-long-double -m64 -m80387 -maccumulate-outgoing-args
# -malign-stringops -mfancy-math-387 -mfp-ret-in-387 -mfxsr -mglibc
# -mieee-fp -mlong-double-80 -mmmx -mno-sse4 -mpush-args -mred-zone -msse
# -msse2 -mtls-direct-seg-refs

	.text
.Ltext0:
	.section	.rodata
.LC0:
	.string	"insn-attrtab.c"
	.text
	.globl	insn_current_length
	.type	insn_current_length, @function
insn_current_length:
.LFB2:
	.file 1 "insn-attrtab.c"
	.loc 1 23 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 24 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57098
	testl	%eax, %eax	# D.57098
	js	.L2	#,
	.loc 1 24 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.0
	jmp	.L3	#
.L2:
	.loc 1 24 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L3:
	.loc 1 24 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.0
	jne	.L4	#,
	.loc 1 27 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57099
	movzwl	(%rax), %eax	# _6->code, D.57100
	cmpw	$40, %ax	#, D.57100
	je	.L4	#,
	.loc 1 28 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57099
	movq	%rax, %rdi	# D.57099,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57098
	jns	.L4	#,
	.loc 1 29 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.10001, %ecx	#,
	movl	$29, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L4:
	.loc 1 31 0
	movl	$0, %eax	#, D.57098
	.loc 1 34 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	insn_current_length, .-insn_current_length
	.globl	insn_variable_length_p
	.type	insn_variable_length_p, @function
insn_variable_length_p:
.LFB3:
	.loc 1 40 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 41 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57102
	testl	%eax, %eax	# D.57102
	js	.L8	#,
	.loc 1 41 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1
	jmp	.L9	#
.L8:
	.loc 1 41 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L9:
	.loc 1 41 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1
	jne	.L10	#,
	.loc 1 44 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57103
	movzwl	(%rax), %eax	# _6->code, D.57104
	cmpw	$40, %ax	#, D.57104
	je	.L10	#,
	.loc 1 45 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57103
	movq	%rax, %rdi	# D.57103,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57102
	jns	.L10	#,
	.loc 1 46 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.10009, %ecx	#,
	movl	$46, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L10:
	.loc 1 48 0
	movl	$0, %eax	#, D.57102
	.loc 1 51 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	insn_variable_length_p, .-insn_variable_length_p
	.globl	insn_default_length
	.type	insn_default_length, @function
insn_default_length:
.LFB4:
	.loc 1 57 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# insn, insn
	.loc 1 58 0
	movq	-24(%rbp), %rax	# insn, tmp274
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57105
	testl	%eax, %eax	# D.57105
	js	.L14	#,
	.loc 1 58 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# insn, tmp275
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2
	jmp	.L15	#
.L14:
	.loc 1 58 0 discriminator 2
	movq	-24(%rbp), %rax	# insn, tmp276
	movq	%rax, %rdi	# tmp276,
	call	recog_memoized_1	#
.L15:
	.loc 1 58 0 discriminator 3
	addl	$1, %eax	#, tmp277
	cmpl	$806, %eax	#, tmp277
	ja	.L16	#,
	movl	%eax, %eax	# tmp277, tmp278
	movq	.L18(,%rax,8), %rax	#, tmp279
	jmp	*%rax	# tmp279
	.section	.rodata
	.align 8
	.align 4
.L18:
	.quad	.L17
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L20
	.quad	.L21
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L22
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L23
	.quad	.L24
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L25
	.quad	.L25
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L26
	.quad	.L26
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L27
	.quad	.L27
	.quad	.L27
	.quad	.L27
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L22
	.quad	.L28
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L22
	.quad	.L16
	.quad	.L22
	.quad	.L16
	.quad	.L22
	.quad	.L16
	.quad	.L22
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L20
	.quad	.L20
	.quad	.L22
	.quad	.L29
	.quad	.L16
	.quad	.L22
	.quad	.L29
	.quad	.L16
	.quad	.L22
	.quad	.L29
	.quad	.L16
	.quad	.L22
	.quad	.L29
	.quad	.L16
	.quad	.L22
	.quad	.L22
	.quad	.L22
	.quad	.L22
	.quad	.L22
	.quad	.L22
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L30
	.quad	.L16
	.quad	.L30
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L31
	.quad	.L20
	.quad	.L16
	.quad	.L16
	.quad	.L31
	.quad	.L20
	.quad	.L16
	.quad	.L16
	.quad	.L32
	.quad	.L16
	.quad	.L32
	.quad	.L16
	.quad	.L32
	.quad	.L16
	.quad	.L32
	.quad	.L16
	.quad	.L30
	.quad	.L16
	.quad	.L30
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L31
	.quad	.L20
	.quad	.L16
	.quad	.L16
	.quad	.L31
	.quad	.L20
	.quad	.L16
	.quad	.L16
	.quad	.L32
	.quad	.L16
	.quad	.L31
	.quad	.L16
	.quad	.L32
	.quad	.L16
	.quad	.L31
	.quad	.L16
	.quad	.L30
	.quad	.L16
	.quad	.L31
	.quad	.L20
	.quad	.L16
	.quad	.L16
	.quad	.L32
	.quad	.L16
	.quad	.L32
	.quad	.L16
	.quad	.L30
	.quad	.L16
	.quad	.L31
	.quad	.L31
	.quad	.L16
	.quad	.L16
	.quad	.L32
	.quad	.L16
	.quad	.L32
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L33
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L34
	.quad	.L21
	.quad	.L35
	.quad	.L16
	.quad	.L21
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L21
	.quad	.L21
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L36
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L19
	.quad	.L37
	.quad	.L37
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L19
	.quad	.L19
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L23
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L16
	.quad	.L38
	.text
.L36:
	.loc 1 61 0 is_stmt 1
	movq	-24(%rbp), %rax	# insn, tmp280
	movq	%rax, %rdi	# tmp280,
	call	extract_constrain_insn_cached	#
	.loc 1 62 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3
	cmpl	$2, %eax	#, which_alternative.3
	je	.L39	#,
	.loc 1 62 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4
	cmpl	$3, %eax	#, which_alternative.4
	jne	.L40	#,
.L39:
	.loc 1 64 0 is_stmt 1
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L40:
	.loc 1 68 0
	movq	-24(%rbp), %rax	# insn, tmp281
	movq	%rax, %rdi	# tmp281,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp282
	movq	%rax, %rdi	# tmp282,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp283
	movq	%rax, %rdi	# tmp283,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp284
	movq	%rax, %rdi	# tmp284,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp285
	movq	%rax, %rdi	# tmp285,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp286
	movq	%rax, %rdi	# tmp286,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp287
	movq	%rax, %rdi	# tmp287,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L33:
	.loc 1 72 0
	movq	-24(%rbp), %rax	# insn, tmp288
	movq	%rax, %rdi	# tmp288,
	call	get_attr_type	#
	cmpl	$1, %eax	#, D.57106
	jne	.L42	#,
	.loc 1 74 0
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L42:
	.loc 1 78 0
	movq	-24(%rbp), %rax	# insn, tmp289
	movq	%rax, %rdi	# tmp289,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp290
	movq	%rax, %rdi	# tmp290,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp291
	movq	%rax, %rdi	# tmp291,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp292
	movq	%rax, %rdi	# tmp292,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp293
	movq	%rax, %rdi	# tmp293,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp294
	movq	%rax, %rdi	# tmp294,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp295
	movq	%rax, %rdi	# tmp295,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L32:
	.loc 1 91 0
	movq	-24(%rbp), %rax	# insn, tmp296
	movq	%rax, %rdi	# tmp296,
	call	extract_insn_cached	#
	.loc 1 92 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57107
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57107,
	call	register_operand	#
	testl	%eax, %eax	# D.57105
	je	.L43	#,
	.loc 1 94 0
	movl	$2, %eax	#, D.57105
	jmp	.L41	#
.L43:
	.loc 1 98 0
	movq	-24(%rbp), %rax	# insn, tmp297
	movq	%rax, %rdi	# tmp297,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp298
	movq	%rax, %rdi	# tmp298,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp299
	movq	%rax, %rdi	# tmp299,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp300
	movq	%rax, %rdi	# tmp300,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp301
	movq	%rax, %rdi	# tmp301,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp302
	movq	%rax, %rdi	# tmp302,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp303
	movq	%rax, %rdi	# tmp303,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L31:
	.loc 1 110 0
	movq	-24(%rbp), %rax	# insn, tmp304
	movq	%rax, %rdi	# tmp304,
	call	extract_insn_cached	#
	.loc 1 111 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57107
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57107,
	call	register_operand	#
	testl	%eax, %eax	# D.57105
	je	.L44	#,
	.loc 1 113 0
	movl	$2, %eax	#, D.57105
	jmp	.L41	#
.L44:
	.loc 1 117 0
	movq	-24(%rbp), %rax	# insn, tmp305
	movq	%rax, %rdi	# tmp305,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp306
	movq	%rax, %rdi	# tmp306,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp307
	movq	%rax, %rdi	# tmp307,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp308
	movq	%rax, %rdi	# tmp308,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp309
	movq	%rax, %rdi	# tmp309,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp310
	movq	%rax, %rdi	# tmp310,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp311
	movq	%rax, %rdi	# tmp311,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L30:
	.loc 1 126 0
	movq	-24(%rbp), %rax	# insn, tmp312
	movq	%rax, %rdi	# tmp312,
	call	extract_insn_cached	#
	.loc 1 127 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57107
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57107,
	call	register_operand	#
	testl	%eax, %eax	# D.57105
	je	.L45	#,
	.loc 1 129 0
	movl	$2, %eax	#, D.57105
	jmp	.L41	#
.L45:
	.loc 1 133 0
	movq	-24(%rbp), %rax	# insn, tmp313
	movq	%rax, %rdi	# tmp313,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp314
	movq	%rax, %rdi	# tmp314,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp315
	movq	%rax, %rdi	# tmp315,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp316
	movq	%rax, %rdi	# tmp316,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp317
	movq	%rax, %rdi	# tmp317,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp318
	movq	%rax, %rdi	# tmp318,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp319
	movq	%rax, %rdi	# tmp319,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L29:
	.loc 1 140 0
	movq	-24(%rbp), %rax	# insn, tmp320
	movq	%rax, %rdi	# tmp320,
	call	extract_constrain_insn_cached	#
	.loc 1 141 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5
	cmpl	$1, %eax	#, which_alternative.5
	jne	.L46	#,
	.loc 1 143 0
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L46:
	.loc 1 147 0
	movq	-24(%rbp), %rax	# insn, tmp321
	movq	%rax, %rdi	# tmp321,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp322
	movq	%rax, %rdi	# tmp322,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp323
	movq	%rax, %rdi	# tmp323,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp324
	movq	%rax, %rdi	# tmp324,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp325
	movq	%rax, %rdi	# tmp325,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp326
	movq	%rax, %rdi	# tmp326,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp327
	movq	%rax, %rdi	# tmp327,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L28:
	.loc 1 151 0
	movq	-24(%rbp), %rax	# insn, tmp328
	movq	%rax, %rdi	# tmp328,
	call	extract_constrain_insn_cached	#
	.loc 1 152 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6
	cmpl	$1, %eax	#, which_alternative.6
	je	.L47	#,
	.loc 1 152 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.7
	cmpl	$2, %eax	#, which_alternative.7
	je	.L47	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.8
	cmpl	$3, %eax	#, which_alternative.8
	jne	.L48	#,
.L47:
	.loc 1 154 0 is_stmt 1
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L48:
	.loc 1 158 0
	movq	-24(%rbp), %rax	# insn, tmp329
	movq	%rax, %rdi	# tmp329,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp330
	movq	%rax, %rdi	# tmp330,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp331
	movq	%rax, %rdi	# tmp331,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp332
	movq	%rax, %rdi	# tmp332,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp333
	movq	%rax, %rdi	# tmp333,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp334
	movq	%rax, %rdi	# tmp334,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp335
	movq	%rax, %rdi	# tmp335,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L27:
	.loc 1 165 0
	movq	-24(%rbp), %rax	# insn, tmp336
	movq	%rax, %rdi	# tmp336,
	call	extract_constrain_insn_cached	#
	.loc 1 166 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.9
	cmpl	$3, %eax	#, which_alternative.9
	je	.L49	#,
	.loc 1 166 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.10
	cmpl	$4, %eax	#, which_alternative.10
	jne	.L50	#,
.L49:
	.loc 1 168 0 is_stmt 1
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L50:
	.loc 1 172 0
	movq	-24(%rbp), %rax	# insn, tmp337
	movq	%rax, %rdi	# tmp337,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp338
	movq	%rax, %rdi	# tmp338,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp339
	movq	%rax, %rdi	# tmp339,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp340
	movq	%rax, %rdi	# tmp340,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp341
	movq	%rax, %rdi	# tmp341,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp342
	movq	%rax, %rdi	# tmp342,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp343
	movq	%rax, %rdi	# tmp343,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L26:
	.loc 1 177 0
	movq	-24(%rbp), %rax	# insn, tmp344
	movq	%rax, %rdi	# tmp344,
	call	extract_constrain_insn_cached	#
	.loc 1 178 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.11
	testl	%eax, %eax	# which_alternative.11
	je	.L51	#,
	.loc 1 178 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.12
	cmpl	$1, %eax	#, which_alternative.12
	je	.L51	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.13
	cmpl	$2, %eax	#, which_alternative.13
	je	.L51	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.14
	cmpl	$3, %eax	#, which_alternative.14
	je	.L52	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.15
	cmpl	$4, %eax	#, which_alternative.15
	jne	.L51	#,
.L52:
	.loc 1 180 0 is_stmt 1
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L51:
	.loc 1 184 0
	movq	-24(%rbp), %rax	# insn, tmp345
	movq	%rax, %rdi	# tmp345,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp346
	movq	%rax, %rdi	# tmp346,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp347
	movq	%rax, %rdi	# tmp347,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp348
	movq	%rax, %rdi	# tmp348,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp349
	movq	%rax, %rdi	# tmp349,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp350
	movq	%rax, %rdi	# tmp350,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp351
	movq	%rax, %rdi	# tmp351,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L25:
	.loc 1 189 0
	movq	-24(%rbp), %rax	# insn, tmp352
	movq	%rax, %rdi	# tmp352,
	call	extract_constrain_insn_cached	#
	.loc 1 190 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.16
	cmpl	$1, %eax	#, which_alternative.16
	je	.L53	#,
	.loc 1 192 0
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L53:
	.loc 1 196 0
	movq	-24(%rbp), %rax	# insn, tmp353
	movq	%rax, %rdi	# tmp353,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp354
	movq	%rax, %rdi	# tmp354,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp355
	movq	%rax, %rdi	# tmp355,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp356
	movq	%rax, %rdi	# tmp356,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp357
	movq	%rax, %rdi	# tmp357,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp358
	movq	%rax, %rdi	# tmp358,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp359
	movq	%rax, %rdi	# tmp359,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L24:
	.loc 1 200 0
	movq	-24(%rbp), %rax	# insn, tmp360
	movq	%rax, %rdi	# tmp360,
	call	extract_constrain_insn_cached	#
	.loc 1 201 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.17
	cmpl	$4, %eax	#, which_alternative.17
	jne	.L54	#,
	.loc 1 203 0
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L54:
	.loc 1 207 0
	movq	-24(%rbp), %rax	# insn, tmp361
	movq	%rax, %rdi	# tmp361,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp362
	movq	%rax, %rdi	# tmp362,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp363
	movq	%rax, %rdi	# tmp363,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp364
	movq	%rax, %rdi	# tmp364,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp365
	movq	%rax, %rdi	# tmp365,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp366
	movq	%rax, %rdi	# tmp366,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp367
	movq	%rax, %rdi	# tmp367,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L23:
	.loc 1 212 0
	movq	-24(%rbp), %rax	# insn, tmp368
	movq	%rax, %rdi	# tmp368,
	call	extract_constrain_insn_cached	#
	.loc 1 213 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.18
	testl	%eax, %eax	# which_alternative.18
	je	.L55	#,
	.loc 1 213 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.19
	cmpl	$1, %eax	#, which_alternative.19
	jne	.L56	#,
.L55:
	.loc 1 215 0 is_stmt 1
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L56:
	.loc 1 219 0
	movq	-24(%rbp), %rax	# insn, tmp369
	movq	%rax, %rdi	# tmp369,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp370
	movq	%rax, %rdi	# tmp370,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp371
	movq	%rax, %rdi	# tmp371,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp372
	movq	%rax, %rdi	# tmp372,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp373
	movq	%rax, %rdi	# tmp373,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp374
	movq	%rax, %rdi	# tmp374,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp375
	movq	%rax, %rdi	# tmp375,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L22:
	.loc 1 238 0
	movq	-24(%rbp), %rax	# insn, tmp376
	movq	%rax, %rdi	# tmp376,
	call	extract_constrain_insn_cached	#
	.loc 1 239 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.20
	testl	%eax, %eax	# which_alternative.20
	je	.L57	#,
	.loc 1 241 0
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L57:
	.loc 1 245 0
	movq	-24(%rbp), %rax	# insn, tmp377
	movq	%rax, %rdi	# tmp377,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp378
	movq	%rax, %rdi	# tmp378,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp379
	movq	%rax, %rdi	# tmp379,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp380
	movq	%rax, %rdi	# tmp380,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp381
	movq	%rax, %rdi	# tmp381,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp382
	movq	%rax, %rdi	# tmp382,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp383
	movq	%rax, %rdi	# tmp383,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
	jmp	.L41	#
.L19:
	.loc 1 351 0
	movl	$16, %eax	#, D.57105
	jmp	.L41	#
.L17:
	.loc 1 354 0
	movq	-24(%rbp), %rax	# insn, tmp384
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57107
	movzwl	(%rax), %eax	# _228->code, D.57108
	cmpw	$40, %ax	#, D.57108
	je	.L58	#,
	.loc 1 355 0
	movq	-24(%rbp), %rax	# insn, tmp385
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57107
	movq	%rax, %rdi	# D.57107,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57105
	jns	.L58	#,
	.loc 1 356 0
	movq	-24(%rbp), %rax	# insn, tmp386
	movl	$__FUNCTION__.10179, %ecx	#,
	movl	$356, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp386,
	call	_fatal_insn_not_found	#
.L58:
	.loc 1 357 0
	movl	$128, %eax	#, D.57105
	jmp	.L41	#
.L38:
	.loc 1 360 0
	movl	$135, %eax	#, D.57105
	jmp	.L41	#
.L37:
	.loc 1 364 0
	movl	$5, %eax	#, D.57105
	jmp	.L41	#
.L21:
	.loc 1 371 0
	movl	$1, %eax	#, D.57105
	jmp	.L41	#
.L35:
	.loc 1 374 0
	movl	$3, %eax	#, D.57105
	jmp	.L41	#
.L34:
	.loc 1 377 0
	movl	$0, %eax	#, D.57105
	jmp	.L41	#
.L20:
	.loc 1 387 0
	movl	$2, %eax	#, D.57105
	jmp	.L41	#
.L16:
	.loc 1 390 0
	movq	-24(%rbp), %rax	# insn, tmp387
	movq	%rax, %rdi	# tmp387,
	call	get_attr_modrm	#
	movl	%eax, %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp388
	movq	%rax, %rdi	# tmp388,
	call	get_attr_prefix_0f	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp389
	movq	%rax, %rdi	# tmp389,
	call	get_attr_i387	#
	addl	%ebx, %eax	# D.57105, D.57105
	leal	1(%rax), %ebx	#, D.57105
	movq	-24(%rbp), %rax	# insn, tmp390
	movq	%rax, %rdi	# tmp390,
	call	get_attr_prefix_rep	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp391
	movq	%rax, %rdi	# tmp391,
	call	get_attr_prefix_data16	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp392
	movq	%rax, %rdi	# tmp392,
	call	get_attr_length_immediate	#
	addl	%eax, %ebx	# D.57105, D.57105
	movq	-24(%rbp), %rax	# insn, tmp393
	movq	%rax, %rdi	# tmp393,
	call	get_attr_length_address	#
	addl	%ebx, %eax	# D.57105, D.57105
.L41:
	.loc 1 393 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	insn_default_length, .-insn_default_length
	.globl	result_ready_cost
	.type	result_ready_cost, @function
result_ready_cost:
.LFB5:
	.loc 1 399 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 400 0
	movq	-8(%rbp), %rax	# insn, tmp1114
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57109
	testl	%eax, %eax	# D.57109
	js	.L60	#,
	.loc 1 400 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1115
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.21
	jmp	.L61	#
.L60:
	.loc 1 400 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1116
	movq	%rax, %rdi	# tmp1116,
	call	recog_memoized_1	#
.L61:
	.loc 1 400 0 discriminator 3
	addl	$1, %eax	#, tmp1117
	cmpl	$806, %eax	#, tmp1117
	ja	.L62	#,
	movl	%eax, %eax	# tmp1117, tmp1118
	movq	.L64(,%rax,8), %rax	#, tmp1119
	jmp	*%rax	# tmp1119
	.section	.rodata
	.align 8
	.align 4
.L64:
	.quad	.L63
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L66
	.quad	.L67
	.quad	.L67
	.quad	.L67
	.quad	.L66
	.quad	.L67
	.quad	.L67
	.quad	.L66
	.quad	.L66
	.quad	.L67
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L67
	.quad	.L68
	.quad	.L62
	.quad	.L67
	.quad	.L68
	.quad	.L62
	.quad	.L69
	.quad	.L69
	.quad	.L69
	.quad	.L70
	.quad	.L70
	.quad	.L71
	.quad	.L71
	.quad	.L72
	.quad	.L66
	.quad	.L70
	.quad	.L62
	.quad	.L69
	.quad	.L69
	.quad	.L62
	.quad	.L66
	.quad	.L70
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L71
	.quad	.L69
	.quad	.L69
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L71
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L66
	.quad	.L70
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L66
	.quad	.L73
	.quad	.L69
	.quad	.L70
	.quad	.L70
	.quad	.L71
	.quad	.L71
	.quad	.L62
	.quad	.L74
	.quad	.L66
	.quad	.L70
	.quad	.L62
	.quad	.L75
	.quad	.L75
	.quad	.L76
	.quad	.L62
	.quad	.L66
	.quad	.L66
	.quad	.L76
	.quad	.L76
	.quad	.L62
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L77
	.quad	.L77
	.quad	.L77
	.quad	.L77
	.quad	.L62
	.quad	.L62
	.quad	.L71
	.quad	.L62
	.quad	.L71
	.quad	.L78
	.quad	.L62
	.quad	.L71
	.quad	.L78
	.quad	.L62
	.quad	.L66
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L66
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L79
	.quad	.L62
	.quad	.L80
	.quad	.L80
	.quad	.L80
	.quad	.L80
	.quad	.L81
	.quad	.L81
	.quad	.L82
	.quad	.L83
	.quad	.L62
	.quad	.L81
	.quad	.L83
	.quad	.L81
	.quad	.L83
	.quad	.L81
	.quad	.L83
	.quad	.L81
	.quad	.L83
	.quad	.L84
	.quad	.L84
	.quad	.L84
	.quad	.L62
	.quad	.L62
	.quad	.L84
	.quad	.L84
	.quad	.L84
	.quad	.L62
	.quad	.L62
	.quad	.L84
	.quad	.L84
	.quad	.L84
	.quad	.L66
	.quad	.L66
	.quad	.L81
	.quad	.L81
	.quad	.L62
	.quad	.L81
	.quad	.L81
	.quad	.L62
	.quad	.L81
	.quad	.L81
	.quad	.L62
	.quad	.L81
	.quad	.L81
	.quad	.L62
	.quad	.L85
	.quad	.L85
	.quad	.L85
	.quad	.L85
	.quad	.L85
	.quad	.L85
	.quad	.L66
	.quad	.L86
	.quad	.L87
	.quad	.L86
	.quad	.L86
	.quad	.L87
	.quad	.L87
	.quad	.L88
	.quad	.L88
	.quad	.L88
	.quad	.L88
	.quad	.L88
	.quad	.L88
	.quad	.L88
	.quad	.L88
	.quad	.L88
	.quad	.L88
	.quad	.L89
	.quad	.L90
	.quad	.L90
	.quad	.L90
	.quad	.L90
	.quad	.L91
	.quad	.L92
	.quad	.L93
	.quad	.L93
	.quad	.L93
	.quad	.L93
	.quad	.L93
	.quad	.L93
	.quad	.L94
	.quad	.L95
	.quad	.L95
	.quad	.L95
	.quad	.L95
	.quad	.L95
	.quad	.L96
	.quad	.L97
	.quad	.L97
	.quad	.L97
	.quad	.L95
	.quad	.L97
	.quad	.L97
	.quad	.L97
	.quad	.L87
	.quad	.L66
	.quad	.L86
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L86
	.quad	.L86
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L98
	.quad	.L99
	.quad	.L99
	.quad	.L66
	.quad	.L66
	.quad	.L99
	.quad	.L66
	.quad	.L66
	.quad	.L99
	.quad	.L66
	.quad	.L66
	.quad	.L99
	.quad	.L66
	.quad	.L99
	.quad	.L99
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L65
	.quad	.L66
	.quad	.L66
	.quad	.L100
	.quad	.L87
	.quad	.L101
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L101
	.quad	.L87
	.quad	.L87
	.quad	.L71
	.quad	.L87
	.quad	.L71
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L71
	.quad	.L87
	.quad	.L71
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L87
	.quad	.L66
	.quad	.L102
	.quad	.L102
	.quad	.L102
	.quad	.L102
	.quad	.L102
	.quad	.L102
	.quad	.L102
	.quad	.L102
	.quad	.L102
	.quad	.L102
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L103
	.quad	.L102
	.quad	.L71
	.quad	.L102
	.quad	.L102
	.quad	.L71
	.quad	.L71
	.quad	.L102
	.quad	.L71
	.quad	.L102
	.quad	.L71
	.quad	.L104
	.quad	.L105
	.quad	.L66
	.quad	.L66
	.quad	.L86
	.quad	.L104
	.quad	.L106
	.quad	.L105
	.quad	.L107
	.quad	.L104
	.quad	.L105
	.quad	.L105
	.quad	.L108
	.quad	.L105
	.quad	.L105
	.quad	.L109
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L66
	.quad	.L66
	.quad	.L86
	.quad	.L109
	.quad	.L109
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L66
	.quad	.L66
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L110
	.quad	.L70
	.quad	.L70
	.quad	.L62
	.quad	.L62
	.quad	.L111
	.quad	.L111
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L111
	.quad	.L111
	.quad	.L111
	.quad	.L111
	.quad	.L111
	.quad	.L62
	.quad	.L112
	.quad	.L112
	.quad	.L112
	.quad	.L112
	.quad	.L112
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L111
	.quad	.L66
	.quad	.L87
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L113
	.quad	.L114
	.quad	.L62
	.quad	.L113
	.quad	.L114
	.quad	.L62
	.quad	.L115
	.quad	.L116
	.quad	.L117
	.quad	.L118
	.quad	.L62
	.quad	.L117
	.quad	.L117
	.quad	.L119
	.quad	.L120
	.quad	.L62
	.quad	.L119
	.quad	.L119
	.quad	.L119
	.quad	.L119
	.quad	.L121
	.quad	.L122
	.quad	.L121
	.quad	.L122
	.quad	.L121
	.quad	.L122
	.quad	.L121
	.quad	.L122
	.quad	.L121
	.quad	.L122
	.quad	.L121
	.quad	.L122
	.quad	.L121
	.quad	.L122
	.quad	.L123
	.quad	.L62
	.quad	.L124
	.quad	.L123
	.quad	.L62
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L124
	.quad	.L125
	.quad	.L126
	.quad	.L126
	.quad	.L126
	.quad	.L126
	.quad	.L126
	.quad	.L126
	.quad	.L126
	.quad	.L126
	.quad	.L126
	.quad	.L126
	.quad	.L126
	.quad	.L126
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L127
	.quad	.L66
	.quad	.L62
	.quad	.L66
	.quad	.L62
	.quad	.L62
	.quad	.L128
	.quad	.L129
	.quad	.L128
	.quad	.L130
	.quad	.L130
	.quad	.L66
	.quad	.L66
	.quad	.L62
	.quad	.L66
	.quad	.L66
	.quad	.L62
	.quad	.L66
	.quad	.L66
	.quad	.L62
	.quad	.L66
	.quad	.L66
	.quad	.L62
	.quad	.L131
	.quad	.L132
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.quad	.L133
	.quad	.L133
	.quad	.L133
	.quad	.L133
	.quad	.L133
	.quad	.L133
	.quad	.L66
	.quad	.L66
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L66
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L66
	.quad	.L66
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L62
	.quad	.L66
	.quad	.L70
	.quad	.L66
	.quad	.L66
	.quad	.L66
	.text
.L133:
	.loc 1 408 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1120
	movq	%rax, %rdi	# tmp1120,
	call	extract_insn_cached	#
	.loc 1 409 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.22
	cmpl	$3, %eax	#, ix86_cpu.22
	jne	.L134	#,
	.loc 1 409 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L134	#,
	.loc 1 411 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L134:
	.loc 1 415 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L132:
	.loc 1 419 0
	movq	-8(%rbp), %rax	# insn, tmp1121
	movq	%rax, %rdi	# tmp1121,
	call	extract_constrain_insn_cached	#
	.loc 1 420 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.23
	cmpl	$3, %eax	#, ix86_cpu.23
	jne	.L136	#,
	.loc 1 420 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1122
	movq	%rax, %rdi	# tmp1122,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L137	#,
	movq	-8(%rbp), %rax	# insn, tmp1123
	movq	%rax, %rdi	# tmp1123,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L137	#,
.L136:
	.loc 1 420 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.24
	cmpl	$2, %eax	#, ix86_cpu.24
	jne	.L138	#,
	.loc 1 420 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.25
	testl	%eax, %eax	# which_alternative.25
	jne	.L138	#,
	movq	-8(%rbp), %rax	# insn, tmp1124
	movq	%rax, %rdi	# tmp1124,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L139	#,
	movq	-8(%rbp), %rax	# insn, tmp1125
	movq	%rax, %rdi	# tmp1125,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L137	#,
.L139:
	.loc 1 420 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1126
	movq	%rax, %rdi	# tmp1126,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L138	#,
	.loc 1 420 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1127
	movq	%rax, %rdi	# tmp1127,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L138	#,
.L137:
	.loc 1 422 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L138:
	.loc 1 424 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.26
	cmpl	$4, %eax	#, ix86_cpu.26
	jne	.L140	#,
	.loc 1 424 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.27
	cmpl	$1, %eax	#, which_alternative.27
	jne	.L140	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const0_operand	#
	testl	%eax, %eax	# D.57109
	je	.L141	#,
.L140:
	.loc 1 424 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.28
	cmpl	$2, %eax	#, ix86_cpu.28
	jne	.L142	#,
	.loc 1 424 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.29
	testl	%eax, %eax	# which_alternative.29
	jne	.L142	#,
	movq	-8(%rbp), %rax	# insn, tmp1128
	movq	%rax, %rdi	# tmp1128,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L143	#,
	movq	-8(%rbp), %rax	# insn, tmp1129
	movq	%rax, %rdi	# tmp1129,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L141	#,
	movq	-8(%rbp), %rax	# insn, tmp1130
	movq	%rax, %rdi	# tmp1130,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L141	#,
.L143:
	.loc 1 424 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1131
	movq	%rax, %rdi	# tmp1131,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L142	#,
	.loc 1 424 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1132
	movq	%rax, %rdi	# tmp1132,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L141	#,
	movq	-8(%rbp), %rax	# insn, tmp1133
	movq	%rax, %rdi	# tmp1133,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L142	#,
.L141:
	.loc 1 426 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L142:
	.loc 1 430 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L131:
	.loc 1 434 0
	movq	-8(%rbp), %rax	# insn, tmp1134
	movq	%rax, %rdi	# tmp1134,
	call	extract_constrain_insn_cached	#
	.loc 1 435 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.30
	cmpl	$3, %eax	#, ix86_cpu.30
	jne	.L144	#,
	.loc 1 435 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1135
	movq	%rax, %rdi	# tmp1135,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L145	#,
	movq	-8(%rbp), %rax	# insn, tmp1136
	movq	%rax, %rdi	# tmp1136,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L145	#,
.L144:
	.loc 1 435 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.31
	cmpl	$2, %eax	#, ix86_cpu.31
	jne	.L146	#,
	.loc 1 435 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.32
	testl	%eax, %eax	# which_alternative.32
	jne	.L146	#,
	movq	-8(%rbp), %rax	# insn, tmp1137
	movq	%rax, %rdi	# tmp1137,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L147	#,
	movq	-8(%rbp), %rax	# insn, tmp1138
	movq	%rax, %rdi	# tmp1138,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L145	#,
.L147:
	.loc 1 435 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1139
	movq	%rax, %rdi	# tmp1139,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L146	#,
	.loc 1 435 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1140
	movq	%rax, %rdi	# tmp1140,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L146	#,
.L145:
	.loc 1 437 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L146:
	.loc 1 439 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.33
	cmpl	$4, %eax	#, ix86_cpu.33
	jne	.L148	#,
	.loc 1 439 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.34
	cmpl	$1, %eax	#, which_alternative.34
	jne	.L148	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const0_operand	#
	testl	%eax, %eax	# D.57109
	je	.L149	#,
.L148:
	.loc 1 439 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.35
	cmpl	$2, %eax	#, ix86_cpu.35
	jne	.L150	#,
	.loc 1 439 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.36
	testl	%eax, %eax	# which_alternative.36
	jne	.L150	#,
	movq	-8(%rbp), %rax	# insn, tmp1141
	movq	%rax, %rdi	# tmp1141,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L151	#,
	movq	-8(%rbp), %rax	# insn, tmp1142
	movq	%rax, %rdi	# tmp1142,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L149	#,
	movq	-8(%rbp), %rax	# insn, tmp1143
	movq	%rax, %rdi	# tmp1143,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L149	#,
.L151:
	.loc 1 439 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1144
	movq	%rax, %rdi	# tmp1144,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L150	#,
	.loc 1 439 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1145
	movq	%rax, %rdi	# tmp1145,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L149	#,
	movq	-8(%rbp), %rax	# insn, tmp1146
	movq	%rax, %rdi	# tmp1146,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L150	#,
.L149:
	.loc 1 441 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L150:
	.loc 1 445 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L130:
	.loc 1 450 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.37
	cmpl	$5, %eax	#, ix86_cpu.37
	jne	.L152	#,
	.loc 1 452 0
	movl	$7, %eax	#, D.57109
	jmp	.L135	#
.L152:
	.loc 1 454 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.38
	cmpl	$3, %eax	#, ix86_cpu.38
	je	.L153	#,
	.loc 1 454 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.39
	cmpl	$2, %eax	#, ix86_cpu.39
	jne	.L154	#,
.L153:
	.loc 1 456 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L154:
	.loc 1 460 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L129:
	.loc 1 464 0
	movq	-8(%rbp), %rax	# insn, tmp1147
	movq	%rax, %rdi	# tmp1147,
	call	extract_constrain_insn_cached	#
	.loc 1 465 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.40
	cmpl	$5, %eax	#, ix86_cpu.40
	jne	.L155	#,
	.loc 1 465 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.41
	testl	%eax, %eax	# which_alternative.41
	je	.L156	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.42
	cmpl	$1, %eax	#, which_alternative.42
	jne	.L155	#,
.L156:
	.loc 1 467 0 is_stmt 1
	movl	$7, %eax	#, D.57109
	jmp	.L135	#
.L155:
	.loc 1 469 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.43
	cmpl	$3, %eax	#, ix86_cpu.43
	jne	.L157	#,
	.loc 1 469 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.44
	testl	%eax, %eax	# which_alternative.44
	je	.L158	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.45
	cmpl	$1, %eax	#, which_alternative.45
	je	.L158	#,
.L157:
	.loc 1 469 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.46
	cmpl	$2, %eax	#, ix86_cpu.46
	jne	.L159	#,
	.loc 1 469 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.47
	testl	%eax, %eax	# which_alternative.47
	je	.L158	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.48
	cmpl	$1, %eax	#, which_alternative.48
	jne	.L159	#,
.L158:
	.loc 1 471 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L159:
	.loc 1 475 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L128:
	.loc 1 480 0
	movq	-8(%rbp), %rax	# insn, tmp1148
	movq	%rax, %rdi	# tmp1148,
	call	extract_constrain_insn_cached	#
	.loc 1 481 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.49
	cmpl	$5, %eax	#, ix86_cpu.49
	jne	.L160	#,
	.loc 1 481 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.50
	testl	%eax, %eax	# which_alternative.50
	je	.L161	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.51
	cmpl	$1, %eax	#, which_alternative.51
	jne	.L160	#,
.L161:
	.loc 1 483 0 is_stmt 1
	movl	$7, %eax	#, D.57109
	jmp	.L135	#
.L160:
	.loc 1 485 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.52
	cmpl	$3, %eax	#, ix86_cpu.52
	jne	.L162	#,
	.loc 1 485 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1149
	movq	%rax, %rdi	# tmp1149,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L163	#,
	movq	-8(%rbp), %rax	# insn, tmp1150
	movq	%rax, %rdi	# tmp1150,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L162	#,
.L163:
	.loc 1 487 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L162:
	.loc 1 489 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.53
	cmpl	$3, %eax	#, ix86_cpu.53
	jne	.L164	#,
	.loc 1 489 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.54
	testl	%eax, %eax	# which_alternative.54
	je	.L165	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.55
	cmpl	$1, %eax	#, which_alternative.55
	je	.L165	#,
.L164:
	.loc 1 489 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.56
	cmpl	$2, %eax	#, ix86_cpu.56
	jne	.L166	#,
	.loc 1 489 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.57
	testl	%eax, %eax	# which_alternative.57
	je	.L165	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.58
	cmpl	$1, %eax	#, which_alternative.58
	jne	.L166	#,
.L165:
	.loc 1 491 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L166:
	.loc 1 495 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L127:
	.loc 1 516 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.59
	cmpl	$5, %eax	#, ix86_cpu.59
	jne	.L167	#,
	.loc 1 518 0
	movl	$15, %eax	#, D.57109
	jmp	.L135	#
.L167:
	.loc 1 520 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.60
	cmpl	$2, %eax	#, ix86_cpu.60
	jne	.L168	#,
	.loc 1 522 0
	movl	$12, %eax	#, D.57109
	jmp	.L135	#
.L168:
	.loc 1 524 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.61
	cmpl	$4, %eax	#, ix86_cpu.61
	jne	.L169	#,
	.loc 1 526 0
	movl	$10, %eax	#, D.57109
	jmp	.L135	#
.L169:
	.loc 1 530 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L126:
	.loc 1 545 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.62
	cmpl	$5, %eax	#, ix86_cpu.62
	jne	.L170	#,
	.loc 1 547 0
	movl	$15, %eax	#, D.57109
	jmp	.L135	#
.L170:
	.loc 1 549 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.63
	cmpl	$2, %eax	#, ix86_cpu.63
	jne	.L171	#,
	.loc 1 551 0
	movl	$12, %eax	#, D.57109
	jmp	.L135	#
.L171:
	.loc 1 553 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.64
	cmpl	$4, %eax	#, ix86_cpu.64
	jne	.L172	#,
	.loc 1 555 0
	movl	$10, %eax	#, D.57109
	jmp	.L135	#
.L172:
	.loc 1 557 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.65
	cmpl	$3, %eax	#, ix86_cpu.65
	jne	.L173	#,
	.loc 1 559 0
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L173:
	.loc 1 563 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L125:
	.loc 1 567 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.66
	cmpl	$2, %eax	#, ix86_cpu.66
	jne	.L174	#,
	.loc 1 569 0
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L174:
	.loc 1 573 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L124:
	.loc 1 595 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.67
	cmpl	$5, %eax	#, ix86_cpu.67
	jne	.L175	#,
	.loc 1 597 0
	movl	$100, %eax	#, D.57109
	jmp	.L135	#
.L175:
	.loc 1 599 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.68
	cmpl	$2, %eax	#, ix86_cpu.68
	jne	.L176	#,
	.loc 1 601 0
	movl	$70, %eax	#, D.57109
	jmp	.L135	#
.L176:
	.loc 1 603 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.69
	cmpl	$4, %eax	#, ix86_cpu.69
	je	.L177	#,
	.loc 1 603 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.70
	cmpl	$3, %eax	#, ix86_cpu.70
	jne	.L178	#,
.L177:
	.loc 1 605 0 is_stmt 1
	movl	$56, %eax	#, D.57109
	jmp	.L135	#
.L178:
	.loc 1 609 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L123:
	.loc 1 614 0
	movq	-8(%rbp), %rax	# insn, tmp1151
	movq	%rax, %rdi	# tmp1151,
	call	extract_constrain_insn_cached	#
	.loc 1 615 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.71
	cmpl	$5, %eax	#, ix86_cpu.71
	jne	.L179	#,
	.loc 1 615 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.72
	testl	%eax, %eax	# which_alternative.72
	jne	.L179	#,
	.loc 1 617 0 is_stmt 1
	movl	$100, %eax	#, D.57109
	jmp	.L135	#
.L179:
	.loc 1 619 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.73
	cmpl	$2, %eax	#, ix86_cpu.73
	jne	.L180	#,
	.loc 1 619 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.74
	testl	%eax, %eax	# which_alternative.74
	jne	.L180	#,
	.loc 1 621 0 is_stmt 1
	movl	$70, %eax	#, D.57109
	jmp	.L135	#
.L180:
	.loc 1 623 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.75
	cmpl	$4, %eax	#, ix86_cpu.75
	jne	.L181	#,
	.loc 1 623 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.76
	testl	%eax, %eax	# which_alternative.76
	je	.L182	#,
.L181:
	.loc 1 623 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.77
	cmpl	$3, %eax	#, ix86_cpu.77
	jne	.L183	#,
	.loc 1 623 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.78
	testl	%eax, %eax	# which_alternative.78
	jne	.L183	#,
.L182:
	.loc 1 625 0 is_stmt 1
	movl	$56, %eax	#, D.57109
	jmp	.L135	#
.L183:
	.loc 1 627 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.79
	cmpl	$3, %eax	#, ix86_cpu.79
	jne	.L184	#,
	.loc 1 627 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1152
	movq	%rax, %rdi	# tmp1152,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L185	#,
	movq	-8(%rbp), %rax	# insn, tmp1153
	movq	%rax, %rdi	# tmp1153,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L184	#,
.L185:
	.loc 1 629 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L184:
	.loc 1 633 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L122:
	.loc 1 643 0
	movq	-8(%rbp), %rax	# insn, tmp1154
	movq	%rax, %rdi	# tmp1154,
	call	extract_insn_cached	#
	.loc 1 644 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.80
	cmpl	$4, %eax	#, ix86_cpu.80
	jne	.L186	#,
	.loc 1 644 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1155
	movq	%rax, %rdi	# tmp1155,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	je	.L187	#,
.L186:
	.loc 1 644 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.81
	cmpl	$3, %eax	#, ix86_cpu.81
	jne	.L188	#,
	.loc 1 644 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1156
	movq	%rax, %rdi	# tmp1156,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L188	#,
.L187:
	.loc 1 646 0 is_stmt 1
	movl	$56, %eax	#, D.57109
	jmp	.L135	#
.L188:
	.loc 1 648 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.82
	cmpl	$2, %eax	#, ix86_cpu.82
	jne	.L189	#,
	.loc 1 648 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1157
	movq	%rax, %rdi	# tmp1157,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L189	#,
	.loc 1 650 0 is_stmt 1
	movl	$39, %eax	#, D.57109
	jmp	.L135	#
.L189:
	.loc 1 652 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.83
	cmpl	$5, %eax	#, ix86_cpu.83
	jne	.L190	#,
	.loc 1 652 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1158
	movq	%rax, %rdi	# tmp1158,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L190	#,
	.loc 1 654 0 is_stmt 1
	movl	$24, %eax	#, D.57109
	jmp	.L135	#
.L190:
	.loc 1 656 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.84
	cmpl	$3, %eax	#, ix86_cpu.84
	jne	.L191	#,
	.loc 1 656 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L191	#,
	.loc 1 658 0 is_stmt 1
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L191:
	.loc 1 660 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.85
	cmpl	$5, %eax	#, ix86_cpu.85
	jne	.L192	#,
	.loc 1 660 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1159
	movq	%rax, %rdi	# tmp1159,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L193	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L192	#,
.L193:
	.loc 1 662 0 is_stmt 1
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L192:
	.loc 1 664 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.86
	cmpl	$3, %eax	#, ix86_cpu.86
	jne	.L194	#,
	.loc 1 664 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1160
	movq	%rax, %rdi	# tmp1160,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L195	#,
	movq	-8(%rbp), %rax	# insn, tmp1161
	movq	%rax, %rdi	# tmp1161,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L195	#,
	movq	-8(%rbp), %rax	# insn, tmp1162
	movq	%rax, %rdi	# tmp1162,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L195	#,
.L194:
	.loc 1 664 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.87
	cmpl	$2, %eax	#, ix86_cpu.87
	jne	.L196	#,
	.loc 1 664 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1163
	movq	%rax, %rdi	# tmp1163,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L195	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L196	#,
.L195:
	.loc 1 666 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L196:
	.loc 1 668 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.88
	cmpl	$4, %eax	#, ix86_cpu.88
	jne	.L197	#,
	.loc 1 668 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1164
	movq	%rax, %rdi	# tmp1164,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L198	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L198	#,
.L197:
	.loc 1 668 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.89
	cmpl	$2, %eax	#, ix86_cpu.89
	jne	.L199	#,
	.loc 1 668 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L198	#,
	movq	-8(%rbp), %rax	# insn, tmp1165
	movq	%rax, %rdi	# tmp1165,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	jne	.L199	#,
.L198:
	.loc 1 670 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L199:
	.loc 1 674 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L121:
	.loc 1 684 0
	movq	-8(%rbp), %rax	# insn, tmp1166
	movq	%rax, %rdi	# tmp1166,
	call	extract_insn_cached	#
	.loc 1 685 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.90
	cmpl	$4, %eax	#, ix86_cpu.90
	jne	.L200	#,
	.loc 1 685 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1167
	movq	%rax, %rdi	# tmp1167,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	je	.L201	#,
.L200:
	.loc 1 685 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.91
	cmpl	$3, %eax	#, ix86_cpu.91
	jne	.L202	#,
	.loc 1 685 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1168
	movq	%rax, %rdi	# tmp1168,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L202	#,
.L201:
	.loc 1 687 0 is_stmt 1
	movl	$56, %eax	#, D.57109
	jmp	.L135	#
.L202:
	.loc 1 689 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.92
	cmpl	$2, %eax	#, ix86_cpu.92
	jne	.L203	#,
	.loc 1 689 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1169
	movq	%rax, %rdi	# tmp1169,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L203	#,
	.loc 1 691 0 is_stmt 1
	movl	$39, %eax	#, D.57109
	jmp	.L135	#
.L203:
	.loc 1 693 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.93
	cmpl	$5, %eax	#, ix86_cpu.93
	jne	.L204	#,
	.loc 1 693 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1170
	movq	%rax, %rdi	# tmp1170,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L204	#,
	.loc 1 695 0 is_stmt 1
	movl	$24, %eax	#, D.57109
	jmp	.L135	#
.L204:
	.loc 1 697 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.94
	cmpl	$3, %eax	#, ix86_cpu.94
	jne	.L205	#,
	.loc 1 697 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L205	#,
	.loc 1 699 0 is_stmt 1
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L205:
	.loc 1 701 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.95
	cmpl	$5, %eax	#, ix86_cpu.95
	jne	.L206	#,
	.loc 1 701 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1171
	movq	%rax, %rdi	# tmp1171,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L207	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L206	#,
.L207:
	.loc 1 703 0 is_stmt 1
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L206:
	.loc 1 705 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.96
	cmpl	$3, %eax	#, ix86_cpu.96
	jne	.L208	#,
	.loc 1 705 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1172
	movq	%rax, %rdi	# tmp1172,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L209	#,
	movq	-8(%rbp), %rax	# insn, tmp1173
	movq	%rax, %rdi	# tmp1173,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L209	#,
	movq	-8(%rbp), %rax	# insn, tmp1174
	movq	%rax, %rdi	# tmp1174,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L209	#,
.L208:
	.loc 1 705 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.97
	cmpl	$2, %eax	#, ix86_cpu.97
	jne	.L210	#,
	.loc 1 705 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1175
	movq	%rax, %rdi	# tmp1175,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L209	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L210	#,
.L209:
	.loc 1 707 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L210:
	.loc 1 709 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.98
	cmpl	$4, %eax	#, ix86_cpu.98
	jne	.L211	#,
	.loc 1 709 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1176
	movq	%rax, %rdi	# tmp1176,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L212	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L212	#,
.L211:
	.loc 1 709 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.99
	cmpl	$2, %eax	#, ix86_cpu.99
	jne	.L213	#,
	.loc 1 709 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L212	#,
	movq	-8(%rbp), %rax	# insn, tmp1177
	movq	%rax, %rdi	# tmp1177,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	jne	.L213	#,
.L212:
	.loc 1 711 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L213:
	.loc 1 715 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L120:
	.loc 1 719 0
	movq	-8(%rbp), %rax	# insn, tmp1178
	movq	%rax, %rdi	# tmp1178,
	call	extract_constrain_insn_cached	#
	.loc 1 720 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.100
	cmpl	$4, %eax	#, ix86_cpu.100
	jne	.L214	#,
	.loc 1 720 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1179
	movq	%rax, %rdi	# tmp1179,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	je	.L215	#,
.L214:
	.loc 1 720 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.101
	cmpl	$3, %eax	#, ix86_cpu.101
	jne	.L216	#,
	.loc 1 720 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1180
	movq	%rax, %rdi	# tmp1180,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L216	#,
.L215:
	.loc 1 722 0 is_stmt 1
	movl	$56, %eax	#, D.57109
	jmp	.L135	#
.L216:
	.loc 1 724 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.102
	cmpl	$2, %eax	#, ix86_cpu.102
	jne	.L217	#,
	.loc 1 724 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1181
	movq	%rax, %rdi	# tmp1181,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L217	#,
	.loc 1 726 0 is_stmt 1
	movl	$39, %eax	#, D.57109
	jmp	.L135	#
.L217:
	.loc 1 728 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.103
	cmpl	$5, %eax	#, ix86_cpu.103
	jne	.L218	#,
	.loc 1 728 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1182
	movq	%rax, %rdi	# tmp1182,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L218	#,
	.loc 1 730 0 is_stmt 1
	movl	$24, %eax	#, D.57109
	jmp	.L135	#
.L218:
	.loc 1 732 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.104
	cmpl	$3, %eax	#, ix86_cpu.104
	jne	.L219	#,
	.loc 1 732 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.105
	cmpl	$2, %eax	#, which_alternative.105
	je	.L219	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L219	#,
	.loc 1 734 0 is_stmt 1
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L219:
	.loc 1 736 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.106
	cmpl	$5, %eax	#, ix86_cpu.106
	jne	.L220	#,
	.loc 1 736 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1183
	movq	%rax, %rdi	# tmp1183,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L221	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.107
	cmpl	$2, %eax	#, which_alternative.107
	je	.L220	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L220	#,
.L221:
	.loc 1 738 0 is_stmt 1
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L220:
	.loc 1 740 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.108
	cmpl	$3, %eax	#, ix86_cpu.108
	jne	.L222	#,
	.loc 1 740 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1184
	movq	%rax, %rdi	# tmp1184,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L223	#,
	movq	-8(%rbp), %rax	# insn, tmp1185
	movq	%rax, %rdi	# tmp1185,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L223	#,
	movq	-8(%rbp), %rax	# insn, tmp1186
	movq	%rax, %rdi	# tmp1186,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L223	#,
.L222:
	.loc 1 740 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.109
	cmpl	$2, %eax	#, ix86_cpu.109
	jne	.L224	#,
	.loc 1 740 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1187
	movq	%rax, %rdi	# tmp1187,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L223	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.110
	cmpl	$2, %eax	#, which_alternative.110
	je	.L224	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L224	#,
.L223:
	.loc 1 742 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L224:
	.loc 1 744 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.111
	cmpl	$4, %eax	#, ix86_cpu.111
	jne	.L225	#,
	.loc 1 744 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1188
	movq	%rax, %rdi	# tmp1188,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L226	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.112
	cmpl	$2, %eax	#, which_alternative.112
	je	.L225	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L226	#,
.L225:
	.loc 1 744 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.113
	cmpl	$2, %eax	#, ix86_cpu.113
	jne	.L227	#,
	.loc 1 744 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.114
	cmpl	$2, %eax	#, which_alternative.114
	je	.L228	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L226	#,
.L228:
	.loc 1 744 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1189
	movq	%rax, %rdi	# tmp1189,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	jne	.L227	#,
.L226:
	.loc 1 746 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L227:
	.loc 1 750 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L119:
	.loc 1 758 0
	movq	-8(%rbp), %rax	# insn, tmp1190
	movq	%rax, %rdi	# tmp1190,
	call	extract_insn_cached	#
	.loc 1 759 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.115
	cmpl	$4, %eax	#, ix86_cpu.115
	jne	.L229	#,
	.loc 1 759 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1191
	movq	%rax, %rdi	# tmp1191,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	je	.L230	#,
.L229:
	.loc 1 759 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.116
	cmpl	$3, %eax	#, ix86_cpu.116
	jne	.L231	#,
	.loc 1 759 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1192
	movq	%rax, %rdi	# tmp1192,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L231	#,
.L230:
	.loc 1 761 0 is_stmt 1
	movl	$56, %eax	#, D.57109
	jmp	.L135	#
.L231:
	.loc 1 763 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.117
	cmpl	$2, %eax	#, ix86_cpu.117
	jne	.L232	#,
	.loc 1 763 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1193
	movq	%rax, %rdi	# tmp1193,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L232	#,
	.loc 1 765 0 is_stmt 1
	movl	$39, %eax	#, D.57109
	jmp	.L135	#
.L232:
	.loc 1 767 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.118
	cmpl	$5, %eax	#, ix86_cpu.118
	jne	.L233	#,
	.loc 1 767 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1194
	movq	%rax, %rdi	# tmp1194,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L233	#,
	.loc 1 769 0 is_stmt 1
	movl	$24, %eax	#, D.57109
	jmp	.L135	#
.L233:
	.loc 1 771 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.119
	cmpl	$3, %eax	#, ix86_cpu.119
	jne	.L234	#,
	.loc 1 771 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L234	#,
	.loc 1 773 0 is_stmt 1
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L234:
	.loc 1 775 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.120
	cmpl	$5, %eax	#, ix86_cpu.120
	jne	.L235	#,
	.loc 1 775 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1195
	movq	%rax, %rdi	# tmp1195,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L236	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L235	#,
.L236:
	.loc 1 777 0 is_stmt 1
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L235:
	.loc 1 779 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.121
	cmpl	$3, %eax	#, ix86_cpu.121
	jne	.L237	#,
	.loc 1 779 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1196
	movq	%rax, %rdi	# tmp1196,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L238	#,
	movq	-8(%rbp), %rax	# insn, tmp1197
	movq	%rax, %rdi	# tmp1197,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L238	#,
	movq	-8(%rbp), %rax	# insn, tmp1198
	movq	%rax, %rdi	# tmp1198,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L238	#,
.L237:
	.loc 1 779 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.122
	cmpl	$2, %eax	#, ix86_cpu.122
	jne	.L239	#,
	.loc 1 779 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1199
	movq	%rax, %rdi	# tmp1199,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L238	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L239	#,
.L238:
	.loc 1 781 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L239:
	.loc 1 783 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.123
	cmpl	$4, %eax	#, ix86_cpu.123
	jne	.L240	#,
	.loc 1 783 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1200
	movq	%rax, %rdi	# tmp1200,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L241	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L241	#,
.L240:
	.loc 1 783 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.124
	cmpl	$2, %eax	#, ix86_cpu.124
	jne	.L242	#,
	.loc 1 783 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L241	#,
	movq	-8(%rbp), %rax	# insn, tmp1201
	movq	%rax, %rdi	# tmp1201,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	jne	.L242	#,
.L241:
	.loc 1 785 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L242:
	.loc 1 789 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L118:
	.loc 1 793 0
	movq	-8(%rbp), %rax	# insn, tmp1202
	movq	%rax, %rdi	# tmp1202,
	call	extract_constrain_insn_cached	#
	.loc 1 794 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.125
	cmpl	$4, %eax	#, ix86_cpu.125
	jne	.L243	#,
	.loc 1 794 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1203
	movq	%rax, %rdi	# tmp1203,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	je	.L244	#,
.L243:
	.loc 1 794 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.126
	cmpl	$3, %eax	#, ix86_cpu.126
	jne	.L245	#,
	.loc 1 794 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1204
	movq	%rax, %rdi	# tmp1204,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L245	#,
.L244:
	.loc 1 796 0 is_stmt 1
	movl	$56, %eax	#, D.57109
	jmp	.L135	#
.L245:
	.loc 1 798 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.127
	cmpl	$2, %eax	#, ix86_cpu.127
	jne	.L246	#,
	.loc 1 798 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1205
	movq	%rax, %rdi	# tmp1205,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L246	#,
	.loc 1 800 0 is_stmt 1
	movl	$39, %eax	#, D.57109
	jmp	.L135	#
.L246:
	.loc 1 802 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.128
	cmpl	$5, %eax	#, ix86_cpu.128
	jne	.L247	#,
	.loc 1 802 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1206
	movq	%rax, %rdi	# tmp1206,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L247	#,
	.loc 1 804 0 is_stmt 1
	movl	$24, %eax	#, D.57109
	jmp	.L135	#
.L247:
	.loc 1 806 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.129
	cmpl	$3, %eax	#, ix86_cpu.129
	jne	.L248	#,
	.loc 1 806 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.130
	cmpl	$2, %eax	#, which_alternative.130
	je	.L248	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L248	#,
	.loc 1 808 0 is_stmt 1
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L248:
	.loc 1 810 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.131
	cmpl	$5, %eax	#, ix86_cpu.131
	jne	.L249	#,
	.loc 1 810 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1207
	movq	%rax, %rdi	# tmp1207,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L250	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.132
	cmpl	$2, %eax	#, which_alternative.132
	je	.L249	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L249	#,
.L250:
	.loc 1 812 0 is_stmt 1
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L249:
	.loc 1 814 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.133
	cmpl	$3, %eax	#, ix86_cpu.133
	jne	.L251	#,
	.loc 1 814 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1208
	movq	%rax, %rdi	# tmp1208,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L252	#,
	movq	-8(%rbp), %rax	# insn, tmp1209
	movq	%rax, %rdi	# tmp1209,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L252	#,
	movq	-8(%rbp), %rax	# insn, tmp1210
	movq	%rax, %rdi	# tmp1210,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L252	#,
.L251:
	.loc 1 814 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.134
	cmpl	$2, %eax	#, ix86_cpu.134
	jne	.L253	#,
	.loc 1 814 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1211
	movq	%rax, %rdi	# tmp1211,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L252	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.135
	cmpl	$2, %eax	#, which_alternative.135
	je	.L253	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L253	#,
.L252:
	.loc 1 816 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L253:
	.loc 1 818 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.136
	cmpl	$4, %eax	#, ix86_cpu.136
	jne	.L254	#,
	.loc 1 818 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1212
	movq	%rax, %rdi	# tmp1212,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L255	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.137
	cmpl	$2, %eax	#, which_alternative.137
	je	.L254	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L255	#,
.L254:
	.loc 1 818 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.138
	cmpl	$2, %eax	#, ix86_cpu.138
	jne	.L256	#,
	.loc 1 818 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.139
	cmpl	$2, %eax	#, which_alternative.139
	je	.L257	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L255	#,
.L257:
	.loc 1 818 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1213
	movq	%rax, %rdi	# tmp1213,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	jne	.L256	#,
.L255:
	.loc 1 820 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L256:
	.loc 1 824 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L117:
	.loc 1 830 0
	movq	-8(%rbp), %rax	# insn, tmp1214
	movq	%rax, %rdi	# tmp1214,
	call	extract_insn_cached	#
	.loc 1 831 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.140
	cmpl	$4, %eax	#, ix86_cpu.140
	jne	.L258	#,
	.loc 1 831 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1215
	movq	%rax, %rdi	# tmp1215,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	je	.L259	#,
.L258:
	.loc 1 831 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.141
	cmpl	$3, %eax	#, ix86_cpu.141
	jne	.L260	#,
	.loc 1 831 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1216
	movq	%rax, %rdi	# tmp1216,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L260	#,
.L259:
	.loc 1 833 0 is_stmt 1
	movl	$56, %eax	#, D.57109
	jmp	.L135	#
.L260:
	.loc 1 835 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.142
	cmpl	$2, %eax	#, ix86_cpu.142
	jne	.L261	#,
	.loc 1 835 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1217
	movq	%rax, %rdi	# tmp1217,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L261	#,
	.loc 1 837 0 is_stmt 1
	movl	$39, %eax	#, D.57109
	jmp	.L135	#
.L261:
	.loc 1 839 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.143
	cmpl	$5, %eax	#, ix86_cpu.143
	jne	.L262	#,
	.loc 1 839 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1218
	movq	%rax, %rdi	# tmp1218,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57113
	jne	.L262	#,
	.loc 1 841 0 is_stmt 1
	movl	$24, %eax	#, D.57109
	jmp	.L135	#
.L262:
	.loc 1 843 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.144
	cmpl	$3, %eax	#, ix86_cpu.144
	jne	.L263	#,
	.loc 1 843 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L263	#,
	.loc 1 845 0 is_stmt 1
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L263:
	.loc 1 847 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.145
	cmpl	$5, %eax	#, ix86_cpu.145
	jne	.L264	#,
	.loc 1 847 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1219
	movq	%rax, %rdi	# tmp1219,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L265	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L264	#,
.L265:
	.loc 1 849 0 is_stmt 1
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L264:
	.loc 1 851 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.146
	cmpl	$3, %eax	#, ix86_cpu.146
	jne	.L266	#,
	.loc 1 851 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1220
	movq	%rax, %rdi	# tmp1220,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L267	#,
	movq	-8(%rbp), %rax	# insn, tmp1221
	movq	%rax, %rdi	# tmp1221,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L267	#,
	movq	-8(%rbp), %rax	# insn, tmp1222
	movq	%rax, %rdi	# tmp1222,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L267	#,
.L266:
	.loc 1 851 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.147
	cmpl	$2, %eax	#, ix86_cpu.147
	jne	.L268	#,
	.loc 1 851 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1223
	movq	%rax, %rdi	# tmp1223,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L267	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L268	#,
.L267:
	.loc 1 853 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L268:
	.loc 1 855 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.148
	cmpl	$4, %eax	#, ix86_cpu.148
	jne	.L269	#,
	.loc 1 855 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1224
	movq	%rax, %rdi	# tmp1224,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	je	.L270	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L270	#,
.L269:
	.loc 1 855 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.149
	cmpl	$2, %eax	#, ix86_cpu.149
	jne	.L271	#,
	.loc 1 855 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	jne	.L270	#,
	movq	-8(%rbp), %rax	# insn, tmp1225
	movq	%rax, %rdi	# tmp1225,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57113
	jne	.L271	#,
.L270:
	.loc 1 857 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L271:
	.loc 1 861 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L116:
	.loc 1 865 0
	movq	-8(%rbp), %rax	# insn, tmp1226
	movq	%rax, %rdi	# tmp1226,
	call	extract_insn_cached	#
	.loc 1 866 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.150
	cmpl	$3, %eax	#, ix86_cpu.150
	jne	.L272	#,
	.loc 1 866 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L272	#,
	.loc 1 868 0 is_stmt 1
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L272:
	.loc 1 870 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.151
	cmpl	$5, %eax	#, ix86_cpu.151
	jne	.L273	#,
	.loc 1 872 0
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L273:
	.loc 1 874 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.152
	cmpl	$3, %eax	#, ix86_cpu.152
	jne	.L274	#,
	.loc 1 874 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1227
	movq	%rax, %rdi	# tmp1227,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L275	#,
	movq	-8(%rbp), %rax	# insn, tmp1228
	movq	%rax, %rdi	# tmp1228,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L275	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L275	#,
.L274:
	.loc 1 874 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.153
	cmpl	$2, %eax	#, ix86_cpu.153
	jne	.L276	#,
.L275:
	.loc 1 876 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L276:
	.loc 1 878 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.154
	cmpl	$4, %eax	#, ix86_cpu.154
	jne	.L277	#,
	.loc 1 880 0
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L277:
	.loc 1 884 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L115:
	.loc 1 888 0
	movq	-8(%rbp), %rax	# insn, tmp1229
	movq	%rax, %rdi	# tmp1229,
	call	extract_insn_cached	#
	.loc 1 889 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.155
	cmpl	$3, %eax	#, ix86_cpu.155
	jne	.L278	#,
	.loc 1 889 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L278	#,
	.loc 1 891 0 is_stmt 1
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L278:
	.loc 1 893 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.156
	cmpl	$5, %eax	#, ix86_cpu.156
	jne	.L279	#,
	.loc 1 895 0
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L279:
	.loc 1 897 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.157
	cmpl	$3, %eax	#, ix86_cpu.157
	jne	.L280	#,
	.loc 1 897 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1230
	movq	%rax, %rdi	# tmp1230,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L281	#,
	movq	-8(%rbp), %rax	# insn, tmp1231
	movq	%rax, %rdi	# tmp1231,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L281	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L281	#,
.L280:
	.loc 1 897 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.158
	cmpl	$2, %eax	#, ix86_cpu.158
	jne	.L282	#,
.L281:
	.loc 1 899 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L282:
	.loc 1 901 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.159
	cmpl	$4, %eax	#, ix86_cpu.159
	jne	.L283	#,
	.loc 1 903 0
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L283:
	.loc 1 907 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L114:
	.loc 1 912 0
	movq	-8(%rbp), %rax	# insn, tmp1232
	movq	%rax, %rdi	# tmp1232,
	call	extract_constrain_insn_cached	#
	.loc 1 913 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.160
	cmpl	$3, %eax	#, ix86_cpu.160
	jne	.L284	#,
	.loc 1 913 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.161
	testl	%eax, %eax	# which_alternative.161
	jne	.L284	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L284	#,
	.loc 1 915 0 is_stmt 1
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L284:
	.loc 1 917 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.162
	cmpl	$5, %eax	#, ix86_cpu.162
	jne	.L285	#,
	.loc 1 917 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.163
	testl	%eax, %eax	# which_alternative.163
	jne	.L285	#,
	.loc 1 919 0 is_stmt 1
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L285:
	.loc 1 921 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.164
	cmpl	$3, %eax	#, ix86_cpu.164
	jne	.L286	#,
	.loc 1 921 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1233
	movq	%rax, %rdi	# tmp1233,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L287	#,
	movq	-8(%rbp), %rax	# insn, tmp1234
	movq	%rax, %rdi	# tmp1234,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L287	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.165
	testl	%eax, %eax	# which_alternative.165
	jne	.L286	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L287	#,
.L286:
	.loc 1 921 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.166
	cmpl	$2, %eax	#, ix86_cpu.166
	jne	.L288	#,
	.loc 1 921 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.167
	testl	%eax, %eax	# which_alternative.167
	jne	.L288	#,
.L287:
	.loc 1 923 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L288:
	.loc 1 925 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.168
	cmpl	$4, %eax	#, ix86_cpu.168
	jne	.L289	#,
	.loc 1 925 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.169
	testl	%eax, %eax	# which_alternative.169
	je	.L290	#,
.L289:
	.loc 1 925 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.170
	cmpl	$2, %eax	#, ix86_cpu.170
	jne	.L291	#,
	.loc 1 925 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.171
	testl	%eax, %eax	# which_alternative.171
	jne	.L291	#,
.L290:
	.loc 1 927 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L291:
	.loc 1 931 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L113:
	.loc 1 936 0
	movq	-8(%rbp), %rax	# insn, tmp1235
	movq	%rax, %rdi	# tmp1235,
	call	extract_insn_cached	#
	.loc 1 937 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.172
	cmpl	$3, %eax	#, ix86_cpu.172
	jne	.L292	#,
	.loc 1 937 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L292	#,
	.loc 1 939 0 is_stmt 1
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L292:
	.loc 1 941 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.173
	cmpl	$5, %eax	#, ix86_cpu.173
	jne	.L293	#,
	.loc 1 943 0
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L293:
	.loc 1 945 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.174
	cmpl	$3, %eax	#, ix86_cpu.174
	jne	.L294	#,
	.loc 1 945 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1236
	movq	%rax, %rdi	# tmp1236,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L295	#,
	movq	-8(%rbp), %rax	# insn, tmp1237
	movq	%rax, %rdi	# tmp1237,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L295	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57110
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	mult_operator	#
	testl	%eax, %eax	# D.57109
	je	.L295	#,
.L294:
	.loc 1 945 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.175
	cmpl	$2, %eax	#, ix86_cpu.175
	jne	.L296	#,
.L295:
	.loc 1 947 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L296:
	.loc 1 949 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.176
	cmpl	$4, %eax	#, ix86_cpu.176
	jne	.L297	#,
	.loc 1 951 0
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L297:
	.loc 1 955 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L112:
	.loc 1 963 0
	movq	-8(%rbp), %rax	# insn, tmp1238
	movq	%rax, %rdi	# tmp1238,
	call	extract_insn_cached	#
	.loc 1 964 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.177
	cmpl	$3, %eax	#, ix86_cpu.177
	jne	.L298	#,
	.loc 1 964 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L298	#,
	.loc 1 966 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L298:
	.loc 1 970 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L111:
	.loc 1 981 0
	movq	-8(%rbp), %rax	# insn, tmp1239
	movq	%rax, %rdi	# tmp1239,
	call	extract_insn_cached	#
	.loc 1 982 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.178
	cmpl	$3, %eax	#, ix86_cpu.178
	jne	.L299	#,
	.loc 1 982 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	memory_operand	#
	testl	%eax, %eax	# D.57109
	je	.L299	#,
	.loc 1 984 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L299:
	.loc 1 988 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L110:
	.loc 1 1051 0
	movq	-8(%rbp), %rax	# insn, tmp1240
	movq	%rax, %rdi	# tmp1240,
	call	extract_insn_cached	#
	.loc 1 1052 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.179
	cmpl	$3, %eax	#, ix86_cpu.179
	jne	.L300	#,
	.loc 1 1052 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1241
	movq	%rax, %rdi	# tmp1241,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L301	#,
	movq	-8(%rbp), %rax	# insn, tmp1242
	movq	%rax, %rdi	# tmp1242,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L301	#,
.L300:
	.loc 1 1052 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.180
	cmpl	$2, %eax	#, ix86_cpu.180
	jne	.L302	#,
	.loc 1 1052 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1243
	movq	%rax, %rdi	# tmp1243,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L303	#,
	.loc 1 1052 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L304	#,
.L303:
	.loc 1 1052 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1244
	movq	%rax, %rdi	# tmp1244,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L301	#,
.L304:
	movq	-8(%rbp), %rax	# insn, tmp1245
	movq	%rax, %rdi	# tmp1245,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L302	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57109
	je	.L302	#,
	movq	-8(%rbp), %rax	# insn, tmp1246
	movq	%rax, %rdi	# tmp1246,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L302	#,
.L301:
	.loc 1 1054 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L302:
	.loc 1 1056 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.181
	cmpl	$2, %eax	#, ix86_cpu.181
	jne	.L305	#,
	.loc 1 1056 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1247
	movq	%rax, %rdi	# tmp1247,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L306	#,
	.loc 1 1056 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L307	#,
.L306:
	.loc 1 1056 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1248
	movq	%rax, %rdi	# tmp1248,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L308	#,
	movq	-8(%rbp), %rax	# insn, tmp1249
	movq	%rax, %rdi	# tmp1249,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L308	#,
.L307:
	movq	-8(%rbp), %rax	# insn, tmp1250
	movq	%rax, %rdi	# tmp1250,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L305	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57109
	je	.L305	#,
	movq	-8(%rbp), %rax	# insn, tmp1251
	movq	%rax, %rdi	# tmp1251,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L308	#,
	movq	-8(%rbp), %rax	# insn, tmp1252
	movq	%rax, %rdi	# tmp1252,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L305	#,
.L308:
	.loc 1 1058 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L305:
	.loc 1 1062 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L109:
	.loc 1 1068 0
	movq	-8(%rbp), %rax	# insn, tmp1253
	movq	%rax, %rdi	# tmp1253,
	call	extract_constrain_insn_cached	#
	.loc 1 1069 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.182
	cmpl	$3, %eax	#, ix86_cpu.182
	jne	.L309	#,
	.loc 1 1069 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1254
	movq	%rax, %rdi	# tmp1254,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L310	#,
	movq	-8(%rbp), %rax	# insn, tmp1255
	movq	%rax, %rdi	# tmp1255,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L310	#,
.L309:
	.loc 1 1069 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.183
	cmpl	$2, %eax	#, ix86_cpu.183
	jne	.L311	#,
	.loc 1 1069 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.184
	cmpl	$1, %eax	#, which_alternative.184
	jne	.L312	#,
	movq	-8(%rbp), %rax	# insn, tmp1256
	movq	%rax, %rdi	# tmp1256,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L313	#,
	.loc 1 1069 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L312	#,
.L313:
	.loc 1 1069 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1257
	movq	%rax, %rdi	# tmp1257,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L310	#,
.L312:
	.loc 1 1069 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1258
	movq	%rax, %rdi	# tmp1258,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L311	#,
	.loc 1 1069 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.185
	cmpl	$1, %eax	#, which_alternative.185
	jne	.L311	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57109
	je	.L311	#,
	movq	-8(%rbp), %rax	# insn, tmp1259
	movq	%rax, %rdi	# tmp1259,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L311	#,
.L310:
	.loc 1 1071 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L311:
	.loc 1 1073 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.186
	cmpl	$2, %eax	#, ix86_cpu.186
	jne	.L314	#,
	.loc 1 1073 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.187
	cmpl	$1, %eax	#, which_alternative.187
	jne	.L315	#,
	movq	-8(%rbp), %rax	# insn, tmp1260
	movq	%rax, %rdi	# tmp1260,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L316	#,
	.loc 1 1073 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L315	#,
.L316:
	.loc 1 1073 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1261
	movq	%rax, %rdi	# tmp1261,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L317	#,
	movq	-8(%rbp), %rax	# insn, tmp1262
	movq	%rax, %rdi	# tmp1262,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L317	#,
.L315:
	.loc 1 1073 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1263
	movq	%rax, %rdi	# tmp1263,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L314	#,
	.loc 1 1073 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.188
	cmpl	$1, %eax	#, which_alternative.188
	jne	.L314	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57109
	je	.L314	#,
	movq	-8(%rbp), %rax	# insn, tmp1264
	movq	%rax, %rdi	# tmp1264,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L317	#,
	movq	-8(%rbp), %rax	# insn, tmp1265
	movq	%rax, %rdi	# tmp1265,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L314	#,
.L317:
	.loc 1 1075 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L314:
	.loc 1 1079 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L108:
	.loc 1 1083 0
	movq	-8(%rbp), %rax	# insn, tmp1266
	movq	%rax, %rdi	# tmp1266,
	call	extract_constrain_insn_cached	#
	.loc 1 1084 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.189
	cmpl	$3, %eax	#, ix86_cpu.189
	jne	.L318	#,
	.loc 1 1084 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1267
	movq	%rax, %rdi	# tmp1267,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L319	#,
	movq	-8(%rbp), %rax	# insn, tmp1268
	movq	%rax, %rdi	# tmp1268,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L319	#,
.L318:
	.loc 1 1084 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.190
	cmpl	$2, %eax	#, ix86_cpu.190
	jne	.L320	#,
	.loc 1 1084 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1269
	movq	%rax, %rdi	# tmp1269,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	je	.L321	#,
	.loc 1 1084 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1270
	movq	%rax, %rdi	# tmp1270,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57113
	jne	.L320	#,
.L321:
	.loc 1 1084 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1271
	movq	%rax, %rdi	# tmp1271,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L322	#,
	movq	-8(%rbp), %rax	# insn, tmp1272
	movq	%rax, %rdi	# tmp1272,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L319	#,
.L322:
	.loc 1 1084 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1273
	movq	%rax, %rdi	# tmp1273,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L323	#,
	.loc 1 1084 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1274
	movq	%rax, %rdi	# tmp1274,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L319	#,
.L323:
	.loc 1 1084 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1275
	movq	%rax, %rdi	# tmp1275,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L320	#,
	.loc 1 1084 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1276
	movq	%rax, %rdi	# tmp1276,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L320	#,
.L319:
	.loc 1 1086 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L320:
	.loc 1 1088 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.191
	cmpl	$4, %eax	#, ix86_cpu.191
	jne	.L324	#,
	.loc 1 1088 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.192
	cmpl	$2, %eax	#, which_alternative.192
	je	.L325	#,
.L324:
	.loc 1 1088 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.193
	cmpl	$2, %eax	#, ix86_cpu.193
	jne	.L326	#,
	.loc 1 1088 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1277
	movq	%rax, %rdi	# tmp1277,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	je	.L327	#,
	.loc 1 1088 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1278
	movq	%rax, %rdi	# tmp1278,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57113
	jne	.L326	#,
.L327:
	.loc 1 1088 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1279
	movq	%rax, %rdi	# tmp1279,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L328	#,
	movq	-8(%rbp), %rax	# insn, tmp1280
	movq	%rax, %rdi	# tmp1280,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L325	#,
	movq	-8(%rbp), %rax	# insn, tmp1281
	movq	%rax, %rdi	# tmp1281,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L325	#,
.L328:
	.loc 1 1088 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1282
	movq	%rax, %rdi	# tmp1282,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L329	#,
	.loc 1 1088 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1283
	movq	%rax, %rdi	# tmp1283,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L325	#,
	movq	-8(%rbp), %rax	# insn, tmp1284
	movq	%rax, %rdi	# tmp1284,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L325	#,
.L329:
	.loc 1 1088 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1285
	movq	%rax, %rdi	# tmp1285,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L326	#,
	.loc 1 1088 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1286
	movq	%rax, %rdi	# tmp1286,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L325	#,
	movq	-8(%rbp), %rax	# insn, tmp1287
	movq	%rax, %rdi	# tmp1287,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L326	#,
.L325:
	.loc 1 1090 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L326:
	.loc 1 1094 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L107:
	.loc 1 1098 0
	movq	-8(%rbp), %rax	# insn, tmp1288
	movq	%rax, %rdi	# tmp1288,
	call	extract_constrain_insn_cached	#
	.loc 1 1099 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.194
	cmpl	$3, %eax	#, ix86_cpu.194
	jne	.L330	#,
	.loc 1 1099 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1289
	movq	%rax, %rdi	# tmp1289,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L331	#,
	movq	-8(%rbp), %rax	# insn, tmp1290
	movq	%rax, %rdi	# tmp1290,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L331	#,
.L330:
	.loc 1 1099 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.195
	cmpl	$2, %eax	#, ix86_cpu.195
	jne	.L332	#,
	.loc 1 1099 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.196
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.197
	movl	%eax, %ecx	# ix86_cpu.198, tmp1604
	sarl	%cl, %edx	# tmp1604, D.57109
	movl	%edx, %eax	# D.57109, D.57109
	andl	$1, %eax	#, D.57109
	testl	%eax, %eax	# D.57109
	je	.L333	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const1_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L334	#,
.L333:
	.loc 1 1099 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.199
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.200
	movl	%eax, %ecx	# ix86_cpu.201, tmp1606
	sarl	%cl, %edx	# tmp1606, D.57109
	movl	%edx, %eax	# D.57109, D.57109
	andl	$1, %eax	#, D.57109
	testl	%eax, %eax	# D.57109
	je	.L334	#,
	.loc 1 1099 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const1_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L332	#,
.L334:
	movq	-8(%rbp), %rax	# insn, tmp1291
	movq	%rax, %rdi	# tmp1291,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L335	#,
	movq	-8(%rbp), %rax	# insn, tmp1292
	movq	%rax, %rdi	# tmp1292,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L331	#,
.L335:
	.loc 1 1099 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1293
	movq	%rax, %rdi	# tmp1293,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L336	#,
	.loc 1 1099 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1294
	movq	%rax, %rdi	# tmp1294,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L331	#,
.L336:
	.loc 1 1099 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1295
	movq	%rax, %rdi	# tmp1295,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L332	#,
	.loc 1 1099 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1296
	movq	%rax, %rdi	# tmp1296,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L332	#,
.L331:
	.loc 1 1101 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L332:
	.loc 1 1103 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.202
	cmpl	$2, %eax	#, ix86_cpu.202
	jne	.L337	#,
	.loc 1 1103 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.203
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.204
	movl	%eax, %ecx	# ix86_cpu.205, tmp1608
	sarl	%cl, %edx	# tmp1608, D.57109
	movl	%edx, %eax	# D.57109, D.57109
	andl	$1, %eax	#, D.57109
	testl	%eax, %eax	# D.57109
	je	.L338	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const1_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L339	#,
.L338:
	.loc 1 1103 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.206
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.207
	movl	%eax, %ecx	# ix86_cpu.208, tmp1610
	sarl	%cl, %edx	# tmp1610, D.57109
	movl	%edx, %eax	# D.57109, D.57109
	andl	$1, %eax	#, D.57109
	testl	%eax, %eax	# D.57109
	je	.L339	#,
	.loc 1 1103 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const1_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L337	#,
.L339:
	movq	-8(%rbp), %rax	# insn, tmp1297
	movq	%rax, %rdi	# tmp1297,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L340	#,
	movq	-8(%rbp), %rax	# insn, tmp1298
	movq	%rax, %rdi	# tmp1298,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L341	#,
	movq	-8(%rbp), %rax	# insn, tmp1299
	movq	%rax, %rdi	# tmp1299,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L341	#,
.L340:
	.loc 1 1103 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1300
	movq	%rax, %rdi	# tmp1300,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L342	#,
	.loc 1 1103 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1301
	movq	%rax, %rdi	# tmp1301,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L341	#,
	movq	-8(%rbp), %rax	# insn, tmp1302
	movq	%rax, %rdi	# tmp1302,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L341	#,
.L342:
	.loc 1 1103 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1303
	movq	%rax, %rdi	# tmp1303,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L337	#,
	.loc 1 1103 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1304
	movq	%rax, %rdi	# tmp1304,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L341	#,
	movq	-8(%rbp), %rax	# insn, tmp1305
	movq	%rax, %rdi	# tmp1305,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L337	#,
.L341:
	.loc 1 1105 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L337:
	.loc 1 1109 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L106:
	.loc 1 1113 0
	movq	-8(%rbp), %rax	# insn, tmp1306
	movq	%rax, %rdi	# tmp1306,
	call	extract_constrain_insn_cached	#
	.loc 1 1114 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.209
	cmpl	$3, %eax	#, ix86_cpu.209
	jne	.L343	#,
	.loc 1 1114 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1307
	movq	%rax, %rdi	# tmp1307,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L344	#,
	movq	-8(%rbp), %rax	# insn, tmp1308
	movq	%rax, %rdi	# tmp1308,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L344	#,
.L343:
	.loc 1 1114 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.210
	cmpl	$2, %eax	#, ix86_cpu.210
	jne	.L345	#,
	.loc 1 1114 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.211
	testl	%eax, %eax	# which_alternative.211
	jne	.L345	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.212
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.213
	movl	%eax, %ecx	# ix86_cpu.214, tmp1612
	sarl	%cl, %edx	# tmp1612, D.57109
	movl	%edx, %eax	# D.57109, D.57109
	andl	$1, %eax	#, D.57109
	testl	%eax, %eax	# D.57109
	je	.L346	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const1_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L347	#,
.L346:
	.loc 1 1114 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.215
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.216
	movl	%eax, %ecx	# ix86_cpu.217, tmp1614
	sarl	%cl, %edx	# tmp1614, D.57109
	movl	%edx, %eax	# D.57109, D.57109
	andl	$1, %eax	#, D.57109
	testl	%eax, %eax	# D.57109
	je	.L347	#,
	.loc 1 1114 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const1_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L345	#,
.L347:
	movq	-8(%rbp), %rax	# insn, tmp1309
	movq	%rax, %rdi	# tmp1309,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L348	#,
	movq	-8(%rbp), %rax	# insn, tmp1310
	movq	%rax, %rdi	# tmp1310,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L344	#,
.L348:
	.loc 1 1114 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1311
	movq	%rax, %rdi	# tmp1311,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L349	#,
	.loc 1 1114 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1312
	movq	%rax, %rdi	# tmp1312,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L344	#,
.L349:
	.loc 1 1114 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1313
	movq	%rax, %rdi	# tmp1313,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L345	#,
	.loc 1 1114 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1314
	movq	%rax, %rdi	# tmp1314,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L345	#,
.L344:
	.loc 1 1116 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L345:
	.loc 1 1118 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.218
	cmpl	$4, %eax	#, ix86_cpu.218
	jne	.L350	#,
	.loc 1 1118 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.219
	cmpl	$1, %eax	#, which_alternative.219
	je	.L351	#,
.L350:
	.loc 1 1118 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.220
	cmpl	$2, %eax	#, ix86_cpu.220
	jne	.L352	#,
	.loc 1 1118 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.221
	testl	%eax, %eax	# which_alternative.221
	jne	.L352	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.222
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.223
	movl	%eax, %ecx	# ix86_cpu.224, tmp1616
	sarl	%cl, %edx	# tmp1616, D.57109
	movl	%edx, %eax	# D.57109, D.57109
	andl	$1, %eax	#, D.57109
	testl	%eax, %eax	# D.57109
	je	.L353	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const1_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L354	#,
.L353:
	.loc 1 1118 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.225
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.226
	movl	%eax, %ecx	# ix86_cpu.227, tmp1618
	sarl	%cl, %edx	# tmp1618, D.57109
	movl	%edx, %eax	# D.57109, D.57109
	andl	$1, %eax	#, D.57109
	testl	%eax, %eax	# D.57109
	je	.L354	#,
	.loc 1 1118 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	const1_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L352	#,
.L354:
	movq	-8(%rbp), %rax	# insn, tmp1315
	movq	%rax, %rdi	# tmp1315,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L355	#,
	movq	-8(%rbp), %rax	# insn, tmp1316
	movq	%rax, %rdi	# tmp1316,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L351	#,
	movq	-8(%rbp), %rax	# insn, tmp1317
	movq	%rax, %rdi	# tmp1317,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L351	#,
.L355:
	.loc 1 1118 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1318
	movq	%rax, %rdi	# tmp1318,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L356	#,
	.loc 1 1118 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1319
	movq	%rax, %rdi	# tmp1319,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L351	#,
	movq	-8(%rbp), %rax	# insn, tmp1320
	movq	%rax, %rdi	# tmp1320,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L351	#,
.L356:
	.loc 1 1118 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1321
	movq	%rax, %rdi	# tmp1321,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L352	#,
	.loc 1 1118 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1322
	movq	%rax, %rdi	# tmp1322,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L351	#,
	movq	-8(%rbp), %rax	# insn, tmp1323
	movq	%rax, %rdi	# tmp1323,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L352	#,
.L351:
	.loc 1 1120 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L352:
	.loc 1 1124 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L105:
	.loc 1 1133 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.228
	cmpl	$3, %eax	#, ix86_cpu.228
	jne	.L357	#,
	.loc 1 1133 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1324
	movq	%rax, %rdi	# tmp1324,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L358	#,
	movq	-8(%rbp), %rax	# insn, tmp1325
	movq	%rax, %rdi	# tmp1325,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L358	#,
.L357:
	.loc 1 1133 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.229
	cmpl	$2, %eax	#, ix86_cpu.229
	jne	.L359	#,
	.loc 1 1133 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1326
	movq	%rax, %rdi	# tmp1326,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	je	.L360	#,
	.loc 1 1133 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1327
	movq	%rax, %rdi	# tmp1327,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57113
	jne	.L359	#,
.L360:
	.loc 1 1133 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1328
	movq	%rax, %rdi	# tmp1328,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L361	#,
	movq	-8(%rbp), %rax	# insn, tmp1329
	movq	%rax, %rdi	# tmp1329,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L358	#,
.L361:
	.loc 1 1133 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1330
	movq	%rax, %rdi	# tmp1330,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L362	#,
	.loc 1 1133 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1331
	movq	%rax, %rdi	# tmp1331,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L358	#,
.L362:
	.loc 1 1133 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1332
	movq	%rax, %rdi	# tmp1332,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L359	#,
	.loc 1 1133 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1333
	movq	%rax, %rdi	# tmp1333,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L359	#,
.L358:
	.loc 1 1135 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L359:
	.loc 1 1137 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.230
	cmpl	$2, %eax	#, ix86_cpu.230
	jne	.L363	#,
	.loc 1 1137 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1334
	movq	%rax, %rdi	# tmp1334,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	je	.L364	#,
	.loc 1 1137 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1335
	movq	%rax, %rdi	# tmp1335,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57113
	jne	.L363	#,
.L364:
	.loc 1 1137 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1336
	movq	%rax, %rdi	# tmp1336,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L365	#,
	movq	-8(%rbp), %rax	# insn, tmp1337
	movq	%rax, %rdi	# tmp1337,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L366	#,
	movq	-8(%rbp), %rax	# insn, tmp1338
	movq	%rax, %rdi	# tmp1338,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L366	#,
.L365:
	.loc 1 1137 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1339
	movq	%rax, %rdi	# tmp1339,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L367	#,
	.loc 1 1137 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1340
	movq	%rax, %rdi	# tmp1340,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L366	#,
	movq	-8(%rbp), %rax	# insn, tmp1341
	movq	%rax, %rdi	# tmp1341,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L366	#,
.L367:
	.loc 1 1137 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1342
	movq	%rax, %rdi	# tmp1342,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L363	#,
	.loc 1 1137 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1343
	movq	%rax, %rdi	# tmp1343,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L366	#,
	movq	-8(%rbp), %rax	# insn, tmp1344
	movq	%rax, %rdi	# tmp1344,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L363	#,
.L366:
	.loc 1 1139 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L363:
	.loc 1 1143 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L104:
	.loc 1 1149 0
	movq	-8(%rbp), %rax	# insn, tmp1345
	movq	%rax, %rdi	# tmp1345,
	call	extract_constrain_insn_cached	#
	.loc 1 1150 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.231
	cmpl	$3, %eax	#, ix86_cpu.231
	jne	.L368	#,
	.loc 1 1150 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1346
	movq	%rax, %rdi	# tmp1346,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L369	#,
	movq	-8(%rbp), %rax	# insn, tmp1347
	movq	%rax, %rdi	# tmp1347,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L369	#,
.L368:
	.loc 1 1150 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.232
	cmpl	$2, %eax	#, ix86_cpu.232
	jne	.L370	#,
	.loc 1 1150 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1348
	movq	%rax, %rdi	# tmp1348,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	je	.L371	#,
	.loc 1 1150 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1349
	movq	%rax, %rdi	# tmp1349,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57113
	jne	.L370	#,
.L371:
	.loc 1 1150 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1350
	movq	%rax, %rdi	# tmp1350,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L372	#,
	movq	-8(%rbp), %rax	# insn, tmp1351
	movq	%rax, %rdi	# tmp1351,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L369	#,
.L372:
	.loc 1 1150 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1352
	movq	%rax, %rdi	# tmp1352,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L373	#,
	.loc 1 1150 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1353
	movq	%rax, %rdi	# tmp1353,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L369	#,
.L373:
	.loc 1 1150 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1354
	movq	%rax, %rdi	# tmp1354,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L370	#,
	.loc 1 1150 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1355
	movq	%rax, %rdi	# tmp1355,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L370	#,
.L369:
	.loc 1 1152 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L370:
	.loc 1 1154 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.233
	cmpl	$4, %eax	#, ix86_cpu.233
	jne	.L374	#,
	.loc 1 1154 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.234
	cmpl	$1, %eax	#, which_alternative.234
	je	.L375	#,
.L374:
	.loc 1 1154 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.235
	cmpl	$2, %eax	#, ix86_cpu.235
	jne	.L376	#,
	.loc 1 1154 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1356
	movq	%rax, %rdi	# tmp1356,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	je	.L377	#,
	.loc 1 1154 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1357
	movq	%rax, %rdi	# tmp1357,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57113
	jne	.L376	#,
.L377:
	.loc 1 1154 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1358
	movq	%rax, %rdi	# tmp1358,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L378	#,
	movq	-8(%rbp), %rax	# insn, tmp1359
	movq	%rax, %rdi	# tmp1359,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L375	#,
	movq	-8(%rbp), %rax	# insn, tmp1360
	movq	%rax, %rdi	# tmp1360,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L375	#,
.L378:
	.loc 1 1154 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1361
	movq	%rax, %rdi	# tmp1361,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L379	#,
	.loc 1 1154 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1362
	movq	%rax, %rdi	# tmp1362,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L375	#,
	movq	-8(%rbp), %rax	# insn, tmp1363
	movq	%rax, %rdi	# tmp1363,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L375	#,
.L379:
	.loc 1 1154 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1364
	movq	%rax, %rdi	# tmp1364,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L376	#,
	.loc 1 1154 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1365
	movq	%rax, %rdi	# tmp1365,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L375	#,
	movq	-8(%rbp), %rax	# insn, tmp1366
	movq	%rax, %rdi	# tmp1366,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L376	#,
.L375:
	.loc 1 1156 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L376:
	.loc 1 1160 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L103:
	.loc 1 1181 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.236
	cmpl	$3, %eax	#, ix86_cpu.236
	jne	.L380	#,
	.loc 1 1183 0
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L380:
	.loc 1 1185 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.237
	cmpl	$5, %eax	#, ix86_cpu.237
	je	.L381	#,
	.loc 1 1185 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.238
	cmpl	$2, %eax	#, ix86_cpu.238
	jne	.L382	#,
.L381:
	.loc 1 1187 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L382:
	.loc 1 1191 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L102:
	.loc 1 1209 0
	movq	-8(%rbp), %rax	# insn, tmp1367
	movq	%rax, %rdi	# tmp1367,
	call	extract_insn_cached	#
	.loc 1 1210 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.239
	cmpl	$3, %eax	#, ix86_cpu.239
	jne	.L383	#,
	.loc 1 1210 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	memory_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L384	#,
.L383:
	.loc 1 1210 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.240
	cmpl	$2, %eax	#, ix86_cpu.240
	jne	.L385	#,
	.loc 1 1210 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	memory_operand	#
	testl	%eax, %eax	# D.57109
	je	.L385	#,
.L384:
	.loc 1 1212 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L385:
	.loc 1 1216 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L101:
	.loc 1 1221 0
	movq	-8(%rbp), %rax	# insn, tmp1368
	movq	%rax, %rdi	# tmp1368,
	call	extract_constrain_insn_cached	#
	.loc 1 1222 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.241
	cmpl	$3, %eax	#, ix86_cpu.241
	jne	.L386	#,
	.loc 1 1222 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1369
	movq	%rax, %rdi	# tmp1369,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L387	#,
	movq	-8(%rbp), %rax	# insn, tmp1370
	movq	%rax, %rdi	# tmp1370,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L387	#,
.L386:
	.loc 1 1222 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.242
	cmpl	$2, %eax	#, ix86_cpu.242
	jne	.L388	#,
	.loc 1 1222 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.243
	testl	%eax, %eax	# which_alternative.243
	je	.L389	#,
	.loc 1 1222 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.244
	cmpl	$1, %eax	#, which_alternative.244
	jne	.L388	#,
.L389:
	.loc 1 1222 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1371
	movq	%rax, %rdi	# tmp1371,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L390	#,
	.loc 1 1222 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.245
	testl	%eax, %eax	# which_alternative.245
	je	.L391	#,
	.loc 1 1222 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.246
	cmpl	$1, %eax	#, which_alternative.246
	je	.L391	#,
.L390:
	movq	-8(%rbp), %rax	# insn, tmp1372
	movq	%rax, %rdi	# tmp1372,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L387	#,
.L391:
	.loc 1 1222 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1373
	movq	%rax, %rdi	# tmp1373,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L388	#,
	.loc 1 1222 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1374
	movq	%rax, %rdi	# tmp1374,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L388	#,
.L387:
	.loc 1 1224 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L388:
	.loc 1 1226 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.247
	cmpl	$2, %eax	#, ix86_cpu.247
	jne	.L392	#,
	.loc 1 1226 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.248
	testl	%eax, %eax	# which_alternative.248
	je	.L393	#,
	.loc 1 1226 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.249
	cmpl	$1, %eax	#, which_alternative.249
	jne	.L392	#,
.L393:
	.loc 1 1226 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1375
	movq	%rax, %rdi	# tmp1375,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L394	#,
	.loc 1 1226 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.250
	testl	%eax, %eax	# which_alternative.250
	je	.L395	#,
	.loc 1 1226 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.251
	cmpl	$1, %eax	#, which_alternative.251
	je	.L395	#,
.L394:
	movq	-8(%rbp), %rax	# insn, tmp1376
	movq	%rax, %rdi	# tmp1376,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L396	#,
	movq	-8(%rbp), %rax	# insn, tmp1377
	movq	%rax, %rdi	# tmp1377,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L396	#,
.L395:
	.loc 1 1226 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1378
	movq	%rax, %rdi	# tmp1378,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L392	#,
	.loc 1 1226 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1379
	movq	%rax, %rdi	# tmp1379,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L396	#,
	movq	-8(%rbp), %rax	# insn, tmp1380
	movq	%rax, %rdi	# tmp1380,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L392	#,
.L396:
	.loc 1 1228 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L392:
	.loc 1 1232 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L100:
	.loc 1 1236 0
	movq	-8(%rbp), %rax	# insn, tmp1381
	movq	%rax, %rdi	# tmp1381,
	call	extract_constrain_insn_cached	#
	.loc 1 1237 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.252
	cmpl	$3, %eax	#, ix86_cpu.252
	jne	.L397	#,
	.loc 1 1237 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1382
	movq	%rax, %rdi	# tmp1382,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L398	#,
	movq	-8(%rbp), %rax	# insn, tmp1383
	movq	%rax, %rdi	# tmp1383,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L398	#,
.L397:
	.loc 1 1237 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.253
	cmpl	$2, %eax	#, ix86_cpu.253
	jne	.L399	#,
	.loc 1 1237 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.254
	testl	%eax, %eax	# which_alternative.254
	je	.L400	#,
	.loc 1 1237 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.255
	cmpl	$1, %eax	#, which_alternative.255
	je	.L400	#,
	.loc 1 1237 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.256
	cmpl	$2, %eax	#, which_alternative.256
	jne	.L399	#,
.L400:
	movq	-8(%rbp), %rax	# insn, tmp1384
	movq	%rax, %rdi	# tmp1384,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L401	#,
	.loc 1 1237 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.257
	testl	%eax, %eax	# which_alternative.257
	je	.L402	#,
	.loc 1 1237 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.258
	cmpl	$1, %eax	#, which_alternative.258
	je	.L402	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.259
	cmpl	$2, %eax	#, which_alternative.259
	je	.L402	#,
.L401:
	movq	-8(%rbp), %rax	# insn, tmp1385
	movq	%rax, %rdi	# tmp1385,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L398	#,
.L402:
	.loc 1 1237 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1386
	movq	%rax, %rdi	# tmp1386,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L399	#,
	.loc 1 1237 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1387
	movq	%rax, %rdi	# tmp1387,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L399	#,
.L398:
	.loc 1 1239 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L399:
	.loc 1 1241 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.260
	cmpl	$2, %eax	#, ix86_cpu.260
	jne	.L403	#,
	.loc 1 1241 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.261
	testl	%eax, %eax	# which_alternative.261
	je	.L404	#,
	.loc 1 1241 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.262
	cmpl	$1, %eax	#, which_alternative.262
	je	.L404	#,
	.loc 1 1241 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.263
	cmpl	$2, %eax	#, which_alternative.263
	jne	.L403	#,
.L404:
	movq	-8(%rbp), %rax	# insn, tmp1388
	movq	%rax, %rdi	# tmp1388,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L405	#,
	.loc 1 1241 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.264
	testl	%eax, %eax	# which_alternative.264
	je	.L406	#,
	.loc 1 1241 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.265
	cmpl	$1, %eax	#, which_alternative.265
	je	.L406	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.266
	cmpl	$2, %eax	#, which_alternative.266
	je	.L406	#,
.L405:
	movq	-8(%rbp), %rax	# insn, tmp1389
	movq	%rax, %rdi	# tmp1389,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L407	#,
	movq	-8(%rbp), %rax	# insn, tmp1390
	movq	%rax, %rdi	# tmp1390,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L407	#,
.L406:
	.loc 1 1241 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1391
	movq	%rax, %rdi	# tmp1391,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L403	#,
	.loc 1 1241 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1392
	movq	%rax, %rdi	# tmp1392,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L407	#,
	movq	-8(%rbp), %rax	# insn, tmp1393
	movq	%rax, %rdi	# tmp1393,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L403	#,
.L407:
	.loc 1 1243 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L403:
	.loc 1 1247 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L99:
	.loc 1 1257 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.267
	cmpl	$2, %eax	#, ix86_cpu.267
	jne	.L408	#,
	.loc 1 1259 0
	movl	$46, %eax	#, D.57109
	jmp	.L135	#
.L408:
	.loc 1 1261 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.268
	cmpl	$5, %eax	#, ix86_cpu.268
	jne	.L409	#,
	.loc 1 1263 0
	movl	$42, %eax	#, D.57109
	jmp	.L135	#
.L409:
	.loc 1 1265 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.269
	cmpl	$4, %eax	#, ix86_cpu.269
	je	.L410	#,
	.loc 1 1265 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.270
	cmpl	$3, %eax	#, ix86_cpu.270
	jne	.L411	#,
.L410:
	.loc 1 1267 0 is_stmt 1
	movl	$17, %eax	#, D.57109
	jmp	.L135	#
.L411:
	.loc 1 1271 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L98:
	.loc 1 1291 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.271
	cmpl	$2, %eax	#, ix86_cpu.271
	jne	.L412	#,
	.loc 1 1293 0
	movl	$11, %eax	#, D.57109
	jmp	.L135	#
.L412:
	.loc 1 1295 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.272
	cmpl	$5, %eax	#, ix86_cpu.272
	jne	.L413	#,
	.loc 1 1297 0
	movl	$5, %eax	#, D.57109
	jmp	.L135	#
.L413:
	.loc 1 1299 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.273
	cmpl	$3, %eax	#, ix86_cpu.273
	jne	.L414	#,
	.loc 1 1301 0
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L414:
	.loc 1 1303 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.274
	cmpl	$4, %eax	#, ix86_cpu.274
	jne	.L415	#,
	.loc 1 1305 0
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L415:
	.loc 1 1309 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L97:
	.loc 1 1318 0
	movq	-8(%rbp), %rax	# insn, tmp1394
	movq	%rax, %rdi	# tmp1394,
	call	extract_insn_cached	#
	.loc 1 1319 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.275
	cmpl	$3, %eax	#, ix86_cpu.275
	jne	.L416	#,
	.loc 1 1319 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1395
	movq	%rax, %rdi	# tmp1395,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L417	#,
	movq	-8(%rbp), %rax	# insn, tmp1396
	movq	%rax, %rdi	# tmp1396,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L417	#,
.L416:
	.loc 1 1319 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.276
	cmpl	$2, %eax	#, ix86_cpu.276
	jne	.L418	#,
	.loc 1 1319 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L418	#,
	movq	-8(%rbp), %rax	# insn, tmp1397
	movq	%rax, %rdi	# tmp1397,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L419	#,
	movq	-8(%rbp), %rax	# insn, tmp1398
	movq	%rax, %rdi	# tmp1398,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L417	#,
.L419:
	.loc 1 1319 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1399
	movq	%rax, %rdi	# tmp1399,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L418	#,
	.loc 1 1319 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1400
	movq	%rax, %rdi	# tmp1400,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L418	#,
.L417:
	.loc 1 1321 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L418:
	.loc 1 1323 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.277
	cmpl	$2, %eax	#, ix86_cpu.277
	jne	.L420	#,
	.loc 1 1323 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L420	#,
	movq	-8(%rbp), %rax	# insn, tmp1401
	movq	%rax, %rdi	# tmp1401,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L421	#,
	movq	-8(%rbp), %rax	# insn, tmp1402
	movq	%rax, %rdi	# tmp1402,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L422	#,
	movq	-8(%rbp), %rax	# insn, tmp1403
	movq	%rax, %rdi	# tmp1403,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L422	#,
.L421:
	.loc 1 1323 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1404
	movq	%rax, %rdi	# tmp1404,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L420	#,
	.loc 1 1323 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1405
	movq	%rax, %rdi	# tmp1405,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L422	#,
	movq	-8(%rbp), %rax	# insn, tmp1406
	movq	%rax, %rdi	# tmp1406,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L420	#,
.L422:
	.loc 1 1325 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L420:
	.loc 1 1329 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L96:
	.loc 1 1333 0
	movq	-8(%rbp), %rax	# insn, tmp1407
	movq	%rax, %rdi	# tmp1407,
	call	extract_constrain_insn_cached	#
	.loc 1 1334 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.278
	cmpl	$3, %eax	#, ix86_cpu.278
	jne	.L423	#,
	.loc 1 1334 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1408
	movq	%rax, %rdi	# tmp1408,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L424	#,
	movq	-8(%rbp), %rax	# insn, tmp1409
	movq	%rax, %rdi	# tmp1409,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L424	#,
.L423:
	.loc 1 1334 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.279
	cmpl	$2, %eax	#, ix86_cpu.279
	jne	.L425	#,
	.loc 1 1334 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.280
	cmpl	$3, %eax	#, which_alternative.280
	je	.L425	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L425	#,
	movq	-8(%rbp), %rax	# insn, tmp1410
	movq	%rax, %rdi	# tmp1410,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L426	#,
	movq	-8(%rbp), %rax	# insn, tmp1411
	movq	%rax, %rdi	# tmp1411,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L424	#,
.L426:
	.loc 1 1334 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1412
	movq	%rax, %rdi	# tmp1412,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L425	#,
	.loc 1 1334 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1413
	movq	%rax, %rdi	# tmp1413,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L425	#,
.L424:
	.loc 1 1336 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L425:
	.loc 1 1338 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.281
	cmpl	$4, %eax	#, ix86_cpu.281
	jne	.L427	#,
	.loc 1 1338 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.282
	cmpl	$3, %eax	#, which_alternative.282
	je	.L428	#,
.L427:
	.loc 1 1338 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.283
	cmpl	$2, %eax	#, ix86_cpu.283
	jne	.L429	#,
	.loc 1 1338 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.284
	cmpl	$3, %eax	#, which_alternative.284
	je	.L429	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L429	#,
	movq	-8(%rbp), %rax	# insn, tmp1414
	movq	%rax, %rdi	# tmp1414,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L430	#,
	movq	-8(%rbp), %rax	# insn, tmp1415
	movq	%rax, %rdi	# tmp1415,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L428	#,
	movq	-8(%rbp), %rax	# insn, tmp1416
	movq	%rax, %rdi	# tmp1416,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L428	#,
.L430:
	.loc 1 1338 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1417
	movq	%rax, %rdi	# tmp1417,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L429	#,
	.loc 1 1338 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1418
	movq	%rax, %rdi	# tmp1418,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L428	#,
	movq	-8(%rbp), %rax	# insn, tmp1419
	movq	%rax, %rdi	# tmp1419,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L429	#,
.L428:
	.loc 1 1340 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L429:
	.loc 1 1344 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L95:
	.loc 1 1353 0
	movq	-8(%rbp), %rax	# insn, tmp1420
	movq	%rax, %rdi	# tmp1420,
	call	extract_insn_cached	#
	.loc 1 1354 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.285
	cmpl	$3, %eax	#, ix86_cpu.285
	jne	.L431	#,
	.loc 1 1354 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1421
	movq	%rax, %rdi	# tmp1421,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L432	#,
	movq	-8(%rbp), %rax	# insn, tmp1422
	movq	%rax, %rdi	# tmp1422,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L432	#,
.L431:
	.loc 1 1354 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.286
	cmpl	$2, %eax	#, ix86_cpu.286
	jne	.L433	#,
	.loc 1 1354 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L433	#,
	movq	-8(%rbp), %rax	# insn, tmp1423
	movq	%rax, %rdi	# tmp1423,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L434	#,
	movq	-8(%rbp), %rax	# insn, tmp1424
	movq	%rax, %rdi	# tmp1424,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L432	#,
.L434:
	.loc 1 1354 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1425
	movq	%rax, %rdi	# tmp1425,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L433	#,
	.loc 1 1354 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1426
	movq	%rax, %rdi	# tmp1426,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L433	#,
.L432:
	.loc 1 1356 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L433:
	.loc 1 1358 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.287
	cmpl	$2, %eax	#, ix86_cpu.287
	jne	.L435	#,
	.loc 1 1358 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L435	#,
	movq	-8(%rbp), %rax	# insn, tmp1427
	movq	%rax, %rdi	# tmp1427,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L436	#,
	movq	-8(%rbp), %rax	# insn, tmp1428
	movq	%rax, %rdi	# tmp1428,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L437	#,
	movq	-8(%rbp), %rax	# insn, tmp1429
	movq	%rax, %rdi	# tmp1429,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L437	#,
.L436:
	.loc 1 1358 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1430
	movq	%rax, %rdi	# tmp1430,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L435	#,
	.loc 1 1358 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1431
	movq	%rax, %rdi	# tmp1431,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L437	#,
	movq	-8(%rbp), %rax	# insn, tmp1432
	movq	%rax, %rdi	# tmp1432,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L435	#,
.L437:
	.loc 1 1360 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L435:
	.loc 1 1364 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L94:
	.loc 1 1368 0
	movq	-8(%rbp), %rax	# insn, tmp1433
	movq	%rax, %rdi	# tmp1433,
	call	extract_constrain_insn_cached	#
	.loc 1 1369 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.288
	cmpl	$3, %eax	#, ix86_cpu.288
	jne	.L438	#,
	.loc 1 1369 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1434
	movq	%rax, %rdi	# tmp1434,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L439	#,
	movq	-8(%rbp), %rax	# insn, tmp1435
	movq	%rax, %rdi	# tmp1435,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L439	#,
.L438:
	.loc 1 1369 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.289
	cmpl	$2, %eax	#, ix86_cpu.289
	jne	.L440	#,
	.loc 1 1369 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.290
	cmpl	$2, %eax	#, which_alternative.290
	je	.L440	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L440	#,
	movq	-8(%rbp), %rax	# insn, tmp1436
	movq	%rax, %rdi	# tmp1436,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L441	#,
	movq	-8(%rbp), %rax	# insn, tmp1437
	movq	%rax, %rdi	# tmp1437,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L439	#,
.L441:
	.loc 1 1369 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1438
	movq	%rax, %rdi	# tmp1438,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L442	#,
	.loc 1 1369 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1439
	movq	%rax, %rdi	# tmp1439,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L439	#,
.L442:
	.loc 1 1369 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1440
	movq	%rax, %rdi	# tmp1440,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L440	#,
	.loc 1 1369 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1441
	movq	%rax, %rdi	# tmp1441,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L440	#,
.L439:
	.loc 1 1371 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L440:
	.loc 1 1373 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.291
	cmpl	$4, %eax	#, ix86_cpu.291
	jne	.L443	#,
	.loc 1 1373 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.292
	cmpl	$2, %eax	#, which_alternative.292
	je	.L444	#,
.L443:
	.loc 1 1373 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.293
	cmpl	$2, %eax	#, ix86_cpu.293
	jne	.L445	#,
	.loc 1 1373 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.294
	cmpl	$2, %eax	#, which_alternative.294
	je	.L445	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L445	#,
	movq	-8(%rbp), %rax	# insn, tmp1442
	movq	%rax, %rdi	# tmp1442,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57114
	jne	.L446	#,
	movq	-8(%rbp), %rax	# insn, tmp1443
	movq	%rax, %rdi	# tmp1443,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L444	#,
	movq	-8(%rbp), %rax	# insn, tmp1444
	movq	%rax, %rdi	# tmp1444,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L444	#,
.L446:
	.loc 1 1373 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1445
	movq	%rax, %rdi	# tmp1445,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L447	#,
	.loc 1 1373 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1446
	movq	%rax, %rdi	# tmp1446,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L444	#,
	movq	-8(%rbp), %rax	# insn, tmp1447
	movq	%rax, %rdi	# tmp1447,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L444	#,
.L447:
	.loc 1 1373 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1448
	movq	%rax, %rdi	# tmp1448,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L445	#,
	.loc 1 1373 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1449
	movq	%rax, %rdi	# tmp1449,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L444	#,
	movq	-8(%rbp), %rax	# insn, tmp1450
	movq	%rax, %rdi	# tmp1450,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L445	#,
.L444:
	.loc 1 1375 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L445:
	.loc 1 1379 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L93:
	.loc 1 1388 0
	movq	-8(%rbp), %rax	# insn, tmp1451
	movq	%rax, %rdi	# tmp1451,
	call	extract_insn_cached	#
	.loc 1 1389 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.295
	cmpl	$3, %eax	#, ix86_cpu.295
	jne	.L448	#,
	.loc 1 1389 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1452
	movq	%rax, %rdi	# tmp1452,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L449	#,
	movq	-8(%rbp), %rax	# insn, tmp1453
	movq	%rax, %rdi	# tmp1453,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L449	#,
.L448:
	.loc 1 1389 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.296
	cmpl	$2, %eax	#, ix86_cpu.296
	jne	.L450	#,
	.loc 1 1389 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L450	#,
	movq	-8(%rbp), %rax	# insn, tmp1454
	movq	%rax, %rdi	# tmp1454,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L451	#,
	movq	-8(%rbp), %rax	# insn, tmp1455
	movq	%rax, %rdi	# tmp1455,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L449	#,
.L451:
	.loc 1 1389 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1456
	movq	%rax, %rdi	# tmp1456,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L450	#,
	.loc 1 1389 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1457
	movq	%rax, %rdi	# tmp1457,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L450	#,
.L449:
	.loc 1 1391 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L450:
	.loc 1 1393 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.297
	cmpl	$2, %eax	#, ix86_cpu.297
	jne	.L452	#,
	.loc 1 1393 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L452	#,
	movq	-8(%rbp), %rax	# insn, tmp1458
	movq	%rax, %rdi	# tmp1458,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L453	#,
	movq	-8(%rbp), %rax	# insn, tmp1459
	movq	%rax, %rdi	# tmp1459,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L454	#,
	movq	-8(%rbp), %rax	# insn, tmp1460
	movq	%rax, %rdi	# tmp1460,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L454	#,
.L453:
	.loc 1 1393 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1461
	movq	%rax, %rdi	# tmp1461,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L452	#,
	.loc 1 1393 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1462
	movq	%rax, %rdi	# tmp1462,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L454	#,
	movq	-8(%rbp), %rax	# insn, tmp1463
	movq	%rax, %rdi	# tmp1463,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L452	#,
.L454:
	.loc 1 1395 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L452:
	.loc 1 1399 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L92:
	.loc 1 1403 0
	movq	-8(%rbp), %rax	# insn, tmp1464
	movq	%rax, %rdi	# tmp1464,
	call	extract_constrain_insn_cached	#
	.loc 1 1404 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.298
	cmpl	$3, %eax	#, ix86_cpu.298
	jne	.L455	#,
	.loc 1 1404 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1465
	movq	%rax, %rdi	# tmp1465,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L456	#,
	movq	-8(%rbp), %rax	# insn, tmp1466
	movq	%rax, %rdi	# tmp1466,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L456	#,
.L455:
	.loc 1 1404 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.299
	cmpl	$2, %eax	#, ix86_cpu.299
	jne	.L457	#,
	.loc 1 1404 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1467
	movq	%rax, %rdi	# tmp1467,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	jne	.L457	#,
	movq	-8(%rbp), %rax	# insn, tmp1468
	movq	%rax, %rdi	# tmp1468,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L458	#,
	movq	-8(%rbp), %rax	# insn, tmp1469
	movq	%rax, %rdi	# tmp1469,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L456	#,
.L458:
	.loc 1 1404 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1470
	movq	%rax, %rdi	# tmp1470,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L457	#,
	.loc 1 1404 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1471
	movq	%rax, %rdi	# tmp1471,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L457	#,
.L456:
	.loc 1 1406 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L457:
	.loc 1 1408 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.300
	cmpl	$4, %eax	#, ix86_cpu.300
	jne	.L459	#,
	.loc 1 1408 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.301
	testl	%eax, %eax	# which_alternative.301
	jne	.L460	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L460	#,
.L459:
	.loc 1 1408 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.302
	cmpl	$2, %eax	#, ix86_cpu.302
	jne	.L461	#,
	.loc 1 1408 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1472
	movq	%rax, %rdi	# tmp1472,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	jne	.L461	#,
	movq	-8(%rbp), %rax	# insn, tmp1473
	movq	%rax, %rdi	# tmp1473,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L462	#,
	movq	-8(%rbp), %rax	# insn, tmp1474
	movq	%rax, %rdi	# tmp1474,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L460	#,
	movq	-8(%rbp), %rax	# insn, tmp1475
	movq	%rax, %rdi	# tmp1475,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L460	#,
.L462:
	.loc 1 1408 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1476
	movq	%rax, %rdi	# tmp1476,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L461	#,
	.loc 1 1408 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1477
	movq	%rax, %rdi	# tmp1477,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L460	#,
	movq	-8(%rbp), %rax	# insn, tmp1478
	movq	%rax, %rdi	# tmp1478,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L461	#,
.L460:
	.loc 1 1410 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L461:
	.loc 1 1414 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L91:
	.loc 1 1418 0
	movq	-8(%rbp), %rax	# insn, tmp1479
	movq	%rax, %rdi	# tmp1479,
	call	extract_constrain_insn_cached	#
	.loc 1 1419 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.303
	cmpl	$3, %eax	#, ix86_cpu.303
	jne	.L463	#,
	.loc 1 1419 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1480
	movq	%rax, %rdi	# tmp1480,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L464	#,
	movq	-8(%rbp), %rax	# insn, tmp1481
	movq	%rax, %rdi	# tmp1481,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L464	#,
.L463:
	.loc 1 1419 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.304
	cmpl	$2, %eax	#, ix86_cpu.304
	jne	.L465	#,
	.loc 1 1419 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1482
	movq	%rax, %rdi	# tmp1482,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	jne	.L465	#,
	movq	-8(%rbp), %rax	# insn, tmp1483
	movq	%rax, %rdi	# tmp1483,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L466	#,
	movq	-8(%rbp), %rax	# insn, tmp1484
	movq	%rax, %rdi	# tmp1484,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L464	#,
.L466:
	.loc 1 1419 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1485
	movq	%rax, %rdi	# tmp1485,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L465	#,
	.loc 1 1419 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1486
	movq	%rax, %rdi	# tmp1486,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L465	#,
.L464:
	.loc 1 1421 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L465:
	.loc 1 1423 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.305
	cmpl	$4, %eax	#, ix86_cpu.305
	jne	.L467	#,
	.loc 1 1423 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.306
	cmpl	$2, %eax	#, which_alternative.306
	je	.L468	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L468	#,
.L467:
	.loc 1 1423 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.307
	cmpl	$2, %eax	#, ix86_cpu.307
	jne	.L469	#,
	.loc 1 1423 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1487
	movq	%rax, %rdi	# tmp1487,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	jne	.L469	#,
	movq	-8(%rbp), %rax	# insn, tmp1488
	movq	%rax, %rdi	# tmp1488,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L470	#,
	movq	-8(%rbp), %rax	# insn, tmp1489
	movq	%rax, %rdi	# tmp1489,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L468	#,
	movq	-8(%rbp), %rax	# insn, tmp1490
	movq	%rax, %rdi	# tmp1490,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L468	#,
.L470:
	.loc 1 1423 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1491
	movq	%rax, %rdi	# tmp1491,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L469	#,
	.loc 1 1423 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1492
	movq	%rax, %rdi	# tmp1492,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L468	#,
	movq	-8(%rbp), %rax	# insn, tmp1493
	movq	%rax, %rdi	# tmp1493,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L469	#,
.L468:
	.loc 1 1425 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L469:
	.loc 1 1429 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L90:
	.loc 1 1436 0
	movq	-8(%rbp), %rax	# insn, tmp1494
	movq	%rax, %rdi	# tmp1494,
	call	extract_insn_cached	#
	.loc 1 1437 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.308
	cmpl	$3, %eax	#, ix86_cpu.308
	jne	.L471	#,
	.loc 1 1437 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1495
	movq	%rax, %rdi	# tmp1495,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L472	#,
	movq	-8(%rbp), %rax	# insn, tmp1496
	movq	%rax, %rdi	# tmp1496,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L472	#,
.L471:
	.loc 1 1437 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.309
	cmpl	$2, %eax	#, ix86_cpu.309
	jne	.L473	#,
	.loc 1 1437 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L473	#,
	movq	-8(%rbp), %rax	# insn, tmp1497
	movq	%rax, %rdi	# tmp1497,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L474	#,
	movq	-8(%rbp), %rax	# insn, tmp1498
	movq	%rax, %rdi	# tmp1498,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L472	#,
.L474:
	.loc 1 1437 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1499
	movq	%rax, %rdi	# tmp1499,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L473	#,
	.loc 1 1437 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1500
	movq	%rax, %rdi	# tmp1500,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L473	#,
.L472:
	.loc 1 1439 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L473:
	.loc 1 1441 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.310
	cmpl	$2, %eax	#, ix86_cpu.310
	jne	.L475	#,
	.loc 1 1441 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L475	#,
	movq	-8(%rbp), %rax	# insn, tmp1501
	movq	%rax, %rdi	# tmp1501,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L476	#,
	movq	-8(%rbp), %rax	# insn, tmp1502
	movq	%rax, %rdi	# tmp1502,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L477	#,
	movq	-8(%rbp), %rax	# insn, tmp1503
	movq	%rax, %rdi	# tmp1503,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L477	#,
.L476:
	.loc 1 1441 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1504
	movq	%rax, %rdi	# tmp1504,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L475	#,
	.loc 1 1441 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1505
	movq	%rax, %rdi	# tmp1505,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L477	#,
	movq	-8(%rbp), %rax	# insn, tmp1506
	movq	%rax, %rdi	# tmp1506,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L475	#,
.L477:
	.loc 1 1443 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L475:
	.loc 1 1447 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L89:
	.loc 1 1451 0
	movq	-8(%rbp), %rax	# insn, tmp1507
	movq	%rax, %rdi	# tmp1507,
	call	extract_constrain_insn_cached	#
	.loc 1 1452 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.311
	cmpl	$3, %eax	#, ix86_cpu.311
	jne	.L478	#,
	.loc 1 1452 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1508
	movq	%rax, %rdi	# tmp1508,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L479	#,
	movq	-8(%rbp), %rax	# insn, tmp1509
	movq	%rax, %rdi	# tmp1509,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L479	#,
.L478:
	.loc 1 1452 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.312
	cmpl	$2, %eax	#, ix86_cpu.312
	jne	.L480	#,
	.loc 1 1452 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1510
	movq	%rax, %rdi	# tmp1510,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	jne	.L480	#,
	movq	-8(%rbp), %rax	# insn, tmp1511
	movq	%rax, %rdi	# tmp1511,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L481	#,
	movq	-8(%rbp), %rax	# insn, tmp1512
	movq	%rax, %rdi	# tmp1512,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L479	#,
.L481:
	.loc 1 1452 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1513
	movq	%rax, %rdi	# tmp1513,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L480	#,
	.loc 1 1452 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1514
	movq	%rax, %rdi	# tmp1514,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L480	#,
.L479:
	.loc 1 1454 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L480:
	.loc 1 1456 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.313
	cmpl	$4, %eax	#, ix86_cpu.313
	jne	.L482	#,
	.loc 1 1456 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.314
	cmpl	$2, %eax	#, which_alternative.314
	je	.L483	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57110
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L483	#,
.L482:
	.loc 1 1456 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.315
	cmpl	$2, %eax	#, ix86_cpu.315
	jne	.L484	#,
	.loc 1 1456 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1515
	movq	%rax, %rdi	# tmp1515,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57113
	jne	.L484	#,
	movq	-8(%rbp), %rax	# insn, tmp1516
	movq	%rax, %rdi	# tmp1516,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	jne	.L485	#,
	movq	-8(%rbp), %rax	# insn, tmp1517
	movq	%rax, %rdi	# tmp1517,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L483	#,
	movq	-8(%rbp), %rax	# insn, tmp1518
	movq	%rax, %rdi	# tmp1518,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L483	#,
.L485:
	.loc 1 1456 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1519
	movq	%rax, %rdi	# tmp1519,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57114
	je	.L484	#,
	.loc 1 1456 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1520
	movq	%rax, %rdi	# tmp1520,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L483	#,
	movq	-8(%rbp), %rax	# insn, tmp1521
	movq	%rax, %rdi	# tmp1521,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L484	#,
.L483:
	.loc 1 1458 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L484:
	.loc 1 1462 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L88:
	.loc 1 1475 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.316
	cmpl	$4, %eax	#, ix86_cpu.316
	jne	.L486	#,
	.loc 1 1477 0
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L486:
	.loc 1 1481 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L87:
	.loc 1 1551 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.317
	cmpl	$3, %eax	#, ix86_cpu.317
	jne	.L487	#,
	.loc 1 1551 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1522
	movq	%rax, %rdi	# tmp1522,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L488	#,
	movq	-8(%rbp), %rax	# insn, tmp1523
	movq	%rax, %rdi	# tmp1523,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L488	#,
.L487:
	.loc 1 1551 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.318
	cmpl	$2, %eax	#, ix86_cpu.318
	jne	.L489	#,
	.loc 1 1551 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1524
	movq	%rax, %rdi	# tmp1524,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L490	#,
	movq	-8(%rbp), %rax	# insn, tmp1525
	movq	%rax, %rdi	# tmp1525,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L488	#,
.L490:
	.loc 1 1551 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1526
	movq	%rax, %rdi	# tmp1526,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L489	#,
	.loc 1 1551 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1527
	movq	%rax, %rdi	# tmp1527,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L489	#,
.L488:
	.loc 1 1553 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L489:
	.loc 1 1555 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.319
	cmpl	$2, %eax	#, ix86_cpu.319
	jne	.L491	#,
	.loc 1 1555 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1528
	movq	%rax, %rdi	# tmp1528,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	jne	.L492	#,
	movq	-8(%rbp), %rax	# insn, tmp1529
	movq	%rax, %rdi	# tmp1529,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L493	#,
	movq	-8(%rbp), %rax	# insn, tmp1530
	movq	%rax, %rdi	# tmp1530,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	je	.L493	#,
.L492:
	.loc 1 1555 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1531
	movq	%rax, %rdi	# tmp1531,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57112
	je	.L491	#,
	.loc 1 1555 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1532
	movq	%rax, %rdi	# tmp1532,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L493	#,
	movq	-8(%rbp), %rax	# insn, tmp1533
	movq	%rax, %rdi	# tmp1533,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L491	#,
.L493:
	.loc 1 1557 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L491:
	.loc 1 1561 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L86:
	.loc 1 1572 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.320
	cmpl	$3, %eax	#, ix86_cpu.320
	jne	.L494	#,
	.loc 1 1572 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1534
	movq	%rax, %rdi	# tmp1534,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L495	#,
	movq	-8(%rbp), %rax	# insn, tmp1535
	movq	%rax, %rdi	# tmp1535,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L495	#,
.L494:
	.loc 1 1572 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.321
	cmpl	$2, %eax	#, ix86_cpu.321
	jne	.L496	#,
	.loc 1 1572 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1536
	movq	%rax, %rdi	# tmp1536,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L496	#,
.L495:
	.loc 1 1574 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L496:
	.loc 1 1576 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.322
	cmpl	$2, %eax	#, ix86_cpu.322
	jne	.L497	#,
	.loc 1 1576 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1537
	movq	%rax, %rdi	# tmp1537,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L498	#,
	movq	-8(%rbp), %rax	# insn, tmp1538
	movq	%rax, %rdi	# tmp1538,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L497	#,
.L498:
	.loc 1 1578 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L497:
	.loc 1 1582 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L85:
	.loc 1 1591 0
	movq	-8(%rbp), %rax	# insn, tmp1539
	movq	%rax, %rdi	# tmp1539,
	call	extract_constrain_insn_cached	#
	.loc 1 1592 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.323
	cmpl	$5, %eax	#, ix86_cpu.323
	jne	.L499	#,
	.loc 1 1592 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.324
	testl	%eax, %eax	# which_alternative.324
	jne	.L499	#,
	movq	-8(%rbp), %rax	# insn, tmp1540
	movq	%rax, %rdi	# tmp1540,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	jne	.L499	#,
	.loc 1 1594 0 is_stmt 1
	movl	$10, %eax	#, D.57109
	jmp	.L135	#
.L499:
	.loc 1 1596 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.325
	cmpl	$3, %eax	#, ix86_cpu.325
	jne	.L500	#,
	.loc 1 1596 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1541
	movq	%rax, %rdi	# tmp1541,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L501	#,
	movq	-8(%rbp), %rax	# insn, tmp1542
	movq	%rax, %rdi	# tmp1542,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L501	#,
.L500:
	.loc 1 1596 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.326
	cmpl	$2, %eax	#, ix86_cpu.326
	jne	.L502	#,
	.loc 1 1596 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.327
	testl	%eax, %eax	# which_alternative.327
	jne	.L502	#,
	movq	-8(%rbp), %rax	# insn, tmp1543
	movq	%rax, %rdi	# tmp1543,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L501	#,
	movq	-8(%rbp), %rax	# insn, tmp1544
	movq	%rax, %rdi	# tmp1544,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L502	#,
.L501:
	.loc 1 1598 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L502:
	.loc 1 1600 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.328
	cmpl	$5, %eax	#, ix86_cpu.328
	jne	.L503	#,
	.loc 1 1600 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.329
	testl	%eax, %eax	# which_alternative.329
	je	.L504	#,
.L503:
	.loc 1 1600 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.330
	cmpl	$4, %eax	#, ix86_cpu.330
	jne	.L505	#,
	.loc 1 1600 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.331
	testl	%eax, %eax	# which_alternative.331
	je	.L504	#,
.L505:
	.loc 1 1600 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.332
	cmpl	$2, %eax	#, ix86_cpu.332
	jne	.L506	#,
	.loc 1 1600 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.333
	testl	%eax, %eax	# which_alternative.333
	jne	.L506	#,
.L504:
	.loc 1 1602 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L506:
	.loc 1 1606 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L84:
	.loc 1 1618 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.334
	cmpl	$5, %eax	#, ix86_cpu.334
	jne	.L507	#,
	.loc 1 1620 0
	movl	$4, %eax	#, D.57109
	jmp	.L135	#
.L507:
	.loc 1 1622 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.335
	cmpl	$3, %eax	#, ix86_cpu.335
	je	.L508	#,
	.loc 1 1622 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.336
	cmpl	$2, %eax	#, ix86_cpu.336
	jne	.L509	#,
.L508:
	.loc 1 1624 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L509:
	.loc 1 1626 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.337
	cmpl	$4, %eax	#, ix86_cpu.337
	jne	.L510	#,
	.loc 1 1628 0
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L510:
	.loc 1 1632 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L83:
	.loc 1 1640 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.338
	cmpl	$3, %eax	#, ix86_cpu.338
	jne	.L511	#,
	.loc 1 1640 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1545
	movq	%rax, %rdi	# tmp1545,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L512	#,
	movq	-8(%rbp), %rax	# insn, tmp1546
	movq	%rax, %rdi	# tmp1546,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L511	#,
.L512:
	.loc 1 1642 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L511:
	.loc 1 1644 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.339
	cmpl	$5, %eax	#, ix86_cpu.339
	je	.L513	#,
	.loc 1 1644 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.340
	cmpl	$4, %eax	#, ix86_cpu.340
	je	.L513	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.341
	cmpl	$2, %eax	#, ix86_cpu.341
	jne	.L514	#,
.L513:
	.loc 1 1646 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L514:
	.loc 1 1650 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L82:
	.loc 1 1654 0
	movq	-8(%rbp), %rax	# insn, tmp1547
	movq	%rax, %rdi	# tmp1547,
	call	extract_constrain_insn_cached	#
	.loc 1 1655 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.342
	cmpl	$3, %eax	#, ix86_cpu.342
	jne	.L515	#,
	.loc 1 1655 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1548
	movq	%rax, %rdi	# tmp1548,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L516	#,
	movq	-8(%rbp), %rax	# insn, tmp1549
	movq	%rax, %rdi	# tmp1549,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L515	#,
.L516:
	.loc 1 1657 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L515:
	.loc 1 1659 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.343
	cmpl	$5, %eax	#, ix86_cpu.343
	jne	.L517	#,
	.loc 1 1659 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.344
	testl	%eax, %eax	# which_alternative.344
	jne	.L518	#,
.L517:
	.loc 1 1659 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.345
	cmpl	$1, %eax	#, which_alternative.345
	jne	.L519	#,
	.loc 1 1659 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.346
	cmpl	$4, %eax	#, ix86_cpu.346
	je	.L518	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.347
	cmpl	$2, %eax	#, ix86_cpu.347
	jne	.L519	#,
.L518:
	.loc 1 1661 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L519:
	.loc 1 1665 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L81:
	.loc 1 1682 0
	movq	-8(%rbp), %rax	# insn, tmp1550
	movq	%rax, %rdi	# tmp1550,
	call	extract_constrain_insn_cached	#
	.loc 1 1683 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.348
	cmpl	$3, %eax	#, ix86_cpu.348
	jne	.L520	#,
	.loc 1 1683 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1551
	movq	%rax, %rdi	# tmp1551,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L521	#,
	movq	-8(%rbp), %rax	# insn, tmp1552
	movq	%rax, %rdi	# tmp1552,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L520	#,
.L521:
	.loc 1 1685 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L520:
	.loc 1 1687 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.349
	cmpl	$5, %eax	#, ix86_cpu.349
	jne	.L522	#,
	.loc 1 1687 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.350
	testl	%eax, %eax	# which_alternative.350
	je	.L523	#,
.L522:
	.loc 1 1687 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.351
	cmpl	$4, %eax	#, ix86_cpu.351
	jne	.L524	#,
	.loc 1 1687 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.352
	testl	%eax, %eax	# which_alternative.352
	je	.L523	#,
.L524:
	.loc 1 1687 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.353
	cmpl	$2, %eax	#, ix86_cpu.353
	jne	.L525	#,
	.loc 1 1687 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.354
	testl	%eax, %eax	# which_alternative.354
	jne	.L525	#,
.L523:
	.loc 1 1689 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L525:
	.loc 1 1693 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L80:
	.loc 1 1700 0
	movq	-8(%rbp), %rax	# insn, tmp1553
	movq	%rax, %rdi	# tmp1553,
	call	extract_constrain_insn_cached	#
	.loc 1 1701 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.355
	cmpl	$5, %eax	#, ix86_cpu.355
	jne	.L526	#,
	.loc 1 1701 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.356
	cmpl	$1, %eax	#, which_alternative.356
	jne	.L526	#,
	movq	-8(%rbp), %rax	# insn, tmp1554
	movq	%rax, %rdi	# tmp1554,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	jne	.L526	#,
	.loc 1 1703 0 is_stmt 1
	movl	$10, %eax	#, D.57109
	jmp	.L135	#
.L526:
	.loc 1 1705 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.357
	cmpl	$3, %eax	#, ix86_cpu.357
	jne	.L527	#,
	.loc 1 1705 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1555
	movq	%rax, %rdi	# tmp1555,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L528	#,
	movq	-8(%rbp), %rax	# insn, tmp1556
	movq	%rax, %rdi	# tmp1556,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L528	#,
.L527:
	.loc 1 1705 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.358
	cmpl	$2, %eax	#, ix86_cpu.358
	jne	.L529	#,
	.loc 1 1705 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.359
	cmpl	$1, %eax	#, which_alternative.359
	jne	.L529	#,
	movq	-8(%rbp), %rax	# insn, tmp1557
	movq	%rax, %rdi	# tmp1557,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L528	#,
	movq	-8(%rbp), %rax	# insn, tmp1558
	movq	%rax, %rdi	# tmp1558,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L529	#,
.L528:
	.loc 1 1707 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L529:
	.loc 1 1709 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.360
	cmpl	$5, %eax	#, ix86_cpu.360
	je	.L530	#,
	.loc 1 1709 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.361
	cmpl	$4, %eax	#, ix86_cpu.361
	je	.L530	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.362
	cmpl	$2, %eax	#, ix86_cpu.362
	jne	.L531	#,
.L530:
	.loc 1 1711 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L531:
	.loc 1 1715 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L79:
	.loc 1 1719 0
	movq	-8(%rbp), %rax	# insn, tmp1559
	movq	%rax, %rdi	# tmp1559,
	call	extract_constrain_insn_cached	#
	.loc 1 1720 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.363
	cmpl	$5, %eax	#, ix86_cpu.363
	jne	.L532	#,
	.loc 1 1720 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.364
	testl	%eax, %eax	# which_alternative.364
	je	.L533	#,
	.loc 1 1720 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.365
	cmpl	$1, %eax	#, which_alternative.365
	jne	.L532	#,
.L533:
	.loc 1 1720 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1560
	movq	%rax, %rdi	# tmp1560,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	jne	.L532	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.366
	cmpl	$1, %eax	#, which_alternative.366
	jne	.L532	#,
	.loc 1 1722 0 is_stmt 1
	movl	$10, %eax	#, D.57109
	jmp	.L135	#
.L532:
	.loc 1 1724 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.367
	cmpl	$3, %eax	#, ix86_cpu.367
	jne	.L534	#,
	.loc 1 1724 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1561
	movq	%rax, %rdi	# tmp1561,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L535	#,
	movq	-8(%rbp), %rax	# insn, tmp1562
	movq	%rax, %rdi	# tmp1562,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L535	#,
.L534:
	.loc 1 1724 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.368
	cmpl	$2, %eax	#, ix86_cpu.368
	jne	.L536	#,
	.loc 1 1724 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.369
	testl	%eax, %eax	# which_alternative.369
	je	.L537	#,
	.loc 1 1724 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.370
	cmpl	$1, %eax	#, which_alternative.370
	jne	.L536	#,
.L537:
	.loc 1 1724 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1563
	movq	%rax, %rdi	# tmp1563,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L538	#,
	.loc 1 1724 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1564
	movq	%rax, %rdi	# tmp1564,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L536	#,
.L538:
	.loc 1 1724 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.371
	cmpl	$1, %eax	#, which_alternative.371
	jne	.L536	#,
.L535:
	.loc 1 1726 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L536:
	.loc 1 1728 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.372
	cmpl	$5, %eax	#, ix86_cpu.372
	jne	.L539	#,
	.loc 1 1728 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.373
	testl	%eax, %eax	# which_alternative.373
	je	.L540	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.374
	cmpl	$1, %eax	#, which_alternative.374
	je	.L540	#,
.L539:
	.loc 1 1728 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.375
	cmpl	$4, %eax	#, ix86_cpu.375
	jne	.L541	#,
	.loc 1 1728 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.376
	testl	%eax, %eax	# which_alternative.376
	je	.L540	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.377
	cmpl	$1, %eax	#, which_alternative.377
	je	.L540	#,
.L541:
	.loc 1 1728 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.378
	cmpl	$2, %eax	#, ix86_cpu.378
	jne	.L542	#,
	.loc 1 1728 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.379
	testl	%eax, %eax	# which_alternative.379
	je	.L540	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.380
	cmpl	$1, %eax	#, which_alternative.380
	jne	.L542	#,
.L540:
	.loc 1 1730 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L542:
	.loc 1 1734 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L78:
	.loc 1 1739 0
	movq	-8(%rbp), %rax	# insn, tmp1565
	movq	%rax, %rdi	# tmp1565,
	call	extract_constrain_insn_cached	#
	.loc 1 1740 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.381
	cmpl	$3, %eax	#, ix86_cpu.381
	jne	.L543	#,
	.loc 1 1740 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1566
	movq	%rax, %rdi	# tmp1566,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L544	#,
	movq	-8(%rbp), %rax	# insn, tmp1567
	movq	%rax, %rdi	# tmp1567,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L544	#,
.L543:
	.loc 1 1740 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.382
	cmpl	$2, %eax	#, ix86_cpu.382
	jne	.L545	#,
	.loc 1 1740 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.383
	cmpl	$1, %eax	#, which_alternative.383
	jne	.L545	#,
	movq	-8(%rbp), %rax	# insn, tmp1568
	movq	%rax, %rdi	# tmp1568,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L545	#,
.L544:
	.loc 1 1742 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L545:
	.loc 1 1744 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.384
	cmpl	$2, %eax	#, ix86_cpu.384
	jne	.L546	#,
	.loc 1 1744 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.385
	cmpl	$1, %eax	#, which_alternative.385
	jne	.L546	#,
	movq	-8(%rbp), %rax	# insn, tmp1569
	movq	%rax, %rdi	# tmp1569,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L547	#,
	movq	-8(%rbp), %rax	# insn, tmp1570
	movq	%rax, %rdi	# tmp1570,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L546	#,
.L547:
	.loc 1 1746 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L546:
	.loc 1 1750 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L77:
	.loc 1 1757 0
	movq	-8(%rbp), %rax	# insn, tmp1571
	movq	%rax, %rdi	# tmp1571,
	call	extract_constrain_insn_cached	#
	.loc 1 1758 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.386
	cmpl	$5, %eax	#, ix86_cpu.386
	jne	.L548	#,
	.loc 1 1758 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.387
	testl	%eax, %eax	# which_alternative.387
	je	.L549	#,
	.loc 1 1758 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.388
	cmpl	$1, %eax	#, which_alternative.388
	je	.L549	#,
	.loc 1 1758 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.389
	cmpl	$2, %eax	#, which_alternative.389
	jne	.L548	#,
.L549:
	movq	-8(%rbp), %rax	# insn, tmp1572
	movq	%rax, %rdi	# tmp1572,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	jne	.L548	#,
	.loc 1 1760 0 is_stmt 1
	movl	$10, %eax	#, D.57109
	jmp	.L135	#
.L548:
	.loc 1 1762 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.390
	cmpl	$3, %eax	#, ix86_cpu.390
	jne	.L550	#,
	.loc 1 1762 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1573
	movq	%rax, %rdi	# tmp1573,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L551	#,
	movq	-8(%rbp), %rax	# insn, tmp1574
	movq	%rax, %rdi	# tmp1574,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	je	.L551	#,
.L550:
	.loc 1 1762 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.391
	cmpl	$2, %eax	#, ix86_cpu.391
	jne	.L552	#,
	.loc 1 1762 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.392
	testl	%eax, %eax	# which_alternative.392
	je	.L553	#,
	.loc 1 1762 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.393
	cmpl	$1, %eax	#, which_alternative.393
	je	.L553	#,
	.loc 1 1762 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.394
	cmpl	$2, %eax	#, which_alternative.394
	jne	.L552	#,
.L553:
	movq	-8(%rbp), %rax	# insn, tmp1575
	movq	%rax, %rdi	# tmp1575,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L551	#,
	movq	-8(%rbp), %rax	# insn, tmp1576
	movq	%rax, %rdi	# tmp1576,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L552	#,
.L551:
	.loc 1 1764 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L552:
	.loc 1 1766 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.395
	cmpl	$5, %eax	#, ix86_cpu.395
	jne	.L554	#,
	.loc 1 1766 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.396
	testl	%eax, %eax	# which_alternative.396
	je	.L555	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.397
	cmpl	$1, %eax	#, which_alternative.397
	je	.L555	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.398
	cmpl	$2, %eax	#, which_alternative.398
	je	.L555	#,
.L554:
	.loc 1 1766 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.399
	cmpl	$4, %eax	#, ix86_cpu.399
	jne	.L556	#,
	.loc 1 1766 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.400
	testl	%eax, %eax	# which_alternative.400
	je	.L555	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.401
	cmpl	$1, %eax	#, which_alternative.401
	je	.L555	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.402
	cmpl	$2, %eax	#, which_alternative.402
	je	.L555	#,
.L556:
	.loc 1 1766 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.403
	cmpl	$2, %eax	#, ix86_cpu.403
	jne	.L557	#,
	.loc 1 1766 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.404
	testl	%eax, %eax	# which_alternative.404
	je	.L555	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.405
	cmpl	$1, %eax	#, which_alternative.405
	je	.L555	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.406
	cmpl	$2, %eax	#, which_alternative.406
	jne	.L557	#,
.L555:
	.loc 1 1768 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L557:
	.loc 1 1772 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L76:
	.loc 1 1778 0
	movq	-8(%rbp), %rax	# insn, tmp1577
	movq	%rax, %rdi	# tmp1577,
	call	extract_constrain_insn_cached	#
	.loc 1 1779 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.407
	cmpl	$3, %eax	#, ix86_cpu.407
	jne	.L558	#,
	.loc 1 1779 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1578
	movq	%rax, %rdi	# tmp1578,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L559	#,
	movq	-8(%rbp), %rax	# insn, tmp1579
	movq	%rax, %rdi	# tmp1579,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L558	#,
.L559:
	.loc 1 1781 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L558:
	.loc 1 1783 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.408
	cmpl	$5, %eax	#, ix86_cpu.408
	jne	.L560	#,
	.loc 1 1783 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.409
	testl	%eax, %eax	# which_alternative.409
	je	.L561	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.410
	cmpl	$1, %eax	#, which_alternative.410
	je	.L561	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.411
	cmpl	$2, %eax	#, which_alternative.411
	je	.L561	#,
.L560:
	.loc 1 1783 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.412
	cmpl	$4, %eax	#, ix86_cpu.412
	jne	.L562	#,
	.loc 1 1783 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.413
	testl	%eax, %eax	# which_alternative.413
	je	.L561	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.414
	cmpl	$1, %eax	#, which_alternative.414
	je	.L561	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.415
	cmpl	$2, %eax	#, which_alternative.415
	je	.L561	#,
.L562:
	.loc 1 1783 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.416
	cmpl	$2, %eax	#, ix86_cpu.416
	jne	.L563	#,
	.loc 1 1783 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.417
	testl	%eax, %eax	# which_alternative.417
	je	.L561	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.418
	cmpl	$1, %eax	#, which_alternative.418
	je	.L561	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.419
	cmpl	$2, %eax	#, which_alternative.419
	jne	.L563	#,
.L561:
	.loc 1 1785 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L563:
	.loc 1 1789 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L75:
	.loc 1 1794 0
	movq	-8(%rbp), %rax	# insn, tmp1580
	movq	%rax, %rdi	# tmp1580,
	call	extract_constrain_insn_cached	#
	.loc 1 1795 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.420
	cmpl	$3, %eax	#, ix86_cpu.420
	jne	.L564	#,
	.loc 1 1795 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.421
	cmpl	$1, %eax	#, which_alternative.421
	jne	.L564	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	memory_operand	#
	testl	%eax, %eax	# D.57109
	je	.L564	#,
	.loc 1 1797 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L564:
	.loc 1 1801 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L74:
	.loc 1 1805 0
	movq	-8(%rbp), %rax	# insn, tmp1581
	movq	%rax, %rdi	# tmp1581,
	call	extract_constrain_insn_cached	#
	.loc 1 1806 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.422
	cmpl	$3, %eax	#, ix86_cpu.422
	jne	.L565	#,
	.loc 1 1806 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1582
	movq	%rax, %rdi	# tmp1582,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L566	#,
	movq	-8(%rbp), %rax	# insn, tmp1583
	movq	%rax, %rdi	# tmp1583,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L565	#,
.L566:
	.loc 1 1808 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L565:
	.loc 1 1810 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.423
	cmpl	$4, %eax	#, ix86_cpu.423
	jne	.L567	#,
	.loc 1 1810 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.424
	cmpl	$5, %eax	#, which_alternative.424
	je	.L567	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.425
	cmpl	$6, %eax	#, which_alternative.425
	je	.L567	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.426
	cmpl	$7, %eax	#, which_alternative.426
	je	.L567	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.427
	cmpl	$8, %eax	#, which_alternative.427
	je	.L567	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.428
	cmpl	$4, %eax	#, which_alternative.428
	je	.L567	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.429
	testl	%eax, %eax	# flag_pic.429
	je	.L567	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57110
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57109
	je	.L567	#,
	.loc 1 1812 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L567:
	.loc 1 1816 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L73:
	.loc 1 1820 0
	movq	-8(%rbp), %rax	# insn, tmp1584
	movq	%rax, %rdi	# tmp1584,
	call	extract_constrain_insn_cached	#
	.loc 1 1821 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.430
	cmpl	$3, %eax	#, ix86_cpu.430
	jne	.L568	#,
	.loc 1 1821 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.431
	testl	%eax, %eax	# which_alternative.431
	jne	.L568	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	memory_operand	#
	testl	%eax, %eax	# D.57109
	je	.L568	#,
	.loc 1 1823 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L568:
	.loc 1 1827 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L72:
	.loc 1 1831 0
	movq	-8(%rbp), %rax	# insn, tmp1585
	movq	%rax, %rdi	# tmp1585,
	call	extract_constrain_insn_cached	#
	.loc 1 1832 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.432
	cmpl	$3, %eax	#, ix86_cpu.432
	jne	.L569	#,
	.loc 1 1832 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1586
	movq	%rax, %rdi	# tmp1586,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L570	#,
	movq	-8(%rbp), %rax	# insn, tmp1587
	movq	%rax, %rdi	# tmp1587,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L569	#,
.L570:
	.loc 1 1834 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L569:
	.loc 1 1836 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.433
	cmpl	$4, %eax	#, ix86_cpu.433
	jne	.L571	#,
	.loc 1 1836 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.434
	cmpl	$4, %eax	#, which_alternative.434
	je	.L571	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.435
	cmpl	$5, %eax	#, which_alternative.435
	je	.L571	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.436
	cmpl	$6, %eax	#, which_alternative.436
	je	.L571	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.437
	cmpl	$7, %eax	#, which_alternative.437
	je	.L571	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.438
	cmpl	$8, %eax	#, which_alternative.438
	je	.L571	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.439
	cmpl	$9, %eax	#, which_alternative.439
	je	.L571	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.440
	testl	%eax, %eax	# flag_pic.440
	je	.L571	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57110
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57109
	je	.L571	#,
	.loc 1 1838 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L571:
	.loc 1 1842 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L71:
	.loc 1 1863 0
	movq	-8(%rbp), %rax	# insn, tmp1588
	movq	%rax, %rdi	# tmp1588,
	call	extract_insn_cached	#
	.loc 1 1864 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.441
	cmpl	$3, %eax	#, ix86_cpu.441
	jne	.L572	#,
	.loc 1 1864 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	memory_operand	#
	testl	%eax, %eax	# D.57109
	jne	.L573	#,
.L572:
	.loc 1 1864 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.442
	cmpl	$2, %eax	#, ix86_cpu.442
	jne	.L574	#,
	.loc 1 1864 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	memory_operand	#
	testl	%eax, %eax	# D.57109
	je	.L574	#,
.L573:
	.loc 1 1866 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L574:
	.loc 1 1868 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.443
	cmpl	$2, %eax	#, ix86_cpu.443
	jne	.L575	#,
	.loc 1 1868 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1589
	movq	%rax, %rdi	# tmp1589,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57111
	jne	.L575	#,
	.loc 1 1870 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L575:
	.loc 1 1874 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L70:
	.loc 1 1888 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.444
	cmpl	$3, %eax	#, ix86_cpu.444
	jne	.L576	#,
	.loc 1 1890 0
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L576:
	.loc 1 1894 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L69:
	.loc 1 1905 0
	movq	-8(%rbp), %rax	# insn, tmp1590
	movq	%rax, %rdi	# tmp1590,
	call	extract_insn_cached	#
	.loc 1 1906 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.445
	cmpl	$3, %eax	#, ix86_cpu.445
	jne	.L577	#,
	.loc 1 1906 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57110
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57110,
	call	memory_operand	#
	testl	%eax, %eax	# D.57109
	je	.L577	#,
	.loc 1 1908 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L577:
	.loc 1 1912 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L68:
	.loc 1 1917 0
	movq	-8(%rbp), %rax	# insn, tmp1591
	movq	%rax, %rdi	# tmp1591,
	call	extract_constrain_insn_cached	#
	.loc 1 1918 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.446
	cmpl	$5, %eax	#, ix86_cpu.446
	jne	.L578	#,
	.loc 1 1918 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.447
	testl	%eax, %eax	# which_alternative.447
	je	.L579	#,
.L578:
	.loc 1 1918 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.448
	cmpl	$3, %eax	#, ix86_cpu.448
	jne	.L580	#,
	.loc 1 1918 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1592
	movq	%rax, %rdi	# tmp1592,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L579	#,
	movq	-8(%rbp), %rax	# insn, tmp1593
	movq	%rax, %rdi	# tmp1593,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L580	#,
.L579:
	.loc 1 1920 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L580:
	.loc 1 1922 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.449
	cmpl	$4, %eax	#, ix86_cpu.449
	jne	.L581	#,
	.loc 1 1922 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.450
	testl	%eax, %eax	# which_alternative.450
	je	.L582	#,
.L581:
	.loc 1 1922 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.451
	cmpl	$2, %eax	#, ix86_cpu.451
	jne	.L583	#,
	.loc 1 1922 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.452
	testl	%eax, %eax	# which_alternative.452
	jne	.L583	#,
.L582:
	.loc 1 1924 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L583:
	.loc 1 1928 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L67:
	.loc 1 1939 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.453
	cmpl	$5, %eax	#, ix86_cpu.453
	je	.L584	#,
	.loc 1 1939 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.454
	cmpl	$3, %eax	#, ix86_cpu.454
	jne	.L585	#,
	movq	-8(%rbp), %rax	# insn, tmp1594
	movq	%rax, %rdi	# tmp1594,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L584	#,
	movq	-8(%rbp), %rax	# insn, tmp1595
	movq	%rax, %rdi	# tmp1595,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L585	#,
.L584:
	.loc 1 1941 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L585:
	.loc 1 1943 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.455
	cmpl	$4, %eax	#, ix86_cpu.455
	je	.L586	#,
	.loc 1 1943 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.456
	cmpl	$2, %eax	#, ix86_cpu.456
	jne	.L587	#,
.L586:
	.loc 1 1945 0 is_stmt 1
	movl	$2, %eax	#, D.57109
	jmp	.L135	#
.L587:
	.loc 1 1949 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L65:
	.loc 1 1978 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.457
	cmpl	$3, %eax	#, ix86_cpu.457
	jne	.L588	#,
	.loc 1 1978 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1596
	movq	%rax, %rdi	# tmp1596,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	jne	.L588	#,
	.loc 1 1980 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L588:
	.loc 1 1984 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L63:
	.loc 1 1988 0
	movq	-8(%rbp), %rax	# insn, tmp1597
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57110
	movzwl	(%rax), %eax	# _1297->code, D.57115
	cmpw	$40, %ax	#, D.57115
	je	.L66	#,
	.loc 1 1989 0
	movq	-8(%rbp), %rax	# insn, tmp1598
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57110
	movq	%rax, %rdi	# D.57110,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57109
	jns	.L66	#,
	.loc 1 1990 0
	movq	-8(%rbp), %rax	# insn, tmp1599
	movl	$__FUNCTION__.10687, %ecx	#,
	movl	$1990, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1599,
	call	_fatal_insn_not_found	#
.L66:
	.loc 1 2110 0
	movl	$1, %eax	#, D.57109
	jmp	.L135	#
.L62:
	.loc 1 2113 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.458
	cmpl	$3, %eax	#, ix86_cpu.458
	jne	.L589	#,
	.loc 1 2113 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1600
	movq	%rax, %rdi	# tmp1600,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57111
	je	.L590	#,
	movq	-8(%rbp), %rax	# insn, tmp1601
	movq	%rax, %rdi	# tmp1601,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57111
	jne	.L589	#,
.L590:
	.loc 1 2115 0 is_stmt 1
	movl	$3, %eax	#, D.57109
	jmp	.L135	#
.L589:
	.loc 1 2119 0
	movl	$1, %eax	#, D.57109
.L135:
	.loc 1 2123 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	result_ready_cost, .-result_ready_cost
	.globl	athlon_load_unit_ready_cost
	.type	athlon_load_unit_ready_cost, @function
athlon_load_unit_ready_cost:
.LFB6:
	.loc 1 2129 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 2130 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57116
	testl	%eax, %eax	# D.57116
	js	.L592	#,
	.loc 1 2130 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.459
	jmp	.L593	#
.L592:
	.loc 1 2130 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L593:
	.loc 1 2130 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.459
	jne	.L594	#,
	.loc 1 2133 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57117
	movzwl	(%rax), %eax	# _6->code, D.57118
	cmpw	$40, %ax	#, D.57118
	je	.L594	#,
	.loc 1 2134 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57117
	movq	%rax, %rdi	# D.57117,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57116
	jns	.L594	#,
	.loc 1 2135 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.10814, %ecx	#,
	movl	$2135, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L594:
	.loc 1 2137 0
	movl	$1, %eax	#, D.57116
	.loc 1 2140 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	athlon_load_unit_ready_cost, .-athlon_load_unit_ready_cost
	.globl	athlon_fp_store_unit_ready_cost
	.type	athlon_fp_store_unit_ready_cost, @function
athlon_fp_store_unit_ready_cost:
.LFB7:
	.loc 1 2146 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 2147 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57119
	testl	%eax, %eax	# D.57119
	js	.L598	#,
	.loc 1 2147 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.460
	jmp	.L599	#
.L598:
	.loc 1 2147 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L599:
	.loc 1 2147 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.460
	jne	.L600	#,
	.loc 1 2150 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57120
	movzwl	(%rax), %eax	# _6->code, D.57121
	cmpw	$40, %ax	#, D.57121
	je	.L600	#,
	.loc 1 2151 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57120
	movq	%rax, %rdi	# D.57120,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57119
	jns	.L600	#,
	.loc 1 2152 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.10822, %ecx	#,
	movl	$2152, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L600:
	.loc 1 2154 0
	movl	$1, %eax	#, D.57119
	.loc 1 2157 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	athlon_fp_store_unit_ready_cost, .-athlon_fp_store_unit_ready_cost
	.globl	athlon_fp_muladd_unit_ready_cost
	.type	athlon_fp_muladd_unit_ready_cost, @function
athlon_fp_muladd_unit_ready_cost:
.LFB8:
	.loc 1 2163 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 2164 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57122
	testl	%eax, %eax	# D.57122
	js	.L604	#,
	.loc 1 2164 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.461
	jmp	.L605	#
.L604:
	.loc 1 2164 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L605:
	.loc 1 2164 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.461
	jne	.L606	#,
	.loc 1 2167 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57123
	movzwl	(%rax), %eax	# _6->code, D.57124
	cmpw	$40, %ax	#, D.57124
	je	.L606	#,
	.loc 1 2168 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57123
	movq	%rax, %rdi	# D.57123,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57122
	jns	.L606	#,
	.loc 1 2169 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.10830, %ecx	#,
	movl	$2169, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L606:
	.loc 1 2171 0
	movl	$1, %eax	#, D.57122
	.loc 1 2174 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	athlon_fp_muladd_unit_ready_cost, .-athlon_fp_muladd_unit_ready_cost
	.globl	athlon_fp_add_unit_ready_cost
	.type	athlon_fp_add_unit_ready_cost, @function
athlon_fp_add_unit_ready_cost:
.LFB9:
	.loc 1 2180 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 2181 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57125
	testl	%eax, %eax	# D.57125
	js	.L610	#,
	.loc 1 2181 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.462
	jmp	.L611	#
.L610:
	.loc 1 2181 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L611:
	.loc 1 2181 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.462
	jne	.L612	#,
	.loc 1 2184 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57126
	movzwl	(%rax), %eax	# _6->code, D.57127
	cmpw	$40, %ax	#, D.57127
	je	.L612	#,
	.loc 1 2185 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57126
	movq	%rax, %rdi	# D.57126,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57125
	jns	.L612	#,
	.loc 1 2186 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.10838, %ecx	#,
	movl	$2186, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L612:
	.loc 1 2188 0
	movl	$1, %eax	#, D.57125
	.loc 1 2191 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	athlon_fp_add_unit_ready_cost, .-athlon_fp_add_unit_ready_cost
	.globl	athlon_fp_mul_unit_ready_cost
	.type	athlon_fp_mul_unit_ready_cost, @function
athlon_fp_mul_unit_ready_cost:
.LFB10:
	.loc 1 2197 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 2198 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57128
	testl	%eax, %eax	# D.57128
	js	.L616	#,
	.loc 1 2198 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.463
	jmp	.L617	#
.L616:
	.loc 1 2198 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L617:
	.loc 1 2198 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.463
	jne	.L618	#,
	.loc 1 2201 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57129
	movzwl	(%rax), %eax	# _6->code, D.57130
	cmpw	$40, %ax	#, D.57130
	je	.L618	#,
	.loc 1 2202 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57129
	movq	%rax, %rdi	# D.57129,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57128
	jns	.L618	#,
	.loc 1 2203 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.10846, %ecx	#,
	movl	$2203, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L618:
	.loc 1 2205 0
	movl	$1, %eax	#, D.57128
	.loc 1 2208 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	athlon_fp_mul_unit_ready_cost, .-athlon_fp_mul_unit_ready_cost
	.globl	athlon_fp_unit_ready_cost
	.type	athlon_fp_unit_ready_cost, @function
athlon_fp_unit_ready_cost:
.LFB11:
	.loc 1 2214 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 2215 0
	movq	-8(%rbp), %rax	# insn, tmp391
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57131
	testl	%eax, %eax	# D.57131
	js	.L622	#,
	.loc 1 2215 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp392
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.464
	jmp	.L623	#
.L622:
	.loc 1 2215 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp393
	movq	%rax, %rdi	# tmp393,
	call	recog_memoized_1	#
.L623:
	.loc 1 2215 0 discriminator 3
	addl	$1, %eax	#, tmp394
	cmpl	$623, %eax	#, tmp394
	ja	.L624	#,
	movl	%eax, %eax	# tmp394, tmp395
	movq	.L626(,%rax,8), %rax	#, tmp396
	jmp	*%rax	# tmp396
	.section	.rodata
	.align 8
	.align 4
.L626:
	.quad	.L625
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L627
	.quad	.L627
	.quad	.L627
	.quad	.L624
	.quad	.L627
	.quad	.L627
	.quad	.L624
	.quad	.L624
	.quad	.L627
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L627
	.quad	.L628
	.quad	.L624
	.quad	.L627
	.quad	.L628
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L629
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L629
	.quad	.L629
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L630
	.quad	.L630
	.quad	.L630
	.quad	.L630
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L631
	.quad	.L624
	.quad	.L632
	.quad	.L632
	.quad	.L632
	.quad	.L632
	.quad	.L633
	.quad	.L633
	.quad	.L634
	.quad	.L635
	.quad	.L624
	.quad	.L633
	.quad	.L635
	.quad	.L633
	.quad	.L635
	.quad	.L633
	.quad	.L635
	.quad	.L633
	.quad	.L635
	.quad	.L636
	.quad	.L636
	.quad	.L636
	.quad	.L624
	.quad	.L624
	.quad	.L636
	.quad	.L636
	.quad	.L636
	.quad	.L624
	.quad	.L624
	.quad	.L636
	.quad	.L636
	.quad	.L636
	.quad	.L624
	.quad	.L624
	.quad	.L633
	.quad	.L633
	.quad	.L624
	.quad	.L633
	.quad	.L633
	.quad	.L624
	.quad	.L633
	.quad	.L633
	.quad	.L624
	.quad	.L633
	.quad	.L633
	.quad	.L624
	.quad	.L637
	.quad	.L637
	.quad	.L637
	.quad	.L637
	.quad	.L637
	.quad	.L637
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L635
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L638
	.quad	.L639
	.quad	.L624
	.quad	.L638
	.quad	.L639
	.quad	.L624
	.quad	.L640
	.quad	.L641
	.quad	.L642
	.quad	.L643
	.quad	.L624
	.quad	.L642
	.quad	.L642
	.quad	.L644
	.quad	.L645
	.quad	.L624
	.quad	.L644
	.quad	.L644
	.quad	.L644
	.quad	.L644
	.quad	.L646
	.quad	.L647
	.quad	.L646
	.quad	.L647
	.quad	.L646
	.quad	.L647
	.quad	.L646
	.quad	.L647
	.quad	.L646
	.quad	.L647
	.quad	.L646
	.quad	.L647
	.quad	.L646
	.quad	.L647
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L624
	.quad	.L648
	.quad	.L649
	.quad	.L648
	.quad	.L650
	.quad	.L650
	.text
.L650:
	.loc 1 2219 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.465
	cmpl	$5, %eax	#, ix86_cpu.465
	jne	.L651	#,
	.loc 1 2221 0
	movl	$7, %eax	#, D.57131
	jmp	.L652	#
.L651:
	.loc 1 2225 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L649:
	.loc 1 2229 0
	movq	-8(%rbp), %rax	# insn, tmp397
	movq	%rax, %rdi	# tmp397,
	call	extract_constrain_insn_cached	#
	.loc 1 2230 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.466
	testl	%eax, %eax	# which_alternative.466
	je	.L653	#,
	.loc 1 2230 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.467
	cmpl	$1, %eax	#, which_alternative.467
	jne	.L654	#,
.L653:
	.loc 1 2230 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.468
	cmpl	$5, %eax	#, ix86_cpu.468
	jne	.L654	#,
	.loc 1 2232 0 is_stmt 1
	movl	$7, %eax	#, D.57131
	jmp	.L652	#
.L654:
	.loc 1 2236 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L648:
	.loc 1 2241 0
	movq	-8(%rbp), %rax	# insn, tmp398
	movq	%rax, %rdi	# tmp398,
	call	extract_constrain_insn_cached	#
	.loc 1 2242 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.469
	testl	%eax, %eax	# which_alternative.469
	je	.L655	#,
	.loc 1 2242 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.470
	cmpl	$1, %eax	#, which_alternative.470
	jne	.L656	#,
.L655:
	.loc 1 2242 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp399
	movq	%rax, %rdi	# tmp399,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L657	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.471
	cmpl	$5, %eax	#, ix86_cpu.471
	je	.L658	#,
.L657:
	.loc 1 2242 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp400
	movq	%rax, %rdi	# tmp400,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L656	#,
	.loc 1 2242 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.472
	cmpl	$5, %eax	#, ix86_cpu.472
	jne	.L656	#,
.L658:
	.loc 1 2244 0 is_stmt 1
	movl	$7, %eax	#, D.57131
	jmp	.L652	#
.L656:
	.loc 1 2248 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L647:
	.loc 1 2258 0
	movq	-8(%rbp), %rax	# insn, tmp401
	movq	%rax, %rdi	# tmp401,
	call	extract_insn_cached	#
	.loc 1 2259 0
	movq	-8(%rbp), %rax	# insn, tmp402
	movq	%rax, %rdi	# tmp402,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57133
	jne	.L659	#,
	.loc 1 2259 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp403
	movq	%rax, %rdi	# tmp403,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L660	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.473
	cmpl	$5, %eax	#, ix86_cpu.473
	je	.L661	#,
.L660:
	.loc 1 2259 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp404
	movq	%rax, %rdi	# tmp404,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L659	#,
	.loc 1 2259 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.474
	cmpl	$5, %eax	#, ix86_cpu.474
	jne	.L659	#,
.L661:
	.loc 1 2261 0 is_stmt 1
	movl	$24, %eax	#, D.57131
	jmp	.L652	#
.L659:
	.loc 1 2263 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	je	.L662	#,
	.loc 1 2263 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp405
	movq	%rax, %rdi	# tmp405,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L663	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.475
	cmpl	$5, %eax	#, ix86_cpu.475
	je	.L664	#,
.L663:
	.loc 1 2263 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp406
	movq	%rax, %rdi	# tmp406,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L662	#,
	.loc 1 2263 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.476
	cmpl	$5, %eax	#, ix86_cpu.476
	je	.L664	#,
.L662:
	.loc 1 2263 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp407
	movq	%rax, %rdi	# tmp407,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57133
	jne	.L665	#,
	.loc 1 2263 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp408
	movq	%rax, %rdi	# tmp408,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L666	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.477
	cmpl	$5, %eax	#, ix86_cpu.477
	je	.L664	#,
.L666:
	.loc 1 2263 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp409
	movq	%rax, %rdi	# tmp409,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L665	#,
	.loc 1 2263 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.478
	cmpl	$5, %eax	#, ix86_cpu.478
	jne	.L665	#,
.L664:
	.loc 1 2265 0 is_stmt 1
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L665:
	.loc 1 2269 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L646:
	.loc 1 2279 0
	movq	-8(%rbp), %rax	# insn, tmp410
	movq	%rax, %rdi	# tmp410,
	call	extract_insn_cached	#
	.loc 1 2280 0
	movq	-8(%rbp), %rax	# insn, tmp411
	movq	%rax, %rdi	# tmp411,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57133
	jne	.L667	#,
	.loc 1 2280 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp412
	movq	%rax, %rdi	# tmp412,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L668	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.479
	cmpl	$5, %eax	#, ix86_cpu.479
	je	.L669	#,
.L668:
	.loc 1 2280 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp413
	movq	%rax, %rdi	# tmp413,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L667	#,
	.loc 1 2280 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.480
	cmpl	$5, %eax	#, ix86_cpu.480
	jne	.L667	#,
.L669:
	.loc 1 2282 0 is_stmt 1
	movl	$24, %eax	#, D.57131
	jmp	.L652	#
.L667:
	.loc 1 2284 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	je	.L670	#,
	.loc 1 2284 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp414
	movq	%rax, %rdi	# tmp414,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L671	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.481
	cmpl	$5, %eax	#, ix86_cpu.481
	je	.L672	#,
.L671:
	.loc 1 2284 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp415
	movq	%rax, %rdi	# tmp415,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L670	#,
	.loc 1 2284 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.482
	cmpl	$5, %eax	#, ix86_cpu.482
	je	.L672	#,
.L670:
	.loc 1 2284 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp416
	movq	%rax, %rdi	# tmp416,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57133
	jne	.L673	#,
	.loc 1 2284 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp417
	movq	%rax, %rdi	# tmp417,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L674	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.483
	cmpl	$5, %eax	#, ix86_cpu.483
	je	.L672	#,
.L674:
	.loc 1 2284 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp418
	movq	%rax, %rdi	# tmp418,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L673	#,
	.loc 1 2284 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.484
	cmpl	$5, %eax	#, ix86_cpu.484
	jne	.L673	#,
.L672:
	.loc 1 2286 0 is_stmt 1
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L673:
	.loc 1 2290 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L645:
	.loc 1 2294 0
	movq	-8(%rbp), %rax	# insn, tmp419
	movq	%rax, %rdi	# tmp419,
	call	extract_constrain_insn_cached	#
	.loc 1 2295 0
	movq	-8(%rbp), %rax	# insn, tmp420
	movq	%rax, %rdi	# tmp420,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57133
	jne	.L675	#,
	.loc 1 2295 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp421
	movq	%rax, %rdi	# tmp421,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L676	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.485
	cmpl	$5, %eax	#, ix86_cpu.485
	je	.L677	#,
.L676:
	.loc 1 2295 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp422
	movq	%rax, %rdi	# tmp422,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L675	#,
	.loc 1 2295 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.486
	cmpl	$5, %eax	#, ix86_cpu.486
	jne	.L675	#,
.L677:
	.loc 1 2297 0 is_stmt 1
	movl	$24, %eax	#, D.57131
	jmp	.L652	#
.L675:
	.loc 1 2299 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.487
	cmpl	$2, %eax	#, which_alternative.487
	je	.L678	#,
	.loc 1 2299 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	je	.L678	#,
	movq	-8(%rbp), %rax	# insn, tmp423
	movq	%rax, %rdi	# tmp423,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L679	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.488
	cmpl	$5, %eax	#, ix86_cpu.488
	je	.L680	#,
.L679:
	.loc 1 2299 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp424
	movq	%rax, %rdi	# tmp424,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L678	#,
	.loc 1 2299 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.489
	cmpl	$5, %eax	#, ix86_cpu.489
	je	.L680	#,
.L678:
	.loc 1 2299 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp425
	movq	%rax, %rdi	# tmp425,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57133
	jne	.L681	#,
	.loc 1 2299 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp426
	movq	%rax, %rdi	# tmp426,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L682	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.490
	cmpl	$5, %eax	#, ix86_cpu.490
	je	.L680	#,
.L682:
	.loc 1 2299 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp427
	movq	%rax, %rdi	# tmp427,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L681	#,
	.loc 1 2299 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.491
	cmpl	$5, %eax	#, ix86_cpu.491
	jne	.L681	#,
.L680:
	.loc 1 2301 0 is_stmt 1
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L681:
	.loc 1 2305 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L644:
	.loc 1 2313 0
	movq	-8(%rbp), %rax	# insn, tmp428
	movq	%rax, %rdi	# tmp428,
	call	extract_insn_cached	#
	.loc 1 2314 0
	movq	-8(%rbp), %rax	# insn, tmp429
	movq	%rax, %rdi	# tmp429,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57133
	jne	.L683	#,
	.loc 1 2314 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp430
	movq	%rax, %rdi	# tmp430,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L684	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.492
	cmpl	$5, %eax	#, ix86_cpu.492
	je	.L685	#,
.L684:
	.loc 1 2314 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp431
	movq	%rax, %rdi	# tmp431,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L683	#,
	.loc 1 2314 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.493
	cmpl	$5, %eax	#, ix86_cpu.493
	jne	.L683	#,
.L685:
	.loc 1 2316 0 is_stmt 1
	movl	$24, %eax	#, D.57131
	jmp	.L652	#
.L683:
	.loc 1 2318 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	je	.L686	#,
	.loc 1 2318 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp432
	movq	%rax, %rdi	# tmp432,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L687	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.494
	cmpl	$5, %eax	#, ix86_cpu.494
	je	.L688	#,
.L687:
	.loc 1 2318 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp433
	movq	%rax, %rdi	# tmp433,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L686	#,
	.loc 1 2318 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.495
	cmpl	$5, %eax	#, ix86_cpu.495
	je	.L688	#,
.L686:
	.loc 1 2318 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp434
	movq	%rax, %rdi	# tmp434,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57133
	jne	.L689	#,
	.loc 1 2318 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp435
	movq	%rax, %rdi	# tmp435,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L690	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.496
	cmpl	$5, %eax	#, ix86_cpu.496
	je	.L688	#,
.L690:
	.loc 1 2318 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp436
	movq	%rax, %rdi	# tmp436,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L689	#,
	.loc 1 2318 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.497
	cmpl	$5, %eax	#, ix86_cpu.497
	jne	.L689	#,
.L688:
	.loc 1 2320 0 is_stmt 1
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L689:
	.loc 1 2324 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L643:
	.loc 1 2328 0
	movq	-8(%rbp), %rax	# insn, tmp437
	movq	%rax, %rdi	# tmp437,
	call	extract_constrain_insn_cached	#
	.loc 1 2329 0
	movq	-8(%rbp), %rax	# insn, tmp438
	movq	%rax, %rdi	# tmp438,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57133
	jne	.L691	#,
	.loc 1 2329 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp439
	movq	%rax, %rdi	# tmp439,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L692	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.498
	cmpl	$5, %eax	#, ix86_cpu.498
	je	.L693	#,
.L692:
	.loc 1 2329 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp440
	movq	%rax, %rdi	# tmp440,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L691	#,
	.loc 1 2329 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.499
	cmpl	$5, %eax	#, ix86_cpu.499
	jne	.L691	#,
.L693:
	.loc 1 2331 0 is_stmt 1
	movl	$24, %eax	#, D.57131
	jmp	.L652	#
.L691:
	.loc 1 2333 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.500
	cmpl	$2, %eax	#, which_alternative.500
	je	.L694	#,
	.loc 1 2333 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	je	.L694	#,
	movq	-8(%rbp), %rax	# insn, tmp441
	movq	%rax, %rdi	# tmp441,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L695	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.501
	cmpl	$5, %eax	#, ix86_cpu.501
	je	.L696	#,
.L695:
	.loc 1 2333 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp442
	movq	%rax, %rdi	# tmp442,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L694	#,
	.loc 1 2333 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.502
	cmpl	$5, %eax	#, ix86_cpu.502
	je	.L696	#,
.L694:
	.loc 1 2333 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp443
	movq	%rax, %rdi	# tmp443,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57133
	jne	.L697	#,
	.loc 1 2333 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp444
	movq	%rax, %rdi	# tmp444,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L698	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.503
	cmpl	$5, %eax	#, ix86_cpu.503
	je	.L696	#,
.L698:
	.loc 1 2333 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp445
	movq	%rax, %rdi	# tmp445,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L697	#,
	.loc 1 2333 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.504
	cmpl	$5, %eax	#, ix86_cpu.504
	jne	.L697	#,
.L696:
	.loc 1 2335 0 is_stmt 1
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L697:
	.loc 1 2339 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L642:
	.loc 1 2345 0
	movq	-8(%rbp), %rax	# insn, tmp446
	movq	%rax, %rdi	# tmp446,
	call	extract_insn_cached	#
	.loc 1 2346 0
	movq	-8(%rbp), %rax	# insn, tmp447
	movq	%rax, %rdi	# tmp447,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57133
	jne	.L699	#,
	.loc 1 2346 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp448
	movq	%rax, %rdi	# tmp448,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L700	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.505
	cmpl	$5, %eax	#, ix86_cpu.505
	je	.L701	#,
.L700:
	.loc 1 2346 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp449
	movq	%rax, %rdi	# tmp449,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L699	#,
	.loc 1 2346 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.506
	cmpl	$5, %eax	#, ix86_cpu.506
	jne	.L699	#,
.L701:
	.loc 1 2348 0 is_stmt 1
	movl	$24, %eax	#, D.57131
	jmp	.L652	#
.L699:
	.loc 1 2350 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	je	.L702	#,
	.loc 1 2350 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp450
	movq	%rax, %rdi	# tmp450,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L703	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.507
	cmpl	$5, %eax	#, ix86_cpu.507
	je	.L704	#,
.L703:
	.loc 1 2350 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp451
	movq	%rax, %rdi	# tmp451,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L702	#,
	.loc 1 2350 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.508
	cmpl	$5, %eax	#, ix86_cpu.508
	je	.L704	#,
.L702:
	.loc 1 2350 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp452
	movq	%rax, %rdi	# tmp452,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57133
	jne	.L705	#,
	.loc 1 2350 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp453
	movq	%rax, %rdi	# tmp453,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L706	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.509
	cmpl	$5, %eax	#, ix86_cpu.509
	je	.L704	#,
.L706:
	.loc 1 2350 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp454
	movq	%rax, %rdi	# tmp454,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L705	#,
	.loc 1 2350 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.510
	cmpl	$5, %eax	#, ix86_cpu.510
	jne	.L705	#,
.L704:
	.loc 1 2352 0 is_stmt 1
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L705:
	.loc 1 2356 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L641:
	.loc 1 2360 0
	movq	-8(%rbp), %rax	# insn, tmp455
	movq	%rax, %rdi	# tmp455,
	call	extract_insn_cached	#
	.loc 1 2361 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	je	.L707	#,
	.loc 1 2361 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp456
	movq	%rax, %rdi	# tmp456,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L708	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.511
	cmpl	$5, %eax	#, ix86_cpu.511
	je	.L709	#,
.L708:
	.loc 1 2361 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp457
	movq	%rax, %rdi	# tmp457,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L707	#,
	.loc 1 2361 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.512
	cmpl	$5, %eax	#, ix86_cpu.512
	je	.L709	#,
.L707:
	.loc 1 2361 0 discriminator 2
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	jne	.L710	#,
	.loc 1 2361 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp458
	movq	%rax, %rdi	# tmp458,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L711	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.513
	cmpl	$5, %eax	#, ix86_cpu.513
	je	.L709	#,
.L711:
	.loc 1 2361 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp459
	movq	%rax, %rdi	# tmp459,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L710	#,
	.loc 1 2361 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.514
	cmpl	$5, %eax	#, ix86_cpu.514
	jne	.L710	#,
.L709:
	.loc 1 2363 0 is_stmt 1
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L710:
	.loc 1 2367 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L640:
	.loc 1 2371 0
	movq	-8(%rbp), %rax	# insn, tmp460
	movq	%rax, %rdi	# tmp460,
	call	extract_insn_cached	#
	.loc 1 2372 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	je	.L712	#,
	.loc 1 2372 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp461
	movq	%rax, %rdi	# tmp461,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L713	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.515
	cmpl	$5, %eax	#, ix86_cpu.515
	je	.L714	#,
.L713:
	.loc 1 2372 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp462
	movq	%rax, %rdi	# tmp462,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L712	#,
	.loc 1 2372 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.516
	cmpl	$5, %eax	#, ix86_cpu.516
	je	.L714	#,
.L712:
	.loc 1 2372 0 discriminator 2
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	jne	.L715	#,
	.loc 1 2372 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp463
	movq	%rax, %rdi	# tmp463,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L716	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.517
	cmpl	$5, %eax	#, ix86_cpu.517
	je	.L714	#,
.L716:
	.loc 1 2372 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp464
	movq	%rax, %rdi	# tmp464,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L715	#,
	.loc 1 2372 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.518
	cmpl	$5, %eax	#, ix86_cpu.518
	jne	.L715	#,
.L714:
	.loc 1 2374 0 is_stmt 1
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L715:
	.loc 1 2378 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L639:
	.loc 1 2383 0
	movq	-8(%rbp), %rax	# insn, tmp465
	movq	%rax, %rdi	# tmp465,
	call	extract_constrain_insn_cached	#
	.loc 1 2384 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.519
	testl	%eax, %eax	# which_alternative.519
	jne	.L717	#,
	.loc 1 2384 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	je	.L717	#,
	movq	-8(%rbp), %rax	# insn, tmp466
	movq	%rax, %rdi	# tmp466,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L718	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.520
	cmpl	$5, %eax	#, ix86_cpu.520
	je	.L719	#,
.L718:
	.loc 1 2384 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp467
	movq	%rax, %rdi	# tmp467,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L717	#,
	.loc 1 2384 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.521
	cmpl	$5, %eax	#, ix86_cpu.521
	je	.L719	#,
.L717:
	.loc 1 2384 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.522
	testl	%eax, %eax	# which_alternative.522
	jne	.L720	#,
	.loc 1 2384 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	jne	.L720	#,
	movq	-8(%rbp), %rax	# insn, tmp468
	movq	%rax, %rdi	# tmp468,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L721	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.523
	cmpl	$5, %eax	#, ix86_cpu.523
	je	.L719	#,
.L721:
	.loc 1 2384 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp469
	movq	%rax, %rdi	# tmp469,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L720	#,
	.loc 1 2384 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.524
	cmpl	$5, %eax	#, ix86_cpu.524
	jne	.L720	#,
.L719:
	.loc 1 2386 0 is_stmt 1
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L720:
	.loc 1 2390 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L638:
	.loc 1 2395 0
	movq	-8(%rbp), %rax	# insn, tmp470
	movq	%rax, %rdi	# tmp470,
	call	extract_insn_cached	#
	.loc 1 2396 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	je	.L722	#,
	.loc 1 2396 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp471
	movq	%rax, %rdi	# tmp471,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L723	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.525
	cmpl	$5, %eax	#, ix86_cpu.525
	je	.L724	#,
.L723:
	.loc 1 2396 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp472
	movq	%rax, %rdi	# tmp472,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L722	#,
	.loc 1 2396 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.526
	cmpl	$5, %eax	#, ix86_cpu.526
	je	.L724	#,
.L722:
	.loc 1 2396 0 discriminator 2
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57134
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57134,
	call	mult_operator	#
	testl	%eax, %eax	# D.57131
	jne	.L725	#,
	.loc 1 2396 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp473
	movq	%rax, %rdi	# tmp473,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L726	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.527
	cmpl	$5, %eax	#, ix86_cpu.527
	je	.L724	#,
.L726:
	.loc 1 2396 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp474
	movq	%rax, %rdi	# tmp474,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L725	#,
	.loc 1 2396 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.528
	cmpl	$5, %eax	#, ix86_cpu.528
	jne	.L725	#,
.L724:
	.loc 1 2398 0 is_stmt 1
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L725:
	.loc 1 2402 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L637:
	.loc 1 2411 0
	movq	-8(%rbp), %rax	# insn, tmp475
	movq	%rax, %rdi	# tmp475,
	call	extract_constrain_insn_cached	#
	.loc 1 2412 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.529
	testl	%eax, %eax	# which_alternative.529
	jne	.L727	#,
	.loc 1 2412 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp476
	movq	%rax, %rdi	# tmp476,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L728	#,
	.loc 1 2412 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp477
	movq	%rax, %rdi	# tmp477,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	jne	.L727	#,
.L728:
	.loc 1 2412 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp478
	movq	%rax, %rdi	# tmp478,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L727	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.530
	cmpl	$5, %eax	#, ix86_cpu.530
	jne	.L727	#,
	.loc 1 2414 0 is_stmt 1
	movl	$10, %eax	#, D.57131
	jmp	.L652	#
.L727:
	.loc 1 2416 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.531
	testl	%eax, %eax	# which_alternative.531
	jne	.L729	#,
	.loc 1 2416 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp479
	movq	%rax, %rdi	# tmp479,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L730	#,
	.loc 1 2416 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp480
	movq	%rax, %rdi	# tmp480,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	jne	.L729	#,
.L730:
	.loc 1 2416 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp481
	movq	%rax, %rdi	# tmp481,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L729	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.532
	cmpl	$5, %eax	#, ix86_cpu.532
	jne	.L729	#,
	.loc 1 2418 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L729:
	.loc 1 2420 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.533
	testl	%eax, %eax	# which_alternative.533
	jne	.L731	#,
	.loc 1 2420 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp482
	movq	%rax, %rdi	# tmp482,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L731	#,
	movq	-8(%rbp), %rax	# insn, tmp483
	movq	%rax, %rdi	# tmp483,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	je	.L731	#,
	movq	-8(%rbp), %rax	# insn, tmp484
	movq	%rax, %rdi	# tmp484,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L731	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.534
	cmpl	$5, %eax	#, ix86_cpu.534
	jne	.L731	#,
	.loc 1 2422 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L731:
	.loc 1 2426 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L636:
	.loc 1 2438 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.535
	cmpl	$5, %eax	#, ix86_cpu.535
	jne	.L732	#,
	.loc 1 2440 0
	movl	$4, %eax	#, D.57131
	jmp	.L652	#
.L732:
	.loc 1 2444 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L635:
	.loc 1 2470 0
	movq	-8(%rbp), %rax	# insn, tmp485
	movq	%rax, %rdi	# tmp485,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L733	#,
	.loc 1 2470 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.536
	cmpl	$5, %eax	#, ix86_cpu.536
	je	.L734	#,
.L733:
	.loc 1 2470 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp486
	movq	%rax, %rdi	# tmp486,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L735	#,
	.loc 1 2470 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.537
	cmpl	$5, %eax	#, ix86_cpu.537
	jne	.L735	#,
.L734:
	.loc 1 2472 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L735:
	.loc 1 2476 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L634:
	.loc 1 2480 0
	movq	-8(%rbp), %rax	# insn, tmp487
	movq	%rax, %rdi	# tmp487,
	call	extract_constrain_insn_cached	#
	.loc 1 2481 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.538
	cmpl	$1, %eax	#, which_alternative.538
	jne	.L736	#,
	.loc 1 2481 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp488
	movq	%rax, %rdi	# tmp488,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L737	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.539
	cmpl	$5, %eax	#, ix86_cpu.539
	je	.L738	#,
.L737:
	.loc 1 2481 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp489
	movq	%rax, %rdi	# tmp489,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L736	#,
	.loc 1 2481 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.540
	cmpl	$5, %eax	#, ix86_cpu.540
	jne	.L736	#,
.L738:
	.loc 1 2483 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L736:
	.loc 1 2487 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L633:
	.loc 1 2504 0
	movq	-8(%rbp), %rax	# insn, tmp490
	movq	%rax, %rdi	# tmp490,
	call	extract_constrain_insn_cached	#
	.loc 1 2505 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.541
	testl	%eax, %eax	# which_alternative.541
	jne	.L739	#,
	.loc 1 2505 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp491
	movq	%rax, %rdi	# tmp491,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L740	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.542
	cmpl	$5, %eax	#, ix86_cpu.542
	je	.L741	#,
.L740:
	.loc 1 2505 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp492
	movq	%rax, %rdi	# tmp492,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L739	#,
	.loc 1 2505 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.543
	cmpl	$5, %eax	#, ix86_cpu.543
	jne	.L739	#,
.L741:
	.loc 1 2507 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L739:
	.loc 1 2511 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L632:
	.loc 1 2518 0
	movq	-8(%rbp), %rax	# insn, tmp493
	movq	%rax, %rdi	# tmp493,
	call	extract_constrain_insn_cached	#
	.loc 1 2519 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.544
	cmpl	$1, %eax	#, which_alternative.544
	jne	.L742	#,
	.loc 1 2519 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp494
	movq	%rax, %rdi	# tmp494,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L743	#,
	.loc 1 2519 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp495
	movq	%rax, %rdi	# tmp495,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	jne	.L742	#,
.L743:
	.loc 1 2519 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp496
	movq	%rax, %rdi	# tmp496,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L742	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.545
	cmpl	$1, %eax	#, which_alternative.545
	jne	.L742	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.546
	cmpl	$5, %eax	#, ix86_cpu.546
	jne	.L742	#,
	.loc 1 2521 0 is_stmt 1
	movl	$10, %eax	#, D.57131
	jmp	.L652	#
.L742:
	.loc 1 2523 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.547
	cmpl	$1, %eax	#, which_alternative.547
	jne	.L744	#,
	.loc 1 2523 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp497
	movq	%rax, %rdi	# tmp497,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L745	#,
	.loc 1 2523 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp498
	movq	%rax, %rdi	# tmp498,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	jne	.L744	#,
.L745:
	.loc 1 2523 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp499
	movq	%rax, %rdi	# tmp499,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L746	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.548
	testl	%eax, %eax	# which_alternative.548
	jne	.L746	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.549
	cmpl	$5, %eax	#, ix86_cpu.549
	je	.L747	#,
.L746:
	.loc 1 2523 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp500
	movq	%rax, %rdi	# tmp500,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L748	#,
	.loc 1 2523 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.550
	cmpl	$1, %eax	#, which_alternative.550
	jne	.L748	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.551
	cmpl	$5, %eax	#, ix86_cpu.551
	je	.L747	#,
.L748:
	.loc 1 2523 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp501
	movq	%rax, %rdi	# tmp501,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L744	#,
	.loc 1 2523 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.552
	testl	%eax, %eax	# which_alternative.552
	jne	.L744	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.553
	cmpl	$5, %eax	#, ix86_cpu.553
	jne	.L744	#,
.L747:
	.loc 1 2525 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L744:
	.loc 1 2527 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.554
	cmpl	$1, %eax	#, which_alternative.554
	jne	.L749	#,
	.loc 1 2527 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp502
	movq	%rax, %rdi	# tmp502,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L750	#,
	.loc 1 2527 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp503
	movq	%rax, %rdi	# tmp503,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	je	.L750	#,
.L749:
	movq	-8(%rbp), %rax	# insn, tmp504
	movq	%rax, %rdi	# tmp504,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L751	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.555
	testl	%eax, %eax	# which_alternative.555
	jne	.L751	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.556
	cmpl	$5, %eax	#, ix86_cpu.556
	je	.L752	#,
.L751:
	.loc 1 2527 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp505
	movq	%rax, %rdi	# tmp505,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L753	#,
	.loc 1 2527 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.557
	cmpl	$1, %eax	#, which_alternative.557
	jne	.L753	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.558
	cmpl	$5, %eax	#, ix86_cpu.558
	je	.L752	#,
.L753:
	.loc 1 2527 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp506
	movq	%rax, %rdi	# tmp506,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L750	#,
	.loc 1 2527 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.559
	testl	%eax, %eax	# which_alternative.559
	jne	.L750	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.560
	cmpl	$5, %eax	#, ix86_cpu.560
	jne	.L750	#,
.L752:
	.loc 1 2529 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L750:
	.loc 1 2533 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L631:
	.loc 1 2537 0
	movq	-8(%rbp), %rax	# insn, tmp507
	movq	%rax, %rdi	# tmp507,
	call	extract_constrain_insn_cached	#
	.loc 1 2538 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.561
	testl	%eax, %eax	# which_alternative.561
	je	.L754	#,
	.loc 1 2538 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.562
	cmpl	$1, %eax	#, which_alternative.562
	jne	.L755	#,
.L754:
	.loc 1 2538 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp508
	movq	%rax, %rdi	# tmp508,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L756	#,
	.loc 1 2538 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp509
	movq	%rax, %rdi	# tmp509,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	jne	.L755	#,
.L756:
	.loc 1 2538 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.563
	cmpl	$1, %eax	#, which_alternative.563
	jne	.L755	#,
	movq	-8(%rbp), %rax	# insn, tmp510
	movq	%rax, %rdi	# tmp510,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L755	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.564
	cmpl	$1, %eax	#, which_alternative.564
	jne	.L755	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.565
	cmpl	$5, %eax	#, ix86_cpu.565
	jne	.L755	#,
	.loc 1 2540 0 is_stmt 1
	movl	$10, %eax	#, D.57131
	jmp	.L652	#
.L755:
	.loc 1 2542 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.566
	testl	%eax, %eax	# which_alternative.566
	je	.L757	#,
	.loc 1 2542 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.567
	cmpl	$1, %eax	#, which_alternative.567
	jne	.L758	#,
.L757:
	.loc 1 2542 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp511
	movq	%rax, %rdi	# tmp511,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L759	#,
	.loc 1 2542 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp512
	movq	%rax, %rdi	# tmp512,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	jne	.L758	#,
.L759:
	.loc 1 2542 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.568
	cmpl	$1, %eax	#, which_alternative.568
	jne	.L758	#,
	movq	-8(%rbp), %rax	# insn, tmp513
	movq	%rax, %rdi	# tmp513,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L760	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.569
	cmpl	$1, %eax	#, which_alternative.569
	je	.L760	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.570
	cmpl	$5, %eax	#, ix86_cpu.570
	je	.L761	#,
.L760:
	.loc 1 2542 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp514
	movq	%rax, %rdi	# tmp514,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L762	#,
	.loc 1 2542 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.571
	cmpl	$1, %eax	#, which_alternative.571
	jne	.L762	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.572
	cmpl	$5, %eax	#, ix86_cpu.572
	je	.L761	#,
.L762:
	.loc 1 2542 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp515
	movq	%rax, %rdi	# tmp515,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L758	#,
	.loc 1 2542 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.573
	cmpl	$1, %eax	#, which_alternative.573
	je	.L758	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.574
	cmpl	$5, %eax	#, ix86_cpu.574
	jne	.L758	#,
.L761:
	.loc 1 2544 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L758:
	.loc 1 2546 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.575
	testl	%eax, %eax	# which_alternative.575
	je	.L763	#,
	.loc 1 2546 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.576
	cmpl	$1, %eax	#, which_alternative.576
	jne	.L764	#,
.L763:
	.loc 1 2546 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.577
	testl	%eax, %eax	# which_alternative.577
	je	.L765	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.578
	cmpl	$1, %eax	#, which_alternative.578
	jne	.L766	#,
.L765:
	.loc 1 2546 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp516
	movq	%rax, %rdi	# tmp516,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L767	#,
	.loc 1 2546 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp517
	movq	%rax, %rdi	# tmp517,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	jne	.L766	#,
.L767:
	.loc 1 2546 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.579
	cmpl	$1, %eax	#, which_alternative.579
	je	.L764	#,
.L766:
	.loc 1 2546 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp518
	movq	%rax, %rdi	# tmp518,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L768	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.580
	cmpl	$1, %eax	#, which_alternative.580
	je	.L768	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.581
	cmpl	$5, %eax	#, ix86_cpu.581
	je	.L769	#,
.L768:
	.loc 1 2546 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp519
	movq	%rax, %rdi	# tmp519,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L770	#,
	.loc 1 2546 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.582
	cmpl	$1, %eax	#, which_alternative.582
	jne	.L770	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.583
	cmpl	$5, %eax	#, ix86_cpu.583
	je	.L769	#,
.L770:
	.loc 1 2546 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp520
	movq	%rax, %rdi	# tmp520,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L764	#,
	.loc 1 2546 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.584
	cmpl	$1, %eax	#, which_alternative.584
	je	.L764	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.585
	cmpl	$5, %eax	#, ix86_cpu.585
	jne	.L764	#,
.L769:
	.loc 1 2548 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L764:
	.loc 1 2552 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L630:
	.loc 1 2559 0
	movq	-8(%rbp), %rax	# insn, tmp521
	movq	%rax, %rdi	# tmp521,
	call	extract_constrain_insn_cached	#
	.loc 1 2560 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.586
	testl	%eax, %eax	# which_alternative.586
	je	.L771	#,
	.loc 1 2560 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.587
	cmpl	$1, %eax	#, which_alternative.587
	je	.L771	#,
	.loc 1 2560 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.588
	cmpl	$2, %eax	#, which_alternative.588
	jne	.L772	#,
.L771:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.589
	cmpl	$3, %eax	#, which_alternative.589
	je	.L773	#,
	.loc 1 2560 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.590
	cmpl	$4, %eax	#, which_alternative.590
	je	.L773	#,
	.loc 1 2560 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp522
	movq	%rax, %rdi	# tmp522,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L773	#,
	movq	-8(%rbp), %rax	# insn, tmp523
	movq	%rax, %rdi	# tmp523,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	jne	.L772	#,
.L773:
	movq	-8(%rbp), %rax	# insn, tmp524
	movq	%rax, %rdi	# tmp524,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L772	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.591
	cmpl	$5, %eax	#, ix86_cpu.591
	jne	.L772	#,
	.loc 1 2562 0 is_stmt 1
	movl	$10, %eax	#, D.57131
	jmp	.L652	#
.L772:
	.loc 1 2564 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.592
	testl	%eax, %eax	# which_alternative.592
	je	.L774	#,
	.loc 1 2564 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.593
	cmpl	$1, %eax	#, which_alternative.593
	je	.L774	#,
	.loc 1 2564 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.594
	cmpl	$2, %eax	#, which_alternative.594
	jne	.L775	#,
.L774:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.595
	cmpl	$3, %eax	#, which_alternative.595
	je	.L776	#,
	.loc 1 2564 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.596
	cmpl	$4, %eax	#, which_alternative.596
	je	.L776	#,
	.loc 1 2564 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp525
	movq	%rax, %rdi	# tmp525,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L776	#,
	movq	-8(%rbp), %rax	# insn, tmp526
	movq	%rax, %rdi	# tmp526,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	jne	.L775	#,
.L776:
	movq	-8(%rbp), %rax	# insn, tmp527
	movq	%rax, %rdi	# tmp527,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L777	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.597
	testl	%eax, %eax	# which_alternative.597
	je	.L777	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.598
	cmpl	$1, %eax	#, which_alternative.598
	je	.L777	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.599
	cmpl	$2, %eax	#, which_alternative.599
	je	.L777	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.600
	cmpl	$5, %eax	#, ix86_cpu.600
	je	.L778	#,
.L777:
	.loc 1 2564 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp528
	movq	%rax, %rdi	# tmp528,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L779	#,
	.loc 1 2564 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.601
	cmpl	$5, %eax	#, ix86_cpu.601
	je	.L778	#,
.L779:
	.loc 1 2564 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp529
	movq	%rax, %rdi	# tmp529,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L775	#,
	.loc 1 2564 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.602
	testl	%eax, %eax	# which_alternative.602
	je	.L775	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.603
	cmpl	$1, %eax	#, which_alternative.603
	je	.L775	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.604
	cmpl	$2, %eax	#, which_alternative.604
	je	.L775	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.605
	cmpl	$5, %eax	#, ix86_cpu.605
	jne	.L775	#,
.L778:
	.loc 1 2566 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L775:
	.loc 1 2568 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.606
	testl	%eax, %eax	# which_alternative.606
	je	.L780	#,
	.loc 1 2568 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.607
	cmpl	$1, %eax	#, which_alternative.607
	je	.L780	#,
	.loc 1 2568 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.608
	cmpl	$2, %eax	#, which_alternative.608
	jne	.L781	#,
.L780:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.609
	cmpl	$3, %eax	#, which_alternative.609
	je	.L781	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.610
	cmpl	$4, %eax	#, which_alternative.610
	je	.L781	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.611
	testl	%eax, %eax	# which_alternative.611
	je	.L782	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.612
	cmpl	$1, %eax	#, which_alternative.612
	je	.L782	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.613
	cmpl	$2, %eax	#, which_alternative.613
	jne	.L783	#,
.L782:
	.loc 1 2568 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp530
	movq	%rax, %rdi	# tmp530,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L781	#,
	.loc 1 2568 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp531
	movq	%rax, %rdi	# tmp531,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	je	.L781	#,
.L783:
	movq	-8(%rbp), %rax	# insn, tmp532
	movq	%rax, %rdi	# tmp532,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L781	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.614
	cmpl	$5, %eax	#, ix86_cpu.614
	jne	.L781	#,
	.loc 1 2570 0 is_stmt 1
	movl	$10, %eax	#, D.57131
	jmp	.L652	#
.L781:
	.loc 1 2572 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.615
	testl	%eax, %eax	# which_alternative.615
	je	.L784	#,
	.loc 1 2572 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.616
	cmpl	$1, %eax	#, which_alternative.616
	je	.L784	#,
	.loc 1 2572 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.617
	cmpl	$2, %eax	#, which_alternative.617
	jne	.L785	#,
.L784:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.618
	cmpl	$3, %eax	#, which_alternative.618
	je	.L785	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.619
	cmpl	$4, %eax	#, which_alternative.619
	je	.L785	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.620
	testl	%eax, %eax	# which_alternative.620
	je	.L786	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.621
	cmpl	$1, %eax	#, which_alternative.621
	je	.L786	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.622
	cmpl	$2, %eax	#, which_alternative.622
	jne	.L787	#,
.L786:
	.loc 1 2572 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp533
	movq	%rax, %rdi	# tmp533,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L785	#,
	.loc 1 2572 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp534
	movq	%rax, %rdi	# tmp534,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57132
	je	.L785	#,
.L787:
	movq	-8(%rbp), %rax	# insn, tmp535
	movq	%rax, %rdi	# tmp535,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L785	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.623
	cmpl	$5, %eax	#, ix86_cpu.623
	jne	.L785	#,
	.loc 1 2574 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L785:
	.loc 1 2578 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L629:
	.loc 1 2584 0
	movq	-8(%rbp), %rax	# insn, tmp536
	movq	%rax, %rdi	# tmp536,
	call	extract_constrain_insn_cached	#
	.loc 1 2585 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.624
	testl	%eax, %eax	# which_alternative.624
	je	.L788	#,
	.loc 1 2585 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.625
	cmpl	$1, %eax	#, which_alternative.625
	je	.L788	#,
	.loc 1 2585 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.626
	cmpl	$2, %eax	#, which_alternative.626
	jne	.L789	#,
.L788:
	movq	-8(%rbp), %rax	# insn, tmp537
	movq	%rax, %rdi	# tmp537,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L790	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.627
	cmpl	$5, %eax	#, ix86_cpu.627
	je	.L791	#,
.L790:
	.loc 1 2585 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp538
	movq	%rax, %rdi	# tmp538,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L789	#,
	.loc 1 2585 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.628
	cmpl	$5, %eax	#, ix86_cpu.628
	jne	.L789	#,
.L791:
	.loc 1 2587 0 is_stmt 1
	movl	$2, %eax	#, D.57131
	jmp	.L652	#
.L789:
	.loc 1 2591 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L628:
	.loc 1 2596 0
	movq	-8(%rbp), %rax	# insn, tmp539
	movq	%rax, %rdi	# tmp539,
	call	extract_constrain_insn_cached	#
	.loc 1 2597 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.629
	testl	%eax, %eax	# which_alternative.629
	jne	.L792	#,
	.loc 1 2597 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp540
	movq	%rax, %rdi	# tmp540,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L793	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.630
	cmpl	$5, %eax	#, ix86_cpu.630
	je	.L794	#,
.L793:
	.loc 1 2597 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp541
	movq	%rax, %rdi	# tmp541,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L792	#,
	.loc 1 2597 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.631
	cmpl	$5, %eax	#, ix86_cpu.631
	jne	.L792	#,
.L794:
	.loc 1 2599 0 is_stmt 1
	movl	$3, %eax	#, D.57131
	jmp	.L652	#
.L792:
	.loc 1 2603 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L627:
	.loc 1 2614 0
	movq	-8(%rbp), %rax	# insn, tmp542
	movq	%rax, %rdi	# tmp542,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	jne	.L795	#,
	.loc 1 2614 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.632
	cmpl	$5, %eax	#, ix86_cpu.632
	je	.L796	#,
.L795:
	.loc 1 2614 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp543
	movq	%rax, %rdi	# tmp543,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57132
	je	.L797	#,
	.loc 1 2614 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.633
	cmpl	$5, %eax	#, ix86_cpu.633
	jne	.L797	#,
.L796:
	.loc 1 2616 0 is_stmt 1
	movl	$3, %eax	#, D.57131
	jmp	.L652	#
.L797:
	.loc 1 2620 0
	movl	$100, %eax	#, D.57131
	jmp	.L652	#
.L625:
	.loc 1 2624 0
	movq	-8(%rbp), %rax	# insn, tmp544
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57134
	movzwl	(%rax), %eax	# _394->code, D.57135
	cmpw	$40, %ax	#, D.57135
	je	.L624	#,
	.loc 1 2625 0
	movq	-8(%rbp), %rax	# insn, tmp545
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57134
	movq	%rax, %rdi	# D.57134,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57131
	jns	.L624	#,
	.loc 1 2626 0
	movq	-8(%rbp), %rax	# insn, tmp546
	movl	$__FUNCTION__.10964, %ecx	#,
	movl	$2626, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp546,
	call	_fatal_insn_not_found	#
.L624:
	.loc 1 2628 0
	movl	$100, %eax	#, D.57131
.L652:
	.loc 1 2631 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	athlon_fp_unit_ready_cost, .-athlon_fp_unit_ready_cost
	.globl	athlon_muldiv_unit_ready_cost
	.type	athlon_muldiv_unit_ready_cost, @function
athlon_muldiv_unit_ready_cost:
.LFB12:
	.loc 1 2637 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 2638 0
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57136
	testl	%eax, %eax	# D.57136
	js	.L799	#,
	.loc 1 2638 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp69
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.634
	jmp	.L800	#
.L799:
	.loc 1 2638 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	%rax, %rdi	# tmp70,
	call	recog_memoized_1	#
.L800:
	.loc 1 2638 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.634
	je	.L802	#,
	cmpl	$-1, %eax	#, iftmp.634
	jl	.L801	#,
	subl	$249, %eax	#, tmp71
	cmpl	$16, %eax	#, tmp71
	ja	.L801	#,
	.loc 1 2657 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.635
	cmpl	$5, %eax	#, ix86_cpu.635
	jne	.L804	#,
	.loc 1 2659 0
	movl	$5, %eax	#, D.57136
	jmp	.L805	#
.L804:
	.loc 1 2663 0
	movl	$42, %eax	#, D.57136
	jmp	.L805	#
.L802:
	.loc 1 2667 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57137
	movzwl	(%rax), %eax	# _10->code, D.57138
	cmpw	$40, %ax	#, D.57138
	je	.L801	#,
	.loc 1 2668 0
	movq	-8(%rbp), %rax	# insn, tmp73
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57137
	movq	%rax, %rdi	# D.57137,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57136
	jns	.L801	#,
	.loc 1 2669 0
	movq	-8(%rbp), %rax	# insn, tmp74
	movl	$__FUNCTION__.10989, %ecx	#,
	movl	$2669, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp74,
	call	_fatal_insn_not_found	#
.L801:
	.loc 1 2671 0
	movl	$42, %eax	#, D.57136
.L805:
	.loc 1 2674 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	athlon_muldiv_unit_ready_cost, .-athlon_muldiv_unit_ready_cost
	.globl	athlon_muldiv_unit_blockage_range
	.type	athlon_muldiv_unit_blockage_range, @function
athlon_muldiv_unit_blockage_range:
.LFB13:
	.loc 1 2680 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 2681 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57139
	testl	%eax, %eax	# D.57139
	js	.L807	#,
	.loc 1 2681 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.636
	jmp	.L808	#
.L807:
	.loc 1 2681 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L808:
	.loc 1 2681 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.636
	jne	.L809	#,
	.loc 1 2684 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57140
	movzwl	(%rax), %eax	# _6->code, D.57141
	cmpw	$40, %ax	#, D.57141
	je	.L809	#,
	.loc 1 2685 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57140
	movq	%rax, %rdi	# D.57140,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57139
	jns	.L809	#,
	.loc 1 2686 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.10997, %ecx	#,
	movl	$2686, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L809:
	.loc 1 2688 0
	movl	$65578, %eax	#, D.57142
	.loc 1 2691 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE13:
	.size	athlon_muldiv_unit_blockage_range, .-athlon_muldiv_unit_blockage_range
	.globl	athlon_ieu_unit_ready_cost
	.type	athlon_ieu_unit_ready_cost, @function
athlon_ieu_unit_ready_cost:
.LFB14:
	.loc 1 2697 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 2698 0
	movq	-8(%rbp), %rax	# insn, tmp385
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57143
	testl	%eax, %eax	# D.57143
	js	.L813	#,
	.loc 1 2698 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp386
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.637
	jmp	.L814	#
.L813:
	.loc 1 2698 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp387
	movq	%rax, %rdi	# tmp387,
	call	recog_memoized_1	#
.L814:
	.loc 1 2698 0 discriminator 3
	addl	$1, %eax	#, tmp388
	cmpl	$657, %eax	#, tmp388
	ja	.L815	#,
	movl	%eax, %eax	# tmp388, tmp389
	movq	.L817(,%rax,8), %rax	#, tmp390
	jmp	*%rax	# tmp390
	.section	.rodata
	.align 8
	.align 4
.L817:
	.quad	.L816
	.quad	.L818
	.quad	.L819
	.quad	.L819
	.quad	.L818
	.quad	.L819
	.quad	.L819
	.quad	.L818
	.quad	.L819
	.quad	.L819
	.quad	.L818
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L820
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L821
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L822
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L823
	.quad	.L823
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L823
	.quad	.L824
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L825
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L826
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L827
	.quad	.L827
	.quad	.L828
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L818
	.quad	.L819
	.quad	.L819
	.quad	.L818
	.quad	.L819
	.quad	.L815
	.quad	.L818
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L829
	.quad	.L830
	.quad	.L830
	.quad	.L830
	.quad	.L830
	.quad	.L831
	.quad	.L832
	.quad	.L833
	.quad	.L833
	.quad	.L833
	.quad	.L833
	.quad	.L833
	.quad	.L833
	.quad	.L834
	.quad	.L835
	.quad	.L835
	.quad	.L835
	.quad	.L835
	.quad	.L835
	.quad	.L836
	.quad	.L837
	.quad	.L837
	.quad	.L837
	.quad	.L835
	.quad	.L837
	.quad	.L837
	.quad	.L837
	.quad	.L819
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L838
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L815
	.quad	.L839
	.quad	.L819
	.quad	.L840
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L840
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L841
	.quad	.L842
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L841
	.quad	.L843
	.quad	.L842
	.quad	.L844
	.quad	.L841
	.quad	.L842
	.quad	.L842
	.quad	.L845
	.quad	.L842
	.quad	.L842
	.quad	.L846
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L846
	.quad	.L846
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L847
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L815
	.quad	.L819
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L848
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L849
	.quad	.L815
	.quad	.L849
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L850
	.quad	.L851
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L815
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.quad	.L819
	.text
.L851:
	.loc 1 2701 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp391
	movq	%rax, %rdi	# tmp391,
	call	extract_constrain_insn_cached	#
	.loc 1 2702 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.638
	cmpl	$1, %eax	#, which_alternative.638
	jne	.L852	#,
	.loc 1 2702 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	const0_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L852	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.639
	cmpl	$5, %eax	#, ix86_cpu.639
	je	.L853	#,
.L852:
	.loc 1 2702 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.640
	cmpl	$1, %eax	#, which_alternative.640
	jne	.L854	#,
	.loc 1 2702 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	const0_operand	#
	testl	%eax, %eax	# D.57143
	je	.L854	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.641
	cmpl	$5, %eax	#, ix86_cpu.641
	je	.L853	#,
.L854:
	.loc 1 2702 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.642
	testl	%eax, %eax	# which_alternative.642
	jne	.L855	#,
	.loc 1 2702 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.643
	cmpl	$5, %eax	#, ix86_cpu.643
	jne	.L855	#,
.L853:
	.loc 1 2704 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L855:
	.loc 1 2708 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L850:
	.loc 1 2712 0
	movq	-8(%rbp), %rax	# insn, tmp392
	movq	%rax, %rdi	# tmp392,
	call	extract_constrain_insn_cached	#
	.loc 1 2713 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.644
	cmpl	$1, %eax	#, which_alternative.644
	jne	.L857	#,
	.loc 1 2713 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	const0_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L857	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.645
	cmpl	$5, %eax	#, ix86_cpu.645
	je	.L858	#,
.L857:
	.loc 1 2713 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.646
	cmpl	$1, %eax	#, which_alternative.646
	jne	.L859	#,
	.loc 1 2713 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	const0_operand	#
	testl	%eax, %eax	# D.57143
	je	.L859	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.647
	cmpl	$5, %eax	#, ix86_cpu.647
	je	.L858	#,
.L859:
	.loc 1 2713 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.648
	testl	%eax, %eax	# which_alternative.648
	jne	.L860	#,
	.loc 1 2713 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.649
	cmpl	$5, %eax	#, ix86_cpu.649
	jne	.L860	#,
.L858:
	.loc 1 2715 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L860:
	.loc 1 2719 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L849:
	.loc 1 2724 0
	movq	-8(%rbp), %rax	# insn, tmp393
	movq	%rax, %rdi	# tmp393,
	call	extract_constrain_insn_cached	#
	.loc 1 2725 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.650
	cmpl	$2, %eax	#, which_alternative.650
	je	.L861	#,
	.loc 1 2725 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.651
	cmpl	$3, %eax	#, which_alternative.651
	jne	.L862	#,
.L861:
	.loc 1 2725 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.652
	cmpl	$5, %eax	#, ix86_cpu.652
	jne	.L862	#,
	.loc 1 2727 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L862:
	.loc 1 2731 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L848:
	.loc 1 2764 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.653
	cmpl	$5, %eax	#, ix86_cpu.653
	jne	.L863	#,
	.loc 1 2766 0
	movl	$15, %eax	#, D.57143
	jmp	.L856	#
.L863:
	.loc 1 2770 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L847:
	.loc 1 2774 0
	movq	-8(%rbp), %rax	# insn, tmp394
	movq	%rax, %rdi	# tmp394,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57145
	jne	.L864	#,
	.loc 1 2774 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.654
	cmpl	$5, %eax	#, ix86_cpu.654
	jne	.L864	#,
	.loc 1 2776 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L864:
	.loc 1 2780 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L846:
	.loc 1 2786 0
	movq	-8(%rbp), %rax	# insn, tmp395
	movq	%rax, %rdi	# tmp395,
	call	extract_constrain_insn_cached	#
	.loc 1 2787 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.655
	cmpl	$1, %eax	#, which_alternative.655
	jne	.L865	#,
	.loc 1 2787 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.656
	cmpl	$5, %eax	#, ix86_cpu.656
	je	.L866	#,
.L865:
	.loc 1 2787 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.657
	testl	%eax, %eax	# which_alternative.657
	jne	.L867	#,
	.loc 1 2787 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.658
	cmpl	$5, %eax	#, ix86_cpu.658
	jne	.L867	#,
.L866:
	.loc 1 2789 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L867:
	.loc 1 2793 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L845:
	.loc 1 2797 0
	movq	-8(%rbp), %rax	# insn, tmp396
	movq	%rax, %rdi	# tmp396,
	call	extract_constrain_insn_cached	#
	.loc 1 2798 0
	movq	-8(%rbp), %rax	# insn, tmp397
	movq	%rax, %rdi	# tmp397,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57145
	jne	.L868	#,
	.loc 1 2798 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.659
	cmpl	$5, %eax	#, ix86_cpu.659
	je	.L869	#,
.L868:
	.loc 1 2798 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.660
	cmpl	$2, %eax	#, which_alternative.660
	jne	.L870	#,
	.loc 1 2798 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.661
	cmpl	$5, %eax	#, ix86_cpu.661
	je	.L869	#,
.L870:
	.loc 1 2798 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp398
	movq	%rax, %rdi	# tmp398,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57145
	jne	.L871	#,
	.loc 1 2798 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.662
	cmpl	$5, %eax	#, ix86_cpu.662
	jne	.L871	#,
.L869:
	.loc 1 2800 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L871:
	.loc 1 2804 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L844:
	.loc 1 2808 0
	movq	-8(%rbp), %rax	# insn, tmp399
	movq	%rax, %rdi	# tmp399,
	call	extract_constrain_insn_cached	#
	.loc 1 2809 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.663
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.664
	movl	%eax, %ecx	# ix86_cpu.665, tmp440
	sarl	%cl, %edx	# tmp440, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L872	#,
	.loc 1 2809 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	const1_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L873	#,
.L872:
	.loc 1 2809 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.666
	cmpl	$5, %eax	#, ix86_cpu.666
	je	.L874	#,
.L873:
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.667
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.668
	movl	%eax, %ecx	# ix86_cpu.669, tmp442
	sarl	%cl, %edx	# tmp442, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L875	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	const1_operand	#
	testl	%eax, %eax	# D.57143
	je	.L875	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.670
	cmpl	$5, %eax	#, ix86_cpu.670
	jne	.L875	#,
.L874:
	.loc 1 2811 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L875:
	.loc 1 2815 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L843:
	.loc 1 2819 0
	movq	-8(%rbp), %rax	# insn, tmp400
	movq	%rax, %rdi	# tmp400,
	call	extract_constrain_insn_cached	#
	.loc 1 2820 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.671
	testl	%eax, %eax	# which_alternative.671
	jne	.L876	#,
	.loc 1 2820 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.672
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.673
	movl	%eax, %ecx	# ix86_cpu.674, tmp444
	sarl	%cl, %edx	# tmp444, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L877	#,
	.loc 1 2820 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	const1_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L876	#,
.L877:
	.loc 1 2820 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.675
	cmpl	$5, %eax	#, ix86_cpu.675
	je	.L878	#,
.L876:
	.loc 1 2820 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.676
	cmpl	$1, %eax	#, which_alternative.676
	jne	.L879	#,
	.loc 1 2820 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.677
	cmpl	$5, %eax	#, ix86_cpu.677
	je	.L878	#,
.L879:
	.loc 1 2820 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.678
	testl	%eax, %eax	# which_alternative.678
	jne	.L880	#,
	.loc 1 2820 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.679
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.680
	movl	%eax, %ecx	# ix86_cpu.681, tmp446
	sarl	%cl, %edx	# tmp446, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L880	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	const1_operand	#
	testl	%eax, %eax	# D.57143
	je	.L880	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.682
	cmpl	$5, %eax	#, ix86_cpu.682
	jne	.L880	#,
.L878:
	.loc 1 2822 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L880:
	.loc 1 2826 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L842:
	.loc 1 2835 0
	movq	-8(%rbp), %rax	# insn, tmp401
	movq	%rax, %rdi	# tmp401,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57145
	jne	.L881	#,
	.loc 1 2835 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.683
	cmpl	$5, %eax	#, ix86_cpu.683
	je	.L882	#,
.L881:
	.loc 1 2835 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp402
	movq	%rax, %rdi	# tmp402,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57145
	jne	.L883	#,
	.loc 1 2835 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.684
	cmpl	$5, %eax	#, ix86_cpu.684
	jne	.L883	#,
.L882:
	.loc 1 2837 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L883:
	.loc 1 2841 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L841:
	.loc 1 2847 0
	movq	-8(%rbp), %rax	# insn, tmp403
	movq	%rax, %rdi	# tmp403,
	call	extract_constrain_insn_cached	#
	.loc 1 2848 0
	movq	-8(%rbp), %rax	# insn, tmp404
	movq	%rax, %rdi	# tmp404,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57145
	jne	.L884	#,
	.loc 1 2848 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.685
	cmpl	$5, %eax	#, ix86_cpu.685
	je	.L885	#,
.L884:
	.loc 1 2848 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.686
	cmpl	$1, %eax	#, which_alternative.686
	jne	.L886	#,
	.loc 1 2848 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.687
	cmpl	$5, %eax	#, ix86_cpu.687
	je	.L885	#,
.L886:
	.loc 1 2848 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp405
	movq	%rax, %rdi	# tmp405,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57145
	jne	.L887	#,
	.loc 1 2848 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.688
	cmpl	$5, %eax	#, ix86_cpu.688
	jne	.L887	#,
.L885:
	.loc 1 2850 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L887:
	.loc 1 2854 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L840:
	.loc 1 2859 0
	movq	-8(%rbp), %rax	# insn, tmp406
	movq	%rax, %rdi	# tmp406,
	call	extract_constrain_insn_cached	#
	.loc 1 2860 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.689
	testl	%eax, %eax	# which_alternative.689
	je	.L888	#,
	.loc 1 2860 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.690
	cmpl	$1, %eax	#, which_alternative.690
	je	.L888	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.691
	cmpl	$5, %eax	#, ix86_cpu.691
	je	.L889	#,
.L888:
	.loc 1 2860 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.692
	testl	%eax, %eax	# which_alternative.692
	je	.L890	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.693
	cmpl	$1, %eax	#, which_alternative.693
	jne	.L891	#,
.L890:
	.loc 1 2860 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.694
	cmpl	$5, %eax	#, ix86_cpu.694
	jne	.L891	#,
.L889:
	.loc 1 2862 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L891:
	.loc 1 2866 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L839:
	.loc 1 2870 0
	movq	-8(%rbp), %rax	# insn, tmp407
	movq	%rax, %rdi	# tmp407,
	call	extract_constrain_insn_cached	#
	.loc 1 2871 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.695
	testl	%eax, %eax	# which_alternative.695
	je	.L892	#,
	.loc 1 2871 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.696
	cmpl	$1, %eax	#, which_alternative.696
	je	.L892	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.697
	cmpl	$2, %eax	#, which_alternative.697
	je	.L892	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.698
	cmpl	$5, %eax	#, ix86_cpu.698
	je	.L893	#,
.L892:
	.loc 1 2871 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.699
	testl	%eax, %eax	# which_alternative.699
	je	.L894	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.700
	cmpl	$1, %eax	#, which_alternative.700
	je	.L894	#,
	.loc 1 2871 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.701
	cmpl	$2, %eax	#, which_alternative.701
	jne	.L895	#,
.L894:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.702
	cmpl	$5, %eax	#, ix86_cpu.702
	jne	.L895	#,
.L893:
	.loc 1 2873 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L895:
	.loc 1 2877 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L838:
	.loc 1 2897 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.703
	cmpl	$5, %eax	#, ix86_cpu.703
	jne	.L896	#,
	.loc 1 2899 0
	movl	$5, %eax	#, D.57143
	jmp	.L856	#
.L896:
	.loc 1 2903 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L837:
	.loc 1 2912 0
	movq	-8(%rbp), %rax	# insn, tmp408
	movq	%rax, %rdi	# tmp408,
	call	extract_insn_cached	#
	.loc 1 2913 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	je	.L897	#,
	.loc 1 2913 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.704
	cmpl	$5, %eax	#, ix86_cpu.704
	je	.L898	#,
.L897:
	.loc 1 2913 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L899	#,
	.loc 1 2913 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.705
	cmpl	$5, %eax	#, ix86_cpu.705
	jne	.L899	#,
.L898:
	.loc 1 2915 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L899:
	.loc 1 2919 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L836:
	.loc 1 2923 0
	movq	-8(%rbp), %rax	# insn, tmp409
	movq	%rax, %rdi	# tmp409,
	call	extract_constrain_insn_cached	#
	.loc 1 2924 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.706
	cmpl	$3, %eax	#, which_alternative.706
	je	.L900	#,
	.loc 1 2924 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	je	.L900	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.707
	cmpl	$5, %eax	#, ix86_cpu.707
	je	.L901	#,
.L900:
	.loc 1 2924 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.708
	cmpl	$3, %eax	#, which_alternative.708
	jne	.L902	#,
	.loc 1 2924 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.709
	cmpl	$5, %eax	#, ix86_cpu.709
	je	.L901	#,
.L902:
	.loc 1 2924 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.710
	cmpl	$3, %eax	#, which_alternative.710
	je	.L903	#,
	.loc 1 2924 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L903	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.711
	cmpl	$5, %eax	#, ix86_cpu.711
	jne	.L903	#,
.L901:
	.loc 1 2926 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L903:
	.loc 1 2930 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L835:
	.loc 1 2939 0
	movq	-8(%rbp), %rax	# insn, tmp410
	movq	%rax, %rdi	# tmp410,
	call	extract_insn_cached	#
	.loc 1 2940 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	je	.L904	#,
	.loc 1 2940 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.712
	cmpl	$5, %eax	#, ix86_cpu.712
	je	.L905	#,
.L904:
	.loc 1 2940 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L906	#,
	.loc 1 2940 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.713
	cmpl	$5, %eax	#, ix86_cpu.713
	jne	.L906	#,
.L905:
	.loc 1 2942 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L906:
	.loc 1 2946 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L834:
	.loc 1 2950 0
	movq	-8(%rbp), %rax	# insn, tmp411
	movq	%rax, %rdi	# tmp411,
	call	extract_constrain_insn_cached	#
	.loc 1 2951 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.714
	cmpl	$2, %eax	#, which_alternative.714
	je	.L907	#,
	.loc 1 2951 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	je	.L907	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.715
	cmpl	$5, %eax	#, ix86_cpu.715
	je	.L908	#,
.L907:
	.loc 1 2951 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.716
	cmpl	$2, %eax	#, which_alternative.716
	jne	.L909	#,
	.loc 1 2951 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.717
	cmpl	$5, %eax	#, ix86_cpu.717
	je	.L908	#,
.L909:
	.loc 1 2951 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.718
	cmpl	$2, %eax	#, which_alternative.718
	je	.L910	#,
	.loc 1 2951 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L910	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.719
	cmpl	$5, %eax	#, ix86_cpu.719
	jne	.L910	#,
.L908:
	.loc 1 2953 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L910:
	.loc 1 2957 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L833:
	.loc 1 2966 0
	movq	-8(%rbp), %rax	# insn, tmp412
	movq	%rax, %rdi	# tmp412,
	call	extract_insn_cached	#
	.loc 1 2967 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	je	.L911	#,
	.loc 1 2967 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.720
	cmpl	$5, %eax	#, ix86_cpu.720
	je	.L912	#,
.L911:
	.loc 1 2967 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L913	#,
	.loc 1 2967 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.721
	cmpl	$5, %eax	#, ix86_cpu.721
	jne	.L913	#,
.L912:
	.loc 1 2969 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L913:
	.loc 1 2973 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L832:
	.loc 1 2977 0
	movq	-8(%rbp), %rax	# insn, tmp413
	movq	%rax, %rdi	# tmp413,
	call	extract_constrain_insn_cached	#
	.loc 1 2978 0
	movq	-8(%rbp), %rax	# insn, tmp414
	movq	%rax, %rdi	# tmp414,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57145
	jne	.L914	#,
	.loc 1 2978 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.722
	cmpl	$5, %eax	#, ix86_cpu.722
	je	.L915	#,
.L914:
	.loc 1 2978 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.723
	testl	%eax, %eax	# which_alternative.723
	jne	.L916	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57143
	je	.L917	#,
.L916:
	.loc 1 2978 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.724
	cmpl	$5, %eax	#, ix86_cpu.724
	je	.L915	#,
.L917:
	movq	-8(%rbp), %rax	# insn, tmp415
	movq	%rax, %rdi	# tmp415,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57145
	jne	.L918	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.725
	cmpl	$5, %eax	#, ix86_cpu.725
	jne	.L918	#,
.L915:
	.loc 1 2980 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L918:
	.loc 1 2984 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L831:
	.loc 1 2988 0
	movq	-8(%rbp), %rax	# insn, tmp416
	movq	%rax, %rdi	# tmp416,
	call	extract_constrain_insn_cached	#
	.loc 1 2989 0
	movq	-8(%rbp), %rax	# insn, tmp417
	movq	%rax, %rdi	# tmp417,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57145
	jne	.L919	#,
	.loc 1 2989 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.726
	cmpl	$5, %eax	#, ix86_cpu.726
	je	.L920	#,
.L919:
	.loc 1 2989 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.727
	cmpl	$2, %eax	#, which_alternative.727
	je	.L921	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57143
	je	.L922	#,
.L921:
	.loc 1 2989 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.728
	cmpl	$5, %eax	#, ix86_cpu.728
	je	.L920	#,
.L922:
	movq	-8(%rbp), %rax	# insn, tmp418
	movq	%rax, %rdi	# tmp418,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57145
	jne	.L923	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.729
	cmpl	$5, %eax	#, ix86_cpu.729
	jne	.L923	#,
.L920:
	.loc 1 2991 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L923:
	.loc 1 2995 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L830:
	.loc 1 3002 0
	movq	-8(%rbp), %rax	# insn, tmp419
	movq	%rax, %rdi	# tmp419,
	call	extract_insn_cached	#
	.loc 1 3003 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	je	.L924	#,
	.loc 1 3003 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.730
	cmpl	$5, %eax	#, ix86_cpu.730
	je	.L925	#,
.L924:
	.loc 1 3003 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L926	#,
	.loc 1 3003 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.731
	cmpl	$5, %eax	#, ix86_cpu.731
	jne	.L926	#,
.L925:
	.loc 1 3005 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L926:
	.loc 1 3009 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L829:
	.loc 1 3013 0
	movq	-8(%rbp), %rax	# insn, tmp420
	movq	%rax, %rdi	# tmp420,
	call	extract_constrain_insn_cached	#
	.loc 1 3014 0
	movq	-8(%rbp), %rax	# insn, tmp421
	movq	%rax, %rdi	# tmp421,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57145
	jne	.L927	#,
	.loc 1 3014 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.732
	cmpl	$5, %eax	#, ix86_cpu.732
	je	.L928	#,
.L927:
	.loc 1 3014 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.733
	cmpl	$2, %eax	#, which_alternative.733
	je	.L929	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57144
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57143
	je	.L930	#,
.L929:
	.loc 1 3014 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.734
	cmpl	$5, %eax	#, ix86_cpu.734
	je	.L928	#,
.L930:
	movq	-8(%rbp), %rax	# insn, tmp422
	movq	%rax, %rdi	# tmp422,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57145
	jne	.L931	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.735
	cmpl	$5, %eax	#, ix86_cpu.735
	jne	.L931	#,
.L928:
	.loc 1 3016 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L931:
	.loc 1 3020 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L828:
	.loc 1 3024 0
	movq	-8(%rbp), %rax	# insn, tmp423
	movq	%rax, %rdi	# tmp423,
	call	extract_constrain_insn_cached	#
	.loc 1 3025 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.736
	testl	%eax, %eax	# which_alternative.736
	je	.L932	#,
	.loc 1 3025 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.737
	cmpl	$1, %eax	#, which_alternative.737
	je	.L932	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.738
	cmpl	$2, %eax	#, which_alternative.738
	je	.L932	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.739
	cmpl	$3, %eax	#, which_alternative.739
	je	.L933	#,
	.loc 1 3025 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.740
	cmpl	$4, %eax	#, which_alternative.740
	jne	.L932	#,
.L933:
	.loc 1 3025 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.741
	cmpl	$5, %eax	#, ix86_cpu.741
	jne	.L932	#,
	.loc 1 3027 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L932:
	.loc 1 3031 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L827:
	.loc 1 3036 0
	movq	-8(%rbp), %rax	# insn, tmp424
	movq	%rax, %rdi	# tmp424,
	call	extract_constrain_insn_cached	#
	.loc 1 3037 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.742
	cmpl	$1, %eax	#, which_alternative.742
	jne	.L934	#,
	.loc 1 3037 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.743
	cmpl	$5, %eax	#, ix86_cpu.743
	jne	.L934	#,
	.loc 1 3039 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L934:
	.loc 1 3043 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L826:
	.loc 1 3047 0
	movq	-8(%rbp), %rax	# insn, tmp425
	movq	%rax, %rdi	# tmp425,
	call	extract_constrain_insn_cached	#
	.loc 1 3048 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.744
	cmpl	$5, %eax	#, which_alternative.744
	je	.L935	#,
	.loc 1 3048 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.745
	cmpl	$6, %eax	#, which_alternative.745
	je	.L935	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.746
	cmpl	$7, %eax	#, which_alternative.746
	je	.L935	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.747
	cmpl	$8, %eax	#, which_alternative.747
	je	.L935	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.748
	cmpl	$4, %eax	#, which_alternative.748
	je	.L935	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.749
	testl	%eax, %eax	# flag_pic.749
	je	.L935	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57144
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57143
	je	.L935	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.750
	cmpl	$5, %eax	#, ix86_cpu.750
	je	.L936	#,
.L935:
	.loc 1 3048 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.751
	cmpl	$5, %eax	#, which_alternative.751
	je	.L937	#,
	.loc 1 3048 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.752
	cmpl	$6, %eax	#, which_alternative.752
	je	.L937	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.753
	cmpl	$7, %eax	#, which_alternative.753
	je	.L937	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.754
	cmpl	$8, %eax	#, which_alternative.754
	je	.L937	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.755
	cmpl	$4, %eax	#, which_alternative.755
	je	.L937	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.756
	testl	%eax, %eax	# flag_pic.756
	je	.L938	#,
	.loc 1 3048 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57144
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L937	#,
.L938:
	.loc 1 3048 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.757
	cmpl	$5, %eax	#, ix86_cpu.757
	jne	.L937	#,
.L936:
	.loc 1 3050 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L937:
	.loc 1 3054 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L825:
	.loc 1 3058 0
	movq	-8(%rbp), %rax	# insn, tmp426
	movq	%rax, %rdi	# tmp426,
	call	extract_constrain_insn_cached	#
	.loc 1 3059 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.758
	testl	%eax, %eax	# which_alternative.758
	jne	.L939	#,
	.loc 1 3059 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.759
	cmpl	$5, %eax	#, ix86_cpu.759
	jne	.L939	#,
	.loc 1 3061 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L939:
	.loc 1 3065 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L824:
	.loc 1 3069 0
	movq	-8(%rbp), %rax	# insn, tmp427
	movq	%rax, %rdi	# tmp427,
	call	extract_constrain_insn_cached	#
	.loc 1 3070 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57144
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57143
	je	.L940	#,
	.loc 1 3070 0 is_stmt 0 discriminator 2
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.760
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.761
	movl	%eax, %ecx	# ix86_cpu.762, tmp448
	sarl	%cl, %edx	# tmp448, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L941	#,
.L940:
	.loc 1 3070 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.763
	cmpl	$5, %eax	#, ix86_cpu.763
	je	.L942	#,
.L941:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57144
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57143
	je	.L943	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.764
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.765
	movl	%eax, %ecx	# ix86_cpu.766, tmp450
	sarl	%cl, %edx	# tmp450, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	jne	.L943	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.767
	cmpl	$5, %eax	#, ix86_cpu.767
	jne	.L943	#,
.L942:
	.loc 1 3072 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L943:
	.loc 1 3076 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L823:
	.loc 1 3082 0
	movq	-8(%rbp), %rax	# insn, tmp428
	movq	%rax, %rdi	# tmp428,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57145
	jne	.L944	#,
	.loc 1 3082 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.768
	cmpl	$5, %eax	#, ix86_cpu.768
	je	.L945	#,
.L944:
	.loc 1 3082 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp429
	movq	%rax, %rdi	# tmp429,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57145
	jne	.L946	#,
	.loc 1 3082 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.769
	cmpl	$5, %eax	#, ix86_cpu.769
	jne	.L946	#,
.L945:
	.loc 1 3084 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L946:
	.loc 1 3088 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L822:
	.loc 1 3092 0
	movq	-8(%rbp), %rax	# insn, tmp430
	movq	%rax, %rdi	# tmp430,
	call	extract_constrain_insn_cached	#
	.loc 1 3093 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.770
	cmpl	$3, %eax	#, which_alternative.770
	jne	.L947	#,
	.loc 1 3093 0 is_stmt 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.771
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.772
	movl	%eax, %ecx	# ix86_cpu.773, tmp452
	sarl	%cl, %edx	# tmp452, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L948	#,
	.loc 1 3093 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.774
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.775
	movl	%eax, %ecx	# ix86_cpu.776, tmp454
	sarl	%cl, %edx	# tmp454, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L948	#,
.L947:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.777
	cmpl	$3, %eax	#, which_alternative.777
	je	.L949	#,
	.loc 1 3093 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.778
	cmpl	$5, %eax	#, which_alternative.778
	je	.L949	#,
	.loc 1 3093 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.779
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.780
	movl	%eax, %ecx	# ix86_cpu.781, tmp456
	sarl	%cl, %edx	# tmp456, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L948	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.782
	cmpl	$2, %eax	#, which_alternative.782
	jne	.L948	#,
.L949:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.783
	cmpl	$5, %eax	#, ix86_cpu.783
	je	.L950	#,
.L948:
	.loc 1 3093 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.784
	cmpl	$3, %eax	#, which_alternative.784
	jne	.L951	#,
	.loc 1 3093 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.785
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.786
	movl	%eax, %ecx	# ix86_cpu.787, tmp458
	sarl	%cl, %edx	# tmp458, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L952	#,
	.loc 1 3093 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.788
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.789
	movl	%eax, %ecx	# ix86_cpu.790, tmp460
	sarl	%cl, %edx	# tmp460, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L952	#,
.L951:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.791
	cmpl	$3, %eax	#, which_alternative.791
	jne	.L953	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.792
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.793
	movl	%eax, %ecx	# ix86_cpu.794, tmp462
	sarl	%cl, %edx	# tmp462, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L954	#,
	.loc 1 3093 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.795
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.796
	movl	%eax, %ecx	# ix86_cpu.797, tmp464
	sarl	%cl, %edx	# tmp464, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L954	#,
.L953:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.798
	cmpl	$3, %eax	#, which_alternative.798
	je	.L954	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.799
	cmpl	$5, %eax	#, which_alternative.799
	je	.L954	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.800
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.801
	movl	%eax, %ecx	# ix86_cpu.802, tmp466
	sarl	%cl, %edx	# tmp466, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L952	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.803
	cmpl	$2, %eax	#, which_alternative.803
	je	.L954	#,
.L952:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.804
	cmpl	$5, %eax	#, ix86_cpu.804
	jne	.L954	#,
.L950:
	.loc 1 3095 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L954:
	.loc 1 3099 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L821:
	.loc 1 3103 0
	movq	-8(%rbp), %rax	# insn, tmp431
	movq	%rax, %rdi	# tmp431,
	call	extract_constrain_insn_cached	#
	.loc 1 3104 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.805
	testl	%eax, %eax	# which_alternative.805
	je	.L955	#,
	.loc 1 3104 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.806
	cmpl	$1, %eax	#, which_alternative.806
	jne	.L956	#,
.L955:
	.loc 1 3104 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.807
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.808
	movl	%eax, %ecx	# ix86_cpu.809, tmp468
	sarl	%cl, %edx	# tmp468, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L957	#,
	.loc 1 3104 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.810
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.811
	movl	%eax, %ecx	# ix86_cpu.812, tmp470
	sarl	%cl, %edx	# tmp470, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L957	#,
.L956:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.813
	cmpl	$2, %eax	#, which_alternative.813
	je	.L958	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.814
	cmpl	$3, %eax	#, which_alternative.814
	je	.L958	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.815
	cmpl	$4, %eax	#, which_alternative.815
	jne	.L959	#,
.L958:
	.loc 1 3104 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57144
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L957	#,
.L959:
	.loc 1 3104 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.816
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.817
	movl	%eax, %ecx	# ix86_cpu.818, tmp472
	sarl	%cl, %edx	# tmp472, D.57143
	movl	%edx, %eax	# D.57143, D.57143
	andl	$1, %eax	#, D.57143
	testl	%eax, %eax	# D.57143
	je	.L957	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.819
	testl	%eax, %eax	# which_alternative.819
	je	.L960	#,
	.loc 1 3104 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.820
	cmpl	$1, %eax	#, which_alternative.820
	je	.L960	#,
	.loc 1 3104 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.821
	cmpl	$3, %eax	#, which_alternative.821
	je	.L960	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.822
	cmpl	$4, %eax	#, which_alternative.822
	jne	.L957	#,
.L960:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.823
	cmpl	$5, %eax	#, ix86_cpu.823
	je	.L961	#,
.L957:
	.loc 1 3104 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp432
	movq	%rax, %rdi	# tmp432,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57145
	jne	.L962	#,
	.loc 1 3104 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.824
	cmpl	$5, %eax	#, ix86_cpu.824
	jne	.L962	#,
.L961:
	.loc 1 3106 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L962:
	.loc 1 3110 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L820:
	.loc 1 3114 0
	movq	-8(%rbp), %rax	# insn, tmp433
	movq	%rax, %rdi	# tmp433,
	call	extract_constrain_insn_cached	#
	.loc 1 3115 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.825
	cmpl	$4, %eax	#, which_alternative.825
	je	.L963	#,
	.loc 1 3115 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.826
	cmpl	$5, %eax	#, which_alternative.826
	je	.L963	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.827
	cmpl	$6, %eax	#, which_alternative.827
	je	.L963	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.828
	cmpl	$7, %eax	#, which_alternative.828
	je	.L963	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.829
	cmpl	$8, %eax	#, which_alternative.829
	je	.L963	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.830
	cmpl	$9, %eax	#, which_alternative.830
	je	.L963	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.831
	testl	%eax, %eax	# flag_pic.831
	je	.L963	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57144
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57143
	je	.L963	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.832
	cmpl	$5, %eax	#, ix86_cpu.832
	je	.L964	#,
.L963:
	.loc 1 3115 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.833
	cmpl	$4, %eax	#, which_alternative.833
	je	.L965	#,
	.loc 1 3115 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.834
	cmpl	$5, %eax	#, which_alternative.834
	je	.L965	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.835
	cmpl	$6, %eax	#, which_alternative.835
	je	.L965	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.836
	cmpl	$7, %eax	#, which_alternative.836
	je	.L965	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.837
	cmpl	$8, %eax	#, which_alternative.837
	je	.L965	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.838
	cmpl	$9, %eax	#, which_alternative.838
	je	.L965	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.839
	testl	%eax, %eax	# flag_pic.839
	je	.L966	#,
	.loc 1 3115 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57144
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57144,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57143
	jne	.L965	#,
.L966:
	.loc 1 3115 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.840
	cmpl	$5, %eax	#, ix86_cpu.840
	jne	.L965	#,
.L964:
	.loc 1 3117 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L965:
	.loc 1 3121 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L819:
	.loc 1 3397 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.841
	cmpl	$5, %eax	#, ix86_cpu.841
	jne	.L967	#,
	.loc 1 3399 0
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L967:
	.loc 1 3403 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L818:
	.loc 1 3413 0
	movq	-8(%rbp), %rax	# insn, tmp434
	movq	%rax, %rdi	# tmp434,
	call	extract_constrain_insn_cached	#
	.loc 1 3414 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.842
	testl	%eax, %eax	# which_alternative.842
	jne	.L968	#,
	.loc 1 3414 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.843
	cmpl	$5, %eax	#, ix86_cpu.843
	je	.L969	#,
.L968:
	.loc 1 3414 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.844
	cmpl	$1, %eax	#, which_alternative.844
	jne	.L970	#,
	.loc 1 3414 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.845
	cmpl	$5, %eax	#, ix86_cpu.845
	jne	.L970	#,
.L969:
	.loc 1 3416 0 is_stmt 1
	movl	$1, %eax	#, D.57143
	jmp	.L856	#
.L970:
	.loc 1 3420 0
	movl	$42, %eax	#, D.57143
	jmp	.L856	#
.L816:
	.loc 1 3424 0
	movq	-8(%rbp), %rax	# insn, tmp435
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57144
	movzwl	(%rax), %eax	# _393->code, D.57146
	cmpw	$40, %ax	#, D.57146
	je	.L815	#,
	.loc 1 3425 0
	movq	-8(%rbp), %rax	# insn, tmp436
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57144
	movq	%rax, %rdi	# D.57144,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57143
	jns	.L815	#,
	.loc 1 3426 0
	movq	-8(%rbp), %rax	# insn, tmp437
	movl	$__FUNCTION__.11394, %ecx	#,
	movl	$3426, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp437,
	call	_fatal_insn_not_found	#
.L815:
	.loc 1 3428 0
	movl	$42, %eax	#, D.57143
.L856:
	.loc 1 3431 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE14:
	.size	athlon_ieu_unit_ready_cost, .-athlon_ieu_unit_ready_cost
	.globl	athlon_ieu_unit_blockage_range
	.type	athlon_ieu_unit_blockage_range, @function
athlon_ieu_unit_blockage_range:
.LFB15:
	.loc 1 3437 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 3438 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57147
	testl	%eax, %eax	# D.57147
	js	.L972	#,
	.loc 1 3438 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.846
	jmp	.L973	#
.L972:
	.loc 1 3438 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L973:
	.loc 1 3438 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.846
	jne	.L974	#,
	.loc 1 3441 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57148
	movzwl	(%rax), %eax	# _6->code, D.57149
	cmpw	$40, %ax	#, D.57149
	je	.L974	#,
	.loc 1 3442 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57148
	movq	%rax, %rdi	# D.57148,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57147
	jns	.L974	#,
	.loc 1 3443 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.11402, %ecx	#,
	movl	$3443, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L974:
	.loc 1 3445 0
	movl	$65551, %eax	#, D.57150
	.loc 1 3448 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE15:
	.size	athlon_ieu_unit_blockage_range, .-athlon_ieu_unit_blockage_range
	.globl	athlon_directdec_unit_ready_cost
	.type	athlon_directdec_unit_ready_cost, @function
athlon_directdec_unit_ready_cost:
.LFB16:
	.loc 1 3454 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 3455 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57151
	testl	%eax, %eax	# D.57151
	js	.L978	#,
	.loc 1 3455 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.847
	jmp	.L979	#
.L978:
	.loc 1 3455 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L979:
	.loc 1 3455 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.847
	jne	.L980	#,
	.loc 1 3458 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57152
	movzwl	(%rax), %eax	# _6->code, D.57153
	cmpw	$40, %ax	#, D.57153
	je	.L980	#,
	.loc 1 3459 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57152
	movq	%rax, %rdi	# D.57152,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57151
	jns	.L980	#,
	.loc 1 3460 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.11410, %ecx	#,
	movl	$3460, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L980:
	.loc 1 3462 0
	movl	$1, %eax	#, D.57151
	.loc 1 3465 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE16:
	.size	athlon_directdec_unit_ready_cost, .-athlon_directdec_unit_ready_cost
	.globl	athlon_vectordec_unit_ready_cost
	.type	athlon_vectordec_unit_ready_cost, @function
athlon_vectordec_unit_ready_cost:
.LFB17:
	.loc 1 3471 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 3472 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57154
	testl	%eax, %eax	# D.57154
	js	.L984	#,
	.loc 1 3472 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.848
	jmp	.L985	#
.L984:
	.loc 1 3472 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L985:
	.loc 1 3472 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.848
	jne	.L986	#,
	.loc 1 3475 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57155
	movzwl	(%rax), %eax	# _6->code, D.57156
	cmpw	$40, %ax	#, D.57156
	je	.L986	#,
	.loc 1 3476 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57155
	movq	%rax, %rdi	# D.57155,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57154
	jns	.L986	#,
	.loc 1 3477 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.11418, %ecx	#,
	movl	$3477, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L986:
	.loc 1 3479 0
	movl	$1, %eax	#, D.57154
	.loc 1 3482 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE17:
	.size	athlon_vectordec_unit_ready_cost, .-athlon_vectordec_unit_ready_cost
	.globl	athlon_vectordec_unit_blockage_range
	.type	athlon_vectordec_unit_blockage_range, @function
athlon_vectordec_unit_blockage_range:
.LFB18:
	.loc 1 3488 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 3489 0
	movq	-8(%rbp), %rax	# insn, tmp122
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57158
	testl	%eax, %eax	# D.57158
	js	.L990	#,
	.loc 1 3489 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp123
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.849
	jmp	.L991	#
.L990:
	.loc 1 3489 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp124
	movq	%rax, %rdi	# tmp124,
	call	recog_memoized_1	#
.L991:
	.loc 1 3489 0 discriminator 3
	addl	$1, %eax	#, tmp125
	cmpl	$806, %eax	#, tmp125
	ja	.L992	#,
	movl	%eax, %eax	# tmp125, tmp126
	movq	.L994(,%rax,8), %rax	#, tmp127
	jmp	*%rax	# tmp127
	.section	.rodata
	.align 8
	.align 4
.L994:
	.quad	.L993
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L996
	.quad	.L996
	.quad	.L996
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L996
	.quad	.L996
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L996
	.quad	.L996
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L997
	.quad	.L996
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L998
	.quad	.L999
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L1000
	.quad	.L1000
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L1001
	.quad	.L1001
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L1002
	.quad	.L1002
	.quad	.L1002
	.quad	.L1002
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L1003
	.quad	.L992
	.quad	.L1004
	.quad	.L1004
	.quad	.L1004
	.quad	.L1004
	.quad	.L1005
	.quad	.L1006
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L1005
	.quad	.L992
	.quad	.L1005
	.quad	.L992
	.quad	.L1005
	.quad	.L992
	.quad	.L1005
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L1005
	.quad	.L1007
	.quad	.L992
	.quad	.L1005
	.quad	.L1007
	.quad	.L992
	.quad	.L1005
	.quad	.L1007
	.quad	.L992
	.quad	.L1005
	.quad	.L1007
	.quad	.L992
	.quad	.L1008
	.quad	.L1008
	.quad	.L1008
	.quad	.L1008
	.quad	.L1008
	.quad	.L1008
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L1009
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L995
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L998
	.quad	.L995
	.quad	.L998
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.quad	.L995
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L998
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L992
	.quad	.L995
	.text
.L1009:
	.loc 1 3492 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp128
	movq	%rax, %rdi	# tmp128,
	call	get_attr_type	#
	cmpl	$1, %eax	#, D.57159
	je	.L1010	#,
	.loc 1 3492 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.850
	cmpl	$5, %eax	#, ix86_cpu.850
	jne	.L1010	#,
	.loc 1 3494 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1010:
	.loc 1 3498 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L1008:
	.loc 1 3507 0
	movq	-8(%rbp), %rax	# insn, tmp129
	movq	%rax, %rdi	# tmp129,
	call	extract_constrain_insn_cached	#
	.loc 1 3508 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.851
	testl	%eax, %eax	# which_alternative.851
	jne	.L1012	#,
	.loc 1 3508 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp130
	movq	%rax, %rdi	# tmp130,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57160
	je	.L1012	#,
	movq	-8(%rbp), %rax	# insn, tmp131
	movq	%rax, %rdi	# tmp131,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57160
	je	.L1012	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.852
	cmpl	$5, %eax	#, ix86_cpu.852
	jne	.L1012	#,
	.loc 1 3510 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1012:
	.loc 1 3514 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L1007:
	.loc 1 3521 0
	movq	-8(%rbp), %rax	# insn, tmp132
	movq	%rax, %rdi	# tmp132,
	call	extract_constrain_insn_cached	#
	.loc 1 3522 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.853
	cmpl	$1, %eax	#, which_alternative.853
	je	.L1013	#,
	.loc 1 3522 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.854
	cmpl	$5, %eax	#, ix86_cpu.854
	jne	.L1013	#,
	.loc 1 3524 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1013:
	.loc 1 3528 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L1006:
	.loc 1 3532 0
	movq	-8(%rbp), %rax	# insn, tmp133
	movq	%rax, %rdi	# tmp133,
	call	extract_constrain_insn_cached	#
	.loc 1 3533 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.855
	cmpl	$1, %eax	#, which_alternative.855
	je	.L1014	#,
	.loc 1 3533 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.856
	cmpl	$2, %eax	#, which_alternative.856
	je	.L1014	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.857
	cmpl	$3, %eax	#, which_alternative.857
	je	.L1014	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.858
	cmpl	$5, %eax	#, ix86_cpu.858
	jne	.L1014	#,
	.loc 1 3535 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1014:
	.loc 1 3539 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L1005:
	.loc 1 3551 0
	movq	-8(%rbp), %rax	# insn, tmp134
	movq	%rax, %rdi	# tmp134,
	call	extract_constrain_insn_cached	#
	.loc 1 3552 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.859
	testl	%eax, %eax	# which_alternative.859
	jne	.L1015	#,
	.loc 1 3552 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.860
	cmpl	$5, %eax	#, ix86_cpu.860
	jne	.L1015	#,
	.loc 1 3554 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1015:
	.loc 1 3558 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L1004:
	.loc 1 3565 0
	movq	-8(%rbp), %rax	# insn, tmp135
	movq	%rax, %rdi	# tmp135,
	call	extract_constrain_insn_cached	#
	.loc 1 3566 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.861
	cmpl	$1, %eax	#, which_alternative.861
	jne	.L1016	#,
	.loc 1 3566 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp136
	movq	%rax, %rdi	# tmp136,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57160
	je	.L1017	#,
	.loc 1 3566 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp137
	movq	%rax, %rdi	# tmp137,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57160
	je	.L1017	#,
.L1016:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.862
	cmpl	$5, %eax	#, ix86_cpu.862
	jne	.L1017	#,
	.loc 1 3568 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1017:
	.loc 1 3572 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L1003:
	.loc 1 3576 0
	movq	-8(%rbp), %rax	# insn, tmp138
	movq	%rax, %rdi	# tmp138,
	call	extract_constrain_insn_cached	#
	.loc 1 3577 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.863
	testl	%eax, %eax	# which_alternative.863
	je	.L1018	#,
	.loc 1 3577 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.864
	cmpl	$1, %eax	#, which_alternative.864
	jne	.L1019	#,
.L1018:
	.loc 1 3577 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp139
	movq	%rax, %rdi	# tmp139,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57160
	je	.L1020	#,
	.loc 1 3577 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp140
	movq	%rax, %rdi	# tmp140,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57160
	jne	.L1019	#,
.L1020:
	.loc 1 3577 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.865
	cmpl	$1, %eax	#, which_alternative.865
	je	.L1021	#,
.L1019:
	.loc 1 3577 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.866
	cmpl	$5, %eax	#, ix86_cpu.866
	jne	.L1021	#,
	.loc 1 3579 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1021:
	.loc 1 3583 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L1002:
	.loc 1 3590 0
	movq	-8(%rbp), %rax	# insn, tmp141
	movq	%rax, %rdi	# tmp141,
	call	extract_constrain_insn_cached	#
	.loc 1 3591 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.867
	cmpl	$3, %eax	#, which_alternative.867
	je	.L1022	#,
	.loc 1 3591 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.868
	cmpl	$4, %eax	#, which_alternative.868
	je	.L1022	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.869
	testl	%eax, %eax	# which_alternative.869
	je	.L1023	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.870
	cmpl	$1, %eax	#, which_alternative.870
	je	.L1023	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.871
	cmpl	$2, %eax	#, which_alternative.871
	jne	.L1024	#,
.L1023:
	.loc 1 3591 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp142
	movq	%rax, %rdi	# tmp142,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57160
	je	.L1022	#,
	.loc 1 3591 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp143
	movq	%rax, %rdi	# tmp143,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57160
	je	.L1022	#,
.L1024:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.872
	cmpl	$5, %eax	#, ix86_cpu.872
	jne	.L1022	#,
	.loc 1 3593 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1022:
	.loc 1 3597 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L1001:
	.loc 1 3602 0
	movq	-8(%rbp), %rax	# insn, tmp144
	movq	%rax, %rdi	# tmp144,
	call	extract_constrain_insn_cached	#
	.loc 1 3603 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.873
	testl	%eax, %eax	# which_alternative.873
	je	.L1025	#,
	.loc 1 3603 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.874
	cmpl	$1, %eax	#, which_alternative.874
	je	.L1025	#,
	.loc 1 3603 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.875
	cmpl	$2, %eax	#, which_alternative.875
	je	.L1025	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.876
	cmpl	$3, %eax	#, which_alternative.876
	je	.L1026	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.877
	cmpl	$4, %eax	#, which_alternative.877
	je	.L1026	#,
.L1025:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.878
	cmpl	$5, %eax	#, ix86_cpu.878
	jne	.L1026	#,
	.loc 1 3605 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1026:
	.loc 1 3609 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L1000:
	.loc 1 3614 0
	movq	-8(%rbp), %rax	# insn, tmp145
	movq	%rax, %rdi	# tmp145,
	call	extract_constrain_insn_cached	#
	.loc 1 3615 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.879
	cmpl	$1, %eax	#, which_alternative.879
	jne	.L1027	#,
	.loc 1 3615 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57161
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57161,
	call	memory_operand	#
	testl	%eax, %eax	# D.57158
	jne	.L1027	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.880
	cmpl	$5, %eax	#, ix86_cpu.880
	jne	.L1027	#,
	.loc 1 3617 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1027:
	.loc 1 3621 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L999:
	.loc 1 3625 0
	movq	-8(%rbp), %rax	# insn, tmp146
	movq	%rax, %rdi	# tmp146,
	call	extract_constrain_insn_cached	#
	.loc 1 3626 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.881
	cmpl	$4, %eax	#, which_alternative.881
	je	.L1028	#,
	.loc 1 3626 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.882
	cmpl	$5, %eax	#, ix86_cpu.882
	jne	.L1028	#,
	.loc 1 3628 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1028:
	.loc 1 3632 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L998:
	.loc 1 3639 0
	movq	-8(%rbp), %rax	# insn, tmp147
	movq	%rax, %rdi	# tmp147,
	call	extract_constrain_insn_cached	#
	.loc 1 3640 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.883
	testl	%eax, %eax	# which_alternative.883
	je	.L1029	#,
	.loc 1 3640 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.884
	cmpl	$1, %eax	#, which_alternative.884
	je	.L1029	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.885
	cmpl	$5, %eax	#, ix86_cpu.885
	jne	.L1029	#,
	.loc 1 3642 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1029:
	.loc 1 3646 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L997:
	.loc 1 3650 0
	movq	-8(%rbp), %rax	# insn, tmp148
	movq	%rax, %rdi	# tmp148,
	call	extract_constrain_insn_cached	#
	.loc 1 3651 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.886
	testl	%eax, %eax	# which_alternative.886
	jne	.L1030	#,
	.loc 1 3651 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57161
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57161,
	call	memory_operand	#
	testl	%eax, %eax	# D.57158
	jne	.L1030	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.887
	cmpl	$5, %eax	#, ix86_cpu.887
	jne	.L1030	#,
	.loc 1 3653 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1030:
	.loc 1 3657 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L996:
	.loc 1 3668 0
	movq	-8(%rbp), %rax	# insn, tmp149
	movq	%rax, %rdi	# tmp149,
	call	extract_insn_cached	#
	.loc 1 3669 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57161
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57161,
	call	memory_operand	#
	testl	%eax, %eax	# D.57158
	jne	.L1031	#,
	.loc 1 3669 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.888
	cmpl	$5, %eax	#, ix86_cpu.888
	jne	.L1031	#,
	.loc 1 3671 0 is_stmt 1
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1031:
	.loc 1 3675 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L993:
	.loc 1 3679 0
	movq	-8(%rbp), %rax	# insn, tmp150
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57161
	movzwl	(%rax), %eax	# _89->code, D.57162
	cmpw	$40, %ax	#, D.57162
	je	.L995	#,
	.loc 1 3680 0
	movq	-8(%rbp), %rax	# insn, tmp151
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57161
	movq	%rax, %rdi	# D.57161,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57158
	jns	.L995	#,
	.loc 1 3681 0
	movq	-8(%rbp), %rax	# insn, tmp152
	movl	$__FUNCTION__.11474, %ecx	#,
	movl	$3681, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp152,
	call	_fatal_insn_not_found	#
.L995:
	.loc 1 3875 0
	movl	$65537, %eax	#, D.57157
	jmp	.L1011	#
.L992:
	.loc 1 3878 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.889
	cmpl	$5, %eax	#, ix86_cpu.889
	jne	.L1032	#,
	.loc 1 3880 0
	movl	$1, %eax	#, D.57157
	jmp	.L1011	#
.L1032:
	.loc 1 3884 0
	movl	$65537, %eax	#, D.57157
.L1011:
	.loc 1 3888 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE18:
	.size	athlon_vectordec_unit_blockage_range, .-athlon_vectordec_unit_blockage_range
	.globl	k6_fpu_unit_ready_cost
	.type	k6_fpu_unit_ready_cost, @function
k6_fpu_unit_ready_cost:
.LFB19:
	.loc 1 3894 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 3895 0
	movq	-8(%rbp), %rax	# insn, tmp137
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57163
	testl	%eax, %eax	# D.57163
	js	.L1034	#,
	.loc 1 3895 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp138
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.890
	jmp	.L1035	#
.L1034:
	.loc 1 3895 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp139
	movq	%rax, %rdi	# tmp139,
	call	recog_memoized_1	#
.L1035:
	.loc 1 3895 0 discriminator 3
	addl	$1, %eax	#, tmp140
	cmpl	$559, %eax	#, tmp140
	ja	.L1036	#,
	movl	%eax, %eax	# tmp140, tmp141
	movq	.L1038(,%rax,8), %rax	#, tmp142
	jmp	*%rax	# tmp142
	.section	.rodata
	.align 8
	.align 4
.L1038:
	.quad	.L1037
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1039
	.quad	.L1039
	.quad	.L1039
	.quad	.L1036
	.quad	.L1039
	.quad	.L1039
	.quad	.L1036
	.quad	.L1036
	.quad	.L1039
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1039
	.quad	.L1040
	.quad	.L1036
	.quad	.L1039
	.quad	.L1040
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1041
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1041
	.quad	.L1041
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1041
	.quad	.L1041
	.quad	.L1041
	.quad	.L1041
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1042
	.quad	.L1036
	.quad	.L1039
	.quad	.L1039
	.quad	.L1039
	.quad	.L1039
	.quad	.L1040
	.quad	.L1040
	.quad	.L1043
	.quad	.L1039
	.quad	.L1036
	.quad	.L1040
	.quad	.L1039
	.quad	.L1040
	.quad	.L1039
	.quad	.L1040
	.quad	.L1039
	.quad	.L1040
	.quad	.L1039
	.quad	.L1039
	.quad	.L1039
	.quad	.L1039
	.quad	.L1036
	.quad	.L1036
	.quad	.L1039
	.quad	.L1039
	.quad	.L1039
	.quad	.L1036
	.quad	.L1036
	.quad	.L1039
	.quad	.L1039
	.quad	.L1039
	.quad	.L1036
	.quad	.L1036
	.quad	.L1040
	.quad	.L1040
	.quad	.L1036
	.quad	.L1040
	.quad	.L1040
	.quad	.L1036
	.quad	.L1040
	.quad	.L1040
	.quad	.L1036
	.quad	.L1040
	.quad	.L1040
	.quad	.L1036
	.quad	.L1040
	.quad	.L1040
	.quad	.L1040
	.quad	.L1040
	.quad	.L1040
	.quad	.L1040
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1036
	.quad	.L1044
	.quad	.L1045
	.quad	.L1036
	.quad	.L1044
	.quad	.L1045
	.quad	.L1036
	.quad	.L1046
	.quad	.L1047
	.quad	.L1048
	.quad	.L1049
	.quad	.L1036
	.quad	.L1048
	.quad	.L1048
	.quad	.L1050
	.quad	.L1051
	.quad	.L1036
	.quad	.L1050
	.quad	.L1050
	.quad	.L1050
	.quad	.L1050
	.quad	.L1052
	.quad	.L1053
	.quad	.L1052
	.quad	.L1053
	.quad	.L1052
	.quad	.L1053
	.quad	.L1052
	.quad	.L1053
	.quad	.L1052
	.quad	.L1053
	.quad	.L1052
	.quad	.L1053
	.quad	.L1052
	.quad	.L1053
	.text
.L1053:
	.loc 1 3904 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp143
	movq	%rax, %rdi	# tmp143,
	call	extract_insn_cached	#
	.loc 1 3905 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	je	.L1054	#,
	.loc 1 3905 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.891
	cmpl	$4, %eax	#, ix86_cpu.891
	je	.L1055	#,
.L1054:
	.loc 1 3905 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp144
	movq	%rax, %rdi	# tmp144,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57165
	jne	.L1056	#,
	.loc 1 3905 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.892
	cmpl	$4, %eax	#, ix86_cpu.892
	jne	.L1056	#,
.L1055:
	.loc 1 3907 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1056:
	.loc 1 3911 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1052:
	.loc 1 3921 0
	movq	-8(%rbp), %rax	# insn, tmp145
	movq	%rax, %rdi	# tmp145,
	call	extract_insn_cached	#
	.loc 1 3922 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	je	.L1058	#,
	.loc 1 3922 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.893
	cmpl	$4, %eax	#, ix86_cpu.893
	je	.L1059	#,
.L1058:
	.loc 1 3922 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp146
	movq	%rax, %rdi	# tmp146,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57165
	jne	.L1060	#,
	.loc 1 3922 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.894
	cmpl	$4, %eax	#, ix86_cpu.894
	jne	.L1060	#,
.L1059:
	.loc 1 3924 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1060:
	.loc 1 3928 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1051:
	.loc 1 3932 0
	movq	-8(%rbp), %rax	# insn, tmp147
	movq	%rax, %rdi	# tmp147,
	call	extract_constrain_insn_cached	#
	.loc 1 3933 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.895
	cmpl	$2, %eax	#, which_alternative.895
	je	.L1061	#,
	.loc 1 3933 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	je	.L1061	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.896
	cmpl	$4, %eax	#, ix86_cpu.896
	je	.L1062	#,
.L1061:
	.loc 1 3933 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp148
	movq	%rax, %rdi	# tmp148,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57165
	jne	.L1063	#,
	.loc 1 3933 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.897
	cmpl	$4, %eax	#, ix86_cpu.897
	jne	.L1063	#,
.L1062:
	.loc 1 3935 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1063:
	.loc 1 3939 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1050:
	.loc 1 3947 0
	movq	-8(%rbp), %rax	# insn, tmp149
	movq	%rax, %rdi	# tmp149,
	call	extract_insn_cached	#
	.loc 1 3948 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	je	.L1064	#,
	.loc 1 3948 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.898
	cmpl	$4, %eax	#, ix86_cpu.898
	je	.L1065	#,
.L1064:
	.loc 1 3948 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp150
	movq	%rax, %rdi	# tmp150,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57165
	jne	.L1066	#,
	.loc 1 3948 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.899
	cmpl	$4, %eax	#, ix86_cpu.899
	jne	.L1066	#,
.L1065:
	.loc 1 3950 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1066:
	.loc 1 3954 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1049:
	.loc 1 3958 0
	movq	-8(%rbp), %rax	# insn, tmp151
	movq	%rax, %rdi	# tmp151,
	call	extract_constrain_insn_cached	#
	.loc 1 3959 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.900
	cmpl	$2, %eax	#, which_alternative.900
	je	.L1067	#,
	.loc 1 3959 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	je	.L1067	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.901
	cmpl	$4, %eax	#, ix86_cpu.901
	je	.L1068	#,
.L1067:
	.loc 1 3959 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp152
	movq	%rax, %rdi	# tmp152,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57165
	jne	.L1069	#,
	.loc 1 3959 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.902
	cmpl	$4, %eax	#, ix86_cpu.902
	jne	.L1069	#,
.L1068:
	.loc 1 3961 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1069:
	.loc 1 3965 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1048:
	.loc 1 3971 0
	movq	-8(%rbp), %rax	# insn, tmp153
	movq	%rax, %rdi	# tmp153,
	call	extract_insn_cached	#
	.loc 1 3972 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	je	.L1070	#,
	.loc 1 3972 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.903
	cmpl	$4, %eax	#, ix86_cpu.903
	je	.L1071	#,
.L1070:
	.loc 1 3972 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp154
	movq	%rax, %rdi	# tmp154,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57165
	jne	.L1072	#,
	.loc 1 3972 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.904
	cmpl	$4, %eax	#, ix86_cpu.904
	jne	.L1072	#,
.L1071:
	.loc 1 3974 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1072:
	.loc 1 3978 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1047:
	.loc 1 3982 0
	movq	-8(%rbp), %rax	# insn, tmp155
	movq	%rax, %rdi	# tmp155,
	call	extract_insn_cached	#
	.loc 1 3983 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	je	.L1073	#,
	.loc 1 3983 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.905
	cmpl	$4, %eax	#, ix86_cpu.905
	je	.L1074	#,
.L1073:
	.loc 1 3983 0 discriminator 2
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	jne	.L1075	#,
	.loc 1 3983 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.906
	cmpl	$4, %eax	#, ix86_cpu.906
	jne	.L1075	#,
.L1074:
	.loc 1 3985 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1075:
	.loc 1 3989 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1046:
	.loc 1 3993 0
	movq	-8(%rbp), %rax	# insn, tmp156
	movq	%rax, %rdi	# tmp156,
	call	extract_insn_cached	#
	.loc 1 3994 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	je	.L1076	#,
	.loc 1 3994 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.907
	cmpl	$4, %eax	#, ix86_cpu.907
	je	.L1077	#,
.L1076:
	.loc 1 3994 0 discriminator 2
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	jne	.L1078	#,
	.loc 1 3994 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.908
	cmpl	$4, %eax	#, ix86_cpu.908
	jne	.L1078	#,
.L1077:
	.loc 1 3996 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1078:
	.loc 1 4000 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1045:
	.loc 1 4005 0
	movq	-8(%rbp), %rax	# insn, tmp157
	movq	%rax, %rdi	# tmp157,
	call	extract_constrain_insn_cached	#
	.loc 1 4006 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.909
	testl	%eax, %eax	# which_alternative.909
	jne	.L1079	#,
	.loc 1 4006 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	je	.L1079	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.910
	cmpl	$4, %eax	#, ix86_cpu.910
	je	.L1080	#,
.L1079:
	.loc 1 4006 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.911
	testl	%eax, %eax	# which_alternative.911
	jne	.L1081	#,
	.loc 1 4006 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	jne	.L1081	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.912
	cmpl	$4, %eax	#, ix86_cpu.912
	jne	.L1081	#,
.L1080:
	.loc 1 4008 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1081:
	.loc 1 4012 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1044:
	.loc 1 4017 0
	movq	-8(%rbp), %rax	# insn, tmp158
	movq	%rax, %rdi	# tmp158,
	call	extract_insn_cached	#
	.loc 1 4018 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	je	.L1082	#,
	.loc 1 4018 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.913
	cmpl	$4, %eax	#, ix86_cpu.913
	je	.L1083	#,
.L1082:
	.loc 1 4018 0 discriminator 2
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57164
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57164,
	call	mult_operator	#
	testl	%eax, %eax	# D.57163
	jne	.L1084	#,
	.loc 1 4018 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.914
	cmpl	$4, %eax	#, ix86_cpu.914
	jne	.L1084	#,
.L1083:
	.loc 1 4020 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1084:
	.loc 1 4024 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1043:
	.loc 1 4028 0
	movq	-8(%rbp), %rax	# insn, tmp159
	movq	%rax, %rdi	# tmp159,
	call	extract_constrain_insn_cached	#
	.loc 1 4029 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.915
	cmpl	$1, %eax	#, which_alternative.915
	jne	.L1085	#,
	.loc 1 4029 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.916
	cmpl	$4, %eax	#, ix86_cpu.916
	jne	.L1085	#,
	.loc 1 4031 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1085:
	.loc 1 4035 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1042:
	.loc 1 4039 0
	movq	-8(%rbp), %rax	# insn, tmp160
	movq	%rax, %rdi	# tmp160,
	call	extract_constrain_insn_cached	#
	.loc 1 4040 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.917
	testl	%eax, %eax	# which_alternative.917
	je	.L1086	#,
	.loc 1 4040 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.918
	cmpl	$1, %eax	#, which_alternative.918
	jne	.L1087	#,
.L1086:
	.loc 1 4040 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.919
	cmpl	$4, %eax	#, ix86_cpu.919
	jne	.L1087	#,
	.loc 1 4042 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1087:
	.loc 1 4046 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1041:
	.loc 1 4056 0
	movq	-8(%rbp), %rax	# insn, tmp161
	movq	%rax, %rdi	# tmp161,
	call	extract_constrain_insn_cached	#
	.loc 1 4057 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.920
	testl	%eax, %eax	# which_alternative.920
	je	.L1088	#,
	.loc 1 4057 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.921
	cmpl	$1, %eax	#, which_alternative.921
	je	.L1088	#,
	.loc 1 4057 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.922
	cmpl	$2, %eax	#, which_alternative.922
	jne	.L1089	#,
.L1088:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.923
	cmpl	$4, %eax	#, ix86_cpu.923
	jne	.L1089	#,
	.loc 1 4059 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1089:
	.loc 1 4063 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1040:
	.loc 1 4088 0
	movq	-8(%rbp), %rax	# insn, tmp162
	movq	%rax, %rdi	# tmp162,
	call	extract_constrain_insn_cached	#
	.loc 1 4089 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.924
	testl	%eax, %eax	# which_alternative.924
	jne	.L1090	#,
	.loc 1 4089 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.925
	cmpl	$4, %eax	#, ix86_cpu.925
	jne	.L1090	#,
	.loc 1 4091 0 is_stmt 1
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1090:
	.loc 1 4095 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1039:
	.loc 1 4124 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.926
	cmpl	$4, %eax	#, ix86_cpu.926
	jne	.L1091	#,
	.loc 1 4126 0
	movl	$2, %eax	#, D.57163
	jmp	.L1057	#
.L1091:
	.loc 1 4130 0
	movl	$56, %eax	#, D.57163
	jmp	.L1057	#
.L1037:
	.loc 1 4134 0
	movq	-8(%rbp), %rax	# insn, tmp163
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57164
	movzwl	(%rax), %eax	# _107->code, D.57166
	cmpw	$40, %ax	#, D.57166
	je	.L1036	#,
	.loc 1 4135 0
	movq	-8(%rbp), %rax	# insn, tmp164
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57164
	movq	%rax, %rdi	# D.57164,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57163
	jns	.L1036	#,
	.loc 1 4136 0
	movq	-8(%rbp), %rax	# insn, tmp165
	movl	$__FUNCTION__.11762, %ecx	#,
	movl	$4136, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp165,
	call	_fatal_insn_not_found	#
.L1036:
	.loc 1 4138 0
	movl	$56, %eax	#, D.57163
.L1057:
	.loc 1 4141 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE19:
	.size	k6_fpu_unit_ready_cost, .-k6_fpu_unit_ready_cost
	.globl	k6_fpu_unit_blockage_range
	.type	k6_fpu_unit_blockage_range, @function
k6_fpu_unit_blockage_range:
.LFB20:
	.loc 1 4147 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 4148 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57167
	testl	%eax, %eax	# D.57167
	js	.L1093	#,
	.loc 1 4148 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.927
	jmp	.L1094	#
.L1093:
	.loc 1 4148 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1094:
	.loc 1 4148 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.927
	jne	.L1095	#,
	.loc 1 4151 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57168
	movzwl	(%rax), %eax	# _6->code, D.57169
	cmpw	$40, %ax	#, D.57169
	je	.L1095	#,
	.loc 1 4152 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57168
	movq	%rax, %rdi	# D.57168,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57167
	jns	.L1095	#,
	.loc 1 4153 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.11770, %ecx	#,
	movl	$4153, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1095:
	.loc 1 4155 0
	movl	$131128, %eax	#, D.57170
	.loc 1 4158 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE20:
	.size	k6_fpu_unit_blockage_range, .-k6_fpu_unit_blockage_range
	.globl	k6_store_unit_ready_cost
	.type	k6_store_unit_ready_cost, @function
k6_store_unit_ready_cost:
.LFB21:
	.loc 1 4164 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 4165 0
	movq	-8(%rbp), %rax	# insn, tmp281
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57171
	testl	%eax, %eax	# D.57171
	js	.L1099	#,
	.loc 1 4165 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp282
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.928
	jmp	.L1100	#
.L1099:
	.loc 1 4165 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp283
	movq	%rax, %rdi	# tmp283,
	call	recog_memoized_1	#
.L1100:
	.loc 1 4165 0 discriminator 3
	addl	$1, %eax	#, tmp284
	cmpl	$806, %eax	#, tmp284
	ja	.L1101	#,
	movl	%eax, %eax	# tmp284, tmp285
	movq	.L1103(,%rax,8), %rax	#, tmp286
	jmp	*%rax	# tmp286
	.section	.rodata
	.align 8
	.align 4
.L1103:
	.quad	.L1102
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1105
	.quad	.L1105
	.quad	.L1105
	.quad	.L1106
	.quad	.L1106
	.quad	.L1107
	.quad	.L1107
	.quad	.L1108
	.quad	.L1109
	.quad	.L1104
	.quad	.L1101
	.quad	.L1105
	.quad	.L1105
	.quad	.L1101
	.quad	.L1109
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1107
	.quad	.L1105
	.quad	.L1105
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1107
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1109
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1110
	.quad	.L1105
	.quad	.L1106
	.quad	.L1106
	.quad	.L1107
	.quad	.L1107
	.quad	.L1101
	.quad	.L1111
	.quad	.L1109
	.quad	.L1104
	.quad	.L1101
	.quad	.L1112
	.quad	.L1112
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1107
	.quad	.L1101
	.quad	.L1107
	.quad	.L1101
	.quad	.L1101
	.quad	.L1107
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1109
	.quad	.L1109
	.quad	.L1109
	.quad	.L1101
	.quad	.L1101
	.quad	.L1109
	.quad	.L1109
	.quad	.L1109
	.quad	.L1101
	.quad	.L1101
	.quad	.L1109
	.quad	.L1109
	.quad	.L1109
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1113
	.quad	.L1113
	.quad	.L1113
	.quad	.L1113
	.quad	.L1113
	.quad	.L1113
	.quad	.L1113
	.quad	.L1113
	.quad	.L1113
	.quad	.L1113
	.quad	.L1114
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1115
	.quad	.L1116
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1117
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1118
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1107
	.quad	.L1101
	.quad	.L1107
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1107
	.quad	.L1101
	.quad	.L1107
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1107
	.quad	.L1119
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1119
	.quad	.L1119
	.quad	.L1101
	.quad	.L1101
	.quad	.L1119
	.quad	.L1101
	.quad	.L1101
	.quad	.L1117
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1106
	.quad	.L1106
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1120
	.quad	.L1121
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1101
	.quad	.L1104
	.quad	.L1104
	.quad	.L1109
	.quad	.L1104
	.quad	.L1109
	.text
.L1121:
	.loc 1 4168 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp287
	movq	%rax, %rdi	# tmp287,
	call	extract_constrain_insn_cached	#
	.loc 1 4169 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.929
	cmpl	$1, %eax	#, which_alternative.929
	jne	.L1122	#,
	.loc 1 4169 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57172
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	const0_operand	#
	testl	%eax, %eax	# D.57171
	jne	.L1122	#,
	movq	-8(%rbp), %rax	# insn, tmp288
	movq	%rax, %rdi	# tmp288,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1123	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.930
	cmpl	$4, %eax	#, ix86_cpu.930
	je	.L1124	#,
.L1123:
	.loc 1 4169 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp289
	movq	%rax, %rdi	# tmp289,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1125	#,
	.loc 1 4169 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.931
	cmpl	$4, %eax	#, ix86_cpu.931
	je	.L1124	#,
.L1125:
	.loc 1 4169 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp290
	movq	%rax, %rdi	# tmp290,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	je	.L1122	#,
	.loc 1 4169 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp291
	movq	%rax, %rdi	# tmp291,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	je	.L1122	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.932
	cmpl	$4, %eax	#, ix86_cpu.932
	jne	.L1122	#,
.L1124:
	.loc 1 4171 0 is_stmt 1
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1122:
	.loc 1 4173 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.933
	cmpl	$1, %eax	#, which_alternative.933
	jne	.L1127	#,
	.loc 1 4173 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57172
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	const0_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1128	#,
.L1127:
	.loc 1 4173 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp292
	movq	%rax, %rdi	# tmp292,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1129	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.934
	cmpl	$4, %eax	#, ix86_cpu.934
	je	.L1130	#,
.L1129:
	.loc 1 4173 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp293
	movq	%rax, %rdi	# tmp293,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1128	#,
	.loc 1 4173 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.935
	cmpl	$4, %eax	#, ix86_cpu.935
	jne	.L1128	#,
.L1130:
	.loc 1 4175 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1128:
	.loc 1 4179 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1120:
	.loc 1 4183 0
	movq	-8(%rbp), %rax	# insn, tmp294
	movq	%rax, %rdi	# tmp294,
	call	extract_constrain_insn_cached	#
	.loc 1 4184 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.936
	cmpl	$1, %eax	#, which_alternative.936
	jne	.L1131	#,
	.loc 1 4184 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57172
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	const0_operand	#
	testl	%eax, %eax	# D.57171
	jne	.L1131	#,
	movq	-8(%rbp), %rax	# insn, tmp295
	movq	%rax, %rdi	# tmp295,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1132	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.937
	cmpl	$4, %eax	#, ix86_cpu.937
	je	.L1133	#,
.L1132:
	.loc 1 4184 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp296
	movq	%rax, %rdi	# tmp296,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1134	#,
	.loc 1 4184 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.938
	cmpl	$4, %eax	#, ix86_cpu.938
	je	.L1133	#,
.L1134:
	.loc 1 4184 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp297
	movq	%rax, %rdi	# tmp297,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	je	.L1131	#,
	.loc 1 4184 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp298
	movq	%rax, %rdi	# tmp298,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	je	.L1131	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.939
	cmpl	$4, %eax	#, ix86_cpu.939
	jne	.L1131	#,
.L1133:
	.loc 1 4186 0 is_stmt 1
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1131:
	.loc 1 4188 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.940
	cmpl	$1, %eax	#, which_alternative.940
	jne	.L1135	#,
	.loc 1 4188 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57172
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	const0_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1136	#,
.L1135:
	.loc 1 4188 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp299
	movq	%rax, %rdi	# tmp299,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1137	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.941
	cmpl	$4, %eax	#, ix86_cpu.941
	je	.L1138	#,
.L1137:
	.loc 1 4188 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp300
	movq	%rax, %rdi	# tmp300,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1136	#,
	.loc 1 4188 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.942
	cmpl	$4, %eax	#, ix86_cpu.942
	jne	.L1136	#,
.L1138:
	.loc 1 4190 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1136:
	.loc 1 4194 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1119:
	.loc 1 4201 0
	movq	-8(%rbp), %rax	# insn, tmp301
	movq	%rax, %rdi	# tmp301,
	call	extract_constrain_insn_cached	#
	.loc 1 4202 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.943
	cmpl	$1, %eax	#, which_alternative.943
	jne	.L1139	#,
	.loc 1 4202 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp302
	movq	%rax, %rdi	# tmp302,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1140	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.944
	cmpl	$4, %eax	#, ix86_cpu.944
	je	.L1141	#,
.L1140:
	.loc 1 4202 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp303
	movq	%rax, %rdi	# tmp303,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1142	#,
	.loc 1 4202 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.945
	cmpl	$4, %eax	#, ix86_cpu.945
	je	.L1141	#,
.L1142:
	.loc 1 4202 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp304
	movq	%rax, %rdi	# tmp304,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	je	.L1139	#,
	.loc 1 4202 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp305
	movq	%rax, %rdi	# tmp305,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	je	.L1139	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.946
	cmpl	$4, %eax	#, ix86_cpu.946
	jne	.L1139	#,
.L1141:
	.loc 1 4204 0 is_stmt 1
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1139:
	.loc 1 4206 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.947
	testl	%eax, %eax	# which_alternative.947
	jne	.L1143	#,
	.loc 1 4206 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp306
	movq	%rax, %rdi	# tmp306,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1144	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.948
	cmpl	$4, %eax	#, ix86_cpu.948
	je	.L1145	#,
.L1144:
	.loc 1 4206 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp307
	movq	%rax, %rdi	# tmp307,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1143	#,
	.loc 1 4206 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.949
	cmpl	$4, %eax	#, ix86_cpu.949
	jne	.L1143	#,
.L1145:
	.loc 1 4208 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1143:
	.loc 1 4212 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1118:
	.loc 1 4216 0
	movq	-8(%rbp), %rax	# insn, tmp308
	movq	%rax, %rdi	# tmp308,
	call	extract_constrain_insn_cached	#
	.loc 1 4217 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.950
	cmpl	$3, %eax	#, which_alternative.950
	jne	.L1146	#,
	.loc 1 4217 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp309
	movq	%rax, %rdi	# tmp309,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1147	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.951
	cmpl	$4, %eax	#, ix86_cpu.951
	je	.L1148	#,
.L1147:
	.loc 1 4217 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp310
	movq	%rax, %rdi	# tmp310,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1149	#,
	.loc 1 4217 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.952
	cmpl	$4, %eax	#, ix86_cpu.952
	je	.L1148	#,
.L1149:
	.loc 1 4217 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp311
	movq	%rax, %rdi	# tmp311,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	je	.L1146	#,
	.loc 1 4217 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp312
	movq	%rax, %rdi	# tmp312,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	je	.L1146	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.953
	cmpl	$4, %eax	#, ix86_cpu.953
	jne	.L1146	#,
.L1148:
	.loc 1 4219 0 is_stmt 1
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1146:
	.loc 1 4221 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.954
	cmpl	$3, %eax	#, which_alternative.954
	je	.L1150	#,
	.loc 1 4221 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp313
	movq	%rax, %rdi	# tmp313,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1151	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.955
	cmpl	$4, %eax	#, ix86_cpu.955
	je	.L1152	#,
.L1151:
	.loc 1 4221 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp314
	movq	%rax, %rdi	# tmp314,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1150	#,
	.loc 1 4221 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.956
	cmpl	$4, %eax	#, ix86_cpu.956
	jne	.L1150	#,
.L1152:
	.loc 1 4223 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1150:
	.loc 1 4227 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1117:
	.loc 1 4232 0
	movq	-8(%rbp), %rax	# insn, tmp315
	movq	%rax, %rdi	# tmp315,
	call	extract_constrain_insn_cached	#
	.loc 1 4233 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.957
	cmpl	$2, %eax	#, which_alternative.957
	jne	.L1153	#,
	.loc 1 4233 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp316
	movq	%rax, %rdi	# tmp316,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1154	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.958
	cmpl	$4, %eax	#, ix86_cpu.958
	je	.L1155	#,
.L1154:
	.loc 1 4233 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp317
	movq	%rax, %rdi	# tmp317,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1156	#,
	.loc 1 4233 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.959
	cmpl	$4, %eax	#, ix86_cpu.959
	je	.L1155	#,
.L1156:
	.loc 1 4233 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp318
	movq	%rax, %rdi	# tmp318,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	je	.L1153	#,
	.loc 1 4233 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp319
	movq	%rax, %rdi	# tmp319,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	je	.L1153	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.960
	cmpl	$4, %eax	#, ix86_cpu.960
	jne	.L1153	#,
.L1155:
	.loc 1 4235 0 is_stmt 1
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1153:
	.loc 1 4237 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.961
	cmpl	$2, %eax	#, which_alternative.961
	je	.L1157	#,
	.loc 1 4237 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp320
	movq	%rax, %rdi	# tmp320,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1158	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.962
	cmpl	$4, %eax	#, ix86_cpu.962
	je	.L1159	#,
.L1158:
	.loc 1 4237 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp321
	movq	%rax, %rdi	# tmp321,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1157	#,
	.loc 1 4237 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.963
	cmpl	$4, %eax	#, ix86_cpu.963
	jne	.L1157	#,
.L1159:
	.loc 1 4239 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1157:
	.loc 1 4243 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1116:
	.loc 1 4247 0
	movq	-8(%rbp), %rax	# insn, tmp322
	movq	%rax, %rdi	# tmp322,
	call	extract_constrain_insn_cached	#
	.loc 1 4248 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.964
	testl	%eax, %eax	# which_alternative.964
	jne	.L1160	#,
	.loc 1 4248 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57172
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1161	#,
.L1160:
	.loc 1 4248 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp323
	movq	%rax, %rdi	# tmp323,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1162	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.965
	cmpl	$4, %eax	#, ix86_cpu.965
	je	.L1163	#,
.L1162:
	.loc 1 4248 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp324
	movq	%rax, %rdi	# tmp324,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1164	#,
	.loc 1 4248 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.966
	cmpl	$4, %eax	#, ix86_cpu.966
	je	.L1163	#,
.L1164:
	.loc 1 4248 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp325
	movq	%rax, %rdi	# tmp325,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	je	.L1161	#,
	.loc 1 4248 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp326
	movq	%rax, %rdi	# tmp326,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	je	.L1161	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.967
	cmpl	$4, %eax	#, ix86_cpu.967
	jne	.L1161	#,
.L1163:
	.loc 1 4250 0 is_stmt 1
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1161:
	.loc 1 4252 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.968
	testl	%eax, %eax	# which_alternative.968
	jne	.L1165	#,
	.loc 1 4252 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57172
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57171
	jne	.L1165	#,
	movq	-8(%rbp), %rax	# insn, tmp327
	movq	%rax, %rdi	# tmp327,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1166	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.969
	cmpl	$4, %eax	#, ix86_cpu.969
	je	.L1167	#,
.L1166:
	.loc 1 4252 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp328
	movq	%rax, %rdi	# tmp328,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1165	#,
	.loc 1 4252 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.970
	cmpl	$4, %eax	#, ix86_cpu.970
	jne	.L1165	#,
.L1167:
	.loc 1 4254 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1165:
	.loc 1 4258 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1115:
	.loc 1 4262 0
	movq	-8(%rbp), %rax	# insn, tmp329
	movq	%rax, %rdi	# tmp329,
	call	extract_constrain_insn_cached	#
	.loc 1 4263 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.971
	cmpl	$2, %eax	#, which_alternative.971
	je	.L1168	#,
	.loc 1 4263 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57172
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1169	#,
.L1168:
	.loc 1 4263 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp330
	movq	%rax, %rdi	# tmp330,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1170	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.972
	cmpl	$4, %eax	#, ix86_cpu.972
	je	.L1171	#,
.L1170:
	.loc 1 4263 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp331
	movq	%rax, %rdi	# tmp331,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1172	#,
	.loc 1 4263 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.973
	cmpl	$4, %eax	#, ix86_cpu.973
	je	.L1171	#,
.L1172:
	.loc 1 4263 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp332
	movq	%rax, %rdi	# tmp332,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	je	.L1169	#,
	.loc 1 4263 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp333
	movq	%rax, %rdi	# tmp333,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	je	.L1169	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.974
	cmpl	$4, %eax	#, ix86_cpu.974
	jne	.L1169	#,
.L1171:
	.loc 1 4265 0 is_stmt 1
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1169:
	.loc 1 4267 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.975
	cmpl	$2, %eax	#, which_alternative.975
	je	.L1173	#,
	.loc 1 4267 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57172
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57171
	jne	.L1173	#,
	movq	-8(%rbp), %rax	# insn, tmp334
	movq	%rax, %rdi	# tmp334,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1174	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.976
	cmpl	$4, %eax	#, ix86_cpu.976
	je	.L1175	#,
.L1174:
	.loc 1 4267 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp335
	movq	%rax, %rdi	# tmp335,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1173	#,
	.loc 1 4267 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.977
	cmpl	$4, %eax	#, ix86_cpu.977
	jne	.L1173	#,
.L1175:
	.loc 1 4269 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1173:
	.loc 1 4273 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1114:
	.loc 1 4277 0
	movq	-8(%rbp), %rax	# insn, tmp336
	movq	%rax, %rdi	# tmp336,
	call	extract_constrain_insn_cached	#
	.loc 1 4278 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.978
	cmpl	$2, %eax	#, which_alternative.978
	je	.L1176	#,
	.loc 1 4278 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57172
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1177	#,
.L1176:
	.loc 1 4278 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp337
	movq	%rax, %rdi	# tmp337,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1178	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.979
	cmpl	$4, %eax	#, ix86_cpu.979
	je	.L1179	#,
.L1178:
	.loc 1 4278 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp338
	movq	%rax, %rdi	# tmp338,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1180	#,
	.loc 1 4278 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.980
	cmpl	$4, %eax	#, ix86_cpu.980
	je	.L1179	#,
.L1180:
	.loc 1 4278 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp339
	movq	%rax, %rdi	# tmp339,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	je	.L1177	#,
	.loc 1 4278 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp340
	movq	%rax, %rdi	# tmp340,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	je	.L1177	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.981
	cmpl	$4, %eax	#, ix86_cpu.981
	jne	.L1177	#,
.L1179:
	.loc 1 4280 0 is_stmt 1
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1177:
	.loc 1 4282 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.982
	cmpl	$2, %eax	#, which_alternative.982
	je	.L1181	#,
	.loc 1 4282 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57172
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57171
	jne	.L1181	#,
	movq	-8(%rbp), %rax	# insn, tmp341
	movq	%rax, %rdi	# tmp341,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1182	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.983
	cmpl	$4, %eax	#, ix86_cpu.983
	je	.L1183	#,
.L1182:
	.loc 1 4282 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp342
	movq	%rax, %rdi	# tmp342,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1181	#,
	.loc 1 4282 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.984
	cmpl	$4, %eax	#, ix86_cpu.984
	jne	.L1181	#,
.L1183:
	.loc 1 4284 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1181:
	.loc 1 4288 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1113:
	.loc 1 4301 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.985
	cmpl	$4, %eax	#, ix86_cpu.985
	jne	.L1184	#,
	.loc 1 4303 0
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1184:
	.loc 1 4307 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1112:
	.loc 1 4312 0
	movq	-8(%rbp), %rax	# insn, tmp343
	movq	%rax, %rdi	# tmp343,
	call	extract_constrain_insn_cached	#
	.loc 1 4313 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.986
	cmpl	$1, %eax	#, which_alternative.986
	jne	.L1185	#,
	.loc 1 4313 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	memory_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1186	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.987
	cmpl	$4, %eax	#, ix86_cpu.987
	je	.L1187	#,
.L1186:
	.loc 1 4313 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	memory_operand	#
	testl	%eax, %eax	# D.57171
	jne	.L1185	#,
	.loc 1 4313 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.988
	cmpl	$4, %eax	#, ix86_cpu.988
	jne	.L1185	#,
.L1187:
	.loc 1 4315 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1185:
	.loc 1 4319 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1111:
	.loc 1 4323 0
	movq	-8(%rbp), %rax	# insn, tmp344
	movq	%rax, %rdi	# tmp344,
	call	extract_constrain_insn_cached	#
	.loc 1 4324 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.989
	cmpl	$5, %eax	#, which_alternative.989
	je	.L1188	#,
	.loc 1 4324 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.990
	cmpl	$6, %eax	#, which_alternative.990
	je	.L1188	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.991
	cmpl	$7, %eax	#, which_alternative.991
	je	.L1188	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.992
	cmpl	$8, %eax	#, which_alternative.992
	je	.L1188	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.993
	cmpl	$4, %eax	#, which_alternative.993
	je	.L1188	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.994
	testl	%eax, %eax	# flag_pic.994
	je	.L1188	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1188	#,
	movq	-8(%rbp), %rax	# insn, tmp345
	movq	%rax, %rdi	# tmp345,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1189	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.995
	cmpl	$4, %eax	#, ix86_cpu.995
	je	.L1190	#,
.L1189:
	.loc 1 4324 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp346
	movq	%rax, %rdi	# tmp346,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1191	#,
	.loc 1 4324 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.996
	cmpl	$4, %eax	#, ix86_cpu.996
	je	.L1190	#,
.L1191:
	.loc 1 4324 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp347
	movq	%rax, %rdi	# tmp347,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	je	.L1188	#,
	.loc 1 4324 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp348
	movq	%rax, %rdi	# tmp348,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	je	.L1188	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.997
	cmpl	$4, %eax	#, ix86_cpu.997
	jne	.L1188	#,
.L1190:
	.loc 1 4326 0 is_stmt 1
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1188:
	.loc 1 4328 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.998
	cmpl	$5, %eax	#, which_alternative.998
	je	.L1192	#,
	.loc 1 4328 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.999
	cmpl	$6, %eax	#, which_alternative.999
	je	.L1192	#,
	.loc 1 4328 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1000
	cmpl	$7, %eax	#, which_alternative.1000
	je	.L1192	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1001
	cmpl	$8, %eax	#, which_alternative.1001
	je	.L1192	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1002
	cmpl	$4, %eax	#, which_alternative.1002
	je	.L1192	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.1003
	testl	%eax, %eax	# flag_pic.1003
	je	.L1192	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57171
	jne	.L1193	#,
.L1192:
	movq	-8(%rbp), %rax	# insn, tmp349
	movq	%rax, %rdi	# tmp349,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1194	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1004
	cmpl	$4, %eax	#, ix86_cpu.1004
	je	.L1195	#,
.L1194:
	.loc 1 4328 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp350
	movq	%rax, %rdi	# tmp350,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1193	#,
	.loc 1 4328 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1005
	cmpl	$4, %eax	#, ix86_cpu.1005
	jne	.L1193	#,
.L1195:
	.loc 1 4330 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1193:
	.loc 1 4334 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1110:
	.loc 1 4338 0
	movq	-8(%rbp), %rax	# insn, tmp351
	movq	%rax, %rdi	# tmp351,
	call	extract_constrain_insn_cached	#
	.loc 1 4339 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1006
	testl	%eax, %eax	# which_alternative.1006
	jne	.L1196	#,
	.loc 1 4339 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	memory_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1197	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1007
	cmpl	$4, %eax	#, ix86_cpu.1007
	je	.L1198	#,
.L1197:
	.loc 1 4339 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	memory_operand	#
	testl	%eax, %eax	# D.57171
	jne	.L1196	#,
	.loc 1 4339 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1008
	cmpl	$4, %eax	#, ix86_cpu.1008
	jne	.L1196	#,
.L1198:
	.loc 1 4341 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1196:
	.loc 1 4345 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1109:
	.loc 1 4363 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1009
	cmpl	$4, %eax	#, ix86_cpu.1009
	jne	.L1199	#,
	.loc 1 4365 0
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1199:
	.loc 1 4369 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1108:
	.loc 1 4373 0
	movq	-8(%rbp), %rax	# insn, tmp352
	movq	%rax, %rdi	# tmp352,
	call	extract_constrain_insn_cached	#
	.loc 1 4374 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1010
	cmpl	$4, %eax	#, which_alternative.1010
	je	.L1200	#,
	.loc 1 4374 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1011
	cmpl	$5, %eax	#, which_alternative.1011
	je	.L1200	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1012
	cmpl	$6, %eax	#, which_alternative.1012
	je	.L1200	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1013
	cmpl	$7, %eax	#, which_alternative.1013
	je	.L1200	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1014
	cmpl	$8, %eax	#, which_alternative.1014
	je	.L1200	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1015
	cmpl	$9, %eax	#, which_alternative.1015
	je	.L1200	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.1016
	testl	%eax, %eax	# flag_pic.1016
	je	.L1200	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1200	#,
	movq	-8(%rbp), %rax	# insn, tmp353
	movq	%rax, %rdi	# tmp353,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1201	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1017
	cmpl	$4, %eax	#, ix86_cpu.1017
	je	.L1202	#,
.L1201:
	.loc 1 4374 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp354
	movq	%rax, %rdi	# tmp354,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1203	#,
	.loc 1 4374 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1018
	cmpl	$4, %eax	#, ix86_cpu.1018
	je	.L1202	#,
.L1203:
	.loc 1 4374 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp355
	movq	%rax, %rdi	# tmp355,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	je	.L1200	#,
	.loc 1 4374 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp356
	movq	%rax, %rdi	# tmp356,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	je	.L1200	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1019
	cmpl	$4, %eax	#, ix86_cpu.1019
	jne	.L1200	#,
.L1202:
	.loc 1 4376 0 is_stmt 1
	movl	$2, %eax	#, D.57171
	jmp	.L1126	#
.L1200:
	.loc 1 4378 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1020
	cmpl	$4, %eax	#, which_alternative.1020
	je	.L1204	#,
	.loc 1 4378 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1021
	cmpl	$5, %eax	#, which_alternative.1021
	je	.L1204	#,
	.loc 1 4378 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1022
	cmpl	$6, %eax	#, which_alternative.1022
	je	.L1204	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1023
	cmpl	$7, %eax	#, which_alternative.1023
	je	.L1204	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1024
	cmpl	$8, %eax	#, which_alternative.1024
	je	.L1204	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1025
	cmpl	$9, %eax	#, which_alternative.1025
	je	.L1204	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.1026
	testl	%eax, %eax	# flag_pic.1026
	je	.L1204	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57171
	jne	.L1205	#,
.L1204:
	movq	-8(%rbp), %rax	# insn, tmp357
	movq	%rax, %rdi	# tmp357,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1206	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1027
	cmpl	$4, %eax	#, ix86_cpu.1027
	je	.L1207	#,
.L1206:
	.loc 1 4378 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp358
	movq	%rax, %rdi	# tmp358,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1205	#,
	.loc 1 4378 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1028
	cmpl	$4, %eax	#, ix86_cpu.1028
	jne	.L1205	#,
.L1207:
	.loc 1 4380 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1205:
	.loc 1 4384 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1107:
	.loc 1 4420 0
	movq	-8(%rbp), %rax	# insn, tmp359
	movq	%rax, %rdi	# tmp359,
	call	extract_insn_cached	#
	.loc 1 4421 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	memory_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1208	#,
	.loc 1 4421 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1029
	cmpl	$4, %eax	#, ix86_cpu.1029
	je	.L1209	#,
.L1208:
	.loc 1 4421 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp360
	movq	%rax, %rdi	# tmp360,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1210	#,
	.loc 1 4421 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1030
	cmpl	$4, %eax	#, ix86_cpu.1030
	jne	.L1210	#,
.L1209:
	.loc 1 4423 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1210:
	.loc 1 4427 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1106:
	.loc 1 4436 0
	movq	-8(%rbp), %rax	# insn, tmp361
	movq	%rax, %rdi	# tmp361,
	call	extract_insn_cached	#
	.loc 1 4437 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57172
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	memory_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1211	#,
	.loc 1 4437 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1031
	cmpl	$4, %eax	#, ix86_cpu.1031
	jne	.L1211	#,
	.loc 1 4439 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1211:
	.loc 1 4443 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1105:
	.loc 1 4454 0
	movq	-8(%rbp), %rax	# insn, tmp362
	movq	%rax, %rdi	# tmp362,
	call	extract_insn_cached	#
	.loc 1 4455 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	memory_operand	#
	testl	%eax, %eax	# D.57171
	je	.L1212	#,
	.loc 1 4455 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1032
	cmpl	$4, %eax	#, ix86_cpu.1032
	je	.L1213	#,
.L1212:
	.loc 1 4455 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57172
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57172,
	call	memory_operand	#
	testl	%eax, %eax	# D.57171
	jne	.L1214	#,
	.loc 1 4455 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1033
	cmpl	$4, %eax	#, ix86_cpu.1033
	jne	.L1214	#,
.L1213:
	.loc 1 4457 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1214:
	.loc 1 4461 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1102:
	.loc 1 4465 0
	movq	-8(%rbp), %rax	# insn, tmp363
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57172
	movzwl	(%rax), %eax	# _261->code, D.57174
	cmpw	$40, %ax	#, D.57174
	je	.L1104	#,
	.loc 1 4466 0
	movq	-8(%rbp), %rax	# insn, tmp364
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57172
	movq	%rax, %rdi	# D.57172,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57171
	jns	.L1104	#,
	.loc 1 4467 0
	movq	-8(%rbp), %rax	# insn, tmp365
	movl	$__FUNCTION__.11867, %ecx	#,
	movl	$4467, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp365,
	call	_fatal_insn_not_found	#
.L1104:
	.loc 1 4684 0
	movl	$10, %eax	#, D.57171
	jmp	.L1126	#
.L1101:
	.loc 1 4687 0
	movq	-8(%rbp), %rax	# insn, tmp366
	movq	%rax, %rdi	# tmp366,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57173
	jne	.L1215	#,
	.loc 1 4687 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1034
	cmpl	$4, %eax	#, ix86_cpu.1034
	je	.L1216	#,
.L1215:
	.loc 1 4687 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp367
	movq	%rax, %rdi	# tmp367,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57173
	jne	.L1217	#,
	.loc 1 4687 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1035
	cmpl	$4, %eax	#, ix86_cpu.1035
	jne	.L1217	#,
.L1216:
	.loc 1 4689 0 is_stmt 1
	movl	$1, %eax	#, D.57171
	jmp	.L1126	#
.L1217:
	.loc 1 4693 0
	movl	$10, %eax	#, D.57171
.L1126:
	.loc 1 4697 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE21:
	.size	k6_store_unit_ready_cost, .-k6_store_unit_ready_cost
	.globl	k6_store_unit_blockage_range
	.type	k6_store_unit_blockage_range, @function
k6_store_unit_blockage_range:
.LFB22:
	.loc 1 4703 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 4704 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57175
	testl	%eax, %eax	# D.57175
	js	.L1219	#,
	.loc 1 4704 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1036
	jmp	.L1220	#
.L1219:
	.loc 1 4704 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1220:
	.loc 1 4704 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1036
	jne	.L1221	#,
	.loc 1 4707 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57176
	movzwl	(%rax), %eax	# _6->code, D.57177
	cmpw	$40, %ax	#, D.57177
	je	.L1221	#,
	.loc 1 4708 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57176
	movq	%rax, %rdi	# D.57176,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57175
	jns	.L1221	#,
	.loc 1 4709 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.12091, %ecx	#,
	movl	$4709, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1221:
	.loc 1 4711 0
	movl	$65546, %eax	#, D.57178
	.loc 1 4714 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE22:
	.size	k6_store_unit_blockage_range, .-k6_store_unit_blockage_range
	.globl	k6_load_unit_ready_cost
	.type	k6_load_unit_ready_cost, @function
k6_load_unit_ready_cost:
.LFB23:
	.loc 1 4720 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 4721 0
	movq	-8(%rbp), %rax	# insn, tmp100
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57179
	testl	%eax, %eax	# D.57179
	js	.L1225	#,
	.loc 1 4721 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp101
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.1037
	jmp	.L1226	#
.L1225:
	.loc 1 4721 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp102
	movq	%rax, %rdi	# tmp102,
	call	recog_memoized_1	#
.L1226:
	.loc 1 4721 0 discriminator 3
	addl	$1, %eax	#, tmp103
	cmpl	$806, %eax	#, tmp103
	ja	.L1227	#,
	movl	%eax, %eax	# tmp103, tmp104
	movq	.L1229(,%rax,8), %rax	#, tmp105
	jmp	*%rax	# tmp105
	.section	.rodata
	.align 8
	.align 4
.L1229:
	.quad	.L1228
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1233
	.quad	.L1233
	.quad	.L1232
	.quad	.L1232
	.quad	.L1227
	.quad	.L1231
	.quad	.L1234
	.quad	.L1227
	.quad	.L1232
	.quad	.L1232
	.quad	.L1227
	.quad	.L1231
	.quad	.L1234
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1232
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1234
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1235
	.quad	.L1232
	.quad	.L1233
	.quad	.L1233
	.quad	.L1232
	.quad	.L1232
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1234
	.quad	.L1227
	.quad	.L1236
	.quad	.L1236
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1232
	.quad	.L1227
	.quad	.L1232
	.quad	.L1227
	.quad	.L1227
	.quad	.L1232
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1234
	.quad	.L1234
	.quad	.L1234
	.quad	.L1227
	.quad	.L1227
	.quad	.L1234
	.quad	.L1234
	.quad	.L1234
	.quad	.L1227
	.quad	.L1227
	.quad	.L1234
	.quad	.L1234
	.quad	.L1234
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1230
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1232
	.quad	.L1227
	.quad	.L1232
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1232
	.quad	.L1227
	.quad	.L1232
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1232
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1233
	.quad	.L1233
	.quad	.L1227
	.quad	.L1227
	.quad	.L1237
	.quad	.L1237
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1237
	.quad	.L1237
	.quad	.L1237
	.quad	.L1237
	.quad	.L1237
	.quad	.L1227
	.quad	.L1238
	.quad	.L1238
	.quad	.L1238
	.quad	.L1238
	.quad	.L1238
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1237
	.quad	.L1231
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.quad	.L1239
	.quad	.L1239
	.quad	.L1239
	.quad	.L1239
	.quad	.L1239
	.quad	.L1239
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1231
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1227
	.quad	.L1231
	.quad	.L1234
	.quad	.L1231
	.quad	.L1231
	.quad	.L1231
	.text
.L1239:
	.loc 1 4729 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp106
	movq	%rax, %rdi	# tmp106,
	call	extract_insn_cached	#
	.loc 1 4730 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57180
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57180,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57179
	jne	.L1240	#,
	.loc 1 4730 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1038
	cmpl	$4, %eax	#, ix86_cpu.1038
	jne	.L1240	#,
	.loc 1 4732 0 is_stmt 1
	movl	$1, %eax	#, D.57179
	jmp	.L1241	#
.L1240:
	.loc 1 4736 0
	movl	$10, %eax	#, D.57179
	jmp	.L1241	#
.L1238:
	.loc 1 4744 0
	movq	-8(%rbp), %rax	# insn, tmp107
	movq	%rax, %rdi	# tmp107,
	call	extract_insn_cached	#
	.loc 1 4745 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57180
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57180,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57179
	jne	.L1242	#,
	.loc 1 4745 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1039
	cmpl	$4, %eax	#, ix86_cpu.1039
	jne	.L1242	#,
	.loc 1 4747 0 is_stmt 1
	movl	$1, %eax	#, D.57179
	jmp	.L1241	#
.L1242:
	.loc 1 4751 0
	movl	$10, %eax	#, D.57179
	jmp	.L1241	#
.L1237:
	.loc 1 4762 0
	movq	-8(%rbp), %rax	# insn, tmp108
	movq	%rax, %rdi	# tmp108,
	call	extract_insn_cached	#
	.loc 1 4763 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57180
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57180,
	call	memory_operand	#
	testl	%eax, %eax	# D.57179
	je	.L1243	#,
	.loc 1 4763 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1040
	cmpl	$4, %eax	#, ix86_cpu.1040
	jne	.L1243	#,
	.loc 1 4765 0 is_stmt 1
	movl	$1, %eax	#, D.57179
	jmp	.L1241	#
.L1243:
	.loc 1 4769 0
	movl	$10, %eax	#, D.57179
	jmp	.L1241	#
.L1236:
	.loc 1 4774 0
	movq	-8(%rbp), %rax	# insn, tmp109
	movq	%rax, %rdi	# tmp109,
	call	extract_constrain_insn_cached	#
	.loc 1 4775 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1041
	cmpl	$1, %eax	#, which_alternative.1041
	jne	.L1244	#,
	.loc 1 4775 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57180
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57180,
	call	memory_operand	#
	testl	%eax, %eax	# D.57179
	je	.L1244	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1042
	cmpl	$4, %eax	#, ix86_cpu.1042
	jne	.L1244	#,
	.loc 1 4777 0 is_stmt 1
	movl	$1, %eax	#, D.57179
	jmp	.L1241	#
.L1244:
	.loc 1 4781 0
	movl	$10, %eax	#, D.57179
	jmp	.L1241	#
.L1235:
	.loc 1 4785 0
	movq	-8(%rbp), %rax	# insn, tmp110
	movq	%rax, %rdi	# tmp110,
	call	extract_constrain_insn_cached	#
	.loc 1 4786 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1043
	testl	%eax, %eax	# which_alternative.1043
	jne	.L1245	#,
	.loc 1 4786 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57180
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57180,
	call	memory_operand	#
	testl	%eax, %eax	# D.57179
	je	.L1245	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1044
	cmpl	$4, %eax	#, ix86_cpu.1044
	jne	.L1245	#,
	.loc 1 4788 0 is_stmt 1
	movl	$1, %eax	#, D.57179
	jmp	.L1241	#
.L1245:
	.loc 1 4792 0
	movl	$10, %eax	#, D.57179
	jmp	.L1241	#
.L1234:
	.loc 1 4809 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1045
	cmpl	$4, %eax	#, ix86_cpu.1045
	jne	.L1246	#,
	.loc 1 4811 0
	movl	$1, %eax	#, D.57179
	jmp	.L1241	#
.L1246:
	.loc 1 4815 0
	movl	$10, %eax	#, D.57179
	jmp	.L1241	#
.L1233:
	.loc 1 4824 0
	movq	-8(%rbp), %rax	# insn, tmp111
	movq	%rax, %rdi	# tmp111,
	call	extract_insn_cached	#
	.loc 1 4825 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57180
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57180,
	call	memory_operand	#
	testl	%eax, %eax	# D.57179
	je	.L1247	#,
	.loc 1 4825 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1046
	cmpl	$4, %eax	#, ix86_cpu.1046
	je	.L1248	#,
.L1247:
	.loc 1 4825 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57180
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57180,
	call	memory_operand	#
	testl	%eax, %eax	# D.57179
	jne	.L1249	#,
	.loc 1 4825 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1047
	cmpl	$4, %eax	#, ix86_cpu.1047
	jne	.L1249	#,
.L1248:
	.loc 1 4827 0 is_stmt 1
	movl	$1, %eax	#, D.57179
	jmp	.L1241	#
.L1249:
	.loc 1 4831 0
	movl	$10, %eax	#, D.57179
	jmp	.L1241	#
.L1232:
	.loc 1 4875 0
	movq	-8(%rbp), %rax	# insn, tmp112
	movq	%rax, %rdi	# tmp112,
	call	extract_insn_cached	#
	.loc 1 4876 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57180
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57180,
	call	memory_operand	#
	testl	%eax, %eax	# D.57179
	je	.L1250	#,
	.loc 1 4876 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1048
	cmpl	$4, %eax	#, ix86_cpu.1048
	jne	.L1250	#,
	.loc 1 4878 0 is_stmt 1
	movl	$1, %eax	#, D.57179
	jmp	.L1241	#
.L1250:
	.loc 1 4882 0
	movl	$10, %eax	#, D.57179
	jmp	.L1241	#
.L1230:
	.loc 1 4911 0
	movq	-8(%rbp), %rax	# insn, tmp113
	movq	%rax, %rdi	# tmp113,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57181
	jne	.L1251	#,
	.loc 1 4911 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1049
	cmpl	$4, %eax	#, ix86_cpu.1049
	jne	.L1251	#,
	.loc 1 4913 0 is_stmt 1
	movl	$1, %eax	#, D.57179
	jmp	.L1241	#
.L1251:
	.loc 1 4917 0
	movl	$10, %eax	#, D.57179
	jmp	.L1241	#
.L1228:
	.loc 1 4921 0
	movq	-8(%rbp), %rax	# insn, tmp114
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57180
	movzwl	(%rax), %eax	# _54->code, D.57182
	cmpw	$40, %ax	#, D.57182
	je	.L1231	#,
	.loc 1 4922 0
	movq	-8(%rbp), %rax	# insn, tmp115
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57180
	movq	%rax, %rdi	# D.57180,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57179
	jns	.L1231	#,
	.loc 1 4923 0
	movq	-8(%rbp), %rax	# insn, tmp116
	movl	$__FUNCTION__.12208, %ecx	#,
	movl	$4923, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp116,
	call	_fatal_insn_not_found	#
.L1231:
	.loc 1 5106 0
	movl	$10, %eax	#, D.57179
	jmp	.L1241	#
.L1227:
	.loc 1 5109 0
	movq	-8(%rbp), %rax	# insn, tmp117
	movq	%rax, %rdi	# tmp117,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57181
	jne	.L1252	#,
	.loc 1 5109 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1050
	cmpl	$4, %eax	#, ix86_cpu.1050
	je	.L1253	#,
.L1252:
	.loc 1 5109 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp118
	movq	%rax, %rdi	# tmp118,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57181
	jne	.L1254	#,
	.loc 1 5109 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1051
	cmpl	$4, %eax	#, ix86_cpu.1051
	jne	.L1254	#,
.L1253:
	.loc 1 5111 0 is_stmt 1
	movl	$1, %eax	#, D.57179
	jmp	.L1241	#
.L1254:
	.loc 1 5115 0
	movl	$10, %eax	#, D.57179
.L1241:
	.loc 1 5119 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE23:
	.size	k6_load_unit_ready_cost, .-k6_load_unit_ready_cost
	.globl	k6_load_unit_blockage_range
	.type	k6_load_unit_blockage_range, @function
k6_load_unit_blockage_range:
.LFB24:
	.loc 1 5125 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 5126 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57183
	testl	%eax, %eax	# D.57183
	js	.L1256	#,
	.loc 1 5126 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1052
	jmp	.L1257	#
.L1256:
	.loc 1 5126 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1257:
	.loc 1 5126 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1052
	jne	.L1258	#,
	.loc 1 5129 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57184
	movzwl	(%rax), %eax	# _6->code, D.57185
	cmpw	$40, %ax	#, D.57185
	je	.L1258	#,
	.loc 1 5130 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57184
	movq	%rax, %rdi	# D.57184,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57183
	jns	.L1258	#,
	.loc 1 5131 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.12398, %ecx	#,
	movl	$5131, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1258:
	.loc 1 5133 0
	movl	$65546, %eax	#, D.57186
	.loc 1 5136 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE24:
	.size	k6_load_unit_blockage_range, .-k6_load_unit_blockage_range
	.globl	k6_branch_unit_ready_cost
	.type	k6_branch_unit_ready_cost, @function
k6_branch_unit_ready_cost:
.LFB25:
	.loc 1 5142 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 5143 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57187
	testl	%eax, %eax	# D.57187
	js	.L1262	#,
	.loc 1 5143 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1053
	jmp	.L1263	#
.L1262:
	.loc 1 5143 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1263:
	.loc 1 5143 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1053
	jne	.L1264	#,
	.loc 1 5146 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57188
	movzwl	(%rax), %eax	# _6->code, D.57189
	cmpw	$40, %ax	#, D.57189
	je	.L1264	#,
	.loc 1 5147 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57188
	movq	%rax, %rdi	# D.57188,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57187
	jns	.L1264	#,
	.loc 1 5148 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.12406, %ecx	#,
	movl	$5148, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1264:
	.loc 1 5150 0
	movl	$1, %eax	#, D.57187
	.loc 1 5153 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE25:
	.size	k6_branch_unit_ready_cost, .-k6_branch_unit_ready_cost
	.globl	k6_alu_unit_ready_cost
	.type	k6_alu_unit_ready_cost, @function
k6_alu_unit_ready_cost:
.LFB26:
	.loc 1 5159 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 5160 0
	movq	-8(%rbp), %rax	# insn, tmp550
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57190
	testl	%eax, %eax	# D.57190
	js	.L1268	#,
	.loc 1 5160 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp551
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.1054
	jmp	.L1269	#
.L1268:
	.loc 1 5160 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp552
	movq	%rax, %rdi	# tmp552,
	call	recog_memoized_1	#
.L1269:
	.loc 1 5160 0 discriminator 3
	addl	$1, %eax	#, tmp553
	cmpl	$637, %eax	#, tmp553
	ja	.L1270	#,
	movl	%eax, %eax	# tmp553, tmp554
	movq	.L1272(,%rax,8), %rax	#, tmp555
	jmp	*%rax	# tmp555
	.section	.rodata
	.align 8
	.align 4
.L1272:
	.quad	.L1271
	.quad	.L1273
	.quad	.L1274
	.quad	.L1274
	.quad	.L1273
	.quad	.L1274
	.quad	.L1274
	.quad	.L1273
	.quad	.L1274
	.quad	.L1274
	.quad	.L1273
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1274
	.quad	.L1275
	.quad	.L1270
	.quad	.L1270
	.quad	.L1276
	.quad	.L1270
	.quad	.L1270
	.quad	.L1277
	.quad	.L1270
	.quad	.L1270
	.quad	.L1276
	.quad	.L1276
	.quad	.L1276
	.quad	.L1274
	.quad	.L1270
	.quad	.L1270
	.quad	.L1278
	.quad	.L1276
	.quad	.L1276
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1279
	.quad	.L1279
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1279
	.quad	.L1280
	.quad	.L1276
	.quad	.L1276
	.quad	.L1276
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1274
	.quad	.L1270
	.quad	.L1281
	.quad	.L1270
	.quad	.L1270
	.quad	.L1276
	.quad	.L1270
	.quad	.L1270
	.quad	.L1282
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1273
	.quad	.L1274
	.quad	.L1274
	.quad	.L1273
	.quad	.L1274
	.quad	.L1270
	.quad	.L1283
	.quad	.L1274
	.quad	.L1274
	.quad	.L1270
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1284
	.quad	.L1284
	.quad	.L1284
	.quad	.L1284
	.quad	.L1284
	.quad	.L1284
	.quad	.L1284
	.quad	.L1284
	.quad	.L1284
	.quad	.L1284
	.quad	.L1285
	.quad	.L1286
	.quad	.L1286
	.quad	.L1286
	.quad	.L1286
	.quad	.L1287
	.quad	.L1288
	.quad	.L1289
	.quad	.L1289
	.quad	.L1289
	.quad	.L1289
	.quad	.L1289
	.quad	.L1289
	.quad	.L1290
	.quad	.L1291
	.quad	.L1291
	.quad	.L1291
	.quad	.L1291
	.quad	.L1291
	.quad	.L1292
	.quad	.L1293
	.quad	.L1293
	.quad	.L1293
	.quad	.L1291
	.quad	.L1293
	.quad	.L1293
	.quad	.L1293
	.quad	.L1274
	.quad	.L1270
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1294
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1270
	.quad	.L1270
	.quad	.L1295
	.quad	.L1274
	.quad	.L1296
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1296
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1270
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1297
	.quad	.L1298
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1297
	.quad	.L1299
	.quad	.L1298
	.quad	.L1300
	.quad	.L1297
	.quad	.L1298
	.quad	.L1298
	.quad	.L1301
	.quad	.L1298
	.quad	.L1298
	.quad	.L1273
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1273
	.quad	.L1273
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1274
	.quad	.L1284
	.quad	.L1284
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1274
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1284
	.quad	.L1270
	.quad	.L1284
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1270
	.quad	.L1302
	.quad	.L1303
	.text
.L1303:
	.loc 1 5163 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp556
	movq	%rax, %rdi	# tmp556,
	call	extract_constrain_insn_cached	#
	.loc 1 5164 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1055
	cmpl	$1, %eax	#, which_alternative.1055
	jne	.L1304	#,
	.loc 1 5164 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	const0_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1304	#,
	movq	-8(%rbp), %rax	# insn, tmp557
	movq	%rax, %rdi	# tmp557,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1304	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1056
	cmpl	$4, %eax	#, ix86_cpu.1056
	je	.L1305	#,
.L1304:
	.loc 1 5164 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1057
	cmpl	$1, %eax	#, which_alternative.1057
	jne	.L1306	#,
	.loc 1 5164 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	const0_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1306	#,
	movq	-8(%rbp), %rax	# insn, tmp558
	movq	%rax, %rdi	# tmp558,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1307	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1058
	cmpl	$4, %eax	#, ix86_cpu.1058
	je	.L1305	#,
.L1307:
	.loc 1 5164 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp559
	movq	%rax, %rdi	# tmp559,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1306	#,
	.loc 1 5164 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1059
	cmpl	$4, %eax	#, ix86_cpu.1059
	je	.L1305	#,
.L1306:
	.loc 1 5164 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1060
	testl	%eax, %eax	# which_alternative.1060
	jne	.L1308	#,
	.loc 1 5164 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp560
	movq	%rax, %rdi	# tmp560,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1309	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1061
	cmpl	$4, %eax	#, ix86_cpu.1061
	je	.L1305	#,
.L1309:
	.loc 1 5164 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp561
	movq	%rax, %rdi	# tmp561,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1308	#,
	.loc 1 5164 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1062
	cmpl	$4, %eax	#, ix86_cpu.1062
	jne	.L1308	#,
.L1305:
	.loc 1 5166 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1308:
	.loc 1 5170 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1302:
	.loc 1 5174 0
	movq	-8(%rbp), %rax	# insn, tmp562
	movq	%rax, %rdi	# tmp562,
	call	extract_constrain_insn_cached	#
	.loc 1 5175 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1063
	cmpl	$1, %eax	#, which_alternative.1063
	jne	.L1311	#,
	.loc 1 5175 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	const0_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1311	#,
	movq	-8(%rbp), %rax	# insn, tmp563
	movq	%rax, %rdi	# tmp563,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1311	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1064
	cmpl	$4, %eax	#, ix86_cpu.1064
	je	.L1312	#,
.L1311:
	.loc 1 5175 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1065
	cmpl	$1, %eax	#, which_alternative.1065
	jne	.L1313	#,
	.loc 1 5175 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	const0_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1313	#,
	movq	-8(%rbp), %rax	# insn, tmp564
	movq	%rax, %rdi	# tmp564,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1314	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1066
	cmpl	$4, %eax	#, ix86_cpu.1066
	je	.L1312	#,
.L1314:
	.loc 1 5175 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp565
	movq	%rax, %rdi	# tmp565,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1313	#,
	.loc 1 5175 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1067
	cmpl	$4, %eax	#, ix86_cpu.1067
	je	.L1312	#,
.L1313:
	.loc 1 5175 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1068
	testl	%eax, %eax	# which_alternative.1068
	jne	.L1315	#,
	.loc 1 5175 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp566
	movq	%rax, %rdi	# tmp566,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1316	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1069
	cmpl	$4, %eax	#, ix86_cpu.1069
	je	.L1312	#,
.L1316:
	.loc 1 5175 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp567
	movq	%rax, %rdi	# tmp567,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1315	#,
	.loc 1 5175 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1070
	cmpl	$4, %eax	#, ix86_cpu.1070
	jne	.L1315	#,
.L1312:
	.loc 1 5177 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1315:
	.loc 1 5181 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1301:
	.loc 1 5185 0
	movq	-8(%rbp), %rax	# insn, tmp568
	movq	%rax, %rdi	# tmp568,
	call	extract_constrain_insn_cached	#
	.loc 1 5186 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1071
	cmpl	$2, %eax	#, which_alternative.1071
	jne	.L1317	#,
	.loc 1 5186 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp569
	movq	%rax, %rdi	# tmp569,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1318	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1072
	cmpl	$4, %eax	#, ix86_cpu.1072
	je	.L1319	#,
.L1318:
	.loc 1 5186 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp570
	movq	%rax, %rdi	# tmp570,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1317	#,
	.loc 1 5186 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1073
	cmpl	$4, %eax	#, ix86_cpu.1073
	je	.L1319	#,
.L1317:
	.loc 1 5186 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp571
	movq	%rax, %rdi	# tmp571,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57193
	jne	.L1320	#,
	.loc 1 5186 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp572
	movq	%rax, %rdi	# tmp572,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1321	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1074
	cmpl	$4, %eax	#, ix86_cpu.1074
	je	.L1319	#,
.L1321:
	.loc 1 5186 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp573
	movq	%rax, %rdi	# tmp573,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1320	#,
	.loc 1 5186 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1075
	cmpl	$4, %eax	#, ix86_cpu.1075
	je	.L1319	#,
.L1320:
	.loc 1 5186 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp574
	movq	%rax, %rdi	# tmp574,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57193
	jne	.L1322	#,
	.loc 1 5186 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp575
	movq	%rax, %rdi	# tmp575,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1323	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1076
	cmpl	$4, %eax	#, ix86_cpu.1076
	je	.L1319	#,
.L1323:
	.loc 1 5186 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp576
	movq	%rax, %rdi	# tmp576,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1322	#,
	.loc 1 5186 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1077
	cmpl	$4, %eax	#, ix86_cpu.1077
	jne	.L1322	#,
.L1319:
	.loc 1 5188 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1322:
	.loc 1 5192 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1300:
	.loc 1 5196 0
	movq	-8(%rbp), %rax	# insn, tmp577
	movq	%rax, %rdi	# tmp577,
	call	extract_constrain_insn_cached	#
	.loc 1 5197 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1078
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1079
	movl	%eax, %ecx	# ix86_cpu.1080, tmp722
	sarl	%cl, %edx	# tmp722, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1324	#,
	.loc 1 5197 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	const1_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1324	#,
	movq	-8(%rbp), %rax	# insn, tmp578
	movq	%rax, %rdi	# tmp578,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1325	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1081
	cmpl	$4, %eax	#, ix86_cpu.1081
	je	.L1326	#,
.L1325:
	.loc 1 5197 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp579
	movq	%rax, %rdi	# tmp579,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1324	#,
	.loc 1 5197 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1082
	cmpl	$4, %eax	#, ix86_cpu.1082
	je	.L1326	#,
.L1324:
	.loc 1 5197 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1083
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1084
	movl	%eax, %ecx	# ix86_cpu.1085, tmp724
	sarl	%cl, %edx	# tmp724, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1327	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	const1_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1328	#,
.L1327:
	.loc 1 5197 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp580
	movq	%rax, %rdi	# tmp580,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1329	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1086
	cmpl	$4, %eax	#, ix86_cpu.1086
	je	.L1326	#,
.L1329:
	.loc 1 5197 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp581
	movq	%rax, %rdi	# tmp581,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1328	#,
	.loc 1 5197 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1087
	cmpl	$4, %eax	#, ix86_cpu.1087
	jne	.L1328	#,
.L1326:
	.loc 1 5199 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1328:
	.loc 1 5203 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1299:
	.loc 1 5207 0
	movq	-8(%rbp), %rax	# insn, tmp582
	movq	%rax, %rdi	# tmp582,
	call	extract_constrain_insn_cached	#
	.loc 1 5208 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1088
	cmpl	$1, %eax	#, which_alternative.1088
	jne	.L1330	#,
	.loc 1 5208 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp583
	movq	%rax, %rdi	# tmp583,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1331	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1089
	cmpl	$4, %eax	#, ix86_cpu.1089
	je	.L1332	#,
.L1331:
	.loc 1 5208 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp584
	movq	%rax, %rdi	# tmp584,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1330	#,
	.loc 1 5208 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1090
	cmpl	$4, %eax	#, ix86_cpu.1090
	je	.L1332	#,
.L1330:
	.loc 1 5208 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1091
	testl	%eax, %eax	# which_alternative.1091
	jne	.L1333	#,
	.loc 1 5208 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1092
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1093
	movl	%eax, %ecx	# ix86_cpu.1094, tmp726
	sarl	%cl, %edx	# tmp726, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1333	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	const1_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1333	#,
	movq	-8(%rbp), %rax	# insn, tmp585
	movq	%rax, %rdi	# tmp585,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1334	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1095
	cmpl	$4, %eax	#, ix86_cpu.1095
	je	.L1332	#,
.L1334:
	.loc 1 5208 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp586
	movq	%rax, %rdi	# tmp586,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1333	#,
	.loc 1 5208 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1096
	cmpl	$4, %eax	#, ix86_cpu.1096
	je	.L1332	#,
.L1333:
	.loc 1 5208 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1097
	testl	%eax, %eax	# which_alternative.1097
	jne	.L1335	#,
	.loc 1 5208 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1098
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1099
	movl	%eax, %ecx	# ix86_cpu.1100, tmp728
	sarl	%cl, %edx	# tmp728, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1336	#,
	.loc 1 5208 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	const1_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1335	#,
.L1336:
	.loc 1 5208 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp587
	movq	%rax, %rdi	# tmp587,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1337	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1101
	cmpl	$4, %eax	#, ix86_cpu.1101
	je	.L1332	#,
.L1337:
	.loc 1 5208 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp588
	movq	%rax, %rdi	# tmp588,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1335	#,
	.loc 1 5208 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1102
	cmpl	$4, %eax	#, ix86_cpu.1102
	jne	.L1335	#,
.L1332:
	.loc 1 5210 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1335:
	.loc 1 5214 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1298:
	.loc 1 5223 0
	movq	-8(%rbp), %rax	# insn, tmp589
	movq	%rax, %rdi	# tmp589,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57193
	jne	.L1338	#,
	.loc 1 5223 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp590
	movq	%rax, %rdi	# tmp590,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1339	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1103
	cmpl	$4, %eax	#, ix86_cpu.1103
	je	.L1340	#,
.L1339:
	.loc 1 5223 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp591
	movq	%rax, %rdi	# tmp591,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1338	#,
	.loc 1 5223 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1104
	cmpl	$4, %eax	#, ix86_cpu.1104
	je	.L1340	#,
.L1338:
	.loc 1 5223 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp592
	movq	%rax, %rdi	# tmp592,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57193
	jne	.L1341	#,
	.loc 1 5223 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp593
	movq	%rax, %rdi	# tmp593,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1342	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1105
	cmpl	$4, %eax	#, ix86_cpu.1105
	je	.L1340	#,
.L1342:
	.loc 1 5223 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp594
	movq	%rax, %rdi	# tmp594,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1341	#,
	.loc 1 5223 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1106
	cmpl	$4, %eax	#, ix86_cpu.1106
	jne	.L1341	#,
.L1340:
	.loc 1 5225 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1341:
	.loc 1 5229 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1297:
	.loc 1 5235 0
	movq	-8(%rbp), %rax	# insn, tmp595
	movq	%rax, %rdi	# tmp595,
	call	extract_constrain_insn_cached	#
	.loc 1 5236 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1107
	cmpl	$1, %eax	#, which_alternative.1107
	jne	.L1343	#,
	.loc 1 5236 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp596
	movq	%rax, %rdi	# tmp596,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1344	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1108
	cmpl	$4, %eax	#, ix86_cpu.1108
	je	.L1345	#,
.L1344:
	.loc 1 5236 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp597
	movq	%rax, %rdi	# tmp597,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1343	#,
	.loc 1 5236 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1109
	cmpl	$4, %eax	#, ix86_cpu.1109
	je	.L1345	#,
.L1343:
	.loc 1 5236 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp598
	movq	%rax, %rdi	# tmp598,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57193
	jne	.L1346	#,
	.loc 1 5236 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp599
	movq	%rax, %rdi	# tmp599,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1347	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1110
	cmpl	$4, %eax	#, ix86_cpu.1110
	je	.L1345	#,
.L1347:
	.loc 1 5236 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp600
	movq	%rax, %rdi	# tmp600,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1346	#,
	.loc 1 5236 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1111
	cmpl	$4, %eax	#, ix86_cpu.1111
	je	.L1345	#,
.L1346:
	.loc 1 5236 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp601
	movq	%rax, %rdi	# tmp601,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57193
	jne	.L1348	#,
	.loc 1 5236 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp602
	movq	%rax, %rdi	# tmp602,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1349	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1112
	cmpl	$4, %eax	#, ix86_cpu.1112
	je	.L1345	#,
.L1349:
	.loc 1 5236 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp603
	movq	%rax, %rdi	# tmp603,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1348	#,
	.loc 1 5236 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1113
	cmpl	$4, %eax	#, ix86_cpu.1113
	jne	.L1348	#,
.L1345:
	.loc 1 5238 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1348:
	.loc 1 5242 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1296:
	.loc 1 5247 0
	movq	-8(%rbp), %rax	# insn, tmp604
	movq	%rax, %rdi	# tmp604,
	call	extract_constrain_insn_cached	#
	.loc 1 5248 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1114
	cmpl	$2, %eax	#, which_alternative.1114
	jne	.L1350	#,
	.loc 1 5248 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp605
	movq	%rax, %rdi	# tmp605,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1351	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1115
	cmpl	$4, %eax	#, ix86_cpu.1115
	je	.L1352	#,
.L1351:
	.loc 1 5248 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp606
	movq	%rax, %rdi	# tmp606,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1350	#,
	.loc 1 5248 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1116
	cmpl	$4, %eax	#, ix86_cpu.1116
	je	.L1352	#,
.L1350:
	.loc 1 5248 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1117
	testl	%eax, %eax	# which_alternative.1117
	je	.L1353	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1118
	cmpl	$1, %eax	#, which_alternative.1118
	jne	.L1354	#,
.L1353:
	.loc 1 5248 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp607
	movq	%rax, %rdi	# tmp607,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1355	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1119
	cmpl	$4, %eax	#, ix86_cpu.1119
	je	.L1352	#,
.L1355:
	.loc 1 5248 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp608
	movq	%rax, %rdi	# tmp608,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1354	#,
	.loc 1 5248 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1120
	cmpl	$4, %eax	#, ix86_cpu.1120
	jne	.L1354	#,
.L1352:
	.loc 1 5250 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1354:
	.loc 1 5254 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1295:
	.loc 1 5258 0
	movq	-8(%rbp), %rax	# insn, tmp609
	movq	%rax, %rdi	# tmp609,
	call	extract_constrain_insn_cached	#
	.loc 1 5259 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1121
	cmpl	$3, %eax	#, which_alternative.1121
	jne	.L1356	#,
	.loc 1 5259 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp610
	movq	%rax, %rdi	# tmp610,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1357	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1122
	cmpl	$4, %eax	#, ix86_cpu.1122
	je	.L1358	#,
.L1357:
	.loc 1 5259 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp611
	movq	%rax, %rdi	# tmp611,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1356	#,
	.loc 1 5259 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1123
	cmpl	$4, %eax	#, ix86_cpu.1123
	je	.L1358	#,
.L1356:
	.loc 1 5259 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1124
	testl	%eax, %eax	# which_alternative.1124
	je	.L1359	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1125
	cmpl	$1, %eax	#, which_alternative.1125
	je	.L1359	#,
	.loc 1 5259 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1126
	cmpl	$2, %eax	#, which_alternative.1126
	jne	.L1360	#,
.L1359:
	movq	-8(%rbp), %rax	# insn, tmp612
	movq	%rax, %rdi	# tmp612,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1361	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1127
	cmpl	$4, %eax	#, ix86_cpu.1127
	je	.L1358	#,
.L1361:
	.loc 1 5259 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp613
	movq	%rax, %rdi	# tmp613,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1360	#,
	.loc 1 5259 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1128
	cmpl	$4, %eax	#, ix86_cpu.1128
	jne	.L1360	#,
.L1358:
	.loc 1 5261 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1360:
	.loc 1 5265 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1294:
	.loc 1 5285 0
	movq	-8(%rbp), %rax	# insn, tmp614
	movq	%rax, %rdi	# tmp614,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1362	#,
	.loc 1 5285 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1129
	cmpl	$4, %eax	#, ix86_cpu.1129
	je	.L1363	#,
.L1362:
	.loc 1 5285 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp615
	movq	%rax, %rdi	# tmp615,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1364	#,
	.loc 1 5285 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1130
	cmpl	$4, %eax	#, ix86_cpu.1130
	jne	.L1364	#,
.L1363:
	.loc 1 5287 0 is_stmt 1
	movl	$2, %eax	#, D.57190
	jmp	.L1310	#
.L1364:
	.loc 1 5291 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1293:
	.loc 1 5300 0
	movq	-8(%rbp), %rax	# insn, tmp616
	movq	%rax, %rdi	# tmp616,
	call	extract_insn_cached	#
	.loc 1 5301 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1365	#,
	.loc 1 5301 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp617
	movq	%rax, %rdi	# tmp617,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1366	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1131
	cmpl	$4, %eax	#, ix86_cpu.1131
	je	.L1367	#,
.L1366:
	.loc 1 5301 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp618
	movq	%rax, %rdi	# tmp618,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1365	#,
	.loc 1 5301 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1132
	cmpl	$4, %eax	#, ix86_cpu.1132
	je	.L1367	#,
.L1365:
	.loc 1 5301 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1368	#,
	.loc 1 5301 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp619
	movq	%rax, %rdi	# tmp619,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1369	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1133
	cmpl	$4, %eax	#, ix86_cpu.1133
	je	.L1367	#,
.L1369:
	.loc 1 5301 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp620
	movq	%rax, %rdi	# tmp620,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1368	#,
	.loc 1 5301 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1134
	cmpl	$4, %eax	#, ix86_cpu.1134
	jne	.L1368	#,
.L1367:
	.loc 1 5303 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1368:
	.loc 1 5307 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1292:
	.loc 1 5311 0
	movq	-8(%rbp), %rax	# insn, tmp621
	movq	%rax, %rdi	# tmp621,
	call	extract_constrain_insn_cached	#
	.loc 1 5312 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1135
	cmpl	$3, %eax	#, which_alternative.1135
	jne	.L1370	#,
	.loc 1 5312 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp622
	movq	%rax, %rdi	# tmp622,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1371	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1136
	cmpl	$4, %eax	#, ix86_cpu.1136
	je	.L1372	#,
.L1371:
	.loc 1 5312 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp623
	movq	%rax, %rdi	# tmp623,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1370	#,
	.loc 1 5312 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1137
	cmpl	$4, %eax	#, ix86_cpu.1137
	je	.L1372	#,
.L1370:
	.loc 1 5312 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1138
	cmpl	$3, %eax	#, which_alternative.1138
	je	.L1373	#,
	.loc 1 5312 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1373	#,
	movq	-8(%rbp), %rax	# insn, tmp624
	movq	%rax, %rdi	# tmp624,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1374	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1139
	cmpl	$4, %eax	#, ix86_cpu.1139
	je	.L1372	#,
.L1374:
	.loc 1 5312 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp625
	movq	%rax, %rdi	# tmp625,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1373	#,
	.loc 1 5312 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1140
	cmpl	$4, %eax	#, ix86_cpu.1140
	je	.L1372	#,
.L1373:
	.loc 1 5312 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1141
	cmpl	$3, %eax	#, which_alternative.1141
	je	.L1375	#,
	.loc 1 5312 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1375	#,
	movq	-8(%rbp), %rax	# insn, tmp626
	movq	%rax, %rdi	# tmp626,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1376	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1142
	cmpl	$4, %eax	#, ix86_cpu.1142
	je	.L1372	#,
.L1376:
	.loc 1 5312 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp627
	movq	%rax, %rdi	# tmp627,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1375	#,
	.loc 1 5312 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1143
	cmpl	$4, %eax	#, ix86_cpu.1143
	jne	.L1375	#,
.L1372:
	.loc 1 5314 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1375:
	.loc 1 5318 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1291:
	.loc 1 5327 0
	movq	-8(%rbp), %rax	# insn, tmp628
	movq	%rax, %rdi	# tmp628,
	call	extract_insn_cached	#
	.loc 1 5328 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1377	#,
	.loc 1 5328 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp629
	movq	%rax, %rdi	# tmp629,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1378	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1144
	cmpl	$4, %eax	#, ix86_cpu.1144
	je	.L1379	#,
.L1378:
	.loc 1 5328 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp630
	movq	%rax, %rdi	# tmp630,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1377	#,
	.loc 1 5328 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1145
	cmpl	$4, %eax	#, ix86_cpu.1145
	je	.L1379	#,
.L1377:
	.loc 1 5328 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1380	#,
	.loc 1 5328 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp631
	movq	%rax, %rdi	# tmp631,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1381	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1146
	cmpl	$4, %eax	#, ix86_cpu.1146
	je	.L1379	#,
.L1381:
	.loc 1 5328 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp632
	movq	%rax, %rdi	# tmp632,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1380	#,
	.loc 1 5328 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1147
	cmpl	$4, %eax	#, ix86_cpu.1147
	jne	.L1380	#,
.L1379:
	.loc 1 5330 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1380:
	.loc 1 5334 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1290:
	.loc 1 5338 0
	movq	-8(%rbp), %rax	# insn, tmp633
	movq	%rax, %rdi	# tmp633,
	call	extract_constrain_insn_cached	#
	.loc 1 5339 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1148
	cmpl	$2, %eax	#, which_alternative.1148
	jne	.L1382	#,
	.loc 1 5339 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp634
	movq	%rax, %rdi	# tmp634,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1383	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1149
	cmpl	$4, %eax	#, ix86_cpu.1149
	je	.L1384	#,
.L1383:
	.loc 1 5339 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp635
	movq	%rax, %rdi	# tmp635,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1382	#,
	.loc 1 5339 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1150
	cmpl	$4, %eax	#, ix86_cpu.1150
	je	.L1384	#,
.L1382:
	.loc 1 5339 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1151
	cmpl	$2, %eax	#, which_alternative.1151
	je	.L1385	#,
	.loc 1 5339 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1385	#,
	movq	-8(%rbp), %rax	# insn, tmp636
	movq	%rax, %rdi	# tmp636,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1386	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1152
	cmpl	$4, %eax	#, ix86_cpu.1152
	je	.L1384	#,
.L1386:
	.loc 1 5339 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp637
	movq	%rax, %rdi	# tmp637,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1385	#,
	.loc 1 5339 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1153
	cmpl	$4, %eax	#, ix86_cpu.1153
	je	.L1384	#,
.L1385:
	.loc 1 5339 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1154
	cmpl	$2, %eax	#, which_alternative.1154
	je	.L1387	#,
	.loc 1 5339 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1387	#,
	movq	-8(%rbp), %rax	# insn, tmp638
	movq	%rax, %rdi	# tmp638,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1388	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1155
	cmpl	$4, %eax	#, ix86_cpu.1155
	je	.L1384	#,
.L1388:
	.loc 1 5339 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp639
	movq	%rax, %rdi	# tmp639,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1387	#,
	.loc 1 5339 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1156
	cmpl	$4, %eax	#, ix86_cpu.1156
	jne	.L1387	#,
.L1384:
	.loc 1 5341 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1387:
	.loc 1 5345 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1289:
	.loc 1 5354 0
	movq	-8(%rbp), %rax	# insn, tmp640
	movq	%rax, %rdi	# tmp640,
	call	extract_insn_cached	#
	.loc 1 5355 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1389	#,
	.loc 1 5355 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp641
	movq	%rax, %rdi	# tmp641,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1390	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1157
	cmpl	$4, %eax	#, ix86_cpu.1157
	je	.L1391	#,
.L1390:
	.loc 1 5355 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp642
	movq	%rax, %rdi	# tmp642,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1389	#,
	.loc 1 5355 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1158
	cmpl	$4, %eax	#, ix86_cpu.1158
	je	.L1391	#,
.L1389:
	.loc 1 5355 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1392	#,
	.loc 1 5355 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp643
	movq	%rax, %rdi	# tmp643,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1393	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1159
	cmpl	$4, %eax	#, ix86_cpu.1159
	je	.L1391	#,
.L1393:
	.loc 1 5355 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp644
	movq	%rax, %rdi	# tmp644,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1392	#,
	.loc 1 5355 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1160
	cmpl	$4, %eax	#, ix86_cpu.1160
	jne	.L1392	#,
.L1391:
	.loc 1 5357 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1392:
	.loc 1 5361 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1288:
	.loc 1 5365 0
	movq	-8(%rbp), %rax	# insn, tmp645
	movq	%rax, %rdi	# tmp645,
	call	extract_constrain_insn_cached	#
	.loc 1 5366 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1161
	testl	%eax, %eax	# which_alternative.1161
	jne	.L1394	#,
	.loc 1 5366 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1395	#,
.L1394:
	.loc 1 5366 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp646
	movq	%rax, %rdi	# tmp646,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1396	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1162
	cmpl	$4, %eax	#, ix86_cpu.1162
	je	.L1397	#,
.L1396:
	.loc 1 5366 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp647
	movq	%rax, %rdi	# tmp647,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1395	#,
	.loc 1 5366 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1163
	cmpl	$4, %eax	#, ix86_cpu.1163
	je	.L1397	#,
.L1395:
	movq	-8(%rbp), %rax	# insn, tmp648
	movq	%rax, %rdi	# tmp648,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57193
	jne	.L1398	#,
	movq	-8(%rbp), %rax	# insn, tmp649
	movq	%rax, %rdi	# tmp649,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1399	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1164
	cmpl	$4, %eax	#, ix86_cpu.1164
	je	.L1397	#,
.L1399:
	.loc 1 5366 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp650
	movq	%rax, %rdi	# tmp650,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1398	#,
	.loc 1 5366 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1165
	cmpl	$4, %eax	#, ix86_cpu.1165
	je	.L1397	#,
.L1398:
	.loc 1 5366 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp651
	movq	%rax, %rdi	# tmp651,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57193
	jne	.L1400	#,
	.loc 1 5366 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp652
	movq	%rax, %rdi	# tmp652,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1401	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1166
	cmpl	$4, %eax	#, ix86_cpu.1166
	je	.L1397	#,
.L1401:
	.loc 1 5366 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp653
	movq	%rax, %rdi	# tmp653,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1400	#,
	.loc 1 5366 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1167
	cmpl	$4, %eax	#, ix86_cpu.1167
	jne	.L1400	#,
.L1397:
	.loc 1 5368 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1400:
	.loc 1 5372 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1287:
	.loc 1 5376 0
	movq	-8(%rbp), %rax	# insn, tmp654
	movq	%rax, %rdi	# tmp654,
	call	extract_constrain_insn_cached	#
	.loc 1 5377 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1168
	cmpl	$2, %eax	#, which_alternative.1168
	je	.L1402	#,
	.loc 1 5377 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1403	#,
.L1402:
	.loc 1 5377 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp655
	movq	%rax, %rdi	# tmp655,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1404	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1169
	cmpl	$4, %eax	#, ix86_cpu.1169
	je	.L1405	#,
.L1404:
	.loc 1 5377 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp656
	movq	%rax, %rdi	# tmp656,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1403	#,
	.loc 1 5377 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1170
	cmpl	$4, %eax	#, ix86_cpu.1170
	je	.L1405	#,
.L1403:
	movq	-8(%rbp), %rax	# insn, tmp657
	movq	%rax, %rdi	# tmp657,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57193
	jne	.L1406	#,
	movq	-8(%rbp), %rax	# insn, tmp658
	movq	%rax, %rdi	# tmp658,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1407	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1171
	cmpl	$4, %eax	#, ix86_cpu.1171
	je	.L1405	#,
.L1407:
	.loc 1 5377 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp659
	movq	%rax, %rdi	# tmp659,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1406	#,
	.loc 1 5377 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1172
	cmpl	$4, %eax	#, ix86_cpu.1172
	je	.L1405	#,
.L1406:
	.loc 1 5377 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp660
	movq	%rax, %rdi	# tmp660,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57193
	jne	.L1408	#,
	.loc 1 5377 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp661
	movq	%rax, %rdi	# tmp661,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1409	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1173
	cmpl	$4, %eax	#, ix86_cpu.1173
	je	.L1405	#,
.L1409:
	.loc 1 5377 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp662
	movq	%rax, %rdi	# tmp662,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1408	#,
	.loc 1 5377 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1174
	cmpl	$4, %eax	#, ix86_cpu.1174
	jne	.L1408	#,
.L1405:
	.loc 1 5379 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1408:
	.loc 1 5383 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1286:
	.loc 1 5390 0
	movq	-8(%rbp), %rax	# insn, tmp663
	movq	%rax, %rdi	# tmp663,
	call	extract_insn_cached	#
	.loc 1 5391 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1410	#,
	.loc 1 5391 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp664
	movq	%rax, %rdi	# tmp664,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1411	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1175
	cmpl	$4, %eax	#, ix86_cpu.1175
	je	.L1412	#,
.L1411:
	.loc 1 5391 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp665
	movq	%rax, %rdi	# tmp665,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1410	#,
	.loc 1 5391 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1176
	cmpl	$4, %eax	#, ix86_cpu.1176
	je	.L1412	#,
.L1410:
	.loc 1 5391 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1413	#,
	.loc 1 5391 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp666
	movq	%rax, %rdi	# tmp666,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1414	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1177
	cmpl	$4, %eax	#, ix86_cpu.1177
	je	.L1412	#,
.L1414:
	.loc 1 5391 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp667
	movq	%rax, %rdi	# tmp667,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1413	#,
	.loc 1 5391 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1178
	cmpl	$4, %eax	#, ix86_cpu.1178
	jne	.L1413	#,
.L1412:
	.loc 1 5393 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1413:
	.loc 1 5397 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1285:
	.loc 1 5401 0
	movq	-8(%rbp), %rax	# insn, tmp668
	movq	%rax, %rdi	# tmp668,
	call	extract_constrain_insn_cached	#
	.loc 1 5402 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1179
	cmpl	$2, %eax	#, which_alternative.1179
	je	.L1415	#,
	.loc 1 5402 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57191
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1416	#,
.L1415:
	.loc 1 5402 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp669
	movq	%rax, %rdi	# tmp669,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1417	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1180
	cmpl	$4, %eax	#, ix86_cpu.1180
	je	.L1418	#,
.L1417:
	.loc 1 5402 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp670
	movq	%rax, %rdi	# tmp670,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1416	#,
	.loc 1 5402 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1181
	cmpl	$4, %eax	#, ix86_cpu.1181
	je	.L1418	#,
.L1416:
	movq	-8(%rbp), %rax	# insn, tmp671
	movq	%rax, %rdi	# tmp671,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57193
	jne	.L1419	#,
	movq	-8(%rbp), %rax	# insn, tmp672
	movq	%rax, %rdi	# tmp672,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1420	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1182
	cmpl	$4, %eax	#, ix86_cpu.1182
	je	.L1418	#,
.L1420:
	.loc 1 5402 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp673
	movq	%rax, %rdi	# tmp673,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1419	#,
	.loc 1 5402 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1183
	cmpl	$4, %eax	#, ix86_cpu.1183
	je	.L1418	#,
.L1419:
	.loc 1 5402 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp674
	movq	%rax, %rdi	# tmp674,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57193
	jne	.L1421	#,
	.loc 1 5402 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp675
	movq	%rax, %rdi	# tmp675,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1422	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1184
	cmpl	$4, %eax	#, ix86_cpu.1184
	je	.L1418	#,
.L1422:
	.loc 1 5402 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp676
	movq	%rax, %rdi	# tmp676,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1421	#,
	.loc 1 5402 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1185
	cmpl	$4, %eax	#, ix86_cpu.1185
	jne	.L1421	#,
.L1418:
	.loc 1 5404 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1421:
	.loc 1 5408 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1284:
	.loc 1 5425 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1186
	cmpl	$4, %eax	#, ix86_cpu.1186
	jne	.L1423	#,
	.loc 1 5427 0
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1423:
	.loc 1 5431 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1283:
	.loc 1 5435 0
	movq	-8(%rbp), %rax	# insn, tmp677
	movq	%rax, %rdi	# tmp677,
	call	extract_constrain_insn_cached	#
	.loc 1 5436 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1187
	cmpl	$1, %eax	#, which_alternative.1187
	jne	.L1424	#,
	.loc 1 5436 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp678
	movq	%rax, %rdi	# tmp678,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1424	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1188
	cmpl	$4, %eax	#, ix86_cpu.1188
	je	.L1425	#,
.L1424:
	.loc 1 5436 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1189
	testl	%eax, %eax	# which_alternative.1189
	jne	.L1426	#,
	.loc 1 5436 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp679
	movq	%rax, %rdi	# tmp679,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1427	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1190
	cmpl	$4, %eax	#, ix86_cpu.1190
	je	.L1425	#,
.L1427:
	.loc 1 5436 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp680
	movq	%rax, %rdi	# tmp680,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1426	#,
	.loc 1 5436 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1191
	cmpl	$4, %eax	#, ix86_cpu.1191
	jne	.L1426	#,
.L1425:
	.loc 1 5438 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1426:
	.loc 1 5442 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1282:
	.loc 1 5446 0
	movq	-8(%rbp), %rax	# insn, tmp681
	movq	%rax, %rdi	# tmp681,
	call	extract_constrain_insn_cached	#
	.loc 1 5447 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1192
	testl	%eax, %eax	# which_alternative.1192
	je	.L1428	#,
	.loc 1 5447 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1193
	cmpl	$1, %eax	#, which_alternative.1193
	je	.L1428	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1194
	cmpl	$2, %eax	#, which_alternative.1194
	je	.L1428	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1195
	cmpl	$3, %eax	#, which_alternative.1195
	je	.L1429	#,
	.loc 1 5447 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1196
	cmpl	$4, %eax	#, which_alternative.1196
	jne	.L1428	#,
.L1429:
	.loc 1 5447 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp682
	movq	%rax, %rdi	# tmp682,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1428	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1197
	cmpl	$4, %eax	#, ix86_cpu.1197
	jne	.L1428	#,
	.loc 1 5449 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1428:
	.loc 1 5453 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1281:
	.loc 1 5457 0
	movq	-8(%rbp), %rax	# insn, tmp683
	movq	%rax, %rdi	# tmp683,
	call	extract_constrain_insn_cached	#
	.loc 1 5458 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1198
	cmpl	$5, %eax	#, which_alternative.1198
	je	.L1430	#,
	.loc 1 5458 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1199
	cmpl	$6, %eax	#, which_alternative.1199
	je	.L1430	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1200
	cmpl	$7, %eax	#, which_alternative.1200
	je	.L1430	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1201
	cmpl	$8, %eax	#, which_alternative.1201
	je	.L1430	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1202
	cmpl	$4, %eax	#, which_alternative.1202
	je	.L1430	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.1203
	testl	%eax, %eax	# flag_pic.1203
	je	.L1431	#,
	.loc 1 5458 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57191
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1430	#,
.L1431:
	.loc 1 5458 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp684
	movq	%rax, %rdi	# tmp684,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1430	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1204
	cmpl	$4, %eax	#, ix86_cpu.1204
	je	.L1432	#,
.L1430:
	.loc 1 5458 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1205
	cmpl	$5, %eax	#, which_alternative.1205
	je	.L1433	#,
	.loc 1 5458 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1206
	cmpl	$6, %eax	#, which_alternative.1206
	je	.L1433	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1207
	cmpl	$7, %eax	#, which_alternative.1207
	je	.L1433	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1208
	cmpl	$8, %eax	#, which_alternative.1208
	je	.L1433	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1209
	cmpl	$4, %eax	#, which_alternative.1209
	je	.L1433	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.1210
	testl	%eax, %eax	# flag_pic.1210
	je	.L1433	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57191
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1433	#,
	movq	-8(%rbp), %rax	# insn, tmp685
	movq	%rax, %rdi	# tmp685,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1434	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1211
	cmpl	$4, %eax	#, ix86_cpu.1211
	je	.L1432	#,
.L1434:
	.loc 1 5458 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp686
	movq	%rax, %rdi	# tmp686,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1433	#,
	.loc 1 5458 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1212
	cmpl	$4, %eax	#, ix86_cpu.1212
	jne	.L1433	#,
.L1432:
	.loc 1 5460 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1433:
	.loc 1 5464 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1280:
	.loc 1 5468 0
	movq	-8(%rbp), %rax	# insn, tmp687
	movq	%rax, %rdi	# tmp687,
	call	extract_constrain_insn_cached	#
	.loc 1 5469 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57191
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1435	#,
	.loc 1 5469 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1213
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1214
	movl	%eax, %ecx	# ix86_cpu.1215, tmp730
	sarl	%cl, %edx	# tmp730, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	jne	.L1435	#,
	movq	-8(%rbp), %rax	# insn, tmp688
	movq	%rax, %rdi	# tmp688,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1435	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1216
	cmpl	$4, %eax	#, ix86_cpu.1216
	je	.L1436	#,
.L1435:
	.loc 1 5469 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57191
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1437	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1217
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1218
	movl	%eax, %ecx	# ix86_cpu.1219, tmp732
	sarl	%cl, %edx	# tmp732, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1438	#,
.L1437:
	.loc 1 5469 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp689
	movq	%rax, %rdi	# tmp689,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1439	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1220
	cmpl	$4, %eax	#, ix86_cpu.1220
	je	.L1436	#,
.L1439:
	.loc 1 5469 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp690
	movq	%rax, %rdi	# tmp690,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1438	#,
	.loc 1 5469 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1221
	cmpl	$4, %eax	#, ix86_cpu.1221
	jne	.L1438	#,
.L1436:
	.loc 1 5471 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1438:
	.loc 1 5475 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1279:
	.loc 1 5481 0
	movq	-8(%rbp), %rax	# insn, tmp691
	movq	%rax, %rdi	# tmp691,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57193
	jne	.L1440	#,
	.loc 1 5481 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp692
	movq	%rax, %rdi	# tmp692,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1440	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1222
	cmpl	$4, %eax	#, ix86_cpu.1222
	je	.L1441	#,
.L1440:
	.loc 1 5481 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp693
	movq	%rax, %rdi	# tmp693,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57193
	jne	.L1442	#,
	.loc 1 5481 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp694
	movq	%rax, %rdi	# tmp694,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1443	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1223
	cmpl	$4, %eax	#, ix86_cpu.1223
	je	.L1441	#,
.L1443:
	.loc 1 5481 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp695
	movq	%rax, %rdi	# tmp695,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1442	#,
	.loc 1 5481 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1224
	cmpl	$4, %eax	#, ix86_cpu.1224
	jne	.L1442	#,
.L1441:
	.loc 1 5483 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1442:
	.loc 1 5487 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1278:
	.loc 1 5491 0
	movq	-8(%rbp), %rax	# insn, tmp696
	movq	%rax, %rdi	# tmp696,
	call	extract_constrain_insn_cached	#
	.loc 1 5492 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1225
	cmpl	$3, %eax	#, which_alternative.1225
	jne	.L1444	#,
	.loc 1 5492 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1226
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1227
	movl	%eax, %ecx	# ix86_cpu.1228, tmp734
	sarl	%cl, %edx	# tmp734, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1445	#,
	.loc 1 5492 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1229
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1230
	movl	%eax, %ecx	# ix86_cpu.1231, tmp736
	sarl	%cl, %edx	# tmp736, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1445	#,
.L1444:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1232
	cmpl	$3, %eax	#, which_alternative.1232
	jne	.L1446	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1233
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1234
	movl	%eax, %ecx	# ix86_cpu.1235, tmp738
	sarl	%cl, %edx	# tmp738, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1447	#,
	.loc 1 5492 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1236
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1237
	movl	%eax, %ecx	# ix86_cpu.1238, tmp740
	sarl	%cl, %edx	# tmp740, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1447	#,
.L1446:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1239
	cmpl	$3, %eax	#, which_alternative.1239
	je	.L1447	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1240
	cmpl	$5, %eax	#, which_alternative.1240
	je	.L1447	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1241
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1242
	movl	%eax, %ecx	# ix86_cpu.1243, tmp742
	sarl	%cl, %edx	# tmp742, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1445	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1244
	cmpl	$2, %eax	#, which_alternative.1244
	je	.L1447	#,
.L1445:
	movq	-8(%rbp), %rax	# insn, tmp697
	movq	%rax, %rdi	# tmp697,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1447	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1245
	cmpl	$4, %eax	#, ix86_cpu.1245
	je	.L1448	#,
.L1447:
	.loc 1 5492 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1246
	cmpl	$3, %eax	#, which_alternative.1246
	jne	.L1449	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1247
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1248
	movl	%eax, %ecx	# ix86_cpu.1249, tmp744
	sarl	%cl, %edx	# tmp744, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1450	#,
	.loc 1 5492 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1250
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1251
	movl	%eax, %ecx	# ix86_cpu.1252, tmp746
	sarl	%cl, %edx	# tmp746, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1450	#,
.L1449:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1253
	cmpl	$3, %eax	#, which_alternative.1253
	je	.L1451	#,
	.loc 1 5492 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1254
	cmpl	$5, %eax	#, which_alternative.1254
	je	.L1451	#,
	.loc 1 5492 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1255
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1256
	movl	%eax, %ecx	# ix86_cpu.1257, tmp748
	sarl	%cl, %edx	# tmp748, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1450	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1258
	cmpl	$2, %eax	#, which_alternative.1258
	jne	.L1450	#,
.L1451:
	movq	-8(%rbp), %rax	# insn, tmp698
	movq	%rax, %rdi	# tmp698,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1452	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1259
	cmpl	$4, %eax	#, ix86_cpu.1259
	je	.L1448	#,
.L1452:
	.loc 1 5492 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp699
	movq	%rax, %rdi	# tmp699,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1450	#,
	.loc 1 5492 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1260
	cmpl	$4, %eax	#, ix86_cpu.1260
	jne	.L1450	#,
.L1448:
	.loc 1 5494 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1450:
	.loc 1 5498 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1277:
	.loc 1 5502 0
	movq	-8(%rbp), %rax	# insn, tmp700
	movq	%rax, %rdi	# tmp700,
	call	extract_constrain_insn_cached	#
	.loc 1 5503 0
	movq	-8(%rbp), %rax	# insn, tmp701
	movq	%rax, %rdi	# tmp701,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57193
	jne	.L1453	#,
	.loc 1 5503 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp702
	movq	%rax, %rdi	# tmp702,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1453	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1261
	cmpl	$4, %eax	#, ix86_cpu.1261
	je	.L1454	#,
.L1453:
	.loc 1 5503 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1262
	testl	%eax, %eax	# which_alternative.1262
	je	.L1455	#,
	.loc 1 5503 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1263
	cmpl	$1, %eax	#, which_alternative.1263
	jne	.L1456	#,
.L1455:
	.loc 1 5503 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1264
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1265
	movl	%eax, %ecx	# ix86_cpu.1266, tmp750
	sarl	%cl, %edx	# tmp750, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1457	#,
	.loc 1 5503 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.1267
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1268
	movl	%eax, %ecx	# ix86_cpu.1269, tmp752
	sarl	%cl, %edx	# tmp752, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1457	#,
.L1456:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1270
	cmpl	$2, %eax	#, which_alternative.1270
	je	.L1458	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1271
	cmpl	$3, %eax	#, which_alternative.1271
	je	.L1458	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1272
	cmpl	$4, %eax	#, which_alternative.1272
	jne	.L1459	#,
.L1458:
	.loc 1 5503 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57191
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1457	#,
.L1459:
	.loc 1 5503 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1273
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1274
	movl	%eax, %ecx	# ix86_cpu.1275, tmp754
	sarl	%cl, %edx	# tmp754, D.57190
	movl	%edx, %eax	# D.57190, D.57190
	andl	$1, %eax	#, D.57190
	testl	%eax, %eax	# D.57190
	je	.L1457	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1276
	testl	%eax, %eax	# which_alternative.1276
	je	.L1460	#,
	.loc 1 5503 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1277
	cmpl	$1, %eax	#, which_alternative.1277
	je	.L1460	#,
	.loc 1 5503 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1278
	cmpl	$3, %eax	#, which_alternative.1278
	je	.L1460	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1279
	cmpl	$4, %eax	#, which_alternative.1279
	jne	.L1457	#,
.L1460:
	movq	-8(%rbp), %rax	# insn, tmp703
	movq	%rax, %rdi	# tmp703,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1461	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1280
	cmpl	$4, %eax	#, ix86_cpu.1280
	je	.L1454	#,
.L1461:
	.loc 1 5503 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp704
	movq	%rax, %rdi	# tmp704,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1457	#,
	.loc 1 5503 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1281
	cmpl	$4, %eax	#, ix86_cpu.1281
	jne	.L1457	#,
.L1454:
	.loc 1 5505 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1457:
	.loc 1 5509 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1276:
	.loc 1 5522 0
	movq	-8(%rbp), %rax	# insn, tmp705
	movq	%rax, %rdi	# tmp705,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1462	#,
	.loc 1 5522 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1282
	cmpl	$4, %eax	#, ix86_cpu.1282
	jne	.L1462	#,
	.loc 1 5524 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1462:
	.loc 1 5528 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1275:
	.loc 1 5532 0
	movq	-8(%rbp), %rax	# insn, tmp706
	movq	%rax, %rdi	# tmp706,
	call	extract_constrain_insn_cached	#
	.loc 1 5533 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1283
	cmpl	$4, %eax	#, which_alternative.1283
	je	.L1463	#,
	.loc 1 5533 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1284
	cmpl	$5, %eax	#, which_alternative.1284
	je	.L1463	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1285
	cmpl	$6, %eax	#, which_alternative.1285
	je	.L1463	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1286
	cmpl	$7, %eax	#, which_alternative.1286
	je	.L1463	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1287
	cmpl	$8, %eax	#, which_alternative.1287
	je	.L1463	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1288
	cmpl	$9, %eax	#, which_alternative.1288
	je	.L1463	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.1289
	testl	%eax, %eax	# flag_pic.1289
	je	.L1464	#,
	.loc 1 5533 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57191
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57190
	jne	.L1463	#,
.L1464:
	.loc 1 5533 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp707
	movq	%rax, %rdi	# tmp707,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1463	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1290
	cmpl	$4, %eax	#, ix86_cpu.1290
	je	.L1465	#,
.L1463:
	.loc 1 5533 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1291
	cmpl	$4, %eax	#, which_alternative.1291
	je	.L1466	#,
	.loc 1 5533 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1292
	cmpl	$5, %eax	#, which_alternative.1292
	je	.L1466	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1293
	cmpl	$6, %eax	#, which_alternative.1293
	je	.L1466	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1294
	cmpl	$7, %eax	#, which_alternative.1294
	je	.L1466	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1295
	cmpl	$8, %eax	#, which_alternative.1295
	je	.L1466	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1296
	cmpl	$9, %eax	#, which_alternative.1296
	je	.L1466	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.1297
	testl	%eax, %eax	# flag_pic.1297
	je	.L1466	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57191
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57191,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57190
	je	.L1466	#,
	movq	-8(%rbp), %rax	# insn, tmp708
	movq	%rax, %rdi	# tmp708,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1467	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1298
	cmpl	$4, %eax	#, ix86_cpu.1298
	je	.L1465	#,
.L1467:
	.loc 1 5533 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp709
	movq	%rax, %rdi	# tmp709,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1466	#,
	.loc 1 5533 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1299
	cmpl	$4, %eax	#, ix86_cpu.1299
	jne	.L1466	#,
.L1465:
	.loc 1 5535 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1466:
	.loc 1 5539 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1274:
	.loc 1 5748 0
	movq	-8(%rbp), %rax	# insn, tmp710
	movq	%rax, %rdi	# tmp710,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1468	#,
	.loc 1 5748 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1300
	cmpl	$4, %eax	#, ix86_cpu.1300
	je	.L1469	#,
.L1468:
	.loc 1 5748 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp711
	movq	%rax, %rdi	# tmp711,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1470	#,
	.loc 1 5748 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1301
	cmpl	$4, %eax	#, ix86_cpu.1301
	jne	.L1470	#,
.L1469:
	.loc 1 5750 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1470:
	.loc 1 5754 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1273:
	.loc 1 5766 0
	movq	-8(%rbp), %rax	# insn, tmp712
	movq	%rax, %rdi	# tmp712,
	call	extract_constrain_insn_cached	#
	.loc 1 5767 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1302
	testl	%eax, %eax	# which_alternative.1302
	jne	.L1471	#,
	.loc 1 5767 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp713
	movq	%rax, %rdi	# tmp713,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1472	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1303
	cmpl	$4, %eax	#, ix86_cpu.1303
	je	.L1473	#,
.L1472:
	.loc 1 5767 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp714
	movq	%rax, %rdi	# tmp714,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1471	#,
	.loc 1 5767 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1304
	cmpl	$4, %eax	#, ix86_cpu.1304
	je	.L1473	#,
.L1471:
	.loc 1 5767 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1305
	cmpl	$1, %eax	#, which_alternative.1305
	jne	.L1474	#,
	.loc 1 5767 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp715
	movq	%rax, %rdi	# tmp715,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	jne	.L1475	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1306
	cmpl	$4, %eax	#, ix86_cpu.1306
	je	.L1473	#,
.L1475:
	.loc 1 5767 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp716
	movq	%rax, %rdi	# tmp716,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57192
	je	.L1474	#,
	.loc 1 5767 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1307
	cmpl	$4, %eax	#, ix86_cpu.1307
	jne	.L1474	#,
.L1473:
	.loc 1 5769 0 is_stmt 1
	movl	$1, %eax	#, D.57190
	jmp	.L1310	#
.L1474:
	.loc 1 5773 0
	movl	$17, %eax	#, D.57190
	jmp	.L1310	#
.L1271:
	.loc 1 5777 0
	movq	-8(%rbp), %rax	# insn, tmp717
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57191
	movzwl	(%rax), %eax	# _552->code, D.57194
	cmpw	$40, %ax	#, D.57194
	je	.L1270	#,
	.loc 1 5778 0
	movq	-8(%rbp), %rax	# insn, tmp718
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57191
	movq	%rax, %rdi	# D.57191,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57190
	jns	.L1270	#,
	.loc 1 5779 0
	movq	-8(%rbp), %rax	# insn, tmp719
	movl	$__FUNCTION__.12724, %ecx	#,
	movl	$5779, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp719,
	call	_fatal_insn_not_found	#
.L1270:
	.loc 1 5781 0
	movl	$17, %eax	#, D.57190
.L1310:
	.loc 1 5784 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE26:
	.size	k6_alu_unit_ready_cost, .-k6_alu_unit_ready_cost
	.globl	k6_alu_unit_blockage_range
	.type	k6_alu_unit_blockage_range, @function
k6_alu_unit_blockage_range:
.LFB27:
	.loc 1 5790 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 5791 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57195
	testl	%eax, %eax	# D.57195
	js	.L1477	#,
	.loc 1 5791 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1308
	jmp	.L1478	#
.L1477:
	.loc 1 5791 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1478:
	.loc 1 5791 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1308
	jne	.L1479	#,
	.loc 1 5794 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57196
	movzwl	(%rax), %eax	# _6->code, D.57197
	cmpw	$40, %ax	#, D.57197
	je	.L1479	#,
	.loc 1 5795 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57196
	movq	%rax, %rdi	# D.57196,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57195
	jns	.L1479	#,
	.loc 1 5796 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.12732, %ecx	#,
	movl	$5796, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1479:
	.loc 1 5798 0
	movl	$65553, %eax	#, D.57198
	.loc 1 5801 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE27:
	.size	k6_alu_unit_blockage_range, .-k6_alu_unit_blockage_range
	.globl	k6_alux_unit_ready_cost
	.type	k6_alux_unit_ready_cost, @function
k6_alux_unit_ready_cost:
.LFB28:
	.loc 1 5807 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 5808 0
	movq	-8(%rbp), %rax	# insn, tmp200
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57199
	testl	%eax, %eax	# D.57199
	js	.L1483	#,
	.loc 1 5808 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp201
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.1309
	jmp	.L1484	#
.L1483:
	.loc 1 5808 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp202
	movq	%rax, %rdi	# tmp202,
	call	recog_memoized_1	#
.L1484:
	.loc 1 5808 0 discriminator 3
	addl	$1, %eax	#, tmp203
	cmpl	$637, %eax	#, tmp203
	ja	.L1485	#,
	movl	%eax, %eax	# tmp203, tmp204
	movq	.L1487(,%rax,8), %rax	#, tmp205
	jmp	*%rax	# tmp205
	.section	.rodata
	.align 8
	.align 4
.L1487:
	.quad	.L1486
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1489
	.quad	.L1489
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1490
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1489
	.quad	.L1485
	.quad	.L1485
	.quad	.L1491
	.quad	.L1485
	.quad	.L1485
	.quad	.L1489
	.quad	.L1488
	.quad	.L1488
	.quad	.L1492
	.quad	.L1492
	.quad	.L1485
	.quad	.L1485
	.quad	.L1488
	.quad	.L1492
	.quad	.L1493
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1489
	.quad	.L1489
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1489
	.quad	.L1488
	.quad	.L1489
	.quad	.L1494
	.quad	.L1488
	.quad	.L1489
	.quad	.L1494
	.quad	.L1488
	.quad	.L1485
	.quad	.L1495
	.quad	.L1488
	.quad	.L1488
	.quad	.L1485
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1496
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1496
	.quad	.L1496
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1497
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1498
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1485
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1499
	.quad	.L1500
	.quad	.L1500
	.quad	.L1485
	.quad	.L1485
	.quad	.L1500
	.quad	.L1485
	.quad	.L1485
	.quad	.L1500
	.quad	.L1485
	.quad	.L1485
	.quad	.L1500
	.quad	.L1485
	.quad	.L1500
	.quad	.L1500
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1485
	.quad	.L1485
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1489
	.quad	.L1488
	.quad	.L1489
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1489
	.quad	.L1488
	.quad	.L1489
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1488
	.quad	.L1485
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1501
	.quad	.L1501
	.quad	.L1485
	.quad	.L1485
	.quad	.L1489
	.quad	.L1501
	.quad	.L1502
	.quad	.L1501
	.quad	.L1503
	.quad	.L1501
	.quad	.L1501
	.quad	.L1501
	.quad	.L1501
	.quad	.L1501
	.quad	.L1501
	.quad	.L1494
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1485
	.quad	.L1485
	.quad	.L1489
	.quad	.L1494
	.quad	.L1494
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1485
	.quad	.L1485
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1489
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1488
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1489
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1488
	.quad	.L1485
	.quad	.L1488
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1485
	.quad	.L1495
	.quad	.L1495
	.text
.L1503:
	.loc 1 5811 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	%rax, %rdi	# tmp206,
	call	extract_constrain_insn_cached	#
	.loc 1 5812 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1310
	cmpl	$4, %eax	#, ix86_cpu.1310
	jne	.L1504	#,
	.loc 1 5812 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1311
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1312
	movl	%eax, %ecx	# ix86_cpu.1313, tmp229
	sarl	%cl, %edx	# tmp229, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1505	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57200
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	const1_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1505	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1314
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1315
	movl	%eax, %ecx	# ix86_cpu.1316, tmp231
	sarl	%cl, %edx	# tmp231, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1504	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57200
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	const1_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1504	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1504	#,
.L1505:
	.loc 1 5814 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1504:
	.loc 1 5818 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1502:
	.loc 1 5822 0
	movq	-8(%rbp), %rax	# insn, tmp207
	movq	%rax, %rdi	# tmp207,
	call	extract_constrain_insn_cached	#
	.loc 1 5823 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1317
	cmpl	$4, %eax	#, ix86_cpu.1317
	jne	.L1507	#,
	.loc 1 5823 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1318
	testl	%eax, %eax	# which_alternative.1318
	jne	.L1508	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1319
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1320
	movl	%eax, %ecx	# ix86_cpu.1321, tmp233
	sarl	%cl, %edx	# tmp233, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1509	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57200
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	const1_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1509	#,
.L1508:
	.loc 1 5823 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1322
	testl	%eax, %eax	# which_alternative.1322
	jne	.L1507	#,
	.loc 1 5823 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1323
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1324
	movl	%eax, %ecx	# ix86_cpu.1325, tmp235
	sarl	%cl, %edx	# tmp235, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1507	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57200
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	const1_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1507	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1507	#,
.L1509:
	.loc 1 5825 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1507:
	.loc 1 5829 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1501:
	.loc 1 5842 0
	movq	-8(%rbp), %rax	# insn, tmp208
	movq	%rax, %rdi	# tmp208,
	call	extract_insn_cached	#
	.loc 1 5843 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1326
	cmpl	$4, %eax	#, ix86_cpu.1326
	jne	.L1510	#,
	.loc 1 5843 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp209
	movq	%rax, %rdi	# tmp209,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57201
	je	.L1511	#,
	movq	-8(%rbp), %rax	# insn, tmp210
	movq	%rax, %rdi	# tmp210,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57201
	jne	.L1510	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1510	#,
.L1511:
	.loc 1 5845 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1510:
	.loc 1 5849 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1500:
	.loc 1 5859 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1327
	cmpl	$4, %eax	#, ix86_cpu.1327
	jne	.L1512	#,
	.loc 1 5861 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1512:
	.loc 1 5865 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1499:
	.loc 1 5885 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1328
	cmpl	$4, %eax	#, ix86_cpu.1328
	jne	.L1513	#,
	.loc 1 5887 0
	movl	$2, %eax	#, D.57199
	jmp	.L1506	#
.L1513:
	.loc 1 5891 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1498:
	.loc 1 5895 0
	movq	-8(%rbp), %rax	# insn, tmp211
	movq	%rax, %rdi	# tmp211,
	call	extract_constrain_insn_cached	#
	.loc 1 5896 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1329
	cmpl	$4, %eax	#, ix86_cpu.1329
	jne	.L1514	#,
	.loc 1 5896 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1330
	cmpl	$3, %eax	#, which_alternative.1330
	je	.L1514	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1514	#,
	.loc 1 5898 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1514:
	.loc 1 5902 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1497:
	.loc 1 5906 0
	movq	-8(%rbp), %rax	# insn, tmp212
	movq	%rax, %rdi	# tmp212,
	call	extract_constrain_insn_cached	#
	.loc 1 5907 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1331
	cmpl	$4, %eax	#, ix86_cpu.1331
	jne	.L1515	#,
	.loc 1 5907 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1332
	cmpl	$2, %eax	#, which_alternative.1332
	je	.L1515	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1515	#,
	.loc 1 5909 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1515:
	.loc 1 5913 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1496:
	.loc 1 5919 0
	movq	-8(%rbp), %rax	# insn, tmp213
	movq	%rax, %rdi	# tmp213,
	call	extract_insn_cached	#
	.loc 1 5920 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1333
	cmpl	$4, %eax	#, ix86_cpu.1333
	jne	.L1516	#,
	.loc 1 5920 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp214
	movq	%rax, %rdi	# tmp214,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57201
	je	.L1517	#,
	.loc 1 5920 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp215
	movq	%rax, %rdi	# tmp215,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57201
	jne	.L1516	#,
.L1517:
	.loc 1 5920 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1516	#,
	.loc 1 5922 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1516:
	.loc 1 5926 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1495:
	.loc 1 5932 0
	movq	-8(%rbp), %rax	# insn, tmp216
	movq	%rax, %rdi	# tmp216,
	call	extract_constrain_insn_cached	#
	.loc 1 5933 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1334
	cmpl	$4, %eax	#, ix86_cpu.1334
	jne	.L1518	#,
	.loc 1 5933 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1335
	testl	%eax, %eax	# which_alternative.1335
	jne	.L1518	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1518	#,
	.loc 1 5935 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1518:
	.loc 1 5939 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1494:
	.loc 1 5947 0
	movq	-8(%rbp), %rax	# insn, tmp217
	movq	%rax, %rdi	# tmp217,
	call	extract_constrain_insn_cached	#
	.loc 1 5948 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1336
	cmpl	$4, %eax	#, ix86_cpu.1336
	jne	.L1519	#,
	.loc 1 5948 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1337
	testl	%eax, %eax	# which_alternative.1337
	jne	.L1520	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1519	#,
.L1520:
	.loc 1 5950 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1519:
	.loc 1 5954 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1493:
	.loc 1 5958 0
	movq	-8(%rbp), %rax	# insn, tmp218
	movq	%rax, %rdi	# tmp218,
	call	extract_constrain_insn_cached	#
	.loc 1 5959 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1338
	cmpl	$4, %eax	#, ix86_cpu.1338
	jne	.L1521	#,
	.loc 1 5959 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1522	#,
	.loc 1 5959 0 discriminator 2
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1339
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1340
	movl	%eax, %ecx	# ix86_cpu.1341, tmp237
	sarl	%cl, %edx	# tmp237, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1521	#,
.L1522:
	.loc 1 5959 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1521	#,
	.loc 1 5961 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1521:
	.loc 1 5965 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1492:
	.loc 1 5971 0
	movq	-8(%rbp), %rax	# insn, tmp219
	movq	%rax, %rdi	# tmp219,
	call	extract_insn_cached	#
	.loc 1 5972 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1342
	cmpl	$4, %eax	#, ix86_cpu.1342
	jne	.L1523	#,
	.loc 1 5972 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp220
	movq	%rax, %rdi	# tmp220,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57201
	jne	.L1523	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1523	#,
	.loc 1 5974 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1523:
	.loc 1 5978 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1491:
	.loc 1 5982 0
	movq	-8(%rbp), %rax	# insn, tmp221
	movq	%rax, %rdi	# tmp221,
	call	extract_constrain_insn_cached	#
	.loc 1 5983 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1343
	cmpl	$4, %eax	#, ix86_cpu.1343
	jne	.L1524	#,
	.loc 1 5983 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1344
	cmpl	$3, %eax	#, which_alternative.1344
	jne	.L1525	#,
	.loc 1 5983 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1345
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1346
	movl	%eax, %ecx	# ix86_cpu.1347, tmp239
	sarl	%cl, %edx	# tmp239, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1524	#,
	.loc 1 5983 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1348
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1349
	movl	%eax, %ecx	# ix86_cpu.1350, tmp241
	sarl	%cl, %edx	# tmp241, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1524	#,
.L1525:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1351
	cmpl	$3, %eax	#, which_alternative.1351
	je	.L1526	#,
	.loc 1 5983 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1352
	cmpl	$5, %eax	#, which_alternative.1352
	je	.L1526	#,
	.loc 1 5983 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1353
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1354
	movl	%eax, %ecx	# ix86_cpu.1355, tmp243
	sarl	%cl, %edx	# tmp243, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1524	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1356
	cmpl	$2, %eax	#, which_alternative.1356
	jne	.L1524	#,
.L1526:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1524	#,
	.loc 1 5985 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1524:
	.loc 1 5989 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1490:
	.loc 1 5993 0
	movq	-8(%rbp), %rax	# insn, tmp222
	movq	%rax, %rdi	# tmp222,
	call	extract_constrain_insn_cached	#
	.loc 1 5994 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1357
	cmpl	$4, %eax	#, ix86_cpu.1357
	jne	.L1527	#,
	.loc 1 5994 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1358
	testl	%eax, %eax	# which_alternative.1358
	je	.L1528	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1359
	cmpl	$1, %eax	#, which_alternative.1359
	jne	.L1529	#,
.L1528:
	.loc 1 5994 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1360
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1361
	movl	%eax, %ecx	# ix86_cpu.1362, tmp245
	sarl	%cl, %edx	# tmp245, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1527	#,
	.loc 1 5994 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.1363
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1364
	movl	%eax, %ecx	# ix86_cpu.1365, tmp247
	sarl	%cl, %edx	# tmp247, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1527	#,
.L1529:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1366
	cmpl	$2, %eax	#, which_alternative.1366
	je	.L1530	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1367
	cmpl	$3, %eax	#, which_alternative.1367
	je	.L1530	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1368
	cmpl	$4, %eax	#, which_alternative.1368
	jne	.L1531	#,
.L1530:
	.loc 1 5994 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57200
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57199
	jne	.L1527	#,
.L1531:
	.loc 1 5994 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1369
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1370
	movl	%eax, %ecx	# ix86_cpu.1371, tmp249
	sarl	%cl, %edx	# tmp249, D.57199
	movl	%edx, %eax	# D.57199, D.57199
	andl	$1, %eax	#, D.57199
	testl	%eax, %eax	# D.57199
	je	.L1527	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1372
	testl	%eax, %eax	# which_alternative.1372
	je	.L1532	#,
	.loc 1 5994 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1373
	cmpl	$1, %eax	#, which_alternative.1373
	je	.L1532	#,
	.loc 1 5994 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1374
	cmpl	$3, %eax	#, which_alternative.1374
	je	.L1532	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1375
	cmpl	$4, %eax	#, which_alternative.1375
	jne	.L1527	#,
.L1532:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1527	#,
	.loc 1 5996 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1527:
	.loc 1 6000 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1489:
	.loc 1 6099 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1376
	cmpl	$4, %eax	#, ix86_cpu.1376
	jne	.L1533	#,
	.loc 1 6101 0
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1533:
	.loc 1 6105 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1488:
	.loc 1 6250 0
	movq	-8(%rbp), %rax	# insn, tmp223
	movq	%rax, %rdi	# tmp223,
	call	extract_insn_cached	#
	.loc 1 6251 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1377
	cmpl	$4, %eax	#, ix86_cpu.1377
	jne	.L1534	#,
	.loc 1 6251 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57200
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57200,
	call	general_operand	#
	testl	%eax, %eax	# D.57199
	je	.L1534	#,
	.loc 1 6253 0 is_stmt 1
	movl	$1, %eax	#, D.57199
	jmp	.L1506	#
.L1534:
	.loc 1 6257 0
	movl	$17, %eax	#, D.57199
	jmp	.L1506	#
.L1486:
	.loc 1 6261 0
	movq	-8(%rbp), %rax	# insn, tmp224
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57200
	movzwl	(%rax), %eax	# _172->code, D.57202
	cmpw	$40, %ax	#, D.57202
	je	.L1485	#,
	.loc 1 6262 0
	movq	-8(%rbp), %rax	# insn, tmp225
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57200
	movq	%rax, %rdi	# D.57200,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57199
	jns	.L1485	#,
	.loc 1 6263 0
	movq	-8(%rbp), %rax	# insn, tmp226
	movl	$__FUNCTION__.13033, %ecx	#,
	movl	$6263, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp226,
	call	_fatal_insn_not_found	#
.L1485:
	.loc 1 6265 0
	movl	$17, %eax	#, D.57199
.L1506:
	.loc 1 6268 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE28:
	.size	k6_alux_unit_ready_cost, .-k6_alux_unit_ready_cost
	.globl	k6_alux_unit_blockage_range
	.type	k6_alux_unit_blockage_range, @function
k6_alux_unit_blockage_range:
.LFB29:
	.loc 1 6274 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 6275 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57203
	testl	%eax, %eax	# D.57203
	js	.L1536	#,
	.loc 1 6275 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1378
	jmp	.L1537	#
.L1536:
	.loc 1 6275 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1537:
	.loc 1 6275 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1378
	jne	.L1538	#,
	.loc 1 6278 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57204
	movzwl	(%rax), %eax	# _6->code, D.57205
	cmpw	$40, %ax	#, D.57205
	je	.L1538	#,
	.loc 1 6279 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57204
	movq	%rax, %rdi	# D.57204,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57203
	jns	.L1538	#,
	.loc 1 6280 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.13041, %ecx	#,
	movl	$6280, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1538:
	.loc 1 6282 0
	movl	$65553, %eax	#, D.57206
	.loc 1 6285 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE29:
	.size	k6_alux_unit_blockage_range, .-k6_alux_unit_blockage_range
	.globl	ppro_p34_unit_ready_cost
	.type	ppro_p34_unit_ready_cost, @function
ppro_p34_unit_ready_cost:
.LFB30:
	.loc 1 6291 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 6292 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57207
	testl	%eax, %eax	# D.57207
	js	.L1542	#,
	.loc 1 6292 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1379
	jmp	.L1543	#
.L1542:
	.loc 1 6292 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1543:
	.loc 1 6292 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1379
	jne	.L1544	#,
	.loc 1 6295 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57208
	movzwl	(%rax), %eax	# _6->code, D.57209
	cmpw	$40, %ax	#, D.57209
	je	.L1544	#,
	.loc 1 6296 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57208
	movq	%rax, %rdi	# D.57208,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57207
	jns	.L1544	#,
	.loc 1 6297 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.13049, %ecx	#,
	movl	$6297, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1544:
	.loc 1 6299 0
	movl	$1, %eax	#, D.57207
	.loc 1 6302 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE30:
	.size	ppro_p34_unit_ready_cost, .-ppro_p34_unit_ready_cost
	.globl	ppro_p2_unit_ready_cost
	.type	ppro_p2_unit_ready_cost, @function
ppro_p2_unit_ready_cost:
.LFB31:
	.loc 1 6308 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 6309 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57210
	testl	%eax, %eax	# D.57210
	js	.L1548	#,
	.loc 1 6309 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1380
	jmp	.L1549	#
.L1548:
	.loc 1 6309 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1549:
	.loc 1 6309 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1380
	jne	.L1550	#,
	.loc 1 6312 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57211
	movzwl	(%rax), %eax	# _6->code, D.57212
	cmpw	$40, %ax	#, D.57212
	je	.L1550	#,
	.loc 1 6313 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57211
	movq	%rax, %rdi	# D.57211,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57210
	jns	.L1550	#,
	.loc 1 6314 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.13057, %ecx	#,
	movl	$6314, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1550:
	.loc 1 6316 0
	movl	$3, %eax	#, D.57210
	.loc 1 6319 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE31:
	.size	ppro_p2_unit_ready_cost, .-ppro_p2_unit_ready_cost
	.globl	ppro_p01_unit_ready_cost
	.type	ppro_p01_unit_ready_cost, @function
ppro_p01_unit_ready_cost:
.LFB32:
	.loc 1 6325 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 6326 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57213
	testl	%eax, %eax	# D.57213
	js	.L1554	#,
	.loc 1 6326 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1381
	jmp	.L1555	#
.L1554:
	.loc 1 6326 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1555:
	.loc 1 6326 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1381
	jne	.L1556	#,
	.loc 1 6329 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57214
	movzwl	(%rax), %eax	# _6->code, D.57215
	cmpw	$40, %ax	#, D.57215
	je	.L1556	#,
	.loc 1 6330 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57214
	movq	%rax, %rdi	# D.57214,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57213
	jns	.L1556	#,
	.loc 1 6331 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.13065, %ecx	#,
	movl	$6331, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1556:
	.loc 1 6333 0
	movl	$1, %eax	#, D.57213
	.loc 1 6336 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE32:
	.size	ppro_p01_unit_ready_cost, .-ppro_p01_unit_ready_cost
	.globl	ppro_p0_unit_ready_cost
	.type	ppro_p0_unit_ready_cost, @function
ppro_p0_unit_ready_cost:
.LFB33:
	.loc 1 6342 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 6343 0
	movq	-8(%rbp), %rax	# insn, tmp218
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57216
	testl	%eax, %eax	# D.57216
	js	.L1560	#,
	.loc 1 6343 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp219
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.1382
	jmp	.L1561	#
.L1560:
	.loc 1 6343 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp220
	movq	%rax, %rdi	# tmp220,
	call	recog_memoized_1	#
.L1561:
	.loc 1 6343 0 discriminator 3
	addl	$1, %eax	#, tmp221
	cmpl	$637, %eax	#, tmp221
	ja	.L1562	#,
	movl	%eax, %eax	# tmp221, tmp222
	movq	.L1564(,%rax,8), %rax	#, tmp223
	jmp	*%rax	# tmp223
	.section	.rodata
	.align 8
	.align 4
.L1564:
	.quad	.L1563
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1562
	.quad	.L1565
	.quad	.L1565
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1566
	.quad	.L1562
	.quad	.L1565
	.quad	.L1566
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1567
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1568
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1569
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1569
	.quad	.L1569
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1569
	.quad	.L1569
	.quad	.L1569
	.quad	.L1569
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1570
	.quad	.L1562
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1566
	.quad	.L1566
	.quad	.L1571
	.quad	.L1565
	.quad	.L1562
	.quad	.L1566
	.quad	.L1565
	.quad	.L1566
	.quad	.L1565
	.quad	.L1566
	.quad	.L1565
	.quad	.L1566
	.quad	.L1565
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1562
	.quad	.L1562
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1562
	.quad	.L1562
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1562
	.quad	.L1562
	.quad	.L1566
	.quad	.L1566
	.quad	.L1562
	.quad	.L1566
	.quad	.L1566
	.quad	.L1562
	.quad	.L1566
	.quad	.L1566
	.quad	.L1562
	.quad	.L1566
	.quad	.L1566
	.quad	.L1562
	.quad	.L1566
	.quad	.L1566
	.quad	.L1566
	.quad	.L1566
	.quad	.L1566
	.quad	.L1566
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1573
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1574
	.quad	.L1575
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1576
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1577
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1578
	.quad	.L1579
	.quad	.L1579
	.quad	.L1562
	.quad	.L1562
	.quad	.L1579
	.quad	.L1562
	.quad	.L1562
	.quad	.L1579
	.quad	.L1562
	.quad	.L1562
	.quad	.L1579
	.quad	.L1562
	.quad	.L1579
	.quad	.L1579
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1572
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1580
	.quad	.L1581
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1580
	.quad	.L1582
	.quad	.L1581
	.quad	.L1583
	.quad	.L1580
	.quad	.L1581
	.quad	.L1581
	.quad	.L1584
	.quad	.L1581
	.quad	.L1581
	.quad	.L1571
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1571
	.quad	.L1571
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1565
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1565
	.quad	.L1585
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1586
	.quad	.L1587
	.quad	.L1562
	.quad	.L1586
	.quad	.L1587
	.quad	.L1562
	.quad	.L1588
	.quad	.L1589
	.quad	.L1590
	.quad	.L1591
	.quad	.L1562
	.quad	.L1590
	.quad	.L1590
	.quad	.L1592
	.quad	.L1593
	.quad	.L1562
	.quad	.L1592
	.quad	.L1592
	.quad	.L1592
	.quad	.L1592
	.quad	.L1594
	.quad	.L1595
	.quad	.L1594
	.quad	.L1595
	.quad	.L1594
	.quad	.L1595
	.quad	.L1594
	.quad	.L1595
	.quad	.L1594
	.quad	.L1595
	.quad	.L1594
	.quad	.L1595
	.quad	.L1594
	.quad	.L1595
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1565
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1596
	.quad	.L1596
	.quad	.L1596
	.quad	.L1597
	.quad	.L1597
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1562
	.quad	.L1598
	.quad	.L1599
	.text
.L1599:
	.loc 1 6346 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp224
	movq	%rax, %rdi	# tmp224,
	call	extract_constrain_insn_cached	#
	.loc 1 6347 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1383
	cmpl	$1, %eax	#, which_alternative.1383
	jne	.L1600	#,
	.loc 1 6347 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57217
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	const0_operand	#
	testl	%eax, %eax	# D.57216
	jne	.L1600	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1384
	cmpl	$3, %eax	#, ix86_cpu.1384
	jne	.L1600	#,
	.loc 1 6349 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1600:
	.loc 1 6353 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1598:
	.loc 1 6357 0
	movq	-8(%rbp), %rax	# insn, tmp225
	movq	%rax, %rdi	# tmp225,
	call	extract_constrain_insn_cached	#
	.loc 1 6358 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1385
	cmpl	$1, %eax	#, which_alternative.1385
	jne	.L1602	#,
	.loc 1 6358 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57217
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	const0_operand	#
	testl	%eax, %eax	# D.57216
	jne	.L1602	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1386
	cmpl	$3, %eax	#, ix86_cpu.1386
	jne	.L1602	#,
	.loc 1 6360 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1602:
	.loc 1 6364 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1597:
	.loc 1 6369 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1387
	cmpl	$3, %eax	#, ix86_cpu.1387
	jne	.L1603	#,
	.loc 1 6371 0
	movl	$2, %eax	#, D.57216
	jmp	.L1601	#
.L1603:
	.loc 1 6375 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1596:
	.loc 1 6381 0
	movq	-8(%rbp), %rax	# insn, tmp226
	movq	%rax, %rdi	# tmp226,
	call	extract_constrain_insn_cached	#
	.loc 1 6382 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1388
	testl	%eax, %eax	# which_alternative.1388
	je	.L1604	#,
	.loc 1 6382 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1389
	cmpl	$1, %eax	#, which_alternative.1389
	jne	.L1605	#,
.L1604:
	.loc 1 6382 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1390
	cmpl	$3, %eax	#, ix86_cpu.1390
	jne	.L1605	#,
	.loc 1 6384 0 is_stmt 1
	movl	$2, %eax	#, D.57216
	jmp	.L1601	#
.L1605:
	.loc 1 6388 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1595:
	.loc 1 6398 0
	movq	-8(%rbp), %rax	# insn, tmp227
	movq	%rax, %rdi	# tmp227,
	call	extract_insn_cached	#
	.loc 1 6399 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	je	.L1606	#,
	.loc 1 6399 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1391
	cmpl	$3, %eax	#, ix86_cpu.1391
	jne	.L1606	#,
	.loc 1 6401 0 is_stmt 1
	movl	$5, %eax	#, D.57216
	jmp	.L1601	#
.L1606:
	.loc 1 6403 0
	movq	-8(%rbp), %rax	# insn, tmp228
	movq	%rax, %rdi	# tmp228,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57218
	jne	.L1607	#,
	.loc 1 6403 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1392
	cmpl	$3, %eax	#, ix86_cpu.1392
	jne	.L1607	#,
	.loc 1 6405 0 is_stmt 1
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1607:
	.loc 1 6409 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1594:
	.loc 1 6419 0
	movq	-8(%rbp), %rax	# insn, tmp229
	movq	%rax, %rdi	# tmp229,
	call	extract_insn_cached	#
	.loc 1 6420 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	je	.L1608	#,
	.loc 1 6420 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1393
	cmpl	$3, %eax	#, ix86_cpu.1393
	jne	.L1608	#,
	.loc 1 6422 0 is_stmt 1
	movl	$5, %eax	#, D.57216
	jmp	.L1601	#
.L1608:
	.loc 1 6424 0
	movq	-8(%rbp), %rax	# insn, tmp230
	movq	%rax, %rdi	# tmp230,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57218
	jne	.L1609	#,
	.loc 1 6424 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1394
	cmpl	$3, %eax	#, ix86_cpu.1394
	jne	.L1609	#,
	.loc 1 6426 0 is_stmt 1
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1609:
	.loc 1 6430 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1593:
	.loc 1 6434 0
	movq	-8(%rbp), %rax	# insn, tmp231
	movq	%rax, %rdi	# tmp231,
	call	extract_constrain_insn_cached	#
	.loc 1 6435 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1395
	cmpl	$2, %eax	#, which_alternative.1395
	je	.L1610	#,
	.loc 1 6435 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	je	.L1610	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1396
	cmpl	$3, %eax	#, ix86_cpu.1396
	jne	.L1610	#,
	.loc 1 6437 0 is_stmt 1
	movl	$5, %eax	#, D.57216
	jmp	.L1601	#
.L1610:
	.loc 1 6439 0
	movq	-8(%rbp), %rax	# insn, tmp232
	movq	%rax, %rdi	# tmp232,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57218
	jne	.L1611	#,
	.loc 1 6439 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1397
	cmpl	$3, %eax	#, ix86_cpu.1397
	jne	.L1611	#,
	.loc 1 6441 0 is_stmt 1
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1611:
	.loc 1 6445 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1592:
	.loc 1 6453 0
	movq	-8(%rbp), %rax	# insn, tmp233
	movq	%rax, %rdi	# tmp233,
	call	extract_insn_cached	#
	.loc 1 6454 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	je	.L1612	#,
	.loc 1 6454 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1398
	cmpl	$3, %eax	#, ix86_cpu.1398
	jne	.L1612	#,
	.loc 1 6456 0 is_stmt 1
	movl	$5, %eax	#, D.57216
	jmp	.L1601	#
.L1612:
	.loc 1 6458 0
	movq	-8(%rbp), %rax	# insn, tmp234
	movq	%rax, %rdi	# tmp234,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57218
	jne	.L1613	#,
	.loc 1 6458 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1399
	cmpl	$3, %eax	#, ix86_cpu.1399
	jne	.L1613	#,
	.loc 1 6460 0 is_stmt 1
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1613:
	.loc 1 6464 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1591:
	.loc 1 6468 0
	movq	-8(%rbp), %rax	# insn, tmp235
	movq	%rax, %rdi	# tmp235,
	call	extract_constrain_insn_cached	#
	.loc 1 6469 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1400
	cmpl	$2, %eax	#, which_alternative.1400
	je	.L1614	#,
	.loc 1 6469 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	je	.L1614	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1401
	cmpl	$3, %eax	#, ix86_cpu.1401
	jne	.L1614	#,
	.loc 1 6471 0 is_stmt 1
	movl	$5, %eax	#, D.57216
	jmp	.L1601	#
.L1614:
	.loc 1 6473 0
	movq	-8(%rbp), %rax	# insn, tmp236
	movq	%rax, %rdi	# tmp236,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57218
	jne	.L1615	#,
	.loc 1 6473 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1402
	cmpl	$3, %eax	#, ix86_cpu.1402
	jne	.L1615	#,
	.loc 1 6475 0 is_stmt 1
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1615:
	.loc 1 6479 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1590:
	.loc 1 6485 0
	movq	-8(%rbp), %rax	# insn, tmp237
	movq	%rax, %rdi	# tmp237,
	call	extract_insn_cached	#
	.loc 1 6486 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	je	.L1616	#,
	.loc 1 6486 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1403
	cmpl	$3, %eax	#, ix86_cpu.1403
	jne	.L1616	#,
	.loc 1 6488 0 is_stmt 1
	movl	$5, %eax	#, D.57216
	jmp	.L1601	#
.L1616:
	.loc 1 6490 0
	movq	-8(%rbp), %rax	# insn, tmp238
	movq	%rax, %rdi	# tmp238,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57218
	jne	.L1617	#,
	.loc 1 6490 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1404
	cmpl	$3, %eax	#, ix86_cpu.1404
	jne	.L1617	#,
	.loc 1 6492 0 is_stmt 1
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1617:
	.loc 1 6496 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1589:
	.loc 1 6500 0
	movq	-8(%rbp), %rax	# insn, tmp239
	movq	%rax, %rdi	# tmp239,
	call	extract_insn_cached	#
	.loc 1 6501 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	je	.L1618	#,
	.loc 1 6501 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1405
	cmpl	$3, %eax	#, ix86_cpu.1405
	jne	.L1618	#,
	.loc 1 6503 0 is_stmt 1
	movl	$5, %eax	#, D.57216
	jmp	.L1601	#
.L1618:
	.loc 1 6505 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	jne	.L1619	#,
	.loc 1 6505 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1406
	cmpl	$3, %eax	#, ix86_cpu.1406
	jne	.L1619	#,
	.loc 1 6507 0 is_stmt 1
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1619:
	.loc 1 6511 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1588:
	.loc 1 6515 0
	movq	-8(%rbp), %rax	# insn, tmp240
	movq	%rax, %rdi	# tmp240,
	call	extract_insn_cached	#
	.loc 1 6516 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	je	.L1620	#,
	.loc 1 6516 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1407
	cmpl	$3, %eax	#, ix86_cpu.1407
	jne	.L1620	#,
	.loc 1 6518 0 is_stmt 1
	movl	$5, %eax	#, D.57216
	jmp	.L1601	#
.L1620:
	.loc 1 6520 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	jne	.L1621	#,
	.loc 1 6520 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1408
	cmpl	$3, %eax	#, ix86_cpu.1408
	jne	.L1621	#,
	.loc 1 6522 0 is_stmt 1
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1621:
	.loc 1 6526 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1587:
	.loc 1 6531 0
	movq	-8(%rbp), %rax	# insn, tmp241
	movq	%rax, %rdi	# tmp241,
	call	extract_constrain_insn_cached	#
	.loc 1 6532 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1409
	testl	%eax, %eax	# which_alternative.1409
	jne	.L1622	#,
	.loc 1 6532 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	je	.L1622	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1410
	cmpl	$3, %eax	#, ix86_cpu.1410
	jne	.L1622	#,
	.loc 1 6534 0 is_stmt 1
	movl	$5, %eax	#, D.57216
	jmp	.L1601	#
.L1622:
	.loc 1 6536 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1411
	testl	%eax, %eax	# which_alternative.1411
	jne	.L1623	#,
	.loc 1 6536 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	jne	.L1623	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1412
	cmpl	$3, %eax	#, ix86_cpu.1412
	jne	.L1623	#,
	.loc 1 6538 0 is_stmt 1
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1623:
	.loc 1 6542 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1586:
	.loc 1 6547 0
	movq	-8(%rbp), %rax	# insn, tmp242
	movq	%rax, %rdi	# tmp242,
	call	extract_insn_cached	#
	.loc 1 6548 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	je	.L1624	#,
	.loc 1 6548 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1413
	cmpl	$3, %eax	#, ix86_cpu.1413
	jne	.L1624	#,
	.loc 1 6550 0 is_stmt 1
	movl	$5, %eax	#, D.57216
	jmp	.L1601	#
.L1624:
	.loc 1 6552 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57217
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	mult_operator	#
	testl	%eax, %eax	# D.57216
	jne	.L1625	#,
	.loc 1 6552 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1414
	cmpl	$3, %eax	#, ix86_cpu.1414
	jne	.L1625	#,
	.loc 1 6554 0 is_stmt 1
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1625:
	.loc 1 6558 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1585:
	.loc 1 6562 0
	movq	-8(%rbp), %rax	# insn, tmp243
	movq	%rax, %rdi	# tmp243,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57218
	jne	.L1626	#,
	.loc 1 6562 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1415
	cmpl	$3, %eax	#, ix86_cpu.1415
	jne	.L1626	#,
	.loc 1 6564 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1626:
	.loc 1 6568 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1584:
	.loc 1 6572 0
	movq	-8(%rbp), %rax	# insn, tmp244
	movq	%rax, %rdi	# tmp244,
	call	extract_constrain_insn_cached	#
	.loc 1 6573 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1416
	cmpl	$2, %eax	#, which_alternative.1416
	jne	.L1627	#,
	.loc 1 6573 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1417
	cmpl	$3, %eax	#, ix86_cpu.1417
	je	.L1628	#,
.L1627:
	.loc 1 6573 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp245
	movq	%rax, %rdi	# tmp245,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57218
	jne	.L1629	#,
	.loc 1 6573 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1418
	cmpl	$3, %eax	#, ix86_cpu.1418
	jne	.L1629	#,
.L1628:
	.loc 1 6575 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1629:
	.loc 1 6579 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1583:
	.loc 1 6583 0
	movq	-8(%rbp), %rax	# insn, tmp246
	movq	%rax, %rdi	# tmp246,
	call	extract_constrain_insn_cached	#
	.loc 1 6584 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1419
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1420
	movl	%eax, %ecx	# ix86_cpu.1421, tmp267
	sarl	%cl, %edx	# tmp267, D.57216
	movl	%edx, %eax	# D.57216, D.57216
	andl	$1, %eax	#, D.57216
	testl	%eax, %eax	# D.57216
	je	.L1630	#,
	.loc 1 6584 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57217
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	const1_operand	#
	testl	%eax, %eax	# D.57216
	jne	.L1631	#,
.L1630:
	.loc 1 6584 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1422
	cmpl	$3, %eax	#, ix86_cpu.1422
	jne	.L1631	#,
	.loc 1 6586 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1631:
	.loc 1 6590 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1582:
	.loc 1 6594 0
	movq	-8(%rbp), %rax	# insn, tmp247
	movq	%rax, %rdi	# tmp247,
	call	extract_constrain_insn_cached	#
	.loc 1 6595 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1423
	cmpl	$1, %eax	#, which_alternative.1423
	jne	.L1632	#,
	.loc 1 6595 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1424
	cmpl	$3, %eax	#, ix86_cpu.1424
	je	.L1633	#,
.L1632:
	.loc 1 6595 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1425
	testl	%eax, %eax	# which_alternative.1425
	jne	.L1634	#,
	.loc 1 6595 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1426
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1427
	movl	%eax, %ecx	# ix86_cpu.1428, tmp269
	sarl	%cl, %edx	# tmp269, D.57216
	movl	%edx, %eax	# D.57216, D.57216
	andl	$1, %eax	#, D.57216
	testl	%eax, %eax	# D.57216
	je	.L1635	#,
	.loc 1 6595 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57217
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	const1_operand	#
	testl	%eax, %eax	# D.57216
	jne	.L1634	#,
.L1635:
	.loc 1 6595 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1429
	cmpl	$3, %eax	#, ix86_cpu.1429
	jne	.L1634	#,
.L1633:
	.loc 1 6597 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1634:
	.loc 1 6601 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1581:
	.loc 1 6610 0
	movq	-8(%rbp), %rax	# insn, tmp248
	movq	%rax, %rdi	# tmp248,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57218
	jne	.L1636	#,
	.loc 1 6610 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1430
	cmpl	$3, %eax	#, ix86_cpu.1430
	jne	.L1636	#,
	.loc 1 6612 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1636:
	.loc 1 6616 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1580:
	.loc 1 6622 0
	movq	-8(%rbp), %rax	# insn, tmp249
	movq	%rax, %rdi	# tmp249,
	call	extract_constrain_insn_cached	#
	.loc 1 6623 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1431
	cmpl	$1, %eax	#, which_alternative.1431
	jne	.L1637	#,
	.loc 1 6623 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1432
	cmpl	$3, %eax	#, ix86_cpu.1432
	je	.L1638	#,
.L1637:
	.loc 1 6623 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp250
	movq	%rax, %rdi	# tmp250,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57218
	jne	.L1639	#,
	.loc 1 6623 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1433
	cmpl	$3, %eax	#, ix86_cpu.1433
	jne	.L1639	#,
.L1638:
	.loc 1 6625 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1639:
	.loc 1 6629 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1579:
	.loc 1 6639 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1434
	cmpl	$3, %eax	#, ix86_cpu.1434
	jne	.L1640	#,
	.loc 1 6641 0
	movl	$17, %eax	#, D.57216
	jmp	.L1601	#
.L1640:
	.loc 1 6645 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1578:
	.loc 1 6665 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1435
	cmpl	$3, %eax	#, ix86_cpu.1435
	jne	.L1641	#,
	.loc 1 6667 0
	movl	$4, %eax	#, D.57216
	jmp	.L1601	#
.L1641:
	.loc 1 6671 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1577:
	.loc 1 6675 0
	movq	-8(%rbp), %rax	# insn, tmp251
	movq	%rax, %rdi	# tmp251,
	call	extract_constrain_insn_cached	#
	.loc 1 6676 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1436
	cmpl	$3, %eax	#, which_alternative.1436
	jne	.L1642	#,
	.loc 1 6676 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1437
	cmpl	$3, %eax	#, ix86_cpu.1437
	jne	.L1642	#,
	.loc 1 6678 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1642:
	.loc 1 6682 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1576:
	.loc 1 6686 0
	movq	-8(%rbp), %rax	# insn, tmp252
	movq	%rax, %rdi	# tmp252,
	call	extract_constrain_insn_cached	#
	.loc 1 6687 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1438
	cmpl	$2, %eax	#, which_alternative.1438
	jne	.L1643	#,
	.loc 1 6687 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1439
	cmpl	$3, %eax	#, ix86_cpu.1439
	jne	.L1643	#,
	.loc 1 6689 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1643:
	.loc 1 6693 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1575:
	.loc 1 6697 0
	movq	-8(%rbp), %rax	# insn, tmp253
	movq	%rax, %rdi	# tmp253,
	call	extract_constrain_insn_cached	#
	.loc 1 6698 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1440
	testl	%eax, %eax	# which_alternative.1440
	jne	.L1644	#,
	.loc 1 6698 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57217
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57216
	je	.L1645	#,
.L1644:
	.loc 1 6698 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1441
	cmpl	$3, %eax	#, ix86_cpu.1441
	jne	.L1645	#,
	.loc 1 6700 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1645:
	.loc 1 6704 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1574:
	.loc 1 6708 0
	movq	-8(%rbp), %rax	# insn, tmp254
	movq	%rax, %rdi	# tmp254,
	call	extract_constrain_insn_cached	#
	.loc 1 6709 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1442
	cmpl	$2, %eax	#, which_alternative.1442
	je	.L1646	#,
	.loc 1 6709 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57217
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57216
	je	.L1647	#,
.L1646:
	.loc 1 6709 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1443
	cmpl	$3, %eax	#, ix86_cpu.1443
	jne	.L1647	#,
	.loc 1 6711 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1647:
	.loc 1 6715 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1573:
	.loc 1 6719 0
	movq	-8(%rbp), %rax	# insn, tmp255
	movq	%rax, %rdi	# tmp255,
	call	extract_constrain_insn_cached	#
	.loc 1 6720 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1444
	cmpl	$2, %eax	#, which_alternative.1444
	je	.L1648	#,
	.loc 1 6720 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57217
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57216
	je	.L1649	#,
.L1648:
	.loc 1 6720 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1445
	cmpl	$3, %eax	#, ix86_cpu.1445
	jne	.L1649	#,
	.loc 1 6722 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1649:
	.loc 1 6726 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1572:
	.loc 1 6756 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1446
	cmpl	$3, %eax	#, ix86_cpu.1446
	jne	.L1650	#,
	.loc 1 6758 0
	movl	$3, %eax	#, D.57216
	jmp	.L1601	#
.L1650:
	.loc 1 6762 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1571:
	.loc 1 6769 0
	movq	-8(%rbp), %rax	# insn, tmp256
	movq	%rax, %rdi	# tmp256,
	call	extract_constrain_insn_cached	#
	.loc 1 6770 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1447
	cmpl	$1, %eax	#, which_alternative.1447
	jne	.L1651	#,
	.loc 1 6770 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1448
	cmpl	$3, %eax	#, ix86_cpu.1448
	jne	.L1651	#,
	.loc 1 6772 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1651:
	.loc 1 6776 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1570:
	.loc 1 6780 0
	movq	-8(%rbp), %rax	# insn, tmp257
	movq	%rax, %rdi	# tmp257,
	call	extract_constrain_insn_cached	#
	.loc 1 6781 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1449
	testl	%eax, %eax	# which_alternative.1449
	je	.L1652	#,
	.loc 1 6781 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1450
	cmpl	$1, %eax	#, which_alternative.1450
	jne	.L1653	#,
.L1652:
	.loc 1 6781 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1451
	cmpl	$3, %eax	#, ix86_cpu.1451
	jne	.L1653	#,
	.loc 1 6783 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1653:
	.loc 1 6787 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1569:
	.loc 1 6797 0
	movq	-8(%rbp), %rax	# insn, tmp258
	movq	%rax, %rdi	# tmp258,
	call	extract_constrain_insn_cached	#
	.loc 1 6798 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1452
	testl	%eax, %eax	# which_alternative.1452
	je	.L1654	#,
	.loc 1 6798 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1453
	cmpl	$1, %eax	#, which_alternative.1453
	je	.L1654	#,
	.loc 1 6798 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1454
	cmpl	$2, %eax	#, which_alternative.1454
	jne	.L1655	#,
.L1654:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1455
	cmpl	$3, %eax	#, ix86_cpu.1455
	jne	.L1655	#,
	.loc 1 6800 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1655:
	.loc 1 6804 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1568:
	.loc 1 6808 0
	movq	-8(%rbp), %rax	# insn, tmp259
	movq	%rax, %rdi	# tmp259,
	call	extract_constrain_insn_cached	#
	.loc 1 6809 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1456
	cmpl	$5, %eax	#, which_alternative.1456
	je	.L1656	#,
	.loc 1 6809 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1457
	cmpl	$6, %eax	#, which_alternative.1457
	je	.L1656	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1458
	cmpl	$7, %eax	#, which_alternative.1458
	je	.L1656	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1459
	cmpl	$8, %eax	#, which_alternative.1459
	je	.L1656	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1460
	cmpl	$4, %eax	#, which_alternative.1460
	je	.L1656	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.1461
	testl	%eax, %eax	# flag_pic.1461
	je	.L1656	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57217
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57216
	je	.L1656	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1462
	cmpl	$3, %eax	#, ix86_cpu.1462
	jne	.L1656	#,
	.loc 1 6811 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1656:
	.loc 1 6815 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1567:
	.loc 1 6819 0
	movq	-8(%rbp), %rax	# insn, tmp260
	movq	%rax, %rdi	# tmp260,
	call	extract_constrain_insn_cached	#
	.loc 1 6820 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1463
	cmpl	$4, %eax	#, which_alternative.1463
	je	.L1657	#,
	.loc 1 6820 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1464
	cmpl	$5, %eax	#, which_alternative.1464
	je	.L1657	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1465
	cmpl	$6, %eax	#, which_alternative.1465
	je	.L1657	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1466
	cmpl	$7, %eax	#, which_alternative.1466
	je	.L1657	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1467
	cmpl	$8, %eax	#, which_alternative.1467
	je	.L1657	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1468
	cmpl	$9, %eax	#, which_alternative.1468
	je	.L1657	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.1469
	testl	%eax, %eax	# flag_pic.1469
	je	.L1657	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57217
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57217,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57216
	je	.L1657	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1470
	cmpl	$3, %eax	#, ix86_cpu.1470
	jne	.L1657	#,
	.loc 1 6822 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1657:
	.loc 1 6826 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1566:
	.loc 1 6851 0
	movq	-8(%rbp), %rax	# insn, tmp261
	movq	%rax, %rdi	# tmp261,
	call	extract_constrain_insn_cached	#
	.loc 1 6852 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1471
	testl	%eax, %eax	# which_alternative.1471
	jne	.L1658	#,
	.loc 1 6852 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1472
	cmpl	$3, %eax	#, ix86_cpu.1472
	jne	.L1658	#,
	.loc 1 6854 0 is_stmt 1
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1658:
	.loc 1 6858 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1565:
	.loc 1 6959 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1473
	cmpl	$3, %eax	#, ix86_cpu.1473
	jne	.L1659	#,
	.loc 1 6961 0
	movl	$1, %eax	#, D.57216
	jmp	.L1601	#
.L1659:
	.loc 1 6965 0
	movl	$56, %eax	#, D.57216
	jmp	.L1601	#
.L1563:
	.loc 1 6969 0
	movq	-8(%rbp), %rax	# insn, tmp262
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57217
	movzwl	(%rax), %eax	# _238->code, D.57219
	cmpw	$40, %ax	#, D.57219
	je	.L1562	#,
	.loc 1 6970 0
	movq	-8(%rbp), %rax	# insn, tmp263
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57217
	movq	%rax, %rdi	# D.57217,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57216
	jns	.L1562	#,
	.loc 1 6971 0
	movq	-8(%rbp), %rax	# insn, tmp264
	movl	$__FUNCTION__.13313, %ecx	#,
	movl	$6971, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp264,
	call	_fatal_insn_not_found	#
.L1562:
	.loc 1 6973 0
	movl	$56, %eax	#, D.57216
.L1601:
	.loc 1 6976 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE33:
	.size	ppro_p0_unit_ready_cost, .-ppro_p0_unit_ready_cost
	.globl	ppro_p0_unit_blockage_range
	.type	ppro_p0_unit_blockage_range, @function
ppro_p0_unit_blockage_range:
.LFB34:
	.loc 1 6982 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 6983 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57220
	testl	%eax, %eax	# D.57220
	js	.L1661	#,
	.loc 1 6983 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1474
	jmp	.L1662	#
.L1661:
	.loc 1 6983 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1662:
	.loc 1 6983 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1474
	jne	.L1663	#,
	.loc 1 6986 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57221
	movzwl	(%rax), %eax	# _6->code, D.57222
	cmpw	$40, %ax	#, D.57222
	je	.L1663	#,
	.loc 1 6987 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57221
	movq	%rax, %rdi	# D.57221,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57220
	jns	.L1663	#,
	.loc 1 6988 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.13321, %ecx	#,
	movl	$6988, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1663:
	.loc 1 6990 0
	movl	$65553, %eax	#, D.57223
	.loc 1 6993 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE34:
	.size	ppro_p0_unit_blockage_range, .-ppro_p0_unit_blockage_range
	.globl	pent_v_unit_ready_cost
	.type	pent_v_unit_ready_cost, @function
pent_v_unit_ready_cost:
.LFB35:
	.loc 1 6999 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 7000 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57224
	testl	%eax, %eax	# D.57224
	js	.L1667	#,
	.loc 1 7000 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1475
	jmp	.L1668	#
.L1667:
	.loc 1 7000 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1668:
	.loc 1 7000 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1475
	jne	.L1669	#,
	.loc 1 7003 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57225
	movzwl	(%rax), %eax	# _6->code, D.57226
	cmpw	$40, %ax	#, D.57226
	je	.L1669	#,
	.loc 1 7004 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57225
	movq	%rax, %rdi	# D.57225,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57224
	jns	.L1669	#,
	.loc 1 7005 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.13329, %ecx	#,
	movl	$7005, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1669:
	.loc 1 7007 0
	movl	$1, %eax	#, D.57224
	.loc 1 7010 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE35:
	.size	pent_v_unit_ready_cost, .-pent_v_unit_ready_cost
	.globl	pent_uv_unit_ready_cost
	.type	pent_uv_unit_ready_cost, @function
pent_uv_unit_ready_cost:
.LFB36:
	.loc 1 7016 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 7017 0
	movq	-8(%rbp), %rax	# insn, tmp1101
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57227
	testl	%eax, %eax	# D.57227
	js	.L1673	#,
	.loc 1 7017 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1102
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.1476
	jmp	.L1674	#
.L1673:
	.loc 1 7017 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1103
	movq	%rax, %rdi	# tmp1103,
	call	recog_memoized_1	#
.L1674:
	.loc 1 7017 0 discriminator 3
	addl	$1, %eax	#, tmp1104
	cmpl	$657, %eax	#, tmp1104
	ja	.L1675	#,
	movl	%eax, %eax	# tmp1104, tmp1105
	movq	.L1677(,%rax,8), %rax	#, tmp1106
	jmp	*%rax	# tmp1106
	.section	.rodata
	.align 8
	.align 4
.L1677:
	.quad	.L1676
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1679
	.quad	.L1679
	.quad	.L1679
	.quad	.L1680
	.quad	.L1680
	.quad	.L1681
	.quad	.L1681
	.quad	.L1682
	.quad	.L1683
	.quad	.L1683
	.quad	.L1675
	.quad	.L1679
	.quad	.L1679
	.quad	.L1684
	.quad	.L1683
	.quad	.L1683
	.quad	.L1675
	.quad	.L1675
	.quad	.L1685
	.quad	.L1681
	.quad	.L1679
	.quad	.L1679
	.quad	.L1686
	.quad	.L1675
	.quad	.L1685
	.quad	.L1681
	.quad	.L1675
	.quad	.L1675
	.quad	.L1684
	.quad	.L1684
	.quad	.L1683
	.quad	.L1683
	.quad	.L1675
	.quad	.L1684
	.quad	.L1687
	.quad	.L1685
	.quad	.L1685
	.quad	.L1685
	.quad	.L1675
	.quad	.L1688
	.quad	.L1679
	.quad	.L1680
	.quad	.L1680
	.quad	.L1681
	.quad	.L1681
	.quad	.L1675
	.quad	.L1682
	.quad	.L1683
	.quad	.L1683
	.quad	.L1675
	.quad	.L1689
	.quad	.L1689
	.quad	.L1690
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1681
	.quad	.L1675
	.quad	.L1681
	.quad	.L1691
	.quad	.L1675
	.quad	.L1681
	.quad	.L1691
	.quad	.L1675
	.quad	.L1675
	.quad	.L1692
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1693
	.quad	.L1694
	.quad	.L1693
	.quad	.L1693
	.quad	.L1694
	.quad	.L1694
	.quad	.L1695
	.quad	.L1695
	.quad	.L1695
	.quad	.L1695
	.quad	.L1695
	.quad	.L1695
	.quad	.L1695
	.quad	.L1695
	.quad	.L1695
	.quad	.L1695
	.quad	.L1696
	.quad	.L1697
	.quad	.L1697
	.quad	.L1697
	.quad	.L1697
	.quad	.L1696
	.quad	.L1696
	.quad	.L1698
	.quad	.L1698
	.quad	.L1698
	.quad	.L1698
	.quad	.L1698
	.quad	.L1698
	.quad	.L1699
	.quad	.L1700
	.quad	.L1700
	.quad	.L1700
	.quad	.L1700
	.quad	.L1700
	.quad	.L1701
	.quad	.L1702
	.quad	.L1702
	.quad	.L1702
	.quad	.L1700
	.quad	.L1702
	.quad	.L1702
	.quad	.L1702
	.quad	.L1694
	.quad	.L1675
	.quad	.L1693
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1693
	.quad	.L1693
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1703
	.quad	.L1704
	.quad	.L1704
	.quad	.L1705
	.quad	.L1675
	.quad	.L1678
	.quad	.L1678
	.quad	.L1678
	.quad	.L1675
	.quad	.L1675
	.quad	.L1706
	.quad	.L1694
	.quad	.L1707
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1707
	.quad	.L1694
	.quad	.L1694
	.quad	.L1681
	.quad	.L1694
	.quad	.L1681
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1681
	.quad	.L1694
	.quad	.L1681
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1694
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1681
	.quad	.L1675
	.quad	.L1675
	.quad	.L1681
	.quad	.L1681
	.quad	.L1675
	.quad	.L1681
	.quad	.L1675
	.quad	.L1681
	.quad	.L1708
	.quad	.L1708
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1708
	.quad	.L1709
	.quad	.L1708
	.quad	.L1710
	.quad	.L1708
	.quad	.L1708
	.quad	.L1708
	.quad	.L1708
	.quad	.L1708
	.quad	.L1708
	.quad	.L1711
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1711
	.quad	.L1711
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1675
	.quad	.L1675
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1712
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1713
	.quad	.L1713
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1713
	.quad	.L1713
	.quad	.L1713
	.quad	.L1713
	.quad	.L1713
	.quad	.L1714
	.quad	.L1715
	.quad	.L1715
	.quad	.L1715
	.quad	.L1715
	.quad	.L1715
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1713
	.quad	.L1675
	.quad	.L1694
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1695
	.quad	.L1675
	.quad	.L1695
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1716
	.quad	.L1716
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1675
	.quad	.L1717
	.quad	.L1717
	.quad	.L1717
	.quad	.L1717
	.quad	.L1717
	.quad	.L1717
	.text
.L1717:
	.loc 1 7025 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1107
	movq	%rax, %rdi	# tmp1107,
	call	extract_insn_cached	#
	.loc 1 7026 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1718	#,
	.loc 1 7026 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1477
	cmpl	$2, %eax	#, ix86_cpu.1477
	jne	.L1718	#,
	.loc 1 7028 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1718:
	.loc 1 7032 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1716:
	.loc 1 7037 0
	movq	-8(%rbp), %rax	# insn, tmp1108
	movq	%rax, %rdi	# tmp1108,
	call	extract_constrain_insn_cached	#
	.loc 1 7038 0
	movq	-8(%rbp), %rax	# insn, tmp1109
	movq	%rax, %rdi	# tmp1109,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1720	#,
	.loc 1 7038 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1478
	cmpl	$1, %eax	#, which_alternative.1478
	jne	.L1720	#,
	movq	-8(%rbp), %rax	# insn, tmp1110
	movq	%rax, %rdi	# tmp1110,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1720	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1479
	cmpl	$2, %eax	#, ix86_cpu.1479
	jne	.L1720	#,
	.loc 1 7040 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1720:
	.loc 1 7042 0
	movq	-8(%rbp), %rax	# insn, tmp1111
	movq	%rax, %rdi	# tmp1111,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1721	#,
	.loc 1 7042 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1480
	testl	%eax, %eax	# which_alternative.1480
	jne	.L1721	#,
	movq	-8(%rbp), %rax	# insn, tmp1112
	movq	%rax, %rdi	# tmp1112,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1721	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1481
	cmpl	$2, %eax	#, ix86_cpu.1481
	jne	.L1721	#,
	.loc 1 7044 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1721:
	.loc 1 7046 0
	movq	-8(%rbp), %rax	# insn, tmp1113
	movq	%rax, %rdi	# tmp1113,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1722	#,
	.loc 1 7046 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1482
	cmpl	$1, %eax	#, which_alternative.1482
	jne	.L1722	#,
	movq	-8(%rbp), %rax	# insn, tmp1114
	movq	%rax, %rdi	# tmp1114,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1722	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1483
	cmpl	$2, %eax	#, ix86_cpu.1483
	jne	.L1722	#,
	.loc 1 7048 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1722:
	.loc 1 7050 0
	movq	-8(%rbp), %rax	# insn, tmp1115
	movq	%rax, %rdi	# tmp1115,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1723	#,
	.loc 1 7050 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1484
	testl	%eax, %eax	# which_alternative.1484
	jne	.L1723	#,
	movq	-8(%rbp), %rax	# insn, tmp1116
	movq	%rax, %rdi	# tmp1116,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1723	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1485
	cmpl	$2, %eax	#, ix86_cpu.1485
	jne	.L1723	#,
	.loc 1 7052 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1723:
	.loc 1 7054 0
	movq	-8(%rbp), %rax	# insn, tmp1117
	movq	%rax, %rdi	# tmp1117,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1724	#,
	.loc 1 7054 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1486
	cmpl	$1, %eax	#, which_alternative.1486
	jne	.L1724	#,
	movq	-8(%rbp), %rax	# insn, tmp1118
	movq	%rax, %rdi	# tmp1118,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1724	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1487
	cmpl	$2, %eax	#, ix86_cpu.1487
	je	.L1725	#,
.L1724:
	.loc 1 7054 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1119
	movq	%rax, %rdi	# tmp1119,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1726	#,
	.loc 1 7054 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1120
	movq	%rax, %rdi	# tmp1120,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1726	#,
	movq	-8(%rbp), %rax	# insn, tmp1121
	movq	%rax, %rdi	# tmp1121,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1726	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1488
	testl	%eax, %eax	# which_alternative.1488
	jne	.L1727	#,
	movq	-8(%rbp), %rax	# insn, tmp1122
	movq	%rax, %rdi	# tmp1122,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1727	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1489
	cmpl	$2, %eax	#, ix86_cpu.1489
	je	.L1725	#,
.L1727:
	.loc 1 7054 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1490
	cmpl	$1, %eax	#, which_alternative.1490
	jne	.L1726	#,
	.loc 1 7054 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1123
	movq	%rax, %rdi	# tmp1123,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1726	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1491
	cmpl	$2, %eax	#, ix86_cpu.1491
	jne	.L1726	#,
.L1725:
	.loc 1 7056 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1726:
	.loc 1 7060 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1715:
	.loc 1 7068 0
	movq	-8(%rbp), %rax	# insn, tmp1124
	movq	%rax, %rdi	# tmp1124,
	call	extract_insn_cached	#
	.loc 1 7069 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1728	#,
	.loc 1 7069 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1492
	cmpl	$2, %eax	#, ix86_cpu.1492
	jne	.L1728	#,
	.loc 1 7071 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1728:
	.loc 1 7075 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1714:
	.loc 1 7079 0
	movq	-8(%rbp), %rax	# insn, tmp1125
	movq	%rax, %rdi	# tmp1125,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1729	#,
	.loc 1 7079 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1126
	movq	%rax, %rdi	# tmp1126,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57231
	jne	.L1729	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1493
	cmpl	$2, %eax	#, ix86_cpu.1493
	je	.L1730	#,
.L1729:
	.loc 1 7079 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1127
	movq	%rax, %rdi	# tmp1127,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1731	#,
	.loc 1 7079 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1128
	movq	%rax, %rdi	# tmp1128,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57231
	jne	.L1731	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1494
	cmpl	$2, %eax	#, ix86_cpu.1494
	je	.L1730	#,
.L1731:
	.loc 1 7079 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1129
	movq	%rax, %rdi	# tmp1129,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1732	#,
	.loc 1 7079 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1130
	movq	%rax, %rdi	# tmp1130,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57231
	jne	.L1732	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1495
	cmpl	$2, %eax	#, ix86_cpu.1495
	je	.L1730	#,
.L1732:
	.loc 1 7079 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1131
	movq	%rax, %rdi	# tmp1131,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1733	#,
	.loc 1 7079 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1132
	movq	%rax, %rdi	# tmp1132,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1733	#,
	movq	-8(%rbp), %rax	# insn, tmp1133
	movq	%rax, %rdi	# tmp1133,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1733	#,
	movq	-8(%rbp), %rax	# insn, tmp1134
	movq	%rax, %rdi	# tmp1134,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57231
	jne	.L1733	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1496
	cmpl	$2, %eax	#, ix86_cpu.1496
	jne	.L1733	#,
.L1730:
	.loc 1 7081 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1733:
	.loc 1 7085 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1713:
	.loc 1 7096 0
	movq	-8(%rbp), %rax	# insn, tmp1135
	movq	%rax, %rdi	# tmp1135,
	call	extract_insn_cached	#
	.loc 1 7097 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	memory_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1734	#,
	.loc 1 7097 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1497
	cmpl	$2, %eax	#, ix86_cpu.1497
	je	.L1735	#,
.L1734:
	.loc 1 7097 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	memory_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1736	#,
	.loc 1 7097 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1498
	cmpl	$2, %eax	#, ix86_cpu.1498
	jne	.L1736	#,
.L1735:
	.loc 1 7099 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1736:
	.loc 1 7103 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1712:
	.loc 1 7166 0
	movq	-8(%rbp), %rax	# insn, tmp1136
	movq	%rax, %rdi	# tmp1136,
	call	extract_insn_cached	#
	.loc 1 7167 0
	movq	-8(%rbp), %rax	# insn, tmp1137
	movq	%rax, %rdi	# tmp1137,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1737	#,
	.loc 1 7167 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1138
	movq	%rax, %rdi	# tmp1138,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1737	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1737	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1499
	cmpl	$2, %eax	#, ix86_cpu.1499
	je	.L1738	#,
.L1737:
	.loc 1 7167 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1139
	movq	%rax, %rdi	# tmp1139,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1739	#,
	.loc 1 7167 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1140
	movq	%rax, %rdi	# tmp1140,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1739	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1739	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1500
	cmpl	$2, %eax	#, ix86_cpu.1500
	jne	.L1739	#,
.L1738:
	.loc 1 7169 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1739:
	.loc 1 7171 0
	movq	-8(%rbp), %rax	# insn, tmp1141
	movq	%rax, %rdi	# tmp1141,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1740	#,
	.loc 1 7171 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1142
	movq	%rax, %rdi	# tmp1142,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1740	#,
	movq	-8(%rbp), %rax	# insn, tmp1143
	movq	%rax, %rdi	# tmp1143,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1740	#,
	movq	-8(%rbp), %rax	# insn, tmp1144
	movq	%rax, %rdi	# tmp1144,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1740	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1740	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1501
	cmpl	$2, %eax	#, ix86_cpu.1501
	jne	.L1740	#,
	.loc 1 7173 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1740:
	.loc 1 7177 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1711:
	.loc 1 7183 0
	movq	-8(%rbp), %rax	# insn, tmp1145
	movq	%rax, %rdi	# tmp1145,
	call	extract_constrain_insn_cached	#
	.loc 1 7184 0
	movq	-8(%rbp), %rax	# insn, tmp1146
	movq	%rax, %rdi	# tmp1146,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1741	#,
	.loc 1 7184 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1147
	movq	%rax, %rdi	# tmp1147,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1741	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1502
	cmpl	$1, %eax	#, which_alternative.1502
	jne	.L1741	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1741	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1503
	cmpl	$2, %eax	#, ix86_cpu.1503
	je	.L1742	#,
.L1741:
	.loc 1 7184 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1148
	movq	%rax, %rdi	# tmp1148,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1743	#,
	.loc 1 7184 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1149
	movq	%rax, %rdi	# tmp1149,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1743	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1504
	cmpl	$1, %eax	#, which_alternative.1504
	jne	.L1743	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1743	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1505
	cmpl	$2, %eax	#, ix86_cpu.1505
	jne	.L1743	#,
.L1742:
	.loc 1 7186 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1743:
	.loc 1 7188 0
	movq	-8(%rbp), %rax	# insn, tmp1150
	movq	%rax, %rdi	# tmp1150,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1744	#,
	.loc 1 7188 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1151
	movq	%rax, %rdi	# tmp1151,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1744	#,
	movq	-8(%rbp), %rax	# insn, tmp1152
	movq	%rax, %rdi	# tmp1152,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1744	#,
	movq	-8(%rbp), %rax	# insn, tmp1153
	movq	%rax, %rdi	# tmp1153,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1744	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1506
	cmpl	$1, %eax	#, which_alternative.1506
	jne	.L1744	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1744	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1507
	cmpl	$2, %eax	#, ix86_cpu.1507
	jne	.L1744	#,
	.loc 1 7190 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1744:
	.loc 1 7194 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1710:
	.loc 1 7198 0
	movq	-8(%rbp), %rax	# insn, tmp1154
	movq	%rax, %rdi	# tmp1154,
	call	extract_constrain_insn_cached	#
	.loc 1 7199 0
	movq	-8(%rbp), %rax	# insn, tmp1155
	movq	%rax, %rdi	# tmp1155,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1745	#,
	.loc 1 7199 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1508
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1509
	movl	%eax, %ecx	# ix86_cpu.1510, tmp1481
	sarl	%cl, %edx	# tmp1481, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1745	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1745	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1511
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1512
	movl	%eax, %ecx	# ix86_cpu.1513, tmp1483
	sarl	%cl, %edx	# tmp1483, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1746	#,
	.loc 1 7199 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1745	#,
.L1746:
	.loc 1 7199 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1156
	movq	%rax, %rdi	# tmp1156,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1745	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1514
	cmpl	$2, %eax	#, ix86_cpu.1514
	jne	.L1745	#,
	.loc 1 7201 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1745:
	.loc 1 7203 0
	movq	-8(%rbp), %rax	# insn, tmp1157
	movq	%rax, %rdi	# tmp1157,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1747	#,
	.loc 1 7203 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1515
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1516
	movl	%eax, %ecx	# ix86_cpu.1517, tmp1485
	sarl	%cl, %edx	# tmp1485, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1748	#,
	.loc 1 7203 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1749	#,
.L1748:
	.loc 1 7203 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1158
	movq	%rax, %rdi	# tmp1158,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1749	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1518
	cmpl	$2, %eax	#, ix86_cpu.1518
	je	.L1750	#,
.L1749:
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1519
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1520
	movl	%eax, %ecx	# ix86_cpu.1521, tmp1487
	sarl	%cl, %edx	# tmp1487, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1747	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1747	#,
	movq	-8(%rbp), %rax	# insn, tmp1159
	movq	%rax, %rdi	# tmp1159,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1747	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1522
	cmpl	$2, %eax	#, ix86_cpu.1522
	jne	.L1747	#,
.L1750:
	.loc 1 7205 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1747:
	.loc 1 7207 0
	movq	-8(%rbp), %rax	# insn, tmp1160
	movq	%rax, %rdi	# tmp1160,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1751	#,
	.loc 1 7207 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1523
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1524
	movl	%eax, %ecx	# ix86_cpu.1525, tmp1489
	sarl	%cl, %edx	# tmp1489, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1752	#,
	.loc 1 7207 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1753	#,
.L1752:
	.loc 1 7207 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1161
	movq	%rax, %rdi	# tmp1161,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1753	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1526
	cmpl	$2, %eax	#, ix86_cpu.1526
	je	.L1754	#,
.L1753:
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1527
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1528
	movl	%eax, %ecx	# ix86_cpu.1529, tmp1491
	sarl	%cl, %edx	# tmp1491, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1751	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1751	#,
	movq	-8(%rbp), %rax	# insn, tmp1162
	movq	%rax, %rdi	# tmp1162,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1751	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1530
	cmpl	$2, %eax	#, ix86_cpu.1530
	jne	.L1751	#,
.L1754:
	.loc 1 7209 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1751:
	.loc 1 7211 0
	movq	-8(%rbp), %rax	# insn, tmp1163
	movq	%rax, %rdi	# tmp1163,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1755	#,
	.loc 1 7211 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1531
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1532
	movl	%eax, %ecx	# ix86_cpu.1533, tmp1493
	sarl	%cl, %edx	# tmp1493, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1755	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1755	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1534
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1535
	movl	%eax, %ecx	# ix86_cpu.1536, tmp1495
	sarl	%cl, %edx	# tmp1495, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1756	#,
	.loc 1 7211 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1755	#,
.L1756:
	.loc 1 7211 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1164
	movq	%rax, %rdi	# tmp1164,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1755	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1537
	cmpl	$2, %eax	#, ix86_cpu.1537
	je	.L1757	#,
.L1755:
	.loc 1 7211 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1165
	movq	%rax, %rdi	# tmp1165,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1758	#,
	.loc 1 7211 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1166
	movq	%rax, %rdi	# tmp1166,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1758	#,
	movq	-8(%rbp), %rax	# insn, tmp1167
	movq	%rax, %rdi	# tmp1167,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1758	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1538
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1539
	movl	%eax, %ecx	# ix86_cpu.1540, tmp1497
	sarl	%cl, %edx	# tmp1497, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1759	#,
	.loc 1 7211 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1760	#,
.L1759:
	.loc 1 7211 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1168
	movq	%rax, %rdi	# tmp1168,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1760	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1541
	cmpl	$2, %eax	#, ix86_cpu.1541
	je	.L1757	#,
.L1760:
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1542
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1543
	movl	%eax, %ecx	# ix86_cpu.1544, tmp1499
	sarl	%cl, %edx	# tmp1499, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1761	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1761	#,
	movq	-8(%rbp), %rax	# insn, tmp1169
	movq	%rax, %rdi	# tmp1169,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1761	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1545
	cmpl	$2, %eax	#, ix86_cpu.1545
	je	.L1757	#,
.L1761:
	.loc 1 7211 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1546
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1547
	movl	%eax, %ecx	# ix86_cpu.1548, tmp1501
	sarl	%cl, %edx	# tmp1501, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1758	#,
	.loc 1 7211 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1758	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1549
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1550
	movl	%eax, %ecx	# ix86_cpu.1551, tmp1503
	sarl	%cl, %edx	# tmp1503, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1762	#,
	.loc 1 7211 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1758	#,
.L1762:
	.loc 1 7211 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1170
	movq	%rax, %rdi	# tmp1170,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1758	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1552
	cmpl	$2, %eax	#, ix86_cpu.1552
	jne	.L1758	#,
.L1757:
	.loc 1 7213 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1758:
	.loc 1 7217 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1709:
	.loc 1 7221 0
	movq	-8(%rbp), %rax	# insn, tmp1171
	movq	%rax, %rdi	# tmp1171,
	call	extract_constrain_insn_cached	#
	.loc 1 7222 0
	movq	-8(%rbp), %rax	# insn, tmp1172
	movq	%rax, %rdi	# tmp1172,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1763	#,
	.loc 1 7222 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1553
	testl	%eax, %eax	# which_alternative.1553
	jne	.L1764	#,
	.loc 1 7222 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1554
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1555
	movl	%eax, %ecx	# ix86_cpu.1556, tmp1505
	sarl	%cl, %edx	# tmp1505, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1763	#,
	.loc 1 7222 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1763	#,
.L1764:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1557
	testl	%eax, %eax	# which_alternative.1557
	jne	.L1765	#,
	.loc 1 7222 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1558
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1559
	movl	%eax, %ecx	# ix86_cpu.1560, tmp1507
	sarl	%cl, %edx	# tmp1507, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1765	#,
	.loc 1 7222 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1763	#,
.L1765:
	movq	-8(%rbp), %rax	# insn, tmp1173
	movq	%rax, %rdi	# tmp1173,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1763	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1561
	cmpl	$2, %eax	#, ix86_cpu.1561
	jne	.L1763	#,
	.loc 1 7224 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1763:
	.loc 1 7226 0
	movq	-8(%rbp), %rax	# insn, tmp1174
	movq	%rax, %rdi	# tmp1174,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1766	#,
	.loc 1 7226 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1562
	testl	%eax, %eax	# which_alternative.1562
	jne	.L1767	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1563
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1564
	movl	%eax, %ecx	# ix86_cpu.1565, tmp1509
	sarl	%cl, %edx	# tmp1509, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1768	#,
	.loc 1 7226 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1767	#,
.L1768:
	.loc 1 7226 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1175
	movq	%rax, %rdi	# tmp1175,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1767	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1566
	cmpl	$2, %eax	#, ix86_cpu.1566
	je	.L1769	#,
.L1767:
	.loc 1 7226 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1567
	testl	%eax, %eax	# which_alternative.1567
	jne	.L1766	#,
	.loc 1 7226 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1568
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1569
	movl	%eax, %ecx	# ix86_cpu.1570, tmp1511
	sarl	%cl, %edx	# tmp1511, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1766	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1766	#,
	movq	-8(%rbp), %rax	# insn, tmp1176
	movq	%rax, %rdi	# tmp1176,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1766	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1571
	cmpl	$2, %eax	#, ix86_cpu.1571
	jne	.L1766	#,
.L1769:
	.loc 1 7228 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1766:
	.loc 1 7230 0
	movq	-8(%rbp), %rax	# insn, tmp1177
	movq	%rax, %rdi	# tmp1177,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1770	#,
	.loc 1 7230 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1572
	testl	%eax, %eax	# which_alternative.1572
	jne	.L1771	#,
	.loc 1 7230 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1573
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1574
	movl	%eax, %ecx	# ix86_cpu.1575, tmp1513
	sarl	%cl, %edx	# tmp1513, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1770	#,
	.loc 1 7230 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1770	#,
.L1771:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1576
	testl	%eax, %eax	# which_alternative.1576
	jne	.L1772	#,
	.loc 1 7230 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1577
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1578
	movl	%eax, %ecx	# ix86_cpu.1579, tmp1515
	sarl	%cl, %edx	# tmp1515, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1772	#,
	.loc 1 7230 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1770	#,
.L1772:
	movq	-8(%rbp), %rax	# insn, tmp1178
	movq	%rax, %rdi	# tmp1178,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1770	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1580
	cmpl	$2, %eax	#, ix86_cpu.1580
	jne	.L1770	#,
	.loc 1 7232 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1770:
	.loc 1 7234 0
	movq	-8(%rbp), %rax	# insn, tmp1179
	movq	%rax, %rdi	# tmp1179,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1773	#,
	.loc 1 7234 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1581
	testl	%eax, %eax	# which_alternative.1581
	jne	.L1774	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1582
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1583
	movl	%eax, %ecx	# ix86_cpu.1584, tmp1517
	sarl	%cl, %edx	# tmp1517, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1775	#,
	.loc 1 7234 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1774	#,
.L1775:
	.loc 1 7234 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1180
	movq	%rax, %rdi	# tmp1180,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1774	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1585
	cmpl	$2, %eax	#, ix86_cpu.1585
	je	.L1776	#,
.L1774:
	.loc 1 7234 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1586
	testl	%eax, %eax	# which_alternative.1586
	jne	.L1773	#,
	.loc 1 7234 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1587
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1588
	movl	%eax, %ecx	# ix86_cpu.1589, tmp1519
	sarl	%cl, %edx	# tmp1519, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1773	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1773	#,
	movq	-8(%rbp), %rax	# insn, tmp1181
	movq	%rax, %rdi	# tmp1181,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1773	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1590
	cmpl	$2, %eax	#, ix86_cpu.1590
	jne	.L1773	#,
.L1776:
	.loc 1 7236 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1773:
	.loc 1 7238 0
	movq	-8(%rbp), %rax	# insn, tmp1182
	movq	%rax, %rdi	# tmp1182,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1777	#,
	.loc 1 7238 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1591
	testl	%eax, %eax	# which_alternative.1591
	jne	.L1778	#,
	.loc 1 7238 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1592
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1593
	movl	%eax, %ecx	# ix86_cpu.1594, tmp1521
	sarl	%cl, %edx	# tmp1521, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1777	#,
	.loc 1 7238 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1777	#,
.L1778:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1595
	testl	%eax, %eax	# which_alternative.1595
	jne	.L1779	#,
	.loc 1 7238 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1596
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1597
	movl	%eax, %ecx	# ix86_cpu.1598, tmp1523
	sarl	%cl, %edx	# tmp1523, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1779	#,
	.loc 1 7238 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1777	#,
.L1779:
	movq	-8(%rbp), %rax	# insn, tmp1183
	movq	%rax, %rdi	# tmp1183,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1777	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1599
	cmpl	$2, %eax	#, ix86_cpu.1599
	je	.L1780	#,
.L1777:
	.loc 1 7238 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1184
	movq	%rax, %rdi	# tmp1184,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1781	#,
	.loc 1 7238 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1185
	movq	%rax, %rdi	# tmp1185,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1781	#,
	movq	-8(%rbp), %rax	# insn, tmp1186
	movq	%rax, %rdi	# tmp1186,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1781	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1600
	testl	%eax, %eax	# which_alternative.1600
	jne	.L1782	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1601
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1602
	movl	%eax, %ecx	# ix86_cpu.1603, tmp1525
	sarl	%cl, %edx	# tmp1525, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1783	#,
	.loc 1 7238 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1782	#,
.L1783:
	.loc 1 7238 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1187
	movq	%rax, %rdi	# tmp1187,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1782	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1604
	cmpl	$2, %eax	#, ix86_cpu.1604
	je	.L1780	#,
.L1782:
	.loc 1 7238 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1605
	testl	%eax, %eax	# which_alternative.1605
	jne	.L1784	#,
	.loc 1 7238 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1606
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1607
	movl	%eax, %ecx	# ix86_cpu.1608, tmp1527
	sarl	%cl, %edx	# tmp1527, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1784	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1784	#,
	movq	-8(%rbp), %rax	# insn, tmp1188
	movq	%rax, %rdi	# tmp1188,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1784	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1609
	cmpl	$2, %eax	#, ix86_cpu.1609
	je	.L1780	#,
.L1784:
	.loc 1 7238 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1610
	testl	%eax, %eax	# which_alternative.1610
	jne	.L1785	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1611
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1612
	movl	%eax, %ecx	# ix86_cpu.1613, tmp1529
	sarl	%cl, %edx	# tmp1529, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1781	#,
	.loc 1 7238 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1781	#,
.L1785:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1614
	testl	%eax, %eax	# which_alternative.1614
	jne	.L1786	#,
	.loc 1 7238 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1615
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1616
	movl	%eax, %ecx	# ix86_cpu.1617, tmp1531
	sarl	%cl, %edx	# tmp1531, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1786	#,
	.loc 1 7238 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	const1_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1781	#,
.L1786:
	movq	-8(%rbp), %rax	# insn, tmp1189
	movq	%rax, %rdi	# tmp1189,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1781	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1618
	cmpl	$2, %eax	#, ix86_cpu.1618
	jne	.L1781	#,
.L1780:
	.loc 1 7240 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1781:
	.loc 1 7244 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1708:
	.loc 1 7257 0
	movq	-8(%rbp), %rax	# insn, tmp1190
	movq	%rax, %rdi	# tmp1190,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1787	#,
	.loc 1 7257 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1191
	movq	%rax, %rdi	# tmp1191,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57231
	je	.L1787	#,
	movq	-8(%rbp), %rax	# insn, tmp1192
	movq	%rax, %rdi	# tmp1192,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	je	.L1787	#,
	movq	-8(%rbp), %rax	# insn, tmp1193
	movq	%rax, %rdi	# tmp1193,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1787	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1619
	cmpl	$2, %eax	#, ix86_cpu.1619
	jne	.L1787	#,
	.loc 1 7259 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1787:
	.loc 1 7261 0
	movq	-8(%rbp), %rax	# insn, tmp1194
	movq	%rax, %rdi	# tmp1194,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1788	#,
	.loc 1 7261 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1195
	movq	%rax, %rdi	# tmp1195,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57231
	jne	.L1789	#,
	movq	-8(%rbp), %rax	# insn, tmp1196
	movq	%rax, %rdi	# tmp1196,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1789	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1620
	cmpl	$2, %eax	#, ix86_cpu.1620
	je	.L1790	#,
.L1789:
	.loc 1 7261 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1197
	movq	%rax, %rdi	# tmp1197,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	jne	.L1788	#,
	.loc 1 7261 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1198
	movq	%rax, %rdi	# tmp1198,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1788	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1621
	cmpl	$2, %eax	#, ix86_cpu.1621
	jne	.L1788	#,
.L1790:
	.loc 1 7263 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1788:
	.loc 1 7265 0
	movq	-8(%rbp), %rax	# insn, tmp1199
	movq	%rax, %rdi	# tmp1199,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1791	#,
	.loc 1 7265 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1200
	movq	%rax, %rdi	# tmp1200,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57231
	je	.L1791	#,
	movq	-8(%rbp), %rax	# insn, tmp1201
	movq	%rax, %rdi	# tmp1201,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	je	.L1791	#,
	movq	-8(%rbp), %rax	# insn, tmp1202
	movq	%rax, %rdi	# tmp1202,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1791	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1622
	cmpl	$2, %eax	#, ix86_cpu.1622
	jne	.L1791	#,
	.loc 1 7267 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1791:
	.loc 1 7269 0
	movq	-8(%rbp), %rax	# insn, tmp1203
	movq	%rax, %rdi	# tmp1203,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1792	#,
	.loc 1 7269 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1204
	movq	%rax, %rdi	# tmp1204,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57231
	jne	.L1793	#,
	movq	-8(%rbp), %rax	# insn, tmp1205
	movq	%rax, %rdi	# tmp1205,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1793	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1623
	cmpl	$2, %eax	#, ix86_cpu.1623
	je	.L1794	#,
.L1793:
	.loc 1 7269 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1206
	movq	%rax, %rdi	# tmp1206,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	jne	.L1792	#,
	.loc 1 7269 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1207
	movq	%rax, %rdi	# tmp1207,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1792	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1624
	cmpl	$2, %eax	#, ix86_cpu.1624
	jne	.L1792	#,
.L1794:
	.loc 1 7271 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1792:
	.loc 1 7273 0
	movq	-8(%rbp), %rax	# insn, tmp1208
	movq	%rax, %rdi	# tmp1208,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1795	#,
	.loc 1 7273 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1209
	movq	%rax, %rdi	# tmp1209,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57231
	je	.L1795	#,
	movq	-8(%rbp), %rax	# insn, tmp1210
	movq	%rax, %rdi	# tmp1210,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	je	.L1795	#,
	movq	-8(%rbp), %rax	# insn, tmp1211
	movq	%rax, %rdi	# tmp1211,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1795	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1625
	cmpl	$2, %eax	#, ix86_cpu.1625
	je	.L1796	#,
.L1795:
	.loc 1 7273 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1212
	movq	%rax, %rdi	# tmp1212,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1797	#,
	.loc 1 7273 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1213
	movq	%rax, %rdi	# tmp1213,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1797	#,
	movq	-8(%rbp), %rax	# insn, tmp1214
	movq	%rax, %rdi	# tmp1214,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1797	#,
	movq	-8(%rbp), %rax	# insn, tmp1215
	movq	%rax, %rdi	# tmp1215,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57231
	jne	.L1798	#,
	movq	-8(%rbp), %rax	# insn, tmp1216
	movq	%rax, %rdi	# tmp1216,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1798	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1626
	cmpl	$2, %eax	#, ix86_cpu.1626
	je	.L1796	#,
.L1798:
	.loc 1 7273 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1217
	movq	%rax, %rdi	# tmp1217,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	jne	.L1799	#,
	.loc 1 7273 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1218
	movq	%rax, %rdi	# tmp1218,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1799	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1627
	cmpl	$2, %eax	#, ix86_cpu.1627
	je	.L1796	#,
.L1799:
	.loc 1 7273 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1219
	movq	%rax, %rdi	# tmp1219,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57231
	je	.L1797	#,
	.loc 1 7273 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1220
	movq	%rax, %rdi	# tmp1220,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	je	.L1797	#,
	movq	-8(%rbp), %rax	# insn, tmp1221
	movq	%rax, %rdi	# tmp1221,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1797	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1628
	cmpl	$2, %eax	#, ix86_cpu.1628
	jne	.L1797	#,
.L1796:
	.loc 1 7275 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1797:
	.loc 1 7279 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1707:
	.loc 1 7284 0
	movq	-8(%rbp), %rax	# insn, tmp1222
	movq	%rax, %rdi	# tmp1222,
	call	extract_constrain_insn_cached	#
	.loc 1 7285 0
	movq	-8(%rbp), %rax	# insn, tmp1223
	movq	%rax, %rdi	# tmp1223,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1800	#,
	.loc 1 7285 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1629
	testl	%eax, %eax	# which_alternative.1629
	je	.L1801	#,
	.loc 1 7285 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1630
	cmpl	$1, %eax	#, which_alternative.1630
	jne	.L1800	#,
.L1801:
	.loc 1 7285 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1224
	movq	%rax, %rdi	# tmp1224,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1800	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1631
	cmpl	$2, %eax	#, ix86_cpu.1631
	je	.L1802	#,
.L1800:
	.loc 1 7285 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1225
	movq	%rax, %rdi	# tmp1225,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1803	#,
	.loc 1 7285 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1632
	testl	%eax, %eax	# which_alternative.1632
	je	.L1804	#,
	.loc 1 7285 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1633
	cmpl	$1, %eax	#, which_alternative.1633
	jne	.L1803	#,
.L1804:
	.loc 1 7285 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1226
	movq	%rax, %rdi	# tmp1226,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1803	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1634
	cmpl	$2, %eax	#, ix86_cpu.1634
	jne	.L1803	#,
.L1802:
	.loc 1 7287 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1803:
	.loc 1 7289 0
	movq	-8(%rbp), %rax	# insn, tmp1227
	movq	%rax, %rdi	# tmp1227,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1805	#,
	.loc 1 7289 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1228
	movq	%rax, %rdi	# tmp1228,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1805	#,
	movq	-8(%rbp), %rax	# insn, tmp1229
	movq	%rax, %rdi	# tmp1229,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1805	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1635
	testl	%eax, %eax	# which_alternative.1635
	je	.L1806	#,
	.loc 1 7289 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1636
	cmpl	$1, %eax	#, which_alternative.1636
	jne	.L1805	#,
.L1806:
	.loc 1 7289 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1230
	movq	%rax, %rdi	# tmp1230,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1805	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1637
	cmpl	$2, %eax	#, ix86_cpu.1637
	jne	.L1805	#,
	.loc 1 7291 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1805:
	.loc 1 7295 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1706:
	.loc 1 7299 0
	movq	-8(%rbp), %rax	# insn, tmp1231
	movq	%rax, %rdi	# tmp1231,
	call	extract_constrain_insn_cached	#
	.loc 1 7300 0
	movq	-8(%rbp), %rax	# insn, tmp1232
	movq	%rax, %rdi	# tmp1232,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1807	#,
	.loc 1 7300 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1638
	testl	%eax, %eax	# which_alternative.1638
	je	.L1808	#,
	.loc 1 7300 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1639
	cmpl	$1, %eax	#, which_alternative.1639
	je	.L1808	#,
	.loc 1 7300 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1640
	cmpl	$2, %eax	#, which_alternative.1640
	jne	.L1807	#,
.L1808:
	movq	-8(%rbp), %rax	# insn, tmp1233
	movq	%rax, %rdi	# tmp1233,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1807	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1641
	cmpl	$2, %eax	#, ix86_cpu.1641
	je	.L1809	#,
.L1807:
	.loc 1 7300 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1234
	movq	%rax, %rdi	# tmp1234,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1810	#,
	.loc 1 7300 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1642
	testl	%eax, %eax	# which_alternative.1642
	je	.L1811	#,
	.loc 1 7300 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1643
	cmpl	$1, %eax	#, which_alternative.1643
	je	.L1811	#,
	.loc 1 7300 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1644
	cmpl	$2, %eax	#, which_alternative.1644
	jne	.L1810	#,
.L1811:
	movq	-8(%rbp), %rax	# insn, tmp1235
	movq	%rax, %rdi	# tmp1235,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1810	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1645
	cmpl	$2, %eax	#, ix86_cpu.1645
	jne	.L1810	#,
.L1809:
	.loc 1 7302 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1810:
	.loc 1 7304 0
	movq	-8(%rbp), %rax	# insn, tmp1236
	movq	%rax, %rdi	# tmp1236,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1812	#,
	.loc 1 7304 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1237
	movq	%rax, %rdi	# tmp1237,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1812	#,
	movq	-8(%rbp), %rax	# insn, tmp1238
	movq	%rax, %rdi	# tmp1238,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1812	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1646
	testl	%eax, %eax	# which_alternative.1646
	je	.L1813	#,
	.loc 1 7304 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1647
	cmpl	$1, %eax	#, which_alternative.1647
	je	.L1813	#,
	.loc 1 7304 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1648
	cmpl	$2, %eax	#, which_alternative.1648
	jne	.L1812	#,
.L1813:
	movq	-8(%rbp), %rax	# insn, tmp1239
	movq	%rax, %rdi	# tmp1239,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1812	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1649
	cmpl	$2, %eax	#, ix86_cpu.1649
	jne	.L1812	#,
	.loc 1 7306 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1812:
	.loc 1 7310 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1705:
	.loc 1 7314 0
	movq	-8(%rbp), %rax	# insn, tmp1240
	movq	%rax, %rdi	# tmp1240,
	call	extract_constrain_insn_cached	#
	.loc 1 7315 0
	movq	-8(%rbp), %rax	# insn, tmp1241
	movq	%rax, %rdi	# tmp1241,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1814	#,
	.loc 1 7315 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1650
	testl	%eax, %eax	# which_alternative.1650
	je	.L1815	#,
	.loc 1 7315 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1651
	cmpl	$2, %eax	#, which_alternative.1651
	jne	.L1814	#,
.L1815:
	.loc 1 7315 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1652
	cmpl	$2, %eax	#, ix86_cpu.1652
	je	.L1816	#,
.L1814:
	.loc 1 7315 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1242
	movq	%rax, %rdi	# tmp1242,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1817	#,
	.loc 1 7315 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1653
	testl	%eax, %eax	# which_alternative.1653
	je	.L1818	#,
	.loc 1 7315 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1654
	cmpl	$2, %eax	#, which_alternative.1654
	jne	.L1817	#,
.L1818:
	.loc 1 7315 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1655
	cmpl	$2, %eax	#, ix86_cpu.1655
	jne	.L1817	#,
.L1816:
	.loc 1 7317 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1817:
	.loc 1 7321 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1704:
	.loc 1 7326 0
	movq	-8(%rbp), %rax	# insn, tmp1243
	movq	%rax, %rdi	# tmp1243,
	call	extract_constrain_insn_cached	#
	.loc 1 7327 0
	movq	-8(%rbp), %rax	# insn, tmp1244
	movq	%rax, %rdi	# tmp1244,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1819	#,
	.loc 1 7327 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1656
	cmpl	$1, %eax	#, which_alternative.1656
	je	.L1819	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1657
	cmpl	$2, %eax	#, ix86_cpu.1657
	je	.L1820	#,
.L1819:
	.loc 1 7327 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1245
	movq	%rax, %rdi	# tmp1245,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1821	#,
	.loc 1 7327 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1658
	cmpl	$1, %eax	#, which_alternative.1658
	je	.L1821	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1659
	cmpl	$2, %eax	#, ix86_cpu.1659
	jne	.L1821	#,
.L1820:
	.loc 1 7329 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1821:
	.loc 1 7333 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1703:
	.loc 1 7337 0
	movq	-8(%rbp), %rax	# insn, tmp1246
	movq	%rax, %rdi	# tmp1246,
	call	extract_constrain_insn_cached	#
	.loc 1 7338 0
	movq	-8(%rbp), %rax	# insn, tmp1247
	movq	%rax, %rdi	# tmp1247,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1822	#,
	.loc 1 7338 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1660
	cmpl	$1, %eax	#, which_alternative.1660
	je	.L1822	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1661
	cmpl	$3, %eax	#, which_alternative.1661
	je	.L1822	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1662
	cmpl	$2, %eax	#, ix86_cpu.1662
	je	.L1823	#,
.L1822:
	.loc 1 7338 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1248
	movq	%rax, %rdi	# tmp1248,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1824	#,
	.loc 1 7338 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1663
	cmpl	$1, %eax	#, which_alternative.1663
	je	.L1824	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1664
	cmpl	$3, %eax	#, which_alternative.1664
	je	.L1824	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1665
	cmpl	$2, %eax	#, ix86_cpu.1665
	jne	.L1824	#,
.L1823:
	.loc 1 7340 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1824:
	.loc 1 7344 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1702:
	.loc 1 7353 0
	movq	-8(%rbp), %rax	# insn, tmp1249
	movq	%rax, %rdi	# tmp1249,
	call	extract_insn_cached	#
	.loc 1 7354 0
	movq	-8(%rbp), %rax	# insn, tmp1250
	movq	%rax, %rdi	# tmp1250,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1825	#,
	.loc 1 7354 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1825	#,
	movq	-8(%rbp), %rax	# insn, tmp1251
	movq	%rax, %rdi	# tmp1251,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1825	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1666
	cmpl	$2, %eax	#, ix86_cpu.1666
	jne	.L1825	#,
	.loc 1 7356 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1825:
	.loc 1 7358 0
	movq	-8(%rbp), %rax	# insn, tmp1252
	movq	%rax, %rdi	# tmp1252,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1826	#,
	.loc 1 7358 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1826	#,
	movq	-8(%rbp), %rax	# insn, tmp1253
	movq	%rax, %rdi	# tmp1253,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1826	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1667
	cmpl	$2, %eax	#, ix86_cpu.1667
	jne	.L1826	#,
	.loc 1 7360 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1826:
	.loc 1 7362 0
	movq	-8(%rbp), %rax	# insn, tmp1254
	movq	%rax, %rdi	# tmp1254,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1827	#,
	.loc 1 7362 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1827	#,
	movq	-8(%rbp), %rax	# insn, tmp1255
	movq	%rax, %rdi	# tmp1255,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1827	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1668
	cmpl	$2, %eax	#, ix86_cpu.1668
	jne	.L1827	#,
	.loc 1 7364 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1827:
	.loc 1 7366 0
	movq	-8(%rbp), %rax	# insn, tmp1256
	movq	%rax, %rdi	# tmp1256,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1828	#,
	.loc 1 7366 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1828	#,
	movq	-8(%rbp), %rax	# insn, tmp1257
	movq	%rax, %rdi	# tmp1257,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1828	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1669
	cmpl	$2, %eax	#, ix86_cpu.1669
	jne	.L1828	#,
	.loc 1 7368 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1828:
	.loc 1 7370 0
	movq	-8(%rbp), %rax	# insn, tmp1258
	movq	%rax, %rdi	# tmp1258,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1829	#,
	.loc 1 7370 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1829	#,
	movq	-8(%rbp), %rax	# insn, tmp1259
	movq	%rax, %rdi	# tmp1259,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1829	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1670
	cmpl	$2, %eax	#, ix86_cpu.1670
	je	.L1830	#,
.L1829:
	.loc 1 7370 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1260
	movq	%rax, %rdi	# tmp1260,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1831	#,
	.loc 1 7370 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1261
	movq	%rax, %rdi	# tmp1261,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1831	#,
	movq	-8(%rbp), %rax	# insn, tmp1262
	movq	%rax, %rdi	# tmp1262,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1831	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1832	#,
	movq	-8(%rbp), %rax	# insn, tmp1263
	movq	%rax, %rdi	# tmp1263,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1832	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1671
	cmpl	$2, %eax	#, ix86_cpu.1671
	je	.L1830	#,
.L1832:
	.loc 1 7370 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1831	#,
	.loc 1 7370 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1264
	movq	%rax, %rdi	# tmp1264,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1831	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1672
	cmpl	$2, %eax	#, ix86_cpu.1672
	jne	.L1831	#,
.L1830:
	.loc 1 7372 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1831:
	.loc 1 7376 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1701:
	.loc 1 7380 0
	movq	-8(%rbp), %rax	# insn, tmp1265
	movq	%rax, %rdi	# tmp1265,
	call	extract_constrain_insn_cached	#
	.loc 1 7381 0
	movq	-8(%rbp), %rax	# insn, tmp1266
	movq	%rax, %rdi	# tmp1266,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1833	#,
	.loc 1 7381 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1673
	cmpl	$3, %eax	#, which_alternative.1673
	je	.L1834	#,
	.loc 1 7381 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1833	#,
.L1834:
	.loc 1 7381 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1267
	movq	%rax, %rdi	# tmp1267,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1833	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1674
	cmpl	$2, %eax	#, ix86_cpu.1674
	jne	.L1833	#,
	.loc 1 7383 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1833:
	.loc 1 7385 0
	movq	-8(%rbp), %rax	# insn, tmp1268
	movq	%rax, %rdi	# tmp1268,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1835	#,
	.loc 1 7385 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1675
	cmpl	$3, %eax	#, which_alternative.1675
	je	.L1835	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1835	#,
	movq	-8(%rbp), %rax	# insn, tmp1269
	movq	%rax, %rdi	# tmp1269,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1835	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1676
	cmpl	$2, %eax	#, ix86_cpu.1676
	jne	.L1835	#,
	.loc 1 7387 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1835:
	.loc 1 7389 0
	movq	-8(%rbp), %rax	# insn, tmp1270
	movq	%rax, %rdi	# tmp1270,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1836	#,
	.loc 1 7389 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1677
	cmpl	$3, %eax	#, which_alternative.1677
	je	.L1837	#,
	.loc 1 7389 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1836	#,
.L1837:
	.loc 1 7389 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1271
	movq	%rax, %rdi	# tmp1271,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1836	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1678
	cmpl	$2, %eax	#, ix86_cpu.1678
	jne	.L1836	#,
	.loc 1 7391 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1836:
	.loc 1 7393 0
	movq	-8(%rbp), %rax	# insn, tmp1272
	movq	%rax, %rdi	# tmp1272,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1838	#,
	.loc 1 7393 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1679
	cmpl	$3, %eax	#, which_alternative.1679
	je	.L1838	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1838	#,
	movq	-8(%rbp), %rax	# insn, tmp1273
	movq	%rax, %rdi	# tmp1273,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1838	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1680
	cmpl	$2, %eax	#, ix86_cpu.1680
	jne	.L1838	#,
	.loc 1 7395 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1838:
	.loc 1 7397 0
	movq	-8(%rbp), %rax	# insn, tmp1274
	movq	%rax, %rdi	# tmp1274,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1839	#,
	.loc 1 7397 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1681
	cmpl	$3, %eax	#, which_alternative.1681
	je	.L1840	#,
	.loc 1 7397 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1839	#,
.L1840:
	.loc 1 7397 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1275
	movq	%rax, %rdi	# tmp1275,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1839	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1682
	cmpl	$2, %eax	#, ix86_cpu.1682
	je	.L1841	#,
.L1839:
	.loc 1 7397 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1276
	movq	%rax, %rdi	# tmp1276,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1842	#,
	.loc 1 7397 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1277
	movq	%rax, %rdi	# tmp1277,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1842	#,
	movq	-8(%rbp), %rax	# insn, tmp1278
	movq	%rax, %rdi	# tmp1278,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1842	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1683
	cmpl	$3, %eax	#, which_alternative.1683
	je	.L1843	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1843	#,
	movq	-8(%rbp), %rax	# insn, tmp1279
	movq	%rax, %rdi	# tmp1279,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1843	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1684
	cmpl	$2, %eax	#, ix86_cpu.1684
	je	.L1841	#,
.L1843:
	.loc 1 7397 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1685
	cmpl	$3, %eax	#, which_alternative.1685
	je	.L1844	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1842	#,
.L1844:
	.loc 1 7397 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1280
	movq	%rax, %rdi	# tmp1280,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1842	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1686
	cmpl	$2, %eax	#, ix86_cpu.1686
	jne	.L1842	#,
.L1841:
	.loc 1 7399 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1842:
	.loc 1 7403 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1700:
	.loc 1 7412 0
	movq	-8(%rbp), %rax	# insn, tmp1281
	movq	%rax, %rdi	# tmp1281,
	call	extract_insn_cached	#
	.loc 1 7413 0
	movq	-8(%rbp), %rax	# insn, tmp1282
	movq	%rax, %rdi	# tmp1282,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1845	#,
	.loc 1 7413 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1845	#,
	movq	-8(%rbp), %rax	# insn, tmp1283
	movq	%rax, %rdi	# tmp1283,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1845	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1687
	cmpl	$2, %eax	#, ix86_cpu.1687
	jne	.L1845	#,
	.loc 1 7415 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1845:
	.loc 1 7417 0
	movq	-8(%rbp), %rax	# insn, tmp1284
	movq	%rax, %rdi	# tmp1284,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1846	#,
	.loc 1 7417 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1846	#,
	movq	-8(%rbp), %rax	# insn, tmp1285
	movq	%rax, %rdi	# tmp1285,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1846	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1688
	cmpl	$2, %eax	#, ix86_cpu.1688
	jne	.L1846	#,
	.loc 1 7419 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1846:
	.loc 1 7421 0
	movq	-8(%rbp), %rax	# insn, tmp1286
	movq	%rax, %rdi	# tmp1286,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1847	#,
	.loc 1 7421 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1847	#,
	movq	-8(%rbp), %rax	# insn, tmp1287
	movq	%rax, %rdi	# tmp1287,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1847	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1689
	cmpl	$2, %eax	#, ix86_cpu.1689
	jne	.L1847	#,
	.loc 1 7423 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1847:
	.loc 1 7425 0
	movq	-8(%rbp), %rax	# insn, tmp1288
	movq	%rax, %rdi	# tmp1288,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1848	#,
	.loc 1 7425 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1848	#,
	movq	-8(%rbp), %rax	# insn, tmp1289
	movq	%rax, %rdi	# tmp1289,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1848	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1690
	cmpl	$2, %eax	#, ix86_cpu.1690
	jne	.L1848	#,
	.loc 1 7427 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1848:
	.loc 1 7429 0
	movq	-8(%rbp), %rax	# insn, tmp1290
	movq	%rax, %rdi	# tmp1290,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1849	#,
	.loc 1 7429 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1849	#,
	movq	-8(%rbp), %rax	# insn, tmp1291
	movq	%rax, %rdi	# tmp1291,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1849	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1691
	cmpl	$2, %eax	#, ix86_cpu.1691
	je	.L1850	#,
.L1849:
	.loc 1 7429 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1292
	movq	%rax, %rdi	# tmp1292,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1851	#,
	.loc 1 7429 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1293
	movq	%rax, %rdi	# tmp1293,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1851	#,
	movq	-8(%rbp), %rax	# insn, tmp1294
	movq	%rax, %rdi	# tmp1294,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1851	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1852	#,
	movq	-8(%rbp), %rax	# insn, tmp1295
	movq	%rax, %rdi	# tmp1295,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1852	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1692
	cmpl	$2, %eax	#, ix86_cpu.1692
	je	.L1850	#,
.L1852:
	.loc 1 7429 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1851	#,
	.loc 1 7429 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1296
	movq	%rax, %rdi	# tmp1296,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1851	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1693
	cmpl	$2, %eax	#, ix86_cpu.1693
	jne	.L1851	#,
.L1850:
	.loc 1 7431 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1851:
	.loc 1 7435 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1699:
	.loc 1 7439 0
	movq	-8(%rbp), %rax	# insn, tmp1297
	movq	%rax, %rdi	# tmp1297,
	call	extract_constrain_insn_cached	#
	.loc 1 7440 0
	movq	-8(%rbp), %rax	# insn, tmp1298
	movq	%rax, %rdi	# tmp1298,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1853	#,
	.loc 1 7440 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1694
	cmpl	$2, %eax	#, which_alternative.1694
	je	.L1854	#,
	.loc 1 7440 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1853	#,
.L1854:
	.loc 1 7440 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1299
	movq	%rax, %rdi	# tmp1299,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1853	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1695
	cmpl	$2, %eax	#, ix86_cpu.1695
	jne	.L1853	#,
	.loc 1 7442 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1853:
	.loc 1 7444 0
	movq	-8(%rbp), %rax	# insn, tmp1300
	movq	%rax, %rdi	# tmp1300,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1855	#,
	.loc 1 7444 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1696
	cmpl	$2, %eax	#, which_alternative.1696
	je	.L1855	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1855	#,
	movq	-8(%rbp), %rax	# insn, tmp1301
	movq	%rax, %rdi	# tmp1301,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1855	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1697
	cmpl	$2, %eax	#, ix86_cpu.1697
	jne	.L1855	#,
	.loc 1 7446 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1855:
	.loc 1 7448 0
	movq	-8(%rbp), %rax	# insn, tmp1302
	movq	%rax, %rdi	# tmp1302,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1856	#,
	.loc 1 7448 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1698
	cmpl	$2, %eax	#, which_alternative.1698
	je	.L1857	#,
	.loc 1 7448 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1856	#,
.L1857:
	.loc 1 7448 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1303
	movq	%rax, %rdi	# tmp1303,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1856	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1699
	cmpl	$2, %eax	#, ix86_cpu.1699
	jne	.L1856	#,
	.loc 1 7450 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1856:
	.loc 1 7452 0
	movq	-8(%rbp), %rax	# insn, tmp1304
	movq	%rax, %rdi	# tmp1304,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1858	#,
	.loc 1 7452 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1700
	cmpl	$2, %eax	#, which_alternative.1700
	je	.L1858	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1858	#,
	movq	-8(%rbp), %rax	# insn, tmp1305
	movq	%rax, %rdi	# tmp1305,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1858	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1701
	cmpl	$2, %eax	#, ix86_cpu.1701
	jne	.L1858	#,
	.loc 1 7454 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1858:
	.loc 1 7456 0
	movq	-8(%rbp), %rax	# insn, tmp1306
	movq	%rax, %rdi	# tmp1306,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1859	#,
	.loc 1 7456 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1702
	cmpl	$2, %eax	#, which_alternative.1702
	je	.L1860	#,
	.loc 1 7456 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1859	#,
.L1860:
	.loc 1 7456 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1307
	movq	%rax, %rdi	# tmp1307,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1859	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1703
	cmpl	$2, %eax	#, ix86_cpu.1703
	je	.L1861	#,
.L1859:
	.loc 1 7456 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1308
	movq	%rax, %rdi	# tmp1308,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1862	#,
	.loc 1 7456 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1309
	movq	%rax, %rdi	# tmp1309,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1862	#,
	movq	-8(%rbp), %rax	# insn, tmp1310
	movq	%rax, %rdi	# tmp1310,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1862	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1704
	cmpl	$2, %eax	#, which_alternative.1704
	je	.L1863	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1863	#,
	movq	-8(%rbp), %rax	# insn, tmp1311
	movq	%rax, %rdi	# tmp1311,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1863	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1705
	cmpl	$2, %eax	#, ix86_cpu.1705
	je	.L1861	#,
.L1863:
	.loc 1 7456 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1706
	cmpl	$2, %eax	#, which_alternative.1706
	je	.L1864	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1862	#,
.L1864:
	.loc 1 7456 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1312
	movq	%rax, %rdi	# tmp1312,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1862	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1707
	cmpl	$2, %eax	#, ix86_cpu.1707
	jne	.L1862	#,
.L1861:
	.loc 1 7458 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1862:
	.loc 1 7462 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1698:
	.loc 1 7471 0
	movq	-8(%rbp), %rax	# insn, tmp1313
	movq	%rax, %rdi	# tmp1313,
	call	extract_insn_cached	#
	.loc 1 7472 0
	movq	-8(%rbp), %rax	# insn, tmp1314
	movq	%rax, %rdi	# tmp1314,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1865	#,
	.loc 1 7472 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1865	#,
	movq	-8(%rbp), %rax	# insn, tmp1315
	movq	%rax, %rdi	# tmp1315,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1865	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1708
	cmpl	$2, %eax	#, ix86_cpu.1708
	jne	.L1865	#,
	.loc 1 7474 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1865:
	.loc 1 7476 0
	movq	-8(%rbp), %rax	# insn, tmp1316
	movq	%rax, %rdi	# tmp1316,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1866	#,
	.loc 1 7476 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1866	#,
	movq	-8(%rbp), %rax	# insn, tmp1317
	movq	%rax, %rdi	# tmp1317,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1866	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1709
	cmpl	$2, %eax	#, ix86_cpu.1709
	jne	.L1866	#,
	.loc 1 7478 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1866:
	.loc 1 7480 0
	movq	-8(%rbp), %rax	# insn, tmp1318
	movq	%rax, %rdi	# tmp1318,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1867	#,
	.loc 1 7480 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1867	#,
	movq	-8(%rbp), %rax	# insn, tmp1319
	movq	%rax, %rdi	# tmp1319,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1867	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1710
	cmpl	$2, %eax	#, ix86_cpu.1710
	jne	.L1867	#,
	.loc 1 7482 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1867:
	.loc 1 7484 0
	movq	-8(%rbp), %rax	# insn, tmp1320
	movq	%rax, %rdi	# tmp1320,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1868	#,
	.loc 1 7484 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1868	#,
	movq	-8(%rbp), %rax	# insn, tmp1321
	movq	%rax, %rdi	# tmp1321,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1868	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1711
	cmpl	$2, %eax	#, ix86_cpu.1711
	jne	.L1868	#,
	.loc 1 7486 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1868:
	.loc 1 7488 0
	movq	-8(%rbp), %rax	# insn, tmp1322
	movq	%rax, %rdi	# tmp1322,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1869	#,
	.loc 1 7488 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1869	#,
	movq	-8(%rbp), %rax	# insn, tmp1323
	movq	%rax, %rdi	# tmp1323,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1869	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1712
	cmpl	$2, %eax	#, ix86_cpu.1712
	je	.L1870	#,
.L1869:
	.loc 1 7488 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1324
	movq	%rax, %rdi	# tmp1324,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1871	#,
	.loc 1 7488 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1325
	movq	%rax, %rdi	# tmp1325,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1871	#,
	movq	-8(%rbp), %rax	# insn, tmp1326
	movq	%rax, %rdi	# tmp1326,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1871	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1872	#,
	movq	-8(%rbp), %rax	# insn, tmp1327
	movq	%rax, %rdi	# tmp1327,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1872	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1713
	cmpl	$2, %eax	#, ix86_cpu.1713
	je	.L1870	#,
.L1872:
	.loc 1 7488 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1871	#,
	.loc 1 7488 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1328
	movq	%rax, %rdi	# tmp1328,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1871	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1714
	cmpl	$2, %eax	#, ix86_cpu.1714
	jne	.L1871	#,
.L1870:
	.loc 1 7490 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1871:
	.loc 1 7494 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1697:
	.loc 1 7501 0
	movq	-8(%rbp), %rax	# insn, tmp1329
	movq	%rax, %rdi	# tmp1329,
	call	extract_insn_cached	#
	.loc 1 7502 0
	movq	-8(%rbp), %rax	# insn, tmp1330
	movq	%rax, %rdi	# tmp1330,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1873	#,
	.loc 1 7502 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1873	#,
	movq	-8(%rbp), %rax	# insn, tmp1331
	movq	%rax, %rdi	# tmp1331,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1873	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1715
	cmpl	$2, %eax	#, ix86_cpu.1715
	jne	.L1873	#,
	.loc 1 7504 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1873:
	.loc 1 7506 0
	movq	-8(%rbp), %rax	# insn, tmp1332
	movq	%rax, %rdi	# tmp1332,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1874	#,
	.loc 1 7506 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1874	#,
	movq	-8(%rbp), %rax	# insn, tmp1333
	movq	%rax, %rdi	# tmp1333,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1874	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1716
	cmpl	$2, %eax	#, ix86_cpu.1716
	jne	.L1874	#,
	.loc 1 7508 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1874:
	.loc 1 7510 0
	movq	-8(%rbp), %rax	# insn, tmp1334
	movq	%rax, %rdi	# tmp1334,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1875	#,
	.loc 1 7510 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1875	#,
	movq	-8(%rbp), %rax	# insn, tmp1335
	movq	%rax, %rdi	# tmp1335,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1875	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1717
	cmpl	$2, %eax	#, ix86_cpu.1717
	jne	.L1875	#,
	.loc 1 7512 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1875:
	.loc 1 7514 0
	movq	-8(%rbp), %rax	# insn, tmp1336
	movq	%rax, %rdi	# tmp1336,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1876	#,
	.loc 1 7514 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1876	#,
	movq	-8(%rbp), %rax	# insn, tmp1337
	movq	%rax, %rdi	# tmp1337,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1876	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1718
	cmpl	$2, %eax	#, ix86_cpu.1718
	jne	.L1876	#,
	.loc 1 7516 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1876:
	.loc 1 7518 0
	movq	-8(%rbp), %rax	# insn, tmp1338
	movq	%rax, %rdi	# tmp1338,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1877	#,
	.loc 1 7518 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1877	#,
	movq	-8(%rbp), %rax	# insn, tmp1339
	movq	%rax, %rdi	# tmp1339,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1877	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1719
	cmpl	$2, %eax	#, ix86_cpu.1719
	je	.L1878	#,
.L1877:
	.loc 1 7518 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1340
	movq	%rax, %rdi	# tmp1340,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1879	#,
	.loc 1 7518 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1341
	movq	%rax, %rdi	# tmp1341,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1879	#,
	movq	-8(%rbp), %rax	# insn, tmp1342
	movq	%rax, %rdi	# tmp1342,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1879	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1880	#,
	movq	-8(%rbp), %rax	# insn, tmp1343
	movq	%rax, %rdi	# tmp1343,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1880	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1720
	cmpl	$2, %eax	#, ix86_cpu.1720
	je	.L1878	#,
.L1880:
	.loc 1 7518 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57228
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1879	#,
	.loc 1 7518 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1344
	movq	%rax, %rdi	# tmp1344,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1879	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1721
	cmpl	$2, %eax	#, ix86_cpu.1721
	jne	.L1879	#,
.L1878:
	.loc 1 7520 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1879:
	.loc 1 7524 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1696:
	.loc 1 7530 0
	movq	-8(%rbp), %rax	# insn, tmp1345
	movq	%rax, %rdi	# tmp1345,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1881	#,
	.loc 1 7530 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1346
	movq	%rax, %rdi	# tmp1346,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	je	.L1881	#,
	movq	-8(%rbp), %rax	# insn, tmp1347
	movq	%rax, %rdi	# tmp1347,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1881	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1722
	cmpl	$2, %eax	#, ix86_cpu.1722
	jne	.L1881	#,
	.loc 1 7532 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1881:
	.loc 1 7534 0
	movq	-8(%rbp), %rax	# insn, tmp1348
	movq	%rax, %rdi	# tmp1348,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1882	#,
	.loc 1 7534 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1349
	movq	%rax, %rdi	# tmp1349,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	jne	.L1882	#,
	movq	-8(%rbp), %rax	# insn, tmp1350
	movq	%rax, %rdi	# tmp1350,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1882	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1723
	cmpl	$2, %eax	#, ix86_cpu.1723
	jne	.L1882	#,
	.loc 1 7536 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1882:
	.loc 1 7538 0
	movq	-8(%rbp), %rax	# insn, tmp1351
	movq	%rax, %rdi	# tmp1351,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1883	#,
	.loc 1 7538 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1352
	movq	%rax, %rdi	# tmp1352,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	je	.L1883	#,
	movq	-8(%rbp), %rax	# insn, tmp1353
	movq	%rax, %rdi	# tmp1353,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1883	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1724
	cmpl	$2, %eax	#, ix86_cpu.1724
	jne	.L1883	#,
	.loc 1 7540 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1883:
	.loc 1 7542 0
	movq	-8(%rbp), %rax	# insn, tmp1354
	movq	%rax, %rdi	# tmp1354,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1884	#,
	.loc 1 7542 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1355
	movq	%rax, %rdi	# tmp1355,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	jne	.L1884	#,
	movq	-8(%rbp), %rax	# insn, tmp1356
	movq	%rax, %rdi	# tmp1356,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1884	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1725
	cmpl	$2, %eax	#, ix86_cpu.1725
	jne	.L1884	#,
	.loc 1 7544 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1884:
	.loc 1 7546 0
	movq	-8(%rbp), %rax	# insn, tmp1357
	movq	%rax, %rdi	# tmp1357,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1885	#,
	.loc 1 7546 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1358
	movq	%rax, %rdi	# tmp1358,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	je	.L1885	#,
	movq	-8(%rbp), %rax	# insn, tmp1359
	movq	%rax, %rdi	# tmp1359,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1885	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1726
	cmpl	$2, %eax	#, ix86_cpu.1726
	je	.L1886	#,
.L1885:
	.loc 1 7546 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1360
	movq	%rax, %rdi	# tmp1360,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1887	#,
	.loc 1 7546 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1361
	movq	%rax, %rdi	# tmp1361,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1887	#,
	movq	-8(%rbp), %rax	# insn, tmp1362
	movq	%rax, %rdi	# tmp1362,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1887	#,
	movq	-8(%rbp), %rax	# insn, tmp1363
	movq	%rax, %rdi	# tmp1363,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	jne	.L1888	#,
	movq	-8(%rbp), %rax	# insn, tmp1364
	movq	%rax, %rdi	# tmp1364,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1888	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1727
	cmpl	$2, %eax	#, ix86_cpu.1727
	je	.L1886	#,
.L1888:
	.loc 1 7546 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1365
	movq	%rax, %rdi	# tmp1365,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57231
	je	.L1887	#,
	.loc 1 7546 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1366
	movq	%rax, %rdi	# tmp1366,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1887	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1728
	cmpl	$2, %eax	#, ix86_cpu.1728
	jne	.L1887	#,
.L1886:
	.loc 1 7548 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1887:
	.loc 1 7552 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1695:
	.loc 1 7567 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1729
	cmpl	$2, %eax	#, ix86_cpu.1729
	jne	.L1889	#,
	.loc 1 7569 0
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1889:
	.loc 1 7573 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1694:
	.loc 1 7643 0
	movq	-8(%rbp), %rax	# insn, tmp1367
	movq	%rax, %rdi	# tmp1367,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1890	#,
	.loc 1 7643 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1368
	movq	%rax, %rdi	# tmp1368,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1890	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1730
	cmpl	$2, %eax	#, ix86_cpu.1730
	je	.L1891	#,
.L1890:
	.loc 1 7643 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1369
	movq	%rax, %rdi	# tmp1369,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1892	#,
	.loc 1 7643 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1370
	movq	%rax, %rdi	# tmp1370,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1892	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1731
	cmpl	$2, %eax	#, ix86_cpu.1731
	jne	.L1892	#,
.L1891:
	.loc 1 7645 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1892:
	.loc 1 7647 0
	movq	-8(%rbp), %rax	# insn, tmp1371
	movq	%rax, %rdi	# tmp1371,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1893	#,
	.loc 1 7647 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1372
	movq	%rax, %rdi	# tmp1372,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1893	#,
	movq	-8(%rbp), %rax	# insn, tmp1373
	movq	%rax, %rdi	# tmp1373,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1893	#,
	movq	-8(%rbp), %rax	# insn, tmp1374
	movq	%rax, %rdi	# tmp1374,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1893	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1732
	cmpl	$2, %eax	#, ix86_cpu.1732
	jne	.L1893	#,
	.loc 1 7649 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1893:
	.loc 1 7653 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1693:
	.loc 1 7662 0
	movq	-8(%rbp), %rax	# insn, tmp1375
	movq	%rax, %rdi	# tmp1375,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1894	#,
	.loc 1 7662 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1733
	cmpl	$2, %eax	#, ix86_cpu.1733
	je	.L1895	#,
.L1894:
	.loc 1 7662 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1376
	movq	%rax, %rdi	# tmp1376,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1896	#,
	.loc 1 7662 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1734
	cmpl	$2, %eax	#, ix86_cpu.1734
	jne	.L1896	#,
.L1895:
	.loc 1 7664 0 is_stmt 1
	movl	$2, %eax	#, D.57227
	jmp	.L1719	#
.L1896:
	.loc 1 7666 0
	movq	-8(%rbp), %rax	# insn, tmp1377
	movq	%rax, %rdi	# tmp1377,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1897	#,
	.loc 1 7666 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1378
	movq	%rax, %rdi	# tmp1378,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1897	#,
	movq	-8(%rbp), %rax	# insn, tmp1379
	movq	%rax, %rdi	# tmp1379,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1897	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1735
	cmpl	$2, %eax	#, ix86_cpu.1735
	jne	.L1897	#,
	.loc 1 7668 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1897:
	.loc 1 7672 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1692:
	.loc 1 7676 0
	movq	-8(%rbp), %rax	# insn, tmp1380
	movq	%rax, %rdi	# tmp1380,
	call	extract_constrain_insn_cached	#
	.loc 1 7677 0
	movq	-8(%rbp), %rax	# insn, tmp1381
	movq	%rax, %rdi	# tmp1381,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1898	#,
	.loc 1 7677 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1736
	cmpl	$1, %eax	#, which_alternative.1736
	jne	.L1898	#,
	movq	-8(%rbp), %rax	# insn, tmp1382
	movq	%rax, %rdi	# tmp1382,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1898	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1737
	cmpl	$2, %eax	#, ix86_cpu.1737
	je	.L1899	#,
.L1898:
	.loc 1 7677 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1383
	movq	%rax, %rdi	# tmp1383,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1900	#,
	.loc 1 7677 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1738
	cmpl	$1, %eax	#, which_alternative.1738
	jne	.L1900	#,
	movq	-8(%rbp), %rax	# insn, tmp1384
	movq	%rax, %rdi	# tmp1384,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1900	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1739
	cmpl	$2, %eax	#, ix86_cpu.1739
	je	.L1899	#,
.L1900:
	.loc 1 7677 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1385
	movq	%rax, %rdi	# tmp1385,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1901	#,
	.loc 1 7677 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1740
	cmpl	$1, %eax	#, which_alternative.1740
	jne	.L1901	#,
	movq	-8(%rbp), %rax	# insn, tmp1386
	movq	%rax, %rdi	# tmp1386,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1901	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1741
	cmpl	$2, %eax	#, ix86_cpu.1741
	je	.L1899	#,
.L1901:
	.loc 1 7677 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1387
	movq	%rax, %rdi	# tmp1387,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1902	#,
	.loc 1 7677 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1388
	movq	%rax, %rdi	# tmp1388,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1902	#,
	movq	-8(%rbp), %rax	# insn, tmp1389
	movq	%rax, %rdi	# tmp1389,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1902	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1742
	cmpl	$1, %eax	#, which_alternative.1742
	jne	.L1902	#,
	movq	-8(%rbp), %rax	# insn, tmp1390
	movq	%rax, %rdi	# tmp1390,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1902	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1743
	cmpl	$2, %eax	#, ix86_cpu.1743
	jne	.L1902	#,
.L1899:
	.loc 1 7679 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1902:
	.loc 1 7683 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1691:
	.loc 1 7688 0
	movq	-8(%rbp), %rax	# insn, tmp1391
	movq	%rax, %rdi	# tmp1391,
	call	extract_constrain_insn_cached	#
	.loc 1 7689 0
	movq	-8(%rbp), %rax	# insn, tmp1392
	movq	%rax, %rdi	# tmp1392,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1903	#,
	.loc 1 7689 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1744
	cmpl	$1, %eax	#, which_alternative.1744
	jne	.L1903	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1745
	cmpl	$2, %eax	#, ix86_cpu.1745
	je	.L1904	#,
.L1903:
	.loc 1 7689 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1393
	movq	%rax, %rdi	# tmp1393,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1905	#,
	.loc 1 7689 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1746
	cmpl	$1, %eax	#, which_alternative.1746
	jne	.L1905	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1747
	cmpl	$2, %eax	#, ix86_cpu.1747
	je	.L1904	#,
.L1905:
	.loc 1 7689 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1394
	movq	%rax, %rdi	# tmp1394,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1906	#,
	.loc 1 7689 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1395
	movq	%rax, %rdi	# tmp1395,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1906	#,
	movq	-8(%rbp), %rax	# insn, tmp1396
	movq	%rax, %rdi	# tmp1396,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1906	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1748
	cmpl	$1, %eax	#, which_alternative.1748
	jne	.L1906	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1749
	cmpl	$2, %eax	#, ix86_cpu.1749
	jne	.L1906	#,
.L1904:
	.loc 1 7691 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1906:
	.loc 1 7695 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1690:
	.loc 1 7699 0
	movq	-8(%rbp), %rax	# insn, tmp1397
	movq	%rax, %rdi	# tmp1397,
	call	extract_constrain_insn_cached	#
	.loc 1 7700 0
	movq	-8(%rbp), %rax	# insn, tmp1398
	movq	%rax, %rdi	# tmp1398,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1907	#,
	.loc 1 7700 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1399
	movq	%rax, %rdi	# tmp1399,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1907	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1750
	testl	%eax, %eax	# which_alternative.1750
	je	.L1907	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1751
	cmpl	$1, %eax	#, which_alternative.1751
	je	.L1907	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1752
	cmpl	$2, %eax	#, which_alternative.1752
	je	.L1907	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1753
	cmpl	$3, %eax	#, which_alternative.1753
	je	.L1908	#,
	.loc 1 7700 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1754
	cmpl	$4, %eax	#, which_alternative.1754
	jne	.L1907	#,
.L1908:
	.loc 1 7700 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1755
	cmpl	$2, %eax	#, ix86_cpu.1755
	je	.L1909	#,
.L1907:
	.loc 1 7700 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1400
	movq	%rax, %rdi	# tmp1400,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1910	#,
	.loc 1 7700 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1401
	movq	%rax, %rdi	# tmp1401,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1910	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1756
	testl	%eax, %eax	# which_alternative.1756
	je	.L1910	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1757
	cmpl	$1, %eax	#, which_alternative.1757
	je	.L1910	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1758
	cmpl	$2, %eax	#, which_alternative.1758
	je	.L1910	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1759
	cmpl	$3, %eax	#, which_alternative.1759
	je	.L1911	#,
	.loc 1 7700 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1760
	cmpl	$4, %eax	#, which_alternative.1760
	jne	.L1910	#,
.L1911:
	.loc 1 7700 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1761
	cmpl	$2, %eax	#, ix86_cpu.1761
	je	.L1909	#,
.L1910:
	.loc 1 7700 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1402
	movq	%rax, %rdi	# tmp1402,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1912	#,
	.loc 1 7700 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1403
	movq	%rax, %rdi	# tmp1403,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1912	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1762
	testl	%eax, %eax	# which_alternative.1762
	je	.L1912	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1763
	cmpl	$1, %eax	#, which_alternative.1763
	je	.L1912	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1764
	cmpl	$2, %eax	#, which_alternative.1764
	je	.L1912	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1765
	cmpl	$3, %eax	#, which_alternative.1765
	je	.L1913	#,
	.loc 1 7700 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1766
	cmpl	$4, %eax	#, which_alternative.1766
	jne	.L1912	#,
.L1913:
	.loc 1 7700 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1767
	cmpl	$2, %eax	#, ix86_cpu.1767
	je	.L1909	#,
.L1912:
	.loc 1 7700 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1404
	movq	%rax, %rdi	# tmp1404,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1914	#,
	.loc 1 7700 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1405
	movq	%rax, %rdi	# tmp1405,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1914	#,
	movq	-8(%rbp), %rax	# insn, tmp1406
	movq	%rax, %rdi	# tmp1406,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1914	#,
	movq	-8(%rbp), %rax	# insn, tmp1407
	movq	%rax, %rdi	# tmp1407,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1914	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1768
	testl	%eax, %eax	# which_alternative.1768
	je	.L1914	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1769
	cmpl	$1, %eax	#, which_alternative.1769
	je	.L1914	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1770
	cmpl	$2, %eax	#, which_alternative.1770
	je	.L1914	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1771
	cmpl	$3, %eax	#, which_alternative.1771
	je	.L1915	#,
	.loc 1 7700 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1772
	cmpl	$4, %eax	#, which_alternative.1772
	jne	.L1914	#,
.L1915:
	.loc 1 7700 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1773
	cmpl	$2, %eax	#, ix86_cpu.1773
	jne	.L1914	#,
.L1909:
	.loc 1 7702 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1914:
	.loc 1 7706 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1689:
	.loc 1 7711 0
	movq	-8(%rbp), %rax	# insn, tmp1408
	movq	%rax, %rdi	# tmp1408,
	call	extract_constrain_insn_cached	#
	.loc 1 7712 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1774
	cmpl	$1, %eax	#, which_alternative.1774
	jne	.L1916	#,
	.loc 1 7712 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	memory_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1916	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1775
	cmpl	$2, %eax	#, ix86_cpu.1775
	jne	.L1916	#,
	.loc 1 7714 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1916:
	.loc 1 7718 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1688:
	.loc 1 7722 0
	movq	-8(%rbp), %rax	# insn, tmp1409
	movq	%rax, %rdi	# tmp1409,
	call	extract_constrain_insn_cached	#
	.loc 1 7723 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1776
	testl	%eax, %eax	# which_alternative.1776
	jne	.L1917	#,
	.loc 1 7723 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	memory_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1917	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1777
	cmpl	$2, %eax	#, ix86_cpu.1777
	jne	.L1917	#,
	.loc 1 7725 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1917:
	.loc 1 7729 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1687:
	.loc 1 7733 0
	movq	-8(%rbp), %rax	# insn, tmp1410
	movq	%rax, %rdi	# tmp1410,
	call	extract_constrain_insn_cached	#
	.loc 1 7734 0
	movq	-8(%rbp), %rax	# insn, tmp1411
	movq	%rax, %rdi	# tmp1411,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1918	#,
	.loc 1 7734 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1412
	movq	%rax, %rdi	# tmp1412,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1918	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1918	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1778
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1779
	movl	%eax, %ecx	# ix86_cpu.1780, tmp1533
	sarl	%cl, %edx	# tmp1533, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	jne	.L1918	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1781
	cmpl	$2, %eax	#, ix86_cpu.1781
	je	.L1919	#,
.L1918:
	.loc 1 7734 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1413
	movq	%rax, %rdi	# tmp1413,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1920	#,
	.loc 1 7734 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1414
	movq	%rax, %rdi	# tmp1414,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1920	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1920	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1782
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1783
	movl	%eax, %ecx	# ix86_cpu.1784, tmp1535
	sarl	%cl, %edx	# tmp1535, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	jne	.L1920	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1785
	cmpl	$2, %eax	#, ix86_cpu.1785
	je	.L1919	#,
.L1920:
	.loc 1 7734 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1415
	movq	%rax, %rdi	# tmp1415,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1921	#,
	.loc 1 7734 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1416
	movq	%rax, %rdi	# tmp1416,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1921	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1921	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1786
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1787
	movl	%eax, %ecx	# ix86_cpu.1788, tmp1537
	sarl	%cl, %edx	# tmp1537, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	jne	.L1921	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1789
	cmpl	$2, %eax	#, ix86_cpu.1789
	je	.L1919	#,
.L1921:
	.loc 1 7734 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1417
	movq	%rax, %rdi	# tmp1417,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1922	#,
	.loc 1 7734 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1418
	movq	%rax, %rdi	# tmp1418,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1922	#,
	movq	-8(%rbp), %rax	# insn, tmp1419
	movq	%rax, %rdi	# tmp1419,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1922	#,
	movq	-8(%rbp), %rax	# insn, tmp1420
	movq	%rax, %rdi	# tmp1420,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1922	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57228
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57227
	je	.L1922	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1790
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1791
	movl	%eax, %ecx	# ix86_cpu.1792, tmp1539
	sarl	%cl, %edx	# tmp1539, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	jne	.L1922	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1793
	cmpl	$2, %eax	#, ix86_cpu.1793
	jne	.L1922	#,
.L1919:
	.loc 1 7736 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1922:
	.loc 1 7740 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1686:
	.loc 1 7744 0
	movq	-8(%rbp), %rax	# insn, tmp1421
	movq	%rax, %rdi	# tmp1421,
	call	extract_constrain_insn_cached	#
	.loc 1 7745 0
	movq	-8(%rbp), %rax	# insn, tmp1422
	movq	%rax, %rdi	# tmp1422,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1923	#,
	.loc 1 7745 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1423
	movq	%rax, %rdi	# tmp1423,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1923	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1794
	cmpl	$3, %eax	#, which_alternative.1794
	jne	.L1924	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1795
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1796
	movl	%eax, %ecx	# ix86_cpu.1797, tmp1541
	sarl	%cl, %edx	# tmp1541, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1925	#,
	.loc 1 7745 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1798
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1799
	movl	%eax, %ecx	# ix86_cpu.1800, tmp1543
	sarl	%cl, %edx	# tmp1543, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1925	#,
.L1924:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1801
	cmpl	$3, %eax	#, which_alternative.1801
	jne	.L1926	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1802
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1803
	movl	%eax, %ecx	# ix86_cpu.1804, tmp1545
	sarl	%cl, %edx	# tmp1545, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1923	#,
	.loc 1 7745 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1805
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1806
	movl	%eax, %ecx	# ix86_cpu.1807, tmp1547
	sarl	%cl, %edx	# tmp1547, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1923	#,
.L1926:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1808
	cmpl	$3, %eax	#, which_alternative.1808
	je	.L1923	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1809
	cmpl	$5, %eax	#, which_alternative.1809
	je	.L1923	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1810
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1811
	movl	%eax, %ecx	# ix86_cpu.1812, tmp1549
	sarl	%cl, %edx	# tmp1549, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1925	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1813
	cmpl	$2, %eax	#, which_alternative.1813
	je	.L1923	#,
.L1925:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1814
	cmpl	$2, %eax	#, ix86_cpu.1814
	je	.L1927	#,
.L1923:
	.loc 1 7745 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1424
	movq	%rax, %rdi	# tmp1424,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1928	#,
	.loc 1 7745 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1425
	movq	%rax, %rdi	# tmp1425,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1928	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1815
	cmpl	$3, %eax	#, which_alternative.1815
	jne	.L1929	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1816
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1817
	movl	%eax, %ecx	# ix86_cpu.1818, tmp1551
	sarl	%cl, %edx	# tmp1551, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1930	#,
	.loc 1 7745 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1819
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1820
	movl	%eax, %ecx	# ix86_cpu.1821, tmp1553
	sarl	%cl, %edx	# tmp1553, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1930	#,
.L1929:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1822
	cmpl	$3, %eax	#, which_alternative.1822
	jne	.L1931	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1823
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1824
	movl	%eax, %ecx	# ix86_cpu.1825, tmp1555
	sarl	%cl, %edx	# tmp1555, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1928	#,
	.loc 1 7745 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1826
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1827
	movl	%eax, %ecx	# ix86_cpu.1828, tmp1557
	sarl	%cl, %edx	# tmp1557, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1928	#,
.L1931:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1829
	cmpl	$3, %eax	#, which_alternative.1829
	je	.L1928	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1830
	cmpl	$5, %eax	#, which_alternative.1830
	je	.L1928	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1831
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1832
	movl	%eax, %ecx	# ix86_cpu.1833, tmp1559
	sarl	%cl, %edx	# tmp1559, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1930	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1834
	cmpl	$2, %eax	#, which_alternative.1834
	je	.L1928	#,
.L1930:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1835
	cmpl	$2, %eax	#, ix86_cpu.1835
	je	.L1927	#,
.L1928:
	.loc 1 7745 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1426
	movq	%rax, %rdi	# tmp1426,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1932	#,
	.loc 1 7745 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1427
	movq	%rax, %rdi	# tmp1427,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1932	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1836
	cmpl	$3, %eax	#, which_alternative.1836
	jne	.L1933	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1837
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1838
	movl	%eax, %ecx	# ix86_cpu.1839, tmp1561
	sarl	%cl, %edx	# tmp1561, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1934	#,
	.loc 1 7745 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1840
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1841
	movl	%eax, %ecx	# ix86_cpu.1842, tmp1563
	sarl	%cl, %edx	# tmp1563, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1934	#,
.L1933:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1843
	cmpl	$3, %eax	#, which_alternative.1843
	jne	.L1935	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1844
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1845
	movl	%eax, %ecx	# ix86_cpu.1846, tmp1565
	sarl	%cl, %edx	# tmp1565, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1932	#,
	.loc 1 7745 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1847
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1848
	movl	%eax, %ecx	# ix86_cpu.1849, tmp1567
	sarl	%cl, %edx	# tmp1567, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1932	#,
.L1935:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1850
	cmpl	$3, %eax	#, which_alternative.1850
	je	.L1932	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1851
	cmpl	$5, %eax	#, which_alternative.1851
	je	.L1932	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1852
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1853
	movl	%eax, %ecx	# ix86_cpu.1854, tmp1569
	sarl	%cl, %edx	# tmp1569, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1934	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1855
	cmpl	$2, %eax	#, which_alternative.1855
	je	.L1932	#,
.L1934:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1856
	cmpl	$2, %eax	#, ix86_cpu.1856
	je	.L1927	#,
.L1932:
	.loc 1 7745 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1428
	movq	%rax, %rdi	# tmp1428,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1936	#,
	.loc 1 7745 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1429
	movq	%rax, %rdi	# tmp1429,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1936	#,
	movq	-8(%rbp), %rax	# insn, tmp1430
	movq	%rax, %rdi	# tmp1430,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1936	#,
	movq	-8(%rbp), %rax	# insn, tmp1431
	movq	%rax, %rdi	# tmp1431,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1936	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1857
	cmpl	$3, %eax	#, which_alternative.1857
	jne	.L1937	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1858
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1859
	movl	%eax, %ecx	# ix86_cpu.1860, tmp1571
	sarl	%cl, %edx	# tmp1571, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1938	#,
	.loc 1 7745 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1861
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1862
	movl	%eax, %ecx	# ix86_cpu.1863, tmp1573
	sarl	%cl, %edx	# tmp1573, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1938	#,
.L1937:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1864
	cmpl	$3, %eax	#, which_alternative.1864
	jne	.L1939	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.1865
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1866
	movl	%eax, %ecx	# ix86_cpu.1867, tmp1575
	sarl	%cl, %edx	# tmp1575, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1936	#,
	.loc 1 7745 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.1868
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1869
	movl	%eax, %ecx	# ix86_cpu.1870, tmp1577
	sarl	%cl, %edx	# tmp1577, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1936	#,
.L1939:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1871
	cmpl	$3, %eax	#, which_alternative.1871
	je	.L1936	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1872
	cmpl	$5, %eax	#, which_alternative.1872
	je	.L1936	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.1873
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1874
	movl	%eax, %ecx	# ix86_cpu.1875, tmp1579
	sarl	%cl, %edx	# tmp1579, D.57227
	movl	%edx, %eax	# D.57227, D.57227
	andl	$1, %eax	#, D.57227
	testl	%eax, %eax	# D.57227
	je	.L1938	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1876
	cmpl	$2, %eax	#, which_alternative.1876
	je	.L1936	#,
.L1938:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1877
	cmpl	$2, %eax	#, ix86_cpu.1877
	jne	.L1936	#,
.L1927:
	.loc 1 7747 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1936:
	.loc 1 7751 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1685:
	.loc 1 7759 0
	movq	-8(%rbp), %rax	# insn, tmp1432
	movq	%rax, %rdi	# tmp1432,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1940	#,
	.loc 1 7759 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1433
	movq	%rax, %rdi	# tmp1433,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1940	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1878
	cmpl	$2, %eax	#, ix86_cpu.1878
	je	.L1941	#,
.L1940:
	.loc 1 7759 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1434
	movq	%rax, %rdi	# tmp1434,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1942	#,
	.loc 1 7759 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1435
	movq	%rax, %rdi	# tmp1435,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1942	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1879
	cmpl	$2, %eax	#, ix86_cpu.1879
	je	.L1941	#,
.L1942:
	.loc 1 7759 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1436
	movq	%rax, %rdi	# tmp1436,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1943	#,
	.loc 1 7759 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1437
	movq	%rax, %rdi	# tmp1437,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1943	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1880
	cmpl	$2, %eax	#, ix86_cpu.1880
	je	.L1941	#,
.L1943:
	.loc 1 7759 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1438
	movq	%rax, %rdi	# tmp1438,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1944	#,
	.loc 1 7759 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1439
	movq	%rax, %rdi	# tmp1439,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1944	#,
	movq	-8(%rbp), %rax	# insn, tmp1440
	movq	%rax, %rdi	# tmp1440,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1944	#,
	movq	-8(%rbp), %rax	# insn, tmp1441
	movq	%rax, %rdi	# tmp1441,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1944	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1881
	cmpl	$2, %eax	#, ix86_cpu.1881
	jne	.L1944	#,
.L1941:
	.loc 1 7761 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1944:
	.loc 1 7765 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1684:
	.loc 1 7772 0
	movq	-8(%rbp), %rax	# insn, tmp1442
	movq	%rax, %rdi	# tmp1442,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1945	#,
	.loc 1 7772 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1443
	movq	%rax, %rdi	# tmp1443,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1945	#,
	movq	-8(%rbp), %rax	# insn, tmp1444
	movq	%rax, %rdi	# tmp1444,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57231
	jne	.L1945	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1882
	cmpl	$2, %eax	#, ix86_cpu.1882
	je	.L1946	#,
.L1945:
	.loc 1 7772 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1445
	movq	%rax, %rdi	# tmp1445,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1947	#,
	.loc 1 7772 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1446
	movq	%rax, %rdi	# tmp1446,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1947	#,
	movq	-8(%rbp), %rax	# insn, tmp1447
	movq	%rax, %rdi	# tmp1447,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57231
	jne	.L1947	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1883
	cmpl	$2, %eax	#, ix86_cpu.1883
	je	.L1946	#,
.L1947:
	.loc 1 7772 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1448
	movq	%rax, %rdi	# tmp1448,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1948	#,
	.loc 1 7772 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1449
	movq	%rax, %rdi	# tmp1449,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1948	#,
	movq	-8(%rbp), %rax	# insn, tmp1450
	movq	%rax, %rdi	# tmp1450,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57231
	jne	.L1948	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1884
	cmpl	$2, %eax	#, ix86_cpu.1884
	je	.L1946	#,
.L1948:
	.loc 1 7772 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1451
	movq	%rax, %rdi	# tmp1451,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1949	#,
	.loc 1 7772 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1452
	movq	%rax, %rdi	# tmp1452,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1949	#,
	movq	-8(%rbp), %rax	# insn, tmp1453
	movq	%rax, %rdi	# tmp1453,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1949	#,
	movq	-8(%rbp), %rax	# insn, tmp1454
	movq	%rax, %rdi	# tmp1454,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1949	#,
	movq	-8(%rbp), %rax	# insn, tmp1455
	movq	%rax, %rdi	# tmp1455,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57231
	jne	.L1949	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1885
	cmpl	$2, %eax	#, ix86_cpu.1885
	jne	.L1949	#,
.L1946:
	.loc 1 7774 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1949:
	.loc 1 7778 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1683:
	.loc 1 7789 0
	movq	-8(%rbp), %rax	# insn, tmp1456
	movq	%rax, %rdi	# tmp1456,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1950	#,
	.loc 1 7789 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1886
	cmpl	$2, %eax	#, ix86_cpu.1886
	jne	.L1950	#,
	.loc 1 7791 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1950:
	.loc 1 7795 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1682:
	.loc 1 7800 0
	movq	-8(%rbp), %rax	# insn, tmp1457
	movq	%rax, %rdi	# tmp1457,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	jne	.L1951	#,
	.loc 1 7800 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1458
	movq	%rax, %rdi	# tmp1458,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1951	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1887
	cmpl	$2, %eax	#, ix86_cpu.1887
	je	.L1952	#,
.L1951:
	.loc 1 7800 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1459
	movq	%rax, %rdi	# tmp1459,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1953	#,
	.loc 1 7800 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1460
	movq	%rax, %rdi	# tmp1460,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1953	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1888
	cmpl	$2, %eax	#, ix86_cpu.1888
	je	.L1952	#,
.L1953:
	.loc 1 7800 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1461
	movq	%rax, %rdi	# tmp1461,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1954	#,
	.loc 1 7800 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1462
	movq	%rax, %rdi	# tmp1462,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1954	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1889
	cmpl	$2, %eax	#, ix86_cpu.1889
	je	.L1952	#,
.L1954:
	.loc 1 7800 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1463
	movq	%rax, %rdi	# tmp1463,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57229
	je	.L1955	#,
	.loc 1 7800 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1464
	movq	%rax, %rdi	# tmp1464,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1955	#,
	movq	-8(%rbp), %rax	# insn, tmp1465
	movq	%rax, %rdi	# tmp1465,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1955	#,
	movq	-8(%rbp), %rax	# insn, tmp1466
	movq	%rax, %rdi	# tmp1466,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57232
	je	.L1955	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1890
	cmpl	$2, %eax	#, ix86_cpu.1890
	jne	.L1955	#,
.L1952:
	.loc 1 7802 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1955:
	.loc 1 7806 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1681:
	.loc 1 7827 0
	movq	-8(%rbp), %rax	# insn, tmp1467
	movq	%rax, %rdi	# tmp1467,
	call	extract_insn_cached	#
	.loc 1 7828 0
	movq	-8(%rbp), %rax	# insn, tmp1468
	movq	%rax, %rdi	# tmp1468,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	jne	.L1956	#,
	.loc 1 7828 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1891
	cmpl	$2, %eax	#, ix86_cpu.1891
	je	.L1957	#,
.L1956:
	.loc 1 7828 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	memory_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1958	#,
	.loc 1 7828 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1469
	movq	%rax, %rdi	# tmp1469,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57229
	je	.L1958	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1892
	cmpl	$2, %eax	#, ix86_cpu.1892
	jne	.L1958	#,
.L1957:
	.loc 1 7830 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1958:
	.loc 1 7834 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1680:
	.loc 1 7841 0
	movq	-8(%rbp), %rax	# insn, tmp1470
	movq	%rax, %rdi	# tmp1470,
	call	extract_insn_cached	#
	.loc 1 7842 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	memory_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1959	#,
	.loc 1 7842 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1893
	cmpl	$2, %eax	#, ix86_cpu.1893
	jne	.L1959	#,
	.loc 1 7844 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1959:
	.loc 1 7848 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1679:
	.loc 1 7859 0
	movq	-8(%rbp), %rax	# insn, tmp1471
	movq	%rax, %rdi	# tmp1471,
	call	extract_insn_cached	#
	.loc 1 7860 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57228
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57228,
	call	memory_operand	#
	testl	%eax, %eax	# D.57227
	jne	.L1960	#,
	.loc 1 7860 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1894
	cmpl	$2, %eax	#, ix86_cpu.1894
	jne	.L1960	#,
	.loc 1 7862 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1960:
	.loc 1 7866 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1678:
	.loc 1 7890 0
	movq	-8(%rbp), %rax	# insn, tmp1472
	movq	%rax, %rdi	# tmp1472,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	jne	.L1961	#,
	.loc 1 7890 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1473
	movq	%rax, %rdi	# tmp1473,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1961	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1895
	cmpl	$2, %eax	#, ix86_cpu.1895
	je	.L1962	#,
.L1961:
	.loc 1 7890 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1474
	movq	%rax, %rdi	# tmp1474,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57229
	je	.L1963	#,
	.loc 1 7890 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1475
	movq	%rax, %rdi	# tmp1475,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57230
	je	.L1963	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1896
	cmpl	$2, %eax	#, ix86_cpu.1896
	jne	.L1963	#,
.L1962:
	.loc 1 7892 0 is_stmt 1
	movl	$1, %eax	#, D.57227
	jmp	.L1719	#
.L1963:
	.loc 1 7896 0
	movl	$3, %eax	#, D.57227
	jmp	.L1719	#
.L1676:
	.loc 1 7900 0
	movq	-8(%rbp), %rax	# insn, tmp1476
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57228
	movzwl	(%rax), %eax	# _1170->code, D.57233
	cmpw	$40, %ax	#, D.57233
	je	.L1675	#,
	.loc 1 7901 0
	movq	-8(%rbp), %rax	# insn, tmp1477
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57228
	movq	%rax, %rdi	# D.57228,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57227
	jns	.L1675	#,
	.loc 1 7902 0
	movq	-8(%rbp), %rax	# insn, tmp1478
	movl	$__FUNCTION__.13632, %ecx	#,
	movl	$7902, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1478,
	call	_fatal_insn_not_found	#
.L1675:
	.loc 1 7904 0
	movl	$3, %eax	#, D.57227
.L1719:
	.loc 1 7907 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE36:
	.size	pent_uv_unit_ready_cost, .-pent_uv_unit_ready_cost
	.globl	pent_uv_unit_blockage_range
	.type	pent_uv_unit_blockage_range, @function
pent_uv_unit_blockage_range:
.LFB37:
	.loc 1 7913 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 7914 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57234
	testl	%eax, %eax	# D.57234
	js	.L1965	#,
	.loc 1 7914 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.1897
	jmp	.L1966	#
.L1965:
	.loc 1 7914 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L1966:
	.loc 1 7914 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.1897
	jne	.L1967	#,
	.loc 1 7917 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57235
	movzwl	(%rax), %eax	# _6->code, D.57236
	cmpw	$40, %ax	#, D.57236
	je	.L1967	#,
	.loc 1 7918 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57235
	movq	%rax, %rdi	# D.57235,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57234
	jns	.L1967	#,
	.loc 1 7919 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.13640, %ecx	#,
	movl	$7919, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L1967:
	.loc 1 7921 0
	movl	$65539, %eax	#, D.57237
	.loc 1 7924 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE37:
	.size	pent_uv_unit_blockage_range, .-pent_uv_unit_blockage_range
	.globl	pent_u_unit_ready_cost
	.type	pent_u_unit_ready_cost, @function
pent_u_unit_ready_cost:
.LFB38:
	.loc 1 7930 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 7931 0
	movq	-8(%rbp), %rax	# insn, tmp732
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57238
	testl	%eax, %eax	# D.57238
	js	.L1971	#,
	.loc 1 7931 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp733
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.1898
	jmp	.L1972	#
.L1971:
	.loc 1 7931 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp734
	movq	%rax, %rdi	# tmp734,
	call	recog_memoized_1	#
.L1972:
	.loc 1 7931 0 discriminator 3
	addl	$1, %eax	#, tmp735
	cmpl	$486, %eax	#, tmp735
	ja	.L1973	#,
	movl	%eax, %eax	# tmp735, tmp736
	movq	.L1975(,%rax,8), %rax	#, tmp737
	jmp	*%rax	# tmp737
	.section	.rodata
	.align 8
	.align 4
.L1975:
	.quad	.L1974
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1976
	.quad	.L1976
	.quad	.L1976
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1977
	.quad	.L1973
	.quad	.L1978
	.quad	.L1979
	.quad	.L1979
	.quad	.L1973
	.quad	.L1973
	.quad	.L1980
	.quad	.L1981
	.quad	.L1977
	.quad	.L1973
	.quad	.L1982
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1981
	.quad	.L1983
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1984
	.quad	.L1973
	.quad	.L1984
	.quad	.L1984
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1985
	.quad	.L1986
	.quad	.L1986
	.quad	.L1986
	.quad	.L1973
	.quad	.L1986
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1984
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1984
	.quad	.L1984
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1987
	.quad	.L1987
	.quad	.L1987
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1988
	.quad	.L1987
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1987
	.quad	.L1987
	.quad	.L1987
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1987
	.quad	.L1987
	.quad	.L1987
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1981
	.quad	.L1973
	.quad	.L1973
	.quad	.L1989
	.quad	.L1989
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1989
	.quad	.L1990
	.quad	.L1989
	.quad	.L1991
	.quad	.L1989
	.quad	.L1989
	.quad	.L1989
	.quad	.L1989
	.quad	.L1989
	.quad	.L1989
	.quad	.L1992
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1973
	.quad	.L1973
	.quad	.L1973
	.quad	.L1992
	.quad	.L1992
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1973
	.quad	.L1973
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.quad	.L1993
	.text
.L1993:
	.loc 1 7993 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp738
	movq	%rax, %rdi	# tmp738,
	call	extract_insn_cached	#
	.loc 1 7994 0
	movq	-8(%rbp), %rax	# insn, tmp739
	movq	%rax, %rdi	# tmp739,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L1994	#,
	.loc 1 7994 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp740
	movq	%rax, %rdi	# tmp740,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L1994	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57238
	je	.L1994	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1899
	cmpl	$2, %eax	#, ix86_cpu.1899
	je	.L1995	#,
.L1994:
	.loc 1 7994 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp741
	movq	%rax, %rdi	# tmp741,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L1996	#,
	.loc 1 7994 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp742
	movq	%rax, %rdi	# tmp742,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L1996	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57238
	je	.L1996	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1900
	cmpl	$2, %eax	#, ix86_cpu.1900
	jne	.L1996	#,
.L1995:
	.loc 1 7996 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L1996:
	.loc 1 7998 0
	movq	-8(%rbp), %rax	# insn, tmp743
	movq	%rax, %rdi	# tmp743,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L1998	#,
	.loc 1 7998 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp744
	movq	%rax, %rdi	# tmp744,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L1998	#,
	movq	-8(%rbp), %rax	# insn, tmp745
	movq	%rax, %rdi	# tmp745,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L1998	#,
	movq	-8(%rbp), %rax	# insn, tmp746
	movq	%rax, %rdi	# tmp746,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L1998	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57238
	je	.L1998	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1901
	cmpl	$2, %eax	#, ix86_cpu.1901
	jne	.L1998	#,
	.loc 1 8000 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L1998:
	.loc 1 8004 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1992:
	.loc 1 8010 0
	movq	-8(%rbp), %rax	# insn, tmp747
	movq	%rax, %rdi	# tmp747,
	call	extract_constrain_insn_cached	#
	.loc 1 8011 0
	movq	-8(%rbp), %rax	# insn, tmp748
	movq	%rax, %rdi	# tmp748,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L1999	#,
	.loc 1 8011 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp749
	movq	%rax, %rdi	# tmp749,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L1999	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1902
	cmpl	$1, %eax	#, which_alternative.1902
	jne	.L1999	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57238
	je	.L1999	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1903
	cmpl	$2, %eax	#, ix86_cpu.1903
	je	.L2000	#,
.L1999:
	.loc 1 8011 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp750
	movq	%rax, %rdi	# tmp750,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2001	#,
	.loc 1 8011 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp751
	movq	%rax, %rdi	# tmp751,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2001	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1904
	cmpl	$1, %eax	#, which_alternative.1904
	jne	.L2001	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2001	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1905
	cmpl	$2, %eax	#, ix86_cpu.1905
	jne	.L2001	#,
.L2000:
	.loc 1 8013 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2001:
	.loc 1 8015 0
	movq	-8(%rbp), %rax	# insn, tmp752
	movq	%rax, %rdi	# tmp752,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2002	#,
	.loc 1 8015 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp753
	movq	%rax, %rdi	# tmp753,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2002	#,
	movq	-8(%rbp), %rax	# insn, tmp754
	movq	%rax, %rdi	# tmp754,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2002	#,
	movq	-8(%rbp), %rax	# insn, tmp755
	movq	%rax, %rdi	# tmp755,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2002	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1906
	cmpl	$1, %eax	#, which_alternative.1906
	jne	.L2002	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2002	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1907
	cmpl	$2, %eax	#, ix86_cpu.1907
	jne	.L2002	#,
	.loc 1 8017 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2002:
	.loc 1 8021 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1991:
	.loc 1 8025 0
	movq	-8(%rbp), %rax	# insn, tmp756
	movq	%rax, %rdi	# tmp756,
	call	extract_constrain_insn_cached	#
	.loc 1 8026 0
	movq	-8(%rbp), %rax	# insn, tmp757
	movq	%rax, %rdi	# tmp757,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	jne	.L2003	#,
	.loc 1 8026 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1908
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1909
	movl	%eax, %ecx	# ix86_cpu.1910, tmp929
	sarl	%cl, %edx	# tmp929, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2003	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2003	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1911
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1912
	movl	%eax, %ecx	# ix86_cpu.1913, tmp931
	sarl	%cl, %edx	# tmp931, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2004	#,
	.loc 1 8026 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2003	#,
.L2004:
	.loc 1 8026 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp758
	movq	%rax, %rdi	# tmp758,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2003	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1914
	cmpl	$2, %eax	#, ix86_cpu.1914
	jne	.L2003	#,
	.loc 1 8028 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2003:
	.loc 1 8030 0
	movq	-8(%rbp), %rax	# insn, tmp759
	movq	%rax, %rdi	# tmp759,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2005	#,
	.loc 1 8030 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1915
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1916
	movl	%eax, %ecx	# ix86_cpu.1917, tmp933
	sarl	%cl, %edx	# tmp933, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2006	#,
	.loc 1 8030 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2007	#,
.L2006:
	.loc 1 8030 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp760
	movq	%rax, %rdi	# tmp760,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2007	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1918
	cmpl	$2, %eax	#, ix86_cpu.1918
	je	.L2008	#,
.L2007:
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1919
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1920
	movl	%eax, %ecx	# ix86_cpu.1921, tmp935
	sarl	%cl, %edx	# tmp935, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2005	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2005	#,
	movq	-8(%rbp), %rax	# insn, tmp761
	movq	%rax, %rdi	# tmp761,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2005	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1922
	cmpl	$2, %eax	#, ix86_cpu.1922
	jne	.L2005	#,
.L2008:
	.loc 1 8032 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2005:
	.loc 1 8034 0
	movq	-8(%rbp), %rax	# insn, tmp762
	movq	%rax, %rdi	# tmp762,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2009	#,
	.loc 1 8034 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1923
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1924
	movl	%eax, %ecx	# ix86_cpu.1925, tmp937
	sarl	%cl, %edx	# tmp937, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2010	#,
	.loc 1 8034 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2011	#,
.L2010:
	.loc 1 8034 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp763
	movq	%rax, %rdi	# tmp763,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2011	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1926
	cmpl	$2, %eax	#, ix86_cpu.1926
	je	.L2012	#,
.L2011:
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1927
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1928
	movl	%eax, %ecx	# ix86_cpu.1929, tmp939
	sarl	%cl, %edx	# tmp939, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2009	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2009	#,
	movq	-8(%rbp), %rax	# insn, tmp764
	movq	%rax, %rdi	# tmp764,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2009	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1930
	cmpl	$2, %eax	#, ix86_cpu.1930
	jne	.L2009	#,
.L2012:
	.loc 1 8036 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2009:
	.loc 1 8038 0
	movq	-8(%rbp), %rax	# insn, tmp765
	movq	%rax, %rdi	# tmp765,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2013	#,
	.loc 1 8038 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1931
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1932
	movl	%eax, %ecx	# ix86_cpu.1933, tmp941
	sarl	%cl, %edx	# tmp941, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2013	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2013	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1934
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1935
	movl	%eax, %ecx	# ix86_cpu.1936, tmp943
	sarl	%cl, %edx	# tmp943, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2014	#,
	.loc 1 8038 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2013	#,
.L2014:
	.loc 1 8038 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp766
	movq	%rax, %rdi	# tmp766,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2013	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1937
	cmpl	$2, %eax	#, ix86_cpu.1937
	je	.L2015	#,
.L2013:
	.loc 1 8038 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp767
	movq	%rax, %rdi	# tmp767,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2016	#,
	.loc 1 8038 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp768
	movq	%rax, %rdi	# tmp768,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2016	#,
	movq	-8(%rbp), %rax	# insn, tmp769
	movq	%rax, %rdi	# tmp769,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2016	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1938
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1939
	movl	%eax, %ecx	# ix86_cpu.1940, tmp945
	sarl	%cl, %edx	# tmp945, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2017	#,
	.loc 1 8038 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2018	#,
.L2017:
	.loc 1 8038 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp770
	movq	%rax, %rdi	# tmp770,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2018	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1941
	cmpl	$2, %eax	#, ix86_cpu.1941
	je	.L2015	#,
.L2018:
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1942
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1943
	movl	%eax, %ecx	# ix86_cpu.1944, tmp947
	sarl	%cl, %edx	# tmp947, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2019	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2019	#,
	movq	-8(%rbp), %rax	# insn, tmp771
	movq	%rax, %rdi	# tmp771,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2019	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1945
	cmpl	$2, %eax	#, ix86_cpu.1945
	je	.L2015	#,
.L2019:
	.loc 1 8038 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1946
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1947
	movl	%eax, %ecx	# ix86_cpu.1948, tmp949
	sarl	%cl, %edx	# tmp949, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2016	#,
	.loc 1 8038 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2016	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1949
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1950
	movl	%eax, %ecx	# ix86_cpu.1951, tmp951
	sarl	%cl, %edx	# tmp951, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2020	#,
	.loc 1 8038 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2016	#,
.L2020:
	.loc 1 8038 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp772
	movq	%rax, %rdi	# tmp772,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2016	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1952
	cmpl	$2, %eax	#, ix86_cpu.1952
	jne	.L2016	#,
.L2015:
	.loc 1 8040 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2016:
	.loc 1 8044 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1990:
	.loc 1 8048 0
	movq	-8(%rbp), %rax	# insn, tmp773
	movq	%rax, %rdi	# tmp773,
	call	extract_constrain_insn_cached	#
	.loc 1 8049 0
	movq	-8(%rbp), %rax	# insn, tmp774
	movq	%rax, %rdi	# tmp774,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	jne	.L2021	#,
	.loc 1 8049 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1953
	testl	%eax, %eax	# which_alternative.1953
	jne	.L2022	#,
	.loc 1 8049 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1954
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1955
	movl	%eax, %ecx	# ix86_cpu.1956, tmp953
	sarl	%cl, %edx	# tmp953, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2021	#,
	.loc 1 8049 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2021	#,
.L2022:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1957
	testl	%eax, %eax	# which_alternative.1957
	jne	.L2023	#,
	.loc 1 8049 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1958
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1959
	movl	%eax, %ecx	# ix86_cpu.1960, tmp955
	sarl	%cl, %edx	# tmp955, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2023	#,
	.loc 1 8049 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2021	#,
.L2023:
	movq	-8(%rbp), %rax	# insn, tmp775
	movq	%rax, %rdi	# tmp775,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2021	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1961
	cmpl	$2, %eax	#, ix86_cpu.1961
	jne	.L2021	#,
	.loc 1 8051 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2021:
	.loc 1 8053 0
	movq	-8(%rbp), %rax	# insn, tmp776
	movq	%rax, %rdi	# tmp776,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2024	#,
	.loc 1 8053 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1962
	testl	%eax, %eax	# which_alternative.1962
	jne	.L2025	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1963
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1964
	movl	%eax, %ecx	# ix86_cpu.1965, tmp957
	sarl	%cl, %edx	# tmp957, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2026	#,
	.loc 1 8053 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2025	#,
.L2026:
	.loc 1 8053 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp777
	movq	%rax, %rdi	# tmp777,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2025	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1966
	cmpl	$2, %eax	#, ix86_cpu.1966
	je	.L2027	#,
.L2025:
	.loc 1 8053 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1967
	testl	%eax, %eax	# which_alternative.1967
	jne	.L2024	#,
	.loc 1 8053 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1968
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1969
	movl	%eax, %ecx	# ix86_cpu.1970, tmp959
	sarl	%cl, %edx	# tmp959, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2024	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2024	#,
	movq	-8(%rbp), %rax	# insn, tmp778
	movq	%rax, %rdi	# tmp778,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2024	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1971
	cmpl	$2, %eax	#, ix86_cpu.1971
	jne	.L2024	#,
.L2027:
	.loc 1 8055 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2024:
	.loc 1 8057 0
	movq	-8(%rbp), %rax	# insn, tmp779
	movq	%rax, %rdi	# tmp779,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2028	#,
	.loc 1 8057 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1972
	testl	%eax, %eax	# which_alternative.1972
	jne	.L2029	#,
	.loc 1 8057 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1973
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1974
	movl	%eax, %ecx	# ix86_cpu.1975, tmp961
	sarl	%cl, %edx	# tmp961, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2028	#,
	.loc 1 8057 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2028	#,
.L2029:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1976
	testl	%eax, %eax	# which_alternative.1976
	jne	.L2030	#,
	.loc 1 8057 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1977
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1978
	movl	%eax, %ecx	# ix86_cpu.1979, tmp963
	sarl	%cl, %edx	# tmp963, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2030	#,
	.loc 1 8057 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2028	#,
.L2030:
	movq	-8(%rbp), %rax	# insn, tmp780
	movq	%rax, %rdi	# tmp780,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2028	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1980
	cmpl	$2, %eax	#, ix86_cpu.1980
	jne	.L2028	#,
	.loc 1 8059 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2028:
	.loc 1 8061 0
	movq	-8(%rbp), %rax	# insn, tmp781
	movq	%rax, %rdi	# tmp781,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2031	#,
	.loc 1 8061 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1981
	testl	%eax, %eax	# which_alternative.1981
	jne	.L2032	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1982
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1983
	movl	%eax, %ecx	# ix86_cpu.1984, tmp965
	sarl	%cl, %edx	# tmp965, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2033	#,
	.loc 1 8061 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2032	#,
.L2033:
	.loc 1 8061 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp782
	movq	%rax, %rdi	# tmp782,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2032	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1985
	cmpl	$2, %eax	#, ix86_cpu.1985
	je	.L2034	#,
.L2032:
	.loc 1 8061 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1986
	testl	%eax, %eax	# which_alternative.1986
	jne	.L2031	#,
	.loc 1 8061 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1987
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1988
	movl	%eax, %ecx	# ix86_cpu.1989, tmp967
	sarl	%cl, %edx	# tmp967, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2031	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2031	#,
	movq	-8(%rbp), %rax	# insn, tmp783
	movq	%rax, %rdi	# tmp783,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2031	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1990
	cmpl	$2, %eax	#, ix86_cpu.1990
	jne	.L2031	#,
.L2034:
	.loc 1 8063 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2031:
	.loc 1 8065 0
	movq	-8(%rbp), %rax	# insn, tmp784
	movq	%rax, %rdi	# tmp784,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2035	#,
	.loc 1 8065 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1991
	testl	%eax, %eax	# which_alternative.1991
	jne	.L2036	#,
	.loc 1 8065 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1992
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1993
	movl	%eax, %ecx	# ix86_cpu.1994, tmp969
	sarl	%cl, %edx	# tmp969, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2035	#,
	.loc 1 8065 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2035	#,
.L2036:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.1995
	testl	%eax, %eax	# which_alternative.1995
	jne	.L2037	#,
	.loc 1 8065 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.1996
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1997
	movl	%eax, %ecx	# ix86_cpu.1998, tmp971
	sarl	%cl, %edx	# tmp971, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2037	#,
	.loc 1 8065 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2035	#,
.L2037:
	movq	-8(%rbp), %rax	# insn, tmp785
	movq	%rax, %rdi	# tmp785,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2035	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.1999
	cmpl	$2, %eax	#, ix86_cpu.1999
	je	.L2038	#,
.L2035:
	.loc 1 8065 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp786
	movq	%rax, %rdi	# tmp786,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2039	#,
	.loc 1 8065 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp787
	movq	%rax, %rdi	# tmp787,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2039	#,
	movq	-8(%rbp), %rax	# insn, tmp788
	movq	%rax, %rdi	# tmp788,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2039	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2000
	testl	%eax, %eax	# which_alternative.2000
	jne	.L2040	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2001
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2002
	movl	%eax, %ecx	# ix86_cpu.2003, tmp973
	sarl	%cl, %edx	# tmp973, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2041	#,
	.loc 1 8065 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2040	#,
.L2041:
	.loc 1 8065 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp789
	movq	%rax, %rdi	# tmp789,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2040	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2004
	cmpl	$2, %eax	#, ix86_cpu.2004
	je	.L2038	#,
.L2040:
	.loc 1 8065 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2005
	testl	%eax, %eax	# which_alternative.2005
	jne	.L2042	#,
	.loc 1 8065 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2006
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2007
	movl	%eax, %ecx	# ix86_cpu.2008, tmp975
	sarl	%cl, %edx	# tmp975, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2042	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2042	#,
	movq	-8(%rbp), %rax	# insn, tmp790
	movq	%rax, %rdi	# tmp790,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2042	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2009
	cmpl	$2, %eax	#, ix86_cpu.2009
	je	.L2038	#,
.L2042:
	.loc 1 8065 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2010
	testl	%eax, %eax	# which_alternative.2010
	jne	.L2043	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2011
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2012
	movl	%eax, %ecx	# ix86_cpu.2013, tmp977
	sarl	%cl, %edx	# tmp977, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2039	#,
	.loc 1 8065 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2039	#,
.L2043:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2014
	testl	%eax, %eax	# which_alternative.2014
	jne	.L2044	#,
	.loc 1 8065 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2015
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2016
	movl	%eax, %ecx	# ix86_cpu.2017, tmp979
	sarl	%cl, %edx	# tmp979, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2044	#,
	.loc 1 8065 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	const1_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2039	#,
.L2044:
	movq	-8(%rbp), %rax	# insn, tmp791
	movq	%rax, %rdi	# tmp791,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2039	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2018
	cmpl	$2, %eax	#, ix86_cpu.2018
	jne	.L2039	#,
.L2038:
	.loc 1 8067 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2039:
	.loc 1 8071 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1989:
	.loc 1 8084 0
	movq	-8(%rbp), %rax	# insn, tmp792
	movq	%rax, %rdi	# tmp792,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	jne	.L2045	#,
	.loc 1 8084 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp793
	movq	%rax, %rdi	# tmp793,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57243
	je	.L2045	#,
	movq	-8(%rbp), %rax	# insn, tmp794
	movq	%rax, %rdi	# tmp794,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57243
	je	.L2045	#,
	movq	-8(%rbp), %rax	# insn, tmp795
	movq	%rax, %rdi	# tmp795,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2045	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2019
	cmpl	$2, %eax	#, ix86_cpu.2019
	jne	.L2045	#,
	.loc 1 8086 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2045:
	.loc 1 8088 0
	movq	-8(%rbp), %rax	# insn, tmp796
	movq	%rax, %rdi	# tmp796,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2046	#,
	.loc 1 8088 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp797
	movq	%rax, %rdi	# tmp797,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57243
	jne	.L2047	#,
	movq	-8(%rbp), %rax	# insn, tmp798
	movq	%rax, %rdi	# tmp798,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2047	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2020
	cmpl	$2, %eax	#, ix86_cpu.2020
	je	.L2048	#,
.L2047:
	.loc 1 8088 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp799
	movq	%rax, %rdi	# tmp799,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57243
	jne	.L2046	#,
	.loc 1 8088 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp800
	movq	%rax, %rdi	# tmp800,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2046	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2021
	cmpl	$2, %eax	#, ix86_cpu.2021
	jne	.L2046	#,
.L2048:
	.loc 1 8090 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2046:
	.loc 1 8092 0
	movq	-8(%rbp), %rax	# insn, tmp801
	movq	%rax, %rdi	# tmp801,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2049	#,
	.loc 1 8092 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp802
	movq	%rax, %rdi	# tmp802,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57243
	je	.L2049	#,
	movq	-8(%rbp), %rax	# insn, tmp803
	movq	%rax, %rdi	# tmp803,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57243
	je	.L2049	#,
	movq	-8(%rbp), %rax	# insn, tmp804
	movq	%rax, %rdi	# tmp804,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2049	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2022
	cmpl	$2, %eax	#, ix86_cpu.2022
	jne	.L2049	#,
	.loc 1 8094 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2049:
	.loc 1 8096 0
	movq	-8(%rbp), %rax	# insn, tmp805
	movq	%rax, %rdi	# tmp805,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2050	#,
	.loc 1 8096 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp806
	movq	%rax, %rdi	# tmp806,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57243
	jne	.L2051	#,
	movq	-8(%rbp), %rax	# insn, tmp807
	movq	%rax, %rdi	# tmp807,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2051	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2023
	cmpl	$2, %eax	#, ix86_cpu.2023
	je	.L2052	#,
.L2051:
	.loc 1 8096 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp808
	movq	%rax, %rdi	# tmp808,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57243
	jne	.L2050	#,
	.loc 1 8096 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp809
	movq	%rax, %rdi	# tmp809,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2050	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2024
	cmpl	$2, %eax	#, ix86_cpu.2024
	jne	.L2050	#,
.L2052:
	.loc 1 8098 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2050:
	.loc 1 8100 0
	movq	-8(%rbp), %rax	# insn, tmp810
	movq	%rax, %rdi	# tmp810,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2053	#,
	.loc 1 8100 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp811
	movq	%rax, %rdi	# tmp811,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57243
	je	.L2053	#,
	movq	-8(%rbp), %rax	# insn, tmp812
	movq	%rax, %rdi	# tmp812,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57243
	je	.L2053	#,
	movq	-8(%rbp), %rax	# insn, tmp813
	movq	%rax, %rdi	# tmp813,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2053	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2025
	cmpl	$2, %eax	#, ix86_cpu.2025
	je	.L2054	#,
.L2053:
	.loc 1 8100 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp814
	movq	%rax, %rdi	# tmp814,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2055	#,
	.loc 1 8100 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp815
	movq	%rax, %rdi	# tmp815,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2055	#,
	movq	-8(%rbp), %rax	# insn, tmp816
	movq	%rax, %rdi	# tmp816,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2055	#,
	movq	-8(%rbp), %rax	# insn, tmp817
	movq	%rax, %rdi	# tmp817,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57243
	jne	.L2056	#,
	movq	-8(%rbp), %rax	# insn, tmp818
	movq	%rax, %rdi	# tmp818,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2056	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2026
	cmpl	$2, %eax	#, ix86_cpu.2026
	je	.L2054	#,
.L2056:
	.loc 1 8100 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp819
	movq	%rax, %rdi	# tmp819,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57243
	jne	.L2057	#,
	.loc 1 8100 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp820
	movq	%rax, %rdi	# tmp820,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2057	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2027
	cmpl	$2, %eax	#, ix86_cpu.2027
	je	.L2054	#,
.L2057:
	.loc 1 8100 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp821
	movq	%rax, %rdi	# tmp821,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57243
	je	.L2055	#,
	.loc 1 8100 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp822
	movq	%rax, %rdi	# tmp822,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57243
	je	.L2055	#,
	movq	-8(%rbp), %rax	# insn, tmp823
	movq	%rax, %rdi	# tmp823,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2055	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2028
	cmpl	$2, %eax	#, ix86_cpu.2028
	jne	.L2055	#,
.L2054:
	.loc 1 8102 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2055:
	.loc 1 8106 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1988:
	.loc 1 8110 0
	movq	-8(%rbp), %rax	# insn, tmp824
	movq	%rax, %rdi	# tmp824,
	call	extract_constrain_insn_cached	#
	.loc 1 8111 0
	movq	-8(%rbp), %rax	# insn, tmp825
	movq	%rax, %rdi	# tmp825,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2058	#,
	.loc 1 8111 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2029
	testl	%eax, %eax	# which_alternative.2029
	je	.L2059	#,
	.loc 1 8111 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2030
	cmpl	$1, %eax	#, which_alternative.2030
	jne	.L2058	#,
.L2059:
	.loc 1 8111 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp826
	movq	%rax, %rdi	# tmp826,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2058	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2031
	cmpl	$2, %eax	#, ix86_cpu.2031
	je	.L2060	#,
.L2058:
	.loc 1 8111 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp827
	movq	%rax, %rdi	# tmp827,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2061	#,
	.loc 1 8111 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2032
	testl	%eax, %eax	# which_alternative.2032
	je	.L2062	#,
	.loc 1 8111 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2033
	cmpl	$1, %eax	#, which_alternative.2033
	jne	.L2061	#,
.L2062:
	.loc 1 8111 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp828
	movq	%rax, %rdi	# tmp828,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2061	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2034
	cmpl	$2, %eax	#, ix86_cpu.2034
	jne	.L2061	#,
.L2060:
	.loc 1 8113 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2061:
	.loc 1 8115 0
	movq	-8(%rbp), %rax	# insn, tmp829
	movq	%rax, %rdi	# tmp829,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2063	#,
	.loc 1 8115 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp830
	movq	%rax, %rdi	# tmp830,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2063	#,
	movq	-8(%rbp), %rax	# insn, tmp831
	movq	%rax, %rdi	# tmp831,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2063	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2035
	testl	%eax, %eax	# which_alternative.2035
	je	.L2064	#,
	.loc 1 8115 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2036
	cmpl	$1, %eax	#, which_alternative.2036
	jne	.L2063	#,
.L2064:
	.loc 1 8115 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp832
	movq	%rax, %rdi	# tmp832,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2063	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2037
	cmpl	$2, %eax	#, ix86_cpu.2037
	jne	.L2063	#,
	.loc 1 8117 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2063:
	.loc 1 8121 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1987:
	.loc 1 8134 0
	movq	-8(%rbp), %rax	# insn, tmp833
	movq	%rax, %rdi	# tmp833,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2065	#,
	.loc 1 8134 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp834
	movq	%rax, %rdi	# tmp834,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2065	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2038
	cmpl	$2, %eax	#, ix86_cpu.2038
	je	.L2066	#,
.L2065:
	.loc 1 8134 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp835
	movq	%rax, %rdi	# tmp835,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2067	#,
	.loc 1 8134 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp836
	movq	%rax, %rdi	# tmp836,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2067	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2039
	cmpl	$2, %eax	#, ix86_cpu.2039
	jne	.L2067	#,
.L2066:
	.loc 1 8136 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2067:
	.loc 1 8138 0
	movq	-8(%rbp), %rax	# insn, tmp837
	movq	%rax, %rdi	# tmp837,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2068	#,
	.loc 1 8138 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp838
	movq	%rax, %rdi	# tmp838,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2068	#,
	movq	-8(%rbp), %rax	# insn, tmp839
	movq	%rax, %rdi	# tmp839,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2068	#,
	movq	-8(%rbp), %rax	# insn, tmp840
	movq	%rax, %rdi	# tmp840,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2068	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2040
	cmpl	$2, %eax	#, ix86_cpu.2040
	jne	.L2068	#,
	.loc 1 8140 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2068:
	.loc 1 8144 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1986:
	.loc 1 8151 0
	movq	-8(%rbp), %rax	# insn, tmp841
	movq	%rax, %rdi	# tmp841,
	call	extract_insn_cached	#
	.loc 1 8152 0
	movq	-8(%rbp), %rax	# insn, tmp842
	movq	%rax, %rdi	# tmp842,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	jne	.L2069	#,
	.loc 1 8152 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2069	#,
	movq	-8(%rbp), %rax	# insn, tmp843
	movq	%rax, %rdi	# tmp843,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2069	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2041
	cmpl	$2, %eax	#, ix86_cpu.2041
	jne	.L2069	#,
	.loc 1 8154 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2069:
	.loc 1 8156 0
	movq	-8(%rbp), %rax	# insn, tmp844
	movq	%rax, %rdi	# tmp844,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2070	#,
	.loc 1 8156 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2070	#,
	movq	-8(%rbp), %rax	# insn, tmp845
	movq	%rax, %rdi	# tmp845,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2070	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2042
	cmpl	$2, %eax	#, ix86_cpu.2042
	jne	.L2070	#,
	.loc 1 8158 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2070:
	.loc 1 8160 0
	movq	-8(%rbp), %rax	# insn, tmp846
	movq	%rax, %rdi	# tmp846,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2071	#,
	.loc 1 8160 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2071	#,
	movq	-8(%rbp), %rax	# insn, tmp847
	movq	%rax, %rdi	# tmp847,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2071	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2043
	cmpl	$2, %eax	#, ix86_cpu.2043
	jne	.L2071	#,
	.loc 1 8162 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2071:
	.loc 1 8164 0
	movq	-8(%rbp), %rax	# insn, tmp848
	movq	%rax, %rdi	# tmp848,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2072	#,
	.loc 1 8164 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2072	#,
	movq	-8(%rbp), %rax	# insn, tmp849
	movq	%rax, %rdi	# tmp849,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2072	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2044
	cmpl	$2, %eax	#, ix86_cpu.2044
	jne	.L2072	#,
	.loc 1 8166 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2072:
	.loc 1 8168 0
	movq	-8(%rbp), %rax	# insn, tmp850
	movq	%rax, %rdi	# tmp850,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2073	#,
	.loc 1 8168 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2073	#,
	movq	-8(%rbp), %rax	# insn, tmp851
	movq	%rax, %rdi	# tmp851,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2073	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2045
	cmpl	$2, %eax	#, ix86_cpu.2045
	je	.L2074	#,
.L2073:
	.loc 1 8168 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp852
	movq	%rax, %rdi	# tmp852,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2075	#,
	.loc 1 8168 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp853
	movq	%rax, %rdi	# tmp853,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2075	#,
	movq	-8(%rbp), %rax	# insn, tmp854
	movq	%rax, %rdi	# tmp854,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2075	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2076	#,
	movq	-8(%rbp), %rax	# insn, tmp855
	movq	%rax, %rdi	# tmp855,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2076	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2046
	cmpl	$2, %eax	#, ix86_cpu.2046
	je	.L2074	#,
.L2076:
	.loc 1 8168 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2075	#,
	.loc 1 8168 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp856
	movq	%rax, %rdi	# tmp856,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2075	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2047
	cmpl	$2, %eax	#, ix86_cpu.2047
	jne	.L2075	#,
.L2074:
	.loc 1 8170 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2075:
	.loc 1 8174 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1985:
	.loc 1 8178 0
	movq	-8(%rbp), %rax	# insn, tmp857
	movq	%rax, %rdi	# tmp857,
	call	extract_constrain_insn_cached	#
	.loc 1 8179 0
	movq	-8(%rbp), %rax	# insn, tmp858
	movq	%rax, %rdi	# tmp858,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	jne	.L2077	#,
	.loc 1 8179 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2048
	cmpl	$2, %eax	#, which_alternative.2048
	je	.L2078	#,
	.loc 1 8179 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2077	#,
.L2078:
	.loc 1 8179 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp859
	movq	%rax, %rdi	# tmp859,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2077	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2049
	cmpl	$2, %eax	#, ix86_cpu.2049
	jne	.L2077	#,
	.loc 1 8181 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2077:
	.loc 1 8183 0
	movq	-8(%rbp), %rax	# insn, tmp860
	movq	%rax, %rdi	# tmp860,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2079	#,
	.loc 1 8183 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2050
	cmpl	$2, %eax	#, which_alternative.2050
	je	.L2079	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2079	#,
	movq	-8(%rbp), %rax	# insn, tmp861
	movq	%rax, %rdi	# tmp861,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2079	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2051
	cmpl	$2, %eax	#, ix86_cpu.2051
	jne	.L2079	#,
	.loc 1 8185 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2079:
	.loc 1 8187 0
	movq	-8(%rbp), %rax	# insn, tmp862
	movq	%rax, %rdi	# tmp862,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2080	#,
	.loc 1 8187 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2052
	cmpl	$2, %eax	#, which_alternative.2052
	je	.L2081	#,
	.loc 1 8187 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2080	#,
.L2081:
	.loc 1 8187 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp863
	movq	%rax, %rdi	# tmp863,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2080	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2053
	cmpl	$2, %eax	#, ix86_cpu.2053
	jne	.L2080	#,
	.loc 1 8189 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2080:
	.loc 1 8191 0
	movq	-8(%rbp), %rax	# insn, tmp864
	movq	%rax, %rdi	# tmp864,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2082	#,
	.loc 1 8191 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2054
	cmpl	$2, %eax	#, which_alternative.2054
	je	.L2082	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2082	#,
	movq	-8(%rbp), %rax	# insn, tmp865
	movq	%rax, %rdi	# tmp865,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2082	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2055
	cmpl	$2, %eax	#, ix86_cpu.2055
	jne	.L2082	#,
	.loc 1 8193 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2082:
	.loc 1 8195 0
	movq	-8(%rbp), %rax	# insn, tmp866
	movq	%rax, %rdi	# tmp866,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2083	#,
	.loc 1 8195 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2056
	cmpl	$2, %eax	#, which_alternative.2056
	je	.L2084	#,
	.loc 1 8195 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2083	#,
.L2084:
	.loc 1 8195 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp867
	movq	%rax, %rdi	# tmp867,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2083	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2057
	cmpl	$2, %eax	#, ix86_cpu.2057
	je	.L2085	#,
.L2083:
	.loc 1 8195 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp868
	movq	%rax, %rdi	# tmp868,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2086	#,
	.loc 1 8195 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp869
	movq	%rax, %rdi	# tmp869,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2086	#,
	movq	-8(%rbp), %rax	# insn, tmp870
	movq	%rax, %rdi	# tmp870,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2086	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2058
	cmpl	$2, %eax	#, which_alternative.2058
	je	.L2087	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2087	#,
	movq	-8(%rbp), %rax	# insn, tmp871
	movq	%rax, %rdi	# tmp871,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2087	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2059
	cmpl	$2, %eax	#, ix86_cpu.2059
	je	.L2085	#,
.L2087:
	.loc 1 8195 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2060
	cmpl	$2, %eax	#, which_alternative.2060
	je	.L2088	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57238
	je	.L2086	#,
.L2088:
	.loc 1 8195 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp872
	movq	%rax, %rdi	# tmp872,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2086	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2061
	cmpl	$2, %eax	#, ix86_cpu.2061
	jne	.L2086	#,
.L2085:
	.loc 1 8197 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2086:
	.loc 1 8201 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1984:
	.loc 1 8210 0
	movq	-8(%rbp), %rax	# insn, tmp873
	movq	%rax, %rdi	# tmp873,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2089	#,
	.loc 1 8210 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2062
	cmpl	$2, %eax	#, ix86_cpu.2062
	je	.L2090	#,
.L2089:
	.loc 1 8210 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp874
	movq	%rax, %rdi	# tmp874,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2091	#,
	.loc 1 8210 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2063
	cmpl	$2, %eax	#, ix86_cpu.2063
	jne	.L2091	#,
.L2090:
	.loc 1 8212 0 is_stmt 1
	movl	$2, %eax	#, D.57238
	jmp	.L1997	#
.L2091:
	.loc 1 8214 0
	movq	-8(%rbp), %rax	# insn, tmp875
	movq	%rax, %rdi	# tmp875,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2092	#,
	.loc 1 8214 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp876
	movq	%rax, %rdi	# tmp876,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2092	#,
	movq	-8(%rbp), %rax	# insn, tmp877
	movq	%rax, %rdi	# tmp877,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2092	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2064
	cmpl	$2, %eax	#, ix86_cpu.2064
	jne	.L2092	#,
	.loc 1 8216 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2092:
	.loc 1 8220 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1983:
	.loc 1 8224 0
	movq	-8(%rbp), %rax	# insn, tmp878
	movq	%rax, %rdi	# tmp878,
	call	extract_constrain_insn_cached	#
	.loc 1 8225 0
	movq	-8(%rbp), %rax	# insn, tmp879
	movq	%rax, %rdi	# tmp879,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2093	#,
	.loc 1 8225 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2065
	cmpl	$1, %eax	#, which_alternative.2065
	jne	.L2093	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2066
	cmpl	$2, %eax	#, ix86_cpu.2066
	je	.L2094	#,
.L2093:
	.loc 1 8225 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp880
	movq	%rax, %rdi	# tmp880,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2095	#,
	.loc 1 8225 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2067
	cmpl	$1, %eax	#, which_alternative.2067
	jne	.L2095	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2068
	cmpl	$2, %eax	#, ix86_cpu.2068
	je	.L2094	#,
.L2095:
	.loc 1 8225 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp881
	movq	%rax, %rdi	# tmp881,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2096	#,
	.loc 1 8225 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp882
	movq	%rax, %rdi	# tmp882,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2096	#,
	movq	-8(%rbp), %rax	# insn, tmp883
	movq	%rax, %rdi	# tmp883,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2096	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2069
	cmpl	$1, %eax	#, which_alternative.2069
	jne	.L2096	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2070
	cmpl	$2, %eax	#, ix86_cpu.2070
	jne	.L2096	#,
.L2094:
	.loc 1 8227 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2096:
	.loc 1 8231 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1982:
	.loc 1 8235 0
	movq	-8(%rbp), %rax	# insn, tmp884
	movq	%rax, %rdi	# tmp884,
	call	extract_constrain_insn_cached	#
	.loc 1 8236 0
	movq	-8(%rbp), %rax	# insn, tmp885
	movq	%rax, %rdi	# tmp885,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	jne	.L2097	#,
	.loc 1 8236 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp886
	movq	%rax, %rdi	# tmp886,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2097	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2071
	cmpl	$3, %eax	#, which_alternative.2071
	jne	.L2098	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2072
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2073
	movl	%eax, %ecx	# ix86_cpu.2074, tmp981
	sarl	%cl, %edx	# tmp981, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2099	#,
	.loc 1 8236 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2075
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2076
	movl	%eax, %ecx	# ix86_cpu.2077, tmp983
	sarl	%cl, %edx	# tmp983, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2099	#,
.L2098:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2078
	cmpl	$3, %eax	#, which_alternative.2078
	je	.L2097	#,
	.loc 1 8236 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2079
	cmpl	$5, %eax	#, which_alternative.2079
	je	.L2097	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2080
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2081
	movl	%eax, %ecx	# ix86_cpu.2082, tmp985
	sarl	%cl, %edx	# tmp985, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2099	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2083
	cmpl	$2, %eax	#, which_alternative.2083
	je	.L2097	#,
.L2099:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2084
	cmpl	$3, %eax	#, which_alternative.2084
	jne	.L2100	#,
	.loc 1 8236 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2085
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2086
	movl	%eax, %ecx	# ix86_cpu.2087, tmp987
	sarl	%cl, %edx	# tmp987, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2097	#,
	.loc 1 8236 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2088
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2089
	movl	%eax, %ecx	# ix86_cpu.2090, tmp989
	sarl	%cl, %edx	# tmp989, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2097	#,
.L2100:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2091
	cmpl	$3, %eax	#, which_alternative.2091
	je	.L2101	#,
	.loc 1 8236 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2092
	cmpl	$5, %eax	#, which_alternative.2092
	je	.L2101	#,
	.loc 1 8236 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2093
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2094
	movl	%eax, %ecx	# ix86_cpu.2095, tmp991
	sarl	%cl, %edx	# tmp991, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2097	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2096
	cmpl	$2, %eax	#, which_alternative.2096
	jne	.L2097	#,
.L2101:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2097
	cmpl	$2, %eax	#, ix86_cpu.2097
	je	.L2102	#,
.L2097:
	.loc 1 8236 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp887
	movq	%rax, %rdi	# tmp887,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2103	#,
	.loc 1 8236 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp888
	movq	%rax, %rdi	# tmp888,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2103	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2098
	cmpl	$3, %eax	#, which_alternative.2098
	jne	.L2104	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2099
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2100
	movl	%eax, %ecx	# ix86_cpu.2101, tmp993
	sarl	%cl, %edx	# tmp993, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2105	#,
	.loc 1 8236 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2102
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2103
	movl	%eax, %ecx	# ix86_cpu.2104, tmp995
	sarl	%cl, %edx	# tmp995, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2105	#,
.L2104:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2105
	cmpl	$3, %eax	#, which_alternative.2105
	je	.L2103	#,
	.loc 1 8236 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2106
	cmpl	$5, %eax	#, which_alternative.2106
	je	.L2103	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2107
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2108
	movl	%eax, %ecx	# ix86_cpu.2109, tmp997
	sarl	%cl, %edx	# tmp997, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2105	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2110
	cmpl	$2, %eax	#, which_alternative.2110
	je	.L2103	#,
.L2105:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2111
	cmpl	$3, %eax	#, which_alternative.2111
	jne	.L2106	#,
	.loc 1 8236 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2112
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2113
	movl	%eax, %ecx	# ix86_cpu.2114, tmp999
	sarl	%cl, %edx	# tmp999, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2103	#,
	.loc 1 8236 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2115
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2116
	movl	%eax, %ecx	# ix86_cpu.2117, tmp1001
	sarl	%cl, %edx	# tmp1001, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2103	#,
.L2106:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2118
	cmpl	$3, %eax	#, which_alternative.2118
	je	.L2107	#,
	.loc 1 8236 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2119
	cmpl	$5, %eax	#, which_alternative.2119
	je	.L2107	#,
	.loc 1 8236 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2120
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2121
	movl	%eax, %ecx	# ix86_cpu.2122, tmp1003
	sarl	%cl, %edx	# tmp1003, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2103	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2123
	cmpl	$2, %eax	#, which_alternative.2123
	jne	.L2103	#,
.L2107:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2124
	cmpl	$2, %eax	#, ix86_cpu.2124
	je	.L2102	#,
.L2103:
	.loc 1 8236 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp889
	movq	%rax, %rdi	# tmp889,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2108	#,
	.loc 1 8236 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp890
	movq	%rax, %rdi	# tmp890,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2108	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2125
	cmpl	$3, %eax	#, which_alternative.2125
	jne	.L2109	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2126
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2127
	movl	%eax, %ecx	# ix86_cpu.2128, tmp1005
	sarl	%cl, %edx	# tmp1005, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2110	#,
	.loc 1 8236 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2129
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2130
	movl	%eax, %ecx	# ix86_cpu.2131, tmp1007
	sarl	%cl, %edx	# tmp1007, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2110	#,
.L2109:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2132
	cmpl	$3, %eax	#, which_alternative.2132
	je	.L2108	#,
	.loc 1 8236 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2133
	cmpl	$5, %eax	#, which_alternative.2133
	je	.L2108	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2134
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2135
	movl	%eax, %ecx	# ix86_cpu.2136, tmp1009
	sarl	%cl, %edx	# tmp1009, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2110	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2137
	cmpl	$2, %eax	#, which_alternative.2137
	je	.L2108	#,
.L2110:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2138
	cmpl	$3, %eax	#, which_alternative.2138
	jne	.L2111	#,
	.loc 1 8236 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2139
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2140
	movl	%eax, %ecx	# ix86_cpu.2141, tmp1011
	sarl	%cl, %edx	# tmp1011, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2108	#,
	.loc 1 8236 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2142
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2143
	movl	%eax, %ecx	# ix86_cpu.2144, tmp1013
	sarl	%cl, %edx	# tmp1013, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2108	#,
.L2111:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2145
	cmpl	$3, %eax	#, which_alternative.2145
	je	.L2112	#,
	.loc 1 8236 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2146
	cmpl	$5, %eax	#, which_alternative.2146
	je	.L2112	#,
	.loc 1 8236 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2147
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2148
	movl	%eax, %ecx	# ix86_cpu.2149, tmp1015
	sarl	%cl, %edx	# tmp1015, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2108	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2150
	cmpl	$2, %eax	#, which_alternative.2150
	jne	.L2108	#,
.L2112:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2151
	cmpl	$2, %eax	#, ix86_cpu.2151
	je	.L2102	#,
.L2108:
	.loc 1 8236 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp891
	movq	%rax, %rdi	# tmp891,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2113	#,
	.loc 1 8236 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp892
	movq	%rax, %rdi	# tmp892,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2113	#,
	movq	-8(%rbp), %rax	# insn, tmp893
	movq	%rax, %rdi	# tmp893,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2113	#,
	movq	-8(%rbp), %rax	# insn, tmp894
	movq	%rax, %rdi	# tmp894,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2113	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2152
	cmpl	$3, %eax	#, which_alternative.2152
	jne	.L2114	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2153
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2154
	movl	%eax, %ecx	# ix86_cpu.2155, tmp1017
	sarl	%cl, %edx	# tmp1017, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2115	#,
	.loc 1 8236 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2156
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2157
	movl	%eax, %ecx	# ix86_cpu.2158, tmp1019
	sarl	%cl, %edx	# tmp1019, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2115	#,
.L2114:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2159
	cmpl	$3, %eax	#, which_alternative.2159
	je	.L2113	#,
	.loc 1 8236 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2160
	cmpl	$5, %eax	#, which_alternative.2160
	je	.L2113	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2161
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2162
	movl	%eax, %ecx	# ix86_cpu.2163, tmp1021
	sarl	%cl, %edx	# tmp1021, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2115	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2164
	cmpl	$2, %eax	#, which_alternative.2164
	je	.L2113	#,
.L2115:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2165
	cmpl	$3, %eax	#, which_alternative.2165
	jne	.L2116	#,
	.loc 1 8236 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2166
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2167
	movl	%eax, %ecx	# ix86_cpu.2168, tmp1023
	sarl	%cl, %edx	# tmp1023, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2113	#,
	.loc 1 8236 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2169
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2170
	movl	%eax, %ecx	# ix86_cpu.2171, tmp1025
	sarl	%cl, %edx	# tmp1025, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2113	#,
.L2116:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2172
	cmpl	$3, %eax	#, which_alternative.2172
	je	.L2117	#,
	.loc 1 8236 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2173
	cmpl	$5, %eax	#, which_alternative.2173
	je	.L2117	#,
	.loc 1 8236 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2174
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2175
	movl	%eax, %ecx	# ix86_cpu.2176, tmp1027
	sarl	%cl, %edx	# tmp1027, D.57238
	movl	%edx, %eax	# D.57238, D.57238
	andl	$1, %eax	#, D.57238
	testl	%eax, %eax	# D.57238
	je	.L2113	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2177
	cmpl	$2, %eax	#, which_alternative.2177
	jne	.L2113	#,
.L2117:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2178
	cmpl	$2, %eax	#, ix86_cpu.2178
	jne	.L2113	#,
.L2102:
	.loc 1 8238 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2113:
	.loc 1 8242 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1981:
	.loc 1 8248 0
	movq	-8(%rbp), %rax	# insn, tmp895
	movq	%rax, %rdi	# tmp895,
	call	extract_insn_cached	#
	.loc 1 8249 0
	movq	-8(%rbp), %rax	# insn, tmp896
	movq	%rax, %rdi	# tmp896,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2118	#,
	.loc 1 8249 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2179
	cmpl	$2, %eax	#, ix86_cpu.2179
	je	.L2119	#,
.L2118:
	.loc 1 8249 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	memory_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2120	#,
	.loc 1 8249 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp897
	movq	%rax, %rdi	# tmp897,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2120	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2180
	cmpl	$2, %eax	#, ix86_cpu.2180
	jne	.L2120	#,
.L2119:
	.loc 1 8251 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2120:
	.loc 1 8255 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1980:
	.loc 1 8259 0
	movq	-8(%rbp), %rax	# insn, tmp898
	movq	%rax, %rdi	# tmp898,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	jne	.L2121	#,
	.loc 1 8259 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp899
	movq	%rax, %rdi	# tmp899,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2121	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2181
	cmpl	$2, %eax	#, ix86_cpu.2181
	je	.L2122	#,
.L2121:
	.loc 1 8259 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp900
	movq	%rax, %rdi	# tmp900,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2123	#,
	.loc 1 8259 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp901
	movq	%rax, %rdi	# tmp901,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2123	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2182
	cmpl	$2, %eax	#, ix86_cpu.2182
	je	.L2122	#,
.L2123:
	.loc 1 8259 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp902
	movq	%rax, %rdi	# tmp902,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2124	#,
	.loc 1 8259 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp903
	movq	%rax, %rdi	# tmp903,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2124	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2183
	cmpl	$2, %eax	#, ix86_cpu.2183
	je	.L2122	#,
.L2124:
	.loc 1 8259 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp904
	movq	%rax, %rdi	# tmp904,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2125	#,
	.loc 1 8259 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp905
	movq	%rax, %rdi	# tmp905,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2125	#,
	movq	-8(%rbp), %rax	# insn, tmp906
	movq	%rax, %rdi	# tmp906,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2125	#,
	movq	-8(%rbp), %rax	# insn, tmp907
	movq	%rax, %rdi	# tmp907,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2125	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2184
	cmpl	$2, %eax	#, ix86_cpu.2184
	jne	.L2125	#,
.L2122:
	.loc 1 8261 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2125:
	.loc 1 8265 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1979:
	.loc 1 8270 0
	movq	-8(%rbp), %rax	# insn, tmp908
	movq	%rax, %rdi	# tmp908,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2126	#,
	.loc 1 8270 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2185
	cmpl	$2, %eax	#, ix86_cpu.2185
	jne	.L2126	#,
	.loc 1 8272 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2126:
	.loc 1 8276 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1978:
	.loc 1 8280 0
	movq	-8(%rbp), %rax	# insn, tmp909
	movq	%rax, %rdi	# tmp909,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	jne	.L2127	#,
	.loc 1 8280 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp910
	movq	%rax, %rdi	# tmp910,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2127	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2186
	cmpl	$2, %eax	#, ix86_cpu.2186
	je	.L2128	#,
.L2127:
	.loc 1 8280 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp911
	movq	%rax, %rdi	# tmp911,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	jne	.L2129	#,
	.loc 1 8280 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp912
	movq	%rax, %rdi	# tmp912,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2129	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2187
	cmpl	$2, %eax	#, ix86_cpu.2187
	je	.L2128	#,
.L2129:
	.loc 1 8280 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp913
	movq	%rax, %rdi	# tmp913,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2130	#,
	.loc 1 8280 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp914
	movq	%rax, %rdi	# tmp914,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2130	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2188
	cmpl	$2, %eax	#, ix86_cpu.2188
	je	.L2128	#,
.L2130:
	.loc 1 8280 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp915
	movq	%rax, %rdi	# tmp915,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57239
	je	.L2131	#,
	.loc 1 8280 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp916
	movq	%rax, %rdi	# tmp916,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57239
	je	.L2131	#,
	movq	-8(%rbp), %rax	# insn, tmp917
	movq	%rax, %rdi	# tmp917,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2131	#,
	movq	-8(%rbp), %rax	# insn, tmp918
	movq	%rax, %rdi	# tmp918,
	call	get_attr_pent_pair	#
	cmpl	$1, %eax	#, D.57242
	jne	.L2131	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2189
	cmpl	$2, %eax	#, ix86_cpu.2189
	jne	.L2131	#,
.L2128:
	.loc 1 8282 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2131:
	.loc 1 8286 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1977:
	.loc 1 8291 0
	movq	-8(%rbp), %rax	# insn, tmp919
	movq	%rax, %rdi	# tmp919,
	call	extract_insn_cached	#
	.loc 1 8292 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57241
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57241,
	call	memory_operand	#
	testl	%eax, %eax	# D.57238
	jne	.L2132	#,
	.loc 1 8292 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2190
	cmpl	$2, %eax	#, ix86_cpu.2190
	jne	.L2132	#,
	.loc 1 8294 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2132:
	.loc 1 8298 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1976:
	.loc 1 8304 0
	movq	-8(%rbp), %rax	# insn, tmp920
	movq	%rax, %rdi	# tmp920,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	jne	.L2133	#,
	.loc 1 8304 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp921
	movq	%rax, %rdi	# tmp921,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2133	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2191
	cmpl	$2, %eax	#, ix86_cpu.2191
	je	.L2134	#,
.L2133:
	.loc 1 8304 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp922
	movq	%rax, %rdi	# tmp922,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57239
	je	.L2135	#,
	.loc 1 8304 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp923
	movq	%rax, %rdi	# tmp923,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57240
	je	.L2135	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2192
	cmpl	$2, %eax	#, ix86_cpu.2192
	jne	.L2135	#,
.L2134:
	.loc 1 8306 0 is_stmt 1
	movl	$1, %eax	#, D.57238
	jmp	.L1997	#
.L2135:
	.loc 1 8310 0
	movl	$3, %eax	#, D.57238
	jmp	.L1997	#
.L1974:
	.loc 1 8314 0
	movq	-8(%rbp), %rax	# insn, tmp924
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57241
	movzwl	(%rax), %eax	# _732->code, D.57244
	cmpw	$40, %ax	#, D.57244
	je	.L1973	#,
	.loc 1 8315 0
	movq	-8(%rbp), %rax	# insn, tmp925
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57241
	movq	%rax, %rdi	# D.57241,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57238
	jns	.L1973	#,
	.loc 1 8316 0
	movq	-8(%rbp), %rax	# insn, tmp926
	movl	$__FUNCTION__.13759, %ecx	#,
	movl	$8316, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp926,
	call	_fatal_insn_not_found	#
.L1973:
	.loc 1 8318 0
	movl	$3, %eax	#, D.57238
.L1997:
	.loc 1 8321 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE38:
	.size	pent_u_unit_ready_cost, .-pent_u_unit_ready_cost
	.globl	pent_u_unit_blockage_range
	.type	pent_u_unit_blockage_range, @function
pent_u_unit_blockage_range:
.LFB39:
	.loc 1 8327 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 8328 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57245
	testl	%eax, %eax	# D.57245
	js	.L2137	#,
	.loc 1 8328 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.2193
	jmp	.L2138	#
.L2137:
	.loc 1 8328 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L2138:
	.loc 1 8328 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.2193
	jne	.L2139	#,
	.loc 1 8331 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57246
	movzwl	(%rax), %eax	# _6->code, D.57247
	cmpw	$40, %ax	#, D.57247
	je	.L2139	#,
	.loc 1 8332 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57246
	movq	%rax, %rdi	# D.57246,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57245
	jns	.L2139	#,
	.loc 1 8333 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.13767, %ecx	#,
	movl	$8333, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L2139:
	.loc 1 8335 0
	movl	$65539, %eax	#, D.57248
	.loc 1 8338 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE39:
	.size	pent_u_unit_blockage_range, .-pent_u_unit_blockage_range
	.globl	fpu_unit_ready_cost
	.type	fpu_unit_ready_cost, @function
fpu_unit_ready_cost:
.LFB40:
	.loc 1 8344 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 8345 0
	movq	-8(%rbp), %rax	# insn, tmp406
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57249
	testl	%eax, %eax	# D.57249
	js	.L2143	#,
	.loc 1 8345 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp407
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2194
	jmp	.L2144	#
.L2143:
	.loc 1 8345 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp408
	movq	%rax, %rdi	# tmp408,
	call	recog_memoized_1	#
.L2144:
	.loc 1 8345 0 discriminator 3
	addl	$1, %eax	#, tmp409
	cmpl	$623, %eax	#, tmp409
	ja	.L2145	#,
	movl	%eax, %eax	# tmp409, tmp410
	movq	.L2147(,%rax,8), %rax	#, tmp411
	jmp	*%rax	# tmp411
	.section	.rodata
	.align 8
	.align 4
.L2147:
	.quad	.L2146
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2145
	.quad	.L2148
	.quad	.L2148
	.quad	.L2145
	.quad	.L2145
	.quad	.L2148
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2148
	.quad	.L2149
	.quad	.L2145
	.quad	.L2148
	.quad	.L2149
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2150
	.quad	.L2151
	.quad	.L2145
	.quad	.L2145
	.quad	.L2150
	.quad	.L2150
	.quad	.L2151
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2152
	.quad	.L2152
	.quad	.L2152
	.quad	.L2152
	.quad	.L2151
	.quad	.L2151
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2153
	.quad	.L2145
	.quad	.L2154
	.quad	.L2154
	.quad	.L2154
	.quad	.L2154
	.quad	.L2155
	.quad	.L2155
	.quad	.L2156
	.quad	.L2157
	.quad	.L2145
	.quad	.L2155
	.quad	.L2157
	.quad	.L2155
	.quad	.L2157
	.quad	.L2155
	.quad	.L2157
	.quad	.L2155
	.quad	.L2157
	.quad	.L2158
	.quad	.L2158
	.quad	.L2158
	.quad	.L2145
	.quad	.L2145
	.quad	.L2158
	.quad	.L2158
	.quad	.L2158
	.quad	.L2145
	.quad	.L2145
	.quad	.L2158
	.quad	.L2158
	.quad	.L2158
	.quad	.L2145
	.quad	.L2145
	.quad	.L2155
	.quad	.L2155
	.quad	.L2145
	.quad	.L2155
	.quad	.L2155
	.quad	.L2145
	.quad	.L2155
	.quad	.L2155
	.quad	.L2145
	.quad	.L2155
	.quad	.L2155
	.quad	.L2145
	.quad	.L2159
	.quad	.L2159
	.quad	.L2159
	.quad	.L2159
	.quad	.L2159
	.quad	.L2159
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2160
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2148
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2161
	.quad	.L2162
	.quad	.L2145
	.quad	.L2161
	.quad	.L2162
	.quad	.L2145
	.quad	.L2163
	.quad	.L2164
	.quad	.L2165
	.quad	.L2166
	.quad	.L2145
	.quad	.L2165
	.quad	.L2165
	.quad	.L2167
	.quad	.L2168
	.quad	.L2145
	.quad	.L2167
	.quad	.L2167
	.quad	.L2167
	.quad	.L2167
	.quad	.L2169
	.quad	.L2170
	.quad	.L2169
	.quad	.L2170
	.quad	.L2169
	.quad	.L2170
	.quad	.L2169
	.quad	.L2170
	.quad	.L2169
	.quad	.L2170
	.quad	.L2169
	.quad	.L2170
	.quad	.L2169
	.quad	.L2170
	.quad	.L2171
	.quad	.L2145
	.quad	.L2172
	.quad	.L2171
	.quad	.L2145
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2172
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2145
	.quad	.L2173
	.quad	.L2173
	.quad	.L2173
	.quad	.L2174
	.quad	.L2174
	.text
.L2174:
	.loc 1 8349 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2195
	cmpl	$3, %eax	#, ix86_cpu.2195
	jne	.L2175	#,
	.loc 1 8351 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2175:
	.loc 1 8355 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2173:
	.loc 1 8361 0
	movq	-8(%rbp), %rax	# insn, tmp412
	movq	%rax, %rdi	# tmp412,
	call	extract_constrain_insn_cached	#
	.loc 1 8362 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2196
	cmpl	$3, %eax	#, ix86_cpu.2196
	jne	.L2177	#,
	.loc 1 8362 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2197
	testl	%eax, %eax	# which_alternative.2197
	je	.L2178	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2198
	cmpl	$1, %eax	#, which_alternative.2198
	jne	.L2177	#,
.L2178:
	.loc 1 8364 0 is_stmt 1
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2177:
	.loc 1 8368 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2172:
	.loc 1 8390 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2199
	cmpl	$2, %eax	#, ix86_cpu.2199
	je	.L2179	#,
	.loc 1 8390 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2200
	cmpl	$3, %eax	#, ix86_cpu.2200
	jne	.L2180	#,
.L2179:
	.loc 1 8392 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2201
	cmpl	$2, %eax	#, ix86_cpu.2201
	jne	.L2181	#,
	.loc 1 8394 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2181:
	.loc 1 8398 0
	movl	$56, %eax	#, D.57249
	jmp	.L2176	#
.L2180:
	.loc 1 8403 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2171:
	.loc 1 8408 0
	movq	-8(%rbp), %rax	# insn, tmp413
	movq	%rax, %rdi	# tmp413,
	call	extract_constrain_insn_cached	#
	.loc 1 8409 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2202
	cmpl	$2, %eax	#, ix86_cpu.2202
	jne	.L2182	#,
	.loc 1 8409 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2203
	testl	%eax, %eax	# which_alternative.2203
	je	.L2183	#,
.L2182:
	.loc 1 8409 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2204
	cmpl	$3, %eax	#, ix86_cpu.2204
	jne	.L2184	#,
	.loc 1 8409 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2205
	testl	%eax, %eax	# which_alternative.2205
	jne	.L2184	#,
.L2183:
	.loc 1 8411 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2206
	cmpl	$2, %eax	#, ix86_cpu.2206
	jne	.L2185	#,
	.loc 1 8411 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2207
	testl	%eax, %eax	# which_alternative.2207
	jne	.L2185	#,
	.loc 1 8413 0 is_stmt 1
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2185:
	.loc 1 8415 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2208
	cmpl	$3, %eax	#, ix86_cpu.2208
	jne	.L2186	#,
	.loc 1 8415 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2209
	testl	%eax, %eax	# which_alternative.2209
	jne	.L2186	#,
	.loc 1 8417 0 is_stmt 1
	movl	$56, %eax	#, D.57249
	jmp	.L2176	#
.L2186:
	.loc 1 8421 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2184:
	.loc 1 8426 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2170:
	.loc 1 8436 0
	movq	-8(%rbp), %rax	# insn, tmp414
	movq	%rax, %rdi	# tmp414,
	call	extract_insn_cached	#
	.loc 1 8437 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2210
	cmpl	$2, %eax	#, ix86_cpu.2210
	jne	.L2187	#,
	.loc 1 8437 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp415
	movq	%rax, %rdi	# tmp415,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2188	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2188	#,
	movq	-8(%rbp), %rax	# insn, tmp416
	movq	%rax, %rdi	# tmp416,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	je	.L2188	#,
.L2187:
	.loc 1 8437 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2211
	cmpl	$3, %eax	#, ix86_cpu.2211
	jne	.L2189	#,
	.loc 1 8437 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp417
	movq	%rax, %rdi	# tmp417,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2188	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2188	#,
	movq	-8(%rbp), %rax	# insn, tmp418
	movq	%rax, %rdi	# tmp418,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2189	#,
.L2188:
	.loc 1 8439 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2212
	cmpl	$3, %eax	#, ix86_cpu.2212
	jne	.L2190	#,
	.loc 1 8439 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp419
	movq	%rax, %rdi	# tmp419,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2190	#,
	.loc 1 8441 0 is_stmt 1
	movl	$56, %eax	#, D.57249
	jmp	.L2176	#
.L2190:
	.loc 1 8443 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2213
	cmpl	$2, %eax	#, ix86_cpu.2213
	jne	.L2191	#,
	.loc 1 8443 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp420
	movq	%rax, %rdi	# tmp420,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2191	#,
	.loc 1 8445 0 is_stmt 1
	movl	$39, %eax	#, D.57249
	jmp	.L2176	#
.L2191:
	.loc 1 8447 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2214
	cmpl	$3, %eax	#, ix86_cpu.2214
	jne	.L2192	#,
	.loc 1 8447 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2192	#,
	.loc 1 8449 0 is_stmt 1
	movl	$5, %eax	#, D.57249
	jmp	.L2176	#
.L2192:
	.loc 1 8451 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2215
	cmpl	$2, %eax	#, ix86_cpu.2215
	jne	.L2193	#,
	.loc 1 8451 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp421
	movq	%rax, %rdi	# tmp421,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2194	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2193	#,
.L2194:
	.loc 1 8453 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2193:
	.loc 1 8457 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2189:
	.loc 1 8462 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2169:
	.loc 1 8472 0
	movq	-8(%rbp), %rax	# insn, tmp422
	movq	%rax, %rdi	# tmp422,
	call	extract_insn_cached	#
	.loc 1 8473 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2216
	cmpl	$2, %eax	#, ix86_cpu.2216
	jne	.L2195	#,
	.loc 1 8473 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp423
	movq	%rax, %rdi	# tmp423,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2196	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2196	#,
	movq	-8(%rbp), %rax	# insn, tmp424
	movq	%rax, %rdi	# tmp424,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	je	.L2196	#,
.L2195:
	.loc 1 8473 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2217
	cmpl	$3, %eax	#, ix86_cpu.2217
	jne	.L2197	#,
	.loc 1 8473 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp425
	movq	%rax, %rdi	# tmp425,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2196	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2196	#,
	movq	-8(%rbp), %rax	# insn, tmp426
	movq	%rax, %rdi	# tmp426,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2197	#,
.L2196:
	.loc 1 8475 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2218
	cmpl	$3, %eax	#, ix86_cpu.2218
	jne	.L2198	#,
	.loc 1 8475 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp427
	movq	%rax, %rdi	# tmp427,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2198	#,
	.loc 1 8477 0 is_stmt 1
	movl	$56, %eax	#, D.57249
	jmp	.L2176	#
.L2198:
	.loc 1 8479 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2219
	cmpl	$2, %eax	#, ix86_cpu.2219
	jne	.L2199	#,
	.loc 1 8479 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp428
	movq	%rax, %rdi	# tmp428,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2199	#,
	.loc 1 8481 0 is_stmt 1
	movl	$39, %eax	#, D.57249
	jmp	.L2176	#
.L2199:
	.loc 1 8483 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2220
	cmpl	$3, %eax	#, ix86_cpu.2220
	jne	.L2200	#,
	.loc 1 8483 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2200	#,
	.loc 1 8485 0 is_stmt 1
	movl	$5, %eax	#, D.57249
	jmp	.L2176	#
.L2200:
	.loc 1 8487 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2221
	cmpl	$2, %eax	#, ix86_cpu.2221
	jne	.L2201	#,
	.loc 1 8487 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp429
	movq	%rax, %rdi	# tmp429,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2202	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2201	#,
.L2202:
	.loc 1 8489 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2201:
	.loc 1 8493 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2197:
	.loc 1 8498 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2168:
	.loc 1 8502 0
	movq	-8(%rbp), %rax	# insn, tmp430
	movq	%rax, %rdi	# tmp430,
	call	extract_constrain_insn_cached	#
	.loc 1 8503 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2222
	cmpl	$2, %eax	#, ix86_cpu.2222
	jne	.L2203	#,
	.loc 1 8503 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp431
	movq	%rax, %rdi	# tmp431,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2204	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2223
	cmpl	$2, %eax	#, which_alternative.2223
	je	.L2205	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2204	#,
.L2205:
	.loc 1 8503 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp432
	movq	%rax, %rdi	# tmp432,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	je	.L2204	#,
.L2203:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2224
	cmpl	$3, %eax	#, ix86_cpu.2224
	jne	.L2206	#,
	.loc 1 8503 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp433
	movq	%rax, %rdi	# tmp433,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2204	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2225
	cmpl	$2, %eax	#, which_alternative.2225
	je	.L2207	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2204	#,
.L2207:
	.loc 1 8503 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp434
	movq	%rax, %rdi	# tmp434,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2206	#,
.L2204:
	.loc 1 8505 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2226
	cmpl	$3, %eax	#, ix86_cpu.2226
	jne	.L2208	#,
	.loc 1 8505 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp435
	movq	%rax, %rdi	# tmp435,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2208	#,
	.loc 1 8507 0 is_stmt 1
	movl	$56, %eax	#, D.57249
	jmp	.L2176	#
.L2208:
	.loc 1 8509 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2227
	cmpl	$2, %eax	#, ix86_cpu.2227
	jne	.L2209	#,
	.loc 1 8509 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp436
	movq	%rax, %rdi	# tmp436,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2209	#,
	.loc 1 8511 0 is_stmt 1
	movl	$39, %eax	#, D.57249
	jmp	.L2176	#
.L2209:
	.loc 1 8513 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2228
	cmpl	$3, %eax	#, ix86_cpu.2228
	jne	.L2210	#,
	.loc 1 8513 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2229
	cmpl	$2, %eax	#, which_alternative.2229
	je	.L2210	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2210	#,
	.loc 1 8515 0 is_stmt 1
	movl	$5, %eax	#, D.57249
	jmp	.L2176	#
.L2210:
	.loc 1 8517 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2230
	cmpl	$2, %eax	#, ix86_cpu.2230
	jne	.L2211	#,
	.loc 1 8517 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp437
	movq	%rax, %rdi	# tmp437,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2212	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2231
	cmpl	$2, %eax	#, which_alternative.2231
	je	.L2211	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2211	#,
.L2212:
	.loc 1 8519 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2211:
	.loc 1 8523 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2206:
	.loc 1 8528 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2167:
	.loc 1 8536 0
	movq	-8(%rbp), %rax	# insn, tmp438
	movq	%rax, %rdi	# tmp438,
	call	extract_insn_cached	#
	.loc 1 8537 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2232
	cmpl	$2, %eax	#, ix86_cpu.2232
	jne	.L2213	#,
	.loc 1 8537 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp439
	movq	%rax, %rdi	# tmp439,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2214	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2214	#,
	movq	-8(%rbp), %rax	# insn, tmp440
	movq	%rax, %rdi	# tmp440,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	je	.L2214	#,
.L2213:
	.loc 1 8537 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2233
	cmpl	$3, %eax	#, ix86_cpu.2233
	jne	.L2215	#,
	.loc 1 8537 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp441
	movq	%rax, %rdi	# tmp441,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2214	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2214	#,
	movq	-8(%rbp), %rax	# insn, tmp442
	movq	%rax, %rdi	# tmp442,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2215	#,
.L2214:
	.loc 1 8539 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2234
	cmpl	$3, %eax	#, ix86_cpu.2234
	jne	.L2216	#,
	.loc 1 8539 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp443
	movq	%rax, %rdi	# tmp443,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2216	#,
	.loc 1 8541 0 is_stmt 1
	movl	$56, %eax	#, D.57249
	jmp	.L2176	#
.L2216:
	.loc 1 8543 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2235
	cmpl	$2, %eax	#, ix86_cpu.2235
	jne	.L2217	#,
	.loc 1 8543 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp444
	movq	%rax, %rdi	# tmp444,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2217	#,
	.loc 1 8545 0 is_stmt 1
	movl	$39, %eax	#, D.57249
	jmp	.L2176	#
.L2217:
	.loc 1 8547 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2236
	cmpl	$3, %eax	#, ix86_cpu.2236
	jne	.L2218	#,
	.loc 1 8547 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2218	#,
	.loc 1 8549 0 is_stmt 1
	movl	$5, %eax	#, D.57249
	jmp	.L2176	#
.L2218:
	.loc 1 8551 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2237
	cmpl	$2, %eax	#, ix86_cpu.2237
	jne	.L2219	#,
	.loc 1 8551 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp445
	movq	%rax, %rdi	# tmp445,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2220	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2219	#,
.L2220:
	.loc 1 8553 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2219:
	.loc 1 8557 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2215:
	.loc 1 8562 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2166:
	.loc 1 8566 0
	movq	-8(%rbp), %rax	# insn, tmp446
	movq	%rax, %rdi	# tmp446,
	call	extract_constrain_insn_cached	#
	.loc 1 8567 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2238
	cmpl	$2, %eax	#, ix86_cpu.2238
	jne	.L2221	#,
	.loc 1 8567 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp447
	movq	%rax, %rdi	# tmp447,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2222	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2239
	cmpl	$2, %eax	#, which_alternative.2239
	je	.L2223	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2222	#,
.L2223:
	.loc 1 8567 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp448
	movq	%rax, %rdi	# tmp448,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	je	.L2222	#,
.L2221:
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2240
	cmpl	$3, %eax	#, ix86_cpu.2240
	jne	.L2224	#,
	.loc 1 8567 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp449
	movq	%rax, %rdi	# tmp449,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2222	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2241
	cmpl	$2, %eax	#, which_alternative.2241
	je	.L2225	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2222	#,
.L2225:
	.loc 1 8567 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp450
	movq	%rax, %rdi	# tmp450,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2224	#,
.L2222:
	.loc 1 8569 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2242
	cmpl	$3, %eax	#, ix86_cpu.2242
	jne	.L2226	#,
	.loc 1 8569 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp451
	movq	%rax, %rdi	# tmp451,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2226	#,
	.loc 1 8571 0 is_stmt 1
	movl	$56, %eax	#, D.57249
	jmp	.L2176	#
.L2226:
	.loc 1 8573 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2243
	cmpl	$2, %eax	#, ix86_cpu.2243
	jne	.L2227	#,
	.loc 1 8573 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp452
	movq	%rax, %rdi	# tmp452,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2227	#,
	.loc 1 8575 0 is_stmt 1
	movl	$39, %eax	#, D.57249
	jmp	.L2176	#
.L2227:
	.loc 1 8577 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2244
	cmpl	$3, %eax	#, ix86_cpu.2244
	jne	.L2228	#,
	.loc 1 8577 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2245
	cmpl	$2, %eax	#, which_alternative.2245
	je	.L2228	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2228	#,
	.loc 1 8579 0 is_stmt 1
	movl	$5, %eax	#, D.57249
	jmp	.L2176	#
.L2228:
	.loc 1 8581 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2246
	cmpl	$2, %eax	#, ix86_cpu.2246
	jne	.L2229	#,
	.loc 1 8581 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp453
	movq	%rax, %rdi	# tmp453,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2230	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2247
	cmpl	$2, %eax	#, which_alternative.2247
	je	.L2229	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2229	#,
.L2230:
	.loc 1 8583 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2229:
	.loc 1 8587 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2224:
	.loc 1 8592 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2165:
	.loc 1 8598 0
	movq	-8(%rbp), %rax	# insn, tmp454
	movq	%rax, %rdi	# tmp454,
	call	extract_insn_cached	#
	.loc 1 8599 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2248
	cmpl	$2, %eax	#, ix86_cpu.2248
	jne	.L2231	#,
	.loc 1 8599 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp455
	movq	%rax, %rdi	# tmp455,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2232	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2232	#,
	movq	-8(%rbp), %rax	# insn, tmp456
	movq	%rax, %rdi	# tmp456,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	je	.L2232	#,
.L2231:
	.loc 1 8599 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2249
	cmpl	$3, %eax	#, ix86_cpu.2249
	jne	.L2233	#,
	.loc 1 8599 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp457
	movq	%rax, %rdi	# tmp457,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2232	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	jne	.L2232	#,
	movq	-8(%rbp), %rax	# insn, tmp458
	movq	%rax, %rdi	# tmp458,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2233	#,
.L2232:
	.loc 1 8601 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2250
	cmpl	$3, %eax	#, ix86_cpu.2250
	jne	.L2234	#,
	.loc 1 8601 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp459
	movq	%rax, %rdi	# tmp459,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2234	#,
	.loc 1 8603 0 is_stmt 1
	movl	$56, %eax	#, D.57249
	jmp	.L2176	#
.L2234:
	.loc 1 8605 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2251
	cmpl	$2, %eax	#, ix86_cpu.2251
	jne	.L2235	#,
	.loc 1 8605 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp460
	movq	%rax, %rdi	# tmp460,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57250
	jne	.L2235	#,
	.loc 1 8607 0 is_stmt 1
	movl	$39, %eax	#, D.57249
	jmp	.L2176	#
.L2235:
	.loc 1 8609 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2252
	cmpl	$3, %eax	#, ix86_cpu.2252
	jne	.L2236	#,
	.loc 1 8609 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2236	#,
	.loc 1 8611 0 is_stmt 1
	movl	$5, %eax	#, D.57249
	jmp	.L2176	#
.L2236:
	.loc 1 8613 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2253
	cmpl	$2, %eax	#, ix86_cpu.2253
	jne	.L2237	#,
	.loc 1 8613 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp461
	movq	%rax, %rdi	# tmp461,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57250
	je	.L2238	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2237	#,
.L2238:
	.loc 1 8615 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2237:
	.loc 1 8619 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2233:
	.loc 1 8624 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2164:
	.loc 1 8628 0
	movq	-8(%rbp), %rax	# insn, tmp462
	movq	%rax, %rdi	# tmp462,
	call	extract_insn_cached	#
	.loc 1 8629 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2254
	cmpl	$2, %eax	#, ix86_cpu.2254
	je	.L2239	#,
	.loc 1 8629 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2255
	cmpl	$3, %eax	#, ix86_cpu.2255
	jne	.L2240	#,
.L2239:
	.loc 1 8631 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2256
	cmpl	$3, %eax	#, ix86_cpu.2256
	jne	.L2241	#,
	.loc 1 8631 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2241	#,
	.loc 1 8633 0 is_stmt 1
	movl	$5, %eax	#, D.57249
	jmp	.L2176	#
.L2241:
	.loc 1 8635 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2257
	cmpl	$2, %eax	#, ix86_cpu.2257
	jne	.L2242	#,
	.loc 1 8637 0
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2242:
	.loc 1 8641 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2240:
	.loc 1 8646 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2163:
	.loc 1 8650 0
	movq	-8(%rbp), %rax	# insn, tmp463
	movq	%rax, %rdi	# tmp463,
	call	extract_insn_cached	#
	.loc 1 8651 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2258
	cmpl	$2, %eax	#, ix86_cpu.2258
	je	.L2243	#,
	.loc 1 8651 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2259
	cmpl	$3, %eax	#, ix86_cpu.2259
	jne	.L2244	#,
.L2243:
	.loc 1 8653 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2260
	cmpl	$3, %eax	#, ix86_cpu.2260
	jne	.L2245	#,
	.loc 1 8653 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2245	#,
	.loc 1 8655 0 is_stmt 1
	movl	$5, %eax	#, D.57249
	jmp	.L2176	#
.L2245:
	.loc 1 8657 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2261
	cmpl	$2, %eax	#, ix86_cpu.2261
	jne	.L2246	#,
	.loc 1 8659 0
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2246:
	.loc 1 8663 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2244:
	.loc 1 8668 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2162:
	.loc 1 8673 0
	movq	-8(%rbp), %rax	# insn, tmp464
	movq	%rax, %rdi	# tmp464,
	call	extract_constrain_insn_cached	#
	.loc 1 8674 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2262
	cmpl	$2, %eax	#, ix86_cpu.2262
	jne	.L2247	#,
	.loc 1 8674 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2263
	testl	%eax, %eax	# which_alternative.2263
	je	.L2248	#,
.L2247:
	.loc 1 8674 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2264
	cmpl	$3, %eax	#, ix86_cpu.2264
	jne	.L2249	#,
	.loc 1 8674 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2265
	testl	%eax, %eax	# which_alternative.2265
	jne	.L2249	#,
.L2248:
	.loc 1 8676 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2266
	cmpl	$3, %eax	#, ix86_cpu.2266
	jne	.L2250	#,
	.loc 1 8676 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2267
	testl	%eax, %eax	# which_alternative.2267
	jne	.L2250	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2250	#,
	.loc 1 8678 0 is_stmt 1
	movl	$5, %eax	#, D.57249
	jmp	.L2176	#
.L2250:
	.loc 1 8680 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2268
	cmpl	$2, %eax	#, ix86_cpu.2268
	jne	.L2251	#,
	.loc 1 8680 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2269
	testl	%eax, %eax	# which_alternative.2269
	jne	.L2251	#,
	.loc 1 8682 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2251:
	.loc 1 8686 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2249:
	.loc 1 8691 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2161:
	.loc 1 8696 0
	movq	-8(%rbp), %rax	# insn, tmp465
	movq	%rax, %rdi	# tmp465,
	call	extract_insn_cached	#
	.loc 1 8697 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2270
	cmpl	$2, %eax	#, ix86_cpu.2270
	je	.L2252	#,
	.loc 1 8697 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2271
	cmpl	$3, %eax	#, ix86_cpu.2271
	jne	.L2253	#,
.L2252:
	.loc 1 8699 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2272
	cmpl	$3, %eax	#, ix86_cpu.2272
	jne	.L2254	#,
	.loc 1 8699 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57251
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	mult_operator	#
	testl	%eax, %eax	# D.57249
	je	.L2254	#,
	.loc 1 8701 0 is_stmt 1
	movl	$5, %eax	#, D.57249
	jmp	.L2176	#
.L2254:
	.loc 1 8703 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2273
	cmpl	$2, %eax	#, ix86_cpu.2273
	jne	.L2255	#,
	.loc 1 8705 0
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2255:
	.loc 1 8709 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2253:
	.loc 1 8714 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2160:
	.loc 1 8734 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2274
	cmpl	$3, %eax	#, ix86_cpu.2274
	jne	.L2256	#,
	.loc 1 8736 0
	movl	$4, %eax	#, D.57249
	jmp	.L2176	#
.L2256:
	.loc 1 8740 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2159:
	.loc 1 8749 0
	movq	-8(%rbp), %rax	# insn, tmp466
	movq	%rax, %rdi	# tmp466,
	call	extract_constrain_insn_cached	#
	.loc 1 8750 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2275
	cmpl	$2, %eax	#, ix86_cpu.2275
	jne	.L2257	#,
	.loc 1 8750 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2276
	testl	%eax, %eax	# which_alternative.2276
	jne	.L2257	#,
	movq	-8(%rbp), %rax	# insn, tmp467
	movq	%rax, %rdi	# tmp467,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2258	#,
	movq	-8(%rbp), %rax	# insn, tmp468
	movq	%rax, %rdi	# tmp468,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2258	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2258	#,
	movq	-8(%rbp), %rax	# insn, tmp469
	movq	%rax, %rdi	# tmp469,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2258	#,
	movq	-8(%rbp), %rax	# insn, tmp470
	movq	%rax, %rdi	# tmp470,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57252
	je	.L2258	#,
	movq	-8(%rbp), %rax	# insn, tmp471
	movq	%rax, %rdi	# tmp471,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2258	#,
.L2257:
	.loc 1 8750 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2277
	cmpl	$3, %eax	#, ix86_cpu.2277
	jne	.L2259	#,
	.loc 1 8750 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2278
	testl	%eax, %eax	# which_alternative.2278
	jne	.L2259	#,
.L2258:
	.loc 1 8752 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2279
	cmpl	$2, %eax	#, ix86_cpu.2279
	jne	.L2260	#,
	.loc 1 8752 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2280
	testl	%eax, %eax	# which_alternative.2280
	jne	.L2260	#,
	movq	-8(%rbp), %rax	# insn, tmp472
	movq	%rax, %rdi	# tmp472,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2261	#,
	movq	-8(%rbp), %rax	# insn, tmp473
	movq	%rax, %rdi	# tmp473,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2260	#,
.L2261:
	.loc 1 8754 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2260:
	.loc 1 8756 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2281
	cmpl	$2, %eax	#, ix86_cpu.2281
	jne	.L2262	#,
	.loc 1 8756 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2282
	testl	%eax, %eax	# which_alternative.2282
	jne	.L2262	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2263	#,
	movq	-8(%rbp), %rax	# insn, tmp474
	movq	%rax, %rdi	# tmp474,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2262	#,
.L2263:
	.loc 1 8758 0 is_stmt 1
	movl	$2, %eax	#, D.57249
	jmp	.L2176	#
.L2262:
	.loc 1 8762 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2259:
	.loc 1 8767 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2158:
	.loc 1 8779 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2283
	cmpl	$2, %eax	#, ix86_cpu.2283
	je	.L2264	#,
	.loc 1 8779 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2284
	cmpl	$3, %eax	#, ix86_cpu.2284
	jne	.L2265	#,
.L2264:
	.loc 1 8781 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2285
	cmpl	$2, %eax	#, ix86_cpu.2285
	jne	.L2266	#,
	.loc 1 8783 0
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2266:
	.loc 1 8787 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2265:
	.loc 1 8792 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2157:
	.loc 1 8800 0
	movq	-8(%rbp), %rax	# insn, tmp475
	movq	%rax, %rdi	# tmp475,
	call	extract_insn_cached	#
	.loc 1 8801 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2286
	cmpl	$2, %eax	#, ix86_cpu.2286
	jne	.L2267	#,
	.loc 1 8801 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2268	#,
	movq	-8(%rbp), %rax	# insn, tmp476
	movq	%rax, %rdi	# tmp476,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2268	#,
	movq	-8(%rbp), %rax	# insn, tmp477
	movq	%rax, %rdi	# tmp477,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57252
	je	.L2268	#,
	movq	-8(%rbp), %rax	# insn, tmp478
	movq	%rax, %rdi	# tmp478,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2268	#,
.L2267:
	.loc 1 8801 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2287
	cmpl	$3, %eax	#, ix86_cpu.2287
	jne	.L2269	#,
.L2268:
	.loc 1 8803 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2288
	cmpl	$2, %eax	#, ix86_cpu.2288
	jne	.L2270	#,
	.loc 1 8803 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2271	#,
	movq	-8(%rbp), %rax	# insn, tmp479
	movq	%rax, %rdi	# tmp479,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2270	#,
.L2271:
	.loc 1 8805 0 is_stmt 1
	movl	$2, %eax	#, D.57249
	jmp	.L2176	#
.L2270:
	.loc 1 8809 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2269:
	.loc 1 8814 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2156:
	.loc 1 8818 0
	movq	-8(%rbp), %rax	# insn, tmp480
	movq	%rax, %rdi	# tmp480,
	call	extract_constrain_insn_cached	#
	.loc 1 8819 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2289
	cmpl	$2, %eax	#, ix86_cpu.2289
	jne	.L2272	#,
	.loc 1 8819 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2290
	cmpl	$1, %eax	#, which_alternative.2290
	jne	.L2272	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2273	#,
	movq	-8(%rbp), %rax	# insn, tmp481
	movq	%rax, %rdi	# tmp481,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2273	#,
	movq	-8(%rbp), %rax	# insn, tmp482
	movq	%rax, %rdi	# tmp482,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57252
	je	.L2273	#,
	movq	-8(%rbp), %rax	# insn, tmp483
	movq	%rax, %rdi	# tmp483,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2273	#,
.L2272:
	.loc 1 8819 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2291
	cmpl	$1, %eax	#, which_alternative.2291
	jne	.L2274	#,
	.loc 1 8819 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2292
	cmpl	$3, %eax	#, ix86_cpu.2292
	jne	.L2274	#,
.L2273:
	.loc 1 8821 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2293
	cmpl	$2, %eax	#, ix86_cpu.2293
	jne	.L2275	#,
	.loc 1 8821 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2294
	cmpl	$1, %eax	#, which_alternative.2294
	jne	.L2275	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2276	#,
	movq	-8(%rbp), %rax	# insn, tmp484
	movq	%rax, %rdi	# tmp484,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2275	#,
.L2276:
	.loc 1 8823 0 is_stmt 1
	movl	$2, %eax	#, D.57249
	jmp	.L2176	#
.L2275:
	.loc 1 8827 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2274:
	.loc 1 8832 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2155:
	.loc 1 8849 0
	movq	-8(%rbp), %rax	# insn, tmp485
	movq	%rax, %rdi	# tmp485,
	call	extract_constrain_insn_cached	#
	.loc 1 8850 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2295
	cmpl	$2, %eax	#, ix86_cpu.2295
	jne	.L2277	#,
	.loc 1 8850 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2296
	testl	%eax, %eax	# which_alternative.2296
	jne	.L2277	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2278	#,
	movq	-8(%rbp), %rax	# insn, tmp486
	movq	%rax, %rdi	# tmp486,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2278	#,
	movq	-8(%rbp), %rax	# insn, tmp487
	movq	%rax, %rdi	# tmp487,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57252
	je	.L2278	#,
	movq	-8(%rbp), %rax	# insn, tmp488
	movq	%rax, %rdi	# tmp488,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2278	#,
.L2277:
	.loc 1 8850 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2297
	cmpl	$3, %eax	#, ix86_cpu.2297
	jne	.L2279	#,
	.loc 1 8850 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2298
	testl	%eax, %eax	# which_alternative.2298
	jne	.L2279	#,
.L2278:
	.loc 1 8852 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2299
	cmpl	$2, %eax	#, ix86_cpu.2299
	jne	.L2280	#,
	.loc 1 8852 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2300
	testl	%eax, %eax	# which_alternative.2300
	jne	.L2280	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2281	#,
	movq	-8(%rbp), %rax	# insn, tmp489
	movq	%rax, %rdi	# tmp489,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2280	#,
.L2281:
	.loc 1 8854 0 is_stmt 1
	movl	$2, %eax	#, D.57249
	jmp	.L2176	#
.L2280:
	.loc 1 8858 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2279:
	.loc 1 8863 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2154:
	.loc 1 8870 0
	movq	-8(%rbp), %rax	# insn, tmp490
	movq	%rax, %rdi	# tmp490,
	call	extract_constrain_insn_cached	#
	.loc 1 8871 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2301
	cmpl	$2, %eax	#, ix86_cpu.2301
	jne	.L2282	#,
	.loc 1 8871 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2302
	cmpl	$1, %eax	#, which_alternative.2302
	jne	.L2283	#,
	movq	-8(%rbp), %rax	# insn, tmp491
	movq	%rax, %rdi	# tmp491,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2284	#,
	movq	-8(%rbp), %rax	# insn, tmp492
	movq	%rax, %rdi	# tmp492,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2284	#,
.L2283:
	.loc 1 8871 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2284	#,
	.loc 1 8871 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp493
	movq	%rax, %rdi	# tmp493,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2284	#,
	movq	-8(%rbp), %rax	# insn, tmp494
	movq	%rax, %rdi	# tmp494,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57252
	je	.L2284	#,
	movq	-8(%rbp), %rax	# insn, tmp495
	movq	%rax, %rdi	# tmp495,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2284	#,
.L2282:
	.loc 1 8871 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2303
	cmpl	$3, %eax	#, ix86_cpu.2303
	jne	.L2285	#,
.L2284:
	.loc 1 8873 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2304
	cmpl	$2, %eax	#, ix86_cpu.2304
	jne	.L2286	#,
	.loc 1 8873 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2305
	cmpl	$1, %eax	#, which_alternative.2305
	jne	.L2286	#,
	movq	-8(%rbp), %rax	# insn, tmp496
	movq	%rax, %rdi	# tmp496,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2287	#,
	movq	-8(%rbp), %rax	# insn, tmp497
	movq	%rax, %rdi	# tmp497,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2286	#,
.L2287:
	.loc 1 8875 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2286:
	.loc 1 8877 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2306
	cmpl	$2, %eax	#, ix86_cpu.2306
	jne	.L2288	#,
	.loc 1 8877 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2289	#,
	movq	-8(%rbp), %rax	# insn, tmp498
	movq	%rax, %rdi	# tmp498,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2288	#,
.L2289:
	.loc 1 8879 0 is_stmt 1
	movl	$2, %eax	#, D.57249
	jmp	.L2176	#
.L2288:
	.loc 1 8883 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2285:
	.loc 1 8888 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2153:
	.loc 1 8892 0
	movq	-8(%rbp), %rax	# insn, tmp499
	movq	%rax, %rdi	# tmp499,
	call	extract_constrain_insn_cached	#
	.loc 1 8893 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2307
	cmpl	$2, %eax	#, ix86_cpu.2307
	jne	.L2290	#,
	.loc 1 8893 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2308
	testl	%eax, %eax	# which_alternative.2308
	je	.L2291	#,
	.loc 1 8893 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2309
	cmpl	$1, %eax	#, which_alternative.2309
	jne	.L2290	#,
.L2291:
	.loc 1 8893 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp500
	movq	%rax, %rdi	# tmp500,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2292	#,
	.loc 1 8893 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp501
	movq	%rax, %rdi	# tmp501,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2293	#,
.L2292:
	.loc 1 8893 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2310
	cmpl	$1, %eax	#, which_alternative.2310
	je	.L2294	#,
.L2293:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2294	#,
	movq	-8(%rbp), %rax	# insn, tmp502
	movq	%rax, %rdi	# tmp502,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2294	#,
	movq	-8(%rbp), %rax	# insn, tmp503
	movq	%rax, %rdi	# tmp503,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57252
	je	.L2294	#,
	movq	-8(%rbp), %rax	# insn, tmp504
	movq	%rax, %rdi	# tmp504,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2294	#,
.L2290:
	.loc 1 8893 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2311
	cmpl	$3, %eax	#, ix86_cpu.2311
	jne	.L2295	#,
	.loc 1 8893 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2312
	testl	%eax, %eax	# which_alternative.2312
	je	.L2294	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2313
	cmpl	$1, %eax	#, which_alternative.2313
	jne	.L2295	#,
.L2294:
	.loc 1 8895 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2314
	cmpl	$2, %eax	#, ix86_cpu.2314
	jne	.L2296	#,
	.loc 1 8895 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2315
	testl	%eax, %eax	# which_alternative.2315
	je	.L2297	#,
	.loc 1 8895 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2316
	cmpl	$1, %eax	#, which_alternative.2316
	jne	.L2296	#,
.L2297:
	.loc 1 8895 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp505
	movq	%rax, %rdi	# tmp505,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2298	#,
	.loc 1 8895 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp506
	movq	%rax, %rdi	# tmp506,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2296	#,
.L2298:
	.loc 1 8895 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2317
	cmpl	$1, %eax	#, which_alternative.2317
	jne	.L2296	#,
	.loc 1 8897 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2296:
	.loc 1 8899 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2318
	cmpl	$2, %eax	#, ix86_cpu.2318
	jne	.L2299	#,
	.loc 1 8899 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2319
	testl	%eax, %eax	# which_alternative.2319
	je	.L2300	#,
	.loc 1 8899 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2320
	cmpl	$1, %eax	#, which_alternative.2320
	jne	.L2299	#,
.L2300:
	.loc 1 8899 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2301	#,
	movq	-8(%rbp), %rax	# insn, tmp507
	movq	%rax, %rdi	# tmp507,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2299	#,
.L2301:
	.loc 1 8901 0 is_stmt 1
	movl	$2, %eax	#, D.57249
	jmp	.L2176	#
.L2299:
	.loc 1 8905 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2295:
	.loc 1 8910 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2152:
	.loc 1 8917 0
	movq	-8(%rbp), %rax	# insn, tmp508
	movq	%rax, %rdi	# tmp508,
	call	extract_constrain_insn_cached	#
	.loc 1 8918 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2321
	cmpl	$2, %eax	#, ix86_cpu.2321
	jne	.L2302	#,
	.loc 1 8918 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2322
	testl	%eax, %eax	# which_alternative.2322
	je	.L2303	#,
	.loc 1 8918 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2323
	cmpl	$1, %eax	#, which_alternative.2323
	je	.L2303	#,
	.loc 1 8918 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2324
	cmpl	$2, %eax	#, which_alternative.2324
	jne	.L2302	#,
.L2303:
	movq	-8(%rbp), %rax	# insn, tmp509
	movq	%rax, %rdi	# tmp509,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2304	#,
	movq	-8(%rbp), %rax	# insn, tmp510
	movq	%rax, %rdi	# tmp510,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2304	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2304	#,
	movq	-8(%rbp), %rax	# insn, tmp511
	movq	%rax, %rdi	# tmp511,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2304	#,
	movq	-8(%rbp), %rax	# insn, tmp512
	movq	%rax, %rdi	# tmp512,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57252
	je	.L2304	#,
	movq	-8(%rbp), %rax	# insn, tmp513
	movq	%rax, %rdi	# tmp513,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2304	#,
.L2302:
	.loc 1 8918 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2325
	cmpl	$3, %eax	#, ix86_cpu.2325
	jne	.L2305	#,
	.loc 1 8918 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2326
	testl	%eax, %eax	# which_alternative.2326
	je	.L2304	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2327
	cmpl	$1, %eax	#, which_alternative.2327
	je	.L2304	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2328
	cmpl	$2, %eax	#, which_alternative.2328
	jne	.L2305	#,
.L2304:
	.loc 1 8920 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2329
	cmpl	$2, %eax	#, ix86_cpu.2329
	jne	.L2306	#,
	.loc 1 8920 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2330
	testl	%eax, %eax	# which_alternative.2330
	je	.L2307	#,
	.loc 1 8920 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2331
	cmpl	$1, %eax	#, which_alternative.2331
	je	.L2307	#,
	.loc 1 8920 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2332
	cmpl	$2, %eax	#, which_alternative.2332
	jne	.L2306	#,
.L2307:
	movq	-8(%rbp), %rax	# insn, tmp514
	movq	%rax, %rdi	# tmp514,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2308	#,
	movq	-8(%rbp), %rax	# insn, tmp515
	movq	%rax, %rdi	# tmp515,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2306	#,
.L2308:
	.loc 1 8922 0 is_stmt 1
	movl	$3, %eax	#, D.57249
	jmp	.L2176	#
.L2306:
	.loc 1 8924 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2333
	cmpl	$2, %eax	#, ix86_cpu.2333
	jne	.L2309	#,
	.loc 1 8924 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2334
	testl	%eax, %eax	# which_alternative.2334
	je	.L2310	#,
	.loc 1 8924 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2335
	cmpl	$1, %eax	#, which_alternative.2335
	je	.L2310	#,
	.loc 1 8924 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2336
	cmpl	$2, %eax	#, which_alternative.2336
	jne	.L2309	#,
.L2310:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2311	#,
	movq	-8(%rbp), %rax	# insn, tmp516
	movq	%rax, %rdi	# tmp516,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2309	#,
.L2311:
	.loc 1 8926 0 is_stmt 1
	movl	$2, %eax	#, D.57249
	jmp	.L2176	#
.L2309:
	.loc 1 8930 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2305:
	.loc 1 8935 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2151:
	.loc 1 8942 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2337
	cmpl	$2, %eax	#, ix86_cpu.2337
	jne	.L2312	#,
	.loc 1 8944 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2312:
	.loc 1 8948 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2150:
	.loc 1 8954 0
	movq	-8(%rbp), %rax	# insn, tmp517
	movq	%rax, %rdi	# tmp517,
	call	extract_constrain_insn_cached	#
	.loc 1 8955 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2338
	cmpl	$2, %eax	#, ix86_cpu.2338
	jne	.L2313	#,
	.loc 1 8955 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2339
	testl	%eax, %eax	# which_alternative.2339
	je	.L2314	#,
	.loc 1 8955 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2340
	cmpl	$1, %eax	#, which_alternative.2340
	je	.L2314	#,
	.loc 1 8955 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2341
	cmpl	$2, %eax	#, which_alternative.2341
	jne	.L2313	#,
.L2314:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2315	#,
	movq	-8(%rbp), %rax	# insn, tmp518
	movq	%rax, %rdi	# tmp518,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	je	.L2315	#,
	movq	-8(%rbp), %rax	# insn, tmp519
	movq	%rax, %rdi	# tmp519,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57252
	je	.L2315	#,
	movq	-8(%rbp), %rax	# insn, tmp520
	movq	%rax, %rdi	# tmp520,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57252
	je	.L2315	#,
.L2313:
	.loc 1 8955 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2342
	cmpl	$3, %eax	#, ix86_cpu.2342
	jne	.L2316	#,
	.loc 1 8955 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2343
	testl	%eax, %eax	# which_alternative.2343
	je	.L2315	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2344
	cmpl	$1, %eax	#, which_alternative.2344
	je	.L2315	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2345
	cmpl	$2, %eax	#, which_alternative.2345
	jne	.L2316	#,
.L2315:
	.loc 1 8957 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2346
	cmpl	$2, %eax	#, ix86_cpu.2346
	jne	.L2317	#,
	.loc 1 8957 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2347
	testl	%eax, %eax	# which_alternative.2347
	je	.L2318	#,
	.loc 1 8957 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2348
	cmpl	$1, %eax	#, which_alternative.2348
	je	.L2318	#,
	.loc 1 8957 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2349
	cmpl	$2, %eax	#, which_alternative.2349
	jne	.L2317	#,
.L2318:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57251
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57251,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57249
	jne	.L2319	#,
	movq	-8(%rbp), %rax	# insn, tmp521
	movq	%rax, %rdi	# tmp521,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57252
	jne	.L2317	#,
.L2319:
	.loc 1 8959 0 is_stmt 1
	movl	$2, %eax	#, D.57249
	jmp	.L2176	#
.L2317:
	.loc 1 8963 0
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2316:
	.loc 1 8968 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2149:
	.loc 1 8973 0
	movq	-8(%rbp), %rax	# insn, tmp522
	movq	%rax, %rdi	# tmp522,
	call	extract_constrain_insn_cached	#
	.loc 1 8974 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2350
	cmpl	$2, %eax	#, ix86_cpu.2350
	jne	.L2320	#,
	.loc 1 8974 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2351
	testl	%eax, %eax	# which_alternative.2351
	je	.L2321	#,
.L2320:
	.loc 1 8974 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2352
	cmpl	$3, %eax	#, ix86_cpu.2352
	jne	.L2322	#,
	.loc 1 8974 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2353
	testl	%eax, %eax	# which_alternative.2353
	jne	.L2322	#,
.L2321:
	.loc 1 8976 0 is_stmt 1
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2322:
	.loc 1 8980 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2148:
	.loc 1 9009 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2354
	cmpl	$2, %eax	#, ix86_cpu.2354
	je	.L2323	#,
	.loc 1 9009 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2355
	cmpl	$3, %eax	#, ix86_cpu.2355
	jne	.L2324	#,
.L2323:
	.loc 1 9011 0 is_stmt 1
	movl	$1, %eax	#, D.57249
	jmp	.L2176	#
.L2324:
	.loc 1 9015 0
	movl	$70, %eax	#, D.57249
	jmp	.L2176	#
.L2146:
	.loc 1 9019 0
	movq	-8(%rbp), %rax	# insn, tmp523
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57251
	movzwl	(%rax), %eax	# _448->code, D.57253
	cmpw	$40, %ax	#, D.57253
	je	.L2145	#,
	.loc 1 9020 0
	movq	-8(%rbp), %rax	# insn, tmp524
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57251
	movq	%rax, %rdi	# D.57251,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57249
	jns	.L2145	#,
	.loc 1 9021 0
	movq	-8(%rbp), %rax	# insn, tmp525
	movl	$__FUNCTION__.13927, %ecx	#,
	movl	$9021, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp525,
	call	_fatal_insn_not_found	#
.L2145:
	.loc 1 9023 0
	movl	$70, %eax	#, D.57249
.L2176:
	.loc 1 9026 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE40:
	.size	fpu_unit_ready_cost, .-fpu_unit_ready_cost
	.globl	fpu_unit_blockage_range
	.type	fpu_unit_blockage_range, @function
fpu_unit_blockage_range:
.LFB41:
	.loc 1 9032 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 9033 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57254
	testl	%eax, %eax	# D.57254
	js	.L2326	#,
	.loc 1 9033 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.2356
	jmp	.L2327	#
.L2326:
	.loc 1 9033 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L2327:
	.loc 1 9033 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.2356
	jne	.L2328	#,
	.loc 1 9036 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57255
	movzwl	(%rax), %eax	# _6->code, D.57256
	cmpw	$40, %ax	#, D.57256
	je	.L2328	#,
	.loc 1 9037 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57255
	movq	%rax, %rdi	# D.57255,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57254
	jns	.L2328	#,
	.loc 1 9038 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.13935, %ecx	#,
	movl	$9038, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L2328:
	.loc 1 9040 0
	movl	$65604, %eax	#, D.57257
	.loc 1 9043 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE41:
	.size	fpu_unit_blockage_range, .-fpu_unit_blockage_range
	.globl	pent_mul_unit_ready_cost
	.type	pent_mul_unit_ready_cost, @function
pent_mul_unit_ready_cost:
.LFB42:
	.loc 1 9049 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 9050 0
	movq	-8(%rbp), %rax	# insn, tmp113
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57258
	testl	%eax, %eax	# D.57258
	js	.L2332	#,
	.loc 1 9050 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp114
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2357
	jmp	.L2333	#
.L2332:
	.loc 1 9050 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp115
	movq	%rax, %rdi	# tmp115,
	call	recog_memoized_1	#
.L2333:
	.loc 1 9050 0 discriminator 3
	cmpl	$544, %eax	#, iftmp.2357
	jg	.L2335	#,
	cmpl	$541, %eax	#, iftmp.2357
	jge	.L2336	#,
	cmpl	$531, %eax	#, iftmp.2357
	je	.L2337	#,
	cmpl	$531, %eax	#, iftmp.2357
	jg	.L2338	#,
	cmpl	$525, %eax	#, iftmp.2357
	je	.L2339	#,
	cmpl	$525, %eax	#, iftmp.2357
	jg	.L2340	#,
	cmpl	$-1, %eax	#, iftmp.2357
	je	.L2341	#,
	cmpl	$-1, %eax	#, iftmp.2357
	jl	.L2334	#,
	subl	$249, %eax	#, tmp116
	cmpl	$16, %eax	#, tmp116
	ja	.L2334	#,
	.loc 1 9050 0
	jmp	.L2372	#
.L2340:
	.loc 1 9050 0 discriminator 3
	cmpl	$528, %eax	#, iftmp.2357
	je	.L2339	#,
	cmpl	$529, %eax	#, iftmp.2357
	je	.L2343	#,
	cmpl	$526, %eax	#, iftmp.2357
	je	.L2343	#,
	.loc 1 9050 0
	jmp	.L2334	#
.L2338:
	.loc 1 9050 0 discriminator 3
	cmpl	$537, %eax	#, iftmp.2357
	jg	.L2344	#,
	cmpl	$536, %eax	#, iftmp.2357
	jge	.L2345	#,
	cmpl	$533, %eax	#, iftmp.2357
	je	.L2345	#,
	cmpl	$533, %eax	#, iftmp.2357
	jl	.L2346	#,
	cmpl	$534, %eax	#, iftmp.2357
	je	.L2347	#,
	.loc 1 9050 0
	jmp	.L2334	#
.L2344:
	.loc 1 9050 0 discriminator 3
	cmpl	$538, %eax	#, iftmp.2357
	je	.L2336	#,
	cmpl	$539, %eax	#, iftmp.2357
	je	.L2348	#,
	.loc 1 9050 0
	jmp	.L2334	#
.L2335:
	.loc 1 9050 0 discriminator 3
	cmpl	$551, %eax	#, iftmp.2357
	je	.L2349	#,
	cmpl	$551, %eax	#, iftmp.2357
	jg	.L2350	#,
	cmpl	$547, %eax	#, iftmp.2357
	je	.L2349	#,
	cmpl	$547, %eax	#, iftmp.2357
	jg	.L2351	#,
	cmpl	$545, %eax	#, iftmp.2357
	je	.L2349	#,
	cmpl	$546, %eax	#, iftmp.2357
	je	.L2352	#,
	.loc 1 9050 0
	jmp	.L2334	#
.L2351:
	.loc 1 9050 0 discriminator 3
	cmpl	$549, %eax	#, iftmp.2357
	je	.L2349	#,
	cmpl	$549, %eax	#, iftmp.2357
	jmp	.L2352	#
.L2350:
	cmpl	$555, %eax	#, iftmp.2357
	je	.L2349	#,
	cmpl	$555, %eax	#, iftmp.2357
	jg	.L2353	#,
	cmpl	$553, %eax	#, iftmp.2357
	je	.L2349	#,
	cmpl	$553, %eax	#, iftmp.2357
	jmp	.L2352	#
.L2353:
	cmpl	$557, %eax	#, iftmp.2357
	je	.L2349	#,
	cmpl	$557, %eax	#, iftmp.2357
	jl	.L2352	#,
	cmpl	$558, %eax	#, iftmp.2357
	jne	.L2334	#,
.L2352:
	.loc 1 9059 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp117
	movq	%rax, %rdi	# tmp117,
	call	extract_insn_cached	#
	.loc 1 9060 0
	movq	-8(%rbp), %rax	# insn, tmp118
	movq	%rax, %rdi	# tmp118,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57259
	jne	.L2354	#,
	.loc 1 9060 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2358
	cmpl	$2, %eax	#, ix86_cpu.2358
	jne	.L2354	#,
	.loc 1 9062 0 is_stmt 1
	movl	$39, %eax	#, D.57258
	jmp	.L2355	#
.L2354:
	.loc 1 9064 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57260
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57260,
	call	mult_operator	#
	testl	%eax, %eax	# D.57258
	je	.L2356	#,
	.loc 1 9064 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2359
	cmpl	$2, %eax	#, ix86_cpu.2359
	jne	.L2356	#,
	.loc 1 9066 0 is_stmt 1
	movl	$2, %eax	#, D.57258
	jmp	.L2355	#
.L2356:
	.loc 1 9070 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2349:
	.loc 1 9080 0
	movq	-8(%rbp), %rax	# insn, tmp119
	movq	%rax, %rdi	# tmp119,
	call	extract_insn_cached	#
	.loc 1 9081 0
	movq	-8(%rbp), %rax	# insn, tmp120
	movq	%rax, %rdi	# tmp120,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57259
	jne	.L2357	#,
	.loc 1 9081 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2360
	cmpl	$2, %eax	#, ix86_cpu.2360
	jne	.L2357	#,
	.loc 1 9083 0 is_stmt 1
	movl	$39, %eax	#, D.57258
	jmp	.L2355	#
.L2357:
	.loc 1 9085 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57260
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57260,
	call	mult_operator	#
	testl	%eax, %eax	# D.57258
	je	.L2358	#,
	.loc 1 9085 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2361
	cmpl	$2, %eax	#, ix86_cpu.2361
	jne	.L2358	#,
	.loc 1 9087 0 is_stmt 1
	movl	$2, %eax	#, D.57258
	jmp	.L2355	#
.L2358:
	.loc 1 9091 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2348:
	.loc 1 9095 0
	movq	-8(%rbp), %rax	# insn, tmp121
	movq	%rax, %rdi	# tmp121,
	call	extract_constrain_insn_cached	#
	.loc 1 9096 0
	movq	-8(%rbp), %rax	# insn, tmp122
	movq	%rax, %rdi	# tmp122,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57259
	jne	.L2359	#,
	.loc 1 9096 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2362
	cmpl	$2, %eax	#, ix86_cpu.2362
	jne	.L2359	#,
	.loc 1 9098 0 is_stmt 1
	movl	$39, %eax	#, D.57258
	jmp	.L2355	#
.L2359:
	.loc 1 9100 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2363
	cmpl	$2, %eax	#, which_alternative.2363
	je	.L2360	#,
	.loc 1 9100 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57260
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57260,
	call	mult_operator	#
	testl	%eax, %eax	# D.57258
	je	.L2360	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2364
	cmpl	$2, %eax	#, ix86_cpu.2364
	jne	.L2360	#,
	.loc 1 9102 0 is_stmt 1
	movl	$2, %eax	#, D.57258
	jmp	.L2355	#
.L2360:
	.loc 1 9106 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2336:
	.loc 1 9114 0
	movq	-8(%rbp), %rax	# insn, tmp123
	movq	%rax, %rdi	# tmp123,
	call	extract_insn_cached	#
	.loc 1 9115 0
	movq	-8(%rbp), %rax	# insn, tmp124
	movq	%rax, %rdi	# tmp124,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57259
	jne	.L2361	#,
	.loc 1 9115 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2365
	cmpl	$2, %eax	#, ix86_cpu.2365
	jne	.L2361	#,
	.loc 1 9117 0 is_stmt 1
	movl	$39, %eax	#, D.57258
	jmp	.L2355	#
.L2361:
	.loc 1 9119 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57260
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57260,
	call	mult_operator	#
	testl	%eax, %eax	# D.57258
	je	.L2362	#,
	.loc 1 9119 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2366
	cmpl	$2, %eax	#, ix86_cpu.2366
	jne	.L2362	#,
	.loc 1 9121 0 is_stmt 1
	movl	$2, %eax	#, D.57258
	jmp	.L2355	#
.L2362:
	.loc 1 9125 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2347:
	.loc 1 9129 0
	movq	-8(%rbp), %rax	# insn, tmp125
	movq	%rax, %rdi	# tmp125,
	call	extract_constrain_insn_cached	#
	.loc 1 9130 0
	movq	-8(%rbp), %rax	# insn, tmp126
	movq	%rax, %rdi	# tmp126,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57259
	jne	.L2363	#,
	.loc 1 9130 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2367
	cmpl	$2, %eax	#, ix86_cpu.2367
	jne	.L2363	#,
	.loc 1 9132 0 is_stmt 1
	movl	$39, %eax	#, D.57258
	jmp	.L2355	#
.L2363:
	.loc 1 9134 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2368
	cmpl	$2, %eax	#, which_alternative.2368
	je	.L2364	#,
	.loc 1 9134 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57260
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57260,
	call	mult_operator	#
	testl	%eax, %eax	# D.57258
	je	.L2364	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2369
	cmpl	$2, %eax	#, ix86_cpu.2369
	jne	.L2364	#,
	.loc 1 9136 0 is_stmt 1
	movl	$2, %eax	#, D.57258
	jmp	.L2355	#
.L2364:
	.loc 1 9140 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2345:
	.loc 1 9146 0
	movq	-8(%rbp), %rax	# insn, tmp127
	movq	%rax, %rdi	# tmp127,
	call	extract_insn_cached	#
	.loc 1 9147 0
	movq	-8(%rbp), %rax	# insn, tmp128
	movq	%rax, %rdi	# tmp128,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57259
	jne	.L2365	#,
	.loc 1 9147 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2370
	cmpl	$2, %eax	#, ix86_cpu.2370
	jne	.L2365	#,
	.loc 1 9149 0 is_stmt 1
	movl	$39, %eax	#, D.57258
	jmp	.L2355	#
.L2365:
	.loc 1 9151 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57260
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57260,
	call	mult_operator	#
	testl	%eax, %eax	# D.57258
	je	.L2366	#,
	.loc 1 9151 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2371
	cmpl	$2, %eax	#, ix86_cpu.2371
	jne	.L2366	#,
	.loc 1 9153 0 is_stmt 1
	movl	$2, %eax	#, D.57258
	jmp	.L2355	#
.L2366:
	.loc 1 9157 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2346:
	.loc 1 9161 0
	movq	-8(%rbp), %rax	# insn, tmp129
	movq	%rax, %rdi	# tmp129,
	call	extract_insn_cached	#
	.loc 1 9162 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57260
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57260,
	call	mult_operator	#
	testl	%eax, %eax	# D.57258
	je	.L2367	#,
	.loc 1 9162 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2372
	cmpl	$2, %eax	#, ix86_cpu.2372
	jne	.L2367	#,
	.loc 1 9164 0 is_stmt 1
	movl	$2, %eax	#, D.57258
	jmp	.L2355	#
.L2367:
	.loc 1 9168 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2337:
	.loc 1 9172 0
	movq	-8(%rbp), %rax	# insn, tmp130
	movq	%rax, %rdi	# tmp130,
	call	extract_insn_cached	#
	.loc 1 9173 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57260
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57260,
	call	mult_operator	#
	testl	%eax, %eax	# D.57258
	je	.L2368	#,
	.loc 1 9173 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2373
	cmpl	$2, %eax	#, ix86_cpu.2373
	jne	.L2368	#,
	.loc 1 9175 0 is_stmt 1
	movl	$2, %eax	#, D.57258
	jmp	.L2355	#
.L2368:
	.loc 1 9179 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2343:
	.loc 1 9184 0
	movq	-8(%rbp), %rax	# insn, tmp131
	movq	%rax, %rdi	# tmp131,
	call	extract_constrain_insn_cached	#
	.loc 1 9185 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2374
	testl	%eax, %eax	# which_alternative.2374
	jne	.L2369	#,
	.loc 1 9185 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57260
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57260,
	call	mult_operator	#
	testl	%eax, %eax	# D.57258
	je	.L2369	#,
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2375
	cmpl	$2, %eax	#, ix86_cpu.2375
	jne	.L2369	#,
	.loc 1 9187 0 is_stmt 1
	movl	$2, %eax	#, D.57258
	jmp	.L2355	#
.L2369:
	.loc 1 9191 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2339:
	.loc 1 9196 0
	movq	-8(%rbp), %rax	# insn, tmp132
	movq	%rax, %rdi	# tmp132,
	call	extract_insn_cached	#
	.loc 1 9197 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57260
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57260,
	call	mult_operator	#
	testl	%eax, %eax	# D.57258
	je	.L2370	#,
	.loc 1 9197 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2376
	cmpl	$2, %eax	#, ix86_cpu.2376
	jne	.L2370	#,
	.loc 1 9199 0 is_stmt 1
	movl	$2, %eax	#, D.57258
	jmp	.L2355	#
.L2370:
	.loc 1 9203 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2372:
	.loc 1 9223 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2377
	cmpl	$2, %eax	#, ix86_cpu.2377
	jne	.L2371	#,
	.loc 1 9225 0
	movl	$11, %eax	#, D.57258
	jmp	.L2355	#
.L2371:
	.loc 1 9229 0
	movl	$70, %eax	#, D.57258
	jmp	.L2355	#
.L2341:
	.loc 1 9233 0
	movq	-8(%rbp), %rax	# insn, tmp133
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57260
	movzwl	(%rax), %eax	# _81->code, D.57261
	cmpw	$40, %ax	#, D.57261
	je	.L2334	#,
	.loc 1 9234 0
	movq	-8(%rbp), %rax	# insn, tmp134
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57260
	movq	%rax, %rdi	# D.57260,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57258
	jns	.L2334	#,
	.loc 1 9235 0
	movq	-8(%rbp), %rax	# insn, tmp135
	movl	$__FUNCTION__.13990, %ecx	#,
	movl	$9235, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp135,
	call	_fatal_insn_not_found	#
.L2334:
	.loc 1 9237 0
	movl	$70, %eax	#, D.57258
.L2355:
	.loc 1 9240 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE42:
	.size	pent_mul_unit_ready_cost, .-pent_mul_unit_ready_cost
	.globl	pent_mul_unit_blockage_range
	.type	pent_mul_unit_blockage_range, @function
pent_mul_unit_blockage_range:
.LFB43:
	.loc 1 9246 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 9247 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, D.57269
	testl	%eax, %eax	# D.57269
	js	.L2374	#,
	.loc 1 9247 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_2(D)->fld[4].rtint, iftmp.2378
	jmp	.L2375	#
.L2374:
	.loc 1 9247 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L2375:
	.loc 1 9247 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.2378
	jne	.L2376	#,
	.loc 1 9250 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57270
	movzwl	(%rax), %eax	# _6->code, D.57271
	cmpw	$40, %ax	#, D.57271
	je	.L2376	#,
	.loc 1 9251 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_2(D)->fld[3].rtx, D.57270
	movq	%rax, %rdi	# D.57270,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57269
	jns	.L2376	#,
	.loc 1 9252 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	$__FUNCTION__.13998, %ecx	#,
	movl	$9252, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	_fatal_insn_not_found	#
.L2376:
	.loc 1 9254 0
	movl	$131142, %eax	#, D.57272
	.loc 1 9257 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE43:
	.size	pent_mul_unit_blockage_range, .-pent_mul_unit_blockage_range
	.globl	pent_np_unit_ready_cost
	.type	pent_np_unit_ready_cost, @function
pent_np_unit_ready_cost:
.LFB44:
	.loc 1 9263 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 9264 0
	movq	-8(%rbp), %rax	# insn, tmp620
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57273
	testl	%eax, %eax	# D.57273
	js	.L2380	#,
	.loc 1 9264 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp621
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2379
	jmp	.L2381	#
.L2380:
	.loc 1 9264 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp622
	movq	%rax, %rdi	# tmp622,
	call	recog_memoized_1	#
.L2381:
	.loc 1 9264 0 discriminator 3
	addl	$1, %eax	#, tmp623
	cmpl	$637, %eax	#, tmp623
	ja	.L2382	#,
	movl	%eax, %eax	# tmp623, tmp624
	movq	.L2384(,%rax,8), %rax	#, tmp625
	jmp	*%rax	# tmp625
	.section	.rodata
	.align 8
	.align 4
.L2384:
	.quad	.L2383
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2382
	.quad	.L2385
	.quad	.L2385
	.quad	.L2382
	.quad	.L2382
	.quad	.L2385
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2385
	.quad	.L2386
	.quad	.L2382
	.quad	.L2385
	.quad	.L2386
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2387
	.quad	.L2387
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2388
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2387
	.quad	.L2382
	.quad	.L2382
	.quad	.L2389
	.quad	.L2382
	.quad	.L2382
	.quad	.L2387
	.quad	.L2382
	.quad	.L2382
	.quad	.L2388
	.quad	.L2388
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2388
	.quad	.L2390
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2391
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2387
	.quad	.L2387
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2392
	.quad	.L2392
	.quad	.L2393
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2394
	.quad	.L2394
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2395
	.quad	.L2395
	.quad	.L2395
	.quad	.L2395
	.quad	.L2382
	.quad	.L2382
	.quad	.L2387
	.quad	.L2382
	.quad	.L2387
	.quad	.L2396
	.quad	.L2382
	.quad	.L2387
	.quad	.L2396
	.quad	.L2382
	.quad	.L2382
	.quad	.L2397
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2398
	.quad	.L2382
	.quad	.L2399
	.quad	.L2399
	.quad	.L2399
	.quad	.L2399
	.quad	.L2386
	.quad	.L2386
	.quad	.L2400
	.quad	.L2385
	.quad	.L2382
	.quad	.L2386
	.quad	.L2385
	.quad	.L2386
	.quad	.L2385
	.quad	.L2386
	.quad	.L2385
	.quad	.L2386
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2382
	.quad	.L2382
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2382
	.quad	.L2382
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2382
	.quad	.L2382
	.quad	.L2386
	.quad	.L2386
	.quad	.L2382
	.quad	.L2386
	.quad	.L2386
	.quad	.L2382
	.quad	.L2386
	.quad	.L2386
	.quad	.L2382
	.quad	.L2386
	.quad	.L2386
	.quad	.L2382
	.quad	.L2401
	.quad	.L2401
	.quad	.L2401
	.quad	.L2401
	.quad	.L2401
	.quad	.L2401
	.quad	.L2382
	.quad	.L2402
	.quad	.L2403
	.quad	.L2402
	.quad	.L2402
	.quad	.L2403
	.quad	.L2403
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2404
	.quad	.L2405
	.quad	.L2405
	.quad	.L2405
	.quad	.L2405
	.quad	.L2404
	.quad	.L2404
	.quad	.L2406
	.quad	.L2406
	.quad	.L2406
	.quad	.L2406
	.quad	.L2406
	.quad	.L2406
	.quad	.L2407
	.quad	.L2408
	.quad	.L2408
	.quad	.L2408
	.quad	.L2408
	.quad	.L2408
	.quad	.L2409
	.quad	.L2410
	.quad	.L2410
	.quad	.L2410
	.quad	.L2408
	.quad	.L2410
	.quad	.L2410
	.quad	.L2410
	.quad	.L2403
	.quad	.L2382
	.quad	.L2402
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2402
	.quad	.L2402
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2411
	.quad	.L2412
	.quad	.L2412
	.quad	.L2382
	.quad	.L2382
	.quad	.L2412
	.quad	.L2382
	.quad	.L2382
	.quad	.L2412
	.quad	.L2382
	.quad	.L2382
	.quad	.L2412
	.quad	.L2382
	.quad	.L2412
	.quad	.L2412
	.quad	.L2413
	.quad	.L2382
	.quad	.L2382
	.quad	.L2414
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2415
	.quad	.L2403
	.quad	.L2416
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2416
	.quad	.L2403
	.quad	.L2403
	.quad	.L2387
	.quad	.L2403
	.quad	.L2387
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2387
	.quad	.L2403
	.quad	.L2387
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2403
	.quad	.L2382
	.quad	.L2417
	.quad	.L2417
	.quad	.L2417
	.quad	.L2417
	.quad	.L2417
	.quad	.L2417
	.quad	.L2417
	.quad	.L2417
	.quad	.L2417
	.quad	.L2417
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2417
	.quad	.L2387
	.quad	.L2417
	.quad	.L2417
	.quad	.L2387
	.quad	.L2387
	.quad	.L2417
	.quad	.L2387
	.quad	.L2417
	.quad	.L2387
	.quad	.L2418
	.quad	.L2418
	.quad	.L2382
	.quad	.L2382
	.quad	.L2402
	.quad	.L2418
	.quad	.L2419
	.quad	.L2418
	.quad	.L2420
	.quad	.L2418
	.quad	.L2418
	.quad	.L2418
	.quad	.L2418
	.quad	.L2418
	.quad	.L2418
	.quad	.L2421
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2382
	.quad	.L2382
	.quad	.L2402
	.quad	.L2421
	.quad	.L2421
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2382
	.quad	.L2382
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2422
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2403
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2385
	.quad	.L2386
	.quad	.L2382
	.quad	.L2385
	.quad	.L2386
	.quad	.L2382
	.quad	.L2385
	.quad	.L2385
	.quad	.L2423
	.quad	.L2424
	.quad	.L2382
	.quad	.L2423
	.quad	.L2423
	.quad	.L2425
	.quad	.L2426
	.quad	.L2382
	.quad	.L2425
	.quad	.L2425
	.quad	.L2425
	.quad	.L2425
	.quad	.L2427
	.quad	.L2428
	.quad	.L2427
	.quad	.L2428
	.quad	.L2427
	.quad	.L2428
	.quad	.L2427
	.quad	.L2428
	.quad	.L2427
	.quad	.L2428
	.quad	.L2427
	.quad	.L2428
	.quad	.L2427
	.quad	.L2428
	.quad	.L2386
	.quad	.L2382
	.quad	.L2385
	.quad	.L2386
	.quad	.L2382
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2385
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2429
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2430
	.quad	.L2430
	.quad	.L2430
	.quad	.L2385
	.quad	.L2385
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2382
	.quad	.L2431
	.quad	.L2431
	.text
.L2431:
	.loc 1 9268 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp626
	movq	%rax, %rdi	# tmp626,
	call	extract_constrain_insn_cached	#
	.loc 1 9269 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2380
	cmpl	$2, %eax	#, ix86_cpu.2380
	jne	.L2432	#,
	.loc 1 9271 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2381
	testl	%eax, %eax	# which_alternative.2381
	jne	.L2433	#,
	.loc 1 9271 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp627
	movq	%rax, %rdi	# tmp627,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2434	#,
	movq	-8(%rbp), %rax	# insn, tmp628
	movq	%rax, %rdi	# tmp628,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2435	#,
.L2434:
	.loc 1 9271 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp629
	movq	%rax, %rdi	# tmp629,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2433	#,
	.loc 1 9271 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp630
	movq	%rax, %rdi	# tmp630,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2433	#,
.L2435:
	.loc 1 9273 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2433:
	.loc 1 9275 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2382
	testl	%eax, %eax	# which_alternative.2382
	jne	.L2437	#,
	.loc 1 9275 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp631
	movq	%rax, %rdi	# tmp631,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2438	#,
	movq	-8(%rbp), %rax	# insn, tmp632
	movq	%rax, %rdi	# tmp632,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2439	#,
	movq	-8(%rbp), %rax	# insn, tmp633
	movq	%rax, %rdi	# tmp633,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2439	#,
.L2438:
	.loc 1 9275 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp634
	movq	%rax, %rdi	# tmp634,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2437	#,
	.loc 1 9275 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp635
	movq	%rax, %rdi	# tmp635,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2439	#,
	movq	-8(%rbp), %rax	# insn, tmp636
	movq	%rax, %rdi	# tmp636,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2437	#,
.L2439:
	.loc 1 9277 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2437:
	.loc 1 9281 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2432:
	.loc 1 9286 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2430:
	.loc 1 9292 0
	movq	-8(%rbp), %rax	# insn, tmp637
	movq	%rax, %rdi	# tmp637,
	call	extract_constrain_insn_cached	#
	.loc 1 9293 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2383
	cmpl	$2, %eax	#, ix86_cpu.2383
	jne	.L2440	#,
	.loc 1 9295 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2384
	testl	%eax, %eax	# which_alternative.2384
	je	.L2441	#,
	.loc 1 9295 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2385
	cmpl	$1, %eax	#, which_alternative.2385
	jne	.L2442	#,
.L2441:
	.loc 1 9297 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2442:
	.loc 1 9301 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2440:
	.loc 1 9306 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2429:
	.loc 1 9339 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2386
	cmpl	$2, %eax	#, ix86_cpu.2386
	jne	.L2443	#,
	.loc 1 9341 0
	movl	$12, %eax	#, D.57273
	jmp	.L2436	#
.L2443:
	.loc 1 9345 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2428:
	.loc 1 9355 0
	movq	-8(%rbp), %rax	# insn, tmp638
	movq	%rax, %rdi	# tmp638,
	call	extract_insn_cached	#
	.loc 1 9356 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2387
	cmpl	$2, %eax	#, ix86_cpu.2387
	jne	.L2444	#,
	.loc 1 9358 0
	movq	-8(%rbp), %rax	# insn, tmp639
	movq	%rax, %rdi	# tmp639,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57276
	je	.L2445	#,
	.loc 1 9358 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57277
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	mult_operator	#
	testl	%eax, %eax	# D.57273
	je	.L2446	#,
.L2445:
	.loc 1 9360 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2446:
	.loc 1 9364 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2444:
	.loc 1 9369 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2427:
	.loc 1 9379 0
	movq	-8(%rbp), %rax	# insn, tmp640
	movq	%rax, %rdi	# tmp640,
	call	extract_insn_cached	#
	.loc 1 9380 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2388
	cmpl	$2, %eax	#, ix86_cpu.2388
	jne	.L2447	#,
	.loc 1 9382 0
	movq	-8(%rbp), %rax	# insn, tmp641
	movq	%rax, %rdi	# tmp641,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57276
	je	.L2448	#,
	.loc 1 9382 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57277
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	mult_operator	#
	testl	%eax, %eax	# D.57273
	je	.L2449	#,
.L2448:
	.loc 1 9384 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2449:
	.loc 1 9388 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2447:
	.loc 1 9393 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2426:
	.loc 1 9397 0
	movq	-8(%rbp), %rax	# insn, tmp642
	movq	%rax, %rdi	# tmp642,
	call	extract_constrain_insn_cached	#
	.loc 1 9398 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2389
	cmpl	$2, %eax	#, ix86_cpu.2389
	jne	.L2450	#,
	.loc 1 9400 0
	movq	-8(%rbp), %rax	# insn, tmp643
	movq	%rax, %rdi	# tmp643,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57276
	je	.L2451	#,
	.loc 1 9400 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2390
	cmpl	$2, %eax	#, which_alternative.2390
	je	.L2452	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57277
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	mult_operator	#
	testl	%eax, %eax	# D.57273
	je	.L2452	#,
.L2451:
	.loc 1 9402 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2452:
	.loc 1 9406 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2450:
	.loc 1 9411 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2425:
	.loc 1 9419 0
	movq	-8(%rbp), %rax	# insn, tmp644
	movq	%rax, %rdi	# tmp644,
	call	extract_insn_cached	#
	.loc 1 9420 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2391
	cmpl	$2, %eax	#, ix86_cpu.2391
	jne	.L2453	#,
	.loc 1 9422 0
	movq	-8(%rbp), %rax	# insn, tmp645
	movq	%rax, %rdi	# tmp645,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57276
	je	.L2454	#,
	.loc 1 9422 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57277
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	mult_operator	#
	testl	%eax, %eax	# D.57273
	je	.L2455	#,
.L2454:
	.loc 1 9424 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2455:
	.loc 1 9428 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2453:
	.loc 1 9433 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2424:
	.loc 1 9437 0
	movq	-8(%rbp), %rax	# insn, tmp646
	movq	%rax, %rdi	# tmp646,
	call	extract_constrain_insn_cached	#
	.loc 1 9438 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2392
	cmpl	$2, %eax	#, ix86_cpu.2392
	jne	.L2456	#,
	.loc 1 9440 0
	movq	-8(%rbp), %rax	# insn, tmp647
	movq	%rax, %rdi	# tmp647,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57276
	je	.L2457	#,
	.loc 1 9440 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2393
	cmpl	$2, %eax	#, which_alternative.2393
	je	.L2458	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57277
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	mult_operator	#
	testl	%eax, %eax	# D.57273
	je	.L2458	#,
.L2457:
	.loc 1 9442 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2458:
	.loc 1 9446 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2456:
	.loc 1 9451 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2423:
	.loc 1 9457 0
	movq	-8(%rbp), %rax	# insn, tmp648
	movq	%rax, %rdi	# tmp648,
	call	extract_insn_cached	#
	.loc 1 9458 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2394
	cmpl	$2, %eax	#, ix86_cpu.2394
	jne	.L2459	#,
	.loc 1 9460 0
	movq	-8(%rbp), %rax	# insn, tmp649
	movq	%rax, %rdi	# tmp649,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57276
	je	.L2460	#,
	.loc 1 9460 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57277
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	mult_operator	#
	testl	%eax, %eax	# D.57273
	je	.L2461	#,
.L2460:
	.loc 1 9462 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2461:
	.loc 1 9466 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2459:
	.loc 1 9471 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2422:
	.loc 1 9534 0
	movq	-8(%rbp), %rax	# insn, tmp650
	movq	%rax, %rdi	# tmp650,
	call	extract_insn_cached	#
	.loc 1 9535 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2395
	cmpl	$2, %eax	#, ix86_cpu.2395
	jne	.L2462	#,
	.loc 1 9535 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp651
	movq	%rax, %rdi	# tmp651,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2463	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2463	#,
	movq	-8(%rbp), %rax	# insn, tmp652
	movq	%rax, %rdi	# tmp652,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2462	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2462	#,
.L2463:
	.loc 1 9537 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp653
	movq	%rax, %rdi	# tmp653,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2464	#,
	.loc 1 9537 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2465	#,
.L2464:
	.loc 1 9537 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp654
	movq	%rax, %rdi	# tmp654,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2466	#,
.L2465:
	movq	-8(%rbp), %rax	# insn, tmp655
	movq	%rax, %rdi	# tmp655,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2467	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2467	#,
	movq	-8(%rbp), %rax	# insn, tmp656
	movq	%rax, %rdi	# tmp656,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2467	#,
.L2466:
	.loc 1 9539 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2467:
	.loc 1 9541 0
	movq	-8(%rbp), %rax	# insn, tmp657
	movq	%rax, %rdi	# tmp657,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2468	#,
	.loc 1 9541 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2469	#,
.L2468:
	.loc 1 9541 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp658
	movq	%rax, %rdi	# tmp658,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2470	#,
	movq	-8(%rbp), %rax	# insn, tmp659
	movq	%rax, %rdi	# tmp659,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2470	#,
.L2469:
	movq	-8(%rbp), %rax	# insn, tmp660
	movq	%rax, %rdi	# tmp660,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2471	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2471	#,
	movq	-8(%rbp), %rax	# insn, tmp661
	movq	%rax, %rdi	# tmp661,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2470	#,
	movq	-8(%rbp), %rax	# insn, tmp662
	movq	%rax, %rdi	# tmp662,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2471	#,
.L2470:
	.loc 1 9543 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2471:
	.loc 1 9547 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2462:
	.loc 1 9552 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2421:
	.loc 1 9558 0
	movq	-8(%rbp), %rax	# insn, tmp663
	movq	%rax, %rdi	# tmp663,
	call	extract_constrain_insn_cached	#
	.loc 1 9559 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2396
	cmpl	$2, %eax	#, ix86_cpu.2396
	jne	.L2472	#,
	.loc 1 9559 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp664
	movq	%rax, %rdi	# tmp664,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2473	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2397
	cmpl	$1, %eax	#, which_alternative.2397
	jne	.L2473	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2473	#,
	movq	-8(%rbp), %rax	# insn, tmp665
	movq	%rax, %rdi	# tmp665,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2472	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2398
	cmpl	$1, %eax	#, which_alternative.2398
	jne	.L2472	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2472	#,
.L2473:
	.loc 1 9561 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2399
	cmpl	$1, %eax	#, which_alternative.2399
	jne	.L2474	#,
	.loc 1 9561 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp666
	movq	%rax, %rdi	# tmp666,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2475	#,
	.loc 1 9561 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2474	#,
.L2475:
	.loc 1 9561 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp667
	movq	%rax, %rdi	# tmp667,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2476	#,
.L2474:
	.loc 1 9561 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp668
	movq	%rax, %rdi	# tmp668,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2477	#,
	.loc 1 9561 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2400
	cmpl	$1, %eax	#, which_alternative.2400
	jne	.L2477	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2477	#,
	movq	-8(%rbp), %rax	# insn, tmp669
	movq	%rax, %rdi	# tmp669,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2477	#,
.L2476:
	.loc 1 9563 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2477:
	.loc 1 9565 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2401
	cmpl	$1, %eax	#, which_alternative.2401
	jne	.L2478	#,
	.loc 1 9565 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp670
	movq	%rax, %rdi	# tmp670,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2479	#,
	.loc 1 9565 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2478	#,
.L2479:
	.loc 1 9565 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp671
	movq	%rax, %rdi	# tmp671,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2480	#,
	movq	-8(%rbp), %rax	# insn, tmp672
	movq	%rax, %rdi	# tmp672,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2480	#,
.L2478:
	.loc 1 9565 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp673
	movq	%rax, %rdi	# tmp673,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2481	#,
	.loc 1 9565 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2402
	cmpl	$1, %eax	#, which_alternative.2402
	jne	.L2481	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2481	#,
	movq	-8(%rbp), %rax	# insn, tmp674
	movq	%rax, %rdi	# tmp674,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2480	#,
	movq	-8(%rbp), %rax	# insn, tmp675
	movq	%rax, %rdi	# tmp675,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2481	#,
.L2480:
	.loc 1 9567 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2481:
	.loc 1 9571 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2472:
	.loc 1 9576 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2420:
	.loc 1 9580 0
	movq	-8(%rbp), %rax	# insn, tmp676
	movq	%rax, %rdi	# tmp676,
	call	extract_constrain_insn_cached	#
	.loc 1 9581 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2403
	cmpl	$2, %eax	#, ix86_cpu.2403
	jne	.L2482	#,
	.loc 1 9583 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2404
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2405
	movl	%eax, %ecx	# ix86_cpu.2406, tmp876
	sarl	%cl, %edx	# tmp876, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2483	#,
	.loc 1 9583 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const1_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2484	#,
.L2483:
	.loc 1 9583 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2407
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2408
	movl	%eax, %ecx	# ix86_cpu.2409, tmp878
	sarl	%cl, %edx	# tmp878, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2484	#,
	.loc 1 9583 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const1_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2485	#,
.L2484:
	movq	-8(%rbp), %rax	# insn, tmp677
	movq	%rax, %rdi	# tmp677,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2486	#,
	movq	-8(%rbp), %rax	# insn, tmp678
	movq	%rax, %rdi	# tmp678,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2487	#,
.L2486:
	.loc 1 9583 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp679
	movq	%rax, %rdi	# tmp679,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2485	#,
	.loc 1 9583 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp680
	movq	%rax, %rdi	# tmp680,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2485	#,
.L2487:
	.loc 1 9585 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2485:
	.loc 1 9587 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2410
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2411
	movl	%eax, %ecx	# ix86_cpu.2412, tmp880
	sarl	%cl, %edx	# tmp880, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2488	#,
	.loc 1 9587 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const1_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2489	#,
.L2488:
	.loc 1 9587 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2413
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2414
	movl	%eax, %ecx	# ix86_cpu.2415, tmp882
	sarl	%cl, %edx	# tmp882, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2489	#,
	.loc 1 9587 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const1_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2490	#,
.L2489:
	movq	-8(%rbp), %rax	# insn, tmp681
	movq	%rax, %rdi	# tmp681,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2491	#,
	movq	-8(%rbp), %rax	# insn, tmp682
	movq	%rax, %rdi	# tmp682,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2492	#,
	movq	-8(%rbp), %rax	# insn, tmp683
	movq	%rax, %rdi	# tmp683,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2492	#,
.L2491:
	.loc 1 9587 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp684
	movq	%rax, %rdi	# tmp684,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2490	#,
	.loc 1 9587 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp685
	movq	%rax, %rdi	# tmp685,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2492	#,
	movq	-8(%rbp), %rax	# insn, tmp686
	movq	%rax, %rdi	# tmp686,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2490	#,
.L2492:
	.loc 1 9589 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2490:
	.loc 1 9593 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2482:
	.loc 1 9598 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2419:
	.loc 1 9602 0
	movq	-8(%rbp), %rax	# insn, tmp687
	movq	%rax, %rdi	# tmp687,
	call	extract_constrain_insn_cached	#
	.loc 1 9603 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2416
	cmpl	$2, %eax	#, ix86_cpu.2416
	jne	.L2493	#,
	.loc 1 9605 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2417
	testl	%eax, %eax	# which_alternative.2417
	jne	.L2494	#,
	.loc 1 9605 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2418
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2419
	movl	%eax, %ecx	# ix86_cpu.2420, tmp884
	sarl	%cl, %edx	# tmp884, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2495	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const1_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2496	#,
.L2495:
	.loc 1 9605 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2421
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2422
	movl	%eax, %ecx	# ix86_cpu.2423, tmp886
	sarl	%cl, %edx	# tmp886, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2496	#,
	.loc 1 9605 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const1_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2494	#,
.L2496:
	movq	-8(%rbp), %rax	# insn, tmp688
	movq	%rax, %rdi	# tmp688,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2497	#,
	movq	-8(%rbp), %rax	# insn, tmp689
	movq	%rax, %rdi	# tmp689,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2498	#,
.L2497:
	.loc 1 9605 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp690
	movq	%rax, %rdi	# tmp690,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2494	#,
	.loc 1 9605 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp691
	movq	%rax, %rdi	# tmp691,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2494	#,
.L2498:
	.loc 1 9607 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2494:
	.loc 1 9609 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2424
	testl	%eax, %eax	# which_alternative.2424
	jne	.L2499	#,
	.loc 1 9609 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2425
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2426
	movl	%eax, %ecx	# ix86_cpu.2427, tmp888
	sarl	%cl, %edx	# tmp888, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2500	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const1_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2501	#,
.L2500:
	.loc 1 9609 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2428
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2429
	movl	%eax, %ecx	# ix86_cpu.2430, tmp890
	sarl	%cl, %edx	# tmp890, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2501	#,
	.loc 1 9609 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	const1_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2499	#,
.L2501:
	movq	-8(%rbp), %rax	# insn, tmp692
	movq	%rax, %rdi	# tmp692,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2502	#,
	movq	-8(%rbp), %rax	# insn, tmp693
	movq	%rax, %rdi	# tmp693,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2503	#,
	movq	-8(%rbp), %rax	# insn, tmp694
	movq	%rax, %rdi	# tmp694,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2503	#,
.L2502:
	.loc 1 9609 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp695
	movq	%rax, %rdi	# tmp695,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2499	#,
	.loc 1 9609 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp696
	movq	%rax, %rdi	# tmp696,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2503	#,
	movq	-8(%rbp), %rax	# insn, tmp697
	movq	%rax, %rdi	# tmp697,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2499	#,
.L2503:
	.loc 1 9611 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2499:
	.loc 1 9615 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2493:
	.loc 1 9620 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2418:
	.loc 1 9633 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2431
	cmpl	$2, %eax	#, ix86_cpu.2431
	jne	.L2504	#,
	.loc 1 9635 0
	movq	-8(%rbp), %rax	# insn, tmp698
	movq	%rax, %rdi	# tmp698,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57276
	je	.L2505	#,
	.loc 1 9635 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp699
	movq	%rax, %rdi	# tmp699,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57276
	jne	.L2506	#,
.L2505:
	.loc 1 9635 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp700
	movq	%rax, %rdi	# tmp700,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2507	#,
	movq	-8(%rbp), %rax	# insn, tmp701
	movq	%rax, %rdi	# tmp701,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2508	#,
.L2507:
	.loc 1 9635 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp702
	movq	%rax, %rdi	# tmp702,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2506	#,
	.loc 1 9635 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp703
	movq	%rax, %rdi	# tmp703,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2506	#,
.L2508:
	.loc 1 9637 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2506:
	.loc 1 9639 0
	movq	-8(%rbp), %rax	# insn, tmp704
	movq	%rax, %rdi	# tmp704,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57276
	je	.L2509	#,
	.loc 1 9639 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp705
	movq	%rax, %rdi	# tmp705,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57276
	jne	.L2510	#,
.L2509:
	.loc 1 9639 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp706
	movq	%rax, %rdi	# tmp706,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2511	#,
	movq	-8(%rbp), %rax	# insn, tmp707
	movq	%rax, %rdi	# tmp707,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2512	#,
	movq	-8(%rbp), %rax	# insn, tmp708
	movq	%rax, %rdi	# tmp708,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2512	#,
.L2511:
	.loc 1 9639 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp709
	movq	%rax, %rdi	# tmp709,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2510	#,
	.loc 1 9639 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp710
	movq	%rax, %rdi	# tmp710,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2512	#,
	movq	-8(%rbp), %rax	# insn, tmp711
	movq	%rax, %rdi	# tmp711,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2510	#,
.L2512:
	.loc 1 9641 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2510:
	.loc 1 9645 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2504:
	.loc 1 9650 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2417:
	.loc 1 9668 0
	movq	-8(%rbp), %rax	# insn, tmp712
	movq	%rax, %rdi	# tmp712,
	call	extract_insn_cached	#
	.loc 1 9669 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2432
	cmpl	$2, %eax	#, ix86_cpu.2432
	jne	.L2513	#,
	.loc 1 9671 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	memory_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2514	#,
	.loc 1 9673 0
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2514:
	.loc 1 9677 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2513:
	.loc 1 9682 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2416:
	.loc 1 9687 0
	movq	-8(%rbp), %rax	# insn, tmp713
	movq	%rax, %rdi	# tmp713,
	call	extract_constrain_insn_cached	#
	.loc 1 9688 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2433
	cmpl	$2, %eax	#, ix86_cpu.2433
	jne	.L2515	#,
	.loc 1 9688 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp714
	movq	%rax, %rdi	# tmp714,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2516	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2434
	testl	%eax, %eax	# which_alternative.2434
	je	.L2517	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2435
	cmpl	$1, %eax	#, which_alternative.2435
	jne	.L2516	#,
.L2517:
	.loc 1 9688 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp715
	movq	%rax, %rdi	# tmp715,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2515	#,
	.loc 1 9688 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2436
	testl	%eax, %eax	# which_alternative.2436
	je	.L2516	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2437
	cmpl	$1, %eax	#, which_alternative.2437
	jne	.L2515	#,
.L2516:
	.loc 1 9690 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2438
	testl	%eax, %eax	# which_alternative.2438
	je	.L2518	#,
	.loc 1 9690 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2439
	cmpl	$1, %eax	#, which_alternative.2439
	jne	.L2519	#,
.L2518:
	.loc 1 9690 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp716
	movq	%rax, %rdi	# tmp716,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2520	#,
	.loc 1 9690 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2440
	testl	%eax, %eax	# which_alternative.2440
	je	.L2521	#,
	.loc 1 9690 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2441
	cmpl	$1, %eax	#, which_alternative.2441
	je	.L2521	#,
.L2520:
	movq	-8(%rbp), %rax	# insn, tmp717
	movq	%rax, %rdi	# tmp717,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2522	#,
.L2521:
	.loc 1 9690 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp718
	movq	%rax, %rdi	# tmp718,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2519	#,
	.loc 1 9690 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp719
	movq	%rax, %rdi	# tmp719,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2519	#,
.L2522:
	.loc 1 9692 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2519:
	.loc 1 9694 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2442
	testl	%eax, %eax	# which_alternative.2442
	je	.L2523	#,
	.loc 1 9694 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2443
	cmpl	$1, %eax	#, which_alternative.2443
	jne	.L2524	#,
.L2523:
	.loc 1 9694 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp720
	movq	%rax, %rdi	# tmp720,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2525	#,
	.loc 1 9694 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2444
	testl	%eax, %eax	# which_alternative.2444
	je	.L2526	#,
	.loc 1 9694 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2445
	cmpl	$1, %eax	#, which_alternative.2445
	je	.L2526	#,
.L2525:
	movq	-8(%rbp), %rax	# insn, tmp721
	movq	%rax, %rdi	# tmp721,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2527	#,
	movq	-8(%rbp), %rax	# insn, tmp722
	movq	%rax, %rdi	# tmp722,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2527	#,
.L2526:
	.loc 1 9694 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp723
	movq	%rax, %rdi	# tmp723,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2524	#,
	.loc 1 9694 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp724
	movq	%rax, %rdi	# tmp724,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2527	#,
	movq	-8(%rbp), %rax	# insn, tmp725
	movq	%rax, %rdi	# tmp725,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2524	#,
.L2527:
	.loc 1 9696 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2524:
	.loc 1 9700 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2515:
	.loc 1 9705 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2415:
	.loc 1 9709 0
	movq	-8(%rbp), %rax	# insn, tmp726
	movq	%rax, %rdi	# tmp726,
	call	extract_constrain_insn_cached	#
	.loc 1 9710 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2446
	cmpl	$2, %eax	#, ix86_cpu.2446
	jne	.L2528	#,
	.loc 1 9710 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp727
	movq	%rax, %rdi	# tmp727,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2529	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2447
	testl	%eax, %eax	# which_alternative.2447
	je	.L2530	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2448
	cmpl	$1, %eax	#, which_alternative.2448
	je	.L2530	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2449
	cmpl	$2, %eax	#, which_alternative.2449
	jne	.L2529	#,
.L2530:
	.loc 1 9710 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp728
	movq	%rax, %rdi	# tmp728,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2528	#,
	.loc 1 9710 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2450
	testl	%eax, %eax	# which_alternative.2450
	je	.L2529	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2451
	cmpl	$1, %eax	#, which_alternative.2451
	je	.L2529	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2452
	cmpl	$2, %eax	#, which_alternative.2452
	jne	.L2528	#,
.L2529:
	.loc 1 9712 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2453
	testl	%eax, %eax	# which_alternative.2453
	je	.L2531	#,
	.loc 1 9712 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2454
	cmpl	$1, %eax	#, which_alternative.2454
	je	.L2531	#,
	.loc 1 9712 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2455
	cmpl	$2, %eax	#, which_alternative.2455
	jne	.L2532	#,
.L2531:
	movq	-8(%rbp), %rax	# insn, tmp729
	movq	%rax, %rdi	# tmp729,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2533	#,
	.loc 1 9712 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2456
	testl	%eax, %eax	# which_alternative.2456
	je	.L2534	#,
	.loc 1 9712 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2457
	cmpl	$1, %eax	#, which_alternative.2457
	je	.L2534	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2458
	cmpl	$2, %eax	#, which_alternative.2458
	je	.L2534	#,
.L2533:
	movq	-8(%rbp), %rax	# insn, tmp730
	movq	%rax, %rdi	# tmp730,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2535	#,
.L2534:
	.loc 1 9712 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp731
	movq	%rax, %rdi	# tmp731,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2532	#,
	.loc 1 9712 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp732
	movq	%rax, %rdi	# tmp732,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2532	#,
.L2535:
	.loc 1 9714 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2532:
	.loc 1 9716 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2459
	testl	%eax, %eax	# which_alternative.2459
	je	.L2536	#,
	.loc 1 9716 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2460
	cmpl	$1, %eax	#, which_alternative.2460
	je	.L2536	#,
	.loc 1 9716 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2461
	cmpl	$2, %eax	#, which_alternative.2461
	jne	.L2537	#,
.L2536:
	movq	-8(%rbp), %rax	# insn, tmp733
	movq	%rax, %rdi	# tmp733,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2538	#,
	.loc 1 9716 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2462
	testl	%eax, %eax	# which_alternative.2462
	je	.L2539	#,
	.loc 1 9716 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2463
	cmpl	$1, %eax	#, which_alternative.2463
	je	.L2539	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2464
	cmpl	$2, %eax	#, which_alternative.2464
	je	.L2539	#,
.L2538:
	movq	-8(%rbp), %rax	# insn, tmp734
	movq	%rax, %rdi	# tmp734,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2540	#,
	movq	-8(%rbp), %rax	# insn, tmp735
	movq	%rax, %rdi	# tmp735,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2540	#,
.L2539:
	.loc 1 9716 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp736
	movq	%rax, %rdi	# tmp736,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2537	#,
	.loc 1 9716 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp737
	movq	%rax, %rdi	# tmp737,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2540	#,
	movq	-8(%rbp), %rax	# insn, tmp738
	movq	%rax, %rdi	# tmp738,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2537	#,
.L2540:
	.loc 1 9718 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2537:
	.loc 1 9722 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2528:
	.loc 1 9727 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2414:
	.loc 1 9731 0
	movq	-8(%rbp), %rax	# insn, tmp739
	movq	%rax, %rdi	# tmp739,
	call	extract_constrain_insn_cached	#
	.loc 1 9732 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2465
	cmpl	$2, %eax	#, ix86_cpu.2465
	jne	.L2541	#,
	.loc 1 9732 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2466
	testl	%eax, %eax	# which_alternative.2466
	je	.L2542	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2467
	cmpl	$2, %eax	#, which_alternative.2467
	jne	.L2543	#,
.L2542:
	.loc 1 9732 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2468
	testl	%eax, %eax	# which_alternative.2468
	je	.L2543	#,
	.loc 1 9732 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2469
	cmpl	$2, %eax	#, which_alternative.2469
	jne	.L2541	#,
.L2543:
	.loc 1 9734 0 is_stmt 1
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2541:
	.loc 1 9738 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2413:
	.loc 1 9742 0
	movq	-8(%rbp), %rax	# insn, tmp740
	movq	%rax, %rdi	# tmp740,
	call	extract_constrain_insn_cached	#
	.loc 1 9743 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2470
	cmpl	$2, %eax	#, ix86_cpu.2470
	jne	.L2544	#,
	.loc 1 9743 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2471
	cmpl	$1, %eax	#, which_alternative.2471
	je	.L2545	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2472
	cmpl	$3, %eax	#, which_alternative.2472
	je	.L2545	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2473
	cmpl	$1, %eax	#, which_alternative.2473
	je	.L2544	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2474
	cmpl	$3, %eax	#, which_alternative.2474
	je	.L2544	#,
.L2545:
	.loc 1 9745 0 is_stmt 1
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2544:
	.loc 1 9749 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2412:
	.loc 1 9759 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2475
	cmpl	$2, %eax	#, ix86_cpu.2475
	jne	.L2546	#,
	.loc 1 9761 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2546:
	.loc 1 9765 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2411:
	.loc 1 9785 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2476
	cmpl	$2, %eax	#, ix86_cpu.2476
	jne	.L2547	#,
	.loc 1 9787 0
	movl	$11, %eax	#, D.57273
	jmp	.L2436	#
.L2547:
	.loc 1 9791 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2410:
	.loc 1 9800 0
	movq	-8(%rbp), %rax	# insn, tmp741
	movq	%rax, %rdi	# tmp741,
	call	extract_insn_cached	#
	.loc 1 9801 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2477
	cmpl	$2, %eax	#, ix86_cpu.2477
	jne	.L2548	#,
	.loc 1 9803 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2549	#,
	.loc 1 9803 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp742
	movq	%rax, %rdi	# tmp742,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2550	#,
	movq	-8(%rbp), %rax	# insn, tmp743
	movq	%rax, %rdi	# tmp743,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2551	#,
.L2550:
	.loc 1 9803 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp744
	movq	%rax, %rdi	# tmp744,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2549	#,
	.loc 1 9803 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp745
	movq	%rax, %rdi	# tmp745,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2549	#,
.L2551:
	.loc 1 9805 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2549:
	.loc 1 9807 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2552	#,
	.loc 1 9807 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp746
	movq	%rax, %rdi	# tmp746,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2553	#,
	movq	-8(%rbp), %rax	# insn, tmp747
	movq	%rax, %rdi	# tmp747,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2554	#,
	movq	-8(%rbp), %rax	# insn, tmp748
	movq	%rax, %rdi	# tmp748,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2554	#,
.L2553:
	.loc 1 9807 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp749
	movq	%rax, %rdi	# tmp749,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2552	#,
	.loc 1 9807 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp750
	movq	%rax, %rdi	# tmp750,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2554	#,
	movq	-8(%rbp), %rax	# insn, tmp751
	movq	%rax, %rdi	# tmp751,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2552	#,
.L2554:
	.loc 1 9809 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2552:
	.loc 1 9813 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2548:
	.loc 1 9818 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2409:
	.loc 1 9822 0
	movq	-8(%rbp), %rax	# insn, tmp752
	movq	%rax, %rdi	# tmp752,
	call	extract_constrain_insn_cached	#
	.loc 1 9823 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2478
	cmpl	$2, %eax	#, ix86_cpu.2478
	jne	.L2555	#,
	.loc 1 9825 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2479
	cmpl	$3, %eax	#, which_alternative.2479
	je	.L2556	#,
	.loc 1 9825 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2556	#,
	movq	-8(%rbp), %rax	# insn, tmp753
	movq	%rax, %rdi	# tmp753,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2557	#,
	movq	-8(%rbp), %rax	# insn, tmp754
	movq	%rax, %rdi	# tmp754,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2558	#,
.L2557:
	.loc 1 9825 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp755
	movq	%rax, %rdi	# tmp755,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2556	#,
	.loc 1 9825 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp756
	movq	%rax, %rdi	# tmp756,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2556	#,
.L2558:
	.loc 1 9827 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2556:
	.loc 1 9829 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2480
	cmpl	$3, %eax	#, which_alternative.2480
	je	.L2559	#,
	.loc 1 9829 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2559	#,
	movq	-8(%rbp), %rax	# insn, tmp757
	movq	%rax, %rdi	# tmp757,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2560	#,
	movq	-8(%rbp), %rax	# insn, tmp758
	movq	%rax, %rdi	# tmp758,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2561	#,
	movq	-8(%rbp), %rax	# insn, tmp759
	movq	%rax, %rdi	# tmp759,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2561	#,
.L2560:
	.loc 1 9829 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp760
	movq	%rax, %rdi	# tmp760,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2559	#,
	.loc 1 9829 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp761
	movq	%rax, %rdi	# tmp761,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2561	#,
	movq	-8(%rbp), %rax	# insn, tmp762
	movq	%rax, %rdi	# tmp762,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2559	#,
.L2561:
	.loc 1 9831 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2559:
	.loc 1 9835 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2555:
	.loc 1 9840 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2408:
	.loc 1 9849 0
	movq	-8(%rbp), %rax	# insn, tmp763
	movq	%rax, %rdi	# tmp763,
	call	extract_insn_cached	#
	.loc 1 9850 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2481
	cmpl	$2, %eax	#, ix86_cpu.2481
	jne	.L2562	#,
	.loc 1 9852 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2563	#,
	.loc 1 9852 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp764
	movq	%rax, %rdi	# tmp764,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2564	#,
	movq	-8(%rbp), %rax	# insn, tmp765
	movq	%rax, %rdi	# tmp765,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2565	#,
.L2564:
	.loc 1 9852 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp766
	movq	%rax, %rdi	# tmp766,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2563	#,
	.loc 1 9852 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp767
	movq	%rax, %rdi	# tmp767,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2563	#,
.L2565:
	.loc 1 9854 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2563:
	.loc 1 9856 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2566	#,
	.loc 1 9856 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp768
	movq	%rax, %rdi	# tmp768,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2567	#,
	movq	-8(%rbp), %rax	# insn, tmp769
	movq	%rax, %rdi	# tmp769,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2568	#,
	movq	-8(%rbp), %rax	# insn, tmp770
	movq	%rax, %rdi	# tmp770,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2568	#,
.L2567:
	.loc 1 9856 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp771
	movq	%rax, %rdi	# tmp771,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2566	#,
	.loc 1 9856 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp772
	movq	%rax, %rdi	# tmp772,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2568	#,
	movq	-8(%rbp), %rax	# insn, tmp773
	movq	%rax, %rdi	# tmp773,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2566	#,
.L2568:
	.loc 1 9858 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2566:
	.loc 1 9862 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2562:
	.loc 1 9867 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2407:
	.loc 1 9871 0
	movq	-8(%rbp), %rax	# insn, tmp774
	movq	%rax, %rdi	# tmp774,
	call	extract_constrain_insn_cached	#
	.loc 1 9872 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2482
	cmpl	$2, %eax	#, ix86_cpu.2482
	jne	.L2569	#,
	.loc 1 9874 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2483
	cmpl	$2, %eax	#, which_alternative.2483
	je	.L2570	#,
	.loc 1 9874 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2570	#,
	movq	-8(%rbp), %rax	# insn, tmp775
	movq	%rax, %rdi	# tmp775,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2571	#,
	movq	-8(%rbp), %rax	# insn, tmp776
	movq	%rax, %rdi	# tmp776,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2572	#,
.L2571:
	.loc 1 9874 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp777
	movq	%rax, %rdi	# tmp777,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2570	#,
	.loc 1 9874 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp778
	movq	%rax, %rdi	# tmp778,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2570	#,
.L2572:
	.loc 1 9876 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2570:
	.loc 1 9878 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2484
	cmpl	$2, %eax	#, which_alternative.2484
	je	.L2573	#,
	.loc 1 9878 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2573	#,
	movq	-8(%rbp), %rax	# insn, tmp779
	movq	%rax, %rdi	# tmp779,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2574	#,
	movq	-8(%rbp), %rax	# insn, tmp780
	movq	%rax, %rdi	# tmp780,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2575	#,
	movq	-8(%rbp), %rax	# insn, tmp781
	movq	%rax, %rdi	# tmp781,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2575	#,
.L2574:
	.loc 1 9878 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp782
	movq	%rax, %rdi	# tmp782,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2573	#,
	.loc 1 9878 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp783
	movq	%rax, %rdi	# tmp783,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2575	#,
	movq	-8(%rbp), %rax	# insn, tmp784
	movq	%rax, %rdi	# tmp784,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2573	#,
.L2575:
	.loc 1 9880 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2573:
	.loc 1 9884 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2569:
	.loc 1 9889 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2406:
	.loc 1 9898 0
	movq	-8(%rbp), %rax	# insn, tmp785
	movq	%rax, %rdi	# tmp785,
	call	extract_insn_cached	#
	.loc 1 9899 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2485
	cmpl	$2, %eax	#, ix86_cpu.2485
	jne	.L2576	#,
	.loc 1 9901 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2577	#,
	.loc 1 9901 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp786
	movq	%rax, %rdi	# tmp786,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2578	#,
	movq	-8(%rbp), %rax	# insn, tmp787
	movq	%rax, %rdi	# tmp787,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2579	#,
.L2578:
	.loc 1 9901 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp788
	movq	%rax, %rdi	# tmp788,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2577	#,
	.loc 1 9901 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp789
	movq	%rax, %rdi	# tmp789,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2577	#,
.L2579:
	.loc 1 9903 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2577:
	.loc 1 9905 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2580	#,
	.loc 1 9905 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp790
	movq	%rax, %rdi	# tmp790,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2581	#,
	movq	-8(%rbp), %rax	# insn, tmp791
	movq	%rax, %rdi	# tmp791,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2582	#,
	movq	-8(%rbp), %rax	# insn, tmp792
	movq	%rax, %rdi	# tmp792,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2582	#,
.L2581:
	.loc 1 9905 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp793
	movq	%rax, %rdi	# tmp793,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2580	#,
	.loc 1 9905 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp794
	movq	%rax, %rdi	# tmp794,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2582	#,
	movq	-8(%rbp), %rax	# insn, tmp795
	movq	%rax, %rdi	# tmp795,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2580	#,
.L2582:
	.loc 1 9907 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2580:
	.loc 1 9911 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2576:
	.loc 1 9916 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2405:
	.loc 1 9923 0
	movq	-8(%rbp), %rax	# insn, tmp796
	movq	%rax, %rdi	# tmp796,
	call	extract_insn_cached	#
	.loc 1 9924 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2486
	cmpl	$2, %eax	#, ix86_cpu.2486
	jne	.L2583	#,
	.loc 1 9926 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2584	#,
	.loc 1 9926 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp797
	movq	%rax, %rdi	# tmp797,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2585	#,
	movq	-8(%rbp), %rax	# insn, tmp798
	movq	%rax, %rdi	# tmp798,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2586	#,
.L2585:
	.loc 1 9926 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp799
	movq	%rax, %rdi	# tmp799,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2584	#,
	.loc 1 9926 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp800
	movq	%rax, %rdi	# tmp800,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2584	#,
.L2586:
	.loc 1 9928 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2584:
	.loc 1 9930 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57277
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2587	#,
	.loc 1 9930 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp801
	movq	%rax, %rdi	# tmp801,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2588	#,
	movq	-8(%rbp), %rax	# insn, tmp802
	movq	%rax, %rdi	# tmp802,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2589	#,
	movq	-8(%rbp), %rax	# insn, tmp803
	movq	%rax, %rdi	# tmp803,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2589	#,
.L2588:
	.loc 1 9930 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp804
	movq	%rax, %rdi	# tmp804,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2587	#,
	.loc 1 9930 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp805
	movq	%rax, %rdi	# tmp805,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2589	#,
	movq	-8(%rbp), %rax	# insn, tmp806
	movq	%rax, %rdi	# tmp806,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2587	#,
.L2589:
	.loc 1 9932 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2587:
	.loc 1 9936 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2583:
	.loc 1 9941 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2404:
	.loc 1 9947 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2487
	cmpl	$2, %eax	#, ix86_cpu.2487
	jne	.L2590	#,
	.loc 1 9949 0
	movq	-8(%rbp), %rax	# insn, tmp807
	movq	%rax, %rdi	# tmp807,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57276
	jne	.L2591	#,
	.loc 1 9949 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp808
	movq	%rax, %rdi	# tmp808,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2592	#,
	movq	-8(%rbp), %rax	# insn, tmp809
	movq	%rax, %rdi	# tmp809,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2593	#,
.L2592:
	.loc 1 9949 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp810
	movq	%rax, %rdi	# tmp810,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2591	#,
	.loc 1 9949 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp811
	movq	%rax, %rdi	# tmp811,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2591	#,
.L2593:
	.loc 1 9951 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2591:
	.loc 1 9953 0
	movq	-8(%rbp), %rax	# insn, tmp812
	movq	%rax, %rdi	# tmp812,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57276
	jne	.L2594	#,
	.loc 1 9953 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp813
	movq	%rax, %rdi	# tmp813,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	jne	.L2595	#,
	movq	-8(%rbp), %rax	# insn, tmp814
	movq	%rax, %rdi	# tmp814,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2596	#,
	movq	-8(%rbp), %rax	# insn, tmp815
	movq	%rax, %rdi	# tmp815,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2596	#,
.L2595:
	.loc 1 9953 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp816
	movq	%rax, %rdi	# tmp816,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57278
	je	.L2594	#,
	.loc 1 9953 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp817
	movq	%rax, %rdi	# tmp817,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2596	#,
	movq	-8(%rbp), %rax	# insn, tmp818
	movq	%rax, %rdi	# tmp818,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2594	#,
.L2596:
	.loc 1 9955 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2594:
	.loc 1 9959 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2590:
	.loc 1 9964 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2403:
	.loc 1 10034 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2488
	cmpl	$2, %eax	#, ix86_cpu.2488
	jne	.L2597	#,
	.loc 1 10036 0
	movq	-8(%rbp), %rax	# insn, tmp819
	movq	%rax, %rdi	# tmp819,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2598	#,
	.loc 1 10036 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp820
	movq	%rax, %rdi	# tmp820,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	je	.L2599	#,
.L2598:
	.loc 1 10036 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp821
	movq	%rax, %rdi	# tmp821,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2600	#,
	.loc 1 10036 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp822
	movq	%rax, %rdi	# tmp822,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2600	#,
.L2599:
	.loc 1 10038 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2600:
	.loc 1 10040 0
	movq	-8(%rbp), %rax	# insn, tmp823
	movq	%rax, %rdi	# tmp823,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	jne	.L2601	#,
	.loc 1 10040 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp824
	movq	%rax, %rdi	# tmp824,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2602	#,
	movq	-8(%rbp), %rax	# insn, tmp825
	movq	%rax, %rdi	# tmp825,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	je	.L2602	#,
.L2601:
	.loc 1 10040 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp826
	movq	%rax, %rdi	# tmp826,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2603	#,
	.loc 1 10040 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp827
	movq	%rax, %rdi	# tmp827,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2602	#,
	movq	-8(%rbp), %rax	# insn, tmp828
	movq	%rax, %rdi	# tmp828,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2603	#,
.L2602:
	.loc 1 10042 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2603:
	.loc 1 10046 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2597:
	.loc 1 10051 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2402:
	.loc 1 10062 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2489
	cmpl	$2, %eax	#, ix86_cpu.2489
	jne	.L2604	#,
	.loc 1 10064 0
	movq	-8(%rbp), %rax	# insn, tmp829
	movq	%rax, %rdi	# tmp829,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2605	#,
	.loc 1 10066 0
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2605:
	.loc 1 10068 0
	movq	-8(%rbp), %rax	# insn, tmp830
	movq	%rax, %rdi	# tmp830,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2606	#,
	.loc 1 10068 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp831
	movq	%rax, %rdi	# tmp831,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2607	#,
.L2606:
	.loc 1 10070 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2607:
	.loc 1 10074 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2604:
	.loc 1 10079 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2401:
	.loc 1 10088 0
	movq	-8(%rbp), %rax	# insn, tmp832
	movq	%rax, %rdi	# tmp832,
	call	extract_constrain_insn_cached	#
	.loc 1 10089 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2490
	cmpl	$2, %eax	#, ix86_cpu.2490
	jne	.L2608	#,
	.loc 1 10091 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2491
	testl	%eax, %eax	# which_alternative.2491
	jne	.L2609	#,
	.loc 1 10091 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp833
	movq	%rax, %rdi	# tmp833,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2610	#,
	movq	-8(%rbp), %rax	# insn, tmp834
	movq	%rax, %rdi	# tmp834,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2609	#,
.L2610:
	.loc 1 10093 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2609:
	.loc 1 10095 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2492
	testl	%eax, %eax	# which_alternative.2492
	jne	.L2611	#,
	.loc 1 10097 0
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2611:
	.loc 1 10101 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2608:
	.loc 1 10106 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2400:
	.loc 1 10110 0
	movq	-8(%rbp), %rax	# insn, tmp835
	movq	%rax, %rdi	# tmp835,
	call	extract_constrain_insn_cached	#
	.loc 1 10111 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2493
	cmpl	$2, %eax	#, ix86_cpu.2493
	jne	.L2612	#,
	.loc 1 10113 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2494
	cmpl	$1, %eax	#, which_alternative.2494
	jne	.L2613	#,
	.loc 1 10115 0
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2613:
	.loc 1 10119 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2612:
	.loc 1 10124 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2399:
	.loc 1 10131 0
	movq	-8(%rbp), %rax	# insn, tmp836
	movq	%rax, %rdi	# tmp836,
	call	extract_constrain_insn_cached	#
	.loc 1 10132 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2495
	cmpl	$2, %eax	#, ix86_cpu.2495
	jne	.L2614	#,
	.loc 1 10134 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2496
	cmpl	$1, %eax	#, which_alternative.2496
	jne	.L2615	#,
	.loc 1 10134 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp837
	movq	%rax, %rdi	# tmp837,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2616	#,
	movq	-8(%rbp), %rax	# insn, tmp838
	movq	%rax, %rdi	# tmp838,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2615	#,
.L2616:
	.loc 1 10136 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2615:
	.loc 1 10140 0
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2614:
	.loc 1 10145 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2398:
	.loc 1 10149 0
	movq	-8(%rbp), %rax	# insn, tmp839
	movq	%rax, %rdi	# tmp839,
	call	extract_constrain_insn_cached	#
	.loc 1 10150 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2497
	cmpl	$2, %eax	#, ix86_cpu.2497
	jne	.L2617	#,
	.loc 1 10152 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2498
	testl	%eax, %eax	# which_alternative.2498
	je	.L2618	#,
	.loc 1 10152 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2499
	cmpl	$1, %eax	#, which_alternative.2499
	jne	.L2619	#,
.L2618:
	.loc 1 10152 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp840
	movq	%rax, %rdi	# tmp840,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2620	#,
	.loc 1 10152 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp841
	movq	%rax, %rdi	# tmp841,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2619	#,
.L2620:
	.loc 1 10152 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2500
	cmpl	$1, %eax	#, which_alternative.2500
	jne	.L2619	#,
	.loc 1 10154 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2619:
	.loc 1 10156 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2501
	testl	%eax, %eax	# which_alternative.2501
	je	.L2621	#,
	.loc 1 10156 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2502
	cmpl	$1, %eax	#, which_alternative.2502
	jne	.L2622	#,
.L2621:
	.loc 1 10158 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2622:
	.loc 1 10162 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2617:
	.loc 1 10167 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2397:
	.loc 1 10171 0
	movq	-8(%rbp), %rax	# insn, tmp842
	movq	%rax, %rdi	# tmp842,
	call	extract_constrain_insn_cached	#
	.loc 1 10172 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2503
	cmpl	$2, %eax	#, ix86_cpu.2503
	jne	.L2623	#,
	.loc 1 10172 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2504
	cmpl	$1, %eax	#, which_alternative.2504
	jne	.L2624	#,
	movq	-8(%rbp), %rax	# insn, tmp843
	movq	%rax, %rdi	# tmp843,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2624	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2505
	cmpl	$1, %eax	#, which_alternative.2505
	jne	.L2623	#,
	movq	-8(%rbp), %rax	# insn, tmp844
	movq	%rax, %rdi	# tmp844,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2623	#,
.L2624:
	.loc 1 10174 0 is_stmt 1
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2623:
	.loc 1 10178 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2396:
	.loc 1 10183 0
	movq	-8(%rbp), %rax	# insn, tmp845
	movq	%rax, %rdi	# tmp845,
	call	extract_constrain_insn_cached	#
	.loc 1 10184 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2506
	cmpl	$2, %eax	#, ix86_cpu.2506
	jne	.L2625	#,
	.loc 1 10186 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2507
	cmpl	$1, %eax	#, which_alternative.2507
	jne	.L2626	#,
	.loc 1 10186 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp846
	movq	%rax, %rdi	# tmp846,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57275
	jne	.L2626	#,
	.loc 1 10188 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2626:
	.loc 1 10190 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2508
	cmpl	$1, %eax	#, which_alternative.2508
	jne	.L2627	#,
	.loc 1 10190 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp847
	movq	%rax, %rdi	# tmp847,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2628	#,
	movq	-8(%rbp), %rax	# insn, tmp848
	movq	%rax, %rdi	# tmp848,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2627	#,
.L2628:
	.loc 1 10192 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2627:
	.loc 1 10196 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2625:
	.loc 1 10201 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2395:
	.loc 1 10208 0
	movq	-8(%rbp), %rax	# insn, tmp849
	movq	%rax, %rdi	# tmp849,
	call	extract_constrain_insn_cached	#
	.loc 1 10209 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2509
	cmpl	$2, %eax	#, ix86_cpu.2509
	jne	.L2629	#,
	.loc 1 10211 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2510
	testl	%eax, %eax	# which_alternative.2510
	je	.L2630	#,
	.loc 1 10211 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2511
	cmpl	$1, %eax	#, which_alternative.2511
	je	.L2630	#,
	.loc 1 10211 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2512
	cmpl	$2, %eax	#, which_alternative.2512
	jne	.L2631	#,
.L2630:
	movq	-8(%rbp), %rax	# insn, tmp850
	movq	%rax, %rdi	# tmp850,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57275
	je	.L2632	#,
	movq	-8(%rbp), %rax	# insn, tmp851
	movq	%rax, %rdi	# tmp851,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2631	#,
.L2632:
	.loc 1 10213 0 is_stmt 1
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2631:
	.loc 1 10215 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2513
	testl	%eax, %eax	# which_alternative.2513
	je	.L2633	#,
	.loc 1 10215 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2514
	cmpl	$1, %eax	#, which_alternative.2514
	je	.L2633	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2515
	cmpl	$2, %eax	#, which_alternative.2515
	jne	.L2634	#,
.L2633:
	.loc 1 10217 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2634:
	.loc 1 10221 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2629:
	.loc 1 10226 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2394:
	.loc 1 10231 0
	movq	-8(%rbp), %rax	# insn, tmp852
	movq	%rax, %rdi	# tmp852,
	call	extract_constrain_insn_cached	#
	.loc 1 10232 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2516
	cmpl	$2, %eax	#, ix86_cpu.2516
	jne	.L2635	#,
	.loc 1 10234 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2517
	testl	%eax, %eax	# which_alternative.2517
	je	.L2636	#,
	.loc 1 10234 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2518
	cmpl	$1, %eax	#, which_alternative.2518
	je	.L2636	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2519
	cmpl	$2, %eax	#, which_alternative.2519
	jne	.L2637	#,
.L2636:
	.loc 1 10236 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2637:
	.loc 1 10240 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2635:
	.loc 1 10245 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2393:
	.loc 1 10249 0
	movq	-8(%rbp), %rax	# insn, tmp853
	movq	%rax, %rdi	# tmp853,
	call	extract_constrain_insn_cached	#
	.loc 1 10250 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2520
	cmpl	$2, %eax	#, ix86_cpu.2520
	jne	.L2638	#,
	.loc 1 10250 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp854
	movq	%rax, %rdi	# tmp854,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2639	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2521
	cmpl	$3, %eax	#, which_alternative.2521
	je	.L2640	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2522
	cmpl	$4, %eax	#, which_alternative.2522
	jne	.L2639	#,
.L2640:
	.loc 1 10250 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp855
	movq	%rax, %rdi	# tmp855,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2641	#,
	.loc 1 10250 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2523
	testl	%eax, %eax	# which_alternative.2523
	je	.L2641	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2524
	cmpl	$1, %eax	#, which_alternative.2524
	je	.L2641	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2525
	cmpl	$2, %eax	#, which_alternative.2525
	je	.L2641	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2526
	cmpl	$3, %eax	#, which_alternative.2526
	je	.L2639	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2527
	cmpl	$4, %eax	#, which_alternative.2527
	je	.L2639	#,
.L2641:
	.loc 1 10250 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2528
	testl	%eax, %eax	# which_alternative.2528
	je	.L2639	#,
	.loc 1 10250 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2529
	cmpl	$1, %eax	#, which_alternative.2529
	je	.L2639	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2530
	cmpl	$2, %eax	#, which_alternative.2530
	jne	.L2638	#,
.L2639:
	.loc 1 10252 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2531
	testl	%eax, %eax	# which_alternative.2531
	je	.L2642	#,
	.loc 1 10252 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2532
	cmpl	$1, %eax	#, which_alternative.2532
	je	.L2642	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2533
	cmpl	$2, %eax	#, which_alternative.2533
	jne	.L2643	#,
.L2642:
	.loc 1 10254 0 is_stmt 1
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2643:
	.loc 1 10258 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2638:
	.loc 1 10263 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2392:
	.loc 1 10268 0
	movq	-8(%rbp), %rax	# insn, tmp856
	movq	%rax, %rdi	# tmp856,
	call	extract_constrain_insn_cached	#
	.loc 1 10269 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2534
	cmpl	$2, %eax	#, ix86_cpu.2534
	jne	.L2644	#,
	.loc 1 10269 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2535
	cmpl	$1, %eax	#, which_alternative.2535
	jne	.L2645	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	memory_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2645	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2536
	cmpl	$1, %eax	#, which_alternative.2536
	jne	.L2644	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	memory_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2644	#,
.L2645:
	.loc 1 10271 0 is_stmt 1
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2644:
	.loc 1 10275 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2391:
	.loc 1 10279 0
	movq	-8(%rbp), %rax	# insn, tmp857
	movq	%rax, %rdi	# tmp857,
	call	extract_constrain_insn_cached	#
	.loc 1 10280 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2537
	cmpl	$2, %eax	#, ix86_cpu.2537
	jne	.L2646	#,
	.loc 1 10280 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2538
	testl	%eax, %eax	# which_alternative.2538
	jne	.L2647	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	memory_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2647	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2539
	testl	%eax, %eax	# which_alternative.2539
	jne	.L2646	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	memory_operand	#
	testl	%eax, %eax	# D.57273
	jne	.L2646	#,
.L2647:
	.loc 1 10282 0 is_stmt 1
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2646:
	.loc 1 10286 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2390:
	.loc 1 10290 0
	movq	-8(%rbp), %rax	# insn, tmp858
	movq	%rax, %rdi	# tmp858,
	call	extract_constrain_insn_cached	#
	.loc 1 10291 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2540
	cmpl	$2, %eax	#, ix86_cpu.2540
	jne	.L2648	#,
	.loc 1 10291 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp859
	movq	%rax, %rdi	# tmp859,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2649	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57277
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2649	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2541
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2542
	movl	%eax, %ecx	# ix86_cpu.2543, tmp892
	sarl	%cl, %edx	# tmp892, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	jne	.L2649	#,
	movq	-8(%rbp), %rax	# insn, tmp860
	movq	%rax, %rdi	# tmp860,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2648	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57277
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2648	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2544
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2545
	movl	%eax, %ecx	# ix86_cpu.2546, tmp894
	sarl	%cl, %edx	# tmp894, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	jne	.L2648	#,
.L2649:
	.loc 1 10293 0 is_stmt 1
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2648:
	.loc 1 10297 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2389:
	.loc 1 10301 0
	movq	-8(%rbp), %rax	# insn, tmp861
	movq	%rax, %rdi	# tmp861,
	call	extract_constrain_insn_cached	#
	.loc 1 10302 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2547
	cmpl	$2, %eax	#, ix86_cpu.2547
	jne	.L2650	#,
	.loc 1 10302 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp862
	movq	%rax, %rdi	# tmp862,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2651	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2548
	cmpl	$3, %eax	#, which_alternative.2548
	jne	.L2652	#,
	.loc 1 10302 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2549
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2550
	movl	%eax, %ecx	# ix86_cpu.2551, tmp896
	sarl	%cl, %edx	# tmp896, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2653	#,
	.loc 1 10302 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2552
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2553
	movl	%eax, %ecx	# ix86_cpu.2554, tmp898
	sarl	%cl, %edx	# tmp898, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2653	#,
.L2652:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2555
	cmpl	$3, %eax	#, which_alternative.2555
	jne	.L2654	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2556
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2557
	movl	%eax, %ecx	# ix86_cpu.2558, tmp900
	sarl	%cl, %edx	# tmp900, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2651	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2559
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2560
	movl	%eax, %ecx	# ix86_cpu.2561, tmp902
	sarl	%cl, %edx	# tmp902, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2651	#,
.L2654:
	.loc 1 10302 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2562
	cmpl	$3, %eax	#, which_alternative.2562
	je	.L2651	#,
	.loc 1 10302 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2563
	cmpl	$5, %eax	#, which_alternative.2563
	je	.L2651	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2564
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2565
	movl	%eax, %ecx	# ix86_cpu.2566, tmp904
	sarl	%cl, %edx	# tmp904, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2653	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2567
	cmpl	$2, %eax	#, which_alternative.2567
	je	.L2651	#,
.L2653:
	.loc 1 10302 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp863
	movq	%rax, %rdi	# tmp863,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2650	#,
	.loc 1 10302 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2568
	cmpl	$3, %eax	#, which_alternative.2568
	jne	.L2655	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2569
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2570
	movl	%eax, %ecx	# ix86_cpu.2571, tmp906
	sarl	%cl, %edx	# tmp906, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2651	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2572
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2573
	movl	%eax, %ecx	# ix86_cpu.2574, tmp908
	sarl	%cl, %edx	# tmp908, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2651	#,
.L2655:
	.loc 1 10302 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2575
	cmpl	$3, %eax	#, which_alternative.2575
	jne	.L2656	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2576
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2577
	movl	%eax, %ecx	# ix86_cpu.2578, tmp910
	sarl	%cl, %edx	# tmp910, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2650	#,
	.loc 1 10302 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2579
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2580
	movl	%eax, %ecx	# ix86_cpu.2581, tmp912
	sarl	%cl, %edx	# tmp912, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2650	#,
.L2656:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2582
	cmpl	$3, %eax	#, which_alternative.2582
	je	.L2650	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2583
	cmpl	$5, %eax	#, which_alternative.2583
	je	.L2650	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2584
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2585
	movl	%eax, %ecx	# ix86_cpu.2586, tmp914
	sarl	%cl, %edx	# tmp914, D.57273
	movl	%edx, %eax	# D.57273, D.57273
	andl	$1, %eax	#, D.57273
	testl	%eax, %eax	# D.57273
	je	.L2651	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2587
	cmpl	$2, %eax	#, which_alternative.2587
	je	.L2650	#,
.L2651:
	.loc 1 10304 0 is_stmt 1
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2650:
	.loc 1 10308 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2388:
	.loc 1 10315 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2588
	cmpl	$2, %eax	#, ix86_cpu.2588
	jne	.L2657	#,
	.loc 1 10315 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp864
	movq	%rax, %rdi	# tmp864,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2658	#,
	movq	-8(%rbp), %rax	# insn, tmp865
	movq	%rax, %rdi	# tmp865,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57276
	jne	.L2658	#,
	movq	-8(%rbp), %rax	# insn, tmp866
	movq	%rax, %rdi	# tmp866,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57274
	je	.L2657	#,
	movq	-8(%rbp), %rax	# insn, tmp867
	movq	%rax, %rdi	# tmp867,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57276
	jne	.L2657	#,
.L2658:
	.loc 1 10317 0 is_stmt 1
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2657:
	.loc 1 10321 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2387:
	.loc 1 10342 0
	movq	-8(%rbp), %rax	# insn, tmp868
	movq	%rax, %rdi	# tmp868,
	call	extract_insn_cached	#
	.loc 1 10343 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2589
	cmpl	$2, %eax	#, ix86_cpu.2589
	jne	.L2659	#,
	.loc 1 10345 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57277
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57277,
	call	memory_operand	#
	testl	%eax, %eax	# D.57273
	je	.L2660	#,
	.loc 1 10347 0
	movl	$3, %eax	#, D.57273
	jmp	.L2436	#
.L2660:
	.loc 1 10349 0
	movq	-8(%rbp), %rax	# insn, tmp869
	movq	%rax, %rdi	# tmp869,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57275
	jne	.L2661	#,
	.loc 1 10351 0
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2661:
	.loc 1 10355 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2659:
	.loc 1 10360 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2386:
	.loc 1 10383 0
	movq	-8(%rbp), %rax	# insn, tmp870
	movq	%rax, %rdi	# tmp870,
	call	extract_constrain_insn_cached	#
	.loc 1 10384 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2590
	cmpl	$2, %eax	#, ix86_cpu.2590
	jne	.L2662	#,
	.loc 1 10386 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2591
	testl	%eax, %eax	# which_alternative.2591
	jne	.L2663	#,
	.loc 1 10388 0
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2663:
	.loc 1 10392 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2662:
	.loc 1 10397 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2385:
	.loc 1 10466 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2592
	cmpl	$2, %eax	#, ix86_cpu.2592
	jne	.L2664	#,
	.loc 1 10468 0
	movl	$2, %eax	#, D.57273
	jmp	.L2436	#
.L2664:
	.loc 1 10472 0
	movl	$46, %eax	#, D.57273
	jmp	.L2436	#
.L2383:
	.loc 1 10476 0
	movq	-8(%rbp), %rax	# insn, tmp871
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57277
	movzwl	(%rax), %eax	# _710->code, D.57279
	cmpw	$40, %ax	#, D.57279
	je	.L2382	#,
	.loc 1 10477 0
	movq	-8(%rbp), %rax	# insn, tmp872
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57277
	movq	%rax, %rdi	# D.57277,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57273
	jns	.L2382	#,
	.loc 1 10478 0
	movq	-8(%rbp), %rax	# insn, tmp873
	movl	$__FUNCTION__.14421, %ecx	#,
	movl	$10478, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp873,
	call	_fatal_insn_not_found	#
.L2382:
	.loc 1 10480 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2593
	cmpl	$2, %eax	#, ix86_cpu.2593
	jne	.L2665	#,
	.loc 1 10482 0
	movl	$1, %eax	#, D.57273
	jmp	.L2436	#
.L2665:
	.loc 1 10486 0
	movl	$46, %eax	#, D.57273
.L2436:
	.loc 1 10490 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE44:
	.size	pent_np_unit_ready_cost, .-pent_np_unit_ready_cost
	.globl	pent_np_unit_blockage_range
	.type	pent_np_unit_blockage_range, @function
pent_np_unit_blockage_range:
.LFB45:
	.loc 1 10496 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 10497 0
	movq	-8(%rbp), %rax	# insn, tmp371
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57281
	testl	%eax, %eax	# D.57281
	js	.L2667	#,
	.loc 1 10497 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp372
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2594
	jmp	.L2668	#
.L2667:
	.loc 1 10497 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp373
	movq	%rax, %rdi	# tmp373,
	call	recog_memoized_1	#
.L2668:
	.loc 1 10497 0 discriminator 3
	addl	$1, %eax	#, tmp374
	cmpl	$657, %eax	#, tmp374
	ja	.L2669	#,
	movl	%eax, %eax	# tmp374, tmp375
	movq	.L2671(,%rax,8), %rax	#, tmp376
	jmp	*%rax	# tmp376
	.section	.rodata
	.align 8
	.align 4
.L2671:
	.quad	.L2670
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2669
	.quad	.L2673
	.quad	.L2673
	.quad	.L2669
	.quad	.L2669
	.quad	.L2673
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2673
	.quad	.L2674
	.quad	.L2669
	.quad	.L2673
	.quad	.L2674
	.quad	.L2669
	.quad	.L2675
	.quad	.L2675
	.quad	.L2675
	.quad	.L2676
	.quad	.L2676
	.quad	.L2677
	.quad	.L2677
	.quad	.L2678
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2675
	.quad	.L2675
	.quad	.L2679
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2669
	.quad	.L2672
	.quad	.L2677
	.quad	.L2675
	.quad	.L2675
	.quad	.L2680
	.quad	.L2669
	.quad	.L2672
	.quad	.L2677
	.quad	.L2669
	.quad	.L2669
	.quad	.L2679
	.quad	.L2679
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2679
	.quad	.L2681
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2682
	.quad	.L2675
	.quad	.L2676
	.quad	.L2676
	.quad	.L2677
	.quad	.L2677
	.quad	.L2669
	.quad	.L2678
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2683
	.quad	.L2683
	.quad	.L2684
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2685
	.quad	.L2685
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2685
	.quad	.L2685
	.quad	.L2685
	.quad	.L2685
	.quad	.L2669
	.quad	.L2669
	.quad	.L2677
	.quad	.L2669
	.quad	.L2677
	.quad	.L2686
	.quad	.L2669
	.quad	.L2677
	.quad	.L2686
	.quad	.L2669
	.quad	.L2669
	.quad	.L2687
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2688
	.quad	.L2669
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2674
	.quad	.L2674
	.quad	.L2689
	.quad	.L2673
	.quad	.L2669
	.quad	.L2674
	.quad	.L2673
	.quad	.L2674
	.quad	.L2673
	.quad	.L2674
	.quad	.L2673
	.quad	.L2674
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2669
	.quad	.L2669
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2669
	.quad	.L2669
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2669
	.quad	.L2669
	.quad	.L2674
	.quad	.L2674
	.quad	.L2669
	.quad	.L2674
	.quad	.L2674
	.quad	.L2669
	.quad	.L2674
	.quad	.L2674
	.quad	.L2669
	.quad	.L2674
	.quad	.L2674
	.quad	.L2669
	.quad	.L2674
	.quad	.L2674
	.quad	.L2674
	.quad	.L2674
	.quad	.L2674
	.quad	.L2674
	.quad	.L2669
	.quad	.L2677
	.quad	.L2672
	.quad	.L2677
	.quad	.L2677
	.quad	.L2672
	.quad	.L2672
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2678
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2678
	.quad	.L2678
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2678
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2678
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2677
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2677
	.quad	.L2677
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2690
	.quad	.L2691
	.quad	.L2691
	.quad	.L2692
	.quad	.L2669
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2669
	.quad	.L2693
	.quad	.L2672
	.quad	.L2694
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2694
	.quad	.L2672
	.quad	.L2672
	.quad	.L2677
	.quad	.L2672
	.quad	.L2677
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2677
	.quad	.L2672
	.quad	.L2677
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2669
	.quad	.L2677
	.quad	.L2669
	.quad	.L2669
	.quad	.L2677
	.quad	.L2677
	.quad	.L2669
	.quad	.L2677
	.quad	.L2669
	.quad	.L2677
	.quad	.L2678
	.quad	.L2678
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2678
	.quad	.L2678
	.quad	.L2678
	.quad	.L2678
	.quad	.L2678
	.quad	.L2678
	.quad	.L2678
	.quad	.L2678
	.quad	.L2678
	.quad	.L2678
	.quad	.L2695
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2695
	.quad	.L2695
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2669
	.quad	.L2669
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2696
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2677
	.quad	.L2677
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2677
	.quad	.L2697
	.quad	.L2698
	.quad	.L2698
	.quad	.L2698
	.quad	.L2698
	.quad	.L2698
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2677
	.quad	.L2669
	.quad	.L2672
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2673
	.quad	.L2674
	.quad	.L2669
	.quad	.L2673
	.quad	.L2674
	.quad	.L2669
	.quad	.L2673
	.quad	.L2673
	.quad	.L2699
	.quad	.L2700
	.quad	.L2669
	.quad	.L2699
	.quad	.L2699
	.quad	.L2701
	.quad	.L2702
	.quad	.L2669
	.quad	.L2701
	.quad	.L2701
	.quad	.L2701
	.quad	.L2701
	.quad	.L2703
	.quad	.L2704
	.quad	.L2703
	.quad	.L2704
	.quad	.L2703
	.quad	.L2704
	.quad	.L2703
	.quad	.L2704
	.quad	.L2703
	.quad	.L2704
	.quad	.L2703
	.quad	.L2704
	.quad	.L2703
	.quad	.L2704
	.quad	.L2674
	.quad	.L2669
	.quad	.L2673
	.quad	.L2674
	.quad	.L2669
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2673
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2677
	.quad	.L2669
	.quad	.L2677
	.quad	.L2669
	.quad	.L2669
	.quad	.L2688
	.quad	.L2688
	.quad	.L2688
	.quad	.L2673
	.quad	.L2673
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2672
	.quad	.L2672
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2669
	.quad	.L2705
	.quad	.L2705
	.quad	.L2705
	.quad	.L2705
	.quad	.L2705
	.quad	.L2705
	.text
.L2705:
	.loc 1 10505 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp377
	movq	%rax, %rdi	# tmp377,
	call	extract_insn_cached	#
	.loc 1 10506 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2595
	cmpl	$2, %eax	#, ix86_cpu.2595
	jne	.L2706	#,
	.loc 1 10508 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57281
	jne	.L2707	#,
	.loc 1 10510 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2707:
	.loc 1 10514 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2706:
	.loc 1 10519 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2704:
	.loc 1 10529 0
	movq	-8(%rbp), %rax	# insn, tmp378
	movq	%rax, %rdi	# tmp378,
	call	extract_insn_cached	#
	.loc 1 10530 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2596
	cmpl	$2, %eax	#, ix86_cpu.2596
	jne	.L2709	#,
	.loc 1 10532 0
	movq	-8(%rbp), %rax	# insn, tmp379
	movq	%rax, %rdi	# tmp379,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57283
	je	.L2710	#,
	.loc 1 10532 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57282
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	mult_operator	#
	testl	%eax, %eax	# D.57281
	jne	.L2710	#,
	.loc 1 10534 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2710:
	.loc 1 10538 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2709:
	.loc 1 10543 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2703:
	.loc 1 10553 0
	movq	-8(%rbp), %rax	# insn, tmp380
	movq	%rax, %rdi	# tmp380,
	call	extract_insn_cached	#
	.loc 1 10554 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2597
	cmpl	$2, %eax	#, ix86_cpu.2597
	jne	.L2711	#,
	.loc 1 10556 0
	movq	-8(%rbp), %rax	# insn, tmp381
	movq	%rax, %rdi	# tmp381,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57283
	je	.L2712	#,
	.loc 1 10556 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57282
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	mult_operator	#
	testl	%eax, %eax	# D.57281
	jne	.L2712	#,
	.loc 1 10558 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2712:
	.loc 1 10562 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2711:
	.loc 1 10567 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2702:
	.loc 1 10571 0
	movq	-8(%rbp), %rax	# insn, tmp382
	movq	%rax, %rdi	# tmp382,
	call	extract_constrain_insn_cached	#
	.loc 1 10572 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2598
	cmpl	$2, %eax	#, ix86_cpu.2598
	jne	.L2713	#,
	.loc 1 10574 0
	movq	-8(%rbp), %rax	# insn, tmp383
	movq	%rax, %rdi	# tmp383,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57283
	je	.L2714	#,
	.loc 1 10574 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2599
	cmpl	$2, %eax	#, which_alternative.2599
	je	.L2715	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57282
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	mult_operator	#
	testl	%eax, %eax	# D.57281
	jne	.L2714	#,
.L2715:
	.loc 1 10576 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2714:
	.loc 1 10580 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2713:
	.loc 1 10585 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2701:
	.loc 1 10593 0
	movq	-8(%rbp), %rax	# insn, tmp384
	movq	%rax, %rdi	# tmp384,
	call	extract_insn_cached	#
	.loc 1 10594 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2600
	cmpl	$2, %eax	#, ix86_cpu.2600
	jne	.L2716	#,
	.loc 1 10596 0
	movq	-8(%rbp), %rax	# insn, tmp385
	movq	%rax, %rdi	# tmp385,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57283
	je	.L2717	#,
	.loc 1 10596 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57282
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	mult_operator	#
	testl	%eax, %eax	# D.57281
	jne	.L2717	#,
	.loc 1 10598 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2717:
	.loc 1 10602 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2716:
	.loc 1 10607 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2700:
	.loc 1 10611 0
	movq	-8(%rbp), %rax	# insn, tmp386
	movq	%rax, %rdi	# tmp386,
	call	extract_constrain_insn_cached	#
	.loc 1 10612 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2601
	cmpl	$2, %eax	#, ix86_cpu.2601
	jne	.L2718	#,
	.loc 1 10614 0
	movq	-8(%rbp), %rax	# insn, tmp387
	movq	%rax, %rdi	# tmp387,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57283
	je	.L2719	#,
	.loc 1 10614 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2602
	cmpl	$2, %eax	#, which_alternative.2602
	je	.L2720	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57282
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	mult_operator	#
	testl	%eax, %eax	# D.57281
	jne	.L2719	#,
.L2720:
	.loc 1 10616 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2719:
	.loc 1 10620 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2718:
	.loc 1 10625 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2699:
	.loc 1 10631 0
	movq	-8(%rbp), %rax	# insn, tmp388
	movq	%rax, %rdi	# tmp388,
	call	extract_insn_cached	#
	.loc 1 10632 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2603
	cmpl	$2, %eax	#, ix86_cpu.2603
	jne	.L2721	#,
	.loc 1 10634 0
	movq	-8(%rbp), %rax	# insn, tmp389
	movq	%rax, %rdi	# tmp389,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57283
	je	.L2722	#,
	.loc 1 10634 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57282
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	mult_operator	#
	testl	%eax, %eax	# D.57281
	jne	.L2722	#,
	.loc 1 10636 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2722:
	.loc 1 10640 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2721:
	.loc 1 10645 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2698:
	.loc 1 10653 0
	movq	-8(%rbp), %rax	# insn, tmp390
	movq	%rax, %rdi	# tmp390,
	call	extract_insn_cached	#
	.loc 1 10654 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2604
	cmpl	$2, %eax	#, ix86_cpu.2604
	jne	.L2723	#,
	.loc 1 10656 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57281
	jne	.L2724	#,
	.loc 1 10658 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2724:
	.loc 1 10662 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2723:
	.loc 1 10667 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2697:
	.loc 1 10671 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2605
	cmpl	$2, %eax	#, ix86_cpu.2605
	jne	.L2725	#,
	.loc 1 10673 0
	movq	-8(%rbp), %rax	# insn, tmp391
	movq	%rax, %rdi	# tmp391,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57283
	je	.L2726	#,
	.loc 1 10675 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2726:
	.loc 1 10679 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2725:
	.loc 1 10684 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2696:
	.loc 1 10747 0
	movq	-8(%rbp), %rax	# insn, tmp392
	movq	%rax, %rdi	# tmp392,
	call	extract_insn_cached	#
	.loc 1 10748 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2606
	cmpl	$2, %eax	#, ix86_cpu.2606
	jne	.L2727	#,
	.loc 1 10748 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp393
	movq	%rax, %rdi	# tmp393,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2728	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2728	#,
	movq	-8(%rbp), %rax	# insn, tmp394
	movq	%rax, %rdi	# tmp394,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2727	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2727	#,
.L2728:
	.loc 1 10750 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp395
	movq	%rax, %rdi	# tmp395,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2729	#,
	.loc 1 10750 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57281
	jne	.L2730	#,
.L2729:
	.loc 1 10752 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2730:
	.loc 1 10756 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2727:
	.loc 1 10761 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2695:
	.loc 1 10767 0
	movq	-8(%rbp), %rax	# insn, tmp396
	movq	%rax, %rdi	# tmp396,
	call	extract_constrain_insn_cached	#
	.loc 1 10768 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2607
	cmpl	$2, %eax	#, ix86_cpu.2607
	jne	.L2731	#,
	.loc 1 10768 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp397
	movq	%rax, %rdi	# tmp397,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2732	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2608
	cmpl	$1, %eax	#, which_alternative.2608
	jne	.L2732	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2732	#,
	movq	-8(%rbp), %rax	# insn, tmp398
	movq	%rax, %rdi	# tmp398,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2731	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2609
	cmpl	$1, %eax	#, which_alternative.2609
	jne	.L2731	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2731	#,
.L2732:
	.loc 1 10770 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp399
	movq	%rax, %rdi	# tmp399,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2733	#,
	.loc 1 10770 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2610
	cmpl	$1, %eax	#, which_alternative.2610
	jne	.L2733	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57281
	jne	.L2734	#,
.L2733:
	.loc 1 10772 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2734:
	.loc 1 10776 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2731:
	.loc 1 10781 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2694:
	.loc 1 10786 0
	movq	-8(%rbp), %rax	# insn, tmp400
	movq	%rax, %rdi	# tmp400,
	call	extract_constrain_insn_cached	#
	.loc 1 10787 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2611
	cmpl	$2, %eax	#, ix86_cpu.2611
	jne	.L2735	#,
	.loc 1 10787 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp401
	movq	%rax, %rdi	# tmp401,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2736	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2612
	testl	%eax, %eax	# which_alternative.2612
	je	.L2737	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2613
	cmpl	$1, %eax	#, which_alternative.2613
	jne	.L2736	#,
.L2737:
	.loc 1 10787 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp402
	movq	%rax, %rdi	# tmp402,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2735	#,
	.loc 1 10787 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2614
	testl	%eax, %eax	# which_alternative.2614
	je	.L2736	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2615
	cmpl	$1, %eax	#, which_alternative.2615
	jne	.L2735	#,
.L2736:
	.loc 1 10789 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp403
	movq	%rax, %rdi	# tmp403,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2738	#,
	.loc 1 10789 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2616
	testl	%eax, %eax	# which_alternative.2616
	je	.L2739	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2617
	cmpl	$1, %eax	#, which_alternative.2617
	je	.L2739	#,
.L2738:
	.loc 1 10791 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2739:
	.loc 1 10795 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2735:
	.loc 1 10800 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2693:
	.loc 1 10804 0
	movq	-8(%rbp), %rax	# insn, tmp404
	movq	%rax, %rdi	# tmp404,
	call	extract_constrain_insn_cached	#
	.loc 1 10805 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2618
	cmpl	$2, %eax	#, ix86_cpu.2618
	jne	.L2740	#,
	.loc 1 10805 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp405
	movq	%rax, %rdi	# tmp405,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2741	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2619
	testl	%eax, %eax	# which_alternative.2619
	je	.L2742	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2620
	cmpl	$1, %eax	#, which_alternative.2620
	je	.L2742	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2621
	cmpl	$2, %eax	#, which_alternative.2621
	jne	.L2741	#,
.L2742:
	.loc 1 10805 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp406
	movq	%rax, %rdi	# tmp406,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2740	#,
	.loc 1 10805 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2622
	testl	%eax, %eax	# which_alternative.2622
	je	.L2741	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2623
	cmpl	$1, %eax	#, which_alternative.2623
	je	.L2741	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2624
	cmpl	$2, %eax	#, which_alternative.2624
	jne	.L2740	#,
.L2741:
	.loc 1 10807 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp407
	movq	%rax, %rdi	# tmp407,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2743	#,
	.loc 1 10807 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2625
	testl	%eax, %eax	# which_alternative.2625
	je	.L2744	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2626
	cmpl	$1, %eax	#, which_alternative.2626
	je	.L2744	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2627
	cmpl	$2, %eax	#, which_alternative.2627
	je	.L2744	#,
.L2743:
	.loc 1 10809 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2744:
	.loc 1 10813 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2740:
	.loc 1 10818 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2692:
	.loc 1 10822 0
	movq	-8(%rbp), %rax	# insn, tmp408
	movq	%rax, %rdi	# tmp408,
	call	extract_constrain_insn_cached	#
	.loc 1 10823 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2628
	cmpl	$2, %eax	#, ix86_cpu.2628
	jne	.L2745	#,
	.loc 1 10823 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2629
	testl	%eax, %eax	# which_alternative.2629
	je	.L2746	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2630
	cmpl	$2, %eax	#, which_alternative.2630
	jne	.L2747	#,
.L2746:
	.loc 1 10823 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2631
	testl	%eax, %eax	# which_alternative.2631
	je	.L2747	#,
	.loc 1 10823 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2632
	cmpl	$2, %eax	#, which_alternative.2632
	jne	.L2745	#,
.L2747:
	.loc 1 10825 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2633
	testl	%eax, %eax	# which_alternative.2633
	je	.L2748	#,
	.loc 1 10825 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2634
	cmpl	$2, %eax	#, which_alternative.2634
	je	.L2748	#,
	.loc 1 10827 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2748:
	.loc 1 10831 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2745:
	.loc 1 10836 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2691:
	.loc 1 10841 0
	movq	-8(%rbp), %rax	# insn, tmp409
	movq	%rax, %rdi	# tmp409,
	call	extract_constrain_insn_cached	#
	.loc 1 10842 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2635
	cmpl	$2, %eax	#, ix86_cpu.2635
	jne	.L2749	#,
	.loc 1 10844 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2636
	cmpl	$1, %eax	#, which_alternative.2636
	jne	.L2750	#,
	.loc 1 10846 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2750:
	.loc 1 10850 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2749:
	.loc 1 10855 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2690:
	.loc 1 10859 0
	movq	-8(%rbp), %rax	# insn, tmp410
	movq	%rax, %rdi	# tmp410,
	call	extract_constrain_insn_cached	#
	.loc 1 10860 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2637
	cmpl	$2, %eax	#, ix86_cpu.2637
	jne	.L2751	#,
	.loc 1 10860 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2638
	cmpl	$1, %eax	#, which_alternative.2638
	je	.L2752	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2639
	cmpl	$3, %eax	#, which_alternative.2639
	je	.L2752	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2640
	cmpl	$1, %eax	#, which_alternative.2640
	je	.L2751	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2641
	cmpl	$3, %eax	#, which_alternative.2641
	je	.L2751	#,
.L2752:
	.loc 1 10862 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2642
	cmpl	$1, %eax	#, which_alternative.2642
	je	.L2753	#,
	.loc 1 10862 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2643
	cmpl	$3, %eax	#, which_alternative.2643
	jne	.L2754	#,
.L2753:
	.loc 1 10864 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2754:
	.loc 1 10868 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2751:
	.loc 1 10873 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2689:
	.loc 1 10877 0
	movq	-8(%rbp), %rax	# insn, tmp411
	movq	%rax, %rdi	# tmp411,
	call	extract_constrain_insn_cached	#
	.loc 1 10878 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2644
	cmpl	$2, %eax	#, ix86_cpu.2644
	jne	.L2755	#,
	.loc 1 10880 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2645
	testl	%eax, %eax	# which_alternative.2645
	jne	.L2756	#,
	.loc 1 10882 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2756:
	.loc 1 10886 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2755:
	.loc 1 10891 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2688:
	.loc 1 10898 0
	movq	-8(%rbp), %rax	# insn, tmp412
	movq	%rax, %rdi	# tmp412,
	call	extract_constrain_insn_cached	#
	.loc 1 10899 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2646
	cmpl	$2, %eax	#, ix86_cpu.2646
	jne	.L2757	#,
	.loc 1 10901 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2647
	testl	%eax, %eax	# which_alternative.2647
	je	.L2758	#,
	.loc 1 10901 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2648
	cmpl	$1, %eax	#, which_alternative.2648
	je	.L2758	#,
	.loc 1 10903 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2758:
	.loc 1 10907 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2757:
	.loc 1 10912 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2687:
	.loc 1 10916 0
	movq	-8(%rbp), %rax	# insn, tmp413
	movq	%rax, %rdi	# tmp413,
	call	extract_constrain_insn_cached	#
	.loc 1 10917 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2649
	cmpl	$2, %eax	#, ix86_cpu.2649
	jne	.L2759	#,
	.loc 1 10917 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2650
	cmpl	$1, %eax	#, which_alternative.2650
	jne	.L2760	#,
	movq	-8(%rbp), %rax	# insn, tmp414
	movq	%rax, %rdi	# tmp414,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2760	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2651
	cmpl	$1, %eax	#, which_alternative.2651
	jne	.L2759	#,
	movq	-8(%rbp), %rax	# insn, tmp415
	movq	%rax, %rdi	# tmp415,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2759	#,
.L2760:
	.loc 1 10919 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2652
	cmpl	$1, %eax	#, which_alternative.2652
	jne	.L2761	#,
	.loc 1 10919 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp416
	movq	%rax, %rdi	# tmp416,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	jne	.L2762	#,
.L2761:
	.loc 1 10921 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2762:
	.loc 1 10925 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2759:
	.loc 1 10930 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2686:
	.loc 1 10935 0
	movq	-8(%rbp), %rax	# insn, tmp417
	movq	%rax, %rdi	# tmp417,
	call	extract_constrain_insn_cached	#
	.loc 1 10936 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2653
	cmpl	$2, %eax	#, ix86_cpu.2653
	jne	.L2763	#,
	.loc 1 10938 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2654
	testl	%eax, %eax	# which_alternative.2654
	jne	.L2764	#,
	.loc 1 10940 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2764:
	.loc 1 10944 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2763:
	.loc 1 10949 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2685:
	.loc 1 10958 0
	movq	-8(%rbp), %rax	# insn, tmp418
	movq	%rax, %rdi	# tmp418,
	call	extract_constrain_insn_cached	#
	.loc 1 10959 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2655
	cmpl	$2, %eax	#, ix86_cpu.2655
	jne	.L2765	#,
	.loc 1 10961 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2656
	testl	%eax, %eax	# which_alternative.2656
	je	.L2766	#,
	.loc 1 10961 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2657
	cmpl	$1, %eax	#, which_alternative.2657
	je	.L2766	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2658
	cmpl	$2, %eax	#, which_alternative.2658
	je	.L2766	#,
	.loc 1 10963 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2766:
	.loc 1 10967 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2765:
	.loc 1 10972 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2684:
	.loc 1 10976 0
	movq	-8(%rbp), %rax	# insn, tmp419
	movq	%rax, %rdi	# tmp419,
	call	extract_constrain_insn_cached	#
	.loc 1 10977 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2659
	cmpl	$2, %eax	#, ix86_cpu.2659
	jne	.L2767	#,
	.loc 1 10977 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp420
	movq	%rax, %rdi	# tmp420,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2768	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2660
	cmpl	$3, %eax	#, which_alternative.2660
	je	.L2769	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2661
	cmpl	$4, %eax	#, which_alternative.2661
	jne	.L2768	#,
.L2769:
	.loc 1 10977 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp421
	movq	%rax, %rdi	# tmp421,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2770	#,
	.loc 1 10977 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2662
	testl	%eax, %eax	# which_alternative.2662
	je	.L2770	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2663
	cmpl	$1, %eax	#, which_alternative.2663
	je	.L2770	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2664
	cmpl	$2, %eax	#, which_alternative.2664
	je	.L2770	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2665
	cmpl	$3, %eax	#, which_alternative.2665
	je	.L2768	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2666
	cmpl	$4, %eax	#, which_alternative.2666
	je	.L2768	#,
.L2770:
	.loc 1 10977 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2667
	testl	%eax, %eax	# which_alternative.2667
	je	.L2768	#,
	.loc 1 10977 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2668
	cmpl	$1, %eax	#, which_alternative.2668
	je	.L2768	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2669
	cmpl	$2, %eax	#, which_alternative.2669
	jne	.L2767	#,
.L2768:
	.loc 1 10979 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2670
	testl	%eax, %eax	# which_alternative.2670
	je	.L2771	#,
	.loc 1 10979 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2671
	cmpl	$1, %eax	#, which_alternative.2671
	je	.L2771	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2672
	cmpl	$2, %eax	#, which_alternative.2672
	je	.L2771	#,
	.loc 1 10981 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp422
	movq	%rax, %rdi	# tmp422,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2772	#,
	.loc 1 10981 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2673
	cmpl	$3, %eax	#, which_alternative.2673
	je	.L2773	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2674
	cmpl	$4, %eax	#, which_alternative.2674
	jne	.L2772	#,
.L2773:
	.loc 1 10981 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp423
	movq	%rax, %rdi	# tmp423,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2774	#,
	.loc 1 10981 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2675
	cmpl	$3, %eax	#, which_alternative.2675
	je	.L2772	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2676
	cmpl	$4, %eax	#, which_alternative.2676
	jne	.L2774	#,
.L2772:
	.loc 1 10983 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp424
	movq	%rax, %rdi	# tmp424,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2775	#,
	.loc 1 10983 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2677
	cmpl	$3, %eax	#, which_alternative.2677
	je	.L2776	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2678
	cmpl	$4, %eax	#, which_alternative.2678
	je	.L2776	#,
.L2775:
	.loc 1 10985 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2776:
	.loc 1 10989 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2774:
	.loc 1 10994 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2679
	testl	%eax, %eax	# which_alternative.2679
	je	.L2777	#,
	.loc 1 10994 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2680
	cmpl	$1, %eax	#, which_alternative.2680
	je	.L2777	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2681
	cmpl	$2, %eax	#, which_alternative.2681
	je	.L2777	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2682
	cmpl	$3, %eax	#, which_alternative.2682
	je	.L2778	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2683
	cmpl	$4, %eax	#, which_alternative.2683
	je	.L2778	#,
.L2777:
	.loc 1 10996 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2778:
	.loc 1 11000 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2771:
	.loc 1 11006 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2767:
	.loc 1 11011 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2683:
	.loc 1 11016 0
	movq	-8(%rbp), %rax	# insn, tmp425
	movq	%rax, %rdi	# tmp425,
	call	extract_constrain_insn_cached	#
	.loc 1 11017 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2684
	cmpl	$2, %eax	#, ix86_cpu.2684
	jne	.L2779	#,
	.loc 1 11017 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2685
	cmpl	$1, %eax	#, which_alternative.2685
	jne	.L2780	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	memory_operand	#
	testl	%eax, %eax	# D.57281
	jne	.L2780	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2686
	cmpl	$1, %eax	#, which_alternative.2686
	jne	.L2779	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	memory_operand	#
	testl	%eax, %eax	# D.57281
	jne	.L2779	#,
.L2780:
	.loc 1 11019 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2687
	cmpl	$1, %eax	#, which_alternative.2687
	jne	.L2781	#,
	.loc 1 11019 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	memory_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2782	#,
.L2781:
	.loc 1 11021 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2782:
	.loc 1 11025 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2779:
	.loc 1 11030 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2682:
	.loc 1 11034 0
	movq	-8(%rbp), %rax	# insn, tmp426
	movq	%rax, %rdi	# tmp426,
	call	extract_constrain_insn_cached	#
	.loc 1 11035 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2688
	cmpl	$2, %eax	#, ix86_cpu.2688
	jne	.L2783	#,
	.loc 1 11035 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2689
	testl	%eax, %eax	# which_alternative.2689
	jne	.L2784	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	memory_operand	#
	testl	%eax, %eax	# D.57281
	jne	.L2784	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2690
	testl	%eax, %eax	# which_alternative.2690
	jne	.L2783	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	memory_operand	#
	testl	%eax, %eax	# D.57281
	jne	.L2783	#,
.L2784:
	.loc 1 11037 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2691
	testl	%eax, %eax	# which_alternative.2691
	jne	.L2785	#,
	.loc 1 11037 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	memory_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2786	#,
.L2785:
	.loc 1 11039 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2786:
	.loc 1 11043 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2783:
	.loc 1 11048 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2681:
	.loc 1 11052 0
	movq	-8(%rbp), %rax	# insn, tmp427
	movq	%rax, %rdi	# tmp427,
	call	extract_constrain_insn_cached	#
	.loc 1 11053 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2692
	cmpl	$2, %eax	#, ix86_cpu.2692
	jne	.L2787	#,
	.loc 1 11053 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp428
	movq	%rax, %rdi	# tmp428,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2788	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57282
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2788	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2693
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2694
	movl	%eax, %ecx	# ix86_cpu.2695, tmp451
	sarl	%cl, %edx	# tmp451, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	jne	.L2788	#,
	movq	-8(%rbp), %rax	# insn, tmp429
	movq	%rax, %rdi	# tmp429,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2787	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57282
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2787	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2696
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2697
	movl	%eax, %ecx	# ix86_cpu.2698, tmp453
	sarl	%cl, %edx	# tmp453, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	jne	.L2787	#,
.L2788:
	.loc 1 11055 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp430
	movq	%rax, %rdi	# tmp430,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2789	#,
	.loc 1 11055 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57282
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2789	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2699
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2700
	movl	%eax, %ecx	# ix86_cpu.2701, tmp455
	sarl	%cl, %edx	# tmp455, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2790	#,
.L2789:
	.loc 1 11057 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2790:
	.loc 1 11061 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2787:
	.loc 1 11066 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2680:
	.loc 1 11070 0
	movq	-8(%rbp), %rax	# insn, tmp431
	movq	%rax, %rdi	# tmp431,
	call	extract_constrain_insn_cached	#
	.loc 1 11071 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2702
	cmpl	$2, %eax	#, ix86_cpu.2702
	jne	.L2791	#,
	.loc 1 11071 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp432
	movq	%rax, %rdi	# tmp432,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2792	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2703
	cmpl	$3, %eax	#, which_alternative.2703
	jne	.L2793	#,
	.loc 1 11071 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2704
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2705
	movl	%eax, %ecx	# ix86_cpu.2706, tmp457
	sarl	%cl, %edx	# tmp457, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2794	#,
	.loc 1 11071 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2707
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2708
	movl	%eax, %ecx	# ix86_cpu.2709, tmp459
	sarl	%cl, %edx	# tmp459, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2794	#,
.L2793:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2710
	cmpl	$3, %eax	#, which_alternative.2710
	jne	.L2795	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2711
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2712
	movl	%eax, %ecx	# ix86_cpu.2713, tmp461
	sarl	%cl, %edx	# tmp461, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2792	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2714
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2715
	movl	%eax, %ecx	# ix86_cpu.2716, tmp463
	sarl	%cl, %edx	# tmp463, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2792	#,
.L2795:
	.loc 1 11071 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2717
	cmpl	$3, %eax	#, which_alternative.2717
	je	.L2792	#,
	.loc 1 11071 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2718
	cmpl	$5, %eax	#, which_alternative.2718
	je	.L2792	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2719
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2720
	movl	%eax, %ecx	# ix86_cpu.2721, tmp465
	sarl	%cl, %edx	# tmp465, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2794	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2722
	cmpl	$2, %eax	#, which_alternative.2722
	je	.L2792	#,
.L2794:
	.loc 1 11071 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp433
	movq	%rax, %rdi	# tmp433,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2791	#,
	.loc 1 11071 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2723
	cmpl	$3, %eax	#, which_alternative.2723
	jne	.L2796	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2724
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2725
	movl	%eax, %ecx	# ix86_cpu.2726, tmp467
	sarl	%cl, %edx	# tmp467, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2792	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2727
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2728
	movl	%eax, %ecx	# ix86_cpu.2729, tmp469
	sarl	%cl, %edx	# tmp469, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2792	#,
.L2796:
	.loc 1 11071 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2730
	cmpl	$3, %eax	#, which_alternative.2730
	jne	.L2797	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2731
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2732
	movl	%eax, %ecx	# ix86_cpu.2733, tmp471
	sarl	%cl, %edx	# tmp471, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2791	#,
	.loc 1 11071 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2734
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2735
	movl	%eax, %ecx	# ix86_cpu.2736, tmp473
	sarl	%cl, %edx	# tmp473, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2791	#,
.L2797:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2737
	cmpl	$3, %eax	#, which_alternative.2737
	je	.L2791	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2738
	cmpl	$5, %eax	#, which_alternative.2738
	je	.L2791	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2739
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2740
	movl	%eax, %ecx	# ix86_cpu.2741, tmp475
	sarl	%cl, %edx	# tmp475, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2792	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2742
	cmpl	$2, %eax	#, which_alternative.2742
	je	.L2791	#,
.L2792:
	.loc 1 11073 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp434
	movq	%rax, %rdi	# tmp434,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2798	#,
	.loc 1 11073 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2743
	cmpl	$3, %eax	#, which_alternative.2743
	jne	.L2799	#,
	.loc 1 11073 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2744
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2745
	movl	%eax, %ecx	# ix86_cpu.2746, tmp477
	sarl	%cl, %edx	# tmp477, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2800	#,
	.loc 1 11073 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2747
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2748
	movl	%eax, %ecx	# ix86_cpu.2749, tmp479
	sarl	%cl, %edx	# tmp479, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2800	#,
.L2799:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2750
	cmpl	$3, %eax	#, which_alternative.2750
	jne	.L2801	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2751
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2752
	movl	%eax, %ecx	# ix86_cpu.2753, tmp481
	sarl	%cl, %edx	# tmp481, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2798	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2754
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2755
	movl	%eax, %ecx	# ix86_cpu.2756, tmp483
	sarl	%cl, %edx	# tmp483, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2798	#,
.L2801:
	.loc 1 11073 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2757
	cmpl	$3, %eax	#, which_alternative.2757
	je	.L2798	#,
	.loc 1 11073 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2758
	cmpl	$5, %eax	#, which_alternative.2758
	je	.L2798	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2759
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2760
	movl	%eax, %ecx	# ix86_cpu.2761, tmp485
	sarl	%cl, %edx	# tmp485, D.57281
	movl	%edx, %eax	# D.57281, D.57281
	andl	$1, %eax	#, D.57281
	testl	%eax, %eax	# D.57281
	je	.L2800	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2762
	cmpl	$2, %eax	#, which_alternative.2762
	jne	.L2800	#,
.L2798:
	.loc 1 11075 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2800:
	.loc 1 11079 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2791:
	.loc 1 11084 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2679:
	.loc 1 11091 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2763
	cmpl	$2, %eax	#, ix86_cpu.2763
	jne	.L2802	#,
	.loc 1 11091 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp435
	movq	%rax, %rdi	# tmp435,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2803	#,
	movq	-8(%rbp), %rax	# insn, tmp436
	movq	%rax, %rdi	# tmp436,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57283
	jne	.L2803	#,
	movq	-8(%rbp), %rax	# insn, tmp437
	movq	%rax, %rdi	# tmp437,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2802	#,
	movq	-8(%rbp), %rax	# insn, tmp438
	movq	%rax, %rdi	# tmp438,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57283
	jne	.L2802	#,
.L2803:
	.loc 1 11093 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp439
	movq	%rax, %rdi	# tmp439,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	je	.L2804	#,
	.loc 1 11093 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp440
	movq	%rax, %rdi	# tmp440,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57283
	je	.L2805	#,
.L2804:
	.loc 1 11095 0 is_stmt 1
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2805:
	.loc 1 11099 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2802:
	.loc 1 11104 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2678:
	.loc 1 11126 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2764
	cmpl	$2, %eax	#, ix86_cpu.2764
	jne	.L2806	#,
	.loc 1 11128 0
	movq	-8(%rbp), %rax	# insn, tmp441
	movq	%rax, %rdi	# tmp441,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57285
	jne	.L2807	#,
	.loc 1 11130 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2807:
	.loc 1 11134 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2806:
	.loc 1 11139 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2677:
	.loc 1 11186 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2765
	cmpl	$2, %eax	#, ix86_cpu.2765
	jne	.L2808	#,
	.loc 1 11188 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2808:
	.loc 1 11192 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2676:
	.loc 1 11199 0
	movq	-8(%rbp), %rax	# insn, tmp442
	movq	%rax, %rdi	# tmp442,
	call	extract_insn_cached	#
	.loc 1 11200 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2766
	cmpl	$2, %eax	#, ix86_cpu.2766
	jne	.L2809	#,
	.loc 1 11202 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	memory_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2810	#,
	.loc 1 11204 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2810:
	.loc 1 11208 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2809:
	.loc 1 11213 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2675:
	.loc 1 11224 0
	movq	-8(%rbp), %rax	# insn, tmp443
	movq	%rax, %rdi	# tmp443,
	call	extract_insn_cached	#
	.loc 1 11225 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2767
	cmpl	$2, %eax	#, ix86_cpu.2767
	jne	.L2811	#,
	.loc 1 11227 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57282
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57282,
	call	memory_operand	#
	testl	%eax, %eax	# D.57281
	je	.L2812	#,
	.loc 1 11229 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2812:
	.loc 1 11233 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2811:
	.loc 1 11238 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2674:
	.loc 1 11267 0
	movq	-8(%rbp), %rax	# insn, tmp444
	movq	%rax, %rdi	# tmp444,
	call	extract_constrain_insn_cached	#
	.loc 1 11268 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2768
	cmpl	$2, %eax	#, ix86_cpu.2768
	jne	.L2813	#,
	.loc 1 11270 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2769
	testl	%eax, %eax	# which_alternative.2769
	je	.L2814	#,
	.loc 1 11272 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2814:
	.loc 1 11276 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2813:
	.loc 1 11281 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2673:
	.loc 1 11353 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2770
	cmpl	$2, %eax	#, ix86_cpu.2770
	jne	.L2815	#,
	.loc 1 11355 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2815:
	.loc 1 11359 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2672:
	.loc 1 11487 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2771
	cmpl	$2, %eax	#, ix86_cpu.2771
	jne	.L2816	#,
	.loc 1 11489 0
	movq	-8(%rbp), %rax	# insn, tmp445
	movq	%rax, %rdi	# tmp445,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57284
	jne	.L2817	#,
	.loc 1 11491 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2817:
	.loc 1 11495 0
	movl	$46, %eax	#, D.57280
	jmp	.L2708	#
.L2816:
	.loc 1 11500 0
	movl	$65582, %eax	#, D.57280
	jmp	.L2708	#
.L2670:
	.loc 1 11504 0
	movq	-8(%rbp), %rax	# insn, tmp446
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57282
	movzwl	(%rax), %eax	# _414->code, D.57286
	cmpw	$40, %ax	#, D.57286
	je	.L2669	#,
	.loc 1 11505 0
	movq	-8(%rbp), %rax	# insn, tmp447
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57282
	movq	%rax, %rdi	# D.57282,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57281
	jns	.L2669	#,
	.loc 1 11506 0
	movq	-8(%rbp), %rax	# insn, tmp448
	movl	$__FUNCTION__.14854, %ecx	#,
	movl	$11506, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp448,
	call	_fatal_insn_not_found	#
.L2669:
	.loc 1 11508 0
	movl	$65582, %eax	#, D.57280
.L2708:
	.loc 1 11511 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE45:
	.size	pent_np_unit_blockage_range, .-pent_np_unit_blockage_range
	.globl	function_units_used
	.type	function_units_used, @function
function_units_used:
.LFB46:
	.loc 1 11517 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -56(%rbp)	# insn, insn
	.loc 1 11518 0
	movq	-56(%rbp), %rax	# insn, tmp123
	movq	%rax, %rdi	# tmp123,
	call	get_attr_athlon_fpunits	#
	movl	%eax, -32(%rbp)	# tmp124, attr_athlon_fpunits
	.loc 1 11519 0
	movq	-56(%rbp), %rax	# insn, tmp125
	movq	%rax, %rdi	# tmp125,
	call	get_attr_athlon_decode	#
	movl	%eax, -28(%rbp)	# tmp126, attr_athlon_decode
	.loc 1 11520 0
	movq	-56(%rbp), %rax	# insn, tmp127
	movq	%rax, %rdi	# tmp127,
	call	get_attr_memory	#
	movl	%eax, -24(%rbp)	# tmp128, attr_memory
	.loc 1 11521 0
	movq	-56(%rbp), %rax	# insn, tmp129
	movq	%rax, %rdi	# tmp129,
	call	get_attr_mode	#
	movl	%eax, -20(%rbp)	# tmp130, attr_mode
	.loc 1 11522 0
	movq	-56(%rbp), %rax	# insn, tmp131
	movq	%rax, %rdi	# tmp131,
	call	get_attr_pent_pair	#
	movl	%eax, -16(%rbp)	# tmp132, attr_pent_pair
	.loc 1 11523 0
	movq	-56(%rbp), %rax	# insn, tmp133
	movq	%rax, %rdi	# tmp133,
	call	get_attr_type	#
	movl	%eax, -12(%rbp)	# tmp134, attr_type
	.loc 1 11524 0
	movq	$0, -8(%rbp)	#, accum
	.loc 1 11526 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2773
	cmpl	$2, %eax	#, ix86_cpu.2773
	jne	.L2819	#,
	.loc 1 11526 0 is_stmt 0 discriminator 1
	cmpl	$12, -12(%rbp)	#, attr_type
	je	.L2820	#,
	.loc 1 11526 0 discriminator 2
	cmpl	$31, -12(%rbp)	#, attr_type
	je	.L2820	#,
	.loc 1 11526 0 discriminator 1
	cmpl	$13, -12(%rbp)	#, attr_type
	je	.L2820	#,
	cmpl	$21, -12(%rbp)	#, attr_type
	jne	.L2821	#,
	cmpl	$1, -24(%rbp)	#, attr_memory
	je	.L2822	#,
	.loc 1 11526 0 discriminator 2
	cmpl	$2, -24(%rbp)	#, attr_memory
	jne	.L2821	#,
.L2822:
	.loc 1 11526 0 discriminator 1
	cmpl	$9, -20(%rbp)	#, attr_mode
	je	.L2820	#,
.L2821:
	.loc 1 11526 0 discriminator 2
	cmpl	$21, -12(%rbp)	#, attr_type
	jne	.L2823	#,
	.loc 1 11526 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57287
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57287,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57288
	jne	.L2820	#,
	cmpl	$2, -24(%rbp)	#, attr_memory
	je	.L2820	#,
.L2823:
	.loc 1 11526 0 discriminator 2
	cmpl	$32, -12(%rbp)	#, attr_type
	je	.L2820	#,
	.loc 1 11526 0 discriminator 1
	cmpl	$3, -16(%rbp)	#, attr_pent_pair
	je	.L2820	#,
	cmpl	$3, -16(%rbp)	#, attr_pent_pair
	jne	.L2820	#,
	cmpl	$21, -12(%rbp)	#, attr_type
	je	.L2820	#,
	cmpl	$22, -12(%rbp)	#, attr_type
	je	.L2820	#,
	cmpl	$23, -12(%rbp)	#, attr_type
	je	.L2820	#,
	cmpl	$24, -12(%rbp)	#, attr_type
	je	.L2820	#,
	cmpl	$25, -12(%rbp)	#, attr_type
	je	.L2820	#,
	cmpl	$27, -12(%rbp)	#, attr_type
	je	.L2820	#,
	cmpl	$28, -12(%rbp)	#, attr_type
	je	.L2820	#,
	cmpl	$29, -12(%rbp)	#, attr_type
	je	.L2820	#,
	cmpl	$35, -12(%rbp)	#, attr_type
	jne	.L2819	#,
.L2820:
	movl	$1, %eax	#, iftmp.2772
	jmp	.L2824	#
.L2819:
	.loc 1 11526 0 discriminator 2
	movl	$0, %eax	#, iftmp.2772
.L2824:
	.loc 1 11526 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2772, accum
	.loc 1 11527 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2775
	cmpl	$2, %eax	#, ix86_cpu.2775
	jne	.L2825	#,
	.loc 1 11527 0 is_stmt 0 discriminator 1
	cmpl	$12, -12(%rbp)	#, attr_type
	je	.L2826	#,
	.loc 1 11527 0 discriminator 2
	cmpl	$25, -12(%rbp)	#, attr_type
	je	.L2826	#,
	.loc 1 11527 0 discriminator 1
	cmpl	$26, -12(%rbp)	#, attr_type
	je	.L2826	#,
	cmpl	$27, -12(%rbp)	#, attr_type
	jne	.L2825	#,
.L2826:
	movl	$2, %eax	#, iftmp.2774
	jmp	.L2827	#
.L2825:
	.loc 1 11527 0 discriminator 2
	movl	$0, %eax	#, iftmp.2774
.L2827:
	.loc 1 11527 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2774, accum
	.loc 1 11528 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2777
	cmpl	$2, %eax	#, ix86_cpu.2777
	jne	.L2828	#,
	.loc 1 11528 0 is_stmt 0 discriminator 1
	cmpl	$21, -12(%rbp)	#, attr_type
	jne	.L2829	#,
	cmpl	$1, -24(%rbp)	#, attr_memory
	je	.L2830	#,
	.loc 1 11528 0 discriminator 2
	cmpl	$2, -24(%rbp)	#, attr_memory
	jne	.L2831	#,
.L2830:
	.loc 1 11528 0 discriminator 1
	cmpl	$9, -20(%rbp)	#, attr_mode
	je	.L2832	#,
.L2831:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57287
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57287,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57288
	jne	.L2832	#,
	cmpl	$2, -24(%rbp)	#, attr_memory
	je	.L2832	#,
	cmpl	$0, -24(%rbp)	#, attr_memory
	je	.L2832	#,
	cmpl	$1, -24(%rbp)	#, attr_memory
	je	.L2832	#,
.L2829:
	.loc 1 11528 0 discriminator 2
	cmpl	$29, -12(%rbp)	#, attr_type
	je	.L2832	#,
	.loc 1 11528 0 discriminator 1
	cmpl	$30, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$24, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$22, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$23, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$35, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$25, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$26, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$27, -12(%rbp)	#, attr_type
	je	.L2832	#,
.L2828:
	.loc 1 11528 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2778
	cmpl	$3, %eax	#, ix86_cpu.2778
	jne	.L2833	#,
	.loc 1 11528 0 discriminator 1
	cmpl	$22, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$23, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$24, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$21, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$29, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$28, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$35, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$25, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$26, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$27, -12(%rbp)	#, attr_type
	je	.L2832	#,
	cmpl	$12, -12(%rbp)	#, attr_type
	jne	.L2833	#,
.L2832:
	movl	$4, %eax	#, iftmp.2776
	jmp	.L2834	#
.L2833:
	.loc 1 11528 0 discriminator 2
	movl	$0, %eax	#, iftmp.2776
.L2834:
	.loc 1 11528 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2776, accum
	.loc 1 11529 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2780
	cmpl	$2, %eax	#, ix86_cpu.2780
	jne	.L2835	#,
	.loc 1 11529 0 is_stmt 0 discriminator 1
	cmpl	$1, -16(%rbp)	#, attr_pent_pair
	jne	.L2835	#,
	movl	$8, %eax	#, iftmp.2779
	jmp	.L2836	#
.L2835:
	.loc 1 11529 0 discriminator 2
	movl	$0, %eax	#, iftmp.2779
.L2836:
	.loc 1 11529 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2779, accum
	.loc 1 11530 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2782
	cmpl	$2, %eax	#, ix86_cpu.2782
	jne	.L2837	#,
	.loc 1 11530 0 is_stmt 0 discriminator 1
	cmpl	$3, -16(%rbp)	#, attr_pent_pair
	je	.L2837	#,
	movl	$16, %eax	#, iftmp.2781
	jmp	.L2838	#
.L2837:
	.loc 1 11530 0 discriminator 2
	movl	$0, %eax	#, iftmp.2781
.L2838:
	.loc 1 11530 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2781, accum
	.loc 1 11531 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2784
	cmpl	$2, %eax	#, ix86_cpu.2784
	jne	.L2839	#,
	.loc 1 11531 0 is_stmt 0 discriminator 1
	cmpl	$2, -16(%rbp)	#, attr_pent_pair
	jne	.L2839	#,
	movl	$32, %eax	#, iftmp.2783
	jmp	.L2840	#
.L2839:
	.loc 1 11531 0 discriminator 2
	movl	$0, %eax	#, iftmp.2783
.L2840:
	.loc 1 11531 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2783, accum
	.loc 1 11532 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2786
	cmpl	$3, %eax	#, ix86_cpu.2786
	jne	.L2841	#,
	.loc 1 11532 0 is_stmt 0 discriminator 1
	cmpl	$11, -12(%rbp)	#, attr_type
	je	.L2842	#,
	.loc 1 11532 0 discriminator 2
	cmpl	$9, -12(%rbp)	#, attr_type
	je	.L2842	#,
	.loc 1 11532 0 discriminator 1
	cmpl	$14, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$32, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$12, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$13, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$22, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$23, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$24, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$35, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$28, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$29, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$21, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$25, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$26, -12(%rbp)	#, attr_type
	je	.L2842	#,
	cmpl	$27, -12(%rbp)	#, attr_type
	jne	.L2841	#,
.L2842:
	movl	$64, %eax	#, iftmp.2785
	jmp	.L2843	#
.L2841:
	.loc 1 11532 0 discriminator 2
	movl	$0, %eax	#, iftmp.2785
.L2843:
	.loc 1 11532 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2785, accum
	.loc 1 11533 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2788
	cmpl	$3, %eax	#, ix86_cpu.2788
	jne	.L2844	#,
	.loc 1 11533 0 is_stmt 0 discriminator 1
	cmpl	$7, -12(%rbp)	#, attr_type
	je	.L2844	#,
	cmpl	$21, -12(%rbp)	#, attr_type
	jne	.L2845	#,
.L2844:
	.loc 1 11533 0 discriminator 2
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2789
	cmpl	$3, %eax	#, ix86_cpu.2789
	jne	.L2846	#,
	.loc 1 11533 0 discriminator 1
	cmpl	$7, -12(%rbp)	#, attr_type
	je	.L2847	#,
	.loc 1 11533 0 discriminator 2
	cmpl	$21, -12(%rbp)	#, attr_type
	jne	.L2846	#,
.L2847:
	.loc 1 11533 0 discriminator 1
	cmpl	$0, -24(%rbp)	#, attr_memory
	jne	.L2846	#,
.L2845:
	movl	$128, %eax	#, iftmp.2787
	jmp	.L2848	#
.L2846:
	.loc 1 11533 0 discriminator 2
	movl	$0, %eax	#, iftmp.2787
.L2848:
	.loc 1 11533 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2787, accum
	.loc 1 11534 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2791
	cmpl	$3, %eax	#, ix86_cpu.2791
	jne	.L2849	#,
	.loc 1 11534 0 is_stmt 0 discriminator 1
	cmpl	$17, -12(%rbp)	#, attr_type
	je	.L2850	#,
	.loc 1 11534 0 discriminator 2
	cmpl	$1, -24(%rbp)	#, attr_memory
	je	.L2850	#,
	.loc 1 11534 0 discriminator 1
	cmpl	$3, -24(%rbp)	#, attr_memory
	jne	.L2849	#,
.L2850:
	movl	$256, %eax	#, iftmp.2790
	jmp	.L2851	#
.L2849:
	.loc 1 11534 0 discriminator 2
	movl	$0, %eax	#, iftmp.2790
.L2851:
	.loc 1 11534 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2790, accum
	.loc 1 11535 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2793
	cmpl	$3, %eax	#, ix86_cpu.2793
	jne	.L2852	#,
	.loc 1 11535 0 is_stmt 0 discriminator 1
	cmpl	$16, -12(%rbp)	#, attr_type
	je	.L2853	#,
	.loc 1 11535 0 discriminator 2
	cmpl	$2, -24(%rbp)	#, attr_memory
	je	.L2853	#,
	.loc 1 11535 0 discriminator 1
	cmpl	$3, -24(%rbp)	#, attr_memory
	jne	.L2852	#,
.L2853:
	movl	$512, %eax	#, iftmp.2792
	jmp	.L2854	#
.L2852:
	.loc 1 11535 0 discriminator 2
	movl	$0, %eax	#, iftmp.2792
.L2854:
	.loc 1 11535 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2792, accum
	.loc 1 11536 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2795
	cmpl	$4, %eax	#, ix86_cpu.2795
	jne	.L2855	#,
	.loc 1 11536 0 is_stmt 0 discriminator 1
	cmpl	$11, -12(%rbp)	#, attr_type
	je	.L2856	#,
	.loc 1 11536 0 discriminator 2
	cmpl	$2, -12(%rbp)	#, attr_type
	je	.L2856	#,
	.loc 1 11536 0 discriminator 1
	cmpl	$3, -12(%rbp)	#, attr_type
	je	.L2856	#,
	cmpl	$32, -12(%rbp)	#, attr_type
	je	.L2856	#,
	cmpl	$4, -12(%rbp)	#, attr_type
	je	.L2857	#,
	.loc 1 11536 0 discriminator 2
	cmpl	$2, -12(%rbp)	#, attr_type
	je	.L2857	#,
	.loc 1 11536 0 discriminator 1
	cmpl	$3, -12(%rbp)	#, attr_type
	je	.L2857	#,
	cmpl	$5, -12(%rbp)	#, attr_type
	je	.L2857	#,
	cmpl	$6, -12(%rbp)	#, attr_type
	je	.L2857	#,
	cmpl	$8, -12(%rbp)	#, attr_type
	je	.L2857	#,
	cmpl	$10, -12(%rbp)	#, attr_type
	jne	.L2858	#,
.L2857:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57287
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57287,
	call	general_operand	#
	testl	%eax, %eax	# D.57288
	jne	.L2856	#,
.L2858:
	cmpl	$12, -12(%rbp)	#, attr_type
	je	.L2856	#,
	cmpl	$13, -12(%rbp)	#, attr_type
	jne	.L2855	#,
.L2856:
	movl	$1024, %eax	#, iftmp.2794
	jmp	.L2859	#
.L2855:
	.loc 1 11536 0 discriminator 2
	movl	$0, %eax	#, iftmp.2794
.L2859:
	.loc 1 11536 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2794, accum
	.loc 1 11537 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2797
	cmpl	$4, %eax	#, ix86_cpu.2797
	jne	.L2860	#,
	.loc 1 11537 0 is_stmt 0 discriminator 1
	cmpl	$11, -12(%rbp)	#, attr_type
	je	.L2861	#,
	.loc 1 11537 0 discriminator 2
	cmpl	$2, -12(%rbp)	#, attr_type
	je	.L2861	#,
	.loc 1 11537 0 discriminator 1
	cmpl	$3, -12(%rbp)	#, attr_type
	je	.L2861	#,
	cmpl	$4, -12(%rbp)	#, attr_type
	je	.L2861	#,
	cmpl	$5, -12(%rbp)	#, attr_type
	je	.L2861	#,
	cmpl	$6, -12(%rbp)	#, attr_type
	je	.L2861	#,
	cmpl	$8, -12(%rbp)	#, attr_type
	je	.L2861	#,
	cmpl	$10, -12(%rbp)	#, attr_type
	je	.L2861	#,
	cmpl	$15, -12(%rbp)	#, attr_type
	je	.L2861	#,
	cmpl	$9, -12(%rbp)	#, attr_type
	je	.L2861	#,
	cmpl	$7, -12(%rbp)	#, attr_type
	jne	.L2862	#,
	cmpl	$0, -24(%rbp)	#, attr_memory
	je	.L2861	#,
.L2862:
	.loc 1 11537 0 discriminator 2
	cmpl	$12, -12(%rbp)	#, attr_type
	je	.L2861	#,
	.loc 1 11537 0 discriminator 1
	cmpl	$13, -12(%rbp)	#, attr_type
	jne	.L2860	#,
.L2861:
	movl	$2048, %eax	#, iftmp.2796
	jmp	.L2863	#
.L2860:
	.loc 1 11537 0 discriminator 2
	movl	$0, %eax	#, iftmp.2796
.L2863:
	.loc 1 11537 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2796, accum
	.loc 1 11538 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2799
	cmpl	$4, %eax	#, ix86_cpu.2799
	jne	.L2864	#,
	.loc 1 11538 0 is_stmt 0 discriminator 1
	cmpl	$18, -12(%rbp)	#, attr_type
	je	.L2865	#,
	.loc 1 11538 0 discriminator 2
	cmpl	$19, -12(%rbp)	#, attr_type
	je	.L2865	#,
	.loc 1 11538 0 discriminator 1
	cmpl	$14, -12(%rbp)	#, attr_type
	jne	.L2864	#,
.L2865:
	movl	$4096, %eax	#, iftmp.2798
	jmp	.L2866	#
.L2864:
	.loc 1 11538 0 discriminator 2
	movl	$0, %eax	#, iftmp.2798
.L2866:
	.loc 1 11538 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2798, accum
	.loc 1 11539 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2801
	cmpl	$4, %eax	#, ix86_cpu.2801
	jne	.L2867	#,
	.loc 1 11539 0 is_stmt 0 discriminator 1
	cmpl	$17, -12(%rbp)	#, attr_type
	je	.L2868	#,
	.loc 1 11539 0 discriminator 2
	cmpl	$1, -24(%rbp)	#, attr_memory
	je	.L2868	#,
	.loc 1 11539 0 discriminator 1
	cmpl	$3, -24(%rbp)	#, attr_memory
	je	.L2868	#,
	cmpl	$31, -12(%rbp)	#, attr_type
	jne	.L2867	#,
	cmpl	$1, -24(%rbp)	#, attr_memory
	je	.L2868	#,
	cmpl	$3, -24(%rbp)	#, attr_memory
	jne	.L2867	#,
.L2868:
	movl	$8192, %eax	#, iftmp.2800
	jmp	.L2869	#
.L2867:
	.loc 1 11539 0 discriminator 2
	movl	$0, %eax	#, iftmp.2800
.L2869:
	.loc 1 11539 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2800, accum
	.loc 1 11540 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2803
	cmpl	$4, %eax	#, ix86_cpu.2803
	jne	.L2870	#,
	.loc 1 11540 0 is_stmt 0 discriminator 1
	cmpl	$9, -12(%rbp)	#, attr_type
	je	.L2871	#,
	.loc 1 11540 0 discriminator 2
	cmpl	$31, -12(%rbp)	#, attr_type
	je	.L2871	#,
	.loc 1 11540 0 discriminator 1
	cmpl	$16, -12(%rbp)	#, attr_type
	je	.L2871	#,
	cmpl	$2, -24(%rbp)	#, attr_memory
	je	.L2871	#,
	cmpl	$3, -24(%rbp)	#, attr_memory
	jne	.L2870	#,
.L2871:
	movl	$16384, %eax	#, iftmp.2802
	jmp	.L2872	#
.L2870:
	.loc 1 11540 0 discriminator 2
	movl	$0, %eax	#, iftmp.2802
.L2872:
	.loc 1 11540 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2802, accum
	.loc 1 11541 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2805
	cmpl	$4, %eax	#, ix86_cpu.2805
	jne	.L2873	#,
	.loc 1 11541 0 is_stmt 0 discriminator 1
	cmpl	$22, -12(%rbp)	#, attr_type
	je	.L2874	#,
	.loc 1 11541 0 discriminator 2
	cmpl	$23, -12(%rbp)	#, attr_type
	je	.L2874	#,
	.loc 1 11541 0 discriminator 1
	cmpl	$21, -12(%rbp)	#, attr_type
	je	.L2874	#,
	cmpl	$29, -12(%rbp)	#, attr_type
	je	.L2874	#,
	cmpl	$35, -12(%rbp)	#, attr_type
	je	.L2874	#,
	cmpl	$25, -12(%rbp)	#, attr_type
	je	.L2874	#,
	cmpl	$26, -12(%rbp)	#, attr_type
	je	.L2874	#,
	cmpl	$27, -12(%rbp)	#, attr_type
	jne	.L2873	#,
.L2874:
	movl	$32768, %eax	#, iftmp.2804
	jmp	.L2875	#
.L2873:
	.loc 1 11541 0 discriminator 2
	movl	$0, %eax	#, iftmp.2804
.L2875:
	.loc 1 11541 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2804, accum
	.loc 1 11542 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2807
	cmpl	$5, %eax	#, ix86_cpu.2807
	jne	.L2876	#,
	.loc 1 11542 0 is_stmt 0 discriminator 1
	cmpl	$1, -28(%rbp)	#, attr_athlon_decode
	je	.L2877	#,
	.loc 1 11542 0 discriminator 2
	cmpl	$0, -28(%rbp)	#, attr_athlon_decode
	jne	.L2876	#,
.L2877:
	.loc 1 11542 0 discriminator 1
	movl	$65536, %eax	#, iftmp.2806
	jmp	.L2878	#
.L2876:
	.loc 1 11542 0 discriminator 2
	movl	$0, %eax	#, iftmp.2806
.L2878:
	.loc 1 11542 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2806, accum
	.loc 1 11543 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2809
	cmpl	$5, %eax	#, ix86_cpu.2809
	jne	.L2879	#,
	.loc 1 11543 0 is_stmt 0 discriminator 1
	cmpl	$0, -28(%rbp)	#, attr_athlon_decode
	jne	.L2879	#,
	movl	$131072, %eax	#, iftmp.2808
	jmp	.L2880	#
.L2879:
	.loc 1 11543 0 discriminator 2
	movl	$0, %eax	#, iftmp.2808
.L2880:
	.loc 1 11543 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2808, accum
	.loc 1 11544 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2811
	cmpl	$5, %eax	#, ix86_cpu.2811
	jne	.L2881	#,
	.loc 1 11544 0 is_stmt 0 discriminator 1
	cmpl	$2, -12(%rbp)	#, attr_type
	je	.L2882	#,
	.loc 1 11544 0 discriminator 2
	cmpl	$3, -12(%rbp)	#, attr_type
	je	.L2882	#,
	.loc 1 11544 0 discriminator 1
	cmpl	$4, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$5, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$6, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$7, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$8, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$9, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$10, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$11, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$14, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$18, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$19, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$20, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$32, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$17, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$15, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$16, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$31, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$12, -12(%rbp)	#, attr_type
	je	.L2882	#,
	cmpl	$13, -12(%rbp)	#, attr_type
	jne	.L2881	#,
.L2882:
	movl	$262144, %eax	#, iftmp.2810
	jmp	.L2883	#
.L2881:
	.loc 1 11544 0 discriminator 2
	movl	$0, %eax	#, iftmp.2810
.L2883:
	.loc 1 11544 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2810, accum
	.loc 1 11545 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2813
	cmpl	$5, %eax	#, ix86_cpu.2813
	jne	.L2884	#,
	.loc 1 11545 0 is_stmt 0 discriminator 1
	cmpl	$12, -12(%rbp)	#, attr_type
	je	.L2885	#,
	.loc 1 11545 0 discriminator 2
	cmpl	$13, -12(%rbp)	#, attr_type
	jne	.L2884	#,
.L2885:
	.loc 1 11545 0 discriminator 1
	movl	$524288, %eax	#, iftmp.2812
	jmp	.L2886	#
.L2884:
	.loc 1 11545 0 discriminator 2
	movl	$0, %eax	#, iftmp.2812
.L2886:
	.loc 1 11545 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2812, accum
	.loc 1 11546 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2815
	cmpl	$5, %eax	#, ix86_cpu.2815
	jne	.L2887	#,
	.loc 1 11546 0 is_stmt 0 discriminator 1
	cmpl	$27, -12(%rbp)	#, attr_type
	je	.L2888	#,
	.loc 1 11546 0 discriminator 2
	cmpl	$26, -12(%rbp)	#, attr_type
	je	.L2888	#,
	.loc 1 11546 0 discriminator 1
	cmpl	$22, -12(%rbp)	#, attr_type
	je	.L2888	#,
	cmpl	$23, -12(%rbp)	#, attr_type
	je	.L2888	#,
	cmpl	$25, -12(%rbp)	#, attr_type
	je	.L2888	#,
	cmpl	$35, -12(%rbp)	#, attr_type
	je	.L2888	#,
	cmpl	$21, -12(%rbp)	#, attr_type
	jne	.L2889	#,
	cmpl	$1, -24(%rbp)	#, attr_memory
	jne	.L2889	#,
	cmpl	$9, -20(%rbp)	#, attr_mode
	je	.L2888	#,
.L2889:
	.loc 1 11546 0 discriminator 2
	cmpl	$21, -12(%rbp)	#, attr_type
	je	.L2888	#,
	.loc 1 11546 0 discriminator 1
	cmpl	$24, -12(%rbp)	#, attr_type
	je	.L2888	#,
	cmpl	$29, -12(%rbp)	#, attr_type
	jne	.L2890	#,
	cmpl	$0, -28(%rbp)	#, attr_athlon_decode
	je	.L2888	#,
.L2890:
	.loc 1 11546 0 discriminator 2
	cmpl	$29, -12(%rbp)	#, attr_type
	jne	.L2891	#,
	.loc 1 11546 0 discriminator 1
	cmpl	$1, -28(%rbp)	#, attr_athlon_decode
	je	.L2888	#,
.L2891:
	.loc 1 11546 0 discriminator 2
	cmpl	$28, -12(%rbp)	#, attr_type
	jne	.L2887	#,
.L2888:
	.loc 1 11546 0 discriminator 1
	movl	$1048576, %eax	#, iftmp.2814
	jmp	.L2892	#
.L2887:
	.loc 1 11546 0 discriminator 2
	movl	$0, %eax	#, iftmp.2814
.L2892:
	.loc 1 11546 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2814, accum
	.loc 1 11547 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2817
	cmpl	$5, %eax	#, ix86_cpu.2817
	jne	.L2893	#,
	.loc 1 11547 0 is_stmt 0 discriminator 1
	cmpl	$2, -32(%rbp)	#, attr_athlon_fpunits
	jne	.L2893	#,
	movl	$2097152, %eax	#, iftmp.2816
	jmp	.L2894	#
.L2893:
	.loc 1 11547 0 discriminator 2
	movl	$0, %eax	#, iftmp.2816
.L2894:
	.loc 1 11547 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2816, accum
	.loc 1 11548 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2819
	cmpl	$5, %eax	#, ix86_cpu.2819
	jne	.L2895	#,
	.loc 1 11548 0 is_stmt 0 discriminator 1
	cmpl	$3, -32(%rbp)	#, attr_athlon_fpunits
	jne	.L2895	#,
	movl	$4194304, %eax	#, iftmp.2818
	jmp	.L2896	#
.L2895:
	.loc 1 11548 0 discriminator 2
	movl	$0, %eax	#, iftmp.2818
.L2896:
	.loc 1 11548 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2818, accum
	.loc 1 11549 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2821
	cmpl	$5, %eax	#, ix86_cpu.2821
	jne	.L2897	#,
	.loc 1 11549 0 is_stmt 0 discriminator 1
	cmpl	$4, -32(%rbp)	#, attr_athlon_fpunits
	je	.L2898	#,
	.loc 1 11549 0 discriminator 2
	cmpl	$2, -32(%rbp)	#, attr_athlon_fpunits
	je	.L2898	#,
	.loc 1 11549 0 discriminator 1
	cmpl	$3, -32(%rbp)	#, attr_athlon_fpunits
	jne	.L2897	#,
.L2898:
	movl	$8388608, %eax	#, iftmp.2820
	jmp	.L2899	#
.L2897:
	.loc 1 11549 0 discriminator 2
	movl	$0, %eax	#, iftmp.2820
.L2899:
	.loc 1 11549 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2820, accum
	.loc 1 11550 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2823
	cmpl	$5, %eax	#, ix86_cpu.2823
	jne	.L2900	#,
	.loc 1 11550 0 is_stmt 0 discriminator 1
	cmpl	$1, -24(%rbp)	#, attr_memory
	je	.L2901	#,
	.loc 1 11550 0 discriminator 2
	cmpl	$3, -24(%rbp)	#, attr_memory
	jne	.L2900	#,
.L2901:
	.loc 1 11550 0 discriminator 1
	movl	$33554432, %eax	#, iftmp.2822
	jmp	.L2902	#
.L2900:
	.loc 1 11550 0 discriminator 2
	movl	$0, %eax	#, iftmp.2822
.L2902:
	.loc 1 11550 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2822, accum
	.loc 1 11551 0 is_stmt 1 discriminator 3
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2825
	cmpl	$5, %eax	#, ix86_cpu.2825
	jne	.L2903	#,
	.loc 1 11551 0 is_stmt 0 discriminator 1
	cmpl	$1, -32(%rbp)	#, attr_athlon_fpunits
	jne	.L2903	#,
	movl	$16777216, %eax	#, iftmp.2824
	jmp	.L2904	#
.L2903:
	.loc 1 11551 0 discriminator 2
	movl	$0, %eax	#, iftmp.2824
.L2904:
	.loc 1 11551 0 discriminator 3
	orq	%rax, -8(%rbp)	# iftmp.2824, accum
	.loc 1 11553 0 is_stmt 1 discriminator 3
	cmpq	$0, -8(%rbp)	#, accum
	je	.L2905	#,
	.loc 1 11553 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# accum, tmp135
	negq	%rax	# D.57289
	andq	-8(%rbp), %rax	# accum, D.57289
	cmpq	-8(%rbp), %rax	# accum, D.57289
	jne	.L2905	#,
.LBB2:
	.loc 1 11556 0 is_stmt 1
	movl	$0, -36(%rbp)	#, i
	jmp	.L2906	#
.L2907:
	.loc 1 11556 0 is_stmt 0 discriminator 3
	addl	$1, -36(%rbp)	#, i
.L2906:
	.loc 1 11556 0 discriminator 1
	shrq	-8(%rbp)	# accum
	cmpq	$0, -8(%rbp)	#, accum
	jne	.L2907	#,
	.loc 1 11557 0 is_stmt 1
	movl	-36(%rbp), %eax	# i, tmp137
	cltq
	movq	%rax, -8(%rbp)	# tmp136, accum
.LBE2:
	.loc 1 11554 0
	jmp	.L2908	#
.L2905:
	.loc 1 11560 0
	notq	-8(%rbp)	# accum
.L2908:
	.loc 1 11561 0
	movq	-8(%rbp), %rax	# accum, tmp138
	.loc 1 11562 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE46:
	.size	function_units_used, .-function_units_used
	.globl	get_attr_athlon_fpunits
	.type	get_attr_athlon_fpunits, @function
get_attr_athlon_fpunits:
.LFB47:
	.loc 1 11568 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 11569 0
	movq	-8(%rbp), %rax	# insn, tmp172
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57291
	testl	%eax, %eax	# D.57291
	js	.L2911	#,
	.loc 1 11569 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp173
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2826
	jmp	.L2912	#
.L2911:
	.loc 1 11569 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp174
	movq	%rax, %rdi	# tmp174,
	call	recog_memoized_1	#
.L2912:
	.loc 1 11569 0 discriminator 3
	addl	$1, %eax	#, tmp175
	cmpl	$623, %eax	#, tmp175
	ja	.L2913	#,
	movl	%eax, %eax	# tmp175, tmp176
	movq	.L2915(,%rax,8), %rax	#, tmp177
	jmp	*%rax	# tmp177
	.section	.rodata
	.align 8
	.align 4
.L2915:
	.quad	.L2914
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2916
	.quad	.L2916
	.quad	.L2916
	.quad	.L2913
	.quad	.L2916
	.quad	.L2916
	.quad	.L2913
	.quad	.L2913
	.quad	.L2916
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2916
	.quad	.L2917
	.quad	.L2913
	.quad	.L2916
	.quad	.L2917
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2918
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2918
	.quad	.L2918
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2918
	.quad	.L2918
	.quad	.L2918
	.quad	.L2918
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2919
	.quad	.L2913
	.quad	.L2920
	.quad	.L2920
	.quad	.L2920
	.quad	.L2920
	.quad	.L2921
	.quad	.L2921
	.quad	.L2922
	.quad	.L2920
	.quad	.L2913
	.quad	.L2921
	.quad	.L2920
	.quad	.L2921
	.quad	.L2920
	.quad	.L2921
	.quad	.L2920
	.quad	.L2921
	.quad	.L2920
	.quad	.L2916
	.quad	.L2916
	.quad	.L2916
	.quad	.L2913
	.quad	.L2913
	.quad	.L2916
	.quad	.L2916
	.quad	.L2916
	.quad	.L2913
	.quad	.L2913
	.quad	.L2916
	.quad	.L2916
	.quad	.L2916
	.quad	.L2913
	.quad	.L2913
	.quad	.L2921
	.quad	.L2921
	.quad	.L2913
	.quad	.L2921
	.quad	.L2921
	.quad	.L2913
	.quad	.L2921
	.quad	.L2921
	.quad	.L2913
	.quad	.L2921
	.quad	.L2921
	.quad	.L2913
	.quad	.L2921
	.quad	.L2921
	.quad	.L2921
	.quad	.L2921
	.quad	.L2921
	.quad	.L2921
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2924
	.quad	.L2925
	.quad	.L2913
	.quad	.L2924
	.quad	.L2925
	.quad	.L2913
	.quad	.L2926
	.quad	.L2927
	.quad	.L2928
	.quad	.L2929
	.quad	.L2913
	.quad	.L2928
	.quad	.L2928
	.quad	.L2930
	.quad	.L2931
	.quad	.L2913
	.quad	.L2930
	.quad	.L2930
	.quad	.L2930
	.quad	.L2930
	.quad	.L2932
	.quad	.L2933
	.quad	.L2932
	.quad	.L2933
	.quad	.L2932
	.quad	.L2933
	.quad	.L2932
	.quad	.L2933
	.quad	.L2932
	.quad	.L2933
	.quad	.L2932
	.quad	.L2933
	.quad	.L2932
	.quad	.L2933
	.quad	.L2934
	.quad	.L2913
	.quad	.L2923
	.quad	.L2934
	.quad	.L2913
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2923
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2913
	.quad	.L2935
	.quad	.L2935
	.quad	.L2935
	.quad	.L2923
	.quad	.L2923
	.text
.L2935:
	.loc 1 11574 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp178
	movq	%rax, %rdi	# tmp178,
	call	extract_constrain_insn_cached	#
	.loc 1 11575 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2827
	testl	%eax, %eax	# which_alternative.2827
	je	.L2936	#,
	.loc 1 11575 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2828
	cmpl	$1, %eax	#, which_alternative.2828
	jne	.L2937	#,
.L2936:
	.loc 1 11577 0 is_stmt 1
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2937:
	.loc 1 11581 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2934:
	.loc 1 11586 0
	movq	-8(%rbp), %rax	# insn, tmp179
	movq	%rax, %rdi	# tmp179,
	call	extract_constrain_insn_cached	#
	.loc 1 11587 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2829
	testl	%eax, %eax	# which_alternative.2829
	jne	.L2939	#,
	.loc 1 11589 0
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2939:
	.loc 1 11593 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2933:
	.loc 1 11603 0
	movq	-8(%rbp), %rax	# insn, tmp180
	movq	%rax, %rdi	# tmp180,
	call	extract_insn_cached	#
	.loc 1 11604 0
	movq	-8(%rbp), %rax	# insn, tmp181
	movq	%rax, %rdi	# tmp181,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57292
	jne	.L2940	#,
	.loc 1 11606 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2940:
	.loc 1 11608 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	jne	.L2941	#,
	.loc 1 11608 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp182
	movq	%rax, %rdi	# tmp182,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57292
	jne	.L2942	#,
.L2941:
	.loc 1 11610 0 is_stmt 1
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2942:
	.loc 1 11614 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2932:
	.loc 1 11624 0
	movq	-8(%rbp), %rax	# insn, tmp183
	movq	%rax, %rdi	# tmp183,
	call	extract_insn_cached	#
	.loc 1 11625 0
	movq	-8(%rbp), %rax	# insn, tmp184
	movq	%rax, %rdi	# tmp184,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57292
	jne	.L2943	#,
	.loc 1 11627 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2943:
	.loc 1 11629 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	jne	.L2944	#,
	.loc 1 11629 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp185
	movq	%rax, %rdi	# tmp185,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57292
	jne	.L2945	#,
.L2944:
	.loc 1 11631 0 is_stmt 1
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2945:
	.loc 1 11635 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2931:
	.loc 1 11639 0
	movq	-8(%rbp), %rax	# insn, tmp186
	movq	%rax, %rdi	# tmp186,
	call	extract_constrain_insn_cached	#
	.loc 1 11640 0
	movq	-8(%rbp), %rax	# insn, tmp187
	movq	%rax, %rdi	# tmp187,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57292
	jne	.L2946	#,
	.loc 1 11642 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2946:
	.loc 1 11644 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2830
	cmpl	$2, %eax	#, which_alternative.2830
	je	.L2947	#,
	.loc 1 11644 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	jne	.L2948	#,
.L2947:
	.loc 1 11644 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp188
	movq	%rax, %rdi	# tmp188,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57292
	jne	.L2949	#,
.L2948:
	.loc 1 11646 0 is_stmt 1
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2949:
	.loc 1 11650 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2930:
	.loc 1 11658 0
	movq	-8(%rbp), %rax	# insn, tmp189
	movq	%rax, %rdi	# tmp189,
	call	extract_insn_cached	#
	.loc 1 11659 0
	movq	-8(%rbp), %rax	# insn, tmp190
	movq	%rax, %rdi	# tmp190,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57292
	jne	.L2950	#,
	.loc 1 11661 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2950:
	.loc 1 11663 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	jne	.L2951	#,
	.loc 1 11663 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp191
	movq	%rax, %rdi	# tmp191,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57292
	jne	.L2952	#,
.L2951:
	.loc 1 11665 0 is_stmt 1
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2952:
	.loc 1 11669 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2929:
	.loc 1 11673 0
	movq	-8(%rbp), %rax	# insn, tmp192
	movq	%rax, %rdi	# tmp192,
	call	extract_constrain_insn_cached	#
	.loc 1 11674 0
	movq	-8(%rbp), %rax	# insn, tmp193
	movq	%rax, %rdi	# tmp193,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57292
	jne	.L2953	#,
	.loc 1 11676 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2953:
	.loc 1 11678 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2831
	cmpl	$2, %eax	#, which_alternative.2831
	je	.L2954	#,
	.loc 1 11678 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	jne	.L2955	#,
.L2954:
	.loc 1 11678 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp194
	movq	%rax, %rdi	# tmp194,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57292
	jne	.L2956	#,
.L2955:
	.loc 1 11680 0 is_stmt 1
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2956:
	.loc 1 11684 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2928:
	.loc 1 11690 0
	movq	-8(%rbp), %rax	# insn, tmp195
	movq	%rax, %rdi	# tmp195,
	call	extract_insn_cached	#
	.loc 1 11691 0
	movq	-8(%rbp), %rax	# insn, tmp196
	movq	%rax, %rdi	# tmp196,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57292
	jne	.L2957	#,
	.loc 1 11693 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2957:
	.loc 1 11695 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	jne	.L2958	#,
	.loc 1 11695 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp197
	movq	%rax, %rdi	# tmp197,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57292
	jne	.L2959	#,
.L2958:
	.loc 1 11697 0 is_stmt 1
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2959:
	.loc 1 11701 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2927:
	.loc 1 11705 0
	movq	-8(%rbp), %rax	# insn, tmp198
	movq	%rax, %rdi	# tmp198,
	call	extract_insn_cached	#
	.loc 1 11706 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	jne	.L2960	#,
	.loc 1 11708 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2960:
	.loc 1 11712 0
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2926:
	.loc 1 11716 0
	movq	-8(%rbp), %rax	# insn, tmp199
	movq	%rax, %rdi	# tmp199,
	call	extract_insn_cached	#
	.loc 1 11717 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	jne	.L2961	#,
	.loc 1 11719 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2961:
	.loc 1 11723 0
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2925:
	.loc 1 11728 0
	movq	-8(%rbp), %rax	# insn, tmp200
	movq	%rax, %rdi	# tmp200,
	call	extract_constrain_insn_cached	#
	.loc 1 11729 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2832
	testl	%eax, %eax	# which_alternative.2832
	jne	.L2962	#,
	.loc 1 11729 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	jne	.L2962	#,
	.loc 1 11731 0 is_stmt 1
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2962:
	.loc 1 11733 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2833
	testl	%eax, %eax	# which_alternative.2833
	jne	.L2963	#,
	.loc 1 11733 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	je	.L2963	#,
	.loc 1 11735 0 is_stmt 1
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2963:
	.loc 1 11739 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2924:
	.loc 1 11744 0
	movq	-8(%rbp), %rax	# insn, tmp201
	movq	%rax, %rdi	# tmp201,
	call	extract_insn_cached	#
	.loc 1 11745 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57293
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	mult_operator	#
	testl	%eax, %eax	# D.57291
	jne	.L2964	#,
	.loc 1 11747 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2964:
	.loc 1 11751 0
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2922:
	.loc 1 11755 0
	movq	-8(%rbp), %rax	# insn, tmp202
	movq	%rax, %rdi	# tmp202,
	call	extract_constrain_insn_cached	#
	.loc 1 11756 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2834
	cmpl	$1, %eax	#, which_alternative.2834
	jne	.L2965	#,
	.loc 1 11756 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57294
	je	.L2966	#,
	movq	-8(%rbp), %rax	# insn, tmp204
	movq	%rax, %rdi	# tmp204,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57294
	jne	.L2965	#,
.L2966:
	.loc 1 11758 0 is_stmt 1
	movl	$1, %eax	#, D.57290
	jmp	.L2938	#
.L2965:
	.loc 1 11760 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2835
	cmpl	$1, %eax	#, which_alternative.2835
	jne	.L2967	#,
	.loc 1 11760 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp205
	movq	%rax, %rdi	# tmp205,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57294
	jne	.L2967	#,
	.loc 1 11762 0 is_stmt 1
	movl	$5, %eax	#, D.57290
	jmp	.L2938	#
.L2967:
	.loc 1 11764 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2836
	cmpl	$1, %eax	#, which_alternative.2836
	jne	.L2968	#,
	.loc 1 11764 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57293
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	register_operand	#
	testl	%eax, %eax	# D.57291
	jne	.L2969	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57293
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57291
	je	.L2968	#,
.L2969:
	.loc 1 11766 0 is_stmt 1
	movl	$1, %eax	#, D.57290
	jmp	.L2938	#
.L2968:
	.loc 1 11768 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2837
	testl	%eax, %eax	# which_alternative.2837
	je	.L2970	#,
	.loc 1 11770 0
	movl	$4, %eax	#, D.57290
	jmp	.L2938	#
.L2970:
	.loc 1 11774 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2921:
	.loc 1 11797 0
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	%rax, %rdi	# tmp206,
	call	extract_constrain_insn_cached	#
	.loc 1 11798 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2838
	testl	%eax, %eax	# which_alternative.2838
	jne	.L2971	#,
	.loc 1 11798 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp207
	movq	%rax, %rdi	# tmp207,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57294
	je	.L2972	#,
	movq	-8(%rbp), %rax	# insn, tmp208
	movq	%rax, %rdi	# tmp208,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57294
	jne	.L2971	#,
.L2972:
	.loc 1 11800 0 is_stmt 1
	movl	$1, %eax	#, D.57290
	jmp	.L2938	#
.L2971:
	.loc 1 11802 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2839
	testl	%eax, %eax	# which_alternative.2839
	jne	.L2973	#,
	.loc 1 11802 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp209
	movq	%rax, %rdi	# tmp209,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57294
	jne	.L2973	#,
	.loc 1 11804 0 is_stmt 1
	movl	$5, %eax	#, D.57290
	jmp	.L2938	#
.L2973:
	.loc 1 11806 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2840
	testl	%eax, %eax	# which_alternative.2840
	jne	.L2974	#,
	.loc 1 11806 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57293
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	register_operand	#
	testl	%eax, %eax	# D.57291
	jne	.L2975	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57293
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57291
	je	.L2974	#,
.L2975:
	.loc 1 11808 0 is_stmt 1
	movl	$1, %eax	#, D.57290
	jmp	.L2938	#
.L2974:
	.loc 1 11810 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2841
	testl	%eax, %eax	# which_alternative.2841
	jne	.L2976	#,
	.loc 1 11812 0
	movl	$4, %eax	#, D.57290
	jmp	.L2938	#
.L2976:
	.loc 1 11816 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2920:
	.loc 1 11828 0
	movq	-8(%rbp), %rax	# insn, tmp210
	movq	%rax, %rdi	# tmp210,
	call	extract_insn_cached	#
	.loc 1 11829 0
	movq	-8(%rbp), %rax	# insn, tmp211
	movq	%rax, %rdi	# tmp211,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57294
	je	.L2977	#,
	.loc 1 11829 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp212
	movq	%rax, %rdi	# tmp212,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57294
	jne	.L2978	#,
.L2977:
	.loc 1 11831 0 is_stmt 1
	movl	$1, %eax	#, D.57290
	jmp	.L2938	#
.L2978:
	.loc 1 11833 0
	movq	-8(%rbp), %rax	# insn, tmp213
	movq	%rax, %rdi	# tmp213,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57294
	jne	.L2979	#,
	.loc 1 11835 0
	movl	$5, %eax	#, D.57290
	jmp	.L2938	#
.L2979:
	.loc 1 11837 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57293
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	register_operand	#
	testl	%eax, %eax	# D.57291
	jne	.L2980	#,
	.loc 1 11837 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57293
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57291
	je	.L2981	#,
.L2980:
	.loc 1 11839 0 is_stmt 1
	movl	$1, %eax	#, D.57290
	jmp	.L2938	#
.L2981:
	.loc 1 11843 0
	movl	$4, %eax	#, D.57290
	jmp	.L2938	#
.L2919:
	.loc 1 11847 0
	movq	-8(%rbp), %rax	# insn, tmp214
	movq	%rax, %rdi	# tmp214,
	call	extract_constrain_insn_cached	#
	.loc 1 11848 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2842
	testl	%eax, %eax	# which_alternative.2842
	je	.L2982	#,
	.loc 1 11848 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2843
	cmpl	$1, %eax	#, which_alternative.2843
	jne	.L2983	#,
.L2982:
	.loc 1 11848 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp215
	movq	%rax, %rdi	# tmp215,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57294
	je	.L2984	#,
	movq	-8(%rbp), %rax	# insn, tmp216
	movq	%rax, %rdi	# tmp216,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57294
	jne	.L2983	#,
.L2984:
	.loc 1 11850 0 is_stmt 1
	movl	$1, %eax	#, D.57290
	jmp	.L2938	#
.L2983:
	.loc 1 11852 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2844
	testl	%eax, %eax	# which_alternative.2844
	je	.L2985	#,
	.loc 1 11852 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2845
	cmpl	$1, %eax	#, which_alternative.2845
	jne	.L2986	#,
.L2985:
	.loc 1 11852 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp217
	movq	%rax, %rdi	# tmp217,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57294
	jne	.L2986	#,
	.loc 1 11854 0 is_stmt 1
	movl	$5, %eax	#, D.57290
	jmp	.L2938	#
.L2986:
	.loc 1 11856 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2846
	testl	%eax, %eax	# which_alternative.2846
	je	.L2987	#,
	.loc 1 11856 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2847
	cmpl	$1, %eax	#, which_alternative.2847
	jne	.L2988	#,
.L2987:
	.loc 1 11856 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57293
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	register_operand	#
	testl	%eax, %eax	# D.57291
	jne	.L2989	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57293
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57291
	je	.L2988	#,
.L2989:
	.loc 1 11858 0 is_stmt 1
	movl	$1, %eax	#, D.57290
	jmp	.L2938	#
.L2988:
	.loc 1 11860 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2848
	testl	%eax, %eax	# which_alternative.2848
	je	.L2990	#,
	.loc 1 11860 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2849
	cmpl	$1, %eax	#, which_alternative.2849
	jne	.L2991	#,
.L2990:
	.loc 1 11862 0 is_stmt 1
	movl	$4, %eax	#, D.57290
	jmp	.L2938	#
.L2991:
	.loc 1 11866 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2918:
	.loc 1 11876 0
	movq	-8(%rbp), %rax	# insn, tmp218
	movq	%rax, %rdi	# tmp218,
	call	extract_constrain_insn_cached	#
	.loc 1 11877 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2850
	testl	%eax, %eax	# which_alternative.2850
	je	.L2992	#,
	.loc 1 11877 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2851
	cmpl	$1, %eax	#, which_alternative.2851
	je	.L2992	#,
	.loc 1 11877 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2852
	cmpl	$2, %eax	#, which_alternative.2852
	jne	.L2993	#,
.L2992:
	movq	-8(%rbp), %rax	# insn, tmp219
	movq	%rax, %rdi	# tmp219,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57294
	je	.L2994	#,
	movq	-8(%rbp), %rax	# insn, tmp220
	movq	%rax, %rdi	# tmp220,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57294
	jne	.L2993	#,
.L2994:
	.loc 1 11879 0 is_stmt 1
	movl	$1, %eax	#, D.57290
	jmp	.L2938	#
.L2993:
	.loc 1 11881 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2853
	testl	%eax, %eax	# which_alternative.2853
	je	.L2995	#,
	.loc 1 11881 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2854
	cmpl	$1, %eax	#, which_alternative.2854
	je	.L2995	#,
	.loc 1 11881 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2855
	cmpl	$2, %eax	#, which_alternative.2855
	jne	.L2996	#,
.L2995:
	movq	-8(%rbp), %rax	# insn, tmp221
	movq	%rax, %rdi	# tmp221,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57294
	jne	.L2996	#,
	.loc 1 11883 0 is_stmt 1
	movl	$5, %eax	#, D.57290
	jmp	.L2938	#
.L2996:
	.loc 1 11885 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2856
	testl	%eax, %eax	# which_alternative.2856
	je	.L2997	#,
	.loc 1 11885 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2857
	cmpl	$1, %eax	#, which_alternative.2857
	je	.L2997	#,
	.loc 1 11885 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2858
	cmpl	$2, %eax	#, which_alternative.2858
	jne	.L2998	#,
.L2997:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57293
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	register_operand	#
	testl	%eax, %eax	# D.57291
	jne	.L2999	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57293
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57293,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57291
	je	.L2998	#,
.L2999:
	.loc 1 11887 0 is_stmt 1
	movl	$1, %eax	#, D.57290
	jmp	.L2938	#
.L2998:
	.loc 1 11889 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2859
	testl	%eax, %eax	# which_alternative.2859
	je	.L3000	#,
	.loc 1 11889 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2860
	cmpl	$1, %eax	#, which_alternative.2860
	je	.L3000	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2861
	cmpl	$2, %eax	#, which_alternative.2861
	jne	.L3001	#,
.L3000:
	.loc 1 11891 0 is_stmt 1
	movl	$4, %eax	#, D.57290
	jmp	.L2938	#
.L3001:
	.loc 1 11895 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2917:
	.loc 1 11900 0
	movq	-8(%rbp), %rax	# insn, tmp222
	movq	%rax, %rdi	# tmp222,
	call	extract_constrain_insn_cached	#
	.loc 1 11901 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2862
	testl	%eax, %eax	# which_alternative.2862
	jne	.L3002	#,
	.loc 1 11903 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L3002:
	.loc 1 11907 0
	movl	$0, %eax	#, D.57290
	jmp	.L2938	#
.L2916:
	.loc 1 11927 0
	movl	$3, %eax	#, D.57290
	jmp	.L2938	#
.L2923:
	.loc 1 11968 0
	movl	$2, %eax	#, D.57290
	jmp	.L2938	#
.L2914:
	.loc 1 11971 0
	movq	-8(%rbp), %rax	# insn, tmp223
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57293
	movzwl	(%rax), %eax	# _171->code, D.57295
	cmpw	$40, %ax	#, D.57295
	je	.L2913	#,
	.loc 1 11972 0
	movq	-8(%rbp), %rax	# insn, tmp224
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57293
	movq	%rax, %rdi	# D.57293,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57291
	jns	.L2913	#,
	.loc 1 11973 0
	movq	-8(%rbp), %rax	# insn, tmp225
	movl	$__FUNCTION__.15010, %ecx	#,
	movl	$11973, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp225,
	call	_fatal_insn_not_found	#
.L2913:
	.loc 1 11975 0
	movl	$0, %eax	#, D.57290
.L2938:
	.loc 1 11978 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE47:
	.size	get_attr_athlon_fpunits, .-get_attr_athlon_fpunits
	.globl	get_attr_athlon_decode
	.type	get_attr_athlon_decode, @function
get_attr_athlon_decode:
.LFB48:
	.loc 1 11984 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 11985 0
	movq	-8(%rbp), %rax	# insn, tmp108
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57297
	testl	%eax, %eax	# D.57297
	js	.L3004	#,
	.loc 1 11985 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp109
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2863
	jmp	.L3005	#
.L3004:
	.loc 1 11985 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp110
	movq	%rax, %rdi	# tmp110,
	call	recog_memoized_1	#
.L3005:
	.loc 1 11985 0 discriminator 3
	addl	$1, %eax	#, tmp111
	cmpl	$806, %eax	#, tmp111
	ja	.L3006	#,
	movl	%eax, %eax	# tmp111, tmp112
	movq	.L3008(,%rax,8), %rax	#, tmp113
	jmp	*%rax	# tmp113
	.section	.rodata
	.align 8
	.align 4
.L3008:
	.quad	.L3007
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3010
	.quad	.L3010
	.quad	.L3010
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3010
	.quad	.L3010
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3010
	.quad	.L3010
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3011
	.quad	.L3010
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3012
	.quad	.L3013
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3014
	.quad	.L3014
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3015
	.quad	.L3015
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3016
	.quad	.L3016
	.quad	.L3016
	.quad	.L3016
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3017
	.quad	.L3006
	.quad	.L3018
	.quad	.L3018
	.quad	.L3018
	.quad	.L3018
	.quad	.L3019
	.quad	.L3020
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3019
	.quad	.L3006
	.quad	.L3019
	.quad	.L3006
	.quad	.L3019
	.quad	.L3006
	.quad	.L3019
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3019
	.quad	.L3021
	.quad	.L3006
	.quad	.L3019
	.quad	.L3021
	.quad	.L3006
	.quad	.L3019
	.quad	.L3021
	.quad	.L3006
	.quad	.L3019
	.quad	.L3021
	.quad	.L3006
	.quad	.L3022
	.quad	.L3022
	.quad	.L3022
	.quad	.L3022
	.quad	.L3022
	.quad	.L3022
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3023
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3009
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3024
	.quad	.L3006
	.quad	.L3006
	.quad	.L3024
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3012
	.quad	.L3009
	.quad	.L3012
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.quad	.L3009
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3012
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3006
	.quad	.L3009
	.text
.L3024:
	.loc 1 11989 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp114
	movq	%rax, %rdi	# tmp114,
	call	extract_constrain_insn_cached	#
	.loc 1 11990 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2864
	testl	%eax, %eax	# which_alternative.2864
	jne	.L3025	#,
	.loc 1 11992 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3025:
	.loc 1 11996 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3023:
	.loc 1 12000 0
	movq	-8(%rbp), %rax	# insn, tmp115
	movq	%rax, %rdi	# tmp115,
	call	get_attr_type	#
	cmpl	$1, %eax	#, D.57298
	jne	.L3027	#,
	.loc 1 12002 0
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3027:
	.loc 1 12006 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3022:
	.loc 1 12015 0
	movq	-8(%rbp), %rax	# insn, tmp116
	movq	%rax, %rdi	# tmp116,
	call	extract_constrain_insn_cached	#
	.loc 1 12016 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2865
	testl	%eax, %eax	# which_alternative.2865
	jne	.L3028	#,
	.loc 1 12016 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp117
	movq	%rax, %rdi	# tmp117,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57299
	je	.L3028	#,
	movq	-8(%rbp), %rax	# insn, tmp118
	movq	%rax, %rdi	# tmp118,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57299
	jne	.L3029	#,
.L3028:
	.loc 1 12018 0 is_stmt 1
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3029:
	.loc 1 12022 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3021:
	.loc 1 12029 0
	movq	-8(%rbp), %rax	# insn, tmp119
	movq	%rax, %rdi	# tmp119,
	call	extract_constrain_insn_cached	#
	.loc 1 12030 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2866
	cmpl	$1, %eax	#, which_alternative.2866
	jne	.L3030	#,
	.loc 1 12032 0
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3030:
	.loc 1 12036 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3020:
	.loc 1 12040 0
	movq	-8(%rbp), %rax	# insn, tmp120
	movq	%rax, %rdi	# tmp120,
	call	extract_constrain_insn_cached	#
	.loc 1 12041 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2867
	cmpl	$1, %eax	#, which_alternative.2867
	je	.L3031	#,
	.loc 1 12041 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2868
	cmpl	$2, %eax	#, which_alternative.2868
	je	.L3031	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2869
	cmpl	$3, %eax	#, which_alternative.2869
	jne	.L3032	#,
.L3031:
	.loc 1 12043 0 is_stmt 1
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3032:
	.loc 1 12047 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3019:
	.loc 1 12059 0
	movq	-8(%rbp), %rax	# insn, tmp121
	movq	%rax, %rdi	# tmp121,
	call	extract_constrain_insn_cached	#
	.loc 1 12060 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2870
	testl	%eax, %eax	# which_alternative.2870
	je	.L3033	#,
	.loc 1 12062 0
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3033:
	.loc 1 12066 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3018:
	.loc 1 12073 0
	movq	-8(%rbp), %rax	# insn, tmp122
	movq	%rax, %rdi	# tmp122,
	call	extract_constrain_insn_cached	#
	.loc 1 12074 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2871
	cmpl	$1, %eax	#, which_alternative.2871
	jne	.L3034	#,
	.loc 1 12074 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp123
	movq	%rax, %rdi	# tmp123,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57299
	je	.L3035	#,
	movq	-8(%rbp), %rax	# insn, tmp124
	movq	%rax, %rdi	# tmp124,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57299
	jne	.L3034	#,
.L3035:
	.loc 1 12076 0 is_stmt 1
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3034:
	.loc 1 12080 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3017:
	.loc 1 12084 0
	movq	-8(%rbp), %rax	# insn, tmp125
	movq	%rax, %rdi	# tmp125,
	call	extract_constrain_insn_cached	#
	.loc 1 12085 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2872
	testl	%eax, %eax	# which_alternative.2872
	je	.L3036	#,
	.loc 1 12085 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2873
	cmpl	$1, %eax	#, which_alternative.2873
	jne	.L3037	#,
.L3036:
	.loc 1 12085 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp126
	movq	%rax, %rdi	# tmp126,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57299
	je	.L3038	#,
	.loc 1 12085 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp127
	movq	%rax, %rdi	# tmp127,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57299
	jne	.L3037	#,
.L3038:
	.loc 1 12085 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2874
	cmpl	$1, %eax	#, which_alternative.2874
	jne	.L3037	#,
	.loc 1 12087 0 is_stmt 1
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3037:
	.loc 1 12091 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3016:
	.loc 1 12098 0
	movq	-8(%rbp), %rax	# insn, tmp128
	movq	%rax, %rdi	# tmp128,
	call	extract_constrain_insn_cached	#
	.loc 1 12099 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2875
	cmpl	$3, %eax	#, which_alternative.2875
	je	.L3039	#,
	.loc 1 12099 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2876
	cmpl	$4, %eax	#, which_alternative.2876
	je	.L3039	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2877
	testl	%eax, %eax	# which_alternative.2877
	je	.L3040	#,
	.loc 1 12099 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2878
	cmpl	$1, %eax	#, which_alternative.2878
	je	.L3040	#,
	.loc 1 12099 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2879
	cmpl	$2, %eax	#, which_alternative.2879
	jne	.L3041	#,
.L3040:
	movq	-8(%rbp), %rax	# insn, tmp129
	movq	%rax, %rdi	# tmp129,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57299
	je	.L3039	#,
	movq	-8(%rbp), %rax	# insn, tmp130
	movq	%rax, %rdi	# tmp130,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57299
	jne	.L3041	#,
.L3039:
	.loc 1 12101 0 is_stmt 1
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3041:
	.loc 1 12105 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3015:
	.loc 1 12110 0
	movq	-8(%rbp), %rax	# insn, tmp131
	movq	%rax, %rdi	# tmp131,
	call	extract_constrain_insn_cached	#
	.loc 1 12111 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2880
	testl	%eax, %eax	# which_alternative.2880
	je	.L3042	#,
	.loc 1 12111 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2881
	cmpl	$1, %eax	#, which_alternative.2881
	je	.L3042	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2882
	cmpl	$2, %eax	#, which_alternative.2882
	je	.L3042	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2883
	cmpl	$3, %eax	#, which_alternative.2883
	je	.L3043	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2884
	cmpl	$4, %eax	#, which_alternative.2884
	jne	.L3042	#,
.L3043:
	.loc 1 12113 0 is_stmt 1
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3042:
	.loc 1 12117 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3014:
	.loc 1 12122 0
	movq	-8(%rbp), %rax	# insn, tmp132
	movq	%rax, %rdi	# tmp132,
	call	extract_constrain_insn_cached	#
	.loc 1 12123 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2885
	cmpl	$1, %eax	#, which_alternative.2885
	jne	.L3044	#,
	.loc 1 12123 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57300
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57300,
	call	memory_operand	#
	testl	%eax, %eax	# D.57297
	je	.L3045	#,
.L3044:
	.loc 1 12125 0 is_stmt 1
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3045:
	.loc 1 12129 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3013:
	.loc 1 12133 0
	movq	-8(%rbp), %rax	# insn, tmp133
	movq	%rax, %rdi	# tmp133,
	call	extract_constrain_insn_cached	#
	.loc 1 12134 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2886
	cmpl	$4, %eax	#, which_alternative.2886
	jne	.L3046	#,
	.loc 1 12136 0
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3046:
	.loc 1 12140 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3012:
	.loc 1 12147 0
	movq	-8(%rbp), %rax	# insn, tmp134
	movq	%rax, %rdi	# tmp134,
	call	extract_constrain_insn_cached	#
	.loc 1 12148 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2887
	testl	%eax, %eax	# which_alternative.2887
	je	.L3047	#,
	.loc 1 12148 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2888
	cmpl	$1, %eax	#, which_alternative.2888
	jne	.L3048	#,
.L3047:
	.loc 1 12150 0 is_stmt 1
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3048:
	.loc 1 12154 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3011:
	.loc 1 12158 0
	movq	-8(%rbp), %rax	# insn, tmp135
	movq	%rax, %rdi	# tmp135,
	call	extract_constrain_insn_cached	#
	.loc 1 12159 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2889
	testl	%eax, %eax	# which_alternative.2889
	jne	.L3049	#,
	.loc 1 12159 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57300
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57300,
	call	memory_operand	#
	testl	%eax, %eax	# D.57297
	je	.L3050	#,
.L3049:
	.loc 1 12161 0 is_stmt 1
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3050:
	.loc 1 12165 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3010:
	.loc 1 12176 0
	movq	-8(%rbp), %rax	# insn, tmp136
	movq	%rax, %rdi	# tmp136,
	call	extract_insn_cached	#
	.loc 1 12177 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57300
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57300,
	call	memory_operand	#
	testl	%eax, %eax	# D.57297
	je	.L3051	#,
	.loc 1 12179 0
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3051:
	.loc 1 12183 0
	movl	$0, %eax	#, D.57296
	jmp	.L3026	#
.L3007:
	.loc 1 12187 0
	movq	-8(%rbp), %rax	# insn, tmp137
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57300
	movzwl	(%rax), %eax	# _78->code, D.57301
	cmpw	$40, %ax	#, D.57301
	je	.L3009	#,
	.loc 1 12188 0
	movq	-8(%rbp), %rax	# insn, tmp138
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57300
	movq	%rax, %rdi	# D.57300,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57297
	jns	.L3009	#,
	.loc 1 12189 0
	movq	-8(%rbp), %rax	# insn, tmp139
	movl	$__FUNCTION__.15068, %ecx	#,
	movl	$12189, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp139,
	call	_fatal_insn_not_found	#
.L3009:
	.loc 1 12383 0
	movl	$1, %eax	#, D.57296
	jmp	.L3026	#
.L3006:
	.loc 1 12386 0
	movl	$0, %eax	#, D.57296
.L3026:
	.loc 1 12389 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE48:
	.size	get_attr_athlon_decode, .-get_attr_athlon_decode
	.globl	get_attr_fp_int_src
	.type	get_attr_fp_int_src, @function
get_attr_fp_int_src:
.LFB49:
	.loc 1 12395 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 12396 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57303
	testl	%eax, %eax	# D.57303
	js	.L3053	#,
	.loc 1 12396 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2890
	jmp	.L3054	#
.L3053:
	.loc 1 12396 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L3054:
	.loc 1 12396 0 discriminator 3
	cmpl	$537, %eax	#, iftmp.2890
	jg	.L3056	#,
	cmpl	$536, %eax	#, iftmp.2890
	jge	.L3057	#,
	cmpl	$-1, %eax	#, iftmp.2890
	je	.L3058	#,
	cmpl	$-1, %eax	#, iftmp.2890
	jl	.L3055	#,
	subl	$167, %eax	#, tmp70
	cmpl	$17, %eax	#, tmp70
	ja	.L3055	#,
	.loc 1 12396 0
	jmp	.L3057	#
.L3056:
	.loc 1 12396 0 discriminator 3
	cmpl	$541, %eax	#, iftmp.2890
	jl	.L3055	#,
	cmpl	$542, %eax	#, iftmp.2890
	jle	.L3057	#,
	subl	$547, %eax	#, tmp71
	cmpl	$3, %eax	#, tmp71
	ja	.L3055	#,
.L3057:
	.loc 1 12424 0 is_stmt 1
	movl	$1, %eax	#, D.57302
	jmp	.L3059	#
.L3058:
	.loc 1 12427 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57304
	movzwl	(%rax), %eax	# _8->code, D.57305
	cmpw	$40, %ax	#, D.57305
	je	.L3055	#,
	.loc 1 12428 0
	movq	-8(%rbp), %rax	# insn, tmp73
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57304
	movq	%rax, %rdi	# D.57304,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57303
	jns	.L3055	#,
	.loc 1 12429 0
	movq	-8(%rbp), %rax	# insn, tmp74
	movl	$__FUNCTION__.15295, %ecx	#,
	movl	$12429, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp74,
	call	_fatal_insn_not_found	#
.L3055:
	.loc 1 12431 0
	movl	$0, %eax	#, D.57302
.L3059:
	.loc 1 12434 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE49:
	.size	get_attr_fp_int_src, .-get_attr_fp_int_src
	.globl	get_attr_imm_disp
	.type	get_attr_imm_disp, @function
get_attr_imm_disp:
.LFB50:
	.loc 1 12440 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 12441 0
	movq	-8(%rbp), %rax	# insn, tmp310
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57308
	testl	%eax, %eax	# D.57308
	js	.L3061	#,
	.loc 1 12441 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp311
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2891
	jmp	.L3062	#
.L3061:
	.loc 1 12441 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp312
	movq	%rax, %rdi	# tmp312,
	call	recog_memoized_1	#
.L3062:
	.loc 1 12441 0 discriminator 3
	addl	$1, %eax	#, tmp313
	cmpl	$806, %eax	#, tmp313
	ja	.L3063	#,
	movl	%eax, %eax	# tmp313, tmp314
	movq	.L3065(,%rax,8), %rax	#, tmp315
	jmp	*%rax	# tmp315
	.section	.rodata
	.align 8
	.align 4
.L3065:
	.quad	.L3064
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3068
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3063
	.quad	.L3063
	.quad	.L3069
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3070
	.quad	.L3066
	.quad	.L3066
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3069
	.quad	.L3069
	.quad	.L3066
	.quad	.L3066
	.quad	.L3063
	.quad	.L3069
	.quad	.L3071
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3067
	.quad	.L3072
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3073
	.quad	.L3074
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3075
	.quad	.L3075
	.quad	.L3076
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3077
	.quad	.L3077
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3078
	.quad	.L3078
	.quad	.L3078
	.quad	.L3078
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3079
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3072
	.quad	.L3080
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3072
	.quad	.L3063
	.quad	.L3072
	.quad	.L3063
	.quad	.L3072
	.quad	.L3063
	.quad	.L3072
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3072
	.quad	.L3081
	.quad	.L3063
	.quad	.L3072
	.quad	.L3081
	.quad	.L3063
	.quad	.L3072
	.quad	.L3081
	.quad	.L3063
	.quad	.L3072
	.quad	.L3081
	.quad	.L3063
	.quad	.L3072
	.quad	.L3072
	.quad	.L3072
	.quad	.L3072
	.quad	.L3072
	.quad	.L3072
	.quad	.L3067
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3083
	.quad	.L3084
	.quad	.L3084
	.quad	.L3084
	.quad	.L3084
	.quad	.L3083
	.quad	.L3083
	.quad	.L3085
	.quad	.L3085
	.quad	.L3085
	.quad	.L3085
	.quad	.L3085
	.quad	.L3085
	.quad	.L3086
	.quad	.L3087
	.quad	.L3087
	.quad	.L3087
	.quad	.L3087
	.quad	.L3087
	.quad	.L3088
	.quad	.L3089
	.quad	.L3089
	.quad	.L3089
	.quad	.L3087
	.quad	.L3089
	.quad	.L3089
	.quad	.L3089
	.quad	.L3082
	.quad	.L3067
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3067
	.quad	.L3067
	.quad	.L3082
	.quad	.L3067
	.quad	.L3067
	.quad	.L3082
	.quad	.L3067
	.quad	.L3067
	.quad	.L3082
	.quad	.L3067
	.quad	.L3082
	.quad	.L3082
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3066
	.quad	.L3067
	.quad	.L3067
	.quad	.L3090
	.quad	.L3082
	.quad	.L3091
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3091
	.quad	.L3082
	.quad	.L3082
	.quad	.L3063
	.quad	.L3082
	.quad	.L3063
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3063
	.quad	.L3082
	.quad	.L3063
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3092
	.quad	.L3092
	.quad	.L3067
	.quad	.L3067
	.quad	.L3082
	.quad	.L3092
	.quad	.L3093
	.quad	.L3092
	.quad	.L3094
	.quad	.L3092
	.quad	.L3092
	.quad	.L3092
	.quad	.L3092
	.quad	.L3092
	.quad	.L3092
	.quad	.L3095
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3067
	.quad	.L3067
	.quad	.L3082
	.quad	.L3095
	.quad	.L3095
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3067
	.quad	.L3067
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3082
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3096
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3067
	.quad	.L3082
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3097
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3098
	.quad	.L3099
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.quad	.L3067
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3073
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3063
	.quad	.L3067
	.text
.L3099:
	.loc 1 12444 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp316
	movq	%rax, %rdi	# tmp316,
	call	extract_constrain_insn_cached	#
	.loc 1 12445 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2892
	cmpl	$1, %eax	#, which_alternative.2892
	jne	.L3100	#,
	.loc 1 12445 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	const0_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3100	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3100	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3101	#,
.L3100:
	.loc 1 12445 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2893
	testl	%eax, %eax	# which_alternative.2893
	jne	.L3102	#,
	.loc 1 12445 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3102	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3102	#,
.L3101:
	.loc 1 12447 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3102:
	.loc 1 12451 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3098:
	.loc 1 12455 0
	movq	-8(%rbp), %rax	# insn, tmp317
	movq	%rax, %rdi	# tmp317,
	call	extract_constrain_insn_cached	#
	.loc 1 12456 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2894
	cmpl	$1, %eax	#, which_alternative.2894
	jne	.L3104	#,
	.loc 1 12456 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	const0_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3104	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3104	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3105	#,
.L3104:
	.loc 1 12456 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2895
	testl	%eax, %eax	# which_alternative.2895
	jne	.L3106	#,
	.loc 1 12456 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3106	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3106	#,
.L3105:
	.loc 1 12458 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3106:
	.loc 1 12462 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3097:
	.loc 1 12466 0
	movq	-8(%rbp), %rax	# insn, tmp318
	movq	%rax, %rdi	# tmp318,
	call	extract_constrain_insn_cached	#
	.loc 1 12467 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2896
	cmpl	$2, %eax	#, which_alternative.2896
	je	.L3107	#,
	.loc 1 12467 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2897
	cmpl	$3, %eax	#, which_alternative.2897
	jne	.L3108	#,
.L3107:
	.loc 1 12469 0 is_stmt 1
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3108:
	.loc 1 12473 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3096:
	.loc 1 12477 0
	movq	-8(%rbp), %rax	# insn, tmp319
	movq	%rax, %rdi	# tmp319,
	call	get_attr_type	#
	cmpl	$1, %eax	#, D.57310
	jne	.L3109	#,
	.loc 1 12479 0
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3109:
	.loc 1 12483 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3095:
	.loc 1 12489 0
	movq	-8(%rbp), %rax	# insn, tmp320
	movq	%rax, %rdi	# tmp320,
	call	extract_constrain_insn_cached	#
	.loc 1 12490 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2898
	cmpl	$1, %eax	#, which_alternative.2898
	jne	.L3110	#,
	.loc 1 12490 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3110	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3110	#,
	.loc 1 12492 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3110:
	.loc 1 12496 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3094:
	.loc 1 12500 0
	movq	-8(%rbp), %rax	# insn, tmp321
	movq	%rax, %rdi	# tmp321,
	call	extract_constrain_insn_cached	#
	.loc 1 12501 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2899
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2900
	movl	%eax, %ecx	# ix86_cpu.2901, tmp358
	sarl	%cl, %edx	# tmp358, D.57308
	movl	%edx, %eax	# D.57308, D.57308
	andl	$1, %eax	#, D.57308
	testl	%eax, %eax	# D.57308
	je	.L3111	#,
	.loc 1 12501 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	const1_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3112	#,
.L3111:
	.loc 1 12501 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2902
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2903
	movl	%eax, %ecx	# ix86_cpu.2904, tmp360
	sarl	%cl, %edx	# tmp360, D.57308
	movl	%edx, %eax	# D.57308, D.57308
	andl	$1, %eax	#, D.57308
	testl	%eax, %eax	# D.57308
	je	.L3112	#,
	.loc 1 12501 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	const1_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3113	#,
.L3112:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3113	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3113	#,
	.loc 1 12503 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3113:
	.loc 1 12507 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3093:
	.loc 1 12511 0
	movq	-8(%rbp), %rax	# insn, tmp322
	movq	%rax, %rdi	# tmp322,
	call	extract_constrain_insn_cached	#
	.loc 1 12512 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2905
	testl	%eax, %eax	# which_alternative.2905
	jne	.L3114	#,
	.loc 1 12512 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2906
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2907
	movl	%eax, %ecx	# ix86_cpu.2908, tmp362
	sarl	%cl, %edx	# tmp362, D.57308
	movl	%edx, %eax	# D.57308, D.57308
	andl	$1, %eax	#, D.57308
	testl	%eax, %eax	# D.57308
	je	.L3115	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	const1_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3116	#,
.L3115:
	.loc 1 12512 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.2909
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2910
	movl	%eax, %ecx	# ix86_cpu.2911, tmp364
	sarl	%cl, %edx	# tmp364, D.57308
	movl	%edx, %eax	# D.57308, D.57308
	andl	$1, %eax	#, D.57308
	testl	%eax, %eax	# D.57308
	je	.L3116	#,
	.loc 1 12512 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	const1_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3114	#,
.L3116:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3114	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3114	#,
	.loc 1 12514 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3114:
	.loc 1 12518 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3092:
	.loc 1 12531 0
	movq	-8(%rbp), %rax	# insn, tmp323
	movq	%rax, %rdi	# tmp323,
	call	extract_insn_cached	#
	.loc 1 12532 0
	movq	-8(%rbp), %rax	# insn, tmp324
	movq	%rax, %rdi	# tmp324,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57310
	je	.L3117	#,
	.loc 1 12532 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp325
	movq	%rax, %rdi	# tmp325,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57310
	jne	.L3118	#,
.L3117:
	.loc 1 12532 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3118	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3118	#,
	.loc 1 12534 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3118:
	.loc 1 12538 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3091:
	.loc 1 12543 0
	movq	-8(%rbp), %rax	# insn, tmp326
	movq	%rax, %rdi	# tmp326,
	call	extract_constrain_insn_cached	#
	.loc 1 12544 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2912
	testl	%eax, %eax	# which_alternative.2912
	je	.L3119	#,
	.loc 1 12544 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2913
	cmpl	$1, %eax	#, which_alternative.2913
	jne	.L3120	#,
.L3119:
	.loc 1 12544 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3120	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3120	#,
	.loc 1 12546 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3120:
	.loc 1 12550 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3090:
	.loc 1 12554 0
	movq	-8(%rbp), %rax	# insn, tmp327
	movq	%rax, %rdi	# tmp327,
	call	extract_constrain_insn_cached	#
	.loc 1 12555 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2914
	testl	%eax, %eax	# which_alternative.2914
	je	.L3121	#,
	.loc 1 12555 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2915
	cmpl	$1, %eax	#, which_alternative.2915
	je	.L3121	#,
	.loc 1 12555 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2916
	cmpl	$2, %eax	#, which_alternative.2916
	jne	.L3122	#,
.L3121:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3122	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3122	#,
	.loc 1 12557 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3122:
	.loc 1 12561 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3089:
	.loc 1 12570 0
	movq	-8(%rbp), %rax	# insn, tmp328
	movq	%rax, %rdi	# tmp328,
	call	extract_insn_cached	#
	.loc 1 12571 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3123	#,
	.loc 1 12571 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3123	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3123	#,
	.loc 1 12573 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3123:
	.loc 1 12577 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3088:
	.loc 1 12581 0
	movq	-8(%rbp), %rax	# insn, tmp329
	movq	%rax, %rdi	# tmp329,
	call	extract_constrain_insn_cached	#
	.loc 1 12582 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2917
	cmpl	$3, %eax	#, which_alternative.2917
	je	.L3124	#,
	.loc 1 12582 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3124	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3124	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3124	#,
	.loc 1 12584 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3124:
	.loc 1 12588 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3087:
	.loc 1 12597 0
	movq	-8(%rbp), %rax	# insn, tmp330
	movq	%rax, %rdi	# tmp330,
	call	extract_insn_cached	#
	.loc 1 12598 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3125	#,
	.loc 1 12598 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3125	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3125	#,
	.loc 1 12600 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3125:
	.loc 1 12604 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3086:
	.loc 1 12608 0
	movq	-8(%rbp), %rax	# insn, tmp331
	movq	%rax, %rdi	# tmp331,
	call	extract_constrain_insn_cached	#
	.loc 1 12609 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2918
	cmpl	$2, %eax	#, which_alternative.2918
	je	.L3126	#,
	.loc 1 12609 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3126	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3126	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3126	#,
	.loc 1 12611 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3126:
	.loc 1 12615 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3085:
	.loc 1 12624 0
	movq	-8(%rbp), %rax	# insn, tmp332
	movq	%rax, %rdi	# tmp332,
	call	extract_insn_cached	#
	.loc 1 12625 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3127	#,
	.loc 1 12625 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3127	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3127	#,
	.loc 1 12627 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3127:
	.loc 1 12631 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3084:
	.loc 1 12638 0
	movq	-8(%rbp), %rax	# insn, tmp333
	movq	%rax, %rdi	# tmp333,
	call	extract_insn_cached	#
	.loc 1 12639 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3128	#,
	.loc 1 12639 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3128	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3128	#,
	.loc 1 12641 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3128:
	.loc 1 12645 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3083:
	.loc 1 12651 0
	movq	-8(%rbp), %rax	# insn, tmp334
	movq	%rax, %rdi	# tmp334,
	call	extract_insn_cached	#
	.loc 1 12652 0
	movq	-8(%rbp), %rax	# insn, tmp335
	movq	%rax, %rdi	# tmp335,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57310
	jne	.L3129	#,
	.loc 1 12652 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3129	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3129	#,
	.loc 1 12654 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3129:
	.loc 1 12658 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3082:
	.loc 1 12820 0
	movq	-8(%rbp), %rax	# insn, tmp336
	movq	%rax, %rdi	# tmp336,
	call	extract_insn_cached	#
	.loc 1 12821 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3130	#,
	.loc 1 12821 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3130	#,
	.loc 1 12823 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3130:
	.loc 1 12827 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3081:
	.loc 1 12834 0
	movq	-8(%rbp), %rax	# insn, tmp337
	movq	%rax, %rdi	# tmp337,
	call	extract_constrain_insn_cached	#
	.loc 1 12835 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2919
	cmpl	$1, %eax	#, which_alternative.2919
	jne	.L3131	#,
	.loc 1 12837 0
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3131:
	.loc 1 12841 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3080:
	.loc 1 12845 0
	movq	-8(%rbp), %rax	# insn, tmp338
	movq	%rax, %rdi	# tmp338,
	call	extract_constrain_insn_cached	#
	.loc 1 12846 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2920
	cmpl	$1, %eax	#, which_alternative.2920
	je	.L3132	#,
	.loc 1 12846 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2921
	cmpl	$2, %eax	#, which_alternative.2921
	je	.L3132	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2922
	cmpl	$3, %eax	#, which_alternative.2922
	jne	.L3133	#,
.L3132:
	.loc 1 12848 0 is_stmt 1
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3133:
	.loc 1 12852 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3079:
	.loc 1 12856 0
	movq	-8(%rbp), %rax	# insn, tmp339
	movq	%rax, %rdi	# tmp339,
	call	extract_constrain_insn_cached	#
	.loc 1 12857 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2923
	cmpl	$1, %eax	#, which_alternative.2923
	jne	.L3134	#,
	.loc 1 12857 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3134	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3134	#,
	.loc 1 12859 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3134:
	.loc 1 12863 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3078:
	.loc 1 12870 0
	movq	-8(%rbp), %rax	# insn, tmp340
	movq	%rax, %rdi	# tmp340,
	call	extract_constrain_insn_cached	#
	.loc 1 12871 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2924
	cmpl	$3, %eax	#, which_alternative.2924
	je	.L3135	#,
	.loc 1 12871 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2925
	cmpl	$4, %eax	#, which_alternative.2925
	jne	.L3136	#,
.L3135:
	.loc 1 12873 0 is_stmt 1
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3136:
	.loc 1 12877 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3077:
	.loc 1 12882 0
	movq	-8(%rbp), %rax	# insn, tmp341
	movq	%rax, %rdi	# tmp341,
	call	extract_constrain_insn_cached	#
	.loc 1 12883 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2926
	testl	%eax, %eax	# which_alternative.2926
	je	.L3137	#,
	.loc 1 12883 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2927
	cmpl	$1, %eax	#, which_alternative.2927
	je	.L3137	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2928
	cmpl	$2, %eax	#, which_alternative.2928
	je	.L3137	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2929
	cmpl	$3, %eax	#, which_alternative.2929
	je	.L3138	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2930
	cmpl	$4, %eax	#, which_alternative.2930
	jne	.L3137	#,
.L3138:
	.loc 1 12885 0 is_stmt 1
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3137:
	.loc 1 12889 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3076:
	.loc 1 12893 0
	movq	-8(%rbp), %rax	# insn, tmp342
	movq	%rax, %rdi	# tmp342,
	call	extract_constrain_insn_cached	#
	.loc 1 12894 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2931
	testl	%eax, %eax	# which_alternative.2931
	je	.L3139	#,
	.loc 1 12894 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2932
	cmpl	$1, %eax	#, which_alternative.2932
	je	.L3139	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2933
	cmpl	$2, %eax	#, which_alternative.2933
	je	.L3139	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2934
	cmpl	$3, %eax	#, which_alternative.2934
	je	.L3140	#,
	.loc 1 12894 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2935
	cmpl	$4, %eax	#, which_alternative.2935
	jne	.L3139	#,
.L3140:
	.loc 1 12894 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3139	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3139	#,
	.loc 1 12896 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3139:
	.loc 1 12900 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3075:
	.loc 1 12905 0
	movq	-8(%rbp), %rax	# insn, tmp343
	movq	%rax, %rdi	# tmp343,
	call	extract_constrain_insn_cached	#
	.loc 1 12906 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2936
	cmpl	$1, %eax	#, which_alternative.2936
	je	.L3141	#,
	.loc 1 12908 0
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3141:
	.loc 1 12912 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3074:
	.loc 1 12916 0
	movq	-8(%rbp), %rax	# insn, tmp344
	movq	%rax, %rdi	# tmp344,
	call	extract_constrain_insn_cached	#
	.loc 1 12917 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2937
	cmpl	$4, %eax	#, which_alternative.2937
	jne	.L3142	#,
	.loc 1 12919 0
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3142:
	.loc 1 12921 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2938
	cmpl	$5, %eax	#, which_alternative.2938
	je	.L3143	#,
	.loc 1 12921 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2939
	cmpl	$6, %eax	#, which_alternative.2939
	je	.L3143	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2940
	cmpl	$7, %eax	#, which_alternative.2940
	je	.L3143	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2941
	cmpl	$8, %eax	#, which_alternative.2941
	je	.L3143	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.2942
	testl	%eax, %eax	# flag_pic.2942
	je	.L3144	#,
	.loc 1 12921 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3143	#,
.L3144:
	.loc 1 12921 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3143	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3143	#,
	.loc 1 12923 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3143:
	.loc 1 12927 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3073:
	.loc 1 12932 0
	movq	-8(%rbp), %rax	# insn, tmp345
	movq	%rax, %rdi	# tmp345,
	call	extract_constrain_insn_cached	#
	.loc 1 12933 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2943
	testl	%eax, %eax	# which_alternative.2943
	je	.L3145	#,
	.loc 1 12933 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2944
	cmpl	$1, %eax	#, which_alternative.2944
	jne	.L3146	#,
.L3145:
	.loc 1 12935 0 is_stmt 1
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3146:
	.loc 1 12939 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3072:
	.loc 1 12958 0
	movq	-8(%rbp), %rax	# insn, tmp346
	movq	%rax, %rdi	# tmp346,
	call	extract_constrain_insn_cached	#
	.loc 1 12959 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2945
	testl	%eax, %eax	# which_alternative.2945
	je	.L3147	#,
	.loc 1 12961 0
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3147:
	.loc 1 12965 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3071:
	.loc 1 12969 0
	movq	-8(%rbp), %rax	# insn, tmp347
	movq	%rax, %rdi	# tmp347,
	call	extract_constrain_insn_cached	#
	.loc 1 12970 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3148	#,
	.loc 1 12970 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2946
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2947
	movl	%eax, %ecx	# ix86_cpu.2948, tmp366
	sarl	%cl, %edx	# tmp366, D.57308
	movl	%edx, %eax	# D.57308, D.57308
	andl	$1, %eax	#, D.57308
	testl	%eax, %eax	# D.57308
	jne	.L3148	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3148	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3148	#,
	.loc 1 12972 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3148:
	.loc 1 12976 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3070:
	.loc 1 12980 0
	movq	-8(%rbp), %rax	# insn, tmp348
	movq	%rax, %rdi	# tmp348,
	call	extract_constrain_insn_cached	#
	.loc 1 12981 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2949
	cmpl	$3, %eax	#, which_alternative.2949
	jne	.L3149	#,
	.loc 1 12981 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2950
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2951
	movl	%eax, %ecx	# ix86_cpu.2952, tmp368
	sarl	%cl, %edx	# tmp368, D.57308
	movl	%edx, %eax	# D.57308, D.57308
	andl	$1, %eax	#, D.57308
	testl	%eax, %eax	# D.57308
	je	.L3150	#,
	.loc 1 12981 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2953
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2954
	movl	%eax, %ecx	# ix86_cpu.2955, tmp370
	sarl	%cl, %edx	# tmp370, D.57308
	movl	%edx, %eax	# D.57308, D.57308
	andl	$1, %eax	#, D.57308
	testl	%eax, %eax	# D.57308
	je	.L3150	#,
.L3149:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2956
	cmpl	$3, %eax	#, which_alternative.2956
	jne	.L3151	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.2957
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2958
	movl	%eax, %ecx	# ix86_cpu.2959, tmp372
	sarl	%cl, %edx	# tmp372, D.57308
	movl	%edx, %eax	# D.57308, D.57308
	andl	$1, %eax	#, D.57308
	testl	%eax, %eax	# D.57308
	je	.L3152	#,
	.loc 1 12981 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.2960
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2961
	movl	%eax, %ecx	# ix86_cpu.2962, tmp374
	sarl	%cl, %edx	# tmp374, D.57308
	movl	%edx, %eax	# D.57308, D.57308
	andl	$1, %eax	#, D.57308
	testl	%eax, %eax	# D.57308
	je	.L3152	#,
.L3151:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2963
	cmpl	$3, %eax	#, which_alternative.2963
	je	.L3152	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2964
	cmpl	$5, %eax	#, which_alternative.2964
	je	.L3152	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.2965
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.2966
	movl	%eax, %ecx	# ix86_cpu.2967, tmp376
	sarl	%cl, %edx	# tmp376, D.57308
	movl	%edx, %eax	# D.57308, D.57308
	andl	$1, %eax	#, D.57308
	testl	%eax, %eax	# D.57308
	je	.L3150	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2968
	cmpl	$2, %eax	#, which_alternative.2968
	je	.L3152	#,
.L3150:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3152	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3152	#,
	.loc 1 12983 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3152:
	.loc 1 12987 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3069:
	.loc 1 12994 0
	movq	-8(%rbp), %rax	# insn, tmp349
	movq	%rax, %rdi	# tmp349,
	call	extract_insn_cached	#
	.loc 1 12995 0
	movq	-8(%rbp), %rax	# insn, tmp350
	movq	%rax, %rdi	# tmp350,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57310
	jne	.L3153	#,
	.loc 1 12995 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3153	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3153	#,
	.loc 1 12997 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3153:
	.loc 1 13001 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3068:
	.loc 1 13005 0
	movq	-8(%rbp), %rax	# insn, tmp351
	movq	%rax, %rdi	# tmp351,
	call	extract_constrain_insn_cached	#
	.loc 1 13006 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2969
	cmpl	$4, %eax	#, which_alternative.2969
	je	.L3154	#,
	.loc 1 13006 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2970
	cmpl	$5, %eax	#, which_alternative.2970
	je	.L3154	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2971
	cmpl	$6, %eax	#, which_alternative.2971
	je	.L3154	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2972
	cmpl	$7, %eax	#, which_alternative.2972
	je	.L3154	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2973
	cmpl	$8, %eax	#, which_alternative.2973
	je	.L3154	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2974
	cmpl	$9, %eax	#, which_alternative.2974
	je	.L3154	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.2975
	testl	%eax, %eax	# flag_pic.2975
	je	.L3155	#,
	.loc 1 13006 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57308
	jne	.L3154	#,
.L3155:
	.loc 1 13006 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3154	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3154	#,
	.loc 1 13008 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3154:
	.loc 1 13012 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3066:
	.loc 1 13059 0
	movq	-8(%rbp), %rax	# insn, tmp352
	movq	%rax, %rdi	# tmp352,
	call	extract_insn_cached	#
	.loc 1 13060 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	memory_displacement_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3156	#,
	.loc 1 13060 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57309
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57309,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57308
	je	.L3156	#,
	.loc 1 13062 0 is_stmt 1
	movl	$1, %eax	#, D.57307
	jmp	.L3103	#
.L3156:
	.loc 1 13066 0
	movl	$0, %eax	#, D.57307
	jmp	.L3103	#
.L3064:
	.loc 1 13070 0
	movq	-8(%rbp), %rax	# insn, tmp353
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57309
	movzwl	(%rax), %eax	# _317->code, D.57311
	cmpw	$40, %ax	#, D.57311
	je	.L3067	#,
	.loc 1 13071 0
	movq	-8(%rbp), %rax	# insn, tmp354
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57309
	movq	%rax, %rdi	# D.57309,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57308
	jns	.L3067	#,
	.loc 1 13072 0
	movq	-8(%rbp), %rax	# insn, tmp355
	movl	$__FUNCTION__.15596, %ecx	#,
	movl	$13072, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp355,
	call	_fatal_insn_not_found	#
.L3067:
	.loc 1 13180 0
	movl	$2, %eax	#, D.57307
	jmp	.L3103	#
.L3063:
	.loc 1 13183 0
	movl	$0, %eax	#, D.57307
.L3103:
	.loc 1 13186 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE50:
	.size	get_attr_imm_disp, .-get_attr_imm_disp
	.globl	get_attr_i387
	.type	get_attr_i387, @function
get_attr_i387:
.LFB51:
	.loc 1 13192 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 13193 0
	movq	-8(%rbp), %rax	# insn, tmp100
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57312
	testl	%eax, %eax	# D.57312
	js	.L3158	#,
	.loc 1 13193 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp101
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2976
	jmp	.L3159	#
.L3158:
	.loc 1 13193 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp102
	movq	%rax, %rdi	# tmp102,
	call	recog_memoized_1	#
.L3159:
	.loc 1 13193 0 discriminator 3
	addl	$1, %eax	#, tmp103
	cmpl	$623, %eax	#, tmp103
	ja	.L3160	#,
	movl	%eax, %eax	# tmp103, tmp104
	movq	.L3162(,%rax,8), %rax	#, tmp105
	jmp	*%rax	# tmp105
	.section	.rodata
	.align 8
	.align 4
.L3162:
	.quad	.L3161
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3160
	.quad	.L3163
	.quad	.L3163
	.quad	.L3160
	.quad	.L3160
	.quad	.L3163
	.quad	.L3160
	.quad	.L3160
	.quad	.L3163
	.quad	.L3160
	.quad	.L3163
	.quad	.L3164
	.quad	.L3160
	.quad	.L3163
	.quad	.L3164
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3165
	.quad	.L3163
	.quad	.L3160
	.quad	.L3160
	.quad	.L3165
	.quad	.L3165
	.quad	.L3163
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3165
	.quad	.L3165
	.quad	.L3165
	.quad	.L3165
	.quad	.L3163
	.quad	.L3163
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3166
	.quad	.L3160
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3164
	.quad	.L3164
	.quad	.L3167
	.quad	.L3163
	.quad	.L3160
	.quad	.L3164
	.quad	.L3163
	.quad	.L3164
	.quad	.L3163
	.quad	.L3164
	.quad	.L3163
	.quad	.L3164
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3160
	.quad	.L3160
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3160
	.quad	.L3160
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3164
	.quad	.L3164
	.quad	.L3160
	.quad	.L3164
	.quad	.L3164
	.quad	.L3160
	.quad	.L3164
	.quad	.L3164
	.quad	.L3160
	.quad	.L3164
	.quad	.L3164
	.quad	.L3160
	.quad	.L3164
	.quad	.L3164
	.quad	.L3164
	.quad	.L3164
	.quad	.L3164
	.quad	.L3164
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3163
	.quad	.L3164
	.quad	.L3160
	.quad	.L3163
	.quad	.L3164
	.quad	.L3160
	.quad	.L3163
	.quad	.L3163
	.quad	.L3168
	.quad	.L3169
	.quad	.L3160
	.quad	.L3168
	.quad	.L3168
	.quad	.L3170
	.quad	.L3171
	.quad	.L3160
	.quad	.L3170
	.quad	.L3170
	.quad	.L3170
	.quad	.L3170
	.quad	.L3172
	.quad	.L3173
	.quad	.L3172
	.quad	.L3173
	.quad	.L3172
	.quad	.L3173
	.quad	.L3172
	.quad	.L3173
	.quad	.L3172
	.quad	.L3173
	.quad	.L3172
	.quad	.L3173
	.quad	.L3172
	.quad	.L3173
	.quad	.L3164
	.quad	.L3160
	.quad	.L3163
	.quad	.L3164
	.quad	.L3160
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3163
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3160
	.quad	.L3166
	.quad	.L3166
	.quad	.L3166
	.quad	.L3163
	.quad	.L3163
	.text
.L3173:
	.loc 1 13202 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp106
	movq	%rax, %rdi	# tmp106,
	call	extract_insn_cached	#
	.loc 1 13203 0
	movq	-8(%rbp), %rax	# insn, tmp107
	movq	%rax, %rdi	# tmp107,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57313
	je	.L3174	#,
	.loc 1 13203 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57314
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57314,
	call	mult_operator	#
	testl	%eax, %eax	# D.57312
	jne	.L3174	#,
	movq	-8(%rbp), %rax	# insn, tmp108
	movq	%rax, %rdi	# tmp108,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57313
	jne	.L3175	#,
.L3174:
	.loc 1 13205 0 is_stmt 1
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3175:
	.loc 1 13209 0
	movl	$0, %eax	#, D.57312
	jmp	.L3176	#
.L3172:
	.loc 1 13219 0
	movq	-8(%rbp), %rax	# insn, tmp109
	movq	%rax, %rdi	# tmp109,
	call	extract_insn_cached	#
	.loc 1 13220 0
	movq	-8(%rbp), %rax	# insn, tmp110
	movq	%rax, %rdi	# tmp110,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57313
	je	.L3177	#,
	.loc 1 13220 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57314
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57314,
	call	mult_operator	#
	testl	%eax, %eax	# D.57312
	jne	.L3177	#,
	movq	-8(%rbp), %rax	# insn, tmp111
	movq	%rax, %rdi	# tmp111,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57313
	jne	.L3178	#,
.L3177:
	.loc 1 13222 0 is_stmt 1
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3178:
	.loc 1 13226 0
	movl	$0, %eax	#, D.57312
	jmp	.L3176	#
.L3171:
	.loc 1 13230 0
	movq	-8(%rbp), %rax	# insn, tmp112
	movq	%rax, %rdi	# tmp112,
	call	extract_constrain_insn_cached	#
	.loc 1 13231 0
	movq	-8(%rbp), %rax	# insn, tmp113
	movq	%rax, %rdi	# tmp113,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57313
	je	.L3179	#,
	.loc 1 13231 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2977
	cmpl	$2, %eax	#, which_alternative.2977
	je	.L3180	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57314
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57314,
	call	mult_operator	#
	testl	%eax, %eax	# D.57312
	jne	.L3179	#,
.L3180:
	.loc 1 13231 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp114
	movq	%rax, %rdi	# tmp114,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57313
	jne	.L3181	#,
.L3179:
	.loc 1 13233 0 is_stmt 1
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3181:
	.loc 1 13237 0
	movl	$0, %eax	#, D.57312
	jmp	.L3176	#
.L3170:
	.loc 1 13245 0
	movq	-8(%rbp), %rax	# insn, tmp115
	movq	%rax, %rdi	# tmp115,
	call	extract_insn_cached	#
	.loc 1 13246 0
	movq	-8(%rbp), %rax	# insn, tmp116
	movq	%rax, %rdi	# tmp116,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57313
	je	.L3182	#,
	.loc 1 13246 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57314
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57314,
	call	mult_operator	#
	testl	%eax, %eax	# D.57312
	jne	.L3182	#,
	movq	-8(%rbp), %rax	# insn, tmp117
	movq	%rax, %rdi	# tmp117,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57313
	jne	.L3183	#,
.L3182:
	.loc 1 13248 0 is_stmt 1
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3183:
	.loc 1 13252 0
	movl	$0, %eax	#, D.57312
	jmp	.L3176	#
.L3169:
	.loc 1 13256 0
	movq	-8(%rbp), %rax	# insn, tmp118
	movq	%rax, %rdi	# tmp118,
	call	extract_constrain_insn_cached	#
	.loc 1 13257 0
	movq	-8(%rbp), %rax	# insn, tmp119
	movq	%rax, %rdi	# tmp119,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57313
	je	.L3184	#,
	.loc 1 13257 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2978
	cmpl	$2, %eax	#, which_alternative.2978
	je	.L3185	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57314
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57314,
	call	mult_operator	#
	testl	%eax, %eax	# D.57312
	jne	.L3184	#,
.L3185:
	.loc 1 13257 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp120
	movq	%rax, %rdi	# tmp120,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57313
	jne	.L3186	#,
.L3184:
	.loc 1 13259 0 is_stmt 1
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3186:
	.loc 1 13263 0
	movl	$0, %eax	#, D.57312
	jmp	.L3176	#
.L3168:
	.loc 1 13269 0
	movq	-8(%rbp), %rax	# insn, tmp121
	movq	%rax, %rdi	# tmp121,
	call	extract_insn_cached	#
	.loc 1 13270 0
	movq	-8(%rbp), %rax	# insn, tmp122
	movq	%rax, %rdi	# tmp122,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57313
	je	.L3187	#,
	.loc 1 13270 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57314
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57314,
	call	mult_operator	#
	testl	%eax, %eax	# D.57312
	jne	.L3187	#,
	movq	-8(%rbp), %rax	# insn, tmp123
	movq	%rax, %rdi	# tmp123,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57313
	jne	.L3188	#,
.L3187:
	.loc 1 13272 0 is_stmt 1
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3188:
	.loc 1 13276 0
	movl	$0, %eax	#, D.57312
	jmp	.L3176	#
.L3167:
	.loc 1 13280 0
	movq	-8(%rbp), %rax	# insn, tmp124
	movq	%rax, %rdi	# tmp124,
	call	extract_constrain_insn_cached	#
	.loc 1 13281 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2979
	testl	%eax, %eax	# which_alternative.2979
	je	.L3189	#,
	.loc 1 13283 0
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3189:
	.loc 1 13287 0
	movl	$0, %eax	#, D.57312
	jmp	.L3176	#
.L3166:
	.loc 1 13294 0
	movq	-8(%rbp), %rax	# insn, tmp125
	movq	%rax, %rdi	# tmp125,
	call	extract_constrain_insn_cached	#
	.loc 1 13295 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2980
	testl	%eax, %eax	# which_alternative.2980
	je	.L3190	#,
	.loc 1 13295 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2981
	cmpl	$1, %eax	#, which_alternative.2981
	jne	.L3191	#,
.L3190:
	.loc 1 13297 0 is_stmt 1
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3191:
	.loc 1 13301 0
	movl	$0, %eax	#, D.57312
	jmp	.L3176	#
.L3165:
	.loc 1 13311 0
	movq	-8(%rbp), %rax	# insn, tmp126
	movq	%rax, %rdi	# tmp126,
	call	extract_constrain_insn_cached	#
	.loc 1 13312 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2982
	testl	%eax, %eax	# which_alternative.2982
	je	.L3192	#,
	.loc 1 13312 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2983
	cmpl	$1, %eax	#, which_alternative.2983
	je	.L3192	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2984
	cmpl	$2, %eax	#, which_alternative.2984
	jne	.L3193	#,
.L3192:
	.loc 1 13314 0 is_stmt 1
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3193:
	.loc 1 13318 0
	movl	$0, %eax	#, D.57312
	jmp	.L3176	#
.L3164:
	.loc 1 13347 0
	movq	-8(%rbp), %rax	# insn, tmp127
	movq	%rax, %rdi	# tmp127,
	call	extract_constrain_insn_cached	#
	.loc 1 13348 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2985
	testl	%eax, %eax	# which_alternative.2985
	jne	.L3194	#,
	.loc 1 13350 0
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3194:
	.loc 1 13354 0
	movl	$0, %eax	#, D.57312
	jmp	.L3176	#
.L3163:
	.loc 1 13433 0
	movl	$1, %eax	#, D.57312
	jmp	.L3176	#
.L3161:
	.loc 1 13436 0
	movq	-8(%rbp), %rax	# insn, tmp128
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57314
	movzwl	(%rax), %eax	# _61->code, D.57315
	cmpw	$40, %ax	#, D.57315
	je	.L3160	#,
	.loc 1 13437 0
	movq	-8(%rbp), %rax	# insn, tmp129
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57314
	movq	%rax, %rdi	# D.57314,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57312
	jns	.L3160	#,
	.loc 1 13438 0
	movq	-8(%rbp), %rax	# insn, tmp130
	movl	$__FUNCTION__.15849, %ecx	#,
	movl	$13438, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp130,
	call	_fatal_insn_not_found	#
.L3160:
	.loc 1 13440 0
	movl	$0, %eax	#, D.57312
.L3176:
	.loc 1 13443 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE51:
	.size	get_attr_i387, .-get_attr_i387
	.globl	get_attr_length_address
	.type	get_attr_length_address, @function
get_attr_length_address:
.LFB52:
	.loc 1 13449 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 13450 0
	movq	-8(%rbp), %rax	# insn, tmp91
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57316
	testl	%eax, %eax	# D.57316
	js	.L3196	#,
	.loc 1 13450 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp92
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.2986
	jmp	.L3197	#
.L3196:
	.loc 1 13450 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp93
	movq	%rax, %rdi	# tmp93,
	call	recog_memoized_1	#
.L3197:
	.loc 1 13450 0 discriminator 3
	addl	$1, %eax	#, tmp94
	cmpl	$806, %eax	#, tmp94
	ja	.L3198	#,
	movl	%eax, %eax	# tmp94, tmp95
	movq	.L3200(,%rax,8), %rax	#, tmp96
	jmp	*%rax	# tmp96
	.section	.rodata
	.align 8
	.align 4
.L3200:
	.quad	.L3199
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3202
	.quad	.L3203
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3202
	.quad	.L3203
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3202
	.quad	.L3203
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3204
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3205
	.quad	.L3206
	.quad	.L3203
	.quad	.L3203
	.quad	.L3198
	.quad	.L3207
	.quad	.L3207
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3208
	.quad	.L3208
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3209
	.quad	.L3209
	.quad	.L3209
	.quad	.L3209
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3204
	.quad	.L3210
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3204
	.quad	.L3198
	.quad	.L3204
	.quad	.L3198
	.quad	.L3204
	.quad	.L3198
	.quad	.L3204
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3204
	.quad	.L3211
	.quad	.L3198
	.quad	.L3204
	.quad	.L3211
	.quad	.L3198
	.quad	.L3204
	.quad	.L3211
	.quad	.L3198
	.quad	.L3204
	.quad	.L3211
	.quad	.L3198
	.quad	.L3204
	.quad	.L3204
	.quad	.L3204
	.quad	.L3204
	.quad	.L3204
	.quad	.L3204
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3212
	.quad	.L3213
	.quad	.L3213
	.quad	.L3213
	.quad	.L3213
	.quad	.L3213
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3201
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3214
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3201
	.quad	.L3213
	.quad	.L3213
	.quad	.L3213
	.quad	.L3213
	.quad	.L3213
	.quad	.L3213
	.quad	.L3201
	.quad	.L3201
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3205
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3198
	.quad	.L3201
	.text
.L3214:
	.loc 1 13453 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp97
	movq	%rax, %rdi	# tmp97,
	call	extract_constrain_insn_cached	#
	.loc 1 13454 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2987
	cmpl	$2, %eax	#, which_alternative.2987
	je	.L3215	#,
	.loc 1 13454 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2988
	cmpl	$3, %eax	#, which_alternative.2988
	jne	.L3216	#,
.L3215:
	.loc 1 13456 0 is_stmt 1
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3216:
	.loc 1 13460 0
	movq	-8(%rbp), %rax	# insn, tmp98
	movq	%rax, %rdi	# tmp98,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3213:
	.loc 1 13474 0
	movq	-8(%rbp), %rax	# insn, tmp99
	movq	%rax, %rdi	# tmp99,
	call	extract_constrain_insn_cached	#
	.loc 1 13475 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57317
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57317,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57316
	je	.L3218	#,
	.loc 1 13477 0
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3218:
	.loc 1 13481 0
	movq	-8(%rbp), %rax	# insn, tmp100
	movq	%rax, %rdi	# tmp100,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3212:
	.loc 1 13485 0
	movq	-8(%rbp), %rax	# insn, tmp101
	movq	%rax, %rdi	# tmp101,
	call	extract_constrain_insn_cached	#
	.loc 1 13486 0
	movq	-8(%rbp), %rax	# insn, tmp102
	movq	%rax, %rdi	# tmp102,
	call	get_attr_type	#
	cmpl	$1, %eax	#, D.57318
	jne	.L3219	#,
	.loc 1 13488 0
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3219:
	.loc 1 13492 0
	movq	-8(%rbp), %rax	# insn, tmp103
	movq	%rax, %rdi	# tmp103,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3211:
	.loc 1 13499 0
	movq	-8(%rbp), %rax	# insn, tmp104
	movq	%rax, %rdi	# tmp104,
	call	extract_constrain_insn_cached	#
	.loc 1 13500 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2989
	cmpl	$1, %eax	#, which_alternative.2989
	jne	.L3220	#,
	.loc 1 13502 0
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3220:
	.loc 1 13506 0
	movq	-8(%rbp), %rax	# insn, tmp105
	movq	%rax, %rdi	# tmp105,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3210:
	.loc 1 13510 0
	movq	-8(%rbp), %rax	# insn, tmp106
	movq	%rax, %rdi	# tmp106,
	call	extract_constrain_insn_cached	#
	.loc 1 13511 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2990
	cmpl	$1, %eax	#, which_alternative.2990
	je	.L3221	#,
	.loc 1 13511 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2991
	cmpl	$2, %eax	#, which_alternative.2991
	je	.L3221	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2992
	cmpl	$3, %eax	#, which_alternative.2992
	jne	.L3222	#,
.L3221:
	.loc 1 13513 0 is_stmt 1
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3222:
	.loc 1 13517 0
	movq	-8(%rbp), %rax	# insn, tmp107
	movq	%rax, %rdi	# tmp107,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3209:
	.loc 1 13524 0
	movq	-8(%rbp), %rax	# insn, tmp108
	movq	%rax, %rdi	# tmp108,
	call	extract_constrain_insn_cached	#
	.loc 1 13525 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2993
	cmpl	$3, %eax	#, which_alternative.2993
	je	.L3223	#,
	.loc 1 13525 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2994
	cmpl	$4, %eax	#, which_alternative.2994
	jne	.L3224	#,
.L3223:
	.loc 1 13527 0 is_stmt 1
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3224:
	.loc 1 13531 0
	movq	-8(%rbp), %rax	# insn, tmp109
	movq	%rax, %rdi	# tmp109,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3208:
	.loc 1 13536 0
	movq	-8(%rbp), %rax	# insn, tmp110
	movq	%rax, %rdi	# tmp110,
	call	extract_constrain_insn_cached	#
	.loc 1 13537 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2995
	testl	%eax, %eax	# which_alternative.2995
	je	.L3225	#,
	.loc 1 13537 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2996
	cmpl	$1, %eax	#, which_alternative.2996
	je	.L3225	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2997
	cmpl	$2, %eax	#, which_alternative.2997
	je	.L3225	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2998
	cmpl	$3, %eax	#, which_alternative.2998
	je	.L3226	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.2999
	cmpl	$4, %eax	#, which_alternative.2999
	jne	.L3225	#,
.L3226:
	.loc 1 13539 0 is_stmt 1
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3225:
	.loc 1 13543 0
	movq	-8(%rbp), %rax	# insn, tmp111
	movq	%rax, %rdi	# tmp111,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3207:
	.loc 1 13548 0
	movq	-8(%rbp), %rax	# insn, tmp112
	movq	%rax, %rdi	# tmp112,
	call	extract_constrain_insn_cached	#
	.loc 1 13549 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3000
	cmpl	$1, %eax	#, which_alternative.3000
	je	.L3227	#,
	.loc 1 13551 0
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3227:
	.loc 1 13555 0
	movq	-8(%rbp), %rax	# insn, tmp113
	movq	%rax, %rdi	# tmp113,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3206:
	.loc 1 13559 0
	movq	-8(%rbp), %rax	# insn, tmp114
	movq	%rax, %rdi	# tmp114,
	call	extract_constrain_insn_cached	#
	.loc 1 13560 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3001
	cmpl	$4, %eax	#, which_alternative.3001
	jne	.L3228	#,
	.loc 1 13562 0
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3228:
	.loc 1 13566 0
	movq	-8(%rbp), %rax	# insn, tmp115
	movq	%rax, %rdi	# tmp115,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3205:
	.loc 1 13571 0
	movq	-8(%rbp), %rax	# insn, tmp116
	movq	%rax, %rdi	# tmp116,
	call	extract_constrain_insn_cached	#
	.loc 1 13572 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3002
	testl	%eax, %eax	# which_alternative.3002
	je	.L3229	#,
	.loc 1 13572 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3003
	cmpl	$1, %eax	#, which_alternative.3003
	jne	.L3230	#,
.L3229:
	.loc 1 13574 0 is_stmt 1
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3230:
	.loc 1 13578 0
	movq	-8(%rbp), %rax	# insn, tmp117
	movq	%rax, %rdi	# tmp117,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3204:
	.loc 1 13597 0
	movq	-8(%rbp), %rax	# insn, tmp118
	movq	%rax, %rdi	# tmp118,
	call	extract_constrain_insn_cached	#
	.loc 1 13598 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3004
	testl	%eax, %eax	# which_alternative.3004
	je	.L3231	#,
	.loc 1 13600 0
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3231:
	.loc 1 13604 0
	movq	-8(%rbp), %rax	# insn, tmp119
	movq	%rax, %rdi	# tmp119,
	call	ix86_attr_length_address_default	#
	jmp	.L3217	#
.L3202:
	.loc 1 13610 0
	movq	-8(%rbp), %rax	# insn, tmp120
	movq	%rax, %rdi	# tmp120,
	call	extract_constrain_insn_cached	#
	.loc 1 13611 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3005
	testl	%eax, %eax	# which_alternative.3005
	jne	.L3232	#,
	.loc 1 13613 0
	movl	$8, %eax	#, D.57316
	jmp	.L3217	#
.L3232:
	.loc 1 13615 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3006
	cmpl	$1, %eax	#, which_alternative.3006
	jne	.L3233	#,
	.loc 1 13617 0
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3233:
	.loc 1 13621 0
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3203:
	.loc 1 13629 0
	movq	-8(%rbp), %rax	# insn, tmp121
	movq	%rax, %rdi	# tmp121,
	call	extract_constrain_insn_cached	#
	.loc 1 13630 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3007
	testl	%eax, %eax	# which_alternative.3007
	jne	.L3234	#,
	.loc 1 13632 0
	movl	$8, %eax	#, D.57316
	jmp	.L3217	#
.L3234:
	.loc 1 13636 0
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3199:
	.loc 1 13640 0
	movq	-8(%rbp), %rax	# insn, tmp122
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57317
	movzwl	(%rax), %eax	# _58->code, D.57319
	cmpw	$40, %ax	#, D.57319
	je	.L3201	#,
	.loc 1 13641 0
	movq	-8(%rbp), %rax	# insn, tmp123
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57317
	movq	%rax, %rdi	# D.57317,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57316
	jns	.L3201	#,
	.loc 1 13642 0
	movq	-8(%rbp), %rax	# insn, tmp124
	movl	$__FUNCTION__.15910, %ecx	#,
	movl	$13642, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp124,
	call	_fatal_insn_not_found	#
.L3201:
	.loc 1 13785 0
	movl	$0, %eax	#, D.57316
	jmp	.L3217	#
.L3198:
	.loc 1 13788 0
	movq	-8(%rbp), %rax	# insn, tmp125
	movq	%rax, %rdi	# tmp125,
	call	extract_constrain_insn_cached	#
	.loc 1 13789 0
	movq	-8(%rbp), %rax	# insn, tmp126
	movq	%rax, %rdi	# tmp126,
	call	ix86_attr_length_address_default	#
.L3217:
	.loc 1 13792 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE52:
	.size	get_attr_length_address, .-get_attr_length_address
	.globl	get_attr_length_immediate
	.type	get_attr_length_immediate, @function
get_attr_length_immediate:
.LFB53:
	.loc 1 13798 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 13799 0
	movq	-8(%rbp), %rax	# insn, tmp355
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57320
	testl	%eax, %eax	# D.57320
	js	.L3236	#,
	.loc 1 13799 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp356
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.3008
	jmp	.L3237	#
.L3236:
	.loc 1 13799 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp357
	movq	%rax, %rdi	# tmp357,
	call	recog_memoized_1	#
.L3237:
	.loc 1 13799 0 discriminator 3
	addl	$1, %eax	#, tmp358
	cmpl	$674, %eax	#, tmp358
	ja	.L3238	#,
	movl	%eax, %eax	# tmp358, tmp359
	movq	.L3240(,%rax,8), %rax	#, tmp360
	jmp	*%rax	# tmp360
	.section	.rodata
	.align 8
	.align 4
.L3240:
	.quad	.L3239
	.quad	.L3241
	.quad	.L3242
	.quad	.L3242
	.quad	.L3241
	.quad	.L3242
	.quad	.L3242
	.quad	.L3241
	.quad	.L3242
	.quad	.L3242
	.quad	.L3241
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3243
	.quad	.L3244
	.quad	.L3245
	.quad	.L3238
	.quad	.L3246
	.quad	.L3242
	.quad	.L3242
	.quad	.L3247
	.quad	.L3245
	.quad	.L3238
	.quad	.L3246
	.quad	.L3246
	.quad	.L3246
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3248
	.quad	.L3246
	.quad	.L3246
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3249
	.quad	.L3249
	.quad	.L3245
	.quad	.L3238
	.quad	.L3242
	.quad	.L3249
	.quad	.L3250
	.quad	.L3246
	.quad	.L3246
	.quad	.L3246
	.quad	.L3238
	.quad	.L3251
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3243
	.quad	.L3252
	.quad	.L3253
	.quad	.L3245
	.quad	.L3238
	.quad	.L3246
	.quad	.L3254
	.quad	.L3254
	.quad	.L3255
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3256
	.quad	.L3256
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3257
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3258
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3259
	.quad	.L3260
	.quad	.L3260
	.quad	.L3260
	.quad	.L3260
	.quad	.L3261
	.quad	.L3262
	.quad	.L3263
	.quad	.L3263
	.quad	.L3263
	.quad	.L3263
	.quad	.L3263
	.quad	.L3263
	.quad	.L3264
	.quad	.L3265
	.quad	.L3265
	.quad	.L3265
	.quad	.L3265
	.quad	.L3265
	.quad	.L3266
	.quad	.L3267
	.quad	.L3267
	.quad	.L3267
	.quad	.L3265
	.quad	.L3267
	.quad	.L3267
	.quad	.L3267
	.quad	.L3242
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3246
	.quad	.L3246
	.quad	.L3246
	.quad	.L3246
	.quad	.L3243
	.quad	.L3246
	.quad	.L3246
	.quad	.L3246
	.quad	.L3238
	.quad	.L3238
	.quad	.L3268
	.quad	.L3242
	.quad	.L3269
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3269
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3243
	.quad	.L3243
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3270
	.quad	.L3271
	.quad	.L3238
	.quad	.L3238
	.quad	.L3242
	.quad	.L3270
	.quad	.L3272
	.quad	.L3271
	.quad	.L3273
	.quad	.L3270
	.quad	.L3271
	.quad	.L3271
	.quad	.L3274
	.quad	.L3271
	.quad	.L3271
	.quad	.L3275
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3238
	.quad	.L3242
	.quad	.L3275
	.quad	.L3275
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3238
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3242
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3276
	.quad	.L3277
	.quad	.L3277
	.quad	.L3277
	.quad	.L3277
	.quad	.L3277
	.quad	.L3238
	.quad	.L3238
	.quad	.L3278
	.quad	.L3238
	.quad	.L3238
	.quad	.L3279
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3280
	.quad	.L3281
	.quad	.L3238
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3281
	.quad	.L3238
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3280
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3282
	.quad	.L3283
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3284
	.quad	.L3284
	.quad	.L3284
	.quad	.L3284
	.quad	.L3284
	.quad	.L3284
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3238
	.quad	.L3285
	.text
.L3285:
	.loc 1 13802 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp361
	movq	%rax, %rdi	# tmp361,
	call	extract_constrain_insn_cached	#
	.loc 1 13803 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3009
	testl	%eax, %eax	# which_alternative.3009
	je	.L3286	#,
	.loc 1 13803 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3010
	cmpl	$1, %eax	#, which_alternative.3010
	je	.L3286	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3011
	testl	%eax, %eax	# which_alternative.3011
	je	.L3287	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3012
	cmpl	$1, %eax	#, which_alternative.3012
	je	.L3287	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3013
	cmpl	$2, %eax	#, which_alternative.3013
	je	.L3286	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3014
	cmpl	$3, %eax	#, which_alternative.3014
	je	.L3286	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3015
	cmpl	$2, %eax	#, which_alternative.3015
	je	.L3287	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3016
	cmpl	$3, %eax	#, which_alternative.3016
	je	.L3287	#,
.L3286:
	.loc 1 13805 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3287:
	.loc 1 13809 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$13809, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3284:
	.loc 1 13818 0
	movq	-8(%rbp), %rax	# insn, tmp362
	movq	%rax, %rdi	# tmp362,
	call	extract_insn_cached	#
	.loc 1 13819 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57321
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3289	#,
	.loc 1 13821 0
	movl	$4, %eax	#, D.57320
	jmp	.L3288	#
.L3289:
	.loc 1 13825 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3283:
	.loc 1 13829 0
	movq	-8(%rbp), %rax	# insn, tmp363
	movq	%rax, %rdi	# tmp363,
	call	extract_constrain_insn_cached	#
	.loc 1 13830 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3017
	cmpl	$1, %eax	#, which_alternative.3017
	jne	.L3290	#,
	.loc 1 13830 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	const0_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3290	#,
	.loc 1 13832 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3290:
	.loc 1 13834 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3018
	testl	%eax, %eax	# which_alternative.3018
	jne	.L3291	#,
	.loc 1 13836 0
	movq	-8(%rbp), %rax	# insn, tmp364
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp364,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3291:
	.loc 1 13840 0
	movq	-8(%rbp), %rax	# insn, tmp365
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp365,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3282:
	.loc 1 13844 0
	movq	-8(%rbp), %rax	# insn, tmp366
	movq	%rax, %rdi	# tmp366,
	call	extract_constrain_insn_cached	#
	.loc 1 13845 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3019
	cmpl	$1, %eax	#, which_alternative.3019
	jne	.L3292	#,
	.loc 1 13845 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	const0_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3292	#,
	.loc 1 13847 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3292:
	.loc 1 13849 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3020
	testl	%eax, %eax	# which_alternative.3020
	jne	.L3293	#,
	.loc 1 13851 0
	movq	-8(%rbp), %rax	# insn, tmp367
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp367,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3293:
	.loc 1 13855 0
	movq	-8(%rbp), %rax	# insn, tmp368
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp368,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3281:
	.loc 1 13860 0
	movq	-8(%rbp), %rax	# insn, tmp369
	movq	%rax, %rdi	# tmp369,
	call	extract_constrain_insn_cached	#
	.loc 1 13861 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3021
	cmpl	$2, %eax	#, which_alternative.3021
	je	.L3294	#,
	.loc 1 13861 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp370
	movq	%rax, %rdi	# tmp370,
	call	get_attr_i387	#
	cmpl	$1, %eax	#, D.57320
	jne	.L3295	#,
.L3294:
	.loc 1 13863 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3295:
	.loc 1 13867 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$13867, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3280:
	.loc 1 13892 0
	movq	-8(%rbp), %rax	# insn, tmp371
	movq	%rax, %rdi	# tmp371,
	call	extract_constrain_insn_cached	#
	.loc 1 13893 0
	movq	-8(%rbp), %rax	# insn, tmp372
	movq	%rax, %rdi	# tmp372,
	call	get_attr_i387	#
	cmpl	$1, %eax	#, D.57320
	jne	.L3296	#,
	.loc 1 13895 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3296:
	.loc 1 13899 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$13899, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3277:
	.loc 1 13907 0
	movq	-8(%rbp), %rax	# insn, tmp373
	movq	%rax, %rdi	# tmp373,
	call	extract_insn_cached	#
	.loc 1 13908 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57321
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3297	#,
	.loc 1 13910 0
	movl	$4, %eax	#, D.57320
	jmp	.L3288	#
.L3297:
	.loc 1 13914 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3276:
	.loc 1 13918 0
	movq	-8(%rbp), %rax	# insn, tmp374
	movq	%rax, %rdi	# tmp374,
	call	extract_constrain_insn_cached	#
	.loc 1 13919 0
	movq	-8(%rbp), %rax	# insn, tmp375
	movq	%rax, %rdi	# tmp375,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57322
	je	.L3298	#,
	.loc 1 13919 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp376
	movq	%rax, %rdi	# tmp376,
	call	get_attr_type	#
	cmpl	$1, %eax	#, D.57322
	jne	.L3299	#,
.L3298:
	.loc 1 13921 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3299:
	.loc 1 13925 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$13925, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3275:
	.loc 1 13931 0
	movq	-8(%rbp), %rax	# insn, tmp377
	movq	%rax, %rdi	# tmp377,
	call	extract_constrain_insn_cached	#
	.loc 1 13932 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3022
	testl	%eax, %eax	# which_alternative.3022
	jne	.L3300	#,
	.loc 1 13934 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3300:
	.loc 1 13938 0
	movq	-8(%rbp), %rax	# insn, tmp378
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp378,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3274:
	.loc 1 13942 0
	movq	-8(%rbp), %rax	# insn, tmp379
	movq	%rax, %rdi	# tmp379,
	call	extract_constrain_insn_cached	#
	.loc 1 13943 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3023
	cmpl	$2, %eax	#, which_alternative.3023
	jne	.L3301	#,
	.loc 1 13945 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3301:
	.loc 1 13947 0
	movq	-8(%rbp), %rax	# insn, tmp380
	movq	%rax, %rdi	# tmp380,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57322
	je	.L3302	#,
	.loc 1 13947 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp381
	movq	%rax, %rdi	# tmp381,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57322
	jne	.L3303	#,
.L3302:
	.loc 1 13949 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp382
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp382,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3303:
	.loc 1 13953 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$13953, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3273:
	.loc 1 13957 0
	movq	-8(%rbp), %rax	# insn, tmp383
	movq	%rax, %rdi	# tmp383,
	call	extract_constrain_insn_cached	#
	.loc 1 13958 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.3024
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3025
	movl	%eax, %ecx	# ix86_cpu.3026, tmp467
	sarl	%cl, %edx	# tmp467, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3304	#,
	.loc 1 13958 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	const1_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3305	#,
.L3304:
	.loc 1 13958 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.3027
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3028
	movl	%eax, %ecx	# ix86_cpu.3029, tmp469
	sarl	%cl, %edx	# tmp469, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3305	#,
	.loc 1 13958 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	const1_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3306	#,
.L3305:
	.loc 1 13960 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp384
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp384,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3306:
	.loc 1 13964 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$13964, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3272:
	.loc 1 13968 0
	movq	-8(%rbp), %rax	# insn, tmp385
	movq	%rax, %rdi	# tmp385,
	call	extract_constrain_insn_cached	#
	.loc 1 13969 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3030
	cmpl	$1, %eax	#, which_alternative.3030
	jne	.L3307	#,
	.loc 1 13971 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3307:
	.loc 1 13973 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3031
	testl	%eax, %eax	# which_alternative.3031
	jne	.L3308	#,
	.loc 1 13973 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.3032
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3033
	movl	%eax, %ecx	# ix86_cpu.3034, tmp471
	sarl	%cl, %edx	# tmp471, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3309	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	const1_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3310	#,
.L3309:
	.loc 1 13973 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.3035
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3036
	movl	%eax, %ecx	# ix86_cpu.3037, tmp473
	sarl	%cl, %edx	# tmp473, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3310	#,
	.loc 1 13973 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	const1_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3308	#,
.L3310:
	.loc 1 13975 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp386
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp386,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3308:
	.loc 1 13979 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$13979, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3271:
	.loc 1 13988 0
	movq	-8(%rbp), %rax	# insn, tmp387
	movq	%rax, %rdi	# tmp387,
	call	extract_constrain_insn_cached	#
	.loc 1 13989 0
	movq	-8(%rbp), %rax	# insn, tmp388
	movq	%rax, %rdi	# tmp388,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57322
	je	.L3311	#,
	.loc 1 13989 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp389
	movq	%rax, %rdi	# tmp389,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57322
	jne	.L3312	#,
.L3311:
	.loc 1 13991 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp390
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp390,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3312:
	.loc 1 13995 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$13995, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3270:
	.loc 1 14001 0
	movq	-8(%rbp), %rax	# insn, tmp391
	movq	%rax, %rdi	# tmp391,
	call	extract_constrain_insn_cached	#
	.loc 1 14002 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3038
	cmpl	$1, %eax	#, which_alternative.3038
	jne	.L3313	#,
	.loc 1 14004 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3313:
	.loc 1 14006 0
	movq	-8(%rbp), %rax	# insn, tmp392
	movq	%rax, %rdi	# tmp392,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57322
	je	.L3314	#,
	.loc 1 14006 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp393
	movq	%rax, %rdi	# tmp393,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57322
	jne	.L3315	#,
.L3314:
	.loc 1 14008 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp394
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp394,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3315:
	.loc 1 14012 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14012, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3269:
	.loc 1 14017 0
	movq	-8(%rbp), %rax	# insn, tmp395
	movq	%rax, %rdi	# tmp395,
	call	extract_constrain_insn_cached	#
	.loc 1 14018 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3039
	testl	%eax, %eax	# which_alternative.3039
	je	.L3316	#,
	.loc 1 14018 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3040
	cmpl	$1, %eax	#, which_alternative.3040
	jne	.L3317	#,
.L3316:
	.loc 1 14020 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp396
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp396,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3317:
	.loc 1 14024 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3268:
	.loc 1 14028 0
	movq	-8(%rbp), %rax	# insn, tmp397
	movq	%rax, %rdi	# tmp397,
	call	extract_constrain_insn_cached	#
	.loc 1 14029 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3041
	testl	%eax, %eax	# which_alternative.3041
	je	.L3318	#,
	.loc 1 14029 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3042
	cmpl	$1, %eax	#, which_alternative.3042
	je	.L3318	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3043
	cmpl	$2, %eax	#, which_alternative.3043
	jne	.L3319	#,
.L3318:
	.loc 1 14031 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp398
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp398,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3319:
	.loc 1 14035 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3267:
	.loc 1 14044 0
	movq	-8(%rbp), %rax	# insn, tmp399
	movq	%rax, %rdi	# tmp399,
	call	extract_constrain_insn_cached	#
	.loc 1 14045 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3320	#,
	.loc 1 14047 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3320:
	.loc 1 14051 0
	movq	-8(%rbp), %rax	# insn, tmp400
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp400,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3266:
	.loc 1 14055 0
	movq	-8(%rbp), %rax	# insn, tmp401
	movq	%rax, %rdi	# tmp401,
	call	extract_constrain_insn_cached	#
	.loc 1 14056 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3321	#,
	.loc 1 14056 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3044
	cmpl	$3, %eax	#, which_alternative.3044
	jne	.L3322	#,
.L3321:
	.loc 1 14058 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3322:
	.loc 1 14062 0
	movq	-8(%rbp), %rax	# insn, tmp402
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp402,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3265:
	.loc 1 14071 0
	movq	-8(%rbp), %rax	# insn, tmp403
	movq	%rax, %rdi	# tmp403,
	call	extract_constrain_insn_cached	#
	.loc 1 14072 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3323	#,
	.loc 1 14074 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3323:
	.loc 1 14078 0
	movq	-8(%rbp), %rax	# insn, tmp404
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp404,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3264:
	.loc 1 14082 0
	movq	-8(%rbp), %rax	# insn, tmp405
	movq	%rax, %rdi	# tmp405,
	call	extract_constrain_insn_cached	#
	.loc 1 14083 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3324	#,
	.loc 1 14083 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3045
	cmpl	$2, %eax	#, which_alternative.3045
	jne	.L3325	#,
.L3324:
	.loc 1 14085 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3325:
	.loc 1 14089 0
	movq	-8(%rbp), %rax	# insn, tmp406
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp406,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3263:
	.loc 1 14098 0
	movq	-8(%rbp), %rax	# insn, tmp407
	movq	%rax, %rdi	# tmp407,
	call	extract_constrain_insn_cached	#
	.loc 1 14099 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3326	#,
	.loc 1 14101 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3326:
	.loc 1 14105 0
	movq	-8(%rbp), %rax	# insn, tmp408
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp408,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3262:
	.loc 1 14109 0
	movq	-8(%rbp), %rax	# insn, tmp409
	movq	%rax, %rdi	# tmp409,
	call	extract_constrain_insn_cached	#
	.loc 1 14110 0
	movq	-8(%rbp), %rax	# insn, tmp410
	movq	%rax, %rdi	# tmp410,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57322
	je	.L3327	#,
	.loc 1 14110 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3046
	testl	%eax, %eax	# which_alternative.3046
	jne	.L3327	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3328	#,
.L3327:
	.loc 1 14112 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3328:
	.loc 1 14114 0
	movq	-8(%rbp), %rax	# insn, tmp411
	movq	%rax, %rdi	# tmp411,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57322
	jne	.L3329	#,
	.loc 1 14116 0
	movq	-8(%rbp), %rax	# insn, tmp412
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp412,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3329:
	.loc 1 14120 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14120, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3261:
	.loc 1 14124 0
	movq	-8(%rbp), %rax	# insn, tmp413
	movq	%rax, %rdi	# tmp413,
	call	extract_constrain_insn_cached	#
	.loc 1 14125 0
	movq	-8(%rbp), %rax	# insn, tmp414
	movq	%rax, %rdi	# tmp414,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57322
	je	.L3330	#,
	.loc 1 14125 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3047
	cmpl	$2, %eax	#, which_alternative.3047
	je	.L3330	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3331	#,
.L3330:
	.loc 1 14127 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3331:
	.loc 1 14129 0
	movq	-8(%rbp), %rax	# insn, tmp415
	movq	%rax, %rdi	# tmp415,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57322
	jne	.L3332	#,
	.loc 1 14131 0
	movq	-8(%rbp), %rax	# insn, tmp416
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp416,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3332:
	.loc 1 14135 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14135, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3260:
	.loc 1 14142 0
	movq	-8(%rbp), %rax	# insn, tmp417
	movq	%rax, %rdi	# tmp417,
	call	extract_constrain_insn_cached	#
	.loc 1 14143 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3333	#,
	.loc 1 14145 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3333:
	.loc 1 14149 0
	movq	-8(%rbp), %rax	# insn, tmp418
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp418,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3259:
	.loc 1 14153 0
	movq	-8(%rbp), %rax	# insn, tmp419
	movq	%rax, %rdi	# tmp419,
	call	extract_constrain_insn_cached	#
	.loc 1 14154 0
	movq	-8(%rbp), %rax	# insn, tmp420
	movq	%rax, %rdi	# tmp420,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57322
	je	.L3334	#,
	.loc 1 14154 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3048
	cmpl	$2, %eax	#, which_alternative.3048
	je	.L3334	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57321
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3335	#,
.L3334:
	.loc 1 14156 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3335:
	.loc 1 14158 0
	movq	-8(%rbp), %rax	# insn, tmp421
	movq	%rax, %rdi	# tmp421,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57322
	jne	.L3336	#,
	.loc 1 14160 0
	movq	-8(%rbp), %rax	# insn, tmp422
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp422,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3336:
	.loc 1 14164 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14164, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3258:
	.loc 1 14168 0
	movq	-8(%rbp), %rax	# insn, tmp423
	movq	%rax, %rdi	# tmp423,
	call	extract_constrain_insn_cached	#
	.loc 1 14169 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3049
	cmpl	$1, %eax	#, which_alternative.3049
	je	.L3337	#,
	.loc 1 14169 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3050
	cmpl	$2, %eax	#, which_alternative.3050
	je	.L3337	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3051
	cmpl	$3, %eax	#, which_alternative.3051
	je	.L3337	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3052
	cmpl	$1, %eax	#, which_alternative.3052
	je	.L3338	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3053
	cmpl	$2, %eax	#, which_alternative.3053
	je	.L3338	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3054
	cmpl	$3, %eax	#, which_alternative.3054
	je	.L3338	#,
.L3337:
	.loc 1 14171 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3338:
	.loc 1 14175 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14175, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3257:
	.loc 1 14179 0
	movq	-8(%rbp), %rax	# insn, tmp424
	movq	%rax, %rdi	# tmp424,
	call	extract_constrain_insn_cached	#
	.loc 1 14180 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3055
	testl	%eax, %eax	# which_alternative.3055
	jne	.L3339	#,
	.loc 1 14182 0
	movq	-8(%rbp), %rax	# insn, tmp425
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp425,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3339:
	.loc 1 14186 0
	movq	-8(%rbp), %rax	# insn, tmp426
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp426,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3256:
	.loc 1 14191 0
	movq	-8(%rbp), %rax	# insn, tmp427
	movq	%rax, %rdi	# tmp427,
	call	extract_constrain_insn_cached	#
	.loc 1 14192 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3056
	testl	%eax, %eax	# which_alternative.3056
	je	.L3340	#,
	.loc 1 14192 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3057
	cmpl	$1, %eax	#, which_alternative.3057
	je	.L3340	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3058
	cmpl	$2, %eax	#, which_alternative.3058
	je	.L3340	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3059
	cmpl	$3, %eax	#, which_alternative.3059
	je	.L3341	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3060
	cmpl	$4, %eax	#, which_alternative.3060
	je	.L3341	#,
.L3340:
	.loc 1 14192 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3061
	testl	%eax, %eax	# which_alternative.3061
	je	.L3342	#,
	.loc 1 14192 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3062
	cmpl	$1, %eax	#, which_alternative.3062
	je	.L3342	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3063
	cmpl	$2, %eax	#, which_alternative.3063
	je	.L3342	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3064
	cmpl	$5, %eax	#, which_alternative.3064
	je	.L3341	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3065
	cmpl	$6, %eax	#, which_alternative.3065
	je	.L3341	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3066
	cmpl	$7, %eax	#, which_alternative.3066
	je	.L3341	#,
.L3342:
	.loc 1 14192 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3067
	cmpl	$8, %eax	#, which_alternative.3067
	je	.L3341	#,
	.loc 1 14192 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3068
	testl	%eax, %eax	# which_alternative.3068
	je	.L3341	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3069
	cmpl	$1, %eax	#, which_alternative.3069
	je	.L3341	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3070
	cmpl	$2, %eax	#, which_alternative.3070
	jne	.L3343	#,
.L3341:
	.loc 1 14194 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3343:
	.loc 1 14198 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14198, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3255:
	.loc 1 14202 0
	movq	-8(%rbp), %rax	# insn, tmp428
	movq	%rax, %rdi	# tmp428,
	call	extract_constrain_insn_cached	#
	.loc 1 14203 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3071
	testl	%eax, %eax	# which_alternative.3071
	je	.L3344	#,
	.loc 1 14203 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3072
	cmpl	$1, %eax	#, which_alternative.3072
	je	.L3344	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3073
	cmpl	$2, %eax	#, which_alternative.3073
	je	.L3344	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3074
	cmpl	$5, %eax	#, which_alternative.3074
	je	.L3345	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3075
	cmpl	$6, %eax	#, which_alternative.3075
	je	.L3345	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3076
	cmpl	$7, %eax	#, which_alternative.3076
	je	.L3345	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3077
	cmpl	$8, %eax	#, which_alternative.3077
	je	.L3345	#,
.L3344:
	.loc 1 14203 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3078
	testl	%eax, %eax	# which_alternative.3078
	je	.L3346	#,
	.loc 1 14203 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3079
	cmpl	$1, %eax	#, which_alternative.3079
	je	.L3346	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3080
	cmpl	$2, %eax	#, which_alternative.3080
	je	.L3346	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3081
	cmpl	$9, %eax	#, which_alternative.3081
	je	.L3345	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3082
	cmpl	$10, %eax	#, which_alternative.3082
	je	.L3345	#,
.L3346:
	.loc 1 14203 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3083
	cmpl	$11, %eax	#, which_alternative.3083
	je	.L3345	#,
	.loc 1 14203 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3084
	testl	%eax, %eax	# which_alternative.3084
	je	.L3345	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3085
	cmpl	$1, %eax	#, which_alternative.3085
	je	.L3345	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3086
	cmpl	$2, %eax	#, which_alternative.3086
	jne	.L3347	#,
.L3345:
	.loc 1 14205 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3347:
	.loc 1 14207 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3087
	cmpl	$3, %eax	#, which_alternative.3087
	je	.L3348	#,
	.loc 1 14207 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3088
	cmpl	$4, %eax	#, which_alternative.3088
	jne	.L3349	#,
.L3348:
	.loc 1 14209 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp429
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp429,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3349:
	.loc 1 14213 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14213, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3254:
	.loc 1 14218 0
	movq	-8(%rbp), %rax	# insn, tmp430
	movq	%rax, %rdi	# tmp430,
	call	extract_constrain_insn_cached	#
	.loc 1 14219 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3089
	cmpl	$1, %eax	#, which_alternative.3089
	je	.L3350	#,
	.loc 1 14221 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3350:
	.loc 1 14225 0
	movq	-8(%rbp), %rax	# insn, tmp431
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp431,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3253:
	.loc 1 14229 0
	movq	-8(%rbp), %rax	# insn, tmp432
	movq	%rax, %rdi	# tmp432,
	call	extract_constrain_insn_cached	#
	.loc 1 14230 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3090
	testl	%eax, %eax	# which_alternative.3090
	jne	.L3351	#,
	.loc 1 14232 0
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3091
	testl	%eax, %eax	# flag_pic.3091
	je	.L3352	#,
	.loc 1 14232 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57321
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3352	#,
	.loc 1 14234 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3352:
	.loc 1 14238 0
	movq	-8(%rbp), %rax	# insn, tmp433
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp433,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3351:
	.loc 1 14241 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3092
	cmpl	$1, %eax	#, which_alternative.3092
	jne	.L3353	#,
	.loc 1 14243 0
	movl	$4, %eax	#, D.57320
	jmp	.L3288	#
.L3353:
	.loc 1 14245 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3093
	cmpl	$2, %eax	#, which_alternative.3093
	jne	.L3354	#,
	.loc 1 14247 0
	movl	$8, %eax	#, D.57320
	jmp	.L3288	#
.L3354:
	.loc 1 14251 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3094
	cmpl	$5, %eax	#, which_alternative.3094
	je	.L3355	#,
	.loc 1 14251 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3095
	cmpl	$6, %eax	#, which_alternative.3095
	je	.L3355	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3096
	cmpl	$7, %eax	#, which_alternative.3096
	je	.L3355	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3097
	cmpl	$8, %eax	#, which_alternative.3097
	je	.L3355	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3098
	cmpl	$4, %eax	#, which_alternative.3098
	je	.L3355	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3099
	testl	%eax, %eax	# flag_pic.3099
	je	.L3355	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57321
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3356	#,
.L3355:
	.loc 1 14251 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3100
	cmpl	$4, %eax	#, which_alternative.3100
	je	.L3356	#,
	.loc 1 14251 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3101
	cmpl	$5, %eax	#, which_alternative.3101
	je	.L3357	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3102
	cmpl	$6, %eax	#, which_alternative.3102
	je	.L3357	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3103
	cmpl	$7, %eax	#, which_alternative.3103
	je	.L3356	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3104
	cmpl	$8, %eax	#, which_alternative.3104
	je	.L3356	#,
.L3357:
	.loc 1 14251 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3105
	cmpl	$5, %eax	#, which_alternative.3105
	je	.L3356	#,
	.loc 1 14251 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3106
	cmpl	$6, %eax	#, which_alternative.3106
	jne	.L3358	#,
.L3356:
	.loc 1 14253 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3358:
	.loc 1 14255 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3107
	cmpl	$7, %eax	#, which_alternative.3107
	je	.L3359	#,
	.loc 1 14255 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3108
	cmpl	$8, %eax	#, which_alternative.3108
	je	.L3359	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3109
	testl	%eax, %eax	# flag_pic.3109
	je	.L3360	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57321
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3359	#,
.L3360:
	.loc 1 14257 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp434
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp434,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3359:
	.loc 1 14261 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14261, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3252:
	.loc 1 14266 0
	movq	-8(%rbp), %rax	# insn, tmp435
	movq	%rax, %rdi	# tmp435,
	call	extract_constrain_insn_cached	#
	.loc 1 14267 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3110
	testl	%eax, %eax	# which_alternative.3110
	je	.L3361	#,
	.loc 1 14267 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3111
	cmpl	$1, %eax	#, which_alternative.3111
	je	.L3361	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3112
	testl	%eax, %eax	# which_alternative.3112
	je	.L3362	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3113
	cmpl	$1, %eax	#, which_alternative.3113
	je	.L3362	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3114
	cmpl	$4, %eax	#, which_alternative.3114
	je	.L3361	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3115
	cmpl	$5, %eax	#, which_alternative.3115
	je	.L3361	#,
.L3362:
	.loc 1 14267 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3116
	cmpl	$6, %eax	#, which_alternative.3116
	je	.L3361	#,
	.loc 1 14267 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3117
	testl	%eax, %eax	# which_alternative.3117
	je	.L3363	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3118
	cmpl	$1, %eax	#, which_alternative.3118
	je	.L3363	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3119
	cmpl	$2, %eax	#, which_alternative.3119
	je	.L3361	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3120
	cmpl	$3, %eax	#, which_alternative.3120
	jne	.L3363	#,
.L3361:
	.loc 1 14269 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3363:
	.loc 1 14273 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14273, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3251:
	.loc 1 14277 0
	movq	-8(%rbp), %rax	# insn, tmp436
	movq	%rax, %rdi	# tmp436,
	call	extract_constrain_insn_cached	#
	.loc 1 14278 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3121
	testl	%eax, %eax	# which_alternative.3121
	je	.L3364	#,
	.loc 1 14280 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3364:
	.loc 1 14284 0
	movq	-8(%rbp), %rax	# insn, tmp437
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp437,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3250:
	.loc 1 14288 0
	movq	-8(%rbp), %rax	# insn, tmp438
	movq	%rax, %rdi	# tmp438,
	call	extract_constrain_insn_cached	#
	.loc 1 14289 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57321
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57320
	je	.L3365	#,
	.loc 1 14289 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3122
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3123
	movl	%eax, %ecx	# ix86_cpu.3124, tmp475
	sarl	%cl, %edx	# tmp475, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3366	#,
.L3365:
	.loc 1 14291 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp439
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp439,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3366:
	.loc 1 14295 0
	movq	-8(%rbp), %rax	# insn, tmp440
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp440,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3249:
	.loc 1 14301 0
	movq	-8(%rbp), %rax	# insn, tmp441
	movq	%rax, %rdi	# tmp441,
	call	extract_constrain_insn_cached	#
	.loc 1 14302 0
	movq	-8(%rbp), %rax	# insn, tmp442
	movq	%rax, %rdi	# tmp442,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57322
	jne	.L3367	#,
	.loc 1 14304 0
	movq	-8(%rbp), %rax	# insn, tmp443
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp443,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3367:
	.loc 1 14306 0
	movq	-8(%rbp), %rax	# insn, tmp444
	movq	%rax, %rdi	# tmp444,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57322
	jne	.L3368	#,
	.loc 1 14308 0
	movq	-8(%rbp), %rax	# insn, tmp445
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp445,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3368:
	.loc 1 14312 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14312, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3248:
	.loc 1 14316 0
	movq	-8(%rbp), %rax	# insn, tmp446
	movq	%rax, %rdi	# tmp446,
	call	extract_constrain_insn_cached	#
	.loc 1 14317 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3125
	cmpl	$3, %eax	#, which_alternative.3125
	jne	.L3369	#,
	.loc 1 14317 0 is_stmt 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3126
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3127
	movl	%eax, %ecx	# ix86_cpu.3128, tmp477
	sarl	%cl, %edx	# tmp477, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3370	#,
	.loc 1 14317 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3129
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3130
	movl	%eax, %ecx	# ix86_cpu.3131, tmp479
	sarl	%cl, %edx	# tmp479, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3370	#,
.L3369:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3132
	cmpl	$3, %eax	#, which_alternative.3132
	je	.L3371	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3133
	cmpl	$5, %eax	#, which_alternative.3133
	je	.L3371	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3134
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3135
	movl	%eax, %ecx	# ix86_cpu.3136, tmp481
	sarl	%cl, %edx	# tmp481, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3370	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3137
	cmpl	$2, %eax	#, which_alternative.3137
	jne	.L3370	#,
.L3371:
	.loc 1 14319 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp447
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp447,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3370:
	.loc 1 14321 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3138
	cmpl	$3, %eax	#, which_alternative.3138
	jne	.L3372	#,
	.loc 1 14321 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3139
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3140
	movl	%eax, %ecx	# ix86_cpu.3141, tmp483
	sarl	%cl, %edx	# tmp483, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3373	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3142
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3143
	movl	%eax, %ecx	# ix86_cpu.3144, tmp485
	sarl	%cl, %edx	# tmp485, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3373	#,
.L3372:
	.loc 1 14321 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3145
	cmpl	$3, %eax	#, which_alternative.3145
	jne	.L3374	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3146
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3147
	movl	%eax, %ecx	# ix86_cpu.3148, tmp487
	sarl	%cl, %edx	# tmp487, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3375	#,
	.loc 1 14321 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3149
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3150
	movl	%eax, %ecx	# ix86_cpu.3151, tmp489
	sarl	%cl, %edx	# tmp489, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3375	#,
.L3374:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3152
	cmpl	$3, %eax	#, which_alternative.3152
	je	.L3375	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3153
	cmpl	$5, %eax	#, which_alternative.3153
	je	.L3375	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3154
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3155
	movl	%eax, %ecx	# ix86_cpu.3156, tmp491
	sarl	%cl, %edx	# tmp491, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3373	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3157
	cmpl	$2, %eax	#, which_alternative.3157
	je	.L3375	#,
.L3373:
	.loc 1 14323 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp448
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp448,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3375:
	.loc 1 14327 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14327, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3247:
	.loc 1 14331 0
	movq	-8(%rbp), %rax	# insn, tmp449
	movq	%rax, %rdi	# tmp449,
	call	extract_constrain_insn_cached	#
	.loc 1 14332 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3158
	testl	%eax, %eax	# which_alternative.3158
	je	.L3376	#,
	.loc 1 14332 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3159
	cmpl	$1, %eax	#, which_alternative.3159
	jne	.L3377	#,
.L3376:
	.loc 1 14332 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3160
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3161
	movl	%eax, %ecx	# ix86_cpu.3162, tmp493
	sarl	%cl, %edx	# tmp493, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3378	#,
	.loc 1 14332 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.3163
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3164
	movl	%eax, %ecx	# ix86_cpu.3165, tmp495
	sarl	%cl, %edx	# tmp495, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3378	#,
.L3377:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3166
	cmpl	$2, %eax	#, which_alternative.3166
	je	.L3379	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3167
	cmpl	$3, %eax	#, which_alternative.3167
	je	.L3379	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3168
	cmpl	$4, %eax	#, which_alternative.3168
	jne	.L3380	#,
.L3379:
	.loc 1 14332 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57321
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3378	#,
.L3380:
	.loc 1 14332 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3169
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3170
	movl	%eax, %ecx	# ix86_cpu.3171, tmp497
	sarl	%cl, %edx	# tmp497, D.57320
	movl	%edx, %eax	# D.57320, D.57320
	andl	$1, %eax	#, D.57320
	testl	%eax, %eax	# D.57320
	je	.L3378	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3172
	testl	%eax, %eax	# which_alternative.3172
	je	.L3381	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3173
	cmpl	$1, %eax	#, which_alternative.3173
	je	.L3381	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3174
	cmpl	$3, %eax	#, which_alternative.3174
	je	.L3381	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3175
	cmpl	$4, %eax	#, which_alternative.3175
	jne	.L3378	#,
.L3381:
	.loc 1 14334 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp450
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp450,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3378:
	.loc 1 14336 0
	movq	-8(%rbp), %rax	# insn, tmp451
	movq	%rax, %rdi	# tmp451,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57322
	jne	.L3382	#,
	.loc 1 14338 0
	movq	-8(%rbp), %rax	# insn, tmp452
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp452,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3382:
	.loc 1 14342 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14342, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3246:
	.loc 1 14362 0
	movq	-8(%rbp), %rax	# insn, tmp453
	movq	%rax, %rdi	# tmp453,
	call	extract_constrain_insn_cached	#
	.loc 1 14363 0
	movq	-8(%rbp), %rax	# insn, tmp454
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp454,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3245:
	.loc 1 14369 0
	movq	-8(%rbp), %rax	# insn, tmp455
	movq	%rax, %rdi	# tmp455,
	call	extract_constrain_insn_cached	#
	.loc 1 14370 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3176
	testl	%eax, %eax	# which_alternative.3176
	jne	.L3383	#,
	.loc 1 14372 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3383:
	.loc 1 14376 0
	movq	-8(%rbp), %rax	# insn, tmp456
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp456,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3244:
	.loc 1 14380 0
	movq	-8(%rbp), %rax	# insn, tmp457
	movq	%rax, %rdi	# tmp457,
	call	extract_constrain_insn_cached	#
	.loc 1 14381 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3177
	cmpl	$4, %eax	#, which_alternative.3177
	je	.L3384	#,
	.loc 1 14381 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3178
	cmpl	$5, %eax	#, which_alternative.3178
	je	.L3384	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3179
	cmpl	$6, %eax	#, which_alternative.3179
	je	.L3384	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3180
	cmpl	$7, %eax	#, which_alternative.3180
	je	.L3384	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3181
	cmpl	$8, %eax	#, which_alternative.3181
	je	.L3384	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3182
	cmpl	$9, %eax	#, which_alternative.3182
	je	.L3384	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3183
	testl	%eax, %eax	# flag_pic.3183
	je	.L3384	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57321
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3385	#,
.L3384:
	.loc 1 14381 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3184
	cmpl	$4, %eax	#, which_alternative.3184
	je	.L3386	#,
	.loc 1 14381 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3185
	cmpl	$5, %eax	#, which_alternative.3185
	je	.L3386	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3186
	cmpl	$6, %eax	#, which_alternative.3186
	je	.L3386	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3187
	cmpl	$7, %eax	#, which_alternative.3187
	je	.L3385	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3188
	cmpl	$8, %eax	#, which_alternative.3188
	je	.L3385	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3189
	cmpl	$9, %eax	#, which_alternative.3189
	je	.L3385	#,
.L3386:
	.loc 1 14381 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3190
	cmpl	$4, %eax	#, which_alternative.3190
	je	.L3385	#,
	.loc 1 14381 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3191
	cmpl	$5, %eax	#, which_alternative.3191
	je	.L3385	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3192
	cmpl	$6, %eax	#, which_alternative.3192
	jne	.L3387	#,
.L3385:
	.loc 1 14383 0 is_stmt 1
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3387:
	.loc 1 14385 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3193
	cmpl	$7, %eax	#, which_alternative.3193
	je	.L3388	#,
	.loc 1 14385 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3194
	cmpl	$8, %eax	#, which_alternative.3194
	je	.L3388	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3195
	cmpl	$9, %eax	#, which_alternative.3195
	je	.L3388	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3196
	testl	%eax, %eax	# flag_pic.3196
	je	.L3389	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57321
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57321,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57320
	jne	.L3388	#,
.L3389:
	.loc 1 14387 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp458
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp458,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3388:
	.loc 1 14391 0
	movl	$__FUNCTION__.16060, %edx	#,
	movl	$14391, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L3242:
	.loc 1 14599 0
	movq	-8(%rbp), %rax	# insn, tmp459
	movq	%rax, %rdi	# tmp459,
	call	extract_constrain_insn_cached	#
	.loc 1 14600 0
	movq	-8(%rbp), %rax	# insn, tmp460
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp460,
	call	ix86_attr_length_immediate_default	#
	jmp	.L3288	#
.L3241:
	.loc 1 14606 0
	movq	-8(%rbp), %rax	# insn, tmp461
	movq	%rax, %rdi	# tmp461,
	call	extract_constrain_insn_cached	#
	.loc 1 14607 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3197
	testl	%eax, %eax	# which_alternative.3197
	jne	.L3390	#,
	.loc 1 14609 0
	movl	$0, %eax	#, D.57320
	jmp	.L3288	#
.L3390:
	.loc 1 14613 0
	movl	$1, %eax	#, D.57320
	jmp	.L3288	#
.L3243:
	.loc 1 14621 0
	movl	$1, %eax	#, D.57320
	jmp	.L3288	#
.L3278:
	.loc 1 14624 0
	movl	$2, %eax	#, D.57320
	jmp	.L3288	#
.L3279:
	.loc 1 14627 0
	movl	$4, %eax	#, D.57320
	jmp	.L3288	#
.L3239:
	.loc 1 14630 0
	movq	-8(%rbp), %rax	# insn, tmp462
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57321
	movzwl	(%rax), %eax	# _377->code, D.57323
	cmpw	$40, %ax	#, D.57323
	je	.L3238	#,
	.loc 1 14631 0
	movq	-8(%rbp), %rax	# insn, tmp463
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57321
	movq	%rax, %rdi	# D.57321,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57320
	jns	.L3238	#,
	.loc 1 14632 0
	movq	-8(%rbp), %rax	# insn, tmp464
	movl	$__FUNCTION__.16060, %ecx	#,
	movl	$14632, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp464,
	call	_fatal_insn_not_found	#
.L3238:
	.loc 1 14634 0
	movl	$0, %eax	#, D.57320
.L3288:
	.loc 1 14637 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE53:
	.size	get_attr_length_immediate, .-get_attr_length_immediate
	.globl	get_attr_memory
	.type	get_attr_memory, @function
get_attr_memory:
.LFB54:
	.loc 1 14643 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 14644 0
	movq	-8(%rbp), %rax	# insn, tmp677
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57325
	testl	%eax, %eax	# D.57325
	js	.L3392	#,
	.loc 1 14644 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp678
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.3198
	jmp	.L3393	#
.L3392:
	.loc 1 14644 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp679
	movq	%rax, %rdi	# tmp679,
	call	recog_memoized_1	#
.L3393:
	.loc 1 14644 0 discriminator 3
	addl	$1, %eax	#, tmp680
	cmpl	$806, %eax	#, tmp680
	ja	.L3394	#,
	movl	%eax, %eax	# tmp680, tmp681
	movq	.L3396(,%rax,8), %rax	#, tmp682
	jmp	*%rax	# tmp682
	.section	.rodata
	.align 8
	.align 4
.L3396:
	.quad	.L3395
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3398
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3398
	.quad	.L3394
	.quad	.L3394
	.quad	.L3398
	.quad	.L3398
	.quad	.L3394
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3399
	.quad	.L3399
	.quad	.L3399
	.quad	.L3400
	.quad	.L3400
	.quad	.L3401
	.quad	.L3401
	.quad	.L3402
	.quad	.L3403
	.quad	.L3404
	.quad	.L3394
	.quad	.L3399
	.quad	.L3399
	.quad	.L3405
	.quad	.L3403
	.quad	.L3404
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3401
	.quad	.L3399
	.quad	.L3399
	.quad	.L3406
	.quad	.L3394
	.quad	.L3394
	.quad	.L3401
	.quad	.L3394
	.quad	.L3394
	.quad	.L3407
	.quad	.L3407
	.quad	.L3403
	.quad	.L3404
	.quad	.L3394
	.quad	.L3407
	.quad	.L3408
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3398
	.quad	.L3409
	.quad	.L3399
	.quad	.L3400
	.quad	.L3400
	.quad	.L3401
	.quad	.L3401
	.quad	.L3410
	.quad	.L3411
	.quad	.L3403
	.quad	.L3404
	.quad	.L3394
	.quad	.L3412
	.quad	.L3412
	.quad	.L3413
	.quad	.L3414
	.quad	.L3398
	.quad	.L3398
	.quad	.L3415
	.quad	.L3415
	.quad	.L3414
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3416
	.quad	.L3416
	.quad	.L3416
	.quad	.L3416
	.quad	.L3414
	.quad	.L3414
	.quad	.L3401
	.quad	.L3394
	.quad	.L3401
	.quad	.L3417
	.quad	.L3394
	.quad	.L3401
	.quad	.L3417
	.quad	.L3394
	.quad	.L3398
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3398
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3418
	.quad	.L3419
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3418
	.quad	.L3394
	.quad	.L3418
	.quad	.L3394
	.quad	.L3418
	.quad	.L3394
	.quad	.L3418
	.quad	.L3394
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3394
	.quad	.L3394
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3394
	.quad	.L3394
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3398
	.quad	.L3398
	.quad	.L3421
	.quad	.L3422
	.quad	.L3394
	.quad	.L3421
	.quad	.L3422
	.quad	.L3394
	.quad	.L3421
	.quad	.L3422
	.quad	.L3394
	.quad	.L3421
	.quad	.L3422
	.quad	.L3394
	.quad	.L3421
	.quad	.L3421
	.quad	.L3421
	.quad	.L3421
	.quad	.L3421
	.quad	.L3421
	.quad	.L3398
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3424
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3425
	.quad	.L3426
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3427
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3428
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3398
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3398
	.quad	.L3398
	.quad	.L3414
	.quad	.L3398
	.quad	.L3398
	.quad	.L3414
	.quad	.L3398
	.quad	.L3398
	.quad	.L3414
	.quad	.L3398
	.quad	.L3414
	.quad	.L3414
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3397
	.quad	.L3398
	.quad	.L3398
	.quad	.L3429
	.quad	.L3414
	.quad	.L3430
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3430
	.quad	.L3414
	.quad	.L3414
	.quad	.L3401
	.quad	.L3414
	.quad	.L3401
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3401
	.quad	.L3414
	.quad	.L3401
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3398
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3401
	.quad	.L3431
	.quad	.L3414
	.quad	.L3398
	.quad	.L3398
	.quad	.L3414
	.quad	.L3431
	.quad	.L3431
	.quad	.L3414
	.quad	.L3414
	.quad	.L3431
	.quad	.L3414
	.quad	.L3414
	.quad	.L3427
	.quad	.L3414
	.quad	.L3414
	.quad	.L3432
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3398
	.quad	.L3398
	.quad	.L3414
	.quad	.L3432
	.quad	.L3432
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3398
	.quad	.L3398
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3400
	.quad	.L3400
	.quad	.L3394
	.quad	.L3394
	.quad	.L3433
	.quad	.L3433
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3433
	.quad	.L3433
	.quad	.L3433
	.quad	.L3433
	.quad	.L3433
	.quad	.L3434
	.quad	.L3435
	.quad	.L3435
	.quad	.L3435
	.quad	.L3435
	.quad	.L3435
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3433
	.quad	.L3398
	.quad	.L3414
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3414
	.quad	.L3436
	.quad	.L3394
	.quad	.L3414
	.quad	.L3436
	.quad	.L3394
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3437
	.quad	.L3394
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3437
	.quad	.L3394
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3414
	.quad	.L3438
	.quad	.L3394
	.quad	.L3423
	.quad	.L3438
	.quad	.L3394
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3423
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3420
	.quad	.L3403
	.quad	.L3403
	.quad	.L3403
	.quad	.L3403
	.quad	.L3403
	.quad	.L3403
	.quad	.L3403
	.quad	.L3403
	.quad	.L3403
	.quad	.L3403
	.quad	.L3403
	.quad	.L3403
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3423
	.quad	.L3439
	.quad	.L3423
	.quad	.L3439
	.quad	.L3439
	.quad	.L3440
	.quad	.L3441
	.quad	.L3440
	.quad	.L3423
	.quad	.L3423
	.quad	.L3398
	.quad	.L3398
	.quad	.L3394
	.quad	.L3398
	.quad	.L3398
	.quad	.L3394
	.quad	.L3398
	.quad	.L3398
	.quad	.L3394
	.quad	.L3398
	.quad	.L3398
	.quad	.L3394
	.quad	.L3442
	.quad	.L3443
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3398
	.quad	.L3444
	.quad	.L3444
	.quad	.L3444
	.quad	.L3444
	.quad	.L3444
	.quad	.L3444
	.quad	.L3398
	.quad	.L3398
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3445
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3423
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3423
	.quad	.L3423
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3394
	.quad	.L3398
	.quad	.L3404
	.quad	.L3403
	.quad	.L3398
	.quad	.L3403
	.text
.L3445:
	.loc 1 14647 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp683
	movq	%rax, %rdi	# tmp683,
	call	extract_constrain_insn_cached	#
	.loc 1 14648 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3199
	testl	%eax, %eax	# which_alternative.3199
	je	.L3446	#,
	.loc 1 14648 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3200
	cmpl	$1, %eax	#, which_alternative.3200
	jne	.L3447	#,
.L3446:
	.loc 1 14650 0 is_stmt 1
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3447:
	.loc 1 14652 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3449	#,
	.loc 1 14652 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3449	#,
	.loc 1 14654 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3449:
	.loc 1 14656 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3450	#,
	.loc 1 14658 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3450:
	.loc 1 14660 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3451	#,
	.loc 1 14660 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3201
	cmpl	$2, %eax	#, which_alternative.3201
	je	.L3452	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3202
	cmpl	$3, %eax	#, which_alternative.3202
	je	.L3452	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3203
	cmpl	$2, %eax	#, which_alternative.3203
	je	.L3453	#,
	.loc 1 14660 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3204
	cmpl	$3, %eax	#, which_alternative.3204
	jne	.L3452	#,
.L3453:
	.loc 1 14660 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3452	#,
.L3451:
	.loc 1 14662 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3452:
	.loc 1 14666 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3444:
	.loc 1 14675 0
	movq	-8(%rbp), %rax	# insn, tmp684
	movq	%rax, %rdi	# tmp684,
	call	extract_insn_cached	#
	.loc 1 14676 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3454	#,
	.loc 1 14678 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3454:
	.loc 1 14682 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3443:
	.loc 1 14686 0
	movq	-8(%rbp), %rax	# insn, tmp685
	movq	%rax, %rdi	# tmp685,
	call	extract_constrain_insn_cached	#
	.loc 1 14687 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3205
	cmpl	$1, %eax	#, which_alternative.3205
	jne	.L3455	#,
	.loc 1 14687 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	const0_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3455	#,
	.loc 1 14689 0 is_stmt 1
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3455:
	.loc 1 14691 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3456	#,
	.loc 1 14691 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3456	#,
	.loc 1 14693 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3456:
	.loc 1 14695 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3457	#,
	.loc 1 14697 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3457:
	.loc 1 14699 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3458	#,
	.loc 1 14699 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3206
	cmpl	$1, %eax	#, which_alternative.3206
	jne	.L3459	#,
	.loc 1 14699 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	const0_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3460	#,
.L3459:
	.loc 1 14699 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3460	#,
.L3458:
	.loc 1 14701 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3460:
	.loc 1 14705 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3442:
	.loc 1 14709 0
	movq	-8(%rbp), %rax	# insn, tmp686
	movq	%rax, %rdi	# tmp686,
	call	extract_constrain_insn_cached	#
	.loc 1 14710 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3207
	cmpl	$1, %eax	#, which_alternative.3207
	jne	.L3461	#,
	.loc 1 14710 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	const0_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3461	#,
	.loc 1 14712 0 is_stmt 1
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3461:
	.loc 1 14714 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3462	#,
	.loc 1 14714 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3462	#,
	.loc 1 14716 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3462:
	.loc 1 14718 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3463	#,
	.loc 1 14720 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3463:
	.loc 1 14722 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3464	#,
	.loc 1 14722 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3208
	cmpl	$1, %eax	#, which_alternative.3208
	jne	.L3465	#,
	.loc 1 14722 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	const0_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3466	#,
.L3465:
	.loc 1 14722 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3466	#,
.L3464:
	.loc 1 14724 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3466:
	.loc 1 14728 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3441:
	.loc 1 14732 0
	movq	-8(%rbp), %rax	# insn, tmp687
	movq	%rax, %rdi	# tmp687,
	call	extract_constrain_insn_cached	#
	.loc 1 14733 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3209
	cmpl	$2, %eax	#, which_alternative.3209
	je	.L3467	#,
	.loc 1 14733 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3210
	cmpl	$3, %eax	#, which_alternative.3210
	jne	.L3468	#,
.L3467:
	.loc 1 14735 0 is_stmt 1
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3468:
	.loc 1 14739 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3440:
	.loc 1 14744 0
	movq	-8(%rbp), %rax	# insn, tmp688
	movq	%rax, %rdi	# tmp688,
	call	extract_constrain_insn_cached	#
	.loc 1 14745 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3211
	testl	%eax, %eax	# which_alternative.3211
	je	.L3469	#,
	.loc 1 14745 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3212
	cmpl	$1, %eax	#, which_alternative.3212
	jne	.L3470	#,
.L3469:
	.loc 1 14747 0 is_stmt 1
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3470:
	.loc 1 14749 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3471	#,
	.loc 1 14749 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3471	#,
	.loc 1 14751 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3471:
	.loc 1 14753 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3472	#,
	.loc 1 14755 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3472:
	.loc 1 14757 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3473	#,
	.loc 1 14757 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3473	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3213
	cmpl	$2, %eax	#, which_alternative.3213
	je	.L3474	#,
	.loc 1 14757 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3214
	cmpl	$3, %eax	#, which_alternative.3214
	jne	.L3475	#,
.L3474:
	.loc 1 14757 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3475	#,
.L3473:
	.loc 1 14759 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3475:
	.loc 1 14763 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3439:
	.loc 1 14769 0
	movq	-8(%rbp), %rax	# insn, tmp689
	movq	%rax, %rdi	# tmp689,
	call	extract_insn_cached	#
	.loc 1 14770 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3476	#,
	.loc 1 14770 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3476	#,
	.loc 1 14772 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3476:
	.loc 1 14774 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3477	#,
	.loc 1 14776 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3477:
	.loc 1 14778 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3478	#,
	.loc 1 14778 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3478	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3479	#,
.L3478:
	.loc 1 14780 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3479:
	.loc 1 14784 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3438:
	.loc 1 14789 0
	movq	-8(%rbp), %rax	# insn, tmp690
	movq	%rax, %rdi	# tmp690,
	call	extract_constrain_insn_cached	#
	.loc 1 14790 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3215
	testl	%eax, %eax	# which_alternative.3215
	jne	.L3480	#,
	.loc 1 14792 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3480:
	.loc 1 14794 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3481	#,
	.loc 1 14794 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3481	#,
	.loc 1 14796 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3481:
	.loc 1 14798 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3482	#,
	.loc 1 14800 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3482:
	.loc 1 14802 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3483	#,
	.loc 1 14804 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3483:
	.loc 1 14808 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3437:
	.loc 1 14813 0
	movq	-8(%rbp), %rax	# insn, tmp691
	movq	%rax, %rdi	# tmp691,
	call	extract_constrain_insn_cached	#
	.loc 1 14814 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3484	#,
	.loc 1 14814 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3484	#,
	.loc 1 14816 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3484:
	.loc 1 14818 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3485	#,
	.loc 1 14820 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3485:
	.loc 1 14822 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3486	#,
	.loc 1 14822 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3216
	cmpl	$2, %eax	#, which_alternative.3216
	je	.L3487	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3487	#,
.L3486:
	.loc 1 14824 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3487:
	.loc 1 14828 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3436:
	.loc 1 14833 0
	movq	-8(%rbp), %rax	# insn, tmp692
	movq	%rax, %rdi	# tmp692,
	call	extract_constrain_insn_cached	#
	.loc 1 14834 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3488	#,
	.loc 1 14834 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3488	#,
	.loc 1 14836 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3488:
	.loc 1 14838 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3489	#,
	.loc 1 14840 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3489:
	.loc 1 14842 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3490	#,
	.loc 1 14842 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3217
	testl	%eax, %eax	# which_alternative.3217
	jne	.L3491	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3491	#,
.L3490:
	.loc 1 14844 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3491:
	.loc 1 14848 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3435:
	.loc 1 14856 0
	movq	-8(%rbp), %rax	# insn, tmp693
	movq	%rax, %rdi	# tmp693,
	call	extract_insn_cached	#
	.loc 1 14857 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3492	#,
	.loc 1 14859 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3492:
	.loc 1 14863 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3434:
	.loc 1 14867 0
	movq	-8(%rbp), %rax	# insn, tmp694
	movq	%rax, %rdi	# tmp694,
	call	extract_insn_cached	#
	.loc 1 14868 0
	movq	-8(%rbp), %rax	# insn, tmp695
	movq	%rax, %rdi	# tmp695,
	call	get_attr_type	#
	cmpl	$1, %eax	#, D.57327
	jne	.L3493	#,
	.loc 1 14870 0
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3493:
	.loc 1 14872 0
	movq	-8(%rbp), %rax	# insn, tmp696
	movq	%rax, %rdi	# tmp696,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57327
	jne	.L3494	#,
	.loc 1 14874 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3495	#,
	.loc 1 14876 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3495:
	.loc 1 14880 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3494:
	.loc 1 14883 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3496	#,
	.loc 1 14883 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3496	#,
	.loc 1 14885 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3496:
	.loc 1 14887 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3497	#,
	.loc 1 14889 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3497:
	.loc 1 14891 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3498	#,
	.loc 1 14891 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3499	#,
.L3498:
	.loc 1 14893 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3499:
	.loc 1 14897 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3433:
	.loc 1 14908 0
	movq	-8(%rbp), %rax	# insn, tmp697
	movq	%rax, %rdi	# tmp697,
	call	extract_insn_cached	#
	.loc 1 14909 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3500	#,
	.loc 1 14911 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3500:
	.loc 1 14915 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3432:
	.loc 1 14921 0
	movq	-8(%rbp), %rax	# insn, tmp698
	movq	%rax, %rdi	# tmp698,
	call	extract_constrain_insn_cached	#
	.loc 1 14922 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3501	#,
	.loc 1 14922 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3501	#,
	.loc 1 14924 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3501:
	.loc 1 14926 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3502	#,
	.loc 1 14928 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3502:
	.loc 1 14930 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3503	#,
	.loc 1 14930 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3218
	cmpl	$1, %eax	#, which_alternative.3218
	jne	.L3504	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3504	#,
.L3503:
	.loc 1 14932 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3504:
	.loc 1 14936 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3431:
	.loc 1 14943 0
	movq	-8(%rbp), %rax	# insn, tmp699
	movq	%rax, %rdi	# tmp699,
	call	extract_constrain_insn_cached	#
	.loc 1 14944 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3219
	cmpl	$1, %eax	#, which_alternative.3219
	jne	.L3505	#,
	.loc 1 14946 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3505:
	.loc 1 14948 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3506	#,
	.loc 1 14948 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3506	#,
	.loc 1 14950 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3506:
	.loc 1 14952 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3507	#,
	.loc 1 14954 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3507:
	.loc 1 14956 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3508	#,
	.loc 1 14956 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3509	#,
.L3508:
	.loc 1 14958 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3509:
	.loc 1 14962 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3430:
	.loc 1 14967 0
	movq	-8(%rbp), %rax	# insn, tmp700
	movq	%rax, %rdi	# tmp700,
	call	extract_constrain_insn_cached	#
	.loc 1 14968 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3510	#,
	.loc 1 14968 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3510	#,
	.loc 1 14970 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3510:
	.loc 1 14972 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3511	#,
	.loc 1 14974 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3511:
	.loc 1 14976 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3512	#,
	.loc 1 14976 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3220
	testl	%eax, %eax	# which_alternative.3220
	je	.L3513	#,
	.loc 1 14976 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3221
	cmpl	$1, %eax	#, which_alternative.3221
	jne	.L3514	#,
.L3513:
	.loc 1 14976 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3514	#,
.L3512:
	.loc 1 14978 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3514:
	.loc 1 14982 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3429:
	.loc 1 14986 0
	movq	-8(%rbp), %rax	# insn, tmp701
	movq	%rax, %rdi	# tmp701,
	call	extract_constrain_insn_cached	#
	.loc 1 14987 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3515	#,
	.loc 1 14987 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3515	#,
	.loc 1 14989 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3515:
	.loc 1 14991 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3516	#,
	.loc 1 14993 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3516:
	.loc 1 14995 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3517	#,
	.loc 1 14995 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3222
	testl	%eax, %eax	# which_alternative.3222
	je	.L3518	#,
	.loc 1 14995 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3223
	cmpl	$1, %eax	#, which_alternative.3223
	je	.L3518	#,
	.loc 1 14995 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3224
	cmpl	$2, %eax	#, which_alternative.3224
	jne	.L3519	#,
.L3518:
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3519	#,
.L3517:
	.loc 1 14997 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3519:
	.loc 1 15001 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3428:
	.loc 1 15005 0
	movq	-8(%rbp), %rax	# insn, tmp702
	movq	%rax, %rdi	# tmp702,
	call	extract_constrain_insn_cached	#
	.loc 1 15006 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3225
	cmpl	$3, %eax	#, which_alternative.3225
	jne	.L3520	#,
	.loc 1 15008 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3520:
	.loc 1 15010 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3521	#,
	.loc 1 15010 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3521	#,
	.loc 1 15012 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3521:
	.loc 1 15014 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3522	#,
	.loc 1 15016 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3522:
	.loc 1 15018 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3523	#,
	.loc 1 15018 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3524	#,
.L3523:
	.loc 1 15020 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3524:
	.loc 1 15024 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3427:
	.loc 1 15029 0
	movq	-8(%rbp), %rax	# insn, tmp703
	movq	%rax, %rdi	# tmp703,
	call	extract_constrain_insn_cached	#
	.loc 1 15030 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3226
	cmpl	$2, %eax	#, which_alternative.3226
	jne	.L3525	#,
	.loc 1 15032 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3525:
	.loc 1 15034 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3526	#,
	.loc 1 15034 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3526	#,
	.loc 1 15036 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3526:
	.loc 1 15038 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3527	#,
	.loc 1 15040 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3527:
	.loc 1 15042 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3528	#,
	.loc 1 15042 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3529	#,
.L3528:
	.loc 1 15044 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3529:
	.loc 1 15048 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3426:
	.loc 1 15052 0
	movq	-8(%rbp), %rax	# insn, tmp704
	movq	%rax, %rdi	# tmp704,
	call	extract_constrain_insn_cached	#
	.loc 1 15053 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3227
	testl	%eax, %eax	# which_alternative.3227
	jne	.L3530	#,
	.loc 1 15053 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3531	#,
.L3530:
	.loc 1 15055 0 is_stmt 1
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3531:
	.loc 1 15057 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3532	#,
	.loc 1 15057 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3532	#,
	.loc 1 15059 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3532:
	.loc 1 15061 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3533	#,
	.loc 1 15063 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3533:
	.loc 1 15065 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3534	#,
	.loc 1 15065 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3535	#,
.L3534:
	.loc 1 15067 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3535:
	.loc 1 15071 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3425:
	.loc 1 15075 0
	movq	-8(%rbp), %rax	# insn, tmp705
	movq	%rax, %rdi	# tmp705,
	call	extract_constrain_insn_cached	#
	.loc 1 15076 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3228
	cmpl	$2, %eax	#, which_alternative.3228
	je	.L3536	#,
	.loc 1 15076 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3537	#,
.L3536:
	.loc 1 15078 0 is_stmt 1
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3537:
	.loc 1 15080 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3538	#,
	.loc 1 15080 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3538	#,
	.loc 1 15082 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3538:
	.loc 1 15084 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3539	#,
	.loc 1 15086 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3539:
	.loc 1 15088 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3540	#,
	.loc 1 15088 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3541	#,
.L3540:
	.loc 1 15090 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3541:
	.loc 1 15094 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3424:
	.loc 1 15098 0
	movq	-8(%rbp), %rax	# insn, tmp706
	movq	%rax, %rdi	# tmp706,
	call	extract_constrain_insn_cached	#
	.loc 1 15099 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3229
	cmpl	$2, %eax	#, which_alternative.3229
	je	.L3542	#,
	.loc 1 15099 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3543	#,
.L3542:
	.loc 1 15101 0 is_stmt 1
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3543:
	.loc 1 15103 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3544	#,
	.loc 1 15103 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3544	#,
	.loc 1 15105 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3544:
	.loc 1 15107 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3545	#,
	.loc 1 15109 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3545:
	.loc 1 15111 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3546	#,
	.loc 1 15111 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3547	#,
.L3546:
	.loc 1 15113 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3547:
	.loc 1 15117 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3422:
	.loc 1 15124 0
	movq	-8(%rbp), %rax	# insn, tmp707
	movq	%rax, %rdi	# tmp707,
	call	extract_constrain_insn_cached	#
	.loc 1 15125 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3230
	cmpl	$1, %eax	#, which_alternative.3230
	jne	.L3548	#,
	.loc 1 15127 0
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3548:
	.loc 1 15129 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3549	#,
	.loc 1 15129 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3549	#,
	.loc 1 15131 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3549:
	.loc 1 15133 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3550	#,
	.loc 1 15135 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3550:
	.loc 1 15137 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3551	#,
	.loc 1 15139 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3551:
	.loc 1 15143 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3421:
	.loc 1 15156 0
	movq	-8(%rbp), %rax	# insn, tmp708
	movq	%rax, %rdi	# tmp708,
	call	extract_constrain_insn_cached	#
	.loc 1 15157 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3231
	testl	%eax, %eax	# which_alternative.3231
	je	.L3552	#,
	.loc 1 15159 0
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3552:
	.loc 1 15161 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3553	#,
	.loc 1 15161 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3553	#,
	.loc 1 15163 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3553:
	.loc 1 15165 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3554	#,
	.loc 1 15167 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3554:
	.loc 1 15169 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3555	#,
	.loc 1 15171 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3555:
	.loc 1 15175 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3419:
	.loc 1 15179 0
	movq	-8(%rbp), %rax	# insn, tmp709
	movq	%rax, %rdi	# tmp709,
	call	extract_constrain_insn_cached	#
	.loc 1 15180 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3232
	cmpl	$1, %eax	#, which_alternative.3232
	je	.L3556	#,
	.loc 1 15180 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3233
	cmpl	$2, %eax	#, which_alternative.3233
	je	.L3556	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3234
	cmpl	$3, %eax	#, which_alternative.3234
	jne	.L3557	#,
.L3556:
	.loc 1 15182 0 is_stmt 1
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3557:
	.loc 1 15184 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3558	#,
	.loc 1 15184 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3558	#,
	.loc 1 15186 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3558:
	.loc 1 15188 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3559	#,
	.loc 1 15190 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3559:
	.loc 1 15192 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3560	#,
	.loc 1 15194 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3560:
	.loc 1 15198 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3418:
	.loc 1 15206 0
	movq	-8(%rbp), %rax	# insn, tmp710
	movq	%rax, %rdi	# tmp710,
	call	extract_constrain_insn_cached	#
	.loc 1 15207 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3235
	testl	%eax, %eax	# which_alternative.3235
	je	.L3561	#,
	.loc 1 15209 0
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3561:
	.loc 1 15211 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3562	#,
	.loc 1 15211 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3562	#,
	.loc 1 15213 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3562:
	.loc 1 15215 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3563	#,
	.loc 1 15217 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3563:
	.loc 1 15219 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3564	#,
	.loc 1 15221 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3564:
	.loc 1 15225 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3417:
	.loc 1 15230 0
	movq	-8(%rbp), %rax	# insn, tmp711
	movq	%rax, %rdi	# tmp711,
	call	extract_constrain_insn_cached	#
	.loc 1 15231 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3236
	cmpl	$1, %eax	#, which_alternative.3236
	jne	.L3565	#,
	.loc 1 15231 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3566	#,
.L3565:
	.loc 1 15231 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3567	#,
	.loc 1 15231 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3567	#,
.L3566:
	.loc 1 15233 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3567:
	.loc 1 15235 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3568	#,
	.loc 1 15237 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3568:
	.loc 1 15239 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3569	#,
	.loc 1 15241 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3569:
	.loc 1 15245 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3416:
	.loc 1 15252 0
	movq	-8(%rbp), %rax	# insn, tmp712
	movq	%rax, %rdi	# tmp712,
	call	extract_constrain_insn_cached	#
	.loc 1 15253 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3237
	cmpl	$3, %eax	#, which_alternative.3237
	je	.L3570	#,
	.loc 1 15253 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3238
	cmpl	$4, %eax	#, which_alternative.3238
	jne	.L3571	#,
.L3570:
	.loc 1 15255 0 is_stmt 1
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3571:
	.loc 1 15257 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3572	#,
	.loc 1 15257 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3572	#,
	.loc 1 15259 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3572:
	.loc 1 15261 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3573	#,
	.loc 1 15263 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3573:
	.loc 1 15265 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3574	#,
	.loc 1 15265 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3239
	testl	%eax, %eax	# which_alternative.3239
	je	.L3575	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3240
	cmpl	$1, %eax	#, which_alternative.3240
	je	.L3575	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3241
	cmpl	$2, %eax	#, which_alternative.3241
	je	.L3575	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3575	#,
.L3574:
	.loc 1 15267 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3575:
	.loc 1 15271 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3415:
	.loc 1 15276 0
	movq	-8(%rbp), %rax	# insn, tmp713
	movq	%rax, %rdi	# tmp713,
	call	extract_constrain_insn_cached	#
	.loc 1 15277 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3242
	testl	%eax, %eax	# which_alternative.3242
	je	.L3576	#,
	.loc 1 15277 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3243
	cmpl	$1, %eax	#, which_alternative.3243
	je	.L3576	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3244
	cmpl	$2, %eax	#, which_alternative.3244
	je	.L3576	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3245
	cmpl	$3, %eax	#, which_alternative.3245
	je	.L3577	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3246
	cmpl	$4, %eax	#, which_alternative.3246
	jne	.L3576	#,
.L3577:
	.loc 1 15279 0 is_stmt 1
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3576:
	.loc 1 15281 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3578	#,
	.loc 1 15281 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3578	#,
	.loc 1 15283 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3578:
	.loc 1 15285 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3579	#,
	.loc 1 15287 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3579:
	.loc 1 15289 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3580	#,
	.loc 1 15289 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3247
	testl	%eax, %eax	# which_alternative.3247
	je	.L3581	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3248
	cmpl	$1, %eax	#, which_alternative.3248
	je	.L3581	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3249
	cmpl	$2, %eax	#, which_alternative.3249
	je	.L3581	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3250
	testl	%eax, %eax	# which_alternative.3250
	je	.L3582	#,
	.loc 1 15289 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3251
	cmpl	$1, %eax	#, which_alternative.3251
	je	.L3582	#,
	.loc 1 15289 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3252
	cmpl	$2, %eax	#, which_alternative.3252
	je	.L3582	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3253
	cmpl	$5, %eax	#, which_alternative.3253
	je	.L3581	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3254
	cmpl	$6, %eax	#, which_alternative.3254
	je	.L3581	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3255
	cmpl	$7, %eax	#, which_alternative.3255
	je	.L3581	#,
.L3582:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3256
	cmpl	$8, %eax	#, which_alternative.3256
	je	.L3581	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3581	#,
.L3580:
	.loc 1 15291 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3581:
	.loc 1 15295 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3414:
	.loc 1 15516 0
	movq	-8(%rbp), %rax	# insn, tmp714
	movq	%rax, %rdi	# tmp714,
	call	extract_insn_cached	#
	.loc 1 15517 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3583	#,
	.loc 1 15517 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3583	#,
	.loc 1 15519 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3583:
	.loc 1 15521 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3584	#,
	.loc 1 15523 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3584:
	.loc 1 15525 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3585	#,
	.loc 1 15525 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3586	#,
.L3585:
	.loc 1 15527 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3586:
	.loc 1 15531 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3413:
	.loc 1 15535 0
	movq	-8(%rbp), %rax	# insn, tmp715
	movq	%rax, %rdi	# tmp715,
	call	extract_constrain_insn_cached	#
	.loc 1 15536 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3587	#,
	.loc 1 15536 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3587	#,
	.loc 1 15538 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3587:
	.loc 1 15540 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3588	#,
	.loc 1 15542 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3588:
	.loc 1 15544 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3589	#,
	.loc 1 15544 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3257
	testl	%eax, %eax	# which_alternative.3257
	je	.L3590	#,
	.loc 1 15544 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3258
	cmpl	$1, %eax	#, which_alternative.3258
	je	.L3590	#,
	.loc 1 15544 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3259
	cmpl	$2, %eax	#, which_alternative.3259
	je	.L3590	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3260
	cmpl	$3, %eax	#, which_alternative.3260
	je	.L3591	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3261
	cmpl	$4, %eax	#, which_alternative.3261
	je	.L3591	#,
.L3590:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3262
	testl	%eax, %eax	# which_alternative.3262
	je	.L3591	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3263
	cmpl	$1, %eax	#, which_alternative.3263
	je	.L3591	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3264
	cmpl	$2, %eax	#, which_alternative.3264
	je	.L3591	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3265
	testl	%eax, %eax	# which_alternative.3265
	je	.L3592	#,
	.loc 1 15544 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3266
	cmpl	$1, %eax	#, which_alternative.3266
	je	.L3592	#,
	.loc 1 15544 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3267
	cmpl	$2, %eax	#, which_alternative.3267
	je	.L3592	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3268
	cmpl	$5, %eax	#, which_alternative.3268
	je	.L3591	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3269
	cmpl	$6, %eax	#, which_alternative.3269
	je	.L3591	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3270
	cmpl	$7, %eax	#, which_alternative.3270
	je	.L3591	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3271
	cmpl	$8, %eax	#, which_alternative.3271
	je	.L3591	#,
.L3592:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3272
	testl	%eax, %eax	# which_alternative.3272
	je	.L3593	#,
	.loc 1 15544 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3273
	cmpl	$1, %eax	#, which_alternative.3273
	je	.L3593	#,
	.loc 1 15544 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3274
	cmpl	$2, %eax	#, which_alternative.3274
	je	.L3593	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3275
	cmpl	$9, %eax	#, which_alternative.3275
	je	.L3591	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3276
	cmpl	$10, %eax	#, which_alternative.3276
	je	.L3591	#,
.L3593:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3277
	cmpl	$11, %eax	#, which_alternative.3277
	je	.L3591	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3591	#,
.L3589:
	.loc 1 15546 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3591:
	.loc 1 15550 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3412:
	.loc 1 15555 0
	movq	-8(%rbp), %rax	# insn, tmp716
	movq	%rax, %rdi	# tmp716,
	call	extract_constrain_insn_cached	#
	.loc 1 15556 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3278
	cmpl	$1, %eax	#, which_alternative.3278
	je	.L3594	#,
	.loc 1 15558 0
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3594:
	.loc 1 15562 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3595	#,
	.loc 1 15564 0
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3595:
	.loc 1 15568 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3411:
	.loc 1 15573 0
	movq	-8(%rbp), %rax	# insn, tmp717
	movq	%rax, %rdi	# tmp717,
	call	extract_constrain_insn_cached	#
	.loc 1 15574 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3279
	cmpl	$4, %eax	#, which_alternative.3279
	jne	.L3596	#,
	.loc 1 15576 0
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3596:
	.loc 1 15578 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3280
	cmpl	$5, %eax	#, which_alternative.3280
	je	.L3597	#,
	.loc 1 15578 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3281
	cmpl	$6, %eax	#, which_alternative.3281
	je	.L3597	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3282
	cmpl	$7, %eax	#, which_alternative.3282
	je	.L3597	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3283
	cmpl	$8, %eax	#, which_alternative.3283
	je	.L3597	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3284
	testl	%eax, %eax	# flag_pic.3284
	je	.L3597	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3597	#,
	.loc 1 15580 0 is_stmt 1
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3597:
	.loc 1 15582 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3598	#,
	.loc 1 15582 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3598	#,
	.loc 1 15584 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3598:
	.loc 1 15586 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3599	#,
	.loc 1 15588 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3599:
	.loc 1 15590 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3600	#,
	.loc 1 15590 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3285
	cmpl	$5, %eax	#, which_alternative.3285
	je	.L3601	#,
	.loc 1 15590 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3286
	cmpl	$6, %eax	#, which_alternative.3286
	je	.L3601	#,
	.loc 1 15590 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3287
	cmpl	$7, %eax	#, which_alternative.3287
	je	.L3601	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3288
	cmpl	$8, %eax	#, which_alternative.3288
	je	.L3601	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3289
	testl	%eax, %eax	# flag_pic.3289
	je	.L3602	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3602	#,
.L3601:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3290
	cmpl	$5, %eax	#, which_alternative.3290
	je	.L3603	#,
	.loc 1 15590 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3291
	cmpl	$6, %eax	#, which_alternative.3291
	je	.L3603	#,
	.loc 1 15590 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3292
	cmpl	$7, %eax	#, which_alternative.3292
	je	.L3602	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3293
	cmpl	$8, %eax	#, which_alternative.3293
	je	.L3602	#,
.L3603:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3294
	cmpl	$5, %eax	#, which_alternative.3294
	je	.L3602	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3295
	cmpl	$6, %eax	#, which_alternative.3295
	je	.L3602	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3602	#,
.L3600:
	.loc 1 15592 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3602:
	.loc 1 15596 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3410:
	.loc 1 15600 0
	movq	-8(%rbp), %rax	# insn, tmp718
	movq	%rax, %rdi	# tmp718,
	call	extract_constrain_insn_cached	#
	.loc 1 15601 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3296
	testl	%eax, %eax	# which_alternative.3296
	je	.L3604	#,
	.loc 1 15601 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3297
	cmpl	$1, %eax	#, which_alternative.3297
	jne	.L3605	#,
.L3604:
	.loc 1 15603 0 is_stmt 1
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3605:
	.loc 1 15605 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3606	#,
	.loc 1 15605 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3606	#,
	.loc 1 15607 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3606:
	.loc 1 15609 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3607	#,
	.loc 1 15611 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3607:
	.loc 1 15613 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3608	#,
	.loc 1 15613 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3298
	cmpl	$4, %eax	#, which_alternative.3298
	je	.L3609	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3299
	cmpl	$5, %eax	#, which_alternative.3299
	je	.L3609	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3300
	cmpl	$6, %eax	#, which_alternative.3300
	je	.L3609	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3301
	cmpl	$2, %eax	#, which_alternative.3301
	je	.L3609	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3302
	cmpl	$3, %eax	#, which_alternative.3302
	je	.L3609	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3609	#,
.L3608:
	.loc 1 15615 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3609:
	.loc 1 15619 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3409:
	.loc 1 15623 0
	movq	-8(%rbp), %rax	# insn, tmp719
	movq	%rax, %rdi	# tmp719,
	call	extract_constrain_insn_cached	#
	.loc 1 15624 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3303
	testl	%eax, %eax	# which_alternative.3303
	je	.L3610	#,
	.loc 1 15626 0
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3610:
	.loc 1 15630 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3611	#,
	.loc 1 15632 0
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3611:
	.loc 1 15636 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3408:
	.loc 1 15641 0
	movq	-8(%rbp), %rax	# insn, tmp720
	movq	%rax, %rdi	# tmp720,
	call	extract_constrain_insn_cached	#
	.loc 1 15642 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3612	#,
	.loc 1 15642 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3612	#,
	.loc 1 15644 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3612:
	.loc 1 15646 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3613	#,
	.loc 1 15648 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3613:
	.loc 1 15650 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3614	#,
	.loc 1 15650 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3615	#,
	.loc 1 15650 0 discriminator 2
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3304
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3305
	movl	%eax, %ecx	# ix86_cpu.3306, tmp738
	sarl	%cl, %edx	# tmp738, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3616	#,
.L3615:
	.loc 1 15650 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3616	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3307
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3308
	movl	%eax, %ecx	# ix86_cpu.3309, tmp740
	sarl	%cl, %edx	# tmp740, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	jne	.L3616	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3616	#,
.L3614:
	.loc 1 15652 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3616:
	.loc 1 15656 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3407:
	.loc 1 15662 0
	movq	-8(%rbp), %rax	# insn, tmp721
	movq	%rax, %rdi	# tmp721,
	call	extract_insn_cached	#
	.loc 1 15663 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3617	#,
	.loc 1 15663 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3617	#,
	.loc 1 15665 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3617:
	.loc 1 15667 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3618	#,
	.loc 1 15669 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3618:
	.loc 1 15671 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3619	#,
	.loc 1 15671 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp722
	movq	%rax, %rdi	# tmp722,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57327
	je	.L3620	#,
	movq	-8(%rbp), %rax	# insn, tmp723
	movq	%rax, %rdi	# tmp723,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57327
	je	.L3620	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3620	#,
.L3619:
	.loc 1 15673 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3620:
	.loc 1 15677 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3406:
	.loc 1 15681 0
	movq	-8(%rbp), %rax	# insn, tmp724
	movq	%rax, %rdi	# tmp724,
	call	extract_constrain_insn_cached	#
	.loc 1 15682 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3621	#,
	.loc 1 15682 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3621	#,
	.loc 1 15684 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3621:
	.loc 1 15686 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3622	#,
	.loc 1 15688 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3622:
	.loc 1 15690 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3623	#,
	.loc 1 15690 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3310
	cmpl	$3, %eax	#, which_alternative.3310
	jne	.L3624	#,
	.loc 1 15690 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3311
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3312
	movl	%eax, %ecx	# ix86_cpu.3313, tmp742
	sarl	%cl, %edx	# tmp742, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3625	#,
	.loc 1 15690 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3314
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3315
	movl	%eax, %ecx	# ix86_cpu.3316, tmp744
	sarl	%cl, %edx	# tmp744, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3625	#,
.L3624:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3317
	cmpl	$3, %eax	#, which_alternative.3317
	jne	.L3626	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3318
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3319
	movl	%eax, %ecx	# ix86_cpu.3320, tmp746
	sarl	%cl, %edx	# tmp746, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3627	#,
	.loc 1 15690 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3321
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3322
	movl	%eax, %ecx	# ix86_cpu.3323, tmp748
	sarl	%cl, %edx	# tmp748, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3627	#,
.L3626:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3324
	cmpl	$3, %eax	#, which_alternative.3324
	je	.L3627	#,
	.loc 1 15690 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3325
	cmpl	$5, %eax	#, which_alternative.3325
	je	.L3627	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3326
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3327
	movl	%eax, %ecx	# ix86_cpu.3328, tmp750
	sarl	%cl, %edx	# tmp750, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3625	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3329
	cmpl	$2, %eax	#, which_alternative.3329
	jne	.L3625	#,
.L3627:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3330
	cmpl	$3, %eax	#, which_alternative.3330
	jne	.L3628	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3331
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3332
	movl	%eax, %ecx	# ix86_cpu.3333, tmp752
	sarl	%cl, %edx	# tmp752, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3629	#,
	.loc 1 15690 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3334
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3335
	movl	%eax, %ecx	# ix86_cpu.3336, tmp754
	sarl	%cl, %edx	# tmp754, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3629	#,
.L3628:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3337
	cmpl	$3, %eax	#, which_alternative.3337
	je	.L3625	#,
	.loc 1 15690 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3338
	cmpl	$5, %eax	#, which_alternative.3338
	je	.L3625	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3339
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3340
	movl	%eax, %ecx	# ix86_cpu.3341, tmp756
	sarl	%cl, %edx	# tmp756, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3629	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3342
	cmpl	$2, %eax	#, which_alternative.3342
	je	.L3625	#,
.L3629:
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3625	#,
.L3623:
	.loc 1 15692 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3625:
	.loc 1 15696 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3405:
	.loc 1 15700 0
	movq	-8(%rbp), %rax	# insn, tmp725
	movq	%rax, %rdi	# tmp725,
	call	extract_constrain_insn_cached	#
	.loc 1 15701 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3630	#,
	.loc 1 15701 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3630	#,
	.loc 1 15703 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3630:
	.loc 1 15705 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3631	#,
	.loc 1 15707 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3631:
	.loc 1 15709 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3632	#,
	.loc 1 15709 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp726
	movq	%rax, %rdi	# tmp726,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57327
	je	.L3633	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3343
	testl	%eax, %eax	# which_alternative.3343
	je	.L3634	#,
	.loc 1 15709 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3344
	cmpl	$1, %eax	#, which_alternative.3344
	jne	.L3635	#,
.L3634:
	.loc 1 15709 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3345
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3346
	movl	%eax, %ecx	# ix86_cpu.3347, tmp758
	sarl	%cl, %edx	# tmp758, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3636	#,
	.loc 1 15709 0 discriminator 2
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.3348
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3349
	movl	%eax, %ecx	# ix86_cpu.3350, tmp760
	sarl	%cl, %edx	# tmp760, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3636	#,
.L3635:
	.loc 1 15709 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3351
	cmpl	$2, %eax	#, which_alternative.3351
	je	.L3637	#,
	.loc 1 15709 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3352
	cmpl	$3, %eax	#, which_alternative.3352
	je	.L3637	#,
	.loc 1 15709 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3353
	cmpl	$4, %eax	#, which_alternative.3353
	jne	.L3638	#,
.L3637:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3636	#,
.L3638:
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3354
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3355
	movl	%eax, %ecx	# ix86_cpu.3356, tmp762
	sarl	%cl, %edx	# tmp762, D.57325
	movl	%edx, %eax	# D.57325, D.57325
	andl	$1, %eax	#, D.57325
	testl	%eax, %eax	# D.57325
	je	.L3636	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3357
	testl	%eax, %eax	# which_alternative.3357
	je	.L3633	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3358
	cmpl	$1, %eax	#, which_alternative.3358
	je	.L3633	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3359
	cmpl	$3, %eax	#, which_alternative.3359
	je	.L3633	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3360
	cmpl	$4, %eax	#, which_alternative.3360
	je	.L3633	#,
.L3636:
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3633	#,
.L3632:
	.loc 1 15711 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3633:
	.loc 1 15715 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3402:
	.loc 1 15719 0
	movq	-8(%rbp), %rax	# insn, tmp727
	movq	%rax, %rdi	# tmp727,
	call	extract_constrain_insn_cached	#
	.loc 1 15720 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3361
	cmpl	$4, %eax	#, which_alternative.3361
	je	.L3639	#,
	.loc 1 15720 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3362
	cmpl	$5, %eax	#, which_alternative.3362
	je	.L3639	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3363
	cmpl	$6, %eax	#, which_alternative.3363
	je	.L3639	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3364
	cmpl	$7, %eax	#, which_alternative.3364
	je	.L3639	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3365
	cmpl	$8, %eax	#, which_alternative.3365
	je	.L3639	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3366
	cmpl	$9, %eax	#, which_alternative.3366
	je	.L3639	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3367
	testl	%eax, %eax	# flag_pic.3367
	je	.L3639	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3639	#,
	.loc 1 15722 0 is_stmt 1
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3639:
	.loc 1 15724 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3640	#,
	.loc 1 15724 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3640	#,
	.loc 1 15726 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3640:
	.loc 1 15728 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3641	#,
	.loc 1 15730 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3641:
	.loc 1 15732 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3642	#,
	.loc 1 15732 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3368
	cmpl	$4, %eax	#, which_alternative.3368
	je	.L3643	#,
	.loc 1 15732 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3369
	cmpl	$5, %eax	#, which_alternative.3369
	je	.L3643	#,
	.loc 1 15732 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3370
	cmpl	$6, %eax	#, which_alternative.3370
	je	.L3643	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3371
	cmpl	$7, %eax	#, which_alternative.3371
	je	.L3643	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3372
	cmpl	$8, %eax	#, which_alternative.3372
	je	.L3643	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3373
	cmpl	$9, %eax	#, which_alternative.3373
	je	.L3643	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3374
	testl	%eax, %eax	# flag_pic.3374
	je	.L3644	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3644	#,
.L3643:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3375
	cmpl	$4, %eax	#, which_alternative.3375
	je	.L3645	#,
	.loc 1 15732 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3376
	cmpl	$5, %eax	#, which_alternative.3376
	je	.L3645	#,
	.loc 1 15732 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3377
	cmpl	$6, %eax	#, which_alternative.3377
	je	.L3645	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3378
	cmpl	$7, %eax	#, which_alternative.3378
	je	.L3644	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3379
	cmpl	$8, %eax	#, which_alternative.3379
	je	.L3644	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3380
	cmpl	$9, %eax	#, which_alternative.3380
	je	.L3644	#,
.L3645:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3381
	cmpl	$4, %eax	#, which_alternative.3381
	je	.L3644	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3382
	cmpl	$5, %eax	#, which_alternative.3382
	je	.L3644	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3383
	cmpl	$6, %eax	#, which_alternative.3383
	je	.L3644	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3644	#,
.L3642:
	.loc 1 15734 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3644:
	.loc 1 15738 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3401:
	.loc 1 15774 0
	movq	-8(%rbp), %rax	# insn, tmp728
	movq	%rax, %rdi	# tmp728,
	call	extract_insn_cached	#
	.loc 1 15775 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3646	#,
	.loc 1 15777 0
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3646:
	.loc 1 15779 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3647	#,
	.loc 1 15781 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3647:
	.loc 1 15785 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3400:
	.loc 1 15794 0
	movq	-8(%rbp), %rax	# insn, tmp729
	movq	%rax, %rdi	# tmp729,
	call	extract_insn_cached	#
	.loc 1 15795 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3648	#,
	.loc 1 15797 0
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3648:
	.loc 1 15801 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3399:
	.loc 1 15812 0
	movq	-8(%rbp), %rax	# insn, tmp730
	movq	%rax, %rdi	# tmp730,
	call	extract_insn_cached	#
	.loc 1 15813 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3649	#,
	.loc 1 15815 0
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3649:
	.loc 1 15819 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3397:
	.loc 1 15848 0
	movq	-8(%rbp), %rax	# insn, tmp731
	movq	%rax, %rdi	# tmp731,
	call	extract_insn_cached	#
	.loc 1 15849 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	jne	.L3650	#,
	.loc 1 15849 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3651	#,
.L3650:
	.loc 1 15851 0 is_stmt 1
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3651:
	.loc 1 15855 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3395:
	.loc 1 15859 0
	movq	-8(%rbp), %rax	# insn, tmp732
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57326
	movzwl	(%rax), %eax	# _792->code, D.57328
	cmpw	$40, %ax	#, D.57328
	je	.L3398	#,
	.loc 1 15860 0
	movq	-8(%rbp), %rax	# insn, tmp733
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57326
	movq	%rax, %rdi	# D.57326,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57325
	jns	.L3398	#,
	.loc 1 15861 0
	movq	-8(%rbp), %rax	# insn, tmp734
	movl	$__FUNCTION__.16789, %ecx	#,
	movl	$15861, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp734,
	call	_fatal_insn_not_found	#
.L3398:
	.loc 1 15976 0
	movl	$4, %eax	#, D.57324
	jmp	.L3448	#
.L3420:
	.loc 1 15999 0
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3403:
	.loc 1 16019 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3404:
	.loc 1 16026 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3423:
	.loc 1 16065 0
	movl	$0, %eax	#, D.57324
	jmp	.L3448	#
.L3394:
	.loc 1 16068 0
	movq	-8(%rbp), %rax	# insn, tmp735
	movq	%rax, %rdi	# tmp735,
	call	extract_insn_cached	#
	.loc 1 16069 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3652	#,
	.loc 1 16069 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3652	#,
	.loc 1 16071 0 is_stmt 1
	movl	$3, %eax	#, D.57324
	jmp	.L3448	#
.L3652:
	.loc 1 16073 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3653	#,
	.loc 1 16075 0
	movl	$2, %eax	#, D.57324
	jmp	.L3448	#
.L3653:
	.loc 1 16077 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57326
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57326,
	call	memory_operand	#
	testl	%eax, %eax	# D.57325
	je	.L3654	#,
	.loc 1 16079 0
	movl	$1, %eax	#, D.57324
	jmp	.L3448	#
.L3654:
	.loc 1 16083 0
	movl	$0, %eax	#, D.57324
.L3448:
	.loc 1 16087 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE54:
	.size	get_attr_memory, .-get_attr_memory
	.globl	get_attr_modrm
	.type	get_attr_modrm, @function
get_attr_modrm:
.LFB55:
	.loc 1 16093 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 16094 0
	movq	-8(%rbp), %rax	# insn, tmp285
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57329
	testl	%eax, %eax	# D.57329
	js	.L3656	#,
	.loc 1 16094 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp286
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.3384
	jmp	.L3657	#
.L3656:
	.loc 1 16094 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp287
	movq	%rax, %rdi	# tmp287,
	call	recog_memoized_1	#
.L3657:
	.loc 1 16094 0 discriminator 3
	addl	$1, %eax	#, tmp288
	cmpl	$806, %eax	#, tmp288
	ja	.L3658	#,
	movl	%eax, %eax	# tmp288, tmp289
	movq	.L3660(,%rax,8), %rax	#, tmp290
	jmp	*%rax	# tmp290
	.section	.rodata
	.align 8
	.align 4
.L3660:
	.quad	.L3659
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3661
	.quad	.L3658
	.quad	.L3661
	.quad	.L3662
	.quad	.L3658
	.quad	.L3661
	.quad	.L3662
	.quad	.L3658
	.quad	.L3663
	.quad	.L3663
	.quad	.L3663
	.quad	.L3664
	.quad	.L3664
	.quad	.L3658
	.quad	.L3658
	.quad	.L3665
	.quad	.L3666
	.quad	.L3666
	.quad	.L3661
	.quad	.L3663
	.quad	.L3663
	.quad	.L3667
	.quad	.L3666
	.quad	.L3666
	.quad	.L3661
	.quad	.L3661
	.quad	.L3668
	.quad	.L3658
	.quad	.L3663
	.quad	.L3663
	.quad	.L3669
	.quad	.L3661
	.quad	.L3668
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3670
	.quad	.L3670
	.quad	.L3666
	.quad	.L3666
	.quad	.L3658
	.quad	.L3670
	.quad	.L3671
	.quad	.L3668
	.quad	.L3668
	.quad	.L3668
	.quad	.L3658
	.quad	.L3672
	.quad	.L3663
	.quad	.L3664
	.quad	.L3664
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3673
	.quad	.L3666
	.quad	.L3666
	.quad	.L3661
	.quad	.L3674
	.quad	.L3674
	.quad	.L3675
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3676
	.quad	.L3676
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3676
	.quad	.L3676
	.quad	.L3676
	.quad	.L3676
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3677
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3662
	.quad	.L3658
	.quad	.L3658
	.quad	.L3678
	.quad	.L3678
	.quad	.L3678
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3679
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3662
	.quad	.L3662
	.quad	.L3680
	.quad	.L3661
	.quad	.L3658
	.quad	.L3662
	.quad	.L3661
	.quad	.L3662
	.quad	.L3661
	.quad	.L3662
	.quad	.L3661
	.quad	.L3662
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3662
	.quad	.L3662
	.quad	.L3658
	.quad	.L3662
	.quad	.L3662
	.quad	.L3658
	.quad	.L3662
	.quad	.L3662
	.quad	.L3658
	.quad	.L3662
	.quad	.L3662
	.quad	.L3658
	.quad	.L3662
	.quad	.L3662
	.quad	.L3662
	.quad	.L3662
	.quad	.L3662
	.quad	.L3662
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3681
	.quad	.L3682
	.quad	.L3682
	.quad	.L3682
	.quad	.L3682
	.quad	.L3681
	.quad	.L3681
	.quad	.L3683
	.quad	.L3683
	.quad	.L3683
	.quad	.L3683
	.quad	.L3683
	.quad	.L3683
	.quad	.L3684
	.quad	.L3685
	.quad	.L3685
	.quad	.L3685
	.quad	.L3685
	.quad	.L3685
	.quad	.L3686
	.quad	.L3687
	.quad	.L3687
	.quad	.L3687
	.quad	.L3685
	.quad	.L3687
	.quad	.L3687
	.quad	.L3687
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3688
	.quad	.L3689
	.quad	.L3689
	.quad	.L3690
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3662
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3662
	.quad	.L3662
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3661
	.quad	.L3662
	.quad	.L3658
	.quad	.L3661
	.quad	.L3662
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3691
	.quad	.L3691
	.quad	.L3658
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3658
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3691
	.quad	.L3662
	.quad	.L3658
	.quad	.L3661
	.quad	.L3662
	.quad	.L3658
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3679
	.quad	.L3679
	.quad	.L3679
	.quad	.L3661
	.quad	.L3661
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3692
	.quad	.L3693
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3658
	.quad	.L3661
	.text
.L3693:
	.loc 1 16097 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp291
	movq	%rax, %rdi	# tmp291,
	call	extract_constrain_insn_cached	#
	.loc 1 16098 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3385
	cmpl	$1, %eax	#, which_alternative.3385
	jne	.L3694	#,
	.loc 1 16098 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57330
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	const0_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3694	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3694	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3694	#,
	.loc 1 16100 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3694:
	.loc 1 16104 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3692:
	.loc 1 16108 0
	movq	-8(%rbp), %rax	# insn, tmp292
	movq	%rax, %rdi	# tmp292,
	call	extract_constrain_insn_cached	#
	.loc 1 16109 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3386
	cmpl	$1, %eax	#, which_alternative.3386
	jne	.L3696	#,
	.loc 1 16109 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	const0_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3696	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3696	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3696	#,
	.loc 1 16111 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3696:
	.loc 1 16115 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3691:
	.loc 1 16142 0
	movq	-8(%rbp), %rax	# insn, tmp293
	movq	%rax, %rdi	# tmp293,
	call	get_attr_i387	#
	cmpl	$1, %eax	#, D.57329
	jne	.L3697	#,
	.loc 1 16144 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3697:
	.loc 1 16148 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3690:
	.loc 1 16152 0
	movq	-8(%rbp), %rax	# insn, tmp294
	movq	%rax, %rdi	# tmp294,
	call	extract_constrain_insn_cached	#
	.loc 1 16153 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3387
	testl	%eax, %eax	# which_alternative.3387
	jne	.L3698	#,
	.loc 1 16155 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3698:
	.loc 1 16157 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3388
	cmpl	$1, %eax	#, which_alternative.3388
	je	.L3699	#,
	.loc 1 16157 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3389
	cmpl	$2, %eax	#, which_alternative.3389
	jne	.L3700	#,
.L3699:
	.loc 1 16159 0 is_stmt 1
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3700:
	.loc 1 16163 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3687:
	.loc 1 16172 0
	movq	-8(%rbp), %rax	# insn, tmp295
	movq	%rax, %rdi	# tmp295,
	call	extract_insn_cached	#
	.loc 1 16173 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57330
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3701	#,
	.loc 1 16173 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3702	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3701	#,
.L3702:
	.loc 1 16175 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3701:
	.loc 1 16179 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3686:
	.loc 1 16183 0
	movq	-8(%rbp), %rax	# insn, tmp296
	movq	%rax, %rdi	# tmp296,
	call	extract_constrain_insn_cached	#
	.loc 1 16184 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3390
	cmpl	$3, %eax	#, which_alternative.3390
	je	.L3703	#,
	.loc 1 16184 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57330
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3703	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3704	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3703	#,
.L3704:
	.loc 1 16186 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3703:
	.loc 1 16190 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3685:
	.loc 1 16199 0
	movq	-8(%rbp), %rax	# insn, tmp297
	movq	%rax, %rdi	# tmp297,
	call	extract_insn_cached	#
	.loc 1 16200 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57330
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3705	#,
	.loc 1 16200 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3706	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3705	#,
.L3706:
	.loc 1 16202 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3705:
	.loc 1 16206 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3684:
	.loc 1 16210 0
	movq	-8(%rbp), %rax	# insn, tmp298
	movq	%rax, %rdi	# tmp298,
	call	extract_constrain_insn_cached	#
	.loc 1 16211 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3391
	cmpl	$2, %eax	#, which_alternative.3391
	je	.L3707	#,
	.loc 1 16211 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57330
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3707	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3708	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3707	#,
.L3708:
	.loc 1 16213 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3707:
	.loc 1 16217 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3683:
	.loc 1 16226 0
	movq	-8(%rbp), %rax	# insn, tmp299
	movq	%rax, %rdi	# tmp299,
	call	extract_insn_cached	#
	.loc 1 16227 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3709	#,
	.loc 1 16227 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3710	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3709	#,
.L3710:
	.loc 1 16229 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3709:
	.loc 1 16233 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3682:
	.loc 1 16240 0
	movq	-8(%rbp), %rax	# insn, tmp300
	movq	%rax, %rdi	# tmp300,
	call	extract_insn_cached	#
	.loc 1 16241 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57330
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3711	#,
	.loc 1 16241 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3712	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3711	#,
.L3712:
	.loc 1 16243 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3711:
	.loc 1 16247 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3681:
	.loc 1 16253 0
	movq	-8(%rbp), %rax	# insn, tmp301
	movq	%rax, %rdi	# tmp301,
	call	extract_insn_cached	#
	.loc 1 16254 0
	movq	-8(%rbp), %rax	# insn, tmp302
	movq	%rax, %rdi	# tmp302,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57331
	jne	.L3713	#,
	.loc 1 16254 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3714	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3713	#,
.L3714:
	.loc 1 16256 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3713:
	.loc 1 16260 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3680:
	.loc 1 16264 0
	movq	-8(%rbp), %rax	# insn, tmp303
	movq	%rax, %rdi	# tmp303,
	call	extract_constrain_insn_cached	#
	.loc 1 16265 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3392
	testl	%eax, %eax	# which_alternative.3392
	je	.L3715	#,
	.loc 1 16267 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3715:
	.loc 1 16271 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3679:
	.loc 1 16278 0
	movq	-8(%rbp), %rax	# insn, tmp304
	movq	%rax, %rdi	# tmp304,
	call	extract_constrain_insn_cached	#
	.loc 1 16279 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3393
	testl	%eax, %eax	# which_alternative.3393
	je	.L3716	#,
	.loc 1 16279 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3394
	cmpl	$1, %eax	#, which_alternative.3394
	jne	.L3717	#,
.L3716:
	.loc 1 16281 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3717:
	.loc 1 16285 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3678:
	.loc 1 16291 0
	movq	-8(%rbp), %rax	# insn, tmp305
	movq	%rax, %rdi	# tmp305,
	call	extract_constrain_insn_cached	#
	.loc 1 16292 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3395
	cmpl	$4, %eax	#, ix86_cpu.3395
	je	.L3718	#,
	.loc 1 16292 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3396
	testl	%eax, %eax	# which_alternative.3396
	jne	.L3718	#,
	.loc 1 16294 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3718:
	.loc 1 16298 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3677:
	.loc 1 16302 0
	movq	-8(%rbp), %rax	# insn, tmp306
	movq	%rax, %rdi	# tmp306,
	call	extract_constrain_insn_cached	#
	.loc 1 16303 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3397
	cmpl	$1, %eax	#, which_alternative.3397
	jne	.L3719	#,
	.loc 1 16303 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3719	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3719	#,
	.loc 1 16305 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3719:
	.loc 1 16309 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3676:
	.loc 1 16318 0
	movq	-8(%rbp), %rax	# insn, tmp307
	movq	%rax, %rdi	# tmp307,
	call	extract_constrain_insn_cached	#
	.loc 1 16319 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3398
	testl	%eax, %eax	# which_alternative.3398
	je	.L3720	#,
	.loc 1 16319 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3399
	cmpl	$1, %eax	#, which_alternative.3399
	je	.L3720	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3400
	cmpl	$2, %eax	#, which_alternative.3400
	jne	.L3721	#,
.L3720:
	.loc 1 16321 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3721:
	.loc 1 16325 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3675:
	.loc 1 16329 0
	movq	-8(%rbp), %rax	# insn, tmp308
	movq	%rax, %rdi	# tmp308,
	call	extract_constrain_insn_cached	#
	.loc 1 16330 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3401
	testl	%eax, %eax	# which_alternative.3401
	je	.L3722	#,
	.loc 1 16330 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3402
	cmpl	$1, %eax	#, which_alternative.3402
	je	.L3722	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3403
	cmpl	$2, %eax	#, which_alternative.3403
	je	.L3722	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3404
	cmpl	$3, %eax	#, which_alternative.3404
	je	.L3723	#,
	.loc 1 16330 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3405
	cmpl	$4, %eax	#, which_alternative.3405
	jne	.L3724	#,
.L3723:
	.loc 1 16330 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3724	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3724	#,
.L3722:
	.loc 1 16332 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3724:
	.loc 1 16336 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3674:
	.loc 1 16341 0
	movq	-8(%rbp), %rax	# insn, tmp309
	movq	%rax, %rdi	# tmp309,
	call	extract_constrain_insn_cached	#
	.loc 1 16342 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3406
	cmpl	$1, %eax	#, which_alternative.3406
	jne	.L3725	#,
	.loc 1 16342 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	memory_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3725	#,
	.loc 1 16344 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3725:
	.loc 1 16348 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3673:
	.loc 1 16352 0
	movq	-8(%rbp), %rax	# insn, tmp310
	movq	%rax, %rdi	# tmp310,
	call	extract_constrain_insn_cached	#
	.loc 1 16353 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3407
	testl	%eax, %eax	# which_alternative.3407
	jne	.L3726	#,
	.loc 1 16355 0
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3408
	testl	%eax, %eax	# flag_pic.3408
	je	.L3727	#,
	.loc 1 16355 0 is_stmt 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3728	#,
.L3727:
	.loc 1 16355 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3728	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3728	#,
	.loc 1 16357 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3728:
	.loc 1 16361 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3726:
	.loc 1 16364 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3409
	cmpl	$1, %eax	#, which_alternative.3409
	je	.L3729	#,
	.loc 1 16364 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3410
	cmpl	$2, %eax	#, which_alternative.3410
	jne	.L3730	#,
.L3729:
	.loc 1 16366 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3730:
	.loc 1 16370 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3411
	cmpl	$5, %eax	#, which_alternative.3411
	je	.L3731	#,
	.loc 1 16370 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3412
	cmpl	$6, %eax	#, which_alternative.3412
	je	.L3731	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3413
	cmpl	$7, %eax	#, which_alternative.3413
	je	.L3731	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3414
	cmpl	$8, %eax	#, which_alternative.3414
	je	.L3731	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3415
	cmpl	$4, %eax	#, which_alternative.3415
	je	.L3731	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3416
	testl	%eax, %eax	# flag_pic.3416
	je	.L3732	#,
	.loc 1 16370 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3731	#,
.L3732:
	.loc 1 16370 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3731	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3731	#,
	.loc 1 16372 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3731:
	.loc 1 16376 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3672:
	.loc 1 16381 0
	movq	-8(%rbp), %rax	# insn, tmp311
	movq	%rax, %rdi	# tmp311,
	call	extract_constrain_insn_cached	#
	.loc 1 16382 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3417
	testl	%eax, %eax	# which_alternative.3417
	jne	.L3733	#,
	.loc 1 16382 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	memory_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3733	#,
	.loc 1 16384 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3733:
	.loc 1 16388 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3671:
	.loc 1 16392 0
	movq	-8(%rbp), %rax	# insn, tmp312
	movq	%rax, %rdi	# tmp312,
	call	extract_constrain_insn_cached	#
	.loc 1 16393 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3734	#,
	.loc 1 16393 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3418
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3419
	movl	%eax, %ecx	# ix86_cpu.3420, tmp332
	sarl	%cl, %edx	# tmp332, D.57329
	movl	%edx, %eax	# D.57329, D.57329
	andl	$1, %eax	#, D.57329
	testl	%eax, %eax	# D.57329
	jne	.L3734	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3734	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3734	#,
	.loc 1 16395 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3734:
	.loc 1 16399 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3670:
	.loc 1 16405 0
	movq	-8(%rbp), %rax	# insn, tmp313
	movq	%rax, %rdi	# tmp313,
	call	extract_insn_cached	#
	.loc 1 16406 0
	movq	-8(%rbp), %rax	# insn, tmp314
	movq	%rax, %rdi	# tmp314,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57331
	jne	.L3735	#,
	.loc 1 16406 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3735	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3735	#,
	.loc 1 16408 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3735:
	.loc 1 16412 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3669:
	.loc 1 16416 0
	movq	-8(%rbp), %rax	# insn, tmp315
	movq	%rax, %rdi	# tmp315,
	call	extract_constrain_insn_cached	#
	.loc 1 16417 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3421
	cmpl	$3, %eax	#, which_alternative.3421
	jne	.L3736	#,
	.loc 1 16417 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3422
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3423
	movl	%eax, %ecx	# ix86_cpu.3424, tmp334
	sarl	%cl, %edx	# tmp334, D.57329
	movl	%edx, %eax	# D.57329, D.57329
	andl	$1, %eax	#, D.57329
	testl	%eax, %eax	# D.57329
	je	.L3737	#,
	.loc 1 16417 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3425
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3426
	movl	%eax, %ecx	# ix86_cpu.3427, tmp336
	sarl	%cl, %edx	# tmp336, D.57329
	movl	%edx, %eax	# D.57329, D.57329
	andl	$1, %eax	#, D.57329
	testl	%eax, %eax	# D.57329
	je	.L3737	#,
.L3736:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3428
	cmpl	$3, %eax	#, which_alternative.3428
	jne	.L3738	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3429
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3430
	movl	%eax, %ecx	# ix86_cpu.3431, tmp338
	sarl	%cl, %edx	# tmp338, D.57329
	movl	%edx, %eax	# D.57329, D.57329
	andl	$1, %eax	#, D.57329
	testl	%eax, %eax	# D.57329
	je	.L3739	#,
	.loc 1 16417 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3432
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3433
	movl	%eax, %ecx	# ix86_cpu.3434, tmp340
	sarl	%cl, %edx	# tmp340, D.57329
	movl	%edx, %eax	# D.57329, D.57329
	andl	$1, %eax	#, D.57329
	testl	%eax, %eax	# D.57329
	je	.L3739	#,
.L3738:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3435
	cmpl	$3, %eax	#, which_alternative.3435
	je	.L3739	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3436
	cmpl	$5, %eax	#, which_alternative.3436
	je	.L3739	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3437
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3438
	movl	%eax, %ecx	# ix86_cpu.3439, tmp342
	sarl	%cl, %edx	# tmp342, D.57329
	movl	%edx, %eax	# D.57329, D.57329
	andl	$1, %eax	#, D.57329
	testl	%eax, %eax	# D.57329
	je	.L3737	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3440
	cmpl	$2, %eax	#, which_alternative.3440
	je	.L3739	#,
.L3737:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3739	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3739	#,
	.loc 1 16419 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3739:
	.loc 1 16423 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3668:
	.loc 1 16431 0
	movq	-8(%rbp), %rax	# insn, tmp316
	movq	%rax, %rdi	# tmp316,
	call	extract_insn_cached	#
	.loc 1 16432 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3740	#,
	.loc 1 16432 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3740	#,
	.loc 1 16434 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3740:
	.loc 1 16438 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3667:
	.loc 1 16442 0
	movq	-8(%rbp), %rax	# insn, tmp317
	movq	%rax, %rdi	# tmp317,
	call	extract_constrain_insn_cached	#
	.loc 1 16443 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3441
	testl	%eax, %eax	# which_alternative.3441
	jne	.L3741	#,
	.loc 1 16445 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3741:
	.loc 1 16447 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3442
	cmpl	$1, %eax	#, which_alternative.3442
	je	.L3742	#,
	.loc 1 16447 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3443
	cmpl	$2, %eax	#, which_alternative.3443
	jne	.L3743	#,
.L3742:
	.loc 1 16449 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp318
	movq	%rax, %rdi	# tmp318,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57331
	jne	.L3744	#,
	.loc 1 16449 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3744	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3744	#,
	.loc 1 16451 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3744:
	.loc 1 16455 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3743:
	.loc 1 16458 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3444
	cmpl	$3, %eax	#, which_alternative.3444
	jne	.L3745	#,
	.loc 1 16460 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3745:
	.loc 1 16464 0
	movq	-8(%rbp), %rax	# insn, tmp319
	movq	%rax, %rdi	# tmp319,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57331
	jne	.L3746	#,
	.loc 1 16464 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3746	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3746	#,
	.loc 1 16466 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3746:
	.loc 1 16470 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3666:
	.loc 1 16482 0
	movq	-8(%rbp), %rax	# insn, tmp320
	movq	%rax, %rdi	# tmp320,
	call	extract_constrain_insn_cached	#
	.loc 1 16483 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3445
	testl	%eax, %eax	# which_alternative.3445
	jne	.L3747	#,
	.loc 1 16485 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3747:
	.loc 1 16489 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3748	#,
	.loc 1 16489 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3748	#,
	.loc 1 16491 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3748:
	.loc 1 16495 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3665:
	.loc 1 16500 0
	movq	-8(%rbp), %rax	# insn, tmp321
	movq	%rax, %rdi	# tmp321,
	call	extract_constrain_insn_cached	#
	.loc 1 16501 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3446
	testl	%eax, %eax	# which_alternative.3446
	jne	.L3749	#,
	.loc 1 16503 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3749:
	.loc 1 16505 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3447
	cmpl	$1, %eax	#, which_alternative.3447
	jne	.L3750	#,
	.loc 1 16507 0
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3448
	testl	%eax, %eax	# flag_pic.3448
	je	.L3751	#,
	.loc 1 16507 0 is_stmt 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3752	#,
.L3751:
	.loc 1 16507 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3752	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3752	#,
	.loc 1 16509 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3752:
	.loc 1 16513 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3750:
	.loc 1 16516 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3449
	cmpl	$2, %eax	#, which_alternative.3449
	jne	.L3753	#,
	.loc 1 16518 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3753:
	.loc 1 16522 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3450
	cmpl	$4, %eax	#, which_alternative.3450
	je	.L3754	#,
	.loc 1 16522 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3451
	cmpl	$5, %eax	#, which_alternative.3451
	je	.L3754	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3452
	cmpl	$6, %eax	#, which_alternative.3452
	je	.L3754	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3453
	cmpl	$7, %eax	#, which_alternative.3453
	je	.L3754	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3454
	cmpl	$8, %eax	#, which_alternative.3454
	je	.L3754	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3455
	cmpl	$9, %eax	#, which_alternative.3455
	je	.L3754	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3456
	testl	%eax, %eax	# flag_pic.3456
	je	.L3755	#,
	.loc 1 16522 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3754	#,
.L3755:
	.loc 1 16522 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	register_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3754	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57329
	je	.L3754	#,
	.loc 1 16524 0 is_stmt 1
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3754:
	.loc 1 16528 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3664:
	.loc 1 16536 0
	movq	-8(%rbp), %rax	# insn, tmp322
	movq	%rax, %rdi	# tmp322,
	call	extract_insn_cached	#
	.loc 1 16537 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	memory_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3756	#,
	.loc 1 16539 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3756:
	.loc 1 16543 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3663:
	.loc 1 16554 0
	movq	-8(%rbp), %rax	# insn, tmp323
	movq	%rax, %rdi	# tmp323,
	call	extract_insn_cached	#
	.loc 1 16555 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57330
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57330,
	call	memory_operand	#
	testl	%eax, %eax	# D.57329
	jne	.L3757	#,
	.loc 1 16557 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3757:
	.loc 1 16561 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3688:
	.loc 1 16565 0
	movq	-8(%rbp), %rax	# insn, tmp324
	movq	%rax, %rdi	# tmp324,
	call	extract_constrain_insn_cached	#
	.loc 1 16566 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3457
	testl	%eax, %eax	# which_alternative.3457
	jne	.L3758	#,
	.loc 1 16568 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3758:
	.loc 1 16570 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3458
	cmpl	$1, %eax	#, which_alternative.3458
	jne	.L3759	#,
	.loc 1 16572 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3759:
	.loc 1 16574 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3459
	cmpl	$2, %eax	#, which_alternative.3459
	jne	.L3760	#,
	.loc 1 16576 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3760:
	.loc 1 16578 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3460
	cmpl	$3, %eax	#, which_alternative.3460
	jne	.L3761	#,
	.loc 1 16580 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3761:
	.loc 1 16584 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3689:
	.loc 1 16589 0
	movq	-8(%rbp), %rax	# insn, tmp325
	movq	%rax, %rdi	# tmp325,
	call	extract_constrain_insn_cached	#
	.loc 1 16590 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3461
	testl	%eax, %eax	# which_alternative.3461
	jne	.L3762	#,
	.loc 1 16592 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3762:
	.loc 1 16594 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3462
	cmpl	$1, %eax	#, which_alternative.3462
	jne	.L3763	#,
	.loc 1 16596 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3763:
	.loc 1 16600 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3662:
	.loc 1 16633 0
	movq	-8(%rbp), %rax	# insn, tmp326
	movq	%rax, %rdi	# tmp326,
	call	extract_constrain_insn_cached	#
	.loc 1 16634 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3463
	testl	%eax, %eax	# which_alternative.3463
	jne	.L3764	#,
	.loc 1 16636 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3764:
	.loc 1 16640 0
	movl	$1, %eax	#, D.57329
	jmp	.L3695	#
.L3661:
	.loc 1 16761 0
	movl	$0, %eax	#, D.57329
	jmp	.L3695	#
.L3659:
	.loc 1 16764 0
	movq	-8(%rbp), %rax	# insn, tmp327
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57330
	movzwl	(%rax), %eax	# _307->code, D.57332
	cmpw	$40, %ax	#, D.57332
	je	.L3658	#,
	.loc 1 16765 0
	movq	-8(%rbp), %rax	# insn, tmp328
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57330
	movq	%rax, %rdi	# D.57330,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57329
	jns	.L3658	#,
	.loc 1 16766 0
	movq	-8(%rbp), %rax	# insn, tmp329
	movl	$__FUNCTION__.17249, %ecx	#,
	movl	$16766, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp329,
	call	_fatal_insn_not_found	#
.L3658:
	.loc 1 16768 0
	movl	$1, %eax	#, D.57329
.L3695:
	.loc 1 16771 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE55:
	.size	get_attr_modrm, .-get_attr_modrm
	.globl	get_attr_mode
	.type	get_attr_mode, @function
get_attr_mode:
.LFB56:
	.loc 1 16777 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 16778 0
	movq	-8(%rbp), %rax	# insn, tmp228
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57334
	testl	%eax, %eax	# D.57334
	js	.L3766	#,
	.loc 1 16778 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp229
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.3464
	jmp	.L3767	#
.L3766:
	.loc 1 16778 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp230
	movq	%rax, %rdi	# tmp230,
	call	recog_memoized_1	#
.L3767:
	.loc 1 16778 0 discriminator 3
	addl	$1, %eax	#, tmp231
	cmpl	$806, %eax	#, tmp231
	ja	.L3768	#,
	movl	%eax, %eax	# tmp231, tmp232
	movq	.L3770(,%rax,8), %rax	#, tmp233
	jmp	*%rax	# tmp233
	.section	.rodata
	.align 8
	.align 4
.L3770:
	.quad	.L3769
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3773
	.quad	.L3773
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3775
	.quad	.L3776
	.quad	.L3776
	.quad	.L3777
	.quad	.L3777
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3775
	.quad	.L3775
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3775
	.quad	.L3775
	.quad	.L3775
	.quad	.L3775
	.quad	.L3775
	.quad	.L3775
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3779
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3774
	.quad	.L3780
	.quad	.L3773
	.quad	.L3773
	.quad	.L3773
	.quad	.L3772
	.quad	.L3773
	.quad	.L3773
	.quad	.L3773
	.quad	.L3774
	.quad	.L3781
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3772
	.quad	.L3772
	.quad	.L3782
	.quad	.L3782
	.quad	.L3774
	.quad	.L3774
	.quad	.L3772
	.quad	.L3782
	.quad	.L3783
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3768
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3771
	.quad	.L3784
	.quad	.L3785
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3786
	.quad	.L3787
	.quad	.L3788
	.quad	.L3776
	.quad	.L3789
	.quad	.L3790
	.quad	.L3791
	.quad	.L3791
	.quad	.L3777
	.quad	.L3792
	.quad	.L3792
	.quad	.L3792
	.quad	.L3792
	.quad	.L3793
	.quad	.L3793
	.quad	.L3793
	.quad	.L3793
	.quad	.L3778
	.quad	.L3778
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3773
	.quad	.L3773
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3794
	.quad	.L3794
	.quad	.L3794
	.quad	.L3768
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3772
	.quad	.L3772
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3795
	.quad	.L3777
	.quad	.L3796
	.quad	.L3796
	.quad	.L3797
	.quad	.L3797
	.quad	.L3776
	.quad	.L3798
	.quad	.L3799
	.quad	.L3776
	.quad	.L3777
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3773
	.quad	.L3773
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3768
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3774
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3800
	.quad	.L3773
	.quad	.L3773
	.quad	.L3773
	.quad	.L3772
	.quad	.L3773
	.quad	.L3801
	.quad	.L3801
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3768
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3771
	.quad	.L3773
	.quad	.L3773
	.quad	.L3773
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3771
	.quad	.L3772
	.quad	.L3771
	.quad	.L3772
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3774
	.quad	.L3774
	.quad	.L3768
	.quad	.L3768
	.quad	.L3771
	.quad	.L3768
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3802
	.quad	.L3772
	.quad	.L3773
	.quad	.L3803
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3768
	.quad	.L3768
	.quad	.L3794
	.quad	.L3794
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3800
	.quad	.L3773
	.quad	.L3801
	.quad	.L3774
	.quad	.L3801
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3773
	.quad	.L3773
	.quad	.L3801
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3771
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3773
	.quad	.L3773
	.quad	.L3801
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3768
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3773
	.quad	.L3774
	.quad	.L3774
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3776
	.quad	.L3777
	.quad	.L3777
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3776
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3778
	.quad	.L3778
	.quad	.L3777
	.quad	.L3778
	.quad	.L3778
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3773
	.quad	.L3804
	.quad	.L3774
	.quad	.L3771
	.quad	.L3771
	.quad	.L3768
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3805
	.quad	.L3773
	.quad	.L3773
	.quad	.L3804
	.quad	.L3804
	.quad	.L3774
	.quad	.L3771
	.quad	.L3768
	.quad	.L3771
	.quad	.L3768
	.quad	.L3771
	.quad	.L3768
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3768
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3768
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3768
	.quad	.L3773
	.quad	.L3768
	.quad	.L3773
	.quad	.L3768
	.quad	.L3774
	.quad	.L3768
	.quad	.L3774
	.quad	.L3768
	.quad	.L3771
	.quad	.L3768
	.quad	.L3771
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3768
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3768
	.quad	.L3773
	.quad	.L3768
	.quad	.L3773
	.quad	.L3768
	.quad	.L3774
	.quad	.L3768
	.quad	.L3774
	.quad	.L3768
	.quad	.L3771
	.quad	.L3768
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3768
	.quad	.L3773
	.quad	.L3768
	.quad	.L3774
	.quad	.L3768
	.quad	.L3771
	.quad	.L3768
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3768
	.quad	.L3773
	.quad	.L3768
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3776
	.quad	.L3777
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3772
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3778
	.quad	.L3778
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3772
	.quad	.L3772
	.quad	.L3777
	.quad	.L3777
	.quad	.L3768
	.quad	.L3772
	.quad	.L3772
	.quad	.L3776
	.quad	.L3776
	.quad	.L3778
	.quad	.L3778
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3776
	.quad	.L3776
	.quad	.L3776
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3777
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3778
	.quad	.L3777
	.quad	.L3776
	.quad	.L3777
	.quad	.L3778
	.quad	.L3778
	.quad	.L3777
	.quad	.L3776
	.quad	.L3777
	.quad	.L3778
	.quad	.L3778
	.quad	.L3768
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3773
	.quad	.L3774
	.quad	.L3774
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3772
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3773
	.quad	.L3774
	.quad	.L3774
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3774
	.quad	.L3771
	.quad	.L3771
	.quad	.L3772
	.quad	.L3772
	.quad	.L3773
	.quad	.L3806
	.quad	.L3777
	.quad	.L3777
	.quad	.L3778
	.quad	.L3778
	.quad	.L3768
	.quad	.L3768
	.quad	.L3776
	.quad	.L3768
	.quad	.L3768
	.quad	.L3777
	.quad	.L3768
	.quad	.L3768
	.quad	.L3776
	.quad	.L3768
	.quad	.L3768
	.quad	.L3777
	.quad	.L3772
	.quad	.L3771
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3807
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3768
	.quad	.L3771
	.text
.L3806:
	.loc 1 16781 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp234
	movq	%rax, %rdi	# tmp234,
	call	extract_constrain_insn_cached	#
	.loc 1 16782 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3465
	testl	%eax, %eax	# which_alternative.3465
	je	.L3808	#,
	.loc 1 16782 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3466
	cmpl	$1, %eax	#, which_alternative.3466
	jne	.L3809	#,
.L3808:
	.loc 1 16784 0 is_stmt 1
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3809:
	.loc 1 16788 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3803:
	.loc 1 16792 0
	movq	-8(%rbp), %rax	# insn, tmp235
	movq	%rax, %rdi	# tmp235,
	call	extract_constrain_insn_cached	#
	.loc 1 16793 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3467
	testl	%eax, %eax	# which_alternative.3467
	je	.L3811	#,
	.loc 1 16793 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3468
	cmpl	$1, %eax	#, which_alternative.3468
	je	.L3811	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3469
	cmpl	$2, %eax	#, which_alternative.3469
	jne	.L3812	#,
.L3811:
	.loc 1 16795 0 is_stmt 1
	movl	$2, %eax	#, D.57333
	jmp	.L3810	#
.L3812:
	.loc 1 16799 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3802:
	.loc 1 16803 0
	movq	-8(%rbp), %rax	# insn, tmp236
	movq	%rax, %rdi	# tmp236,
	call	extract_constrain_insn_cached	#
	.loc 1 16804 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3470
	testl	%eax, %eax	# which_alternative.3470
	je	.L3813	#,
	.loc 1 16804 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3471
	cmpl	$1, %eax	#, which_alternative.3471
	jne	.L3814	#,
.L3813:
	.loc 1 16806 0 is_stmt 1
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3814:
	.loc 1 16810 0
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3801:
	.loc 1 16819 0
	movq	-8(%rbp), %rax	# insn, tmp237
	movq	%rax, %rdi	# tmp237,
	call	extract_constrain_insn_cached	#
	.loc 1 16820 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3472
	testl	%eax, %eax	# which_alternative.3472
	je	.L3815	#,
	.loc 1 16820 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3473
	cmpl	$1, %eax	#, which_alternative.3473
	jne	.L3816	#,
.L3815:
	.loc 1 16822 0 is_stmt 1
	movl	$2, %eax	#, D.57333
	jmp	.L3810	#
.L3816:
	.loc 1 16826 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3800:
	.loc 1 16831 0
	movq	-8(%rbp), %rax	# insn, tmp238
	movq	%rax, %rdi	# tmp238,
	call	extract_constrain_insn_cached	#
	.loc 1 16832 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3474
	testl	%eax, %eax	# which_alternative.3474
	je	.L3817	#,
	.loc 1 16832 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3475
	cmpl	$1, %eax	#, which_alternative.3475
	jne	.L3818	#,
.L3817:
	.loc 1 16834 0 is_stmt 1
	movl	$3, %eax	#, D.57333
	jmp	.L3810	#
.L3818:
	.loc 1 16838 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3798:
	.loc 1 16842 0
	movq	-8(%rbp), %rax	# insn, tmp239
	movq	%rax, %rdi	# tmp239,
	call	extract_constrain_insn_cached	#
	.loc 1 16843 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3476
	testl	%eax, %eax	# which_alternative.3476
	je	.L3819	#,
	.loc 1 16843 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3477
	cmpl	$1, %eax	#, which_alternative.3477
	je	.L3819	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3478
	cmpl	$2, %eax	#, which_alternative.3478
	je	.L3819	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3479
	cmpl	$3, %eax	#, which_alternative.3479
	jne	.L3820	#,
.L3819:
	.loc 1 16845 0 is_stmt 1
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3820:
	.loc 1 16849 0
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3793:
	.loc 1 16856 0
	movq	-8(%rbp), %rax	# insn, tmp240
	movq	%rax, %rdi	# tmp240,
	call	extract_constrain_insn_cached	#
	.loc 1 16857 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3480
	testl	%eax, %eax	# which_alternative.3480
	je	.L3821	#,
	.loc 1 16857 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3481
	cmpl	$1, %eax	#, which_alternative.3481
	je	.L3821	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3482
	cmpl	$2, %eax	#, which_alternative.3482
	jne	.L3822	#,
.L3821:
	.loc 1 16859 0 is_stmt 1
	movl	$9, %eax	#, D.57333
	jmp	.L3810	#
.L3822:
	.loc 1 16863 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3791:
	.loc 1 16868 0
	movq	-8(%rbp), %rax	# insn, tmp241
	movq	%rax, %rdi	# tmp241,
	call	extract_constrain_insn_cached	#
	.loc 1 16869 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3483
	testl	%eax, %eax	# which_alternative.3483
	je	.L3823	#,
	.loc 1 16869 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3484
	cmpl	$1, %eax	#, which_alternative.3484
	je	.L3823	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3485
	cmpl	$2, %eax	#, which_alternative.3485
	jne	.L3824	#,
.L3823:
	.loc 1 16871 0 is_stmt 1
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3824:
	.loc 1 16873 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3486
	cmpl	$3, %eax	#, which_alternative.3486
	je	.L3825	#,
	.loc 1 16873 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3487
	cmpl	$4, %eax	#, which_alternative.3487
	jne	.L3826	#,
.L3825:
	.loc 1 16875 0 is_stmt 1
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3826:
	.loc 1 16877 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3488
	cmpl	$5, %eax	#, which_alternative.3488
	jne	.L3827	#,
	.loc 1 16879 0
	movl	$10, %eax	#, D.57333
	jmp	.L3810	#
.L3827:
	.loc 1 16883 0
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3789:
	.loc 1 16887 0
	movq	-8(%rbp), %rax	# insn, tmp242
	movq	%rax, %rdi	# tmp242,
	call	extract_constrain_insn_cached	#
	.loc 1 16888 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3489
	testl	%eax, %eax	# which_alternative.3489
	jne	.L3828	#,
	.loc 1 16890 0
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3828:
	.loc 1 16892 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3490
	cmpl	$1, %eax	#, which_alternative.3490
	je	.L3829	#,
	.loc 1 16892 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3491
	cmpl	$2, %eax	#, which_alternative.3491
	jne	.L3830	#,
.L3829:
	.loc 1 16894 0 is_stmt 1
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3830:
	.loc 1 16898 0
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3788:
	.loc 1 16902 0
	movq	-8(%rbp), %rax	# insn, tmp243
	movq	%rax, %rdi	# tmp243,
	call	extract_constrain_insn_cached	#
	.loc 1 16903 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3492
	testl	%eax, %eax	# which_alternative.3492
	je	.L3831	#,
	.loc 1 16903 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3493
	cmpl	$1, %eax	#, which_alternative.3493
	je	.L3831	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3494
	cmpl	$2, %eax	#, which_alternative.3494
	jne	.L3832	#,
.L3831:
	.loc 1 16905 0 is_stmt 1
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3832:
	.loc 1 16907 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3495
	cmpl	$3, %eax	#, which_alternative.3495
	je	.L3833	#,
	.loc 1 16907 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3496
	cmpl	$4, %eax	#, which_alternative.3496
	jne	.L3834	#,
.L3833:
	.loc 1 16909 0 is_stmt 1
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3834:
	.loc 1 16911 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3497
	cmpl	$5, %eax	#, which_alternative.3497
	jne	.L3835	#,
	.loc 1 16913 0
	movl	$10, %eax	#, D.57333
	jmp	.L3810	#
.L3835:
	.loc 1 16915 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3498
	cmpl	$6, %eax	#, which_alternative.3498
	je	.L3836	#,
	.loc 1 16915 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3499
	cmpl	$7, %eax	#, which_alternative.3499
	je	.L3836	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3500
	cmpl	$8, %eax	#, which_alternative.3500
	jne	.L3837	#,
.L3836:
	.loc 1 16917 0 is_stmt 1
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3837:
	.loc 1 16919 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3501
	cmpl	$9, %eax	#, which_alternative.3501
	je	.L3838	#,
	.loc 1 16919 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3502
	cmpl	$10, %eax	#, which_alternative.3502
	jne	.L3839	#,
.L3838:
	.loc 1 16921 0 is_stmt 1
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3839:
	.loc 1 16925 0
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3785:
	.loc 1 16929 0
	movq	-8(%rbp), %rax	# insn, tmp244
	movq	%rax, %rdi	# tmp244,
	call	extract_constrain_insn_cached	#
	.loc 1 16930 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3503
	testl	%eax, %eax	# which_alternative.3503
	jne	.L3840	#,
	.loc 1 16932 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3840:
	.loc 1 16934 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3504
	cmpl	$1, %eax	#, which_alternative.3504
	je	.L3841	#,
	.loc 1 16934 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3505
	cmpl	$2, %eax	#, which_alternative.3505
	je	.L3841	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3506
	cmpl	$3, %eax	#, which_alternative.3506
	jne	.L3842	#,
.L3841:
	.loc 1 16936 0 is_stmt 1
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3842:
	.loc 1 16938 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3507
	cmpl	$4, %eax	#, which_alternative.3507
	jne	.L3843	#,
	.loc 1 16940 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3843:
	.loc 1 16942 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3508
	cmpl	$5, %eax	#, which_alternative.3508
	je	.L3844	#,
	.loc 1 16942 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3509
	cmpl	$6, %eax	#, which_alternative.3509
	je	.L3844	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3510
	cmpl	$7, %eax	#, which_alternative.3510
	jne	.L3845	#,
.L3844:
	.loc 1 16944 0 is_stmt 1
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3845:
	.loc 1 16946 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3511
	cmpl	$8, %eax	#, which_alternative.3511
	jne	.L3846	#,
	.loc 1 16948 0
	movl	$10, %eax	#, D.57333
	jmp	.L3810	#
.L3846:
	.loc 1 16952 0
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3784:
	.loc 1 16956 0
	movq	-8(%rbp), %rax	# insn, tmp245
	movq	%rax, %rdi	# tmp245,
	call	extract_constrain_insn_cached	#
	.loc 1 16957 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3512
	testl	%eax, %eax	# which_alternative.3512
	je	.L3847	#,
	.loc 1 16957 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3513
	cmpl	$1, %eax	#, which_alternative.3513
	je	.L3847	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3514
	cmpl	$2, %eax	#, which_alternative.3514
	je	.L3847	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3515
	cmpl	$3, %eax	#, which_alternative.3515
	je	.L3847	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3516
	cmpl	$4, %eax	#, which_alternative.3516
	jne	.L3848	#,
.L3847:
	.loc 1 16959 0 is_stmt 1
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3848:
	.loc 1 16961 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3517
	cmpl	$5, %eax	#, which_alternative.3517
	jne	.L3849	#,
	.loc 1 16963 0
	movl	$10, %eax	#, D.57333
	jmp	.L3810	#
.L3849:
	.loc 1 16967 0
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3783:
	.loc 1 16971 0
	movq	-8(%rbp), %rax	# insn, tmp246
	movq	%rax, %rdi	# tmp246,
	call	extract_constrain_insn_cached	#
	.loc 1 16972 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57335
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57335,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57334
	je	.L3850	#,
	.loc 1 16972 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3518
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3519
	movl	%eax, %ecx	# ix86_cpu.3520, tmp267
	sarl	%cl, %edx	# tmp267, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	je	.L3851	#,
.L3850:
	.loc 1 16974 0 is_stmt 1
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3851:
	.loc 1 16978 0
	movl	$2, %eax	#, D.57333
	jmp	.L3810	#
.L3781:
	.loc 1 16982 0
	movq	-8(%rbp), %rax	# insn, tmp247
	movq	%rax, %rdi	# tmp247,
	call	extract_constrain_insn_cached	#
	.loc 1 16983 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3521
	cmpl	$3, %eax	#, which_alternative.3521
	je	.L3852	#,
	.loc 1 16983 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3522
	cmpl	$4, %eax	#, which_alternative.3522
	je	.L3852	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3523
	cmpl	$5, %eax	#, which_alternative.3523
	jne	.L3853	#,
.L3852:
	.loc 1 16985 0 is_stmt 1
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3853:
	.loc 1 16987 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3524
	cmpl	$6, %eax	#, which_alternative.3524
	jne	.L3854	#,
	.loc 1 16989 0
	movl	$2, %eax	#, D.57333
	jmp	.L3810	#
.L3854:
	.loc 1 16991 0
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3525
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3526
	movl	%eax, %ecx	# ix86_cpu.3527, tmp269
	sarl	%cl, %edx	# tmp269, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	je	.L3855	#,
	.loc 1 16991 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3528
	cmpl	$2, %eax	#, which_alternative.3528
	je	.L3856	#,
.L3855:
	.loc 1 16991 0 discriminator 2
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3529
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3530
	movl	%eax, %ecx	# ix86_cpu.3531, tmp271
	sarl	%cl, %edx	# tmp271, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	je	.L3857	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3532
	cmpl	$2, %eax	#, which_alternative.3532
	je	.L3858	#,
.L3857:
	.loc 1 16991 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3533
	testl	%eax, %eax	# which_alternative.3533
	je	.L3859	#,
	.loc 1 16991 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3534
	cmpl	$1, %eax	#, which_alternative.3534
	je	.L3859	#,
	.loc 1 16991 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3535
	cmpl	$2, %eax	#, which_alternative.3535
	jne	.L3858	#,
.L3859:
	movl	x86_partial_reg_dependency(%rip), %edx	# x86_partial_reg_dependency, x86_partial_reg_dependency.3536
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3537
	movl	%eax, %ecx	# ix86_cpu.3538, tmp273
	sarl	%cl, %edx	# tmp273, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	jne	.L3856	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3539
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3540
	movl	%eax, %ecx	# ix86_cpu.3541, tmp275
	sarl	%cl, %edx	# tmp275, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	je	.L3858	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3542
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3543
	movl	%eax, %ecx	# ix86_cpu.3544, tmp277
	sarl	%cl, %edx	# tmp277, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	jne	.L3858	#,
.L3856:
	.loc 1 16993 0 is_stmt 1
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3858:
	.loc 1 16997 0
	movl	$2, %eax	#, D.57333
	jmp	.L3810	#
.L3780:
	.loc 1 17001 0
	movq	-8(%rbp), %rax	# insn, tmp248
	movq	%rax, %rdi	# tmp248,
	call	extract_constrain_insn_cached	#
	.loc 1 17002 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3545
	testl	%eax, %eax	# which_alternative.3545
	je	.L3860	#,
	.loc 1 17002 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3546
	cmpl	$1, %eax	#, which_alternative.3546
	jne	.L3861	#,
.L3860:
	.loc 1 17002 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3547
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3548
	movl	%eax, %ecx	# ix86_cpu.3549, tmp279
	sarl	%cl, %edx	# tmp279, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	je	.L3862	#,
	.loc 1 17002 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.3550
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3551
	movl	%eax, %ecx	# ix86_cpu.3552, tmp281
	sarl	%cl, %edx	# tmp281, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	je	.L3862	#,
.L3861:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3553
	cmpl	$2, %eax	#, which_alternative.3553
	je	.L3863	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3554
	cmpl	$3, %eax	#, which_alternative.3554
	je	.L3863	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3555
	cmpl	$4, %eax	#, which_alternative.3555
	jne	.L3864	#,
.L3863:
	.loc 1 17002 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57335
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57335,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57334
	jne	.L3862	#,
.L3864:
	.loc 1 17002 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3556
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3557
	movl	%eax, %ecx	# ix86_cpu.3558, tmp283
	sarl	%cl, %edx	# tmp283, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	je	.L3862	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3559
	testl	%eax, %eax	# which_alternative.3559
	je	.L3865	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3560
	cmpl	$1, %eax	#, which_alternative.3560
	je	.L3865	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3561
	cmpl	$3, %eax	#, which_alternative.3561
	je	.L3865	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3562
	cmpl	$4, %eax	#, which_alternative.3562
	je	.L3865	#,
.L3862:
	.loc 1 17002 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3563
	cmpl	$2, %eax	#, which_alternative.3563
	je	.L3866	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3564
	cmpl	$3, %eax	#, which_alternative.3564
	je	.L3866	#,
	.loc 1 17002 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3565
	cmpl	$4, %eax	#, which_alternative.3565
	jne	.L3867	#,
.L3866:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57335
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57335,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57334
	jne	.L3865	#,
.L3867:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3566
	testl	%eax, %eax	# which_alternative.3566
	je	.L3868	#,
	.loc 1 17002 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3567
	cmpl	$1, %eax	#, which_alternative.3567
	jne	.L3869	#,
.L3868:
	.loc 1 17002 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3568
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3569
	movl	%eax, %ecx	# ix86_cpu.3570, tmp285
	sarl	%cl, %edx	# tmp285, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	je	.L3865	#,
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.3571
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3572
	movl	%eax, %ecx	# ix86_cpu.3573, tmp287
	sarl	%cl, %edx	# tmp287, D.57334
	movl	%edx, %eax	# D.57334, D.57334
	andl	$1, %eax	#, D.57334
	testl	%eax, %eax	# D.57334
	jne	.L3869	#,
.L3865:
	.loc 1 17004 0 is_stmt 1
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3869:
	.loc 1 17008 0
	movl	$3, %eax	#, D.57333
	jmp	.L3810	#
.L3779:
	.loc 1 17012 0
	movq	-8(%rbp), %rax	# insn, tmp249
	movq	%rax, %rdi	# tmp249,
	call	extract_constrain_insn_cached	#
	.loc 1 17013 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3574
	testl	%eax, %eax	# which_alternative.3574
	je	.L3870	#,
	.loc 1 17013 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3575
	cmpl	$1, %eax	#, which_alternative.3575
	je	.L3870	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3576
	cmpl	$2, %eax	#, which_alternative.3576
	je	.L3870	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3577
	cmpl	$3, %eax	#, which_alternative.3577
	je	.L3870	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3578
	cmpl	$4, %eax	#, which_alternative.3578
	je	.L3870	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3579
	cmpl	$5, %eax	#, which_alternative.3579
	jne	.L3871	#,
.L3870:
	.loc 1 17015 0 is_stmt 1
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3871:
	.loc 1 17017 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3580
	cmpl	$6, %eax	#, which_alternative.3580
	jne	.L3872	#,
	.loc 1 17019 0
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3872:
	.loc 1 17021 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3581
	cmpl	$7, %eax	#, which_alternative.3581
	jne	.L3873	#,
	.loc 1 17023 0
	movl	$10, %eax	#, D.57333
	jmp	.L3810	#
.L3873:
	.loc 1 17027 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3782:
	.loc 1 17033 0
	movq	-8(%rbp), %rax	# insn, tmp250
	movq	%rax, %rdi	# tmp250,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57336
	jne	.L3874	#,
	.loc 1 17035 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3874:
	.loc 1 17039 0
	movl	$2, %eax	#, D.57333
	jmp	.L3810	#
.L3786:
	.loc 1 17043 0
	movq	-8(%rbp), %rax	# insn, tmp251
	movq	%rax, %rdi	# tmp251,
	call	extract_constrain_insn_cached	#
	.loc 1 17044 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3582
	testl	%eax, %eax	# which_alternative.3582
	jne	.L3875	#,
	.loc 1 17046 0
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3875:
	.loc 1 17048 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3583
	cmpl	$1, %eax	#, which_alternative.3583
	jne	.L3876	#,
	.loc 1 17050 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3876:
	.loc 1 17054 0
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3787:
	.loc 1 17058 0
	movq	-8(%rbp), %rax	# insn, tmp252
	movq	%rax, %rdi	# tmp252,
	call	extract_constrain_insn_cached	#
	.loc 1 17059 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3584
	testl	%eax, %eax	# which_alternative.3584
	jne	.L3877	#,
	.loc 1 17061 0
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3877:
	.loc 1 17063 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3585
	cmpl	$1, %eax	#, which_alternative.3585
	jne	.L3878	#,
	.loc 1 17065 0
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3878:
	.loc 1 17069 0
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3790:
	.loc 1 17073 0
	movq	-8(%rbp), %rax	# insn, tmp253
	movq	%rax, %rdi	# tmp253,
	call	extract_constrain_insn_cached	#
	.loc 1 17074 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3586
	testl	%eax, %eax	# which_alternative.3586
	jne	.L3879	#,
	.loc 1 17076 0
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3879:
	.loc 1 17078 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3587
	cmpl	$1, %eax	#, which_alternative.3587
	jne	.L3880	#,
	.loc 1 17080 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3880:
	.loc 1 17084 0
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3792:
	.loc 1 17091 0
	movq	-8(%rbp), %rax	# insn, tmp254
	movq	%rax, %rdi	# tmp254,
	call	extract_constrain_insn_cached	#
	.loc 1 17092 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3588
	testl	%eax, %eax	# which_alternative.3588
	jne	.L3881	#,
	.loc 1 17094 0
	movl	$9, %eax	#, D.57333
	jmp	.L3810	#
.L3881:
	.loc 1 17098 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3794:
	.loc 1 17106 0
	movq	-8(%rbp), %rax	# insn, tmp255
	movq	%rax, %rdi	# tmp255,
	call	extract_constrain_insn_cached	#
	.loc 1 17107 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3589
	testl	%eax, %eax	# which_alternative.3589
	jne	.L3882	#,
	.loc 1 17109 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3882:
	.loc 1 17113 0
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3795:
	.loc 1 17117 0
	movq	-8(%rbp), %rax	# insn, tmp256
	movq	%rax, %rdi	# tmp256,
	call	extract_constrain_insn_cached	#
	.loc 1 17118 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3590
	testl	%eax, %eax	# which_alternative.3590
	jne	.L3883	#,
	.loc 1 17120 0
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3883:
	.loc 1 17122 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3591
	cmpl	$1, %eax	#, which_alternative.3591
	jne	.L3884	#,
	.loc 1 17124 0
	movl	$9, %eax	#, D.57333
	jmp	.L3810	#
.L3884:
	.loc 1 17128 0
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3796:
	.loc 1 17133 0
	movq	-8(%rbp), %rax	# insn, tmp257
	movq	%rax, %rdi	# tmp257,
	call	extract_constrain_insn_cached	#
	.loc 1 17134 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3592
	testl	%eax, %eax	# which_alternative.3592
	jne	.L3885	#,
	.loc 1 17136 0
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3885:
	.loc 1 17140 0
	movl	$9, %eax	#, D.57333
	jmp	.L3810	#
.L3797:
	.loc 1 17145 0
	movq	-8(%rbp), %rax	# insn, tmp258
	movq	%rax, %rdi	# tmp258,
	call	extract_constrain_insn_cached	#
	.loc 1 17146 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3593
	testl	%eax, %eax	# which_alternative.3593
	jne	.L3886	#,
	.loc 1 17148 0
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3886:
	.loc 1 17152 0
	movl	$9, %eax	#, D.57333
	jmp	.L3810	#
.L3799:
	.loc 1 17156 0
	movq	-8(%rbp), %rax	# insn, tmp259
	movq	%rax, %rdi	# tmp259,
	call	extract_constrain_insn_cached	#
	.loc 1 17157 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3594
	testl	%eax, %eax	# which_alternative.3594
	jne	.L3887	#,
	.loc 1 17159 0
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3887:
	.loc 1 17163 0
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3805:
	.loc 1 17167 0
	movq	-8(%rbp), %rax	# insn, tmp260
	movq	%rax, %rdi	# tmp260,
	call	extract_constrain_insn_cached	#
	.loc 1 17168 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3595
	testl	%eax, %eax	# which_alternative.3595
	jne	.L3888	#,
	.loc 1 17170 0
	movl	$3, %eax	#, D.57333
	jmp	.L3810	#
.L3888:
	.loc 1 17174 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3804:
	.loc 1 17180 0
	movq	-8(%rbp), %rax	# insn, tmp261
	movq	%rax, %rdi	# tmp261,
	call	extract_constrain_insn_cached	#
	.loc 1 17181 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3596
	testl	%eax, %eax	# which_alternative.3596
	jne	.L3889	#,
	.loc 1 17183 0
	movl	$2, %eax	#, D.57333
	jmp	.L3810	#
.L3889:
	.loc 1 17187 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3807:
	.loc 1 17191 0
	movl	$10, %eax	#, D.57333
	jmp	.L3810	#
.L3778:
	.loc 1 17231 0
	movl	$9, %eax	#, D.57333
	jmp	.L3810	#
.L3777:
	.loc 1 17276 0
	movl	$8, %eax	#, D.57333
	jmp	.L3810	#
.L3776:
	.loc 1 17315 0
	movl	$7, %eax	#, D.57333
	jmp	.L3810	#
.L3775:
	.loc 1 17326 0
	movl	$6, %eax	#, D.57333
	jmp	.L3810	#
.L3771:
	.loc 1 17390 0
	movl	$5, %eax	#, D.57333
	jmp	.L3810	#
.L3772:
	.loc 1 17531 0
	movl	$4, %eax	#, D.57333
	jmp	.L3810	#
.L3773:
	.loc 1 17583 0
	movl	$3, %eax	#, D.57333
	jmp	.L3810	#
.L3774:
	.loc 1 17664 0
	movl	$2, %eax	#, D.57333
	jmp	.L3810	#
.L3769:
	.loc 1 17667 0
	movq	-8(%rbp), %rax	# insn, tmp262
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57335
	movzwl	(%rax), %eax	# _253->code, D.57337
	cmpw	$40, %ax	#, D.57337
	je	.L3768	#,
	.loc 1 17668 0
	movq	-8(%rbp), %rax	# insn, tmp263
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57335
	movq	%rax, %rdi	# D.57335,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57334
	jns	.L3768	#,
	.loc 1 17669 0
	movq	-8(%rbp), %rax	# insn, tmp264
	movl	$__FUNCTION__.17766, %ecx	#,
	movl	$17669, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp264,
	call	_fatal_insn_not_found	#
.L3768:
	.loc 1 17671 0
	movl	$0, %eax	#, D.57333
.L3810:
	.loc 1 17674 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE56:
	.size	get_attr_mode, .-get_attr_mode
	.globl	get_attr_ppro_uops
	.type	get_attr_ppro_uops, @function
get_attr_ppro_uops:
.LFB57:
	.loc 1 17680 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 17681 0
	movq	-8(%rbp), %rax	# insn, tmp192
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57339
	testl	%eax, %eax	# D.57339
	js	.L3891	#,
	.loc 1 17681 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp193
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.3597
	jmp	.L3892	#
.L3891:
	.loc 1 17681 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp194
	movq	%rax, %rdi	# tmp194,
	call	recog_memoized_1	#
.L3892:
	.loc 1 17681 0 discriminator 3
	addl	$1, %eax	#, tmp195
	cmpl	$806, %eax	#, tmp195
	ja	.L3893	#,
	movl	%eax, %eax	# tmp195, tmp196
	movq	.L3895(,%rax,8), %rax	#, tmp197
	jmp	*%rax	# tmp197
	.section	.rodata
	.align 8
	.align 4
.L3895:
	.quad	.L3894
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3897
	.quad	.L3898
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3899
	.quad	.L3897
	.quad	.L3898
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3900
	.quad	.L3897
	.quad	.L3898
	.quad	.L3897
	.quad	.L3897
	.quad	.L3901
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3902
	.quad	.L3897
	.quad	.L3901
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3900
	.quad	.L3900
	.quad	.L3897
	.quad	.L3898
	.quad	.L3893
	.quad	.L3900
	.quad	.L3903
	.quad	.L3901
	.quad	.L3901
	.quad	.L3901
	.quad	.L3896
	.quad	.L3904
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3905
	.quad	.L3906
	.quad	.L3897
	.quad	.L3898
	.quad	.L3897
	.quad	.L3907
	.quad	.L3907
	.quad	.L3908
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3909
	.quad	.L3909
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3910
	.quad	.L3910
	.quad	.L3910
	.quad	.L3910
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3911
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3912
	.quad	.L3913
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3912
	.quad	.L3893
	.quad	.L3912
	.quad	.L3893
	.quad	.L3912
	.quad	.L3893
	.quad	.L3912
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3912
	.quad	.L3914
	.quad	.L3893
	.quad	.L3912
	.quad	.L3914
	.quad	.L3893
	.quad	.L3912
	.quad	.L3914
	.quad	.L3893
	.quad	.L3912
	.quad	.L3914
	.quad	.L3893
	.quad	.L3912
	.quad	.L3912
	.quad	.L3912
	.quad	.L3912
	.quad	.L3912
	.quad	.L3912
	.quad	.L3896
	.quad	.L3897
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3898
	.quad	.L3898
	.quad	.L3898
	.quad	.L3898
	.quad	.L3898
	.quad	.L3898
	.quad	.L3898
	.quad	.L3898
	.quad	.L3898
	.quad	.L3898
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3896
	.quad	.L3896
	.quad	.L3897
	.quad	.L3896
	.quad	.L3896
	.quad	.L3897
	.quad	.L3896
	.quad	.L3896
	.quad	.L3897
	.quad	.L3896
	.quad	.L3897
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3915
	.quad	.L3915
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3915
	.quad	.L3915
	.quad	.L3915
	.quad	.L3915
	.quad	.L3915
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3915
	.quad	.L3898
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3916
	.quad	.L3893
	.quad	.L3896
	.quad	.L3916
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3897
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3898
	.quad	.L3897
	.quad	.L3898
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3917
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3918
	.quad	.L3919
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3896
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3905
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3898
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3898
	.quad	.L3898
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3893
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3897
	.quad	.L3896
	.text
.L3919:
	.loc 1 17684 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp198
	movq	%rax, %rdi	# tmp198,
	call	extract_constrain_insn_cached	#
	.loc 1 17685 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3598
	cmpl	$1, %eax	#, which_alternative.3598
	jne	.L3920	#,
	.loc 1 17685 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57340
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57340,
	call	const0_operand	#
	testl	%eax, %eax	# D.57339
	je	.L3920	#,
	.loc 1 17687 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp199
	movq	%rax, %rdi	# tmp199,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57341
	je	.L3921	#,
	.loc 1 17687 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp200
	movq	%rax, %rdi	# tmp200,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57341
	jne	.L3922	#,
.L3921:
	.loc 1 17689 0 is_stmt 1
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3922:
	.loc 1 17693 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3920:
	.loc 1 17696 0
	movq	-8(%rbp), %rax	# insn, tmp201
	movq	%rax, %rdi	# tmp201,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3924	#,
	.loc 1 17698 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3924:
	.loc 1 17702 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3918:
	.loc 1 17706 0
	movq	-8(%rbp), %rax	# insn, tmp202
	movq	%rax, %rdi	# tmp202,
	call	extract_constrain_insn_cached	#
	.loc 1 17707 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3599
	cmpl	$1, %eax	#, which_alternative.3599
	jne	.L3925	#,
	.loc 1 17707 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57340
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57340,
	call	const0_operand	#
	testl	%eax, %eax	# D.57339
	je	.L3925	#,
	.loc 1 17709 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57341
	je	.L3926	#,
	.loc 1 17709 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp204
	movq	%rax, %rdi	# tmp204,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57341
	jne	.L3927	#,
.L3926:
	.loc 1 17711 0 is_stmt 1
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3927:
	.loc 1 17715 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3925:
	.loc 1 17718 0
	movq	-8(%rbp), %rax	# insn, tmp205
	movq	%rax, %rdi	# tmp205,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3928	#,
	.loc 1 17720 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3928:
	.loc 1 17724 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3917:
	.loc 1 17728 0
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	%rax, %rdi	# tmp206,
	call	extract_constrain_insn_cached	#
	.loc 1 17729 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3600
	cmpl	$2, %eax	#, which_alternative.3600
	je	.L3929	#,
	.loc 1 17729 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3601
	cmpl	$3, %eax	#, which_alternative.3601
	jne	.L3930	#,
.L3929:
	.loc 1 17731 0 is_stmt 1
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3930:
	.loc 1 17735 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3916:
	.loc 1 17740 0
	movq	-8(%rbp), %rax	# insn, tmp207
	movq	%rax, %rdi	# tmp207,
	call	extract_constrain_insn_cached	#
	.loc 1 17741 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3602
	testl	%eax, %eax	# which_alternative.3602
	jne	.L3931	#,
	.loc 1 17743 0
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3931:
	.loc 1 17745 0
	movq	-8(%rbp), %rax	# insn, tmp208
	movq	%rax, %rdi	# tmp208,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3932	#,
	.loc 1 17747 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3932:
	.loc 1 17751 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3915:
	.loc 1 17762 0
	movq	-8(%rbp), %rax	# insn, tmp209
	movq	%rax, %rdi	# tmp209,
	call	extract_insn_cached	#
	.loc 1 17763 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57340
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57340,
	call	memory_operand	#
	testl	%eax, %eax	# D.57339
	je	.L3933	#,
	.loc 1 17765 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3933:
	.loc 1 17769 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3914:
	.loc 1 17776 0
	movq	-8(%rbp), %rax	# insn, tmp210
	movq	%rax, %rdi	# tmp210,
	call	extract_constrain_insn_cached	#
	.loc 1 17777 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3603
	cmpl	$1, %eax	#, which_alternative.3603
	jne	.L3934	#,
	.loc 1 17779 0
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3934:
	.loc 1 17781 0
	movq	-8(%rbp), %rax	# insn, tmp211
	movq	%rax, %rdi	# tmp211,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3935	#,
	.loc 1 17783 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3935:
	.loc 1 17787 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3913:
	.loc 1 17791 0
	movq	-8(%rbp), %rax	# insn, tmp212
	movq	%rax, %rdi	# tmp212,
	call	extract_constrain_insn_cached	#
	.loc 1 17792 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3604
	cmpl	$1, %eax	#, which_alternative.3604
	je	.L3936	#,
	.loc 1 17792 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3605
	cmpl	$2, %eax	#, which_alternative.3605
	je	.L3936	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3606
	cmpl	$3, %eax	#, which_alternative.3606
	jne	.L3937	#,
.L3936:
	.loc 1 17794 0 is_stmt 1
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3937:
	.loc 1 17796 0
	movq	-8(%rbp), %rax	# insn, tmp213
	movq	%rax, %rdi	# tmp213,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3938	#,
	.loc 1 17798 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3938:
	.loc 1 17802 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3912:
	.loc 1 17820 0
	movq	-8(%rbp), %rax	# insn, tmp214
	movq	%rax, %rdi	# tmp214,
	call	extract_constrain_insn_cached	#
	.loc 1 17821 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3607
	testl	%eax, %eax	# which_alternative.3607
	je	.L3939	#,
	.loc 1 17823 0
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3939:
	.loc 1 17825 0
	movq	-8(%rbp), %rax	# insn, tmp215
	movq	%rax, %rdi	# tmp215,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3940	#,
	.loc 1 17827 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3940:
	.loc 1 17831 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3911:
	.loc 1 17835 0
	movq	-8(%rbp), %rax	# insn, tmp216
	movq	%rax, %rdi	# tmp216,
	call	extract_constrain_insn_cached	#
	.loc 1 17836 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3608
	testl	%eax, %eax	# which_alternative.3608
	je	.L3941	#,
	.loc 1 17838 0
	movq	-8(%rbp), %rax	# insn, tmp217
	movq	%rax, %rdi	# tmp217,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57341
	je	.L3942	#,
	.loc 1 17838 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp218
	movq	%rax, %rdi	# tmp218,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57341
	jne	.L3943	#,
.L3942:
	.loc 1 17840 0 is_stmt 1
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3943:
	.loc 1 17844 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3941:
	.loc 1 17847 0
	movq	-8(%rbp), %rax	# insn, tmp219
	movq	%rax, %rdi	# tmp219,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3944	#,
	.loc 1 17849 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3944:
	.loc 1 17853 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3910:
	.loc 1 17860 0
	movq	-8(%rbp), %rax	# insn, tmp220
	movq	%rax, %rdi	# tmp220,
	call	extract_constrain_insn_cached	#
	.loc 1 17861 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3609
	cmpl	$3, %eax	#, which_alternative.3609
	je	.L3945	#,
	.loc 1 17861 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3610
	cmpl	$4, %eax	#, which_alternative.3610
	jne	.L3946	#,
.L3945:
	.loc 1 17863 0 is_stmt 1
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3946:
	.loc 1 17865 0
	movq	-8(%rbp), %rax	# insn, tmp221
	movq	%rax, %rdi	# tmp221,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3947	#,
	.loc 1 17867 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3947:
	.loc 1 17871 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3909:
	.loc 1 17876 0
	movq	-8(%rbp), %rax	# insn, tmp222
	movq	%rax, %rdi	# tmp222,
	call	extract_constrain_insn_cached	#
	.loc 1 17877 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3611
	testl	%eax, %eax	# which_alternative.3611
	je	.L3948	#,
	.loc 1 17877 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3612
	cmpl	$1, %eax	#, which_alternative.3612
	je	.L3948	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3613
	cmpl	$2, %eax	#, which_alternative.3613
	je	.L3948	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3614
	cmpl	$3, %eax	#, which_alternative.3614
	je	.L3949	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3615
	cmpl	$4, %eax	#, which_alternative.3615
	jne	.L3948	#,
.L3949:
	.loc 1 17879 0 is_stmt 1
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3948:
	.loc 1 17881 0
	movq	-8(%rbp), %rax	# insn, tmp223
	movq	%rax, %rdi	# tmp223,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3950	#,
	.loc 1 17883 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3950:
	.loc 1 17887 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3908:
	.loc 1 17891 0
	movq	-8(%rbp), %rax	# insn, tmp224
	movq	%rax, %rdi	# tmp224,
	call	extract_constrain_insn_cached	#
	.loc 1 17892 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3616
	testl	%eax, %eax	# which_alternative.3616
	je	.L3951	#,
	.loc 1 17892 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3617
	cmpl	$1, %eax	#, which_alternative.3617
	je	.L3951	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3618
	cmpl	$2, %eax	#, which_alternative.3618
	je	.L3951	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3619
	cmpl	$3, %eax	#, which_alternative.3619
	je	.L3952	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3620
	cmpl	$4, %eax	#, which_alternative.3620
	jne	.L3951	#,
.L3952:
	.loc 1 17894 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp225
	movq	%rax, %rdi	# tmp225,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57341
	je	.L3953	#,
	.loc 1 17894 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp226
	movq	%rax, %rdi	# tmp226,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57341
	jne	.L3954	#,
.L3953:
	.loc 1 17896 0 is_stmt 1
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3954:
	.loc 1 17900 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3951:
	.loc 1 17903 0
	movq	-8(%rbp), %rax	# insn, tmp227
	movq	%rax, %rdi	# tmp227,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3955	#,
	.loc 1 17905 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3955:
	.loc 1 17909 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3907:
	.loc 1 17914 0
	movq	-8(%rbp), %rax	# insn, tmp228
	movq	%rax, %rdi	# tmp228,
	call	extract_constrain_insn_cached	#
	.loc 1 17915 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3621
	cmpl	$1, %eax	#, which_alternative.3621
	je	.L3956	#,
	.loc 1 17917 0
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3956:
	.loc 1 17921 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3906:
	.loc 1 17925 0
	movq	-8(%rbp), %rax	# insn, tmp229
	movq	%rax, %rdi	# tmp229,
	call	extract_constrain_insn_cached	#
	.loc 1 17926 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3622
	cmpl	$4, %eax	#, which_alternative.3622
	jne	.L3957	#,
	.loc 1 17928 0
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3957:
	.loc 1 17930 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3623
	cmpl	$5, %eax	#, which_alternative.3623
	je	.L3958	#,
	.loc 1 17930 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3624
	cmpl	$6, %eax	#, which_alternative.3624
	je	.L3958	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3625
	cmpl	$7, %eax	#, which_alternative.3625
	je	.L3958	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3626
	cmpl	$8, %eax	#, which_alternative.3626
	je	.L3958	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3627
	testl	%eax, %eax	# flag_pic.3627
	je	.L3959	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57340
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57340,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57339
	jne	.L3958	#,
.L3959:
	.loc 1 17932 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp230
	movq	%rax, %rdi	# tmp230,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57341
	je	.L3960	#,
	.loc 1 17932 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp231
	movq	%rax, %rdi	# tmp231,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57341
	jne	.L3961	#,
.L3960:
	.loc 1 17934 0 is_stmt 1
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3961:
	.loc 1 17938 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3958:
	.loc 1 17941 0
	movq	-8(%rbp), %rax	# insn, tmp232
	movq	%rax, %rdi	# tmp232,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3962	#,
	.loc 1 17943 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3962:
	.loc 1 17947 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3905:
	.loc 1 17952 0
	movq	-8(%rbp), %rax	# insn, tmp233
	movq	%rax, %rdi	# tmp233,
	call	extract_constrain_insn_cached	#
	.loc 1 17953 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3628
	testl	%eax, %eax	# which_alternative.3628
	je	.L3963	#,
	.loc 1 17953 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3629
	cmpl	$1, %eax	#, which_alternative.3629
	jne	.L3964	#,
.L3963:
	.loc 1 17955 0 is_stmt 1
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3964:
	.loc 1 17957 0
	movq	-8(%rbp), %rax	# insn, tmp234
	movq	%rax, %rdi	# tmp234,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3965	#,
	.loc 1 17959 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3965:
	.loc 1 17963 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3904:
	.loc 1 17967 0
	movq	-8(%rbp), %rax	# insn, tmp235
	movq	%rax, %rdi	# tmp235,
	call	extract_constrain_insn_cached	#
	.loc 1 17968 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3630
	testl	%eax, %eax	# which_alternative.3630
	je	.L3966	#,
	.loc 1 17970 0
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3966:
	.loc 1 17974 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3903:
	.loc 1 17978 0
	movq	-8(%rbp), %rax	# insn, tmp236
	movq	%rax, %rdi	# tmp236,
	call	extract_constrain_insn_cached	#
	.loc 1 17979 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57340
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57340,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57339
	je	.L3967	#,
	.loc 1 17979 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3631
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3632
	movl	%eax, %ecx	# ix86_cpu.3633, tmp260
	sarl	%cl, %edx	# tmp260, D.57339
	movl	%edx, %eax	# D.57339, D.57339
	andl	$1, %eax	#, D.57339
	testl	%eax, %eax	# D.57339
	jne	.L3967	#,
	.loc 1 17981 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp237
	movq	%rax, %rdi	# tmp237,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57341
	je	.L3968	#,
	.loc 1 17981 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp238
	movq	%rax, %rdi	# tmp238,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57341
	jne	.L3969	#,
.L3968:
	.loc 1 17983 0 is_stmt 1
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3969:
	.loc 1 17987 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3967:
	.loc 1 17990 0
	movq	-8(%rbp), %rax	# insn, tmp239
	movq	%rax, %rdi	# tmp239,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3970	#,
	.loc 1 17992 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3970:
	.loc 1 17996 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3902:
	.loc 1 18000 0
	movq	-8(%rbp), %rax	# insn, tmp240
	movq	%rax, %rdi	# tmp240,
	call	extract_constrain_insn_cached	#
	.loc 1 18001 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3634
	cmpl	$3, %eax	#, which_alternative.3634
	jne	.L3971	#,
	.loc 1 18001 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3635
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3636
	movl	%eax, %ecx	# ix86_cpu.3637, tmp262
	sarl	%cl, %edx	# tmp262, D.57339
	movl	%edx, %eax	# D.57339, D.57339
	andl	$1, %eax	#, D.57339
	testl	%eax, %eax	# D.57339
	je	.L3972	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3638
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3639
	movl	%eax, %ecx	# ix86_cpu.3640, tmp264
	sarl	%cl, %edx	# tmp264, D.57339
	movl	%edx, %eax	# D.57339, D.57339
	andl	$1, %eax	#, D.57339
	testl	%eax, %eax	# D.57339
	je	.L3972	#,
.L3971:
	.loc 1 18001 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3641
	cmpl	$3, %eax	#, which_alternative.3641
	jne	.L3973	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3642
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3643
	movl	%eax, %ecx	# ix86_cpu.3644, tmp266
	sarl	%cl, %edx	# tmp266, D.57339
	movl	%edx, %eax	# D.57339, D.57339
	andl	$1, %eax	#, D.57339
	testl	%eax, %eax	# D.57339
	je	.L3974	#,
	.loc 1 18001 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3645
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3646
	movl	%eax, %ecx	# ix86_cpu.3647, tmp268
	sarl	%cl, %edx	# tmp268, D.57339
	movl	%edx, %eax	# D.57339, D.57339
	andl	$1, %eax	#, D.57339
	testl	%eax, %eax	# D.57339
	je	.L3974	#,
.L3973:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3648
	cmpl	$3, %eax	#, which_alternative.3648
	je	.L3974	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3649
	cmpl	$5, %eax	#, which_alternative.3649
	je	.L3974	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3650
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3651
	movl	%eax, %ecx	# ix86_cpu.3652, tmp270
	sarl	%cl, %edx	# tmp270, D.57339
	movl	%edx, %eax	# D.57339, D.57339
	andl	$1, %eax	#, D.57339
	testl	%eax, %eax	# D.57339
	je	.L3972	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3653
	cmpl	$2, %eax	#, which_alternative.3653
	je	.L3974	#,
.L3972:
	.loc 1 18003 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp241
	movq	%rax, %rdi	# tmp241,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57341
	je	.L3975	#,
	.loc 1 18003 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp242
	movq	%rax, %rdi	# tmp242,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57341
	jne	.L3976	#,
.L3975:
	.loc 1 18005 0 is_stmt 1
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3976:
	.loc 1 18009 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3974:
	.loc 1 18012 0
	movq	-8(%rbp), %rax	# insn, tmp243
	movq	%rax, %rdi	# tmp243,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3977	#,
	.loc 1 18014 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3977:
	.loc 1 18018 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3901:
	.loc 1 18026 0
	movq	-8(%rbp), %rax	# insn, tmp244
	movq	%rax, %rdi	# tmp244,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57341
	je	.L3978	#,
	.loc 1 18026 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp245
	movq	%rax, %rdi	# tmp245,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57341
	jne	.L3979	#,
.L3978:
	.loc 1 18028 0 is_stmt 1
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3979:
	.loc 1 18032 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3900:
	.loc 1 18039 0
	movq	-8(%rbp), %rax	# insn, tmp246
	movq	%rax, %rdi	# tmp246,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57342
	jne	.L3980	#,
	.loc 1 18041 0
	movq	-8(%rbp), %rax	# insn, tmp247
	movq	%rax, %rdi	# tmp247,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57341
	je	.L3981	#,
	.loc 1 18041 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp248
	movq	%rax, %rdi	# tmp248,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57341
	jne	.L3982	#,
.L3981:
	.loc 1 18043 0 is_stmt 1
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3982:
	.loc 1 18047 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3980:
	.loc 1 18050 0
	movq	-8(%rbp), %rax	# insn, tmp249
	movq	%rax, %rdi	# tmp249,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3983	#,
	.loc 1 18052 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3983:
	.loc 1 18056 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3899:
	.loc 1 18060 0
	movq	-8(%rbp), %rax	# insn, tmp250
	movq	%rax, %rdi	# tmp250,
	call	extract_constrain_insn_cached	#
	.loc 1 18061 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3654
	cmpl	$4, %eax	#, which_alternative.3654
	je	.L3984	#,
	.loc 1 18061 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3655
	cmpl	$5, %eax	#, which_alternative.3655
	je	.L3984	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3656
	cmpl	$6, %eax	#, which_alternative.3656
	je	.L3984	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3657
	cmpl	$7, %eax	#, which_alternative.3657
	je	.L3984	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3658
	cmpl	$8, %eax	#, which_alternative.3658
	je	.L3984	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3659
	cmpl	$9, %eax	#, which_alternative.3659
	je	.L3984	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3660
	testl	%eax, %eax	# flag_pic.3660
	je	.L3985	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57340
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57340,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57339
	jne	.L3984	#,
.L3985:
	.loc 1 18063 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp251
	movq	%rax, %rdi	# tmp251,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57341
	je	.L3986	#,
	.loc 1 18063 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp252
	movq	%rax, %rdi	# tmp252,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57341
	jne	.L3987	#,
.L3986:
	.loc 1 18065 0 is_stmt 1
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3987:
	.loc 1 18069 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3984:
	.loc 1 18072 0
	movq	-8(%rbp), %rax	# insn, tmp253
	movq	%rax, %rdi	# tmp253,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3988	#,
	.loc 1 18074 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3988:
	.loc 1 18078 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3894:
	.loc 1 18082 0
	movq	-8(%rbp), %rax	# insn, tmp254
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57340
	movzwl	(%rax), %eax	# _199->code, D.57343
	cmpw	$40, %ax	#, D.57343
	je	.L3896	#,
	.loc 1 18083 0
	movq	-8(%rbp), %rax	# insn, tmp255
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57340
	movq	%rax, %rdi	# D.57340,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57339
	jns	.L3896	#,
	.loc 1 18084 0
	movq	-8(%rbp), %rax	# insn, tmp256
	movl	$__FUNCTION__.17833, %ecx	#,
	movl	$18084, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp256,
	call	_fatal_insn_not_found	#
.L3896:
	.loc 1 18253 0
	movl	$2, %eax	#, D.57338
	jmp	.L3923	#
.L3897:
	.loc 1 18337 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3898:
	.loc 1 18360 0
	movl	$0, %eax	#, D.57338
	jmp	.L3923	#
.L3893:
	.loc 1 18363 0
	movq	-8(%rbp), %rax	# insn, tmp257
	movq	%rax, %rdi	# tmp257,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57341
	je	.L3989	#,
	.loc 1 18365 0
	movl	$1, %eax	#, D.57338
	jmp	.L3923	#
.L3989:
	.loc 1 18369 0
	movl	$0, %eax	#, D.57338
.L3923:
	.loc 1 18373 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE57:
	.size	get_attr_ppro_uops, .-get_attr_ppro_uops
	.globl	get_attr_pent_pair
	.type	get_attr_pent_pair, @function
get_attr_pent_pair:
.LFB58:
	.loc 1 18379 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 18380 0
	movq	-8(%rbp), %rax	# insn, tmp320
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57345
	testl	%eax, %eax	# D.57345
	js	.L3991	#,
	.loc 1 18380 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp321
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.3661
	jmp	.L3992	#
.L3991:
	.loc 1 18380 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp322
	movq	%rax, %rdi	# tmp322,
	call	recog_memoized_1	#
.L3992:
	.loc 1 18380 0 discriminator 3
	addl	$1, %eax	#, tmp323
	cmpl	$657, %eax	#, tmp323
	ja	.L3993	#,
	movl	%eax, %eax	# tmp323, tmp324
	movq	.L3995(,%rax,8), %rax	#, tmp325
	jmp	*%rax	# tmp325
	.section	.rodata
	.align 8
	.align 4
.L3995:
	.quad	.L3994
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3997
	.quad	.L3997
	.quad	.L3997
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3998
	.quad	.L3998
	.quad	.L3998
	.quad	.L3999
	.quad	.L3999
	.quad	.L4000
	.quad	.L4000
	.quad	.L4001
	.quad	.L3996
	.quad	.L3996
	.quad	.L3993
	.quad	.L4002
	.quad	.L3998
	.quad	.L4003
	.quad	.L3997
	.quad	.L3997
	.quad	.L3993
	.quad	.L3993
	.quad	.L3997
	.quad	.L4004
	.quad	.L4002
	.quad	.L3998
	.quad	.L4005
	.quad	.L3993
	.quad	.L3996
	.quad	.L4000
	.quad	.L3993
	.quad	.L3993
	.quad	.L4006
	.quad	.L4006
	.quad	.L3996
	.quad	.L3996
	.quad	.L3993
	.quad	.L4006
	.quad	.L4007
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3993
	.quad	.L4008
	.quad	.L3998
	.quad	.L3999
	.quad	.L3999
	.quad	.L4000
	.quad	.L4000
	.quad	.L3993
	.quad	.L4009
	.quad	.L3996
	.quad	.L3996
	.quad	.L3993
	.quad	.L4010
	.quad	.L4010
	.quad	.L4011
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4000
	.quad	.L3993
	.quad	.L4004
	.quad	.L4012
	.quad	.L3993
	.quad	.L4000
	.quad	.L4013
	.quad	.L3993
	.quad	.L3993
	.quad	.L4014
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4004
	.quad	.L3996
	.quad	.L4004
	.quad	.L4004
	.quad	.L3996
	.quad	.L3996
	.quad	.L4000
	.quad	.L4000
	.quad	.L4000
	.quad	.L4000
	.quad	.L4000
	.quad	.L4000
	.quad	.L4000
	.quad	.L4000
	.quad	.L4000
	.quad	.L4000
	.quad	.L4015
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L4016
	.quad	.L4017
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L4018
	.quad	.L3997
	.quad	.L3997
	.quad	.L3997
	.quad	.L3996
	.quad	.L3997
	.quad	.L4019
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3993
	.quad	.L4004
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L4004
	.quad	.L4004
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3997
	.quad	.L3997
	.quad	.L3997
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4020
	.quad	.L4021
	.quad	.L4021
	.quad	.L4022
	.quad	.L3993
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3993
	.quad	.L3993
	.quad	.L4023
	.quad	.L3996
	.quad	.L4024
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L4025
	.quad	.L3997
	.quad	.L3996
	.quad	.L4000
	.quad	.L3996
	.quad	.L4000
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3997
	.quad	.L3997
	.quad	.L3997
	.quad	.L3996
	.quad	.L4000
	.quad	.L3996
	.quad	.L4000
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3997
	.quad	.L3997
	.quad	.L3997
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3996
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4000
	.quad	.L3993
	.quad	.L3993
	.quad	.L4000
	.quad	.L4000
	.quad	.L3993
	.quad	.L4004
	.quad	.L3993
	.quad	.L4000
	.quad	.L4026
	.quad	.L4027
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4026
	.quad	.L4028
	.quad	.L4027
	.quad	.L4029
	.quad	.L4030
	.quad	.L4031
	.quad	.L4031
	.quad	.L4032
	.quad	.L4027
	.quad	.L4027
	.quad	.L4033
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4033
	.quad	.L4033
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L3993
	.quad	.L3993
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L4034
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4035
	.quad	.L4035
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4035
	.quad	.L4035
	.quad	.L4035
	.quad	.L4035
	.quad	.L4035
	.quad	.L4036
	.quad	.L4037
	.quad	.L4037
	.quad	.L4037
	.quad	.L4037
	.quad	.L4037
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4035
	.quad	.L3993
	.quad	.L3996
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4000
	.quad	.L3993
	.quad	.L4000
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3996
	.quad	.L3996
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L3993
	.quad	.L4038
	.quad	.L4038
	.quad	.L4038
	.quad	.L4038
	.quad	.L4038
	.quad	.L4038
	.text
.L4038:
	.loc 1 18388 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp326
	movq	%rax, %rdi	# tmp326,
	call	extract_insn_cached	#
	.loc 1 18389 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4039	#,
	.loc 1 18391 0
	movl	$2, %eax	#, D.57344
	jmp	.L4040	#
.L4039:
	.loc 1 18395 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4037:
	.loc 1 18403 0
	movq	-8(%rbp), %rax	# insn, tmp327
	movq	%rax, %rdi	# tmp327,
	call	extract_insn_cached	#
	.loc 1 18404 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4041	#,
	.loc 1 18406 0
	movl	$2, %eax	#, D.57344
	jmp	.L4040	#
.L4041:
	.loc 1 18410 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4036:
	.loc 1 18414 0
	movq	-8(%rbp), %rax	# insn, tmp328
	movq	%rax, %rdi	# tmp328,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57347
	jne	.L4042	#,
	.loc 1 18416 0
	movl	$2, %eax	#, D.57344
	jmp	.L4040	#
.L4042:
	.loc 1 18420 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4034:
	.loc 1 18483 0
	movq	-8(%rbp), %rax	# insn, tmp329
	movq	%rax, %rdi	# tmp329,
	call	extract_insn_cached	#
	.loc 1 18484 0
	movq	-8(%rbp), %rax	# insn, tmp330
	movq	%rax, %rdi	# tmp330,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4043	#,
	.loc 1 18486 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4043:
	.loc 1 18488 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4044	#,
	.loc 1 18490 0
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4044:
	.loc 1 18494 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4033:
	.loc 1 18500 0
	movq	-8(%rbp), %rax	# insn, tmp331
	movq	%rax, %rdi	# tmp331,
	call	extract_constrain_insn_cached	#
	.loc 1 18501 0
	movq	-8(%rbp), %rax	# insn, tmp332
	movq	%rax, %rdi	# tmp332,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4045	#,
	.loc 1 18503 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4045:
	.loc 1 18505 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3662
	cmpl	$1, %eax	#, which_alternative.3662
	jne	.L4046	#,
	.loc 1 18505 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4046	#,
	.loc 1 18507 0 is_stmt 1
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4046:
	.loc 1 18511 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4032:
	.loc 1 18515 0
	movq	-8(%rbp), %rax	# insn, tmp333
	movq	%rax, %rdi	# tmp333,
	call	extract_constrain_insn_cached	#
	.loc 1 18516 0
	movq	-8(%rbp), %rax	# insn, tmp334
	movq	%rax, %rdi	# tmp334,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4047	#,
	.loc 1 18518 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4047:
	.loc 1 18520 0
	movq	-8(%rbp), %rax	# insn, tmp335
	movq	%rax, %rdi	# tmp335,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57347
	je	.L4048	#,
	.loc 1 18520 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3663
	cmpl	$2, %eax	#, which_alternative.3663
	jne	.L4049	#,
.L4048:
	.loc 1 18522 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4049:
	.loc 1 18524 0
	movq	-8(%rbp), %rax	# insn, tmp336
	movq	%rax, %rdi	# tmp336,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57347
	jne	.L4050	#,
	.loc 1 18524 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4050	#,
	.loc 1 18526 0 is_stmt 1
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4050:
	.loc 1 18530 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4031:
	.loc 1 18535 0
	movq	-8(%rbp), %rax	# insn, tmp337
	movq	%rax, %rdi	# tmp337,
	call	extract_insn_cached	#
	.loc 1 18536 0
	movq	-8(%rbp), %rax	# insn, tmp338
	movq	%rax, %rdi	# tmp338,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4051	#,
	.loc 1 18538 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4051:
	.loc 1 18540 0
	movq	-8(%rbp), %rax	# insn, tmp339
	movq	%rax, %rdi	# tmp339,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57347
	je	.L4052	#,
	.loc 1 18540 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp340
	movq	%rax, %rdi	# tmp340,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57347
	jne	.L4053	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4053	#,
.L4052:
	.loc 1 18542 0 is_stmt 1
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4053:
	.loc 1 18546 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4030:
	.loc 1 18550 0
	movq	-8(%rbp), %rax	# insn, tmp341
	movq	%rax, %rdi	# tmp341,
	call	extract_constrain_insn_cached	#
	.loc 1 18551 0
	movq	-8(%rbp), %rax	# insn, tmp342
	movq	%rax, %rdi	# tmp342,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4054	#,
	.loc 1 18553 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4054:
	.loc 1 18555 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3664
	testl	%eax, %eax	# which_alternative.3664
	jne	.L4055	#,
	.loc 1 18555 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp343
	movq	%rax, %rdi	# tmp343,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57347
	jne	.L4056	#,
.L4055:
	.loc 1 18557 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3665
	testl	%eax, %eax	# which_alternative.3665
	jne	.L4057	#,
	.loc 1 18559 0
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4057:
	.loc 1 18563 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4056:
	.loc 1 18566 0
	movq	-8(%rbp), %rax	# insn, tmp344
	movq	%rax, %rdi	# tmp344,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57347
	jne	.L4058	#,
	.loc 1 18566 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4058	#,
	.loc 1 18568 0 is_stmt 1
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4058:
	.loc 1 18572 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4029:
	.loc 1 18576 0
	movq	-8(%rbp), %rax	# insn, tmp345
	movq	%rax, %rdi	# tmp345,
	call	extract_constrain_insn_cached	#
	.loc 1 18577 0
	movq	-8(%rbp), %rax	# insn, tmp346
	movq	%rax, %rdi	# tmp346,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4059	#,
	.loc 1 18579 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4059:
	.loc 1 18581 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.3666
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3667
	movl	%eax, %ecx	# ix86_cpu.3668, tmp414
	sarl	%cl, %edx	# tmp414, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4060	#,
	.loc 1 18581 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const1_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4060	#,
	.loc 1 18583 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4060:
	.loc 1 18585 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4061	#,
	.loc 1 18587 0
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4061:
	.loc 1 18591 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4028:
	.loc 1 18595 0
	movq	-8(%rbp), %rax	# insn, tmp347
	movq	%rax, %rdi	# tmp347,
	call	extract_constrain_insn_cached	#
	.loc 1 18596 0
	movq	-8(%rbp), %rax	# insn, tmp348
	movq	%rax, %rdi	# tmp348,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4062	#,
	.loc 1 18598 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4062:
	.loc 1 18600 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3669
	testl	%eax, %eax	# which_alternative.3669
	jne	.L4063	#,
	.loc 1 18600 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.3670
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3671
	movl	%eax, %ecx	# ix86_cpu.3672, tmp416
	sarl	%cl, %edx	# tmp416, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4064	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const1_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4064	#,
.L4063:
	.loc 1 18602 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4064:
	.loc 1 18604 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4065	#,
	.loc 1 18606 0
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4065:
	.loc 1 18610 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4027:
	.loc 1 18617 0
	movq	-8(%rbp), %rax	# insn, tmp349
	movq	%rax, %rdi	# tmp349,
	call	extract_insn_cached	#
	.loc 1 18618 0
	movq	-8(%rbp), %rax	# insn, tmp350
	movq	%rax, %rdi	# tmp350,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4066	#,
	.loc 1 18620 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4066:
	.loc 1 18622 0
	movq	-8(%rbp), %rax	# insn, tmp351
	movq	%rax, %rdi	# tmp351,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57347
	jne	.L4067	#,
	.loc 1 18624 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4067:
	.loc 1 18626 0
	movq	-8(%rbp), %rax	# insn, tmp352
	movq	%rax, %rdi	# tmp352,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57347
	jne	.L4068	#,
	.loc 1 18626 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4068	#,
	.loc 1 18628 0 is_stmt 1
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4068:
	.loc 1 18632 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4026:
	.loc 1 18637 0
	movq	-8(%rbp), %rax	# insn, tmp353
	movq	%rax, %rdi	# tmp353,
	call	extract_constrain_insn_cached	#
	.loc 1 18638 0
	movq	-8(%rbp), %rax	# insn, tmp354
	movq	%rax, %rdi	# tmp354,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4069	#,
	.loc 1 18640 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4069:
	.loc 1 18642 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3673
	testl	%eax, %eax	# which_alternative.3673
	jne	.L4070	#,
	.loc 1 18642 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp355
	movq	%rax, %rdi	# tmp355,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57347
	jne	.L4071	#,
.L4070:
	.loc 1 18644 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4071:
	.loc 1 18646 0
	movq	-8(%rbp), %rax	# insn, tmp356
	movq	%rax, %rdi	# tmp356,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57347
	jne	.L4072	#,
	.loc 1 18646 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4072	#,
	.loc 1 18648 0 is_stmt 1
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4072:
	.loc 1 18652 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4025:
	.loc 1 18656 0
	movq	-8(%rbp), %rax	# insn, tmp357
	movq	%rax, %rdi	# tmp357,
	call	extract_constrain_insn_cached	#
	.loc 1 18657 0
	movq	-8(%rbp), %rax	# insn, tmp358
	movq	%rax, %rdi	# tmp358,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4073	#,
	.loc 1 18659 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4073:
	.loc 1 18661 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3674
	testl	%eax, %eax	# which_alternative.3674
	je	.L4074	#,
	.loc 1 18661 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3675
	cmpl	$1, %eax	#, which_alternative.3675
	jne	.L4075	#,
.L4074:
	.loc 1 18663 0 is_stmt 1
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4075:
	.loc 1 18667 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4024:
	.loc 1 18671 0
	movq	-8(%rbp), %rax	# insn, tmp359
	movq	%rax, %rdi	# tmp359,
	call	extract_constrain_insn_cached	#
	.loc 1 18672 0
	movq	-8(%rbp), %rax	# insn, tmp360
	movq	%rax, %rdi	# tmp360,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4076	#,
	.loc 1 18674 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4076:
	.loc 1 18676 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3676
	testl	%eax, %eax	# which_alternative.3676
	je	.L4077	#,
	.loc 1 18676 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3677
	cmpl	$1, %eax	#, which_alternative.3677
	jne	.L4078	#,
.L4077:
	.loc 1 18678 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4078:
	.loc 1 18682 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4023:
	.loc 1 18686 0
	movq	-8(%rbp), %rax	# insn, tmp361
	movq	%rax, %rdi	# tmp361,
	call	extract_constrain_insn_cached	#
	.loc 1 18687 0
	movq	-8(%rbp), %rax	# insn, tmp362
	movq	%rax, %rdi	# tmp362,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4079	#,
	.loc 1 18689 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4079:
	.loc 1 18691 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3678
	testl	%eax, %eax	# which_alternative.3678
	je	.L4080	#,
	.loc 1 18691 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3679
	cmpl	$1, %eax	#, which_alternative.3679
	je	.L4080	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3680
	cmpl	$2, %eax	#, which_alternative.3680
	jne	.L4081	#,
.L4080:
	.loc 1 18693 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4081:
	.loc 1 18697 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4019:
	.loc 1 18701 0
	movq	-8(%rbp), %rax	# insn, tmp363
	movq	%rax, %rdi	# tmp363,
	call	extract_constrain_insn_cached	#
	.loc 1 18702 0
	movq	-8(%rbp), %rax	# insn, tmp364
	movq	%rax, %rdi	# tmp364,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4082	#,
	.loc 1 18704 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4082:
	.loc 1 18706 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3681
	cmpl	$3, %eax	#, which_alternative.3681
	je	.L4083	#,
	.loc 1 18706 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4084	#,
.L4083:
	.loc 1 18706 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3682
	cmpl	$3, %eax	#, which_alternative.3682
	je	.L4084	#,
	.loc 1 18706 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4085	#,
.L4084:
	.loc 1 18708 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4085:
	.loc 1 18712 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4018:
	.loc 1 18716 0
	movq	-8(%rbp), %rax	# insn, tmp365
	movq	%rax, %rdi	# tmp365,
	call	extract_constrain_insn_cached	#
	.loc 1 18717 0
	movq	-8(%rbp), %rax	# insn, tmp366
	movq	%rax, %rdi	# tmp366,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4086	#,
	.loc 1 18719 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4086:
	.loc 1 18721 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3683
	cmpl	$2, %eax	#, which_alternative.3683
	je	.L4087	#,
	.loc 1 18721 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4088	#,
.L4087:
	.loc 1 18721 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3684
	cmpl	$2, %eax	#, which_alternative.3684
	je	.L4088	#,
	.loc 1 18721 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4089	#,
.L4088:
	.loc 1 18723 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3685
	testl	%eax, %eax	# which_alternative.3685
	je	.L4090	#,
	.loc 1 18723 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3686
	cmpl	$1, %eax	#, which_alternative.3686
	jne	.L4091	#,
.L4090:
	.loc 1 18725 0 is_stmt 1
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4091:
	.loc 1 18729 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4089:
	.loc 1 18734 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4017:
	.loc 1 18738 0
	movq	-8(%rbp), %rax	# insn, tmp367
	movq	%rax, %rdi	# tmp367,
	call	extract_constrain_insn_cached	#
	.loc 1 18739 0
	movq	-8(%rbp), %rax	# insn, tmp368
	movq	%rax, %rdi	# tmp368,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4092	#,
	.loc 1 18741 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4092:
	.loc 1 18743 0
	movq	-8(%rbp), %rax	# insn, tmp369
	movq	%rax, %rdi	# tmp369,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57347
	je	.L4093	#,
	.loc 1 18743 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3687
	testl	%eax, %eax	# which_alternative.3687
	jne	.L4093	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57345
	jne	.L4093	#,
	movq	-8(%rbp), %rax	# insn, tmp370
	movq	%rax, %rdi	# tmp370,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57347
	jne	.L4094	#,
.L4093:
	.loc 1 18745 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4094:
	.loc 1 18749 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4016:
	.loc 1 18753 0
	movq	-8(%rbp), %rax	# insn, tmp371
	movq	%rax, %rdi	# tmp371,
	call	extract_constrain_insn_cached	#
	.loc 1 18754 0
	movq	-8(%rbp), %rax	# insn, tmp372
	movq	%rax, %rdi	# tmp372,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4095	#,
	.loc 1 18756 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4095:
	.loc 1 18758 0
	movq	-8(%rbp), %rax	# insn, tmp373
	movq	%rax, %rdi	# tmp373,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57347
	je	.L4096	#,
	.loc 1 18758 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3688
	cmpl	$2, %eax	#, which_alternative.3688
	je	.L4096	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57345
	jne	.L4096	#,
	movq	-8(%rbp), %rax	# insn, tmp374
	movq	%rax, %rdi	# tmp374,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57347
	jne	.L4097	#,
.L4096:
	.loc 1 18760 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4097:
	.loc 1 18764 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4015:
	.loc 1 18768 0
	movq	-8(%rbp), %rax	# insn, tmp375
	movq	%rax, %rdi	# tmp375,
	call	extract_constrain_insn_cached	#
	.loc 1 18769 0
	movq	-8(%rbp), %rax	# insn, tmp376
	movq	%rax, %rdi	# tmp376,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4098	#,
	.loc 1 18771 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4098:
	.loc 1 18773 0
	movq	-8(%rbp), %rax	# insn, tmp377
	movq	%rax, %rdi	# tmp377,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57347
	je	.L4099	#,
	.loc 1 18773 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3689
	cmpl	$2, %eax	#, which_alternative.3689
	je	.L4099	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57346
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57345
	jne	.L4099	#,
	movq	-8(%rbp), %rax	# insn, tmp378
	movq	%rax, %rdi	# tmp378,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57347
	jne	.L4100	#,
.L4099:
	.loc 1 18775 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4100:
	.loc 1 18779 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4014:
	.loc 1 18783 0
	movq	-8(%rbp), %rax	# insn, tmp379
	movq	%rax, %rdi	# tmp379,
	call	extract_constrain_insn_cached	#
	.loc 1 18784 0
	movq	-8(%rbp), %rax	# insn, tmp380
	movq	%rax, %rdi	# tmp380,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4101	#,
	.loc 1 18786 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4101:
	.loc 1 18788 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3690
	testl	%eax, %eax	# which_alternative.3690
	je	.L4102	#,
	.loc 1 18790 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4102:
	.loc 1 18794 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4013:
	.loc 1 18798 0
	movq	-8(%rbp), %rax	# insn, tmp381
	movq	%rax, %rdi	# tmp381,
	call	extract_constrain_insn_cached	#
	.loc 1 18799 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3691
	testl	%eax, %eax	# which_alternative.3691
	je	.L4103	#,
	.loc 1 18801 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4103:
	.loc 1 18805 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4012:
	.loc 1 18809 0
	movq	-8(%rbp), %rax	# insn, tmp382
	movq	%rax, %rdi	# tmp382,
	call	extract_constrain_insn_cached	#
	.loc 1 18810 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3692
	testl	%eax, %eax	# which_alternative.3692
	je	.L4104	#,
	.loc 1 18812 0
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4104:
	.loc 1 18816 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4011:
	.loc 1 18820 0
	movq	-8(%rbp), %rax	# insn, tmp383
	movq	%rax, %rdi	# tmp383,
	call	extract_constrain_insn_cached	#
	.loc 1 18821 0
	movq	-8(%rbp), %rax	# insn, tmp384
	movq	%rax, %rdi	# tmp384,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4105	#,
	.loc 1 18823 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4105:
	.loc 1 18825 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3693
	testl	%eax, %eax	# which_alternative.3693
	je	.L4106	#,
	.loc 1 18825 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3694
	cmpl	$1, %eax	#, which_alternative.3694
	je	.L4106	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3695
	cmpl	$2, %eax	#, which_alternative.3695
	je	.L4106	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3696
	cmpl	$3, %eax	#, which_alternative.3696
	je	.L4107	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3697
	cmpl	$4, %eax	#, which_alternative.3697
	jne	.L4106	#,
.L4107:
	.loc 1 18827 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4106:
	.loc 1 18831 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4010:
	.loc 1 18836 0
	movq	-8(%rbp), %rax	# insn, tmp385
	movq	%rax, %rdi	# tmp385,
	call	extract_constrain_insn_cached	#
	.loc 1 18837 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3698
	cmpl	$1, %eax	#, which_alternative.3698
	jne	.L4108	#,
	.loc 1 18837 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	memory_operand	#
	testl	%eax, %eax	# D.57345
	jne	.L4108	#,
	.loc 1 18839 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4108:
	.loc 1 18843 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4009:
	.loc 1 18847 0
	movq	-8(%rbp), %rax	# insn, tmp386
	movq	%rax, %rdi	# tmp386,
	call	extract_constrain_insn_cached	#
	.loc 1 18848 0
	movq	-8(%rbp), %rax	# insn, tmp387
	movq	%rax, %rdi	# tmp387,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4109	#,
	.loc 1 18850 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4109:
	.loc 1 18852 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3699
	cmpl	$5, %eax	#, which_alternative.3699
	je	.L4110	#,
	.loc 1 18852 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3700
	cmpl	$6, %eax	#, which_alternative.3700
	je	.L4110	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3701
	cmpl	$7, %eax	#, which_alternative.3701
	je	.L4110	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3702
	cmpl	$8, %eax	#, which_alternative.3702
	je	.L4110	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3703
	cmpl	$4, %eax	#, which_alternative.3703
	je	.L4110	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3704
	testl	%eax, %eax	# flag_pic.3704
	je	.L4111	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57346
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4111	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3705
	testl	%eax, %eax	# flag_pic.3705
	je	.L4110	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57346
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4110	#,
.L4111:
	.loc 1 18854 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4110:
	.loc 1 18858 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4008:
	.loc 1 18862 0
	movq	-8(%rbp), %rax	# insn, tmp388
	movq	%rax, %rdi	# tmp388,
	call	extract_constrain_insn_cached	#
	.loc 1 18863 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3706
	testl	%eax, %eax	# which_alternative.3706
	jne	.L4112	#,
	.loc 1 18863 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	memory_operand	#
	testl	%eax, %eax	# D.57345
	jne	.L4112	#,
	.loc 1 18865 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4112:
	.loc 1 18869 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4007:
	.loc 1 18873 0
	movq	-8(%rbp), %rax	# insn, tmp389
	movq	%rax, %rdi	# tmp389,
	call	extract_constrain_insn_cached	#
	.loc 1 18874 0
	movq	-8(%rbp), %rax	# insn, tmp390
	movq	%rax, %rdi	# tmp390,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4113	#,
	.loc 1 18876 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4113:
	.loc 1 18878 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57346
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4114	#,
	.loc 1 18878 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3707
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3708
	movl	%eax, %ecx	# ix86_cpu.3709, tmp418
	sarl	%cl, %edx	# tmp418, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	jne	.L4114	#,
	.loc 1 18880 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4114:
	.loc 1 18884 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4006:
	.loc 1 18890 0
	movq	-8(%rbp), %rax	# insn, tmp391
	movq	%rax, %rdi	# tmp391,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4115	#,
	.loc 1 18892 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4115:
	.loc 1 18894 0
	movq	-8(%rbp), %rax	# insn, tmp392
	movq	%rax, %rdi	# tmp392,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57347
	jne	.L4116	#,
	.loc 1 18896 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4116:
	.loc 1 18900 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4005:
	.loc 1 18904 0
	movq	-8(%rbp), %rax	# insn, tmp393
	movq	%rax, %rdi	# tmp393,
	call	extract_constrain_insn_cached	#
	.loc 1 18905 0
	movq	-8(%rbp), %rax	# insn, tmp394
	movq	%rax, %rdi	# tmp394,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4117	#,
	.loc 1 18907 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4117:
	.loc 1 18909 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3710
	cmpl	$3, %eax	#, which_alternative.3710
	jne	.L4118	#,
	.loc 1 18909 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3711
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3712
	movl	%eax, %ecx	# ix86_cpu.3713, tmp420
	sarl	%cl, %edx	# tmp420, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4119	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3714
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3715
	movl	%eax, %ecx	# ix86_cpu.3716, tmp422
	sarl	%cl, %edx	# tmp422, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4119	#,
.L4118:
	.loc 1 18909 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3717
	cmpl	$3, %eax	#, which_alternative.3717
	jne	.L4120	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3718
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3719
	movl	%eax, %ecx	# ix86_cpu.3720, tmp424
	sarl	%cl, %edx	# tmp424, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4121	#,
	.loc 1 18909 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3721
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3722
	movl	%eax, %ecx	# ix86_cpu.3723, tmp426
	sarl	%cl, %edx	# tmp426, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4121	#,
.L4120:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3724
	cmpl	$3, %eax	#, which_alternative.3724
	je	.L4121	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3725
	cmpl	$5, %eax	#, which_alternative.3725
	je	.L4121	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3726
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3727
	movl	%eax, %ecx	# ix86_cpu.3728, tmp428
	sarl	%cl, %edx	# tmp428, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4119	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3729
	cmpl	$2, %eax	#, which_alternative.3729
	je	.L4121	#,
.L4119:
	.loc 1 18911 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3730
	cmpl	$3, %eax	#, which_alternative.3730
	jne	.L4122	#,
	.loc 1 18911 0 is_stmt 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3731
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3732
	movl	%eax, %ecx	# ix86_cpu.3733, tmp430
	sarl	%cl, %edx	# tmp430, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4123	#,
	.loc 1 18911 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3734
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3735
	movl	%eax, %ecx	# ix86_cpu.3736, tmp432
	sarl	%cl, %edx	# tmp432, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4123	#,
.L4122:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3737
	cmpl	$3, %eax	#, which_alternative.3737
	je	.L4124	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3738
	cmpl	$5, %eax	#, which_alternative.3738
	je	.L4124	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3739
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3740
	movl	%eax, %ecx	# ix86_cpu.3741, tmp434
	sarl	%cl, %edx	# tmp434, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4123	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3742
	cmpl	$2, %eax	#, which_alternative.3742
	jne	.L4123	#,
.L4124:
	.loc 1 18913 0 is_stmt 1
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4123:
	.loc 1 18917 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4121:
	.loc 1 18922 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4003:
	.loc 1 18926 0
	movq	-8(%rbp), %rax	# insn, tmp395
	movq	%rax, %rdi	# tmp395,
	call	extract_constrain_insn_cached	#
	.loc 1 18927 0
	movq	-8(%rbp), %rax	# insn, tmp396
	movq	%rax, %rdi	# tmp396,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4125	#,
	.loc 1 18929 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4125:
	.loc 1 18931 0
	movq	-8(%rbp), %rax	# insn, tmp397
	movq	%rax, %rdi	# tmp397,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57347
	jne	.L4126	#,
	.loc 1 18933 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3743
	testl	%eax, %eax	# which_alternative.3743
	je	.L4127	#,
	.loc 1 18933 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3744
	cmpl	$1, %eax	#, which_alternative.3744
	jne	.L4128	#,
.L4127:
	.loc 1 18933 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3745
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3746
	movl	%eax, %ecx	# ix86_cpu.3747, tmp436
	sarl	%cl, %edx	# tmp436, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4129	#,
	.loc 1 18933 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.3748
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3749
	movl	%eax, %ecx	# ix86_cpu.3750, tmp438
	sarl	%cl, %edx	# tmp438, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4129	#,
.L4128:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3751
	cmpl	$2, %eax	#, which_alternative.3751
	je	.L4130	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3752
	cmpl	$3, %eax	#, which_alternative.3752
	je	.L4130	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3753
	cmpl	$4, %eax	#, which_alternative.3753
	jne	.L4131	#,
.L4130:
	.loc 1 18933 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57346
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57345
	jne	.L4129	#,
.L4131:
	.loc 1 18933 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3754
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3755
	movl	%eax, %ecx	# ix86_cpu.3756, tmp440
	sarl	%cl, %edx	# tmp440, D.57345
	movl	%edx, %eax	# D.57345, D.57345
	andl	$1, %eax	#, D.57345
	testl	%eax, %eax	# D.57345
	je	.L4129	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3757
	testl	%eax, %eax	# which_alternative.3757
	je	.L4132	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3758
	cmpl	$1, %eax	#, which_alternative.3758
	je	.L4132	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3759
	cmpl	$3, %eax	#, which_alternative.3759
	je	.L4132	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3760
	cmpl	$4, %eax	#, which_alternative.3760
	je	.L4132	#,
.L4129:
	.loc 1 18933 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp398
	movq	%rax, %rdi	# tmp398,
	call	get_attr_mode	#
	cmpl	$3, %eax	#, D.57349
	jne	.L4133	#,
.L4132:
	.loc 1 18935 0 is_stmt 1
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4133:
	.loc 1 18939 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4126:
	.loc 1 18944 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4002:
	.loc 1 18949 0
	movq	-8(%rbp), %rax	# insn, tmp399
	movq	%rax, %rdi	# tmp399,
	call	extract_insn_cached	#
	.loc 1 18950 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	memory_operand	#
	testl	%eax, %eax	# D.57345
	jne	.L4134	#,
	.loc 1 18952 0
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4134:
	.loc 1 18956 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4001:
	.loc 1 18960 0
	movq	-8(%rbp), %rax	# insn, tmp400
	movq	%rax, %rdi	# tmp400,
	call	extract_constrain_insn_cached	#
	.loc 1 18961 0
	movq	-8(%rbp), %rax	# insn, tmp401
	movq	%rax, %rdi	# tmp401,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4135	#,
	.loc 1 18963 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4135:
	.loc 1 18965 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3761
	cmpl	$4, %eax	#, which_alternative.3761
	je	.L4136	#,
	.loc 1 18965 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3762
	cmpl	$5, %eax	#, which_alternative.3762
	je	.L4136	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3763
	cmpl	$6, %eax	#, which_alternative.3763
	je	.L4136	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3764
	cmpl	$7, %eax	#, which_alternative.3764
	je	.L4136	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3765
	cmpl	$8, %eax	#, which_alternative.3765
	je	.L4136	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3766
	cmpl	$9, %eax	#, which_alternative.3766
	je	.L4136	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3767
	testl	%eax, %eax	# flag_pic.3767
	je	.L4137	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57346
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4137	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.3768
	testl	%eax, %eax	# flag_pic.3768
	je	.L4136	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57346
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57345
	je	.L4136	#,
.L4137:
	.loc 1 18967 0 is_stmt 1
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4136:
	.loc 1 18971 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L3999:
	.loc 1 18978 0
	movq	-8(%rbp), %rax	# insn, tmp402
	movq	%rax, %rdi	# tmp402,
	call	extract_insn_cached	#
	.loc 1 18979 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	memory_operand	#
	testl	%eax, %eax	# D.57345
	jne	.L4138	#,
	.loc 1 18981 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4138:
	.loc 1 18985 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L3998:
	.loc 1 18994 0
	movq	-8(%rbp), %rax	# insn, tmp403
	movq	%rax, %rdi	# tmp403,
	call	extract_insn_cached	#
	.loc 1 18995 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57346
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57346,
	call	memory_operand	#
	testl	%eax, %eax	# D.57345
	jne	.L4139	#,
	.loc 1 18997 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4139:
	.loc 1 19001 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L3997:
	.loc 1 19024 0
	movq	-8(%rbp), %rax	# insn, tmp404
	movq	%rax, %rdi	# tmp404,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4140	#,
	.loc 1 19026 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4140:
	.loc 1 19030 0
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L3996:
	.loc 1 19138 0
	movq	-8(%rbp), %rax	# insn, tmp405
	movq	%rax, %rdi	# tmp405,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57348
	jne	.L4141	#,
	.loc 1 19140 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4141:
	.loc 1 19144 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4020:
	.loc 1 19148 0
	movq	-8(%rbp), %rax	# insn, tmp406
	movq	%rax, %rdi	# tmp406,
	call	extract_constrain_insn_cached	#
	.loc 1 19149 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3769
	testl	%eax, %eax	# which_alternative.3769
	jne	.L4142	#,
	.loc 1 19151 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4142:
	.loc 1 19153 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3770
	cmpl	$1, %eax	#, which_alternative.3770
	jne	.L4143	#,
	.loc 1 19155 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4143:
	.loc 1 19157 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3771
	cmpl	$2, %eax	#, which_alternative.3771
	jne	.L4144	#,
	.loc 1 19159 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4144:
	.loc 1 19161 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3772
	cmpl	$3, %eax	#, which_alternative.3772
	jne	.L4145	#,
	.loc 1 19163 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4145:
	.loc 1 19167 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4021:
	.loc 1 19172 0
	movq	-8(%rbp), %rax	# insn, tmp407
	movq	%rax, %rdi	# tmp407,
	call	extract_constrain_insn_cached	#
	.loc 1 19173 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3773
	testl	%eax, %eax	# which_alternative.3773
	jne	.L4146	#,
	.loc 1 19175 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4146:
	.loc 1 19177 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3774
	cmpl	$1, %eax	#, which_alternative.3774
	jne	.L4147	#,
	.loc 1 19179 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4147:
	.loc 1 19183 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4022:
	.loc 1 19187 0
	movq	-8(%rbp), %rax	# insn, tmp408
	movq	%rax, %rdi	# tmp408,
	call	extract_constrain_insn_cached	#
	.loc 1 19188 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3775
	testl	%eax, %eax	# which_alternative.3775
	jne	.L4148	#,
	.loc 1 19190 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4148:
	.loc 1 19192 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3776
	cmpl	$1, %eax	#, which_alternative.3776
	jne	.L4149	#,
	.loc 1 19194 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4149:
	.loc 1 19196 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3777
	cmpl	$2, %eax	#, which_alternative.3777
	jne	.L4150	#,
	.loc 1 19198 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L4150:
	.loc 1 19202 0
	movl	$3, %eax	#, D.57344
	jmp	.L4040	#
.L4035:
	.loc 1 19213 0
	movl	$2, %eax	#, D.57344
	jmp	.L4040	#
.L4004:
	.loc 1 19224 0
	movl	$1, %eax	#, D.57344
	jmp	.L4040	#
.L4000:
	.loc 1 19253 0
	movl	$0, %eax	#, D.57344
	jmp	.L4040	#
.L3994:
	.loc 1 19256 0
	movq	-8(%rbp), %rax	# insn, tmp409
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57346
	movzwl	(%rax), %eax	# _384->code, D.57350
	cmpw	$40, %ax	#, D.57350
	je	.L3993	#,
	.loc 1 19257 0
	movq	-8(%rbp), %rax	# insn, tmp410
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57346
	movq	%rax, %rdi	# D.57346,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57345
	jns	.L3993	#,
	.loc 1 19258 0
	movq	-8(%rbp), %rax	# insn, tmp411
	movl	$__FUNCTION__.18407, %ecx	#,
	movl	$19258, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp411,
	call	_fatal_insn_not_found	#
.L3993:
	.loc 1 19260 0
	movl	$3, %eax	#, D.57344
.L4040:
	.loc 1 19263 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE58:
	.size	get_attr_pent_pair, .-get_attr_pent_pair
	.globl	get_attr_pent_prefix
	.type	get_attr_pent_prefix, @function
get_attr_pent_prefix:
.LFB59:
	.loc 1 19269 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 19270 0
	movq	-8(%rbp), %rax	# insn, tmp191
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57352
	testl	%eax, %eax	# D.57352
	js	.L4152	#,
	.loc 1 19270 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp192
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.3778
	jmp	.L4153	#
.L4152:
	.loc 1 19270 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp193
	movq	%rax, %rdi	# tmp193,
	call	recog_memoized_1	#
.L4153:
	.loc 1 19270 0 discriminator 3
	addl	$1, %eax	#, tmp194
	cmpl	$834, %eax	#, tmp194
	ja	.L4154	#,
	movl	%eax, %eax	# tmp194, tmp195
	movq	.L4156(,%rax,8), %rax	#, tmp196
	jmp	*%rax	# tmp196
	.section	.rodata
	.align 8
	.align 4
.L4156:
	.quad	.L4155
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4158
	.quad	.L4157
	.quad	.L4154
	.quad	.L4158
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4159
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4160
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4161
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4162
	.quad	.L4162
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4162
	.quad	.L4163
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4164
	.quad	.L4165
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4166
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4167
	.quad	.L4167
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4168
	.quad	.L4157
	.quad	.L4154
	.quad	.L4168
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4169
	.quad	.L4169
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4170
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4171
	.quad	.L4168
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4170
	.quad	.L4157
	.quad	.L4154
	.quad	.L4170
	.quad	.L4157
	.quad	.L4154
	.quad	.L4170
	.quad	.L4157
	.quad	.L4154
	.quad	.L4170
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4172
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4170
	.quad	.L4170
	.quad	.L4170
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4173
	.quad	.L4154
	.quad	.L4170
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4168
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4174
	.quad	.L4174
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4175
	.quad	.L4157
	.quad	.L4154
	.quad	.L4175
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4176
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4176
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4158
	.quad	.L4157
	.quad	.L4154
	.quad	.L4158
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4177
	.quad	.L4154
	.quad	.L4177
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4178
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4154
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.quad	.L4157
	.text
.L4178:
	.loc 1 19273 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp197
	movq	%rax, %rdi	# tmp197,
	call	extract_constrain_insn_cached	#
	.loc 1 19274 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3779
	testl	%eax, %eax	# which_alternative.3779
	je	.L4179	#,
	.loc 1 19274 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3780
	cmpl	$1, %eax	#, which_alternative.3780
	je	.L4179	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3781
	cmpl	$2, %eax	#, which_alternative.3781
	je	.L4180	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3782
	cmpl	$3, %eax	#, which_alternative.3782
	je	.L4180	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3783
	cmpl	$2, %eax	#, which_alternative.3783
	je	.L4179	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3784
	cmpl	$3, %eax	#, which_alternative.3784
	je	.L4179	#,
.L4180:
	.loc 1 19276 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4179:
	.loc 1 19280 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4177:
	.loc 1 19285 0
	movq	-8(%rbp), %rax	# insn, tmp198
	movq	%rax, %rdi	# tmp198,
	call	extract_constrain_insn_cached	#
	.loc 1 19286 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3785
	cmpl	$2, %eax	#, which_alternative.3785
	je	.L4182	#,
	.loc 1 19286 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3786
	cmpl	$3, %eax	#, which_alternative.3786
	jne	.L4183	#,
.L4182:
	.loc 1 19288 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4183:
	.loc 1 19292 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4176:
	.loc 1 19297 0
	movq	-8(%rbp), %rax	# insn, tmp199
	movq	%rax, %rdi	# tmp199,
	call	extract_constrain_insn_cached	#
	.loc 1 19298 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3787
	cmpl	$2, %eax	#, which_alternative.3787
	jne	.L4184	#,
	.loc 1 19300 0
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4184:
	.loc 1 19304 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4175:
	.loc 1 19309 0
	movq	-8(%rbp), %rax	# insn, tmp200
	movq	%rax, %rdi	# tmp200,
	call	extract_constrain_insn_cached	#
	.loc 1 19310 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3788
	cmpl	$1, %eax	#, which_alternative.3788
	jne	.L4185	#,
	.loc 1 19312 0
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4185:
	.loc 1 19316 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4174:
	.loc 1 19321 0
	movq	-8(%rbp), %rax	# insn, tmp201
	movq	%rax, %rdi	# tmp201,
	call	get_attr_prefix_0f	#
	cmpl	$1, %eax	#, D.57352
	jne	.L4186	#,
	.loc 1 19323 0
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4186:
	.loc 1 19327 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4173:
	.loc 1 19331 0
	movq	-8(%rbp), %rax	# insn, tmp202
	movq	%rax, %rdi	# tmp202,
	call	extract_constrain_insn_cached	#
	.loc 1 19332 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3789
	testl	%eax, %eax	# which_alternative.3789
	je	.L4187	#,
	.loc 1 19332 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3790
	cmpl	$1, %eax	#, which_alternative.3790
	je	.L4187	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3791
	cmpl	$2, %eax	#, which_alternative.3791
	je	.L4187	#,
	.loc 1 19334 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4187:
	.loc 1 19338 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4172:
	.loc 1 19342 0
	movq	-8(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	extract_constrain_insn_cached	#
	.loc 1 19343 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3792
	testl	%eax, %eax	# which_alternative.3792
	je	.L4188	#,
	.loc 1 19343 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3793
	cmpl	$1, %eax	#, which_alternative.3793
	jne	.L4189	#,
.L4188:
	.loc 1 19345 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4189:
	.loc 1 19349 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4171:
	.loc 1 19353 0
	movq	-8(%rbp), %rax	# insn, tmp204
	movq	%rax, %rdi	# tmp204,
	call	extract_constrain_insn_cached	#
	.loc 1 19354 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3794
	testl	%eax, %eax	# which_alternative.3794
	je	.L4190	#,
	.loc 1 19354 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3795
	cmpl	$1, %eax	#, which_alternative.3795
	je	.L4190	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3796
	cmpl	$2, %eax	#, which_alternative.3796
	je	.L4190	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3797
	cmpl	$3, %eax	#, which_alternative.3797
	je	.L4190	#,
	.loc 1 19356 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4190:
	.loc 1 19360 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4170:
	.loc 1 19372 0
	movq	-8(%rbp), %rax	# insn, tmp205
	movq	%rax, %rdi	# tmp205,
	call	extract_constrain_insn_cached	#
	.loc 1 19373 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3798
	testl	%eax, %eax	# which_alternative.3798
	je	.L4191	#,
	.loc 1 19373 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3799
	cmpl	$1, %eax	#, which_alternative.3799
	je	.L4191	#,
	.loc 1 19375 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4191:
	.loc 1 19379 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4169:
	.loc 1 19384 0
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	%rax, %rdi	# tmp206,
	call	extract_constrain_insn_cached	#
	.loc 1 19385 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3800
	cmpl	$4, %eax	#, ix86_cpu.3800
	je	.L4192	#,
	.loc 1 19385 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3801
	testl	%eax, %eax	# which_alternative.3801
	je	.L4193	#,
.L4192:
	.loc 1 19387 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4193:
	.loc 1 19391 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4168:
	.loc 1 19398 0
	movq	-8(%rbp), %rax	# insn, tmp207
	movq	%rax, %rdi	# tmp207,
	call	extract_constrain_insn_cached	#
	.loc 1 19399 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3802
	testl	%eax, %eax	# which_alternative.3802
	jne	.L4194	#,
	.loc 1 19401 0
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4194:
	.loc 1 19405 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4167:
	.loc 1 19410 0
	movq	-8(%rbp), %rax	# insn, tmp208
	movq	%rax, %rdi	# tmp208,
	call	extract_constrain_insn_cached	#
	.loc 1 19411 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3803
	testl	%eax, %eax	# which_alternative.3803
	je	.L4195	#,
	.loc 1 19411 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3804
	cmpl	$1, %eax	#, which_alternative.3804
	je	.L4195	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3805
	cmpl	$2, %eax	#, which_alternative.3805
	je	.L4195	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3806
	cmpl	$5, %eax	#, which_alternative.3806
	je	.L4196	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3807
	cmpl	$6, %eax	#, which_alternative.3807
	je	.L4196	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3808
	cmpl	$7, %eax	#, which_alternative.3808
	je	.L4196	#,
.L4195:
	.loc 1 19411 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3809
	cmpl	$8, %eax	#, which_alternative.3809
	jne	.L4197	#,
.L4196:
	.loc 1 19413 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4197:
	.loc 1 19417 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4166:
	.loc 1 19421 0
	movq	-8(%rbp), %rax	# insn, tmp209
	movq	%rax, %rdi	# tmp209,
	call	extract_constrain_insn_cached	#
	.loc 1 19422 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3810
	testl	%eax, %eax	# which_alternative.3810
	je	.L4198	#,
	.loc 1 19422 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3811
	cmpl	$1, %eax	#, which_alternative.3811
	je	.L4198	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3812
	cmpl	$2, %eax	#, which_alternative.3812
	je	.L4198	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3813
	cmpl	$5, %eax	#, which_alternative.3813
	je	.L4199	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3814
	cmpl	$6, %eax	#, which_alternative.3814
	je	.L4199	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3815
	cmpl	$7, %eax	#, which_alternative.3815
	je	.L4199	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3816
	cmpl	$8, %eax	#, which_alternative.3816
	je	.L4199	#,
.L4198:
	.loc 1 19422 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3817
	testl	%eax, %eax	# which_alternative.3817
	je	.L4200	#,
	.loc 1 19422 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3818
	cmpl	$1, %eax	#, which_alternative.3818
	je	.L4200	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3819
	cmpl	$2, %eax	#, which_alternative.3819
	je	.L4200	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3820
	cmpl	$9, %eax	#, which_alternative.3820
	je	.L4199	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3821
	cmpl	$10, %eax	#, which_alternative.3821
	je	.L4199	#,
.L4200:
	.loc 1 19422 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3822
	cmpl	$11, %eax	#, which_alternative.3822
	jne	.L4201	#,
.L4199:
	.loc 1 19424 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4201:
	.loc 1 19428 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4165:
	.loc 1 19432 0
	movq	-8(%rbp), %rax	# insn, tmp210
	movq	%rax, %rdi	# tmp210,
	call	extract_constrain_insn_cached	#
	.loc 1 19433 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3823
	cmpl	$5, %eax	#, which_alternative.3823
	je	.L4202	#,
	.loc 1 19433 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3824
	cmpl	$6, %eax	#, which_alternative.3824
	je	.L4202	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3825
	cmpl	$7, %eax	#, which_alternative.3825
	je	.L4203	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3826
	cmpl	$8, %eax	#, which_alternative.3826
	je	.L4203	#,
.L4202:
	.loc 1 19433 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3827
	cmpl	$5, %eax	#, which_alternative.3827
	je	.L4203	#,
	.loc 1 19433 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3828
	cmpl	$6, %eax	#, which_alternative.3828
	jne	.L4204	#,
.L4203:
	.loc 1 19435 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4204:
	.loc 1 19439 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4164:
	.loc 1 19443 0
	movq	-8(%rbp), %rax	# insn, tmp211
	movq	%rax, %rdi	# tmp211,
	call	extract_constrain_insn_cached	#
	.loc 1 19444 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3829
	testl	%eax, %eax	# which_alternative.3829
	je	.L4205	#,
	.loc 1 19444 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3830
	cmpl	$1, %eax	#, which_alternative.3830
	je	.L4205	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3831
	cmpl	$4, %eax	#, which_alternative.3831
	je	.L4206	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3832
	cmpl	$5, %eax	#, which_alternative.3832
	je	.L4206	#,
.L4205:
	.loc 1 19444 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3833
	cmpl	$6, %eax	#, which_alternative.3833
	je	.L4206	#,
	.loc 1 19444 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3834
	testl	%eax, %eax	# which_alternative.3834
	je	.L4207	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3835
	cmpl	$1, %eax	#, which_alternative.3835
	je	.L4207	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3836
	cmpl	$2, %eax	#, which_alternative.3836
	je	.L4206	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3837
	cmpl	$3, %eax	#, which_alternative.3837
	jne	.L4207	#,
.L4206:
	.loc 1 19446 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4207:
	.loc 1 19450 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4163:
	.loc 1 19454 0
	movq	-8(%rbp), %rax	# insn, tmp212
	movq	%rax, %rdi	# tmp212,
	call	extract_constrain_insn_cached	#
	.loc 1 19455 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57353
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57353,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57352
	je	.L4208	#,
	.loc 1 19455 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3838
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3839
	movl	%eax, %ecx	# ix86_cpu.3840, tmp224
	sarl	%cl, %edx	# tmp224, D.57352
	movl	%edx, %eax	# D.57352, D.57352
	andl	$1, %eax	#, D.57352
	testl	%eax, %eax	# D.57352
	je	.L4209	#,
.L4208:
	.loc 1 19457 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4209:
	.loc 1 19461 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4162:
	.loc 1 19467 0
	movq	-8(%rbp), %rax	# insn, tmp213
	movq	%rax, %rdi	# tmp213,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57354
	jne	.L4210	#,
	.loc 1 19469 0
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4210:
	.loc 1 19473 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4161:
	.loc 1 19477 0
	movq	-8(%rbp), %rax	# insn, tmp214
	movq	%rax, %rdi	# tmp214,
	call	extract_constrain_insn_cached	#
	.loc 1 19478 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3841
	cmpl	$3, %eax	#, which_alternative.3841
	jne	.L4211	#,
	.loc 1 19478 0 is_stmt 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3842
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3843
	movl	%eax, %ecx	# ix86_cpu.3844, tmp226
	sarl	%cl, %edx	# tmp226, D.57352
	movl	%edx, %eax	# D.57352, D.57352
	andl	$1, %eax	#, D.57352
	testl	%eax, %eax	# D.57352
	je	.L4212	#,
	.loc 1 19478 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3845
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3846
	movl	%eax, %ecx	# ix86_cpu.3847, tmp228
	sarl	%cl, %edx	# tmp228, D.57352
	movl	%edx, %eax	# D.57352, D.57352
	andl	$1, %eax	#, D.57352
	testl	%eax, %eax	# D.57352
	je	.L4212	#,
.L4211:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3848
	cmpl	$3, %eax	#, which_alternative.3848
	je	.L4213	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3849
	cmpl	$5, %eax	#, which_alternative.3849
	je	.L4213	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3850
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3851
	movl	%eax, %ecx	# ix86_cpu.3852, tmp230
	sarl	%cl, %edx	# tmp230, D.57352
	movl	%edx, %eax	# D.57352, D.57352
	andl	$1, %eax	#, D.57352
	testl	%eax, %eax	# D.57352
	je	.L4212	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3853
	cmpl	$2, %eax	#, which_alternative.3853
	jne	.L4212	#,
.L4213:
	.loc 1 19480 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4212:
	.loc 1 19484 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4160:
	.loc 1 19488 0
	movq	-8(%rbp), %rax	# insn, tmp215
	movq	%rax, %rdi	# tmp215,
	call	extract_constrain_insn_cached	#
	.loc 1 19489 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3854
	testl	%eax, %eax	# which_alternative.3854
	je	.L4214	#,
	.loc 1 19489 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3855
	cmpl	$1, %eax	#, which_alternative.3855
	jne	.L4215	#,
.L4214:
	.loc 1 19489 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3856
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3857
	movl	%eax, %ecx	# ix86_cpu.3858, tmp232
	sarl	%cl, %edx	# tmp232, D.57352
	movl	%edx, %eax	# D.57352, D.57352
	andl	$1, %eax	#, D.57352
	testl	%eax, %eax	# D.57352
	je	.L4216	#,
	.loc 1 19489 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.3859
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3860
	movl	%eax, %ecx	# ix86_cpu.3861, tmp234
	sarl	%cl, %edx	# tmp234, D.57352
	movl	%edx, %eax	# D.57352, D.57352
	andl	$1, %eax	#, D.57352
	testl	%eax, %eax	# D.57352
	je	.L4216	#,
.L4215:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3862
	cmpl	$2, %eax	#, which_alternative.3862
	je	.L4217	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3863
	cmpl	$3, %eax	#, which_alternative.3863
	je	.L4217	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3864
	cmpl	$4, %eax	#, which_alternative.3864
	jne	.L4218	#,
.L4217:
	.loc 1 19489 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57353
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57353,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57352
	jne	.L4216	#,
.L4218:
	.loc 1 19489 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3865
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3866
	movl	%eax, %ecx	# ix86_cpu.3867, tmp236
	sarl	%cl, %edx	# tmp236, D.57352
	movl	%edx, %eax	# D.57352, D.57352
	andl	$1, %eax	#, D.57352
	testl	%eax, %eax	# D.57352
	je	.L4216	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3868
	testl	%eax, %eax	# which_alternative.3868
	je	.L4219	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3869
	cmpl	$1, %eax	#, which_alternative.3869
	je	.L4219	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3870
	cmpl	$3, %eax	#, which_alternative.3870
	je	.L4219	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3871
	cmpl	$4, %eax	#, which_alternative.3871
	je	.L4219	#,
.L4216:
	.loc 1 19489 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp216
	movq	%rax, %rdi	# tmp216,
	call	get_attr_mode	#
	cmpl	$3, %eax	#, D.57355
	jne	.L4220	#,
.L4219:
	.loc 1 19491 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4220:
	.loc 1 19495 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4159:
	.loc 1 19499 0
	movq	-8(%rbp), %rax	# insn, tmp217
	movq	%rax, %rdi	# tmp217,
	call	extract_constrain_insn_cached	#
	.loc 1 19500 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3872
	cmpl	$4, %eax	#, which_alternative.3872
	je	.L4221	#,
	.loc 1 19500 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3873
	cmpl	$5, %eax	#, which_alternative.3873
	je	.L4221	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3874
	cmpl	$6, %eax	#, which_alternative.3874
	je	.L4221	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3875
	cmpl	$7, %eax	#, which_alternative.3875
	je	.L4222	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3876
	cmpl	$8, %eax	#, which_alternative.3876
	je	.L4222	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3877
	cmpl	$9, %eax	#, which_alternative.3877
	je	.L4222	#,
.L4221:
	.loc 1 19500 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3878
	cmpl	$4, %eax	#, which_alternative.3878
	je	.L4222	#,
	.loc 1 19500 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3879
	cmpl	$5, %eax	#, which_alternative.3879
	je	.L4222	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3880
	cmpl	$6, %eax	#, which_alternative.3880
	jne	.L4223	#,
.L4222:
	.loc 1 19502 0 is_stmt 1
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4223:
	.loc 1 19506 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4158:
	.loc 1 19513 0
	movq	-8(%rbp), %rax	# insn, tmp218
	movq	%rax, %rdi	# tmp218,
	call	extract_constrain_insn_cached	#
	.loc 1 19514 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3881
	testl	%eax, %eax	# which_alternative.3881
	je	.L4224	#,
	.loc 1 19516 0
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4224:
	.loc 1 19520 0
	movl	$0, %eax	#, D.57351
	jmp	.L4181	#
.L4157:
	.loc 1 19805 0
	movl	$1, %eax	#, D.57351
	jmp	.L4181	#
.L4155:
	.loc 1 19808 0
	movq	-8(%rbp), %rax	# insn, tmp219
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57353
	movzwl	(%rax), %eax	# _174->code, D.57356
	cmpw	$40, %ax	#, D.57356
	je	.L4154	#,
	.loc 1 19809 0
	movq	-8(%rbp), %rax	# insn, tmp220
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57353
	movq	%rax, %rdi	# D.57353,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57352
	jns	.L4154	#,
	.loc 1 19810 0
	movq	-8(%rbp), %rax	# insn, tmp221
	movl	$__FUNCTION__.18740, %ecx	#,
	movl	$19810, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp221,
	call	_fatal_insn_not_found	#
.L4154:
	.loc 1 19812 0
	movl	$0, %eax	#, D.57351
.L4181:
	.loc 1 19815 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE59:
	.size	get_attr_pent_prefix, .-get_attr_pent_prefix
	.globl	get_attr_prefix_0f
	.type	get_attr_prefix_0f, @function
get_attr_prefix_0f:
.LFB60:
	.loc 1 19821 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# insn, insn
	.loc 1 19822 0
	movq	-24(%rbp), %rax	# insn, tmp230
	movl	40(%rax), %eax	# insn_11(D)->fld[4].rtint, D.57357
	testl	%eax, %eax	# D.57357
	js	.L4226	#,
	.loc 1 19822 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# insn, tmp231
	movl	40(%rax), %eax	# insn_11(D)->fld[4].rtint, iftmp.3882
	jmp	.L4227	#
.L4226:
	.loc 1 19822 0 discriminator 2
	movq	-24(%rbp), %rax	# insn, tmp232
	movq	%rax, %rdi	# tmp232,
	call	recog_memoized_1	#
.L4227:
	.loc 1 19822 0 discriminator 3
	addl	$1, %eax	#, tmp233
	cmpl	$834, %eax	#, tmp233
	ja	.L4228	#,
	movl	%eax, %eax	# tmp233, tmp234
	movq	.L4230(,%rax,8), %rax	#, tmp235
	jmp	*%rax	# tmp235
	.section	.rodata
	.align 8
	.align 4
.L4230:
	.quad	.L4229
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4231
	.quad	.L4232
	.quad	.L4228
	.quad	.L4231
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4233
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4234
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4235
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4232
	.quad	.L4236
	.quad	.L4236
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4236
	.quad	.L4237
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4238
	.quad	.L4239
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4240
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4241
	.quad	.L4241
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4228
	.quad	.L4242
	.quad	.L4232
	.quad	.L4228
	.quad	.L4242
	.quad	.L4232
	.quad	.L4228
	.quad	.L4242
	.quad	.L4232
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4232
	.quad	.L4243
	.quad	.L4243
	.quad	.L4243
	.quad	.L4232
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4244
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4245
	.quad	.L4242
	.quad	.L4228
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4244
	.quad	.L4232
	.quad	.L4228
	.quad	.L4244
	.quad	.L4232
	.quad	.L4228
	.quad	.L4244
	.quad	.L4232
	.quad	.L4228
	.quad	.L4244
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4246
	.quad	.L4246
	.quad	.L4246
	.quad	.L4246
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4247
	.quad	.L4228
	.quad	.L4244
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4244
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4248
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4248
	.quad	.L4248
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4249
	.quad	.L4250
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4228
	.quad	.L4251
	.quad	.L4232
	.quad	.L4228
	.quad	.L4251
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4252
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4252
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4231
	.quad	.L4232
	.quad	.L4228
	.quad	.L4231
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4228
	.quad	.L4232
	.quad	.L4232
	.quad	.L4253
	.quad	.L4228
	.quad	.L4253
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4228
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4254
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4228
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.quad	.L4232
	.text
.L4254:
	.loc 1 19825 0 is_stmt 1
	movq	-24(%rbp), %rax	# insn, tmp236
	movq	%rax, %rdi	# tmp236,
	call	extract_constrain_insn_cached	#
	.loc 1 19826 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3883
	testl	%eax, %eax	# which_alternative.3883
	je	.L4255	#,
	.loc 1 19826 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3884
	cmpl	$1, %eax	#, which_alternative.3884
	je	.L4255	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3885
	cmpl	$2, %eax	#, which_alternative.3885
	je	.L4256	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3886
	cmpl	$3, %eax	#, which_alternative.3886
	je	.L4256	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3887
	cmpl	$2, %eax	#, which_alternative.3887
	je	.L4255	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3888
	cmpl	$3, %eax	#, which_alternative.3888
	je	.L4255	#,
.L4256:
	.loc 1 19828 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4255:
	.loc 1 19832 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4253:
	.loc 1 19837 0
	movq	-24(%rbp), %rax	# insn, tmp237
	movq	%rax, %rdi	# tmp237,
	call	extract_constrain_insn_cached	#
	.loc 1 19838 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3889
	cmpl	$2, %eax	#, which_alternative.3889
	je	.L4258	#,
	.loc 1 19838 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3890
	cmpl	$3, %eax	#, which_alternative.3890
	jne	.L4259	#,
.L4258:
	.loc 1 19840 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4259:
	.loc 1 19844 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4252:
	.loc 1 19849 0
	movq	-24(%rbp), %rax	# insn, tmp238
	movq	%rax, %rdi	# tmp238,
	call	extract_constrain_insn_cached	#
	.loc 1 19850 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3891
	cmpl	$2, %eax	#, which_alternative.3891
	jne	.L4260	#,
	.loc 1 19852 0
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4260:
	.loc 1 19856 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4251:
	.loc 1 19861 0
	movq	-24(%rbp), %rax	# insn, tmp239
	movq	%rax, %rdi	# tmp239,
	call	extract_constrain_insn_cached	#
	.loc 1 19862 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3892
	cmpl	$1, %eax	#, which_alternative.3892
	jne	.L4261	#,
	.loc 1 19864 0
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4261:
	.loc 1 19868 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4248:
	.loc 1 19874 0
	movq	-24(%rbp), %rax	# insn, tmp240
	movq	%rax, %rdi	# tmp240,
	call	extract_constrain_insn_cached	#
	.loc 1 19875 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3893
	testl	%eax, %eax	# which_alternative.3893
	jne	.L4262	#,
	.loc 1 19877 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4262:
	.loc 1 19881 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4247:
	.loc 1 19885 0
	movq	-24(%rbp), %rax	# insn, tmp241
	movq	%rax, %rdi	# tmp241,
	call	extract_constrain_insn_cached	#
	.loc 1 19886 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3894
	testl	%eax, %eax	# which_alternative.3894
	je	.L4263	#,
	.loc 1 19886 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3895
	cmpl	$1, %eax	#, which_alternative.3895
	je	.L4263	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3896
	cmpl	$2, %eax	#, which_alternative.3896
	je	.L4263	#,
	.loc 1 19888 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4263:
	.loc 1 19892 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4246:
	.loc 1 19899 0
	movq	-24(%rbp), %rax	# insn, tmp242
	movq	%rax, %rdi	# tmp242,
	call	extract_constrain_insn_cached	#
	.loc 1 19900 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3897
	testl	%eax, %eax	# which_alternative.3897
	je	.L4264	#,
	.loc 1 19900 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3898
	cmpl	$1, %eax	#, which_alternative.3898
	jne	.L4265	#,
.L4264:
	.loc 1 19902 0 is_stmt 1
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4265:
	.loc 1 19906 0
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4245:
	.loc 1 19910 0
	movq	-24(%rbp), %rax	# insn, tmp243
	movq	%rax, %rdi	# tmp243,
	call	extract_constrain_insn_cached	#
	.loc 1 19911 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3899
	testl	%eax, %eax	# which_alternative.3899
	je	.L4266	#,
	.loc 1 19911 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3900
	cmpl	$1, %eax	#, which_alternative.3900
	je	.L4266	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3901
	cmpl	$2, %eax	#, which_alternative.3901
	je	.L4266	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3902
	cmpl	$3, %eax	#, which_alternative.3902
	je	.L4266	#,
	.loc 1 19913 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4266:
	.loc 1 19917 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4244:
	.loc 1 19927 0
	movq	-24(%rbp), %rax	# insn, tmp244
	movq	%rax, %rdi	# tmp244,
	call	extract_constrain_insn_cached	#
	.loc 1 19928 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3903
	testl	%eax, %eax	# which_alternative.3903
	je	.L4267	#,
	.loc 1 19928 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3904
	cmpl	$1, %eax	#, which_alternative.3904
	je	.L4267	#,
	.loc 1 19930 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4267:
	.loc 1 19934 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4242:
	.loc 1 19941 0
	movq	-24(%rbp), %rax	# insn, tmp245
	movq	%rax, %rdi	# tmp245,
	call	extract_constrain_insn_cached	#
	.loc 1 19942 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3905
	testl	%eax, %eax	# which_alternative.3905
	jne	.L4268	#,
	.loc 1 19944 0
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4268:
	.loc 1 19948 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4241:
	.loc 1 19953 0
	movq	-24(%rbp), %rax	# insn, tmp246
	movq	%rax, %rdi	# tmp246,
	call	extract_constrain_insn_cached	#
	.loc 1 19954 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3906
	testl	%eax, %eax	# which_alternative.3906
	je	.L4269	#,
	.loc 1 19954 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3907
	cmpl	$1, %eax	#, which_alternative.3907
	je	.L4269	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3908
	cmpl	$2, %eax	#, which_alternative.3908
	je	.L4269	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3909
	cmpl	$5, %eax	#, which_alternative.3909
	je	.L4270	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3910
	cmpl	$6, %eax	#, which_alternative.3910
	je	.L4270	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3911
	cmpl	$7, %eax	#, which_alternative.3911
	je	.L4270	#,
.L4269:
	.loc 1 19954 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3912
	cmpl	$8, %eax	#, which_alternative.3912
	jne	.L4271	#,
.L4270:
	.loc 1 19956 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4271:
	.loc 1 19960 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4240:
	.loc 1 19964 0
	movq	-24(%rbp), %rax	# insn, tmp247
	movq	%rax, %rdi	# tmp247,
	call	extract_constrain_insn_cached	#
	.loc 1 19965 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3913
	testl	%eax, %eax	# which_alternative.3913
	je	.L4272	#,
	.loc 1 19965 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3914
	cmpl	$1, %eax	#, which_alternative.3914
	je	.L4272	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3915
	cmpl	$2, %eax	#, which_alternative.3915
	je	.L4272	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3916
	cmpl	$5, %eax	#, which_alternative.3916
	je	.L4273	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3917
	cmpl	$6, %eax	#, which_alternative.3917
	je	.L4273	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3918
	cmpl	$7, %eax	#, which_alternative.3918
	je	.L4273	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3919
	cmpl	$8, %eax	#, which_alternative.3919
	je	.L4273	#,
.L4272:
	.loc 1 19965 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3920
	testl	%eax, %eax	# which_alternative.3920
	je	.L4274	#,
	.loc 1 19965 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3921
	cmpl	$1, %eax	#, which_alternative.3921
	je	.L4274	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3922
	cmpl	$2, %eax	#, which_alternative.3922
	je	.L4274	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3923
	cmpl	$9, %eax	#, which_alternative.3923
	je	.L4273	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3924
	cmpl	$10, %eax	#, which_alternative.3924
	je	.L4273	#,
.L4274:
	.loc 1 19965 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3925
	cmpl	$11, %eax	#, which_alternative.3925
	jne	.L4275	#,
.L4273:
	.loc 1 19967 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4275:
	.loc 1 19971 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4239:
	.loc 1 19975 0
	movq	-24(%rbp), %rax	# insn, tmp248
	movq	%rax, %rdi	# tmp248,
	call	extract_constrain_insn_cached	#
	.loc 1 19976 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3926
	cmpl	$5, %eax	#, which_alternative.3926
	je	.L4276	#,
	.loc 1 19976 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3927
	cmpl	$6, %eax	#, which_alternative.3927
	je	.L4276	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3928
	cmpl	$7, %eax	#, which_alternative.3928
	je	.L4277	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3929
	cmpl	$8, %eax	#, which_alternative.3929
	je	.L4277	#,
.L4276:
	.loc 1 19976 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3930
	cmpl	$5, %eax	#, which_alternative.3930
	je	.L4277	#,
	.loc 1 19976 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3931
	cmpl	$6, %eax	#, which_alternative.3931
	jne	.L4278	#,
.L4277:
	.loc 1 19978 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4278:
	.loc 1 19982 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4238:
	.loc 1 19986 0
	movq	-24(%rbp), %rax	# insn, tmp249
	movq	%rax, %rdi	# tmp249,
	call	extract_constrain_insn_cached	#
	.loc 1 19987 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3932
	testl	%eax, %eax	# which_alternative.3932
	je	.L4279	#,
	.loc 1 19987 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3933
	cmpl	$1, %eax	#, which_alternative.3933
	je	.L4279	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3934
	cmpl	$4, %eax	#, which_alternative.3934
	je	.L4280	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3935
	cmpl	$5, %eax	#, which_alternative.3935
	je	.L4280	#,
.L4279:
	.loc 1 19987 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3936
	cmpl	$6, %eax	#, which_alternative.3936
	je	.L4280	#,
	.loc 1 19987 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3937
	testl	%eax, %eax	# which_alternative.3937
	je	.L4281	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3938
	cmpl	$1, %eax	#, which_alternative.3938
	je	.L4281	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3939
	cmpl	$2, %eax	#, which_alternative.3939
	je	.L4280	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3940
	cmpl	$3, %eax	#, which_alternative.3940
	jne	.L4281	#,
.L4280:
	.loc 1 19989 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4281:
	.loc 1 19993 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4237:
	.loc 1 19997 0
	movq	-24(%rbp), %rax	# insn, tmp250
	movq	%rax, %rdi	# tmp250,
	call	extract_constrain_insn_cached	#
	.loc 1 19998 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57358
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57358,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57357
	je	.L4282	#,
	.loc 1 19998 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3941
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3942
	movl	%eax, %ecx	# ix86_cpu.3943, tmp276
	sarl	%cl, %edx	# tmp276, D.57357
	movl	%edx, %eax	# D.57357, D.57357
	andl	$1, %eax	#, D.57357
	testl	%eax, %eax	# D.57357
	je	.L4283	#,
.L4282:
	.loc 1 20000 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4283:
	.loc 1 20004 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4236:
	.loc 1 20010 0
	movq	-24(%rbp), %rax	# insn, tmp251
	movq	%rax, %rdi	# tmp251,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57359
	jne	.L4284	#,
	.loc 1 20012 0
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4284:
	.loc 1 20016 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4235:
	.loc 1 20020 0
	movq	-24(%rbp), %rax	# insn, tmp252
	movq	%rax, %rdi	# tmp252,
	call	extract_constrain_insn_cached	#
	.loc 1 20021 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3944
	cmpl	$3, %eax	#, which_alternative.3944
	jne	.L4285	#,
	.loc 1 20021 0 is_stmt 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3945
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3946
	movl	%eax, %ecx	# ix86_cpu.3947, tmp278
	sarl	%cl, %edx	# tmp278, D.57357
	movl	%edx, %eax	# D.57357, D.57357
	andl	$1, %eax	#, D.57357
	testl	%eax, %eax	# D.57357
	je	.L4286	#,
	.loc 1 20021 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.3948
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3949
	movl	%eax, %ecx	# ix86_cpu.3950, tmp280
	sarl	%cl, %edx	# tmp280, D.57357
	movl	%edx, %eax	# D.57357, D.57357
	andl	$1, %eax	#, D.57357
	testl	%eax, %eax	# D.57357
	je	.L4286	#,
.L4285:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3951
	cmpl	$3, %eax	#, which_alternative.3951
	je	.L4287	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3952
	cmpl	$5, %eax	#, which_alternative.3952
	je	.L4287	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3953
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3954
	movl	%eax, %ecx	# ix86_cpu.3955, tmp282
	sarl	%cl, %edx	# tmp282, D.57357
	movl	%edx, %eax	# D.57357, D.57357
	andl	$1, %eax	#, D.57357
	testl	%eax, %eax	# D.57357
	je	.L4286	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3956
	cmpl	$2, %eax	#, which_alternative.3956
	jne	.L4286	#,
.L4287:
	.loc 1 20023 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4286:
	.loc 1 20027 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4234:
	.loc 1 20031 0
	movq	-24(%rbp), %rax	# insn, tmp253
	movq	%rax, %rdi	# tmp253,
	call	extract_constrain_insn_cached	#
	.loc 1 20032 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3957
	testl	%eax, %eax	# which_alternative.3957
	je	.L4288	#,
	.loc 1 20032 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3958
	cmpl	$1, %eax	#, which_alternative.3958
	jne	.L4289	#,
.L4288:
	.loc 1 20032 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.3959
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3960
	movl	%eax, %ecx	# ix86_cpu.3961, tmp284
	sarl	%cl, %edx	# tmp284, D.57357
	movl	%edx, %eax	# D.57357, D.57357
	andl	$1, %eax	#, D.57357
	testl	%eax, %eax	# D.57357
	je	.L4290	#,
	.loc 1 20032 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.3962
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3963
	movl	%eax, %ecx	# ix86_cpu.3964, tmp286
	sarl	%cl, %edx	# tmp286, D.57357
	movl	%edx, %eax	# D.57357, D.57357
	andl	$1, %eax	#, D.57357
	testl	%eax, %eax	# D.57357
	je	.L4290	#,
.L4289:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3965
	cmpl	$2, %eax	#, which_alternative.3965
	je	.L4291	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3966
	cmpl	$3, %eax	#, which_alternative.3966
	je	.L4291	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3967
	cmpl	$4, %eax	#, which_alternative.3967
	jne	.L4292	#,
.L4291:
	.loc 1 20032 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57358
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57358,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57357
	jne	.L4290	#,
.L4292:
	.loc 1 20032 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.3968
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3969
	movl	%eax, %ecx	# ix86_cpu.3970, tmp288
	sarl	%cl, %edx	# tmp288, D.57357
	movl	%edx, %eax	# D.57357, D.57357
	andl	$1, %eax	#, D.57357
	testl	%eax, %eax	# D.57357
	je	.L4290	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3971
	testl	%eax, %eax	# which_alternative.3971
	je	.L4293	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3972
	cmpl	$1, %eax	#, which_alternative.3972
	je	.L4293	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3973
	cmpl	$3, %eax	#, which_alternative.3973
	je	.L4293	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3974
	cmpl	$4, %eax	#, which_alternative.3974
	jne	.L4290	#,
.L4293:
	.loc 1 20034 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4290:
	.loc 1 20038 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4233:
	.loc 1 20042 0
	movq	-24(%rbp), %rax	# insn, tmp254
	movq	%rax, %rdi	# tmp254,
	call	extract_constrain_insn_cached	#
	.loc 1 20043 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3975
	cmpl	$4, %eax	#, which_alternative.3975
	je	.L4294	#,
	.loc 1 20043 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3976
	cmpl	$5, %eax	#, which_alternative.3976
	je	.L4294	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3977
	cmpl	$6, %eax	#, which_alternative.3977
	je	.L4294	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3978
	cmpl	$7, %eax	#, which_alternative.3978
	je	.L4295	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3979
	cmpl	$8, %eax	#, which_alternative.3979
	je	.L4295	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3980
	cmpl	$9, %eax	#, which_alternative.3980
	je	.L4295	#,
.L4294:
	.loc 1 20043 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3981
	cmpl	$4, %eax	#, which_alternative.3981
	je	.L4295	#,
	.loc 1 20043 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3982
	cmpl	$5, %eax	#, which_alternative.3982
	je	.L4295	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3983
	cmpl	$6, %eax	#, which_alternative.3983
	jne	.L4296	#,
.L4295:
	.loc 1 20045 0 is_stmt 1
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4296:
	.loc 1 20049 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4231:
	.loc 1 20056 0
	movq	-24(%rbp), %rax	# insn, tmp255
	movq	%rax, %rdi	# tmp255,
	call	extract_constrain_insn_cached	#
	.loc 1 20057 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3984
	testl	%eax, %eax	# which_alternative.3984
	je	.L4297	#,
	.loc 1 20059 0
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4297:
	.loc 1 20063 0
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4243:
	.loc 1 20069 0
	movq	-24(%rbp), %rax	# insn, tmp256
	movq	%rax, %rdi	# tmp256,
	call	extract_constrain_insn_cached	#
	.loc 1 20070 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.3985
	cmpl	$4, %eax	#, ix86_cpu.3985
	je	.L4298	#,
	.loc 1 20070 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.3986
	testl	%eax, %eax	# which_alternative.3986
	jne	.L4298	#,
	.loc 1 20072 0 is_stmt 1
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4298:
	.loc 1 20076 0
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4249:
	.loc 1 20080 0
	movq	-24(%rbp), %rax	# insn, tmp257
	movq	%rax, %rdi	# tmp257,
	call	extract_insn_cached	#
	.loc 1 20081 0
	movq	insn_addresses_(%rip), %rax	# insn_addresses_, insn_addresses_.3988
	testq	%rax, %rax	# insn_addresses_.3988
	je	.L4299	#,
	.loc 1 20081 0 is_stmt 0 discriminator 1
	movq	insn_addresses_(%rip), %rdx	# insn_addresses_, insn_addresses_.3989
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57358
	movzwl	(%rax), %eax	# _182->code, D.57360
	cmpw	$67, %ax	#, D.57360
	jne	.L4300	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57358
	movq	8(%rax), %rax	# _184->fld[0].rtx, iftmp.3990
	jmp	.L4301	#
.L4300:
	.loc 1 20081 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, iftmp.3990
.L4301:
	.loc 1 20081 0 discriminator 1
	movl	8(%rax), %eax	# iftmp.3990_4->fld[0].rtint, D.57357
	cltq
	addq	$8, %rax	#, tmp259
	movl	(%rdx,%rax,4), %ebx	# insn_addresses_.3989_181->data.i, iftmp.3987
	jmp	.L4302	#
.L4299:
	.loc 1 20081 0 discriminator 2
	movl	$0, %ebx	#, iftmp.3987
.L4302:
	.loc 1 20081 0 discriminator 3
	movq	-24(%rbp), %rax	# insn, tmp260
	movq	%rax, %rdi	# tmp260,
	call	insn_current_reference_address	#
	subl	%eax, %ebx	# D.57357, D.57357
	movl	%ebx, %eax	# D.57357, D.57357
	cmpl	$-128, %eax	#, D.57357
	jl	.L4303	#,
	.loc 1 20081 0 discriminator 1
	movq	insn_addresses_(%rip), %rax	# insn_addresses_, insn_addresses_.3992
	testq	%rax, %rax	# insn_addresses_.3992
	je	.L4304	#,
	movq	insn_addresses_(%rip), %rdx	# insn_addresses_, insn_addresses_.3993
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57358
	movzwl	(%rax), %eax	# _194->code, D.57360
	cmpw	$67, %ax	#, D.57360
	jne	.L4305	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57358
	movq	8(%rax), %rax	# _196->fld[0].rtx, iftmp.3994
	jmp	.L4306	#
.L4305:
	.loc 1 20081 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, iftmp.3994
.L4306:
	movl	8(%rax), %eax	# iftmp.3994_6->fld[0].rtint, D.57357
	cltq
	addq	$8, %rax	#, tmp262
	movl	(%rdx,%rax,4), %ebx	# insn_addresses_.3993_193->data.i, iftmp.3991
	jmp	.L4307	#
.L4304:
	movl	$0, %ebx	#, iftmp.3991
.L4307:
	.loc 1 20081 0 discriminator 3
	movq	-24(%rbp), %rax	# insn, tmp263
	movq	%rax, %rdi	# tmp263,
	call	insn_current_reference_address	#
	subl	%eax, %ebx	# D.57357, D.57357
	movl	%ebx, %eax	# D.57357, D.57357
	cmpl	$123, %eax	#, D.57357
	jg	.L4303	#,
	.loc 1 20083 0 is_stmt 1
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4303:
	.loc 1 20087 0
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4250:
	.loc 1 20091 0
	movq	-24(%rbp), %rax	# insn, tmp264
	movq	%rax, %rdi	# tmp264,
	call	extract_insn_cached	#
	.loc 1 20092 0
	movq	insn_addresses_(%rip), %rax	# insn_addresses_, insn_addresses_.3996
	testq	%rax, %rax	# insn_addresses_.3996
	je	.L4308	#,
	.loc 1 20092 0 is_stmt 0 discriminator 1
	movq	insn_addresses_(%rip), %rdx	# insn_addresses_, insn_addresses_.3997
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57358
	movzwl	(%rax), %eax	# _208->code, D.57360
	cmpw	$67, %ax	#, D.57360
	jne	.L4309	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57358
	movq	8(%rax), %rax	# _210->fld[0].rtx, iftmp.3998
	jmp	.L4310	#
.L4309:
	.loc 1 20092 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, iftmp.3998
.L4310:
	.loc 1 20092 0 discriminator 3
	movl	8(%rax), %eax	# iftmp.3998_8->fld[0].rtint, D.57357
	cltq
	addq	$8, %rax	#, tmp266
	movl	(%rdx,%rax,4), %ebx	# insn_addresses_.3997_207->data.i, iftmp.3995
	jmp	.L4311	#
.L4308:
	.loc 1 20092 0 discriminator 2
	movl	$0, %ebx	#, iftmp.3995
.L4311:
	.loc 1 20092 0 discriminator 3
	movq	-24(%rbp), %rax	# insn, tmp267
	movq	%rax, %rdi	# tmp267,
	call	insn_current_reference_address	#
	subl	%eax, %ebx	# D.57357, D.57357
	movl	%ebx, %eax	# D.57357, D.57357
	cmpl	$-128, %eax	#, D.57357
	jl	.L4312	#,
	.loc 1 20092 0 discriminator 1
	movq	insn_addresses_(%rip), %rax	# insn_addresses_, insn_addresses_.4000
	testq	%rax, %rax	# insn_addresses_.4000
	je	.L4313	#,
	movq	insn_addresses_(%rip), %rdx	# insn_addresses_, insn_addresses_.4001
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57358
	movzwl	(%rax), %eax	# _220->code, D.57360
	cmpw	$67, %ax	#, D.57360
	jne	.L4314	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57358
	movq	8(%rax), %rax	# _222->fld[0].rtx, iftmp.4002
	jmp	.L4315	#
.L4314:
	.loc 1 20092 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, iftmp.4002
.L4315:
	.loc 1 20092 0 discriminator 4
	movl	8(%rax), %eax	# iftmp.4002_10->fld[0].rtint, D.57357
	cltq
	addq	$8, %rax	#, tmp269
	movl	(%rdx,%rax,4), %ebx	# insn_addresses_.4001_219->data.i, iftmp.3999
	jmp	.L4316	#
.L4313:
	.loc 1 20092 0 discriminator 2
	movl	$0, %ebx	#, iftmp.3999
.L4316:
	.loc 1 20092 0 discriminator 3
	movq	-24(%rbp), %rax	# insn, tmp270
	movq	%rax, %rdi	# tmp270,
	call	insn_current_reference_address	#
	subl	%eax, %ebx	# D.57357, D.57357
	movl	%ebx, %eax	# D.57357, D.57357
	cmpl	$123, %eax	#, D.57357
	jg	.L4312	#,
	.loc 1 20094 0 is_stmt 1
	movl	$0, %eax	#, D.57357
	jmp	.L4257	#
.L4312:
	.loc 1 20098 0
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4232:
	.loc 1 20318 0
	movl	$1, %eax	#, D.57357
	jmp	.L4257	#
.L4229:
	.loc 1 20321 0
	movq	-24(%rbp), %rax	# insn, tmp271
	movq	32(%rax), %rax	# insn_11(D)->fld[3].rtx, D.57358
	movzwl	(%rax), %eax	# _233->code, D.57360
	cmpw	$40, %ax	#, D.57360
	je	.L4228	#,
	.loc 1 20322 0
	movq	-24(%rbp), %rax	# insn, tmp272
	movq	32(%rax), %rax	# insn_11(D)->fld[3].rtx, D.57358
	movq	%rax, %rdi	# D.57358,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57357
	jns	.L4228	#,
	.loc 1 20323 0
	movq	-24(%rbp), %rax	# insn, tmp273
	movl	$__FUNCTION__.19013, %ecx	#,
	movl	$20323, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp273,
	call	_fatal_insn_not_found	#
.L4228:
	.loc 1 20325 0
	movl	$0, %eax	#, D.57357
.L4257:
	.loc 1 20328 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE60:
	.size	get_attr_prefix_0f, .-get_attr_prefix_0f
	.globl	get_attr_prefix_rep
	.type	get_attr_prefix_rep, @function
get_attr_prefix_rep:
.LFB61:
	.loc 1 20334 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 20335 0
	movq	-8(%rbp), %rax	# insn, tmp67
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57361
	testl	%eax, %eax	# D.57361
	js	.L4318	#,
	.loc 1 20335 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.4003
	jmp	.L4319	#
.L4318:
	.loc 1 20335 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp69
	movq	%rax, %rdi	# tmp69,
	call	recog_memoized_1	#
.L4319:
	.loc 1 20335 0 discriminator 3
	cmpl	$594, %eax	#, iftmp.4003
	jg	.L4321	#,
	cmpl	$590, %eax	#, iftmp.4003
	jge	.L4322	#,
	cmpl	$-1, %eax	#, iftmp.4003
	je	.L4323	#,
	.loc 1 20335 0
	jmp	.L4320	#
.L4321:
	.loc 1 20335 0 discriminator 3
	subl	$602, %eax	#, tmp70
	cmpl	$10, %eax	#, tmp70
	ja	.L4320	#,
.L4322:
	.loc 1 20353 0 is_stmt 1
	movl	$1, %eax	#, D.57361
	jmp	.L4324	#
.L4323:
	.loc 1 20356 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57362
	movzwl	(%rax), %eax	# _8->code, D.57363
	cmpw	$40, %ax	#, D.57363
	je	.L4320	#,
	.loc 1 20357 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57362
	movq	%rax, %rdi	# D.57362,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57361
	jns	.L4320	#,
	.loc 1 20358 0
	movq	-8(%rbp), %rax	# insn, tmp73
	movl	$__FUNCTION__.19037, %ecx	#,
	movl	$20358, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp73,
	call	_fatal_insn_not_found	#
.L4320:
	.loc 1 20360 0
	movl	$0, %eax	#, D.57361
.L4324:
	.loc 1 20363 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE61:
	.size	get_attr_prefix_rep, .-get_attr_prefix_rep
	.globl	get_attr_prefix_data16
	.type	get_attr_prefix_data16, @function
get_attr_prefix_data16:
.LFB62:
	.loc 1 20369 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 20370 0
	movq	-8(%rbp), %rax	# insn, tmp71
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, D.57365
	testl	%eax, %eax	# D.57365
	js	.L4326	#,
	.loc 1 20370 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp72
	movl	40(%rax), %eax	# insn_3(D)->fld[4].rtint, iftmp.4004
	jmp	.L4327	#
.L4326:
	.loc 1 20370 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp73
	movq	%rax, %rdi	# tmp73,
	call	recog_memoized_1	#
.L4327:
	.loc 1 20370 0 discriminator 3
	cmpl	$296, %eax	#, iftmp.4004
	je	.L4329	#,
	cmpl	$296, %eax	#, iftmp.4004
	jg	.L4330	#,
	cmpl	$125, %eax	#, iftmp.4004
	je	.L4331	#,
	cmpl	$125, %eax	#, iftmp.4004
	jg	.L4332	#,
	cmpl	$54, %eax	#, iftmp.4004
	jg	.L4333	#,
	cmpl	$52, %eax	#, iftmp.4004
	jge	.L4331	#,
	cmpl	$8, %eax	#, iftmp.4004
	jg	.L4334	#,
	cmpl	$6, %eax	#, iftmp.4004
	jge	.L4331	#,
	cmpl	$-1, %eax	#, iftmp.4004
	je	.L4335	#,
	.loc 1 20370 0
	jmp	.L4328	#
.L4334:
	.loc 1 20370 0 discriminator 3
	cmpl	$49, %eax	#, iftmp.4004
	je	.L4331	#,
	cmpl	$51, %eax	#, iftmp.4004
	je	.L4336	#,
	.loc 1 20370 0
	jmp	.L4328	#
.L4333:
	.loc 1 20370 0 discriminator 3
	cmpl	$56, %eax	#, iftmp.4004
	jl	.L4328	#,
	cmpl	$58, %eax	#, iftmp.4004
	jle	.L4331	#,
	subl	$109, %eax	#, tmp74
	cmpl	$2, %eax	#, tmp74
	ja	.L4328	#,
	.loc 1 20370 0
	jmp	.L4331	#
.L4332:
	.loc 1 20370 0 discriminator 3
	cmpl	$220, %eax	#, iftmp.4004
	je	.L4331	#,
	cmpl	$220, %eax	#, iftmp.4004
	jg	.L4337	#,
	cmpl	$215, %eax	#, iftmp.4004
	je	.L4329	#,
	cmpl	$215, %eax	#, iftmp.4004
	jg	.L4338	#,
	subl	$165, %eax	#, tmp75
	cmpl	$1, %eax	#, tmp75
	ja	.L4328	#,
	.loc 1 20370 0
	jmp	.L4331	#
.L4338:
	.loc 1 20370 0 discriminator 3
	cmpl	$218, %eax	#, iftmp.4004
	jg	.L4328	#,
	.loc 1 20370 0
	jmp	.L4331	#
.L4337:
	.loc 1 20370 0 discriminator 3
	cmpl	$252, %eax	#, iftmp.4004
	je	.L4331	#,
	cmpl	$252, %eax	#, iftmp.4004
	jg	.L4339	#,
	subl	$243, %eax	#, tmp76
	cmpl	$2, %eax	#, tmp76
	ja	.L4328	#,
	.loc 1 20370 0
	jmp	.L4331	#
.L4339:
	.loc 1 20370 0 discriminator 3
	cmpl	$279, %eax	#, iftmp.4004
	je	.L4331	#,
	cmpl	$282, %eax	#, iftmp.4004
	je	.L4331	#,
	.loc 1 20370 0
	jmp	.L4328	#
.L4330:
	.loc 1 20370 0 discriminator 3
	cmpl	$414, %eax	#, iftmp.4004
	jg	.L4340	#,
	cmpl	$413, %eax	#, iftmp.4004
	jge	.L4331	#,
	cmpl	$337, %eax	#, iftmp.4004
	jg	.L4341	#,
	cmpl	$335, %eax	#, iftmp.4004
	jge	.L4331	#,
	cmpl	$297, %eax	#, iftmp.4004
	je	.L4331	#,
	subl	$317, %eax	#, tmp77
	cmpl	$2, %eax	#, tmp77
	ja	.L4328	#,
	.loc 1 20370 0
	jmp	.L4331	#
.L4341:
	.loc 1 20370 0 discriminator 3
	cmpl	$400, %eax	#, iftmp.4004
	jg	.L4342	#,
	cmpl	$399, %eax	#, iftmp.4004
	jge	.L4331	#,
	subl	$351, %eax	#, tmp78
	cmpl	$1, %eax	#, tmp78
	ja	.L4328	#,
	.loc 1 20370 0
	jmp	.L4331	#
.L4342:
	.loc 1 20370 0 discriminator 3
	cmpl	$412, %eax	#, iftmp.4004
	je	.L4343	#,
	.loc 1 20370 0
	jmp	.L4328	#
.L4340:
	.loc 1 20370 0 discriminator 3
	cmpl	$483, %eax	#, iftmp.4004
	je	.L4331	#,
	cmpl	$483, %eax	#, iftmp.4004
	jg	.L4344	#,
	cmpl	$459, %eax	#, iftmp.4004
	je	.L4331	#,
	cmpl	$459, %eax	#, iftmp.4004
	jg	.L4345	#,
	cmpl	$437, %eax	#, iftmp.4004
	je	.L4331	#,
	cmpl	$439, %eax	#, iftmp.4004
	je	.L4331	#,
	.loc 1 20370 0
	jmp	.L4328	#
.L4345:
	.loc 1 20370 0 discriminator 3
	cmpl	$461, %eax	#, iftmp.4004
	je	.L4331	#,
	cmpl	$473, %eax	#, iftmp.4004
	je	.L4331	#,
	.loc 1 20370 0
	jmp	.L4328	#
.L4344:
	.loc 1 20370 0 discriminator 3
	cmpl	$599, %eax	#, iftmp.4004
	jg	.L4346	#,
	cmpl	$598, %eax	#, iftmp.4004
	jge	.L4331	#,
	subl	$586, %eax	#, tmp79
	cmpl	$1, %eax	#, tmp79
	ja	.L4328	#,
	.loc 1 20370 0
	jmp	.L4331	#
.L4346:
	.loc 1 20370 0 discriminator 3
	cmpl	$617, %eax	#, iftmp.4004
	je	.L4331	#,
	.loc 1 20370 0
	jmp	.L4328	#
.L4343:
	.loc 1 20373 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp80
	movq	%rax, %rdi	# tmp80,
	call	extract_constrain_insn_cached	#
	.loc 1 20374 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4005
	testl	%eax, %eax	# which_alternative.4005
	jne	.L4347	#,
	.loc 1 20376 0
	movl	$1, %eax	#, D.57365
	jmp	.L4348	#
.L4347:
	.loc 1 20380 0
	movl	$0, %eax	#, D.57365
	jmp	.L4348	#
.L4329:
	.loc 1 20385 0
	movq	-8(%rbp), %rax	# insn, tmp81
	movq	%rax, %rdi	# tmp81,
	call	extract_constrain_insn_cached	#
	.loc 1 20386 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4006
	testl	%eax, %eax	# which_alternative.4006
	je	.L4349	#,
	.loc 1 20386 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4007
	cmpl	$1, %eax	#, which_alternative.4007
	jne	.L4350	#,
.L4349:
	.loc 1 20388 0 is_stmt 1
	movl	$1, %eax	#, D.57365
	jmp	.L4348	#
.L4350:
	.loc 1 20392 0
	movl	$0, %eax	#, D.57365
	jmp	.L4348	#
.L4331:
	.loc 1 20445 0
	movl	$1, %eax	#, D.57365
	jmp	.L4348	#
.L4336:
	.loc 1 20448 0
	movq	-8(%rbp), %rax	# insn, tmp82
	movq	%rax, %rdi	# tmp82,
	call	get_attr_mode	#
	cmpl	$3, %eax	#, D.57366
	jne	.L4351	#,
	.loc 1 20450 0
	movl	$1, %eax	#, D.57365
	jmp	.L4348	#
.L4351:
	.loc 1 20454 0
	movl	$0, %eax	#, D.57365
	jmp	.L4348	#
.L4335:
	.loc 1 20458 0
	movq	-8(%rbp), %rax	# insn, tmp83
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57367
	movzwl	(%rax), %eax	# _18->code, D.57368
	cmpw	$40, %ax	#, D.57368
	je	.L4328	#,
	.loc 1 20459 0
	movq	-8(%rbp), %rax	# insn, tmp84
	movq	32(%rax), %rax	# insn_3(D)->fld[3].rtx, D.57367
	movq	%rax, %rdi	# D.57367,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57365
	jns	.L4328	#,
	.loc 1 20460 0
	movq	-8(%rbp), %rax	# insn, tmp85
	movl	$__FUNCTION__.19099, %ecx	#,
	movl	$20460, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp85,
	call	_fatal_insn_not_found	#
.L4328:
	.loc 1 20462 0
	movl	$0, %eax	#, D.57365
.L4348:
	.loc 1 20465 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE62:
	.size	get_attr_prefix_data16, .-get_attr_prefix_data16
	.globl	get_attr_type
	.type	get_attr_type, @function
get_attr_type:
.LFB63:
	.loc 1 20471 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# insn, insn
	.loc 1 20472 0
	movq	-24(%rbp), %rax	# insn, tmp429
	movl	40(%rax), %eax	# insn_7(D)->fld[4].rtint, D.57383
	testl	%eax, %eax	# D.57383
	js	.L4353	#,
	.loc 1 20472 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# insn, tmp430
	movl	40(%rax), %eax	# insn_7(D)->fld[4].rtint, iftmp.4008
	jmp	.L4354	#
.L4353:
	.loc 1 20472 0 discriminator 2
	movq	-24(%rbp), %rax	# insn, tmp431
	movq	%rax, %rdi	# tmp431,
	call	recog_memoized_1	#
.L4354:
	.loc 1 20472 0 discriminator 3
	addl	$1, %eax	#, tmp432
	cmpl	$834, %eax	#, tmp432
	ja	.L4355	#,
	movl	%eax, %eax	# tmp432, tmp433
	movq	.L4357(,%rax,8), %rax	#, tmp434
	jmp	*%rax	# tmp434
	.section	.rodata
	.align 8
	.align 4
.L4357:
	.quad	.L4356
	.quad	.L4358
	.quad	.L4359
	.quad	.L4359
	.quad	.L4358
	.quad	.L4359
	.quad	.L4359
	.quad	.L4358
	.quad	.L4359
	.quad	.L4359
	.quad	.L4358
	.quad	.L4359
	.quad	.L4359
	.quad	.L4359
	.quad	.L4359
	.quad	.L4360
	.quad	.L4359
	.quad	.L4359
	.quad	.L4359
	.quad	.L4361
	.quad	.L4362
	.quad	.L4362
	.quad	.L4362
	.quad	.L4361
	.quad	.L4362
	.quad	.L4362
	.quad	.L4361
	.quad	.L4361
	.quad	.L4362
	.quad	.L4361
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4362
	.quad	.L4364
	.quad	.L4355
	.quad	.L4362
	.quad	.L4364
	.quad	.L4355
	.quad	.L4365
	.quad	.L4365
	.quad	.L4365
	.quad	.L4366
	.quad	.L4366
	.quad	.L4367
	.quad	.L4367
	.quad	.L4368
	.quad	.L4369
	.quad	.L4369
	.quad	.L4369
	.quad	.L4365
	.quad	.L4365
	.quad	.L4370
	.quad	.L4369
	.quad	.L4369
	.quad	.L4369
	.quad	.L4369
	.quad	.L4369
	.quad	.L4367
	.quad	.L4365
	.quad	.L4365
	.quad	.L4371
	.quad	.L4369
	.quad	.L4369
	.quad	.L4367
	.quad	.L4372
	.quad	.L4372
	.quad	.L4373
	.quad	.L4374
	.quad	.L4369
	.quad	.L4369
	.quad	.L4372
	.quad	.L4375
	.quad	.L4376
	.quad	.L4369
	.quad	.L4369
	.quad	.L4369
	.quad	.L4363
	.quad	.L4377
	.quad	.L4365
	.quad	.L4366
	.quad	.L4366
	.quad	.L4367
	.quad	.L4367
	.quad	.L4378
	.quad	.L4379
	.quad	.L4369
	.quad	.L4369
	.quad	.L4369
	.quad	.L4380
	.quad	.L4380
	.quad	.L4381
	.quad	.L4382
	.quad	.L4361
	.quad	.L4361
	.quad	.L4383
	.quad	.L4383
	.quad	.L4382
	.quad	.L4361
	.quad	.L4361
	.quad	.L4361
	.quad	.L4361
	.quad	.L4384
	.quad	.L4384
	.quad	.L4384
	.quad	.L4384
	.quad	.L4382
	.quad	.L4382
	.quad	.L4367
	.quad	.L4372
	.quad	.L4367
	.quad	.L4385
	.quad	.L4372
	.quad	.L4367
	.quad	.L4385
	.quad	.L4372
	.quad	.L4363
	.quad	.L4386
	.quad	.L4372
	.quad	.L4372
	.quad	.L4363
	.quad	.L4372
	.quad	.L4372
	.quad	.L4372
	.quad	.L4372
	.quad	.L4372
	.quad	.L4372
	.quad	.L4372
	.quad	.L4372
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4387
	.quad	.L4355
	.quad	.L4388
	.quad	.L4388
	.quad	.L4388
	.quad	.L4388
	.quad	.L4389
	.quad	.L4390
	.quad	.L4391
	.quad	.L4388
	.quad	.L4355
	.quad	.L4389
	.quad	.L4388
	.quad	.L4389
	.quad	.L4388
	.quad	.L4389
	.quad	.L4388
	.quad	.L4389
	.quad	.L4388
	.quad	.L4392
	.quad	.L4392
	.quad	.L4392
	.quad	.L4355
	.quad	.L4355
	.quad	.L4392
	.quad	.L4392
	.quad	.L4392
	.quad	.L4355
	.quad	.L4355
	.quad	.L4392
	.quad	.L4392
	.quad	.L4392
	.quad	.L4363
	.quad	.L4363
	.quad	.L4393
	.quad	.L4394
	.quad	.L4355
	.quad	.L4393
	.quad	.L4394
	.quad	.L4355
	.quad	.L4393
	.quad	.L4394
	.quad	.L4355
	.quad	.L4393
	.quad	.L4394
	.quad	.L4355
	.quad	.L4393
	.quad	.L4393
	.quad	.L4393
	.quad	.L4393
	.quad	.L4393
	.quad	.L4393
	.quad	.L4363
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4396
	.quad	.L4396
	.quad	.L4396
	.quad	.L4396
	.quad	.L4396
	.quad	.L4396
	.quad	.L4396
	.quad	.L4396
	.quad	.L4396
	.quad	.L4396
	.quad	.L4397
	.quad	.L4398
	.quad	.L4398
	.quad	.L4398
	.quad	.L4398
	.quad	.L4399
	.quad	.L4400
	.quad	.L4401
	.quad	.L4401
	.quad	.L4401
	.quad	.L4401
	.quad	.L4401
	.quad	.L4401
	.quad	.L4402
	.quad	.L4403
	.quad	.L4403
	.quad	.L4403
	.quad	.L4403
	.quad	.L4403
	.quad	.L4404
	.quad	.L4405
	.quad	.L4405
	.quad	.L4405
	.quad	.L4403
	.quad	.L4405
	.quad	.L4405
	.quad	.L4405
	.quad	.L4395
	.quad	.L4363
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4406
	.quad	.L4407
	.quad	.L4407
	.quad	.L4361
	.quad	.L4361
	.quad	.L4407
	.quad	.L4361
	.quad	.L4361
	.quad	.L4407
	.quad	.L4361
	.quad	.L4361
	.quad	.L4407
	.quad	.L4361
	.quad	.L4407
	.quad	.L4407
	.quad	.L4360
	.quad	.L4360
	.quad	.L4360
	.quad	.L4360
	.quad	.L4360
	.quad	.L4360
	.quad	.L4360
	.quad	.L4360
	.quad	.L4363
	.quad	.L4363
	.quad	.L4408
	.quad	.L4395
	.quad	.L4409
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4409
	.quad	.L4395
	.quad	.L4395
	.quad	.L4367
	.quad	.L4395
	.quad	.L4367
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4367
	.quad	.L4395
	.quad	.L4367
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4395
	.quad	.L4363
	.quad	.L4410
	.quad	.L4410
	.quad	.L4410
	.quad	.L4410
	.quad	.L4410
	.quad	.L4410
	.quad	.L4410
	.quad	.L4410
	.quad	.L4410
	.quad	.L4410
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4411
	.quad	.L4410
	.quad	.L4367
	.quad	.L4410
	.quad	.L4410
	.quad	.L4367
	.quad	.L4367
	.quad	.L4410
	.quad	.L4367
	.quad	.L4410
	.quad	.L4367
	.quad	.L4412
	.quad	.L4413
	.quad	.L4361
	.quad	.L4361
	.quad	.L4414
	.quad	.L4415
	.quad	.L4416
	.quad	.L4417
	.quad	.L4418
	.quad	.L4419
	.quad	.L4420
	.quad	.L4421
	.quad	.L4422
	.quad	.L4423
	.quad	.L4424
	.quad	.L4425
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4361
	.quad	.L4361
	.quad	.L4414
	.quad	.L4425
	.quad	.L4425
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4361
	.quad	.L4361
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4414
	.quad	.L4426
	.quad	.L4426
	.quad	.L4355
	.quad	.L4355
	.quad	.L4427
	.quad	.L4427
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4427
	.quad	.L4427
	.quad	.L4427
	.quad	.L4427
	.quad	.L4427
	.quad	.L4428
	.quad	.L4429
	.quad	.L4429
	.quad	.L4429
	.quad	.L4429
	.quad	.L4429
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4427
	.quad	.L4363
	.quad	.L4395
	.quad	.L4361
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4430
	.quad	.L4431
	.quad	.L4355
	.quad	.L4430
	.quad	.L4431
	.quad	.L4355
	.quad	.L4432
	.quad	.L4433
	.quad	.L4434
	.quad	.L4435
	.quad	.L4355
	.quad	.L4434
	.quad	.L4434
	.quad	.L4436
	.quad	.L4437
	.quad	.L4355
	.quad	.L4436
	.quad	.L4436
	.quad	.L4436
	.quad	.L4436
	.quad	.L4438
	.quad	.L4439
	.quad	.L4438
	.quad	.L4439
	.quad	.L4438
	.quad	.L4439
	.quad	.L4438
	.quad	.L4439
	.quad	.L4438
	.quad	.L4439
	.quad	.L4438
	.quad	.L4439
	.quad	.L4438
	.quad	.L4439
	.quad	.L4440
	.quad	.L4355
	.quad	.L4441
	.quad	.L4440
	.quad	.L4355
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4441
	.quad	.L4442
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4443
	.quad	.L4395
	.quad	.L4444
	.quad	.L4395
	.quad	.L4444
	.quad	.L4444
	.quad	.L4445
	.quad	.L4446
	.quad	.L4445
	.quad	.L4447
	.quad	.L4447
	.quad	.L4363
	.quad	.L4363
	.quad	.L4355
	.quad	.L4363
	.quad	.L4363
	.quad	.L4355
	.quad	.L4363
	.quad	.L4363
	.quad	.L4355
	.quad	.L4363
	.quad	.L4363
	.quad	.L4355
	.quad	.L4448
	.quad	.L4449
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4363
	.quad	.L4361
	.quad	.L4361
	.quad	.L4450
	.quad	.L4450
	.quad	.L4450
	.quad	.L4450
	.quad	.L4450
	.quad	.L4450
	.quad	.L4363
	.quad	.L4363
	.quad	.L4355
	.quad	.L4355
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4355
	.quad	.L4452
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4355
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4355
	.quad	.L4363
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4451
	.quad	.L4355
	.quad	.L4451
	.text
.L4452:
	.loc 1 20475 0 is_stmt 1
	movq	-24(%rbp), %rax	# insn, tmp435
	movq	%rax, %rdi	# tmp435,
	call	extract_constrain_insn_cached	#
	.loc 1 20476 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4009
	testl	%eax, %eax	# which_alternative.4009
	je	.L4453	#,
	.loc 1 20476 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4010
	cmpl	$1, %eax	#, which_alternative.4010
	jne	.L4454	#,
.L4453:
	.loc 1 20478 0 is_stmt 1
	movl	$0, %eax	#, D.57382
	jmp	.L4455	#
.L4454:
	.loc 1 20480 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4011
	cmpl	$2, %eax	#, which_alternative.4011
	je	.L4456	#,
	.loc 1 20480 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4012
	cmpl	$3, %eax	#, which_alternative.4012
	jne	.L4457	#,
.L4456:
	.loc 1 20482 0 is_stmt 1
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4457:
	.loc 1 20486 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4446:
	.loc 1 20490 0
	movq	-24(%rbp), %rax	# insn, tmp436
	movq	%rax, %rdi	# tmp436,
	call	extract_constrain_insn_cached	#
	.loc 1 20491 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4013
	testl	%eax, %eax	# which_alternative.4013
	je	.L4458	#,
	.loc 1 20491 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4014
	cmpl	$1, %eax	#, which_alternative.4014
	jne	.L4459	#,
.L4458:
	.loc 1 20493 0 is_stmt 1
	movl	$28, %eax	#, D.57382
	jmp	.L4455	#
.L4459:
	.loc 1 20495 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4015
	cmpl	$2, %eax	#, which_alternative.4015
	jne	.L4460	#,
	.loc 1 20497 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4460:
	.loc 1 20501 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4445:
	.loc 1 20506 0
	movq	-24(%rbp), %rax	# insn, tmp437
	movq	%rax, %rdi	# tmp437,
	call	extract_constrain_insn_cached	#
	.loc 1 20507 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4016
	testl	%eax, %eax	# which_alternative.4016
	je	.L4461	#,
	.loc 1 20507 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4017
	cmpl	$1, %eax	#, which_alternative.4017
	jne	.L4462	#,
.L4461:
	.loc 1 20509 0 is_stmt 1
	movl	$28, %eax	#, D.57382
	jmp	.L4455	#
.L4462:
	.loc 1 20511 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4018
	cmpl	$2, %eax	#, which_alternative.4018
	jne	.L4463	#,
	.loc 1 20513 0
	movl	$20, %eax	#, D.57382
	jmp	.L4455	#
.L4463:
	.loc 1 20517 0
	movl	$20, %eax	#, D.57382
	jmp	.L4455	#
.L4409:
	.loc 1 20522 0
	movq	-24(%rbp), %rax	# insn, tmp438
	movq	%rax, %rdi	# tmp438,
	call	extract_constrain_insn_cached	#
	.loc 1 20523 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4019
	testl	%eax, %eax	# which_alternative.4019
	je	.L4464	#,
	.loc 1 20523 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4020
	cmpl	$1, %eax	#, which_alternative.4020
	jne	.L4465	#,
.L4464:
	.loc 1 20525 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4465:
	.loc 1 20529 0
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4408:
	.loc 1 20533 0
	movq	-24(%rbp), %rax	# insn, tmp439
	movq	%rax, %rdi	# tmp439,
	call	extract_constrain_insn_cached	#
	.loc 1 20534 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4021
	testl	%eax, %eax	# which_alternative.4021
	je	.L4466	#,
	.loc 1 20534 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4022
	cmpl	$1, %eax	#, which_alternative.4022
	je	.L4466	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4023
	cmpl	$2, %eax	#, which_alternative.4023
	jne	.L4467	#,
.L4466:
	.loc 1 20536 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4467:
	.loc 1 20540 0
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4400:
	.loc 1 20544 0
	movq	-24(%rbp), %rax	# insn, tmp440
	movq	%rax, %rdi	# tmp440,
	call	extract_constrain_insn_cached	#
	.loc 1 20545 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4024
	testl	%eax, %eax	# which_alternative.4024
	jne	.L4468	#,
	.loc 1 20545 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4469	#,
.L4468:
	.loc 1 20547 0 is_stmt 1
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4469:
	.loc 1 20549 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4470	#,
	.loc 1 20551 0
	movl	$10, %eax	#, D.57382
	jmp	.L4455	#
.L4470:
	.loc 1 20555 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4399:
	.loc 1 20559 0
	movq	-24(%rbp), %rax	# insn, tmp441
	movq	%rax, %rdi	# tmp441,
	call	extract_constrain_insn_cached	#
	.loc 1 20560 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4025
	cmpl	$2, %eax	#, which_alternative.4025
	je	.L4471	#,
	.loc 1 20560 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4472	#,
.L4471:
	.loc 1 20562 0 is_stmt 1
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4472:
	.loc 1 20564 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4473	#,
	.loc 1 20566 0
	movl	$10, %eax	#, D.57382
	jmp	.L4455	#
.L4473:
	.loc 1 20570 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4397:
	.loc 1 20574 0
	movq	-24(%rbp), %rax	# insn, tmp442
	movq	%rax, %rdi	# tmp442,
	call	extract_constrain_insn_cached	#
	.loc 1 20575 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4026
	cmpl	$2, %eax	#, which_alternative.4026
	je	.L4474	#,
	.loc 1 20575 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4475	#,
.L4474:
	.loc 1 20577 0 is_stmt 1
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4475:
	.loc 1 20579 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4476	#,
	.loc 1 20581 0
	movl	$10, %eax	#, D.57382
	jmp	.L4455	#
.L4476:
	.loc 1 20585 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4390:
	.loc 1 20589 0
	movq	-24(%rbp), %rax	# insn, tmp443
	movq	%rax, %rdi	# tmp443,
	call	extract_constrain_insn_cached	#
	.loc 1 20590 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4027
	testl	%eax, %eax	# which_alternative.4027
	jne	.L4477	#,
	.loc 1 20592 0
	movl	$21, %eax	#, D.57382
	jmp	.L4455	#
.L4477:
	.loc 1 20594 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4028
	cmpl	$1, %eax	#, which_alternative.4028
	je	.L4478	#,
	.loc 1 20594 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4029
	cmpl	$2, %eax	#, which_alternative.4029
	je	.L4478	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4030
	cmpl	$3, %eax	#, which_alternative.4030
	jne	.L4479	#,
.L4478:
	.loc 1 20596 0 is_stmt 1
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4479:
	.loc 1 20600 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4389:
	.loc 1 20608 0
	movq	-24(%rbp), %rax	# insn, tmp444
	movq	%rax, %rdi	# tmp444,
	call	extract_constrain_insn_cached	#
	.loc 1 20609 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4031
	testl	%eax, %eax	# which_alternative.4031
	jne	.L4480	#,
	.loc 1 20611 0
	movl	$21, %eax	#, D.57382
	jmp	.L4455	#
.L4480:
	.loc 1 20613 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4032
	cmpl	$1, %eax	#, which_alternative.4032
	je	.L4481	#,
	.loc 1 20613 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4033
	cmpl	$2, %eax	#, which_alternative.4033
	jne	.L4482	#,
.L4481:
	.loc 1 20615 0 is_stmt 1
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4482:
	.loc 1 20619 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4387:
	.loc 1 20623 0
	movq	-24(%rbp), %rax	# insn, tmp445
	movq	%rax, %rdi	# tmp445,
	call	extract_constrain_insn_cached	#
	.loc 1 20624 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4034
	testl	%eax, %eax	# which_alternative.4034
	je	.L4483	#,
	.loc 1 20624 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4035
	cmpl	$1, %eax	#, which_alternative.4035
	jne	.L4484	#,
.L4483:
	.loc 1 20626 0 is_stmt 1
	movl	$21, %eax	#, D.57382
	jmp	.L4455	#
.L4484:
	.loc 1 20630 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4384:
	.loc 1 20637 0
	movq	-24(%rbp), %rax	# insn, tmp446
	movq	%rax, %rdi	# tmp446,
	call	extract_constrain_insn_cached	#
	.loc 1 20638 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4036
	testl	%eax, %eax	# which_alternative.4036
	je	.L4485	#,
	.loc 1 20638 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4037
	cmpl	$1, %eax	#, which_alternative.4037
	je	.L4485	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4038
	cmpl	$2, %eax	#, which_alternative.4038
	jne	.L4486	#,
.L4485:
	.loc 1 20640 0 is_stmt 1
	movl	$21, %eax	#, D.57382
	jmp	.L4455	#
.L4486:
	.loc 1 20642 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4039
	cmpl	$3, %eax	#, which_alternative.4039
	jne	.L4487	#,
	.loc 1 20644 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4487:
	.loc 1 20648 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4383:
	.loc 1 20653 0
	movq	-24(%rbp), %rax	# insn, tmp447
	movq	%rax, %rdi	# tmp447,
	call	extract_constrain_insn_cached	#
	.loc 1 20654 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4040
	testl	%eax, %eax	# which_alternative.4040
	je	.L4488	#,
	.loc 1 20654 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4041
	cmpl	$1, %eax	#, which_alternative.4041
	je	.L4488	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4042
	cmpl	$2, %eax	#, which_alternative.4042
	jne	.L4489	#,
.L4488:
	.loc 1 20656 0 is_stmt 1
	movl	$21, %eax	#, D.57382
	jmp	.L4455	#
.L4489:
	.loc 1 20658 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4043
	cmpl	$3, %eax	#, which_alternative.4043
	je	.L4490	#,
	.loc 1 20658 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4044
	cmpl	$4, %eax	#, which_alternative.4044
	jne	.L4491	#,
.L4490:
	.loc 1 20660 0 is_stmt 1
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4491:
	.loc 1 20662 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4045
	cmpl	$5, %eax	#, which_alternative.4045
	je	.L4492	#,
	.loc 1 20662 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4046
	cmpl	$6, %eax	#, which_alternative.4046
	je	.L4492	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4047
	cmpl	$7, %eax	#, which_alternative.4047
	jne	.L4493	#,
.L4492:
	.loc 1 20664 0 is_stmt 1
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4493:
	.loc 1 20668 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4381:
	.loc 1 20672 0
	movq	-24(%rbp), %rax	# insn, tmp448
	movq	%rax, %rdi	# tmp448,
	call	extract_constrain_insn_cached	#
	.loc 1 20673 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4048
	testl	%eax, %eax	# which_alternative.4048
	je	.L4494	#,
	.loc 1 20673 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4049
	cmpl	$1, %eax	#, which_alternative.4049
	je	.L4494	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4050
	cmpl	$2, %eax	#, which_alternative.4050
	jne	.L4495	#,
.L4494:
	.loc 1 20675 0 is_stmt 1
	movl	$21, %eax	#, D.57382
	jmp	.L4455	#
.L4495:
	.loc 1 20677 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4051
	cmpl	$3, %eax	#, which_alternative.4051
	je	.L4496	#,
	.loc 1 20677 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4052
	cmpl	$4, %eax	#, which_alternative.4052
	jne	.L4497	#,
.L4496:
	.loc 1 20679 0 is_stmt 1
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4497:
	.loc 1 20681 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4053
	cmpl	$5, %eax	#, which_alternative.4053
	je	.L4498	#,
	.loc 1 20681 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4054
	cmpl	$6, %eax	#, which_alternative.4054
	je	.L4498	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4055
	cmpl	$7, %eax	#, which_alternative.4055
	je	.L4498	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4056
	cmpl	$8, %eax	#, which_alternative.4056
	jne	.L4499	#,
.L4498:
	.loc 1 20683 0 is_stmt 1
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4499:
	.loc 1 20685 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4057
	cmpl	$9, %eax	#, which_alternative.4057
	je	.L4500	#,
	.loc 1 20685 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4058
	cmpl	$10, %eax	#, which_alternative.4058
	jne	.L4501	#,
.L4500:
	.loc 1 20687 0 is_stmt 1
	movl	$34, %eax	#, D.57382
	jmp	.L4455	#
.L4501:
	.loc 1 20691 0
	movl	$34, %eax	#, D.57382
	jmp	.L4455	#
.L4378:
	.loc 1 20695 0
	movq	-24(%rbp), %rax	# insn, tmp449
	movq	%rax, %rdi	# tmp449,
	call	extract_constrain_insn_cached	#
	.loc 1 20696 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4059
	testl	%eax, %eax	# which_alternative.4059
	je	.L4502	#,
	.loc 1 20696 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4060
	cmpl	$1, %eax	#, which_alternative.4060
	jne	.L4503	#,
.L4502:
	.loc 1 20698 0 is_stmt 1
	movl	$0, %eax	#, D.57382
	jmp	.L4455	#
.L4503:
	.loc 1 20700 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4061
	cmpl	$2, %eax	#, which_alternative.4061
	je	.L4504	#,
	.loc 1 20700 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4062
	cmpl	$3, %eax	#, which_alternative.4062
	jne	.L4505	#,
.L4504:
	.loc 1 20702 0 is_stmt 1
	movl	$34, %eax	#, D.57382
	jmp	.L4455	#
.L4505:
	.loc 1 20704 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4063
	cmpl	$4, %eax	#, which_alternative.4063
	je	.L4506	#,
	.loc 1 20704 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4064
	cmpl	$5, %eax	#, which_alternative.4064
	jne	.L4507	#,
.L4506:
	.loc 1 20706 0 is_stmt 1
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4507:
	.loc 1 20710 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4371:
	.loc 1 20714 0
	movq	-24(%rbp), %rax	# insn, tmp450
	movq	%rax, %rdi	# tmp450,
	call	extract_constrain_insn_cached	#
	.loc 1 20715 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4065
	cmpl	$3, %eax	#, which_alternative.4065
	jne	.L4508	#,
	.loc 1 20715 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4066
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4067
	movl	%eax, %ecx	# ix86_cpu.4068, tmp511
	sarl	%cl, %edx	# tmp511, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4509	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4069
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4070
	movl	%eax, %ecx	# ix86_cpu.4071, tmp513
	sarl	%cl, %edx	# tmp513, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	jne	.L4508	#,
.L4509:
	.loc 1 20717 0 is_stmt 1
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4508:
	.loc 1 20719 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4072
	cmpl	$3, %eax	#, which_alternative.4072
	je	.L4510	#,
	.loc 1 20719 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4073
	cmpl	$5, %eax	#, which_alternative.4073
	je	.L4510	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4074
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4075
	movl	%eax, %ecx	# ix86_cpu.4076, tmp515
	sarl	%cl, %edx	# tmp515, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4511	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4077
	cmpl	$2, %eax	#, which_alternative.4077
	jne	.L4511	#,
.L4510:
	.loc 1 20721 0 is_stmt 1
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4511:
	.loc 1 20725 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4370:
	.loc 1 20729 0
	movq	-24(%rbp), %rax	# insn, tmp451
	movq	%rax, %rdi	# tmp451,
	call	extract_constrain_insn_cached	#
	.loc 1 20730 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4078
	testl	%eax, %eax	# which_alternative.4078
	je	.L4512	#,
	.loc 1 20730 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4079
	cmpl	$1, %eax	#, which_alternative.4079
	jne	.L4513	#,
.L4512:
	.loc 1 20730 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4080
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4081
	movl	%eax, %ecx	# ix86_cpu.4082, tmp517
	sarl	%cl, %edx	# tmp517, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4514	#,
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.4083
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4084
	movl	%eax, %ecx	# ix86_cpu.4085, tmp519
	sarl	%cl, %edx	# tmp519, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4514	#,
.L4513:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4086
	cmpl	$2, %eax	#, which_alternative.4086
	je	.L4515	#,
	.loc 1 20730 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4087
	cmpl	$3, %eax	#, which_alternative.4087
	je	.L4515	#,
	.loc 1 20730 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4088
	cmpl	$4, %eax	#, which_alternative.4088
	jne	.L4516	#,
.L4515:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57384
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4516	#,
.L4514:
	.loc 1 20732 0 is_stmt 1
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4516:
	.loc 1 20734 0
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4089
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4090
	movl	%eax, %ecx	# ix86_cpu.4091, tmp521
	sarl	%cl, %edx	# tmp521, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4517	#,
	.loc 1 20734 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4092
	testl	%eax, %eax	# which_alternative.4092
	je	.L4518	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4093
	cmpl	$1, %eax	#, which_alternative.4093
	je	.L4518	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4094
	cmpl	$3, %eax	#, which_alternative.4094
	je	.L4518	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4095
	cmpl	$4, %eax	#, which_alternative.4095
	jne	.L4517	#,
.L4518:
	.loc 1 20736 0 is_stmt 1
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4517:
	.loc 1 20740 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4358:
	.loc 1 20747 0
	movq	-24(%rbp), %rax	# insn, tmp452
	movq	%rax, %rdi	# tmp452,
	call	extract_constrain_insn_cached	#
	.loc 1 20748 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4096
	testl	%eax, %eax	# which_alternative.4096
	jne	.L4519	#,
	.loc 1 20750 0
	movl	$6, %eax	#, D.57382
	jmp	.L4455	#
.L4519:
	.loc 1 20754 0
	movl	$5, %eax	#, D.57382
	jmp	.L4455	#
.L4364:
	.loc 1 20759 0
	movq	-24(%rbp), %rax	# insn, tmp453
	movq	%rax, %rdi	# tmp453,
	call	extract_constrain_insn_cached	#
	.loc 1 20760 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4097
	testl	%eax, %eax	# which_alternative.4097
	jne	.L4520	#,
	.loc 1 20762 0
	movl	$29, %eax	#, D.57382
	jmp	.L4455	#
.L4520:
	.loc 1 20766 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4368:
	.loc 1 20770 0
	movq	-24(%rbp), %rax	# insn, tmp454
	movq	%rax, %rdi	# tmp454,
	call	extract_constrain_insn_cached	#
	.loc 1 20771 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4098
	cmpl	$4, %eax	#, which_alternative.4098
	je	.L4521	#,
	.loc 1 20771 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4099
	cmpl	$5, %eax	#, which_alternative.4099
	je	.L4521	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4100
	cmpl	$6, %eax	#, which_alternative.4100
	jne	.L4522	#,
.L4521:
	.loc 1 20773 0 is_stmt 1
	movl	$34, %eax	#, D.57382
	jmp	.L4455	#
.L4522:
	.loc 1 20775 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4101
	cmpl	$7, %eax	#, which_alternative.4101
	je	.L4523	#,
	.loc 1 20775 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4102
	cmpl	$8, %eax	#, which_alternative.4102
	je	.L4523	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4103
	cmpl	$9, %eax	#, which_alternative.4103
	jne	.L4524	#,
.L4523:
	.loc 1 20777 0 is_stmt 1
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4524:
	.loc 1 20779 0
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4104
	testl	%eax, %eax	# flag_pic.4104
	je	.L4525	#,
	.loc 1 20779 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57384
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4525	#,
	.loc 1 20781 0 is_stmt 1
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4525:
	.loc 1 20785 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4373:
	.loc 1 20789 0
	movq	-24(%rbp), %rax	# insn, tmp455
	movq	%rax, %rdi	# tmp455,
	call	extract_constrain_insn_cached	#
	.loc 1 20790 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4526	#,
	.loc 1 20790 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4527	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4105
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4106
	movl	%eax, %ecx	# ix86_cpu.4107, tmp523
	sarl	%cl, %edx	# tmp523, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4526	#,
.L4527:
	.loc 1 20792 0 is_stmt 1
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4526:
	.loc 1 20796 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4374:
	.loc 1 20800 0
	movq	-24(%rbp), %rax	# insn, tmp456
	movq	%rax, %rdi	# tmp456,
	call	extract_constrain_insn_cached	#
	.loc 1 20801 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4528	#,
	.loc 1 20801 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4529	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4108
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4109
	movl	%eax, %ecx	# ix86_cpu.4110, tmp525
	sarl	%cl, %edx	# tmp525, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4528	#,
.L4529:
	.loc 1 20803 0 is_stmt 1
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4528:
	.loc 1 20807 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4375:
	.loc 1 20811 0
	movq	-24(%rbp), %rax	# insn, tmp457
	movq	%rax, %rdi	# tmp457,
	call	extract_constrain_insn_cached	#
	.loc 1 20812 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4530	#,
	.loc 1 20812 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4531	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4111
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4112
	movl	%eax, %ecx	# ix86_cpu.4113, tmp527
	sarl	%cl, %edx	# tmp527, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4530	#,
.L4531:
	.loc 1 20814 0 is_stmt 1
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4530:
	.loc 1 20818 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4376:
	.loc 1 20822 0
	movq	-24(%rbp), %rax	# insn, tmp458
	movq	%rax, %rdi	# tmp458,
	call	extract_constrain_insn_cached	#
	.loc 1 20823 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4532	#,
	.loc 1 20823 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4114
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4115
	movl	%eax, %ecx	# ix86_cpu.4116, tmp529
	sarl	%cl, %edx	# tmp529, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4533	#,
.L4532:
	.loc 1 20825 0 is_stmt 1
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4533:
	.loc 1 20829 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4377:
	.loc 1 20833 0
	movq	-24(%rbp), %rax	# insn, tmp459
	movq	%rax, %rdi	# tmp459,
	call	extract_constrain_insn_cached	#
	.loc 1 20834 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4117
	testl	%eax, %eax	# which_alternative.4117
	jne	.L4534	#,
	.loc 1 20836 0
	movl	$16, %eax	#, D.57382
	jmp	.L4455	#
.L4534:
	.loc 1 20840 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4379:
	.loc 1 20844 0
	movq	-24(%rbp), %rax	# insn, tmp460
	movq	%rax, %rdi	# tmp460,
	call	extract_constrain_insn_cached	#
	.loc 1 20845 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4118
	cmpl	$5, %eax	#, which_alternative.4118
	je	.L4535	#,
	.loc 1 20845 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4119
	cmpl	$6, %eax	#, which_alternative.4119
	jne	.L4536	#,
.L4535:
	.loc 1 20847 0 is_stmt 1
	movl	$34, %eax	#, D.57382
	jmp	.L4455	#
.L4536:
	.loc 1 20849 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4120
	cmpl	$7, %eax	#, which_alternative.4120
	je	.L4537	#,
	.loc 1 20849 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4121
	cmpl	$8, %eax	#, which_alternative.4121
	jne	.L4538	#,
.L4537:
	.loc 1 20851 0 is_stmt 1
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4538:
	.loc 1 20853 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4122
	cmpl	$4, %eax	#, which_alternative.4122
	jne	.L4539	#,
	.loc 1 20855 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4539:
	.loc 1 20857 0
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4123
	testl	%eax, %eax	# flag_pic.4123
	je	.L4540	#,
	.loc 1 20857 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57384
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4540	#,
	.loc 1 20859 0 is_stmt 1
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4540:
	.loc 1 20863 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4380:
	.loc 1 20868 0
	movq	-24(%rbp), %rax	# insn, tmp461
	movq	%rax, %rdi	# tmp461,
	call	extract_constrain_insn_cached	#
	.loc 1 20869 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4124
	testl	%eax, %eax	# which_alternative.4124
	jne	.L4541	#,
	.loc 1 20871 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4541:
	.loc 1 20873 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4125
	cmpl	$1, %eax	#, which_alternative.4125
	jne	.L4542	#,
	.loc 1 20875 0
	movl	$16, %eax	#, D.57382
	jmp	.L4455	#
.L4542:
	.loc 1 20879 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4385:
	.loc 1 20884 0
	movq	-24(%rbp), %rax	# insn, tmp462
	movq	%rax, %rdi	# tmp462,
	call	extract_constrain_insn_cached	#
	.loc 1 20885 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4126
	testl	%eax, %eax	# which_alternative.4126
	jne	.L4543	#,
	.loc 1 20887 0
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4543:
	.loc 1 20891 0
	movl	$2, %eax	#, D.57382
	jmp	.L4455	#
.L4386:
	.loc 1 20895 0
	movq	-24(%rbp), %rax	# insn, tmp463
	movq	%rax, %rdi	# tmp463,
	call	extract_constrain_insn_cached	#
	.loc 1 20896 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4127
	testl	%eax, %eax	# which_alternative.4127
	jne	.L4544	#,
	.loc 1 20898 0
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4544:
	.loc 1 20902 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4391:
	.loc 1 20906 0
	movq	-24(%rbp), %rax	# insn, tmp464
	movq	%rax, %rdi	# tmp464,
	call	extract_constrain_insn_cached	#
	.loc 1 20907 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4128
	testl	%eax, %eax	# which_alternative.4128
	jne	.L4545	#,
	.loc 1 20909 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4545:
	.loc 1 20913 0
	movl	$21, %eax	#, D.57382
	jmp	.L4455	#
.L4394:
	.loc 1 20920 0
	movq	-24(%rbp), %rax	# insn, tmp465
	movq	%rax, %rdi	# tmp465,
	call	extract_constrain_insn_cached	#
	.loc 1 20921 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4129
	testl	%eax, %eax	# which_alternative.4129
	jne	.L4546	#,
	.loc 1 20923 0
	movl	$21, %eax	#, D.57382
	jmp	.L4455	#
.L4546:
	.loc 1 20925 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4130
	cmpl	$1, %eax	#, which_alternative.4130
	jne	.L4547	#,
	.loc 1 20927 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4547:
	.loc 1 20931 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4393:
	.loc 1 20944 0
	movq	-24(%rbp), %rax	# insn, tmp466
	movq	%rax, %rdi	# tmp466,
	call	extract_constrain_insn_cached	#
	.loc 1 20945 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4131
	testl	%eax, %eax	# which_alternative.4131
	jne	.L4548	#,
	.loc 1 20947 0
	movl	$21, %eax	#, D.57382
	jmp	.L4455	#
.L4548:
	.loc 1 20951 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4398:
	.loc 1 20958 0
	movq	-24(%rbp), %rax	# insn, tmp467
	movq	%rax, %rdi	# tmp467,
	call	extract_insn_cached	#
	.loc 1 20959 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4549	#,
	.loc 1 20961 0
	movl	$10, %eax	#, D.57382
	jmp	.L4455	#
.L4549:
	.loc 1 20965 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4401:
	.loc 1 20974 0
	movq	-24(%rbp), %rax	# insn, tmp468
	movq	%rax, %rdi	# tmp468,
	call	extract_insn_cached	#
	.loc 1 20975 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4550	#,
	.loc 1 20977 0
	movl	$10, %eax	#, D.57382
	jmp	.L4455	#
.L4550:
	.loc 1 20981 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4402:
	.loc 1 20985 0
	movq	-24(%rbp), %rax	# insn, tmp469
	movq	%rax, %rdi	# tmp469,
	call	extract_constrain_insn_cached	#
	.loc 1 20986 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4132
	cmpl	$2, %eax	#, which_alternative.4132
	jne	.L4551	#,
	.loc 1 20988 0
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4551:
	.loc 1 20992 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4552	#,
	.loc 1 20994 0
	movl	$10, %eax	#, D.57382
	jmp	.L4455	#
.L4552:
	.loc 1 20998 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4404:
	.loc 1 21003 0
	movq	-24(%rbp), %rax	# insn, tmp470
	movq	%rax, %rdi	# tmp470,
	call	extract_constrain_insn_cached	#
	.loc 1 21004 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4133
	cmpl	$3, %eax	#, which_alternative.4133
	jne	.L4553	#,
	.loc 1 21006 0
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4553:
	.loc 1 21010 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4554	#,
	.loc 1 21012 0
	movl	$10, %eax	#, D.57382
	jmp	.L4455	#
.L4554:
	.loc 1 21016 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4403:
	.loc 1 21026 0
	movq	-24(%rbp), %rax	# insn, tmp471
	movq	%rax, %rdi	# tmp471,
	call	extract_insn_cached	#
	.loc 1 21027 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4555	#,
	.loc 1 21029 0
	movl	$10, %eax	#, D.57382
	jmp	.L4455	#
.L4555:
	.loc 1 21033 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4405:
	.loc 1 21042 0
	movq	-24(%rbp), %rax	# insn, tmp472
	movq	%rax, %rdi	# tmp472,
	call	extract_insn_cached	#
	.loc 1 21043 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4556	#,
	.loc 1 21045 0
	movl	$10, %eax	#, D.57382
	jmp	.L4455	#
.L4556:
	.loc 1 21049 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4412:
	.loc 1 21053 0
	movq	-24(%rbp), %rax	# insn, tmp473
	movq	%rax, %rdi	# tmp473,
	call	extract_constrain_insn_cached	#
	.loc 1 21054 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4134
	cmpl	$1, %eax	#, which_alternative.4134
	jne	.L4557	#,
	.loc 1 21056 0
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4557:
	.loc 1 21058 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4135
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4136
	movl	%eax, %ecx	# ix86_cpu.4137, tmp531
	sarl	%cl, %edx	# tmp531, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4558	#,
	.loc 1 21058 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4558	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4558	#,
	.loc 1 21060 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4558:
	.loc 1 21064 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4413:
	.loc 1 21068 0
	movq	-24(%rbp), %rax	# insn, tmp474
	movq	%rax, %rdi	# tmp474,
	call	extract_constrain_insn_cached	#
	.loc 1 21069 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4138
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4139
	movl	%eax, %ecx	# ix86_cpu.4140, tmp533
	sarl	%cl, %edx	# tmp533, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4559	#,
	.loc 1 21069 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4559	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4559	#,
	.loc 1 21071 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4559:
	.loc 1 21075 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4415:
	.loc 1 21079 0
	movq	-24(%rbp), %rax	# insn, tmp475
	movq	%rax, %rdi	# tmp475,
	call	extract_constrain_insn_cached	#
	.loc 1 21080 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4141
	cmpl	$1, %eax	#, which_alternative.4141
	jne	.L4560	#,
	.loc 1 21082 0
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4560:
	.loc 1 21084 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4142
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4143
	movl	%eax, %ecx	# ix86_cpu.4144, tmp535
	sarl	%cl, %edx	# tmp535, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4561	#,
	.loc 1 21084 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4561	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4561	#,
	.loc 1 21086 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4561:
	.loc 1 21090 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4416:
	.loc 1 21094 0
	movq	-24(%rbp), %rax	# insn, tmp476
	movq	%rax, %rdi	# tmp476,
	call	extract_constrain_insn_cached	#
	.loc 1 21095 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4145
	cmpl	$1, %eax	#, which_alternative.4145
	jne	.L4562	#,
	.loc 1 21097 0
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4562:
	.loc 1 21099 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4146
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4147
	movl	%eax, %ecx	# ix86_cpu.4148, tmp537
	sarl	%cl, %edx	# tmp537, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4563	#,
	.loc 1 21099 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4563	#,
	.loc 1 21101 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4563:
	.loc 1 21105 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4417:
	.loc 1 21109 0
	movq	-24(%rbp), %rax	# insn, tmp477
	movq	%rax, %rdi	# tmp477,
	call	extract_constrain_insn_cached	#
	.loc 1 21110 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4149
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4150
	movl	%eax, %ecx	# ix86_cpu.4151, tmp539
	sarl	%cl, %edx	# tmp539, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4564	#,
	.loc 1 21110 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4564	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4564	#,
	.loc 1 21112 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4564:
	.loc 1 21116 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4418:
	.loc 1 21120 0
	movq	-24(%rbp), %rax	# insn, tmp478
	movq	%rax, %rdi	# tmp478,
	call	extract_constrain_insn_cached	#
	.loc 1 21121 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4152
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4153
	movl	%eax, %ecx	# ix86_cpu.4154, tmp541
	sarl	%cl, %edx	# tmp541, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4565	#,
	.loc 1 21121 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4565	#,
	.loc 1 21123 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4565:
	.loc 1 21127 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4419:
	.loc 1 21131 0
	movq	-24(%rbp), %rax	# insn, tmp479
	movq	%rax, %rdi	# tmp479,
	call	extract_constrain_insn_cached	#
	.loc 1 21132 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4155
	cmpl	$1, %eax	#, which_alternative.4155
	jne	.L4566	#,
	.loc 1 21134 0
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4566:
	.loc 1 21136 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4156
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4157
	movl	%eax, %ecx	# ix86_cpu.4158, tmp543
	sarl	%cl, %edx	# tmp543, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4567	#,
	.loc 1 21136 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4567	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4567	#,
	.loc 1 21138 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4567:
	.loc 1 21142 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4420:
	.loc 1 21146 0
	movq	-24(%rbp), %rax	# insn, tmp480
	movq	%rax, %rdi	# tmp480,
	call	extract_constrain_insn_cached	#
	.loc 1 21147 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4159
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4160
	movl	%eax, %ecx	# ix86_cpu.4161, tmp545
	sarl	%cl, %edx	# tmp545, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4568	#,
	.loc 1 21147 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4568	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4568	#,
	.loc 1 21149 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4568:
	.loc 1 21153 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4421:
	.loc 1 21157 0
	movq	-24(%rbp), %rax	# insn, tmp481
	movq	%rax, %rdi	# tmp481,
	call	extract_constrain_insn_cached	#
	.loc 1 21158 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4162
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4163
	movl	%eax, %ecx	# ix86_cpu.4164, tmp547
	sarl	%cl, %edx	# tmp547, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4569	#,
	.loc 1 21158 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4569	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4569	#,
	.loc 1 21160 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4569:
	.loc 1 21164 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4422:
	.loc 1 21168 0
	movq	-24(%rbp), %rax	# insn, tmp482
	movq	%rax, %rdi	# tmp482,
	call	extract_constrain_insn_cached	#
	.loc 1 21169 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4165
	cmpl	$2, %eax	#, which_alternative.4165
	jne	.L4570	#,
	.loc 1 21171 0
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4570:
	.loc 1 21173 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4166
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4167
	movl	%eax, %ecx	# ix86_cpu.4168, tmp549
	sarl	%cl, %edx	# tmp549, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4571	#,
	.loc 1 21173 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4571	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4571	#,
	.loc 1 21175 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4571:
	.loc 1 21179 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4423:
	.loc 1 21183 0
	movq	-24(%rbp), %rax	# insn, tmp483
	movq	%rax, %rdi	# tmp483,
	call	extract_constrain_insn_cached	#
	.loc 1 21184 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4169
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4170
	movl	%eax, %ecx	# ix86_cpu.4171, tmp551
	sarl	%cl, %edx	# tmp551, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4572	#,
	.loc 1 21184 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4572	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4572	#,
	.loc 1 21186 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4572:
	.loc 1 21190 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4424:
	.loc 1 21194 0
	movq	-24(%rbp), %rax	# insn, tmp484
	movq	%rax, %rdi	# tmp484,
	call	extract_constrain_insn_cached	#
	.loc 1 21195 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4172
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4173
	movl	%eax, %ecx	# ix86_cpu.4174, tmp553
	sarl	%cl, %edx	# tmp553, D.57383
	movl	%edx, %eax	# D.57383, D.57383
	andl	$1, %eax	#, D.57383
	testl	%eax, %eax	# D.57383
	je	.L4573	#,
	.loc 1 21195 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	register_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4573	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const1_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4573	#,
	.loc 1 21197 0 is_stmt 1
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4573:
	.loc 1 21201 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4425:
	.loc 1 21207 0
	movq	-24(%rbp), %rax	# insn, tmp485
	movq	%rax, %rdi	# tmp485,
	call	extract_constrain_insn_cached	#
	.loc 1 21208 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4175
	testl	%eax, %eax	# which_alternative.4175
	jne	.L4574	#,
	.loc 1 21210 0
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4574:
	.loc 1 21214 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4428:
	.loc 1 21218 0
	movq	-24(%rbp), %rax	# insn, tmp486
	movq	%rax, %rdi	# tmp486,
	call	extract_constrain_insn_cached	#
	.loc 1 21219 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4176
	testl	%eax, %eax	# which_alternative.4176
	jne	.L4575	#,
	.loc 1 21219 0 is_stmt 0 discriminator 1
	movq	insn_addresses_(%rip), %rax	# insn_addresses_, insn_addresses_.4178
	testq	%rax, %rax	# insn_addresses_.4178
	je	.L4576	#,
	movq	insn_addresses_(%rip), %rdx	# insn_addresses_, insn_addresses_.4179
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movzwl	(%rax), %eax	# _447->code, D.57385
	cmpw	$67, %ax	#, D.57385
	jne	.L4577	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movq	8(%rax), %rax	# _449->fld[0].rtx, iftmp.4180
	jmp	.L4578	#
.L4577:
	.loc 1 21219 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, iftmp.4180
.L4578:
	.loc 1 21219 0 discriminator 1
	movl	8(%rax), %eax	# iftmp.4180_4->fld[0].rtint, D.57383
	cltq
	addq	$8, %rax	#, tmp488
	movl	(%rdx,%rax,4), %ebx	# insn_addresses_.4179_446->data.i, iftmp.4177
	jmp	.L4579	#
.L4576:
	.loc 1 21219 0 discriminator 2
	movl	$0, %ebx	#, iftmp.4177
.L4579:
	.loc 1 21219 0 discriminator 3
	movq	-24(%rbp), %rax	# insn, tmp489
	movq	%rax, %rdi	# tmp489,
	call	insn_current_reference_address	#
	subl	%eax, %ebx	# D.57383, D.57383
	movl	%ebx, %eax	# D.57383, D.57383
	cmpl	$-128, %eax	#, D.57383
	jl	.L4575	#,
	.loc 1 21219 0 discriminator 1
	movq	insn_addresses_(%rip), %rax	# insn_addresses_, insn_addresses_.4182
	testq	%rax, %rax	# insn_addresses_.4182
	je	.L4580	#,
	movq	insn_addresses_(%rip), %rdx	# insn_addresses_, insn_addresses_.4183
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movzwl	(%rax), %eax	# _459->code, D.57385
	cmpw	$67, %ax	#, D.57385
	jne	.L4581	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57384
	movq	8(%rax), %rax	# _461->fld[0].rtx, iftmp.4184
	jmp	.L4582	#
.L4581:
	.loc 1 21219 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, iftmp.4184
.L4582:
	movl	8(%rax), %eax	# iftmp.4184_6->fld[0].rtint, D.57383
	cltq
	addq	$8, %rax	#, tmp491
	movl	(%rdx,%rax,4), %ebx	# insn_addresses_.4183_458->data.i, iftmp.4181
	jmp	.L4583	#
.L4580:
	movl	$0, %ebx	#, iftmp.4181
.L4583:
	.loc 1 21219 0 discriminator 3
	movq	-24(%rbp), %rax	# insn, tmp492
	movq	%rax, %rdi	# tmp492,
	call	insn_current_reference_address	#
	subl	%eax, %ebx	# D.57383, D.57383
	movl	%ebx, %eax	# D.57383, D.57383
	cmpl	$123, %eax	#, D.57383
	jg	.L4575	#,
	.loc 1 21221 0 is_stmt 1
	movl	$14, %eax	#, D.57382
	jmp	.L4455	#
.L4575:
	.loc 1 21225 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4430:
	.loc 1 21230 0
	movq	-24(%rbp), %rax	# insn, tmp493
	movq	%rax, %rdi	# tmp493,
	call	extract_insn_cached	#
	.loc 1 21231 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	mult_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4584	#,
	.loc 1 21233 0
	movl	$25, %eax	#, D.57382
	jmp	.L4455	#
.L4584:
	.loc 1 21237 0
	movl	$22, %eax	#, D.57382
	jmp	.L4455	#
.L4431:
	.loc 1 21242 0
	movq	-24(%rbp), %rax	# insn, tmp494
	movq	%rax, %rdi	# tmp494,
	call	extract_constrain_insn_cached	#
	.loc 1 21243 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4185
	cmpl	$1, %eax	#, which_alternative.4185
	jne	.L4585	#,
	.loc 1 21245 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4585:
	.loc 1 21249 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	mult_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4586	#,
	.loc 1 21251 0
	movl	$25, %eax	#, D.57382
	jmp	.L4455	#
.L4586:
	.loc 1 21255 0
	movl	$22, %eax	#, D.57382
	jmp	.L4455	#
.L4432:
	.loc 1 21260 0
	movq	-24(%rbp), %rax	# insn, tmp495
	movq	%rax, %rdi	# tmp495,
	call	extract_insn_cached	#
	.loc 1 21261 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	mult_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4587	#,
	.loc 1 21263 0
	movl	$25, %eax	#, D.57382
	jmp	.L4455	#
.L4587:
	.loc 1 21267 0
	movl	$22, %eax	#, D.57382
	jmp	.L4455	#
.L4433:
	.loc 1 21271 0
	movq	-24(%rbp), %rax	# insn, tmp496
	movq	%rax, %rdi	# tmp496,
	call	extract_insn_cached	#
	.loc 1 21272 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	mult_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4588	#,
	.loc 1 21274 0
	movl	$25, %eax	#, D.57382
	jmp	.L4455	#
.L4588:
	.loc 1 21278 0
	movl	$22, %eax	#, D.57382
	jmp	.L4455	#
.L4435:
	.loc 1 21282 0
	movq	-24(%rbp), %rax	# insn, tmp497
	movq	%rax, %rdi	# tmp497,
	call	extract_constrain_insn_cached	#
	.loc 1 21283 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4186
	cmpl	$2, %eax	#, which_alternative.4186
	jne	.L4589	#,
	.loc 1 21285 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4589:
	.loc 1 21287 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	mult_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4590	#,
	.loc 1 21289 0
	movl	$25, %eax	#, D.57382
	jmp	.L4455	#
.L4590:
	.loc 1 21291 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	div_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4591	#,
	.loc 1 21293 0
	movl	$26, %eax	#, D.57382
	jmp	.L4455	#
.L4591:
	.loc 1 21297 0
	movl	$22, %eax	#, D.57382
	jmp	.L4455	#
.L4434:
	.loc 1 21303 0
	movq	-24(%rbp), %rax	# insn, tmp498
	movq	%rax, %rdi	# tmp498,
	call	extract_insn_cached	#
	.loc 1 21304 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	mult_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4592	#,
	.loc 1 21306 0
	movl	$25, %eax	#, D.57382
	jmp	.L4455	#
.L4592:
	.loc 1 21308 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	div_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4593	#,
	.loc 1 21310 0
	movl	$26, %eax	#, D.57382
	jmp	.L4455	#
.L4593:
	.loc 1 21314 0
	movl	$22, %eax	#, D.57382
	jmp	.L4455	#
.L4437:
	.loc 1 21318 0
	movq	-24(%rbp), %rax	# insn, tmp499
	movq	%rax, %rdi	# tmp499,
	call	extract_constrain_insn_cached	#
	.loc 1 21319 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4187
	cmpl	$2, %eax	#, which_alternative.4187
	jne	.L4594	#,
	.loc 1 21321 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4594:
	.loc 1 21323 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	mult_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4595	#,
	.loc 1 21325 0
	movl	$25, %eax	#, D.57382
	jmp	.L4455	#
.L4595:
	.loc 1 21327 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	div_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4596	#,
	.loc 1 21329 0
	movl	$26, %eax	#, D.57382
	jmp	.L4455	#
.L4596:
	.loc 1 21333 0
	movl	$22, %eax	#, D.57382
	jmp	.L4455	#
.L4436:
	.loc 1 21341 0
	movq	-24(%rbp), %rax	# insn, tmp500
	movq	%rax, %rdi	# tmp500,
	call	extract_insn_cached	#
	.loc 1 21342 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	mult_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4597	#,
	.loc 1 21344 0
	movl	$25, %eax	#, D.57382
	jmp	.L4455	#
.L4597:
	.loc 1 21346 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	div_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4598	#,
	.loc 1 21348 0
	movl	$26, %eax	#, D.57382
	jmp	.L4455	#
.L4598:
	.loc 1 21352 0
	movl	$22, %eax	#, D.57382
	jmp	.L4455	#
.L4438:
	.loc 1 21362 0
	movq	-24(%rbp), %rax	# insn, tmp501
	movq	%rax, %rdi	# tmp501,
	call	extract_insn_cached	#
	.loc 1 21363 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	mult_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4599	#,
	.loc 1 21365 0
	movl	$25, %eax	#, D.57382
	jmp	.L4455	#
.L4599:
	.loc 1 21367 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	div_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4600	#,
	.loc 1 21369 0
	movl	$26, %eax	#, D.57382
	jmp	.L4455	#
.L4600:
	.loc 1 21373 0
	movl	$22, %eax	#, D.57382
	jmp	.L4455	#
.L4439:
	.loc 1 21383 0
	movq	-24(%rbp), %rax	# insn, tmp502
	movq	%rax, %rdi	# tmp502,
	call	extract_insn_cached	#
	.loc 1 21384 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	mult_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4601	#,
	.loc 1 21386 0
	movl	$25, %eax	#, D.57382
	jmp	.L4455	#
.L4601:
	.loc 1 21388 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57384
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	div_operator	#
	testl	%eax, %eax	# D.57383
	je	.L4602	#,
	.loc 1 21390 0
	movl	$26, %eax	#, D.57382
	jmp	.L4455	#
.L4602:
	.loc 1 21394 0
	movl	$22, %eax	#, D.57382
	jmp	.L4455	#
.L4440:
	.loc 1 21399 0
	movq	-24(%rbp), %rax	# insn, tmp503
	movq	%rax, %rdi	# tmp503,
	call	extract_constrain_insn_cached	#
	.loc 1 21400 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4188
	testl	%eax, %eax	# which_alternative.4188
	jne	.L4603	#,
	.loc 1 21402 0
	movl	$27, %eax	#, D.57382
	jmp	.L4455	#
.L4603:
	.loc 1 21406 0
	movl	$33, %eax	#, D.57382
	jmp	.L4455	#
.L4448:
	.loc 1 21410 0
	movq	-24(%rbp), %rax	# insn, tmp504
	movq	%rax, %rdi	# tmp504,
	call	extract_constrain_insn_cached	#
	.loc 1 21411 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4189
	testl	%eax, %eax	# which_alternative.4189
	jne	.L4604	#,
	.loc 1 21413 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4604:
	.loc 1 21415 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const0_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4605	#,
	.loc 1 21417 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4605:
	.loc 1 21421 0
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4449:
	.loc 1 21425 0
	movq	-24(%rbp), %rax	# insn, tmp505
	movq	%rax, %rdi	# tmp505,
	call	extract_constrain_insn_cached	#
	.loc 1 21426 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4190
	testl	%eax, %eax	# which_alternative.4190
	jne	.L4606	#,
	.loc 1 21428 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4606:
	.loc 1 21430 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57384
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57384,
	call	const0_operand	#
	testl	%eax, %eax	# D.57383
	je	.L4607	#,
	.loc 1 21432 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4607:
	.loc 1 21436 0
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4392:
	.loc 1 21448 0
	movl	$35, %eax	#, D.57382
	jmp	.L4455	#
.L4451:
	.loc 1 21534 0
	movl	$34, %eax	#, D.57382
	jmp	.L4455	#
.L4442:
	.loc 1 21537 0
	movl	$32, %eax	#, D.57382
	jmp	.L4455	#
.L4443:
	.loc 1 21569 0
	movl	$31, %eax	#, D.57382
	jmp	.L4455	#
.L4382:
	.loc 1 21575 0
	movl	$30, %eax	#, D.57382
	jmp	.L4455	#
.L4362:
	.loc 1 21585 0
	movl	$29, %eax	#, D.57382
	jmp	.L4455	#
.L4447:
	.loc 1 21589 0
	movl	$28, %eax	#, D.57382
	jmp	.L4455	#
.L4441:
	.loc 1 21610 0
	movl	$27, %eax	#, D.57382
	jmp	.L4455	#
.L4411:
	.loc 1 21630 0
	movl	$24, %eax	#, D.57382
	jmp	.L4455	#
.L4388:
	.loc 1 21641 0
	movl	$21, %eax	#, D.57382
	jmp	.L4455	#
.L4444:
	.loc 1 21646 0
	movl	$20, %eax	#, D.57382
	jmp	.L4455	#
.L4450:
	.loc 1 21654 0
	movl	$19, %eax	#, D.57382
	jmp	.L4455	#
.L4429:
	.loc 1 21661 0
	movl	$18, %eax	#, D.57382
	jmp	.L4455	#
.L4366:
	.loc 1 21667 0
	movl	$17, %eax	#, D.57382
	jmp	.L4455	#
.L4365:
	.loc 1 21677 0
	movl	$16, %eax	#, D.57382
	jmp	.L4455	#
.L4426:
	.loc 1 21681 0
	movl	$15, %eax	#, D.57382
	jmp	.L4455	#
.L4427:
	.loc 1 21691 0
	movl	$14, %eax	#, D.57382
	jmp	.L4455	#
.L4407:
	.loc 1 21700 0
	movl	$13, %eax	#, D.57382
	jmp	.L4455	#
.L4406:
	.loc 1 21719 0
	movl	$12, %eax	#, D.57382
	jmp	.L4455	#
.L4414:
	.loc 1 21783 0
	movl	$11, %eax	#, D.57382
	jmp	.L4455	#
.L4396:
	.loc 1 21795 0
	movl	$9, %eax	#, D.57382
	jmp	.L4455	#
.L4372:
	.loc 1 21813 0
	movl	$8, %eax	#, D.57382
	jmp	.L4455	#
.L4369:
	.loc 1 21833 0
	movl	$7, %eax	#, D.57382
	jmp	.L4455	#
.L4360:
	.loc 1 21844 0
	movl	$6, %eax	#, D.57382
	jmp	.L4455	#
.L4359:
	.loc 1 21859 0
	movl	$5, %eax	#, D.57382
	jmp	.L4455	#
.L4395:
	.loc 1 21936 0
	movl	$4, %eax	#, D.57382
	jmp	.L4455	#
.L4410:
	.loc 1 21953 0
	movl	$3, %eax	#, D.57382
	jmp	.L4455	#
.L4367:
	.loc 1 21973 0
	movl	$2, %eax	#, D.57382
	jmp	.L4455	#
.L4356:
	.loc 1 21976 0
	movq	-24(%rbp), %rax	# insn, tmp506
	movq	32(%rax), %rax	# insn_7(D)->fld[3].rtx, D.57384
	movzwl	(%rax), %eax	# _578->code, D.57385
	cmpw	$40, %ax	#, D.57385
	je	.L4361	#,
	.loc 1 21977 0
	movq	-24(%rbp), %rax	# insn, tmp507
	movq	32(%rax), %rax	# insn_7(D)->fld[3].rtx, D.57384
	movq	%rax, %rdi	# D.57384,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57383
	jns	.L4361	#,
	.loc 1 21978 0
	movq	-24(%rbp), %rax	# insn, tmp508
	movl	$__FUNCTION__.19721, %ecx	#,
	movl	$21978, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp508,
	call	_fatal_insn_not_found	#
.L4361:
	.loc 1 22006 0
	movl	$1, %eax	#, D.57382
	jmp	.L4455	#
.L4363:
	.loc 1 22088 0
	movl	$0, %eax	#, D.57382
	jmp	.L4455	#
.L4355:
	.loc 1 22091 0
	movl	$33, %eax	#, D.57382
.L4455:
	.loc 1 22094 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE63:
	.size	get_attr_type, .-get_attr_type
	.type	athlon_muldiv_unit_blockage, @function
athlon_muldiv_unit_blockage:
.LFB64:
	.loc 1 22101 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 22105 0
	movq	-24(%rbp), %rax	# executing_insn, tmp67
	movq	%rax, -8(%rbp)	# tmp67, insn
	.loc 1 22106 0
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_5->fld[4].rtint, D.57386
	testl	%eax, %eax	# D.57386
	js	.L4609	#,
	.loc 1 22106 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp69
	movl	40(%rax), %eax	# insn_5->fld[4].rtint, iftmp.4191
	jmp	.L4610	#
.L4609:
	.loc 1 22106 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	%rax, %rdi	# tmp70,
	call	recog_memoized_1	#
.L4610:
	.loc 1 22106 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.4191
	je	.L4612	#,
	cmpl	$-1, %eax	#, iftmp.4191
	jl	.L4611	#,
	subl	$249, %eax	#, tmp71
	cmpl	$16, %eax	#, tmp71
	ja	.L4611	#,
	.loc 1 22125 0 is_stmt 1 discriminator 3
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22126 0 discriminator 3
	jmp	.L4614	#
.L4612:
	.loc 1 22129 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movq	32(%rax), %rax	# insn_5->fld[3].rtx, D.57387
	movzwl	(%rax), %eax	# _10->code, D.57388
	cmpw	$40, %ax	#, D.57388
	je	.L4611	#,
	.loc 1 22130 0
	movq	-8(%rbp), %rax	# insn, tmp73
	movq	32(%rax), %rax	# insn_5->fld[3].rtx, D.57387
	movq	%rax, %rdi	# D.57387,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57386
	jns	.L4611	#,
	.loc 1 22131 0
	movq	-8(%rbp), %rax	# insn, tmp74
	movl	$__FUNCTION__.19858, %ecx	#,
	movl	$22131, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp74,
	call	_fatal_insn_not_found	#
.L4611:
	.loc 1 22133 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 22134 0
	nop
.L4614:
	.loc 1 22138 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp75
	movq	%rax, -8(%rbp)	# tmp75, insn
	.loc 1 22139 0
	movl	-12(%rbp), %eax	# casenum, casenum
	testl	%eax, %eax	# casenum
	je	.L4616	#,
	cmpl	$1, %eax	#, casenum
	je	.L4617	#,
	jmp	.L4619	#
.L4616:
	.loc 1 22142 0
	movl	$1, %eax	#, D.57386
	jmp	.L4618	#
.L4617:
	.loc 1 22145 0
	movl	$42, %eax	#, D.57386
	jmp	.L4618	#
.L4619:
	.loc 1 22148 0
	movl	$__FUNCTION__.19858, %edx	#,
	movl	$22148, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L4618:
	.loc 1 22150 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE64:
	.size	athlon_muldiv_unit_blockage, .-athlon_muldiv_unit_blockage
	.type	athlon_muldiv_unit_conflict_cost, @function
athlon_muldiv_unit_conflict_cost:
.LFB65:
	.loc 1 22157 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 22161 0
	movq	-24(%rbp), %rax	# executing_insn, tmp67
	movq	%rax, -8(%rbp)	# tmp67, insn
	.loc 1 22162 0
	movq	-8(%rbp), %rax	# insn, tmp68
	movl	40(%rax), %eax	# insn_5->fld[4].rtint, D.57389
	testl	%eax, %eax	# D.57389
	js	.L4621	#,
	.loc 1 22162 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp69
	movl	40(%rax), %eax	# insn_5->fld[4].rtint, iftmp.4192
	jmp	.L4622	#
.L4621:
	.loc 1 22162 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp70
	movq	%rax, %rdi	# tmp70,
	call	recog_memoized_1	#
.L4622:
	.loc 1 22162 0 discriminator 3
	cmpl	$-1, %eax	#, iftmp.4192
	je	.L4624	#,
	cmpl	$-1, %eax	#, iftmp.4192
	jl	.L4623	#,
	subl	$249, %eax	#, tmp71
	cmpl	$16, %eax	#, tmp71
	ja	.L4623	#,
	.loc 1 22181 0 is_stmt 1 discriminator 3
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22182 0 discriminator 3
	jmp	.L4626	#
.L4624:
	.loc 1 22185 0
	movq	-8(%rbp), %rax	# insn, tmp72
	movq	32(%rax), %rax	# insn_5->fld[3].rtx, D.57390
	movzwl	(%rax), %eax	# _10->code, D.57391
	cmpw	$40, %ax	#, D.57391
	je	.L4623	#,
	.loc 1 22186 0
	movq	-8(%rbp), %rax	# insn, tmp73
	movq	32(%rax), %rax	# insn_5->fld[3].rtx, D.57390
	movq	%rax, %rdi	# D.57390,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57389
	jns	.L4623	#,
	.loc 1 22187 0
	movq	-8(%rbp), %rax	# insn, tmp74
	movl	$__FUNCTION__.19891, %ecx	#,
	movl	$22187, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp74,
	call	_fatal_insn_not_found	#
.L4623:
	.loc 1 22189 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 22190 0
	nop
.L4626:
	.loc 1 22194 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp75
	movq	%rax, -8(%rbp)	# tmp75, insn
	.loc 1 22195 0
	movl	-12(%rbp), %eax	# casenum, casenum
	testl	%eax, %eax	# casenum
	je	.L4628	#,
	cmpl	$1, %eax	#, casenum
	je	.L4629	#,
	jmp	.L4631	#
.L4628:
	.loc 1 22198 0
	movl	$1, %eax	#, D.57389
	jmp	.L4630	#
.L4629:
	.loc 1 22201 0
	movl	$42, %eax	#, D.57389
	jmp	.L4630	#
.L4631:
	.loc 1 22204 0
	movl	$__FUNCTION__.19891, %edx	#,
	movl	$22204, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L4630:
	.loc 1 22206 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE65:
	.size	athlon_muldiv_unit_conflict_cost, .-athlon_muldiv_unit_conflict_cost
	.type	athlon_ieu_unit_blockage, @function
athlon_ieu_unit_blockage:
.LFB66:
	.loc 1 22213 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 22217 0
	movq	-24(%rbp), %rax	# executing_insn, tmp257
	movq	%rax, -8(%rbp)	# tmp257, insn
	.loc 1 22218 0
	movq	-8(%rbp), %rax	# insn, tmp258
	movl	40(%rax), %eax	# insn_26->fld[4].rtint, D.57392
	testl	%eax, %eax	# D.57392
	js	.L4633	#,
	.loc 1 22218 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp259
	movl	40(%rax), %eax	# insn_26->fld[4].rtint, iftmp.4193
	jmp	.L4634	#
.L4633:
	.loc 1 22218 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp260
	movq	%rax, %rdi	# tmp260,
	call	recog_memoized_1	#
.L4634:
	.loc 1 22218 0 discriminator 3
	addl	$1, %eax	#, tmp261
	cmpl	$657, %eax	#, tmp261
	ja	.L4635	#,
	movl	%eax, %eax	# tmp261, tmp262
	movq	.L4637(,%rax,8), %rax	#, tmp263
	jmp	*%rax	# tmp263
	.section	.rodata
	.align 8
	.align 4
.L4637:
	.quad	.L4636
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4639
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4640
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4641
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4642
	.quad	.L4642
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4642
	.quad	.L4643
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4644
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4645
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4646
	.quad	.L4646
	.quad	.L4647
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4648
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4649
	.quad	.L4650
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4651
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4652
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4653
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4654
	.quad	.L4655
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4654
	.quad	.L4656
	.quad	.L4655
	.quad	.L4657
	.quad	.L4654
	.quad	.L4655
	.quad	.L4655
	.quad	.L4658
	.quad	.L4655
	.quad	.L4655
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4659
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4635
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4660
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4661
	.quad	.L4635
	.quad	.L4661
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4635
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.quad	.L4638
	.text
.L4661:
	.loc 1 22222 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp264
	movq	%rax, %rdi	# tmp264,
	call	extract_constrain_insn_cached	#
	.loc 1 22223 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4194
	cmpl	$2, %eax	#, which_alternative.4194
	je	.L4662	#,
	.loc 1 22223 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4195
	cmpl	$3, %eax	#, which_alternative.4195
	jne	.L4663	#,
.L4662:
	.loc 1 22225 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22231 0
	jmp	.L4665	#
.L4663:
	.loc 1 22229 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22231 0
	jmp	.L4665	#
.L4660:
	.loc 1 22263 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 22264 0
	jmp	.L4665	#
.L4659:
	.loc 1 22267 0
	movq	-8(%rbp), %rax	# insn, tmp265
	movq	%rax, %rdi	# tmp265,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57393
	jne	.L4666	#,
	.loc 1 22269 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22275 0
	jmp	.L4665	#
.L4666:
	.loc 1 22273 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22275 0
	jmp	.L4665	#
.L4658:
	.loc 1 22278 0
	movq	-8(%rbp), %rax	# insn, tmp266
	movq	%rax, %rdi	# tmp266,
	call	extract_constrain_insn_cached	#
	.loc 1 22279 0
	movq	-8(%rbp), %rax	# insn, tmp267
	movq	%rax, %rdi	# tmp267,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57393
	je	.L4668	#,
	.loc 1 22279 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4196
	cmpl	$2, %eax	#, which_alternative.4196
	je	.L4668	#,
	movq	-8(%rbp), %rax	# insn, tmp268
	movq	%rax, %rdi	# tmp268,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57393
	jne	.L4669	#,
.L4668:
	.loc 1 22281 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22287 0
	jmp	.L4665	#
.L4669:
	.loc 1 22285 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22287 0
	jmp	.L4665	#
.L4657:
	.loc 1 22290 0
	movq	-8(%rbp), %rax	# insn, tmp269
	movq	%rax, %rdi	# tmp269,
	call	extract_constrain_insn_cached	#
	.loc 1 22291 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4197
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4198
	movl	%eax, %ecx	# ix86_cpu.4199, tmp305
	sarl	%cl, %edx	# tmp305, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4671	#,
	.loc 1 22291 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	const1_operand	#
	testl	%eax, %eax	# D.57392
	jne	.L4672	#,
.L4671:
	.loc 1 22291 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4200
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4201
	movl	%eax, %ecx	# ix86_cpu.4202, tmp307
	sarl	%cl, %edx	# tmp307, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4672	#,
	.loc 1 22291 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	const1_operand	#
	testl	%eax, %eax	# D.57392
	jne	.L4673	#,
.L4672:
	.loc 1 22293 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22299 0
	jmp	.L4665	#
.L4673:
	.loc 1 22297 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22299 0
	jmp	.L4665	#
.L4656:
	.loc 1 22302 0
	movq	-8(%rbp), %rax	# insn, tmp270
	movq	%rax, %rdi	# tmp270,
	call	extract_constrain_insn_cached	#
	.loc 1 22303 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4203
	testl	%eax, %eax	# which_alternative.4203
	jne	.L4675	#,
	.loc 1 22303 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4204
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4205
	movl	%eax, %ecx	# ix86_cpu.4206, tmp309
	sarl	%cl, %edx	# tmp309, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4675	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	const1_operand	#
	testl	%eax, %eax	# D.57392
	jne	.L4676	#,
.L4675:
	.loc 1 22303 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4207
	testl	%eax, %eax	# which_alternative.4207
	jne	.L4676	#,
	.loc 1 22303 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4208
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4209
	movl	%eax, %ecx	# ix86_cpu.4210, tmp311
	sarl	%cl, %edx	# tmp311, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4676	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	const1_operand	#
	testl	%eax, %eax	# D.57392
	jne	.L4677	#,
.L4676:
	.loc 1 22305 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22311 0
	jmp	.L4665	#
.L4677:
	.loc 1 22309 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22311 0
	jmp	.L4665	#
.L4655:
	.loc 1 22319 0
	movq	-8(%rbp), %rax	# insn, tmp271
	movq	%rax, %rdi	# tmp271,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57393
	je	.L4679	#,
	.loc 1 22319 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp272
	movq	%rax, %rdi	# tmp272,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57393
	jne	.L4680	#,
.L4679:
	.loc 1 22321 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22327 0
	jmp	.L4665	#
.L4680:
	.loc 1 22325 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22327 0
	jmp	.L4665	#
.L4654:
	.loc 1 22332 0
	movq	-8(%rbp), %rax	# insn, tmp273
	movq	%rax, %rdi	# tmp273,
	call	extract_constrain_insn_cached	#
	.loc 1 22333 0
	movq	-8(%rbp), %rax	# insn, tmp274
	movq	%rax, %rdi	# tmp274,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57393
	je	.L4682	#,
	.loc 1 22333 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4211
	testl	%eax, %eax	# which_alternative.4211
	jne	.L4682	#,
	movq	-8(%rbp), %rax	# insn, tmp275
	movq	%rax, %rdi	# tmp275,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57393
	jne	.L4683	#,
.L4682:
	.loc 1 22335 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22341 0
	jmp	.L4665	#
.L4683:
	.loc 1 22339 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22341 0
	jmp	.L4665	#
.L4653:
	.loc 1 22360 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 22361 0
	jmp	.L4665	#
.L4652:
	.loc 1 22364 0
	movq	-8(%rbp), %rax	# insn, tmp276
	movq	%rax, %rdi	# tmp276,
	call	extract_constrain_insn_cached	#
	.loc 1 22365 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4212
	cmpl	$3, %eax	#, which_alternative.4212
	je	.L4685	#,
	.loc 1 22365 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57392
	je	.L4686	#,
.L4685:
	.loc 1 22365 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4213
	cmpl	$3, %eax	#, which_alternative.4213
	je	.L4686	#,
	.loc 1 22365 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57392
	je	.L4687	#,
.L4686:
	.loc 1 22367 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22373 0
	jmp	.L4665	#
.L4687:
	.loc 1 22371 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22373 0
	jmp	.L4665	#
.L4651:
	.loc 1 22376 0
	movq	-8(%rbp), %rax	# insn, tmp277
	movq	%rax, %rdi	# tmp277,
	call	extract_constrain_insn_cached	#
	.loc 1 22377 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4214
	cmpl	$2, %eax	#, which_alternative.4214
	je	.L4689	#,
	.loc 1 22377 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57392
	je	.L4690	#,
.L4689:
	.loc 1 22377 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4215
	cmpl	$2, %eax	#, which_alternative.4215
	je	.L4690	#,
	.loc 1 22377 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57392
	je	.L4691	#,
.L4690:
	.loc 1 22379 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22385 0
	jmp	.L4665	#
.L4691:
	.loc 1 22383 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22385 0
	jmp	.L4665	#
.L4650:
	.loc 1 22388 0
	movq	-8(%rbp), %rax	# insn, tmp278
	movq	%rax, %rdi	# tmp278,
	call	extract_constrain_insn_cached	#
	.loc 1 22389 0
	movq	-8(%rbp), %rax	# insn, tmp279
	movq	%rax, %rdi	# tmp279,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57393
	je	.L4693	#,
	.loc 1 22389 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4216
	testl	%eax, %eax	# which_alternative.4216
	jne	.L4693	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57392
	jne	.L4693	#,
	movq	-8(%rbp), %rax	# insn, tmp280
	movq	%rax, %rdi	# tmp280,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57393
	jne	.L4694	#,
.L4693:
	.loc 1 22391 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22397 0
	jmp	.L4665	#
.L4694:
	.loc 1 22395 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22397 0
	jmp	.L4665	#
.L4649:
	.loc 1 22400 0
	movq	-8(%rbp), %rax	# insn, tmp281
	movq	%rax, %rdi	# tmp281,
	call	extract_constrain_insn_cached	#
	.loc 1 22401 0
	movq	-8(%rbp), %rax	# insn, tmp282
	movq	%rax, %rdi	# tmp282,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57393
	je	.L4696	#,
	.loc 1 22401 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4217
	cmpl	$2, %eax	#, which_alternative.4217
	je	.L4696	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57392
	jne	.L4696	#,
	movq	-8(%rbp), %rax	# insn, tmp283
	movq	%rax, %rdi	# tmp283,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57393
	jne	.L4697	#,
.L4696:
	.loc 1 22403 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22409 0
	jmp	.L4665	#
.L4697:
	.loc 1 22407 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22409 0
	jmp	.L4665	#
.L4648:
	.loc 1 22412 0
	movq	-8(%rbp), %rax	# insn, tmp284
	movq	%rax, %rdi	# tmp284,
	call	extract_constrain_insn_cached	#
	.loc 1 22413 0
	movq	-8(%rbp), %rax	# insn, tmp285
	movq	%rax, %rdi	# tmp285,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57393
	je	.L4699	#,
	.loc 1 22413 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4218
	cmpl	$2, %eax	#, which_alternative.4218
	je	.L4699	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57394
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57392
	jne	.L4699	#,
	movq	-8(%rbp), %rax	# insn, tmp286
	movq	%rax, %rdi	# tmp286,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57393
	jne	.L4700	#,
.L4699:
	.loc 1 22415 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22421 0
	jmp	.L4665	#
.L4700:
	.loc 1 22419 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22421 0
	jmp	.L4665	#
.L4647:
	.loc 1 22424 0
	movq	-8(%rbp), %rax	# insn, tmp287
	movq	%rax, %rdi	# tmp287,
	call	extract_constrain_insn_cached	#
	.loc 1 22425 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4219
	testl	%eax, %eax	# which_alternative.4219
	je	.L4702	#,
	.loc 1 22425 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4220
	cmpl	$1, %eax	#, which_alternative.4220
	je	.L4702	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4221
	cmpl	$2, %eax	#, which_alternative.4221
	je	.L4702	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4222
	cmpl	$3, %eax	#, which_alternative.4222
	je	.L4703	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4223
	cmpl	$4, %eax	#, which_alternative.4223
	jne	.L4702	#,
.L4703:
	.loc 1 22427 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22433 0
	jmp	.L4665	#
.L4702:
	.loc 1 22431 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22433 0
	jmp	.L4665	#
.L4646:
	.loc 1 22437 0
	movq	-8(%rbp), %rax	# insn, tmp288
	movq	%rax, %rdi	# tmp288,
	call	extract_constrain_insn_cached	#
	.loc 1 22438 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4224
	cmpl	$1, %eax	#, which_alternative.4224
	jne	.L4705	#,
	.loc 1 22440 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22446 0
	jmp	.L4665	#
.L4705:
	.loc 1 22444 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22446 0
	jmp	.L4665	#
.L4645:
	.loc 1 22449 0
	movq	-8(%rbp), %rax	# insn, tmp289
	movq	%rax, %rdi	# tmp289,
	call	extract_constrain_insn_cached	#
	.loc 1 22450 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4225
	cmpl	$5, %eax	#, which_alternative.4225
	je	.L4707	#,
	.loc 1 22450 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4226
	cmpl	$6, %eax	#, which_alternative.4226
	je	.L4707	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4227
	cmpl	$7, %eax	#, which_alternative.4227
	je	.L4707	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4228
	cmpl	$8, %eax	#, which_alternative.4228
	je	.L4707	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4229
	cmpl	$4, %eax	#, which_alternative.4229
	je	.L4707	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4230
	testl	%eax, %eax	# flag_pic.4230
	je	.L4708	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57394
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57392
	je	.L4708	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4231
	testl	%eax, %eax	# flag_pic.4231
	je	.L4707	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57394
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57392
	je	.L4707	#,
.L4708:
	.loc 1 22452 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22458 0
	jmp	.L4665	#
.L4707:
	.loc 1 22456 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22458 0
	jmp	.L4665	#
.L4644:
	.loc 1 22461 0
	movq	-8(%rbp), %rax	# insn, tmp290
	movq	%rax, %rdi	# tmp290,
	call	extract_constrain_insn_cached	#
	.loc 1 22462 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4232
	testl	%eax, %eax	# which_alternative.4232
	jne	.L4710	#,
	.loc 1 22464 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22470 0
	jmp	.L4665	#
.L4710:
	.loc 1 22468 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22470 0
	jmp	.L4665	#
.L4643:
	.loc 1 22473 0
	movq	-8(%rbp), %rax	# insn, tmp291
	movq	%rax, %rdi	# tmp291,
	call	extract_constrain_insn_cached	#
	.loc 1 22474 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57394
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57392
	je	.L4712	#,
	.loc 1 22474 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4233
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4234
	movl	%eax, %ecx	# ix86_cpu.4235, tmp313
	sarl	%cl, %edx	# tmp313, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4713	#,
.L4712:
	.loc 1 22474 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57394
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57392
	je	.L4713	#,
	.loc 1 22474 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4236
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4237
	movl	%eax, %ecx	# ix86_cpu.4238, tmp315
	sarl	%cl, %edx	# tmp315, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4714	#,
.L4713:
	.loc 1 22476 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22482 0
	jmp	.L4665	#
.L4714:
	.loc 1 22480 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22482 0
	jmp	.L4665	#
.L4642:
	.loc 1 22487 0
	movq	-8(%rbp), %rax	# insn, tmp292
	movq	%rax, %rdi	# tmp292,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57393
	je	.L4716	#,
	.loc 1 22487 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp293
	movq	%rax, %rdi	# tmp293,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57393
	jne	.L4717	#,
.L4716:
	.loc 1 22489 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22495 0
	jmp	.L4665	#
.L4717:
	.loc 1 22493 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22495 0
	jmp	.L4665	#
.L4641:
	.loc 1 22498 0
	movq	-8(%rbp), %rax	# insn, tmp294
	movq	%rax, %rdi	# tmp294,
	call	extract_constrain_insn_cached	#
	.loc 1 22499 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4239
	cmpl	$3, %eax	#, which_alternative.4239
	jne	.L4719	#,
	.loc 1 22499 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4240
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4241
	movl	%eax, %ecx	# ix86_cpu.4242, tmp317
	sarl	%cl, %edx	# tmp317, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4720	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4243
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4244
	movl	%eax, %ecx	# ix86_cpu.4245, tmp319
	sarl	%cl, %edx	# tmp319, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4720	#,
.L4719:
	.loc 1 22499 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4246
	cmpl	$3, %eax	#, which_alternative.4246
	jne	.L4721	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4247
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4248
	movl	%eax, %ecx	# ix86_cpu.4249, tmp321
	sarl	%cl, %edx	# tmp321, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4722	#,
	.loc 1 22499 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4250
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4251
	movl	%eax, %ecx	# ix86_cpu.4252, tmp323
	sarl	%cl, %edx	# tmp323, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4722	#,
.L4721:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4253
	cmpl	$3, %eax	#, which_alternative.4253
	je	.L4722	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4254
	cmpl	$5, %eax	#, which_alternative.4254
	je	.L4722	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4255
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4256
	movl	%eax, %ecx	# ix86_cpu.4257, tmp325
	sarl	%cl, %edx	# tmp325, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4720	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4258
	cmpl	$2, %eax	#, which_alternative.4258
	jne	.L4720	#,
.L4722:
	.loc 1 22499 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4259
	cmpl	$3, %eax	#, which_alternative.4259
	jne	.L4723	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4260
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4261
	movl	%eax, %ecx	# ix86_cpu.4262, tmp327
	sarl	%cl, %edx	# tmp327, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4724	#,
	.loc 1 22499 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4263
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4264
	movl	%eax, %ecx	# ix86_cpu.4265, tmp329
	sarl	%cl, %edx	# tmp329, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4724	#,
.L4723:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4266
	cmpl	$3, %eax	#, which_alternative.4266
	je	.L4720	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4267
	cmpl	$5, %eax	#, which_alternative.4267
	je	.L4720	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4268
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4269
	movl	%eax, %ecx	# ix86_cpu.4270, tmp331
	sarl	%cl, %edx	# tmp331, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4724	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4271
	cmpl	$2, %eax	#, which_alternative.4271
	jne	.L4724	#,
.L4720:
	.loc 1 22501 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22507 0
	jmp	.L4665	#
.L4724:
	.loc 1 22505 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22507 0
	jmp	.L4665	#
.L4640:
	.loc 1 22510 0
	movq	-8(%rbp), %rax	# insn, tmp295
	movq	%rax, %rdi	# tmp295,
	call	extract_constrain_insn_cached	#
	.loc 1 22511 0
	movq	-8(%rbp), %rax	# insn, tmp296
	movq	%rax, %rdi	# tmp296,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57393
	je	.L4726	#,
	.loc 1 22511 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4272
	testl	%eax, %eax	# which_alternative.4272
	je	.L4727	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4273
	cmpl	$1, %eax	#, which_alternative.4273
	jne	.L4728	#,
.L4727:
	.loc 1 22511 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4274
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4275
	movl	%eax, %ecx	# ix86_cpu.4276, tmp333
	sarl	%cl, %edx	# tmp333, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4729	#,
	.loc 1 22511 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.4277
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4278
	movl	%eax, %ecx	# ix86_cpu.4279, tmp335
	sarl	%cl, %edx	# tmp335, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4729	#,
.L4728:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4280
	cmpl	$2, %eax	#, which_alternative.4280
	je	.L4730	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4281
	cmpl	$3, %eax	#, which_alternative.4281
	je	.L4730	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4282
	cmpl	$4, %eax	#, which_alternative.4282
	jne	.L4731	#,
.L4730:
	.loc 1 22511 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57394
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57392
	jne	.L4729	#,
.L4731:
	.loc 1 22511 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4283
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4284
	movl	%eax, %ecx	# ix86_cpu.4285, tmp337
	sarl	%cl, %edx	# tmp337, D.57392
	movl	%edx, %eax	# D.57392, D.57392
	andl	$1, %eax	#, D.57392
	testl	%eax, %eax	# D.57392
	je	.L4729	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4286
	testl	%eax, %eax	# which_alternative.4286
	je	.L4726	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4287
	cmpl	$1, %eax	#, which_alternative.4287
	je	.L4726	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4288
	cmpl	$3, %eax	#, which_alternative.4288
	je	.L4726	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4289
	cmpl	$4, %eax	#, which_alternative.4289
	jne	.L4729	#,
.L4726:
	.loc 1 22513 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22519 0
	jmp	.L4665	#
.L4729:
	.loc 1 22517 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22519 0
	jmp	.L4665	#
.L4639:
	.loc 1 22522 0
	movq	-8(%rbp), %rax	# insn, tmp297
	movq	%rax, %rdi	# tmp297,
	call	extract_constrain_insn_cached	#
	.loc 1 22523 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4290
	cmpl	$4, %eax	#, which_alternative.4290
	je	.L4733	#,
	.loc 1 22523 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4291
	cmpl	$5, %eax	#, which_alternative.4291
	je	.L4733	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4292
	cmpl	$6, %eax	#, which_alternative.4292
	je	.L4733	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4293
	cmpl	$7, %eax	#, which_alternative.4293
	je	.L4733	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4294
	cmpl	$8, %eax	#, which_alternative.4294
	je	.L4733	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4295
	cmpl	$9, %eax	#, which_alternative.4295
	je	.L4733	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4296
	testl	%eax, %eax	# flag_pic.4296
	je	.L4734	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57394
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57392
	je	.L4734	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4297
	testl	%eax, %eax	# flag_pic.4297
	je	.L4733	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57394
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57394,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57392
	je	.L4733	#,
.L4734:
	.loc 1 22525 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22531 0
	jmp	.L4665	#
.L4733:
	.loc 1 22529 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22531 0
	jmp	.L4665	#
.L4638:
	.loc 1 22843 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22844 0
	jmp	.L4665	#
.L4636:
	.loc 1 22847 0
	movq	-8(%rbp), %rax	# insn, tmp298
	movq	32(%rax), %rax	# insn_26->fld[3].rtx, D.57394
	movzwl	(%rax), %eax	# _265->code, D.57395
	cmpw	$40, %ax	#, D.57395
	je	.L4635	#,
	.loc 1 22848 0
	movq	-8(%rbp), %rax	# insn, tmp299
	movq	32(%rax), %rax	# insn_26->fld[3].rtx, D.57394
	movq	%rax, %rdi	# D.57394,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57392
	jns	.L4635	#,
	.loc 1 22849 0
	movq	-8(%rbp), %rax	# insn, tmp300
	movl	$__FUNCTION__.20296, %ecx	#,
	movl	$22849, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp300,
	call	_fatal_insn_not_found	#
.L4635:
	.loc 1 22851 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22852 0
	nop
.L4665:
	.loc 1 22856 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp301
	movq	%rax, -8(%rbp)	# tmp301, insn
	.loc 1 22857 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L4737	#,
	cmpl	$1, %eax	#, casenum
	jg	.L4738	#,
	testl	%eax, %eax	# casenum
	je	.L4739	#,
	jmp	.L4736	#
.L4738:
	cmpl	$2, %eax	#, casenum
	je	.L4740	#,
	cmpl	$3, %eax	#, casenum
	je	.L4741	#,
	jmp	.L4736	#
.L4739:
	.loc 1 22860 0
	movl	$1, %eax	#, D.57392
	jmp	.L4742	#
.L4737:
	.loc 1 22863 0
	movl	$15, %eax	#, D.57392
	jmp	.L4742	#
.L4740:
	.loc 1 22866 0
	movl	$1, %eax	#, D.57392
	jmp	.L4742	#
.L4741:
	.loc 1 22869 0
	movl	$1, %eax	#, D.57392
	jmp	.L4742	#
.L4736:
	.loc 1 22872 0
	movl	$__FUNCTION__.20296, %edx	#,
	movl	$22872, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L4742:
	.loc 1 22874 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE66:
	.size	athlon_ieu_unit_blockage, .-athlon_ieu_unit_blockage
	.type	athlon_ieu_unit_conflict_cost, @function
athlon_ieu_unit_conflict_cost:
.LFB67:
	.loc 1 22881 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 22885 0
	movq	-24(%rbp), %rax	# executing_insn, tmp257
	movq	%rax, -8(%rbp)	# tmp257, insn
	.loc 1 22886 0
	movq	-8(%rbp), %rax	# insn, tmp258
	movl	40(%rax), %eax	# insn_26->fld[4].rtint, D.57397
	testl	%eax, %eax	# D.57397
	js	.L4744	#,
	.loc 1 22886 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp259
	movl	40(%rax), %eax	# insn_26->fld[4].rtint, iftmp.4298
	jmp	.L4745	#
.L4744:
	.loc 1 22886 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp260
	movq	%rax, %rdi	# tmp260,
	call	recog_memoized_1	#
.L4745:
	.loc 1 22886 0 discriminator 3
	addl	$1, %eax	#, tmp261
	cmpl	$657, %eax	#, tmp261
	ja	.L4746	#,
	movl	%eax, %eax	# tmp261, tmp262
	movq	.L4748(,%rax,8), %rax	#, tmp263
	jmp	*%rax	# tmp263
	.section	.rodata
	.align 8
	.align 4
.L4748:
	.quad	.L4747
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4750
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4751
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4752
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4753
	.quad	.L4753
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4753
	.quad	.L4754
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4755
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4756
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4757
	.quad	.L4757
	.quad	.L4758
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4759
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4760
	.quad	.L4761
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4762
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4763
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4764
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4765
	.quad	.L4766
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4765
	.quad	.L4767
	.quad	.L4766
	.quad	.L4768
	.quad	.L4765
	.quad	.L4766
	.quad	.L4766
	.quad	.L4769
	.quad	.L4766
	.quad	.L4766
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4770
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4746
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4771
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4772
	.quad	.L4746
	.quad	.L4772
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4746
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.quad	.L4749
	.text
.L4772:
	.loc 1 22890 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp264
	movq	%rax, %rdi	# tmp264,
	call	extract_constrain_insn_cached	#
	.loc 1 22891 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4299
	cmpl	$2, %eax	#, which_alternative.4299
	je	.L4773	#,
	.loc 1 22891 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4300
	cmpl	$3, %eax	#, which_alternative.4300
	jne	.L4774	#,
.L4773:
	.loc 1 22893 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22899 0
	jmp	.L4776	#
.L4774:
	.loc 1 22897 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22899 0
	jmp	.L4776	#
.L4771:
	.loc 1 22931 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 22932 0
	jmp	.L4776	#
.L4770:
	.loc 1 22935 0
	movq	-8(%rbp), %rax	# insn, tmp265
	movq	%rax, %rdi	# tmp265,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57398
	jne	.L4777	#,
	.loc 1 22937 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22943 0
	jmp	.L4776	#
.L4777:
	.loc 1 22941 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22943 0
	jmp	.L4776	#
.L4769:
	.loc 1 22946 0
	movq	-8(%rbp), %rax	# insn, tmp266
	movq	%rax, %rdi	# tmp266,
	call	extract_constrain_insn_cached	#
	.loc 1 22947 0
	movq	-8(%rbp), %rax	# insn, tmp267
	movq	%rax, %rdi	# tmp267,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57398
	je	.L4779	#,
	.loc 1 22947 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4301
	cmpl	$2, %eax	#, which_alternative.4301
	je	.L4779	#,
	movq	-8(%rbp), %rax	# insn, tmp268
	movq	%rax, %rdi	# tmp268,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57398
	jne	.L4780	#,
.L4779:
	.loc 1 22949 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22955 0
	jmp	.L4776	#
.L4780:
	.loc 1 22953 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22955 0
	jmp	.L4776	#
.L4768:
	.loc 1 22958 0
	movq	-8(%rbp), %rax	# insn, tmp269
	movq	%rax, %rdi	# tmp269,
	call	extract_constrain_insn_cached	#
	.loc 1 22959 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4302
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4303
	movl	%eax, %ecx	# ix86_cpu.4304, tmp305
	sarl	%cl, %edx	# tmp305, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4782	#,
	.loc 1 22959 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	const1_operand	#
	testl	%eax, %eax	# D.57397
	jne	.L4783	#,
.L4782:
	.loc 1 22959 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4305
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4306
	movl	%eax, %ecx	# ix86_cpu.4307, tmp307
	sarl	%cl, %edx	# tmp307, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4783	#,
	.loc 1 22959 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	const1_operand	#
	testl	%eax, %eax	# D.57397
	jne	.L4784	#,
.L4783:
	.loc 1 22961 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22967 0
	jmp	.L4776	#
.L4784:
	.loc 1 22965 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22967 0
	jmp	.L4776	#
.L4767:
	.loc 1 22970 0
	movq	-8(%rbp), %rax	# insn, tmp270
	movq	%rax, %rdi	# tmp270,
	call	extract_constrain_insn_cached	#
	.loc 1 22971 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4308
	testl	%eax, %eax	# which_alternative.4308
	jne	.L4786	#,
	.loc 1 22971 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4309
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4310
	movl	%eax, %ecx	# ix86_cpu.4311, tmp309
	sarl	%cl, %edx	# tmp309, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4786	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	const1_operand	#
	testl	%eax, %eax	# D.57397
	jne	.L4787	#,
.L4786:
	.loc 1 22971 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4312
	testl	%eax, %eax	# which_alternative.4312
	jne	.L4787	#,
	.loc 1 22971 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4313
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4314
	movl	%eax, %ecx	# ix86_cpu.4315, tmp311
	sarl	%cl, %edx	# tmp311, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4787	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	const1_operand	#
	testl	%eax, %eax	# D.57397
	jne	.L4788	#,
.L4787:
	.loc 1 22973 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22979 0
	jmp	.L4776	#
.L4788:
	.loc 1 22977 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22979 0
	jmp	.L4776	#
.L4766:
	.loc 1 22987 0
	movq	-8(%rbp), %rax	# insn, tmp271
	movq	%rax, %rdi	# tmp271,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57398
	je	.L4790	#,
	.loc 1 22987 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp272
	movq	%rax, %rdi	# tmp272,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57398
	jne	.L4791	#,
.L4790:
	.loc 1 22989 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 22995 0
	jmp	.L4776	#
.L4791:
	.loc 1 22993 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 22995 0
	jmp	.L4776	#
.L4765:
	.loc 1 23000 0
	movq	-8(%rbp), %rax	# insn, tmp273
	movq	%rax, %rdi	# tmp273,
	call	extract_constrain_insn_cached	#
	.loc 1 23001 0
	movq	-8(%rbp), %rax	# insn, tmp274
	movq	%rax, %rdi	# tmp274,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57398
	je	.L4793	#,
	.loc 1 23001 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4316
	testl	%eax, %eax	# which_alternative.4316
	jne	.L4793	#,
	movq	-8(%rbp), %rax	# insn, tmp275
	movq	%rax, %rdi	# tmp275,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57398
	jne	.L4794	#,
.L4793:
	.loc 1 23003 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23009 0
	jmp	.L4776	#
.L4794:
	.loc 1 23007 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23009 0
	jmp	.L4776	#
.L4764:
	.loc 1 23028 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 23029 0
	jmp	.L4776	#
.L4763:
	.loc 1 23032 0
	movq	-8(%rbp), %rax	# insn, tmp276
	movq	%rax, %rdi	# tmp276,
	call	extract_constrain_insn_cached	#
	.loc 1 23033 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4317
	cmpl	$3, %eax	#, which_alternative.4317
	je	.L4796	#,
	.loc 1 23033 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57397
	je	.L4797	#,
.L4796:
	.loc 1 23033 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4318
	cmpl	$3, %eax	#, which_alternative.4318
	je	.L4797	#,
	.loc 1 23033 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57397
	je	.L4798	#,
.L4797:
	.loc 1 23035 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23041 0
	jmp	.L4776	#
.L4798:
	.loc 1 23039 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23041 0
	jmp	.L4776	#
.L4762:
	.loc 1 23044 0
	movq	-8(%rbp), %rax	# insn, tmp277
	movq	%rax, %rdi	# tmp277,
	call	extract_constrain_insn_cached	#
	.loc 1 23045 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4319
	cmpl	$2, %eax	#, which_alternative.4319
	je	.L4800	#,
	.loc 1 23045 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57397
	je	.L4801	#,
.L4800:
	.loc 1 23045 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4320
	cmpl	$2, %eax	#, which_alternative.4320
	je	.L4801	#,
	.loc 1 23045 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57397
	je	.L4802	#,
.L4801:
	.loc 1 23047 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23053 0
	jmp	.L4776	#
.L4802:
	.loc 1 23051 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23053 0
	jmp	.L4776	#
.L4761:
	.loc 1 23056 0
	movq	-8(%rbp), %rax	# insn, tmp278
	movq	%rax, %rdi	# tmp278,
	call	extract_constrain_insn_cached	#
	.loc 1 23057 0
	movq	-8(%rbp), %rax	# insn, tmp279
	movq	%rax, %rdi	# tmp279,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57398
	je	.L4804	#,
	.loc 1 23057 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4321
	testl	%eax, %eax	# which_alternative.4321
	jne	.L4804	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57397
	jne	.L4804	#,
	movq	-8(%rbp), %rax	# insn, tmp280
	movq	%rax, %rdi	# tmp280,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57398
	jne	.L4805	#,
.L4804:
	.loc 1 23059 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23065 0
	jmp	.L4776	#
.L4805:
	.loc 1 23063 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23065 0
	jmp	.L4776	#
.L4760:
	.loc 1 23068 0
	movq	-8(%rbp), %rax	# insn, tmp281
	movq	%rax, %rdi	# tmp281,
	call	extract_constrain_insn_cached	#
	.loc 1 23069 0
	movq	-8(%rbp), %rax	# insn, tmp282
	movq	%rax, %rdi	# tmp282,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57398
	je	.L4807	#,
	.loc 1 23069 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4322
	cmpl	$2, %eax	#, which_alternative.4322
	je	.L4807	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57397
	jne	.L4807	#,
	movq	-8(%rbp), %rax	# insn, tmp283
	movq	%rax, %rdi	# tmp283,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57398
	jne	.L4808	#,
.L4807:
	.loc 1 23071 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23077 0
	jmp	.L4776	#
.L4808:
	.loc 1 23075 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23077 0
	jmp	.L4776	#
.L4759:
	.loc 1 23080 0
	movq	-8(%rbp), %rax	# insn, tmp284
	movq	%rax, %rdi	# tmp284,
	call	extract_constrain_insn_cached	#
	.loc 1 23081 0
	movq	-8(%rbp), %rax	# insn, tmp285
	movq	%rax, %rdi	# tmp285,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57398
	je	.L4810	#,
	.loc 1 23081 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4323
	cmpl	$2, %eax	#, which_alternative.4323
	je	.L4810	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57399
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57397
	jne	.L4810	#,
	movq	-8(%rbp), %rax	# insn, tmp286
	movq	%rax, %rdi	# tmp286,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57398
	jne	.L4811	#,
.L4810:
	.loc 1 23083 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23089 0
	jmp	.L4776	#
.L4811:
	.loc 1 23087 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23089 0
	jmp	.L4776	#
.L4758:
	.loc 1 23092 0
	movq	-8(%rbp), %rax	# insn, tmp287
	movq	%rax, %rdi	# tmp287,
	call	extract_constrain_insn_cached	#
	.loc 1 23093 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4324
	testl	%eax, %eax	# which_alternative.4324
	je	.L4813	#,
	.loc 1 23093 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4325
	cmpl	$1, %eax	#, which_alternative.4325
	je	.L4813	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4326
	cmpl	$2, %eax	#, which_alternative.4326
	je	.L4813	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4327
	cmpl	$3, %eax	#, which_alternative.4327
	je	.L4814	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4328
	cmpl	$4, %eax	#, which_alternative.4328
	jne	.L4813	#,
.L4814:
	.loc 1 23095 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23101 0
	jmp	.L4776	#
.L4813:
	.loc 1 23099 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23101 0
	jmp	.L4776	#
.L4757:
	.loc 1 23105 0
	movq	-8(%rbp), %rax	# insn, tmp288
	movq	%rax, %rdi	# tmp288,
	call	extract_constrain_insn_cached	#
	.loc 1 23106 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4329
	cmpl	$1, %eax	#, which_alternative.4329
	jne	.L4816	#,
	.loc 1 23108 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23114 0
	jmp	.L4776	#
.L4816:
	.loc 1 23112 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23114 0
	jmp	.L4776	#
.L4756:
	.loc 1 23117 0
	movq	-8(%rbp), %rax	# insn, tmp289
	movq	%rax, %rdi	# tmp289,
	call	extract_constrain_insn_cached	#
	.loc 1 23118 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4330
	cmpl	$5, %eax	#, which_alternative.4330
	je	.L4818	#,
	.loc 1 23118 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4331
	cmpl	$6, %eax	#, which_alternative.4331
	je	.L4818	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4332
	cmpl	$7, %eax	#, which_alternative.4332
	je	.L4818	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4333
	cmpl	$8, %eax	#, which_alternative.4333
	je	.L4818	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4334
	cmpl	$4, %eax	#, which_alternative.4334
	je	.L4818	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4335
	testl	%eax, %eax	# flag_pic.4335
	je	.L4819	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57399
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57397
	je	.L4819	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4336
	testl	%eax, %eax	# flag_pic.4336
	je	.L4818	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57399
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57397
	je	.L4818	#,
.L4819:
	.loc 1 23120 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23126 0
	jmp	.L4776	#
.L4818:
	.loc 1 23124 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23126 0
	jmp	.L4776	#
.L4755:
	.loc 1 23129 0
	movq	-8(%rbp), %rax	# insn, tmp290
	movq	%rax, %rdi	# tmp290,
	call	extract_constrain_insn_cached	#
	.loc 1 23130 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4337
	testl	%eax, %eax	# which_alternative.4337
	jne	.L4821	#,
	.loc 1 23132 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23138 0
	jmp	.L4776	#
.L4821:
	.loc 1 23136 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23138 0
	jmp	.L4776	#
.L4754:
	.loc 1 23141 0
	movq	-8(%rbp), %rax	# insn, tmp291
	movq	%rax, %rdi	# tmp291,
	call	extract_constrain_insn_cached	#
	.loc 1 23142 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57399
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57397
	je	.L4823	#,
	.loc 1 23142 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4338
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4339
	movl	%eax, %ecx	# ix86_cpu.4340, tmp313
	sarl	%cl, %edx	# tmp313, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4824	#,
.L4823:
	.loc 1 23142 0 discriminator 2
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57399
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57397
	je	.L4824	#,
	.loc 1 23142 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4341
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4342
	movl	%eax, %ecx	# ix86_cpu.4343, tmp315
	sarl	%cl, %edx	# tmp315, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4825	#,
.L4824:
	.loc 1 23144 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23150 0
	jmp	.L4776	#
.L4825:
	.loc 1 23148 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23150 0
	jmp	.L4776	#
.L4753:
	.loc 1 23155 0
	movq	-8(%rbp), %rax	# insn, tmp292
	movq	%rax, %rdi	# tmp292,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57398
	je	.L4827	#,
	.loc 1 23155 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp293
	movq	%rax, %rdi	# tmp293,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57398
	jne	.L4828	#,
.L4827:
	.loc 1 23157 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23163 0
	jmp	.L4776	#
.L4828:
	.loc 1 23161 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23163 0
	jmp	.L4776	#
.L4752:
	.loc 1 23166 0
	movq	-8(%rbp), %rax	# insn, tmp294
	movq	%rax, %rdi	# tmp294,
	call	extract_constrain_insn_cached	#
	.loc 1 23167 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4344
	cmpl	$3, %eax	#, which_alternative.4344
	jne	.L4830	#,
	.loc 1 23167 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4345
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4346
	movl	%eax, %ecx	# ix86_cpu.4347, tmp317
	sarl	%cl, %edx	# tmp317, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4831	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4348
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4349
	movl	%eax, %ecx	# ix86_cpu.4350, tmp319
	sarl	%cl, %edx	# tmp319, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4831	#,
.L4830:
	.loc 1 23167 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4351
	cmpl	$3, %eax	#, which_alternative.4351
	jne	.L4832	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4352
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4353
	movl	%eax, %ecx	# ix86_cpu.4354, tmp321
	sarl	%cl, %edx	# tmp321, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4833	#,
	.loc 1 23167 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4355
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4356
	movl	%eax, %ecx	# ix86_cpu.4357, tmp323
	sarl	%cl, %edx	# tmp323, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4833	#,
.L4832:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4358
	cmpl	$3, %eax	#, which_alternative.4358
	je	.L4833	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4359
	cmpl	$5, %eax	#, which_alternative.4359
	je	.L4833	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4360
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4361
	movl	%eax, %ecx	# ix86_cpu.4362, tmp325
	sarl	%cl, %edx	# tmp325, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4831	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4363
	cmpl	$2, %eax	#, which_alternative.4363
	jne	.L4831	#,
.L4833:
	.loc 1 23167 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4364
	cmpl	$3, %eax	#, which_alternative.4364
	jne	.L4834	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4365
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4366
	movl	%eax, %ecx	# ix86_cpu.4367, tmp327
	sarl	%cl, %edx	# tmp327, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4835	#,
	.loc 1 23167 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4368
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4369
	movl	%eax, %ecx	# ix86_cpu.4370, tmp329
	sarl	%cl, %edx	# tmp329, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4835	#,
.L4834:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4371
	cmpl	$3, %eax	#, which_alternative.4371
	je	.L4831	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4372
	cmpl	$5, %eax	#, which_alternative.4372
	je	.L4831	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4373
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4374
	movl	%eax, %ecx	# ix86_cpu.4375, tmp331
	sarl	%cl, %edx	# tmp331, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4835	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4376
	cmpl	$2, %eax	#, which_alternative.4376
	jne	.L4835	#,
.L4831:
	.loc 1 23169 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23175 0
	jmp	.L4776	#
.L4835:
	.loc 1 23173 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23175 0
	jmp	.L4776	#
.L4751:
	.loc 1 23178 0
	movq	-8(%rbp), %rax	# insn, tmp295
	movq	%rax, %rdi	# tmp295,
	call	extract_constrain_insn_cached	#
	.loc 1 23179 0
	movq	-8(%rbp), %rax	# insn, tmp296
	movq	%rax, %rdi	# tmp296,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57398
	je	.L4837	#,
	.loc 1 23179 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4377
	testl	%eax, %eax	# which_alternative.4377
	je	.L4838	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4378
	cmpl	$1, %eax	#, which_alternative.4378
	jne	.L4839	#,
.L4838:
	.loc 1 23179 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4379
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4380
	movl	%eax, %ecx	# ix86_cpu.4381, tmp333
	sarl	%cl, %edx	# tmp333, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4840	#,
	.loc 1 23179 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.4382
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4383
	movl	%eax, %ecx	# ix86_cpu.4384, tmp335
	sarl	%cl, %edx	# tmp335, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4840	#,
.L4839:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4385
	cmpl	$2, %eax	#, which_alternative.4385
	je	.L4841	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4386
	cmpl	$3, %eax	#, which_alternative.4386
	je	.L4841	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4387
	cmpl	$4, %eax	#, which_alternative.4387
	jne	.L4842	#,
.L4841:
	.loc 1 23179 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57399
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57397
	jne	.L4840	#,
.L4842:
	.loc 1 23179 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4388
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4389
	movl	%eax, %ecx	# ix86_cpu.4390, tmp337
	sarl	%cl, %edx	# tmp337, D.57397
	movl	%edx, %eax	# D.57397, D.57397
	andl	$1, %eax	#, D.57397
	testl	%eax, %eax	# D.57397
	je	.L4840	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4391
	testl	%eax, %eax	# which_alternative.4391
	je	.L4837	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4392
	cmpl	$1, %eax	#, which_alternative.4392
	je	.L4837	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4393
	cmpl	$3, %eax	#, which_alternative.4393
	je	.L4837	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4394
	cmpl	$4, %eax	#, which_alternative.4394
	jne	.L4840	#,
.L4837:
	.loc 1 23181 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23187 0
	jmp	.L4776	#
.L4840:
	.loc 1 23185 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23187 0
	jmp	.L4776	#
.L4750:
	.loc 1 23190 0
	movq	-8(%rbp), %rax	# insn, tmp297
	movq	%rax, %rdi	# tmp297,
	call	extract_constrain_insn_cached	#
	.loc 1 23191 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4395
	cmpl	$4, %eax	#, which_alternative.4395
	je	.L4844	#,
	.loc 1 23191 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4396
	cmpl	$5, %eax	#, which_alternative.4396
	je	.L4844	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4397
	cmpl	$6, %eax	#, which_alternative.4397
	je	.L4844	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4398
	cmpl	$7, %eax	#, which_alternative.4398
	je	.L4844	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4399
	cmpl	$8, %eax	#, which_alternative.4399
	je	.L4844	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4400
	cmpl	$9, %eax	#, which_alternative.4400
	je	.L4844	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4401
	testl	%eax, %eax	# flag_pic.4401
	je	.L4845	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57399
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57397
	je	.L4845	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4402
	testl	%eax, %eax	# flag_pic.4402
	je	.L4844	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57399
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57399,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57397
	je	.L4844	#,
.L4845:
	.loc 1 23193 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23199 0
	jmp	.L4776	#
.L4844:
	.loc 1 23197 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23199 0
	jmp	.L4776	#
.L4749:
	.loc 1 23511 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23512 0
	jmp	.L4776	#
.L4747:
	.loc 1 23515 0
	movq	-8(%rbp), %rax	# insn, tmp298
	movq	32(%rax), %rax	# insn_26->fld[3].rtx, D.57399
	movzwl	(%rax), %eax	# _265->code, D.57400
	cmpw	$40, %ax	#, D.57400
	je	.L4746	#,
	.loc 1 23516 0
	movq	-8(%rbp), %rax	# insn, tmp299
	movq	32(%rax), %rax	# insn_26->fld[3].rtx, D.57399
	movq	%rax, %rdi	# D.57399,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57397
	jns	.L4746	#,
	.loc 1 23517 0
	movq	-8(%rbp), %rax	# insn, tmp300
	movl	$__FUNCTION__.20703, %ecx	#,
	movl	$23517, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp300,
	call	_fatal_insn_not_found	#
.L4746:
	.loc 1 23519 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 23520 0
	nop
.L4776:
	.loc 1 23524 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp301
	movq	%rax, -8(%rbp)	# tmp301, insn
	.loc 1 23525 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L4848	#,
	cmpl	$1, %eax	#, casenum
	jg	.L4849	#,
	testl	%eax, %eax	# casenum
	je	.L4850	#,
	jmp	.L4847	#
.L4849:
	cmpl	$2, %eax	#, casenum
	je	.L4851	#,
	cmpl	$3, %eax	#, casenum
	je	.L4852	#,
	jmp	.L4847	#
.L4850:
	.loc 1 23528 0
	movl	$1, %eax	#, D.57397
	jmp	.L4853	#
.L4848:
	.loc 1 23531 0
	movl	$15, %eax	#, D.57397
	jmp	.L4853	#
.L4851:
	.loc 1 23534 0
	movl	$1, %eax	#, D.57397
	jmp	.L4853	#
.L4852:
	.loc 1 23537 0
	movl	$1, %eax	#, D.57397
	jmp	.L4853	#
.L4847:
	.loc 1 23540 0
	movl	$__FUNCTION__.20703, %edx	#,
	movl	$23540, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L4853:
	.loc 1 23542 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE67:
	.size	athlon_ieu_unit_conflict_cost, .-athlon_ieu_unit_conflict_cost
	.type	athlon_vectordec_unit_blockage, @function
athlon_vectordec_unit_blockage:
.LFB68:
	.loc 1 23549 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 23553 0
	movq	-24(%rbp), %rax	# executing_insn, tmp153
	movq	%rax, -8(%rbp)	# tmp153, insn
	.loc 1 23554 0
	movq	-8(%rbp), %rax	# insn, tmp154
	movl	40(%rax), %eax	# insn_20->fld[4].rtint, D.57402
	testl	%eax, %eax	# D.57402
	js	.L4855	#,
	.loc 1 23554 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp155
	movl	40(%rax), %eax	# insn_20->fld[4].rtint, iftmp.4403
	jmp	.L4856	#
.L4855:
	.loc 1 23554 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp156
	movq	%rax, %rdi	# tmp156,
	call	recog_memoized_1	#
.L4856:
	.loc 1 23554 0 discriminator 3
	addl	$1, %eax	#, tmp157
	cmpl	$806, %eax	#, tmp157
	ja	.L4857	#,
	movl	%eax, %eax	# tmp157, tmp158
	movq	.L4859(,%rax,8), %rax	#, tmp159
	jmp	*%rax	# tmp159
	.section	.rodata
	.align 8
	.align 4
.L4859:
	.quad	.L4858
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4861
	.quad	.L4861
	.quad	.L4861
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4861
	.quad	.L4861
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4861
	.quad	.L4861
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4862
	.quad	.L4861
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4863
	.quad	.L4864
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4865
	.quad	.L4865
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4866
	.quad	.L4866
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4867
	.quad	.L4867
	.quad	.L4867
	.quad	.L4867
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4868
	.quad	.L4857
	.quad	.L4869
	.quad	.L4869
	.quad	.L4869
	.quad	.L4869
	.quad	.L4870
	.quad	.L4871
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4870
	.quad	.L4857
	.quad	.L4870
	.quad	.L4857
	.quad	.L4870
	.quad	.L4857
	.quad	.L4870
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4870
	.quad	.L4872
	.quad	.L4857
	.quad	.L4870
	.quad	.L4872
	.quad	.L4857
	.quad	.L4870
	.quad	.L4872
	.quad	.L4857
	.quad	.L4870
	.quad	.L4872
	.quad	.L4857
	.quad	.L4873
	.quad	.L4873
	.quad	.L4873
	.quad	.L4873
	.quad	.L4873
	.quad	.L4873
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4874
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4860
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4863
	.quad	.L4860
	.quad	.L4863
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.quad	.L4860
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4863
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4857
	.quad	.L4860
	.text
.L4874:
	.loc 1 23557 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp160
	movq	%rax, %rdi	# tmp160,
	call	get_attr_type	#
	cmpl	$1, %eax	#, D.57403
	jne	.L4875	#,
	.loc 1 23559 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23565 0
	jmp	.L4877	#
.L4875:
	.loc 1 23563 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23565 0
	jmp	.L4877	#
.L4873:
	.loc 1 23573 0
	movq	-8(%rbp), %rax	# insn, tmp161
	movq	%rax, %rdi	# tmp161,
	call	extract_constrain_insn_cached	#
	.loc 1 23574 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4404
	testl	%eax, %eax	# which_alternative.4404
	jne	.L4878	#,
	.loc 1 23574 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp162
	movq	%rax, %rdi	# tmp162,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57404
	je	.L4878	#,
	movq	-8(%rbp), %rax	# insn, tmp163
	movq	%rax, %rdi	# tmp163,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57404
	jne	.L4879	#,
.L4878:
	.loc 1 23576 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23582 0
	jmp	.L4877	#
.L4879:
	.loc 1 23580 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23582 0
	jmp	.L4877	#
.L4872:
	.loc 1 23588 0
	movq	-8(%rbp), %rax	# insn, tmp164
	movq	%rax, %rdi	# tmp164,
	call	extract_constrain_insn_cached	#
	.loc 1 23589 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4405
	cmpl	$1, %eax	#, which_alternative.4405
	jne	.L4881	#,
	.loc 1 23591 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23597 0
	jmp	.L4877	#
.L4881:
	.loc 1 23595 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23597 0
	jmp	.L4877	#
.L4871:
	.loc 1 23600 0
	movq	-8(%rbp), %rax	# insn, tmp165
	movq	%rax, %rdi	# tmp165,
	call	extract_constrain_insn_cached	#
	.loc 1 23601 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4406
	cmpl	$1, %eax	#, which_alternative.4406
	je	.L4883	#,
	.loc 1 23601 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4407
	cmpl	$2, %eax	#, which_alternative.4407
	je	.L4883	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4408
	cmpl	$3, %eax	#, which_alternative.4408
	jne	.L4884	#,
.L4883:
	.loc 1 23603 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23609 0
	jmp	.L4877	#
.L4884:
	.loc 1 23607 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23609 0
	jmp	.L4877	#
.L4870:
	.loc 1 23620 0
	movq	-8(%rbp), %rax	# insn, tmp166
	movq	%rax, %rdi	# tmp166,
	call	extract_constrain_insn_cached	#
	.loc 1 23621 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4409
	testl	%eax, %eax	# which_alternative.4409
	je	.L4886	#,
	.loc 1 23623 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23629 0
	jmp	.L4877	#
.L4886:
	.loc 1 23627 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23629 0
	jmp	.L4877	#
.L4869:
	.loc 1 23635 0
	movq	-8(%rbp), %rax	# insn, tmp167
	movq	%rax, %rdi	# tmp167,
	call	extract_constrain_insn_cached	#
	.loc 1 23636 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4410
	cmpl	$1, %eax	#, which_alternative.4410
	jne	.L4888	#,
	.loc 1 23636 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp168
	movq	%rax, %rdi	# tmp168,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57404
	je	.L4889	#,
	movq	-8(%rbp), %rax	# insn, tmp169
	movq	%rax, %rdi	# tmp169,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57404
	jne	.L4888	#,
.L4889:
	.loc 1 23638 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23644 0
	jmp	.L4877	#
.L4888:
	.loc 1 23642 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23644 0
	jmp	.L4877	#
.L4868:
	.loc 1 23647 0
	movq	-8(%rbp), %rax	# insn, tmp170
	movq	%rax, %rdi	# tmp170,
	call	extract_constrain_insn_cached	#
	.loc 1 23648 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4411
	testl	%eax, %eax	# which_alternative.4411
	je	.L4891	#,
	.loc 1 23648 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4412
	cmpl	$1, %eax	#, which_alternative.4412
	jne	.L4892	#,
.L4891:
	.loc 1 23648 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp171
	movq	%rax, %rdi	# tmp171,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57404
	je	.L4893	#,
	.loc 1 23648 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp172
	movq	%rax, %rdi	# tmp172,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57404
	jne	.L4892	#,
.L4893:
	.loc 1 23648 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4413
	cmpl	$1, %eax	#, which_alternative.4413
	jne	.L4892	#,
	.loc 1 23650 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23656 0
	jmp	.L4877	#
.L4892:
	.loc 1 23654 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23656 0
	jmp	.L4877	#
.L4867:
	.loc 1 23662 0
	movq	-8(%rbp), %rax	# insn, tmp173
	movq	%rax, %rdi	# tmp173,
	call	extract_constrain_insn_cached	#
	.loc 1 23663 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4414
	cmpl	$3, %eax	#, which_alternative.4414
	je	.L4895	#,
	.loc 1 23663 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4415
	cmpl	$4, %eax	#, which_alternative.4415
	je	.L4895	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4416
	testl	%eax, %eax	# which_alternative.4416
	je	.L4896	#,
	.loc 1 23663 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4417
	cmpl	$1, %eax	#, which_alternative.4417
	je	.L4896	#,
	.loc 1 23663 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4418
	cmpl	$2, %eax	#, which_alternative.4418
	jne	.L4897	#,
.L4896:
	movq	-8(%rbp), %rax	# insn, tmp174
	movq	%rax, %rdi	# tmp174,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57404
	je	.L4895	#,
	movq	-8(%rbp), %rax	# insn, tmp175
	movq	%rax, %rdi	# tmp175,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57404
	jne	.L4897	#,
.L4895:
	.loc 1 23665 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23671 0
	jmp	.L4877	#
.L4897:
	.loc 1 23669 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23671 0
	jmp	.L4877	#
.L4866:
	.loc 1 23675 0
	movq	-8(%rbp), %rax	# insn, tmp176
	movq	%rax, %rdi	# tmp176,
	call	extract_constrain_insn_cached	#
	.loc 1 23676 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4419
	testl	%eax, %eax	# which_alternative.4419
	je	.L4899	#,
	.loc 1 23676 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4420
	cmpl	$1, %eax	#, which_alternative.4420
	je	.L4899	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4421
	cmpl	$2, %eax	#, which_alternative.4421
	je	.L4899	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4422
	cmpl	$3, %eax	#, which_alternative.4422
	je	.L4900	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4423
	cmpl	$4, %eax	#, which_alternative.4423
	jne	.L4899	#,
.L4900:
	.loc 1 23678 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23684 0
	jmp	.L4877	#
.L4899:
	.loc 1 23682 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23684 0
	jmp	.L4877	#
.L4865:
	.loc 1 23688 0
	movq	-8(%rbp), %rax	# insn, tmp177
	movq	%rax, %rdi	# tmp177,
	call	extract_constrain_insn_cached	#
	.loc 1 23689 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4424
	cmpl	$1, %eax	#, which_alternative.4424
	jne	.L4902	#,
	.loc 1 23689 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57405
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57405,
	call	memory_operand	#
	testl	%eax, %eax	# D.57402
	je	.L4903	#,
.L4902:
	.loc 1 23691 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23697 0
	jmp	.L4877	#
.L4903:
	.loc 1 23695 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23697 0
	jmp	.L4877	#
.L4864:
	.loc 1 23700 0
	movq	-8(%rbp), %rax	# insn, tmp178
	movq	%rax, %rdi	# tmp178,
	call	extract_constrain_insn_cached	#
	.loc 1 23701 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4425
	cmpl	$4, %eax	#, which_alternative.4425
	jne	.L4905	#,
	.loc 1 23703 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23709 0
	jmp	.L4877	#
.L4905:
	.loc 1 23707 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23709 0
	jmp	.L4877	#
.L4863:
	.loc 1 23715 0
	movq	-8(%rbp), %rax	# insn, tmp179
	movq	%rax, %rdi	# tmp179,
	call	extract_constrain_insn_cached	#
	.loc 1 23716 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4426
	testl	%eax, %eax	# which_alternative.4426
	je	.L4907	#,
	.loc 1 23716 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4427
	cmpl	$1, %eax	#, which_alternative.4427
	jne	.L4908	#,
.L4907:
	.loc 1 23718 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23724 0
	jmp	.L4877	#
.L4908:
	.loc 1 23722 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23724 0
	jmp	.L4877	#
.L4862:
	.loc 1 23727 0
	movq	-8(%rbp), %rax	# insn, tmp180
	movq	%rax, %rdi	# tmp180,
	call	extract_constrain_insn_cached	#
	.loc 1 23728 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4428
	testl	%eax, %eax	# which_alternative.4428
	jne	.L4910	#,
	.loc 1 23728 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57405
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57405,
	call	memory_operand	#
	testl	%eax, %eax	# D.57402
	je	.L4911	#,
.L4910:
	.loc 1 23730 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23736 0
	jmp	.L4877	#
.L4911:
	.loc 1 23734 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23736 0
	jmp	.L4877	#
.L4861:
	.loc 1 23746 0
	movq	-8(%rbp), %rax	# insn, tmp181
	movq	%rax, %rdi	# tmp181,
	call	extract_insn_cached	#
	.loc 1 23747 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57405
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57405,
	call	memory_operand	#
	testl	%eax, %eax	# D.57402
	je	.L4913	#,
	.loc 1 23749 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23755 0
	jmp	.L4877	#
.L4913:
	.loc 1 23753 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23755 0
	jmp	.L4877	#
.L4858:
	.loc 1 23758 0
	movq	-8(%rbp), %rax	# insn, tmp182
	movq	32(%rax), %rax	# insn_20->fld[3].rtx, D.57405
	movzwl	(%rax), %eax	# _92->code, D.57406
	cmpw	$40, %ax	#, D.57406
	je	.L4860	#,
	.loc 1 23759 0
	movq	-8(%rbp), %rax	# insn, tmp183
	movq	32(%rax), %rax	# insn_20->fld[3].rtx, D.57405
	movq	%rax, %rdi	# D.57405,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57402
	jns	.L4860	#,
	.loc 1 23760 0
	movq	-8(%rbp), %rax	# insn, tmp184
	movl	$__FUNCTION__.20769, %ecx	#,
	movl	$23760, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp184,
	call	_fatal_insn_not_found	#
.L4860:
	.loc 1 23954 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 23955 0
	jmp	.L4877	#
.L4857:
	.loc 1 23958 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 23959 0
	nop
.L4877:
	.loc 1 23963 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp185
	movq	%rax, -8(%rbp)	# tmp185, insn
	.loc 1 23964 0
	movl	-12(%rbp), %eax	# casenum, casenum
	testl	%eax, %eax	# casenum
	je	.L4916	#,
	cmpl	$1, %eax	#, casenum
	je	.L4917	#,
	jmp	.L4960	#
.L4916:
	.loc 1 23967 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4917:
	.loc 1 23970 0
	movq	-8(%rbp), %rax	# insn, tmp187
	movl	40(%rax), %eax	# insn_99->fld[4].rtint, D.57402
	testl	%eax, %eax	# D.57402
	js	.L4919	#,
	.loc 1 23970 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp188
	movl	40(%rax), %eax	# insn_99->fld[4].rtint, iftmp.4429
	jmp	.L4920	#
.L4919:
	.loc 1 23970 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp189
	movq	%rax, %rdi	# tmp189,
	call	recog_memoized_1	#
.L4920:
	.loc 1 23970 0 discriminator 3
	addl	$1, %eax	#, tmp190
	cmpl	$806, %eax	#, tmp190
	ja	.L4921	#,
	movl	%eax, %eax	# tmp190, tmp191
	movq	.L4923(,%rax,8), %rax	#, tmp192
	jmp	*%rax	# tmp192
	.section	.rodata
	.align 8
	.align 4
.L4923:
	.quad	.L4922
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4925
	.quad	.L4925
	.quad	.L4925
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4925
	.quad	.L4925
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4925
	.quad	.L4925
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4926
	.quad	.L4925
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4927
	.quad	.L4928
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4929
	.quad	.L4929
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4930
	.quad	.L4930
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4931
	.quad	.L4931
	.quad	.L4931
	.quad	.L4931
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4932
	.quad	.L4921
	.quad	.L4933
	.quad	.L4933
	.quad	.L4933
	.quad	.L4933
	.quad	.L4934
	.quad	.L4935
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4934
	.quad	.L4921
	.quad	.L4934
	.quad	.L4921
	.quad	.L4934
	.quad	.L4921
	.quad	.L4934
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4934
	.quad	.L4936
	.quad	.L4921
	.quad	.L4934
	.quad	.L4936
	.quad	.L4921
	.quad	.L4934
	.quad	.L4936
	.quad	.L4921
	.quad	.L4934
	.quad	.L4936
	.quad	.L4921
	.quad	.L4937
	.quad	.L4937
	.quad	.L4937
	.quad	.L4937
	.quad	.L4937
	.quad	.L4937
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4938
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4924
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4927
	.quad	.L4924
	.quad	.L4927
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.quad	.L4924
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4927
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4921
	.quad	.L4924
	.text
.L4938:
	.loc 1 23973 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp193
	movq	%rax, %rdi	# tmp193,
	call	get_attr_type	#
	cmpl	$1, %eax	#, D.57403
	je	.L4939	#,
	.loc 1 23975 0
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4939:
	.loc 1 23979 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4937:
	.loc 1 23988 0
	movq	-8(%rbp), %rax	# insn, tmp194
	movq	%rax, %rdi	# tmp194,
	call	extract_constrain_insn_cached	#
	.loc 1 23989 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4430
	testl	%eax, %eax	# which_alternative.4430
	jne	.L4940	#,
	.loc 1 23989 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp195
	movq	%rax, %rdi	# tmp195,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57404
	je	.L4940	#,
	movq	-8(%rbp), %rax	# insn, tmp196
	movq	%rax, %rdi	# tmp196,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57404
	je	.L4940	#,
	.loc 1 23991 0 is_stmt 1
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4940:
	.loc 1 23995 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4936:
	.loc 1 24002 0
	movq	-8(%rbp), %rax	# insn, tmp197
	movq	%rax, %rdi	# tmp197,
	call	extract_constrain_insn_cached	#
	.loc 1 24003 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4431
	cmpl	$1, %eax	#, which_alternative.4431
	je	.L4941	#,
	.loc 1 24005 0
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4941:
	.loc 1 24009 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4935:
	.loc 1 24013 0
	movq	-8(%rbp), %rax	# insn, tmp198
	movq	%rax, %rdi	# tmp198,
	call	extract_constrain_insn_cached	#
	.loc 1 24014 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4432
	cmpl	$1, %eax	#, which_alternative.4432
	je	.L4942	#,
	.loc 1 24014 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4433
	cmpl	$2, %eax	#, which_alternative.4433
	je	.L4942	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4434
	cmpl	$3, %eax	#, which_alternative.4434
	je	.L4942	#,
	.loc 1 24016 0 is_stmt 1
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4942:
	.loc 1 24020 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4934:
	.loc 1 24032 0
	movq	-8(%rbp), %rax	# insn, tmp199
	movq	%rax, %rdi	# tmp199,
	call	extract_constrain_insn_cached	#
	.loc 1 24033 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4435
	testl	%eax, %eax	# which_alternative.4435
	jne	.L4943	#,
	.loc 1 24035 0
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4943:
	.loc 1 24039 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4933:
	.loc 1 24046 0
	movq	-8(%rbp), %rax	# insn, tmp200
	movq	%rax, %rdi	# tmp200,
	call	extract_constrain_insn_cached	#
	.loc 1 24047 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4436
	cmpl	$1, %eax	#, which_alternative.4436
	jne	.L4944	#,
	.loc 1 24047 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp201
	movq	%rax, %rdi	# tmp201,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57404
	je	.L4945	#,
	movq	-8(%rbp), %rax	# insn, tmp202
	movq	%rax, %rdi	# tmp202,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57404
	je	.L4945	#,
.L4944:
	.loc 1 24049 0 is_stmt 1
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4945:
	.loc 1 24053 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4932:
	.loc 1 24057 0
	movq	-8(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	extract_constrain_insn_cached	#
	.loc 1 24058 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4437
	testl	%eax, %eax	# which_alternative.4437
	je	.L4946	#,
	.loc 1 24058 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4438
	cmpl	$1, %eax	#, which_alternative.4438
	jne	.L4947	#,
.L4946:
	.loc 1 24058 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp204
	movq	%rax, %rdi	# tmp204,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57404
	je	.L4948	#,
	.loc 1 24058 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp205
	movq	%rax, %rdi	# tmp205,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57404
	jne	.L4947	#,
.L4948:
	.loc 1 24058 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4439
	cmpl	$1, %eax	#, which_alternative.4439
	je	.L4949	#,
.L4947:
	.loc 1 24060 0 is_stmt 1
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4949:
	.loc 1 24064 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4931:
	.loc 1 24071 0
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	%rax, %rdi	# tmp206,
	call	extract_constrain_insn_cached	#
	.loc 1 24072 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4440
	cmpl	$3, %eax	#, which_alternative.4440
	je	.L4950	#,
	.loc 1 24072 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4441
	cmpl	$4, %eax	#, which_alternative.4441
	je	.L4950	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4442
	testl	%eax, %eax	# which_alternative.4442
	je	.L4951	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4443
	cmpl	$1, %eax	#, which_alternative.4443
	je	.L4951	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4444
	cmpl	$2, %eax	#, which_alternative.4444
	jne	.L4952	#,
.L4951:
	.loc 1 24072 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp207
	movq	%rax, %rdi	# tmp207,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57404
	je	.L4950	#,
	.loc 1 24072 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp208
	movq	%rax, %rdi	# tmp208,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57404
	je	.L4950	#,
.L4952:
	.loc 1 24074 0 is_stmt 1
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4950:
	.loc 1 24078 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4930:
	.loc 1 24083 0
	movq	-8(%rbp), %rax	# insn, tmp209
	movq	%rax, %rdi	# tmp209,
	call	extract_constrain_insn_cached	#
	.loc 1 24084 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4445
	testl	%eax, %eax	# which_alternative.4445
	je	.L4953	#,
	.loc 1 24084 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4446
	cmpl	$1, %eax	#, which_alternative.4446
	je	.L4953	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4447
	cmpl	$2, %eax	#, which_alternative.4447
	je	.L4953	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4448
	cmpl	$3, %eax	#, which_alternative.4448
	je	.L4954	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4449
	cmpl	$4, %eax	#, which_alternative.4449
	je	.L4954	#,
.L4953:
	.loc 1 24086 0 is_stmt 1
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4954:
	.loc 1 24090 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4929:
	.loc 1 24095 0
	movq	-8(%rbp), %rax	# insn, tmp210
	movq	%rax, %rdi	# tmp210,
	call	extract_constrain_insn_cached	#
	.loc 1 24096 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4450
	cmpl	$1, %eax	#, which_alternative.4450
	jne	.L4955	#,
	.loc 1 24096 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57405
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57405,
	call	memory_operand	#
	testl	%eax, %eax	# D.57402
	jne	.L4955	#,
	.loc 1 24098 0 is_stmt 1
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4955:
	.loc 1 24102 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4928:
	.loc 1 24106 0
	movq	-8(%rbp), %rax	# insn, tmp211
	movq	%rax, %rdi	# tmp211,
	call	extract_constrain_insn_cached	#
	.loc 1 24107 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4451
	cmpl	$4, %eax	#, which_alternative.4451
	je	.L4956	#,
	.loc 1 24109 0
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4956:
	.loc 1 24113 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4927:
	.loc 1 24120 0
	movq	-8(%rbp), %rax	# insn, tmp212
	movq	%rax, %rdi	# tmp212,
	call	extract_constrain_insn_cached	#
	.loc 1 24121 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4452
	testl	%eax, %eax	# which_alternative.4452
	je	.L4957	#,
	.loc 1 24121 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4453
	cmpl	$1, %eax	#, which_alternative.4453
	je	.L4957	#,
	.loc 1 24123 0 is_stmt 1
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4957:
	.loc 1 24127 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4926:
	.loc 1 24131 0
	movq	-8(%rbp), %rax	# insn, tmp213
	movq	%rax, %rdi	# tmp213,
	call	extract_constrain_insn_cached	#
	.loc 1 24132 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4454
	testl	%eax, %eax	# which_alternative.4454
	jne	.L4958	#,
	.loc 1 24132 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57405
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57405,
	call	memory_operand	#
	testl	%eax, %eax	# D.57402
	jne	.L4958	#,
	.loc 1 24134 0 is_stmt 1
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4958:
	.loc 1 24138 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4925:
	.loc 1 24149 0
	movq	-8(%rbp), %rax	# insn, tmp214
	movq	%rax, %rdi	# tmp214,
	call	extract_insn_cached	#
	.loc 1 24150 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57405
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57405,
	call	memory_operand	#
	testl	%eax, %eax	# D.57402
	jne	.L4959	#,
	.loc 1 24152 0
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4959:
	.loc 1 24156 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4922:
	.loc 1 24160 0
	movq	-8(%rbp), %rax	# insn, tmp215
	movq	32(%rax), %rax	# insn_99->fld[3].rtx, D.57405
	movzwl	(%rax), %eax	# _172->code, D.57406
	cmpw	$40, %ax	#, D.57406
	je	.L4924	#,
	.loc 1 24161 0
	movq	-8(%rbp), %rax	# insn, tmp216
	movq	32(%rax), %rax	# insn_99->fld[3].rtx, D.57405
	movq	%rax, %rdi	# D.57405,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57402
	jns	.L4924	#,
	.loc 1 24162 0
	movq	-8(%rbp), %rax	# insn, tmp217
	movl	$__FUNCTION__.20769, %ecx	#,
	movl	$24162, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp217,
	call	_fatal_insn_not_found	#
.L4924:
	.loc 1 24356 0
	movl	$1, %eax	#, D.57402
	jmp	.L4918	#
.L4921:
	.loc 1 24359 0
	movl	$0, %eax	#, D.57402
	jmp	.L4918	#
.L4960:
	.loc 1 24364 0
	movl	$__FUNCTION__.20769, %edx	#,
	movl	$24364, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L4918:
	.loc 1 24366 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE68:
	.size	athlon_vectordec_unit_blockage, .-athlon_vectordec_unit_blockage
	.type	k6_fpu_unit_blockage, @function
k6_fpu_unit_blockage:
.LFB69:
	.loc 1 24373 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 24377 0
	movq	-24(%rbp), %rax	# executing_insn, tmp106
	movq	%rax, -8(%rbp)	# tmp106, insn
	.loc 1 24378 0
	movq	-8(%rbp), %rax	# insn, tmp107
	movl	40(%rax), %eax	# insn_19->fld[4].rtint, D.57407
	testl	%eax, %eax	# D.57407
	js	.L4962	#,
	.loc 1 24378 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp108
	movl	40(%rax), %eax	# insn_19->fld[4].rtint, iftmp.4455
	jmp	.L4963	#
.L4962:
	.loc 1 24378 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp109
	movq	%rax, %rdi	# tmp109,
	call	recog_memoized_1	#
.L4963:
	.loc 1 24378 0 discriminator 3
	addl	$1, %eax	#, tmp110
	cmpl	$559, %eax	#, tmp110
	ja	.L4964	#,
	movl	%eax, %eax	# tmp110, tmp111
	movq	.L4966(,%rax,8), %rax	#, tmp112
	jmp	*%rax	# tmp112
	.section	.rodata
	.align 8
	.align 4
.L4966:
	.quad	.L4965
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4967
	.quad	.L4967
	.quad	.L4967
	.quad	.L4964
	.quad	.L4967
	.quad	.L4967
	.quad	.L4964
	.quad	.L4964
	.quad	.L4967
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4967
	.quad	.L4968
	.quad	.L4964
	.quad	.L4967
	.quad	.L4968
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4969
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4969
	.quad	.L4969
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4969
	.quad	.L4969
	.quad	.L4969
	.quad	.L4969
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4970
	.quad	.L4964
	.quad	.L4967
	.quad	.L4967
	.quad	.L4967
	.quad	.L4967
	.quad	.L4968
	.quad	.L4968
	.quad	.L4971
	.quad	.L4967
	.quad	.L4964
	.quad	.L4968
	.quad	.L4967
	.quad	.L4968
	.quad	.L4967
	.quad	.L4968
	.quad	.L4967
	.quad	.L4968
	.quad	.L4967
	.quad	.L4967
	.quad	.L4967
	.quad	.L4967
	.quad	.L4964
	.quad	.L4964
	.quad	.L4967
	.quad	.L4967
	.quad	.L4967
	.quad	.L4964
	.quad	.L4964
	.quad	.L4967
	.quad	.L4967
	.quad	.L4967
	.quad	.L4964
	.quad	.L4964
	.quad	.L4968
	.quad	.L4968
	.quad	.L4964
	.quad	.L4968
	.quad	.L4968
	.quad	.L4964
	.quad	.L4968
	.quad	.L4968
	.quad	.L4964
	.quad	.L4968
	.quad	.L4968
	.quad	.L4964
	.quad	.L4968
	.quad	.L4968
	.quad	.L4968
	.quad	.L4968
	.quad	.L4968
	.quad	.L4968
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4964
	.quad	.L4972
	.quad	.L4973
	.quad	.L4964
	.quad	.L4972
	.quad	.L4973
	.quad	.L4964
	.quad	.L4974
	.quad	.L4975
	.quad	.L4976
	.quad	.L4977
	.quad	.L4964
	.quad	.L4976
	.quad	.L4976
	.quad	.L4978
	.quad	.L4979
	.quad	.L4964
	.quad	.L4978
	.quad	.L4978
	.quad	.L4978
	.quad	.L4978
	.quad	.L4980
	.quad	.L4981
	.quad	.L4980
	.quad	.L4981
	.quad	.L4980
	.quad	.L4981
	.quad	.L4980
	.quad	.L4981
	.quad	.L4980
	.quad	.L4981
	.quad	.L4980
	.quad	.L4981
	.quad	.L4980
	.quad	.L4981
	.text
.L4981:
	.loc 1 24387 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp113
	movq	%rax, %rdi	# tmp113,
	call	extract_insn_cached	#
	.loc 1 24388 0
	movq	-8(%rbp), %rax	# insn, tmp114
	movq	%rax, %rdi	# tmp114,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57408
	jne	.L4982	#,
	.loc 1 24390 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L4983	#
.L4982:
	.loc 1 24392 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	je	.L4984	#,
	.loc 1 24394 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L4983	#
.L4984:
	.loc 1 24398 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24400 0
	jmp	.L4985	#
.L4983:
	jmp	.L4985	#
.L4980:
	.loc 1 24409 0
	movq	-8(%rbp), %rax	# insn, tmp115
	movq	%rax, %rdi	# tmp115,
	call	extract_insn_cached	#
	.loc 1 24410 0
	movq	-8(%rbp), %rax	# insn, tmp116
	movq	%rax, %rdi	# tmp116,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57408
	jne	.L4986	#,
	.loc 1 24412 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L4987	#
.L4986:
	.loc 1 24414 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	je	.L4988	#,
	.loc 1 24416 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L4987	#
.L4988:
	.loc 1 24420 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24422 0
	jmp	.L4985	#
.L4987:
	jmp	.L4985	#
.L4979:
	.loc 1 24425 0
	movq	-8(%rbp), %rax	# insn, tmp117
	movq	%rax, %rdi	# tmp117,
	call	extract_constrain_insn_cached	#
	.loc 1 24426 0
	movq	-8(%rbp), %rax	# insn, tmp118
	movq	%rax, %rdi	# tmp118,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57408
	jne	.L4989	#,
	.loc 1 24428 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L4990	#
.L4989:
	.loc 1 24430 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4456
	cmpl	$2, %eax	#, which_alternative.4456
	je	.L4991	#,
	.loc 1 24430 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	je	.L4991	#,
	.loc 1 24432 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L4990	#
.L4991:
	.loc 1 24436 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24438 0
	jmp	.L4985	#
.L4990:
	jmp	.L4985	#
.L4978:
	.loc 1 24445 0
	movq	-8(%rbp), %rax	# insn, tmp119
	movq	%rax, %rdi	# tmp119,
	call	extract_insn_cached	#
	.loc 1 24446 0
	movq	-8(%rbp), %rax	# insn, tmp120
	movq	%rax, %rdi	# tmp120,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57408
	jne	.L4992	#,
	.loc 1 24448 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L4993	#
.L4992:
	.loc 1 24450 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	je	.L4994	#,
	.loc 1 24452 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L4993	#
.L4994:
	.loc 1 24456 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24458 0
	jmp	.L4985	#
.L4993:
	jmp	.L4985	#
.L4977:
	.loc 1 24461 0
	movq	-8(%rbp), %rax	# insn, tmp121
	movq	%rax, %rdi	# tmp121,
	call	extract_constrain_insn_cached	#
	.loc 1 24462 0
	movq	-8(%rbp), %rax	# insn, tmp122
	movq	%rax, %rdi	# tmp122,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57408
	jne	.L4995	#,
	.loc 1 24464 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L4996	#
.L4995:
	.loc 1 24466 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4457
	cmpl	$2, %eax	#, which_alternative.4457
	je	.L4997	#,
	.loc 1 24466 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	je	.L4997	#,
	.loc 1 24468 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L4996	#
.L4997:
	.loc 1 24472 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24474 0
	jmp	.L4985	#
.L4996:
	jmp	.L4985	#
.L4976:
	.loc 1 24479 0
	movq	-8(%rbp), %rax	# insn, tmp123
	movq	%rax, %rdi	# tmp123,
	call	extract_insn_cached	#
	.loc 1 24480 0
	movq	-8(%rbp), %rax	# insn, tmp124
	movq	%rax, %rdi	# tmp124,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57408
	jne	.L4998	#,
	.loc 1 24482 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L4999	#
.L4998:
	.loc 1 24484 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	je	.L5000	#,
	.loc 1 24486 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L4999	#
.L5000:
	.loc 1 24490 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24492 0
	jmp	.L4985	#
.L4999:
	jmp	.L4985	#
.L4975:
	.loc 1 24495 0
	movq	-8(%rbp), %rax	# insn, tmp125
	movq	%rax, %rdi	# tmp125,
	call	extract_insn_cached	#
	.loc 1 24496 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	jne	.L5001	#,
	.loc 1 24498 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24504 0
	jmp	.L4985	#
.L5001:
	.loc 1 24502 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 24504 0
	jmp	.L4985	#
.L4974:
	.loc 1 24507 0
	movq	-8(%rbp), %rax	# insn, tmp126
	movq	%rax, %rdi	# tmp126,
	call	extract_insn_cached	#
	.loc 1 24508 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	jne	.L5003	#,
	.loc 1 24510 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24516 0
	jmp	.L4985	#
.L5003:
	.loc 1 24514 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 24516 0
	jmp	.L4985	#
.L4973:
	.loc 1 24520 0
	movq	-8(%rbp), %rax	# insn, tmp127
	movq	%rax, %rdi	# tmp127,
	call	extract_constrain_insn_cached	#
	.loc 1 24521 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4458
	testl	%eax, %eax	# which_alternative.4458
	jne	.L5005	#,
	.loc 1 24521 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	jne	.L5005	#,
	.loc 1 24523 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5006	#
.L5005:
	.loc 1 24525 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4459
	testl	%eax, %eax	# which_alternative.4459
	jne	.L5007	#,
	.loc 1 24525 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	je	.L5007	#,
	.loc 1 24527 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5006	#
.L5007:
	.loc 1 24531 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24533 0
	jmp	.L4985	#
.L5006:
	jmp	.L4985	#
.L4972:
	.loc 1 24537 0
	movq	-8(%rbp), %rax	# insn, tmp128
	movq	%rax, %rdi	# tmp128,
	call	extract_insn_cached	#
	.loc 1 24538 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57409
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57409,
	call	mult_operator	#
	testl	%eax, %eax	# D.57407
	jne	.L5008	#,
	.loc 1 24540 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24546 0
	jmp	.L4985	#
.L5008:
	.loc 1 24544 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 24546 0
	jmp	.L4985	#
.L4971:
	.loc 1 24549 0
	movq	-8(%rbp), %rax	# insn, tmp129
	movq	%rax, %rdi	# tmp129,
	call	extract_constrain_insn_cached	#
	.loc 1 24550 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4460
	cmpl	$1, %eax	#, which_alternative.4460
	jne	.L5010	#,
	.loc 1 24552 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24558 0
	jmp	.L4985	#
.L5010:
	.loc 1 24556 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24558 0
	jmp	.L4985	#
.L4970:
	.loc 1 24561 0
	movq	-8(%rbp), %rax	# insn, tmp130
	movq	%rax, %rdi	# tmp130,
	call	extract_constrain_insn_cached	#
	.loc 1 24562 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4461
	testl	%eax, %eax	# which_alternative.4461
	je	.L5012	#,
	.loc 1 24562 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4462
	cmpl	$1, %eax	#, which_alternative.4462
	jne	.L5013	#,
.L5012:
	.loc 1 24564 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24570 0
	jmp	.L4985	#
.L5013:
	.loc 1 24568 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24570 0
	jmp	.L4985	#
.L4969:
	.loc 1 24579 0
	movq	-8(%rbp), %rax	# insn, tmp131
	movq	%rax, %rdi	# tmp131,
	call	extract_constrain_insn_cached	#
	.loc 1 24580 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4463
	testl	%eax, %eax	# which_alternative.4463
	je	.L5015	#,
	.loc 1 24580 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4464
	cmpl	$1, %eax	#, which_alternative.4464
	je	.L5015	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4465
	cmpl	$2, %eax	#, which_alternative.4465
	jne	.L5016	#,
.L5015:
	.loc 1 24582 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24588 0
	jmp	.L4985	#
.L5016:
	.loc 1 24586 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24588 0
	jmp	.L4985	#
.L4968:
	.loc 1 24612 0
	movq	-8(%rbp), %rax	# insn, tmp132
	movq	%rax, %rdi	# tmp132,
	call	extract_constrain_insn_cached	#
	.loc 1 24613 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4466
	testl	%eax, %eax	# which_alternative.4466
	jne	.L5018	#,
	.loc 1 24615 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24621 0
	jmp	.L4985	#
.L5018:
	.loc 1 24619 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24621 0
	jmp	.L4985	#
.L4967:
	.loc 1 24649 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24650 0
	jmp	.L4985	#
.L4965:
	.loc 1 24653 0
	movq	-8(%rbp), %rax	# insn, tmp133
	movq	32(%rax), %rax	# insn_19->fld[3].rtx, D.57409
	movzwl	(%rax), %eax	# _98->code, D.57410
	cmpw	$40, %ax	#, D.57410
	je	.L4964	#,
	.loc 1 24654 0
	movq	-8(%rbp), %rax	# insn, tmp134
	movq	32(%rax), %rax	# insn_19->fld[3].rtx, D.57409
	movq	%rax, %rdi	# D.57409,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57407
	jns	.L4964	#,
	.loc 1 24655 0
	movq	-8(%rbp), %rax	# insn, tmp135
	movl	$__FUNCTION__.21308, %ecx	#,
	movl	$24655, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp135,
	call	_fatal_insn_not_found	#
.L4964:
	.loc 1 24657 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24658 0
	nop
.L4985:
	.loc 1 24662 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp136
	movq	%rax, -8(%rbp)	# tmp136, insn
	.loc 1 24663 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L5021	#,
	cmpl	$2, %eax	#, casenum
	je	.L5022	#,
	testl	%eax, %eax	# casenum
	jne	.L5025	#,
	.loc 1 24666 0
	movl	$2, %eax	#, D.57407
	jmp	.L5024	#
.L5021:
	.loc 1 24669 0
	movl	$2, %eax	#, D.57407
	jmp	.L5024	#
.L5022:
	.loc 1 24672 0
	movl	$56, %eax	#, D.57407
	jmp	.L5024	#
.L5025:
	.loc 1 24675 0
	movl	$__FUNCTION__.21308, %edx	#,
	movl	$24675, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5024:
	.loc 1 24677 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE69:
	.size	k6_fpu_unit_blockage, .-k6_fpu_unit_blockage
	.type	k6_fpu_unit_conflict_cost, @function
k6_fpu_unit_conflict_cost:
.LFB70:
	.loc 1 24684 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 24688 0
	movq	-24(%rbp), %rax	# executing_insn, tmp106
	movq	%rax, -8(%rbp)	# tmp106, insn
	.loc 1 24689 0
	movq	-8(%rbp), %rax	# insn, tmp107
	movl	40(%rax), %eax	# insn_19->fld[4].rtint, D.57411
	testl	%eax, %eax	# D.57411
	js	.L5027	#,
	.loc 1 24689 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp108
	movl	40(%rax), %eax	# insn_19->fld[4].rtint, iftmp.4467
	jmp	.L5028	#
.L5027:
	.loc 1 24689 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp109
	movq	%rax, %rdi	# tmp109,
	call	recog_memoized_1	#
.L5028:
	.loc 1 24689 0 discriminator 3
	addl	$1, %eax	#, tmp110
	cmpl	$559, %eax	#, tmp110
	ja	.L5029	#,
	movl	%eax, %eax	# tmp110, tmp111
	movq	.L5031(,%rax,8), %rax	#, tmp112
	jmp	*%rax	# tmp112
	.section	.rodata
	.align 8
	.align 4
.L5031:
	.quad	.L5030
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5032
	.quad	.L5032
	.quad	.L5032
	.quad	.L5029
	.quad	.L5032
	.quad	.L5032
	.quad	.L5029
	.quad	.L5029
	.quad	.L5032
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5032
	.quad	.L5033
	.quad	.L5029
	.quad	.L5032
	.quad	.L5033
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5034
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5034
	.quad	.L5034
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5034
	.quad	.L5034
	.quad	.L5034
	.quad	.L5034
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5035
	.quad	.L5029
	.quad	.L5032
	.quad	.L5032
	.quad	.L5032
	.quad	.L5032
	.quad	.L5033
	.quad	.L5033
	.quad	.L5036
	.quad	.L5032
	.quad	.L5029
	.quad	.L5033
	.quad	.L5032
	.quad	.L5033
	.quad	.L5032
	.quad	.L5033
	.quad	.L5032
	.quad	.L5033
	.quad	.L5032
	.quad	.L5032
	.quad	.L5032
	.quad	.L5032
	.quad	.L5029
	.quad	.L5029
	.quad	.L5032
	.quad	.L5032
	.quad	.L5032
	.quad	.L5029
	.quad	.L5029
	.quad	.L5032
	.quad	.L5032
	.quad	.L5032
	.quad	.L5029
	.quad	.L5029
	.quad	.L5033
	.quad	.L5033
	.quad	.L5029
	.quad	.L5033
	.quad	.L5033
	.quad	.L5029
	.quad	.L5033
	.quad	.L5033
	.quad	.L5029
	.quad	.L5033
	.quad	.L5033
	.quad	.L5029
	.quad	.L5033
	.quad	.L5033
	.quad	.L5033
	.quad	.L5033
	.quad	.L5033
	.quad	.L5033
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5029
	.quad	.L5037
	.quad	.L5038
	.quad	.L5029
	.quad	.L5037
	.quad	.L5038
	.quad	.L5029
	.quad	.L5039
	.quad	.L5040
	.quad	.L5041
	.quad	.L5042
	.quad	.L5029
	.quad	.L5041
	.quad	.L5041
	.quad	.L5043
	.quad	.L5044
	.quad	.L5029
	.quad	.L5043
	.quad	.L5043
	.quad	.L5043
	.quad	.L5043
	.quad	.L5045
	.quad	.L5046
	.quad	.L5045
	.quad	.L5046
	.quad	.L5045
	.quad	.L5046
	.quad	.L5045
	.quad	.L5046
	.quad	.L5045
	.quad	.L5046
	.quad	.L5045
	.quad	.L5046
	.quad	.L5045
	.quad	.L5046
	.text
.L5046:
	.loc 1 24698 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp113
	movq	%rax, %rdi	# tmp113,
	call	extract_insn_cached	#
	.loc 1 24699 0
	movq	-8(%rbp), %rax	# insn, tmp114
	movq	%rax, %rdi	# tmp114,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57412
	jne	.L5047	#,
	.loc 1 24701 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5048	#
.L5047:
	.loc 1 24703 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	je	.L5049	#,
	.loc 1 24705 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5048	#
.L5049:
	.loc 1 24709 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24711 0
	jmp	.L5050	#
.L5048:
	jmp	.L5050	#
.L5045:
	.loc 1 24720 0
	movq	-8(%rbp), %rax	# insn, tmp115
	movq	%rax, %rdi	# tmp115,
	call	extract_insn_cached	#
	.loc 1 24721 0
	movq	-8(%rbp), %rax	# insn, tmp116
	movq	%rax, %rdi	# tmp116,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57412
	jne	.L5051	#,
	.loc 1 24723 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5052	#
.L5051:
	.loc 1 24725 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	je	.L5053	#,
	.loc 1 24727 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5052	#
.L5053:
	.loc 1 24731 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24733 0
	jmp	.L5050	#
.L5052:
	jmp	.L5050	#
.L5044:
	.loc 1 24736 0
	movq	-8(%rbp), %rax	# insn, tmp117
	movq	%rax, %rdi	# tmp117,
	call	extract_constrain_insn_cached	#
	.loc 1 24737 0
	movq	-8(%rbp), %rax	# insn, tmp118
	movq	%rax, %rdi	# tmp118,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57412
	jne	.L5054	#,
	.loc 1 24739 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5055	#
.L5054:
	.loc 1 24741 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4468
	cmpl	$2, %eax	#, which_alternative.4468
	je	.L5056	#,
	.loc 1 24741 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	je	.L5056	#,
	.loc 1 24743 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5055	#
.L5056:
	.loc 1 24747 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24749 0
	jmp	.L5050	#
.L5055:
	jmp	.L5050	#
.L5043:
	.loc 1 24756 0
	movq	-8(%rbp), %rax	# insn, tmp119
	movq	%rax, %rdi	# tmp119,
	call	extract_insn_cached	#
	.loc 1 24757 0
	movq	-8(%rbp), %rax	# insn, tmp120
	movq	%rax, %rdi	# tmp120,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57412
	jne	.L5057	#,
	.loc 1 24759 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5058	#
.L5057:
	.loc 1 24761 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	je	.L5059	#,
	.loc 1 24763 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5058	#
.L5059:
	.loc 1 24767 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24769 0
	jmp	.L5050	#
.L5058:
	jmp	.L5050	#
.L5042:
	.loc 1 24772 0
	movq	-8(%rbp), %rax	# insn, tmp121
	movq	%rax, %rdi	# tmp121,
	call	extract_constrain_insn_cached	#
	.loc 1 24773 0
	movq	-8(%rbp), %rax	# insn, tmp122
	movq	%rax, %rdi	# tmp122,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57412
	jne	.L5060	#,
	.loc 1 24775 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5061	#
.L5060:
	.loc 1 24777 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4469
	cmpl	$2, %eax	#, which_alternative.4469
	je	.L5062	#,
	.loc 1 24777 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	je	.L5062	#,
	.loc 1 24779 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5061	#
.L5062:
	.loc 1 24783 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24785 0
	jmp	.L5050	#
.L5061:
	jmp	.L5050	#
.L5041:
	.loc 1 24790 0
	movq	-8(%rbp), %rax	# insn, tmp123
	movq	%rax, %rdi	# tmp123,
	call	extract_insn_cached	#
	.loc 1 24791 0
	movq	-8(%rbp), %rax	# insn, tmp124
	movq	%rax, %rdi	# tmp124,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57412
	jne	.L5063	#,
	.loc 1 24793 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5064	#
.L5063:
	.loc 1 24795 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	je	.L5065	#,
	.loc 1 24797 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5064	#
.L5065:
	.loc 1 24801 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24803 0
	jmp	.L5050	#
.L5064:
	jmp	.L5050	#
.L5040:
	.loc 1 24806 0
	movq	-8(%rbp), %rax	# insn, tmp125
	movq	%rax, %rdi	# tmp125,
	call	extract_insn_cached	#
	.loc 1 24807 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	jne	.L5066	#,
	.loc 1 24809 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24815 0
	jmp	.L5050	#
.L5066:
	.loc 1 24813 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 24815 0
	jmp	.L5050	#
.L5039:
	.loc 1 24818 0
	movq	-8(%rbp), %rax	# insn, tmp126
	movq	%rax, %rdi	# tmp126,
	call	extract_insn_cached	#
	.loc 1 24819 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	jne	.L5068	#,
	.loc 1 24821 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24827 0
	jmp	.L5050	#
.L5068:
	.loc 1 24825 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 24827 0
	jmp	.L5050	#
.L5038:
	.loc 1 24831 0
	movq	-8(%rbp), %rax	# insn, tmp127
	movq	%rax, %rdi	# tmp127,
	call	extract_constrain_insn_cached	#
	.loc 1 24832 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4470
	testl	%eax, %eax	# which_alternative.4470
	jne	.L5070	#,
	.loc 1 24832 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	jne	.L5070	#,
	.loc 1 24834 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5071	#
.L5070:
	.loc 1 24836 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4471
	testl	%eax, %eax	# which_alternative.4471
	jne	.L5072	#,
	.loc 1 24836 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	je	.L5072	#,
	.loc 1 24838 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5071	#
.L5072:
	.loc 1 24842 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24844 0
	jmp	.L5050	#
.L5071:
	jmp	.L5050	#
.L5037:
	.loc 1 24848 0
	movq	-8(%rbp), %rax	# insn, tmp128
	movq	%rax, %rdi	# tmp128,
	call	extract_insn_cached	#
	.loc 1 24849 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57413
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57413,
	call	mult_operator	#
	testl	%eax, %eax	# D.57411
	jne	.L5073	#,
	.loc 1 24851 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24857 0
	jmp	.L5050	#
.L5073:
	.loc 1 24855 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 24857 0
	jmp	.L5050	#
.L5036:
	.loc 1 24860 0
	movq	-8(%rbp), %rax	# insn, tmp129
	movq	%rax, %rdi	# tmp129,
	call	extract_constrain_insn_cached	#
	.loc 1 24861 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4472
	cmpl	$1, %eax	#, which_alternative.4472
	jne	.L5075	#,
	.loc 1 24863 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24869 0
	jmp	.L5050	#
.L5075:
	.loc 1 24867 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24869 0
	jmp	.L5050	#
.L5035:
	.loc 1 24872 0
	movq	-8(%rbp), %rax	# insn, tmp130
	movq	%rax, %rdi	# tmp130,
	call	extract_constrain_insn_cached	#
	.loc 1 24873 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4473
	testl	%eax, %eax	# which_alternative.4473
	je	.L5077	#,
	.loc 1 24873 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4474
	cmpl	$1, %eax	#, which_alternative.4474
	jne	.L5078	#,
.L5077:
	.loc 1 24875 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24881 0
	jmp	.L5050	#
.L5078:
	.loc 1 24879 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24881 0
	jmp	.L5050	#
.L5034:
	.loc 1 24890 0
	movq	-8(%rbp), %rax	# insn, tmp131
	movq	%rax, %rdi	# tmp131,
	call	extract_constrain_insn_cached	#
	.loc 1 24891 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4475
	testl	%eax, %eax	# which_alternative.4475
	je	.L5080	#,
	.loc 1 24891 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4476
	cmpl	$1, %eax	#, which_alternative.4476
	je	.L5080	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4477
	cmpl	$2, %eax	#, which_alternative.4477
	jne	.L5081	#,
.L5080:
	.loc 1 24893 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24899 0
	jmp	.L5050	#
.L5081:
	.loc 1 24897 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24899 0
	jmp	.L5050	#
.L5033:
	.loc 1 24923 0
	movq	-8(%rbp), %rax	# insn, tmp132
	movq	%rax, %rdi	# tmp132,
	call	extract_constrain_insn_cached	#
	.loc 1 24924 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4478
	testl	%eax, %eax	# which_alternative.4478
	jne	.L5083	#,
	.loc 1 24926 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24932 0
	jmp	.L5050	#
.L5083:
	.loc 1 24930 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24932 0
	jmp	.L5050	#
.L5032:
	.loc 1 24960 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 24961 0
	jmp	.L5050	#
.L5030:
	.loc 1 24964 0
	movq	-8(%rbp), %rax	# insn, tmp133
	movq	32(%rax), %rax	# insn_19->fld[3].rtx, D.57413
	movzwl	(%rax), %eax	# _98->code, D.57414
	cmpw	$40, %ax	#, D.57414
	je	.L5029	#,
	.loc 1 24965 0
	movq	-8(%rbp), %rax	# insn, tmp134
	movq	32(%rax), %rax	# insn_19->fld[3].rtx, D.57413
	movq	%rax, %rdi	# D.57413,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57411
	jns	.L5029	#,
	.loc 1 24966 0
	movq	-8(%rbp), %rax	# insn, tmp135
	movl	$__FUNCTION__.21412, %ecx	#,
	movl	$24966, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp135,
	call	_fatal_insn_not_found	#
.L5029:
	.loc 1 24968 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 24969 0
	nop
.L5050:
	.loc 1 24973 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp136
	movq	%rax, -8(%rbp)	# tmp136, insn
	.loc 1 24974 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L5086	#,
	cmpl	$2, %eax	#, casenum
	je	.L5087	#,
	testl	%eax, %eax	# casenum
	jne	.L5090	#,
	.loc 1 24977 0
	movl	$2, %eax	#, D.57411
	jmp	.L5089	#
.L5086:
	.loc 1 24980 0
	movl	$2, %eax	#, D.57411
	jmp	.L5089	#
.L5087:
	.loc 1 24983 0
	movl	$56, %eax	#, D.57411
	jmp	.L5089	#
.L5090:
	.loc 1 24986 0
	movl	$__FUNCTION__.21412, %edx	#,
	movl	$24986, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5089:
	.loc 1 24988 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE70:
	.size	k6_fpu_unit_conflict_cost, .-k6_fpu_unit_conflict_cost
	.type	k6_store_unit_blockage, @function
k6_store_unit_blockage:
.LFB71:
	.loc 1 24995 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 24999 0
	movq	-24(%rbp), %rax	# executing_insn, tmp102
	movq	%rax, -8(%rbp)	# tmp102, insn
	.loc 1 25000 0
	movq	-8(%rbp), %rax	# insn, tmp103
	movl	40(%rax), %eax	# insn_15->fld[4].rtint, D.57415
	testl	%eax, %eax	# D.57415
	js	.L5092	#,
	.loc 1 25000 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp104
	movl	40(%rax), %eax	# insn_15->fld[4].rtint, iftmp.4479
	jmp	.L5093	#
.L5092:
	.loc 1 25000 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp105
	movq	%rax, %rdi	# tmp105,
	call	recog_memoized_1	#
.L5093:
	.loc 1 25000 0 discriminator 3
	cmpl	$221, %eax	#, iftmp.4479
	je	.L5095	#,
	cmpl	$221, %eax	#, iftmp.4479
	jg	.L5096	#,
	cmpl	$201, %eax	#, iftmp.4479
	jg	.L5097	#,
	cmpl	$192, %eax	#, iftmp.4479
	jge	.L5098	#,
	cmpl	$45, %eax	#, iftmp.4479
	je	.L5099	#,
	cmpl	$84, %eax	#, iftmp.4479
	je	.L5100	#,
	cmpl	$-1, %eax	#, iftmp.4479
	je	.L5101	#,
	.loc 1 25000 0
	jmp	.L5094	#
.L5097:
	.loc 1 25000 0 discriminator 3
	cmpl	$207, %eax	#, iftmp.4479
	je	.L5102	#,
	cmpl	$207, %eax	#, iftmp.4479
	jg	.L5103	#,
	cmpl	$202, %eax	#, iftmp.4479
	je	.L5104	#,
	.loc 1 25000 0
	jmp	.L5094	#
.L5103:
	.loc 1 25000 0 discriminator 3
	cmpl	$208, %eax	#, iftmp.4479
	je	.L5105	#,
	cmpl	$215, %eax	#, iftmp.4479
	je	.L5106	#,
	.loc 1 25000 0
	jmp	.L5094	#
.L5096:
	.loc 1 25000 0 discriminator 3
	cmpl	$415, %eax	#, iftmp.4479
	je	.L5106	#,
	cmpl	$415, %eax	#, iftmp.4479
	jg	.L5107	#,
	cmpl	$409, %eax	#, iftmp.4479
	jg	.L5108	#,
	cmpl	$408, %eax	#, iftmp.4479
	jge	.L5109	#,
	cmpl	$403, %eax	#, iftmp.4479
	je	.L5109	#,
	.loc 1 25000 0
	jmp	.L5094	#
.L5108:
	.loc 1 25000 0 discriminator 3
	cmpl	$412, %eax	#, iftmp.4479
	je	.L5109	#,
	.loc 1 25000 0
	jmp	.L5094	#
.L5107:
	.loc 1 25000 0 discriminator 3
	cmpl	$635, %eax	#, iftmp.4479
	je	.L5110	#,
	cmpl	$635, %eax	#, iftmp.4479
	jg	.L5111	#,
	subl	$583, %eax	#, tmp106
	cmpl	$29, %eax	#, tmp106
	ja	.L5094	#,
	.loc 1 25000 0
	jmp	.L5143	#
.L5111:
	.loc 1 25000 0 discriminator 3
	cmpl	$636, %eax	#, iftmp.4479
	jne	.L5094	#,
	.loc 1 25003 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp107
	movq	%rax, %rdi	# tmp107,
	call	extract_constrain_insn_cached	#
	.loc 1 25004 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4480
	cmpl	$1, %eax	#, which_alternative.4480
	jne	.L5114	#,
	.loc 1 25004 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57416
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57416,
	call	const0_operand	#
	testl	%eax, %eax	# D.57415
	jne	.L5114	#,
	.loc 1 25006 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25012 0
	jmp	.L5116	#
.L5114:
	.loc 1 25010 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25012 0
	jmp	.L5116	#
.L5110:
	.loc 1 25015 0
	movq	-8(%rbp), %rax	# insn, tmp108
	movq	%rax, %rdi	# tmp108,
	call	extract_constrain_insn_cached	#
	.loc 1 25016 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4481
	cmpl	$1, %eax	#, which_alternative.4481
	jne	.L5117	#,
	.loc 1 25016 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57416
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57416,
	call	const0_operand	#
	testl	%eax, %eax	# D.57415
	jne	.L5117	#,
	.loc 1 25018 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25024 0
	jmp	.L5116	#
.L5117:
	.loc 1 25022 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25024 0
	jmp	.L5116	#
.L5143:
	.loc 1 25056 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25057 0
	jmp	.L5116	#
.L5109:
	.loc 1 25063 0
	movq	-8(%rbp), %rax	# insn, tmp109
	movq	%rax, %rdi	# tmp109,
	call	extract_constrain_insn_cached	#
	.loc 1 25064 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4482
	cmpl	$1, %eax	#, which_alternative.4482
	jne	.L5119	#,
	.loc 1 25066 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25072 0
	jmp	.L5116	#
.L5119:
	.loc 1 25070 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25072 0
	jmp	.L5116	#
.L5095:
	.loc 1 25075 0
	movq	-8(%rbp), %rax	# insn, tmp110
	movq	%rax, %rdi	# tmp110,
	call	extract_constrain_insn_cached	#
	.loc 1 25076 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4483
	cmpl	$3, %eax	#, which_alternative.4483
	jne	.L5121	#,
	.loc 1 25078 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25084 0
	jmp	.L5116	#
.L5121:
	.loc 1 25082 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25084 0
	jmp	.L5116	#
.L5106:
	.loc 1 25088 0
	movq	-8(%rbp), %rax	# insn, tmp111
	movq	%rax, %rdi	# tmp111,
	call	extract_constrain_insn_cached	#
	.loc 1 25089 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4484
	cmpl	$2, %eax	#, which_alternative.4484
	jne	.L5123	#,
	.loc 1 25091 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25097 0
	jmp	.L5116	#
.L5123:
	.loc 1 25095 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25097 0
	jmp	.L5116	#
.L5105:
	.loc 1 25100 0
	movq	-8(%rbp), %rax	# insn, tmp112
	movq	%rax, %rdi	# tmp112,
	call	extract_constrain_insn_cached	#
	.loc 1 25101 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4485
	testl	%eax, %eax	# which_alternative.4485
	jne	.L5125	#,
	.loc 1 25101 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57416
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57416,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57415
	je	.L5126	#,
.L5125:
	.loc 1 25103 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25109 0
	jmp	.L5116	#
.L5126:
	.loc 1 25107 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25109 0
	jmp	.L5116	#
.L5102:
	.loc 1 25112 0
	movq	-8(%rbp), %rax	# insn, tmp113
	movq	%rax, %rdi	# tmp113,
	call	extract_constrain_insn_cached	#
	.loc 1 25113 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4486
	cmpl	$2, %eax	#, which_alternative.4486
	je	.L5128	#,
	.loc 1 25113 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57416
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57416,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57415
	je	.L5129	#,
.L5128:
	.loc 1 25115 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25121 0
	jmp	.L5116	#
.L5129:
	.loc 1 25119 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25121 0
	jmp	.L5116	#
.L5104:
	.loc 1 25124 0
	movq	-8(%rbp), %rax	# insn, tmp114
	movq	%rax, %rdi	# tmp114,
	call	extract_constrain_insn_cached	#
	.loc 1 25125 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4487
	cmpl	$2, %eax	#, which_alternative.4487
	je	.L5131	#,
	.loc 1 25125 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57416
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57416,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57415
	je	.L5132	#,
.L5131:
	.loc 1 25127 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25133 0
	jmp	.L5116	#
.L5132:
	.loc 1 25131 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25133 0
	jmp	.L5116	#
.L5098:
	.loc 1 25145 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25146 0
	jmp	.L5116	#
.L5100:
	.loc 1 25149 0
	movq	-8(%rbp), %rax	# insn, tmp115
	movq	%rax, %rdi	# tmp115,
	call	extract_constrain_insn_cached	#
	.loc 1 25150 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4488
	cmpl	$5, %eax	#, which_alternative.4488
	je	.L5134	#,
	.loc 1 25150 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4489
	cmpl	$6, %eax	#, which_alternative.4489
	je	.L5134	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4490
	cmpl	$7, %eax	#, which_alternative.4490
	je	.L5134	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4491
	cmpl	$8, %eax	#, which_alternative.4491
	je	.L5134	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4492
	cmpl	$4, %eax	#, which_alternative.4492
	je	.L5134	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4493
	testl	%eax, %eax	# flag_pic.4493
	je	.L5134	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57416
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57416,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57415
	je	.L5134	#,
	.loc 1 25152 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25158 0
	jmp	.L5116	#
.L5134:
	.loc 1 25156 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25158 0
	jmp	.L5116	#
.L5099:
	.loc 1 25161 0
	movq	-8(%rbp), %rax	# insn, tmp116
	movq	%rax, %rdi	# tmp116,
	call	extract_constrain_insn_cached	#
	.loc 1 25162 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4494
	cmpl	$4, %eax	#, which_alternative.4494
	je	.L5136	#,
	.loc 1 25162 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4495
	cmpl	$5, %eax	#, which_alternative.4495
	je	.L5136	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4496
	cmpl	$6, %eax	#, which_alternative.4496
	je	.L5136	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4497
	cmpl	$7, %eax	#, which_alternative.4497
	je	.L5136	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4498
	cmpl	$8, %eax	#, which_alternative.4498
	je	.L5136	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4499
	cmpl	$9, %eax	#, which_alternative.4499
	je	.L5136	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4500
	testl	%eax, %eax	# flag_pic.4500
	je	.L5136	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57416
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57416,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57415
	je	.L5136	#,
	.loc 1 25164 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25170 0
	jmp	.L5116	#
.L5136:
	.loc 1 25168 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25170 0
	jmp	.L5116	#
.L5101:
	.loc 1 25173 0
	movq	-8(%rbp), %rax	# insn, tmp117
	movq	32(%rax), %rax	# insn_15->fld[3].rtx, D.57416
	movzwl	(%rax), %eax	# _76->code, D.57417
	cmpw	$40, %ax	#, D.57417
	je	.L5094	#,
	.loc 1 25174 0
	movq	-8(%rbp), %rax	# insn, tmp118
	movq	32(%rax), %rax	# insn_15->fld[3].rtx, D.57416
	movq	%rax, %rdi	# D.57416,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57415
	jns	.L5094	#,
	.loc 1 25175 0
	movq	-8(%rbp), %rax	# insn, tmp119
	movl	$__FUNCTION__.21483, %ecx	#,
	movl	$25175, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp119,
	call	_fatal_insn_not_found	#
.L5094:
	.loc 1 25177 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25178 0
	nop
.L5116:
	.loc 1 25182 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp120
	movq	%rax, -8(%rbp)	# tmp120, insn
	.loc 1 25183 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L5139	#,
	cmpl	$2, %eax	#, casenum
	je	.L5140	#,
	testl	%eax, %eax	# casenum
	jne	.L5144	#,
	.loc 1 25186 0
	movl	$1, %eax	#, D.57415
	jmp	.L5142	#
.L5139:
	.loc 1 25189 0
	movl	$10, %eax	#, D.57415
	jmp	.L5142	#
.L5140:
	.loc 1 25192 0
	movl	$1, %eax	#, D.57415
	jmp	.L5142	#
.L5144:
	.loc 1 25195 0
	movl	$__FUNCTION__.21483, %edx	#,
	movl	$25195, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5142:
	.loc 1 25197 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE71:
	.size	k6_store_unit_blockage, .-k6_store_unit_blockage
	.type	k6_store_unit_conflict_cost, @function
k6_store_unit_conflict_cost:
.LFB72:
	.loc 1 25204 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 25208 0
	movq	-24(%rbp), %rax	# executing_insn, tmp102
	movq	%rax, -8(%rbp)	# tmp102, insn
	.loc 1 25209 0
	movq	-8(%rbp), %rax	# insn, tmp103
	movl	40(%rax), %eax	# insn_15->fld[4].rtint, D.57424
	testl	%eax, %eax	# D.57424
	js	.L5146	#,
	.loc 1 25209 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp104
	movl	40(%rax), %eax	# insn_15->fld[4].rtint, iftmp.4501
	jmp	.L5147	#
.L5146:
	.loc 1 25209 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp105
	movq	%rax, %rdi	# tmp105,
	call	recog_memoized_1	#
.L5147:
	.loc 1 25209 0 discriminator 3
	cmpl	$221, %eax	#, iftmp.4501
	je	.L5149	#,
	cmpl	$221, %eax	#, iftmp.4501
	jg	.L5150	#,
	cmpl	$201, %eax	#, iftmp.4501
	jg	.L5151	#,
	cmpl	$192, %eax	#, iftmp.4501
	jge	.L5152	#,
	cmpl	$45, %eax	#, iftmp.4501
	je	.L5153	#,
	cmpl	$84, %eax	#, iftmp.4501
	je	.L5154	#,
	cmpl	$-1, %eax	#, iftmp.4501
	je	.L5155	#,
	.loc 1 25209 0
	jmp	.L5148	#
.L5151:
	.loc 1 25209 0 discriminator 3
	cmpl	$207, %eax	#, iftmp.4501
	je	.L5156	#,
	cmpl	$207, %eax	#, iftmp.4501
	jg	.L5157	#,
	cmpl	$202, %eax	#, iftmp.4501
	je	.L5158	#,
	.loc 1 25209 0
	jmp	.L5148	#
.L5157:
	.loc 1 25209 0 discriminator 3
	cmpl	$208, %eax	#, iftmp.4501
	je	.L5159	#,
	cmpl	$215, %eax	#, iftmp.4501
	je	.L5160	#,
	.loc 1 25209 0
	jmp	.L5148	#
.L5150:
	.loc 1 25209 0 discriminator 3
	cmpl	$415, %eax	#, iftmp.4501
	je	.L5160	#,
	cmpl	$415, %eax	#, iftmp.4501
	jg	.L5161	#,
	cmpl	$409, %eax	#, iftmp.4501
	jg	.L5162	#,
	cmpl	$408, %eax	#, iftmp.4501
	jge	.L5163	#,
	cmpl	$403, %eax	#, iftmp.4501
	je	.L5163	#,
	.loc 1 25209 0
	jmp	.L5148	#
.L5162:
	.loc 1 25209 0 discriminator 3
	cmpl	$412, %eax	#, iftmp.4501
	je	.L5163	#,
	.loc 1 25209 0
	jmp	.L5148	#
.L5161:
	.loc 1 25209 0 discriminator 3
	cmpl	$635, %eax	#, iftmp.4501
	je	.L5164	#,
	cmpl	$635, %eax	#, iftmp.4501
	jg	.L5165	#,
	subl	$583, %eax	#, tmp106
	cmpl	$29, %eax	#, tmp106
	ja	.L5148	#,
	.loc 1 25209 0
	jmp	.L5197	#
.L5165:
	.loc 1 25209 0 discriminator 3
	cmpl	$636, %eax	#, iftmp.4501
	jne	.L5148	#,
	.loc 1 25212 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp107
	movq	%rax, %rdi	# tmp107,
	call	extract_constrain_insn_cached	#
	.loc 1 25213 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4502
	cmpl	$1, %eax	#, which_alternative.4502
	jne	.L5168	#,
	.loc 1 25213 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57425
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57425,
	call	const0_operand	#
	testl	%eax, %eax	# D.57424
	jne	.L5168	#,
	.loc 1 25215 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25221 0
	jmp	.L5170	#
.L5168:
	.loc 1 25219 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25221 0
	jmp	.L5170	#
.L5164:
	.loc 1 25224 0
	movq	-8(%rbp), %rax	# insn, tmp108
	movq	%rax, %rdi	# tmp108,
	call	extract_constrain_insn_cached	#
	.loc 1 25225 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4503
	cmpl	$1, %eax	#, which_alternative.4503
	jne	.L5171	#,
	.loc 1 25225 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57425
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57425,
	call	const0_operand	#
	testl	%eax, %eax	# D.57424
	jne	.L5171	#,
	.loc 1 25227 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25233 0
	jmp	.L5170	#
.L5171:
	.loc 1 25231 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25233 0
	jmp	.L5170	#
.L5197:
	.loc 1 25265 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25266 0
	jmp	.L5170	#
.L5163:
	.loc 1 25272 0
	movq	-8(%rbp), %rax	# insn, tmp109
	movq	%rax, %rdi	# tmp109,
	call	extract_constrain_insn_cached	#
	.loc 1 25273 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4504
	cmpl	$1, %eax	#, which_alternative.4504
	jne	.L5173	#,
	.loc 1 25275 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25281 0
	jmp	.L5170	#
.L5173:
	.loc 1 25279 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25281 0
	jmp	.L5170	#
.L5149:
	.loc 1 25284 0
	movq	-8(%rbp), %rax	# insn, tmp110
	movq	%rax, %rdi	# tmp110,
	call	extract_constrain_insn_cached	#
	.loc 1 25285 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4505
	cmpl	$3, %eax	#, which_alternative.4505
	jne	.L5175	#,
	.loc 1 25287 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25293 0
	jmp	.L5170	#
.L5175:
	.loc 1 25291 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25293 0
	jmp	.L5170	#
.L5160:
	.loc 1 25297 0
	movq	-8(%rbp), %rax	# insn, tmp111
	movq	%rax, %rdi	# tmp111,
	call	extract_constrain_insn_cached	#
	.loc 1 25298 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4506
	cmpl	$2, %eax	#, which_alternative.4506
	jne	.L5177	#,
	.loc 1 25300 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25306 0
	jmp	.L5170	#
.L5177:
	.loc 1 25304 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25306 0
	jmp	.L5170	#
.L5159:
	.loc 1 25309 0
	movq	-8(%rbp), %rax	# insn, tmp112
	movq	%rax, %rdi	# tmp112,
	call	extract_constrain_insn_cached	#
	.loc 1 25310 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4507
	testl	%eax, %eax	# which_alternative.4507
	jne	.L5179	#,
	.loc 1 25310 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57425
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57425,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57424
	je	.L5180	#,
.L5179:
	.loc 1 25312 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25318 0
	jmp	.L5170	#
.L5180:
	.loc 1 25316 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25318 0
	jmp	.L5170	#
.L5156:
	.loc 1 25321 0
	movq	-8(%rbp), %rax	# insn, tmp113
	movq	%rax, %rdi	# tmp113,
	call	extract_constrain_insn_cached	#
	.loc 1 25322 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4508
	cmpl	$2, %eax	#, which_alternative.4508
	je	.L5182	#,
	.loc 1 25322 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57425
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57425,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57424
	je	.L5183	#,
.L5182:
	.loc 1 25324 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25330 0
	jmp	.L5170	#
.L5183:
	.loc 1 25328 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25330 0
	jmp	.L5170	#
.L5158:
	.loc 1 25333 0
	movq	-8(%rbp), %rax	# insn, tmp114
	movq	%rax, %rdi	# tmp114,
	call	extract_constrain_insn_cached	#
	.loc 1 25334 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4509
	cmpl	$2, %eax	#, which_alternative.4509
	je	.L5185	#,
	.loc 1 25334 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57425
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57425,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57424
	je	.L5186	#,
.L5185:
	.loc 1 25336 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25342 0
	jmp	.L5170	#
.L5186:
	.loc 1 25340 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25342 0
	jmp	.L5170	#
.L5152:
	.loc 1 25354 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25355 0
	jmp	.L5170	#
.L5154:
	.loc 1 25358 0
	movq	-8(%rbp), %rax	# insn, tmp115
	movq	%rax, %rdi	# tmp115,
	call	extract_constrain_insn_cached	#
	.loc 1 25359 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4510
	cmpl	$5, %eax	#, which_alternative.4510
	je	.L5188	#,
	.loc 1 25359 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4511
	cmpl	$6, %eax	#, which_alternative.4511
	je	.L5188	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4512
	cmpl	$7, %eax	#, which_alternative.4512
	je	.L5188	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4513
	cmpl	$8, %eax	#, which_alternative.4513
	je	.L5188	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4514
	cmpl	$4, %eax	#, which_alternative.4514
	je	.L5188	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4515
	testl	%eax, %eax	# flag_pic.4515
	je	.L5188	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57425
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57425,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57424
	je	.L5188	#,
	.loc 1 25361 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25367 0
	jmp	.L5170	#
.L5188:
	.loc 1 25365 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25367 0
	jmp	.L5170	#
.L5153:
	.loc 1 25370 0
	movq	-8(%rbp), %rax	# insn, tmp116
	movq	%rax, %rdi	# tmp116,
	call	extract_constrain_insn_cached	#
	.loc 1 25371 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4516
	cmpl	$4, %eax	#, which_alternative.4516
	je	.L5190	#,
	.loc 1 25371 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4517
	cmpl	$5, %eax	#, which_alternative.4517
	je	.L5190	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4518
	cmpl	$6, %eax	#, which_alternative.4518
	je	.L5190	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4519
	cmpl	$7, %eax	#, which_alternative.4519
	je	.L5190	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4520
	cmpl	$8, %eax	#, which_alternative.4520
	je	.L5190	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4521
	cmpl	$9, %eax	#, which_alternative.4521
	je	.L5190	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4522
	testl	%eax, %eax	# flag_pic.4522
	je	.L5190	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57425
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57425,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57424
	je	.L5190	#,
	.loc 1 25373 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25379 0
	jmp	.L5170	#
.L5190:
	.loc 1 25377 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25379 0
	jmp	.L5170	#
.L5155:
	.loc 1 25382 0
	movq	-8(%rbp), %rax	# insn, tmp117
	movq	32(%rax), %rax	# insn_15->fld[3].rtx, D.57425
	movzwl	(%rax), %eax	# _76->code, D.57426
	cmpw	$40, %ax	#, D.57426
	je	.L5148	#,
	.loc 1 25383 0
	movq	-8(%rbp), %rax	# insn, tmp118
	movq	32(%rax), %rax	# insn_15->fld[3].rtx, D.57425
	movq	%rax, %rdi	# D.57425,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57424
	jns	.L5148	#,
	.loc 1 25384 0
	movq	-8(%rbp), %rax	# insn, tmp119
	movl	$__FUNCTION__.21554, %ecx	#,
	movl	$25384, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp119,
	call	_fatal_insn_not_found	#
.L5148:
	.loc 1 25386 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 25387 0
	nop
.L5170:
	.loc 1 25391 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp120
	movq	%rax, -8(%rbp)	# tmp120, insn
	.loc 1 25392 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L5193	#,
	cmpl	$2, %eax	#, casenum
	je	.L5194	#,
	testl	%eax, %eax	# casenum
	jne	.L5198	#,
	.loc 1 25395 0
	movl	$1, %eax	#, D.57424
	jmp	.L5196	#
.L5193:
	.loc 1 25398 0
	movl	$10, %eax	#, D.57424
	jmp	.L5196	#
.L5194:
	.loc 1 25401 0
	movl	$1, %eax	#, D.57424
	jmp	.L5196	#
.L5198:
	.loc 1 25404 0
	movl	$__FUNCTION__.21554, %edx	#,
	movl	$25404, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5196:
	.loc 1 25406 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE72:
	.size	k6_store_unit_conflict_cost, .-k6_store_unit_conflict_cost
	.type	k6_load_unit_blockage, @function
k6_load_unit_blockage:
.LFB73:
	.loc 1 25413 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 25417 0
	movq	-24(%rbp), %rax	# executing_insn, tmp82
	movq	%rax, -8(%rbp)	# tmp82, insn
	.loc 1 25418 0
	movq	-8(%rbp), %rax	# insn, tmp83
	movl	40(%rax), %eax	# insn_12->fld[4].rtint, D.57433
	testl	%eax, %eax	# D.57433
	js	.L5200	#,
	.loc 1 25418 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp84
	movl	40(%rax), %eax	# insn_12->fld[4].rtint, iftmp.4523
	jmp	.L5201	#
.L5200:
	.loc 1 25418 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp85
	movq	%rax, %rdi	# tmp85,
	call	recog_memoized_1	#
.L5201:
	.loc 1 25418 0 discriminator 3
	addl	$1, %eax	#, tmp86
	cmpl	$806, %eax	#, tmp86
	ja	.L5202	#,
	movl	%eax, %eax	# tmp86, tmp87
	movq	.L5204(,%rax,8), %rax	#, tmp88
	jmp	*%rax	# tmp88
	.section	.rodata
	.align 8
	.align 4
.L5204:
	.quad	.L5203
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5208
	.quad	.L5208
	.quad	.L5207
	.quad	.L5207
	.quad	.L5202
	.quad	.L5206
	.quad	.L5208
	.quad	.L5202
	.quad	.L5207
	.quad	.L5207
	.quad	.L5202
	.quad	.L5206
	.quad	.L5208
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5207
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5208
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5209
	.quad	.L5207
	.quad	.L5208
	.quad	.L5208
	.quad	.L5207
	.quad	.L5207
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5208
	.quad	.L5202
	.quad	.L5210
	.quad	.L5210
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5207
	.quad	.L5202
	.quad	.L5207
	.quad	.L5202
	.quad	.L5202
	.quad	.L5207
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5202
	.quad	.L5202
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5202
	.quad	.L5202
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5205
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5207
	.quad	.L5202
	.quad	.L5207
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5207
	.quad	.L5202
	.quad	.L5207
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5207
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5208
	.quad	.L5208
	.quad	.L5202
	.quad	.L5202
	.quad	.L5211
	.quad	.L5211
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5211
	.quad	.L5211
	.quad	.L5211
	.quad	.L5211
	.quad	.L5211
	.quad	.L5202
	.quad	.L5212
	.quad	.L5212
	.quad	.L5212
	.quad	.L5212
	.quad	.L5212
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5211
	.quad	.L5206
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5208
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.quad	.L5213
	.quad	.L5213
	.quad	.L5213
	.quad	.L5213
	.quad	.L5213
	.quad	.L5213
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5206
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5202
	.quad	.L5206
	.quad	.L5208
	.quad	.L5206
	.quad	.L5206
	.quad	.L5206
	.text
.L5213:
	.loc 1 25426 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp89
	movq	%rax, %rdi	# tmp89,
	call	extract_insn_cached	#
	.loc 1 25427 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57434
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57434,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57433
	jne	.L5214	#,
	.loc 1 25429 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25435 0
	jmp	.L5216	#
.L5214:
	.loc 1 25433 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25435 0
	jmp	.L5216	#
.L5212:
	.loc 1 25442 0
	movq	-8(%rbp), %rax	# insn, tmp90
	movq	%rax, %rdi	# tmp90,
	call	extract_insn_cached	#
	.loc 1 25443 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57434
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57434,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57433
	jne	.L5217	#,
	.loc 1 25445 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25451 0
	jmp	.L5216	#
.L5217:
	.loc 1 25449 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25451 0
	jmp	.L5216	#
.L5211:
	.loc 1 25461 0
	movq	-8(%rbp), %rax	# insn, tmp91
	movq	%rax, %rdi	# tmp91,
	call	extract_insn_cached	#
	.loc 1 25462 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57434
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57434,
	call	memory_operand	#
	testl	%eax, %eax	# D.57433
	je	.L5219	#,
	.loc 1 25464 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25470 0
	jmp	.L5216	#
.L5219:
	.loc 1 25468 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25470 0
	jmp	.L5216	#
.L5210:
	.loc 1 25474 0
	movq	-8(%rbp), %rax	# insn, tmp92
	movq	%rax, %rdi	# tmp92,
	call	extract_constrain_insn_cached	#
	.loc 1 25475 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4524
	cmpl	$1, %eax	#, which_alternative.4524
	jne	.L5221	#,
	.loc 1 25475 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57434
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57434,
	call	memory_operand	#
	testl	%eax, %eax	# D.57433
	je	.L5221	#,
	.loc 1 25477 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25483 0
	jmp	.L5216	#
.L5221:
	.loc 1 25481 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25483 0
	jmp	.L5216	#
.L5209:
	.loc 1 25486 0
	movq	-8(%rbp), %rax	# insn, tmp93
	movq	%rax, %rdi	# tmp93,
	call	extract_constrain_insn_cached	#
	.loc 1 25487 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4525
	testl	%eax, %eax	# which_alternative.4525
	jne	.L5223	#,
	.loc 1 25487 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57434
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57434,
	call	memory_operand	#
	testl	%eax, %eax	# D.57433
	je	.L5223	#,
	.loc 1 25489 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25495 0
	jmp	.L5216	#
.L5223:
	.loc 1 25493 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25495 0
	jmp	.L5216	#
.L5208:
	.loc 1 25529 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25530 0
	jmp	.L5216	#
.L5207:
	.loc 1 25573 0
	movq	-8(%rbp), %rax	# insn, tmp94
	movq	%rax, %rdi	# tmp94,
	call	extract_insn_cached	#
	.loc 1 25574 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57434
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57434,
	call	memory_operand	#
	testl	%eax, %eax	# D.57433
	je	.L5225	#,
	.loc 1 25576 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25582 0
	jmp	.L5216	#
.L5225:
	.loc 1 25580 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25582 0
	jmp	.L5216	#
.L5205:
	.loc 1 25610 0
	movq	-8(%rbp), %rax	# insn, tmp95
	movq	%rax, %rdi	# tmp95,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57435
	jne	.L5227	#,
	.loc 1 25612 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25618 0
	jmp	.L5216	#
.L5227:
	.loc 1 25616 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25618 0
	jmp	.L5216	#
.L5203:
	.loc 1 25621 0
	movq	-8(%rbp), %rax	# insn, tmp96
	movq	32(%rax), %rax	# insn_12->fld[3].rtx, D.57434
	movzwl	(%rax), %eax	# _46->code, D.57436
	cmpw	$40, %ax	#, D.57436
	je	.L5206	#,
	.loc 1 25622 0
	movq	-8(%rbp), %rax	# insn, tmp97
	movq	32(%rax), %rax	# insn_12->fld[3].rtx, D.57434
	movq	%rax, %rdi	# D.57434,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57433
	jns	.L5206	#,
	.loc 1 25623 0
	movq	-8(%rbp), %rax	# insn, tmp98
	movl	$__FUNCTION__.21692, %ecx	#,
	movl	$25623, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp98,
	call	_fatal_insn_not_found	#
.L5206:
	.loc 1 25794 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25795 0
	jmp	.L5216	#
.L5202:
	.loc 1 25798 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25799 0
	nop
.L5216:
	.loc 1 25803 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp99
	movq	%rax, -8(%rbp)	# tmp99, insn
	.loc 1 25804 0
	movl	-12(%rbp), %eax	# casenum, casenum
	testl	%eax, %eax	# casenum
	je	.L5230	#,
	cmpl	$1, %eax	#, casenum
	je	.L5231	#,
	jmp	.L5233	#
.L5230:
	.loc 1 25807 0
	movl	$1, %eax	#, D.57433
	jmp	.L5232	#
.L5231:
	.loc 1 25810 0
	movl	$10, %eax	#, D.57433
	jmp	.L5232	#
.L5233:
	.loc 1 25813 0
	movl	$__FUNCTION__.21692, %edx	#,
	movl	$25813, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5232:
	.loc 1 25815 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE73:
	.size	k6_load_unit_blockage, .-k6_load_unit_blockage
	.type	k6_load_unit_conflict_cost, @function
k6_load_unit_conflict_cost:
.LFB74:
	.loc 1 25822 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 25826 0
	movq	-24(%rbp), %rax	# executing_insn, tmp82
	movq	%rax, -8(%rbp)	# tmp82, insn
	.loc 1 25827 0
	movq	-8(%rbp), %rax	# insn, tmp83
	movl	40(%rax), %eax	# insn_12->fld[4].rtint, D.57437
	testl	%eax, %eax	# D.57437
	js	.L5235	#,
	.loc 1 25827 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp84
	movl	40(%rax), %eax	# insn_12->fld[4].rtint, iftmp.4526
	jmp	.L5236	#
.L5235:
	.loc 1 25827 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp85
	movq	%rax, %rdi	# tmp85,
	call	recog_memoized_1	#
.L5236:
	.loc 1 25827 0 discriminator 3
	addl	$1, %eax	#, tmp86
	cmpl	$806, %eax	#, tmp86
	ja	.L5237	#,
	movl	%eax, %eax	# tmp86, tmp87
	movq	.L5239(,%rax,8), %rax	#, tmp88
	jmp	*%rax	# tmp88
	.section	.rodata
	.align 8
	.align 4
.L5239:
	.quad	.L5238
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5243
	.quad	.L5243
	.quad	.L5242
	.quad	.L5242
	.quad	.L5237
	.quad	.L5241
	.quad	.L5243
	.quad	.L5237
	.quad	.L5242
	.quad	.L5242
	.quad	.L5237
	.quad	.L5241
	.quad	.L5243
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5242
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5243
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5244
	.quad	.L5242
	.quad	.L5243
	.quad	.L5243
	.quad	.L5242
	.quad	.L5242
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5243
	.quad	.L5237
	.quad	.L5245
	.quad	.L5245
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5242
	.quad	.L5237
	.quad	.L5242
	.quad	.L5237
	.quad	.L5237
	.quad	.L5242
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5237
	.quad	.L5237
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5237
	.quad	.L5237
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5240
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5242
	.quad	.L5237
	.quad	.L5242
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5242
	.quad	.L5237
	.quad	.L5242
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5242
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5243
	.quad	.L5243
	.quad	.L5237
	.quad	.L5237
	.quad	.L5246
	.quad	.L5246
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5246
	.quad	.L5246
	.quad	.L5246
	.quad	.L5246
	.quad	.L5246
	.quad	.L5237
	.quad	.L5247
	.quad	.L5247
	.quad	.L5247
	.quad	.L5247
	.quad	.L5247
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5246
	.quad	.L5241
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5243
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.quad	.L5248
	.quad	.L5248
	.quad	.L5248
	.quad	.L5248
	.quad	.L5248
	.quad	.L5248
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5241
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5237
	.quad	.L5241
	.quad	.L5243
	.quad	.L5241
	.quad	.L5241
	.quad	.L5241
	.text
.L5248:
	.loc 1 25835 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp89
	movq	%rax, %rdi	# tmp89,
	call	extract_insn_cached	#
	.loc 1 25836 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57438
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57438,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57437
	jne	.L5249	#,
	.loc 1 25838 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25844 0
	jmp	.L5251	#
.L5249:
	.loc 1 25842 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25844 0
	jmp	.L5251	#
.L5247:
	.loc 1 25851 0
	movq	-8(%rbp), %rax	# insn, tmp90
	movq	%rax, %rdi	# tmp90,
	call	extract_insn_cached	#
	.loc 1 25852 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57438
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57438,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57437
	jne	.L5252	#,
	.loc 1 25854 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25860 0
	jmp	.L5251	#
.L5252:
	.loc 1 25858 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25860 0
	jmp	.L5251	#
.L5246:
	.loc 1 25870 0
	movq	-8(%rbp), %rax	# insn, tmp91
	movq	%rax, %rdi	# tmp91,
	call	extract_insn_cached	#
	.loc 1 25871 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57438
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57438,
	call	memory_operand	#
	testl	%eax, %eax	# D.57437
	je	.L5254	#,
	.loc 1 25873 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25879 0
	jmp	.L5251	#
.L5254:
	.loc 1 25877 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25879 0
	jmp	.L5251	#
.L5245:
	.loc 1 25883 0
	movq	-8(%rbp), %rax	# insn, tmp92
	movq	%rax, %rdi	# tmp92,
	call	extract_constrain_insn_cached	#
	.loc 1 25884 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4527
	cmpl	$1, %eax	#, which_alternative.4527
	jne	.L5256	#,
	.loc 1 25884 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57438
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57438,
	call	memory_operand	#
	testl	%eax, %eax	# D.57437
	je	.L5256	#,
	.loc 1 25886 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25892 0
	jmp	.L5251	#
.L5256:
	.loc 1 25890 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25892 0
	jmp	.L5251	#
.L5244:
	.loc 1 25895 0
	movq	-8(%rbp), %rax	# insn, tmp93
	movq	%rax, %rdi	# tmp93,
	call	extract_constrain_insn_cached	#
	.loc 1 25896 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4528
	testl	%eax, %eax	# which_alternative.4528
	jne	.L5258	#,
	.loc 1 25896 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57438
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57438,
	call	memory_operand	#
	testl	%eax, %eax	# D.57437
	je	.L5258	#,
	.loc 1 25898 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25904 0
	jmp	.L5251	#
.L5258:
	.loc 1 25902 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25904 0
	jmp	.L5251	#
.L5243:
	.loc 1 25938 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25939 0
	jmp	.L5251	#
.L5242:
	.loc 1 25982 0
	movq	-8(%rbp), %rax	# insn, tmp94
	movq	%rax, %rdi	# tmp94,
	call	extract_insn_cached	#
	.loc 1 25983 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57438
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57438,
	call	memory_operand	#
	testl	%eax, %eax	# D.57437
	je	.L5260	#,
	.loc 1 25985 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 25991 0
	jmp	.L5251	#
.L5260:
	.loc 1 25989 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 25991 0
	jmp	.L5251	#
.L5240:
	.loc 1 26019 0
	movq	-8(%rbp), %rax	# insn, tmp95
	movq	%rax, %rdi	# tmp95,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57439
	jne	.L5262	#,
	.loc 1 26021 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26027 0
	jmp	.L5251	#
.L5262:
	.loc 1 26025 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 26027 0
	jmp	.L5251	#
.L5238:
	.loc 1 26030 0
	movq	-8(%rbp), %rax	# insn, tmp96
	movq	32(%rax), %rax	# insn_12->fld[3].rtx, D.57438
	movzwl	(%rax), %eax	# _46->code, D.57440
	cmpw	$40, %ax	#, D.57440
	je	.L5241	#,
	.loc 1 26031 0
	movq	-8(%rbp), %rax	# insn, tmp97
	movq	32(%rax), %rax	# insn_12->fld[3].rtx, D.57438
	movq	%rax, %rdi	# D.57438,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57437
	jns	.L5241	#,
	.loc 1 26032 0
	movq	-8(%rbp), %rax	# insn, tmp98
	movl	$__FUNCTION__.21999, %ecx	#,
	movl	$26032, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp98,
	call	_fatal_insn_not_found	#
.L5241:
	.loc 1 26203 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 26204 0
	jmp	.L5251	#
.L5237:
	.loc 1 26207 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26208 0
	nop
.L5251:
	.loc 1 26212 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp99
	movq	%rax, -8(%rbp)	# tmp99, insn
	.loc 1 26213 0
	movl	-12(%rbp), %eax	# casenum, casenum
	testl	%eax, %eax	# casenum
	je	.L5265	#,
	cmpl	$1, %eax	#, casenum
	je	.L5266	#,
	jmp	.L5268	#
.L5265:
	.loc 1 26216 0
	movl	$1, %eax	#, D.57437
	jmp	.L5267	#
.L5266:
	.loc 1 26219 0
	movl	$10, %eax	#, D.57437
	jmp	.L5267	#
.L5268:
	.loc 1 26222 0
	movl	$__FUNCTION__.21999, %edx	#,
	movl	$26222, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5267:
	.loc 1 26224 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE74:
	.size	k6_load_unit_conflict_cost, .-k6_load_unit_conflict_cost
	.type	k6_alu_unit_blockage, @function
k6_alu_unit_blockage:
.LFB75:
	.loc 1 26231 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 26235 0
	movq	-24(%rbp), %rax	# executing_insn, tmp274
	movq	%rax, -8(%rbp)	# tmp274, insn
	.loc 1 26236 0
	movq	-8(%rbp), %rax	# insn, tmp275
	movl	40(%rax), %eax	# insn_26->fld[4].rtint, D.57441
	testl	%eax, %eax	# D.57441
	js	.L5270	#,
	.loc 1 26236 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp276
	movl	40(%rax), %eax	# insn_26->fld[4].rtint, iftmp.4529
	jmp	.L5271	#
.L5270:
	.loc 1 26236 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp277
	movq	%rax, %rdi	# tmp277,
	call	recog_memoized_1	#
.L5271:
	.loc 1 26236 0 discriminator 3
	addl	$1, %eax	#, tmp278
	cmpl	$637, %eax	#, tmp278
	ja	.L5272	#,
	movl	%eax, %eax	# tmp278, tmp279
	movq	.L5274(,%rax,8), %rax	#, tmp280
	jmp	*%rax	# tmp280
	.section	.rodata
	.align 8
	.align 4
.L5274:
	.quad	.L5273
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5276
	.quad	.L5272
	.quad	.L5272
	.quad	.L5277
	.quad	.L5272
	.quad	.L5272
	.quad	.L5278
	.quad	.L5272
	.quad	.L5272
	.quad	.L5277
	.quad	.L5277
	.quad	.L5277
	.quad	.L5275
	.quad	.L5272
	.quad	.L5272
	.quad	.L5279
	.quad	.L5277
	.quad	.L5277
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5280
	.quad	.L5280
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5280
	.quad	.L5281
	.quad	.L5277
	.quad	.L5277
	.quad	.L5277
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5282
	.quad	.L5272
	.quad	.L5272
	.quad	.L5277
	.quad	.L5272
	.quad	.L5272
	.quad	.L5283
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5284
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5285
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5286
	.quad	.L5287
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5288
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5289
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5290
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5291
	.quad	.L5292
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5291
	.quad	.L5293
	.quad	.L5292
	.quad	.L5294
	.quad	.L5291
	.quad	.L5292
	.quad	.L5292
	.quad	.L5295
	.quad	.L5292
	.quad	.L5292
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5275
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5275
	.quad	.L5272
	.quad	.L5275
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5272
	.quad	.L5296
	.quad	.L5297
	.text
.L5297:
	.loc 1 26239 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp281
	movq	%rax, %rdi	# tmp281,
	call	extract_constrain_insn_cached	#
	.loc 1 26240 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4530
	cmpl	$1, %eax	#, which_alternative.4530
	jne	.L5298	#,
	.loc 1 26240 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	const0_operand	#
	testl	%eax, %eax	# D.57441
	jne	.L5299	#,
.L5298:
	.loc 1 26242 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5300	#
.L5299:
	.loc 1 26244 0
	movq	-8(%rbp), %rax	# insn, tmp282
	movq	%rax, %rdi	# tmp282,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5301	#,
	.loc 1 26246 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5300	#
.L5301:
	.loc 1 26250 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26252 0
	jmp	.L5302	#
.L5300:
	jmp	.L5302	#
.L5296:
	.loc 1 26255 0
	movq	-8(%rbp), %rax	# insn, tmp283
	movq	%rax, %rdi	# tmp283,
	call	extract_constrain_insn_cached	#
	.loc 1 26256 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4531
	cmpl	$1, %eax	#, which_alternative.4531
	jne	.L5303	#,
	.loc 1 26256 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	const0_operand	#
	testl	%eax, %eax	# D.57441
	jne	.L5304	#,
.L5303:
	.loc 1 26258 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5305	#
.L5304:
	.loc 1 26260 0
	movq	-8(%rbp), %rax	# insn, tmp284
	movq	%rax, %rdi	# tmp284,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5306	#,
	.loc 1 26262 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5305	#
.L5306:
	.loc 1 26266 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26268 0
	jmp	.L5302	#
.L5305:
	jmp	.L5302	#
.L5295:
	.loc 1 26271 0
	movq	-8(%rbp), %rax	# insn, tmp285
	movq	%rax, %rdi	# tmp285,
	call	extract_constrain_insn_cached	#
	.loc 1 26272 0
	movq	-8(%rbp), %rax	# insn, tmp286
	movq	%rax, %rdi	# tmp286,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57444
	je	.L5307	#,
	.loc 1 26272 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp287
	movq	%rax, %rdi	# tmp287,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57444
	je	.L5307	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4532
	cmpl	$2, %eax	#, which_alternative.4532
	jne	.L5308	#,
.L5307:
	.loc 1 26274 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26280 0
	jmp	.L5302	#
.L5308:
	.loc 1 26278 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26280 0
	jmp	.L5302	#
.L5294:
	.loc 1 26283 0
	movq	-8(%rbp), %rax	# insn, tmp288
	movq	%rax, %rdi	# tmp288,
	call	extract_constrain_insn_cached	#
	.loc 1 26284 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4533
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4534
	movl	%eax, %ecx	# ix86_cpu.4535, tmp332
	sarl	%cl, %edx	# tmp332, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5310	#,
	.loc 1 26284 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	const1_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5310	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4536
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4537
	movl	%eax, %ecx	# ix86_cpu.4538, tmp334
	sarl	%cl, %edx	# tmp334, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5311	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	const1_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5311	#,
.L5310:
	.loc 1 26286 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26292 0
	jmp	.L5302	#
.L5311:
	.loc 1 26290 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26292 0
	jmp	.L5302	#
.L5293:
	.loc 1 26295 0
	movq	-8(%rbp), %rax	# insn, tmp289
	movq	%rax, %rdi	# tmp289,
	call	extract_constrain_insn_cached	#
	.loc 1 26296 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4539
	testl	%eax, %eax	# which_alternative.4539
	jne	.L5313	#,
	.loc 1 26296 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4540
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4541
	movl	%eax, %ecx	# ix86_cpu.4542, tmp336
	sarl	%cl, %edx	# tmp336, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5314	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	const1_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5314	#,
.L5313:
	.loc 1 26296 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4543
	testl	%eax, %eax	# which_alternative.4543
	jne	.L5314	#,
	.loc 1 26296 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4544
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4545
	movl	%eax, %ecx	# ix86_cpu.4546, tmp338
	sarl	%cl, %edx	# tmp338, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5315	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	const1_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5315	#,
.L5314:
	.loc 1 26298 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26304 0
	jmp	.L5302	#
.L5315:
	.loc 1 26302 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26304 0
	jmp	.L5302	#
.L5292:
	.loc 1 26312 0
	movq	-8(%rbp), %rax	# insn, tmp290
	movq	%rax, %rdi	# tmp290,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57444
	je	.L5317	#,
	.loc 1 26312 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp291
	movq	%rax, %rdi	# tmp291,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57444
	jne	.L5318	#,
.L5317:
	.loc 1 26314 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26320 0
	jmp	.L5302	#
.L5318:
	.loc 1 26318 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26320 0
	jmp	.L5302	#
.L5291:
	.loc 1 26325 0
	movq	-8(%rbp), %rax	# insn, tmp292
	movq	%rax, %rdi	# tmp292,
	call	extract_constrain_insn_cached	#
	.loc 1 26326 0
	movq	-8(%rbp), %rax	# insn, tmp293
	movq	%rax, %rdi	# tmp293,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57444
	je	.L5320	#,
	.loc 1 26326 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4547
	testl	%eax, %eax	# which_alternative.4547
	jne	.L5320	#,
	movq	-8(%rbp), %rax	# insn, tmp294
	movq	%rax, %rdi	# tmp294,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57444
	jne	.L5321	#,
.L5320:
	.loc 1 26328 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26334 0
	jmp	.L5302	#
.L5321:
	.loc 1 26332 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26334 0
	jmp	.L5302	#
.L5290:
	.loc 1 26353 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 26354 0
	jmp	.L5302	#
.L5289:
	.loc 1 26357 0
	movq	-8(%rbp), %rax	# insn, tmp295
	movq	%rax, %rdi	# tmp295,
	call	extract_constrain_insn_cached	#
	.loc 1 26358 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4548
	cmpl	$3, %eax	#, which_alternative.4548
	je	.L5323	#,
	.loc 1 26358 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5324	#,
.L5323:
	.loc 1 26358 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57441
	jne	.L5324	#,
	.loc 1 26358 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4549
	cmpl	$3, %eax	#, which_alternative.4549
	jne	.L5325	#,
.L5324:
	.loc 1 26360 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26366 0
	jmp	.L5302	#
.L5325:
	.loc 1 26364 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26366 0
	jmp	.L5302	#
.L5288:
	.loc 1 26369 0
	movq	-8(%rbp), %rax	# insn, tmp296
	movq	%rax, %rdi	# tmp296,
	call	extract_constrain_insn_cached	#
	.loc 1 26370 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4550
	cmpl	$2, %eax	#, which_alternative.4550
	je	.L5327	#,
	.loc 1 26370 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5328	#,
.L5327:
	.loc 1 26370 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57441
	jne	.L5328	#,
	.loc 1 26370 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4551
	cmpl	$2, %eax	#, which_alternative.4551
	jne	.L5329	#,
.L5328:
	.loc 1 26372 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26378 0
	jmp	.L5302	#
.L5329:
	.loc 1 26376 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26378 0
	jmp	.L5302	#
.L5287:
	.loc 1 26381 0
	movq	-8(%rbp), %rax	# insn, tmp297
	movq	%rax, %rdi	# tmp297,
	call	extract_constrain_insn_cached	#
	.loc 1 26382 0
	movq	-8(%rbp), %rax	# insn, tmp298
	movq	%rax, %rdi	# tmp298,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57444
	je	.L5331	#,
	.loc 1 26382 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp299
	movq	%rax, %rdi	# tmp299,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57444
	je	.L5331	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4552
	testl	%eax, %eax	# which_alternative.4552
	jne	.L5331	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5332	#,
.L5331:
	.loc 1 26384 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26390 0
	jmp	.L5302	#
.L5332:
	.loc 1 26388 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26390 0
	jmp	.L5302	#
.L5286:
	.loc 1 26393 0
	movq	-8(%rbp), %rax	# insn, tmp300
	movq	%rax, %rdi	# tmp300,
	call	extract_constrain_insn_cached	#
	.loc 1 26394 0
	movq	-8(%rbp), %rax	# insn, tmp301
	movq	%rax, %rdi	# tmp301,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57444
	je	.L5334	#,
	.loc 1 26394 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp302
	movq	%rax, %rdi	# tmp302,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57444
	je	.L5334	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4553
	cmpl	$2, %eax	#, which_alternative.4553
	je	.L5334	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5335	#,
.L5334:
	.loc 1 26396 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26402 0
	jmp	.L5302	#
.L5335:
	.loc 1 26400 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26402 0
	jmp	.L5302	#
.L5285:
	.loc 1 26405 0
	movq	-8(%rbp), %rax	# insn, tmp303
	movq	%rax, %rdi	# tmp303,
	call	extract_constrain_insn_cached	#
	.loc 1 26406 0
	movq	-8(%rbp), %rax	# insn, tmp304
	movq	%rax, %rdi	# tmp304,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57444
	je	.L5337	#,
	.loc 1 26406 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp305
	movq	%rax, %rdi	# tmp305,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57444
	je	.L5337	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4554
	cmpl	$2, %eax	#, which_alternative.4554
	je	.L5337	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57442
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5338	#,
.L5337:
	.loc 1 26408 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26414 0
	jmp	.L5302	#
.L5338:
	.loc 1 26412 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26414 0
	jmp	.L5302	#
.L5284:
	.loc 1 26417 0
	movq	-8(%rbp), %rax	# insn, tmp306
	movq	%rax, %rdi	# tmp306,
	call	extract_constrain_insn_cached	#
	.loc 1 26418 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4555
	testl	%eax, %eax	# which_alternative.4555
	jne	.L5340	#,
	.loc 1 26420 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5341	#
.L5340:
	.loc 1 26422 0
	movq	-8(%rbp), %rax	# insn, tmp307
	movq	%rax, %rdi	# tmp307,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5342	#,
	.loc 1 26424 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5341	#
.L5342:
	.loc 1 26428 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26430 0
	jmp	.L5302	#
.L5341:
	jmp	.L5302	#
.L5283:
	.loc 1 26433 0
	movq	-8(%rbp), %rax	# insn, tmp308
	movq	%rax, %rdi	# tmp308,
	call	extract_constrain_insn_cached	#
	.loc 1 26434 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4556
	testl	%eax, %eax	# which_alternative.4556
	je	.L5343	#,
	.loc 1 26434 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4557
	cmpl	$1, %eax	#, which_alternative.4557
	je	.L5343	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4558
	cmpl	$2, %eax	#, which_alternative.4558
	je	.L5343	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4559
	cmpl	$3, %eax	#, which_alternative.4559
	je	.L5344	#,
	.loc 1 26434 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4560
	cmpl	$4, %eax	#, which_alternative.4560
	jne	.L5343	#,
.L5344:
	.loc 1 26434 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp309
	movq	%rax, %rdi	# tmp309,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5343	#,
	.loc 1 26436 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 26442 0
	jmp	.L5302	#
.L5343:
	.loc 1 26440 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26442 0
	jmp	.L5302	#
.L5282:
	.loc 1 26445 0
	movq	-8(%rbp), %rax	# insn, tmp310
	movq	%rax, %rdi	# tmp310,
	call	extract_constrain_insn_cached	#
	.loc 1 26446 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4561
	cmpl	$5, %eax	#, which_alternative.4561
	je	.L5346	#,
	.loc 1 26446 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4562
	cmpl	$6, %eax	#, which_alternative.4562
	je	.L5346	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4563
	cmpl	$7, %eax	#, which_alternative.4563
	je	.L5346	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4564
	cmpl	$8, %eax	#, which_alternative.4564
	je	.L5346	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4565
	cmpl	$4, %eax	#, which_alternative.4565
	je	.L5346	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4566
	testl	%eax, %eax	# flag_pic.4566
	je	.L5346	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57442
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5346	#,
	.loc 1 26448 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5347	#
.L5346:
	.loc 1 26450 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4567
	cmpl	$5, %eax	#, which_alternative.4567
	je	.L5348	#,
	.loc 1 26450 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4568
	cmpl	$6, %eax	#, which_alternative.4568
	je	.L5348	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4569
	cmpl	$7, %eax	#, which_alternative.4569
	je	.L5348	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4570
	cmpl	$8, %eax	#, which_alternative.4570
	je	.L5348	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4571
	cmpl	$4, %eax	#, which_alternative.4571
	je	.L5348	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4572
	testl	%eax, %eax	# flag_pic.4572
	je	.L5349	#,
	.loc 1 26450 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57442
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57441
	jne	.L5348	#,
.L5349:
	.loc 1 26450 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp311
	movq	%rax, %rdi	# tmp311,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5348	#,
	.loc 1 26452 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5347	#
.L5348:
	.loc 1 26456 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26458 0
	jmp	.L5302	#
.L5347:
	jmp	.L5302	#
.L5281:
	.loc 1 26461 0
	movq	-8(%rbp), %rax	# insn, tmp312
	movq	%rax, %rdi	# tmp312,
	call	extract_constrain_insn_cached	#
	.loc 1 26462 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57442
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5350	#,
	.loc 1 26462 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4573
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4574
	movl	%eax, %ecx	# ix86_cpu.4575, tmp340
	sarl	%cl, %edx	# tmp340, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5351	#,
.L5350:
	.loc 1 26464 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5352	#
.L5351:
	.loc 1 26466 0
	movq	-8(%rbp), %rax	# insn, tmp313
	movq	%rax, %rdi	# tmp313,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5353	#,
	.loc 1 26468 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5352	#
.L5353:
	.loc 1 26472 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26474 0
	jmp	.L5302	#
.L5352:
	jmp	.L5302	#
.L5280:
	.loc 1 26479 0
	movq	-8(%rbp), %rax	# insn, tmp314
	movq	%rax, %rdi	# tmp314,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57444
	jne	.L5354	#,
	.loc 1 26481 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5355	#
.L5354:
	.loc 1 26483 0
	movq	-8(%rbp), %rax	# insn, tmp315
	movq	%rax, %rdi	# tmp315,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57444
	jne	.L5356	#,
	.loc 1 26483 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp316
	movq	%rax, %rdi	# tmp316,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5356	#,
	.loc 1 26485 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5355	#
.L5356:
	.loc 1 26489 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26491 0
	jmp	.L5302	#
.L5355:
	jmp	.L5302	#
.L5279:
	.loc 1 26494 0
	movq	-8(%rbp), %rax	# insn, tmp317
	movq	%rax, %rdi	# tmp317,
	call	extract_constrain_insn_cached	#
	.loc 1 26495 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4576
	cmpl	$3, %eax	#, which_alternative.4576
	jne	.L5357	#,
	.loc 1 26495 0 is_stmt 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4577
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4578
	movl	%eax, %ecx	# ix86_cpu.4579, tmp342
	sarl	%cl, %edx	# tmp342, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5358	#,
	.loc 1 26495 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4580
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4581
	movl	%eax, %ecx	# ix86_cpu.4582, tmp344
	sarl	%cl, %edx	# tmp344, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5358	#,
.L5357:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4583
	cmpl	$3, %eax	#, which_alternative.4583
	je	.L5359	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4584
	cmpl	$5, %eax	#, which_alternative.4584
	je	.L5359	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4585
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4586
	movl	%eax, %ecx	# ix86_cpu.4587, tmp346
	sarl	%cl, %edx	# tmp346, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5358	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4588
	cmpl	$2, %eax	#, which_alternative.4588
	jne	.L5358	#,
.L5359:
	.loc 1 26497 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5360	#
.L5358:
	.loc 1 26499 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4589
	cmpl	$3, %eax	#, which_alternative.4589
	jne	.L5361	#,
	.loc 1 26499 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4590
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4591
	movl	%eax, %ecx	# ix86_cpu.4592, tmp348
	sarl	%cl, %edx	# tmp348, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5362	#,
	.loc 1 26499 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4593
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4594
	movl	%eax, %ecx	# ix86_cpu.4595, tmp350
	sarl	%cl, %edx	# tmp350, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5362	#,
.L5361:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4596
	cmpl	$3, %eax	#, which_alternative.4596
	jne	.L5363	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4597
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4598
	movl	%eax, %ecx	# ix86_cpu.4599, tmp352
	sarl	%cl, %edx	# tmp352, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5364	#,
	.loc 1 26499 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4600
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4601
	movl	%eax, %ecx	# ix86_cpu.4602, tmp354
	sarl	%cl, %edx	# tmp354, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5364	#,
.L5363:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4603
	cmpl	$3, %eax	#, which_alternative.4603
	je	.L5364	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4604
	cmpl	$5, %eax	#, which_alternative.4604
	je	.L5364	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4605
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4606
	movl	%eax, %ecx	# ix86_cpu.4607, tmp356
	sarl	%cl, %edx	# tmp356, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5362	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4608
	cmpl	$2, %eax	#, which_alternative.4608
	je	.L5364	#,
.L5362:
	movq	-8(%rbp), %rax	# insn, tmp318
	movq	%rax, %rdi	# tmp318,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5364	#,
	.loc 1 26501 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5360	#
.L5364:
	.loc 1 26505 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26507 0
	jmp	.L5302	#
.L5360:
	jmp	.L5302	#
.L5278:
	.loc 1 26510 0
	movq	-8(%rbp), %rax	# insn, tmp319
	movq	%rax, %rdi	# tmp319,
	call	extract_constrain_insn_cached	#
	.loc 1 26511 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4609
	testl	%eax, %eax	# which_alternative.4609
	je	.L5365	#,
	.loc 1 26511 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4610
	cmpl	$1, %eax	#, which_alternative.4610
	jne	.L5366	#,
.L5365:
	.loc 1 26511 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4611
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4612
	movl	%eax, %ecx	# ix86_cpu.4613, tmp358
	sarl	%cl, %edx	# tmp358, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5367	#,
	.loc 1 26511 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.4614
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4615
	movl	%eax, %ecx	# ix86_cpu.4616, tmp360
	sarl	%cl, %edx	# tmp360, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5367	#,
.L5366:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4617
	cmpl	$2, %eax	#, which_alternative.4617
	je	.L5368	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4618
	cmpl	$3, %eax	#, which_alternative.4618
	je	.L5368	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4619
	cmpl	$4, %eax	#, which_alternative.4619
	jne	.L5369	#,
.L5368:
	.loc 1 26511 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57442
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57441
	jne	.L5367	#,
.L5369:
	.loc 1 26511 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4620
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4621
	movl	%eax, %ecx	# ix86_cpu.4622, tmp362
	sarl	%cl, %edx	# tmp362, D.57441
	movl	%edx, %eax	# D.57441, D.57441
	andl	$1, %eax	#, D.57441
	testl	%eax, %eax	# D.57441
	je	.L5367	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4623
	testl	%eax, %eax	# which_alternative.4623
	je	.L5370	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4624
	cmpl	$1, %eax	#, which_alternative.4624
	je	.L5370	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4625
	cmpl	$3, %eax	#, which_alternative.4625
	je	.L5370	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4626
	cmpl	$4, %eax	#, which_alternative.4626
	jne	.L5367	#,
.L5370:
	.loc 1 26513 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5371	#
.L5367:
	.loc 1 26515 0
	movq	-8(%rbp), %rax	# insn, tmp320
	movq	%rax, %rdi	# tmp320,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57444
	jne	.L5372	#,
	.loc 1 26515 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp321
	movq	%rax, %rdi	# tmp321,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5372	#,
	.loc 1 26517 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5371	#
.L5372:
	.loc 1 26521 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26523 0
	jmp	.L5302	#
.L5371:
	jmp	.L5302	#
.L5277:
	.loc 1 26535 0
	movq	-8(%rbp), %rax	# insn, tmp322
	movq	%rax, %rdi	# tmp322,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5373	#,
	.loc 1 26537 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 26543 0
	jmp	.L5302	#
.L5373:
	.loc 1 26541 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26543 0
	jmp	.L5302	#
.L5276:
	.loc 1 26546 0
	movq	-8(%rbp), %rax	# insn, tmp323
	movq	%rax, %rdi	# tmp323,
	call	extract_constrain_insn_cached	#
	.loc 1 26547 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4627
	cmpl	$4, %eax	#, which_alternative.4627
	je	.L5375	#,
	.loc 1 26547 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4628
	cmpl	$5, %eax	#, which_alternative.4628
	je	.L5375	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4629
	cmpl	$6, %eax	#, which_alternative.4629
	je	.L5375	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4630
	cmpl	$7, %eax	#, which_alternative.4630
	je	.L5375	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4631
	cmpl	$8, %eax	#, which_alternative.4631
	je	.L5375	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4632
	cmpl	$9, %eax	#, which_alternative.4632
	je	.L5375	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4633
	testl	%eax, %eax	# flag_pic.4633
	je	.L5375	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57442
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57441
	je	.L5375	#,
	.loc 1 26549 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5376	#
.L5375:
	.loc 1 26551 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4634
	cmpl	$4, %eax	#, which_alternative.4634
	je	.L5377	#,
	.loc 1 26551 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4635
	cmpl	$5, %eax	#, which_alternative.4635
	je	.L5377	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4636
	cmpl	$6, %eax	#, which_alternative.4636
	je	.L5377	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4637
	cmpl	$7, %eax	#, which_alternative.4637
	je	.L5377	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4638
	cmpl	$8, %eax	#, which_alternative.4638
	je	.L5377	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4639
	cmpl	$9, %eax	#, which_alternative.4639
	je	.L5377	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4640
	testl	%eax, %eax	# flag_pic.4640
	je	.L5378	#,
	.loc 1 26551 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57442
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57442,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57441
	jne	.L5377	#,
.L5378:
	.loc 1 26551 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp324
	movq	%rax, %rdi	# tmp324,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57443
	jne	.L5377	#,
	.loc 1 26553 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5376	#
.L5377:
	.loc 1 26557 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26559 0
	jmp	.L5302	#
.L5376:
	jmp	.L5302	#
.L5275:
	.loc 1 26815 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26816 0
	jmp	.L5302	#
.L5273:
	.loc 1 26819 0
	movq	-8(%rbp), %rax	# insn, tmp325
	movq	32(%rax), %rax	# insn_26->fld[3].rtx, D.57442
	movzwl	(%rax), %eax	# _290->code, D.57445
	cmpw	$40, %ax	#, D.57445
	je	.L5272	#,
	.loc 1 26820 0
	movq	-8(%rbp), %rax	# insn, tmp326
	movq	32(%rax), %rax	# insn_26->fld[3].rtx, D.57442
	movq	%rax, %rdi	# D.57442,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57441
	jns	.L5272	#,
	.loc 1 26821 0
	movq	-8(%rbp), %rax	# insn, tmp327
	movl	$__FUNCTION__.22495, %ecx	#,
	movl	$26821, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp327,
	call	_fatal_insn_not_found	#
.L5272:
	.loc 1 26823 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26824 0
	nop
.L5302:
	.loc 1 26828 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp328
	movq	%rax, -8(%rbp)	# tmp328, insn
	.loc 1 26829 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L5380	#,
	cmpl	$1, %eax	#, casenum
	jg	.L5381	#,
	testl	%eax, %eax	# casenum
	je	.L5382	#,
	jmp	.L5379	#
.L5381:
	cmpl	$2, %eax	#, casenum
	je	.L5383	#,
	cmpl	$3, %eax	#, casenum
	je	.L5384	#,
	jmp	.L5379	#
.L5382:
	.loc 1 26832 0
	movl	$1, %eax	#, D.57441
	jmp	.L5385	#
.L5380:
	.loc 1 26835 0
	movl	$1, %eax	#, D.57441
	jmp	.L5385	#
.L5383:
	.loc 1 26838 0
	movl	$2, %eax	#, D.57441
	jmp	.L5385	#
.L5384:
	.loc 1 26841 0
	movl	$17, %eax	#, D.57441
	jmp	.L5385	#
.L5379:
	.loc 1 26844 0
	movl	$__FUNCTION__.22495, %edx	#,
	movl	$26844, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5385:
	.loc 1 26846 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE75:
	.size	k6_alu_unit_blockage, .-k6_alu_unit_blockage
	.type	k6_alu_unit_conflict_cost, @function
k6_alu_unit_conflict_cost:
.LFB76:
	.loc 1 26853 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 26857 0
	movq	-24(%rbp), %rax	# executing_insn, tmp274
	movq	%rax, -8(%rbp)	# tmp274, insn
	.loc 1 26858 0
	movq	-8(%rbp), %rax	# insn, tmp275
	movl	40(%rax), %eax	# insn_26->fld[4].rtint, D.57447
	testl	%eax, %eax	# D.57447
	js	.L5387	#,
	.loc 1 26858 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp276
	movl	40(%rax), %eax	# insn_26->fld[4].rtint, iftmp.4641
	jmp	.L5388	#
.L5387:
	.loc 1 26858 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp277
	movq	%rax, %rdi	# tmp277,
	call	recog_memoized_1	#
.L5388:
	.loc 1 26858 0 discriminator 3
	addl	$1, %eax	#, tmp278
	cmpl	$637, %eax	#, tmp278
	ja	.L5389	#,
	movl	%eax, %eax	# tmp278, tmp279
	movq	.L5391(,%rax,8), %rax	#, tmp280
	jmp	*%rax	# tmp280
	.section	.rodata
	.align 8
	.align 4
.L5391:
	.quad	.L5390
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5393
	.quad	.L5389
	.quad	.L5389
	.quad	.L5394
	.quad	.L5389
	.quad	.L5389
	.quad	.L5395
	.quad	.L5389
	.quad	.L5389
	.quad	.L5394
	.quad	.L5394
	.quad	.L5394
	.quad	.L5392
	.quad	.L5389
	.quad	.L5389
	.quad	.L5396
	.quad	.L5394
	.quad	.L5394
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5397
	.quad	.L5397
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5397
	.quad	.L5398
	.quad	.L5394
	.quad	.L5394
	.quad	.L5394
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5399
	.quad	.L5389
	.quad	.L5389
	.quad	.L5394
	.quad	.L5389
	.quad	.L5389
	.quad	.L5400
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5401
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5402
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5403
	.quad	.L5404
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5405
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5406
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5407
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5408
	.quad	.L5409
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5408
	.quad	.L5410
	.quad	.L5409
	.quad	.L5411
	.quad	.L5408
	.quad	.L5409
	.quad	.L5409
	.quad	.L5412
	.quad	.L5409
	.quad	.L5409
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5392
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5392
	.quad	.L5389
	.quad	.L5392
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5389
	.quad	.L5413
	.quad	.L5414
	.text
.L5414:
	.loc 1 26861 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp281
	movq	%rax, %rdi	# tmp281,
	call	extract_constrain_insn_cached	#
	.loc 1 26862 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4642
	cmpl	$1, %eax	#, which_alternative.4642
	jne	.L5415	#,
	.loc 1 26862 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	const0_operand	#
	testl	%eax, %eax	# D.57447
	jne	.L5416	#,
.L5415:
	.loc 1 26864 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5417	#
.L5416:
	.loc 1 26866 0
	movq	-8(%rbp), %rax	# insn, tmp282
	movq	%rax, %rdi	# tmp282,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5418	#,
	.loc 1 26868 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5417	#
.L5418:
	.loc 1 26872 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26874 0
	jmp	.L5419	#
.L5417:
	jmp	.L5419	#
.L5413:
	.loc 1 26877 0
	movq	-8(%rbp), %rax	# insn, tmp283
	movq	%rax, %rdi	# tmp283,
	call	extract_constrain_insn_cached	#
	.loc 1 26878 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4643
	cmpl	$1, %eax	#, which_alternative.4643
	jne	.L5420	#,
	.loc 1 26878 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	const0_operand	#
	testl	%eax, %eax	# D.57447
	jne	.L5421	#,
.L5420:
	.loc 1 26880 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5422	#
.L5421:
	.loc 1 26882 0
	movq	-8(%rbp), %rax	# insn, tmp284
	movq	%rax, %rdi	# tmp284,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5423	#,
	.loc 1 26884 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5422	#
.L5423:
	.loc 1 26888 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26890 0
	jmp	.L5419	#
.L5422:
	jmp	.L5419	#
.L5412:
	.loc 1 26893 0
	movq	-8(%rbp), %rax	# insn, tmp285
	movq	%rax, %rdi	# tmp285,
	call	extract_constrain_insn_cached	#
	.loc 1 26894 0
	movq	-8(%rbp), %rax	# insn, tmp286
	movq	%rax, %rdi	# tmp286,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57450
	je	.L5424	#,
	.loc 1 26894 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp287
	movq	%rax, %rdi	# tmp287,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57450
	je	.L5424	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4644
	cmpl	$2, %eax	#, which_alternative.4644
	jne	.L5425	#,
.L5424:
	.loc 1 26896 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26902 0
	jmp	.L5419	#
.L5425:
	.loc 1 26900 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26902 0
	jmp	.L5419	#
.L5411:
	.loc 1 26905 0
	movq	-8(%rbp), %rax	# insn, tmp288
	movq	%rax, %rdi	# tmp288,
	call	extract_constrain_insn_cached	#
	.loc 1 26906 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4645
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4646
	movl	%eax, %ecx	# ix86_cpu.4647, tmp332
	sarl	%cl, %edx	# tmp332, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5427	#,
	.loc 1 26906 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	const1_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5427	#,
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4648
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4649
	movl	%eax, %ecx	# ix86_cpu.4650, tmp334
	sarl	%cl, %edx	# tmp334, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5428	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	const1_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5428	#,
.L5427:
	.loc 1 26908 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26914 0
	jmp	.L5419	#
.L5428:
	.loc 1 26912 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26914 0
	jmp	.L5419	#
.L5410:
	.loc 1 26917 0
	movq	-8(%rbp), %rax	# insn, tmp289
	movq	%rax, %rdi	# tmp289,
	call	extract_constrain_insn_cached	#
	.loc 1 26918 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4651
	testl	%eax, %eax	# which_alternative.4651
	jne	.L5430	#,
	.loc 1 26918 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4652
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4653
	movl	%eax, %ecx	# ix86_cpu.4654, tmp336
	sarl	%cl, %edx	# tmp336, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5431	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	const1_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5431	#,
.L5430:
	.loc 1 26918 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4655
	testl	%eax, %eax	# which_alternative.4655
	jne	.L5431	#,
	.loc 1 26918 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4656
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4657
	movl	%eax, %ecx	# ix86_cpu.4658, tmp338
	sarl	%cl, %edx	# tmp338, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5432	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	const1_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5432	#,
.L5431:
	.loc 1 26920 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26926 0
	jmp	.L5419	#
.L5432:
	.loc 1 26924 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26926 0
	jmp	.L5419	#
.L5409:
	.loc 1 26934 0
	movq	-8(%rbp), %rax	# insn, tmp290
	movq	%rax, %rdi	# tmp290,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57450
	je	.L5434	#,
	.loc 1 26934 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp291
	movq	%rax, %rdi	# tmp291,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57450
	jne	.L5435	#,
.L5434:
	.loc 1 26936 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26942 0
	jmp	.L5419	#
.L5435:
	.loc 1 26940 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26942 0
	jmp	.L5419	#
.L5408:
	.loc 1 26947 0
	movq	-8(%rbp), %rax	# insn, tmp292
	movq	%rax, %rdi	# tmp292,
	call	extract_constrain_insn_cached	#
	.loc 1 26948 0
	movq	-8(%rbp), %rax	# insn, tmp293
	movq	%rax, %rdi	# tmp293,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57450
	je	.L5437	#,
	.loc 1 26948 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4659
	testl	%eax, %eax	# which_alternative.4659
	jne	.L5437	#,
	movq	-8(%rbp), %rax	# insn, tmp294
	movq	%rax, %rdi	# tmp294,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57450
	jne	.L5438	#,
.L5437:
	.loc 1 26950 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26956 0
	jmp	.L5419	#
.L5438:
	.loc 1 26954 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26956 0
	jmp	.L5419	#
.L5407:
	.loc 1 26975 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 26976 0
	jmp	.L5419	#
.L5406:
	.loc 1 26979 0
	movq	-8(%rbp), %rax	# insn, tmp295
	movq	%rax, %rdi	# tmp295,
	call	extract_constrain_insn_cached	#
	.loc 1 26980 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4660
	cmpl	$3, %eax	#, which_alternative.4660
	je	.L5440	#,
	.loc 1 26980 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5441	#,
.L5440:
	.loc 1 26980 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57447
	jne	.L5441	#,
	.loc 1 26980 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4661
	cmpl	$3, %eax	#, which_alternative.4661
	jne	.L5442	#,
.L5441:
	.loc 1 26982 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 26988 0
	jmp	.L5419	#
.L5442:
	.loc 1 26986 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 26988 0
	jmp	.L5419	#
.L5405:
	.loc 1 26991 0
	movq	-8(%rbp), %rax	# insn, tmp296
	movq	%rax, %rdi	# tmp296,
	call	extract_constrain_insn_cached	#
	.loc 1 26992 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4662
	cmpl	$2, %eax	#, which_alternative.4662
	je	.L5444	#,
	.loc 1 26992 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5445	#,
.L5444:
	.loc 1 26992 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57447
	jne	.L5445	#,
	.loc 1 26992 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4663
	cmpl	$2, %eax	#, which_alternative.4663
	jne	.L5446	#,
.L5445:
	.loc 1 26994 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 27000 0
	jmp	.L5419	#
.L5446:
	.loc 1 26998 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27000 0
	jmp	.L5419	#
.L5404:
	.loc 1 27003 0
	movq	-8(%rbp), %rax	# insn, tmp297
	movq	%rax, %rdi	# tmp297,
	call	extract_constrain_insn_cached	#
	.loc 1 27004 0
	movq	-8(%rbp), %rax	# insn, tmp298
	movq	%rax, %rdi	# tmp298,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57450
	je	.L5448	#,
	.loc 1 27004 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp299
	movq	%rax, %rdi	# tmp299,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57450
	je	.L5448	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4664
	testl	%eax, %eax	# which_alternative.4664
	jne	.L5448	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5449	#,
.L5448:
	.loc 1 27006 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 27012 0
	jmp	.L5419	#
.L5449:
	.loc 1 27010 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27012 0
	jmp	.L5419	#
.L5403:
	.loc 1 27015 0
	movq	-8(%rbp), %rax	# insn, tmp300
	movq	%rax, %rdi	# tmp300,
	call	extract_constrain_insn_cached	#
	.loc 1 27016 0
	movq	-8(%rbp), %rax	# insn, tmp301
	movq	%rax, %rdi	# tmp301,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57450
	je	.L5451	#,
	.loc 1 27016 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp302
	movq	%rax, %rdi	# tmp302,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57450
	je	.L5451	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4665
	cmpl	$2, %eax	#, which_alternative.4665
	je	.L5451	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5452	#,
.L5451:
	.loc 1 27018 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 27024 0
	jmp	.L5419	#
.L5452:
	.loc 1 27022 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27024 0
	jmp	.L5419	#
.L5402:
	.loc 1 27027 0
	movq	-8(%rbp), %rax	# insn, tmp303
	movq	%rax, %rdi	# tmp303,
	call	extract_constrain_insn_cached	#
	.loc 1 27028 0
	movq	-8(%rbp), %rax	# insn, tmp304
	movq	%rax, %rdi	# tmp304,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57450
	je	.L5454	#,
	.loc 1 27028 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp305
	movq	%rax, %rdi	# tmp305,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57450
	je	.L5454	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4666
	cmpl	$2, %eax	#, which_alternative.4666
	je	.L5454	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57448
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5455	#,
.L5454:
	.loc 1 27030 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 27036 0
	jmp	.L5419	#
.L5455:
	.loc 1 27034 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27036 0
	jmp	.L5419	#
.L5401:
	.loc 1 27039 0
	movq	-8(%rbp), %rax	# insn, tmp306
	movq	%rax, %rdi	# tmp306,
	call	extract_constrain_insn_cached	#
	.loc 1 27040 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4667
	testl	%eax, %eax	# which_alternative.4667
	jne	.L5457	#,
	.loc 1 27042 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5458	#
.L5457:
	.loc 1 27044 0
	movq	-8(%rbp), %rax	# insn, tmp307
	movq	%rax, %rdi	# tmp307,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5459	#,
	.loc 1 27046 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5458	#
.L5459:
	.loc 1 27050 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27052 0
	jmp	.L5419	#
.L5458:
	jmp	.L5419	#
.L5400:
	.loc 1 27055 0
	movq	-8(%rbp), %rax	# insn, tmp308
	movq	%rax, %rdi	# tmp308,
	call	extract_constrain_insn_cached	#
	.loc 1 27056 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4668
	testl	%eax, %eax	# which_alternative.4668
	je	.L5460	#,
	.loc 1 27056 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4669
	cmpl	$1, %eax	#, which_alternative.4669
	je	.L5460	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4670
	cmpl	$2, %eax	#, which_alternative.4670
	je	.L5460	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4671
	cmpl	$3, %eax	#, which_alternative.4671
	je	.L5461	#,
	.loc 1 27056 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4672
	cmpl	$4, %eax	#, which_alternative.4672
	jne	.L5460	#,
.L5461:
	.loc 1 27056 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp309
	movq	%rax, %rdi	# tmp309,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5460	#,
	.loc 1 27058 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27064 0
	jmp	.L5419	#
.L5460:
	.loc 1 27062 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27064 0
	jmp	.L5419	#
.L5399:
	.loc 1 27067 0
	movq	-8(%rbp), %rax	# insn, tmp310
	movq	%rax, %rdi	# tmp310,
	call	extract_constrain_insn_cached	#
	.loc 1 27068 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4673
	cmpl	$5, %eax	#, which_alternative.4673
	je	.L5463	#,
	.loc 1 27068 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4674
	cmpl	$6, %eax	#, which_alternative.4674
	je	.L5463	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4675
	cmpl	$7, %eax	#, which_alternative.4675
	je	.L5463	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4676
	cmpl	$8, %eax	#, which_alternative.4676
	je	.L5463	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4677
	cmpl	$4, %eax	#, which_alternative.4677
	je	.L5463	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4678
	testl	%eax, %eax	# flag_pic.4678
	je	.L5463	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57448
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5463	#,
	.loc 1 27070 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5464	#
.L5463:
	.loc 1 27072 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4679
	cmpl	$5, %eax	#, which_alternative.4679
	je	.L5465	#,
	.loc 1 27072 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4680
	cmpl	$6, %eax	#, which_alternative.4680
	je	.L5465	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4681
	cmpl	$7, %eax	#, which_alternative.4681
	je	.L5465	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4682
	cmpl	$8, %eax	#, which_alternative.4682
	je	.L5465	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4683
	cmpl	$4, %eax	#, which_alternative.4683
	je	.L5465	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4684
	testl	%eax, %eax	# flag_pic.4684
	je	.L5466	#,
	.loc 1 27072 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57448
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57447
	jne	.L5465	#,
.L5466:
	.loc 1 27072 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp311
	movq	%rax, %rdi	# tmp311,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5465	#,
	.loc 1 27074 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5464	#
.L5465:
	.loc 1 27078 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27080 0
	jmp	.L5419	#
.L5464:
	jmp	.L5419	#
.L5398:
	.loc 1 27083 0
	movq	-8(%rbp), %rax	# insn, tmp312
	movq	%rax, %rdi	# tmp312,
	call	extract_constrain_insn_cached	#
	.loc 1 27084 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57448
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5467	#,
	.loc 1 27084 0 is_stmt 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4685
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4686
	movl	%eax, %ecx	# ix86_cpu.4687, tmp340
	sarl	%cl, %edx	# tmp340, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5468	#,
.L5467:
	.loc 1 27086 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5469	#
.L5468:
	.loc 1 27088 0
	movq	-8(%rbp), %rax	# insn, tmp313
	movq	%rax, %rdi	# tmp313,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5470	#,
	.loc 1 27090 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5469	#
.L5470:
	.loc 1 27094 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27096 0
	jmp	.L5419	#
.L5469:
	jmp	.L5419	#
.L5397:
	.loc 1 27101 0
	movq	-8(%rbp), %rax	# insn, tmp314
	movq	%rax, %rdi	# tmp314,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57450
	jne	.L5471	#,
	.loc 1 27103 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5472	#
.L5471:
	.loc 1 27105 0
	movq	-8(%rbp), %rax	# insn, tmp315
	movq	%rax, %rdi	# tmp315,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57450
	jne	.L5473	#,
	.loc 1 27105 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp316
	movq	%rax, %rdi	# tmp316,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5473	#,
	.loc 1 27107 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5472	#
.L5473:
	.loc 1 27111 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27113 0
	jmp	.L5419	#
.L5472:
	jmp	.L5419	#
.L5396:
	.loc 1 27116 0
	movq	-8(%rbp), %rax	# insn, tmp317
	movq	%rax, %rdi	# tmp317,
	call	extract_constrain_insn_cached	#
	.loc 1 27117 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4688
	cmpl	$3, %eax	#, which_alternative.4688
	jne	.L5474	#,
	.loc 1 27117 0 is_stmt 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4689
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4690
	movl	%eax, %ecx	# ix86_cpu.4691, tmp342
	sarl	%cl, %edx	# tmp342, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5475	#,
	.loc 1 27117 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4692
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4693
	movl	%eax, %ecx	# ix86_cpu.4694, tmp344
	sarl	%cl, %edx	# tmp344, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5475	#,
.L5474:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4695
	cmpl	$3, %eax	#, which_alternative.4695
	je	.L5476	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4696
	cmpl	$5, %eax	#, which_alternative.4696
	je	.L5476	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4697
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4698
	movl	%eax, %ecx	# ix86_cpu.4699, tmp346
	sarl	%cl, %edx	# tmp346, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5475	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4700
	cmpl	$2, %eax	#, which_alternative.4700
	jne	.L5475	#,
.L5476:
	.loc 1 27119 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5477	#
.L5475:
	.loc 1 27121 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4701
	cmpl	$3, %eax	#, which_alternative.4701
	jne	.L5478	#,
	.loc 1 27121 0 is_stmt 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4702
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4703
	movl	%eax, %ecx	# ix86_cpu.4704, tmp348
	sarl	%cl, %edx	# tmp348, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5479	#,
	.loc 1 27121 0 discriminator 2
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4705
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4706
	movl	%eax, %ecx	# ix86_cpu.4707, tmp350
	sarl	%cl, %edx	# tmp350, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5479	#,
.L5478:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4708
	cmpl	$3, %eax	#, which_alternative.4708
	jne	.L5480	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4709
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4710
	movl	%eax, %ecx	# ix86_cpu.4711, tmp352
	sarl	%cl, %edx	# tmp352, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5481	#,
	.loc 1 27121 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4712
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4713
	movl	%eax, %ecx	# ix86_cpu.4714, tmp354
	sarl	%cl, %edx	# tmp354, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5481	#,
.L5480:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4715
	cmpl	$3, %eax	#, which_alternative.4715
	je	.L5481	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4716
	cmpl	$5, %eax	#, which_alternative.4716
	je	.L5481	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4717
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4718
	movl	%eax, %ecx	# ix86_cpu.4719, tmp356
	sarl	%cl, %edx	# tmp356, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5479	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4720
	cmpl	$2, %eax	#, which_alternative.4720
	je	.L5481	#,
.L5479:
	movq	-8(%rbp), %rax	# insn, tmp318
	movq	%rax, %rdi	# tmp318,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5481	#,
	.loc 1 27123 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5477	#
.L5481:
	.loc 1 27127 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27129 0
	jmp	.L5419	#
.L5477:
	jmp	.L5419	#
.L5395:
	.loc 1 27132 0
	movq	-8(%rbp), %rax	# insn, tmp319
	movq	%rax, %rdi	# tmp319,
	call	extract_constrain_insn_cached	#
	.loc 1 27133 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4721
	testl	%eax, %eax	# which_alternative.4721
	je	.L5482	#,
	.loc 1 27133 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4722
	cmpl	$1, %eax	#, which_alternative.4722
	jne	.L5483	#,
.L5482:
	.loc 1 27133 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4723
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4724
	movl	%eax, %ecx	# ix86_cpu.4725, tmp358
	sarl	%cl, %edx	# tmp358, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5484	#,
	.loc 1 27133 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.4726
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4727
	movl	%eax, %ecx	# ix86_cpu.4728, tmp360
	sarl	%cl, %edx	# tmp360, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5484	#,
.L5483:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4729
	cmpl	$2, %eax	#, which_alternative.4729
	je	.L5485	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4730
	cmpl	$3, %eax	#, which_alternative.4730
	je	.L5485	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4731
	cmpl	$4, %eax	#, which_alternative.4731
	jne	.L5486	#,
.L5485:
	.loc 1 27133 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57448
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57447
	jne	.L5484	#,
.L5486:
	.loc 1 27133 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4732
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4733
	movl	%eax, %ecx	# ix86_cpu.4734, tmp362
	sarl	%cl, %edx	# tmp362, D.57447
	movl	%edx, %eax	# D.57447, D.57447
	andl	$1, %eax	#, D.57447
	testl	%eax, %eax	# D.57447
	je	.L5484	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4735
	testl	%eax, %eax	# which_alternative.4735
	je	.L5487	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4736
	cmpl	$1, %eax	#, which_alternative.4736
	je	.L5487	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4737
	cmpl	$3, %eax	#, which_alternative.4737
	je	.L5487	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4738
	cmpl	$4, %eax	#, which_alternative.4738
	jne	.L5484	#,
.L5487:
	.loc 1 27135 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5488	#
.L5484:
	.loc 1 27137 0
	movq	-8(%rbp), %rax	# insn, tmp320
	movq	%rax, %rdi	# tmp320,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57450
	jne	.L5489	#,
	.loc 1 27137 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp321
	movq	%rax, %rdi	# tmp321,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5489	#,
	.loc 1 27139 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5488	#
.L5489:
	.loc 1 27143 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27145 0
	jmp	.L5419	#
.L5488:
	jmp	.L5419	#
.L5394:
	.loc 1 27157 0
	movq	-8(%rbp), %rax	# insn, tmp322
	movq	%rax, %rdi	# tmp322,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5490	#,
	.loc 1 27159 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27165 0
	jmp	.L5419	#
.L5490:
	.loc 1 27163 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27165 0
	jmp	.L5419	#
.L5393:
	.loc 1 27168 0
	movq	-8(%rbp), %rax	# insn, tmp323
	movq	%rax, %rdi	# tmp323,
	call	extract_constrain_insn_cached	#
	.loc 1 27169 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4739
	cmpl	$4, %eax	#, which_alternative.4739
	je	.L5492	#,
	.loc 1 27169 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4740
	cmpl	$5, %eax	#, which_alternative.4740
	je	.L5492	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4741
	cmpl	$6, %eax	#, which_alternative.4741
	je	.L5492	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4742
	cmpl	$7, %eax	#, which_alternative.4742
	je	.L5492	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4743
	cmpl	$8, %eax	#, which_alternative.4743
	je	.L5492	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4744
	cmpl	$9, %eax	#, which_alternative.4744
	je	.L5492	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4745
	testl	%eax, %eax	# flag_pic.4745
	je	.L5492	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57448
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57447
	je	.L5492	#,
	.loc 1 27171 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5493	#
.L5492:
	.loc 1 27173 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4746
	cmpl	$4, %eax	#, which_alternative.4746
	je	.L5494	#,
	.loc 1 27173 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4747
	cmpl	$5, %eax	#, which_alternative.4747
	je	.L5494	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4748
	cmpl	$6, %eax	#, which_alternative.4748
	je	.L5494	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4749
	cmpl	$7, %eax	#, which_alternative.4749
	je	.L5494	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4750
	cmpl	$8, %eax	#, which_alternative.4750
	je	.L5494	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4751
	cmpl	$9, %eax	#, which_alternative.4751
	je	.L5494	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4752
	testl	%eax, %eax	# flag_pic.4752
	je	.L5495	#,
	.loc 1 27173 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57448
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57448,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57447
	jne	.L5494	#,
.L5495:
	.loc 1 27173 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp324
	movq	%rax, %rdi	# tmp324,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57449
	jne	.L5494	#,
	.loc 1 27175 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5493	#
.L5494:
	.loc 1 27179 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27181 0
	jmp	.L5419	#
.L5493:
	jmp	.L5419	#
.L5392:
	.loc 1 27437 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 27438 0
	jmp	.L5419	#
.L5390:
	.loc 1 27441 0
	movq	-8(%rbp), %rax	# insn, tmp325
	movq	32(%rax), %rax	# insn_26->fld[3].rtx, D.57448
	movzwl	(%rax), %eax	# _290->code, D.57451
	cmpw	$40, %ax	#, D.57451
	je	.L5389	#,
	.loc 1 27442 0
	movq	-8(%rbp), %rax	# insn, tmp326
	movq	32(%rax), %rax	# insn_26->fld[3].rtx, D.57448
	movq	%rax, %rdi	# D.57448,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57447
	jns	.L5389	#,
	.loc 1 27443 0
	movq	-8(%rbp), %rax	# insn, tmp327
	movl	$__FUNCTION__.22823, %ecx	#,
	movl	$27443, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp327,
	call	_fatal_insn_not_found	#
.L5389:
	.loc 1 27445 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27446 0
	nop
.L5419:
	.loc 1 27450 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp328
	movq	%rax, -8(%rbp)	# tmp328, insn
	.loc 1 27451 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L5497	#,
	cmpl	$1, %eax	#, casenum
	jg	.L5498	#,
	testl	%eax, %eax	# casenum
	je	.L5499	#,
	jmp	.L5496	#
.L5498:
	cmpl	$2, %eax	#, casenum
	je	.L5500	#,
	cmpl	$3, %eax	#, casenum
	je	.L5501	#,
	jmp	.L5496	#
.L5499:
	.loc 1 27454 0
	movl	$1, %eax	#, D.57447
	jmp	.L5502	#
.L5497:
	.loc 1 27457 0
	movl	$1, %eax	#, D.57447
	jmp	.L5502	#
.L5500:
	.loc 1 27460 0
	movl	$2, %eax	#, D.57447
	jmp	.L5502	#
.L5501:
	.loc 1 27463 0
	movl	$17, %eax	#, D.57447
	jmp	.L5502	#
.L5496:
	.loc 1 27466 0
	movl	$__FUNCTION__.22823, %edx	#,
	movl	$27466, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5502:
	.loc 1 27468 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE76:
	.size	k6_alu_unit_conflict_cost, .-k6_alu_unit_conflict_cost
	.type	k6_alux_unit_blockage, @function
k6_alux_unit_blockage:
.LFB77:
	.loc 1 27475 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 27479 0
	movq	-24(%rbp), %rax	# executing_insn, tmp178
	movq	%rax, -8(%rbp)	# tmp178, insn
	.loc 1 27480 0
	movq	-8(%rbp), %rax	# insn, tmp179
	movl	40(%rax), %eax	# insn_19->fld[4].rtint, D.57453
	testl	%eax, %eax	# D.57453
	js	.L5504	#,
	.loc 1 27480 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp180
	movl	40(%rax), %eax	# insn_19->fld[4].rtint, iftmp.4753
	jmp	.L5505	#
.L5504:
	.loc 1 27480 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp181
	movq	%rax, %rdi	# tmp181,
	call	recog_memoized_1	#
.L5505:
	.loc 1 27480 0 discriminator 3
	addl	$1, %eax	#, tmp182
	cmpl	$637, %eax	#, tmp182
	ja	.L5506	#,
	movl	%eax, %eax	# tmp182, tmp183
	movq	.L5508(,%rax,8), %rax	#, tmp184
	jmp	*%rax	# tmp184
	.section	.rodata
	.align 8
	.align 4
.L5508:
	.quad	.L5507
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5510
	.quad	.L5510
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5511
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5510
	.quad	.L5506
	.quad	.L5506
	.quad	.L5512
	.quad	.L5506
	.quad	.L5506
	.quad	.L5510
	.quad	.L5509
	.quad	.L5509
	.quad	.L5513
	.quad	.L5513
	.quad	.L5506
	.quad	.L5506
	.quad	.L5509
	.quad	.L5513
	.quad	.L5514
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5510
	.quad	.L5510
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5510
	.quad	.L5509
	.quad	.L5510
	.quad	.L5515
	.quad	.L5509
	.quad	.L5510
	.quad	.L5515
	.quad	.L5509
	.quad	.L5506
	.quad	.L5516
	.quad	.L5509
	.quad	.L5509
	.quad	.L5506
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5517
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5517
	.quad	.L5517
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5518
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5519
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5506
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5520
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5506
	.quad	.L5506
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5510
	.quad	.L5509
	.quad	.L5510
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5510
	.quad	.L5509
	.quad	.L5510
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5509
	.quad	.L5506
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5510
	.quad	.L5521
	.quad	.L5521
	.quad	.L5506
	.quad	.L5506
	.quad	.L5522
	.quad	.L5521
	.quad	.L5523
	.quad	.L5521
	.quad	.L5524
	.quad	.L5521
	.quad	.L5521
	.quad	.L5521
	.quad	.L5521
	.quad	.L5521
	.quad	.L5521
	.quad	.L5525
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5506
	.quad	.L5506
	.quad	.L5522
	.quad	.L5525
	.quad	.L5525
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5506
	.quad	.L5506
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5522
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5509
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5522
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5509
	.quad	.L5506
	.quad	.L5509
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5506
	.quad	.L5516
	.quad	.L5516
	.text
.L5525:
	.loc 1 27485 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp185
	movq	%rax, %rdi	# tmp185,
	call	extract_constrain_insn_cached	#
	.loc 1 27486 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4754
	cmpl	$1, %eax	#, which_alternative.4754
	jne	.L5526	#,
	.loc 1 27488 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5527	#
.L5526:
	.loc 1 27490 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5528	#,
	.loc 1 27492 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5527	#
.L5528:
	.loc 1 27496 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27498 0
	jmp	.L5529	#
.L5527:
	jmp	.L5529	#
.L5524:
	.loc 1 27501 0
	movq	-8(%rbp), %rax	# insn, tmp186
	movq	%rax, %rdi	# tmp186,
	call	extract_constrain_insn_cached	#
	.loc 1 27502 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4755
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4756
	movl	%eax, %ecx	# ix86_cpu.4757, tmp212
	sarl	%cl, %edx	# tmp212, D.57453
	movl	%edx, %eax	# D.57453, D.57453
	andl	$1, %eax	#, D.57453
	testl	%eax, %eax	# D.57453
	je	.L5530	#,
	.loc 1 27502 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57454
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	const1_operand	#
	testl	%eax, %eax	# D.57453
	jne	.L5531	#,
.L5530:
	.loc 1 27504 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5532	#
.L5531:
	.loc 1 27506 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5533	#,
	.loc 1 27508 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5532	#
.L5533:
	.loc 1 27512 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27514 0
	jmp	.L5529	#
.L5532:
	jmp	.L5529	#
.L5523:
	.loc 1 27517 0
	movq	-8(%rbp), %rax	# insn, tmp187
	movq	%rax, %rdi	# tmp187,
	call	extract_constrain_insn_cached	#
	.loc 1 27518 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4758
	testl	%eax, %eax	# which_alternative.4758
	jne	.L5534	#,
	.loc 1 27518 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4759
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4760
	movl	%eax, %ecx	# ix86_cpu.4761, tmp214
	sarl	%cl, %edx	# tmp214, D.57453
	movl	%edx, %eax	# D.57453, D.57453
	andl	$1, %eax	#, D.57453
	testl	%eax, %eax	# D.57453
	je	.L5535	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57454
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	const1_operand	#
	testl	%eax, %eax	# D.57453
	jne	.L5534	#,
.L5535:
	.loc 1 27520 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5536	#
.L5534:
	.loc 1 27522 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4762
	testl	%eax, %eax	# which_alternative.4762
	jne	.L5537	#,
	.loc 1 27522 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4763
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4764
	movl	%eax, %ecx	# ix86_cpu.4765, tmp216
	sarl	%cl, %edx	# tmp216, D.57453
	movl	%edx, %eax	# D.57453, D.57453
	andl	$1, %eax	#, D.57453
	testl	%eax, %eax	# D.57453
	je	.L5537	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57454
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	const1_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5537	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5537	#,
	.loc 1 27524 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5536	#
.L5537:
	.loc 1 27528 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27530 0
	jmp	.L5529	#
.L5536:
	jmp	.L5529	#
.L5522:
	.loc 1 27595 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 27596 0
	jmp	.L5529	#
.L5521:
	.loc 1 27608 0
	movq	-8(%rbp), %rax	# insn, tmp188
	movq	%rax, %rdi	# tmp188,
	call	extract_insn_cached	#
	.loc 1 27609 0
	movq	-8(%rbp), %rax	# insn, tmp189
	movq	%rax, %rdi	# tmp189,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57455
	jne	.L5538	#,
	.loc 1 27611 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5539	#
.L5538:
	.loc 1 27613 0
	movq	-8(%rbp), %rax	# insn, tmp190
	movq	%rax, %rdi	# tmp190,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57455
	jne	.L5540	#,
	.loc 1 27615 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5539	#
.L5540:
	.loc 1 27619 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27621 0
	jmp	.L5529	#
.L5539:
	jmp	.L5529	#
.L5520:
	.loc 1 27640 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 27641 0
	jmp	.L5529	#
.L5519:
	.loc 1 27644 0
	movq	-8(%rbp), %rax	# insn, tmp191
	movq	%rax, %rdi	# tmp191,
	call	extract_constrain_insn_cached	#
	.loc 1 27645 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4766
	cmpl	$3, %eax	#, which_alternative.4766
	je	.L5541	#,
	.loc 1 27645 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5541	#,
	.loc 1 27647 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27653 0
	jmp	.L5529	#
.L5541:
	.loc 1 27651 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27653 0
	jmp	.L5529	#
.L5518:
	.loc 1 27656 0
	movq	-8(%rbp), %rax	# insn, tmp192
	movq	%rax, %rdi	# tmp192,
	call	extract_constrain_insn_cached	#
	.loc 1 27657 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4767
	cmpl	$2, %eax	#, which_alternative.4767
	je	.L5543	#,
	.loc 1 27657 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5543	#,
	.loc 1 27659 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27665 0
	jmp	.L5529	#
.L5543:
	.loc 1 27663 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27665 0
	jmp	.L5529	#
.L5517:
	.loc 1 27670 0
	movq	-8(%rbp), %rax	# insn, tmp193
	movq	%rax, %rdi	# tmp193,
	call	extract_insn_cached	#
	.loc 1 27671 0
	movq	-8(%rbp), %rax	# insn, tmp194
	movq	%rax, %rdi	# tmp194,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57455
	je	.L5545	#,
	.loc 1 27671 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp195
	movq	%rax, %rdi	# tmp195,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57455
	jne	.L5546	#,
.L5545:
	.loc 1 27671 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5546	#,
	.loc 1 27673 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27679 0
	jmp	.L5529	#
.L5546:
	.loc 1 27677 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27679 0
	jmp	.L5529	#
.L5516:
	.loc 1 27684 0
	movq	-8(%rbp), %rax	# insn, tmp196
	movq	%rax, %rdi	# tmp196,
	call	extract_constrain_insn_cached	#
	.loc 1 27685 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4768
	testl	%eax, %eax	# which_alternative.4768
	jne	.L5548	#,
	.loc 1 27685 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5548	#,
	.loc 1 27687 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27693 0
	jmp	.L5529	#
.L5548:
	.loc 1 27691 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27693 0
	jmp	.L5529	#
.L5515:
	.loc 1 27697 0
	movq	-8(%rbp), %rax	# insn, tmp197
	movq	%rax, %rdi	# tmp197,
	call	extract_constrain_insn_cached	#
	.loc 1 27698 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4769
	cmpl	$1, %eax	#, which_alternative.4769
	jne	.L5550	#,
	.loc 1 27700 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5551	#
.L5550:
	.loc 1 27702 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5552	#,
	.loc 1 27704 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5551	#
.L5552:
	.loc 1 27708 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27710 0
	jmp	.L5529	#
.L5551:
	jmp	.L5529	#
.L5514:
	.loc 1 27713 0
	movq	-8(%rbp), %rax	# insn, tmp198
	movq	%rax, %rdi	# tmp198,
	call	extract_constrain_insn_cached	#
	.loc 1 27714 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5553	#,
	.loc 1 27714 0 is_stmt 0 discriminator 2
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4770
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4771
	movl	%eax, %ecx	# ix86_cpu.4772, tmp218
	sarl	%cl, %edx	# tmp218, D.57453
	movl	%edx, %eax	# D.57453, D.57453
	andl	$1, %eax	#, D.57453
	testl	%eax, %eax	# D.57453
	je	.L5554	#,
.L5553:
	.loc 1 27714 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5554	#,
	.loc 1 27716 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27722 0
	jmp	.L5529	#
.L5554:
	.loc 1 27720 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27722 0
	jmp	.L5529	#
.L5513:
	.loc 1 27727 0
	movq	-8(%rbp), %rax	# insn, tmp199
	movq	%rax, %rdi	# tmp199,
	call	extract_insn_cached	#
	.loc 1 27728 0
	movq	-8(%rbp), %rax	# insn, tmp200
	movq	%rax, %rdi	# tmp200,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57455
	jne	.L5556	#,
	.loc 1 27728 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5556	#,
	.loc 1 27730 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27736 0
	jmp	.L5529	#
.L5556:
	.loc 1 27734 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27736 0
	jmp	.L5529	#
.L5512:
	.loc 1 27739 0
	movq	-8(%rbp), %rax	# insn, tmp201
	movq	%rax, %rdi	# tmp201,
	call	extract_constrain_insn_cached	#
	.loc 1 27740 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4773
	cmpl	$3, %eax	#, which_alternative.4773
	jne	.L5558	#,
	.loc 1 27740 0 is_stmt 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4774
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4775
	movl	%eax, %ecx	# ix86_cpu.4776, tmp220
	sarl	%cl, %edx	# tmp220, D.57453
	movl	%edx, %eax	# D.57453, D.57453
	andl	$1, %eax	#, D.57453
	testl	%eax, %eax	# D.57453
	je	.L5559	#,
	.loc 1 27740 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4777
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4778
	movl	%eax, %ecx	# ix86_cpu.4779, tmp222
	sarl	%cl, %edx	# tmp222, D.57453
	movl	%edx, %eax	# D.57453, D.57453
	andl	$1, %eax	#, D.57453
	testl	%eax, %eax	# D.57453
	je	.L5559	#,
.L5558:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4780
	cmpl	$3, %eax	#, which_alternative.4780
	je	.L5560	#,
	.loc 1 27740 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4781
	cmpl	$5, %eax	#, which_alternative.4781
	je	.L5560	#,
	.loc 1 27740 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4782
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4783
	movl	%eax, %ecx	# ix86_cpu.4784, tmp224
	sarl	%cl, %edx	# tmp224, D.57453
	movl	%edx, %eax	# D.57453, D.57453
	andl	$1, %eax	#, D.57453
	testl	%eax, %eax	# D.57453
	je	.L5559	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4785
	cmpl	$2, %eax	#, which_alternative.4785
	jne	.L5559	#,
.L5560:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5559	#,
	.loc 1 27742 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27748 0
	jmp	.L5529	#
.L5559:
	.loc 1 27746 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27748 0
	jmp	.L5529	#
.L5511:
	.loc 1 27751 0
	movq	-8(%rbp), %rax	# insn, tmp202
	movq	%rax, %rdi	# tmp202,
	call	extract_constrain_insn_cached	#
	.loc 1 27752 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4786
	testl	%eax, %eax	# which_alternative.4786
	je	.L5562	#,
	.loc 1 27752 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4787
	cmpl	$1, %eax	#, which_alternative.4787
	jne	.L5563	#,
.L5562:
	.loc 1 27752 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4788
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4789
	movl	%eax, %ecx	# ix86_cpu.4790, tmp226
	sarl	%cl, %edx	# tmp226, D.57453
	movl	%edx, %eax	# D.57453, D.57453
	andl	$1, %eax	#, D.57453
	testl	%eax, %eax	# D.57453
	je	.L5564	#,
	.loc 1 27752 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.4791
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4792
	movl	%eax, %ecx	# ix86_cpu.4793, tmp228
	sarl	%cl, %edx	# tmp228, D.57453
	movl	%edx, %eax	# D.57453, D.57453
	andl	$1, %eax	#, D.57453
	testl	%eax, %eax	# D.57453
	je	.L5564	#,
.L5563:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4794
	cmpl	$2, %eax	#, which_alternative.4794
	je	.L5565	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4795
	cmpl	$3, %eax	#, which_alternative.4795
	je	.L5565	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4796
	cmpl	$4, %eax	#, which_alternative.4796
	jne	.L5566	#,
.L5565:
	.loc 1 27752 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57454
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57453
	jne	.L5564	#,
.L5566:
	.loc 1 27752 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4797
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4798
	movl	%eax, %ecx	# ix86_cpu.4799, tmp230
	sarl	%cl, %edx	# tmp230, D.57453
	movl	%edx, %eax	# D.57453, D.57453
	andl	$1, %eax	#, D.57453
	testl	%eax, %eax	# D.57453
	je	.L5564	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4800
	testl	%eax, %eax	# which_alternative.4800
	je	.L5567	#,
	.loc 1 27752 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4801
	cmpl	$1, %eax	#, which_alternative.4801
	je	.L5567	#,
	.loc 1 27752 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4802
	cmpl	$3, %eax	#, which_alternative.4802
	je	.L5567	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4803
	cmpl	$4, %eax	#, which_alternative.4803
	jne	.L5564	#,
.L5567:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5564	#,
	.loc 1 27754 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27760 0
	jmp	.L5529	#
.L5564:
	.loc 1 27758 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27760 0
	jmp	.L5529	#
.L5510:
	.loc 1 27795 0
	movq	-8(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	extract_insn_cached	#
	.loc 1 27796 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 27797 0
	jmp	.L5529	#
.L5509:
	.loc 1 27941 0
	movq	-8(%rbp), %rax	# insn, tmp204
	movq	%rax, %rdi	# tmp204,
	call	extract_insn_cached	#
	.loc 1 27942 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57454
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57454,
	call	general_operand	#
	testl	%eax, %eax	# D.57453
	je	.L5569	#,
	.loc 1 27944 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 27950 0
	jmp	.L5529	#
.L5569:
	.loc 1 27948 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27950 0
	jmp	.L5529	#
.L5507:
	.loc 1 27953 0
	movq	-8(%rbp), %rax	# insn, tmp205
	movq	32(%rax), %rax	# insn_19->fld[3].rtx, D.57454
	movzwl	(%rax), %eax	# _170->code, D.57456
	cmpw	$40, %ax	#, D.57456
	je	.L5506	#,
	.loc 1 27954 0
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	32(%rax), %rax	# insn_19->fld[3].rtx, D.57454
	movq	%rax, %rdi	# D.57454,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57453
	jns	.L5506	#,
	.loc 1 27955 0
	movq	-8(%rbp), %rax	# insn, tmp207
	movl	$__FUNCTION__.23127, %ecx	#,
	movl	$27955, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp207,
	call	_fatal_insn_not_found	#
.L5506:
	.loc 1 27957 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 27958 0
	nop
.L5529:
	.loc 1 27962 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp208
	movq	%rax, -8(%rbp)	# tmp208, insn
	.loc 1 27963 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L5572	#,
	cmpl	$1, %eax	#, casenum
	jg	.L5573	#,
	testl	%eax, %eax	# casenum
	je	.L5574	#,
	jmp	.L5571	#
.L5573:
	cmpl	$2, %eax	#, casenum
	je	.L5575	#,
	cmpl	$3, %eax	#, casenum
	je	.L5576	#,
	jmp	.L5571	#
.L5574:
	.loc 1 27966 0
	movl	$1, %eax	#, D.57453
	jmp	.L5577	#
.L5572:
	.loc 1 27969 0
	movl	$1, %eax	#, D.57453
	jmp	.L5577	#
.L5575:
	.loc 1 27972 0
	movl	$2, %eax	#, D.57453
	jmp	.L5577	#
.L5576:
	.loc 1 27975 0
	movl	$17, %eax	#, D.57453
	jmp	.L5577	#
.L5571:
	.loc 1 27978 0
	movl	$__FUNCTION__.23127, %edx	#,
	movl	$27978, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5577:
	.loc 1 27980 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE77:
	.size	k6_alux_unit_blockage, .-k6_alux_unit_blockage
	.type	k6_alux_unit_conflict_cost, @function
k6_alux_unit_conflict_cost:
.LFB78:
	.loc 1 27987 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 27991 0
	movq	-24(%rbp), %rax	# executing_insn, tmp178
	movq	%rax, -8(%rbp)	# tmp178, insn
	.loc 1 27992 0
	movq	-8(%rbp), %rax	# insn, tmp179
	movl	40(%rax), %eax	# insn_19->fld[4].rtint, D.57458
	testl	%eax, %eax	# D.57458
	js	.L5579	#,
	.loc 1 27992 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp180
	movl	40(%rax), %eax	# insn_19->fld[4].rtint, iftmp.4804
	jmp	.L5580	#
.L5579:
	.loc 1 27992 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp181
	movq	%rax, %rdi	# tmp181,
	call	recog_memoized_1	#
.L5580:
	.loc 1 27992 0 discriminator 3
	addl	$1, %eax	#, tmp182
	cmpl	$637, %eax	#, tmp182
	ja	.L5581	#,
	movl	%eax, %eax	# tmp182, tmp183
	movq	.L5583(,%rax,8), %rax	#, tmp184
	jmp	*%rax	# tmp184
	.section	.rodata
	.align 8
	.align 4
.L5583:
	.quad	.L5582
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5585
	.quad	.L5585
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5586
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5585
	.quad	.L5581
	.quad	.L5581
	.quad	.L5587
	.quad	.L5581
	.quad	.L5581
	.quad	.L5585
	.quad	.L5584
	.quad	.L5584
	.quad	.L5588
	.quad	.L5588
	.quad	.L5581
	.quad	.L5581
	.quad	.L5584
	.quad	.L5588
	.quad	.L5589
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5585
	.quad	.L5585
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5585
	.quad	.L5584
	.quad	.L5585
	.quad	.L5590
	.quad	.L5584
	.quad	.L5585
	.quad	.L5590
	.quad	.L5584
	.quad	.L5581
	.quad	.L5591
	.quad	.L5584
	.quad	.L5584
	.quad	.L5581
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5592
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5592
	.quad	.L5592
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5593
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5594
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5581
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5595
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5581
	.quad	.L5581
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5585
	.quad	.L5584
	.quad	.L5585
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5585
	.quad	.L5584
	.quad	.L5585
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5584
	.quad	.L5581
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5585
	.quad	.L5596
	.quad	.L5596
	.quad	.L5581
	.quad	.L5581
	.quad	.L5597
	.quad	.L5596
	.quad	.L5598
	.quad	.L5596
	.quad	.L5599
	.quad	.L5596
	.quad	.L5596
	.quad	.L5596
	.quad	.L5596
	.quad	.L5596
	.quad	.L5596
	.quad	.L5600
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5581
	.quad	.L5581
	.quad	.L5597
	.quad	.L5600
	.quad	.L5600
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5581
	.quad	.L5581
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5597
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5584
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5597
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5584
	.quad	.L5581
	.quad	.L5584
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5581
	.quad	.L5591
	.quad	.L5591
	.text
.L5600:
	.loc 1 27997 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp185
	movq	%rax, %rdi	# tmp185,
	call	extract_constrain_insn_cached	#
	.loc 1 27998 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4805
	cmpl	$1, %eax	#, which_alternative.4805
	jne	.L5601	#,
	.loc 1 28000 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5602	#
.L5601:
	.loc 1 28002 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5603	#,
	.loc 1 28004 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5602	#
.L5603:
	.loc 1 28008 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28010 0
	jmp	.L5604	#
.L5602:
	jmp	.L5604	#
.L5599:
	.loc 1 28013 0
	movq	-8(%rbp), %rax	# insn, tmp186
	movq	%rax, %rdi	# tmp186,
	call	extract_constrain_insn_cached	#
	.loc 1 28014 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4806
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4807
	movl	%eax, %ecx	# ix86_cpu.4808, tmp212
	sarl	%cl, %edx	# tmp212, D.57458
	movl	%edx, %eax	# D.57458, D.57458
	andl	$1, %eax	#, D.57458
	testl	%eax, %eax	# D.57458
	je	.L5605	#,
	.loc 1 28014 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57459
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	const1_operand	#
	testl	%eax, %eax	# D.57458
	jne	.L5606	#,
.L5605:
	.loc 1 28016 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5607	#
.L5606:
	.loc 1 28018 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5608	#,
	.loc 1 28020 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5607	#
.L5608:
	.loc 1 28024 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28026 0
	jmp	.L5604	#
.L5607:
	jmp	.L5604	#
.L5598:
	.loc 1 28029 0
	movq	-8(%rbp), %rax	# insn, tmp187
	movq	%rax, %rdi	# tmp187,
	call	extract_constrain_insn_cached	#
	.loc 1 28030 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4809
	testl	%eax, %eax	# which_alternative.4809
	jne	.L5609	#,
	.loc 1 28030 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4810
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4811
	movl	%eax, %ecx	# ix86_cpu.4812, tmp214
	sarl	%cl, %edx	# tmp214, D.57458
	movl	%edx, %eax	# D.57458, D.57458
	andl	$1, %eax	#, D.57458
	testl	%eax, %eax	# D.57458
	je	.L5610	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57459
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	const1_operand	#
	testl	%eax, %eax	# D.57458
	jne	.L5609	#,
.L5610:
	.loc 1 28032 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5611	#
.L5609:
	.loc 1 28034 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4813
	testl	%eax, %eax	# which_alternative.4813
	jne	.L5612	#,
	.loc 1 28034 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4814
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4815
	movl	%eax, %ecx	# ix86_cpu.4816, tmp216
	sarl	%cl, %edx	# tmp216, D.57458
	movl	%edx, %eax	# D.57458, D.57458
	andl	$1, %eax	#, D.57458
	testl	%eax, %eax	# D.57458
	je	.L5612	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57459
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	const1_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5612	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5612	#,
	.loc 1 28036 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5611	#
.L5612:
	.loc 1 28040 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28042 0
	jmp	.L5604	#
.L5611:
	jmp	.L5604	#
.L5597:
	.loc 1 28107 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28108 0
	jmp	.L5604	#
.L5596:
	.loc 1 28120 0
	movq	-8(%rbp), %rax	# insn, tmp188
	movq	%rax, %rdi	# tmp188,
	call	extract_insn_cached	#
	.loc 1 28121 0
	movq	-8(%rbp), %rax	# insn, tmp189
	movq	%rax, %rdi	# tmp189,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57460
	jne	.L5613	#,
	.loc 1 28123 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5614	#
.L5613:
	.loc 1 28125 0
	movq	-8(%rbp), %rax	# insn, tmp190
	movq	%rax, %rdi	# tmp190,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57460
	jne	.L5615	#,
	.loc 1 28127 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5614	#
.L5615:
	.loc 1 28131 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28133 0
	jmp	.L5604	#
.L5614:
	jmp	.L5604	#
.L5595:
	.loc 1 28152 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 28153 0
	jmp	.L5604	#
.L5594:
	.loc 1 28156 0
	movq	-8(%rbp), %rax	# insn, tmp191
	movq	%rax, %rdi	# tmp191,
	call	extract_constrain_insn_cached	#
	.loc 1 28157 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4817
	cmpl	$3, %eax	#, which_alternative.4817
	je	.L5616	#,
	.loc 1 28157 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5616	#,
	.loc 1 28159 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 28165 0
	jmp	.L5604	#
.L5616:
	.loc 1 28163 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28165 0
	jmp	.L5604	#
.L5593:
	.loc 1 28168 0
	movq	-8(%rbp), %rax	# insn, tmp192
	movq	%rax, %rdi	# tmp192,
	call	extract_constrain_insn_cached	#
	.loc 1 28169 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4818
	cmpl	$2, %eax	#, which_alternative.4818
	je	.L5618	#,
	.loc 1 28169 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5618	#,
	.loc 1 28171 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 28177 0
	jmp	.L5604	#
.L5618:
	.loc 1 28175 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28177 0
	jmp	.L5604	#
.L5592:
	.loc 1 28182 0
	movq	-8(%rbp), %rax	# insn, tmp193
	movq	%rax, %rdi	# tmp193,
	call	extract_insn_cached	#
	.loc 1 28183 0
	movq	-8(%rbp), %rax	# insn, tmp194
	movq	%rax, %rdi	# tmp194,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57460
	je	.L5620	#,
	.loc 1 28183 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp195
	movq	%rax, %rdi	# tmp195,
	call	get_attr_type	#
	cmpl	$10, %eax	#, D.57460
	jne	.L5621	#,
.L5620:
	.loc 1 28183 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5621	#,
	.loc 1 28185 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 28191 0
	jmp	.L5604	#
.L5621:
	.loc 1 28189 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28191 0
	jmp	.L5604	#
.L5591:
	.loc 1 28196 0
	movq	-8(%rbp), %rax	# insn, tmp196
	movq	%rax, %rdi	# tmp196,
	call	extract_constrain_insn_cached	#
	.loc 1 28197 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4819
	testl	%eax, %eax	# which_alternative.4819
	jne	.L5623	#,
	.loc 1 28197 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5623	#,
	.loc 1 28199 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 28205 0
	jmp	.L5604	#
.L5623:
	.loc 1 28203 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28205 0
	jmp	.L5604	#
.L5590:
	.loc 1 28209 0
	movq	-8(%rbp), %rax	# insn, tmp197
	movq	%rax, %rdi	# tmp197,
	call	extract_constrain_insn_cached	#
	.loc 1 28210 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4820
	cmpl	$1, %eax	#, which_alternative.4820
	jne	.L5625	#,
	.loc 1 28212 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5626	#
.L5625:
	.loc 1 28214 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5627	#,
	.loc 1 28216 0
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5626	#
.L5627:
	.loc 1 28220 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28222 0
	jmp	.L5604	#
.L5626:
	jmp	.L5604	#
.L5589:
	.loc 1 28225 0
	movq	-8(%rbp), %rax	# insn, tmp198
	movq	%rax, %rdi	# tmp198,
	call	extract_constrain_insn_cached	#
	.loc 1 28226 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5628	#,
	.loc 1 28226 0 is_stmt 0 discriminator 2
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4821
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4822
	movl	%eax, %ecx	# ix86_cpu.4823, tmp218
	sarl	%cl, %edx	# tmp218, D.57458
	movl	%edx, %eax	# D.57458, D.57458
	andl	$1, %eax	#, D.57458
	testl	%eax, %eax	# D.57458
	je	.L5629	#,
.L5628:
	.loc 1 28226 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5629	#,
	.loc 1 28228 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 28234 0
	jmp	.L5604	#
.L5629:
	.loc 1 28232 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28234 0
	jmp	.L5604	#
.L5588:
	.loc 1 28239 0
	movq	-8(%rbp), %rax	# insn, tmp199
	movq	%rax, %rdi	# tmp199,
	call	extract_insn_cached	#
	.loc 1 28240 0
	movq	-8(%rbp), %rax	# insn, tmp200
	movq	%rax, %rdi	# tmp200,
	call	get_attr_type	#
	cmpl	$8, %eax	#, D.57460
	jne	.L5631	#,
	.loc 1 28240 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5631	#,
	.loc 1 28242 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 28248 0
	jmp	.L5604	#
.L5631:
	.loc 1 28246 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28248 0
	jmp	.L5604	#
.L5587:
	.loc 1 28251 0
	movq	-8(%rbp), %rax	# insn, tmp201
	movq	%rax, %rdi	# tmp201,
	call	extract_constrain_insn_cached	#
	.loc 1 28252 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4824
	cmpl	$3, %eax	#, which_alternative.4824
	jne	.L5633	#,
	.loc 1 28252 0 is_stmt 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4825
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4826
	movl	%eax, %ecx	# ix86_cpu.4827, tmp220
	sarl	%cl, %edx	# tmp220, D.57458
	movl	%edx, %eax	# D.57458, D.57458
	andl	$1, %eax	#, D.57458
	testl	%eax, %eax	# D.57458
	je	.L5634	#,
	.loc 1 28252 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.4828
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4829
	movl	%eax, %ecx	# ix86_cpu.4830, tmp222
	sarl	%cl, %edx	# tmp222, D.57458
	movl	%edx, %eax	# D.57458, D.57458
	andl	$1, %eax	#, D.57458
	testl	%eax, %eax	# D.57458
	je	.L5634	#,
.L5633:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4831
	cmpl	$3, %eax	#, which_alternative.4831
	je	.L5635	#,
	.loc 1 28252 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4832
	cmpl	$5, %eax	#, which_alternative.4832
	je	.L5635	#,
	.loc 1 28252 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4833
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4834
	movl	%eax, %ecx	# ix86_cpu.4835, tmp224
	sarl	%cl, %edx	# tmp224, D.57458
	movl	%edx, %eax	# D.57458, D.57458
	andl	$1, %eax	#, D.57458
	testl	%eax, %eax	# D.57458
	je	.L5634	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4836
	cmpl	$2, %eax	#, which_alternative.4836
	jne	.L5634	#,
.L5635:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5634	#,
	.loc 1 28254 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 28260 0
	jmp	.L5604	#
.L5634:
	.loc 1 28258 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28260 0
	jmp	.L5604	#
.L5586:
	.loc 1 28263 0
	movq	-8(%rbp), %rax	# insn, tmp202
	movq	%rax, %rdi	# tmp202,
	call	extract_constrain_insn_cached	#
	.loc 1 28264 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4837
	testl	%eax, %eax	# which_alternative.4837
	je	.L5637	#,
	.loc 1 28264 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4838
	cmpl	$1, %eax	#, which_alternative.4838
	jne	.L5638	#,
.L5637:
	.loc 1 28264 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.4839
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4840
	movl	%eax, %ecx	# ix86_cpu.4841, tmp226
	sarl	%cl, %edx	# tmp226, D.57458
	movl	%edx, %eax	# D.57458, D.57458
	andl	$1, %eax	#, D.57458
	testl	%eax, %eax	# D.57458
	je	.L5639	#,
	.loc 1 28264 0 discriminator 1
	movl	x86_himode_math(%rip), %edx	# x86_himode_math, x86_himode_math.4842
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4843
	movl	%eax, %ecx	# ix86_cpu.4844, tmp228
	sarl	%cl, %edx	# tmp228, D.57458
	movl	%edx, %eax	# D.57458, D.57458
	andl	$1, %eax	#, D.57458
	testl	%eax, %eax	# D.57458
	je	.L5639	#,
.L5638:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4845
	cmpl	$2, %eax	#, which_alternative.4845
	je	.L5640	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4846
	cmpl	$3, %eax	#, which_alternative.4846
	je	.L5640	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4847
	cmpl	$4, %eax	#, which_alternative.4847
	jne	.L5641	#,
.L5640:
	.loc 1 28264 0 discriminator 2
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57459
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	aligned_operand	#
	testl	%eax, %eax	# D.57458
	jne	.L5639	#,
.L5641:
	.loc 1 28264 0 discriminator 1
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.4848
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4849
	movl	%eax, %ecx	# ix86_cpu.4850, tmp230
	sarl	%cl, %edx	# tmp230, D.57458
	movl	%edx, %eax	# D.57458, D.57458
	andl	$1, %eax	#, D.57458
	testl	%eax, %eax	# D.57458
	je	.L5639	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4851
	testl	%eax, %eax	# which_alternative.4851
	je	.L5642	#,
	.loc 1 28264 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4852
	cmpl	$1, %eax	#, which_alternative.4852
	je	.L5642	#,
	.loc 1 28264 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4853
	cmpl	$3, %eax	#, which_alternative.4853
	je	.L5642	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4854
	cmpl	$4, %eax	#, which_alternative.4854
	jne	.L5639	#,
.L5642:
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5639	#,
	.loc 1 28266 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 28272 0
	jmp	.L5604	#
.L5639:
	.loc 1 28270 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28272 0
	jmp	.L5604	#
.L5585:
	.loc 1 28307 0
	movq	-8(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	extract_insn_cached	#
	.loc 1 28308 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28309 0
	jmp	.L5604	#
.L5584:
	.loc 1 28453 0
	movq	-8(%rbp), %rax	# insn, tmp204
	movq	%rax, %rdi	# tmp204,
	call	extract_insn_cached	#
	.loc 1 28454 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57459
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57459,
	call	general_operand	#
	testl	%eax, %eax	# D.57458
	je	.L5644	#,
	.loc 1 28456 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 28462 0
	jmp	.L5604	#
.L5644:
	.loc 1 28460 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28462 0
	jmp	.L5604	#
.L5582:
	.loc 1 28465 0
	movq	-8(%rbp), %rax	# insn, tmp205
	movq	32(%rax), %rax	# insn_19->fld[3].rtx, D.57459
	movzwl	(%rax), %eax	# _170->code, D.57461
	cmpw	$40, %ax	#, D.57461
	je	.L5581	#,
	.loc 1 28466 0
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	32(%rax), %rax	# insn_19->fld[3].rtx, D.57459
	movq	%rax, %rdi	# D.57459,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57458
	jns	.L5581	#,
	.loc 1 28467 0
	movq	-8(%rbp), %rax	# insn, tmp207
	movl	$__FUNCTION__.23431, %ecx	#,
	movl	$28467, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp207,
	call	_fatal_insn_not_found	#
.L5581:
	.loc 1 28469 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28470 0
	nop
.L5604:
	.loc 1 28474 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp208
	movq	%rax, -8(%rbp)	# tmp208, insn
	.loc 1 28475 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L5647	#,
	cmpl	$1, %eax	#, casenum
	jg	.L5648	#,
	testl	%eax, %eax	# casenum
	je	.L5649	#,
	jmp	.L5646	#
.L5648:
	cmpl	$2, %eax	#, casenum
	je	.L5650	#,
	cmpl	$3, %eax	#, casenum
	je	.L5651	#,
	jmp	.L5646	#
.L5649:
	.loc 1 28478 0
	movl	$1, %eax	#, D.57458
	jmp	.L5652	#
.L5647:
	.loc 1 28481 0
	movl	$1, %eax	#, D.57458
	jmp	.L5652	#
.L5650:
	.loc 1 28484 0
	movl	$2, %eax	#, D.57458
	jmp	.L5652	#
.L5651:
	.loc 1 28487 0
	movl	$17, %eax	#, D.57458
	jmp	.L5652	#
.L5646:
	.loc 1 28490 0
	movl	$__FUNCTION__.23431, %edx	#,
	movl	$28490, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5652:
	.loc 1 28492 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE78:
	.size	k6_alux_unit_conflict_cost, .-k6_alux_unit_conflict_cost
	.type	ppro_p0_unit_blockage, @function
ppro_p0_unit_blockage:
.LFB79:
	.loc 1 28499 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 28503 0
	movq	-24(%rbp), %rax	# executing_insn, tmp165
	movq	%rax, -8(%rbp)	# tmp165, insn
	.loc 1 28504 0
	movq	-8(%rbp), %rax	# insn, tmp166
	movl	40(%rax), %eax	# insn_37->fld[4].rtint, D.57463
	testl	%eax, %eax	# D.57463
	js	.L5654	#,
	.loc 1 28504 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp167
	movl	40(%rax), %eax	# insn_37->fld[4].rtint, iftmp.4855
	jmp	.L5655	#
.L5654:
	.loc 1 28504 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp168
	movq	%rax, %rdi	# tmp168,
	call	recog_memoized_1	#
.L5655:
	.loc 1 28504 0 discriminator 3
	addl	$1, %eax	#, tmp169
	cmpl	$637, %eax	#, tmp169
	ja	.L5656	#,
	movl	%eax, %eax	# tmp169, tmp170
	movq	.L5658(,%rax,8), %rax	#, tmp171
	jmp	*%rax	# tmp171
	.section	.rodata
	.align 8
	.align 4
.L5658:
	.quad	.L5657
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5659
	.quad	.L5659
	.quad	.L5659
	.quad	.L5656
	.quad	.L5659
	.quad	.L5659
	.quad	.L5656
	.quad	.L5656
	.quad	.L5659
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5659
	.quad	.L5660
	.quad	.L5656
	.quad	.L5659
	.quad	.L5660
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5661
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5662
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5663
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5663
	.quad	.L5663
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5663
	.quad	.L5663
	.quad	.L5663
	.quad	.L5663
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5664
	.quad	.L5656
	.quad	.L5665
	.quad	.L5665
	.quad	.L5665
	.quad	.L5665
	.quad	.L5666
	.quad	.L5666
	.quad	.L5667
	.quad	.L5665
	.quad	.L5656
	.quad	.L5666
	.quad	.L5665
	.quad	.L5666
	.quad	.L5665
	.quad	.L5666
	.quad	.L5665
	.quad	.L5666
	.quad	.L5665
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5656
	.quad	.L5656
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5656
	.quad	.L5656
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5656
	.quad	.L5656
	.quad	.L5666
	.quad	.L5666
	.quad	.L5656
	.quad	.L5666
	.quad	.L5666
	.quad	.L5656
	.quad	.L5666
	.quad	.L5666
	.quad	.L5656
	.quad	.L5666
	.quad	.L5666
	.quad	.L5656
	.quad	.L5666
	.quad	.L5666
	.quad	.L5666
	.quad	.L5666
	.quad	.L5666
	.quad	.L5666
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5670
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5671
	.quad	.L5672
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5673
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5674
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5675
	.quad	.L5676
	.quad	.L5676
	.quad	.L5656
	.quad	.L5656
	.quad	.L5676
	.quad	.L5656
	.quad	.L5656
	.quad	.L5676
	.quad	.L5656
	.quad	.L5656
	.quad	.L5676
	.quad	.L5656
	.quad	.L5676
	.quad	.L5676
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5668
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5677
	.quad	.L5678
	.quad	.L5656
	.quad	.L5656
	.quad	.L5669
	.quad	.L5677
	.quad	.L5679
	.quad	.L5678
	.quad	.L5680
	.quad	.L5677
	.quad	.L5678
	.quad	.L5678
	.quad	.L5681
	.quad	.L5678
	.quad	.L5678
	.quad	.L5682
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5656
	.quad	.L5656
	.quad	.L5669
	.quad	.L5682
	.quad	.L5682
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5656
	.quad	.L5656
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5669
	.quad	.L5669
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5669
	.quad	.L5683
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5669
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5684
	.quad	.L5685
	.quad	.L5656
	.quad	.L5684
	.quad	.L5685
	.quad	.L5656
	.quad	.L5686
	.quad	.L5687
	.quad	.L5688
	.quad	.L5689
	.quad	.L5656
	.quad	.L5688
	.quad	.L5688
	.quad	.L5690
	.quad	.L5691
	.quad	.L5656
	.quad	.L5690
	.quad	.L5690
	.quad	.L5690
	.quad	.L5690
	.quad	.L5692
	.quad	.L5693
	.quad	.L5692
	.quad	.L5693
	.quad	.L5692
	.quad	.L5693
	.quad	.L5692
	.quad	.L5693
	.quad	.L5692
	.quad	.L5693
	.quad	.L5692
	.quad	.L5693
	.quad	.L5692
	.quad	.L5693
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5669
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5694
	.quad	.L5694
	.quad	.L5694
	.quad	.L5695
	.quad	.L5695
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5656
	.quad	.L5696
	.quad	.L5697
	.text
.L5697:
	.loc 1 28507 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp172
	movq	%rax, %rdi	# tmp172,
	call	extract_constrain_insn_cached	#
	.loc 1 28508 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4856
	cmpl	$1, %eax	#, which_alternative.4856
	jne	.L5698	#,
	.loc 1 28508 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57464
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	const0_operand	#
	testl	%eax, %eax	# D.57463
	jne	.L5698	#,
	.loc 1 28510 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28516 0
	jmp	.L5700	#
.L5698:
	.loc 1 28514 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28516 0
	jmp	.L5700	#
.L5696:
	.loc 1 28519 0
	movq	-8(%rbp), %rax	# insn, tmp173
	movq	%rax, %rdi	# tmp173,
	call	extract_constrain_insn_cached	#
	.loc 1 28520 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4857
	cmpl	$1, %eax	#, which_alternative.4857
	jne	.L5701	#,
	.loc 1 28520 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57464
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	const0_operand	#
	testl	%eax, %eax	# D.57463
	jne	.L5701	#,
	.loc 1 28522 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28528 0
	jmp	.L5700	#
.L5701:
	.loc 1 28526 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28528 0
	jmp	.L5700	#
.L5695:
	.loc 1 28532 0
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 28533 0
	jmp	.L5700	#
.L5694:
	.loc 1 28538 0
	movq	-8(%rbp), %rax	# insn, tmp174
	movq	%rax, %rdi	# tmp174,
	call	extract_constrain_insn_cached	#
	.loc 1 28539 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4858
	testl	%eax, %eax	# which_alternative.4858
	je	.L5703	#,
	.loc 1 28539 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4859
	cmpl	$1, %eax	#, which_alternative.4859
	jne	.L5704	#,
.L5703:
	.loc 1 28541 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 28547 0
	jmp	.L5700	#
.L5704:
	.loc 1 28545 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28547 0
	jmp	.L5700	#
.L5693:
	.loc 1 28556 0
	movq	-8(%rbp), %rax	# insn, tmp175
	movq	%rax, %rdi	# tmp175,
	call	extract_insn_cached	#
	.loc 1 28557 0
	movq	-8(%rbp), %rax	# insn, tmp176
	movq	%rax, %rdi	# tmp176,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57465
	jne	.L5706	#,
	.loc 1 28559 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5707	#
.L5706:
	.loc 1 28561 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	je	.L5708	#,
	.loc 1 28563 0
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5707	#
.L5708:
	.loc 1 28567 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28569 0
	jmp	.L5700	#
.L5707:
	jmp	.L5700	#
.L5692:
	.loc 1 28578 0
	movq	-8(%rbp), %rax	# insn, tmp177
	movq	%rax, %rdi	# tmp177,
	call	extract_insn_cached	#
	.loc 1 28579 0
	movq	-8(%rbp), %rax	# insn, tmp178
	movq	%rax, %rdi	# tmp178,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57465
	jne	.L5709	#,
	.loc 1 28581 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5710	#
.L5709:
	.loc 1 28583 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	je	.L5711	#,
	.loc 1 28585 0
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5710	#
.L5711:
	.loc 1 28589 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28591 0
	jmp	.L5700	#
.L5710:
	jmp	.L5700	#
.L5691:
	.loc 1 28594 0
	movq	-8(%rbp), %rax	# insn, tmp179
	movq	%rax, %rdi	# tmp179,
	call	extract_constrain_insn_cached	#
	.loc 1 28595 0
	movq	-8(%rbp), %rax	# insn, tmp180
	movq	%rax, %rdi	# tmp180,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57465
	jne	.L5712	#,
	.loc 1 28597 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5713	#
.L5712:
	.loc 1 28599 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4860
	cmpl	$2, %eax	#, which_alternative.4860
	je	.L5714	#,
	.loc 1 28599 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	je	.L5714	#,
	.loc 1 28601 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5713	#
.L5714:
	.loc 1 28605 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28607 0
	jmp	.L5700	#
.L5713:
	jmp	.L5700	#
.L5690:
	.loc 1 28614 0
	movq	-8(%rbp), %rax	# insn, tmp181
	movq	%rax, %rdi	# tmp181,
	call	extract_insn_cached	#
	.loc 1 28615 0
	movq	-8(%rbp), %rax	# insn, tmp182
	movq	%rax, %rdi	# tmp182,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57465
	jne	.L5715	#,
	.loc 1 28617 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5716	#
.L5715:
	.loc 1 28619 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	je	.L5717	#,
	.loc 1 28621 0
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5716	#
.L5717:
	.loc 1 28625 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28627 0
	jmp	.L5700	#
.L5716:
	jmp	.L5700	#
.L5689:
	.loc 1 28630 0
	movq	-8(%rbp), %rax	# insn, tmp183
	movq	%rax, %rdi	# tmp183,
	call	extract_constrain_insn_cached	#
	.loc 1 28631 0
	movq	-8(%rbp), %rax	# insn, tmp184
	movq	%rax, %rdi	# tmp184,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57465
	jne	.L5718	#,
	.loc 1 28633 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5719	#
.L5718:
	.loc 1 28635 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4861
	cmpl	$2, %eax	#, which_alternative.4861
	je	.L5720	#,
	.loc 1 28635 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	je	.L5720	#,
	.loc 1 28637 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5719	#
.L5720:
	.loc 1 28641 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28643 0
	jmp	.L5700	#
.L5719:
	jmp	.L5700	#
.L5688:
	.loc 1 28648 0
	movq	-8(%rbp), %rax	# insn, tmp185
	movq	%rax, %rdi	# tmp185,
	call	extract_insn_cached	#
	.loc 1 28649 0
	movq	-8(%rbp), %rax	# insn, tmp186
	movq	%rax, %rdi	# tmp186,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57465
	jne	.L5721	#,
	.loc 1 28651 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5722	#
.L5721:
	.loc 1 28653 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	je	.L5723	#,
	.loc 1 28655 0
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5722	#
.L5723:
	.loc 1 28659 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28661 0
	jmp	.L5700	#
.L5722:
	jmp	.L5700	#
.L5687:
	.loc 1 28664 0
	movq	-8(%rbp), %rax	# insn, tmp187
	movq	%rax, %rdi	# tmp187,
	call	extract_insn_cached	#
	.loc 1 28665 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	jne	.L5724	#,
	.loc 1 28667 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28673 0
	jmp	.L5700	#
.L5724:
	.loc 1 28671 0
	movl	$7, -12(%rbp)	#, casenum
	.loc 1 28673 0
	jmp	.L5700	#
.L5686:
	.loc 1 28676 0
	movq	-8(%rbp), %rax	# insn, tmp188
	movq	%rax, %rdi	# tmp188,
	call	extract_insn_cached	#
	.loc 1 28677 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	jne	.L5726	#,
	.loc 1 28679 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28685 0
	jmp	.L5700	#
.L5726:
	.loc 1 28683 0
	movl	$7, -12(%rbp)	#, casenum
	.loc 1 28685 0
	jmp	.L5700	#
.L5685:
	.loc 1 28689 0
	movq	-8(%rbp), %rax	# insn, tmp189
	movq	%rax, %rdi	# tmp189,
	call	extract_constrain_insn_cached	#
	.loc 1 28690 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4862
	testl	%eax, %eax	# which_alternative.4862
	jne	.L5728	#,
	.loc 1 28690 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	jne	.L5728	#,
	.loc 1 28692 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5729	#
.L5728:
	.loc 1 28694 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4863
	testl	%eax, %eax	# which_alternative.4863
	jne	.L5730	#,
	.loc 1 28694 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	je	.L5730	#,
	.loc 1 28696 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5729	#
.L5730:
	.loc 1 28700 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28702 0
	jmp	.L5700	#
.L5729:
	jmp	.L5700	#
.L5684:
	.loc 1 28706 0
	movq	-8(%rbp), %rax	# insn, tmp190
	movq	%rax, %rdi	# tmp190,
	call	extract_insn_cached	#
	.loc 1 28707 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57464
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	mult_operator	#
	testl	%eax, %eax	# D.57463
	jne	.L5731	#,
	.loc 1 28709 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 28715 0
	jmp	.L5700	#
.L5731:
	.loc 1 28713 0
	movl	$7, -12(%rbp)	#, casenum
	.loc 1 28715 0
	jmp	.L5700	#
.L5683:
	.loc 1 28718 0
	movq	-8(%rbp), %rax	# insn, tmp191
	movq	%rax, %rdi	# tmp191,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57465
	jne	.L5733	#,
	.loc 1 28720 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28726 0
	jmp	.L5700	#
.L5733:
	.loc 1 28724 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28726 0
	jmp	.L5700	#
.L5682:
	.loc 1 28731 0
	movq	-8(%rbp), %rax	# insn, tmp192
	movq	%rax, %rdi	# tmp192,
	call	extract_constrain_insn_cached	#
	.loc 1 28732 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4864
	cmpl	$1, %eax	#, which_alternative.4864
	jne	.L5735	#,
	.loc 1 28734 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28740 0
	jmp	.L5700	#
.L5735:
	.loc 1 28738 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28740 0
	jmp	.L5700	#
.L5681:
	.loc 1 28743 0
	movq	-8(%rbp), %rax	# insn, tmp193
	movq	%rax, %rdi	# tmp193,
	call	extract_constrain_insn_cached	#
	.loc 1 28744 0
	movq	-8(%rbp), %rax	# insn, tmp194
	movq	%rax, %rdi	# tmp194,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57465
	je	.L5737	#,
	.loc 1 28744 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4865
	cmpl	$2, %eax	#, which_alternative.4865
	jne	.L5738	#,
.L5737:
	.loc 1 28746 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28752 0
	jmp	.L5700	#
.L5738:
	.loc 1 28750 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28752 0
	jmp	.L5700	#
.L5680:
	.loc 1 28755 0
	movq	-8(%rbp), %rax	# insn, tmp195
	movq	%rax, %rdi	# tmp195,
	call	extract_constrain_insn_cached	#
	.loc 1 28756 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4866
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4867
	movl	%eax, %ecx	# ix86_cpu.4868, tmp220
	sarl	%cl, %edx	# tmp220, D.57463
	movl	%edx, %eax	# D.57463, D.57463
	andl	$1, %eax	#, D.57463
	testl	%eax, %eax	# D.57463
	je	.L5740	#,
	.loc 1 28756 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57464
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	const1_operand	#
	testl	%eax, %eax	# D.57463
	jne	.L5741	#,
.L5740:
	.loc 1 28758 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28764 0
	jmp	.L5700	#
.L5741:
	.loc 1 28762 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28764 0
	jmp	.L5700	#
.L5679:
	.loc 1 28767 0
	movq	-8(%rbp), %rax	# insn, tmp196
	movq	%rax, %rdi	# tmp196,
	call	extract_constrain_insn_cached	#
	.loc 1 28768 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4869
	testl	%eax, %eax	# which_alternative.4869
	jne	.L5743	#,
	.loc 1 28768 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4870
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4871
	movl	%eax, %ecx	# ix86_cpu.4872, tmp222
	sarl	%cl, %edx	# tmp222, D.57463
	movl	%edx, %eax	# D.57463, D.57463
	andl	$1, %eax	#, D.57463
	testl	%eax, %eax	# D.57463
	je	.L5743	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57464
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	const1_operand	#
	testl	%eax, %eax	# D.57463
	jne	.L5744	#,
.L5743:
	.loc 1 28770 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28776 0
	jmp	.L5700	#
.L5744:
	.loc 1 28774 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28776 0
	jmp	.L5700	#
.L5678:
	.loc 1 28784 0
	movq	-8(%rbp), %rax	# insn, tmp197
	movq	%rax, %rdi	# tmp197,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57465
	jne	.L5746	#,
	.loc 1 28786 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28792 0
	jmp	.L5700	#
.L5746:
	.loc 1 28790 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28792 0
	jmp	.L5700	#
.L5677:
	.loc 1 28797 0
	movq	-8(%rbp), %rax	# insn, tmp198
	movq	%rax, %rdi	# tmp198,
	call	extract_constrain_insn_cached	#
	.loc 1 28798 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4873
	testl	%eax, %eax	# which_alternative.4873
	jne	.L5748	#,
	.loc 1 28798 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp199
	movq	%rax, %rdi	# tmp199,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57465
	jne	.L5749	#,
.L5748:
	.loc 1 28800 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28806 0
	jmp	.L5700	#
.L5749:
	.loc 1 28804 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28806 0
	jmp	.L5700	#
.L5676:
	.loc 1 28815 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 28816 0
	jmp	.L5700	#
.L5675:
	.loc 1 28835 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 28836 0
	jmp	.L5700	#
.L5674:
	.loc 1 28839 0
	movq	-8(%rbp), %rax	# insn, tmp200
	movq	%rax, %rdi	# tmp200,
	call	extract_constrain_insn_cached	#
	.loc 1 28840 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4874
	cmpl	$3, %eax	#, which_alternative.4874
	jne	.L5751	#,
	.loc 1 28842 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28848 0
	jmp	.L5700	#
.L5751:
	.loc 1 28846 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28848 0
	jmp	.L5700	#
.L5673:
	.loc 1 28851 0
	movq	-8(%rbp), %rax	# insn, tmp201
	movq	%rax, %rdi	# tmp201,
	call	extract_constrain_insn_cached	#
	.loc 1 28852 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4875
	cmpl	$2, %eax	#, which_alternative.4875
	jne	.L5753	#,
	.loc 1 28854 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28860 0
	jmp	.L5700	#
.L5753:
	.loc 1 28858 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28860 0
	jmp	.L5700	#
.L5672:
	.loc 1 28863 0
	movq	-8(%rbp), %rax	# insn, tmp202
	movq	%rax, %rdi	# tmp202,
	call	extract_constrain_insn_cached	#
	.loc 1 28864 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4876
	testl	%eax, %eax	# which_alternative.4876
	jne	.L5755	#,
	.loc 1 28864 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57464
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57463
	je	.L5756	#,
.L5755:
	.loc 1 28866 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28872 0
	jmp	.L5700	#
.L5756:
	.loc 1 28870 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28872 0
	jmp	.L5700	#
.L5671:
	.loc 1 28875 0
	movq	-8(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	extract_constrain_insn_cached	#
	.loc 1 28876 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4877
	cmpl	$2, %eax	#, which_alternative.4877
	je	.L5758	#,
	.loc 1 28876 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57464
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57463
	je	.L5759	#,
.L5758:
	.loc 1 28878 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28884 0
	jmp	.L5700	#
.L5759:
	.loc 1 28882 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28884 0
	jmp	.L5700	#
.L5670:
	.loc 1 28887 0
	movq	-8(%rbp), %rax	# insn, tmp204
	movq	%rax, %rdi	# tmp204,
	call	extract_constrain_insn_cached	#
	.loc 1 28888 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4878
	cmpl	$2, %eax	#, which_alternative.4878
	je	.L5761	#,
	.loc 1 28888 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57464
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57463
	je	.L5762	#,
.L5761:
	.loc 1 28890 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28896 0
	jmp	.L5700	#
.L5762:
	.loc 1 28894 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 28896 0
	jmp	.L5700	#
.L5669:
	.loc 1 28979 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 28980 0
	jmp	.L5700	#
.L5668:
	.loc 1 29009 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 29010 0
	jmp	.L5700	#
.L5667:
	.loc 1 29013 0
	movq	-8(%rbp), %rax	# insn, tmp205
	movq	%rax, %rdi	# tmp205,
	call	extract_constrain_insn_cached	#
	.loc 1 29014 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4879
	cmpl	$1, %eax	#, which_alternative.4879
	jne	.L5764	#,
	.loc 1 29016 0
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 29022 0
	jmp	.L5700	#
.L5764:
	.loc 1 29020 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29022 0
	jmp	.L5700	#
.L5666:
	.loc 1 29044 0
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	%rax, %rdi	# tmp206,
	call	extract_constrain_insn_cached	#
	.loc 1 29045 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4880
	testl	%eax, %eax	# which_alternative.4880
	jne	.L5766	#,
	.loc 1 29047 0
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 29053 0
	jmp	.L5700	#
.L5766:
	.loc 1 29051 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29053 0
	jmp	.L5700	#
.L5665:
	.loc 1 29064 0
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 29065 0
	jmp	.L5700	#
.L5664:
	.loc 1 29068 0
	movq	-8(%rbp), %rax	# insn, tmp207
	movq	%rax, %rdi	# tmp207,
	call	extract_constrain_insn_cached	#
	.loc 1 29069 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4881
	testl	%eax, %eax	# which_alternative.4881
	je	.L5768	#,
	.loc 1 29069 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4882
	cmpl	$1, %eax	#, which_alternative.4882
	jne	.L5769	#,
.L5768:
	.loc 1 29071 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 29077 0
	jmp	.L5700	#
.L5769:
	.loc 1 29075 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29077 0
	jmp	.L5700	#
.L5663:
	.loc 1 29086 0
	movq	-8(%rbp), %rax	# insn, tmp208
	movq	%rax, %rdi	# tmp208,
	call	extract_constrain_insn_cached	#
	.loc 1 29087 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4883
	testl	%eax, %eax	# which_alternative.4883
	je	.L5771	#,
	.loc 1 29087 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4884
	cmpl	$1, %eax	#, which_alternative.4884
	je	.L5771	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4885
	cmpl	$2, %eax	#, which_alternative.4885
	jne	.L5772	#,
.L5771:
	.loc 1 29089 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 29095 0
	jmp	.L5700	#
.L5772:
	.loc 1 29093 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29095 0
	jmp	.L5700	#
.L5662:
	.loc 1 29098 0
	movq	-8(%rbp), %rax	# insn, tmp209
	movq	%rax, %rdi	# tmp209,
	call	extract_constrain_insn_cached	#
	.loc 1 29099 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4886
	cmpl	$5, %eax	#, which_alternative.4886
	je	.L5774	#,
	.loc 1 29099 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4887
	cmpl	$6, %eax	#, which_alternative.4887
	je	.L5774	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4888
	cmpl	$7, %eax	#, which_alternative.4888
	je	.L5774	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4889
	cmpl	$8, %eax	#, which_alternative.4889
	je	.L5774	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4890
	cmpl	$4, %eax	#, which_alternative.4890
	je	.L5774	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4891
	testl	%eax, %eax	# flag_pic.4891
	je	.L5774	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57464
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57463
	je	.L5774	#,
	.loc 1 29101 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29107 0
	jmp	.L5700	#
.L5774:
	.loc 1 29105 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29107 0
	jmp	.L5700	#
.L5661:
	.loc 1 29110 0
	movq	-8(%rbp), %rax	# insn, tmp210
	movq	%rax, %rdi	# tmp210,
	call	extract_constrain_insn_cached	#
	.loc 1 29111 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4892
	cmpl	$4, %eax	#, which_alternative.4892
	je	.L5776	#,
	.loc 1 29111 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4893
	cmpl	$5, %eax	#, which_alternative.4893
	je	.L5776	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4894
	cmpl	$6, %eax	#, which_alternative.4894
	je	.L5776	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4895
	cmpl	$7, %eax	#, which_alternative.4895
	je	.L5776	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4896
	cmpl	$8, %eax	#, which_alternative.4896
	je	.L5776	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4897
	cmpl	$9, %eax	#, which_alternative.4897
	je	.L5776	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4898
	testl	%eax, %eax	# flag_pic.4898
	je	.L5776	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57464
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57464,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57463
	je	.L5776	#,
	.loc 1 29113 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29119 0
	jmp	.L5700	#
.L5776:
	.loc 1 29117 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29119 0
	jmp	.L5700	#
.L5660:
	.loc 1 29123 0
	movq	-8(%rbp), %rax	# insn, tmp211
	movq	%rax, %rdi	# tmp211,
	call	extract_constrain_insn_cached	#
	.loc 1 29124 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4899
	testl	%eax, %eax	# which_alternative.4899
	jne	.L5778	#,
	.loc 1 29126 0
	movl	$5, -12(%rbp)	#, casenum
	.loc 1 29132 0
	jmp	.L5700	#
.L5778:
	.loc 1 29130 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29132 0
	jmp	.L5700	#
.L5659:
	.loc 1 29142 0
	movl	$5, -12(%rbp)	#, casenum
	.loc 1 29143 0
	jmp	.L5700	#
.L5657:
	.loc 1 29146 0
	movq	-8(%rbp), %rax	# insn, tmp212
	movq	32(%rax), %rax	# insn_37->fld[3].rtx, D.57464
	movzwl	(%rax), %eax	# _217->code, D.57466
	cmpw	$40, %ax	#, D.57466
	je	.L5656	#,
	.loc 1 29147 0
	movq	-8(%rbp), %rax	# insn, tmp213
	movq	32(%rax), %rax	# insn_37->fld[3].rtx, D.57464
	movq	%rax, %rdi	# D.57464,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57463
	jns	.L5656	#,
	.loc 1 29148 0
	movq	-8(%rbp), %rax	# insn, tmp214
	movl	$__FUNCTION__.23689, %ecx	#,
	movl	$29148, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp214,
	call	_fatal_insn_not_found	#
.L5656:
	.loc 1 29150 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29151 0
	nop
.L5700:
	.loc 1 29155 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp215
	movq	%rax, -8(%rbp)	# tmp215, insn
	.loc 1 29156 0
	cmpl	$8, -12(%rbp)	#, casenum
	ja	.L5780	#,
	movl	-12(%rbp), %eax	# casenum, tmp216
	movq	.L5782(,%rax,8), %rax	#, tmp217
	jmp	*%rax	# tmp217
	.section	.rodata
	.align 8
	.align 4
.L5782:
	.quad	.L5781
	.quad	.L5783
	.quad	.L5784
	.quad	.L5785
	.quad	.L5786
	.quad	.L5787
	.quad	.L5788
	.quad	.L5789
	.quad	.L5790
	.text
.L5781:
	.loc 1 29159 0
	movl	$1, %eax	#, D.57463
	jmp	.L5791	#
.L5783:
	.loc 1 29162 0
	movl	$1, %eax	#, D.57463
	jmp	.L5791	#
.L5784:
	.loc 1 29165 0
	movl	$17, %eax	#, D.57463
	jmp	.L5791	#
.L5785:
	.loc 1 29168 0
	movl	$1, %eax	#, D.57463
	jmp	.L5791	#
.L5786:
	.loc 1 29171 0
	movl	$1, %eax	#, D.57463
	jmp	.L5791	#
.L5787:
	.loc 1 29174 0
	movl	$1, %eax	#, D.57463
	jmp	.L5791	#
.L5788:
	.loc 1 29177 0
	movl	$1, %eax	#, D.57463
	jmp	.L5791	#
.L5789:
	.loc 1 29180 0
	movl	$1, %eax	#, D.57463
	jmp	.L5791	#
.L5790:
	.loc 1 29183 0
	movl	$1, %eax	#, D.57463
	jmp	.L5791	#
.L5780:
	.loc 1 29186 0
	movl	$__FUNCTION__.23689, %edx	#,
	movl	$29186, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5791:
	.loc 1 29188 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE79:
	.size	ppro_p0_unit_blockage, .-ppro_p0_unit_blockage
	.type	ppro_p0_unit_conflict_cost, @function
ppro_p0_unit_conflict_cost:
.LFB80:
	.loc 1 29195 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 29199 0
	movq	-24(%rbp), %rax	# executing_insn, tmp165
	movq	%rax, -8(%rbp)	# tmp165, insn
	.loc 1 29200 0
	movq	-8(%rbp), %rax	# insn, tmp166
	movl	40(%rax), %eax	# insn_37->fld[4].rtint, D.57467
	testl	%eax, %eax	# D.57467
	js	.L5793	#,
	.loc 1 29200 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp167
	movl	40(%rax), %eax	# insn_37->fld[4].rtint, iftmp.4900
	jmp	.L5794	#
.L5793:
	.loc 1 29200 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp168
	movq	%rax, %rdi	# tmp168,
	call	recog_memoized_1	#
.L5794:
	.loc 1 29200 0 discriminator 3
	addl	$1, %eax	#, tmp169
	cmpl	$637, %eax	#, tmp169
	ja	.L5795	#,
	movl	%eax, %eax	# tmp169, tmp170
	movq	.L5797(,%rax,8), %rax	#, tmp171
	jmp	*%rax	# tmp171
	.section	.rodata
	.align 8
	.align 4
.L5797:
	.quad	.L5796
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5798
	.quad	.L5798
	.quad	.L5798
	.quad	.L5795
	.quad	.L5798
	.quad	.L5798
	.quad	.L5795
	.quad	.L5795
	.quad	.L5798
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5798
	.quad	.L5799
	.quad	.L5795
	.quad	.L5798
	.quad	.L5799
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5800
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5801
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5802
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5802
	.quad	.L5802
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5802
	.quad	.L5802
	.quad	.L5802
	.quad	.L5802
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5803
	.quad	.L5795
	.quad	.L5804
	.quad	.L5804
	.quad	.L5804
	.quad	.L5804
	.quad	.L5805
	.quad	.L5805
	.quad	.L5806
	.quad	.L5804
	.quad	.L5795
	.quad	.L5805
	.quad	.L5804
	.quad	.L5805
	.quad	.L5804
	.quad	.L5805
	.quad	.L5804
	.quad	.L5805
	.quad	.L5804
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5795
	.quad	.L5795
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5795
	.quad	.L5795
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5795
	.quad	.L5795
	.quad	.L5805
	.quad	.L5805
	.quad	.L5795
	.quad	.L5805
	.quad	.L5805
	.quad	.L5795
	.quad	.L5805
	.quad	.L5805
	.quad	.L5795
	.quad	.L5805
	.quad	.L5805
	.quad	.L5795
	.quad	.L5805
	.quad	.L5805
	.quad	.L5805
	.quad	.L5805
	.quad	.L5805
	.quad	.L5805
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5809
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5810
	.quad	.L5811
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5812
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5813
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5814
	.quad	.L5815
	.quad	.L5815
	.quad	.L5795
	.quad	.L5795
	.quad	.L5815
	.quad	.L5795
	.quad	.L5795
	.quad	.L5815
	.quad	.L5795
	.quad	.L5795
	.quad	.L5815
	.quad	.L5795
	.quad	.L5815
	.quad	.L5815
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5807
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5816
	.quad	.L5817
	.quad	.L5795
	.quad	.L5795
	.quad	.L5808
	.quad	.L5816
	.quad	.L5818
	.quad	.L5817
	.quad	.L5819
	.quad	.L5816
	.quad	.L5817
	.quad	.L5817
	.quad	.L5820
	.quad	.L5817
	.quad	.L5817
	.quad	.L5821
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5795
	.quad	.L5795
	.quad	.L5808
	.quad	.L5821
	.quad	.L5821
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5795
	.quad	.L5795
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5808
	.quad	.L5808
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5808
	.quad	.L5822
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5808
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5823
	.quad	.L5824
	.quad	.L5795
	.quad	.L5823
	.quad	.L5824
	.quad	.L5795
	.quad	.L5825
	.quad	.L5826
	.quad	.L5827
	.quad	.L5828
	.quad	.L5795
	.quad	.L5827
	.quad	.L5827
	.quad	.L5829
	.quad	.L5830
	.quad	.L5795
	.quad	.L5829
	.quad	.L5829
	.quad	.L5829
	.quad	.L5829
	.quad	.L5831
	.quad	.L5832
	.quad	.L5831
	.quad	.L5832
	.quad	.L5831
	.quad	.L5832
	.quad	.L5831
	.quad	.L5832
	.quad	.L5831
	.quad	.L5832
	.quad	.L5831
	.quad	.L5832
	.quad	.L5831
	.quad	.L5832
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5808
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5833
	.quad	.L5833
	.quad	.L5833
	.quad	.L5834
	.quad	.L5834
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5795
	.quad	.L5835
	.quad	.L5836
	.text
.L5836:
	.loc 1 29203 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp172
	movq	%rax, %rdi	# tmp172,
	call	extract_constrain_insn_cached	#
	.loc 1 29204 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4901
	cmpl	$1, %eax	#, which_alternative.4901
	jne	.L5837	#,
	.loc 1 29204 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57468
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	const0_operand	#
	testl	%eax, %eax	# D.57467
	jne	.L5837	#,
	.loc 1 29206 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29212 0
	jmp	.L5839	#
.L5837:
	.loc 1 29210 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29212 0
	jmp	.L5839	#
.L5835:
	.loc 1 29215 0
	movq	-8(%rbp), %rax	# insn, tmp173
	movq	%rax, %rdi	# tmp173,
	call	extract_constrain_insn_cached	#
	.loc 1 29216 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4902
	cmpl	$1, %eax	#, which_alternative.4902
	jne	.L5840	#,
	.loc 1 29216 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57468
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	const0_operand	#
	testl	%eax, %eax	# D.57467
	jne	.L5840	#,
	.loc 1 29218 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29224 0
	jmp	.L5839	#
.L5840:
	.loc 1 29222 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29224 0
	jmp	.L5839	#
.L5834:
	.loc 1 29228 0
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 29229 0
	jmp	.L5839	#
.L5833:
	.loc 1 29234 0
	movq	-8(%rbp), %rax	# insn, tmp174
	movq	%rax, %rdi	# tmp174,
	call	extract_constrain_insn_cached	#
	.loc 1 29235 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4903
	testl	%eax, %eax	# which_alternative.4903
	je	.L5842	#,
	.loc 1 29235 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4904
	cmpl	$1, %eax	#, which_alternative.4904
	jne	.L5843	#,
.L5842:
	.loc 1 29237 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 29243 0
	jmp	.L5839	#
.L5843:
	.loc 1 29241 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29243 0
	jmp	.L5839	#
.L5832:
	.loc 1 29252 0
	movq	-8(%rbp), %rax	# insn, tmp175
	movq	%rax, %rdi	# tmp175,
	call	extract_insn_cached	#
	.loc 1 29253 0
	movq	-8(%rbp), %rax	# insn, tmp176
	movq	%rax, %rdi	# tmp176,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57469
	jne	.L5845	#,
	.loc 1 29255 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5846	#
.L5845:
	.loc 1 29257 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	je	.L5847	#,
	.loc 1 29259 0
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5846	#
.L5847:
	.loc 1 29263 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29265 0
	jmp	.L5839	#
.L5846:
	jmp	.L5839	#
.L5831:
	.loc 1 29274 0
	movq	-8(%rbp), %rax	# insn, tmp177
	movq	%rax, %rdi	# tmp177,
	call	extract_insn_cached	#
	.loc 1 29275 0
	movq	-8(%rbp), %rax	# insn, tmp178
	movq	%rax, %rdi	# tmp178,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57469
	jne	.L5848	#,
	.loc 1 29277 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5849	#
.L5848:
	.loc 1 29279 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	je	.L5850	#,
	.loc 1 29281 0
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5849	#
.L5850:
	.loc 1 29285 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29287 0
	jmp	.L5839	#
.L5849:
	jmp	.L5839	#
.L5830:
	.loc 1 29290 0
	movq	-8(%rbp), %rax	# insn, tmp179
	movq	%rax, %rdi	# tmp179,
	call	extract_constrain_insn_cached	#
	.loc 1 29291 0
	movq	-8(%rbp), %rax	# insn, tmp180
	movq	%rax, %rdi	# tmp180,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57469
	jne	.L5851	#,
	.loc 1 29293 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5852	#
.L5851:
	.loc 1 29295 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4905
	cmpl	$2, %eax	#, which_alternative.4905
	je	.L5853	#,
	.loc 1 29295 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	je	.L5853	#,
	.loc 1 29297 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5852	#
.L5853:
	.loc 1 29301 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29303 0
	jmp	.L5839	#
.L5852:
	jmp	.L5839	#
.L5829:
	.loc 1 29310 0
	movq	-8(%rbp), %rax	# insn, tmp181
	movq	%rax, %rdi	# tmp181,
	call	extract_insn_cached	#
	.loc 1 29311 0
	movq	-8(%rbp), %rax	# insn, tmp182
	movq	%rax, %rdi	# tmp182,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57469
	jne	.L5854	#,
	.loc 1 29313 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5855	#
.L5854:
	.loc 1 29315 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	je	.L5856	#,
	.loc 1 29317 0
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5855	#
.L5856:
	.loc 1 29321 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29323 0
	jmp	.L5839	#
.L5855:
	jmp	.L5839	#
.L5828:
	.loc 1 29326 0
	movq	-8(%rbp), %rax	# insn, tmp183
	movq	%rax, %rdi	# tmp183,
	call	extract_constrain_insn_cached	#
	.loc 1 29327 0
	movq	-8(%rbp), %rax	# insn, tmp184
	movq	%rax, %rdi	# tmp184,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57469
	jne	.L5857	#,
	.loc 1 29329 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5858	#
.L5857:
	.loc 1 29331 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4906
	cmpl	$2, %eax	#, which_alternative.4906
	je	.L5859	#,
	.loc 1 29331 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	je	.L5859	#,
	.loc 1 29333 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5858	#
.L5859:
	.loc 1 29337 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29339 0
	jmp	.L5839	#
.L5858:
	jmp	.L5839	#
.L5827:
	.loc 1 29344 0
	movq	-8(%rbp), %rax	# insn, tmp185
	movq	%rax, %rdi	# tmp185,
	call	extract_insn_cached	#
	.loc 1 29345 0
	movq	-8(%rbp), %rax	# insn, tmp186
	movq	%rax, %rdi	# tmp186,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57469
	jne	.L5860	#,
	.loc 1 29347 0
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5861	#
.L5860:
	.loc 1 29349 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	je	.L5862	#,
	.loc 1 29351 0
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5861	#
.L5862:
	.loc 1 29355 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29357 0
	jmp	.L5839	#
.L5861:
	jmp	.L5839	#
.L5826:
	.loc 1 29360 0
	movq	-8(%rbp), %rax	# insn, tmp187
	movq	%rax, %rdi	# tmp187,
	call	extract_insn_cached	#
	.loc 1 29361 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	jne	.L5863	#,
	.loc 1 29363 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 29369 0
	jmp	.L5839	#
.L5863:
	.loc 1 29367 0
	movl	$7, -12(%rbp)	#, casenum
	.loc 1 29369 0
	jmp	.L5839	#
.L5825:
	.loc 1 29372 0
	movq	-8(%rbp), %rax	# insn, tmp188
	movq	%rax, %rdi	# tmp188,
	call	extract_insn_cached	#
	.loc 1 29373 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	jne	.L5865	#,
	.loc 1 29375 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 29381 0
	jmp	.L5839	#
.L5865:
	.loc 1 29379 0
	movl	$7, -12(%rbp)	#, casenum
	.loc 1 29381 0
	jmp	.L5839	#
.L5824:
	.loc 1 29385 0
	movq	-8(%rbp), %rax	# insn, tmp189
	movq	%rax, %rdi	# tmp189,
	call	extract_constrain_insn_cached	#
	.loc 1 29386 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4907
	testl	%eax, %eax	# which_alternative.4907
	jne	.L5867	#,
	.loc 1 29386 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	jne	.L5867	#,
	.loc 1 29388 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L5868	#
.L5867:
	.loc 1 29390 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4908
	testl	%eax, %eax	# which_alternative.4908
	jne	.L5869	#,
	.loc 1 29390 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	je	.L5869	#,
	.loc 1 29392 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L5868	#
.L5869:
	.loc 1 29396 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29398 0
	jmp	.L5839	#
.L5868:
	jmp	.L5839	#
.L5823:
	.loc 1 29402 0
	movq	-8(%rbp), %rax	# insn, tmp190
	movq	%rax, %rdi	# tmp190,
	call	extract_insn_cached	#
	.loc 1 29403 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57468
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	mult_operator	#
	testl	%eax, %eax	# D.57467
	jne	.L5870	#,
	.loc 1 29405 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 29411 0
	jmp	.L5839	#
.L5870:
	.loc 1 29409 0
	movl	$7, -12(%rbp)	#, casenum
	.loc 1 29411 0
	jmp	.L5839	#
.L5822:
	.loc 1 29414 0
	movq	-8(%rbp), %rax	# insn, tmp191
	movq	%rax, %rdi	# tmp191,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57469
	jne	.L5872	#,
	.loc 1 29416 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29422 0
	jmp	.L5839	#
.L5872:
	.loc 1 29420 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29422 0
	jmp	.L5839	#
.L5821:
	.loc 1 29427 0
	movq	-8(%rbp), %rax	# insn, tmp192
	movq	%rax, %rdi	# tmp192,
	call	extract_constrain_insn_cached	#
	.loc 1 29428 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4909
	cmpl	$1, %eax	#, which_alternative.4909
	jne	.L5874	#,
	.loc 1 29430 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29436 0
	jmp	.L5839	#
.L5874:
	.loc 1 29434 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29436 0
	jmp	.L5839	#
.L5820:
	.loc 1 29439 0
	movq	-8(%rbp), %rax	# insn, tmp193
	movq	%rax, %rdi	# tmp193,
	call	extract_constrain_insn_cached	#
	.loc 1 29440 0
	movq	-8(%rbp), %rax	# insn, tmp194
	movq	%rax, %rdi	# tmp194,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57469
	je	.L5876	#,
	.loc 1 29440 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4910
	cmpl	$2, %eax	#, which_alternative.4910
	jne	.L5877	#,
.L5876:
	.loc 1 29442 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29448 0
	jmp	.L5839	#
.L5877:
	.loc 1 29446 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29448 0
	jmp	.L5839	#
.L5819:
	.loc 1 29451 0
	movq	-8(%rbp), %rax	# insn, tmp195
	movq	%rax, %rdi	# tmp195,
	call	extract_constrain_insn_cached	#
	.loc 1 29452 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4911
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4912
	movl	%eax, %ecx	# ix86_cpu.4913, tmp220
	sarl	%cl, %edx	# tmp220, D.57467
	movl	%edx, %eax	# D.57467, D.57467
	andl	$1, %eax	#, D.57467
	testl	%eax, %eax	# D.57467
	je	.L5879	#,
	.loc 1 29452 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57468
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	const1_operand	#
	testl	%eax, %eax	# D.57467
	jne	.L5880	#,
.L5879:
	.loc 1 29454 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29460 0
	jmp	.L5839	#
.L5880:
	.loc 1 29458 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29460 0
	jmp	.L5839	#
.L5818:
	.loc 1 29463 0
	movq	-8(%rbp), %rax	# insn, tmp196
	movq	%rax, %rdi	# tmp196,
	call	extract_constrain_insn_cached	#
	.loc 1 29464 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4914
	testl	%eax, %eax	# which_alternative.4914
	jne	.L5882	#,
	.loc 1 29464 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4915
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4916
	movl	%eax, %ecx	# ix86_cpu.4917, tmp222
	sarl	%cl, %edx	# tmp222, D.57467
	movl	%edx, %eax	# D.57467, D.57467
	andl	$1, %eax	#, D.57467
	testl	%eax, %eax	# D.57467
	je	.L5882	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57468
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	const1_operand	#
	testl	%eax, %eax	# D.57467
	jne	.L5883	#,
.L5882:
	.loc 1 29466 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29472 0
	jmp	.L5839	#
.L5883:
	.loc 1 29470 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29472 0
	jmp	.L5839	#
.L5817:
	.loc 1 29480 0
	movq	-8(%rbp), %rax	# insn, tmp197
	movq	%rax, %rdi	# tmp197,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57469
	jne	.L5885	#,
	.loc 1 29482 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29488 0
	jmp	.L5839	#
.L5885:
	.loc 1 29486 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29488 0
	jmp	.L5839	#
.L5816:
	.loc 1 29493 0
	movq	-8(%rbp), %rax	# insn, tmp198
	movq	%rax, %rdi	# tmp198,
	call	extract_constrain_insn_cached	#
	.loc 1 29494 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4918
	testl	%eax, %eax	# which_alternative.4918
	jne	.L5887	#,
	.loc 1 29494 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp199
	movq	%rax, %rdi	# tmp199,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57469
	jne	.L5888	#,
.L5887:
	.loc 1 29496 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29502 0
	jmp	.L5839	#
.L5888:
	.loc 1 29500 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29502 0
	jmp	.L5839	#
.L5815:
	.loc 1 29511 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 29512 0
	jmp	.L5839	#
.L5814:
	.loc 1 29531 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 29532 0
	jmp	.L5839	#
.L5813:
	.loc 1 29535 0
	movq	-8(%rbp), %rax	# insn, tmp200
	movq	%rax, %rdi	# tmp200,
	call	extract_constrain_insn_cached	#
	.loc 1 29536 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4919
	cmpl	$3, %eax	#, which_alternative.4919
	jne	.L5890	#,
	.loc 1 29538 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29544 0
	jmp	.L5839	#
.L5890:
	.loc 1 29542 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29544 0
	jmp	.L5839	#
.L5812:
	.loc 1 29547 0
	movq	-8(%rbp), %rax	# insn, tmp201
	movq	%rax, %rdi	# tmp201,
	call	extract_constrain_insn_cached	#
	.loc 1 29548 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4920
	cmpl	$2, %eax	#, which_alternative.4920
	jne	.L5892	#,
	.loc 1 29550 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29556 0
	jmp	.L5839	#
.L5892:
	.loc 1 29554 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29556 0
	jmp	.L5839	#
.L5811:
	.loc 1 29559 0
	movq	-8(%rbp), %rax	# insn, tmp202
	movq	%rax, %rdi	# tmp202,
	call	extract_constrain_insn_cached	#
	.loc 1 29560 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4921
	testl	%eax, %eax	# which_alternative.4921
	jne	.L5894	#,
	.loc 1 29560 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57468
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57467
	je	.L5895	#,
.L5894:
	.loc 1 29562 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29568 0
	jmp	.L5839	#
.L5895:
	.loc 1 29566 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29568 0
	jmp	.L5839	#
.L5810:
	.loc 1 29571 0
	movq	-8(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	extract_constrain_insn_cached	#
	.loc 1 29572 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4922
	cmpl	$2, %eax	#, which_alternative.4922
	je	.L5897	#,
	.loc 1 29572 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57468
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57467
	je	.L5898	#,
.L5897:
	.loc 1 29574 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29580 0
	jmp	.L5839	#
.L5898:
	.loc 1 29578 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29580 0
	jmp	.L5839	#
.L5809:
	.loc 1 29583 0
	movq	-8(%rbp), %rax	# insn, tmp204
	movq	%rax, %rdi	# tmp204,
	call	extract_constrain_insn_cached	#
	.loc 1 29584 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4923
	cmpl	$2, %eax	#, which_alternative.4923
	je	.L5900	#,
	.loc 1 29584 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57468
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	pic_symbolic_operand	#
	testl	%eax, %eax	# D.57467
	je	.L5901	#,
.L5900:
	.loc 1 29586 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29592 0
	jmp	.L5839	#
.L5901:
	.loc 1 29590 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29592 0
	jmp	.L5839	#
.L5808:
	.loc 1 29675 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29676 0
	jmp	.L5839	#
.L5807:
	.loc 1 29705 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 29706 0
	jmp	.L5839	#
.L5806:
	.loc 1 29709 0
	movq	-8(%rbp), %rax	# insn, tmp205
	movq	%rax, %rdi	# tmp205,
	call	extract_constrain_insn_cached	#
	.loc 1 29710 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4924
	cmpl	$1, %eax	#, which_alternative.4924
	jne	.L5903	#,
	.loc 1 29712 0
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 29718 0
	jmp	.L5839	#
.L5903:
	.loc 1 29716 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29718 0
	jmp	.L5839	#
.L5805:
	.loc 1 29740 0
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	%rax, %rdi	# tmp206,
	call	extract_constrain_insn_cached	#
	.loc 1 29741 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4925
	testl	%eax, %eax	# which_alternative.4925
	jne	.L5905	#,
	.loc 1 29743 0
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 29749 0
	jmp	.L5839	#
.L5905:
	.loc 1 29747 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29749 0
	jmp	.L5839	#
.L5804:
	.loc 1 29760 0
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 29761 0
	jmp	.L5839	#
.L5803:
	.loc 1 29764 0
	movq	-8(%rbp), %rax	# insn, tmp207
	movq	%rax, %rdi	# tmp207,
	call	extract_constrain_insn_cached	#
	.loc 1 29765 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4926
	testl	%eax, %eax	# which_alternative.4926
	je	.L5907	#,
	.loc 1 29765 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4927
	cmpl	$1, %eax	#, which_alternative.4927
	jne	.L5908	#,
.L5907:
	.loc 1 29767 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 29773 0
	jmp	.L5839	#
.L5908:
	.loc 1 29771 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29773 0
	jmp	.L5839	#
.L5802:
	.loc 1 29782 0
	movq	-8(%rbp), %rax	# insn, tmp208
	movq	%rax, %rdi	# tmp208,
	call	extract_constrain_insn_cached	#
	.loc 1 29783 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4928
	testl	%eax, %eax	# which_alternative.4928
	je	.L5910	#,
	.loc 1 29783 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4929
	cmpl	$1, %eax	#, which_alternative.4929
	je	.L5910	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4930
	cmpl	$2, %eax	#, which_alternative.4930
	jne	.L5911	#,
.L5910:
	.loc 1 29785 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 29791 0
	jmp	.L5839	#
.L5911:
	.loc 1 29789 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29791 0
	jmp	.L5839	#
.L5801:
	.loc 1 29794 0
	movq	-8(%rbp), %rax	# insn, tmp209
	movq	%rax, %rdi	# tmp209,
	call	extract_constrain_insn_cached	#
	.loc 1 29795 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4931
	cmpl	$5, %eax	#, which_alternative.4931
	je	.L5913	#,
	.loc 1 29795 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4932
	cmpl	$6, %eax	#, which_alternative.4932
	je	.L5913	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4933
	cmpl	$7, %eax	#, which_alternative.4933
	je	.L5913	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4934
	cmpl	$8, %eax	#, which_alternative.4934
	je	.L5913	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4935
	cmpl	$4, %eax	#, which_alternative.4935
	je	.L5913	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4936
	testl	%eax, %eax	# flag_pic.4936
	je	.L5913	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57468
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57467
	je	.L5913	#,
	.loc 1 29797 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29803 0
	jmp	.L5839	#
.L5913:
	.loc 1 29801 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29803 0
	jmp	.L5839	#
.L5800:
	.loc 1 29806 0
	movq	-8(%rbp), %rax	# insn, tmp210
	movq	%rax, %rdi	# tmp210,
	call	extract_constrain_insn_cached	#
	.loc 1 29807 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4937
	cmpl	$4, %eax	#, which_alternative.4937
	je	.L5915	#,
	.loc 1 29807 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4938
	cmpl	$5, %eax	#, which_alternative.4938
	je	.L5915	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4939
	cmpl	$6, %eax	#, which_alternative.4939
	je	.L5915	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4940
	cmpl	$7, %eax	#, which_alternative.4940
	je	.L5915	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4941
	cmpl	$8, %eax	#, which_alternative.4941
	je	.L5915	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4942
	cmpl	$9, %eax	#, which_alternative.4942
	je	.L5915	#,
	movl	flag_pic(%rip), %eax	# flag_pic, flag_pic.4943
	testl	%eax, %eax	# flag_pic.4943
	je	.L5915	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57468
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57468,
	call	symbolic_operand	#
	testl	%eax, %eax	# D.57467
	je	.L5915	#,
	.loc 1 29809 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 29815 0
	jmp	.L5839	#
.L5915:
	.loc 1 29813 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29815 0
	jmp	.L5839	#
.L5799:
	.loc 1 29819 0
	movq	-8(%rbp), %rax	# insn, tmp211
	movq	%rax, %rdi	# tmp211,
	call	extract_constrain_insn_cached	#
	.loc 1 29820 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4944
	testl	%eax, %eax	# which_alternative.4944
	jne	.L5917	#,
	.loc 1 29822 0
	movl	$5, -12(%rbp)	#, casenum
	.loc 1 29828 0
	jmp	.L5839	#
.L5917:
	.loc 1 29826 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29828 0
	jmp	.L5839	#
.L5798:
	.loc 1 29838 0
	movl	$5, -12(%rbp)	#, casenum
	.loc 1 29839 0
	jmp	.L5839	#
.L5796:
	.loc 1 29842 0
	movq	-8(%rbp), %rax	# insn, tmp212
	movq	32(%rax), %rax	# insn_37->fld[3].rtx, D.57468
	movzwl	(%rax), %eax	# _217->code, D.57470
	cmpw	$40, %ax	#, D.57470
	je	.L5795	#,
	.loc 1 29843 0
	movq	-8(%rbp), %rax	# insn, tmp213
	movq	32(%rax), %rax	# insn_37->fld[3].rtx, D.57468
	movq	%rax, %rdi	# D.57468,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57467
	jns	.L5795	#,
	.loc 1 29844 0
	movq	-8(%rbp), %rax	# insn, tmp214
	movl	$__FUNCTION__.23952, %ecx	#,
	movl	$29844, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp214,
	call	_fatal_insn_not_found	#
.L5795:
	.loc 1 29846 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 29847 0
	nop
.L5839:
	.loc 1 29851 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp215
	movq	%rax, -8(%rbp)	# tmp215, insn
	.loc 1 29852 0
	cmpl	$8, -12(%rbp)	#, casenum
	ja	.L5919	#,
	movl	-12(%rbp), %eax	# casenum, tmp216
	movq	.L5921(,%rax,8), %rax	#, tmp217
	jmp	*%rax	# tmp217
	.section	.rodata
	.align 8
	.align 4
.L5921:
	.quad	.L5920
	.quad	.L5922
	.quad	.L5923
	.quad	.L5924
	.quad	.L5925
	.quad	.L5926
	.quad	.L5927
	.quad	.L5928
	.quad	.L5929
	.text
.L5920:
	.loc 1 29855 0
	movl	$1, %eax	#, D.57467
	jmp	.L5930	#
.L5922:
	.loc 1 29858 0
	movl	$1, %eax	#, D.57467
	jmp	.L5930	#
.L5923:
	.loc 1 29861 0
	movl	$17, %eax	#, D.57467
	jmp	.L5930	#
.L5924:
	.loc 1 29864 0
	movl	$1, %eax	#, D.57467
	jmp	.L5930	#
.L5925:
	.loc 1 29867 0
	movl	$1, %eax	#, D.57467
	jmp	.L5930	#
.L5926:
	.loc 1 29870 0
	movl	$1, %eax	#, D.57467
	jmp	.L5930	#
.L5927:
	.loc 1 29873 0
	movl	$1, %eax	#, D.57467
	jmp	.L5930	#
.L5928:
	.loc 1 29876 0
	movl	$1, %eax	#, D.57467
	jmp	.L5930	#
.L5929:
	.loc 1 29879 0
	movl	$1, %eax	#, D.57467
	jmp	.L5930	#
.L5919:
	.loc 1 29882 0
	movl	$__FUNCTION__.23952, %edx	#,
	movl	$29882, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5930:
	.loc 1 29884 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE80:
	.size	ppro_p0_unit_conflict_cost, .-ppro_p0_unit_conflict_cost
	.type	pent_uv_unit_blockage, @function
pent_uv_unit_blockage:
.LFB81:
	.loc 1 29891 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 29895 0
	movq	-24(%rbp), %rax	# executing_insn, tmp256
	movq	%rax, -8(%rbp)	# tmp256, insn
	.loc 1 29896 0
	movq	-8(%rbp), %rax	# insn, tmp257
	movl	40(%rax), %eax	# insn_24->fld[4].rtint, D.57471
	testl	%eax, %eax	# D.57471
	js	.L5932	#,
	.loc 1 29896 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp258
	movl	40(%rax), %eax	# insn_24->fld[4].rtint, iftmp.4945
	jmp	.L5933	#
.L5932:
	.loc 1 29896 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp259
	movq	%rax, %rdi	# tmp259,
	call	recog_memoized_1	#
.L5933:
	.loc 1 29896 0 discriminator 3
	addl	$1, %eax	#, tmp260
	cmpl	$637, %eax	#, tmp260
	ja	.L5934	#,
	movl	%eax, %eax	# tmp260, tmp261
	movq	.L5936(,%rax,8), %rax	#, tmp262
	jmp	*%rax	# tmp262
	.section	.rodata
	.align 8
	.align 4
.L5936:
	.quad	.L5935
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5937
	.quad	.L5937
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5937
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5937
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5937
	.quad	.L5937
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5937
	.quad	.L5934
	.quad	.L5937
	.quad	.L5938
	.quad	.L5934
	.quad	.L5937
	.quad	.L5938
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5939
	.quad	.L5940
	.quad	.L5939
	.quad	.L5939
	.quad	.L5940
	.quad	.L5940
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5941
	.quad	.L5942
	.quad	.L5942
	.quad	.L5942
	.quad	.L5942
	.quad	.L5941
	.quad	.L5941
	.quad	.L5943
	.quad	.L5943
	.quad	.L5943
	.quad	.L5943
	.quad	.L5943
	.quad	.L5943
	.quad	.L5944
	.quad	.L5945
	.quad	.L5945
	.quad	.L5945
	.quad	.L5945
	.quad	.L5945
	.quad	.L5946
	.quad	.L5947
	.quad	.L5947
	.quad	.L5947
	.quad	.L5945
	.quad	.L5947
	.quad	.L5947
	.quad	.L5947
	.quad	.L5940
	.quad	.L5934
	.quad	.L5939
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5939
	.quad	.L5939
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5948
	.quad	.L5940
	.quad	.L5949
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5949
	.quad	.L5940
	.quad	.L5940
	.quad	.L5937
	.quad	.L5940
	.quad	.L5937
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5937
	.quad	.L5940
	.quad	.L5937
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5940
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5937
	.quad	.L5934
	.quad	.L5934
	.quad	.L5937
	.quad	.L5937
	.quad	.L5934
	.quad	.L5937
	.quad	.L5934
	.quad	.L5937
	.quad	.L5950
	.quad	.L5950
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5950
	.quad	.L5951
	.quad	.L5950
	.quad	.L5952
	.quad	.L5950
	.quad	.L5950
	.quad	.L5950
	.quad	.L5950
	.quad	.L5950
	.quad	.L5950
	.quad	.L5953
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5953
	.quad	.L5953
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5934
	.quad	.L5934
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5954
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5940
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5934
	.quad	.L5955
	.quad	.L5955
	.text
.L5955:
	.loc 1 29900 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp263
	movq	%rax, %rdi	# tmp263,
	call	extract_constrain_insn_cached	#
	.loc 1 29901 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4946
	testl	%eax, %eax	# which_alternative.4946
	jne	.L5956	#,
	.loc 1 29901 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp264
	movq	%rax, %rdi	# tmp264,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L5956	#,
	movq	-8(%rbp), %rax	# insn, tmp265
	movq	%rax, %rdi	# tmp265,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L5956	#,
	.loc 1 29903 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5957	#
.L5956:
	.loc 1 29905 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4947
	testl	%eax, %eax	# which_alternative.4947
	jne	.L5958	#,
	.loc 1 29905 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp266
	movq	%rax, %rdi	# tmp266,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L5958	#,
	movq	-8(%rbp), %rax	# insn, tmp267
	movq	%rax, %rdi	# tmp267,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L5959	#,
	movq	-8(%rbp), %rax	# insn, tmp268
	movq	%rax, %rdi	# tmp268,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L5958	#,
.L5959:
	.loc 1 29907 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5957	#
.L5958:
	.loc 1 29911 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 29913 0
	jmp	.L5960	#
.L5957:
	jmp	.L5960	#
.L5954:
	.loc 1 29975 0
	movq	-8(%rbp), %rax	# insn, tmp269
	movq	%rax, %rdi	# tmp269,
	call	extract_insn_cached	#
	.loc 1 29976 0
	movq	-8(%rbp), %rax	# insn, tmp270
	movq	%rax, %rdi	# tmp270,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L5961	#,
	.loc 1 29976 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57471
	je	.L5961	#,
	movq	-8(%rbp), %rax	# insn, tmp271
	movq	%rax, %rdi	# tmp271,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L5961	#,
	.loc 1 29978 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5962	#
.L5961:
	.loc 1 29980 0
	movq	-8(%rbp), %rax	# insn, tmp272
	movq	%rax, %rdi	# tmp272,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L5963	#,
	.loc 1 29980 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57471
	je	.L5963	#,
	movq	-8(%rbp), %rax	# insn, tmp273
	movq	%rax, %rdi	# tmp273,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L5964	#,
	movq	-8(%rbp), %rax	# insn, tmp274
	movq	%rax, %rdi	# tmp274,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L5963	#,
.L5964:
	.loc 1 29982 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5962	#
.L5963:
	.loc 1 29986 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 29988 0
	jmp	.L5960	#
.L5962:
	jmp	.L5960	#
.L5953:
	.loc 1 29993 0
	movq	-8(%rbp), %rax	# insn, tmp275
	movq	%rax, %rdi	# tmp275,
	call	extract_constrain_insn_cached	#
	.loc 1 29994 0
	movq	-8(%rbp), %rax	# insn, tmp276
	movq	%rax, %rdi	# tmp276,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L5965	#,
	.loc 1 29994 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4948
	cmpl	$1, %eax	#, which_alternative.4948
	jne	.L5965	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57471
	je	.L5965	#,
	movq	-8(%rbp), %rax	# insn, tmp277
	movq	%rax, %rdi	# tmp277,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L5965	#,
	.loc 1 29996 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5966	#
.L5965:
	.loc 1 29998 0
	movq	-8(%rbp), %rax	# insn, tmp278
	movq	%rax, %rdi	# tmp278,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L5967	#,
	.loc 1 29998 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4949
	cmpl	$1, %eax	#, which_alternative.4949
	jne	.L5967	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57471
	je	.L5967	#,
	movq	-8(%rbp), %rax	# insn, tmp279
	movq	%rax, %rdi	# tmp279,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L5968	#,
	movq	-8(%rbp), %rax	# insn, tmp280
	movq	%rax, %rdi	# tmp280,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L5967	#,
.L5968:
	.loc 1 30000 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5966	#
.L5967:
	.loc 1 30004 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30006 0
	jmp	.L5960	#
.L5966:
	jmp	.L5960	#
.L5952:
	.loc 1 30009 0
	movq	-8(%rbp), %rax	# insn, tmp281
	movq	%rax, %rdi	# tmp281,
	call	extract_constrain_insn_cached	#
	.loc 1 30010 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4950
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4951
	movl	%eax, %ecx	# ix86_cpu.4952, tmp363
	sarl	%cl, %edx	# tmp363, D.57471
	movl	%edx, %eax	# D.57471, D.57471
	andl	$1, %eax	#, D.57471
	testl	%eax, %eax	# D.57471
	je	.L5969	#,
	.loc 1 30010 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const1_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L5970	#,
.L5969:
	.loc 1 30010 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4953
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4954
	movl	%eax, %ecx	# ix86_cpu.4955, tmp365
	sarl	%cl, %edx	# tmp365, D.57471
	movl	%edx, %eax	# D.57471, D.57471
	andl	$1, %eax	#, D.57471
	testl	%eax, %eax	# D.57471
	je	.L5970	#,
	.loc 1 30010 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const1_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L5971	#,
.L5970:
	movq	-8(%rbp), %rax	# insn, tmp282
	movq	%rax, %rdi	# tmp282,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L5971	#,
	.loc 1 30012 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5972	#
.L5971:
	.loc 1 30014 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4956
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4957
	movl	%eax, %ecx	# ix86_cpu.4958, tmp367
	sarl	%cl, %edx	# tmp367, D.57471
	movl	%edx, %eax	# D.57471, D.57471
	andl	$1, %eax	#, D.57471
	testl	%eax, %eax	# D.57471
	je	.L5973	#,
	.loc 1 30014 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const1_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L5974	#,
.L5973:
	.loc 1 30014 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4959
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4960
	movl	%eax, %ecx	# ix86_cpu.4961, tmp369
	sarl	%cl, %edx	# tmp369, D.57471
	movl	%edx, %eax	# D.57471, D.57471
	andl	$1, %eax	#, D.57471
	testl	%eax, %eax	# D.57471
	je	.L5974	#,
	.loc 1 30014 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const1_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L5975	#,
.L5974:
	movq	-8(%rbp), %rax	# insn, tmp283
	movq	%rax, %rdi	# tmp283,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L5976	#,
	movq	-8(%rbp), %rax	# insn, tmp284
	movq	%rax, %rdi	# tmp284,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L5975	#,
.L5976:
	.loc 1 30016 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5972	#
.L5975:
	.loc 1 30020 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30022 0
	jmp	.L5960	#
.L5972:
	jmp	.L5960	#
.L5951:
	.loc 1 30025 0
	movq	-8(%rbp), %rax	# insn, tmp285
	movq	%rax, %rdi	# tmp285,
	call	extract_constrain_insn_cached	#
	.loc 1 30026 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4962
	testl	%eax, %eax	# which_alternative.4962
	jne	.L5977	#,
	.loc 1 30026 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4963
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4964
	movl	%eax, %ecx	# ix86_cpu.4965, tmp371
	sarl	%cl, %edx	# tmp371, D.57471
	movl	%edx, %eax	# D.57471, D.57471
	andl	$1, %eax	#, D.57471
	testl	%eax, %eax	# D.57471
	je	.L5978	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const1_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L5979	#,
.L5978:
	.loc 1 30026 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4966
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4967
	movl	%eax, %ecx	# ix86_cpu.4968, tmp373
	sarl	%cl, %edx	# tmp373, D.57471
	movl	%edx, %eax	# D.57471, D.57471
	andl	$1, %eax	#, D.57471
	testl	%eax, %eax	# D.57471
	je	.L5979	#,
	.loc 1 30026 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const1_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L5977	#,
.L5979:
	movq	-8(%rbp), %rax	# insn, tmp286
	movq	%rax, %rdi	# tmp286,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L5977	#,
	.loc 1 30028 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5980	#
.L5977:
	.loc 1 30030 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4969
	testl	%eax, %eax	# which_alternative.4969
	jne	.L5981	#,
	.loc 1 30030 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4970
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4971
	movl	%eax, %ecx	# ix86_cpu.4972, tmp375
	sarl	%cl, %edx	# tmp375, D.57471
	movl	%edx, %eax	# D.57471, D.57471
	andl	$1, %eax	#, D.57471
	testl	%eax, %eax	# D.57471
	je	.L5982	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const1_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L5983	#,
.L5982:
	.loc 1 30030 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4973
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4974
	movl	%eax, %ecx	# ix86_cpu.4975, tmp377
	sarl	%cl, %edx	# tmp377, D.57471
	movl	%edx, %eax	# D.57471, D.57471
	andl	$1, %eax	#, D.57471
	testl	%eax, %eax	# D.57471
	je	.L5983	#,
	.loc 1 30030 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	const1_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L5981	#,
.L5983:
	movq	-8(%rbp), %rax	# insn, tmp287
	movq	%rax, %rdi	# tmp287,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L5984	#,
	movq	-8(%rbp), %rax	# insn, tmp288
	movq	%rax, %rdi	# tmp288,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L5981	#,
.L5984:
	.loc 1 30032 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5980	#
.L5981:
	.loc 1 30036 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30038 0
	jmp	.L5960	#
.L5980:
	jmp	.L5960	#
.L5950:
	.loc 1 30050 0
	movq	-8(%rbp), %rax	# insn, tmp289
	movq	%rax, %rdi	# tmp289,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57475
	je	.L5985	#,
	.loc 1 30050 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp290
	movq	%rax, %rdi	# tmp290,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57475
	jne	.L5986	#,
.L5985:
	.loc 1 30050 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp291
	movq	%rax, %rdi	# tmp291,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L5986	#,
	.loc 1 30052 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5987	#
.L5986:
	.loc 1 30054 0
	movq	-8(%rbp), %rax	# insn, tmp292
	movq	%rax, %rdi	# tmp292,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57475
	je	.L5988	#,
	.loc 1 30054 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp293
	movq	%rax, %rdi	# tmp293,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57475
	jne	.L5989	#,
.L5988:
	.loc 1 30054 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp294
	movq	%rax, %rdi	# tmp294,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L5990	#,
	movq	-8(%rbp), %rax	# insn, tmp295
	movq	%rax, %rdi	# tmp295,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L5989	#,
.L5990:
	.loc 1 30056 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5987	#
.L5989:
	.loc 1 30060 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30062 0
	jmp	.L5960	#
.L5987:
	jmp	.L5960	#
.L5949:
	.loc 1 30066 0
	movq	-8(%rbp), %rax	# insn, tmp296
	movq	%rax, %rdi	# tmp296,
	call	extract_constrain_insn_cached	#
	.loc 1 30067 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4976
	testl	%eax, %eax	# which_alternative.4976
	je	.L5991	#,
	.loc 1 30067 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4977
	cmpl	$1, %eax	#, which_alternative.4977
	jne	.L5992	#,
.L5991:
	.loc 1 30067 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp297
	movq	%rax, %rdi	# tmp297,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L5992	#,
	movq	-8(%rbp), %rax	# insn, tmp298
	movq	%rax, %rdi	# tmp298,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L5992	#,
	.loc 1 30069 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5993	#
.L5992:
	.loc 1 30071 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4978
	testl	%eax, %eax	# which_alternative.4978
	je	.L5994	#,
	.loc 1 30071 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4979
	cmpl	$1, %eax	#, which_alternative.4979
	jne	.L5995	#,
.L5994:
	.loc 1 30071 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp299
	movq	%rax, %rdi	# tmp299,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L5995	#,
	movq	-8(%rbp), %rax	# insn, tmp300
	movq	%rax, %rdi	# tmp300,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L5996	#,
	movq	-8(%rbp), %rax	# insn, tmp301
	movq	%rax, %rdi	# tmp301,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L5995	#,
.L5996:
	.loc 1 30073 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5993	#
.L5995:
	.loc 1 30077 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30079 0
	jmp	.L5960	#
.L5993:
	jmp	.L5960	#
.L5948:
	.loc 1 30082 0
	movq	-8(%rbp), %rax	# insn, tmp302
	movq	%rax, %rdi	# tmp302,
	call	extract_constrain_insn_cached	#
	.loc 1 30083 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4980
	testl	%eax, %eax	# which_alternative.4980
	je	.L5997	#,
	.loc 1 30083 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4981
	cmpl	$1, %eax	#, which_alternative.4981
	je	.L5997	#,
	.loc 1 30083 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4982
	cmpl	$2, %eax	#, which_alternative.4982
	jne	.L5998	#,
.L5997:
	movq	-8(%rbp), %rax	# insn, tmp303
	movq	%rax, %rdi	# tmp303,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L5998	#,
	movq	-8(%rbp), %rax	# insn, tmp304
	movq	%rax, %rdi	# tmp304,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L5998	#,
	.loc 1 30085 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L5999	#
.L5998:
	.loc 1 30087 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4983
	testl	%eax, %eax	# which_alternative.4983
	je	.L6000	#,
	.loc 1 30087 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4984
	cmpl	$1, %eax	#, which_alternative.4984
	je	.L6000	#,
	.loc 1 30087 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4985
	cmpl	$2, %eax	#, which_alternative.4985
	jne	.L6001	#,
.L6000:
	movq	-8(%rbp), %rax	# insn, tmp305
	movq	%rax, %rdi	# tmp305,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6001	#,
	movq	-8(%rbp), %rax	# insn, tmp306
	movq	%rax, %rdi	# tmp306,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L6002	#,
	movq	-8(%rbp), %rax	# insn, tmp307
	movq	%rax, %rdi	# tmp307,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L6001	#,
.L6002:
	.loc 1 30089 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L5999	#
.L6001:
	.loc 1 30093 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30095 0
	jmp	.L5960	#
.L5999:
	jmp	.L5960	#
.L5947:
	.loc 1 30103 0
	movq	-8(%rbp), %rax	# insn, tmp308
	movq	%rax, %rdi	# tmp308,
	call	extract_insn_cached	#
	.loc 1 30104 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6003	#,
	.loc 1 30104 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp309
	movq	%rax, %rdi	# tmp309,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6003	#,
	movq	-8(%rbp), %rax	# insn, tmp310
	movq	%rax, %rdi	# tmp310,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L6003	#,
	.loc 1 30106 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6004	#
.L6003:
	.loc 1 30108 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6005	#,
	.loc 1 30108 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp311
	movq	%rax, %rdi	# tmp311,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6005	#,
	movq	-8(%rbp), %rax	# insn, tmp312
	movq	%rax, %rdi	# tmp312,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L6006	#,
	movq	-8(%rbp), %rax	# insn, tmp313
	movq	%rax, %rdi	# tmp313,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L6005	#,
.L6006:
	.loc 1 30110 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6004	#
.L6005:
	.loc 1 30114 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30116 0
	jmp	.L5960	#
.L6004:
	jmp	.L5960	#
.L5946:
	.loc 1 30119 0
	movq	-8(%rbp), %rax	# insn, tmp314
	movq	%rax, %rdi	# tmp314,
	call	extract_constrain_insn_cached	#
	.loc 1 30120 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4986
	cmpl	$3, %eax	#, which_alternative.4986
	je	.L6007	#,
	.loc 1 30120 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6007	#,
	movq	-8(%rbp), %rax	# insn, tmp315
	movq	%rax, %rdi	# tmp315,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L6007	#,
	.loc 1 30122 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6008	#
.L6007:
	.loc 1 30124 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4987
	cmpl	$3, %eax	#, which_alternative.4987
	je	.L6009	#,
	.loc 1 30124 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6009	#,
	movq	-8(%rbp), %rax	# insn, tmp316
	movq	%rax, %rdi	# tmp316,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L6010	#,
	movq	-8(%rbp), %rax	# insn, tmp317
	movq	%rax, %rdi	# tmp317,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L6009	#,
.L6010:
	.loc 1 30126 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6008	#
.L6009:
	.loc 1 30130 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30132 0
	jmp	.L5960	#
.L6008:
	jmp	.L5960	#
.L5945:
	.loc 1 30140 0
	movq	-8(%rbp), %rax	# insn, tmp318
	movq	%rax, %rdi	# tmp318,
	call	extract_insn_cached	#
	.loc 1 30141 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6011	#,
	.loc 1 30141 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp319
	movq	%rax, %rdi	# tmp319,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6011	#,
	movq	-8(%rbp), %rax	# insn, tmp320
	movq	%rax, %rdi	# tmp320,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L6011	#,
	.loc 1 30143 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6012	#
.L6011:
	.loc 1 30145 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6013	#,
	.loc 1 30145 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp321
	movq	%rax, %rdi	# tmp321,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6013	#,
	movq	-8(%rbp), %rax	# insn, tmp322
	movq	%rax, %rdi	# tmp322,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L6014	#,
	movq	-8(%rbp), %rax	# insn, tmp323
	movq	%rax, %rdi	# tmp323,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L6013	#,
.L6014:
	.loc 1 30147 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6012	#
.L6013:
	.loc 1 30151 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30153 0
	jmp	.L5960	#
.L6012:
	jmp	.L5960	#
.L5944:
	.loc 1 30156 0
	movq	-8(%rbp), %rax	# insn, tmp324
	movq	%rax, %rdi	# tmp324,
	call	extract_constrain_insn_cached	#
	.loc 1 30157 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4988
	cmpl	$2, %eax	#, which_alternative.4988
	je	.L6015	#,
	.loc 1 30157 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6015	#,
	movq	-8(%rbp), %rax	# insn, tmp325
	movq	%rax, %rdi	# tmp325,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L6015	#,
	.loc 1 30159 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6016	#
.L6015:
	.loc 1 30161 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4989
	cmpl	$2, %eax	#, which_alternative.4989
	je	.L6017	#,
	.loc 1 30161 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6017	#,
	movq	-8(%rbp), %rax	# insn, tmp326
	movq	%rax, %rdi	# tmp326,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L6018	#,
	movq	-8(%rbp), %rax	# insn, tmp327
	movq	%rax, %rdi	# tmp327,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L6017	#,
.L6018:
	.loc 1 30163 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6016	#
.L6017:
	.loc 1 30167 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30169 0
	jmp	.L5960	#
.L6016:
	jmp	.L5960	#
.L5943:
	.loc 1 30177 0
	movq	-8(%rbp), %rax	# insn, tmp328
	movq	%rax, %rdi	# tmp328,
	call	extract_insn_cached	#
	.loc 1 30178 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6019	#,
	.loc 1 30178 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp329
	movq	%rax, %rdi	# tmp329,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6019	#,
	movq	-8(%rbp), %rax	# insn, tmp330
	movq	%rax, %rdi	# tmp330,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L6019	#,
	.loc 1 30180 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6020	#
.L6019:
	.loc 1 30182 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6021	#,
	.loc 1 30182 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp331
	movq	%rax, %rdi	# tmp331,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6021	#,
	movq	-8(%rbp), %rax	# insn, tmp332
	movq	%rax, %rdi	# tmp332,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L6022	#,
	movq	-8(%rbp), %rax	# insn, tmp333
	movq	%rax, %rdi	# tmp333,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L6021	#,
.L6022:
	.loc 1 30184 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6020	#
.L6021:
	.loc 1 30188 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30190 0
	jmp	.L5960	#
.L6020:
	jmp	.L5960	#
.L5942:
	.loc 1 30196 0
	movq	-8(%rbp), %rax	# insn, tmp334
	movq	%rax, %rdi	# tmp334,
	call	extract_insn_cached	#
	.loc 1 30197 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6023	#,
	.loc 1 30197 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp335
	movq	%rax, %rdi	# tmp335,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6023	#,
	movq	-8(%rbp), %rax	# insn, tmp336
	movq	%rax, %rdi	# tmp336,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L6023	#,
	.loc 1 30199 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6024	#
.L6023:
	.loc 1 30201 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57474
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57471
	jne	.L6025	#,
	.loc 1 30201 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp337
	movq	%rax, %rdi	# tmp337,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6025	#,
	movq	-8(%rbp), %rax	# insn, tmp338
	movq	%rax, %rdi	# tmp338,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L6026	#,
	movq	-8(%rbp), %rax	# insn, tmp339
	movq	%rax, %rdi	# tmp339,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L6025	#,
.L6026:
	.loc 1 30203 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6024	#
.L6025:
	.loc 1 30207 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30209 0
	jmp	.L5960	#
.L6024:
	jmp	.L5960	#
.L5941:
	.loc 1 30214 0
	movq	-8(%rbp), %rax	# insn, tmp340
	movq	%rax, %rdi	# tmp340,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57475
	jne	.L6027	#,
	.loc 1 30214 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp341
	movq	%rax, %rdi	# tmp341,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L6027	#,
	.loc 1 30216 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6028	#
.L6027:
	.loc 1 30218 0
	movq	-8(%rbp), %rax	# insn, tmp342
	movq	%rax, %rdi	# tmp342,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57475
	jne	.L6029	#,
	.loc 1 30218 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp343
	movq	%rax, %rdi	# tmp343,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L6030	#,
	movq	-8(%rbp), %rax	# insn, tmp344
	movq	%rax, %rdi	# tmp344,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L6029	#,
.L6030:
	.loc 1 30220 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6028	#
.L6029:
	.loc 1 30224 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30226 0
	jmp	.L5960	#
.L6028:
	jmp	.L5960	#
.L5940:
	.loc 1 30295 0
	movq	-8(%rbp), %rax	# insn, tmp345
	movq	%rax, %rdi	# tmp345,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6031	#,
	.loc 1 30295 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp346
	movq	%rax, %rdi	# tmp346,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L6031	#,
	.loc 1 30297 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6032	#
.L6031:
	.loc 1 30299 0
	movq	-8(%rbp), %rax	# insn, tmp347
	movq	%rax, %rdi	# tmp347,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57472
	je	.L6033	#,
	.loc 1 30299 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp348
	movq	%rax, %rdi	# tmp348,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L6034	#,
	movq	-8(%rbp), %rax	# insn, tmp349
	movq	%rax, %rdi	# tmp349,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L6033	#,
.L6034:
	.loc 1 30301 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6032	#
.L6033:
	.loc 1 30305 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30307 0
	jmp	.L5960	#
.L6032:
	jmp	.L5960	#
.L5939:
	.loc 1 30315 0
	movq	-8(%rbp), %rax	# insn, tmp350
	movq	%rax, %rdi	# tmp350,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L6035	#,
	.loc 1 30317 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6036	#
.L6035:
	.loc 1 30319 0
	movq	-8(%rbp), %rax	# insn, tmp351
	movq	%rax, %rdi	# tmp351,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57473
	je	.L6037	#,
	.loc 1 30319 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp352
	movq	%rax, %rdi	# tmp352,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57473
	jne	.L6038	#,
.L6037:
	.loc 1 30321 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6036	#
.L6038:
	.loc 1 30325 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30327 0
	jmp	.L5960	#
.L6036:
	jmp	.L5960	#
.L5938:
	.loc 1 30331 0
	movq	-8(%rbp), %rax	# insn, tmp353
	movq	%rax, %rdi	# tmp353,
	call	extract_constrain_insn_cached	#
	.loc 1 30332 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4990
	cmpl	$1, %eax	#, which_alternative.4990
	jne	.L6039	#,
	.loc 1 30332 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp354
	movq	%rax, %rdi	# tmp354,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57473
	jne	.L6039	#,
	.loc 1 30334 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 30340 0
	jmp	.L5960	#
.L6039:
	.loc 1 30338 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30340 0
	jmp	.L5960	#
.L5937:
	.loc 1 30360 0
	movq	-8(%rbp), %rax	# insn, tmp355
	movq	%rax, %rdi	# tmp355,
	call	extract_insn_cached	#
	.loc 1 30361 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57474
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57474,
	call	memory_operand	#
	testl	%eax, %eax	# D.57471
	je	.L6041	#,
	.loc 1 30363 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 30369 0
	jmp	.L5960	#
.L6041:
	.loc 1 30367 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30369 0
	jmp	.L5960	#
.L5935:
	.loc 1 30372 0
	movq	-8(%rbp), %rax	# insn, tmp356
	movq	32(%rax), %rax	# insn_24->fld[3].rtx, D.57474
	movzwl	(%rax), %eax	# _272->code, D.57476
	cmpw	$40, %ax	#, D.57476
	je	.L5934	#,
	.loc 1 30373 0
	movq	-8(%rbp), %rax	# insn, tmp357
	movq	32(%rax), %rax	# insn_24->fld[3].rtx, D.57474
	movq	%rax, %rdi	# D.57474,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57471
	jns	.L5934	#,
	.loc 1 30374 0
	movq	-8(%rbp), %rax	# insn, tmp358
	movl	$__FUNCTION__.24175, %ecx	#,
	movl	$30374, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp358,
	call	_fatal_insn_not_found	#
.L5934:
	.loc 1 30376 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30377 0
	nop
.L5960:
	.loc 1 30381 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp359
	movq	%rax, -8(%rbp)	# tmp359, insn
	.loc 1 30382 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L6044	#,
	cmpl	$2, %eax	#, casenum
	je	.L6045	#,
	testl	%eax, %eax	# casenum
	jne	.L6048	#,
	.loc 1 30385 0
	movl	$3, %eax	#, D.57471
	jmp	.L6047	#
.L6044:
	.loc 1 30388 0
	movl	$2, %eax	#, D.57471
	jmp	.L6047	#
.L6045:
	.loc 1 30391 0
	movl	$1, %eax	#, D.57471
	jmp	.L6047	#
.L6048:
	.loc 1 30394 0
	movl	$__FUNCTION__.24175, %edx	#,
	movl	$30394, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L6047:
	.loc 1 30396 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE81:
	.size	pent_uv_unit_blockage, .-pent_uv_unit_blockage
	.type	pent_uv_unit_conflict_cost, @function
pent_uv_unit_conflict_cost:
.LFB82:
	.loc 1 30403 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 30407 0
	movq	-24(%rbp), %rax	# executing_insn, tmp256
	movq	%rax, -8(%rbp)	# tmp256, insn
	.loc 1 30408 0
	movq	-8(%rbp), %rax	# insn, tmp257
	movl	40(%rax), %eax	# insn_24->fld[4].rtint, D.57477
	testl	%eax, %eax	# D.57477
	js	.L6050	#,
	.loc 1 30408 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp258
	movl	40(%rax), %eax	# insn_24->fld[4].rtint, iftmp.4991
	jmp	.L6051	#
.L6050:
	.loc 1 30408 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp259
	movq	%rax, %rdi	# tmp259,
	call	recog_memoized_1	#
.L6051:
	.loc 1 30408 0 discriminator 3
	addl	$1, %eax	#, tmp260
	cmpl	$637, %eax	#, tmp260
	ja	.L6052	#,
	movl	%eax, %eax	# tmp260, tmp261
	movq	.L6054(,%rax,8), %rax	#, tmp262
	jmp	*%rax	# tmp262
	.section	.rodata
	.align 8
	.align 4
.L6054:
	.quad	.L6053
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6055
	.quad	.L6055
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6055
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6055
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6055
	.quad	.L6055
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6055
	.quad	.L6052
	.quad	.L6055
	.quad	.L6056
	.quad	.L6052
	.quad	.L6055
	.quad	.L6056
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6057
	.quad	.L6058
	.quad	.L6057
	.quad	.L6057
	.quad	.L6058
	.quad	.L6058
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6059
	.quad	.L6060
	.quad	.L6060
	.quad	.L6060
	.quad	.L6060
	.quad	.L6059
	.quad	.L6059
	.quad	.L6061
	.quad	.L6061
	.quad	.L6061
	.quad	.L6061
	.quad	.L6061
	.quad	.L6061
	.quad	.L6062
	.quad	.L6063
	.quad	.L6063
	.quad	.L6063
	.quad	.L6063
	.quad	.L6063
	.quad	.L6064
	.quad	.L6065
	.quad	.L6065
	.quad	.L6065
	.quad	.L6063
	.quad	.L6065
	.quad	.L6065
	.quad	.L6065
	.quad	.L6058
	.quad	.L6052
	.quad	.L6057
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6057
	.quad	.L6057
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6066
	.quad	.L6058
	.quad	.L6067
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6067
	.quad	.L6058
	.quad	.L6058
	.quad	.L6055
	.quad	.L6058
	.quad	.L6055
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6055
	.quad	.L6058
	.quad	.L6055
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6058
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6055
	.quad	.L6052
	.quad	.L6052
	.quad	.L6055
	.quad	.L6055
	.quad	.L6052
	.quad	.L6055
	.quad	.L6052
	.quad	.L6055
	.quad	.L6068
	.quad	.L6068
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6068
	.quad	.L6069
	.quad	.L6068
	.quad	.L6070
	.quad	.L6068
	.quad	.L6068
	.quad	.L6068
	.quad	.L6068
	.quad	.L6068
	.quad	.L6068
	.quad	.L6071
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6071
	.quad	.L6071
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6052
	.quad	.L6052
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6072
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6058
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6052
	.quad	.L6073
	.quad	.L6073
	.text
.L6073:
	.loc 1 30412 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp263
	movq	%rax, %rdi	# tmp263,
	call	extract_constrain_insn_cached	#
	.loc 1 30413 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4992
	testl	%eax, %eax	# which_alternative.4992
	jne	.L6074	#,
	.loc 1 30413 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp264
	movq	%rax, %rdi	# tmp264,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6074	#,
	movq	-8(%rbp), %rax	# insn, tmp265
	movq	%rax, %rdi	# tmp265,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6074	#,
	.loc 1 30415 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6075	#
.L6074:
	.loc 1 30417 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4993
	testl	%eax, %eax	# which_alternative.4993
	jne	.L6076	#,
	.loc 1 30417 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp266
	movq	%rax, %rdi	# tmp266,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6076	#,
	movq	-8(%rbp), %rax	# insn, tmp267
	movq	%rax, %rdi	# tmp267,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6077	#,
	movq	-8(%rbp), %rax	# insn, tmp268
	movq	%rax, %rdi	# tmp268,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6076	#,
.L6077:
	.loc 1 30419 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6075	#
.L6076:
	.loc 1 30423 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30425 0
	jmp	.L6078	#
.L6075:
	jmp	.L6078	#
.L6072:
	.loc 1 30487 0
	movq	-8(%rbp), %rax	# insn, tmp269
	movq	%rax, %rdi	# tmp269,
	call	extract_insn_cached	#
	.loc 1 30488 0
	movq	-8(%rbp), %rax	# insn, tmp270
	movq	%rax, %rdi	# tmp270,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6079	#,
	.loc 1 30488 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57477
	je	.L6079	#,
	movq	-8(%rbp), %rax	# insn, tmp271
	movq	%rax, %rdi	# tmp271,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6079	#,
	.loc 1 30490 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6080	#
.L6079:
	.loc 1 30492 0
	movq	-8(%rbp), %rax	# insn, tmp272
	movq	%rax, %rdi	# tmp272,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6081	#,
	.loc 1 30492 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57477
	je	.L6081	#,
	movq	-8(%rbp), %rax	# insn, tmp273
	movq	%rax, %rdi	# tmp273,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6082	#,
	movq	-8(%rbp), %rax	# insn, tmp274
	movq	%rax, %rdi	# tmp274,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6081	#,
.L6082:
	.loc 1 30494 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6080	#
.L6081:
	.loc 1 30498 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30500 0
	jmp	.L6078	#
.L6080:
	jmp	.L6078	#
.L6071:
	.loc 1 30505 0
	movq	-8(%rbp), %rax	# insn, tmp275
	movq	%rax, %rdi	# tmp275,
	call	extract_constrain_insn_cached	#
	.loc 1 30506 0
	movq	-8(%rbp), %rax	# insn, tmp276
	movq	%rax, %rdi	# tmp276,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6083	#,
	.loc 1 30506 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4994
	cmpl	$1, %eax	#, which_alternative.4994
	jne	.L6083	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57477
	je	.L6083	#,
	movq	-8(%rbp), %rax	# insn, tmp277
	movq	%rax, %rdi	# tmp277,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6083	#,
	.loc 1 30508 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6084	#
.L6083:
	.loc 1 30510 0
	movq	-8(%rbp), %rax	# insn, tmp278
	movq	%rax, %rdi	# tmp278,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6085	#,
	.loc 1 30510 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.4995
	cmpl	$1, %eax	#, which_alternative.4995
	jne	.L6085	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57477
	je	.L6085	#,
	movq	-8(%rbp), %rax	# insn, tmp279
	movq	%rax, %rdi	# tmp279,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6086	#,
	movq	-8(%rbp), %rax	# insn, tmp280
	movq	%rax, %rdi	# tmp280,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6085	#,
.L6086:
	.loc 1 30512 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6084	#
.L6085:
	.loc 1 30516 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30518 0
	jmp	.L6078	#
.L6084:
	jmp	.L6078	#
.L6070:
	.loc 1 30521 0
	movq	-8(%rbp), %rax	# insn, tmp281
	movq	%rax, %rdi	# tmp281,
	call	extract_constrain_insn_cached	#
	.loc 1 30522 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4996
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.4997
	movl	%eax, %ecx	# ix86_cpu.4998, tmp363
	sarl	%cl, %edx	# tmp363, D.57477
	movl	%edx, %eax	# D.57477, D.57477
	andl	$1, %eax	#, D.57477
	testl	%eax, %eax	# D.57477
	je	.L6087	#,
	.loc 1 30522 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const1_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6088	#,
.L6087:
	.loc 1 30522 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.4999
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5000
	movl	%eax, %ecx	# ix86_cpu.5001, tmp365
	sarl	%cl, %edx	# tmp365, D.57477
	movl	%edx, %eax	# D.57477, D.57477
	andl	$1, %eax	#, D.57477
	testl	%eax, %eax	# D.57477
	je	.L6088	#,
	.loc 1 30522 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const1_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6089	#,
.L6088:
	movq	-8(%rbp), %rax	# insn, tmp282
	movq	%rax, %rdi	# tmp282,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6089	#,
	.loc 1 30524 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6090	#
.L6089:
	.loc 1 30526 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5002
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5003
	movl	%eax, %ecx	# ix86_cpu.5004, tmp367
	sarl	%cl, %edx	# tmp367, D.57477
	movl	%edx, %eax	# D.57477, D.57477
	andl	$1, %eax	#, D.57477
	testl	%eax, %eax	# D.57477
	je	.L6091	#,
	.loc 1 30526 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const1_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6092	#,
.L6091:
	.loc 1 30526 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5005
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5006
	movl	%eax, %ecx	# ix86_cpu.5007, tmp369
	sarl	%cl, %edx	# tmp369, D.57477
	movl	%edx, %eax	# D.57477, D.57477
	andl	$1, %eax	#, D.57477
	testl	%eax, %eax	# D.57477
	je	.L6092	#,
	.loc 1 30526 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const1_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6093	#,
.L6092:
	movq	-8(%rbp), %rax	# insn, tmp283
	movq	%rax, %rdi	# tmp283,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6094	#,
	movq	-8(%rbp), %rax	# insn, tmp284
	movq	%rax, %rdi	# tmp284,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6093	#,
.L6094:
	.loc 1 30528 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6090	#
.L6093:
	.loc 1 30532 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30534 0
	jmp	.L6078	#
.L6090:
	jmp	.L6078	#
.L6069:
	.loc 1 30537 0
	movq	-8(%rbp), %rax	# insn, tmp285
	movq	%rax, %rdi	# tmp285,
	call	extract_constrain_insn_cached	#
	.loc 1 30538 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5008
	testl	%eax, %eax	# which_alternative.5008
	jne	.L6095	#,
	.loc 1 30538 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5009
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5010
	movl	%eax, %ecx	# ix86_cpu.5011, tmp371
	sarl	%cl, %edx	# tmp371, D.57477
	movl	%edx, %eax	# D.57477, D.57477
	andl	$1, %eax	#, D.57477
	testl	%eax, %eax	# D.57477
	je	.L6096	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const1_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6097	#,
.L6096:
	.loc 1 30538 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5012
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5013
	movl	%eax, %ecx	# ix86_cpu.5014, tmp373
	sarl	%cl, %edx	# tmp373, D.57477
	movl	%edx, %eax	# D.57477, D.57477
	andl	$1, %eax	#, D.57477
	testl	%eax, %eax	# D.57477
	je	.L6097	#,
	.loc 1 30538 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const1_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6095	#,
.L6097:
	movq	-8(%rbp), %rax	# insn, tmp286
	movq	%rax, %rdi	# tmp286,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6095	#,
	.loc 1 30540 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6098	#
.L6095:
	.loc 1 30542 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5015
	testl	%eax, %eax	# which_alternative.5015
	jne	.L6099	#,
	.loc 1 30542 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5016
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5017
	movl	%eax, %ecx	# ix86_cpu.5018, tmp375
	sarl	%cl, %edx	# tmp375, D.57477
	movl	%edx, %eax	# D.57477, D.57477
	andl	$1, %eax	#, D.57477
	testl	%eax, %eax	# D.57477
	je	.L6100	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const1_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6101	#,
.L6100:
	.loc 1 30542 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5019
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5020
	movl	%eax, %ecx	# ix86_cpu.5021, tmp377
	sarl	%cl, %edx	# tmp377, D.57477
	movl	%edx, %eax	# D.57477, D.57477
	andl	$1, %eax	#, D.57477
	testl	%eax, %eax	# D.57477
	je	.L6101	#,
	.loc 1 30542 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	const1_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6099	#,
.L6101:
	movq	-8(%rbp), %rax	# insn, tmp287
	movq	%rax, %rdi	# tmp287,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6102	#,
	movq	-8(%rbp), %rax	# insn, tmp288
	movq	%rax, %rdi	# tmp288,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6099	#,
.L6102:
	.loc 1 30544 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6098	#
.L6099:
	.loc 1 30548 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30550 0
	jmp	.L6078	#
.L6098:
	jmp	.L6078	#
.L6068:
	.loc 1 30562 0
	movq	-8(%rbp), %rax	# insn, tmp289
	movq	%rax, %rdi	# tmp289,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57481
	je	.L6103	#,
	.loc 1 30562 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp290
	movq	%rax, %rdi	# tmp290,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57481
	jne	.L6104	#,
.L6103:
	.loc 1 30562 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp291
	movq	%rax, %rdi	# tmp291,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6104	#,
	.loc 1 30564 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6105	#
.L6104:
	.loc 1 30566 0
	movq	-8(%rbp), %rax	# insn, tmp292
	movq	%rax, %rdi	# tmp292,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57481
	je	.L6106	#,
	.loc 1 30566 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp293
	movq	%rax, %rdi	# tmp293,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57481
	jne	.L6107	#,
.L6106:
	.loc 1 30566 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp294
	movq	%rax, %rdi	# tmp294,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6108	#,
	movq	-8(%rbp), %rax	# insn, tmp295
	movq	%rax, %rdi	# tmp295,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6107	#,
.L6108:
	.loc 1 30568 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6105	#
.L6107:
	.loc 1 30572 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30574 0
	jmp	.L6078	#
.L6105:
	jmp	.L6078	#
.L6067:
	.loc 1 30578 0
	movq	-8(%rbp), %rax	# insn, tmp296
	movq	%rax, %rdi	# tmp296,
	call	extract_constrain_insn_cached	#
	.loc 1 30579 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5022
	testl	%eax, %eax	# which_alternative.5022
	je	.L6109	#,
	.loc 1 30579 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5023
	cmpl	$1, %eax	#, which_alternative.5023
	jne	.L6110	#,
.L6109:
	.loc 1 30579 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp297
	movq	%rax, %rdi	# tmp297,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6110	#,
	movq	-8(%rbp), %rax	# insn, tmp298
	movq	%rax, %rdi	# tmp298,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6110	#,
	.loc 1 30581 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6111	#
.L6110:
	.loc 1 30583 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5024
	testl	%eax, %eax	# which_alternative.5024
	je	.L6112	#,
	.loc 1 30583 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5025
	cmpl	$1, %eax	#, which_alternative.5025
	jne	.L6113	#,
.L6112:
	.loc 1 30583 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp299
	movq	%rax, %rdi	# tmp299,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6113	#,
	movq	-8(%rbp), %rax	# insn, tmp300
	movq	%rax, %rdi	# tmp300,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6114	#,
	movq	-8(%rbp), %rax	# insn, tmp301
	movq	%rax, %rdi	# tmp301,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6113	#,
.L6114:
	.loc 1 30585 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6111	#
.L6113:
	.loc 1 30589 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30591 0
	jmp	.L6078	#
.L6111:
	jmp	.L6078	#
.L6066:
	.loc 1 30594 0
	movq	-8(%rbp), %rax	# insn, tmp302
	movq	%rax, %rdi	# tmp302,
	call	extract_constrain_insn_cached	#
	.loc 1 30595 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5026
	testl	%eax, %eax	# which_alternative.5026
	je	.L6115	#,
	.loc 1 30595 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5027
	cmpl	$1, %eax	#, which_alternative.5027
	je	.L6115	#,
	.loc 1 30595 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5028
	cmpl	$2, %eax	#, which_alternative.5028
	jne	.L6116	#,
.L6115:
	movq	-8(%rbp), %rax	# insn, tmp303
	movq	%rax, %rdi	# tmp303,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6116	#,
	movq	-8(%rbp), %rax	# insn, tmp304
	movq	%rax, %rdi	# tmp304,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6116	#,
	.loc 1 30597 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6117	#
.L6116:
	.loc 1 30599 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5029
	testl	%eax, %eax	# which_alternative.5029
	je	.L6118	#,
	.loc 1 30599 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5030
	cmpl	$1, %eax	#, which_alternative.5030
	je	.L6118	#,
	.loc 1 30599 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5031
	cmpl	$2, %eax	#, which_alternative.5031
	jne	.L6119	#,
.L6118:
	movq	-8(%rbp), %rax	# insn, tmp305
	movq	%rax, %rdi	# tmp305,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6119	#,
	movq	-8(%rbp), %rax	# insn, tmp306
	movq	%rax, %rdi	# tmp306,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6120	#,
	movq	-8(%rbp), %rax	# insn, tmp307
	movq	%rax, %rdi	# tmp307,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6119	#,
.L6120:
	.loc 1 30601 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6117	#
.L6119:
	.loc 1 30605 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30607 0
	jmp	.L6078	#
.L6117:
	jmp	.L6078	#
.L6065:
	.loc 1 30615 0
	movq	-8(%rbp), %rax	# insn, tmp308
	movq	%rax, %rdi	# tmp308,
	call	extract_insn_cached	#
	.loc 1 30616 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6121	#,
	.loc 1 30616 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp309
	movq	%rax, %rdi	# tmp309,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6121	#,
	movq	-8(%rbp), %rax	# insn, tmp310
	movq	%rax, %rdi	# tmp310,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6121	#,
	.loc 1 30618 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6122	#
.L6121:
	.loc 1 30620 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6123	#,
	.loc 1 30620 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp311
	movq	%rax, %rdi	# tmp311,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6123	#,
	movq	-8(%rbp), %rax	# insn, tmp312
	movq	%rax, %rdi	# tmp312,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6124	#,
	movq	-8(%rbp), %rax	# insn, tmp313
	movq	%rax, %rdi	# tmp313,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6123	#,
.L6124:
	.loc 1 30622 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6122	#
.L6123:
	.loc 1 30626 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30628 0
	jmp	.L6078	#
.L6122:
	jmp	.L6078	#
.L6064:
	.loc 1 30631 0
	movq	-8(%rbp), %rax	# insn, tmp314
	movq	%rax, %rdi	# tmp314,
	call	extract_constrain_insn_cached	#
	.loc 1 30632 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5032
	cmpl	$3, %eax	#, which_alternative.5032
	je	.L6125	#,
	.loc 1 30632 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6125	#,
	movq	-8(%rbp), %rax	# insn, tmp315
	movq	%rax, %rdi	# tmp315,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6125	#,
	.loc 1 30634 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6126	#
.L6125:
	.loc 1 30636 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5033
	cmpl	$3, %eax	#, which_alternative.5033
	je	.L6127	#,
	.loc 1 30636 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6127	#,
	movq	-8(%rbp), %rax	# insn, tmp316
	movq	%rax, %rdi	# tmp316,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6128	#,
	movq	-8(%rbp), %rax	# insn, tmp317
	movq	%rax, %rdi	# tmp317,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6127	#,
.L6128:
	.loc 1 30638 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6126	#
.L6127:
	.loc 1 30642 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30644 0
	jmp	.L6078	#
.L6126:
	jmp	.L6078	#
.L6063:
	.loc 1 30652 0
	movq	-8(%rbp), %rax	# insn, tmp318
	movq	%rax, %rdi	# tmp318,
	call	extract_insn_cached	#
	.loc 1 30653 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6129	#,
	.loc 1 30653 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp319
	movq	%rax, %rdi	# tmp319,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6129	#,
	movq	-8(%rbp), %rax	# insn, tmp320
	movq	%rax, %rdi	# tmp320,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6129	#,
	.loc 1 30655 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6130	#
.L6129:
	.loc 1 30657 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6131	#,
	.loc 1 30657 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp321
	movq	%rax, %rdi	# tmp321,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6131	#,
	movq	-8(%rbp), %rax	# insn, tmp322
	movq	%rax, %rdi	# tmp322,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6132	#,
	movq	-8(%rbp), %rax	# insn, tmp323
	movq	%rax, %rdi	# tmp323,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6131	#,
.L6132:
	.loc 1 30659 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6130	#
.L6131:
	.loc 1 30663 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30665 0
	jmp	.L6078	#
.L6130:
	jmp	.L6078	#
.L6062:
	.loc 1 30668 0
	movq	-8(%rbp), %rax	# insn, tmp324
	movq	%rax, %rdi	# tmp324,
	call	extract_constrain_insn_cached	#
	.loc 1 30669 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5034
	cmpl	$2, %eax	#, which_alternative.5034
	je	.L6133	#,
	.loc 1 30669 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6133	#,
	movq	-8(%rbp), %rax	# insn, tmp325
	movq	%rax, %rdi	# tmp325,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6133	#,
	.loc 1 30671 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6134	#
.L6133:
	.loc 1 30673 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5035
	cmpl	$2, %eax	#, which_alternative.5035
	je	.L6135	#,
	.loc 1 30673 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6135	#,
	movq	-8(%rbp), %rax	# insn, tmp326
	movq	%rax, %rdi	# tmp326,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6136	#,
	movq	-8(%rbp), %rax	# insn, tmp327
	movq	%rax, %rdi	# tmp327,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6135	#,
.L6136:
	.loc 1 30675 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6134	#
.L6135:
	.loc 1 30679 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30681 0
	jmp	.L6078	#
.L6134:
	jmp	.L6078	#
.L6061:
	.loc 1 30689 0
	movq	-8(%rbp), %rax	# insn, tmp328
	movq	%rax, %rdi	# tmp328,
	call	extract_insn_cached	#
	.loc 1 30690 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6137	#,
	.loc 1 30690 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp329
	movq	%rax, %rdi	# tmp329,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6137	#,
	movq	-8(%rbp), %rax	# insn, tmp330
	movq	%rax, %rdi	# tmp330,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6137	#,
	.loc 1 30692 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6138	#
.L6137:
	.loc 1 30694 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6139	#,
	.loc 1 30694 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp331
	movq	%rax, %rdi	# tmp331,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6139	#,
	movq	-8(%rbp), %rax	# insn, tmp332
	movq	%rax, %rdi	# tmp332,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6140	#,
	movq	-8(%rbp), %rax	# insn, tmp333
	movq	%rax, %rdi	# tmp333,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6139	#,
.L6140:
	.loc 1 30696 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6138	#
.L6139:
	.loc 1 30700 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30702 0
	jmp	.L6078	#
.L6138:
	jmp	.L6078	#
.L6060:
	.loc 1 30708 0
	movq	-8(%rbp), %rax	# insn, tmp334
	movq	%rax, %rdi	# tmp334,
	call	extract_insn_cached	#
	.loc 1 30709 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6141	#,
	.loc 1 30709 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp335
	movq	%rax, %rdi	# tmp335,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6141	#,
	movq	-8(%rbp), %rax	# insn, tmp336
	movq	%rax, %rdi	# tmp336,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6141	#,
	.loc 1 30711 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6142	#
.L6141:
	.loc 1 30713 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57480
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57477
	jne	.L6143	#,
	.loc 1 30713 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp337
	movq	%rax, %rdi	# tmp337,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6143	#,
	movq	-8(%rbp), %rax	# insn, tmp338
	movq	%rax, %rdi	# tmp338,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6144	#,
	movq	-8(%rbp), %rax	# insn, tmp339
	movq	%rax, %rdi	# tmp339,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6143	#,
.L6144:
	.loc 1 30715 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6142	#
.L6143:
	.loc 1 30719 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30721 0
	jmp	.L6078	#
.L6142:
	jmp	.L6078	#
.L6059:
	.loc 1 30726 0
	movq	-8(%rbp), %rax	# insn, tmp340
	movq	%rax, %rdi	# tmp340,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57481
	jne	.L6145	#,
	.loc 1 30726 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp341
	movq	%rax, %rdi	# tmp341,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6145	#,
	.loc 1 30728 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6146	#
.L6145:
	.loc 1 30730 0
	movq	-8(%rbp), %rax	# insn, tmp342
	movq	%rax, %rdi	# tmp342,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57481
	jne	.L6147	#,
	.loc 1 30730 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp343
	movq	%rax, %rdi	# tmp343,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6148	#,
	movq	-8(%rbp), %rax	# insn, tmp344
	movq	%rax, %rdi	# tmp344,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6147	#,
.L6148:
	.loc 1 30732 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6146	#
.L6147:
	.loc 1 30736 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30738 0
	jmp	.L6078	#
.L6146:
	jmp	.L6078	#
.L6058:
	.loc 1 30807 0
	movq	-8(%rbp), %rax	# insn, tmp345
	movq	%rax, %rdi	# tmp345,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6149	#,
	.loc 1 30807 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp346
	movq	%rax, %rdi	# tmp346,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6149	#,
	.loc 1 30809 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6150	#
.L6149:
	.loc 1 30811 0
	movq	-8(%rbp), %rax	# insn, tmp347
	movq	%rax, %rdi	# tmp347,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57478
	je	.L6151	#,
	.loc 1 30811 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp348
	movq	%rax, %rdi	# tmp348,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6152	#,
	movq	-8(%rbp), %rax	# insn, tmp349
	movq	%rax, %rdi	# tmp349,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6151	#,
.L6152:
	.loc 1 30813 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6150	#
.L6151:
	.loc 1 30817 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30819 0
	jmp	.L6078	#
.L6150:
	jmp	.L6078	#
.L6057:
	.loc 1 30827 0
	movq	-8(%rbp), %rax	# insn, tmp350
	movq	%rax, %rdi	# tmp350,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6153	#,
	.loc 1 30829 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6154	#
.L6153:
	.loc 1 30831 0
	movq	-8(%rbp), %rax	# insn, tmp351
	movq	%rax, %rdi	# tmp351,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57479
	je	.L6155	#,
	.loc 1 30831 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp352
	movq	%rax, %rdi	# tmp352,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57479
	jne	.L6156	#,
.L6155:
	.loc 1 30833 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6154	#
.L6156:
	.loc 1 30837 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30839 0
	jmp	.L6078	#
.L6154:
	jmp	.L6078	#
.L6056:
	.loc 1 30843 0
	movq	-8(%rbp), %rax	# insn, tmp353
	movq	%rax, %rdi	# tmp353,
	call	extract_constrain_insn_cached	#
	.loc 1 30844 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5036
	cmpl	$1, %eax	#, which_alternative.5036
	jne	.L6157	#,
	.loc 1 30844 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp354
	movq	%rax, %rdi	# tmp354,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57479
	jne	.L6157	#,
	.loc 1 30846 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 30852 0
	jmp	.L6078	#
.L6157:
	.loc 1 30850 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30852 0
	jmp	.L6078	#
.L6055:
	.loc 1 30872 0
	movq	-8(%rbp), %rax	# insn, tmp355
	movq	%rax, %rdi	# tmp355,
	call	extract_insn_cached	#
	.loc 1 30873 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57480
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57480,
	call	memory_operand	#
	testl	%eax, %eax	# D.57477
	je	.L6159	#,
	.loc 1 30875 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 30881 0
	jmp	.L6078	#
.L6159:
	.loc 1 30879 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30881 0
	jmp	.L6078	#
.L6053:
	.loc 1 30884 0
	movq	-8(%rbp), %rax	# insn, tmp356
	movq	32(%rax), %rax	# insn_24->fld[3].rtx, D.57480
	movzwl	(%rax), %eax	# _272->code, D.57482
	cmpw	$40, %ax	#, D.57482
	je	.L6052	#,
	.loc 1 30885 0
	movq	-8(%rbp), %rax	# insn, tmp357
	movq	32(%rax), %rax	# insn_24->fld[3].rtx, D.57480
	movq	%rax, %rdi	# D.57480,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57477
	jns	.L6052	#,
	.loc 1 30886 0
	movq	-8(%rbp), %rax	# insn, tmp358
	movl	$__FUNCTION__.24392, %ecx	#,
	movl	$30886, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp358,
	call	_fatal_insn_not_found	#
.L6052:
	.loc 1 30888 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30889 0
	nop
.L6078:
	.loc 1 30893 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp359
	movq	%rax, -8(%rbp)	# tmp359, insn
	.loc 1 30894 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L6162	#,
	cmpl	$2, %eax	#, casenum
	je	.L6163	#,
	testl	%eax, %eax	# casenum
	jne	.L6166	#,
	.loc 1 30897 0
	movl	$3, %eax	#, D.57477
	jmp	.L6165	#
.L6162:
	.loc 1 30900 0
	movl	$2, %eax	#, D.57477
	jmp	.L6165	#
.L6163:
	.loc 1 30903 0
	movl	$1, %eax	#, D.57477
	jmp	.L6165	#
.L6166:
	.loc 1 30906 0
	movl	$__FUNCTION__.24392, %edx	#,
	movl	$30906, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L6165:
	.loc 1 30908 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE82:
	.size	pent_uv_unit_conflict_cost, .-pent_uv_unit_conflict_cost
	.type	pent_u_unit_blockage, @function
pent_u_unit_blockage:
.LFB83:
	.loc 1 30915 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 30919 0
	movq	-24(%rbp), %rax	# executing_insn, tmp197
	movq	%rax, -8(%rbp)	# tmp197, insn
	.loc 1 30920 0
	movq	-8(%rbp), %rax	# insn, tmp198
	movl	40(%rax), %eax	# insn_17->fld[4].rtint, D.57483
	testl	%eax, %eax	# D.57483
	js	.L6168	#,
	.loc 1 30920 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp199
	movl	40(%rax), %eax	# insn_17->fld[4].rtint, iftmp.5037
	jmp	.L6169	#
.L6168:
	.loc 1 30920 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp200
	movq	%rax, %rdi	# tmp200,
	call	recog_memoized_1	#
.L6169:
	.loc 1 30920 0 discriminator 3
	cmpl	$319, %eax	#, iftmp.5037
	jg	.L6171	#,
	cmpl	$317, %eax	#, iftmp.5037
	jge	.L6172	#,
	cmpl	$218, %eax	#, iftmp.5037
	jg	.L6173	#,
	cmpl	$216, %eax	#, iftmp.5037
	jge	.L6174	#,
	cmpl	$110, %eax	#, iftmp.5037
	je	.L6175	#,
	cmpl	$110, %eax	#, iftmp.5037
	jg	.L6176	#,
	cmpl	$57, %eax	#, iftmp.5037
	je	.L6177	#,
	cmpl	$109, %eax	#, iftmp.5037
	je	.L6177	#,
	cmpl	$-1, %eax	#, iftmp.5037
	je	.L6178	#,
	.loc 1 30920 0
	jmp	.L6170	#
.L6176:
	.loc 1 30920 0 discriminator 3
	cmpl	$189, %eax	#, iftmp.5037
	jg	.L6179	#,
	cmpl	$188, %eax	#, iftmp.5037
	jge	.L6180	#,
	cmpl	$186, %eax	#, iftmp.5037
	je	.L6180	#,
	.loc 1 30920 0
	jmp	.L6170	#
.L6179:
	.loc 1 30920 0 discriminator 3
	cmpl	$215, %eax	#, iftmp.5037
	je	.L6181	#,
	.loc 1 30920 0
	jmp	.L6170	#
.L6173:
	.loc 1 30920 0 discriminator 3
	cmpl	$236, %eax	#, iftmp.5037
	jg	.L6182	#,
	cmpl	$235, %eax	#, iftmp.5037
	jge	.L6180	#,
	cmpl	$220, %eax	#, iftmp.5037
	je	.L6174	#,
	cmpl	$231, %eax	#, iftmp.5037
	je	.L6180	#,
	.loc 1 30920 0
	jmp	.L6170	#
.L6182:
	.loc 1 30920 0 discriminator 3
	cmpl	$296, %eax	#, iftmp.5037
	je	.L6183	#,
	cmpl	$296, %eax	#, iftmp.5037
	jg	.L6184	#,
	subl	$243, %eax	#, tmp201
	cmpl	$2, %eax	#, tmp201
	ja	.L6170	#,
	.loc 1 30920 0
	jmp	.L6172	#
.L6184:
	.loc 1 30920 0 discriminator 3
	cmpl	$297, %eax	#, iftmp.5037
	je	.L6172	#,
	.loc 1 30920 0
	jmp	.L6170	#
.L6171:
	.loc 1 30920 0 discriminator 3
	cmpl	$417, %eax	#, iftmp.5037
	jg	.L6185	#,
	cmpl	$412, %eax	#, iftmp.5037
	jge	.L6186	#,
	cmpl	$404, %eax	#, iftmp.5037
	jg	.L6187	#,
	cmpl	$403, %eax	#, iftmp.5037
	jge	.L6186	#,
	cmpl	$335, %eax	#, iftmp.5037
	jl	.L6170	#,
	cmpl	$337, %eax	#, iftmp.5037
	jle	.L6172	#,
	cmpl	$400, %eax	#, iftmp.5037
	je	.L6177	#,
	.loc 1 30920 0
	jmp	.L6170	#
.L6187:
	.loc 1 30920 0 discriminator 3
	cmpl	$409, %eax	#, iftmp.5037
	je	.L6188	#,
	cmpl	$409, %eax	#, iftmp.5037
	jg	.L6189	#,
	cmpl	$408, %eax	#, iftmp.5037
	je	.L6186	#,
	.loc 1 30920 0
	jmp	.L6170	#
.L6189:
	.loc 1 30920 0 discriminator 3
	cmpl	$410, %eax	#, iftmp.5037
	je	.L6186	#,
	cmpl	$411, %eax	#, iftmp.5037
	je	.L6190	#,
	.loc 1 30920 0
	jmp	.L6170	#
.L6185:
	.loc 1 30920 0 discriminator 3
	cmpl	$427, %eax	#, iftmp.5037
	jg	.L6191	#,
	cmpl	$426, %eax	#, iftmp.5037
	jge	.L6192	#,
	cmpl	$418, %eax	#, iftmp.5037
	je	.L6192	#,
	cmpl	$422, %eax	#, iftmp.5037
	jg	.L6170	#,
	.loc 1 30920 0
	jmp	.L6193	#
.L6191:
	.loc 1 30920 0 discriminator 3
	cmpl	$447, %eax	#, iftmp.5037
	jle	.L6193	#,
	subl	$450, %eax	#, tmp202
	cmpl	$35, %eax	#, tmp202
	ja	.L6170	#,
.L6193:
	.loc 1 30982 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	extract_insn_cached	#
	.loc 1 30983 0
	movq	-8(%rbp), %rax	# insn, tmp204
	movq	%rax, %rdi	# tmp204,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57484
	je	.L6194	#,
	.loc 1 30983 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57483
	je	.L6194	#,
	movq	-8(%rbp), %rax	# insn, tmp205
	movq	%rax, %rdi	# tmp205,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6194	#,
	.loc 1 30985 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6195	#
.L6194:
	.loc 1 30987 0
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	%rax, %rdi	# tmp206,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57484
	je	.L6196	#,
	.loc 1 30987 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57483
	je	.L6196	#,
	movq	-8(%rbp), %rax	# insn, tmp207
	movq	%rax, %rdi	# tmp207,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57486
	je	.L6197	#,
	movq	-8(%rbp), %rax	# insn, tmp208
	movq	%rax, %rdi	# tmp208,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57486
	jne	.L6196	#,
.L6197:
	.loc 1 30989 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6195	#
.L6196:
	.loc 1 30993 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 30995 0
	jmp	.L6198	#
.L6195:
	jmp	.L6198	#
.L6192:
	.loc 1 31000 0
	movq	-8(%rbp), %rax	# insn, tmp209
	movq	%rax, %rdi	# tmp209,
	call	extract_constrain_insn_cached	#
	.loc 1 31001 0
	movq	-8(%rbp), %rax	# insn, tmp210
	movq	%rax, %rdi	# tmp210,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57484
	je	.L6199	#,
	.loc 1 31001 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5038
	cmpl	$1, %eax	#, which_alternative.5038
	jne	.L6199	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57483
	je	.L6199	#,
	movq	-8(%rbp), %rax	# insn, tmp211
	movq	%rax, %rdi	# tmp211,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6199	#,
	.loc 1 31003 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6200	#
.L6199:
	.loc 1 31005 0
	movq	-8(%rbp), %rax	# insn, tmp212
	movq	%rax, %rdi	# tmp212,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57484
	je	.L6201	#,
	.loc 1 31005 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5039
	cmpl	$1, %eax	#, which_alternative.5039
	jne	.L6201	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57483
	je	.L6201	#,
	movq	-8(%rbp), %rax	# insn, tmp213
	movq	%rax, %rdi	# tmp213,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57486
	je	.L6202	#,
	movq	-8(%rbp), %rax	# insn, tmp214
	movq	%rax, %rdi	# tmp214,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57486
	jne	.L6201	#,
.L6202:
	.loc 1 31007 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6200	#
.L6201:
	.loc 1 31011 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31013 0
	jmp	.L6198	#
.L6200:
	jmp	.L6198	#
.L6190:
	.loc 1 31016 0
	movq	-8(%rbp), %rax	# insn, tmp215
	movq	%rax, %rdi	# tmp215,
	call	extract_constrain_insn_cached	#
	.loc 1 31017 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5040
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5041
	movl	%eax, %ecx	# ix86_cpu.5042, tmp264
	sarl	%cl, %edx	# tmp264, D.57483
	movl	%edx, %eax	# D.57483, D.57483
	andl	$1, %eax	#, D.57483
	testl	%eax, %eax	# D.57483
	je	.L6203	#,
	.loc 1 31017 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const1_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6204	#,
.L6203:
	.loc 1 31017 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5043
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5044
	movl	%eax, %ecx	# ix86_cpu.5045, tmp266
	sarl	%cl, %edx	# tmp266, D.57483
	movl	%edx, %eax	# D.57483, D.57483
	andl	$1, %eax	#, D.57483
	testl	%eax, %eax	# D.57483
	je	.L6204	#,
	.loc 1 31017 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const1_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6205	#,
.L6204:
	movq	-8(%rbp), %rax	# insn, tmp216
	movq	%rax, %rdi	# tmp216,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6205	#,
	.loc 1 31019 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6206	#
.L6205:
	.loc 1 31021 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5046
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5047
	movl	%eax, %ecx	# ix86_cpu.5048, tmp268
	sarl	%cl, %edx	# tmp268, D.57483
	movl	%edx, %eax	# D.57483, D.57483
	andl	$1, %eax	#, D.57483
	testl	%eax, %eax	# D.57483
	je	.L6207	#,
	.loc 1 31021 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const1_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6208	#,
.L6207:
	.loc 1 31021 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5049
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5050
	movl	%eax, %ecx	# ix86_cpu.5051, tmp270
	sarl	%cl, %edx	# tmp270, D.57483
	movl	%edx, %eax	# D.57483, D.57483
	andl	$1, %eax	#, D.57483
	testl	%eax, %eax	# D.57483
	je	.L6208	#,
	.loc 1 31021 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const1_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6209	#,
.L6208:
	movq	-8(%rbp), %rax	# insn, tmp217
	movq	%rax, %rdi	# tmp217,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57486
	je	.L6210	#,
	movq	-8(%rbp), %rax	# insn, tmp218
	movq	%rax, %rdi	# tmp218,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57486
	jne	.L6209	#,
.L6210:
	.loc 1 31023 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6206	#
.L6209:
	.loc 1 31027 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31029 0
	jmp	.L6198	#
.L6206:
	jmp	.L6198	#
.L6188:
	.loc 1 31032 0
	movq	-8(%rbp), %rax	# insn, tmp219
	movq	%rax, %rdi	# tmp219,
	call	extract_constrain_insn_cached	#
	.loc 1 31033 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5052
	testl	%eax, %eax	# which_alternative.5052
	jne	.L6211	#,
	.loc 1 31033 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5053
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5054
	movl	%eax, %ecx	# ix86_cpu.5055, tmp272
	sarl	%cl, %edx	# tmp272, D.57483
	movl	%edx, %eax	# D.57483, D.57483
	andl	$1, %eax	#, D.57483
	testl	%eax, %eax	# D.57483
	je	.L6212	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const1_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6213	#,
.L6212:
	.loc 1 31033 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5056
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5057
	movl	%eax, %ecx	# ix86_cpu.5058, tmp274
	sarl	%cl, %edx	# tmp274, D.57483
	movl	%edx, %eax	# D.57483, D.57483
	andl	$1, %eax	#, D.57483
	testl	%eax, %eax	# D.57483
	je	.L6213	#,
	.loc 1 31033 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const1_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6211	#,
.L6213:
	movq	-8(%rbp), %rax	# insn, tmp220
	movq	%rax, %rdi	# tmp220,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6211	#,
	.loc 1 31035 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6214	#
.L6211:
	.loc 1 31037 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5059
	testl	%eax, %eax	# which_alternative.5059
	jne	.L6215	#,
	.loc 1 31037 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5060
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5061
	movl	%eax, %ecx	# ix86_cpu.5062, tmp276
	sarl	%cl, %edx	# tmp276, D.57483
	movl	%edx, %eax	# D.57483, D.57483
	andl	$1, %eax	#, D.57483
	testl	%eax, %eax	# D.57483
	je	.L6216	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const1_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6217	#,
.L6216:
	.loc 1 31037 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5063
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5064
	movl	%eax, %ecx	# ix86_cpu.5065, tmp278
	sarl	%cl, %edx	# tmp278, D.57483
	movl	%edx, %eax	# D.57483, D.57483
	andl	$1, %eax	#, D.57483
	testl	%eax, %eax	# D.57483
	je	.L6217	#,
	.loc 1 31037 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	const1_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6215	#,
.L6217:
	movq	-8(%rbp), %rax	# insn, tmp221
	movq	%rax, %rdi	# tmp221,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57486
	je	.L6218	#,
	movq	-8(%rbp), %rax	# insn, tmp222
	movq	%rax, %rdi	# tmp222,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57486
	jne	.L6215	#,
.L6218:
	.loc 1 31039 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6214	#
.L6215:
	.loc 1 31043 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31045 0
	jmp	.L6198	#
.L6214:
	jmp	.L6198	#
.L6186:
	.loc 1 31057 0
	movq	-8(%rbp), %rax	# insn, tmp223
	movq	%rax, %rdi	# tmp223,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57487
	je	.L6219	#,
	.loc 1 31057 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp224
	movq	%rax, %rdi	# tmp224,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57487
	jne	.L6220	#,
.L6219:
	.loc 1 31057 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp225
	movq	%rax, %rdi	# tmp225,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6220	#,
	.loc 1 31059 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6221	#
.L6220:
	.loc 1 31061 0
	movq	-8(%rbp), %rax	# insn, tmp226
	movq	%rax, %rdi	# tmp226,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57487
	je	.L6222	#,
	.loc 1 31061 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp227
	movq	%rax, %rdi	# tmp227,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57487
	jne	.L6223	#,
.L6222:
	.loc 1 31061 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp228
	movq	%rax, %rdi	# tmp228,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57486
	je	.L6224	#,
	movq	-8(%rbp), %rax	# insn, tmp229
	movq	%rax, %rdi	# tmp229,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57486
	jne	.L6223	#,
.L6224:
	.loc 1 31063 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6221	#
.L6223:
	.loc 1 31067 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31069 0
	jmp	.L6198	#
.L6221:
	jmp	.L6198	#
.L6183:
	.loc 1 31072 0
	movq	-8(%rbp), %rax	# insn, tmp230
	movq	%rax, %rdi	# tmp230,
	call	extract_constrain_insn_cached	#
	.loc 1 31073 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5066
	testl	%eax, %eax	# which_alternative.5066
	je	.L6225	#,
	.loc 1 31073 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5067
	cmpl	$1, %eax	#, which_alternative.5067
	jne	.L6226	#,
.L6225:
	.loc 1 31073 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp231
	movq	%rax, %rdi	# tmp231,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57484
	je	.L6226	#,
	movq	-8(%rbp), %rax	# insn, tmp232
	movq	%rax, %rdi	# tmp232,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6226	#,
	.loc 1 31075 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6227	#
.L6226:
	.loc 1 31077 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5068
	testl	%eax, %eax	# which_alternative.5068
	je	.L6228	#,
	.loc 1 31077 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5069
	cmpl	$1, %eax	#, which_alternative.5069
	jne	.L6229	#,
.L6228:
	.loc 1 31077 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp233
	movq	%rax, %rdi	# tmp233,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57484
	je	.L6229	#,
	movq	-8(%rbp), %rax	# insn, tmp234
	movq	%rax, %rdi	# tmp234,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57486
	je	.L6230	#,
	movq	-8(%rbp), %rax	# insn, tmp235
	movq	%rax, %rdi	# tmp235,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57486
	jne	.L6229	#,
.L6230:
	.loc 1 31079 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6227	#
.L6229:
	.loc 1 31083 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31085 0
	jmp	.L6198	#
.L6227:
	jmp	.L6198	#
.L6172:
	.loc 1 31097 0
	movq	-8(%rbp), %rax	# insn, tmp236
	movq	%rax, %rdi	# tmp236,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57484
	je	.L6231	#,
	.loc 1 31097 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp237
	movq	%rax, %rdi	# tmp237,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6231	#,
	.loc 1 31099 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6232	#
.L6231:
	.loc 1 31101 0
	movq	-8(%rbp), %rax	# insn, tmp238
	movq	%rax, %rdi	# tmp238,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57484
	je	.L6233	#,
	.loc 1 31101 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp239
	movq	%rax, %rdi	# tmp239,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57486
	je	.L6234	#,
	movq	-8(%rbp), %rax	# insn, tmp240
	movq	%rax, %rdi	# tmp240,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57486
	jne	.L6233	#,
.L6234:
	.loc 1 31103 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6232	#
.L6233:
	.loc 1 31107 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31109 0
	jmp	.L6198	#
.L6232:
	jmp	.L6198	#
.L6174:
	.loc 1 31115 0
	movq	-8(%rbp), %rax	# insn, tmp241
	movq	%rax, %rdi	# tmp241,
	call	extract_insn_cached	#
	.loc 1 31116 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6235	#,
	.loc 1 31116 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp242
	movq	%rax, %rdi	# tmp242,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57484
	je	.L6235	#,
	movq	-8(%rbp), %rax	# insn, tmp243
	movq	%rax, %rdi	# tmp243,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6235	#,
	.loc 1 31118 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6236	#
.L6235:
	.loc 1 31120 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6237	#,
	.loc 1 31120 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp244
	movq	%rax, %rdi	# tmp244,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57484
	je	.L6237	#,
	movq	-8(%rbp), %rax	# insn, tmp245
	movq	%rax, %rdi	# tmp245,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57486
	je	.L6238	#,
	movq	-8(%rbp), %rax	# insn, tmp246
	movq	%rax, %rdi	# tmp246,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57486
	jne	.L6237	#,
.L6238:
	.loc 1 31122 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6236	#
.L6237:
	.loc 1 31126 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31128 0
	jmp	.L6198	#
.L6236:
	jmp	.L6198	#
.L6181:
	.loc 1 31131 0
	movq	-8(%rbp), %rax	# insn, tmp247
	movq	%rax, %rdi	# tmp247,
	call	extract_constrain_insn_cached	#
	.loc 1 31132 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5070
	cmpl	$2, %eax	#, which_alternative.5070
	je	.L6239	#,
	.loc 1 31132 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6239	#,
	movq	-8(%rbp), %rax	# insn, tmp248
	movq	%rax, %rdi	# tmp248,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6239	#,
	.loc 1 31134 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6240	#
.L6239:
	.loc 1 31136 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5071
	cmpl	$2, %eax	#, which_alternative.5071
	je	.L6241	#,
	.loc 1 31136 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57485
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57483
	jne	.L6241	#,
	movq	-8(%rbp), %rax	# insn, tmp249
	movq	%rax, %rdi	# tmp249,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57486
	je	.L6242	#,
	movq	-8(%rbp), %rax	# insn, tmp250
	movq	%rax, %rdi	# tmp250,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57486
	jne	.L6241	#,
.L6242:
	.loc 1 31138 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6240	#
.L6241:
	.loc 1 31142 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31144 0
	jmp	.L6198	#
.L6240:
	jmp	.L6198	#
.L6180:
	.loc 1 31152 0
	movq	-8(%rbp), %rax	# insn, tmp251
	movq	%rax, %rdi	# tmp251,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6243	#,
	.loc 1 31154 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6244	#
.L6243:
	.loc 1 31156 0
	movq	-8(%rbp), %rax	# insn, tmp252
	movq	%rax, %rdi	# tmp252,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57486
	je	.L6245	#,
	.loc 1 31156 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp253
	movq	%rax, %rdi	# tmp253,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57486
	jne	.L6246	#,
.L6245:
	.loc 1 31158 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6244	#
.L6246:
	.loc 1 31162 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31164 0
	jmp	.L6198	#
.L6244:
	jmp	.L6198	#
.L6175:
	.loc 1 31167 0
	movq	-8(%rbp), %rax	# insn, tmp254
	movq	%rax, %rdi	# tmp254,
	call	extract_constrain_insn_cached	#
	.loc 1 31168 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5072
	cmpl	$1, %eax	#, which_alternative.5072
	jne	.L6247	#,
	.loc 1 31168 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp255
	movq	%rax, %rdi	# tmp255,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57486
	jne	.L6247	#,
	.loc 1 31170 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 31176 0
	jmp	.L6198	#
.L6247:
	.loc 1 31174 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31176 0
	jmp	.L6198	#
.L6177:
	.loc 1 31181 0
	movq	-8(%rbp), %rax	# insn, tmp256
	movq	%rax, %rdi	# tmp256,
	call	extract_insn_cached	#
	.loc 1 31182 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57485
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57485,
	call	memory_operand	#
	testl	%eax, %eax	# D.57483
	je	.L6249	#,
	.loc 1 31184 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 31190 0
	jmp	.L6198	#
.L6249:
	.loc 1 31188 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31190 0
	jmp	.L6198	#
.L6178:
	.loc 1 31193 0
	movq	-8(%rbp), %rax	# insn, tmp257
	movq	32(%rax), %rax	# insn_17->fld[3].rtx, D.57485
	movzwl	(%rax), %eax	# _185->code, D.57488
	cmpw	$40, %ax	#, D.57488
	je	.L6170	#,
	.loc 1 31194 0
	movq	-8(%rbp), %rax	# insn, tmp258
	movq	32(%rax), %rax	# insn_17->fld[3].rtx, D.57485
	movq	%rax, %rdi	# D.57485,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57483
	jns	.L6170	#,
	.loc 1 31195 0
	movq	-8(%rbp), %rax	# insn, tmp259
	movl	$__FUNCTION__.24510, %ecx	#,
	movl	$31195, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp259,
	call	_fatal_insn_not_found	#
.L6170:
	.loc 1 31197 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31198 0
	nop
.L6198:
	.loc 1 31202 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp260
	movq	%rax, -8(%rbp)	# tmp260, insn
	.loc 1 31203 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L6252	#,
	cmpl	$2, %eax	#, casenum
	je	.L6253	#,
	testl	%eax, %eax	# casenum
	jne	.L6256	#,
	.loc 1 31206 0
	movl	$3, %eax	#, D.57483
	jmp	.L6255	#
.L6252:
	.loc 1 31209 0
	movl	$2, %eax	#, D.57483
	jmp	.L6255	#
.L6253:
	.loc 1 31212 0
	movl	$1, %eax	#, D.57483
	jmp	.L6255	#
.L6256:
	.loc 1 31215 0
	movl	$__FUNCTION__.24510, %edx	#,
	movl	$31215, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L6255:
	.loc 1 31217 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE83:
	.size	pent_u_unit_blockage, .-pent_u_unit_blockage
	.type	pent_u_unit_conflict_cost, @function
pent_u_unit_conflict_cost:
.LFB84:
	.loc 1 31224 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 31228 0
	movq	-24(%rbp), %rax	# executing_insn, tmp197
	movq	%rax, -8(%rbp)	# tmp197, insn
	.loc 1 31229 0
	movq	-8(%rbp), %rax	# insn, tmp198
	movl	40(%rax), %eax	# insn_17->fld[4].rtint, D.57499
	testl	%eax, %eax	# D.57499
	js	.L6258	#,
	.loc 1 31229 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp199
	movl	40(%rax), %eax	# insn_17->fld[4].rtint, iftmp.5073
	jmp	.L6259	#
.L6258:
	.loc 1 31229 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp200
	movq	%rax, %rdi	# tmp200,
	call	recog_memoized_1	#
.L6259:
	.loc 1 31229 0 discriminator 3
	cmpl	$319, %eax	#, iftmp.5073
	jg	.L6261	#,
	cmpl	$317, %eax	#, iftmp.5073
	jge	.L6262	#,
	cmpl	$218, %eax	#, iftmp.5073
	jg	.L6263	#,
	cmpl	$216, %eax	#, iftmp.5073
	jge	.L6264	#,
	cmpl	$110, %eax	#, iftmp.5073
	je	.L6265	#,
	cmpl	$110, %eax	#, iftmp.5073
	jg	.L6266	#,
	cmpl	$57, %eax	#, iftmp.5073
	je	.L6267	#,
	cmpl	$109, %eax	#, iftmp.5073
	je	.L6267	#,
	cmpl	$-1, %eax	#, iftmp.5073
	je	.L6268	#,
	.loc 1 31229 0
	jmp	.L6260	#
.L6266:
	.loc 1 31229 0 discriminator 3
	cmpl	$189, %eax	#, iftmp.5073
	jg	.L6269	#,
	cmpl	$188, %eax	#, iftmp.5073
	jge	.L6270	#,
	cmpl	$186, %eax	#, iftmp.5073
	je	.L6270	#,
	.loc 1 31229 0
	jmp	.L6260	#
.L6269:
	.loc 1 31229 0 discriminator 3
	cmpl	$215, %eax	#, iftmp.5073
	je	.L6271	#,
	.loc 1 31229 0
	jmp	.L6260	#
.L6263:
	.loc 1 31229 0 discriminator 3
	cmpl	$236, %eax	#, iftmp.5073
	jg	.L6272	#,
	cmpl	$235, %eax	#, iftmp.5073
	jge	.L6270	#,
	cmpl	$220, %eax	#, iftmp.5073
	je	.L6264	#,
	cmpl	$231, %eax	#, iftmp.5073
	je	.L6270	#,
	.loc 1 31229 0
	jmp	.L6260	#
.L6272:
	.loc 1 31229 0 discriminator 3
	cmpl	$296, %eax	#, iftmp.5073
	je	.L6273	#,
	cmpl	$296, %eax	#, iftmp.5073
	jg	.L6274	#,
	subl	$243, %eax	#, tmp201
	cmpl	$2, %eax	#, tmp201
	ja	.L6260	#,
	.loc 1 31229 0
	jmp	.L6262	#
.L6274:
	.loc 1 31229 0 discriminator 3
	cmpl	$297, %eax	#, iftmp.5073
	je	.L6262	#,
	.loc 1 31229 0
	jmp	.L6260	#
.L6261:
	.loc 1 31229 0 discriminator 3
	cmpl	$417, %eax	#, iftmp.5073
	jg	.L6275	#,
	cmpl	$412, %eax	#, iftmp.5073
	jge	.L6276	#,
	cmpl	$404, %eax	#, iftmp.5073
	jg	.L6277	#,
	cmpl	$403, %eax	#, iftmp.5073
	jge	.L6276	#,
	cmpl	$335, %eax	#, iftmp.5073
	jl	.L6260	#,
	cmpl	$337, %eax	#, iftmp.5073
	jle	.L6262	#,
	cmpl	$400, %eax	#, iftmp.5073
	je	.L6267	#,
	.loc 1 31229 0
	jmp	.L6260	#
.L6277:
	.loc 1 31229 0 discriminator 3
	cmpl	$409, %eax	#, iftmp.5073
	je	.L6278	#,
	cmpl	$409, %eax	#, iftmp.5073
	jg	.L6279	#,
	cmpl	$408, %eax	#, iftmp.5073
	je	.L6276	#,
	.loc 1 31229 0
	jmp	.L6260	#
.L6279:
	.loc 1 31229 0 discriminator 3
	cmpl	$410, %eax	#, iftmp.5073
	je	.L6276	#,
	cmpl	$411, %eax	#, iftmp.5073
	je	.L6280	#,
	.loc 1 31229 0
	jmp	.L6260	#
.L6275:
	.loc 1 31229 0 discriminator 3
	cmpl	$427, %eax	#, iftmp.5073
	jg	.L6281	#,
	cmpl	$426, %eax	#, iftmp.5073
	jge	.L6282	#,
	cmpl	$418, %eax	#, iftmp.5073
	je	.L6282	#,
	cmpl	$422, %eax	#, iftmp.5073
	jg	.L6260	#,
	.loc 1 31229 0
	jmp	.L6283	#
.L6281:
	.loc 1 31229 0 discriminator 3
	cmpl	$447, %eax	#, iftmp.5073
	jle	.L6283	#,
	subl	$450, %eax	#, tmp202
	cmpl	$35, %eax	#, tmp202
	ja	.L6260	#,
.L6283:
	.loc 1 31291 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	extract_insn_cached	#
	.loc 1 31292 0
	movq	-8(%rbp), %rax	# insn, tmp204
	movq	%rax, %rdi	# tmp204,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57500
	je	.L6284	#,
	.loc 1 31292 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57499
	je	.L6284	#,
	movq	-8(%rbp), %rax	# insn, tmp205
	movq	%rax, %rdi	# tmp205,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6284	#,
	.loc 1 31294 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6285	#
.L6284:
	.loc 1 31296 0
	movq	-8(%rbp), %rax	# insn, tmp206
	movq	%rax, %rdi	# tmp206,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57500
	je	.L6286	#,
	.loc 1 31296 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57499
	je	.L6286	#,
	movq	-8(%rbp), %rax	# insn, tmp207
	movq	%rax, %rdi	# tmp207,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57502
	je	.L6287	#,
	movq	-8(%rbp), %rax	# insn, tmp208
	movq	%rax, %rdi	# tmp208,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57502
	jne	.L6286	#,
.L6287:
	.loc 1 31298 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6285	#
.L6286:
	.loc 1 31302 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31304 0
	jmp	.L6288	#
.L6285:
	jmp	.L6288	#
.L6282:
	.loc 1 31309 0
	movq	-8(%rbp), %rax	# insn, tmp209
	movq	%rax, %rdi	# tmp209,
	call	extract_constrain_insn_cached	#
	.loc 1 31310 0
	movq	-8(%rbp), %rax	# insn, tmp210
	movq	%rax, %rdi	# tmp210,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57500
	je	.L6289	#,
	.loc 1 31310 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5074
	cmpl	$1, %eax	#, which_alternative.5074
	jne	.L6289	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57499
	je	.L6289	#,
	movq	-8(%rbp), %rax	# insn, tmp211
	movq	%rax, %rdi	# tmp211,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6289	#,
	.loc 1 31312 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6290	#
.L6289:
	.loc 1 31314 0
	movq	-8(%rbp), %rax	# insn, tmp212
	movq	%rax, %rdi	# tmp212,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57500
	je	.L6291	#,
	.loc 1 31314 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5075
	cmpl	$1, %eax	#, which_alternative.5075
	jne	.L6291	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57499
	je	.L6291	#,
	movq	-8(%rbp), %rax	# insn, tmp213
	movq	%rax, %rdi	# tmp213,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57502
	je	.L6292	#,
	movq	-8(%rbp), %rax	# insn, tmp214
	movq	%rax, %rdi	# tmp214,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57502
	jne	.L6291	#,
.L6292:
	.loc 1 31316 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6290	#
.L6291:
	.loc 1 31320 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31322 0
	jmp	.L6288	#
.L6290:
	jmp	.L6288	#
.L6280:
	.loc 1 31325 0
	movq	-8(%rbp), %rax	# insn, tmp215
	movq	%rax, %rdi	# tmp215,
	call	extract_constrain_insn_cached	#
	.loc 1 31326 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5076
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5077
	movl	%eax, %ecx	# ix86_cpu.5078, tmp264
	sarl	%cl, %edx	# tmp264, D.57499
	movl	%edx, %eax	# D.57499, D.57499
	andl	$1, %eax	#, D.57499
	testl	%eax, %eax	# D.57499
	je	.L6293	#,
	.loc 1 31326 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const1_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6294	#,
.L6293:
	.loc 1 31326 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5079
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5080
	movl	%eax, %ecx	# ix86_cpu.5081, tmp266
	sarl	%cl, %edx	# tmp266, D.57499
	movl	%edx, %eax	# D.57499, D.57499
	andl	$1, %eax	#, D.57499
	testl	%eax, %eax	# D.57499
	je	.L6294	#,
	.loc 1 31326 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const1_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6295	#,
.L6294:
	movq	-8(%rbp), %rax	# insn, tmp216
	movq	%rax, %rdi	# tmp216,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6295	#,
	.loc 1 31328 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6296	#
.L6295:
	.loc 1 31330 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5082
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5083
	movl	%eax, %ecx	# ix86_cpu.5084, tmp268
	sarl	%cl, %edx	# tmp268, D.57499
	movl	%edx, %eax	# D.57499, D.57499
	andl	$1, %eax	#, D.57499
	testl	%eax, %eax	# D.57499
	je	.L6297	#,
	.loc 1 31330 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const1_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6298	#,
.L6297:
	.loc 1 31330 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5085
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5086
	movl	%eax, %ecx	# ix86_cpu.5087, tmp270
	sarl	%cl, %edx	# tmp270, D.57499
	movl	%edx, %eax	# D.57499, D.57499
	andl	$1, %eax	#, D.57499
	testl	%eax, %eax	# D.57499
	je	.L6298	#,
	.loc 1 31330 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const1_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6299	#,
.L6298:
	movq	-8(%rbp), %rax	# insn, tmp217
	movq	%rax, %rdi	# tmp217,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57502
	je	.L6300	#,
	movq	-8(%rbp), %rax	# insn, tmp218
	movq	%rax, %rdi	# tmp218,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57502
	jne	.L6299	#,
.L6300:
	.loc 1 31332 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6296	#
.L6299:
	.loc 1 31336 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31338 0
	jmp	.L6288	#
.L6296:
	jmp	.L6288	#
.L6278:
	.loc 1 31341 0
	movq	-8(%rbp), %rax	# insn, tmp219
	movq	%rax, %rdi	# tmp219,
	call	extract_constrain_insn_cached	#
	.loc 1 31342 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5088
	testl	%eax, %eax	# which_alternative.5088
	jne	.L6301	#,
	.loc 1 31342 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5089
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5090
	movl	%eax, %ecx	# ix86_cpu.5091, tmp272
	sarl	%cl, %edx	# tmp272, D.57499
	movl	%edx, %eax	# D.57499, D.57499
	andl	$1, %eax	#, D.57499
	testl	%eax, %eax	# D.57499
	je	.L6302	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const1_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6303	#,
.L6302:
	.loc 1 31342 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5092
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5093
	movl	%eax, %ecx	# ix86_cpu.5094, tmp274
	sarl	%cl, %edx	# tmp274, D.57499
	movl	%edx, %eax	# D.57499, D.57499
	andl	$1, %eax	#, D.57499
	testl	%eax, %eax	# D.57499
	je	.L6303	#,
	.loc 1 31342 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const1_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6301	#,
.L6303:
	movq	-8(%rbp), %rax	# insn, tmp220
	movq	%rax, %rdi	# tmp220,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6301	#,
	.loc 1 31344 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6304	#
.L6301:
	.loc 1 31346 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5095
	testl	%eax, %eax	# which_alternative.5095
	jne	.L6305	#,
	.loc 1 31346 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5096
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5097
	movl	%eax, %ecx	# ix86_cpu.5098, tmp276
	sarl	%cl, %edx	# tmp276, D.57499
	movl	%edx, %eax	# D.57499, D.57499
	andl	$1, %eax	#, D.57499
	testl	%eax, %eax	# D.57499
	je	.L6306	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const1_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6307	#,
.L6306:
	.loc 1 31346 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5099
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5100
	movl	%eax, %ecx	# ix86_cpu.5101, tmp278
	sarl	%cl, %edx	# tmp278, D.57499
	movl	%edx, %eax	# D.57499, D.57499
	andl	$1, %eax	#, D.57499
	testl	%eax, %eax	# D.57499
	je	.L6307	#,
	.loc 1 31346 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	const1_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6305	#,
.L6307:
	movq	-8(%rbp), %rax	# insn, tmp221
	movq	%rax, %rdi	# tmp221,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57502
	je	.L6308	#,
	movq	-8(%rbp), %rax	# insn, tmp222
	movq	%rax, %rdi	# tmp222,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57502
	jne	.L6305	#,
.L6308:
	.loc 1 31348 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6304	#
.L6305:
	.loc 1 31352 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31354 0
	jmp	.L6288	#
.L6304:
	jmp	.L6288	#
.L6276:
	.loc 1 31366 0
	movq	-8(%rbp), %rax	# insn, tmp223
	movq	%rax, %rdi	# tmp223,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57503
	je	.L6309	#,
	.loc 1 31366 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp224
	movq	%rax, %rdi	# tmp224,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57503
	jne	.L6310	#,
.L6309:
	.loc 1 31366 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp225
	movq	%rax, %rdi	# tmp225,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6310	#,
	.loc 1 31368 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6311	#
.L6310:
	.loc 1 31370 0
	movq	-8(%rbp), %rax	# insn, tmp226
	movq	%rax, %rdi	# tmp226,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57503
	je	.L6312	#,
	.loc 1 31370 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp227
	movq	%rax, %rdi	# tmp227,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57503
	jne	.L6313	#,
.L6312:
	.loc 1 31370 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp228
	movq	%rax, %rdi	# tmp228,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57502
	je	.L6314	#,
	movq	-8(%rbp), %rax	# insn, tmp229
	movq	%rax, %rdi	# tmp229,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57502
	jne	.L6313	#,
.L6314:
	.loc 1 31372 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6311	#
.L6313:
	.loc 1 31376 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31378 0
	jmp	.L6288	#
.L6311:
	jmp	.L6288	#
.L6273:
	.loc 1 31381 0
	movq	-8(%rbp), %rax	# insn, tmp230
	movq	%rax, %rdi	# tmp230,
	call	extract_constrain_insn_cached	#
	.loc 1 31382 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5102
	testl	%eax, %eax	# which_alternative.5102
	je	.L6315	#,
	.loc 1 31382 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5103
	cmpl	$1, %eax	#, which_alternative.5103
	jne	.L6316	#,
.L6315:
	.loc 1 31382 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp231
	movq	%rax, %rdi	# tmp231,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57500
	je	.L6316	#,
	movq	-8(%rbp), %rax	# insn, tmp232
	movq	%rax, %rdi	# tmp232,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6316	#,
	.loc 1 31384 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6317	#
.L6316:
	.loc 1 31386 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5104
	testl	%eax, %eax	# which_alternative.5104
	je	.L6318	#,
	.loc 1 31386 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5105
	cmpl	$1, %eax	#, which_alternative.5105
	jne	.L6319	#,
.L6318:
	.loc 1 31386 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp233
	movq	%rax, %rdi	# tmp233,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57500
	je	.L6319	#,
	movq	-8(%rbp), %rax	# insn, tmp234
	movq	%rax, %rdi	# tmp234,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57502
	je	.L6320	#,
	movq	-8(%rbp), %rax	# insn, tmp235
	movq	%rax, %rdi	# tmp235,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57502
	jne	.L6319	#,
.L6320:
	.loc 1 31388 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6317	#
.L6319:
	.loc 1 31392 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31394 0
	jmp	.L6288	#
.L6317:
	jmp	.L6288	#
.L6262:
	.loc 1 31406 0
	movq	-8(%rbp), %rax	# insn, tmp236
	movq	%rax, %rdi	# tmp236,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57500
	je	.L6321	#,
	.loc 1 31406 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp237
	movq	%rax, %rdi	# tmp237,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6321	#,
	.loc 1 31408 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6322	#
.L6321:
	.loc 1 31410 0
	movq	-8(%rbp), %rax	# insn, tmp238
	movq	%rax, %rdi	# tmp238,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57500
	je	.L6323	#,
	.loc 1 31410 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp239
	movq	%rax, %rdi	# tmp239,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57502
	je	.L6324	#,
	movq	-8(%rbp), %rax	# insn, tmp240
	movq	%rax, %rdi	# tmp240,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57502
	jne	.L6323	#,
.L6324:
	.loc 1 31412 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6322	#
.L6323:
	.loc 1 31416 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31418 0
	jmp	.L6288	#
.L6322:
	jmp	.L6288	#
.L6264:
	.loc 1 31424 0
	movq	-8(%rbp), %rax	# insn, tmp241
	movq	%rax, %rdi	# tmp241,
	call	extract_insn_cached	#
	.loc 1 31425 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6325	#,
	.loc 1 31425 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp242
	movq	%rax, %rdi	# tmp242,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57500
	je	.L6325	#,
	movq	-8(%rbp), %rax	# insn, tmp243
	movq	%rax, %rdi	# tmp243,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6325	#,
	.loc 1 31427 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6326	#
.L6325:
	.loc 1 31429 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6327	#,
	.loc 1 31429 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp244
	movq	%rax, %rdi	# tmp244,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57500
	je	.L6327	#,
	movq	-8(%rbp), %rax	# insn, tmp245
	movq	%rax, %rdi	# tmp245,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57502
	je	.L6328	#,
	movq	-8(%rbp), %rax	# insn, tmp246
	movq	%rax, %rdi	# tmp246,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57502
	jne	.L6327	#,
.L6328:
	.loc 1 31431 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6326	#
.L6327:
	.loc 1 31435 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31437 0
	jmp	.L6288	#
.L6326:
	jmp	.L6288	#
.L6271:
	.loc 1 31440 0
	movq	-8(%rbp), %rax	# insn, tmp247
	movq	%rax, %rdi	# tmp247,
	call	extract_constrain_insn_cached	#
	.loc 1 31441 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5106
	cmpl	$2, %eax	#, which_alternative.5106
	je	.L6329	#,
	.loc 1 31441 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6329	#,
	movq	-8(%rbp), %rax	# insn, tmp248
	movq	%rax, %rdi	# tmp248,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6329	#,
	.loc 1 31443 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6330	#
.L6329:
	.loc 1 31445 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5107
	cmpl	$2, %eax	#, which_alternative.5107
	je	.L6331	#,
	.loc 1 31445 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57501
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57499
	jne	.L6331	#,
	movq	-8(%rbp), %rax	# insn, tmp249
	movq	%rax, %rdi	# tmp249,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57502
	je	.L6332	#,
	movq	-8(%rbp), %rax	# insn, tmp250
	movq	%rax, %rdi	# tmp250,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57502
	jne	.L6331	#,
.L6332:
	.loc 1 31447 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6330	#
.L6331:
	.loc 1 31451 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31453 0
	jmp	.L6288	#
.L6330:
	jmp	.L6288	#
.L6270:
	.loc 1 31461 0
	movq	-8(%rbp), %rax	# insn, tmp251
	movq	%rax, %rdi	# tmp251,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6333	#,
	.loc 1 31463 0
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6334	#
.L6333:
	.loc 1 31465 0
	movq	-8(%rbp), %rax	# insn, tmp252
	movq	%rax, %rdi	# tmp252,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57502
	je	.L6335	#,
	.loc 1 31465 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp253
	movq	%rax, %rdi	# tmp253,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57502
	jne	.L6336	#,
.L6335:
	.loc 1 31467 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6334	#
.L6336:
	.loc 1 31471 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31473 0
	jmp	.L6288	#
.L6334:
	jmp	.L6288	#
.L6265:
	.loc 1 31476 0
	movq	-8(%rbp), %rax	# insn, tmp254
	movq	%rax, %rdi	# tmp254,
	call	extract_constrain_insn_cached	#
	.loc 1 31477 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5108
	cmpl	$1, %eax	#, which_alternative.5108
	jne	.L6337	#,
	.loc 1 31477 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp255
	movq	%rax, %rdi	# tmp255,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57502
	jne	.L6337	#,
	.loc 1 31479 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 31485 0
	jmp	.L6288	#
.L6337:
	.loc 1 31483 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31485 0
	jmp	.L6288	#
.L6267:
	.loc 1 31490 0
	movq	-8(%rbp), %rax	# insn, tmp256
	movq	%rax, %rdi	# tmp256,
	call	extract_insn_cached	#
	.loc 1 31491 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57501
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57501,
	call	memory_operand	#
	testl	%eax, %eax	# D.57499
	je	.L6339	#,
	.loc 1 31493 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 31499 0
	jmp	.L6288	#
.L6339:
	.loc 1 31497 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31499 0
	jmp	.L6288	#
.L6268:
	.loc 1 31502 0
	movq	-8(%rbp), %rax	# insn, tmp257
	movq	32(%rax), %rax	# insn_17->fld[3].rtx, D.57501
	movzwl	(%rax), %eax	# _185->code, D.57504
	cmpw	$40, %ax	#, D.57504
	je	.L6260	#,
	.loc 1 31503 0
	movq	-8(%rbp), %rax	# insn, tmp258
	movq	32(%rax), %rax	# insn_17->fld[3].rtx, D.57501
	movq	%rax, %rdi	# D.57501,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57499
	jns	.L6260	#,
	.loc 1 31504 0
	movq	-8(%rbp), %rax	# insn, tmp259
	movl	$__FUNCTION__.24628, %ecx	#,
	movl	$31504, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp259,
	call	_fatal_insn_not_found	#
.L6260:
	.loc 1 31506 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 31507 0
	nop
.L6288:
	.loc 1 31511 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp260
	movq	%rax, -8(%rbp)	# tmp260, insn
	.loc 1 31512 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L6342	#,
	cmpl	$2, %eax	#, casenum
	je	.L6343	#,
	testl	%eax, %eax	# casenum
	jne	.L6346	#,
	.loc 1 31515 0
	movl	$3, %eax	#, D.57499
	jmp	.L6345	#
.L6342:
	.loc 1 31518 0
	movl	$2, %eax	#, D.57499
	jmp	.L6345	#
.L6343:
	.loc 1 31521 0
	movl	$1, %eax	#, D.57499
	jmp	.L6345	#
.L6346:
	.loc 1 31524 0
	movl	$__FUNCTION__.24628, %edx	#,
	movl	$31524, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L6345:
	.loc 1 31526 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE84:
	.size	pent_u_unit_conflict_cost, .-pent_u_unit_conflict_cost
	.type	fpu_unit_blockage, @function
fpu_unit_blockage:
.LFB85:
	.loc 1 31533 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 31537 0
	movq	-24(%rbp), %rax	# executing_insn, tmp340
	movq	%rax, -8(%rbp)	# tmp340, insn
	.loc 1 31538 0
	movq	-8(%rbp), %rax	# insn, tmp341
	movl	40(%rax), %eax	# insn_31->fld[4].rtint, D.57515
	testl	%eax, %eax	# D.57515
	js	.L6348	#,
	.loc 1 31538 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp342
	movl	40(%rax), %eax	# insn_31->fld[4].rtint, iftmp.5109
	jmp	.L6349	#
.L6348:
	.loc 1 31538 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp343
	movq	%rax, %rdi	# tmp343,
	call	recog_memoized_1	#
.L6349:
	.loc 1 31538 0 discriminator 3
	addl	$1, %eax	#, tmp344
	cmpl	$623, %eax	#, tmp344
	ja	.L6350	#,
	movl	%eax, %eax	# tmp344, tmp345
	movq	.L6352(,%rax,8), %rax	#, tmp346
	jmp	*%rax	# tmp346
	.section	.rodata
	.align 8
	.align 4
.L6352:
	.quad	.L6351
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6350
	.quad	.L6353
	.quad	.L6353
	.quad	.L6350
	.quad	.L6350
	.quad	.L6353
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6353
	.quad	.L6354
	.quad	.L6350
	.quad	.L6353
	.quad	.L6354
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6355
	.quad	.L6356
	.quad	.L6350
	.quad	.L6350
	.quad	.L6355
	.quad	.L6355
	.quad	.L6356
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6357
	.quad	.L6357
	.quad	.L6357
	.quad	.L6357
	.quad	.L6356
	.quad	.L6356
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6358
	.quad	.L6350
	.quad	.L6359
	.quad	.L6359
	.quad	.L6359
	.quad	.L6359
	.quad	.L6360
	.quad	.L6360
	.quad	.L6361
	.quad	.L6362
	.quad	.L6350
	.quad	.L6360
	.quad	.L6362
	.quad	.L6360
	.quad	.L6362
	.quad	.L6360
	.quad	.L6362
	.quad	.L6360
	.quad	.L6362
	.quad	.L6363
	.quad	.L6363
	.quad	.L6363
	.quad	.L6350
	.quad	.L6350
	.quad	.L6363
	.quad	.L6363
	.quad	.L6363
	.quad	.L6350
	.quad	.L6350
	.quad	.L6363
	.quad	.L6363
	.quad	.L6363
	.quad	.L6350
	.quad	.L6350
	.quad	.L6360
	.quad	.L6360
	.quad	.L6350
	.quad	.L6360
	.quad	.L6360
	.quad	.L6350
	.quad	.L6360
	.quad	.L6360
	.quad	.L6350
	.quad	.L6360
	.quad	.L6360
	.quad	.L6350
	.quad	.L6364
	.quad	.L6364
	.quad	.L6364
	.quad	.L6364
	.quad	.L6364
	.quad	.L6364
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6353
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6365
	.quad	.L6366
	.quad	.L6350
	.quad	.L6365
	.quad	.L6366
	.quad	.L6350
	.quad	.L6367
	.quad	.L6368
	.quad	.L6369
	.quad	.L6370
	.quad	.L6350
	.quad	.L6369
	.quad	.L6369
	.quad	.L6371
	.quad	.L6372
	.quad	.L6350
	.quad	.L6371
	.quad	.L6371
	.quad	.L6371
	.quad	.L6371
	.quad	.L6373
	.quad	.L6374
	.quad	.L6373
	.quad	.L6374
	.quad	.L6373
	.quad	.L6374
	.quad	.L6373
	.quad	.L6374
	.quad	.L6373
	.quad	.L6374
	.quad	.L6373
	.quad	.L6374
	.quad	.L6373
	.quad	.L6374
	.quad	.L6375
	.quad	.L6350
	.quad	.L6376
	.quad	.L6375
	.quad	.L6350
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6376
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6350
	.quad	.L6377
	.quad	.L6377
	.quad	.L6377
	.quad	.L6378
	.quad	.L6378
	.text
.L6378:
	.loc 1 31542 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5110
	cmpl	$3, %eax	#, ix86_cpu.5110
	jne	.L6379	#,
	.loc 1 31544 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 31550 0
	jmp	.L6381	#
.L6379:
	.loc 1 31548 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31550 0
	jmp	.L6381	#
.L6377:
	.loc 1 31555 0
	movq	-8(%rbp), %rax	# insn, tmp347
	movq	%rax, %rdi	# tmp347,
	call	extract_constrain_insn_cached	#
	.loc 1 31556 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5111
	cmpl	$3, %eax	#, ix86_cpu.5111
	jne	.L6382	#,
	.loc 1 31556 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5112
	testl	%eax, %eax	# which_alternative.5112
	je	.L6383	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5113
	cmpl	$1, %eax	#, which_alternative.5113
	jne	.L6382	#,
.L6383:
	.loc 1 31558 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 31564 0
	jmp	.L6381	#
.L6382:
	.loc 1 31562 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31564 0
	jmp	.L6381	#
.L6376:
	.loc 1 31585 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5114
	cmpl	$2, %eax	#, ix86_cpu.5114
	jne	.L6385	#,
	.loc 1 31587 0
	movl	$7, -12(%rbp)	#, casenum
	.loc 1 31593 0
	jmp	.L6381	#
.L6385:
	.loc 1 31591 0
	movl	$10, -12(%rbp)	#, casenum
	.loc 1 31593 0
	jmp	.L6381	#
.L6375:
	.loc 1 31597 0
	movq	-8(%rbp), %rax	# insn, tmp348
	movq	%rax, %rdi	# tmp348,
	call	extract_constrain_insn_cached	#
	.loc 1 31598 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5115
	cmpl	$2, %eax	#, ix86_cpu.5115
	jne	.L6387	#,
	.loc 1 31598 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5116
	testl	%eax, %eax	# which_alternative.5116
	jne	.L6387	#,
	.loc 1 31600 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L6388	#
.L6387:
	.loc 1 31602 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5117
	cmpl	$3, %eax	#, ix86_cpu.5117
	jne	.L6389	#,
	.loc 1 31602 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5118
	testl	%eax, %eax	# which_alternative.5118
	jne	.L6389	#,
	.loc 1 31604 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6388	#
.L6389:
	.loc 1 31608 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31610 0
	jmp	.L6381	#
.L6388:
	jmp	.L6381	#
.L6374:
	.loc 1 31619 0
	movq	-8(%rbp), %rax	# insn, tmp349
	movq	%rax, %rdi	# tmp349,
	call	extract_insn_cached	#
	.loc 1 31620 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5119
	cmpl	$2, %eax	#, ix86_cpu.5119
	jne	.L6390	#,
	.loc 1 31620 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp350
	movq	%rax, %rdi	# tmp350,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6390	#,
	.loc 1 31622 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6391	#
.L6390:
	.loc 1 31624 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5120
	cmpl	$2, %eax	#, ix86_cpu.5120
	jne	.L6392	#,
	.loc 1 31624 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6392	#,
	.loc 1 31626 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6391	#
.L6392:
	.loc 1 31628 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5121
	cmpl	$2, %eax	#, ix86_cpu.5121
	jne	.L6393	#,
	.loc 1 31628 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp351
	movq	%rax, %rdi	# tmp351,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6393	#,
	.loc 1 31630 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6391	#
.L6393:
	.loc 1 31632 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5122
	cmpl	$3, %eax	#, ix86_cpu.5122
	jne	.L6394	#,
	.loc 1 31632 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp352
	movq	%rax, %rdi	# tmp352,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6394	#,
	.loc 1 31634 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6391	#
.L6394:
	.loc 1 31636 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5123
	cmpl	$3, %eax	#, ix86_cpu.5123
	jne	.L6395	#,
	.loc 1 31636 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6395	#,
	.loc 1 31638 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6391	#
.L6395:
	.loc 1 31640 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5124
	cmpl	$3, %eax	#, ix86_cpu.5124
	jne	.L6396	#,
	.loc 1 31640 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp353
	movq	%rax, %rdi	# tmp353,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6396	#,
	.loc 1 31642 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6391	#
.L6396:
	.loc 1 31646 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31648 0
	jmp	.L6381	#
.L6391:
	jmp	.L6381	#
.L6373:
	.loc 1 31657 0
	movq	-8(%rbp), %rax	# insn, tmp354
	movq	%rax, %rdi	# tmp354,
	call	extract_insn_cached	#
	.loc 1 31658 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5125
	cmpl	$2, %eax	#, ix86_cpu.5125
	jne	.L6397	#,
	.loc 1 31658 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp355
	movq	%rax, %rdi	# tmp355,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6397	#,
	.loc 1 31660 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6398	#
.L6397:
	.loc 1 31662 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5126
	cmpl	$2, %eax	#, ix86_cpu.5126
	jne	.L6399	#,
	.loc 1 31662 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6399	#,
	.loc 1 31664 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6398	#
.L6399:
	.loc 1 31666 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5127
	cmpl	$2, %eax	#, ix86_cpu.5127
	jne	.L6400	#,
	.loc 1 31666 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp356
	movq	%rax, %rdi	# tmp356,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6400	#,
	.loc 1 31668 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6398	#
.L6400:
	.loc 1 31670 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5128
	cmpl	$3, %eax	#, ix86_cpu.5128
	jne	.L6401	#,
	.loc 1 31670 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp357
	movq	%rax, %rdi	# tmp357,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6401	#,
	.loc 1 31672 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6398	#
.L6401:
	.loc 1 31674 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5129
	cmpl	$3, %eax	#, ix86_cpu.5129
	jne	.L6402	#,
	.loc 1 31674 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6402	#,
	.loc 1 31676 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6398	#
.L6402:
	.loc 1 31678 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5130
	cmpl	$3, %eax	#, ix86_cpu.5130
	jne	.L6403	#,
	.loc 1 31678 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp358
	movq	%rax, %rdi	# tmp358,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6403	#,
	.loc 1 31680 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6398	#
.L6403:
	.loc 1 31684 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31686 0
	jmp	.L6381	#
.L6398:
	jmp	.L6381	#
.L6372:
	.loc 1 31689 0
	movq	-8(%rbp), %rax	# insn, tmp359
	movq	%rax, %rdi	# tmp359,
	call	extract_constrain_insn_cached	#
	.loc 1 31690 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5131
	cmpl	$2, %eax	#, ix86_cpu.5131
	jne	.L6404	#,
	.loc 1 31690 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp360
	movq	%rax, %rdi	# tmp360,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6404	#,
	.loc 1 31692 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6405	#
.L6404:
	.loc 1 31694 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5132
	cmpl	$2, %eax	#, ix86_cpu.5132
	jne	.L6406	#,
	.loc 1 31694 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5133
	cmpl	$2, %eax	#, which_alternative.5133
	je	.L6406	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6406	#,
	.loc 1 31696 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6405	#
.L6406:
	.loc 1 31698 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5134
	cmpl	$2, %eax	#, ix86_cpu.5134
	jne	.L6407	#,
	.loc 1 31698 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp361
	movq	%rax, %rdi	# tmp361,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6407	#,
	.loc 1 31700 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6405	#
.L6407:
	.loc 1 31702 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5135
	cmpl	$3, %eax	#, ix86_cpu.5135
	jne	.L6408	#,
	.loc 1 31702 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp362
	movq	%rax, %rdi	# tmp362,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6408	#,
	.loc 1 31704 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6405	#
.L6408:
	.loc 1 31706 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5136
	cmpl	$3, %eax	#, ix86_cpu.5136
	jne	.L6409	#,
	.loc 1 31706 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5137
	cmpl	$2, %eax	#, which_alternative.5137
	je	.L6409	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6409	#,
	.loc 1 31708 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6405	#
.L6409:
	.loc 1 31710 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5138
	cmpl	$3, %eax	#, ix86_cpu.5138
	jne	.L6410	#,
	.loc 1 31710 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp363
	movq	%rax, %rdi	# tmp363,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6410	#,
	.loc 1 31712 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6405	#
.L6410:
	.loc 1 31716 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31718 0
	jmp	.L6381	#
.L6405:
	jmp	.L6381	#
.L6371:
	.loc 1 31725 0
	movq	-8(%rbp), %rax	# insn, tmp364
	movq	%rax, %rdi	# tmp364,
	call	extract_insn_cached	#
	.loc 1 31726 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5139
	cmpl	$2, %eax	#, ix86_cpu.5139
	jne	.L6411	#,
	.loc 1 31726 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp365
	movq	%rax, %rdi	# tmp365,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6411	#,
	.loc 1 31728 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6412	#
.L6411:
	.loc 1 31730 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5140
	cmpl	$2, %eax	#, ix86_cpu.5140
	jne	.L6413	#,
	.loc 1 31730 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6413	#,
	.loc 1 31732 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6412	#
.L6413:
	.loc 1 31734 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5141
	cmpl	$2, %eax	#, ix86_cpu.5141
	jne	.L6414	#,
	.loc 1 31734 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp366
	movq	%rax, %rdi	# tmp366,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6414	#,
	.loc 1 31736 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6412	#
.L6414:
	.loc 1 31738 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5142
	cmpl	$3, %eax	#, ix86_cpu.5142
	jne	.L6415	#,
	.loc 1 31738 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp367
	movq	%rax, %rdi	# tmp367,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6415	#,
	.loc 1 31740 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6412	#
.L6415:
	.loc 1 31742 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5143
	cmpl	$3, %eax	#, ix86_cpu.5143
	jne	.L6416	#,
	.loc 1 31742 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6416	#,
	.loc 1 31744 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6412	#
.L6416:
	.loc 1 31746 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5144
	cmpl	$3, %eax	#, ix86_cpu.5144
	jne	.L6417	#,
	.loc 1 31746 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp368
	movq	%rax, %rdi	# tmp368,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6417	#,
	.loc 1 31748 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6412	#
.L6417:
	.loc 1 31752 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31754 0
	jmp	.L6381	#
.L6412:
	jmp	.L6381	#
.L6370:
	.loc 1 31757 0
	movq	-8(%rbp), %rax	# insn, tmp369
	movq	%rax, %rdi	# tmp369,
	call	extract_constrain_insn_cached	#
	.loc 1 31758 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5145
	cmpl	$2, %eax	#, ix86_cpu.5145
	jne	.L6418	#,
	.loc 1 31758 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp370
	movq	%rax, %rdi	# tmp370,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6418	#,
	.loc 1 31760 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6419	#
.L6418:
	.loc 1 31762 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5146
	cmpl	$2, %eax	#, ix86_cpu.5146
	jne	.L6420	#,
	.loc 1 31762 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5147
	cmpl	$2, %eax	#, which_alternative.5147
	je	.L6420	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6420	#,
	.loc 1 31764 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6419	#
.L6420:
	.loc 1 31766 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5148
	cmpl	$2, %eax	#, ix86_cpu.5148
	jne	.L6421	#,
	.loc 1 31766 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp371
	movq	%rax, %rdi	# tmp371,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6421	#,
	.loc 1 31768 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6419	#
.L6421:
	.loc 1 31770 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5149
	cmpl	$3, %eax	#, ix86_cpu.5149
	jne	.L6422	#,
	.loc 1 31770 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp372
	movq	%rax, %rdi	# tmp372,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6422	#,
	.loc 1 31772 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6419	#
.L6422:
	.loc 1 31774 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5150
	cmpl	$3, %eax	#, ix86_cpu.5150
	jne	.L6423	#,
	.loc 1 31774 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5151
	cmpl	$2, %eax	#, which_alternative.5151
	je	.L6423	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6423	#,
	.loc 1 31776 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6419	#
.L6423:
	.loc 1 31778 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5152
	cmpl	$3, %eax	#, ix86_cpu.5152
	jne	.L6424	#,
	.loc 1 31778 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp373
	movq	%rax, %rdi	# tmp373,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6424	#,
	.loc 1 31780 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6419	#
.L6424:
	.loc 1 31784 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31786 0
	jmp	.L6381	#
.L6419:
	jmp	.L6381	#
.L6369:
	.loc 1 31791 0
	movq	-8(%rbp), %rax	# insn, tmp374
	movq	%rax, %rdi	# tmp374,
	call	extract_insn_cached	#
	.loc 1 31792 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5153
	cmpl	$2, %eax	#, ix86_cpu.5153
	jne	.L6425	#,
	.loc 1 31792 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp375
	movq	%rax, %rdi	# tmp375,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6425	#,
	.loc 1 31794 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6426	#
.L6425:
	.loc 1 31796 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5154
	cmpl	$2, %eax	#, ix86_cpu.5154
	jne	.L6427	#,
	.loc 1 31796 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6427	#,
	.loc 1 31798 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6426	#
.L6427:
	.loc 1 31800 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5155
	cmpl	$2, %eax	#, ix86_cpu.5155
	jne	.L6428	#,
	.loc 1 31800 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp376
	movq	%rax, %rdi	# tmp376,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6428	#,
	.loc 1 31802 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6426	#
.L6428:
	.loc 1 31804 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5156
	cmpl	$3, %eax	#, ix86_cpu.5156
	jne	.L6429	#,
	.loc 1 31804 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp377
	movq	%rax, %rdi	# tmp377,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57516
	jne	.L6429	#,
	.loc 1 31806 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6426	#
.L6429:
	.loc 1 31808 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5157
	cmpl	$3, %eax	#, ix86_cpu.5157
	jne	.L6430	#,
	.loc 1 31808 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6430	#,
	.loc 1 31810 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6426	#
.L6430:
	.loc 1 31812 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5158
	cmpl	$3, %eax	#, ix86_cpu.5158
	jne	.L6431	#,
	.loc 1 31812 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp378
	movq	%rax, %rdi	# tmp378,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57516
	jne	.L6431	#,
	.loc 1 31814 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6426	#
.L6431:
	.loc 1 31818 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31820 0
	jmp	.L6381	#
.L6426:
	jmp	.L6381	#
.L6368:
	.loc 1 31823 0
	movq	-8(%rbp), %rax	# insn, tmp379
	movq	%rax, %rdi	# tmp379,
	call	extract_insn_cached	#
	.loc 1 31824 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5159
	cmpl	$2, %eax	#, ix86_cpu.5159
	jne	.L6432	#,
	.loc 1 31824 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	jne	.L6432	#,
	.loc 1 31826 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6433	#
.L6432:
	.loc 1 31828 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5160
	cmpl	$2, %eax	#, ix86_cpu.5160
	jne	.L6434	#,
	.loc 1 31828 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6434	#,
	.loc 1 31830 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6433	#
.L6434:
	.loc 1 31832 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5161
	cmpl	$3, %eax	#, ix86_cpu.5161
	jne	.L6435	#,
	.loc 1 31832 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	jne	.L6435	#,
	.loc 1 31834 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6433	#
.L6435:
	.loc 1 31836 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5162
	cmpl	$3, %eax	#, ix86_cpu.5162
	jne	.L6436	#,
	.loc 1 31836 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6436	#,
	.loc 1 31838 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6433	#
.L6436:
	.loc 1 31842 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31844 0
	jmp	.L6381	#
.L6433:
	jmp	.L6381	#
.L6367:
	.loc 1 31847 0
	movq	-8(%rbp), %rax	# insn, tmp380
	movq	%rax, %rdi	# tmp380,
	call	extract_insn_cached	#
	.loc 1 31848 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5163
	cmpl	$2, %eax	#, ix86_cpu.5163
	jne	.L6437	#,
	.loc 1 31848 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	jne	.L6437	#,
	.loc 1 31850 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6438	#
.L6437:
	.loc 1 31852 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5164
	cmpl	$2, %eax	#, ix86_cpu.5164
	jne	.L6439	#,
	.loc 1 31852 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6439	#,
	.loc 1 31854 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6438	#
.L6439:
	.loc 1 31856 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5165
	cmpl	$3, %eax	#, ix86_cpu.5165
	jne	.L6440	#,
	.loc 1 31856 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	jne	.L6440	#,
	.loc 1 31858 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6438	#
.L6440:
	.loc 1 31860 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5166
	cmpl	$3, %eax	#, ix86_cpu.5166
	jne	.L6441	#,
	.loc 1 31860 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6441	#,
	.loc 1 31862 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6438	#
.L6441:
	.loc 1 31866 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31868 0
	jmp	.L6381	#
.L6438:
	jmp	.L6381	#
.L6366:
	.loc 1 31872 0
	movq	-8(%rbp), %rax	# insn, tmp381
	movq	%rax, %rdi	# tmp381,
	call	extract_constrain_insn_cached	#
	.loc 1 31873 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5167
	cmpl	$2, %eax	#, ix86_cpu.5167
	jne	.L6442	#,
	.loc 1 31873 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5168
	testl	%eax, %eax	# which_alternative.5168
	jne	.L6442	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	jne	.L6442	#,
	.loc 1 31875 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6443	#
.L6442:
	.loc 1 31877 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5169
	cmpl	$2, %eax	#, ix86_cpu.5169
	jne	.L6444	#,
	.loc 1 31877 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5170
	testl	%eax, %eax	# which_alternative.5170
	jne	.L6444	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6444	#,
	.loc 1 31879 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6443	#
.L6444:
	.loc 1 31881 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5171
	cmpl	$3, %eax	#, ix86_cpu.5171
	jne	.L6445	#,
	.loc 1 31881 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5172
	testl	%eax, %eax	# which_alternative.5172
	jne	.L6445	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	jne	.L6445	#,
	.loc 1 31883 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6443	#
.L6445:
	.loc 1 31885 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5173
	cmpl	$3, %eax	#, ix86_cpu.5173
	jne	.L6446	#,
	.loc 1 31885 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5174
	testl	%eax, %eax	# which_alternative.5174
	jne	.L6446	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6446	#,
	.loc 1 31887 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6443	#
.L6446:
	.loc 1 31891 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31893 0
	jmp	.L6381	#
.L6443:
	jmp	.L6381	#
.L6365:
	.loc 1 31897 0
	movq	-8(%rbp), %rax	# insn, tmp382
	movq	%rax, %rdi	# tmp382,
	call	extract_insn_cached	#
	.loc 1 31898 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5175
	cmpl	$2, %eax	#, ix86_cpu.5175
	jne	.L6447	#,
	.loc 1 31898 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	jne	.L6447	#,
	.loc 1 31900 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6448	#
.L6447:
	.loc 1 31902 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5176
	cmpl	$2, %eax	#, ix86_cpu.5176
	jne	.L6449	#,
	.loc 1 31902 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6449	#,
	.loc 1 31904 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6448	#
.L6449:
	.loc 1 31906 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5177
	cmpl	$3, %eax	#, ix86_cpu.5177
	jne	.L6450	#,
	.loc 1 31906 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	jne	.L6450	#,
	.loc 1 31908 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6448	#
.L6450:
	.loc 1 31910 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5178
	cmpl	$3, %eax	#, ix86_cpu.5178
	jne	.L6451	#,
	.loc 1 31910 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57517
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	mult_operator	#
	testl	%eax, %eax	# D.57515
	je	.L6451	#,
	.loc 1 31912 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6448	#
.L6451:
	.loc 1 31916 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31918 0
	jmp	.L6381	#
.L6448:
	jmp	.L6381	#
.L6364:
	.loc 1 31926 0
	movq	-8(%rbp), %rax	# insn, tmp383
	movq	%rax, %rdi	# tmp383,
	call	extract_constrain_insn_cached	#
	.loc 1 31927 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5179
	cmpl	$2, %eax	#, ix86_cpu.5179
	jne	.L6452	#,
	.loc 1 31927 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5180
	testl	%eax, %eax	# which_alternative.5180
	jne	.L6452	#,
	movq	-8(%rbp), %rax	# insn, tmp384
	movq	%rax, %rdi	# tmp384,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	je	.L6453	#,
	movq	-8(%rbp), %rax	# insn, tmp385
	movq	%rax, %rdi	# tmp385,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6452	#,
.L6453:
	.loc 1 31929 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6454	#
.L6452:
	.loc 1 31931 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5181
	cmpl	$2, %eax	#, ix86_cpu.5181
	jne	.L6455	#,
	.loc 1 31931 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5182
	testl	%eax, %eax	# which_alternative.5182
	jne	.L6455	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57517
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57515
	jne	.L6456	#,
	movq	-8(%rbp), %rax	# insn, tmp386
	movq	%rax, %rdi	# tmp386,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6455	#,
.L6456:
	.loc 1 31933 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6454	#
.L6455:
	.loc 1 31935 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5183
	cmpl	$2, %eax	#, ix86_cpu.5183
	jne	.L6457	#,
	.loc 1 31935 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5184
	testl	%eax, %eax	# which_alternative.5184
	jne	.L6457	#,
	movq	-8(%rbp), %rax	# insn, tmp387
	movq	%rax, %rdi	# tmp387,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57518
	je	.L6458	#,
	movq	-8(%rbp), %rax	# insn, tmp388
	movq	%rax, %rdi	# tmp388,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	jne	.L6457	#,
.L6458:
	.loc 1 31937 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6454	#
.L6457:
	.loc 1 31939 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5185
	cmpl	$3, %eax	#, ix86_cpu.5185
	jne	.L6459	#,
	.loc 1 31939 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5186
	testl	%eax, %eax	# which_alternative.5186
	jne	.L6459	#,
	.loc 1 31941 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6454	#
.L6459:
	.loc 1 31945 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31947 0
	jmp	.L6381	#
.L6454:
	jmp	.L6381	#
.L6363:
	.loc 1 31958 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5187
	cmpl	$2, %eax	#, ix86_cpu.5187
	jne	.L6460	#,
	.loc 1 31960 0
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 31966 0
	jmp	.L6381	#
.L6460:
	.loc 1 31964 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 31966 0
	jmp	.L6381	#
.L6362:
	.loc 1 31973 0
	movq	-8(%rbp), %rax	# insn, tmp389
	movq	%rax, %rdi	# tmp389,
	call	extract_insn_cached	#
	.loc 1 31974 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5188
	cmpl	$2, %eax	#, ix86_cpu.5188
	jne	.L6462	#,
	.loc 1 31974 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57517
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57515
	jne	.L6463	#,
	movq	-8(%rbp), %rax	# insn, tmp390
	movq	%rax, %rdi	# tmp390,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6462	#,
.L6463:
	.loc 1 31976 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6464	#
.L6462:
	.loc 1 31978 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5189
	cmpl	$2, %eax	#, ix86_cpu.5189
	jne	.L6465	#,
	.loc 1 31978 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp391
	movq	%rax, %rdi	# tmp391,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57518
	je	.L6466	#,
	movq	-8(%rbp), %rax	# insn, tmp392
	movq	%rax, %rdi	# tmp392,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	jne	.L6465	#,
.L6466:
	.loc 1 31980 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6464	#
.L6465:
	.loc 1 31982 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5190
	cmpl	$3, %eax	#, ix86_cpu.5190
	jne	.L6467	#,
	.loc 1 31984 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6464	#
.L6467:
	.loc 1 31988 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 31990 0
	jmp	.L6381	#
.L6464:
	jmp	.L6381	#
.L6361:
	.loc 1 31993 0
	movq	-8(%rbp), %rax	# insn, tmp393
	movq	%rax, %rdi	# tmp393,
	call	extract_constrain_insn_cached	#
	.loc 1 31994 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5191
	cmpl	$2, %eax	#, ix86_cpu.5191
	jne	.L6468	#,
	.loc 1 31994 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5192
	cmpl	$1, %eax	#, which_alternative.5192
	jne	.L6468	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57517
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57515
	jne	.L6469	#,
	movq	-8(%rbp), %rax	# insn, tmp394
	movq	%rax, %rdi	# tmp394,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6468	#,
.L6469:
	.loc 1 31996 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6470	#
.L6468:
	.loc 1 31998 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5193
	cmpl	$2, %eax	#, ix86_cpu.5193
	jne	.L6471	#,
	.loc 1 31998 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5194
	cmpl	$1, %eax	#, which_alternative.5194
	jne	.L6471	#,
	movq	-8(%rbp), %rax	# insn, tmp395
	movq	%rax, %rdi	# tmp395,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57518
	je	.L6472	#,
	movq	-8(%rbp), %rax	# insn, tmp396
	movq	%rax, %rdi	# tmp396,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	jne	.L6471	#,
.L6472:
	.loc 1 32000 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6470	#
.L6471:
	.loc 1 32002 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5195
	cmpl	$1, %eax	#, which_alternative.5195
	jne	.L6473	#,
	.loc 1 32002 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5196
	cmpl	$3, %eax	#, ix86_cpu.5196
	jne	.L6473	#,
	.loc 1 32004 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6470	#
.L6473:
	.loc 1 32008 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32010 0
	jmp	.L6381	#
.L6470:
	jmp	.L6381	#
.L6360:
	.loc 1 32026 0
	movq	-8(%rbp), %rax	# insn, tmp397
	movq	%rax, %rdi	# tmp397,
	call	extract_constrain_insn_cached	#
	.loc 1 32027 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5197
	cmpl	$2, %eax	#, ix86_cpu.5197
	jne	.L6474	#,
	.loc 1 32027 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5198
	testl	%eax, %eax	# which_alternative.5198
	jne	.L6474	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57517
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57515
	jne	.L6475	#,
	movq	-8(%rbp), %rax	# insn, tmp398
	movq	%rax, %rdi	# tmp398,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6474	#,
.L6475:
	.loc 1 32029 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6476	#
.L6474:
	.loc 1 32031 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5199
	cmpl	$2, %eax	#, ix86_cpu.5199
	jne	.L6477	#,
	.loc 1 32031 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5200
	testl	%eax, %eax	# which_alternative.5200
	jne	.L6477	#,
	movq	-8(%rbp), %rax	# insn, tmp399
	movq	%rax, %rdi	# tmp399,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57518
	je	.L6478	#,
	movq	-8(%rbp), %rax	# insn, tmp400
	movq	%rax, %rdi	# tmp400,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	jne	.L6477	#,
.L6478:
	.loc 1 32033 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6476	#
.L6477:
	.loc 1 32035 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5201
	cmpl	$3, %eax	#, ix86_cpu.5201
	jne	.L6479	#,
	.loc 1 32035 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5202
	testl	%eax, %eax	# which_alternative.5202
	jne	.L6479	#,
	.loc 1 32037 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6476	#
.L6479:
	.loc 1 32041 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32043 0
	jmp	.L6381	#
.L6476:
	jmp	.L6381	#
.L6359:
	.loc 1 32049 0
	movq	-8(%rbp), %rax	# insn, tmp401
	movq	%rax, %rdi	# tmp401,
	call	extract_constrain_insn_cached	#
	.loc 1 32050 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5203
	cmpl	$2, %eax	#, ix86_cpu.5203
	jne	.L6480	#,
	.loc 1 32050 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5204
	cmpl	$1, %eax	#, which_alternative.5204
	jne	.L6480	#,
	movq	-8(%rbp), %rax	# insn, tmp402
	movq	%rax, %rdi	# tmp402,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	je	.L6481	#,
	movq	-8(%rbp), %rax	# insn, tmp403
	movq	%rax, %rdi	# tmp403,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6480	#,
.L6481:
	.loc 1 32052 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6482	#
.L6480:
	.loc 1 32054 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5205
	cmpl	$2, %eax	#, ix86_cpu.5205
	jne	.L6483	#,
	.loc 1 32054 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57517
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57515
	jne	.L6484	#,
	movq	-8(%rbp), %rax	# insn, tmp404
	movq	%rax, %rdi	# tmp404,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6483	#,
.L6484:
	.loc 1 32056 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6482	#
.L6483:
	.loc 1 32058 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5206
	cmpl	$2, %eax	#, ix86_cpu.5206
	jne	.L6485	#,
	.loc 1 32058 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp405
	movq	%rax, %rdi	# tmp405,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57518
	je	.L6486	#,
	movq	-8(%rbp), %rax	# insn, tmp406
	movq	%rax, %rdi	# tmp406,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	jne	.L6485	#,
.L6486:
	.loc 1 32060 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6482	#
.L6485:
	.loc 1 32062 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5207
	cmpl	$3, %eax	#, ix86_cpu.5207
	jne	.L6487	#,
	.loc 1 32064 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6482	#
.L6487:
	.loc 1 32068 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32070 0
	jmp	.L6381	#
.L6482:
	jmp	.L6381	#
.L6358:
	.loc 1 32073 0
	movq	-8(%rbp), %rax	# insn, tmp407
	movq	%rax, %rdi	# tmp407,
	call	extract_constrain_insn_cached	#
	.loc 1 32074 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5208
	cmpl	$2, %eax	#, ix86_cpu.5208
	jne	.L6488	#,
	.loc 1 32074 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5209
	testl	%eax, %eax	# which_alternative.5209
	je	.L6489	#,
	.loc 1 32074 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5210
	cmpl	$1, %eax	#, which_alternative.5210
	jne	.L6488	#,
.L6489:
	.loc 1 32074 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp408
	movq	%rax, %rdi	# tmp408,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	je	.L6490	#,
	.loc 1 32074 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp409
	movq	%rax, %rdi	# tmp409,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6488	#,
.L6490:
	.loc 1 32074 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5211
	cmpl	$1, %eax	#, which_alternative.5211
	jne	.L6488	#,
	.loc 1 32076 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6491	#
.L6488:
	.loc 1 32078 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5212
	cmpl	$2, %eax	#, ix86_cpu.5212
	jne	.L6492	#,
	.loc 1 32078 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5213
	testl	%eax, %eax	# which_alternative.5213
	je	.L6493	#,
	.loc 1 32078 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5214
	cmpl	$1, %eax	#, which_alternative.5214
	jne	.L6492	#,
.L6493:
	.loc 1 32078 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57517
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57515
	jne	.L6494	#,
	movq	-8(%rbp), %rax	# insn, tmp410
	movq	%rax, %rdi	# tmp410,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6492	#,
.L6494:
	.loc 1 32080 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6491	#
.L6492:
	.loc 1 32082 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5215
	cmpl	$2, %eax	#, ix86_cpu.5215
	jne	.L6495	#,
	.loc 1 32082 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5216
	testl	%eax, %eax	# which_alternative.5216
	je	.L6496	#,
	.loc 1 32082 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5217
	cmpl	$1, %eax	#, which_alternative.5217
	jne	.L6495	#,
.L6496:
	.loc 1 32082 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp411
	movq	%rax, %rdi	# tmp411,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57518
	je	.L6497	#,
	movq	-8(%rbp), %rax	# insn, tmp412
	movq	%rax, %rdi	# tmp412,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	jne	.L6495	#,
.L6497:
	.loc 1 32084 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6491	#
.L6495:
	.loc 1 32086 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5218
	cmpl	$3, %eax	#, ix86_cpu.5218
	jne	.L6498	#,
	.loc 1 32086 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5219
	testl	%eax, %eax	# which_alternative.5219
	je	.L6499	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5220
	cmpl	$1, %eax	#, which_alternative.5220
	jne	.L6498	#,
.L6499:
	.loc 1 32088 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6491	#
.L6498:
	.loc 1 32092 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32094 0
	jmp	.L6381	#
.L6491:
	jmp	.L6381	#
.L6357:
	.loc 1 32100 0
	movq	-8(%rbp), %rax	# insn, tmp413
	movq	%rax, %rdi	# tmp413,
	call	extract_constrain_insn_cached	#
	.loc 1 32101 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5221
	cmpl	$2, %eax	#, ix86_cpu.5221
	jne	.L6500	#,
	.loc 1 32101 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5222
	testl	%eax, %eax	# which_alternative.5222
	je	.L6501	#,
	.loc 1 32101 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5223
	cmpl	$1, %eax	#, which_alternative.5223
	je	.L6501	#,
	.loc 1 32101 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5224
	cmpl	$2, %eax	#, which_alternative.5224
	jne	.L6500	#,
.L6501:
	movq	-8(%rbp), %rax	# insn, tmp414
	movq	%rax, %rdi	# tmp414,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	je	.L6502	#,
	movq	-8(%rbp), %rax	# insn, tmp415
	movq	%rax, %rdi	# tmp415,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6500	#,
.L6502:
	.loc 1 32103 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6503	#
.L6500:
	.loc 1 32105 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5225
	cmpl	$2, %eax	#, ix86_cpu.5225
	jne	.L6504	#,
	.loc 1 32105 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5226
	testl	%eax, %eax	# which_alternative.5226
	je	.L6505	#,
	.loc 1 32105 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5227
	cmpl	$1, %eax	#, which_alternative.5227
	je	.L6505	#,
	.loc 1 32105 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5228
	cmpl	$2, %eax	#, which_alternative.5228
	jne	.L6504	#,
.L6505:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57517
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57515
	jne	.L6506	#,
	movq	-8(%rbp), %rax	# insn, tmp416
	movq	%rax, %rdi	# tmp416,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6504	#,
.L6506:
	.loc 1 32107 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6503	#
.L6504:
	.loc 1 32109 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5229
	cmpl	$2, %eax	#, ix86_cpu.5229
	jne	.L6507	#,
	.loc 1 32109 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5230
	testl	%eax, %eax	# which_alternative.5230
	je	.L6508	#,
	.loc 1 32109 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5231
	cmpl	$1, %eax	#, which_alternative.5231
	je	.L6508	#,
	.loc 1 32109 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5232
	cmpl	$2, %eax	#, which_alternative.5232
	jne	.L6507	#,
.L6508:
	movq	-8(%rbp), %rax	# insn, tmp417
	movq	%rax, %rdi	# tmp417,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57518
	je	.L6509	#,
	movq	-8(%rbp), %rax	# insn, tmp418
	movq	%rax, %rdi	# tmp418,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	jne	.L6507	#,
.L6509:
	.loc 1 32111 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6503	#
.L6507:
	.loc 1 32113 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5233
	cmpl	$3, %eax	#, ix86_cpu.5233
	jne	.L6510	#,
	.loc 1 32113 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5234
	testl	%eax, %eax	# which_alternative.5234
	je	.L6511	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5235
	cmpl	$1, %eax	#, which_alternative.5235
	je	.L6511	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5236
	cmpl	$2, %eax	#, which_alternative.5236
	jne	.L6510	#,
.L6511:
	.loc 1 32115 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6503	#
.L6510:
	.loc 1 32119 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32121 0
	jmp	.L6381	#
.L6503:
	jmp	.L6381	#
.L6356:
	.loc 1 32127 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5237
	cmpl	$2, %eax	#, ix86_cpu.5237
	jne	.L6512	#,
	.loc 1 32129 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 32135 0
	jmp	.L6381	#
.L6512:
	.loc 1 32133 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32135 0
	jmp	.L6381	#
.L6355:
	.loc 1 32140 0
	movq	-8(%rbp), %rax	# insn, tmp419
	movq	%rax, %rdi	# tmp419,
	call	extract_constrain_insn_cached	#
	.loc 1 32141 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5238
	cmpl	$2, %eax	#, ix86_cpu.5238
	jne	.L6514	#,
	.loc 1 32141 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5239
	testl	%eax, %eax	# which_alternative.5239
	je	.L6515	#,
	.loc 1 32141 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5240
	cmpl	$1, %eax	#, which_alternative.5240
	je	.L6515	#,
	.loc 1 32141 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5241
	cmpl	$2, %eax	#, which_alternative.5241
	jne	.L6514	#,
.L6515:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57517
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57517,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57515
	jne	.L6516	#,
	movq	-8(%rbp), %rax	# insn, tmp420
	movq	%rax, %rdi	# tmp420,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57518
	jne	.L6514	#,
.L6516:
	.loc 1 32143 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6517	#
.L6514:
	.loc 1 32145 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5242
	cmpl	$2, %eax	#, ix86_cpu.5242
	jne	.L6518	#,
	.loc 1 32145 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5243
	testl	%eax, %eax	# which_alternative.5243
	je	.L6519	#,
	.loc 1 32145 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5244
	cmpl	$1, %eax	#, which_alternative.5244
	je	.L6519	#,
	.loc 1 32145 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5245
	cmpl	$2, %eax	#, which_alternative.5245
	jne	.L6518	#,
.L6519:
	movq	-8(%rbp), %rax	# insn, tmp421
	movq	%rax, %rdi	# tmp421,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57518
	je	.L6520	#,
	movq	-8(%rbp), %rax	# insn, tmp422
	movq	%rax, %rdi	# tmp422,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57518
	jne	.L6518	#,
.L6520:
	.loc 1 32147 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6517	#
.L6518:
	.loc 1 32149 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5246
	cmpl	$3, %eax	#, ix86_cpu.5246
	jne	.L6521	#,
	.loc 1 32149 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5247
	testl	%eax, %eax	# which_alternative.5247
	je	.L6522	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5248
	cmpl	$1, %eax	#, which_alternative.5248
	je	.L6522	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5249
	cmpl	$2, %eax	#, which_alternative.5249
	jne	.L6521	#,
.L6522:
	.loc 1 32151 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6517	#
.L6521:
	.loc 1 32155 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32157 0
	jmp	.L6381	#
.L6517:
	jmp	.L6381	#
.L6354:
	.loc 1 32161 0
	movq	-8(%rbp), %rax	# insn, tmp423
	movq	%rax, %rdi	# tmp423,
	call	extract_constrain_insn_cached	#
	.loc 1 32162 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5250
	cmpl	$2, %eax	#, ix86_cpu.5250
	jne	.L6523	#,
	.loc 1 32162 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5251
	testl	%eax, %eax	# which_alternative.5251
	jne	.L6523	#,
	.loc 1 32164 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L6524	#
.L6523:
	.loc 1 32166 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5252
	cmpl	$3, %eax	#, ix86_cpu.5252
	jne	.L6525	#,
	.loc 1 32166 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5253
	testl	%eax, %eax	# which_alternative.5253
	jne	.L6525	#,
	.loc 1 32168 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6524	#
.L6525:
	.loc 1 32172 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32174 0
	jmp	.L6381	#
.L6524:
	jmp	.L6381	#
.L6353:
	.loc 1 32202 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5254
	cmpl	$2, %eax	#, ix86_cpu.5254
	jne	.L6526	#,
	.loc 1 32204 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 32210 0
	jmp	.L6381	#
.L6526:
	.loc 1 32208 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 32210 0
	jmp	.L6381	#
.L6351:
	.loc 1 32213 0
	movq	-8(%rbp), %rax	# insn, tmp424
	movq	32(%rax), %rax	# insn_31->fld[3].rtx, D.57517
	movzwl	(%rax), %eax	# _424->code, D.57519
	cmpw	$40, %ax	#, D.57519
	je	.L6350	#,
	.loc 1 32214 0
	movq	-8(%rbp), %rax	# insn, tmp425
	movq	32(%rax), %rax	# insn_31->fld[3].rtx, D.57517
	movq	%rax, %rdi	# D.57517,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57515
	jns	.L6350	#,
	.loc 1 32215 0
	movq	-8(%rbp), %rax	# insn, tmp426
	movl	$__FUNCTION__.24780, %ecx	#,
	movl	$32215, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp426,
	call	_fatal_insn_not_found	#
.L6350:
	.loc 1 32217 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32218 0
	nop
.L6381:
	.loc 1 32222 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp427
	movq	%rax, -8(%rbp)	# tmp427, insn
	.loc 1 32223 0
	cmpl	$11, -12(%rbp)	#, casenum
	ja	.L6528	#,
	movl	-12(%rbp), %eax	# casenum, tmp428
	movq	.L6530(,%rax,8), %rax	#, tmp429
	jmp	*%rax	# tmp429
	.section	.rodata
	.align 8
	.align 4
.L6530:
	.quad	.L6529
	.quad	.L6531
	.quad	.L6532
	.quad	.L6533
	.quad	.L6534
	.quad	.L6535
	.quad	.L6536
	.quad	.L6537
	.quad	.L6538
	.quad	.L6539
	.quad	.L6540
	.quad	.L6541
	.text
.L6529:
	.loc 1 32226 0
	movl	$3, %eax	#, D.57515
	jmp	.L6542	#
.L6531:
	.loc 1 32229 0
	movl	$2, %eax	#, D.57515
	jmp	.L6542	#
.L6532:
	.loc 1 32232 0
	movl	$1, %eax	#, D.57515
	jmp	.L6542	#
.L6533:
	.loc 1 32235 0
	movl	$1, %eax	#, D.57515
	jmp	.L6542	#
.L6534:
	.loc 1 32238 0
	movl	$1, %eax	#, D.57515
	jmp	.L6542	#
.L6535:
	.loc 1 32241 0
	movl	$1, %eax	#, D.57515
	jmp	.L6542	#
.L6536:
	.loc 1 32244 0
	movl	$37, %eax	#, D.57515
	jmp	.L6542	#
.L6537:
	.loc 1 32247 0
	movl	$68, %eax	#, D.57515
	jmp	.L6542	#
.L6538:
	.loc 1 32250 0
	movl	$1, %eax	#, D.57515
	jmp	.L6542	#
.L6539:
	.loc 1 32253 0
	movl	$2, %eax	#, D.57515
	jmp	.L6542	#
.L6540:
	.loc 1 32256 0
	movl	$56, %eax	#, D.57515
	jmp	.L6542	#
.L6541:
	.loc 1 32259 0
	movl	$1, %eax	#, D.57515
	jmp	.L6542	#
.L6528:
	.loc 1 32262 0
	movl	$__FUNCTION__.24780, %edx	#,
	movl	$32262, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L6542:
	.loc 1 32264 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE85:
	.size	fpu_unit_blockage, .-fpu_unit_blockage
	.type	fpu_unit_conflict_cost, @function
fpu_unit_conflict_cost:
.LFB86:
	.loc 1 32271 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 32275 0
	movq	-24(%rbp), %rax	# executing_insn, tmp340
	movq	%rax, -8(%rbp)	# tmp340, insn
	.loc 1 32276 0
	movq	-8(%rbp), %rax	# insn, tmp341
	movl	40(%rax), %eax	# insn_31->fld[4].rtint, D.57520
	testl	%eax, %eax	# D.57520
	js	.L6544	#,
	.loc 1 32276 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp342
	movl	40(%rax), %eax	# insn_31->fld[4].rtint, iftmp.5255
	jmp	.L6545	#
.L6544:
	.loc 1 32276 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp343
	movq	%rax, %rdi	# tmp343,
	call	recog_memoized_1	#
.L6545:
	.loc 1 32276 0 discriminator 3
	addl	$1, %eax	#, tmp344
	cmpl	$623, %eax	#, tmp344
	ja	.L6546	#,
	movl	%eax, %eax	# tmp344, tmp345
	movq	.L6548(,%rax,8), %rax	#, tmp346
	jmp	*%rax	# tmp346
	.section	.rodata
	.align 8
	.align 4
.L6548:
	.quad	.L6547
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6546
	.quad	.L6549
	.quad	.L6549
	.quad	.L6546
	.quad	.L6546
	.quad	.L6549
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6549
	.quad	.L6550
	.quad	.L6546
	.quad	.L6549
	.quad	.L6550
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6551
	.quad	.L6552
	.quad	.L6546
	.quad	.L6546
	.quad	.L6551
	.quad	.L6551
	.quad	.L6552
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6553
	.quad	.L6553
	.quad	.L6553
	.quad	.L6553
	.quad	.L6552
	.quad	.L6552
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6554
	.quad	.L6546
	.quad	.L6555
	.quad	.L6555
	.quad	.L6555
	.quad	.L6555
	.quad	.L6556
	.quad	.L6556
	.quad	.L6557
	.quad	.L6558
	.quad	.L6546
	.quad	.L6556
	.quad	.L6558
	.quad	.L6556
	.quad	.L6558
	.quad	.L6556
	.quad	.L6558
	.quad	.L6556
	.quad	.L6558
	.quad	.L6559
	.quad	.L6559
	.quad	.L6559
	.quad	.L6546
	.quad	.L6546
	.quad	.L6559
	.quad	.L6559
	.quad	.L6559
	.quad	.L6546
	.quad	.L6546
	.quad	.L6559
	.quad	.L6559
	.quad	.L6559
	.quad	.L6546
	.quad	.L6546
	.quad	.L6556
	.quad	.L6556
	.quad	.L6546
	.quad	.L6556
	.quad	.L6556
	.quad	.L6546
	.quad	.L6556
	.quad	.L6556
	.quad	.L6546
	.quad	.L6556
	.quad	.L6556
	.quad	.L6546
	.quad	.L6560
	.quad	.L6560
	.quad	.L6560
	.quad	.L6560
	.quad	.L6560
	.quad	.L6560
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6549
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6561
	.quad	.L6562
	.quad	.L6546
	.quad	.L6561
	.quad	.L6562
	.quad	.L6546
	.quad	.L6563
	.quad	.L6564
	.quad	.L6565
	.quad	.L6566
	.quad	.L6546
	.quad	.L6565
	.quad	.L6565
	.quad	.L6567
	.quad	.L6568
	.quad	.L6546
	.quad	.L6567
	.quad	.L6567
	.quad	.L6567
	.quad	.L6567
	.quad	.L6569
	.quad	.L6570
	.quad	.L6569
	.quad	.L6570
	.quad	.L6569
	.quad	.L6570
	.quad	.L6569
	.quad	.L6570
	.quad	.L6569
	.quad	.L6570
	.quad	.L6569
	.quad	.L6570
	.quad	.L6569
	.quad	.L6570
	.quad	.L6571
	.quad	.L6546
	.quad	.L6572
	.quad	.L6571
	.quad	.L6546
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6572
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6546
	.quad	.L6573
	.quad	.L6573
	.quad	.L6573
	.quad	.L6574
	.quad	.L6574
	.text
.L6574:
	.loc 1 32280 0 is_stmt 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5256
	cmpl	$3, %eax	#, ix86_cpu.5256
	jne	.L6575	#,
	.loc 1 32282 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 32288 0
	jmp	.L6577	#
.L6575:
	.loc 1 32286 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32288 0
	jmp	.L6577	#
.L6573:
	.loc 1 32293 0
	movq	-8(%rbp), %rax	# insn, tmp347
	movq	%rax, %rdi	# tmp347,
	call	extract_constrain_insn_cached	#
	.loc 1 32294 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5257
	cmpl	$3, %eax	#, ix86_cpu.5257
	jne	.L6578	#,
	.loc 1 32294 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5258
	testl	%eax, %eax	# which_alternative.5258
	je	.L6579	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5259
	cmpl	$1, %eax	#, which_alternative.5259
	jne	.L6578	#,
.L6579:
	.loc 1 32296 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 32302 0
	jmp	.L6577	#
.L6578:
	.loc 1 32300 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32302 0
	jmp	.L6577	#
.L6572:
	.loc 1 32323 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5260
	cmpl	$2, %eax	#, ix86_cpu.5260
	jne	.L6581	#,
	.loc 1 32325 0
	movl	$7, -12(%rbp)	#, casenum
	.loc 1 32331 0
	jmp	.L6577	#
.L6581:
	.loc 1 32329 0
	movl	$10, -12(%rbp)	#, casenum
	.loc 1 32331 0
	jmp	.L6577	#
.L6571:
	.loc 1 32335 0
	movq	-8(%rbp), %rax	# insn, tmp348
	movq	%rax, %rdi	# tmp348,
	call	extract_constrain_insn_cached	#
	.loc 1 32336 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5261
	cmpl	$2, %eax	#, ix86_cpu.5261
	jne	.L6583	#,
	.loc 1 32336 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5262
	testl	%eax, %eax	# which_alternative.5262
	jne	.L6583	#,
	.loc 1 32338 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L6584	#
.L6583:
	.loc 1 32340 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5263
	cmpl	$3, %eax	#, ix86_cpu.5263
	jne	.L6585	#,
	.loc 1 32340 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5264
	testl	%eax, %eax	# which_alternative.5264
	jne	.L6585	#,
	.loc 1 32342 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6584	#
.L6585:
	.loc 1 32346 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32348 0
	jmp	.L6577	#
.L6584:
	jmp	.L6577	#
.L6570:
	.loc 1 32357 0
	movq	-8(%rbp), %rax	# insn, tmp349
	movq	%rax, %rdi	# tmp349,
	call	extract_insn_cached	#
	.loc 1 32358 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5265
	cmpl	$2, %eax	#, ix86_cpu.5265
	jne	.L6586	#,
	.loc 1 32358 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp350
	movq	%rax, %rdi	# tmp350,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6586	#,
	.loc 1 32360 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6587	#
.L6586:
	.loc 1 32362 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5266
	cmpl	$2, %eax	#, ix86_cpu.5266
	jne	.L6588	#,
	.loc 1 32362 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6588	#,
	.loc 1 32364 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6587	#
.L6588:
	.loc 1 32366 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5267
	cmpl	$2, %eax	#, ix86_cpu.5267
	jne	.L6589	#,
	.loc 1 32366 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp351
	movq	%rax, %rdi	# tmp351,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6589	#,
	.loc 1 32368 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6587	#
.L6589:
	.loc 1 32370 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5268
	cmpl	$3, %eax	#, ix86_cpu.5268
	jne	.L6590	#,
	.loc 1 32370 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp352
	movq	%rax, %rdi	# tmp352,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6590	#,
	.loc 1 32372 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6587	#
.L6590:
	.loc 1 32374 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5269
	cmpl	$3, %eax	#, ix86_cpu.5269
	jne	.L6591	#,
	.loc 1 32374 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6591	#,
	.loc 1 32376 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6587	#
.L6591:
	.loc 1 32378 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5270
	cmpl	$3, %eax	#, ix86_cpu.5270
	jne	.L6592	#,
	.loc 1 32378 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp353
	movq	%rax, %rdi	# tmp353,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6592	#,
	.loc 1 32380 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6587	#
.L6592:
	.loc 1 32384 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32386 0
	jmp	.L6577	#
.L6587:
	jmp	.L6577	#
.L6569:
	.loc 1 32395 0
	movq	-8(%rbp), %rax	# insn, tmp354
	movq	%rax, %rdi	# tmp354,
	call	extract_insn_cached	#
	.loc 1 32396 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5271
	cmpl	$2, %eax	#, ix86_cpu.5271
	jne	.L6593	#,
	.loc 1 32396 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp355
	movq	%rax, %rdi	# tmp355,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6593	#,
	.loc 1 32398 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6594	#
.L6593:
	.loc 1 32400 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5272
	cmpl	$2, %eax	#, ix86_cpu.5272
	jne	.L6595	#,
	.loc 1 32400 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6595	#,
	.loc 1 32402 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6594	#
.L6595:
	.loc 1 32404 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5273
	cmpl	$2, %eax	#, ix86_cpu.5273
	jne	.L6596	#,
	.loc 1 32404 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp356
	movq	%rax, %rdi	# tmp356,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6596	#,
	.loc 1 32406 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6594	#
.L6596:
	.loc 1 32408 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5274
	cmpl	$3, %eax	#, ix86_cpu.5274
	jne	.L6597	#,
	.loc 1 32408 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp357
	movq	%rax, %rdi	# tmp357,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6597	#,
	.loc 1 32410 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6594	#
.L6597:
	.loc 1 32412 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5275
	cmpl	$3, %eax	#, ix86_cpu.5275
	jne	.L6598	#,
	.loc 1 32412 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6598	#,
	.loc 1 32414 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6594	#
.L6598:
	.loc 1 32416 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5276
	cmpl	$3, %eax	#, ix86_cpu.5276
	jne	.L6599	#,
	.loc 1 32416 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp358
	movq	%rax, %rdi	# tmp358,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6599	#,
	.loc 1 32418 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6594	#
.L6599:
	.loc 1 32422 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32424 0
	jmp	.L6577	#
.L6594:
	jmp	.L6577	#
.L6568:
	.loc 1 32427 0
	movq	-8(%rbp), %rax	# insn, tmp359
	movq	%rax, %rdi	# tmp359,
	call	extract_constrain_insn_cached	#
	.loc 1 32428 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5277
	cmpl	$2, %eax	#, ix86_cpu.5277
	jne	.L6600	#,
	.loc 1 32428 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp360
	movq	%rax, %rdi	# tmp360,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6600	#,
	.loc 1 32430 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6601	#
.L6600:
	.loc 1 32432 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5278
	cmpl	$2, %eax	#, ix86_cpu.5278
	jne	.L6602	#,
	.loc 1 32432 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5279
	cmpl	$2, %eax	#, which_alternative.5279
	je	.L6602	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6602	#,
	.loc 1 32434 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6601	#
.L6602:
	.loc 1 32436 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5280
	cmpl	$2, %eax	#, ix86_cpu.5280
	jne	.L6603	#,
	.loc 1 32436 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp361
	movq	%rax, %rdi	# tmp361,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6603	#,
	.loc 1 32438 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6601	#
.L6603:
	.loc 1 32440 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5281
	cmpl	$3, %eax	#, ix86_cpu.5281
	jne	.L6604	#,
	.loc 1 32440 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp362
	movq	%rax, %rdi	# tmp362,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6604	#,
	.loc 1 32442 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6601	#
.L6604:
	.loc 1 32444 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5282
	cmpl	$3, %eax	#, ix86_cpu.5282
	jne	.L6605	#,
	.loc 1 32444 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5283
	cmpl	$2, %eax	#, which_alternative.5283
	je	.L6605	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6605	#,
	.loc 1 32446 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6601	#
.L6605:
	.loc 1 32448 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5284
	cmpl	$3, %eax	#, ix86_cpu.5284
	jne	.L6606	#,
	.loc 1 32448 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp363
	movq	%rax, %rdi	# tmp363,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6606	#,
	.loc 1 32450 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6601	#
.L6606:
	.loc 1 32454 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32456 0
	jmp	.L6577	#
.L6601:
	jmp	.L6577	#
.L6567:
	.loc 1 32463 0
	movq	-8(%rbp), %rax	# insn, tmp364
	movq	%rax, %rdi	# tmp364,
	call	extract_insn_cached	#
	.loc 1 32464 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5285
	cmpl	$2, %eax	#, ix86_cpu.5285
	jne	.L6607	#,
	.loc 1 32464 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp365
	movq	%rax, %rdi	# tmp365,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6607	#,
	.loc 1 32466 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6608	#
.L6607:
	.loc 1 32468 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5286
	cmpl	$2, %eax	#, ix86_cpu.5286
	jne	.L6609	#,
	.loc 1 32468 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6609	#,
	.loc 1 32470 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6608	#
.L6609:
	.loc 1 32472 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5287
	cmpl	$2, %eax	#, ix86_cpu.5287
	jne	.L6610	#,
	.loc 1 32472 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp366
	movq	%rax, %rdi	# tmp366,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6610	#,
	.loc 1 32474 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6608	#
.L6610:
	.loc 1 32476 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5288
	cmpl	$3, %eax	#, ix86_cpu.5288
	jne	.L6611	#,
	.loc 1 32476 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp367
	movq	%rax, %rdi	# tmp367,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6611	#,
	.loc 1 32478 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6608	#
.L6611:
	.loc 1 32480 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5289
	cmpl	$3, %eax	#, ix86_cpu.5289
	jne	.L6612	#,
	.loc 1 32480 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6612	#,
	.loc 1 32482 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6608	#
.L6612:
	.loc 1 32484 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5290
	cmpl	$3, %eax	#, ix86_cpu.5290
	jne	.L6613	#,
	.loc 1 32484 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp368
	movq	%rax, %rdi	# tmp368,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6613	#,
	.loc 1 32486 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6608	#
.L6613:
	.loc 1 32490 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32492 0
	jmp	.L6577	#
.L6608:
	jmp	.L6577	#
.L6566:
	.loc 1 32495 0
	movq	-8(%rbp), %rax	# insn, tmp369
	movq	%rax, %rdi	# tmp369,
	call	extract_constrain_insn_cached	#
	.loc 1 32496 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5291
	cmpl	$2, %eax	#, ix86_cpu.5291
	jne	.L6614	#,
	.loc 1 32496 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp370
	movq	%rax, %rdi	# tmp370,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6614	#,
	.loc 1 32498 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6615	#
.L6614:
	.loc 1 32500 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5292
	cmpl	$2, %eax	#, ix86_cpu.5292
	jne	.L6616	#,
	.loc 1 32500 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5293
	cmpl	$2, %eax	#, which_alternative.5293
	je	.L6616	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6616	#,
	.loc 1 32502 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6615	#
.L6616:
	.loc 1 32504 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5294
	cmpl	$2, %eax	#, ix86_cpu.5294
	jne	.L6617	#,
	.loc 1 32504 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp371
	movq	%rax, %rdi	# tmp371,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6617	#,
	.loc 1 32506 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6615	#
.L6617:
	.loc 1 32508 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5295
	cmpl	$3, %eax	#, ix86_cpu.5295
	jne	.L6618	#,
	.loc 1 32508 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp372
	movq	%rax, %rdi	# tmp372,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6618	#,
	.loc 1 32510 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6615	#
.L6618:
	.loc 1 32512 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5296
	cmpl	$3, %eax	#, ix86_cpu.5296
	jne	.L6619	#,
	.loc 1 32512 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5297
	cmpl	$2, %eax	#, which_alternative.5297
	je	.L6619	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6619	#,
	.loc 1 32514 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6615	#
.L6619:
	.loc 1 32516 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5298
	cmpl	$3, %eax	#, ix86_cpu.5298
	jne	.L6620	#,
	.loc 1 32516 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp373
	movq	%rax, %rdi	# tmp373,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6620	#,
	.loc 1 32518 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6615	#
.L6620:
	.loc 1 32522 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32524 0
	jmp	.L6577	#
.L6615:
	jmp	.L6577	#
.L6565:
	.loc 1 32529 0
	movq	-8(%rbp), %rax	# insn, tmp374
	movq	%rax, %rdi	# tmp374,
	call	extract_insn_cached	#
	.loc 1 32530 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5299
	cmpl	$2, %eax	#, ix86_cpu.5299
	jne	.L6621	#,
	.loc 1 32530 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp375
	movq	%rax, %rdi	# tmp375,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6621	#,
	.loc 1 32532 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6622	#
.L6621:
	.loc 1 32534 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5300
	cmpl	$2, %eax	#, ix86_cpu.5300
	jne	.L6623	#,
	.loc 1 32534 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6623	#,
	.loc 1 32536 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6622	#
.L6623:
	.loc 1 32538 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5301
	cmpl	$2, %eax	#, ix86_cpu.5301
	jne	.L6624	#,
	.loc 1 32538 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp376
	movq	%rax, %rdi	# tmp376,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6624	#,
	.loc 1 32540 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6622	#
.L6624:
	.loc 1 32542 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5302
	cmpl	$3, %eax	#, ix86_cpu.5302
	jne	.L6625	#,
	.loc 1 32542 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp377
	movq	%rax, %rdi	# tmp377,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57521
	jne	.L6625	#,
	.loc 1 32544 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6622	#
.L6625:
	.loc 1 32546 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5303
	cmpl	$3, %eax	#, ix86_cpu.5303
	jne	.L6626	#,
	.loc 1 32546 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6626	#,
	.loc 1 32548 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6622	#
.L6626:
	.loc 1 32550 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5304
	cmpl	$3, %eax	#, ix86_cpu.5304
	jne	.L6627	#,
	.loc 1 32550 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp378
	movq	%rax, %rdi	# tmp378,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57521
	jne	.L6627	#,
	.loc 1 32552 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6622	#
.L6627:
	.loc 1 32556 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32558 0
	jmp	.L6577	#
.L6622:
	jmp	.L6577	#
.L6564:
	.loc 1 32561 0
	movq	-8(%rbp), %rax	# insn, tmp379
	movq	%rax, %rdi	# tmp379,
	call	extract_insn_cached	#
	.loc 1 32562 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5305
	cmpl	$2, %eax	#, ix86_cpu.5305
	jne	.L6628	#,
	.loc 1 32562 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	jne	.L6628	#,
	.loc 1 32564 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6629	#
.L6628:
	.loc 1 32566 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5306
	cmpl	$2, %eax	#, ix86_cpu.5306
	jne	.L6630	#,
	.loc 1 32566 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6630	#,
	.loc 1 32568 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6629	#
.L6630:
	.loc 1 32570 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5307
	cmpl	$3, %eax	#, ix86_cpu.5307
	jne	.L6631	#,
	.loc 1 32570 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	jne	.L6631	#,
	.loc 1 32572 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6629	#
.L6631:
	.loc 1 32574 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5308
	cmpl	$3, %eax	#, ix86_cpu.5308
	jne	.L6632	#,
	.loc 1 32574 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6632	#,
	.loc 1 32576 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6629	#
.L6632:
	.loc 1 32580 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32582 0
	jmp	.L6577	#
.L6629:
	jmp	.L6577	#
.L6563:
	.loc 1 32585 0
	movq	-8(%rbp), %rax	# insn, tmp380
	movq	%rax, %rdi	# tmp380,
	call	extract_insn_cached	#
	.loc 1 32586 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5309
	cmpl	$2, %eax	#, ix86_cpu.5309
	jne	.L6633	#,
	.loc 1 32586 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	jne	.L6633	#,
	.loc 1 32588 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6634	#
.L6633:
	.loc 1 32590 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5310
	cmpl	$2, %eax	#, ix86_cpu.5310
	jne	.L6635	#,
	.loc 1 32590 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6635	#,
	.loc 1 32592 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6634	#
.L6635:
	.loc 1 32594 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5311
	cmpl	$3, %eax	#, ix86_cpu.5311
	jne	.L6636	#,
	.loc 1 32594 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	jne	.L6636	#,
	.loc 1 32596 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6634	#
.L6636:
	.loc 1 32598 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5312
	cmpl	$3, %eax	#, ix86_cpu.5312
	jne	.L6637	#,
	.loc 1 32598 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6637	#,
	.loc 1 32600 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6634	#
.L6637:
	.loc 1 32604 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32606 0
	jmp	.L6577	#
.L6634:
	jmp	.L6577	#
.L6562:
	.loc 1 32610 0
	movq	-8(%rbp), %rax	# insn, tmp381
	movq	%rax, %rdi	# tmp381,
	call	extract_constrain_insn_cached	#
	.loc 1 32611 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5313
	cmpl	$2, %eax	#, ix86_cpu.5313
	jne	.L6638	#,
	.loc 1 32611 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5314
	testl	%eax, %eax	# which_alternative.5314
	jne	.L6638	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	jne	.L6638	#,
	.loc 1 32613 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6639	#
.L6638:
	.loc 1 32615 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5315
	cmpl	$2, %eax	#, ix86_cpu.5315
	jne	.L6640	#,
	.loc 1 32615 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5316
	testl	%eax, %eax	# which_alternative.5316
	jne	.L6640	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6640	#,
	.loc 1 32617 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6639	#
.L6640:
	.loc 1 32619 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5317
	cmpl	$3, %eax	#, ix86_cpu.5317
	jne	.L6641	#,
	.loc 1 32619 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5318
	testl	%eax, %eax	# which_alternative.5318
	jne	.L6641	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	jne	.L6641	#,
	.loc 1 32621 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6639	#
.L6641:
	.loc 1 32623 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5319
	cmpl	$3, %eax	#, ix86_cpu.5319
	jne	.L6642	#,
	.loc 1 32623 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5320
	testl	%eax, %eax	# which_alternative.5320
	jne	.L6642	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6642	#,
	.loc 1 32625 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6639	#
.L6642:
	.loc 1 32629 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32631 0
	jmp	.L6577	#
.L6639:
	jmp	.L6577	#
.L6561:
	.loc 1 32635 0
	movq	-8(%rbp), %rax	# insn, tmp382
	movq	%rax, %rdi	# tmp382,
	call	extract_insn_cached	#
	.loc 1 32636 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5321
	cmpl	$2, %eax	#, ix86_cpu.5321
	jne	.L6643	#,
	.loc 1 32636 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	jne	.L6643	#,
	.loc 1 32638 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L6644	#
.L6643:
	.loc 1 32640 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5322
	cmpl	$2, %eax	#, ix86_cpu.5322
	jne	.L6645	#,
	.loc 1 32640 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6645	#,
	.loc 1 32642 0 is_stmt 1
	movl	$5, -12(%rbp)	#, casenum
	jmp	.L6644	#
.L6645:
	.loc 1 32644 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5323
	cmpl	$3, %eax	#, ix86_cpu.5323
	jne	.L6646	#,
	.loc 1 32644 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	jne	.L6646	#,
	.loc 1 32646 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6644	#
.L6646:
	.loc 1 32648 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5324
	cmpl	$3, %eax	#, ix86_cpu.5324
	jne	.L6647	#,
	.loc 1 32648 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57522
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	mult_operator	#
	testl	%eax, %eax	# D.57520
	je	.L6647	#,
	.loc 1 32650 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6644	#
.L6647:
	.loc 1 32654 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32656 0
	jmp	.L6577	#
.L6644:
	jmp	.L6577	#
.L6560:
	.loc 1 32664 0
	movq	-8(%rbp), %rax	# insn, tmp383
	movq	%rax, %rdi	# tmp383,
	call	extract_constrain_insn_cached	#
	.loc 1 32665 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5325
	cmpl	$2, %eax	#, ix86_cpu.5325
	jne	.L6648	#,
	.loc 1 32665 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5326
	testl	%eax, %eax	# which_alternative.5326
	jne	.L6648	#,
	movq	-8(%rbp), %rax	# insn, tmp384
	movq	%rax, %rdi	# tmp384,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	je	.L6649	#,
	movq	-8(%rbp), %rax	# insn, tmp385
	movq	%rax, %rdi	# tmp385,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6648	#,
.L6649:
	.loc 1 32667 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6650	#
.L6648:
	.loc 1 32669 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5327
	cmpl	$2, %eax	#, ix86_cpu.5327
	jne	.L6651	#,
	.loc 1 32669 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5328
	testl	%eax, %eax	# which_alternative.5328
	jne	.L6651	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57522
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57520
	jne	.L6652	#,
	movq	-8(%rbp), %rax	# insn, tmp386
	movq	%rax, %rdi	# tmp386,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6651	#,
.L6652:
	.loc 1 32671 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6650	#
.L6651:
	.loc 1 32673 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5329
	cmpl	$2, %eax	#, ix86_cpu.5329
	jne	.L6653	#,
	.loc 1 32673 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5330
	testl	%eax, %eax	# which_alternative.5330
	jne	.L6653	#,
	movq	-8(%rbp), %rax	# insn, tmp387
	movq	%rax, %rdi	# tmp387,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57523
	je	.L6654	#,
	movq	-8(%rbp), %rax	# insn, tmp388
	movq	%rax, %rdi	# tmp388,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	jne	.L6653	#,
.L6654:
	.loc 1 32675 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6650	#
.L6653:
	.loc 1 32677 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5331
	cmpl	$3, %eax	#, ix86_cpu.5331
	jne	.L6655	#,
	.loc 1 32677 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5332
	testl	%eax, %eax	# which_alternative.5332
	jne	.L6655	#,
	.loc 1 32679 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6650	#
.L6655:
	.loc 1 32683 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32685 0
	jmp	.L6577	#
.L6650:
	jmp	.L6577	#
.L6559:
	.loc 1 32696 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5333
	cmpl	$2, %eax	#, ix86_cpu.5333
	jne	.L6656	#,
	.loc 1 32698 0
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 32704 0
	jmp	.L6577	#
.L6656:
	.loc 1 32702 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 32704 0
	jmp	.L6577	#
.L6558:
	.loc 1 32711 0
	movq	-8(%rbp), %rax	# insn, tmp389
	movq	%rax, %rdi	# tmp389,
	call	extract_insn_cached	#
	.loc 1 32712 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5334
	cmpl	$2, %eax	#, ix86_cpu.5334
	jne	.L6658	#,
	.loc 1 32712 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57522
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57520
	jne	.L6659	#,
	movq	-8(%rbp), %rax	# insn, tmp390
	movq	%rax, %rdi	# tmp390,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6658	#,
.L6659:
	.loc 1 32714 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6660	#
.L6658:
	.loc 1 32716 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5335
	cmpl	$2, %eax	#, ix86_cpu.5335
	jne	.L6661	#,
	.loc 1 32716 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp391
	movq	%rax, %rdi	# tmp391,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57523
	je	.L6662	#,
	movq	-8(%rbp), %rax	# insn, tmp392
	movq	%rax, %rdi	# tmp392,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	jne	.L6661	#,
.L6662:
	.loc 1 32718 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6660	#
.L6661:
	.loc 1 32720 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5336
	cmpl	$3, %eax	#, ix86_cpu.5336
	jne	.L6663	#,
	.loc 1 32722 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6660	#
.L6663:
	.loc 1 32726 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32728 0
	jmp	.L6577	#
.L6660:
	jmp	.L6577	#
.L6557:
	.loc 1 32731 0
	movq	-8(%rbp), %rax	# insn, tmp393
	movq	%rax, %rdi	# tmp393,
	call	extract_constrain_insn_cached	#
	.loc 1 32732 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5337
	cmpl	$2, %eax	#, ix86_cpu.5337
	jne	.L6664	#,
	.loc 1 32732 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5338
	cmpl	$1, %eax	#, which_alternative.5338
	jne	.L6664	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57522
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57520
	jne	.L6665	#,
	movq	-8(%rbp), %rax	# insn, tmp394
	movq	%rax, %rdi	# tmp394,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6664	#,
.L6665:
	.loc 1 32734 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6666	#
.L6664:
	.loc 1 32736 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5339
	cmpl	$2, %eax	#, ix86_cpu.5339
	jne	.L6667	#,
	.loc 1 32736 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5340
	cmpl	$1, %eax	#, which_alternative.5340
	jne	.L6667	#,
	movq	-8(%rbp), %rax	# insn, tmp395
	movq	%rax, %rdi	# tmp395,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57523
	je	.L6668	#,
	movq	-8(%rbp), %rax	# insn, tmp396
	movq	%rax, %rdi	# tmp396,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	jne	.L6667	#,
.L6668:
	.loc 1 32738 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6666	#
.L6667:
	.loc 1 32740 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5341
	cmpl	$1, %eax	#, which_alternative.5341
	jne	.L6669	#,
	.loc 1 32740 0 is_stmt 0 discriminator 1
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5342
	cmpl	$3, %eax	#, ix86_cpu.5342
	jne	.L6669	#,
	.loc 1 32742 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6666	#
.L6669:
	.loc 1 32746 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32748 0
	jmp	.L6577	#
.L6666:
	jmp	.L6577	#
.L6556:
	.loc 1 32764 0
	movq	-8(%rbp), %rax	# insn, tmp397
	movq	%rax, %rdi	# tmp397,
	call	extract_constrain_insn_cached	#
	.loc 1 32765 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5343
	cmpl	$2, %eax	#, ix86_cpu.5343
	jne	.L6670	#,
	.loc 1 32765 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5344
	testl	%eax, %eax	# which_alternative.5344
	jne	.L6670	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57522
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57520
	jne	.L6671	#,
	movq	-8(%rbp), %rax	# insn, tmp398
	movq	%rax, %rdi	# tmp398,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6670	#,
.L6671:
	.loc 1 32767 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6672	#
.L6670:
	.loc 1 32769 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5345
	cmpl	$2, %eax	#, ix86_cpu.5345
	jne	.L6673	#,
	.loc 1 32769 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5346
	testl	%eax, %eax	# which_alternative.5346
	jne	.L6673	#,
	movq	-8(%rbp), %rax	# insn, tmp399
	movq	%rax, %rdi	# tmp399,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57523
	je	.L6674	#,
	movq	-8(%rbp), %rax	# insn, tmp400
	movq	%rax, %rdi	# tmp400,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	jne	.L6673	#,
.L6674:
	.loc 1 32771 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6672	#
.L6673:
	.loc 1 32773 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5347
	cmpl	$3, %eax	#, ix86_cpu.5347
	jne	.L6675	#,
	.loc 1 32773 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5348
	testl	%eax, %eax	# which_alternative.5348
	jne	.L6675	#,
	.loc 1 32775 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6672	#
.L6675:
	.loc 1 32779 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32781 0
	jmp	.L6577	#
.L6672:
	jmp	.L6577	#
.L6555:
	.loc 1 32787 0
	movq	-8(%rbp), %rax	# insn, tmp401
	movq	%rax, %rdi	# tmp401,
	call	extract_constrain_insn_cached	#
	.loc 1 32788 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5349
	cmpl	$2, %eax	#, ix86_cpu.5349
	jne	.L6676	#,
	.loc 1 32788 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5350
	cmpl	$1, %eax	#, which_alternative.5350
	jne	.L6676	#,
	movq	-8(%rbp), %rax	# insn, tmp402
	movq	%rax, %rdi	# tmp402,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	je	.L6677	#,
	movq	-8(%rbp), %rax	# insn, tmp403
	movq	%rax, %rdi	# tmp403,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6676	#,
.L6677:
	.loc 1 32790 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6678	#
.L6676:
	.loc 1 32792 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5351
	cmpl	$2, %eax	#, ix86_cpu.5351
	jne	.L6679	#,
	.loc 1 32792 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57522
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57520
	jne	.L6680	#,
	movq	-8(%rbp), %rax	# insn, tmp404
	movq	%rax, %rdi	# tmp404,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6679	#,
.L6680:
	.loc 1 32794 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6678	#
.L6679:
	.loc 1 32796 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5352
	cmpl	$2, %eax	#, ix86_cpu.5352
	jne	.L6681	#,
	.loc 1 32796 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp405
	movq	%rax, %rdi	# tmp405,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57523
	je	.L6682	#,
	movq	-8(%rbp), %rax	# insn, tmp406
	movq	%rax, %rdi	# tmp406,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	jne	.L6681	#,
.L6682:
	.loc 1 32798 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6678	#
.L6681:
	.loc 1 32800 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5353
	cmpl	$3, %eax	#, ix86_cpu.5353
	jne	.L6683	#,
	.loc 1 32802 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6678	#
.L6683:
	.loc 1 32806 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32808 0
	jmp	.L6577	#
.L6678:
	jmp	.L6577	#
.L6554:
	.loc 1 32811 0
	movq	-8(%rbp), %rax	# insn, tmp407
	movq	%rax, %rdi	# tmp407,
	call	extract_constrain_insn_cached	#
	.loc 1 32812 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5354
	cmpl	$2, %eax	#, ix86_cpu.5354
	jne	.L6684	#,
	.loc 1 32812 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5355
	testl	%eax, %eax	# which_alternative.5355
	je	.L6685	#,
	.loc 1 32812 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5356
	cmpl	$1, %eax	#, which_alternative.5356
	jne	.L6684	#,
.L6685:
	.loc 1 32812 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp408
	movq	%rax, %rdi	# tmp408,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	je	.L6686	#,
	.loc 1 32812 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp409
	movq	%rax, %rdi	# tmp409,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6684	#,
.L6686:
	.loc 1 32812 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5357
	cmpl	$1, %eax	#, which_alternative.5357
	jne	.L6684	#,
	.loc 1 32814 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6687	#
.L6684:
	.loc 1 32816 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5358
	cmpl	$2, %eax	#, ix86_cpu.5358
	jne	.L6688	#,
	.loc 1 32816 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5359
	testl	%eax, %eax	# which_alternative.5359
	je	.L6689	#,
	.loc 1 32816 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5360
	cmpl	$1, %eax	#, which_alternative.5360
	jne	.L6688	#,
.L6689:
	.loc 1 32816 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57522
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57520
	jne	.L6690	#,
	movq	-8(%rbp), %rax	# insn, tmp410
	movq	%rax, %rdi	# tmp410,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6688	#,
.L6690:
	.loc 1 32818 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6687	#
.L6688:
	.loc 1 32820 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5361
	cmpl	$2, %eax	#, ix86_cpu.5361
	jne	.L6691	#,
	.loc 1 32820 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5362
	testl	%eax, %eax	# which_alternative.5362
	je	.L6692	#,
	.loc 1 32820 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5363
	cmpl	$1, %eax	#, which_alternative.5363
	jne	.L6691	#,
.L6692:
	.loc 1 32820 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp411
	movq	%rax, %rdi	# tmp411,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57523
	je	.L6693	#,
	movq	-8(%rbp), %rax	# insn, tmp412
	movq	%rax, %rdi	# tmp412,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	jne	.L6691	#,
.L6693:
	.loc 1 32822 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6687	#
.L6691:
	.loc 1 32824 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5364
	cmpl	$3, %eax	#, ix86_cpu.5364
	jne	.L6694	#,
	.loc 1 32824 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5365
	testl	%eax, %eax	# which_alternative.5365
	je	.L6695	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5366
	cmpl	$1, %eax	#, which_alternative.5366
	jne	.L6694	#,
.L6695:
	.loc 1 32826 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6687	#
.L6694:
	.loc 1 32830 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32832 0
	jmp	.L6577	#
.L6687:
	jmp	.L6577	#
.L6553:
	.loc 1 32838 0
	movq	-8(%rbp), %rax	# insn, tmp413
	movq	%rax, %rdi	# tmp413,
	call	extract_constrain_insn_cached	#
	.loc 1 32839 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5367
	cmpl	$2, %eax	#, ix86_cpu.5367
	jne	.L6696	#,
	.loc 1 32839 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5368
	testl	%eax, %eax	# which_alternative.5368
	je	.L6697	#,
	.loc 1 32839 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5369
	cmpl	$1, %eax	#, which_alternative.5369
	je	.L6697	#,
	.loc 1 32839 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5370
	cmpl	$2, %eax	#, which_alternative.5370
	jne	.L6696	#,
.L6697:
	movq	-8(%rbp), %rax	# insn, tmp414
	movq	%rax, %rdi	# tmp414,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	je	.L6698	#,
	movq	-8(%rbp), %rax	# insn, tmp415
	movq	%rax, %rdi	# tmp415,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6696	#,
.L6698:
	.loc 1 32841 0 is_stmt 1
	movl	$0, -12(%rbp)	#, casenum
	jmp	.L6699	#
.L6696:
	.loc 1 32843 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5371
	cmpl	$2, %eax	#, ix86_cpu.5371
	jne	.L6700	#,
	.loc 1 32843 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5372
	testl	%eax, %eax	# which_alternative.5372
	je	.L6701	#,
	.loc 1 32843 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5373
	cmpl	$1, %eax	#, which_alternative.5373
	je	.L6701	#,
	.loc 1 32843 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5374
	cmpl	$2, %eax	#, which_alternative.5374
	jne	.L6700	#,
.L6701:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57522
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57520
	jne	.L6702	#,
	movq	-8(%rbp), %rax	# insn, tmp416
	movq	%rax, %rdi	# tmp416,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6700	#,
.L6702:
	.loc 1 32845 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6699	#
.L6700:
	.loc 1 32847 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5375
	cmpl	$2, %eax	#, ix86_cpu.5375
	jne	.L6703	#,
	.loc 1 32847 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5376
	testl	%eax, %eax	# which_alternative.5376
	je	.L6704	#,
	.loc 1 32847 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5377
	cmpl	$1, %eax	#, which_alternative.5377
	je	.L6704	#,
	.loc 1 32847 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5378
	cmpl	$2, %eax	#, which_alternative.5378
	jne	.L6703	#,
.L6704:
	movq	-8(%rbp), %rax	# insn, tmp417
	movq	%rax, %rdi	# tmp417,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57523
	je	.L6705	#,
	movq	-8(%rbp), %rax	# insn, tmp418
	movq	%rax, %rdi	# tmp418,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	jne	.L6703	#,
.L6705:
	.loc 1 32849 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6699	#
.L6703:
	.loc 1 32851 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5379
	cmpl	$3, %eax	#, ix86_cpu.5379
	jne	.L6706	#,
	.loc 1 32851 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5380
	testl	%eax, %eax	# which_alternative.5380
	je	.L6707	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5381
	cmpl	$1, %eax	#, which_alternative.5381
	je	.L6707	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5382
	cmpl	$2, %eax	#, which_alternative.5382
	jne	.L6706	#,
.L6707:
	.loc 1 32853 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6699	#
.L6706:
	.loc 1 32857 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32859 0
	jmp	.L6577	#
.L6699:
	jmp	.L6577	#
.L6552:
	.loc 1 32865 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5383
	cmpl	$2, %eax	#, ix86_cpu.5383
	jne	.L6708	#,
	.loc 1 32867 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 32873 0
	jmp	.L6577	#
.L6708:
	.loc 1 32871 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32873 0
	jmp	.L6577	#
.L6551:
	.loc 1 32878 0
	movq	-8(%rbp), %rax	# insn, tmp419
	movq	%rax, %rdi	# tmp419,
	call	extract_constrain_insn_cached	#
	.loc 1 32879 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5384
	cmpl	$2, %eax	#, ix86_cpu.5384
	jne	.L6710	#,
	.loc 1 32879 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5385
	testl	%eax, %eax	# which_alternative.5385
	je	.L6711	#,
	.loc 1 32879 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5386
	cmpl	$1, %eax	#, which_alternative.5386
	je	.L6711	#,
	.loc 1 32879 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5387
	cmpl	$2, %eax	#, which_alternative.5387
	jne	.L6710	#,
.L6711:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57522
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57522,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57520
	jne	.L6712	#,
	movq	-8(%rbp), %rax	# insn, tmp420
	movq	%rax, %rdi	# tmp420,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57523
	jne	.L6710	#,
.L6712:
	.loc 1 32881 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6713	#
.L6710:
	.loc 1 32883 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5388
	cmpl	$2, %eax	#, ix86_cpu.5388
	jne	.L6714	#,
	.loc 1 32883 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5389
	testl	%eax, %eax	# which_alternative.5389
	je	.L6715	#,
	.loc 1 32883 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5390
	cmpl	$1, %eax	#, which_alternative.5390
	je	.L6715	#,
	.loc 1 32883 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5391
	cmpl	$2, %eax	#, which_alternative.5391
	jne	.L6714	#,
.L6715:
	movq	-8(%rbp), %rax	# insn, tmp421
	movq	%rax, %rdi	# tmp421,
	call	get_attr_memory	#
	testl	%eax, %eax	# D.57523
	je	.L6716	#,
	movq	-8(%rbp), %rax	# insn, tmp422
	movq	%rax, %rdi	# tmp422,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57523
	jne	.L6714	#,
.L6716:
	.loc 1 32885 0 is_stmt 1
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6713	#
.L6714:
	.loc 1 32887 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5392
	cmpl	$3, %eax	#, ix86_cpu.5392
	jne	.L6717	#,
	.loc 1 32887 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5393
	testl	%eax, %eax	# which_alternative.5393
	je	.L6718	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5394
	cmpl	$1, %eax	#, which_alternative.5394
	je	.L6718	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5395
	cmpl	$2, %eax	#, which_alternative.5395
	jne	.L6717	#,
.L6718:
	.loc 1 32889 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6713	#
.L6717:
	.loc 1 32893 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32895 0
	jmp	.L6577	#
.L6713:
	jmp	.L6577	#
.L6550:
	.loc 1 32899 0
	movq	-8(%rbp), %rax	# insn, tmp423
	movq	%rax, %rdi	# tmp423,
	call	extract_constrain_insn_cached	#
	.loc 1 32900 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5396
	cmpl	$2, %eax	#, ix86_cpu.5396
	jne	.L6719	#,
	.loc 1 32900 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5397
	testl	%eax, %eax	# which_alternative.5397
	jne	.L6719	#,
	.loc 1 32902 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L6720	#
.L6719:
	.loc 1 32904 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5398
	cmpl	$3, %eax	#, ix86_cpu.5398
	jne	.L6721	#,
	.loc 1 32904 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5399
	testl	%eax, %eax	# which_alternative.5399
	jne	.L6721	#,
	.loc 1 32906 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6720	#
.L6721:
	.loc 1 32910 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32912 0
	jmp	.L6577	#
.L6720:
	jmp	.L6577	#
.L6549:
	.loc 1 32940 0
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5400
	cmpl	$2, %eax	#, ix86_cpu.5400
	jne	.L6722	#,
	.loc 1 32942 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 32948 0
	jmp	.L6577	#
.L6722:
	.loc 1 32946 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 32948 0
	jmp	.L6577	#
.L6547:
	.loc 1 32951 0
	movq	-8(%rbp), %rax	# insn, tmp424
	movq	32(%rax), %rax	# insn_31->fld[3].rtx, D.57522
	movzwl	(%rax), %eax	# _424->code, D.57524
	cmpw	$40, %ax	#, D.57524
	je	.L6546	#,
	.loc 1 32952 0
	movq	-8(%rbp), %rax	# insn, tmp425
	movq	32(%rax), %rax	# insn_31->fld[3].rtx, D.57522
	movq	%rax, %rdi	# D.57522,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57520
	jns	.L6546	#,
	.loc 1 32953 0
	movq	-8(%rbp), %rax	# insn, tmp426
	movl	$__FUNCTION__.24941, %ecx	#,
	movl	$32953, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp426,
	call	_fatal_insn_not_found	#
.L6546:
	.loc 1 32955 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 32956 0
	nop
.L6577:
	.loc 1 32960 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp427
	movq	%rax, -8(%rbp)	# tmp427, insn
	.loc 1 32961 0
	cmpl	$11, -12(%rbp)	#, casenum
	ja	.L6724	#,
	movl	-12(%rbp), %eax	# casenum, tmp428
	movq	.L6726(,%rax,8), %rax	#, tmp429
	jmp	*%rax	# tmp429
	.section	.rodata
	.align 8
	.align 4
.L6726:
	.quad	.L6725
	.quad	.L6727
	.quad	.L6728
	.quad	.L6729
	.quad	.L6730
	.quad	.L6731
	.quad	.L6732
	.quad	.L6733
	.quad	.L6734
	.quad	.L6735
	.quad	.L6736
	.quad	.L6737
	.text
.L6725:
	.loc 1 32964 0
	movl	$3, %eax	#, D.57520
	jmp	.L6738	#
.L6727:
	.loc 1 32967 0
	movl	$2, %eax	#, D.57520
	jmp	.L6738	#
.L6728:
	.loc 1 32970 0
	movl	$1, %eax	#, D.57520
	jmp	.L6738	#
.L6729:
	.loc 1 32973 0
	movl	$1, %eax	#, D.57520
	jmp	.L6738	#
.L6730:
	.loc 1 32976 0
	movl	$1, %eax	#, D.57520
	jmp	.L6738	#
.L6731:
	.loc 1 32979 0
	movl	$1, %eax	#, D.57520
	jmp	.L6738	#
.L6732:
	.loc 1 32982 0
	movl	$37, %eax	#, D.57520
	jmp	.L6738	#
.L6733:
	.loc 1 32985 0
	movl	$68, %eax	#, D.57520
	jmp	.L6738	#
.L6734:
	.loc 1 32988 0
	movl	$1, %eax	#, D.57520
	jmp	.L6738	#
.L6735:
	.loc 1 32991 0
	movl	$2, %eax	#, D.57520
	jmp	.L6738	#
.L6736:
	.loc 1 32994 0
	movl	$56, %eax	#, D.57520
	jmp	.L6738	#
.L6737:
	.loc 1 32997 0
	movl	$1, %eax	#, D.57520
	jmp	.L6738	#
.L6724:
	.loc 1 33000 0
	movl	$__FUNCTION__.24941, %edx	#,
	movl	$33000, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L6738:
	.loc 1 33002 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE86:
	.size	fpu_unit_conflict_cost, .-fpu_unit_conflict_cost
	.type	pent_mul_unit_blockage, @function
pent_mul_unit_blockage:
.LFB87:
	.loc 1 33009 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 33013 0
	movq	-24(%rbp), %rax	# executing_insn, tmp92
	movq	%rax, -8(%rbp)	# tmp92, insn
	.loc 1 33014 0
	movq	-8(%rbp), %rax	# insn, tmp93
	movl	40(%rax), %eax	# insn_15->fld[4].rtint, D.57525
	testl	%eax, %eax	# D.57525
	js	.L6740	#,
	.loc 1 33014 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp94
	movl	40(%rax), %eax	# insn_15->fld[4].rtint, iftmp.5401
	jmp	.L6741	#
.L6740:
	.loc 1 33014 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp95
	movq	%rax, %rdi	# tmp95,
	call	recog_memoized_1	#
.L6741:
	.loc 1 33014 0 discriminator 3
	cmpl	$544, %eax	#, iftmp.5401
	jg	.L6743	#,
	cmpl	$541, %eax	#, iftmp.5401
	jge	.L6744	#,
	cmpl	$531, %eax	#, iftmp.5401
	je	.L6745	#,
	cmpl	$531, %eax	#, iftmp.5401
	jg	.L6746	#,
	cmpl	$525, %eax	#, iftmp.5401
	je	.L6747	#,
	cmpl	$525, %eax	#, iftmp.5401
	jg	.L6748	#,
	cmpl	$-1, %eax	#, iftmp.5401
	je	.L6749	#,
	cmpl	$-1, %eax	#, iftmp.5401
	jl	.L6742	#,
	subl	$249, %eax	#, tmp96
	cmpl	$16, %eax	#, tmp96
	ja	.L6742	#,
	.loc 1 33014 0
	jmp	.L6792	#
.L6748:
	.loc 1 33014 0 discriminator 3
	cmpl	$528, %eax	#, iftmp.5401
	je	.L6747	#,
	cmpl	$529, %eax	#, iftmp.5401
	je	.L6751	#,
	cmpl	$526, %eax	#, iftmp.5401
	je	.L6751	#,
	.loc 1 33014 0
	jmp	.L6742	#
.L6746:
	.loc 1 33014 0 discriminator 3
	cmpl	$537, %eax	#, iftmp.5401
	jg	.L6752	#,
	cmpl	$536, %eax	#, iftmp.5401
	jge	.L6753	#,
	cmpl	$533, %eax	#, iftmp.5401
	je	.L6753	#,
	cmpl	$533, %eax	#, iftmp.5401
	jl	.L6754	#,
	cmpl	$534, %eax	#, iftmp.5401
	je	.L6755	#,
	.loc 1 33014 0
	jmp	.L6742	#
.L6752:
	.loc 1 33014 0 discriminator 3
	cmpl	$538, %eax	#, iftmp.5401
	je	.L6744	#,
	cmpl	$539, %eax	#, iftmp.5401
	je	.L6756	#,
	.loc 1 33014 0
	jmp	.L6742	#
.L6743:
	.loc 1 33014 0 discriminator 3
	cmpl	$551, %eax	#, iftmp.5401
	je	.L6757	#,
	cmpl	$551, %eax	#, iftmp.5401
	jg	.L6758	#,
	cmpl	$547, %eax	#, iftmp.5401
	je	.L6757	#,
	cmpl	$547, %eax	#, iftmp.5401
	jg	.L6759	#,
	cmpl	$545, %eax	#, iftmp.5401
	je	.L6757	#,
	cmpl	$546, %eax	#, iftmp.5401
	je	.L6760	#,
	.loc 1 33014 0
	jmp	.L6742	#
.L6759:
	.loc 1 33014 0 discriminator 3
	cmpl	$549, %eax	#, iftmp.5401
	je	.L6757	#,
	cmpl	$549, %eax	#, iftmp.5401
	jmp	.L6760	#
.L6758:
	cmpl	$555, %eax	#, iftmp.5401
	je	.L6757	#,
	cmpl	$555, %eax	#, iftmp.5401
	jg	.L6761	#,
	cmpl	$553, %eax	#, iftmp.5401
	je	.L6757	#,
	cmpl	$553, %eax	#, iftmp.5401
	jmp	.L6760	#
.L6761:
	cmpl	$557, %eax	#, iftmp.5401
	je	.L6757	#,
	cmpl	$557, %eax	#, iftmp.5401
	jl	.L6760	#,
	cmpl	$558, %eax	#, iftmp.5401
	jne	.L6742	#,
.L6760:
	.loc 1 33023 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp97
	movq	%rax, %rdi	# tmp97,
	call	extract_insn_cached	#
	.loc 1 33024 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57526
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57526,
	call	mult_operator	#
	testl	%eax, %eax	# D.57525
	je	.L6762	#,
	.loc 1 33026 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33032 0
	jmp	.L6764	#
.L6762:
	.loc 1 33030 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 33032 0
	jmp	.L6764	#
.L6757:
	.loc 1 33041 0
	movq	-8(%rbp), %rax	# insn, tmp98
	movq	%rax, %rdi	# tmp98,
	call	extract_insn_cached	#
	.loc 1 33042 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57526
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57526,
	call	mult_operator	#
	testl	%eax, %eax	# D.57525
	je	.L6765	#,
	.loc 1 33044 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33050 0
	jmp	.L6764	#
.L6765:
	.loc 1 33048 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 33050 0
	jmp	.L6764	#
.L6756:
	.loc 1 33053 0
	movq	-8(%rbp), %rax	# insn, tmp99
	movq	%rax, %rdi	# tmp99,
	call	extract_constrain_insn_cached	#
	.loc 1 33054 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5402
	cmpl	$2, %eax	#, which_alternative.5402
	je	.L6767	#,
	.loc 1 33054 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57526
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57526,
	call	mult_operator	#
	testl	%eax, %eax	# D.57525
	je	.L6767	#,
	.loc 1 33056 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6768	#
.L6767:
	.loc 1 33058 0
	movq	-8(%rbp), %rax	# insn, tmp100
	movq	%rax, %rdi	# tmp100,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57527
	jne	.L6769	#,
	.loc 1 33060 0
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6768	#
.L6769:
	.loc 1 33064 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33066 0
	jmp	.L6764	#
.L6768:
	jmp	.L6764	#
.L6744:
	.loc 1 33073 0
	movq	-8(%rbp), %rax	# insn, tmp101
	movq	%rax, %rdi	# tmp101,
	call	extract_insn_cached	#
	.loc 1 33074 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57526
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57526,
	call	mult_operator	#
	testl	%eax, %eax	# D.57525
	je	.L6770	#,
	.loc 1 33076 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33082 0
	jmp	.L6764	#
.L6770:
	.loc 1 33080 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 33082 0
	jmp	.L6764	#
.L6755:
	.loc 1 33085 0
	movq	-8(%rbp), %rax	# insn, tmp102
	movq	%rax, %rdi	# tmp102,
	call	extract_constrain_insn_cached	#
	.loc 1 33086 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5403
	cmpl	$2, %eax	#, which_alternative.5403
	je	.L6772	#,
	.loc 1 33086 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57526
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57526,
	call	mult_operator	#
	testl	%eax, %eax	# D.57525
	je	.L6772	#,
	.loc 1 33088 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6773	#
.L6772:
	.loc 1 33090 0
	movq	-8(%rbp), %rax	# insn, tmp103
	movq	%rax, %rdi	# tmp103,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57527
	jne	.L6774	#,
	.loc 1 33092 0
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6773	#
.L6774:
	.loc 1 33096 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33098 0
	jmp	.L6764	#
.L6773:
	jmp	.L6764	#
.L6753:
	.loc 1 33103 0
	movq	-8(%rbp), %rax	# insn, tmp104
	movq	%rax, %rdi	# tmp104,
	call	extract_insn_cached	#
	.loc 1 33104 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57526
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57526,
	call	mult_operator	#
	testl	%eax, %eax	# D.57525
	je	.L6775	#,
	.loc 1 33106 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33112 0
	jmp	.L6764	#
.L6775:
	.loc 1 33110 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 33112 0
	jmp	.L6764	#
.L6754:
	.loc 1 33115 0
	movq	-8(%rbp), %rax	# insn, tmp105
	movq	%rax, %rdi	# tmp105,
	call	extract_insn_cached	#
	.loc 1 33116 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57526
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57526,
	call	mult_operator	#
	testl	%eax, %eax	# D.57525
	je	.L6777	#,
	.loc 1 33118 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33124 0
	jmp	.L6764	#
.L6777:
	.loc 1 33122 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33124 0
	jmp	.L6764	#
.L6745:
	.loc 1 33127 0
	movq	-8(%rbp), %rax	# insn, tmp106
	movq	%rax, %rdi	# tmp106,
	call	extract_insn_cached	#
	.loc 1 33128 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57526
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57526,
	call	mult_operator	#
	testl	%eax, %eax	# D.57525
	je	.L6779	#,
	.loc 1 33130 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33136 0
	jmp	.L6764	#
.L6779:
	.loc 1 33134 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33136 0
	jmp	.L6764	#
.L6751:
	.loc 1 33140 0
	movq	-8(%rbp), %rax	# insn, tmp107
	movq	%rax, %rdi	# tmp107,
	call	extract_constrain_insn_cached	#
	.loc 1 33141 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5404
	testl	%eax, %eax	# which_alternative.5404
	jne	.L6781	#,
	.loc 1 33141 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57526
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57526,
	call	mult_operator	#
	testl	%eax, %eax	# D.57525
	je	.L6781	#,
	.loc 1 33143 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33149 0
	jmp	.L6764	#
.L6781:
	.loc 1 33147 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33149 0
	jmp	.L6764	#
.L6747:
	.loc 1 33153 0
	movq	-8(%rbp), %rax	# insn, tmp108
	movq	%rax, %rdi	# tmp108,
	call	extract_insn_cached	#
	.loc 1 33154 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57526
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57526,
	call	mult_operator	#
	testl	%eax, %eax	# D.57525
	je	.L6783	#,
	.loc 1 33156 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33162 0
	jmp	.L6764	#
.L6783:
	.loc 1 33160 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33162 0
	jmp	.L6764	#
.L6792:
	.loc 1 33181 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 33182 0
	jmp	.L6764	#
.L6749:
	.loc 1 33185 0
	movq	-8(%rbp), %rax	# insn, tmp109
	movq	32(%rax), %rax	# insn_15->fld[3].rtx, D.57526
	movzwl	(%rax), %eax	# _67->code, D.57528
	cmpw	$40, %ax	#, D.57528
	je	.L6742	#,
	.loc 1 33186 0
	movq	-8(%rbp), %rax	# insn, tmp110
	movq	32(%rax), %rax	# insn_15->fld[3].rtx, D.57526
	movq	%rax, %rdi	# D.57526,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57525
	jns	.L6742	#,
	.loc 1 33187 0
	movq	-8(%rbp), %rax	# insn, tmp111
	movl	$__FUNCTION__.25014, %ecx	#,
	movl	$33187, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp111,
	call	_fatal_insn_not_found	#
.L6742:
	.loc 1 33189 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33190 0
	nop
.L6764:
	.loc 1 33194 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp112
	movq	%rax, -8(%rbp)	# tmp112, insn
	.loc 1 33195 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L6786	#,
	cmpl	$1, %eax	#, casenum
	jg	.L6787	#,
	testl	%eax, %eax	# casenum
	je	.L6788	#,
	jmp	.L6785	#
.L6787:
	cmpl	$2, %eax	#, casenum
	je	.L6789	#,
	cmpl	$3, %eax	#, casenum
	je	.L6790	#,
	jmp	.L6785	#
.L6788:
	.loc 1 33198 0
	movl	$11, %eax	#, D.57525
	jmp	.L6791	#
.L6786:
	.loc 1 33201 0
	movl	$2, %eax	#, D.57525
	jmp	.L6791	#
.L6789:
	.loc 1 33204 0
	movl	$39, %eax	#, D.57525
	jmp	.L6791	#
.L6790:
	.loc 1 33207 0
	movl	$70, %eax	#, D.57525
	jmp	.L6791	#
.L6785:
	.loc 1 33210 0
	movl	$__FUNCTION__.25014, %edx	#,
	movl	$33210, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L6791:
	.loc 1 33212 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE87:
	.size	pent_mul_unit_blockage, .-pent_mul_unit_blockage
	.type	pent_mul_unit_conflict_cost, @function
pent_mul_unit_conflict_cost:
.LFB88:
	.loc 1 33219 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 33223 0
	movq	-24(%rbp), %rax	# executing_insn, tmp92
	movq	%rax, -8(%rbp)	# tmp92, insn
	.loc 1 33224 0
	movq	-8(%rbp), %rax	# insn, tmp93
	movl	40(%rax), %eax	# insn_15->fld[4].rtint, D.57537
	testl	%eax, %eax	# D.57537
	js	.L6794	#,
	.loc 1 33224 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp94
	movl	40(%rax), %eax	# insn_15->fld[4].rtint, iftmp.5405
	jmp	.L6795	#
.L6794:
	.loc 1 33224 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp95
	movq	%rax, %rdi	# tmp95,
	call	recog_memoized_1	#
.L6795:
	.loc 1 33224 0 discriminator 3
	cmpl	$544, %eax	#, iftmp.5405
	jg	.L6797	#,
	cmpl	$541, %eax	#, iftmp.5405
	jge	.L6798	#,
	cmpl	$531, %eax	#, iftmp.5405
	je	.L6799	#,
	cmpl	$531, %eax	#, iftmp.5405
	jg	.L6800	#,
	cmpl	$525, %eax	#, iftmp.5405
	je	.L6801	#,
	cmpl	$525, %eax	#, iftmp.5405
	jg	.L6802	#,
	cmpl	$-1, %eax	#, iftmp.5405
	je	.L6803	#,
	cmpl	$-1, %eax	#, iftmp.5405
	jl	.L6796	#,
	subl	$249, %eax	#, tmp96
	cmpl	$16, %eax	#, tmp96
	ja	.L6796	#,
	.loc 1 33224 0
	jmp	.L6846	#
.L6802:
	.loc 1 33224 0 discriminator 3
	cmpl	$528, %eax	#, iftmp.5405
	je	.L6801	#,
	cmpl	$529, %eax	#, iftmp.5405
	je	.L6805	#,
	cmpl	$526, %eax	#, iftmp.5405
	je	.L6805	#,
	.loc 1 33224 0
	jmp	.L6796	#
.L6800:
	.loc 1 33224 0 discriminator 3
	cmpl	$537, %eax	#, iftmp.5405
	jg	.L6806	#,
	cmpl	$536, %eax	#, iftmp.5405
	jge	.L6807	#,
	cmpl	$533, %eax	#, iftmp.5405
	je	.L6807	#,
	cmpl	$533, %eax	#, iftmp.5405
	jl	.L6808	#,
	cmpl	$534, %eax	#, iftmp.5405
	je	.L6809	#,
	.loc 1 33224 0
	jmp	.L6796	#
.L6806:
	.loc 1 33224 0 discriminator 3
	cmpl	$538, %eax	#, iftmp.5405
	je	.L6798	#,
	cmpl	$539, %eax	#, iftmp.5405
	je	.L6810	#,
	.loc 1 33224 0
	jmp	.L6796	#
.L6797:
	.loc 1 33224 0 discriminator 3
	cmpl	$551, %eax	#, iftmp.5405
	je	.L6811	#,
	cmpl	$551, %eax	#, iftmp.5405
	jg	.L6812	#,
	cmpl	$547, %eax	#, iftmp.5405
	je	.L6811	#,
	cmpl	$547, %eax	#, iftmp.5405
	jg	.L6813	#,
	cmpl	$545, %eax	#, iftmp.5405
	je	.L6811	#,
	cmpl	$546, %eax	#, iftmp.5405
	je	.L6814	#,
	.loc 1 33224 0
	jmp	.L6796	#
.L6813:
	.loc 1 33224 0 discriminator 3
	cmpl	$549, %eax	#, iftmp.5405
	je	.L6811	#,
	cmpl	$549, %eax	#, iftmp.5405
	jmp	.L6814	#
.L6812:
	cmpl	$555, %eax	#, iftmp.5405
	je	.L6811	#,
	cmpl	$555, %eax	#, iftmp.5405
	jg	.L6815	#,
	cmpl	$553, %eax	#, iftmp.5405
	je	.L6811	#,
	cmpl	$553, %eax	#, iftmp.5405
	jmp	.L6814	#
.L6815:
	cmpl	$557, %eax	#, iftmp.5405
	je	.L6811	#,
	cmpl	$557, %eax	#, iftmp.5405
	jl	.L6814	#,
	cmpl	$558, %eax	#, iftmp.5405
	jne	.L6796	#,
.L6814:
	.loc 1 33233 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp97
	movq	%rax, %rdi	# tmp97,
	call	extract_insn_cached	#
	.loc 1 33234 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57538
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57538,
	call	mult_operator	#
	testl	%eax, %eax	# D.57537
	je	.L6816	#,
	.loc 1 33236 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33242 0
	jmp	.L6818	#
.L6816:
	.loc 1 33240 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 33242 0
	jmp	.L6818	#
.L6811:
	.loc 1 33251 0
	movq	-8(%rbp), %rax	# insn, tmp98
	movq	%rax, %rdi	# tmp98,
	call	extract_insn_cached	#
	.loc 1 33252 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57538
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57538,
	call	mult_operator	#
	testl	%eax, %eax	# D.57537
	je	.L6819	#,
	.loc 1 33254 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33260 0
	jmp	.L6818	#
.L6819:
	.loc 1 33258 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 33260 0
	jmp	.L6818	#
.L6810:
	.loc 1 33263 0
	movq	-8(%rbp), %rax	# insn, tmp99
	movq	%rax, %rdi	# tmp99,
	call	extract_constrain_insn_cached	#
	.loc 1 33264 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5406
	cmpl	$2, %eax	#, which_alternative.5406
	je	.L6821	#,
	.loc 1 33264 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57538
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57538,
	call	mult_operator	#
	testl	%eax, %eax	# D.57537
	je	.L6821	#,
	.loc 1 33266 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6822	#
.L6821:
	.loc 1 33268 0
	movq	-8(%rbp), %rax	# insn, tmp100
	movq	%rax, %rdi	# tmp100,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57539
	jne	.L6823	#,
	.loc 1 33270 0
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6822	#
.L6823:
	.loc 1 33274 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33276 0
	jmp	.L6818	#
.L6822:
	jmp	.L6818	#
.L6798:
	.loc 1 33283 0
	movq	-8(%rbp), %rax	# insn, tmp101
	movq	%rax, %rdi	# tmp101,
	call	extract_insn_cached	#
	.loc 1 33284 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57538
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57538,
	call	mult_operator	#
	testl	%eax, %eax	# D.57537
	je	.L6824	#,
	.loc 1 33286 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33292 0
	jmp	.L6818	#
.L6824:
	.loc 1 33290 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 33292 0
	jmp	.L6818	#
.L6809:
	.loc 1 33295 0
	movq	-8(%rbp), %rax	# insn, tmp102
	movq	%rax, %rdi	# tmp102,
	call	extract_constrain_insn_cached	#
	.loc 1 33296 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5407
	cmpl	$2, %eax	#, which_alternative.5407
	je	.L6826	#,
	.loc 1 33296 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57538
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57538,
	call	mult_operator	#
	testl	%eax, %eax	# D.57537
	je	.L6826	#,
	.loc 1 33298 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	jmp	.L6827	#
.L6826:
	.loc 1 33300 0
	movq	-8(%rbp), %rax	# insn, tmp103
	movq	%rax, %rdi	# tmp103,
	call	get_attr_type	#
	cmpl	$26, %eax	#, D.57539
	jne	.L6828	#,
	.loc 1 33302 0
	movl	$2, -12(%rbp)	#, casenum
	jmp	.L6827	#
.L6828:
	.loc 1 33306 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33308 0
	jmp	.L6818	#
.L6827:
	jmp	.L6818	#
.L6807:
	.loc 1 33313 0
	movq	-8(%rbp), %rax	# insn, tmp104
	movq	%rax, %rdi	# tmp104,
	call	extract_insn_cached	#
	.loc 1 33314 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57538
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57538,
	call	mult_operator	#
	testl	%eax, %eax	# D.57537
	je	.L6829	#,
	.loc 1 33316 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33322 0
	jmp	.L6818	#
.L6829:
	.loc 1 33320 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 33322 0
	jmp	.L6818	#
.L6808:
	.loc 1 33325 0
	movq	-8(%rbp), %rax	# insn, tmp105
	movq	%rax, %rdi	# tmp105,
	call	extract_insn_cached	#
	.loc 1 33326 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57538
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57538,
	call	mult_operator	#
	testl	%eax, %eax	# D.57537
	je	.L6831	#,
	.loc 1 33328 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33334 0
	jmp	.L6818	#
.L6831:
	.loc 1 33332 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33334 0
	jmp	.L6818	#
.L6799:
	.loc 1 33337 0
	movq	-8(%rbp), %rax	# insn, tmp106
	movq	%rax, %rdi	# tmp106,
	call	extract_insn_cached	#
	.loc 1 33338 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57538
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57538,
	call	mult_operator	#
	testl	%eax, %eax	# D.57537
	je	.L6833	#,
	.loc 1 33340 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33346 0
	jmp	.L6818	#
.L6833:
	.loc 1 33344 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33346 0
	jmp	.L6818	#
.L6805:
	.loc 1 33350 0
	movq	-8(%rbp), %rax	# insn, tmp107
	movq	%rax, %rdi	# tmp107,
	call	extract_constrain_insn_cached	#
	.loc 1 33351 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5408
	testl	%eax, %eax	# which_alternative.5408
	jne	.L6835	#,
	.loc 1 33351 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57538
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57538,
	call	mult_operator	#
	testl	%eax, %eax	# D.57537
	je	.L6835	#,
	.loc 1 33353 0 is_stmt 1
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33359 0
	jmp	.L6818	#
.L6835:
	.loc 1 33357 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33359 0
	jmp	.L6818	#
.L6801:
	.loc 1 33363 0
	movq	-8(%rbp), %rax	# insn, tmp108
	movq	%rax, %rdi	# tmp108,
	call	extract_insn_cached	#
	.loc 1 33364 0
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57538
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57538,
	call	mult_operator	#
	testl	%eax, %eax	# D.57537
	je	.L6837	#,
	.loc 1 33366 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33372 0
	jmp	.L6818	#
.L6837:
	.loc 1 33370 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33372 0
	jmp	.L6818	#
.L6846:
	.loc 1 33391 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 33392 0
	jmp	.L6818	#
.L6803:
	.loc 1 33395 0
	movq	-8(%rbp), %rax	# insn, tmp109
	movq	32(%rax), %rax	# insn_15->fld[3].rtx, D.57538
	movzwl	(%rax), %eax	# _67->code, D.57540
	cmpw	$40, %ax	#, D.57540
	je	.L6796	#,
	.loc 1 33396 0
	movq	-8(%rbp), %rax	# insn, tmp110
	movq	32(%rax), %rax	# insn_15->fld[3].rtx, D.57538
	movq	%rax, %rdi	# D.57538,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57537
	jns	.L6796	#,
	.loc 1 33397 0
	movq	-8(%rbp), %rax	# insn, tmp111
	movl	$__FUNCTION__.25079, %ecx	#,
	movl	$33397, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp111,
	call	_fatal_insn_not_found	#
.L6796:
	.loc 1 33399 0
	movl	$3, -12(%rbp)	#, casenum
	.loc 1 33400 0
	nop
.L6818:
	.loc 1 33404 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp112
	movq	%rax, -8(%rbp)	# tmp112, insn
	.loc 1 33405 0
	movl	-12(%rbp), %eax	# casenum, casenum
	cmpl	$1, %eax	#, casenum
	je	.L6840	#,
	cmpl	$1, %eax	#, casenum
	jg	.L6841	#,
	testl	%eax, %eax	# casenum
	je	.L6842	#,
	jmp	.L6839	#
.L6841:
	cmpl	$2, %eax	#, casenum
	je	.L6843	#,
	cmpl	$3, %eax	#, casenum
	je	.L6844	#,
	jmp	.L6839	#
.L6842:
	.loc 1 33408 0
	movl	$11, %eax	#, D.57537
	jmp	.L6845	#
.L6840:
	.loc 1 33411 0
	movl	$2, %eax	#, D.57537
	jmp	.L6845	#
.L6843:
	.loc 1 33414 0
	movl	$39, %eax	#, D.57537
	jmp	.L6845	#
.L6844:
	.loc 1 33417 0
	movl	$70, %eax	#, D.57537
	jmp	.L6845	#
.L6839:
	.loc 1 33420 0
	movl	$__FUNCTION__.25079, %edx	#,
	movl	$33420, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L6845:
	.loc 1 33422 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE88:
	.size	pent_mul_unit_conflict_cost, .-pent_mul_unit_conflict_cost
	.type	pent_np_unit_blockage, @function
pent_np_unit_blockage:
.LFB89:
	.loc 1 33429 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 33433 0
	movq	-24(%rbp), %rax	# executing_insn, tmp1345
	movq	%rax, -8(%rbp)	# tmp1345, insn
	.loc 1 33434 0
	movq	-8(%rbp), %rax	# insn, tmp1346
	movl	40(%rax), %eax	# insn_55->fld[4].rtint, D.57549
	testl	%eax, %eax	# D.57549
	js	.L6848	#,
	.loc 1 33434 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1347
	movl	40(%rax), %eax	# insn_55->fld[4].rtint, iftmp.5409
	jmp	.L6849	#
.L6848:
	.loc 1 33434 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1348
	movq	%rax, %rdi	# tmp1348,
	call	recog_memoized_1	#
.L6849:
	.loc 1 33434 0 discriminator 3
	addl	$1, %eax	#, tmp1349
	cmpl	$657, %eax	#, tmp1349
	ja	.L6850	#,
	movl	%eax, %eax	# tmp1349, tmp1350
	movq	.L6852(,%rax,8), %rax	#, tmp1351
	jmp	*%rax	# tmp1351
	.section	.rodata
	.align 8
	.align 4
.L6852:
	.quad	.L6851
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6854
	.quad	.L6854
	.quad	.L6854
	.quad	.L6855
	.quad	.L6855
	.quad	.L6856
	.quad	.L6856
	.quad	.L6857
	.quad	.L6853
	.quad	.L6853
	.quad	.L6850
	.quad	.L6854
	.quad	.L6854
	.quad	.L6858
	.quad	.L6853
	.quad	.L6853
	.quad	.L6850
	.quad	.L6850
	.quad	.L6853
	.quad	.L6856
	.quad	.L6854
	.quad	.L6854
	.quad	.L6859
	.quad	.L6850
	.quad	.L6853
	.quad	.L6856
	.quad	.L6850
	.quad	.L6850
	.quad	.L6858
	.quad	.L6858
	.quad	.L6853
	.quad	.L6853
	.quad	.L6850
	.quad	.L6858
	.quad	.L6860
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6850
	.quad	.L6861
	.quad	.L6854
	.quad	.L6855
	.quad	.L6855
	.quad	.L6856
	.quad	.L6856
	.quad	.L6850
	.quad	.L6857
	.quad	.L6853
	.quad	.L6853
	.quad	.L6850
	.quad	.L6862
	.quad	.L6862
	.quad	.L6863
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6864
	.quad	.L6864
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6865
	.quad	.L6865
	.quad	.L6865
	.quad	.L6865
	.quad	.L6850
	.quad	.L6850
	.quad	.L6856
	.quad	.L6850
	.quad	.L6856
	.quad	.L6866
	.quad	.L6850
	.quad	.L6856
	.quad	.L6866
	.quad	.L6850
	.quad	.L6850
	.quad	.L6867
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6868
	.quad	.L6850
	.quad	.L6869
	.quad	.L6869
	.quad	.L6869
	.quad	.L6869
	.quad	.L6870
	.quad	.L6870
	.quad	.L6871
	.quad	.L6872
	.quad	.L6850
	.quad	.L6870
	.quad	.L6872
	.quad	.L6870
	.quad	.L6872
	.quad	.L6870
	.quad	.L6872
	.quad	.L6870
	.quad	.L6872
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6870
	.quad	.L6870
	.quad	.L6850
	.quad	.L6870
	.quad	.L6870
	.quad	.L6850
	.quad	.L6870
	.quad	.L6870
	.quad	.L6850
	.quad	.L6870
	.quad	.L6870
	.quad	.L6850
	.quad	.L6873
	.quad	.L6873
	.quad	.L6873
	.quad	.L6873
	.quad	.L6873
	.quad	.L6873
	.quad	.L6850
	.quad	.L6874
	.quad	.L6875
	.quad	.L6874
	.quad	.L6874
	.quad	.L6875
	.quad	.L6875
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6877
	.quad	.L6878
	.quad	.L6878
	.quad	.L6878
	.quad	.L6878
	.quad	.L6877
	.quad	.L6877
	.quad	.L6879
	.quad	.L6879
	.quad	.L6879
	.quad	.L6879
	.quad	.L6879
	.quad	.L6879
	.quad	.L6880
	.quad	.L6881
	.quad	.L6881
	.quad	.L6881
	.quad	.L6881
	.quad	.L6881
	.quad	.L6882
	.quad	.L6883
	.quad	.L6883
	.quad	.L6883
	.quad	.L6881
	.quad	.L6883
	.quad	.L6883
	.quad	.L6883
	.quad	.L6875
	.quad	.L6850
	.quad	.L6874
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6874
	.quad	.L6874
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6884
	.quad	.L6885
	.quad	.L6885
	.quad	.L6850
	.quad	.L6850
	.quad	.L6885
	.quad	.L6850
	.quad	.L6850
	.quad	.L6885
	.quad	.L6850
	.quad	.L6850
	.quad	.L6885
	.quad	.L6850
	.quad	.L6885
	.quad	.L6885
	.quad	.L6886
	.quad	.L6887
	.quad	.L6887
	.quad	.L6888
	.quad	.L6850
	.quad	.L6853
	.quad	.L6853
	.quad	.L6853
	.quad	.L6850
	.quad	.L6850
	.quad	.L6889
	.quad	.L6875
	.quad	.L6890
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6890
	.quad	.L6875
	.quad	.L6875
	.quad	.L6856
	.quad	.L6875
	.quad	.L6856
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6856
	.quad	.L6875
	.quad	.L6856
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6875
	.quad	.L6850
	.quad	.L6891
	.quad	.L6891
	.quad	.L6891
	.quad	.L6891
	.quad	.L6891
	.quad	.L6891
	.quad	.L6891
	.quad	.L6891
	.quad	.L6891
	.quad	.L6891
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6891
	.quad	.L6856
	.quad	.L6891
	.quad	.L6891
	.quad	.L6856
	.quad	.L6856
	.quad	.L6891
	.quad	.L6856
	.quad	.L6891
	.quad	.L6856
	.quad	.L6892
	.quad	.L6892
	.quad	.L6850
	.quad	.L6850
	.quad	.L6893
	.quad	.L6892
	.quad	.L6894
	.quad	.L6892
	.quad	.L6895
	.quad	.L6892
	.quad	.L6892
	.quad	.L6892
	.quad	.L6892
	.quad	.L6892
	.quad	.L6892
	.quad	.L6896
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6850
	.quad	.L6850
	.quad	.L6893
	.quad	.L6896
	.quad	.L6896
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6850
	.quad	.L6850
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6897
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6876
	.quad	.L6876
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6876
	.quad	.L6898
	.quad	.L6899
	.quad	.L6899
	.quad	.L6899
	.quad	.L6899
	.quad	.L6899
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6876
	.quad	.L6850
	.quad	.L6875
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6900
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6901
	.quad	.L6876
	.quad	.L6850
	.quad	.L6876
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6902
	.quad	.L6902
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6850
	.quad	.L6903
	.quad	.L6903
	.quad	.L6903
	.quad	.L6903
	.quad	.L6903
	.quad	.L6903
	.text
.L6903:
	.loc 1 33442 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1352
	movq	%rax, %rdi	# tmp1352,
	call	extract_insn_cached	#
	.loc 1 33443 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6904	#,
	.loc 1 33445 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 33451 0
	jmp	.L6906	#
.L6904:
	.loc 1 33449 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33451 0
	jmp	.L6906	#
.L6902:
	.loc 1 33455 0
	movq	-8(%rbp), %rax	# insn, tmp1353
	movq	%rax, %rdi	# tmp1353,
	call	extract_constrain_insn_cached	#
	.loc 1 33456 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5410
	testl	%eax, %eax	# which_alternative.5410
	jne	.L6907	#,
	.loc 1 33456 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1354
	movq	%rax, %rdi	# tmp1354,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L6907	#,
	movq	-8(%rbp), %rax	# insn, tmp1355
	movq	%rax, %rdi	# tmp1355,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6907	#,
	.loc 1 33458 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6908	#
.L6907:
	.loc 1 33460 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5411
	testl	%eax, %eax	# which_alternative.5411
	jne	.L6909	#,
	.loc 1 33460 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1356
	movq	%rax, %rdi	# tmp1356,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L6909	#,
	movq	-8(%rbp), %rax	# insn, tmp1357
	movq	%rax, %rdi	# tmp1357,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6910	#,
	movq	-8(%rbp), %rax	# insn, tmp1358
	movq	%rax, %rdi	# tmp1358,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6909	#,
.L6910:
	.loc 1 33462 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L6908	#
.L6909:
	.loc 1 33464 0
	movq	-8(%rbp), %rax	# insn, tmp1359
	movq	%rax, %rdi	# tmp1359,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L6911	#,
	.loc 1 33466 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6908	#
.L6911:
	.loc 1 33468 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5412
	testl	%eax, %eax	# which_alternative.5412
	jne	.L6912	#,
	.loc 1 33468 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1360
	movq	%rax, %rdi	# tmp1360,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6912	#,
	.loc 1 33470 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6908	#
.L6912:
	.loc 1 33472 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5413
	testl	%eax, %eax	# which_alternative.5413
	jne	.L6913	#,
	.loc 1 33472 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1361
	movq	%rax, %rdi	# tmp1361,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6914	#,
	movq	-8(%rbp), %rax	# insn, tmp1362
	movq	%rax, %rdi	# tmp1362,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6913	#,
.L6914:
	.loc 1 33474 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6908	#
.L6913:
	.loc 1 33478 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33480 0
	jmp	.L6906	#
.L6908:
	jmp	.L6906	#
.L6901:
	.loc 1 33512 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 33513 0
	jmp	.L6906	#
.L6900:
	.loc 1 33516 0
	movl	$5, -12(%rbp)	#, casenum
	.loc 1 33517 0
	jmp	.L6906	#
.L6899:
	.loc 1 33524 0
	movq	-8(%rbp), %rax	# insn, tmp1363
	movq	%rax, %rdi	# tmp1363,
	call	extract_insn_cached	#
	.loc 1 33525 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6915	#,
	.loc 1 33527 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 33533 0
	jmp	.L6906	#
.L6915:
	.loc 1 33531 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33533 0
	jmp	.L6906	#
.L6898:
	.loc 1 33536 0
	movq	-8(%rbp), %rax	# insn, tmp1364
	movq	%rax, %rdi	# tmp1364,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57553
	je	.L6917	#,
	.loc 1 33538 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 33544 0
	jmp	.L6906	#
.L6917:
	.loc 1 33542 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33544 0
	jmp	.L6906	#
.L6897:
	.loc 1 33606 0
	movq	-8(%rbp), %rax	# insn, tmp1365
	movq	%rax, %rdi	# tmp1365,
	call	extract_insn_cached	#
	.loc 1 33607 0
	movq	-8(%rbp), %rax	# insn, tmp1366
	movq	%rax, %rdi	# tmp1366,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L6919	#,
	.loc 1 33607 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6920	#,
.L6919:
	.loc 1 33607 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1367
	movq	%rax, %rdi	# tmp1367,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6920	#,
	.loc 1 33609 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6921	#
.L6920:
	.loc 1 33611 0
	movq	-8(%rbp), %rax	# insn, tmp1368
	movq	%rax, %rdi	# tmp1368,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L6922	#,
	.loc 1 33611 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6923	#,
.L6922:
	.loc 1 33611 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1369
	movq	%rax, %rdi	# tmp1369,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6924	#,
	movq	-8(%rbp), %rax	# insn, tmp1370
	movq	%rax, %rdi	# tmp1370,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6923	#,
.L6924:
	.loc 1 33613 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L6921	#
.L6923:
	.loc 1 33615 0
	movq	-8(%rbp), %rax	# insn, tmp1371
	movq	%rax, %rdi	# tmp1371,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L6925	#,
	.loc 1 33615 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6926	#,
.L6925:
	.loc 1 33617 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6921	#
.L6926:
	.loc 1 33619 0
	movq	-8(%rbp), %rax	# insn, tmp1372
	movq	%rax, %rdi	# tmp1372,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6927	#,
	.loc 1 33621 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6921	#
.L6927:
	.loc 1 33623 0
	movq	-8(%rbp), %rax	# insn, tmp1373
	movq	%rax, %rdi	# tmp1373,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6928	#,
	.loc 1 33623 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1374
	movq	%rax, %rdi	# tmp1374,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6929	#,
.L6928:
	.loc 1 33625 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6921	#
.L6929:
	.loc 1 33629 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33631 0
	jmp	.L6906	#
.L6921:
	jmp	.L6906	#
.L6896:
	.loc 1 33636 0
	movq	-8(%rbp), %rax	# insn, tmp1375
	movq	%rax, %rdi	# tmp1375,
	call	extract_constrain_insn_cached	#
	.loc 1 33637 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5414
	cmpl	$1, %eax	#, which_alternative.5414
	jne	.L6930	#,
	.loc 1 33637 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1376
	movq	%rax, %rdi	# tmp1376,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L6931	#,
	.loc 1 33637 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6930	#,
.L6931:
	.loc 1 33637 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1377
	movq	%rax, %rdi	# tmp1377,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6930	#,
	.loc 1 33639 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6932	#
.L6930:
	.loc 1 33641 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5415
	cmpl	$1, %eax	#, which_alternative.5415
	jne	.L6933	#,
	.loc 1 33641 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1378
	movq	%rax, %rdi	# tmp1378,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L6934	#,
	.loc 1 33641 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6933	#,
.L6934:
	.loc 1 33641 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1379
	movq	%rax, %rdi	# tmp1379,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6935	#,
	movq	-8(%rbp), %rax	# insn, tmp1380
	movq	%rax, %rdi	# tmp1380,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6933	#,
.L6935:
	.loc 1 33643 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L6932	#
.L6933:
	.loc 1 33645 0
	movq	-8(%rbp), %rax	# insn, tmp1381
	movq	%rax, %rdi	# tmp1381,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L6936	#,
	.loc 1 33645 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5416
	cmpl	$1, %eax	#, which_alternative.5416
	jne	.L6936	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6937	#,
.L6936:
	.loc 1 33647 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6932	#
.L6937:
	.loc 1 33649 0
	movq	-8(%rbp), %rax	# insn, tmp1382
	movq	%rax, %rdi	# tmp1382,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6938	#,
	.loc 1 33651 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6932	#
.L6938:
	.loc 1 33653 0
	movq	-8(%rbp), %rax	# insn, tmp1383
	movq	%rax, %rdi	# tmp1383,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6939	#,
	.loc 1 33653 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1384
	movq	%rax, %rdi	# tmp1384,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6940	#,
.L6939:
	.loc 1 33655 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6932	#
.L6940:
	.loc 1 33659 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33661 0
	jmp	.L6906	#
.L6932:
	jmp	.L6906	#
.L6895:
	.loc 1 33664 0
	movq	-8(%rbp), %rax	# insn, tmp1385
	movq	%rax, %rdi	# tmp1385,
	call	extract_constrain_insn_cached	#
	.loc 1 33665 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5417
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5418
	movl	%eax, %ecx	# ix86_cpu.5419, tmp1797
	sarl	%cl, %edx	# tmp1797, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6941	#,
	.loc 1 33665 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6942	#,
.L6941:
	.loc 1 33665 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5420
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5421
	movl	%eax, %ecx	# ix86_cpu.5422, tmp1799
	sarl	%cl, %edx	# tmp1799, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6942	#,
	.loc 1 33665 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6943	#,
.L6942:
	movq	-8(%rbp), %rax	# insn, tmp1386
	movq	%rax, %rdi	# tmp1386,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L6943	#,
	movq	-8(%rbp), %rax	# insn, tmp1387
	movq	%rax, %rdi	# tmp1387,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6943	#,
	.loc 1 33667 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6944	#
.L6943:
	.loc 1 33669 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5423
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5424
	movl	%eax, %ecx	# ix86_cpu.5425, tmp1801
	sarl	%cl, %edx	# tmp1801, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6945	#,
	.loc 1 33669 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6946	#,
.L6945:
	.loc 1 33669 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5426
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5427
	movl	%eax, %ecx	# ix86_cpu.5428, tmp1803
	sarl	%cl, %edx	# tmp1803, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6946	#,
	.loc 1 33669 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6947	#,
.L6946:
	movq	-8(%rbp), %rax	# insn, tmp1388
	movq	%rax, %rdi	# tmp1388,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L6947	#,
	movq	-8(%rbp), %rax	# insn, tmp1389
	movq	%rax, %rdi	# tmp1389,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6948	#,
	movq	-8(%rbp), %rax	# insn, tmp1390
	movq	%rax, %rdi	# tmp1390,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6947	#,
.L6948:
	.loc 1 33671 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L6944	#
.L6947:
	.loc 1 33673 0
	movq	-8(%rbp), %rax	# insn, tmp1391
	movq	%rax, %rdi	# tmp1391,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L6949	#,
	.loc 1 33675 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6944	#
.L6949:
	.loc 1 33677 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5429
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5430
	movl	%eax, %ecx	# ix86_cpu.5431, tmp1805
	sarl	%cl, %edx	# tmp1805, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6950	#,
	.loc 1 33677 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6951	#,
.L6950:
	.loc 1 33677 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5432
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5433
	movl	%eax, %ecx	# ix86_cpu.5434, tmp1807
	sarl	%cl, %edx	# tmp1807, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6951	#,
	.loc 1 33677 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6952	#,
.L6951:
	movq	-8(%rbp), %rax	# insn, tmp1392
	movq	%rax, %rdi	# tmp1392,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6952	#,
	.loc 1 33679 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6944	#
.L6952:
	.loc 1 33681 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5435
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5436
	movl	%eax, %ecx	# ix86_cpu.5437, tmp1809
	sarl	%cl, %edx	# tmp1809, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6953	#,
	.loc 1 33681 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6954	#,
.L6953:
	.loc 1 33681 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5438
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5439
	movl	%eax, %ecx	# ix86_cpu.5440, tmp1811
	sarl	%cl, %edx	# tmp1811, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6954	#,
	.loc 1 33681 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6955	#,
.L6954:
	movq	-8(%rbp), %rax	# insn, tmp1393
	movq	%rax, %rdi	# tmp1393,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6956	#,
	movq	-8(%rbp), %rax	# insn, tmp1394
	movq	%rax, %rdi	# tmp1394,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6955	#,
.L6956:
	.loc 1 33683 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6944	#
.L6955:
	.loc 1 33687 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33689 0
	jmp	.L6906	#
.L6944:
	jmp	.L6906	#
.L6894:
	.loc 1 33692 0
	movq	-8(%rbp), %rax	# insn, tmp1395
	movq	%rax, %rdi	# tmp1395,
	call	extract_constrain_insn_cached	#
	.loc 1 33693 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5441
	testl	%eax, %eax	# which_alternative.5441
	jne	.L6957	#,
	.loc 1 33693 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5442
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5443
	movl	%eax, %ecx	# ix86_cpu.5444, tmp1813
	sarl	%cl, %edx	# tmp1813, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6958	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6959	#,
.L6958:
	.loc 1 33693 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5445
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5446
	movl	%eax, %ecx	# ix86_cpu.5447, tmp1815
	sarl	%cl, %edx	# tmp1815, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6959	#,
	.loc 1 33693 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6957	#,
.L6959:
	movq	-8(%rbp), %rax	# insn, tmp1396
	movq	%rax, %rdi	# tmp1396,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L6957	#,
	movq	-8(%rbp), %rax	# insn, tmp1397
	movq	%rax, %rdi	# tmp1397,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6957	#,
	.loc 1 33695 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6960	#
.L6957:
	.loc 1 33697 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5448
	testl	%eax, %eax	# which_alternative.5448
	jne	.L6961	#,
	.loc 1 33697 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5449
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5450
	movl	%eax, %ecx	# ix86_cpu.5451, tmp1817
	sarl	%cl, %edx	# tmp1817, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6962	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6963	#,
.L6962:
	.loc 1 33697 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5452
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5453
	movl	%eax, %ecx	# ix86_cpu.5454, tmp1819
	sarl	%cl, %edx	# tmp1819, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6963	#,
	.loc 1 33697 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6961	#,
.L6963:
	movq	-8(%rbp), %rax	# insn, tmp1398
	movq	%rax, %rdi	# tmp1398,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L6961	#,
	movq	-8(%rbp), %rax	# insn, tmp1399
	movq	%rax, %rdi	# tmp1399,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6964	#,
	movq	-8(%rbp), %rax	# insn, tmp1400
	movq	%rax, %rdi	# tmp1400,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6961	#,
.L6964:
	.loc 1 33699 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L6960	#
.L6961:
	.loc 1 33701 0
	movq	-8(%rbp), %rax	# insn, tmp1401
	movq	%rax, %rdi	# tmp1401,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L6965	#,
	.loc 1 33703 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6960	#
.L6965:
	.loc 1 33705 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5455
	testl	%eax, %eax	# which_alternative.5455
	jne	.L6966	#,
	.loc 1 33705 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5456
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5457
	movl	%eax, %ecx	# ix86_cpu.5458, tmp1821
	sarl	%cl, %edx	# tmp1821, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6967	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6968	#,
.L6967:
	.loc 1 33705 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5459
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5460
	movl	%eax, %ecx	# ix86_cpu.5461, tmp1823
	sarl	%cl, %edx	# tmp1823, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6968	#,
	.loc 1 33705 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6966	#,
.L6968:
	movq	-8(%rbp), %rax	# insn, tmp1402
	movq	%rax, %rdi	# tmp1402,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6966	#,
	.loc 1 33707 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6960	#
.L6966:
	.loc 1 33709 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5462
	testl	%eax, %eax	# which_alternative.5462
	jne	.L6969	#,
	.loc 1 33709 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5463
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5464
	movl	%eax, %ecx	# ix86_cpu.5465, tmp1825
	sarl	%cl, %edx	# tmp1825, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6970	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6971	#,
.L6970:
	.loc 1 33709 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5466
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5467
	movl	%eax, %ecx	# ix86_cpu.5468, tmp1827
	sarl	%cl, %edx	# tmp1827, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L6971	#,
	.loc 1 33709 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const1_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L6969	#,
.L6971:
	movq	-8(%rbp), %rax	# insn, tmp1403
	movq	%rax, %rdi	# tmp1403,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6972	#,
	movq	-8(%rbp), %rax	# insn, tmp1404
	movq	%rax, %rdi	# tmp1404,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6969	#,
.L6972:
	.loc 1 33711 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6960	#
.L6969:
	.loc 1 33715 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33717 0
	jmp	.L6906	#
.L6960:
	jmp	.L6906	#
.L6893:
	.loc 1 33721 0
	movq	-8(%rbp), %rax	# insn, tmp1405
	movq	%rax, %rdi	# tmp1405,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6973	#,
	.loc 1 33723 0
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6974	#
.L6973:
	.loc 1 33725 0
	movq	-8(%rbp), %rax	# insn, tmp1406
	movq	%rax, %rdi	# tmp1406,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6975	#,
	.loc 1 33725 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1407
	movq	%rax, %rdi	# tmp1407,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6976	#,
.L6975:
	.loc 1 33727 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L6974	#
.L6976:
	.loc 1 33731 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 33733 0
	jmp	.L6906	#
.L6974:
	jmp	.L6906	#
.L6892:
	.loc 1 33745 0
	movq	-8(%rbp), %rax	# insn, tmp1408
	movq	%rax, %rdi	# tmp1408,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57553
	je	.L6977	#,
	.loc 1 33745 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1409
	movq	%rax, %rdi	# tmp1409,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57553
	jne	.L6978	#,
.L6977:
	.loc 1 33745 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1410
	movq	%rax, %rdi	# tmp1410,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L6978	#,
	movq	-8(%rbp), %rax	# insn, tmp1411
	movq	%rax, %rdi	# tmp1411,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6978	#,
	.loc 1 33747 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6979	#
.L6978:
	.loc 1 33749 0
	movq	-8(%rbp), %rax	# insn, tmp1412
	movq	%rax, %rdi	# tmp1412,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57553
	je	.L6980	#,
	.loc 1 33749 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1413
	movq	%rax, %rdi	# tmp1413,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57553
	jne	.L6981	#,
.L6980:
	.loc 1 33749 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1414
	movq	%rax, %rdi	# tmp1414,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L6981	#,
	movq	-8(%rbp), %rax	# insn, tmp1415
	movq	%rax, %rdi	# tmp1415,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6982	#,
	movq	-8(%rbp), %rax	# insn, tmp1416
	movq	%rax, %rdi	# tmp1416,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6981	#,
.L6982:
	.loc 1 33751 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L6979	#
.L6981:
	.loc 1 33753 0
	movq	-8(%rbp), %rax	# insn, tmp1417
	movq	%rax, %rdi	# tmp1417,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L6983	#,
	.loc 1 33755 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6979	#
.L6983:
	.loc 1 33757 0
	movq	-8(%rbp), %rax	# insn, tmp1418
	movq	%rax, %rdi	# tmp1418,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57553
	je	.L6984	#,
	.loc 1 33757 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1419
	movq	%rax, %rdi	# tmp1419,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57553
	jne	.L6985	#,
.L6984:
	.loc 1 33757 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1420
	movq	%rax, %rdi	# tmp1420,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6985	#,
	.loc 1 33759 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6979	#
.L6985:
	.loc 1 33761 0
	movq	-8(%rbp), %rax	# insn, tmp1421
	movq	%rax, %rdi	# tmp1421,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57553
	je	.L6986	#,
	.loc 1 33761 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1422
	movq	%rax, %rdi	# tmp1422,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57553
	jne	.L6987	#,
.L6986:
	.loc 1 33761 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1423
	movq	%rax, %rdi	# tmp1423,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6988	#,
	movq	-8(%rbp), %rax	# insn, tmp1424
	movq	%rax, %rdi	# tmp1424,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6987	#,
.L6988:
	.loc 1 33763 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6979	#
.L6987:
	.loc 1 33767 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33769 0
	jmp	.L6906	#
.L6979:
	jmp	.L6906	#
.L6891:
	.loc 1 33786 0
	movq	-8(%rbp), %rax	# insn, tmp1425
	movq	%rax, %rdi	# tmp1425,
	call	extract_insn_cached	#
	.loc 1 33787 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L6989	#,
	.loc 1 33789 0
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 33795 0
	jmp	.L6906	#
.L6989:
	.loc 1 33793 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 33795 0
	jmp	.L6906	#
.L6890:
	.loc 1 33799 0
	movq	-8(%rbp), %rax	# insn, tmp1426
	movq	%rax, %rdi	# tmp1426,
	call	extract_constrain_insn_cached	#
	.loc 1 33800 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5469
	testl	%eax, %eax	# which_alternative.5469
	je	.L6991	#,
	.loc 1 33800 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5470
	cmpl	$1, %eax	#, which_alternative.5470
	jne	.L6992	#,
.L6991:
	.loc 1 33800 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1427
	movq	%rax, %rdi	# tmp1427,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L6993	#,
	.loc 1 33800 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5471
	testl	%eax, %eax	# which_alternative.5471
	je	.L6992	#,
	.loc 1 33800 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5472
	cmpl	$1, %eax	#, which_alternative.5472
	je	.L6992	#,
.L6993:
	movq	-8(%rbp), %rax	# insn, tmp1428
	movq	%rax, %rdi	# tmp1428,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L6992	#,
	.loc 1 33802 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L6994	#
.L6992:
	.loc 1 33804 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5473
	testl	%eax, %eax	# which_alternative.5473
	je	.L6995	#,
	.loc 1 33804 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5474
	cmpl	$1, %eax	#, which_alternative.5474
	jne	.L6996	#,
.L6995:
	.loc 1 33804 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1429
	movq	%rax, %rdi	# tmp1429,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L6997	#,
	.loc 1 33804 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5475
	testl	%eax, %eax	# which_alternative.5475
	je	.L6996	#,
	.loc 1 33804 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5476
	cmpl	$1, %eax	#, which_alternative.5476
	je	.L6996	#,
.L6997:
	movq	-8(%rbp), %rax	# insn, tmp1430
	movq	%rax, %rdi	# tmp1430,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L6998	#,
	movq	-8(%rbp), %rax	# insn, tmp1431
	movq	%rax, %rdi	# tmp1431,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L6996	#,
.L6998:
	.loc 1 33806 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L6994	#
.L6996:
	.loc 1 33808 0
	movq	-8(%rbp), %rax	# insn, tmp1432
	movq	%rax, %rdi	# tmp1432,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L6999	#,
	.loc 1 33808 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5477
	testl	%eax, %eax	# which_alternative.5477
	je	.L7000	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5478
	cmpl	$1, %eax	#, which_alternative.5478
	je	.L7000	#,
.L6999:
	.loc 1 33810 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L6994	#
.L7000:
	.loc 1 33812 0
	movq	-8(%rbp), %rax	# insn, tmp1433
	movq	%rax, %rdi	# tmp1433,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7001	#,
	.loc 1 33814 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L6994	#
.L7001:
	.loc 1 33816 0
	movq	-8(%rbp), %rax	# insn, tmp1434
	movq	%rax, %rdi	# tmp1434,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7002	#,
	.loc 1 33816 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1435
	movq	%rax, %rdi	# tmp1435,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7003	#,
.L7002:
	.loc 1 33818 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L6994	#
.L7003:
	.loc 1 33822 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33824 0
	jmp	.L6906	#
.L6994:
	jmp	.L6906	#
.L6889:
	.loc 1 33827 0
	movq	-8(%rbp), %rax	# insn, tmp1436
	movq	%rax, %rdi	# tmp1436,
	call	extract_constrain_insn_cached	#
	.loc 1 33828 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5479
	testl	%eax, %eax	# which_alternative.5479
	je	.L7004	#,
	.loc 1 33828 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5480
	cmpl	$1, %eax	#, which_alternative.5480
	je	.L7004	#,
	.loc 1 33828 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5481
	cmpl	$2, %eax	#, which_alternative.5481
	jne	.L7005	#,
.L7004:
	movq	-8(%rbp), %rax	# insn, tmp1437
	movq	%rax, %rdi	# tmp1437,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7006	#,
	.loc 1 33828 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5482
	testl	%eax, %eax	# which_alternative.5482
	je	.L7005	#,
	.loc 1 33828 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5483
	cmpl	$1, %eax	#, which_alternative.5483
	je	.L7005	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5484
	cmpl	$2, %eax	#, which_alternative.5484
	je	.L7005	#,
.L7006:
	movq	-8(%rbp), %rax	# insn, tmp1438
	movq	%rax, %rdi	# tmp1438,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7005	#,
	.loc 1 33830 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7007	#
.L7005:
	.loc 1 33832 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5485
	testl	%eax, %eax	# which_alternative.5485
	je	.L7008	#,
	.loc 1 33832 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5486
	cmpl	$1, %eax	#, which_alternative.5486
	je	.L7008	#,
	.loc 1 33832 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5487
	cmpl	$2, %eax	#, which_alternative.5487
	jne	.L7009	#,
.L7008:
	movq	-8(%rbp), %rax	# insn, tmp1439
	movq	%rax, %rdi	# tmp1439,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7010	#,
	.loc 1 33832 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5488
	testl	%eax, %eax	# which_alternative.5488
	je	.L7009	#,
	.loc 1 33832 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5489
	cmpl	$1, %eax	#, which_alternative.5489
	je	.L7009	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5490
	cmpl	$2, %eax	#, which_alternative.5490
	je	.L7009	#,
.L7010:
	movq	-8(%rbp), %rax	# insn, tmp1440
	movq	%rax, %rdi	# tmp1440,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7011	#,
	movq	-8(%rbp), %rax	# insn, tmp1441
	movq	%rax, %rdi	# tmp1441,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7009	#,
.L7011:
	.loc 1 33834 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7007	#
.L7009:
	.loc 1 33836 0
	movq	-8(%rbp), %rax	# insn, tmp1442
	movq	%rax, %rdi	# tmp1442,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7012	#,
	.loc 1 33836 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5491
	testl	%eax, %eax	# which_alternative.5491
	je	.L7013	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5492
	cmpl	$1, %eax	#, which_alternative.5492
	je	.L7013	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5493
	cmpl	$2, %eax	#, which_alternative.5493
	je	.L7013	#,
.L7012:
	.loc 1 33838 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7007	#
.L7013:
	.loc 1 33840 0
	movq	-8(%rbp), %rax	# insn, tmp1443
	movq	%rax, %rdi	# tmp1443,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7014	#,
	.loc 1 33842 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7007	#
.L7014:
	.loc 1 33844 0
	movq	-8(%rbp), %rax	# insn, tmp1444
	movq	%rax, %rdi	# tmp1444,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7015	#,
	.loc 1 33844 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1445
	movq	%rax, %rdi	# tmp1445,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7016	#,
.L7015:
	.loc 1 33846 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7007	#
.L7016:
	.loc 1 33850 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33852 0
	jmp	.L6906	#
.L7007:
	jmp	.L6906	#
.L6888:
	.loc 1 33855 0
	movq	-8(%rbp), %rax	# insn, tmp1446
	movq	%rax, %rdi	# tmp1446,
	call	extract_constrain_insn_cached	#
	.loc 1 33856 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5494
	testl	%eax, %eax	# which_alternative.5494
	je	.L7017	#,
	.loc 1 33856 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5495
	cmpl	$2, %eax	#, which_alternative.5495
	je	.L7017	#,
	.loc 1 33858 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 33864 0
	jmp	.L6906	#
.L7017:
	.loc 1 33862 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33864 0
	jmp	.L6906	#
.L6887:
	.loc 1 33868 0
	movq	-8(%rbp), %rax	# insn, tmp1447
	movq	%rax, %rdi	# tmp1447,
	call	extract_constrain_insn_cached	#
	.loc 1 33869 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5496
	cmpl	$1, %eax	#, which_alternative.5496
	jne	.L7019	#,
	.loc 1 33871 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 33877 0
	jmp	.L6906	#
.L7019:
	.loc 1 33875 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33877 0
	jmp	.L6906	#
.L6886:
	.loc 1 33880 0
	movq	-8(%rbp), %rax	# insn, tmp1448
	movq	%rax, %rdi	# tmp1448,
	call	extract_constrain_insn_cached	#
	.loc 1 33881 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5497
	cmpl	$1, %eax	#, which_alternative.5497
	je	.L7021	#,
	.loc 1 33881 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5498
	cmpl	$3, %eax	#, which_alternative.5498
	jne	.L7022	#,
.L7021:
	.loc 1 33883 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 33889 0
	jmp	.L6906	#
.L7022:
	.loc 1 33887 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33889 0
	jmp	.L6906	#
.L6885:
	.loc 1 33898 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 33899 0
	jmp	.L6906	#
.L6884:
	.loc 1 33918 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 33919 0
	jmp	.L6906	#
.L6883:
	.loc 1 33927 0
	movq	-8(%rbp), %rax	# insn, tmp1449
	movq	%rax, %rdi	# tmp1449,
	call	extract_insn_cached	#
	.loc 1 33928 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7024	#,
	.loc 1 33928 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1450
	movq	%rax, %rdi	# tmp1450,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7024	#,
	movq	-8(%rbp), %rax	# insn, tmp1451
	movq	%rax, %rdi	# tmp1451,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7024	#,
	.loc 1 33930 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7025	#
.L7024:
	.loc 1 33932 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7026	#,
	.loc 1 33932 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1452
	movq	%rax, %rdi	# tmp1452,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7026	#,
	movq	-8(%rbp), %rax	# insn, tmp1453
	movq	%rax, %rdi	# tmp1453,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7027	#,
	movq	-8(%rbp), %rax	# insn, tmp1454
	movq	%rax, %rdi	# tmp1454,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7026	#,
.L7027:
	.loc 1 33934 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7025	#
.L7026:
	.loc 1 33936 0
	movq	-8(%rbp), %rax	# insn, tmp1455
	movq	%rax, %rdi	# tmp1455,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7028	#,
	.loc 1 33938 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7025	#
.L7028:
	.loc 1 33940 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7029	#,
	.loc 1 33940 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1456
	movq	%rax, %rdi	# tmp1456,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7029	#,
	.loc 1 33942 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7025	#
.L7029:
	.loc 1 33944 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7030	#,
	.loc 1 33944 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1457
	movq	%rax, %rdi	# tmp1457,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7031	#,
	movq	-8(%rbp), %rax	# insn, tmp1458
	movq	%rax, %rdi	# tmp1458,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7030	#,
.L7031:
	.loc 1 33946 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7025	#
.L7030:
	.loc 1 33950 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33952 0
	jmp	.L6906	#
.L7025:
	jmp	.L6906	#
.L6882:
	.loc 1 33955 0
	movq	-8(%rbp), %rax	# insn, tmp1459
	movq	%rax, %rdi	# tmp1459,
	call	extract_constrain_insn_cached	#
	.loc 1 33956 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5499
	cmpl	$3, %eax	#, which_alternative.5499
	je	.L7032	#,
	.loc 1 33956 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7032	#,
	movq	-8(%rbp), %rax	# insn, tmp1460
	movq	%rax, %rdi	# tmp1460,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7032	#,
	movq	-8(%rbp), %rax	# insn, tmp1461
	movq	%rax, %rdi	# tmp1461,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7032	#,
	.loc 1 33958 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7033	#
.L7032:
	.loc 1 33960 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5500
	cmpl	$3, %eax	#, which_alternative.5500
	je	.L7034	#,
	.loc 1 33960 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7034	#,
	movq	-8(%rbp), %rax	# insn, tmp1462
	movq	%rax, %rdi	# tmp1462,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7034	#,
	movq	-8(%rbp), %rax	# insn, tmp1463
	movq	%rax, %rdi	# tmp1463,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7035	#,
	movq	-8(%rbp), %rax	# insn, tmp1464
	movq	%rax, %rdi	# tmp1464,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7034	#,
.L7035:
	.loc 1 33962 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7033	#
.L7034:
	.loc 1 33964 0
	movq	-8(%rbp), %rax	# insn, tmp1465
	movq	%rax, %rdi	# tmp1465,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7036	#,
	.loc 1 33966 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7033	#
.L7036:
	.loc 1 33968 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5501
	cmpl	$3, %eax	#, which_alternative.5501
	je	.L7037	#,
	.loc 1 33968 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7037	#,
	movq	-8(%rbp), %rax	# insn, tmp1466
	movq	%rax, %rdi	# tmp1466,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7037	#,
	.loc 1 33970 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7033	#
.L7037:
	.loc 1 33972 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5502
	cmpl	$3, %eax	#, which_alternative.5502
	je	.L7038	#,
	.loc 1 33972 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7038	#,
	movq	-8(%rbp), %rax	# insn, tmp1467
	movq	%rax, %rdi	# tmp1467,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7039	#,
	movq	-8(%rbp), %rax	# insn, tmp1468
	movq	%rax, %rdi	# tmp1468,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7038	#,
.L7039:
	.loc 1 33974 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7033	#
.L7038:
	.loc 1 33978 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 33980 0
	jmp	.L6906	#
.L7033:
	jmp	.L6906	#
.L6881:
	.loc 1 33988 0
	movq	-8(%rbp), %rax	# insn, tmp1469
	movq	%rax, %rdi	# tmp1469,
	call	extract_insn_cached	#
	.loc 1 33989 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7040	#,
	.loc 1 33989 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1470
	movq	%rax, %rdi	# tmp1470,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7040	#,
	movq	-8(%rbp), %rax	# insn, tmp1471
	movq	%rax, %rdi	# tmp1471,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7040	#,
	.loc 1 33991 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7041	#
.L7040:
	.loc 1 33993 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7042	#,
	.loc 1 33993 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1472
	movq	%rax, %rdi	# tmp1472,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7042	#,
	movq	-8(%rbp), %rax	# insn, tmp1473
	movq	%rax, %rdi	# tmp1473,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7043	#,
	movq	-8(%rbp), %rax	# insn, tmp1474
	movq	%rax, %rdi	# tmp1474,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7042	#,
.L7043:
	.loc 1 33995 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7041	#
.L7042:
	.loc 1 33997 0
	movq	-8(%rbp), %rax	# insn, tmp1475
	movq	%rax, %rdi	# tmp1475,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7044	#,
	.loc 1 33999 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7041	#
.L7044:
	.loc 1 34001 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7045	#,
	.loc 1 34001 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1476
	movq	%rax, %rdi	# tmp1476,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7045	#,
	.loc 1 34003 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7041	#
.L7045:
	.loc 1 34005 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7046	#,
	.loc 1 34005 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1477
	movq	%rax, %rdi	# tmp1477,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7047	#,
	movq	-8(%rbp), %rax	# insn, tmp1478
	movq	%rax, %rdi	# tmp1478,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7046	#,
.L7047:
	.loc 1 34007 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7041	#
.L7046:
	.loc 1 34011 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34013 0
	jmp	.L6906	#
.L7041:
	jmp	.L6906	#
.L6880:
	.loc 1 34016 0
	movq	-8(%rbp), %rax	# insn, tmp1479
	movq	%rax, %rdi	# tmp1479,
	call	extract_constrain_insn_cached	#
	.loc 1 34017 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5503
	cmpl	$2, %eax	#, which_alternative.5503
	je	.L7048	#,
	.loc 1 34017 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7048	#,
	movq	-8(%rbp), %rax	# insn, tmp1480
	movq	%rax, %rdi	# tmp1480,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7048	#,
	movq	-8(%rbp), %rax	# insn, tmp1481
	movq	%rax, %rdi	# tmp1481,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7048	#,
	.loc 1 34019 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7049	#
.L7048:
	.loc 1 34021 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5504
	cmpl	$2, %eax	#, which_alternative.5504
	je	.L7050	#,
	.loc 1 34021 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7050	#,
	movq	-8(%rbp), %rax	# insn, tmp1482
	movq	%rax, %rdi	# tmp1482,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7050	#,
	movq	-8(%rbp), %rax	# insn, tmp1483
	movq	%rax, %rdi	# tmp1483,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7051	#,
	movq	-8(%rbp), %rax	# insn, tmp1484
	movq	%rax, %rdi	# tmp1484,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7050	#,
.L7051:
	.loc 1 34023 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7049	#
.L7050:
	.loc 1 34025 0
	movq	-8(%rbp), %rax	# insn, tmp1485
	movq	%rax, %rdi	# tmp1485,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7052	#,
	.loc 1 34027 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7049	#
.L7052:
	.loc 1 34029 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5505
	cmpl	$2, %eax	#, which_alternative.5505
	je	.L7053	#,
	.loc 1 34029 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7053	#,
	movq	-8(%rbp), %rax	# insn, tmp1486
	movq	%rax, %rdi	# tmp1486,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7053	#,
	.loc 1 34031 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7049	#
.L7053:
	.loc 1 34033 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5506
	cmpl	$2, %eax	#, which_alternative.5506
	je	.L7054	#,
	.loc 1 34033 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7054	#,
	movq	-8(%rbp), %rax	# insn, tmp1487
	movq	%rax, %rdi	# tmp1487,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7055	#,
	movq	-8(%rbp), %rax	# insn, tmp1488
	movq	%rax, %rdi	# tmp1488,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7054	#,
.L7055:
	.loc 1 34035 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7049	#
.L7054:
	.loc 1 34039 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34041 0
	jmp	.L6906	#
.L7049:
	jmp	.L6906	#
.L6879:
	.loc 1 34049 0
	movq	-8(%rbp), %rax	# insn, tmp1489
	movq	%rax, %rdi	# tmp1489,
	call	extract_insn_cached	#
	.loc 1 34050 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7056	#,
	.loc 1 34050 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1490
	movq	%rax, %rdi	# tmp1490,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7056	#,
	movq	-8(%rbp), %rax	# insn, tmp1491
	movq	%rax, %rdi	# tmp1491,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7056	#,
	.loc 1 34052 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7057	#
.L7056:
	.loc 1 34054 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7058	#,
	.loc 1 34054 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1492
	movq	%rax, %rdi	# tmp1492,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7058	#,
	movq	-8(%rbp), %rax	# insn, tmp1493
	movq	%rax, %rdi	# tmp1493,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7059	#,
	movq	-8(%rbp), %rax	# insn, tmp1494
	movq	%rax, %rdi	# tmp1494,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7058	#,
.L7059:
	.loc 1 34056 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7057	#
.L7058:
	.loc 1 34058 0
	movq	-8(%rbp), %rax	# insn, tmp1495
	movq	%rax, %rdi	# tmp1495,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7060	#,
	.loc 1 34060 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7057	#
.L7060:
	.loc 1 34062 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7061	#,
	.loc 1 34062 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1496
	movq	%rax, %rdi	# tmp1496,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7061	#,
	.loc 1 34064 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7057	#
.L7061:
	.loc 1 34066 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7062	#,
	.loc 1 34066 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1497
	movq	%rax, %rdi	# tmp1497,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7063	#,
	movq	-8(%rbp), %rax	# insn, tmp1498
	movq	%rax, %rdi	# tmp1498,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7062	#,
.L7063:
	.loc 1 34068 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7057	#
.L7062:
	.loc 1 34072 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34074 0
	jmp	.L6906	#
.L7057:
	jmp	.L6906	#
.L6878:
	.loc 1 34080 0
	movq	-8(%rbp), %rax	# insn, tmp1499
	movq	%rax, %rdi	# tmp1499,
	call	extract_insn_cached	#
	.loc 1 34081 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7064	#,
	.loc 1 34081 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1500
	movq	%rax, %rdi	# tmp1500,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7064	#,
	movq	-8(%rbp), %rax	# insn, tmp1501
	movq	%rax, %rdi	# tmp1501,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7064	#,
	.loc 1 34083 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7065	#
.L7064:
	.loc 1 34085 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7066	#,
	.loc 1 34085 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1502
	movq	%rax, %rdi	# tmp1502,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7066	#,
	movq	-8(%rbp), %rax	# insn, tmp1503
	movq	%rax, %rdi	# tmp1503,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7067	#,
	movq	-8(%rbp), %rax	# insn, tmp1504
	movq	%rax, %rdi	# tmp1504,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7066	#,
.L7067:
	.loc 1 34087 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7065	#
.L7066:
	.loc 1 34089 0
	movq	-8(%rbp), %rax	# insn, tmp1505
	movq	%rax, %rdi	# tmp1505,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7068	#,
	.loc 1 34091 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7065	#
.L7068:
	.loc 1 34093 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7069	#,
	.loc 1 34093 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1506
	movq	%rax, %rdi	# tmp1506,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7069	#,
	.loc 1 34095 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7065	#
.L7069:
	.loc 1 34097 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7070	#,
	.loc 1 34097 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1507
	movq	%rax, %rdi	# tmp1507,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7071	#,
	movq	-8(%rbp), %rax	# insn, tmp1508
	movq	%rax, %rdi	# tmp1508,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7070	#,
.L7071:
	.loc 1 34099 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7065	#
.L7070:
	.loc 1 34103 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34105 0
	jmp	.L6906	#
.L7065:
	jmp	.L6906	#
.L6877:
	.loc 1 34110 0
	movq	-8(%rbp), %rax	# insn, tmp1509
	movq	%rax, %rdi	# tmp1509,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57553
	jne	.L7072	#,
	.loc 1 34110 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1510
	movq	%rax, %rdi	# tmp1510,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7072	#,
	movq	-8(%rbp), %rax	# insn, tmp1511
	movq	%rax, %rdi	# tmp1511,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7072	#,
	.loc 1 34112 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7073	#
.L7072:
	.loc 1 34114 0
	movq	-8(%rbp), %rax	# insn, tmp1512
	movq	%rax, %rdi	# tmp1512,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57553
	jne	.L7074	#,
	.loc 1 34114 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1513
	movq	%rax, %rdi	# tmp1513,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7074	#,
	movq	-8(%rbp), %rax	# insn, tmp1514
	movq	%rax, %rdi	# tmp1514,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7075	#,
	movq	-8(%rbp), %rax	# insn, tmp1515
	movq	%rax, %rdi	# tmp1515,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7074	#,
.L7075:
	.loc 1 34116 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7073	#
.L7074:
	.loc 1 34118 0
	movq	-8(%rbp), %rax	# insn, tmp1516
	movq	%rax, %rdi	# tmp1516,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7076	#,
	.loc 1 34120 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7073	#
.L7076:
	.loc 1 34122 0
	movq	-8(%rbp), %rax	# insn, tmp1517
	movq	%rax, %rdi	# tmp1517,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57553
	jne	.L7077	#,
	.loc 1 34122 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1518
	movq	%rax, %rdi	# tmp1518,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7077	#,
	.loc 1 34124 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7073	#
.L7077:
	.loc 1 34126 0
	movq	-8(%rbp), %rax	# insn, tmp1519
	movq	%rax, %rdi	# tmp1519,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57553
	jne	.L7078	#,
	.loc 1 34126 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1520
	movq	%rax, %rdi	# tmp1520,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7079	#,
	movq	-8(%rbp), %rax	# insn, tmp1521
	movq	%rax, %rdi	# tmp1521,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7078	#,
.L7079:
	.loc 1 34128 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7073	#
.L7078:
	.loc 1 34132 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34134 0
	jmp	.L6906	#
.L7073:
	jmp	.L6906	#
.L6876:
	.loc 1 34156 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34157 0
	jmp	.L6906	#
.L6875:
	.loc 1 34226 0
	movq	-8(%rbp), %rax	# insn, tmp1522
	movq	%rax, %rdi	# tmp1522,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7080	#,
	.loc 1 34226 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1523
	movq	%rax, %rdi	# tmp1523,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7080	#,
	.loc 1 34228 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7081	#
.L7080:
	.loc 1 34230 0
	movq	-8(%rbp), %rax	# insn, tmp1524
	movq	%rax, %rdi	# tmp1524,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7082	#,
	.loc 1 34230 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1525
	movq	%rax, %rdi	# tmp1525,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7083	#,
	movq	-8(%rbp), %rax	# insn, tmp1526
	movq	%rax, %rdi	# tmp1526,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7082	#,
.L7083:
	.loc 1 34232 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7081	#
.L7082:
	.loc 1 34234 0
	movq	-8(%rbp), %rax	# insn, tmp1527
	movq	%rax, %rdi	# tmp1527,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7084	#,
	.loc 1 34236 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7081	#
.L7084:
	.loc 1 34238 0
	movq	-8(%rbp), %rax	# insn, tmp1528
	movq	%rax, %rdi	# tmp1528,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7085	#,
	.loc 1 34240 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7081	#
.L7085:
	.loc 1 34242 0
	movq	-8(%rbp), %rax	# insn, tmp1529
	movq	%rax, %rdi	# tmp1529,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7086	#,
	.loc 1 34242 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1530
	movq	%rax, %rdi	# tmp1530,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7087	#,
.L7086:
	.loc 1 34244 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7081	#
.L7087:
	.loc 1 34248 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34250 0
	jmp	.L6906	#
.L7081:
	jmp	.L6906	#
.L6874:
	.loc 1 34258 0
	movq	-8(%rbp), %rax	# insn, tmp1531
	movq	%rax, %rdi	# tmp1531,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7088	#,
	.loc 1 34260 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7089	#
.L7088:
	.loc 1 34262 0
	movq	-8(%rbp), %rax	# insn, tmp1532
	movq	%rax, %rdi	# tmp1532,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7090	#,
	.loc 1 34262 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1533
	movq	%rax, %rdi	# tmp1533,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7091	#,
.L7090:
	.loc 1 34264 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7089	#
.L7091:
	.loc 1 34268 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34270 0
	jmp	.L6906	#
.L7089:
	jmp	.L6906	#
.L6873:
	.loc 1 34278 0
	movq	-8(%rbp), %rax	# insn, tmp1534
	movq	%rax, %rdi	# tmp1534,
	call	extract_constrain_insn_cached	#
	.loc 1 34279 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5507
	testl	%eax, %eax	# which_alternative.5507
	jne	.L7092	#,
	.loc 1 34279 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1535
	movq	%rax, %rdi	# tmp1535,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7093	#,
	movq	-8(%rbp), %rax	# insn, tmp1536
	movq	%rax, %rdi	# tmp1536,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7092	#,
.L7093:
	.loc 1 34281 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L7094	#
.L7092:
	.loc 1 34283 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5508
	testl	%eax, %eax	# which_alternative.5508
	jne	.L7095	#,
	.loc 1 34283 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7096	#,
	movq	-8(%rbp), %rax	# insn, tmp1537
	movq	%rax, %rdi	# tmp1537,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7095	#,
.L7096:
	.loc 1 34285 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L7094	#
.L7095:
	.loc 1 34289 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34291 0
	jmp	.L6906	#
.L7094:
	jmp	.L6906	#
.L6872:
	.loc 1 34298 0
	movq	-8(%rbp), %rax	# insn, tmp1538
	movq	%rax, %rdi	# tmp1538,
	call	extract_insn_cached	#
	.loc 1 34299 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7097	#,
	.loc 1 34299 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1539
	movq	%rax, %rdi	# tmp1539,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7098	#,
.L7097:
	.loc 1 34301 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 34307 0
	jmp	.L6906	#
.L7098:
	.loc 1 34305 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34307 0
	jmp	.L6906	#
.L6871:
	.loc 1 34310 0
	movq	-8(%rbp), %rax	# insn, tmp1540
	movq	%rax, %rdi	# tmp1540,
	call	extract_constrain_insn_cached	#
	.loc 1 34311 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5509
	cmpl	$1, %eax	#, which_alternative.5509
	jne	.L7100	#,
	.loc 1 34311 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7101	#,
	movq	-8(%rbp), %rax	# insn, tmp1541
	movq	%rax, %rdi	# tmp1541,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7100	#,
.L7101:
	.loc 1 34313 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 34319 0
	jmp	.L6906	#
.L7100:
	.loc 1 34317 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34319 0
	jmp	.L6906	#
.L6870:
	.loc 1 34335 0
	movq	-8(%rbp), %rax	# insn, tmp1542
	movq	%rax, %rdi	# tmp1542,
	call	extract_constrain_insn_cached	#
	.loc 1 34336 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5510
	testl	%eax, %eax	# which_alternative.5510
	jne	.L7103	#,
	.loc 1 34336 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7104	#,
	movq	-8(%rbp), %rax	# insn, tmp1543
	movq	%rax, %rdi	# tmp1543,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7103	#,
.L7104:
	.loc 1 34338 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 34344 0
	jmp	.L6906	#
.L7103:
	.loc 1 34342 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34344 0
	jmp	.L6906	#
.L6869:
	.loc 1 34350 0
	movq	-8(%rbp), %rax	# insn, tmp1544
	movq	%rax, %rdi	# tmp1544,
	call	extract_constrain_insn_cached	#
	.loc 1 34351 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5511
	cmpl	$1, %eax	#, which_alternative.5511
	jne	.L7106	#,
	.loc 1 34351 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1545
	movq	%rax, %rdi	# tmp1545,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7107	#,
	movq	-8(%rbp), %rax	# insn, tmp1546
	movq	%rax, %rdi	# tmp1546,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7106	#,
.L7107:
	.loc 1 34353 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L7108	#
.L7106:
	.loc 1 34355 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7109	#,
	.loc 1 34355 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1547
	movq	%rax, %rdi	# tmp1547,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7110	#,
.L7109:
	.loc 1 34357 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L7108	#
.L7110:
	.loc 1 34361 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34363 0
	jmp	.L6906	#
.L7108:
	jmp	.L6906	#
.L6868:
	.loc 1 34366 0
	movq	-8(%rbp), %rax	# insn, tmp1548
	movq	%rax, %rdi	# tmp1548,
	call	extract_constrain_insn_cached	#
	.loc 1 34367 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5512
	testl	%eax, %eax	# which_alternative.5512
	je	.L7111	#,
	.loc 1 34367 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5513
	cmpl	$1, %eax	#, which_alternative.5513
	jne	.L7112	#,
.L7111:
	.loc 1 34367 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1549
	movq	%rax, %rdi	# tmp1549,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7113	#,
	.loc 1 34367 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1550
	movq	%rax, %rdi	# tmp1550,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7112	#,
.L7113:
	.loc 1 34367 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5514
	cmpl	$1, %eax	#, which_alternative.5514
	jne	.L7112	#,
	.loc 1 34369 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L7114	#
.L7112:
	.loc 1 34371 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5515
	testl	%eax, %eax	# which_alternative.5515
	je	.L7115	#,
	.loc 1 34371 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5516
	cmpl	$1, %eax	#, which_alternative.5516
	jne	.L7116	#,
.L7115:
	.loc 1 34371 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7117	#,
	movq	-8(%rbp), %rax	# insn, tmp1551
	movq	%rax, %rdi	# tmp1551,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7116	#,
.L7117:
	.loc 1 34373 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L7114	#
.L7116:
	.loc 1 34377 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34379 0
	jmp	.L6906	#
.L7114:
	jmp	.L6906	#
.L6867:
	.loc 1 34382 0
	movq	-8(%rbp), %rax	# insn, tmp1552
	movq	%rax, %rdi	# tmp1552,
	call	extract_constrain_insn_cached	#
	.loc 1 34383 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5517
	cmpl	$1, %eax	#, which_alternative.5517
	jne	.L7118	#,
	.loc 1 34383 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1553
	movq	%rax, %rdi	# tmp1553,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7119	#,
.L7118:
	.loc 1 34385 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34391 0
	jmp	.L6906	#
.L7119:
	.loc 1 34389 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34391 0
	jmp	.L6906	#
.L6866:
	.loc 1 34395 0
	movq	-8(%rbp), %rax	# insn, tmp1554
	movq	%rax, %rdi	# tmp1554,
	call	extract_constrain_insn_cached	#
	.loc 1 34396 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5518
	testl	%eax, %eax	# which_alternative.5518
	jne	.L7121	#,
	.loc 1 34398 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7122	#
.L7121:
	.loc 1 34400 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5519
	cmpl	$1, %eax	#, which_alternative.5519
	jne	.L7123	#,
	.loc 1 34400 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1555
	movq	%rax, %rdi	# tmp1555,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57552
	jne	.L7123	#,
	.loc 1 34402 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7122	#
.L7123:
	.loc 1 34404 0
	movq	-8(%rbp), %rax	# insn, tmp1556
	movq	%rax, %rdi	# tmp1556,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7124	#,
	.loc 1 34404 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1557
	movq	%rax, %rdi	# tmp1557,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7125	#,
.L7124:
	.loc 1 34406 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7122	#
.L7125:
	.loc 1 34410 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34412 0
	jmp	.L6906	#
.L7122:
	jmp	.L6906	#
.L6865:
	.loc 1 34418 0
	movq	-8(%rbp), %rax	# insn, tmp1558
	movq	%rax, %rdi	# tmp1558,
	call	extract_constrain_insn_cached	#
	.loc 1 34419 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5520
	testl	%eax, %eax	# which_alternative.5520
	je	.L7126	#,
	.loc 1 34419 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5521
	cmpl	$1, %eax	#, which_alternative.5521
	je	.L7126	#,
	.loc 1 34419 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5522
	cmpl	$2, %eax	#, which_alternative.5522
	jne	.L7127	#,
.L7126:
	movq	-8(%rbp), %rax	# insn, tmp1559
	movq	%rax, %rdi	# tmp1559,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57552
	je	.L7128	#,
	movq	-8(%rbp), %rax	# insn, tmp1560
	movq	%rax, %rdi	# tmp1560,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7127	#,
.L7128:
	.loc 1 34421 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L7129	#
.L7127:
	.loc 1 34423 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5523
	testl	%eax, %eax	# which_alternative.5523
	je	.L7130	#,
	.loc 1 34423 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5524
	cmpl	$1, %eax	#, which_alternative.5524
	je	.L7130	#,
	.loc 1 34423 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5525
	cmpl	$2, %eax	#, which_alternative.5525
	jne	.L7131	#,
.L7130:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7132	#,
	movq	-8(%rbp), %rax	# insn, tmp1561
	movq	%rax, %rdi	# tmp1561,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7131	#,
.L7132:
	.loc 1 34425 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L7129	#
.L7131:
	.loc 1 34429 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34431 0
	jmp	.L6906	#
.L7129:
	jmp	.L6906	#
.L6864:
	.loc 1 34435 0
	movq	-8(%rbp), %rax	# insn, tmp1562
	movq	%rax, %rdi	# tmp1562,
	call	extract_constrain_insn_cached	#
	.loc 1 34436 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5526
	testl	%eax, %eax	# which_alternative.5526
	je	.L7133	#,
	.loc 1 34436 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5527
	cmpl	$1, %eax	#, which_alternative.5527
	je	.L7133	#,
	.loc 1 34436 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5528
	cmpl	$2, %eax	#, which_alternative.5528
	jne	.L7134	#,
.L7133:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7135	#,
	movq	-8(%rbp), %rax	# insn, tmp1563
	movq	%rax, %rdi	# tmp1563,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7134	#,
.L7135:
	.loc 1 34438 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 34444 0
	jmp	.L6906	#
.L7134:
	.loc 1 34442 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34444 0
	jmp	.L6906	#
.L6863:
	.loc 1 34447 0
	movq	-8(%rbp), %rax	# insn, tmp1564
	movq	%rax, %rdi	# tmp1564,
	call	extract_constrain_insn_cached	#
	.loc 1 34448 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5529
	testl	%eax, %eax	# which_alternative.5529
	je	.L7137	#,
	.loc 1 34448 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5530
	cmpl	$1, %eax	#, which_alternative.5530
	je	.L7137	#,
	.loc 1 34448 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5531
	cmpl	$2, %eax	#, which_alternative.5531
	jne	.L7138	#,
.L7137:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7139	#,
	movq	-8(%rbp), %rax	# insn, tmp1565
	movq	%rax, %rdi	# tmp1565,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7138	#,
.L7139:
	.loc 1 34450 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L7140	#
.L7138:
	.loc 1 34452 0
	movq	-8(%rbp), %rax	# insn, tmp1566
	movq	%rax, %rdi	# tmp1566,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7141	#,
	.loc 1 34452 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5532
	testl	%eax, %eax	# which_alternative.5532
	je	.L7141	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5533
	cmpl	$1, %eax	#, which_alternative.5533
	je	.L7141	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5534
	cmpl	$2, %eax	#, which_alternative.5534
	je	.L7141	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5535
	cmpl	$3, %eax	#, which_alternative.5535
	je	.L7142	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5536
	cmpl	$4, %eax	#, which_alternative.5536
	je	.L7142	#,
.L7141:
	.loc 1 34454 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7140	#
.L7142:
	.loc 1 34458 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34460 0
	jmp	.L6906	#
.L7140:
	jmp	.L6906	#
.L6862:
	.loc 1 34464 0
	movq	-8(%rbp), %rax	# insn, tmp1567
	movq	%rax, %rdi	# tmp1567,
	call	extract_constrain_insn_cached	#
	.loc 1 34465 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5537
	cmpl	$1, %eax	#, which_alternative.5537
	jne	.L7143	#,
	.loc 1 34465 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7144	#,
.L7143:
	.loc 1 34467 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34473 0
	jmp	.L6906	#
.L7144:
	.loc 1 34471 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34473 0
	jmp	.L6906	#
.L6861:
	.loc 1 34476 0
	movq	-8(%rbp), %rax	# insn, tmp1568
	movq	%rax, %rdi	# tmp1568,
	call	extract_constrain_insn_cached	#
	.loc 1 34477 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5538
	testl	%eax, %eax	# which_alternative.5538
	jne	.L7146	#,
	.loc 1 34477 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7147	#,
.L7146:
	.loc 1 34479 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34485 0
	jmp	.L6906	#
.L7147:
	.loc 1 34483 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34485 0
	jmp	.L6906	#
.L6860:
	.loc 1 34488 0
	movq	-8(%rbp), %rax	# insn, tmp1569
	movq	%rax, %rdi	# tmp1569,
	call	extract_constrain_insn_cached	#
	.loc 1 34489 0
	movq	-8(%rbp), %rax	# insn, tmp1570
	movq	%rax, %rdi	# tmp1570,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7149	#,
	.loc 1 34489 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7149	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5539
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5540
	movl	%eax, %ecx	# ix86_cpu.5541, tmp1829
	sarl	%cl, %edx	# tmp1829, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7150	#,
.L7149:
	.loc 1 34491 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34497 0
	jmp	.L6906	#
.L7150:
	.loc 1 34495 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34497 0
	jmp	.L6906	#
.L6859:
	.loc 1 34500 0
	movq	-8(%rbp), %rax	# insn, tmp1571
	movq	%rax, %rdi	# tmp1571,
	call	extract_constrain_insn_cached	#
	.loc 1 34501 0
	movq	-8(%rbp), %rax	# insn, tmp1572
	movq	%rax, %rdi	# tmp1572,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7152	#,
	.loc 1 34501 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5542
	cmpl	$3, %eax	#, which_alternative.5542
	jne	.L7153	#,
	.loc 1 34501 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5543
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5544
	movl	%eax, %ecx	# ix86_cpu.5545, tmp1831
	sarl	%cl, %edx	# tmp1831, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7154	#,
	.loc 1 34501 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5546
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5547
	movl	%eax, %ecx	# ix86_cpu.5548, tmp1833
	sarl	%cl, %edx	# tmp1833, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7154	#,
.L7153:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5549
	cmpl	$3, %eax	#, which_alternative.5549
	jne	.L7155	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5550
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5551
	movl	%eax, %ecx	# ix86_cpu.5552, tmp1835
	sarl	%cl, %edx	# tmp1835, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7152	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5553
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5554
	movl	%eax, %ecx	# ix86_cpu.5555, tmp1837
	sarl	%cl, %edx	# tmp1837, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7152	#,
.L7155:
	.loc 1 34501 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5556
	cmpl	$3, %eax	#, which_alternative.5556
	je	.L7152	#,
	.loc 1 34501 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5557
	cmpl	$5, %eax	#, which_alternative.5557
	je	.L7152	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5558
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5559
	movl	%eax, %ecx	# ix86_cpu.5560, tmp1839
	sarl	%cl, %edx	# tmp1839, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7154	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5561
	cmpl	$2, %eax	#, which_alternative.5561
	jne	.L7154	#,
.L7152:
	.loc 1 34503 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34509 0
	jmp	.L6906	#
.L7154:
	.loc 1 34507 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34509 0
	jmp	.L6906	#
.L6858:
	.loc 1 34515 0
	movq	-8(%rbp), %rax	# insn, tmp1573
	movq	%rax, %rdi	# tmp1573,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7157	#,
	.loc 1 34515 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1574
	movq	%rax, %rdi	# tmp1574,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57553
	je	.L7158	#,
.L7157:
	.loc 1 34517 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34523 0
	jmp	.L6906	#
.L7158:
	.loc 1 34521 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34523 0
	jmp	.L6906	#
.L6857:
	.loc 1 34527 0
	movq	-8(%rbp), %rax	# insn, tmp1575
	movq	%rax, %rdi	# tmp1575,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7160	#,
	.loc 1 34529 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34535 0
	jmp	.L6906	#
.L7160:
	.loc 1 34533 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34535 0
	jmp	.L6906	#
.L6856:
	.loc 1 34555 0
	movq	-8(%rbp), %rax	# insn, tmp1576
	movq	%rax, %rdi	# tmp1576,
	call	extract_insn_cached	#
	.loc 1 34556 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7162	#,
	.loc 1 34558 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7163	#
.L7162:
	.loc 1 34560 0
	movq	-8(%rbp), %rax	# insn, tmp1577
	movq	%rax, %rdi	# tmp1577,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57552
	jne	.L7164	#,
	.loc 1 34562 0
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7163	#
.L7164:
	.loc 1 34566 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34568 0
	jmp	.L6906	#
.L7163:
	jmp	.L6906	#
.L6855:
	.loc 1 34574 0
	movq	-8(%rbp), %rax	# insn, tmp1578
	movq	%rax, %rdi	# tmp1578,
	call	extract_insn_cached	#
	.loc 1 34575 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7165	#,
	.loc 1 34577 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34583 0
	jmp	.L6906	#
.L7165:
	.loc 1 34581 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34583 0
	jmp	.L6906	#
.L6854:
	.loc 1 34593 0
	movq	-8(%rbp), %rax	# insn, tmp1579
	movq	%rax, %rdi	# tmp1579,
	call	extract_insn_cached	#
	.loc 1 34594 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7167	#,
	.loc 1 34596 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34602 0
	jmp	.L6906	#
.L7167:
	.loc 1 34600 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34602 0
	jmp	.L6906	#
.L6853:
	.loc 1 34638 0
	movq	-8(%rbp), %rax	# insn, tmp1580
	movq	%rax, %rdi	# tmp1580,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7169	#,
	.loc 1 34640 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34646 0
	jmp	.L6906	#
.L7169:
	.loc 1 34644 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 34646 0
	jmp	.L6906	#
.L6851:
	.loc 1 34649 0
	movq	-8(%rbp), %rax	# insn, tmp1581
	movq	32(%rax), %rax	# insn_55->fld[3].rtx, D.57550
	movzwl	(%rax), %eax	# _746->code, D.57555
	cmpw	$40, %ax	#, D.57555
	je	.L6850	#,
	.loc 1 34650 0
	movq	-8(%rbp), %rax	# insn, tmp1582
	movq	32(%rax), %rax	# insn_55->fld[3].rtx, D.57550
	movq	%rax, %rdi	# D.57550,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57549
	jns	.L6850	#,
	.loc 1 34651 0
	movq	-8(%rbp), %rax	# insn, tmp1583
	movl	$__FUNCTION__.25501, %ecx	#,
	movl	$34651, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1583,
	call	_fatal_insn_not_found	#
.L6850:
	.loc 1 34653 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 34654 0
	nop
.L6906:
	.loc 1 34658 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp1584
	movq	%rax, -8(%rbp)	# tmp1584, insn
	.loc 1 34659 0
	cmpl	$12, -12(%rbp)	#, casenum
	ja	.L7171	#,
	movl	-12(%rbp), %eax	# casenum, tmp1585
	movq	.L7173(,%rax,8), %rax	#, tmp1586
	jmp	*%rax	# tmp1586
	.section	.rodata
	.align 8
	.align 4
.L7173:
	.quad	.L7172
	.quad	.L7174
	.quad	.L7175
	.quad	.L7176
	.quad	.L7177
	.quad	.L7178
	.quad	.L7179
	.quad	.L7180
	.quad	.L7181
	.quad	.L7182
	.quad	.L7183
	.quad	.L7184
	.quad	.L7185
	.text
.L7172:
	.loc 1 34662 0
	movl	$11, %eax	#, D.57549
	jmp	.L7186	#
.L7174:
	.loc 1 34665 0
	movl	$12, %eax	#, D.57549
	jmp	.L7186	#
.L7175:
	.loc 1 34668 0
	movl	$46, %eax	#, D.57549
	jmp	.L7186	#
.L7176:
	.loc 1 34671 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7177:
	.loc 1 34674 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7178:
	.loc 1 34677 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7179:
	.loc 1 34680 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7180:
	.loc 1 34683 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7181:
	.loc 1 34686 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7182:
	.loc 1 34689 0
	movq	-8(%rbp), %rax	# insn, tmp1587
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, D.57549
	testl	%eax, %eax	# D.57549
	js	.L7187	#,
	.loc 1 34689 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1588
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, iftmp.5562
	jmp	.L7188	#
.L7187:
	.loc 1 34689 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1589
	movq	%rax, %rdi	# tmp1589,
	call	recog_memoized_1	#
.L7188:
	.loc 1 34689 0 discriminator 3
	addl	$1, %eax	#, tmp1590
	cmpl	$657, %eax	#, tmp1590
	ja	.L7189	#,
	movl	%eax, %eax	# tmp1590, tmp1591
	movq	.L7191(,%rax,8), %rax	#, tmp1592
	jmp	*%rax	# tmp1592
	.section	.rodata
	.align 8
	.align 4
.L7191:
	.quad	.L7190
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7193
	.quad	.L7193
	.quad	.L7193
	.quad	.L7194
	.quad	.L7194
	.quad	.L7195
	.quad	.L7195
	.quad	.L7196
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7193
	.quad	.L7193
	.quad	.L7197
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7189
	.quad	.L7192
	.quad	.L7195
	.quad	.L7193
	.quad	.L7193
	.quad	.L7198
	.quad	.L7189
	.quad	.L7192
	.quad	.L7195
	.quad	.L7189
	.quad	.L7189
	.quad	.L7197
	.quad	.L7197
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7197
	.quad	.L7199
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7200
	.quad	.L7193
	.quad	.L7194
	.quad	.L7194
	.quad	.L7195
	.quad	.L7195
	.quad	.L7189
	.quad	.L7196
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7201
	.quad	.L7201
	.quad	.L7202
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7195
	.quad	.L7189
	.quad	.L7195
	.quad	.L7203
	.quad	.L7189
	.quad	.L7195
	.quad	.L7203
	.quad	.L7189
	.quad	.L7189
	.quad	.L7204
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7195
	.quad	.L7192
	.quad	.L7195
	.quad	.L7195
	.quad	.L7192
	.quad	.L7192
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7196
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7196
	.quad	.L7196
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7196
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7196
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7195
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7195
	.quad	.L7195
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7205
	.quad	.L7206
	.quad	.L7206
	.quad	.L7207
	.quad	.L7189
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7189
	.quad	.L7208
	.quad	.L7192
	.quad	.L7209
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7209
	.quad	.L7192
	.quad	.L7192
	.quad	.L7195
	.quad	.L7192
	.quad	.L7195
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7195
	.quad	.L7192
	.quad	.L7195
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7195
	.quad	.L7189
	.quad	.L7189
	.quad	.L7195
	.quad	.L7195
	.quad	.L7189
	.quad	.L7195
	.quad	.L7189
	.quad	.L7195
	.quad	.L7196
	.quad	.L7196
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7196
	.quad	.L7196
	.quad	.L7196
	.quad	.L7196
	.quad	.L7196
	.quad	.L7196
	.quad	.L7196
	.quad	.L7196
	.quad	.L7196
	.quad	.L7196
	.quad	.L7210
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7210
	.quad	.L7210
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7189
	.quad	.L7189
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7211
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7195
	.quad	.L7195
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7195
	.quad	.L7212
	.quad	.L7213
	.quad	.L7213
	.quad	.L7213
	.quad	.L7213
	.quad	.L7213
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7195
	.quad	.L7189
	.quad	.L7192
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7195
	.quad	.L7189
	.quad	.L7195
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7192
	.quad	.L7192
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7189
	.quad	.L7214
	.quad	.L7214
	.quad	.L7214
	.quad	.L7214
	.quad	.L7214
	.quad	.L7214
	.text
.L7214:
	.loc 1 34697 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1593
	movq	%rax, %rdi	# tmp1593,
	call	extract_insn_cached	#
	.loc 1 34698 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7215	#,
	.loc 1 34700 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7215:
	.loc 1 34704 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7213:
	.loc 1 34712 0
	movq	-8(%rbp), %rax	# insn, tmp1594
	movq	%rax, %rdi	# tmp1594,
	call	extract_insn_cached	#
	.loc 1 34713 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7216	#,
	.loc 1 34715 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7216:
	.loc 1 34719 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7212:
	.loc 1 34723 0
	movq	-8(%rbp), %rax	# insn, tmp1595
	movq	%rax, %rdi	# tmp1595,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57553
	je	.L7217	#,
	.loc 1 34725 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7217:
	.loc 1 34729 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7211:
	.loc 1 34792 0
	movq	-8(%rbp), %rax	# insn, tmp1596
	movq	%rax, %rdi	# tmp1596,
	call	extract_insn_cached	#
	.loc 1 34793 0
	movq	-8(%rbp), %rax	# insn, tmp1597
	movq	%rax, %rdi	# tmp1597,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7218	#,
	.loc 1 34793 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7218	#,
	movq	-8(%rbp), %rax	# insn, tmp1598
	movq	%rax, %rdi	# tmp1598,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7219	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7219	#,
.L7218:
	.loc 1 34795 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1599
	movq	%rax, %rdi	# tmp1599,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7220	#,
	.loc 1 34795 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7221	#,
.L7220:
	.loc 1 34797 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7221:
	.loc 1 34801 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7219:
	.loc 1 34806 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7210:
	.loc 1 34812 0
	movq	-8(%rbp), %rax	# insn, tmp1600
	movq	%rax, %rdi	# tmp1600,
	call	extract_constrain_insn_cached	#
	.loc 1 34813 0
	movq	-8(%rbp), %rax	# insn, tmp1601
	movq	%rax, %rdi	# tmp1601,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7222	#,
	.loc 1 34813 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5563
	cmpl	$1, %eax	#, which_alternative.5563
	jne	.L7222	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7222	#,
	movq	-8(%rbp), %rax	# insn, tmp1602
	movq	%rax, %rdi	# tmp1602,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7223	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5564
	cmpl	$1, %eax	#, which_alternative.5564
	jne	.L7223	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7223	#,
.L7222:
	.loc 1 34815 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1603
	movq	%rax, %rdi	# tmp1603,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7224	#,
	.loc 1 34815 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5565
	cmpl	$1, %eax	#, which_alternative.5565
	jne	.L7224	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7225	#,
.L7224:
	.loc 1 34817 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7225:
	.loc 1 34821 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7223:
	.loc 1 34826 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7209:
	.loc 1 34831 0
	movq	-8(%rbp), %rax	# insn, tmp1604
	movq	%rax, %rdi	# tmp1604,
	call	extract_constrain_insn_cached	#
	.loc 1 34832 0
	movq	-8(%rbp), %rax	# insn, tmp1605
	movq	%rax, %rdi	# tmp1605,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7226	#,
	.loc 1 34832 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5566
	testl	%eax, %eax	# which_alternative.5566
	je	.L7227	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5567
	cmpl	$1, %eax	#, which_alternative.5567
	jne	.L7226	#,
.L7227:
	.loc 1 34832 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1606
	movq	%rax, %rdi	# tmp1606,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7228	#,
	.loc 1 34832 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5568
	testl	%eax, %eax	# which_alternative.5568
	je	.L7226	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5569
	cmpl	$1, %eax	#, which_alternative.5569
	jne	.L7228	#,
.L7226:
	.loc 1 34834 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1607
	movq	%rax, %rdi	# tmp1607,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7229	#,
	.loc 1 34834 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5570
	testl	%eax, %eax	# which_alternative.5570
	je	.L7230	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5571
	cmpl	$1, %eax	#, which_alternative.5571
	je	.L7230	#,
.L7229:
	.loc 1 34836 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7230:
	.loc 1 34840 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7228:
	.loc 1 34845 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7208:
	.loc 1 34849 0
	movq	-8(%rbp), %rax	# insn, tmp1608
	movq	%rax, %rdi	# tmp1608,
	call	extract_constrain_insn_cached	#
	.loc 1 34850 0
	movq	-8(%rbp), %rax	# insn, tmp1609
	movq	%rax, %rdi	# tmp1609,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7231	#,
	.loc 1 34850 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5572
	testl	%eax, %eax	# which_alternative.5572
	je	.L7232	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5573
	cmpl	$1, %eax	#, which_alternative.5573
	je	.L7232	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5574
	cmpl	$2, %eax	#, which_alternative.5574
	jne	.L7231	#,
.L7232:
	.loc 1 34850 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1610
	movq	%rax, %rdi	# tmp1610,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7233	#,
	.loc 1 34850 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5575
	testl	%eax, %eax	# which_alternative.5575
	je	.L7231	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5576
	cmpl	$1, %eax	#, which_alternative.5576
	je	.L7231	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5577
	cmpl	$2, %eax	#, which_alternative.5577
	jne	.L7233	#,
.L7231:
	.loc 1 34852 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1611
	movq	%rax, %rdi	# tmp1611,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7234	#,
	.loc 1 34852 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5578
	testl	%eax, %eax	# which_alternative.5578
	je	.L7235	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5579
	cmpl	$1, %eax	#, which_alternative.5579
	je	.L7235	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5580
	cmpl	$2, %eax	#, which_alternative.5580
	je	.L7235	#,
.L7234:
	.loc 1 34854 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7235:
	.loc 1 34858 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7233:
	.loc 1 34863 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7207:
	.loc 1 34867 0
	movq	-8(%rbp), %rax	# insn, tmp1612
	movq	%rax, %rdi	# tmp1612,
	call	extract_constrain_insn_cached	#
	.loc 1 34868 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5581
	testl	%eax, %eax	# which_alternative.5581
	je	.L7236	#,
	.loc 1 34868 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5582
	cmpl	$2, %eax	#, which_alternative.5582
	jne	.L7237	#,
.L7236:
	.loc 1 34868 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5583
	testl	%eax, %eax	# which_alternative.5583
	je	.L7237	#,
	.loc 1 34868 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5584
	cmpl	$2, %eax	#, which_alternative.5584
	jne	.L7238	#,
.L7237:
	.loc 1 34870 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5585
	testl	%eax, %eax	# which_alternative.5585
	je	.L7239	#,
	.loc 1 34870 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5586
	cmpl	$2, %eax	#, which_alternative.5586
	je	.L7239	#,
	.loc 1 34872 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7239:
	.loc 1 34876 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7238:
	.loc 1 34881 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7206:
	.loc 1 34886 0
	movq	-8(%rbp), %rax	# insn, tmp1613
	movq	%rax, %rdi	# tmp1613,
	call	extract_constrain_insn_cached	#
	.loc 1 34887 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5587
	cmpl	$1, %eax	#, which_alternative.5587
	jne	.L7240	#,
	.loc 1 34889 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7240:
	.loc 1 34893 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7205:
	.loc 1 34897 0
	movq	-8(%rbp), %rax	# insn, tmp1614
	movq	%rax, %rdi	# tmp1614,
	call	extract_constrain_insn_cached	#
	.loc 1 34898 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5588
	cmpl	$1, %eax	#, which_alternative.5588
	je	.L7241	#,
	.loc 1 34898 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5589
	cmpl	$3, %eax	#, which_alternative.5589
	je	.L7241	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5590
	cmpl	$1, %eax	#, which_alternative.5590
	je	.L7242	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5591
	cmpl	$3, %eax	#, which_alternative.5591
	je	.L7242	#,
.L7241:
	.loc 1 34900 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5592
	cmpl	$1, %eax	#, which_alternative.5592
	je	.L7243	#,
	.loc 1 34900 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5593
	cmpl	$3, %eax	#, which_alternative.5593
	jne	.L7244	#,
.L7243:
	.loc 1 34902 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7244:
	.loc 1 34906 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7242:
	.loc 1 34911 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7204:
	.loc 1 34915 0
	movq	-8(%rbp), %rax	# insn, tmp1615
	movq	%rax, %rdi	# tmp1615,
	call	extract_constrain_insn_cached	#
	.loc 1 34916 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5594
	cmpl	$1, %eax	#, which_alternative.5594
	jne	.L7245	#,
	.loc 1 34916 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1616
	movq	%rax, %rdi	# tmp1616,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7245	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5595
	cmpl	$1, %eax	#, which_alternative.5595
	jne	.L7246	#,
	movq	-8(%rbp), %rax	# insn, tmp1617
	movq	%rax, %rdi	# tmp1617,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7246	#,
.L7245:
	.loc 1 34918 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5596
	cmpl	$1, %eax	#, which_alternative.5596
	jne	.L7247	#,
	.loc 1 34918 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1618
	movq	%rax, %rdi	# tmp1618,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7248	#,
.L7247:
	.loc 1 34920 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7248:
	.loc 1 34924 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7246:
	.loc 1 34929 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7203:
	.loc 1 34934 0
	movq	-8(%rbp), %rax	# insn, tmp1619
	movq	%rax, %rdi	# tmp1619,
	call	extract_constrain_insn_cached	#
	.loc 1 34935 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5597
	testl	%eax, %eax	# which_alternative.5597
	jne	.L7249	#,
	.loc 1 34937 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7249:
	.loc 1 34941 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7202:
	.loc 1 34945 0
	movq	-8(%rbp), %rax	# insn, tmp1620
	movq	%rax, %rdi	# tmp1620,
	call	extract_constrain_insn_cached	#
	.loc 1 34946 0
	movq	-8(%rbp), %rax	# insn, tmp1621
	movq	%rax, %rdi	# tmp1621,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7250	#,
	.loc 1 34946 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5598
	cmpl	$3, %eax	#, which_alternative.5598
	je	.L7251	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5599
	cmpl	$4, %eax	#, which_alternative.5599
	jne	.L7250	#,
.L7251:
	.loc 1 34946 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1622
	movq	%rax, %rdi	# tmp1622,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7252	#,
	.loc 1 34946 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5600
	testl	%eax, %eax	# which_alternative.5600
	je	.L7252	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5601
	cmpl	$1, %eax	#, which_alternative.5601
	je	.L7252	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5602
	cmpl	$2, %eax	#, which_alternative.5602
	je	.L7252	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5603
	cmpl	$3, %eax	#, which_alternative.5603
	je	.L7250	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5604
	cmpl	$4, %eax	#, which_alternative.5604
	je	.L7250	#,
.L7252:
	.loc 1 34946 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5605
	testl	%eax, %eax	# which_alternative.5605
	je	.L7250	#,
	.loc 1 34946 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5606
	cmpl	$1, %eax	#, which_alternative.5606
	je	.L7250	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5607
	cmpl	$2, %eax	#, which_alternative.5607
	jne	.L7253	#,
.L7250:
	.loc 1 34948 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1623
	movq	%rax, %rdi	# tmp1623,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7254	#,
	.loc 1 34948 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5608
	testl	%eax, %eax	# which_alternative.5608
	je	.L7254	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5609
	cmpl	$1, %eax	#, which_alternative.5609
	je	.L7254	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5610
	cmpl	$2, %eax	#, which_alternative.5610
	je	.L7254	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5611
	cmpl	$3, %eax	#, which_alternative.5611
	je	.L7255	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5612
	cmpl	$4, %eax	#, which_alternative.5612
	je	.L7255	#,
.L7254:
	.loc 1 34950 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7255:
	.loc 1 34954 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7253:
	.loc 1 34959 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7201:
	.loc 1 34964 0
	movq	-8(%rbp), %rax	# insn, tmp1624
	movq	%rax, %rdi	# tmp1624,
	call	extract_constrain_insn_cached	#
	.loc 1 34965 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5613
	cmpl	$1, %eax	#, which_alternative.5613
	jne	.L7256	#,
	.loc 1 34965 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7256	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5614
	cmpl	$1, %eax	#, which_alternative.5614
	jne	.L7257	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7257	#,
.L7256:
	.loc 1 34967 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5615
	cmpl	$1, %eax	#, which_alternative.5615
	jne	.L7258	#,
	.loc 1 34967 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7259	#,
.L7258:
	.loc 1 34969 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7259:
	.loc 1 34973 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7257:
	.loc 1 34978 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7200:
	.loc 1 34982 0
	movq	-8(%rbp), %rax	# insn, tmp1625
	movq	%rax, %rdi	# tmp1625,
	call	extract_constrain_insn_cached	#
	.loc 1 34983 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5616
	testl	%eax, %eax	# which_alternative.5616
	jne	.L7260	#,
	.loc 1 34983 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7260	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5617
	testl	%eax, %eax	# which_alternative.5617
	jne	.L7261	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7261	#,
.L7260:
	.loc 1 34985 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5618
	testl	%eax, %eax	# which_alternative.5618
	jne	.L7262	#,
	.loc 1 34985 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7263	#,
.L7262:
	.loc 1 34987 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7263:
	.loc 1 34991 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7261:
	.loc 1 34996 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7199:
	.loc 1 35000 0
	movq	-8(%rbp), %rax	# insn, tmp1626
	movq	%rax, %rdi	# tmp1626,
	call	extract_constrain_insn_cached	#
	.loc 1 35001 0
	movq	-8(%rbp), %rax	# insn, tmp1627
	movq	%rax, %rdi	# tmp1627,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7264	#,
	.loc 1 35001 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7264	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5619
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5620
	movl	%eax, %ecx	# ix86_cpu.5621, tmp1841
	sarl	%cl, %edx	# tmp1841, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	jne	.L7264	#,
	movq	-8(%rbp), %rax	# insn, tmp1628
	movq	%rax, %rdi	# tmp1628,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7265	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7265	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5622
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5623
	movl	%eax, %ecx	# ix86_cpu.5624, tmp1843
	sarl	%cl, %edx	# tmp1843, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	jne	.L7265	#,
.L7264:
	.loc 1 35003 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1629
	movq	%rax, %rdi	# tmp1629,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7266	#,
	.loc 1 35003 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7266	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5625
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5626
	movl	%eax, %ecx	# ix86_cpu.5627, tmp1845
	sarl	%cl, %edx	# tmp1845, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7267	#,
.L7266:
	.loc 1 35005 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7267:
	.loc 1 35009 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7265:
	.loc 1 35014 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7198:
	.loc 1 35018 0
	movq	-8(%rbp), %rax	# insn, tmp1630
	movq	%rax, %rdi	# tmp1630,
	call	extract_constrain_insn_cached	#
	.loc 1 35019 0
	movq	-8(%rbp), %rax	# insn, tmp1631
	movq	%rax, %rdi	# tmp1631,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7268	#,
	.loc 1 35019 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5628
	cmpl	$3, %eax	#, which_alternative.5628
	jne	.L7269	#,
	.loc 1 35019 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5629
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5630
	movl	%eax, %ecx	# ix86_cpu.5631, tmp1847
	sarl	%cl, %edx	# tmp1847, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7270	#,
	.loc 1 35019 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5632
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5633
	movl	%eax, %ecx	# ix86_cpu.5634, tmp1849
	sarl	%cl, %edx	# tmp1849, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7270	#,
.L7269:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5635
	cmpl	$3, %eax	#, which_alternative.5635
	jne	.L7271	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5636
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5637
	movl	%eax, %ecx	# ix86_cpu.5638, tmp1851
	sarl	%cl, %edx	# tmp1851, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7268	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5639
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5640
	movl	%eax, %ecx	# ix86_cpu.5641, tmp1853
	sarl	%cl, %edx	# tmp1853, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7268	#,
.L7271:
	.loc 1 35019 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5642
	cmpl	$3, %eax	#, which_alternative.5642
	je	.L7268	#,
	.loc 1 35019 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5643
	cmpl	$5, %eax	#, which_alternative.5643
	je	.L7268	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5644
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5645
	movl	%eax, %ecx	# ix86_cpu.5646, tmp1855
	sarl	%cl, %edx	# tmp1855, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7270	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5647
	cmpl	$2, %eax	#, which_alternative.5647
	je	.L7268	#,
.L7270:
	.loc 1 35019 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1632
	movq	%rax, %rdi	# tmp1632,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7272	#,
	.loc 1 35019 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5648
	cmpl	$3, %eax	#, which_alternative.5648
	jne	.L7273	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5649
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5650
	movl	%eax, %ecx	# ix86_cpu.5651, tmp1857
	sarl	%cl, %edx	# tmp1857, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7268	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5652
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5653
	movl	%eax, %ecx	# ix86_cpu.5654, tmp1859
	sarl	%cl, %edx	# tmp1859, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7268	#,
.L7273:
	.loc 1 35019 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5655
	cmpl	$3, %eax	#, which_alternative.5655
	jne	.L7274	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5656
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5657
	movl	%eax, %ecx	# ix86_cpu.5658, tmp1861
	sarl	%cl, %edx	# tmp1861, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7272	#,
	.loc 1 35019 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5659
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5660
	movl	%eax, %ecx	# ix86_cpu.5661, tmp1863
	sarl	%cl, %edx	# tmp1863, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7272	#,
.L7274:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5662
	cmpl	$3, %eax	#, which_alternative.5662
	je	.L7272	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5663
	cmpl	$5, %eax	#, which_alternative.5663
	je	.L7272	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5664
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5665
	movl	%eax, %ecx	# ix86_cpu.5666, tmp1865
	sarl	%cl, %edx	# tmp1865, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7268	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5667
	cmpl	$2, %eax	#, which_alternative.5667
	je	.L7272	#,
.L7268:
	.loc 1 35021 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1633
	movq	%rax, %rdi	# tmp1633,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7275	#,
	.loc 1 35021 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5668
	cmpl	$3, %eax	#, which_alternative.5668
	jne	.L7276	#,
	.loc 1 35021 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5669
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5670
	movl	%eax, %ecx	# ix86_cpu.5671, tmp1867
	sarl	%cl, %edx	# tmp1867, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7277	#,
	.loc 1 35021 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5672
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5673
	movl	%eax, %ecx	# ix86_cpu.5674, tmp1869
	sarl	%cl, %edx	# tmp1869, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7277	#,
.L7276:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5675
	cmpl	$3, %eax	#, which_alternative.5675
	jne	.L7278	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5676
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5677
	movl	%eax, %ecx	# ix86_cpu.5678, tmp1871
	sarl	%cl, %edx	# tmp1871, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7275	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5679
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5680
	movl	%eax, %ecx	# ix86_cpu.5681, tmp1873
	sarl	%cl, %edx	# tmp1873, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7275	#,
.L7278:
	.loc 1 35021 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5682
	cmpl	$3, %eax	#, which_alternative.5682
	je	.L7275	#,
	.loc 1 35021 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5683
	cmpl	$5, %eax	#, which_alternative.5683
	je	.L7275	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5684
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5685
	movl	%eax, %ecx	# ix86_cpu.5686, tmp1875
	sarl	%cl, %edx	# tmp1875, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7277	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5687
	cmpl	$2, %eax	#, which_alternative.5687
	jne	.L7277	#,
.L7275:
	.loc 1 35023 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7277:
	.loc 1 35027 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7272:
	.loc 1 35032 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7197:
	.loc 1 35039 0
	movq	-8(%rbp), %rax	# insn, tmp1634
	movq	%rax, %rdi	# tmp1634,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7279	#,
	.loc 1 35039 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1635
	movq	%rax, %rdi	# tmp1635,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57553
	jne	.L7279	#,
	movq	-8(%rbp), %rax	# insn, tmp1636
	movq	%rax, %rdi	# tmp1636,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7280	#,
	movq	-8(%rbp), %rax	# insn, tmp1637
	movq	%rax, %rdi	# tmp1637,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57553
	jne	.L7280	#,
.L7279:
	.loc 1 35041 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1638
	movq	%rax, %rdi	# tmp1638,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7281	#,
	.loc 1 35041 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1639
	movq	%rax, %rdi	# tmp1639,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57553
	je	.L7282	#,
.L7281:
	.loc 1 35043 0 is_stmt 1
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7282:
	.loc 1 35047 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7280:
	.loc 1 35052 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7196:
	.loc 1 35074 0
	movq	-8(%rbp), %rax	# insn, tmp1640
	movq	%rax, %rdi	# tmp1640,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7283	#,
	.loc 1 35076 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7283:
	.loc 1 35080 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7195:
	.loc 1 35127 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7194:
	.loc 1 35133 0
	movq	-8(%rbp), %rax	# insn, tmp1641
	movq	%rax, %rdi	# tmp1641,
	call	extract_insn_cached	#
	.loc 1 35134 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7284	#,
	.loc 1 35136 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7284:
	.loc 1 35140 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7193:
	.loc 1 35151 0
	movq	-8(%rbp), %rax	# insn, tmp1642
	movq	%rax, %rdi	# tmp1642,
	call	extract_insn_cached	#
	.loc 1 35152 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7285	#,
	.loc 1 35154 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7285:
	.loc 1 35158 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7192:
	.loc 1 35286 0
	movq	-8(%rbp), %rax	# insn, tmp1643
	movq	%rax, %rdi	# tmp1643,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7286	#,
	.loc 1 35288 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7286:
	.loc 1 35292 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7190:
	.loc 1 35296 0
	movq	-8(%rbp), %rax	# insn, tmp1644
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57550
	movzwl	(%rax), %eax	# _1055->code, D.57555
	cmpw	$40, %ax	#, D.57555
	je	.L7189	#,
	.loc 1 35297 0
	movq	-8(%rbp), %rax	# insn, tmp1645
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57550
	movq	%rax, %rdi	# D.57550,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57549
	jns	.L7189	#,
	.loc 1 35298 0
	movq	-8(%rbp), %rax	# insn, tmp1646
	movl	$__FUNCTION__.25501, %ecx	#,
	movl	$35298, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1646,
	call	_fatal_insn_not_found	#
.L7189:
	.loc 1 35300 0
	movl	$3, %eax	#, D.57549
	jmp	.L7186	#
.L7183:
	.loc 1 35305 0
	movq	-8(%rbp), %rax	# insn, tmp1647
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, D.57549
	testl	%eax, %eax	# D.57549
	js	.L7287	#,
	.loc 1 35305 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1648
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, iftmp.5688
	jmp	.L7288	#
.L7287:
	.loc 1 35305 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1649
	movq	%rax, %rdi	# tmp1649,
	call	recog_memoized_1	#
.L7288:
	.loc 1 35305 0 discriminator 3
	addl	$1, %eax	#, tmp1650
	cmpl	$657, %eax	#, tmp1650
	ja	.L7289	#,
	movl	%eax, %eax	# tmp1650, tmp1651
	movq	.L7291(,%rax,8), %rax	#, tmp1652
	jmp	*%rax	# tmp1652
	.section	.rodata
	.align 8
	.align 4
.L7291:
	.quad	.L7290
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7293
	.quad	.L7293
	.quad	.L7293
	.quad	.L7294
	.quad	.L7294
	.quad	.L7295
	.quad	.L7295
	.quad	.L7296
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7293
	.quad	.L7293
	.quad	.L7297
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7289
	.quad	.L7292
	.quad	.L7295
	.quad	.L7293
	.quad	.L7293
	.quad	.L7298
	.quad	.L7289
	.quad	.L7292
	.quad	.L7295
	.quad	.L7289
	.quad	.L7289
	.quad	.L7297
	.quad	.L7297
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7297
	.quad	.L7299
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7300
	.quad	.L7293
	.quad	.L7294
	.quad	.L7294
	.quad	.L7295
	.quad	.L7295
	.quad	.L7289
	.quad	.L7296
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7301
	.quad	.L7301
	.quad	.L7302
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7295
	.quad	.L7289
	.quad	.L7295
	.quad	.L7303
	.quad	.L7289
	.quad	.L7295
	.quad	.L7303
	.quad	.L7289
	.quad	.L7289
	.quad	.L7304
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7295
	.quad	.L7292
	.quad	.L7295
	.quad	.L7295
	.quad	.L7292
	.quad	.L7292
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7296
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7296
	.quad	.L7296
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7296
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7296
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7295
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7295
	.quad	.L7295
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7305
	.quad	.L7306
	.quad	.L7306
	.quad	.L7307
	.quad	.L7289
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7289
	.quad	.L7308
	.quad	.L7292
	.quad	.L7309
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7309
	.quad	.L7292
	.quad	.L7292
	.quad	.L7295
	.quad	.L7292
	.quad	.L7295
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7295
	.quad	.L7292
	.quad	.L7295
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7295
	.quad	.L7289
	.quad	.L7289
	.quad	.L7295
	.quad	.L7295
	.quad	.L7289
	.quad	.L7295
	.quad	.L7289
	.quad	.L7295
	.quad	.L7296
	.quad	.L7296
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7296
	.quad	.L7296
	.quad	.L7296
	.quad	.L7296
	.quad	.L7296
	.quad	.L7296
	.quad	.L7296
	.quad	.L7296
	.quad	.L7296
	.quad	.L7296
	.quad	.L7310
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7310
	.quad	.L7310
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7289
	.quad	.L7289
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7311
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7295
	.quad	.L7295
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7295
	.quad	.L7312
	.quad	.L7313
	.quad	.L7313
	.quad	.L7313
	.quad	.L7313
	.quad	.L7313
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7295
	.quad	.L7289
	.quad	.L7292
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7295
	.quad	.L7289
	.quad	.L7295
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7292
	.quad	.L7292
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7289
	.quad	.L7314
	.quad	.L7314
	.quad	.L7314
	.quad	.L7314
	.quad	.L7314
	.quad	.L7314
	.text
.L7314:
	.loc 1 35313 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1653
	movq	%rax, %rdi	# tmp1653,
	call	extract_insn_cached	#
	.loc 1 35314 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7315	#,
	.loc 1 35316 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7315:
	.loc 1 35320 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7313:
	.loc 1 35328 0
	movq	-8(%rbp), %rax	# insn, tmp1654
	movq	%rax, %rdi	# tmp1654,
	call	extract_insn_cached	#
	.loc 1 35329 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7316	#,
	.loc 1 35331 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7316:
	.loc 1 35335 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7312:
	.loc 1 35339 0
	movq	-8(%rbp), %rax	# insn, tmp1655
	movq	%rax, %rdi	# tmp1655,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57553
	je	.L7317	#,
	.loc 1 35341 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7317:
	.loc 1 35345 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7311:
	.loc 1 35408 0
	movq	-8(%rbp), %rax	# insn, tmp1656
	movq	%rax, %rdi	# tmp1656,
	call	extract_insn_cached	#
	.loc 1 35409 0
	movq	-8(%rbp), %rax	# insn, tmp1657
	movq	%rax, %rdi	# tmp1657,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7318	#,
	.loc 1 35409 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7318	#,
	movq	-8(%rbp), %rax	# insn, tmp1658
	movq	%rax, %rdi	# tmp1658,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7319	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7319	#,
.L7318:
	.loc 1 35411 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1659
	movq	%rax, %rdi	# tmp1659,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7320	#,
	.loc 1 35411 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7321	#,
.L7320:
	.loc 1 35413 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7321:
	.loc 1 35417 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7319:
	.loc 1 35422 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7310:
	.loc 1 35428 0
	movq	-8(%rbp), %rax	# insn, tmp1660
	movq	%rax, %rdi	# tmp1660,
	call	extract_constrain_insn_cached	#
	.loc 1 35429 0
	movq	-8(%rbp), %rax	# insn, tmp1661
	movq	%rax, %rdi	# tmp1661,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7322	#,
	.loc 1 35429 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5689
	cmpl	$1, %eax	#, which_alternative.5689
	jne	.L7322	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7322	#,
	movq	-8(%rbp), %rax	# insn, tmp1662
	movq	%rax, %rdi	# tmp1662,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7323	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5690
	cmpl	$1, %eax	#, which_alternative.5690
	jne	.L7323	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7323	#,
.L7322:
	.loc 1 35431 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1663
	movq	%rax, %rdi	# tmp1663,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7324	#,
	.loc 1 35431 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5691
	cmpl	$1, %eax	#, which_alternative.5691
	jne	.L7324	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7325	#,
.L7324:
	.loc 1 35433 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7325:
	.loc 1 35437 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7323:
	.loc 1 35442 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7309:
	.loc 1 35447 0
	movq	-8(%rbp), %rax	# insn, tmp1664
	movq	%rax, %rdi	# tmp1664,
	call	extract_constrain_insn_cached	#
	.loc 1 35448 0
	movq	-8(%rbp), %rax	# insn, tmp1665
	movq	%rax, %rdi	# tmp1665,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7326	#,
	.loc 1 35448 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5692
	testl	%eax, %eax	# which_alternative.5692
	je	.L7327	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5693
	cmpl	$1, %eax	#, which_alternative.5693
	jne	.L7326	#,
.L7327:
	.loc 1 35448 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1666
	movq	%rax, %rdi	# tmp1666,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7328	#,
	.loc 1 35448 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5694
	testl	%eax, %eax	# which_alternative.5694
	je	.L7326	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5695
	cmpl	$1, %eax	#, which_alternative.5695
	jne	.L7328	#,
.L7326:
	.loc 1 35450 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1667
	movq	%rax, %rdi	# tmp1667,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7329	#,
	.loc 1 35450 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5696
	testl	%eax, %eax	# which_alternative.5696
	je	.L7330	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5697
	cmpl	$1, %eax	#, which_alternative.5697
	je	.L7330	#,
.L7329:
	.loc 1 35452 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7330:
	.loc 1 35456 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7328:
	.loc 1 35461 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7308:
	.loc 1 35465 0
	movq	-8(%rbp), %rax	# insn, tmp1668
	movq	%rax, %rdi	# tmp1668,
	call	extract_constrain_insn_cached	#
	.loc 1 35466 0
	movq	-8(%rbp), %rax	# insn, tmp1669
	movq	%rax, %rdi	# tmp1669,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7331	#,
	.loc 1 35466 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5698
	testl	%eax, %eax	# which_alternative.5698
	je	.L7332	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5699
	cmpl	$1, %eax	#, which_alternative.5699
	je	.L7332	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5700
	cmpl	$2, %eax	#, which_alternative.5700
	jne	.L7331	#,
.L7332:
	.loc 1 35466 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1670
	movq	%rax, %rdi	# tmp1670,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7333	#,
	.loc 1 35466 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5701
	testl	%eax, %eax	# which_alternative.5701
	je	.L7331	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5702
	cmpl	$1, %eax	#, which_alternative.5702
	je	.L7331	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5703
	cmpl	$2, %eax	#, which_alternative.5703
	jne	.L7333	#,
.L7331:
	.loc 1 35468 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1671
	movq	%rax, %rdi	# tmp1671,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7334	#,
	.loc 1 35468 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5704
	testl	%eax, %eax	# which_alternative.5704
	je	.L7335	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5705
	cmpl	$1, %eax	#, which_alternative.5705
	je	.L7335	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5706
	cmpl	$2, %eax	#, which_alternative.5706
	je	.L7335	#,
.L7334:
	.loc 1 35470 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7335:
	.loc 1 35474 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7333:
	.loc 1 35479 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7307:
	.loc 1 35483 0
	movq	-8(%rbp), %rax	# insn, tmp1672
	movq	%rax, %rdi	# tmp1672,
	call	extract_constrain_insn_cached	#
	.loc 1 35484 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5707
	testl	%eax, %eax	# which_alternative.5707
	je	.L7336	#,
	.loc 1 35484 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5708
	cmpl	$2, %eax	#, which_alternative.5708
	jne	.L7337	#,
.L7336:
	.loc 1 35484 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5709
	testl	%eax, %eax	# which_alternative.5709
	je	.L7337	#,
	.loc 1 35484 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5710
	cmpl	$2, %eax	#, which_alternative.5710
	jne	.L7338	#,
.L7337:
	.loc 1 35486 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5711
	testl	%eax, %eax	# which_alternative.5711
	je	.L7339	#,
	.loc 1 35486 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5712
	cmpl	$2, %eax	#, which_alternative.5712
	je	.L7339	#,
	.loc 1 35488 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7339:
	.loc 1 35492 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7338:
	.loc 1 35497 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7306:
	.loc 1 35502 0
	movq	-8(%rbp), %rax	# insn, tmp1673
	movq	%rax, %rdi	# tmp1673,
	call	extract_constrain_insn_cached	#
	.loc 1 35503 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5713
	cmpl	$1, %eax	#, which_alternative.5713
	jne	.L7340	#,
	.loc 1 35505 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7340:
	.loc 1 35509 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7305:
	.loc 1 35513 0
	movq	-8(%rbp), %rax	# insn, tmp1674
	movq	%rax, %rdi	# tmp1674,
	call	extract_constrain_insn_cached	#
	.loc 1 35514 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5714
	cmpl	$1, %eax	#, which_alternative.5714
	je	.L7341	#,
	.loc 1 35514 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5715
	cmpl	$3, %eax	#, which_alternative.5715
	je	.L7341	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5716
	cmpl	$1, %eax	#, which_alternative.5716
	je	.L7342	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5717
	cmpl	$3, %eax	#, which_alternative.5717
	je	.L7342	#,
.L7341:
	.loc 1 35516 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5718
	cmpl	$1, %eax	#, which_alternative.5718
	je	.L7343	#,
	.loc 1 35516 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5719
	cmpl	$3, %eax	#, which_alternative.5719
	jne	.L7344	#,
.L7343:
	.loc 1 35518 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7344:
	.loc 1 35522 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7342:
	.loc 1 35527 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7304:
	.loc 1 35531 0
	movq	-8(%rbp), %rax	# insn, tmp1675
	movq	%rax, %rdi	# tmp1675,
	call	extract_constrain_insn_cached	#
	.loc 1 35532 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5720
	cmpl	$1, %eax	#, which_alternative.5720
	jne	.L7345	#,
	.loc 1 35532 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1676
	movq	%rax, %rdi	# tmp1676,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7345	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5721
	cmpl	$1, %eax	#, which_alternative.5721
	jne	.L7346	#,
	movq	-8(%rbp), %rax	# insn, tmp1677
	movq	%rax, %rdi	# tmp1677,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7346	#,
.L7345:
	.loc 1 35534 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5722
	cmpl	$1, %eax	#, which_alternative.5722
	jne	.L7347	#,
	.loc 1 35534 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1678
	movq	%rax, %rdi	# tmp1678,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7348	#,
.L7347:
	.loc 1 35536 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7348:
	.loc 1 35540 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7346:
	.loc 1 35545 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7303:
	.loc 1 35550 0
	movq	-8(%rbp), %rax	# insn, tmp1679
	movq	%rax, %rdi	# tmp1679,
	call	extract_constrain_insn_cached	#
	.loc 1 35551 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5723
	testl	%eax, %eax	# which_alternative.5723
	jne	.L7349	#,
	.loc 1 35553 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7349:
	.loc 1 35557 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7302:
	.loc 1 35561 0
	movq	-8(%rbp), %rax	# insn, tmp1680
	movq	%rax, %rdi	# tmp1680,
	call	extract_constrain_insn_cached	#
	.loc 1 35562 0
	movq	-8(%rbp), %rax	# insn, tmp1681
	movq	%rax, %rdi	# tmp1681,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7350	#,
	.loc 1 35562 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5724
	cmpl	$3, %eax	#, which_alternative.5724
	je	.L7351	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5725
	cmpl	$4, %eax	#, which_alternative.5725
	jne	.L7350	#,
.L7351:
	.loc 1 35562 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1682
	movq	%rax, %rdi	# tmp1682,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7352	#,
	.loc 1 35562 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5726
	testl	%eax, %eax	# which_alternative.5726
	je	.L7352	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5727
	cmpl	$1, %eax	#, which_alternative.5727
	je	.L7352	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5728
	cmpl	$2, %eax	#, which_alternative.5728
	je	.L7352	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5729
	cmpl	$3, %eax	#, which_alternative.5729
	je	.L7350	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5730
	cmpl	$4, %eax	#, which_alternative.5730
	je	.L7350	#,
.L7352:
	.loc 1 35562 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5731
	testl	%eax, %eax	# which_alternative.5731
	je	.L7350	#,
	.loc 1 35562 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5732
	cmpl	$1, %eax	#, which_alternative.5732
	je	.L7350	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5733
	cmpl	$2, %eax	#, which_alternative.5733
	jne	.L7353	#,
.L7350:
	.loc 1 35564 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1683
	movq	%rax, %rdi	# tmp1683,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7354	#,
	.loc 1 35564 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5734
	testl	%eax, %eax	# which_alternative.5734
	je	.L7354	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5735
	cmpl	$1, %eax	#, which_alternative.5735
	je	.L7354	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5736
	cmpl	$2, %eax	#, which_alternative.5736
	je	.L7354	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5737
	cmpl	$3, %eax	#, which_alternative.5737
	je	.L7355	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5738
	cmpl	$4, %eax	#, which_alternative.5738
	je	.L7355	#,
.L7354:
	.loc 1 35566 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7355:
	.loc 1 35570 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7353:
	.loc 1 35575 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7301:
	.loc 1 35580 0
	movq	-8(%rbp), %rax	# insn, tmp1684
	movq	%rax, %rdi	# tmp1684,
	call	extract_constrain_insn_cached	#
	.loc 1 35581 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5739
	cmpl	$1, %eax	#, which_alternative.5739
	jne	.L7356	#,
	.loc 1 35581 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7356	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5740
	cmpl	$1, %eax	#, which_alternative.5740
	jne	.L7357	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7357	#,
.L7356:
	.loc 1 35583 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5741
	cmpl	$1, %eax	#, which_alternative.5741
	jne	.L7358	#,
	.loc 1 35583 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7359	#,
.L7358:
	.loc 1 35585 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7359:
	.loc 1 35589 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7357:
	.loc 1 35594 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7300:
	.loc 1 35598 0
	movq	-8(%rbp), %rax	# insn, tmp1685
	movq	%rax, %rdi	# tmp1685,
	call	extract_constrain_insn_cached	#
	.loc 1 35599 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5742
	testl	%eax, %eax	# which_alternative.5742
	jne	.L7360	#,
	.loc 1 35599 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7360	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5743
	testl	%eax, %eax	# which_alternative.5743
	jne	.L7361	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7361	#,
.L7360:
	.loc 1 35601 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5744
	testl	%eax, %eax	# which_alternative.5744
	jne	.L7362	#,
	.loc 1 35601 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7363	#,
.L7362:
	.loc 1 35603 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7363:
	.loc 1 35607 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7361:
	.loc 1 35612 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7299:
	.loc 1 35616 0
	movq	-8(%rbp), %rax	# insn, tmp1686
	movq	%rax, %rdi	# tmp1686,
	call	extract_constrain_insn_cached	#
	.loc 1 35617 0
	movq	-8(%rbp), %rax	# insn, tmp1687
	movq	%rax, %rdi	# tmp1687,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7364	#,
	.loc 1 35617 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7364	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5745
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5746
	movl	%eax, %ecx	# ix86_cpu.5747, tmp1877
	sarl	%cl, %edx	# tmp1877, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	jne	.L7364	#,
	movq	-8(%rbp), %rax	# insn, tmp1688
	movq	%rax, %rdi	# tmp1688,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7365	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7365	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5748
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5749
	movl	%eax, %ecx	# ix86_cpu.5750, tmp1879
	sarl	%cl, %edx	# tmp1879, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	jne	.L7365	#,
.L7364:
	.loc 1 35619 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1689
	movq	%rax, %rdi	# tmp1689,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7366	#,
	.loc 1 35619 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7366	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5751
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5752
	movl	%eax, %ecx	# ix86_cpu.5753, tmp1881
	sarl	%cl, %edx	# tmp1881, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7367	#,
.L7366:
	.loc 1 35621 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7367:
	.loc 1 35625 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7365:
	.loc 1 35630 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7298:
	.loc 1 35634 0
	movq	-8(%rbp), %rax	# insn, tmp1690
	movq	%rax, %rdi	# tmp1690,
	call	extract_constrain_insn_cached	#
	.loc 1 35635 0
	movq	-8(%rbp), %rax	# insn, tmp1691
	movq	%rax, %rdi	# tmp1691,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7368	#,
	.loc 1 35635 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5754
	cmpl	$3, %eax	#, which_alternative.5754
	jne	.L7369	#,
	.loc 1 35635 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5755
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5756
	movl	%eax, %ecx	# ix86_cpu.5757, tmp1883
	sarl	%cl, %edx	# tmp1883, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7370	#,
	.loc 1 35635 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5758
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5759
	movl	%eax, %ecx	# ix86_cpu.5760, tmp1885
	sarl	%cl, %edx	# tmp1885, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7370	#,
.L7369:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5761
	cmpl	$3, %eax	#, which_alternative.5761
	jne	.L7371	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5762
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5763
	movl	%eax, %ecx	# ix86_cpu.5764, tmp1887
	sarl	%cl, %edx	# tmp1887, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7368	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5765
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5766
	movl	%eax, %ecx	# ix86_cpu.5767, tmp1889
	sarl	%cl, %edx	# tmp1889, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7368	#,
.L7371:
	.loc 1 35635 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5768
	cmpl	$3, %eax	#, which_alternative.5768
	je	.L7368	#,
	.loc 1 35635 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5769
	cmpl	$5, %eax	#, which_alternative.5769
	je	.L7368	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5770
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5771
	movl	%eax, %ecx	# ix86_cpu.5772, tmp1891
	sarl	%cl, %edx	# tmp1891, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7370	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5773
	cmpl	$2, %eax	#, which_alternative.5773
	je	.L7368	#,
.L7370:
	.loc 1 35635 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1692
	movq	%rax, %rdi	# tmp1692,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7372	#,
	.loc 1 35635 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5774
	cmpl	$3, %eax	#, which_alternative.5774
	jne	.L7373	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5775
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5776
	movl	%eax, %ecx	# ix86_cpu.5777, tmp1893
	sarl	%cl, %edx	# tmp1893, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7368	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5778
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5779
	movl	%eax, %ecx	# ix86_cpu.5780, tmp1895
	sarl	%cl, %edx	# tmp1895, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7368	#,
.L7373:
	.loc 1 35635 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5781
	cmpl	$3, %eax	#, which_alternative.5781
	jne	.L7374	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5782
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5783
	movl	%eax, %ecx	# ix86_cpu.5784, tmp1897
	sarl	%cl, %edx	# tmp1897, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7372	#,
	.loc 1 35635 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5785
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5786
	movl	%eax, %ecx	# ix86_cpu.5787, tmp1899
	sarl	%cl, %edx	# tmp1899, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7372	#,
.L7374:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5788
	cmpl	$3, %eax	#, which_alternative.5788
	je	.L7372	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5789
	cmpl	$5, %eax	#, which_alternative.5789
	je	.L7372	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5790
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5791
	movl	%eax, %ecx	# ix86_cpu.5792, tmp1901
	sarl	%cl, %edx	# tmp1901, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7368	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5793
	cmpl	$2, %eax	#, which_alternative.5793
	je	.L7372	#,
.L7368:
	.loc 1 35637 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1693
	movq	%rax, %rdi	# tmp1693,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7375	#,
	.loc 1 35637 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5794
	cmpl	$3, %eax	#, which_alternative.5794
	jne	.L7376	#,
	.loc 1 35637 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5795
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5796
	movl	%eax, %ecx	# ix86_cpu.5797, tmp1903
	sarl	%cl, %edx	# tmp1903, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7377	#,
	.loc 1 35637 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5798
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5799
	movl	%eax, %ecx	# ix86_cpu.5800, tmp1905
	sarl	%cl, %edx	# tmp1905, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7377	#,
.L7376:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5801
	cmpl	$3, %eax	#, which_alternative.5801
	jne	.L7378	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5802
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5803
	movl	%eax, %ecx	# ix86_cpu.5804, tmp1907
	sarl	%cl, %edx	# tmp1907, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7375	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5805
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5806
	movl	%eax, %ecx	# ix86_cpu.5807, tmp1909
	sarl	%cl, %edx	# tmp1909, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7375	#,
.L7378:
	.loc 1 35637 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5808
	cmpl	$3, %eax	#, which_alternative.5808
	je	.L7375	#,
	.loc 1 35637 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5809
	cmpl	$5, %eax	#, which_alternative.5809
	je	.L7375	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5810
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5811
	movl	%eax, %ecx	# ix86_cpu.5812, tmp1911
	sarl	%cl, %edx	# tmp1911, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7377	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5813
	cmpl	$2, %eax	#, which_alternative.5813
	jne	.L7377	#,
.L7375:
	.loc 1 35639 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7377:
	.loc 1 35643 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7372:
	.loc 1 35648 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7297:
	.loc 1 35655 0
	movq	-8(%rbp), %rax	# insn, tmp1694
	movq	%rax, %rdi	# tmp1694,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7379	#,
	.loc 1 35655 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1695
	movq	%rax, %rdi	# tmp1695,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57553
	jne	.L7379	#,
	movq	-8(%rbp), %rax	# insn, tmp1696
	movq	%rax, %rdi	# tmp1696,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7380	#,
	movq	-8(%rbp), %rax	# insn, tmp1697
	movq	%rax, %rdi	# tmp1697,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57553
	jne	.L7380	#,
.L7379:
	.loc 1 35657 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1698
	movq	%rax, %rdi	# tmp1698,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7381	#,
	.loc 1 35657 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1699
	movq	%rax, %rdi	# tmp1699,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57553
	je	.L7382	#,
.L7381:
	.loc 1 35659 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7382:
	.loc 1 35663 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7380:
	.loc 1 35668 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7296:
	.loc 1 35690 0
	movq	-8(%rbp), %rax	# insn, tmp1700
	movq	%rax, %rdi	# tmp1700,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7383	#,
	.loc 1 35692 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7383:
	.loc 1 35696 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7295:
	.loc 1 35743 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7294:
	.loc 1 35749 0
	movq	-8(%rbp), %rax	# insn, tmp1701
	movq	%rax, %rdi	# tmp1701,
	call	extract_insn_cached	#
	.loc 1 35750 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7384	#,
	.loc 1 35752 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7384:
	.loc 1 35756 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7293:
	.loc 1 35767 0
	movq	-8(%rbp), %rax	# insn, tmp1702
	movq	%rax, %rdi	# tmp1702,
	call	extract_insn_cached	#
	.loc 1 35768 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7385	#,
	.loc 1 35770 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7385:
	.loc 1 35774 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7292:
	.loc 1 35902 0
	movq	-8(%rbp), %rax	# insn, tmp1703
	movq	%rax, %rdi	# tmp1703,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7386	#,
	.loc 1 35904 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7386:
	.loc 1 35908 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7290:
	.loc 1 35912 0
	movq	-8(%rbp), %rax	# insn, tmp1704
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57550
	movzwl	(%rax), %eax	# _1353->code, D.57555
	cmpw	$40, %ax	#, D.57555
	je	.L7289	#,
	.loc 1 35913 0
	movq	-8(%rbp), %rax	# insn, tmp1705
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57550
	movq	%rax, %rdi	# D.57550,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57549
	jns	.L7289	#,
	.loc 1 35914 0
	movq	-8(%rbp), %rax	# insn, tmp1706
	movl	$__FUNCTION__.25501, %ecx	#,
	movl	$35914, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1706,
	call	_fatal_insn_not_found	#
.L7289:
	.loc 1 35916 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7184:
	.loc 1 35921 0
	movq	-8(%rbp), %rax	# insn, tmp1707
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, D.57549
	testl	%eax, %eax	# D.57549
	js	.L7387	#,
	.loc 1 35921 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1708
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, iftmp.5814
	jmp	.L7388	#
.L7387:
	.loc 1 35921 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1709
	movq	%rax, %rdi	# tmp1709,
	call	recog_memoized_1	#
.L7388:
	.loc 1 35921 0 discriminator 3
	addl	$1, %eax	#, tmp1710
	cmpl	$657, %eax	#, tmp1710
	ja	.L7389	#,
	movl	%eax, %eax	# tmp1710, tmp1711
	movq	.L7391(,%rax,8), %rax	#, tmp1712
	jmp	*%rax	# tmp1712
	.section	.rodata
	.align 8
	.align 4
.L7391:
	.quad	.L7390
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7393
	.quad	.L7393
	.quad	.L7393
	.quad	.L7394
	.quad	.L7394
	.quad	.L7395
	.quad	.L7395
	.quad	.L7396
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7393
	.quad	.L7393
	.quad	.L7397
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7389
	.quad	.L7392
	.quad	.L7395
	.quad	.L7393
	.quad	.L7393
	.quad	.L7398
	.quad	.L7389
	.quad	.L7392
	.quad	.L7395
	.quad	.L7389
	.quad	.L7389
	.quad	.L7397
	.quad	.L7397
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7397
	.quad	.L7399
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7400
	.quad	.L7393
	.quad	.L7394
	.quad	.L7394
	.quad	.L7395
	.quad	.L7395
	.quad	.L7389
	.quad	.L7396
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7401
	.quad	.L7401
	.quad	.L7402
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7395
	.quad	.L7389
	.quad	.L7395
	.quad	.L7403
	.quad	.L7389
	.quad	.L7395
	.quad	.L7403
	.quad	.L7389
	.quad	.L7389
	.quad	.L7404
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7395
	.quad	.L7392
	.quad	.L7395
	.quad	.L7395
	.quad	.L7392
	.quad	.L7392
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7396
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7396
	.quad	.L7396
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7396
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7396
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7395
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7395
	.quad	.L7395
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7405
	.quad	.L7406
	.quad	.L7406
	.quad	.L7407
	.quad	.L7389
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7389
	.quad	.L7408
	.quad	.L7392
	.quad	.L7409
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7409
	.quad	.L7392
	.quad	.L7392
	.quad	.L7395
	.quad	.L7392
	.quad	.L7395
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7395
	.quad	.L7392
	.quad	.L7395
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7395
	.quad	.L7389
	.quad	.L7389
	.quad	.L7395
	.quad	.L7395
	.quad	.L7389
	.quad	.L7395
	.quad	.L7389
	.quad	.L7395
	.quad	.L7396
	.quad	.L7396
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7396
	.quad	.L7396
	.quad	.L7396
	.quad	.L7396
	.quad	.L7396
	.quad	.L7396
	.quad	.L7396
	.quad	.L7396
	.quad	.L7396
	.quad	.L7396
	.quad	.L7410
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7410
	.quad	.L7410
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7389
	.quad	.L7389
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7411
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7395
	.quad	.L7395
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7395
	.quad	.L7412
	.quad	.L7413
	.quad	.L7413
	.quad	.L7413
	.quad	.L7413
	.quad	.L7413
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7395
	.quad	.L7389
	.quad	.L7392
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7395
	.quad	.L7389
	.quad	.L7395
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7392
	.quad	.L7392
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7389
	.quad	.L7414
	.quad	.L7414
	.quad	.L7414
	.quad	.L7414
	.quad	.L7414
	.quad	.L7414
	.text
.L7414:
	.loc 1 35929 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1713
	movq	%rax, %rdi	# tmp1713,
	call	extract_insn_cached	#
	.loc 1 35930 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7415	#,
	.loc 1 35932 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7415:
	.loc 1 35936 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7413:
	.loc 1 35944 0
	movq	-8(%rbp), %rax	# insn, tmp1714
	movq	%rax, %rdi	# tmp1714,
	call	extract_insn_cached	#
	.loc 1 35945 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7416	#,
	.loc 1 35947 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7416:
	.loc 1 35951 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7412:
	.loc 1 35955 0
	movq	-8(%rbp), %rax	# insn, tmp1715
	movq	%rax, %rdi	# tmp1715,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57553
	je	.L7417	#,
	.loc 1 35957 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7417:
	.loc 1 35961 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7411:
	.loc 1 36024 0
	movq	-8(%rbp), %rax	# insn, tmp1716
	movq	%rax, %rdi	# tmp1716,
	call	extract_insn_cached	#
	.loc 1 36025 0
	movq	-8(%rbp), %rax	# insn, tmp1717
	movq	%rax, %rdi	# tmp1717,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7418	#,
	.loc 1 36025 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7418	#,
	movq	-8(%rbp), %rax	# insn, tmp1718
	movq	%rax, %rdi	# tmp1718,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7419	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7419	#,
.L7418:
	.loc 1 36027 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1719
	movq	%rax, %rdi	# tmp1719,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7420	#,
	.loc 1 36027 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7421	#,
.L7420:
	.loc 1 36029 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7421:
	.loc 1 36033 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7419:
	.loc 1 36038 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7410:
	.loc 1 36044 0
	movq	-8(%rbp), %rax	# insn, tmp1720
	movq	%rax, %rdi	# tmp1720,
	call	extract_constrain_insn_cached	#
	.loc 1 36045 0
	movq	-8(%rbp), %rax	# insn, tmp1721
	movq	%rax, %rdi	# tmp1721,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7422	#,
	.loc 1 36045 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5815
	cmpl	$1, %eax	#, which_alternative.5815
	jne	.L7422	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7422	#,
	movq	-8(%rbp), %rax	# insn, tmp1722
	movq	%rax, %rdi	# tmp1722,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7423	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5816
	cmpl	$1, %eax	#, which_alternative.5816
	jne	.L7423	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7423	#,
.L7422:
	.loc 1 36047 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1723
	movq	%rax, %rdi	# tmp1723,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7424	#,
	.loc 1 36047 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5817
	cmpl	$1, %eax	#, which_alternative.5817
	jne	.L7424	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7425	#,
.L7424:
	.loc 1 36049 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7425:
	.loc 1 36053 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7423:
	.loc 1 36058 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7409:
	.loc 1 36063 0
	movq	-8(%rbp), %rax	# insn, tmp1724
	movq	%rax, %rdi	# tmp1724,
	call	extract_constrain_insn_cached	#
	.loc 1 36064 0
	movq	-8(%rbp), %rax	# insn, tmp1725
	movq	%rax, %rdi	# tmp1725,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7426	#,
	.loc 1 36064 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5818
	testl	%eax, %eax	# which_alternative.5818
	je	.L7427	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5819
	cmpl	$1, %eax	#, which_alternative.5819
	jne	.L7426	#,
.L7427:
	.loc 1 36064 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1726
	movq	%rax, %rdi	# tmp1726,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7428	#,
	.loc 1 36064 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5820
	testl	%eax, %eax	# which_alternative.5820
	je	.L7426	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5821
	cmpl	$1, %eax	#, which_alternative.5821
	jne	.L7428	#,
.L7426:
	.loc 1 36066 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1727
	movq	%rax, %rdi	# tmp1727,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7429	#,
	.loc 1 36066 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5822
	testl	%eax, %eax	# which_alternative.5822
	je	.L7430	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5823
	cmpl	$1, %eax	#, which_alternative.5823
	je	.L7430	#,
.L7429:
	.loc 1 36068 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7430:
	.loc 1 36072 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7428:
	.loc 1 36077 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7408:
	.loc 1 36081 0
	movq	-8(%rbp), %rax	# insn, tmp1728
	movq	%rax, %rdi	# tmp1728,
	call	extract_constrain_insn_cached	#
	.loc 1 36082 0
	movq	-8(%rbp), %rax	# insn, tmp1729
	movq	%rax, %rdi	# tmp1729,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7431	#,
	.loc 1 36082 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5824
	testl	%eax, %eax	# which_alternative.5824
	je	.L7432	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5825
	cmpl	$1, %eax	#, which_alternative.5825
	je	.L7432	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5826
	cmpl	$2, %eax	#, which_alternative.5826
	jne	.L7431	#,
.L7432:
	.loc 1 36082 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1730
	movq	%rax, %rdi	# tmp1730,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7433	#,
	.loc 1 36082 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5827
	testl	%eax, %eax	# which_alternative.5827
	je	.L7431	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5828
	cmpl	$1, %eax	#, which_alternative.5828
	je	.L7431	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5829
	cmpl	$2, %eax	#, which_alternative.5829
	jne	.L7433	#,
.L7431:
	.loc 1 36084 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1731
	movq	%rax, %rdi	# tmp1731,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7434	#,
	.loc 1 36084 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5830
	testl	%eax, %eax	# which_alternative.5830
	je	.L7435	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5831
	cmpl	$1, %eax	#, which_alternative.5831
	je	.L7435	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5832
	cmpl	$2, %eax	#, which_alternative.5832
	je	.L7435	#,
.L7434:
	.loc 1 36086 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7435:
	.loc 1 36090 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7433:
	.loc 1 36095 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7407:
	.loc 1 36099 0
	movq	-8(%rbp), %rax	# insn, tmp1732
	movq	%rax, %rdi	# tmp1732,
	call	extract_constrain_insn_cached	#
	.loc 1 36100 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5833
	testl	%eax, %eax	# which_alternative.5833
	je	.L7436	#,
	.loc 1 36100 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5834
	cmpl	$2, %eax	#, which_alternative.5834
	jne	.L7437	#,
.L7436:
	.loc 1 36100 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5835
	testl	%eax, %eax	# which_alternative.5835
	je	.L7437	#,
	.loc 1 36100 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5836
	cmpl	$2, %eax	#, which_alternative.5836
	jne	.L7438	#,
.L7437:
	.loc 1 36102 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5837
	testl	%eax, %eax	# which_alternative.5837
	je	.L7439	#,
	.loc 1 36102 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5838
	cmpl	$2, %eax	#, which_alternative.5838
	je	.L7439	#,
	.loc 1 36104 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7439:
	.loc 1 36108 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7438:
	.loc 1 36113 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7406:
	.loc 1 36118 0
	movq	-8(%rbp), %rax	# insn, tmp1733
	movq	%rax, %rdi	# tmp1733,
	call	extract_constrain_insn_cached	#
	.loc 1 36119 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5839
	cmpl	$1, %eax	#, which_alternative.5839
	jne	.L7440	#,
	.loc 1 36121 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7440:
	.loc 1 36125 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7405:
	.loc 1 36129 0
	movq	-8(%rbp), %rax	# insn, tmp1734
	movq	%rax, %rdi	# tmp1734,
	call	extract_constrain_insn_cached	#
	.loc 1 36130 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5840
	cmpl	$1, %eax	#, which_alternative.5840
	je	.L7441	#,
	.loc 1 36130 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5841
	cmpl	$3, %eax	#, which_alternative.5841
	je	.L7441	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5842
	cmpl	$1, %eax	#, which_alternative.5842
	je	.L7442	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5843
	cmpl	$3, %eax	#, which_alternative.5843
	je	.L7442	#,
.L7441:
	.loc 1 36132 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5844
	cmpl	$1, %eax	#, which_alternative.5844
	je	.L7443	#,
	.loc 1 36132 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5845
	cmpl	$3, %eax	#, which_alternative.5845
	jne	.L7444	#,
.L7443:
	.loc 1 36134 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7444:
	.loc 1 36138 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7442:
	.loc 1 36143 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7404:
	.loc 1 36147 0
	movq	-8(%rbp), %rax	# insn, tmp1735
	movq	%rax, %rdi	# tmp1735,
	call	extract_constrain_insn_cached	#
	.loc 1 36148 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5846
	cmpl	$1, %eax	#, which_alternative.5846
	jne	.L7445	#,
	.loc 1 36148 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1736
	movq	%rax, %rdi	# tmp1736,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7445	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5847
	cmpl	$1, %eax	#, which_alternative.5847
	jne	.L7446	#,
	movq	-8(%rbp), %rax	# insn, tmp1737
	movq	%rax, %rdi	# tmp1737,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7446	#,
.L7445:
	.loc 1 36150 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5848
	cmpl	$1, %eax	#, which_alternative.5848
	jne	.L7447	#,
	.loc 1 36150 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1738
	movq	%rax, %rdi	# tmp1738,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7448	#,
.L7447:
	.loc 1 36152 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7448:
	.loc 1 36156 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7446:
	.loc 1 36161 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7403:
	.loc 1 36166 0
	movq	-8(%rbp), %rax	# insn, tmp1739
	movq	%rax, %rdi	# tmp1739,
	call	extract_constrain_insn_cached	#
	.loc 1 36167 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5849
	testl	%eax, %eax	# which_alternative.5849
	jne	.L7449	#,
	.loc 1 36169 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7449:
	.loc 1 36173 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7402:
	.loc 1 36177 0
	movq	-8(%rbp), %rax	# insn, tmp1740
	movq	%rax, %rdi	# tmp1740,
	call	extract_constrain_insn_cached	#
	.loc 1 36178 0
	movq	-8(%rbp), %rax	# insn, tmp1741
	movq	%rax, %rdi	# tmp1741,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7450	#,
	.loc 1 36178 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5850
	cmpl	$3, %eax	#, which_alternative.5850
	je	.L7451	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5851
	cmpl	$4, %eax	#, which_alternative.5851
	jne	.L7450	#,
.L7451:
	.loc 1 36178 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1742
	movq	%rax, %rdi	# tmp1742,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7452	#,
	.loc 1 36178 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5852
	testl	%eax, %eax	# which_alternative.5852
	je	.L7452	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5853
	cmpl	$1, %eax	#, which_alternative.5853
	je	.L7452	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5854
	cmpl	$2, %eax	#, which_alternative.5854
	je	.L7452	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5855
	cmpl	$3, %eax	#, which_alternative.5855
	je	.L7450	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5856
	cmpl	$4, %eax	#, which_alternative.5856
	je	.L7450	#,
.L7452:
	.loc 1 36178 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5857
	testl	%eax, %eax	# which_alternative.5857
	je	.L7450	#,
	.loc 1 36178 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5858
	cmpl	$1, %eax	#, which_alternative.5858
	je	.L7450	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5859
	cmpl	$2, %eax	#, which_alternative.5859
	jne	.L7453	#,
.L7450:
	.loc 1 36180 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1743
	movq	%rax, %rdi	# tmp1743,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7454	#,
	.loc 1 36180 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5860
	testl	%eax, %eax	# which_alternative.5860
	je	.L7454	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5861
	cmpl	$1, %eax	#, which_alternative.5861
	je	.L7454	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5862
	cmpl	$2, %eax	#, which_alternative.5862
	je	.L7454	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5863
	cmpl	$3, %eax	#, which_alternative.5863
	je	.L7455	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5864
	cmpl	$4, %eax	#, which_alternative.5864
	je	.L7455	#,
.L7454:
	.loc 1 36182 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7455:
	.loc 1 36186 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7453:
	.loc 1 36191 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7401:
	.loc 1 36196 0
	movq	-8(%rbp), %rax	# insn, tmp1744
	movq	%rax, %rdi	# tmp1744,
	call	extract_constrain_insn_cached	#
	.loc 1 36197 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5865
	cmpl	$1, %eax	#, which_alternative.5865
	jne	.L7456	#,
	.loc 1 36197 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7456	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5866
	cmpl	$1, %eax	#, which_alternative.5866
	jne	.L7457	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7457	#,
.L7456:
	.loc 1 36199 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5867
	cmpl	$1, %eax	#, which_alternative.5867
	jne	.L7458	#,
	.loc 1 36199 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7459	#,
.L7458:
	.loc 1 36201 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7459:
	.loc 1 36205 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7457:
	.loc 1 36210 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7400:
	.loc 1 36214 0
	movq	-8(%rbp), %rax	# insn, tmp1745
	movq	%rax, %rdi	# tmp1745,
	call	extract_constrain_insn_cached	#
	.loc 1 36215 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5868
	testl	%eax, %eax	# which_alternative.5868
	jne	.L7460	#,
	.loc 1 36215 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7460	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5869
	testl	%eax, %eax	# which_alternative.5869
	jne	.L7461	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	jne	.L7461	#,
.L7460:
	.loc 1 36217 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5870
	testl	%eax, %eax	# which_alternative.5870
	jne	.L7462	#,
	.loc 1 36217 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7463	#,
.L7462:
	.loc 1 36219 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7463:
	.loc 1 36223 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7461:
	.loc 1 36228 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7399:
	.loc 1 36232 0
	movq	-8(%rbp), %rax	# insn, tmp1746
	movq	%rax, %rdi	# tmp1746,
	call	extract_constrain_insn_cached	#
	.loc 1 36233 0
	movq	-8(%rbp), %rax	# insn, tmp1747
	movq	%rax, %rdi	# tmp1747,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7464	#,
	.loc 1 36233 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7464	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5871
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5872
	movl	%eax, %ecx	# ix86_cpu.5873, tmp1913
	sarl	%cl, %edx	# tmp1913, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	jne	.L7464	#,
	movq	-8(%rbp), %rax	# insn, tmp1748
	movq	%rax, %rdi	# tmp1748,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7465	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7465	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5874
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5875
	movl	%eax, %ecx	# ix86_cpu.5876, tmp1915
	sarl	%cl, %edx	# tmp1915, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	jne	.L7465	#,
.L7464:
	.loc 1 36235 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1749
	movq	%rax, %rdi	# tmp1749,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7466	#,
	.loc 1 36235 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7466	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5877
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5878
	movl	%eax, %ecx	# ix86_cpu.5879, tmp1917
	sarl	%cl, %edx	# tmp1917, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7467	#,
.L7466:
	.loc 1 36237 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7467:
	.loc 1 36241 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7465:
	.loc 1 36246 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7398:
	.loc 1 36250 0
	movq	-8(%rbp), %rax	# insn, tmp1750
	movq	%rax, %rdi	# tmp1750,
	call	extract_constrain_insn_cached	#
	.loc 1 36251 0
	movq	-8(%rbp), %rax	# insn, tmp1751
	movq	%rax, %rdi	# tmp1751,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7468	#,
	.loc 1 36251 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5880
	cmpl	$3, %eax	#, which_alternative.5880
	jne	.L7469	#,
	.loc 1 36251 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5881
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5882
	movl	%eax, %ecx	# ix86_cpu.5883, tmp1919
	sarl	%cl, %edx	# tmp1919, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7470	#,
	.loc 1 36251 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5884
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5885
	movl	%eax, %ecx	# ix86_cpu.5886, tmp1921
	sarl	%cl, %edx	# tmp1921, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7470	#,
.L7469:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5887
	cmpl	$3, %eax	#, which_alternative.5887
	jne	.L7471	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5888
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5889
	movl	%eax, %ecx	# ix86_cpu.5890, tmp1923
	sarl	%cl, %edx	# tmp1923, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7468	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5891
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5892
	movl	%eax, %ecx	# ix86_cpu.5893, tmp1925
	sarl	%cl, %edx	# tmp1925, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7468	#,
.L7471:
	.loc 1 36251 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5894
	cmpl	$3, %eax	#, which_alternative.5894
	je	.L7468	#,
	.loc 1 36251 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5895
	cmpl	$5, %eax	#, which_alternative.5895
	je	.L7468	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5896
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5897
	movl	%eax, %ecx	# ix86_cpu.5898, tmp1927
	sarl	%cl, %edx	# tmp1927, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7470	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5899
	cmpl	$2, %eax	#, which_alternative.5899
	je	.L7468	#,
.L7470:
	.loc 1 36251 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1752
	movq	%rax, %rdi	# tmp1752,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7472	#,
	.loc 1 36251 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5900
	cmpl	$3, %eax	#, which_alternative.5900
	jne	.L7473	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5901
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5902
	movl	%eax, %ecx	# ix86_cpu.5903, tmp1929
	sarl	%cl, %edx	# tmp1929, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7468	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5904
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5905
	movl	%eax, %ecx	# ix86_cpu.5906, tmp1931
	sarl	%cl, %edx	# tmp1931, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7468	#,
.L7473:
	.loc 1 36251 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5907
	cmpl	$3, %eax	#, which_alternative.5907
	jne	.L7474	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5908
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5909
	movl	%eax, %ecx	# ix86_cpu.5910, tmp1933
	sarl	%cl, %edx	# tmp1933, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7472	#,
	.loc 1 36251 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5911
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5912
	movl	%eax, %ecx	# ix86_cpu.5913, tmp1935
	sarl	%cl, %edx	# tmp1935, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7472	#,
.L7474:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5914
	cmpl	$3, %eax	#, which_alternative.5914
	je	.L7472	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5915
	cmpl	$5, %eax	#, which_alternative.5915
	je	.L7472	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5916
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5917
	movl	%eax, %ecx	# ix86_cpu.5918, tmp1937
	sarl	%cl, %edx	# tmp1937, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7468	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5919
	cmpl	$2, %eax	#, which_alternative.5919
	je	.L7472	#,
.L7468:
	.loc 1 36253 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1753
	movq	%rax, %rdi	# tmp1753,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7475	#,
	.loc 1 36253 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5920
	cmpl	$3, %eax	#, which_alternative.5920
	jne	.L7476	#,
	.loc 1 36253 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5921
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5922
	movl	%eax, %ecx	# ix86_cpu.5923, tmp1939
	sarl	%cl, %edx	# tmp1939, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7477	#,
	.loc 1 36253 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5924
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5925
	movl	%eax, %ecx	# ix86_cpu.5926, tmp1941
	sarl	%cl, %edx	# tmp1941, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7477	#,
.L7476:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5927
	cmpl	$3, %eax	#, which_alternative.5927
	jne	.L7478	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.5928
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5929
	movl	%eax, %ecx	# ix86_cpu.5930, tmp1943
	sarl	%cl, %edx	# tmp1943, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7475	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.5931
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5932
	movl	%eax, %ecx	# ix86_cpu.5933, tmp1945
	sarl	%cl, %edx	# tmp1945, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7475	#,
.L7478:
	.loc 1 36253 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5934
	cmpl	$3, %eax	#, which_alternative.5934
	je	.L7475	#,
	.loc 1 36253 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5935
	cmpl	$5, %eax	#, which_alternative.5935
	je	.L7475	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.5936
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5937
	movl	%eax, %ecx	# ix86_cpu.5938, tmp1947
	sarl	%cl, %edx	# tmp1947, D.57549
	movl	%edx, %eax	# D.57549, D.57549
	andl	$1, %eax	#, D.57549
	testl	%eax, %eax	# D.57549
	je	.L7477	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5939
	cmpl	$2, %eax	#, which_alternative.5939
	jne	.L7477	#,
.L7475:
	.loc 1 36255 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7477:
	.loc 1 36259 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7472:
	.loc 1 36264 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7397:
	.loc 1 36271 0
	movq	-8(%rbp), %rax	# insn, tmp1754
	movq	%rax, %rdi	# tmp1754,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7479	#,
	.loc 1 36271 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1755
	movq	%rax, %rdi	# tmp1755,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57553
	jne	.L7479	#,
	movq	-8(%rbp), %rax	# insn, tmp1756
	movq	%rax, %rdi	# tmp1756,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7480	#,
	movq	-8(%rbp), %rax	# insn, tmp1757
	movq	%rax, %rdi	# tmp1757,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57553
	jne	.L7480	#,
.L7479:
	.loc 1 36273 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1758
	movq	%rax, %rdi	# tmp1758,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7481	#,
	.loc 1 36273 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1759
	movq	%rax, %rdi	# tmp1759,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57553
	je	.L7482	#,
.L7481:
	.loc 1 36275 0 is_stmt 1
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7482:
	.loc 1 36279 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7480:
	.loc 1 36284 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7396:
	.loc 1 36306 0
	movq	-8(%rbp), %rax	# insn, tmp1760
	movq	%rax, %rdi	# tmp1760,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57554
	jne	.L7483	#,
	.loc 1 36308 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7483:
	.loc 1 36312 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7395:
	.loc 1 36359 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7394:
	.loc 1 36365 0
	movq	-8(%rbp), %rax	# insn, tmp1761
	movq	%rax, %rdi	# tmp1761,
	call	extract_insn_cached	#
	.loc 1 36366 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7484	#,
	.loc 1 36368 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7484:
	.loc 1 36372 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7393:
	.loc 1 36383 0
	movq	-8(%rbp), %rax	# insn, tmp1762
	movq	%rax, %rdi	# tmp1762,
	call	extract_insn_cached	#
	.loc 1 36384 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57550
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	memory_operand	#
	testl	%eax, %eax	# D.57549
	je	.L7485	#,
	.loc 1 36386 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7485:
	.loc 1 36390 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7392:
	.loc 1 36518 0
	movq	-8(%rbp), %rax	# insn, tmp1763
	movq	%rax, %rdi	# tmp1763,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	jne	.L7486	#,
	.loc 1 36520 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7486:
	.loc 1 36524 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7390:
	.loc 1 36528 0
	movq	-8(%rbp), %rax	# insn, tmp1764
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57550
	movzwl	(%rax), %eax	# _1651->code, D.57555
	cmpw	$40, %ax	#, D.57555
	je	.L7389	#,
	.loc 1 36529 0
	movq	-8(%rbp), %rax	# insn, tmp1765
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57550
	movq	%rax, %rdi	# D.57550,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57549
	jns	.L7389	#,
	.loc 1 36530 0
	movq	-8(%rbp), %rax	# insn, tmp1766
	movl	$__FUNCTION__.25501, %ecx	#,
	movl	$36530, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1766,
	call	_fatal_insn_not_found	#
.L7389:
	.loc 1 36532 0
	movl	$1, %eax	#, D.57549
	jmp	.L7186	#
.L7185:
	.loc 1 36537 0
	movq	-8(%rbp), %rax	# insn, tmp1767
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, D.57549
	testl	%eax, %eax	# D.57549
	js	.L7487	#,
	.loc 1 36537 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1768
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, iftmp.5940
	jmp	.L7488	#
.L7487:
	.loc 1 36537 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1769
	movq	%rax, %rdi	# tmp1769,
	call	recog_memoized_1	#
.L7488:
	.loc 1 36537 0 discriminator 3
	addl	$1, %eax	#, tmp1770
	cmpl	$623, %eax	#, tmp1770
	ja	.L7489	#,
	movl	%eax, %eax	# tmp1770, tmp1771
	movq	.L7491(,%rax,8), %rax	#, tmp1772
	jmp	*%rax	# tmp1772
	.section	.rodata
	.align 8
	.align 4
.L7491:
	.quad	.L7490
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7489
	.quad	.L7492
	.quad	.L7492
	.quad	.L7489
	.quad	.L7489
	.quad	.L7492
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7492
	.quad	.L7493
	.quad	.L7489
	.quad	.L7492
	.quad	.L7493
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7494
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7495
	.quad	.L7495
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7495
	.quad	.L7495
	.quad	.L7495
	.quad	.L7495
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7496
	.quad	.L7489
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7493
	.quad	.L7493
	.quad	.L7497
	.quad	.L7492
	.quad	.L7489
	.quad	.L7493
	.quad	.L7492
	.quad	.L7493
	.quad	.L7492
	.quad	.L7493
	.quad	.L7492
	.quad	.L7493
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7489
	.quad	.L7489
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7489
	.quad	.L7489
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7489
	.quad	.L7489
	.quad	.L7493
	.quad	.L7493
	.quad	.L7489
	.quad	.L7493
	.quad	.L7493
	.quad	.L7489
	.quad	.L7493
	.quad	.L7493
	.quad	.L7489
	.quad	.L7493
	.quad	.L7493
	.quad	.L7489
	.quad	.L7493
	.quad	.L7493
	.quad	.L7493
	.quad	.L7493
	.quad	.L7493
	.quad	.L7493
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7492
	.quad	.L7493
	.quad	.L7489
	.quad	.L7492
	.quad	.L7493
	.quad	.L7489
	.quad	.L7492
	.quad	.L7492
	.quad	.L7498
	.quad	.L7499
	.quad	.L7489
	.quad	.L7498
	.quad	.L7498
	.quad	.L7500
	.quad	.L7501
	.quad	.L7489
	.quad	.L7500
	.quad	.L7500
	.quad	.L7500
	.quad	.L7500
	.quad	.L7502
	.quad	.L7503
	.quad	.L7502
	.quad	.L7503
	.quad	.L7502
	.quad	.L7503
	.quad	.L7502
	.quad	.L7503
	.quad	.L7502
	.quad	.L7503
	.quad	.L7502
	.quad	.L7503
	.quad	.L7502
	.quad	.L7503
	.quad	.L7493
	.quad	.L7489
	.quad	.L7492
	.quad	.L7493
	.quad	.L7489
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7492
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7489
	.quad	.L7496
	.quad	.L7496
	.quad	.L7496
	.quad	.L7492
	.quad	.L7492
	.text
.L7503:
	.loc 1 36546 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1773
	movq	%rax, %rdi	# tmp1773,
	call	extract_insn_cached	#
	.loc 1 36547 0
	movq	-8(%rbp), %rax	# insn, tmp1774
	movq	%rax, %rdi	# tmp1774,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57553
	je	.L7504	#,
	.loc 1 36547 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57550
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	mult_operator	#
	testl	%eax, %eax	# D.57549
	jne	.L7504	#,
	.loc 1 36549 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7504:
	.loc 1 36553 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7502:
	.loc 1 36563 0
	movq	-8(%rbp), %rax	# insn, tmp1775
	movq	%rax, %rdi	# tmp1775,
	call	extract_insn_cached	#
	.loc 1 36564 0
	movq	-8(%rbp), %rax	# insn, tmp1776
	movq	%rax, %rdi	# tmp1776,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57553
	je	.L7505	#,
	.loc 1 36564 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57550
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	mult_operator	#
	testl	%eax, %eax	# D.57549
	jne	.L7505	#,
	.loc 1 36566 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7505:
	.loc 1 36570 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7501:
	.loc 1 36574 0
	movq	-8(%rbp), %rax	# insn, tmp1777
	movq	%rax, %rdi	# tmp1777,
	call	extract_constrain_insn_cached	#
	.loc 1 36575 0
	movq	-8(%rbp), %rax	# insn, tmp1778
	movq	%rax, %rdi	# tmp1778,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57553
	je	.L7506	#,
	.loc 1 36575 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5941
	cmpl	$2, %eax	#, which_alternative.5941
	je	.L7507	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57550
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	mult_operator	#
	testl	%eax, %eax	# D.57549
	jne	.L7506	#,
.L7507:
	.loc 1 36577 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7506:
	.loc 1 36581 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7500:
	.loc 1 36589 0
	movq	-8(%rbp), %rax	# insn, tmp1779
	movq	%rax, %rdi	# tmp1779,
	call	extract_insn_cached	#
	.loc 1 36590 0
	movq	-8(%rbp), %rax	# insn, tmp1780
	movq	%rax, %rdi	# tmp1780,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57553
	je	.L7508	#,
	.loc 1 36590 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57550
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	mult_operator	#
	testl	%eax, %eax	# D.57549
	jne	.L7508	#,
	.loc 1 36592 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7508:
	.loc 1 36596 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7499:
	.loc 1 36600 0
	movq	-8(%rbp), %rax	# insn, tmp1781
	movq	%rax, %rdi	# tmp1781,
	call	extract_constrain_insn_cached	#
	.loc 1 36601 0
	movq	-8(%rbp), %rax	# insn, tmp1782
	movq	%rax, %rdi	# tmp1782,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57553
	je	.L7509	#,
	.loc 1 36601 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5942
	cmpl	$2, %eax	#, which_alternative.5942
	je	.L7510	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57550
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	mult_operator	#
	testl	%eax, %eax	# D.57549
	jne	.L7509	#,
.L7510:
	.loc 1 36603 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7509:
	.loc 1 36607 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7498:
	.loc 1 36613 0
	movq	-8(%rbp), %rax	# insn, tmp1783
	movq	%rax, %rdi	# tmp1783,
	call	extract_insn_cached	#
	.loc 1 36614 0
	movq	-8(%rbp), %rax	# insn, tmp1784
	movq	%rax, %rdi	# tmp1784,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57553
	je	.L7511	#,
	.loc 1 36614 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57550
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57550,
	call	mult_operator	#
	testl	%eax, %eax	# D.57549
	jne	.L7511	#,
	.loc 1 36616 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7511:
	.loc 1 36620 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7497:
	.loc 1 36624 0
	movq	-8(%rbp), %rax	# insn, tmp1785
	movq	%rax, %rdi	# tmp1785,
	call	extract_constrain_insn_cached	#
	.loc 1 36625 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5943
	testl	%eax, %eax	# which_alternative.5943
	jne	.L7512	#,
	.loc 1 36627 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7512:
	.loc 1 36631 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7496:
	.loc 1 36638 0
	movq	-8(%rbp), %rax	# insn, tmp1786
	movq	%rax, %rdi	# tmp1786,
	call	extract_constrain_insn_cached	#
	.loc 1 36639 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5944
	testl	%eax, %eax	# which_alternative.5944
	je	.L7513	#,
	.loc 1 36639 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5945
	cmpl	$1, %eax	#, which_alternative.5945
	je	.L7513	#,
	.loc 1 36641 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7513:
	.loc 1 36645 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7495:
	.loc 1 36654 0
	movq	-8(%rbp), %rax	# insn, tmp1787
	movq	%rax, %rdi	# tmp1787,
	call	extract_constrain_insn_cached	#
	.loc 1 36655 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5946
	testl	%eax, %eax	# which_alternative.5946
	je	.L7514	#,
	.loc 1 36655 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5947
	cmpl	$1, %eax	#, which_alternative.5947
	je	.L7514	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5948
	cmpl	$2, %eax	#, which_alternative.5948
	je	.L7514	#,
	.loc 1 36657 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7514:
	.loc 1 36661 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7494:
	.loc 1 36665 0
	movq	-8(%rbp), %rax	# insn, tmp1788
	movq	%rax, %rdi	# tmp1788,
	call	extract_constrain_insn_cached	#
	.loc 1 36666 0
	movq	-8(%rbp), %rax	# insn, tmp1789
	movq	%rax, %rdi	# tmp1789,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7515	#,
	.loc 1 36666 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5949
	cmpl	$3, %eax	#, which_alternative.5949
	je	.L7516	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5950
	cmpl	$4, %eax	#, which_alternative.5950
	jne	.L7515	#,
.L7516:
	.loc 1 36666 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1790
	movq	%rax, %rdi	# tmp1790,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57551
	je	.L7517	#,
	.loc 1 36666 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5951
	testl	%eax, %eax	# which_alternative.5951
	je	.L7517	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5952
	cmpl	$1, %eax	#, which_alternative.5952
	je	.L7517	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5953
	cmpl	$2, %eax	#, which_alternative.5953
	je	.L7517	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5954
	cmpl	$3, %eax	#, which_alternative.5954
	je	.L7515	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5955
	cmpl	$4, %eax	#, which_alternative.5955
	je	.L7515	#,
.L7517:
	.loc 1 36666 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5956
	testl	%eax, %eax	# which_alternative.5956
	je	.L7515	#,
	.loc 1 36666 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5957
	cmpl	$1, %eax	#, which_alternative.5957
	je	.L7515	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5958
	cmpl	$2, %eax	#, which_alternative.5958
	jne	.L7518	#,
.L7515:
	.loc 1 36668 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5959
	testl	%eax, %eax	# which_alternative.5959
	je	.L7519	#,
	.loc 1 36668 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5960
	cmpl	$1, %eax	#, which_alternative.5960
	je	.L7519	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5961
	cmpl	$2, %eax	#, which_alternative.5961
	je	.L7519	#,
	.loc 1 36670 0 is_stmt 1
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7519:
	.loc 1 36674 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7518:
	.loc 1 36679 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7493:
	.loc 1 36708 0
	movq	-8(%rbp), %rax	# insn, tmp1791
	movq	%rax, %rdi	# tmp1791,
	call	extract_constrain_insn_cached	#
	.loc 1 36709 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5962
	testl	%eax, %eax	# which_alternative.5962
	je	.L7520	#,
	.loc 1 36711 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7520:
	.loc 1 36715 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7492:
	.loc 1 36787 0
	movl	$0, %eax	#, D.57549
	jmp	.L7186	#
.L7490:
	.loc 1 36790 0
	movq	-8(%rbp), %rax	# insn, tmp1792
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57550
	movzwl	(%rax), %eax	# _1725->code, D.57555
	cmpw	$40, %ax	#, D.57555
	je	.L7489	#,
	.loc 1 36791 0
	movq	-8(%rbp), %rax	# insn, tmp1793
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57550
	movq	%rax, %rdi	# D.57550,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57549
	jns	.L7489	#,
	.loc 1 36792 0
	movq	-8(%rbp), %rax	# insn, tmp1794
	movl	$__FUNCTION__.25501, %ecx	#,
	movl	$36792, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1794,
	call	_fatal_insn_not_found	#
.L7489:
	.loc 1 36794 0
	movl	$2, %eax	#, D.57549
	jmp	.L7186	#
.L7171:
	.loc 1 36799 0
	movl	$__FUNCTION__.25501, %edx	#,
	movl	$36799, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L7186:
	.loc 1 36801 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE89:
	.size	pent_np_unit_blockage, .-pent_np_unit_blockage
	.type	pent_np_unit_conflict_cost, @function
pent_np_unit_conflict_cost:
.LFB90:
	.loc 1 36808 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# executing_insn, executing_insn
	movq	%rsi, -32(%rbp)	# candidate_insn, candidate_insn
	.loc 1 36812 0
	movq	-24(%rbp), %rax	# executing_insn, tmp1345
	movq	%rax, -8(%rbp)	# tmp1345, insn
	.loc 1 36813 0
	movq	-8(%rbp), %rax	# insn, tmp1346
	movl	40(%rax), %eax	# insn_55->fld[4].rtint, D.57556
	testl	%eax, %eax	# D.57556
	js	.L7522	#,
	.loc 1 36813 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1347
	movl	40(%rax), %eax	# insn_55->fld[4].rtint, iftmp.5963
	jmp	.L7523	#
.L7522:
	.loc 1 36813 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1348
	movq	%rax, %rdi	# tmp1348,
	call	recog_memoized_1	#
.L7523:
	.loc 1 36813 0 discriminator 3
	addl	$1, %eax	#, tmp1349
	cmpl	$657, %eax	#, tmp1349
	ja	.L7524	#,
	movl	%eax, %eax	# tmp1349, tmp1350
	movq	.L7526(,%rax,8), %rax	#, tmp1351
	jmp	*%rax	# tmp1351
	.section	.rodata
	.align 8
	.align 4
.L7526:
	.quad	.L7525
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7528
	.quad	.L7528
	.quad	.L7528
	.quad	.L7529
	.quad	.L7529
	.quad	.L7530
	.quad	.L7530
	.quad	.L7531
	.quad	.L7527
	.quad	.L7527
	.quad	.L7524
	.quad	.L7528
	.quad	.L7528
	.quad	.L7532
	.quad	.L7527
	.quad	.L7527
	.quad	.L7524
	.quad	.L7524
	.quad	.L7527
	.quad	.L7530
	.quad	.L7528
	.quad	.L7528
	.quad	.L7533
	.quad	.L7524
	.quad	.L7527
	.quad	.L7530
	.quad	.L7524
	.quad	.L7524
	.quad	.L7532
	.quad	.L7532
	.quad	.L7527
	.quad	.L7527
	.quad	.L7524
	.quad	.L7532
	.quad	.L7534
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7524
	.quad	.L7535
	.quad	.L7528
	.quad	.L7529
	.quad	.L7529
	.quad	.L7530
	.quad	.L7530
	.quad	.L7524
	.quad	.L7531
	.quad	.L7527
	.quad	.L7527
	.quad	.L7524
	.quad	.L7536
	.quad	.L7536
	.quad	.L7537
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7538
	.quad	.L7538
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7539
	.quad	.L7539
	.quad	.L7539
	.quad	.L7539
	.quad	.L7524
	.quad	.L7524
	.quad	.L7530
	.quad	.L7524
	.quad	.L7530
	.quad	.L7540
	.quad	.L7524
	.quad	.L7530
	.quad	.L7540
	.quad	.L7524
	.quad	.L7524
	.quad	.L7541
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7542
	.quad	.L7524
	.quad	.L7543
	.quad	.L7543
	.quad	.L7543
	.quad	.L7543
	.quad	.L7544
	.quad	.L7544
	.quad	.L7545
	.quad	.L7546
	.quad	.L7524
	.quad	.L7544
	.quad	.L7546
	.quad	.L7544
	.quad	.L7546
	.quad	.L7544
	.quad	.L7546
	.quad	.L7544
	.quad	.L7546
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7544
	.quad	.L7544
	.quad	.L7524
	.quad	.L7544
	.quad	.L7544
	.quad	.L7524
	.quad	.L7544
	.quad	.L7544
	.quad	.L7524
	.quad	.L7544
	.quad	.L7544
	.quad	.L7524
	.quad	.L7547
	.quad	.L7547
	.quad	.L7547
	.quad	.L7547
	.quad	.L7547
	.quad	.L7547
	.quad	.L7524
	.quad	.L7548
	.quad	.L7549
	.quad	.L7548
	.quad	.L7548
	.quad	.L7549
	.quad	.L7549
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7551
	.quad	.L7552
	.quad	.L7552
	.quad	.L7552
	.quad	.L7552
	.quad	.L7551
	.quad	.L7551
	.quad	.L7553
	.quad	.L7553
	.quad	.L7553
	.quad	.L7553
	.quad	.L7553
	.quad	.L7553
	.quad	.L7554
	.quad	.L7555
	.quad	.L7555
	.quad	.L7555
	.quad	.L7555
	.quad	.L7555
	.quad	.L7556
	.quad	.L7557
	.quad	.L7557
	.quad	.L7557
	.quad	.L7555
	.quad	.L7557
	.quad	.L7557
	.quad	.L7557
	.quad	.L7549
	.quad	.L7524
	.quad	.L7548
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7548
	.quad	.L7548
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7558
	.quad	.L7559
	.quad	.L7559
	.quad	.L7524
	.quad	.L7524
	.quad	.L7559
	.quad	.L7524
	.quad	.L7524
	.quad	.L7559
	.quad	.L7524
	.quad	.L7524
	.quad	.L7559
	.quad	.L7524
	.quad	.L7559
	.quad	.L7559
	.quad	.L7560
	.quad	.L7561
	.quad	.L7561
	.quad	.L7562
	.quad	.L7524
	.quad	.L7527
	.quad	.L7527
	.quad	.L7527
	.quad	.L7524
	.quad	.L7524
	.quad	.L7563
	.quad	.L7549
	.quad	.L7564
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7564
	.quad	.L7549
	.quad	.L7549
	.quad	.L7530
	.quad	.L7549
	.quad	.L7530
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7530
	.quad	.L7549
	.quad	.L7530
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7549
	.quad	.L7524
	.quad	.L7565
	.quad	.L7565
	.quad	.L7565
	.quad	.L7565
	.quad	.L7565
	.quad	.L7565
	.quad	.L7565
	.quad	.L7565
	.quad	.L7565
	.quad	.L7565
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7565
	.quad	.L7530
	.quad	.L7565
	.quad	.L7565
	.quad	.L7530
	.quad	.L7530
	.quad	.L7565
	.quad	.L7530
	.quad	.L7565
	.quad	.L7530
	.quad	.L7566
	.quad	.L7566
	.quad	.L7524
	.quad	.L7524
	.quad	.L7567
	.quad	.L7566
	.quad	.L7568
	.quad	.L7566
	.quad	.L7569
	.quad	.L7566
	.quad	.L7566
	.quad	.L7566
	.quad	.L7566
	.quad	.L7566
	.quad	.L7566
	.quad	.L7570
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7524
	.quad	.L7524
	.quad	.L7567
	.quad	.L7570
	.quad	.L7570
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7524
	.quad	.L7524
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7571
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7550
	.quad	.L7550
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7550
	.quad	.L7572
	.quad	.L7573
	.quad	.L7573
	.quad	.L7573
	.quad	.L7573
	.quad	.L7573
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7550
	.quad	.L7524
	.quad	.L7549
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7574
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7575
	.quad	.L7550
	.quad	.L7524
	.quad	.L7550
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7576
	.quad	.L7576
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7524
	.quad	.L7577
	.quad	.L7577
	.quad	.L7577
	.quad	.L7577
	.quad	.L7577
	.quad	.L7577
	.text
.L7577:
	.loc 1 36821 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1352
	movq	%rax, %rdi	# tmp1352,
	call	extract_insn_cached	#
	.loc 1 36822 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7578	#,
	.loc 1 36824 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 36830 0
	jmp	.L7580	#
.L7578:
	.loc 1 36828 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 36830 0
	jmp	.L7580	#
.L7576:
	.loc 1 36834 0
	movq	-8(%rbp), %rax	# insn, tmp1353
	movq	%rax, %rdi	# tmp1353,
	call	extract_constrain_insn_cached	#
	.loc 1 36835 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5964
	testl	%eax, %eax	# which_alternative.5964
	jne	.L7581	#,
	.loc 1 36835 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1354
	movq	%rax, %rdi	# tmp1354,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7581	#,
	movq	-8(%rbp), %rax	# insn, tmp1355
	movq	%rax, %rdi	# tmp1355,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7581	#,
	.loc 1 36837 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7582	#
.L7581:
	.loc 1 36839 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5965
	testl	%eax, %eax	# which_alternative.5965
	jne	.L7583	#,
	.loc 1 36839 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1356
	movq	%rax, %rdi	# tmp1356,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7583	#,
	movq	-8(%rbp), %rax	# insn, tmp1357
	movq	%rax, %rdi	# tmp1357,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7584	#,
	movq	-8(%rbp), %rax	# insn, tmp1358
	movq	%rax, %rdi	# tmp1358,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7583	#,
.L7584:
	.loc 1 36841 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7582	#
.L7583:
	.loc 1 36843 0
	movq	-8(%rbp), %rax	# insn, tmp1359
	movq	%rax, %rdi	# tmp1359,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7585	#,
	.loc 1 36845 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7582	#
.L7585:
	.loc 1 36847 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5966
	testl	%eax, %eax	# which_alternative.5966
	jne	.L7586	#,
	.loc 1 36847 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1360
	movq	%rax, %rdi	# tmp1360,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7586	#,
	.loc 1 36849 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7582	#
.L7586:
	.loc 1 36851 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5967
	testl	%eax, %eax	# which_alternative.5967
	jne	.L7587	#,
	.loc 1 36851 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1361
	movq	%rax, %rdi	# tmp1361,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7588	#,
	movq	-8(%rbp), %rax	# insn, tmp1362
	movq	%rax, %rdi	# tmp1362,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7587	#,
.L7588:
	.loc 1 36853 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7582	#
.L7587:
	.loc 1 36857 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 36859 0
	jmp	.L7580	#
.L7582:
	jmp	.L7580	#
.L7575:
	.loc 1 36891 0
	movl	$1, -12(%rbp)	#, casenum
	.loc 1 36892 0
	jmp	.L7580	#
.L7574:
	.loc 1 36895 0
	movl	$5, -12(%rbp)	#, casenum
	.loc 1 36896 0
	jmp	.L7580	#
.L7573:
	.loc 1 36903 0
	movq	-8(%rbp), %rax	# insn, tmp1363
	movq	%rax, %rdi	# tmp1363,
	call	extract_insn_cached	#
	.loc 1 36904 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7589	#,
	.loc 1 36906 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 36912 0
	jmp	.L7580	#
.L7589:
	.loc 1 36910 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 36912 0
	jmp	.L7580	#
.L7572:
	.loc 1 36915 0
	movq	-8(%rbp), %rax	# insn, tmp1364
	movq	%rax, %rdi	# tmp1364,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57560
	je	.L7591	#,
	.loc 1 36917 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 36923 0
	jmp	.L7580	#
.L7591:
	.loc 1 36921 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 36923 0
	jmp	.L7580	#
.L7571:
	.loc 1 36985 0
	movq	-8(%rbp), %rax	# insn, tmp1365
	movq	%rax, %rdi	# tmp1365,
	call	extract_insn_cached	#
	.loc 1 36986 0
	movq	-8(%rbp), %rax	# insn, tmp1366
	movq	%rax, %rdi	# tmp1366,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7593	#,
	.loc 1 36986 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7594	#,
.L7593:
	.loc 1 36986 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1367
	movq	%rax, %rdi	# tmp1367,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7594	#,
	.loc 1 36988 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7595	#
.L7594:
	.loc 1 36990 0
	movq	-8(%rbp), %rax	# insn, tmp1368
	movq	%rax, %rdi	# tmp1368,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7596	#,
	.loc 1 36990 0 is_stmt 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7597	#,
.L7596:
	.loc 1 36990 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1369
	movq	%rax, %rdi	# tmp1369,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7598	#,
	movq	-8(%rbp), %rax	# insn, tmp1370
	movq	%rax, %rdi	# tmp1370,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7597	#,
.L7598:
	.loc 1 36992 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7595	#
.L7597:
	.loc 1 36994 0
	movq	-8(%rbp), %rax	# insn, tmp1371
	movq	%rax, %rdi	# tmp1371,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7599	#,
	.loc 1 36994 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7600	#,
.L7599:
	.loc 1 36996 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7595	#
.L7600:
	.loc 1 36998 0
	movq	-8(%rbp), %rax	# insn, tmp1372
	movq	%rax, %rdi	# tmp1372,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7601	#,
	.loc 1 37000 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7595	#
.L7601:
	.loc 1 37002 0
	movq	-8(%rbp), %rax	# insn, tmp1373
	movq	%rax, %rdi	# tmp1373,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7602	#,
	.loc 1 37002 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1374
	movq	%rax, %rdi	# tmp1374,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7603	#,
.L7602:
	.loc 1 37004 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7595	#
.L7603:
	.loc 1 37008 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37010 0
	jmp	.L7580	#
.L7595:
	jmp	.L7580	#
.L7570:
	.loc 1 37015 0
	movq	-8(%rbp), %rax	# insn, tmp1375
	movq	%rax, %rdi	# tmp1375,
	call	extract_constrain_insn_cached	#
	.loc 1 37016 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5968
	cmpl	$1, %eax	#, which_alternative.5968
	jne	.L7604	#,
	.loc 1 37016 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1376
	movq	%rax, %rdi	# tmp1376,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7605	#,
	.loc 1 37016 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7604	#,
.L7605:
	.loc 1 37016 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1377
	movq	%rax, %rdi	# tmp1377,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7604	#,
	.loc 1 37018 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7606	#
.L7604:
	.loc 1 37020 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5969
	cmpl	$1, %eax	#, which_alternative.5969
	jne	.L7607	#,
	.loc 1 37020 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1378
	movq	%rax, %rdi	# tmp1378,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7608	#,
	.loc 1 37020 0 discriminator 2
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7607	#,
.L7608:
	.loc 1 37020 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1379
	movq	%rax, %rdi	# tmp1379,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7609	#,
	movq	-8(%rbp), %rax	# insn, tmp1380
	movq	%rax, %rdi	# tmp1380,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7607	#,
.L7609:
	.loc 1 37022 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7606	#
.L7607:
	.loc 1 37024 0
	movq	-8(%rbp), %rax	# insn, tmp1381
	movq	%rax, %rdi	# tmp1381,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7610	#,
	.loc 1 37024 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5970
	cmpl	$1, %eax	#, which_alternative.5970
	jne	.L7610	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7611	#,
.L7610:
	.loc 1 37026 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7606	#
.L7611:
	.loc 1 37028 0
	movq	-8(%rbp), %rax	# insn, tmp1382
	movq	%rax, %rdi	# tmp1382,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7612	#,
	.loc 1 37030 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7606	#
.L7612:
	.loc 1 37032 0
	movq	-8(%rbp), %rax	# insn, tmp1383
	movq	%rax, %rdi	# tmp1383,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7613	#,
	.loc 1 37032 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1384
	movq	%rax, %rdi	# tmp1384,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7614	#,
.L7613:
	.loc 1 37034 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7606	#
.L7614:
	.loc 1 37038 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37040 0
	jmp	.L7580	#
.L7606:
	jmp	.L7580	#
.L7569:
	.loc 1 37043 0
	movq	-8(%rbp), %rax	# insn, tmp1385
	movq	%rax, %rdi	# tmp1385,
	call	extract_constrain_insn_cached	#
	.loc 1 37044 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5971
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5972
	movl	%eax, %ecx	# ix86_cpu.5973, tmp1797
	sarl	%cl, %edx	# tmp1797, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7615	#,
	.loc 1 37044 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7616	#,
.L7615:
	.loc 1 37044 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5974
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5975
	movl	%eax, %ecx	# ix86_cpu.5976, tmp1799
	sarl	%cl, %edx	# tmp1799, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7616	#,
	.loc 1 37044 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7617	#,
.L7616:
	movq	-8(%rbp), %rax	# insn, tmp1386
	movq	%rax, %rdi	# tmp1386,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7617	#,
	movq	-8(%rbp), %rax	# insn, tmp1387
	movq	%rax, %rdi	# tmp1387,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7617	#,
	.loc 1 37046 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7618	#
.L7617:
	.loc 1 37048 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5977
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5978
	movl	%eax, %ecx	# ix86_cpu.5979, tmp1801
	sarl	%cl, %edx	# tmp1801, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7619	#,
	.loc 1 37048 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7620	#,
.L7619:
	.loc 1 37048 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5980
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5981
	movl	%eax, %ecx	# ix86_cpu.5982, tmp1803
	sarl	%cl, %edx	# tmp1803, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7620	#,
	.loc 1 37048 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7621	#,
.L7620:
	movq	-8(%rbp), %rax	# insn, tmp1388
	movq	%rax, %rdi	# tmp1388,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7621	#,
	movq	-8(%rbp), %rax	# insn, tmp1389
	movq	%rax, %rdi	# tmp1389,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7622	#,
	movq	-8(%rbp), %rax	# insn, tmp1390
	movq	%rax, %rdi	# tmp1390,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7621	#,
.L7622:
	.loc 1 37050 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7618	#
.L7621:
	.loc 1 37052 0
	movq	-8(%rbp), %rax	# insn, tmp1391
	movq	%rax, %rdi	# tmp1391,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7623	#,
	.loc 1 37054 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7618	#
.L7623:
	.loc 1 37056 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5983
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5984
	movl	%eax, %ecx	# ix86_cpu.5985, tmp1805
	sarl	%cl, %edx	# tmp1805, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7624	#,
	.loc 1 37056 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7625	#,
.L7624:
	.loc 1 37056 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5986
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5987
	movl	%eax, %ecx	# ix86_cpu.5988, tmp1807
	sarl	%cl, %edx	# tmp1807, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7625	#,
	.loc 1 37056 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7626	#,
.L7625:
	movq	-8(%rbp), %rax	# insn, tmp1392
	movq	%rax, %rdi	# tmp1392,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7626	#,
	.loc 1 37058 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7618	#
.L7626:
	.loc 1 37060 0
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5989
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5990
	movl	%eax, %ecx	# ix86_cpu.5991, tmp1809
	sarl	%cl, %edx	# tmp1809, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7627	#,
	.loc 1 37060 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7628	#,
.L7627:
	.loc 1 37060 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5992
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5993
	movl	%eax, %ecx	# ix86_cpu.5994, tmp1811
	sarl	%cl, %edx	# tmp1811, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7628	#,
	.loc 1 37060 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7629	#,
.L7628:
	movq	-8(%rbp), %rax	# insn, tmp1393
	movq	%rax, %rdi	# tmp1393,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7630	#,
	movq	-8(%rbp), %rax	# insn, tmp1394
	movq	%rax, %rdi	# tmp1394,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7629	#,
.L7630:
	.loc 1 37062 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7618	#
.L7629:
	.loc 1 37066 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37068 0
	jmp	.L7580	#
.L7618:
	jmp	.L7580	#
.L7568:
	.loc 1 37071 0
	movq	-8(%rbp), %rax	# insn, tmp1395
	movq	%rax, %rdi	# tmp1395,
	call	extract_constrain_insn_cached	#
	.loc 1 37072 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.5995
	testl	%eax, %eax	# which_alternative.5995
	jne	.L7631	#,
	.loc 1 37072 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5996
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.5997
	movl	%eax, %ecx	# ix86_cpu.5998, tmp1813
	sarl	%cl, %edx	# tmp1813, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7632	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7633	#,
.L7632:
	.loc 1 37072 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.5999
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6000
	movl	%eax, %ecx	# ix86_cpu.6001, tmp1815
	sarl	%cl, %edx	# tmp1815, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7633	#,
	.loc 1 37072 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7631	#,
.L7633:
	movq	-8(%rbp), %rax	# insn, tmp1396
	movq	%rax, %rdi	# tmp1396,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7631	#,
	movq	-8(%rbp), %rax	# insn, tmp1397
	movq	%rax, %rdi	# tmp1397,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7631	#,
	.loc 1 37074 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7634	#
.L7631:
	.loc 1 37076 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6002
	testl	%eax, %eax	# which_alternative.6002
	jne	.L7635	#,
	.loc 1 37076 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.6003
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6004
	movl	%eax, %ecx	# ix86_cpu.6005, tmp1817
	sarl	%cl, %edx	# tmp1817, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7636	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7637	#,
.L7636:
	.loc 1 37076 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.6006
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6007
	movl	%eax, %ecx	# ix86_cpu.6008, tmp1819
	sarl	%cl, %edx	# tmp1819, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7637	#,
	.loc 1 37076 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7635	#,
.L7637:
	movq	-8(%rbp), %rax	# insn, tmp1398
	movq	%rax, %rdi	# tmp1398,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7635	#,
	movq	-8(%rbp), %rax	# insn, tmp1399
	movq	%rax, %rdi	# tmp1399,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7638	#,
	movq	-8(%rbp), %rax	# insn, tmp1400
	movq	%rax, %rdi	# tmp1400,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7635	#,
.L7638:
	.loc 1 37078 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7634	#
.L7635:
	.loc 1 37080 0
	movq	-8(%rbp), %rax	# insn, tmp1401
	movq	%rax, %rdi	# tmp1401,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7639	#,
	.loc 1 37082 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7634	#
.L7639:
	.loc 1 37084 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6009
	testl	%eax, %eax	# which_alternative.6009
	jne	.L7640	#,
	.loc 1 37084 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.6010
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6011
	movl	%eax, %ecx	# ix86_cpu.6012, tmp1821
	sarl	%cl, %edx	# tmp1821, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7641	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7642	#,
.L7641:
	.loc 1 37084 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.6013
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6014
	movl	%eax, %ecx	# ix86_cpu.6015, tmp1823
	sarl	%cl, %edx	# tmp1823, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7642	#,
	.loc 1 37084 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7640	#,
.L7642:
	movq	-8(%rbp), %rax	# insn, tmp1402
	movq	%rax, %rdi	# tmp1402,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7640	#,
	.loc 1 37086 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7634	#
.L7640:
	.loc 1 37088 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6016
	testl	%eax, %eax	# which_alternative.6016
	jne	.L7643	#,
	.loc 1 37088 0 is_stmt 0 discriminator 1
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.6017
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6018
	movl	%eax, %ecx	# ix86_cpu.6019, tmp1825
	sarl	%cl, %edx	# tmp1825, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7644	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7645	#,
.L7644:
	.loc 1 37088 0 discriminator 2
	movl	x86_double_with_add(%rip), %edx	# x86_double_with_add, x86_double_with_add.6020
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6021
	movl	%eax, %ecx	# ix86_cpu.6022, tmp1827
	sarl	%cl, %edx	# tmp1827, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7645	#,
	.loc 1 37088 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const1_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7643	#,
.L7645:
	movq	-8(%rbp), %rax	# insn, tmp1403
	movq	%rax, %rdi	# tmp1403,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7646	#,
	movq	-8(%rbp), %rax	# insn, tmp1404
	movq	%rax, %rdi	# tmp1404,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7643	#,
.L7646:
	.loc 1 37090 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7634	#
.L7643:
	.loc 1 37094 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37096 0
	jmp	.L7580	#
.L7634:
	jmp	.L7580	#
.L7567:
	.loc 1 37100 0
	movq	-8(%rbp), %rax	# insn, tmp1405
	movq	%rax, %rdi	# tmp1405,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7647	#,
	.loc 1 37102 0
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7648	#
.L7647:
	.loc 1 37104 0
	movq	-8(%rbp), %rax	# insn, tmp1406
	movq	%rax, %rdi	# tmp1406,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7649	#,
	.loc 1 37104 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1407
	movq	%rax, %rdi	# tmp1407,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7650	#,
.L7649:
	.loc 1 37106 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7648	#
.L7650:
	.loc 1 37110 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37112 0
	jmp	.L7580	#
.L7648:
	jmp	.L7580	#
.L7566:
	.loc 1 37124 0
	movq	-8(%rbp), %rax	# insn, tmp1408
	movq	%rax, %rdi	# tmp1408,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57560
	je	.L7651	#,
	.loc 1 37124 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1409
	movq	%rax, %rdi	# tmp1409,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57560
	jne	.L7652	#,
.L7651:
	.loc 1 37124 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1410
	movq	%rax, %rdi	# tmp1410,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7652	#,
	movq	-8(%rbp), %rax	# insn, tmp1411
	movq	%rax, %rdi	# tmp1411,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7652	#,
	.loc 1 37126 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7653	#
.L7652:
	.loc 1 37128 0
	movq	-8(%rbp), %rax	# insn, tmp1412
	movq	%rax, %rdi	# tmp1412,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57560
	je	.L7654	#,
	.loc 1 37128 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1413
	movq	%rax, %rdi	# tmp1413,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57560
	jne	.L7655	#,
.L7654:
	.loc 1 37128 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1414
	movq	%rax, %rdi	# tmp1414,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7655	#,
	movq	-8(%rbp), %rax	# insn, tmp1415
	movq	%rax, %rdi	# tmp1415,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7656	#,
	movq	-8(%rbp), %rax	# insn, tmp1416
	movq	%rax, %rdi	# tmp1416,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7655	#,
.L7656:
	.loc 1 37130 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7653	#
.L7655:
	.loc 1 37132 0
	movq	-8(%rbp), %rax	# insn, tmp1417
	movq	%rax, %rdi	# tmp1417,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7657	#,
	.loc 1 37134 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7653	#
.L7657:
	.loc 1 37136 0
	movq	-8(%rbp), %rax	# insn, tmp1418
	movq	%rax, %rdi	# tmp1418,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57560
	je	.L7658	#,
	.loc 1 37136 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1419
	movq	%rax, %rdi	# tmp1419,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57560
	jne	.L7659	#,
.L7658:
	.loc 1 37136 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1420
	movq	%rax, %rdi	# tmp1420,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7659	#,
	.loc 1 37138 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7653	#
.L7659:
	.loc 1 37140 0
	movq	-8(%rbp), %rax	# insn, tmp1421
	movq	%rax, %rdi	# tmp1421,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57560
	je	.L7660	#,
	.loc 1 37140 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1422
	movq	%rax, %rdi	# tmp1422,
	call	get_attr_type	#
	cmpl	$11, %eax	#, D.57560
	jne	.L7661	#,
.L7660:
	.loc 1 37140 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1423
	movq	%rax, %rdi	# tmp1423,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7662	#,
	movq	-8(%rbp), %rax	# insn, tmp1424
	movq	%rax, %rdi	# tmp1424,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7661	#,
.L7662:
	.loc 1 37142 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7653	#
.L7661:
	.loc 1 37146 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37148 0
	jmp	.L7580	#
.L7653:
	jmp	.L7580	#
.L7565:
	.loc 1 37165 0
	movq	-8(%rbp), %rax	# insn, tmp1425
	movq	%rax, %rdi	# tmp1425,
	call	extract_insn_cached	#
	.loc 1 37166 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7663	#,
	.loc 1 37168 0
	movl	$6, -12(%rbp)	#, casenum
	.loc 1 37174 0
	jmp	.L7580	#
.L7663:
	.loc 1 37172 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37174 0
	jmp	.L7580	#
.L7564:
	.loc 1 37178 0
	movq	-8(%rbp), %rax	# insn, tmp1426
	movq	%rax, %rdi	# tmp1426,
	call	extract_constrain_insn_cached	#
	.loc 1 37179 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6023
	testl	%eax, %eax	# which_alternative.6023
	je	.L7665	#,
	.loc 1 37179 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6024
	cmpl	$1, %eax	#, which_alternative.6024
	jne	.L7666	#,
.L7665:
	.loc 1 37179 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1427
	movq	%rax, %rdi	# tmp1427,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7667	#,
	.loc 1 37179 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6025
	testl	%eax, %eax	# which_alternative.6025
	je	.L7666	#,
	.loc 1 37179 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6026
	cmpl	$1, %eax	#, which_alternative.6026
	je	.L7666	#,
.L7667:
	movq	-8(%rbp), %rax	# insn, tmp1428
	movq	%rax, %rdi	# tmp1428,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7666	#,
	.loc 1 37181 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7668	#
.L7666:
	.loc 1 37183 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6027
	testl	%eax, %eax	# which_alternative.6027
	je	.L7669	#,
	.loc 1 37183 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6028
	cmpl	$1, %eax	#, which_alternative.6028
	jne	.L7670	#,
.L7669:
	.loc 1 37183 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1429
	movq	%rax, %rdi	# tmp1429,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7671	#,
	.loc 1 37183 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6029
	testl	%eax, %eax	# which_alternative.6029
	je	.L7670	#,
	.loc 1 37183 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6030
	cmpl	$1, %eax	#, which_alternative.6030
	je	.L7670	#,
.L7671:
	movq	-8(%rbp), %rax	# insn, tmp1430
	movq	%rax, %rdi	# tmp1430,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7672	#,
	movq	-8(%rbp), %rax	# insn, tmp1431
	movq	%rax, %rdi	# tmp1431,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7670	#,
.L7672:
	.loc 1 37185 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7668	#
.L7670:
	.loc 1 37187 0
	movq	-8(%rbp), %rax	# insn, tmp1432
	movq	%rax, %rdi	# tmp1432,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7673	#,
	.loc 1 37187 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6031
	testl	%eax, %eax	# which_alternative.6031
	je	.L7674	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6032
	cmpl	$1, %eax	#, which_alternative.6032
	je	.L7674	#,
.L7673:
	.loc 1 37189 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7668	#
.L7674:
	.loc 1 37191 0
	movq	-8(%rbp), %rax	# insn, tmp1433
	movq	%rax, %rdi	# tmp1433,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7675	#,
	.loc 1 37193 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7668	#
.L7675:
	.loc 1 37195 0
	movq	-8(%rbp), %rax	# insn, tmp1434
	movq	%rax, %rdi	# tmp1434,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7676	#,
	.loc 1 37195 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1435
	movq	%rax, %rdi	# tmp1435,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7677	#,
.L7676:
	.loc 1 37197 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7668	#
.L7677:
	.loc 1 37201 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37203 0
	jmp	.L7580	#
.L7668:
	jmp	.L7580	#
.L7563:
	.loc 1 37206 0
	movq	-8(%rbp), %rax	# insn, tmp1436
	movq	%rax, %rdi	# tmp1436,
	call	extract_constrain_insn_cached	#
	.loc 1 37207 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6033
	testl	%eax, %eax	# which_alternative.6033
	je	.L7678	#,
	.loc 1 37207 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6034
	cmpl	$1, %eax	#, which_alternative.6034
	je	.L7678	#,
	.loc 1 37207 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6035
	cmpl	$2, %eax	#, which_alternative.6035
	jne	.L7679	#,
.L7678:
	movq	-8(%rbp), %rax	# insn, tmp1437
	movq	%rax, %rdi	# tmp1437,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7680	#,
	.loc 1 37207 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6036
	testl	%eax, %eax	# which_alternative.6036
	je	.L7679	#,
	.loc 1 37207 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6037
	cmpl	$1, %eax	#, which_alternative.6037
	je	.L7679	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6038
	cmpl	$2, %eax	#, which_alternative.6038
	je	.L7679	#,
.L7680:
	movq	-8(%rbp), %rax	# insn, tmp1438
	movq	%rax, %rdi	# tmp1438,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7679	#,
	.loc 1 37209 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7681	#
.L7679:
	.loc 1 37211 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6039
	testl	%eax, %eax	# which_alternative.6039
	je	.L7682	#,
	.loc 1 37211 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6040
	cmpl	$1, %eax	#, which_alternative.6040
	je	.L7682	#,
	.loc 1 37211 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6041
	cmpl	$2, %eax	#, which_alternative.6041
	jne	.L7683	#,
.L7682:
	movq	-8(%rbp), %rax	# insn, tmp1439
	movq	%rax, %rdi	# tmp1439,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7684	#,
	.loc 1 37211 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6042
	testl	%eax, %eax	# which_alternative.6042
	je	.L7683	#,
	.loc 1 37211 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6043
	cmpl	$1, %eax	#, which_alternative.6043
	je	.L7683	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6044
	cmpl	$2, %eax	#, which_alternative.6044
	je	.L7683	#,
.L7684:
	movq	-8(%rbp), %rax	# insn, tmp1440
	movq	%rax, %rdi	# tmp1440,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7685	#,
	movq	-8(%rbp), %rax	# insn, tmp1441
	movq	%rax, %rdi	# tmp1441,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7683	#,
.L7685:
	.loc 1 37213 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7681	#
.L7683:
	.loc 1 37215 0
	movq	-8(%rbp), %rax	# insn, tmp1442
	movq	%rax, %rdi	# tmp1442,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7686	#,
	.loc 1 37215 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6045
	testl	%eax, %eax	# which_alternative.6045
	je	.L7687	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6046
	cmpl	$1, %eax	#, which_alternative.6046
	je	.L7687	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6047
	cmpl	$2, %eax	#, which_alternative.6047
	je	.L7687	#,
.L7686:
	.loc 1 37217 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7681	#
.L7687:
	.loc 1 37219 0
	movq	-8(%rbp), %rax	# insn, tmp1443
	movq	%rax, %rdi	# tmp1443,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7688	#,
	.loc 1 37221 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7681	#
.L7688:
	.loc 1 37223 0
	movq	-8(%rbp), %rax	# insn, tmp1444
	movq	%rax, %rdi	# tmp1444,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7689	#,
	.loc 1 37223 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1445
	movq	%rax, %rdi	# tmp1445,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7690	#,
.L7689:
	.loc 1 37225 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7681	#
.L7690:
	.loc 1 37229 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37231 0
	jmp	.L7580	#
.L7681:
	jmp	.L7580	#
.L7562:
	.loc 1 37234 0
	movq	-8(%rbp), %rax	# insn, tmp1446
	movq	%rax, %rdi	# tmp1446,
	call	extract_constrain_insn_cached	#
	.loc 1 37235 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6048
	testl	%eax, %eax	# which_alternative.6048
	je	.L7691	#,
	.loc 1 37235 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6049
	cmpl	$2, %eax	#, which_alternative.6049
	je	.L7691	#,
	.loc 1 37237 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37243 0
	jmp	.L7580	#
.L7691:
	.loc 1 37241 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37243 0
	jmp	.L7580	#
.L7561:
	.loc 1 37247 0
	movq	-8(%rbp), %rax	# insn, tmp1447
	movq	%rax, %rdi	# tmp1447,
	call	extract_constrain_insn_cached	#
	.loc 1 37248 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6050
	cmpl	$1, %eax	#, which_alternative.6050
	jne	.L7693	#,
	.loc 1 37250 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37256 0
	jmp	.L7580	#
.L7693:
	.loc 1 37254 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37256 0
	jmp	.L7580	#
.L7560:
	.loc 1 37259 0
	movq	-8(%rbp), %rax	# insn, tmp1448
	movq	%rax, %rdi	# tmp1448,
	call	extract_constrain_insn_cached	#
	.loc 1 37260 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6051
	cmpl	$1, %eax	#, which_alternative.6051
	je	.L7695	#,
	.loc 1 37260 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6052
	cmpl	$3, %eax	#, which_alternative.6052
	jne	.L7696	#,
.L7695:
	.loc 1 37262 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37268 0
	jmp	.L7580	#
.L7696:
	.loc 1 37266 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37268 0
	jmp	.L7580	#
.L7559:
	.loc 1 37277 0
	movl	$2, -12(%rbp)	#, casenum
	.loc 1 37278 0
	jmp	.L7580	#
.L7558:
	.loc 1 37297 0
	movl	$0, -12(%rbp)	#, casenum
	.loc 1 37298 0
	jmp	.L7580	#
.L7557:
	.loc 1 37306 0
	movq	-8(%rbp), %rax	# insn, tmp1449
	movq	%rax, %rdi	# tmp1449,
	call	extract_insn_cached	#
	.loc 1 37307 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7698	#,
	.loc 1 37307 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1450
	movq	%rax, %rdi	# tmp1450,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7698	#,
	movq	-8(%rbp), %rax	# insn, tmp1451
	movq	%rax, %rdi	# tmp1451,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7698	#,
	.loc 1 37309 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7699	#
.L7698:
	.loc 1 37311 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7700	#,
	.loc 1 37311 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1452
	movq	%rax, %rdi	# tmp1452,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7700	#,
	movq	-8(%rbp), %rax	# insn, tmp1453
	movq	%rax, %rdi	# tmp1453,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7701	#,
	movq	-8(%rbp), %rax	# insn, tmp1454
	movq	%rax, %rdi	# tmp1454,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7700	#,
.L7701:
	.loc 1 37313 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7699	#
.L7700:
	.loc 1 37315 0
	movq	-8(%rbp), %rax	# insn, tmp1455
	movq	%rax, %rdi	# tmp1455,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7702	#,
	.loc 1 37317 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7699	#
.L7702:
	.loc 1 37319 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7703	#,
	.loc 1 37319 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1456
	movq	%rax, %rdi	# tmp1456,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7703	#,
	.loc 1 37321 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7699	#
.L7703:
	.loc 1 37323 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7704	#,
	.loc 1 37323 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1457
	movq	%rax, %rdi	# tmp1457,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7705	#,
	movq	-8(%rbp), %rax	# insn, tmp1458
	movq	%rax, %rdi	# tmp1458,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7704	#,
.L7705:
	.loc 1 37325 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7699	#
.L7704:
	.loc 1 37329 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37331 0
	jmp	.L7580	#
.L7699:
	jmp	.L7580	#
.L7556:
	.loc 1 37334 0
	movq	-8(%rbp), %rax	# insn, tmp1459
	movq	%rax, %rdi	# tmp1459,
	call	extract_constrain_insn_cached	#
	.loc 1 37335 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6053
	cmpl	$3, %eax	#, which_alternative.6053
	je	.L7706	#,
	.loc 1 37335 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7706	#,
	movq	-8(%rbp), %rax	# insn, tmp1460
	movq	%rax, %rdi	# tmp1460,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7706	#,
	movq	-8(%rbp), %rax	# insn, tmp1461
	movq	%rax, %rdi	# tmp1461,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7706	#,
	.loc 1 37337 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7707	#
.L7706:
	.loc 1 37339 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6054
	cmpl	$3, %eax	#, which_alternative.6054
	je	.L7708	#,
	.loc 1 37339 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7708	#,
	movq	-8(%rbp), %rax	# insn, tmp1462
	movq	%rax, %rdi	# tmp1462,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7708	#,
	movq	-8(%rbp), %rax	# insn, tmp1463
	movq	%rax, %rdi	# tmp1463,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7709	#,
	movq	-8(%rbp), %rax	# insn, tmp1464
	movq	%rax, %rdi	# tmp1464,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7708	#,
.L7709:
	.loc 1 37341 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7707	#
.L7708:
	.loc 1 37343 0
	movq	-8(%rbp), %rax	# insn, tmp1465
	movq	%rax, %rdi	# tmp1465,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7710	#,
	.loc 1 37345 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7707	#
.L7710:
	.loc 1 37347 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6055
	cmpl	$3, %eax	#, which_alternative.6055
	je	.L7711	#,
	.loc 1 37347 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7711	#,
	movq	-8(%rbp), %rax	# insn, tmp1466
	movq	%rax, %rdi	# tmp1466,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7711	#,
	.loc 1 37349 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7707	#
.L7711:
	.loc 1 37351 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6056
	cmpl	$3, %eax	#, which_alternative.6056
	je	.L7712	#,
	.loc 1 37351 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7712	#,
	movq	-8(%rbp), %rax	# insn, tmp1467
	movq	%rax, %rdi	# tmp1467,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7713	#,
	movq	-8(%rbp), %rax	# insn, tmp1468
	movq	%rax, %rdi	# tmp1468,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7712	#,
.L7713:
	.loc 1 37353 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7707	#
.L7712:
	.loc 1 37357 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37359 0
	jmp	.L7580	#
.L7707:
	jmp	.L7580	#
.L7555:
	.loc 1 37367 0
	movq	-8(%rbp), %rax	# insn, tmp1469
	movq	%rax, %rdi	# tmp1469,
	call	extract_insn_cached	#
	.loc 1 37368 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7714	#,
	.loc 1 37368 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1470
	movq	%rax, %rdi	# tmp1470,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7714	#,
	movq	-8(%rbp), %rax	# insn, tmp1471
	movq	%rax, %rdi	# tmp1471,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7714	#,
	.loc 1 37370 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7715	#
.L7714:
	.loc 1 37372 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7716	#,
	.loc 1 37372 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1472
	movq	%rax, %rdi	# tmp1472,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7716	#,
	movq	-8(%rbp), %rax	# insn, tmp1473
	movq	%rax, %rdi	# tmp1473,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7717	#,
	movq	-8(%rbp), %rax	# insn, tmp1474
	movq	%rax, %rdi	# tmp1474,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7716	#,
.L7717:
	.loc 1 37374 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7715	#
.L7716:
	.loc 1 37376 0
	movq	-8(%rbp), %rax	# insn, tmp1475
	movq	%rax, %rdi	# tmp1475,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7718	#,
	.loc 1 37378 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7715	#
.L7718:
	.loc 1 37380 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7719	#,
	.loc 1 37380 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1476
	movq	%rax, %rdi	# tmp1476,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7719	#,
	.loc 1 37382 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7715	#
.L7719:
	.loc 1 37384 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7720	#,
	.loc 1 37384 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1477
	movq	%rax, %rdi	# tmp1477,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7721	#,
	movq	-8(%rbp), %rax	# insn, tmp1478
	movq	%rax, %rdi	# tmp1478,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7720	#,
.L7721:
	.loc 1 37386 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7715	#
.L7720:
	.loc 1 37390 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37392 0
	jmp	.L7580	#
.L7715:
	jmp	.L7580	#
.L7554:
	.loc 1 37395 0
	movq	-8(%rbp), %rax	# insn, tmp1479
	movq	%rax, %rdi	# tmp1479,
	call	extract_constrain_insn_cached	#
	.loc 1 37396 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6057
	cmpl	$2, %eax	#, which_alternative.6057
	je	.L7722	#,
	.loc 1 37396 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7722	#,
	movq	-8(%rbp), %rax	# insn, tmp1480
	movq	%rax, %rdi	# tmp1480,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7722	#,
	movq	-8(%rbp), %rax	# insn, tmp1481
	movq	%rax, %rdi	# tmp1481,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7722	#,
	.loc 1 37398 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7723	#
.L7722:
	.loc 1 37400 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6058
	cmpl	$2, %eax	#, which_alternative.6058
	je	.L7724	#,
	.loc 1 37400 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7724	#,
	movq	-8(%rbp), %rax	# insn, tmp1482
	movq	%rax, %rdi	# tmp1482,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7724	#,
	movq	-8(%rbp), %rax	# insn, tmp1483
	movq	%rax, %rdi	# tmp1483,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7725	#,
	movq	-8(%rbp), %rax	# insn, tmp1484
	movq	%rax, %rdi	# tmp1484,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7724	#,
.L7725:
	.loc 1 37402 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7723	#
.L7724:
	.loc 1 37404 0
	movq	-8(%rbp), %rax	# insn, tmp1485
	movq	%rax, %rdi	# tmp1485,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7726	#,
	.loc 1 37406 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7723	#
.L7726:
	.loc 1 37408 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6059
	cmpl	$2, %eax	#, which_alternative.6059
	je	.L7727	#,
	.loc 1 37408 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7727	#,
	movq	-8(%rbp), %rax	# insn, tmp1486
	movq	%rax, %rdi	# tmp1486,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7727	#,
	.loc 1 37410 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7723	#
.L7727:
	.loc 1 37412 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6060
	cmpl	$2, %eax	#, which_alternative.6060
	je	.L7728	#,
	.loc 1 37412 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$3, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7728	#,
	movq	-8(%rbp), %rax	# insn, tmp1487
	movq	%rax, %rdi	# tmp1487,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7729	#,
	movq	-8(%rbp), %rax	# insn, tmp1488
	movq	%rax, %rdi	# tmp1488,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7728	#,
.L7729:
	.loc 1 37414 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7723	#
.L7728:
	.loc 1 37418 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37420 0
	jmp	.L7580	#
.L7723:
	jmp	.L7580	#
.L7553:
	.loc 1 37428 0
	movq	-8(%rbp), %rax	# insn, tmp1489
	movq	%rax, %rdi	# tmp1489,
	call	extract_insn_cached	#
	.loc 1 37429 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7730	#,
	.loc 1 37429 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1490
	movq	%rax, %rdi	# tmp1490,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7730	#,
	movq	-8(%rbp), %rax	# insn, tmp1491
	movq	%rax, %rdi	# tmp1491,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7730	#,
	.loc 1 37431 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7731	#
.L7730:
	.loc 1 37433 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7732	#,
	.loc 1 37433 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1492
	movq	%rax, %rdi	# tmp1492,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7732	#,
	movq	-8(%rbp), %rax	# insn, tmp1493
	movq	%rax, %rdi	# tmp1493,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7733	#,
	movq	-8(%rbp), %rax	# insn, tmp1494
	movq	%rax, %rdi	# tmp1494,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7732	#,
.L7733:
	.loc 1 37435 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7731	#
.L7732:
	.loc 1 37437 0
	movq	-8(%rbp), %rax	# insn, tmp1495
	movq	%rax, %rdi	# tmp1495,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7734	#,
	.loc 1 37439 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7731	#
.L7734:
	.loc 1 37441 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7735	#,
	.loc 1 37441 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1496
	movq	%rax, %rdi	# tmp1496,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7735	#,
	.loc 1 37443 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7731	#
.L7735:
	.loc 1 37445 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$4, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7736	#,
	.loc 1 37445 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1497
	movq	%rax, %rdi	# tmp1497,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7737	#,
	movq	-8(%rbp), %rax	# insn, tmp1498
	movq	%rax, %rdi	# tmp1498,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7736	#,
.L7737:
	.loc 1 37447 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7731	#
.L7736:
	.loc 1 37451 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37453 0
	jmp	.L7580	#
.L7731:
	jmp	.L7580	#
.L7552:
	.loc 1 37459 0
	movq	-8(%rbp), %rax	# insn, tmp1499
	movq	%rax, %rdi	# tmp1499,
	call	extract_insn_cached	#
	.loc 1 37460 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7738	#,
	.loc 1 37460 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1500
	movq	%rax, %rdi	# tmp1500,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7738	#,
	movq	-8(%rbp), %rax	# insn, tmp1501
	movq	%rax, %rdi	# tmp1501,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7738	#,
	.loc 1 37462 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7739	#
.L7738:
	.loc 1 37464 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7740	#,
	.loc 1 37464 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1502
	movq	%rax, %rdi	# tmp1502,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7740	#,
	movq	-8(%rbp), %rax	# insn, tmp1503
	movq	%rax, %rdi	# tmp1503,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7741	#,
	movq	-8(%rbp), %rax	# insn, tmp1504
	movq	%rax, %rdi	# tmp1504,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7740	#,
.L7741:
	.loc 1 37466 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7739	#
.L7740:
	.loc 1 37468 0
	movq	-8(%rbp), %rax	# insn, tmp1505
	movq	%rax, %rdi	# tmp1505,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7742	#,
	.loc 1 37470 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7739	#
.L7742:
	.loc 1 37472 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7743	#,
	.loc 1 37472 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1506
	movq	%rax, %rdi	# tmp1506,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7743	#,
	.loc 1 37474 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7739	#
.L7743:
	.loc 1 37476 0
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$5, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	incdec_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7744	#,
	.loc 1 37476 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1507
	movq	%rax, %rdi	# tmp1507,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7745	#,
	movq	-8(%rbp), %rax	# insn, tmp1508
	movq	%rax, %rdi	# tmp1508,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7744	#,
.L7745:
	.loc 1 37478 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7739	#
.L7744:
	.loc 1 37482 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37484 0
	jmp	.L7580	#
.L7739:
	jmp	.L7580	#
.L7551:
	.loc 1 37489 0
	movq	-8(%rbp), %rax	# insn, tmp1509
	movq	%rax, %rdi	# tmp1509,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57560
	jne	.L7746	#,
	.loc 1 37489 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1510
	movq	%rax, %rdi	# tmp1510,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7746	#,
	movq	-8(%rbp), %rax	# insn, tmp1511
	movq	%rax, %rdi	# tmp1511,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7746	#,
	.loc 1 37491 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7747	#
.L7746:
	.loc 1 37493 0
	movq	-8(%rbp), %rax	# insn, tmp1512
	movq	%rax, %rdi	# tmp1512,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57560
	jne	.L7748	#,
	.loc 1 37493 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1513
	movq	%rax, %rdi	# tmp1513,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7748	#,
	movq	-8(%rbp), %rax	# insn, tmp1514
	movq	%rax, %rdi	# tmp1514,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7749	#,
	movq	-8(%rbp), %rax	# insn, tmp1515
	movq	%rax, %rdi	# tmp1515,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7748	#,
.L7749:
	.loc 1 37495 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7747	#
.L7748:
	.loc 1 37497 0
	movq	-8(%rbp), %rax	# insn, tmp1516
	movq	%rax, %rdi	# tmp1516,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7750	#,
	.loc 1 37499 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7747	#
.L7750:
	.loc 1 37501 0
	movq	-8(%rbp), %rax	# insn, tmp1517
	movq	%rax, %rdi	# tmp1517,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57560
	jne	.L7751	#,
	.loc 1 37501 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1518
	movq	%rax, %rdi	# tmp1518,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7751	#,
	.loc 1 37503 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7747	#
.L7751:
	.loc 1 37505 0
	movq	-8(%rbp), %rax	# insn, tmp1519
	movq	%rax, %rdi	# tmp1519,
	call	get_attr_type	#
	cmpl	$4, %eax	#, D.57560
	jne	.L7752	#,
	.loc 1 37505 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1520
	movq	%rax, %rdi	# tmp1520,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7753	#,
	movq	-8(%rbp), %rax	# insn, tmp1521
	movq	%rax, %rdi	# tmp1521,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7752	#,
.L7753:
	.loc 1 37507 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7747	#
.L7752:
	.loc 1 37511 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37513 0
	jmp	.L7580	#
.L7747:
	jmp	.L7580	#
.L7550:
	.loc 1 37535 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37536 0
	jmp	.L7580	#
.L7549:
	.loc 1 37605 0
	movq	-8(%rbp), %rax	# insn, tmp1522
	movq	%rax, %rdi	# tmp1522,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7754	#,
	.loc 1 37605 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1523
	movq	%rax, %rdi	# tmp1523,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7754	#,
	.loc 1 37607 0 is_stmt 1
	movl	$6, -12(%rbp)	#, casenum
	jmp	.L7755	#
.L7754:
	.loc 1 37609 0
	movq	-8(%rbp), %rax	# insn, tmp1524
	movq	%rax, %rdi	# tmp1524,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7756	#,
	.loc 1 37609 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1525
	movq	%rax, %rdi	# tmp1525,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7757	#,
	movq	-8(%rbp), %rax	# insn, tmp1526
	movq	%rax, %rdi	# tmp1526,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7756	#,
.L7757:
	.loc 1 37611 0 is_stmt 1
	movl	$7, -12(%rbp)	#, casenum
	jmp	.L7755	#
.L7756:
	.loc 1 37613 0
	movq	-8(%rbp), %rax	# insn, tmp1527
	movq	%rax, %rdi	# tmp1527,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7758	#,
	.loc 1 37615 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7755	#
.L7758:
	.loc 1 37617 0
	movq	-8(%rbp), %rax	# insn, tmp1528
	movq	%rax, %rdi	# tmp1528,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7759	#,
	.loc 1 37619 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7755	#
.L7759:
	.loc 1 37621 0
	movq	-8(%rbp), %rax	# insn, tmp1529
	movq	%rax, %rdi	# tmp1529,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7760	#,
	.loc 1 37621 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1530
	movq	%rax, %rdi	# tmp1530,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7761	#,
.L7760:
	.loc 1 37623 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7755	#
.L7761:
	.loc 1 37627 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37629 0
	jmp	.L7580	#
.L7755:
	jmp	.L7580	#
.L7548:
	.loc 1 37637 0
	movq	-8(%rbp), %rax	# insn, tmp1531
	movq	%rax, %rdi	# tmp1531,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7762	#,
	.loc 1 37639 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7763	#
.L7762:
	.loc 1 37641 0
	movq	-8(%rbp), %rax	# insn, tmp1532
	movq	%rax, %rdi	# tmp1532,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7764	#,
	.loc 1 37641 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1533
	movq	%rax, %rdi	# tmp1533,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7765	#,
.L7764:
	.loc 1 37643 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7763	#
.L7765:
	.loc 1 37647 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37649 0
	jmp	.L7580	#
.L7763:
	jmp	.L7580	#
.L7547:
	.loc 1 37657 0
	movq	-8(%rbp), %rax	# insn, tmp1534
	movq	%rax, %rdi	# tmp1534,
	call	extract_constrain_insn_cached	#
	.loc 1 37658 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6061
	testl	%eax, %eax	# which_alternative.6061
	jne	.L7766	#,
	.loc 1 37658 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1535
	movq	%rax, %rdi	# tmp1535,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7767	#,
	movq	-8(%rbp), %rax	# insn, tmp1536
	movq	%rax, %rdi	# tmp1536,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7766	#,
.L7767:
	.loc 1 37660 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L7768	#
.L7766:
	.loc 1 37662 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6062
	testl	%eax, %eax	# which_alternative.6062
	jne	.L7769	#,
	.loc 1 37662 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7770	#,
	movq	-8(%rbp), %rax	# insn, tmp1537
	movq	%rax, %rdi	# tmp1537,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7769	#,
.L7770:
	.loc 1 37664 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L7768	#
.L7769:
	.loc 1 37668 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37670 0
	jmp	.L7580	#
.L7768:
	jmp	.L7580	#
.L7546:
	.loc 1 37677 0
	movq	-8(%rbp), %rax	# insn, tmp1538
	movq	%rax, %rdi	# tmp1538,
	call	extract_insn_cached	#
	.loc 1 37678 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7771	#,
	.loc 1 37678 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1539
	movq	%rax, %rdi	# tmp1539,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7772	#,
.L7771:
	.loc 1 37680 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 37686 0
	jmp	.L7580	#
.L7772:
	.loc 1 37684 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37686 0
	jmp	.L7580	#
.L7545:
	.loc 1 37689 0
	movq	-8(%rbp), %rax	# insn, tmp1540
	movq	%rax, %rdi	# tmp1540,
	call	extract_constrain_insn_cached	#
	.loc 1 37690 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6063
	cmpl	$1, %eax	#, which_alternative.6063
	jne	.L7774	#,
	.loc 1 37690 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7775	#,
	movq	-8(%rbp), %rax	# insn, tmp1541
	movq	%rax, %rdi	# tmp1541,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7774	#,
.L7775:
	.loc 1 37692 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 37698 0
	jmp	.L7580	#
.L7774:
	.loc 1 37696 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37698 0
	jmp	.L7580	#
.L7544:
	.loc 1 37714 0
	movq	-8(%rbp), %rax	# insn, tmp1542
	movq	%rax, %rdi	# tmp1542,
	call	extract_constrain_insn_cached	#
	.loc 1 37715 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6064
	testl	%eax, %eax	# which_alternative.6064
	jne	.L7777	#,
	.loc 1 37715 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7778	#,
	movq	-8(%rbp), %rax	# insn, tmp1543
	movq	%rax, %rdi	# tmp1543,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7777	#,
.L7778:
	.loc 1 37717 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 37723 0
	jmp	.L7580	#
.L7777:
	.loc 1 37721 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37723 0
	jmp	.L7580	#
.L7543:
	.loc 1 37729 0
	movq	-8(%rbp), %rax	# insn, tmp1544
	movq	%rax, %rdi	# tmp1544,
	call	extract_constrain_insn_cached	#
	.loc 1 37730 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6065
	cmpl	$1, %eax	#, which_alternative.6065
	jne	.L7780	#,
	.loc 1 37730 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1545
	movq	%rax, %rdi	# tmp1545,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7781	#,
	movq	-8(%rbp), %rax	# insn, tmp1546
	movq	%rax, %rdi	# tmp1546,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7780	#,
.L7781:
	.loc 1 37732 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L7782	#
.L7780:
	.loc 1 37734 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7783	#,
	.loc 1 37734 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1547
	movq	%rax, %rdi	# tmp1547,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7784	#,
.L7783:
	.loc 1 37736 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L7782	#
.L7784:
	.loc 1 37740 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37742 0
	jmp	.L7580	#
.L7782:
	jmp	.L7580	#
.L7542:
	.loc 1 37745 0
	movq	-8(%rbp), %rax	# insn, tmp1548
	movq	%rax, %rdi	# tmp1548,
	call	extract_constrain_insn_cached	#
	.loc 1 37746 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6066
	testl	%eax, %eax	# which_alternative.6066
	je	.L7785	#,
	.loc 1 37746 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6067
	cmpl	$1, %eax	#, which_alternative.6067
	jne	.L7786	#,
.L7785:
	.loc 1 37746 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1549
	movq	%rax, %rdi	# tmp1549,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7787	#,
	.loc 1 37746 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1550
	movq	%rax, %rdi	# tmp1550,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7786	#,
.L7787:
	.loc 1 37746 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6068
	cmpl	$1, %eax	#, which_alternative.6068
	jne	.L7786	#,
	.loc 1 37748 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L7788	#
.L7786:
	.loc 1 37750 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6069
	testl	%eax, %eax	# which_alternative.6069
	je	.L7789	#,
	.loc 1 37750 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6070
	cmpl	$1, %eax	#, which_alternative.6070
	jne	.L7790	#,
.L7789:
	.loc 1 37750 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7791	#,
	movq	-8(%rbp), %rax	# insn, tmp1551
	movq	%rax, %rdi	# tmp1551,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7790	#,
.L7791:
	.loc 1 37752 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L7788	#
.L7790:
	.loc 1 37756 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37758 0
	jmp	.L7580	#
.L7788:
	jmp	.L7580	#
.L7541:
	.loc 1 37761 0
	movq	-8(%rbp), %rax	# insn, tmp1552
	movq	%rax, %rdi	# tmp1552,
	call	extract_constrain_insn_cached	#
	.loc 1 37762 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6071
	cmpl	$1, %eax	#, which_alternative.6071
	jne	.L7792	#,
	.loc 1 37762 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1553
	movq	%rax, %rdi	# tmp1553,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7793	#,
.L7792:
	.loc 1 37764 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37770 0
	jmp	.L7580	#
.L7793:
	.loc 1 37768 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37770 0
	jmp	.L7580	#
.L7540:
	.loc 1 37774 0
	movq	-8(%rbp), %rax	# insn, tmp1554
	movq	%rax, %rdi	# tmp1554,
	call	extract_constrain_insn_cached	#
	.loc 1 37775 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6072
	testl	%eax, %eax	# which_alternative.6072
	jne	.L7795	#,
	.loc 1 37777 0
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7796	#
.L7795:
	.loc 1 37779 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6073
	cmpl	$1, %eax	#, which_alternative.6073
	jne	.L7797	#,
	.loc 1 37779 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1555
	movq	%rax, %rdi	# tmp1555,
	call	get_attr_memory	#
	cmpl	$3, %eax	#, D.57559
	jne	.L7797	#,
	.loc 1 37781 0 is_stmt 1
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7796	#
.L7797:
	.loc 1 37783 0
	movq	-8(%rbp), %rax	# insn, tmp1556
	movq	%rax, %rdi	# tmp1556,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7798	#,
	.loc 1 37783 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1557
	movq	%rax, %rdi	# tmp1557,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7799	#,
.L7798:
	.loc 1 37785 0 is_stmt 1
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7796	#
.L7799:
	.loc 1 37789 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37791 0
	jmp	.L7580	#
.L7796:
	jmp	.L7580	#
.L7539:
	.loc 1 37797 0
	movq	-8(%rbp), %rax	# insn, tmp1558
	movq	%rax, %rdi	# tmp1558,
	call	extract_constrain_insn_cached	#
	.loc 1 37798 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6074
	testl	%eax, %eax	# which_alternative.6074
	je	.L7800	#,
	.loc 1 37798 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6075
	cmpl	$1, %eax	#, which_alternative.6075
	je	.L7800	#,
	.loc 1 37798 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6076
	cmpl	$2, %eax	#, which_alternative.6076
	jne	.L7801	#,
.L7800:
	movq	-8(%rbp), %rax	# insn, tmp1559
	movq	%rax, %rdi	# tmp1559,
	call	get_attr_memory	#
	cmpl	$1, %eax	#, D.57559
	je	.L7802	#,
	movq	-8(%rbp), %rax	# insn, tmp1560
	movq	%rax, %rdi	# tmp1560,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7801	#,
.L7802:
	.loc 1 37800 0 is_stmt 1
	movl	$3, -12(%rbp)	#, casenum
	jmp	.L7803	#
.L7801:
	.loc 1 37802 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6077
	testl	%eax, %eax	# which_alternative.6077
	je	.L7804	#,
	.loc 1 37802 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6078
	cmpl	$1, %eax	#, which_alternative.6078
	je	.L7804	#,
	.loc 1 37802 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6079
	cmpl	$2, %eax	#, which_alternative.6079
	jne	.L7805	#,
.L7804:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7806	#,
	movq	-8(%rbp), %rax	# insn, tmp1561
	movq	%rax, %rdi	# tmp1561,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7805	#,
.L7806:
	.loc 1 37804 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L7803	#
.L7805:
	.loc 1 37808 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37810 0
	jmp	.L7580	#
.L7803:
	jmp	.L7580	#
.L7538:
	.loc 1 37814 0
	movq	-8(%rbp), %rax	# insn, tmp1562
	movq	%rax, %rdi	# tmp1562,
	call	extract_constrain_insn_cached	#
	.loc 1 37815 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6080
	testl	%eax, %eax	# which_alternative.6080
	je	.L7807	#,
	.loc 1 37815 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6081
	cmpl	$1, %eax	#, which_alternative.6081
	je	.L7807	#,
	.loc 1 37815 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6082
	cmpl	$2, %eax	#, which_alternative.6082
	jne	.L7808	#,
.L7807:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7809	#,
	movq	-8(%rbp), %rax	# insn, tmp1563
	movq	%rax, %rdi	# tmp1563,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7808	#,
.L7809:
	.loc 1 37817 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	.loc 1 37823 0
	jmp	.L7580	#
.L7808:
	.loc 1 37821 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37823 0
	jmp	.L7580	#
.L7537:
	.loc 1 37826 0
	movq	-8(%rbp), %rax	# insn, tmp1564
	movq	%rax, %rdi	# tmp1564,
	call	extract_constrain_insn_cached	#
	.loc 1 37827 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6083
	testl	%eax, %eax	# which_alternative.6083
	je	.L7811	#,
	.loc 1 37827 0 is_stmt 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6084
	cmpl	$1, %eax	#, which_alternative.6084
	je	.L7811	#,
	.loc 1 37827 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6085
	cmpl	$2, %eax	#, which_alternative.6085
	jne	.L7812	#,
.L7811:
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	immediate_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7813	#,
	movq	-8(%rbp), %rax	# insn, tmp1565
	movq	%rax, %rdi	# tmp1565,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7812	#,
.L7813:
	.loc 1 37829 0 is_stmt 1
	movl	$4, -12(%rbp)	#, casenum
	jmp	.L7814	#
.L7812:
	.loc 1 37831 0
	movq	-8(%rbp), %rax	# insn, tmp1566
	movq	%rax, %rdi	# tmp1566,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7815	#,
	.loc 1 37831 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6086
	testl	%eax, %eax	# which_alternative.6086
	je	.L7815	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6087
	cmpl	$1, %eax	#, which_alternative.6087
	je	.L7815	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6088
	cmpl	$2, %eax	#, which_alternative.6088
	je	.L7815	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6089
	cmpl	$3, %eax	#, which_alternative.6089
	je	.L7816	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6090
	cmpl	$4, %eax	#, which_alternative.6090
	je	.L7816	#,
.L7815:
	.loc 1 37833 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	jmp	.L7814	#
.L7816:
	.loc 1 37837 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37839 0
	jmp	.L7580	#
.L7814:
	jmp	.L7580	#
.L7536:
	.loc 1 37843 0
	movq	-8(%rbp), %rax	# insn, tmp1567
	movq	%rax, %rdi	# tmp1567,
	call	extract_constrain_insn_cached	#
	.loc 1 37844 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6091
	cmpl	$1, %eax	#, which_alternative.6091
	jne	.L7817	#,
	.loc 1 37844 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7818	#,
.L7817:
	.loc 1 37846 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37852 0
	jmp	.L7580	#
.L7818:
	.loc 1 37850 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37852 0
	jmp	.L7580	#
.L7535:
	.loc 1 37855 0
	movq	-8(%rbp), %rax	# insn, tmp1568
	movq	%rax, %rdi	# tmp1568,
	call	extract_constrain_insn_cached	#
	.loc 1 37856 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6092
	testl	%eax, %eax	# which_alternative.6092
	jne	.L7820	#,
	.loc 1 37856 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7821	#,
.L7820:
	.loc 1 37858 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37864 0
	jmp	.L7580	#
.L7821:
	.loc 1 37862 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37864 0
	jmp	.L7580	#
.L7534:
	.loc 1 37867 0
	movq	-8(%rbp), %rax	# insn, tmp1569
	movq	%rax, %rdi	# tmp1569,
	call	extract_constrain_insn_cached	#
	.loc 1 37868 0
	movq	-8(%rbp), %rax	# insn, tmp1570
	movq	%rax, %rdi	# tmp1570,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7823	#,
	.loc 1 37868 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7823	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6093
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6094
	movl	%eax, %ecx	# ix86_cpu.6095, tmp1829
	sarl	%cl, %edx	# tmp1829, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7824	#,
.L7823:
	.loc 1 37870 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37876 0
	jmp	.L7580	#
.L7824:
	.loc 1 37874 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37876 0
	jmp	.L7580	#
.L7533:
	.loc 1 37879 0
	movq	-8(%rbp), %rax	# insn, tmp1571
	movq	%rax, %rdi	# tmp1571,
	call	extract_constrain_insn_cached	#
	.loc 1 37880 0
	movq	-8(%rbp), %rax	# insn, tmp1572
	movq	%rax, %rdi	# tmp1572,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7826	#,
	.loc 1 37880 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6096
	cmpl	$3, %eax	#, which_alternative.6096
	jne	.L7827	#,
	.loc 1 37880 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6097
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6098
	movl	%eax, %ecx	# ix86_cpu.6099, tmp1831
	sarl	%cl, %edx	# tmp1831, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7828	#,
	.loc 1 37880 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6100
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6101
	movl	%eax, %ecx	# ix86_cpu.6102, tmp1833
	sarl	%cl, %edx	# tmp1833, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7828	#,
.L7827:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6103
	cmpl	$3, %eax	#, which_alternative.6103
	jne	.L7829	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6104
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6105
	movl	%eax, %ecx	# ix86_cpu.6106, tmp1835
	sarl	%cl, %edx	# tmp1835, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7826	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6107
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6108
	movl	%eax, %ecx	# ix86_cpu.6109, tmp1837
	sarl	%cl, %edx	# tmp1837, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7826	#,
.L7829:
	.loc 1 37880 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6110
	cmpl	$3, %eax	#, which_alternative.6110
	je	.L7826	#,
	.loc 1 37880 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6111
	cmpl	$5, %eax	#, which_alternative.6111
	je	.L7826	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6112
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6113
	movl	%eax, %ecx	# ix86_cpu.6114, tmp1839
	sarl	%cl, %edx	# tmp1839, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7828	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6115
	cmpl	$2, %eax	#, which_alternative.6115
	jne	.L7828	#,
.L7826:
	.loc 1 37882 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37888 0
	jmp	.L7580	#
.L7828:
	.loc 1 37886 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37888 0
	jmp	.L7580	#
.L7532:
	.loc 1 37894 0
	movq	-8(%rbp), %rax	# insn, tmp1573
	movq	%rax, %rdi	# tmp1573,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7831	#,
	.loc 1 37894 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1574
	movq	%rax, %rdi	# tmp1574,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57560
	je	.L7832	#,
.L7831:
	.loc 1 37896 0 is_stmt 1
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37902 0
	jmp	.L7580	#
.L7832:
	.loc 1 37900 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37902 0
	jmp	.L7580	#
.L7531:
	.loc 1 37906 0
	movq	-8(%rbp), %rax	# insn, tmp1575
	movq	%rax, %rdi	# tmp1575,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7834	#,
	.loc 1 37908 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37914 0
	jmp	.L7580	#
.L7834:
	.loc 1 37912 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37914 0
	jmp	.L7580	#
.L7530:
	.loc 1 37934 0
	movq	-8(%rbp), %rax	# insn, tmp1576
	movq	%rax, %rdi	# tmp1576,
	call	extract_insn_cached	#
	.loc 1 37935 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7836	#,
	.loc 1 37937 0
	movl	$9, -12(%rbp)	#, casenum
	jmp	.L7837	#
.L7836:
	.loc 1 37939 0
	movq	-8(%rbp), %rax	# insn, tmp1577
	movq	%rax, %rdi	# tmp1577,
	call	get_attr_memory	#
	cmpl	$2, %eax	#, D.57559
	jne	.L7838	#,
	.loc 1 37941 0
	movl	$10, -12(%rbp)	#, casenum
	jmp	.L7837	#
.L7838:
	.loc 1 37945 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37947 0
	jmp	.L7580	#
.L7837:
	jmp	.L7580	#
.L7529:
	.loc 1 37953 0
	movq	-8(%rbp), %rax	# insn, tmp1578
	movq	%rax, %rdi	# tmp1578,
	call	extract_insn_cached	#
	.loc 1 37954 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7839	#,
	.loc 1 37956 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37962 0
	jmp	.L7580	#
.L7839:
	.loc 1 37960 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37962 0
	jmp	.L7580	#
.L7528:
	.loc 1 37972 0
	movq	-8(%rbp), %rax	# insn, tmp1579
	movq	%rax, %rdi	# tmp1579,
	call	extract_insn_cached	#
	.loc 1 37973 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7841	#,
	.loc 1 37975 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 37981 0
	jmp	.L7580	#
.L7841:
	.loc 1 37979 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 37981 0
	jmp	.L7580	#
.L7527:
	.loc 1 38017 0
	movq	-8(%rbp), %rax	# insn, tmp1580
	movq	%rax, %rdi	# tmp1580,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7843	#,
	.loc 1 38019 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 38025 0
	jmp	.L7580	#
.L7843:
	.loc 1 38023 0
	movl	$11, -12(%rbp)	#, casenum
	.loc 1 38025 0
	jmp	.L7580	#
.L7525:
	.loc 1 38028 0
	movq	-8(%rbp), %rax	# insn, tmp1581
	movq	32(%rax), %rax	# insn_55->fld[3].rtx, D.57557
	movzwl	(%rax), %eax	# _746->code, D.57562
	cmpw	$40, %ax	#, D.57562
	je	.L7524	#,
	.loc 1 38029 0
	movq	-8(%rbp), %rax	# insn, tmp1582
	movq	32(%rax), %rax	# insn_55->fld[3].rtx, D.57557
	movq	%rax, %rdi	# D.57557,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57556
	jns	.L7524	#,
	.loc 1 38030 0
	movq	-8(%rbp), %rax	# insn, tmp1583
	movl	$__FUNCTION__.26956, %ecx	#,
	movl	$38030, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1583,
	call	_fatal_insn_not_found	#
.L7524:
	.loc 1 38032 0
	movl	$8, -12(%rbp)	#, casenum
	.loc 1 38033 0
	nop
.L7580:
	.loc 1 38037 0
	movq	-32(%rbp), %rax	# candidate_insn, tmp1584
	movq	%rax, -8(%rbp)	# tmp1584, insn
	.loc 1 38038 0
	cmpl	$12, -12(%rbp)	#, casenum
	ja	.L7845	#,
	movl	-12(%rbp), %eax	# casenum, tmp1585
	movq	.L7847(,%rax,8), %rax	#, tmp1586
	jmp	*%rax	# tmp1586
	.section	.rodata
	.align 8
	.align 4
.L7847:
	.quad	.L7846
	.quad	.L7848
	.quad	.L7849
	.quad	.L7850
	.quad	.L7851
	.quad	.L7852
	.quad	.L7853
	.quad	.L7854
	.quad	.L7855
	.quad	.L7856
	.quad	.L7857
	.quad	.L7858
	.quad	.L7859
	.text
.L7846:
	.loc 1 38041 0
	movl	$11, %eax	#, D.57556
	jmp	.L7860	#
.L7848:
	.loc 1 38044 0
	movl	$12, %eax	#, D.57556
	jmp	.L7860	#
.L7849:
	.loc 1 38047 0
	movl	$46, %eax	#, D.57556
	jmp	.L7860	#
.L7850:
	.loc 1 38050 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7851:
	.loc 1 38053 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7852:
	.loc 1 38056 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7853:
	.loc 1 38059 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7854:
	.loc 1 38062 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7855:
	.loc 1 38065 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L7856:
	.loc 1 38068 0
	movq	-8(%rbp), %rax	# insn, tmp1587
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, D.57556
	testl	%eax, %eax	# D.57556
	js	.L7861	#,
	.loc 1 38068 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1588
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, iftmp.6116
	jmp	.L7862	#
.L7861:
	.loc 1 38068 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1589
	movq	%rax, %rdi	# tmp1589,
	call	recog_memoized_1	#
.L7862:
	.loc 1 38068 0 discriminator 3
	addl	$1, %eax	#, tmp1590
	cmpl	$657, %eax	#, tmp1590
	ja	.L7863	#,
	movl	%eax, %eax	# tmp1590, tmp1591
	movq	.L7865(,%rax,8), %rax	#, tmp1592
	jmp	*%rax	# tmp1592
	.section	.rodata
	.align 8
	.align 4
.L7865:
	.quad	.L7864
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7867
	.quad	.L7867
	.quad	.L7867
	.quad	.L7868
	.quad	.L7868
	.quad	.L7869
	.quad	.L7869
	.quad	.L7870
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7867
	.quad	.L7867
	.quad	.L7871
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7863
	.quad	.L7866
	.quad	.L7869
	.quad	.L7867
	.quad	.L7867
	.quad	.L7872
	.quad	.L7863
	.quad	.L7866
	.quad	.L7869
	.quad	.L7863
	.quad	.L7863
	.quad	.L7871
	.quad	.L7871
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7871
	.quad	.L7873
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7874
	.quad	.L7867
	.quad	.L7868
	.quad	.L7868
	.quad	.L7869
	.quad	.L7869
	.quad	.L7863
	.quad	.L7870
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7875
	.quad	.L7875
	.quad	.L7876
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7869
	.quad	.L7863
	.quad	.L7869
	.quad	.L7877
	.quad	.L7863
	.quad	.L7869
	.quad	.L7877
	.quad	.L7863
	.quad	.L7863
	.quad	.L7878
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7869
	.quad	.L7866
	.quad	.L7869
	.quad	.L7869
	.quad	.L7866
	.quad	.L7866
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7870
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7870
	.quad	.L7870
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7870
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7870
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7869
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7869
	.quad	.L7869
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7879
	.quad	.L7880
	.quad	.L7880
	.quad	.L7881
	.quad	.L7863
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7863
	.quad	.L7882
	.quad	.L7866
	.quad	.L7883
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7883
	.quad	.L7866
	.quad	.L7866
	.quad	.L7869
	.quad	.L7866
	.quad	.L7869
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7869
	.quad	.L7866
	.quad	.L7869
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7869
	.quad	.L7863
	.quad	.L7863
	.quad	.L7869
	.quad	.L7869
	.quad	.L7863
	.quad	.L7869
	.quad	.L7863
	.quad	.L7869
	.quad	.L7870
	.quad	.L7870
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7870
	.quad	.L7870
	.quad	.L7870
	.quad	.L7870
	.quad	.L7870
	.quad	.L7870
	.quad	.L7870
	.quad	.L7870
	.quad	.L7870
	.quad	.L7870
	.quad	.L7884
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7884
	.quad	.L7884
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7863
	.quad	.L7863
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7885
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7869
	.quad	.L7869
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7869
	.quad	.L7886
	.quad	.L7887
	.quad	.L7887
	.quad	.L7887
	.quad	.L7887
	.quad	.L7887
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7869
	.quad	.L7863
	.quad	.L7866
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7869
	.quad	.L7863
	.quad	.L7869
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7866
	.quad	.L7866
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7863
	.quad	.L7888
	.quad	.L7888
	.quad	.L7888
	.quad	.L7888
	.quad	.L7888
	.quad	.L7888
	.text
.L7888:
	.loc 1 38076 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1593
	movq	%rax, %rdi	# tmp1593,
	call	extract_insn_cached	#
	.loc 1 38077 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7889	#,
	.loc 1 38079 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7889:
	.loc 1 38083 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7887:
	.loc 1 38091 0
	movq	-8(%rbp), %rax	# insn, tmp1594
	movq	%rax, %rdi	# tmp1594,
	call	extract_insn_cached	#
	.loc 1 38092 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7890	#,
	.loc 1 38094 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7890:
	.loc 1 38098 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7886:
	.loc 1 38102 0
	movq	-8(%rbp), %rax	# insn, tmp1595
	movq	%rax, %rdi	# tmp1595,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57560
	je	.L7891	#,
	.loc 1 38104 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7891:
	.loc 1 38108 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7885:
	.loc 1 38171 0
	movq	-8(%rbp), %rax	# insn, tmp1596
	movq	%rax, %rdi	# tmp1596,
	call	extract_insn_cached	#
	.loc 1 38172 0
	movq	-8(%rbp), %rax	# insn, tmp1597
	movq	%rax, %rdi	# tmp1597,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7892	#,
	.loc 1 38172 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7892	#,
	movq	-8(%rbp), %rax	# insn, tmp1598
	movq	%rax, %rdi	# tmp1598,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7893	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7893	#,
.L7892:
	.loc 1 38174 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1599
	movq	%rax, %rdi	# tmp1599,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7894	#,
	.loc 1 38174 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7895	#,
.L7894:
	.loc 1 38176 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7895:
	.loc 1 38180 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7893:
	.loc 1 38185 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7884:
	.loc 1 38191 0
	movq	-8(%rbp), %rax	# insn, tmp1600
	movq	%rax, %rdi	# tmp1600,
	call	extract_constrain_insn_cached	#
	.loc 1 38192 0
	movq	-8(%rbp), %rax	# insn, tmp1601
	movq	%rax, %rdi	# tmp1601,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7896	#,
	.loc 1 38192 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6117
	cmpl	$1, %eax	#, which_alternative.6117
	jne	.L7896	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7896	#,
	movq	-8(%rbp), %rax	# insn, tmp1602
	movq	%rax, %rdi	# tmp1602,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7897	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6118
	cmpl	$1, %eax	#, which_alternative.6118
	jne	.L7897	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7897	#,
.L7896:
	.loc 1 38194 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1603
	movq	%rax, %rdi	# tmp1603,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7898	#,
	.loc 1 38194 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6119
	cmpl	$1, %eax	#, which_alternative.6119
	jne	.L7898	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7899	#,
.L7898:
	.loc 1 38196 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7899:
	.loc 1 38200 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7897:
	.loc 1 38205 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7883:
	.loc 1 38210 0
	movq	-8(%rbp), %rax	# insn, tmp1604
	movq	%rax, %rdi	# tmp1604,
	call	extract_constrain_insn_cached	#
	.loc 1 38211 0
	movq	-8(%rbp), %rax	# insn, tmp1605
	movq	%rax, %rdi	# tmp1605,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7900	#,
	.loc 1 38211 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6120
	testl	%eax, %eax	# which_alternative.6120
	je	.L7901	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6121
	cmpl	$1, %eax	#, which_alternative.6121
	jne	.L7900	#,
.L7901:
	.loc 1 38211 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1606
	movq	%rax, %rdi	# tmp1606,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7902	#,
	.loc 1 38211 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6122
	testl	%eax, %eax	# which_alternative.6122
	je	.L7900	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6123
	cmpl	$1, %eax	#, which_alternative.6123
	jne	.L7902	#,
.L7900:
	.loc 1 38213 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1607
	movq	%rax, %rdi	# tmp1607,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7903	#,
	.loc 1 38213 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6124
	testl	%eax, %eax	# which_alternative.6124
	je	.L7904	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6125
	cmpl	$1, %eax	#, which_alternative.6125
	je	.L7904	#,
.L7903:
	.loc 1 38215 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7904:
	.loc 1 38219 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7902:
	.loc 1 38224 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7882:
	.loc 1 38228 0
	movq	-8(%rbp), %rax	# insn, tmp1608
	movq	%rax, %rdi	# tmp1608,
	call	extract_constrain_insn_cached	#
	.loc 1 38229 0
	movq	-8(%rbp), %rax	# insn, tmp1609
	movq	%rax, %rdi	# tmp1609,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7905	#,
	.loc 1 38229 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6126
	testl	%eax, %eax	# which_alternative.6126
	je	.L7906	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6127
	cmpl	$1, %eax	#, which_alternative.6127
	je	.L7906	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6128
	cmpl	$2, %eax	#, which_alternative.6128
	jne	.L7905	#,
.L7906:
	.loc 1 38229 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1610
	movq	%rax, %rdi	# tmp1610,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7907	#,
	.loc 1 38229 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6129
	testl	%eax, %eax	# which_alternative.6129
	je	.L7905	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6130
	cmpl	$1, %eax	#, which_alternative.6130
	je	.L7905	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6131
	cmpl	$2, %eax	#, which_alternative.6131
	jne	.L7907	#,
.L7905:
	.loc 1 38231 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1611
	movq	%rax, %rdi	# tmp1611,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7908	#,
	.loc 1 38231 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6132
	testl	%eax, %eax	# which_alternative.6132
	je	.L7909	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6133
	cmpl	$1, %eax	#, which_alternative.6133
	je	.L7909	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6134
	cmpl	$2, %eax	#, which_alternative.6134
	je	.L7909	#,
.L7908:
	.loc 1 38233 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7909:
	.loc 1 38237 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7907:
	.loc 1 38242 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7881:
	.loc 1 38246 0
	movq	-8(%rbp), %rax	# insn, tmp1612
	movq	%rax, %rdi	# tmp1612,
	call	extract_constrain_insn_cached	#
	.loc 1 38247 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6135
	testl	%eax, %eax	# which_alternative.6135
	je	.L7910	#,
	.loc 1 38247 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6136
	cmpl	$2, %eax	#, which_alternative.6136
	jne	.L7911	#,
.L7910:
	.loc 1 38247 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6137
	testl	%eax, %eax	# which_alternative.6137
	je	.L7911	#,
	.loc 1 38247 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6138
	cmpl	$2, %eax	#, which_alternative.6138
	jne	.L7912	#,
.L7911:
	.loc 1 38249 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6139
	testl	%eax, %eax	# which_alternative.6139
	je	.L7913	#,
	.loc 1 38249 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6140
	cmpl	$2, %eax	#, which_alternative.6140
	je	.L7913	#,
	.loc 1 38251 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7913:
	.loc 1 38255 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7912:
	.loc 1 38260 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7880:
	.loc 1 38265 0
	movq	-8(%rbp), %rax	# insn, tmp1613
	movq	%rax, %rdi	# tmp1613,
	call	extract_constrain_insn_cached	#
	.loc 1 38266 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6141
	cmpl	$1, %eax	#, which_alternative.6141
	jne	.L7914	#,
	.loc 1 38268 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7914:
	.loc 1 38272 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7879:
	.loc 1 38276 0
	movq	-8(%rbp), %rax	# insn, tmp1614
	movq	%rax, %rdi	# tmp1614,
	call	extract_constrain_insn_cached	#
	.loc 1 38277 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6142
	cmpl	$1, %eax	#, which_alternative.6142
	je	.L7915	#,
	.loc 1 38277 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6143
	cmpl	$3, %eax	#, which_alternative.6143
	je	.L7915	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6144
	cmpl	$1, %eax	#, which_alternative.6144
	je	.L7916	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6145
	cmpl	$3, %eax	#, which_alternative.6145
	je	.L7916	#,
.L7915:
	.loc 1 38279 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6146
	cmpl	$1, %eax	#, which_alternative.6146
	je	.L7917	#,
	.loc 1 38279 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6147
	cmpl	$3, %eax	#, which_alternative.6147
	jne	.L7918	#,
.L7917:
	.loc 1 38281 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7918:
	.loc 1 38285 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7916:
	.loc 1 38290 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7878:
	.loc 1 38294 0
	movq	-8(%rbp), %rax	# insn, tmp1615
	movq	%rax, %rdi	# tmp1615,
	call	extract_constrain_insn_cached	#
	.loc 1 38295 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6148
	cmpl	$1, %eax	#, which_alternative.6148
	jne	.L7919	#,
	.loc 1 38295 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1616
	movq	%rax, %rdi	# tmp1616,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7919	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6149
	cmpl	$1, %eax	#, which_alternative.6149
	jne	.L7920	#,
	movq	-8(%rbp), %rax	# insn, tmp1617
	movq	%rax, %rdi	# tmp1617,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7920	#,
.L7919:
	.loc 1 38297 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6150
	cmpl	$1, %eax	#, which_alternative.6150
	jne	.L7921	#,
	.loc 1 38297 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1618
	movq	%rax, %rdi	# tmp1618,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7922	#,
.L7921:
	.loc 1 38299 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7922:
	.loc 1 38303 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7920:
	.loc 1 38308 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7877:
	.loc 1 38313 0
	movq	-8(%rbp), %rax	# insn, tmp1619
	movq	%rax, %rdi	# tmp1619,
	call	extract_constrain_insn_cached	#
	.loc 1 38314 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6151
	testl	%eax, %eax	# which_alternative.6151
	jne	.L7923	#,
	.loc 1 38316 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7923:
	.loc 1 38320 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7876:
	.loc 1 38324 0
	movq	-8(%rbp), %rax	# insn, tmp1620
	movq	%rax, %rdi	# tmp1620,
	call	extract_constrain_insn_cached	#
	.loc 1 38325 0
	movq	-8(%rbp), %rax	# insn, tmp1621
	movq	%rax, %rdi	# tmp1621,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7924	#,
	.loc 1 38325 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6152
	cmpl	$3, %eax	#, which_alternative.6152
	je	.L7925	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6153
	cmpl	$4, %eax	#, which_alternative.6153
	jne	.L7924	#,
.L7925:
	.loc 1 38325 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1622
	movq	%rax, %rdi	# tmp1622,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7926	#,
	.loc 1 38325 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6154
	testl	%eax, %eax	# which_alternative.6154
	je	.L7926	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6155
	cmpl	$1, %eax	#, which_alternative.6155
	je	.L7926	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6156
	cmpl	$2, %eax	#, which_alternative.6156
	je	.L7926	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6157
	cmpl	$3, %eax	#, which_alternative.6157
	je	.L7924	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6158
	cmpl	$4, %eax	#, which_alternative.6158
	je	.L7924	#,
.L7926:
	.loc 1 38325 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6159
	testl	%eax, %eax	# which_alternative.6159
	je	.L7924	#,
	.loc 1 38325 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6160
	cmpl	$1, %eax	#, which_alternative.6160
	je	.L7924	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6161
	cmpl	$2, %eax	#, which_alternative.6161
	jne	.L7927	#,
.L7924:
	.loc 1 38327 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1623
	movq	%rax, %rdi	# tmp1623,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7928	#,
	.loc 1 38327 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6162
	testl	%eax, %eax	# which_alternative.6162
	je	.L7928	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6163
	cmpl	$1, %eax	#, which_alternative.6163
	je	.L7928	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6164
	cmpl	$2, %eax	#, which_alternative.6164
	je	.L7928	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6165
	cmpl	$3, %eax	#, which_alternative.6165
	je	.L7929	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6166
	cmpl	$4, %eax	#, which_alternative.6166
	je	.L7929	#,
.L7928:
	.loc 1 38329 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7929:
	.loc 1 38333 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7927:
	.loc 1 38338 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7875:
	.loc 1 38343 0
	movq	-8(%rbp), %rax	# insn, tmp1624
	movq	%rax, %rdi	# tmp1624,
	call	extract_constrain_insn_cached	#
	.loc 1 38344 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6167
	cmpl	$1, %eax	#, which_alternative.6167
	jne	.L7930	#,
	.loc 1 38344 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7930	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6168
	cmpl	$1, %eax	#, which_alternative.6168
	jne	.L7931	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7931	#,
.L7930:
	.loc 1 38346 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6169
	cmpl	$1, %eax	#, which_alternative.6169
	jne	.L7932	#,
	.loc 1 38346 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7933	#,
.L7932:
	.loc 1 38348 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7933:
	.loc 1 38352 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7931:
	.loc 1 38357 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7874:
	.loc 1 38361 0
	movq	-8(%rbp), %rax	# insn, tmp1625
	movq	%rax, %rdi	# tmp1625,
	call	extract_constrain_insn_cached	#
	.loc 1 38362 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6170
	testl	%eax, %eax	# which_alternative.6170
	jne	.L7934	#,
	.loc 1 38362 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7934	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6171
	testl	%eax, %eax	# which_alternative.6171
	jne	.L7935	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7935	#,
.L7934:
	.loc 1 38364 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6172
	testl	%eax, %eax	# which_alternative.6172
	jne	.L7936	#,
	.loc 1 38364 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7937	#,
.L7936:
	.loc 1 38366 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7937:
	.loc 1 38370 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7935:
	.loc 1 38375 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7873:
	.loc 1 38379 0
	movq	-8(%rbp), %rax	# insn, tmp1626
	movq	%rax, %rdi	# tmp1626,
	call	extract_constrain_insn_cached	#
	.loc 1 38380 0
	movq	-8(%rbp), %rax	# insn, tmp1627
	movq	%rax, %rdi	# tmp1627,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7938	#,
	.loc 1 38380 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7938	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6173
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6174
	movl	%eax, %ecx	# ix86_cpu.6175, tmp1841
	sarl	%cl, %edx	# tmp1841, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	jne	.L7938	#,
	movq	-8(%rbp), %rax	# insn, tmp1628
	movq	%rax, %rdi	# tmp1628,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7939	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7939	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6176
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6177
	movl	%eax, %ecx	# ix86_cpu.6178, tmp1843
	sarl	%cl, %edx	# tmp1843, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	jne	.L7939	#,
.L7938:
	.loc 1 38382 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1629
	movq	%rax, %rdi	# tmp1629,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7940	#,
	.loc 1 38382 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7940	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6179
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6180
	movl	%eax, %ecx	# ix86_cpu.6181, tmp1845
	sarl	%cl, %edx	# tmp1845, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7941	#,
.L7940:
	.loc 1 38384 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7941:
	.loc 1 38388 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7939:
	.loc 1 38393 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7872:
	.loc 1 38397 0
	movq	-8(%rbp), %rax	# insn, tmp1630
	movq	%rax, %rdi	# tmp1630,
	call	extract_constrain_insn_cached	#
	.loc 1 38398 0
	movq	-8(%rbp), %rax	# insn, tmp1631
	movq	%rax, %rdi	# tmp1631,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7942	#,
	.loc 1 38398 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6182
	cmpl	$3, %eax	#, which_alternative.6182
	jne	.L7943	#,
	.loc 1 38398 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6183
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6184
	movl	%eax, %ecx	# ix86_cpu.6185, tmp1847
	sarl	%cl, %edx	# tmp1847, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7944	#,
	.loc 1 38398 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6186
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6187
	movl	%eax, %ecx	# ix86_cpu.6188, tmp1849
	sarl	%cl, %edx	# tmp1849, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7944	#,
.L7943:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6189
	cmpl	$3, %eax	#, which_alternative.6189
	jne	.L7945	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6190
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6191
	movl	%eax, %ecx	# ix86_cpu.6192, tmp1851
	sarl	%cl, %edx	# tmp1851, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7942	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6193
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6194
	movl	%eax, %ecx	# ix86_cpu.6195, tmp1853
	sarl	%cl, %edx	# tmp1853, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7942	#,
.L7945:
	.loc 1 38398 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6196
	cmpl	$3, %eax	#, which_alternative.6196
	je	.L7942	#,
	.loc 1 38398 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6197
	cmpl	$5, %eax	#, which_alternative.6197
	je	.L7942	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6198
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6199
	movl	%eax, %ecx	# ix86_cpu.6200, tmp1855
	sarl	%cl, %edx	# tmp1855, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7944	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6201
	cmpl	$2, %eax	#, which_alternative.6201
	je	.L7942	#,
.L7944:
	.loc 1 38398 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1632
	movq	%rax, %rdi	# tmp1632,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7946	#,
	.loc 1 38398 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6202
	cmpl	$3, %eax	#, which_alternative.6202
	jne	.L7947	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6203
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6204
	movl	%eax, %ecx	# ix86_cpu.6205, tmp1857
	sarl	%cl, %edx	# tmp1857, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7942	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6206
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6207
	movl	%eax, %ecx	# ix86_cpu.6208, tmp1859
	sarl	%cl, %edx	# tmp1859, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7942	#,
.L7947:
	.loc 1 38398 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6209
	cmpl	$3, %eax	#, which_alternative.6209
	jne	.L7948	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6210
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6211
	movl	%eax, %ecx	# ix86_cpu.6212, tmp1861
	sarl	%cl, %edx	# tmp1861, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7946	#,
	.loc 1 38398 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6213
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6214
	movl	%eax, %ecx	# ix86_cpu.6215, tmp1863
	sarl	%cl, %edx	# tmp1863, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7946	#,
.L7948:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6216
	cmpl	$3, %eax	#, which_alternative.6216
	je	.L7946	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6217
	cmpl	$5, %eax	#, which_alternative.6217
	je	.L7946	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6218
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6219
	movl	%eax, %ecx	# ix86_cpu.6220, tmp1865
	sarl	%cl, %edx	# tmp1865, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7942	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6221
	cmpl	$2, %eax	#, which_alternative.6221
	je	.L7946	#,
.L7942:
	.loc 1 38400 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1633
	movq	%rax, %rdi	# tmp1633,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7949	#,
	.loc 1 38400 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6222
	cmpl	$3, %eax	#, which_alternative.6222
	jne	.L7950	#,
	.loc 1 38400 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6223
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6224
	movl	%eax, %ecx	# ix86_cpu.6225, tmp1867
	sarl	%cl, %edx	# tmp1867, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7951	#,
	.loc 1 38400 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6226
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6227
	movl	%eax, %ecx	# ix86_cpu.6228, tmp1869
	sarl	%cl, %edx	# tmp1869, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7951	#,
.L7950:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6229
	cmpl	$3, %eax	#, which_alternative.6229
	jne	.L7952	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6230
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6231
	movl	%eax, %ecx	# ix86_cpu.6232, tmp1871
	sarl	%cl, %edx	# tmp1871, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7949	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6233
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6234
	movl	%eax, %ecx	# ix86_cpu.6235, tmp1873
	sarl	%cl, %edx	# tmp1873, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7949	#,
.L7952:
	.loc 1 38400 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6236
	cmpl	$3, %eax	#, which_alternative.6236
	je	.L7949	#,
	.loc 1 38400 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6237
	cmpl	$5, %eax	#, which_alternative.6237
	je	.L7949	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6238
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6239
	movl	%eax, %ecx	# ix86_cpu.6240, tmp1875
	sarl	%cl, %edx	# tmp1875, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L7951	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6241
	cmpl	$2, %eax	#, which_alternative.6241
	jne	.L7951	#,
.L7949:
	.loc 1 38402 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7951:
	.loc 1 38406 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7946:
	.loc 1 38411 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7871:
	.loc 1 38418 0
	movq	-8(%rbp), %rax	# insn, tmp1634
	movq	%rax, %rdi	# tmp1634,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7953	#,
	.loc 1 38418 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1635
	movq	%rax, %rdi	# tmp1635,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57560
	jne	.L7953	#,
	movq	-8(%rbp), %rax	# insn, tmp1636
	movq	%rax, %rdi	# tmp1636,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7954	#,
	movq	-8(%rbp), %rax	# insn, tmp1637
	movq	%rax, %rdi	# tmp1637,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57560
	jne	.L7954	#,
.L7953:
	.loc 1 38420 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1638
	movq	%rax, %rdi	# tmp1638,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7955	#,
	.loc 1 38420 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1639
	movq	%rax, %rdi	# tmp1639,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57560
	je	.L7956	#,
.L7955:
	.loc 1 38422 0 is_stmt 1
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7956:
	.loc 1 38426 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7954:
	.loc 1 38431 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7870:
	.loc 1 38453 0
	movq	-8(%rbp), %rax	# insn, tmp1640
	movq	%rax, %rdi	# tmp1640,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L7957	#,
	.loc 1 38455 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7957:
	.loc 1 38459 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7869:
	.loc 1 38506 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7868:
	.loc 1 38512 0
	movq	-8(%rbp), %rax	# insn, tmp1641
	movq	%rax, %rdi	# tmp1641,
	call	extract_insn_cached	#
	.loc 1 38513 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7958	#,
	.loc 1 38515 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7958:
	.loc 1 38519 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7867:
	.loc 1 38530 0
	movq	-8(%rbp), %rax	# insn, tmp1642
	movq	%rax, %rdi	# tmp1642,
	call	extract_insn_cached	#
	.loc 1 38531 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7959	#,
	.loc 1 38533 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7959:
	.loc 1 38537 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7866:
	.loc 1 38665 0
	movq	-8(%rbp), %rax	# insn, tmp1643
	movq	%rax, %rdi	# tmp1643,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L7960	#,
	.loc 1 38667 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7960:
	.loc 1 38671 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7864:
	.loc 1 38675 0
	movq	-8(%rbp), %rax	# insn, tmp1644
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57557
	movzwl	(%rax), %eax	# _1055->code, D.57562
	cmpw	$40, %ax	#, D.57562
	je	.L7863	#,
	.loc 1 38676 0
	movq	-8(%rbp), %rax	# insn, tmp1645
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57557
	movq	%rax, %rdi	# D.57557,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57556
	jns	.L7863	#,
	.loc 1 38677 0
	movq	-8(%rbp), %rax	# insn, tmp1646
	movl	$__FUNCTION__.26956, %ecx	#,
	movl	$38677, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1646,
	call	_fatal_insn_not_found	#
.L7863:
	.loc 1 38679 0
	movl	$3, %eax	#, D.57556
	jmp	.L7860	#
.L7857:
	.loc 1 38684 0
	movq	-8(%rbp), %rax	# insn, tmp1647
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, D.57556
	testl	%eax, %eax	# D.57556
	js	.L7961	#,
	.loc 1 38684 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1648
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, iftmp.6242
	jmp	.L7962	#
.L7961:
	.loc 1 38684 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1649
	movq	%rax, %rdi	# tmp1649,
	call	recog_memoized_1	#
.L7962:
	.loc 1 38684 0 discriminator 3
	addl	$1, %eax	#, tmp1650
	cmpl	$657, %eax	#, tmp1650
	ja	.L7963	#,
	movl	%eax, %eax	# tmp1650, tmp1651
	movq	.L7965(,%rax,8), %rax	#, tmp1652
	jmp	*%rax	# tmp1652
	.section	.rodata
	.align 8
	.align 4
.L7965:
	.quad	.L7964
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7967
	.quad	.L7967
	.quad	.L7967
	.quad	.L7968
	.quad	.L7968
	.quad	.L7969
	.quad	.L7969
	.quad	.L7970
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7967
	.quad	.L7967
	.quad	.L7971
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7963
	.quad	.L7966
	.quad	.L7969
	.quad	.L7967
	.quad	.L7967
	.quad	.L7972
	.quad	.L7963
	.quad	.L7966
	.quad	.L7969
	.quad	.L7963
	.quad	.L7963
	.quad	.L7971
	.quad	.L7971
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7971
	.quad	.L7973
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7974
	.quad	.L7967
	.quad	.L7968
	.quad	.L7968
	.quad	.L7969
	.quad	.L7969
	.quad	.L7963
	.quad	.L7970
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7975
	.quad	.L7975
	.quad	.L7976
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7969
	.quad	.L7963
	.quad	.L7969
	.quad	.L7977
	.quad	.L7963
	.quad	.L7969
	.quad	.L7977
	.quad	.L7963
	.quad	.L7963
	.quad	.L7978
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7969
	.quad	.L7966
	.quad	.L7969
	.quad	.L7969
	.quad	.L7966
	.quad	.L7966
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7970
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7970
	.quad	.L7970
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7970
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7970
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7969
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7969
	.quad	.L7969
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7979
	.quad	.L7980
	.quad	.L7980
	.quad	.L7981
	.quad	.L7963
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7963
	.quad	.L7982
	.quad	.L7966
	.quad	.L7983
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7983
	.quad	.L7966
	.quad	.L7966
	.quad	.L7969
	.quad	.L7966
	.quad	.L7969
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7969
	.quad	.L7966
	.quad	.L7969
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7969
	.quad	.L7963
	.quad	.L7963
	.quad	.L7969
	.quad	.L7969
	.quad	.L7963
	.quad	.L7969
	.quad	.L7963
	.quad	.L7969
	.quad	.L7970
	.quad	.L7970
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7970
	.quad	.L7970
	.quad	.L7970
	.quad	.L7970
	.quad	.L7970
	.quad	.L7970
	.quad	.L7970
	.quad	.L7970
	.quad	.L7970
	.quad	.L7970
	.quad	.L7984
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7984
	.quad	.L7984
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7963
	.quad	.L7963
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7985
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7969
	.quad	.L7969
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7969
	.quad	.L7986
	.quad	.L7987
	.quad	.L7987
	.quad	.L7987
	.quad	.L7987
	.quad	.L7987
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7969
	.quad	.L7963
	.quad	.L7966
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7969
	.quad	.L7963
	.quad	.L7969
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7966
	.quad	.L7966
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7963
	.quad	.L7988
	.quad	.L7988
	.quad	.L7988
	.quad	.L7988
	.quad	.L7988
	.quad	.L7988
	.text
.L7988:
	.loc 1 38692 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1653
	movq	%rax, %rdi	# tmp1653,
	call	extract_insn_cached	#
	.loc 1 38693 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7989	#,
	.loc 1 38695 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7989:
	.loc 1 38699 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7987:
	.loc 1 38707 0
	movq	-8(%rbp), %rax	# insn, tmp1654
	movq	%rax, %rdi	# tmp1654,
	call	extract_insn_cached	#
	.loc 1 38708 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7990	#,
	.loc 1 38710 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7990:
	.loc 1 38714 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7986:
	.loc 1 38718 0
	movq	-8(%rbp), %rax	# insn, tmp1655
	movq	%rax, %rdi	# tmp1655,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57560
	je	.L7991	#,
	.loc 1 38720 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7991:
	.loc 1 38724 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7985:
	.loc 1 38787 0
	movq	-8(%rbp), %rax	# insn, tmp1656
	movq	%rax, %rdi	# tmp1656,
	call	extract_insn_cached	#
	.loc 1 38788 0
	movq	-8(%rbp), %rax	# insn, tmp1657
	movq	%rax, %rdi	# tmp1657,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7992	#,
	.loc 1 38788 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7992	#,
	movq	-8(%rbp), %rax	# insn, tmp1658
	movq	%rax, %rdi	# tmp1658,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7993	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7993	#,
.L7992:
	.loc 1 38790 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1659
	movq	%rax, %rdi	# tmp1659,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7994	#,
	.loc 1 38790 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7995	#,
.L7994:
	.loc 1 38792 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7995:
	.loc 1 38796 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7993:
	.loc 1 38801 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7984:
	.loc 1 38807 0
	movq	-8(%rbp), %rax	# insn, tmp1660
	movq	%rax, %rdi	# tmp1660,
	call	extract_constrain_insn_cached	#
	.loc 1 38808 0
	movq	-8(%rbp), %rax	# insn, tmp1661
	movq	%rax, %rdi	# tmp1661,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7996	#,
	.loc 1 38808 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6243
	cmpl	$1, %eax	#, which_alternative.6243
	jne	.L7996	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7996	#,
	movq	-8(%rbp), %rax	# insn, tmp1662
	movq	%rax, %rdi	# tmp1662,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7997	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6244
	cmpl	$1, %eax	#, which_alternative.6244
	jne	.L7997	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L7997	#,
.L7996:
	.loc 1 38810 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1663
	movq	%rax, %rdi	# tmp1663,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L7998	#,
	.loc 1 38810 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6245
	cmpl	$1, %eax	#, which_alternative.6245
	jne	.L7998	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L7999	#,
.L7998:
	.loc 1 38812 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7999:
	.loc 1 38816 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7997:
	.loc 1 38821 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7983:
	.loc 1 38826 0
	movq	-8(%rbp), %rax	# insn, tmp1664
	movq	%rax, %rdi	# tmp1664,
	call	extract_constrain_insn_cached	#
	.loc 1 38827 0
	movq	-8(%rbp), %rax	# insn, tmp1665
	movq	%rax, %rdi	# tmp1665,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8000	#,
	.loc 1 38827 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6246
	testl	%eax, %eax	# which_alternative.6246
	je	.L8001	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6247
	cmpl	$1, %eax	#, which_alternative.6247
	jne	.L8000	#,
.L8001:
	.loc 1 38827 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1666
	movq	%rax, %rdi	# tmp1666,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8002	#,
	.loc 1 38827 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6248
	testl	%eax, %eax	# which_alternative.6248
	je	.L8000	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6249
	cmpl	$1, %eax	#, which_alternative.6249
	jne	.L8002	#,
.L8000:
	.loc 1 38829 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1667
	movq	%rax, %rdi	# tmp1667,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8003	#,
	.loc 1 38829 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6250
	testl	%eax, %eax	# which_alternative.6250
	je	.L8004	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6251
	cmpl	$1, %eax	#, which_alternative.6251
	je	.L8004	#,
.L8003:
	.loc 1 38831 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8004:
	.loc 1 38835 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8002:
	.loc 1 38840 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7982:
	.loc 1 38844 0
	movq	-8(%rbp), %rax	# insn, tmp1668
	movq	%rax, %rdi	# tmp1668,
	call	extract_constrain_insn_cached	#
	.loc 1 38845 0
	movq	-8(%rbp), %rax	# insn, tmp1669
	movq	%rax, %rdi	# tmp1669,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8005	#,
	.loc 1 38845 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6252
	testl	%eax, %eax	# which_alternative.6252
	je	.L8006	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6253
	cmpl	$1, %eax	#, which_alternative.6253
	je	.L8006	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6254
	cmpl	$2, %eax	#, which_alternative.6254
	jne	.L8005	#,
.L8006:
	.loc 1 38845 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1670
	movq	%rax, %rdi	# tmp1670,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8007	#,
	.loc 1 38845 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6255
	testl	%eax, %eax	# which_alternative.6255
	je	.L8005	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6256
	cmpl	$1, %eax	#, which_alternative.6256
	je	.L8005	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6257
	cmpl	$2, %eax	#, which_alternative.6257
	jne	.L8007	#,
.L8005:
	.loc 1 38847 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1671
	movq	%rax, %rdi	# tmp1671,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8008	#,
	.loc 1 38847 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6258
	testl	%eax, %eax	# which_alternative.6258
	je	.L8009	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6259
	cmpl	$1, %eax	#, which_alternative.6259
	je	.L8009	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6260
	cmpl	$2, %eax	#, which_alternative.6260
	je	.L8009	#,
.L8008:
	.loc 1 38849 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8009:
	.loc 1 38853 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8007:
	.loc 1 38858 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7981:
	.loc 1 38862 0
	movq	-8(%rbp), %rax	# insn, tmp1672
	movq	%rax, %rdi	# tmp1672,
	call	extract_constrain_insn_cached	#
	.loc 1 38863 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6261
	testl	%eax, %eax	# which_alternative.6261
	je	.L8010	#,
	.loc 1 38863 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6262
	cmpl	$2, %eax	#, which_alternative.6262
	jne	.L8011	#,
.L8010:
	.loc 1 38863 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6263
	testl	%eax, %eax	# which_alternative.6263
	je	.L8011	#,
	.loc 1 38863 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6264
	cmpl	$2, %eax	#, which_alternative.6264
	jne	.L8012	#,
.L8011:
	.loc 1 38865 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6265
	testl	%eax, %eax	# which_alternative.6265
	je	.L8013	#,
	.loc 1 38865 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6266
	cmpl	$2, %eax	#, which_alternative.6266
	je	.L8013	#,
	.loc 1 38867 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8013:
	.loc 1 38871 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8012:
	.loc 1 38876 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7980:
	.loc 1 38881 0
	movq	-8(%rbp), %rax	# insn, tmp1673
	movq	%rax, %rdi	# tmp1673,
	call	extract_constrain_insn_cached	#
	.loc 1 38882 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6267
	cmpl	$1, %eax	#, which_alternative.6267
	jne	.L8014	#,
	.loc 1 38884 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8014:
	.loc 1 38888 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7979:
	.loc 1 38892 0
	movq	-8(%rbp), %rax	# insn, tmp1674
	movq	%rax, %rdi	# tmp1674,
	call	extract_constrain_insn_cached	#
	.loc 1 38893 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6268
	cmpl	$1, %eax	#, which_alternative.6268
	je	.L8015	#,
	.loc 1 38893 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6269
	cmpl	$3, %eax	#, which_alternative.6269
	je	.L8015	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6270
	cmpl	$1, %eax	#, which_alternative.6270
	je	.L8016	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6271
	cmpl	$3, %eax	#, which_alternative.6271
	je	.L8016	#,
.L8015:
	.loc 1 38895 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6272
	cmpl	$1, %eax	#, which_alternative.6272
	je	.L8017	#,
	.loc 1 38895 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6273
	cmpl	$3, %eax	#, which_alternative.6273
	jne	.L8018	#,
.L8017:
	.loc 1 38897 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8018:
	.loc 1 38901 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8016:
	.loc 1 38906 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7978:
	.loc 1 38910 0
	movq	-8(%rbp), %rax	# insn, tmp1675
	movq	%rax, %rdi	# tmp1675,
	call	extract_constrain_insn_cached	#
	.loc 1 38911 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6274
	cmpl	$1, %eax	#, which_alternative.6274
	jne	.L8019	#,
	.loc 1 38911 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1676
	movq	%rax, %rdi	# tmp1676,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8019	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6275
	cmpl	$1, %eax	#, which_alternative.6275
	jne	.L8020	#,
	movq	-8(%rbp), %rax	# insn, tmp1677
	movq	%rax, %rdi	# tmp1677,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8020	#,
.L8019:
	.loc 1 38913 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6276
	cmpl	$1, %eax	#, which_alternative.6276
	jne	.L8021	#,
	.loc 1 38913 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1678
	movq	%rax, %rdi	# tmp1678,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L8022	#,
.L8021:
	.loc 1 38915 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8022:
	.loc 1 38919 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8020:
	.loc 1 38924 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7977:
	.loc 1 38929 0
	movq	-8(%rbp), %rax	# insn, tmp1679
	movq	%rax, %rdi	# tmp1679,
	call	extract_constrain_insn_cached	#
	.loc 1 38930 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6277
	testl	%eax, %eax	# which_alternative.6277
	jne	.L8023	#,
	.loc 1 38932 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8023:
	.loc 1 38936 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7976:
	.loc 1 38940 0
	movq	-8(%rbp), %rax	# insn, tmp1680
	movq	%rax, %rdi	# tmp1680,
	call	extract_constrain_insn_cached	#
	.loc 1 38941 0
	movq	-8(%rbp), %rax	# insn, tmp1681
	movq	%rax, %rdi	# tmp1681,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8024	#,
	.loc 1 38941 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6278
	cmpl	$3, %eax	#, which_alternative.6278
	je	.L8025	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6279
	cmpl	$4, %eax	#, which_alternative.6279
	jne	.L8024	#,
.L8025:
	.loc 1 38941 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1682
	movq	%rax, %rdi	# tmp1682,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8026	#,
	.loc 1 38941 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6280
	testl	%eax, %eax	# which_alternative.6280
	je	.L8026	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6281
	cmpl	$1, %eax	#, which_alternative.6281
	je	.L8026	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6282
	cmpl	$2, %eax	#, which_alternative.6282
	je	.L8026	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6283
	cmpl	$3, %eax	#, which_alternative.6283
	je	.L8024	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6284
	cmpl	$4, %eax	#, which_alternative.6284
	je	.L8024	#,
.L8026:
	.loc 1 38941 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6285
	testl	%eax, %eax	# which_alternative.6285
	je	.L8024	#,
	.loc 1 38941 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6286
	cmpl	$1, %eax	#, which_alternative.6286
	je	.L8024	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6287
	cmpl	$2, %eax	#, which_alternative.6287
	jne	.L8027	#,
.L8024:
	.loc 1 38943 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1683
	movq	%rax, %rdi	# tmp1683,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8028	#,
	.loc 1 38943 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6288
	testl	%eax, %eax	# which_alternative.6288
	je	.L8028	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6289
	cmpl	$1, %eax	#, which_alternative.6289
	je	.L8028	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6290
	cmpl	$2, %eax	#, which_alternative.6290
	je	.L8028	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6291
	cmpl	$3, %eax	#, which_alternative.6291
	je	.L8029	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6292
	cmpl	$4, %eax	#, which_alternative.6292
	je	.L8029	#,
.L8028:
	.loc 1 38945 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8029:
	.loc 1 38949 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8027:
	.loc 1 38954 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7975:
	.loc 1 38959 0
	movq	-8(%rbp), %rax	# insn, tmp1684
	movq	%rax, %rdi	# tmp1684,
	call	extract_constrain_insn_cached	#
	.loc 1 38960 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6293
	cmpl	$1, %eax	#, which_alternative.6293
	jne	.L8030	#,
	.loc 1 38960 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8030	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6294
	cmpl	$1, %eax	#, which_alternative.6294
	jne	.L8031	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8031	#,
.L8030:
	.loc 1 38962 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6295
	cmpl	$1, %eax	#, which_alternative.6295
	jne	.L8032	#,
	.loc 1 38962 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8033	#,
.L8032:
	.loc 1 38964 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8033:
	.loc 1 38968 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8031:
	.loc 1 38973 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7974:
	.loc 1 38977 0
	movq	-8(%rbp), %rax	# insn, tmp1685
	movq	%rax, %rdi	# tmp1685,
	call	extract_constrain_insn_cached	#
	.loc 1 38978 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6296
	testl	%eax, %eax	# which_alternative.6296
	jne	.L8034	#,
	.loc 1 38978 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8034	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6297
	testl	%eax, %eax	# which_alternative.6297
	jne	.L8035	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8035	#,
.L8034:
	.loc 1 38980 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6298
	testl	%eax, %eax	# which_alternative.6298
	jne	.L8036	#,
	.loc 1 38980 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8037	#,
.L8036:
	.loc 1 38982 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8037:
	.loc 1 38986 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8035:
	.loc 1 38991 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7973:
	.loc 1 38995 0
	movq	-8(%rbp), %rax	# insn, tmp1686
	movq	%rax, %rdi	# tmp1686,
	call	extract_constrain_insn_cached	#
	.loc 1 38996 0
	movq	-8(%rbp), %rax	# insn, tmp1687
	movq	%rax, %rdi	# tmp1687,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8038	#,
	.loc 1 38996 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8038	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6299
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6300
	movl	%eax, %ecx	# ix86_cpu.6301, tmp1877
	sarl	%cl, %edx	# tmp1877, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	jne	.L8038	#,
	movq	-8(%rbp), %rax	# insn, tmp1688
	movq	%rax, %rdi	# tmp1688,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8039	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8039	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6302
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6303
	movl	%eax, %ecx	# ix86_cpu.6304, tmp1879
	sarl	%cl, %edx	# tmp1879, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	jne	.L8039	#,
.L8038:
	.loc 1 38998 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1689
	movq	%rax, %rdi	# tmp1689,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8040	#,
	.loc 1 38998 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8040	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6305
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6306
	movl	%eax, %ecx	# ix86_cpu.6307, tmp1881
	sarl	%cl, %edx	# tmp1881, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8041	#,
.L8040:
	.loc 1 39000 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8041:
	.loc 1 39004 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8039:
	.loc 1 39009 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7972:
	.loc 1 39013 0
	movq	-8(%rbp), %rax	# insn, tmp1690
	movq	%rax, %rdi	# tmp1690,
	call	extract_constrain_insn_cached	#
	.loc 1 39014 0
	movq	-8(%rbp), %rax	# insn, tmp1691
	movq	%rax, %rdi	# tmp1691,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8042	#,
	.loc 1 39014 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6308
	cmpl	$3, %eax	#, which_alternative.6308
	jne	.L8043	#,
	.loc 1 39014 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6309
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6310
	movl	%eax, %ecx	# ix86_cpu.6311, tmp1883
	sarl	%cl, %edx	# tmp1883, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8044	#,
	.loc 1 39014 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6312
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6313
	movl	%eax, %ecx	# ix86_cpu.6314, tmp1885
	sarl	%cl, %edx	# tmp1885, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8044	#,
.L8043:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6315
	cmpl	$3, %eax	#, which_alternative.6315
	jne	.L8045	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6316
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6317
	movl	%eax, %ecx	# ix86_cpu.6318, tmp1887
	sarl	%cl, %edx	# tmp1887, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8042	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6319
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6320
	movl	%eax, %ecx	# ix86_cpu.6321, tmp1889
	sarl	%cl, %edx	# tmp1889, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8042	#,
.L8045:
	.loc 1 39014 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6322
	cmpl	$3, %eax	#, which_alternative.6322
	je	.L8042	#,
	.loc 1 39014 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6323
	cmpl	$5, %eax	#, which_alternative.6323
	je	.L8042	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6324
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6325
	movl	%eax, %ecx	# ix86_cpu.6326, tmp1891
	sarl	%cl, %edx	# tmp1891, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8044	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6327
	cmpl	$2, %eax	#, which_alternative.6327
	je	.L8042	#,
.L8044:
	.loc 1 39014 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1692
	movq	%rax, %rdi	# tmp1692,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8046	#,
	.loc 1 39014 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6328
	cmpl	$3, %eax	#, which_alternative.6328
	jne	.L8047	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6329
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6330
	movl	%eax, %ecx	# ix86_cpu.6331, tmp1893
	sarl	%cl, %edx	# tmp1893, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8042	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6332
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6333
	movl	%eax, %ecx	# ix86_cpu.6334, tmp1895
	sarl	%cl, %edx	# tmp1895, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8042	#,
.L8047:
	.loc 1 39014 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6335
	cmpl	$3, %eax	#, which_alternative.6335
	jne	.L8048	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6336
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6337
	movl	%eax, %ecx	# ix86_cpu.6338, tmp1897
	sarl	%cl, %edx	# tmp1897, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8046	#,
	.loc 1 39014 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6339
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6340
	movl	%eax, %ecx	# ix86_cpu.6341, tmp1899
	sarl	%cl, %edx	# tmp1899, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8046	#,
.L8048:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6342
	cmpl	$3, %eax	#, which_alternative.6342
	je	.L8046	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6343
	cmpl	$5, %eax	#, which_alternative.6343
	je	.L8046	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6344
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6345
	movl	%eax, %ecx	# ix86_cpu.6346, tmp1901
	sarl	%cl, %edx	# tmp1901, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8042	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6347
	cmpl	$2, %eax	#, which_alternative.6347
	je	.L8046	#,
.L8042:
	.loc 1 39016 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1693
	movq	%rax, %rdi	# tmp1693,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8049	#,
	.loc 1 39016 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6348
	cmpl	$3, %eax	#, which_alternative.6348
	jne	.L8050	#,
	.loc 1 39016 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6349
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6350
	movl	%eax, %ecx	# ix86_cpu.6351, tmp1903
	sarl	%cl, %edx	# tmp1903, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8051	#,
	.loc 1 39016 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6352
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6353
	movl	%eax, %ecx	# ix86_cpu.6354, tmp1905
	sarl	%cl, %edx	# tmp1905, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8051	#,
.L8050:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6355
	cmpl	$3, %eax	#, which_alternative.6355
	jne	.L8052	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6356
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6357
	movl	%eax, %ecx	# ix86_cpu.6358, tmp1907
	sarl	%cl, %edx	# tmp1907, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8049	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6359
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6360
	movl	%eax, %ecx	# ix86_cpu.6361, tmp1909
	sarl	%cl, %edx	# tmp1909, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8049	#,
.L8052:
	.loc 1 39016 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6362
	cmpl	$3, %eax	#, which_alternative.6362
	je	.L8049	#,
	.loc 1 39016 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6363
	cmpl	$5, %eax	#, which_alternative.6363
	je	.L8049	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6364
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6365
	movl	%eax, %ecx	# ix86_cpu.6366, tmp1911
	sarl	%cl, %edx	# tmp1911, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8051	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6367
	cmpl	$2, %eax	#, which_alternative.6367
	jne	.L8051	#,
.L8049:
	.loc 1 39018 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8051:
	.loc 1 39022 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8046:
	.loc 1 39027 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7971:
	.loc 1 39034 0
	movq	-8(%rbp), %rax	# insn, tmp1694
	movq	%rax, %rdi	# tmp1694,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8053	#,
	.loc 1 39034 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1695
	movq	%rax, %rdi	# tmp1695,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57560
	jne	.L8053	#,
	movq	-8(%rbp), %rax	# insn, tmp1696
	movq	%rax, %rdi	# tmp1696,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8054	#,
	movq	-8(%rbp), %rax	# insn, tmp1697
	movq	%rax, %rdi	# tmp1697,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57560
	jne	.L8054	#,
.L8053:
	.loc 1 39036 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1698
	movq	%rax, %rdi	# tmp1698,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8055	#,
	.loc 1 39036 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1699
	movq	%rax, %rdi	# tmp1699,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57560
	je	.L8056	#,
.L8055:
	.loc 1 39038 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8056:
	.loc 1 39042 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8054:
	.loc 1 39047 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7970:
	.loc 1 39069 0
	movq	-8(%rbp), %rax	# insn, tmp1700
	movq	%rax, %rdi	# tmp1700,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L8057	#,
	.loc 1 39071 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8057:
	.loc 1 39075 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7969:
	.loc 1 39122 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7968:
	.loc 1 39128 0
	movq	-8(%rbp), %rax	# insn, tmp1701
	movq	%rax, %rdi	# tmp1701,
	call	extract_insn_cached	#
	.loc 1 39129 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8058	#,
	.loc 1 39131 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8058:
	.loc 1 39135 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7967:
	.loc 1 39146 0
	movq	-8(%rbp), %rax	# insn, tmp1702
	movq	%rax, %rdi	# tmp1702,
	call	extract_insn_cached	#
	.loc 1 39147 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8059	#,
	.loc 1 39149 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8059:
	.loc 1 39153 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7966:
	.loc 1 39281 0
	movq	-8(%rbp), %rax	# insn, tmp1703
	movq	%rax, %rdi	# tmp1703,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L8060	#,
	.loc 1 39283 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8060:
	.loc 1 39287 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L7964:
	.loc 1 39291 0
	movq	-8(%rbp), %rax	# insn, tmp1704
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57557
	movzwl	(%rax), %eax	# _1353->code, D.57562
	cmpw	$40, %ax	#, D.57562
	je	.L7963	#,
	.loc 1 39292 0
	movq	-8(%rbp), %rax	# insn, tmp1705
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57557
	movq	%rax, %rdi	# D.57557,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57556
	jns	.L7963	#,
	.loc 1 39293 0
	movq	-8(%rbp), %rax	# insn, tmp1706
	movl	$__FUNCTION__.26956, %ecx	#,
	movl	$39293, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1706,
	call	_fatal_insn_not_found	#
.L7963:
	.loc 1 39295 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7858:
	.loc 1 39300 0
	movq	-8(%rbp), %rax	# insn, tmp1707
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, D.57556
	testl	%eax, %eax	# D.57556
	js	.L8061	#,
	.loc 1 39300 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1708
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, iftmp.6368
	jmp	.L8062	#
.L8061:
	.loc 1 39300 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1709
	movq	%rax, %rdi	# tmp1709,
	call	recog_memoized_1	#
.L8062:
	.loc 1 39300 0 discriminator 3
	addl	$1, %eax	#, tmp1710
	cmpl	$657, %eax	#, tmp1710
	ja	.L8063	#,
	movl	%eax, %eax	# tmp1710, tmp1711
	movq	.L8065(,%rax,8), %rax	#, tmp1712
	jmp	*%rax	# tmp1712
	.section	.rodata
	.align 8
	.align 4
.L8065:
	.quad	.L8064
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8067
	.quad	.L8067
	.quad	.L8067
	.quad	.L8068
	.quad	.L8068
	.quad	.L8069
	.quad	.L8069
	.quad	.L8070
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8067
	.quad	.L8067
	.quad	.L8071
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8063
	.quad	.L8066
	.quad	.L8069
	.quad	.L8067
	.quad	.L8067
	.quad	.L8072
	.quad	.L8063
	.quad	.L8066
	.quad	.L8069
	.quad	.L8063
	.quad	.L8063
	.quad	.L8071
	.quad	.L8071
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8071
	.quad	.L8073
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8074
	.quad	.L8067
	.quad	.L8068
	.quad	.L8068
	.quad	.L8069
	.quad	.L8069
	.quad	.L8063
	.quad	.L8070
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8075
	.quad	.L8075
	.quad	.L8076
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8069
	.quad	.L8063
	.quad	.L8069
	.quad	.L8077
	.quad	.L8063
	.quad	.L8069
	.quad	.L8077
	.quad	.L8063
	.quad	.L8063
	.quad	.L8078
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8069
	.quad	.L8066
	.quad	.L8069
	.quad	.L8069
	.quad	.L8066
	.quad	.L8066
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8070
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8070
	.quad	.L8070
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8070
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8070
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8069
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8069
	.quad	.L8069
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8079
	.quad	.L8080
	.quad	.L8080
	.quad	.L8081
	.quad	.L8063
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8063
	.quad	.L8082
	.quad	.L8066
	.quad	.L8083
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8083
	.quad	.L8066
	.quad	.L8066
	.quad	.L8069
	.quad	.L8066
	.quad	.L8069
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8069
	.quad	.L8066
	.quad	.L8069
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8069
	.quad	.L8063
	.quad	.L8063
	.quad	.L8069
	.quad	.L8069
	.quad	.L8063
	.quad	.L8069
	.quad	.L8063
	.quad	.L8069
	.quad	.L8070
	.quad	.L8070
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8070
	.quad	.L8070
	.quad	.L8070
	.quad	.L8070
	.quad	.L8070
	.quad	.L8070
	.quad	.L8070
	.quad	.L8070
	.quad	.L8070
	.quad	.L8070
	.quad	.L8084
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8084
	.quad	.L8084
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8063
	.quad	.L8063
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8085
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8069
	.quad	.L8069
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8069
	.quad	.L8086
	.quad	.L8087
	.quad	.L8087
	.quad	.L8087
	.quad	.L8087
	.quad	.L8087
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8069
	.quad	.L8063
	.quad	.L8066
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8069
	.quad	.L8063
	.quad	.L8069
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8066
	.quad	.L8066
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8063
	.quad	.L8088
	.quad	.L8088
	.quad	.L8088
	.quad	.L8088
	.quad	.L8088
	.quad	.L8088
	.text
.L8088:
	.loc 1 39308 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1713
	movq	%rax, %rdi	# tmp1713,
	call	extract_insn_cached	#
	.loc 1 39309 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8089	#,
	.loc 1 39311 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8089:
	.loc 1 39315 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8087:
	.loc 1 39323 0
	movq	-8(%rbp), %rax	# insn, tmp1714
	movq	%rax, %rdi	# tmp1714,
	call	extract_insn_cached	#
	.loc 1 39324 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	constant_call_address_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8090	#,
	.loc 1 39326 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8090:
	.loc 1 39330 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8086:
	.loc 1 39334 0
	movq	-8(%rbp), %rax	# insn, tmp1715
	movq	%rax, %rdi	# tmp1715,
	call	get_attr_type	#
	cmpl	$14, %eax	#, D.57560
	je	.L8091	#,
	.loc 1 39336 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8091:
	.loc 1 39340 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8085:
	.loc 1 39403 0
	movq	-8(%rbp), %rax	# insn, tmp1716
	movq	%rax, %rdi	# tmp1716,
	call	extract_insn_cached	#
	.loc 1 39404 0
	movq	-8(%rbp), %rax	# insn, tmp1717
	movq	%rax, %rdi	# tmp1717,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8092	#,
	.loc 1 39404 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8092	#,
	movq	-8(%rbp), %rax	# insn, tmp1718
	movq	%rax, %rdi	# tmp1718,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8093	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8093	#,
.L8092:
	.loc 1 39406 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1719
	movq	%rax, %rdi	# tmp1719,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8094	#,
	.loc 1 39406 0 is_stmt 0 discriminator 1
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8095	#,
.L8094:
	.loc 1 39408 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8095:
	.loc 1 39412 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8093:
	.loc 1 39417 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8084:
	.loc 1 39423 0
	movq	-8(%rbp), %rax	# insn, tmp1720
	movq	%rax, %rdi	# tmp1720,
	call	extract_constrain_insn_cached	#
	.loc 1 39424 0
	movq	-8(%rbp), %rax	# insn, tmp1721
	movq	%rax, %rdi	# tmp1721,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8096	#,
	.loc 1 39424 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6369
	cmpl	$1, %eax	#, which_alternative.6369
	jne	.L8096	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8096	#,
	movq	-8(%rbp), %rax	# insn, tmp1722
	movq	%rax, %rdi	# tmp1722,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8097	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6370
	cmpl	$1, %eax	#, which_alternative.6370
	jne	.L8097	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8097	#,
.L8096:
	.loc 1 39426 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1723
	movq	%rax, %rdi	# tmp1723,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8098	#,
	.loc 1 39426 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6371
	cmpl	$1, %eax	#, which_alternative.6371
	jne	.L8098	#,
	movq	recog_data+16(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	const_int_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8099	#,
.L8098:
	.loc 1 39428 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8099:
	.loc 1 39432 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8097:
	.loc 1 39437 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8083:
	.loc 1 39442 0
	movq	-8(%rbp), %rax	# insn, tmp1724
	movq	%rax, %rdi	# tmp1724,
	call	extract_constrain_insn_cached	#
	.loc 1 39443 0
	movq	-8(%rbp), %rax	# insn, tmp1725
	movq	%rax, %rdi	# tmp1725,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8100	#,
	.loc 1 39443 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6372
	testl	%eax, %eax	# which_alternative.6372
	je	.L8101	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6373
	cmpl	$1, %eax	#, which_alternative.6373
	jne	.L8100	#,
.L8101:
	.loc 1 39443 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1726
	movq	%rax, %rdi	# tmp1726,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8102	#,
	.loc 1 39443 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6374
	testl	%eax, %eax	# which_alternative.6374
	je	.L8100	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6375
	cmpl	$1, %eax	#, which_alternative.6375
	jne	.L8102	#,
.L8100:
	.loc 1 39445 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1727
	movq	%rax, %rdi	# tmp1727,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8103	#,
	.loc 1 39445 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6376
	testl	%eax, %eax	# which_alternative.6376
	je	.L8104	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6377
	cmpl	$1, %eax	#, which_alternative.6377
	je	.L8104	#,
.L8103:
	.loc 1 39447 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8104:
	.loc 1 39451 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8102:
	.loc 1 39456 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8082:
	.loc 1 39460 0
	movq	-8(%rbp), %rax	# insn, tmp1728
	movq	%rax, %rdi	# tmp1728,
	call	extract_constrain_insn_cached	#
	.loc 1 39461 0
	movq	-8(%rbp), %rax	# insn, tmp1729
	movq	%rax, %rdi	# tmp1729,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8105	#,
	.loc 1 39461 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6378
	testl	%eax, %eax	# which_alternative.6378
	je	.L8106	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6379
	cmpl	$1, %eax	#, which_alternative.6379
	je	.L8106	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6380
	cmpl	$2, %eax	#, which_alternative.6380
	jne	.L8105	#,
.L8106:
	.loc 1 39461 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1730
	movq	%rax, %rdi	# tmp1730,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8107	#,
	.loc 1 39461 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6381
	testl	%eax, %eax	# which_alternative.6381
	je	.L8105	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6382
	cmpl	$1, %eax	#, which_alternative.6382
	je	.L8105	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6383
	cmpl	$2, %eax	#, which_alternative.6383
	jne	.L8107	#,
.L8105:
	.loc 1 39463 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1731
	movq	%rax, %rdi	# tmp1731,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8108	#,
	.loc 1 39463 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6384
	testl	%eax, %eax	# which_alternative.6384
	je	.L8109	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6385
	cmpl	$1, %eax	#, which_alternative.6385
	je	.L8109	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6386
	cmpl	$2, %eax	#, which_alternative.6386
	je	.L8109	#,
.L8108:
	.loc 1 39465 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8109:
	.loc 1 39469 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8107:
	.loc 1 39474 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8081:
	.loc 1 39478 0
	movq	-8(%rbp), %rax	# insn, tmp1732
	movq	%rax, %rdi	# tmp1732,
	call	extract_constrain_insn_cached	#
	.loc 1 39479 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6387
	testl	%eax, %eax	# which_alternative.6387
	je	.L8110	#,
	.loc 1 39479 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6388
	cmpl	$2, %eax	#, which_alternative.6388
	jne	.L8111	#,
.L8110:
	.loc 1 39479 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6389
	testl	%eax, %eax	# which_alternative.6389
	je	.L8111	#,
	.loc 1 39479 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6390
	cmpl	$2, %eax	#, which_alternative.6390
	jne	.L8112	#,
.L8111:
	.loc 1 39481 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6391
	testl	%eax, %eax	# which_alternative.6391
	je	.L8113	#,
	.loc 1 39481 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6392
	cmpl	$2, %eax	#, which_alternative.6392
	je	.L8113	#,
	.loc 1 39483 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8113:
	.loc 1 39487 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8112:
	.loc 1 39492 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8080:
	.loc 1 39497 0
	movq	-8(%rbp), %rax	# insn, tmp1733
	movq	%rax, %rdi	# tmp1733,
	call	extract_constrain_insn_cached	#
	.loc 1 39498 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6393
	cmpl	$1, %eax	#, which_alternative.6393
	jne	.L8114	#,
	.loc 1 39500 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8114:
	.loc 1 39504 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8079:
	.loc 1 39508 0
	movq	-8(%rbp), %rax	# insn, tmp1734
	movq	%rax, %rdi	# tmp1734,
	call	extract_constrain_insn_cached	#
	.loc 1 39509 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6394
	cmpl	$1, %eax	#, which_alternative.6394
	je	.L8115	#,
	.loc 1 39509 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6395
	cmpl	$3, %eax	#, which_alternative.6395
	je	.L8115	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6396
	cmpl	$1, %eax	#, which_alternative.6396
	je	.L8116	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6397
	cmpl	$3, %eax	#, which_alternative.6397
	je	.L8116	#,
.L8115:
	.loc 1 39511 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6398
	cmpl	$1, %eax	#, which_alternative.6398
	je	.L8117	#,
	.loc 1 39511 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6399
	cmpl	$3, %eax	#, which_alternative.6399
	jne	.L8118	#,
.L8117:
	.loc 1 39513 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8118:
	.loc 1 39517 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8116:
	.loc 1 39522 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8078:
	.loc 1 39526 0
	movq	-8(%rbp), %rax	# insn, tmp1735
	movq	%rax, %rdi	# tmp1735,
	call	extract_constrain_insn_cached	#
	.loc 1 39527 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6400
	cmpl	$1, %eax	#, which_alternative.6400
	jne	.L8119	#,
	.loc 1 39527 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1736
	movq	%rax, %rdi	# tmp1736,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8119	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6401
	cmpl	$1, %eax	#, which_alternative.6401
	jne	.L8120	#,
	movq	-8(%rbp), %rax	# insn, tmp1737
	movq	%rax, %rdi	# tmp1737,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8120	#,
.L8119:
	.loc 1 39529 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6402
	cmpl	$1, %eax	#, which_alternative.6402
	jne	.L8121	#,
	.loc 1 39529 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1738
	movq	%rax, %rdi	# tmp1738,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L8122	#,
.L8121:
	.loc 1 39531 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8122:
	.loc 1 39535 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8120:
	.loc 1 39540 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8077:
	.loc 1 39545 0
	movq	-8(%rbp), %rax	# insn, tmp1739
	movq	%rax, %rdi	# tmp1739,
	call	extract_constrain_insn_cached	#
	.loc 1 39546 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6403
	testl	%eax, %eax	# which_alternative.6403
	jne	.L8123	#,
	.loc 1 39548 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8123:
	.loc 1 39552 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8076:
	.loc 1 39556 0
	movq	-8(%rbp), %rax	# insn, tmp1740
	movq	%rax, %rdi	# tmp1740,
	call	extract_constrain_insn_cached	#
	.loc 1 39557 0
	movq	-8(%rbp), %rax	# insn, tmp1741
	movq	%rax, %rdi	# tmp1741,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8124	#,
	.loc 1 39557 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6404
	cmpl	$3, %eax	#, which_alternative.6404
	je	.L8125	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6405
	cmpl	$4, %eax	#, which_alternative.6405
	jne	.L8124	#,
.L8125:
	.loc 1 39557 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1742
	movq	%rax, %rdi	# tmp1742,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8126	#,
	.loc 1 39557 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6406
	testl	%eax, %eax	# which_alternative.6406
	je	.L8126	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6407
	cmpl	$1, %eax	#, which_alternative.6407
	je	.L8126	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6408
	cmpl	$2, %eax	#, which_alternative.6408
	je	.L8126	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6409
	cmpl	$3, %eax	#, which_alternative.6409
	je	.L8124	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6410
	cmpl	$4, %eax	#, which_alternative.6410
	je	.L8124	#,
.L8126:
	.loc 1 39557 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6411
	testl	%eax, %eax	# which_alternative.6411
	je	.L8124	#,
	.loc 1 39557 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6412
	cmpl	$1, %eax	#, which_alternative.6412
	je	.L8124	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6413
	cmpl	$2, %eax	#, which_alternative.6413
	jne	.L8127	#,
.L8124:
	.loc 1 39559 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1743
	movq	%rax, %rdi	# tmp1743,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8128	#,
	.loc 1 39559 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6414
	testl	%eax, %eax	# which_alternative.6414
	je	.L8128	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6415
	cmpl	$1, %eax	#, which_alternative.6415
	je	.L8128	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6416
	cmpl	$2, %eax	#, which_alternative.6416
	je	.L8128	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6417
	cmpl	$3, %eax	#, which_alternative.6417
	je	.L8129	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6418
	cmpl	$4, %eax	#, which_alternative.6418
	je	.L8129	#,
.L8128:
	.loc 1 39561 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8129:
	.loc 1 39565 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8127:
	.loc 1 39570 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8075:
	.loc 1 39575 0
	movq	-8(%rbp), %rax	# insn, tmp1744
	movq	%rax, %rdi	# tmp1744,
	call	extract_constrain_insn_cached	#
	.loc 1 39576 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6419
	cmpl	$1, %eax	#, which_alternative.6419
	jne	.L8130	#,
	.loc 1 39576 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8130	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6420
	cmpl	$1, %eax	#, which_alternative.6420
	jne	.L8131	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8131	#,
.L8130:
	.loc 1 39578 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6421
	cmpl	$1, %eax	#, which_alternative.6421
	jne	.L8132	#,
	.loc 1 39578 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8133	#,
.L8132:
	.loc 1 39580 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8133:
	.loc 1 39584 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8131:
	.loc 1 39589 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8074:
	.loc 1 39593 0
	movq	-8(%rbp), %rax	# insn, tmp1745
	movq	%rax, %rdi	# tmp1745,
	call	extract_constrain_insn_cached	#
	.loc 1 39594 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6422
	testl	%eax, %eax	# which_alternative.6422
	jne	.L8134	#,
	.loc 1 39594 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8134	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6423
	testl	%eax, %eax	# which_alternative.6423
	jne	.L8135	#,
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	jne	.L8135	#,
.L8134:
	.loc 1 39596 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6424
	testl	%eax, %eax	# which_alternative.6424
	jne	.L8136	#,
	.loc 1 39596 0 is_stmt 0 discriminator 1
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8137	#,
.L8136:
	.loc 1 39598 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8137:
	.loc 1 39602 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8135:
	.loc 1 39607 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8073:
	.loc 1 39611 0
	movq	-8(%rbp), %rax	# insn, tmp1746
	movq	%rax, %rdi	# tmp1746,
	call	extract_constrain_insn_cached	#
	.loc 1 39612 0
	movq	-8(%rbp), %rax	# insn, tmp1747
	movq	%rax, %rdi	# tmp1747,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8138	#,
	.loc 1 39612 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8138	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6425
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6426
	movl	%eax, %ecx	# ix86_cpu.6427, tmp1913
	sarl	%cl, %edx	# tmp1913, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	jne	.L8138	#,
	movq	-8(%rbp), %rax	# insn, tmp1748
	movq	%rax, %rdi	# tmp1748,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8139	#,
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8139	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6428
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6429
	movl	%eax, %ecx	# ix86_cpu.6430, tmp1915
	sarl	%cl, %edx	# tmp1915, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	jne	.L8139	#,
.L8138:
	.loc 1 39614 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1749
	movq	%rax, %rdi	# tmp1749,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8140	#,
	.loc 1 39614 0 is_stmt 0 discriminator 1
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$2, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	q_regs_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8140	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6431
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6432
	movl	%eax, %ecx	# ix86_cpu.6433, tmp1917
	sarl	%cl, %edx	# tmp1917, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8141	#,
.L8140:
	.loc 1 39616 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8141:
	.loc 1 39620 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8139:
	.loc 1 39625 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8072:
	.loc 1 39629 0
	movq	-8(%rbp), %rax	# insn, tmp1750
	movq	%rax, %rdi	# tmp1750,
	call	extract_constrain_insn_cached	#
	.loc 1 39630 0
	movq	-8(%rbp), %rax	# insn, tmp1751
	movq	%rax, %rdi	# tmp1751,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8142	#,
	.loc 1 39630 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6434
	cmpl	$3, %eax	#, which_alternative.6434
	jne	.L8143	#,
	.loc 1 39630 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6435
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6436
	movl	%eax, %ecx	# ix86_cpu.6437, tmp1919
	sarl	%cl, %edx	# tmp1919, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8144	#,
	.loc 1 39630 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6438
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6439
	movl	%eax, %ecx	# ix86_cpu.6440, tmp1921
	sarl	%cl, %edx	# tmp1921, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8144	#,
.L8143:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6441
	cmpl	$3, %eax	#, which_alternative.6441
	jne	.L8145	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6442
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6443
	movl	%eax, %ecx	# ix86_cpu.6444, tmp1923
	sarl	%cl, %edx	# tmp1923, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8142	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6445
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6446
	movl	%eax, %ecx	# ix86_cpu.6447, tmp1925
	sarl	%cl, %edx	# tmp1925, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8142	#,
.L8145:
	.loc 1 39630 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6448
	cmpl	$3, %eax	#, which_alternative.6448
	je	.L8142	#,
	.loc 1 39630 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6449
	cmpl	$5, %eax	#, which_alternative.6449
	je	.L8142	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6450
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6451
	movl	%eax, %ecx	# ix86_cpu.6452, tmp1927
	sarl	%cl, %edx	# tmp1927, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8144	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6453
	cmpl	$2, %eax	#, which_alternative.6453
	je	.L8142	#,
.L8144:
	.loc 1 39630 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1752
	movq	%rax, %rdi	# tmp1752,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8146	#,
	.loc 1 39630 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6454
	cmpl	$3, %eax	#, which_alternative.6454
	jne	.L8147	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6455
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6456
	movl	%eax, %ecx	# ix86_cpu.6457, tmp1929
	sarl	%cl, %edx	# tmp1929, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8142	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6458
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6459
	movl	%eax, %ecx	# ix86_cpu.6460, tmp1931
	sarl	%cl, %edx	# tmp1931, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8142	#,
.L8147:
	.loc 1 39630 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6461
	cmpl	$3, %eax	#, which_alternative.6461
	jne	.L8148	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6462
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6463
	movl	%eax, %ecx	# ix86_cpu.6464, tmp1933
	sarl	%cl, %edx	# tmp1933, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8146	#,
	.loc 1 39630 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6465
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6466
	movl	%eax, %ecx	# ix86_cpu.6467, tmp1935
	sarl	%cl, %edx	# tmp1935, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8146	#,
.L8148:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6468
	cmpl	$3, %eax	#, which_alternative.6468
	je	.L8146	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6469
	cmpl	$5, %eax	#, which_alternative.6469
	je	.L8146	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6470
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6471
	movl	%eax, %ecx	# ix86_cpu.6472, tmp1937
	sarl	%cl, %edx	# tmp1937, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8142	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6473
	cmpl	$2, %eax	#, which_alternative.6473
	je	.L8146	#,
.L8142:
	.loc 1 39632 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1753
	movq	%rax, %rdi	# tmp1753,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8149	#,
	.loc 1 39632 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6474
	cmpl	$3, %eax	#, which_alternative.6474
	jne	.L8150	#,
	.loc 1 39632 0 discriminator 2
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6475
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6476
	movl	%eax, %ecx	# ix86_cpu.6477, tmp1939
	sarl	%cl, %edx	# tmp1939, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8151	#,
	.loc 1 39632 0 discriminator 1
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6478
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6479
	movl	%eax, %ecx	# ix86_cpu.6480, tmp1941
	sarl	%cl, %edx	# tmp1941, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8151	#,
.L8150:
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6481
	cmpl	$3, %eax	#, which_alternative.6481
	jne	.L8152	#,
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.6482
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6483
	movl	%eax, %ecx	# ix86_cpu.6484, tmp1943
	sarl	%cl, %edx	# tmp1943, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8149	#,
	movl	x86_qimode_math(%rip), %edx	# x86_qimode_math, x86_qimode_math.6485
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6486
	movl	%eax, %ecx	# ix86_cpu.6487, tmp1945
	sarl	%cl, %edx	# tmp1945, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8149	#,
.L8152:
	.loc 1 39632 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6488
	cmpl	$3, %eax	#, which_alternative.6488
	je	.L8149	#,
	.loc 1 39632 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6489
	cmpl	$5, %eax	#, which_alternative.6489
	je	.L8149	#,
	movl	x86_movx(%rip), %edx	# x86_movx, x86_movx.6490
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.6491
	movl	%eax, %ecx	# ix86_cpu.6492, tmp1947
	sarl	%cl, %edx	# tmp1947, D.57556
	movl	%edx, %eax	# D.57556, D.57556
	andl	$1, %eax	#, D.57556
	testl	%eax, %eax	# D.57556
	je	.L8151	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6493
	cmpl	$2, %eax	#, which_alternative.6493
	jne	.L8151	#,
.L8149:
	.loc 1 39634 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8151:
	.loc 1 39638 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8146:
	.loc 1 39643 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8071:
	.loc 1 39650 0
	movq	-8(%rbp), %rax	# insn, tmp1754
	movq	%rax, %rdi	# tmp1754,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8153	#,
	.loc 1 39650 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1755
	movq	%rax, %rdi	# tmp1755,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57560
	jne	.L8153	#,
	movq	-8(%rbp), %rax	# insn, tmp1756
	movq	%rax, %rdi	# tmp1756,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8154	#,
	movq	-8(%rbp), %rax	# insn, tmp1757
	movq	%rax, %rdi	# tmp1757,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57560
	jne	.L8154	#,
.L8153:
	.loc 1 39652 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1758
	movq	%rax, %rdi	# tmp1758,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8155	#,
	.loc 1 39652 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1759
	movq	%rax, %rdi	# tmp1759,
	call	get_attr_type	#
	cmpl	$7, %eax	#, D.57560
	je	.L8156	#,
.L8155:
	.loc 1 39654 0 is_stmt 1
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8156:
	.loc 1 39658 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8154:
	.loc 1 39663 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8070:
	.loc 1 39685 0
	movq	-8(%rbp), %rax	# insn, tmp1760
	movq	%rax, %rdi	# tmp1760,
	call	get_attr_pent_pair	#
	cmpl	$3, %eax	#, D.57561
	jne	.L8157	#,
	.loc 1 39687 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8157:
	.loc 1 39691 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8069:
	.loc 1 39738 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8068:
	.loc 1 39744 0
	movq	-8(%rbp), %rax	# insn, tmp1761
	movq	%rax, %rdi	# tmp1761,
	call	extract_insn_cached	#
	.loc 1 39745 0
	movq	recog_data(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8158	#,
	.loc 1 39747 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8158:
	.loc 1 39751 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8067:
	.loc 1 39762 0
	movq	-8(%rbp), %rax	# insn, tmp1762
	movq	%rax, %rdi	# tmp1762,
	call	extract_insn_cached	#
	.loc 1 39763 0
	movq	recog_data+8(%rip), %rax	# recog_data.operand, D.57557
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	memory_operand	#
	testl	%eax, %eax	# D.57556
	je	.L8159	#,
	.loc 1 39765 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8159:
	.loc 1 39769 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8066:
	.loc 1 39897 0
	movq	-8(%rbp), %rax	# insn, tmp1763
	movq	%rax, %rdi	# tmp1763,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	jne	.L8160	#,
	.loc 1 39899 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L8160:
	.loc 1 39903 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8064:
	.loc 1 39907 0
	movq	-8(%rbp), %rax	# insn, tmp1764
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57557
	movzwl	(%rax), %eax	# _1651->code, D.57562
	cmpw	$40, %ax	#, D.57562
	je	.L8063	#,
	.loc 1 39908 0
	movq	-8(%rbp), %rax	# insn, tmp1765
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57557
	movq	%rax, %rdi	# D.57557,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57556
	jns	.L8063	#,
	.loc 1 39909 0
	movq	-8(%rbp), %rax	# insn, tmp1766
	movl	$__FUNCTION__.26956, %ecx	#,
	movl	$39909, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1766,
	call	_fatal_insn_not_found	#
.L8063:
	.loc 1 39911 0
	movl	$1, %eax	#, D.57556
	jmp	.L7860	#
.L7859:
	.loc 1 39916 0
	movq	-8(%rbp), %rax	# insn, tmp1767
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, D.57556
	testl	%eax, %eax	# D.57556
	js	.L8161	#,
	.loc 1 39916 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp1768
	movl	40(%rax), %eax	# insn_752->fld[4].rtint, iftmp.6494
	jmp	.L8162	#
.L8161:
	.loc 1 39916 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1769
	movq	%rax, %rdi	# tmp1769,
	call	recog_memoized_1	#
.L8162:
	.loc 1 39916 0 discriminator 3
	addl	$1, %eax	#, tmp1770
	cmpl	$623, %eax	#, tmp1770
	ja	.L8163	#,
	movl	%eax, %eax	# tmp1770, tmp1771
	movq	.L8165(,%rax,8), %rax	#, tmp1772
	jmp	*%rax	# tmp1772
	.section	.rodata
	.align 8
	.align 4
.L8165:
	.quad	.L8164
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8163
	.quad	.L8166
	.quad	.L8166
	.quad	.L8163
	.quad	.L8163
	.quad	.L8166
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8166
	.quad	.L8167
	.quad	.L8163
	.quad	.L8166
	.quad	.L8167
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8168
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8169
	.quad	.L8169
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8169
	.quad	.L8169
	.quad	.L8169
	.quad	.L8169
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8170
	.quad	.L8163
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8167
	.quad	.L8167
	.quad	.L8171
	.quad	.L8166
	.quad	.L8163
	.quad	.L8167
	.quad	.L8166
	.quad	.L8167
	.quad	.L8166
	.quad	.L8167
	.quad	.L8166
	.quad	.L8167
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8163
	.quad	.L8163
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8163
	.quad	.L8163
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8163
	.quad	.L8163
	.quad	.L8167
	.quad	.L8167
	.quad	.L8163
	.quad	.L8167
	.quad	.L8167
	.quad	.L8163
	.quad	.L8167
	.quad	.L8167
	.quad	.L8163
	.quad	.L8167
	.quad	.L8167
	.quad	.L8163
	.quad	.L8167
	.quad	.L8167
	.quad	.L8167
	.quad	.L8167
	.quad	.L8167
	.quad	.L8167
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8166
	.quad	.L8167
	.quad	.L8163
	.quad	.L8166
	.quad	.L8167
	.quad	.L8163
	.quad	.L8166
	.quad	.L8166
	.quad	.L8172
	.quad	.L8173
	.quad	.L8163
	.quad	.L8172
	.quad	.L8172
	.quad	.L8174
	.quad	.L8175
	.quad	.L8163
	.quad	.L8174
	.quad	.L8174
	.quad	.L8174
	.quad	.L8174
	.quad	.L8176
	.quad	.L8177
	.quad	.L8176
	.quad	.L8177
	.quad	.L8176
	.quad	.L8177
	.quad	.L8176
	.quad	.L8177
	.quad	.L8176
	.quad	.L8177
	.quad	.L8176
	.quad	.L8177
	.quad	.L8176
	.quad	.L8177
	.quad	.L8167
	.quad	.L8163
	.quad	.L8166
	.quad	.L8167
	.quad	.L8163
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8166
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8163
	.quad	.L8170
	.quad	.L8170
	.quad	.L8170
	.quad	.L8166
	.quad	.L8166
	.text
.L8177:
	.loc 1 39925 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp1773
	movq	%rax, %rdi	# tmp1773,
	call	extract_insn_cached	#
	.loc 1 39926 0
	movq	-8(%rbp), %rax	# insn, tmp1774
	movq	%rax, %rdi	# tmp1774,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57560
	je	.L8178	#,
	.loc 1 39926 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57557
	movl	$18, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	mult_operator	#
	testl	%eax, %eax	# D.57556
	jne	.L8178	#,
	.loc 1 39928 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8178:
	.loc 1 39932 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8176:
	.loc 1 39942 0
	movq	-8(%rbp), %rax	# insn, tmp1775
	movq	%rax, %rdi	# tmp1775,
	call	extract_insn_cached	#
	.loc 1 39943 0
	movq	-8(%rbp), %rax	# insn, tmp1776
	movq	%rax, %rdi	# tmp1776,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57560
	je	.L8179	#,
	.loc 1 39943 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57557
	movl	$17, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	mult_operator	#
	testl	%eax, %eax	# D.57556
	jne	.L8179	#,
	.loc 1 39945 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8179:
	.loc 1 39949 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8175:
	.loc 1 39953 0
	movq	-8(%rbp), %rax	# insn, tmp1777
	movq	%rax, %rdi	# tmp1777,
	call	extract_constrain_insn_cached	#
	.loc 1 39954 0
	movq	-8(%rbp), %rax	# insn, tmp1778
	movq	%rax, %rdi	# tmp1778,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57560
	je	.L8180	#,
	.loc 1 39954 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6495
	cmpl	$2, %eax	#, which_alternative.6495
	je	.L8181	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57557
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	mult_operator	#
	testl	%eax, %eax	# D.57556
	jne	.L8180	#,
.L8181:
	.loc 1 39956 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8180:
	.loc 1 39960 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8174:
	.loc 1 39968 0
	movq	-8(%rbp), %rax	# insn, tmp1779
	movq	%rax, %rdi	# tmp1779,
	call	extract_insn_cached	#
	.loc 1 39969 0
	movq	-8(%rbp), %rax	# insn, tmp1780
	movq	%rax, %rdi	# tmp1780,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57560
	je	.L8182	#,
	.loc 1 39969 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57557
	movl	$16, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	mult_operator	#
	testl	%eax, %eax	# D.57556
	jne	.L8182	#,
	.loc 1 39971 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8182:
	.loc 1 39975 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8173:
	.loc 1 39979 0
	movq	-8(%rbp), %rax	# insn, tmp1781
	movq	%rax, %rdi	# tmp1781,
	call	extract_constrain_insn_cached	#
	.loc 1 39980 0
	movq	-8(%rbp), %rax	# insn, tmp1782
	movq	%rax, %rdi	# tmp1782,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57560
	je	.L8183	#,
	.loc 1 39980 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6496
	cmpl	$2, %eax	#, which_alternative.6496
	je	.L8184	#,
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57557
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	mult_operator	#
	testl	%eax, %eax	# D.57556
	jne	.L8183	#,
.L8184:
	.loc 1 39982 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8183:
	.loc 1 39986 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8172:
	.loc 1 39992 0
	movq	-8(%rbp), %rax	# insn, tmp1783
	movq	%rax, %rdi	# tmp1783,
	call	extract_insn_cached	#
	.loc 1 39993 0
	movq	-8(%rbp), %rax	# insn, tmp1784
	movq	%rax, %rdi	# tmp1784,
	call	get_attr_type	#
	cmpl	$22, %eax	#, D.57560
	je	.L8185	#,
	.loc 1 39993 0 is_stmt 0 discriminator 1
	movq	recog_data+24(%rip), %rax	# recog_data.operand, D.57557
	movl	$15, %esi	#,
	movq	%rax, %rdi	# D.57557,
	call	mult_operator	#
	testl	%eax, %eax	# D.57556
	jne	.L8185	#,
	.loc 1 39995 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8185:
	.loc 1 39999 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8171:
	.loc 1 40003 0
	movq	-8(%rbp), %rax	# insn, tmp1785
	movq	%rax, %rdi	# tmp1785,
	call	extract_constrain_insn_cached	#
	.loc 1 40004 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6497
	testl	%eax, %eax	# which_alternative.6497
	jne	.L8186	#,
	.loc 1 40006 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8186:
	.loc 1 40010 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8170:
	.loc 1 40017 0
	movq	-8(%rbp), %rax	# insn, tmp1786
	movq	%rax, %rdi	# tmp1786,
	call	extract_constrain_insn_cached	#
	.loc 1 40018 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6498
	testl	%eax, %eax	# which_alternative.6498
	je	.L8187	#,
	.loc 1 40018 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6499
	cmpl	$1, %eax	#, which_alternative.6499
	je	.L8187	#,
	.loc 1 40020 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8187:
	.loc 1 40024 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8169:
	.loc 1 40033 0
	movq	-8(%rbp), %rax	# insn, tmp1787
	movq	%rax, %rdi	# tmp1787,
	call	extract_constrain_insn_cached	#
	.loc 1 40034 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6500
	testl	%eax, %eax	# which_alternative.6500
	je	.L8188	#,
	.loc 1 40034 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6501
	cmpl	$1, %eax	#, which_alternative.6501
	je	.L8188	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6502
	cmpl	$2, %eax	#, which_alternative.6502
	je	.L8188	#,
	.loc 1 40036 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8188:
	.loc 1 40040 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8168:
	.loc 1 40044 0
	movq	-8(%rbp), %rax	# insn, tmp1788
	movq	%rax, %rdi	# tmp1788,
	call	extract_constrain_insn_cached	#
	.loc 1 40045 0
	movq	-8(%rbp), %rax	# insn, tmp1789
	movq	%rax, %rdi	# tmp1789,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8189	#,
	.loc 1 40045 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6503
	cmpl	$3, %eax	#, which_alternative.6503
	je	.L8190	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6504
	cmpl	$4, %eax	#, which_alternative.6504
	jne	.L8189	#,
.L8190:
	.loc 1 40045 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp1790
	movq	%rax, %rdi	# tmp1790,
	call	get_attr_imm_disp	#
	cmpl	$1, %eax	#, D.57558
	je	.L8191	#,
	.loc 1 40045 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6505
	testl	%eax, %eax	# which_alternative.6505
	je	.L8191	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6506
	cmpl	$1, %eax	#, which_alternative.6506
	je	.L8191	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6507
	cmpl	$2, %eax	#, which_alternative.6507
	je	.L8191	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6508
	cmpl	$3, %eax	#, which_alternative.6508
	je	.L8189	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6509
	cmpl	$4, %eax	#, which_alternative.6509
	je	.L8189	#,
.L8191:
	.loc 1 40045 0 discriminator 2
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6510
	testl	%eax, %eax	# which_alternative.6510
	je	.L8189	#,
	.loc 1 40045 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6511
	cmpl	$1, %eax	#, which_alternative.6511
	je	.L8189	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6512
	cmpl	$2, %eax	#, which_alternative.6512
	jne	.L8192	#,
.L8189:
	.loc 1 40047 0 is_stmt 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6513
	testl	%eax, %eax	# which_alternative.6513
	je	.L8193	#,
	.loc 1 40047 0 is_stmt 0 discriminator 1
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6514
	cmpl	$1, %eax	#, which_alternative.6514
	je	.L8193	#,
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6515
	cmpl	$2, %eax	#, which_alternative.6515
	je	.L8193	#,
	.loc 1 40049 0 is_stmt 1
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8193:
	.loc 1 40053 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8192:
	.loc 1 40058 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8167:
	.loc 1 40087 0
	movq	-8(%rbp), %rax	# insn, tmp1791
	movq	%rax, %rdi	# tmp1791,
	call	extract_constrain_insn_cached	#
	.loc 1 40088 0
	movl	which_alternative(%rip), %eax	# which_alternative, which_alternative.6516
	testl	%eax, %eax	# which_alternative.6516
	je	.L8194	#,
	.loc 1 40090 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L8194:
	.loc 1 40094 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8166:
	.loc 1 40166 0
	movl	$0, %eax	#, D.57556
	jmp	.L7860	#
.L8164:
	.loc 1 40169 0
	movq	-8(%rbp), %rax	# insn, tmp1792
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57557
	movzwl	(%rax), %eax	# _1725->code, D.57562
	cmpw	$40, %ax	#, D.57562
	je	.L8163	#,
	.loc 1 40170 0
	movq	-8(%rbp), %rax	# insn, tmp1793
	movq	32(%rax), %rax	# insn_752->fld[3].rtx, D.57557
	movq	%rax, %rdi	# D.57557,
	call	asm_noperands	#
	testl	%eax, %eax	# D.57556
	jns	.L8163	#,
	.loc 1 40171 0
	movq	-8(%rbp), %rax	# insn, tmp1794
	movl	$__FUNCTION__.26956, %ecx	#,
	movl	$40171, %edx	#,
	movl	$.LC0, %esi	#,
	movq	%rax, %rdi	# tmp1794,
	call	_fatal_insn_not_found	#
.L8163:
	.loc 1 40173 0
	movl	$2, %eax	#, D.57556
	jmp	.L7860	#
.L7845:
	.loc 1 40178 0
	movl	$__FUNCTION__.26956, %edx	#,
	movl	$40178, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L7860:
	.loc 1 40180 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE90:
	.size	pent_np_unit_conflict_cost, .-pent_np_unit_conflict_cost
	.globl	function_units
	.section	.rodata
.LC1:
	.string	"pent_np"
.LC2:
	.string	"pent_mul"
.LC3:
	.string	"fpu"
.LC4:
	.string	"pent_u"
.LC5:
	.string	"pent_uv"
.LC6:
	.string	"pent_v"
.LC7:
	.string	"ppro_p0"
.LC8:
	.string	"ppro_p01"
.LC9:
	.string	"ppro_p2"
.LC10:
	.string	"ppro_p34"
.LC11:
	.string	"k6_alux"
.LC12:
	.string	"k6_alu"
.LC13:
	.string	"k6_branch"
.LC14:
	.string	"k6_load"
.LC15:
	.string	"k6_store"
.LC16:
	.string	"k6_fpu"
.LC17:
	.string	"athlon_vectordec"
.LC18:
	.string	"athlon_directdec"
.LC19:
	.string	"athlon_ieu"
.LC20:
	.string	"athlon_muldiv"
.LC21:
	.string	"athlon_fp"
.LC22:
	.string	"athlon_fp_mul"
.LC23:
	.string	"athlon_fp_add"
.LC24:
	.string	"athlon_fp_muladd"
.LC25:
	.string	"athlon_fp_store"
.LC26:
	.string	"athlon_load"
	.align 32
	.type	function_units, @object
	.size	function_units, 1872
function_units:
# name:
	.quad	.LC1
# bitmask:
	.long	1
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	46
# ready_cost_function:
	.zero	4
	.quad	pent_np_unit_ready_cost
# conflict_cost_function:
	.quad	pent_np_unit_conflict_cost
# max_blockage:
	.long	46
# blockage_range_function:
	.zero	4
	.quad	pent_np_unit_blockage_range
# blockage_function:
	.quad	pent_np_unit_blockage
# name:
	.quad	.LC2
# bitmask:
	.long	2
# multiplicity:
	.long	1
# simultaneity:
	.long	1
# default_cost:
	.long	0
# max_issue_delay:
	.long	70
# ready_cost_function:
	.zero	4
	.quad	pent_mul_unit_ready_cost
# conflict_cost_function:
	.quad	pent_mul_unit_conflict_cost
# max_blockage:
	.long	70
# blockage_range_function:
	.zero	4
	.quad	pent_mul_unit_blockage_range
# blockage_function:
	.quad	pent_mul_unit_blockage
# name:
	.quad	.LC3
# bitmask:
	.long	4
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	68
# ready_cost_function:
	.zero	4
	.quad	fpu_unit_ready_cost
# conflict_cost_function:
	.quad	fpu_unit_conflict_cost
# max_blockage:
	.long	68
# blockage_range_function:
	.zero	4
	.quad	fpu_unit_blockage_range
# blockage_function:
	.quad	fpu_unit_blockage
# name:
	.quad	.LC4
# bitmask:
	.long	8
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	3
# ready_cost_function:
	.zero	4
	.quad	pent_u_unit_ready_cost
# conflict_cost_function:
	.quad	pent_u_unit_conflict_cost
# max_blockage:
	.long	3
# blockage_range_function:
	.zero	4
	.quad	pent_u_unit_blockage_range
# blockage_function:
	.quad	pent_u_unit_blockage
# name:
	.quad	.LC5
# bitmask:
	.long	16
# multiplicity:
	.long	2
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	3
# ready_cost_function:
	.zero	4
	.quad	pent_uv_unit_ready_cost
# conflict_cost_function:
	.quad	pent_uv_unit_conflict_cost
# max_blockage:
	.long	3
# blockage_range_function:
	.zero	4
	.quad	pent_uv_unit_blockage_range
# blockage_function:
	.quad	pent_uv_unit_blockage
# name:
	.quad	.LC6
# bitmask:
	.long	32
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	pent_v_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC7
# bitmask:
	.long	64
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	17
# ready_cost_function:
	.zero	4
	.quad	ppro_p0_unit_ready_cost
# conflict_cost_function:
	.quad	ppro_p0_unit_conflict_cost
# max_blockage:
	.long	17
# blockage_range_function:
	.zero	4
	.quad	ppro_p0_unit_blockage_range
# blockage_function:
	.quad	ppro_p0_unit_blockage
# name:
	.quad	.LC8
# bitmask:
	.long	128
# multiplicity:
	.long	2
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	ppro_p01_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC9
# bitmask:
	.long	256
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	ppro_p2_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC10
# bitmask:
	.long	512
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	ppro_p34_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC11
# bitmask:
	.long	1024
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	17
# ready_cost_function:
	.zero	4
	.quad	k6_alux_unit_ready_cost
# conflict_cost_function:
	.quad	k6_alux_unit_conflict_cost
# max_blockage:
	.long	17
# blockage_range_function:
	.zero	4
	.quad	k6_alux_unit_blockage_range
# blockage_function:
	.quad	k6_alux_unit_blockage
# name:
	.quad	.LC12
# bitmask:
	.long	2048
# multiplicity:
	.long	2
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	17
# ready_cost_function:
	.zero	4
	.quad	k6_alu_unit_ready_cost
# conflict_cost_function:
	.quad	k6_alu_unit_conflict_cost
# max_blockage:
	.long	17
# blockage_range_function:
	.zero	4
	.quad	k6_alu_unit_blockage_range
# blockage_function:
	.quad	k6_alu_unit_blockage
# name:
	.quad	.LC13
# bitmask:
	.long	4096
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	k6_branch_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC14
# bitmask:
	.long	8192
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	10
# ready_cost_function:
	.zero	4
	.quad	k6_load_unit_ready_cost
# conflict_cost_function:
	.quad	k6_load_unit_conflict_cost
# max_blockage:
	.long	10
# blockage_range_function:
	.zero	4
	.quad	k6_load_unit_blockage_range
# blockage_function:
	.quad	k6_load_unit_blockage
# name:
	.quad	.LC15
# bitmask:
	.long	16384
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	10
# ready_cost_function:
	.zero	4
	.quad	k6_store_unit_ready_cost
# conflict_cost_function:
	.quad	k6_store_unit_conflict_cost
# max_blockage:
	.long	10
# blockage_range_function:
	.zero	4
	.quad	k6_store_unit_blockage_range
# blockage_function:
	.quad	k6_store_unit_blockage
# name:
	.quad	.LC16
# bitmask:
	.long	32768
# multiplicity:
	.long	1
# simultaneity:
	.long	1
# default_cost:
	.long	0
# max_issue_delay:
	.long	56
# ready_cost_function:
	.zero	4
	.quad	k6_fpu_unit_ready_cost
# conflict_cost_function:
	.quad	k6_fpu_unit_conflict_cost
# max_blockage:
	.long	56
# blockage_range_function:
	.zero	4
	.quad	k6_fpu_unit_blockage_range
# blockage_function:
	.quad	k6_fpu_unit_blockage
# name:
	.quad	.LC17
# bitmask:
	.long	65536
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	athlon_vectordec_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	athlon_vectordec_unit_blockage_range
# blockage_function:
	.quad	athlon_vectordec_unit_blockage
# name:
	.quad	.LC18
# bitmask:
	.long	131072
# multiplicity:
	.long	3
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	athlon_directdec_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC19
# bitmask:
	.long	262144
# multiplicity:
	.long	3
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	15
# ready_cost_function:
	.zero	4
	.quad	athlon_ieu_unit_ready_cost
# conflict_cost_function:
	.quad	athlon_ieu_unit_conflict_cost
# max_blockage:
	.long	15
# blockage_range_function:
	.zero	4
	.quad	athlon_ieu_unit_blockage_range
# blockage_function:
	.quad	athlon_ieu_unit_blockage
# name:
	.quad	.LC20
# bitmask:
	.long	524288
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	0
# max_issue_delay:
	.long	42
# ready_cost_function:
	.zero	4
	.quad	athlon_muldiv_unit_ready_cost
# conflict_cost_function:
	.quad	athlon_muldiv_unit_conflict_cost
# max_blockage:
	.long	42
# blockage_range_function:
	.zero	4
	.quad	athlon_muldiv_unit_blockage_range
# blockage_function:
	.quad	athlon_muldiv_unit_blockage
# name:
	.quad	.LC21
# bitmask:
	.long	1048576
# multiplicity:
	.long	3
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	athlon_fp_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC22
# bitmask:
	.long	2097152
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	athlon_fp_mul_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC23
# bitmask:
	.long	4194304
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	athlon_fp_add_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC24
# bitmask:
	.long	8388608
# multiplicity:
	.long	2
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	athlon_fp_muladd_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC25
# bitmask:
	.long	16777216
# multiplicity:
	.long	1
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	athlon_fp_store_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
# name:
	.quad	.LC26
# bitmask:
	.long	33554432
# multiplicity:
	.long	2
# simultaneity:
	.long	0
# default_cost:
	.long	1
# max_issue_delay:
	.long	1
# ready_cost_function:
	.zero	4
	.quad	athlon_load_unit_ready_cost
# conflict_cost_function:
	.quad	0
# max_blockage:
	.long	1
# blockage_range_function:
	.zero	4
	.quad	0
# blockage_function:
	.quad	0
	.globl	length_unit_log
	.bss
	.align 4
	.type	length_unit_log, @object
	.size	length_unit_log, 4
length_unit_log:
	.zero	4
	.section	.rodata
	.align 16
	.type	__FUNCTION__.10001, @object
	.size	__FUNCTION__.10001, 20
__FUNCTION__.10001:
	.string	"insn_current_length"
	.align 16
	.type	__FUNCTION__.10009, @object
	.size	__FUNCTION__.10009, 23
__FUNCTION__.10009:
	.string	"insn_variable_length_p"
	.align 16
	.type	__FUNCTION__.10179, @object
	.size	__FUNCTION__.10179, 20
__FUNCTION__.10179:
	.string	"insn_default_length"
	.align 16
	.type	__FUNCTION__.10687, @object
	.size	__FUNCTION__.10687, 18
__FUNCTION__.10687:
	.string	"result_ready_cost"
	.align 16
	.type	__FUNCTION__.10814, @object
	.size	__FUNCTION__.10814, 28
__FUNCTION__.10814:
	.string	"athlon_load_unit_ready_cost"
	.align 32
	.type	__FUNCTION__.10822, @object
	.size	__FUNCTION__.10822, 32
__FUNCTION__.10822:
	.string	"athlon_fp_store_unit_ready_cost"
	.align 32
	.type	__FUNCTION__.10830, @object
	.size	__FUNCTION__.10830, 33
__FUNCTION__.10830:
	.string	"athlon_fp_muladd_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.10838, @object
	.size	__FUNCTION__.10838, 30
__FUNCTION__.10838:
	.string	"athlon_fp_add_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.10846, @object
	.size	__FUNCTION__.10846, 30
__FUNCTION__.10846:
	.string	"athlon_fp_mul_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.10964, @object
	.size	__FUNCTION__.10964, 26
__FUNCTION__.10964:
	.string	"athlon_fp_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.10989, @object
	.size	__FUNCTION__.10989, 30
__FUNCTION__.10989:
	.string	"athlon_muldiv_unit_ready_cost"
	.align 32
	.type	__FUNCTION__.10997, @object
	.size	__FUNCTION__.10997, 34
__FUNCTION__.10997:
	.string	"athlon_muldiv_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.11394, @object
	.size	__FUNCTION__.11394, 27
__FUNCTION__.11394:
	.string	"athlon_ieu_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.11402, @object
	.size	__FUNCTION__.11402, 31
__FUNCTION__.11402:
	.string	"athlon_ieu_unit_blockage_range"
	.align 32
	.type	__FUNCTION__.11410, @object
	.size	__FUNCTION__.11410, 33
__FUNCTION__.11410:
	.string	"athlon_directdec_unit_ready_cost"
	.align 32
	.type	__FUNCTION__.11418, @object
	.size	__FUNCTION__.11418, 33
__FUNCTION__.11418:
	.string	"athlon_vectordec_unit_ready_cost"
	.align 32
	.type	__FUNCTION__.11474, @object
	.size	__FUNCTION__.11474, 37
__FUNCTION__.11474:
	.string	"athlon_vectordec_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.11762, @object
	.size	__FUNCTION__.11762, 23
__FUNCTION__.11762:
	.string	"k6_fpu_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.11770, @object
	.size	__FUNCTION__.11770, 27
__FUNCTION__.11770:
	.string	"k6_fpu_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.11867, @object
	.size	__FUNCTION__.11867, 25
__FUNCTION__.11867:
	.string	"k6_store_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.12091, @object
	.size	__FUNCTION__.12091, 29
__FUNCTION__.12091:
	.string	"k6_store_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.12208, @object
	.size	__FUNCTION__.12208, 24
__FUNCTION__.12208:
	.string	"k6_load_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.12398, @object
	.size	__FUNCTION__.12398, 28
__FUNCTION__.12398:
	.string	"k6_load_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.12406, @object
	.size	__FUNCTION__.12406, 26
__FUNCTION__.12406:
	.string	"k6_branch_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.12724, @object
	.size	__FUNCTION__.12724, 23
__FUNCTION__.12724:
	.string	"k6_alu_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.12732, @object
	.size	__FUNCTION__.12732, 27
__FUNCTION__.12732:
	.string	"k6_alu_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.13033, @object
	.size	__FUNCTION__.13033, 24
__FUNCTION__.13033:
	.string	"k6_alux_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.13041, @object
	.size	__FUNCTION__.13041, 28
__FUNCTION__.13041:
	.string	"k6_alux_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.13049, @object
	.size	__FUNCTION__.13049, 25
__FUNCTION__.13049:
	.string	"ppro_p34_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.13057, @object
	.size	__FUNCTION__.13057, 24
__FUNCTION__.13057:
	.string	"ppro_p2_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.13065, @object
	.size	__FUNCTION__.13065, 25
__FUNCTION__.13065:
	.string	"ppro_p01_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.13313, @object
	.size	__FUNCTION__.13313, 24
__FUNCTION__.13313:
	.string	"ppro_p0_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.13321, @object
	.size	__FUNCTION__.13321, 28
__FUNCTION__.13321:
	.string	"ppro_p0_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.13329, @object
	.size	__FUNCTION__.13329, 23
__FUNCTION__.13329:
	.string	"pent_v_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.13632, @object
	.size	__FUNCTION__.13632, 24
__FUNCTION__.13632:
	.string	"pent_uv_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.13640, @object
	.size	__FUNCTION__.13640, 28
__FUNCTION__.13640:
	.string	"pent_uv_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.13759, @object
	.size	__FUNCTION__.13759, 23
__FUNCTION__.13759:
	.string	"pent_u_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.13767, @object
	.size	__FUNCTION__.13767, 27
__FUNCTION__.13767:
	.string	"pent_u_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.13927, @object
	.size	__FUNCTION__.13927, 20
__FUNCTION__.13927:
	.string	"fpu_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.13935, @object
	.size	__FUNCTION__.13935, 24
__FUNCTION__.13935:
	.string	"fpu_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.13990, @object
	.size	__FUNCTION__.13990, 25
__FUNCTION__.13990:
	.string	"pent_mul_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.13998, @object
	.size	__FUNCTION__.13998, 29
__FUNCTION__.13998:
	.string	"pent_mul_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.14421, @object
	.size	__FUNCTION__.14421, 24
__FUNCTION__.14421:
	.string	"pent_np_unit_ready_cost"
	.align 16
	.type	__FUNCTION__.14854, @object
	.size	__FUNCTION__.14854, 28
__FUNCTION__.14854:
	.string	"pent_np_unit_blockage_range"
	.align 16
	.type	__FUNCTION__.15010, @object
	.size	__FUNCTION__.15010, 24
__FUNCTION__.15010:
	.string	"get_attr_athlon_fpunits"
	.align 16
	.type	__FUNCTION__.15068, @object
	.size	__FUNCTION__.15068, 23
__FUNCTION__.15068:
	.string	"get_attr_athlon_decode"
	.align 16
	.type	__FUNCTION__.15295, @object
	.size	__FUNCTION__.15295, 20
__FUNCTION__.15295:
	.string	"get_attr_fp_int_src"
	.align 16
	.type	__FUNCTION__.15596, @object
	.size	__FUNCTION__.15596, 18
__FUNCTION__.15596:
	.string	"get_attr_imm_disp"
	.type	__FUNCTION__.15849, @object
	.size	__FUNCTION__.15849, 14
__FUNCTION__.15849:
	.string	"get_attr_i387"
	.align 16
	.type	__FUNCTION__.15910, @object
	.size	__FUNCTION__.15910, 24
__FUNCTION__.15910:
	.string	"get_attr_length_address"
	.align 16
	.type	__FUNCTION__.16060, @object
	.size	__FUNCTION__.16060, 26
__FUNCTION__.16060:
	.string	"get_attr_length_immediate"
	.align 16
	.type	__FUNCTION__.16789, @object
	.size	__FUNCTION__.16789, 16
__FUNCTION__.16789:
	.string	"get_attr_memory"
	.type	__FUNCTION__.17249, @object
	.size	__FUNCTION__.17249, 15
__FUNCTION__.17249:
	.string	"get_attr_modrm"
	.type	__FUNCTION__.17766, @object
	.size	__FUNCTION__.17766, 14
__FUNCTION__.17766:
	.string	"get_attr_mode"
	.align 16
	.type	__FUNCTION__.17833, @object
	.size	__FUNCTION__.17833, 19
__FUNCTION__.17833:
	.string	"get_attr_ppro_uops"
	.align 16
	.type	__FUNCTION__.18407, @object
	.size	__FUNCTION__.18407, 19
__FUNCTION__.18407:
	.string	"get_attr_pent_pair"
	.align 16
	.type	__FUNCTION__.18740, @object
	.size	__FUNCTION__.18740, 21
__FUNCTION__.18740:
	.string	"get_attr_pent_prefix"
	.align 16
	.type	__FUNCTION__.19013, @object
	.size	__FUNCTION__.19013, 19
__FUNCTION__.19013:
	.string	"get_attr_prefix_0f"
	.align 16
	.type	__FUNCTION__.19037, @object
	.size	__FUNCTION__.19037, 20
__FUNCTION__.19037:
	.string	"get_attr_prefix_rep"
	.align 16
	.type	__FUNCTION__.19099, @object
	.size	__FUNCTION__.19099, 23
__FUNCTION__.19099:
	.string	"get_attr_prefix_data16"
	.type	__FUNCTION__.19721, @object
	.size	__FUNCTION__.19721, 14
__FUNCTION__.19721:
	.string	"get_attr_type"
	.align 16
	.type	__FUNCTION__.19858, @object
	.size	__FUNCTION__.19858, 28
__FUNCTION__.19858:
	.string	"athlon_muldiv_unit_blockage"
	.align 32
	.type	__FUNCTION__.19891, @object
	.size	__FUNCTION__.19891, 33
__FUNCTION__.19891:
	.string	"athlon_muldiv_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.20296, @object
	.size	__FUNCTION__.20296, 25
__FUNCTION__.20296:
	.string	"athlon_ieu_unit_blockage"
	.align 16
	.type	__FUNCTION__.20703, @object
	.size	__FUNCTION__.20703, 30
__FUNCTION__.20703:
	.string	"athlon_ieu_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.20769, @object
	.size	__FUNCTION__.20769, 31
__FUNCTION__.20769:
	.string	"athlon_vectordec_unit_blockage"
	.align 16
	.type	__FUNCTION__.21308, @object
	.size	__FUNCTION__.21308, 21
__FUNCTION__.21308:
	.string	"k6_fpu_unit_blockage"
	.align 16
	.type	__FUNCTION__.21412, @object
	.size	__FUNCTION__.21412, 26
__FUNCTION__.21412:
	.string	"k6_fpu_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.21483, @object
	.size	__FUNCTION__.21483, 23
__FUNCTION__.21483:
	.string	"k6_store_unit_blockage"
	.align 16
	.type	__FUNCTION__.21554, @object
	.size	__FUNCTION__.21554, 28
__FUNCTION__.21554:
	.string	"k6_store_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.21692, @object
	.size	__FUNCTION__.21692, 22
__FUNCTION__.21692:
	.string	"k6_load_unit_blockage"
	.align 16
	.type	__FUNCTION__.21999, @object
	.size	__FUNCTION__.21999, 27
__FUNCTION__.21999:
	.string	"k6_load_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.22495, @object
	.size	__FUNCTION__.22495, 21
__FUNCTION__.22495:
	.string	"k6_alu_unit_blockage"
	.align 16
	.type	__FUNCTION__.22823, @object
	.size	__FUNCTION__.22823, 26
__FUNCTION__.22823:
	.string	"k6_alu_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.23127, @object
	.size	__FUNCTION__.23127, 22
__FUNCTION__.23127:
	.string	"k6_alux_unit_blockage"
	.align 16
	.type	__FUNCTION__.23431, @object
	.size	__FUNCTION__.23431, 27
__FUNCTION__.23431:
	.string	"k6_alux_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.23689, @object
	.size	__FUNCTION__.23689, 22
__FUNCTION__.23689:
	.string	"ppro_p0_unit_blockage"
	.align 16
	.type	__FUNCTION__.23952, @object
	.size	__FUNCTION__.23952, 27
__FUNCTION__.23952:
	.string	"ppro_p0_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.24175, @object
	.size	__FUNCTION__.24175, 22
__FUNCTION__.24175:
	.string	"pent_uv_unit_blockage"
	.align 16
	.type	__FUNCTION__.24392, @object
	.size	__FUNCTION__.24392, 27
__FUNCTION__.24392:
	.string	"pent_uv_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.24510, @object
	.size	__FUNCTION__.24510, 21
__FUNCTION__.24510:
	.string	"pent_u_unit_blockage"
	.align 16
	.type	__FUNCTION__.24628, @object
	.size	__FUNCTION__.24628, 26
__FUNCTION__.24628:
	.string	"pent_u_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.24780, @object
	.size	__FUNCTION__.24780, 18
__FUNCTION__.24780:
	.string	"fpu_unit_blockage"
	.align 16
	.type	__FUNCTION__.24941, @object
	.size	__FUNCTION__.24941, 23
__FUNCTION__.24941:
	.string	"fpu_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.25014, @object
	.size	__FUNCTION__.25014, 23
__FUNCTION__.25014:
	.string	"pent_mul_unit_blockage"
	.align 16
	.type	__FUNCTION__.25079, @object
	.size	__FUNCTION__.25079, 28
__FUNCTION__.25079:
	.string	"pent_mul_unit_conflict_cost"
	.align 16
	.type	__FUNCTION__.25501, @object
	.size	__FUNCTION__.25501, 22
__FUNCTION__.25501:
	.string	"pent_np_unit_blockage"
	.align 16
	.type	__FUNCTION__.26956, @object
	.size	__FUNCTION__.26956, 27
__FUNCTION__.26956:
	.string	"pent_np_unit_conflict_cost"
	.text
.Letext0:
	.file 2 "rtl.h"
	.file 3 "config.h"
	.file 4 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
	.file 5 "i386.h"
	.file 6 "machmode.h"
	.file 7 "recog.h"
	.file 8 "varray.h"
	.file 9 "regs.h"
	.file 10 "insn-attr.h"
	.file 11 "insn-addr.h"
	.file 12 "flags.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x333d
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF559
	.byte	0x1
	.long	.LASF560
	.long	.LASF561
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.string	"rtx"
	.byte	0x3
	.byte	0x8
	.long	0x38
	.uleb128 0x3
	.byte	0x8
	.long	0x3e
	.uleb128 0x4
	.long	.LASF11
	.byte	0x10
	.byte	0x2
	.byte	0x7a
	.long	0xed
	.uleb128 0x5
	.long	.LASF0
	.byte	0x2
	.byte	0x7d
	.long	0x18a
	.byte	0x4
	.byte	0x10
	.byte	0x10
	.byte	0
	.uleb128 0x5
	.long	.LASF1
	.byte	0x2
	.byte	0x80
	.long	0x18a
	.byte	0x4
	.byte	0x8
	.byte	0x8
	.byte	0
	.uleb128 0x5
	.long	.LASF2
	.byte	0x2
	.byte	0x87
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0
	.uleb128 0x5
	.long	.LASF3
	.byte	0x2
	.byte	0x8a
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0
	.uleb128 0x5
	.long	.LASF4
	.byte	0x2
	.byte	0x95
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0
	.uleb128 0x5
	.long	.LASF5
	.byte	0x2
	.byte	0x9d
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0
	.uleb128 0x5
	.long	.LASF6
	.byte	0x2
	.byte	0xaf
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0
	.uleb128 0x5
	.long	.LASF7
	.byte	0x2
	.byte	0xb6
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0
	.uleb128 0x5
	.long	.LASF8
	.byte	0x2
	.byte	0xbb
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0
	.uleb128 0x5
	.long	.LASF9
	.byte	0x2
	.byte	0xc4
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0
	.byte	0
	.uleb128 0x6
	.string	"fld"
	.byte	0x2
	.byte	0xc9
	.long	0x991
	.byte	0x8
	.byte	0
	.uleb128 0x7
	.long	.LASF10
	.byte	0x3
	.byte	0xa
	.long	0xf8
	.uleb128 0x3
	.byte	0x8
	.long	0xfe
	.uleb128 0x4
	.long	.LASF12
	.byte	0x10
	.byte	0x2
	.byte	0xde
	.long	0x123
	.uleb128 0x8
	.long	.LASF13
	.byte	0x2
	.byte	0xdf
	.long	0x13e
	.byte	0
	.uleb128 0x8
	.long	.LASF14
	.byte	0x2
	.byte	0xe0
	.long	0x9a1
	.byte	0x8
	.byte	0
	.uleb128 0x7
	.long	.LASF15
	.byte	0x3
	.byte	0xc
	.long	0x12e
	.uleb128 0x3
	.byte	0x8
	.long	0x134
	.uleb128 0x9
	.long	.LASF562
	.uleb128 0xa
	.long	0x13e
	.uleb128 0xb
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0xc
	.byte	0x8
	.byte	0x7
	.long	.LASF16
	.uleb128 0xd
	.long	.LASF36
	.byte	0x4
	.byte	0x5
	.value	0x18b
	.long	0x18a
	.uleb128 0xe
	.long	.LASF17
	.sleb128 0
	.uleb128 0xe
	.long	.LASF18
	.sleb128 1
	.uleb128 0xe
	.long	.LASF19
	.sleb128 2
	.uleb128 0xe
	.long	.LASF20
	.sleb128 3
	.uleb128 0xe
	.long	.LASF21
	.sleb128 4
	.uleb128 0xe
	.long	.LASF22
	.sleb128 5
	.uleb128 0xe
	.long	.LASF23
	.sleb128 6
	.uleb128 0xe
	.long	.LASF24
	.sleb128 7
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.byte	0x7
	.long	.LASF25
	.uleb128 0xf
	.byte	0x8
	.uleb128 0xc
	.byte	0x8
	.byte	0x5
	.long	.LASF26
	.uleb128 0x7
	.long	.LASF27
	.byte	0x4
	.byte	0xd4
	.long	0x1a5
	.uleb128 0xc
	.byte	0x8
	.byte	0x7
	.long	.LASF28
	.uleb128 0xc
	.byte	0x1
	.byte	0x8
	.long	.LASF29
	.uleb128 0xc
	.byte	0x2
	.byte	0x7
	.long	.LASF30
	.uleb128 0xc
	.byte	0x1
	.byte	0x6
	.long	.LASF31
	.uleb128 0xc
	.byte	0x2
	.byte	0x5
	.long	.LASF32
	.uleb128 0x3
	.byte	0x8
	.long	0x1ce
	.uleb128 0xc
	.byte	0x1
	.byte	0x6
	.long	.LASF33
	.uleb128 0x10
	.long	0x1ce
	.long	0x1e5
	.uleb128 0x11
	.long	0x145
	.byte	0x3
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x1f5
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x205
	.uleb128 0x11
	.long	0x145
	.byte	0x13
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x20b
	.uleb128 0xa
	.long	0x1ce
	.uleb128 0xc
	.byte	0x8
	.byte	0x7
	.long	.LASF34
	.uleb128 0xc
	.byte	0x8
	.byte	0x5
	.long	.LASF35
	.uleb128 0x10
	.long	0x1ce
	.long	0x22e
	.uleb128 0x11
	.long	0x145
	.byte	0x1f
	.byte	0
	.uleb128 0x12
	.long	.LASF37
	.byte	0x4
	.byte	0x6
	.byte	0x1d
	.long	0x3a3
	.uleb128 0xe
	.long	.LASF38
	.sleb128 0
	.uleb128 0xe
	.long	.LASF39
	.sleb128 1
	.uleb128 0xe
	.long	.LASF40
	.sleb128 2
	.uleb128 0xe
	.long	.LASF41
	.sleb128 3
	.uleb128 0xe
	.long	.LASF42
	.sleb128 4
	.uleb128 0xe
	.long	.LASF43
	.sleb128 5
	.uleb128 0xe
	.long	.LASF44
	.sleb128 6
	.uleb128 0xe
	.long	.LASF45
	.sleb128 7
	.uleb128 0xe
	.long	.LASF46
	.sleb128 8
	.uleb128 0xe
	.long	.LASF47
	.sleb128 9
	.uleb128 0xe
	.long	.LASF48
	.sleb128 10
	.uleb128 0xe
	.long	.LASF49
	.sleb128 11
	.uleb128 0xe
	.long	.LASF50
	.sleb128 12
	.uleb128 0xe
	.long	.LASF51
	.sleb128 13
	.uleb128 0xe
	.long	.LASF52
	.sleb128 14
	.uleb128 0xe
	.long	.LASF53
	.sleb128 15
	.uleb128 0xe
	.long	.LASF54
	.sleb128 16
	.uleb128 0xe
	.long	.LASF55
	.sleb128 17
	.uleb128 0xe
	.long	.LASF56
	.sleb128 18
	.uleb128 0xe
	.long	.LASF57
	.sleb128 19
	.uleb128 0xe
	.long	.LASF58
	.sleb128 20
	.uleb128 0xe
	.long	.LASF59
	.sleb128 21
	.uleb128 0xe
	.long	.LASF60
	.sleb128 22
	.uleb128 0xe
	.long	.LASF61
	.sleb128 23
	.uleb128 0xe
	.long	.LASF62
	.sleb128 24
	.uleb128 0xe
	.long	.LASF63
	.sleb128 25
	.uleb128 0xe
	.long	.LASF64
	.sleb128 26
	.uleb128 0xe
	.long	.LASF65
	.sleb128 27
	.uleb128 0xe
	.long	.LASF66
	.sleb128 28
	.uleb128 0xe
	.long	.LASF67
	.sleb128 29
	.uleb128 0xe
	.long	.LASF68
	.sleb128 30
	.uleb128 0xe
	.long	.LASF69
	.sleb128 31
	.uleb128 0xe
	.long	.LASF70
	.sleb128 32
	.uleb128 0xe
	.long	.LASF71
	.sleb128 33
	.uleb128 0xe
	.long	.LASF72
	.sleb128 34
	.uleb128 0xe
	.long	.LASF73
	.sleb128 35
	.uleb128 0xe
	.long	.LASF74
	.sleb128 36
	.uleb128 0xe
	.long	.LASF75
	.sleb128 37
	.uleb128 0xe
	.long	.LASF76
	.sleb128 38
	.uleb128 0xe
	.long	.LASF77
	.sleb128 39
	.uleb128 0xe
	.long	.LASF78
	.sleb128 40
	.uleb128 0xe
	.long	.LASF79
	.sleb128 41
	.uleb128 0xe
	.long	.LASF80
	.sleb128 42
	.uleb128 0xe
	.long	.LASF81
	.sleb128 43
	.uleb128 0xe
	.long	.LASF82
	.sleb128 44
	.uleb128 0xe
	.long	.LASF83
	.sleb128 45
	.uleb128 0xe
	.long	.LASF84
	.sleb128 46
	.uleb128 0xe
	.long	.LASF85
	.sleb128 47
	.uleb128 0xe
	.long	.LASF86
	.sleb128 48
	.uleb128 0xe
	.long	.LASF87
	.sleb128 49
	.uleb128 0xe
	.long	.LASF88
	.sleb128 50
	.uleb128 0xe
	.long	.LASF89
	.sleb128 51
	.uleb128 0xe
	.long	.LASF90
	.sleb128 52
	.uleb128 0xe
	.long	.LASF91
	.sleb128 53
	.uleb128 0xe
	.long	.LASF92
	.sleb128 54
	.uleb128 0xe
	.long	.LASF93
	.sleb128 55
	.uleb128 0xe
	.long	.LASF94
	.sleb128 56
	.uleb128 0xe
	.long	.LASF95
	.sleb128 57
	.uleb128 0xe
	.long	.LASF96
	.sleb128 58
	.uleb128 0xe
	.long	.LASF97
	.sleb128 59
	.byte	0
	.uleb128 0x12
	.long	.LASF98
	.byte	0x4
	.byte	0x6
	.byte	0x2c
	.long	0x3ec
	.uleb128 0xe
	.long	.LASF99
	.sleb128 0
	.uleb128 0xe
	.long	.LASF100
	.sleb128 1
	.uleb128 0xe
	.long	.LASF101
	.sleb128 2
	.uleb128 0xe
	.long	.LASF102
	.sleb128 3
	.uleb128 0xe
	.long	.LASF103
	.sleb128 4
	.uleb128 0xe
	.long	.LASF104
	.sleb128 5
	.uleb128 0xe
	.long	.LASF105
	.sleb128 6
	.uleb128 0xe
	.long	.LASF106
	.sleb128 7
	.uleb128 0xe
	.long	.LASF107
	.sleb128 8
	.uleb128 0xe
	.long	.LASF108
	.sleb128 9
	.byte	0
	.uleb128 0x12
	.long	.LASF109
	.byte	0x4
	.byte	0x2
	.byte	0x29
	.long	0x7e8
	.uleb128 0xe
	.long	.LASF110
	.sleb128 0
	.uleb128 0x13
	.string	"NIL"
	.sleb128 1
	.uleb128 0xe
	.long	.LASF111
	.sleb128 2
	.uleb128 0xe
	.long	.LASF112
	.sleb128 3
	.uleb128 0xe
	.long	.LASF113
	.sleb128 4
	.uleb128 0xe
	.long	.LASF114
	.sleb128 5
	.uleb128 0xe
	.long	.LASF115
	.sleb128 6
	.uleb128 0xe
	.long	.LASF116
	.sleb128 7
	.uleb128 0xe
	.long	.LASF117
	.sleb128 8
	.uleb128 0xe
	.long	.LASF118
	.sleb128 9
	.uleb128 0xe
	.long	.LASF119
	.sleb128 10
	.uleb128 0xe
	.long	.LASF120
	.sleb128 11
	.uleb128 0xe
	.long	.LASF121
	.sleb128 12
	.uleb128 0xe
	.long	.LASF122
	.sleb128 13
	.uleb128 0xe
	.long	.LASF123
	.sleb128 14
	.uleb128 0xe
	.long	.LASF124
	.sleb128 15
	.uleb128 0xe
	.long	.LASF125
	.sleb128 16
	.uleb128 0xe
	.long	.LASF126
	.sleb128 17
	.uleb128 0xe
	.long	.LASF127
	.sleb128 18
	.uleb128 0xe
	.long	.LASF128
	.sleb128 19
	.uleb128 0xe
	.long	.LASF129
	.sleb128 20
	.uleb128 0xe
	.long	.LASF130
	.sleb128 21
	.uleb128 0xe
	.long	.LASF131
	.sleb128 22
	.uleb128 0xe
	.long	.LASF132
	.sleb128 23
	.uleb128 0xe
	.long	.LASF133
	.sleb128 24
	.uleb128 0xe
	.long	.LASF134
	.sleb128 25
	.uleb128 0xe
	.long	.LASF135
	.sleb128 26
	.uleb128 0xe
	.long	.LASF136
	.sleb128 27
	.uleb128 0xe
	.long	.LASF137
	.sleb128 28
	.uleb128 0xe
	.long	.LASF138
	.sleb128 29
	.uleb128 0xe
	.long	.LASF139
	.sleb128 30
	.uleb128 0xe
	.long	.LASF140
	.sleb128 31
	.uleb128 0xe
	.long	.LASF141
	.sleb128 32
	.uleb128 0xe
	.long	.LASF142
	.sleb128 33
	.uleb128 0xe
	.long	.LASF143
	.sleb128 34
	.uleb128 0xe
	.long	.LASF144
	.sleb128 35
	.uleb128 0xe
	.long	.LASF145
	.sleb128 36
	.uleb128 0xe
	.long	.LASF146
	.sleb128 37
	.uleb128 0xe
	.long	.LASF147
	.sleb128 38
	.uleb128 0xe
	.long	.LASF148
	.sleb128 39
	.uleb128 0xe
	.long	.LASF149
	.sleb128 40
	.uleb128 0xe
	.long	.LASF150
	.sleb128 41
	.uleb128 0xe
	.long	.LASF151
	.sleb128 42
	.uleb128 0xe
	.long	.LASF152
	.sleb128 43
	.uleb128 0xe
	.long	.LASF153
	.sleb128 44
	.uleb128 0xe
	.long	.LASF154
	.sleb128 45
	.uleb128 0xe
	.long	.LASF155
	.sleb128 46
	.uleb128 0x13
	.string	"SET"
	.sleb128 47
	.uleb128 0x13
	.string	"USE"
	.sleb128 48
	.uleb128 0xe
	.long	.LASF156
	.sleb128 49
	.uleb128 0xe
	.long	.LASF157
	.sleb128 50
	.uleb128 0xe
	.long	.LASF158
	.sleb128 51
	.uleb128 0xe
	.long	.LASF159
	.sleb128 52
	.uleb128 0xe
	.long	.LASF160
	.sleb128 53
	.uleb128 0xe
	.long	.LASF161
	.sleb128 54
	.uleb128 0xe
	.long	.LASF162
	.sleb128 55
	.uleb128 0xe
	.long	.LASF163
	.sleb128 56
	.uleb128 0xe
	.long	.LASF164
	.sleb128 57
	.uleb128 0xe
	.long	.LASF165
	.sleb128 58
	.uleb128 0x13
	.string	"PC"
	.sleb128 59
	.uleb128 0xe
	.long	.LASF166
	.sleb128 60
	.uleb128 0x13
	.string	"REG"
	.sleb128 61
	.uleb128 0xe
	.long	.LASF167
	.sleb128 62
	.uleb128 0xe
	.long	.LASF168
	.sleb128 63
	.uleb128 0xe
	.long	.LASF169
	.sleb128 64
	.uleb128 0xe
	.long	.LASF170
	.sleb128 65
	.uleb128 0x13
	.string	"MEM"
	.sleb128 66
	.uleb128 0xe
	.long	.LASF171
	.sleb128 67
	.uleb128 0xe
	.long	.LASF172
	.sleb128 68
	.uleb128 0x13
	.string	"CC0"
	.sleb128 69
	.uleb128 0xe
	.long	.LASF173
	.sleb128 70
	.uleb128 0xe
	.long	.LASF174
	.sleb128 71
	.uleb128 0xe
	.long	.LASF175
	.sleb128 72
	.uleb128 0xe
	.long	.LASF176
	.sleb128 73
	.uleb128 0xe
	.long	.LASF177
	.sleb128 74
	.uleb128 0xe
	.long	.LASF178
	.sleb128 75
	.uleb128 0xe
	.long	.LASF179
	.sleb128 76
	.uleb128 0x13
	.string	"NEG"
	.sleb128 77
	.uleb128 0xe
	.long	.LASF180
	.sleb128 78
	.uleb128 0x13
	.string	"DIV"
	.sleb128 79
	.uleb128 0x13
	.string	"MOD"
	.sleb128 80
	.uleb128 0xe
	.long	.LASF181
	.sleb128 81
	.uleb128 0xe
	.long	.LASF182
	.sleb128 82
	.uleb128 0x13
	.string	"AND"
	.sleb128 83
	.uleb128 0x13
	.string	"IOR"
	.sleb128 84
	.uleb128 0x13
	.string	"XOR"
	.sleb128 85
	.uleb128 0x13
	.string	"NOT"
	.sleb128 86
	.uleb128 0xe
	.long	.LASF183
	.sleb128 87
	.uleb128 0xe
	.long	.LASF184
	.sleb128 88
	.uleb128 0xe
	.long	.LASF185
	.sleb128 89
	.uleb128 0xe
	.long	.LASF186
	.sleb128 90
	.uleb128 0xe
	.long	.LASF187
	.sleb128 91
	.uleb128 0xe
	.long	.LASF188
	.sleb128 92
	.uleb128 0xe
	.long	.LASF189
	.sleb128 93
	.uleb128 0xe
	.long	.LASF190
	.sleb128 94
	.uleb128 0xe
	.long	.LASF191
	.sleb128 95
	.uleb128 0xe
	.long	.LASF192
	.sleb128 96
	.uleb128 0xe
	.long	.LASF193
	.sleb128 97
	.uleb128 0xe
	.long	.LASF194
	.sleb128 98
	.uleb128 0xe
	.long	.LASF195
	.sleb128 99
	.uleb128 0xe
	.long	.LASF196
	.sleb128 100
	.uleb128 0xe
	.long	.LASF197
	.sleb128 101
	.uleb128 0x13
	.string	"NE"
	.sleb128 102
	.uleb128 0x13
	.string	"EQ"
	.sleb128 103
	.uleb128 0x13
	.string	"GE"
	.sleb128 104
	.uleb128 0x13
	.string	"GT"
	.sleb128 105
	.uleb128 0x13
	.string	"LE"
	.sleb128 106
	.uleb128 0x13
	.string	"LT"
	.sleb128 107
	.uleb128 0x13
	.string	"GEU"
	.sleb128 108
	.uleb128 0x13
	.string	"GTU"
	.sleb128 109
	.uleb128 0x13
	.string	"LEU"
	.sleb128 110
	.uleb128 0x13
	.string	"LTU"
	.sleb128 111
	.uleb128 0xe
	.long	.LASF198
	.sleb128 112
	.uleb128 0xe
	.long	.LASF199
	.sleb128 113
	.uleb128 0xe
	.long	.LASF200
	.sleb128 114
	.uleb128 0xe
	.long	.LASF201
	.sleb128 115
	.uleb128 0xe
	.long	.LASF202
	.sleb128 116
	.uleb128 0xe
	.long	.LASF203
	.sleb128 117
	.uleb128 0xe
	.long	.LASF204
	.sleb128 118
	.uleb128 0xe
	.long	.LASF205
	.sleb128 119
	.uleb128 0xe
	.long	.LASF206
	.sleb128 120
	.uleb128 0xe
	.long	.LASF207
	.sleb128 121
	.uleb128 0xe
	.long	.LASF208
	.sleb128 122
	.uleb128 0xe
	.long	.LASF209
	.sleb128 123
	.uleb128 0xe
	.long	.LASF210
	.sleb128 124
	.uleb128 0xe
	.long	.LASF211
	.sleb128 125
	.uleb128 0x13
	.string	"FIX"
	.sleb128 126
	.uleb128 0xe
	.long	.LASF212
	.sleb128 127
	.uleb128 0xe
	.long	.LASF213
	.sleb128 128
	.uleb128 0x13
	.string	"ABS"
	.sleb128 129
	.uleb128 0xe
	.long	.LASF214
	.sleb128 130
	.uleb128 0x13
	.string	"FFS"
	.sleb128 131
	.uleb128 0xe
	.long	.LASF215
	.sleb128 132
	.uleb128 0xe
	.long	.LASF216
	.sleb128 133
	.uleb128 0xe
	.long	.LASF217
	.sleb128 134
	.uleb128 0xe
	.long	.LASF218
	.sleb128 135
	.uleb128 0xe
	.long	.LASF219
	.sleb128 136
	.uleb128 0xe
	.long	.LASF220
	.sleb128 137
	.uleb128 0xe
	.long	.LASF221
	.sleb128 138
	.uleb128 0xe
	.long	.LASF222
	.sleb128 139
	.uleb128 0xe
	.long	.LASF223
	.sleb128 140
	.uleb128 0xe
	.long	.LASF224
	.sleb128 141
	.uleb128 0xe
	.long	.LASF225
	.sleb128 142
	.uleb128 0xe
	.long	.LASF226
	.sleb128 143
	.uleb128 0xe
	.long	.LASF227
	.sleb128 144
	.uleb128 0xe
	.long	.LASF228
	.sleb128 145
	.uleb128 0xe
	.long	.LASF229
	.sleb128 146
	.uleb128 0xe
	.long	.LASF230
	.sleb128 147
	.uleb128 0xe
	.long	.LASF231
	.sleb128 148
	.uleb128 0xe
	.long	.LASF232
	.sleb128 149
	.uleb128 0xe
	.long	.LASF233
	.sleb128 150
	.uleb128 0xe
	.long	.LASF234
	.sleb128 151
	.uleb128 0x13
	.string	"PHI"
	.sleb128 152
	.uleb128 0xe
	.long	.LASF235
	.sleb128 153
	.byte	0
	.uleb128 0x14
	.byte	0x4
	.byte	0x2
	.byte	0x44
	.long	0x869
	.uleb128 0x5
	.long	.LASF236
	.byte	0x2
	.byte	0x47
	.long	0x18a
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0
	.uleb128 0x5
	.long	.LASF237
	.byte	0x2
	.byte	0x49
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0
	.uleb128 0x5
	.long	.LASF238
	.byte	0x2
	.byte	0x4a
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0
	.uleb128 0x5
	.long	.LASF239
	.byte	0x2
	.byte	0x4c
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0
	.uleb128 0x5
	.long	.LASF240
	.byte	0x2
	.byte	0x4e
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0
	.uleb128 0x5
	.long	.LASF241
	.byte	0x2
	.byte	0x50
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0
	.uleb128 0x5
	.long	.LASF242
	.byte	0x2
	.byte	0x53
	.long	0x18a
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0
	.uleb128 0x5
	.long	.LASF243
	.byte	0x2
	.byte	0x55
	.long	0x18a
	.byte	0x4
	.byte	0x8
	.byte	0x8
	.byte	0
	.byte	0
	.uleb128 0x7
	.long	.LASF244
	.byte	0x2
	.byte	0x56
	.long	0x7e8
	.uleb128 0x14
	.byte	0x28
	.byte	0x2
	.byte	0x5c
	.long	0x8b9
	.uleb128 0x8
	.long	.LASF245
	.byte	0x2
	.byte	0x5e
	.long	0x193
	.byte	0
	.uleb128 0x8
	.long	.LASF246
	.byte	0x2
	.byte	0x5f
	.long	0x123
	.byte	0x8
	.uleb128 0x8
	.long	.LASF247
	.byte	0x2
	.byte	0x60
	.long	0x2d
	.byte	0x10
	.uleb128 0x8
	.long	.LASF248
	.byte	0x2
	.byte	0x61
	.long	0x2d
	.byte	0x18
	.uleb128 0x8
	.long	.LASF249
	.byte	0x2
	.byte	0x62
	.long	0x18a
	.byte	0x20
	.byte	0
	.uleb128 0x7
	.long	.LASF250
	.byte	0x2
	.byte	0x63
	.long	0x874
	.uleb128 0x15
	.long	.LASF319
	.byte	0x8
	.byte	0x2
	.byte	0x67
	.long	0x95f
	.uleb128 0x16
	.long	.LASF251
	.byte	0x2
	.byte	0x69
	.long	0x193
	.uleb128 0x16
	.long	.LASF252
	.byte	0x2
	.byte	0x6a
	.long	0x13e
	.uleb128 0x16
	.long	.LASF253
	.byte	0x2
	.byte	0x6b
	.long	0x18a
	.uleb128 0x16
	.long	.LASF254
	.byte	0x2
	.byte	0x6c
	.long	0x205
	.uleb128 0x17
	.string	"rtx"
	.byte	0x2
	.byte	0x6d
	.long	0x2d
	.uleb128 0x16
	.long	.LASF10
	.byte	0x2
	.byte	0x6e
	.long	0xed
	.uleb128 0x16
	.long	.LASF255
	.byte	0x2
	.byte	0x6f
	.long	0x22e
	.uleb128 0x16
	.long	.LASF256
	.byte	0x2
	.byte	0x70
	.long	0x869
	.uleb128 0x16
	.long	.LASF257
	.byte	0x2
	.byte	0x71
	.long	0x964
	.uleb128 0x16
	.long	.LASF258
	.byte	0x2
	.byte	0x72
	.long	0x96f
	.uleb128 0x16
	.long	.LASF259
	.byte	0x2
	.byte	0x73
	.long	0x123
	.uleb128 0x17
	.string	"bb"
	.byte	0x2
	.byte	0x74
	.long	0x97a
	.uleb128 0x16
	.long	.LASF260
	.byte	0x2
	.byte	0x75
	.long	0x980
	.byte	0
	.uleb128 0x18
	.long	.LASF261
	.uleb128 0x3
	.byte	0x8
	.long	0x95f
	.uleb128 0x18
	.long	.LASF262
	.uleb128 0x3
	.byte	0x8
	.long	0x96a
	.uleb128 0x18
	.long	.LASF263
	.uleb128 0x3
	.byte	0x8
	.long	0x975
	.uleb128 0x3
	.byte	0x8
	.long	0x8b9
	.uleb128 0x7
	.long	.LASF264
	.byte	0x2
	.byte	0x76
	.long	0x8c4
	.uleb128 0x10
	.long	0x986
	.long	0x9a1
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x2d
	.long	0x9b1
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0xd
	.long	.LASF265
	.byte	0x4
	.byte	0x2
	.value	0x297
	.long	0xa60
	.uleb128 0xe
	.long	.LASF266
	.sleb128 -100
	.uleb128 0xe
	.long	.LASF267
	.sleb128 -99
	.uleb128 0xe
	.long	.LASF268
	.sleb128 -98
	.uleb128 0xe
	.long	.LASF269
	.sleb128 -97
	.uleb128 0xe
	.long	.LASF270
	.sleb128 -96
	.uleb128 0xe
	.long	.LASF271
	.sleb128 -95
	.uleb128 0xe
	.long	.LASF272
	.sleb128 -94
	.uleb128 0xe
	.long	.LASF273
	.sleb128 -93
	.uleb128 0xe
	.long	.LASF274
	.sleb128 -92
	.uleb128 0xe
	.long	.LASF275
	.sleb128 -91
	.uleb128 0xe
	.long	.LASF276
	.sleb128 -90
	.uleb128 0xe
	.long	.LASF277
	.sleb128 -89
	.uleb128 0xe
	.long	.LASF278
	.sleb128 -88
	.uleb128 0xe
	.long	.LASF279
	.sleb128 -87
	.uleb128 0xe
	.long	.LASF280
	.sleb128 -86
	.uleb128 0xe
	.long	.LASF281
	.sleb128 -85
	.uleb128 0xe
	.long	.LASF282
	.sleb128 -84
	.uleb128 0xe
	.long	.LASF283
	.sleb128 -83
	.uleb128 0xe
	.long	.LASF284
	.sleb128 -82
	.uleb128 0xe
	.long	.LASF285
	.sleb128 -81
	.uleb128 0xe
	.long	.LASF286
	.sleb128 -80
	.uleb128 0xe
	.long	.LASF287
	.sleb128 -79
	.uleb128 0xe
	.long	.LASF288
	.sleb128 -78
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x2d
	.uleb128 0xd
	.long	.LASF289
	.byte	0x4
	.byte	0x2
	.value	0x630
	.long	0xabc
	.uleb128 0xe
	.long	.LASF290
	.sleb128 0
	.uleb128 0xe
	.long	.LASF291
	.sleb128 1
	.uleb128 0xe
	.long	.LASF292
	.sleb128 2
	.uleb128 0xe
	.long	.LASF293
	.sleb128 3
	.uleb128 0xe
	.long	.LASF294
	.sleb128 4
	.uleb128 0xe
	.long	.LASF295
	.sleb128 5
	.uleb128 0xe
	.long	.LASF296
	.sleb128 6
	.uleb128 0xe
	.long	.LASF297
	.sleb128 7
	.uleb128 0xe
	.long	.LASF298
	.sleb128 8
	.uleb128 0xe
	.long	.LASF299
	.sleb128 9
	.uleb128 0xe
	.long	.LASF300
	.sleb128 10
	.uleb128 0xe
	.long	.LASF301
	.sleb128 11
	.byte	0
	.uleb128 0x12
	.long	.LASF302
	.byte	0x4
	.byte	0x7
	.byte	0x1c
	.long	0xadb
	.uleb128 0xe
	.long	.LASF303
	.sleb128 0
	.uleb128 0xe
	.long	.LASF304
	.sleb128 1
	.uleb128 0xe
	.long	.LASF305
	.sleb128 2
	.byte	0
	.uleb128 0x19
	.long	.LASF306
	.value	0x3f0
	.byte	0x7
	.byte	0x95
	.long	0xb76
	.uleb128 0x8
	.long	.LASF307
	.byte	0x7
	.byte	0x9e
	.long	0xb76
	.byte	0
	.uleb128 0x8
	.long	.LASF308
	.byte	0x7
	.byte	0xa1
	.long	0xb86
	.byte	0xf0
	.uleb128 0x1a
	.long	.LASF309
	.byte	0x7
	.byte	0xa4
	.long	0xb96
	.value	0x1e0
	.uleb128 0x1a
	.long	.LASF310
	.byte	0x7
	.byte	0xa7
	.long	0xba6
	.value	0x2d0
	.uleb128 0x1a
	.long	.LASF311
	.byte	0x7
	.byte	0xaa
	.long	0xbb6
	.value	0x348
	.uleb128 0x1a
	.long	.LASF312
	.byte	0x7
	.byte	0xae
	.long	0xbc6
	.value	0x3c0
	.uleb128 0x1a
	.long	.LASF313
	.byte	0x7
	.byte	0xb2
	.long	0x1d5
	.value	0x3e0
	.uleb128 0x1a
	.long	.LASF314
	.byte	0x7
	.byte	0xbf
	.long	0x1ce
	.value	0x3e4
	.uleb128 0x1a
	.long	.LASF315
	.byte	0x7
	.byte	0xc2
	.long	0x1ce
	.value	0x3e5
	.uleb128 0x1a
	.long	.LASF316
	.byte	0x7
	.byte	0xc5
	.long	0x1ce
	.value	0x3e6
	.uleb128 0x1a
	.long	.LASF317
	.byte	0x7
	.byte	0xc8
	.long	0x2d
	.value	0x3e8
	.byte	0
	.uleb128 0x10
	.long	0x2d
	.long	0xb86
	.uleb128 0x11
	.long	0x145
	.byte	0x1d
	.byte	0
	.uleb128 0x10
	.long	0xa60
	.long	0xb96
	.uleb128 0x11
	.long	0x145
	.byte	0x1d
	.byte	0
	.uleb128 0x10
	.long	0x205
	.long	0xba6
	.uleb128 0x11
	.long	0x145
	.byte	0x1d
	.byte	0
	.uleb128 0x10
	.long	0x22e
	.long	0xbb6
	.uleb128 0x11
	.long	0x145
	.byte	0x1d
	.byte	0
	.uleb128 0x10
	.long	0xabc
	.long	0xbc6
	.uleb128 0x11
	.long	0x145
	.byte	0x1d
	.byte	0
	.uleb128 0x10
	.long	0xa60
	.long	0xbd6
	.uleb128 0x11
	.long	0x145
	.byte	0x3
	.byte	0
	.uleb128 0xa
	.long	0x205
	.uleb128 0x4
	.long	.LASF318
	.byte	0x10
	.byte	0x8
	.byte	0x24
	.long	0xc00
	.uleb128 0x6
	.string	"rtx"
	.byte	0x8
	.byte	0x32
	.long	0x38
	.byte	0
	.uleb128 0x6
	.string	"age"
	.byte	0x8
	.byte	0x36
	.long	0x18a
	.byte	0x8
	.byte	0
	.uleb128 0x15
	.long	.LASF320
	.byte	0x10
	.byte	0x8
	.byte	0x3a
	.long	0xce5
	.uleb128 0x17
	.string	"c"
	.byte	0x8
	.byte	0x3b
	.long	0x1e5
	.uleb128 0x17
	.string	"uc"
	.byte	0x8
	.byte	0x3c
	.long	0xce5
	.uleb128 0x17
	.string	"s"
	.byte	0x8
	.byte	0x3d
	.long	0xcf5
	.uleb128 0x17
	.string	"us"
	.byte	0x8
	.byte	0x3e
	.long	0xd05
	.uleb128 0x17
	.string	"i"
	.byte	0x8
	.byte	0x3f
	.long	0xd15
	.uleb128 0x17
	.string	"u"
	.byte	0x8
	.byte	0x40
	.long	0xd25
	.uleb128 0x17
	.string	"l"
	.byte	0x8
	.byte	0x41
	.long	0xd35
	.uleb128 0x17
	.string	"ul"
	.byte	0x8
	.byte	0x42
	.long	0xd45
	.uleb128 0x16
	.long	.LASF321
	.byte	0x8
	.byte	0x43
	.long	0xd35
	.uleb128 0x16
	.long	.LASF322
	.byte	0x8
	.byte	0x44
	.long	0xd45
	.uleb128 0x16
	.long	.LASF323
	.byte	0x8
	.byte	0x45
	.long	0xd55
	.uleb128 0x16
	.long	.LASF324
	.byte	0x8
	.byte	0x46
	.long	0xd65
	.uleb128 0x17
	.string	"rtx"
	.byte	0x8
	.byte	0x47
	.long	0xd75
	.uleb128 0x16
	.long	.LASF10
	.byte	0x8
	.byte	0x48
	.long	0xd85
	.uleb128 0x16
	.long	.LASF15
	.byte	0x8
	.byte	0x49
	.long	0xd95
	.uleb128 0x16
	.long	.LASF325
	.byte	0x8
	.byte	0x4a
	.long	0xda5
	.uleb128 0x16
	.long	.LASF326
	.byte	0x8
	.byte	0x4b
	.long	0xdb5
	.uleb128 0x17
	.string	"reg"
	.byte	0x8
	.byte	0x4c
	.long	0xdd0
	.uleb128 0x16
	.long	.LASF327
	.byte	0x8
	.byte	0x4d
	.long	0xe77
	.uleb128 0x17
	.string	"bb"
	.byte	0x8
	.byte	0x4e
	.long	0xe87
	.uleb128 0x17
	.string	"te"
	.byte	0x8
	.byte	0x4f
	.long	0xe97
	.byte	0
	.uleb128 0x10
	.long	0x1ac
	.long	0xcf5
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x1c1
	.long	0xd05
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x1b3
	.long	0xd15
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x13e
	.long	0xd25
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x18a
	.long	0xd35
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x193
	.long	0xd45
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x1a5
	.long	0xd55
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x191
	.long	0xd65
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x1c8
	.long	0xd75
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x38
	.long	0xd85
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0xf8
	.long	0xd95
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x12e
	.long	0xda5
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x96f
	.long	0xdb5
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0xdc5
	.long	0xdc5
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0xdcb
	.uleb128 0x18
	.long	.LASF328
	.uleb128 0x10
	.long	0xde0
	.long	0xde0
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0xde6
	.uleb128 0x4
	.long	.LASF329
	.byte	0x2c
	.byte	0x9
	.byte	0x2d
	.long	0xe77
	.uleb128 0x8
	.long	.LASF330
	.byte	0x9
	.byte	0x2f
	.long	0x13e
	.byte	0
	.uleb128 0x8
	.long	.LASF331
	.byte	0x9
	.byte	0x30
	.long	0x13e
	.byte	0x4
	.uleb128 0x8
	.long	.LASF332
	.byte	0x9
	.byte	0x31
	.long	0x13e
	.byte	0x8
	.uleb128 0x8
	.long	.LASF333
	.byte	0x9
	.byte	0x34
	.long	0x13e
	.byte	0xc
	.uleb128 0x8
	.long	.LASF334
	.byte	0x9
	.byte	0x37
	.long	0x13e
	.byte	0x10
	.uleb128 0x8
	.long	.LASF335
	.byte	0x9
	.byte	0x38
	.long	0x13e
	.byte	0x14
	.uleb128 0x8
	.long	.LASF336
	.byte	0x9
	.byte	0x39
	.long	0x13e
	.byte	0x18
	.uleb128 0x8
	.long	.LASF337
	.byte	0x9
	.byte	0x3a
	.long	0x13e
	.byte	0x1c
	.uleb128 0x8
	.long	.LASF338
	.byte	0x9
	.byte	0x3b
	.long	0x13e
	.byte	0x20
	.uleb128 0x8
	.long	.LASF339
	.byte	0x9
	.byte	0x3c
	.long	0x13e
	.byte	0x24
	.uleb128 0x8
	.long	.LASF340
	.byte	0x9
	.byte	0x3d
	.long	0x1ce
	.byte	0x28
	.byte	0
	.uleb128 0x10
	.long	0xbdb
	.long	0xe87
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x97a
	.long	0xe97
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0xea7
	.long	0xea7
	.uleb128 0x11
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0xead
	.uleb128 0x18
	.long	.LASF341
	.uleb128 0x7
	.long	.LASF342
	.byte	0x8
	.byte	0x50
	.long	0xc00
	.uleb128 0x4
	.long	.LASF343
	.byte	0x30
	.byte	0x8
	.byte	0x53
	.long	0xf06
	.uleb128 0x8
	.long	.LASF344
	.byte	0x8
	.byte	0x54
	.long	0x19a
	.byte	0
	.uleb128 0x8
	.long	.LASF345
	.byte	0x8
	.byte	0x55
	.long	0x19a
	.byte	0x8
	.uleb128 0x8
	.long	.LASF346
	.byte	0x8
	.byte	0x57
	.long	0x19a
	.byte	0x10
	.uleb128 0x8
	.long	.LASF347
	.byte	0x8
	.byte	0x58
	.long	0x205
	.byte	0x18
	.uleb128 0x8
	.long	.LASF348
	.byte	0x8
	.byte	0x59
	.long	0xeb2
	.byte	0x20
	.byte	0
	.uleb128 0x7
	.long	.LASF349
	.byte	0x8
	.byte	0x5a
	.long	0xf11
	.uleb128 0x3
	.byte	0x8
	.long	0xebd
	.uleb128 0x12
	.long	.LASF350
	.byte	0x4
	.byte	0xa
	.byte	0xa
	.long	0xf4e
	.uleb128 0xe
	.long	.LASF351
	.sleb128 0
	.uleb128 0xe
	.long	.LASF352
	.sleb128 1
	.uleb128 0xe
	.long	.LASF353
	.sleb128 2
	.uleb128 0xe
	.long	.LASF354
	.sleb128 3
	.uleb128 0xe
	.long	.LASF355
	.sleb128 4
	.uleb128 0xe
	.long	.LASF356
	.sleb128 5
	.uleb128 0xe
	.long	.LASF357
	.sleb128 6
	.byte	0
	.uleb128 0x12
	.long	.LASF358
	.byte	0x4
	.byte	0xa
	.byte	0xe
	.long	0x1033
	.uleb128 0xe
	.long	.LASF359
	.sleb128 0
	.uleb128 0xe
	.long	.LASF360
	.sleb128 1
	.uleb128 0xe
	.long	.LASF361
	.sleb128 2
	.uleb128 0xe
	.long	.LASF362
	.sleb128 3
	.uleb128 0xe
	.long	.LASF363
	.sleb128 4
	.uleb128 0xe
	.long	.LASF364
	.sleb128 5
	.uleb128 0xe
	.long	.LASF365
	.sleb128 6
	.uleb128 0xe
	.long	.LASF366
	.sleb128 7
	.uleb128 0xe
	.long	.LASF367
	.sleb128 8
	.uleb128 0xe
	.long	.LASF368
	.sleb128 9
	.uleb128 0xe
	.long	.LASF369
	.sleb128 10
	.uleb128 0xe
	.long	.LASF370
	.sleb128 11
	.uleb128 0xe
	.long	.LASF371
	.sleb128 12
	.uleb128 0xe
	.long	.LASF372
	.sleb128 13
	.uleb128 0xe
	.long	.LASF373
	.sleb128 14
	.uleb128 0xe
	.long	.LASF374
	.sleb128 15
	.uleb128 0xe
	.long	.LASF375
	.sleb128 16
	.uleb128 0xe
	.long	.LASF376
	.sleb128 17
	.uleb128 0xe
	.long	.LASF377
	.sleb128 18
	.uleb128 0xe
	.long	.LASF378
	.sleb128 19
	.uleb128 0xe
	.long	.LASF379
	.sleb128 20
	.uleb128 0xe
	.long	.LASF380
	.sleb128 21
	.uleb128 0xe
	.long	.LASF381
	.sleb128 22
	.uleb128 0xe
	.long	.LASF382
	.sleb128 23
	.uleb128 0xe
	.long	.LASF383
	.sleb128 24
	.uleb128 0xe
	.long	.LASF384
	.sleb128 25
	.uleb128 0xe
	.long	.LASF385
	.sleb128 26
	.uleb128 0xe
	.long	.LASF386
	.sleb128 27
	.uleb128 0xe
	.long	.LASF387
	.sleb128 28
	.uleb128 0xe
	.long	.LASF388
	.sleb128 29
	.uleb128 0xe
	.long	.LASF389
	.sleb128 30
	.uleb128 0xe
	.long	.LASF390
	.sleb128 31
	.uleb128 0xe
	.long	.LASF391
	.sleb128 32
	.uleb128 0xe
	.long	.LASF392
	.sleb128 33
	.uleb128 0xe
	.long	.LASF393
	.sleb128 34
	.uleb128 0xe
	.long	.LASF394
	.sleb128 35
	.byte	0
	.uleb128 0x12
	.long	.LASF395
	.byte	0x4
	.byte	0xa
	.byte	0x12
	.long	0x1082
	.uleb128 0xe
	.long	.LASF396
	.sleb128 0
	.uleb128 0xe
	.long	.LASF397
	.sleb128 1
	.uleb128 0xe
	.long	.LASF398
	.sleb128 2
	.uleb128 0xe
	.long	.LASF399
	.sleb128 3
	.uleb128 0xe
	.long	.LASF400
	.sleb128 4
	.uleb128 0xe
	.long	.LASF401
	.sleb128 5
	.uleb128 0xe
	.long	.LASF402
	.sleb128 6
	.uleb128 0xe
	.long	.LASF403
	.sleb128 7
	.uleb128 0xe
	.long	.LASF404
	.sleb128 8
	.uleb128 0xe
	.long	.LASF405
	.sleb128 9
	.uleb128 0xe
	.long	.LASF406
	.sleb128 10
	.byte	0
	.uleb128 0x12
	.long	.LASF407
	.byte	0x4
	.byte	0xa
	.byte	0x2d
	.long	0x10ad
	.uleb128 0xe
	.long	.LASF408
	.sleb128 0
	.uleb128 0xe
	.long	.LASF409
	.sleb128 1
	.uleb128 0xe
	.long	.LASF410
	.sleb128 2
	.uleb128 0xe
	.long	.LASF411
	.sleb128 3
	.uleb128 0xe
	.long	.LASF412
	.sleb128 4
	.byte	0
	.uleb128 0x12
	.long	.LASF413
	.byte	0x4
	.byte	0xa
	.byte	0x31
	.long	0x10cc
	.uleb128 0xe
	.long	.LASF414
	.sleb128 0
	.uleb128 0xe
	.long	.LASF415
	.sleb128 1
	.uleb128 0xe
	.long	.LASF416
	.sleb128 2
	.byte	0
	.uleb128 0x12
	.long	.LASF417
	.byte	0x4
	.byte	0xa
	.byte	0x35
	.long	0x10e5
	.uleb128 0xe
	.long	.LASF418
	.sleb128 0
	.uleb128 0xe
	.long	.LASF419
	.sleb128 1
	.byte	0
	.uleb128 0x12
	.long	.LASF420
	.byte	0x4
	.byte	0xa
	.byte	0x39
	.long	0x10fe
	.uleb128 0xe
	.long	.LASF421
	.sleb128 0
	.uleb128 0xe
	.long	.LASF422
	.sleb128 1
	.byte	0
	.uleb128 0x12
	.long	.LASF423
	.byte	0x4
	.byte	0xa
	.byte	0x3d
	.long	0x1123
	.uleb128 0xe
	.long	.LASF424
	.sleb128 0
	.uleb128 0xe
	.long	.LASF425
	.sleb128 1
	.uleb128 0xe
	.long	.LASF426
	.sleb128 2
	.uleb128 0xe
	.long	.LASF427
	.sleb128 3
	.byte	0
	.uleb128 0x12
	.long	.LASF428
	.byte	0x4
	.byte	0xa
	.byte	0x41
	.long	0x1142
	.uleb128 0xe
	.long	.LASF429
	.sleb128 0
	.uleb128 0xe
	.long	.LASF430
	.sleb128 1
	.uleb128 0xe
	.long	.LASF431
	.sleb128 2
	.byte	0
	.uleb128 0x12
	.long	.LASF432
	.byte	0x4
	.byte	0xa
	.byte	0x45
	.long	0x115b
	.uleb128 0xe
	.long	.LASF433
	.sleb128 0
	.uleb128 0xe
	.long	.LASF434
	.sleb128 1
	.byte	0
	.uleb128 0x12
	.long	.LASF435
	.byte	0x4
	.byte	0xa
	.byte	0x49
	.long	0x118c
	.uleb128 0xe
	.long	.LASF436
	.sleb128 0
	.uleb128 0xe
	.long	.LASF437
	.sleb128 1
	.uleb128 0xe
	.long	.LASF438
	.sleb128 2
	.uleb128 0xe
	.long	.LASF439
	.sleb128 3
	.uleb128 0xe
	.long	.LASF440
	.sleb128 4
	.uleb128 0xe
	.long	.LASF441
	.sleb128 5
	.byte	0
	.uleb128 0x4
	.long	.LASF442
	.byte	0x48
	.byte	0xa
	.byte	0x51
	.long	0x121d
	.uleb128 0x8
	.long	.LASF347
	.byte	0xa
	.byte	0x53
	.long	0xbd6
	.byte	0
	.uleb128 0x8
	.long	.LASF443
	.byte	0xa
	.byte	0x54
	.long	0x139
	.byte	0x8
	.uleb128 0x8
	.long	.LASF444
	.byte	0xa
	.byte	0x55
	.long	0x139
	.byte	0xc
	.uleb128 0x8
	.long	.LASF445
	.byte	0xa
	.byte	0x56
	.long	0x139
	.byte	0x10
	.uleb128 0x8
	.long	.LASF446
	.byte	0xa
	.byte	0x57
	.long	0x139
	.byte	0x14
	.uleb128 0x8
	.long	.LASF447
	.byte	0xa
	.byte	0x58
	.long	0x139
	.byte	0x18
	.uleb128 0x8
	.long	.LASF448
	.byte	0xa
	.byte	0x59
	.long	0x122c
	.byte	0x20
	.uleb128 0x8
	.long	.LASF449
	.byte	0xa
	.byte	0x5a
	.long	0x124b
	.byte	0x28
	.uleb128 0x8
	.long	.LASF450
	.byte	0xa
	.byte	0x5b
	.long	0x139
	.byte	0x30
	.uleb128 0x8
	.long	.LASF451
	.byte	0xa
	.byte	0x5c
	.long	0x1265
	.byte	0x38
	.uleb128 0x8
	.long	.LASF452
	.byte	0xa
	.byte	0x5d
	.long	0x124b
	.byte	0x40
	.byte	0
	.uleb128 0x1b
	.long	0x13e
	.long	0x122c
	.uleb128 0x1c
	.long	0x2d
	.byte	0
	.uleb128 0xa
	.long	0x1231
	.uleb128 0x3
	.byte	0x8
	.long	0x121d
	.uleb128 0x1b
	.long	0x13e
	.long	0x124b
	.uleb128 0x1c
	.long	0x2d
	.uleb128 0x1c
	.long	0x2d
	.byte	0
	.uleb128 0xa
	.long	0x1250
	.uleb128 0x3
	.byte	0x8
	.long	0x1237
	.uleb128 0x1b
	.long	0x18a
	.long	0x1265
	.uleb128 0x1c
	.long	0x2d
	.byte	0
	.uleb128 0xa
	.long	0x126a
	.uleb128 0x3
	.byte	0x8
	.long	0x1256
	.uleb128 0x1d
	.long	.LASF453
	.byte	0x1
	.byte	0x15
	.long	0x13e
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x12b3
	.uleb128 0x1e
	.long	.LASF317
	.byte	0x1
	.byte	0x16
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x12b3
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10001
	.byte	0
	.uleb128 0xa
	.long	0x1f5
	.uleb128 0x1d
	.long	.LASF454
	.byte	0x1
	.byte	0x26
	.long	0x13e
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x12fb
	.uleb128 0x1e
	.long	.LASF317
	.byte	0x1
	.byte	0x27
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x130b
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10009
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x130b
	.uleb128 0x11
	.long	0x145
	.byte	0x16
	.byte	0
	.uleb128 0xa
	.long	0x12fb
	.uleb128 0x1d
	.long	.LASF456
	.byte	0x1
	.byte	0x37
	.long	0x13e
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x1353
	.uleb128 0x1e
	.long	.LASF317
	.byte	0x1
	.byte	0x38
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1353
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10179
	.byte	0
	.uleb128 0xa
	.long	0x1f5
	.uleb128 0x20
	.long	.LASF457
	.byte	0x1
	.value	0x18d
	.long	0x13e
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x139d
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x18e
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x13ad
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10687
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x13ad
	.uleb128 0x11
	.long	0x145
	.byte	0x11
	.byte	0
	.uleb128 0xa
	.long	0x139d
	.uleb128 0x20
	.long	.LASF458
	.byte	0x1
	.value	0x84f
	.long	0x13e
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.long	0x13f7
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x850
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1407
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10814
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x1407
	.uleb128 0x11
	.long	0x145
	.byte	0x1b
	.byte	0
	.uleb128 0xa
	.long	0x13f7
	.uleb128 0x20
	.long	.LASF459
	.byte	0x1
	.value	0x860
	.long	0x13e
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x1451
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x861
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1451
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10822
	.byte	0
	.uleb128 0xa
	.long	0x21e
	.uleb128 0x20
	.long	.LASF460
	.byte	0x1
	.value	0x871
	.long	0x13e
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.long	0x149b
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x872
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x14ab
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10830
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x14ab
	.uleb128 0x11
	.long	0x145
	.byte	0x20
	.byte	0
	.uleb128 0xa
	.long	0x149b
	.uleb128 0x20
	.long	.LASF461
	.byte	0x1
	.value	0x882
	.long	0x13e
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.long	0x14f5
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x883
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1505
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10838
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x1505
	.uleb128 0x11
	.long	0x145
	.byte	0x1d
	.byte	0
	.uleb128 0xa
	.long	0x14f5
	.uleb128 0x20
	.long	.LASF462
	.byte	0x1
	.value	0x893
	.long	0x13e
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x154f
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x894
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x154f
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10846
	.byte	0
	.uleb128 0xa
	.long	0x14f5
	.uleb128 0x20
	.long	.LASF463
	.byte	0x1
	.value	0x8a4
	.long	0x13e
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.uleb128 0x1
	.byte	0x9c
	.long	0x1599
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x8a5
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x15a9
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10964
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x15a9
	.uleb128 0x11
	.long	0x145
	.byte	0x19
	.byte	0
	.uleb128 0xa
	.long	0x1599
	.uleb128 0x20
	.long	.LASF464
	.byte	0x1
	.value	0xa4b
	.long	0x13e
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x15f3
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0xa4c
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x15f3
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10989
	.byte	0
	.uleb128 0xa
	.long	0x14f5
	.uleb128 0x20
	.long	.LASF465
	.byte	0x1
	.value	0xa76
	.long	0x18a
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x163d
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0xa77
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x164d
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.10997
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x164d
	.uleb128 0x11
	.long	0x145
	.byte	0x21
	.byte	0
	.uleb128 0xa
	.long	0x163d
	.uleb128 0x20
	.long	.LASF466
	.byte	0x1
	.value	0xa87
	.long	0x13e
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.long	0x1697
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0xa88
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x16a7
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11394
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x16a7
	.uleb128 0x11
	.long	0x145
	.byte	0x1a
	.byte	0
	.uleb128 0xa
	.long	0x1697
	.uleb128 0x20
	.long	.LASF467
	.byte	0x1
	.value	0xd6b
	.long	0x18a
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.uleb128 0x1
	.byte	0x9c
	.long	0x16f1
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0xd6c
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1701
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11402
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x1701
	.uleb128 0x11
	.long	0x145
	.byte	0x1e
	.byte	0
	.uleb128 0xa
	.long	0x16f1
	.uleb128 0x20
	.long	.LASF468
	.byte	0x1
	.value	0xd7c
	.long	0x13e
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0x174b
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0xd7d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x174b
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11410
	.byte	0
	.uleb128 0xa
	.long	0x149b
	.uleb128 0x20
	.long	.LASF469
	.byte	0x1
	.value	0xd8d
	.long	0x13e
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x1795
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0xd8e
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1795
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11418
	.byte	0
	.uleb128 0xa
	.long	0x149b
	.uleb128 0x20
	.long	.LASF470
	.byte	0x1
	.value	0xd9e
	.long	0x18a
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0x17df
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0xd9f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x17ef
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11474
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x17ef
	.uleb128 0x11
	.long	0x145
	.byte	0x24
	.byte	0
	.uleb128 0xa
	.long	0x17df
	.uleb128 0x20
	.long	.LASF471
	.byte	0x1
	.value	0xf34
	.long	0x13e
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0x1839
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0xf35
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1839
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11762
	.byte	0
	.uleb128 0xa
	.long	0x12fb
	.uleb128 0x20
	.long	.LASF472
	.byte	0x1
	.value	0x1031
	.long	0x18a
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x1883
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1032
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1883
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11770
	.byte	0
	.uleb128 0xa
	.long	0x1697
	.uleb128 0x20
	.long	.LASF473
	.byte	0x1
	.value	0x1042
	.long	0x13e
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.long	0x18cd
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1043
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x18dd
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11867
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x18dd
	.uleb128 0x11
	.long	0x145
	.byte	0x18
	.byte	0
	.uleb128 0xa
	.long	0x18cd
	.uleb128 0x20
	.long	.LASF474
	.byte	0x1
	.value	0x125d
	.long	0x18a
	.quad	.LFB22
	.quad	.LFE22-.LFB22
	.uleb128 0x1
	.byte	0x9c
	.long	0x1927
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x125e
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1937
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.12091
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x1937
	.uleb128 0x11
	.long	0x145
	.byte	0x1c
	.byte	0
	.uleb128 0xa
	.long	0x1927
	.uleb128 0x20
	.long	.LASF475
	.byte	0x1
	.value	0x126e
	.long	0x13e
	.quad	.LFB23
	.quad	.LFE23-.LFB23
	.uleb128 0x1
	.byte	0x9c
	.long	0x1981
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x126f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1991
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.12208
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x1991
	.uleb128 0x11
	.long	0x145
	.byte	0x17
	.byte	0
	.uleb128 0xa
	.long	0x1981
	.uleb128 0x20
	.long	.LASF476
	.byte	0x1
	.value	0x1403
	.long	0x18a
	.quad	.LFB24
	.quad	.LFE24-.LFB24
	.uleb128 0x1
	.byte	0x9c
	.long	0x19db
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1404
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x19db
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.12398
	.byte	0
	.uleb128 0xa
	.long	0x13f7
	.uleb128 0x20
	.long	.LASF477
	.byte	0x1
	.value	0x1414
	.long	0x13e
	.quad	.LFB25
	.quad	.LFE25-.LFB25
	.uleb128 0x1
	.byte	0x9c
	.long	0x1a25
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1415
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1a25
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.12406
	.byte	0
	.uleb128 0xa
	.long	0x1599
	.uleb128 0x20
	.long	.LASF478
	.byte	0x1
	.value	0x1425
	.long	0x13e
	.quad	.LFB26
	.quad	.LFE26-.LFB26
	.uleb128 0x1
	.byte	0x9c
	.long	0x1a6f
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1426
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1a6f
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.12724
	.byte	0
	.uleb128 0xa
	.long	0x12fb
	.uleb128 0x20
	.long	.LASF479
	.byte	0x1
	.value	0x169c
	.long	0x18a
	.quad	.LFB27
	.quad	.LFE27-.LFB27
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ab9
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x169d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1ab9
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.12732
	.byte	0
	.uleb128 0xa
	.long	0x1697
	.uleb128 0x20
	.long	.LASF480
	.byte	0x1
	.value	0x16ad
	.long	0x13e
	.quad	.LFB28
	.quad	.LFE28-.LFB28
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b03
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x16ae
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1b03
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13033
	.byte	0
	.uleb128 0xa
	.long	0x1981
	.uleb128 0x20
	.long	.LASF481
	.byte	0x1
	.value	0x1880
	.long	0x18a
	.quad	.LFB29
	.quad	.LFE29-.LFB29
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b4d
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1881
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1b4d
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13041
	.byte	0
	.uleb128 0xa
	.long	0x13f7
	.uleb128 0x20
	.long	.LASF482
	.byte	0x1
	.value	0x1891
	.long	0x13e
	.quad	.LFB30
	.quad	.LFE30-.LFB30
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b97
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1892
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1b97
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13049
	.byte	0
	.uleb128 0xa
	.long	0x18cd
	.uleb128 0x20
	.long	.LASF483
	.byte	0x1
	.value	0x18a2
	.long	0x13e
	.quad	.LFB31
	.quad	.LFE31-.LFB31
	.uleb128 0x1
	.byte	0x9c
	.long	0x1be1
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x18a3
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1be1
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13057
	.byte	0
	.uleb128 0xa
	.long	0x1981
	.uleb128 0x20
	.long	.LASF484
	.byte	0x1
	.value	0x18b3
	.long	0x13e
	.quad	.LFB32
	.quad	.LFE32-.LFB32
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c2b
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x18b4
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1c2b
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13065
	.byte	0
	.uleb128 0xa
	.long	0x18cd
	.uleb128 0x20
	.long	.LASF485
	.byte	0x1
	.value	0x18c4
	.long	0x13e
	.quad	.LFB33
	.quad	.LFE33-.LFB33
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c75
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x18c5
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1c75
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13313
	.byte	0
	.uleb128 0xa
	.long	0x1981
	.uleb128 0x20
	.long	.LASF486
	.byte	0x1
	.value	0x1b44
	.long	0x18a
	.quad	.LFB34
	.quad	.LFE34-.LFB34
	.uleb128 0x1
	.byte	0x9c
	.long	0x1cbf
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1b45
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1cbf
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13321
	.byte	0
	.uleb128 0xa
	.long	0x13f7
	.uleb128 0x20
	.long	.LASF487
	.byte	0x1
	.value	0x1b55
	.long	0x13e
	.quad	.LFB35
	.quad	.LFE35-.LFB35
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d09
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1b56
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1d09
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13329
	.byte	0
	.uleb128 0xa
	.long	0x12fb
	.uleb128 0x20
	.long	.LASF488
	.byte	0x1
	.value	0x1b66
	.long	0x13e
	.quad	.LFB36
	.quad	.LFE36-.LFB36
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d53
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1b67
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1d53
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13632
	.byte	0
	.uleb128 0xa
	.long	0x1981
	.uleb128 0x20
	.long	.LASF489
	.byte	0x1
	.value	0x1ee7
	.long	0x18a
	.quad	.LFB37
	.quad	.LFE37-.LFB37
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d9d
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1ee8
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1d9d
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13640
	.byte	0
	.uleb128 0xa
	.long	0x13f7
	.uleb128 0x20
	.long	.LASF490
	.byte	0x1
	.value	0x1ef8
	.long	0x13e
	.quad	.LFB38
	.quad	.LFE38-.LFB38
	.uleb128 0x1
	.byte	0x9c
	.long	0x1de7
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x1ef9
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1de7
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13759
	.byte	0
	.uleb128 0xa
	.long	0x12fb
	.uleb128 0x20
	.long	.LASF491
	.byte	0x1
	.value	0x2085
	.long	0x18a
	.quad	.LFB39
	.quad	.LFE39-.LFB39
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e31
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x2086
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1e31
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13767
	.byte	0
	.uleb128 0xa
	.long	0x1697
	.uleb128 0x20
	.long	.LASF492
	.byte	0x1
	.value	0x2096
	.long	0x13e
	.quad	.LFB40
	.quad	.LFE40-.LFB40
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e7b
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x2097
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1e7b
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13927
	.byte	0
	.uleb128 0xa
	.long	0x1f5
	.uleb128 0x20
	.long	.LASF493
	.byte	0x1
	.value	0x2346
	.long	0x18a
	.quad	.LFB41
	.quad	.LFE41-.LFB41
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ec5
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x2347
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1ec5
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13935
	.byte	0
	.uleb128 0xa
	.long	0x1981
	.uleb128 0x20
	.long	.LASF494
	.byte	0x1
	.value	0x2357
	.long	0x13e
	.quad	.LFB42
	.quad	.LFE42-.LFB42
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f0f
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x2358
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1f0f
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13990
	.byte	0
	.uleb128 0xa
	.long	0x18cd
	.uleb128 0x20
	.long	.LASF495
	.byte	0x1
	.value	0x241c
	.long	0x18a
	.quad	.LFB43
	.quad	.LFE43-.LFB43
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f59
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x241d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1f59
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.13998
	.byte	0
	.uleb128 0xa
	.long	0x1927
	.uleb128 0x20
	.long	.LASF496
	.byte	0x1
	.value	0x242d
	.long	0x13e
	.quad	.LFB44
	.quad	.LFE44-.LFB44
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fa3
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x242e
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1fa3
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.14421
	.byte	0
	.uleb128 0xa
	.long	0x1981
	.uleb128 0x20
	.long	.LASF497
	.byte	0x1
	.value	0x28fe
	.long	0x18a
	.quad	.LFB45
	.quad	.LFE45-.LFB45
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fed
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x28ff
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x1fed
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.14854
	.byte	0
	.uleb128 0xa
	.long	0x13f7
	.uleb128 0x20
	.long	.LASF498
	.byte	0x1
	.value	0x2cfb
	.long	0x13e
	.quad	.LFB46
	.quad	.LFE46-.LFB46
	.uleb128 0x1
	.byte	0x9c
	.long	0x20ad
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x2cfc
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x22
	.long	.LASF435
	.byte	0x1
	.value	0x2cfe
	.long	0x115b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF432
	.byte	0x1
	.value	0x2cff
	.long	0x1142
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x22
	.long	.LASF407
	.byte	0x1
	.value	0x2d00
	.long	0x1082
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.long	.LASF395
	.byte	0x1
	.value	0x2d01
	.long	0x1033
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x22
	.long	.LASF423
	.byte	0x1
	.value	0x2d02
	.long	0x10fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x22
	.long	.LASF358
	.byte	0x1
	.value	0x2d03
	.long	0xf4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x22
	.long	.LASF499
	.byte	0x1
	.value	0x2d04
	.long	0x1a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x23
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2d23
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.byte	0
	.uleb128 0x20
	.long	.LASF500
	.byte	0x1
	.value	0x2d2e
	.long	0x115b
	.quad	.LFB47
	.quad	.LFE47-.LFB47
	.uleb128 0x1
	.byte	0x9c
	.long	0x20f2
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x2d2f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x20f2
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.15010
	.byte	0
	.uleb128 0xa
	.long	0x1981
	.uleb128 0x20
	.long	.LASF501
	.byte	0x1
	.value	0x2ece
	.long	0x1142
	.quad	.LFB48
	.quad	.LFE48-.LFB48
	.uleb128 0x1
	.byte	0x9c
	.long	0x213c
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x2ecf
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x213c
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.15068
	.byte	0
	.uleb128 0xa
	.long	0x12fb
	.uleb128 0x20
	.long	.LASF502
	.byte	0x1
	.value	0x3069
	.long	0x10cc
	.quad	.LFB49
	.quad	.LFE49-.LFB49
	.uleb128 0x1
	.byte	0x9c
	.long	0x2186
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x306a
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2186
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.15295
	.byte	0
	.uleb128 0xa
	.long	0x1f5
	.uleb128 0x20
	.long	.LASF503
	.byte	0x1
	.value	0x3096
	.long	0x10ad
	.quad	.LFB50
	.quad	.LFE50-.LFB50
	.uleb128 0x1
	.byte	0x9c
	.long	0x21d0
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x3097
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x21d0
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.15596
	.byte	0
	.uleb128 0xa
	.long	0x139d
	.uleb128 0x20
	.long	.LASF504
	.byte	0x1
	.value	0x3386
	.long	0x13e
	.quad	.LFB51
	.quad	.LFE51-.LFB51
	.uleb128 0x1
	.byte	0x9c
	.long	0x221a
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x3387
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x222a
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.15849
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x222a
	.uleb128 0x11
	.long	0x145
	.byte	0xd
	.byte	0
	.uleb128 0xa
	.long	0x221a
	.uleb128 0x20
	.long	.LASF505
	.byte	0x1
	.value	0x3487
	.long	0x13e
	.quad	.LFB52
	.quad	.LFE52-.LFB52
	.uleb128 0x1
	.byte	0x9c
	.long	0x2274
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x3488
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2274
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.15910
	.byte	0
	.uleb128 0xa
	.long	0x1981
	.uleb128 0x20
	.long	.LASF506
	.byte	0x1
	.value	0x35e4
	.long	0x13e
	.quad	.LFB53
	.quad	.LFE53-.LFB53
	.uleb128 0x1
	.byte	0x9c
	.long	0x22be
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x35e5
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x22be
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.16060
	.byte	0
	.uleb128 0xa
	.long	0x1599
	.uleb128 0x20
	.long	.LASF507
	.byte	0x1
	.value	0x3931
	.long	0x1082
	.quad	.LFB54
	.quad	.LFE54-.LFB54
	.uleb128 0x1
	.byte	0x9c
	.long	0x2308
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x3932
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2318
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.16789
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x2318
	.uleb128 0x11
	.long	0x145
	.byte	0xf
	.byte	0
	.uleb128 0xa
	.long	0x2308
	.uleb128 0x20
	.long	.LASF508
	.byte	0x1
	.value	0x3edb
	.long	0x13e
	.quad	.LFB55
	.quad	.LFE55-.LFB55
	.uleb128 0x1
	.byte	0x9c
	.long	0x2362
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x3edc
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2372
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.17249
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x2372
	.uleb128 0x11
	.long	0x145
	.byte	0xe
	.byte	0
	.uleb128 0xa
	.long	0x2362
	.uleb128 0x20
	.long	.LASF509
	.byte	0x1
	.value	0x4187
	.long	0x1033
	.quad	.LFB56
	.quad	.LFE56-.LFB56
	.uleb128 0x1
	.byte	0x9c
	.long	0x23bc
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x4188
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x23bc
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.17766
	.byte	0
	.uleb128 0xa
	.long	0x221a
	.uleb128 0x20
	.long	.LASF510
	.byte	0x1
	.value	0x450e
	.long	0x1123
	.quad	.LFB57
	.quad	.LFE57-.LFB57
	.uleb128 0x1
	.byte	0x9c
	.long	0x2406
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x450f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2416
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.17833
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x2416
	.uleb128 0x11
	.long	0x145
	.byte	0x12
	.byte	0
	.uleb128 0xa
	.long	0x2406
	.uleb128 0x20
	.long	.LASF511
	.byte	0x1
	.value	0x47c9
	.long	0x10fe
	.quad	.LFB58
	.quad	.LFE58-.LFB58
	.uleb128 0x1
	.byte	0x9c
	.long	0x2460
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x47ca
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2460
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.18407
	.byte	0
	.uleb128 0xa
	.long	0x2406
	.uleb128 0x20
	.long	.LASF512
	.byte	0x1
	.value	0x4b43
	.long	0x10e5
	.quad	.LFB59
	.quad	.LFE59-.LFB59
	.uleb128 0x1
	.byte	0x9c
	.long	0x24aa
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x4b44
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x24ba
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.18740
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x24ba
	.uleb128 0x11
	.long	0x145
	.byte	0x14
	.byte	0
	.uleb128 0xa
	.long	0x24aa
	.uleb128 0x20
	.long	.LASF513
	.byte	0x1
	.value	0x4d6b
	.long	0x13e
	.quad	.LFB60
	.quad	.LFE60-.LFB60
	.uleb128 0x1
	.byte	0x9c
	.long	0x2504
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x4d6c
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2504
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.19013
	.byte	0
	.uleb128 0xa
	.long	0x2406
	.uleb128 0x20
	.long	.LASF514
	.byte	0x1
	.value	0x4f6c
	.long	0x13e
	.quad	.LFB61
	.quad	.LFE61-.LFB61
	.uleb128 0x1
	.byte	0x9c
	.long	0x254e
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x4f6d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x254e
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.19037
	.byte	0
	.uleb128 0xa
	.long	0x1f5
	.uleb128 0x20
	.long	.LASF515
	.byte	0x1
	.value	0x4f8f
	.long	0x13e
	.quad	.LFB62
	.quad	.LFE62-.LFB62
	.uleb128 0x1
	.byte	0x9c
	.long	0x2598
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x4f90
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2598
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.19099
	.byte	0
	.uleb128 0xa
	.long	0x12fb
	.uleb128 0x20
	.long	.LASF516
	.byte	0x1
	.value	0x4ff5
	.long	0xf4e
	.quad	.LFB63
	.quad	.LFE63-.LFB63
	.uleb128 0x1
	.byte	0x9c
	.long	0x25e2
	.uleb128 0x21
	.long	.LASF317
	.byte	0x1
	.value	0x4ff6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1f
	.long	.LASF455
	.long	0x25e2
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.19721
	.byte	0
	.uleb128 0xa
	.long	0x221a
	.uleb128 0x25
	.long	.LASF520
	.byte	0x1
	.value	0x5652
	.long	0x13e
	.quad	.LFB64
	.quad	.LFE64-.LFB64
	.uleb128 0x1
	.byte	0x9c
	.long	0x2659
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x5653
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x5654
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x5656
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x5657
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2659
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.19858
	.byte	0
	.uleb128 0xa
	.long	0x13f7
	.uleb128 0x25
	.long	.LASF521
	.byte	0x1
	.value	0x568a
	.long	0x13e
	.quad	.LFB65
	.quad	.LFE65-.LFB65
	.uleb128 0x1
	.byte	0x9c
	.long	0x26d0
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x568b
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x568c
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x568e
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x568f
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x26d0
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.19891
	.byte	0
	.uleb128 0xa
	.long	0x149b
	.uleb128 0x25
	.long	.LASF522
	.byte	0x1
	.value	0x56c2
	.long	0x13e
	.quad	.LFB66
	.quad	.LFE66-.LFB66
	.uleb128 0x1
	.byte	0x9c
	.long	0x2747
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x56c3
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x56c4
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x56c6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x56c7
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2747
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.20296
	.byte	0
	.uleb128 0xa
	.long	0x18cd
	.uleb128 0x25
	.long	.LASF523
	.byte	0x1
	.value	0x595e
	.long	0x13e
	.quad	.LFB67
	.quad	.LFE67-.LFB67
	.uleb128 0x1
	.byte	0x9c
	.long	0x27be
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x595f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x5960
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x5962
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x5963
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x27be
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.20703
	.byte	0
	.uleb128 0xa
	.long	0x14f5
	.uleb128 0x25
	.long	.LASF524
	.byte	0x1
	.value	0x5bfa
	.long	0x13e
	.quad	.LFB68
	.quad	.LFE68-.LFB68
	.uleb128 0x1
	.byte	0x9c
	.long	0x2835
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x5bfb
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x5bfc
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x5bfe
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x5bff
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2835
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.20769
	.byte	0
	.uleb128 0xa
	.long	0x16f1
	.uleb128 0x25
	.long	.LASF525
	.byte	0x1
	.value	0x5f32
	.long	0x13e
	.quad	.LFB69
	.quad	.LFE69-.LFB69
	.uleb128 0x1
	.byte	0x9c
	.long	0x28ac
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x5f33
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x5f34
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x5f36
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x5f37
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x28ac
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.21308
	.byte	0
	.uleb128 0xa
	.long	0x24aa
	.uleb128 0x25
	.long	.LASF526
	.byte	0x1
	.value	0x6069
	.long	0x13e
	.quad	.LFB70
	.quad	.LFE70-.LFB70
	.uleb128 0x1
	.byte	0x9c
	.long	0x2923
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x606a
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x606b
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x606d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x606e
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2923
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.21412
	.byte	0
	.uleb128 0xa
	.long	0x1599
	.uleb128 0x25
	.long	.LASF527
	.byte	0x1
	.value	0x61a0
	.long	0x13e
	.quad	.LFB71
	.quad	.LFE71-.LFB71
	.uleb128 0x1
	.byte	0x9c
	.long	0x299a
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x61a1
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x61a2
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x61a4
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x61a5
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x299a
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.21483
	.byte	0
	.uleb128 0xa
	.long	0x12fb
	.uleb128 0x25
	.long	.LASF528
	.byte	0x1
	.value	0x6271
	.long	0x13e
	.quad	.LFB72
	.quad	.LFE72-.LFB72
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a11
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x6272
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x6273
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x6275
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x6276
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2a11
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.21554
	.byte	0
	.uleb128 0xa
	.long	0x13f7
	.uleb128 0x25
	.long	.LASF529
	.byte	0x1
	.value	0x6342
	.long	0x13e
	.quad	.LFB73
	.quad	.LFE73-.LFB73
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a88
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x6343
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x6344
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x6346
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x6347
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2a98
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.21692
	.byte	0
	.uleb128 0x10
	.long	0x1ce
	.long	0x2a98
	.uleb128 0x11
	.long	0x145
	.byte	0x15
	.byte	0
	.uleb128 0xa
	.long	0x2a88
	.uleb128 0x25
	.long	.LASF530
	.byte	0x1
	.value	0x64db
	.long	0x13e
	.quad	.LFB74
	.quad	.LFE74-.LFB74
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b0f
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x64dc
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x64dd
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x64df
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x64e0
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2b0f
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.21999
	.byte	0
	.uleb128 0xa
	.long	0x1697
	.uleb128 0x25
	.long	.LASF531
	.byte	0x1
	.value	0x6674
	.long	0x13e
	.quad	.LFB75
	.quad	.LFE75-.LFB75
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b86
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x6675
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x6676
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x6678
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x6679
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2b86
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.22495
	.byte	0
	.uleb128 0xa
	.long	0x24aa
	.uleb128 0x25
	.long	.LASF532
	.byte	0x1
	.value	0x68e2
	.long	0x13e
	.quad	.LFB76
	.quad	.LFE76-.LFB76
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bfd
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x68e3
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x68e4
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x68e6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x68e7
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2bfd
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.22823
	.byte	0
	.uleb128 0xa
	.long	0x1599
	.uleb128 0x25
	.long	.LASF533
	.byte	0x1
	.value	0x6b50
	.long	0x13e
	.quad	.LFB77
	.quad	.LFE77-.LFB77
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c74
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x6b51
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x6b52
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x6b54
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x6b55
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2c74
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.23127
	.byte	0
	.uleb128 0xa
	.long	0x2a88
	.uleb128 0x25
	.long	.LASF534
	.byte	0x1
	.value	0x6d50
	.long	0x13e
	.quad	.LFB78
	.quad	.LFE78-.LFB78
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ceb
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x6d51
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x6d52
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x6d54
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x6d55
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2ceb
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.23431
	.byte	0
	.uleb128 0xa
	.long	0x1697
	.uleb128 0x25
	.long	.LASF535
	.byte	0x1
	.value	0x6f50
	.long	0x13e
	.quad	.LFB79
	.quad	.LFE79-.LFB79
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d62
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x6f51
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x6f52
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x6f54
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x6f55
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2d62
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.23689
	.byte	0
	.uleb128 0xa
	.long	0x2a88
	.uleb128 0x25
	.long	.LASF536
	.byte	0x1
	.value	0x7208
	.long	0x13e
	.quad	.LFB80
	.quad	.LFE80-.LFB80
	.uleb128 0x1
	.byte	0x9c
	.long	0x2dd9
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x7209
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x720a
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x720c
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x720d
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2dd9
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.23952
	.byte	0
	.uleb128 0xa
	.long	0x1697
	.uleb128 0x25
	.long	.LASF537
	.byte	0x1
	.value	0x74c0
	.long	0x13e
	.quad	.LFB81
	.quad	.LFE81-.LFB81
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e50
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x74c1
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x74c2
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x74c4
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x74c5
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2e50
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.24175
	.byte	0
	.uleb128 0xa
	.long	0x2a88
	.uleb128 0x25
	.long	.LASF538
	.byte	0x1
	.value	0x76c0
	.long	0x13e
	.quad	.LFB82
	.quad	.LFE82-.LFB82
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ec7
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x76c1
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x76c2
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x76c4
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x76c5
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2ec7
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.24392
	.byte	0
	.uleb128 0xa
	.long	0x1697
	.uleb128 0x25
	.long	.LASF539
	.byte	0x1
	.value	0x78c0
	.long	0x13e
	.quad	.LFB83
	.quad	.LFE83-.LFB83
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f3e
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x78c1
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x78c2
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x78c4
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x78c5
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2f3e
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.24510
	.byte	0
	.uleb128 0xa
	.long	0x24aa
	.uleb128 0x25
	.long	.LASF540
	.byte	0x1
	.value	0x79f5
	.long	0x13e
	.quad	.LFB84
	.quad	.LFE84-.LFB84
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fb5
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x79f6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x79f7
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x79f9
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x79fa
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x2fb5
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.24628
	.byte	0
	.uleb128 0xa
	.long	0x1599
	.uleb128 0x25
	.long	.LASF541
	.byte	0x1
	.value	0x7b2a
	.long	0x13e
	.quad	.LFB85
	.quad	.LFE85-.LFB85
	.uleb128 0x1
	.byte	0x9c
	.long	0x302c
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x7b2b
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x7b2c
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x7b2e
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x7b2f
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x302c
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.24780
	.byte	0
	.uleb128 0xa
	.long	0x139d
	.uleb128 0x25
	.long	.LASF542
	.byte	0x1
	.value	0x7e0c
	.long	0x13e
	.quad	.LFB86
	.quad	.LFE86-.LFB86
	.uleb128 0x1
	.byte	0x9c
	.long	0x30a3
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x7e0d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x7e0e
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x7e10
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x7e11
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x30a3
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.24941
	.byte	0
	.uleb128 0xa
	.long	0x12fb
	.uleb128 0x25
	.long	.LASF543
	.byte	0x1
	.value	0x80ee
	.long	0x13e
	.quad	.LFB87
	.quad	.LFE87-.LFB87
	.uleb128 0x1
	.byte	0x9c
	.long	0x311a
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x80ef
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x80f0
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x80f2
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x80f3
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x311a
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.25014
	.byte	0
	.uleb128 0xa
	.long	0x12fb
	.uleb128 0x25
	.long	.LASF544
	.byte	0x1
	.value	0x81c0
	.long	0x13e
	.quad	.LFB88
	.quad	.LFE88-.LFB88
	.uleb128 0x1
	.byte	0x9c
	.long	0x3191
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x81c1
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x81c2
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x81c4
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x81c5
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x3191
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.25079
	.byte	0
	.uleb128 0xa
	.long	0x13f7
	.uleb128 0x25
	.long	.LASF545
	.byte	0x1
	.value	0x8292
	.long	0x13e
	.quad	.LFB89
	.quad	.LFE89-.LFB89
	.uleb128 0x1
	.byte	0x9c
	.long	0x3208
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x8293
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x8294
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x8296
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x8297
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x3208
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.25501
	.byte	0
	.uleb128 0xa
	.long	0x2a88
	.uleb128 0x25
	.long	.LASF546
	.byte	0x1
	.value	0x8fc5
	.long	0x13e
	.quad	.LFB90
	.quad	.LFE90-.LFB90
	.uleb128 0x1
	.byte	0x9c
	.long	0x327f
	.uleb128 0x21
	.long	.LASF517
	.byte	0x1
	.value	0x8fc6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF518
	.byte	0x1
	.value	0x8fc7
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.long	.LASF317
	.byte	0x1
	.value	0x8fc9
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.long	.LASF519
	.byte	0x1
	.value	0x8fca
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1f
	.long	.LASF455
	.long	0x327f
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.26956
	.byte	0
	.uleb128 0xa
	.long	0x1697
	.uleb128 0x26
	.long	.LASF547
	.byte	0x5
	.byte	0xd6
	.long	0x139
	.uleb128 0x26
	.long	.LASF548
	.byte	0x5
	.byte	0xd6
	.long	0x139
	.uleb128 0x26
	.long	.LASF549
	.byte	0x5
	.byte	0xd6
	.long	0x139
	.uleb128 0x26
	.long	.LASF550
	.byte	0x5
	.byte	0xdb
	.long	0x139
	.uleb128 0x26
	.long	.LASF551
	.byte	0x5
	.byte	0xdb
	.long	0x139
	.uleb128 0x26
	.long	.LASF552
	.byte	0x5
	.byte	0xde
	.long	0x139
	.uleb128 0x27
	.long	.LASF553
	.byte	0x5
	.value	0x19c
	.long	0x14c
	.uleb128 0x26
	.long	.LASF554
	.byte	0x7
	.byte	0x91
	.long	0x13e
	.uleb128 0x26
	.long	.LASF306
	.byte	0x7
	.byte	0xcb
	.long	0xadb
	.uleb128 0x26
	.long	.LASF555
	.byte	0xb
	.byte	0x1a
	.long	0xf06
	.uleb128 0x10
	.long	0x118c
	.long	0x3303
	.uleb128 0x11
	.long	0x145
	.byte	0x19
	.byte	0
	.uleb128 0x28
	.long	.LASF556
	.byte	0x1
	.value	0x9cf6
	.long	0x3319
	.uleb128 0x9
	.byte	0x3
	.quad	function_units
	.uleb128 0xa
	.long	0x32f3
	.uleb128 0x27
	.long	.LASF557
	.byte	0xc
	.value	0x1c8
	.long	0x13e
	.uleb128 0x28
	.long	.LASF558
	.byte	0x1
	.value	0x9d13
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	length_unit_log
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x17
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF457:
	.string	"result_ready_cost"
.LASF280:
	.string	"NOTE_INSN_EH_REGION_BEG"
.LASF454:
	.string	"insn_variable_length_p"
.LASF254:
	.string	"rtstr"
.LASF427:
	.string	"PENT_PAIR_NP"
.LASF267:
	.string	"NOTE_INSN_DELETED"
.LASF476:
	.string	"k6_load_unit_blockage_range"
.LASF182:
	.string	"UMOD"
.LASF236:
	.string	"min_align"
.LASF484:
	.string	"ppro_p01_unit_ready_cost"
.LASF320:
	.string	"varray_data_tag"
.LASF223:
	.string	"CONSTANT_P_RTX"
.LASF533:
	.string	"k6_alux_unit_blockage"
.LASF435:
	.string	"attr_athlon_fpunits"
.LASF453:
	.string	"insn_current_length"
.LASF512:
	.string	"get_attr_pent_prefix"
.LASF253:
	.string	"rtuint"
.LASF351:
	.string	"CPU_I386"
.LASF257:
	.string	"rt_cselib"
.LASF446:
	.string	"default_cost"
.LASF126:
	.string	"DEFINE_PEEPHOLE2"
.LASF12:
	.string	"rtvec_def"
.LASF444:
	.string	"multiplicity"
.LASF419:
	.string	"FP_INT_SRC_TRUE"
.LASF186:
	.string	"LSHIFTRT"
.LASF120:
	.string	"MATCH_PAR_DUP"
.LASF561:
	.string	"/home/yunqi/SPEC2006/benchspec/CPU2006/403.gcc/build/build_base_amd64-m64-gcc43-nn.0000"
.LASF181:
	.string	"UDIV"
.LASF10:
	.string	"rtvec"
.LASF434:
	.string	"ATHLON_DECODE_VECTOR"
.LASF114:
	.string	"MATCH_OPERAND"
.LASF413:
	.string	"attr_imm_disp"
.LASF447:
	.string	"max_issue_delay"
.LASF354:
	.string	"CPU_PENTIUMPRO"
.LASF488:
	.string	"pent_uv_unit_ready_cost"
.LASF467:
	.string	"athlon_ieu_unit_blockage_range"
.LASF543:
	.string	"pent_mul_unit_blockage"
.LASF497:
	.string	"pent_np_unit_blockage_range"
.LASF305:
	.string	"OP_INOUT"
.LASF203:
	.string	"UNLE"
.LASF241:
	.string	"max_after_base"
.LASF204:
	.string	"UNLT"
.LASF473:
	.string	"k6_store_unit_ready_cost"
.LASF505:
	.string	"get_attr_length_address"
.LASF350:
	.string	"attr_cpu"
.LASF545:
	.string	"pent_np_unit_blockage"
.LASF67:
	.string	"CTImode"
.LASF426:
	.string	"PENT_PAIR_PV"
.LASF412:
	.string	"MEMORY_UNKNOWN"
.LASF552:
	.string	"x86_partial_reg_dependency"
.LASF65:
	.string	"CSImode"
.LASF225:
	.string	"VEC_MERGE"
.LASF322:
	.string	"uhint"
.LASF158:
	.string	"RETURN"
.LASF323:
	.string	"generic"
.LASF14:
	.string	"elem"
.LASF519:
	.string	"casenum"
.LASF101:
	.string	"MODE_FLOAT"
.LASF538:
	.string	"pent_uv_unit_conflict_cost"
.LASF558:
	.string	"length_unit_log"
.LASF245:
	.string	"alias"
.LASF242:
	.string	"offset_unsigned"
.LASF71:
	.string	"V2SImode"
.LASF490:
	.string	"pent_u_unit_ready_cost"
.LASF398:
	.string	"MODE_QI"
.LASF145:
	.string	"CODE_LABEL"
.LASF66:
	.string	"CDImode"
.LASF151:
	.string	"UNSPEC"
.LASF546:
	.string	"pent_np_unit_conflict_cost"
.LASF144:
	.string	"BARRIER"
.LASF273:
	.string	"NOTE_INSN_LOOP_VTOP"
.LASF147:
	.string	"COND_EXEC"
.LASF161:
	.string	"CONST_INT"
.LASF418:
	.string	"FP_INT_SRC_FALSE"
.LASF157:
	.string	"CALL"
.LASF463:
	.string	"athlon_fp_unit_ready_cost"
.LASF389:
	.string	"TYPE_FXCH"
.LASF73:
	.string	"V4QImode"
.LASF136:
	.string	"ATTR"
.LASF255:
	.string	"rttype"
.LASF352:
	.string	"CPU_I486"
.LASF518:
	.string	"candidate_insn"
.LASF297:
	.string	"GR_VIRTUAL_STACK_ARGS"
.LASF503:
	.string	"get_attr_imm_disp"
.LASF72:
	.string	"V2DImode"
.LASF21:
	.string	"PROCESSOR_K6"
.LASF349:
	.string	"varray_type"
.LASF250:
	.string	"mem_attrs"
.LASF334:
	.string	"refs"
.LASF403:
	.string	"MODE_SF"
.LASF129:
	.string	"DEFINE_DELAY"
.LASF400:
	.string	"MODE_SI"
.LASF179:
	.string	"MINUS"
.LASF328:
	.string	"sched_info_tag"
.LASF535:
	.string	"ppro_p0_unit_blockage"
.LASF169:
	.string	"STRICT_LOW_PART"
.LASF496:
	.string	"pent_np_unit_ready_cost"
.LASF475:
	.string	"k6_load_unit_ready_cost"
.LASF111:
	.string	"INCLUDE"
.LASF359:
	.string	"TYPE_OTHER"
.LASF498:
	.string	"function_units_used"
.LASF293:
	.string	"GR_FRAME_POINTER"
.LASF335:
	.string	"freq"
.LASF207:
	.string	"ZERO_EXTEND"
.LASF210:
	.string	"FLOAT_TRUNCATE"
.LASF406:
	.string	"MODE_TI"
.LASF481:
	.string	"k6_alux_unit_blockage_range"
.LASF290:
	.string	"GR_PC"
.LASF82:
	.string	"V2SFmode"
.LASF342:
	.string	"varray_data"
.LASF211:
	.string	"FLOAT"
.LASF37:
	.string	"machine_mode"
.LASF428:
	.string	"attr_ppro_uops"
.LASF507:
	.string	"get_attr_memory"
.LASF405:
	.string	"MODE_XF"
.LASF260:
	.string	"rtmem"
.LASF393:
	.string	"TYPE_MMX"
.LASF220:
	.string	"RANGE_REG"
.LASF258:
	.string	"rtbit"
.LASF3:
	.string	"call"
.LASF44:
	.string	"TImode"
.LASF196:
	.string	"PRE_MODIFY"
.LASF450:
	.string	"max_blockage"
.LASF432:
	.string	"attr_athlon_decode"
.LASF421:
	.string	"PENT_PREFIX_FALSE"
.LASF391:
	.string	"TYPE_CLD"
.LASF209:
	.string	"FLOAT_EXTEND"
.LASF332:
	.string	"last_note_uid"
.LASF443:
	.string	"bitmask"
.LASF6:
	.string	"in_struct"
.LASF268:
	.string	"NOTE_INSN_BLOCK_BEG"
.LASF438:
	.string	"ATHLON_FPUNITS_MUL"
.LASF42:
	.string	"SImode"
.LASF153:
	.string	"ADDR_VEC"
.LASF83:
	.string	"V2DFmode"
.LASF235:
	.string	"LAST_AND_UNUSED_RTX_CODE"
.LASF524:
	.string	"athlon_vectordec_unit_blockage"
.LASF249:
	.string	"align"
.LASF172:
	.string	"SYMBOL_REF"
.LASF266:
	.string	"NOTE_INSN_BIAS"
.LASF288:
	.string	"NOTE_INSN_MAX"
.LASF386:
	.string	"TYPE_FPSPC"
.LASF358:
	.string	"attr_type"
.LASF125:
	.string	"DEFINE_INSN_AND_SPLIT"
.LASF177:
	.string	"COMPARE"
.LASF205:
	.string	"LTGT"
.LASF471:
	.string	"k6_fpu_unit_ready_cost"
.LASF437:
	.string	"ATHLON_FPUNITS_STORE"
.LASF217:
	.string	"HIGH"
.LASF174:
	.string	"QUEUED"
.LASF1:
	.string	"mode"
.LASF43:
	.string	"DImode"
.LASF318:
	.string	"const_equiv_data"
.LASF78:
	.string	"V8HImode"
.LASF423:
	.string	"attr_pent_pair"
.LASF195:
	.string	"POST_INC"
.LASF494:
	.string	"pent_mul_unit_ready_cost"
.LASF458:
	.string	"athlon_load_unit_ready_cost"
.LASF17:
	.string	"PROCESSOR_I386"
.LASF422:
	.string	"PENT_PREFIX_TRUE"
.LASF56:
	.string	"TFmode"
.LASF29:
	.string	"unsigned char"
.LASF516:
	.string	"get_attr_type"
.LASF23:
	.string	"PROCESSOR_PENTIUM4"
.LASF339:
	.string	"basic_block"
.LASF39:
	.string	"BImode"
.LASF193:
	.string	"PRE_INC"
.LASF53:
	.string	"SFmode"
.LASF388:
	.string	"TYPE_FCMP"
.LASF309:
	.string	"constraints"
.LASF380:
	.string	"TYPE_FMOV"
.LASF483:
	.string	"ppro_p2_unit_ready_cost"
.LASF142:
	.string	"JUMP_INSN"
.LASF24:
	.string	"PROCESSOR_max"
.LASF105:
	.string	"MODE_COMPLEX_FLOAT"
.LASF259:
	.string	"rttree"
.LASF536:
	.string	"ppro_p0_unit_conflict_cost"
.LASF265:
	.string	"insn_note"
.LASF307:
	.string	"operand"
.LASF284:
	.string	"NOTE_INSN_RANGE_END"
.LASF124:
	.string	"DEFINE_SPLIT"
.LASF163:
	.string	"CONST_VECTOR"
.LASF121:
	.string	"MATCH_INSN"
.LASF54:
	.string	"DFmode"
.LASF500:
	.string	"get_attr_athlon_fpunits"
.LASF460:
	.string	"athlon_fp_muladd_unit_ready_cost"
.LASF27:
	.string	"size_t"
.LASF155:
	.string	"PREFETCH"
.LASF362:
	.string	"TYPE_NEGNOT"
.LASF379:
	.string	"TYPE_ICMOV"
.LASF48:
	.string	"PSImode"
.LASF385:
	.string	"TYPE_FDIV"
.LASF461:
	.string	"athlon_fp_add_unit_ready_cost"
.LASF219:
	.string	"RANGE_INFO"
.LASF506:
	.string	"get_attr_length_immediate"
.LASF553:
	.string	"ix86_cpu"
.LASF319:
	.string	"rtunion_def"
.LASF374:
	.string	"TYPE_SETCC"
.LASF378:
	.string	"TYPE_CALLV"
.LASF135:
	.string	"DEFINE_ATTR"
.LASF137:
	.string	"SET_ATTR"
.LASF62:
	.string	"TCmode"
.LASF365:
	.string	"TYPE_TEST"
.LASF534:
	.string	"k6_alux_unit_conflict_cost"
.LASF212:
	.string	"UNSIGNED_FLOAT"
.LASF261:
	.string	"cselib_val_struct"
.LASF287:
	.string	"NOTE_INSN_EXPECTED_VALUE"
.LASF409:
	.string	"MEMORY_LOAD"
.LASF184:
	.string	"ROTATE"
.LASF208:
	.string	"TRUNCATE"
.LASF59:
	.string	"SCmode"
.LASF451:
	.string	"blockage_range_function"
.LASF298:
	.string	"GR_VIRTUAL_STACK_DYNAMIC"
.LASF49:
	.string	"PDImode"
.LASF529:
	.string	"k6_load_unit_blockage"
.LASF325:
	.string	"bitmap"
.LASF278:
	.string	"NOTE_INSN_DELETED_LABEL"
.LASF112:
	.string	"EXPR_LIST"
.LASF139:
	.string	"EQ_ATTR"
.LASF92:
	.string	"CCGOCmode"
.LASF170:
	.string	"CONCAT"
.LASF18:
	.string	"PROCESSOR_I486"
.LASF238:
	.string	"min_after_vec"
.LASF176:
	.string	"COND"
.LASF502:
	.string	"get_attr_fp_int_src"
.LASF102:
	.string	"MODE_PARTIAL_INT"
.LASF15:
	.string	"tree"
.LASF60:
	.string	"DCmode"
.LASF387:
	.string	"TYPE_FCMOV"
.LASF127:
	.string	"DEFINE_COMBINE"
.LASF559:
	.string	"GNU C 4.8.1 -mtune=generic -march=x86-64 -g -fno-strict-aliasing -fstack-protector"
.LASF185:
	.string	"ASHIFTRT"
.LASF384:
	.string	"TYPE_FMUL"
.LASF90:
	.string	"CCmode"
.LASF19:
	.string	"PROCESSOR_PENTIUM"
.LASF271:
	.string	"NOTE_INSN_LOOP_END"
.LASF88:
	.string	"V16SFmode"
.LASF407:
	.string	"attr_memory"
.LASF285:
	.string	"NOTE_INSN_LIVE"
.LASF132:
	.string	"DEFINE_COND_EXEC"
.LASF128:
	.string	"DEFINE_EXPAND"
.LASF345:
	.string	"elements_used"
.LASF477:
	.string	"k6_branch_unit_ready_cost"
.LASF79:
	.string	"V8SImode"
.LASF141:
	.string	"INSN"
.LASF252:
	.string	"rtint"
.LASF171:
	.string	"LABEL_REF"
.LASF341:
	.string	"elt_list"
.LASF275:
	.string	"NOTE_INSN_FUNCTION_END"
.LASF474:
	.string	"k6_store_unit_blockage_range"
.LASF0:
	.string	"code"
.LASF452:
	.string	"blockage_function"
.LASF515:
	.string	"get_attr_prefix_data16"
.LASF547:
	.string	"x86_double_with_add"
.LASF91:
	.string	"CCGCmode"
.LASF167:
	.string	"SCRATCH"
.LASF77:
	.string	"V8QImode"
.LASF456:
	.string	"insn_default_length"
.LASF80:
	.string	"V8DImode"
.LASF108:
	.string	"MAX_MODE_CLASS"
.LASF370:
	.string	"TYPE_ISHIFT"
.LASF526:
	.string	"k6_fpu_unit_conflict_cost"
.LASF367:
	.string	"TYPE_IMOVX"
.LASF206:
	.string	"SIGN_EXTEND"
.LASF228:
	.string	"VEC_DUPLICATE"
.LASF420:
	.string	"attr_pent_prefix"
.LASF489:
	.string	"pent_uv_unit_blockage_range"
.LASF521:
	.string	"athlon_muldiv_unit_conflict_cost"
.LASF487:
	.string	"pent_v_unit_ready_cost"
.LASF316:
	.string	"n_alternatives"
.LASF246:
	.string	"expr"
.LASF281:
	.string	"NOTE_INSN_EH_REGION_END"
.LASF310:
	.string	"operand_mode"
.LASF86:
	.string	"V8SFmode"
.LASF317:
	.string	"insn"
.LASF532:
	.string	"k6_alu_unit_conflict_cost"
.LASF150:
	.string	"ASM_OPERANDS"
.LASF527:
	.string	"k6_store_unit_blockage"
.LASF509:
	.string	"get_attr_mode"
.LASF94:
	.string	"CCZmode"
.LASF272:
	.string	"NOTE_INSN_LOOP_CONT"
.LASF520:
	.string	"athlon_muldiv_unit_blockage"
.LASF465:
	.string	"athlon_muldiv_unit_blockage_range"
.LASF36:
	.string	"processor_type"
.LASF382:
	.string	"TYPE_FOP1"
.LASF508:
	.string	"get_attr_modrm"
.LASF353:
	.string	"CPU_PENTIUM"
.LASF154:
	.string	"ADDR_DIFF_VEC"
.LASF539:
	.string	"pent_u_unit_blockage"
.LASF542:
	.string	"fpu_unit_conflict_cost"
.LASF216:
	.string	"ZERO_EXTRACT"
.LASF321:
	.string	"hint"
.LASF149:
	.string	"ASM_INPUT"
.LASF199:
	.string	"ORDERED"
.LASF87:
	.string	"V8DFmode"
.LASF344:
	.string	"num_elements"
.LASF213:
	.string	"UNSIGNED_FIX"
.LASF556:
	.string	"function_units"
.LASF408:
	.string	"MEMORY_NONE"
.LASF495:
	.string	"pent_mul_unit_blockage_range"
.LASF95:
	.string	"CCFPmode"
.LASF376:
	.string	"TYPE_POP"
.LASF470:
	.string	"athlon_vectordec_unit_blockage_range"
.LASF369:
	.string	"TYPE_INCDEC"
.LASF347:
	.string	"name"
.LASF113:
	.string	"INSN_LIST"
.LASF221:
	.string	"RANGE_VAR"
.LASF340:
	.string	"changes_mode"
.LASF100:
	.string	"MODE_INT"
.LASF346:
	.string	"element_size"
.LASF2:
	.string	"jump"
.LASF491:
	.string	"pent_u_unit_blockage_range"
.LASF499:
	.string	"accum"
.LASF222:
	.string	"RANGE_LIVE"
.LASF70:
	.string	"V2HImode"
.LASF9:
	.string	"frame_related"
.LASF306:
	.string	"recog_data"
.LASF327:
	.string	"const_equiv"
.LASF401:
	.string	"MODE_DI"
.LASF433:
	.string	"ATHLON_DECODE_DIRECT"
.LASF331:
	.string	"last_uid"
.LASF256:
	.string	"rt_addr_diff_vec_flags"
.LASF295:
	.string	"GR_ARG_POINTER"
.LASF16:
	.string	"sizetype"
.LASF231:
	.string	"SS_MINUS"
.LASF381:
	.string	"TYPE_FOP"
.LASF118:
	.string	"MATCH_PARALLEL"
.LASF75:
	.string	"V4SImode"
.LASF5:
	.string	"volatil"
.LASF448:
	.string	"ready_cost_function"
.LASF30:
	.string	"short unsigned int"
.LASF442:
	.string	"function_unit_desc"
.LASF31:
	.string	"signed char"
.LASF117:
	.string	"MATCH_OPERATOR"
.LASF513:
	.string	"get_attr_prefix_0f"
.LASF343:
	.string	"varray_head_tag"
.LASF415:
	.string	"IMM_DISP_TRUE"
.LASF541:
	.string	"fpu_unit_blockage"
.LASF233:
	.string	"SS_TRUNCATE"
.LASF555:
	.string	"insn_addresses_"
.LASF237:
	.string	"base_after_vec"
.LASF122:
	.string	"DEFINE_INSN"
.LASF525:
	.string	"k6_fpu_unit_blockage"
.LASF76:
	.string	"V4DImode"
.LASF296:
	.string	"GR_VIRTUAL_INCOMING_ARGS"
.LASF549:
	.string	"x86_movx"
.LASF416:
	.string	"IMM_DISP_UNKNOWN"
.LASF131:
	.string	"DEFINE_ASM_ATTRIBUTES"
.LASF232:
	.string	"US_MINUS"
.LASF417:
	.string	"attr_fp_int_src"
.LASF215:
	.string	"SIGN_EXTRACT"
.LASF8:
	.string	"integrated"
.LASF337:
	.string	"live_length"
.LASF156:
	.string	"CLOBBER"
.LASF106:
	.string	"MODE_VECTOR_INT"
.LASF224:
	.string	"CALL_PLACEHOLDER"
.LASF84:
	.string	"V4SFmode"
.LASF303:
	.string	"OP_IN"
.LASF554:
	.string	"which_alternative"
.LASF377:
	.string	"TYPE_CALL"
.LASF462:
	.string	"athlon_fp_mul_unit_ready_cost"
.LASF178:
	.string	"PLUS"
.LASF194:
	.string	"POST_DEC"
.LASF41:
	.string	"HImode"
.LASF264:
	.string	"rtunion"
.LASF274:
	.string	"NOTE_INSN_LOOP_END_TOP_COND"
.LASF104:
	.string	"MODE_COMPLEX_INT"
.LASF373:
	.string	"TYPE_IBR"
.LASF26:
	.string	"long int"
.LASF300:
	.string	"GR_VIRTUAL_CFA"
.LASF482:
	.string	"ppro_p34_unit_ready_cost"
.LASF425:
	.string	"PENT_PAIR_PU"
.LASF397:
	.string	"MODE_NONE"
.LASF55:
	.string	"XFmode"
.LASF85:
	.string	"V4DFmode"
.LASF4:
	.string	"unchanging"
.LASF269:
	.string	"NOTE_INSN_BLOCK_END"
.LASF315:
	.string	"n_dups"
.LASF109:
	.string	"rtx_code"
.LASF459:
	.string	"athlon_fp_store_unit_ready_cost"
.LASF486:
	.string	"ppro_p0_unit_blockage_range"
.LASF360:
	.string	"TYPE_MULTI"
.LASF110:
	.string	"UNKNOWN"
.LASF152:
	.string	"UNSPEC_VOLATILE"
.LASF312:
	.string	"dup_loc"
.LASF523:
	.string	"athlon_ieu_unit_conflict_cost"
.LASF277:
	.string	"NOTE_INSN_EPILOGUE_BEG"
.LASF28:
	.string	"long unsigned int"
.LASF11:
	.string	"rtx_def"
.LASF493:
	.string	"fpu_unit_blockage_range"
.LASF51:
	.string	"HFmode"
.LASF159:
	.string	"TRAP_IF"
.LASF336:
	.string	"deaths"
.LASF314:
	.string	"n_operands"
.LASF395:
	.string	"attr_mode"
.LASF63:
	.string	"CQImode"
.LASF33:
	.string	"char"
.LASF445:
	.string	"simultaneity"
.LASF61:
	.string	"XCmode"
.LASF528:
	.string	"k6_store_unit_conflict_cost"
.LASF187:
	.string	"ROTATERT"
.LASF173:
	.string	"ADDRESSOF"
.LASF69:
	.string	"V2QImode"
.LASF424:
	.string	"PENT_PAIR_UV"
.LASF47:
	.string	"PHImode"
.LASF329:
	.string	"reg_info_def"
.LASF68:
	.string	"COImode"
.LASF364:
	.string	"TYPE_ICMP"
.LASF192:
	.string	"PRE_DEC"
.LASF366:
	.string	"TYPE_IMOV"
.LASF383:
	.string	"TYPE_FSGN"
.LASF414:
	.string	"IMM_DISP_FALSE"
.LASF276:
	.string	"NOTE_INSN_PROLOGUE_END"
.LASF294:
	.string	"GR_HARD_FRAME_POINTER"
.LASF302:
	.string	"op_type"
.LASF99:
	.string	"MODE_RANDOM"
.LASF230:
	.string	"US_PLUS"
.LASF89:
	.string	"BLKmode"
.LASF480:
	.string	"k6_alux_unit_ready_cost"
.LASF58:
	.string	"HCmode"
.LASF492:
	.string	"fpu_unit_ready_cost"
.LASF431:
	.string	"PPRO_UOPS_MANY"
.LASF164:
	.string	"CONST_STRING"
.LASF227:
	.string	"VEC_CONCAT"
.LASF372:
	.string	"TYPE_IDIV"
.LASF248:
	.string	"size"
.LASF560:
	.string	"insn-attrtab.c"
.LASF239:
	.string	"max_after_vec"
.LASF140:
	.string	"ATTR_FLAG"
.LASF96:
	.string	"CCFPUmode"
.LASF469:
	.string	"athlon_vectordec_unit_ready_cost"
.LASF548:
	.string	"x86_partial_reg_stall"
.LASF130:
	.string	"DEFINE_FUNCTION_UNIT"
.LASF439:
	.string	"ATHLON_FPUNITS_ADD"
.LASF134:
	.string	"ADDRESS"
.LASF466:
	.string	"athlon_ieu_unit_ready_cost"
.LASF22:
	.string	"PROCESSOR_ATHLON"
.LASF324:
	.string	"cptr"
.LASF551:
	.string	"x86_qimode_math"
.LASF262:
	.string	"bitmap_head_def"
.LASF468:
	.string	"athlon_directdec_unit_ready_cost"
.LASF338:
	.string	"calls_crossed"
.LASF234:
	.string	"US_TRUNCATE"
.LASF289:
	.string	"global_rtl_index"
.LASF229:
	.string	"SS_PLUS"
.LASF191:
	.string	"UMAX"
.LASF243:
	.string	"scale"
.LASF40:
	.string	"QImode"
.LASF348:
	.string	"data"
.LASF292:
	.string	"GR_STACK_POINTER"
.LASF440:
	.string	"ATHLON_FPUNITS_MULADD"
.LASF52:
	.string	"TQFmode"
.LASF411:
	.string	"MEMORY_BOTH"
.LASF20:
	.string	"PROCESSOR_PENTIUMPRO"
.LASF240:
	.string	"min_after_base"
.LASF371:
	.string	"TYPE_IMUL"
.LASF410:
	.string	"MEMORY_STORE"
.LASF326:
	.string	"sched"
.LASF557:
	.string	"flag_pic"
.LASF45:
	.string	"OImode"
.LASF189:
	.string	"SMAX"
.LASF301:
	.string	"GR_MAX"
.LASF226:
	.string	"VEC_SELECT"
.LASF540:
	.string	"pent_u_unit_conflict_cost"
.LASF522:
	.string	"athlon_ieu_unit_blockage"
.LASF485:
	.string	"ppro_p0_unit_ready_cost"
.LASF107:
	.string	"MODE_VECTOR_FLOAT"
.LASF197:
	.string	"POST_MODIFY"
.LASF402:
	.string	"MODE_UNKNOWNFP"
.LASF123:
	.string	"DEFINE_PEEPHOLE"
.LASF34:
	.string	"long long unsigned int"
.LASF283:
	.string	"NOTE_INSN_RANGE_BEG"
.LASF247:
	.string	"offset"
.LASF244:
	.string	"addr_diff_vec_flags"
.LASF361:
	.string	"TYPE_ALU1"
.LASF119:
	.string	"MATCH_OP_DUP"
.LASF133:
	.string	"SEQUENCE"
.LASF472:
	.string	"k6_fpu_unit_blockage_range"
.LASF50:
	.string	"QFmode"
.LASF392:
	.string	"TYPE_SSE"
.LASF511:
	.string	"get_attr_pent_pair"
.LASF333:
	.string	"sets"
.LASF160:
	.string	"RESX"
.LASF479:
	.string	"k6_alu_unit_blockage_range"
.LASF148:
	.string	"PARALLEL"
.LASF356:
	.string	"CPU_ATHLON"
.LASF13:
	.string	"num_elem"
.LASF198:
	.string	"UNORDERED"
.LASF97:
	.string	"MAX_MACHINE_MODE"
.LASF390:
	.string	"TYPE_STR"
.LASF115:
	.string	"MATCH_SCRATCH"
.LASF165:
	.string	"CONST"
.LASF214:
	.string	"SQRT"
.LASF291:
	.string	"GR_CC0"
.LASF98:
	.string	"mode_class"
.LASF180:
	.string	"MULT"
.LASF531:
	.string	"k6_alu_unit_blockage"
.LASF103:
	.string	"MODE_CC"
.LASF46:
	.string	"PQImode"
.LASF517:
	.string	"executing_insn"
.LASF355:
	.string	"CPU_K6"
.LASF143:
	.string	"CALL_INSN"
.LASF168:
	.string	"SUBREG"
.LASF404:
	.string	"MODE_DF"
.LASF81:
	.string	"V16QImode"
.LASF35:
	.string	"long long int"
.LASF394:
	.string	"TYPE_FISTP"
.LASF510:
	.string	"get_attr_ppro_uops"
.LASF57:
	.string	"QCmode"
.LASF166:
	.string	"VALUE"
.LASF146:
	.string	"NOTE"
.LASF304:
	.string	"OP_OUT"
.LASF436:
	.string	"ATHLON_FPUNITS_NONE"
.LASF190:
	.string	"UMIN"
.LASF116:
	.string	"MATCH_DUP"
.LASF544:
	.string	"pent_mul_unit_conflict_cost"
.LASF550:
	.string	"x86_himode_math"
.LASF263:
	.string	"basic_block_def"
.LASF375:
	.string	"TYPE_PUSH"
.LASF464:
	.string	"athlon_muldiv_unit_ready_cost"
.LASF441:
	.string	"ATHLON_FPUNITS_ANY"
.LASF7:
	.string	"used"
.LASF270:
	.string	"NOTE_INSN_LOOP_BEG"
.LASF64:
	.string	"CHImode"
.LASF449:
	.string	"conflict_cost_function"
.LASF286:
	.string	"NOTE_INSN_BASIC_BLOCK"
.LASF138:
	.string	"SET_ATTR_ALTERNATIVE"
.LASF530:
	.string	"k6_load_unit_conflict_cost"
.LASF162:
	.string	"CONST_DOUBLE"
.LASF330:
	.string	"first_uid"
.LASF93:
	.string	"CCNOmode"
.LASF396:
	.string	"MODE_UNKNOWN"
.LASF74:
	.string	"V4HImode"
.LASF368:
	.string	"TYPE_LEA"
.LASF200:
	.string	"UNEQ"
.LASF183:
	.string	"ASHIFT"
.LASF188:
	.string	"SMIN"
.LASF455:
	.string	"__FUNCTION__"
.LASF175:
	.string	"IF_THEN_ELSE"
.LASF313:
	.string	"dup_num"
.LASF282:
	.string	"NOTE_INSN_REPEATED_LINE_NUMBER"
.LASF430:
	.string	"PPRO_UOPS_FEW"
.LASF537:
	.string	"pent_uv_unit_blockage"
.LASF501:
	.string	"get_attr_athlon_decode"
.LASF279:
	.string	"NOTE_INSN_FUNCTION_BEG"
.LASF399:
	.string	"MODE_HI"
.LASF357:
	.string	"CPU_PENTIUM4"
.LASF25:
	.string	"unsigned int"
.LASF562:
	.string	"tree_node"
.LASF514:
	.string	"get_attr_prefix_rep"
.LASF429:
	.string	"PPRO_UOPS_ONE"
.LASF201:
	.string	"UNGE"
.LASF308:
	.string	"operand_loc"
.LASF32:
	.string	"short int"
.LASF202:
	.string	"UNGT"
.LASF311:
	.string	"operand_type"
.LASF504:
	.string	"get_attr_i387"
.LASF38:
	.string	"VOIDmode"
.LASF478:
	.string	"k6_alu_unit_ready_cost"
.LASF299:
	.string	"GR_VIRTUAL_OUTGOING_ARGS"
.LASF218:
	.string	"LO_SUM"
.LASF251:
	.string	"rtwint"
.LASF363:
	.string	"TYPE_ALU"
	.ident	"GCC: (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1"
	.section	.note.GNU-stack,"",@progbits
