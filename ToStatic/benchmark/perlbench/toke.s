	.file	"toke.c"
# GNU C (Ubuntu/Linaro 4.8.1-10ubuntu9) version 4.8.1 (x86_64-linux-gnu)
#	compiled by GNU C version 4.8.1, GMP version 5.1.2, MPFR version 3.1.1-p2, MPC version 1.0.1
# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
# options passed:  -imultiarch x86_64-linux-gnu -D SPEC_CPU -D NDEBUG
# -D PERL_CORE -D SPEC_CPU_LP64 -D SPEC_CPU_LINUX_X64 toke.c -mtune=generic
# -march=x86-64 -g -fverbose-asm -fno-strict-aliasing -fstack-protector
# -Wformat -Wformat-security
# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg -fcommon
# -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
# -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
# -fident -finline-atomics -fira-hoist-pressure -fira-share-save-slots
# -fira-share-spill-slots -fivopts -fkeep-static-consts
# -fleading-underscore -fmath-errno -fmerge-debug-strings
# -fmove-loop-invariants -fpeephole -fprefetch-loop-arrays
# -freg-struct-return -fsched-critical-path-heuristic
# -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
# -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
# -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fshow-column
# -fsigned-zeros -fsplit-ivs-in-unroller -fstack-protector
# -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
# -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
# -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
# -ftree-parallelize-loops= -ftree-phiprop -ftree-pta -ftree-reassoc
# -ftree-scev-cprop -ftree-slp-vectorize -ftree-vect-loop-version
# -funit-at-a-time -funwind-tables -fverbose-asm -fzero-initialized-in-bss
# -m128bit-long-double -m64 -m80387 -maccumulate-outgoing-args
# -malign-stringops -mfancy-math-387 -mfp-ret-in-387 -mfxsr -mglibc
# -mieee-fp -mlong-double-80 -mmmx -mno-sse4 -mpush-args -mred-zone -msse
# -msse2 -mtls-direct-seg-refs

	.text
.Ltext0:
	.data
	.align 16
	.type	ident_too_long, @object
	.size	ident_too_long, 20
ident_too_long:
	.string	"Identifier too long"
	.align 32
	.type	c_without_g, @object
	.size	c_without_g, 45
c_without_g:
	.string	"Use of /c modifier is meaningless without /g"
	.align 32
	.type	c_in_subst, @object
	.size	c_in_subst, 42
c_in_subst:
	.string	"Use of /c modifier is meaningless in s///"
	.text
	.type	S_ao, @function
S_ao:
.LFB2:
	.file 1 "toke.c"
	.loc 1 217 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movl	%edi, -4(%rbp)	# toketype, toketype
	.loc 1 218 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.0
	movzbl	(%rax), %eax	# *PL_bufptr.0_2, D.28660
	cmpb	$61, %al	#, D.28660
	jne	.L2	#,
	.loc 1 219 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.1
	addq	$1, %rax	#, PL_bufptr.2
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.2, PL_bufptr
	.loc 1 220 0
	cmpl	$305, -4(%rbp)	#, toketype
	jne	.L3	#,
	.loc 1 221 0
	movl	$163, PL_yylval(%rip)	#, PL_yylval.ival
	jmp	.L4	#
.L3:
	.loc 1 222 0
	cmpl	$304, -4(%rbp)	#, toketype
	jne	.L4	#,
	.loc 1 223 0
	movl	$164, PL_yylval(%rip)	#, PL_yylval.ival
.L4:
	.loc 1 224 0
	movl	$303, -4(%rbp)	#, toketype
.L2:
	.loc 1 226 0
	movl	-4(%rbp), %eax	# toketype, D.28661
	.loc 1 227 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	S_ao, .-S_ao
	.section	.rodata
	.align 8
.LC0:
	.string	"%s found where operator expected"
	.align 8
.LC1:
	.string	"\t(Missing semicolon on previous line?)\n"
	.align 8
.LC2:
	.string	"\t(Do you need to predeclare %.*s?)\n"
	.align 8
.LC3:
	.string	"\t(Missing operator before %.*s?)\n"
	.text
	.type	S_no_op, @function
S_no_op:
.LFB3:
	.loc 1 244 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# what, what
	movq	%rsi, -48(%rbp)	# s, s
	.loc 1 245 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, tmp153
	movq	%rax, -8(%rbp)	# tmp153, oldbp
	.loc 1 246 0
	movq	PL_oldbufptr(%rip), %rdx	# PL_oldbufptr, PL_oldbufptr.3
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.4
	cmpq	%rax, %rdx	# PL_linestart.4, PL_oldbufptr.3
	sete	%al	#, D.28662
	movb	%al, -17(%rbp)	# D.28662, is_first
	.loc 1 248 0
	cmpq	$0, -48(%rbp)	#, s
	jne	.L7	#,
	.loc 1 249 0
	movq	-8(%rbp), %rax	# oldbp, tmp154
	movq	%rax, -48(%rbp)	# tmp154, s
	jmp	.L8	#
.L7:
	.loc 1 251 0
	movq	-48(%rbp), %rax	# s, tmp155
	movq	%rax, PL_bufptr(%rip)	# tmp155, PL_bufptr
.L8:
	.loc 1 252 0
	movq	-40(%rbp), %rax	# what, tmp156
	movq	%rax, %rsi	# tmp156,
	movl	$.LC0, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.28663,
	call	Perl_yywarn	#
	.loc 1 253 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.5
	movq	80(%rax), %rax	# PL_curcop.5_15->cop_warnings, D.28664
	testq	%rax, %rax	# D.28664
	je	.L9	#,
	.loc 1 253 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.6
	movq	80(%rax), %rax	# PL_curcop.6_17->cop_warnings, D.28664
	cmpq	$16, %rax	#, D.28664
	je	.L9	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.7
	movq	80(%rax), %rax	# PL_curcop.7_19->cop_warnings, D.28664
	cmpq	$32, %rax	#, D.28664
	je	.L10	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.8
	movq	80(%rax), %rax	# PL_curcop.8_21->cop_warnings, D.28664
	movq	(%rax), %rax	# _22->sv_any, D.28665
	movq	(%rax), %rax	# MEM[(struct XPV *)_23].xpv_pv, D.28663
	addq	$7, %rax	#, D.28663
	movzbl	(%rax), %eax	# *_25, D.28666
	movsbl	%al, %eax	# D.28666, D.28667
	andl	$1, %eax	#, D.28667
	testl	%eax, %eax	# D.28667
	je	.L10	#,
.L9:
	.loc 1 254 0 is_stmt 1
	cmpb	$0, -17(%rbp)	#, is_first
	je	.L11	#,
	.loc 1 255 0
	movl	$.LC1, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	jmp	.L10	#
.L11:
	.loc 1 257 0
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.9
	testq	%rax, %rax	# PL_oldoldbufptr.9
	je	.L12	#,
	.loc 1 257 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.10
	movzbl	37(%rax), %eax	# PL_curcop.10_30->op_private, D.28668
	movzbl	%al, %eax	# D.28668, D.28667
	andl	$8, %eax	#, D.28667
	testl	%eax, %eax	# D.28667
	jne	.L13	#,
	.loc 1 257 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.11
	testq	%rax, %rax	# PL_linestr.11
	je	.L14	#,
	.loc 1 257 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.12
	movl	12(%rax), %eax	# PL_linestr.12_35->sv_flags, D.28669
	andl	$536870912, %eax	#, D.28669
	testl	%eax, %eax	# D.28669
	je	.L14	#,
	.loc 1 257 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.13
	movzbl	37(%rax), %eax	# PL_curcop.13_38->op_private, D.28668
	movzbl	%al, %eax	# D.28668, D.28667
	andl	$8, %eax	#, D.28667
	testl	%eax, %eax	# D.28667
	je	.L15	#,
.L14:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.14
	andl	$8388608, %eax	#, D.28669
	testl	%eax, %eax	# D.28669
	je	.L13	#,
.L15:
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.15
	movzbl	(%rax), %eax	# MEM[(U8 *)PL_oldoldbufptr.15_44], D.28668
	cmpb	$-65, %al	#, D.28668
	ja	.L16	#,
.L13:
	.loc 1 257 0 discriminator 2
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.17
	movzbl	(%rax), %eax	# *PL_oldoldbufptr.17_53, D.28666
	cmpb	$64, %al	#, D.28666
	jle	.L17	#,
	.loc 1 257 0 discriminator 1
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.18
	movzbl	(%rax), %eax	# *PL_oldoldbufptr.18_55, D.28666
	cmpb	$90, %al	#, D.28666
	jle	.L18	#,
.L17:
	.loc 1 257 0 discriminator 2
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.19
	movzbl	(%rax), %eax	# *PL_oldoldbufptr.19_57, D.28666
	cmpb	$96, %al	#, D.28666
	jle	.L19	#,
	.loc 1 257 0 discriminator 1
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.20
	movzbl	(%rax), %eax	# *PL_oldoldbufptr.20_59, D.28666
	cmpb	$122, %al	#, D.28666
	jle	.L18	#,
.L19:
	.loc 1 257 0 discriminator 2
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.21
	movzbl	(%rax), %eax	# *PL_oldoldbufptr.21_61, D.28666
	cmpb	$95, %al	#, D.28666
	jne	.L20	#,
.L18:
	.loc 1 257 0 discriminator 1
	movl	$1, %eax	#, iftmp.16
	jmp	.L21	#
.L20:
	.loc 1 257 0 discriminator 3
	movl	$0, %eax	#, iftmp.16
.L21:
	.loc 1 257 0 discriminator 4
	andl	$1, %eax	#, D.28662
	testb	%al, %al	# D.28662
	je	.L12	#,
	.loc 1 257 0 discriminator 1
	jmp	.L22	#
.L16:
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.23
	movq	%rax, %rdi	# PL_oldoldbufptr.23,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28666
	je	.L23	#,
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.24
	movq	%rax, %rdi	# PL_oldoldbufptr.24,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28666
	jne	.L23	#,
	.loc 1 257 0 discriminator 3
	movl	$1, %eax	#, iftmp.22
	jmp	.L24	#
.L23:
	.loc 1 257 0 discriminator 2
	movl	$0, %eax	#, iftmp.22
.L24:
	.loc 1 257 0 discriminator 4
	andl	$1, %eax	#, D.28662
	testb	%al, %al	# D.28662
	je	.L12	#,
.L22:
.LBB2:
	.loc 1 259 0 is_stmt 1
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, tmp157
	movq	%rax, -16(%rbp)	# tmp157, t
	jmp	.L25	#
.L37:
	.loc 1 259 0 is_stmt 0 discriminator 1
	addq	$1, -16(%rbp)	#, t
.L25:
	movq	-16(%rbp), %rax	# t, tmp158
	movzbl	(%rax), %eax	# *t_2, D.28666
	testb	%al, %al	# D.28666
	je	.L26	#,
	.loc 1 259 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.25
	movzbl	37(%rax), %eax	# PL_curcop.25_68->op_private, D.28668
	movzbl	%al, %eax	# D.28668, D.28667
	andl	$8, %eax	#, D.28667
	testl	%eax, %eax	# D.28667
	jne	.L27	#,
	.loc 1 259 0 discriminator 4
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.26
	testq	%rax, %rax	# PL_linestr.26
	je	.L28	#,
	.loc 1 259 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.27
	movl	12(%rax), %eax	# PL_linestr.27_73->sv_flags, D.28669
	andl	$536870912, %eax	#, D.28669
	testl	%eax, %eax	# D.28669
	je	.L28	#,
	.loc 1 259 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.28
	movzbl	37(%rax), %eax	# PL_curcop.28_76->op_private, D.28668
	movzbl	%al, %eax	# D.28668, D.28667
	andl	$8, %eax	#, D.28667
	testl	%eax, %eax	# D.28667
	je	.L29	#,
.L28:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.29
	andl	$8388608, %eax	#, D.28669
	testl	%eax, %eax	# D.28669
	je	.L27	#,
.L29:
	movq	-16(%rbp), %rax	# t, tmp159
	movzbl	(%rax), %eax	# MEM[(U8 *)t_2], D.28668
	cmpb	$-65, %al	#, D.28668
	ja	.L30	#,
.L27:
	.loc 1 259 0 discriminator 3
	movq	-16(%rbp), %rax	# t, tmp160
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$64, %al	#, D.28666
	jle	.L31	#,
	.loc 1 259 0 discriminator 1
	movq	-16(%rbp), %rax	# t, tmp161
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$90, %al	#, D.28666
	jle	.L32	#,
.L31:
	.loc 1 259 0 discriminator 2
	movq	-16(%rbp), %rax	# t, tmp162
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$96, %al	#, D.28666
	jle	.L33	#,
	.loc 1 259 0 discriminator 1
	movq	-16(%rbp), %rax	# t, tmp163
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$122, %al	#, D.28666
	jle	.L32	#,
.L33:
	.loc 1 259 0 discriminator 2
	movq	-16(%rbp), %rax	# t, tmp164
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$47, %al	#, D.28666
	jle	.L34	#,
	.loc 1 259 0 discriminator 1
	movq	-16(%rbp), %rax	# t, tmp165
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$57, %al	#, D.28666
	jle	.L32	#,
.L34:
	.loc 1 259 0 discriminator 2
	movq	-16(%rbp), %rax	# t, tmp166
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$95, %al	#, D.28666
	jne	.L35	#,
.L32:
	.loc 1 259 0 discriminator 1
	movl	$1, %eax	#, iftmp.30
	jmp	.L36	#
.L35:
	.loc 1 259 0 discriminator 3
	movl	$0, %eax	#, iftmp.30
.L36:
	.loc 1 259 0 discriminator 4
	andl	$1, %eax	#, D.28662
	testb	%al, %al	# D.28662
	jne	.L37	#,
	.loc 1 259 0 discriminator 2
	jmp	.L38	#
.L30:
	.loc 1 259 0 discriminator 1
	movq	-16(%rbp), %rax	# t, tmp167
	movq	%rax, %rdi	# tmp167,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28666
	jne	.L37	#,
.L38:
	.loc 1 259 0 discriminator 3
	movq	-16(%rbp), %rax	# t, tmp168
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$58, %al	#, D.28666
	je	.L37	#,
.L26:
	.loc 1 260 0 is_stmt 1
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.31
	cmpq	%rax, -16(%rbp)	# PL_bufptr.31, t
	jae	.L39	#,
	.loc 1 260 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# t, tmp169
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$32, %al	#, D.28666
	je	.L40	#,
	movq	-16(%rbp), %rax	# t, tmp170
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$9, %al	#, D.28666
	je	.L40	#,
	movq	-16(%rbp), %rax	# t, tmp171
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$10, %al	#, D.28666
	je	.L40	#,
	movq	-16(%rbp), %rax	# t, tmp172
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$13, %al	#, D.28666
	je	.L40	#,
	movq	-16(%rbp), %rax	# t, tmp173
	movzbl	(%rax), %eax	# *t_2, D.28666
	cmpb	$12, %al	#, D.28666
	jne	.L39	#,
.L40:
	.loc 1 261 0 is_stmt 1
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.32
	movq	-16(%rbp), %rcx	# t, t.33
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.34
	subq	%rdx, %rcx	# PL_oldoldbufptr.35, D.28670
	movq	%rcx, %rdx	# D.28670, D.28670
	movq	%rax, %rcx	# PL_oldoldbufptr.32,
	movl	$.LC2, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.LBE2:
	.loc 1 257 0
	jmp	.L10	#
.L39:
	jmp	.L10	#
.L12:
	.loc 1 267 0
	movq	-48(%rbp), %rdx	# s, s.36
	movq	-8(%rbp), %rax	# oldbp, oldbp.37
	subq	%rax, %rdx	# oldbp.37, D.28670
	movq	-8(%rbp), %rax	# oldbp, tmp174
	movq	%rax, %rcx	# tmp174,
	movl	$.LC3, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L10:
	.loc 1 271 0
	movq	-8(%rbp), %rax	# oldbp, tmp175
	movq	%rax, PL_bufptr(%rip)	# tmp175, PL_bufptr
	.loc 1 272 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	S_no_op, .-S_no_op
	.section	.rodata
	.align 8
.LC4:
	.string	"Can't find string terminator %c%s%c anywhere before EOF"
	.text
	.type	S_missingterm, @function
S_missingterm:
.LFB4:
	.loc 1 285 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# s, s
	.loc 1 288 0
	cmpq	$0, -40(%rbp)	#, s
	je	.L42	#,
.LBB3:
	.loc 1 289 0
	movq	-40(%rbp), %rax	# s, tmp76
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp76,
	call	strrchr	#
	movq	%rax, -8(%rbp)	# tmp77, nl
	.loc 1 290 0
	cmpq	$0, -8(%rbp)	#, nl
	je	.L43	#,
	.loc 1 291 0
	movq	-8(%rbp), %rax	# nl, tmp78
	movb	$0, (%rax)	#, *nl_5
.LBE3:
	jmp	.L44	#
.L43:
	jmp	.L44	#
.L42:
	.loc 1 297 0
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.38
	.loc 1 293 0
	cmpl	$31, %eax	#, PL_multi_close.38
	jle	.L45	#,
	.loc 1 297 0
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.39
	cmpl	$127, %eax	#, PL_multi_close.39
	jne	.L46	#,
.L45:
	.loc 1 300 0
	movb	$94, -16(%rbp)	#, tmpbuf
	.loc 1 301 0
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.41
	cmpl	$96, %eax	#, PL_multi_close.41
	jle	.L47	#,
	.loc 1 301 0 is_stmt 0 discriminator 1
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.42
	cmpl	$122, %eax	#, PL_multi_close.42
	jg	.L47	#,
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.43
	subl	$32, %eax	#, D.28676
	xorl	$64, %eax	#, iftmp.40
	jmp	.L48	#
.L47:
	.loc 1 301 0 discriminator 2
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.44
	xorl	$64, %eax	#, iftmp.40
.L48:
	.loc 1 301 0 discriminator 3
	movb	%al, -15(%rbp)	# iftmp.40, tmpbuf
	.loc 1 302 0 is_stmt 1 discriminator 3
	movb	$0, -14(%rbp)	#, tmpbuf
	.loc 1 303 0 discriminator 3
	leaq	-16(%rbp), %rax	#, tmp79
	movq	%rax, -40(%rbp)	# tmp79, s
	jmp	.L44	#
.L46:
	.loc 1 306 0
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.45
	movb	%al, -16(%rbp)	# D.28675, tmpbuf
	.loc 1 307 0
	movb	$0, -15(%rbp)	#, tmpbuf
	.loc 1 308 0
	leaq	-16(%rbp), %rax	#, tmp80
	movq	%rax, -40(%rbp)	# tmp80, s
.L44:
	.loc 1 310 0
	movq	-40(%rbp), %rax	# s, tmp81
	movl	$34, %esi	#,
	movq	%rax, %rdi	# tmp81,
	call	strchr	#
	testq	%rax, %rax	# D.28677
	je	.L49	#,
	.loc 1 310 0 is_stmt 0 discriminator 1
	movl	$39, %eax	#, iftmp.46
	jmp	.L50	#
.L49:
	.loc 1 310 0 discriminator 2
	movl	$34, %eax	#, iftmp.46
.L50:
	.loc 1 310 0 discriminator 3
	movb	%al, -17(%rbp)	# iftmp.46, q
	.loc 1 311 0 is_stmt 1 discriminator 3
	movsbl	-17(%rbp), %ecx	# q, D.28678
	movsbl	-17(%rbp), %eax	# q, D.28678
	movq	-40(%rbp), %rdx	# s, tmp82
	movl	%eax, %esi	# D.28678,
	movl	$.LC4, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 312 0 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	S_missingterm, .-S_missingterm
	.section	.rodata
.LC5:
	.string	"Use of %s is deprecated"
	.text
	.globl	Perl_deprecate
	.type	Perl_deprecate, @function
Perl_deprecate:
.LFB5:
	.loc 1 320 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# s, s
	.loc 1 321 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.47
	movq	80(%rax), %rax	# PL_curcop.47_1->cop_warnings, D.28680
	testq	%rax, %rax	# D.28680
	je	.L52	#,
	.loc 1 321 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.48
	movq	80(%rax), %rax	# PL_curcop.48_3->cop_warnings, D.28680
	cmpq	$32, %rax	#, D.28680
	je	.L52	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.49
	movq	80(%rax), %rax	# PL_curcop.49_5->cop_warnings, D.28680
	cmpq	$16, %rax	#, D.28680
	je	.L53	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.50
	movq	80(%rax), %rax	# PL_curcop.50_7->cop_warnings, D.28680
	movq	(%rax), %rax	# _8->sv_any, D.28681
	movq	(%rax), %rax	# MEM[(struct XPV *)_9].xpv_pv, D.28682
	movzbl	(%rax), %eax	# *_10, D.28683
	movsbl	%al, %eax	# D.28683, D.28684
	andl	$16, %eax	#, D.28684
	testl	%eax, %eax	# D.28684
	jne	.L53	#,
.L52:
	.loc 1 321 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.51
	movq	80(%rax), %rax	# PL_curcop.51_14->cop_warnings, D.28680
	testq	%rax, %rax	# D.28680
	jne	.L51	#,
	.loc 1 321 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.52
	movzbl	%al, %eax	# PL_dowarn.52, D.28684
	andl	$1, %eax	#, D.28684
	testl	%eax, %eax	# D.28684
	je	.L51	#,
.L53:
	.loc 1 322 0 is_stmt 1
	movq	-8(%rbp), %rax	# s, tmp77
	movq	%rax, %rdx	# tmp77,
	movl	$.LC5, %esi	#,
	movl	$2, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L51:
	.loc 1 323 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	Perl_deprecate, .-Perl_deprecate
	.globl	Perl_deprecate_old
	.type	Perl_deprecate_old, @function
Perl_deprecate_old:
.LFB6:
	.loc 1 327 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# s, s
	.loc 1 336 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.53
	movq	80(%rax), %rax	# PL_curcop.53_1->cop_warnings, D.28686
	testq	%rax, %rax	# D.28686
	je	.L56	#,
	.loc 1 336 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.54
	movq	80(%rax), %rax	# PL_curcop.54_3->cop_warnings, D.28686
	cmpq	$32, %rax	#, D.28686
	je	.L56	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.55
	movq	80(%rax), %rax	# PL_curcop.55_5->cop_warnings, D.28686
	cmpq	$16, %rax	#, D.28686
	je	.L57	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.56
	movq	80(%rax), %rax	# PL_curcop.56_7->cop_warnings, D.28686
	movq	(%rax), %rax	# _8->sv_any, D.28687
	movq	(%rax), %rax	# MEM[(struct XPV *)_9].xpv_pv, D.28688
	movzbl	(%rax), %eax	# *_10, D.28689
	movsbl	%al, %eax	# D.28689, D.28690
	andl	$16, %eax	#, D.28690
	testl	%eax, %eax	# D.28690
	jne	.L57	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.57
	movq	80(%rax), %rax	# PL_curcop.57_14->cop_warnings, D.28686
	movq	(%rax), %rax	# _15->sv_any, D.28687
	movq	(%rax), %rax	# MEM[(struct XPV *)_16].xpv_pv, D.28688
	addq	$7, %rax	#, D.28688
	movzbl	(%rax), %eax	# *_18, D.28689
	movsbl	%al, %eax	# D.28689, D.28690
	andl	$1, %eax	#, D.28690
	testl	%eax, %eax	# D.28690
	jne	.L57	#,
.L56:
	.loc 1 336 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.58
	movq	80(%rax), %rax	# PL_curcop.58_22->cop_warnings, D.28686
	testq	%rax, %rax	# D.28686
	jne	.L55	#,
	.loc 1 336 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.59
	movzbl	%al, %eax	# PL_dowarn.59, D.28690
	andl	$1, %eax	#, D.28690
	testl	%eax, %eax	# D.28690
	je	.L55	#,
.L57:
	.loc 1 337 0 is_stmt 1
	movq	-8(%rbp), %rax	# s, tmp85
	movq	%rax, %rdx	# tmp85,
	movl	$.LC5, %esi	#,
	movl	$7170, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L55:
	.loc 1 339 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	Perl_deprecate_old, .-Perl_deprecate_old
	.section	.rodata
.LC6:
	.string	"comma-less variable list"
	.text
	.type	S_depcom, @function
S_depcom:
.LFB7:
	.loc 1 348 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 349 0
	movl	$.LC6, %edi	#,
	call	Perl_deprecate_old	#
	.loc 1 350 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	S_depcom, .-S_depcom
	.section	.rodata
.LC7:
	.string	"\n;"
	.text
	.globl	Perl_lex_start
	.type	Perl_lex_start, @function
Perl_lex_start:
.LFB8:
	.loc 1 398 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# line, line
	.loc 1 402 0
	movl	$PL_lex_dojoin, %edi	#,
	call	Perl_save_I32	#
	.loc 1 403 0
	movl	$PL_lex_brackets, %edi	#,
	call	Perl_save_I32	#
	.loc 1 404 0
	movl	$PL_lex_casemods, %edi	#,
	call	Perl_save_I32	#
	.loc 1 405 0
	movl	$PL_lex_starts, %edi	#,
	call	Perl_save_I32	#
	.loc 1 406 0
	movl	$PL_lex_state, %edi	#,
	call	Perl_save_I32	#
	.loc 1 407 0
	movl	$PL_lex_inpat, %edi	#,
	call	Perl_save_vptr	#
	.loc 1 408 0
	movl	$PL_lex_inwhat, %edi	#,
	call	Perl_save_I32	#
	.loc 1 409 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.60
	testl	%eax, %eax	# PL_lex_state.60
	jne	.L61	#,
.LBB4:
	.loc 1 410 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, tmp112
	movl	%eax, -20(%rbp)	# tmp112, toke
	.loc 1 411 0
	jmp	.L62	#
.L63:
	.loc 1 412 0
	movl	-20(%rbp), %eax	# toke, tmp114
	cltq
	salq	$2, %rax	#, tmp115
	addq	$PL_nexttype, %rax	#, D.28692
	movq	%rax, %rdi	# D.28692,
	call	Perl_save_I32	#
	.loc 1 413 0
	movl	-20(%rbp), %eax	# toke, tmp117
	cltq
	salq	$3, %rax	#, tmp118
	addq	$PL_nextval, %rax	#, D.28693
	movq	%rax, %rdi	# D.28693,
	call	Perl_save_vptr	#
.L62:
	.loc 1 411 0 discriminator 1
	subl	$1, -20(%rbp)	#, toke
	cmpl	$0, -20(%rbp)	#, toke
	jns	.L63	#,
	.loc 1 415 0
	movl	$PL_nexttoke, %edi	#,
	call	Perl_save_I32	#
.L61:
.LBE4:
	.loc 1 417 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.61
	addq	$72, %rax	#, D.28694
	movq	%rax, %rdi	# D.28694,
	call	Perl_save_I32	#
	.loc 1 418 0
	movl	$PL_bufptr, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 419 0
	movl	$PL_bufend, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 420 0
	movl	$PL_oldbufptr, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 421 0
	movl	$PL_oldoldbufptr, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 422 0
	movl	$PL_last_lop, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 423 0
	movl	$PL_last_uni, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 424 0
	movl	$PL_linestart, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 425 0
	movl	$PL_linestr, %edi	#,
	call	Perl_save_sptr	#
	.loc 1 426 0
	movl	$PL_lex_brackstack, %edi	#,
	call	Perl_save_generic_pvref	#
	.loc 1 427 0
	movl	$PL_lex_casestack, %edi	#,
	call	Perl_save_generic_pvref	#
	.loc 1 428 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.62
	movq	%rax, %rsi	# PL_rsfp.62,
	movl	$restore_rsfp, %edi	#,
	call	Perl_save_destructor_x	#
	.loc 1 429 0
	movl	$PL_lex_stuff, %edi	#,
	call	Perl_save_sptr	#
	.loc 1 430 0
	movl	$PL_lex_defer, %edi	#,
	call	Perl_save_I32	#
	.loc 1 431 0
	movl	$PL_sublex_info+4, %edi	#,
	call	Perl_save_I32	#
	.loc 1 432 0
	movl	$PL_lex_repl, %edi	#,
	call	Perl_save_sptr	#
	.loc 1 433 0
	movl	$PL_expect, %edi	#,
	call	Perl_save_int	#
	.loc 1 434 0
	movl	$PL_lex_expect, %edi	#,
	call	Perl_save_int	#
	.loc 1 436 0
	movl	$10, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 437 0
	movl	$0, PL_lex_defer(%rip)	#, PL_lex_defer
	.loc 1 438 0
	movl	$3, PL_expect(%rip)	#, PL_expect
	.loc 1 439 0
	movl	$0, PL_lex_brackets(%rip)	#, PL_lex_brackets
	.loc 1 440 0
	movl	$120, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, PL_lex_brackstack(%rip)	# PL_lex_brackstack.63, PL_lex_brackstack
	.loc 1 441 0
	movl	$12, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, PL_lex_casestack(%rip)	# PL_lex_casestack.64, PL_lex_casestack
	.loc 1 442 0
	movl	$0, PL_lex_casemods(%rip)	#, PL_lex_casemods
	.loc 1 443 0
	movq	PL_lex_casestack(%rip), %rax	# PL_lex_casestack, PL_lex_casestack.65
	movb	$0, (%rax)	#, *PL_lex_casestack.65_13
	.loc 1 444 0
	movl	$0, PL_lex_dojoin(%rip)	#, PL_lex_dojoin
	.loc 1 445 0
	movl	$0, PL_lex_starts(%rip)	#, PL_lex_starts
	.loc 1 446 0
	movq	$0, PL_lex_stuff(%rip)	#, PL_lex_stuff
	.loc 1 447 0
	movq	$0, PL_lex_repl(%rip)	#, PL_lex_repl
	.loc 1 448 0
	movq	$0, PL_lex_inpat(%rip)	#, PL_lex_inpat
	.loc 1 449 0
	movl	$0, PL_nexttoke(%rip)	#, PL_nexttoke
	.loc 1 450 0
	movl	$0, PL_lex_inwhat(%rip)	#, PL_lex_inwhat
	.loc 1 451 0
	movl	$0, PL_sublex_info+4(%rip)	#, PL_sublex_info.sub_inwhat
	.loc 1 452 0
	movq	-40(%rbp), %rax	# line, tmp119
	movq	%rax, PL_linestr(%rip)	# tmp119, PL_linestr
	.loc 1 453 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.66
	movl	12(%rax), %eax	# PL_linestr.66_15->sv_flags, D.28695
	andl	$8388608, %eax	#, D.28695
	testl	%eax, %eax	# D.28695
	je	.L64	#,
	.loc 1 454 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.67
	movq	%rax, %rdi	# PL_linestr.67,
	call	Perl_newSVsv	#
	movq	%rax, %rdi	# D.28696,
	call	Perl_sv_2mortal	#
	movq	%rax, PL_linestr(%rip)	# PL_linestr.68, PL_linestr
.L64:
	.loc 1 455 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.70
	movl	12(%rax), %eax	# PL_linestr.70_21->sv_flags, D.28695
	andl	$262144, %eax	#, D.28695
	testl	%eax, %eax	# D.28695
	je	.L65	#,
	.loc 1 455 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.71
	movq	(%rax), %rax	# PL_linestr.71_24->sv_any, D.28697
	movq	8(%rax), %rax	# MEM[(struct XPV *)_25].xpv_cur, len.72
	movq	%rax, -16(%rbp)	# len.72, len
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.73
	movq	(%rax), %rax	# PL_linestr.73_27->sv_any, D.28697
	movq	(%rax), %rax	# MEM[(struct XPV *)_28].xpv_pv, iftmp.69
	jmp	.L66	#
.L65:
	.loc 1 455 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.74
	leaq	-16(%rbp), %rcx	#, tmp120
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp120,
	movq	%rax, %rdi	# PL_linestr.74,
	call	Perl_sv_2pv_flags	#
.L66:
	.loc 1 455 0 discriminator 3
	movq	%rax, -8(%rbp)	# iftmp.69, s
	.loc 1 456 0 is_stmt 1 discriminator 3
	movq	-16(%rbp), %rax	# len, len.75
	testq	%rax, %rax	# len.75
	je	.L67	#,
	.loc 1 456 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# len, len.76
	leaq	-1(%rax), %rdx	#, D.28698
	movq	-8(%rbp), %rax	# s, tmp121
	addq	%rdx, %rax	# D.28698, D.28699
	movzbl	(%rax), %eax	# *_36, D.28700
	cmpb	$59, %al	#, D.28700
	je	.L68	#,
.L67:
	.loc 1 457 0 is_stmt 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.77
	movl	12(%rax), %eax	# PL_linestr.77_38->sv_flags, D.28695
	andl	$2048, %eax	#, D.28695
	testl	%eax, %eax	# D.28695
	jne	.L69	#,
	.loc 1 458 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.78
	movq	%rax, %rdi	# PL_linestr.78,
	call	Perl_newSVsv	#
	movq	%rax, %rdi	# D.28696,
	call	Perl_sv_2mortal	#
	movq	%rax, PL_linestr(%rip)	# PL_linestr.79, PL_linestr
.L69:
	.loc 1 459 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.80
	movl	$2, %ecx	#,
	movl	$2, %edx	#,
	movl	$.LC7, %esi	#,
	movq	%rax, %rdi	# PL_linestr.80,
	call	Perl_sv_catpvn_flags	#
.L68:
	.loc 1 461 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.81
	movq	PL_linestr(%rip), %rdx	# PL_linestr, PL_linestr.82
	movl	12(%rdx), %edx	# PL_linestr.82_46->sv_flags, D.28695
	andb	$247, %dh	#, D.28695
	movl	%edx, 12(%rax)	# D.28695, PL_linestr.81_45->sv_flags
	.loc 1 462 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.83
	movq	(%rax), %rax	# PL_linestr.83_49->sv_any, D.28697
	movq	(%rax), %rax	# MEM[(struct XPV *)_50].xpv_pv, PL_linestart.84
	movq	%rax, PL_linestart(%rip)	# PL_linestart.84, PL_linestart
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.85
	movq	%rax, PL_bufptr(%rip)	# PL_linestart.85, PL_bufptr
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.86
	movq	%rax, PL_oldbufptr(%rip)	# PL_bufptr.86, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.87
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.87, PL_oldoldbufptr
	.loc 1 463 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.88
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.89
	movq	(%rax), %rax	# PL_linestr.89_56->sv_any, D.28697
	movq	8(%rax), %rax	# MEM[(struct XPV *)_57].xpv_cur, D.28701
	addq	%rdx, %rax	# PL_bufptr.88, PL_bufend.90
	movq	%rax, PL_bufend(%rip)	# PL_bufend.90, PL_bufend
	.loc 1 464 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.91
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.91, PL_last_lop
	.loc 1 465 0
	movq	$0, PL_rsfp(%rip)	#, PL_rsfp
	.loc 1 466 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	Perl_lex_start, .-Perl_lex_start
	.globl	Perl_lex_end
	.type	Perl_lex_end, @function
Perl_lex_end:
.LFB9:
	.loc 1 476 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 477 0
	movb	$0, PL_doextract(%rip)	#, PL_doextract
	.loc 1 478 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	Perl_lex_end, .-Perl_lex_end
	.section	.rodata
.LC8:
	.string	"line"
	.text
	.type	S_incline, @function
S_incline:
.LFB10:
	.loc 1 492 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# s, s
	.loc 1 498 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.92
	movl	72(%rax), %edx	# PL_curcop.92_10->cop_line, D.28703
	addl	$1, %edx	#, D.28703
	movl	%edx, 72(%rax)	# D.28703, PL_curcop.92_10->cop_line
	.loc 1 499 0
	movq	-56(%rbp), %rax	# s, s.93
	leaq	1(%rax), %rdx	#, tmp110
	movq	%rdx, -56(%rbp)	# tmp110, s
	movzbl	(%rax), %eax	# *s.93_14, D.28704
	cmpb	$35, %al	#, D.28704
	je	.L72	#,
	.loc 1 500 0
	jmp	.L71	#
.L72:
	.loc 1 501 0
	jmp	.L74	#
.L75:
	.loc 1 501 0 is_stmt 0 discriminator 2
	addq	$1, -56(%rbp)	#, s
.L74:
	.loc 1 501 0 discriminator 1
	movq	-56(%rbp), %rax	# s, tmp111
	movzbl	(%rax), %eax	# *s_1, D.28704
	cmpb	$32, %al	#, D.28704
	je	.L75	#,
	.loc 1 501 0 discriminator 3
	movq	-56(%rbp), %rax	# s, tmp112
	movzbl	(%rax), %eax	# *s_1, D.28704
	cmpb	$9, %al	#, D.28704
	je	.L75	#,
	.loc 1 502 0 is_stmt 1
	movq	-56(%rbp), %rax	# s, tmp113
	movl	$4, %edx	#,
	movl	$.LC8, %esi	#,
	movq	%rax, %rdi	# tmp113,
	call	strncmp	#
	testl	%eax, %eax	# D.28705
	jne	.L76	#,
	.loc 1 503 0
	addq	$4, -56(%rbp)	#, s
	.loc 1 506 0
	movq	-56(%rbp), %rax	# s, tmp114
	movzbl	(%rax), %eax	# *s_20, D.28704
	cmpb	$32, %al	#, D.28704
	je	.L78	#,
	jmp	.L100	#
.L76:
	.loc 1 505 0
	jmp	.L71	#
.L100:
	.loc 1 506 0 discriminator 1
	movq	-56(%rbp), %rax	# s, tmp115
	movzbl	(%rax), %eax	# *s_20, D.28704
	cmpb	$9, %al	#, D.28704
	jne	.L79	#,
.L78:
	.loc 1 507 0
	addq	$1, -56(%rbp)	#, s
	.loc 1 510 0
	jmp	.L80	#
.L79:
	.loc 1 509 0
	jmp	.L71	#
.L81:
	.loc 1 510 0 discriminator 2
	addq	$1, -56(%rbp)	#, s
.L80:
	.loc 1 510 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# s, tmp116
	movzbl	(%rax), %eax	# *s_2, D.28704
	cmpb	$32, %al	#, D.28704
	je	.L81	#,
	.loc 1 510 0 discriminator 3
	movq	-56(%rbp), %rax	# s, tmp117
	movzbl	(%rax), %eax	# *s_2, D.28704
	cmpb	$9, %al	#, D.28704
	je	.L81	#,
	.loc 1 511 0 is_stmt 1
	movq	-56(%rbp), %rax	# s, tmp118
	movzbl	(%rax), %eax	# *s_2, D.28704
	cmpb	$47, %al	#, D.28704
	jle	.L82	#,
	.loc 1 511 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# s, tmp119
	movzbl	(%rax), %eax	# *s_2, D.28704
	cmpb	$57, %al	#, D.28704
	jle	.L83	#,
.L82:
	.loc 1 512 0 is_stmt 1
	jmp	.L71	#
.L83:
	.loc 1 513 0
	movq	-56(%rbp), %rax	# s, tmp120
	movq	%rax, -24(%rbp)	# tmp120, n
	.loc 1 514 0
	jmp	.L84	#
.L86:
	.loc 1 515 0
	addq	$1, -56(%rbp)	#, s
.L84:
	.loc 1 514 0 discriminator 1
	movq	-56(%rbp), %rax	# s, tmp121
	movzbl	(%rax), %eax	# *s_3, D.28704
	cmpb	$47, %al	#, D.28704
	jle	.L85	#,
	.loc 1 514 0 is_stmt 0 discriminator 2
	movq	-56(%rbp), %rax	# s, tmp122
	movzbl	(%rax), %eax	# *s_3, D.28704
	cmpb	$57, %al	#, D.28704
	jle	.L86	#,
.L85:
	.loc 1 516 0 is_stmt 1
	jmp	.L87	#
.L88:
	.loc 1 517 0
	addq	$1, -56(%rbp)	#, s
.L87:
	.loc 1 516 0 discriminator 1
	movq	-56(%rbp), %rax	# s, tmp123
	movzbl	(%rax), %eax	# *s_4, D.28704
	cmpb	$32, %al	#, D.28704
	je	.L88	#,
	.loc 1 516 0 is_stmt 0 discriminator 2
	movq	-56(%rbp), %rax	# s, tmp124
	movzbl	(%rax), %eax	# *s_4, D.28704
	cmpb	$9, %al	#, D.28704
	je	.L88	#,
	.loc 1 518 0 is_stmt 1
	movq	-56(%rbp), %rax	# s, tmp125
	movzbl	(%rax), %eax	# *s_4, D.28704
	cmpb	$34, %al	#, D.28704
	jne	.L89	#,
	.loc 1 518 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# s, tmp126
	addq	$1, %rax	#, D.28706
	movl	$34, %esi	#,
	movq	%rax, %rdi	# D.28706,
	call	strchr	#
	movq	%rax, -40(%rbp)	# tmp127, t
	cmpq	$0, -40(%rbp)	#, t
	je	.L89	#,
	.loc 1 519 0 is_stmt 1
	addq	$1, -56(%rbp)	#, s
	.loc 1 520 0
	movq	-40(%rbp), %rax	# t, tmp131
	addq	$1, %rax	#, tmp130
	movq	%rax, -32(%rbp)	# tmp130, e
	.loc 1 526 0
	jmp	.L94	#
.L89:
	.loc 1 523 0
	movq	-56(%rbp), %rax	# s, tmp132
	movq	%rax, -40(%rbp)	# tmp132, t
	jmp	.L91	#
.L93:
	.loc 1 523 0 is_stmt 0 discriminator 1
	addq	$1, -40(%rbp)	#, t
.L91:
	movq	-40(%rbp), %rax	# t, tmp133
	movzbl	(%rax), %eax	# *t_6, D.28704
	cmpb	$32, %al	#, D.28704
	je	.L92	#,
	.loc 1 523 0 discriminator 2
	movq	-40(%rbp), %rax	# t, tmp134
	movzbl	(%rax), %eax	# *t_6, D.28704
	cmpb	$9, %al	#, D.28704
	je	.L92	#,
	.loc 1 523 0 discriminator 1
	movq	-40(%rbp), %rax	# t, tmp135
	movzbl	(%rax), %eax	# *t_6, D.28704
	cmpb	$10, %al	#, D.28704
	je	.L92	#,
	movq	-40(%rbp), %rax	# t, tmp136
	movzbl	(%rax), %eax	# *t_6, D.28704
	cmpb	$13, %al	#, D.28704
	je	.L92	#,
	movq	-40(%rbp), %rax	# t, tmp137
	movzbl	(%rax), %eax	# *t_6, D.28704
	cmpb	$12, %al	#, D.28704
	jne	.L93	#,
.L92:
	.loc 1 524 0 is_stmt 1
	movq	-40(%rbp), %rax	# t, tmp138
	movq	%rax, -32(%rbp)	# tmp138, e
	.loc 1 526 0
	jmp	.L94	#
.L95:
	.loc 1 527 0
	addq	$1, -32(%rbp)	#, e
.L94:
	.loc 1 526 0 discriminator 1
	movq	-32(%rbp), %rax	# e, tmp139
	movzbl	(%rax), %eax	# *e_9, D.28704
	cmpb	$32, %al	#, D.28704
	je	.L95	#,
	.loc 1 526 0 is_stmt 0 discriminator 2
	movq	-32(%rbp), %rax	# e, tmp140
	movzbl	(%rax), %eax	# *e_9, D.28704
	cmpb	$9, %al	#, D.28704
	je	.L95	#,
	.loc 1 526 0 discriminator 1
	movq	-32(%rbp), %rax	# e, tmp141
	movzbl	(%rax), %eax	# *e_9, D.28704
	cmpb	$13, %al	#, D.28704
	je	.L95	#,
	movq	-32(%rbp), %rax	# e, tmp142
	movzbl	(%rax), %eax	# *e_9, D.28704
	cmpb	$12, %al	#, D.28704
	je	.L95	#,
	.loc 1 528 0 is_stmt 1
	movq	-32(%rbp), %rax	# e, tmp143
	movzbl	(%rax), %eax	# *e_9, D.28704
	cmpb	$10, %al	#, D.28704
	je	.L96	#,
	.loc 1 528 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# e, tmp144
	movzbl	(%rax), %eax	# *e_9, D.28704
	testb	%al, %al	# D.28704
	je	.L96	#,
	.loc 1 529 0 is_stmt 1
	jmp	.L71	#
.L96:
	.loc 1 531 0
	movq	-40(%rbp), %rax	# t, tmp145
	movzbl	(%rax), %eax	# *t_7, tmp146
	movb	%al, -41(%rbp)	# tmp146, ch
	.loc 1 532 0
	movq	-40(%rbp), %rax	# t, tmp147
	movb	$0, (%rax)	#, *t_7
	.loc 1 533 0
	movq	-40(%rbp), %rdx	# t, t.94
	movq	-56(%rbp), %rax	# s, s.95
	subq	%rax, %rdx	# s.95, D.28707
	movq	%rdx, %rax	# D.28707, D.28707
	testq	%rax, %rax	# D.28707
	jle	.L97	#,
	.loc 1 534 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.96
	movq	56(%rax), %rax	# PL_curcop.96_57->cop_filegv, D.28708
	movq	%rax, %rdi	# D.28708,
	call	Perl_sv_free	#
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.97
	movq	$0, 56(%rax)	#, PL_curcop.97_59->cop_filegv
	.loc 1 535 0
	movq	-56(%rbp), %rax	# s, tmp148
	movq	%rax, %rdi	# tmp148,
	call	Perl_gv_fetchfile	#
	movq	%rax, PL_Sv(%rip)	# PL_Sv.98, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.100
	testq	%rax, %rax	# PL_Sv.100
	je	.L99	#,
	.loc 1 535 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.101
	movl	8(%rax), %edx	# PL_Sv.101_62->sv_refcnt, D.28703
	addl	$1, %edx	#, D.28703
	movl	%edx, 8(%rax)	# D.28703, PL_Sv.101_62->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.101_62->sv_refcnt, D.28703
	testl	%eax, %eax	# D.28703
	je	.L99	#,
	.loc 1 535 0
	nop
.L99:
	.loc 1 535 0 discriminator 4
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.102
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.103
	movq	%rdx, 56(%rax)	# PL_Sv.103, PL_curcop.102_68->cop_filegv
.L97:
	.loc 1 537 0 is_stmt 1
	movq	-40(%rbp), %rax	# t, tmp149
	movzbl	-41(%rbp), %edx	# ch, tmp150
	movb	%dl, (%rax)	# tmp150, *t_7
	.loc 1 538 0
	movq	PL_curcop(%rip), %rbx	# PL_curcop, PL_curcop.104
	movq	-24(%rbp), %rax	# n, tmp151
	movq	%rax, %rdi	# tmp151,
	call	atoi	#
	subl	$1, %eax	#, D.28705
	movl	%eax, 72(%rbx)	# D.28703, PL_curcop.104_70->cop_line
.L71:
	.loc 1 539 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	S_incline, .-S_incline
	.section	.rodata
	.align 8
.LC9:
	.string	";}continue{print or die qq(-p destination: $!\\n);}"
.LC10:
	.string	";}"
.LC11:
	.string	";"
	.text
	.type	S_skipspace, @function
S_skipspace:
.LFB11:
	.loc 1 549 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# s, s
	.loc 1 550 0
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.105
	testl	%eax, %eax	# PL_lex_formbrack.105
	je	.L102	#,
	.loc 1 550 0 is_stmt 0 discriminator 1
	movl	PL_lex_brackets(%rip), %edx	# PL_lex_brackets, PL_lex_brackets.106
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.107
	cmpl	%eax, %edx	# PL_lex_formbrack.107, PL_lex_brackets.106
	jg	.L102	#,
	.loc 1 551 0 is_stmt 1
	jmp	.L103	#
.L105:
	.loc 1 552 0
	addq	$1, %rbx	#, s
.L103:
	.loc 1 551 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.108
	cmpq	%rax, %rbx	# PL_bufend.108, s
	jae	.L104	#,
	.loc 1 551 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_1, D.28711
	cmpb	$32, %al	#, D.28711
	je	.L105	#,
	.loc 1 551 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1, D.28711
	cmpb	$9, %al	#, D.28711
	je	.L105	#,
.L104:
	.loc 1 553 0 is_stmt 1
	movq	%rbx, %rax	# s, D.28710
	jmp	.L106	#
.L102:
.LBB5:
	.loc 1 558 0
	movq	$0, -64(%rbp)	#, oldloplen
	movq	$0, -56(%rbp)	#, oldunilen
	.loc 1 559 0
	jmp	.L107	#
.L109:
	.loc 1 560 0
	movq	%rbx, %rax	# s, s.109
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.109_28, D.28711
	cmpb	$10, %al	#, D.28711
	jne	.L107	#,
	.loc 1 560 0 is_stmt 0 discriminator 1
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.110
	testl	%eax, %eax	# PL_in_eval.110
	je	.L107	#,
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.111
	testq	%rax, %rax	# PL_rsfp.111
	jne	.L107	#,
	.loc 1 561 0 is_stmt 1
	movq	%rbx, %rdi	# s,
	call	S_incline	#
.L107:
	.loc 1 559 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.112
	cmpq	%rax, %rbx	# PL_bufend.112, s
	jae	.L108	#,
	.loc 1 559 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.28711
	cmpb	$32, %al	#, D.28711
	je	.L109	#,
	.loc 1 559 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.28711
	cmpb	$9, %al	#, D.28711
	je	.L109	#,
	movzbl	(%rbx), %eax	# *s_3, D.28711
	cmpb	$10, %al	#, D.28711
	je	.L109	#,
	movzbl	(%rbx), %eax	# *s_3, D.28711
	cmpb	$13, %al	#, D.28711
	je	.L109	#,
	movzbl	(%rbx), %eax	# *s_3, D.28711
	cmpb	$12, %al	#, D.28711
	je	.L109	#,
.L108:
	.loc 1 565 0 is_stmt 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.113
	cmpq	%rax, %rbx	# PL_bufend.113, s
	jae	.L110	#,
	.loc 1 565 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.28711
	cmpb	$35, %al	#, D.28711
	jne	.L110	#,
	.loc 1 566 0 is_stmt 1
	jmp	.L111	#
.L113:
	.loc 1 567 0
	addq	$1, %rbx	#, s
.L111:
	.loc 1 566 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.114
	cmpq	%rax, %rbx	# PL_bufend.114, s
	jae	.L112	#,
	.loc 1 566 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4, D.28711
	cmpb	$10, %al	#, D.28711
	jne	.L113	#,
.L112:
	.loc 1 568 0 is_stmt 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.115
	cmpq	%rax, %rbx	# PL_bufend.115, s
	jae	.L110	#,
	.loc 1 569 0
	addq	$1, %rbx	#, s
	.loc 1 570 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.116
	testl	%eax, %eax	# PL_in_eval.116
	je	.L110	#,
	.loc 1 570 0 is_stmt 0 discriminator 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.117
	testq	%rax, %rax	# PL_rsfp.117
	jne	.L110	#,
	.loc 1 571 0 is_stmt 1
	movq	%rbx, %rdi	# s,
	call	S_incline	#
	.loc 1 572 0
	jmp	.L114	#
.L110:
	.loc 1 581 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.118
	cmpq	%rax, %rbx	# PL_bufend.118, s
	jb	.L115	#,
	.loc 1 581 0 is_stmt 0 discriminator 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.119
	testq	%rax, %rax	# PL_rsfp.119
	je	.L115	#,
	movl	PL_sublex_info+4(%rip), %eax	# PL_sublex_info.sub_inwhat, D.28712
	testl	%eax, %eax	# D.28712
	jne	.L115	#,
	.loc 1 582 0 is_stmt 1 discriminator 1
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.120
	.loc 1 581 0 discriminator 1
	cmpl	$1, %eax	#, PL_lex_state.120
	jne	.L116	#,
.L115:
	.loc 1 583 0
	movq	%rbx, %rax	# s, D.28710
	jmp	.L106	#
.L116:
	.loc 1 587 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.121
	movq	(%rax), %rax	# PL_linestr.121_46->sv_any, D.28713
	.loc 1 586 0
	movq	8(%rax), %rax	# MEM[(struct XPV *)_47].xpv_cur, tmp183
	movq	%rax, -48(%rbp)	# tmp183, prevlen
	movq	PL_rsfp(%rip), %rcx	# PL_rsfp, PL_rsfp.122
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.123
	movq	-48(%rbp), %rdx	# prevlen, tmp184
	movq	%rcx, %rsi	# PL_rsfp.122,
	movq	%rax, %rdi	# PL_linestr.123,
	call	S_filter_gets	#
	movq	%rax, %rbx	#, s
	testq	%rbx, %rbx	# s
	jne	.L117	#,
	.loc 1 590 0
	movzbl	PL_minus_p(%rip), %eax	# PL_minus_p, PL_minus_p.124
	testb	%al, %al	# PL_minus_p.124
	je	.L118	#,
	.loc 1 591 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.125
	movl	$.LC9, %esi	#,
	movq	%rax, %rdi	# PL_linestr.125,
	call	Perl_sv_setpv	#
	.loc 1 593 0
	movb	$0, PL_minus_p(%rip)	#, PL_minus_p
	movzbl	PL_minus_p(%rip), %eax	# PL_minus_p, PL_minus_p.126
	movb	%al, PL_minus_n(%rip)	# PL_minus_p.126, PL_minus_n
	jmp	.L119	#
.L118:
	.loc 1 595 0
	movzbl	PL_minus_n(%rip), %eax	# PL_minus_n, PL_minus_n.127
	testb	%al, %al	# PL_minus_n.127
	je	.L120	#,
	.loc 1 596 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.128
	movl	$2, %edx	#,
	movl	$.LC10, %esi	#,
	movq	%rax, %rdi	# PL_linestr.128,
	call	Perl_sv_setpvn	#
	.loc 1 597 0
	movb	$0, PL_minus_n(%rip)	#, PL_minus_n
	jmp	.L119	#
.L120:
	.loc 1 600 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.129
	movl	$1, %edx	#,
	movl	$.LC11, %esi	#,
	movq	%rax, %rdi	# PL_linestr.129,
	call	Perl_sv_setpvn	#
.L119:
	.loc 1 604 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.130
	movq	(%rax), %rax	# PL_linestr.130_58->sv_any, D.28713
	movq	(%rax), %rax	# MEM[(struct XPV *)_59].xpv_pv, PL_linestart.131
	movq	%rax, PL_linestart(%rip)	# PL_linestart.131, PL_linestart
	.loc 1 603 0
	movq	PL_linestart(%rip), %rbx	# PL_linestart, s
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.132
	movq	%rax, PL_oldbufptr(%rip)	# PL_bufptr.132, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.133
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.133, PL_oldoldbufptr
	.loc 1 605 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.134
	movq	(%rax), %rax	# PL_linestr.134_64->sv_any, D.28713
	movq	(%rax), %rdx	# MEM[(struct XPV *)_65].xpv_pv, D.28710
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.135
	movq	(%rax), %rax	# PL_linestr.135_67->sv_any, D.28713
	movq	8(%rax), %rax	# MEM[(struct XPV *)_68].xpv_cur, D.28714
	addq	%rdx, %rax	# D.28710, PL_bufend.136
	movq	%rax, PL_bufend(%rip)	# PL_bufend.136, PL_bufend
	.loc 1 606 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.137
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.137, PL_last_lop
	.loc 1 615 0
	movzbl	PL_preprocess(%rip), %eax	# PL_preprocess, PL_preprocess.138
	testb	%al, %al	# PL_preprocess.138
	je	.L121	#,
	.loc 1 615 0 is_stmt 0 discriminator 1
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.139
	testl	%eax, %eax	# PL_in_eval.139
	jne	.L121	#,
	.loc 1 616 0 is_stmt 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.140
	movq	%rax, %rdi	# PL_rsfp.140,
	call	Perl_my_pclose	#
	jmp	.L122	#
.L121:
	.loc 1 617 0
	call	Perl_PerlIO_stdin	#
	movq	PL_rsfp(%rip), %rdx	# PL_rsfp, PL_rsfp.141
	cmpq	%rdx, %rax	# PL_rsfp.141, D.28715
	jne	.L123	#,
	.loc 1 618 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.142
	movq	%rax, %rdi	# PL_rsfp.142,
	call	Perl_PerlIO_clearerr	#
	jmp	.L122	#
.L123:
	.loc 1 620 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.143
	movq	%rax, %rdi	# PL_rsfp.143,
	call	Perl_PerlIO_close	#
.L122:
	.loc 1 621 0
	movq	$0, PL_rsfp(%rip)	#, PL_rsfp
	.loc 1 622 0
	movq	%rbx, %rax	# s, D.28710
	jmp	.L106	#
.L117:
	.loc 1 627 0
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.144
	movq	%rax, %rdx	# PL_oldbufptr.144, PL_oldbufptr.145
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.146
	subq	%rax, %rdx	# PL_bufend.147, tmp185
	movq	%rdx, %rax	# tmp185, tmp185
	movq	%rax, -40(%rbp)	# tmp185, oldprevlen
	.loc 1 628 0
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.148
	movq	%rax, %rdx	# PL_oldoldbufptr.148, PL_oldoldbufptr.149
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.150
	subq	%rax, %rdx	# PL_bufend.151, tmp186
	movq	%rdx, %rax	# tmp186, tmp186
	movq	%rax, -32(%rbp)	# tmp186, oldoldprevlen
	.loc 1 629 0
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.152
	testq	%rax, %rax	# PL_last_uni.152
	je	.L124	#,
	.loc 1 630 0
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.153
	movq	%rax, %rdx	# PL_last_uni.153, PL_last_uni.154
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.155
	subq	%rax, %rdx	# PL_bufend.156, tmp187
	movq	%rdx, %rax	# tmp187, tmp187
	movq	%rax, -56(%rbp)	# tmp187, oldunilen
.L124:
	.loc 1 631 0
	movq	PL_last_lop(%rip), %rax	# PL_last_lop, PL_last_lop.157
	testq	%rax, %rax	# PL_last_lop.157
	je	.L125	#,
	.loc 1 632 0
	movq	PL_last_lop(%rip), %rax	# PL_last_lop, PL_last_lop.158
	movq	%rax, %rdx	# PL_last_lop.158, PL_last_lop.159
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.160
	subq	%rax, %rdx	# PL_bufend.161, tmp188
	movq	%rdx, %rax	# tmp188, tmp188
	movq	%rax, -64(%rbp)	# tmp188, oldloplen
.L125:
	.loc 1 633 0
	movq	-48(%rbp), %rax	# prevlen, tmp189
	addq	%rbx, %rax	# s, PL_bufptr.162
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.162, PL_bufptr
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.163
	movq	%rax, PL_linestart(%rip)	# PL_bufptr.163, PL_linestart
	.loc 1 634 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.164
	movq	(%rax), %rax	# PL_linestr.164_104->sv_any, D.28713
	movq	8(%rax), %rax	# MEM[(struct XPV *)_105].xpv_cur, D.28714
	addq	%rbx, %rax	# s, PL_bufend.165
	movq	%rax, PL_bufend(%rip)	# PL_bufend.165, PL_bufend
	.loc 1 635 0
	movq	PL_bufptr(%rip), %rbx	# PL_bufptr, s
	.loc 1 636 0
	movq	-40(%rbp), %rax	# oldprevlen, oldprevlen.166
	addq	%rbx, %rax	# s, PL_oldbufptr.167
	movq	%rax, PL_oldbufptr(%rip)	# PL_oldbufptr.167, PL_oldbufptr
	.loc 1 637 0
	movq	-32(%rbp), %rax	# oldoldprevlen, oldoldprevlen.168
	addq	%rbx, %rax	# s, PL_oldoldbufptr.169
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldoldbufptr.169, PL_oldoldbufptr
	.loc 1 638 0
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.170
	testq	%rax, %rax	# PL_last_uni.170
	je	.L126	#,
	.loc 1 639 0
	movq	-56(%rbp), %rax	# oldunilen, oldunilen.171
	addq	%rbx, %rax	# s, PL_last_uni.172
	movq	%rax, PL_last_uni(%rip)	# PL_last_uni.172, PL_last_uni
.L126:
	.loc 1 640 0
	movq	PL_last_lop(%rip), %rax	# PL_last_lop, PL_last_lop.173
	testq	%rax, %rax	# PL_last_lop.173
	je	.L127	#,
	.loc 1 641 0
	movq	-64(%rbp), %rax	# oldloplen, oldloplen.174
	addq	%rbx, %rax	# s, PL_last_lop.175
	movq	%rax, PL_last_lop(%rip)	# PL_last_lop.175, PL_last_lop
.L127:
	.loc 1 642 0
	movq	%rbx, %rdi	# s,
	call	S_incline	#
	.loc 1 647 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.176
	testl	%eax, %eax	# PL_perldb.176
	je	.L114	#,
	.loc 1 647 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.177
	andl	$2, %eax	#, D.28716
	testl	%eax, %eax	# D.28716
	je	.L114	#,
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.178
	movq	PL_debstash(%rip), %rax	# PL_debstash, PL_debstash.179
	cmpq	%rax, %rdx	# PL_debstash.179, PL_curstash.178
	je	.L114	#,
.LBB6:
	.loc 1 648 0 is_stmt 1
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -24(%rbp)	# tmp190, sv
	.loc 1 650 0
	movq	-24(%rbp), %rax	# sv, tmp191
	movl	$7, %esi	#,
	movq	%rax, %rdi	# tmp191,
	call	Perl_sv_upgrade	#
	.loc 1 651 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.180
	movq	%rax, %rdx	# PL_bufend.180, PL_bufend.181
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.182
	subq	%rax, %rdx	# PL_bufptr.183, D.28717
	movq	%rdx, %rax	# D.28717, D.28717
	movq	%rax, %rdx	# D.28717, D.28714
	movq	PL_bufptr(%rip), %rcx	# PL_bufptr, PL_bufptr.184
	movq	-24(%rbp), %rax	# sv, tmp192
	movq	%rcx, %rsi	# PL_bufptr.184,
	movq	%rax, %rdi	# tmp192,
	call	Perl_sv_setpvn	#
	.loc 1 652 0
	movq	-24(%rbp), %rax	# sv, tmp193
	movl	12(%rax), %eax	# sv_124->sv_flags, D.28716
	andl	$2097152, %eax	#, D.28716
	testl	%eax, %eax	# D.28716
	je	.L129	#,
	.loc 1 652 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp194
	movq	%rax, %rdi	# tmp194,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.28712
	je	.L129	#,
	.loc 1 652 0
	nop
.L129:
	.loc 1 652 0 discriminator 3
	movq	-24(%rbp), %rax	# sv, tmp195
	movl	12(%rax), %eax	# sv_124->sv_flags, D.28716
	orl	$16842752, %eax	#, D.28716
	movl	%eax, %edx	# D.28716, D.28716
	movq	-24(%rbp), %rax	# sv, tmp196
	movl	%edx, 12(%rax)	# D.28716, sv_124->sv_flags
	.loc 1 653 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# sv, tmp197
	movq	(%rax), %rax	# sv_124->sv_any, D.28713
	movq	$0, 24(%rax)	#, MEM[(struct XPVIV *)_139].xiv_iv
	.loc 1 654 0 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.186
	movl	72(%rax), %eax	# PL_curcop.186_140->cop_line, D.28716
	movl	%eax, %ecx	# D.28716, D.28712
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.188
	movq	56(%rax), %rax	# PL_curcop.188_143->cop_filegv, D.28718
	testq	%rax, %rax	# D.28718
	je	.L130	#,
	.loc 1 654 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.189
	movq	56(%rax), %rax	# PL_curcop.189_145->cop_filegv, D.28718
	movq	(%rax), %rax	# _146->sv_any, D.28719
	movq	56(%rax), %rax	# _147->xgv_gp, D.28720
	movq	32(%rax), %rax	# _148->gp_av, iftmp.187
	jmp	.L131	#
.L130:
	.loc 1 654 0 discriminator 2
	movl	$0, %eax	#, iftmp.187
.L131:
	.loc 1 654 0 discriminator 3
	movq	-24(%rbp), %rdx	# sv, tmp198
	movl	%ecx, %esi	# D.28712,
	movq	%rax, %rdi	# iftmp.187,
	call	Perl_av_store	#
.LBE6:
.LBE5:
	.loc 1 656 0 is_stmt 1 discriminator 3
	jmp	.L102	#
.L114:
	.loc 1 656 0 is_stmt 0
	jmp	.L102	#
.L106:
	.loc 1 657 0 is_stmt 1
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	S_skipspace, .-S_skipspace
	.section	.rodata
	.align 8
.LC12:
	.string	"Warning: Use of \"%s\" without parentheses is ambiguous"
	.text
	.type	S_check_uni, @function
S_check_uni:
.LFB12:
	.loc 1 670 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	.loc 1 674 0
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.190
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.191
	cmpq	%rax, %rdx	# PL_last_uni.191, PL_oldoldbufptr.190
	je	.L133	#,
	.loc 1 675 0
	jmp	.L132	#
.L133:
	.loc 1 676 0
	jmp	.L135	#
.L136:
	.loc 1 677 0
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.192
	addq	$1, %rax	#, PL_last_uni.193
	movq	%rax, PL_last_uni(%rip)	# PL_last_uni.193, PL_last_uni
.L135:
	.loc 1 676 0 discriminator 1
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.194
	movzbl	(%rax), %eax	# *PL_last_uni.194_5, D.28724
	cmpb	$32, %al	#, D.28724
	je	.L136	#,
	.loc 1 676 0 is_stmt 0 discriminator 2
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.195
	movzbl	(%rax), %eax	# *PL_last_uni.195_7, D.28724
	cmpb	$9, %al	#, D.28724
	je	.L136	#,
	.loc 1 676 0 discriminator 1
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.196
	movzbl	(%rax), %eax	# *PL_last_uni.196_9, D.28724
	cmpb	$10, %al	#, D.28724
	je	.L136	#,
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.197
	movzbl	(%rax), %eax	# *PL_last_uni.197_11, D.28724
	cmpb	$13, %al	#, D.28724
	je	.L136	#,
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.198
	movzbl	(%rax), %eax	# *PL_last_uni.198_13, D.28724
	cmpb	$12, %al	#, D.28724
	je	.L136	#,
	.loc 1 678 0 is_stmt 1
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, tmp115
	movq	%rax, -16(%rbp)	# tmp115, s
	jmp	.L137	#
.L148:
	.loc 1 678 0 is_stmt 0 discriminator 4
	addq	$1, -16(%rbp)	#, s
.L137:
	.loc 1 678 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.199
	movzbl	37(%rax), %eax	# PL_curcop.199_16->op_private, D.28725
	movzbl	%al, %eax	# D.28725, D.28726
	andl	$8, %eax	#, D.28726
	testl	%eax, %eax	# D.28726
	jne	.L138	#,
	.loc 1 678 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.200
	testq	%rax, %rax	# PL_linestr.200
	je	.L139	#,
	.loc 1 678 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.201
	movl	12(%rax), %eax	# PL_linestr.201_21->sv_flags, D.28727
	andl	$536870912, %eax	#, D.28727
	testl	%eax, %eax	# D.28727
	je	.L139	#,
	.loc 1 678 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.202
	movzbl	37(%rax), %eax	# PL_curcop.202_24->op_private, D.28725
	movzbl	%al, %eax	# D.28725, D.28726
	andl	$8, %eax	#, D.28726
	testl	%eax, %eax	# D.28726
	je	.L140	#,
.L139:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.203
	andl	$8388608, %eax	#, D.28727
	testl	%eax, %eax	# D.28727
	je	.L138	#,
.L140:
	movq	-16(%rbp), %rax	# s, tmp116
	movzbl	(%rax), %eax	# MEM[(U8 *)s_1], D.28725
	cmpb	$-65, %al	#, D.28725
	ja	.L141	#,
.L138:
	.loc 1 678 0 discriminator 2
	movq	-16(%rbp), %rax	# s, tmp117
	movzbl	(%rax), %eax	# *s_1, D.28724
	cmpb	$64, %al	#, D.28724
	jle	.L142	#,
	.loc 1 678 0 discriminator 1
	movq	-16(%rbp), %rax	# s, tmp118
	movzbl	(%rax), %eax	# *s_1, D.28724
	cmpb	$90, %al	#, D.28724
	jle	.L143	#,
.L142:
	.loc 1 678 0 discriminator 2
	movq	-16(%rbp), %rax	# s, tmp119
	movzbl	(%rax), %eax	# *s_1, D.28724
	cmpb	$96, %al	#, D.28724
	jle	.L144	#,
	.loc 1 678 0 discriminator 1
	movq	-16(%rbp), %rax	# s, tmp120
	movzbl	(%rax), %eax	# *s_1, D.28724
	cmpb	$122, %al	#, D.28724
	jle	.L143	#,
.L144:
	.loc 1 678 0 discriminator 2
	movq	-16(%rbp), %rax	# s, tmp121
	movzbl	(%rax), %eax	# *s_1, D.28724
	cmpb	$47, %al	#, D.28724
	jle	.L145	#,
	.loc 1 678 0 discriminator 1
	movq	-16(%rbp), %rax	# s, tmp122
	movzbl	(%rax), %eax	# *s_1, D.28724
	cmpb	$57, %al	#, D.28724
	jle	.L143	#,
.L145:
	.loc 1 678 0 discriminator 2
	movq	-16(%rbp), %rax	# s, tmp123
	movzbl	(%rax), %eax	# *s_1, D.28724
	cmpb	$95, %al	#, D.28724
	jne	.L146	#,
.L143:
	.loc 1 678 0 discriminator 1
	movl	$1, %eax	#, iftmp.204
	jmp	.L147	#
.L146:
	.loc 1 678 0 discriminator 3
	movl	$0, %eax	#, iftmp.204
.L147:
	.loc 1 678 0 discriminator 4
	andl	$1, %eax	#, D.28728
	testb	%al, %al	# D.28728
	jne	.L148	#,
	.loc 1 678 0 discriminator 5
	jmp	.L149	#
.L141:
	.loc 1 678 0 discriminator 1
	movq	-16(%rbp), %rax	# s, tmp124
	movq	%rax, %rdi	# tmp124,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28724
	jne	.L148	#,
.L149:
	.loc 1 678 0 discriminator 6
	movq	-16(%rbp), %rax	# s, tmp125
	movzbl	(%rax), %eax	# *s_1, D.28724
	cmpb	$45, %al	#, D.28724
	je	.L148	#,
	.loc 1 679 0 is_stmt 1
	movq	-16(%rbp), %rax	# s, tmp126
	movl	$40, %esi	#,
	movq	%rax, %rdi	# tmp126,
	call	strchr	#
	movq	%rax, -8(%rbp)	# tmp127, t
	cmpq	$0, -8(%rbp)	#, t
	je	.L150	#,
	.loc 1 679 0 is_stmt 0 discriminator 1
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.205
	cmpq	%rax, -8(%rbp)	# PL_bufptr.205, t
	jae	.L150	#,
	.loc 1 680 0 is_stmt 1
	jmp	.L132	#
.L150:
	.loc 1 681 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.206
	movq	80(%rax), %rax	# PL_curcop.206_45->cop_warnings, D.28729
	testq	%rax, %rax	# D.28729
	je	.L151	#,
	.loc 1 681 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.207
	movq	80(%rax), %rax	# PL_curcop.207_47->cop_warnings, D.28729
	cmpq	$16, %rax	#, D.28729
	je	.L151	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.208
	movq	80(%rax), %rax	# PL_curcop.208_49->cop_warnings, D.28729
	cmpq	$32, %rax	#, D.28729
	je	.L132	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.209
	movq	80(%rax), %rax	# PL_curcop.209_51->cop_warnings, D.28729
	movq	(%rax), %rax	# _52->sv_any, D.28730
	movq	(%rax), %rax	# MEM[(struct XPV *)_53].xpv_pv, D.28731
	addq	$7, %rax	#, D.28731
	movzbl	(%rax), %eax	# *_55, D.28724
	movsbl	%al, %eax	# D.28724, D.28726
	andl	$4, %eax	#, D.28726
	testl	%eax, %eax	# D.28726
	je	.L132	#,
.L151:
.LBB7:
	.loc 1 682 0 is_stmt 1
	movq	-16(%rbp), %rax	# s, tmp128
	movzbl	(%rax), %eax	# *s_1, tmp129
	movb	%al, -17(%rbp)	# tmp129, ch
	.loc 1 683 0
	movq	-16(%rbp), %rax	# s, tmp130
	movb	$0, (%rax)	#, *s_1
	.loc 1 684 0
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.210
	movq	%rax, %rdx	# PL_last_uni.210,
	movl	$.LC12, %esi	#,
	movl	$29, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 687 0
	movq	-16(%rbp), %rax	# s, tmp131
	movzbl	-17(%rbp), %edx	# ch, tmp132
	movb	%dl, (%rax)	# tmp132, *s_1
.L132:
.LBE7:
	.loc 1 689 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	S_check_uni, .-S_check_uni
	.type	S_lop, @function
S_lop:
.LFB13:
	.loc 1 708 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movl	%edi, -4(%rbp)	# f, f
	movl	%esi, -8(%rbp)	# x, x
	movq	%rdx, -16(%rbp)	# s, s
	.loc 1 709 0
	movl	-4(%rbp), %eax	# f, tmp71
	movl	%eax, PL_yylval(%rip)	# tmp71, PL_yylval.ival
	.loc 1 710 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.212
	movl	72(%rax), %edx	# PL_curcop.212_4->cop_line, D.28734
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.213
	cmpl	%eax, %edx	# PL_copline.213, D.28734
	jae	.L153	#,
	.loc 1 710 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.214
	movl	72(%rax), %eax	# PL_curcop.214_7->cop_line, iftmp.211
	jmp	.L154	#
.L153:
	.loc 1 710 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.211
.L154:
	.loc 1 710 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.211, PL_copline
	.loc 1 712 0 is_stmt 1 discriminator 3
	movl	-8(%rbp), %eax	# x, tmp72
	movl	%eax, PL_expect(%rip)	# tmp72, PL_expect
	.loc 1 713 0 discriminator 3
	movq	-16(%rbp), %rax	# s, tmp73
	movq	%rax, PL_bufptr(%rip)	# tmp73, PL_bufptr
	.loc 1 714 0 discriminator 3
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.215
	movq	%rax, PL_last_lop(%rip)	# PL_oldbufptr.215, PL_last_lop
	.loc 1 715 0 discriminator 3
	movl	-4(%rbp), %eax	# f, tmp74
	movw	%ax, PL_last_lop_op(%rip)	# PL_last_lop_op.216, PL_last_lop_op
	.loc 1 716 0 discriminator 3
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.217
	testl	%eax, %eax	# PL_nexttoke.217
	je	.L155	#,
	.loc 1 717 0
	movl	$286, %eax	#, D.28733
	jmp	.L156	#
.L155:
	.loc 1 718 0
	movq	-16(%rbp), %rax	# s, tmp75
	movzbl	(%rax), %eax	# *s_11(D), D.28735
	cmpb	$40, %al	#, D.28735
	jne	.L157	#,
	.loc 1 719 0
	movl	$284, %eax	#, D.28733
	jmp	.L156	#
.L157:
	.loc 1 720 0
	movq	-16(%rbp), %rax	# s, tmp76
	movq	%rax, %rdi	# tmp76,
	call	S_skipspace	#
	movq	%rax, -16(%rbp)	# tmp77, s
	.loc 1 721 0
	movq	-16(%rbp), %rax	# s, tmp78
	movzbl	(%rax), %eax	# *s_18, D.28735
	cmpb	$40, %al	#, D.28735
	jne	.L158	#,
	.loc 1 722 0
	movl	$284, %eax	#, D.28733
	jmp	.L156	#
.L158:
	.loc 1 724 0
	movl	$286, %eax	#, D.28733
.L156:
	.loc 1 725 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE13:
	.size	S_lop, .-S_lop
	.type	S_force_next, @function
S_force_next:
.LFB14:
	.loc 1 738 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movl	%edi, -4(%rbp)	# type, type
	.loc 1 739 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.218
	cltq
	movl	-4(%rbp), %edx	# type, tmp66
	movl	%edx, PL_nexttype(,%rax,4)	# tmp66, PL_nexttype
	.loc 1 740 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.219
	addl	$1, %eax	#, PL_nexttoke.220
	movl	%eax, PL_nexttoke(%rip)	# PL_nexttoke.220, PL_nexttoke
	.loc 1 741 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.221
	testl	%eax, %eax	# PL_lex_state.221
	je	.L159	#,
	.loc 1 742 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.222
	movl	%eax, PL_lex_defer(%rip)	# PL_lex_state.222, PL_lex_defer
	.loc 1 743 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.223
	movl	%eax, PL_lex_expect(%rip)	# PL_expect.223, PL_lex_expect
	.loc 1 744 0
	movl	$0, PL_lex_state(%rip)	#, PL_lex_state
.L159:
	.loc 1 746 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE14:
	.size	S_force_next, .-S_force_next
	.type	S_force_word, @function
S_force_word:
.LFB15:
	.loc 1 766 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$32, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %r12	# start, start
	movl	%esi, -36(%rbp)	# token, token
	movl	%edx, -40(%rbp)	# check_keyword, check_keyword
	movl	%ecx, -44(%rbp)	# allow_pack, allow_pack
	movl	%r8d, -48(%rbp)	# allow_initial_tick, allow_initial_tick
	.loc 1 770 0
	movq	%r12, %rdi	# start,
	call	S_skipspace	#
	movq	%rax, %r12	#, start
	.loc 1 771 0
	movq	%r12, %rbx	# start, s
	.loc 1 772 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.224
	movzbl	37(%rax), %eax	# PL_curcop.224_9->op_private, D.28737
	movzbl	%al, %eax	# D.28737, D.28738
	andl	$8, %eax	#, D.28738
	testl	%eax, %eax	# D.28738
	jne	.L162	#,
	.loc 1 772 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.225
	testq	%rax, %rax	# PL_linestr.225
	je	.L163	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.226
	movl	12(%rax), %eax	# PL_linestr.226_14->sv_flags, D.28739
	andl	$536870912, %eax	#, D.28739
	testl	%eax, %eax	# D.28739
	je	.L163	#,
	.loc 1 772 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.227
	movzbl	37(%rax), %eax	# PL_curcop.227_17->op_private, D.28737
	movzbl	%al, %eax	# D.28737, D.28738
	andl	$8, %eax	#, D.28738
	testl	%eax, %eax	# D.28738
	je	.L164	#,
.L163:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.228
	andl	$8388608, %eax	#, D.28739
	testl	%eax, %eax	# D.28739
	je	.L162	#,
.L164:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_8], D.28737
	cmpb	$-65, %al	#, D.28737
	ja	.L165	#,
.L162:
	movzbl	(%rbx), %eax	# *s_8, D.28740
	cmpb	$64, %al	#, D.28740
	jle	.L166	#,
	movzbl	(%rbx), %eax	# *s_8, D.28740
	cmpb	$90, %al	#, D.28740
	jle	.L167	#,
.L166:
	.loc 1 772 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_8, D.28740
	cmpb	$96, %al	#, D.28740
	jle	.L168	#,
	.loc 1 772 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_8, D.28740
	cmpb	$122, %al	#, D.28740
	jle	.L167	#,
.L168:
	.loc 1 772 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_8, D.28740
	cmpb	$95, %al	#, D.28740
	jne	.L169	#,
.L167:
	.loc 1 772 0 discriminator 1
	movl	$1, %eax	#, iftmp.229
	jmp	.L170	#
.L169:
	.loc 1 772 0 discriminator 3
	movl	$0, %eax	#, iftmp.229
.L170:
	.loc 1 772 0 discriminator 4
	andl	$1, %eax	#, D.28741
	testb	%al, %al	# D.28741
	jne	.L171	#,
	.loc 1 772 0 discriminator 3
	jmp	.L172	#
.L165:
	.loc 1 772 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28740
	je	.L173	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28740
	jne	.L173	#,
	.loc 1 772 0 discriminator 3
	movl	$1, %eax	#, iftmp.230
	jmp	.L174	#
.L173:
	.loc 1 772 0 discriminator 2
	movl	$0, %eax	#, iftmp.230
.L174:
	.loc 1 772 0 discriminator 4
	andl	$1, %eax	#, D.28741
	testb	%al, %al	# D.28741
	jne	.L171	#,
.L172:
	cmpl	$0, -44(%rbp)	#, allow_pack
	je	.L175	#,
	.loc 1 773 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_8, D.28740
	cmpb	$58, %al	#, D.28740
	je	.L171	#,
.L175:
	.loc 1 773 0 is_stmt 0 discriminator 1
	cmpl	$0, -48(%rbp)	#, allow_initial_tick
	je	.L176	#,
	.loc 1 774 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_8, D.28740
	cmpb	$39, %al	#, D.28740
	jne	.L176	#,
.L171:
	.loc 1 776 0
	leaq	-24(%rbp), %rdx	#, tmp128
	movl	-44(%rbp), %eax	# allow_pack, tmp129
	movq	%rdx, %r8	# tmp128,
	movl	%eax, %ecx	# tmp129,
	movl	$256, %edx	#,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_word	#
	movq	%rax, %rbx	#, s
	.loc 1 777 0
	cmpl	$0, -40(%rbp)	#, check_keyword
	je	.L177	#,
	.loc 1 777 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# len, len.231
	movl	%eax, %esi	# D.28738,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_keyword	#
	testl	%eax, %eax	# D.28738
	je	.L177	#,
	.loc 1 778 0 is_stmt 1
	movq	%r12, %rax	# start, D.28736
	jmp	.L184	#
.L177:
	.loc 1 779 0
	cmpl	$258, -36(%rbp)	#, token
	jne	.L179	#,
	.loc 1 780 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 781 0
	movzbl	(%rbx), %eax	# *s_48, D.28740
	cmpb	$40, %al	#, D.28740
	jne	.L180	#,
	.loc 1 782 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	jmp	.L179	#
.L180:
	.loc 1 784 0
	movl	$0, PL_expect(%rip)	#, PL_expect
.L179:
	.loc 1 787 0
	movl	PL_nexttoke(%rip), %r12d	# PL_nexttoke, PL_nexttoke.232
	movl	$0, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_newSVpv	#
	movq	%rax, %rdx	# D.28742,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movslq	%r12d, %rdx	# PL_nexttoke.232, tmp130
	movq	%rax, PL_nextval(,%rdx,8)	# D.28743, PL_nextval[PL_nexttoke.232_50].opval
	.loc 1 788 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.233
	cltq
	movq	PL_nextval(,%rax,8), %rax	# PL_nextval[PL_nexttoke.233_53].opval, D.28743
	movl	PL_nexttoke(%rip), %edx	# PL_nexttoke, PL_nexttoke.234
	movslq	%edx, %rdx	# PL_nexttoke.234, tmp132
	movq	PL_nextval(,%rdx,8), %rdx	# PL_nextval[PL_nexttoke.234_55].opval, D.28743
	movzbl	37(%rdx), %edx	# _56->op_private, D.28737
	orl	$64, %edx	#, D.28737
	movb	%dl, 37(%rax)	# D.28737, _54->op_private
	.loc 1 789 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.235
	testq	%rax, %rax	# PL_linestr.235
	je	.L181	#,
	.loc 1 789 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.236
	movl	12(%rax), %eax	# PL_linestr.236_60->sv_flags, D.28739
	andl	$536870912, %eax	#, D.28739
	testl	%eax, %eax	# D.28739
	je	.L181	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.237
	movzbl	37(%rax), %eax	# PL_curcop.237_63->op_private, D.28737
	movzbl	%al, %eax	# D.28737, D.28738
	andl	$8, %eax	#, D.28738
	testl	%eax, %eax	# D.28738
	je	.L182	#,
.L181:
	.loc 1 789 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.238
	andl	$8388608, %eax	#, D.28739
	testl	%eax, %eax	# D.28739
	je	.L183	#,
.L182:
	.loc 1 789 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.239
	movzbl	37(%rax), %eax	# PL_curcop.239_69->op_private, D.28737
	movzbl	%al, %eax	# D.28737, D.28738
	andl	$8, %eax	#, D.28738
	testl	%eax, %eax	# D.28738
	jne	.L183	#,
	movq	-24(%rbp), %rax	# len, len.240
	movq	%rax, %rsi	# len.240,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_is_utf8_string	#
	testb	%al, %al	# D.28740
	je	.L183	#,
	.loc 1 790 0 is_stmt 1
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.241
	cltq
	movq	PL_nextval(,%rax,8), %rax	# PL_nextval[PL_nexttoke.241_75].opval, D.28743
	movq	40(%rax), %rax	# MEM[(struct SVOP *)_76].op_sv, D.28742
	movl	PL_nexttoke(%rip), %edx	# PL_nexttoke, PL_nexttoke.242
	movslq	%edx, %rdx	# PL_nexttoke.242, tmp134
	movq	PL_nextval(,%rdx,8), %rdx	# PL_nextval[PL_nexttoke.242_78].opval, D.28743
	movq	40(%rdx), %rdx	# MEM[(struct SVOP *)_79].op_sv, D.28742
	movl	12(%rdx), %edx	# _80->sv_flags, D.28739
	orl	$536870912, %edx	#, D.28739
	movl	%edx, 12(%rax)	# D.28739, _77->sv_flags
.L183:
	.loc 1 791 0
	movl	-36(%rbp), %eax	# token, tmp135
	movl	%eax, %edi	# tmp135,
	call	S_force_next	#
.L176:
	.loc 1 793 0
	movq	%rbx, %rax	# s, D.28736
.L184:
	.loc 1 794 0
	addq	$32, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE15:
	.size	S_force_word, .-S_force_word
	.type	S_force_ident, @function
S_force_ident:
.LFB16:
	.loc 1 807 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# s, s
	movl	%esi, -36(%rbp)	# kind, kind
	.loc 1 808 0
	testq	%rbx, %rbx	# s
	je	.L185	#,
	.loc 1 808 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_5(D), D.28744
	testb	%al, %al	# D.28744
	je	.L185	#,
.LBB8:
	.loc 1 809 0 is_stmt 1
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	Perl_newSVpv	#
	movq	%rax, %rdx	# D.28745,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, -24(%rbp)	# tmp68, o
	.loc 1 810 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.243
	cltq
	movq	-24(%rbp), %rdx	# o, tmp70
	movq	%rdx, PL_nextval(,%rax,8)	# tmp70, PL_nextval[PL_nexttoke.243_9].opval
	.loc 1 811 0
	movl	$257, %edi	#,
	call	S_force_next	#
	.loc 1 812 0
	cmpl	$0, -36(%rbp)	#, kind
	je	.L185	#,
	.loc 1 813 0
	movq	-24(%rbp), %rax	# o, tmp71
	movb	$16, 37(%rax)	#, o_8->op_private
	.loc 1 817 0
	cmpl	$36, -36(%rbp)	#, kind
	je	.L187	#,
	.loc 1 819 0
	cmpl	$64, -36(%rbp)	#, kind
	je	.L188	#,
	.loc 1 820 0
	cmpl	$37, -36(%rbp)	#, kind
	jne	.L189	#,
	.loc 1 820 0 is_stmt 0 discriminator 1
	movl	$11, %eax	#, iftmp.246
	jmp	.L191	#
.L189:
	.loc 1 820 0 discriminator 2
	movl	$13, %eax	#, iftmp.246
	jmp	.L191	#
.L188:
	.loc 1 819 0 is_stmt 1 discriminator 1
	movl	$10, %eax	#, iftmp.245
.L191:
	.loc 1 817 0 discriminator 2
	movl	%eax, %edx	# iftmp.245, iftmp.244
	jmp	.L192	#
.L187:
	.loc 1 817 0 is_stmt 0 discriminator 1
	movl	$4, %edx	#, iftmp.244
.L192:
	.loc 1 817 0 discriminator 2
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.248
	testl	%eax, %eax	# PL_in_eval.248
	je	.L193	#,
	.loc 1 817 0 discriminator 3
	movl	$10, %eax	#, iftmp.247
	jmp	.L194	#
.L193:
	.loc 1 817 0 discriminator 4
	movl	$1, %eax	#, iftmp.247
.L194:
	.loc 1 817 0 discriminator 5
	movl	%eax, %esi	# iftmp.247,
	movq	%rbx, %rdi	# s,
	call	Perl_gv_fetchpv	#
.L185:
.LBE8:
	.loc 1 825 0 is_stmt 1
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE16:
	.size	S_force_ident, .-S_force_ident
	.globl	Perl_str_to_version
	.type	Perl_str_to_version, @function
Perl_str_to_version:
.LFB17:
	.loc 1 829 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$80, %rsp	#,
	movq	%rdi, -72(%rbp)	# sv, sv
	.loc 1 830 0
	movl	$0, %eax	#, tmp80
	movq	%rax, -40(%rbp)	# tmp80, retval
	.loc 1 831 0
	movabsq	$4607182418800017408, %rax	#, tmp81
	movq	%rax, -32(%rbp)	# tmp81, nshift
	.loc 1 833 0
	movq	-72(%rbp), %rax	# sv, tmp82
	movq	%rax, PL_Sv(%rip)	# tmp82, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.250
	movl	12(%rax), %eax	# PL_Sv.250_9->sv_flags, D.28746
	andl	$262144, %eax	#, D.28746
	testl	%eax, %eax	# D.28746
	je	.L196	#,
	.loc 1 833 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.251
	movq	(%rax), %rax	# PL_Sv.251_12->sv_any, D.28747
	movq	8(%rax), %rax	# MEM[(struct XPV *)_13].xpv_cur, len.252
	movq	%rax, -56(%rbp)	# len.252, len
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.253
	movq	(%rax), %rax	# PL_Sv.253_15->sv_any, D.28747
	movq	(%rax), %rax	# MEM[(struct XPV *)_16].xpv_pv, iftmp.249
	jmp	.L197	#
.L196:
	.loc 1 833 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.254
	leaq	-56(%rbp), %rcx	#, tmp83
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp83,
	movq	%rax, %rdi	# PL_Sv.254,
	call	Perl_sv_2pv_flags	#
.L197:
	.loc 1 833 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.249, start
	.loc 1 834 0 is_stmt 1 discriminator 3
	movq	-72(%rbp), %rax	# sv, tmp84
	movl	12(%rax), %eax	# sv_8(D)->sv_flags, D.28746
	andl	$536870912, %eax	#, D.28746
	testl	%eax, %eax	# D.28746
	setne	%al	#, D.28748
	movb	%al, -57(%rbp)	# D.28748, utf
	.loc 1 835 0 discriminator 3
	movq	-56(%rbp), %rdx	# len, len.255
	movq	-24(%rbp), %rax	# start, tmp88
	addq	%rdx, %rax	# len.255, tmp87
	movq	%rax, -8(%rbp)	# tmp87, end
	.loc 1 836 0 discriminator 3
	jmp	.L198	#
.L203:
.LBB9:
	.loc 1 839 0
	cmpb	$0, -57(%rbp)	#, utf
	je	.L199	#,
	.loc 1 840 0
	movq	-56(%rbp), %rsi	# len, len.256
	leaq	-48(%rbp), %rdx	#, tmp89
	movq	-24(%rbp), %rax	# start, tmp90
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp90,
	call	Perl_utf8n_to_uvuni	#
	movq	%rax, -16(%rbp)	# tmp91, n
	jmp	.L200	#
.L199:
	.loc 1 842 0
	movq	-24(%rbp), %rax	# start, tmp92
	movzbl	(%rax), %eax	# MEM[(U8 *)start_3], D.28749
	movzbl	%al, %eax	# D.28749, tmp93
	movq	%rax, -16(%rbp)	# tmp93, n
	.loc 1 843 0
	movq	$1, -48(%rbp)	#, skip
.L200:
	.loc 1 845 0 discriminator 1
	movq	-16(%rbp), %rax	# n, tmp94
	testq	%rax, %rax	# tmp94
	js	.L201	#,
	cvtsi2sdq	%rax, %xmm0	# tmp94, D.28750
	jmp	.L202	#
.L201:
	movq	%rax, %rdx	# tmp94, tmp96
	shrq	%rdx	# tmp96
	andl	$1, %eax	#, tmp97
	orq	%rax, %rdx	# tmp97, tmp96
	cvtsi2sdq	%rdx, %xmm0	# tmp96, tmp95
	addsd	%xmm0, %xmm0	# tmp95, D.28750
.L202:
	divsd	-32(%rbp), %xmm0	# nshift, D.28750
	movsd	-40(%rbp), %xmm1	# retval, tmp99
	addsd	%xmm1, %xmm0	# tmp99, tmp98
	movsd	%xmm0, -40(%rbp)	# tmp98, retval
	.loc 1 846 0 discriminator 1
	movq	-48(%rbp), %rax	# skip, skip.257
	addq	%rax, -24(%rbp)	# skip.257, start
	.loc 1 847 0 discriminator 1
	movsd	-32(%rbp), %xmm1	# nshift, tmp101
	movsd	.LC15(%rip), %xmm0	#, tmp102
	mulsd	%xmm1, %xmm0	# tmp101, tmp100
	movsd	%xmm0, -32(%rbp)	# tmp100, nshift
.L198:
.LBE9:
	.loc 1 836 0 discriminator 1
	movq	-24(%rbp), %rax	# start, tmp103
	cmpq	-8(%rbp), %rax	# end, tmp103
	jb	.L203	#,
	.loc 1 849 0
	movq	-40(%rbp), %rax	# retval, D.28751
	.loc 1 850 0
	movq	%rax, -80(%rbp)	# <retval>, %sfp
	movsd	-80(%rbp), %xmm0	# %sfp,
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE17:
	.size	Perl_str_to_version, .-Perl_str_to_version
	.type	S_force_version, @function
S_force_version:
.LFB18:
	.loc 1 862 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# s, s
	movl	%esi, -60(%rbp)	# guessing, guessing
	.loc 1 863 0
	movq	$0, -40(%rbp)	#, version
	.loc 1 866 0
	movq	-56(%rbp), %rax	# s, tmp90
	movq	%rax, %rdi	# tmp90,
	call	S_skipspace	#
	movq	%rax, -56(%rbp)	# tmp91, s
	.loc 1 868 0
	movq	-56(%rbp), %rax	# s, tmp92
	movq	%rax, -32(%rbp)	# tmp92, d
	.loc 1 869 0
	movq	-32(%rbp), %rax	# d, tmp93
	movzbl	(%rax), %eax	# *d_9, D.28754
	cmpb	$118, %al	#, D.28754
	jne	.L206	#,
	.loc 1 870 0
	addq	$1, -32(%rbp)	#, d
.L206:
	.loc 1 871 0
	movq	-32(%rbp), %rax	# d, tmp94
	movzbl	(%rax), %eax	# *d_3, D.28754
	cmpb	$47, %al	#, D.28754
	jle	.L207	#,
	.loc 1 871 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# d, tmp95
	movzbl	(%rax), %eax	# *d_3, D.28754
	cmpb	$57, %al	#, D.28754
	jg	.L207	#,
	.loc 1 872 0 is_stmt 1
	jmp	.L208	#
.L210:
	.loc 1 873 0
	addq	$1, -32(%rbp)	#, d
.L208:
	.loc 1 872 0 discriminator 1
	movq	-32(%rbp), %rax	# d, tmp96
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$47, %al	#, D.28754
	jle	.L209	#,
	.loc 1 872 0 is_stmt 0 discriminator 2
	movq	-32(%rbp), %rax	# d, tmp97
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$57, %al	#, D.28754
	jle	.L210	#,
.L209:
	.loc 1 872 0 discriminator 3
	movq	-32(%rbp), %rax	# d, tmp98
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$95, %al	#, D.28754
	je	.L210	#,
	.loc 1 872 0 discriminator 1
	movq	-32(%rbp), %rax	# d, tmp99
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$46, %al	#, D.28754
	je	.L210	#,
	.loc 1 874 0 is_stmt 1
	movq	-32(%rbp), %rax	# d, tmp100
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$59, %al	#, D.28754
	je	.L211	#,
	.loc 1 874 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# d, tmp101
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$32, %al	#, D.28754
	je	.L211	#,
	movq	-32(%rbp), %rax	# d, tmp102
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$9, %al	#, D.28754
	je	.L211	#,
	movq	-32(%rbp), %rax	# d, tmp103
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$10, %al	#, D.28754
	je	.L211	#,
	movq	-32(%rbp), %rax	# d, tmp104
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$13, %al	#, D.28754
	je	.L211	#,
	movq	-32(%rbp), %rax	# d, tmp105
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$12, %al	#, D.28754
	je	.L211	#,
	movq	-32(%rbp), %rax	# d, tmp106
	movzbl	(%rax), %eax	# *d_4, D.28754
	cmpb	$125, %al	#, D.28754
	je	.L211	#,
	movq	-32(%rbp), %rax	# d, tmp107
	movzbl	(%rax), %eax	# *d_4, D.28754
	testb	%al, %al	# D.28754
	jne	.L212	#,
.L211:
.LBB10:
	.loc 1 876 0 is_stmt 1
	movq	-56(%rbp), %rax	# s, tmp108
	movl	$PL_yylval, %esi	#,
	movq	%rax, %rdi	# tmp108,
	call	Perl_scan_num	#
	movq	%rax, -56(%rbp)	# tmp109, s
	.loc 1 877 0
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, tmp110
	movq	%rax, -40(%rbp)	# tmp110, version
	.loc 1 878 0
	movq	-40(%rbp), %rax	# version, tmp111
	movq	40(%rax), %rax	# MEM[(struct SVOP *)version_29].op_sv, tmp112
	movq	%rax, -24(%rbp)	# tmp112, ver
	.loc 1 879 0
	movq	-24(%rbp), %rax	# ver, tmp113
	movl	12(%rax), %eax	# ver_30->sv_flags, D.28755
	andl	$262144, %eax	#, D.28755
	testl	%eax, %eax	# D.28755
	je	.L213	#,
	.loc 1 879 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# ver, tmp114
	movl	12(%rax), %eax	# ver_30->sv_flags, D.28755
	andl	$196608, %eax	#, D.28755
	testl	%eax, %eax	# D.28755
	jne	.L213	#,
	.loc 1 880 0 is_stmt 1
	movq	-24(%rbp), %rax	# ver, tmp115
	movl	12(%rax), %eax	# ver_30->sv_flags, D.28755
	movzbl	%al, %eax	# D.28755, D.28755
	cmpl	$5, %eax	#, D.28755
	ja	.L214	#,
	.loc 1 880 0 is_stmt 0 discriminator 2
	movq	-24(%rbp), %rax	# ver, tmp116
	movl	$6, %esi	#,
	movq	%rax, %rdi	# tmp116,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.28754
	je	.L216	#,
.L214:
	.loc 1 880 0 discriminator 1
	nop
.L216:
	.loc 1 881 0 is_stmt 1
	movq	-24(%rbp), %rax	# ver, tmp117
	movq	(%rax), %rbx	# ver_30->sv_any, D.28756
	movq	-24(%rbp), %rax	# ver, tmp118
	movq	%rax, %rdi	# tmp118,
	call	Perl_str_to_version	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.28757
	movq	%rax, 32(%rbx)	# D.28757, MEM[(struct XPVNV *)_40].xnv_nv
	.loc 1 882 0
	movq	-24(%rbp), %rax	# ver, tmp119
	movl	12(%rax), %eax	# ver_30->sv_flags, D.28755
	orl	$33685504, %eax	#, D.28755
	movl	%eax, %edx	# D.28755, D.28755
	movq	-24(%rbp), %rax	# ver, tmp120
	movl	%edx, 12(%rax)	# D.28755, ver_30->sv_flags
.LBE10:
	.loc 1 874 0
	jmp	.L207	#
.L213:
	jmp	.L207	#
.L212:
	.loc 1 885 0
	cmpl	$0, -60(%rbp)	#, guessing
	je	.L207	#,
	.loc 1 886 0
	movq	-56(%rbp), %rax	# s, D.28753
	jmp	.L217	#
.L207:
	.loc 1 890 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.259
	cltq
	movq	-40(%rbp), %rdx	# version, tmp122
	movq	%rdx, PL_nextval(,%rax,8)	# tmp122, PL_nextval[PL_nexttoke.259_45].opval
	.loc 1 891 0
	movl	$257, %edi	#,
	call	S_force_next	#
	.loc 1 893 0
	movq	-56(%rbp), %rax	# s, D.28753
.L217:
	.loc 1 894 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE18:
	.size	S_force_version, .-S_force_version
	.section	.rodata
.LC16:
	.string	"q"
	.text
	.type	S_tokeq, @function
S_tokeq:
.LFB19:
	.loc 1 906 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -56(%rbp)	# sv, sv
	.loc 1 910 0
	movq	$0, -48(%rbp)	#, len
	.loc 1 911 0
	movq	-56(%rbp), %rax	# sv, tmp104
	movq	%rax, -40(%rbp)	# tmp104, pv
	.loc 1 913 0
	movq	-56(%rbp), %rax	# sv, tmp105
	movq	(%rax), %rax	# sv_9(D)->sv_any, D.28759
	movq	16(%rax), %rax	# MEM[(struct XPV *)_11].xpv_len, D.28760
	testq	%rax, %rax	# D.28760
	jne	.L219	#,
	.loc 1 914 0
	jmp	.L220	#
.L219:
	.loc 1 916 0
	movq	-56(%rbp), %rax	# sv, tmp106
	movl	12(%rax), %eax	# sv_9(D)->sv_flags, D.28761
	andl	$10223616, %eax	#, D.28761
	cmpl	$262144, %eax	#, D.28761
	jne	.L221	#,
	.loc 1 916 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp107
	movq	(%rax), %rax	# sv_9(D)->sv_any, D.28759
	movq	8(%rax), %rax	# MEM[(struct XPV *)_15].xpv_cur, len.261
	movq	%rax, -48(%rbp)	# len.261, len
	movq	-56(%rbp), %rax	# sv, tmp108
	movq	(%rax), %rax	# sv_9(D)->sv_any, D.28759
	movq	(%rax), %rax	# MEM[(struct XPV *)_17].xpv_pv, iftmp.260
	jmp	.L222	#
.L221:
	.loc 1 916 0 discriminator 2
	leaq	-48(%rbp), %rcx	#, tmp109
	movq	-56(%rbp), %rax	# sv, tmp110
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp109,
	movq	%rax, %rdi	# tmp110,
	call	Perl_sv_pvn_force_flags	#
.L222:
	.loc 1 916 0 discriminator 3
	movq	%rax, %rbx	# iftmp.260, s
	.loc 1 917 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# sv, tmp111
	movl	12(%rax), %eax	# sv_9(D)->sv_flags, D.28761
	movzbl	%al, %eax	# D.28761, D.28761
	cmpl	$4, %eax	#, D.28761
	jbe	.L223	#,
	.loc 1 917 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp112
	movq	(%rax), %rax	# sv_9(D)->sv_any, D.28759
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_23].xiv_iv, D.28762
	cmpq	$-1, %rax	#, D.28762
	jne	.L223	#,
	.loc 1 918 0 is_stmt 1
	jmp	.L220	#
.L223:
	.loc 1 919 0
	movq	-48(%rbp), %rax	# len, len.262
	leaq	(%rbx,%rax), %r13	#, send
	.loc 1 920 0
	jmp	.L224	#
.L226:
	.loc 1 921 0
	addq	$1, %rbx	#, s
.L224:
	.loc 1 920 0 discriminator 1
	cmpq	%r13, %rbx	# send, s
	jae	.L225	#,
	.loc 1 920 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_1, D.28763
	cmpb	$92, %al	#, D.28763
	jne	.L226	#,
.L225:
	.loc 1 922 0 is_stmt 1
	cmpq	%r13, %rbx	# send, s
	jne	.L227	#,
	.loc 1 923 0
	jmp	.L220	#
.L227:
	.loc 1 924 0
	movq	%rbx, %r12	# s, d
	.loc 1 925 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.263
	andl	$32768, %eax	#, D.28761
	testl	%eax, %eax	# D.28761
	je	.L228	#,
	.loc 1 926 0
	movq	-48(%rbp), %rdx	# len, len.264
	movq	-40(%rbp), %rax	# pv, tmp113
	movq	(%rax), %rax	# pv_10->sv_any, D.28759
	movq	(%rax), %rax	# MEM[(struct XPV *)_33].xpv_pv, D.28764
	movq	%rdx, %rsi	# len.264,
	movq	%rax, %rdi	# D.28764,
	call	Perl_newSVpvn	#
	movq	%rax, %rdi	# D.28758,
	call	Perl_sv_2mortal	#
	movq	%rax, -40(%rbp)	# tmp114, pv
	.loc 1 927 0
	movq	-56(%rbp), %rax	# sv, tmp115
	movl	12(%rax), %eax	# sv_9(D)->sv_flags, D.28761
	andl	$536870912, %eax	#, D.28761
	testl	%eax, %eax	# D.28761
	je	.L228	#,
	.loc 1 928 0
	movq	-40(%rbp), %rax	# pv, tmp116
	movl	12(%rax), %eax	# pv_36->sv_flags, D.28761
	orl	$536870912, %eax	#, D.28761
	movl	%eax, %edx	# D.28761, D.28761
	movq	-40(%rbp), %rax	# pv, tmp117
	movl	%edx, 12(%rax)	# D.28761, pv_36->sv_flags
	.loc 1 930 0
	jmp	.L229	#
.L228:
	jmp	.L229	#
.L231:
	.loc 1 931 0
	movzbl	(%rbx), %eax	# *s_3, D.28763
	cmpb	$92, %al	#, D.28763
	jne	.L230	#,
	.loc 1 932 0
	leaq	1(%rbx), %rax	#, D.28764
	cmpq	%r13, %rax	# send, D.28764
	jae	.L230	#,
	.loc 1 932 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28764
	movzbl	(%rax), %eax	# *_43, D.28763
	cmpb	$92, %al	#, D.28763
	jne	.L230	#,
	.loc 1 933 0 is_stmt 1
	addq	$1, %rbx	#, s
.L230:
	.loc 1 935 0
	movq	%r12, %rax	# d, d.265
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.266
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.266_48, D.28763
	movb	%dl, (%rax)	# D.28763, *d.265_46
.L229:
	.loc 1 930 0 discriminator 1
	cmpq	%r13, %rbx	# send, s
	jb	.L231	#,
	.loc 1 937 0
	movb	$0, (%r12)	#, *d_4
	.loc 1 938 0
	movq	-56(%rbp), %rax	# sv, tmp118
	movq	(%rax), %rax	# sv_9(D)->sv_any, D.28759
	movq	%r12, %rcx	# d, d.267
	movq	-56(%rbp), %rdx	# sv, tmp119
	movq	(%rdx), %rdx	# sv_9(D)->sv_any, D.28759
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_53].xpv_pv, D.28764
	subq	%rdx, %rcx	# D.28762, D.28762
	movq	%rcx, %rdx	# D.28762, D.28762
	movq	%rdx, 8(%rax)	# D.28760, MEM[(struct XPV *)_51].xpv_cur
.L220:
	.loc 1 940 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.268
	andl	$32768, %eax	#, D.28761
	testl	%eax, %eax	# D.28761
	je	.L232	#,
	.loc 1 941 0
	movq	-40(%rbp), %rdx	# pv, tmp120
	movq	-56(%rbp), %rax	# sv, tmp121
	movl	$.LC16, %r9d	#,
	movq	%rdx, %r8	# tmp120,
	movq	%rax, %rcx	# tmp121,
	movl	$.LC16, %edx	#,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	S_new_constant	#
	jmp	.L234	#
.L232:
	.loc 1 942 0
	movq	-56(%rbp), %rax	# sv, D.28758
.L234:
	.loc 1 943 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE19:
	.size	S_tokeq, .-S_tokeq
	.type	S_sublex_start, @function
S_sublex_start:
.LFB20:
	.loc 1 979 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 980 0
	movl	PL_yylval(%rip), %ebx	# PL_yylval.ival, op_type
	.loc 1 982 0
	testl	%ebx, %ebx	# op_type
	jne	.L236	#,
	.loc 1 983 0
	movq	PL_lex_op(%rip), %rax	# PL_lex_op, PL_lex_op.269
	movq	%rax, PL_yylval(%rip)	# PL_lex_op.269, PL_yylval.opval
	.loc 1 984 0
	movq	$0, PL_lex_op(%rip)	#, PL_lex_op
	.loc 1 985 0
	movl	$260, %eax	#, D.28766
	jmp	.L237	#
.L236:
	.loc 1 987 0
	cmpl	$5, %ebx	#, op_type
	je	.L238	#,
	.loc 1 987 0 is_stmt 0 discriminator 1
	cmpl	$26, %ebx	#, op_type
	jne	.L239	#,
.L238:
.LBB11:
	.loc 1 988 0 is_stmt 1
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.270
	movq	%rax, %rdi	# PL_lex_stuff.270,
	call	S_tokeq	#
	movq	%rax, -40(%rbp)	# tmp83, sv
	.loc 1 990 0
	movq	-40(%rbp), %rax	# sv, tmp84
	movl	12(%rax), %eax	# sv_15->sv_flags, D.28767
	movzbl	%al, %eax	# D.28767, D.28767
	cmpl	$5, %eax	#, D.28767
	jne	.L240	#,
.LBB12:
	.loc 1 996 0
	movq	-40(%rbp), %rax	# sv, tmp85
	movl	12(%rax), %eax	# sv_15->sv_flags, D.28767
	andl	$262144, %eax	#, D.28767
	testl	%eax, %eax	# D.28767
	je	.L241	#,
	.loc 1 996 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp86
	movq	(%rax), %rax	# sv_15->sv_any, D.28768
	movq	8(%rax), %rax	# MEM[(struct XPV *)_20].xpv_cur, len.272
	movq	%rax, -48(%rbp)	# len.272, len
	movq	-40(%rbp), %rax	# sv, tmp87
	movq	(%rax), %rax	# sv_15->sv_any, D.28768
	movq	(%rax), %rax	# MEM[(struct XPV *)_22].xpv_pv, iftmp.271
	jmp	.L242	#
.L241:
	.loc 1 996 0 discriminator 2
	leaq	-48(%rbp), %rcx	#, tmp88
	movq	-40(%rbp), %rax	# sv, tmp89
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp88,
	movq	%rax, %rdi	# tmp89,
	call	Perl_sv_2pv_flags	#
.L242:
	.loc 1 996 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.271, p
	.loc 1 997 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rdx	# len, len.273
	movq	-32(%rbp), %rax	# p, tmp90
	movq	%rdx, %rsi	# len.273,
	movq	%rax, %rdi	# tmp90,
	call	Perl_newSVpvn	#
	movq	%rax, -24(%rbp)	# tmp91, nsv
	.loc 1 998 0 discriminator 3
	movq	-40(%rbp), %rax	# sv, tmp92
	movl	12(%rax), %eax	# sv_15->sv_flags, D.28767
	andl	$536870912, %eax	#, D.28767
	testl	%eax, %eax	# D.28767
	je	.L243	#,
	.loc 1 999 0
	movq	-24(%rbp), %rax	# nsv, tmp93
	movl	12(%rax), %eax	# nsv_27->sv_flags, D.28767
	orl	$536870912, %eax	#, D.28767
	movl	%eax, %edx	# D.28767, D.28767
	movq	-24(%rbp), %rax	# nsv, tmp94
	movl	%edx, 12(%rax)	# D.28767, nsv_27->sv_flags
.L243:
	.loc 1 1000 0
	movq	-40(%rbp), %rax	# sv, tmp95
	movq	%rax, %rdi	# tmp95,
	call	Perl_sv_free	#
	.loc 1 1001 0
	movq	-24(%rbp), %rax	# nsv, tmp96
	movq	%rax, -40(%rbp)	# tmp96, sv
.L240:
.LBE12:
	.loc 1 1003 0
	movq	-40(%rbp), %rax	# sv, tmp97
	movq	%rax, %rdx	# tmp97,
	movl	$0, %esi	#,
	movl	%ebx, %edi	# op_type,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.28769, PL_yylval.opval
	.loc 1 1004 0
	movq	$0, PL_lex_stuff(%rip)	#, PL_lex_stuff
	.loc 1 1005 0
	movl	$260, %eax	#, D.28766
	jmp	.L237	#
.L239:
.LBE11:
	.loc 1 1008 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.274
	movl	%eax, PL_sublex_info(%rip)	# PL_lex_state.275, PL_sublex_info.super_state
	.loc 1 1009 0
	movl	%ebx, PL_sublex_info+4(%rip)	# op_type, PL_sublex_info.sub_inwhat
	.loc 1 1010 0
	movq	PL_lex_op(%rip), %rax	# PL_lex_op, PL_lex_op.276
	movq	%rax, PL_sublex_info+8(%rip)	# PL_lex_op.276, PL_sublex_info.sub_op
	.loc 1 1011 0
	movl	$7, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 1013 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 1014 0
	movq	PL_lex_op(%rip), %rax	# PL_lex_op, PL_lex_op.277
	testq	%rax, %rax	# PL_lex_op.277
	je	.L244	#,
	.loc 1 1015 0
	movq	PL_lex_op(%rip), %rax	# PL_lex_op, PL_lex_op.278
	movq	%rax, PL_yylval(%rip)	# PL_lex_op.278, PL_yylval.opval
	.loc 1 1016 0
	movq	$0, PL_lex_op(%rip)	#, PL_lex_op
	.loc 1 1017 0
	movl	$261, %eax	#, D.28766
	jmp	.L237	#
.L244:
	.loc 1 1020 0
	movl	$284, %eax	#, D.28766
.L237:
	.loc 1 1021 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE20:
	.size	S_sublex_start, .-S_sublex_start
	.type	S_sublex_push, @function
S_sublex_push:
.LFB21:
	.loc 1 1033 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 1034 0
	call	Perl_push_scope	#
	.loc 1 1036 0
	movl	PL_sublex_info(%rip), %eax	# PL_sublex_info.super_state, D.28770
	movl	%eax, PL_lex_state(%rip)	# PL_lex_state.279, PL_lex_state
	.loc 1 1037 0
	movl	$PL_lex_dojoin, %edi	#,
	call	Perl_save_I32	#
	.loc 1 1038 0
	movl	$PL_lex_brackets, %edi	#,
	call	Perl_save_I32	#
	.loc 1 1039 0
	movl	$PL_lex_casemods, %edi	#,
	call	Perl_save_I32	#
	.loc 1 1040 0
	movl	$PL_lex_starts, %edi	#,
	call	Perl_save_I32	#
	.loc 1 1041 0
	movl	$PL_lex_state, %edi	#,
	call	Perl_save_I32	#
	.loc 1 1042 0
	movl	$PL_lex_inpat, %edi	#,
	call	Perl_save_vptr	#
	.loc 1 1043 0
	movl	$PL_lex_inwhat, %edi	#,
	call	Perl_save_I32	#
	.loc 1 1044 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.280
	addq	$72, %rax	#, D.28771
	movq	%rax, %rdi	# D.28771,
	call	Perl_save_I32	#
	.loc 1 1045 0
	movl	$PL_bufptr, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 1046 0
	movl	$PL_bufend, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 1047 0
	movl	$PL_oldbufptr, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 1048 0
	movl	$PL_oldoldbufptr, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 1049 0
	movl	$PL_last_lop, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 1050 0
	movl	$PL_last_uni, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 1051 0
	movl	$PL_linestart, %edi	#,
	call	Perl_save_pptr	#
	.loc 1 1052 0
	movl	$PL_linestr, %edi	#,
	call	Perl_save_sptr	#
	.loc 1 1053 0
	movl	$PL_lex_brackstack, %edi	#,
	call	Perl_save_generic_pvref	#
	.loc 1 1054 0
	movl	$PL_lex_casestack, %edi	#,
	call	Perl_save_generic_pvref	#
	.loc 1 1056 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.281
	movq	%rax, PL_linestr(%rip)	# PL_lex_stuff.281, PL_linestr
	.loc 1 1057 0
	movq	$0, PL_lex_stuff(%rip)	#, PL_lex_stuff
	.loc 1 1060 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.282
	movq	(%rax), %rax	# PL_linestr.282_6->sv_any, D.28772
	movq	(%rax), %rax	# MEM[(struct XPV *)_7].xpv_pv, PL_linestart.283
	movq	%rax, PL_linestart(%rip)	# PL_linestart.283, PL_linestart
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.284
	.loc 1 1059 0
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_linestart.284, PL_oldoldbufptr
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.285
	movq	%rax, PL_oldbufptr(%rip)	# PL_oldoldbufptr.285, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.286
	movq	%rax, PL_bufptr(%rip)	# PL_oldbufptr.286, PL_bufptr
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.287
	movq	%rax, PL_bufend(%rip)	# PL_bufptr.287, PL_bufend
	.loc 1 1061 0
	movq	PL_bufend(%rip), %rdx	# PL_bufend, PL_bufend.288
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.289
	movq	(%rax), %rax	# PL_linestr.289_14->sv_any, D.28772
	movq	8(%rax), %rax	# MEM[(struct XPV *)_15].xpv_cur, D.28773
	addq	%rdx, %rax	# PL_bufend.288, PL_bufend.290
	movq	%rax, PL_bufend(%rip)	# PL_bufend.290, PL_bufend
	.loc 1 1062 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.291
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.291, PL_last_lop
	.loc 1 1063 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.292
	movq	%rax, %rdi	# PL_linestr.292,
	call	Perl_save_freesv	#
	.loc 1 1065 0
	movl	$0, PL_lex_dojoin(%rip)	#, PL_lex_dojoin
	.loc 1 1066 0
	movl	$0, PL_lex_brackets(%rip)	#, PL_lex_brackets
	.loc 1 1067 0
	movl	$120, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, PL_lex_brackstack(%rip)	# PL_lex_brackstack.293, PL_lex_brackstack
	.loc 1 1068 0
	movl	$12, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, PL_lex_casestack(%rip)	# PL_lex_casestack.294, PL_lex_casestack
	.loc 1 1069 0
	movl	$0, PL_lex_casemods(%rip)	#, PL_lex_casemods
	.loc 1 1070 0
	movq	PL_lex_casestack(%rip), %rax	# PL_lex_casestack, PL_lex_casestack.295
	movb	$0, (%rax)	#, *PL_lex_casestack.295_22
	.loc 1 1071 0
	movl	$0, PL_lex_starts(%rip)	#, PL_lex_starts
	.loc 1 1072 0
	movl	$3, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 1073 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.296
	movl	PL_multi_start(%rip), %edx	# PL_multi_start, PL_multi_start.297
	movl	%edx, 72(%rax)	# PL_multi_start.298, PL_curcop.296_23->cop_line
	.loc 1 1075 0
	movl	PL_sublex_info+4(%rip), %eax	# PL_sublex_info.sub_inwhat, PL_lex_inwhat.299
	movl	%eax, PL_lex_inwhat(%rip)	# PL_lex_inwhat.299, PL_lex_inwhat
	.loc 1 1076 0
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.300
	cmpl	$31, %eax	#, PL_lex_inwhat.300
	je	.L246	#,
	.loc 1 1076 0 is_stmt 0 discriminator 1
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.301
	cmpl	$32, %eax	#, PL_lex_inwhat.301
	je	.L246	#,
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.302
	cmpl	$33, %eax	#, PL_lex_inwhat.302
	jne	.L247	#,
.L246:
	.loc 1 1077 0 is_stmt 1
	movq	PL_sublex_info+8(%rip), %rax	# PL_sublex_info.sub_op, PL_lex_inpat.303
	movq	%rax, PL_lex_inpat(%rip)	# PL_lex_inpat.303, PL_lex_inpat
	jmp	.L248	#
.L247:
	.loc 1 1079 0
	movq	$0, PL_lex_inpat(%rip)	#, PL_lex_inpat
.L248:
	.loc 1 1081 0
	movl	$40, %eax	#, D.28774
	.loc 1 1082 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE21:
	.size	S_sublex_push, .-S_sublex_push
	.section	.rodata
.LC17:
	.string	""
	.text
	.type	S_sublex_done, @function
S_sublex_done:
.LFB22:
	.loc 1 1091 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 1092 0
	movl	PL_lex_starts(%rip), %eax	# PL_lex_starts, PL_lex_starts.304
	leal	1(%rax), %edx	#, PL_lex_starts.306
	movl	%edx, PL_lex_starts(%rip)	# PL_lex_starts.306, PL_lex_starts
	testl	%eax, %eax	# PL_lex_starts.305
	jne	.L251	#,
.LBB13:
	.loc 1 1093 0
	movl	$0, %esi	#,
	movl	$.LC17, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, -8(%rbp)	# tmp103, sv
	.loc 1 1094 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.307
	movl	12(%rax), %eax	# PL_linestr.307_6->sv_flags, D.28776
	andl	$536870912, %eax	#, D.28776
	testl	%eax, %eax	# D.28776
	je	.L252	#,
	.loc 1 1095 0
	movq	-8(%rbp), %rax	# sv, tmp104
	movl	12(%rax), %eax	# sv_5->sv_flags, D.28776
	orl	$536870912, %eax	#, D.28776
	movl	%eax, %edx	# D.28776, D.28776
	movq	-8(%rbp), %rax	# sv, tmp105
	movl	%edx, 12(%rax)	# D.28776, sv_5->sv_flags
.L252:
	.loc 1 1096 0
	movl	$0, PL_expect(%rip)	#, PL_expect
	.loc 1 1097 0
	movq	-8(%rbp), %rax	# sv, tmp106
	movq	%rax, %rdx	# tmp106,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.28777, PL_yylval.opval
	.loc 1 1098 0
	movl	$260, %eax	#, D.28775
	jmp	.L253	#
.L251:
.LBE13:
	.loc 1 1101 0
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.308
	testl	%eax, %eax	# PL_lex_casemods.308
	je	.L254	#,
	.loc 1 1102 0
	movl	$8, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 1103 0
	call	Perl_yylex	#
	jmp	.L253	#
.L254:
	.loc 1 1107 0
	movq	PL_lex_repl(%rip), %rax	# PL_lex_repl, PL_lex_repl.309
	testq	%rax, %rax	# PL_lex_repl.309
	je	.L255	#,
	.loc 1 1107 0 is_stmt 0 discriminator 1
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.310
	cmpl	$33, %eax	#, PL_lex_inwhat.310
	je	.L256	#,
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.311
	cmpl	$35, %eax	#, PL_lex_inwhat.311
	jne	.L255	#,
.L256:
	.loc 1 1108 0 is_stmt 1
	movq	PL_lex_repl(%rip), %rax	# PL_lex_repl, PL_lex_repl.312
	movq	%rax, PL_linestr(%rip)	# PL_lex_repl.312, PL_linestr
	.loc 1 1109 0
	movq	$0, PL_lex_inpat(%rip)	#, PL_lex_inpat
	.loc 1 1110 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.313
	movq	(%rax), %rax	# PL_linestr.313_19->sv_any, D.28778
	movq	(%rax), %rax	# MEM[(struct XPV *)_20].xpv_pv, PL_linestart.314
	movq	%rax, PL_linestart(%rip)	# PL_linestart.314, PL_linestart
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.315
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_linestart.315, PL_oldoldbufptr
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.316
	movq	%rax, PL_oldbufptr(%rip)	# PL_oldoldbufptr.316, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.317
	movq	%rax, PL_bufptr(%rip)	# PL_oldbufptr.317, PL_bufptr
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.318
	movq	%rax, PL_bufend(%rip)	# PL_bufptr.318, PL_bufend
	.loc 1 1111 0
	movq	PL_bufend(%rip), %rdx	# PL_bufend, PL_bufend.319
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.320
	movq	(%rax), %rax	# PL_linestr.320_27->sv_any, D.28778
	movq	8(%rax), %rax	# MEM[(struct XPV *)_28].xpv_cur, D.28779
	addq	%rdx, %rax	# PL_bufend.319, PL_bufend.321
	movq	%rax, PL_bufend(%rip)	# PL_bufend.321, PL_bufend
	.loc 1 1112 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.322
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.322, PL_last_lop
	.loc 1 1113 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.323
	movq	%rax, %rdi	# PL_linestr.323,
	call	Perl_save_freesv	#
	.loc 1 1114 0
	movl	$0, PL_lex_dojoin(%rip)	#, PL_lex_dojoin
	.loc 1 1115 0
	movl	$0, PL_lex_brackets(%rip)	#, PL_lex_brackets
	.loc 1 1116 0
	movl	$0, PL_lex_casemods(%rip)	#, PL_lex_casemods
	.loc 1 1117 0
	movq	PL_lex_casestack(%rip), %rax	# PL_lex_casestack, PL_lex_casestack.324
	movb	$0, (%rax)	#, *PL_lex_casestack.324_33
	.loc 1 1118 0
	movl	$0, PL_lex_starts(%rip)	#, PL_lex_starts
	.loc 1 1119 0
	movq	PL_lex_repl(%rip), %rax	# PL_lex_repl, PL_lex_repl.325
	movl	12(%rax), %eax	# PL_lex_repl.325_34->sv_flags, D.28776
	andl	$1073741824, %eax	#, D.28776
	testl	%eax, %eax	# D.28776
	je	.L257	#,
	.loc 1 1120 0
	movl	$9, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 1121 0
	movl	PL_lex_starts(%rip), %eax	# PL_lex_starts, PL_lex_starts.326
	addl	$1, %eax	#, PL_lex_starts.327
	movl	%eax, PL_lex_starts(%rip)	# PL_lex_starts.327, PL_lex_starts
	jmp	.L258	#
.L257:
	.loc 1 1128 0
	movl	$3, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 1129 0
	movq	$0, PL_lex_repl(%rip)	#, PL_lex_repl
.L258:
	.loc 1 1131 0
	movl	$44, %eax	#, D.28775
	jmp	.L253	#
.L255:
	.loc 1 1134 0
	call	Perl_pop_scope	#
	.loc 1 1135 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.328
	movq	(%rax), %rax	# PL_linestr.328_40->sv_any, D.28778
	movq	(%rax), %rax	# MEM[(struct XPV *)_41].xpv_pv, PL_bufend.329
	movq	%rax, PL_bufend(%rip)	# PL_bufend.329, PL_bufend
	.loc 1 1136 0
	movq	PL_bufend(%rip), %rdx	# PL_bufend, PL_bufend.330
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.331
	movq	(%rax), %rax	# PL_linestr.331_44->sv_any, D.28778
	movq	8(%rax), %rax	# MEM[(struct XPV *)_45].xpv_cur, D.28779
	addq	%rdx, %rax	# PL_bufend.330, PL_bufend.332
	movq	%rax, PL_bufend(%rip)	# PL_bufend.332, PL_bufend
	.loc 1 1137 0
	movl	$0, PL_expect(%rip)	#, PL_expect
	.loc 1 1138 0
	movl	$0, PL_sublex_info+4(%rip)	#, PL_sublex_info.sub_inwhat
	.loc 1 1139 0
	movl	$41, %eax	#, D.28775
.L253:
	.loc 1 1141 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE22:
	.size	S_sublex_done, .-S_sublex_done
	.section	.rodata
	.align 8
.LC18:
	.string	"\\.^$@AGZdDwWsSbBpPXC+*?|()-nrtfeaxz0123456789[{]} \t\n\r\f\013#"
	.align 8
.LC19:
	.string	"Invalid range \"%c-%c\" in transliteration operator"
	.align 8
.LC20:
	.string	"Ambiguous range in transliteration operator"
.LC21:
	.string	":'{$+-"
.LC22:
	.string	"()| \r\n\t"
.LC23:
	.string	"\\%c better written as $%c"
.LC24:
	.string	"lLuUEQ"
	.align 8
.LC25:
	.string	"Unrecognized escape \\%c passed through"
.LC26:
	.string	"Missing right brace on \\x{}"
.LC27:
	.string	"Missing right brace on \\N{}"
.LC28:
	.string	"\\N{...}"
.LC29:
	.string	"charnames"
.LC30:
	.string	"Missing braces on \\N{}"
	.align 8
.LC31:
	.string	"Missing control char name in \\c"
	.align 8
.LC32:
	.string	"panic: constant overflowed allocated space"
.LC33:
	.string	"s"
.LC34:
	.string	"qq"
.LC35:
	.string	"tr"
.LC36:
	.string	"qr"
	.text
	.type	S_scan_const, @function
S_scan_const:
.LFB23:
	.loc 1 1218 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$232, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -248(%rbp)	# start, start
	.loc 1 1219 0
	movq	PL_bufend(%rip), %r13	# PL_bufend, send
	.loc 1 1220 0
	movq	%r13, %rdx	# send, send.333
	movq	-248(%rbp), %rax	# start, start.334
	subq	%rax, %rdx	# start.334, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	movq	%rax, %rdi	# D.28782,
	call	Perl_newSV	#
	movq	%rax, -184(%rbp)	# tmp563, sv
	.loc 1 1221 0
	movq	-248(%rbp), %rbx	# start, s
	.loc 1 1222 0
	movq	-184(%rbp), %rax	# sv, tmp564
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %r12	# MEM[(struct XPV *)_93].xpv_pv, d
	.loc 1 1223 0
	movb	$0, -229(%rbp)	#, dorange
	.loc 1 1224 0
	movb	$0, -228(%rbp)	#, didrange
	.loc 1 1225 0
	movl	$0, -220(%rbp)	#, has_utf8
	.loc 1 1226 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.336
	testq	%rax, %rax	# PL_linestr.336
	je	.L260	#,
	.loc 1 1226 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.337
	movl	12(%rax), %eax	# PL_linestr.337_99->sv_flags, D.28784
	andl	$536870912, %eax	#, D.28784
	testl	%eax, %eax	# D.28784
	je	.L260	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.338
	movzbl	37(%rax), %eax	# PL_curcop.338_102->op_private, D.28785
	movzbl	%al, %eax	# D.28785, D.28786
	andl	$8, %eax	#, D.28786
	testl	%eax, %eax	# D.28786
	je	.L261	#,
.L260:
	.loc 1 1226 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.339
	andl	$8388608, %eax	#, D.28784
	testl	%eax, %eax	# D.28784
	je	.L262	#,
.L261:
	.loc 1 1226 0 discriminator 1
	movl	$1, %eax	#, iftmp.335
	jmp	.L263	#
.L262:
	.loc 1 1226 0 discriminator 3
	movl	$0, %eax	#, iftmp.335
.L263:
	.loc 1 1226 0 discriminator 4
	movl	%eax, -216(%rbp)	# iftmp.335, this_utf8
	.loc 1 1231 0 is_stmt 1 discriminator 4
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.341
	.loc 1 1232 0 discriminator 4
	testq	%rax, %rax	# PL_lex_inpat.341
	je	.L264	#,
	.loc 1 1232 0 is_stmt 0 discriminator 1
	movl	$.LC18, %eax	#, iftmp.340
	jmp	.L265	#
.L264:
	.loc 1 1232 0 discriminator 2
	movl	$.LC17, %eax	#, iftmp.340
.L265:
	.loc 1 1229 0 is_stmt 1
	movq	%rax, -120(%rbp)	# iftmp.340, leaveit
	.loc 1 1234 0
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.342
	cmpl	$35, %eax	#, PL_lex_inwhat.342
	jne	.L266	#,
	.loc 1 1234 0 is_stmt 0 discriminator 1
	movq	PL_sublex_info+8(%rip), %rax	# PL_sublex_info.sub_op, D.28787
	testq	%rax, %rax	# D.28787
	je	.L266	#,
	.loc 1 1236 0 is_stmt 1
	movq	PL_sublex_info+8(%rip), %rax	# PL_sublex_info.sub_op, D.28787
	movzbl	37(%rax), %eax	# _117->op_private, D.28785
	movzbl	%al, %eax	# D.28785, D.28786
	andl	$3, %eax	#, tmp565
	movl	%eax, -220(%rbp)	# tmp565, has_utf8
	.loc 1 1237 0
	movq	PL_sublex_info+8(%rip), %rax	# PL_sublex_info.sub_op, D.28787
	movzbl	37(%rax), %eax	# _121->op_private, D.28785
	movzbl	%al, %edx	# D.28785, D.28786
	movq	PL_lex_repl(%rip), %rax	# PL_lex_repl, PL_lex_repl.344
	testq	%rax, %rax	# PL_lex_repl.344
	je	.L267	#,
	.loc 1 1237 0 is_stmt 0 discriminator 1
	movl	$1, %eax	#, iftmp.343
	jmp	.L268	#
.L267:
	.loc 1 1237 0 discriminator 2
	movl	$2, %eax	#, iftmp.343
.L268:
	.loc 1 1237 0 discriminator 3
	andl	%edx, %eax	# D.28786, tmp566
	movl	%eax, -216(%rbp)	# tmp566, this_utf8
	.loc 1 1241 0 is_stmt 1 discriminator 3
	jmp	.L269	#
.L266:
	.loc 1 1241 0 is_stmt 0
	jmp	.L269	#
.L411:
	.loc 1 1243 0 is_stmt 1
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.345
	cmpl	$35, %eax	#, PL_lex_inwhat.345
	jne	.L270	#,
	.loc 1 1245 0
	cmpb	$0, -229(%rbp)	#, dorange
	je	.L271	#,
.LBB14:
	.loc 1 1250 0
	cmpl	$0, -220(%rbp)	#, has_utf8
	je	.L272	#,
.LBB15:
	.loc 1 1251 0
	movl	$-1, %esi	#,
	movq	%r12, %rdi	# d,
	call	Perl_utf8_hop	#
	movq	%rax, -112(%rbp)	# tmp567, c
	.loc 1 1252 0
	movq	%r12, %rax	# d, d.346
	leaq	1(%rax), %r12	#, d
	movq	%rax, -168(%rbp)	# d.346, e
	.loc 1 1253 0
	jmp	.L273	#
.L274:
	.loc 1 1254 0
	movq	-168(%rbp), %rax	# e, tmp568
	leaq	1(%rax), %rdx	#, D.28788
	movq	-168(%rbp), %rax	# e, tmp569
	movzbl	(%rax), %eax	# *e_134, D.28789
	movb	%al, (%rdx)	# D.28789, *_135
.L273:
	.loc 1 1253 0 discriminator 1
	movq	-168(%rbp), %rax	# e, e.347
	leaq	-1(%rax), %rdx	#, tmp570
	movq	%rdx, -168(%rbp)	# tmp570, e
	cmpq	-112(%rbp), %rax	# c, e.347
	ja	.L274	#,
	.loc 1 1255 0
	movq	-112(%rbp), %rax	# c, tmp571
	movb	$-1, (%rax)	#, *c_129
	.loc 1 1257 0
	movb	$0, -229(%rbp)	#, dorange
	.loc 1 1258 0
	movb	$1, -228(%rbp)	#, didrange
	.loc 1 1259 0
	jmp	.L269	#
.L272:
.LBE15:
	.loc 1 1262 0
	movq	%r12, %rdx	# d, d.348
	movq	-184(%rbp), %rax	# sv, tmp572
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_140].xpv_pv, D.28788
	subq	%rax, %rdx	# D.28781, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	movl	%eax, -212(%rbp)	# D.28781, i
	.loc 1 1263 0
	movq	-184(%rbp), %rax	# sv, tmp573
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_145].xpv_len, D.28782
	movq	-184(%rbp), %rax	# sv, tmp574
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rax	# MEM[(struct XPV *)_147].xpv_len, D.28782
	addq	$256, %rax	#, D.28782
	cmpq	%rax, %rdx	# D.28782, D.28782
	jae	.L276	#,
	.loc 1 1263 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# sv, tmp575
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rax	# MEM[(struct XPV *)_150].xpv_len, D.28782
	leaq	256(%rax), %rdx	#, D.28782
	movq	-184(%rbp), %rax	# sv, tmp576
	movq	%rdx, %rsi	# D.28782,
	movq	%rax, %rdi	# tmp576,
	call	Perl_sv_grow	#
.L276:
	.loc 1 1264 0 is_stmt 1
	movq	-184(%rbp), %rax	# sv, tmp578
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rdx	# MEM[(struct XPV *)_156].xpv_pv, D.28788
	movl	-212(%rbp), %eax	# i, tmp579
	cltq
	leaq	(%rdx,%rax), %r12	#, d
	.loc 1 1265 0
	subq	$2, %r12	#, d
	.loc 1 1267 0
	movzbl	(%r12), %eax	# *d_160, D.28789
	movzbl	%al, %eax	# D.28785, tmp580
	movl	%eax, -200(%rbp)	# tmp580, min
	.loc 1 1268 0
	leaq	1(%r12), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_164, D.28789
	movzbl	%al, %eax	# D.28785, tmp581
	movl	%eax, -196(%rbp)	# tmp581, max
	.loc 1 1270 0
	movl	-200(%rbp), %eax	# min, tmp582
	cmpl	-196(%rbp), %eax	# max, tmp582
	jle	.L277	#,
	.loc 1 1273 0
	movl	-196(%rbp), %eax	# max, tmp583
	.loc 1 1271 0
	movsbl	%al, %edx	# D.28789, D.28786
	.loc 1 1273 0
	movl	-200(%rbp), %eax	# min, tmp584
	.loc 1 1271 0
	movsbl	%al, %eax	# D.28789, D.28786
	movl	%eax, %esi	# D.28786,
	movl	$.LC19, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L277:
	.loc 1 1291 0
	movl	-200(%rbp), %eax	# min, tmp585
	movl	%eax, -212(%rbp)	# tmp585, i
	jmp	.L278	#
.L279:
	.loc 1 1292 0 discriminator 2
	movq	%r12, %rax	# d, d.350
	leaq	1(%rax), %r12	#, d
	movl	-212(%rbp), %edx	# i, tmp586
	movb	%dl, (%rax)	# D.28789, *d.350_173
	.loc 1 1291 0 discriminator 2
	addl	$1, -212(%rbp)	#, i
.L278:
	.loc 1 1291 0 is_stmt 0 discriminator 1
	movl	-212(%rbp), %eax	# i, tmp587
	cmpl	-196(%rbp), %eax	# max, tmp587
	jle	.L279	#,
	.loc 1 1295 0 is_stmt 1
	movb	$0, -229(%rbp)	#, dorange
	.loc 1 1296 0
	movb	$1, -228(%rbp)	#, didrange
	.loc 1 1297 0
	jmp	.L269	#
.L271:
.LBE14:
	.loc 1 1301 0
	movzbl	(%rbx), %eax	# *s_12, D.28789
	cmpb	$45, %al	#, D.28789
	jne	.L280	#,
	.loc 1 1301 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28788
	cmpq	%r13, %rax	# send, D.28788
	jae	.L280	#,
	cmpq	-248(%rbp), %rbx	# start, s
	je	.L280	#,
	.loc 1 1302 0 is_stmt 1
	cmpb	$0, -228(%rbp)	#, didrange
	je	.L281	#,
	.loc 1 1303 0
	movl	$.LC20, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L281:
	.loc 1 1305 0
	cmpl	$0, -220(%rbp)	#, has_utf8
	je	.L282	#,
	.loc 1 1306 0
	movq	%r12, %rax	# d, d.351
	leaq	1(%rax), %r12	#, d
	movb	$-1, (%rax)	#, *d.351_181
	.loc 1 1307 0
	addq	$1, %rbx	#, s
	.loc 1 1308 0
	jmp	.L269	#
.L282:
	.loc 1 1310 0
	movb	$1, -229(%rbp)	#, dorange
	.loc 1 1311 0
	addq	$1, %rbx	#, s
	jmp	.L284	#
.L280:
	.loc 1 1314 0
	movb	$0, -228(%rbp)	#, didrange
	jmp	.L284	#
.L270:
	.loc 1 1322 0
	movzbl	(%rbx), %eax	# *s_12, D.28789
	cmpb	$40, %al	#, D.28789
	jne	.L285	#,
	.loc 1 1322 0 is_stmt 0 discriminator 1
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.352
	testq	%rax, %rax	# PL_lex_inpat.352
	je	.L285	#,
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_189, D.28789
	cmpb	$63, %al	#, D.28789
	jne	.L285	#,
	.loc 1 1323 0 is_stmt 1
	leaq	2(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_191, D.28789
	cmpb	$35, %al	#, D.28789
	jne	.L286	#,
	.loc 1 1324 0
	jmp	.L287	#
.L289:
	.loc 1 1325 0
	movq	%r12, %rax	# d, d.353
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.354
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.354_197, D.28789
	movb	%dl, (%rax)	# D.28789, *d.353_195
.L287:
	.loc 1 1324 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28788
	cmpq	%r13, %rax	# send, D.28788
	jae	.L288	#,
	.loc 1 1324 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.28789
	cmpb	$41, %al	#, D.28789
	jne	.L289	#,
	.loc 1 1323 0 is_stmt 1
	jmp	.L284	#
.L286:
	.loc 1 1327 0
	leaq	2(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_200, D.28789
	cmpb	$123, %al	#, D.28789
	je	.L290	#,
	.loc 1 1328 0
	leaq	2(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_202, D.28789
	cmpb	$112, %al	#, D.28789
	je	.L291	#,
	.loc 1 1328 0 is_stmt 0 discriminator 2
	leaq	2(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_204, D.28789
	cmpb	$63, %al	#, D.28789
	jne	.L288	#,
.L291:
	.loc 1 1328 0 discriminator 1
	leaq	3(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_206, D.28789
	cmpb	$123, %al	#, D.28789
	jne	.L288	#,
.L290:
.LBB16:
	.loc 1 1330 0 is_stmt 1
	movl	$1, -208(%rbp)	#, count
	.loc 1 1331 0
	leaq	2(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_209, D.28789
	cmpb	$123, %al	#, D.28789
	jne	.L292	#,
	.loc 1 1331 0 is_stmt 0 discriminator 1
	movl	$3, %eax	#, iftmp.355
	jmp	.L293	#
.L292:
	.loc 1 1331 0 discriminator 2
	movl	$4, %eax	#, iftmp.355
.L293:
	.loc 1 1331 0 discriminator 3
	addq	%rbx, %rax	# s, tmp588
	movq	%rax, -160(%rbp)	# tmp588, regparse
	.loc 1 1334 0 is_stmt 1 discriminator 3
	jmp	.L294	#
.L299:
	.loc 1 1335 0
	cmpb	$92, -227(%rbp)	#, c
	jne	.L295	#,
	.loc 1 1335 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# regparse, tmp589
	addq	$1, %rax	#, D.28788
	movzbl	(%rax), %eax	# *_215, D.28789
	testb	%al, %al	# D.28789
	je	.L295	#,
	.loc 1 1336 0 is_stmt 1
	addq	$1, -160(%rbp)	#, regparse
	jmp	.L296	#
.L295:
	.loc 1 1337 0
	cmpb	$123, -227(%rbp)	#, c
	jne	.L297	#,
	.loc 1 1338 0
	addl	$1, -208(%rbp)	#, count
	jmp	.L296	#
.L297:
	.loc 1 1339 0
	cmpb	$125, -227(%rbp)	#, c
	jne	.L296	#,
	.loc 1 1340 0
	subl	$1, -208(%rbp)	#, count
.L296:
	.loc 1 1341 0
	addq	$1, -160(%rbp)	#, regparse
.L294:
	.loc 1 1334 0 discriminator 1
	cmpl	$0, -208(%rbp)	#, count
	je	.L298	#,
	.loc 1 1334 0 is_stmt 0 discriminator 2
	movq	-160(%rbp), %rax	# regparse, tmp590
	movzbl	(%rax), %eax	# *regparse_53, tmp591
	movb	%al, -227(%rbp)	# tmp591, c
	cmpb	$0, -227(%rbp)	#, c
	jne	.L299	#,
.L298:
	.loc 1 1343 0 is_stmt 1
	movq	-160(%rbp), %rax	# regparse, tmp592
	movzbl	(%rax), %eax	# *regparse_53, D.28789
	cmpb	$41, %al	#, D.28789
	je	.L300	#,
	.loc 1 1344 0
	subq	$1, -160(%rbp)	#, regparse
	.loc 1 1345 0
	jmp	.L301	#
.L300:
	jmp	.L301	#
.L302:
	.loc 1 1346 0
	movq	%r12, %rax	# d, d.356
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.357
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.357_225, D.28789
	movb	%dl, (%rax)	# D.28789, *d.356_223
.L301:
	.loc 1 1345 0 discriminator 1
	cmpq	-160(%rbp), %rbx	# regparse, s
	jb	.L302	#,
.L288:
.LBE16:
	.loc 1 1323 0
	jmp	.L284	#
.L285:
	.loc 1 1351 0
	movzbl	(%rbx), %eax	# *s_12, D.28789
	cmpb	$35, %al	#, D.28789
	jne	.L303	#,
	.loc 1 1351 0 is_stmt 0 discriminator 1
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.358
	testq	%rax, %rax	# PL_lex_inpat.358
	je	.L303	#,
	.loc 1 1352 0 is_stmt 1 discriminator 1
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.359
	movl	88(%rax), %eax	# MEM[(struct PMOP *)PL_lex_inpat.359_230].op_pmflags, D.28784
	andl	$32768, %eax	#, D.28784
	.loc 1 1351 0 discriminator 1
	testl	%eax, %eax	# D.28784
	je	.L303	#,
	.loc 1 1353 0
	jmp	.L304	#
.L306:
	.loc 1 1354 0
	movq	%r12, %rax	# d, d.360
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.361
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.361_237, D.28789
	movb	%dl, (%rax)	# D.28789, *d.360_235
.L304:
	.loc 1 1353 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28788
	cmpq	%r13, %rax	# send, D.28788
	jae	.L305	#,
	.loc 1 1353 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_6, D.28789
	cmpb	$10, %al	#, D.28789
	jne	.L306	#,
.L305:
	.loc 1 1351 0 is_stmt 1
	jmp	.L284	#
.L303:
	.loc 1 1360 0
	movzbl	(%rbx), %eax	# *s_12, D.28789
	cmpb	$64, %al	#, D.28789
	jne	.L307	#,
	.loc 1 1360 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_241, D.28789
	testb	%al, %al	# D.28789
	je	.L307	#,
	.loc 1 1361 0 is_stmt 1 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.362
	movzbl	37(%rax), %eax	# PL_curcop.362_243->op_private, D.28785
	movzbl	%al, %eax	# D.28785, D.28786
	andl	$8, %eax	#, D.28786
	.loc 1 1360 0 discriminator 1
	testl	%eax, %eax	# D.28786
	jne	.L308	#,
	.loc 1 1361 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.363
	testq	%rax, %rax	# PL_linestr.363
	je	.L309	#,
	.loc 1 1361 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.364
	movl	12(%rax), %eax	# PL_linestr.364_248->sv_flags, D.28784
	andl	$536870912, %eax	#, D.28784
	testl	%eax, %eax	# D.28784
	je	.L309	#,
	.loc 1 1361 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.365
	movzbl	37(%rax), %eax	# PL_curcop.365_251->op_private, D.28785
	movzbl	%al, %eax	# D.28785, D.28786
	andl	$8, %eax	#, D.28786
	testl	%eax, %eax	# D.28786
	je	.L310	#,
.L309:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.366
	andl	$8388608, %eax	#, D.28784
	testl	%eax, %eax	# D.28784
	je	.L308	#,
.L310:
	leaq	1(%rbx), %rax	#, D.28791
	movzbl	(%rax), %eax	# *_257, D.28785
	cmpb	$-65, %al	#, D.28785
	ja	.L311	#,
.L308:
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_261, D.28789
	cmpb	$64, %al	#, D.28789
	jle	.L312	#,
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_263, D.28789
	cmpb	$90, %al	#, D.28789
	jle	.L313	#,
.L312:
	.loc 1 1361 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_265, D.28789
	cmpb	$96, %al	#, D.28789
	jle	.L314	#,
	.loc 1 1361 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_267, D.28789
	cmpb	$122, %al	#, D.28789
	jle	.L313	#,
.L314:
	.loc 1 1361 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_269, D.28789
	cmpb	$47, %al	#, D.28789
	jle	.L315	#,
	.loc 1 1361 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_271, D.28789
	cmpb	$57, %al	#, D.28789
	jle	.L313	#,
.L315:
	.loc 1 1361 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_273, D.28789
	cmpb	$95, %al	#, D.28789
	jne	.L316	#,
.L313:
	.loc 1 1361 0 discriminator 1
	movl	$1, %eax	#, iftmp.367
	jmp	.L317	#
.L316:
	.loc 1 1361 0 discriminator 3
	movl	$0, %eax	#, iftmp.367
.L317:
	.loc 1 1361 0 discriminator 4
	andl	$1, %eax	#, D.28792
	testb	%al, %al	# D.28792
	jne	.L318	#,
	.loc 1 1361 0 discriminator 1
	jmp	.L319	#
.L311:
	leaq	1(%rbx), %rax	#, D.28791
	movq	%rax, %rdi	# D.28791,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28789
	jne	.L318	#,
.L319:
	.loc 1 1361 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_278, D.28789
	movsbl	%al, %eax	# D.28789, D.28786
	movl	%eax, %esi	# D.28786,
	movl	$.LC21, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28788
	jne	.L318	#,
.L307:
	.loc 1 1367 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_12, D.28789
	cmpb	$36, %al	#, D.28789
	jne	.L284	#,
	.loc 1 1368 0
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.368
	testq	%rax, %rax	# PL_lex_inpat.368
	jne	.L320	#,
	.loc 1 1369 0
	jmp	.L318	#
.L320:
	.loc 1 1370 0
	leaq	1(%rbx), %rax	#, D.28788
	cmpq	%r13, %rax	# send, D.28788
	jae	.L284	#,
	.loc 1 1370 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_285, D.28789
	movsbl	%al, %eax	# D.28789, D.28786
	movl	%eax, %esi	# D.28786,
	movl	$.LC22, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28788
	jne	.L284	#,
	.loc 1 1371 0 is_stmt 1
	jmp	.L318	#
.L284:
	.loc 1 1377 0
	movzbl	(%rbx), %eax	# *s_7, D.28789
	cmpb	$92, %al	#, D.28789
	jne	.L321	#,
	.loc 1 1377 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28788
	cmpq	%r13, %rax	# send, D.28788
	jae	.L321	#,
	.loc 1 1378 0 is_stmt 1
	addq	$1, %rbx	#, s
	.loc 1 1381 0
	movq	-120(%rbp), %rax	# leaveit, tmp593
	movzbl	(%rax), %eax	# *leaveit_114, D.28789
	testb	%al, %al	# D.28789
	je	.L322	#,
	.loc 1 1381 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_291, D.28789
	testb	%al, %al	# D.28789
	je	.L322	#,
	movzbl	(%rbx), %eax	# *s_291, D.28789
	movsbl	%al, %edx	# D.28789, D.28786
	movq	-120(%rbp), %rax	# leaveit, tmp594
	movl	%edx, %esi	# D.28786,
	movq	%rax, %rdi	# tmp594,
	call	strchr	#
	testq	%rax, %rax	# D.28788
	je	.L322	#,
	.loc 1 1382 0 is_stmt 1
	movq	%r12, %rax	# d, d.369
	leaq	1(%rax), %r12	#, d
	movb	$92, (%rax)	#, *d.369_297
	.loc 1 1383 0
	movq	%r12, %rax	# d, d.370
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.371
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.371_301, D.28789
	movb	%dl, (%rax)	# D.28789, *d.370_299
	.loc 1 1384 0
	jmp	.L269	#
.L322:
	.loc 1 1388 0
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.372
	cmpl	$33, %eax	#, PL_lex_inwhat.372
	jne	.L323	#,
	.loc 1 1388 0 is_stmt 0 discriminator 1
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.373
	testq	%rax, %rax	# PL_lex_inpat.373
	jne	.L323	#,
	.loc 1 1389 0 is_stmt 1 discriminator 1
	movzbl	(%rbx), %eax	# *s_291, D.28789
	.loc 1 1388 0 discriminator 1
	cmpb	$47, %al	#, D.28789
	jle	.L323	#,
	.loc 1 1389 0
	movzbl	(%rbx), %eax	# *s_291, D.28789
	cmpb	$57, %al	#, D.28789
	jg	.L323	#,
	.loc 1 1389 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_291, D.28789
	cmpb	$48, %al	#, D.28789
	je	.L323	#,
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_309, D.28789
	cmpb	$47, %al	#, D.28789
	jle	.L324	#,
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_311, D.28789
	cmpb	$57, %al	#, D.28789
	jle	.L323	#,
.L324:
	.loc 1 1391 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.374
	movq	80(%rax), %rax	# PL_curcop.374_313->cop_warnings, D.28793
	testq	%rax, %rax	# D.28793
	je	.L325	#,
	.loc 1 1391 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.375
	movq	80(%rax), %rax	# PL_curcop.375_315->cop_warnings, D.28793
	cmpq	$32, %rax	#, D.28793
	je	.L325	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.376
	movq	80(%rax), %rax	# PL_curcop.376_317->cop_warnings, D.28793
	cmpq	$16, %rax	#, D.28793
	je	.L326	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.377
	movq	80(%rax), %rax	# PL_curcop.377_319->cop_warnings, D.28793
	movq	(%rax), %rax	# _320->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_321].xpv_pv, D.28788
	addq	$7, %rax	#, D.28788
	movzbl	(%rax), %eax	# *_323, D.28789
	movsbl	%al, %eax	# D.28789, D.28786
	andl	$1, %eax	#, D.28786
	testl	%eax, %eax	# D.28786
	jne	.L326	#,
.L325:
	.loc 1 1391 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.378
	movq	80(%rax), %rax	# PL_curcop.378_327->cop_warnings, D.28793
	testq	%rax, %rax	# D.28793
	jne	.L327	#,
	.loc 1 1391 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.379
	movzbl	%al, %eax	# PL_dowarn.379, D.28786
	andl	$1, %eax	#, D.28786
	testl	%eax, %eax	# D.28786
	je	.L327	#,
.L326:
	.loc 1 1392 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_291, D.28789
	movsbl	%al, %edx	# D.28789, D.28786
	movzbl	(%rbx), %eax	# *s_291, D.28789
	movsbl	%al, %eax	# D.28789, D.28786
	movl	%edx, %ecx	# D.28786,
	movl	%eax, %edx	# D.28786,
	movl	$.LC23, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L327:
	.loc 1 1393 0
	subq	$1, %rbx	#, s
	movb	$36, (%rbx)	#, *s_336
	.loc 1 1394 0
	jmp	.L318	#
.L323:
	.loc 1 1398 0
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.380
	cmpl	$35, %eax	#, PL_lex_inwhat.380
	je	.L328	#,
	.loc 1 1398 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_291, D.28789
	testb	%al, %al	# D.28789
	je	.L328	#,
	movzbl	(%rbx), %eax	# *s_291, D.28789
	movsbl	%al, %eax	# D.28789, D.28786
	movl	%eax, %esi	# D.28786,
	movl	$.LC24, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28788
	je	.L328	#,
	.loc 1 1399 0 is_stmt 1
	subq	$1, %rbx	#, s
	.loc 1 1400 0
	jmp	.L318	#
.L328:
	.loc 1 1404 0
	movzbl	(%rbx), %eax	# *s_291, D.28789
	movsbl	%al, %eax	# D.28789, D.28786
	subl	$45, %eax	#, tmp595
	cmpl	$75, %eax	#, tmp595
	ja	.L329	#,
	movl	%eax, %eax	# tmp595, tmp596
	movq	.L331(,%rax,8), %rax	#, tmp597
	jmp	*%rax	# tmp597
	.section	.rodata
	.align 8
	.align 4
.L331:
	.quad	.L330
	.quad	.L329
	.quad	.L329
	.quad	.L332
	.quad	.L332
	.quad	.L332
	.quad	.L332
	.quad	.L332
	.quad	.L332
	.quad	.L332
	.quad	.L332
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L333
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L334
	.quad	.L335
	.quad	.L336
	.quad	.L329
	.quad	.L337
	.quad	.L338
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L339
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L340
	.quad	.L329
	.quad	.L341
	.quad	.L329
	.quad	.L329
	.quad	.L329
	.quad	.L342
	.text
.L330:
	.loc 1 1408 0
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.381
	cmpl	$35, %eax	#, PL_lex_inwhat.381
	jne	.L329	#,
	.loc 1 1409 0
	movq	%r12, %rax	# d, d.382
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.383
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.383_348, D.28789
	movb	%dl, (%rax)	# D.28789, *d.382_346
	.loc 1 1410 0
	jmp	.L269	#
.L329:
	.loc 1 1415 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.384
	movq	80(%rax), %rax	# PL_curcop.384_351->cop_warnings, D.28793
	testq	%rax, %rax	# D.28793
	je	.L343	#,
	.loc 1 1415 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.385
	movq	80(%rax), %rax	# PL_curcop.385_353->cop_warnings, D.28793
	cmpq	$32, %rax	#, D.28793
	je	.L343	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.386
	movq	80(%rax), %rax	# PL_curcop.386_355->cop_warnings, D.28793
	cmpq	$16, %rax	#, D.28793
	je	.L344	#,
	.loc 1 1415 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.387
	movq	80(%rax), %rax	# PL_curcop.387_357->cop_warnings, D.28793
	movq	(%rax), %rax	# _358->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_359].xpv_pv, D.28788
	addq	$3, %rax	#, D.28788
	movzbl	(%rax), %eax	# *_361, D.28789
	movsbl	%al, %eax	# D.28789, D.28786
	andl	$1, %eax	#, D.28786
	testl	%eax, %eax	# D.28786
	jne	.L344	#,
.L343:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.388
	movq	80(%rax), %rax	# PL_curcop.388_365->cop_warnings, D.28793
	testq	%rax, %rax	# D.28793
	jne	.L345	#,
	.loc 1 1415 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.389
	movzbl	%al, %eax	# PL_dowarn.389, D.28786
	andl	$1, %eax	#, D.28786
	testl	%eax, %eax	# D.28786
	je	.L345	#,
.L344:
	.loc 1 1416 0 is_stmt 1 discriminator 1
	movzbl	(%rbx), %eax	# *s_291, D.28789
	.loc 1 1415 0 discriminator 1
	cmpb	$64, %al	#, D.28789
	jle	.L346	#,
	.loc 1 1416 0
	movzbl	(%rbx), %eax	# *s_291, D.28789
	cmpb	$90, %al	#, D.28789
	jle	.L347	#,
.L346:
	.loc 1 1416 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_291, D.28789
	cmpb	$96, %al	#, D.28789
	jle	.L348	#,
	.loc 1 1416 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_291, D.28789
	cmpb	$122, %al	#, D.28789
	jle	.L347	#,
.L348:
	.loc 1 1416 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_291, D.28789
	cmpb	$47, %al	#, D.28789
	jle	.L349	#,
	.loc 1 1416 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_291, D.28789
	cmpb	$57, %al	#, D.28789
	jle	.L347	#,
.L349:
	.loc 1 1416 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_291, D.28789
	cmpb	$95, %al	#, D.28789
	jne	.L345	#,
.L347:
	.loc 1 1417 0 is_stmt 1 discriminator 1
	movzbl	(%rbx), %eax	# *s_291, D.28789
	.loc 1 1416 0 discriminator 1
	cmpb	$95, %al	#, D.28789
	je	.L345	#,
	.loc 1 1420 0
	movzbl	(%rbx), %eax	# *s_291, D.28789
	.loc 1 1418 0
	movsbl	%al, %eax	# D.28789, D.28786
	movl	%eax, %edx	# D.28786,
	movl	$.LC25, %esi	#,
	movl	$12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 1422 0
	jmp	.L321	#
.L345:
	jmp	.L321	#
.L332:
.LBB17:
	.loc 1 1429 0
	movl	$0, -224(%rbp)	#, flags
	.loc 1 1430 0
	movq	$3, -192(%rbp)	#, len
	.loc 1 1431 0
	leaq	-224(%rbp), %rdx	#, tmp598
	leaq	-192(%rbp), %rax	#, tmp599
	movl	$0, %ecx	#,
	movq	%rax, %rsi	# tmp599,
	movq	%rbx, %rdi	# s,
	call	Perl_grok_oct	#
	movq	%rax, -176(%rbp)	# tmp600, uv
	.loc 1 1432 0
	movq	-192(%rbp), %rax	# len, len.390
	addq	%rax, %rbx	# len.390, s
.LBE17:
	.loc 1 1434 0
	jmp	.L350	#
.L342:
	.loc 1 1438 0
	addq	$1, %rbx	#, s
	.loc 1 1439 0
	movzbl	(%rbx), %eax	# *s_383, D.28789
	cmpb	$123, %al	#, D.28789
	jne	.L351	#,
.LBB18:
	.loc 1 1440 0
	movl	$125, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strchr	#
	movq	%rax, -104(%rbp)	# tmp601, e
	.loc 1 1441 0
	movl	$3, -224(%rbp)	#, flags
	.loc 1 1445 0
	addq	$1, %rbx	#, s
	.loc 1 1446 0
	cmpq	$0, -104(%rbp)	#, e
	jne	.L352	#,
	.loc 1 1447 0
	movl	$.LC26, %edi	#,
	call	Perl_yyerror	#
	jmp	.L269	#
.L352:
	.loc 1 1450 0
	movq	-104(%rbp), %rdx	# e, e.391
	movq	%rbx, %rax	# s, s.392
	subq	%rax, %rdx	# s.392, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	movq	%rax, -192(%rbp)	# len.393, len
	.loc 1 1451 0
	leaq	-224(%rbp), %rdx	#, tmp602
	leaq	-192(%rbp), %rax	#, tmp603
	movl	$0, %ecx	#,
	movq	%rax, %rsi	# tmp603,
	movq	%rbx, %rdi	# s,
	call	Perl_grok_hex	#
	movq	%rax, -176(%rbp)	# tmp604, uv
	.loc 1 1452 0
	movq	-104(%rbp), %rax	# e, tmp605
	leaq	1(%rax), %rbx	#, s
.LBE18:
	jmp	.L350	#
.L351:
.LBB19:
	.loc 1 1456 0
	movq	$2, -192(%rbp)	#, len
	.loc 1 1457 0
	movl	$2, -224(%rbp)	#, flags
	.loc 1 1458 0
	leaq	-224(%rbp), %rdx	#, tmp606
	leaq	-192(%rbp), %rax	#, tmp607
	movl	$0, %ecx	#,
	movq	%rax, %rsi	# tmp607,
	movq	%rbx, %rdi	# s,
	call	Perl_grok_hex	#
	movq	%rax, -176(%rbp)	# tmp608, uv
	.loc 1 1459 0
	movq	-192(%rbp), %rax	# len, len.394
	addq	%rax, %rbx	# len.394, s
.L350:
.LBE19:
	.loc 1 1472 0
	cmpq	$127, -176(%rbp)	#, uv
	jbe	.L353	#,
	.loc 1 1473 0
	cmpl	$0, -220(%rbp)	#, has_utf8
	jne	.L354	#,
	.loc 1 1473 0 is_stmt 0 discriminator 1
	cmpq	$255, -176(%rbp)	#, uv
	jbe	.L354	#,
.LBB20:
	.loc 1 1481 0 is_stmt 1
	movl	$0, -204(%rbp)	#, hicount
	.loc 1 1483 0
	movq	-184(%rbp), %rax	# sv, tmp609
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_503].xpv_pv, tmp610
	movq	%rax, -152(%rbp)	# tmp610, c
	jmp	.L355	#
.L357:
	.loc 1 1484 0
	movq	-152(%rbp), %rax	# c, tmp611
	movzbl	(%rax), %eax	# *c_57, D.28785
	testb	%al, %al	# D.28795
	jns	.L356	#,
	.loc 1 1485 0
	addl	$1, -204(%rbp)	#, hicount
.L356:
	.loc 1 1483 0
	addq	$1, -152(%rbp)	#, c
.L355:
	.loc 1 1483 0 is_stmt 0 discriminator 1
	cmpq	%r12, -152(%rbp)	# d, c
	jb	.L357	#,
	.loc 1 1488 0 is_stmt 1
	cmpl	$0, -204(%rbp)	#, hicount
	je	.L354	#,
.LBB21:
	.loc 1 1489 0
	movq	%r12, %rdx	# d, d.395
	movq	-184(%rbp), %rax	# sv, tmp612
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_510].xpv_pv, D.28788
	subq	%rax, %rdx	# D.28781, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	movq	%rax, -64(%rbp)	# D.28781, offset
	.loc 1 1491 0
	movq	-184(%rbp), %rax	# sv, tmp613
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_515].xpv_len, D.28782
	movq	-184(%rbp), %rax	# sv, tmp614
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rcx	# MEM[(struct XPV *)_517].xpv_len, D.28782
	movl	-204(%rbp), %eax	# hicount, tmp615
	cltq
	addq	%rcx, %rax	# D.28782, D.28782
	addq	$1, %rax	#, D.28782
	cmpq	%rax, %rdx	# D.28782, D.28782
	jae	.L358	#,
	.loc 1 1491 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# sv, tmp616
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_522].xpv_len, D.28782
	movl	-204(%rbp), %eax	# hicount, tmp617
	cltq
	addq	%rdx, %rax	# D.28782, D.28782
	leaq	1(%rax), %rdx	#, D.28782
	movq	-184(%rbp), %rax	# sv, tmp618
	movq	%rdx, %rsi	# D.28782,
	movq	%rax, %rdi	# tmp618,
	call	Perl_sv_grow	#
	jmp	.L359	#
.L358:
	.loc 1 1491 0 discriminator 2
	movq	-184(%rbp), %rax	# sv, tmp619
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_528].xpv_pv, iftmp.396
.L359:
	.loc 1 1491 0 discriminator 3
	movq	-64(%rbp), %rdx	# offset, tmp620
	leaq	(%rax,%rdx), %r12	#, d
	.loc 1 1492 0 is_stmt 1 discriminator 3
	leaq	-1(%r12), %rax	#, tmp621
	movq	%rax, -144(%rbp)	# tmp621, src
	.loc 1 1493 0 discriminator 3
	movl	-204(%rbp), %eax	# hicount, tmp622
	movslq	%eax, %rdx	# tmp622, D.28790
	movq	-144(%rbp), %rax	# src, tmp626
	addq	%rdx, %rax	# D.28790, tmp625
	movq	%rax, -136(%rbp)	# tmp625, dst
	.loc 1 1494 0 discriminator 3
	movl	-204(%rbp), %eax	# hicount, tmp627
	cltq
	addq	%rax, %r12	# D.28790, d
	.loc 1 1495 0 discriminator 3
	jmp	.L360	#
.L363:
	.loc 1 1496 0
	movq	-144(%rbp), %rax	# src, tmp628
	movzbl	(%rax), %eax	# *src_58, D.28785
	testb	%al, %al	# D.28795
	jns	.L361	#,
.LBB22:
	.loc 1 1497 0
	movq	-144(%rbp), %rax	# src, tmp629
	movzbl	(%rax), %eax	# *src_58, tmp630
	movb	%al, -226(%rbp)	# tmp630, ch
	.loc 1 1498 0
	movq	-136(%rbp), %rax	# dst, dst.397
	leaq	-1(%rax), %rdx	#, tmp631
	movq	%rdx, -136(%rbp)	# tmp631, dst
	movzbl	-226(%rbp), %edx	# ch, ch.398
	andl	$63, %edx	#, D.28795
	orl	$-128, %edx	#, D.28795
	movb	%dl, (%rax)	# D.28785, *dst.397_541
	.loc 1 1499 0
	movq	-136(%rbp), %rax	# dst, dst.399
	leaq	-1(%rax), %rdx	#, tmp632
	movq	%rdx, -136(%rbp)	# tmp632, dst
	movzbl	-226(%rbp), %edx	# ch, tmp633
	shrb	$6, %dl	#, D.28785
	orl	$-64, %edx	#, D.28795
	movb	%dl, (%rax)	# D.28785, *dst.399_547
.LBE22:
	jmp	.L362	#
.L361:
	.loc 1 1502 0
	movq	-136(%rbp), %rax	# dst, dst.400
	leaq	-1(%rax), %rdx	#, tmp634
	movq	%rdx, -136(%rbp)	# tmp634, dst
	movq	-144(%rbp), %rdx	# src, tmp635
	movzbl	(%rdx), %edx	# *src_58, D.28785
	movb	%dl, (%rax)	# D.28785, *dst.400_553
.L362:
	.loc 1 1504 0
	subq	$1, -144(%rbp)	#, src
.L360:
	.loc 1 1495 0 discriminator 1
	movq	-184(%rbp), %rax	# sv, tmp636
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_536].xpv_pv, D.28788
	cmpq	-144(%rbp), %rax	# src, D.28788
	jbe	.L363	#,
.L354:
.LBE21:
.LBE20:
	.loc 1 1509 0
	cmpl	$0, -220(%rbp)	#, has_utf8
	jne	.L364	#,
	.loc 1 1509 0 is_stmt 0 discriminator 1
	cmpq	$255, -176(%rbp)	#, uv
	jbe	.L365	#,
.L364:
	.loc 1 1510 0 is_stmt 1
	movq	-176(%rbp), %rax	# uv, tmp637
	movq	%rax, %rsi	# tmp637,
	movq	%r12, %rdi	# d,
	call	Perl_uvuni_to_utf8	#
	movq	%rax, %r12	#, d
	.loc 1 1511 0
	movl	$1, -220(%rbp)	#, has_utf8
	.loc 1 1512 0
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.401
	cmpl	$35, %eax	#, PL_lex_inwhat.401
	jne	.L366	#,
	.loc 1 1513 0 discriminator 1
	movq	PL_sublex_info+8(%rip), %rax	# PL_sublex_info.sub_op, D.28787
	.loc 1 1512 0 discriminator 1
	testq	%rax, %rax	# D.28787
	je	.L366	#,
	.loc 1 1514 0
	movq	PL_sublex_info+8(%rip), %rdx	# PL_sublex_info.sub_op, D.28787
	movq	PL_sublex_info+8(%rip), %rax	# PL_sublex_info.sub_op, D.28787
	movzbl	37(%rax), %eax	# _565->op_private, D.28785
	movl	%eax, %ecx	# D.28785, D.28795
	.loc 1 1515 0
	movq	PL_lex_repl(%rip), %rax	# PL_lex_repl, PL_lex_repl.403
	.loc 1 1514 0
	testq	%rax, %rax	# PL_lex_repl.403
	je	.L367	#,
	.loc 1 1514 0 is_stmt 0 discriminator 1
	movl	$1, %eax	#, iftmp.402
	jmp	.L368	#
.L367:
	.loc 1 1514 0 discriminator 2
	movl	$2, %eax	#, iftmp.402
.L368:
	.loc 1 1514 0 discriminator 3
	orl	%ecx, %eax	# D.28795, D.28795
	movb	%al, 37(%rdx)	# D.28785, _564->op_private
	.loc 1 1512 0 is_stmt 1 discriminator 3
	jmp	.L369	#
.L366:
	.loc 1 1512 0 is_stmt 0 discriminator 2
	jmp	.L369	#
.L365:
	.loc 1 1520 0 is_stmt 1
	movq	%r12, %rax	# d, d.404
	leaq	1(%rax), %r12	#, d
	movq	-176(%rbp), %rdx	# uv, tmp638
	movb	%dl, (%rax)	# D.28789, *d.404_557
	jmp	.L370	#
.L369:
	jmp	.L370	#
.L353:
	.loc 1 1524 0
	movq	%r12, %rax	# d, d.405
	leaq	1(%rax), %r12	#, d
	movq	-176(%rbp), %rdx	# uv, tmp639
	movb	%dl, (%rax)	# D.28789, *d.405_573
	.loc 1 1526 0
	jmp	.L269	#
.L370:
	jmp	.L269	#
.L333:
	.loc 1 1530 0
	addq	$1, %rbx	#, s
	.loc 1 1531 0
	movzbl	(%rbx), %eax	# *s_396, D.28789
	cmpb	$123, %al	#, D.28789
	jne	.L371	#,
.LBB23:
	.loc 1 1532 0
	movl	$125, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strchr	#
	movq	%rax, -128(%rbp)	# tmp640, e
	.loc 1 1537 0
	cmpq	$0, -128(%rbp)	#, e
	jne	.L372	#,
	.loc 1 1538 0
	movl	$.LC27, %edi	#,
	call	Perl_yyerror	#
	.loc 1 1539 0
	leaq	-1(%rbx), %rax	#, tmp641
	movq	%rax, -128(%rbp)	# tmp641, e
	.loc 1 1540 0
	jmp	.L373	#
.L372:
	.loc 1 1542 0
	leaq	2(%rbx), %rax	#, D.28788
	cmpq	-128(%rbp), %rax	# e, D.28788
	jae	.L374	#,
	.loc 1 1542 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_401, D.28789
	cmpb	$85, %al	#, D.28789
	jne	.L374	#,
	leaq	2(%rbx), %rax	#, D.28788
	movzbl	(%rax), %eax	# *_403, D.28789
	cmpb	$43, %al	#, D.28789
	jne	.L374	#,
.LBB24:
	.loc 1 1544 0 is_stmt 1
	movl	$3, -224(%rbp)	#, flags
	.loc 1 1546 0
	addq	$3, %rbx	#, s
	.loc 1 1547 0
	movq	-128(%rbp), %rdx	# e, e.406
	movq	%rbx, %rax	# s, s.407
	subq	%rax, %rdx	# s.407, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	movq	%rax, -192(%rbp)	# len.408, len
	.loc 1 1548 0
	leaq	-224(%rbp), %rdx	#, tmp642
	leaq	-192(%rbp), %rax	#, tmp643
	movl	$0, %ecx	#,
	movq	%rax, %rsi	# tmp643,
	movq	%rbx, %rdi	# s,
	call	Perl_grok_hex	#
	movq	%rax, -176(%rbp)	# tmp644, uv
	.loc 1 1549 0
	movq	-128(%rbp), %rax	# e, tmp645
	leaq	1(%rax), %rbx	#, s
	.loc 1 1550 0
	nop
	jmp	.L350	#
.L374:
.LBE24:
	.loc 1 1552 0
	movq	-128(%rbp), %rdx	# e, e.409
	movq	%rbx, %rax	# s, s.410
	subq	%rax, %rdx	# s.410, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	subq	$1, %rax	#, D.28781
	movq	%rax, %rdx	# D.28781, D.28782
	leaq	1(%rbx), %rax	#, D.28794
	movq	%rdx, %rsi	# D.28782,
	movq	%rax, %rdi	# D.28794,
	call	Perl_newSVpvn	#
	movq	%rax, -96(%rbp)	# tmp646, res
	.loc 1 1553 0
	movq	-96(%rbp), %rax	# res, tmp647
	movl	$.LC28, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rax, %rcx	# tmp647,
	movl	$.LC29, %edx	#,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	S_new_constant	#
	movq	%rax, -96(%rbp)	# tmp648, res
	.loc 1 1555 0
	cmpl	$0, -220(%rbp)	#, has_utf8
	je	.L375	#,
	.loc 1 1556 0
	movq	-96(%rbp), %rax	# res, tmp649
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp649,
	call	Perl_sv_utf8_upgrade_flags	#
.L375:
	.loc 1 1557 0
	movq	-96(%rbp), %rax	# res, tmp650
	movl	12(%rax), %eax	# res_419->sv_flags, D.28784
	andl	$262144, %eax	#, D.28784
	testl	%eax, %eax	# D.28784
	je	.L376	#,
	.loc 1 1557 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# res, tmp651
	movq	(%rax), %rax	# res_419->sv_any, D.28783
	movq	8(%rax), %rax	# MEM[(struct XPV *)_422].xpv_cur, len.412
	movq	%rax, -192(%rbp)	# len.412, len
	movq	-96(%rbp), %rax	# res, tmp652
	movq	(%rax), %rax	# res_419->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_424].xpv_pv, iftmp.411
	jmp	.L377	#
.L376:
	.loc 1 1557 0 discriminator 2
	leaq	-192(%rbp), %rcx	#, tmp653
	movq	-96(%rbp), %rax	# res, tmp654
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp653,
	movq	%rax, %rdi	# tmp654,
	call	Perl_sv_2pv_flags	#
.L377:
	.loc 1 1557 0 discriminator 3
	movq	%rax, -88(%rbp)	# iftmp.411, str
	.loc 1 1578 0 is_stmt 1 discriminator 3
	cmpl	$0, -220(%rbp)	#, has_utf8
	jne	.L378	#,
	.loc 1 1578 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# res, tmp655
	movl	12(%rax), %eax	# res_419->sv_flags, D.28784
	andl	$536870912, %eax	#, D.28784
	testl	%eax, %eax	# D.28784
	je	.L378	#,
.LBB25:
	.loc 1 1579 0 is_stmt 1
	movq	-184(%rbp), %rax	# sv, tmp656
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_430].xpv_pv, tmp657
	movq	%rax, -80(%rbp)	# tmp657, ostart
	.loc 1 1580 0
	movq	-184(%rbp), %rax	# sv, tmp658
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	%r12, %rcx	# d, d.413
	movq	-80(%rbp), %rdx	# ostart, ostart.414
	subq	%rdx, %rcx	# ostart.414, D.28781
	movq	%rcx, %rdx	# D.28781, D.28781
	movq	%rdx, 8(%rax)	# D.28782, MEM[(struct XPV *)_432].xpv_cur
	.loc 1 1581 0
	movq	-184(%rbp), %rax	# sv, tmp659
	movl	12(%rax), %eax	# sv_91->sv_flags, D.28784
	orl	$67371008, %eax	#, D.28784
	movl	%eax, %edx	# D.28784, D.28784
	movq	-184(%rbp), %rax	# sv, tmp660
	movl	%edx, 12(%rax)	# D.28784, sv_91->sv_flags
	.loc 1 1582 0
	movb	$0, (%r12)	#, *d_19
	.loc 1 1583 0
	movq	-184(%rbp), %rax	# sv, tmp661
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp661,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 1585 0
	movq	-184(%rbp), %rax	# sv, tmp662
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_439].xpv_len, D.28782
	movq	%r13, %rcx	# send, send.416
	movq	-248(%rbp), %rax	# start, start.417
	subq	%rax, %rcx	# start.417, D.28781
	movq	%rcx, %rax	# D.28781, D.28781
	cmpq	%rax, %rdx	# D.28782, D.28782
	jae	.L380	#,
	.loc 1 1585 0 is_stmt 0 discriminator 1
	movq	%r13, %rdx	# send, send.418
	movq	-248(%rbp), %rax	# start, start.419
	subq	%rax, %rdx	# start.419, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	movq	%rax, %rdx	# D.28781, D.28782
	movq	-184(%rbp), %rax	# sv, tmp663
	movq	%rdx, %rsi	# D.28782,
	movq	%rax, %rdi	# tmp663,
	call	Perl_sv_grow	#
.L380:
	.loc 1 1586 0 is_stmt 1
	movq	-184(%rbp), %rax	# sv, tmp665
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rdx	# MEM[(struct XPV *)_452].xpv_pv, D.28788
	movq	-184(%rbp), %rax	# sv, tmp666
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	8(%rax), %rax	# MEM[(struct XPV *)_454].xpv_cur, D.28782
	leaq	(%rdx,%rax), %r12	#, d
	.loc 1 1587 0
	movl	$1, -220(%rbp)	#, has_utf8
.L378:
.LBE25:
	.loc 1 1589 0
	movq	-128(%rbp), %rdx	# e, e.420
	movq	%rbx, %rax	# s, s.421
	subq	%rax, %rdx	# s.421, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	addq	$4, %rax	#, D.28781
	movq	%rax, %rdx	# D.28781, D.28782
	movq	-192(%rbp), %rax	# len, len.422
	cmpq	%rax, %rdx	# len.422, D.28782
	jae	.L381	#,
.LBB26:
	.loc 1 1590 0
	movq	-184(%rbp), %rax	# sv, tmp667
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_464].xpv_pv, tmp668
	movq	%rax, -72(%rbp)	# tmp668, odest
	.loc 1 1592 0
	movq	-184(%rbp), %rax	# sv, tmp669
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_466].xpv_len, D.28782
	movq	-184(%rbp), %rax	# sv, tmp670
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rcx	# MEM[(struct XPV *)_468].xpv_len, D.28782
	movq	-192(%rbp), %rax	# len, len.424
	leaq	(%rcx,%rax), %rsi	#, D.28782
	movq	%rbx, %rcx	# s, s.425
	movq	-128(%rbp), %rax	# e, e.426
	subq	%rax, %rcx	# e.426, D.28781
	movq	%rcx, %rax	# D.28781, D.28781
	addq	%rsi, %rax	# D.28782, D.28782
	subq	$4, %rax	#, D.28782
	cmpq	%rax, %rdx	# D.28782, D.28782
	jae	.L383	#,
	.loc 1 1592 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# sv, tmp671
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_478].xpv_len, D.28782
	movq	-192(%rbp), %rax	# len, len.427
	leaq	(%rdx,%rax), %rcx	#, D.28782
	movq	%rbx, %rdx	# s, s.428
	movq	-128(%rbp), %rax	# e, e.429
	subq	%rax, %rdx	# e.429, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	addq	%rcx, %rax	# D.28782, D.28782
	leaq	-4(%rax), %rdx	#, D.28782
	movq	-184(%rbp), %rax	# sv, tmp672
	movq	%rdx, %rsi	# D.28782,
	movq	%rax, %rdi	# tmp672,
	call	Perl_sv_grow	#
.L383:
	.loc 1 1593 0 is_stmt 1
	movq	-184(%rbp), %rax	# sv, tmp674
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rdx	# MEM[(struct XPV *)_491].xpv_pv, D.28788
	movq	%r12, %rcx	# d, d.430
	movq	-72(%rbp), %rax	# odest, odest.431
	subq	%rax, %rcx	# odest.431, D.28781
	movq	%rcx, %rax	# D.28781, D.28781
	leaq	(%rdx,%rax), %r12	#, d
.L381:
.LBE26:
	.loc 1 1595 0
	movq	-192(%rbp), %rdx	# len, len.432
	movq	-88(%rbp), %rax	# str, tmp675
	movq	%rax, %rsi	# tmp675,
	movq	%r12, %rdi	# d,
	call	memcpy	#
	.loc 1 1596 0
	movq	-192(%rbp), %rax	# len, len.433
	addq	%rax, %r12	# len.433, d
	.loc 1 1597 0
	movq	-96(%rbp), %rax	# res, tmp676
	movq	%rax, %rdi	# tmp676,
	call	Perl_sv_free	#
.L373:
	.loc 1 1599 0
	movq	-128(%rbp), %rax	# e, tmp677
	leaq	1(%rax), %rbx	#, s
.LBE23:
	.loc 1 1603 0
	jmp	.L269	#
.L371:
	.loc 1 1602 0
	movl	$.LC30, %edi	#,
	call	Perl_yyerror	#
	.loc 1 1603 0
	jmp	.L269	#
.L336:
	.loc 1 1607 0
	addq	$1, %rbx	#, s
	.loc 1 1608 0
	cmpq	%r13, %rbx	# send, s
	jae	.L385	#,
.LBB27:
	.loc 1 1609 0
	movq	%rbx, %rax	# s, s.434
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.434_577, D.28789
	movb	%al, -225(%rbp)	# D.28789, c
	.loc 1 1614 0
	movq	%r12, %rax	# d, d.435
	leaq	1(%rax), %r12	#, d
	cmpb	$96, -225(%rbp)	#, c
	jbe	.L386	#,
	.loc 1 1614 0 is_stmt 0 discriminator 1
	cmpb	$122, -225(%rbp)	#, c
	ja	.L386	#,
	movzbl	-225(%rbp), %edx	# c, tmp678
	subl	$32, %edx	#, D.28796
	xorl	$64, %edx	#, iftmp.436
	jmp	.L387	#
.L386:
	.loc 1 1614 0 discriminator 2
	movzbl	-225(%rbp), %edx	# c, c.437
	xorl	$64, %edx	#, iftmp.436
.L387:
	.loc 1 1614 0 discriminator 3
	movb	%dl, (%rax)	# iftmp.436, *d.435_581
.LBE27:
	.loc 1 1619 0 is_stmt 1 discriminator 3
	jmp	.L269	#
.L385:
	.loc 1 1617 0
	movl	$.LC31, %edi	#,
	call	Perl_yyerror	#
	.loc 1 1619 0
	jmp	.L269	#
.L335:
	.loc 1 1623 0
	movq	%r12, %rax	# d, d.438
	leaq	1(%rax), %r12	#, d
	movb	$8, (%rax)	#, *d.438_588
	.loc 1 1624 0
	jmp	.L389	#
.L339:
	.loc 1 1626 0
	movq	%r12, %rax	# d, d.439
	leaq	1(%rax), %r12	#, d
	movb	$10, (%rax)	#, *d.439_590
	.loc 1 1627 0
	jmp	.L389	#
.L340:
	.loc 1 1629 0
	movq	%r12, %rax	# d, d.440
	leaq	1(%rax), %r12	#, d
	movb	$13, (%rax)	#, *d.440_592
	.loc 1 1630 0
	jmp	.L389	#
.L338:
	.loc 1 1632 0
	movq	%r12, %rax	# d, d.441
	leaq	1(%rax), %r12	#, d
	movb	$12, (%rax)	#, *d.441_594
	.loc 1 1633 0
	jmp	.L389	#
.L341:
	.loc 1 1635 0
	movq	%r12, %rax	# d, d.442
	leaq	1(%rax), %r12	#, d
	movb	$9, (%rax)	#, *d.442_596
	.loc 1 1636 0
	jmp	.L389	#
.L337:
	.loc 1 1638 0
	movq	%r12, %rax	# d, d.443
	leaq	1(%rax), %r12	#, d
	movb	$27, (%rax)	#, *d.443_598
	.loc 1 1639 0
	jmp	.L389	#
.L334:
	.loc 1 1641 0
	movq	%r12, %rax	# d, d.444
	leaq	1(%rax), %r12	#, d
	movb	$7, (%rax)	#, *d.444_600
	.loc 1 1642 0
	nop
.L389:
	.loc 1 1645 0
	addq	$1, %rbx	#, s
	.loc 1 1646 0
	jmp	.L269	#
.L321:
	.loc 1 1652 0
	cmpl	$0, -220(%rbp)	#, has_utf8
	jne	.L390	#,
	.loc 1 1652 0 is_stmt 0 discriminator 2
	cmpl	$0, -216(%rbp)	#, this_utf8
	je	.L391	#,
.L390:
	.loc 1 1652 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_11, D.28789
	testb	%al, %al	# D.28789
	jns	.L391	#,
.LBB28:
	.loc 1 1653 0 is_stmt 1
	movq	$1, -192(%rbp)	#, len
	.loc 1 1654 0
	cmpl	$0, -216(%rbp)	#, this_utf8
	je	.L392	#,
	.loc 1 1654 0 is_stmt 0 discriminator 1
	movq	%r13, %rdx	# send, send.446
	movq	%rbx, %rax	# s, s.447
	subq	%rax, %rdx	# s.447, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	leaq	-192(%rbp), %rdx	#, tmp679
	movl	$0, %ecx	#,
	movq	%rax, %rsi	# D.28782,
	movq	%rbx, %rdi	# s,
	call	Perl_utf8n_to_uvuni	#
	jmp	.L393	#
.L392:
	.loc 1 1654 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_11, D.28789
	movzbl	%al, %eax	# D.28785, iftmp.445
.L393:
	.loc 1 1654 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.445, uv
	.loc 1 1655 0 is_stmt 1 discriminator 3
	cmpq	$127, -56(%rbp)	#, uv
	jbe	.L394	#,
	.loc 1 1655 0 is_stmt 0 discriminator 1
	cmpq	$2047, -56(%rbp)	#, uv
	jbe	.L395	#,
	.loc 1 1655 0 discriminator 3
	cmpq	$65535, -56(%rbp)	#, uv
	jbe	.L396	#,
	.loc 1 1655 0 discriminator 5
	cmpq	$2097151, -56(%rbp)	#, uv
	jbe	.L397	#,
	.loc 1 1655 0 discriminator 7
	cmpq	$67108863, -56(%rbp)	#, uv
	jbe	.L398	#,
	.loc 1 1655 0 discriminator 9
	cmpq	$2147483647, -56(%rbp)	#, uv
	jbe	.L399	#,
	.loc 1 1655 0 discriminator 11
	movabsq	$68719476735, %rax	#, tmp680
	cmpq	%rax, -56(%rbp)	# tmp680, uv
	ja	.L400	#,
	.loc 1 1655 0 discriminator 13
	movl	$7, %eax	#, iftmp.454
	jmp	.L407	#
.L400:
	.loc 1 1655 0 discriminator 14
	movl	$13, %eax	#, iftmp.454
	jmp	.L407	#
.L399:
	.loc 1 1655 0 discriminator 12
	movl	$6, %eax	#, iftmp.453
	jmp	.L407	#
.L398:
	.loc 1 1655 0 discriminator 10
	movl	$5, %eax	#, iftmp.452
	jmp	.L407	#
.L397:
	.loc 1 1655 0 discriminator 8
	movl	$4, %eax	#, iftmp.451
	jmp	.L407	#
.L396:
	.loc 1 1655 0 discriminator 6
	movl	$3, %eax	#, iftmp.450
	jmp	.L407	#
.L395:
	.loc 1 1655 0 discriminator 4
	movl	$2, %eax	#, iftmp.449
	jmp	.L407	#
.L394:
	.loc 1 1655 0 discriminator 2
	movl	$1, %eax	#, iftmp.448
.L407:
	.loc 1 1655 0 discriminator 15
	movq	%rax, -48(%rbp)	# iftmp.448, need
	.loc 1 1656 0 is_stmt 1 discriminator 15
	movq	-192(%rbp), %rax	# len, len.455
	addq	%rax, %rbx	# len.455, s
	.loc 1 1657 0 discriminator 15
	movq	-192(%rbp), %rax	# len, len.456
	cmpq	%rax, -48(%rbp)	# len.456, need
	jbe	.L408	#,
.LBB29:
	.loc 1 1659 0
	movq	%r12, %rdx	# d, d.457
	movq	-184(%rbp), %rax	# sv, tmp681
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_632].xpv_pv, D.28788
	subq	%rax, %rdx	# D.28781, D.28781
	movq	%rdx, %rax	# D.28781, D.28781
	movq	%rax, -40(%rbp)	# D.28781, off
	.loc 1 1660 0
	movq	-184(%rbp), %rax	# sv, tmp682
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_637].xpv_len, D.28782
	movq	-184(%rbp), %rax	# sv, tmp683
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rax	# MEM[(struct XPV *)_639].xpv_len, D.28782
	movq	-192(%rbp), %rcx	# len, len.459
	movq	-48(%rbp), %rsi	# need, tmp684
	subq	%rcx, %rsi	# len.459, D.28782
	movq	%rsi, %rcx	# D.28782, D.28782
	addq	%rcx, %rax	# D.28782, D.28782
	cmpq	%rax, %rdx	# D.28782, D.28782
	jae	.L409	#,
	.loc 1 1660 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# sv, tmp685
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rax	# MEM[(struct XPV *)_644].xpv_len, D.28782
	movq	-192(%rbp), %rdx	# len, len.460
	movq	-48(%rbp), %rcx	# need, tmp686
	subq	%rdx, %rcx	# len.460, D.28782
	movq	%rcx, %rdx	# D.28782, D.28782
	addq	%rax, %rdx	# D.28782, D.28782
	movq	-184(%rbp), %rax	# sv, tmp687
	movq	%rdx, %rsi	# D.28782,
	movq	%rax, %rdi	# tmp687,
	call	Perl_sv_grow	#
	jmp	.L410	#
.L409:
	.loc 1 1660 0 discriminator 2
	movq	-184(%rbp), %rax	# sv, tmp688
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_650].xpv_pv, iftmp.458
.L410:
	.loc 1 1660 0 discriminator 3
	movq	-40(%rbp), %rdx	# off, tmp689
	leaq	(%rax,%rdx), %r12	#, d
.L408:
.LBE29:
	.loc 1 1662 0 is_stmt 1
	movq	-56(%rbp), %rax	# uv, tmp690
	movq	%rax, %rsi	# tmp690,
	movq	%r12, %rdi	# d,
	call	Perl_uvuni_to_utf8	#
	movq	%rax, %r12	#, d
	.loc 1 1663 0
	movl	$1, -220(%rbp)	#, has_utf8
.LBE28:
	.loc 1 1652 0
	jmp	.L269	#
.L391:
	.loc 1 1666 0
	movq	%r12, %rax	# d, d.461
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.462
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.462_657, D.28789
	movb	%dl, (%rax)	# D.28789, *d.461_655
.L269:
	.loc 1 1241 0 discriminator 1
	cmpq	%r13, %rbx	# send, s
	jb	.L411	#,
	.loc 1 1241 0 is_stmt 0 discriminator 2
	cmpb	$0, -229(%rbp)	#, dorange
	jne	.L411	#,
.L318:
	.loc 1 1671 0 is_stmt 1
	movb	$0, (%r12)	#, *d_31
	.loc 1 1672 0
	movq	-184(%rbp), %rax	# sv, tmp691
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	%r12, %rcx	# d, d.463
	movq	-184(%rbp), %rdx	# sv, tmp692
	movq	(%rdx), %rdx	# sv_91->sv_any, D.28783
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_662].xpv_pv, D.28788
	subq	%rdx, %rcx	# D.28781, D.28781
	movq	%rcx, %rdx	# D.28781, D.28781
	movq	%rdx, 8(%rax)	# D.28782, MEM[(struct XPV *)_660].xpv_cur
	.loc 1 1673 0
	movq	-184(%rbp), %rax	# sv, tmp693
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_667].xpv_cur, D.28782
	movq	-184(%rbp), %rax	# sv, tmp694
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rax	# MEM[(struct XPV *)_669].xpv_len, D.28782
	cmpq	%rax, %rdx	# D.28782, D.28782
	jb	.L412	#,
	.loc 1 1674 0
	movl	$.LC32, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L412:
	.loc 1 1676 0
	movq	-184(%rbp), %rax	# sv, tmp695
	movl	12(%rax), %eax	# sv_91->sv_flags, D.28784
	orl	$67371008, %eax	#, D.28784
	movl	%eax, %edx	# D.28784, D.28784
	movq	-184(%rbp), %rax	# sv, tmp696
	movl	%edx, 12(%rax)	# D.28784, sv_91->sv_flags
	.loc 1 1677 0
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.464
	testq	%rax, %rax	# PL_encoding.464
	je	.L413	#,
	.loc 1 1677 0 is_stmt 0 discriminator 1
	cmpl	$0, -220(%rbp)	#, has_utf8
	jne	.L413	#,
	.loc 1 1678 0 is_stmt 1
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.465
	movq	-184(%rbp), %rax	# sv, tmp697
	movq	%rdx, %rsi	# PL_encoding.465,
	movq	%rax, %rdi	# tmp697,
	call	Perl_sv_recode_to_utf8	#
	.loc 1 1679 0
	movq	-184(%rbp), %rax	# sv, tmp698
	movl	12(%rax), %eax	# sv_91->sv_flags, D.28784
	andl	$536870912, %eax	#, D.28784
	testl	%eax, %eax	# D.28784
	je	.L413	#,
	.loc 1 1680 0
	movl	$1, -220(%rbp)	#, has_utf8
.L413:
	.loc 1 1682 0
	cmpl	$0, -220(%rbp)	#, has_utf8
	je	.L414	#,
	.loc 1 1683 0
	movq	-184(%rbp), %rax	# sv, tmp699
	movl	12(%rax), %eax	# sv_91->sv_flags, D.28784
	orl	$536870912, %eax	#, D.28784
	movl	%eax, %edx	# D.28784, D.28784
	movq	-184(%rbp), %rax	# sv, tmp700
	movl	%edx, 12(%rax)	# D.28784, sv_91->sv_flags
	.loc 1 1684 0
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.466
	cmpl	$35, %eax	#, PL_lex_inwhat.466
	jne	.L414	#,
	.loc 1 1684 0 is_stmt 0 discriminator 1
	movq	PL_sublex_info+8(%rip), %rax	# PL_sublex_info.sub_op, D.28787
	testq	%rax, %rax	# D.28787
	je	.L414	#,
	.loc 1 1685 0 is_stmt 1
	movq	PL_sublex_info+8(%rip), %rdx	# PL_sublex_info.sub_op, D.28787
	movq	PL_sublex_info+8(%rip), %rax	# PL_sublex_info.sub_op, D.28787
	movzbl	37(%rax), %eax	# _683->op_private, D.28785
	movl	%eax, %ecx	# D.28785, D.28795
	.loc 1 1686 0
	movq	PL_lex_repl(%rip), %rax	# PL_lex_repl, PL_lex_repl.468
	.loc 1 1685 0
	testq	%rax, %rax	# PL_lex_repl.468
	je	.L415	#,
	.loc 1 1685 0 is_stmt 0 discriminator 1
	movl	$1, %eax	#, iftmp.467
	jmp	.L416	#
.L415:
	.loc 1 1685 0 discriminator 2
	movl	$2, %eax	#, iftmp.467
.L416:
	.loc 1 1685 0 discriminator 3
	orl	%ecx, %eax	# D.28795, D.28795
	movb	%al, 37(%rdx)	# D.28785, _682->op_private
.L414:
	.loc 1 1691 0 is_stmt 1
	movq	-184(%rbp), %rax	# sv, tmp701
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	8(%rax), %rax	# MEM[(struct XPV *)_691].xpv_cur, D.28782
	leaq	5(%rax), %rdx	#, D.28782
	movq	-184(%rbp), %rax	# sv, tmp702
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rax	# MEM[(struct XPV *)_694].xpv_len, D.28782
	cmpq	%rax, %rdx	# D.28782, D.28782
	jae	.L417	#,
	.loc 1 1692 0
	movq	-184(%rbp), %rax	# sv, tmp703
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	-184(%rbp), %rdx	# sv, tmp704
	movq	(%rdx), %rdx	# sv_91->sv_any, D.28783
	movq	8(%rdx), %rdx	# MEM[(struct XPV *)_697].xpv_cur, D.28782
	addq	$1, %rdx	#, D.28782
	movq	%rdx, 16(%rax)	# D.28782, MEM[(struct XPV *)_696].xpv_len
	.loc 1 1693 0
	movq	-184(%rbp), %rax	# sv, tmp705
	movq	(%rax), %r12	# sv_91->sv_any, D.28783
	movq	-184(%rbp), %rax	# sv, tmp706
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_701].xpv_len, D.28782
	movq	-184(%rbp), %rax	# sv, tmp707
	movq	(%rax), %rax	# sv_91->sv_any, D.28783
	movq	(%rax), %rax	# MEM[(struct XPV *)_703].xpv_pv, D.28788
	movq	%rdx, %rsi	# D.28782,
	movq	%rax, %rdi	# D.28788,
	call	Perl_safesysrealloc	#
	movq	%rax, (%r12)	# D.28783, MEM[(struct XPV *)_700].xpv_pv
.L417:
	.loc 1 1697 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.469
	cmpq	%rax, %rbx	# PL_bufptr.469, s
	jbe	.L418	#,
	.loc 1 1698 0
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.471
	testq	%rax, %rax	# PL_lex_inpat.471
	je	.L419	#,
	.loc 1 1698 0 is_stmt 0 discriminator 1
	movl	$65536, %eax	#, iftmp.470
	jmp	.L420	#
.L419:
	.loc 1 1698 0 discriminator 2
	movl	$32768, %eax	#, iftmp.470
.L420:
	.loc 1 1698 0 discriminator 3
	movl	PL_hints(%rip), %edx	# PL_hints, PL_hints.472
	andl	%edx, %eax	# PL_hints.472, D.28784
	testl	%eax, %eax	# D.28784
	je	.L421	#,
	.loc 1 1701 0 is_stmt 1
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.474
	.loc 1 1699 0
	cmpl	$35, %eax	#, PL_lex_inwhat.474
	je	.L422	#,
	.loc 1 1703 0
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.476
	cmpl	$33, %eax	#, PL_lex_inwhat.476
	jne	.L423	#,
	.loc 1 1703 0 is_stmt 0 discriminator 1
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.477
	testq	%rax, %rax	# PL_lex_inpat.477
	jne	.L423	#,
	movl	$.LC33, %eax	#, iftmp.475
	jmp	.L424	#
.L423:
	.loc 1 1703 0 discriminator 2
	movl	$.LC34, %eax	#, iftmp.475
.L424:
	.loc 1 1699 0 is_stmt 1
	movq	%rax, %rdx	# iftmp.475, iftmp.473
	jmp	.L425	#
.L422:
	.loc 1 1699 0 is_stmt 0 discriminator 1
	movl	$.LC35, %edx	#, iftmp.473
.L425:
	.loc 1 1699 0 discriminator 2
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.479
	testq	%rax, %rax	# PL_lex_inpat.479
	je	.L426	#,
	.loc 1 1699 0 discriminator 3
	movl	$.LC36, %eax	#, iftmp.478
	jmp	.L427	#
.L426:
	.loc 1 1699 0 discriminator 4
	movl	$.LC16, %eax	#, iftmp.478
.L427:
	.loc 1 1699 0 discriminator 5
	movq	%rbx, %rsi	# s, s.480
	movq	-248(%rbp), %rcx	# start, start.481
	subq	%rcx, %rsi	# start.481, D.28781
	movq	%rsi, %rcx	# D.28781, D.28781
	movq	%rcx, %rsi	# D.28781, D.28782
	movq	-184(%rbp), %rcx	# sv, tmp708
	movq	-248(%rbp), %rdi	# start, tmp709
	movq	%rdx, %r9	# iftmp.473,
	movl	$0, %r8d	#,
	movq	%rax, %rdx	# iftmp.478,
	call	S_new_constant	#
	movq	%rax, -184(%rbp)	# tmp710, sv
.L421:
	.loc 1 1706 0 is_stmt 1
	movq	-184(%rbp), %rax	# sv, tmp711
	movq	%rax, %rdx	# tmp711,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.28787, PL_yylval.opval
	jmp	.L428	#
.L418:
	.loc 1 1708 0
	movq	-184(%rbp), %rax	# sv, tmp712
	movq	%rax, %rdi	# tmp712,
	call	Perl_sv_free	#
.L428:
	.loc 1 1709 0
	movq	%rbx, %rax	# s, D.28788
	.loc 1 1710 0
	addq	$232, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE23:
	.size	S_scan_const, .-S_scan_const
	.section	.rodata
.LC37:
	.string	"[#!%*<>()-="
.LC38:
	.string	"])} ="
.LC39:
	.string	"wds]"
.LC40:
	.string	"rnftbxcav"
.LC41:
	.string	"aA01! "
.LC42:
	.string	"zZ79~"
	.text
	.type	S_intuit_more, @function
S_intuit_more:
.LFB24:
	.loc 1 1735 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$1336, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# s, s
	.loc 1 1735 0
	movq	%fs:40, %rax	#, tmp239
	movq	%rax, -24(%rbp)	# tmp239, D.28826
	xorl	%eax, %eax	# tmp239
	.loc 1 1736 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.482
	testl	%eax, %eax	# PL_lex_brackets.482
	je	.L431	#,
	.loc 1 1737 0
	movl	$1, %eax	#, D.28817
	jmp	.L432	#
.L431:
	.loc 1 1738 0
	movzbl	(%rbx), %eax	# *s_34(D), D.28818
	cmpb	$45, %al	#, D.28818
	jne	.L433	#,
	.loc 1 1738 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_36, D.28818
	cmpb	$62, %al	#, D.28818
	jne	.L433	#,
	leaq	2(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_38, D.28818
	cmpb	$91, %al	#, D.28818
	je	.L434	#,
	leaq	2(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_40, D.28818
	cmpb	$123, %al	#, D.28818
	jne	.L433	#,
.L434:
	.loc 1 1739 0 is_stmt 1
	movl	$1, %eax	#, D.28817
	jmp	.L432	#
.L433:
	.loc 1 1740 0
	movzbl	(%rbx), %eax	# *s_34(D), D.28818
	cmpb	$123, %al	#, D.28818
	je	.L435	#,
	.loc 1 1740 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_34(D), D.28818
	cmpb	$91, %al	#, D.28818
	je	.L435	#,
	.loc 1 1741 0 is_stmt 1
	movl	$0, %eax	#, D.28817
	jmp	.L432	#
.L435:
	.loc 1 1742 0
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.483
	testq	%rax, %rax	# PL_lex_inpat.483
	jne	.L436	#,
	.loc 1 1743 0
	movl	$1, %eax	#, D.28817
	jmp	.L432	#
.L436:
	.loc 1 1746 0
	movzbl	(%rbx), %eax	# *s_34(D), D.28818
	cmpb	$123, %al	#, D.28818
	jne	.L437	#,
	.loc 1 1747 0
	addq	$1, %rbx	#, s
	.loc 1 1748 0
	movzbl	(%rbx), %eax	# *s_49, D.28818
	cmpb	$47, %al	#, D.28818
	jle	.L438	#,
	.loc 1 1748 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_49, D.28818
	cmpb	$57, %al	#, D.28818
	jle	.L439	#,
.L438:
	.loc 1 1749 0 is_stmt 1
	movl	$1, %eax	#, D.28817
	jmp	.L432	#
.L439:
	.loc 1 1750 0
	jmp	.L440	#
.L442:
	.loc 1 1751 0
	addq	$1, %rbx	#, s
.L440:
	.loc 1 1750 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1, D.28818
	cmpb	$47, %al	#, D.28818
	jle	.L441	#,
	.loc 1 1750 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_1, D.28818
	cmpb	$57, %al	#, D.28818
	jle	.L442	#,
.L441:
	.loc 1 1752 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_1, D.28818
	cmpb	$44, %al	#, D.28818
	jne	.L443	#,
	.loc 1 1753 0
	addq	$1, %rbx	#, s
	.loc 1 1754 0
	jmp	.L444	#
.L443:
	jmp	.L444	#
.L446:
	.loc 1 1755 0
	addq	$1, %rbx	#, s
.L444:
	.loc 1 1754 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.28818
	cmpb	$47, %al	#, D.28818
	jle	.L445	#,
	.loc 1 1754 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.28818
	cmpb	$57, %al	#, D.28818
	jle	.L446	#,
.L445:
	.loc 1 1756 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_3, D.28818
	cmpb	$125, %al	#, D.28818
	jne	.L447	#,
	.loc 1 1757 0
	movl	$0, %eax	#, D.28817
	jmp	.L432	#
.L447:
	.loc 1 1758 0
	movl	$1, %eax	#, D.28817
	jmp	.L432	#
.L437:
	.loc 1 1764 0
	addq	$1, %rbx	#, s
	.loc 1 1765 0
	movzbl	(%rbx), %eax	# *s_64, D.28818
	cmpb	$93, %al	#, D.28818
	je	.L448	#,
	.loc 1 1765 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_64, D.28818
	cmpb	$94, %al	#, D.28818
	jne	.L449	#,
.L448:
	.loc 1 1766 0 is_stmt 1
	movl	$0, %eax	#, D.28817
	jmp	.L432	#
.L449:
.LBB30:
	.loc 1 1769 0
	movl	$2, -1332(%rbp)	#, weight
	.loc 1 1771 0
	movb	$-1, -1334(%rbp)	#, un_char
	.loc 1 1772 0
	movl	$93, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strchr	#
	movq	%rax, -1320(%rbp)	# tmp221, send
	.loc 1 1775 0
	cmpq	$0, -1320(%rbp)	#, send
	jne	.L450	#,
	.loc 1 1776 0
	movl	$1, %eax	#, D.28817
	jmp	.L432	#
.L450:
	.loc 1 1778 0
	leaq	-1312(%rbp), %rax	#, tmp222
	movl	$256, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp222,
	call	memset	#
	.loc 1 1779 0
	movzbl	(%rbx), %eax	# *s_64, D.28818
	cmpb	$36, %al	#, D.28818
	jne	.L452	#,
	.loc 1 1780 0
	subl	$3, -1332(%rbp)	#, weight
	jmp	.L453	#
.L452:
	.loc 1 1781 0
	movzbl	(%rbx), %eax	# *s_64, D.28818
	cmpb	$47, %al	#, D.28818
	jle	.L453	#,
	.loc 1 1781 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_64, D.28818
	cmpb	$57, %al	#, D.28818
	jg	.L453	#,
	.loc 1 1782 0 is_stmt 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_75, D.28818
	cmpb	$93, %al	#, D.28818
	je	.L454	#,
	.loc 1 1783 0
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_77, D.28818
	cmpb	$47, %al	#, D.28818
	jle	.L453	#,
	.loc 1 1783 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_79, D.28818
	cmpb	$57, %al	#, D.28818
	jg	.L453	#,
	leaq	2(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_81, D.28818
	cmpb	$93, %al	#, D.28818
	jne	.L453	#,
	.loc 1 1784 0 is_stmt 1
	subl	$10, -1332(%rbp)	#, weight
	.loc 1 1789 0
	jmp	.L456	#
.L454:
	.loc 1 1787 0
	subl	$100, -1332(%rbp)	#, weight
	.loc 1 1789 0
	jmp	.L456	#
.L453:
	jmp	.L456	#
.L507:
	.loc 1 1790 0
	movzbl	-1334(%rbp), %eax	# un_char, tmp223
	movb	%al, -1333(%rbp)	# tmp223, last_un_char
	.loc 1 1791 0
	movzbl	(%rbx), %eax	# *s_10, D.28818
	movb	%al, -1334(%rbp)	# D.28818, un_char
	.loc 1 1792 0
	movzbl	(%rbx), %eax	# *s_10, D.28818
	movsbl	%al, %eax	# D.28818, D.28817
	cmpl	$45, %eax	#, D.28817
	je	.L458	#,
	cmpl	$45, %eax	#, D.28817
	jg	.L459	#,
	cmpl	$36, %eax	#, D.28817
	je	.L460	#,
	cmpl	$38, %eax	#, D.28817
	je	.L460	#,
	jmp	.L457	#
.L459:
	cmpl	$64, %eax	#, D.28817
	je	.L460	#,
	cmpl	$92, %eax	#, D.28817
	je	.L461	#,
	jmp	.L457	#
.L460:
	.loc 1 1796 0
	movzbl	-1334(%rbp), %eax	# un_char, D.28817
	cltq
	movzbl	-1312(%rbp,%rax), %eax	# seen, D.28818
	movsbl	%al, %edx	# D.28818, D.28817
	movl	%edx, %eax	# D.28817, tmp225
	sall	$2, %eax	#, tmp225
	addl	%edx, %eax	# D.28817, tmp225
	addl	%eax, %eax	# tmp226
	negl	%eax	# D.28817
	addl	%eax, -1332(%rbp)	# D.28817, weight
	.loc 1 1797 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.485
	movzbl	37(%rax), %eax	# PL_curcop.485_95->op_private, D.28820
	movzbl	%al, %eax	# D.28820, D.28817
	andl	$8, %eax	#, D.28817
	testl	%eax, %eax	# D.28817
	jne	.L462	#,
	.loc 1 1797 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.486
	testq	%rax, %rax	# PL_linestr.486
	je	.L463	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.487
	movl	12(%rax), %eax	# PL_linestr.487_100->sv_flags, D.28821
	andl	$536870912, %eax	#, D.28821
	testl	%eax, %eax	# D.28821
	je	.L463	#,
	.loc 1 1797 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.488
	movzbl	37(%rax), %eax	# PL_curcop.488_103->op_private, D.28820
	movzbl	%al, %eax	# D.28820, D.28817
	andl	$8, %eax	#, D.28817
	testl	%eax, %eax	# D.28817
	je	.L464	#,
.L463:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.489
	andl	$8388608, %eax	#, D.28821
	testl	%eax, %eax	# D.28821
	je	.L462	#,
.L464:
	leaq	1(%rbx), %rax	#, D.28822
	movzbl	(%rax), %eax	# *_109, D.28820
	cmpb	$-65, %al	#, D.28820
	ja	.L465	#,
.L462:
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_114, D.28818
	cmpb	$64, %al	#, D.28818
	jle	.L466	#,
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_116, D.28818
	cmpb	$90, %al	#, D.28818
	jle	.L467	#,
.L466:
	.loc 1 1797 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_118, D.28818
	cmpb	$96, %al	#, D.28818
	jle	.L468	#,
	.loc 1 1797 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_120, D.28818
	cmpb	$122, %al	#, D.28818
	jle	.L467	#,
.L468:
	.loc 1 1797 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_122, D.28818
	cmpb	$47, %al	#, D.28818
	jle	.L469	#,
	.loc 1 1797 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_124, D.28818
	cmpb	$57, %al	#, D.28818
	jle	.L467	#,
.L469:
	.loc 1 1797 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_126, D.28818
	cmpb	$95, %al	#, D.28818
	jne	.L470	#,
.L467:
	.loc 1 1797 0 discriminator 1
	movl	$1, %eax	#, iftmp.490
	jmp	.L471	#
.L470:
	.loc 1 1797 0 discriminator 3
	movl	$0, %eax	#, iftmp.490
.L471:
	.loc 1 1797 0 discriminator 4
	andl	$1, %eax	#, iftmp.484
	jmp	.L472	#
.L465:
	.loc 1 1797 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28822
	movq	%rax, %rdi	# D.28822,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28818
	setne	%al	#, iftmp.484
.L472:
	.loc 1 1797 0 discriminator 3
	testb	%al, %al	# iftmp.484
	je	.L473	#,
	.loc 1 1798 0 is_stmt 1
	leaq	-1056(%rbp), %rdx	#, tmp227
	movq	-1320(%rbp), %rax	# send, tmp228
	movl	$0, %r8d	#,
	movl	$1024, %ecx	#,
	movq	%rax, %rsi	# tmp228,
	movq	%rbx, %rdi	# s,
	call	S_scan_ident	#
	.loc 1 1799 0
	leaq	-1056(%rbp), %rax	#, tmp229
	movq	%rax, %rdi	# tmp229,
	call	strlen	#
	cmpl	$1, %eax	#, D.28817
	jle	.L474	#,
	.loc 1 1799 0 is_stmt 0 discriminator 1
	leaq	-1056(%rbp), %rax	#, tmp230
	movl	$4, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp230,
	call	Perl_gv_fetchpv	#
	testq	%rax, %rax	# D.28824
	je	.L474	#,
	.loc 1 1800 0 is_stmt 1
	subl	$100, -1332(%rbp)	#, weight
	jmp	.L476	#
.L474:
	.loc 1 1802 0
	subl	$10, -1332(%rbp)	#, weight
	jmp	.L476	#
.L473:
	.loc 1 1804 0
	movzbl	(%rbx), %eax	# *s_10, D.28818
	cmpb	$36, %al	#, D.28818
	jne	.L476	#,
	.loc 1 1804 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_137, D.28818
	testb	%al, %al	# D.28818
	je	.L476	#,
	.loc 1 1805 0 is_stmt 1 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_139, D.28818
	movsbl	%al, %eax	# D.28818, D.28817
	movl	%eax, %esi	# D.28817,
	movl	$.LC37, %edi	#,
	call	strchr	#
	.loc 1 1804 0 discriminator 1
	testq	%rax, %rax	# D.28819
	je	.L476	#,
	.loc 1 1806 0
	leaq	2(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_143, D.28818
	movsbl	%al, %eax	# D.28818, D.28817
	movl	%eax, %esi	# D.28817,
	movl	$.LC38, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28819
	je	.L477	#,
	.loc 1 1807 0
	subl	$10, -1332(%rbp)	#, weight
	jmp	.L476	#
.L477:
	.loc 1 1809 0
	subl	$1, -1332(%rbp)	#, weight
	.loc 1 1811 0
	jmp	.L478	#
.L476:
	jmp	.L478	#
.L461:
	.loc 1 1813 0
	movb	$-2, -1334(%rbp)	#, un_char
	.loc 1 1814 0
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_150, D.28818
	testb	%al, %al	# D.28818
	je	.L479	#,
	.loc 1 1815 0
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_152, D.28818
	movsbl	%al, %eax	# D.28818, D.28817
	movl	%eax, %esi	# D.28817,
	movl	$.LC39, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28819
	je	.L480	#,
	.loc 1 1816 0
	addl	$100, -1332(%rbp)	#, weight
	jmp	.L487	#
.L480:
	.loc 1 1817 0
	movzbl	-1273(%rbp), %eax	# seen, D.28818
	testb	%al, %al	# D.28818
	jne	.L482	#,
	.loc 1 1817 0 is_stmt 0 discriminator 1
	movzbl	-1278(%rbp), %eax	# seen, D.28818
	testb	%al, %al	# D.28818
	je	.L483	#,
.L482:
	.loc 1 1818 0 is_stmt 1
	addl	$1, -1332(%rbp)	#, weight
	jmp	.L487	#
.L483:
	.loc 1 1819 0
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_159, D.28818
	movsbl	%al, %eax	# D.28818, D.28817
	movl	%eax, %esi	# D.28817,
	movl	$.LC40, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28819
	je	.L484	#,
	.loc 1 1820 0
	addl	$40, -1332(%rbp)	#, weight
	jmp	.L487	#
.L484:
	.loc 1 1821 0
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_164, D.28818
	cmpb	$47, %al	#, D.28818
	jle	.L487	#,
	.loc 1 1821 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_166, D.28818
	cmpb	$57, %al	#, D.28818
	jg	.L487	#,
	.loc 1 1822 0 is_stmt 1
	addl	$40, -1332(%rbp)	#, weight
	.loc 1 1823 0
	jmp	.L485	#
.L486:
	.loc 1 1824 0
	addq	$1, %rbx	#, s
.L485:
	.loc 1 1823 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_169, D.28818
	testb	%al, %al	# D.28818
	je	.L487	#,
	.loc 1 1823 0 is_stmt 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_171, D.28818
	cmpb	$47, %al	#, D.28818
	jle	.L487	#,
	.loc 1 1823 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_173, D.28818
	cmpb	$57, %al	#, D.28818
	jle	.L486	#,
	jmp	.L487	#
.L479:
	.loc 1 1828 0 is_stmt 1
	addl	$100, -1332(%rbp)	#, weight
	.loc 1 1829 0
	jmp	.L478	#
.L487:
	jmp	.L478	#
.L458:
	.loc 1 1831 0
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_178, D.28818
	cmpb	$92, %al	#, D.28818
	jne	.L488	#,
	.loc 1 1832 0
	addl	$50, -1332(%rbp)	#, weight
.L488:
	.loc 1 1833 0
	movzbl	-1333(%rbp), %eax	# last_un_char, D.28817
	movl	%eax, %esi	# D.28817,
	movl	$.LC41, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28819
	je	.L489	#,
	.loc 1 1834 0
	addl	$30, -1332(%rbp)	#, weight
.L489:
	.loc 1 1835 0
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_184, D.28818
	movsbl	%al, %eax	# D.28818, D.28817
	movl	%eax, %esi	# D.28817,
	movl	$.LC42, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28819
	je	.L490	#,
	.loc 1 1836 0
	addl	$30, -1332(%rbp)	#, weight
.L490:
	.loc 1 1837 0
	cmpb	$-1, -1333(%rbp)	#, last_un_char
	jne	.L491	#,
	.loc 1 1837 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_189, D.28818
	cmpb	$47, %al	#, D.28818
	jle	.L492	#,
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_191, D.28818
	cmpb	$57, %al	#, D.28818
	jle	.L493	#,
.L492:
	.loc 1 1837 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_193, D.28818
	cmpb	$36, %al	#, D.28818
	jne	.L491	#,
.L493:
	.loc 1 1838 0 is_stmt 1
	subl	$5, -1332(%rbp)	#, weight
	.loc 1 1839 0
	jmp	.L478	#
.L491:
	jmp	.L478	#
.L457:
	.loc 1 1841 0
	cmpb	$64, -1333(%rbp)	#, last_un_char
	jbe	.L494	#,
	.loc 1 1841 0 is_stmt 0 discriminator 2
	cmpb	$90, -1333(%rbp)	#, last_un_char
	jbe	.L495	#,
.L494:
	.loc 1 1841 0 discriminator 1
	cmpb	$96, -1333(%rbp)	#, last_un_char
	jbe	.L496	#,
	.loc 1 1841 0 discriminator 2
	cmpb	$122, -1333(%rbp)	#, last_un_char
	jbe	.L495	#,
.L496:
	.loc 1 1841 0 discriminator 1
	cmpb	$47, -1333(%rbp)	#, last_un_char
	jbe	.L497	#,
	.loc 1 1841 0 discriminator 2
	cmpb	$57, -1333(%rbp)	#, last_un_char
	jbe	.L495	#,
.L497:
	.loc 1 1841 0 discriminator 1
	cmpb	$95, -1333(%rbp)	#, last_un_char
	je	.L495	#,
	.loc 1 1842 0 is_stmt 1
	cmpb	$36, -1333(%rbp)	#, last_un_char
	je	.L495	#,
	.loc 1 1842 0 is_stmt 0 discriminator 1
	cmpb	$64, -1333(%rbp)	#, last_un_char
	je	.L495	#,
	cmpb	$38, -1333(%rbp)	#, last_un_char
	je	.L495	#,
	.loc 1 1844 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_10, D.28818
	cmpb	$64, %al	#, D.28818
	jle	.L498	#,
	.loc 1 1844 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_10, D.28818
	cmpb	$90, %al	#, D.28818
	jle	.L499	#,
.L498:
	.loc 1 1844 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_10, D.28818
	cmpb	$96, %al	#, D.28818
	jle	.L495	#,
	.loc 1 1844 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_10, D.28818
	cmpb	$122, %al	#, D.28818
	jg	.L495	#,
.L499:
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_200, D.28818
	testb	%al, %al	# D.28818
	je	.L495	#,
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_202, D.28818
	cmpb	$64, %al	#, D.28818
	jle	.L500	#,
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_204, D.28818
	cmpb	$90, %al	#, D.28818
	jle	.L501	#,
.L500:
	.loc 1 1844 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_206, D.28818
	cmpb	$96, %al	#, D.28818
	jle	.L495	#,
	.loc 1 1844 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28819
	movzbl	(%rax), %eax	# *_208, D.28818
	cmpb	$122, %al	#, D.28818
	jg	.L495	#,
.L501:
.LBB31:
	.loc 1 1845 0 is_stmt 1
	leaq	-1056(%rbp), %rax	#, tmp231
	movq	%rax, -1328(%rbp)	# tmp231, d
	.loc 1 1846 0
	jmp	.L502	#
.L504:
	.loc 1 1847 0
	movq	-1328(%rbp), %rax	# d, d.491
	leaq	1(%rax), %rdx	#, tmp232
	movq	%rdx, -1328(%rbp)	# tmp232, d
	movq	%rbx, %rdx	# s, s.492
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.492_223, D.28818
	movb	%dl, (%rax)	# D.28818, *d.491_221
.L502:
	.loc 1 1846 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_7, D.28818
	cmpb	$64, %al	#, D.28818
	jle	.L503	#,
	.loc 1 1846 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_7, D.28818
	cmpb	$90, %al	#, D.28818
	jle	.L504	#,
.L503:
	.loc 1 1846 0 discriminator 3
	movzbl	(%rbx), %eax	# *s_7, D.28818
	cmpb	$96, %al	#, D.28818
	jle	.L505	#,
	.loc 1 1846 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_7, D.28818
	cmpb	$122, %al	#, D.28818
	jle	.L504	#,
.L505:
	.loc 1 1848 0 is_stmt 1
	movq	-1328(%rbp), %rax	# d, tmp233
	movb	$0, (%rax)	#, *d_27
	.loc 1 1849 0
	movq	-1328(%rbp), %rdx	# d, d.493
	leaq	-1056(%rbp), %rax	#, tmpbuf.494
	subq	%rax, %rdx	# tmpbuf.494, D.28825
	movq	%rdx, %rax	# D.28825, D.28825
	movl	%eax, %edx	# D.28825, D.28817
	leaq	-1056(%rbp), %rax	#, tmp234
	movl	%edx, %esi	# D.28817,
	movq	%rax, %rdi	# tmp234,
	call	Perl_keyword	#
	testl	%eax, %eax	# D.28817
	je	.L495	#,
	.loc 1 1850 0
	subl	$150, -1332(%rbp)	#, weight
.L495:
.LBE31:
	.loc 1 1852 0
	movzbl	-1334(%rbp), %eax	# un_char, D.28817
	movzbl	-1333(%rbp), %edx	# last_un_char, D.28817
	addl	$1, %edx	#, D.28817
	cmpl	%edx, %eax	# D.28817, D.28817
	jne	.L506	#,
	.loc 1 1853 0
	addl	$5, -1332(%rbp)	#, weight
.L506:
	.loc 1 1854 0
	movzbl	-1334(%rbp), %eax	# un_char, D.28817
	cltq
	movzbl	-1312(%rbp,%rax), %eax	# seen, D.28818
	movsbl	%al, %eax	# D.28818, D.28817
	subl	%eax, -1332(%rbp)	# D.28817, weight
	.loc 1 1855 0
	nop
.L478:
	.loc 1 1857 0
	movzbl	-1334(%rbp), %eax	# un_char, D.28817
	movslq	%eax, %rdx	# D.28817, tmp236
	movzbl	-1312(%rbp,%rdx), %edx	# seen, D.28818
	addl	$1, %edx	#, D.28818
	cltq
	movb	%dl, -1312(%rbp,%rax)	# D.28818, seen
	.loc 1 1789 0
	addq	$1, %rbx	#, s
.L456:
	.loc 1 1789 0 is_stmt 0 discriminator 1
	cmpq	-1320(%rbp), %rbx	# send, s
	jb	.L507	#,
	.loc 1 1859 0 is_stmt 1
	cmpl	$0, -1332(%rbp)	#, weight
	js	.L508	#,
	.loc 1 1860 0
	movl	$0, %eax	#, D.28817
	jmp	.L432	#
.L508:
.LBE30:
	.loc 1 1863 0
	movl	$1, %eax	#, D.28817
.L432:
	.loc 1 1864 0
	movq	-24(%rbp), %rcx	# D.28826, tmp240
	xorq	%fs:40, %rcx	#, tmp240
	je	.L509	#,
	call	__stack_chk_fail	#
.L509:
	addq	$1336, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE24:
	.size	S_intuit_more, .-S_intuit_more
	.type	S_intuit_method, @function
S_intuit_method:
.LFB25:
	.loc 1 1889 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$344, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -344(%rbp)	# start, start
	movq	%rsi, -352(%rbp)	# gv, gv
	.loc 1 1889 0
	movq	%fs:40, %rax	#, tmp172
	movq	%rax, -24(%rbp)	# tmp172, D.28851
	xorl	%eax, %eax	# tmp172
	.loc 1 1890 0
	movq	-344(%rbp), %rax	# start, tmp130
	movzbl	(%rax), %eax	# *start_8(D), D.28837
	cmpb	$36, %al	#, D.28837
	sete	%al	#, D.28838
	movzbl	%al, %edx	# D.28838, D.28839
	movq	-344(%rbp), %rax	# start, tmp134
	addq	%rdx, %rax	# D.28839, tmp133
	movq	%rax, -320(%rbp)	# tmp133, s
	.loc 1 1895 0
	cmpq	$0, -352(%rbp)	#, gv
	je	.L511	#,
.LBB32:
	.loc 1 1897 0
	cmpq	$0, -352(%rbp)	#, gv
	je	.L512	#,
	.loc 1 1897 0 is_stmt 0 discriminator 1
	movq	-352(%rbp), %rax	# gv, tmp135
	movl	12(%rax), %eax	# MEM[(struct SV *)gv_13(D)].sv_flags, D.28840
	movzbl	%al, %eax	# D.28840, D.28840
	cmpl	$13, %eax	#, D.28840
	jne	.L512	#,
	movq	-352(%rbp), %rax	# gv, tmp136
	movq	(%rax), %rax	# gv_13(D)->sv_any, D.28841
	movq	56(%rax), %rax	# _16->xgv_gp, D.28842
	testq	%rax, %rax	# D.28842
	je	.L512	#,
	movq	-352(%rbp), %rax	# gv, tmp137
	movq	(%rax), %rax	# gv_13(D)->sv_any, D.28841
	movq	56(%rax), %rax	# _18->xgv_gp, D.28842
	movq	16(%rax), %rax	# _19->gp_io, D.28843
	testq	%rax, %rax	# D.28843
	je	.L512	#,
	.loc 1 1898 0 is_stmt 1
	movl	$0, %eax	#, D.28836
	jmp	.L532	#
.L512:
	.loc 1 1899 0
	movq	-352(%rbp), %rax	# gv, tmp138
	movq	(%rax), %rax	# gv_13(D)->sv_any, D.28841
	movq	56(%rax), %rax	# _22->xgv_gp, D.28842
	movl	64(%rax), %eax	# _23->gp_cvgen, D.28840
	testl	%eax, %eax	# D.28840
	jne	.L514	#,
	.loc 1 1899 0 is_stmt 0 discriminator 1
	movq	-352(%rbp), %rax	# gv, tmp139
	movq	(%rax), %rax	# gv_13(D)->sv_any, D.28841
	movq	56(%rax), %rax	# _25->xgv_gp, D.28842
	movq	56(%rax), %rax	# _26->gp_cv, iftmp.495
	jmp	.L515	#
.L514:
	.loc 1 1899 0 discriminator 2
	movl	$0, %eax	#, iftmp.495
.L515:
	.loc 1 1899 0 discriminator 3
	movq	%rax, -304(%rbp)	# iftmp.495, cv
	cmpq	$0, -304(%rbp)	#, cv
	je	.L516	#,
.LBB33:
	.loc 1 1900 0 is_stmt 1
	movq	-304(%rbp), %rax	# cv, tmp140
	movq	(%rax), %rax	# cv_29->sv_any, D.28844
	movq	(%rax), %rax	# MEM[(struct XPV *)_30].xpv_pv, tmp141
	movq	%rax, -312(%rbp)	# tmp141, proto
	.loc 1 1901 0
	cmpq	$0, -312(%rbp)	#, proto
	je	.L517	#,
	.loc 1 1902 0
	movq	-312(%rbp), %rax	# proto, tmp142
	movzbl	(%rax), %eax	# *proto_31, D.28837
	cmpb	$59, %al	#, D.28837
	jne	.L518	#,
	.loc 1 1903 0
	addq	$1, -312(%rbp)	#, proto
.L518:
	.loc 1 1904 0
	movq	-312(%rbp), %rax	# proto, tmp143
	movzbl	(%rax), %eax	# *proto_3, D.28837
	cmpb	$42, %al	#, D.28837
	jne	.L517	#,
	.loc 1 1905 0
	movl	$0, %eax	#, D.28836
	jmp	.L532	#
.L517:
.LBE33:
	jmp	.L511	#
.L516:
	.loc 1 1908 0
	movq	$0, -352(%rbp)	#, gv
.L511:
.LBE32:
	.loc 1 1910 0
	leaq	-328(%rbp), %rdx	#, tmp144
	leaq	-288(%rbp), %rsi	#, tmp145
	movq	-320(%rbp), %rax	# s, tmp146
	movq	%rdx, %r8	# tmp144,
	movl	$1, %ecx	#,
	movl	$256, %edx	#,
	movq	%rax, %rdi	# tmp146,
	call	S_scan_word	#
	movq	%rax, -320(%rbp)	# tmp147, s
	.loc 1 1916 0
	movq	-344(%rbp), %rax	# start, tmp148
	movzbl	(%rax), %eax	# *start_8(D), D.28837
	cmpb	$36, %al	#, D.28837
	jne	.L519	#,
	.loc 1 1917 0
	cmpq	$0, -352(%rbp)	#, gv
	jne	.L520	#,
	.loc 1 1917 0 is_stmt 0 discriminator 1
	movzwl	PL_last_lop_op(%rip), %eax	# PL_last_lop_op, PL_last_lop_op.496
	cmpw	$209, %ax	#, PL_last_lop_op.496
	je	.L520	#,
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28837
	cmpb	$64, %al	#, D.28837
	jle	.L521	#,
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28837
	cmpb	$90, %al	#, D.28837
	jg	.L521	#,
.L520:
	.loc 1 1918 0 is_stmt 1
	movl	$0, %eax	#, D.28836
	jmp	.L532	#
.L521:
	.loc 1 1919 0
	movq	-320(%rbp), %rax	# s, tmp149
	movq	%rax, %rdi	# tmp149,
	call	S_skipspace	#
	movq	%rax, -320(%rbp)	# tmp150, s
	.loc 1 1920 0
	movq	-344(%rbp), %rax	# start, tmp151
	movq	%rax, PL_bufptr(%rip)	# tmp151, PL_bufptr
	.loc 1 1921 0
	movl	$2, PL_expect(%rip)	#, PL_expect
	.loc 1 1922 0
	movq	-320(%rbp), %rax	# s, tmp152
	movzbl	(%rax), %eax	# *s_42, D.28837
	cmpb	$40, %al	#, D.28837
	jne	.L522	#,
	.loc 1 1922 0 is_stmt 0 discriminator 1
	movl	$259, %eax	#, iftmp.497
	jmp	.L523	#
.L522:
	.loc 1 1922 0 discriminator 2
	movl	$258, %eax	#, iftmp.497
.L523:
	.loc 1 1922 0 discriminator 3
	jmp	.L532	#
.L519:
	.loc 1 1924 0 is_stmt 1
	movq	-328(%rbp), %rax	# len, len.498
	movl	%eax, %edx	# len.498, D.28836
	leaq	-288(%rbp), %rax	#, tmp153
	movl	%edx, %esi	# D.28836,
	movq	%rax, %rdi	# tmp153,
	call	Perl_keyword	#
	testl	%eax, %eax	# D.28836
	jne	.L524	#,
	.loc 1 1925 0
	movq	-328(%rbp), %rax	# len, len.499
	cmpq	$2, %rax	#, len.499
	jbe	.L525	#,
	.loc 1 1925 0 is_stmt 0 discriminator 1
	movq	-328(%rbp), %rax	# len, len.500
	subq	$2, %rax	#, D.28839
	movzbl	-288(%rbp,%rax), %eax	# tmpbuf, D.28837
	cmpb	$58, %al	#, D.28837
	jne	.L525	#,
	movq	-328(%rbp), %rax	# len, len.501
	subq	$1, %rax	#, D.28839
	movzbl	-288(%rbp,%rax), %eax	# tmpbuf, D.28837
	cmpb	$58, %al	#, D.28837
	jne	.L525	#,
	.loc 1 1926 0 is_stmt 1
	movq	-328(%rbp), %rax	# len, len.502
	subq	$2, %rax	#, len.503
	movq	%rax, -328(%rbp)	# len.503, len
	.loc 1 1927 0
	movq	-328(%rbp), %rax	# len, len.504
	movb	$0, -288(%rbp,%rax)	#, tmpbuf
	.loc 1 1928 0
	jmp	.L526	#
.L525:
	.loc 1 1930 0
	leaq	-288(%rbp), %rax	#, tmp154
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp154,
	call	Perl_gv_fetchpv	#
	movq	%rax, -296(%rbp)	# tmp155, indirgv
	.loc 1 1931 0
	cmpq	$0, -296(%rbp)	#, indirgv
	je	.L527	#,
	.loc 1 1931 0 is_stmt 0 discriminator 1
	movq	-296(%rbp), %rax	# indirgv, tmp156
	movq	(%rax), %rax	# indirgv_61->sv_any, D.28841
	movq	56(%rax), %rax	# _62->xgv_gp, D.28842
	movl	64(%rax), %eax	# _63->gp_cvgen, D.28840
	testl	%eax, %eax	# D.28840
	jne	.L527	#,
	movq	-296(%rbp), %rax	# indirgv, tmp157
	movq	(%rax), %rax	# indirgv_61->sv_any, D.28841
	movq	56(%rax), %rax	# _65->xgv_gp, D.28842
	movq	56(%rax), %rax	# _66->gp_cv, D.28845
	testq	%rax, %rax	# D.28845
	je	.L527	#,
	.loc 1 1932 0 is_stmt 1
	movl	$0, %eax	#, D.28836
	jmp	.L532	#
.L527:
	.loc 1 1934 0
	cmpq	$0, -352(%rbp)	#, gv
	je	.L528	#,
	.loc 1 1934 0 is_stmt 0 discriminator 1
	cmpq	$0, -296(%rbp)	#, indirgv
	je	.L529	#,
	movq	-296(%rbp), %rax	# indirgv, tmp158
	movl	12(%rax), %eax	# MEM[(struct SV *)indirgv_61].sv_flags, D.28840
	movzbl	%al, %eax	# D.28840, D.28840
	cmpl	$13, %eax	#, D.28840
	jne	.L529	#,
	movq	-296(%rbp), %rax	# indirgv, tmp159
	movq	(%rax), %rax	# indirgv_61->sv_any, D.28841
	movq	56(%rax), %rax	# _71->xgv_gp, D.28842
	testq	%rax, %rax	# D.28842
	je	.L529	#,
	movq	-296(%rbp), %rax	# indirgv, tmp160
	movq	(%rax), %rax	# indirgv_61->sv_any, D.28841
	movq	56(%rax), %rax	# _73->xgv_gp, D.28842
	movq	16(%rax), %rax	# _74->gp_io, D.28843
	testq	%rax, %rax	# D.28843
	jne	.L528	#,
.L529:
	.loc 1 1934 0 discriminator 2
	movq	-328(%rbp), %rax	# len, len.505
	movl	%eax, %ecx	# len.505, D.28840
	leaq	-288(%rbp), %rax	#, tmp161
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.28840,
	movq	%rax, %rdi	# tmp161,
	call	Perl_gv_stashpvn	#
	testq	%rax, %rax	# D.28846
	je	.L524	#,
.L528:
	.loc 1 1935 0 is_stmt 1
	movq	-320(%rbp), %rax	# s, tmp162
	movq	%rax, %rdi	# tmp162,
	call	S_skipspace	#
	movq	%rax, -320(%rbp)	# tmp163, s
	.loc 1 1936 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.506
	movq	%rax, %rdx	# PL_bufend.506, PL_bufend.507
	movq	-320(%rbp), %rax	# s, s.508
	subq	%rax, %rdx	# s.508, D.28847
	movq	%rdx, %rax	# D.28847, D.28847
	cmpq	$1, %rax	#, D.28847
	jle	.L526	#,
	.loc 1 1936 0 is_stmt 0 discriminator 1
	movq	-320(%rbp), %rax	# s, tmp164
	movzbl	(%rax), %eax	# *s_79, D.28837
	cmpb	$61, %al	#, D.28837
	jne	.L526	#,
	movq	-320(%rbp), %rax	# s, tmp165
	addq	$1, %rax	#, D.28848
	movzbl	(%rax), %eax	# *_85, D.28837
	cmpb	$62, %al	#, D.28837
	jne	.L526	#,
	.loc 1 1937 0 is_stmt 1
	movl	$0, %eax	#, D.28836
	jmp	.L532	#
.L526:
	.loc 1 1939 0
	movl	PL_nexttoke(%rip), %ebx	# PL_nexttoke, PL_nexttoke.509
	movq	-328(%rbp), %rdx	# len, len.510
	leaq	-288(%rbp), %rax	#, tmp166
	movq	%rdx, %rsi	# len.510,
	movq	%rax, %rdi	# tmp166,
	call	Perl_newSVpvn	#
	movq	%rax, %rdx	# D.28849,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movslq	%ebx, %rdx	# PL_nexttoke.509, tmp167
	movq	%rax, PL_nextval(,%rdx,8)	# D.28850, PL_nextval[PL_nexttoke.509_88].opval
	.loc 1 1941 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.511
	cltq
	movq	PL_nextval(,%rax,8), %rax	# PL_nextval[PL_nexttoke.511_92].opval, D.28850
	movb	$64, 37(%rax)	#, _93->op_private
	.loc 1 1942 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 1943 0
	movl	$257, %edi	#,
	call	S_force_next	#
	.loc 1 1944 0
	movq	-320(%rbp), %rax	# s, tmp169
	movq	%rax, PL_bufptr(%rip)	# tmp169, PL_bufptr
	.loc 1 1945 0
	movq	-320(%rbp), %rax	# s, tmp170
	movzbl	(%rax), %eax	# *s_2, D.28837
	cmpb	$40, %al	#, D.28837
	jne	.L530	#,
	.loc 1 1945 0 is_stmt 0 discriminator 1
	movl	$259, %eax	#, iftmp.512
	jmp	.L531	#
.L530:
	.loc 1 1945 0 discriminator 2
	movl	$258, %eax	#, iftmp.512
.L531:
	.loc 1 1945 0 discriminator 3
	jmp	.L532	#
.L524:
	.loc 1 1948 0 is_stmt 1
	movl	$0, %eax	#, D.28836
.L532:
	.loc 1 1949 0
	movq	-24(%rbp), %rbx	# D.28851, tmp173
	xorq	%fs:40, %rbx	#, tmp173
	je	.L533	#,
	call	__stack_chk_fail	#
.L533:
	addq	$344, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE25:
	.size	S_intuit_method, .-S_intuit_method
	.section	.rodata
.LC43:
	.string	"PERL5DB"
	.align 8
.LC44:
	.string	"BEGIN { require 'perl5db.pl' }"
	.text
	.type	S_incl_perldb, @function
S_incl_perldb:
.LFB26:
	.loc 1 1960 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 1961 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.513
	testl	%eax, %eax	# PL_perldb.513
	je	.L535	#,
.LBB34:
	.loc 1 1962 0
	movl	$.LC43, %edi	#,
	call	getenv	#
	movq	%rax, -8(%rbp)	# tmp63, pdb
	.loc 1 1964 0
	cmpq	$0, -8(%rbp)	#, pdb
	je	.L536	#,
	.loc 1 1965 0
	movq	-8(%rbp), %rax	# pdb, D.28852
	jmp	.L537	#
.L536:
	.loc 1 1966 0
	call	__errno_location	#
	movl	$0, (%rax)	#, *_5
	.loc 1 1967 0
	movl	$.LC44, %eax	#, D.28852
	jmp	.L537	#
.L535:
.LBE34:
	.loc 1 1969 0
	movl	$.LC17, %eax	#, D.28852
.L537:
	.loc 1 1970 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE26:
	.size	S_incl_perldb, .-S_incl_perldb
	.section	.rodata
	.align 8
.LC45:
	.string	"Can't upgrade filter_add data to SVt_PVIO"
	.text
	.globl	Perl_filter_add
	.type	Perl_filter_add, @function
Perl_filter_add:
.LFB27:
	.loc 1 1992 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# funcp, funcp
	movq	%rsi, -16(%rbp)	# datasv, datasv
	.loc 1 1993 0
	cmpq	$0, -8(%rbp)	#, funcp
	jne	.L539	#,
	.loc 1 1994 0
	movl	$0, %eax	#, D.28856
	jmp	.L540	#
.L539:
	.loc 1 1996 0
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.514
	testq	%rax, %rax	# PL_rsfp_filters.514
	jne	.L541	#,
	.loc 1 1997 0
	call	Perl_newAV	#
	movq	%rax, PL_rsfp_filters(%rip)	# PL_rsfp_filters.515, PL_rsfp_filters
.L541:
	.loc 1 1998 0
	cmpq	$0, -16(%rbp)	#, datasv
	jne	.L542	#,
	.loc 1 1999 0
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -16(%rbp)	# tmp73, datasv
.L542:
	.loc 1 2000 0
	movq	-16(%rbp), %rax	# datasv, tmp74
	movl	12(%rax), %eax	# datasv_1->sv_flags, D.28857
	movzbl	%al, %eax	# D.28857, D.28857
	cmpl	$14, %eax	#, D.28857
	ja	.L543	#,
	.loc 1 2000 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# datasv, tmp75
	movl	$15, %esi	#,
	movq	%rax, %rdi	# tmp75,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.28858
	jne	.L543	#,
	.loc 1 2001 0 is_stmt 1
	movl	$.LC45, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
.L543:
	.loc 1 2002 0
	movq	-16(%rbp), %rax	# datasv, tmp76
	movq	(%rax), %rax	# datasv_1->sv_any, D.28859
	movq	-8(%rbp), %rdx	# funcp, tmp77
	movq	%rdx, 72(%rax)	# tmp77, MEM[(struct XPVIO *)_12].xio_dirpu.xiou_any
	.loc 1 2003 0
	movq	-16(%rbp), %rax	# datasv, tmp78
	movq	(%rax), %rax	# datasv_1->sv_any, D.28859
	movq	-16(%rbp), %rdx	# datasv, tmp79
	movq	(%rdx), %rdx	# datasv_1->sv_any, D.28859
	movzbl	163(%rdx), %edx	# MEM[(struct XPVIO *)_14].xio_flags, D.28858
	orl	$64, %edx	#, D.28860
	movb	%dl, 163(%rax)	# D.28860, MEM[(struct XPVIO *)_13].xio_flags
	.loc 1 2006 0
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.516
	movl	$1, %esi	#,
	movq	%rax, %rdi	# PL_rsfp_filters.516,
	call	Perl_av_unshift	#
	.loc 1 2007 0
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.517
	movq	-16(%rbp), %rdx	# datasv, tmp80
	movl	$0, %esi	#,
	movq	%rax, %rdi	# PL_rsfp_filters.517,
	call	Perl_av_store	#
	.loc 1 2008 0
	movq	-16(%rbp), %rax	# datasv, D.28856
.L540:
	.loc 1 2009 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE27:
	.size	Perl_filter_add, .-Perl_filter_add
	.section	.rodata
	.align 8
.LC46:
	.string	"filter_del can only delete in reverse order (currently)"
	.text
	.globl	Perl_filter_del
	.type	Perl_filter_del, @function
Perl_filter_del:
.LFB28:
	.loc 1 2015 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# funcp, funcp
	.loc 1 2018 0
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.518
	testq	%rax, %rax	# PL_rsfp_filters.518
	je	.L545	#,
	.loc 1 2018 0 is_stmt 0 discriminator 1
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.519
	movq	(%rax), %rax	# PL_rsfp_filters.519_2->sv_any, D.28862
	movq	8(%rax), %rax	# _3->xav_fill, D.28863
	testq	%rax, %rax	# D.28863
	jns	.L546	#,
.L545:
	.loc 1 2019 0 is_stmt 1
	jmp	.L544	#
.L546:
	.loc 1 2021 0
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.520
	movq	(%rax), %rax	# PL_rsfp_filters.520_5->sv_any, D.28862
	movq	(%rax), %rdx	# _6->xav_array, D.28864
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.521
	movq	(%rax), %rax	# PL_rsfp_filters.521_8->sv_any, D.28862
	movq	8(%rax), %rax	# _9->xav_fill, D.28863
	salq	$3, %rax	#, D.28865
	addq	%rdx, %rax	# D.28864, D.28866
	movq	(%rax), %rax	# *_13, tmp81
	movq	%rax, -8(%rbp)	# tmp81, datasv
	.loc 1 2022 0
	movq	-8(%rbp), %rax	# datasv, tmp82
	movq	(%rax), %rax	# datasv_14->sv_any, D.28867
	movq	72(%rax), %rax	# MEM[(struct XPVIO *)_15].xio_dirpu.xiou_any, D.28867
	cmpq	-24(%rbp), %rax	# funcp, D.28867
	jne	.L548	#,
	.loc 1 2023 0
	movq	-8(%rbp), %rax	# datasv, tmp83
	movq	(%rax), %rax	# datasv_14->sv_any, D.28867
	movq	-8(%rbp), %rdx	# datasv, tmp84
	movq	(%rdx), %rdx	# datasv_14->sv_any, D.28867
	movzbl	163(%rdx), %edx	# MEM[(struct XPVIO *)_19].xio_flags, D.28868
	andl	$-65, %edx	#, D.28868
	movb	%dl, 163(%rax)	# D.28868, MEM[(struct XPVIO *)_18].xio_flags
	.loc 1 2024 0
	movq	-8(%rbp), %rax	# datasv, tmp85
	movq	(%rax), %rax	# datasv_14->sv_any, D.28867
	movq	$0, 72(%rax)	#, MEM[(struct XPVIO *)_22].xio_dirpu.xiou_any
	.loc 1 2025 0
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.522
	movq	%rax, %rdi	# PL_rsfp_filters.522,
	call	Perl_av_pop	#
	movq	%rax, %rdi	# D.28869,
	call	Perl_sv_free	#
	.loc 1 2027 0
	jmp	.L544	#
.L548:
	.loc 1 2030 0
	movl	$.LC46, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
.L544:
	.loc 1 2031 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE28:
	.size	Perl_filter_del, .-Perl_filter_del
	.globl	Perl_filter_read
	.type	Perl_filter_read, @function
Perl_filter_read:
.LFB29:
	.loc 1 2038 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movl	%edi, -36(%rbp)	# idx, idx
	movq	%rsi, -48(%rbp)	# buf_sv, buf_sv
	movl	%edx, -40(%rbp)	# maxlen, maxlen
	.loc 1 2040 0
	movq	$0, -16(%rbp)	#, datasv
	.loc 1 2042 0
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.523
	testq	%rax, %rax	# PL_rsfp_filters.523
	jne	.L550	#,
	.loc 1 2043 0
	movl	$-1, %eax	#, D.28871
	jmp	.L551	#
.L550:
	.loc 1 2044 0
	movl	-36(%rbp), %eax	# idx, tmp107
	movslq	%eax, %rdx	# tmp107, D.28872
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.524
	movq	(%rax), %rax	# PL_rsfp_filters.524_7->sv_any, D.28873
	movq	8(%rax), %rax	# _8->xav_fill, D.28872
	cmpq	%rax, %rdx	# D.28872, D.28872
	jle	.L552	#,
	.loc 1 2049 0
	cmpl	$0, -40(%rbp)	#, maxlen
	je	.L553	#,
.LBB35:
	.loc 1 2052 0
	movq	-48(%rbp), %rax	# buf_sv, tmp108
	movq	(%rax), %rax	# buf_sv_11(D)->sv_any, D.28874
	movq	8(%rax), %rax	# MEM[(struct XPV *)_12].xpv_cur, D.28875
	movl	%eax, -24(%rbp)	# D.28875, old_len
	.loc 1 2055 0
	movq	-48(%rbp), %rax	# buf_sv, tmp109
	movq	(%rax), %rax	# buf_sv_11(D)->sv_any, D.28874
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_15].xpv_len, D.28875
	movl	-40(%rbp), %eax	# maxlen, tmp110
	movl	-24(%rbp), %ecx	# old_len, tmp111
	addl	%ecx, %eax	# tmp111, D.28876
	cltq
	cmpq	%rax, %rdx	# D.28875, D.28875
	jae	.L555	#,
	.loc 1 2055 0 is_stmt 0 discriminator 1
	movl	-40(%rbp), %eax	# maxlen, tmp112
	movl	-24(%rbp), %edx	# old_len, tmp113
	addl	%edx, %eax	# tmp113, D.28876
	movslq	%eax, %rdx	# D.28876, D.28875
	movq	-48(%rbp), %rax	# buf_sv, tmp114
	movq	%rdx, %rsi	# D.28875,
	movq	%rax, %rdi	# tmp114,
	call	Perl_sv_grow	#
.L555:
	.loc 1 2056 0 is_stmt 1
	movl	-40(%rbp), %eax	# maxlen, tmp116
	movslq	%eax, %rdx	# tmp116, D.28875
	movq	-48(%rbp), %rax	# buf_sv, tmp117
	movq	(%rax), %rax	# buf_sv_11(D)->sv_any, D.28874
	movq	(%rax), %rcx	# MEM[(struct XPV *)_25].xpv_pv, D.28877
	movl	-24(%rbp), %eax	# old_len, tmp118
	cltq
	addq	%rax, %rcx	# D.28878, D.28874
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.526
	movq	%rcx, %rsi	# D.28874,
	movq	%rax, %rdi	# PL_rsfp.526,
	call	Perl_PerlIO_read	#
	movl	%eax, -20(%rbp)	# D.28872, len
	cmpl	$0, -20(%rbp)	#, len
	jg	.L556	#,
	.loc 1 2057 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.527
	movq	%rax, %rdi	# PL_rsfp.527,
	call	Perl_PerlIO_error	#
	testl	%eax, %eax	# D.28876
	je	.L557	#,
	.loc 1 2058 0
	movl	$-1, %eax	#, D.28871
	jmp	.L551	#
.L557:
	.loc 1 2060 0
	movl	$0, %eax	#, D.28871
	jmp	.L551	#
.L556:
	.loc 1 2062 0
	movq	-48(%rbp), %rax	# buf_sv, tmp119
	movq	(%rax), %rax	# buf_sv_11(D)->sv_any, D.28874
	movl	-20(%rbp), %edx	# len, tmp120
	movl	-24(%rbp), %ecx	# old_len, tmp121
	addl	%ecx, %edx	# tmp121, D.28876
	movslq	%edx, %rdx	# D.28876, D.28875
	movq	%rdx, 8(%rax)	# D.28875, MEM[(struct XPV *)_36].xpv_cur
.LBE35:
	jmp	.L558	#
.L553:
	.loc 1 2065 0
	movq	-48(%rbp), %rax	# buf_sv, tmp122
	movq	(%rax), %rax	# buf_sv_11(D)->sv_any, D.28874
	movq	8(%rax), %rax	# MEM[(struct XPV *)_39].xpv_cur, D.28875
	movl	%eax, %edx	# D.28875, D.28876
	movq	PL_rsfp(%rip), %rcx	# PL_rsfp, PL_rsfp.528
	movq	-48(%rbp), %rax	# buf_sv, tmp123
	movq	%rcx, %rsi	# PL_rsfp.528,
	movq	%rax, %rdi	# tmp123,
	call	Perl_sv_gets	#
	testq	%rax, %rax	# D.28877
	jne	.L558	#,
	.loc 1 2066 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.529
	movq	%rax, %rdi	# PL_rsfp.529,
	call	Perl_PerlIO_error	#
	testl	%eax, %eax	# D.28876
	je	.L559	#,
	.loc 1 2067 0
	movl	$-1, %eax	#, D.28871
	jmp	.L551	#
.L559:
	.loc 1 2069 0
	movl	$0, %eax	#, D.28871
	jmp	.L551	#
.L558:
	.loc 1 2072 0
	movq	-48(%rbp), %rax	# buf_sv, tmp124
	movq	(%rax), %rax	# buf_sv_11(D)->sv_any, D.28874
	movq	8(%rax), %rax	# MEM[(struct XPV *)_48].xpv_cur, D.28875
	jmp	.L551	#
.L552:
	.loc 1 2075 0
	movq	PL_rsfp_filters(%rip), %rax	# PL_rsfp_filters, PL_rsfp_filters.530
	movq	(%rax), %rax	# PL_rsfp_filters.530_51->sv_any, D.28873
	movq	(%rax), %rax	# _52->xav_array, D.28877
	movl	-36(%rbp), %edx	# idx, tmp125
	movslq	%edx, %rdx	# tmp125, D.28875
	salq	$3, %rdx	#, D.28875
	addq	%rdx, %rax	# D.28875, D.28879
	movq	(%rax), %rax	# *_56, tmp126
	movq	%rax, -16(%rbp)	# tmp126, datasv
	cmpq	$PL_sv_undef, -16(%rbp)	#, datasv
	jne	.L560	#,
	.loc 1 2079 0
	movl	-36(%rbp), %eax	# idx, tmp127
	leal	1(%rax), %ecx	#, D.28876
	movl	-40(%rbp), %edx	# maxlen, tmp128
	movq	-48(%rbp), %rax	# buf_sv, tmp129
	movq	%rax, %rsi	# tmp129,
	movl	%ecx, %edi	# D.28876,
	call	Perl_filter_read	#
	jmp	.L551	#
.L560:
	.loc 1 2082 0
	movq	-16(%rbp), %rax	# datasv, tmp130
	movq	(%rax), %rax	# datasv_57->sv_any, D.28874
	movq	72(%rax), %rax	# MEM[(struct XPVIO *)_60].xio_dirpu.xiou_any, D.28874
	movq	%rax, -8(%rbp)	# D.28874, funcp
	.loc 1 2089 0
	movl	-40(%rbp), %edx	# maxlen, tmp131
	movq	-48(%rbp), %rsi	# buf_sv, tmp132
	movl	-36(%rbp), %ecx	# idx, tmp133
	movq	-8(%rbp), %rax	# funcp, tmp134
	movl	%ecx, %edi	# tmp133,
	call	*%rax	# tmp134
.L551:
	.loc 1 2090 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE29:
	.size	Perl_filter_read, .-Perl_filter_read
	.type	S_filter_gets, @function
S_filter_gets:
.LFB30:
	.loc 1 2094 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %rax	# fp, fp
	movq	%rdx, -24(%rbp)	# append, append
	.loc 1 2100 0
	movq	PL_rsfp_filters(%rip), %rdx	# PL_rsfp_filters, PL_rsfp_filters.531
	testq	%rdx, %rdx	# PL_rsfp_filters.531
	je	.L562	#,
	.loc 1 2101 0
	cmpq	$0, -24(%rbp)	#, append
	jne	.L563	#,
	.loc 1 2102 0
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.28881
	movq	$0, 8(%rax)	#, MEM[(struct XPV *)_5].xpv_cur
.L563:
	.loc 1 2103 0
	movl	$0, %edx	#,
	movq	%rbx, %rsi	# sv,
	movl	$0, %edi	#,
	call	Perl_filter_read	#
	testl	%eax, %eax	# D.28882
	jle	.L564	#,
	.loc 1 2104 0
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.28881
	movq	(%rax), %rax	# MEM[(struct XPV *)_7].xpv_pv, D.28880
	jmp	.L565	#
.L564:
	.loc 1 2106 0
	movl	$0, %eax	#, D.28880
	jmp	.L565	#
.L562:
	.loc 1 2109 0
	movq	-24(%rbp), %rdx	# append, tmp68
	movq	%rax, %rsi	# fp,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_gets	#
.L565:
	.loc 1 2110 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE30:
	.size	S_filter_gets, .-S_filter_gets
	.section	.rodata
.LC47:
	.string	"__PACKAGE__"
	.text
	.type	S_find_in_my_stash, @function
S_find_in_my_stash:
.LFB31:
	.loc 1 2114 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# pkgname, pkgname
	movl	%esi, -28(%rbp)	# len, len
	.loc 1 2117 0
	cmpl	$11, -28(%rbp)	#, len
	jne	.L567	#,
	.loc 1 2117 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# pkgname, tmp83
	movzbl	(%rax), %eax	# *pkgname_5(D), D.28884
	cmpb	$95, %al	#, D.28884
	jne	.L567	#,
	movq	-24(%rbp), %rax	# pkgname, tmp84
	movl	$.LC47, %esi	#,
	movq	%rax, %rdi	# tmp84,
	call	strcmp	#
	testl	%eax, %eax	# D.28885
	jne	.L567	#,
	.loc 1 2118 0 is_stmt 1
	movq	PL_curstash(%rip), %rax	# PL_curstash, D.28883
	jmp	.L568	#
.L567:
	.loc 1 2120 0
	cmpl	$2, -28(%rbp)	#, len
	jle	.L569	#,
	.loc 1 2121 0 discriminator 1
	movl	-28(%rbp), %eax	# len, tmp85
	cltq
	leaq	-2(%rax), %rdx	#, D.28886
	movq	-24(%rbp), %rax	# pkgname, tmp86
	addq	%rdx, %rax	# D.28886, D.28887
	movzbl	(%rax), %eax	# *_11, D.28884
	.loc 1 2120 0 discriminator 1
	cmpb	$58, %al	#, D.28884
	jne	.L569	#,
	.loc 1 2121 0
	movl	-28(%rbp), %eax	# len, tmp87
	cltq
	leaq	-1(%rax), %rdx	#, D.28886
	movq	-24(%rbp), %rax	# pkgname, tmp88
	addq	%rdx, %rax	# D.28886, D.28887
	movzbl	(%rax), %eax	# *_15, D.28884
	cmpb	$58, %al	#, D.28884
	jne	.L569	#,
	.loc 1 2121 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# pkgname, tmp89
	movl	$11, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp89,
	call	Perl_gv_fetchpv	#
	movq	%rax, -16(%rbp)	# tmp90, gv
	cmpq	$0, -16(%rbp)	#, gv
	je	.L569	#,
	.loc 1 2124 0 is_stmt 1
	movq	-16(%rbp), %rax	# gv, tmp91
	movq	(%rax), %rax	# gv_17->sv_any, D.28888
	movq	56(%rax), %rax	# _18->xgv_gp, D.28889
	movq	40(%rax), %rax	# _19->gp_hv, D.28883
	jmp	.L568	#
.L569:
	.loc 1 2128 0
	movq	-24(%rbp), %rax	# pkgname, tmp92
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp92,
	call	Perl_gv_fetchpv	#
	movq	%rax, -16(%rbp)	# tmp93, gv
	cmpq	$0, -16(%rbp)	#, gv
	je	.L570	#,
.LBB36:
	.loc 1 2130 0
	movq	-16(%rbp), %rax	# gv, tmp94
	movq	(%rax), %rax	# gv_21->sv_any, D.28888
	movq	56(%rax), %rax	# _22->xgv_gp, D.28889
	movq	56(%rax), %rax	# _23->gp_cv, D.28890
	testq	%rax, %rax	# D.28890
	je	.L570	#,
	.loc 1 2130 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# gv, tmp95
	movq	(%rax), %rax	# gv_21->sv_any, D.28888
	movq	56(%rax), %rax	# _25->xgv_gp, D.28889
	movq	56(%rax), %rax	# _26->gp_cv, D.28890
	movq	%rax, %rdi	# D.28890,
	call	Perl_cv_const_sv	#
	movq	%rax, -8(%rbp)	# tmp96, sv
	cmpq	$0, -8(%rbp)	#, sv
	je	.L570	#,
	.loc 1 2131 0 is_stmt 1
	movq	-8(%rbp), %rax	# sv, tmp97
	movl	12(%rax), %eax	# sv_28->sv_flags, D.28891
	andl	$262144, %eax	#, D.28891
	testl	%eax, %eax	# D.28891
	je	.L571	#,
	.loc 1 2131 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp98
	movq	(%rax), %rax	# sv_28->sv_any, D.28892
	movq	(%rax), %rax	# MEM[(struct XPV *)_31].xpv_pv, iftmp.532
	jmp	.L572	#
.L571:
	.loc 1 2131 0 discriminator 2
	movq	-8(%rbp), %rax	# sv, tmp99
	movq	%rax, %rdi	# tmp99,
	call	Perl_sv_2pv_nolen	#
.L572:
	.loc 1 2131 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.532, pkgname
.L570:
.LBE36:
	.loc 1 2135 0 is_stmt 1
	movq	-24(%rbp), %rax	# pkgname, tmp100
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp100,
	call	Perl_gv_stashpv	#
.L568:
	.loc 1 2136 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE31:
	.size	S_find_in_my_stash, .-S_find_in_my_stash
	.section	.rodata
.LC48:
	.string	"L\\u"
.LC49:
	.string	"U\\l"
.LC50:
	.string	"panic: yylex"
.LC51:
	.string	"\""
	.align 8
.LC52:
	.string	"Bad evalled substitution pattern"
.LC53:
	.string	"Unrecognized character \\x%02X"
.LC54:
	.string	"Format not terminated"
	.align 8
.LC55:
	.string	"Missing right curly or square bracket"
.LC56:
	.string	"LINE: while (<>) {"
.LC57:
	.string	"chomp;"
.LC58:
	.string	"our @F=split(%s);"
.LC59:
	.string	"our @F=split(q"
.LC60:
	.string	");"
.LC61:
	.string	"our @F=split(' ');"
.LC62:
	.string	"\n"
.LC63:
	.string	";}continue{print;}"
.LC64:
	.string	"=cut"
.LC65:
	.string	"perl -"
.LC66:
	.string	"perl"
.LC67:
	.string	"indir"
.LC68:
	.string	"Can't exec %s"
.LC69:
	.string	"Too late for \"-%.*s\" option"
.LC70:
	.string	"panic: input overflow"
.LC71:
	.string	"=>"
.LC72:
	.string	"\024"
	.align 8
.LC73:
	.string	"Unterminated attribute parameter in attribute list"
.LC74:
	.string	"unique"
	.align 8
.LC75:
	.string	"The 'unique' attribute may only be applied to 'our' variables"
.LC76:
	.string	"lvalue"
.LC77:
	.string	"locked"
.LC78:
	.string	"method"
.LC79:
	.string	"Unterminated attribute list"
	.align 8
.LC80:
	.string	"Invalid separator character %c%c%c in attribute list"
	.align 8
.LC81:
	.string	"Unmatched right square bracket"
.LC82:
	.string	"syntax error"
.LC83:
	.string	"([{< )]}> )]}>"
.LC84:
	.string	"Unmatched right curly bracket"
.LC85:
	.string	"+-*/%.^&|<"
.LC86:
	.string	"Reversed %c= operator"
.LC87:
	.string	"{$:+-"
.LC88:
	.string	"Array length"
.LC89:
	.string	"Scalar"
.LC90:
	.string	"Final $ should be \\$ or $name"
	.align 8
.LC91:
	.string	"Multidimensional syntax %.*s not supported"
.LC92:
	.string	"SIG"
.LC93:
	.string	"You need to quote \"%s\""
.LC94:
	.string	"$@\"'`q"
.LC95:
	.string	"&*<%"
.LC96:
	.string	"Array"
.LC97:
	.string	" \t$#+-'\""
	.align 8
.LC98:
	.string	"Scalar value %.*s better written as $%.*s"
.LC99:
	.string	"study"
.LC100:
	.string	"Number"
.LC101:
	.string	"String"
.LC102:
	.string	"Backticks"
	.align 8
.LC103:
	.string	"Can't use \\%c to mean $%c in expression"
.LC104:
	.string	"Backslash"
.LC105:
	.string	"msyq"
.LC106:
	.string	"qwxr"
.LC107:
	.string	"CORE"
.LC108:
	.string	"Thread.pm"
	.align 8
.LC109:
	.string	"dump() better written as CORE::dump()"
.LC110:
	.string	"qualify as such or use &"
	.align 8
.LC111:
	.string	"Ambiguous call resolved as CORE::%s(), %s"
.LC112:
	.string	"'"
.LC113:
	.string	"::"
.LC114:
	.string	"Bad name after %s%s"
.LC115:
	.string	"Bareword"
	.align 8
.LC116:
	.string	"Bareword \"%s\" refers to nonexistent package"
.LC117:
	.string	"CORE::GLOBAL::"
	.align 8
.LC118:
	.string	"Ambiguous use of -%s resolved as -&%s()"
.LC119:
	.string	"__ANON__"
.LC120:
	.string	"__ANON__::__ANON__"
	.align 8
.LC121:
	.string	"Operator or semicolon missing before %c%s"
	.align 8
.LC122:
	.string	"Ambiguous use of %c resolved as operator %c"
.LC123:
	.string	"%ld"
.LC124:
	.string	"main"
.LC125:
	.string	"%s::DATA"
.LC126:
	.string	":utf8"
.LC127:
	.string	"name"
.LC128:
	.string	":encoding(%_)"
.LC129:
	.string	"CORE::%s is not a keyword"
.LC130:
	.string	"ENV"
.LC131:
	.string	"AnyDBM_File::ISA"
.LC132:
	.string	"my"
.LC133:
	.string	"our"
.LC134:
	.string	"Missing $ on loop variable"
.LC135:
	.string	"sub"
.LC136:
	.string	"No such class %.1000s"
	.align 8
.LC137:
	.string	"\"no\" not allowed in expression"
.LC138:
	.string	"|&*+-=!?:."
	.align 8
.LC139:
	.string	"Precedence problem: open %.*s should be open(%.*s)"
.LC140:
	.string	"filehandle"
	.align 8
.LC141:
	.string	"Possible attempt to separate words with commas"
	.align 8
.LC142:
	.string	"Possible attempt to put comments in qw() list"
.LC143:
	.string	"<> should be quotes"
.LC144:
	.string	"subroutine name"
.LC145:
	.string	"sort is now a reserved word"
.LC146:
	.string	"Missing name in \"my sub\""
.LC147:
	.string	"?"
.LC148:
	.string	"Prototype not terminated"
.LC149:
	.string	"$@%*;[]&\\"
	.align 8
.LC150:
	.string	"Illegal character in prototype for %_ : %s"
	.align 8
.LC151:
	.string	"Illegal declaration of anonymous subroutine"
	.align 8
.LC152:
	.string	"Illegal declaration of subroutine %_"
	.align 8
.LC153:
	.string	"\"use\" not allowed in expression"
.LC154:
	.string	"\f"
	.text
	.globl	Perl_yylex
	.type	Perl_yylex, @function
Perl_yylex:
.LFB32:
	.loc 1 2196 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$1432, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	.loc 1 2196 0
	movq	%fs:40, %rax	#, tmp3747
	movq	%rax, -40(%rbp)	# tmp3747, D.28927
	xorl	%eax, %eax	# tmp3747
	.loc 1 2201 0
	movq	$0, -1368(%rbp)	#, gv
	.loc 1 2202 0
	movq	$0, -1360(%rbp)	#, gvp
	.loc 1 2203 0
	movb	$0, -1441(%rbp)	#, bof
	.loc 1 2204 0
	movl	$0, -1428(%rbp)	#, orig_keyword
	.loc 1 2207 0
	movzbl	PL_pending_ident(%rip), %eax	# PL_pending_ident, PL_pending_ident.533
	testb	%al, %al	# PL_pending_ident.533
	je	.L574	#,
	.loc 1 2208 0
	call	S_pending_ident	#
	jmp	.L2138	#
.L574:
	.loc 1 2212 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.534
	cmpl	$8, %eax	#, PL_lex_state.534
	ja	.L576	#,
	movl	%eax, %eax	# PL_lex_state.534, tmp3329
	movq	.L578(,%rax,8), %rax	#, tmp3330
	jmp	*%rax	# tmp3330
	.section	.rodata
	.align 8
	.align 4
.L578:
	.quad	.L577
	.quad	.L579
	.quad	.L576
	.quad	.L580
	.quad	.L581
	.quad	.L582
	.quad	.L583
	.quad	.L584
	.quad	.L585
	.text
.L577:
	.loc 1 2221 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.535
	subl	$1, %eax	#, PL_nexttoke.536
	movl	%eax, PL_nexttoke(%rip)	# PL_nexttoke.536, PL_nexttoke
	.loc 1 2222 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.537
	cltq
	movq	PL_nextval(,%rax,8), %rax	# PL_nextval, tmp3332
	movq	%rax, PL_yylval(%rip)	# tmp3332, PL_yylval
	.loc 1 2223 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.538
	testl	%eax, %eax	# PL_nexttoke.538
	jne	.L586	#,
	.loc 1 2224 0
	movl	PL_lex_defer(%rip), %eax	# PL_lex_defer, PL_lex_defer.539
	movl	%eax, PL_lex_state(%rip)	# PL_lex_defer.539, PL_lex_state
	.loc 1 2225 0
	movl	PL_lex_expect(%rip), %eax	# PL_lex_expect, PL_lex_expect.540
	movl	%eax, PL_expect(%rip)	# PL_lex_expect.540, PL_expect
	.loc 1 2226 0
	movl	$10, PL_lex_defer(%rip)	#, PL_lex_defer
.L586:
	.loc 1 2232 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.541
	cltq
	movl	PL_nexttype(,%rax,4), %eax	# PL_nexttype, D.28894
	jmp	.L2138	#
.L585:
	.loc 1 2243 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.542
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.543
	cmpq	%rax, %rdx	# PL_bufend.543, PL_bufptr.542
	je	.L587	#,
	.loc 1 2243 0 is_stmt 0 discriminator 1
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.544
	addq	$1, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_375, D.28896
	cmpb	$69, %al	#, D.28896
	jne	.L588	#,
.L587:
.LBB37:
	.loc 1 2247 0 is_stmt 1
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.545
	testl	%eax, %eax	# PL_lex_casemods.545
	je	.L589	#,
	.loc 1 2248 0
	movq	PL_lex_casestack(%rip), %rdx	# PL_lex_casestack, PL_lex_casestack.546
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.547
	subl	$1, %eax	#, PL_lex_casemods.548
	movl	%eax, PL_lex_casemods(%rip)	# PL_lex_casemods.548, PL_lex_casemods
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.549
	cltq
	addq	%rdx, %rax	# PL_lex_casestack.546, D.28895
	movzbl	(%rax), %eax	# *_444, tmp3334
	movb	%al, -1440(%rbp)	# tmp3334, oldmod
	.loc 1 2249 0
	movq	PL_lex_casestack(%rip), %rdx	# PL_lex_casestack, PL_lex_casestack.550
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.551
	cltq
	addq	%rdx, %rax	# PL_lex_casestack.550, D.28895
	movb	$0, (%rax)	#, *_449
	.loc 1 2251 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.552
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.553
	cmpq	%rax, %rdx	# PL_bufend.553, PL_bufptr.552
	je	.L590	#,
	.loc 1 2252 0
	cmpb	$76, -1440(%rbp)	#, oldmod
	je	.L591	#,
	.loc 1 2252 0 is_stmt 0 discriminator 1
	cmpb	$85, -1440(%rbp)	#, oldmod
	je	.L591	#,
	cmpb	$81, -1440(%rbp)	#, oldmod
	jne	.L590	#,
.L591:
	.loc 1 2253 0 is_stmt 1
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.554
	addq	$2, %rax	#, PL_bufptr.555
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.555, PL_bufptr
	.loc 1 2254 0
	movl	$3, PL_lex_state(%rip)	#, PL_lex_state
.L590:
	.loc 1 2256 0
	movl	$41, %eax	#, D.28894
	jmp	.L2138	#
.L589:
	.loc 1 2258 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.556
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.557
	cmpq	%rax, %rdx	# PL_bufend.557, PL_bufptr.556
	je	.L592	#,
	.loc 1 2259 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.558
	addq	$2, %rax	#, PL_bufptr.559
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.559, PL_bufptr
.L592:
	.loc 1 2260 0
	movl	$3, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 2261 0
	call	Perl_yylex	#
	jmp	.L2138	#
.L588:
.LBE37:
	.loc 1 2266 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.560
	leaq	1(%rax), %rbx	#, s
	.loc 1 2267 0
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_379, D.28896
	cmpb	$92, %al	#, D.28896
	jne	.L593	#,
	.loc 1 2267 0 is_stmt 0 discriminator 1
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_381, D.28896
	cmpb	$69, %al	#, D.28896
	jne	.L593	#,
	.loc 1 2268 0 is_stmt 1
	leaq	3(%rbx), %rax	#, PL_bufptr.561
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.561, PL_bufptr
	.loc 1 2269 0
	movl	$3, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 2270 0
	call	Perl_yylex	#
	jmp	.L2138	#
.L593:
	.loc 1 2273 0
	movl	$3, %edx	#,
	movl	$.LC48, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strncmp	#
	testl	%eax, %eax	# D.28894
	je	.L594	#,
	.loc 1 2273 0 is_stmt 0 discriminator 1
	movl	$3, %edx	#,
	movl	$.LC49, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strncmp	#
	testl	%eax, %eax	# D.28894
	jne	.L595	#,
.L594:
	.loc 1 2274 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_378, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	movzbl	2(%rbx), %eax	# MEM[(char *)s_378 + 2B], D.28896
	movb	%al, (%rbx)	# D.28896, *s_378
	leaq	2(%rbx), %rax	#, D.28895
	movl	%r13d, %edx	# tmp, D.28896
	movb	%dl, (%rax)	# D.28896, *_390
.L595:
	.loc 1 2275 0
	movzbl	(%rbx), %eax	# *s_378, D.28896
	cmpb	$76, %al	#, D.28896
	je	.L596	#,
	.loc 1 2275 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_378, D.28896
	cmpb	$85, %al	#, D.28896
	jne	.L597	#,
.L596:
	.loc 1 2276 0 is_stmt 1 discriminator 1
	movq	PL_lex_casestack(%rip), %rax	# PL_lex_casestack, PL_lex_casestack.562
	movl	$76, %esi	#,
	movq	%rax, %rdi	# PL_lex_casestack.562,
	call	strchr	#
	.loc 1 2275 0 discriminator 1
	testq	%rax, %rax	# D.28895
	jne	.L598	#,
	.loc 1 2276 0
	movq	PL_lex_casestack(%rip), %rax	# PL_lex_casestack, PL_lex_casestack.563
	movl	$85, %esi	#,
	movq	%rax, %rdi	# PL_lex_casestack.563,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	je	.L597	#,
.L598:
	.loc 1 2277 0
	movq	PL_lex_casestack(%rip), %rdx	# PL_lex_casestack, PL_lex_casestack.564
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.565
	subl	$1, %eax	#, PL_lex_casemods.566
	movl	%eax, PL_lex_casemods(%rip)	# PL_lex_casemods.566, PL_lex_casemods
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.567
	cltq
	addq	%rdx, %rax	# PL_lex_casestack.564, D.28895
	movb	$0, (%rax)	#, *_403
	.loc 1 2278 0
	movl	$41, %eax	#, D.28894
	jmp	.L2138	#
.L597:
	.loc 1 2280 0
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.568
	cmpl	$10, %eax	#, PL_lex_casemods.568
	jle	.L599	#,
	.loc 1 2281 0
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.569
	addl	$2, %eax	#, D.28894
	movslq	%eax, %rdx	# D.28894, D.28898
	movq	PL_lex_casestack(%rip), %rax	# PL_lex_casestack, PL_lex_casestack.570
	movq	%rdx, %rsi	# D.28898,
	movq	%rax, %rdi	# PL_lex_casestack.570,
	call	Perl_safesysrealloc	#
	movq	%rax, PL_lex_casestack(%rip)	# PL_lex_casestack.571, PL_lex_casestack
.L599:
	.loc 1 2282 0
	movq	PL_lex_casestack(%rip), %rcx	# PL_lex_casestack, PL_lex_casestack.572
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.573
	leal	1(%rax), %edx	#, PL_lex_casemods.575
	movl	%edx, PL_lex_casemods(%rip)	# PL_lex_casemods.575, PL_lex_casemods
	cltq
	leaq	(%rcx,%rax), %rdx	#, D.28895
	movzbl	(%rbx), %eax	# *s_378, D.28896
	movb	%al, (%rdx)	# D.28896, *_416
	.loc 1 2283 0
	movq	PL_lex_casestack(%rip), %rdx	# PL_lex_casestack, PL_lex_casestack.576
	movl	PL_lex_casemods(%rip), %eax	# PL_lex_casemods, PL_lex_casemods.577
	cltq
	addq	%rdx, %rax	# PL_lex_casestack.576, D.28895
	movb	$0, (%rax)	#, *_421
	.loc 1 2284 0
	movl	$3, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 2285 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.578
	cltq
	movl	$0, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.578_422].ival
	.loc 1 2286 0
	movl	$40, %edi	#,
	call	S_force_next	#
	.loc 1 2287 0
	movzbl	(%rbx), %eax	# *s_378, D.28896
	cmpb	$108, %al	#, D.28896
	jne	.L600	#,
	.loc 1 2288 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.579
	cltq
	movl	$121, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.579_424].ival
	jmp	.L601	#
.L600:
	.loc 1 2289 0
	movzbl	(%rbx), %eax	# *s_378, D.28896
	cmpb	$117, %al	#, D.28896
	jne	.L602	#,
	.loc 1 2290 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.580
	cltq
	movl	$120, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.580_426].ival
	jmp	.L601	#
.L602:
	.loc 1 2291 0
	movzbl	(%rbx), %eax	# *s_378, D.28896
	cmpb	$76, %al	#, D.28896
	jne	.L603	#,
	.loc 1 2292 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.581
	cltq
	movl	$123, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.581_428].ival
	jmp	.L601	#
.L603:
	.loc 1 2293 0
	movzbl	(%rbx), %eax	# *s_378, D.28896
	cmpb	$85, %al	#, D.28896
	jne	.L604	#,
	.loc 1 2294 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.582
	cltq
	movl	$122, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.582_430].ival
	jmp	.L601	#
.L604:
	.loc 1 2295 0
	movzbl	(%rbx), %eax	# *s_378, D.28896
	cmpb	$81, %al	#, D.28896
	jne	.L605	#,
	.loc 1 2296 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.583
	cltq
	movl	$124, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.583_432].ival
	jmp	.L601	#
.L605:
	.loc 1 2298 0
	movl	$.LC50, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L601:
	.loc 1 2299 0
	leaq	1(%rbx), %rax	#, PL_bufptr.584
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.584, PL_bufptr
	.loc 1 2301 0
	movl	$284, %edi	#,
	call	S_force_next	#
	.loc 1 2302 0
	movl	PL_lex_starts(%rip), %eax	# PL_lex_starts, PL_lex_starts.585
	testl	%eax, %eax	# PL_lex_starts.585
	je	.L606	#,
	.loc 1 2303 0
	movq	PL_bufptr(%rip), %rbx	# PL_bufptr, s
	.loc 1 2304 0
	movl	$0, PL_lex_starts(%rip)	#, PL_lex_starts
	.loc 1 2305 0
	movl	$66, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$290, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L606:
	.loc 1 2308 0
	call	Perl_yylex	#
	jmp	.L2138	#
.L584:
	.loc 1 2312 0
	call	S_sublex_push	#
	jmp	.L2138	#
.L583:
	.loc 1 2315 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.586
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.587
	cmpq	%rax, %rdx	# PL_bufend.587, PL_bufptr.586
	jne	.L607	#,
	.loc 1 2316 0
	call	S_sublex_done	#
	jmp	.L2138	#
.L607:
	.loc 1 2319 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 2320 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.588
	movzbl	(%rax), %eax	# *PL_bufptr.588_464, D.28896
	cmpb	$64, %al	#, D.28896
	sete	%al	#, D.28899
	movzbl	%al, %eax	# D.28899, PL_lex_dojoin.589
	movl	%eax, PL_lex_dojoin(%rip)	# PL_lex_dojoin.589, PL_lex_dojoin
	.loc 1 2321 0
	movl	$9, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 2322 0
	movl	PL_lex_dojoin(%rip), %eax	# PL_lex_dojoin, PL_lex_dojoin.590
	testl	%eax, %eax	# PL_lex_dojoin.590
	je	.L608	#,
	.loc 1 2323 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.591
	cltq
	movl	$0, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.591_469].ival
	.loc 1 2324 0
	movl	$44, %edi	#,
	call	S_force_next	#
	.loc 1 2330 0
	movl	$36, %esi	#,
	movl	$.LC51, %edi	#,
	call	S_force_ident	#
	.loc 1 2332 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.592
	cltq
	movl	$0, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.592_470].ival
	.loc 1 2333 0
	movl	$36, %edi	#,
	call	S_force_next	#
	.loc 1 2334 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.593
	cltq
	movl	$0, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.593_471].ival
	.loc 1 2335 0
	movl	$40, %edi	#,
	call	S_force_next	#
	.loc 1 2336 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.594
	cltq
	movl	$140, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.594_472].ival
	.loc 1 2337 0
	movl	$284, %edi	#,
	call	S_force_next	#
.L608:
	.loc 1 2339 0
	movl	PL_lex_starts(%rip), %eax	# PL_lex_starts, PL_lex_starts.595
	leal	1(%rax), %edx	#, PL_lex_starts.597
	movl	%edx, PL_lex_starts(%rip)	# PL_lex_starts.597, PL_lex_starts
	testl	%eax, %eax	# PL_lex_starts.596
	je	.L609	#,
	.loc 1 2340 0
	movq	PL_bufptr(%rip), %rbx	# PL_bufptr, s
	.loc 1 2341 0
	movl	$66, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$290, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L609:
	.loc 1 2343 0
	call	Perl_yylex	#
	jmp	.L2138	#
.L581:
	.loc 1 2346 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.598
	movq	%rax, %rdi	# PL_bufptr.598,
	call	S_intuit_more	#
	testl	%eax, %eax	# D.28894
	je	.L582	#,
	.loc 1 2347 0
	movl	$9, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 2348 0
	jmp	.L576	#
.L582:
	.loc 1 2353 0
	movl	PL_lex_dojoin(%rip), %eax	# PL_lex_dojoin, PL_lex_dojoin.599
	testl	%eax, %eax	# PL_lex_dojoin.599
	je	.L610	#,
	.loc 1 2354 0
	movl	$0, PL_lex_dojoin(%rip)	#, PL_lex_dojoin
	.loc 1 2355 0
	movl	$3, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 2356 0
	movl	$41, %eax	#, D.28894
	jmp	.L2138	#
.L610:
	.loc 1 2358 0
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.600
	cmpl	$33, %eax	#, PL_lex_inwhat.600
	jne	.L580	#,
	.loc 1 2358 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rdx	# PL_linestr, PL_linestr.601
	movq	PL_lex_repl(%rip), %rax	# PL_lex_repl, PL_lex_repl.602
	cmpq	%rax, %rdx	# PL_lex_repl.602, PL_linestr.601
	jne	.L580	#,
	.loc 1 2359 0 is_stmt 1
	movq	PL_lex_repl(%rip), %rax	# PL_lex_repl, PL_lex_repl.603
	movl	12(%rax), %eax	# PL_lex_repl.603_486->sv_flags, D.28900
	andl	$1073741824, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L580	#,
	.loc 1 2361 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.604
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.605
	cmpq	%rax, %rdx	# PL_bufend.605, PL_bufptr.604
	je	.L611	#,
	.loc 1 2362 0
	movl	$.LC52, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L611:
	.loc 1 2363 0
	movq	$0, PL_lex_repl(%rip)	#, PL_lex_repl
.L580:
	.loc 1 2371 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.606
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.607
	cmpq	%rax, %rdx	# PL_bufend.607, PL_bufptr.606
	jne	.L612	#,
	.loc 1 2372 0
	call	S_sublex_done	#
	jmp	.L2138	#
.L612:
	.loc 1 2374 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.608
	movq	(%rax), %rax	# PL_linestr.608_494->sv_any, D.28901
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_495].xiv_iv, D.28902
	cmpq	$39, %rax	#, D.28902
	jne	.L613	#,
.LBB38:
	.loc 1 2375 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.609
	movq	%rax, %rdi	# PL_linestr.609,
	call	Perl_newSVsv	#
	movq	%rax, -1352(%rbp)	# tmp3345, sv
	.loc 1 2376 0
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.610
	testq	%rax, %rax	# PL_lex_inpat.610
	jne	.L614	#,
	.loc 1 2377 0
	movq	-1352(%rbp), %rax	# sv, tmp3346
	movq	%rax, %rdi	# tmp3346,
	call	S_tokeq	#
	movq	%rax, -1352(%rbp)	# tmp3347, sv
	jmp	.L615	#
.L614:
	.loc 1 2378 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.611
	andl	$65536, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L615	#,
	.loc 1 2379 0
	movq	-1352(%rbp), %rdx	# sv, tmp3348
	movq	-1352(%rbp), %rax	# sv, tmp3349
	movl	$.LC16, %r9d	#,
	movq	%rdx, %r8	# tmp3348,
	movq	%rax, %rcx	# tmp3349,
	movl	$.LC36, %edx	#,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	S_new_constant	#
	movq	%rax, -1352(%rbp)	# tmp3350, sv
.L615:
	.loc 1 2380 0 discriminator 1
	movq	-1352(%rbp), %rax	# sv, tmp3351
	movq	%rax, %rdx	# tmp3351,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.28903, PL_yylval.opval
	.loc 1 2381 0 discriminator 1
	movq	PL_bufend(%rip), %rbx	# PL_bufend, s
.LBE38:
	jmp	.L616	#
.L613:
	.loc 1 2384 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.612
	movq	%rax, %rdi	# PL_bufptr.612,
	call	S_scan_const	#
	movq	%rax, %rbx	#, s
	.loc 1 2385 0
	movzbl	(%rbx), %eax	# *s_507, D.28896
	cmpb	$92, %al	#, D.28896
	jne	.L617	#,
	.loc 1 2386 0
	movl	$8, PL_lex_state(%rip)	#, PL_lex_state
	jmp	.L616	#
.L617:
	.loc 1 2388 0
	movl	$6, PL_lex_state(%rip)	#, PL_lex_state
.L616:
	.loc 1 2391 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.613
	cmpq	%rax, %rbx	# PL_bufptr.613, s
	je	.L618	#,
	.loc 1 2392 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.614
	cltq
	movq	PL_yylval(%rip), %rdx	# PL_yylval, tmp3353
	movq	%rdx, PL_nextval(,%rax,8)	# tmp3353, PL_nextval
	.loc 1 2393 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 2394 0
	movl	$260, %edi	#,
	call	S_force_next	#
	.loc 1 2395 0
	movl	PL_lex_starts(%rip), %eax	# PL_lex_starts, PL_lex_starts.615
	leal	1(%rax), %edx	#, PL_lex_starts.617
	movl	%edx, PL_lex_starts(%rip)	# PL_lex_starts.617, PL_lex_starts
	testl	%eax, %eax	# PL_lex_starts.616
	je	.L619	#,
	.loc 1 2396 0
	movl	$66, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$290, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L619:
	.loc 1 2398 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	.loc 1 2399 0
	call	Perl_yylex	#
	jmp	.L2138	#
.L618:
	.loc 1 2403 0
	call	Perl_yylex	#
	jmp	.L2138	#
.L579:
	.loc 1 2405 0
	movl	$10, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 2406 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.618
	movq	%rax, %rdi	# PL_bufptr.618,
	call	S_scan_formline	#
	movq	%rax, %rbx	#, s
	.loc 1 2407 0
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.619
	testl	%eax, %eax	# PL_lex_formbrack.619
	jne	.L620	#,
	.loc 1 2408 0
	jmp	.L621	#
.L620:
	.loc 1 2409 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$59, %eax	#, D.28894
	jmp	.L2138	#
.L576:
	.loc 1 2412 0
	movq	PL_bufptr(%rip), %rbx	# PL_bufptr, s
	.loc 1 2413 0
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.620
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.620, PL_oldoldbufptr
	.loc 1 2414 0
	movq	%rbx, PL_oldbufptr(%rip)	# s, PL_oldbufptr
.L622:
	.loc 1 2421 0
	movzbl	(%rbx), %eax	# *s_2, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	cmpl	$126, %eax	#, D.28894
	ja	.L623	#,
	movl	%eax, %eax	# D.28894, tmp3354
	movq	.L625(,%rax,8), %rax	#, tmp3355
	jmp	*%rax	# tmp3355
	.section	.rodata
	.align 8
	.align 4
.L625:
	.quad	.L624
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L2141
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L627
	.quad	.L628
	.quad	.L627
	.quad	.L627
	.quad	.L627
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L2141
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L623
	.quad	.L627
	.quad	.L629
	.quad	.L630
	.quad	.L628
	.quad	.L631
	.quad	.L632
	.quad	.L633
	.quad	.L634
	.quad	.L635
	.quad	.L636
	.quad	.L637
	.quad	.L638
	.quad	.L639
	.quad	.L640
	.quad	.L641
	.quad	.L642
	.quad	.L643
	.quad	.L643
	.quad	.L643
	.quad	.L643
	.quad	.L643
	.quad	.L643
	.quad	.L643
	.quad	.L643
	.quad	.L643
	.quad	.L643
	.quad	.L644
	.quad	.L645
	.quad	.L646
	.quad	.L647
	.quad	.L648
	.quad	.L642
	.quad	.L649
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L651
	.quad	.L652
	.quad	.L653
	.quad	.L654
	.quad	.L650
	.quad	.L655
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L650
	.quad	.L656
	.quad	.L650
	.quad	.L657
	.quad	.L650
	.quad	.L650
	.quad	.L658
	.quad	.L659
	.quad	.L621
	.quad	.L639
	.text
.L623:
	.loc 1 2423 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.622
	movzbl	37(%rax), %eax	# PL_curcop.622_525->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L660	#,
	.loc 1 2423 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.623
	testq	%rax, %rax	# PL_linestr.623
	je	.L661	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.624
	movl	12(%rax), %eax	# PL_linestr.624_530->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L661	#,
	.loc 1 2423 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.625
	movzbl	37(%rax), %eax	# PL_curcop.625_533->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L662	#,
.L661:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.626
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L660	#,
.L662:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_2], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L663	#,
.L660:
	movzbl	(%rbx), %eax	# *s_2, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L664	#,
	movzbl	(%rbx), %eax	# *s_2, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L665	#,
.L664:
	.loc 1 2423 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_2, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L666	#,
	.loc 1 2423 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L665	#,
.L666:
	.loc 1 2423 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_2, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L667	#,
.L665:
	.loc 1 2423 0 discriminator 1
	movl	$1, %eax	#, iftmp.627
	jmp	.L668	#
.L667:
	.loc 1 2423 0 discriminator 3
	movl	$0, %eax	#, iftmp.627
.L668:
	.loc 1 2423 0 discriminator 4
	andl	$1, %eax	#, iftmp.621
	jmp	.L669	#
.L663:
	.loc 1 2423 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L670	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L670	#,
	.loc 1 2423 0 discriminator 3
	movl	$1, %eax	#, iftmp.628
	jmp	.L671	#
.L670:
	.loc 1 2423 0 discriminator 2
	movl	$0, %eax	#, iftmp.628
.L671:
	.loc 1 2423 0 discriminator 4
	andl	$1, %eax	#, iftmp.621
.L669:
	.loc 1 2423 0 discriminator 3
	testb	%al, %al	# iftmp.621
	je	.L672	#,
	.loc 1 2424 0 is_stmt 1
	jmp	.L650	#
.L672:
	.loc 1 2425 0
	movzbl	(%rbx), %eax	# *s_2, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	movzbl	%al, %eax	# D.28894, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC53, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 2428 0
	jmp	.L2141	#
.L624:
	.loc 1 2430 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.629
	testq	%rax, %rax	# PL_rsfp.629
	jne	.L674	#,
	.loc 1 2431 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	.loc 1 2432 0
	movq	$0, PL_last_lop(%rip)	#, PL_last_lop
	.loc 1 2433 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.630
	testl	%eax, %eax	# PL_lex_brackets.630
	je	.L675	#,
	.loc 1 2434 0
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.631
	testl	%eax, %eax	# PL_lex_formbrack.631
	je	.L676	#,
	.loc 1 2435 0
	movl	$.LC54, %edi	#,
	call	Perl_yyerror	#
	jmp	.L675	#
.L676:
	.loc 1 2437 0
	movl	$.LC55, %edi	#,
	call	Perl_yyerror	#
.L675:
	.loc 1 2442 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$0, %eax	#, D.28894
	jmp	.L2138	#
.L674:
	.loc 1 2444 0
	movq	%rbx, %rax	# s, s.632
	leaq	1(%rax), %rbx	#, s
	movq	PL_bufend(%rip), %rdx	# PL_bufend, PL_bufend.633
	cmpq	%rdx, %rax	# PL_bufend.633, s.632
	jae	.L677	#,
	.loc 1 2445 0
	jmp	.L622	#
.L677:
	.loc 1 2446 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	.loc 1 2447 0
	movq	$0, PL_last_lop(%rip)	#, PL_last_lop
	.loc 1 2448 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.634
	testl	%eax, %eax	# PL_in_eval.634
	jne	.L678	#,
	.loc 1 2448 0 is_stmt 0 discriminator 1
	movzbl	PL_preambled(%rip), %eax	# PL_preambled, PL_preambled.635
	testb	%al, %al	# PL_preambled.635
	jne	.L678	#,
	.loc 1 2449 0 is_stmt 1
	movb	$1, PL_preambled(%rip)	#, PL_preambled
	.loc 1 2450 0
	call	S_incl_perldb	#
	movq	%rax, %rdx	#, D.28895
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.636
	movq	%rdx, %rsi	# D.28895,
	movq	%rax, %rdi	# PL_linestr.636,
	call	Perl_sv_setpv	#
	.loc 1 2451 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.637
	movq	(%rax), %rax	# PL_linestr.637_567->sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_568].xpv_cur, D.28898
	testq	%rax, %rax	# D.28898
	je	.L679	#,
	.loc 1 2452 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.638
	movl	$2, %ecx	#,
	movl	$1, %edx	#,
	movl	$.LC11, %esi	#,
	movq	%rax, %rdi	# PL_linestr.638,
	call	Perl_sv_catpvn_flags	#
.L679:
	.loc 1 2453 0
	movq	PL_preambleav(%rip), %rax	# PL_preambleav, PL_preambleav.639
	testq	%rax, %rax	# PL_preambleav.639
	je	.L680	#,
	.loc 1 2454 0
	jmp	.L681	#
.L682:
.LBB39:
	.loc 1 2455 0
	movq	PL_preambleav(%rip), %rax	# PL_preambleav, PL_preambleav.640
	movq	%rax, %rdi	# PL_preambleav.640,
	call	Perl_av_shift	#
	movq	%rax, -1192(%rbp)	# tmp3356, tmpsv
	.loc 1 2456 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.641
	movq	-1192(%rbp), %rcx	# tmpsv, tmp3357
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp3357,
	movq	%rax, %rdi	# PL_linestr.641,
	call	Perl_sv_catsv_flags	#
	.loc 1 2457 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.642
	movl	$2, %ecx	#,
	movl	$1, %edx	#,
	movl	$.LC11, %esi	#,
	movq	%rax, %rdi	# PL_linestr.642,
	call	Perl_sv_catpvn_flags	#
	.loc 1 2458 0
	movq	-1192(%rbp), %rax	# tmpsv, tmp3358
	movq	%rax, %rdi	# tmp3358,
	call	Perl_sv_free	#
.L681:
.LBE39:
	.loc 1 2454 0 discriminator 1
	movq	PL_preambleav(%rip), %rax	# PL_preambleav, PL_preambleav.643
	movq	(%rax), %rax	# PL_preambleav.643_572->sv_any, D.28905
	movq	8(%rax), %rax	# _573->xav_fill, D.28902
	testq	%rax, %rax	# D.28902
	jns	.L682	#,
	.loc 1 2460 0
	movq	PL_preambleav(%rip), %rax	# PL_preambleav, PL_preambleav.644
	movq	%rax, %rdi	# PL_preambleav.644,
	call	Perl_sv_free	#
	.loc 1 2461 0
	movq	$0, PL_preambleav(%rip)	#, PL_preambleav
.L680:
	.loc 1 2463 0
	movzbl	PL_minus_n(%rip), %eax	# PL_minus_n, PL_minus_n.645
	testb	%al, %al	# PL_minus_n.645
	jne	.L683	#,
	.loc 1 2463 0 is_stmt 0 discriminator 1
	movzbl	PL_minus_p(%rip), %eax	# PL_minus_p, PL_minus_p.646
	testb	%al, %al	# PL_minus_p.646
	je	.L684	#,
.L683:
	.loc 1 2464 0 is_stmt 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.647
	movl	$.LC56, %esi	#,
	movq	%rax, %rdi	# PL_linestr.647,
	call	Perl_sv_catpv	#
	.loc 1 2465 0
	movzbl	PL_minus_l(%rip), %eax	# PL_minus_l, PL_minus_l.648
	testb	%al, %al	# PL_minus_l.648
	je	.L685	#,
	.loc 1 2466 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.649
	movl	$.LC57, %esi	#,
	movq	%rax, %rdi	# PL_linestr.649,
	call	Perl_sv_catpv	#
.L685:
	.loc 1 2467 0
	movzbl	PL_minus_a(%rip), %eax	# PL_minus_a, PL_minus_a.650
	testb	%al, %al	# PL_minus_a.650
	je	.L684	#,
	.loc 1 2468 0
	movzbl	PL_minus_F(%rip), %eax	# PL_minus_F, PL_minus_F.651
	testb	%al, %al	# PL_minus_F.651
	je	.L686	#,
	.loc 1 2469 0
	movq	PL_splitstr(%rip), %rax	# PL_splitstr, PL_splitstr.652
	movzbl	(%rax), %eax	# *PL_splitstr.652_587, D.28896
	cmpb	$47, %al	#, D.28896
	je	.L687	#,
	.loc 1 2469 0 is_stmt 0 discriminator 1
	movq	PL_splitstr(%rip), %rax	# PL_splitstr, PL_splitstr.653
	movzbl	(%rax), %eax	# *PL_splitstr.653_589, D.28896
	cmpb	$39, %al	#, D.28896
	je	.L687	#,
	.loc 1 2470 0 is_stmt 1
	movq	PL_splitstr(%rip), %rax	# PL_splitstr, PL_splitstr.654
	movzbl	(%rax), %eax	# *PL_splitstr.654_591, D.28896
	cmpb	$34, %al	#, D.28896
	jne	.L688	#,
.L687:
	.loc 1 2471 0
	movq	PL_splitstr(%rip), %rax	# PL_splitstr, PL_splitstr.655
	movzbl	(%rax), %eax	# *PL_splitstr.655_593, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	movq	PL_splitstr(%rip), %rdx	# PL_splitstr, PL_splitstr.656
	addq	$1, %rdx	#, D.28906
	movl	%eax, %esi	# D.28894,
	movq	%rdx, %rdi	# D.28906,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	je	.L688	#,
	.loc 1 2472 0
	movq	PL_splitstr(%rip), %rdx	# PL_splitstr, PL_splitstr.657
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.658
	movl	$.LC58, %esi	#,
	movq	%rax, %rdi	# PL_linestr.658,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L684	#
.L688:
	.loc 1 2479 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.659
	movl	$2, %ecx	#,
	movl	$15, %edx	#,
	movl	$.LC59, %esi	#,
	movq	%rax, %rdi	# PL_linestr.659,
	call	Perl_sv_catpvn_flags	#
	.loc 1 2480 0
	movq	PL_splitstr(%rip), %rbx	# PL_splitstr, s
.L691:
	.loc 1 2483 0
	movzbl	(%rbx), %eax	# *s_3, D.28896
	cmpb	$92, %al	#, D.28896
	jne	.L690	#,
	.loc 1 2484 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.660
	movl	$2, %ecx	#,
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# s,
	movq	%rax, %rdi	# PL_linestr.660,
	call	Perl_sv_catpvn_flags	#
.L690:
	.loc 1 2485 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.661
	movl	$2, %ecx	#,
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# s,
	movq	%rax, %rdi	# PL_linestr.661,
	call	Perl_sv_catpvn_flags	#
	.loc 1 2486 0
	movq	%rbx, %rax	# s, s.662
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.662_606, D.28896
	testb	%al, %al	# D.28896
	jne	.L691	#,
	.loc 1 2490 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.663
	movl	$2, %ecx	#,
	movl	$2, %edx	#,
	movl	$.LC60, %esi	#,
	movq	%rax, %rdi	# PL_linestr.663,
	call	Perl_sv_catpvn_flags	#
	jmp	.L684	#
.L686:
	.loc 1 2494 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.664
	movl	$.LC61, %esi	#,
	movq	%rax, %rdi	# PL_linestr.664,
	call	Perl_sv_catpv	#
.L684:
	.loc 1 2497 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.665
	movl	$2, %ecx	#,
	movl	$1, %edx	#,
	movl	$.LC62, %esi	#,
	movq	%rax, %rdi	# PL_linestr.665,
	call	Perl_sv_catpvn_flags	#
	.loc 1 2498 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.666
	movq	(%rax), %rax	# PL_linestr.666_612->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_613].xpv_pv, PL_linestart.667
	movq	%rax, PL_linestart(%rip)	# PL_linestart.667, PL_linestart
	movq	PL_linestart(%rip), %rbx	# PL_linestart, s
	movq	%rbx, PL_oldbufptr(%rip)	# s, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.668
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.668, PL_oldoldbufptr
	.loc 1 2499 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.669
	movq	(%rax), %rax	# PL_linestr.669_617->sv_any, D.28901
	movq	(%rax), %rdx	# MEM[(struct XPV *)_618].xpv_pv, D.28895
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.670
	movq	(%rax), %rax	# PL_linestr.670_620->sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_621].xpv_cur, D.28898
	addq	%rdx, %rax	# D.28895, PL_bufend.671
	movq	%rax, PL_bufend(%rip)	# PL_bufend.671, PL_bufend
	.loc 1 2500 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.672
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.672, PL_last_lop
	.loc 1 2501 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.673
	testl	%eax, %eax	# PL_perldb.673
	je	.L692	#,
	.loc 1 2501 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.674
	andl	$2, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L692	#,
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.675
	movq	PL_debstash(%rip), %rax	# PL_debstash, PL_debstash.676
	cmpq	%rax, %rdx	# PL_debstash.676, PL_curstash.675
	je	.L692	#,
.LBB40:
	.loc 1 2502 0 is_stmt 1
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -1184(%rbp)	# tmp3359, sv
	.loc 1 2504 0
	movq	-1184(%rbp), %rax	# sv, tmp3360
	movl	$7, %esi	#,
	movq	%rax, %rdi	# tmp3360,
	call	Perl_sv_upgrade	#
	.loc 1 2505 0
	movq	PL_linestr(%rip), %rcx	# PL_linestr, PL_linestr.677
	movq	-1184(%rbp), %rax	# sv, tmp3361
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# PL_linestr.677,
	movq	%rax, %rdi	# tmp3361,
	call	Perl_sv_setsv_flags	#
	.loc 1 2506 0
	movq	-1184(%rbp), %rax	# sv, tmp3362
	movl	12(%rax), %eax	# sv_630->sv_flags, D.28900
	andl	$2097152, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L694	#,
	.loc 1 2506 0 is_stmt 0 discriminator 1
	movq	-1184(%rbp), %rax	# sv, tmp3363
	movq	%rax, %rdi	# tmp3363,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.28894
	je	.L694	#,
	.loc 1 2506 0
	nop
.L694:
	.loc 1 2506 0 discriminator 3
	movq	-1184(%rbp), %rax	# sv, tmp3364
	movl	12(%rax), %eax	# sv_630->sv_flags, D.28900
	orl	$16842752, %eax	#, D.28900
	movl	%eax, %edx	# D.28900, D.28900
	movq	-1184(%rbp), %rax	# sv, tmp3365
	movl	%edx, 12(%rax)	# D.28900, sv_630->sv_flags
	.loc 1 2507 0 is_stmt 1 discriminator 3
	movq	-1184(%rbp), %rax	# sv, tmp3366
	movq	(%rax), %rax	# sv_630->sv_any, D.28901
	movq	$0, 24(%rax)	#, MEM[(struct XPVIV *)_639].xiv_iv
	.loc 1 2508 0 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.679
	movl	72(%rax), %eax	# PL_curcop.679_640->cop_line, D.28900
	movl	%eax, %ecx	# D.28900, D.28894
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.681
	movq	56(%rax), %rax	# PL_curcop.681_643->cop_filegv, D.28907
	testq	%rax, %rax	# D.28907
	je	.L695	#,
	.loc 1 2508 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.682
	movq	56(%rax), %rax	# PL_curcop.682_645->cop_filegv, D.28907
	movq	(%rax), %rax	# _646->sv_any, D.28908
	movq	56(%rax), %rax	# _647->xgv_gp, D.28909
	movq	32(%rax), %rax	# _648->gp_av, iftmp.680
	jmp	.L696	#
.L695:
	.loc 1 2508 0 discriminator 2
	movl	$0, %eax	#, iftmp.680
.L696:
	.loc 1 2508 0 discriminator 3
	movq	-1184(%rbp), %rdx	# sv, tmp3367
	movl	%ecx, %esi	# D.28894,
	movq	%rax, %rdi	# iftmp.680,
	call	Perl_av_store	#
.LBE40:
	.loc 1 2510 0 is_stmt 1 discriminator 3
	jmp	.L622	#
.L692:
	.loc 1 2510 0 is_stmt 0
	jmp	.L622	#
.L678:
	.loc 1 2513 0 is_stmt 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.683
	testq	%rax, %rax	# PL_rsfp.683
	setne	%al	#, D.28899
	movb	%al, -1441(%rbp)	# D.28899, bof
	.loc 1 2514 0
	movq	PL_rsfp(%rip), %rcx	# PL_rsfp, PL_rsfp.684
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.685
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# PL_rsfp.684,
	movq	%rax, %rdi	# PL_linestr.685,
	call	S_filter_gets	#
	movq	%rax, %rbx	#, s
	testq	%rbx, %rbx	# s
	jne	.L697	#,
	jmp	.L673	#
.L2141:
	.loc 1 2428 0
	nop
.L673:
	.loc 1 2516 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.686
	testq	%rax, %rax	# PL_rsfp.686
	je	.L698	#,
	.loc 1 2517 0
	movzbl	PL_preprocess(%rip), %eax	# PL_preprocess, PL_preprocess.687
	testb	%al, %al	# PL_preprocess.687
	je	.L699	#,
	.loc 1 2517 0 is_stmt 0 discriminator 1
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.688
	testl	%eax, %eax	# PL_in_eval.688
	jne	.L699	#,
	.loc 1 2518 0 is_stmt 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.689
	movq	%rax, %rdi	# PL_rsfp.689,
	call	Perl_my_pclose	#
	jmp	.L700	#
.L699:
	.loc 1 2519 0
	call	Perl_PerlIO_stdin	#
	movq	PL_rsfp(%rip), %rdx	# PL_rsfp, PL_rsfp.690
	cmpq	%rdx, %rax	# PL_rsfp.690, D.28924
	jne	.L701	#,
	.loc 1 2520 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.691
	movq	%rax, %rdi	# PL_rsfp.691,
	call	Perl_PerlIO_clearerr	#
	jmp	.L700	#
.L701:
	.loc 1 2522 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.692
	movq	%rax, %rdi	# PL_rsfp.692,
	call	Perl_PerlIO_close	#
.L700:
	.loc 1 2523 0
	movq	$0, PL_rsfp(%rip)	#, PL_rsfp
	.loc 1 2524 0
	movb	$0, PL_doextract(%rip)	#, PL_doextract
.L698:
	.loc 1 2526 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.693
	testl	%eax, %eax	# PL_in_eval.693
	jne	.L702	#,
	.loc 1 2526 0 is_stmt 0 discriminator 1
	movzbl	PL_minus_n(%rip), %eax	# PL_minus_n, PL_minus_n.694
	testb	%al, %al	# PL_minus_n.694
	jne	.L703	#,
	movzbl	PL_minus_p(%rip), %eax	# PL_minus_p, PL_minus_p.695
	testb	%al, %al	# PL_minus_p.695
	je	.L702	#,
.L703:
	.loc 1 2528 0 is_stmt 1
	movzbl	PL_minus_p(%rip), %eax	# PL_minus_p, PL_minus_p.697
	.loc 1 2527 0
	testb	%al, %al	# PL_minus_p.697
	je	.L704	#,
	.loc 1 2527 0 is_stmt 0 discriminator 1
	movl	$.LC63, %eax	#, iftmp.696
	jmp	.L705	#
.L704:
	.loc 1 2527 0 discriminator 2
	movl	$.LC10, %eax	#, iftmp.696
.L705:
	.loc 1 2527 0 discriminator 3
	movq	PL_linestr(%rip), %rdx	# PL_linestr, PL_linestr.698
	movq	%rax, %rsi	# iftmp.696,
	movq	%rdx, %rdi	# PL_linestr.698,
	call	Perl_sv_setpv	#
	.loc 1 2529 0 is_stmt 1 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.699
	movq	(%rax), %rax	# PL_linestr.699_4216->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_4217].xpv_pv, PL_linestart.700
	movq	%rax, PL_linestart(%rip)	# PL_linestart.700, PL_linestart
	movq	PL_linestart(%rip), %rbx	# PL_linestart, s
	movq	%rbx, PL_oldbufptr(%rip)	# s, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.701
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.701, PL_oldoldbufptr
	.loc 1 2530 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.702
	movq	(%rax), %rax	# PL_linestr.702_4221->sv_any, D.28901
	movq	(%rax), %rdx	# MEM[(struct XPV *)_4222].xpv_pv, D.28895
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.703
	movq	(%rax), %rax	# PL_linestr.703_4224->sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_4225].xpv_cur, D.28898
	addq	%rdx, %rax	# D.28895, PL_bufend.704
	movq	%rax, PL_bufend(%rip)	# PL_bufend.704, PL_bufend
	.loc 1 2531 0 discriminator 3
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.705
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.705, PL_last_lop
	.loc 1 2532 0 discriminator 3
	movb	$0, PL_minus_p(%rip)	#, PL_minus_p
	movzbl	PL_minus_p(%rip), %eax	# PL_minus_p, PL_minus_p.706
	movb	%al, PL_minus_n(%rip)	# PL_minus_p.706, PL_minus_n
	.loc 1 2533 0 discriminator 3
	jmp	.L622	#
.L702:
	.loc 1 2535 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.707
	movq	(%rax), %rax	# PL_linestr.707_4230->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_4231].xpv_pv, PL_linestart.708
	movq	%rax, PL_linestart(%rip)	# PL_linestart.708, PL_linestart
	movq	PL_linestart(%rip), %rbx	# PL_linestart, s
	movq	%rbx, PL_oldbufptr(%rip)	# s, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.709
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.709, PL_oldoldbufptr
	.loc 1 2536 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.710
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.710, PL_last_lop
	.loc 1 2537 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.711
	movl	$.LC17, %esi	#,
	movq	%rax, %rdi	# PL_linestr.711,
	call	Perl_sv_setpv	#
	.loc 1 2538 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$59, %eax	#, D.28894
	jmp	.L2138	#
.L697:
	.loc 1 2542 0
	cmpb	$0, -1441(%rbp)	#, bof
	je	.L706	#,
	.loc 1 2543 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_656, D.28896
	.loc 1 2542 0 discriminator 1
	testb	%al, %al	# D.28896
	je	.L707	#,
	.loc 1 2544 0
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_656], D.28904
	.loc 1 2543 0
	cmpb	$-17, %al	#, D.28904
	je	.L707	#,
	.loc 1 2545 0
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_656], D.28904
	.loc 1 2544 0
	cmpb	$-3, %al	#, D.28904
	ja	.L707	#,
	.loc 1 2546 0
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_660, D.28896
	.loc 1 2545 0
	testb	%al, %al	# D.28896
	jne	.L706	#,
.L707:
	.loc 1 2568 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.712
	movq	%rax, %rdi	# PL_rsfp.712,
	call	Perl_PerlIO_tell	#
	movq	PL_linestr(%rip), %rdx	# PL_linestr, PL_linestr.713
	movq	(%rdx), %rdx	# PL_linestr.713_664->sv_any, D.28901
	movq	8(%rdx), %rdx	# MEM[(struct XPV *)_665].xpv_cur, D.28898
	cmpq	%rdx, %rax	# D.28902, D.28902
	sete	%al	#, D.28899
	movb	%al, -1441(%rbp)	# D.28899, bof
	.loc 1 2570 0
	cmpb	$0, -1441(%rbp)	#, bof
	je	.L706	#,
	.loc 1 2571 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.714
	movq	(%rax), %rax	# PL_linestr.714_670->sv_any, D.28901
	movq	(%rax), %rdx	# MEM[(struct XPV *)_671].xpv_pv, D.28895
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.715
	movq	(%rax), %rax	# PL_linestr.715_673->sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_674].xpv_cur, D.28898
	addq	%rdx, %rax	# D.28895, PL_bufend.716
	movq	%rax, PL_bufend(%rip)	# PL_bufend.716, PL_bufend
	.loc 1 2572 0
	movq	%rbx, %rdi	# s,
	call	S_swallow_bom	#
	movq	%rax, %rbx	#, s
.L706:
	.loc 1 2575 0
	movzbl	PL_doextract(%rip), %eax	# PL_doextract, PL_doextract.717
	testb	%al, %al	# PL_doextract.717
	je	.L708	#,
	.loc 1 2577 0
	movzbl	(%rbx), %eax	# *s_4, D.28896
	cmpb	$61, %al	#, D.28896
	jne	.L708	#,
	.loc 1 2577 0 is_stmt 0 discriminator 1
	movl	$4, %edx	#,
	movl	$.LC64, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strncmp	#
	testl	%eax, %eax	# D.28894
	jne	.L708	#,
	.loc 1 2578 0 is_stmt 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.718
	movl	$.LC17, %esi	#,
	movq	%rax, %rdi	# PL_linestr.718,
	call	Perl_sv_setpv	#
	.loc 1 2579 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.719
	movq	(%rax), %rax	# PL_linestr.719_682->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_683].xpv_pv, PL_linestart.720
	movq	%rax, PL_linestart(%rip)	# PL_linestart.720, PL_linestart
	movq	PL_linestart(%rip), %rbx	# PL_linestart, s
	movq	%rbx, PL_oldbufptr(%rip)	# s, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.721
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.721, PL_oldoldbufptr
	.loc 1 2580 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.722
	movq	(%rax), %rax	# PL_linestr.722_687->sv_any, D.28901
	movq	(%rax), %rdx	# MEM[(struct XPV *)_688].xpv_pv, D.28895
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.723
	movq	(%rax), %rax	# PL_linestr.723_690->sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_691].xpv_cur, D.28898
	addq	%rdx, %rax	# D.28895, PL_bufend.724
	movq	%rax, PL_bufend(%rip)	# PL_bufend.724, PL_bufend
	.loc 1 2581 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.725
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.725, PL_last_lop
	.loc 1 2582 0
	movb	$0, PL_doextract(%rip)	#, PL_doextract
.L708:
	.loc 1 2585 0
	movq	%rbx, %rdi	# s,
	call	S_incline	#
	.loc 1 2586 0
	movzbl	PL_doextract(%rip), %eax	# PL_doextract, PL_doextract.726
	testb	%al, %al	# PL_doextract.726
	jne	.L678	#,
	.loc 1 2587 0
	movq	%rbx, PL_linestart(%rip)	# s, PL_linestart
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.727
	movq	%rax, PL_bufptr(%rip)	# PL_linestart.727, PL_bufptr
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.728
	movq	%rax, PL_oldbufptr(%rip)	# PL_bufptr.728, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.729
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.729, PL_oldoldbufptr
	.loc 1 2588 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.730
	testl	%eax, %eax	# PL_perldb.730
	je	.L709	#,
	.loc 1 2588 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.731
	andl	$2, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L709	#,
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.732
	movq	PL_debstash(%rip), %rax	# PL_debstash, PL_debstash.733
	cmpq	%rax, %rdx	# PL_debstash.733, PL_curstash.732
	je	.L709	#,
.LBB41:
	.loc 1 2589 0 is_stmt 1
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -1176(%rbp)	# tmp3368, sv
	.loc 1 2591 0
	movq	-1176(%rbp), %rax	# sv, tmp3369
	movl	$7, %esi	#,
	movq	%rax, %rdi	# tmp3369,
	call	Perl_sv_upgrade	#
	.loc 1 2592 0
	movq	PL_linestr(%rip), %rcx	# PL_linestr, PL_linestr.734
	movq	-1176(%rbp), %rax	# sv, tmp3370
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# PL_linestr.734,
	movq	%rax, %rdi	# tmp3370,
	call	Perl_sv_setsv_flags	#
	.loc 1 2593 0
	movq	-1176(%rbp), %rax	# sv, tmp3371
	movl	12(%rax), %eax	# sv_704->sv_flags, D.28900
	andl	$2097152, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L711	#,
	.loc 1 2593 0 is_stmt 0 discriminator 1
	movq	-1176(%rbp), %rax	# sv, tmp3372
	movq	%rax, %rdi	# tmp3372,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.28894
	je	.L711	#,
	.loc 1 2593 0
	nop
.L711:
	.loc 1 2593 0 discriminator 3
	movq	-1176(%rbp), %rax	# sv, tmp3373
	movl	12(%rax), %eax	# sv_704->sv_flags, D.28900
	orl	$16842752, %eax	#, D.28900
	movl	%eax, %edx	# D.28900, D.28900
	movq	-1176(%rbp), %rax	# sv, tmp3374
	movl	%edx, 12(%rax)	# D.28900, sv_704->sv_flags
	.loc 1 2594 0 is_stmt 1 discriminator 3
	movq	-1176(%rbp), %rax	# sv, tmp3375
	movq	(%rax), %rax	# sv_704->sv_any, D.28901
	movq	$0, 24(%rax)	#, MEM[(struct XPVIV *)_713].xiv_iv
	.loc 1 2595 0 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.736
	movl	72(%rax), %eax	# PL_curcop.736_714->cop_line, D.28900
	movl	%eax, %ecx	# D.28900, D.28894
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.738
	movq	56(%rax), %rax	# PL_curcop.738_717->cop_filegv, D.28907
	testq	%rax, %rax	# D.28907
	je	.L712	#,
	.loc 1 2595 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.739
	movq	56(%rax), %rax	# PL_curcop.739_719->cop_filegv, D.28907
	movq	(%rax), %rax	# _720->sv_any, D.28908
	movq	56(%rax), %rax	# _721->xgv_gp, D.28909
	movq	32(%rax), %rax	# _722->gp_av, iftmp.737
	jmp	.L713	#
.L712:
	.loc 1 2595 0 discriminator 2
	movl	$0, %eax	#, iftmp.737
.L713:
	.loc 1 2595 0 discriminator 3
	movq	-1176(%rbp), %rdx	# sv, tmp3376
	movl	%ecx, %esi	# D.28894,
	movq	%rax, %rdi	# iftmp.737,
	call	Perl_av_store	#
.L709:
.LBE41:
	.loc 1 2597 0 is_stmt 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.740
	movq	(%rax), %rax	# PL_linestr.740_725->sv_any, D.28901
	movq	(%rax), %rdx	# MEM[(struct XPV *)_726].xpv_pv, D.28895
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.741
	movq	(%rax), %rax	# PL_linestr.741_728->sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_729].xpv_cur, D.28898
	addq	%rdx, %rax	# D.28895, PL_bufend.742
	movq	%rax, PL_bufend(%rip)	# PL_bufend.742, PL_bufend
	.loc 1 2598 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.743
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.743, PL_last_lop
	.loc 1 2599 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.744
	movl	72(%rax), %eax	# PL_curcop.744_733->cop_line, D.28900
	cmpl	$1, %eax	#, D.28900
	jne	.L714	#,
	.loc 1 2600 0
	jmp	.L715	#
.L717:
	.loc 1 2601 0
	addq	$1, %rbx	#, s
.L715:
	.loc 1 2600 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.745
	cmpq	%rax, %rbx	# PL_bufend.745, s
	jae	.L716	#,
	.loc 1 2600 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_6, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L717	#,
	.loc 1 2600 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_6, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L717	#,
	movzbl	(%rbx), %eax	# *s_6, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L717	#,
	movzbl	(%rbx), %eax	# *s_6, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L717	#,
	movzbl	(%rbx), %eax	# *s_6, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L717	#,
.L716:
	.loc 1 2602 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_6, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L718	#,
	.loc 1 2602 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_743, D.28896
	cmpb	$58, %al	#, D.28896
	je	.L718	#,
	.loc 1 2603 0 is_stmt 1
	addq	$1, %rbx	#, s
.L718:
	.loc 1 2604 0
	movl	$0, %r12d	#, d
	.loc 1 2605 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.746
	testl	%eax, %eax	# PL_in_eval.746
	jne	.L719	#,
	.loc 1 2606 0
	movzbl	(%rbx), %eax	# *s_7, D.28896
	cmpb	$35, %al	#, D.28896
	jne	.L719	#,
	.loc 1 2606 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_749, D.28896
	cmpb	$33, %al	#, D.28896
	jne	.L719	#,
	.loc 1 2607 0 is_stmt 1
	leaq	2(%rbx), %r12	#, d
.L719:
	.loc 1 2616 0
	testq	%r12, %r12	# d
	je	.L714	#,
.LBB42:
	.loc 1 2620 0
	jmp	.L720	#
.L721:
	.loc 1 2621 0
	addq	$1, %r12	#, d
.L720:
	.loc 1 2620 0 discriminator 1
	movzbl	(%r12), %eax	# *d_52, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L721	#,
	.loc 1 2620 0 is_stmt 0 discriminator 2
	movzbl	(%r12), %eax	# *d_52, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L721	#,
	.loc 1 2620 0 discriminator 1
	movzbl	(%r12), %eax	# *d_52, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L721	#,
	movzbl	(%r12), %eax	# *d_52, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L721	#,
	movzbl	(%r12), %eax	# *d_52, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L721	#,
	.loc 1 2622 0 is_stmt 1
	movq	%r12, -1168(%rbp)	# d, ipath
	.loc 1 2623 0
	jmp	.L722	#
.L724:
	.loc 1 2624 0
	addq	$1, %r12	#, d
.L722:
	.loc 1 2623 0 discriminator 1
	movzbl	(%r12), %eax	# *d_53, D.28896
	testb	%al, %al	# D.28896
	je	.L723	#,
	.loc 1 2623 0 is_stmt 0 discriminator 2
	movzbl	(%r12), %eax	# *d_53, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L723	#,
	.loc 1 2623 0 discriminator 1
	movzbl	(%r12), %eax	# *d_53, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L723	#,
	movzbl	(%r12), %eax	# *d_53, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L723	#,
	movzbl	(%r12), %eax	# *d_53, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L723	#,
	movzbl	(%r12), %eax	# *d_53, D.28896
	cmpb	$12, %al	#, D.28896
	jne	.L724	#,
.L723:
	.loc 1 2625 0 is_stmt 1
	movq	%r12, -1160(%rbp)	# d, ipathend
	.loc 1 2661 0
	movl	$.LC65, %esi	#,
	movq	%rbx, %rdi	# s,
	call	Perl_instr	#
	movq	%rax, %r12	#, d
	.loc 1 2662 0
	testq	%r12, %r12	# d
	jne	.L725	#,
	.loc 1 2663 0
	movl	$.LC66, %esi	#,
	movq	%rbx, %rdi	# s,
	call	Perl_instr	#
	movq	%rax, %r12	#, d
.L725:
	.loc 1 2701 0
	testq	%r12, %r12	# d
	jne	.L726	#,
	.loc 1 2702 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_7, D.28896
	.loc 1 2701 0 discriminator 1
	cmpb	$35, %al	#, D.28896
	jne	.L726	#,
	.loc 1 2702 0
	movq	-1160(%rbp), %rax	# ipathend, tmp3377
	cmpq	-1168(%rbp), %rax	# ipath, tmp3377
	jbe	.L726	#,
	.loc 1 2704 0
	movzbl	PL_minus_c(%rip), %eax	# PL_minus_c, PL_minus_c.747
	.loc 1 2703 0
	testb	%al, %al	# PL_minus_c.747
	jne	.L726	#,
	.loc 1 2705 0
	movl	$.LC67, %esi	#,
	movq	%rbx, %rdi	# s,
	call	Perl_instr	#
	.loc 1 2704 0
	testq	%rax, %rax	# D.28895
	jne	.L726	#,
	.loc 1 2706 0
	movq	PL_origargv(%rip), %rax	# PL_origargv, PL_origargv.748
	movq	(%rax), %rax	# *PL_origargv.748_771, D.28895
	movl	$.LC66, %esi	#,
	movq	%rax, %rdi	# D.28895,
	call	Perl_instr	#
	.loc 1 2705 0
	testq	%rax, %rax	# D.28895
	je	.L726	#,
.LBB43:
	.loc 1 2710 0
	movq	-1160(%rbp), %rax	# ipathend, tmp3378
	movb	$0, (%rax)	#, *ipathend_765
	.loc 1 2711 0
	movq	-1160(%rbp), %rax	# ipathend, tmp3379
	leaq	1(%rax), %rbx	#, s
	.loc 1 2712 0
	jmp	.L727	#
.L729:
	.loc 1 2713 0
	addq	$1, %rbx	#, s
.L727:
	.loc 1 2712 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.749
	cmpq	%rax, %rbx	# PL_bufend.749, s
	jae	.L728	#,
	.loc 1 2712 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_8, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L729	#,
	.loc 1 2712 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_8, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L729	#,
	movzbl	(%rbx), %eax	# *s_8, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L729	#,
	movzbl	(%rbx), %eax	# *s_8, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L729	#,
	movzbl	(%rbx), %eax	# *s_8, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L729	#,
.L728:
	.loc 1 2714 0 is_stmt 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.750
	cmpq	%rax, %rbx	# PL_bufend.750, s
	jae	.L730	#,
	.loc 1 2715 0
	movl	PL_origargc(%rip), %eax	# PL_origargc, PL_origargc.751
	addl	$3, %eax	#, D.28894
	cltq
	salq	$3, %rax	#, D.28898
	movq	%rax, %rdi	# D.28898,
	call	Perl_safesysmalloc	#
	movq	%rax, -1344(%rbp)	# tmp3380, newargv
	movl	PL_origargc(%rip), %eax	# PL_origargc, PL_origargc.752
	addl	$3, %eax	#, D.28894
	cltq
	leaq	0(,%rax,8), %rdx	#, D.28898
	movq	-1344(%rbp), %rax	# newargv, tmp3381
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp3381,
	call	memset	#
	.loc 1 2716 0
	movq	-1344(%rbp), %rax	# newargv, tmp3382
	addq	$8, %rax	#, D.28910
	movq	%rbx, (%rax)	# s, *_792
	.loc 1 2717 0
	jmp	.L731	#
.L733:
	.loc 1 2718 0
	addq	$1, %rbx	#, s
.L731:
	.loc 1 2717 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.753
	cmpq	%rax, %rbx	# PL_bufend.753, s
	jae	.L732	#,
	.loc 1 2717 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_9, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L732	#,
	.loc 1 2717 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_9, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L732	#,
	movzbl	(%rbx), %eax	# *s_9, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L732	#,
	movzbl	(%rbx), %eax	# *s_9, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L732	#,
	movzbl	(%rbx), %eax	# *s_9, D.28896
	cmpb	$12, %al	#, D.28896
	jne	.L733	#,
.L732:
	.loc 1 2719 0 is_stmt 1
	movb	$0, (%rbx)	#, *s_9
	.loc 1 2720 0
	movl	PL_origargc(%rip), %eax	# PL_origargc, PL_origargc.754
	addl	$1, %eax	#, D.28894
	cltq
	leaq	0(,%rax,8), %rdx	#, D.28898
	movq	PL_origargv(%rip), %rax	# PL_origargv, PL_origargv.755
	leaq	8(%rax), %rcx	#, D.28895
	movq	-1344(%rbp), %rax	# newargv, tmp3383
	addq	$16, %rax	#, D.28895
	movq	%rcx, %rsi	# D.28895,
	movq	%rax, %rdi	# D.28895,
	call	memcpy	#
	jmp	.L734	#
.L730:
	.loc 1 2723 0
	movq	PL_origargv(%rip), %rax	# PL_origargv, tmp3384
	movq	%rax, -1344(%rbp)	# tmp3384, newargv
.L734:
	.loc 1 2724 0
	movq	-1344(%rbp), %rax	# newargv, tmp3385
	movq	-1168(%rbp), %rdx	# ipath, tmp3386
	movq	%rdx, (%rax)	# tmp3386, *newargv_96
	.loc 1 2726 0
	movq	-1344(%rbp), %rdx	# newargv, tmp3387
	movq	-1168(%rbp), %rax	# ipath, tmp3388
	movq	%rdx, %rsi	# tmp3387,
	movq	%rax, %rdi	# tmp3388,
	call	execv	#
	.loc 1 2728 0
	movq	-1168(%rbp), %rax	# ipath, tmp3389
	movq	%rax, %rsi	# tmp3389,
	movl	$.LC68, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L726:
.LBE43:
	.loc 1 2731 0
	testq	%r12, %r12	# d
	je	.L714	#,
.LBB44:
	.loc 1 2732 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, tmp3390
	movl	%eax, -1396(%rbp)	# tmp3390, oldpdb
	.loc 1 2733 0
	movzbl	PL_minus_n(%rip), %eax	# PL_minus_n, tmp3391
	movb	%al, -1439(%rbp)	# tmp3391, oldn
	.loc 1 2734 0
	movzbl	PL_minus_p(%rip), %eax	# PL_minus_p, tmp3392
	movb	%al, -1438(%rbp)	# tmp3392, oldp
	.loc 1 2736 0
	jmp	.L735	#
.L737:
	.loc 1 2736 0 is_stmt 0 discriminator 1
	addq	$1, %r12	#, d
.L735:
	movzbl	(%r12), %eax	# *d_55, D.28896
	testb	%al, %al	# D.28896
	je	.L736	#,
	.loc 1 2736 0 discriminator 2
	movzbl	(%r12), %eax	# *d_55, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L736	#,
	.loc 1 2736 0 discriminator 1
	movzbl	(%r12), %eax	# *d_55, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L736	#,
	movzbl	(%r12), %eax	# *d_55, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L736	#,
	movzbl	(%r12), %eax	# *d_55, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L736	#,
	movzbl	(%r12), %eax	# *d_55, D.28896
	cmpb	$12, %al	#, D.28896
	jne	.L737	#,
.L736:
	.loc 1 2737 0 is_stmt 1
	jmp	.L738	#
.L739:
	.loc 1 2737 0 is_stmt 0 discriminator 2
	addq	$1, %r12	#, d
.L738:
	.loc 1 2737 0 discriminator 1
	movzbl	(%r12), %eax	# *d_56, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L739	#,
	.loc 1 2737 0 discriminator 3
	movzbl	(%r12), %eax	# *d_56, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L739	#,
	.loc 1 2739 0 is_stmt 1
	movq	%r12, %rax	# d, d.756
	leaq	1(%rax), %r12	#, d
	movzbl	(%rax), %eax	# *d.756_820, D.28896
	cmpb	$45, %al	#, D.28896
	jne	.L714	#,
.LBB45:
	.loc 1 2740 0
	movzbl	PL_doswitches(%rip), %eax	# PL_doswitches, tmp3393
	movb	%al, -1437(%rbp)	# tmp3393, switches_done
.L745:
	.loc 1 2742 0
	movzbl	(%r12), %eax	# *d_57, D.28896
	cmpb	$77, %al	#, D.28896
	je	.L740	#,
	.loc 1 2742 0 is_stmt 0 discriminator 1
	movzbl	(%r12), %eax	# *d_57, D.28896
	cmpb	$109, %al	#, D.28896
	jne	.L741	#,
.L740:
.LBB46:
	.loc 1 2743 0 is_stmt 1
	movq	%r12, -1152(%rbp)	# d, m
	.loc 1 2744 0
	jmp	.L742	#
.L744:
	.loc 1 2744 0 is_stmt 0 discriminator 1
	addq	$1, %r12	#, d
.L742:
	movzbl	(%r12), %eax	# *d_58, D.28896
	testb	%al, %al	# D.28896
	je	.L743	#,
	.loc 1 2744 0 discriminator 2
	movzbl	(%r12), %eax	# *d_58, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L743	#,
	.loc 1 2744 0 discriminator 1
	movzbl	(%r12), %eax	# *d_58, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L743	#,
	movzbl	(%r12), %eax	# *d_58, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L743	#,
	movzbl	(%r12), %eax	# *d_58, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L743	#,
	movzbl	(%r12), %eax	# *d_58, D.28896
	cmpb	$12, %al	#, D.28896
	jne	.L744	#,
.L743:
	.loc 1 2746 0 is_stmt 1
	movq	%r12, %rdx	# d, d.757
	movq	-1152(%rbp), %rax	# m, m.758
	subq	%rax, %rdx	# m.758, D.28902
	movq	%rdx, %rax	# D.28902, D.28902
	.loc 1 2745 0
	movq	-1152(%rbp), %rdx	# m, tmp3394
	movl	%eax, %esi	# D.28894,
	movl	$.LC69, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L741:
.LBE46:
	.loc 1 2748 0
	movq	%r12, %rdi	# d,
	call	Perl_moreswitches	#
	movq	%rax, %r12	#, d
	.loc 1 2749 0
	testq	%r12, %r12	# d
	jne	.L745	#,
	.loc 1 2750 0
	movzbl	PL_doswitches(%rip), %eax	# PL_doswitches, PL_doswitches.759
	testb	%al, %al	# PL_doswitches.759
	je	.L746	#,
	.loc 1 2750 0 is_stmt 0 discriminator 1
	cmpb	$0, -1437(%rbp)	#, switches_done
	jne	.L746	#,
.LBB47:
	.loc 1 2751 0 is_stmt 1
	movl	PL_origargc(%rip), %eax	# PL_origargc, tmp3395
	movl	%eax, -1424(%rbp)	# tmp3395, argc
	.loc 1 2752 0
	movq	PL_origargv(%rip), %rax	# PL_origargv, tmp3396
	movq	%rax, -1336(%rbp)	# tmp3396, argv
.L748:
	.loc 1 2754 0 discriminator 1
	subl	$1, -1424(%rbp)	#, argc
	addq	$8, -1336(%rbp)	#, argv
	.loc 1 2755 0 discriminator 1
	cmpl	$0, -1424(%rbp)	#, argc
	je	.L747	#,
	movq	-1336(%rbp), %rax	# argv, tmp3397
	movq	(%rax), %rax	# *argv_843, D.28895
	movzbl	(%rax), %eax	# *_844, D.28896
	cmpb	$45, %al	#, D.28896
	jne	.L747	#,
	movq	-1336(%rbp), %rax	# argv, tmp3398
	movq	(%rax), %rax	# *argv_843, D.28895
	addq	$1, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_847, D.28896
	testb	%al, %al	# D.28896
	jne	.L748	#,
.L747:
	.loc 1 2756 0
	movq	-1336(%rbp), %rdx	# argv, tmp3399
	movl	-1424(%rbp), %eax	# argc, tmp3400
	movq	%rdx, %rsi	# tmp3399,
	movl	%eax, %edi	# tmp3400,
	call	Perl_init_argv_symbols	#
.L746:
.LBE47:
	.loc 1 2758 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.760
	testl	%eax, %eax	# PL_perldb.760
	je	.L749	#,
	.loc 1 2758 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.761
	andl	$2, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L749	#,
	cmpl	$0, -1396(%rbp)	#, oldpdb
	je	.L750	#,
.L749:
	.loc 1 2759 0 is_stmt 1 discriminator 2
	movzbl	PL_minus_n(%rip), %eax	# PL_minus_n, PL_minus_n.762
	.loc 1 2758 0 discriminator 2
	testb	%al, %al	# PL_minus_n.762
	jne	.L751	#,
	.loc 1 2759 0
	movzbl	PL_minus_p(%rip), %eax	# PL_minus_p, PL_minus_p.763
	testb	%al, %al	# PL_minus_p.763
	je	.L752	#,
.L751:
	.loc 1 2759 0 is_stmt 0 discriminator 1
	cmpb	$0, -1439(%rbp)	#, oldn
	jne	.L752	#,
	cmpb	$0, -1438(%rbp)	#, oldp
	jne	.L752	#,
.L750:
	.loc 1 2763 0 is_stmt 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.764
	movl	$.LC17, %esi	#,
	movq	%rax, %rdi	# PL_linestr.764,
	call	Perl_sv_setpv	#
	.loc 1 2764 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.765
	movq	(%rax), %rax	# PL_linestr.765_865->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_866].xpv_pv, PL_linestart.766
	movq	%rax, PL_linestart(%rip)	# PL_linestart.766, PL_linestart
	movq	PL_linestart(%rip), %rbx	# PL_linestart, s
	movq	%rbx, PL_oldbufptr(%rip)	# s, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.767
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.767, PL_oldoldbufptr
	.loc 1 2765 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.768
	movq	(%rax), %rax	# PL_linestr.768_870->sv_any, D.28901
	movq	(%rax), %rdx	# MEM[(struct XPV *)_871].xpv_pv, D.28895
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.769
	movq	(%rax), %rax	# PL_linestr.769_873->sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_874].xpv_cur, D.28898
	addq	%rdx, %rax	# D.28895, PL_bufend.770
	movq	%rax, PL_bufend(%rip)	# PL_bufend.770, PL_bufend
	.loc 1 2766 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.771
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.771, PL_last_lop
	.loc 1 2767 0
	movb	$0, PL_preambled(%rip)	#, PL_preambled
	.loc 1 2768 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.772
	testl	%eax, %eax	# PL_perldb.772
	je	.L753	#,
	.loc 1 2768 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.773
	andl	$2, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L753	#,
	.loc 1 2769 0 is_stmt 1
	movq	PL_origfilename(%rip), %rax	# PL_origfilename, PL_origfilename.774
	movq	%rax, %rdi	# PL_origfilename.774,
	call	Perl_gv_fetchfile	#
	.loc 1 2770 0
	jmp	.L622	#
.L753:
	jmp	.L622	#
.L752:
	.loc 1 2772 0
	movzbl	PL_doswitches(%rip), %eax	# PL_doswitches, PL_doswitches.775
	testb	%al, %al	# PL_doswitches.775
	je	.L714	#,
	.loc 1 2772 0 is_stmt 0 discriminator 1
	cmpb	$0, -1437(%rbp)	#, switches_done
	jne	.L714	#,
.LBB48:
	.loc 1 2773 0 is_stmt 1
	movl	PL_origargc(%rip), %eax	# PL_origargc, tmp3401
	movl	%eax, -1420(%rbp)	# tmp3401, argc
	.loc 1 2774 0
	movq	PL_origargv(%rip), %rax	# PL_origargv, tmp3402
	movq	%rax, -1328(%rbp)	# tmp3402, argv
.L755:
	.loc 1 2776 0 discriminator 1
	subl	$1, -1420(%rbp)	#, argc
	addq	$8, -1328(%rbp)	#, argv
	.loc 1 2777 0 discriminator 1
	cmpl	$0, -1420(%rbp)	#, argc
	je	.L754	#,
	movq	-1328(%rbp), %rax	# argv, tmp3403
	movq	(%rax), %rax	# *argv_858, D.28895
	movzbl	(%rax), %eax	# *_859, D.28896
	cmpb	$45, %al	#, D.28896
	jne	.L754	#,
	movq	-1328(%rbp), %rax	# argv, tmp3404
	movq	(%rax), %rax	# *argv_858, D.28895
	addq	$1, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_862, D.28896
	testb	%al, %al	# D.28896
	jne	.L755	#,
.L754:
	.loc 1 2778 0
	movq	-1328(%rbp), %rdx	# argv, tmp3405
	movl	-1420(%rbp), %eax	# argc, tmp3406
	movq	%rdx, %rsi	# tmp3405,
	movl	%eax, %edi	# tmp3406,
	call	Perl_init_argv_symbols	#
.L714:
.LBE48:
.LBE45:
.LBE44:
.LBE42:
	.loc 1 2784 0
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.776
	testl	%eax, %eax	# PL_lex_formbrack.776
	je	.L756	#,
	.loc 1 2784 0 is_stmt 0 discriminator 1
	movl	PL_lex_brackets(%rip), %edx	# PL_lex_brackets, PL_lex_brackets.777
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.778
	cmpl	%eax, %edx	# PL_lex_formbrack.778, PL_lex_brackets.777
	jg	.L756	#,
	.loc 1 2785 0 is_stmt 1
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	.loc 1 2786 0
	movl	$1, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 2787 0
	call	Perl_yylex	#
	jmp	.L2138	#
.L756:
	.loc 1 2789 0
	jmp	.L622	#
.L627:
	.loc 1 2800 0
	addq	$1, %rbx	#, s
	.loc 1 2801 0
	jmp	.L622	#
.L628:
	.loc 1 2804 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.779
	cmpl	$10, %eax	#, PL_lex_state.779
	jne	.L757	#,
	.loc 1 2804 0 is_stmt 0 discriminator 1
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.780
	testl	%eax, %eax	# PL_in_eval.780
	je	.L758	#,
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.781
	testq	%rax, %rax	# PL_rsfp.781
	jne	.L758	#,
.L757:
	.loc 1 2805 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_2, D.28896
	cmpb	$35, %al	#, D.28896
	jne	.L759	#,
	.loc 1 2805 0 is_stmt 0 discriminator 1
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.782
	cmpq	%rax, %rbx	# PL_linestart.782, s
	jne	.L759	#,
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.783
	testl	%eax, %eax	# PL_in_eval.783
	je	.L759	#,
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.784
	testq	%rax, %rax	# PL_rsfp.784
	jne	.L759	#,
	.loc 1 2807 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.785
	movl	72(%rax), %edx	# PL_curcop.785_896->cop_line, D.28900
	subl	$1, %edx	#, D.28900
	movl	%edx, 72(%rax)	# D.28900, PL_curcop.785_896->cop_line
	.loc 1 2808 0
	movq	%rbx, %rdi	# s,
	call	S_incline	#
.L759:
	.loc 1 2810 0
	movq	PL_bufend(%rip), %r12	# PL_bufend, d
	.loc 1 2811 0
	jmp	.L760	#
.L762:
	.loc 1 2812 0
	addq	$1, %rbx	#, s
.L760:
	.loc 1 2811 0 discriminator 1
	cmpq	%r12, %rbx	# d, s
	jae	.L761	#,
	.loc 1 2811 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_13, D.28896
	cmpb	$10, %al	#, D.28896
	jne	.L762	#,
.L761:
	.loc 1 2813 0 is_stmt 1
	cmpq	%r12, %rbx	# d, s
	jae	.L763	#,
	.loc 1 2814 0
	addq	$1, %rbx	#, s
	jmp	.L764	#
.L763:
	.loc 1 2815 0
	cmpq	%r12, %rbx	# d, s
	jbe	.L764	#,
	.loc 1 2816 0
	movl	$.LC70, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L764:
	.loc 1 2817 0
	movq	%rbx, %rdi	# s,
	call	S_incline	#
	.loc 1 2818 0
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.786
	testl	%eax, %eax	# PL_lex_formbrack.786
	je	.L765	#,
	.loc 1 2818 0 is_stmt 0 discriminator 1
	movl	PL_lex_brackets(%rip), %edx	# PL_lex_brackets, PL_lex_brackets.787
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.788
	cmpl	%eax, %edx	# PL_lex_formbrack.788, PL_lex_brackets.787
	jg	.L765	#,
	.loc 1 2819 0 is_stmt 1
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	.loc 1 2820 0
	movl	$1, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 2821 0
	call	Perl_yylex	#
	jmp	.L2138	#
.L765:
	.loc 1 2818 0 discriminator 2
	nop
	.loc 1 2828 0 discriminator 2
	jmp	.L622	#
.L758:
	.loc 1 2825 0
	movb	$0, (%rbx)	#, *s_2
	.loc 1 2826 0
	movq	%rbx, PL_bufend(%rip)	# s, PL_bufend
	.loc 1 2828 0
	jmp	.L622	#
.L640:
	.loc 1 2830 0
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_907, D.28896
	testb	%al, %al	# D.28896
	je	.L767	#,
	.loc 1 2830 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_909, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L768	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_911, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L769	#,
.L768:
	.loc 1 2830 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_913, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L767	#,
	.loc 1 2830 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_915, D.28896
	cmpb	$122, %al	#, D.28896
	jg	.L767	#,
.L769:
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_917, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L770	#,
	.loc 1 2830 0 discriminator 2
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_919, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L767	#,
.L770:
	.loc 1 2830 0 discriminator 1
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_921, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L771	#,
	.loc 1 2830 0 discriminator 2
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_923, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L767	#,
.L771:
	.loc 1 2830 0 discriminator 1
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_925, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L772	#,
	.loc 1 2830 0 discriminator 2
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_927, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L767	#,
.L772:
	.loc 1 2830 0 discriminator 1
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_929, D.28896
	cmpb	$95, %al	#, D.28896
	je	.L767	#,
.LBB49:
	.loc 1 2831 0 is_stmt 1
	movl	$0, -1416(%rbp)	#, ftst
	.loc 1 2833 0
	addq	$1, %rbx	#, s
	.loc 1 2834 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	.loc 1 2835 0
	movq	%rbx, %rax	# s, s.789
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.789_933, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 2837 0
	jmp	.L773	#
.L775:
	.loc 1 2838 0
	addq	$1, %rbx	#, s
.L773:
	.loc 1 2837 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.790
	cmpq	%rax, %rbx	# PL_bufend.790, s
	jae	.L774	#,
	.loc 1 2837 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_16, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L775	#,
	.loc 1 2837 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_16, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L775	#,
.L774:
	.loc 1 2840 0 is_stmt 1
	movl	$2, %edx	#,
	movl	$.LC71, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strncmp	#
	testl	%eax, %eax	# D.28894
	jne	.L776	#,
	.loc 1 2841 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.791
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movl	$257, %esi	#,
	movq	%rax, %rdi	# PL_bufptr.791,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 2845 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$45, %eax	#, D.28894
	jmp	.L2138	#
.L776:
	.loc 1 2847 0
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.792
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.792, PL_last_uni
	.loc 1 2848 0
	leal	-65(%r13), %eax	#, tmp3407
	cmpl	$57, %eax	#, tmp3407
	ja	.L2142	#,
	movl	%eax, %eax	# tmp3407, tmp3408
	movq	.L779(,%rax,8), %rax	#, tmp3409
	jmp	*%rax	# tmp3409
	.section	.rodata
	.align 8
	.align 4
.L779:
	.quad	.L778
	.quad	.L780
	.quad	.L778
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L778
	.quad	.L2142
	.quad	.L781
	.quad	.L2142
	.quad	.L2142
	.quad	.L782
	.quad	.L783
	.quad	.L784
	.quad	.L2142
	.quad	.L2142
	.quad	.L785
	.quad	.L786
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L787
	.quad	.L788
	.quad	.L789
	.quad	.L790
	.quad	.L791
	.quad	.L792
	.quad	.L2142
	.quad	.L2142
	.quad	.L2142
	.quad	.L793
	.quad	.L794
	.quad	.L2142
	.quad	.L2142
	.quad	.L795
	.quad	.L796
	.quad	.L2142
	.quad	.L797
	.quad	.L798
	.quad	.L799
	.quad	.L800
	.quad	.L2142
	.quad	.L801
	.quad	.L802
	.quad	.L2142
	.quad	.L803
	.text
.L797:
	.loc 1 2849 0
	movl	$239, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L801:
	.loc 1 2850 0
	movl	$240, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L802:
	.loc 1 2851 0
	movl	$241, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L795:
	.loc 1 2852 0
	movl	$243, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L782:
	.loc 1 2853 0
	movl	$236, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L785:
	.loc 1 2854 0
	movl	$237, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L786:
	.loc 1 2855 0
	movl	$238, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L781:
	.loc 1 2856 0
	movl	$244, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L790:
	.loc 1 2857 0
	movl	$242, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L803:
	.loc 1 2858 0
	movl	$245, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L798:
	.loc 1 2859 0
	movl	$246, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L791:
	.loc 1 2860 0
	movl	$253, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L789:
	.loc 1 2861 0
	movl	$254, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L794:
	.loc 1 2862 0
	movl	$256, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L796:
	.loc 1 2863 0
	movl	$255, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L783:
	.loc 1 2864 0
	movl	$250, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L800:
	.loc 1 2865 0
	movl	$257, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L792:
	.loc 1 2866 0
	movl	$258, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L793:
	.loc 1 2867 0
	movl	$259, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L787:
	.loc 1 2868 0
	movl	$252, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L788:
	.loc 1 2869 0
	movl	$251, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L799:
	.loc 1 2870 0
	movl	$260, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L784:
	.loc 1 2871 0
	movl	$261, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L780:
	.loc 1 2872 0
	movl	$262, -1416(%rbp)	#, ftst
	jmp	.L804	#
.L778:
	.loc 1 2874 0
	movl	$4, %edx	#,
	movl	$1, %esi	#,
	movl	$.LC72, %edi	#,
	call	Perl_gv_fetchpv	#
	.loc 1 2875 0
	cmpl	$67, %r13d	#, tmp
	je	.L806	#,
	cmpl	$77, %r13d	#, tmp
	je	.L807	#,
	cmpl	$65, %r13d	#, tmp
	je	.L808	#,
	.loc 1 2879 0
	jmp	.L809	#
.L807:
	.loc 1 2876 0
	movl	$247, -1416(%rbp)	#, ftst
	jmp	.L809	#
.L808:
	.loc 1 2877 0
	movl	$248, -1416(%rbp)	#, ftst
	jmp	.L809	#
.L806:
	.loc 1 2878 0
	movl	$249, -1416(%rbp)	#, ftst
	nop
.L809:
	.loc 1 2881 0
	jmp	.L804	#
.L2142:
	.loc 1 2883 0
	nop
.L804:
	.loc 1 2885 0
	cmpl	$0, -1416(%rbp)	#, ftst
	je	.L810	#,
	.loc 1 2886 0
	movl	-1416(%rbp), %eax	# ftst, tmp3410
	movw	%ax, PL_last_lop_op(%rip)	# PL_last_lop_op.793, PL_last_lop_op
	.loc 1 2890 0
	movl	-1416(%rbp), %eax	# ftst, tmp3411
	movl	%eax, PL_yylval(%rip)	# tmp3411, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$285, %eax	#, D.28894
	jmp	.L2138	#
.L810:
	.loc 1 2899 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.794
	subq	$1, %rax	#, PL_bufptr.795
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.795, PL_bufptr
	movq	PL_bufptr(%rip), %rbx	# PL_bufptr, s
.L767:
.LBE49:
	.loc 1 2902 0
	movq	%rbx, %rax	# s, s.796
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.796_978, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 2903 0
	movzbl	(%rbx), %eax	# *s_979, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	cmpl	%r13d, %eax	# tmp, D.28894
	jne	.L811	#,
	.loc 1 2904 0
	addq	$1, %rbx	#, s
	.loc 1 2905 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.797
	testl	%eax, %eax	# PL_expect.797
	jne	.L812	#,
	.loc 1 2906 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.799
	movl	72(%rax), %edx	# PL_curcop.799_986->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.800
	cmpl	%eax, %edx	# PL_copline.800, D.28900
	jae	.L813	#,
	.loc 1 2906 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.801
	movl	72(%rax), %eax	# PL_curcop.801_989->cop_line, iftmp.798
	jmp	.L814	#
.L813:
	.loc 1 2906 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.798
.L814:
	.loc 1 2906 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.798, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$316, %eax	#, D.28894
	jmp	.L2138	#
.L812:
	.loc 1 2908 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$314, %eax	#, D.28894
	jmp	.L2138	#
.L811:
	.loc 1 2910 0
	movzbl	(%rbx), %eax	# *s_979, D.28896
	cmpb	$62, %al	#, D.28896
	jne	.L815	#,
	.loc 1 2911 0
	addq	$1, %rbx	#, s
	.loc 1 2912 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 2913 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.803
	movzbl	37(%rax), %eax	# PL_curcop.803_997->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L816	#,
	.loc 1 2913 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.804
	testq	%rax, %rax	# PL_linestr.804
	je	.L817	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.805
	movl	12(%rax), %eax	# PL_linestr.805_1002->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L817	#,
	.loc 1 2913 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.806
	movzbl	37(%rax), %eax	# PL_curcop.806_1005->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L818	#,
.L817:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.807
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L816	#,
.L818:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_996], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L819	#,
.L816:
	movzbl	(%rbx), %eax	# *s_996, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L820	#,
	movzbl	(%rbx), %eax	# *s_996, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L821	#,
.L820:
	.loc 1 2913 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_996, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L822	#,
	.loc 1 2913 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_996, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L821	#,
.L822:
	.loc 1 2913 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_996, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L823	#,
.L821:
	.loc 1 2913 0 discriminator 1
	movl	$1, %eax	#, iftmp.808
	jmp	.L824	#
.L823:
	.loc 1 2913 0 discriminator 3
	movl	$0, %eax	#, iftmp.808
.L824:
	.loc 1 2913 0 discriminator 4
	andl	$1, %eax	#, iftmp.802
	jmp	.L825	#
.L819:
	.loc 1 2913 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L826	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L826	#,
	.loc 1 2913 0 discriminator 3
	movl	$1, %eax	#, iftmp.809
	jmp	.L827	#
.L826:
	.loc 1 2913 0 discriminator 2
	movl	$0, %eax	#, iftmp.809
.L827:
	.loc 1 2913 0 discriminator 4
	andl	$1, %eax	#, iftmp.802
.L825:
	.loc 1 2913 0 discriminator 3
	testb	%al, %al	# iftmp.802
	je	.L828	#,
	.loc 1 2914 0 is_stmt 1
	movl	$0, %r8d	#,
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movl	$258, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 2915 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$317, %eax	#, D.28894
	jmp	.L2138	#
.L828:
	.loc 1 2917 0
	movzbl	(%rbx), %eax	# *s_996, D.28896
	cmpb	$36, %al	#, D.28896
	jne	.L829	#,
	.loc 1 2918 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$317, %eax	#, D.28894
	jmp	.L2138	#
.L829:
	.loc 1 2920 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.811
	movl	72(%rax), %edx	# PL_curcop.811_1029->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.812
	cmpl	%eax, %edx	# PL_copline.812, D.28900
	jae	.L830	#,
	.loc 1 2920 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.813
	movl	72(%rax), %eax	# PL_curcop.813_1032->cop_line, iftmp.810
	jmp	.L831	#
.L830:
	.loc 1 2920 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.810
.L831:
	.loc 1 2920 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.810, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$317, %eax	#, D.28894
	jmp	.L2138	#
.L815:
	.loc 1 2922 0 is_stmt 1
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.814
	testl	%eax, %eax	# PL_expect.814
	jne	.L832	#,
	.loc 1 2923 0
	movl	$64, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$290, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L832:
	.loc 1 2925 0
	movzbl	(%rbx), %eax	# *s_979, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L833	#,
	.loc 1 2925 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_979, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L833	#,
	movzbl	(%rbx), %eax	# *s_979, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L833	#,
	movzbl	(%rbx), %eax	# *s_979, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L833	#,
	movzbl	(%rbx), %eax	# *s_979, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L833	#,
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.815
	movzbl	(%rax), %eax	# *PL_bufptr.815_1043, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L834	#,
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.816
	movzbl	(%rax), %eax	# *PL_bufptr.816_1045, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L834	#,
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.817
	movzbl	(%rax), %eax	# *PL_bufptr.817_1047, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L834	#,
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.818
	movzbl	(%rax), %eax	# *PL_bufptr.818_1049, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L834	#,
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.819
	movzbl	(%rax), %eax	# *PL_bufptr.819_1051, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L834	#,
.L833:
	.loc 1 2926 0 is_stmt 1
	call	S_check_uni	#
.L834:
	.loc 1 2927 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$45, %eax	#, D.28894
	jmp	.L2138	#
.L638:
	.loc 1 2931 0
	movq	%rbx, %rax	# s, s.820
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.820_1054, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 2932 0
	movzbl	(%rbx), %eax	# *s_1055, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	cmpl	%r13d, %eax	# tmp, D.28894
	jne	.L835	#,
	.loc 1 2933 0
	addq	$1, %rbx	#, s
	.loc 1 2934 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.821
	testl	%eax, %eax	# PL_expect.821
	jne	.L836	#,
	.loc 1 2935 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.823
	movl	72(%rax), %edx	# PL_curcop.823_1062->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.824
	cmpl	%eax, %edx	# PL_copline.824, D.28900
	jae	.L837	#,
	.loc 1 2935 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.825
	movl	72(%rax), %eax	# PL_curcop.825_1065->cop_line, iftmp.822
	jmp	.L838	#
.L837:
	.loc 1 2935 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.822
.L838:
	.loc 1 2935 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.822, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$315, %eax	#, D.28894
	jmp	.L2138	#
.L836:
	.loc 1 2937 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$313, %eax	#, D.28894
	jmp	.L2138	#
.L835:
	.loc 1 2939 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.826
	testl	%eax, %eax	# PL_expect.826
	jne	.L839	#,
	.loc 1 2940 0
	movl	$62, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$290, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L839:
	.loc 1 2942 0
	movzbl	(%rbx), %eax	# *s_1055, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L840	#,
	.loc 1 2942 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1055, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L840	#,
	movzbl	(%rbx), %eax	# *s_1055, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L840	#,
	movzbl	(%rbx), %eax	# *s_1055, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L840	#,
	movzbl	(%rbx), %eax	# *s_1055, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L840	#,
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.827
	movzbl	(%rax), %eax	# *PL_bufptr.827_1077, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L841	#,
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.828
	movzbl	(%rax), %eax	# *PL_bufptr.828_1079, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L841	#,
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.829
	movzbl	(%rax), %eax	# *PL_bufptr.829_1081, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L841	#,
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.830
	movzbl	(%rax), %eax	# *PL_bufptr.830_1083, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L841	#,
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.831
	movzbl	(%rax), %eax	# *PL_bufptr.831_1085, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L841	#,
.L840:
	.loc 1 2943 0 is_stmt 1
	call	S_check_uni	#
.L841:
	.loc 1 2944 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$43, %eax	#, D.28894
	jmp	.L2138	#
.L637:
	.loc 1 2948 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.832
	testl	%eax, %eax	# PL_expect.832
	je	.L842	#,
	.loc 1 2949 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.833
	movl	$1, %r8d	#,
	movl	$256, %ecx	#,
	movl	$PL_tokenbuf, %edx	#,
	movq	%rax, %rsi	# PL_bufend.833,
	movq	%rbx, %rdi	# s,
	call	S_scan_ident	#
	movq	%rax, %rbx	#, s
	.loc 1 2950 0
	movl	$0, PL_expect(%rip)	#, PL_expect
	.loc 1 2951 0
	movl	$42, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	S_force_ident	#
	.loc 1 2952 0
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	testb	%al, %al	# D.28896
	jne	.L843	#,
	.loc 1 2953 0
	movl	$2, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$42, %eax	#, D.28894
	jmp	.L2138	#
.L843:
	.loc 1 2954 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.835
	movl	72(%rax), %edx	# PL_curcop.835_1093->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.836
	cmpl	%eax, %edx	# PL_copline.836, D.28900
	jae	.L844	#,
	.loc 1 2954 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.837
	movl	72(%rax), %eax	# PL_curcop.837_1096->cop_line, iftmp.834
	jmp	.L845	#
.L844:
	.loc 1 2954 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.834
.L845:
	.loc 1 2954 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.834, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$42, %eax	#, D.28894
	jmp	.L2138	#
.L842:
	.loc 1 2956 0 is_stmt 1
	addq	$1, %rbx	#, s
	.loc 1 2957 0
	movzbl	(%rbx), %eax	# *s_1100, D.28896
	cmpb	$42, %al	#, D.28896
	jne	.L846	#,
	.loc 1 2958 0
	addq	$1, %rbx	#, s
	.loc 1 2959 0
	movl	$54, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$312, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L846:
	.loc 1 2961 0
	movl	$55, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$289, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L632:
	.loc 1 2964 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.838
	testl	%eax, %eax	# PL_expect.838
	jne	.L847	#,
	.loc 1 2965 0
	addq	$1, %rbx	#, s
	.loc 1 2966 0
	movl	$59, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$289, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L847:
	.loc 1 2968 0
	movb	$37, PL_tokenbuf(%rip)	#, PL_tokenbuf
	.loc 1 2969 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.839
	movl	$1, %r8d	#,
	movl	$255, %ecx	#,
	movl	$PL_tokenbuf+1, %edx	#,
	movq	%rax, %rsi	# PL_bufend.839,
	movq	%rbx, %rdi	# s,
	call	S_scan_ident	#
	movq	%rax, %rbx	#, s
	.loc 1 2970 0
	movzbl	PL_tokenbuf+1(%rip), %eax	# PL_tokenbuf, D.28896
	testb	%al, %al	# D.28896
	jne	.L848	#,
	.loc 1 2971 0
	movl	$2, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$37, %eax	#, D.28894
	jmp	.L2138	#
.L848:
	.loc 1 2973 0
	movb	$37, PL_pending_ident(%rip)	#, PL_pending_ident
	.loc 1 2974 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.841
	movl	72(%rax), %edx	# PL_curcop.841_1112->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.842
	cmpl	%eax, %edx	# PL_copline.842, D.28900
	jae	.L849	#,
	.loc 1 2974 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.843
	movl	72(%rax), %eax	# PL_curcop.843_1115->cop_line, iftmp.840
	jmp	.L850	#
.L849:
	.loc 1 2974 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.840
.L850:
	.loc 1 2974 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.840, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$37, %eax	#, D.28894
	jmp	.L2138	#
.L654:
	.loc 1 2977 0 is_stmt 1
	addq	$1, %rbx	#, s
	.loc 1 2978 0
	movl	$92, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$306, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L651:
	.loc 1 2980 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.844
	addl	$1, %eax	#, PL_lex_brackets.845
	movl	%eax, PL_lex_brackets(%rip)	# PL_lex_brackets.845, PL_lex_brackets
.L639:
	.loc 1 2984 0
	movq	%rbx, %rax	# s, s.846
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.846_1123, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 2985 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	%r13d, %eax	# tmp, D.28894
	jmp	.L2138	#
.L644:
	.loc 1 2987 0
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1128, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L851	#,
	.loc 1 2988 0
	movq	$0, -1384(%rbp)	#, len
	.loc 1 2989 0
	jmp	.L852	#
.L851:
	.loc 1 2991 0
	addq	$1, %rbx	#, s
	.loc 1 2992 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.847
	cmpl	$5, %eax	#, PL_expect.847
	je	.L854	#,
	cmpl	$6, %eax	#, PL_expect.847
	je	.L855	#,
	testl	%eax, %eax	# PL_expect.847
	jne	.L853	#,
.LBB50:
	.loc 1 2995 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.848
	testl	%eax, %eax	# PL_in_my.848
	je	.L853	#,
	.loc 1 2995 0 is_stmt 0 discriminator 1
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.849
	cmpl	$10, %eax	#, PL_lex_state.849
	jne	.L853	#,
	.loc 1 2997 0 is_stmt 1
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	.loc 1 2998 0
	jmp	.L857	#
.L854:
	.loc 1 3000 0
	movl	$4, PL_expect(%rip)	#, PL_expect
	.loc 1 3001 0
	jmp	.L857	#
.L855:
	.loc 1 3003 0
	movl	$7, PL_expect(%rip)	#, PL_expect
.L857:
	.loc 1 3005 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 3006 0
	movq	$0, -1320(%rbp)	#, attrs
	.loc 1 3007 0
	jmp	.L858	#
.L888:
	.loc 1 3008 0
	leaq	-1384(%rbp), %rax	#, tmp3412
	movq	%rax, %r8	# tmp3412,
	movl	$0, %ecx	#,
	movl	$256, %edx	#,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_word	#
	movq	%rax, %r12	#, d
	.loc 1 3009 0
	movzbl	(%rbx), %eax	# *s_18, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L859	#,
	.loc 1 3009 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_18, D.28896
	cmpb	$122, %al	#, D.28896
	jg	.L859	#,
	movq	-1384(%rbp), %rax	# len, len.850
	movl	%eax, %esi	# D.28894,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_keyword	#
	movl	%eax, %r13d	#, tmp
	testl	%r13d, %r13d	# tmp
	je	.L859	#,
	.loc 1 3010 0 is_stmt 1
	testl	%r13d, %r13d	# tmp
	jns	.L860	#,
	.loc 1 3010 0 is_stmt 0 discriminator 1
	negl	%r13d	# tmp
.L860:
	.loc 1 3011 0 is_stmt 1
	cmpl	$135, %r13d	#, tmp
	je	.L2143	#,
	cmpl	$135, %r13d	#, tmp
	jg	.L863	#,
	cmpl	$62, %r13d	#, tmp
	je	.L2143	#,
	cmpl	$100, %r13d	#, tmp
	je	.L2143	#,
	cmpl	$16, %r13d	#, tmp
	je	.L2143	#,
	.loc 1 3021 0
	jmp	.L2144	#
.L863:
	.loc 1 3011 0
	cmpl	$232, %r13d	#, tmp
	je	.L2143	#,
	cmpl	$241, %r13d	#, tmp
	je	.L2143	#,
	cmpl	$227, %r13d	#, tmp
	je	.L2143	#,
.L2144:
	.loc 1 3021 0
	nop
.L859:
	.loc 1 3024 0
	movzbl	(%r12), %eax	# *d_1164, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L865	#,
	.loc 1 3025 0
	movl	$1, %edx	#,
	movl	$1, %esi	#,
	movq	%r12, %rdi	# d,
	call	S_scan_str	#
	movq	%rax, %r12	#, d
	.loc 1 3026 0
	testq	%r12, %r12	# d
	jne	.L865	#,
	.loc 1 3030 0
	movq	-1384(%rbp), %rax	# len, len.851
	addq	%rbx, %rax	# s, PL_bufptr.852
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.852, PL_bufptr
	.loc 1 3031 0
	movl	$.LC73, %edi	#,
	call	Perl_yyerror	#
	.loc 1 3032 0
	cmpq	$0, -1320(%rbp)	#, attrs
	je	.L866	#,
	.loc 1 3033 0
	movq	-1320(%rbp), %rax	# attrs, tmp3413
	movq	%rax, %rdi	# tmp3413,
	call	Perl_op_free	#
.L866:
	.loc 1 3034 0
	movl	$0, %eax	#, D.28894
	jmp	.L2138	#
.L865:
	.loc 1 3037 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.853
	testq	%rax, %rax	# PL_lex_stuff.853
	je	.L867	#,
.LBB51:
	.loc 1 3038 0
	movq	-1384(%rbp), %rax	# len, len.854
	movq	%rax, %rsi	# len.854,
	movq	%rbx, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, -1144(%rbp)	# tmp3414, sv
	.loc 1 3039 0
	movq	PL_lex_stuff(%rip), %rcx	# PL_lex_stuff, PL_lex_stuff.855
	movq	-1144(%rbp), %rax	# sv, tmp3415
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# PL_lex_stuff.855,
	movq	%rax, %rdi	# tmp3415,
	call	Perl_sv_catsv_flags	#
	.loc 1 3040 0
	movq	-1144(%rbp), %rax	# sv, tmp3416
	movq	%rax, %rdx	# tmp3416,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rdx	#, D.28903
	movq	-1320(%rbp), %rax	# attrs, tmp3417
	movq	%rax, %rsi	# tmp3417,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, -1320(%rbp)	# tmp3418, attrs
	.loc 1 3042 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.856
	movq	%rax, %rdi	# PL_lex_stuff.856,
	call	Perl_sv_free	#
	.loc 1 3043 0
	movq	$0, PL_lex_stuff(%rip)	#, PL_lex_stuff
.LBE51:
	jmp	.L868	#
.L867:
	.loc 1 3046 0
	movq	-1384(%rbp), %rax	# len, len.857
	cmpq	$6, %rax	#, len.857
	jne	.L869	#,
	.loc 1 3046 0 is_stmt 0 discriminator 1
	movq	-1384(%rbp), %rax	# len, len.858
	movq	%rax, %rdx	# len.858,
	movl	$.LC74, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strncmp	#
	testl	%eax, %eax	# D.28894
	jne	.L869	#,
	.loc 1 3047 0 is_stmt 1
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.859
	cmpl	$137, %eax	#, PL_in_my.859
	je	.L870	#,
	.loc 1 3054 0
	movl	$.LC75, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 3047 0
	jmp	.L868	#
.L870:
	jmp	.L868	#
.L869:
	.loc 1 3059 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.860
	testl	%eax, %eax	# PL_in_my.860
	jne	.L871	#,
	.loc 1 3059 0 is_stmt 0 discriminator 1
	movq	-1384(%rbp), %rax	# len, len.861
	cmpq	$6, %rax	#, len.861
	jne	.L871	#,
	movq	-1384(%rbp), %rax	# len, len.862
	movq	%rax, %rdx	# len.862,
	movl	$.LC76, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strncmp	#
	testl	%eax, %eax	# D.28894
	jne	.L871	#,
	.loc 1 3060 0 is_stmt 1
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.863
	movq	(%rax), %rax	# PL_compcv.863_1191->sv_any, D.28911
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.864
	movq	(%rdx), %rdx	# PL_compcv.864_1193->sv_any, D.28911
	movzwl	136(%rdx), %edx	# _1194->xcv_flags, D.28912
	orb	$1, %dh	#, D.28912
	movw	%dx, 136(%rax)	# D.28912, _1192->xcv_flags
	jmp	.L868	#
.L871:
	.loc 1 3061 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.865
	testl	%eax, %eax	# PL_in_my.865
	jne	.L872	#,
	.loc 1 3061 0 is_stmt 0 discriminator 1
	movq	-1384(%rbp), %rax	# len, len.866
	cmpq	$6, %rax	#, len.866
	jne	.L872	#,
	movq	-1384(%rbp), %rax	# len, len.867
	movq	%rax, %rdx	# len.867,
	movl	$.LC77, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strncmp	#
	testl	%eax, %eax	# D.28894
	jne	.L872	#,
	.loc 1 3062 0 is_stmt 1
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.868
	movq	(%rax), %rax	# PL_compcv.868_1201->sv_any, D.28911
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.869
	movq	(%rdx), %rdx	# PL_compcv.869_1203->sv_any, D.28911
	movzwl	136(%rdx), %edx	# _1204->xcv_flags, D.28912
	orb	$-128, %dl	#, D.28912
	movw	%dx, 136(%rax)	# D.28912, _1202->xcv_flags
	jmp	.L868	#
.L872:
	.loc 1 3063 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.870
	testl	%eax, %eax	# PL_in_my.870
	jne	.L873	#,
	.loc 1 3063 0 is_stmt 0 discriminator 1
	movq	-1384(%rbp), %rax	# len, len.871
	cmpq	$6, %rax	#, len.871
	jne	.L873	#,
	movq	-1384(%rbp), %rax	# len, len.872
	movq	%rax, %rdx	# len.872,
	movl	$.LC78, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strncmp	#
	testl	%eax, %eax	# D.28894
	jne	.L873	#,
	.loc 1 3064 0 is_stmt 1
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.873
	movq	(%rax), %rax	# PL_compcv.873_1211->sv_any, D.28911
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.874
	movq	(%rdx), %rdx	# PL_compcv.874_1213->sv_any, D.28911
	movzwl	136(%rdx), %edx	# _1214->xcv_flags, D.28912
	orl	$64, %edx	#, D.28912
	movw	%dx, 136(%rax)	# D.28912, _1212->xcv_flags
	jmp	.L868	#
.L873:
	.loc 1 3076 0
	movq	-1384(%rbp), %rax	# len, len.875
	movq	%rax, %rsi	# len.875,
	movq	%rbx, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, %rdx	# D.28913,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rdx	#, D.28903
	movq	-1320(%rbp), %rax	# attrs, tmp3419
	movq	%rax, %rsi	# tmp3419,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, -1320(%rbp)	# tmp3420, attrs
.L868:
	.loc 1 3080 0
	movq	%r12, %rdi	# d,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 3081 0
	movzbl	(%rbx), %eax	# *s_1221, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L874	#,
	.loc 1 3081 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1223, D.28896
	cmpb	$58, %al	#, D.28896
	je	.L874	#,
	.loc 1 3082 0 is_stmt 1
	leaq	1(%rbx), %rax	#, D.28895
	movq	%rax, %rdi	# D.28895,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	jmp	.L858	#
.L874:
	.loc 1 3083 0
	cmpq	%r12, %rbx	# d, s
	jne	.L858	#,
	.loc 1 3084 0
	jmp	.L875	#
.L858:
	.loc 1 3007 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.877
	movzbl	37(%rax), %eax	# PL_curcop.877_1136->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L876	#,
	.loc 1 3007 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.878
	testq	%rax, %rax	# PL_linestr.878
	je	.L877	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.879
	movl	12(%rax), %eax	# PL_linestr.879_1141->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L877	#,
	.loc 1 3007 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.880
	movzbl	37(%rax), %eax	# PL_curcop.880_1144->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L878	#,
.L877:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.881
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L876	#,
.L878:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_18], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L879	#,
.L876:
	movzbl	(%rbx), %eax	# *s_18, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L880	#,
	movzbl	(%rbx), %eax	# *s_18, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L881	#,
.L880:
	.loc 1 3007 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_18, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L882	#,
	.loc 1 3007 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_18, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L881	#,
.L882:
	.loc 1 3007 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_18, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L883	#,
.L881:
	.loc 1 3007 0 discriminator 1
	movl	$1, %eax	#, iftmp.882
	jmp	.L884	#
.L883:
	.loc 1 3007 0 discriminator 3
	movl	$0, %eax	#, iftmp.882
.L884:
	.loc 1 3007 0 discriminator 4
	andl	$1, %eax	#, iftmp.876
	jmp	.L885	#
.L879:
	.loc 1 3007 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L886	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L886	#,
	.loc 1 3007 0 discriminator 3
	movl	$1, %eax	#, iftmp.883
	jmp	.L887	#
.L886:
	.loc 1 3007 0 discriminator 2
	movl	$0, %eax	#, iftmp.883
.L887:
	.loc 1 3007 0 discriminator 4
	andl	$1, %eax	#, iftmp.876
.L885:
	.loc 1 3007 0 discriminator 3
	testb	%al, %al	# iftmp.876
	jne	.L888	#,
.L875:
	.loc 1 3086 0 is_stmt 1
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.885
	testl	%eax, %eax	# PL_expect.885
	jne	.L889	#,
	.loc 1 3086 0 is_stmt 0 discriminator 1
	movl	$61, %eax	#, iftmp.884
	jmp	.L890	#
.L889:
	.loc 1 3086 0 discriminator 2
	movl	$123, %eax	#, iftmp.884
.L890:
	.loc 1 3086 0 discriminator 3
	movl	%eax, %r13d	# iftmp.884, tmp
	.loc 1 3087 0 is_stmt 1 discriminator 3
	movzbl	(%rbx), %eax	# *s_19, D.28896
	cmpb	$59, %al	#, D.28896
	je	.L864	#,
	.loc 1 3087 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_19, D.28896
	cmpb	$125, %al	#, D.28896
	je	.L864	#,
	movzbl	(%rbx), %eax	# *s_19, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	cmpl	%r13d, %eax	# tmp, D.28894
	je	.L864	#,
	cmpl	$61, %r13d	#, tmp
	jne	.L891	#,
	movzbl	(%rbx), %eax	# *s_19, D.28896
	cmpb	$41, %al	#, D.28896
	je	.L864	#,
.L891:
.LBB52:
	.loc 1 3088 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_19, D.28896
	cmpb	$39, %al	#, D.28896
	jne	.L892	#,
	.loc 1 3088 0 is_stmt 0 discriminator 1
	movl	$34, %eax	#, iftmp.886
	jmp	.L893	#
.L892:
	.loc 1 3088 0 discriminator 2
	movl	$39, %eax	#, iftmp.886
.L893:
	.loc 1 3088 0 discriminator 3
	movb	%al, -1436(%rbp)	# iftmp.886, q
	.loc 1 3090 0 is_stmt 1 discriminator 3
	cmpl	$61, %r13d	#, tmp
	jne	.L894	#,
	.loc 1 3090 0 is_stmt 0 discriminator 1
	cmpq	$0, -1320(%rbp)	#, attrs
	jne	.L894	#,
	.loc 1 3091 0 is_stmt 1
	movq	PL_bufptr(%rip), %rbx	# PL_bufptr, s
	.loc 1 3092 0
	jmp	.L853	#
.L894:
	.loc 1 3097 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	.loc 1 3098 0
	movzbl	(%rbx), %eax	# *s_19, D.28896
	testb	%al, %al	# D.28896
	jne	.L895	#,
	.loc 1 3099 0
	movl	$.LC79, %edi	#,
	call	Perl_yyerror	#
	jmp	.L896	#
.L895:
	.loc 1 3101 0
	movsbl	-1436(%rbp), %ecx	# q, D.28894
	.loc 1 3102 0
	movzbl	(%rbx), %eax	# *s_19, D.28896
	.loc 1 3101 0
	movsbl	%al, %edx	# D.28896, D.28894
	movsbl	-1436(%rbp), %eax	# q, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC80, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.28895,
	call	Perl_yyerror	#
.L896:
	.loc 1 3103 0
	cmpq	$0, -1320(%rbp)	#, attrs
	je	.L897	#,
	.loc 1 3104 0
	movq	-1320(%rbp), %rax	# attrs, tmp3421
	movq	%rax, %rdi	# tmp3421,
	call	Perl_op_free	#
.L897:
	.loc 1 3105 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$58, %eax	#, D.28894
	jmp	.L2138	#
.L2143:
.LBE52:
	.loc 1 3019 0
	nop
.L864:
	.loc 1 3108 0
	cmpq	$0, -1320(%rbp)	#, attrs
	je	.L898	#,
	.loc 1 3109 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.887
	cltq
	movq	-1320(%rbp), %rdx	# attrs, tmp3423
	movq	%rdx, PL_nextval(,%rax,8)	# tmp3423, PL_nextval[PL_nexttoke.887_1248].opval
	.loc 1 3110 0
	movl	$260, %edi	#,
	call	S_force_next	#
.L898:
	.loc 1 3112 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$298, %eax	#, D.28894
	jmp	.L2138	#
.L853:
.LBE50:
	.loc 1 3114 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$58, %eax	#, D.28894
	jmp	.L2138	#
.L635:
	.loc 1 3116 0
	addq	$1, %rbx	#, s
	.loc 1 3117 0
	movq	PL_last_lop(%rip), %rdx	# PL_last_lop, PL_last_lop.888
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.889
	cmpq	%rax, %rdx	# PL_oldoldbufptr.889, PL_last_lop.888
	je	.L899	#,
	.loc 1 3117 0 is_stmt 0 discriminator 1
	movq	PL_last_uni(%rip), %rdx	# PL_last_uni, PL_last_uni.890
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.891
	cmpq	%rax, %rdx	# PL_oldoldbufptr.891, PL_last_uni.890
	jne	.L900	#,
.L899:
	.loc 1 3118 0 is_stmt 1
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.892
	movq	%rax, PL_oldbufptr(%rip)	# PL_oldoldbufptr.892, PL_oldbufptr
	jmp	.L901	#
.L900:
	.loc 1 3120 0
	movl	$1, PL_expect(%rip)	#, PL_expect
.L901:
	.loc 1 3121 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 3122 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$40, %eax	#, D.28894
	jmp	.L2138	#
.L645:
	.loc 1 3124 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.894
	movl	72(%rax), %edx	# PL_curcop.894_1259->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.895
	cmpl	%eax, %edx	# PL_copline.895, D.28900
	jae	.L902	#,
	.loc 1 3124 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.896
	movl	72(%rax), %eax	# PL_curcop.896_1262->cop_line, iftmp.893
	jmp	.L903	#
.L902:
	.loc 1 3124 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.893
.L903:
	.loc 1 3124 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.893, PL_copline
	.loc 1 3125 0 is_stmt 1 discriminator 3
	movq	%rbx, %rax	# s, s.897
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.897_1265, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3126 0 discriminator 3
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	%r13d, %eax	# tmp, D.28894
	jmp	.L2138	#
.L636:
	.loc 1 3128 0
	movq	%rbx, %rax	# s, s.898
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.898_1270, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3129 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 3130 0
	movzbl	(%rbx), %eax	# *s_1274, D.28896
	cmpb	$123, %al	#, D.28896
	jne	.L904	#,
	.loc 1 3131 0
	movl	$4, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	%r13d, %eax	# tmp, D.28894
	jmp	.L2138	#
.L904:
	.loc 1 3132 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.900
	movl	72(%rax), %edx	# PL_curcop.900_1277->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.901
	cmpl	%eax, %edx	# PL_copline.901, D.28900
	jae	.L905	#,
	.loc 1 3132 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.902
	movl	72(%rax), %eax	# PL_curcop.902_1280->cop_line, iftmp.899
	jmp	.L906	#
.L905:
	.loc 1 3132 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.899
.L906:
	.loc 1 3132 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.899, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	%r13d, %eax	# tmp, D.28894
	jmp	.L2138	#
.L653:
	.loc 1 3134 0 is_stmt 1
	addq	$1, %rbx	#, s
	.loc 1 3135 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.903
	testl	%eax, %eax	# PL_lex_brackets.903
	jg	.L907	#,
	.loc 1 3136 0
	movl	$.LC81, %edi	#,
	call	Perl_yyerror	#
	jmp	.L908	#
.L907:
	.loc 1 3138 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.904
	subl	$1, %eax	#, PL_lex_brackets.905
	movl	%eax, PL_lex_brackets(%rip)	# PL_lex_brackets.905, PL_lex_brackets
.L908:
	.loc 1 3139 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.906
	cmpl	$9, %eax	#, PL_lex_state.906
	jne	.L909	#,
	.loc 1 3140 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.907
	testl	%eax, %eax	# PL_lex_brackets.907
	jne	.L909	#,
	.loc 1 3141 0
	movzbl	(%rbx), %eax	# *s_1284, D.28896
	cmpb	$91, %al	#, D.28896
	je	.L909	#,
	.loc 1 3141 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1284, D.28896
	cmpb	$123, %al	#, D.28896
	je	.L909	#,
	movzbl	(%rbx), %eax	# *s_1284, D.28896
	cmpb	$45, %al	#, D.28896
	jne	.L910	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1293, D.28896
	cmpb	$62, %al	#, D.28896
	je	.L909	#,
.L910:
	.loc 1 3142 0 is_stmt 1
	movl	$5, PL_lex_state(%rip)	#, PL_lex_state
.L909:
	.loc 1 3145 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.909
	movl	72(%rax), %edx	# PL_curcop.909_1295->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.910
	cmpl	%eax, %edx	# PL_copline.910, D.28900
	jae	.L911	#,
	.loc 1 3145 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.911
	movl	72(%rax), %eax	# PL_curcop.911_1298->cop_line, iftmp.908
	jmp	.L912	#
.L911:
	.loc 1 3145 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.908
.L912:
	.loc 1 3145 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.908, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$93, %eax	#, D.28894
	jmp	.L2138	#
.L658:
	.loc 1 3148 0 is_stmt 1
	addq	$1, %rbx	#, s
	.loc 1 3149 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.912
	cmpl	$100, %eax	#, PL_lex_brackets.912
	jle	.L913	#,
	.loc 1 3150 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.913
	addl	$10, %eax	#, D.28894
	movslq	%eax, %rdx	# D.28894, D.28898
	movq	PL_lex_brackstack(%rip), %rax	# PL_lex_brackstack, PL_lex_brackstack.914
	movq	%rdx, %rsi	# D.28898,
	movq	%rax, %rdi	# PL_lex_brackstack.914,
	call	Perl_safesysrealloc	#
	movq	%rax, PL_lex_brackstack(%rip)	# PL_lex_brackstack.915, PL_lex_brackstack
.L913:
	.loc 1 3152 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.916
	cmpl	$7, %eax	#, PL_expect.916
	ja	.L914	#,
	movl	%eax, %eax	# PL_expect.916, tmp3424
	movq	.L916(,%rax,8), %rax	#, tmp3425
	jmp	*%rax	# tmp3425
	.section	.rodata
	.align 8
	.align 4
.L916:
	.quad	.L2145
	.quad	.L917
	.quad	.L914
	.quad	.L914
	.quad	.L918
	.quad	.L918
	.quad	.L919
	.quad	.L919
	.text
.L917:
	.loc 1 3154 0
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.917
	testl	%eax, %eax	# PL_lex_formbrack.917
	je	.L920	#,
	.loc 1 3155 0
	subq	$1, %rbx	#, s
	.loc 1 3156 0
	movl	$7, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$292, %eax	#, D.28894
	jmp	.L2138	#
.L920:
	.loc 1 3158 0
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.918
	movq	PL_last_lop(%rip), %rax	# PL_last_lop, PL_last_lop.919
	cmpq	%rax, %rdx	# PL_last_lop.919, PL_oldoldbufptr.918
	jne	.L921	#,
	.loc 1 3159 0
	movq	PL_lex_brackstack(%rip), %rcx	# PL_lex_brackstack, PL_lex_brackstack.920
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.921
	leal	1(%rax), %edx	#, PL_lex_brackets.923
	movl	%edx, PL_lex_brackets(%rip)	# PL_lex_brackets.923, PL_lex_brackets
	cltq
	addq	%rcx, %rax	# PL_lex_brackstack.920, D.28895
	movb	$1, (%rax)	#, *_1465
	jmp	.L922	#
.L921:
	.loc 1 3161 0
	movq	PL_lex_brackstack(%rip), %rcx	# PL_lex_brackstack, PL_lex_brackstack.924
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.925
	leal	1(%rax), %edx	#, PL_lex_brackets.927
	movl	%edx, PL_lex_brackets(%rip)	# PL_lex_brackets.927, PL_lex_brackets
	cltq
	addq	%rcx, %rax	# PL_lex_brackstack.924, D.28895
	movb	$0, (%rax)	#, *_1471
.L922:
	.loc 1 3162 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$293, %eax	#, D.28894
	jmp	.L2138	#
.L925:
	.loc 1 3165 0
	addq	$1, %rbx	#, s
	jmp	.L923	#
.L2145:
	.loc 1 3164 0
	nop
.L923:
	.loc 1 3164 0 is_stmt 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.928
	cmpq	%rax, %rbx	# PL_bufend.928, s
	jae	.L924	#,
	.loc 1 3164 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_23, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L925	#,
	.loc 1 3164 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_23, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L925	#,
.L924:
	.loc 1 3166 0 is_stmt 1
	movq	%rbx, %r12	# s, d
	.loc 1 3167 0
	movb	$0, PL_tokenbuf(%rip)	#, PL_tokenbuf
	.loc 1 3168 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.929
	cmpq	%rax, %r12	# PL_bufend.929, d
	jae	.L926	#,
	.loc 1 3168 0 is_stmt 0 discriminator 1
	movzbl	(%r12), %eax	# *d_1477, D.28896
	cmpb	$45, %al	#, D.28896
	jne	.L926	#,
	.loc 1 3169 0 is_stmt 1
	movb	$45, PL_tokenbuf(%rip)	#, PL_tokenbuf
	.loc 1 3170 0
	addq	$1, %r12	#, d
	.loc 1 3171 0
	jmp	.L927	#
.L928:
	.loc 1 3172 0
	addq	$1, %r12	#, d
.L927:
	.loc 1 3171 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.930
	cmpq	%rax, %r12	# PL_bufend.930, d
	jae	.L926	#,
	.loc 1 3171 0 is_stmt 0 discriminator 2
	movzbl	(%r12), %eax	# *d_61, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L928	#,
	.loc 1 3171 0 discriminator 1
	movzbl	(%r12), %eax	# *d_61, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L928	#,
.L926:
	.loc 1 3174 0 is_stmt 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.931
	cmpq	%rax, %r12	# PL_bufend.931, d
	jae	.L918	#,
	.loc 1 3174 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.933
	movzbl	37(%rax), %eax	# PL_curcop.933_1486->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L929	#,
	.loc 1 3174 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.934
	testq	%rax, %rax	# PL_linestr.934
	je	.L930	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.935
	movl	12(%rax), %eax	# PL_linestr.935_1491->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L930	#,
	.loc 1 3174 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.936
	movzbl	37(%rax), %eax	# PL_curcop.936_1494->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L931	#,
.L930:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.937
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L929	#,
.L931:
	movzbl	(%r12), %eax	# MEM[(U8 *)d_62], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L932	#,
.L929:
	movzbl	(%r12), %eax	# *d_62, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L933	#,
	movzbl	(%r12), %eax	# *d_62, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L934	#,
.L933:
	.loc 1 3174 0 discriminator 2
	movzbl	(%r12), %eax	# *d_62, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L935	#,
	.loc 1 3174 0 discriminator 1
	movzbl	(%r12), %eax	# *d_62, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L934	#,
.L935:
	.loc 1 3174 0 discriminator 2
	movzbl	(%r12), %eax	# *d_62, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L936	#,
.L934:
	.loc 1 3174 0 discriminator 1
	movl	$1, %eax	#, iftmp.938
	jmp	.L937	#
.L936:
	.loc 1 3174 0 discriminator 3
	movl	$0, %eax	#, iftmp.938
.L937:
	.loc 1 3174 0 discriminator 4
	andl	$1, %eax	#, iftmp.932
	jmp	.L938	#
.L932:
	.loc 1 3174 0 discriminator 1
	movq	%r12, %rdi	# d,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L939	#,
	movq	%r12, %rdi	# d,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L939	#,
	.loc 1 3174 0 discriminator 3
	movl	$1, %eax	#, iftmp.939
	jmp	.L940	#
.L939:
	.loc 1 3174 0 discriminator 2
	movl	$0, %eax	#, iftmp.939
.L940:
	.loc 1 3174 0 discriminator 4
	andl	$1, %eax	#, iftmp.932
.L938:
	.loc 1 3174 0 discriminator 3
	testb	%al, %al	# iftmp.932
	je	.L918	#,
	.loc 1 3175 0 is_stmt 1
	leaq	-1384(%rbp), %rax	#, tmp3426
	movq	%rax, %r8	# tmp3426,
	movl	$0, %ecx	#,
	movl	$255, %edx	#,
	movl	$PL_tokenbuf+1, %esi	#,
	movq	%r12, %rdi	# d,
	call	S_scan_word	#
	movq	%rax, %r12	#, d
	.loc 1 3177 0
	jmp	.L941	#
.L943:
	.loc 1 3178 0
	addq	$1, %r12	#, d
.L941:
	.loc 1 3177 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.940
	cmpq	%rax, %r12	# PL_bufend.940, d
	jae	.L942	#,
	.loc 1 3177 0 is_stmt 0 discriminator 2
	movzbl	(%r12), %eax	# *d_63, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L943	#,
	.loc 1 3177 0 discriminator 1
	movzbl	(%r12), %eax	# *d_63, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L943	#,
.L942:
	.loc 1 3179 0 is_stmt 1
	movzbl	(%r12), %eax	# *d_63, D.28896
	cmpb	$125, %al	#, D.28896
	jne	.L918	#,
.LBB53:
	.loc 1 3180 0
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$45, %al	#, D.28896
	sete	%al	#, D.28899
	movb	%al, -1435(%rbp)	# D.28899, minus
	.loc 1 3181 0
	movsbq	-1435(%rbp), %rax	# minus, D.28897
	addq	%rbx, %rax	# s, D.28895
	movl	$0, %r8d	#,
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movl	$257, %esi	#,
	movq	%rax, %rdi	# D.28895,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 3182 0
	cmpb	$0, -1435(%rbp)	#, minus
	je	.L918	#,
	.loc 1 3183 0
	movl	$45, %edi	#,
	call	S_force_next	#
.L918:
.LBE53:
	.loc 1 3189 0
	movq	PL_lex_brackstack(%rip), %rcx	# PL_lex_brackstack, PL_lex_brackstack.941
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.942
	leal	1(%rax), %edx	#, PL_lex_brackets.944
	movl	%edx, PL_lex_brackets(%rip)	# PL_lex_brackets.944, PL_lex_brackets
	cltq
	addq	%rcx, %rax	# PL_lex_brackstack.941, D.28895
	movb	$3, (%rax)	#, *_1531
	.loc 1 3190 0
	movl	$3, PL_expect(%rip)	#, PL_expect
	.loc 1 3191 0
	jmp	.L944	#
.L919:
	.loc 1 3194 0
	movq	PL_lex_brackstack(%rip), %rcx	# PL_lex_brackstack, PL_lex_brackstack.945
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.946
	leal	1(%rax), %edx	#, PL_lex_brackets.948
	movl	%edx, PL_lex_brackets(%rip)	# PL_lex_brackets.948, PL_lex_brackets
	cltq
	addq	%rcx, %rax	# PL_lex_brackstack.945, D.28895
	movb	$0, (%rax)	#, *_1537
	.loc 1 3195 0
	movl	$3, PL_expect(%rip)	#, PL_expect
	.loc 1 3196 0
	jmp	.L944	#
.L914:
.LBB54:
	.loc 1 3199 0
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.949
	movq	PL_last_lop(%rip), %rax	# PL_last_lop, PL_last_lop.950
	cmpq	%rax, %rdx	# PL_last_lop.950, PL_oldoldbufptr.949
	jne	.L945	#,
	.loc 1 3200 0
	movq	PL_lex_brackstack(%rip), %rcx	# PL_lex_brackstack, PL_lex_brackstack.951
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.952
	leal	1(%rax), %edx	#, PL_lex_brackets.954
	movl	%edx, PL_lex_brackets(%rip)	# PL_lex_brackets.954, PL_lex_brackets
	cltq
	addq	%rcx, %rax	# PL_lex_brackstack.951, D.28895
	movb	$1, (%rax)	#, *_1545
	jmp	.L946	#
.L945:
	.loc 1 3202 0
	movq	PL_lex_brackstack(%rip), %rcx	# PL_lex_brackstack, PL_lex_brackstack.955
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.956
	leal	1(%rax), %edx	#, PL_lex_brackets.958
	movl	%edx, PL_lex_brackets(%rip)	# PL_lex_brackets.958, PL_lex_brackets
	cltq
	addq	%rcx, %rax	# PL_lex_brackstack.955, D.28895
	movb	$0, (%rax)	#, *_1551
.L946:
	.loc 1 3203 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 3204 0
	movzbl	(%rbx), %eax	# *s_1552, D.28896
	cmpb	$125, %al	#, D.28896
	jne	.L947	#,
	.loc 1 3205 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.959
	cmpl	$2, %eax	#, PL_expect.959
	jne	.L948	#,
	.loc 1 3205 0 is_stmt 0 discriminator 1
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.960
	cmpl	$9, %eax	#, PL_lex_state.960
	jne	.L948	#,
	.loc 1 3206 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 3208 0
	leaq	1(%rbx), %rax	#, PL_bufptr.961
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.961, PL_bufptr
	.loc 1 3209 0
	movl	$.LC82, %edi	#,
	call	Perl_yyerror	#
	.loc 1 3210 0
	jmp	.L944	#
.L948:
	.loc 1 3212 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$293, %eax	#, D.28894
	jmp	.L2138	#
.L947:
	.loc 1 3229 0
	movq	%rbx, -1312(%rbp)	# s, t
	.loc 1 3230 0
	movzbl	(%rbx), %eax	# *s_1552, D.28896
	cmpb	$39, %al	#, D.28896
	je	.L949	#,
	.loc 1 3230 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1552, D.28896
	cmpb	$34, %al	#, D.28896
	je	.L949	#,
	movzbl	(%rbx), %eax	# *s_1552, D.28896
	cmpb	$96, %al	#, D.28896
	jne	.L950	#,
.L949:
	.loc 1 3232 0 is_stmt 1
	addq	$1, -1312(%rbp)	#, t
	jmp	.L951	#
.L954:
	.loc 1 3233 0
	movq	-1312(%rbp), %rax	# t, t.962
	leaq	1(%rax), %rdx	#, tmp3427
	movq	%rdx, -1312(%rbp)	# tmp3427, t
	movzbl	(%rax), %eax	# *t.962_1723, D.28896
	cmpb	$92, %al	#, D.28896
	jne	.L951	#,
	.loc 1 3233 0 is_stmt 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3428
	movzbl	(%rax), %eax	# *t_1724, D.28896
	cmpb	$92, %al	#, D.28896
	je	.L952	#,
	movq	-1312(%rbp), %rax	# t, tmp3429
	movzbl	(%rax), %edx	# *t_1724, D.28896
	movzbl	(%rbx), %eax	# *s_1552, D.28896
	cmpb	%al, %dl	# D.28896, D.28896
	jne	.L951	#,
.L952:
	.loc 1 3234 0 is_stmt 1
	addq	$1, -1312(%rbp)	#, t
.L951:
	.loc 1 3232 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.963
	cmpq	%rax, -1312(%rbp)	# PL_bufend.963, t
	jae	.L953	#,
	.loc 1 3232 0 is_stmt 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3430
	movzbl	(%rax), %edx	# *t_107, D.28896
	movzbl	(%rbx), %eax	# *s_1552, D.28896
	cmpb	%al, %dl	# D.28896, D.28896
	jne	.L954	#,
.L953:
	.loc 1 3235 0 is_stmt 1
	addq	$1, -1312(%rbp)	#, t
	jmp	.L955	#
.L950:
	.loc 1 3237 0
	movzbl	(%rbx), %eax	# *s_1552, D.28896
	cmpb	$113, %al	#, D.28896
	jne	.L956	#,
	.loc 1 3238 0
	addq	$1, -1312(%rbp)	#, t
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.964
	cmpq	%rax, -1312(%rbp)	# PL_bufend.964, t
	jae	.L957	#,
	.loc 1 3239 0
	movq	-1312(%rbp), %rax	# t, tmp3431
	movzbl	(%rax), %eax	# *t_1563, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L958	#,
	.loc 1 3239 0 is_stmt 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3432
	movzbl	(%rax), %eax	# *t_1563, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L959	#,
.L958:
	.loc 1 3239 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3433
	movzbl	(%rax), %eax	# *t_1563, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L960	#,
	.loc 1 3239 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3434
	movzbl	(%rax), %eax	# *t_1563, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L959	#,
.L960:
	.loc 1 3239 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3435
	movzbl	(%rax), %eax	# *t_1563, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L961	#,
	.loc 1 3239 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3436
	movzbl	(%rax), %eax	# *t_1563, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L959	#,
.L961:
	.loc 1 3239 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3437
	movzbl	(%rax), %eax	# *t_1563, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L962	#,
.L959:
	.loc 1 3240 0 is_stmt 1
	movq	-1312(%rbp), %rax	# t, tmp3438
	movzbl	(%rax), %eax	# *t_1563, D.28896
	cmpb	$113, %al	#, D.28896
	je	.L963	#,
	.loc 1 3240 0 is_stmt 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3439
	movzbl	(%rax), %eax	# *t_1563, D.28896
	cmpb	$120, %al	#, D.28896
	jne	.L957	#,
.L963:
	.loc 1 3240 0 discriminator 1
	addq	$1, -1312(%rbp)	#, t
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.965
	cmpq	%rax, -1312(%rbp)	# PL_bufend.965, t
	jae	.L957	#,
	.loc 1 3241 0 is_stmt 1
	movq	-1312(%rbp), %rax	# t, tmp3440
	movzbl	(%rax), %eax	# *t_1574, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L964	#,
	.loc 1 3241 0 is_stmt 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3441
	movzbl	(%rax), %eax	# *t_1574, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L957	#,
.L964:
	.loc 1 3241 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3442
	movzbl	(%rax), %eax	# *t_1574, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L965	#,
	.loc 1 3241 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3443
	movzbl	(%rax), %eax	# *t_1574, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L957	#,
.L965:
	.loc 1 3241 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3444
	movzbl	(%rax), %eax	# *t_1574, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L966	#,
	.loc 1 3241 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3445
	movzbl	(%rax), %eax	# *t_1574, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L957	#,
.L966:
	.loc 1 3241 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3446
	movzbl	(%rax), %eax	# *t_1574, D.28896
	cmpb	$95, %al	#, D.28896
	je	.L957	#,
.L962:
.LBB55:
	.loc 1 3246 0 is_stmt 1
	movl	$1, -1412(%rbp)	#, brackets
	.loc 1 3248 0
	jmp	.L967	#
.L969:
	.loc 1 3249 0
	addq	$1, -1312(%rbp)	#, t
.L967:
	.loc 1 3248 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.966
	cmpq	%rax, -1312(%rbp)	# PL_bufend.966, t
	jae	.L968	#,
	.loc 1 3248 0 is_stmt 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3447
	movzbl	(%rax), %eax	# *t_109, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L969	#,
	.loc 1 3248 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3448
	movzbl	(%rax), %eax	# *t_109, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L969	#,
	movq	-1312(%rbp), %rax	# t, tmp3449
	movzbl	(%rax), %eax	# *t_109, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L969	#,
	movq	-1312(%rbp), %rax	# t, tmp3450
	movzbl	(%rax), %eax	# *t_109, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L969	#,
	movq	-1312(%rbp), %rax	# t, tmp3451
	movzbl	(%rax), %eax	# *t_109, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L969	#,
.L968:
	.loc 1 3251 0 is_stmt 1
	movq	-1312(%rbp), %rax	# t, tmp3452
	leaq	1(%rax), %rdx	#, D.28895
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.967
	cmpq	%rax, %rdx	# PL_bufend.967, D.28895
	jae	.L970	#,
	.loc 1 3251 0 is_stmt 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3453
	movzbl	(%rax), %eax	# *t_109, D.28896
	cmpb	$61, %al	#, D.28896
	jne	.L970	#,
	movq	-1312(%rbp), %rax	# t, tmp3454
	addq	$1, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1594, D.28896
	cmpb	$62, %al	#, D.28896
	jne	.L970	#,
	.loc 1 3252 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$293, %eax	#, D.28894
	jmp	.L2138	#
.L970:
	.loc 1 3254 0
	movq	-1312(%rbp), %rax	# t, tmp3455
	movzbl	(%rax), %eax	# *t_109, tmp3456
	movb	%al, -1445(%rbp)	# tmp3456, term
	.loc 1 3255 0
	movzbl	-1445(%rbp), %eax	# term, tmp3457
	movb	%al, -1434(%rbp)	# tmp3457, open
	.loc 1 3256 0
	cmpb	$0, -1445(%rbp)	#, term
	je	.L971	#,
	.loc 1 3256 0 is_stmt 0 discriminator 1
	movsbl	-1445(%rbp), %eax	# term, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC83, %edi	#,
	call	strchr	#
	movq	%rax, -1136(%rbp)	# tmp3458, tmps
	cmpq	$0, -1136(%rbp)	#, tmps
	je	.L971	#,
	.loc 1 3257 0 is_stmt 1
	movq	-1136(%rbp), %rax	# tmps, tmp3459
	movzbl	5(%rax), %eax	# MEM[(char *)tmps_1600 + 5B], tmp3460
	movb	%al, -1445(%rbp)	# tmp3460, term
.L971:
	.loc 1 3258 0
	movzbl	-1445(%rbp), %eax	# term, tmp3461
	movb	%al, -1433(%rbp)	# tmp3461, close
	.loc 1 3259 0
	movzbl	-1434(%rbp), %eax	# open, tmp3462
	cmpb	-1433(%rbp), %al	# close, tmp3462
	jne	.L972	#,
	.loc 1 3260 0
	addq	$1, -1312(%rbp)	#, t
	jmp	.L973	#
.L977:
	.loc 1 3261 0
	movq	-1312(%rbp), %rax	# t, tmp3463
	movzbl	(%rax), %eax	# *t_111, D.28896
	cmpb	$92, %al	#, D.28896
	jne	.L974	#,
	.loc 1 3261 0 is_stmt 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3464
	leaq	1(%rax), %rdx	#, D.28895
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.968
	cmpq	%rax, %rdx	# PL_bufend.968, D.28895
	jae	.L974	#,
	cmpb	$92, -1434(%rbp)	#, open
	je	.L974	#,
	.loc 1 3262 0 is_stmt 1
	addq	$1, -1312(%rbp)	#, t
	jmp	.L975	#
.L974:
	.loc 1 3263 0
	movq	-1312(%rbp), %rax	# t, tmp3465
	movzbl	(%rax), %eax	# *t_111, D.28896
	cmpb	-1434(%rbp), %al	# open, D.28896
	jne	.L975	#,
	.loc 1 3264 0
	nop
	jmp	.L978	#
.L975:
	.loc 1 3260 0
	addq	$1, -1312(%rbp)	#, t
.L973:
	.loc 1 3260 0 is_stmt 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.969
	cmpq	%rax, -1312(%rbp)	# PL_bufend.969, t
	jb	.L977	#,
	jmp	.L978	#
.L972:
	.loc 1 3267 0 is_stmt 1
	addq	$1, -1312(%rbp)	#, t
	jmp	.L979	#
.L983:
	.loc 1 3268 0
	movq	-1312(%rbp), %rax	# t, tmp3466
	movzbl	(%rax), %eax	# *t_113, D.28896
	cmpb	$92, %al	#, D.28896
	jne	.L980	#,
	.loc 1 3268 0 is_stmt 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3467
	leaq	1(%rax), %rdx	#, D.28895
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.970
	cmpq	%rax, %rdx	# PL_bufend.970, D.28895
	jae	.L980	#,
	.loc 1 3269 0 is_stmt 1
	addq	$1, -1312(%rbp)	#, t
	jmp	.L981	#
.L980:
	.loc 1 3270 0
	movq	-1312(%rbp), %rax	# t, tmp3468
	movzbl	(%rax), %eax	# *t_113, D.28896
	cmpb	-1433(%rbp), %al	# close, D.28896
	jne	.L982	#,
	.loc 1 3270 0 is_stmt 0 discriminator 1
	subl	$1, -1412(%rbp)	#, brackets
	cmpl	$0, -1412(%rbp)	#, brackets
	jle	.L978	#,
.L982:
	.loc 1 3272 0 is_stmt 1
	movq	-1312(%rbp), %rax	# t, tmp3469
	movzbl	(%rax), %eax	# *t_113, D.28896
	cmpb	-1434(%rbp), %al	# open, D.28896
	jne	.L981	#,
	.loc 1 3273 0
	addl	$1, -1412(%rbp)	#, brackets
.L981:
	.loc 1 3267 0
	addq	$1, -1312(%rbp)	#, t
.L979:
	.loc 1 3267 0 is_stmt 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.971
	cmpq	%rax, -1312(%rbp)	# PL_bufend.971, t
	jb	.L983	#,
.L978:
	.loc 1 3276 0 is_stmt 1
	addq	$1, -1312(%rbp)	#, t
.LBE55:
	.loc 1 3242 0
	nop
	jmp	.L955	#
.L957:
	.loc 1 3280 0
	jmp	.L985	#
.L996:
	.loc 1 3281 0
	movq	-1312(%rbp), %rax	# t, tmp3470
	movzbl	(%rax), %eax	# MEM[(U8 *)t_116], D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.28904
	movzbl	%al, %eax	# D.28904, D.28897
	addq	%rax, -1312(%rbp)	# D.28897, t
.L985:
	.loc 1 3280 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.972
	cmpq	%rax, -1312(%rbp)	# PL_bufend.972, t
	jae	.L955	#,
	.loc 1 3280 0 is_stmt 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.973
	movzbl	37(%rax), %eax	# PL_curcop.973_1624->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L986	#,
	.loc 1 3280 0 discriminator 4
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.974
	testq	%rax, %rax	# PL_linestr.974
	je	.L987	#,
	.loc 1 3280 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.975
	movl	12(%rax), %eax	# PL_linestr.975_1629->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L987	#,
	.loc 1 3280 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.976
	movzbl	37(%rax), %eax	# PL_curcop.976_1632->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L988	#,
.L987:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.977
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L986	#,
.L988:
	movq	-1312(%rbp), %rax	# t, tmp3472
	movzbl	(%rax), %eax	# MEM[(U8 *)t_116], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L989	#,
.L986:
	.loc 1 3280 0 discriminator 3
	movq	-1312(%rbp), %rax	# t, tmp3473
	movzbl	(%rax), %eax	# *t_116, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L990	#,
	.loc 1 3280 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3474
	movzbl	(%rax), %eax	# *t_116, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L991	#,
.L990:
	.loc 1 3280 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3475
	movzbl	(%rax), %eax	# *t_116, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L992	#,
	.loc 1 3280 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3476
	movzbl	(%rax), %eax	# *t_116, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L991	#,
.L992:
	.loc 1 3280 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3477
	movzbl	(%rax), %eax	# *t_116, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L993	#,
	.loc 1 3280 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3478
	movzbl	(%rax), %eax	# *t_116, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L991	#,
.L993:
	.loc 1 3280 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3479
	movzbl	(%rax), %eax	# *t_116, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L994	#,
.L991:
	.loc 1 3280 0 discriminator 1
	movl	$1, %eax	#, iftmp.978
	jmp	.L995	#
.L994:
	.loc 1 3280 0 discriminator 3
	movl	$0, %eax	#, iftmp.978
.L995:
	.loc 1 3280 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L996	#,
	jmp	.L955	#
.L989:
	.loc 1 3280 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3480
	movq	%rax, %rdi	# tmp3480,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28896
	jne	.L996	#,
	jmp	.L955	#
.L956:
	.loc 1 3283 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.980
	movzbl	37(%rax), %eax	# PL_curcop.980_1655->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L997	#,
	.loc 1 3283 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.981
	testq	%rax, %rax	# PL_linestr.981
	je	.L998	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.982
	movl	12(%rax), %eax	# PL_linestr.982_1660->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L998	#,
	.loc 1 3283 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.983
	movzbl	37(%rax), %eax	# PL_curcop.983_1663->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L999	#,
.L998:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.984
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L997	#,
.L999:
	movq	-1312(%rbp), %rax	# t, tmp3481
	movzbl	(%rax), %eax	# MEM[(U8 *)t_1558], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1000	#,
.L997:
	movq	-1312(%rbp), %rax	# t, tmp3482
	movzbl	(%rax), %eax	# *t_1558, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1001	#,
	movq	-1312(%rbp), %rax	# t, tmp3483
	movzbl	(%rax), %eax	# *t_1558, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1002	#,
.L1001:
	.loc 1 3283 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3484
	movzbl	(%rax), %eax	# *t_1558, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1003	#,
	.loc 1 3283 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3485
	movzbl	(%rax), %eax	# *t_1558, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1002	#,
.L1003:
	.loc 1 3283 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3486
	movzbl	(%rax), %eax	# *t_1558, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1004	#,
	.loc 1 3283 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3487
	movzbl	(%rax), %eax	# *t_1558, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L1002	#,
.L1004:
	.loc 1 3283 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3488
	movzbl	(%rax), %eax	# *t_1558, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1005	#,
.L1002:
	.loc 1 3283 0 discriminator 1
	movl	$1, %eax	#, iftmp.985
	jmp	.L1006	#
.L1005:
	.loc 1 3283 0 discriminator 3
	movl	$0, %eax	#, iftmp.985
.L1006:
	.loc 1 3283 0 discriminator 4
	andl	$1, %eax	#, iftmp.979
	jmp	.L1007	#
.L1000:
	.loc 1 3283 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3489
	movq	%rax, %rdi	# tmp3489,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28896
	setne	%al	#, iftmp.979
.L1007:
	.loc 1 3283 0 discriminator 3
	testb	%al, %al	# iftmp.979
	je	.L955	#,
	.loc 1 3284 0 is_stmt 1
	movq	-1312(%rbp), %rax	# t, tmp3490
	movzbl	(%rax), %eax	# MEM[(U8 *)t_1558], D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.28904
	movzbl	%al, %eax	# D.28904, D.28897
	addq	%rax, -1312(%rbp)	# D.28897, t
	.loc 1 3285 0
	jmp	.L1008	#
.L1019:
	.loc 1 3286 0
	movq	-1312(%rbp), %rax	# t, tmp3492
	movzbl	(%rax), %eax	# MEM[(U8 *)t_118], D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.28904
	movzbl	%al, %eax	# D.28904, D.28897
	addq	%rax, -1312(%rbp)	# D.28897, t
.L1008:
	.loc 1 3285 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.986
	cmpq	%rax, -1312(%rbp)	# PL_bufend.986, t
	jae	.L955	#,
	.loc 1 3285 0 is_stmt 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.987
	movzbl	37(%rax), %eax	# PL_curcop.987_1688->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1009	#,
	.loc 1 3285 0 discriminator 4
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.988
	testq	%rax, %rax	# PL_linestr.988
	je	.L1010	#,
	.loc 1 3285 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.989
	movl	12(%rax), %eax	# PL_linestr.989_1693->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1010	#,
	.loc 1 3285 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.990
	movzbl	37(%rax), %eax	# PL_curcop.990_1696->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1011	#,
.L1010:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.991
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1009	#,
.L1011:
	movq	-1312(%rbp), %rax	# t, tmp3494
	movzbl	(%rax), %eax	# MEM[(U8 *)t_118], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1012	#,
.L1009:
	.loc 1 3285 0 discriminator 3
	movq	-1312(%rbp), %rax	# t, tmp3495
	movzbl	(%rax), %eax	# *t_118, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1013	#,
	.loc 1 3285 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3496
	movzbl	(%rax), %eax	# *t_118, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1014	#,
.L1013:
	.loc 1 3285 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3497
	movzbl	(%rax), %eax	# *t_118, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1015	#,
	.loc 1 3285 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3498
	movzbl	(%rax), %eax	# *t_118, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1014	#,
.L1015:
	.loc 1 3285 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3499
	movzbl	(%rax), %eax	# *t_118, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1016	#,
	.loc 1 3285 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3500
	movzbl	(%rax), %eax	# *t_118, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L1014	#,
.L1016:
	.loc 1 3285 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3501
	movzbl	(%rax), %eax	# *t_118, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1017	#,
.L1014:
	.loc 1 3285 0 discriminator 1
	movl	$1, %eax	#, iftmp.992
	jmp	.L1018	#
.L1017:
	.loc 1 3285 0 discriminator 3
	movl	$0, %eax	#, iftmp.992
.L1018:
	.loc 1 3285 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L1019	#,
	.loc 1 3288 0 is_stmt 1
	jmp	.L1020	#
.L1012:
	.loc 1 3285 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3502
	movq	%rax, %rdi	# tmp3502,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28896
	jne	.L1019	#,
.L955:
	.loc 1 3288 0
	jmp	.L1020	#
.L1022:
	.loc 1 3289 0
	addq	$1, -1312(%rbp)	#, t
.L1020:
	.loc 1 3288 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.993
	cmpq	%rax, -1312(%rbp)	# PL_bufend.993, t
	jae	.L1021	#,
	.loc 1 3288 0 is_stmt 0 discriminator 2
	movq	-1312(%rbp), %rax	# t, tmp3503
	movzbl	(%rax), %eax	# *t_120, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1022	#,
	.loc 1 3288 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3504
	movzbl	(%rax), %eax	# *t_120, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1022	#,
	movq	-1312(%rbp), %rax	# t, tmp3505
	movzbl	(%rax), %eax	# *t_120, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1022	#,
	movq	-1312(%rbp), %rax	# t, tmp3506
	movzbl	(%rax), %eax	# *t_120, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1022	#,
	movq	-1312(%rbp), %rax	# t, tmp3507
	movzbl	(%rax), %eax	# *t_120, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1022	#,
.L1021:
	.loc 1 3292 0 is_stmt 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.994
	cmpq	%rax, -1312(%rbp)	# PL_bufend.994, t
	jae	.L1023	#,
	.loc 1 3292 0 is_stmt 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3508
	movzbl	(%rax), %eax	# *t_120, D.28896
	cmpb	$44, %al	#, D.28896
	jne	.L1024	#,
	movzbl	(%rbx), %eax	# *s_1552, D.28896
	cmpb	$113, %al	#, D.28896
	je	.L1025	#,
	movzbl	(%rbx), %eax	# *s_1552, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1025	#,
	movzbl	(%rbx), %eax	# *s_1552, D.28896
	cmpb	$122, %al	#, D.28896
	jg	.L1025	#,
.L1024:
	.loc 1 3293 0 is_stmt 1
	movq	-1312(%rbp), %rax	# t, tmp3509
	movzbl	(%rax), %eax	# *t_120, D.28896
	cmpb	$61, %al	#, D.28896
	jne	.L1023	#,
	.loc 1 3293 0 is_stmt 0 discriminator 1
	movq	-1312(%rbp), %rax	# t, tmp3510
	addq	$1, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1744, D.28896
	cmpb	$62, %al	#, D.28896
	jne	.L1023	#,
.L1025:
	.loc 1 3294 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$293, %eax	#, D.28894
	jmp	.L2138	#
.L1023:
	.loc 1 3295 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.995
	cmpl	$2, %eax	#, PL_expect.995
	jne	.L1026	#,
	.loc 1 3296 0
	movl	$1, PL_expect(%rip)	#, PL_expect
.LBE54:
	.loc 1 3302 0
	jmp	.L2146	#
.L1026:
.LBB56:
	.loc 1 3298 0
	movq	PL_lex_brackstack(%rip), %rax	# PL_lex_brackstack, PL_lex_brackstack.996
	movl	PL_lex_brackets(%rip), %edx	# PL_lex_brackets, PL_lex_brackets.997
	movslq	%edx, %rdx	# PL_lex_brackets.997, D.28897
	subq	$1, %rdx	#, D.28897
	addq	%rdx, %rax	# D.28897, D.28895
	movb	$3, (%rax)	#, *_1752
	.loc 1 3299 0
	movl	$3, PL_expect(%rip)	#, PL_expect
.L2146:
.LBE56:
	.loc 1 3302 0
	nop
.L944:
	.loc 1 3304 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.998
	movl	72(%rax), %eax	# PL_curcop.998_1753->cop_line, D.28900
	movl	%eax, PL_yylval(%rip)	# D.28894, PL_yylval.ival
	.loc 1 3305 0
	movzbl	(%rbx), %eax	# *s_25, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1028	#,
	.loc 1 3305 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_25, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1028	#,
	movzbl	(%rbx), %eax	# *s_25, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1028	#,
	movzbl	(%rbx), %eax	# *s_25, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1028	#,
	movzbl	(%rbx), %eax	# *s_25, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1028	#,
	movzbl	(%rbx), %eax	# *s_25, D.28896
	cmpb	$35, %al	#, D.28896
	jne	.L1029	#,
.L1028:
	.loc 1 3306 0 is_stmt 1
	movl	$-1, PL_copline(%rip)	#, PL_copline
.L1029:
	.loc 1 3307 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$123, %eax	#, D.28894
	jmp	.L2138	#
.L621:
	.loc 1 3310 0
	addq	$1, %rbx	#, s
	.loc 1 3311 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.999
	testl	%eax, %eax	# PL_lex_brackets.999
	jg	.L1030	#,
	.loc 1 3312 0
	movl	$.LC84, %edi	#,
	call	Perl_yyerror	#
	jmp	.L1031	#
.L1030:
	.loc 1 3314 0
	movq	PL_lex_brackstack(%rip), %rdx	# PL_lex_brackstack, PL_lex_brackstack.1000
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.1001
	subl	$1, %eax	#, PL_lex_brackets.1002
	movl	%eax, PL_lex_brackets(%rip)	# PL_lex_brackets.1002, PL_lex_brackets
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.1003
	cltq
	addq	%rdx, %rax	# PL_lex_brackstack.1000, D.28895
	movzbl	(%rax), %eax	# *_4642, D.28896
	movsbl	%al, %eax	# D.28896, PL_expect.1004
	movl	%eax, PL_expect(%rip)	# PL_expect.1004, PL_expect
.L1031:
	.loc 1 3315 0
	movl	PL_lex_brackets(%rip), %edx	# PL_lex_brackets, PL_lex_brackets.1005
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.1006
	cmpl	%eax, %edx	# PL_lex_formbrack.1006, PL_lex_brackets.1005
	jge	.L1032	#,
	.loc 1 3315 0 is_stmt 0 discriminator 1
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.1007
	cmpl	$9, %eax	#, PL_lex_state.1007
	je	.L1032	#,
	.loc 1 3316 0 is_stmt 1
	movl	$0, PL_lex_formbrack(%rip)	#, PL_lex_formbrack
.L1032:
	.loc 1 3317 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.1008
	cmpl	$9, %eax	#, PL_lex_state.1008
	jne	.L1033	#,
	.loc 1 3318 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.1009
	testl	%eax, %eax	# PL_lex_brackets.1009
	jne	.L1033	#,
	.loc 1 3319 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1010
	andl	$128, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1034	#,
	.loc 1 3320 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1011
	andl	$127, %eax	#, PL_expect.1012
	movl	%eax, PL_expect(%rip)	# PL_expect.1012, PL_expect
	.loc 1 3321 0
	movl	$5, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 3322 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	.loc 1 3323 0
	call	Perl_yylex	#
	jmp	.L2138	#
.L1034:
	.loc 1 3325 0
	movzbl	(%rbx), %eax	# *s_4635, D.28896
	cmpb	$45, %al	#, D.28896
	jne	.L1035	#,
	.loc 1 3325 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4656, D.28896
	cmpb	$62, %al	#, D.28896
	jne	.L1035	#,
	.loc 1 3326 0 is_stmt 1
	movl	$4, PL_lex_state(%rip)	#, PL_lex_state
	jmp	.L1033	#
.L1035:
	.loc 1 3327 0
	movzbl	(%rbx), %eax	# *s_4635, D.28896
	cmpb	$91, %al	#, D.28896
	je	.L1033	#,
	.loc 1 3327 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_4635, D.28896
	cmpb	$123, %al	#, D.28896
	je	.L1033	#,
	.loc 1 3328 0 is_stmt 1
	movl	$5, PL_lex_state(%rip)	#, PL_lex_state
.L1033:
	.loc 1 3331 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1013
	andl	$128, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1036	#,
	.loc 1 3332 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1014
	andl	$127, %eax	#, PL_expect.1015
	movl	%eax, PL_expect(%rip)	# PL_expect.1015, PL_expect
	.loc 1 3333 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	.loc 1 3334 0
	call	Perl_yylex	#
	jmp	.L2138	#
.L1036:
	.loc 1 3336 0
	movl	$125, %edi	#,
	call	S_force_next	#
	.loc 1 3337 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$59, %eax	#, D.28894
	jmp	.L2138	#
.L633:
	.loc 1 3339 0
	addq	$1, %rbx	#, s
	.loc 1 3340 0
	movq	%rbx, %rax	# s, s.1016
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.1016_1303, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3341 0
	cmpl	$38, %r13d	#, tmp
	jne	.L1037	#,
	.loc 1 3342 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$305, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L1037:
	.loc 1 3343 0
	subq	$1, %rbx	#, s
	.loc 1 3344 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1017
	testl	%eax, %eax	# PL_expect.1017
	jne	.L1038	#,
	.loc 1 3345 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1018
	movq	80(%rax), %rax	# PL_curcop.1018_1310->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1039	#,
	.loc 1 3345 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1019
	movq	80(%rax), %rax	# PL_curcop.1019_1312->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1039	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1020
	movq	80(%rax), %rax	# PL_curcop.1020_1314->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1040	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1021
	movq	80(%rax), %rax	# PL_curcop.1021_1316->cop_warnings, D.28913
	movq	(%rax), %rax	# _1317->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_1318].xpv_pv, D.28895
	addq	$9, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1320, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$16, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1040	#,
.L1039:
	.loc 1 3345 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1022
	movq	80(%rax), %rax	# PL_curcop.1022_1324->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1041	#,
	.loc 1 3345 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1023
	movzbl	%al, %eax	# PL_dowarn.1023, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1041	#,
.L1040:
	.loc 1 3346 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1025
	movzbl	37(%rax), %eax	# PL_curcop.1025_1329->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1042	#,
	.loc 1 3346 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1026
	testq	%rax, %rax	# PL_linestr.1026
	je	.L1043	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1027
	movl	12(%rax), %eax	# PL_linestr.1027_1334->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1043	#,
	.loc 1 3346 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1028
	movzbl	37(%rax), %eax	# PL_curcop.1028_1337->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1044	#,
.L1043:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1029
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1042	#,
.L1044:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_1308], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1045	#,
.L1042:
	movzbl	(%rbx), %eax	# *s_1308, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1046	#,
	movzbl	(%rbx), %eax	# *s_1308, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1047	#,
.L1046:
	.loc 1 3346 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_1308, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1048	#,
	.loc 1 3346 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1308, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1047	#,
.L1048:
	.loc 1 3346 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_1308, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1049	#,
.L1047:
	.loc 1 3346 0 discriminator 1
	movl	$1, %eax	#, iftmp.1030
	jmp	.L1050	#
.L1049:
	.loc 1 3346 0 discriminator 3
	movl	$0, %eax	#, iftmp.1030
.L1050:
	.loc 1 3346 0 discriminator 4
	andl	$1, %eax	#, iftmp.1024
	jmp	.L1051	#
.L1045:
	.loc 1 3346 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1052	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1052	#,
	.loc 1 3346 0 discriminator 3
	movl	$1, %eax	#, iftmp.1031
	jmp	.L1053	#
.L1052:
	.loc 1 3346 0 discriminator 2
	movl	$0, %eax	#, iftmp.1031
.L1053:
	.loc 1 3346 0 discriminator 4
	andl	$1, %eax	#, iftmp.1024
.L1051:
	.loc 1 3346 0 discriminator 3
	testb	%al, %al	# iftmp.1024
	je	.L1041	#,
	.loc 1 3346 0 discriminator 4
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.1032
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.1033
	cmpq	%rax, %rdx	# PL_linestart.1033, PL_bufptr.1032
	jne	.L1041	#,
	.loc 1 3348 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1034
	movl	72(%rax), %edx	# PL_curcop.1034_1359->cop_line, D.28900
	subl	$1, %edx	#, D.28900
	movl	%edx, 72(%rax)	# D.28900, PL_curcop.1034_1359->cop_line
	.loc 1 3349 0
	movl	$PL_warn_nosemi, %esi	#,
	movl	$38, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 3350 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1035
	movl	72(%rax), %edx	# PL_curcop.1035_1362->cop_line, D.28900
	addl	$1, %edx	#, D.28900
	movl	%edx, 72(%rax)	# D.28900, PL_curcop.1035_1362->cop_line
.L1041:
	.loc 1 3352 0
	movl	$91, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$307, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L1038:
	.loc 1 3355 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1036
	leaq	-1(%rbx), %rdi	#, D.28895
	movl	$1, %r8d	#,
	movl	$256, %ecx	#,
	movl	$PL_tokenbuf, %edx	#,
	movq	%rax, %rsi	# PL_bufend.1036,
	call	S_scan_ident	#
	movq	%rax, %rbx	#, s
	.loc 1 3356 0
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	testb	%al, %al	# D.28896
	je	.L1054	#,
	.loc 1 3357 0
	movl	$0, PL_expect(%rip)	#, PL_expect
	.loc 1 3358 0
	movl	$38, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	S_force_ident	#
	.loc 1 3362 0
	movl	$2048, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 3363 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1038
	movl	72(%rax), %edx	# PL_curcop.1038_1370->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1039
	cmpl	%eax, %edx	# PL_copline.1039, D.28900
	jae	.L1056	#,
	jmp	.L2140	#
.L1054:
	.loc 1 3361 0
	movl	$2, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$38, %eax	#, D.28894
	jmp	.L2138	#
.L2140:
	.loc 1 3363 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1040
	movl	72(%rax), %eax	# PL_curcop.1040_1373->cop_line, iftmp.1037
	jmp	.L1057	#
.L1056:
	.loc 1 3363 0 is_stmt 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1037
.L1057:
	.loc 1 3363 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1037, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$38, %eax	#, D.28894
	jmp	.L2138	#
.L659:
	.loc 1 3366 0 is_stmt 1
	addq	$1, %rbx	#, s
	.loc 1 3367 0
	movq	%rbx, %rax	# s, s.1041
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.1041_1379, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3368 0
	cmpl	$124, %r13d	#, tmp
	jne	.L1058	#,
	.loc 1 3369 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$304, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L1058:
	.loc 1 3370 0
	subq	$1, %rbx	#, s
	.loc 1 3371 0
	movl	$93, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$306, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L647:
	.loc 1 3373 0
	addq	$1, %rbx	#, s
	.loc 1 3374 0
	movq	%rbx, %rax	# s, s.1042
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.1042_1387, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3375 0
	cmpl	$61, %r13d	#, tmp
	jne	.L1059	#,
	.loc 1 3376 0
	movl	$78, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$288, %eax	#, D.28894
	jmp	.L2138	#
.L1059:
	.loc 1 3377 0
	cmpl	$62, %r13d	#, tmp
	jne	.L1060	#,
	.loc 1 3378 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$44, %eax	#, D.28894
	jmp	.L2138	#
.L1060:
	.loc 1 3379 0
	cmpl	$126, %r13d	#, tmp
	jne	.L1061	#,
	.loc 1 3380 0
	movl	$31, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$309, %eax	#, D.28894
	jmp	.L2138	#
.L1061:
	.loc 1 3381 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1043
	movq	80(%rax), %rax	# PL_curcop.1043_1394->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1062	#,
	.loc 1 3381 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1044
	movq	80(%rax), %rax	# PL_curcop.1044_1396->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1062	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1045
	movq	80(%rax), %rax	# PL_curcop.1045_1398->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1063	#,
	.loc 1 3381 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1046
	movq	80(%rax), %rax	# PL_curcop.1046_1400->cop_warnings, D.28913
	movq	(%rax), %rax	# _1401->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_1402].xpv_pv, D.28895
	addq	$7, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1404, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1063	#,
.L1062:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1047
	movq	80(%rax), %rax	# PL_curcop.1047_1408->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1064	#,
	.loc 1 3381 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1048
	movzbl	%al, %eax	# PL_dowarn.1048, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1064	#,
.L1063:
	testl	%r13d, %r13d	# tmp
	je	.L1064	#,
	movzbl	(%rbx), %eax	# *s_1388, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1065	#,
	.loc 1 3381 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_1388, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1065	#,
	.loc 1 3381 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1388, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1065	#,
	movzbl	(%rbx), %eax	# *s_1388, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1065	#,
	movzbl	(%rbx), %eax	# *s_1388, D.28896
	cmpb	$12, %al	#, D.28896
	jne	.L1064	#,
.L1065:
	movl	%r13d, %esi	# tmp,
	movl	$.LC85, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	je	.L1064	#,
	.loc 1 3382 0 is_stmt 1
	movl	%r13d, %edx	# tmp,
	movl	$.LC86, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1064:
	.loc 1 3383 0
	subq	$1, %rbx	#, s
	.loc 1 3384 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1049
	cmpl	$3, %eax	#, PL_expect.1049
	jne	.L1066	#,
	.loc 1 3384 0 is_stmt 0 discriminator 1
	cmpl	$64, %r13d	#, tmp
	jle	.L1067	#,
	cmpl	$90, %r13d	#, tmp
	jle	.L1068	#,
.L1067:
	.loc 1 3384 0 discriminator 2
	cmpl	$96, %r13d	#, tmp
	jle	.L1066	#,
	.loc 1 3384 0 discriminator 1
	cmpl	$122, %r13d	#, tmp
	jg	.L1066	#,
.L1068:
	.loc 1 3385 0 is_stmt 1 discriminator 1
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.1050
	addq	$1, %rax	#, D.28895
	.loc 1 3384 0 discriminator 1
	cmpq	%rbx, %rax	# s, D.28895
	je	.L1069	#,
	.loc 1 3385 0
	leaq	-2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1423, D.28896
	cmpb	$10, %al	#, D.28896
	jne	.L1066	#,
.L1069:
	.loc 1 3387 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.1051
	testl	%eax, %eax	# PL_in_eval.1051
	je	.L1070	#,
	.loc 1 3387 0 is_stmt 0 discriminator 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.1052
	testq	%rax, %rax	# PL_rsfp.1052
	jne	.L1070	#,
	.loc 1 3388 0 is_stmt 1
	movq	PL_bufend(%rip), %r12	# PL_bufend, d
	.loc 1 3389 0
	jmp	.L1071	#
.L1074:
	.loc 1 3390 0
	movq	%rbx, %rax	# s, s.1053
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.1053_1428, D.28896
	cmpb	$10, %al	#, D.28896
	jne	.L1071	#,
	.loc 1 3391 0
	movq	%rbx, %rdi	# s,
	call	S_incline	#
	.loc 1 3392 0
	movl	$4, %edx	#,
	movl	$.LC64, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strncmp	#
	testl	%eax, %eax	# D.28894
	jne	.L1071	#,
	.loc 1 3393 0
	movl	$10, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strchr	#
	movq	%rax, %rbx	#, s
	.loc 1 3394 0
	testq	%rbx, %rbx	# s
	je	.L1072	#,
	.loc 1 3395 0
	addq	$1, %rbx	#, s
	jmp	.L1073	#
.L1072:
	.loc 1 3397 0
	movq	%r12, %rbx	# d, s
.L1073:
	.loc 1 3398 0
	movq	%rbx, %rdi	# s,
	call	S_incline	#
	.loc 1 3399 0
	jmp	.L622	#
.L1071:
	.loc 1 3389 0 discriminator 1
	cmpq	%r12, %rbx	# d, s
	jb	.L1074	#,
	.loc 1 3403 0
	jmp	.L622	#
.L1070:
	.loc 1 3405 0
	movq	PL_bufend(%rip), %rbx	# PL_bufend, s
	.loc 1 3406 0
	movb	$1, PL_doextract(%rip)	#, PL_doextract
	.loc 1 3407 0
	jmp	.L622	#
.L1066:
	.loc 1 3409 0
	movl	PL_lex_brackets(%rip), %edx	# PL_lex_brackets, PL_lex_brackets.1054
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.1055
	cmpl	%eax, %edx	# PL_lex_formbrack.1055, PL_lex_brackets.1054
	jge	.L1075	#,
.LBB57:
	.loc 1 3414 0
	movq	%rbx, -1304(%rbp)	# s, t
	jmp	.L1076	#
.L1077:
	.loc 1 3414 0 is_stmt 0 discriminator 2
	addq	$1, -1304(%rbp)	#, t
.L1076:
	.loc 1 3414 0 discriminator 1
	movq	-1304(%rbp), %rax	# t, tmp3511
	movzbl	(%rax), %eax	# *t_125, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1077	#,
	.loc 1 3414 0 discriminator 3
	movq	-1304(%rbp), %rax	# t, tmp3512
	movzbl	(%rax), %eax	# *t_125, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1077	#,
	.loc 1 3414 0 discriminator 1
	movq	-1304(%rbp), %rax	# t, tmp3513
	movzbl	(%rax), %eax	# *t_125, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1077	#,
	.loc 1 3416 0 is_stmt 1
	movq	-1304(%rbp), %rax	# t, tmp3514
	movzbl	(%rax), %eax	# *t_125, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1078	#,
	.loc 1 3416 0 is_stmt 0 discriminator 1
	movq	-1304(%rbp), %rax	# t, tmp3515
	movzbl	(%rax), %eax	# *t_125, D.28896
	cmpb	$35, %al	#, D.28896
	jne	.L1075	#,
.L1078:
	.loc 1 3417 0 is_stmt 1
	subq	$1, %rbx	#, s
	.loc 1 3418 0
	movl	$4, PL_expect(%rip)	#, PL_expect
	.loc 1 3419 0
	jmp	.L658	#
.L1075:
.LBE57:
	.loc 1 3422 0
	movl	$0, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 3423 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$303, %eax	#, D.28894
	jmp	.L2138	#
.L629:
	.loc 1 3425 0
	addq	$1, %rbx	#, s
	.loc 1 3426 0
	movq	%rbx, %rax	# s, s.1056
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.1056_1764, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3427 0
	cmpl	$61, %r13d	#, tmp
	jne	.L1079	#,
	.loc 1 3428 0
	movl	$80, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$288, %eax	#, D.28894
	jmp	.L2138	#
.L1079:
	.loc 1 3429 0
	cmpl	$126, %r13d	#, tmp
	jne	.L1080	#,
	.loc 1 3430 0
	movl	$96, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$309, %eax	#, D.28894
	jmp	.L2138	#
.L1080:
	.loc 1 3431 0
	subq	$1, %rbx	#, s
	.loc 1 3432 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$33, %eax	#, D.28894
	jmp	.L2138	#
.L646:
	.loc 1 3434 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1057
	testl	%eax, %eax	# PL_expect.1057
	je	.L1081	#,
	.loc 1 3435 0
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1773, D.28896
	cmpb	$60, %al	#, D.28896
	je	.L1082	#,
	.loc 1 3435 0 is_stmt 0 discriminator 1
	movl	$62, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	jne	.L1082	#,
	.loc 1 3436 0 is_stmt 1
	call	S_check_uni	#
.L1082:
	.loc 1 3437 0
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1776, D.28896
	cmpb	$60, %al	#, D.28896
	jne	.L1083	#,
	.loc 1 3438 0
	movq	%rbx, %rdi	# s,
	call	S_scan_heredoc	#
	movq	%rax, %rbx	#, s
	jmp	.L1084	#
.L1083:
	.loc 1 3440 0
	movq	%rbx, %rdi	# s,
	call	S_scan_inputsymbol	#
	movq	%rax, %rbx	#, s
.L1084:
	.loc 1 3441 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1059
	movl	72(%rax), %edx	# PL_curcop.1059_1780->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1060
	cmpl	%eax, %edx	# PL_copline.1060, D.28900
	jae	.L1085	#,
	.loc 1 3441 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1061
	movl	72(%rax), %eax	# PL_curcop.1061_1783->cop_line, iftmp.1058
	jmp	.L1086	#
.L1085:
	.loc 1 3441 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1058
.L1086:
	.loc 1 3441 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1058, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L1081:
	.loc 1 3443 0 is_stmt 1
	addq	$1, %rbx	#, s
	.loc 1 3444 0
	movq	%rbx, %rax	# s, s.1062
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.1062_1788, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3445 0
	cmpl	$60, %r13d	#, tmp
	jne	.L1087	#,
	.loc 1 3446 0
	movl	$68, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$308, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L1087:
	.loc 1 3447 0
	cmpl	$61, %r13d	#, tmp
	jne	.L1088	#,
	.loc 1 3448 0
	movq	%rbx, %rax	# s, s.1063
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.1063_1793, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3449 0
	cmpl	$62, %r13d	#, tmp
	jne	.L1089	#,
	.loc 1 3450 0
	movl	$82, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$288, %eax	#, D.28894
	jmp	.L2138	#
.L1089:
	.loc 1 3451 0
	subq	$1, %rbx	#, s
	.loc 1 3452 0
	movl	$74, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$287, %eax	#, D.28894
	jmp	.L2138	#
.L1088:
	.loc 1 3454 0
	subq	$1, %rbx	#, s
	.loc 1 3455 0
	movl	$70, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$287, %eax	#, D.28894
	jmp	.L2138	#
.L648:
	.loc 1 3457 0
	addq	$1, %rbx	#, s
	.loc 1 3458 0
	movq	%rbx, %rax	# s, s.1064
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.1064_1803, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3459 0
	cmpl	$62, %r13d	#, tmp
	jne	.L1090	#,
	.loc 1 3460 0
	movl	$69, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$308, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L1090:
	.loc 1 3461 0
	cmpl	$61, %r13d	#, tmp
	jne	.L1091	#,
	.loc 1 3462 0
	movl	$76, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$287, %eax	#, D.28894
	jmp	.L2138	#
.L1091:
	.loc 1 3463 0
	subq	$1, %rbx	#, s
	.loc 1 3464 0
	movl	$72, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$287, %eax	#, D.28894
	jmp	.L2138	#
.L631:
	.loc 1 3467 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1066
	movl	72(%rax), %edx	# PL_curcop.1066_1811->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1067
	cmpl	%eax, %edx	# PL_copline.1067, D.28900
	jae	.L1092	#,
	.loc 1 3467 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1068
	movl	72(%rax), %eax	# PL_curcop.1068_1814->cop_line, iftmp.1065
	jmp	.L1093	#
.L1092:
	.loc 1 3467 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1065
.L1093:
	.loc 1 3467 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1065, PL_copline
	.loc 1 3469 0 is_stmt 1 discriminator 3
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1069
	testl	%eax, %eax	# PL_expect.1069
	jne	.L1094	#,
	.loc 1 3470 0
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.1070
	testl	%eax, %eax	# PL_lex_formbrack.1070
	je	.L1094	#,
	.loc 1 3470 0 is_stmt 0 discriminator 1
	movl	PL_lex_brackets(%rip), %edx	# PL_lex_brackets, PL_lex_brackets.1071
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.1072
	cmpl	%eax, %edx	# PL_lex_formbrack.1072, PL_lex_brackets.1071
	jne	.L1094	#,
	.loc 1 3471 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 3472 0
	call	S_depcom	#
	.loc 1 3473 0
	movl	$44, %eax	#, D.28894
	jmp	.L2138	#
.L1094:
	.loc 1 3477 0
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1822, D.28896
	cmpb	$35, %al	#, D.28896
	jne	.L1095	#,
	.loc 1 3477 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1073
	movzbl	37(%rax), %eax	# PL_curcop.1073_1824->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1096	#,
	.loc 1 3477 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1074
	testq	%rax, %rax	# PL_linestr.1074
	je	.L1097	#,
	.loc 1 3477 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1075
	movl	12(%rax), %eax	# PL_linestr.1075_1829->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1097	#,
	.loc 1 3477 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1076
	movzbl	37(%rax), %eax	# PL_curcop.1076_1832->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1098	#,
.L1097:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1077
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1096	#,
.L1098:
	leaq	2(%rbx), %rax	#, D.28914
	movzbl	(%rax), %eax	# *_1838, D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1099	#,
.L1096:
	.loc 1 3477 0 discriminator 2
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1847, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1100	#,
	.loc 1 3477 0 discriminator 1
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1849, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1101	#,
.L1100:
	.loc 1 3477 0 discriminator 2
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1851, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1102	#,
	.loc 1 3477 0 discriminator 1
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1853, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1101	#,
.L1102:
	.loc 1 3477 0 discriminator 2
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1855, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1103	#,
.L1101:
	.loc 1 3477 0 discriminator 1
	movl	$1, %eax	#, iftmp.1078
	jmp	.L1104	#
.L1103:
	.loc 1 3477 0 discriminator 3
	movl	$0, %eax	#, iftmp.1078
.L1104:
	.loc 1 3477 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L1105	#,
	.loc 1 3477 0 discriminator 1
	jmp	.L1106	#
.L1099:
	leaq	2(%rbx), %rax	#, D.28914
	movq	%rax, %rdi	# D.28914,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1107	#,
	leaq	2(%rbx), %rax	#, D.28914
	movq	%rax, %rdi	# D.28914,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1107	#,
	.loc 1 3477 0 discriminator 3
	movl	$1, %eax	#, iftmp.1079
	jmp	.L1108	#
.L1107:
	.loc 1 3477 0 discriminator 2
	movl	$0, %eax	#, iftmp.1079
.L1108:
	.loc 1 3477 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L1105	#,
.L1106:
	.loc 1 3477 0 discriminator 2
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1860, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC87, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	je	.L1095	#,
.L1105:
	.loc 1 3478 0 is_stmt 1
	movb	$64, PL_tokenbuf(%rip)	#, PL_tokenbuf
	.loc 1 3479 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1080
	leaq	1(%rbx), %rdi	#, D.28895
	movl	$0, %r8d	#,
	movl	$255, %ecx	#,
	movl	$PL_tokenbuf+1, %edx	#,
	movq	%rax, %rsi	# PL_bufend.1080,
	call	S_scan_ident	#
	movq	%rax, %rbx	#, s
	.loc 1 3481 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1081
	testl	%eax, %eax	# PL_expect.1081
	jne	.L1109	#,
	.loc 1 3482 0
	movq	%rbx, %rsi	# s,
	movl	$.LC88, %edi	#,
	call	S_no_op	#
.L1109:
	.loc 1 3483 0
	movzbl	PL_tokenbuf+1(%rip), %eax	# PL_tokenbuf, D.28896
	testb	%al, %al	# D.28896
	jne	.L1110	#,
	.loc 1 3484 0
	movl	$2, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$291, %eax	#, D.28894
	jmp	.L2138	#
.L1110:
	.loc 1 3485 0
	movl	$0, PL_expect(%rip)	#, PL_expect
	.loc 1 3486 0
	movb	$35, PL_pending_ident(%rip)	#, PL_pending_ident
	.loc 1 3487 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$291, %eax	#, D.28894
	jmp	.L2138	#
.L1095:
	.loc 1 3490 0
	movb	$36, PL_tokenbuf(%rip)	#, PL_tokenbuf
	.loc 1 3491 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1082
	movl	$0, %r8d	#,
	movl	$255, %ecx	#,
	movl	$PL_tokenbuf+1, %edx	#,
	movq	%rax, %rsi	# PL_bufend.1082,
	movq	%rbx, %rdi	# s,
	call	S_scan_ident	#
	movq	%rax, %rbx	#, s
	.loc 1 3493 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1083
	testl	%eax, %eax	# PL_expect.1083
	jne	.L1111	#,
	.loc 1 3494 0
	movq	%rbx, %rsi	# s,
	movl	$.LC89, %edi	#,
	call	S_no_op	#
.L1111:
	.loc 1 3495 0
	movzbl	PL_tokenbuf+1(%rip), %eax	# PL_tokenbuf, D.28896
	testb	%al, %al	# D.28896
	jne	.L1112	#,
	.loc 1 3496 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1084
	cmpq	%rax, %rbx	# PL_bufend.1084, s
	jne	.L1113	#,
	.loc 1 3497 0
	movl	$.LC90, %edi	#,
	call	Perl_yyerror	#
.L1113:
	.loc 1 3498 0
	movl	$2, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$36, %eax	#, D.28894
	jmp	.L2138	#
.L1112:
	.loc 1 3502 0
	movzbl	PL_tokenbuf+1(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$91, %al	#, D.28896
	jne	.L1114	#,
	.loc 1 3502 0 is_stmt 0 discriminator 1
	movzbl	PL_tokenbuf+2(%rip), %eax	# PL_tokenbuf, D.28896
	testb	%al, %al	# D.28896
	jne	.L1114	#,
	.loc 1 3504 0 is_stmt 1
	movl	PL_compiling+68(%rip), %eax	# PL_compiling.cop_arybase, D.28894
	.loc 1 3503 0
	cltq
	movq	%rax, %rdi	# D.28902,
	call	Perl_newSViv	#
	movq	%rax, %rdx	# D.28913,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.28903, PL_yylval.opval
	.loc 1 3505 0
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movb	$32, 37(%rax)	#, _1883->op_private
	.loc 1 3506 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1086
	movl	72(%rax), %edx	# PL_curcop.1086_1884->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1087
	cmpl	%eax, %edx	# PL_copline.1087, D.28900
	jae	.L1115	#,
	.loc 1 3506 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1088
	movl	72(%rax), %eax	# PL_curcop.1088_1887->cop_line, iftmp.1085
	jmp	.L1116	#
.L1115:
	.loc 1 3506 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1085
.L1116:
	.loc 1 3506 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1085, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$260, %eax	#, D.28894
	jmp	.L2138	#
.L1114:
	.loc 1 3509 0 is_stmt 1
	movq	%rbx, %r12	# s, d
	.loc 1 3510 0
	movzbl	(%rbx), %eax	# *s_1872, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3511 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.1089
	cmpl	$10, %eax	#, PL_lex_state.1089
	jne	.L1117	#,
	.loc 1 3512 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
.L1117:
	.loc 1 3514 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1090
	cmpl	$2, %eax	#, PL_expect.1090
	jne	.L1118	#,
	.loc 1 3514 0 is_stmt 0 discriminator 2
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.1091
	movq	PL_last_lop(%rip), %rax	# PL_last_lop, PL_last_lop.1092
	cmpq	%rax, %rdx	# PL_last_lop.1092, PL_oldoldbufptr.1091
	jne	.L1119	#,
.L1118:
	.loc 1 3514 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	S_intuit_more	#
	testl	%eax, %eax	# D.28894
	je	.L1119	#,
.LBB58:
	.loc 1 3516 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$91, %al	#, D.28896
	jne	.L1120	#,
	.loc 1 3517 0
	movb	$64, PL_tokenbuf(%rip)	#, PL_tokenbuf
	.loc 1 3518 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1093
	movq	80(%rax), %rax	# PL_curcop.1093_1901->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1121	#,
	.loc 1 3518 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1094
	movq	80(%rax), %rax	# PL_curcop.1094_1903->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1121	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1095
	movq	80(%rax), %rax	# PL_curcop.1095_1905->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1122	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1096
	movq	80(%rax), %rax	# PL_curcop.1096_1907->cop_warnings, D.28913
	movq	(%rax), %rax	# _1908->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_1909].xpv_pv, D.28895
	addq	$7, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1911, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1122	#,
.L1121:
	.loc 1 3518 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1097
	movq	80(%rax), %rax	# PL_curcop.1097_1915->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1119	#,
	.loc 1 3518 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1098
	movzbl	%al, %eax	# PL_dowarn.1098, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1119	#,
.L1122:
	.loc 1 3519 0 is_stmt 1
	leaq	1(%rbx), %rax	#, tmp3516
	movq	%rax, -1296(%rbp)	# tmp3516, t
	jmp	.L1124	#
.L1125:
	.loc 1 3521 0
	addq	$1, -1296(%rbp)	#, t
.L1124:
	.loc 1 3520 0 discriminator 1
	movq	-1296(%rbp), %rax	# t, tmp3517
	movzbl	(%rax), %eax	# *t_126, D.28896
	.loc 1 3519 0 discriminator 1
	cmpb	$32, %al	#, D.28896
	je	.L1125	#,
	.loc 1 3520 0
	movq	-1296(%rbp), %rax	# t, tmp3518
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1125	#,
	.loc 1 3520 0 is_stmt 0 discriminator 1
	movq	-1296(%rbp), %rax	# t, tmp3519
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1125	#,
	movq	-1296(%rbp), %rax	# t, tmp3520
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1125	#,
	movq	-1296(%rbp), %rax	# t, tmp3521
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1125	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1099
	movzbl	37(%rax), %eax	# PL_curcop.1099_1926->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	.loc 1 3519 0 is_stmt 1 discriminator 1
	testl	%eax, %eax	# D.28894
	jne	.L1126	#,
	.loc 1 3520 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1100
	testq	%rax, %rax	# PL_linestr.1100
	je	.L1127	#,
	.loc 1 3520 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1101
	movl	12(%rax), %eax	# PL_linestr.1101_1931->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1127	#,
	.loc 1 3520 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1102
	movzbl	37(%rax), %eax	# PL_curcop.1102_1934->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1128	#,
.L1127:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1103
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1126	#,
.L1128:
	movq	-1296(%rbp), %rax	# t, tmp3522
	movzbl	(%rax), %eax	# MEM[(U8 *)t_126], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1129	#,
.L1126:
	movq	-1296(%rbp), %rax	# t, tmp3523
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1130	#,
	movq	-1296(%rbp), %rax	# t, tmp3524
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1131	#,
.L1130:
	.loc 1 3520 0 discriminator 2
	movq	-1296(%rbp), %rax	# t, tmp3525
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1132	#,
	.loc 1 3520 0 discriminator 1
	movq	-1296(%rbp), %rax	# t, tmp3526
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1131	#,
.L1132:
	.loc 1 3520 0 discriminator 2
	movq	-1296(%rbp), %rax	# t, tmp3527
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1133	#,
	.loc 1 3520 0 discriminator 1
	movq	-1296(%rbp), %rax	# t, tmp3528
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L1131	#,
.L1133:
	.loc 1 3520 0 discriminator 2
	movq	-1296(%rbp), %rax	# t, tmp3529
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1134	#,
.L1131:
	.loc 1 3520 0 discriminator 1
	movl	$1, %eax	#, iftmp.1104
	jmp	.L1135	#
.L1134:
	.loc 1 3520 0 discriminator 3
	movl	$0, %eax	#, iftmp.1104
.L1135:
	.loc 1 3520 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L1125	#,
	.loc 1 3520 0 discriminator 1
	jmp	.L1136	#
.L1129:
	movq	-1296(%rbp), %rax	# t, tmp3530
	movq	%rax, %rdi	# tmp3530,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28896
	jne	.L1125	#,
.L1136:
	.loc 1 3520 0 discriminator 2
	movq	-1296(%rbp), %rax	# t, tmp3531
	movzbl	(%rax), %eax	# *t_126, D.28896
	cmpb	$36, %al	#, D.28896
	je	.L1125	#,
	.loc 1 3522 0 is_stmt 1
	movq	-1296(%rbp), %rax	# t, t.1105
	leaq	1(%rax), %rdx	#, tmp3532
	movq	%rdx, -1296(%rbp)	# tmp3532, t
	movzbl	(%rax), %eax	# *t.1105_1953, D.28896
	cmpb	$44, %al	#, D.28896
	jne	.L1119	#,
	.loc 1 3523 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.1106
	movq	%rax, %rdi	# PL_bufptr.1106,
	call	S_skipspace	#
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.1107, PL_bufptr
	.loc 1 3524 0
	jmp	.L1137	#
.L1139:
	.loc 1 3525 0
	addq	$1, -1296(%rbp)	#, t
.L1137:
	.loc 1 3524 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1108
	cmpq	%rax, -1296(%rbp)	# PL_bufend.1108, t
	jae	.L1138	#,
	.loc 1 3524 0 is_stmt 0 discriminator 2
	movq	-1296(%rbp), %rax	# t, tmp3533
	movzbl	(%rax), %eax	# *t_127, D.28896
	cmpb	$93, %al	#, D.28896
	jne	.L1139	#,
.L1138:
	.loc 1 3526 0 is_stmt 1
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.1109
	.loc 1 3528 0
	movq	-1296(%rbp), %rcx	# t, t.1110
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.1111
	subq	%rdx, %rcx	# PL_bufptr.1112, D.28902
	movq	%rcx, %rdx	# D.28902, D.28902
	.loc 1 3526 0
	addq	$1, %rdx	#, D.28902
	movq	%rax, %rcx	# PL_bufptr.1109,
	movl	$.LC91, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	jmp	.L1119	#
.L1120:
	.loc 1 3532 0
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$123, %al	#, D.28896
	jne	.L1119	#,
	.loc 1 3533 0
	movb	$37, PL_tokenbuf(%rip)	#, PL_tokenbuf
	.loc 1 3534 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1113
	movq	80(%rax), %rax	# PL_curcop.1113_1969->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1140	#,
	.loc 1 3534 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1114
	movq	80(%rax), %rax	# PL_curcop.1114_1971->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1140	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1115
	movq	80(%rax), %rax	# PL_curcop.1115_1973->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1141	#,
	.loc 1 3534 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1116
	movq	80(%rax), %rax	# PL_curcop.1116_1975->cop_warnings, D.28913
	movq	(%rax), %rax	# _1976->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_1977].xpv_pv, D.28895
	addq	$7, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_1979, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1141	#,
.L1140:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1117
	movq	80(%rax), %rax	# PL_curcop.1117_1983->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1119	#,
	.loc 1 3534 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1118
	movzbl	%al, %eax	# PL_dowarn.1118, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1119	#,
.L1141:
	movl	$.LC92, %esi	#,
	movl	$PL_tokenbuf+1, %edi	#,
	call	strcmp	#
	testl	%eax, %eax	# D.28894
	jne	.L1119	#,
	movl	$125, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strchr	#
	movq	%rax, -1296(%rbp)	# tmp3534, t
	cmpq	$0, -1296(%rbp)	#, t
	je	.L1119	#,
	.loc 1 3535 0 is_stmt 1
	movq	-1296(%rbp), %rax	# t, tmp3535
	movl	$61, %esi	#,
	movq	%rax, %rdi	# tmp3535,
	call	strchr	#
	movq	%rax, -1296(%rbp)	# tmp3536, t
	cmpq	$0, -1296(%rbp)	#, t
	je	.L1119	#,
.LBB59:
	.loc 1 3539 0
	addq	$1, -1296(%rbp)	#, t
	jmp	.L1142	#
.L1143:
	.loc 1 3539 0 is_stmt 0 discriminator 2
	addq	$1, -1296(%rbp)	#, t
.L1142:
	.loc 1 3539 0 discriminator 1
	movq	-1296(%rbp), %rax	# t, tmp3537
	movzbl	(%rax), %eax	# *t_128, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1143	#,
	.loc 1 3539 0 discriminator 3
	movq	-1296(%rbp), %rax	# t, tmp3538
	movzbl	(%rax), %eax	# *t_128, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1143	#,
	.loc 1 3539 0 discriminator 1
	movq	-1296(%rbp), %rax	# t, tmp3539
	movzbl	(%rax), %eax	# *t_128, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1143	#,
	movq	-1296(%rbp), %rax	# t, tmp3540
	movzbl	(%rax), %eax	# *t_128, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1143	#,
	movq	-1296(%rbp), %rax	# t, tmp3541
	movzbl	(%rax), %eax	# *t_128, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1143	#,
	.loc 1 3540 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1120
	movzbl	37(%rax), %eax	# PL_curcop.1120_1997->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1144	#,
	.loc 1 3540 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1121
	testq	%rax, %rax	# PL_linestr.1121
	je	.L1145	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1122
	movl	12(%rax), %eax	# PL_linestr.1122_2002->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1145	#,
	.loc 1 3540 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1123
	movzbl	37(%rax), %eax	# PL_curcop.1123_2005->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1146	#,
.L1145:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1124
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1144	#,
.L1146:
	movq	-1296(%rbp), %rax	# t, tmp3542
	movzbl	(%rax), %eax	# MEM[(U8 *)t_128], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1147	#,
.L1144:
	movq	-1296(%rbp), %rax	# t, tmp3543
	movzbl	(%rax), %eax	# *t_128, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1148	#,
	movq	-1296(%rbp), %rax	# t, tmp3544
	movzbl	(%rax), %eax	# *t_128, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1149	#,
.L1148:
	.loc 1 3540 0 discriminator 2
	movq	-1296(%rbp), %rax	# t, tmp3545
	movzbl	(%rax), %eax	# *t_128, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1150	#,
	.loc 1 3540 0 discriminator 1
	movq	-1296(%rbp), %rax	# t, tmp3546
	movzbl	(%rax), %eax	# *t_128, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1149	#,
.L1150:
	.loc 1 3540 0 discriminator 2
	movq	-1296(%rbp), %rax	# t, tmp3547
	movzbl	(%rax), %eax	# *t_128, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1151	#,
.L1149:
	.loc 1 3540 0 discriminator 1
	movl	$1, %eax	#, iftmp.1125
	jmp	.L1152	#
.L1151:
	.loc 1 3540 0 discriminator 3
	movl	$0, %eax	#, iftmp.1125
.L1152:
	.loc 1 3540 0 discriminator 4
	andl	$1, %eax	#, iftmp.1119
	jmp	.L1153	#
.L1147:
	.loc 1 3540 0 discriminator 1
	movq	-1296(%rbp), %rax	# t, tmp3548
	movq	%rax, %rdi	# tmp3548,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1154	#,
	movq	-1296(%rbp), %rax	# t, tmp3549
	movq	%rax, %rdi	# tmp3549,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1154	#,
	.loc 1 3540 0 discriminator 3
	movl	$1, %eax	#, iftmp.1126
	jmp	.L1155	#
.L1154:
	.loc 1 3540 0 discriminator 2
	movl	$0, %eax	#, iftmp.1126
.L1155:
	.loc 1 3540 0 discriminator 4
	andl	$1, %eax	#, iftmp.1119
.L1153:
	.loc 1 3540 0 discriminator 3
	testb	%al, %al	# iftmp.1119
	je	.L1119	#,
	.loc 1 3541 0 is_stmt 1
	leaq	-1376(%rbp), %rdx	#, tmp3550
	leaq	-1072(%rbp), %rsi	#, tmp3551
	movq	-1296(%rbp), %rax	# t, tmp3552
	movq	%rdx, %r8	# tmp3550,
	movl	$1, %ecx	#,
	movl	$256, %edx	#,
	movq	%rax, %rdi	# tmp3552,
	call	S_scan_word	#
	movq	%rax, -1296(%rbp)	# tmp3553, t
	.loc 1 3542 0
	jmp	.L1157	#
.L1158:
	.loc 1 3542 0 is_stmt 0 discriminator 2
	addq	$1, -1296(%rbp)	#, t
.L1157:
	.loc 1 3542 0 discriminator 1
	movq	-1296(%rbp), %rax	# t, tmp3554
	movzbl	(%rax), %eax	# *t_129, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1158	#,
	.loc 1 3542 0 discriminator 3
	movq	-1296(%rbp), %rax	# t, tmp3555
	movzbl	(%rax), %eax	# *t_129, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1158	#,
	.loc 1 3542 0 discriminator 1
	movq	-1296(%rbp), %rax	# t, tmp3556
	movzbl	(%rax), %eax	# *t_129, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1158	#,
	movq	-1296(%rbp), %rax	# t, tmp3557
	movzbl	(%rax), %eax	# *t_129, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1158	#,
	movq	-1296(%rbp), %rax	# t, tmp3558
	movzbl	(%rax), %eax	# *t_129, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1158	#,
	.loc 1 3543 0 is_stmt 1
	movq	-1296(%rbp), %rax	# t, tmp3559
	movzbl	(%rax), %eax	# *t_129, D.28896
	cmpb	$59, %al	#, D.28896
	jne	.L1119	#,
	.loc 1 3543 0 is_stmt 0 discriminator 1
	leaq	-1072(%rbp), %rax	#, tmp3560
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp3560,
	call	Perl_get_cv	#
	testq	%rax, %rax	# D.28915
	je	.L1119	#,
	.loc 1 3544 0 is_stmt 1
	leaq	-1072(%rbp), %rax	#, tmp3561
	movq	%rax, %rdx	# tmp3561,
	movl	$.LC93, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1119:
.LBE59:
.LBE58:
	.loc 1 3551 0
	movl	$0, PL_expect(%rip)	#, PL_expect
	.loc 1 3552 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.1127
	cmpl	$10, %eax	#, PL_lex_state.1127
	jne	.L1159	#,
	.loc 1 3552 0 is_stmt 0 discriminator 1
	movl	%r13d, %eax	# tmp, D.28916
	cmpb	$32, %al	#, D.28916
	je	.L1160	#,
	movl	%r13d, %eax	# tmp, D.28916
	cmpb	$9, %al	#, D.28916
	je	.L1160	#,
	movl	%r13d, %eax	# tmp, D.28916
	cmpb	$10, %al	#, D.28916
	je	.L1160	#,
	movl	%r13d, %eax	# tmp, D.28916
	cmpb	$13, %al	#, D.28916
	je	.L1160	#,
	movl	%r13d, %eax	# tmp, D.28916
	cmpb	$12, %al	#, D.28916
	jne	.L1159	#,
.L1160:
.LBB60:
	.loc 1 3553 0 is_stmt 1
	movq	PL_last_lop(%rip), %rdx	# PL_last_lop, PL_last_lop.1128
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.1129
	cmpq	%rax, %rdx	# PL_oldoldbufptr.1129, PL_last_lop.1128
	sete	%al	#, D.28899
	movb	%al, -1432(%rbp)	# D.28899, islop
	.loc 1 3554 0
	cmpb	$0, -1432(%rbp)	#, islop
	je	.L1161	#,
	.loc 1 3554 0 is_stmt 0 discriminator 1
	movzwl	PL_last_lop_op(%rip), %eax	# PL_last_lop_op, PL_last_lop_op.1130
	cmpw	$152, %ax	#, PL_last_lop_op.1130
	jne	.L1162	#,
.L1161:
	.loc 1 3555 0 is_stmt 1
	movl	$0, PL_expect(%rip)	#, PL_expect
	jmp	.L1159	#
.L1162:
	.loc 1 3556 0
	movzbl	(%rbx), %eax	# *s_30, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC94, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	je	.L1163	#,
	.loc 1 3557 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	jmp	.L1159	#
.L1163:
	.loc 1 3558 0
	movzbl	(%rbx), %eax	# *s_30, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC95, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	je	.L1164	#,
	.loc 1 3558 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1131
	movzbl	37(%rax), %eax	# PL_curcop.1131_2052->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1165	#,
	.loc 1 3558 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1132
	testq	%rax, %rax	# PL_linestr.1132
	je	.L1166	#,
	.loc 1 3558 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1133
	movl	12(%rax), %eax	# PL_linestr.1133_2057->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1166	#,
	.loc 1 3558 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1134
	movzbl	37(%rax), %eax	# PL_curcop.1134_2060->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1167	#,
.L1166:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1135
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1165	#,
.L1167:
	leaq	1(%rbx), %rax	#, D.28914
	movzbl	(%rax), %eax	# *_2066, D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1168	#,
.L1165:
	.loc 1 3558 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2075, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1169	#,
	.loc 1 3558 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2077, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1170	#,
.L1169:
	.loc 1 3558 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2079, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1171	#,
	.loc 1 3558 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2081, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1170	#,
.L1171:
	.loc 1 3558 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2083, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1172	#,
.L1170:
	.loc 1 3558 0 discriminator 1
	movl	$1, %eax	#, iftmp.1136
	jmp	.L1173	#
.L1172:
	.loc 1 3558 0 discriminator 3
	movl	$0, %eax	#, iftmp.1136
.L1173:
	.loc 1 3558 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	je	.L1164	#,
	.loc 1 3558 0 discriminator 1
	jmp	.L1174	#
.L1168:
	leaq	1(%rbx), %rax	#, D.28914
	movq	%rax, %rdi	# D.28914,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1175	#,
	leaq	1(%rbx), %rax	#, D.28914
	movq	%rax, %rdi	# D.28914,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1175	#,
	.loc 1 3558 0 discriminator 3
	movl	$1, %eax	#, iftmp.1137
	jmp	.L1176	#
.L1175:
	.loc 1 3558 0 discriminator 2
	movl	$0, %eax	#, iftmp.1137
.L1176:
	.loc 1 3558 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	je	.L1164	#,
.L1174:
	.loc 1 3559 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	jmp	.L1159	#
.L1164:
	.loc 1 3560 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1139
	movzbl	37(%rax), %eax	# PL_curcop.1139_2088->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1177	#,
	.loc 1 3560 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1140
	testq	%rax, %rax	# PL_linestr.1140
	je	.L1178	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1141
	movl	12(%rax), %eax	# PL_linestr.1141_2093->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1178	#,
	.loc 1 3560 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1142
	movzbl	37(%rax), %eax	# PL_curcop.1142_2096->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1179	#,
.L1178:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1143
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1177	#,
.L1179:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_30], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1180	#,
.L1177:
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1181	#,
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1182	#,
.L1181:
	.loc 1 3560 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1183	#,
	.loc 1 3560 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1182	#,
.L1183:
	.loc 1 3560 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1184	#,
.L1182:
	.loc 1 3560 0 discriminator 1
	movl	$1, %eax	#, iftmp.1144
	jmp	.L1185	#
.L1184:
	.loc 1 3560 0 discriminator 3
	movl	$0, %eax	#, iftmp.1144
.L1185:
	.loc 1 3560 0 discriminator 4
	andl	$1, %eax	#, iftmp.1138
	jmp	.L1186	#
.L1180:
	.loc 1 3560 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1187	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1187	#,
	.loc 1 3560 0 discriminator 3
	movl	$1, %eax	#, iftmp.1145
	jmp	.L1188	#
.L1187:
	.loc 1 3560 0 discriminator 2
	movl	$0, %eax	#, iftmp.1145
.L1188:
	.loc 1 3560 0 discriminator 4
	andl	$1, %eax	#, iftmp.1138
.L1186:
	.loc 1 3560 0 discriminator 3
	testb	%al, %al	# iftmp.1138
	je	.L1189	#,
.LBB61:
	.loc 1 3562 0 is_stmt 1
	leaq	-1384(%rbp), %rdx	#, tmp3562
	leaq	-1072(%rbp), %rax	#, tmp3563
	movq	%rdx, %r8	# tmp3562,
	movl	$1, %ecx	#,
	movl	$256, %edx	#,
	movq	%rax, %rsi	# tmp3563,
	movq	%rbx, %rdi	# s,
	call	S_scan_word	#
	.loc 1 3563 0
	movq	-1384(%rbp), %rax	# len, len.1146
	movl	%eax, %edx	# len.1146, D.28894
	leaq	-1072(%rbp), %rax	#, tmp3564
	movl	%edx, %esi	# D.28894,
	movq	%rax, %rdi	# tmp3564,
	call	Perl_keyword	#
	movl	%eax, %r13d	#, tmp
	testl	%r13d, %r13d	# tmp
	je	.L1190	#,
	.loc 1 3565 0
	cmpl	$-110, %r13d	#, tmp
	je	.L2147	#,
	cmpl	$-110, %r13d	#, tmp
	jg	.L1193	#,
	cmpl	$-128, %r13d	#, tmp
	je	.L2147	#,
	cmpl	$-119, %r13d	#, tmp
	je	.L2147	#,
	cmpl	$-243, %r13d	#, tmp
	je	.L2147	#,
	jmp	.L1191	#
.L1193:
	cmpl	$-67, %r13d	#, tmp
	je	.L2147	#,
	cmpl	$-67, %r13d	#, tmp
	jg	.L1194	#,
	cmpl	$-98, %r13d	#, tmp
	je	.L2147	#,
	jmp	.L1191	#
.L1194:
	cmpl	$-53, %r13d	#, tmp
	je	.L2147	#,
	cmpl	$-31, %r13d	#, tmp
	je	.L2147	#,
.L1191:
	.loc 1 3576 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 3577 0
	jmp	.L1195	#
.L2147:
	.loc 1 3574 0
	nop
.L1195:
	jmp	.L1159	#
.L1190:
	.loc 1 3581 0
	movl	$1, PL_expect(%rip)	#, PL_expect
.LBE61:
	jmp	.L1159	#
.L1189:
	.loc 1 3584 0
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1197	#,
	.loc 1 3584 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$57, %al	#, D.28896
	jg	.L1197	#,
	.loc 1 3585 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	jmp	.L1159	#
.L1197:
	.loc 1 3586 0
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$46, %al	#, D.28896
	jne	.L1198	#,
	.loc 1 3586 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2122, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1198	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2124, D.28896
	cmpb	$57, %al	#, D.28896
	jg	.L1198	#,
	.loc 1 3587 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	jmp	.L1159	#
.L1198:
	.loc 1 3588 0
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$63, %al	#, D.28896
	je	.L1199	#,
	.loc 1 3588 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$45, %al	#, D.28896
	je	.L1199	#,
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$43, %al	#, D.28896
	jne	.L1200	#,
.L1199:
	.loc 1 3589 0 is_stmt 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2129, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1200	#,
	.loc 1 3589 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2131, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1200	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2133, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1200	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2135, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1200	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2137, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1200	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2139, D.28896
	cmpb	$61, %al	#, D.28896
	je	.L1200	#,
	.loc 1 3590 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	jmp	.L1159	#
.L1200:
	.loc 1 3591 0
	movzbl	(%rbx), %eax	# *s_30, D.28896
	cmpb	$60, %al	#, D.28896
	jne	.L1159	#,
	.loc 1 3591 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2142, D.28896
	cmpb	$60, %al	#, D.28896
	jne	.L1159	#,
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2144, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1159	#,
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2146, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1159	#,
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2148, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1159	#,
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2150, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1159	#,
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2152, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1159	#,
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2154, D.28896
	cmpb	$61, %al	#, D.28896
	je	.L1159	#,
	.loc 1 3592 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
.L1159:
.LBE60:
	.loc 1 3594 0
	movb	$36, PL_pending_ident(%rip)	#, PL_pending_ident
	.loc 1 3595 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$36, %eax	#, D.28894
	jmp	.L2138	#
.L649:
	.loc 1 3598 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1147
	testl	%eax, %eax	# PL_expect.1147
	jne	.L1201	#,
	.loc 1 3599 0
	movq	%rbx, %rsi	# s,
	movl	$.LC96, %edi	#,
	call	S_no_op	#
.L1201:
	.loc 1 3600 0
	movb	$64, PL_tokenbuf(%rip)	#, PL_tokenbuf
	.loc 1 3601 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1148
	movl	$0, %r8d	#,
	movl	$255, %ecx	#,
	movl	$PL_tokenbuf+1, %edx	#,
	movq	%rax, %rsi	# PL_bufend.1148,
	movq	%rbx, %rdi	# s,
	call	S_scan_ident	#
	movq	%rax, %rbx	#, s
	.loc 1 3602 0
	movzbl	PL_tokenbuf+1(%rip), %eax	# PL_tokenbuf, D.28896
	testb	%al, %al	# D.28896
	jne	.L1202	#,
	.loc 1 3603 0
	movl	$2, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$64, %eax	#, D.28894
	jmp	.L2138	#
.L1202:
	.loc 1 3605 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.1149
	cmpl	$10, %eax	#, PL_lex_state.1149
	jne	.L1203	#,
	.loc 1 3606 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
.L1203:
	.loc 1 3607 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1150
	cmpl	$2, %eax	#, PL_expect.1150
	jne	.L1204	#,
	.loc 1 3607 0 is_stmt 0 discriminator 2
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.1151
	movq	PL_last_lop(%rip), %rax	# PL_last_lop, PL_last_lop.1152
	cmpq	%rax, %rdx	# PL_last_lop.1152, PL_oldoldbufptr.1151
	jne	.L1205	#,
.L1204:
	.loc 1 3607 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	S_intuit_more	#
	testl	%eax, %eax	# D.28894
	je	.L1205	#,
	.loc 1 3608 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_31, D.28896
	cmpb	$123, %al	#, D.28896
	jne	.L1206	#,
	.loc 1 3609 0
	movb	$37, PL_tokenbuf(%rip)	#, PL_tokenbuf
.L1206:
	.loc 1 3612 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1153
	movq	80(%rax), %rax	# PL_curcop.1153_2169->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1207	#,
	.loc 1 3612 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1154
	movq	80(%rax), %rax	# PL_curcop.1154_2171->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1207	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1155
	movq	80(%rax), %rax	# PL_curcop.1155_2173->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1208	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1156
	movq	80(%rax), %rax	# PL_curcop.1156_2175->cop_warnings, D.28913
	movq	(%rax), %rax	# _2176->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_2177].xpv_pv, D.28895
	addq	$7, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2179, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1208	#,
.L1207:
	.loc 1 3612 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1157
	movq	80(%rax), %rax	# PL_curcop.1157_2183->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1205	#,
	.loc 1 3612 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1158
	movzbl	%al, %eax	# PL_dowarn.1158, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1205	#,
.L1208:
	.loc 1 3613 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_31, D.28896
	cmpb	$91, %al	#, D.28896
	je	.L1209	#,
	.loc 1 3613 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_31, D.28896
	cmpb	$123, %al	#, D.28896
	jne	.L1205	#,
.L1209:
.LBB62:
	.loc 1 3614 0 is_stmt 1
	leaq	1(%rbx), %rax	#, tmp3565
	movq	%rax, -1288(%rbp)	# tmp3565, t
	.loc 1 3615 0
	jmp	.L1210	#
.L1222:
	.loc 1 3616 0
	addq	$1, -1288(%rbp)	#, t
.L1210:
	.loc 1 3615 0 discriminator 1
	movq	-1288(%rbp), %rax	# t, tmp3566
	movzbl	(%rax), %eax	# *t_130, D.28896
	testb	%al, %al	# D.28896
	je	.L1211	#,
	.loc 1 3615 0 is_stmt 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1159
	movzbl	37(%rax), %eax	# PL_curcop.1159_2192->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1212	#,
	.loc 1 3615 0 discriminator 4
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1160
	testq	%rax, %rax	# PL_linestr.1160
	je	.L1213	#,
	.loc 1 3615 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1161
	movl	12(%rax), %eax	# PL_linestr.1161_2197->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1213	#,
	.loc 1 3615 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1162
	movzbl	37(%rax), %eax	# PL_curcop.1162_2200->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1214	#,
.L1213:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1163
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1212	#,
.L1214:
	movq	-1288(%rbp), %rax	# t, tmp3567
	movzbl	(%rax), %eax	# MEM[(U8 *)t_130], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1215	#,
.L1212:
	.loc 1 3615 0 discriminator 3
	movq	-1288(%rbp), %rax	# t, tmp3568
	movzbl	(%rax), %eax	# *t_130, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1216	#,
	.loc 1 3615 0 discriminator 1
	movq	-1288(%rbp), %rax	# t, tmp3569
	movzbl	(%rax), %eax	# *t_130, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1217	#,
.L1216:
	.loc 1 3615 0 discriminator 2
	movq	-1288(%rbp), %rax	# t, tmp3570
	movzbl	(%rax), %eax	# *t_130, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1218	#,
	.loc 1 3615 0 discriminator 1
	movq	-1288(%rbp), %rax	# t, tmp3571
	movzbl	(%rax), %eax	# *t_130, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1217	#,
.L1218:
	.loc 1 3615 0 discriminator 2
	movq	-1288(%rbp), %rax	# t, tmp3572
	movzbl	(%rax), %eax	# *t_130, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1219	#,
	.loc 1 3615 0 discriminator 1
	movq	-1288(%rbp), %rax	# t, tmp3573
	movzbl	(%rax), %eax	# *t_130, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L1217	#,
.L1219:
	.loc 1 3615 0 discriminator 2
	movq	-1288(%rbp), %rax	# t, tmp3574
	movzbl	(%rax), %eax	# *t_130, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1220	#,
.L1217:
	.loc 1 3615 0 discriminator 1
	movl	$1, %eax	#, iftmp.1164
	jmp	.L1221	#
.L1220:
	.loc 1 3615 0 discriminator 3
	movl	$0, %eax	#, iftmp.1164
.L1221:
	.loc 1 3615 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L1222	#,
	.loc 1 3615 0 discriminator 1
	jmp	.L1223	#
.L1215:
	movq	-1288(%rbp), %rax	# t, tmp3575
	movq	%rax, %rdi	# tmp3575,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28896
	jne	.L1222	#,
.L1223:
	.loc 1 3615 0 discriminator 2
	movq	-1288(%rbp), %rax	# t, tmp3576
	movzbl	(%rax), %eax	# *t_130, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC97, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	jne	.L1222	#,
.L1211:
	.loc 1 3617 0 is_stmt 1
	movq	-1288(%rbp), %rax	# t, tmp3577
	movzbl	(%rax), %eax	# *t_130, D.28896
	cmpb	$125, %al	#, D.28896
	je	.L1224	#,
	.loc 1 3617 0 is_stmt 0 discriminator 1
	movq	-1288(%rbp), %rax	# t, tmp3578
	movzbl	(%rax), %eax	# *t_130, D.28896
	cmpb	$93, %al	#, D.28896
	jne	.L1205	#,
.L1224:
	.loc 1 3618 0 is_stmt 1
	addq	$1, -1288(%rbp)	#, t
	.loc 1 3619 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.1165
	movq	%rax, %rdi	# PL_bufptr.1165,
	call	S_skipspace	#
	movq	%rax, PL_bufptr(%rip)	# PL_bufptr.1166, PL_bufptr
	.loc 1 3620 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.1167
	leaq	1(%rax), %rdi	#, D.28895
	.loc 1 3622 0
	movq	-1288(%rbp), %rdx	# t, t.1168
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.1169
	subq	%rax, %rdx	# PL_bufptr.1170, D.28902
	movq	%rdx, %rax	# D.28902, D.28902
	.loc 1 3620 0
	leaq	-1(%rax), %rsi	#, D.28902
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.1171
	movq	-1288(%rbp), %rcx	# t, t.1172
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.1173
	subq	%rdx, %rcx	# PL_bufptr.1174, D.28902
	movq	%rcx, %rdx	# D.28902, D.28902
	movq	%rdi, %r9	# D.28895,
	movq	%rsi, %r8	# D.28902,
	movq	%rax, %rcx	# PL_bufptr.1171,
	movl	$.LC98, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1205:
.LBE62:
	.loc 1 3627 0
	movb	$64, PL_pending_ident(%rip)	#, PL_pending_ident
	.loc 1 3628 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1176
	movl	72(%rax), %edx	# PL_curcop.1176_2239->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1177
	cmpl	%eax, %edx	# PL_copline.1177, D.28900
	jae	.L1225	#,
	.loc 1 3628 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1178
	movl	72(%rax), %eax	# PL_curcop.1178_2242->cop_line, iftmp.1175
	jmp	.L1226	#
.L1225:
	.loc 1 3628 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1175
.L1226:
	.loc 1 3628 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1175, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$64, %eax	#, D.28894
	jmp	.L2138	#
.L642:
	.loc 1 3632 0 is_stmt 1
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1179
	testl	%eax, %eax	# PL_expect.1179
	je	.L1227	#,
	.loc 1 3634 0
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.1180
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1181
	cmpq	%rax, %rdx	# PL_last_uni.1181, PL_oldoldbufptr.1180
	jne	.L1228	#,
	.loc 1 3635 0
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1182
	movzbl	(%rax), %eax	# *PL_last_uni.1182_2249, D.28896
	cmpb	$115, %al	#, D.28896
	jne	.L1229	#,
	.loc 1 3635 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdx	# s, s.1183
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1184
	subq	%rax, %rdx	# PL_last_uni.1185, D.28902
	movq	%rdx, %rax	# D.28902, D.28902
	cmpq	$4, %rax	#, D.28902
	jle	.L1229	#,
	.loc 1 3636 0 is_stmt 1
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1186
	movl	$5, %edx	#,
	movl	$.LC99, %esi	#,
	movq	%rax, %rdi	# PL_last_uni.1186,
	call	memcmp	#
	testl	%eax, %eax	# D.28894
	jne	.L1229	#,
	.loc 1 3637 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1187
	movzbl	37(%rax), %eax	# PL_curcop.1187_2257->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	.loc 1 3634 0
	testl	%eax, %eax	# D.28894
	jne	.L1230	#,
	.loc 1 3637 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1188
	testq	%rax, %rax	# PL_linestr.1188
	je	.L1231	#,
	.loc 1 3637 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1189
	movl	12(%rax), %eax	# PL_linestr.1189_2262->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1231	#,
	.loc 1 3637 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1190
	movzbl	37(%rax), %eax	# PL_curcop.1190_2265->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1232	#,
.L1231:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1191
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1230	#,
.L1232:
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1192
	addq	$5, %rax	#, D.28914
	movzbl	(%rax), %eax	# *_2272, D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1233	#,
.L1230:
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1194
	addq	$5, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2278, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1234	#,
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1195
	addq	$5, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2281, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1235	#,
.L1234:
	.loc 1 3637 0 discriminator 2
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1196
	addq	$5, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2284, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1236	#,
	.loc 1 3637 0 discriminator 1
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1197
	addq	$5, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2287, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1235	#,
.L1236:
	.loc 1 3637 0 discriminator 2
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1198
	addq	$5, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2290, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1237	#,
	.loc 1 3637 0 discriminator 1
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1199
	addq	$5, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2293, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L1235	#,
.L1237:
	.loc 1 3637 0 discriminator 2
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1200
	addq	$5, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2296, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1238	#,
.L1235:
	.loc 1 3637 0 discriminator 1
	movl	$1, %eax	#, iftmp.1193
	jmp	.L1239	#
.L1238:
	.loc 1 3637 0 discriminator 3
	movl	$0, %eax	#, iftmp.1193
.L1239:
	.loc 1 3637 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L1229	#,
	jmp	.L1228	#
.L1233:
	.loc 1 3637 0 discriminator 1
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1201
	addq	$5, %rax	#, D.28914
	movq	%rax, %rdi	# D.28914,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28896
	je	.L1228	#,
.L1229:
	.loc 1 3638 0 is_stmt 1
	call	S_check_uni	#
.L1228:
	.loc 1 3639 0
	movl	$31, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_pat	#
	movq	%rax, %rbx	#, s
	.loc 1 3640 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1203
	movl	72(%rax), %edx	# PL_curcop.1203_2302->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1204
	cmpl	%eax, %edx	# PL_copline.1204, D.28900
	jae	.L1240	#,
	.loc 1 3640 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1205
	movl	72(%rax), %eax	# PL_curcop.1205_2305->cop_line, iftmp.1202
	jmp	.L1241	#
.L1240:
	.loc 1 3640 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1202
.L1241:
	.loc 1 3640 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1202, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L1227:
	.loc 1 3642 0 is_stmt 1
	movq	%rbx, %rax	# s, s.1206
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.1206_2309, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3643 0
	cmpl	$47, %r13d	#, tmp
	jne	.L1242	#,
	.loc 1 3644 0
	movl	$57, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$289, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L1242:
	.loc 1 3645 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	%r13d, %eax	# tmp, D.28894
	jmp	.L2138	#
.L641:
	.loc 1 3648 0
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.1207
	testl	%eax, %eax	# PL_lex_formbrack.1207
	je	.L1243	#,
	.loc 1 3648 0 is_stmt 0 discriminator 1
	movl	PL_lex_brackets(%rip), %edx	# PL_lex_brackets, PL_lex_brackets.1208
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.1209
	cmpl	%eax, %edx	# PL_lex_formbrack.1209, PL_lex_brackets.1208
	jne	.L1243	#,
	.loc 1 3652 0 is_stmt 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2318, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1244	#,
	.loc 1 3652 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2320, D.28896
	cmpb	$13, %al	#, D.28896
	jne	.L1243	#,
	leaq	2(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2322, D.28896
	cmpb	$10, %al	#, D.28896
	jne	.L1243	#,
.L1244:
	.loc 1 3654 0 is_stmt 1
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.1210
	cmpq	%rax, %rbx	# PL_linestart.1210, s
	je	.L1245	#,
	.loc 1 3654 0 is_stmt 0 discriminator 1
	leaq	-1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2325, D.28896
	cmpb	$10, %al	#, D.28896
	jne	.L1243	#,
.L1245:
	.loc 1 3656 0 is_stmt 1
	movl	$0, PL_lex_formbrack(%rip)	#, PL_lex_formbrack
	.loc 1 3657 0
	movl	$3, PL_expect(%rip)	#, PL_expect
	.loc 1 3658 0
	jmp	.L621	#
.L1243:
	.loc 1 3660 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1211
	testl	%eax, %eax	# PL_expect.1211
	je	.L1246	#,
	.loc 1 3660 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2328, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1246	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2330, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L643	#,
.L1246:
	.loc 1 3661 0 is_stmt 1
	movq	%rbx, %rax	# s, s.1212
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.1212_2332, D.28896
	movsbl	%al, %r13d	# D.28896, tmp
	.loc 1 3662 0
	movzbl	(%rbx), %eax	# *s_2333, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	cmpl	%r13d, %eax	# tmp, D.28894
	jne	.L1247	#,
	.loc 1 3663 0
	addq	$1, %rbx	#, s
	.loc 1 3664 0
	movzbl	(%rbx), %eax	# *s_2338, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	cmpl	%r13d, %eax	# tmp, D.28894
	jne	.L1248	#,
	.loc 1 3665 0
	addq	$1, %rbx	#, s
	.loc 1 3666 0
	movl	$128, PL_yylval(%rip)	#, PL_yylval.ival
	jmp	.L1249	#
.L1248:
	.loc 1 3669 0
	movl	$0, PL_yylval(%rip)	#, PL_yylval.ival
.L1249:
	.loc 1 3670 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$281, %eax	#, D.28894
	jmp	.L2138	#
.L1247:
	.loc 1 3672 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1213
	testl	%eax, %eax	# PL_expect.1213
	je	.L1250	#,
	.loc 1 3673 0
	call	S_check_uni	#
.L1250:
	.loc 1 3674 0
	movl	$66, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$290, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L643:
	.loc 1 3679 0
	movl	$PL_yylval, %esi	#,
	movq	%rbx, %rdi	# s,
	call	Perl_scan_num	#
	movq	%rax, %rbx	#, s
	.loc 1 3683 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1214
	testl	%eax, %eax	# PL_expect.1214
	jne	.L1251	#,
	.loc 1 3684 0
	movq	%rbx, %rsi	# s,
	movl	$.LC100, %edi	#,
	call	S_no_op	#
.L1251:
	.loc 1 3685 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1216
	movl	72(%rax), %edx	# PL_curcop.1216_2347->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1217
	cmpl	%eax, %edx	# PL_copline.1217, D.28900
	jae	.L1252	#,
	.loc 1 3685 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1218
	movl	72(%rax), %eax	# PL_curcop.1218_2350->cop_line, iftmp.1215
	jmp	.L1253	#
.L1252:
	.loc 1 3685 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1215
.L1253:
	.loc 1 3685 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1215, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$260, %eax	#, D.28894
	jmp	.L2138	#
.L634:
	.loc 1 3688 0 is_stmt 1
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 3692 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1219
	testl	%eax, %eax	# PL_expect.1219
	jne	.L1254	#,
	.loc 1 3693 0
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.1220
	testl	%eax, %eax	# PL_lex_formbrack.1220
	je	.L1255	#,
	.loc 1 3693 0 is_stmt 0 discriminator 1
	movl	PL_lex_brackets(%rip), %edx	# PL_lex_brackets, PL_lex_brackets.1221
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.1222
	cmpl	%eax, %edx	# PL_lex_formbrack.1222, PL_lex_brackets.1221
	jne	.L1255	#,
	.loc 1 3694 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 3695 0
	call	S_depcom	#
	.loc 1 3696 0
	movl	$44, %eax	#, D.28894
	jmp	.L2138	#
.L1255:
	.loc 1 3699 0
	movq	%rbx, %rsi	# s,
	movl	$.LC101, %edi	#,
	call	S_no_op	#
.L1254:
	.loc 1 3701 0
	testq	%rbx, %rbx	# s
	jne	.L1256	#,
	.loc 1 3702 0
	movl	$0, %edi	#,
	call	S_missingterm	#
.L1256:
	.loc 1 3703 0
	movl	$5, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 3704 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1224
	movl	72(%rax), %edx	# PL_curcop.1224_2360->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1225
	cmpl	%eax, %edx	# PL_copline.1225, D.28900
	jae	.L1257	#,
	.loc 1 3704 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1226
	movl	72(%rax), %eax	# PL_curcop.1226_2363->cop_line, iftmp.1223
	jmp	.L1258	#
.L1257:
	.loc 1 3704 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1223
.L1258:
	.loc 1 3704 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1223, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L630:
	.loc 1 3707 0 is_stmt 1
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 3711 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1227
	testl	%eax, %eax	# PL_expect.1227
	jne	.L1259	#,
	.loc 1 3712 0
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.1228
	testl	%eax, %eax	# PL_lex_formbrack.1228
	je	.L1260	#,
	.loc 1 3712 0 is_stmt 0 discriminator 1
	movl	PL_lex_brackets(%rip), %edx	# PL_lex_brackets, PL_lex_brackets.1229
	movl	PL_lex_formbrack(%rip), %eax	# PL_lex_formbrack, PL_lex_formbrack.1230
	cmpl	%eax, %edx	# PL_lex_formbrack.1230, PL_lex_brackets.1229
	jne	.L1260	#,
	.loc 1 3713 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 3714 0
	call	S_depcom	#
	.loc 1 3715 0
	movl	$44, %eax	#, D.28894
	jmp	.L2138	#
.L1260:
	.loc 1 3718 0
	movq	%rbx, %rsi	# s,
	movl	$.LC101, %edi	#,
	call	S_no_op	#
.L1259:
	.loc 1 3720 0
	testq	%rbx, %rbx	# s
	jne	.L1261	#,
	.loc 1 3721 0
	movl	$0, %edi	#,
	call	S_missingterm	#
.L1261:
	.loc 1 3722 0
	movl	$5, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 3723 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1232
	movl	12(%rax), %eax	# PL_lex_stuff.1232_2373->sv_flags, D.28900
	andl	$262144, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1262	#,
	.loc 1 3723 0 is_stmt 0 discriminator 1
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1233
	movq	(%rax), %rax	# PL_lex_stuff.1233_2376->sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_2377].xpv_cur, len.1234
	movq	%rax, -1384(%rbp)	# len.1234, len
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1235
	movq	(%rax), %rax	# PL_lex_stuff.1235_2379->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_2380].xpv_pv, iftmp.1231
	jmp	.L1263	#
.L1262:
	.loc 1 3723 0 discriminator 2
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1236
	leaq	-1384(%rbp), %rcx	#, tmp3579
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp3579,
	movq	%rax, %rdi	# PL_lex_stuff.1236,
	call	Perl_sv_2pv_flags	#
.L1263:
	.loc 1 3723 0 discriminator 3
	movq	%rax, %r12	# iftmp.1231, d
	jmp	.L1264	#
.L1268:
	.loc 1 3724 0 is_stmt 1
	movzbl	(%r12), %eax	# *d_64, D.28896
	cmpb	$36, %al	#, D.28896
	je	.L1265	#,
	.loc 1 3724 0 is_stmt 0 discriminator 1
	movzbl	(%r12), %eax	# *d_64, D.28896
	cmpb	$64, %al	#, D.28896
	je	.L1265	#,
	movzbl	(%r12), %eax	# *d_64, D.28896
	cmpb	$92, %al	#, D.28896
	je	.L1265	#,
	movzbl	(%r12), %eax	# *d_64, D.28896
	testb	%al, %al	# D.28896
	jns	.L1266	#,
.L1265:
	.loc 1 3725 0 is_stmt 1
	movl	$67, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 3726 0
	jmp	.L1267	#
.L1266:
	.loc 1 3723 0
	movq	-1384(%rbp), %rax	# len, len.1237
	subq	$1, %rax	#, len.1238
	movq	%rax, -1384(%rbp)	# len.1238, len
	addq	$1, %r12	#, d
.L1264:
	.loc 1 3723 0 is_stmt 0 discriminator 1
	movq	-1384(%rbp), %rax	# len, len.1239
	testq	%rax, %rax	# len.1239
	jne	.L1268	#,
.L1267:
	.loc 1 3729 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1241
	movl	72(%rax), %edx	# PL_curcop.1241_2393->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1242
	cmpl	%eax, %edx	# PL_copline.1242, D.28900
	jae	.L1269	#,
	.loc 1 3729 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1243
	movl	72(%rax), %eax	# PL_curcop.1243_2396->cop_line, iftmp.1240
	jmp	.L1270	#
.L1269:
	.loc 1 3729 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1240
.L1270:
	.loc 1 3729 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1240, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L655:
	.loc 1 3732 0 is_stmt 1
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 3736 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1244
	testl	%eax, %eax	# PL_expect.1244
	jne	.L1271	#,
	.loc 1 3737 0
	movq	%rbx, %rsi	# s,
	movl	$.LC102, %edi	#,
	call	S_no_op	#
.L1271:
	.loc 1 3738 0
	testq	%rbx, %rbx	# s
	jne	.L1272	#,
	.loc 1 3739 0
	movl	$0, %edi	#,
	call	S_missingterm	#
.L1272:
	.loc 1 3740 0
	movl	$24, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 3741 0
	call	S_set_csh	#
	.loc 1 3742 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1246
	movl	72(%rax), %edx	# PL_curcop.1246_2402->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1247
	cmpl	%eax, %edx	# PL_copline.1247, D.28900
	jae	.L1273	#,
	.loc 1 3742 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1248
	movl	72(%rax), %eax	# PL_curcop.1248_2405->cop_line, iftmp.1245
	jmp	.L1274	#
.L1273:
	.loc 1 3742 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1245
.L1274:
	.loc 1 3742 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1245, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L652:
	.loc 1 3745 0 is_stmt 1
	addq	$1, %rbx	#, s
	.loc 1 3746 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1249
	movq	80(%rax), %rax	# PL_curcop.1249_2410->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1275	#,
	.loc 1 3746 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1250
	movq	80(%rax), %rax	# PL_curcop.1250_2412->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1275	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1251
	movq	80(%rax), %rax	# PL_curcop.1251_2414->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1276	#,
	.loc 1 3746 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1252
	movq	80(%rax), %rax	# PL_curcop.1252_2416->cop_warnings, D.28913
	movq	(%rax), %rax	# _2417->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_2418].xpv_pv, D.28895
	addq	$7, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2420, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1276	#,
.L1275:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1253
	movq	80(%rax), %rax	# PL_curcop.1253_2424->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1277	#,
	.loc 1 3746 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1254
	movzbl	%al, %eax	# PL_dowarn.1254, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1277	#,
.L1276:
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.1255
	testl	%eax, %eax	# PL_lex_inwhat.1255
	je	.L1277	#,
	movzbl	(%rbx), %eax	# *s_2409, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1277	#,
	movzbl	(%rbx), %eax	# *s_2409, D.28896
	cmpb	$57, %al	#, D.28896
	jg	.L1277	#,
	.loc 1 3748 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_2409, D.28896
	.loc 1 3747 0
	movsbl	%al, %edx	# D.28896, D.28894
	.loc 1 3748 0
	movzbl	(%rbx), %eax	# *s_2409, D.28896
	.loc 1 3747 0
	movsbl	%al, %eax	# D.28896, D.28894
	movl	%edx, %ecx	# D.28894,
	movl	%eax, %edx	# D.28894,
	movl	$.LC103, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1277:
	.loc 1 3749 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1256
	testl	%eax, %eax	# PL_expect.1256
	jne	.L1278	#,
	.loc 1 3750 0
	movq	%rbx, %rsi	# s,
	movl	$.LC104, %edi	#,
	call	S_no_op	#
.L1278:
	.loc 1 3751 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$311, %eax	#, D.28894
	jmp	.L2138	#
.L656:
	.loc 1 3754 0
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2438, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1279	#,
	.loc 1 3754 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2440, D.28896
	cmpb	$57, %al	#, D.28896
	jg	.L1279	#,
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1257
	testl	%eax, %eax	# PL_expect.1257
	je	.L1279	#,
.LBB63:
	.loc 1 3755 0 is_stmt 1
	movq	%rbx, -1280(%rbp)	# s, start
	.loc 1 3756 0
	addq	$1, -1280(%rbp)	#, start
	.loc 1 3757 0
	addq	$1, -1280(%rbp)	#, start
	.loc 1 3758 0
	jmp	.L1280	#
.L1282:
	.loc 1 3759 0
	addq	$1, -1280(%rbp)	#, start
.L1280:
	.loc 1 3758 0 discriminator 1
	movq	-1280(%rbp), %rax	# start, tmp3580
	movzbl	(%rax), %eax	# *start_131, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1281	#,
	.loc 1 3758 0 is_stmt 0 discriminator 2
	movq	-1280(%rbp), %rax	# start, tmp3581
	movzbl	(%rax), %eax	# *start_131, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L1282	#,
.L1281:
	.loc 1 3758 0 discriminator 3
	movq	-1280(%rbp), %rax	# start, tmp3582
	movzbl	(%rax), %eax	# *start_131, D.28896
	cmpb	$95, %al	#, D.28896
	je	.L1282	#,
	.loc 1 3760 0 is_stmt 1
	movq	-1280(%rbp), %rax	# start, tmp3583
	movzbl	(%rax), %eax	# *start_131, D.28896
	cmpb	$46, %al	#, D.28896
	jne	.L1283	#,
	.loc 1 3760 0 is_stmt 0 discriminator 1
	movq	-1280(%rbp), %rax	# start, tmp3584
	addq	$1, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2450, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1283	#,
	movq	-1280(%rbp), %rax	# start, tmp3585
	addq	$1, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2452, D.28896
	cmpb	$57, %al	#, D.28896
	jg	.L1283	#,
	.loc 1 3761 0 is_stmt 1
	movl	$PL_yylval, %esi	#,
	movq	%rbx, %rdi	# s,
	call	Perl_scan_num	#
	movq	%rax, %rbx	#, s
	.loc 1 3762 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1259
	movl	72(%rax), %edx	# PL_curcop.1259_2455->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1260
	cmpl	%eax, %edx	# PL_copline.1260, D.28900
	jae	.L1284	#,
	.loc 1 3762 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1261
	movl	72(%rax), %eax	# PL_curcop.1261_2458->cop_line, iftmp.1258
	jmp	.L1285	#
.L1284:
	.loc 1 3762 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1258
.L1285:
	.loc 1 3762 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1258, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$260, %eax	#, D.28894
	jmp	.L2138	#
.L1283:
	.loc 1 3765 0 is_stmt 1
	movq	-1280(%rbp), %rax	# start, tmp3586
	movzbl	(%rax), %eax	# *start_131, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1286	#,
	.loc 1 3765 0 is_stmt 0 discriminator 2
	movq	-1280(%rbp), %rax	# start, tmp3587
	movzbl	(%rax), %eax	# *start_131, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1279	#,
.L1286:
	.loc 1 3765 0 discriminator 1
	movq	-1280(%rbp), %rax	# start, tmp3588
	movzbl	(%rax), %eax	# *start_131, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1287	#,
	.loc 1 3765 0 discriminator 2
	movq	-1280(%rbp), %rax	# start, tmp3589
	movzbl	(%rax), %eax	# *start_131, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1279	#,
.L1287:
	.loc 1 3765 0 discriminator 1
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1262
	cmpl	$1, %eax	#, PL_expect.1262
	je	.L1288	#,
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1263
	cmpl	$2, %eax	#, PL_expect.1263
	je	.L1288	#,
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1264
	cmpl	$3, %eax	#, PL_expect.1264
	jne	.L1279	#,
.L1288:
.LBB64:
	.loc 1 3766 0 is_stmt 1
	movq	-1280(%rbp), %rax	# start, tmp3590
	movzbl	(%rax), %eax	# *start_131, tmp3591
	movb	%al, -1431(%rbp)	# tmp3591, c
	.loc 1 3768 0
	movq	-1280(%rbp), %rax	# start, tmp3592
	movb	$0, (%rax)	#, *start_131
	.loc 1 3769 0
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	Perl_gv_fetchpv	#
	movq	%rax, -1128(%rbp)	# tmp3593, gv
	.loc 1 3770 0
	movq	-1280(%rbp), %rax	# start, tmp3594
	movzbl	-1431(%rbp), %edx	# c, tmp3595
	movb	%dl, (%rax)	# tmp3595, *start_131
	.loc 1 3771 0
	cmpq	$0, -1128(%rbp)	#, gv
	jne	.L1279	#,
	.loc 1 3772 0
	movl	$PL_yylval, %esi	#,
	movq	%rbx, %rdi	# s,
	call	Perl_scan_num	#
	movq	%rax, %rbx	#, s
	.loc 1 3773 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1266
	movl	72(%rax), %edx	# PL_curcop.1266_2472->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1267
	cmpl	%eax, %edx	# PL_copline.1267, D.28900
	jae	.L1289	#,
	.loc 1 3773 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1268
	movl	72(%rax), %eax	# PL_curcop.1268_2475->cop_line, iftmp.1265
	jmp	.L1290	#
.L1289:
	.loc 1 3773 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1265
.L1290:
	.loc 1 3773 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1265, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$260, %eax	#, D.28894
	jmp	.L2138	#
.L1279:
.LBE64:
.LBE63:
	.loc 1 3777 0 is_stmt 1
	jmp	.L650	#
.L657:
	.loc 1 3779 0
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2480, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1291	#,
	.loc 1 3779 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2482, D.28896
	cmpb	$57, %al	#, D.28896
	jg	.L1291	#,
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1269
	testl	%eax, %eax	# PL_expect.1269
	jne	.L1291	#,
	.loc 1 3780 0 is_stmt 1
	addq	$1, %rbx	#, s
	.loc 1 3781 0
	movl	$61, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$289, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L1291:
	.loc 1 3783 0
	nop
.L650:
	.loc 1 3814 0
	movl	$0, -1428(%rbp)	#, orig_keyword
	.loc 1 3815 0
	movq	$0, -1368(%rbp)	#, gv
	.loc 1 3816 0
	movq	$0, -1360(%rbp)	#, gvp
	.loc 1 3818 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	.loc 1 3819 0
	leaq	-1384(%rbp), %rax	#, tmp3596
	movq	%rax, %r8	# tmp3596,
	movl	$0, %ecx	#,
	movl	$256, %edx	#,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_word	#
	movq	%rax, %rbx	#, s
	.loc 1 3822 0
	movq	-1384(%rbp), %rax	# len, len.1271
	cmpq	$1, %rax	#, len.1271
	jne	.L1292	#,
	.loc 1 3822 0 is_stmt 0 discriminator 1
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC105, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	jne	.L1293	#,
.L1292:
	.loc 1 3823 0 is_stmt 1 discriminator 2
	movq	-1384(%rbp), %rax	# len, len.1272
	.loc 1 3822 0 discriminator 2
	cmpq	$2, %rax	#, len.1272
	jne	.L1294	#,
	.loc 1 3823 0
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$116, %al	#, D.28896
	jne	.L1295	#,
	.loc 1 3823 0 is_stmt 0 discriminator 1
	movzbl	PL_tokenbuf+1(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$114, %al	#, D.28896
	je	.L1293	#,
.L1295:
	.loc 1 3824 0 is_stmt 1 discriminator 2
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	.loc 1 3823 0 discriminator 2
	cmpb	$113, %al	#, D.28896
	jne	.L1294	#,
	.loc 1 3825 0
	movzbl	PL_tokenbuf+1(%rip), %eax	# PL_tokenbuf, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC106, %edi	#,
	call	strchr	#
	.loc 1 3824 0
	testq	%rax, %rax	# D.28895
	je	.L1294	#,
.L1293:
	.loc 1 3822 0 discriminator 1
	movl	$1, %eax	#, iftmp.1270
	jmp	.L1296	#
.L1294:
	.loc 1 3822 0 is_stmt 0 discriminator 3
	movl	$0, %eax	#, iftmp.1270
.L1296:
	.loc 1 3822 0 discriminator 4
	movl	%eax, %r13d	# iftmp.1270, tmp
	.loc 1 3828 0 is_stmt 1 discriminator 4
	testl	%r13d, %r13d	# tmp
	jne	.L1297	#,
	.loc 1 3828 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2490, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L1297	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2506, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L1297	#,
	movl	$.LC107, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	strcmp	#
	testl	%eax, %eax	# D.28894
	je	.L1297	#,
	.loc 1 3829 0 is_stmt 1
	jmp	.L852	#
.L1297:
	.loc 1 3831 0
	movq	%rbx, %r12	# s, d
	.loc 1 3832 0
	jmp	.L1298	#
.L1300:
	.loc 1 3833 0
	addq	$1, %r12	#, d
.L1298:
	.loc 1 3832 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1273
	cmpq	%rax, %r12	# PL_bufend.1273, d
	jae	.L1299	#,
	.loc 1 3832 0 is_stmt 0 discriminator 2
	movzbl	(%r12), %eax	# *d_65, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1300	#,
	.loc 1 3832 0 discriminator 1
	movzbl	(%r12), %eax	# *d_65, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1300	#,
	movzbl	(%r12), %eax	# *d_65, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1300	#,
	movzbl	(%r12), %eax	# *d_65, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1300	#,
	movzbl	(%r12), %eax	# *d_65, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1300	#,
.L1299:
	.loc 1 3836 0 is_stmt 1
	testl	%r13d, %r13d	# tmp
	jne	.L1301	#,
	.loc 1 3836 0 is_stmt 0 discriminator 1
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1274
	cmpl	$3, %eax	#, PL_expect.1274
	jne	.L1301	#,
	.loc 1 3837 0 is_stmt 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1275
	cmpq	%rax, %r12	# PL_bufend.1275, d
	jae	.L1301	#,
	.loc 1 3837 0 is_stmt 0 discriminator 1
	movzbl	(%r12), %eax	# *d_65, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L1301	#,
	leaq	1(%r12), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2520, D.28896
	cmpb	$58, %al	#, D.28896
	je	.L1301	#,
	.loc 1 3838 0 is_stmt 1
	leaq	1(%r12), %rbx	#, s
	.loc 1 3839 0
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_savepv	#
	movq	%rax, PL_yylval(%rip)	# D.28895, PL_yylval.pval
	.loc 1 3840 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1277
	movl	72(%rax), %edx	# PL_curcop.1277_2524->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1278
	cmpl	%eax, %edx	# PL_copline.1278, D.28900
	jae	.L1302	#,
	.loc 1 3840 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1279
	movl	72(%rax), %eax	# PL_curcop.1279_2527->cop_line, iftmp.1276
	jmp	.L1303	#
.L1302:
	.loc 1 3840 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1276
.L1303:
	.loc 1 3840 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1276, PL_copline
	.loc 1 3841 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$266, %eax	#, D.28894
	jmp	.L2138	#
.L1301:
	.loc 1 3845 0
	movq	-1384(%rbp), %rax	# len, len.1280
	movl	%eax, %esi	# D.28894,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_keyword	#
	movl	%eax, %r13d	#, tmp
	.loc 1 3848 0
	movzbl	(%r12), %eax	# *d_65, D.28896
	cmpb	$61, %al	#, D.28896
	jne	.L1304	#,
	.loc 1 3848 0 is_stmt 0 discriminator 1
	leaq	1(%r12), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2535, D.28896
	cmpb	$62, %al	#, D.28896
	jne	.L1304	#,
	.loc 1 3849 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1282
	movl	72(%rax), %edx	# PL_curcop.1282_2537->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1283
	cmpl	%eax, %edx	# PL_copline.1283, D.28900
	jae	.L1305	#,
	.loc 1 3849 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1284
	movl	72(%rax), %eax	# PL_curcop.1284_2540->cop_line, iftmp.1281
	jmp	.L1306	#
.L1305:
	.loc 1 3849 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1281
.L1306:
	.loc 1 3849 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1281, PL_copline
	.loc 1 3850 0 is_stmt 1 discriminator 3
	movl	$0, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_newSVpv	#
	movq	%rax, %rdx	# D.28913,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.28903, PL_yylval.opval
	.loc 1 3851 0 discriminator 3
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movb	$64, 37(%rax)	#, _2545->op_private
	.loc 1 3852 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1285
	testq	%rax, %rax	# PL_linestr.1285
	je	.L1307	#,
	.loc 1 3852 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1286
	movl	12(%rax), %eax	# PL_linestr.1286_2547->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1307	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1287
	movzbl	37(%rax), %eax	# PL_curcop.1287_2550->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1308	#,
.L1307:
	.loc 1 3852 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1288
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1309	#,
.L1308:
	.loc 1 3852 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1289
	movzbl	37(%rax), %eax	# PL_curcop.1289_2556->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1309	#,
	movq	-1384(%rbp), %rax	# len, len.1290
	movq	%rax, %rsi	# len.1290,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_is_utf8_string	#
	testb	%al, %al	# D.28896
	je	.L1309	#,
	.loc 1 3853 0 is_stmt 1
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movq	40(%rax), %rax	# MEM[(struct SVOP *)_2562].op_sv, D.28913
	movq	PL_yylval(%rip), %rdx	# PL_yylval.opval, D.28903
	movq	40(%rdx), %rdx	# MEM[(struct SVOP *)_2564].op_sv, D.28913
	movl	12(%rdx), %edx	# _2565->sv_flags, D.28900
	orl	$536870912, %edx	#, D.28900
	movl	%edx, 12(%rax)	# D.28900, _2563->sv_flags
.L1309:
	.loc 1 3854 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1292
	movl	72(%rax), %edx	# PL_curcop.1292_2568->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1293
	cmpl	%eax, %edx	# PL_copline.1293, D.28900
	jae	.L1310	#,
	.loc 1 3854 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1294
	movl	72(%rax), %eax	# PL_curcop.1294_2571->cop_line, iftmp.1291
	jmp	.L1311	#
.L1310:
	.loc 1 3854 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1291
.L1311:
	.loc 1 3854 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1291, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$257, %eax	#, D.28894
	jmp	.L2138	#
.L1304:
	.loc 1 3857 0 is_stmt 1
	testl	%r13d, %r13d	# tmp
	jns	.L1312	#,
.LBB65:
	.loc 1 3858 0
	movq	$0, -1272(%rbp)	#, ogv
	.loc 1 3859 0
	movq	$0, -1264(%rbp)	#, hgv
	.loc 1 3860 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1295
	testl	%eax, %eax	# PL_expect.1295
	je	.L1313	#,
	.loc 1 3860 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2490, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L1314	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2579, D.28896
	cmpb	$58, %al	#, D.28896
	je	.L1313	#,
.L1314:
.LBB66:
	.loc 1 3862 0 is_stmt 1
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -1368(%rbp)	# tmp3597, gv
	cmpq	$0, -1368(%rbp)	#, gv
	je	.L1315	#,
	.loc 1 3863 0
	movq	-1368(%rbp), %rax	# gv, tmp3598
	movq	(%rax), %rax	# gv_2581->sv_any, D.28908
	movq	56(%rax), %rax	# _2582->xgv_gp, D.28909
	movl	64(%rax), %eax	# _2583->gp_cvgen, D.28900
	testl	%eax, %eax	# D.28900
	jne	.L1316	#,
	.loc 1 3863 0 is_stmt 0 discriminator 1
	movq	-1368(%rbp), %rax	# gv, tmp3599
	movq	(%rax), %rax	# gv_2581->sv_any, D.28908
	movq	56(%rax), %rax	# _2585->xgv_gp, D.28909
	movq	56(%rax), %rax	# _2586->gp_cv, iftmp.1296
	jmp	.L1317	#
.L1316:
	.loc 1 3863 0 discriminator 2
	movl	$0, %eax	#, iftmp.1296
.L1317:
	.loc 1 3863 0 discriminator 3
	movq	%rax, -1120(%rbp)	# iftmp.1296, cv
	.loc 1 3862 0 is_stmt 1 discriminator 3
	cmpq	$0, -1120(%rbp)	#, cv
	je	.L1315	#,
	.loc 1 3865 0
	movq	-1368(%rbp), %rax	# gv, tmp3600
	movq	(%rax), %rax	# gv_2581->sv_any, D.28908
	movzbl	88(%rax), %eax	# _2590->xgv_flags, D.28904
	testb	%al, %al	# D.28917
	jns	.L1318	#,
	.loc 1 3866 0
	movq	-1368(%rbp), %rax	# gv, tmp3601
	movq	%rax, -1272(%rbp)	# tmp3601, ogv
	jmp	.L1315	#
.L1318:
	.loc 1 3867 0
	movq	-1120(%rbp), %rax	# cv, tmp3602
	movq	(%rax), %rax	# cv_2589->sv_any, D.28911
	movzwl	136(%rax), %eax	# _2594->xcv_flags, D.28912
	movzwl	%ax, %eax	# D.28912, D.28894
	andl	$64, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1315	#,
	.loc 1 3868 0
	movq	-1368(%rbp), %rax	# gv, tmp3603
	movq	%rax, -1264(%rbp)	# tmp3603, hgv
.L1315:
	.loc 1 3870 0
	cmpq	$0, -1272(%rbp)	#, ogv
	jne	.L1313	#,
	.loc 1 3871 0 discriminator 1
	movq	-1384(%rbp), %rax	# len, len.1297
	movl	%eax, %edx	# len.1297, D.28894
	movq	PL_globalstash(%rip), %rax	# PL_globalstash, PL_globalstash.1298
	.loc 1 3870 0 discriminator 1
	movl	$0, %ecx	#,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rax, %rdi	# PL_globalstash.1298,
	call	Perl_hv_fetch	#
	movq	%rax, -1360(%rbp)	# tmp3604, gvp
	cmpq	$0, -1360(%rbp)	#, gvp
	je	.L1313	#,
	.loc 1 3872 0
	movq	-1360(%rbp), %rax	# gvp, tmp3605
	movq	(%rax), %rax	# *gvp_2602, tmp3606
	movq	%rax, -1368(%rbp)	# tmp3606, gv
	.loc 1 3871 0
	cmpq	$PL_sv_undef, -1368(%rbp)	#, gv
	je	.L1313	#,
	.loc 1 3873 0
	movq	-1368(%rbp), %rax	# gv, tmp3607
	movq	(%rax), %rax	# gv_2603->sv_any, D.28908
	movq	56(%rax), %rax	# _2604->xgv_gp, D.28909
	movl	64(%rax), %eax	# _2605->gp_cvgen, D.28900
	.loc 1 3872 0
	testl	%eax, %eax	# D.28900
	jne	.L1313	#,
	.loc 1 3873 0 discriminator 1
	movq	-1368(%rbp), %rax	# gv, tmp3608
	movq	(%rax), %rax	# gv_2603->sv_any, D.28908
	movq	56(%rax), %rax	# _2607->xgv_gp, D.28909
	movq	56(%rax), %rax	# _2608->gp_cv, D.28915
	.loc 1 3872 0 discriminator 1
	testq	%rax, %rax	# D.28915
	je	.L1313	#,
	.loc 1 3873 0
	movq	-1368(%rbp), %rax	# gv, tmp3609
	movq	(%rax), %rax	# gv_2603->sv_any, D.28908
	movzbl	88(%rax), %eax	# _2610->xgv_flags, D.28904
	testb	%al, %al	# D.28917
	jns	.L1313	#,
	.loc 1 3875 0
	movq	-1368(%rbp), %rax	# gv, tmp3610
	movq	%rax, -1272(%rbp)	# tmp3610, ogv
.L1313:
.LBE66:
	.loc 1 3878 0
	cmpq	$0, -1272(%rbp)	#, ogv
	je	.L1319	#,
	.loc 1 3879 0
	movl	%r13d, -1428(%rbp)	# tmp, orig_keyword
	.loc 1 3880 0
	movl	$0, %r13d	#, tmp
	jmp	.L1312	#
.L1319:
	.loc 1 3882 0
	cmpq	$0, -1368(%rbp)	#, gv
	je	.L1320	#,
	.loc 1 3882 0 is_stmt 0 discriminator 1
	cmpq	$0, -1360(%rbp)	#, gvp
	jne	.L1320	#,
	.loc 1 3883 0 is_stmt 1
	cmpl	$-116, %r13d	#, tmp
	jne	.L1320	#,
	.loc 1 3884 0
	movq	-1368(%rbp), %rax	# gv, tmp3611
	movq	(%rax), %rax	# gv_81->sv_any, D.28908
	movq	56(%rax), %rax	# _2616->xgv_gp, D.28909
	movl	64(%rax), %eax	# _2617->gp_cvgen, D.28900
	testl	%eax, %eax	# D.28900
	jne	.L1320	#,
	.loc 1 3884 0 is_stmt 0 discriminator 1
	movq	-1368(%rbp), %rax	# gv, tmp3612
	movq	(%rax), %rax	# gv_81->sv_any, D.28908
	movq	56(%rax), %rax	# _2619->xgv_gp, D.28909
	movq	56(%rax), %rax	# _2620->gp_cv, D.28915
	testq	%rax, %rax	# D.28915
	je	.L1320	#,
	.loc 1 3885 0 is_stmt 1
	movq	PL_incgv(%rip), %rax	# PL_incgv, PL_incgv.1300
	movq	(%rax), %rax	# PL_incgv.1300_2622->sv_any, D.28908
	movq	56(%rax), %rax	# _2623->xgv_gp, D.28909
	movq	40(%rax), %rax	# _2624->gp_hv, D.28918
	testq	%rax, %rax	# D.28918
	je	.L1321	#,
	.loc 1 3885 0 is_stmt 0 discriminator 1
	movq	PL_incgv(%rip), %rax	# PL_incgv, PL_incgv.1301
	movq	(%rax), %rax	# PL_incgv.1301_2626->sv_any, D.28908
	movq	56(%rax), %rax	# _2627->xgv_gp, D.28909
	movq	40(%rax), %rax	# _2628->gp_hv, iftmp.1299
	jmp	.L1322	#
.L1321:
	.loc 1 3885 0 discriminator 2
	movq	PL_incgv(%rip), %rax	# PL_incgv, PL_incgv.1302
	movq	%rax, %rdi	# PL_incgv.1302,
	call	Perl_gv_HVadd	#
	movq	(%rax), %rax	# _2631->sv_any, D.28908
	movq	56(%rax), %rax	# _2632->xgv_gp, D.28909
	movq	40(%rax), %rax	# _2633->gp_hv, iftmp.1299
.L1322:
	.loc 1 3885 0 discriminator 3
	movl	$0, %ecx	#,
	movl	$9, %edx	#,
	movl	$.LC108, %esi	#,
	movq	%rax, %rdi	# iftmp.1299,
	call	Perl_hv_fetch	#
	testq	%rax, %rax	# D.28919
	jne	.L1320	#,
	.loc 1 3887 0 is_stmt 1
	movl	$0, %r13d	#, tmp
	jmp	.L1312	#
.L1320:
	.loc 1 3890 0
	negl	%r13d	# tmp
	.loc 1 3891 0
	cmpl	$42, %r13d	#, tmp
	jne	.L1323	#,
	.loc 1 3891 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1303
	movq	80(%rax), %rax	# PL_curcop.1303_2638->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1324	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1304
	movq	80(%rax), %rax	# PL_curcop.1304_2640->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1324	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1305
	movq	80(%rax), %rax	# PL_curcop.1305_2642->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1325	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1306
	movq	80(%rax), %rax	# PL_curcop.1306_2644->cop_warnings, D.28913
	movq	(%rax), %rax	# _2645->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_2646].xpv_pv, D.28895
	addq	$3, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2648, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1325	#,
.L1324:
	.loc 1 3891 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1307
	movq	80(%rax), %rax	# PL_curcop.1307_2652->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1323	#,
	.loc 1 3891 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1308
	movzbl	%al, %eax	# PL_dowarn.1308, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1323	#,
.L1325:
	.loc 1 3892 0 is_stmt 1
	movl	$.LC109, %esi	#,
	movl	$12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1323:
	.loc 1 3895 0
	movq	$0, -1368(%rbp)	#, gv
	.loc 1 3896 0
	movq	$0, -1360(%rbp)	#, gvp
	.loc 1 3897 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1309
	movq	80(%rax), %rax	# PL_curcop.1309_2659->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1326	#,
	.loc 1 3897 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1310
	movq	80(%rax), %rax	# PL_curcop.1310_2661->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1326	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1311
	movq	80(%rax), %rax	# PL_curcop.1311_2663->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1327	#,
	.loc 1 3897 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1312
	movq	80(%rax), %rax	# PL_curcop.1312_2665->cop_warnings, D.28913
	movq	(%rax), %rax	# _2666->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_2667].xpv_pv, D.28895
	addq	$7, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2669, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$4, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1327	#,
.L1326:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1313
	movq	80(%rax), %rax	# PL_curcop.1313_2673->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1312	#,
	.loc 1 3897 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1314
	movzbl	%al, %eax	# PL_dowarn.1314, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1312	#,
.L1327:
	cmpq	$0, -1264(%rbp)	#, hgv
	je	.L1312	#,
	.loc 1 3898 0 is_stmt 1
	cmpl	$243, %r13d	#, tmp
	je	.L1312	#,
	.loc 1 3898 0 is_stmt 0 discriminator 1
	cmpl	$8, %r13d	#, tmp
	je	.L1312	#,
	.loc 1 3901 0 is_stmt 1
	movq	-1264(%rbp), %rax	# hgv, tmp3613
	movq	(%rax), %rax	# hgv_135->sv_any, D.28908
	movq	56(%rax), %rax	# _2678->xgv_gp, D.28909
	movq	48(%rax), %rax	# _2679->gp_egv, D.28907
	testq	%rax, %rax	# D.28907
	je	.L1328	#,
	.loc 1 3901 0 is_stmt 0 discriminator 1
	movq	-1264(%rbp), %rax	# hgv, tmp3614
	movq	(%rax), %rax	# hgv_135->sv_any, D.28908
	movq	56(%rax), %rax	# _2681->xgv_gp, D.28909
	movq	48(%rax), %rax	# _2682->gp_egv, iftmp.1315
	jmp	.L1329	#
.L1328:
	.loc 1 3901 0 discriminator 2
	movq	-1264(%rbp), %rax	# hgv, iftmp.1315
.L1329:
	.loc 1 3901 0 discriminator 3
	movq	(%rax), %rax	# iftmp.1315_225->sv_any, D.28908
	.loc 1 3899 0 is_stmt 1 discriminator 3
	movq	64(%rax), %rax	# _2685->xgv_name, D.28895
	movl	$.LC110, %ecx	#,
	movq	%rax, %rdx	# D.28895,
	movl	$.LC111, %esi	#,
	movl	$29, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1312:
.LBE65:
	.loc 1 3906 0
	cmpl	$245, %r13d	#, tmp
	ja	.L852	#,
	movl	%r13d, %eax	# tmp, tmp3615
	movq	.L1331(,%rax,8), %rax	#, tmp3616
	jmp	*%rax	# tmp3616
	.section	.rodata
	.align 8
	.align 4
.L1331:
	.quad	.L852
	.quad	.L1330
	.quad	.L1332
	.quad	.L1333
	.quad	.L1334
	.quad	.L1334
	.quad	.L1335
	.quad	.L1335
	.quad	.L1336
	.quad	.L1335
	.quad	.L1335
	.quad	.L1335
	.quad	.L1335
	.quad	.L1337
	.quad	.L1338
	.quad	.L1339
	.quad	.L1340
	.quad	.L1341
	.quad	.L1342
	.quad	.L1343
	.quad	.L1344
	.quad	.L1345
	.quad	.L1346
	.quad	.L1347
	.quad	.L1348
	.quad	.L1349
	.quad	.L1350
	.quad	.L1351
	.quad	.L1352
	.quad	.L1353
	.quad	.L1354
	.quad	.L1355
	.quad	.L1356
	.quad	.L1357
	.quad	.L1358
	.quad	.L1359
	.quad	.L1360
	.quad	.L1361
	.quad	.L1362
	.quad	.L1363
	.quad	.L1364
	.quad	.L1365
	.quad	.L1366
	.quad	.L1367
	.quad	.L1368
	.quad	.L1369
	.quad	.L1370
	.quad	.L1371
	.quad	.L1372
	.quad	.L1373
	.quad	.L1374
	.quad	.L1375
	.quad	.L1376
	.quad	.L1377
	.quad	.L1378
	.quad	.L1379
	.quad	.L1380
	.quad	.L1381
	.quad	.L1382
	.quad	.L1383
	.quad	.L1384
	.quad	.L1385
	.quad	.L1386
	.quad	.L1386
	.quad	.L1387
	.quad	.L1388
	.quad	.L1389
	.quad	.L1390
	.quad	.L1391
	.quad	.L1392
	.quad	.L1393
	.quad	.L1394
	.quad	.L1395
	.quad	.L1396
	.quad	.L1397
	.quad	.L1398
	.quad	.L1399
	.quad	.L1400
	.quad	.L1401
	.quad	.L1402
	.quad	.L1403
	.quad	.L1404
	.quad	.L1405
	.quad	.L1406
	.quad	.L1407
	.quad	.L1408
	.quad	.L1409
	.quad	.L1410
	.quad	.L1411
	.quad	.L1412
	.quad	.L1413
	.quad	.L1414
	.quad	.L1415
	.quad	.L1416
	.quad	.L1417
	.quad	.L1418
	.quad	.L1419
	.quad	.L1420
	.quad	.L1421
	.quad	.L1422
	.quad	.L1423
	.quad	.L1424
	.quad	.L1425
	.quad	.L1426
	.quad	.L1427
	.quad	.L1428
	.quad	.L1429
	.quad	.L1430
	.quad	.L1431
	.quad	.L1432
	.quad	.L1433
	.quad	.L1434
	.quad	.L1435
	.quad	.L1436
	.quad	.L1437
	.quad	.L1438
	.quad	.L1439
	.quad	.L1440
	.quad	.L1441
	.quad	.L1442
	.quad	.L1443
	.quad	.L1444
	.quad	.L1445
	.quad	.L1446
	.quad	.L1447
	.quad	.L1448
	.quad	.L1449
	.quad	.L1450
	.quad	.L1451
	.quad	.L1452
	.quad	.L1453
	.quad	.L1454
	.quad	.L1455
	.quad	.L1456
	.quad	.L1457
	.quad	.L1458
	.quad	.L1459
	.quad	.L1450
	.quad	.L1460
	.quad	.L1461
	.quad	.L1462
	.quad	.L1463
	.quad	.L1464
	.quad	.L1465
	.quad	.L1466
	.quad	.L1467
	.quad	.L1468
	.quad	.L1469
	.quad	.L1470
	.quad	.L1471
	.quad	.L1472
	.quad	.L1473
	.quad	.L1474
	.quad	.L1475
	.quad	.L1476
	.quad	.L1477
	.quad	.L1478
	.quad	.L1479
	.quad	.L1480
	.quad	.L1481
	.quad	.L1482
	.quad	.L1483
	.quad	.L1484
	.quad	.L1485
	.quad	.L1486
	.quad	.L1487
	.quad	.L1488
	.quad	.L1489
	.quad	.L1490
	.quad	.L1491
	.quad	.L1492
	.quad	.L1493
	.quad	.L1494
	.quad	.L1495
	.quad	.L1496
	.quad	.L1497
	.quad	.L1498
	.quad	.L1499
	.quad	.L1500
	.quad	.L1501
	.quad	.L1502
	.quad	.L1503
	.quad	.L1504
	.quad	.L1505
	.quad	.L1506
	.quad	.L1507
	.quad	.L1508
	.quad	.L1509
	.quad	.L1510
	.quad	.L1511
	.quad	.L1512
	.quad	.L1513
	.quad	.L1514
	.quad	.L1515
	.quad	.L1516
	.quad	.L1517
	.quad	.L1518
	.quad	.L1519
	.quad	.L1520
	.quad	.L1521
	.quad	.L1522
	.quad	.L1523
	.quad	.L1524
	.quad	.L1525
	.quad	.L1526
	.quad	.L1527
	.quad	.L1388
	.quad	.L1528
	.quad	.L1529
	.quad	.L1530
	.quad	.L1531
	.quad	.L1532
	.quad	.L1533
	.quad	.L1534
	.quad	.L1535
	.quad	.L1536
	.quad	.L1537
	.quad	.L1538
	.quad	.L1539
	.quad	.L1540
	.quad	.L1541
	.quad	.L1542
	.quad	.L1543
	.quad	.L1544
	.quad	.L1545
	.quad	.L1546
	.quad	.L1547
	.quad	.L1548
	.quad	.L1549
	.quad	.L1550
	.quad	.L1551
	.quad	.L1552
	.quad	.L1553
	.quad	.L1554
	.quad	.L1555
	.quad	.L1556
	.quad	.L1557
	.quad	.L1558
	.quad	.L1559
	.quad	.L1560
	.quad	.L1561
	.quad	.L1562
	.quad	.L1563
	.quad	.L1564
	.quad	.L1565
	.quad	.L1566
	.text
.L852:
.LBB67:
	.loc 1 3911 0
	movl	$0, -1408(%rbp)	#, pkgname
	.loc 1 3912 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.1317
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.1318
	cmpq	%rax, %rdx	# PL_oldoldbufptr.1318, PL_bufptr.1317
	je	.L1567	#,
	.loc 1 3912 0 is_stmt 0 discriminator 1
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.1319
	movzbl	-1(%rax), %eax	# MEM[(char *)PL_bufptr.1319_4241 + -1B], iftmp.1316
	jmp	.L1568	#
.L1567:
	.loc 1 3912 0 discriminator 2
	movl	$0, %eax	#, iftmp.1316
.L1568:
	.loc 1 3912 0 discriminator 3
	movb	%al, -1430(%rbp)	# iftmp.1316, lastchar
	.loc 1 3916 0 is_stmt 1 discriminator 3
	movzbl	(%rbx), %eax	# *s_34, D.28896
	cmpb	$39, %al	#, D.28896
	je	.L1569	#,
	.loc 1 3916 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_34, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L1570	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4247, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L1570	#,
.L1569:
.LBB68:
	.loc 1 3918 0 is_stmt 1
	movq	-1384(%rbp), %rax	# len, len.1320
	movl	$256, %edx	#, tmp3617
	subq	%rax, %rdx	# len.1320, D.28898
	movq	-1384(%rbp), %rax	# len, len.1321
	addq	$PL_tokenbuf, %rax	#, D.28895
	leaq	-1376(%rbp), %rcx	#, tmp3618
	movq	%rcx, %r8	# tmp3618,
	movl	$1, %ecx	#,
	movq	%rax, %rsi	# D.28895,
	movq	%rbx, %rdi	# s,
	call	S_scan_word	#
	movq	%rax, %rbx	#, s
	.loc 1 3920 0
	movq	-1376(%rbp), %rax	# morelen, morelen.1322
	testq	%rax, %rax	# morelen.1322
	jne	.L1571	#,
	.loc 1 3922 0
	movzbl	(%rbx), %eax	# *s_4253, D.28896
	.loc 1 3921 0
	cmpb	$39, %al	#, D.28896
	jne	.L1572	#,
	.loc 1 3921 0 is_stmt 0 discriminator 1
	movl	$.LC112, %eax	#, iftmp.1323
	jmp	.L1573	#
.L1572:
	.loc 1 3921 0 discriminator 2
	movl	$.LC113, %eax	#, iftmp.1323
.L1573:
	.loc 1 3921 0 discriminator 3
	movq	%rax, %rdx	# iftmp.1323,
	movl	$PL_tokenbuf, %esi	#,
	movl	$.LC114, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1571:
	.loc 1 3923 0 is_stmt 1
	movq	-1384(%rbp), %rdx	# len, len.1324
	movq	-1376(%rbp), %rax	# morelen, morelen.1325
	addq	%rdx, %rax	# len.1324, len.1326
	movq	%rax, -1384(%rbp)	# len.1326, len
	.loc 1 3924 0
	movl	$1, -1408(%rbp)	#, pkgname
.L1570:
.LBE68:
	.loc 1 3927 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1327
	testl	%eax, %eax	# PL_expect.1327
	jne	.L1574	#,
	.loc 1 3928 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.1328
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.1329
	cmpq	%rax, %rdx	# PL_linestart.1329, PL_bufptr.1328
	jne	.L1575	#,
	.loc 1 3929 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1330
	movl	72(%rax), %edx	# PL_curcop.1330_4265->cop_line, D.28900
	subl	$1, %edx	#, D.28900
	movl	%edx, 72(%rax)	# D.28900, PL_curcop.1330_4265->cop_line
	.loc 1 3930 0
	movl	$PL_warn_nosemi, %esi	#,
	movl	$38, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 3931 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1331
	movl	72(%rax), %edx	# PL_curcop.1331_4268->cop_line, D.28900
	addl	$1, %edx	#, D.28900
	movl	%edx, 72(%rax)	# D.28900, PL_curcop.1331_4268->cop_line
	jmp	.L1574	#
.L1575:
	.loc 1 3934 0
	movq	%rbx, %rsi	# s,
	movl	$.LC115, %edi	#,
	call	S_no_op	#
.L1574:
	.loc 1 3941 0
	movq	-1384(%rbp), %rax	# len, len.1332
	cmpq	$2, %rax	#, len.1332
	jbe	.L1576	#,
	.loc 1 3942 0 discriminator 1
	movq	-1384(%rbp), %rax	# len, len.1333
	subq	$2, %rax	#, D.28898
	movzbl	PL_tokenbuf(%rax), %eax	# PL_tokenbuf, D.28896
	.loc 1 3941 0 discriminator 1
	cmpb	$58, %al	#, D.28896
	jne	.L1576	#,
	.loc 1 3942 0
	movq	-1384(%rbp), %rax	# len, len.1334
	subq	$1, %rax	#, D.28898
	movzbl	PL_tokenbuf(%rax), %eax	# PL_tokenbuf, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L1576	#,
	.loc 1 3944 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1335
	movq	80(%rax), %rax	# PL_curcop.1335_4278->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1577	#,
	.loc 1 3944 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1336
	movq	80(%rax), %rax	# PL_curcop.1336_4280->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1577	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1337
	movq	80(%rax), %rax	# PL_curcop.1337_4282->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1578	#,
	.loc 1 3944 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1338
	movq	80(%rax), %rax	# PL_curcop.1338_4284->cop_warnings, D.28913
	movq	(%rax), %rax	# _4285->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_4286].xpv_pv, D.28895
	addq	$7, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4288, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$16, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1578	#,
.L1577:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1339
	movq	80(%rax), %rax	# PL_curcop.1339_4292->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1579	#,
	.loc 1 3944 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1340
	movzbl	%al, %eax	# PL_dowarn.1340, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1579	#,
.L1578:
	movl	$11, %edx	#,
	movl	$0, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_gv_fetchpv	#
	testq	%rax, %rax	# D.28907
	jne	.L1579	#,
	.loc 1 3945 0 is_stmt 1
	movl	$PL_tokenbuf, %edx	#,
	movl	$.LC116, %esi	#,
	movl	$30, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1579:
	.loc 1 3948 0
	movq	-1384(%rbp), %rax	# len, len.1341
	subq	$2, %rax	#, len.1342
	movq	%rax, -1384(%rbp)	# len.1342, len
	.loc 1 3949 0
	movq	-1384(%rbp), %rax	# len, len.1343
	movb	$0, PL_tokenbuf(%rax)	#, PL_tokenbuf
	.loc 1 3950 0
	movq	$0, -1368(%rbp)	#, gv
	.loc 1 3951 0
	movq	$0, -1360(%rbp)	#, gvp
	jmp	.L1580	#
.L1576:
	.loc 1 3954 0
	movq	$0, -1384(%rbp)	#, len
	.loc 1 3955 0
	cmpq	$0, -1368(%rbp)	#, gv
	jne	.L1580	#,
	.loc 1 3956 0
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -1368(%rbp)	# tmp3619, gv
.L1580:
	.loc 1 3961 0
	cmpq	$0, -1360(%rbp)	#, gvp
	je	.L1581	#,
	.loc 1 3962 0
	movl	$14, %esi	#,
	movl	$.LC117, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, -1256(%rbp)	# tmp3620, sv
	.loc 1 3963 0
	movq	-1256(%rbp), %rax	# sv, tmp3621
	movl	$PL_tokenbuf, %esi	#,
	movq	%rax, %rdi	# tmp3621,
	call	Perl_sv_catpv	#
	jmp	.L1582	#
.L1581:
	.loc 1 3969 0
	movq	-1384(%rbp), %rax	# len, len.1344
	movq	%rax, %rsi	# len.1344,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_newSVpv	#
	movq	%rax, -1256(%rbp)	# tmp3622, sv
.L1582:
	.loc 1 3974 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1346
	movl	72(%rax), %edx	# PL_curcop.1346_4307->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1347
	cmpl	%eax, %edx	# PL_copline.1347, D.28900
	jae	.L1583	#,
	.loc 1 3974 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1348
	movl	72(%rax), %eax	# PL_curcop.1348_4310->cop_line, iftmp.1345
	jmp	.L1584	#
.L1583:
	.loc 1 3974 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1345
.L1584:
	.loc 1 3974 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1345, PL_copline
	.loc 1 3975 0 is_stmt 1 discriminator 3
	movq	-1256(%rbp), %rax	# sv, tmp3623
	movq	%rax, %rdx	# tmp3623,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.28903, PL_yylval.opval
	.loc 1 3976 0 discriminator 3
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movb	$64, 37(%rax)	#, _4314->op_private
	.loc 1 3978 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1349
	testq	%rax, %rax	# PL_linestr.1349
	je	.L1585	#,
	.loc 1 3978 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1350
	movl	12(%rax), %eax	# PL_linestr.1350_4316->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1585	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1351
	movzbl	37(%rax), %eax	# PL_curcop.1351_4319->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1586	#,
.L1585:
	.loc 1 3978 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1352
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1587	#,
.L1586:
	.loc 1 3978 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1353
	movzbl	37(%rax), %eax	# PL_curcop.1353_4325->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1587	#,
	.loc 1 3979 0 is_stmt 1 discriminator 1
	movq	-1256(%rbp), %rax	# sv, tmp3624
	movq	(%rax), %rax	# sv_136->sv_any, D.28901
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_4329].xpv_cur, D.28898
	movq	-1256(%rbp), %rax	# sv, tmp3625
	movq	(%rax), %rax	# sv_136->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_4331].xpv_pv, D.28895
	movq	%rdx, %rsi	# D.28898,
	movq	%rax, %rdi	# D.28895,
	call	Perl_is_utf8_string	#
	.loc 1 3978 0 discriminator 1
	testb	%al, %al	# D.28896
	je	.L1587	#,
	.loc 1 3980 0
	movq	-1256(%rbp), %rax	# sv, tmp3626
	movl	12(%rax), %eax	# sv_136->sv_flags, D.28900
	orl	$536870912, %eax	#, D.28900
	movl	%eax, %edx	# D.28900, D.28900
	movq	-1256(%rbp), %rax	# sv, tmp3627
	movl	%edx, 12(%rax)	# D.28900, sv_136->sv_flags
.L1587:
	.loc 1 3984 0
	movq	-1384(%rbp), %rax	# len, len.1354
	testq	%rax, %rax	# len.1354
	je	.L1588	#,
	.loc 1 3985 0
	jmp	.L1589	#
.L1588:
	.loc 1 3989 0
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.1355
	testq	%rax, %rax	# PL_oldoldbufptr.1355
	je	.L1590	#,
	.loc 1 3990 0 discriminator 1
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.1356
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.1357
	.loc 1 3989 0 discriminator 1
	cmpq	%rax, %rdx	# PL_bufptr.1357, PL_oldoldbufptr.1356
	jae	.L1590	#,
	.loc 1 3991 0
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.1358
	movq	PL_last_lop(%rip), %rax	# PL_last_lop, PL_last_lop.1359
	.loc 1 3990 0
	cmpq	%rax, %rdx	# PL_last_lop.1359, PL_oldoldbufptr.1358
	je	.L1591	#,
	.loc 1 3992 0
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.1360
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.1361
	cmpq	%rax, %rdx	# PL_last_uni.1361, PL_oldoldbufptr.1360
	jne	.L1590	#,
.L1591:
	.loc 1 3994 0 discriminator 1
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1362
	.loc 1 3992 0 discriminator 1
	cmpl	$2, %eax	#, PL_expect.1362
	je	.L1592	#,
	.loc 1 3995 0
	movzwl	PL_last_lop_op(%rip), %eax	# PL_last_lop_op, PL_last_lop_op.1363
	movzwl	%ax, %eax	# PL_last_lop_op.1363, D.28894
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.28900
	shrl	$13, %eax	#, D.28900
	andl	$7, %eax	#, D.28900
	.loc 1 3994 0
	cmpl	$6, %eax	#, D.28900
	jne	.L1590	#,
.L1592:
.LBB69:
	.loc 1 3997 0
	movzbl	(%rbx), %eax	# *s_35, D.28896
	cmpb	$40, %al	#, D.28896
	sete	%al	#, D.28899
	movb	%al, -1429(%rbp)	# D.28899, immediate_paren
	.loc 1 4000 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 4004 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1364
	movzbl	37(%rax), %eax	# PL_curcop.1364_4354->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1593	#,
	.loc 1 4004 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1365
	testq	%rax, %rax	# PL_linestr.1365
	je	.L1594	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1366
	movl	12(%rax), %eax	# PL_linestr.1366_4359->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1594	#,
	.loc 1 4004 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1367
	movzbl	37(%rax), %eax	# PL_curcop.1367_4362->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1595	#,
.L1594:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1368
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1593	#,
.L1595:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_4353], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1596	#,
.L1593:
	movzbl	(%rbx), %eax	# *s_4353, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1597	#,
	movzbl	(%rbx), %eax	# *s_4353, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1598	#,
.L1597:
	.loc 1 4004 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4353, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1599	#,
	.loc 1 4004 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_4353, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1598	#,
.L1599:
	.loc 1 4004 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4353, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1600	#,
.L1598:
	.loc 1 4004 0 discriminator 1
	movl	$1, %eax	#, iftmp.1369
	jmp	.L1601	#
.L1600:
	.loc 1 4004 0 discriminator 3
	movl	$0, %eax	#, iftmp.1369
.L1601:
	.loc 1 4004 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L1602	#,
	jmp	.L1603	#
.L1596:
	.loc 1 4004 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1604	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1604	#,
	.loc 1 4004 0 discriminator 3
	movl	$1, %eax	#, iftmp.1370
	jmp	.L1605	#
.L1604:
	.loc 1 4004 0 discriminator 2
	movl	$0, %eax	#, iftmp.1370
.L1605:
	.loc 1 4004 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L1602	#,
.L1603:
	.loc 1 4004 0 discriminator 5
	movzbl	(%rbx), %eax	# *s_4353, D.28896
	cmpb	$36, %al	#, D.28896
	jne	.L1606	#,
.L1602:
	.loc 1 4004 0 discriminator 3
	movq	-1368(%rbp), %rax	# gv, tmp3629
	movq	%rax, %rsi	# tmp3629,
	movq	%rbx, %rdi	# s,
	call	S_intuit_method	#
	movl	%eax, %r13d	#, tmp
	testl	%r13d, %r13d	# tmp
	je	.L1606	#,
	.loc 1 4005 0 is_stmt 1
	movl	%r13d, %eax	# tmp, D.28894
	jmp	.L2138	#
.L1606:
	.loc 1 4010 0
	cmpb	$0, -1429(%rbp)	#, immediate_paren
	jne	.L1590	#,
	.loc 1 4010 0 is_stmt 0 discriminator 1
	movzwl	PL_last_lop_op(%rip), %eax	# PL_last_lop_op, PL_last_lop_op.1371
	cmpw	$150, %ax	#, PL_last_lop_op.1371
	je	.L1607	#,
	cmpq	$0, -1368(%rbp)	#, gv
	je	.L1608	#,
	.loc 1 4011 0 is_stmt 1
	movq	-1368(%rbp), %rax	# gv, tmp3630
	movq	(%rax), %rax	# gv_84->sv_any, D.28908
	movq	56(%rax), %rax	# _4386->xgv_gp, D.28909
	movl	64(%rax), %eax	# _4387->gp_cvgen, D.28900
	testl	%eax, %eax	# D.28900
	jne	.L1608	#,
	.loc 1 4011 0 is_stmt 0 discriminator 2
	movq	-1368(%rbp), %rax	# gv, tmp3631
	movq	(%rax), %rax	# gv_84->sv_any, D.28908
	movq	56(%rax), %rax	# _4389->xgv_gp, D.28909
	movq	56(%rax), %rax	# _4390->gp_cv, D.28915
	testq	%rax, %rax	# D.28915
	jne	.L1590	#,
.L1608:
	.loc 1 4012 0 is_stmt 1 discriminator 1
	movzwl	PL_last_lop_op(%rip), %eax	# PL_last_lop_op, PL_last_lop_op.1372
	.loc 1 4011 0 discriminator 1
	cmpw	$154, %ax	#, PL_last_lop_op.1372
	je	.L1590	#,
	.loc 1 4013 0
	movzwl	PL_last_lop_op(%rip), %eax	# PL_last_lop_op, PL_last_lop_op.1373
	.loc 1 4012 0
	cmpw	$152, %ax	#, PL_last_lop_op.1373
	je	.L1590	#,
.L1607:
	.loc 1 4015 0
	movq	PL_last_lop(%rip), %rdx	# PL_last_lop, PL_last_lop.1374
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.1375
	cmpq	%rax, %rdx	# PL_oldoldbufptr.1375, PL_last_lop.1374
	sete	%al	#, D.28899
	movzbl	%al, %eax	# D.28899, PL_expect.1376
	movl	%eax, PL_expect(%rip)	# PL_expect.1376, PL_expect
	.loc 1 4016 0
	jmp	.L1609	#
.L1590:
.LBE69:
	.loc 1 4020 0
	movl	$0, PL_expect(%rip)	#, PL_expect
	.loc 1 4021 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 4024 0
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$61, %al	#, D.28896
	jne	.L1610	#,
	.loc 1 4024 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4400, D.28896
	cmpb	$62, %al	#, D.28896
	jne	.L1610	#,
	cmpl	$0, -1408(%rbp)	#, pkgname
	jne	.L1610	#,
	.loc 1 4025 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1378
	movl	72(%rax), %edx	# PL_curcop.1378_4402->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1379
	cmpl	%eax, %edx	# PL_copline.1379, D.28900
	jae	.L1611	#,
	.loc 1 4025 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1380
	movl	72(%rax), %eax	# PL_curcop.1380_4405->cop_line, iftmp.1377
	jmp	.L1612	#
.L1611:
	.loc 1 4025 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1377
.L1612:
	.loc 1 4025 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1377, PL_copline
	.loc 1 4026 0 is_stmt 1 discriminator 3
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movq	40(%rax), %rax	# MEM[(struct SVOP *)_4408].op_sv, D.28913
	movl	$PL_tokenbuf, %esi	#,
	movq	%rax, %rdi	# D.28913,
	call	Perl_sv_setpv	#
	.loc 1 4027 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1381
	testq	%rax, %rax	# PL_linestr.1381
	je	.L1613	#,
	.loc 1 4027 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1382
	movl	12(%rax), %eax	# PL_linestr.1382_4411->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1613	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1383
	movzbl	37(%rax), %eax	# PL_curcop.1383_4414->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1614	#,
.L1613:
	.loc 1 4027 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1384
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1615	#,
.L1614:
	.loc 1 4027 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1385
	movzbl	37(%rax), %eax	# PL_curcop.1385_4420->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1615	#,
	movq	-1384(%rbp), %rax	# len, len.1386
	movq	%rax, %rsi	# len.1386,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_is_utf8_string	#
	testb	%al, %al	# D.28896
	je	.L1615	#,
	.loc 1 4028 0 is_stmt 1
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movq	40(%rax), %rax	# MEM[(struct SVOP *)_4426].op_sv, D.28913
	movq	PL_yylval(%rip), %rdx	# PL_yylval.opval, D.28903
	movq	40(%rdx), %rdx	# MEM[(struct SVOP *)_4428].op_sv, D.28913
	movl	12(%rdx), %edx	# _4429->sv_flags, D.28900
	orl	$536870912, %edx	#, D.28900
	movl	%edx, 12(%rax)	# D.28900, _4427->sv_flags
.L1615:
	.loc 1 4029 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1388
	movl	72(%rax), %edx	# PL_curcop.1388_4432->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1389
	cmpl	%eax, %edx	# PL_copline.1389, D.28900
	jae	.L1616	#,
	.loc 1 4029 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1390
	movl	72(%rax), %eax	# PL_curcop.1390_4435->cop_line, iftmp.1387
	jmp	.L1617	#
.L1616:
	.loc 1 4029 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1387
.L1617:
	.loc 1 4029 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1387, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$257, %eax	#, D.28894
	jmp	.L2138	#
.L1610:
	.loc 1 4033 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1618	#,
	.loc 1 4034 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1392
	movl	72(%rax), %edx	# PL_curcop.1392_4440->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1393
	cmpl	%eax, %edx	# PL_copline.1393, D.28900
	jae	.L1619	#,
	.loc 1 4034 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1394
	movl	72(%rax), %eax	# PL_curcop.1394_4443->cop_line, iftmp.1391
	jmp	.L1620	#
.L1619:
	.loc 1 4034 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1391
.L1620:
	.loc 1 4034 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1391, PL_copline
	.loc 1 4035 0 is_stmt 1 discriminator 3
	cmpq	$0, -1368(%rbp)	#, gv
	je	.L1621	#,
	.loc 1 4035 0 is_stmt 0 discriminator 1
	movq	-1368(%rbp), %rax	# gv, tmp3632
	movq	(%rax), %rax	# gv_84->sv_any, D.28908
	movq	56(%rax), %rax	# _4446->xgv_gp, D.28909
	movl	64(%rax), %eax	# _4447->gp_cvgen, D.28900
	testl	%eax, %eax	# D.28900
	jne	.L1621	#,
	movq	-1368(%rbp), %rax	# gv, tmp3633
	movq	(%rax), %rax	# gv_84->sv_any, D.28908
	movq	56(%rax), %rax	# _4449->xgv_gp, D.28909
	movq	56(%rax), %rax	# _4450->gp_cv, D.28915
	testq	%rax, %rax	# D.28915
	je	.L1621	#,
	.loc 1 4036 0 is_stmt 1
	leaq	1(%rbx), %r12	#, d
	jmp	.L1622	#
.L1623:
	.loc 1 4036 0 is_stmt 0 discriminator 2
	addq	$1, %r12	#, d
.L1622:
	.loc 1 4036 0 discriminator 1
	movzbl	(%r12), %eax	# *d_66, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1623	#,
	.loc 1 4036 0 discriminator 3
	movzbl	(%r12), %eax	# *d_66, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1623	#,
	.loc 1 4037 0 is_stmt 1
	movzbl	(%r12), %eax	# *d_66, D.28896
	cmpb	$41, %al	#, D.28896
	jne	.L1621	#,
	.loc 1 4037 0 is_stmt 0 discriminator 1
	movq	-1368(%rbp), %rax	# gv, tmp3634
	movq	(%rax), %rax	# gv_84->sv_any, D.28908
	movq	56(%rax), %rax	# _4456->xgv_gp, D.28909
	movq	56(%rax), %rax	# _4457->gp_cv, D.28915
	movq	%rax, %rdi	# D.28915,
	call	Perl_cv_const_sv	#
	movq	%rax, -1256(%rbp)	# tmp3635, sv
	cmpq	$0, -1256(%rbp)	#, sv
	je	.L1621	#,
	.loc 1 4038 0 is_stmt 1
	leaq	1(%r12), %rbx	#, s
	.loc 1 4039 0
	jmp	.L1624	#
.L1621:
	.loc 1 4042 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.1395
	movq	PL_yylval(%rip), %rdx	# PL_yylval.opval, D.28903
	cltq
	movq	%rdx, PL_nextval(,%rax,8)	# D.28903, PL_nextval[PL_nexttoke.1395_4462].opval
	.loc 1 4043 0
	movl	$0, PL_expect(%rip)	#, PL_expect
	.loc 1 4044 0
	movl	$257, %edi	#,
	call	S_force_next	#
	.loc 1 4045 0
	movl	$0, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 4046 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$38, %eax	#, D.28894
	jmp	.L2138	#
.L1618:
	.loc 1 4051 0
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$36, %al	#, D.28896
	je	.L1625	#,
	.loc 1 4051 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$123, %al	#, D.28896
	jne	.L1626	#,
.L1625:
	.loc 1 4051 0 discriminator 1
	cmpq	$0, -1368(%rbp)	#, gv
	je	.L1627	#,
	movq	-1368(%rbp), %rax	# gv, tmp3637
	movq	(%rax), %rax	# gv_84->sv_any, D.28908
	movq	56(%rax), %rax	# _4467->xgv_gp, D.28909
	movl	64(%rax), %eax	# _4468->gp_cvgen, D.28900
	testl	%eax, %eax	# D.28900
	jne	.L1627	#,
	movq	-1368(%rbp), %rax	# gv, tmp3638
	movq	(%rax), %rax	# gv_84->sv_any, D.28908
	movq	56(%rax), %rax	# _4470->xgv_gp, D.28909
	movq	56(%rax), %rax	# _4471->gp_cv, D.28915
	testq	%rax, %rax	# D.28915
	jne	.L1626	#,
.L1627:
	.loc 1 4052 0 is_stmt 1
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1396
	movq	%rax, PL_last_lop(%rip)	# PL_oldbufptr.1396, PL_last_lop
	.loc 1 4053 0
	movw	$165, PL_last_lop_op(%rip)	#, PL_last_lop_op
	.loc 1 4054 0
	movl	$4, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$258, %eax	#, D.28894
	jmp	.L2138	#
.L1626:
	.loc 1 4059 0
	cmpl	$0, -1428(%rbp)	#, orig_keyword
	jne	.L1628	#,
	.loc 1 4060 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1397
	movzbl	37(%rax), %eax	# PL_curcop.1397_4475->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	.loc 1 4059 0 discriminator 1
	testl	%eax, %eax	# D.28894
	jne	.L1629	#,
	.loc 1 4060 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1398
	testq	%rax, %rax	# PL_linestr.1398
	je	.L1630	#,
	.loc 1 4060 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1399
	movl	12(%rax), %eax	# PL_linestr.1399_4480->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1630	#,
	.loc 1 4060 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1400
	movzbl	37(%rax), %eax	# PL_curcop.1400_4483->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1631	#,
.L1630:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1401
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1629	#,
.L1631:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_4398], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1632	#,
.L1629:
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1633	#,
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1634	#,
.L1633:
	.loc 1 4060 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1635	#,
	.loc 1 4060 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1634	#,
.L1635:
	.loc 1 4060 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1636	#,
.L1634:
	.loc 1 4060 0 discriminator 1
	movl	$1, %eax	#, iftmp.1402
	jmp	.L1637	#
.L1636:
	.loc 1 4060 0 discriminator 3
	movl	$0, %eax	#, iftmp.1402
.L1637:
	.loc 1 4060 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L1638	#,
	.loc 1 4060 0 discriminator 1
	jmp	.L1639	#
.L1632:
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1640	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1640	#,
	.loc 1 4060 0 discriminator 3
	movl	$1, %eax	#, iftmp.1403
	jmp	.L1641	#
.L1640:
	.loc 1 4060 0 discriminator 2
	movl	$0, %eax	#, iftmp.1403
.L1641:
	.loc 1 4060 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L1638	#,
.L1639:
	.loc 1 4060 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$36, %al	#, D.28896
	jne	.L1628	#,
.L1638:
	.loc 1 4061 0 is_stmt 1
	movq	-1368(%rbp), %rax	# gv, tmp3639
	movq	%rax, %rsi	# tmp3639,
	movq	%rbx, %rdi	# s,
	call	S_intuit_method	#
	movl	%eax, %r13d	#, tmp
	testl	%r13d, %r13d	# tmp
	je	.L1628	#,
	.loc 1 4062 0
	movl	%r13d, %eax	# tmp, D.28894
	jmp	.L2138	#
.L1628:
	.loc 1 4066 0
	cmpq	$0, -1368(%rbp)	#, gv
	je	.L1642	#,
	.loc 1 4066 0 is_stmt 0 discriminator 1
	movq	-1368(%rbp), %rax	# gv, tmp3640
	movq	(%rax), %rax	# gv_84->sv_any, D.28908
	movq	56(%rax), %rax	# _4506->xgv_gp, D.28909
	movl	64(%rax), %eax	# _4507->gp_cvgen, D.28900
	testl	%eax, %eax	# D.28900
	jne	.L1642	#,
	movq	-1368(%rbp), %rax	# gv, tmp3641
	movq	(%rax), %rax	# gv_84->sv_any, D.28908
	movq	56(%rax), %rax	# _4509->xgv_gp, D.28909
	movq	56(%rax), %rax	# _4510->gp_cv, D.28915
	testq	%rax, %rax	# D.28915
	je	.L1642	#,
.LBB70:
	.loc 1 4068 0 is_stmt 1
	cmpb	$45, -1430(%rbp)	#, lastchar
	jne	.L1643	#,
	.loc 1 4068 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1404
	movq	80(%rax), %rax	# PL_curcop.1404_4512->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1644	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1405
	movq	80(%rax), %rax	# PL_curcop.1405_4514->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1644	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1406
	movq	80(%rax), %rax	# PL_curcop.1406_4516->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1643	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1407
	movq	80(%rax), %rax	# PL_curcop.1407_4518->cop_warnings, D.28913
	movq	(%rax), %rax	# _4519->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_4520].xpv_pv, D.28895
	addq	$7, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4522, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$4, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1643	#,
.L1644:
	.loc 1 4069 0 is_stmt 1
	movl	$PL_tokenbuf, %ecx	#,
	movl	$PL_tokenbuf, %edx	#,
	movl	$.LC118, %esi	#,
	movl	$29, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1643:
	.loc 1 4073 0
	movq	-1368(%rbp), %rax	# gv, tmp3642
	movq	(%rax), %rax	# gv_84->sv_any, D.28908
	movq	56(%rax), %rax	# _4526->xgv_gp, D.28909
	movq	56(%rax), %rax	# _4527->gp_cv, tmp3643
	movq	%rax, -1080(%rbp)	# tmp3643, cv
	.loc 1 4074 0
	movq	-1080(%rbp), %rax	# cv, tmp3644
	movq	%rax, %rdi	# tmp3644,
	call	Perl_cv_const_sv	#
	movq	%rax, -1256(%rbp)	# tmp3645, sv
	cmpq	$0, -1256(%rbp)	#, sv
	je	.L1645	#,
.L1624:
	.loc 1 4076 0
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movq	40(%rax), %rax	# MEM[(struct SVOP *)_4578].op_sv, D.28913
	movq	%rax, %rdi	# D.28913,
	call	Perl_sv_free	#
	.loc 1 4077 0
	movq	-1256(%rbp), %rax	# sv, tmp3646
	movq	%rax, PL_Sv(%rip)	# tmp3646, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1409
	testq	%rax, %rax	# PL_Sv.1409
	je	.L1647	#,
	.loc 1 4077 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1410
	movl	8(%rax), %edx	# PL_Sv.1410_4581->sv_refcnt, D.28900
	addl	$1, %edx	#, D.28900
	movl	%edx, 8(%rax)	# D.28900, PL_Sv.1410_4581->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.1410_4581->sv_refcnt, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1647	#,
	.loc 1 4077 0
	nop
.L1647:
	.loc 1 4077 0 discriminator 4
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.1411
	movq	%rdx, 40(%rax)	# PL_Sv.1411, MEM[(struct SVOP *)_4587].op_sv
	.loc 1 4078 0 is_stmt 1 discriminator 4
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movb	$0, 37(%rax)	#, _4589->op_private
	.loc 1 4079 0 discriminator 4
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$257, %eax	#, D.28894
	jmp	.L2138	#
.L1645:
	.loc 1 4083 0
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movq	%rax, %rdi	# D.28903,
	call	Perl_op_free	#
	.loc 1 4084 0
	movq	-1368(%rbp), %rax	# gv, tmp3647
	movq	%rax, %rdx	# tmp3647,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rsi	# D.28903,
	movl	$0, %edi	#,
	call	Perl_newCVREF	#
	movq	%rax, PL_yylval(%rip)	# D.28903, PL_yylval.opval
	.loc 1 4085 0
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movq	PL_yylval(%rip), %rdx	# PL_yylval.opval, D.28903
	movzbl	37(%rdx), %edx	# _4534->op_private, D.28904
	orl	$-128, %edx	#, D.28904
	movb	%dl, 37(%rax)	# D.28904, _4533->op_private
	.loc 1 4086 0
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1412
	movq	%rax, PL_last_lop(%rip)	# PL_oldbufptr.1412, PL_last_lop
	.loc 1 4087 0
	movw	$166, PL_last_lop_op(%rip)	#, PL_last_lop_op
	.loc 1 4089 0
	movq	-1080(%rbp), %rax	# cv, tmp3648
	movl	12(%rax), %eax	# cv_4528->sv_flags, D.28900
	andl	$262144, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1648	#,
.LBB71:
	.loc 1 4091 0
	movq	-1080(%rbp), %rax	# cv, tmp3649
	movl	12(%rax), %eax	# MEM[(struct SV *)cv_4528].sv_flags, D.28900
	andl	$262144, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1649	#,
	.loc 1 4091 0 is_stmt 0 discriminator 1
	movq	-1080(%rbp), %rax	# cv, tmp3650
	movq	(%rax), %rax	# MEM[(struct SV *)cv_4528].sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_4542].xpv_cur, len.1414
	movq	%rax, -1376(%rbp)	# len.1414, len
	movq	-1080(%rbp), %rax	# cv, tmp3651
	movq	(%rax), %rax	# MEM[(struct SV *)cv_4528].sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_4544].xpv_pv, iftmp.1413
	jmp	.L1650	#
.L1649:
	.loc 1 4091 0 discriminator 2
	leaq	-1376(%rbp), %rcx	#, tmp3652
	movq	-1080(%rbp), %rax	# cv, tmp3653
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp3652,
	movq	%rax, %rdi	# tmp3653,
	call	Perl_sv_2pv_flags	#
.L1650:
	.loc 1 4091 0 discriminator 3
	movq	%rax, -1248(%rbp)	# iftmp.1413, proto
	.loc 1 4092 0 is_stmt 1 discriminator 3
	movq	-1376(%rbp), %rax	# len, len.1415
	testq	%rax, %rax	# len.1415
	jne	.L1651	#,
	.loc 1 4093 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1417
	movl	72(%rax), %edx	# PL_curcop.1417_4549->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1418
	cmpl	%eax, %edx	# PL_copline.1418, D.28900
	jae	.L1652	#,
	.loc 1 4093 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1419
	movl	72(%rax), %eax	# PL_curcop.1419_4552->cop_line, iftmp.1416
	jmp	.L1653	#
.L1652:
	.loc 1 4093 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1416
.L1653:
	.loc 1 4093 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1416, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$263, %eax	#, D.28894
	jmp	.L2138	#
.L1651:
	.loc 1 4094 0 is_stmt 1
	movq	-1248(%rbp), %rax	# proto, tmp3654
	movzbl	(%rax), %eax	# *proto_4547, D.28896
	cmpb	$36, %al	#, D.28896
	jne	.L1655	#,
	.loc 1 4094 0 is_stmt 0 discriminator 1
	movq	-1248(%rbp), %rax	# proto, tmp3655
	addq	$1, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4557, D.28896
	testb	%al, %al	# D.28896
	jne	.L1655	#,
	.loc 1 4095 0 is_stmt 1
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$264, %eax	#, D.28894
	jmp	.L2138	#
.L1655:
	.loc 1 4096 0
	jmp	.L1656	#
.L1657:
	.loc 1 4097 0
	addq	$1, -1248(%rbp)	#, proto
.L1656:
	.loc 1 4096 0 discriminator 1
	movq	-1248(%rbp), %rax	# proto, tmp3656
	movzbl	(%rax), %eax	# *proto_139, D.28896
	cmpb	$59, %al	#, D.28896
	je	.L1657	#,
	.loc 1 4098 0
	movq	-1248(%rbp), %rax	# proto, tmp3657
	movzbl	(%rax), %eax	# *proto_139, D.28896
	cmpb	$38, %al	#, D.28896
	jne	.L1648	#,
	.loc 1 4098 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_4398, D.28896
	cmpb	$123, %al	#, D.28896
	jne	.L1648	#,
	.loc 1 4099 0 is_stmt 1
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.1421
	testq	%rax, %rax	# PL_curstash.1421
	je	.L1659	#,
	.loc 1 4099 0 is_stmt 0 discriminator 1
	movl	$.LC119, %eax	#, iftmp.1420
	jmp	.L1660	#
.L1659:
	.loc 1 4099 0 discriminator 2
	movl	$.LC120, %eax	#, iftmp.1420
.L1660:
	.loc 1 4099 0 discriminator 3
	movq	PL_subname(%rip), %rdx	# PL_subname, PL_subname.1422
	movq	%rax, %rsi	# iftmp.1420,
	movq	%rdx, %rdi	# PL_subname.1422,
	call	Perl_sv_setpv	#
	.loc 1 4101 0 is_stmt 1 discriminator 3
	movl	$4, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$265, %eax	#, D.28894
	jmp	.L2138	#
.L1648:
.LBE71:
	.loc 1 4104 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.1423
	movq	PL_yylval(%rip), %rdx	# PL_yylval.opval, D.28903
	cltq
	movq	%rdx, PL_nextval(,%rax,8)	# D.28903, PL_nextval[PL_nexttoke.1423_4569].opval
	.loc 1 4105 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 4106 0
	movl	$257, %edi	#,
	call	S_force_next	#
	.loc 1 4107 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$294, %eax	#, D.28894
	jmp	.L2138	#
.L1642:
.LBE70:
	.loc 1 4112 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1424
	andl	$512, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1609	#,
	.loc 1 4113 0
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	movq	PL_yylval(%rip), %rdx	# PL_yylval.opval, D.28903
	movzbl	37(%rdx), %edx	# _4575->op_private, D.28904
	orl	$8, %edx	#, D.28904
	movb	%dl, 37(%rax)	# D.28904, _4574->op_private
	jmp	.L1589	#
.L1609:
	.loc 1 4116 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1425
	movq	80(%rax), %rax	# PL_curcop.1425_4591->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1661	#,
	.loc 1 4116 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1426
	movq	80(%rax), %rax	# PL_curcop.1426_4593->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1661	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1427
	movq	80(%rax), %rax	# PL_curcop.1427_4595->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1662	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1428
	movq	80(%rax), %rax	# PL_curcop.1428_4597->cop_warnings, D.28913
	movq	(%rax), %rax	# _4598->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_4599].xpv_pv, D.28895
	addq	$9, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4601, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$4, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1662	#,
.L1661:
	.loc 1 4116 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1429
	movq	80(%rax), %rax	# PL_curcop.1429_4605->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1589	#,
	.loc 1 4116 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1430
	movzbl	%al, %eax	# PL_dowarn.1430, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1589	#,
.L1662:
	.loc 1 4117 0 is_stmt 1
	cmpb	$45, -1430(%rbp)	#, lastchar
	je	.L1589	#,
	.loc 1 4118 0
	movl	$PL_tokenbuf, %r12d	#, d
	jmp	.L1663	#
.L1665:
	.loc 1 4118 0 is_stmt 0 discriminator 1
	addq	$1, %r12	#, d
.L1663:
	movzbl	(%r12), %eax	# *d_67, D.28896
	testb	%al, %al	# D.28896
	je	.L1664	#,
	.loc 1 4118 0 discriminator 2
	movzbl	(%r12), %eax	# *d_67, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1664	#,
	.loc 1 4118 0 discriminator 1
	movzbl	(%r12), %eax	# *d_67, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1665	#,
.L1664:
	.loc 1 4119 0 is_stmt 1
	movzbl	(%r12), %eax	# *d_67, D.28896
	testb	%al, %al	# D.28896
	jne	.L1589	#,
	.loc 1 4119 0 is_stmt 0 discriminator 1
	movl	$0, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_gv_stashpv	#
	testq	%rax, %rax	# D.28918
	jne	.L1589	#,
	.loc 1 4120 0 is_stmt 1
	movl	$PL_tokenbuf, %edx	#,
	movl	$PL_warn_reserved, %esi	#,
	movl	$37, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1589:
	.loc 1 4127 0
	cmpb	$42, -1430(%rbp)	#, lastchar
	je	.L1666	#,
	.loc 1 4127 0 is_stmt 0 discriminator 1
	cmpb	$37, -1430(%rbp)	#, lastchar
	je	.L1666	#,
	cmpb	$38, -1430(%rbp)	#, lastchar
	jne	.L1667	#,
.L1666:
	.loc 1 4128 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1431
	movq	80(%rax), %rax	# PL_curcop.1431_4617->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1668	#,
	.loc 1 4128 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1432
	movq	80(%rax), %rax	# PL_curcop.1432_4619->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1668	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1433
	movq	80(%rax), %rax	# PL_curcop.1433_4621->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1667	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1434
	movq	80(%rax), %rax	# PL_curcop.1434_4623->cop_warnings, D.28913
	movq	(%rax), %rax	# _4624->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_4625].xpv_pv, D.28895
	addq	$7, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4627, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$4, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1667	#,
.L1668:
	.loc 1 4129 0 is_stmt 1
	movsbl	-1430(%rbp), %eax	# lastchar, D.28894
	movl	$PL_tokenbuf, %ecx	#,
	movl	%eax, %edx	# D.28894,
	movl	$.LC121, %esi	#,
	movl	$29, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 4132 0
	movsbl	-1430(%rbp), %edx	# lastchar, D.28894
	movsbl	-1430(%rbp), %eax	# lastchar, D.28894
	movl	%edx, %ecx	# D.28894,
	movl	%eax, %edx	# D.28894,
	movl	$.LC122, %esi	#,
	movl	$29, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1667:
	.loc 1 4136 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$257, %eax	#, D.28894
	jmp	.L2138	#
.L1330:
.LBE67:
	.loc 1 4141 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1436
	movq	56(%rax), %rax	# PL_curcop.1436_2687->cop_filegv, D.28907
	.loc 1 4140 0
	testq	%rax, %rax	# D.28907
	je	.L1669	#,
	.loc 1 4141 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1437
	movq	56(%rax), %rax	# PL_curcop.1437_2689->cop_filegv, D.28907
	movq	(%rax), %rax	# _2690->sv_any, D.28908
	movq	56(%rax), %rax	# _2691->xgv_gp, D.28909
	movq	(%rax), %rax	# _2692->gp_sv, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1669	#,
	.loc 1 4141 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1439
	movq	56(%rax), %rax	# PL_curcop.1439_2694->cop_filegv, D.28907
	testq	%rax, %rax	# D.28907
	je	.L1670	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1440
	movq	56(%rax), %rax	# PL_curcop.1440_2696->cop_filegv, D.28907
	movq	(%rax), %rax	# _2697->sv_any, D.28908
	movq	56(%rax), %rax	# _2698->xgv_gp, D.28909
	movq	(%rax), %rax	# _2699->gp_sv, iftmp.1438
	jmp	.L1671	#
.L1670:
	.loc 1 4141 0 discriminator 2
	movl	$0, %eax	#, iftmp.1438
.L1671:
	.loc 1 4141 0 discriminator 3
	movq	(%rax), %rax	# iftmp.1438_240->sv_any, D.28901
	.loc 1 4140 0 is_stmt 1 discriminator 3
	movq	(%rax), %rax	# MEM[(struct XPV *)_2702].xpv_pv, iftmp.1435
	jmp	.L1672	#
.L1669:
	.loc 1 4140 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.1435
.L1672:
	.loc 1 4140 0 discriminator 2
	movl	$0, %esi	#,
	movq	%rax, %rdi	# iftmp.1435,
	call	Perl_newSVpv	#
	movq	%rax, %rdx	# D.28913,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.28903, PL_yylval.opval
	.loc 1 4142 0 is_stmt 1 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1442
	movl	72(%rax), %edx	# PL_curcop.1442_2707->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1443
	cmpl	%eax, %edx	# PL_copline.1443, D.28900
	jae	.L1673	#,
	.loc 1 4142 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1444
	movl	72(%rax), %eax	# PL_curcop.1444_2710->cop_line, iftmp.1441
	jmp	.L1674	#
.L1673:
	.loc 1 4142 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1441
.L1674:
	.loc 1 4142 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1441, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$260, %eax	#, D.28894
	jmp	.L2138	#
.L1332:
	.loc 1 4146 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1445
	movl	72(%rax), %eax	# PL_curcop.1445_2714->cop_line, D.28900
	.loc 1 4145 0
	movl	%eax, %eax	# D.28900, D.28902
	movq	%rax, %rsi	# D.28902,
	movl	$.LC123, %edi	#,
	movl	$0, %eax	#,
	call	Perl_newSVpvf	#
	movq	%rax, %rdx	# D.28913,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.28903, PL_yylval.opval
	.loc 1 4147 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1447
	movl	72(%rax), %edx	# PL_curcop.1447_2719->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1448
	cmpl	%eax, %edx	# PL_copline.1448, D.28900
	jae	.L1675	#,
	.loc 1 4147 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1449
	movl	72(%rax), %eax	# PL_curcop.1449_2722->cop_line, iftmp.1446
	jmp	.L1676	#
.L1675:
	.loc 1 4147 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1446
.L1676:
	.loc 1 4147 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1446, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$260, %eax	#, D.28894
	jmp	.L2138	#
.L1333:
	.loc 1 4152 0 is_stmt 1
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.1451
	.loc 1 4150 0
	testq	%rax, %rax	# PL_curstash.1451
	je	.L1677	#,
	.loc 1 4152 0
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.1452
	movq	(%rax), %rax	# PL_curstash.1452_2727->sv_any, D.28920
	movq	80(%rax), %rax	# _2728->xhv_name, D.28895
	.loc 1 4150 0
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.28895,
	call	Perl_newSVpv	#
	jmp	.L1678	#
.L1677:
	.loc 1 4150 0 is_stmt 0 discriminator 1
	movl	$PL_sv_undef, %eax	#, iftmp.1450
.L1678:
	.loc 1 4150 0 discriminator 2
	movq	%rax, %rdx	# iftmp.1450,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.28903, PL_yylval.opval
	.loc 1 4154 0 is_stmt 1 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1454
	movl	72(%rax), %edx	# PL_curcop.1454_2733->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1455
	cmpl	%eax, %edx	# PL_copline.1455, D.28900
	jae	.L1679	#,
	.loc 1 4154 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1456
	movl	72(%rax), %eax	# PL_curcop.1456_2736->cop_line, iftmp.1453
	jmp	.L1680	#
.L1679:
	.loc 1 4154 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1453
.L1680:
	.loc 1 4154 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1453, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$260, %eax	#, D.28894
	jmp	.L2138	#
.L1334:
.LBB72:
	.loc 1 4161 0 is_stmt 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.1457
	testq	%rax, %rax	# PL_rsfp.1457
	je	.L1681	#,
	.loc 1 4161 0 is_stmt 0 discriminator 1
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.1458
	testl	%eax, %eax	# PL_in_eval.1458
	je	.L1682	#,
	movzbl	PL_tokenbuf+2(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$68, %al	#, D.28896
	jne	.L1681	#,
.L1682:
.LBB73:
	.loc 1 4162 0 is_stmt 1
	movq	$.LC124, -1240(%rbp)	#, pname
	.loc 1 4163 0
	movzbl	PL_tokenbuf+2(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$68, %al	#, D.28896
	jne	.L1683	#,
	.loc 1 4164 0
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.1460
	testq	%rax, %rax	# PL_curstash.1460
	je	.L1684	#,
	.loc 1 4164 0 is_stmt 0 discriminator 1
	movq	PL_curstash(%rip), %rax	# PL_curstash, iftmp.1459
	jmp	.L1685	#
.L1684:
	.loc 1 4164 0 discriminator 2
	movq	PL_defstash(%rip), %rax	# PL_defstash, iftmp.1459
.L1685:
	.loc 1 4164 0 discriminator 3
	movq	(%rax), %rax	# iftmp.1459_245->sv_any, D.28920
	movq	80(%rax), %rax	# _2748->xhv_name, tmp3659
	movq	%rax, -1240(%rbp)	# tmp3659, pname
.L1683:
	.loc 1 4165 0 is_stmt 1
	movq	-1240(%rbp), %rax	# pname, tmp3660
	movq	%rax, %rsi	# tmp3660,
	movl	$.LC125, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movl	$15, %edx	#,
	movl	$1, %esi	#,
	movq	%rax, %rdi	# D.28895,
	call	Perl_gv_fetchpv	#
	movq	%rax, -1112(%rbp)	# tmp3661, gv
	.loc 1 4166 0
	movq	-1112(%rbp), %rax	# gv, tmp3662
	movq	(%rax), %rax	# gv_2751->sv_any, D.28908
	movq	-1112(%rbp), %rdx	# gv, tmp3663
	movq	(%rdx), %rdx	# gv_2751->sv_any, D.28908
	movzbl	88(%rdx), %edx	# _2753->xgv_flags, D.28904
	orl	$2, %edx	#, D.28904
	movb	%dl, 88(%rax)	# D.28904, _2752->xgv_flags
	.loc 1 4167 0
	cmpq	$0, -1112(%rbp)	#, gv
	je	.L1686	#,
	.loc 1 4167 0 is_stmt 0 discriminator 1
	movq	-1112(%rbp), %rax	# gv, tmp3664
	movl	12(%rax), %eax	# MEM[(struct SV *)gv_2751].sv_flags, D.28900
	movzbl	%al, %eax	# D.28900, D.28900
	cmpl	$13, %eax	#, D.28900
	jne	.L1686	#,
	movq	-1112(%rbp), %rax	# gv, tmp3665
	movq	(%rax), %rax	# gv_2751->sv_any, D.28908
	movq	56(%rax), %rax	# _2758->xgv_gp, D.28909
	testq	%rax, %rax	# D.28909
	je	.L1686	#,
	movq	-1112(%rbp), %rax	# gv, tmp3666
	movq	(%rax), %rax	# gv_2751->sv_any, D.28908
	movq	56(%rax), %rax	# _2760->xgv_gp, D.28909
	movq	16(%rax), %rax	# _2761->gp_io, D.28921
	testq	%rax, %rax	# D.28921
	jne	.L1687	#,
.L1686:
	.loc 1 4168 0 is_stmt 1
	movq	-1112(%rbp), %rax	# gv, tmp3667
	movq	(%rax), %rax	# gv_2751->sv_any, D.28908
	movq	56(%rax), %rbx	# _2763->xgv_gp, D.28909
	call	Perl_newIO	#
	movq	%rax, 16(%rbx)	# D.28922, _2764->gp_io
.L1687:
	.loc 1 4169 0
	movq	-1112(%rbp), %rax	# gv, tmp3668
	movq	(%rax), %rax	# gv_2751->sv_any, D.28908
	movq	56(%rax), %rax	# _2766->xgv_gp, D.28909
	movq	16(%rax), %rax	# _2767->gp_io, D.28921
	movq	(%rax), %rax	# _2768->sv_any, D.28923
	movq	PL_rsfp(%rip), %rdx	# PL_rsfp, PL_rsfp.1461
	movq	%rdx, 56(%rax)	# PL_rsfp.1461, _2769->xio_ifp
.LBB74:
	.loc 1 4172 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.1462
	movq	%rax, %rdi	# PL_rsfp.1462,
	call	Perl_PerlIO_fileno	#
	movl	%eax, -1392(%rbp)	# tmp3669, fd
	.loc 1 4173 0
	cmpl	$2, -1392(%rbp)	#, fd
	setg	%al	#, D.28899
	movzbl	%al, %edx	# D.28899, D.28894
	movl	-1392(%rbp), %eax	# fd, tmp3670
	movl	$2, %esi	#,
	movl	%eax, %edi	# tmp3670,
	movl	$0, %eax	#,
	call	fcntl	#
.LBE74:
	.loc 1 4177 0
	movq	-1112(%rbp), %rax	# gv, tmp3671
	movq	(%rax), %rax	# gv_2751->sv_any, D.28908
	movq	56(%rax), %rax	# _2775->xgv_gp, D.28909
	movq	16(%rax), %rax	# _2776->gp_io, D.28921
	movq	(%rax), %rax	# _2777->sv_any, D.28923
	movq	-1112(%rbp), %rdx	# gv, tmp3672
	movq	(%rdx), %rdx	# gv_2751->sv_any, D.28908
	movq	56(%rdx), %rdx	# _2779->xgv_gp, D.28909
	movq	16(%rdx), %rdx	# _2780->gp_io, D.28921
	movq	(%rdx), %rdx	# _2781->sv_any, D.28923
	movzbl	163(%rdx), %edx	# _2782->xio_flags, D.28896
	orl	$16, %edx	#, D.28916
	movb	%dl, 163(%rax)	# D.28916, _2778->xio_flags
	.loc 1 4178 0
	movzbl	PL_preprocess(%rip), %eax	# PL_preprocess, PL_preprocess.1463
	testb	%al, %al	# PL_preprocess.1463
	je	.L1688	#,
	.loc 1 4179 0
	movq	-1112(%rbp), %rax	# gv, tmp3673
	movq	(%rax), %rax	# gv_2751->sv_any, D.28908
	movq	56(%rax), %rax	# _2786->xgv_gp, D.28909
	movq	16(%rax), %rax	# _2787->gp_io, D.28921
	movq	(%rax), %rax	# _2788->sv_any, D.28923
	movb	$124, 162(%rax)	#, _2789->xio_type
	jmp	.L1689	#
.L1688:
	.loc 1 4180 0
	call	Perl_PerlIO_stdin	#
	movq	PL_rsfp(%rip), %rdx	# PL_rsfp, PL_rsfp.1464
	cmpq	%rdx, %rax	# PL_rsfp.1464, D.28924
	jne	.L1690	#,
	.loc 1 4181 0
	movq	-1112(%rbp), %rax	# gv, tmp3674
	movq	(%rax), %rax	# gv_2751->sv_any, D.28908
	movq	56(%rax), %rax	# _2792->xgv_gp, D.28909
	movq	16(%rax), %rax	# _2793->gp_io, D.28921
	movq	(%rax), %rax	# _2794->sv_any, D.28923
	movb	$45, 162(%rax)	#, _2795->xio_type
	jmp	.L1689	#
.L1690:
	.loc 1 4183 0
	movq	-1112(%rbp), %rax	# gv, tmp3675
	movq	(%rax), %rax	# gv_2751->sv_any, D.28908
	movq	56(%rax), %rax	# _2796->xgv_gp, D.28909
	movq	16(%rax), %rax	# _2797->gp_io, D.28921
	movq	(%rax), %rax	# _2798->sv_any, D.28923
	movb	$60, 162(%rax)	#, _2799->xio_type
.L1689:
	.loc 1 4213 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1465
	movzbl	37(%rax), %eax	# PL_curcop.1465_2800->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1691	#,
	.loc 1 4214 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1466
	testq	%rax, %rax	# PL_linestr.1466
	je	.L1692	#,
	.loc 1 4214 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1467
	movl	12(%rax), %eax	# PL_linestr.1467_2805->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1692	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1468
	movzbl	37(%rax), %eax	# PL_curcop.1468_2808->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1693	#,
.L1692:
	.loc 1 4214 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1469
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1694	#,
.L1693:
	.loc 1 4215 0 is_stmt 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.1470
	movl	$.LC126, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# PL_rsfp.1470,
	call	PerlIO_apply_layers	#
	jmp	.L1691	#
.L1694:
	.loc 1 4216 0
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.1471
	testq	%rax, %rax	# PL_encoding.1471
	je	.L1691	#,
.LBB75:
	.loc 1 4218 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4219 0
	call	Perl_push_scope	#
	.loc 1 4220 0
	movl	$PL_tmps_floor, %edi	#,
	call	Perl_save_int	#
	movl	PL_tmps_ix(%rip), %eax	# PL_tmps_ix, PL_tmps_ix.1472
	movl	%eax, PL_tmps_floor(%rip)	# PL_tmps_ix.1472, PL_tmps_floor
.LBB76:
	.loc 1 4221 0
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1473
	addq	$4, %rax	#, PL_markstack_ptr.1474
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1474, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.1475
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.1476
	cmpq	%rax, %rdx	# PL_markstack_max.1476, PL_markstack_ptr.1475
	jne	.L1695	#,
	.loc 1 4221 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L1695:
	.loc 1 4221 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1477
	movq	%rbx, %rcx	# sp, sp.1478
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1479
	subq	%rdx, %rcx	# PL_stack_base.1480, D.28902
	movq	%rcx, %rdx	# D.28902, D.28902
	sarq	$3, %rdx	#, tmp3676
	movl	%edx, (%rax)	# D.28894, *PL_markstack_ptr.1477_2821
.LBE76:
	.loc 1 4222 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1481
	movq	%rax, %rdx	# PL_stack_max.1481, PL_stack_max.1482
	movq	%rbx, %rax	# sp, sp.1483
	subq	%rax, %rdx	# sp.1483, D.28902
	movq	%rdx, %rax	# D.28902, D.28902
	cmpq	$7, %rax	#, D.28902
	jg	.L1696	#,
	.loc 1 4222 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1696:
.LBB77:
	.loc 1 4223 0 is_stmt 1
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1484
	movq	%rax, %rdx	# PL_stack_max.1484, PL_stack_max.1485
	movq	%rbx, %rax	# sp, sp.1486
	subq	%rax, %rdx	# sp.1486, D.28902
	movq	%rdx, %rax	# D.28902, D.28902
	cmpq	$7, %rax	#, D.28902
	jg	.L1697	#,
	.loc 1 4223 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1697:
	.loc 1 4223 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.1487
	movq	%rax, (%rbx)	# PL_encoding.1487, *sp_2839
.LBE77:
	.loc 1 4224 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4225 0 discriminator 2
	movl	$0, %esi	#,
	movl	$.LC127, %edi	#,
	call	Perl_call_method	#
	.loc 1 4226 0 discriminator 2
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4227 0 discriminator 2
	movq	%rbx, %rax	# sp, sp.1488
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1488_2843, tmp3677
	movq	%rax, -1104(%rbp)	# tmp3677, name
	.loc 1 4228 0 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4230 0 discriminator 2
	movq	-1104(%rbp), %rax	# name, tmp3678
	movq	%rax, %rsi	# tmp3678,
	movl	$.LC128, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdx	#, D.28895
	.loc 1 4229 0 discriminator 2
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.1489
	movl	$0, %esi	#,
	movq	%rax, %rdi	# PL_rsfp.1489,
	call	PerlIO_apply_layers	#
	.loc 1 4232 0 discriminator 2
	movl	PL_tmps_ix(%rip), %edx	# PL_tmps_ix, PL_tmps_ix.1490
	movl	PL_tmps_floor(%rip), %eax	# PL_tmps_floor, PL_tmps_floor.1491
	cmpl	%eax, %edx	# PL_tmps_floor.1491, PL_tmps_ix.1490
	jle	.L1698	#,
	.loc 1 4232 0 is_stmt 0 discriminator 1
	call	Perl_free_tmps	#
.L1698:
	.loc 1 4233 0 is_stmt 1
	call	Perl_pop_scope	#
.L1691:
.LBE75:
	.loc 1 4237 0
	movq	$0, PL_rsfp(%rip)	#, PL_rsfp
.LBE73:
	.loc 1 4239 0
	jmp	.L673	#
.L1681:
	jmp	.L673	#
.L1335:
.LBE72:
	.loc 1 4248 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1492
	cmpl	$3, %eax	#, PL_expect.1492
	jne	.L1699	#,
	.loc 1 4249 0
	movq	PL_bufptr(%rip), %rbx	# PL_bufptr, s
	.loc 1 4250 0
	jmp	.L1388	#
.L1699:
	.loc 1 4252 0
	jmp	.L852	#
.L1336:
	.loc 1 4255 0
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L1700	#,
	.loc 1 4255 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_2854, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L1700	#,
	.loc 1 4256 0 is_stmt 1
	addq	$2, %rbx	#, s
	.loc 1 4257 0
	movq	%rbx, %r12	# s, d
	.loc 1 4258 0
	leaq	-1384(%rbp), %rax	#, tmp3679
	movq	%rax, %r8	# tmp3679,
	movl	$0, %ecx	#,
	movl	$256, %edx	#,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4259 0
	movq	-1384(%rbp), %rax	# len, len.1493
	movl	%eax, %esi	# D.28894,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_keyword	#
	movl	%eax, %r13d	#, tmp
	testl	%r13d, %r13d	# tmp
	jne	.L1701	#,
	.loc 1 4260 0
	movl	$PL_tokenbuf, %esi	#,
	movl	$.LC129, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1701:
	.loc 1 4261 0
	testl	%r13d, %r13d	# tmp
	jns	.L1702	#,
	.loc 1 4262 0
	negl	%r13d	# tmp
	.loc 1 4263 0
	jmp	.L1312	#
.L1702:
	jmp	.L1312	#
.L1700:
	.loc 1 4265 0
	jmp	.L852	#
.L1337:
	.loc 1 4268 0
	movl	$109, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1494
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1494, PL_last_uni
	movw	$109, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1703	#,
	.loc 1 4268 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2865, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1704	#,
.L1703:
	.loc 1 4268 0 discriminator 1
	movl	$283, %eax	#, iftmp.1495
	jmp	.L1705	#
.L1704:
	movl	$285, %eax	#, iftmp.1495
.L1705:
	.loc 1 4268 0 discriminator 3
	jmp	.L2138	#
.L1339:
	.loc 1 4271 0 is_stmt 1
	movl	$296, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1496
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1496, PL_last_uni
	movw	$296, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1706	#,
	.loc 1 4271 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2872, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1707	#,
.L1706:
	.loc 1 4271 0 discriminator 1
	movl	$283, %eax	#, iftmp.1497
	jmp	.L1708	#
.L1707:
	movl	$285, %eax	#, iftmp.1497
.L1708:
	.loc 1 4271 0 discriminator 3
	jmp	.L2138	#
.L1338:
	.loc 1 4274 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$228, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1340:
	.loc 1 4277 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$301, %eax	#, D.28894
	jmp	.L2138	#
.L1341:
	.loc 1 4280 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$98, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1342:
	.loc 1 4283 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$225, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1343:
	.loc 1 4286 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$196, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1344:
	.loc 1 4289 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$23, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1349:
	.loc 1 4292 0
	movl	$38, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1498
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1498, PL_last_uni
	movw	$38, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1709	#,
	.loc 1 4292 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2885, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1710	#,
.L1709:
	.loc 1 4292 0 discriminator 1
	movl	$283, %eax	#, iftmp.1499
	jmp	.L1711	#
.L1710:
	movl	$285, %eax	#, iftmp.1499
.L1711:
	.loc 1 4292 0 discriminator 3
	jmp	.L2138	#
.L1357:
	.loc 1 4295 0 is_stmt 1
	movl	$4, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$278, %eax	#, D.28894
	jmp	.L2138	#
.L1346:
	.loc 1 4298 0
	movl	$11, %edx	#,
	movl	$1, %esi	#,
	movl	$.LC130, %edi	#,
	call	Perl_gv_fetchpv	#
	.loc 1 4299 0
	movl	$263, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1500
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1500, PL_last_uni
	movw	$263, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1712	#,
	.loc 1 4299 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2893, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1713	#,
.L1712:
	.loc 1 4299 0 discriminator 1
	movl	$283, %eax	#, iftmp.1501
	jmp	.L1714	#
.L1713:
	movl	$285, %eax	#, iftmp.1501
.L1714:
	.loc 1 4299 0 discriminator 3
	jmp	.L2138	#
.L1353:
	.loc 1 4302 0 is_stmt 1
	movl	$192, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1502
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1502, PL_last_uni
	movw	$192, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1715	#,
	.loc 1 4302 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2900, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1716	#,
.L1715:
	.loc 1 4302 0 discriminator 1
	movl	$283, %eax	#, iftmp.1503
	jmp	.L1717	#
.L1716:
	movl	$285, %eax	#, iftmp.1503
.L1717:
	.loc 1 4302 0 discriminator 3
	jmp	.L2138	#
.L1354:
	.loc 1 4305 0 is_stmt 1
	movl	$280, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1504
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1504, PL_last_uni
	movw	$280, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1718	#,
	.loc 1 4305 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2907, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1719	#,
.L1718:
	.loc 1 4305 0 discriminator 1
	movl	$283, %eax	#, iftmp.1505
	jmp	.L1720	#
.L1719:
	movl	$285, %eax	#, iftmp.1505
.L1720:
	.loc 1 4305 0 discriminator 3
	jmp	.L2138	#
.L1355:
	.loc 1 4308 0 is_stmt 1
	movl	$90, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$288, %eax	#, D.28894
	jmp	.L2138	#
.L1345:
	.loc 1 4311 0
	movl	$169, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1506
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1506, PL_last_uni
	movw	$169, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1721	#,
	.loc 1 4311 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2915, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1722	#,
.L1721:
	.loc 1 4311 0 discriminator 1
	movl	$283, %eax	#, iftmp.1507
	jmp	.L1723	#
.L1722:
	movl	$285, %eax	#, iftmp.1507
.L1723:
	.loc 1 4311 0 discriminator 3
	jmp	.L2138	#
.L1359:
	.loc 1 4320 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$119, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1347:
	.loc 1 4323 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$267, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1350:
	.loc 1 4326 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$264, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1356:
	.loc 1 4329 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$226, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1351:
	.loc 1 4332 0
	movl	$118, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1508
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1508, PL_last_uni
	movw	$118, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1724	#,
	.loc 1 4332 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2926, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1725	#,
.L1724:
	.loc 1 4332 0 discriminator 1
	movl	$283, %eax	#, iftmp.1509
	jmp	.L1726	#
.L1725:
	movl	$285, %eax	#, iftmp.1509
.L1726:
	.loc 1 4332 0 discriminator 3
	jmp	.L2138	#
.L1358:
	.loc 1 4335 0 is_stmt 1
	movl	$100, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1510
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1510, PL_last_uni
	movw	$100, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1727	#,
	.loc 1 4335 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2933, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1728	#,
.L1727:
	.loc 1 4335 0 discriminator 1
	movl	$283, %eax	#, iftmp.1511
	jmp	.L1729	#
.L1728:
	movl	$285, %eax	#, iftmp.1511
.L1729:
	.loc 1 4335 0 discriminator 3
	jmp	.L2138	#
.L1352:
	.loc 1 4338 0 is_stmt 1
	movl	$265, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1512
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1512, PL_last_uni
	movw	$265, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1730	#,
	.loc 1 4338 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2940, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1731	#,
.L1730:
	.loc 1 4338 0 discriminator 1
	movl	$283, %eax	#, iftmp.1513
	jmp	.L1732	#
.L1731:
	movl	$285, %eax	#, iftmp.1513
.L1732:
	.loc 1 4338 0 discriminator 3
	jmp	.L2138	#
.L1365:
	.loc 1 4341 0 is_stmt 1
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 4342 0
	movzbl	(%rbx), %eax	# *s_2945, D.28896
	cmpb	$123, %al	#, D.28896
	jne	.L1733	#,
	.loc 1 4343 0
	movl	$7, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$292, %eax	#, D.28894
	jmp	.L2138	#
.L1733:
	.loc 1 4344 0
	movzbl	(%rbx), %eax	# *s_2945, D.28896
	cmpb	$39, %al	#, D.28896
	je	.L1734	#,
	.loc 1 4345 0
	movl	$0, %r8d	#,
	movl	$1, %ecx	#,
	movl	$1, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
.L1734:
	.loc 1 4346 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$292, %eax	#, D.28894
	jmp	.L2138	#
.L1364:
	.loc 1 4349 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1514
	orb	$1, %ah	#, PL_hints.1515
	movl	%eax, PL_hints(%rip)	# PL_hints.1515, PL_hints
	.loc 1 4350 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$171, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1362:
	.loc 1 4353 0
	movl	$42, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1516
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1516, PL_last_uni
	movw	$42, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1735	#,
	.loc 1 4353 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2956, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1736	#,
.L1735:
	.loc 1 4353 0 discriminator 1
	movl	$283, %eax	#, iftmp.1517
	jmp	.L1737	#
.L1736:
	movl	$285, %eax	#, iftmp.1517
.L1737:
	.loc 1 4353 0 discriminator 3
	jmp	.L2138	#
.L1363:
	.loc 1 4356 0 is_stmt 1
	movl	$132, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1518
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1518, PL_last_uni
	movw	$132, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1738	#,
	.loc 1 4356 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2963, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1739	#,
.L1738:
	.loc 1 4356 0 discriminator 1
	movl	$283, %eax	#, iftmp.1519
	jmp	.L1740	#
.L1739:
	movl	$285, %eax	#, iftmp.1519
.L1740:
	.loc 1 4356 0 discriminator 3
	jmp	.L2138	#
.L1361:
	.loc 1 4359 0 is_stmt 1
	movl	$10, %edx	#,
	movl	$2, %esi	#,
	movl	$.LC131, %edi	#,
	call	Perl_gv_fetchpv	#
	.loc 1 4360 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$200, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1360:
	.loc 1 4363 0
	movl	$201, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1520
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1520, PL_last_uni
	movw	$201, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1741	#,
	.loc 1 4363 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2971, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1742	#,
.L1741:
	.loc 1 4363 0 discriminator 1
	movl	$283, %eax	#, iftmp.1521
	jmp	.L1743	#
.L1742:
	movl	$285, %eax	#, iftmp.1521
.L1743:
	.loc 1 4363 0 discriminator 3
	jmp	.L2138	#
.L1366:
	.loc 1 4366 0 is_stmt 1
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$1, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4367 0
	movl	$188, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$280, %eax	#, D.28894
	jmp	.L2138	#
.L1368:
	.loc 1 4370 0
	movl	$4, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$276, %eax	#, D.28894
	jmp	.L2138	#
.L1369:
	.loc 1 4373 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1522
	movl	72(%rax), %eax	# PL_curcop.1522_2979->cop_line, D.28900
	movl	%eax, PL_yylval(%rip)	# D.28894, PL_yylval.ival
	.loc 1 4374 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$277, %eax	#, D.28894
	jmp	.L2138	#
.L1377:
	.loc 1 4377 0
	movl	$88, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$288, %eax	#, D.28894
	jmp	.L2138	#
.L1380:
	.loc 1 4380 0
	movl	$133, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1523
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1523, PL_last_uni
	movw	$133, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1744	#,
	.loc 1 4380 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2986, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1745	#,
.L1744:
	.loc 1 4380 0 discriminator 1
	movl	$283, %eax	#, iftmp.1524
	jmp	.L1746	#
.L1745:
	movl	$285, %eax	#, iftmp.1524
.L1746:
	.loc 1 4380 0 discriminator 3
	jmp	.L2138	#
.L1381:
	.loc 1 4383 0 is_stmt 1
	movl	$190, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1525
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1525, PL_last_uni
	movw	$190, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1747	#,
	.loc 1 4383 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_2993, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1748	#,
.L1747:
	.loc 1 4383 0 discriminator 1
	movl	$283, %eax	#, iftmp.1526
	jmp	.L1749	#
.L1748:
	movl	$285, %eax	#, iftmp.1526
.L1749:
	.loc 1 4383 0 discriminator 3
	jmp	.L2138	#
.L1378:
	.loc 1 4386 0 is_stmt 1
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 4387 0
	movzbl	(%rbx), %eax	# *s_2998, D.28896
	cmpb	$123, %al	#, D.28896
	jne	.L1750	#,
	.loc 1 4387 0 is_stmt 0 discriminator 1
	movl	$7, %eax	#, iftmp.1527
	jmp	.L1751	#
.L1750:
	.loc 1 4387 0 discriminator 2
	movl	$1, %eax	#, iftmp.1527
.L1751:
	.loc 1 4387 0 discriminator 3
	movl	%eax, PL_expect(%rip)	# iftmp.1527, PL_expect
	.loc 1 4388 0 is_stmt 1 discriminator 3
	movl	$311, PL_yylval(%rip)	#, PL_yylval.ival
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1528
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1528, PL_last_uni
	movzbl	(%rbx), %eax	# *s_2998, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1752	#,
	.loc 1 4388 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3004, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1753	#,
.L1752:
	.loc 1 4388 0 discriminator 1
	movl	$283, %eax	#, iftmp.1529
	jmp	.L1754	#
.L1753:
	movl	$285, %eax	#, iftmp.1529
.L1754:
	.loc 1 4388 0 discriminator 3
	jmp	.L2138	#
.L1376:
	.loc 1 4391 0 is_stmt 1
	movl	$216, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1530
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1530, PL_last_uni
	movw	$216, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1755	#,
	.loc 1 4391 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3011, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1756	#,
.L1755:
	.loc 1 4391 0 discriminator 1
	movl	$283, %eax	#, iftmp.1531
	jmp	.L1757	#
.L1756:
	movl	$285, %eax	#, iftmp.1531
.L1757:
	.loc 1 4391 0 discriminator 3
	jmp	.L2138	#
.L1382:
	.loc 1 4394 0 is_stmt 1
	movl	$103, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1532
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1532, PL_last_uni
	movw	$103, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1758	#,
	.loc 1 4394 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3018, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1759	#,
.L1758:
	.loc 1 4394 0 discriminator 1
	movl	$283, %eax	#, iftmp.1533
	jmp	.L1760	#
.L1759:
	movl	$285, %eax	#, iftmp.1533
.L1760:
	.loc 1 4394 0 discriminator 3
	jmp	.L2138	#
.L1367:
	.loc 1 4397 0 is_stmt 1
	movl	$129, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1534
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1534, PL_last_uni
	movw	$129, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1761	#,
	.loc 1 4397 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3025, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1762	#,
.L1761:
	.loc 1 4397 0 discriminator 1
	movl	$283, %eax	#, iftmp.1535
	jmp	.L1763	#
.L1762:
	movl	$285, %eax	#, iftmp.1535
.L1763:
	.loc 1 4397 0 discriminator 3
	jmp	.L2138	#
.L1379:
	.loc 1 4400 0 is_stmt 1
	call	S_set_csh	#
	.loc 1 4401 0
	movq	%rbx, %rdx	# s,
	movl	$2, %esi	#,
	movl	$285, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1371:
	.loc 1 4404 0
	movl	$331, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1372:
	.loc 1 4407 0
	movl	$332, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1375:
	.loc 1 4410 0
	movl	$334, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1373:
	.loc 1 4413 0
	movl	$333, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1374:
	.loc 1 4416 0
	movl	$339, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1370:
	.loc 1 4419 0
	movl	$344, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1386:
	.loc 1 4423 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1536
	movl	72(%rax), %eax	# PL_curcop.1536_3037->cop_line, D.28900
	movl	%eax, PL_yylval(%rip)	# D.28894, PL_yylval.ival
	.loc 1 4424 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 4425 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1537
	cmpl	$3, %eax	#, PL_expect.1537
	jne	.L1764	#,
	.loc 1 4425 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1539
	movzbl	37(%rax), %eax	# PL_curcop.1539_3042->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1765	#,
	.loc 1 4425 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1540
	testq	%rax, %rax	# PL_linestr.1540
	je	.L1766	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1541
	movl	12(%rax), %eax	# PL_linestr.1541_3047->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1766	#,
	.loc 1 4425 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1542
	movzbl	37(%rax), %eax	# PL_curcop.1542_3050->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1767	#,
.L1766:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1543
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1765	#,
.L1767:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_3040], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1768	#,
.L1765:
	movzbl	(%rbx), %eax	# *s_3040, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1769	#,
	movzbl	(%rbx), %eax	# *s_3040, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1770	#,
.L1769:
	.loc 1 4425 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3040, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1771	#,
	.loc 1 4425 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3040, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1770	#,
.L1771:
	.loc 1 4425 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3040, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1772	#,
.L1770:
	.loc 1 4425 0 discriminator 1
	movl	$1, %eax	#, iftmp.1544
	jmp	.L1773	#
.L1772:
	.loc 1 4425 0 discriminator 3
	movl	$0, %eax	#, iftmp.1544
.L1773:
	.loc 1 4425 0 discriminator 4
	andl	$1, %eax	#, iftmp.1538
	jmp	.L1774	#
.L1768:
	.loc 1 4425 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1775	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1775	#,
	.loc 1 4425 0 discriminator 3
	movl	$1, %eax	#, iftmp.1545
	jmp	.L1776	#
.L1775:
	.loc 1 4425 0 discriminator 2
	movl	$0, %eax	#, iftmp.1545
.L1776:
	.loc 1 4425 0 discriminator 4
	andl	$1, %eax	#, iftmp.1538
.L1774:
	.loc 1 4425 0 discriminator 3
	testb	%al, %al	# iftmp.1538
	je	.L1764	#,
.LBB78:
	.loc 1 4426 0 is_stmt 1
	movq	%rbx, -1232(%rbp)	# s, p
	.loc 1 4427 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1546
	movq	%rax, %rdx	# PL_bufend.1546, PL_bufend.1547
	movq	-1232(%rbp), %rax	# p, p.1548
	subq	%rax, %rdx	# p.1548, D.28902
	movq	%rdx, %rax	# D.28902, D.28902
	cmpq	$2, %rax	#, D.28902
	jle	.L1777	#,
	.loc 1 4428 0 discriminator 1
	movq	-1232(%rbp), %rax	# p, tmp3680
	movl	$2, %edx	#,
	movl	$.LC132, %esi	#,
	movq	%rax, %rdi	# tmp3680,
	call	strncmp	#
	.loc 1 4427 0 discriminator 1
	testl	%eax, %eax	# D.28894
	jne	.L1777	#,
	.loc 1 4428 0
	movq	-1232(%rbp), %rax	# p, tmp3681
	addq	$2, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3076, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1778	#,
	.loc 1 4428 0 is_stmt 0 discriminator 1
	movq	-1232(%rbp), %rax	# p, tmp3682
	addq	$2, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3078, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1778	#,
	movq	-1232(%rbp), %rax	# p, tmp3683
	addq	$2, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3080, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1778	#,
	movq	-1232(%rbp), %rax	# p, tmp3684
	addq	$2, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3082, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1778	#,
	movq	-1232(%rbp), %rax	# p, tmp3685
	addq	$2, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3084, D.28896
	cmpb	$12, %al	#, D.28896
	jne	.L1777	#,
.L1778:
	.loc 1 4429 0 is_stmt 1
	addq	$2, -1232(%rbp)	#, p
	jmp	.L1779	#
.L1777:
	.loc 1 4430 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1549
	movq	%rax, %rdx	# PL_bufend.1549, PL_bufend.1550
	movq	-1232(%rbp), %rax	# p, p.1551
	subq	%rax, %rdx	# p.1551, D.28902
	movq	%rdx, %rax	# D.28902, D.28902
	cmpq	$3, %rax	#, D.28902
	jle	.L1779	#,
	.loc 1 4431 0 discriminator 1
	movq	-1232(%rbp), %rax	# p, tmp3686
	movl	$3, %edx	#,
	movl	$.LC133, %esi	#,
	movq	%rax, %rdi	# tmp3686,
	call	strncmp	#
	.loc 1 4430 0 discriminator 1
	testl	%eax, %eax	# D.28894
	jne	.L1779	#,
	.loc 1 4431 0
	movq	-1232(%rbp), %rax	# p, tmp3687
	addq	$3, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3092, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1780	#,
	.loc 1 4431 0 is_stmt 0 discriminator 1
	movq	-1232(%rbp), %rax	# p, tmp3688
	addq	$3, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3094, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1780	#,
	movq	-1232(%rbp), %rax	# p, tmp3689
	addq	$3, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3096, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1780	#,
	movq	-1232(%rbp), %rax	# p, tmp3690
	addq	$3, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3098, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1780	#,
	movq	-1232(%rbp), %rax	# p, tmp3691
	addq	$3, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3100, D.28896
	cmpb	$12, %al	#, D.28896
	jne	.L1779	#,
.L1780:
	.loc 1 4432 0 is_stmt 1
	addq	$3, -1232(%rbp)	#, p
.L1779:
	.loc 1 4433 0
	movq	-1232(%rbp), %rax	# p, tmp3692
	movq	%rax, %rdi	# tmp3692,
	call	S_skipspace	#
	movq	%rax, -1232(%rbp)	# tmp3693, p
	.loc 1 4434 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1553
	movzbl	37(%rax), %eax	# PL_curcop.1553_3104->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1781	#,
	.loc 1 4434 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1554
	testq	%rax, %rax	# PL_linestr.1554
	je	.L1782	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1555
	movl	12(%rax), %eax	# PL_linestr.1555_3109->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1782	#,
	.loc 1 4434 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1556
	movzbl	37(%rax), %eax	# PL_curcop.1556_3112->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1783	#,
.L1782:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1557
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1781	#,
.L1783:
	movq	-1232(%rbp), %rax	# p, tmp3694
	movzbl	(%rax), %eax	# MEM[(U8 *)p_3103], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1784	#,
.L1781:
	movq	-1232(%rbp), %rax	# p, tmp3695
	movzbl	(%rax), %eax	# *p_3103, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1785	#,
	movq	-1232(%rbp), %rax	# p, tmp3696
	movzbl	(%rax), %eax	# *p_3103, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1786	#,
.L1785:
	.loc 1 4434 0 discriminator 2
	movq	-1232(%rbp), %rax	# p, tmp3697
	movzbl	(%rax), %eax	# *p_3103, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1787	#,
	.loc 1 4434 0 discriminator 1
	movq	-1232(%rbp), %rax	# p, tmp3698
	movzbl	(%rax), %eax	# *p_3103, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1786	#,
.L1787:
	.loc 1 4434 0 discriminator 2
	movq	-1232(%rbp), %rax	# p, tmp3699
	movzbl	(%rax), %eax	# *p_3103, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1788	#,
.L1786:
	.loc 1 4434 0 discriminator 1
	movl	$1, %eax	#, iftmp.1558
	jmp	.L1789	#
.L1788:
	.loc 1 4434 0 discriminator 3
	movl	$0, %eax	#, iftmp.1558
.L1789:
	.loc 1 4434 0 discriminator 4
	andl	$1, %eax	#, iftmp.1552
	jmp	.L1790	#
.L1784:
	.loc 1 4434 0 discriminator 1
	movq	-1232(%rbp), %rax	# p, tmp3700
	movq	%rax, %rdi	# tmp3700,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1791	#,
	movq	-1232(%rbp), %rax	# p, tmp3701
	movq	%rax, %rdi	# tmp3701,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1791	#,
	.loc 1 4434 0 discriminator 3
	movl	$1, %eax	#, iftmp.1559
	jmp	.L1792	#
.L1791:
	.loc 1 4434 0 discriminator 2
	movl	$0, %eax	#, iftmp.1559
.L1792:
	.loc 1 4434 0 discriminator 4
	andl	$1, %eax	#, iftmp.1552
.L1790:
	.loc 1 4434 0 discriminator 3
	testb	%al, %al	# iftmp.1552
	je	.L1793	#,
	.loc 1 4435 0 is_stmt 1
	movq	PL_bufend(%rip), %rsi	# PL_bufend, PL_bufend.1560
	movq	-1232(%rbp), %rax	# p, tmp3702
	movl	$1, %r8d	#,
	movl	$256, %ecx	#,
	movl	$PL_tokenbuf, %edx	#,
	movq	%rax, %rdi	# tmp3702,
	call	S_scan_ident	#
	movq	%rax, -1232(%rbp)	# tmp3703, p
	.loc 1 4437 0
	movq	-1232(%rbp), %rax	# p, tmp3704
	movq	%rax, %rdi	# tmp3704,
	call	S_skipspace	#
	movq	%rax, -1232(%rbp)	# tmp3705, p
.L1793:
	.loc 1 4439 0
	movq	-1232(%rbp), %rax	# p, tmp3706
	movzbl	(%rax), %eax	# *p_144, D.28896
	cmpb	$36, %al	#, D.28896
	je	.L1764	#,
	.loc 1 4440 0
	movl	$.LC134, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1764:
.LBE78:
	.loc 1 4442 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$279, %eax	#, D.28894
	jmp	.L2138	#
.L1389:
	.loc 1 4445 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$116, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1387:
	.loc 1 4448 0
	movl	$281, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1383:
	.loc 1 4451 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$220, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1384:
	.loc 1 4454 0
	movl	$194, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1561
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1561, PL_last_uni
	movw	$194, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1794	#,
	.loc 1 4454 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3142, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1795	#,
.L1794:
	.loc 1 4454 0 discriminator 1
	movl	$283, %eax	#, iftmp.1562
	jmp	.L1796	#
.L1795:
	movl	$285, %eax	#, iftmp.1562
.L1796:
	.loc 1 4454 0 discriminator 3
	jmp	.L2138	#
.L1385:
	.loc 1 4457 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$222, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1421:
	.loc 1 4460 0
	movl	$85, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$287, %eax	#, D.28894
	jmp	.L2138	#
.L1390:
	.loc 1 4463 0
	movl	$87, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$287, %eax	#, D.28894
	jmp	.L2138	#
.L1420:
	.loc 1 4466 0
	movq	%rbx, %rdx	# s,
	movl	$2, %esi	#,
	movl	$152, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1419:
	.loc 1 4469 0
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$1, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4470 0
	movl	$189, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$280, %eax	#, D.28894
	jmp	.L2138	#
.L1418:
	.loc 1 4473 0
	movl	$295, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1563
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1563, PL_last_uni
	movw	$295, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1797	#,
	.loc 1 4473 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3155, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1798	#,
.L1797:
	.loc 1 4473 0 discriminator 1
	movl	$283, %eax	#, iftmp.1564
	jmp	.L1799	#
.L1798:
	movl	$285, %eax	#, iftmp.1564
.L1799:
	.loc 1 4473 0 discriminator 3
	jmp	.L2138	#
.L1391:
	.loc 1 4476 0 is_stmt 1
	movl	$204, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1565
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1565, PL_last_uni
	movw	$204, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1800	#,
	.loc 1 4476 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3162, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1801	#,
.L1800:
	.loc 1 4476 0 discriminator 1
	movl	$283, %eax	#, iftmp.1566
	jmp	.L1802	#
.L1801:
	movl	$285, %eax	#, iftmp.1566
.L1802:
	.loc 1 4476 0 discriminator 3
	jmp	.L2138	#
.L1404:
	.loc 1 4479 0 is_stmt 1
	movl	$287, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1403:
	.loc 1 4482 0
	movl	$288, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1567
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1567, PL_last_uni
	movw	$288, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1803	#,
	.loc 1 4482 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3170, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1804	#,
.L1803:
	.loc 1 4482 0 discriminator 1
	movl	$283, %eax	#, iftmp.1568
	jmp	.L1805	#
.L1804:
	movl	$285, %eax	#, iftmp.1568
.L1805:
	.loc 1 4482 0 discriminator 3
	jmp	.L2138	#
.L1405:
	.loc 1 4485 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$290, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1406:
	.loc 1 4488 0
	movl	$321, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1569
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1569, PL_last_uni
	movw	$321, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1806	#,
	.loc 1 4488 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3178, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1807	#,
.L1806:
	.loc 1 4488 0 discriminator 1
	movl	$283, %eax	#, iftmp.1570
	jmp	.L1808	#
.L1807:
	movl	$285, %eax	#, iftmp.1570
.L1808:
	.loc 1 4488 0 discriminator 3
	jmp	.L2138	#
.L1407:
	.loc 1 4491 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$322, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1408:
	.loc 1 4494 0
	movl	$323, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1409:
	.loc 1 4497 0
	movl	$337, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1410:
	.loc 1 4500 0
	movl	$335, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1571
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1571, PL_last_uni
	movw	$335, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1809	#,
	.loc 1 4500 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3188, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1810	#,
.L1809:
	.loc 1 4500 0 discriminator 1
	movl	$283, %eax	#, iftmp.1572
	jmp	.L1811	#
.L1810:
	movl	$285, %eax	#, iftmp.1572
.L1811:
	.loc 1 4500 0 discriminator 3
	jmp	.L2138	#
.L1411:
	.loc 1 4503 0 is_stmt 1
	movl	$336, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1573
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1573, PL_last_uni
	movw	$336, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1812	#,
	.loc 1 4503 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3195, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1813	#,
.L1812:
	.loc 1 4503 0 discriminator 1
	movl	$283, %eax	#, iftmp.1574
	jmp	.L1814	#
.L1813:
	movl	$285, %eax	#, iftmp.1574
.L1814:
	.loc 1 4503 0 discriminator 3
	jmp	.L2138	#
.L1402:
	.loc 1 4506 0 is_stmt 1
	movl	$233, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1575
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1575, PL_last_uni
	movw	$233, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1815	#,
	.loc 1 4506 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3202, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1816	#,
.L1815:
	.loc 1 4506 0 discriminator 1
	movl	$283, %eax	#, iftmp.1576
	jmp	.L1817	#
.L1816:
	movl	$285, %eax	#, iftmp.1576
.L1817:
	.loc 1 4506 0 discriminator 3
	jmp	.L2138	#
.L1396:
	.loc 1 4509 0 is_stmt 1
	movl	$315, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1577
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1577, PL_last_uni
	movw	$315, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1818	#,
	.loc 1 4509 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3209, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1819	#,
.L1818:
	.loc 1 4509 0 discriminator 1
	movl	$283, %eax	#, iftmp.1578
	jmp	.L1820	#
.L1819:
	movl	$285, %eax	#, iftmp.1578
.L1820:
	.loc 1 4509 0 discriminator 3
	jmp	.L2138	#
.L1395:
	.loc 1 4512 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$316, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1397:
	.loc 1 4515 0
	movl	$317, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1400:
	.loc 1 4518 0
	movl	$318, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1579
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1579, PL_last_uni
	movw	$318, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1821	#,
	.loc 1 4518 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3218, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1822	#,
.L1821:
	.loc 1 4518 0 discriminator 1
	movl	$283, %eax	#, iftmp.1580
	jmp	.L1823	#
.L1822:
	movl	$285, %eax	#, iftmp.1580
.L1823:
	.loc 1 4518 0 discriminator 3
	jmp	.L2138	#
.L1399:
	.loc 1 4521 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$319, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1401:
	.loc 1 4524 0
	movl	$320, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1412:
	.loc 1 4527 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$324, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1413:
	.loc 1 4530 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$325, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1414:
	.loc 1 4533 0
	movl	$326, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1415:
	.loc 1 4536 0
	movl	$232, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1581
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1581, PL_last_uni
	movw	$232, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1824	#,
	.loc 1 4536 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3230, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1825	#,
.L1824:
	.loc 1 4536 0 discriminator 1
	movl	$283, %eax	#, iftmp.1582
	jmp	.L1826	#
.L1825:
	movl	$285, %eax	#, iftmp.1582
.L1826:
	.loc 1 4536 0 discriminator 3
	jmp	.L2138	#
.L1416:
	.loc 1 4539 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$230, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1392:
	.loc 1 4542 0
	movl	$342, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1394:
	.loc 1 4545 0
	movl	$340, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1583
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1583, PL_last_uni
	movw	$340, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1827	#,
	.loc 1 4545 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3239, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1828	#,
.L1827:
	.loc 1 4545 0 discriminator 1
	movl	$283, %eax	#, iftmp.1584
	jmp	.L1829	#
.L1828:
	movl	$285, %eax	#, iftmp.1584
.L1829:
	.loc 1 4545 0 discriminator 3
	jmp	.L2138	#
.L1393:
	.loc 1 4548 0 is_stmt 1
	movl	$341, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1585
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1585, PL_last_uni
	movw	$341, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1830	#,
	.loc 1 4548 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3246, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1831	#,
.L1830:
	.loc 1 4548 0 discriminator 1
	movl	$283, %eax	#, iftmp.1586
	jmp	.L1832	#
.L1831:
	movl	$285, %eax	#, iftmp.1586
.L1832:
	.loc 1 4548 0 discriminator 3
	jmp	.L2138	#
.L1398:
	.loc 1 4551 0 is_stmt 1
	movl	$345, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1417:
	.loc 1 4554 0
	call	S_set_csh	#
	.loc 1 4555 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$25, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1422:
	.loc 1 4558 0
	movl	$107, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1587
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1587, PL_last_uni
	movw	$107, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1833	#,
	.loc 1 4558 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3255, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1834	#,
.L1833:
	.loc 1 4558 0 discriminator 1
	movl	$283, %eax	#, iftmp.1588
	jmp	.L1835	#
.L1834:
	movl	$285, %eax	#, iftmp.1588
.L1835:
	.loc 1 4558 0 discriminator 3
	jmp	.L2138	#
.L1423:
	.loc 1 4561 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1589
	movl	72(%rax), %eax	# PL_curcop.1589_3260->cop_line, D.28900
	movl	%eax, PL_yylval(%rip)	# D.28894, PL_yylval.ival
	.loc 1 4562 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$274, %eax	#, D.28894
	jmp	.L2138	#
.L1424:
	.loc 1 4565 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$113, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1425:
	.loc 1 4568 0
	movl	$106, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1590
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1590, PL_last_uni
	movw	$106, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1836	#,
	.loc 1 4568 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3267, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1837	#,
.L1836:
	.loc 1 4568 0 discriminator 1
	movl	$283, %eax	#, iftmp.1591
	jmp	.L1838	#
.L1837:
	movl	$285, %eax	#, iftmp.1591
.L1838:
	.loc 1 4568 0 discriminator 3
	jmp	.L2138	#
.L1426:
	.loc 1 4571 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$221, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1427:
	.loc 1 4574 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$140, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1428:
	.loc 1 4577 0
	movl	$131, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1592
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1592, PL_last_uni
	movw	$131, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1839	#,
	.loc 1 4577 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3276, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1840	#,
.L1839:
	.loc 1 4577 0 discriminator 1
	movl	$283, %eax	#, iftmp.1593
	jmp	.L1841	#
.L1840:
	movl	$285, %eax	#, iftmp.1593
.L1841:
	.loc 1 4577 0 discriminator 3
	jmp	.L2138	#
.L1429:
	.loc 1 4580 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$286, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1430:
	.loc 1 4583 0
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$1, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4584 0
	movl	$185, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$280, %eax	#, D.28894
	jmp	.L2138	#
.L1431:
	.loc 1 4587 0
	movl	$123, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1594
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1594, PL_last_uni
	movw	$123, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1842	#,
	.loc 1 4587 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3286, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1843	#,
.L1842:
	.loc 1 4587 0 discriminator 1
	movl	$283, %eax	#, iftmp.1595
	jmp	.L1844	#
.L1843:
	movl	$285, %eax	#, iftmp.1595
.L1844:
	.loc 1 4587 0 discriminator 3
	jmp	.L2138	#
.L1432:
	.loc 1 4590 0 is_stmt 1
	movl	$121, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1596
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1596, PL_last_uni
	movw	$121, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1845	#,
	.loc 1 4590 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3293, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1846	#,
.L1845:
	.loc 1 4590 0 discriminator 1
	movl	$283, %eax	#, iftmp.1597
	jmp	.L1847	#
.L1846:
	movl	$285, %eax	#, iftmp.1597
.L1847:
	.loc 1 4590 0 discriminator 3
	jmp	.L2138	#
.L1437:
	.loc 1 4593 0 is_stmt 1
	movl	$0, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 4594 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$295, %eax	#, D.28894
	jmp	.L2138	#
.L1434:
	.loc 1 4597 0
	movl	$110, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1598
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1598, PL_last_uni
	movw	$110, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1848	#,
	.loc 1 4597 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3301, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1849	#,
.L1848:
	.loc 1 4597 0 discriminator 1
	movl	$283, %eax	#, iftmp.1599
	jmp	.L1850	#
.L1849:
	movl	$285, %eax	#, iftmp.1599
.L1850:
	.loc 1 4597 0 discriminator 3
	jmp	.L2138	#
.L1442:
	.loc 1 4600 0 is_stmt 1
	movl	$84, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$287, %eax	#, D.28894
	jmp	.L2138	#
.L1433:
	.loc 1 4603 0
	movl	$86, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$287, %eax	#, D.28894
	jmp	.L2138	#
.L1438:
	.loc 1 4606 0
	movl	$294, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1600
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1600, PL_last_uni
	movw	$294, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1851	#,
	.loc 1 4606 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3310, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1852	#,
.L1851:
	.loc 1 4606 0 discriminator 1
	movl	$283, %eax	#, iftmp.1601
	jmp	.L1853	#
.L1852:
	movl	$285, %eax	#, iftmp.1601
.L1853:
	.loc 1 4606 0 discriminator 3
	jmp	.L2138	#
.L1440:
	.loc 1 4609 0 is_stmt 1
	movl	$104, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1602
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1602, PL_last_uni
	movw	$104, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1854	#,
	.loc 1 4609 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3317, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1855	#,
.L1854:
	.loc 1 4609 0 discriminator 1
	movl	$283, %eax	#, iftmp.1603
	jmp	.L1856	#
.L1855:
	movl	$285, %eax	#, iftmp.1603
.L1856:
	.loc 1 4609 0 discriminator 3
	jmp	.L2138	#
.L1435:
	.loc 1 4612 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$270, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1436:
	.loc 1 4615 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$227, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1439:
	.loc 1 4618 0
	movl	$347, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1604
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1604, PL_last_uni
	movw	$347, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1857	#,
	.loc 1 4618 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3326, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1858	#,
.L1857:
	.loc 1 4618 0 discriminator 1
	movl	$283, %eax	#, iftmp.1605
	jmp	.L1859	#
.L1858:
	movl	$285, %eax	#, iftmp.1605
.L1859:
	.loc 1 4618 0 discriminator 3
	jmp	.L2138	#
.L1441:
	.loc 1 4621 0 is_stmt 1
	movl	$234, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1606
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1606, PL_last_uni
	movw	$234, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1860	#,
	.loc 1 4621 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3333, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1861	#,
.L1860:
	.loc 1 4621 0 discriminator 1
	movl	$283, %eax	#, iftmp.1607
	jmp	.L1862	#
.L1861:
	movl	$285, %eax	#, iftmp.1607
.L1862:
	.loc 1 4621 0 discriminator 3
	jmp	.L2138	#
.L1443:
	.loc 1 4624 0 is_stmt 1
	movl	$31, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_pat	#
	movq	%rax, %rbx	#, s
	.loc 1 4625 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1609
	movl	72(%rax), %edx	# PL_curcop.1609_3339->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1610
	cmpl	%eax, %edx	# PL_copline.1610, D.28900
	jae	.L1863	#,
	.loc 1 4625 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1611
	movl	72(%rax), %eax	# PL_curcop.1611_3342->cop_line, iftmp.1608
	jmp	.L1864	#
.L1863:
	.loc 1 4625 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1608
.L1864:
	.loc 1 4625 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1608, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L1444:
	.loc 1 4628 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$2, %esi	#,
	movl	$154, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1445:
	.loc 1 4631 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$273, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1446:
	.loc 1 4634 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$303, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1447:
	.loc 1 4637 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$302, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1448:
	.loc 1 4640 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$305, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1449:
	.loc 1 4643 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$304, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1450:
	.loc 1 4647 0
	movl	%r13d, PL_in_my(%rip)	# tmp, PL_in_my
	.loc 1 4648 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 4649 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1613
	movzbl	37(%rax), %eax	# PL_curcop.1613_3353->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1865	#,
	.loc 1 4649 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1614
	testq	%rax, %rax	# PL_linestr.1614
	je	.L1866	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1615
	movl	12(%rax), %eax	# PL_linestr.1615_3358->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1866	#,
	.loc 1 4649 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1616
	movzbl	37(%rax), %eax	# PL_curcop.1616_3361->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1867	#,
.L1866:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1617
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1865	#,
.L1867:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_3352], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1868	#,
.L1865:
	movzbl	(%rbx), %eax	# *s_3352, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1869	#,
	movzbl	(%rbx), %eax	# *s_3352, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1870	#,
.L1869:
	.loc 1 4649 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3352, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1871	#,
	.loc 1 4649 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3352, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1870	#,
.L1871:
	.loc 1 4649 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3352, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1872	#,
.L1870:
	.loc 1 4649 0 discriminator 1
	movl	$1, %eax	#, iftmp.1618
	jmp	.L1873	#
.L1872:
	.loc 1 4649 0 discriminator 3
	movl	$0, %eax	#, iftmp.1618
.L1873:
	.loc 1 4649 0 discriminator 4
	andl	$1, %eax	#, iftmp.1612
	jmp	.L1874	#
.L1868:
	.loc 1 4649 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1875	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1875	#,
	.loc 1 4649 0 discriminator 3
	movl	$1, %eax	#, iftmp.1619
	jmp	.L1876	#
.L1875:
	.loc 1 4649 0 discriminator 2
	movl	$0, %eax	#, iftmp.1619
.L1876:
	.loc 1 4649 0 discriminator 4
	andl	$1, %eax	#, iftmp.1612
.L1874:
	.loc 1 4649 0 discriminator 3
	testb	%al, %al	# iftmp.1612
	je	.L1877	#,
	.loc 1 4650 0 is_stmt 1
	leaq	-1384(%rbp), %rax	#, tmp3707
	movq	%rax, %r8	# tmp3707,
	movl	$1, %ecx	#,
	movl	$256, %edx	#,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4651 0
	movq	-1384(%rbp), %rax	# len, len.1620
	cmpq	$3, %rax	#, len.1620
	jne	.L1878	#,
	.loc 1 4651 0 is_stmt 0 discriminator 1
	movl	$3, %edx	#,
	movl	$.LC135, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	strncmp	#
	testl	%eax, %eax	# D.28894
	jne	.L1878	#,
	.loc 1 4652 0 is_stmt 1
	jmp	.L1388	#
.L1878:
	.loc 1 4653 0
	movq	-1384(%rbp), %rax	# len, len.1621
	movl	%eax, %esi	# D.28894,
	movl	$PL_tokenbuf, %edi	#,
	call	S_find_in_my_stash	#
	movq	%rax, PL_in_my_stash(%rip)	# PL_in_my_stash.1622, PL_in_my_stash
	.loc 1 4654 0
	movq	PL_in_my_stash(%rip), %rax	# PL_in_my_stash, PL_in_my_stash.1623
	testq	%rax, %rax	# PL_in_my_stash.1623
	jne	.L1877	#,
.LBB79:
	.loc 1 4656 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	.loc 1 4657 0
	leaq	-1072(%rbp), %rax	#, tmp3708
	movl	$PL_tokenbuf, %edx	#,
	movl	$.LC136, %esi	#,
	movq	%rax, %rdi	# tmp3708,
	movl	$0, %eax	#,
	call	sprintf	#
	.loc 1 4658 0
	leaq	-1072(%rbp), %rax	#, tmp3709
	movq	%rax, %rdi	# tmp3709,
	call	Perl_yyerror	#
.L1877:
.LBE79:
	.loc 1 4661 0
	movl	$1, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 4662 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$296, %eax	#, D.28894
	jmp	.L2138	#
.L1452:
	.loc 1 4665 0
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$1, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4666 0
	movl	$186, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$280, %eax	#, D.28894
	jmp	.L2138	#
.L1451:
	.loc 1 4669 0
	movl	$89, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$288, %eax	#, D.28894
	jmp	.L2138	#
.L1453:
	.loc 1 4672 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1624
	cmpl	$3, %eax	#, PL_expect.1624
	je	.L1879	#,
	.loc 1 4673 0
	movl	$.LC137, %edi	#,
	call	Perl_yyerror	#
.L1879:
	.loc 1 4674 0
	movl	$0, %r8d	#,
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4675 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_version	#
	movq	%rax, %rbx	#, s
	.loc 1 4676 0
	movl	$0, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 4677 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$271, %eax	#, D.28894
	jmp	.L2138	#
.L1454:
	.loc 1 4680 0
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1880	#,
	.loc 1 4680 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3397, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1881	#,
.L1880:
	.loc 1 4681 0 is_stmt 1
	movl	$96, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$283, %eax	#, D.28894
	jmp	.L2138	#
.L1881:
	.loc 1 4683 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$302, %eax	#, D.28894
	jmp	.L2138	#
.L1456:
	.loc 1 4686 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 4687 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1626
	movzbl	37(%rax), %eax	# PL_curcop.1626_3402->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1882	#,
	.loc 1 4687 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1627
	testq	%rax, %rax	# PL_linestr.1627
	je	.L1883	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1628
	movl	12(%rax), %eax	# PL_linestr.1628_3407->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1883	#,
	.loc 1 4687 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1629
	movzbl	37(%rax), %eax	# PL_curcop.1629_3410->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1884	#,
.L1883:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1630
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1882	#,
.L1884:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_3401], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1885	#,
.L1882:
	movzbl	(%rbx), %eax	# *s_3401, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1886	#,
	movzbl	(%rbx), %eax	# *s_3401, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1887	#,
.L1886:
	.loc 1 4687 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3401, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1888	#,
	.loc 1 4687 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3401, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1887	#,
.L1888:
	.loc 1 4687 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3401, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1889	#,
.L1887:
	.loc 1 4687 0 discriminator 1
	movl	$1, %eax	#, iftmp.1631
	jmp	.L1890	#
.L1889:
	.loc 1 4687 0 discriminator 3
	movl	$0, %eax	#, iftmp.1631
.L1890:
	.loc 1 4687 0 discriminator 4
	andl	$1, %eax	#, iftmp.1625
	jmp	.L1891	#
.L1885:
	.loc 1 4687 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1892	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1892	#,
	.loc 1 4687 0 discriminator 3
	movl	$1, %eax	#, iftmp.1632
	jmp	.L1893	#
.L1892:
	.loc 1 4687 0 discriminator 2
	movl	$0, %eax	#, iftmp.1632
.L1893:
	.loc 1 4687 0 discriminator 4
	andl	$1, %eax	#, iftmp.1625
.L1891:
	.loc 1 4687 0 discriminator 3
	testb	%al, %al	# iftmp.1625
	je	.L1894	#,
.LBB80:
	.loc 1 4689 0 is_stmt 1
	movq	%rbx, %r12	# s, d
	jmp	.L1895	#
.L1907:
	.loc 1 4689 0 is_stmt 0 discriminator 2
	addq	$1, %r12	#, d
.L1895:
	.loc 1 4689 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1634
	movzbl	37(%rax), %eax	# PL_curcop.1634_3431->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1896	#,
	.loc 1 4689 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1635
	testq	%rax, %rax	# PL_linestr.1635
	je	.L1897	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1636
	movl	12(%rax), %eax	# PL_linestr.1636_3436->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1897	#,
	.loc 1 4689 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1637
	movzbl	37(%rax), %eax	# PL_curcop.1637_3439->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1898	#,
.L1897:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1638
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1896	#,
.L1898:
	movzbl	(%r12), %eax	# MEM[(U8 *)d_68], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1899	#,
.L1896:
	movzbl	(%r12), %eax	# *d_68, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1900	#,
	movzbl	(%r12), %eax	# *d_68, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1901	#,
.L1900:
	.loc 1 4689 0 discriminator 2
	movzbl	(%r12), %eax	# *d_68, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1902	#,
	.loc 1 4689 0 discriminator 1
	movzbl	(%r12), %eax	# *d_68, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1901	#,
.L1902:
	.loc 1 4689 0 discriminator 2
	movzbl	(%r12), %eax	# *d_68, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1903	#,
	.loc 1 4689 0 discriminator 1
	movzbl	(%r12), %eax	# *d_68, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L1901	#,
.L1903:
	.loc 1 4689 0 discriminator 2
	movzbl	(%r12), %eax	# *d_68, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1904	#,
.L1901:
	.loc 1 4689 0 discriminator 1
	movl	$1, %eax	#, iftmp.1639
	jmp	.L1905	#
.L1904:
	.loc 1 4689 0 discriminator 3
	movl	$0, %eax	#, iftmp.1639
.L1905:
	.loc 1 4689 0 discriminator 4
	andl	$1, %eax	#, iftmp.1633
	jmp	.L1906	#
.L1899:
	.loc 1 4689 0 discriminator 1
	movq	%r12, %rdi	# d,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.28896
	setne	%al	#, iftmp.1633
.L1906:
	.loc 1 4689 0 discriminator 3
	testb	%al, %al	# iftmp.1633
	jne	.L1907	#,
	.loc 1 4690 0 is_stmt 1
	movq	%r12, -1224(%rbp)	# d, t
	jmp	.L1908	#
.L1910:
	.loc 1 4690 0 is_stmt 0 discriminator 1
	addq	$1, -1224(%rbp)	#, t
.L1908:
	movq	-1224(%rbp), %rax	# t, tmp3710
	movzbl	(%rax), %eax	# *t_145, D.28896
	testb	%al, %al	# D.28896
	je	.L1909	#,
	.loc 1 4690 0 discriminator 2
	movq	-1224(%rbp), %rax	# t, tmp3711
	movzbl	(%rax), %eax	# *t_145, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1910	#,
	movq	-1224(%rbp), %rax	# t, tmp3712
	movzbl	(%rax), %eax	# *t_145, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1910	#,
	.loc 1 4690 0 discriminator 1
	movq	-1224(%rbp), %rax	# t, tmp3713
	movzbl	(%rax), %eax	# *t_145, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1910	#,
	movq	-1224(%rbp), %rax	# t, tmp3714
	movzbl	(%rax), %eax	# *t_145, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1910	#,
	movq	-1224(%rbp), %rax	# t, tmp3715
	movzbl	(%rax), %eax	# *t_145, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1910	#,
.L1909:
	.loc 1 4691 0 is_stmt 1
	movq	-1224(%rbp), %rax	# t, tmp3716
	movzbl	(%rax), %eax	# *t_145, D.28896
	testb	%al, %al	# D.28896
	je	.L1894	#,
	.loc 1 4691 0 is_stmt 0 discriminator 1
	movq	-1224(%rbp), %rax	# t, tmp3717
	movzbl	(%rax), %eax	# *t_145, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC138, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	je	.L1894	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1640
	movq	80(%rax), %rax	# PL_curcop.1640_3471->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1911	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1641
	movq	80(%rax), %rax	# PL_curcop.1641_3473->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1911	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1642
	movq	80(%rax), %rax	# PL_curcop.1642_3475->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1894	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1643
	movq	80(%rax), %rax	# PL_curcop.1643_3477->cop_warnings, D.28913
	movq	(%rax), %rax	# _3478->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_3479].xpv_pv, D.28895
	addq	$8, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3481, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$4, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1894	#,
.L1911:
	.loc 1 4693 0 is_stmt 1
	movq	-1224(%rbp), %rax	# t, tmp3718
	movzbl	(%rax), %eax	# *t_145, D.28896
	cmpb	$61, %al	#, D.28896
	jne	.L1912	#,
	.loc 1 4693 0 is_stmt 0 discriminator 1
	movq	-1224(%rbp), %rax	# t, tmp3719
	addq	$1, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3486, D.28896
	cmpb	$62, %al	#, D.28896
	je	.L1894	#,
.L1912:
	.loc 1 4695 0 is_stmt 1
	movq	%r12, %rdx	# d, d.1644
	movq	%rbx, %rax	# s, s.1645
	movq	%rdx, %rcx	# d.1644, D.28902
	subq	%rax, %rcx	# s.1645, D.28902
	movq	%r12, %rdx	# d, d.1646
	movq	%rbx, %rax	# s, s.1647
	subq	%rax, %rdx	# s.1647, D.28902
	movq	%rdx, %rax	# D.28902, D.28902
	movq	%rbx, %r9	# s,
	movq	%rcx, %r8	# D.28902,
	movq	%rbx, %rcx	# s,
	movq	%rax, %rdx	# D.28902,
	movl	$.LC139, %esi	#,
	movl	$33, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1894:
.LBE80:
	.loc 1 4700 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$191, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1458:
	.loc 1 4703 0
	movl	$160, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 4704 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$300, %eax	#, D.28894
	jmp	.L2138	#
.L1459:
	.loc 1 4707 0
	movl	$117, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1648
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1648, PL_last_uni
	movw	$117, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1913	#,
	.loc 1 4707 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3498, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1914	#,
.L1913:
	.loc 1 4707 0 discriminator 1
	movl	$283, %eax	#, iftmp.1649
	jmp	.L1915	#
.L1914:
	movl	$285, %eax	#, iftmp.1649
.L1915:
	.loc 1 4707 0 discriminator 3
	jmp	.L2138	#
.L1455:
	.loc 1 4710 0 is_stmt 1
	movl	$108, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1650
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1650, PL_last_uni
	movw	$108, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1916	#,
	.loc 1 4710 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3505, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1917	#,
.L1916:
	.loc 1 4710 0 discriminator 1
	movl	$283, %eax	#, iftmp.1651
	jmp	.L1918	#
.L1917:
	movl	$285, %eax	#, iftmp.1651
.L1918:
	.loc 1 4710 0 discriminator 3
	jmp	.L2138	#
.L1457:
	.loc 1 4713 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$275, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1465:
	.loc 1 4716 0
	movl	$.LC140, %edx	#,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_checkcomma	#
	.loc 1 4717 0
	movq	%rbx, %rdx	# s,
	movl	$2, %esi	#,
	movl	$209, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1466:
	.loc 1 4720 0
	movl	$.LC140, %edx	#,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_checkcomma	#
	.loc 1 4721 0
	movq	%rbx, %rdx	# s,
	movl	$2, %esi	#,
	movl	$208, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1467:
	.loc 1 4724 0
	movl	$19, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1652
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1652, PL_last_uni
	movw	$19, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1919	#,
	.loc 1 4724 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3515, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1920	#,
.L1919:
	.loc 1 4724 0 discriminator 1
	movl	$283, %eax	#, iftmp.1653
	jmp	.L1921	#
.L1920:
	movl	$285, %eax	#, iftmp.1653
.L1921:
	.loc 1 4724 0 discriminator 3
	jmp	.L2138	#
.L1468:
	.loc 1 4727 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$146, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1463:
	.loc 1 4730 0
	movl	$147, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1654
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1654, PL_last_uni
	movw	$147, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1922	#,
	.loc 1 4730 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3523, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1923	#,
.L1922:
	.loc 1 4730 0 discriminator 1
	movl	$283, %eax	#, iftmp.1655
	jmp	.L1924	#
.L1923:
	movl	$285, %eax	#, iftmp.1655
.L1924:
	.loc 1 4730 0 discriminator 3
	jmp	.L2138	#
.L1464:
	.loc 1 4733 0 is_stmt 1
	movl	$45, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1656
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1656, PL_last_uni
	movw	$45, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1925	#,
	.loc 1 4733 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3530, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1926	#,
.L1925:
	.loc 1 4733 0 discriminator 1
	movl	$283, %eax	#, iftmp.1657
	jmp	.L1927	#
.L1926:
	movl	$285, %eax	#, iftmp.1657
.L1927:
	.loc 1 4733 0 discriminator 3
	jmp	.L2138	#
.L1460:
	.loc 1 4736 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$138, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1461:
	.loc 1 4739 0
	movl	$0, %r8d	#,
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4740 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$270, %eax	#, D.28894
	jmp	.L2138	#
.L1462:
	.loc 1 4743 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$193, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1469:
	.loc 1 4746 0
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 4747 0
	testq	%rbx, %rbx	# s
	jne	.L1928	#,
	.loc 1 4748 0
	movl	$0, %edi	#,
	call	S_missingterm	#
.L1928:
	.loc 1 4749 0
	movl	$5, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 4750 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1659
	movl	72(%rax), %edx	# PL_curcop.1659_3540->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1660
	cmpl	%eax, %edx	# PL_copline.1660, D.28900
	jae	.L1929	#,
	.loc 1 4750 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1661
	movl	72(%rax), %eax	# PL_curcop.1661_3543->cop_line, iftmp.1658
	jmp	.L1930	#
.L1929:
	.loc 1 4750 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1658
.L1930:
	.loc 1 4750 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1658, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L1472:
	.loc 1 4753 0 is_stmt 1
	movl	$124, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1662
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1662, PL_last_uni
	movw	$124, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1931	#,
	.loc 1 4753 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3549, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1932	#,
.L1931:
	.loc 1 4753 0 discriminator 1
	movl	$283, %eax	#, iftmp.1663
	jmp	.L1933	#
.L1932:
	movl	$285, %eax	#, iftmp.1663
.L1933:
	.loc 1 4753 0 discriminator 3
	jmp	.L2138	#
.L1473:
	.loc 1 4756 0 is_stmt 1
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 4757 0
	testq	%rbx, %rbx	# s
	jne	.L1934	#,
	.loc 1 4758 0
	movl	$0, %edi	#,
	call	S_missingterm	#
.L1934:
	.loc 1 4759 0
	movl	$41, %edi	#,
	call	S_force_next	#
	.loc 1 4760 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1664
	movq	(%rax), %rax	# PL_lex_stuff.1664_3555->sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_3556].xpv_cur, D.28898
	testq	%rax, %rax	# D.28898
	je	.L1935	#,
.LBB81:
	.loc 1 4761 0
	movq	$0, -1216(%rbp)	#, words
	.loc 1 4762 0
	movl	$0, -1404(%rbp)	#, warned
	.loc 1 4763 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1666
	movl	12(%rax), %eax	# PL_lex_stuff.1666_3560->sv_flags, D.28900
	andl	$10223616, %eax	#, D.28900
	cmpl	$262144, %eax	#, D.28900
	jne	.L1936	#,
	.loc 1 4763 0 is_stmt 0 discriminator 1
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1667
	movq	(%rax), %rax	# PL_lex_stuff.1667_3563->sv_any, D.28901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_3564].xpv_cur, len.1668
	movq	%rax, -1384(%rbp)	# len.1668, len
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1669
	movq	(%rax), %rax	# PL_lex_stuff.1669_3566->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_3567].xpv_pv, iftmp.1665
	jmp	.L1937	#
.L1936:
	.loc 1 4763 0 discriminator 2
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1670
	leaq	-1384(%rbp), %rcx	#, tmp3720
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp3720,
	movq	%rax, %rdi	# PL_lex_stuff.1670,
	call	Perl_sv_pvn_force_flags	#
.L1937:
	.loc 1 4763 0 discriminator 3
	movq	%rax, %r12	# iftmp.1665, d
	.loc 1 4764 0 is_stmt 1 discriminator 3
	jmp	.L1938	#
.L1955:
.LBB82:
	.loc 1 4766 0
	jmp	.L1939	#
.L1942:
	.loc 1 4766 0 is_stmt 0 discriminator 1
	movq	-1384(%rbp), %rax	# len, len.1671
	subq	$1, %rax	#, len.1672
	movq	%rax, -1384(%rbp)	# len.1672, len
	addq	$1, %r12	#, d
.L1939:
	movzbl	(%r12), %eax	# *d_69, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1940	#,
	.loc 1 4766 0 discriminator 3
	movzbl	(%r12), %eax	# *d_69, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1940	#,
	.loc 1 4766 0 discriminator 1
	movzbl	(%r12), %eax	# *d_69, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1940	#,
	movzbl	(%r12), %eax	# *d_69, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1940	#,
	movzbl	(%r12), %eax	# *d_69, D.28896
	cmpb	$12, %al	#, D.28896
	jne	.L1941	#,
.L1940:
	.loc 1 4766 0 discriminator 2
	movq	-1384(%rbp), %rax	# len, len.1673
	testq	%rax, %rax	# len.1673
	jne	.L1942	#,
.L1941:
	.loc 1 4767 0 is_stmt 1
	movq	-1384(%rbp), %rax	# len, len.1674
	testq	%rax, %rax	# len.1674
	je	.L1938	#,
.LBB83:
	.loc 1 4768 0
	movq	%r12, -1096(%rbp)	# d, b
	.loc 1 4769 0
	cmpl	$0, -1404(%rbp)	#, warned
	jne	.L1943	#,
	.loc 1 4769 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1675
	movq	80(%rax), %rax	# PL_curcop.1675_3584->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L1944	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1676
	movq	80(%rax), %rax	# PL_curcop.1676_3586->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L1944	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1677
	movq	80(%rax), %rax	# PL_curcop.1677_3588->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L1945	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1678
	movq	80(%rax), %rax	# PL_curcop.1678_3590->cop_warnings, D.28913
	movq	(%rax), %rax	# _3591->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_3592].xpv_pv, D.28895
	addq	$9, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3594, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1945	#,
.L1944:
	.loc 1 4769 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1679
	movq	80(%rax), %rax	# PL_curcop.1679_3598->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L1943	#,
	.loc 1 4769 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1680
	movzbl	%al, %eax	# PL_dowarn.1680, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1943	#,
.L1945:
	.loc 1 4770 0 is_stmt 1
	jmp	.L1946	#
.L1950:
	.loc 1 4771 0
	movzbl	(%r12), %eax	# *d_70, D.28896
	cmpb	$44, %al	#, D.28896
	jne	.L1947	#,
	.loc 1 4772 0
	movl	$.LC141, %esi	#,
	movl	$36, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 4774 0
	addl	$1, -1404(%rbp)	#, warned
	jmp	.L1948	#
.L1947:
	.loc 1 4776 0
	movzbl	(%r12), %eax	# *d_70, D.28896
	cmpb	$35, %al	#, D.28896
	jne	.L1948	#,
	.loc 1 4777 0
	movl	$.LC142, %esi	#,
	movl	$36, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 4779 0
	addl	$1, -1404(%rbp)	#, warned
.L1948:
	.loc 1 4770 0
	movq	-1384(%rbp), %rax	# len, len.1681
	subq	$1, %rax	#, len.1682
	movq	%rax, -1384(%rbp)	# len.1682, len
	addq	$1, %r12	#, d
.L1946:
	.loc 1 4770 0 is_stmt 0 discriminator 1
	movzbl	(%r12), %eax	# *d_70, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1949	#,
	.loc 1 4770 0 discriminator 2
	movzbl	(%r12), %eax	# *d_70, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1949	#,
	.loc 1 4770 0 discriminator 1
	movzbl	(%r12), %eax	# *d_70, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1949	#,
	movzbl	(%r12), %eax	# *d_70, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1949	#,
	movzbl	(%r12), %eax	# *d_70, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1949	#,
	movq	-1384(%rbp), %rax	# len, len.1683
	testq	%rax, %rax	# len.1683
	jne	.L1950	#,
.L1949:
	.loc 1 4769 0 is_stmt 1
	jmp	.L1951	#
.L1943:
	.loc 1 4784 0
	jmp	.L1952	#
.L1953:
	.loc 1 4784 0 is_stmt 0 discriminator 1
	movq	-1384(%rbp), %rax	# len, len.1684
	subq	$1, %rax	#, len.1685
	movq	%rax, -1384(%rbp)	# len.1685, len
	addq	$1, %r12	#, d
.L1952:
	movzbl	(%r12), %eax	# *d_71, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L1951	#,
	.loc 1 4784 0 discriminator 2
	movzbl	(%r12), %eax	# *d_71, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L1951	#,
	.loc 1 4784 0 discriminator 1
	movzbl	(%r12), %eax	# *d_71, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L1951	#,
	movzbl	(%r12), %eax	# *d_71, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L1951	#,
	movzbl	(%r12), %eax	# *d_71, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L1951	#,
	movq	-1384(%rbp), %rax	# len, len.1686
	testq	%rax, %rax	# len.1686
	jne	.L1953	#,
.L1951:
	.loc 1 4786 0 is_stmt 1
	movq	%r12, %rdx	# d, d.1687
	movq	-1096(%rbp), %rax	# b, b.1688
	subq	%rax, %rdx	# b.1688, D.28902
	movq	%rdx, %rax	# D.28902, D.28902
	movq	%rax, %rdx	# D.28902, D.28898
	movq	-1096(%rbp), %rax	# b, tmp3721
	movq	%rdx, %rsi	# D.28898,
	movq	%rax, %rdi	# tmp3721,
	call	Perl_newSVpvn	#
	movq	%rax, -1088(%rbp)	# tmp3722, sv
	.loc 1 4787 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1689
	movl	12(%rax), %eax	# PL_lex_stuff.1689_3630->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1954	#,
	.loc 1 4787 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1690
	movzbl	37(%rax), %eax	# PL_curcop.1690_3633->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1954	#,
	.loc 1 4788 0 is_stmt 1
	movq	-1088(%rbp), %rax	# sv, tmp3723
	movl	12(%rax), %eax	# sv_3629->sv_flags, D.28900
	orl	$536870912, %eax	#, D.28900
	movl	%eax, %edx	# D.28900, D.28900
	movq	-1088(%rbp), %rax	# sv, tmp3724
	movl	%edx, 12(%rax)	# D.28900, sv_3629->sv_flags
.L1954:
	.loc 1 4789 0
	movq	-1088(%rbp), %rax	# sv, tmp3725
	movq	%rax, %rdi	# tmp3725,
	call	S_tokeq	#
	movq	%rax, %rdx	# D.28913,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rdx	#, D.28903
	movq	-1216(%rbp), %rax	# words, tmp3726
	movq	%rax, %rsi	# tmp3726,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, -1216(%rbp)	# tmp3727, words
.L1938:
.LBE83:
.LBE82:
	.loc 1 4764 0 discriminator 1
	movq	-1384(%rbp), %rax	# len, len.1691
	testq	%rax, %rax	# len.1691
	jne	.L1955	#,
	.loc 1 4793 0
	cmpq	$0, -1216(%rbp)	#, words
	je	.L1935	#,
	.loc 1 4794 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.1692
	cltq
	movq	-1216(%rbp), %rdx	# words, tmp3729
	movq	%rdx, PL_nextval(,%rax,8)	# tmp3729, PL_nextval[PL_nexttoke.1692_3642].opval
	.loc 1 4795 0
	movl	$260, %edi	#,
	call	S_force_next	#
.L1935:
.LBE81:
	.loc 1 4798 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1693
	testq	%rax, %rax	# PL_lex_stuff.1693
	je	.L1956	#,
	.loc 1 4799 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1694
	movq	%rax, %rdi	# PL_lex_stuff.1694,
	call	Perl_sv_free	#
	.loc 1 4800 0
	movq	$0, PL_lex_stuff(%rip)	#, PL_lex_stuff
.L1956:
	.loc 1 4802 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 4803 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$40, %eax	#, D.28894
	jmp	.L2138	#
.L1470:
	.loc 1 4806 0
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 4807 0
	testq	%rbx, %rbx	# s
	jne	.L1957	#,
	.loc 1 4808 0
	movl	$0, %edi	#,
	call	S_missingterm	#
.L1957:
	.loc 1 4809 0
	movl	$67, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 4810 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1695
	movq	(%rax), %rax	# PL_lex_stuff.1695_3647->sv_any, D.28901
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_3648].xiv_iv, D.28902
	cmpq	$39, %rax	#, D.28902
	jne	.L1958	#,
	.loc 1 4811 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1696
	movq	(%rax), %rax	# PL_lex_stuff.1696_3650->sv_any, D.28901
	movq	$0, 24(%rax)	#, MEM[(struct XPVIV *)_3651].xiv_iv
.L1958:
	.loc 1 4812 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1698
	movl	72(%rax), %edx	# PL_curcop.1698_3652->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1699
	cmpl	%eax, %edx	# PL_copline.1699, D.28900
	jae	.L1959	#,
	.loc 1 4812 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1700
	movl	72(%rax), %eax	# PL_curcop.1700_3655->cop_line, iftmp.1697
	jmp	.L1960	#
.L1959:
	.loc 1 4812 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1697
.L1960:
	.loc 1 4812 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1697, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L1471:
	.loc 1 4815 0 is_stmt 1
	movl	$32, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_pat	#
	movq	%rax, %rbx	#, s
	.loc 1 4816 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1702
	movl	72(%rax), %edx	# PL_curcop.1702_3660->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1703
	cmpl	%eax, %edx	# PL_copline.1703, D.28900
	jae	.L1961	#,
	.loc 1 4816 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1704
	movl	72(%rax), %eax	# PL_curcop.1704_3663->cop_line, iftmp.1701
	jmp	.L1962	#
.L1961:
	.loc 1 4816 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1701
.L1962:
	.loc 1 4816 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1701, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L1474:
	.loc 1 4819 0 is_stmt 1
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 4820 0
	testq	%rbx, %rbx	# s
	jne	.L1963	#,
	.loc 1 4821 0
	movl	$0, %edi	#,
	call	S_missingterm	#
.L1963:
	.loc 1 4822 0
	movl	$24, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 4823 0
	call	S_set_csh	#
	.loc 1 4824 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1706
	movl	72(%rax), %edx	# PL_curcop.1706_3668->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1707
	cmpl	%eax, %edx	# PL_copline.1707, D.28900
	jae	.L1964	#,
	.loc 1 4824 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1708
	movl	72(%rax), %eax	# PL_curcop.1708_3671->cop_line, iftmp.1705
	jmp	.L1965	#
.L1964:
	.loc 1 4824 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1705
.L1965:
	.loc 1 4824 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1705, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L1487:
	.loc 1 4827 0 is_stmt 1
	movl	$184, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$286, %eax	#, D.28894
	jmp	.L2138	#
.L1485:
	.loc 1 4830 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 4831 0
	movzbl	(%rbx), %eax	# *s_3676, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1966	#,
	.loc 1 4831 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3676, D.28896
	cmpb	$57, %al	#, D.28896
	jg	.L1966	#,
	.loc 1 4832 0 is_stmt 1
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_version	#
	movq	%rax, %rbx	#, s
	jmp	.L1967	#
.L1966:
	.loc 1 4834 0
	movzbl	(%rbx), %eax	# *s_3676, D.28896
	cmpb	$118, %al	#, D.28896
	jne	.L1968	#,
	.loc 1 4834 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3681, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L1968	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3683, D.28896
	cmpb	$57, %al	#, D.28896
	jg	.L1968	#,
	.loc 1 4835 0 is_stmt 1
	movl	$1, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_version	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3685, D.28896
	cmpb	$118, %al	#, D.28896
	jne	.L1967	#,
.L1968:
	.loc 1 4837 0
	movb	$0, PL_tokenbuf(%rip)	#, PL_tokenbuf
	.loc 1 4838 0
	movl	$0, %r8d	#,
	movl	$1, %ecx	#,
	movl	$1, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4839 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1710
	movzbl	37(%rax), %eax	# PL_curcop.1710_3688->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L1969	#,
	.loc 1 4839 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1711
	testq	%rax, %rax	# PL_linestr.1711
	je	.L1970	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1712
	movl	12(%rax), %eax	# PL_linestr.1712_3693->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1970	#,
	.loc 1 4839 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1713
	movzbl	37(%rax), %eax	# PL_curcop.1713_3696->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L1971	#,
.L1970:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1714
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L1969	#,
.L1971:
	movl	$PL_tokenbuf, %eax	#, PL_tokenbuf.1715
	movzbl	(%rax), %eax	# MEM[(U8 *)PL_tokenbuf.1715_3702], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L1972	#,
.L1969:
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L1973	#,
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L1974	#,
.L1973:
	.loc 1 4839 0 discriminator 2
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L1975	#,
	.loc 1 4839 0 discriminator 1
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L1974	#,
.L1975:
	.loc 1 4839 0 discriminator 2
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L1976	#,
.L1974:
	.loc 1 4839 0 discriminator 1
	movl	$1, %eax	#, iftmp.1716
	jmp	.L1977	#
.L1976:
	.loc 1 4839 0 discriminator 3
	movl	$0, %eax	#, iftmp.1716
.L1977:
	.loc 1 4839 0 discriminator 4
	andl	$1, %eax	#, iftmp.1709
	jmp	.L1978	#
.L1972:
	.loc 1 4839 0 discriminator 1
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L1979	#,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L1979	#,
	.loc 1 4839 0 discriminator 3
	movl	$1, %eax	#, iftmp.1717
	jmp	.L1980	#
.L1979:
	.loc 1 4839 0 discriminator 2
	movl	$0, %eax	#, iftmp.1717
.L1980:
	.loc 1 4839 0 discriminator 4
	andl	$1, %eax	#, iftmp.1709
.L1978:
	.loc 1 4839 0 discriminator 3
	testb	%al, %al	# iftmp.1709
	je	.L1981	#,
	.loc 1 4840 0 is_stmt 1
	movl	$PL_tokenbuf, %edi	#,
	call	strlen	#
	movl	$1, %edx	#,
	movl	%eax, %esi	# D.28900,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_gv_stashpvn	#
	jmp	.L1967	#
.L1981:
	.loc 1 4841 0
	movzbl	(%rbx), %eax	# *s_3687, D.28896
	cmpb	$60, %al	#, D.28896
	jne	.L1967	#,
	.loc 1 4842 0
	movl	$.LC143, %edi	#,
	call	Perl_yyerror	#
.L1967:
	.loc 1 4844 0
	movl	$309, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1718
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1718, PL_last_uni
	movw	$309, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_44, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1982	#,
	.loc 1 4844 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3722, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1983	#,
.L1982:
	.loc 1 4844 0 discriminator 1
	movl	$283, %eax	#, iftmp.1719
	jmp	.L1984	#
.L1983:
	movl	$285, %eax	#, iftmp.1719
.L1984:
	.loc 1 4844 0 discriminator 3
	jmp	.L2138	#
.L1486:
	.loc 1 4847 0 is_stmt 1
	movl	$172, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1720
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1720, PL_last_uni
	movw	$172, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1985	#,
	.loc 1 4847 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3729, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1986	#,
.L1985:
	.loc 1 4847 0 discriminator 1
	movl	$283, %eax	#, iftmp.1721
	jmp	.L1987	#
.L1986:
	movl	$285, %eax	#, iftmp.1721
.L1987:
	.loc 1 4847 0 discriminator 3
	jmp	.L2138	#
.L1482:
	.loc 1 4850 0 is_stmt 1
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$1, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4851 0
	movl	$187, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$280, %eax	#, D.28894
	jmp	.L2138	#
.L1484:
	.loc 1 4854 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$269, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1475:
	.loc 1 4857 0
	movl	$101, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1722
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1722, PL_last_uni
	movw	$101, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1988	#,
	.loc 1 4857 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3739, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1989	#,
.L1988:
	.loc 1 4857 0 discriminator 1
	movl	$283, %eax	#, iftmp.1723
	jmp	.L1990	#
.L1989:
	movl	$285, %eax	#, iftmp.1723
.L1990:
	.loc 1 4857 0 discriminator 3
	jmp	.L2138	#
.L1491:
	.loc 1 4860 0 is_stmt 1
	movl	$274, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1724
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1724, PL_last_uni
	movw	$274, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1991	#,
	.loc 1 4860 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3746, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1992	#,
.L1991:
	.loc 1 4860 0 discriminator 1
	movl	$283, %eax	#, iftmp.1725
	jmp	.L1993	#
.L1992:
	movl	$285, %eax	#, iftmp.1725
.L1993:
	.loc 1 4860 0 discriminator 3
	jmp	.L2138	#
.L1490:
	.loc 1 4863 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$114, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1476:
	.loc 1 4866 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$205, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1477:
	.loc 1 4869 0
	movl	$276, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1726
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1726, PL_last_uni
	movw	$276, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1994	#,
	.loc 1 4869 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3755, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1995	#,
.L1994:
	.loc 1 4869 0 discriminator 1
	movl	$283, %eax	#, iftmp.1727
	jmp	.L1996	#
.L1995:
	movl	$285, %eax	#, iftmp.1727
.L1996:
	.loc 1 4869 0 discriminator 3
	jmp	.L2138	#
.L1478:
	.loc 1 4872 0 is_stmt 1
	call	S_set_csh	#
	.loc 1 4873 0
	movl	$26, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1728
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1728, PL_last_uni
	movw	$26, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L1997	#,
	.loc 1 4873 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3762, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L1998	#,
.L1997:
	.loc 1 4873 0 discriminator 1
	movl	$283, %eax	#, iftmp.1729
	jmp	.L1999	#
.L1998:
	movl	$285, %eax	#, iftmp.1729
.L1999:
	.loc 1 4873 0 discriminator 3
	jmp	.L2138	#
.L1480:
	.loc 1 4876 0 is_stmt 1
	call	S_set_csh	#
	.loc 1 4877 0
	movl	$24, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1730
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1730, PL_last_uni
	movw	$24, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2000	#,
	.loc 1 4877 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3769, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2001	#,
.L2000:
	.loc 1 4877 0 discriminator 1
	movl	$283, %eax	#, iftmp.1731
	jmp	.L2002	#
.L2001:
	movl	$285, %eax	#, iftmp.1731
.L2002:
	.loc 1 4877 0 discriminator 3
	jmp	.L2138	#
.L1489:
	.loc 1 4880 0 is_stmt 1
	movl	$279, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1732
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1732, PL_last_uni
	movw	$279, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2003	#,
	.loc 1 4880 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3776, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2004	#,
.L2003:
	.loc 1 4880 0 discriminator 1
	movl	$283, %eax	#, iftmp.1733
	jmp	.L2005	#
.L2004:
	movl	$285, %eax	#, iftmp.1733
.L2005:
	.loc 1 4880 0 discriminator 3
	jmp	.L2138	#
.L1481:
	.loc 1 4883 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$215, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1488:
	.loc 1 4886 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$151, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1479:
	.loc 1 4889 0
	movl	$272, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1734
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1734, PL_last_uni
	movw	$272, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2006	#,
	.loc 1 4889 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3785, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2007	#,
.L2006:
	.loc 1 4889 0 discriminator 1
	movl	$283, %eax	#, iftmp.1735
	jmp	.L2008	#
.L2007:
	movl	$285, %eax	#, iftmp.1735
.L2008:
	.loc 1 4889 0 discriminator 3
	jmp	.L2138	#
.L1483:
	.loc 1 4892 0 is_stmt 1
	movl	$22, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1736
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1736, PL_last_uni
	movw	$22, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2009	#,
	.loc 1 4892 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3792, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2010	#,
.L2009:
	.loc 1 4892 0 discriminator 1
	movl	$283, %eax	#, iftmp.1737
	jmp	.L2011	#
.L2010:
	movl	$285, %eax	#, iftmp.1737
.L2011:
	.loc 1 4892 0 discriminator 3
	jmp	.L2138	#
.L1492:
	.loc 1 4895 0 is_stmt 1
	movq	%rbx, %rdi	# s,
	call	S_scan_subst	#
	movq	%rax, %rbx	#, s
	.loc 1 4896 0
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.28903
	testq	%rax, %rax	# D.28903
	je	.L2012	#,
	.loc 1 4897 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1739
	movl	72(%rax), %edx	# PL_curcop.1739_3799->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1740
	cmpl	%eax, %edx	# PL_copline.1740, D.28900
	jae	.L2013	#,
	.loc 1 4897 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1741
	movl	72(%rax), %eax	# PL_curcop.1741_3802->cop_line, iftmp.1738
	jmp	.L2014	#
.L2013:
	.loc 1 4897 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1738
.L2014:
	.loc 1 4897 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1738, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L2012:
	.loc 1 4899 0 is_stmt 1
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$1, %eax	#, D.28894
	jmp	.L2138	#
.L1348:
	.loc 1 4902 0
	movl	$40, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1742
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1742, PL_last_uni
	movw	$40, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2015	#,
	.loc 1 4902 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3809, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2016	#,
.L2015:
	.loc 1 4902 0 discriminator 1
	movl	$283, %eax	#, iftmp.1743
	jmp	.L2017	#
.L2016:
	movl	$285, %eax	#, iftmp.1743
.L2017:
	.loc 1 4902 0 discriminator 3
	jmp	.L2138	#
.L1493:
	.loc 1 4905 0 is_stmt 1
	movl	$2, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1744
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1744, PL_last_uni
	movw	$2, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2018	#,
	.loc 1 4905 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3816, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2019	#,
.L2018:
	.loc 1 4905 0 discriminator 1
	movl	$283, %eax	#, iftmp.1745
	jmp	.L2020	#
.L2019:
	movl	$285, %eax	#, iftmp.1745
.L2020:
	.loc 1 4905 0 discriminator 3
	jmp	.L2138	#
.L1496:
	.loc 1 4908 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$203, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1494:
	.loc 1 4911 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$218, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1497:
	.loc 1 4914 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$307, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1498:
	.loc 1 4917 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$306, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1499:
	.loc 1 4920 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$308, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1500:
	.loc 1 4923 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$214, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1504:
	.loc 1 4926 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$289, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1505:
	.loc 1 4929 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$291, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1502:
	.loc 1 4932 0
	movl	$327, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1746
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1746, PL_last_uni
	movw	$327, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2021	#,
	.loc 1 4932 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3831, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2022	#,
.L2021:
	.loc 1 4932 0 discriminator 1
	movl	$283, %eax	#, iftmp.1747
	jmp	.L2023	#
.L2022:
	movl	$285, %eax	#, iftmp.1747
.L2023:
	.loc 1 4932 0 discriminator 3
	jmp	.L2138	#
.L1503:
	.loc 1 4935 0 is_stmt 1
	movl	$328, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1748
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1748, PL_last_uni
	movw	$328, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2024	#,
	.loc 1 4935 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3838, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2025	#,
.L2024:
	.loc 1 4935 0 discriminator 1
	movl	$283, %eax	#, iftmp.1749
	jmp	.L2026	#
.L2025:
	movl	$285, %eax	#, iftmp.1749
.L2026:
	.loc 1 4935 0 discriminator 3
	jmp	.L2138	#
.L1508:
	.loc 1 4938 0 is_stmt 1
	movl	$330, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1750
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1750, PL_last_uni
	movw	$330, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2027	#,
	.loc 1 4938 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3845, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2028	#,
.L2027:
	.loc 1 4938 0 discriminator 1
	movl	$283, %eax	#, iftmp.1751
	jmp	.L2029	#
.L2028:
	movl	$285, %eax	#, iftmp.1751
.L2029:
	.loc 1 4938 0 discriminator 3
	jmp	.L2138	#
.L1506:
	.loc 1 4941 0 is_stmt 1
	movl	$329, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1752
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1752, PL_last_uni
	movw	$329, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2030	#,
	.loc 1 4941 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3852, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2031	#,
.L2030:
	.loc 1 4941 0 discriminator 1
	movl	$283, %eax	#, iftmp.1753
	jmp	.L2032	#
.L2031:
	movl	$285, %eax	#, iftmp.1753
.L2032:
	.loc 1 4941 0 discriminator 3
	jmp	.L2138	#
.L1507:
	.loc 1 4944 0 is_stmt 1
	movl	$338, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1501:
	.loc 1 4947 0
	movl	$343, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1495:
	.loc 1 4950 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$278, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1509:
	.loc 1 4953 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$231, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1510:
	.loc 1 4956 0
	movl	$148, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1754
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1754, PL_last_uni
	movw	$148, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2033	#,
	.loc 1 4956 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3863, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2034	#,
.L2033:
	.loc 1 4956 0 discriminator 1
	movl	$283, %eax	#, iftmp.1755
	jmp	.L2035	#
.L2034:
	movl	$285, %eax	#, iftmp.1755
.L2035:
	.loc 1 4956 0 discriminator 3
	jmp	.L2138	#
.L1511:
	.loc 1 4959 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$299, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1512:
	.loc 1 4962 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$298, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1513:
	.loc 1 4965 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$300, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1514:
	.loc 1 4968 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$301, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1515:
	.loc 1 4971 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$229, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1516:
	.loc 1 4974 0
	movl	$99, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1756
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1756, PL_last_uni
	movw	$99, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2036	#,
	.loc 1 4974 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3875, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2037	#,
.L2036:
	.loc 1 4974 0 discriminator 1
	movl	$283, %eax	#, iftmp.1757
	jmp	.L2038	#
.L2037:
	movl	$285, %eax	#, iftmp.1757
.L2038:
	.loc 1 4974 0 discriminator 3
	jmp	.L2138	#
.L1517:
	.loc 1 4977 0 is_stmt 1
	movl	$297, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1758
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1758, PL_last_uni
	movw	$297, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2039	#,
	.loc 1 4977 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3882, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2040	#,
.L2039:
	.loc 1 4977 0 discriminator 1
	movl	$283, %eax	#, iftmp.1759
	jmp	.L2041	#
.L2040:
	movl	$285, %eax	#, iftmp.1759
.L2041:
	.loc 1 4977 0 discriminator 3
	jmp	.L2138	#
.L1518:
	.loc 1 4980 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$223, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1519:
	.loc 1 4983 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$224, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1520:
	.loc 1 4986 0
	movl	$.LC144, %edx	#,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_checkcomma	#
	.loc 1 4987 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 4988 0
	movzbl	(%rbx), %eax	# *s_3889, D.28896
	cmpb	$59, %al	#, D.28896
	je	.L2042	#,
	.loc 1 4988 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3889, D.28896
	cmpb	$41, %al	#, D.28896
	jne	.L2043	#,
.L2042:
	.loc 1 4989 0 is_stmt 1
	movl	$.LC145, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2043:
	.loc 1 4990 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 4991 0
	movl	$0, %r8d	#,
	movl	$1, %ecx	#,
	movl	$1, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 4992 0
	movq	%rbx, %rdx	# s,
	movl	$2, %esi	#,
	movl	$150, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1522:
	.loc 1 4995 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$139, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1523:
	.loc 1 4998 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$115, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1521:
	.loc 1 5001 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$145, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1524:
	.loc 1 5004 0
	movl	$105, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1760
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1760, PL_last_uni
	movw	$105, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2044	#,
	.loc 1 5004 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3899, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2045	#,
.L2044:
	.loc 1 5004 0 discriminator 1
	movl	$283, %eax	#, iftmp.1761
	jmp	.L2046	#
.L2045:
	movl	$285, %eax	#, iftmp.1761
.L2046:
	.loc 1 5004 0 discriminator 3
	jmp	.L2138	#
.L1525:
	.loc 1 5007 0 is_stmt 1
	movl	$102, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1762
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1762, PL_last_uni
	movw	$102, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2047	#,
	.loc 1 5007 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3906, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2048	#,
.L2047:
	.loc 1 5007 0 discriminator 1
	movl	$283, %eax	#, iftmp.1763
	jmp	.L2049	#
.L2048:
	movl	$285, %eax	#, iftmp.1763
.L2049:
	.loc 1 5007 0 discriminator 3
	jmp	.L2138	#
.L1526:
	.loc 1 5010 0 is_stmt 1
	movl	$235, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1764
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1764, PL_last_uni
	movw	$235, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2050	#,
	.loc 1 5010 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3913, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2051	#,
.L2050:
	.loc 1 5010 0 discriminator 1
	movl	$283, %eax	#, iftmp.1765
	jmp	.L2052	#
.L2051:
	movl	$285, %eax	#, iftmp.1765
.L2052:
	.loc 1 5010 0 discriminator 3
	jmp	.L2138	#
.L1527:
	.loc 1 5013 0 is_stmt 1
	movl	$44, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1766
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1766, PL_last_uni
	movw	$44, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2053	#,
	.loc 1 5013 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_3920, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2054	#,
.L2053:
	.loc 1 5013 0 discriminator 1
	movl	$283, %eax	#, iftmp.1767
	jmp	.L2055	#
.L2054:
	movl	$285, %eax	#, iftmp.1767
.L2055:
	.loc 1 5013 0 discriminator 3
	jmp	.L2138	#
.L1528:
	.loc 1 5016 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$111, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1388:
.LBB84:
	.loc 1 5023 0
	movq	$0, -1208(%rbp)	#, tboffset
	.loc 1 5026 0
	movl	%r13d, -1388(%rbp)	# tmp, key
	.loc 1 5028 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 5030 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1768
	movzbl	37(%rax), %eax	# PL_curcop.1768_3929->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L2056	#,
	.loc 1 5030 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1769
	testq	%rax, %rax	# PL_linestr.1769
	je	.L2057	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1770
	movl	12(%rax), %eax	# PL_linestr.1770_3934->sv_flags, D.28900
	andl	$536870912, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L2057	#,
	.loc 1 5030 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1771
	movzbl	37(%rax), %eax	# PL_curcop.1771_3937->op_private, D.28904
	movzbl	%al, %eax	# D.28904, D.28894
	andl	$8, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L2058	#,
.L2057:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1772
	andl	$8388608, %eax	#, D.28900
	testl	%eax, %eax	# D.28900
	je	.L2056	#,
.L2058:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_3928], D.28904
	cmpb	$-65, %al	#, D.28904
	ja	.L2059	#,
.L2056:
	movzbl	(%rbx), %eax	# *s_3928, D.28896
	cmpb	$64, %al	#, D.28896
	jle	.L2060	#,
	movzbl	(%rbx), %eax	# *s_3928, D.28896
	cmpb	$90, %al	#, D.28896
	jle	.L2061	#,
.L2060:
	.loc 1 5030 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3928, D.28896
	cmpb	$96, %al	#, D.28896
	jle	.L2062	#,
	.loc 1 5030 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3928, D.28896
	cmpb	$122, %al	#, D.28896
	jle	.L2061	#,
.L2062:
	.loc 1 5030 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3928, D.28896
	cmpb	$95, %al	#, D.28896
	jne	.L2063	#,
.L2061:
	.loc 1 5030 0 discriminator 1
	movl	$1, %eax	#, iftmp.1773
	jmp	.L2064	#
.L2063:
	.loc 1 5030 0 discriminator 3
	movl	$0, %eax	#, iftmp.1773
.L2064:
	.loc 1 5030 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L2065	#,
	.loc 1 5030 0 discriminator 3
	jmp	.L2066	#
.L2059:
	.loc 1 5030 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.28896
	je	.L2067	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.28896
	jne	.L2067	#,
	.loc 1 5030 0 discriminator 3
	movl	$1, %eax	#, iftmp.1774
	jmp	.L2068	#
.L2067:
	.loc 1 5030 0 discriminator 2
	movl	$0, %eax	#, iftmp.1774
.L2068:
	.loc 1 5030 0 discriminator 4
	andl	$1, %eax	#, D.28899
	testb	%al, %al	# D.28899
	jne	.L2065	#,
.L2066:
	movzbl	(%rbx), %eax	# *s_3928, D.28896
	cmpb	$39, %al	#, D.28896
	je	.L2065	#,
	.loc 1 5031 0 is_stmt 1 discriminator 1
	movzbl	(%rbx), %eax	# *s_3928, D.28896
	.loc 1 5030 0 discriminator 1
	cmpb	$58, %al	#, D.28896
	jne	.L2069	#,
	.loc 1 5031 0
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_3959, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L2069	#,
.L2065:
	.loc 1 5033 0
	movl	$4, PL_expect(%rip)	#, PL_expect
	.loc 1 5034 0
	movl	$5, -1400(%rbp)	#, attrful
	.loc 1 5036 0
	movq	%rbx, %rdx	# s, s.1775
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1776
	subq	%rax, %rdx	# PL_oldbufptr.1777, tmp3730
	movq	%rdx, %rax	# tmp3730, tmp3730
	movq	%rax, -1208(%rbp)	# tmp3730, tboffset
	.loc 1 5037 0
	leaq	-1384(%rbp), %rdx	#, tmp3731
	leaq	-1072(%rbp), %rax	#, tmp3732
	movq	%rdx, %r8	# tmp3731,
	movl	$1, %ecx	#,
	movl	$256, %edx	#,
	movq	%rax, %rsi	# tmp3732,
	movq	%rbx, %rdi	# s,
	call	S_scan_word	#
	movq	%rax, %r12	#, d
	.loc 1 5038 0
	leaq	-1072(%rbp), %rax	#, tmp3733
	movl	$58, %esi	#,
	movq	%rax, %rdi	# tmp3733,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	je	.L2070	#,
	.loc 1 5039 0
	movq	PL_subname(%rip), %rax	# PL_subname, PL_subname.1778
	leaq	-1072(%rbp), %rdx	#, tmp3734
	movq	%rdx, %rsi	# tmp3734,
	movq	%rax, %rdi	# PL_subname.1778,
	call	Perl_sv_setpv	#
	jmp	.L2071	#
.L2070:
	.loc 1 5041 0
	movq	PL_curstname(%rip), %rcx	# PL_curstname, PL_curstname.1779
	movq	PL_subname(%rip), %rax	# PL_subname, PL_subname.1780
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# PL_curstname.1779,
	movq	%rax, %rdi	# PL_subname.1780,
	call	Perl_sv_setsv_flags	#
	.loc 1 5042 0
	movq	PL_subname(%rip), %rax	# PL_subname, PL_subname.1781
	movl	$2, %ecx	#,
	movl	$2, %edx	#,
	movl	$.LC113, %esi	#,
	movq	%rax, %rdi	# PL_subname.1781,
	call	Perl_sv_catpvn_flags	#
	.loc 1 5043 0
	movq	-1384(%rbp), %rdx	# len, len.1782
	movq	PL_subname(%rip), %rax	# PL_subname, PL_subname.1783
	leaq	-1072(%rbp), %rsi	#, tmp3735
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# PL_subname.1783,
	call	Perl_sv_catpvn_flags	#
.L2071:
	.loc 1 5045 0
	movq	%r12, %rdi	# d,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 5046 0
	movb	$1, -1444(%rbp)	#, have_name
	jmp	.L2072	#
.L2069:
	.loc 1 5049 0
	cmpl	$127, -1388(%rbp)	#, key
	jne	.L2073	#,
	.loc 1 5050 0
	movl	$.LC146, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2073:
	.loc 1 5051 0
	movl	$7, PL_expect(%rip)	#, PL_expect
	.loc 1 5052 0
	movl	$6, -1400(%rbp)	#, attrful
	.loc 1 5053 0
	movq	PL_subname(%rip), %rax	# PL_subname, PL_subname.1784
	movl	$.LC147, %esi	#,
	movq	%rax, %rdi	# PL_subname.1784,
	call	Perl_sv_setpv	#
	.loc 1 5054 0
	movb	$0, -1444(%rbp)	#, have_name
.L2072:
	.loc 1 5057 0
	cmpl	$65, -1388(%rbp)	#, key
	jne	.L2074	#,
	.loc 1 5058 0
	movzbl	(%rbx), %eax	# *s_46, D.28896
	cmpb	$61, %al	#, D.28896
	jne	.L2075	#,
	.loc 1 5059 0
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.1785
	addl	$1, %eax	#, PL_lex_formbrack.1786
	movl	%eax, PL_lex_formbrack(%rip)	# PL_lex_formbrack.1786, PL_lex_formbrack
.L2075:
	.loc 1 5060 0
	cmpb	$0, -1444(%rbp)	#, have_name
	je	.L2076	#,
	.loc 1 5061 0
	movq	PL_oldbufptr(%rip), %rdx	# PL_oldbufptr, PL_oldbufptr.1787
	movq	-1208(%rbp), %rax	# tboffset, tboffset.1788
	addq	%rdx, %rax	# PL_oldbufptr.1787, D.28895
	movl	$1, %r8d	#,
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movl	$257, %esi	#,
	movq	%rax, %rdi	# D.28895,
	call	S_force_word	#
.L2076:
	.loc 1 5063 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$267, %eax	#, D.28894
	jmp	.L2138	#
.L2074:
	.loc 1 5067 0
	movzbl	(%rbx), %eax	# *s_46, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2078	#,
.LBB85:
	.loc 1 5070 0
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 5071 0
	testq	%rbx, %rbx	# s
	jne	.L2079	#,
	.loc 1 5072 0
	movl	$.LC148, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2079:
	.loc 1 5074 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1789
	movq	(%rax), %rax	# PL_lex_stuff.1789_3988->sv_any, D.28901
	movq	(%rax), %r12	# MEM[(struct XPV *)_3989].xpv_pv, d
	.loc 1 5075 0
	movl	$0, %r13d	#, tmp
	.loc 1 5076 0
	movb	$0, -1442(%rbp)	#, bad_proto
	.loc 1 5077 0
	movq	%r12, -1200(%rbp)	# d, p
	jmp	.L2080	#
.L2082:
	.loc 1 5078 0
	movq	-1200(%rbp), %rax	# p, tmp3736
	movzbl	(%rax), %eax	# *p_157, D.28896
	cmpb	$32, %al	#, D.28896
	je	.L2081	#,
	.loc 1 5078 0 is_stmt 0 discriminator 1
	movq	-1200(%rbp), %rax	# p, tmp3737
	movzbl	(%rax), %eax	# *p_157, D.28896
	cmpb	$9, %al	#, D.28896
	je	.L2081	#,
	movq	-1200(%rbp), %rax	# p, tmp3738
	movzbl	(%rax), %eax	# *p_157, D.28896
	cmpb	$10, %al	#, D.28896
	je	.L2081	#,
	movq	-1200(%rbp), %rax	# p, tmp3739
	movzbl	(%rax), %eax	# *p_157, D.28896
	cmpb	$13, %al	#, D.28896
	je	.L2081	#,
	movq	-1200(%rbp), %rax	# p, tmp3740
	movzbl	(%rax), %eax	# *p_157, D.28896
	cmpb	$12, %al	#, D.28896
	je	.L2081	#,
	.loc 1 5079 0 is_stmt 1
	movl	%r13d, %eax	# tmp, tmp.1790
	leal	1(%rax), %r13d	#, tmp
	cltq
	leaq	(%r12,%rax), %rdx	#, D.28895
	movq	-1200(%rbp), %rax	# p, tmp3741
	movzbl	(%rax), %eax	# *p_157, D.28896
	movb	%al, (%rdx)	# D.28896, *_4003
	.loc 1 5080 0
	movq	-1200(%rbp), %rax	# p, tmp3742
	movzbl	(%rax), %eax	# *p_157, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	movl	%eax, %esi	# D.28894,
	movl	$.LC149, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.28895
	jne	.L2081	#,
	.loc 1 5081 0
	movb	$1, -1442(%rbp)	#, bad_proto
.L2081:
	.loc 1 5077 0
	addq	$1, -1200(%rbp)	#, p
.L2080:
	.loc 1 5077 0 is_stmt 0 discriminator 1
	movq	-1200(%rbp), %rax	# p, tmp3743
	movzbl	(%rax), %eax	# *p_157, D.28896
	testb	%al, %al	# D.28896
	jne	.L2082	#,
	.loc 1 5084 0 is_stmt 1
	movslq	%r13d, %rax	# tmp, D.28897
	addq	%r12, %rax	# d, D.28895
	movb	$0, (%rax)	#, *_4011
	.loc 1 5085 0
	cmpb	$0, -1442(%rbp)	#, bad_proto
	je	.L2083	#,
	.loc 1 5085 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1791
	movq	80(%rax), %rax	# PL_curcop.1791_4012->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	je	.L2084	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1792
	movq	80(%rax), %rax	# PL_curcop.1792_4014->cop_warnings, D.28913
	cmpq	$32, %rax	#, D.28913
	je	.L2084	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1793
	movq	80(%rax), %rax	# PL_curcop.1793_4016->cop_warnings, D.28913
	cmpq	$16, %rax	#, D.28913
	je	.L2085	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1794
	movq	80(%rax), %rax	# PL_curcop.1794_4018->cop_warnings, D.28913
	movq	(%rax), %rax	# _4019->sv_any, D.28901
	movq	(%rax), %rax	# MEM[(struct XPV *)_4020].xpv_pv, D.28895
	addq	$7, %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4022, D.28896
	movsbl	%al, %eax	# D.28896, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	jne	.L2085	#,
.L2084:
	.loc 1 5085 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1795
	movq	80(%rax), %rax	# PL_curcop.1795_4026->cop_warnings, D.28913
	testq	%rax, %rax	# D.28913
	jne	.L2083	#,
	.loc 1 5085 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1796
	movzbl	%al, %eax	# PL_dowarn.1796, D.28894
	andl	$1, %eax	#, D.28894
	testl	%eax, %eax	# D.28894
	je	.L2083	#,
.L2085:
	.loc 1 5086 0 is_stmt 1
	movq	PL_subname(%rip), %rax	# PL_subname, PL_subname.1797
	movq	%r12, %rcx	# d,
	movq	%rax, %rdx	# PL_subname.1797,
	movl	$.LC150, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L2083:
	.loc 1 5089 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1798
	movq	(%rax), %rax	# PL_lex_stuff.1798_4032->sv_any, D.28901
	movslq	%r13d, %rdx	# tmp, D.28898
	movq	%rdx, 8(%rax)	# D.28898, MEM[(struct XPV *)_4033].xpv_cur
	.loc 1 5090 0
	movb	$1, -1443(%rbp)	#, have_proto
	.loc 1 5092 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
.LBE85:
	jmp	.L2086	#
.L2078:
	.loc 1 5095 0
	movb	$0, -1443(%rbp)	#, have_proto
.L2086:
	.loc 1 5097 0
	movzbl	(%rbx), %eax	# *s_47, D.28896
	cmpb	$58, %al	#, D.28896
	jne	.L2087	#,
	.loc 1 5097 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4039, D.28896
	cmpb	$58, %al	#, D.28896
	je	.L2087	#,
	.loc 1 5098 0 is_stmt 1
	movl	-1400(%rbp), %eax	# attrful, attrful.1799
	movl	%eax, PL_expect(%rip)	# attrful.1799, PL_expect
	jmp	.L2088	#
.L2087:
	.loc 1 5099 0
	movzbl	(%rbx), %eax	# *s_47, D.28896
	cmpb	$123, %al	#, D.28896
	je	.L2088	#,
	.loc 1 5099 0 is_stmt 0 discriminator 1
	cmpl	$206, -1388(%rbp)	#, key
	jne	.L2088	#,
	.loc 1 5100 0 is_stmt 1
	cmpb	$0, -1444(%rbp)	#, have_name
	jne	.L2089	#,
	.loc 1 5101 0
	movl	$.LC151, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L2088	#
.L2089:
	.loc 1 5102 0
	movzbl	(%rbx), %eax	# *s_47, D.28896
	cmpb	$59, %al	#, D.28896
	je	.L2088	#,
	.loc 1 5103 0
	movq	PL_subname(%rip), %rax	# PL_subname, PL_subname.1800
	movq	%rax, %rsi	# PL_subname.1800,
	movl	$.LC152, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2088:
	.loc 1 5106 0
	cmpb	$0, -1443(%rbp)	#, have_proto
	je	.L2090	#,
	.loc 1 5107 0
	movl	PL_nexttoke(%rip), %r12d	# PL_nexttoke, PL_nexttoke.1801
	.loc 1 5108 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.1802
	movq	%rax, %rdx	# PL_lex_stuff.1802,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	.loc 1 5107 0
	movslq	%r12d, %rdx	# PL_nexttoke.1801, tmp3744
	movq	%rax, PL_nextval(,%rdx,8)	# D.28903, PL_nextval[PL_nexttoke.1801_4045].opval
	.loc 1 5109 0
	movq	$0, PL_lex_stuff(%rip)	#, PL_lex_stuff
	.loc 1 5110 0
	movl	$260, %edi	#,
	call	S_force_next	#
.L2090:
	.loc 1 5112 0
	cmpb	$0, -1444(%rbp)	#, have_name
	jne	.L2091	#,
	.loc 1 5114 0
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.1804
	.loc 1 5113 0
	testq	%rax, %rax	# PL_curstash.1804
	je	.L2092	#,
	.loc 1 5113 0 is_stmt 0 discriminator 1
	movl	$.LC119, %eax	#, iftmp.1803
	jmp	.L2093	#
.L2092:
	.loc 1 5113 0 discriminator 2
	movl	$.LC120, %eax	#, iftmp.1803
.L2093:
	.loc 1 5113 0 discriminator 3
	movq	PL_subname(%rip), %rdx	# PL_subname, PL_subname.1805
	movq	%rax, %rsi	# iftmp.1803,
	movq	%rdx, %rdi	# PL_subname.1805,
	call	Perl_sv_setpv	#
	.loc 1 5115 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$269, %eax	#, D.28894
	jmp	.L2138	#
.L2091:
	.loc 1 5117 0
	movq	PL_oldbufptr(%rip), %rdx	# PL_oldbufptr, PL_oldbufptr.1806
	movq	-1208(%rbp), %rax	# tboffset, tboffset.1807
	addq	%rdx, %rax	# PL_oldbufptr.1806, D.28895
	movl	$1, %r8d	#,
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movl	$257, %esi	#,
	movq	%rax, %rdi	# D.28895,
	call	S_force_word	#
	.loc 1 5119 0
	cmpl	$127, -1388(%rbp)	#, key
	jne	.L2094	#,
	.loc 1 5120 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$297, %eax	#, D.28894
	jmp	.L2138	#
.L2094:
	.loc 1 5121 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$268, %eax	#, D.28894
	jmp	.L2138	#
.L1534:
.LBE84:
	.loc 1 5125 0
	call	S_set_csh	#
	.loc 1 5126 0
	movq	%rbx, %rdx	# s,
	movl	$2, %esi	#,
	movl	$284, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1529:
	.loc 1 5129 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$271, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1530:
	.loc 1 5132 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$346, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1531:
	.loc 1 5135 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$210, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1533:
	.loc 1 5138 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$211, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1532:
	.loc 1 5141 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$212, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1535:
	.loc 1 5144 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$213, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1542:
	.loc 1 5147 0
	movq	%rbx, %rdi	# s,
	call	S_scan_trans	#
	movq	%rax, %rbx	#, s
	.loc 1 5148 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1809
	movl	72(%rax), %edx	# PL_curcop.1809_4066->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1810
	cmpl	%eax, %edx	# PL_copline.1810, D.28900
	jae	.L2095	#,
	.loc 1 5148 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1811
	movl	72(%rax), %eax	# PL_curcop.1811_4069->cop_line, iftmp.1808
	jmp	.L2096	#
.L2095:
	.loc 1 5148 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1808
.L2096:
	.loc 1 5148 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1808, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
	jmp	.L2138	#
.L1536:
	.loc 1 5151 0 is_stmt 1
	movl	$217, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1812
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1812, PL_last_uni
	movw	$217, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2097	#,
	.loc 1 5151 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4075, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2098	#,
.L2097:
	.loc 1 5151 0 discriminator 1
	movl	$283, %eax	#, iftmp.1813
	jmp	.L2099	#
.L2098:
	movl	$285, %eax	#, iftmp.1813
.L2099:
	.loc 1 5151 0 discriminator 3
	jmp	.L2138	#
.L1537:
	.loc 1 5154 0 is_stmt 1
	movl	$277, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1814
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1814, PL_last_uni
	movw	$277, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2100	#,
	.loc 1 5154 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4082, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2101	#,
.L2100:
	.loc 1 5154 0 discriminator 1
	movl	$283, %eax	#, iftmp.1815
	jmp	.L2102	#
.L2101:
	movl	$285, %eax	#, iftmp.1815
.L2102:
	.loc 1 5154 0 discriminator 3
	jmp	.L2138	#
.L1538:
	.loc 1 5157 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$197, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1539:
	.loc 1 5160 0
	movl	$199, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1816
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1816, PL_last_uni
	movw	$199, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2103	#,
	.loc 1 5160 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4090, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2104	#,
.L2103:
	.loc 1 5160 0 discriminator 1
	movl	$283, %eax	#, iftmp.1817
	jmp	.L2105	#
.L2104:
	movl	$285, %eax	#, iftmp.1817
.L2105:
	.loc 1 5160 0 discriminator 3
	jmp	.L2138	#
.L1540:
	.loc 1 5163 0 is_stmt 1
	movl	$292, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1541:
	.loc 1 5166 0
	movl	$293, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1543:
	.loc 1 5169 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$219, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1544:
	.loc 1 5172 0
	movl	$122, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1818
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1818, PL_last_uni
	movw	$122, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2106	#,
	.loc 1 5172 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4100, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2107	#,
.L2106:
	.loc 1 5172 0 discriminator 1
	movl	$283, %eax	#, iftmp.1819
	jmp	.L2108	#
.L2107:
	movl	$285, %eax	#, iftmp.1819
.L2108:
	.loc 1 5172 0 discriminator 3
	jmp	.L2138	#
.L1545:
	.loc 1 5175 0 is_stmt 1
	movl	$120, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1820
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1820, PL_last_uni
	movw	$120, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2109	#,
	.loc 1 5175 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4107, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2110	#,
.L2109:
	.loc 1 5175 0 discriminator 1
	movl	$283, %eax	#, iftmp.1821
	jmp	.L2111	#
.L2110:
	movl	$285, %eax	#, iftmp.1821
.L2111:
	.loc 1 5175 0 discriminator 3
	jmp	.L2138	#
.L1552:
	.loc 1 5178 0 is_stmt 1
	movl	$198, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1822
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1822, PL_last_uni
	movw	$198, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2112	#,
	.loc 1 5178 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4114, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2113	#,
.L2112:
	.loc 1 5178 0 discriminator 1
	movl	$283, %eax	#, iftmp.1823
	jmp	.L2114	#
.L2113:
	movl	$285, %eax	#, iftmp.1823
.L2114:
	.loc 1 5178 0 discriminator 3
	jmp	.L2138	#
.L1553:
	.loc 1 5181 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1824
	movl	72(%rax), %eax	# PL_curcop.1824_4119->cop_line, D.28900
	movl	%eax, PL_yylval(%rip)	# D.28894, PL_yylval.ival
	.loc 1 5182 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$273, %eax	#, D.28894
	jmp	.L2138	#
.L1548:
	.loc 1 5185 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1825
	movl	72(%rax), %eax	# PL_curcop.1825_4123->cop_line, D.28900
	movl	%eax, PL_yylval(%rip)	# D.28894, PL_yylval.ival
	.loc 1 5186 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$275, %eax	#, D.28894
	jmp	.L2138	#
.L1549:
	.loc 1 5189 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$266, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1547:
	.loc 1 5192 0
	movl	$43, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1826
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1826, PL_last_uni
	movw	$43, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2115	#,
	.loc 1 5192 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4130, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2116	#,
.L2115:
	.loc 1 5192 0 discriminator 1
	movl	$283, %eax	#, iftmp.1827
	jmp	.L2117	#
.L2116:
	movl	$285, %eax	#, iftmp.1827
.L2117:
	.loc 1 5192 0 discriminator 3
	jmp	.L2138	#
.L1550:
	.loc 1 5195 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$137, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1555:
	.loc 1 5198 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$268, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1546:
	.loc 1 5201 0
	movl	$195, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1828
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1828, PL_last_uni
	movw	$195, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2118	#,
	.loc 1 5201 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4139, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2119	#,
.L2118:
	.loc 1 5201 0 discriminator 1
	movl	$283, %eax	#, iftmp.1829
	jmp	.L2120	#
.L2119:
	movl	$285, %eax	#, iftmp.1829
.L2120:
	.loc 1 5201 0 discriminator 3
	jmp	.L2138	#
.L1551:
	.loc 1 5204 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$149, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1554:
	.loc 1 5207 0
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1830
	cmpl	$3, %eax	#, PL_expect.1830
	je	.L2121	#,
	.loc 1 5208 0
	movl	$.LC153, %edi	#,
	call	Perl_yyerror	#
.L2121:
	.loc 1 5209 0
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	.loc 1 5210 0
	movzbl	(%rbx), %eax	# *s_4146, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L2122	#,
	.loc 1 5210 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_4146, D.28896
	cmpb	$57, %al	#, D.28896
	jle	.L2123	#,
.L2122:
	.loc 1 5210 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4146, D.28896
	cmpb	$118, %al	#, D.28896
	jne	.L2124	#,
	.loc 1 5210 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4150, D.28896
	cmpb	$47, %al	#, D.28896
	jle	.L2124	#,
	leaq	1(%rbx), %rax	#, D.28895
	movzbl	(%rax), %eax	# *_4152, D.28896
	cmpb	$57, %al	#, D.28896
	jg	.L2124	#,
.L2123:
	.loc 1 5211 0 is_stmt 1
	movl	$1, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_version	#
	movq	%rax, %rbx	#, s
	.loc 1 5212 0
	movzbl	(%rbx), %eax	# *s_4156, D.28896
	cmpb	$59, %al	#, D.28896
	je	.L2125	#,
	.loc 1 5212 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4158, D.28896
	cmpb	$59, %al	#, D.28896
	jne	.L2126	#,
.L2125:
	.loc 1 5213 0 is_stmt 1
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.1831
	cltq
	movq	$0, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.1831_4163].opval
	.loc 1 5214 0
	movl	$257, %edi	#,
	call	S_force_next	#
	jmp	.L2127	#
.L2126:
	.loc 1 5216 0
	movzbl	(%rbx), %eax	# *s_4158, D.28896
	cmpb	$118, %al	#, D.28896
	jne	.L2127	#,
	.loc 1 5217 0
	movl	$0, %r8d	#,
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 5218 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_version	#
	movq	%rax, %rbx	#, s
	.loc 1 5212 0
	jmp	.L2128	#
.L2127:
	jmp	.L2128	#
.L2124:
	.loc 1 5222 0
	movl	$0, %r8d	#,
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movl	$257, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_word	#
	movq	%rax, %rbx	#, s
	.loc 1 5223 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_force_version	#
	movq	%rax, %rbx	#, s
.L2128:
	.loc 1 5225 0
	movl	$1, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 5226 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$271, %eax	#, D.28894
	jmp	.L2138	#
.L1556:
	.loc 1 5229 0
	movl	$130, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1832
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1832, PL_last_uni
	movw	$130, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2129	#,
	.loc 1 5229 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4167, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2130	#,
.L2129:
	.loc 1 5229 0 discriminator 1
	movl	$283, %eax	#, iftmp.1833
	jmp	.L2131	#
.L2130:
	movl	$285, %eax	#, iftmp.1833
.L2131:
	.loc 1 5229 0 discriminator 3
	jmp	.L2138	#
.L1557:
	.loc 1 5232 0 is_stmt 1
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$112, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1562:
	.loc 1 5235 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1834
	movl	72(%rax), %eax	# PL_curcop.1834_4173->cop_line, D.28900
	movl	%eax, PL_yylval(%rip)	# D.28894, PL_yylval.ival
	.loc 1 5236 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$272, %eax	#, D.28894
	jmp	.L2138	#
.L1561:
	.loc 1 5239 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1835
	orb	$1, %ah	#, PL_hints.1836
	movl	%eax, PL_hints(%rip)	# PL_hints.1836, PL_hints
	.loc 1 5240 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$170, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1558:
	.loc 1 5243 0
	movl	$282, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1559:
	.loc 1 5246 0
	movq	%rbx, %rdx	# s,
	movl	$1, %esi	#,
	movl	$283, %edi	#,
	call	S_lop	#
	jmp	.L2138	#
.L1560:
	.loc 1 5249 0
	movl	$4, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$282, %eax	#, D.28894
	jmp	.L2138	#
.L1563:
	.loc 1 5260 0
	movl	$4, %edx	#,
	movl	$1, %esi	#,
	movl	$.LC154, %edi	#,
	call	Perl_gv_fetchpv	#
	.loc 1 5262 0
	movl	$206, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.1837
	movq	%rax, PL_last_uni(%rip)	# PL_oldbufptr.1837, PL_last_uni
	movw	$206, PL_last_lop_op(%rip)	#, PL_last_lop_op
	movzbl	(%rbx), %eax	# *s_33, D.28896
	cmpb	$40, %al	#, D.28896
	je	.L2132	#,
	.loc 1 5262 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_4185, D.28896
	cmpb	$40, %al	#, D.28896
	jne	.L2133	#,
.L2132:
	.loc 1 5262 0 discriminator 1
	movl	$283, %eax	#, iftmp.1838
	jmp	.L2134	#
.L2133:
	movl	$285, %eax	#, iftmp.1838
.L2134:
	.loc 1 5262 0 discriminator 3
	jmp	.L2138	#
.L1564:
	.loc 1 5265 0 is_stmt 1
	movl	PL_expect(%rip), %eax	# PL_expect, PL_expect.1839
	testl	%eax, %eax	# PL_expect.1839
	jne	.L2135	#,
	.loc 1 5266 0
	movl	$61, PL_yylval(%rip)	#, PL_yylval.ival
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$289, %edi	#,
	call	S_ao	#
	jmp	.L2138	#
.L2135:
	.loc 1 5267 0
	call	S_check_uni	#
	.loc 1 5268 0
	jmp	.L852	#
.L1565:
	.loc 1 5271 0
	movl	$161, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 5272 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movl	$300, %eax	#, D.28894
	jmp	.L2138	#
.L1566:
	.loc 1 5275 0
	movq	%rbx, %rdi	# s,
	call	S_scan_trans	#
	movq	%rax, %rbx	#, s
	.loc 1 5276 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1841
	movl	72(%rax), %edx	# PL_curcop.1841_4194->cop_line, D.28900
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.1842
	cmpl	%eax, %edx	# PL_copline.1842, D.28900
	jae	.L2136	#,
	.loc 1 5276 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1843
	movl	72(%rax), %eax	# PL_curcop.1843_4197->cop_line, iftmp.1840
	jmp	.L2137	#
.L2136:
	.loc 1 5276 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.1840
.L2137:
	.loc 1 5276 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.1840, PL_copline
	movl	$0, PL_expect(%rip)	#, PL_expect
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	call	S_sublex_start	#
.L2138:
	.loc 1 5279 0 is_stmt 1
	movq	-40(%rbp), %rcx	# D.28927, tmp3748
	xorq	%fs:40, %rcx	#, tmp3748
	je	.L2139	#,
	call	__stack_chk_fail	#
.L2139:
	addq	$1432, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE32:
	.size	Perl_yylex, .-Perl_yylex
	.section	.rodata
	.align 8
.LC155:
	.string	"No package name allowed for variable %s in \"our\""
.LC156:
	.string	"<=>"
.LC157:
	.string	"cmp"
	.align 8
.LC158:
	.string	"Can't use \"my %s\" in sort comparison"
	.align 8
.LC159:
	.string	"Possible unintended interpolation of %s in string"
	.text
	.type	S_pending_ident, @function
S_pending_ident:
.LFB33:
	.loc 1 5286 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$32, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 5288 0
	movl	$0, %ebx	#, tmp
	.loc 1 5290 0
	movzbl	PL_pending_ident(%rip), %eax	# PL_pending_ident, tmp149
	movb	%al, -33(%rbp)	# tmp149, pit
	.loc 1 5291 0
	movb	$0, PL_pending_ident(%rip)	#, PL_pending_ident
	.loc 1 5302 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.1844
	testl	%eax, %eax	# PL_in_my.1844
	je	.L2149	#,
	.loc 1 5303 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.1845
	cmpl	$137, %eax	#, PL_in_my.1845
	jne	.L2150	#,
	.loc 1 5304 0
	movl	$58, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.29039
	je	.L2151	#,
	.loc 1 5305 0
	movl	$PL_tokenbuf, %esi	#,
	movl	$.LC155, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.29039,
	call	Perl_yyerror	#
.L2151:
	.loc 1 5308 0
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_allocmy	#
	movl	%eax, %ebx	# D.29040, tmp
	jmp	.L2149	#
.L2150:
	.loc 1 5311 0
	movl	$58, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.29039
	je	.L2152	#,
	.loc 1 5312 0
	movl	$PL_tokenbuf, %esi	#,
	movl	$PL_no_myglob, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.29039,
	call	Perl_yyerror	#
.L2152:
	.loc 1 5314 0
	movl	$0, %esi	#,
	movl	$12, %edi	#,
	call	Perl_newOP	#
	movq	%rax, PL_yylval(%rip)	# D.29041, PL_yylval.opval
	.loc 1 5315 0
	movq	PL_yylval(%rip), %rbx	# PL_yylval.opval, D.29041
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_allocmy	#
	movq	%rax, 24(%rbx)	# D.29040, _23->op_targ
	.loc 1 5316 0
	movl	$262, %eax	#, D.29038
	jmp	.L2153	#
.L2149:
	.loc 1 5332 0
	movl	$58, %esi	#,
	movl	$PL_tokenbuf, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.29039
	jne	.L2154	#,
	.loc 1 5344 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.1846
	testl	%eax, %eax	# PL_in_my.1846
	jne	.L2155	#,
	.loc 1 5345 0
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_pad_findmy	#
	movl	%eax, %ebx	# D.29040, tmp
.L2155:
	.loc 1 5346 0
	cmpl	$-1, %ebx	#, tmp
	je	.L2154	#,
	.loc 1 5348 0
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.1847
	movl	$0, %edx	#,
	movl	%ebx, %esi	# tmp,
	movq	%rax, %rdi	# PL_comppad_name.1847,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_31, D.29043
	movl	12(%rax), %eax	# _32->sv_flags, D.29044
	testl	%eax, %eax	# D.29045
	jns	.L2156	#,
.LBB86:
	.loc 1 5350 0
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.1848
	movl	$0, %edx	#,
	movl	%ebx, %esi	# tmp,
	movq	%rax, %rdi	# PL_comppad_name.1848,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_36, D.29043
	movq	(%rax), %rax	# _37->sv_any, D.29046
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_38].xgv_stash, D.29047
	movq	(%rax), %rax	# _39->sv_any, D.29048
	movq	80(%rax), %rax	# _40->xhv_name, D.29039
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29039,
	call	Perl_newSVpv	#
	movq	%rax, -32(%rbp)	# tmp150, sym
	.loc 1 5351 0
	movq	-32(%rbp), %rax	# sym, tmp151
	movl	$2, %ecx	#,
	movl	$2, %edx	#,
	movl	$.LC113, %esi	#,
	movq	%rax, %rdi	# tmp151,
	call	Perl_sv_catpvn_flags	#
	.loc 1 5352 0
	movq	-32(%rbp), %rax	# sym, tmp152
	movl	$PL_tokenbuf+1, %esi	#,
	movq	%rax, %rdi	# tmp152,
	call	Perl_sv_catpv	#
	.loc 1 5353 0
	movq	-32(%rbp), %rax	# sym, tmp153
	movq	%rax, %rdx	# tmp153,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.29041, PL_yylval.opval
	.loc 1 5354 0
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.29041
	movb	$16, 37(%rax)	#, _44->op_private
	.loc 1 5360 0
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.29049
	.loc 1 5355 0
	cmpb	$36, %al	#, D.29049
	je	.L2157	#,
	.loc 1 5361 0
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.29049
	.loc 1 5362 0
	cmpb	$64, %al	#, D.29049
	jne	.L2158	#,
	.loc 1 5362 0 is_stmt 0 discriminator 1
	movl	$10, %eax	#, iftmp.1850
	jmp	.L2159	#
.L2158:
	.loc 1 5362 0 discriminator 2
	movl	$11, %eax	#, iftmp.1850
.L2159:
	.loc 1 5355 0 is_stmt 1 discriminator 1
	movl	%eax, %edx	# iftmp.1850, iftmp.1849
	jmp	.L2160	#
.L2157:
	movl	$4, %edx	#, iftmp.1849
.L2160:
	.loc 1 5357 0 discriminator 2
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.1852
	.loc 1 5355 0 discriminator 2
	testl	%eax, %eax	# PL_in_eval.1852
	je	.L2161	#,
	.loc 1 5355 0 is_stmt 0 discriminator 3
	movl	$10, %eax	#, iftmp.1851
	jmp	.L2162	#
.L2161:
	.loc 1 5355 0 discriminator 4
	movl	$2, %eax	#, iftmp.1851
.L2162:
	.loc 1 5355 0 discriminator 5
	movq	-32(%rbp), %rcx	# sym, tmp154
	movq	(%rcx), %rcx	# sym_42->sv_any, D.29046
	movq	(%rcx), %rcx	# MEM[(struct XPV *)_54].xpv_pv, D.29039
	movl	%eax, %esi	# iftmp.1851,
	movq	%rcx, %rdi	# D.29039,
	call	Perl_gv_fetchpv	#
	.loc 1 5363 0 is_stmt 1 discriminator 5
	movl	$257, %eax	#, D.29038
	jmp	.L2153	#
.L2156:
.LBE86:
	.loc 1 5367 0
	movzwl	PL_last_lop_op(%rip), %eax	# PL_last_lop_op, PL_last_lop_op.1853
	cmpw	$150, %ax	#, PL_last_lop_op.1853
	jne	.L2163	#,
	.loc 1 5368 0 discriminator 1
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.29049
	.loc 1 5367 0 discriminator 1
	cmpb	$36, %al	#, D.29049
	jne	.L2163	#,
	.loc 1 5369 0
	movzbl	PL_tokenbuf+1(%rip), %eax	# PL_tokenbuf, D.29049
	.loc 1 5368 0
	cmpb	$97, %al	#, D.29049
	je	.L2164	#,
	.loc 1 5369 0
	movzbl	PL_tokenbuf+1(%rip), %eax	# PL_tokenbuf, D.29049
	cmpb	$98, %al	#, D.29049
	jne	.L2163	#,
.L2164:
	.loc 1 5370 0
	movzbl	PL_tokenbuf+2(%rip), %eax	# PL_tokenbuf, D.29049
	testb	%al, %al	# D.29049
	jne	.L2163	#,
	.loc 1 5372 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.1855
	testl	%eax, %eax	# PL_in_eval.1855
	je	.L2165	#,
	.loc 1 5372 0 is_stmt 0 discriminator 1
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, iftmp.1854
	jmp	.L2166	#
.L2165:
	.loc 1 5372 0 discriminator 2
	movq	PL_linestart(%rip), %rax	# PL_linestart, iftmp.1854
.L2166:
	.loc 1 5372 0 discriminator 3
	movq	%rax, %r12	# iftmp.1854, d
	jmp	.L2167	#
.L2170:
	.loc 1 5376 0 is_stmt 1
	movl	$3, %edx	#,
	movl	$.LC156, %esi	#,
	movq	%r12, %rdi	# d,
	call	strncmp	#
	testl	%eax, %eax	# D.29038
	je	.L2168	#,
	.loc 1 5376 0 is_stmt 0 discriminator 1
	movl	$3, %edx	#,
	movl	$.LC157, %esi	#,
	movq	%r12, %rdi	# d,
	call	strncmp	#
	testl	%eax, %eax	# D.29038
	jne	.L2169	#,
.L2168:
	.loc 1 5377 0 is_stmt 1
	movl	$PL_tokenbuf, %esi	#,
	movl	$.LC158, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2169:
	.loc 1 5374 0
	addq	$1, %r12	#, d
.L2167:
	.loc 1 5373 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1856
	.loc 1 5372 0 discriminator 1
	cmpq	%rax, %r12	# PL_bufend.1856, d
	jae	.L2163	#,
	.loc 1 5373 0
	movzbl	(%r12), %eax	# *d_1, D.29049
	cmpb	$10, %al	#, D.29049
	jne	.L2170	#,
.L2163:
	.loc 1 5383 0
	movl	$0, %esi	#,
	movl	$12, %edi	#,
	call	Perl_newOP	#
	movq	%rax, PL_yylval(%rip)	# D.29041, PL_yylval.opval
	.loc 1 5384 0
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.29041
	movslq	%ebx, %rdx	# tmp, D.29040
	movq	%rdx, 24(%rax)	# D.29040, _72->op_targ
	.loc 1 5385 0
	movl	$262, %eax	#, D.29038
	jmp	.L2153	#
.L2154:
	.loc 1 5394 0
	cmpb	$64, -33(%rbp)	#, pit
	jne	.L2171	#,
	.loc 1 5394 0 is_stmt 0 discriminator 1
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.1857
	cmpl	$10, %eax	#, PL_lex_state.1857
	je	.L2171	#,
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.1858
	testl	%eax, %eax	# PL_lex_brackets.1858
	jne	.L2171	#,
.LBB87:
	.loc 1 5395 0 is_stmt 1
	movl	$10, %edx	#,
	movl	$0, %esi	#,
	movl	$PL_tokenbuf+1, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -24(%rbp)	# tmp155, gv
	.loc 1 5396 0
	cmpq	$0, -24(%rbp)	#, gv
	je	.L2172	#,
	.loc 1 5396 0 is_stmt 0 discriminator 1
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.29049
	cmpb	$64, %al	#, D.29049
	jne	.L2173	#,
	.loc 1 5396 0 discriminator 2
	movq	-24(%rbp), %rax	# gv, tmp156
	movq	(%rax), %rax	# gv_77->sv_any, D.29050
	movq	56(%rax), %rax	# _79->xgv_gp, D.29051
	movq	32(%rax), %rax	# _80->gp_av, D.29052
	testq	%rax, %rax	# D.29052
	je	.L2172	#,
	jmp	.L2171	#
.L2173:
	.loc 1 5396 0 discriminator 3
	movq	-24(%rbp), %rax	# gv, tmp157
	movq	(%rax), %rax	# gv_77->sv_any, D.29050
	movq	56(%rax), %rax	# _82->xgv_gp, D.29051
	movq	40(%rax), %rax	# _83->gp_hv, D.29047
	testq	%rax, %rax	# D.29047
	jne	.L2171	#,
.L2172:
	.loc 1 5397 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1859
	movq	80(%rax), %rax	# PL_curcop.1859_85->cop_warnings, D.29043
	testq	%rax, %rax	# D.29043
	je	.L2174	#,
	.loc 1 5397 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1860
	movq	80(%rax), %rax	# PL_curcop.1860_87->cop_warnings, D.29043
	cmpq	$32, %rax	#, D.29043
	je	.L2174	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1861
	movq	80(%rax), %rax	# PL_curcop.1861_89->cop_warnings, D.29043
	cmpq	$16, %rax	#, D.29043
	je	.L2175	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1862
	movq	80(%rax), %rax	# PL_curcop.1862_91->cop_warnings, D.29043
	movq	(%rax), %rax	# _92->sv_any, D.29046
	movq	(%rax), %rax	# MEM[(struct XPV *)_93].xpv_pv, D.29039
	addq	$7, %rax	#, D.29039
	movzbl	(%rax), %eax	# *_95, D.29049
	movsbl	%al, %eax	# D.29049, D.29038
	andl	$4, %eax	#, D.29038
	testl	%eax, %eax	# D.29038
	jne	.L2175	#,
.L2174:
	.loc 1 5397 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1863
	movq	80(%rax), %rax	# PL_curcop.1863_99->cop_warnings, D.29043
	testq	%rax, %rax	# D.29043
	jne	.L2171	#,
	.loc 1 5397 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1864
	movzbl	%al, %eax	# PL_dowarn.1864, D.29038
	andl	$1, %eax	#, D.29038
	testl	%eax, %eax	# D.29038
	je	.L2171	#,
.L2175:
	.loc 1 5400 0 is_stmt 1
	movl	$PL_tokenbuf, %edx	#,
	movl	$.LC159, %esi	#,
	movl	$29, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L2171:
.LBE87:
	.loc 1 5407 0
	movl	$0, %esi	#,
	movl	$PL_tokenbuf+1, %edi	#,
	call	Perl_newSVpv	#
	movq	%rax, %rdx	# D.29043,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, PL_yylval(%rip)	# D.29041, PL_yylval.opval
	.loc 1 5408 0
	movq	PL_yylval(%rip), %rax	# PL_yylval.opval, D.29041
	movb	$16, 37(%rax)	#, _106->op_private
	.loc 1 5410 0
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.29049
	.loc 1 5409 0
	cmpb	$36, %al	#, D.29049
	je	.L2176	#,
	.loc 1 5411 0
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, D.29049
	.loc 1 5412 0
	cmpb	$64, %al	#, D.29049
	jne	.L2177	#,
	.loc 1 5412 0 is_stmt 0 discriminator 1
	movl	$10, %eax	#, iftmp.1866
	jmp	.L2178	#
.L2177:
	.loc 1 5412 0 discriminator 2
	movl	$11, %eax	#, iftmp.1866
.L2178:
	.loc 1 5409 0 is_stmt 1 discriminator 1
	movl	%eax, %edx	# iftmp.1866, iftmp.1865
	jmp	.L2179	#
.L2176:
	movl	$4, %edx	#, iftmp.1865
.L2179:
	.loc 1 5409 0 is_stmt 0 discriminator 2
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.1868
	testl	%eax, %eax	# PL_in_eval.1868
	je	.L2180	#,
	.loc 1 5409 0 discriminator 3
	movl	$10, %eax	#, iftmp.1867
	jmp	.L2181	#
.L2180:
	.loc 1 5409 0 discriminator 4
	movl	$1, %eax	#, iftmp.1867
.L2181:
	.loc 1 5409 0 discriminator 5
	movl	%eax, %esi	# iftmp.1867,
	movl	$PL_tokenbuf+1, %edi	#,
	call	Perl_gv_fetchpv	#
	.loc 1 5413 0 is_stmt 1 discriminator 5
	movl	$257, %eax	#, D.29038
.L2153:
	.loc 1 5414 0
	addq	$32, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE33:
	.size	S_pending_ident, .-S_pending_ident
	.section	.rodata
.LC160:
	.string	"elseif should be elsif"
	.text
	.globl	Perl_keyword
	.type	Perl_keyword, @function
Perl_keyword:
.LFB34:
	.loc 1 5422 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# name, name
	movl	%esi, -12(%rbp)	# len, len
	.loc 1 5423 0
	cmpl	$16, -12(%rbp)	#, len
	ja	.L2888	#,
	movl	-12(%rbp), %eax	# len, tmp2033
	movq	.L2185(,%rax,8), %rax	#, tmp2034
	jmp	*%rax	# tmp2034
	.section	.rodata
	.align 8
	.align 4
.L2185:
	.quad	.L2888
	.quad	.L2184
	.quad	.L2186
	.quad	.L2187
	.quad	.L2188
	.quad	.L2189
	.quad	.L2190
	.quad	.L2191
	.quad	.L2192
	.quad	.L2193
	.quad	.L2194
	.quad	.L2195
	.quad	.L2196
	.quad	.L2197
	.quad	.L2198
	.quad	.L2888
	.quad	.L2199
	.text
.L2184:
	.loc 1 5426 0
	movq	-8(%rbp), %rax	# name, tmp2035
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$109, %eax	#, tmp2036
	cmpl	$12, %eax	#, tmp2036
	ja	.L2889	#,
	movl	%eax, %eax	# tmp2036, tmp2037
	movq	.L2202(,%rax,8), %rax	#, tmp2038
	jmp	*%rax	# tmp2038
	.section	.rodata
	.align 8
	.align 4
.L2202:
	.quad	.L2201
	.quad	.L2889
	.quad	.L2889
	.quad	.L2889
	.quad	.L2203
	.quad	.L2889
	.quad	.L2204
	.quad	.L2889
	.quad	.L2889
	.quad	.L2889
	.quad	.L2889
	.quad	.L2205
	.quad	.L2206
	.text
.L2201:
	.loc 1 5430 0
	movl	$120, %eax	#, D.29058
	jmp	.L2207	#
.L2203:
	.loc 1 5435 0
	movl	$147, %eax	#, D.29058
	jmp	.L2207	#
.L2204:
	.loc 1 5440 0
	movl	$170, %eax	#, D.29058
	jmp	.L2207	#
.L2205:
	.loc 1 5445 0
	movl	$-243, %eax	#, D.29058
	jmp	.L2207	#
.L2206:
	.loc 1 5450 0
	movl	$245, %eax	#, D.29058
	jmp	.L2207	#
.L2186:
	.loc 1 5458 0
	movq	-8(%rbp), %rax	# name, tmp2039
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$100, %eax	#, tmp2040
	cmpl	$17, %eax	#, tmp2040
	ja	.L2890	#,
	movl	%eax, %eax	# tmp2040, tmp2041
	movq	.L2211(,%rax,8), %rax	#, tmp2042
	jmp	*%rax	# tmp2042
	.section	.rodata
	.align 8
	.align 4
.L2211:
	.quad	.L2210
	.quad	.L2212
	.quad	.L2890
	.quad	.L2213
	.quad	.L2890
	.quad	.L2214
	.quad	.L2890
	.quad	.L2890
	.quad	.L2215
	.quad	.L2216
	.quad	.L2217
	.quad	.L2218
	.quad	.L2890
	.quad	.L2219
	.quad	.L2890
	.quad	.L2890
	.quad	.L2220
	.quad	.L2221
	.text
.L2210:
	.loc 1 5461 0
	movq	-8(%rbp), %rax	# name, tmp2043
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_13, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2222	#,
	.loc 1 5463 0
	movl	$41, %eax	#, D.29058
	jmp	.L2207	#
.L2222:
	.loc 1 5466 0
	jmp	.L2208	#
.L2212:
	.loc 1 5469 0
	movq	-8(%rbp), %rax	# name, tmp2044
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_16, D.29059
	cmpb	$113, %al	#, D.29059
	jne	.L2223	#,
	.loc 1 5471 0
	movl	$-53, %eax	#, D.29058
	jmp	.L2207	#
.L2223:
	.loc 1 5474 0
	jmp	.L2208	#
.L2213:
	.loc 1 5477 0
	movq	-8(%rbp), %rax	# name, tmp2045
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_19, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2225	#,
	cmpl	$116, %eax	#, D.29060
	je	.L2226	#,
	.loc 1 5490 0
	jmp	.L2208	#
.L2225:
	.loc 1 5481 0
	movl	$-67, %eax	#, D.29058
	jmp	.L2207	#
.L2226:
	.loc 1 5486 0
	movl	$-98, %eax	#, D.29058
	jmp	.L2207	#
.L2214:
	.loc 1 5494 0
	movq	-8(%rbp), %rax	# name, tmp2046
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_24, D.29059
	cmpb	$102, %al	#, D.29059
	jne	.L2227	#,
	.loc 1 5496 0
	movl	$100, %eax	#, D.29058
	jmp	.L2207	#
.L2227:
	.loc 1 5499 0
	jmp	.L2208	#
.L2215:
	.loc 1 5502 0
	movq	-8(%rbp), %rax	# name, tmp2047
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_27, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2229	#,
	cmpl	$116, %eax	#, D.29060
	je	.L2230	#,
	cmpl	$99, %eax	#, D.29060
	je	.L2231	#,
	.loc 1 5520 0
	jmp	.L2208	#
.L2231:
	.loc 1 5506 0
	movl	$-108, %eax	#, D.29058
	jmp	.L2207	#
.L2229:
	.loc 1 5511 0
	movl	$-110, %eax	#, D.29058
	jmp	.L2207	#
.L2230:
	.loc 1 5516 0
	movl	$-119, %eax	#, D.29058
	jmp	.L2207	#
.L2216:
	.loc 1 5524 0
	movq	-8(%rbp), %rax	# name, tmp2048
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_33, D.29059
	cmpb	$121, %al	#, D.29059
	jne	.L2232	#,
	.loc 1 5526 0
	movl	$127, %eax	#, D.29058
	jmp	.L2207	#
.L2232:
	.loc 1 5529 0
	jmp	.L2208	#
.L2217:
	.loc 1 5532 0
	movq	-8(%rbp), %rax	# name, tmp2049
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_36, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2234	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2235	#,
	.loc 1 5545 0
	jmp	.L2208	#
.L2234:
	.loc 1 5536 0
	movl	$-128, %eax	#, D.29058
	jmp	.L2207	#
.L2235:
	.loc 1 5541 0
	movl	$130, %eax	#, D.29058
	jmp	.L2207	#
.L2218:
	.loc 1 5549 0
	movq	-8(%rbp), %rax	# name, tmp2050
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_41, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2236	#,
	.loc 1 5551 0
	movl	$-135, %eax	#, D.29058
	jmp	.L2207	#
.L2236:
	.loc 1 5554 0
	jmp	.L2208	#
.L2219:
	.loc 1 5557 0
	movq	-8(%rbp), %rax	# name, tmp2051
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_44, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$114, %eax	#, D.29060
	je	.L2238	#,
	cmpl	$114, %eax	#, D.29060
	jg	.L2239	#,
	cmpl	$113, %eax	#, D.29060
	je	.L2240	#,
	.loc 1 5580 0
	jmp	.L2208	#
.L2239:
	.loc 1 5557 0
	cmpl	$119, %eax	#, D.29060
	je	.L2241	#,
	cmpl	$120, %eax	#, D.29060
	je	.L2242	#,
	.loc 1 5580 0
	jmp	.L2208	#
.L2240:
	.loc 1 5561 0
	movl	$148, %eax	#, D.29058
	jmp	.L2207	#
.L2238:
	.loc 1 5566 0
	movl	$149, %eax	#, D.29058
	jmp	.L2207	#
.L2241:
	.loc 1 5571 0
	movl	$151, %eax	#, D.29058
	jmp	.L2207	#
.L2242:
	.loc 1 5576 0
	movl	$152, %eax	#, D.29058
	jmp	.L2207	#
.L2220:
	.loc 1 5584 0
	movq	-8(%rbp), %rax	# name, tmp2052
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_51, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2243	#,
	.loc 1 5586 0
	movl	$221, %eax	#, D.29058
	jmp	.L2207	#
.L2243:
	.loc 1 5589 0
	jmp	.L2208	#
.L2221:
	.loc 1 5592 0
	movq	-8(%rbp), %rax	# name, tmp2053
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_54, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2244	#,
	.loc 1 5594 0
	movl	$-223, %eax	#, D.29058
	jmp	.L2207	#
.L2244:
	.loc 1 5597 0
	jmp	.L2208	#
.L2187:
	.loc 1 5604 0
	movq	-8(%rbp), %rax	# name, tmp2054
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$69, %eax	#, tmp2055
	cmpl	$51, %eax	#, tmp2055
	ja	.L2891	#,
	movl	%eax, %eax	# tmp2055, tmp2056
	movq	.L2247(,%rax,8), %rax	#, tmp2057
	jmp	*%rax	# tmp2057
	.section	.rodata
	.align 8
	.align 4
.L2247:
	.quad	.L2246
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2891
	.quad	.L2248
	.quad	.L2891
	.quad	.L2249
	.quad	.L2250
	.quad	.L2251
	.quad	.L2252
	.quad	.L2891
	.quad	.L2253
	.quad	.L2254
	.quad	.L2891
	.quad	.L2891
	.quad	.L2255
	.quad	.L2256
	.quad	.L2257
	.quad	.L2258
	.quad	.L2259
	.quad	.L2891
	.quad	.L2260
	.quad	.L2261
	.quad	.L2262
	.quad	.L2263
	.quad	.L2264
	.quad	.L2891
	.quad	.L2265
	.text
.L2246:
	.loc 1 5607 0
	movq	-8(%rbp), %rax	# name, tmp2058
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_59, D.29059
	cmpb	$78, %al	#, D.29059
	jne	.L2266	#,
	.loc 1 5608 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2059
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_61, D.29059
	.loc 1 5607 0 discriminator 1
	cmpb	$68, %al	#, D.29059
	jne	.L2266	#,
	.loc 1 5610 0
	movl	$10, %eax	#, D.29058
	jmp	.L2207	#
.L2266:
	.loc 1 5613 0
	jmp	.L2208	#
.L2248:
	.loc 1 5616 0
	movq	-8(%rbp), %rax	# name, tmp2060
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_64, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$98, %eax	#, D.29060
	je	.L2268	#,
	cmpl	$110, %eax	#, D.29060
	je	.L2269	#,
	.loc 1 5635 0
	jmp	.L2208	#
.L2268:
	.loc 1 5619 0
	movq	-8(%rbp), %rax	# name, tmp2061
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_67, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2270	#,
	.loc 1 5621 0
	movl	$-13, %eax	#, D.29058
	jmp	.L2207	#
.L2270:
	.loc 1 5624 0
	jmp	.L2208	#
.L2269:
	.loc 1 5627 0
	movq	-8(%rbp), %rax	# name, tmp2062
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_70, D.29059
	cmpb	$100, %al	#, D.29059
	jne	.L2271	#,
	.loc 1 5629 0
	movl	$-16, %eax	#, D.29058
	jmp	.L2207	#
.L2271:
	.loc 1 5632 0
	jmp	.L2208	#
.L2249:
	.loc 1 5639 0
	movq	-8(%rbp), %rax	# name, tmp2063
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_73, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$109, %eax	#, D.29060
	je	.L2273	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2274	#,
	cmpl	$104, %eax	#, D.29060
	je	.L2275	#,
	.loc 1 5666 0
	jmp	.L2208	#
.L2275:
	.loc 1 5642 0
	movq	-8(%rbp), %rax	# name, tmp2064
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_76, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2276	#,
	.loc 1 5644 0
	movl	$-27, %eax	#, D.29058
	jmp	.L2207	#
.L2276:
	.loc 1 5647 0
	jmp	.L2208	#
.L2273:
	.loc 1 5650 0
	movq	-8(%rbp), %rax	# name, tmp2065
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_79, D.29059
	cmpb	$112, %al	#, D.29059
	jne	.L2277	#,
	.loc 1 5652 0
	movl	$-31, %eax	#, D.29058
	jmp	.L2207	#
.L2277:
	.loc 1 5655 0
	jmp	.L2208	#
.L2274:
	.loc 1 5658 0
	movq	-8(%rbp), %rax	# name, tmp2066
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_82, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2278	#,
	.loc 1 5660 0
	movl	$-34, %eax	#, D.29058
	jmp	.L2207	#
.L2278:
	.loc 1 5663 0
	jmp	.L2208	#
.L2250:
	.loc 1 5670 0
	movq	-8(%rbp), %rax	# name, tmp2067
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_85, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2279	#,
	.loc 1 5671 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2068
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_87, D.29059
	.loc 1 5670 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2279	#,
	.loc 1 5673 0
	movl	$-40, %eax	#, D.29058
	jmp	.L2207	#
.L2279:
	.loc 1 5676 0
	jmp	.L2208	#
.L2251:
	.loc 1 5679 0
	movq	-8(%rbp), %rax	# name, tmp2069
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_90, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$111, %eax	#, D.29060
	je	.L2281	#,
	cmpl	$120, %eax	#, D.29060
	je	.L2282	#,
	.loc 1 5698 0
	jmp	.L2208	#
.L2281:
	.loc 1 5682 0
	movq	-8(%rbp), %rax	# name, tmp2070
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_93, D.29059
	cmpb	$102, %al	#, D.29059
	jne	.L2283	#,
	.loc 1 5684 0
	movl	$-52, %eax	#, D.29058
	jmp	.L2207	#
.L2283:
	.loc 1 5687 0
	jmp	.L2208	#
.L2282:
	.loc 1 5690 0
	movq	-8(%rbp), %rax	# name, tmp2071
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_96, D.29059
	cmpb	$112, %al	#, D.29059
	jne	.L2284	#,
	.loc 1 5692 0
	movl	$-58, %eax	#, D.29058
	jmp	.L2207	#
.L2284:
	.loc 1 5695 0
	jmp	.L2208	#
.L2252:
	.loc 1 5702 0
	movq	-8(%rbp), %rax	# name, tmp2072
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_99, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2285	#,
	.loc 1 5703 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2073
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_101, D.29059
	.loc 1 5702 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2285	#,
	.loc 1 5705 0
	movl	$62, %eax	#, D.29058
	jmp	.L2207	#
.L2285:
	.loc 1 5708 0
	jmp	.L2208	#
.L2253:
	.loc 1 5711 0
	movq	-8(%rbp), %rax	# name, tmp2074
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_104, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2286	#,
	.loc 1 5712 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2075
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_106, D.29059
	.loc 1 5711 0 discriminator 1
	cmpb	$120, %al	#, D.29059
	jne	.L2286	#,
	.loc 1 5714 0
	movl	$-99, %eax	#, D.29058
	jmp	.L2207	#
.L2286:
	.loc 1 5717 0
	jmp	.L2208	#
.L2254:
	.loc 1 5720 0
	movq	-8(%rbp), %rax	# name, tmp2076
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_109, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2287	#,
	.loc 1 5721 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2077
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_111, D.29059
	.loc 1 5720 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2287	#,
	.loc 1 5723 0
	movl	$-102, %eax	#, D.29058
	jmp	.L2207	#
.L2287:
	.loc 1 5726 0
	jmp	.L2208	#
.L2255:
	.loc 1 5729 0
	movq	-8(%rbp), %rax	# name, tmp2078
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_114, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2288	#,
	.loc 1 5730 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2079
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_116, D.29059
	.loc 1 5729 0 discriminator 1
	cmpb	$103, %al	#, D.29059
	jne	.L2288	#,
	.loc 1 5732 0
	movl	$-117, %eax	#, D.29058
	jmp	.L2207	#
.L2288:
	.loc 1 5735 0
	jmp	.L2208	#
.L2256:
	.loc 1 5738 0
	movq	-8(%rbp), %rax	# name, tmp2080
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_119, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2289	#,
	.loc 1 5739 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2081
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_121, D.29059
	.loc 1 5738 0 discriminator 1
	cmpb	$112, %al	#, D.29059
	jne	.L2289	#,
	.loc 1 5741 0
	movl	$121, %eax	#, D.29058
	jmp	.L2207	#
.L2289:
	.loc 1 5744 0
	jmp	.L2208	#
.L2257:
	.loc 1 5747 0
	movq	-8(%rbp), %rax	# name, tmp2082
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_124, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2290	#,
	.loc 1 5748 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2083
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_126, D.29059
	.loc 1 5747 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2290	#,
	.loc 1 5750 0
	movl	$-131, %eax	#, D.29058
	jmp	.L2207	#
.L2290:
	.loc 1 5753 0
	jmp	.L2208	#
.L2258:
	.loc 1 5756 0
	movq	-8(%rbp), %rax	# name, tmp2084
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_129, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$114, %eax	#, D.29060
	je	.L2292	#,
	cmpl	$117, %eax	#, D.29060
	je	.L2293	#,
	cmpl	$99, %eax	#, D.29060
	je	.L2294	#,
	.loc 1 5783 0
	jmp	.L2208	#
.L2294:
	.loc 1 5759 0
	movq	-8(%rbp), %rax	# name, tmp2085
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_132, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2295	#,
	.loc 1 5761 0
	movl	$-132, %eax	#, D.29058
	jmp	.L2207	#
.L2295:
	.loc 1 5764 0
	jmp	.L2208	#
.L2292:
	.loc 1 5767 0
	movq	-8(%rbp), %rax	# name, tmp2086
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_135, D.29059
	cmpb	$100, %al	#, D.29059
	jne	.L2296	#,
	.loc 1 5769 0
	movl	$-136, %eax	#, D.29058
	jmp	.L2207	#
.L2296:
	.loc 1 5772 0
	jmp	.L2208	#
.L2293:
	.loc 1 5775 0
	movq	-8(%rbp), %rax	# name, tmp2087
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_138, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2297	#,
	.loc 1 5777 0
	movl	$137, %eax	#, D.29058
	jmp	.L2207	#
.L2297:
	.loc 1 5780 0
	jmp	.L2208	#
.L2259:
	.loc 1 5787 0
	movq	-8(%rbp), %rax	# name, tmp2088
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_141, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2298	#,
	.loc 1 5789 0
	movq	-8(%rbp), %rax	# name, tmp2089
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_143, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$112, %eax	#, D.29060
	je	.L2300	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2301	#,
	.loc 1 5802 0
	jmp	.L2208	#
.L2300:
	.loc 1 5793 0
	movl	$-141, %eax	#, D.29058
	jmp	.L2207	#
.L2301:
	.loc 1 5798 0
	movl	$142, %eax	#, D.29058
	jmp	.L2207	#
.L2298:
	.loc 1 5806 0
	jmp	.L2208	#
.L2260:
	.loc 1 5809 0
	movq	-8(%rbp), %rax	# name, tmp2090
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_148, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2302	#,
	.loc 1 5810 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2091
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_150, D.29059
	.loc 1 5809 0 discriminator 1
	cmpb	$102, %al	#, D.29059
	jne	.L2302	#,
	.loc 1 5812 0
	movl	$-161, %eax	#, D.29058
	jmp	.L2207	#
.L2302:
	.loc 1 5815 0
	jmp	.L2208	#
.L2261:
	.loc 1 5818 0
	movq	-8(%rbp), %rax	# name, tmp2092
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_153, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$105, %eax	#, D.29060
	je	.L2304	#,
	cmpl	$117, %eax	#, D.29060
	je	.L2305	#,
	.loc 1 5837 0
	jmp	.L2208	#
.L2304:
	.loc 1 5821 0
	movq	-8(%rbp), %rax	# name, tmp2093
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_156, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2306	#,
	.loc 1 5823 0
	movl	$-194, %eax	#, D.29058
	jmp	.L2207	#
.L2306:
	.loc 1 5826 0
	jmp	.L2208	#
.L2305:
	.loc 1 5829 0
	movq	-8(%rbp), %rax	# name, tmp2094
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_159, D.29059
	cmpb	$98, %al	#, D.29059
	jne	.L2307	#,
	.loc 1 5831 0
	movl	$206, %eax	#, D.29058
	jmp	.L2207	#
.L2307:
	.loc 1 5834 0
	jmp	.L2208	#
.L2262:
	.loc 1 5841 0
	movq	-8(%rbp), %rax	# name, tmp2095
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_162, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2308	#,
	.loc 1 5842 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2096
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_164, D.29059
	.loc 1 5841 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2308	#,
	.loc 1 5844 0
	movl	$217, %eax	#, D.29058
	jmp	.L2207	#
.L2308:
	.loc 1 5847 0
	jmp	.L2208	#
.L2263:
	.loc 1 5850 0
	movq	-8(%rbp), %rax	# name, tmp2097
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_167, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2309	#,
	.loc 1 5851 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2098
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_169, D.29059
	.loc 1 5850 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2309	#,
	.loc 1 5853 0
	movl	$233, %eax	#, D.29058
	jmp	.L2207	#
.L2309:
	.loc 1 5856 0
	jmp	.L2208	#
.L2264:
	.loc 1 5859 0
	movq	-8(%rbp), %rax	# name, tmp2099
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_172, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2310	#,
	.loc 1 5860 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2100
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_174, D.29059
	.loc 1 5859 0 discriminator 1
	cmpb	$99, %al	#, D.29059
	jne	.L2310	#,
	.loc 1 5862 0
	movl	$-236, %eax	#, D.29058
	jmp	.L2207	#
.L2310:
	.loc 1 5865 0
	jmp	.L2208	#
.L2265:
	.loc 1 5868 0
	movq	-8(%rbp), %rax	# name, tmp2101
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_177, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2311	#,
	.loc 1 5869 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2102
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_179, D.29059
	.loc 1 5868 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2311	#,
	.loc 1 5871 0
	movl	$-244, %eax	#, D.29058
	jmp	.L2207	#
.L2311:
	.loc 1 5874 0
	jmp	.L2208	#
.L2188:
	.loc 1 5881 0
	movq	-8(%rbp), %rax	# name, tmp2103
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$67, %eax	#, tmp2104
	cmpl	$52, %eax	#, tmp2104
	ja	.L2892	#,
	movl	%eax, %eax	# tmp2104, tmp2105
	movq	.L2314(,%rax,8), %rax	#, tmp2106
	jmp	*%rax	# tmp2106
	.section	.rodata
	.align 8
	.align 4
.L2314:
	.quad	.L2313
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2315
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2892
	.quad	.L2316
	.quad	.L2317
	.quad	.L2318
	.quad	.L2319
	.quad	.L2320
	.quad	.L2321
	.quad	.L2892
	.quad	.L2892
	.quad	.L2322
	.quad	.L2323
	.quad	.L2324
	.quad	.L2892
	.quad	.L2325
	.quad	.L2326
	.quad	.L2327
	.quad	.L2892
	.quad	.L2328
	.quad	.L2329
	.quad	.L2330
	.quad	.L2892
	.quad	.L2892
	.quad	.L2331
	.text
.L2313:
	.loc 1 5884 0
	movq	-8(%rbp), %rax	# name, tmp2107
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_184, D.29059
	cmpb	$79, %al	#, D.29059
	jne	.L2332	#,
	.loc 1 5885 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2108
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_186, D.29059
	.loc 1 5884 0 discriminator 1
	cmpb	$82, %al	#, D.29059
	jne	.L2332	#,
	.loc 1 5886 0
	movq	-8(%rbp), %rax	# name, tmp2109
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_188, D.29059
	.loc 1 5885 0
	cmpb	$69, %al	#, D.29059
	jne	.L2332	#,
	.loc 1 5888 0
	movl	$-8, %eax	#, D.29058
	jmp	.L2207	#
.L2332:
	.loc 1 5891 0
	jmp	.L2208	#
.L2315:
	.loc 1 5894 0
	movq	-8(%rbp), %rax	# name, tmp2110
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_191, D.29059
	cmpb	$78, %al	#, D.29059
	jne	.L2333	#,
	.loc 1 5895 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2111
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_193, D.29059
	.loc 1 5894 0 discriminator 1
	cmpb	$73, %al	#, D.29059
	jne	.L2333	#,
	.loc 1 5896 0
	movq	-8(%rbp), %rax	# name, tmp2112
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_195, D.29059
	.loc 1 5895 0
	cmpb	$84, %al	#, D.29059
	jne	.L2333	#,
	.loc 1 5898 0
	movl	$11, %eax	#, D.29058
	jmp	.L2207	#
.L2333:
	.loc 1 5901 0
	jmp	.L2208	#
.L2316:
	.loc 1 5904 0
	movq	-8(%rbp), %rax	# name, tmp2113
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_198, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2334	#,
	.loc 1 5905 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2114
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_200, D.29059
	.loc 1 5904 0 discriminator 1
	cmpb	$110, %al	#, D.29059
	jne	.L2334	#,
	.loc 1 5906 0
	movq	-8(%rbp), %rax	# name, tmp2115
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_202, D.29059
	.loc 1 5905 0
	cmpb	$100, %al	#, D.29059
	jne	.L2334	#,
	.loc 1 5908 0
	movl	$-18, %eax	#, D.29058
	jmp	.L2207	#
.L2334:
	.loc 1 5911 0
	jmp	.L2208	#
.L2317:
	.loc 1 5914 0
	movq	-8(%rbp), %rax	# name, tmp2116
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_205, D.29059
	cmpb	$104, %al	#, D.29059
	jne	.L2335	#,
	.loc 1 5915 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2117
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_207, D.29059
	.loc 1 5914 0 discriminator 1
	cmpb	$111, %al	#, D.29059
	jne	.L2335	#,
	.loc 1 5916 0
	movq	-8(%rbp), %rax	# name, tmp2118
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_209, D.29059
	.loc 1 5915 0
	cmpb	$112, %al	#, D.29059
	jne	.L2335	#,
	.loc 1 5918 0
	movl	$-25, %eax	#, D.29058
	jmp	.L2207	#
.L2335:
	.loc 1 5921 0
	jmp	.L2208	#
.L2318:
	.loc 1 5924 0
	movq	-8(%rbp), %rax	# name, tmp2119
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_212, D.29059
	cmpb	$117, %al	#, D.29059
	jne	.L2336	#,
	.loc 1 5925 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2120
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_214, D.29059
	.loc 1 5924 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2336	#,
	.loc 1 5926 0
	movq	-8(%rbp), %rax	# name, tmp2121
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_216, D.29059
	.loc 1 5925 0
	cmpb	$112, %al	#, D.29059
	jne	.L2336	#,
	.loc 1 5928 0
	movl	$-42, %eax	#, D.29058
	jmp	.L2207	#
.L2336:
	.loc 1 5931 0
	jmp	.L2208	#
.L2319:
	.loc 1 5934 0
	movq	-8(%rbp), %rax	# name, tmp2122
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_219, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$108, %eax	#, D.29060
	je	.L2338	#,
	cmpl	$108, %eax	#, D.29060
	jg	.L2339	#,
	cmpl	$97, %eax	#, D.29060
	je	.L2340	#,
	.loc 1 5987 0
	jmp	.L2208	#
.L2339:
	.loc 1 5934 0
	cmpl	$118, %eax	#, D.29060
	je	.L2341	#,
	cmpl	$120, %eax	#, D.29060
	je	.L2342	#,
	.loc 1 5987 0
	jmp	.L2208	#
.L2340:
	.loc 1 5937 0
	movq	-8(%rbp), %rax	# name, tmp2123
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_222, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2343	#,
	.loc 1 5938 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2124
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_224, D.29059
	.loc 1 5937 0 discriminator 1
	cmpb	$104, %al	#, D.29059
	jne	.L2343	#,
	.loc 1 5940 0
	movl	$-43, %eax	#, D.29058
	jmp	.L2207	#
.L2343:
	.loc 1 5943 0
	jmp	.L2208	#
.L2338:
	.loc 1 5946 0
	movq	-8(%rbp), %rax	# name, tmp2125
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_227, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2344	#,
	.loc 1 5947 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2126
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_229, D.29059
	.loc 1 5946 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2344	#,
	.loc 1 5949 0
	movl	$44, %eax	#, D.29058
	jmp	.L2207	#
.L2344:
	.loc 1 5952 0
	jmp	.L2208	#
.L2341:
	.loc 1 5955 0
	movq	-8(%rbp), %rax	# name, tmp2127
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_232, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2345	#,
	.loc 1 5956 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2128
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_234, D.29059
	.loc 1 5955 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2345	#,
	.loc 1 5958 0
	movl	$54, %eax	#, D.29058
	jmp	.L2207	#
.L2345:
	.loc 1 5961 0
	jmp	.L2208	#
.L2342:
	.loc 1 5964 0
	movq	-8(%rbp), %rax	# name, tmp2129
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_237, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2347	#,
	cmpl	$105, %eax	#, D.29060
	je	.L2348	#,
	.loc 1 5983 0
	jmp	.L2208	#
.L2347:
	.loc 1 5967 0
	movq	-8(%rbp), %rax	# name, tmp2130
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_240, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2349	#,
	.loc 1 5969 0
	movl	$-55, %eax	#, D.29058
	jmp	.L2207	#
.L2349:
	.loc 1 5972 0
	jmp	.L2208	#
.L2348:
	.loc 1 5975 0
	movq	-8(%rbp), %rax	# name, tmp2131
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_243, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2350	#,
	.loc 1 5977 0
	movl	$-57, %eax	#, D.29058
	jmp	.L2207	#
.L2350:
	.loc 1 5980 0
	jmp	.L2208	#
.L2320:
	.loc 1 5991 0
	movq	-8(%rbp), %rax	# name, tmp2132
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_246, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2351	#,
	.loc 1 5992 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2133
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_248, D.29059
	.loc 1 5991 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2351	#,
	.loc 1 5993 0
	movq	-8(%rbp), %rax	# name, tmp2134
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_250, D.29059
	.loc 1 5992 0
	cmpb	$107, %al	#, D.29059
	jne	.L2351	#,
	.loc 1 5995 0
	movl	$-64, %eax	#, D.29058
	jmp	.L2207	#
.L2351:
	.loc 1 5998 0
	jmp	.L2208	#
.L2321:
	.loc 1 6001 0
	movq	-8(%rbp), %rax	# name, tmp2135
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_253, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$108, %eax	#, D.29060
	je	.L2353	#,
	cmpl	$108, %eax	#, D.29060
	jg	.L2354	#,
	cmpl	$101, %eax	#, D.29060
	je	.L2355	#,
	.loc 1 6040 0
	jmp	.L2208	#
.L2354:
	.loc 1 6001 0
	cmpl	$111, %eax	#, D.29060
	je	.L2356	#,
	cmpl	$114, %eax	#, D.29060
	je	.L2357	#,
	.loc 1 6040 0
	jmp	.L2208	#
.L2355:
	.loc 1 6004 0
	movq	-8(%rbp), %rax	# name, tmp2136
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_256, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2358	#,
	.loc 1 6005 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2137
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_258, D.29059
	.loc 1 6004 0 discriminator 1
	cmpb	$99, %al	#, D.29059
	jne	.L2358	#,
	.loc 1 6007 0
	movl	$-68, %eax	#, D.29058
	jmp	.L2207	#
.L2358:
	.loc 1 6010 0
	jmp	.L2208	#
.L2353:
	.loc 1 6013 0
	movq	-8(%rbp), %rax	# name, tmp2138
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_261, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2359	#,
	.loc 1 6014 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2139
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_263, D.29059
	.loc 1 6013 0 discriminator 1
	cmpb	$98, %al	#, D.29059
	jne	.L2359	#,
	.loc 1 6016 0
	movl	$94, %eax	#, D.29058
	jmp	.L2207	#
.L2359:
	.loc 1 6019 0
	jmp	.L2208	#
.L2356:
	.loc 1 6022 0
	movq	-8(%rbp), %rax	# name, tmp2140
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_266, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2360	#,
	.loc 1 6023 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2141
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_268, D.29059
	.loc 1 6022 0 discriminator 1
	cmpb	$111, %al	#, D.29059
	jne	.L2360	#,
	.loc 1 6025 0
	movl	$96, %eax	#, D.29058
	jmp	.L2207	#
.L2360:
	.loc 1 6028 0
	jmp	.L2208	#
.L2357:
	.loc 1 6031 0
	movq	-8(%rbp), %rax	# name, tmp2142
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_271, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2361	#,
	.loc 1 6032 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2143
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_273, D.29059
	.loc 1 6031 0 discriminator 1
	cmpb	$112, %al	#, D.29059
	jne	.L2361	#,
	.loc 1 6034 0
	movl	$97, %eax	#, D.29058
	jmp	.L2207	#
.L2361:
	.loc 1 6037 0
	jmp	.L2208	#
.L2322:
	.loc 1 6044 0
	movq	-8(%rbp), %rax	# name, tmp2144
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_276, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2362	#,
	.loc 1 6045 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2145
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_278, D.29059
	.loc 1 6044 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2362	#,
	.loc 1 6046 0
	movq	-8(%rbp), %rax	# name, tmp2146
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_280, D.29059
	.loc 1 6045 0
	cmpb	$110, %al	#, D.29059
	jne	.L2362	#,
	.loc 1 6048 0
	movl	$-104, %eax	#, D.29058
	jmp	.L2207	#
.L2362:
	.loc 1 6051 0
	jmp	.L2208	#
.L2323:
	.loc 1 6054 0
	movq	-8(%rbp), %rax	# name, tmp2147
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_283, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2364	#,
	cmpl	$105, %eax	#, D.29060
	je	.L2365	#,
	.loc 1 6075 0
	jmp	.L2208	#
.L2364:
	.loc 1 6057 0
	movq	-8(%rbp), %rax	# name, tmp2148
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_286, D.29059
	cmpb	$121, %al	#, D.29059
	jne	.L2366	#,
	.loc 1 6058 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2149
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_288, D.29059
	.loc 1 6057 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2366	#,
	.loc 1 6060 0
	movl	$-105, %eax	#, D.29058
	jmp	.L2207	#
.L2366:
	.loc 1 6063 0
	jmp	.L2208	#
.L2365:
	.loc 1 6066 0
	movq	-8(%rbp), %rax	# name, tmp2150
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_291, D.29059
	cmpb	$108, %al	#, D.29059
	jne	.L2367	#,
	.loc 1 6067 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2151
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_293, D.29059
	.loc 1 6066 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2367	#,
	.loc 1 6069 0
	movl	$-106, %eax	#, D.29058
	jmp	.L2207	#
.L2367:
	.loc 1 6072 0
	jmp	.L2208	#
.L2324:
	.loc 1 6079 0
	movq	-8(%rbp), %rax	# name, tmp2152
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_296, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$105, %eax	#, D.29060
	je	.L2369	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2370	#,
	cmpl	$97, %eax	#, D.29060
	je	.L2371	#,
	.loc 1 6109 0
	jmp	.L2208	#
.L2371:
	.loc 1 6082 0
	movq	-8(%rbp), %rax	# name, tmp2153
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_299, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2372	#,
	.loc 1 6083 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2154
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_301, D.29059
	.loc 1 6082 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2372	#,
	.loc 1 6085 0
	movl	$107, %eax	#, D.29058
	jmp	.L2207	#
.L2372:
	.loc 1 6088 0
	jmp	.L2208	#
.L2369:
	.loc 1 6091 0
	movq	-8(%rbp), %rax	# name, tmp2155
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_304, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2373	#,
	.loc 1 6092 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2156
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_306, D.29059
	.loc 1 6091 0 discriminator 1
	cmpb	$107, %al	#, D.29059
	jne	.L2373	#,
	.loc 1 6094 0
	movl	$-112, %eax	#, D.29058
	jmp	.L2207	#
.L2373:
	.loc 1 6097 0
	jmp	.L2208	#
.L2370:
	.loc 1 6100 0
	movq	-8(%rbp), %rax	# name, tmp2157
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_309, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2374	#,
	.loc 1 6101 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2158
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_311, D.29059
	.loc 1 6100 0 discriminator 1
	cmpb	$107, %al	#, D.29059
	jne	.L2374	#,
	.loc 1 6103 0
	movl	$-116, %eax	#, D.29058
	jmp	.L2207	#
.L2374:
	.loc 1 6106 0
	jmp	.L2208	#
.L2325:
	.loc 1 6113 0
	movq	-8(%rbp), %rax	# name, tmp2159
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_314, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2375	#,
	.loc 1 6114 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2160
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_316, D.29059
	.loc 1 6113 0 discriminator 1
	cmpb	$120, %al	#, D.29059
	jne	.L2375	#,
	.loc 1 6115 0
	movq	-8(%rbp), %rax	# name, tmp2161
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_318, D.29059
	.loc 1 6114 0
	cmpb	$116, %al	#, D.29059
	jne	.L2375	#,
	.loc 1 6117 0
	movl	$129, %eax	#, D.29058
	jmp	.L2207	#
.L2375:
	.loc 1 6120 0
	jmp	.L2208	#
.L2326:
	.loc 1 6123 0
	movq	-8(%rbp), %rax	# name, tmp2162
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_321, D.29059
	cmpb	$112, %al	#, D.29059
	jne	.L2376	#,
	.loc 1 6124 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2163
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_323, D.29059
	.loc 1 6123 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2376	#,
	.loc 1 6125 0
	movq	-8(%rbp), %rax	# name, tmp2164
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_325, D.29059
	.loc 1 6124 0
	cmpb	$110, %al	#, D.29059
	jne	.L2376	#,
	.loc 1 6127 0
	movl	$-133, %eax	#, D.29058
	jmp	.L2207	#
.L2376:
	.loc 1 6130 0
	jmp	.L2208	#
.L2327:
	.loc 1 6133 0
	movq	-8(%rbp), %rax	# name, tmp2165
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_328, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$105, %eax	#, D.29060
	je	.L2378	#,
	cmpl	$117, %eax	#, D.29060
	je	.L2379	#,
	cmpl	$97, %eax	#, D.29060
	je	.L2380	#,
	.loc 1 6163 0
	jmp	.L2208	#
.L2380:
	.loc 1 6136 0
	movq	-8(%rbp), %rax	# name, tmp2166
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_331, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2381	#,
	.loc 1 6137 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2167
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_333, D.29059
	.loc 1 6136 0 discriminator 1
	cmpb	$107, %al	#, D.29059
	jne	.L2381	#,
	.loc 1 6139 0
	movl	$-138, %eax	#, D.29058
	jmp	.L2207	#
.L2381:
	.loc 1 6142 0
	jmp	.L2208	#
.L2378:
	.loc 1 6145 0
	movq	-8(%rbp), %rax	# name, tmp2168
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_336, D.29059
	cmpb	$112, %al	#, D.29059
	jne	.L2382	#,
	.loc 1 6146 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2169
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_338, D.29059
	.loc 1 6145 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2382	#,
	.loc 1 6148 0
	movl	$-140, %eax	#, D.29058
	jmp	.L2207	#
.L2382:
	.loc 1 6151 0
	jmp	.L2208	#
.L2379:
	.loc 1 6154 0
	movq	-8(%rbp), %rax	# name, tmp2170
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_341, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2383	#,
	.loc 1 6155 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2171
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_343, D.29059
	.loc 1 6154 0 discriminator 1
	cmpb	$104, %al	#, D.29059
	jne	.L2383	#,
	.loc 1 6157 0
	movl	$-146, %eax	#, D.29058
	jmp	.L2207	#
.L2383:
	.loc 1 6160 0
	jmp	.L2208	#
.L2328:
	.loc 1 6167 0
	movq	-8(%rbp), %rax	# name, tmp2172
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_346, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$97, %eax	#, D.29060
	je	.L2385	#,
	cmpl	$101, %eax	#, D.29060
	je	.L2386	#,
	.loc 1 6210 0
	jmp	.L2208	#
.L2385:
	.loc 1 6170 0
	movq	-8(%rbp), %rax	# name, tmp2173
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_349, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2387	#,
	.loc 1 6171 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2174
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_351, D.29059
	.loc 1 6170 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2387	#,
	.loc 1 6173 0
	movl	$-153, %eax	#, D.29058
	jmp	.L2207	#
.L2387:
	.loc 1 6176 0
	jmp	.L2208	#
.L2386:
	.loc 1 6179 0
	movq	-8(%rbp), %rax	# name, tmp2175
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_354, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$99, %eax	#, D.29060
	je	.L2389	#,
	cmpl	$100, %eax	#, D.29060
	je	.L2390	#,
	cmpl	$97, %eax	#, D.29060
	je	.L2391	#,
	.loc 1 6206 0
	jmp	.L2208	#
.L2391:
	.loc 1 6182 0
	movq	-8(%rbp), %rax	# name, tmp2176
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_357, D.29059
	cmpb	$100, %al	#, D.29059
	jne	.L2392	#,
	.loc 1 6184 0
	movl	$-154, %eax	#, D.29058
	jmp	.L2207	#
.L2392:
	.loc 1 6187 0
	jmp	.L2208	#
.L2389:
	.loc 1 6190 0
	movq	-8(%rbp), %rax	# name, tmp2177
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_360, D.29059
	cmpb	$118, %al	#, D.29059
	jne	.L2393	#,
	.loc 1 6192 0
	movl	$-159, %eax	#, D.29058
	jmp	.L2207	#
.L2393:
	.loc 1 6195 0
	jmp	.L2208	#
.L2390:
	.loc 1 6198 0
	movq	-8(%rbp), %rax	# name, tmp2178
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_363, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2394	#,
	.loc 1 6200 0
	movl	$160, %eax	#, D.29058
	jmp	.L2207	#
.L2394:
	.loc 1 6203 0
	jmp	.L2208	#
.L2329:
	.loc 1 6214 0
	movq	-8(%rbp), %rax	# name, tmp2179
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_366, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$111, %eax	#, D.29060
	je	.L2396	#,
	cmpl	$111, %eax	#, D.29060
	jg	.L2397	#,
	cmpl	$101, %eax	#, D.29060
	je	.L2398	#,
	.loc 1 6267 0
	jmp	.L2208	#
.L2397:
	.loc 1 6214 0
	cmpl	$113, %eax	#, D.29060
	je	.L2399	#,
	cmpl	$116, %eax	#, D.29060
	je	.L2400	#,
	.loc 1 6267 0
	jmp	.L2208	#
.L2398:
	.loc 1 6217 0
	movq	-8(%rbp), %rax	# name, tmp2180
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_369, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2402	#,
	cmpl	$110, %eax	#, D.29060
	je	.L2403	#,
	.loc 1 6236 0
	jmp	.L2208	#
.L2402:
	.loc 1 6220 0
	movq	-8(%rbp), %rax	# name, tmp2181
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_372, D.29059
	cmpb	$107, %al	#, D.29059
	jne	.L2404	#,
	.loc 1 6222 0
	movl	$-172, %eax	#, D.29058
	jmp	.L2207	#
.L2404:
	.loc 1 6225 0
	jmp	.L2208	#
.L2403:
	.loc 1 6228 0
	movq	-8(%rbp), %rax	# name, tmp2182
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_375, D.29059
	cmpb	$100, %al	#, D.29059
	jne	.L2405	#,
	.loc 1 6230 0
	movl	$-178, %eax	#, D.29058
	jmp	.L2207	#
.L2405:
	.loc 1 6233 0
	jmp	.L2208	#
.L2396:
	.loc 1 6240 0
	movq	-8(%rbp), %rax	# name, tmp2183
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_378, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2406	#,
	.loc 1 6241 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2184
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_380, D.29059
	.loc 1 6240 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2406	#,
	.loc 1 6243 0
	movl	$198, %eax	#, D.29058
	jmp	.L2207	#
.L2406:
	.loc 1 6246 0
	jmp	.L2208	#
.L2399:
	.loc 1 6249 0
	movq	-8(%rbp), %rax	# name, tmp2185
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_383, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2407	#,
	.loc 1 6250 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2186
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_385, D.29059
	.loc 1 6249 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2407	#,
	.loc 1 6252 0
	movl	$-202, %eax	#, D.29058
	jmp	.L2207	#
.L2407:
	.loc 1 6255 0
	jmp	.L2208	#
.L2400:
	.loc 1 6258 0
	movq	-8(%rbp), %rax	# name, tmp2187
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_388, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2408	#,
	.loc 1 6259 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2188
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_390, D.29059
	.loc 1 6258 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2408	#,
	.loc 1 6261 0
	movl	$-204, %eax	#, D.29058
	jmp	.L2207	#
.L2408:
	.loc 1 6264 0
	jmp	.L2208	#
.L2330:
	.loc 1 6271 0
	movq	-8(%rbp), %rax	# name, tmp2189
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_393, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2410	#,
	cmpl	$105, %eax	#, D.29060
	je	.L2411	#,
	.loc 1 6306 0
	jmp	.L2208	#
.L2410:
	.loc 1 6274 0
	movq	-8(%rbp), %rax	# name, tmp2190
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_396, D.29059
	cmpb	$108, %al	#, D.29059
	jne	.L2412	#,
	.loc 1 6275 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2191
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_398, D.29059
	.loc 1 6274 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2412	#,
	.loc 1 6277 0
	movl	$-215, %eax	#, D.29058
	jmp	.L2207	#
.L2412:
	.loc 1 6280 0
	jmp	.L2208	#
.L2411:
	.loc 1 6283 0
	movq	-8(%rbp), %rax	# name, tmp2192
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_401, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2414	#,
	cmpl	$109, %eax	#, D.29060
	je	.L2415	#,
	.loc 1 6302 0
	jmp	.L2208	#
.L2414:
	.loc 1 6286 0
	movq	-8(%rbp), %rax	# name, tmp2193
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_404, D.29059
	cmpb	$100, %al	#, D.29059
	jne	.L2416	#,
	.loc 1 6288 0
	movl	$218, %eax	#, D.29058
	jmp	.L2207	#
.L2416:
	.loc 1 6291 0
	jmp	.L2208	#
.L2415:
	.loc 1 6294 0
	movq	-8(%rbp), %rax	# name, tmp2194
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_407, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2417	#,
	.loc 1 6296 0
	movl	$-219, %eax	#, D.29058
	jmp	.L2207	#
.L2417:
	.loc 1 6299 0
	jmp	.L2208	#
.L2331:
	.loc 1 6310 0
	movq	-8(%rbp), %rax	# name, tmp2195
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_410, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2418	#,
	.loc 1 6312 0
	movq	-8(%rbp), %rax	# name, tmp2196
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_412, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$105, %eax	#, D.29060
	je	.L2420	#,
	cmpl	$114, %eax	#, D.29060
	je	.L2421	#,
	.loc 1 6331 0
	jmp	.L2208	#
.L2420:
	.loc 1 6315 0
	movq	-8(%rbp), %rax	# name, tmp2197
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_415, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2422	#,
	.loc 1 6317 0
	movl	$-237, %eax	#, D.29058
	jmp	.L2207	#
.L2422:
	.loc 1 6320 0
	jmp	.L2208	#
.L2421:
	.loc 1 6323 0
	movq	-8(%rbp), %rax	# name, tmp2198
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_418, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2423	#,
	.loc 1 6325 0
	movl	$-240, %eax	#, D.29058
	jmp	.L2207	#
.L2423:
	.loc 1 6328 0
	jmp	.L2208	#
.L2418:
	.loc 1 6335 0
	jmp	.L2208	#
.L2189:
	.loc 1 6342 0
	movq	-8(%rbp), %rax	# name, tmp2199
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$66, %eax	#, tmp2200
	cmpl	$53, %eax	#, tmp2200
	ja	.L2893	#,
	movl	%eax, %eax	# tmp2200, tmp2201
	movq	.L2426(,%rax,8), %rax	#, tmp2202
	jmp	*%rax	# tmp2202
	.section	.rodata
	.align 8
	.align 4
.L2426:
	.quad	.L2425
	.quad	.L2427
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2893
	.quad	.L2428
	.quad	.L2429
	.quad	.L2430
	.quad	.L2893
	.quad	.L2431
	.quad	.L2432
	.quad	.L2893
	.quad	.L2893
	.quad	.L2433
	.quad	.L2893
	.quad	.L2893
	.quad	.L2434
	.quad	.L2435
	.quad	.L2893
	.quad	.L2893
	.quad	.L2436
	.quad	.L2893
	.quad	.L2437
	.quad	.L2438
	.quad	.L2439
	.quad	.L2440
	.quad	.L2893
	.quad	.L2441
	.text
.L2425:
	.loc 1 6345 0
	movq	-8(%rbp), %rax	# name, tmp2203
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_423, D.29059
	cmpb	$69, %al	#, D.29059
	jne	.L2442	#,
	.loc 1 6346 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2204
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_425, D.29059
	.loc 1 6345 0 discriminator 1
	cmpb	$71, %al	#, D.29059
	jne	.L2442	#,
	.loc 1 6347 0
	movq	-8(%rbp), %rax	# name, tmp2205
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_427, D.29059
	.loc 1 6346 0
	cmpb	$73, %al	#, D.29059
	jne	.L2442	#,
	.loc 1 6348 0
	movq	-8(%rbp), %rax	# name, tmp2206
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_429, D.29059
	.loc 1 6347 0
	cmpb	$78, %al	#, D.29059
	jne	.L2442	#,
	.loc 1 6350 0
	movl	$7, %eax	#, D.29058
	jmp	.L2207	#
.L2442:
	.loc 1 6353 0
	jmp	.L2208	#
.L2427:
	.loc 1 6356 0
	movq	-8(%rbp), %rax	# name, tmp2207
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_432, D.29059
	cmpb	$72, %al	#, D.29059
	jne	.L2443	#,
	.loc 1 6357 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2208
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_434, D.29059
	.loc 1 6356 0 discriminator 1
	cmpb	$69, %al	#, D.29059
	jne	.L2443	#,
	.loc 1 6358 0
	movq	-8(%rbp), %rax	# name, tmp2209
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_436, D.29059
	.loc 1 6357 0
	cmpb	$67, %al	#, D.29059
	jne	.L2443	#,
	.loc 1 6359 0
	movq	-8(%rbp), %rax	# name, tmp2210
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_438, D.29059
	.loc 1 6358 0
	cmpb	$75, %al	#, D.29059
	jne	.L2443	#,
	.loc 1 6361 0
	movl	$12, %eax	#, D.29058
	jmp	.L2207	#
.L2443:
	.loc 1 6364 0
	jmp	.L2208	#
.L2428:
	.loc 1 6367 0
	movq	-8(%rbp), %rax	# name, tmp2211
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_441, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$108, %eax	#, D.29060
	je	.L2445	#,
	cmpl	$116, %eax	#, D.29060
	je	.L2446	#,
	.loc 1 6390 0
	jmp	.L2208	#
.L2445:
	.loc 1 6370 0
	movq	-8(%rbp), %rax	# name, tmp2212
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_444, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2447	#,
	.loc 1 6371 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2213
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_446, D.29059
	.loc 1 6370 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2447	#,
	.loc 1 6372 0
	movq	-8(%rbp), %rax	# name, tmp2214
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_448, D.29059
	.loc 1 6371 0
	cmpb	$109, %al	#, D.29059
	jne	.L2447	#,
	.loc 1 6374 0
	movl	$-15, %eax	#, D.29058
	jmp	.L2207	#
.L2447:
	.loc 1 6377 0
	jmp	.L2208	#
.L2446:
	.loc 1 6380 0
	movq	-8(%rbp), %rax	# name, tmp2215
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_451, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2448	#,
	.loc 1 6381 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2216
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_453, D.29059
	.loc 1 6380 0 discriminator 1
	cmpb	$110, %al	#, D.29059
	jne	.L2448	#,
	.loc 1 6382 0
	movq	-8(%rbp), %rax	# name, tmp2217
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_455, D.29059
	.loc 1 6381 0
	cmpb	$50, %al	#, D.29059
	jne	.L2448	#,
	.loc 1 6384 0
	movl	$-17, %eax	#, D.29058
	jmp	.L2207	#
.L2448:
	.loc 1 6387 0
	jmp	.L2208	#
.L2429:
	.loc 1 6394 0
	movq	-8(%rbp), %rax	# name, tmp2218
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_458, D.29059
	cmpb	$108, %al	#, D.29059
	jne	.L2449	#,
	.loc 1 6395 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2219
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_460, D.29059
	.loc 1 6394 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2449	#,
	.loc 1 6396 0
	movq	-8(%rbp), %rax	# name, tmp2220
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_462, D.29059
	.loc 1 6395 0
	cmpb	$115, %al	#, D.29059
	jne	.L2449	#,
	.loc 1 6397 0
	movq	-8(%rbp), %rax	# name, tmp2221
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_464, D.29059
	.loc 1 6396 0
	cmpb	$115, %al	#, D.29059
	jne	.L2449	#,
	.loc 1 6399 0
	movl	$-20, %eax	#, D.29058
	jmp	.L2207	#
.L2449:
	.loc 1 6402 0
	jmp	.L2208	#
.L2430:
	.loc 1 6405 0
	movq	-8(%rbp), %rax	# name, tmp2222
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_467, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$108, %eax	#, D.29060
	je	.L2451	#,
	cmpl	$114, %eax	#, D.29060
	je	.L2452	#,
	cmpl	$104, %eax	#, D.29060
	je	.L2453	#,
	.loc 1 6476 0
	jmp	.L2208	#
.L2453:
	.loc 1 6408 0
	movq	-8(%rbp), %rax	# name, tmp2223
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_470, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$109, %eax	#, D.29060
	je	.L2455	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2456	#,
	cmpl	$100, %eax	#, D.29060
	je	.L2457	#,
	.loc 1 6452 0
	jmp	.L2208	#
.L2457:
	.loc 1 6411 0
	movq	-8(%rbp), %rax	# name, tmp2224
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_473, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2458	#,
	.loc 1 6412 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2225
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_475, D.29059
	.loc 1 6411 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2458	#,
	.loc 1 6414 0
	movl	$-22, %eax	#, D.29058
	jmp	.L2207	#
.L2458:
	.loc 1 6417 0
	jmp	.L2208	#
.L2455:
	.loc 1 6420 0
	movq	-8(%rbp), %rax	# name, tmp2226
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_478, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2459	#,
	.loc 1 6421 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2227
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_480, D.29059
	.loc 1 6420 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2459	#,
	.loc 1 6423 0
	movl	$-23, %eax	#, D.29058
	jmp	.L2207	#
.L2459:
	.loc 1 6426 0
	jmp	.L2208	#
.L2456:
	.loc 1 6429 0
	movq	-8(%rbp), %rax	# name, tmp2228
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_483, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$109, %eax	#, D.29060
	je	.L2461	#,
	cmpl	$119, %eax	#, D.29060
	je	.L2462	#,
	.loc 1 6448 0
	jmp	.L2208	#
.L2461:
	.loc 1 6432 0
	movq	-8(%rbp), %rax	# name, tmp2229
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_486, D.29059
	cmpb	$112, %al	#, D.29059
	jne	.L2463	#,
	.loc 1 6434 0
	movl	$-24, %eax	#, D.29058
	jmp	.L2207	#
.L2463:
	.loc 1 6437 0
	jmp	.L2208	#
.L2462:
	.loc 1 6440 0
	movq	-8(%rbp), %rax	# name, tmp2230
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_489, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2464	#,
	.loc 1 6442 0
	movl	$-26, %eax	#, D.29058
	jmp	.L2207	#
.L2464:
	.loc 1 6445 0
	jmp	.L2208	#
.L2451:
	.loc 1 6456 0
	movq	-8(%rbp), %rax	# name, tmp2231
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_492, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2465	#,
	.loc 1 6457 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2232
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_494, D.29059
	.loc 1 6456 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2465	#,
	.loc 1 6458 0
	movq	-8(%rbp), %rax	# name, tmp2233
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_496, D.29059
	.loc 1 6457 0
	cmpb	$101, %al	#, D.29059
	jne	.L2465	#,
	.loc 1 6460 0
	movl	$-29, %eax	#, D.29058
	jmp	.L2207	#
.L2465:
	.loc 1 6463 0
	jmp	.L2208	#
.L2452:
	.loc 1 6466 0
	movq	-8(%rbp), %rax	# name, tmp2234
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_499, D.29059
	cmpb	$121, %al	#, D.29059
	jne	.L2466	#,
	.loc 1 6467 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2235
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_501, D.29059
	.loc 1 6466 0 discriminator 1
	cmpb	$112, %al	#, D.29059
	jne	.L2466	#,
	.loc 1 6468 0
	movq	-8(%rbp), %rax	# name, tmp2236
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_503, D.29059
	.loc 1 6467 0
	cmpb	$116, %al	#, D.29059
	jne	.L2466	#,
	.loc 1 6470 0
	movl	$-35, %eax	#, D.29058
	jmp	.L2207	#
.L2466:
	.loc 1 6473 0
	jmp	.L2208	#
.L2431:
	.loc 1 6480 0
	movq	-8(%rbp), %rax	# name, tmp2237
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_506, D.29059
	cmpb	$108, %al	#, D.29059
	jne	.L2467	#,
	.loc 1 6481 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2238
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_508, D.29059
	.loc 1 6480 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2467	#,
	.loc 1 6482 0
	movq	-8(%rbp), %rax	# name, tmp2239
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_510, D.29059
	.loc 1 6481 0
	cmpb	$105, %al	#, D.29059
	jne	.L2467	#,
	.loc 1 6483 0
	movq	-8(%rbp), %rax	# name, tmp2240
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_512, D.29059
	.loc 1 6482 0
	cmpb	$102, %al	#, D.29059
	jne	.L2467	#,
	.loc 1 6485 0
	movl	$45, %eax	#, D.29058
	jmp	.L2207	#
.L2467:
	.loc 1 6488 0
	jmp	.L2208	#
.L2432:
	.loc 1 6491 0
	movq	-8(%rbp), %rax	# name, tmp2241
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_515, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$99, %eax	#, D.29060
	je	.L2469	#,
	cmpl	$108, %eax	#, D.29060
	je	.L2470	#,
	.loc 1 6514 0
	jmp	.L2208	#
.L2469:
	.loc 1 6494 0
	movq	-8(%rbp), %rax	# name, tmp2242
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_518, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2471	#,
	.loc 1 6495 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2243
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_520, D.29059
	.loc 1 6494 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2471	#,
	.loc 1 6496 0
	movq	-8(%rbp), %rax	# name, tmp2244
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_522, D.29059
	.loc 1 6495 0
	cmpb	$108, %al	#, D.29059
	jne	.L2471	#,
	.loc 1 6498 0
	movl	$-59, %eax	#, D.29058
	jmp	.L2207	#
.L2471:
	.loc 1 6501 0
	jmp	.L2208	#
.L2470:
	.loc 1 6504 0
	movq	-8(%rbp), %rax	# name, tmp2245
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_525, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2472	#,
	.loc 1 6505 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2246
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_527, D.29059
	.loc 1 6504 0 discriminator 1
	cmpb	$99, %al	#, D.29059
	jne	.L2472	#,
	.loc 1 6506 0
	movq	-8(%rbp), %rax	# name, tmp2247
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_529, D.29059
	.loc 1 6505 0
	cmpb	$107, %al	#, D.29059
	jne	.L2472	#,
	.loc 1 6508 0
	movl	$-61, %eax	#, D.29058
	jmp	.L2207	#
.L2472:
	.loc 1 6511 0
	jmp	.L2208	#
.L2433:
	.loc 1 6518 0
	movq	-8(%rbp), %rax	# name, tmp2248
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_532, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$110, %eax	#, D.29060
	je	.L2474	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2475	#,
	.loc 1 6541 0
	jmp	.L2208	#
.L2474:
	.loc 1 6521 0
	movq	-8(%rbp), %rax	# name, tmp2249
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_535, D.29059
	cmpb	$100, %al	#, D.29059
	jne	.L2476	#,
	.loc 1 6522 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2250
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_537, D.29059
	.loc 1 6521 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2476	#,
	.loc 1 6523 0
	movq	-8(%rbp), %rax	# name, tmp2251
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_539, D.29059
	.loc 1 6522 0
	cmpb	$120, %al	#, D.29059
	jne	.L2476	#,
	.loc 1 6525 0
	movl	$-101, %eax	#, D.29058
	jmp	.L2207	#
.L2476:
	.loc 1 6528 0
	jmp	.L2208	#
.L2475:
	.loc 1 6531 0
	movq	-8(%rbp), %rax	# name, tmp2252
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_542, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2477	#,
	.loc 1 6532 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2253
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_544, D.29059
	.loc 1 6531 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2477	#,
	.loc 1 6533 0
	movq	-8(%rbp), %rax	# name, tmp2254
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_546, D.29059
	.loc 1 6532 0
	cmpb	$108, %al	#, D.29059
	jne	.L2477	#,
	.loc 1 6535 0
	movl	$-103, %eax	#, D.29058
	jmp	.L2207	#
.L2477:
	.loc 1 6538 0
	jmp	.L2208	#
.L2434:
	.loc 1 6545 0
	movq	-8(%rbp), %rax	# name, tmp2255
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_549, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$111, %eax	#, D.29060
	je	.L2479	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2480	#,
	.loc 1 6568 0
	jmp	.L2208	#
.L2479:
	.loc 1 6548 0
	movq	-8(%rbp), %rax	# name, tmp2256
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_552, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2481	#,
	.loc 1 6549 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2257
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_554, D.29059
	.loc 1 6548 0 discriminator 1
	cmpb	$97, %al	#, D.29059
	jne	.L2481	#,
	.loc 1 6550 0
	movq	-8(%rbp), %rax	# name, tmp2258
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_556, D.29059
	.loc 1 6549 0
	cmpb	$108, %al	#, D.29059
	jne	.L2481	#,
	.loc 1 6552 0
	movl	$114, %eax	#, D.29058
	jmp	.L2207	#
.L2481:
	.loc 1 6555 0
	jmp	.L2208	#
.L2480:
	.loc 1 6558 0
	movq	-8(%rbp), %rax	# name, tmp2259
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_559, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2482	#,
	.loc 1 6559 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2260
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_561, D.29059
	.loc 1 6558 0 discriminator 1
	cmpb	$97, %al	#, D.29059
	jne	.L2482	#,
	.loc 1 6560 0
	movq	-8(%rbp), %rax	# name, tmp2261
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_563, D.29059
	.loc 1 6559 0
	cmpb	$116, %al	#, D.29059
	jne	.L2482	#,
	.loc 1 6562 0
	movl	$-118, %eax	#, D.29058
	jmp	.L2207	#
.L2482:
	.loc 1 6565 0
	jmp	.L2208	#
.L2435:
	.loc 1 6572 0
	movq	-8(%rbp), %rax	# name, tmp2262
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_566, D.29059
	cmpb	$107, %al	#, D.29059
	jne	.L2483	#,
	.loc 1 6573 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2263
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_568, D.29059
	.loc 1 6572 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2483	#,
	.loc 1 6574 0
	movq	-8(%rbp), %rax	# name, tmp2264
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_570, D.29059
	.loc 1 6573 0
	cmpb	$105, %al	#, D.29059
	jne	.L2483	#,
	.loc 1 6575 0
	movq	-8(%rbp), %rax	# name, tmp2265
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_572, D.29059
	.loc 1 6574 0
	cmpb	$114, %al	#, D.29059
	jne	.L2483	#,
	.loc 1 6577 0
	movl	$-122, %eax	#, D.29058
	jmp	.L2207	#
.L2483:
	.loc 1 6580 0
	jmp	.L2208	#
.L2436:
	.loc 1 6583 0
	movq	-8(%rbp), %rax	# name, tmp2266
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_575, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2484	#,
	.loc 1 6584 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2267
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_577, D.29059
	.loc 1 6583 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2484	#,
	.loc 1 6585 0
	movq	-8(%rbp), %rax	# name, tmp2268
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_579, D.29059
	.loc 1 6584 0
	cmpb	$110, %al	#, D.29059
	jne	.L2484	#,
	.loc 1 6586 0
	movq	-8(%rbp), %rax	# name, tmp2269
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_581, D.29059
	.loc 1 6585 0
	cmpb	$116, %al	#, D.29059
	jne	.L2484	#,
	.loc 1 6588 0
	movl	$143, %eax	#, D.29058
	jmp	.L2207	#
.L2484:
	.loc 1 6591 0
	jmp	.L2208	#
.L2437:
	.loc 1 6594 0
	movq	-8(%rbp), %rax	# name, tmp2270
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_584, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2486	#,
	cmpl	$109, %eax	#, D.29060
	je	.L2487	#,
	.loc 1 6617 0
	jmp	.L2208	#
.L2486:
	.loc 1 6597 0
	movq	-8(%rbp), %rax	# name, tmp2271
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_587, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2488	#,
	.loc 1 6598 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2272
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_589, D.29059
	.loc 1 6597 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2488	#,
	.loc 1 6599 0
	movq	-8(%rbp), %rax	# name, tmp2273
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_591, D.29059
	.loc 1 6598 0
	cmpb	$116, %al	#, D.29059
	jne	.L2488	#,
	.loc 1 6601 0
	movl	$-164, %eax	#, D.29058
	jmp	.L2207	#
.L2488:
	.loc 1 6604 0
	jmp	.L2208	#
.L2487:
	.loc 1 6607 0
	movq	-8(%rbp), %rax	# name, tmp2274
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_594, D.29059
	cmpb	$100, %al	#, D.29059
	jne	.L2489	#,
	.loc 1 6608 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2275
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_596, D.29059
	.loc 1 6607 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2489	#,
	.loc 1 6609 0
	movq	-8(%rbp), %rax	# name, tmp2276
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_598, D.29059
	.loc 1 6608 0
	cmpb	$114, %al	#, D.29059
	jne	.L2489	#,
	.loc 1 6611 0
	movl	$-169, %eax	#, D.29058
	jmp	.L2207	#
.L2489:
	.loc 1 6614 0
	jmp	.L2208	#
.L2438:
	.loc 1 6621 0
	movq	-8(%rbp), %rax	# name, tmp2277
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_601, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$101, %eax	#, tmp2278
	cmpl	$15, %eax	#, tmp2278
	ja	.L2894	#,
	movl	%eax, %eax	# tmp2278, tmp2279
	movq	.L2492(,%rax,8), %rax	#, tmp2280
	jmp	*%rax	# tmp2280
	.section	.rodata
	.align 8
	.align 4
.L2492:
	.quad	.L2491
	.quad	.L2894
	.quad	.L2894
	.quad	.L2493
	.quad	.L2894
	.quad	.L2894
	.quad	.L2894
	.quad	.L2494
	.quad	.L2894
	.quad	.L2894
	.quad	.L2894
	.quad	.L2495
	.quad	.L2894
	.quad	.L2496
	.quad	.L2894
	.quad	.L2497
	.text
.L2491:
	.loc 1 6624 0
	movq	-8(%rbp), %rax	# name, tmp2281
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_604, D.29059
	cmpb	$109, %al	#, D.29059
	jne	.L2498	#,
	.loc 1 6625 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2282
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_606, D.29059
	.loc 1 6624 0 discriminator 1
	cmpb	$111, %al	#, D.29059
	jne	.L2498	#,
	.loc 1 6626 0
	movq	-8(%rbp), %rax	# name, tmp2283
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_608, D.29059
	.loc 1 6625 0
	cmpb	$112, %al	#, D.29059
	jne	.L2498	#,
	.loc 1 6628 0
	movl	$-177, %eax	#, D.29058
	jmp	.L2207	#
.L2498:
	.loc 1 6631 0
	jmp	.L2208	#
.L2493:
	.loc 1 6634 0
	movq	-8(%rbp), %rax	# name, tmp2284
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_611, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2499	#,
	.loc 1 6635 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2285
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_613, D.29059
	.loc 1 6634 0 discriminator 1
	cmpb	$102, %al	#, D.29059
	jne	.L2499	#,
	.loc 1 6636 0
	movq	-8(%rbp), %rax	# name, tmp2286
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_615, D.29059
	.loc 1 6635 0
	cmpb	$116, %al	#, D.29059
	jne	.L2499	#,
	.loc 1 6638 0
	movl	$-188, %eax	#, D.29058
	jmp	.L2207	#
.L2499:
	.loc 1 6641 0
	jmp	.L2208	#
.L2494:
	.loc 1 6644 0
	movq	-8(%rbp), %rax	# name, tmp2287
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_618, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2500	#,
	.loc 1 6645 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2288
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_620, D.29059
	.loc 1 6644 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2500	#,
	.loc 1 6646 0
	movq	-8(%rbp), %rax	# name, tmp2289
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_622, D.29059
	.loc 1 6645 0
	cmpb	$112, %al	#, D.29059
	jne	.L2500	#,
	.loc 1 6648 0
	movl	$-195, %eax	#, D.29058
	jmp	.L2207	#
.L2500:
	.loc 1 6651 0
	jmp	.L2208	#
.L2495:
	.loc 1 6654 0
	movq	-8(%rbp), %rax	# name, tmp2290
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_625, D.29059
	cmpb	$108, %al	#, D.29059
	jne	.L2501	#,
	.loc 1 6655 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2291
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_627, D.29059
	.loc 1 6654 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2501	#,
	.loc 1 6656 0
	movq	-8(%rbp), %rax	# name, tmp2292
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_629, D.29059
	.loc 1 6655 0
	cmpb	$116, %al	#, D.29059
	jne	.L2501	#,
	.loc 1 6658 0
	movl	$200, %eax	#, D.29058
	jmp	.L2207	#
.L2501:
	.loc 1 6661 0
	jmp	.L2208	#
.L2496:
	.loc 1 6664 0
	movq	-8(%rbp), %rax	# name, tmp2293
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_632, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2502	#,
	.loc 1 6665 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2294
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_634, D.29059
	.loc 1 6664 0 discriminator 1
	cmpb	$110, %al	#, D.29059
	jne	.L2502	#,
	.loc 1 6666 0
	movq	-8(%rbp), %rax	# name, tmp2295
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_636, D.29059
	.loc 1 6665 0
	cmpb	$100, %al	#, D.29059
	jne	.L2502	#,
	.loc 1 6668 0
	movl	$-203, %eax	#, D.29058
	jmp	.L2207	#
.L2502:
	.loc 1 6671 0
	jmp	.L2208	#
.L2497:
	.loc 1 6674 0
	movq	-8(%rbp), %rax	# name, tmp2296
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_639, D.29059
	cmpb	$117, %al	#, D.29059
	jne	.L2503	#,
	.loc 1 6675 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2297
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_641, D.29059
	.loc 1 6674 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2503	#,
	.loc 1 6676 0
	movq	-8(%rbp), %rax	# name, tmp2298
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_643, D.29059
	.loc 1 6675 0
	cmpb	$121, %al	#, D.29059
	jne	.L2503	#,
	.loc 1 6678 0
	movl	$205, %eax	#, D.29058
	jmp	.L2207	#
.L2503:
	.loc 1 6681 0
	jmp	.L2208	#
.L2439:
	.loc 1 6688 0
	movq	-8(%rbp), %rax	# name, tmp2299
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_646, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2504	#,
	.loc 1 6689 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2300
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_648, D.29059
	.loc 1 6688 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2504	#,
	.loc 1 6690 0
	movq	-8(%rbp), %rax	# name, tmp2301
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_650, D.29059
	.loc 1 6689 0
	cmpb	$101, %al	#, D.29059
	jne	.L2504	#,
	.loc 1 6691 0
	movq	-8(%rbp), %rax	# name, tmp2302
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_652, D.29059
	.loc 1 6690 0
	cmpb	$115, %al	#, D.29059
	jne	.L2504	#,
	.loc 1 6693 0
	movl	$-220, %eax	#, D.29058
	jmp	.L2207	#
.L2504:
	.loc 1 6696 0
	jmp	.L2208	#
.L2440:
	.loc 1 6699 0
	movq	-8(%rbp), %rax	# name, tmp2303
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_655, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$110, %eax	#, D.29060
	je	.L2506	#,
	cmpl	$116, %eax	#, D.29060
	je	.L2507	#,
	cmpl	$109, %eax	#, D.29060
	je	.L2508	#,
	.loc 1 6760 0
	jmp	.L2208	#
.L2508:
	.loc 1 6702 0
	movq	-8(%rbp), %rax	# name, tmp2304
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_658, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2509	#,
	.loc 1 6703 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2305
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_660, D.29059
	.loc 1 6702 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2509	#,
	.loc 1 6704 0
	movq	-8(%rbp), %rax	# name, tmp2306
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_662, D.29059
	.loc 1 6703 0
	cmpb	$107, %al	#, D.29059
	jne	.L2509	#,
	.loc 1 6706 0
	movl	$-225, %eax	#, D.29058
	jmp	.L2207	#
.L2509:
	.loc 1 6709 0
	jmp	.L2208	#
.L2506:
	.loc 1 6712 0
	movq	-8(%rbp), %rax	# name, tmp2307
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_665, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$100, %eax	#, D.29060
	je	.L2511	#,
	cmpl	$116, %eax	#, D.29060
	je	.L2512	#,
	.loc 1 6746 0
	jmp	.L2208	#
.L2511:
	.loc 1 6715 0
	movq	-8(%rbp), %rax	# name, tmp2308
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_668, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2513	#,
	.loc 1 6716 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2309
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_670, D.29059
	.loc 1 6715 0 discriminator 1
	cmpb	$102, %al	#, D.29059
	jne	.L2513	#,
	.loc 1 6718 0
	movl	$226, %eax	#, D.29058
	jmp	.L2207	#
.L2513:
	.loc 1 6721 0
	jmp	.L2208	#
.L2512:
	.loc 1 6724 0
	movq	-8(%rbp), %rax	# name, tmp2310
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_673, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2514	#,
	.loc 1 6726 0
	movq	-8(%rbp), %rax	# name, tmp2311
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_675, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2516	#,
	cmpl	$108, %eax	#, D.29060
	je	.L2517	#,
	.loc 1 6739 0
	jmp	.L2208	#
.L2516:
	.loc 1 6730 0
	movl	$231, %eax	#, D.29058
	jmp	.L2207	#
.L2517:
	.loc 1 6735 0
	movl	$232, %eax	#, D.29058
	jmp	.L2207	#
.L2514:
	.loc 1 6743 0
	jmp	.L2208	#
.L2507:
	.loc 1 6750 0
	movq	-8(%rbp), %rax	# name, tmp2312
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_680, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2518	#,
	.loc 1 6751 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2313
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_682, D.29059
	.loc 1 6750 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2518	#,
	.loc 1 6752 0
	movq	-8(%rbp), %rax	# name, tmp2314
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_684, D.29059
	.loc 1 6751 0
	cmpb	$101, %al	#, D.29059
	jne	.L2518	#,
	.loc 1 6754 0
	movl	$-234, %eax	#, D.29058
	jmp	.L2207	#
.L2518:
	.loc 1 6757 0
	jmp	.L2208	#
.L2441:
	.loc 1 6764 0
	movq	-8(%rbp), %rax	# name, tmp2315
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_687, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$104, %eax	#, D.29060
	je	.L2520	#,
	cmpl	$114, %eax	#, D.29060
	je	.L2521	#,
	.loc 1 6787 0
	jmp	.L2208	#
.L2520:
	.loc 1 6767 0
	movq	-8(%rbp), %rax	# name, tmp2316
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_690, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2522	#,
	.loc 1 6768 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2317
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_692, D.29059
	.loc 1 6767 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2522	#,
	.loc 1 6769 0
	movq	-8(%rbp), %rax	# name, tmp2318
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_694, D.29059
	.loc 1 6768 0
	cmpb	$101, %al	#, D.29059
	jne	.L2522	#,
	.loc 1 6771 0
	movl	$241, %eax	#, D.29058
	jmp	.L2207	#
.L2522:
	.loc 1 6774 0
	jmp	.L2208	#
.L2521:
	.loc 1 6777 0
	movq	-8(%rbp), %rax	# name, tmp2319
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_697, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2523	#,
	.loc 1 6778 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2320
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_699, D.29059
	.loc 1 6777 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2523	#,
	.loc 1 6779 0
	movq	-8(%rbp), %rax	# name, tmp2321
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_701, D.29059
	.loc 1 6778 0
	cmpb	$101, %al	#, D.29059
	jne	.L2523	#,
	.loc 1 6781 0
	movl	$-242, %eax	#, D.29058
	jmp	.L2207	#
.L2523:
	.loc 1 6784 0
	jmp	.L2208	#
.L2190:
	.loc 1 6795 0
	movq	-8(%rbp), %rax	# name, tmp2322
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$97, %eax	#, tmp2323
	cmpl	$21, %eax	#, tmp2323
	ja	.L2895	#,
	movl	%eax, %eax	# tmp2323, tmp2324
	movq	.L2526(,%rax,8), %rax	#, tmp2325
	jmp	*%rax	# tmp2325
	.section	.rodata
	.align 8
	.align 4
.L2526:
	.quad	.L2525
	.quad	.L2895
	.quad	.L2527
	.quad	.L2528
	.quad	.L2529
	.quad	.L2530
	.quad	.L2531
	.quad	.L2895
	.quad	.L2895
	.quad	.L2895
	.quad	.L2895
	.quad	.L2532
	.quad	.L2533
	.quad	.L2895
	.quad	.L2895
	.quad	.L2534
	.quad	.L2895
	.quad	.L2535
	.quad	.L2536
	.quad	.L2895
	.quad	.L2537
	.quad	.L2538
	.text
.L2525:
	.loc 1 6798 0
	movq	-8(%rbp), %rax	# name, tmp2326
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_706, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2539	#,
	.loc 1 6799 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2327
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_708, D.29059
	.loc 1 6798 0 discriminator 1
	cmpb	$99, %al	#, D.29059
	jne	.L2539	#,
	.loc 1 6800 0
	movq	-8(%rbp), %rax	# name, tmp2328
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_710, D.29059
	.loc 1 6799 0
	cmpb	$101, %al	#, D.29059
	jne	.L2539	#,
	.loc 1 6801 0
	movq	-8(%rbp), %rax	# name, tmp2329
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_712, D.29059
	.loc 1 6800 0
	cmpb	$112, %al	#, D.29059
	jne	.L2539	#,
	.loc 1 6802 0
	movq	-8(%rbp), %rax	# name, tmp2330
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_714, D.29059
	.loc 1 6801 0
	cmpb	$116, %al	#, D.29059
	jne	.L2539	#,
	.loc 1 6804 0
	movl	$-14, %eax	#, D.29058
	jmp	.L2207	#
.L2539:
	.loc 1 6807 0
	jmp	.L2208	#
.L2527:
	.loc 1 6810 0
	movq	-8(%rbp), %rax	# name, tmp2331
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_717, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$97, %eax	#, D.29060
	je	.L2541	#,
	cmpl	$104, %eax	#, D.29060
	je	.L2542	#,
	.loc 1 6835 0
	jmp	.L2208	#
.L2541:
	.loc 1 6813 0
	movq	-8(%rbp), %rax	# name, tmp2332
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_720, D.29059
	cmpb	$108, %al	#, D.29059
	jne	.L2543	#,
	.loc 1 6814 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2333
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_722, D.29059
	.loc 1 6813 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2543	#,
	.loc 1 6815 0
	movq	-8(%rbp), %rax	# name, tmp2334
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_724, D.29059
	.loc 1 6814 0
	cmpb	$101, %al	#, D.29059
	jne	.L2543	#,
	.loc 1 6816 0
	movq	-8(%rbp), %rax	# name, tmp2335
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_726, D.29059
	.loc 1 6815 0
	cmpb	$114, %al	#, D.29059
	jne	.L2543	#,
	.loc 1 6818 0
	movl	$-21, %eax	#, D.29058
	jmp	.L2207	#
.L2543:
	.loc 1 6821 0
	jmp	.L2208	#
.L2542:
	.loc 1 6824 0
	movq	-8(%rbp), %rax	# name, tmp2336
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_729, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2544	#,
	.loc 1 6825 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2337
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_731, D.29059
	.loc 1 6824 0 discriminator 1
	cmpb	$111, %al	#, D.29059
	jne	.L2544	#,
	.loc 1 6826 0
	movq	-8(%rbp), %rax	# name, tmp2338
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_733, D.29059
	.loc 1 6825 0
	cmpb	$111, %al	#, D.29059
	jne	.L2544	#,
	.loc 1 6827 0
	movq	-8(%rbp), %rax	# name, tmp2339
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_735, D.29059
	.loc 1 6826 0
	cmpb	$116, %al	#, D.29059
	jne	.L2544	#,
	.loc 1 6829 0
	movl	$-28, %eax	#, D.29058
	jmp	.L2207	#
.L2544:
	.loc 1 6832 0
	jmp	.L2208	#
.L2528:
	.loc 1 6839 0
	movq	-8(%rbp), %rax	# name, tmp2340
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_738, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2545	#,
	.loc 1 6840 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2341
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_740, D.29059
	.loc 1 6839 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2545	#,
	.loc 1 6841 0
	movq	-8(%rbp), %rax	# name, tmp2342
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_742, D.29059
	.loc 1 6840 0
	cmpb	$101, %al	#, D.29059
	jne	.L2545	#,
	.loc 1 6842 0
	movq	-8(%rbp), %rax	# name, tmp2343
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_744, D.29059
	.loc 1 6841 0
	cmpb	$116, %al	#, D.29059
	jne	.L2545	#,
	.loc 1 6843 0
	movq	-8(%rbp), %rax	# name, tmp2344
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_746, D.29059
	.loc 1 6842 0
	cmpb	$101, %al	#, D.29059
	jne	.L2545	#,
	.loc 1 6845 0
	movl	$39, %eax	#, D.29058
	jmp	.L2207	#
.L2545:
	.loc 1 6848 0
	jmp	.L2208	#
.L2529:
	.loc 1 6851 0
	movq	-8(%rbp), %rax	# name, tmp2345
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_749, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$108, %eax	#, D.29060
	je	.L2547	#,
	cmpl	$120, %eax	#, D.29060
	je	.L2548	#,
	.loc 1 6877 0
	jmp	.L2208	#
.L2547:
	.loc 1 6854 0
	movq	-8(%rbp), %rax	# name, tmp2346
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_752, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2549	#,
	.loc 1 6855 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2347
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_754, D.29059
	.loc 1 6854 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2549	#,
	.loc 1 6856 0
	movq	-8(%rbp), %rax	# name, tmp2348
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_756, D.29059
	.loc 1 6855 0
	cmpb	$105, %al	#, D.29059
	jne	.L2549	#,
	.loc 1 6857 0
	movq	-8(%rbp), %rax	# name, tmp2349
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_758, D.29059
	.loc 1 6856 0
	cmpb	$102, %al	#, D.29059
	jne	.L2549	#,
	.loc 1 6859 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1869
	movq	80(%rax), %rax	# PL_curcop.1869_760->cop_warnings, D.29062
	testq	%rax, %rax	# D.29062
	je	.L2550	#,
	.loc 1 6859 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1870
	movq	80(%rax), %rax	# PL_curcop.1870_762->cop_warnings, D.29062
	cmpq	$16, %rax	#, D.29062
	je	.L2550	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1871
	movq	80(%rax), %rax	# PL_curcop.1871_764->cop_warnings, D.29062
	cmpq	$32, %rax	#, D.29062
	je	.L2549	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1872
	movq	80(%rax), %rax	# PL_curcop.1872_766->cop_warnings, D.29062
	movq	(%rax), %rax	# _767->sv_any, D.29063
	movq	(%rax), %rax	# MEM[(struct XPV *)_768].xpv_pv, D.29061
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_770, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	andl	$1, %eax	#, D.29060
	testl	%eax, %eax	# D.29060
	je	.L2549	#,
.L2550:
	.loc 1 6860 0 is_stmt 1
	movl	$.LC160, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 6863 0
	jmp	.L2208	#
.L2549:
	jmp	.L2208	#
.L2548:
	.loc 1 6866 0
	movq	-8(%rbp), %rax	# name, tmp2350
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_774, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2551	#,
	.loc 1 6867 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2351
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_776, D.29059
	.loc 1 6866 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2551	#,
	.loc 1 6868 0
	movq	-8(%rbp), %rax	# name, tmp2352
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_778, D.29059
	.loc 1 6867 0
	cmpb	$116, %al	#, D.29059
	jne	.L2551	#,
	.loc 1 6869 0
	movq	-8(%rbp), %rax	# name, tmp2353
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_780, D.29059
	.loc 1 6868 0
	cmpb	$115, %al	#, D.29059
	jne	.L2551	#,
	.loc 1 6871 0
	movl	$56, %eax	#, D.29058
	jmp	.L2207	#
.L2551:
	.loc 1 6874 0
	jmp	.L2208	#
.L2530:
	.loc 1 6881 0
	movq	-8(%rbp), %rax	# name, tmp2354
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_783, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$105, %eax	#, D.29060
	je	.L2553	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2554	#,
	.loc 1 6906 0
	jmp	.L2208	#
.L2553:
	.loc 1 6884 0
	movq	-8(%rbp), %rax	# name, tmp2355
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_786, D.29059
	cmpb	$108, %al	#, D.29059
	jne	.L2555	#,
	.loc 1 6885 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2356
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_788, D.29059
	.loc 1 6884 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2555	#,
	.loc 1 6886 0
	movq	-8(%rbp), %rax	# name, tmp2357
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_790, D.29059
	.loc 1 6885 0
	cmpb	$110, %al	#, D.29059
	jne	.L2555	#,
	.loc 1 6887 0
	movq	-8(%rbp), %rax	# name, tmp2358
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_792, D.29059
	.loc 1 6886 0
	cmpb	$111, %al	#, D.29059
	jne	.L2555	#,
	.loc 1 6889 0
	movl	$-60, %eax	#, D.29058
	jmp	.L2207	#
.L2555:
	.loc 1 6892 0
	jmp	.L2208	#
.L2554:
	.loc 1 6895 0
	movq	-8(%rbp), %rax	# name, tmp2359
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_795, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2556	#,
	.loc 1 6896 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2360
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_797, D.29059
	.loc 1 6895 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2556	#,
	.loc 1 6897 0
	movq	-8(%rbp), %rax	# name, tmp2361
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_799, D.29059
	.loc 1 6896 0
	cmpb	$97, %al	#, D.29059
	jne	.L2556	#,
	.loc 1 6898 0
	movq	-8(%rbp), %rax	# name, tmp2362
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_801, D.29059
	.loc 1 6897 0
	cmpb	$116, %al	#, D.29059
	jne	.L2556	#,
	.loc 1 6900 0
	movl	$65, %eax	#, D.29058
	jmp	.L2207	#
.L2556:
	.loc 1 6903 0
	jmp	.L2208	#
.L2531:
	.loc 1 6910 0
	movq	-8(%rbp), %rax	# name, tmp2363
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_804, D.29059
	cmpb	$109, %al	#, D.29059
	jne	.L2557	#,
	.loc 1 6911 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2364
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_806, D.29059
	.loc 1 6910 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2557	#,
	.loc 1 6912 0
	movq	-8(%rbp), %rax	# name, tmp2365
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_808, D.29059
	.loc 1 6911 0
	cmpb	$105, %al	#, D.29059
	jne	.L2557	#,
	.loc 1 6913 0
	movq	-8(%rbp), %rax	# name, tmp2366
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_810, D.29059
	.loc 1 6912 0
	cmpb	$109, %al	#, D.29059
	jne	.L2557	#,
	.loc 1 6914 0
	movq	-8(%rbp), %rax	# name, tmp2367
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_812, D.29059
	.loc 1 6913 0
	cmpb	$101, %al	#, D.29059
	jne	.L2557	#,
	.loc 1 6916 0
	movl	$-95, %eax	#, D.29058
	jmp	.L2207	#
.L2557:
	.loc 1 6919 0
	jmp	.L2208	#
.L2532:
	.loc 1 6922 0
	movq	-8(%rbp), %rax	# name, tmp2368
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_815, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2559	#,
	cmpl	$105, %eax	#, D.29060
	je	.L2560	#,
	.loc 1 6947 0
	jmp	.L2208	#
.L2559:
	.loc 1 6925 0
	movq	-8(%rbp), %rax	# name, tmp2369
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_818, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2561	#,
	.loc 1 6926 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2370
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_820, D.29059
	.loc 1 6925 0 discriminator 1
	cmpb	$103, %al	#, D.29059
	jne	.L2561	#,
	.loc 1 6927 0
	movq	-8(%rbp), %rax	# name, tmp2371
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_822, D.29059
	.loc 1 6926 0
	cmpb	$116, %al	#, D.29059
	jne	.L2561	#,
	.loc 1 6928 0
	movq	-8(%rbp), %rax	# name, tmp2372
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_824, D.29059
	.loc 1 6927 0
	cmpb	$104, %al	#, D.29059
	jne	.L2561	#,
	.loc 1 6930 0
	movl	$-111, %eax	#, D.29058
	jmp	.L2207	#
.L2561:
	.loc 1 6933 0
	jmp	.L2208	#
.L2560:
	.loc 1 6936 0
	movq	-8(%rbp), %rax	# name, tmp2373
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_827, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2562	#,
	.loc 1 6937 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2374
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_829, D.29059
	.loc 1 6936 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2562	#,
	.loc 1 6938 0
	movq	-8(%rbp), %rax	# name, tmp2375
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_831, D.29059
	.loc 1 6937 0
	cmpb	$101, %al	#, D.29059
	jne	.L2562	#,
	.loc 1 6939 0
	movq	-8(%rbp), %rax	# name, tmp2376
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_833, D.29059
	.loc 1 6938 0
	cmpb	$110, %al	#, D.29059
	jne	.L2562	#,
	.loc 1 6941 0
	movl	$-113, %eax	#, D.29058
	jmp	.L2207	#
.L2562:
	.loc 1 6944 0
	jmp	.L2208	#
.L2533:
	.loc 1 6951 0
	movq	-8(%rbp), %rax	# name, tmp2377
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_836, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2563	#,
	.loc 1 6952 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2378
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_838, D.29059
	.loc 1 6951 0 discriminator 1
	cmpb	$103, %al	#, D.29059
	jne	.L2563	#,
	.loc 1 6954 0
	movq	-8(%rbp), %rax	# name, tmp2379
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_840, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$103, %eax	#, D.29060
	je	.L2565	#,
	cmpl	$103, %eax	#, D.29060
	jg	.L2566	#,
	cmpl	$99, %eax	#, D.29060
	je	.L2567	#,
	.loc 1 6993 0
	jmp	.L2208	#
.L2566:
	.loc 1 6954 0
	cmpl	$114, %eax	#, D.29060
	je	.L2568	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2569	#,
	.loc 1 6993 0
	jmp	.L2208	#
.L2567:
	.loc 1 6957 0
	movq	-8(%rbp), %rax	# name, tmp2380
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_843, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2570	#,
	.loc 1 6958 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2381
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_845, D.29059
	.loc 1 6957 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2570	#,
	.loc 1 6960 0
	movl	$-123, %eax	#, D.29058
	jmp	.L2207	#
.L2570:
	.loc 1 6963 0
	jmp	.L2208	#
.L2565:
	.loc 1 6966 0
	movq	-8(%rbp), %rax	# name, tmp2382
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_848, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2571	#,
	.loc 1 6967 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2383
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_850, D.29059
	.loc 1 6966 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2571	#,
	.loc 1 6969 0
	movl	$-124, %eax	#, D.29058
	jmp	.L2207	#
.L2571:
	.loc 1 6972 0
	jmp	.L2208	#
.L2568:
	.loc 1 6975 0
	movq	-8(%rbp), %rax	# name, tmp2384
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_853, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2572	#,
	.loc 1 6976 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2385
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_855, D.29059
	.loc 1 6975 0 discriminator 1
	cmpb	$118, %al	#, D.29059
	jne	.L2572	#,
	.loc 1 6978 0
	movl	$-125, %eax	#, D.29058
	jmp	.L2207	#
.L2572:
	.loc 1 6981 0
	jmp	.L2208	#
.L2569:
	.loc 1 6984 0
	movq	-8(%rbp), %rax	# name, tmp2386
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_858, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2573	#,
	.loc 1 6985 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2387
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_860, D.29059
	.loc 1 6984 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2573	#,
	.loc 1 6987 0
	movl	$-126, %eax	#, D.29058
	jmp	.L2207	#
.L2573:
	.loc 1 6990 0
	jmp	.L2208	#
.L2563:
	.loc 1 6997 0
	jmp	.L2208	#
.L2534:
	.loc 1 7000 0
	movq	-8(%rbp), %rax	# name, tmp2388
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_863, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2574	#,
	.loc 1 7001 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2389
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_865, D.29059
	.loc 1 7000 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2574	#,
	.loc 1 7002 0
	movq	-8(%rbp), %rax	# name, tmp2390
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_867, D.29059
	.loc 1 7001 0
	cmpb	$110, %al	#, D.29059
	jne	.L2574	#,
	.loc 1 7003 0
	movq	-8(%rbp), %rax	# name, tmp2391
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_869, D.29059
	.loc 1 7002 0
	cmpb	$116, %al	#, D.29059
	jne	.L2574	#,
	.loc 1 7004 0
	movq	-8(%rbp), %rax	# name, tmp2392
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_871, D.29059
	.loc 1 7003 0
	cmpb	$102, %al	#, D.29059
	jne	.L2574	#,
	.loc 1 7006 0
	movl	$144, %eax	#, D.29058
	jmp	.L2207	#
.L2574:
	.loc 1 7009 0
	jmp	.L2208	#
.L2535:
	.loc 1 7012 0
	movq	-8(%rbp), %rax	# name, tmp2393
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_874, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2576	#,
	cmpl	$105, %eax	#, D.29060
	je	.L2577	#,
	.loc 1 7053 0
	jmp	.L2208	#
.L2576:
	.loc 1 7015 0
	movq	-8(%rbp), %rax	# name, tmp2394
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_877, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$110, %eax	#, D.29060
	je	.L2579	#,
	cmpl	$116, %eax	#, D.29060
	je	.L2580	#,
	.loc 1 7038 0
	jmp	.L2208	#
.L2579:
	.loc 1 7018 0
	movq	-8(%rbp), %rax	# name, tmp2395
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_880, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2581	#,
	.loc 1 7019 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2396
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_882, D.29059
	.loc 1 7018 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2581	#,
	.loc 1 7020 0
	movq	-8(%rbp), %rax	# name, tmp2397
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_884, D.29059
	.loc 1 7019 0
	cmpb	$101, %al	#, D.29059
	jne	.L2581	#,
	.loc 1 7022 0
	movl	$-162, %eax	#, D.29058
	jmp	.L2207	#
.L2581:
	.loc 1 7025 0
	jmp	.L2208	#
.L2580:
	.loc 1 7028 0
	movq	-8(%rbp), %rax	# name, tmp2398
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_887, D.29059
	cmpb	$117, %al	#, D.29059
	jne	.L2582	#,
	.loc 1 7029 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2399
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_889, D.29059
	.loc 1 7028 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2582	#,
	.loc 1 7030 0
	movq	-8(%rbp), %rax	# name, tmp2400
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_891, D.29059
	.loc 1 7029 0
	cmpb	$110, %al	#, D.29059
	jne	.L2582	#,
	.loc 1 7032 0
	movl	$165, %eax	#, D.29058
	jmp	.L2207	#
.L2582:
	.loc 1 7035 0
	jmp	.L2208	#
.L2577:
	.loc 1 7042 0
	movq	-8(%rbp), %rax	# name, tmp2401
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_894, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2583	#,
	.loc 1 7043 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2402
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_896, D.29059
	.loc 1 7042 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2583	#,
	.loc 1 7044 0
	movq	-8(%rbp), %rax	# name, tmp2403
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_898, D.29059
	.loc 1 7043 0
	cmpb	$101, %al	#, D.29059
	jne	.L2583	#,
	.loc 1 7045 0
	movq	-8(%rbp), %rax	# name, tmp2404
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_900, D.29059
	.loc 1 7044 0
	cmpb	$120, %al	#, D.29059
	jne	.L2583	#,
	.loc 1 7047 0
	movl	$-168, %eax	#, D.29058
	jmp	.L2207	#
.L2583:
	.loc 1 7050 0
	jmp	.L2208	#
.L2536:
	.loc 1 7057 0
	movq	-8(%rbp), %rax	# name, tmp2405
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_903, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$99, %eax	#, tmp2406
	cmpl	$22, %eax	#, tmp2406
	ja	.L2896	#,
	movl	%eax, %eax	# tmp2406, tmp2407
	movq	.L2586(,%rax,8), %rax	#, tmp2408
	jmp	*%rax	# tmp2408
	.section	.rodata
	.align 8
	.align 4
.L2586:
	.quad	.L2585
	.quad	.L2896
	.quad	.L2587
	.quad	.L2896
	.quad	.L2896
	.quad	.L2588
	.quad	.L2896
	.quad	.L2896
	.quad	.L2896
	.quad	.L2896
	.quad	.L2896
	.quad	.L2896
	.quad	.L2589
	.quad	.L2590
	.quad	.L2896
	.quad	.L2896
	.quad	.L2896
	.quad	.L2896
	.quad	.L2591
	.quad	.L2896
	.quad	.L2896
	.quad	.L2896
	.quad	.L2592
	.text
.L2585:
	.loc 1 7060 0
	movq	-8(%rbp), %rax	# name, tmp2409
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_906, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2593	#,
	.loc 1 7061 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2410
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_908, D.29059
	.loc 1 7060 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2593	#,
	.loc 1 7062 0
	movq	-8(%rbp), %rax	# name, tmp2411
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_910, D.29059
	.loc 1 7061 0
	cmpb	$97, %al	#, D.29059
	jne	.L2593	#,
	.loc 1 7063 0
	movq	-8(%rbp), %rax	# name, tmp2412
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_912, D.29059
	.loc 1 7062 0
	cmpb	$114, %al	#, D.29059
	jne	.L2593	#,
	.loc 1 7065 0
	movl	$171, %eax	#, D.29058
	jmp	.L2207	#
.L2593:
	.loc 1 7068 0
	jmp	.L2208	#
.L2587:
	.loc 1 7071 0
	movq	-8(%rbp), %rax	# name, tmp2413
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_915, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$108, %eax	#, D.29060
	je	.L2595	#,
	cmpl	$109, %eax	#, D.29060
	je	.L2596	#,
	.loc 1 7109 0
	jmp	.L2208	#
.L2595:
	.loc 1 7074 0
	movq	-8(%rbp), %rax	# name, tmp2414
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_918, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2597	#,
	.loc 1 7075 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2415
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_920, D.29059
	.loc 1 7074 0 discriminator 1
	cmpb	$99, %al	#, D.29059
	jne	.L2597	#,
	.loc 1 7076 0
	movq	-8(%rbp), %rax	# name, tmp2416
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_922, D.29059
	.loc 1 7075 0
	cmpb	$116, %al	#, D.29059
	jne	.L2597	#,
	.loc 1 7078 0
	movl	$-174, %eax	#, D.29058
	jmp	.L2207	#
.L2597:
	.loc 1 7081 0
	jmp	.L2208	#
.L2596:
	.loc 1 7084 0
	movq	-8(%rbp), %rax	# name, tmp2417
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_925, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$99, %eax	#, D.29060
	je	.L2599	#,
	cmpl	$103, %eax	#, D.29060
	je	.L2600	#,
	.loc 1 7105 0
	jmp	.L2208	#
.L2599:
	.loc 1 7087 0
	movq	-8(%rbp), %rax	# name, tmp2418
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_928, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2601	#,
	.loc 1 7088 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2419
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_930, D.29059
	.loc 1 7087 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2601	#,
	.loc 1 7090 0
	movl	$-175, %eax	#, D.29058
	jmp	.L2207	#
.L2601:
	.loc 1 7093 0
	jmp	.L2208	#
.L2600:
	.loc 1 7096 0
	movq	-8(%rbp), %rax	# name, tmp2420
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_933, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2602	#,
	.loc 1 7097 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2421
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_935, D.29059
	.loc 1 7096 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2602	#,
	.loc 1 7099 0
	movl	$-176, %eax	#, D.29058
	jmp	.L2207	#
.L2602:
	.loc 1 7102 0
	jmp	.L2208	#
.L2588:
	.loc 1 7113 0
	movq	-8(%rbp), %rax	# name, tmp2422
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_938, D.29059
	cmpb	$109, %al	#, D.29059
	jne	.L2603	#,
	.loc 1 7115 0
	movq	-8(%rbp), %rax	# name, tmp2423
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_940, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$99, %eax	#, D.29060
	je	.L2605	#,
	cmpl	$103, %eax	#, D.29060
	je	.L2606	#,
	.loc 1 7136 0
	jmp	.L2208	#
.L2605:
	.loc 1 7118 0
	movq	-8(%rbp), %rax	# name, tmp2424
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_943, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2607	#,
	.loc 1 7119 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2425
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_945, D.29059
	.loc 1 7118 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2607	#,
	.loc 1 7121 0
	movl	$-189, %eax	#, D.29058
	jmp	.L2207	#
.L2607:
	.loc 1 7124 0
	jmp	.L2208	#
.L2606:
	.loc 1 7127 0
	movq	-8(%rbp), %rax	# name, tmp2426
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_948, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2608	#,
	.loc 1 7128 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2427
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_950, D.29059
	.loc 1 7127 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2608	#,
	.loc 1 7130 0
	movl	$-190, %eax	#, D.29058
	jmp	.L2207	#
.L2608:
	.loc 1 7133 0
	jmp	.L2208	#
.L2603:
	.loc 1 7140 0
	jmp	.L2208	#
.L2589:
	.loc 1 7143 0
	movq	-8(%rbp), %rax	# name, tmp2428
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_953, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2609	#,
	.loc 1 7144 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2429
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_955, D.29059
	.loc 1 7143 0 discriminator 1
	cmpb	$107, %al	#, D.29059
	jne	.L2609	#,
	.loc 1 7145 0
	movq	-8(%rbp), %rax	# name, tmp2430
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_957, D.29059
	.loc 1 7144 0
	cmpb	$101, %al	#, D.29059
	jne	.L2609	#,
	.loc 1 7146 0
	movq	-8(%rbp), %rax	# name, tmp2431
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_959, D.29059
	.loc 1 7145 0
	cmpb	$116, %al	#, D.29059
	jne	.L2609	#,
	.loc 1 7148 0
	movl	$-196, %eax	#, D.29058
	jmp	.L2207	#
.L2609:
	.loc 1 7151 0
	jmp	.L2208	#
.L2590:
	.loc 1 7154 0
	movq	-8(%rbp), %rax	# name, tmp2432
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_962, D.29059
	cmpb	$108, %al	#, D.29059
	jne	.L2610	#,
	.loc 1 7155 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2433
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_964, D.29059
	.loc 1 7154 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2610	#,
	.loc 1 7156 0
	movq	-8(%rbp), %rax	# name, tmp2434
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_966, D.29059
	.loc 1 7155 0
	cmpb	$99, %al	#, D.29059
	jne	.L2610	#,
	.loc 1 7157 0
	movq	-8(%rbp), %rax	# name, tmp2435
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_968, D.29059
	.loc 1 7156 0
	cmpb	$101, %al	#, D.29059
	jne	.L2610	#,
	.loc 1 7159 0
	movl	$-199, %eax	#, D.29058
	jmp	.L2207	#
.L2610:
	.loc 1 7162 0
	jmp	.L2208	#
.L2591:
	.loc 1 7165 0
	movq	-8(%rbp), %rax	# name, tmp2436
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_971, D.29059
	cmpb	$98, %al	#, D.29059
	jne	.L2611	#,
	.loc 1 7166 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2437
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_973, D.29059
	.loc 1 7165 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2611	#,
	.loc 1 7167 0
	movq	-8(%rbp), %rax	# name, tmp2438
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_975, D.29059
	.loc 1 7166 0
	cmpb	$116, %al	#, D.29059
	jne	.L2611	#,
	.loc 1 7168 0
	movq	-8(%rbp), %rax	# name, tmp2439
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_977, D.29059
	.loc 1 7167 0
	cmpb	$114, %al	#, D.29059
	jne	.L2611	#,
	.loc 1 7170 0
	movl	$-207, %eax	#, D.29058
	jmp	.L2207	#
.L2611:
	.loc 1 7173 0
	jmp	.L2208	#
.L2592:
	.loc 1 7176 0
	movq	-8(%rbp), %rax	# name, tmp2440
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_980, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2612	#,
	.loc 1 7177 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2441
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_982, D.29059
	.loc 1 7176 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2612	#,
	.loc 1 7178 0
	movq	-8(%rbp), %rax	# name, tmp2442
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_984, D.29059
	.loc 1 7177 0
	cmpb	$101, %al	#, D.29059
	jne	.L2612	#,
	.loc 1 7179 0
	movq	-8(%rbp), %rax	# name, tmp2443
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_986, D.29059
	.loc 1 7178 0
	cmpb	$109, %al	#, D.29059
	jne	.L2612	#,
	.loc 1 7181 0
	movl	$-213, %eax	#, D.29058
	jmp	.L2207	#
.L2612:
	.loc 1 7184 0
	jmp	.L2208	#
.L2537:
	.loc 1 7191 0
	movq	-8(%rbp), %rax	# name, tmp2444
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_989, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2613	#,
	.loc 1 7193 0
	movq	-8(%rbp), %rax	# name, tmp2445
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_991, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$108, %eax	#, D.29060
	je	.L2615	#,
	cmpl	$112, %eax	#, D.29060
	je	.L2616	#,
	.loc 1 7231 0
	jmp	.L2208	#
.L2615:
	.loc 1 7196 0
	movq	-8(%rbp), %rax	# name, tmp2446
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_994, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2618	#,
	cmpl	$105, %eax	#, D.29060
	je	.L2619	#,
	.loc 1 7217 0
	jmp	.L2208	#
.L2618:
	.loc 1 7199 0
	movq	-8(%rbp), %rax	# name, tmp2447
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_997, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2620	#,
	.loc 1 7200 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2448
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_999, D.29059
	.loc 1 7199 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2620	#,
	.loc 1 7202 0
	movl	$227, %eax	#, D.29058
	jmp	.L2207	#
.L2620:
	.loc 1 7205 0
	jmp	.L2208	#
.L2619:
	.loc 1 7208 0
	movq	-8(%rbp), %rax	# name, tmp2449
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1002, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2621	#,
	.loc 1 7209 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2450
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1004, D.29059
	.loc 1 7208 0 discriminator 1
	cmpb	$107, %al	#, D.29059
	jne	.L2621	#,
	.loc 1 7211 0
	movl	$-228, %eax	#, D.29058
	jmp	.L2207	#
.L2621:
	.loc 1 7214 0
	jmp	.L2208	#
.L2616:
	.loc 1 7221 0
	movq	-8(%rbp), %rax	# name, tmp2451
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1007, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2622	#,
	.loc 1 7222 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2452
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1009, D.29059
	.loc 1 7221 0 discriminator 1
	cmpb	$99, %al	#, D.29059
	jne	.L2622	#,
	.loc 1 7223 0
	movq	-8(%rbp), %rax	# name, tmp2453
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1011, D.29059
	.loc 1 7222 0
	cmpb	$107, %al	#, D.29059
	jne	.L2622	#,
	.loc 1 7225 0
	movl	$-229, %eax	#, D.29058
	jmp	.L2207	#
.L2622:
	.loc 1 7228 0
	jmp	.L2208	#
.L2613:
	.loc 1 7235 0
	jmp	.L2208	#
.L2538:
	.loc 1 7238 0
	movq	-8(%rbp), %rax	# name, tmp2454
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1014, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2623	#,
	.loc 1 7239 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2455
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1016, D.29059
	.loc 1 7238 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2623	#,
	.loc 1 7240 0
	movq	-8(%rbp), %rax	# name, tmp2456
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1018, D.29059
	.loc 1 7239 0
	cmpb	$117, %al	#, D.29059
	jne	.L2623	#,
	.loc 1 7241 0
	movq	-8(%rbp), %rax	# name, tmp2457
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1020, D.29059
	.loc 1 7240 0
	cmpb	$101, %al	#, D.29059
	jne	.L2623	#,
	.loc 1 7242 0
	movq	-8(%rbp), %rax	# name, tmp2458
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1022, D.29059
	.loc 1 7241 0
	cmpb	$115, %al	#, D.29059
	jne	.L2623	#,
	.loc 1 7244 0
	movl	$-235, %eax	#, D.29058
	jmp	.L2207	#
.L2623:
	.loc 1 7247 0
	jmp	.L2208	#
.L2191:
	.loc 1 7254 0
	movq	-8(%rbp), %rax	# name, tmp2459
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$68, %eax	#, tmp2460
	cmpl	$51, %eax	#, tmp2460
	ja	.L2897	#,
	movl	%eax, %eax	# tmp2460, tmp2461
	movq	.L2626(,%rax,8), %rax	#, tmp2462
	jmp	*%rax	# tmp2462
	.section	.rodata
	.align 8
	.align 4
.L2626:
	.quad	.L2625
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2627
	.quad	.L2897
	.quad	.L2897
	.quad	.L2628
	.quad	.L2629
	.quad	.L2630
	.quad	.L2897
	.quad	.L2631
	.quad	.L2632
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2897
	.quad	.L2633
	.quad	.L2897
	.quad	.L2897
	.quad	.L2634
	.quad	.L2635
	.quad	.L2897
	.quad	.L2636
	.quad	.L2637
	.quad	.L2638
	.quad	.L2639
	.quad	.L2897
	.quad	.L2640
	.text
.L2625:
	.loc 1 7257 0
	movq	-8(%rbp), %rax	# name, tmp2463
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1027, D.29059
	cmpb	$69, %al	#, D.29059
	jne	.L2641	#,
	.loc 1 7258 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2464
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1029, D.29059
	.loc 1 7257 0 discriminator 1
	cmpb	$83, %al	#, D.29059
	jne	.L2641	#,
	.loc 1 7259 0
	movq	-8(%rbp), %rax	# name, tmp2465
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1031, D.29059
	.loc 1 7258 0
	cmpb	$84, %al	#, D.29059
	jne	.L2641	#,
	.loc 1 7260 0
	movq	-8(%rbp), %rax	# name, tmp2466
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1033, D.29059
	.loc 1 7259 0
	cmpb	$82, %al	#, D.29059
	jne	.L2641	#,
	.loc 1 7261 0
	movq	-8(%rbp), %rax	# name, tmp2467
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1035, D.29059
	.loc 1 7260 0
	cmpb	$79, %al	#, D.29059
	jne	.L2641	#,
	.loc 1 7262 0
	movq	-8(%rbp), %rax	# name, tmp2468
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1037, D.29059
	.loc 1 7261 0
	cmpb	$89, %al	#, D.29059
	jne	.L2641	#,
	.loc 1 7264 0
	movl	$9, %eax	#, D.29058
	jmp	.L2207	#
.L2641:
	.loc 1 7267 0
	jmp	.L2208	#
.L2627:
	.loc 1 7270 0
	movq	-8(%rbp), %rax	# name, tmp2469
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1040, D.29059
	cmpb	$95, %al	#, D.29059
	jne	.L2642	#,
	.loc 1 7271 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2470
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1042, D.29059
	.loc 1 7270 0 discriminator 1
	cmpb	$69, %al	#, D.29059
	jne	.L2642	#,
	.loc 1 7272 0
	movq	-8(%rbp), %rax	# name, tmp2471
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1044, D.29059
	.loc 1 7271 0
	cmpb	$78, %al	#, D.29059
	jne	.L2642	#,
	.loc 1 7273 0
	movq	-8(%rbp), %rax	# name, tmp2472
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1046, D.29059
	.loc 1 7272 0
	cmpb	$68, %al	#, D.29059
	jne	.L2642	#,
	.loc 1 7274 0
	movq	-8(%rbp), %rax	# name, tmp2473
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1048, D.29059
	.loc 1 7273 0
	cmpb	$95, %al	#, D.29059
	jne	.L2642	#,
	.loc 1 7275 0
	movq	-8(%rbp), %rax	# name, tmp2474
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1050, D.29059
	.loc 1 7274 0
	cmpb	$95, %al	#, D.29059
	jne	.L2642	#,
	.loc 1 7277 0
	movl	$5, %eax	#, D.29058
	jmp	.L2207	#
.L2642:
	.loc 1 7280 0
	jmp	.L2208	#
.L2628:
	.loc 1 7283 0
	movq	-8(%rbp), %rax	# name, tmp2475
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1053, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2643	#,
	.loc 1 7284 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2476
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1055, D.29059
	.loc 1 7283 0 discriminator 1
	cmpb	$110, %al	#, D.29059
	jne	.L2643	#,
	.loc 1 7285 0
	movq	-8(%rbp), %rax	# name, tmp2477
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1057, D.29059
	.loc 1 7284 0
	cmpb	$109, %al	#, D.29059
	jne	.L2643	#,
	.loc 1 7286 0
	movq	-8(%rbp), %rax	# name, tmp2478
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1059, D.29059
	.loc 1 7285 0
	cmpb	$111, %al	#, D.29059
	jne	.L2643	#,
	.loc 1 7287 0
	movq	-8(%rbp), %rax	# name, tmp2479
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1061, D.29059
	.loc 1 7286 0
	cmpb	$100, %al	#, D.29059
	jne	.L2643	#,
	.loc 1 7288 0
	movq	-8(%rbp), %rax	# name, tmp2480
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1063, D.29059
	.loc 1 7287 0
	cmpb	$101, %al	#, D.29059
	jne	.L2643	#,
	.loc 1 7290 0
	movl	$-19, %eax	#, D.29058
	jmp	.L2207	#
.L2643:
	.loc 1 7293 0
	jmp	.L2208	#
.L2629:
	.loc 1 7296 0
	movq	-8(%rbp), %rax	# name, tmp2481
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1066, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2644	#,
	.loc 1 7297 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2482
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1068, D.29059
	.loc 1 7296 0 discriminator 1
	cmpb	$110, %al	#, D.29059
	jne	.L2644	#,
	.loc 1 7298 0
	movq	-8(%rbp), %rax	# name, tmp2483
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1070, D.29059
	.loc 1 7297 0
	cmpb	$110, %al	#, D.29059
	jne	.L2644	#,
	.loc 1 7299 0
	movq	-8(%rbp), %rax	# name, tmp2484
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1072, D.29059
	.loc 1 7298 0
	cmpb	$101, %al	#, D.29059
	jne	.L2644	#,
	.loc 1 7300 0
	movq	-8(%rbp), %rax	# name, tmp2485
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1074, D.29059
	.loc 1 7299 0
	cmpb	$99, %al	#, D.29059
	jne	.L2644	#,
	.loc 1 7301 0
	movq	-8(%rbp), %rax	# name, tmp2486
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1076, D.29059
	.loc 1 7300 0
	cmpb	$116, %al	#, D.29059
	jne	.L2644	#,
	.loc 1 7303 0
	movl	$-32, %eax	#, D.29058
	jmp	.L2207	#
.L2644:
	.loc 1 7306 0
	jmp	.L2208	#
.L2630:
	.loc 1 7309 0
	movq	-8(%rbp), %rax	# name, tmp2487
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1079, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$98, %eax	#, D.29060
	je	.L2646	#,
	cmpl	$101, %eax	#, D.29060
	je	.L2647	#,
	.loc 1 7336 0
	jmp	.L2208	#
.L2646:
	.loc 1 7312 0
	movq	-8(%rbp), %rax	# name, tmp2488
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1082, D.29059
	cmpb	$109, %al	#, D.29059
	jne	.L2648	#,
	.loc 1 7313 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2489
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1084, D.29059
	.loc 1 7312 0 discriminator 1
	cmpb	$111, %al	#, D.29059
	jne	.L2648	#,
	.loc 1 7314 0
	movq	-8(%rbp), %rax	# name, tmp2490
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1086, D.29059
	.loc 1 7313 0
	cmpb	$112, %al	#, D.29059
	jne	.L2648	#,
	.loc 1 7315 0
	movq	-8(%rbp), %rax	# name, tmp2491
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1088, D.29059
	.loc 1 7314 0
	cmpb	$101, %al	#, D.29059
	jne	.L2648	#,
	.loc 1 7316 0
	movq	-8(%rbp), %rax	# name, tmp2492
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1090, D.29059
	.loc 1 7315 0
	cmpb	$110, %al	#, D.29059
	jne	.L2648	#,
	.loc 1 7318 0
	movl	$-37, %eax	#, D.29058
	jmp	.L2207	#
.L2648:
	.loc 1 7321 0
	jmp	.L2208	#
.L2647:
	.loc 1 7324 0
	movq	-8(%rbp), %rax	# name, tmp2493
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1093, D.29059
	cmpb	$102, %al	#, D.29059
	jne	.L2649	#,
	.loc 1 7325 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2494
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1095, D.29059
	.loc 1 7324 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2649	#,
	.loc 1 7326 0
	movq	-8(%rbp), %rax	# name, tmp2495
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1097, D.29059
	.loc 1 7325 0
	cmpb	$110, %al	#, D.29059
	jne	.L2649	#,
	.loc 1 7327 0
	movq	-8(%rbp), %rax	# name, tmp2496
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1099, D.29059
	.loc 1 7326 0
	cmpb	$101, %al	#, D.29059
	jne	.L2649	#,
	.loc 1 7328 0
	movq	-8(%rbp), %rax	# name, tmp2497
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1101, D.29059
	.loc 1 7327 0
	cmpb	$100, %al	#, D.29059
	jne	.L2649	#,
	.loc 1 7330 0
	movl	$38, %eax	#, D.29058
	jmp	.L2207	#
.L2649:
	.loc 1 7333 0
	jmp	.L2208	#
.L2631:
	.loc 1 7340 0
	movq	-8(%rbp), %rax	# name, tmp2498
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1104, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2650	#,
	.loc 1 7341 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2499
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1106, D.29059
	.loc 1 7340 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2650	#,
	.loc 1 7342 0
	movq	-8(%rbp), %rax	# name, tmp2500
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1108, D.29059
	.loc 1 7341 0
	cmpb	$101, %al	#, D.29059
	jne	.L2650	#,
	.loc 1 7343 0
	movq	-8(%rbp), %rax	# name, tmp2501
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1110, D.29059
	.loc 1 7342 0
	cmpb	$97, %al	#, D.29059
	jne	.L2650	#,
	.loc 1 7344 0
	movq	-8(%rbp), %rax	# name, tmp2502
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1112, D.29059
	.loc 1 7343 0
	cmpb	$99, %al	#, D.29059
	jne	.L2650	#,
	.loc 1 7345 0
	movq	-8(%rbp), %rax	# name, tmp2503
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1114, D.29059
	.loc 1 7344 0
	cmpb	$104, %al	#, D.29059
	jne	.L2650	#,
	.loc 1 7347 0
	movl	$63, %eax	#, D.29058
	jmp	.L2207	#
.L2650:
	.loc 1 7350 0
	jmp	.L2208	#
.L2632:
	.loc 1 7353 0
	movq	-8(%rbp), %rax	# name, tmp2504
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1117, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2651	#,
	.loc 1 7354 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2505
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1119, D.29059
	.loc 1 7353 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2651	#,
	.loc 1 7355 0
	movq	-8(%rbp), %rax	# name, tmp2506
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1121, D.29059
	.loc 1 7354 0
	cmpb	$112, %al	#, D.29059
	jne	.L2651	#,
	.loc 1 7357 0
	movq	-8(%rbp), %rax	# name, tmp2507
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1123, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$103, %eax	#, D.29060
	je	.L2653	#,
	cmpl	$112, %eax	#, D.29060
	je	.L2654	#,
	.loc 1 7378 0
	jmp	.L2208	#
.L2653:
	.loc 1 7360 0
	movq	-8(%rbp), %rax	# name, tmp2508
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1126, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2655	#,
	.loc 1 7361 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2509
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1128, D.29059
	.loc 1 7360 0 discriminator 1
	cmpb	$112, %al	#, D.29059
	jne	.L2655	#,
	.loc 1 7363 0
	movl	$-80, %eax	#, D.29058
	jmp	.L2207	#
.L2655:
	.loc 1 7366 0
	jmp	.L2208	#
.L2654:
	.loc 1 7369 0
	movq	-8(%rbp), %rax	# name, tmp2510
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1131, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2656	#,
	.loc 1 7370 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2511
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1133, D.29059
	.loc 1 7369 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2656	#,
	.loc 1 7372 0
	movl	$-81, %eax	#, D.29058
	jmp	.L2207	#
.L2656:
	.loc 1 7375 0
	jmp	.L2208	#
.L2651:
	.loc 1 7382 0
	jmp	.L2208	#
.L2633:
	.loc 1 7385 0
	movq	-8(%rbp), %rax	# name, tmp2512
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1136, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2657	#,
	.loc 1 7386 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2513
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1138, D.29059
	.loc 1 7385 0 discriminator 1
	cmpb	$102, %al	#, D.29059
	jne	.L2657	#,
	.loc 1 7387 0
	movq	-8(%rbp), %rax	# name, tmp2514
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1140, D.29059
	.loc 1 7386 0
	cmpb	$105, %al	#, D.29059
	jne	.L2657	#,
	.loc 1 7388 0
	movq	-8(%rbp), %rax	# name, tmp2515
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1142, D.29059
	.loc 1 7387 0
	cmpb	$114, %al	#, D.29059
	jne	.L2657	#,
	.loc 1 7389 0
	movq	-8(%rbp), %rax	# name, tmp2516
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1144, D.29059
	.loc 1 7388 0
	cmpb	$115, %al	#, D.29059
	jne	.L2657	#,
	.loc 1 7390 0
	movq	-8(%rbp), %rax	# name, tmp2517
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1146, D.29059
	.loc 1 7389 0
	cmpb	$116, %al	#, D.29059
	jne	.L2657	#,
	.loc 1 7392 0
	movl	$-109, %eax	#, D.29058
	jmp	.L2207	#
.L2657:
	.loc 1 7395 0
	jmp	.L2208	#
.L2634:
	.loc 1 7398 0
	movq	-8(%rbp), %rax	# name, tmp2518
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1149, D.29059
	cmpb	$112, %al	#, D.29059
	jne	.L2658	#,
	.loc 1 7399 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2519
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1151, D.29059
	.loc 1 7398 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2658	#,
	.loc 1 7400 0
	movq	-8(%rbp), %rax	# name, tmp2520
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1153, D.29059
	.loc 1 7399 0
	cmpb	$110, %al	#, D.29059
	jne	.L2658	#,
	.loc 1 7401 0
	movq	-8(%rbp), %rax	# name, tmp2521
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1155, D.29059
	.loc 1 7400 0
	cmpb	$100, %al	#, D.29059
	jne	.L2658	#,
	.loc 1 7402 0
	movq	-8(%rbp), %rax	# name, tmp2522
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1157, D.29059
	.loc 1 7401 0
	cmpb	$105, %al	#, D.29059
	jne	.L2658	#,
	.loc 1 7403 0
	movq	-8(%rbp), %rax	# name, tmp2523
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1159, D.29059
	.loc 1 7402 0
	cmpb	$114, %al	#, D.29059
	jne	.L2658	#,
	.loc 1 7405 0
	movl	$-134, %eax	#, D.29058
	jmp	.L2207	#
.L2658:
	.loc 1 7408 0
	jmp	.L2208	#
.L2635:
	.loc 1 7411 0
	movq	-8(%rbp), %rax	# name, tmp2524
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1162, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2659	#,
	.loc 1 7412 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2525
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1164, D.29059
	.loc 1 7411 0 discriminator 1
	cmpb	$99, %al	#, D.29059
	jne	.L2659	#,
	.loc 1 7413 0
	movq	-8(%rbp), %rax	# name, tmp2526
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1166, D.29059
	.loc 1 7412 0
	cmpb	$107, %al	#, D.29059
	jne	.L2659	#,
	.loc 1 7414 0
	movq	-8(%rbp), %rax	# name, tmp2527
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1168, D.29059
	.loc 1 7413 0
	cmpb	$97, %al	#, D.29059
	jne	.L2659	#,
	.loc 1 7415 0
	movq	-8(%rbp), %rax	# name, tmp2528
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1170, D.29059
	.loc 1 7414 0
	cmpb	$103, %al	#, D.29059
	jne	.L2659	#,
	.loc 1 7416 0
	movq	-8(%rbp), %rax	# name, tmp2529
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1172, D.29059
	.loc 1 7415 0
	cmpb	$101, %al	#, D.29059
	jne	.L2659	#,
	.loc 1 7418 0
	movl	$139, %eax	#, D.29058
	jmp	.L2207	#
.L2659:
	.loc 1 7421 0
	jmp	.L2208	#
.L2636:
	.loc 1 7424 0
	movq	-8(%rbp), %rax	# name, tmp2530
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1175, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2660	#,
	.loc 1 7426 0
	movq	-8(%rbp), %rax	# name, tmp2531
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1177, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$113, %eax	#, D.29060
	je	.L2662	#,
	cmpl	$118, %eax	#, D.29060
	je	.L2663	#,
	cmpl	$97, %eax	#, D.29060
	je	.L2664	#,
	.loc 1 7462 0
	jmp	.L2208	#
.L2664:
	.loc 1 7429 0
	movq	-8(%rbp), %rax	# name, tmp2532
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1180, D.29059
	cmpb	$100, %al	#, D.29059
	jne	.L2665	#,
	.loc 1 7430 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2533
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1182, D.29059
	.loc 1 7429 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2665	#,
	.loc 1 7431 0
	movq	-8(%rbp), %rax	# name, tmp2534
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1184, D.29059
	.loc 1 7430 0
	cmpb	$105, %al	#, D.29059
	jne	.L2665	#,
	.loc 1 7432 0
	movq	-8(%rbp), %rax	# name, tmp2535
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1186, D.29059
	.loc 1 7431 0
	cmpb	$114, %al	#, D.29059
	jne	.L2665	#,
	.loc 1 7434 0
	movl	$-155, %eax	#, D.29058
	jmp	.L2207	#
.L2665:
	.loc 1 7437 0
	jmp	.L2208	#
.L2662:
	.loc 1 7440 0
	movq	-8(%rbp), %rax	# name, tmp2536
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1189, D.29059
	cmpb	$117, %al	#, D.29059
	jne	.L2666	#,
	.loc 1 7441 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2537
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1191, D.29059
	.loc 1 7440 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2666	#,
	.loc 1 7442 0
	movq	-8(%rbp), %rax	# name, tmp2538
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1193, D.29059
	.loc 1 7441 0
	cmpb	$114, %al	#, D.29059
	jne	.L2666	#,
	.loc 1 7443 0
	movq	-8(%rbp), %rax	# name, tmp2539
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1195, D.29059
	.loc 1 7442 0
	cmpb	$101, %al	#, D.29059
	jne	.L2666	#,
	.loc 1 7445 0
	movl	$163, %eax	#, D.29058
	jmp	.L2207	#
.L2666:
	.loc 1 7448 0
	jmp	.L2208	#
.L2663:
	.loc 1 7451 0
	movq	-8(%rbp), %rax	# name, tmp2540
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1198, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2667	#,
	.loc 1 7452 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2541
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1200, D.29059
	.loc 1 7451 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2667	#,
	.loc 1 7453 0
	movq	-8(%rbp), %rax	# name, tmp2542
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1202, D.29059
	.loc 1 7452 0
	cmpb	$115, %al	#, D.29059
	jne	.L2667	#,
	.loc 1 7454 0
	movq	-8(%rbp), %rax	# name, tmp2543
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1204, D.29059
	.loc 1 7453 0
	cmpb	$101, %al	#, D.29059
	jne	.L2667	#,
	.loc 1 7456 0
	movl	$-166, %eax	#, D.29058
	jmp	.L2207	#
.L2667:
	.loc 1 7459 0
	jmp	.L2208	#
.L2660:
	.loc 1 7466 0
	jmp	.L2208	#
.L2637:
	.loc 1 7469 0
	movq	-8(%rbp), %rax	# name, tmp2544
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1207, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$104, %eax	#, D.29060
	je	.L2669	#,
	cmpl	$104, %eax	#, D.29060
	jg	.L2670	#,
	cmpl	$101, %eax	#, D.29060
	je	.L2671	#,
	.loc 1 7590 0
	jmp	.L2208	#
.L2670:
	.loc 1 7469 0
	cmpl	$112, %eax	#, D.29060
	je	.L2672	#,
	cmpl	$121, %eax	#, D.29060
	je	.L2673	#,
	.loc 1 7590 0
	jmp	.L2208	#
.L2671:
	.loc 1 7472 0
	movq	-8(%rbp), %rax	# name, tmp2545
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1210, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2675	#,
	cmpl	$116, %eax	#, D.29060
	je	.L2676	#,
	.loc 1 7497 0
	jmp	.L2208	#
.L2675:
	.loc 1 7475 0
	movq	-8(%rbp), %rax	# name, tmp2546
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1213, D.29059
	cmpb	$107, %al	#, D.29059
	jne	.L2677	#,
	.loc 1 7476 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2547
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1215, D.29059
	.loc 1 7475 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2677	#,
	.loc 1 7477 0
	movq	-8(%rbp), %rax	# name, tmp2548
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1217, D.29059
	.loc 1 7476 0
	cmpb	$105, %al	#, D.29059
	jne	.L2677	#,
	.loc 1 7478 0
	movq	-8(%rbp), %rax	# name, tmp2549
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1219, D.29059
	.loc 1 7477 0
	cmpb	$114, %al	#, D.29059
	jne	.L2677	#,
	.loc 1 7480 0
	movl	$-173, %eax	#, D.29058
	jmp	.L2207	#
.L2677:
	.loc 1 7483 0
	jmp	.L2208	#
.L2676:
	.loc 1 7486 0
	movq	-8(%rbp), %rax	# name, tmp2550
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1222, D.29059
	cmpb	$112, %al	#, D.29059
	jne	.L2678	#,
	.loc 1 7487 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2551
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1224, D.29059
	.loc 1 7486 0 discriminator 1
	cmpb	$103, %al	#, D.29059
	jne	.L2678	#,
	.loc 1 7488 0
	movq	-8(%rbp), %rax	# name, tmp2552
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1226, D.29059
	.loc 1 7487 0
	cmpb	$114, %al	#, D.29059
	jne	.L2678	#,
	.loc 1 7489 0
	movq	-8(%rbp), %rax	# name, tmp2553
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1228, D.29059
	.loc 1 7488 0
	cmpb	$112, %al	#, D.29059
	jne	.L2678	#,
	.loc 1 7491 0
	movl	$-182, %eax	#, D.29058
	jmp	.L2207	#
.L2678:
	.loc 1 7494 0
	jmp	.L2208	#
.L2669:
	.loc 1 7501 0
	movq	-8(%rbp), %rax	# name, tmp2554
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1231, D.29059
	cmpb	$109, %al	#, D.29059
	jne	.L2679	#,
	.loc 1 7502 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2555
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1233, D.29059
	.loc 1 7501 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2679	#,
	.loc 1 7503 0
	movq	-8(%rbp), %rax	# name, tmp2556
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1235, D.29059
	.loc 1 7502 0
	cmpb	$101, %al	#, D.29059
	jne	.L2679	#,
	.loc 1 7504 0
	movq	-8(%rbp), %rax	# name, tmp2557
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1237, D.29059
	.loc 1 7503 0
	cmpb	$97, %al	#, D.29059
	jne	.L2679	#,
	.loc 1 7505 0
	movq	-8(%rbp), %rax	# name, tmp2558
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1239, D.29059
	.loc 1 7504 0
	cmpb	$100, %al	#, D.29059
	jne	.L2679	#,
	.loc 1 7507 0
	movl	$-191, %eax	#, D.29058
	jmp	.L2207	#
.L2679:
	.loc 1 7510 0
	jmp	.L2208	#
.L2672:
	.loc 1 7513 0
	movq	-8(%rbp), %rax	# name, tmp2559
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1242, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2680	#,
	.loc 1 7514 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2560
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1244, D.29059
	.loc 1 7513 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2680	#,
	.loc 1 7515 0
	movq	-8(%rbp), %rax	# name, tmp2561
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1246, D.29059
	.loc 1 7514 0
	cmpb	$110, %al	#, D.29059
	jne	.L2680	#,
	.loc 1 7516 0
	movq	-8(%rbp), %rax	# name, tmp2562
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1248, D.29059
	.loc 1 7515 0
	cmpb	$116, %al	#, D.29059
	jne	.L2680	#,
	.loc 1 7517 0
	movq	-8(%rbp), %rax	# name, tmp2563
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1250, D.29059
	.loc 1 7516 0
	cmpb	$102, %al	#, D.29059
	jne	.L2680	#,
	.loc 1 7519 0
	movl	$-201, %eax	#, D.29058
	jmp	.L2207	#
.L2680:
	.loc 1 7522 0
	jmp	.L2208	#
.L2673:
	.loc 1 7525 0
	movq	-8(%rbp), %rax	# name, tmp2564
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1253, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$109, %eax	#, D.29060
	je	.L2682	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2683	#,
	.loc 1 7586 0
	jmp	.L2208	#
.L2682:
	.loc 1 7528 0
	movq	-8(%rbp), %rax	# name, tmp2565
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1256, D.29059
	cmpb	$108, %al	#, D.29059
	jne	.L2684	#,
	.loc 1 7529 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2566
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1258, D.29059
	.loc 1 7528 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2684	#,
	.loc 1 7530 0
	movq	-8(%rbp), %rax	# name, tmp2567
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1260, D.29059
	.loc 1 7529 0
	cmpb	$110, %al	#, D.29059
	jne	.L2684	#,
	.loc 1 7531 0
	movq	-8(%rbp), %rax	# name, tmp2568
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1262, D.29059
	.loc 1 7530 0
	cmpb	$107, %al	#, D.29059
	jne	.L2684	#,
	.loc 1 7533 0
	movl	$-208, %eax	#, D.29058
	jmp	.L2207	#
.L2684:
	.loc 1 7536 0
	jmp	.L2208	#
.L2683:
	.loc 1 7539 0
	movq	-8(%rbp), %rax	# name, tmp2569
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1265, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$111, %eax	#, D.29060
	je	.L2686	#,
	cmpl	$111, %eax	#, D.29060
	jg	.L2687	#,
	cmpl	$99, %eax	#, D.29060
	je	.L2688	#,
	.loc 1 7582 0
	jmp	.L2208	#
.L2687:
	.loc 1 7539 0
	cmpl	$114, %eax	#, D.29060
	je	.L2689	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2690	#,
	.loc 1 7582 0
	jmp	.L2208	#
.L2688:
	.loc 1 7542 0
	movq	-8(%rbp), %rax	# name, tmp2570
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1268, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2691	#,
	.loc 1 7543 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2571
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1270, D.29059
	.loc 1 7542 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2691	#,
	.loc 1 7544 0
	movq	-8(%rbp), %rax	# name, tmp2572
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1272, D.29059
	.loc 1 7543 0
	cmpb	$108, %al	#, D.29059
	jne	.L2691	#,
	.loc 1 7546 0
	movl	$-209, %eax	#, D.29058
	jmp	.L2207	#
.L2691:
	.loc 1 7549 0
	jmp	.L2208	#
.L2686:
	.loc 1 7552 0
	movq	-8(%rbp), %rax	# name, tmp2573
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1275, D.29059
	cmpb	$112, %al	#, D.29059
	jne	.L2692	#,
	.loc 1 7553 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2574
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1277, D.29059
	.loc 1 7552 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2692	#,
	.loc 1 7554 0
	movq	-8(%rbp), %rax	# name, tmp2575
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1279, D.29059
	.loc 1 7553 0
	cmpb	$110, %al	#, D.29059
	jne	.L2692	#,
	.loc 1 7556 0
	movl	$-210, %eax	#, D.29058
	jmp	.L2207	#
.L2692:
	.loc 1 7559 0
	jmp	.L2208	#
.L2689:
	.loc 1 7562 0
	movq	-8(%rbp), %rax	# name, tmp2576
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1282, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2693	#,
	.loc 1 7563 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2577
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1284, D.29059
	.loc 1 7562 0 discriminator 1
	cmpb	$97, %al	#, D.29059
	jne	.L2693	#,
	.loc 1 7564 0
	movq	-8(%rbp), %rax	# name, tmp2578
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1286, D.29059
	.loc 1 7563 0
	cmpb	$100, %al	#, D.29059
	jne	.L2693	#,
	.loc 1 7566 0
	movl	$-211, %eax	#, D.29058
	jmp	.L2207	#
.L2693:
	.loc 1 7569 0
	jmp	.L2208	#
.L2690:
	.loc 1 7572 0
	movq	-8(%rbp), %rax	# name, tmp2579
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1289, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2694	#,
	.loc 1 7573 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2580
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1291, D.29059
	.loc 1 7572 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2694	#,
	.loc 1 7574 0
	movq	-8(%rbp), %rax	# name, tmp2581
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1293, D.29059
	.loc 1 7573 0
	cmpb	$107, %al	#, D.29059
	jne	.L2694	#,
	.loc 1 7576 0
	movl	$-212, %eax	#, D.29058
	jmp	.L2207	#
.L2694:
	.loc 1 7579 0
	jmp	.L2208	#
.L2638:
	.loc 1 7594 0
	movq	-8(%rbp), %rax	# name, tmp2582
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1296, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2695	#,
	.loc 1 7595 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2583
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1298, D.29059
	.loc 1 7594 0 discriminator 1
	cmpb	$108, %al	#, D.29059
	jne	.L2695	#,
	.loc 1 7596 0
	movq	-8(%rbp), %rax	# name, tmp2584
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1300, D.29059
	.loc 1 7595 0
	cmpb	$108, %al	#, D.29059
	jne	.L2695	#,
	.loc 1 7597 0
	movq	-8(%rbp), %rax	# name, tmp2585
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1302, D.29059
	.loc 1 7596 0
	cmpb	$100, %al	#, D.29059
	jne	.L2695	#,
	.loc 1 7598 0
	movq	-8(%rbp), %rax	# name, tmp2586
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1304, D.29059
	.loc 1 7597 0
	cmpb	$105, %al	#, D.29059
	jne	.L2695	#,
	.loc 1 7599 0
	movq	-8(%rbp), %rax	# name, tmp2587
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1306, D.29059
	.loc 1 7598 0
	cmpb	$114, %al	#, D.29059
	jne	.L2695	#,
	.loc 1 7601 0
	movl	$-216, %eax	#, D.29058
	jmp	.L2207	#
.L2695:
	.loc 1 7604 0
	jmp	.L2208	#
.L2639:
	.loc 1 7607 0
	movq	-8(%rbp), %rax	# name, tmp2588
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1309, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$99, %eax	#, D.29060
	je	.L2697	#,
	cmpl	$110, %eax	#, D.29060
	je	.L2698	#,
	.loc 1 7634 0
	jmp	.L2208	#
.L2697:
	.loc 1 7610 0
	movq	-8(%rbp), %rax	# name, tmp2589
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1312, D.29059
	cmpb	$102, %al	#, D.29059
	jne	.L2699	#,
	.loc 1 7611 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2590
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1314, D.29059
	.loc 1 7610 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2699	#,
	.loc 1 7612 0
	movq	-8(%rbp), %rax	# name, tmp2591
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1316, D.29059
	.loc 1 7611 0
	cmpb	$114, %al	#, D.29059
	jne	.L2699	#,
	.loc 1 7613 0
	movq	-8(%rbp), %rax	# name, tmp2592
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1318, D.29059
	.loc 1 7612 0
	cmpb	$115, %al	#, D.29059
	jne	.L2699	#,
	.loc 1 7614 0
	movq	-8(%rbp), %rax	# name, tmp2593
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1320, D.29059
	.loc 1 7613 0
	cmpb	$116, %al	#, D.29059
	jne	.L2699	#,
	.loc 1 7616 0
	movl	$-224, %eax	#, D.29058
	jmp	.L2207	#
.L2699:
	.loc 1 7619 0
	jmp	.L2208	#
.L2698:
	.loc 1 7622 0
	movq	-8(%rbp), %rax	# name, tmp2594
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1323, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2700	#,
	.loc 1 7623 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2595
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1325, D.29059
	.loc 1 7622 0 discriminator 1
	cmpb	$104, %al	#, D.29059
	jne	.L2700	#,
	.loc 1 7624 0
	movq	-8(%rbp), %rax	# name, tmp2596
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1327, D.29059
	.loc 1 7623 0
	cmpb	$105, %al	#, D.29059
	jne	.L2700	#,
	.loc 1 7625 0
	movq	-8(%rbp), %rax	# name, tmp2597
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1329, D.29059
	.loc 1 7624 0
	cmpb	$102, %al	#, D.29059
	jne	.L2700	#,
	.loc 1 7626 0
	movq	-8(%rbp), %rax	# name, tmp2598
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1331, D.29059
	.loc 1 7625 0
	cmpb	$116, %al	#, D.29059
	jne	.L2700	#,
	.loc 1 7628 0
	movl	$-230, %eax	#, D.29058
	jmp	.L2207	#
.L2700:
	.loc 1 7631 0
	jmp	.L2208	#
.L2640:
	.loc 1 7638 0
	movq	-8(%rbp), %rax	# name, tmp2599
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1334, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2701	#,
	.loc 1 7639 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2600
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1336, D.29059
	.loc 1 7638 0 discriminator 1
	cmpb	$105, %al	#, D.29059
	jne	.L2701	#,
	.loc 1 7640 0
	movq	-8(%rbp), %rax	# name, tmp2601
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1338, D.29059
	.loc 1 7639 0
	cmpb	$116, %al	#, D.29059
	jne	.L2701	#,
	.loc 1 7641 0
	movq	-8(%rbp), %rax	# name, tmp2602
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1340, D.29059
	.loc 1 7640 0
	cmpb	$112, %al	#, D.29059
	jne	.L2701	#,
	.loc 1 7642 0
	movq	-8(%rbp), %rax	# name, tmp2603
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1342, D.29059
	.loc 1 7641 0
	cmpb	$105, %al	#, D.29059
	jne	.L2701	#,
	.loc 1 7643 0
	movq	-8(%rbp), %rax	# name, tmp2604
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1344, D.29059
	.loc 1 7642 0
	cmpb	$100, %al	#, D.29059
	jne	.L2701	#,
	.loc 1 7645 0
	movl	$-238, %eax	#, D.29058
	jmp	.L2207	#
.L2701:
	.loc 1 7648 0
	jmp	.L2208	#
.L2192:
	.loc 1 7655 0
	movq	-8(%rbp), %rax	# name, tmp2605
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$65, %eax	#, tmp2606
	cmpl	$51, %eax	#, tmp2606
	ja	.L2898	#,
	movl	%eax, %eax	# tmp2606, tmp2607
	movq	.L2704(,%rax,8), %rax	#, tmp2608
	jmp	*%rax	# tmp2608
	.section	.rodata
	.align 8
	.align 4
.L2704:
	.quad	.L2703
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2705
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2706
	.quad	.L2707
	.quad	.L2708
	.quad	.L2709
	.quad	.L2710
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2898
	.quad	.L2711
	.quad	.L2712
	.quad	.L2713
	.text
.L2703:
	.loc 1 7658 0
	movq	-8(%rbp), %rax	# name, tmp2609
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1349, D.29059
	cmpb	$85, %al	#, D.29059
	jne	.L2714	#,
	.loc 1 7659 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2610
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1351, D.29059
	.loc 1 7658 0 discriminator 1
	cmpb	$84, %al	#, D.29059
	jne	.L2714	#,
	.loc 1 7660 0
	movq	-8(%rbp), %rax	# name, tmp2611
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1353, D.29059
	.loc 1 7659 0
	cmpb	$79, %al	#, D.29059
	jne	.L2714	#,
	.loc 1 7661 0
	movq	-8(%rbp), %rax	# name, tmp2612
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1355, D.29059
	.loc 1 7660 0
	cmpb	$76, %al	#, D.29059
	jne	.L2714	#,
	.loc 1 7662 0
	movq	-8(%rbp), %rax	# name, tmp2613
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1357, D.29059
	.loc 1 7661 0
	cmpb	$79, %al	#, D.29059
	jne	.L2714	#,
	.loc 1 7663 0
	movq	-8(%rbp), %rax	# name, tmp2614
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1359, D.29059
	.loc 1 7662 0
	cmpb	$65, %al	#, D.29059
	jne	.L2714	#,
	.loc 1 7664 0
	movq	-8(%rbp), %rax	# name, tmp2615
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1361, D.29059
	.loc 1 7663 0
	cmpb	$68, %al	#, D.29059
	jne	.L2714	#,
	.loc 1 7666 0
	movl	$6, %eax	#, D.29058
	jmp	.L2207	#
.L2714:
	.loc 1 7669 0
	jmp	.L2208	#
.L2705:
	.loc 1 7672 0
	movq	-8(%rbp), %rax	# name, tmp2616
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1364, D.29059
	cmpb	$95, %al	#, D.29059
	jne	.L2715	#,
	.loc 1 7674 0
	movq	-8(%rbp), %rax	# name, tmp2617
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1366, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$70, %eax	#, D.29060
	je	.L2717	#,
	cmpl	$76, %eax	#, D.29060
	je	.L2718	#,
	cmpl	$68, %eax	#, D.29060
	je	.L2719	#,
	.loc 1 7713 0
	jmp	.L2208	#
.L2719:
	.loc 1 7677 0
	movq	-8(%rbp), %rax	# name, tmp2618
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1369, D.29059
	cmpb	$65, %al	#, D.29059
	jne	.L2720	#,
	.loc 1 7678 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2619
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1371, D.29059
	.loc 1 7677 0 discriminator 1
	cmpb	$84, %al	#, D.29059
	jne	.L2720	#,
	.loc 1 7679 0
	movq	-8(%rbp), %rax	# name, tmp2620
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1373, D.29059
	.loc 1 7678 0
	cmpb	$65, %al	#, D.29059
	jne	.L2720	#,
	.loc 1 7680 0
	movq	-8(%rbp), %rax	# name, tmp2621
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1375, D.29059
	.loc 1 7679 0
	cmpb	$95, %al	#, D.29059
	jne	.L2720	#,
	.loc 1 7681 0
	movq	-8(%rbp), %rax	# name, tmp2622
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1377, D.29059
	.loc 1 7680 0
	cmpb	$95, %al	#, D.29059
	jne	.L2720	#,
	.loc 1 7683 0
	movl	$4, %eax	#, D.29058
	jmp	.L2207	#
.L2720:
	.loc 1 7686 0
	jmp	.L2208	#
.L2717:
	.loc 1 7689 0
	movq	-8(%rbp), %rax	# name, tmp2623
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1380, D.29059
	cmpb	$73, %al	#, D.29059
	jne	.L2721	#,
	.loc 1 7690 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2624
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1382, D.29059
	.loc 1 7689 0 discriminator 1
	cmpb	$76, %al	#, D.29059
	jne	.L2721	#,
	.loc 1 7691 0
	movq	-8(%rbp), %rax	# name, tmp2625
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1384, D.29059
	.loc 1 7690 0
	cmpb	$69, %al	#, D.29059
	jne	.L2721	#,
	.loc 1 7692 0
	movq	-8(%rbp), %rax	# name, tmp2626
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1386, D.29059
	.loc 1 7691 0
	cmpb	$95, %al	#, D.29059
	jne	.L2721	#,
	.loc 1 7693 0
	movq	-8(%rbp), %rax	# name, tmp2627
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1388, D.29059
	.loc 1 7692 0
	cmpb	$95, %al	#, D.29059
	jne	.L2721	#,
	.loc 1 7695 0
	movl	$-1, %eax	#, D.29058
	jmp	.L2207	#
.L2721:
	.loc 1 7698 0
	jmp	.L2208	#
.L2718:
	.loc 1 7701 0
	movq	-8(%rbp), %rax	# name, tmp2628
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1391, D.29059
	cmpb	$73, %al	#, D.29059
	jne	.L2722	#,
	.loc 1 7702 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2629
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1393, D.29059
	.loc 1 7701 0 discriminator 1
	cmpb	$78, %al	#, D.29059
	jne	.L2722	#,
	.loc 1 7703 0
	movq	-8(%rbp), %rax	# name, tmp2630
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1395, D.29059
	.loc 1 7702 0
	cmpb	$69, %al	#, D.29059
	jne	.L2722	#,
	.loc 1 7704 0
	movq	-8(%rbp), %rax	# name, tmp2631
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1397, D.29059
	.loc 1 7703 0
	cmpb	$95, %al	#, D.29059
	jne	.L2722	#,
	.loc 1 7705 0
	movq	-8(%rbp), %rax	# name, tmp2632
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1399, D.29059
	.loc 1 7704 0
	cmpb	$95, %al	#, D.29059
	jne	.L2722	#,
	.loc 1 7707 0
	movl	$-2, %eax	#, D.29058
	jmp	.L2207	#
.L2722:
	.loc 1 7710 0
	jmp	.L2208	#
.L2715:
	.loc 1 7717 0
	jmp	.L2208	#
.L2706:
	.loc 1 7720 0
	movq	-8(%rbp), %rax	# name, tmp2633
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1402, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$108, %eax	#, D.29060
	je	.L2724	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2725	#,
	.loc 1 7749 0
	jmp	.L2208	#
.L2724:
	.loc 1 7723 0
	movq	-8(%rbp), %rax	# name, tmp2634
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1405, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2726	#,
	.loc 1 7724 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2635
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1407, D.29059
	.loc 1 7723 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2726	#,
	.loc 1 7725 0
	movq	-8(%rbp), %rax	# name, tmp2636
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1409, D.29059
	.loc 1 7724 0
	cmpb	$101, %al	#, D.29059
	jne	.L2726	#,
	.loc 1 7726 0
	movq	-8(%rbp), %rax	# name, tmp2637
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1411, D.29059
	.loc 1 7725 0
	cmpb	$100, %al	#, D.29059
	jne	.L2726	#,
	.loc 1 7727 0
	movq	-8(%rbp), %rax	# name, tmp2638
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1413, D.29059
	.loc 1 7726 0
	cmpb	$105, %al	#, D.29059
	jne	.L2726	#,
	.loc 1 7728 0
	movq	-8(%rbp), %rax	# name, tmp2639
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1415, D.29059
	.loc 1 7727 0
	cmpb	$114, %al	#, D.29059
	jne	.L2726	#,
	.loc 1 7730 0
	movl	$-30, %eax	#, D.29058
	jmp	.L2207	#
.L2726:
	.loc 1 7733 0
	jmp	.L2208	#
.L2725:
	.loc 1 7736 0
	movq	-8(%rbp), %rax	# name, tmp2640
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1418, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2727	#,
	.loc 1 7737 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2641
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1420, D.29059
	.loc 1 7736 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2727	#,
	.loc 1 7738 0
	movq	-8(%rbp), %rax	# name, tmp2642
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1422, D.29059
	.loc 1 7737 0
	cmpb	$105, %al	#, D.29059
	jne	.L2727	#,
	.loc 1 7739 0
	movq	-8(%rbp), %rax	# name, tmp2643
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1424, D.29059
	.loc 1 7738 0
	cmpb	$110, %al	#, D.29059
	jne	.L2727	#,
	.loc 1 7740 0
	movq	-8(%rbp), %rax	# name, tmp2644
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1426, D.29059
	.loc 1 7739 0
	cmpb	$117, %al	#, D.29059
	jne	.L2727	#,
	.loc 1 7741 0
	movq	-8(%rbp), %rax	# name, tmp2645
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1428, D.29059
	.loc 1 7740 0
	cmpb	$101, %al	#, D.29059
	jne	.L2727	#,
	.loc 1 7743 0
	movl	$-33, %eax	#, D.29058
	jmp	.L2207	#
.L2727:
	.loc 1 7746 0
	jmp	.L2208	#
.L2707:
	.loc 1 7753 0
	movq	-8(%rbp), %rax	# name, tmp2646
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1431, D.29059
	cmpb	$98, %al	#, D.29059
	jne	.L2728	#,
	.loc 1 7754 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2647
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1433, D.29059
	.loc 1 7753 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2728	#,
	.loc 1 7755 0
	movq	-8(%rbp), %rax	# name, tmp2648
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1435, D.29059
	.loc 1 7754 0
	cmpb	$99, %al	#, D.29059
	jne	.L2728	#,
	.loc 1 7756 0
	movq	-8(%rbp), %rax	# name, tmp2649
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1437, D.29059
	.loc 1 7755 0
	cmpb	$108, %al	#, D.29059
	jne	.L2728	#,
	.loc 1 7757 0
	movq	-8(%rbp), %rax	# name, tmp2650
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1439, D.29059
	.loc 1 7756 0
	cmpb	$111, %al	#, D.29059
	jne	.L2728	#,
	.loc 1 7758 0
	movq	-8(%rbp), %rax	# name, tmp2651
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1441, D.29059
	.loc 1 7757 0
	cmpb	$115, %al	#, D.29059
	jne	.L2728	#,
	.loc 1 7759 0
	movq	-8(%rbp), %rax	# name, tmp2652
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1443, D.29059
	.loc 1 7758 0
	cmpb	$101, %al	#, D.29059
	jne	.L2728	#,
	.loc 1 7761 0
	movl	$-36, %eax	#, D.29058
	jmp	.L2207	#
.L2728:
	.loc 1 7764 0
	jmp	.L2208	#
.L2708:
	.loc 1 7767 0
	movq	-8(%rbp), %rax	# name, tmp2653
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1446, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2729	#,
	.loc 1 7768 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2654
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1448, D.29059
	.loc 1 7767 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2729	#,
	.loc 1 7770 0
	movq	-8(%rbp), %rax	# name, tmp2655
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1450, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$103, %eax	#, D.29060
	je	.L2731	#,
	cmpl	$112, %eax	#, D.29060
	je	.L2732	#,
	.loc 1 7795 0
	jmp	.L2208	#
.L2731:
	.loc 1 7773 0
	movq	-8(%rbp), %rax	# name, tmp2656
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1453, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2733	#,
	.loc 1 7774 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2657
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1455, D.29059
	.loc 1 7773 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2733	#,
	.loc 1 7775 0
	movq	-8(%rbp), %rax	# name, tmp2658
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1457, D.29059
	.loc 1 7774 0
	cmpb	$110, %al	#, D.29059
	jne	.L2733	#,
	.loc 1 7776 0
	movq	-8(%rbp), %rax	# name, tmp2659
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1459, D.29059
	.loc 1 7775 0
	cmpb	$116, %al	#, D.29059
	jne	.L2733	#,
	.loc 1 7778 0
	movl	$-46, %eax	#, D.29058
	jmp	.L2207	#
.L2733:
	.loc 1 7781 0
	jmp	.L2208	#
.L2732:
	.loc 1 7784 0
	movq	-8(%rbp), %rax	# name, tmp2660
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1462, D.29059
	cmpb	$119, %al	#, D.29059
	jne	.L2734	#,
	.loc 1 7785 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2661
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1464, D.29059
	.loc 1 7784 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2734	#,
	.loc 1 7786 0
	movq	-8(%rbp), %rax	# name, tmp2662
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1466, D.29059
	.loc 1 7785 0
	cmpb	$110, %al	#, D.29059
	jne	.L2734	#,
	.loc 1 7787 0
	movq	-8(%rbp), %rax	# name, tmp2663
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1468, D.29059
	.loc 1 7786 0
	cmpb	$116, %al	#, D.29059
	jne	.L2734	#,
	.loc 1 7789 0
	movl	$-50, %eax	#, D.29058
	jmp	.L2207	#
.L2734:
	.loc 1 7792 0
	jmp	.L2208	#
.L2729:
	.loc 1 7799 0
	jmp	.L2208	#
.L2709:
	.loc 1 7802 0
	movq	-8(%rbp), %rax	# name, tmp2664
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1471, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2735	#,
	.loc 1 7803 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2665
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1473, D.29059
	.loc 1 7802 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2735	#,
	.loc 1 7804 0
	movq	-8(%rbp), %rax	# name, tmp2666
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1475, D.29059
	.loc 1 7803 0
	cmpb	$109, %al	#, D.29059
	jne	.L2735	#,
	.loc 1 7805 0
	movq	-8(%rbp), %rax	# name, tmp2667
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1477, D.29059
	.loc 1 7804 0
	cmpb	$108, %al	#, D.29059
	jne	.L2735	#,
	.loc 1 7806 0
	movq	-8(%rbp), %rax	# name, tmp2668
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1479, D.29059
	.loc 1 7805 0
	cmpb	$105, %al	#, D.29059
	jne	.L2735	#,
	.loc 1 7807 0
	movq	-8(%rbp), %rax	# name, tmp2669
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1481, D.29059
	.loc 1 7806 0
	cmpb	$110, %al	#, D.29059
	jne	.L2735	#,
	.loc 1 7808 0
	movq	-8(%rbp), %rax	# name, tmp2670
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1483, D.29059
	.loc 1 7807 0
	cmpb	$101, %al	#, D.29059
	jne	.L2735	#,
	.loc 1 7810 0
	movl	$-66, %eax	#, D.29058
	jmp	.L2207	#
.L2735:
	.loc 1 7813 0
	jmp	.L2208	#
.L2710:
	.loc 1 7816 0
	movq	-8(%rbp), %rax	# name, tmp2671
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1486, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2736	#,
	.loc 1 7817 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2672
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1488, D.29059
	.loc 1 7816 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2736	#,
	.loc 1 7819 0
	movq	-8(%rbp), %rax	# name, tmp2673
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1490, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$108, %eax	#, D.29060
	je	.L2738	#,
	cmpl	$112, %eax	#, D.29060
	je	.L2739	#,
	cmpl	$103, %eax	#, D.29060
	je	.L2740	#,
	.loc 1 7911 0
	jmp	.L2208	#
.L2740:
	.loc 1 7822 0
	movq	-8(%rbp), %rax	# name, tmp2674
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1493, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2741	#,
	.loc 1 7824 0
	movq	-8(%rbp), %rax	# name, tmp2675
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1495, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$103, %eax	#, D.29060
	je	.L2743	#,
	cmpl	$110, %eax	#, D.29060
	je	.L2744	#,
	cmpl	$101, %eax	#, D.29060
	je	.L2745	#,
	.loc 1 7854 0
	jmp	.L2208	#
.L2745:
	.loc 1 7827 0
	movq	-8(%rbp), %rax	# name, tmp2676
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1498, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2746	#,
	.loc 1 7828 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2677
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1500, D.29059
	.loc 1 7827 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2746	#,
	.loc 1 7830 0
	movl	$-69, %eax	#, D.29058
	jmp	.L2207	#
.L2746:
	.loc 1 7833 0
	jmp	.L2208	#
.L2743:
	.loc 1 7836 0
	movq	-8(%rbp), %rax	# name, tmp2678
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1503, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2747	#,
	.loc 1 7837 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2679
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1505, D.29059
	.loc 1 7836 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2747	#,
	.loc 1 7839 0
	movl	$-70, %eax	#, D.29058
	jmp	.L2207	#
.L2747:
	.loc 1 7842 0
	jmp	.L2208	#
.L2744:
	.loc 1 7845 0
	movq	-8(%rbp), %rax	# name, tmp2680
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1508, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2748	#,
	.loc 1 7846 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2681
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1510, D.29059
	.loc 1 7845 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2748	#,
	.loc 1 7848 0
	movl	$-71, %eax	#, D.29058
	jmp	.L2207	#
.L2748:
	.loc 1 7851 0
	jmp	.L2208	#
.L2741:
	.loc 1 7858 0
	jmp	.L2208	#
.L2738:
	.loc 1 7861 0
	movq	-8(%rbp), %rax	# name, tmp2682
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1513, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2749	#,
	.loc 1 7862 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2683
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1515, D.29059
	.loc 1 7861 0 discriminator 1
	cmpb	$103, %al	#, D.29059
	jne	.L2749	#,
	.loc 1 7863 0
	movq	-8(%rbp), %rax	# name, tmp2684
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1517, D.29059
	.loc 1 7862 0
	cmpb	$105, %al	#, D.29059
	jne	.L2749	#,
	.loc 1 7864 0
	movq	-8(%rbp), %rax	# name, tmp2685
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1519, D.29059
	.loc 1 7863 0
	cmpb	$110, %al	#, D.29059
	jne	.L2749	#,
	.loc 1 7866 0
	movl	$-75, %eax	#, D.29058
	jmp	.L2207	#
.L2749:
	.loc 1 7869 0
	jmp	.L2208	#
.L2739:
	.loc 1 7872 0
	movq	-8(%rbp), %rax	# name, tmp2686
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1522, D.29059
	cmpb	$119, %al	#, D.29059
	jne	.L2750	#,
	.loc 1 7874 0
	movq	-8(%rbp), %rax	# name, tmp2687
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1524, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$110, %eax	#, D.29060
	je	.L2752	#,
	cmpl	$117, %eax	#, D.29060
	je	.L2753	#,
	cmpl	$101, %eax	#, D.29060
	je	.L2754	#,
	.loc 1 7904 0
	jmp	.L2208	#
.L2754:
	.loc 1 7877 0
	movq	-8(%rbp), %rax	# name, tmp2688
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1527, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2755	#,
	.loc 1 7878 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2689
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1529, D.29059
	.loc 1 7877 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2755	#,
	.loc 1 7880 0
	movl	$-86, %eax	#, D.29058
	jmp	.L2207	#
.L2755:
	.loc 1 7883 0
	jmp	.L2208	#
.L2752:
	.loc 1 7886 0
	movq	-8(%rbp), %rax	# name, tmp2690
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1532, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2756	#,
	.loc 1 7887 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2691
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1534, D.29059
	.loc 1 7886 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2756	#,
	.loc 1 7889 0
	movl	$-87, %eax	#, D.29058
	jmp	.L2207	#
.L2756:
	.loc 1 7892 0
	jmp	.L2208	#
.L2753:
	.loc 1 7895 0
	movq	-8(%rbp), %rax	# name, tmp2692
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1537, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2757	#,
	.loc 1 7896 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2693
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1539, D.29059
	.loc 1 7895 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2757	#,
	.loc 1 7898 0
	movl	$-88, %eax	#, D.29058
	jmp	.L2207	#
.L2757:
	.loc 1 7901 0
	jmp	.L2208	#
.L2750:
	.loc 1 7908 0
	jmp	.L2208	#
.L2736:
	.loc 1 7915 0
	jmp	.L2208	#
.L2711:
	.loc 1 7918 0
	movq	-8(%rbp), %rax	# name, tmp2694
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1542, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2758	#,
	.loc 1 7919 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2695
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1544, D.29059
	.loc 1 7918 0 discriminator 1
	cmpb	$97, %al	#, D.29059
	jne	.L2758	#,
	.loc 1 7920 0
	movq	-8(%rbp), %rax	# name, tmp2696
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1546, D.29059
	.loc 1 7919 0
	cmpb	$100, %al	#, D.29059
	jne	.L2758	#,
	.loc 1 7922 0
	movq	-8(%rbp), %rax	# name, tmp2697
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1548, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$108, %eax	#, D.29060
	je	.L2760	#,
	cmpl	$112, %eax	#, D.29060
	je	.L2761	#,
	.loc 1 7958 0
	jmp	.L2208	#
.L2760:
	.loc 1 7925 0
	movq	-8(%rbp), %rax	# name, tmp2698
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1551, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2762	#,
	.loc 1 7926 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2699
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1553, D.29059
	.loc 1 7925 0 discriminator 1
	cmpb	$110, %al	#, D.29059
	jne	.L2762	#,
	.loc 1 7928 0
	movq	-8(%rbp), %rax	# name, tmp2700
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1555, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2764	#,
	cmpl	$107, %eax	#, D.29060
	je	.L2765	#,
	.loc 1 7941 0
	jmp	.L2208	#
.L2764:
	.loc 1 7932 0
	movl	$-156, %eax	#, D.29058
	jmp	.L2207	#
.L2765:
	.loc 1 7937 0
	movl	$-157, %eax	#, D.29058
	jmp	.L2207	#
.L2762:
	.loc 1 7945 0
	jmp	.L2208	#
.L2761:
	.loc 1 7948 0
	movq	-8(%rbp), %rax	# name, tmp2701
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1560, D.29059
	cmpb	$105, %al	#, D.29059
	jne	.L2766	#,
	.loc 1 7949 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2702
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1562, D.29059
	.loc 1 7948 0 discriminator 1
	cmpb	$112, %al	#, D.29059
	jne	.L2766	#,
	.loc 1 7950 0
	movq	-8(%rbp), %rax	# name, tmp2703
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1564, D.29059
	.loc 1 7949 0
	cmpb	$101, %al	#, D.29059
	jne	.L2766	#,
	.loc 1 7952 0
	movl	$-158, %eax	#, D.29058
	jmp	.L2207	#
.L2766:
	.loc 1 7955 0
	jmp	.L2208	#
.L2758:
	.loc 1 7962 0
	jmp	.L2208	#
.L2712:
	.loc 1 7965 0
	movq	-8(%rbp), %rax	# name, tmp2704
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1567, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$104, %eax	#, D.29060
	je	.L2768	#,
	cmpl	$121, %eax	#, D.29060
	je	.L2769	#,
	cmpl	$101, %eax	#, D.29060
	je	.L2770	#,
	.loc 1 8046 0
	jmp	.L2208	#
.L2770:
	.loc 1 7968 0
	movq	-8(%rbp), %rax	# name, tmp2705
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1570, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2771	#,
	.loc 1 7970 0
	movq	-8(%rbp), %rax	# name, tmp2706
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1572, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$103, %eax	#, D.29060
	je	.L2773	#,
	cmpl	$112, %eax	#, D.29060
	je	.L2774	#,
	.loc 1 7995 0
	jmp	.L2208	#
.L2773:
	.loc 1 7973 0
	movq	-8(%rbp), %rax	# name, tmp2707
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1575, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2775	#,
	.loc 1 7974 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2708
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1577, D.29059
	.loc 1 7973 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2775	#,
	.loc 1 7975 0
	movq	-8(%rbp), %rax	# name, tmp2709
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1579, D.29059
	.loc 1 7974 0
	cmpb	$110, %al	#, D.29059
	jne	.L2775	#,
	.loc 1 7976 0
	movq	-8(%rbp), %rax	# name, tmp2710
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1581, D.29059
	.loc 1 7975 0
	cmpb	$116, %al	#, D.29059
	jne	.L2775	#,
	.loc 1 7978 0
	movl	$-179, %eax	#, D.29058
	jmp	.L2207	#
.L2775:
	.loc 1 7981 0
	jmp	.L2208	#
.L2774:
	.loc 1 7984 0
	movq	-8(%rbp), %rax	# name, tmp2711
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1584, D.29059
	cmpb	$119, %al	#, D.29059
	jne	.L2776	#,
	.loc 1 7985 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2712
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1586, D.29059
	.loc 1 7984 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2776	#,
	.loc 1 7986 0
	movq	-8(%rbp), %rax	# name, tmp2713
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1588, D.29059
	.loc 1 7985 0
	cmpb	$110, %al	#, D.29059
	jne	.L2776	#,
	.loc 1 7987 0
	movq	-8(%rbp), %rax	# name, tmp2714
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1590, D.29059
	.loc 1 7986 0
	cmpb	$116, %al	#, D.29059
	jne	.L2776	#,
	.loc 1 7989 0
	movl	$-185, %eax	#, D.29058
	jmp	.L2207	#
.L2776:
	.loc 1 7992 0
	jmp	.L2208	#
.L2771:
	.loc 1 7999 0
	jmp	.L2208	#
.L2768:
	.loc 1 8002 0
	movq	-8(%rbp), %rax	# name, tmp2715
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1593, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$109, %eax	#, D.29060
	je	.L2778	#,
	cmpl	$117, %eax	#, D.29060
	je	.L2779	#,
	.loc 1 8029 0
	jmp	.L2208	#
.L2778:
	.loc 1 8005 0
	movq	-8(%rbp), %rax	# name, tmp2716
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1596, D.29059
	cmpb	$119, %al	#, D.29059
	jne	.L2780	#,
	.loc 1 8006 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2717
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1598, D.29059
	.loc 1 8005 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2780	#,
	.loc 1 8007 0
	movq	-8(%rbp), %rax	# name, tmp2718
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1600, D.29059
	.loc 1 8006 0
	cmpb	$105, %al	#, D.29059
	jne	.L2780	#,
	.loc 1 8008 0
	movq	-8(%rbp), %rax	# name, tmp2719
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1602, D.29059
	.loc 1 8007 0
	cmpb	$116, %al	#, D.29059
	jne	.L2780	#,
	.loc 1 8009 0
	movq	-8(%rbp), %rax	# name, tmp2720
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1604, D.29059
	.loc 1 8008 0
	cmpb	$101, %al	#, D.29059
	jne	.L2780	#,
	.loc 1 8011 0
	movl	$-192, %eax	#, D.29058
	jmp	.L2207	#
.L2780:
	.loc 1 8014 0
	jmp	.L2208	#
.L2779:
	.loc 1 8017 0
	movq	-8(%rbp), %rax	# name, tmp2721
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1607, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2781	#,
	.loc 1 8018 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2722
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1609, D.29059
	.loc 1 8017 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2781	#,
	.loc 1 8019 0
	movq	-8(%rbp), %rax	# name, tmp2723
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1611, D.29059
	.loc 1 8018 0
	cmpb	$111, %al	#, D.29059
	jne	.L2781	#,
	.loc 1 8020 0
	movq	-8(%rbp), %rax	# name, tmp2724
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1613, D.29059
	.loc 1 8019 0
	cmpb	$119, %al	#, D.29059
	jne	.L2781	#,
	.loc 1 8021 0
	movq	-8(%rbp), %rax	# name, tmp2725
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1615, D.29059
	.loc 1 8020 0
	cmpb	$110, %al	#, D.29059
	jne	.L2781	#,
	.loc 1 8023 0
	movl	$-193, %eax	#, D.29058
	jmp	.L2207	#
.L2781:
	.loc 1 8026 0
	jmp	.L2208	#
.L2769:
	.loc 1 8033 0
	movq	-8(%rbp), %rax	# name, tmp2726
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1618, D.29059
	cmpb	$115, %al	#, D.29059
	jne	.L2782	#,
	.loc 1 8034 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2727
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1620, D.29059
	.loc 1 8033 0 discriminator 1
	cmpb	$119, %al	#, D.29059
	jne	.L2782	#,
	.loc 1 8035 0
	movq	-8(%rbp), %rax	# name, tmp2728
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1622, D.29059
	.loc 1 8034 0
	cmpb	$114, %al	#, D.29059
	jne	.L2782	#,
	.loc 1 8036 0
	movq	-8(%rbp), %rax	# name, tmp2729
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1624, D.29059
	.loc 1 8035 0
	cmpb	$105, %al	#, D.29059
	jne	.L2782	#,
	.loc 1 8037 0
	movq	-8(%rbp), %rax	# name, tmp2730
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1626, D.29059
	.loc 1 8036 0
	cmpb	$116, %al	#, D.29059
	jne	.L2782	#,
	.loc 1 8038 0
	movq	-8(%rbp), %rax	# name, tmp2731
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1628, D.29059
	.loc 1 8037 0
	cmpb	$101, %al	#, D.29059
	jne	.L2782	#,
	.loc 1 8040 0
	movl	$-214, %eax	#, D.29058
	jmp	.L2207	#
.L2782:
	.loc 1 8043 0
	jmp	.L2208	#
.L2713:
	.loc 1 8050 0
	movq	-8(%rbp), %rax	# name, tmp2732
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1631, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2783	#,
	.loc 1 8051 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2733
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1633, D.29059
	.loc 1 8050 0 discriminator 1
	cmpb	$117, %al	#, D.29059
	jne	.L2783	#,
	.loc 1 8052 0
	movq	-8(%rbp), %rax	# name, tmp2734
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1635, D.29059
	.loc 1 8051 0
	cmpb	$110, %al	#, D.29059
	jne	.L2783	#,
	.loc 1 8053 0
	movq	-8(%rbp), %rax	# name, tmp2735
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1637, D.29059
	.loc 1 8052 0
	cmpb	$99, %al	#, D.29059
	jne	.L2783	#,
	.loc 1 8054 0
	movq	-8(%rbp), %rax	# name, tmp2736
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1639, D.29059
	.loc 1 8053 0
	cmpb	$97, %al	#, D.29059
	jne	.L2783	#,
	.loc 1 8055 0
	movq	-8(%rbp), %rax	# name, tmp2737
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1641, D.29059
	.loc 1 8054 0
	cmpb	$116, %al	#, D.29059
	jne	.L2783	#,
	.loc 1 8056 0
	movq	-8(%rbp), %rax	# name, tmp2738
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1643, D.29059
	.loc 1 8055 0
	cmpb	$101, %al	#, D.29059
	jne	.L2783	#,
	.loc 1 8058 0
	movl	$-222, %eax	#, D.29058
	jmp	.L2207	#
.L2783:
	.loc 1 8061 0
	jmp	.L2208	#
.L2193:
	.loc 1 8068 0
	movq	-8(%rbp), %rax	# name, tmp2739
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	subl	$101, %eax	#, tmp2740
	cmpl	$18, %eax	#, tmp2740
	ja	.L2899	#,
	movl	%eax, %eax	# tmp2740, tmp2741
	movq	.L2786(,%rax,8), %rax	#, tmp2742
	jmp	*%rax	# tmp2742
	.section	.rodata
	.align 8
	.align 4
.L2786:
	.quad	.L2785
	.quad	.L2899
	.quad	.L2787
	.quad	.L2899
	.quad	.L2899
	.quad	.L2899
	.quad	.L2899
	.quad	.L2788
	.quad	.L2899
	.quad	.L2899
	.quad	.L2899
	.quad	.L2789
	.quad	.L2790
	.quad	.L2791
	.quad	.L2792
	.quad	.L2899
	.quad	.L2899
	.quad	.L2899
	.quad	.L2793
	.text
.L2785:
	.loc 1 8071 0
	movq	-8(%rbp), %rax	# name, tmp2743
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1648, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2794	#,
	.loc 1 8072 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2744
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1650, D.29059
	.loc 1 8071 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2794	#,
	.loc 1 8073 0
	movq	-8(%rbp), %rax	# name, tmp2745
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1652, D.29059
	.loc 1 8072 0
	cmpb	$110, %al	#, D.29059
	jne	.L2794	#,
	.loc 1 8074 0
	movq	-8(%rbp), %rax	# name, tmp2746
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1654, D.29059
	.loc 1 8073 0
	cmpb	$101, %al	#, D.29059
	jne	.L2794	#,
	.loc 1 8075 0
	movq	-8(%rbp), %rax	# name, tmp2747
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1656, D.29059
	.loc 1 8074 0
	cmpb	$116, %al	#, D.29059
	jne	.L2794	#,
	.loc 1 8076 0
	movq	-8(%rbp), %rax	# name, tmp2748
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1658, D.29059
	.loc 1 8075 0
	cmpb	$101, %al	#, D.29059
	jne	.L2794	#,
	.loc 1 8077 0
	movq	-8(%rbp), %rax	# name, tmp2749
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1660, D.29059
	.loc 1 8076 0
	cmpb	$110, %al	#, D.29059
	jne	.L2794	#,
	.loc 1 8078 0
	movq	-8(%rbp), %rax	# name, tmp2750
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1662, D.29059
	.loc 1 8077 0
	cmpb	$116, %al	#, D.29059
	jne	.L2794	#,
	.loc 1 8080 0
	movl	$-48, %eax	#, D.29058
	jmp	.L2207	#
.L2794:
	.loc 1 8083 0
	jmp	.L2208	#
.L2787:
	.loc 1 8086 0
	movq	-8(%rbp), %rax	# name, tmp2751
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1665, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2795	#,
	.loc 1 8087 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2752
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1667, D.29059
	.loc 1 8086 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2795	#,
	.loc 1 8088 0
	movq	-8(%rbp), %rax	# name, tmp2753
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1669, D.29059
	.loc 1 8087 0
	cmpb	$110, %al	#, D.29059
	jne	.L2795	#,
	.loc 1 8089 0
	movq	-8(%rbp), %rax	# name, tmp2754
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1671, D.29059
	.loc 1 8088 0
	cmpb	$101, %al	#, D.29059
	jne	.L2795	#,
	.loc 1 8090 0
	movq	-8(%rbp), %rax	# name, tmp2755
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1673, D.29059
	.loc 1 8089 0
	cmpb	$116, %al	#, D.29059
	jne	.L2795	#,
	.loc 1 8091 0
	movq	-8(%rbp), %rax	# name, tmp2756
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1675, D.29059
	.loc 1 8090 0
	cmpb	$101, %al	#, D.29059
	jne	.L2795	#,
	.loc 1 8092 0
	movq	-8(%rbp), %rax	# name, tmp2757
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1677, D.29059
	.loc 1 8091 0
	cmpb	$110, %al	#, D.29059
	jne	.L2795	#,
	.loc 1 8093 0
	movq	-8(%rbp), %rax	# name, tmp2758
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1679, D.29059
	.loc 1 8092 0
	cmpb	$116, %al	#, D.29059
	jne	.L2795	#,
	.loc 1 8095 0
	movl	$-78, %eax	#, D.29058
	jmp	.L2207	#
.L2795:
	.loc 1 8098 0
	jmp	.L2208	#
.L2788:
	.loc 1 8101 0
	movq	-8(%rbp), %rax	# name, tmp2759
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1682, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2796	#,
	.loc 1 8102 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2760
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1684, D.29059
	.loc 1 8101 0 discriminator 1
	cmpb	$99, %al	#, D.29059
	jne	.L2796	#,
	.loc 1 8103 0
	movq	-8(%rbp), %rax	# name, tmp2761
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1686, D.29059
	.loc 1 8102 0
	cmpb	$97, %al	#, D.29059
	jne	.L2796	#,
	.loc 1 8104 0
	movq	-8(%rbp), %rax	# name, tmp2762
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1688, D.29059
	.loc 1 8103 0
	cmpb	$108, %al	#, D.29059
	jne	.L2796	#,
	.loc 1 8105 0
	movq	-8(%rbp), %rax	# name, tmp2763
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1690, D.29059
	.loc 1 8104 0
	cmpb	$116, %al	#, D.29059
	jne	.L2796	#,
	.loc 1 8106 0
	movq	-8(%rbp), %rax	# name, tmp2764
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1692, D.29059
	.loc 1 8105 0
	cmpb	$105, %al	#, D.29059
	jne	.L2796	#,
	.loc 1 8107 0
	movq	-8(%rbp), %rax	# name, tmp2765
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1694, D.29059
	.loc 1 8106 0
	cmpb	$109, %al	#, D.29059
	jne	.L2796	#,
	.loc 1 8108 0
	movq	-8(%rbp), %rax	# name, tmp2766
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1696, D.29059
	.loc 1 8107 0
	cmpb	$101, %al	#, D.29059
	jne	.L2796	#,
	.loc 1 8110 0
	movl	$-115, %eax	#, D.29058
	jmp	.L2207	#
.L2796:
	.loc 1 8113 0
	jmp	.L2208	#
.L2789:
	.loc 1 8116 0
	movq	-8(%rbp), %rax	# name, tmp2767
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1699, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2797	#,
	.loc 1 8117 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2768
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1701, D.29059
	.loc 1 8116 0 discriminator 1
	cmpb	$111, %al	#, D.29059
	jne	.L2797	#,
	.loc 1 8118 0
	movq	-8(%rbp), %rax	# name, tmp2769
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1703, D.29059
	.loc 1 8117 0
	cmpb	$116, %al	#, D.29059
	jne	.L2797	#,
	.loc 1 8119 0
	movq	-8(%rbp), %rax	# name, tmp2770
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1705, D.29059
	.loc 1 8118 0
	cmpb	$111, %al	#, D.29059
	jne	.L2797	#,
	.loc 1 8120 0
	movq	-8(%rbp), %rax	# name, tmp2771
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1707, D.29059
	.loc 1 8119 0
	cmpb	$116, %al	#, D.29059
	jne	.L2797	#,
	.loc 1 8121 0
	movq	-8(%rbp), %rax	# name, tmp2772
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1709, D.29059
	.loc 1 8120 0
	cmpb	$121, %al	#, D.29059
	jne	.L2797	#,
	.loc 1 8122 0
	movq	-8(%rbp), %rax	# name, tmp2773
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1711, D.29059
	.loc 1 8121 0
	cmpb	$112, %al	#, D.29059
	jne	.L2797	#,
	.loc 1 8123 0
	movq	-8(%rbp), %rax	# name, tmp2774
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1713, D.29059
	.loc 1 8122 0
	cmpb	$101, %al	#, D.29059
	jne	.L2797	#,
	.loc 1 8125 0
	movl	$145, %eax	#, D.29058
	jmp	.L2207	#
.L2797:
	.loc 1 8128 0
	jmp	.L2208	#
.L2790:
	.loc 1 8131 0
	movq	-8(%rbp), %rax	# name, tmp2775
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1716, D.29059
	cmpb	$117, %al	#, D.29059
	jne	.L2798	#,
	.loc 1 8132 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2776
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1718, D.29059
	.loc 1 8131 0 discriminator 1
	cmpb	$111, %al	#, D.29059
	jne	.L2798	#,
	.loc 1 8133 0
	movq	-8(%rbp), %rax	# name, tmp2777
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1720, D.29059
	.loc 1 8132 0
	cmpb	$116, %al	#, D.29059
	jne	.L2798	#,
	.loc 1 8134 0
	movq	-8(%rbp), %rax	# name, tmp2778
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1722, D.29059
	.loc 1 8133 0
	cmpb	$101, %al	#, D.29059
	jne	.L2798	#,
	.loc 1 8135 0
	movq	-8(%rbp), %rax	# name, tmp2779
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1724, D.29059
	.loc 1 8134 0
	cmpb	$109, %al	#, D.29059
	jne	.L2798	#,
	.loc 1 8136 0
	movq	-8(%rbp), %rax	# name, tmp2780
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1726, D.29059
	.loc 1 8135 0
	cmpb	$101, %al	#, D.29059
	jne	.L2798	#,
	.loc 1 8137 0
	movq	-8(%rbp), %rax	# name, tmp2781
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1728, D.29059
	.loc 1 8136 0
	cmpb	$116, %al	#, D.29059
	jne	.L2798	#,
	.loc 1 8138 0
	movq	-8(%rbp), %rax	# name, tmp2782
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1730, D.29059
	.loc 1 8137 0
	cmpb	$97, %al	#, D.29059
	jne	.L2798	#,
	.loc 1 8140 0
	movl	$-150, %eax	#, D.29058
	jmp	.L2207	#
.L2798:
	.loc 1 8143 0
	jmp	.L2208	#
.L2791:
	.loc 1 8146 0
	movq	-8(%rbp), %rax	# name, tmp2783
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1733, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2799	#,
	.loc 1 8147 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2784
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1735, D.29059
	.loc 1 8146 0 discriminator 1
	cmpb	$119, %al	#, D.29059
	jne	.L2799	#,
	.loc 1 8148 0
	movq	-8(%rbp), %rax	# name, tmp2785
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1737, D.29059
	.loc 1 8147 0
	cmpb	$105, %al	#, D.29059
	jne	.L2799	#,
	.loc 1 8149 0
	movq	-8(%rbp), %rax	# name, tmp2786
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1739, D.29059
	.loc 1 8148 0
	cmpb	$110, %al	#, D.29059
	jne	.L2799	#,
	.loc 1 8150 0
	movq	-8(%rbp), %rax	# name, tmp2787
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1741, D.29059
	.loc 1 8149 0
	cmpb	$100, %al	#, D.29059
	jne	.L2799	#,
	.loc 1 8151 0
	movq	-8(%rbp), %rax	# name, tmp2788
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1743, D.29059
	.loc 1 8150 0
	cmpb	$100, %al	#, D.29059
	jne	.L2799	#,
	.loc 1 8152 0
	movq	-8(%rbp), %rax	# name, tmp2789
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1745, D.29059
	.loc 1 8151 0
	cmpb	$105, %al	#, D.29059
	jne	.L2799	#,
	.loc 1 8153 0
	movq	-8(%rbp), %rax	# name, tmp2790
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1747, D.29059
	.loc 1 8152 0
	cmpb	$114, %al	#, D.29059
	jne	.L2799	#,
	.loc 1 8155 0
	movl	$-167, %eax	#, D.29058
	jmp	.L2207	#
.L2799:
	.loc 1 8158 0
	jmp	.L2208	#
.L2792:
	.loc 1 8161 0
	movq	-8(%rbp), %rax	# name, tmp2791
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1750, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2800	#,
	.loc 1 8162 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2792
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1752, D.29059
	.loc 1 8161 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2800	#,
	.loc 1 8163 0
	movq	-8(%rbp), %rax	# name, tmp2793
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1754, D.29059
	.loc 1 8162 0
	cmpb	$110, %al	#, D.29059
	jne	.L2800	#,
	.loc 1 8164 0
	movq	-8(%rbp), %rax	# name, tmp2794
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1756, D.29059
	.loc 1 8163 0
	cmpb	$101, %al	#, D.29059
	jne	.L2800	#,
	.loc 1 8165 0
	movq	-8(%rbp), %rax	# name, tmp2795
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1758, D.29059
	.loc 1 8164 0
	cmpb	$116, %al	#, D.29059
	jne	.L2800	#,
	.loc 1 8166 0
	movq	-8(%rbp), %rax	# name, tmp2796
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1760, D.29059
	.loc 1 8165 0
	cmpb	$101, %al	#, D.29059
	jne	.L2800	#,
	.loc 1 8167 0
	movq	-8(%rbp), %rax	# name, tmp2797
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1762, D.29059
	.loc 1 8166 0
	cmpb	$110, %al	#, D.29059
	jne	.L2800	#,
	.loc 1 8168 0
	movq	-8(%rbp), %rax	# name, tmp2798
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1764, D.29059
	.loc 1 8167 0
	cmpb	$116, %al	#, D.29059
	jne	.L2800	#,
	.loc 1 8170 0
	movl	$-181, %eax	#, D.29058
	jmp	.L2207	#
.L2800:
	.loc 1 8173 0
	jmp	.L2208	#
.L2793:
	.loc 1 8176 0
	movq	-8(%rbp), %rax	# name, tmp2799
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1767, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2801	#,
	.loc 1 8177 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2800
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1769, D.29059
	.loc 1 8176 0 discriminator 1
	cmpb	$110, %al	#, D.29059
	jne	.L2801	#,
	.loc 1 8178 0
	movq	-8(%rbp), %rax	# name, tmp2801
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1771, D.29059
	.loc 1 8177 0
	cmpb	$116, %al	#, D.29059
	jne	.L2801	#,
	.loc 1 8179 0
	movq	-8(%rbp), %rax	# name, tmp2802
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1773, D.29059
	.loc 1 8178 0
	cmpb	$97, %al	#, D.29059
	jne	.L2801	#,
	.loc 1 8180 0
	movq	-8(%rbp), %rax	# name, tmp2803
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1775, D.29059
	.loc 1 8179 0
	cmpb	$114, %al	#, D.29059
	jne	.L2801	#,
	.loc 1 8181 0
	movq	-8(%rbp), %rax	# name, tmp2804
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1777, D.29059
	.loc 1 8180 0
	cmpb	$114, %al	#, D.29059
	jne	.L2801	#,
	.loc 1 8182 0
	movq	-8(%rbp), %rax	# name, tmp2805
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1779, D.29059
	.loc 1 8181 0
	cmpb	$97, %al	#, D.29059
	jne	.L2801	#,
	.loc 1 8183 0
	movq	-8(%rbp), %rax	# name, tmp2806
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1781, D.29059
	.loc 1 8182 0
	cmpb	$121, %al	#, D.29059
	jne	.L2801	#,
	.loc 1 8185 0
	movl	$-239, %eax	#, D.29058
	jmp	.L2207	#
.L2801:
	.loc 1 8188 0
	jmp	.L2208	#
.L2194:
	.loc 1 8195 0
	movq	-8(%rbp), %rax	# name, tmp2807
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$103, %eax	#, D.29060
	je	.L2803	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2804	#,
	cmpl	$101, %eax	#, D.29060
	je	.L2805	#,
	.loc 1 8372 0
	jmp	.L2208	#
.L2805:
	.loc 1 8198 0
	movq	-8(%rbp), %rax	# name, tmp2808
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1786, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2806	#,
	.loc 1 8199 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2809
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1788, D.29059
	.loc 1 8198 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2806	#,
	.loc 1 8201 0
	movq	-8(%rbp), %rax	# name, tmp2810
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1790, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$104, %eax	#, D.29060
	je	.L2808	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2809	#,
	.loc 1 8230 0
	jmp	.L2208	#
.L2808:
	.loc 1 8204 0
	movq	-8(%rbp), %rax	# name, tmp2811
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1793, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2810	#,
	.loc 1 8205 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2812
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1795, D.29059
	.loc 1 8204 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2810	#,
	.loc 1 8206 0
	movq	-8(%rbp), %rax	# name, tmp2813
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1797, D.29059
	.loc 1 8205 0
	cmpb	$116, %al	#, D.29059
	jne	.L2810	#,
	.loc 1 8207 0
	movq	-8(%rbp), %rax	# name, tmp2814
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1799, D.29059
	.loc 1 8206 0
	cmpb	$101, %al	#, D.29059
	jne	.L2810	#,
	.loc 1 8208 0
	movq	-8(%rbp), %rax	# name, tmp2815
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1801, D.29059
	.loc 1 8207 0
	cmpb	$110, %al	#, D.29059
	jne	.L2810	#,
	.loc 1 8209 0
	movq	-8(%rbp), %rax	# name, tmp2816
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1803, D.29059
	.loc 1 8208 0
	cmpb	$116, %al	#, D.29059
	jne	.L2810	#,
	.loc 1 8211 0
	movl	$-47, %eax	#, D.29058
	jmp	.L2207	#
.L2810:
	.loc 1 8214 0
	jmp	.L2208	#
.L2809:
	.loc 1 8217 0
	movq	-8(%rbp), %rax	# name, tmp2817
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1806, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2811	#,
	.loc 1 8218 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2818
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1808, D.29059
	.loc 1 8217 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2811	#,
	.loc 1 8219 0
	movq	-8(%rbp), %rax	# name, tmp2819
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1810, D.29059
	.loc 1 8218 0
	cmpb	$118, %al	#, D.29059
	jne	.L2811	#,
	.loc 1 8220 0
	movq	-8(%rbp), %rax	# name, tmp2820
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1812, D.29059
	.loc 1 8219 0
	cmpb	$101, %al	#, D.29059
	jne	.L2811	#,
	.loc 1 8221 0
	movq	-8(%rbp), %rax	# name, tmp2821
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1814, D.29059
	.loc 1 8220 0
	cmpb	$110, %al	#, D.29059
	jne	.L2811	#,
	.loc 1 8222 0
	movq	-8(%rbp), %rax	# name, tmp2822
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1816, D.29059
	.loc 1 8221 0
	cmpb	$116, %al	#, D.29059
	jne	.L2811	#,
	.loc 1 8224 0
	movl	$-51, %eax	#, D.29058
	jmp	.L2207	#
.L2811:
	.loc 1 8227 0
	jmp	.L2208	#
.L2806:
	.loc 1 8234 0
	jmp	.L2208	#
.L2803:
	.loc 1 8237 0
	movq	-8(%rbp), %rax	# name, tmp2823
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1819, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2812	#,
	.loc 1 8238 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2824
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1821, D.29059
	.loc 1 8237 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2812	#,
	.loc 1 8240 0
	movq	-8(%rbp), %rax	# name, tmp2825
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1823, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$104, %eax	#, D.29060
	je	.L2814	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2815	#,
	.loc 1 8287 0
	jmp	.L2208	#
.L2814:
	.loc 1 8243 0
	movq	-8(%rbp), %rax	# name, tmp2826
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1826, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2816	#,
	.loc 1 8244 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2827
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1828, D.29059
	.loc 1 8243 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2816	#,
	.loc 1 8245 0
	movq	-8(%rbp), %rax	# name, tmp2828
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1830, D.29059
	.loc 1 8244 0
	cmpb	$116, %al	#, D.29059
	jne	.L2816	#,
	.loc 1 8246 0
	movq	-8(%rbp), %rax	# name, tmp2829
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1832, D.29059
	.loc 1 8245 0
	cmpb	$101, %al	#, D.29059
	jne	.L2816	#,
	.loc 1 8247 0
	movq	-8(%rbp), %rax	# name, tmp2830
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1834, D.29059
	.loc 1 8246 0
	cmpb	$110, %al	#, D.29059
	jne	.L2816	#,
	.loc 1 8248 0
	movq	-8(%rbp), %rax	# name, tmp2831
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1836, D.29059
	.loc 1 8247 0
	cmpb	$116, %al	#, D.29059
	jne	.L2816	#,
	.loc 1 8250 0
	movl	$-74, %eax	#, D.29058
	jmp	.L2207	#
.L2816:
	.loc 1 8253 0
	jmp	.L2208	#
.L2815:
	.loc 1 8256 0
	movq	-8(%rbp), %rax	# name, tmp2832
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1839, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2818	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2819	#,
	.loc 1 8283 0
	jmp	.L2208	#
.L2818:
	.loc 1 8259 0
	movq	-8(%rbp), %rax	# name, tmp2833
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1842, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2820	#,
	.loc 1 8260 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2834
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1844, D.29059
	.loc 1 8259 0 discriminator 1
	cmpb	$118, %al	#, D.29059
	jne	.L2820	#,
	.loc 1 8261 0
	movq	-8(%rbp), %rax	# name, tmp2835
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1846, D.29059
	.loc 1 8260 0
	cmpb	$101, %al	#, D.29059
	jne	.L2820	#,
	.loc 1 8262 0
	movq	-8(%rbp), %rax	# name, tmp2836
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1848, D.29059
	.loc 1 8261 0
	cmpb	$110, %al	#, D.29059
	jne	.L2820	#,
	.loc 1 8263 0
	movq	-8(%rbp), %rax	# name, tmp2837
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1850, D.29059
	.loc 1 8262 0
	cmpb	$116, %al	#, D.29059
	jne	.L2820	#,
	.loc 1 8265 0
	movl	$-91, %eax	#, D.29058
	jmp	.L2207	#
.L2820:
	.loc 1 8268 0
	jmp	.L2208	#
.L2819:
	.loc 1 8271 0
	movq	-8(%rbp), %rax	# name, tmp2838
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1853, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2821	#,
	.loc 1 8272 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2839
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1855, D.29059
	.loc 1 8271 0 discriminator 1
	cmpb	$107, %al	#, D.29059
	jne	.L2821	#,
	.loc 1 8273 0
	movq	-8(%rbp), %rax	# name, tmp2840
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1857, D.29059
	.loc 1 8272 0
	cmpb	$111, %al	#, D.29059
	jne	.L2821	#,
	.loc 1 8274 0
	movq	-8(%rbp), %rax	# name, tmp2841
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1859, D.29059
	.loc 1 8273 0
	cmpb	$112, %al	#, D.29059
	jne	.L2821	#,
	.loc 1 8275 0
	movq	-8(%rbp), %rax	# name, tmp2842
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1861, D.29059
	.loc 1 8274 0
	cmpb	$116, %al	#, D.29059
	jne	.L2821	#,
	.loc 1 8277 0
	movl	$-93, %eax	#, D.29058
	jmp	.L2207	#
.L2821:
	.loc 1 8280 0
	jmp	.L2208	#
.L2812:
	.loc 1 8291 0
	jmp	.L2208	#
.L2804:
	.loc 1 8294 0
	movq	-8(%rbp), %rax	# name, tmp2843
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1864, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2823	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2824	#,
	.loc 1 8368 0
	jmp	.L2208	#
.L2823:
	.loc 1 8297 0
	movq	-8(%rbp), %rax	# name, tmp2844
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1867, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2825	#,
	.loc 1 8299 0
	movq	-8(%rbp), %rax	# name, tmp2845
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1869, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$104, %eax	#, D.29060
	je	.L2827	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2828	#,
	.loc 1 8346 0
	jmp	.L2208	#
.L2827:
	.loc 1 8302 0
	movq	-8(%rbp), %rax	# name, tmp2846
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1872, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2829	#,
	.loc 1 8303 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2847
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1874, D.29059
	.loc 1 8302 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2829	#,
	.loc 1 8304 0
	movq	-8(%rbp), %rax	# name, tmp2848
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1876, D.29059
	.loc 1 8303 0
	cmpb	$116, %al	#, D.29059
	jne	.L2829	#,
	.loc 1 8305 0
	movq	-8(%rbp), %rax	# name, tmp2849
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1878, D.29059
	.loc 1 8304 0
	cmpb	$101, %al	#, D.29059
	jne	.L2829	#,
	.loc 1 8306 0
	movq	-8(%rbp), %rax	# name, tmp2850
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1880, D.29059
	.loc 1 8305 0
	cmpb	$110, %al	#, D.29059
	jne	.L2829	#,
	.loc 1 8307 0
	movq	-8(%rbp), %rax	# name, tmp2851
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1882, D.29059
	.loc 1 8306 0
	cmpb	$116, %al	#, D.29059
	jne	.L2829	#,
	.loc 1 8309 0
	movl	$-180, %eax	#, D.29058
	jmp	.L2207	#
.L2829:
	.loc 1 8312 0
	jmp	.L2208	#
.L2828:
	.loc 1 8315 0
	movq	-8(%rbp), %rax	# name, tmp2852
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1885, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2831	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2832	#,
	.loc 1 8342 0
	jmp	.L2208	#
.L2831:
	.loc 1 8318 0
	movq	-8(%rbp), %rax	# name, tmp2853
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1888, D.29059
	cmpb	$114, %al	#, D.29059
	jne	.L2833	#,
	.loc 1 8319 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2854
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1890, D.29059
	.loc 1 8318 0 discriminator 1
	cmpb	$118, %al	#, D.29059
	jne	.L2833	#,
	.loc 1 8320 0
	movq	-8(%rbp), %rax	# name, tmp2855
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1892, D.29059
	.loc 1 8319 0
	cmpb	$101, %al	#, D.29059
	jne	.L2833	#,
	.loc 1 8321 0
	movq	-8(%rbp), %rax	# name, tmp2856
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1894, D.29059
	.loc 1 8320 0
	cmpb	$110, %al	#, D.29059
	jne	.L2833	#,
	.loc 1 8322 0
	movq	-8(%rbp), %rax	# name, tmp2857
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1896, D.29059
	.loc 1 8321 0
	cmpb	$116, %al	#, D.29059
	jne	.L2833	#,
	.loc 1 8324 0
	movl	$-186, %eax	#, D.29058
	jmp	.L2207	#
.L2833:
	.loc 1 8327 0
	jmp	.L2208	#
.L2832:
	.loc 1 8330 0
	movq	-8(%rbp), %rax	# name, tmp2858
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1899, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2834	#,
	.loc 1 8331 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2859
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1901, D.29059
	.loc 1 8330 0 discriminator 1
	cmpb	$107, %al	#, D.29059
	jne	.L2834	#,
	.loc 1 8332 0
	movq	-8(%rbp), %rax	# name, tmp2860
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1903, D.29059
	.loc 1 8331 0
	cmpb	$111, %al	#, D.29059
	jne	.L2834	#,
	.loc 1 8333 0
	movq	-8(%rbp), %rax	# name, tmp2861
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1905, D.29059
	.loc 1 8332 0
	cmpb	$112, %al	#, D.29059
	jne	.L2834	#,
	.loc 1 8334 0
	movq	-8(%rbp), %rax	# name, tmp2862
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1907, D.29059
	.loc 1 8333 0
	cmpb	$116, %al	#, D.29059
	jne	.L2834	#,
	.loc 1 8336 0
	movl	$-187, %eax	#, D.29058
	jmp	.L2207	#
.L2834:
	.loc 1 8339 0
	jmp	.L2208	#
.L2825:
	.loc 1 8350 0
	jmp	.L2208	#
.L2824:
	.loc 1 8353 0
	movq	-8(%rbp), %rax	# name, tmp2863
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1910, D.29059
	cmpb	$99, %al	#, D.29059
	jne	.L2835	#,
	.loc 1 8354 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2864
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1912, D.29059
	.loc 1 8353 0 discriminator 1
	cmpb	$107, %al	#, D.29059
	jne	.L2835	#,
	.loc 1 8355 0
	movq	-8(%rbp), %rax	# name, tmp2865
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1914, D.29059
	.loc 1 8354 0
	cmpb	$101, %al	#, D.29059
	jne	.L2835	#,
	.loc 1 8356 0
	movq	-8(%rbp), %rax	# name, tmp2866
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1916, D.29059
	.loc 1 8355 0
	cmpb	$116, %al	#, D.29059
	jne	.L2835	#,
	.loc 1 8357 0
	movq	-8(%rbp), %rax	# name, tmp2867
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1918, D.29059
	.loc 1 8356 0
	cmpb	$112, %al	#, D.29059
	jne	.L2835	#,
	.loc 1 8358 0
	movq	-8(%rbp), %rax	# name, tmp2868
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1920, D.29059
	.loc 1 8357 0
	cmpb	$97, %al	#, D.29059
	jne	.L2835	#,
	.loc 1 8359 0
	movq	-8(%rbp), %rax	# name, tmp2869
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1922, D.29059
	.loc 1 8358 0
	cmpb	$105, %al	#, D.29059
	jne	.L2835	#,
	.loc 1 8360 0
	movq	-8(%rbp), %rax	# name, tmp2870
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1924, D.29059
	.loc 1 8359 0
	cmpb	$114, %al	#, D.29059
	jne	.L2835	#,
	.loc 1 8362 0
	movl	$-197, %eax	#, D.29058
	jmp	.L2207	#
.L2835:
	.loc 1 8365 0
	jmp	.L2208	#
.L2195:
	.loc 1 8376 0
	movq	-8(%rbp), %rax	# name, tmp2871
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2837	#,
	cmpl	$101, %eax	#, D.29060
	jg	.L2838	#,
	cmpl	$95, %eax	#, D.29060
	je	.L2839	#,
	.loc 1 8530 0
	jmp	.L2208	#
.L2838:
	.loc 1 8376 0
	cmpl	$103, %eax	#, D.29060
	je	.L2840	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2841	#,
	.loc 1 8530 0
	jmp	.L2208	#
.L2839:
	.loc 1 8379 0
	movq	-8(%rbp), %rax	# name, tmp2872
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1929, D.29059
	cmpb	$95, %al	#, D.29059
	jne	.L2842	#,
	.loc 1 8380 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2873
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1931, D.29059
	.loc 1 8379 0 discriminator 1
	cmpb	$80, %al	#, D.29059
	jne	.L2842	#,
	.loc 1 8381 0
	movq	-8(%rbp), %rax	# name, tmp2874
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1933, D.29059
	.loc 1 8380 0
	cmpb	$65, %al	#, D.29059
	jne	.L2842	#,
	.loc 1 8382 0
	movq	-8(%rbp), %rax	# name, tmp2875
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1935, D.29059
	.loc 1 8381 0
	cmpb	$67, %al	#, D.29059
	jne	.L2842	#,
	.loc 1 8383 0
	movq	-8(%rbp), %rax	# name, tmp2876
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1937, D.29059
	.loc 1 8382 0
	cmpb	$75, %al	#, D.29059
	jne	.L2842	#,
	.loc 1 8384 0
	movq	-8(%rbp), %rax	# name, tmp2877
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1939, D.29059
	.loc 1 8383 0
	cmpb	$65, %al	#, D.29059
	jne	.L2842	#,
	.loc 1 8385 0
	movq	-8(%rbp), %rax	# name, tmp2878
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1941, D.29059
	.loc 1 8384 0
	cmpb	$71, %al	#, D.29059
	jne	.L2842	#,
	.loc 1 8386 0
	movq	-8(%rbp), %rax	# name, tmp2879
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1943, D.29059
	.loc 1 8385 0
	cmpb	$69, %al	#, D.29059
	jne	.L2842	#,
	.loc 1 8387 0
	movq	-8(%rbp), %rax	# name, tmp2880
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1945, D.29059
	.loc 1 8386 0
	cmpb	$95, %al	#, D.29059
	jne	.L2842	#,
	.loc 1 8388 0
	movq	-8(%rbp), %rax	# name, tmp2881
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1947, D.29059
	.loc 1 8387 0
	cmpb	$95, %al	#, D.29059
	jne	.L2842	#,
	.loc 1 8390 0
	movl	$-3, %eax	#, D.29058
	jmp	.L2207	#
.L2842:
	.loc 1 8393 0
	jmp	.L2208	#
.L2837:
	.loc 1 8396 0
	movq	-8(%rbp), %rax	# name, tmp2882
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1950, D.29059
	cmpb	$110, %al	#, D.29059
	jne	.L2843	#,
	.loc 1 8397 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2883
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1952, D.29059
	.loc 1 8396 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2843	#,
	.loc 1 8398 0
	movq	-8(%rbp), %rax	# name, tmp2884
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1954, D.29059
	.loc 1 8397 0
	cmpb	$112, %al	#, D.29059
	jne	.L2843	#,
	.loc 1 8399 0
	movq	-8(%rbp), %rax	# name, tmp2885
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1956, D.29059
	.loc 1 8398 0
	cmpb	$114, %al	#, D.29059
	jne	.L2843	#,
	.loc 1 8400 0
	movq	-8(%rbp), %rax	# name, tmp2886
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1958, D.29059
	.loc 1 8399 0
	cmpb	$111, %al	#, D.29059
	jne	.L2843	#,
	.loc 1 8401 0
	movq	-8(%rbp), %rax	# name, tmp2887
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1960, D.29059
	.loc 1 8400 0
	cmpb	$116, %al	#, D.29059
	jne	.L2843	#,
	.loc 1 8402 0
	movq	-8(%rbp), %rax	# name, tmp2888
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1962, D.29059
	.loc 1 8401 0
	cmpb	$111, %al	#, D.29059
	jne	.L2843	#,
	.loc 1 8403 0
	movq	-8(%rbp), %rax	# name, tmp2889
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1964, D.29059
	.loc 1 8402 0
	cmpb	$101, %al	#, D.29059
	jne	.L2843	#,
	.loc 1 8404 0
	movq	-8(%rbp), %rax	# name, tmp2890
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1966, D.29059
	.loc 1 8403 0
	cmpb	$110, %al	#, D.29059
	jne	.L2843	#,
	.loc 1 8405 0
	movq	-8(%rbp), %rax	# name, tmp2891
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1968, D.29059
	.loc 1 8404 0
	cmpb	$116, %al	#, D.29059
	jne	.L2843	#,
	.loc 1 8407 0
	movl	$-49, %eax	#, D.29058
	jmp	.L2207	#
.L2843:
	.loc 1 8410 0
	jmp	.L2208	#
.L2840:
	.loc 1 8413 0
	movq	-8(%rbp), %rax	# name, tmp2892
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1971, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2844	#,
	.loc 1 8414 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2893
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1973, D.29059
	.loc 1 8413 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2844	#,
	.loc 1 8416 0
	movq	-8(%rbp), %rax	# name, tmp2894
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1975, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$112, %eax	#, D.29060
	je	.L2846	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2847	#,
	.loc 1 8484 0
	jmp	.L2208	#
.L2846:
	.loc 1 8419 0
	movq	-8(%rbp), %rax	# name, tmp2895
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1978, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$101, %eax	#, D.29060
	je	.L2849	#,
	cmpl	$114, %eax	#, D.29060
	je	.L2850	#,
	.loc 1 8466 0
	jmp	.L2208	#
.L2849:
	.loc 1 8422 0
	movq	-8(%rbp), %rax	# name, tmp2896
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1981, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2851	#,
	.loc 1 8423 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2897
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1983, D.29059
	.loc 1 8422 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2851	#,
	.loc 1 8424 0
	movq	-8(%rbp), %rax	# name, tmp2898
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1985, D.29059
	.loc 1 8423 0
	cmpb	$110, %al	#, D.29059
	jne	.L2851	#,
	.loc 1 8425 0
	movq	-8(%rbp), %rax	# name, tmp2899
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1987, D.29059
	.loc 1 8424 0
	cmpb	$97, %al	#, D.29059
	jne	.L2851	#,
	.loc 1 8426 0
	movq	-8(%rbp), %rax	# name, tmp2900
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1989, D.29059
	.loc 1 8425 0
	cmpb	$109, %al	#, D.29059
	jne	.L2851	#,
	.loc 1 8427 0
	movq	-8(%rbp), %rax	# name, tmp2901
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1991, D.29059
	.loc 1 8426 0
	cmpb	$101, %al	#, D.29059
	jne	.L2851	#,
	.loc 1 8429 0
	movl	$-79, %eax	#, D.29058
	jmp	.L2207	#
.L2851:
	.loc 1 8432 0
	jmp	.L2208	#
.L2850:
	.loc 1 8435 0
	movq	-8(%rbp), %rax	# name, tmp2902
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1994, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$105, %eax	#, D.29060
	je	.L2853	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2854	#,
	.loc 1 8462 0
	jmp	.L2208	#
.L2853:
	.loc 1 8438 0
	movq	-8(%rbp), %rax	# name, tmp2903
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1997, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2855	#,
	.loc 1 8439 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2904
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_1999, D.29059
	.loc 1 8438 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2855	#,
	.loc 1 8440 0
	movq	-8(%rbp), %rax	# name, tmp2905
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2001, D.29059
	.loc 1 8439 0
	cmpb	$105, %al	#, D.29059
	jne	.L2855	#,
	.loc 1 8441 0
	movq	-8(%rbp), %rax	# name, tmp2906
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2003, D.29059
	.loc 1 8440 0
	cmpb	$116, %al	#, D.29059
	jne	.L2855	#,
	.loc 1 8442 0
	movq	-8(%rbp), %rax	# name, tmp2907
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2005, D.29059
	.loc 1 8441 0
	cmpb	$121, %al	#, D.29059
	jne	.L2855	#,
	.loc 1 8444 0
	movl	$-82, %eax	#, D.29058
	jmp	.L2207	#
.L2855:
	.loc 1 8447 0
	jmp	.L2208	#
.L2854:
	.loc 1 8450 0
	movq	-8(%rbp), %rax	# name, tmp2908
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2008, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2856	#,
	.loc 1 8451 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2909
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2010, D.29059
	.loc 1 8450 0 discriminator 1
	cmpb	$111, %al	#, D.29059
	jne	.L2856	#,
	.loc 1 8452 0
	movq	-8(%rbp), %rax	# name, tmp2910
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2012, D.29059
	.loc 1 8451 0
	cmpb	$101, %al	#, D.29059
	jne	.L2856	#,
	.loc 1 8453 0
	movq	-8(%rbp), %rax	# name, tmp2911
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2014, D.29059
	.loc 1 8452 0
	cmpb	$110, %al	#, D.29059
	jne	.L2856	#,
	.loc 1 8454 0
	movq	-8(%rbp), %rax	# name, tmp2912
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2016, D.29059
	.loc 1 8453 0
	cmpb	$116, %al	#, D.29059
	jne	.L2856	#,
	.loc 1 8456 0
	movl	$-85, %eax	#, D.29058
	jmp	.L2207	#
.L2856:
	.loc 1 8459 0
	jmp	.L2208	#
.L2847:
	.loc 1 8470 0
	movq	-8(%rbp), %rax	# name, tmp2913
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2019, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2857	#,
	.loc 1 8471 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2914
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2021, D.29059
	.loc 1 8470 0 discriminator 1
	cmpb	$99, %al	#, D.29059
	jne	.L2857	#,
	.loc 1 8472 0
	movq	-8(%rbp), %rax	# name, tmp2915
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2023, D.29059
	.loc 1 8471 0
	cmpb	$107, %al	#, D.29059
	jne	.L2857	#,
	.loc 1 8473 0
	movq	-8(%rbp), %rax	# name, tmp2916
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2025, D.29059
	.loc 1 8472 0
	cmpb	$110, %al	#, D.29059
	jne	.L2857	#,
	.loc 1 8474 0
	movq	-8(%rbp), %rax	# name, tmp2917
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2027, D.29059
	.loc 1 8473 0
	cmpb	$97, %al	#, D.29059
	jne	.L2857	#,
	.loc 1 8475 0
	movq	-8(%rbp), %rax	# name, tmp2918
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2029, D.29059
	.loc 1 8474 0
	cmpb	$109, %al	#, D.29059
	jne	.L2857	#,
	.loc 1 8476 0
	movq	-8(%rbp), %rax	# name, tmp2919
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2031, D.29059
	.loc 1 8475 0
	cmpb	$101, %al	#, D.29059
	jne	.L2857	#,
	.loc 1 8478 0
	movl	$-92, %eax	#, D.29058
	jmp	.L2207	#
.L2857:
	.loc 1 8481 0
	jmp	.L2208	#
.L2844:
	.loc 1 8488 0
	jmp	.L2208	#
.L2841:
	.loc 1 8491 0
	movq	-8(%rbp), %rax	# name, tmp2920
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2034, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2858	#,
	.loc 1 8492 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2921
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2036, D.29059
	.loc 1 8491 0 discriminator 1
	cmpb	$116, %al	#, D.29059
	jne	.L2858	#,
	.loc 1 8493 0
	movq	-8(%rbp), %rax	# name, tmp2922
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2038, D.29059
	.loc 1 8492 0
	cmpb	$112, %al	#, D.29059
	jne	.L2858	#,
	.loc 1 8494 0
	movq	-8(%rbp), %rax	# name, tmp2923
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2040, D.29059
	.loc 1 8493 0
	cmpb	$114, %al	#, D.29059
	jne	.L2858	#,
	.loc 1 8496 0
	movq	-8(%rbp), %rax	# name, tmp2924
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2042, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$105, %eax	#, D.29060
	je	.L2860	#,
	cmpl	$111, %eax	#, D.29060
	je	.L2861	#,
	.loc 1 8523 0
	jmp	.L2208	#
.L2860:
	.loc 1 8499 0
	movq	-8(%rbp), %rax	# name, tmp2925
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2045, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2862	#,
	.loc 1 8500 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2926
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2047, D.29059
	.loc 1 8499 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2862	#,
	.loc 1 8501 0
	movq	-8(%rbp), %rax	# name, tmp2927
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2049, D.29059
	.loc 1 8500 0
	cmpb	$105, %al	#, D.29059
	jne	.L2862	#,
	.loc 1 8502 0
	movq	-8(%rbp), %rax	# name, tmp2928
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2051, D.29059
	.loc 1 8501 0
	cmpb	$116, %al	#, D.29059
	jne	.L2862	#,
	.loc 1 8503 0
	movq	-8(%rbp), %rax	# name, tmp2929
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2053, D.29059
	.loc 1 8502 0
	cmpb	$121, %al	#, D.29059
	jne	.L2862	#,
	.loc 1 8505 0
	movl	$-183, %eax	#, D.29058
	jmp	.L2207	#
.L2862:
	.loc 1 8508 0
	jmp	.L2208	#
.L2861:
	.loc 1 8511 0
	movq	-8(%rbp), %rax	# name, tmp2930
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2056, D.29059
	cmpb	$116, %al	#, D.29059
	jne	.L2863	#,
	.loc 1 8512 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2931
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2058, D.29059
	.loc 1 8511 0 discriminator 1
	cmpb	$111, %al	#, D.29059
	jne	.L2863	#,
	.loc 1 8513 0
	movq	-8(%rbp), %rax	# name, tmp2932
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2060, D.29059
	.loc 1 8512 0
	cmpb	$101, %al	#, D.29059
	jne	.L2863	#,
	.loc 1 8514 0
	movq	-8(%rbp), %rax	# name, tmp2933
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2062, D.29059
	.loc 1 8513 0
	cmpb	$110, %al	#, D.29059
	jne	.L2863	#,
	.loc 1 8515 0
	movq	-8(%rbp), %rax	# name, tmp2934
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2064, D.29059
	.loc 1 8514 0
	cmpb	$116, %al	#, D.29059
	jne	.L2863	#,
	.loc 1 8517 0
	movl	$-184, %eax	#, D.29058
	jmp	.L2207	#
.L2863:
	.loc 1 8520 0
	jmp	.L2208	#
.L2858:
	.loc 1 8527 0
	jmp	.L2208	#
.L2196:
	.loc 1 8534 0
	movq	-8(%rbp), %rax	# name, tmp2935
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	cmpb	$103, %al	#, D.29059
	jne	.L2864	#,
	.loc 1 8535 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2936
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2068, D.29059
	.loc 1 8534 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2864	#,
	.loc 1 8536 0
	movq	-8(%rbp), %rax	# name, tmp2937
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2070, D.29059
	.loc 1 8535 0
	cmpb	$116, %al	#, D.29059
	jne	.L2864	#,
	.loc 1 8537 0
	movq	-8(%rbp), %rax	# name, tmp2938
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2072, D.29059
	.loc 1 8536 0
	cmpb	$110, %al	#, D.29059
	jne	.L2864	#,
	.loc 1 8538 0
	movq	-8(%rbp), %rax	# name, tmp2939
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2074, D.29059
	.loc 1 8537 0
	cmpb	$101, %al	#, D.29059
	jne	.L2864	#,
	.loc 1 8539 0
	movq	-8(%rbp), %rax	# name, tmp2940
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2076, D.29059
	.loc 1 8538 0
	cmpb	$116, %al	#, D.29059
	jne	.L2864	#,
	.loc 1 8540 0
	movq	-8(%rbp), %rax	# name, tmp2941
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2078, D.29059
	.loc 1 8539 0
	cmpb	$98, %al	#, D.29059
	jne	.L2864	#,
	.loc 1 8541 0
	movq	-8(%rbp), %rax	# name, tmp2942
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2080, D.29059
	.loc 1 8540 0
	cmpb	$121, %al	#, D.29059
	jne	.L2864	#,
	.loc 1 8543 0
	movq	-8(%rbp), %rax	# name, tmp2943
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2082, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$97, %eax	#, D.29060
	je	.L2866	#,
	cmpl	$110, %eax	#, D.29060
	je	.L2867	#,
	.loc 1 8566 0
	jmp	.L2208	#
.L2866:
	.loc 1 8546 0
	movq	-8(%rbp), %rax	# name, tmp2944
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2085, D.29059
	cmpb	$100, %al	#, D.29059
	jne	.L2868	#,
	.loc 1 8547 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2945
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2087, D.29059
	.loc 1 8546 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2868	#,
	.loc 1 8548 0
	movq	-8(%rbp), %rax	# name, tmp2946
	addq	$11, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2089, D.29059
	.loc 1 8547 0
	cmpb	$114, %al	#, D.29059
	jne	.L2868	#,
	.loc 1 8550 0
	movl	$-76, %eax	#, D.29058
	jmp	.L2207	#
.L2868:
	.loc 1 8553 0
	jmp	.L2208	#
.L2867:
	.loc 1 8556 0
	movq	-8(%rbp), %rax	# name, tmp2947
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2092, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2869	#,
	.loc 1 8557 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2948
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2094, D.29059
	.loc 1 8556 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2869	#,
	.loc 1 8558 0
	movq	-8(%rbp), %rax	# name, tmp2949
	addq	$11, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2096, D.29059
	.loc 1 8557 0
	cmpb	$101, %al	#, D.29059
	jne	.L2869	#,
	.loc 1 8560 0
	movl	$-77, %eax	#, D.29058
	jmp	.L2207	#
.L2869:
	.loc 1 8563 0
	jmp	.L2208	#
.L2864:
	.loc 1 8570 0
	jmp	.L2208	#
.L2197:
	.loc 1 8573 0
	movq	-8(%rbp), %rax	# name, tmp2950
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	cmpb	$103, %al	#, D.29059
	jne	.L2870	#,
	.loc 1 8574 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2951
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2100, D.29059
	.loc 1 8573 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2870	#,
	.loc 1 8575 0
	movq	-8(%rbp), %rax	# name, tmp2952
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2102, D.29059
	.loc 1 8574 0
	cmpb	$116, %al	#, D.29059
	jne	.L2870	#,
	.loc 1 8577 0
	movq	-8(%rbp), %rax	# name, tmp2953
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2104, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$104, %eax	#, D.29060
	je	.L2872	#,
	cmpl	$115, %eax	#, D.29060
	je	.L2873	#,
	.loc 1 8652 0
	jmp	.L2208	#
.L2872:
	.loc 1 8580 0
	movq	-8(%rbp), %rax	# name, tmp2954
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2107, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2874	#,
	.loc 1 8581 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2955
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2109, D.29059
	.loc 1 8580 0 discriminator 1
	cmpb	$115, %al	#, D.29059
	jne	.L2874	#,
	.loc 1 8582 0
	movq	-8(%rbp), %rax	# name, tmp2956
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2111, D.29059
	.loc 1 8581 0
	cmpb	$116, %al	#, D.29059
	jne	.L2874	#,
	.loc 1 8583 0
	movq	-8(%rbp), %rax	# name, tmp2957
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2113, D.29059
	.loc 1 8582 0
	cmpb	$98, %al	#, D.29059
	jne	.L2874	#,
	.loc 1 8584 0
	movq	-8(%rbp), %rax	# name, tmp2958
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2115, D.29059
	.loc 1 8583 0
	cmpb	$121, %al	#, D.29059
	jne	.L2874	#,
	.loc 1 8586 0
	movq	-8(%rbp), %rax	# name, tmp2959
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2117, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$97, %eax	#, D.29060
	je	.L2876	#,
	cmpl	$110, %eax	#, D.29060
	je	.L2877	#,
	.loc 1 8609 0
	jmp	.L2208	#
.L2876:
	.loc 1 8589 0
	movq	-8(%rbp), %rax	# name, tmp2960
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2120, D.29059
	cmpb	$100, %al	#, D.29059
	jne	.L2878	#,
	.loc 1 8590 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2961
	addq	$11, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2122, D.29059
	.loc 1 8589 0 discriminator 1
	cmpb	$100, %al	#, D.29059
	jne	.L2878	#,
	.loc 1 8591 0
	movq	-8(%rbp), %rax	# name, tmp2962
	addq	$12, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2124, D.29059
	.loc 1 8590 0
	cmpb	$114, %al	#, D.29059
	jne	.L2878	#,
	.loc 1 8593 0
	movl	$-72, %eax	#, D.29058
	jmp	.L2207	#
.L2878:
	.loc 1 8596 0
	jmp	.L2208	#
.L2877:
	.loc 1 8599 0
	movq	-8(%rbp), %rax	# name, tmp2963
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2127, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2879	#,
	.loc 1 8600 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2964
	addq	$11, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2129, D.29059
	.loc 1 8599 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2879	#,
	.loc 1 8601 0
	movq	-8(%rbp), %rax	# name, tmp2965
	addq	$12, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2131, D.29059
	.loc 1 8600 0
	cmpb	$101, %al	#, D.29059
	jne	.L2879	#,
	.loc 1 8603 0
	movl	$-73, %eax	#, D.29058
	jmp	.L2207	#
.L2879:
	.loc 1 8606 0
	jmp	.L2208	#
.L2874:
	.loc 1 8613 0
	jmp	.L2208	#
.L2873:
	.loc 1 8616 0
	movq	-8(%rbp), %rax	# name, tmp2966
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2134, D.29059
	cmpb	$101, %al	#, D.29059
	jne	.L2880	#,
	.loc 1 8617 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2967
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2136, D.29059
	.loc 1 8616 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2880	#,
	.loc 1 8618 0
	movq	-8(%rbp), %rax	# name, tmp2968
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2138, D.29059
	.loc 1 8617 0
	cmpb	$118, %al	#, D.29059
	jne	.L2880	#,
	.loc 1 8619 0
	movq	-8(%rbp), %rax	# name, tmp2969
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2140, D.29059
	.loc 1 8618 0
	cmpb	$98, %al	#, D.29059
	jne	.L2880	#,
	.loc 1 8620 0
	movq	-8(%rbp), %rax	# name, tmp2970
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2142, D.29059
	.loc 1 8619 0
	cmpb	$121, %al	#, D.29059
	jne	.L2880	#,
	.loc 1 8622 0
	movq	-8(%rbp), %rax	# name, tmp2971
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2144, D.29059
	movsbl	%al, %eax	# D.29059, D.29060
	cmpl	$110, %eax	#, D.29060
	je	.L2882	#,
	cmpl	$112, %eax	#, D.29060
	je	.L2883	#,
	.loc 1 8645 0
	jmp	.L2208	#
.L2882:
	.loc 1 8625 0
	movq	-8(%rbp), %rax	# name, tmp2972
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2147, D.29059
	cmpb	$97, %al	#, D.29059
	jne	.L2884	#,
	.loc 1 8626 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2973
	addq	$11, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2149, D.29059
	.loc 1 8625 0 discriminator 1
	cmpb	$109, %al	#, D.29059
	jne	.L2884	#,
	.loc 1 8627 0
	movq	-8(%rbp), %rax	# name, tmp2974
	addq	$12, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2151, D.29059
	.loc 1 8626 0
	cmpb	$101, %al	#, D.29059
	jne	.L2884	#,
	.loc 1 8629 0
	movl	$-89, %eax	#, D.29058
	jmp	.L2207	#
.L2884:
	.loc 1 8632 0
	jmp	.L2208	#
.L2883:
	.loc 1 8635 0
	movq	-8(%rbp), %rax	# name, tmp2975
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2154, D.29059
	cmpb	$111, %al	#, D.29059
	jne	.L2885	#,
	.loc 1 8636 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2976
	addq	$11, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2156, D.29059
	.loc 1 8635 0 discriminator 1
	cmpb	$114, %al	#, D.29059
	jne	.L2885	#,
	.loc 1 8637 0
	movq	-8(%rbp), %rax	# name, tmp2977
	addq	$12, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2158, D.29059
	.loc 1 8636 0
	cmpb	$116, %al	#, D.29059
	jne	.L2885	#,
	.loc 1 8639 0
	movl	$-90, %eax	#, D.29058
	jmp	.L2207	#
.L2885:
	.loc 1 8642 0
	jmp	.L2208	#
.L2880:
	.loc 1 8649 0
	jmp	.L2208	#
.L2870:
	.loc 1 8656 0
	jmp	.L2208	#
.L2198:
	.loc 1 8659 0
	movq	-8(%rbp), %rax	# name, tmp2978
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	cmpb	$103, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8660 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2979
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2162, D.29059
	.loc 1 8659 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8661 0
	movq	-8(%rbp), %rax	# name, tmp2980
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2164, D.29059
	.loc 1 8660 0
	cmpb	$116, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8662 0
	movq	-8(%rbp), %rax	# name, tmp2981
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2166, D.29059
	.loc 1 8661 0
	cmpb	$112, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8663 0
	movq	-8(%rbp), %rax	# name, tmp2982
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2168, D.29059
	.loc 1 8662 0
	cmpb	$114, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8664 0
	movq	-8(%rbp), %rax	# name, tmp2983
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2170, D.29059
	.loc 1 8663 0
	cmpb	$111, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8665 0
	movq	-8(%rbp), %rax	# name, tmp2984
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2172, D.29059
	.loc 1 8664 0
	cmpb	$116, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8666 0
	movq	-8(%rbp), %rax	# name, tmp2985
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2174, D.29059
	.loc 1 8665 0
	cmpb	$111, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8667 0
	movq	-8(%rbp), %rax	# name, tmp2986
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2176, D.29059
	.loc 1 8666 0
	cmpb	$98, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8668 0
	movq	-8(%rbp), %rax	# name, tmp2987
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2178, D.29059
	.loc 1 8667 0
	cmpb	$121, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8669 0
	movq	-8(%rbp), %rax	# name, tmp2988
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2180, D.29059
	.loc 1 8668 0
	cmpb	$110, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8670 0
	movq	-8(%rbp), %rax	# name, tmp2989
	addq	$11, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2182, D.29059
	.loc 1 8669 0
	cmpb	$97, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8671 0
	movq	-8(%rbp), %rax	# name, tmp2990
	addq	$12, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2184, D.29059
	.loc 1 8670 0
	cmpb	$109, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8672 0
	movq	-8(%rbp), %rax	# name, tmp2991
	addq	$13, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2186, D.29059
	.loc 1 8671 0
	cmpb	$101, %al	#, D.29059
	jne	.L2886	#,
	.loc 1 8674 0
	movl	$-83, %eax	#, D.29058
	jmp	.L2207	#
.L2886:
	.loc 1 8677 0
	jmp	.L2208	#
.L2199:
	.loc 1 8680 0
	movq	-8(%rbp), %rax	# name, tmp2992
	movzbl	(%rax), %eax	# *name_3(D), D.29059
	cmpb	$103, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8681 0 discriminator 1
	movq	-8(%rbp), %rax	# name, tmp2993
	addq	$1, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2190, D.29059
	.loc 1 8680 0 discriminator 1
	cmpb	$101, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8682 0
	movq	-8(%rbp), %rax	# name, tmp2994
	addq	$2, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2192, D.29059
	.loc 1 8681 0
	cmpb	$116, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8683 0
	movq	-8(%rbp), %rax	# name, tmp2995
	addq	$3, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2194, D.29059
	.loc 1 8682 0
	cmpb	$112, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8684 0
	movq	-8(%rbp), %rax	# name, tmp2996
	addq	$4, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2196, D.29059
	.loc 1 8683 0
	cmpb	$114, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8685 0
	movq	-8(%rbp), %rax	# name, tmp2997
	addq	$5, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2198, D.29059
	.loc 1 8684 0
	cmpb	$111, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8686 0
	movq	-8(%rbp), %rax	# name, tmp2998
	addq	$6, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2200, D.29059
	.loc 1 8685 0
	cmpb	$116, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8687 0
	movq	-8(%rbp), %rax	# name, tmp2999
	addq	$7, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2202, D.29059
	.loc 1 8686 0
	cmpb	$111, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8688 0
	movq	-8(%rbp), %rax	# name, tmp3000
	addq	$8, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2204, D.29059
	.loc 1 8687 0
	cmpb	$98, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8689 0
	movq	-8(%rbp), %rax	# name, tmp3001
	addq	$9, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2206, D.29059
	.loc 1 8688 0
	cmpb	$121, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8690 0
	movq	-8(%rbp), %rax	# name, tmp3002
	addq	$10, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2208, D.29059
	.loc 1 8689 0
	cmpb	$110, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8691 0
	movq	-8(%rbp), %rax	# name, tmp3003
	addq	$11, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2210, D.29059
	.loc 1 8690 0
	cmpb	$117, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8692 0
	movq	-8(%rbp), %rax	# name, tmp3004
	addq	$12, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2212, D.29059
	.loc 1 8691 0
	cmpb	$109, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8693 0
	movq	-8(%rbp), %rax	# name, tmp3005
	addq	$13, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2214, D.29059
	.loc 1 8692 0
	cmpb	$98, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8694 0
	movq	-8(%rbp), %rax	# name, tmp3006
	addq	$14, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2216, D.29059
	.loc 1 8693 0
	cmpb	$101, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8695 0
	movq	-8(%rbp), %rax	# name, tmp3007
	addq	$15, %rax	#, D.29061
	movzbl	(%rax), %eax	# *_2218, D.29059
	.loc 1 8694 0
	cmpb	$114, %al	#, D.29059
	jne	.L2887	#,
	.loc 1 8697 0
	movl	$-84, %eax	#, D.29058
	jmp	.L2207	#
.L2887:
	.loc 1 8700 0
	jmp	.L2208	#
.L2888:
	.loc 1 8703 0
	nop
	jmp	.L2208	#
.L2889:
	.loc 1 5454 0
	nop
	jmp	.L2208	#
.L2890:
	.loc 1 5600 0
	nop
	jmp	.L2208	#
.L2891:
	.loc 1 5877 0
	nop
	jmp	.L2208	#
.L2892:
	.loc 1 6338 0
	nop
	jmp	.L2208	#
.L2893:
	.loc 1 6791 0
	nop
	jmp	.L2208	#
.L2894:
	.loc 1 6684 0
	nop
	jmp	.L2208	#
.L2895:
	.loc 1 7250 0
	nop
	jmp	.L2208	#
.L2896:
	.loc 1 7187 0
	nop
	jmp	.L2208	#
.L2897:
	.loc 1 7651 0
	nop
	jmp	.L2208	#
.L2898:
	.loc 1 8064 0
	nop
	jmp	.L2208	#
.L2899:
	.loc 1 8191 0
	nop
.L2208:
	.loc 1 8707 0
	movl	$0, %eax	#, D.29058
.L2207:
	.loc 1 8708 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE34:
	.size	Perl_keyword, .-Perl_keyword
	.section	.rodata
.LC161:
	.string	";|})]oaiuw!="
	.align 8
.LC162:
	.string	"%s (...) interpreted as function"
.LC163:
	.string	"No comma allowed after %s"
	.text
	.type	S_checkcomma, @function
S_checkcomma:
.LFB35:
	.loc 1 8712 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# s, s
	movq	%rsi, -40(%rbp)	# name, name
	movq	%rdx, -48(%rbp)	# what, what
	.loc 1 8715 0
	movzbl	(%rbx), %eax	# *s_17(D), D.29073
	cmpb	$32, %al	#, D.29073
	jne	.L2901	#,
	.loc 1 8715 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29074
	movzbl	(%rax), %eax	# *_19, D.29073
	cmpb	$40, %al	#, D.29073
	jne	.L2901	#,
	.loc 1 8716 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1873
	movq	80(%rax), %rax	# PL_curcop.1873_21->cop_warnings, D.29075
	testq	%rax, %rax	# D.29075
	je	.L2902	#,
	.loc 1 8716 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1874
	movq	80(%rax), %rax	# PL_curcop.1874_23->cop_warnings, D.29075
	cmpq	$32, %rax	#, D.29075
	je	.L2902	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1875
	movq	80(%rax), %rax	# PL_curcop.1875_25->cop_warnings, D.29075
	cmpq	$16, %rax	#, D.29075
	je	.L2903	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1876
	movq	80(%rax), %rax	# PL_curcop.1876_27->cop_warnings, D.29075
	movq	(%rax), %rax	# _28->sv_any, D.29076
	movq	(%rax), %rax	# MEM[(struct XPV *)_29].xpv_pv, D.29074
	addq	$7, %rax	#, D.29074
	movzbl	(%rax), %eax	# *_31, D.29073
	movsbl	%al, %eax	# D.29073, D.29077
	andl	$1, %eax	#, D.29077
	testl	%eax, %eax	# D.29077
	jne	.L2903	#,
.L2902:
	.loc 1 8716 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1877
	movq	80(%rax), %rax	# PL_curcop.1877_35->cop_warnings, D.29075
	testq	%rax, %rax	# D.29075
	jne	.L2901	#,
	.loc 1 8716 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1878
	movzbl	%al, %eax	# PL_dowarn.1878, D.29077
	andl	$1, %eax	#, D.29077
	testl	%eax, %eax	# D.29077
	je	.L2901	#,
.L2903:
.LBB88:
	.loc 1 8717 0 is_stmt 1
	movl	$1, -32(%rbp)	#, level
	.loc 1 8718 0
	leaq	2(%rbx), %rax	#, tmp174
	movq	%rax, -24(%rbp)	# tmp174, w
	jmp	.L2904	#
.L2908:
	.loc 1 8719 0
	movq	-24(%rbp), %rax	# w, tmp175
	movzbl	(%rax), %eax	# *w_6, D.29073
	cmpb	$40, %al	#, D.29073
	jne	.L2905	#,
	.loc 1 8720 0
	addl	$1, -32(%rbp)	#, level
	jmp	.L2906	#
.L2905:
	.loc 1 8721 0
	movq	-24(%rbp), %rax	# w, tmp176
	movzbl	(%rax), %eax	# *w_6, D.29073
	cmpb	$41, %al	#, D.29073
	jne	.L2906	#,
	.loc 1 8722 0
	subl	$1, -32(%rbp)	#, level
.L2906:
	.loc 1 8718 0
	addq	$1, -24(%rbp)	#, w
.L2904:
	.loc 1 8718 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# w, tmp177
	movzbl	(%rax), %eax	# *w_6, D.29073
	testb	%al, %al	# D.29073
	je	.L2907	#,
	.loc 1 8718 0 discriminator 2
	cmpl	$0, -32(%rbp)	#, level
	jne	.L2908	#,
.L2907:
	.loc 1 8724 0 is_stmt 1
	movq	-24(%rbp), %rax	# w, tmp178
	movzbl	(%rax), %eax	# *w_6, D.29073
	testb	%al, %al	# D.29073
	je	.L2909	#,
	.loc 1 8725 0
	jmp	.L2910	#
.L2911:
	.loc 1 8725 0 is_stmt 0 discriminator 1
	addq	$1, -24(%rbp)	#, w
.L2910:
	movq	-24(%rbp), %rax	# w, tmp179
	movzbl	(%rax), %eax	# *w_7, D.29073
	testb	%al, %al	# D.29073
	je	.L2909	#,
	.loc 1 8725 0 discriminator 2
	movq	-24(%rbp), %rax	# w, tmp180
	movzbl	(%rax), %eax	# *w_7, D.29073
	cmpb	$32, %al	#, D.29073
	je	.L2911	#,
	movq	-24(%rbp), %rax	# w, tmp181
	movzbl	(%rax), %eax	# *w_7, D.29073
	cmpb	$9, %al	#, D.29073
	je	.L2911	#,
	.loc 1 8725 0 discriminator 1
	movq	-24(%rbp), %rax	# w, tmp182
	movzbl	(%rax), %eax	# *w_7, D.29073
	cmpb	$10, %al	#, D.29073
	je	.L2911	#,
	movq	-24(%rbp), %rax	# w, tmp183
	movzbl	(%rax), %eax	# *w_7, D.29073
	cmpb	$13, %al	#, D.29073
	je	.L2911	#,
	movq	-24(%rbp), %rax	# w, tmp184
	movzbl	(%rax), %eax	# *w_7, D.29073
	cmpb	$12, %al	#, D.29073
	je	.L2911	#,
.L2909:
	.loc 1 8726 0 is_stmt 1
	movq	-24(%rbp), %rax	# w, tmp185
	movzbl	(%rax), %eax	# *w_8, D.29073
	testb	%al, %al	# D.29073
	je	.L2912	#,
	.loc 1 8726 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# w, tmp186
	movzbl	(%rax), %eax	# *w_8, D.29073
	movsbl	%al, %eax	# D.29073, D.29077
	movl	%eax, %esi	# D.29077,
	movl	$.LC161, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.29074
	jne	.L2901	#,
.L2912:
	.loc 1 8727 0 is_stmt 1
	movq	-40(%rbp), %rax	# name, tmp187
	movq	%rax, %rdx	# tmp187,
	movl	$.LC162, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.LBE88:
	.loc 1 8731 0
	jmp	.L2913	#
.L2901:
	jmp	.L2913	#
.L2915:
	.loc 1 8732 0
	addq	$1, %rbx	#, s
.L2913:
	.loc 1 8731 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1879
	cmpq	%rax, %rbx	# PL_bufend.1879, s
	jae	.L2914	#,
	.loc 1 8731 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_1, D.29073
	cmpb	$32, %al	#, D.29073
	je	.L2915	#,
	.loc 1 8731 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1, D.29073
	cmpb	$9, %al	#, D.29073
	je	.L2915	#,
	movzbl	(%rbx), %eax	# *s_1, D.29073
	cmpb	$10, %al	#, D.29073
	je	.L2915	#,
	movzbl	(%rbx), %eax	# *s_1, D.29073
	cmpb	$13, %al	#, D.29073
	je	.L2915	#,
	movzbl	(%rbx), %eax	# *s_1, D.29073
	cmpb	$12, %al	#, D.29073
	je	.L2915	#,
.L2914:
	.loc 1 8733 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_1, D.29073
	cmpb	$40, %al	#, D.29073
	jne	.L2916	#,
	.loc 1 8734 0
	addq	$1, %rbx	#, s
	.loc 1 8735 0
	jmp	.L2917	#
.L2916:
	jmp	.L2917	#
.L2919:
	.loc 1 8736 0
	addq	$1, %rbx	#, s
.L2917:
	.loc 1 8735 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1880
	cmpq	%rax, %rbx	# PL_bufend.1880, s
	jae	.L2918	#,
	.loc 1 8735 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.29073
	cmpb	$32, %al	#, D.29073
	je	.L2919	#,
	.loc 1 8735 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.29073
	cmpb	$9, %al	#, D.29073
	je	.L2919	#,
	movzbl	(%rbx), %eax	# *s_3, D.29073
	cmpb	$10, %al	#, D.29073
	je	.L2919	#,
	movzbl	(%rbx), %eax	# *s_3, D.29073
	cmpb	$13, %al	#, D.29073
	je	.L2919	#,
	movzbl	(%rbx), %eax	# *s_3, D.29073
	cmpb	$12, %al	#, D.29073
	je	.L2919	#,
.L2918:
	.loc 1 8737 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1882
	movzbl	37(%rax), %eax	# PL_curcop.1882_77->op_private, D.29078
	movzbl	%al, %eax	# D.29078, D.29077
	andl	$8, %eax	#, D.29077
	testl	%eax, %eax	# D.29077
	jne	.L2920	#,
	.loc 1 8737 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1883
	testq	%rax, %rax	# PL_linestr.1883
	je	.L2921	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1884
	movl	12(%rax), %eax	# PL_linestr.1884_82->sv_flags, D.29079
	andl	$536870912, %eax	#, D.29079
	testl	%eax, %eax	# D.29079
	je	.L2921	#,
	.loc 1 8737 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1885
	movzbl	37(%rax), %eax	# PL_curcop.1885_85->op_private, D.29078
	movzbl	%al, %eax	# D.29078, D.29077
	andl	$8, %eax	#, D.29077
	testl	%eax, %eax	# D.29077
	je	.L2922	#,
.L2921:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1886
	andl	$8388608, %eax	#, D.29079
	testl	%eax, %eax	# D.29079
	je	.L2920	#,
.L2922:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_3], D.29078
	cmpb	$-65, %al	#, D.29078
	ja	.L2923	#,
.L2920:
	movzbl	(%rbx), %eax	# *s_3, D.29073
	cmpb	$64, %al	#, D.29073
	jle	.L2924	#,
	movzbl	(%rbx), %eax	# *s_3, D.29073
	cmpb	$90, %al	#, D.29073
	jle	.L2925	#,
.L2924:
	.loc 1 8737 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.29073
	cmpb	$96, %al	#, D.29073
	jle	.L2926	#,
	.loc 1 8737 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.29073
	cmpb	$122, %al	#, D.29073
	jle	.L2925	#,
.L2926:
	.loc 1 8737 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.29073
	cmpb	$95, %al	#, D.29073
	jne	.L2927	#,
.L2925:
	.loc 1 8737 0 discriminator 1
	movl	$1, %eax	#, iftmp.1887
	jmp	.L2928	#
.L2927:
	.loc 1 8737 0 discriminator 3
	movl	$0, %eax	#, iftmp.1887
.L2928:
	.loc 1 8737 0 discriminator 4
	andl	$1, %eax	#, iftmp.1881
	jmp	.L2929	#
.L2923:
	.loc 1 8737 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.29073
	je	.L2930	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.29073
	jne	.L2930	#,
	.loc 1 8737 0 discriminator 3
	movl	$1, %eax	#, iftmp.1888
	jmp	.L2931	#
.L2930:
	.loc 1 8737 0 discriminator 2
	movl	$0, %eax	#, iftmp.1888
.L2931:
	.loc 1 8737 0 discriminator 4
	andl	$1, %eax	#, iftmp.1881
.L2929:
	.loc 1 8737 0 discriminator 3
	testb	%al, %al	# iftmp.1881
	je	.L2900	#,
	.loc 1 8738 0 is_stmt 1
	movq	%rbx, %rax	# s, s.1889
	leaq	1(%rax), %rbx	#, s
	movq	%rax, -24(%rbp)	# s.1889, w
	.loc 1 8739 0
	jmp	.L2933	#
.L2945:
	.loc 1 8740 0
	addq	$1, %rbx	#, s
.L2933:
	.loc 1 8739 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1891
	movzbl	37(%rax), %eax	# PL_curcop.1891_108->op_private, D.29078
	movzbl	%al, %eax	# D.29078, D.29077
	andl	$8, %eax	#, D.29077
	testl	%eax, %eax	# D.29077
	jne	.L2934	#,
	.loc 1 8739 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1892
	testq	%rax, %rax	# PL_linestr.1892
	je	.L2935	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1893
	movl	12(%rax), %eax	# PL_linestr.1893_113->sv_flags, D.29079
	andl	$536870912, %eax	#, D.29079
	testl	%eax, %eax	# D.29079
	je	.L2935	#,
	.loc 1 8739 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1894
	movzbl	37(%rax), %eax	# PL_curcop.1894_116->op_private, D.29078
	movzbl	%al, %eax	# D.29078, D.29077
	andl	$8, %eax	#, D.29077
	testl	%eax, %eax	# D.29077
	je	.L2936	#,
.L2935:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1895
	andl	$8388608, %eax	#, D.29079
	testl	%eax, %eax	# D.29079
	je	.L2934	#,
.L2936:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_4], D.29078
	cmpb	$-65, %al	#, D.29078
	ja	.L2937	#,
.L2934:
	movzbl	(%rbx), %eax	# *s_4, D.29073
	cmpb	$64, %al	#, D.29073
	jle	.L2938	#,
	movzbl	(%rbx), %eax	# *s_4, D.29073
	cmpb	$90, %al	#, D.29073
	jle	.L2939	#,
.L2938:
	.loc 1 8739 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4, D.29073
	cmpb	$96, %al	#, D.29073
	jle	.L2940	#,
	.loc 1 8739 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_4, D.29073
	cmpb	$122, %al	#, D.29073
	jle	.L2939	#,
.L2940:
	.loc 1 8739 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4, D.29073
	cmpb	$47, %al	#, D.29073
	jle	.L2941	#,
	.loc 1 8739 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_4, D.29073
	cmpb	$57, %al	#, D.29073
	jle	.L2939	#,
.L2941:
	.loc 1 8739 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4, D.29073
	cmpb	$95, %al	#, D.29073
	jne	.L2942	#,
.L2939:
	.loc 1 8739 0 discriminator 1
	movl	$1, %eax	#, iftmp.1896
	jmp	.L2943	#
.L2942:
	.loc 1 8739 0 discriminator 3
	movl	$0, %eax	#, iftmp.1896
.L2943:
	.loc 1 8739 0 discriminator 4
	andl	$1, %eax	#, iftmp.1890
	jmp	.L2944	#
.L2937:
	.loc 1 8739 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.29073
	setne	%al	#, iftmp.1890
.L2944:
	.loc 1 8739 0 discriminator 3
	testb	%al, %al	# iftmp.1890
	jne	.L2945	#,
	.loc 1 8741 0 is_stmt 1
	jmp	.L2946	#
.L2948:
	.loc 1 8742 0
	addq	$1, %rbx	#, s
.L2946:
	.loc 1 8741 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.1897
	cmpq	%rax, %rbx	# PL_bufend.1897, s
	jae	.L2947	#,
	.loc 1 8741 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_5, D.29073
	cmpb	$32, %al	#, D.29073
	je	.L2948	#,
	.loc 1 8741 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_5, D.29073
	cmpb	$9, %al	#, D.29073
	je	.L2948	#,
	movzbl	(%rbx), %eax	# *s_5, D.29073
	cmpb	$10, %al	#, D.29073
	je	.L2948	#,
	movzbl	(%rbx), %eax	# *s_5, D.29073
	cmpb	$13, %al	#, D.29073
	je	.L2948	#,
	movzbl	(%rbx), %eax	# *s_5, D.29073
	cmpb	$12, %al	#, D.29073
	je	.L2948	#,
.L2947:
	.loc 1 8743 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_5, D.29073
	cmpb	$44, %al	#, D.29073
	jne	.L2900	#,
.LBB89:
	.loc 1 8745 0
	movb	$0, (%rbx)	#, *s_5
	.loc 1 8746 0
	movq	%rbx, %rdx	# s, s.1899
	movq	-24(%rbp), %rax	# w, w.1900
	subq	%rax, %rdx	# w.1900, D.29080
	movq	%rdx, %rax	# D.29080, D.29080
	movl	%eax, %edx	# D.29080, D.29077
	movq	-24(%rbp), %rax	# w, tmp188
	movl	%edx, %esi	# D.29077,
	movq	%rax, %rdi	# tmp188,
	call	Perl_keyword	#
	testl	%eax, %eax	# D.29077
	jne	.L2949	#,
	.loc 1 8746 0 is_stmt 0 discriminator 2
	movq	-24(%rbp), %rax	# w, tmp189
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp189,
	call	Perl_get_cv	#
	testq	%rax, %rax	# D.29081
	je	.L2950	#,
.L2949:
	.loc 1 8746 0 discriminator 1
	movl	$1, %eax	#, iftmp.1898
	jmp	.L2951	#
.L2950:
	.loc 1 8746 0 discriminator 3
	movl	$0, %eax	#, iftmp.1898
.L2951:
	.loc 1 8746 0 discriminator 4
	movl	%eax, -28(%rbp)	# iftmp.1898, kw
	.loc 1 8747 0 is_stmt 1 discriminator 4
	movb	$44, (%rbx)	#, *s_5
	.loc 1 8748 0 discriminator 4
	cmpl	$0, -28(%rbp)	#, kw
	je	.L2952	#,
	.loc 1 8749 0
	jmp	.L2900	#
.L2952:
	.loc 1 8750 0
	movq	-48(%rbp), %rax	# what, tmp190
	movq	%rax, %rsi	# tmp190,
	movl	$.LC163, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2900:
.LBE89:
	.loc 1 8753 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE35:
	.size	S_checkcomma, .-S_checkcomma
	.section	.rodata
	.align 8
.LC164:
	.string	"(possibly a missing \"use charnames ...\")"
.LC165:
	.string	"undef"
.LC166:
	.string	"Constant(%s) unknown: %s"
.LC167:
	.string	"Constant(%s): %s%s%s"
.LC168:
	.string	"$^H{"
.LC169:
	.string	"} is not defined"
.LC170:
	.string	"Propagated"
.LC171:
	.string	"panic: POPSTACK\n"
.LC172:
	.string	"Call to &{$^H{"
	.align 8
.LC173:
	.string	"}} did not return a defined value"
	.text
	.type	S_new_constant, @function
S_new_constant:
.LFB36:
	.loc 1 8763 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$152, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -120(%rbp)	# s, s
	movq	%rsi, -128(%rbp)	# len, len
	movq	%rdx, -136(%rbp)	# key, key
	movq	%rcx, -144(%rbp)	# sv, sv
	movq	%r8, -152(%rbp)	# pv, pv
	movq	%r9, -160(%rbp)	# type, type
	.loc 1 8764 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 8765 0
	movq	PL_hintgv(%rip), %rax	# PL_hintgv, PL_hintgv.1901
	movq	(%rax), %rax	# PL_hintgv.1901_24->sv_any, D.29086
	movq	56(%rax), %rax	# _25->xgv_gp, D.29087
	movq	40(%rax), %rax	# _26->gp_hv, tmp280
	movq	%rax, -48(%rbp)	# tmp280, table
	.loc 1 8771 0
	cmpq	$0, -48(%rbp)	#, table
	je	.L2954	#,
	.loc 1 8771 0 is_stmt 0 discriminator 1
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1902
	andl	$131072, %eax	#, D.29088
	testl	%eax, %eax	# D.29088
	jne	.L2955	#,
.L2954:
.LBB90:
	.loc 1 8774 0 is_stmt 1
	movq	-136(%rbp), %rax	# key, tmp281
	movl	$.LC29, %esi	#,
	movq	%rax, %rdi	# tmp281,
	call	strcmp	#
	.loc 1 8776 0
	testl	%eax, %eax	# D.29090
	jne	.L2956	#,
	.loc 1 8776 0 is_stmt 0 discriminator 1
	movl	$.LC164, %eax	#, iftmp.1903
	jmp	.L2957	#
.L2956:
	.loc 1 8776 0 discriminator 2
	movl	$.LC17, %eax	#, iftmp.1903
.L2957:
	.loc 1 8774 0 is_stmt 1
	movq	%rax, -80(%rbp)	# iftmp.1903, why2
	.loc 1 8777 0
	cmpq	$0, -160(%rbp)	#, type
	je	.L2958	#,
	.loc 1 8777 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# type, iftmp.1904
	jmp	.L2959	#
.L2958:
	.loc 1 8777 0 discriminator 2
	movl	$.LC165, %eax	#, iftmp.1904
.L2959:
	.loc 1 8777 0 discriminator 3
	movq	-80(%rbp), %rdx	# why2, tmp282
	movq	%rax, %rsi	# iftmp.1904,
	movl	$.LC166, %edi	#,
	movl	$0, %eax	#,
	call	Perl_newSVpvf	#
	movq	%rax, -64(%rbp)	# tmp283, msg
	.loc 1 8785 0 is_stmt 1 discriminator 3
	jmp	.L2960	#
.L2961:
	.loc 1 8788 0
	cmpq	$0, -160(%rbp)	#, type
	je	.L2962	#,
	.loc 1 8788 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# type, iftmp.1905
	jmp	.L2963	#
.L2962:
	.loc 1 8788 0 discriminator 2
	movl	$.LC165, %eax	#, iftmp.1905
.L2963:
	.loc 1 8788 0 discriminator 3
	movq	-72(%rbp), %rsi	# why3, tmp284
	movq	-80(%rbp), %rcx	# why2, tmp285
	movq	-88(%rbp), %rdx	# why1, tmp286
	movq	%rsi, %r8	# tmp284,
	movq	%rax, %rsi	# iftmp.1905,
	movl	$.LC167, %edi	#,
	movl	$0, %eax	#,
	call	Perl_newSVpvf	#
	movq	%rax, -64(%rbp)	# tmp287, msg
.L2960:
	.loc 1 8791 0 is_stmt 1
	movq	-64(%rbp), %rax	# msg, tmp288
	movq	(%rax), %rax	# msg_13->sv_any, D.29098
	movq	(%rax), %rax	# MEM[(struct XPV *)_284].xpv_pv, D.29095
	movq	%rax, %rdi	# D.29095,
	call	Perl_yyerror	#
	.loc 1 8792 0
	movq	-64(%rbp), %rax	# msg, tmp289
	movq	%rax, %rdi	# tmp289,
	call	Perl_sv_free	#
	.loc 1 8793 0
	movq	-144(%rbp), %rax	# sv, D.29085
	jmp	.L2964	#
.L2955:
.LBE90:
	.loc 1 8795 0
	movq	-136(%rbp), %rax	# key, tmp290
	movq	%rax, %rdi	# tmp290,
	call	strlen	#
	movl	%eax, %edx	# D.29089, D.29090
	movq	-136(%rbp), %rsi	# key, tmp291
	movq	-48(%rbp), %rax	# table, tmp292
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp292,
	call	Perl_hv_fetch	#
	movq	%rax, -40(%rbp)	# tmp293, cvp
	.loc 1 8796 0
	cmpq	$0, -40(%rbp)	#, cvp
	je	.L2965	#,
	.loc 1 8796 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# cvp, tmp294
	movq	(%rax), %rax	# *cvp_33, D.29085
	movl	12(%rax), %eax	# _34->sv_flags, D.29088
	andl	$118423552, %eax	#, D.29088
	testl	%eax, %eax	# D.29088
	jne	.L2966	#,
.L2965:
	.loc 1 8797 0 is_stmt 1
	movq	$.LC168, -88(%rbp)	#, why1
	.loc 1 8798 0
	movq	-136(%rbp), %rax	# key, tmp295
	movq	%rax, -80(%rbp)	# tmp295, why2
	.loc 1 8799 0
	movq	$.LC169, -72(%rbp)	#, why3
	.loc 1 8800 0
	jmp	.L2961	#
.L2966:
	.loc 1 8802 0
	movq	-144(%rbp), %rax	# sv, tmp296
	movq	%rax, %rdi	# tmp296,
	call	Perl_sv_2mortal	#
	.loc 1 8803 0
	movq	-40(%rbp), %rax	# cvp, tmp297
	movq	(%rax), %rax	# *cvp_33, tmp298
	movq	%rax, -32(%rbp)	# tmp298, cv
	.loc 1 8804 0
	cmpq	$0, -152(%rbp)	#, pv
	jne	.L2967	#,
	.loc 1 8804 0 is_stmt 0 discriminator 1
	cmpq	$0, -120(%rbp)	#, s
	je	.L2967	#,
	.loc 1 8805 0 is_stmt 1
	movq	-128(%rbp), %rdx	# len, tmp299
	movq	-120(%rbp), %rax	# s, tmp300
	movq	%rdx, %rsi	# tmp299,
	movq	%rax, %rdi	# tmp300,
	call	Perl_newSVpvn	#
	movq	%rax, %rdi	# D.29085,
	call	Perl_sv_2mortal	#
	movq	%rax, -152(%rbp)	# tmp301, pv
.L2967:
	.loc 1 8806 0
	cmpq	$0, -160(%rbp)	#, type
	je	.L2968	#,
	.loc 1 8806 0 is_stmt 0 discriminator 1
	cmpq	$0, -152(%rbp)	#, pv
	je	.L2968	#,
	.loc 1 8807 0 is_stmt 1
	movq	-160(%rbp), %rax	# type, tmp302
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp302,
	call	Perl_newSVpv	#
	movq	%rax, %rdi	# D.29085,
	call	Perl_sv_2mortal	#
	movq	%rax, -96(%rbp)	# tmp303, typesv
	jmp	.L2969	#
.L2968:
	.loc 1 8809 0
	movq	$PL_sv_undef, -96(%rbp)	#, typesv
.L2969:
.LBB91:
	.loc 1 8811 0
	movq	PL_curstackinfo(%rip), %rax	# PL_curstackinfo, PL_curstackinfo.1906
	movq	40(%rax), %rax	# PL_curstackinfo.1906_48->si_next, tmp304
	movq	%rax, -56(%rbp)	# tmp304, next
	cmpq	$0, -56(%rbp)	#, next
	jne	.L2970	#,
	.loc 1 8811 0 is_stmt 0 discriminator 1
	movl	$13, %esi	#,
	movl	$32, %edi	#,
	call	Perl_new_stackinfo	#
	movq	%rax, -56(%rbp)	# tmp305, next
	movq	PL_curstackinfo(%rip), %rdx	# PL_curstackinfo, PL_curstackinfo.1907
	movq	-56(%rbp), %rax	# next, tmp306
	movq	%rdx, 32(%rax)	# PL_curstackinfo.1907, next_50->si_prev
	movq	PL_curstackinfo(%rip), %rax	# PL_curstackinfo, PL_curstackinfo.1908
	movq	-56(%rbp), %rdx	# next, tmp307
	movq	%rdx, 40(%rax)	# tmp307, PL_curstackinfo.1908_52->si_next
.L2970:
	.loc 1 8811 0 discriminator 2
	movq	-56(%rbp), %rax	# next, tmp308
	movl	$5, 24(%rax)	#, next_14->si_type
	movq	-56(%rbp), %rax	# next, tmp309
	movl	$-1, 16(%rax)	#, next_14->si_cxix
	movq	-56(%rbp), %rax	# next, tmp310
	movq	(%rax), %rax	# next_14->si_stack, D.29091
	movq	(%rax), %rax	# _53->sv_any, D.29092
	movq	$0, 8(%rax)	#, _54->xav_fill
.LBB92:
	movq	PL_curstack(%rip), %rax	# PL_curstack, PL_curstack.1909
	movq	(%rax), %rax	# PL_curstack.1909_55->sv_any, D.29092
	movq	%rbx, %rcx	# sp, sp.1910
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1911
	subq	%rdx, %rcx	# PL_stack_base.1912, D.29093
	movq	%rcx, %rdx	# D.29093, D.29093
	sarq	$3, %rdx	#, tmp311
	movq	%rdx, 8(%rax)	# D.29093, _56->xav_fill
	movq	-56(%rbp), %rax	# next, tmp312
	movq	(%rax), %rax	# next_14->si_stack, D.29091
	movq	(%rax), %rax	# _62->sv_any, D.29092
	movq	(%rax), %rax	# _63->xav_array, PL_stack_base.1913
	movq	%rax, PL_stack_base(%rip)	# PL_stack_base.1913, PL_stack_base
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1914
	movq	-56(%rbp), %rax	# next, tmp313
	movq	(%rax), %rax	# next_14->si_stack, D.29091
	movq	(%rax), %rax	# _66->sv_any, D.29092
	movq	16(%rax), %rax	# _67->xav_max, D.29093
	salq	$3, %rax	#, D.29089
	addq	%rdx, %rax	# PL_stack_base.1914, PL_stack_max.1915
	movq	%rax, PL_stack_max(%rip)	# PL_stack_max.1915, PL_stack_max
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1916
	movq	-56(%rbp), %rax	# next, tmp314
	movq	(%rax), %rax	# next_14->si_stack, D.29091
	movq	(%rax), %rax	# _73->sv_any, D.29092
	movq	8(%rax), %rax	# _74->xav_fill, D.29093
	salq	$3, %rax	#, D.29089
	addq	%rdx, %rax	# PL_stack_base.1916, PL_stack_sp.1917
	movq	%rax, PL_stack_sp(%rip)	# PL_stack_sp.1917, PL_stack_sp
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-56(%rbp), %rax	# next, tmp315
	movq	(%rax), %rax	# next_14->si_stack, PL_curstack.1918
	movq	%rax, PL_curstack(%rip)	# PL_curstack.1918, PL_curstack
.LBE92:
	movq	-56(%rbp), %rax	# next, tmp316
	movq	%rax, PL_curstackinfo(%rip)	# tmp316, PL_curstackinfo
.LBE91:
	.loc 1 8812 0 is_stmt 1 discriminator 2
	call	Perl_push_scope	#
	.loc 1 8813 0 discriminator 2
	movl	$PL_tmps_floor, %edi	#,
	call	Perl_save_int	#
	movl	PL_tmps_ix(%rip), %eax	# PL_tmps_ix, PL_tmps_ix.1919
	movl	%eax, PL_tmps_floor(%rip)	# PL_tmps_ix.1919, PL_tmps_floor
.LBB93:
	.loc 1 8815 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1920
	addq	$4, %rax	#, PL_markstack_ptr.1921
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1921, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.1922
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.1923
	cmpq	%rax, %rdx	# PL_markstack_max.1923, PL_markstack_ptr.1922
	jne	.L2971	#,
	.loc 1 8815 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L2971:
	.loc 1 8815 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1924
	movq	%rbx, %rcx	# sp, sp.1925
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1926
	subq	%rdx, %rcx	# PL_stack_base.1927, D.29093
	movq	%rcx, %rdx	# D.29093, D.29093
	sarq	$3, %rdx	#, tmp317
	movl	%edx, (%rax)	# D.29090, *PL_markstack_ptr.1924_87
.LBE93:
	.loc 1 8816 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1928
	movq	%rax, %rdx	# PL_stack_max.1928, PL_stack_max.1929
	movq	%rbx, %rax	# sp, sp.1930
	subq	%rax, %rdx	# sp.1930, D.29093
	movq	%rdx, %rax	# D.29093, D.29093
	cmpq	$23, %rax	#, D.29093
	jg	.L2972	#,
	.loc 1 8816 0 is_stmt 0 discriminator 1
	movl	$3, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2972:
	.loc 1 8817 0 is_stmt 1
	cmpq	$0, -152(%rbp)	#, pv
	je	.L2973	#,
	.loc 1 8818 0
	addq	$8, %rbx	#, sp
	movq	-152(%rbp), %rax	# pv, tmp318
	movq	%rax, (%rbx)	# tmp318, *sp_100
.L2973:
	.loc 1 8819 0
	addq	$8, %rbx	#, sp
	movq	-144(%rbp), %rax	# sv, tmp319
	movq	%rax, (%rbx)	# tmp319, *sp_101
	.loc 1 8820 0
	cmpq	$0, -152(%rbp)	#, pv
	je	.L2974	#,
	.loc 1 8821 0
	addq	$8, %rbx	#, sp
	movq	-96(%rbp), %rax	# typesv, tmp320
	movq	%rax, (%rbx)	# tmp320, *sp_102
.L2974:
	.loc 1 8822 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 8823 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.1932
	testl	%eax, %eax	# PL_in_eval.1932
	je	.L2975	#,
	.loc 1 8823 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.1931
	jmp	.L2976	#
.L2975:
	.loc 1 8823 0 discriminator 2
	movl	$4, %eax	#, iftmp.1931
.L2976:
	.loc 1 8823 0 discriminator 3
	movq	-32(%rbp), %rdx	# cv, tmp321
	movl	%eax, %esi	# iftmp.1931,
	movq	%rdx, %rdi	# tmp321,
	call	Perl_call_sv	#
	.loc 1 8825 0 is_stmt 1 discriminator 3
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 8828 0 discriminator 3
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.1933
	testl	%eax, %eax	# PL_in_eval.1933
	jne	.L2977	#,
	.loc 1 8828 0 is_stmt 0 discriminator 1
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1934
	movq	(%rax), %rax	# PL_errgv.1934_108->sv_any, D.29086
	movq	56(%rax), %rax	# _109->xgv_gp, D.29087
	movq	(%rax), %rax	# _110->gp_sv, D.29085
	testq	%rax, %rax	# D.29085
	je	.L2977	#,
	.loc 1 8828 0 discriminator 2
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1935
	movq	(%rax), %rax	# PL_errgv.1935_112->sv_any, D.29086
	movq	56(%rax), %rax	# _113->xgv_gp, D.29087
	movq	(%rax), %rax	# _114->gp_sv, D.29085
	movl	12(%rax), %eax	# _115->sv_flags, D.29088
	andl	$262144, %eax	#, D.29088
	testl	%eax, %eax	# D.29088
	je	.L2978	#,
	.loc 1 8828 0 discriminator 4
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1937
	movq	(%rax), %rax	# PL_errgv.1937_118->sv_any, D.29086
	movq	56(%rax), %rax	# _119->xgv_gp, D.29087
	movq	(%rax), %rax	# _120->gp_sv, D.29085
	movq	(%rax), %rax	# _121->sv_any, PL_Xpv.1938
	movq	%rax, PL_Xpv(%rip)	# PL_Xpv.1938, PL_Xpv
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.1939
	testq	%rax, %rax	# PL_Xpv.1939
	je	.L2979	#,
	.loc 1 8828 0 discriminator 1
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.1940
	movq	8(%rax), %rax	# PL_Xpv.1940_124->xpv_cur, D.29089
	cmpq	$1, %rax	#, D.29089
	ja	.L2980	#,
	.loc 1 8828 0 discriminator 4
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.1941
	movq	8(%rax), %rax	# PL_Xpv.1941_126->xpv_cur, D.29089
	testq	%rax, %rax	# D.29089
	je	.L2979	#,
	.loc 1 8828 0 discriminator 1
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.1942
	movq	(%rax), %rax	# PL_Xpv.1942_128->xpv_pv, D.29095
	movzbl	(%rax), %eax	# *_129, D.29096
	cmpb	$48, %al	#, D.29096
	je	.L2979	#,
.L2980:
	.loc 1 8828 0 discriminator 3
	movl	$1, %eax	#, iftmp.1936
	jmp	.L2981	#
.L2979:
	.loc 1 8828 0 discriminator 2
	movl	$0, %eax	#, iftmp.1936
.L2981:
	.loc 1 8828 0 discriminator 5
	andl	$1, %eax	#, D.29097
	testb	%al, %al	# D.29097
	jne	.L2982	#,
	jmp	.L2977	#
.L2978:
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1943
	movq	(%rax), %rax	# PL_errgv.1943_134->sv_any, D.29086
	movq	56(%rax), %rax	# _135->xgv_gp, D.29087
	movq	(%rax), %rax	# _136->gp_sv, D.29085
	movl	12(%rax), %eax	# _137->sv_flags, D.29088
	andl	$65536, %eax	#, D.29088
	testl	%eax, %eax	# D.29088
	je	.L2983	#,
	.loc 1 8828 0 discriminator 6
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1944
	movq	(%rax), %rax	# PL_errgv.1944_140->sv_any, D.29086
	movq	56(%rax), %rax	# _141->xgv_gp, D.29087
	movq	(%rax), %rax	# _142->gp_sv, D.29085
	movq	(%rax), %rax	# _143->sv_any, D.29098
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_144].xiv_iv, D.29093
	testq	%rax, %rax	# D.29093
	jne	.L2982	#,
	jmp	.L2977	#
.L2983:
	.loc 1 8828 0 discriminator 7
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1945
	movq	(%rax), %rax	# PL_errgv.1945_146->sv_any, D.29086
	movq	56(%rax), %rax	# _147->xgv_gp, D.29087
	movq	(%rax), %rax	# _148->gp_sv, D.29085
	movl	12(%rax), %eax	# _149->sv_flags, D.29088
	andl	$131072, %eax	#, D.29088
	testl	%eax, %eax	# D.29088
	je	.L2984	#,
	.loc 1 8828 0 discriminator 8
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1946
	movq	(%rax), %rax	# PL_errgv.1946_152->sv_any, D.29086
	movq	56(%rax), %rax	# _153->xgv_gp, D.29087
	movq	(%rax), %rax	# _154->gp_sv, D.29085
	movq	(%rax), %rax	# _155->sv_any, D.29098
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_156].xnv_nv, D.29099
	xorpd	%xmm1, %xmm1	# tmp322
	ucomisd	%xmm1, %xmm0	# tmp322, D.29099
	jp	.L2982	#,
	xorpd	%xmm1, %xmm1	# tmp323
	ucomisd	%xmm1, %xmm0	# tmp323, D.29099
	jne	.L2982	#,
	jmp	.L2977	#
.L2984:
	.loc 1 8828 0 discriminator 9
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1947
	movq	(%rax), %rax	# PL_errgv.1947_158->sv_any, D.29086
	movq	56(%rax), %rax	# _159->xgv_gp, D.29087
	movq	(%rax), %rax	# _160->gp_sv, D.29085
	movq	%rax, %rdi	# D.29085,
	call	Perl_sv_2bool	#
	testb	%al, %al	# D.29096
	je	.L2977	#,
.L2982:
.LBB94:
	.loc 1 8830 0 is_stmt 1
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1948
	movq	(%rax), %rax	# PL_errgv.1948_163->sv_any, D.29086
	movq	56(%rax), %rax	# _164->xgv_gp, D.29087
	movq	(%rax), %rax	# _165->gp_sv, D.29085
	movl	$.LC170, %esi	#,
	movq	%rax, %rdi	# D.29085,
	call	Perl_sv_catpv	#
	.loc 1 8831 0
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1950
	movq	(%rax), %rax	# PL_errgv.1950_167->sv_any, D.29086
	movq	56(%rax), %rax	# _168->xgv_gp, D.29087
	movq	(%rax), %rax	# _169->gp_sv, D.29085
	movl	12(%rax), %eax	# _170->sv_flags, D.29088
	andl	$262144, %eax	#, D.29088
	testl	%eax, %eax	# D.29088
	je	.L2985	#,
	.loc 1 8831 0 is_stmt 0 discriminator 1
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1951
	movq	(%rax), %rax	# PL_errgv.1951_173->sv_any, D.29086
	movq	56(%rax), %rax	# _174->xgv_gp, D.29087
	movq	(%rax), %rax	# _175->gp_sv, D.29085
	movq	(%rax), %rax	# _176->sv_any, D.29098
	movq	8(%rax), %rax	# MEM[(struct XPV *)_177].xpv_cur, n_a.1952
	movq	%rax, -112(%rbp)	# n_a.1952, n_a
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1953
	movq	(%rax), %rax	# PL_errgv.1953_179->sv_any, D.29086
	movq	56(%rax), %rax	# _180->xgv_gp, D.29087
	movq	(%rax), %rax	# _181->gp_sv, D.29085
	movq	(%rax), %rax	# _182->sv_any, D.29098
	movq	(%rax), %rax	# MEM[(struct XPV *)_183].xpv_pv, iftmp.1949
	jmp	.L2986	#
.L2985:
	.loc 1 8831 0 discriminator 2
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.1954
	movq	(%rax), %rax	# PL_errgv.1954_185->sv_any, D.29086
	movq	56(%rax), %rax	# _186->xgv_gp, D.29087
	movq	(%rax), %rax	# _187->gp_sv, D.29085
	leaq	-112(%rbp), %rcx	#, tmp324
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp324,
	movq	%rax, %rdi	# D.29085,
	call	Perl_sv_2pv_flags	#
.L2986:
	.loc 1 8831 0 discriminator 3
	movq	%rax, %rdi	# iftmp.1949,
	call	Perl_yyerror	#
	.loc 1 8832 0 is_stmt 1 discriminator 3
	movq	%rbx, %rax	# sp, sp.1955
	leaq	-8(%rax), %rbx	#, sp
	.loc 1 8833 0 discriminator 3
	movq	-144(%rbp), %rax	# sv, tmp325
	movq	%rax, PL_Sv(%rip)	# tmp325, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1957
	testq	%rax, %rax	# PL_Sv.1957
	je	.L2988	#,
	.loc 1 8833 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1958
	movl	8(%rax), %edx	# PL_Sv.1958_193->sv_refcnt, D.29088
	addl	$1, %edx	#, D.29088
	movl	%edx, 8(%rax)	# D.29088, PL_Sv.1958_193->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.1958_193->sv_refcnt, D.29088
	testl	%eax, %eax	# D.29088
	je	.L2988	#,
	.loc 1 8833 0
	nop
.L2988:
	.loc 1 8833 0 discriminator 4
	movq	PL_Sv(%rip), %rax	# PL_Sv, tmp326
	movq	%rax, -104(%rbp)	# tmp326, res
.LBE94:
	.loc 1 8828 0 is_stmt 1 discriminator 4
	jmp	.L2989	#
.L2977:
	.loc 1 8836 0
	movq	%rbx, %rax	# sp, sp.1959
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1959_200, tmp327
	movq	%rax, -104(%rbp)	# tmp327, res
	.loc 1 8837 0
	movq	-104(%rbp), %rax	# res, tmp328
	movq	%rax, PL_Sv(%rip)	# tmp328, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1961
	testq	%rax, %rax	# PL_Sv.1961
	je	.L2989	#,
	.loc 1 8837 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1962
	movl	8(%rax), %edx	# PL_Sv.1962_204->sv_refcnt, D.29088
	addl	$1, %edx	#, D.29088
	movl	%edx, 8(%rax)	# D.29088, PL_Sv.1962_204->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.1962_204->sv_refcnt, D.29088
	testl	%eax, %eax	# D.29088
	je	.L2989	#,
	.loc 1 8837 0
	nop
.L2989:
	.loc 1 8840 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 8841 0
	movl	PL_tmps_ix(%rip), %edx	# PL_tmps_ix, PL_tmps_ix.1963
	movl	PL_tmps_floor(%rip), %eax	# PL_tmps_floor, PL_tmps_floor.1964
	cmpl	%eax, %edx	# PL_tmps_floor.1964, PL_tmps_ix.1963
	jle	.L2991	#,
	.loc 1 8841 0 is_stmt 0 discriminator 1
	call	Perl_free_tmps	#
.L2991:
	.loc 1 8842 0 is_stmt 1
	call	Perl_pop_scope	#
.LBB95:
	.loc 1 8843 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curstackinfo(%rip), %rax	# PL_curstackinfo, PL_curstackinfo.1965
	movq	32(%rax), %rax	# PL_curstackinfo.1965_213->si_prev, tmp329
	movq	%rax, -24(%rbp)	# tmp329, prev
	cmpq	$0, -24(%rbp)	#, prev
	jne	.L2992	#,
	.loc 1 8843 0 is_stmt 0 discriminator 1
	movq	PL_stderrgv(%rip), %rax	# PL_stderrgv, PL_stderrgv.1967
	testq	%rax, %rax	# PL_stderrgv.1967
	je	.L2993	#,
	movq	PL_stderrgv(%rip), %rax	# PL_stderrgv, PL_stderrgv.1968
	movl	12(%rax), %eax	# PL_stderrgv.1968_216->sv_flags, D.29088
	movzbl	%al, %eax	# D.29088, D.29088
	cmpl	$13, %eax	#, D.29088
	jne	.L2993	#,
	movq	PL_stderrgv(%rip), %rax	# PL_stderrgv, PL_stderrgv.1969
	movq	(%rax), %rax	# PL_stderrgv.1969_219->sv_any, D.29086
	movq	56(%rax), %rax	# _220->xgv_gp, D.29087
	movq	16(%rax), %rax	# _221->gp_io, D.29100
	testq	%rax, %rax	# D.29100
	je	.L2993	#,
	movq	PL_stderrgv(%rip), %rax	# PL_stderrgv, PL_stderrgv.1970
	movq	(%rax), %rax	# PL_stderrgv.1970_223->sv_any, D.29086
	movq	56(%rax), %rax	# _224->xgv_gp, D.29087
	movq	16(%rax), %rax	# _225->gp_io, D.29100
	movq	(%rax), %rax	# _226->sv_any, D.29101
	movq	64(%rax), %rax	# _227->xio_ofp, D.29102
	testq	%rax, %rax	# D.29102
	je	.L2993	#,
	movq	PL_stderrgv(%rip), %rax	# PL_stderrgv, PL_stderrgv.1971
	movq	(%rax), %rax	# PL_stderrgv.1971_229->sv_any, D.29086
	movq	56(%rax), %rax	# _230->xgv_gp, D.29087
	movq	16(%rax), %rax	# _231->gp_io, D.29100
	movq	(%rax), %rax	# _232->sv_any, D.29101
	movq	64(%rax), %rax	# _233->xio_ofp, iftmp.1966
	jmp	.L2994	#
.L2993:
	.loc 1 8843 0 discriminator 2
	call	Perl_PerlIO_stderr	#
.L2994:
	.loc 1 8843 0 discriminator 3
	movl	$.LC171, %esi	#,
	movq	%rax, %rdi	# iftmp.1966,
	movl	$0, %eax	#,
	call	PerlIO_printf	#
	movl	$1, %edi	#,
	call	Perl_my_exit	#
.L2992:
.LBB96:
	.loc 1 8843 0 discriminator 2
	movq	PL_curstack(%rip), %rax	# PL_curstack, PL_curstack.1972
	movq	(%rax), %rax	# PL_curstack.1972_236->sv_any, D.29092
	movq	%rbx, %rcx	# sp, sp.1973
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1974
	subq	%rdx, %rcx	# PL_stack_base.1975, D.29093
	movq	%rcx, %rdx	# D.29093, D.29093
	sarq	$3, %rdx	#, tmp330
	movq	%rdx, 8(%rax)	# D.29093, _237->xav_fill
	movq	-24(%rbp), %rax	# prev, tmp331
	movq	(%rax), %rax	# prev_214->si_stack, D.29091
	movq	(%rax), %rax	# _243->sv_any, D.29092
	movq	(%rax), %rax	# _244->xav_array, PL_stack_base.1976
	movq	%rax, PL_stack_base(%rip)	# PL_stack_base.1976, PL_stack_base
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1977
	movq	-24(%rbp), %rax	# prev, tmp332
	movq	(%rax), %rax	# prev_214->si_stack, D.29091
	movq	(%rax), %rax	# _247->sv_any, D.29092
	movq	16(%rax), %rax	# _248->xav_max, D.29093
	salq	$3, %rax	#, D.29089
	addq	%rdx, %rax	# PL_stack_base.1977, PL_stack_max.1978
	movq	%rax, PL_stack_max(%rip)	# PL_stack_max.1978, PL_stack_max
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1979
	movq	-24(%rbp), %rax	# prev, tmp333
	movq	(%rax), %rax	# prev_214->si_stack, D.29091
	movq	(%rax), %rax	# _254->sv_any, D.29092
	movq	8(%rax), %rax	# _255->xav_fill, D.29093
	salq	$3, %rax	#, D.29089
	addq	%rdx, %rax	# PL_stack_base.1979, PL_stack_sp.1980
	movq	%rax, PL_stack_sp(%rip)	# PL_stack_sp.1980, PL_stack_sp
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-24(%rbp), %rax	# prev, tmp334
	movq	(%rax), %rax	# prev_214->si_stack, PL_curstack.1981
	movq	%rax, PL_curstack(%rip)	# PL_curstack.1981, PL_curstack
.LBE96:
	movq	-24(%rbp), %rax	# prev, tmp335
	movq	%rax, PL_curstackinfo(%rip)	# tmp335, PL_curstackinfo
.LBE95:
	.loc 1 8845 0 is_stmt 1 discriminator 2
	movq	-104(%rbp), %rax	# res, tmp336
	movl	12(%rax), %eax	# res_8->sv_flags, D.29088
	andl	$118423552, %eax	#, D.29088
	testl	%eax, %eax	# D.29088
	jne	.L2995	#,
	.loc 1 8846 0
	movq	$.LC172, -88(%rbp)	#, why1
	.loc 1 8847 0
	movq	-136(%rbp), %rax	# key, tmp337
	movq	%rax, -80(%rbp)	# tmp337, why2
	.loc 1 8848 0
	movq	$.LC173, -72(%rbp)	#, why3
	.loc 1 8849 0
	movq	-104(%rbp), %rax	# res, tmp338
	movq	%rax, -144(%rbp)	# tmp338, sv
	.loc 1 8850 0
	jmp	.L2961	#
.L2995:
	.loc 1 8853 0
	movq	-104(%rbp), %rax	# res, D.29085
.L2964:
	.loc 1 8854 0
	addq	$152, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE36:
	.size	S_new_constant, .-S_new_constant
	.type	S_scan_word, @function
S_scan_word:
.LFB37:
	.loc 1 8858 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, %rbx	# s, s
	movq	%rsi, -56(%rbp)	# dest, dest
	movq	%rdx, -64(%rbp)	# destlen, destlen
	movl	%ecx, -68(%rbp)	# allow_package, allow_package
	movq	%r8, -80(%rbp)	# slp, slp
	.loc 1 8859 0
	movq	-56(%rbp), %r12	# dest, d
	.loc 1 8860 0
	movq	-64(%rbp), %rax	# destlen, tmp165
	subq	$3, %rax	#, D.29114
	leaq	(%r12,%rax), %r13	#, e
.L3026:
	.loc 1 8862 0
	cmpq	%r13, %r12	# e, d
	jb	.L2997	#,
	.loc 1 8863 0
	movl	$ident_too_long, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2997:
	.loc 1 8864 0
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$64, %al	#, D.29115
	jle	.L2998	#,
	.loc 1 8864 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$90, %al	#, D.29115
	jle	.L2999	#,
.L2998:
	.loc 1 8864 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$96, %al	#, D.29115
	jle	.L3000	#,
	.loc 1 8864 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$122, %al	#, D.29115
	jle	.L2999	#,
.L3000:
	.loc 1 8864 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$47, %al	#, D.29115
	jle	.L3001	#,
	.loc 1 8864 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$57, %al	#, D.29115
	jle	.L2999	#,
.L3001:
	.loc 1 8864 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$95, %al	#, D.29115
	jne	.L3002	#,
.L2999:
	.loc 1 8865 0 is_stmt 1
	movq	%r12, %rax	# d, d.1982
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.1983
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.1983_129, D.29115
	movb	%dl, (%rax)	# D.29115, *d.1982_127
	jmp	.L3003	#
.L3002:
	.loc 1 8866 0
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$39, %al	#, D.29115
	jne	.L3004	#,
	.loc 1 8866 0 is_stmt 0 discriminator 1
	cmpl	$0, -68(%rbp)	#, allow_package
	je	.L3004	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1984
	movzbl	37(%rax), %eax	# PL_curcop.1984_23->op_private, D.29116
	movzbl	%al, %eax	# D.29116, D.29117
	andl	$8, %eax	#, D.29117
	testl	%eax, %eax	# D.29117
	jne	.L3005	#,
	.loc 1 8866 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1985
	testq	%rax, %rax	# PL_linestr.1985
	je	.L3006	#,
	.loc 1 8866 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1986
	movl	12(%rax), %eax	# PL_linestr.1986_28->sv_flags, D.29118
	andl	$536870912, %eax	#, D.29118
	testl	%eax, %eax	# D.29118
	je	.L3006	#,
	.loc 1 8866 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1987
	movzbl	37(%rax), %eax	# PL_curcop.1987_31->op_private, D.29116
	movzbl	%al, %eax	# D.29116, D.29117
	andl	$8, %eax	#, D.29117
	testl	%eax, %eax	# D.29117
	je	.L3007	#,
.L3006:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.1988
	andl	$8388608, %eax	#, D.29118
	testl	%eax, %eax	# D.29118
	je	.L3005	#,
.L3007:
	leaq	1(%rbx), %rax	#, D.29119
	movzbl	(%rax), %eax	# *_37, D.29116
	cmpb	$-65, %al	#, D.29116
	ja	.L3008	#,
.L3005:
	.loc 1 8866 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.29121
	movzbl	(%rax), %eax	# *_46, D.29115
	cmpb	$64, %al	#, D.29115
	jle	.L3009	#,
	.loc 1 8866 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29121
	movzbl	(%rax), %eax	# *_48, D.29115
	cmpb	$90, %al	#, D.29115
	jle	.L3010	#,
.L3009:
	.loc 1 8866 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.29121
	movzbl	(%rax), %eax	# *_50, D.29115
	cmpb	$96, %al	#, D.29115
	jle	.L3011	#,
	.loc 1 8866 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29121
	movzbl	(%rax), %eax	# *_52, D.29115
	cmpb	$122, %al	#, D.29115
	jle	.L3010	#,
.L3011:
	.loc 1 8866 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.29121
	movzbl	(%rax), %eax	# *_54, D.29115
	cmpb	$95, %al	#, D.29115
	jne	.L3012	#,
.L3010:
	.loc 1 8866 0 discriminator 1
	movl	$1, %eax	#, iftmp.1989
	jmp	.L3013	#
.L3012:
	.loc 1 8866 0 discriminator 3
	movl	$0, %eax	#, iftmp.1989
.L3013:
	.loc 1 8866 0 discriminator 4
	andl	$1, %eax	#, D.29120
	testb	%al, %al	# D.29120
	je	.L3004	#,
	.loc 1 8866 0 discriminator 1
	jmp	.L3014	#
.L3008:
	leaq	1(%rbx), %rax	#, D.29119
	movq	%rax, %rdi	# D.29119,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.29115
	je	.L3015	#,
	leaq	1(%rbx), %rax	#, D.29119
	movq	%rax, %rdi	# D.29119,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.29115
	jne	.L3015	#,
	.loc 1 8866 0 discriminator 3
	movl	$1, %eax	#, iftmp.1990
	jmp	.L3016	#
.L3015:
	.loc 1 8866 0 discriminator 2
	movl	$0, %eax	#, iftmp.1990
.L3016:
	.loc 1 8866 0 discriminator 4
	andl	$1, %eax	#, D.29120
	testb	%al, %al	# D.29120
	je	.L3004	#,
.L3014:
	.loc 1 8867 0 is_stmt 1
	movq	%r12, %rax	# d, d.1991
	leaq	1(%rax), %r12	#, d
	movb	$58, (%rax)	#, *d.1991_59
	.loc 1 8868 0
	movq	%r12, %rax	# d, d.1992
	leaq	1(%rax), %r12	#, d
	movb	$58, (%rax)	#, *d.1992_61
	.loc 1 8869 0
	addq	$1, %rbx	#, s
	jmp	.L3003	#
.L3004:
	.loc 1 8871 0
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$58, %al	#, D.29115
	jne	.L3017	#,
	.loc 1 8871 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29121
	movzbl	(%rax), %eax	# *_65, D.29115
	cmpb	$58, %al	#, D.29115
	jne	.L3017	#,
	cmpl	$0, -68(%rbp)	#, allow_package
	je	.L3017	#,
	leaq	2(%rbx), %rax	#, D.29121
	movzbl	(%rax), %eax	# *_67, D.29115
	cmpb	$36, %al	#, D.29115
	je	.L3017	#,
	.loc 1 8872 0 is_stmt 1
	movq	%r12, %rax	# d, d.1993
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.1994
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.1994_71, D.29115
	movb	%dl, (%rax)	# D.29115, *d.1993_69
	.loc 1 8873 0
	movq	%r12, %rax	# d, d.1995
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.1996
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.1996_76, D.29115
	movb	%dl, (%rax)	# D.29115, *d.1995_74
	jmp	.L3003	#
.L3017:
	.loc 1 8875 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1997
	testq	%rax, %rax	# PL_linestr.1997
	je	.L3018	#,
	.loc 1 8875 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.1998
	movl	12(%rax), %eax	# PL_linestr.1998_80->sv_flags, D.29118
	andl	$536870912, %eax	#, D.29118
	testl	%eax, %eax	# D.29118
	je	.L3018	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1999
	movzbl	37(%rax), %eax	# PL_curcop.1999_83->op_private, D.29116
	movzbl	%al, %eax	# D.29116, D.29117
	andl	$8, %eax	#, D.29117
	testl	%eax, %eax	# D.29117
	je	.L3019	#,
.L3018:
	.loc 1 8875 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2000
	andl	$8388608, %eax	#, D.29118
	testl	%eax, %eax	# D.29118
	je	.L3020	#,
.L3019:
	.loc 1 8875 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$-65, %al	#, D.29116
	jbe	.L3020	#,
	movzbl	(%rbx), %eax	# *s_1, D.29115
	cmpb	$-3, %al	#, D.29116
	ja	.L3020	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.29115
	je	.L3020	#,
.LBB97:
	.loc 1 8876 0 is_stmt 1
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_1], D.29116
	movzbl	%al, %eax	# D.29116, D.29117
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.29116
	movzbl	%al, %eax	# D.29116, D.29114
	addq	%rbx, %rax	# s, tmp167
	movq	%rax, -40(%rbp)	# tmp167, t
	.loc 1 8877 0
	jmp	.L3021	#
.L3023:
	.loc 1 8878 0
	movq	-40(%rbp), %rax	# t, tmp168
	movzbl	(%rax), %eax	# MEM[(U8 *)t_5], D.29116
	movzbl	%al, %eax	# D.29116, D.29117
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.29116
	movzbl	%al, %eax	# D.29116, D.29114
	addq	%rax, -40(%rbp)	# D.29114, t
.L3021:
	.loc 1 8877 0 discriminator 1
	movq	-40(%rbp), %rax	# t, tmp170
	movzbl	(%rax), %eax	# *t_5, D.29115
	testb	%al, %al	# D.29115
	jns	.L3022	#,
	.loc 1 8877 0 is_stmt 0 discriminator 2
	movq	-40(%rbp), %rax	# t, tmp171
	movq	%rax, %rdi	# tmp171,
	call	Perl_is_utf8_mark	#
	testb	%al, %al	# D.29115
	jne	.L3023	#,
.L3022:
	.loc 1 8879 0 is_stmt 1
	movq	-40(%rbp), %rdx	# t, t.2001
	movq	%rbx, %rax	# s, s.2002
	subq	%rax, %rdx	# s.2002, D.29122
	movq	%rdx, %rax	# D.29122, D.29122
	addq	%r12, %rax	# d, D.29121
	cmpq	%r13, %rax	# e, D.29121
	jbe	.L3024	#,
	.loc 1 8880 0
	movl	$ident_too_long, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3024:
	.loc 1 8881 0
	movq	-40(%rbp), %rdx	# t, t.2003
	movq	%rbx, %rax	# s, s.2004
	subq	%rax, %rdx	# s.2004, D.29122
	movq	%rdx, %rax	# D.29122, D.29122
	movq	%rax, %rdx	# D.29123,
	movq	%rbx, %rsi	# s,
	movq	%r12, %rdi	# d,
	call	memcpy	#
	.loc 1 8882 0
	movq	-40(%rbp), %rdx	# t, t.2005
	movq	%rbx, %rax	# s, s.2006
	subq	%rax, %rdx	# s.2006, D.29122
	movq	%rdx, %rax	# D.29122, D.29122
	addq	%rax, %r12	# D.29114, d
	.loc 1 8883 0
	movq	-40(%rbp), %rbx	# t, s
.LBE97:
	.loc 1 8875 0
	jmp	.L3003	#
.L3020:
	.loc 1 8886 0
	movb	$0, (%r12)	#, *d_3
	.loc 1 8887 0
	movq	%r12, %rdx	# d, d.2007
	movq	-56(%rbp), %rax	# dest, dest.2008
	subq	%rax, %rdx	# dest.2008, D.29122
	movq	%rdx, %rax	# D.29122, D.29122
	movq	%rax, %rdx	# D.29122, D.29123
	movq	-80(%rbp), %rax	# slp, tmp172
	movq	%rdx, (%rax)	# D.29123, *slp_125(D)
	.loc 1 8888 0
	movq	%rbx, %rax	# s, D.29121
	jmp	.L3027	#
.L3003:
	.loc 1 8890 0
	jmp	.L3026	#
.L3027:
	.loc 1 8891 0 discriminator 1
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE37:
	.size	S_scan_word, .-S_scan_word
	.section	.rodata
.LC174:
	.string	"[\\]^_?"
.LC175:
	.string	"[...]"
.LC176:
	.string	"{...}"
	.align 8
.LC177:
	.string	"Ambiguous use of %c{%s%s} resolved to %c%s%s"
	.align 8
.LC178:
	.string	"Ambiguous use of %c{%s} resolved to %c%s"
	.text
	.type	S_scan_ident, @function
S_scan_ident:
.LFB38:
	.loc 1 8895 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$80, %rsp	#,
	.cfi_offset 14, -24
	.cfi_offset 13, -32
	.cfi_offset 12, -40
	.cfi_offset 3, -48
	movq	%rdi, %rbx	# s, s
	movq	%rsi, %r14	# send, send
	movq	%rdx, -72(%rbp)	# dest, dest
	movq	%rcx, -80(%rbp)	# destlen, destlen
	movl	%r8d, -84(%rbp)	# ck_uni, ck_uni
	.loc 1 8898 0
	movq	$0, -56(%rbp)	#, bracket
	.loc 1 8899 0
	movq	%rbx, %rax	# s, s.2009
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.2009_43, tmp438
	movb	%al, -58(%rbp)	# tmp438, funny
	.loc 1 8901 0
	movzbl	(%rbx), %eax	# *s_44, D.29125
	cmpb	$32, %al	#, D.29125
	je	.L3029	#,
	.loc 1 8901 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_44, D.29125
	cmpb	$9, %al	#, D.29125
	je	.L3029	#,
	movzbl	(%rbx), %eax	# *s_44, D.29125
	cmpb	$10, %al	#, D.29125
	je	.L3029	#,
	movzbl	(%rbx), %eax	# *s_44, D.29125
	cmpb	$13, %al	#, D.29125
	je	.L3029	#,
	movzbl	(%rbx), %eax	# *s_44, D.29125
	cmpb	$12, %al	#, D.29125
	jne	.L3030	#,
.L3029:
	.loc 1 8902 0 is_stmt 1
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
.L3030:
	.loc 1 8903 0
	movq	-72(%rbp), %r12	# dest, d
	.loc 1 8904 0
	movq	-80(%rbp), %rax	# destlen, tmp439
	subq	$3, %rax	#, D.29126
	leaq	(%r12,%rax), %r13	#, e
	.loc 1 8905 0
	movzbl	(%rbx), %eax	# *s_1, D.29125
	cmpb	$47, %al	#, D.29125
	jle	.L3031	#,
	.loc 1 8905 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_1, D.29125
	cmpb	$57, %al	#, D.29125
	jg	.L3031	#,
	.loc 1 8906 0 is_stmt 1
	jmp	.L3032	#
.L3035:
	.loc 1 8907 0
	cmpq	%r13, %r12	# e, d
	jb	.L3033	#,
	.loc 1 8908 0
	movl	$ident_too_long, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3033:
	.loc 1 8909 0
	movq	%r12, %rax	# d, d.2010
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2011
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2011_63, D.29125
	movb	%dl, (%rax)	# D.29125, *d.2010_61
.L3032:
	.loc 1 8906 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2, D.29125
	cmpb	$47, %al	#, D.29125
	jle	.L3034	#,
	.loc 1 8906 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_2, D.29125
	cmpb	$57, %al	#, D.29125
	jle	.L3035	#,
.L3034:
	.loc 1 8905 0 is_stmt 1
	jmp	.L3036	#
.L3031:
	.loc 1 8914 0
	cmpq	%r13, %r12	# e, d
	jb	.L3037	#,
	.loc 1 8915 0
	movl	$ident_too_long, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3037:
	.loc 1 8916 0
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$64, %al	#, D.29125
	jle	.L3038	#,
	.loc 1 8916 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$90, %al	#, D.29125
	jle	.L3039	#,
.L3038:
	.loc 1 8916 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$96, %al	#, D.29125
	jle	.L3040	#,
	.loc 1 8916 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$122, %al	#, D.29125
	jle	.L3039	#,
.L3040:
	.loc 1 8916 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$47, %al	#, D.29125
	jle	.L3041	#,
	.loc 1 8916 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$57, %al	#, D.29125
	jle	.L3039	#,
.L3041:
	.loc 1 8916 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$95, %al	#, D.29125
	jne	.L3042	#,
.L3039:
	.loc 1 8917 0 is_stmt 1
	movq	%r12, %rax	# d, d.2012
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2013
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2013_172, D.29125
	movb	%dl, (%rax)	# D.29125, *d.2012_170
	jmp	.L3043	#
.L3042:
	.loc 1 8918 0
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$39, %al	#, D.29125
	jne	.L3044	#,
	.loc 1 8918 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2014
	movzbl	37(%rax), %eax	# PL_curcop.2014_74->op_private, D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	andl	$8, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	jne	.L3045	#,
	.loc 1 8918 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2015
	testq	%rax, %rax	# PL_linestr.2015
	je	.L3046	#,
	.loc 1 8918 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2016
	movl	12(%rax), %eax	# PL_linestr.2016_79->sv_flags, D.29129
	andl	$536870912, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3046	#,
	.loc 1 8918 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2017
	movzbl	37(%rax), %eax	# PL_curcop.2017_82->op_private, D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	andl	$8, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	je	.L3047	#,
.L3046:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2018
	andl	$8388608, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3045	#,
.L3047:
	leaq	1(%rbx), %rax	#, D.29130
	movzbl	(%rax), %eax	# *_88, D.29127
	cmpb	$-65, %al	#, D.29127
	ja	.L3048	#,
.L3045:
	.loc 1 8918 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_97, D.29125
	cmpb	$64, %al	#, D.29125
	jle	.L3049	#,
	.loc 1 8918 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_99, D.29125
	cmpb	$90, %al	#, D.29125
	jle	.L3050	#,
.L3049:
	.loc 1 8918 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_101, D.29125
	cmpb	$96, %al	#, D.29125
	jle	.L3051	#,
	.loc 1 8918 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_103, D.29125
	cmpb	$122, %al	#, D.29125
	jle	.L3050	#,
.L3051:
	.loc 1 8918 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_105, D.29125
	cmpb	$95, %al	#, D.29125
	jne	.L3052	#,
.L3050:
	.loc 1 8918 0 discriminator 1
	movl	$1, %eax	#, iftmp.2019
	jmp	.L3053	#
.L3052:
	.loc 1 8918 0 discriminator 3
	movl	$0, %eax	#, iftmp.2019
.L3053:
	.loc 1 8918 0 discriminator 4
	andl	$1, %eax	#, D.29131
	testb	%al, %al	# D.29131
	je	.L3044	#,
	.loc 1 8918 0 discriminator 1
	jmp	.L3054	#
.L3048:
	leaq	1(%rbx), %rax	#, D.29130
	movq	%rax, %rdi	# D.29130,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.29125
	je	.L3055	#,
	leaq	1(%rbx), %rax	#, D.29130
	movq	%rax, %rdi	# D.29130,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.29125
	jne	.L3055	#,
	.loc 1 8918 0 discriminator 3
	movl	$1, %eax	#, iftmp.2020
	jmp	.L3056	#
.L3055:
	.loc 1 8918 0 discriminator 2
	movl	$0, %eax	#, iftmp.2020
.L3056:
	.loc 1 8918 0 discriminator 4
	andl	$1, %eax	#, D.29131
	testb	%al, %al	# D.29131
	je	.L3044	#,
.L3054:
	.loc 1 8919 0 is_stmt 1
	movq	%r12, %rax	# d, d.2021
	leaq	1(%rax), %r12	#, d
	movb	$58, (%rax)	#, *d.2021_110
	.loc 1 8920 0
	movq	%r12, %rax	# d, d.2022
	leaq	1(%rax), %r12	#, d
	movb	$58, (%rax)	#, *d.2022_112
	.loc 1 8921 0
	addq	$1, %rbx	#, s
	jmp	.L3043	#
.L3044:
	.loc 1 8923 0
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$58, %al	#, D.29125
	jne	.L3057	#,
	.loc 1 8923 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_116, D.29125
	cmpb	$58, %al	#, D.29125
	jne	.L3057	#,
	.loc 1 8924 0 is_stmt 1
	movq	%r12, %rax	# d, d.2023
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2024
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2024_120, D.29125
	movb	%dl, (%rax)	# D.29125, *d.2023_118
	.loc 1 8925 0
	movq	%r12, %rax	# d, d.2025
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2026
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2026_125, D.29125
	movb	%dl, (%rax)	# D.29125, *d.2025_123
	jmp	.L3043	#
.L3057:
	.loc 1 8927 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2027
	testq	%rax, %rax	# PL_linestr.2027
	je	.L3058	#,
	.loc 1 8927 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2028
	movl	12(%rax), %eax	# PL_linestr.2028_129->sv_flags, D.29129
	andl	$536870912, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3058	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2029
	movzbl	37(%rax), %eax	# PL_curcop.2029_132->op_private, D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	andl	$8, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	je	.L3059	#,
.L3058:
	.loc 1 8927 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2030
	andl	$8388608, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3036	#,
.L3059:
	.loc 1 8927 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$-65, %al	#, D.29127
	jbe	.L3036	#,
	movzbl	(%rbx), %eax	# *s_3, D.29125
	cmpb	$-3, %al	#, D.29127
	ja	.L3036	#,
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.29125
	je	.L3036	#,
.LBB98:
	.loc 1 8928 0 is_stmt 1
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_3], D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.29127
	movzbl	%al, %eax	# D.29127, D.29126
	addq	%rbx, %rax	# s, tmp441
	movq	%rax, -48(%rbp)	# tmp441, t
	.loc 1 8929 0
	jmp	.L3060	#
.L3062:
	.loc 1 8930 0
	movq	-48(%rbp), %rax	# t, tmp442
	movzbl	(%rax), %eax	# MEM[(U8 *)t_30], D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.29127
	movzbl	%al, %eax	# D.29127, D.29126
	addq	%rax, -48(%rbp)	# D.29126, t
.L3060:
	.loc 1 8929 0 discriminator 1
	movq	-48(%rbp), %rax	# t, tmp444
	movzbl	(%rax), %eax	# *t_30, D.29125
	testb	%al, %al	# D.29125
	jns	.L3061	#,
	.loc 1 8929 0 is_stmt 0 discriminator 2
	movq	-48(%rbp), %rax	# t, tmp445
	movq	%rax, %rdi	# tmp445,
	call	Perl_is_utf8_mark	#
	testb	%al, %al	# D.29125
	jne	.L3062	#,
.L3061:
	.loc 1 8931 0 is_stmt 1
	movq	-48(%rbp), %rdx	# t, t.2031
	movq	%rbx, %rax	# s, s.2032
	subq	%rax, %rdx	# s.2032, D.29132
	movq	%rdx, %rax	# D.29132, D.29132
	addq	%r12, %rax	# d, D.29124
	cmpq	%r13, %rax	# e, D.29124
	jbe	.L3063	#,
	.loc 1 8932 0
	movl	$ident_too_long, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3063:
	.loc 1 8933 0
	movq	-48(%rbp), %rdx	# t, t.2033
	movq	%rbx, %rax	# s, s.2034
	subq	%rax, %rdx	# s.2034, D.29132
	movq	%rdx, %rax	# D.29132, D.29132
	movq	%rax, %rdx	# D.29133,
	movq	%rbx, %rsi	# s,
	movq	%r12, %rdi	# d,
	call	memcpy	#
	.loc 1 8934 0
	movq	-48(%rbp), %rdx	# t, t.2035
	movq	%rbx, %rax	# s, s.2036
	subq	%rax, %rdx	# s.2036, D.29132
	movq	%rdx, %rax	# D.29132, D.29132
	addq	%rax, %r12	# D.29126, d
	.loc 1 8935 0
	movq	-48(%rbp), %rbx	# t, s
.LBE98:
	.loc 1 8939 0
	jmp	.L3031	#
.L3043:
	jmp	.L3031	#
.L3036:
	.loc 1 8941 0
	movb	$0, (%r12)	#, *d_21
	.loc 1 8942 0
	movq	-72(%rbp), %r12	# dest, d
	.loc 1 8943 0
	movzbl	(%r12), %eax	# *d_175, D.29125
	testb	%al, %al	# D.29125
	je	.L3064	#,
	.loc 1 8944 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.2037
	cmpl	$10, %eax	#, PL_lex_state.2037
	je	.L3065	#,
	.loc 1 8945 0
	movl	$4, PL_lex_state(%rip)	#, PL_lex_state
.L3065:
	.loc 1 8946 0
	movq	%rbx, %rax	# s, D.29124
	jmp	.L3066	#
.L3064:
	.loc 1 8948 0
	movzbl	(%rbx), %eax	# *s_5, D.29125
	cmpb	$36, %al	#, D.29125
	jne	.L3067	#,
	.loc 1 8948 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_180, D.29125
	testb	%al, %al	# D.29125
	je	.L3067	#,
	.loc 1 8949 0 is_stmt 1 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2038
	movzbl	37(%rax), %eax	# PL_curcop.2038_182->op_private, D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	andl	$8, %eax	#, D.29128
	.loc 1 8948 0 discriminator 1
	testl	%eax, %eax	# D.29128
	jne	.L3068	#,
	.loc 1 8949 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2039
	testq	%rax, %rax	# PL_linestr.2039
	je	.L3069	#,
	.loc 1 8949 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2040
	movl	12(%rax), %eax	# PL_linestr.2040_187->sv_flags, D.29129
	andl	$536870912, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3069	#,
	.loc 1 8949 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2041
	movzbl	37(%rax), %eax	# PL_curcop.2041_190->op_private, D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	andl	$8, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	je	.L3070	#,
.L3069:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2042
	andl	$8388608, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3068	#,
.L3070:
	leaq	1(%rbx), %rax	#, D.29130
	movzbl	(%rax), %eax	# *_196, D.29127
	cmpb	$-65, %al	#, D.29127
	ja	.L3071	#,
.L3068:
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_200, D.29125
	cmpb	$64, %al	#, D.29125
	jle	.L3072	#,
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_202, D.29125
	cmpb	$90, %al	#, D.29125
	jle	.L3073	#,
.L3072:
	.loc 1 8949 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_204, D.29125
	cmpb	$96, %al	#, D.29125
	jle	.L3074	#,
	.loc 1 8949 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_206, D.29125
	cmpb	$122, %al	#, D.29125
	jle	.L3073	#,
.L3074:
	.loc 1 8949 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_208, D.29125
	cmpb	$47, %al	#, D.29125
	jle	.L3075	#,
	.loc 1 8949 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_210, D.29125
	cmpb	$57, %al	#, D.29125
	jle	.L3073	#,
.L3075:
	.loc 1 8949 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_212, D.29125
	cmpb	$95, %al	#, D.29125
	jne	.L3076	#,
.L3073:
	.loc 1 8949 0 discriminator 1
	movl	$1, %eax	#, iftmp.2043
	jmp	.L3077	#
.L3076:
	.loc 1 8949 0 discriminator 3
	movl	$0, %eax	#, iftmp.2043
.L3077:
	.loc 1 8949 0 discriminator 4
	andl	$1, %eax	#, D.29131
	.loc 1 8948 0 is_stmt 1 discriminator 4
	testb	%al, %al	# D.29131
	jne	.L3078	#,
	.loc 1 8948 0 is_stmt 0 discriminator 1
	jmp	.L3079	#
.L3071:
	.loc 1 8949 0 is_stmt 1 discriminator 1
	leaq	1(%rbx), %rax	#, D.29130
	movq	%rax, %rdi	# D.29130,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.29125
	jne	.L3078	#,
.L3079:
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_217, D.29125
	cmpb	$36, %al	#, D.29125
	je	.L3078	#,
	.loc 1 8949 0 is_stmt 0 discriminator 2
	leaq	1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_219, D.29125
	cmpb	$123, %al	#, D.29125
	je	.L3078	#,
	.loc 1 8949 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29134
	movl	$2, %edx	#,
	movl	$.LC113, %esi	#,
	movq	%rax, %rdi	# D.29134,
	call	strncmp	#
	testl	%eax, %eax	# D.29128
	jne	.L3067	#,
.L3078:
	.loc 1 8951 0 is_stmt 1
	movq	%rbx, %rax	# s, D.29124
	jmp	.L3066	#
.L3067:
	.loc 1 8953 0
	movzbl	(%rbx), %eax	# *s_5, D.29125
	cmpb	$123, %al	#, D.29125
	jne	.L3080	#,
	.loc 1 8954 0
	movq	%rbx, -56(%rbp)	# s, bracket
	.loc 1 8955 0
	addq	$1, %rbx	#, s
	jmp	.L3081	#
.L3080:
	.loc 1 8957 0
	cmpl	$0, -84(%rbp)	#, ck_uni
	je	.L3081	#,
	.loc 1 8958 0
	call	S_check_uni	#
.L3081:
	.loc 1 8959 0
	cmpq	%r14, %rbx	# send, s
	jae	.L3082	#,
	.loc 1 8960 0
	movq	%rbx, %rax	# s, s.2044
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.2044_229, D.29125
	movb	%al, (%r12)	# D.29125, *d_175
.L3082:
	.loc 1 8961 0
	leaq	1(%r12), %rax	#, D.29124
	movb	$0, (%rax)	#, *_232
	.loc 1 8962 0
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$94, %al	#, D.29125
	jne	.L3083	#,
	.loc 1 8962 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_7, D.29125
	testb	%al, %al	# D.29125
	je	.L3083	#,
	movzbl	(%rbx), %eax	# *s_7, D.29125
	cmpb	$64, %al	#, D.29125
	jle	.L3084	#,
	movzbl	(%rbx), %eax	# *s_7, D.29125
	cmpb	$90, %al	#, D.29125
	jle	.L3085	#,
.L3084:
	.loc 1 8962 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_7, D.29125
	movsbl	%al, %eax	# D.29125, D.29128
	movl	%eax, %esi	# D.29128,
	movl	$.LC174, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.29124
	je	.L3083	#,
.L3085:
	.loc 1 8963 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_7, D.29125
	cmpb	$96, %al	#, D.29125
	jle	.L3086	#,
	.loc 1 8963 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_7, D.29125
	cmpb	$122, %al	#, D.29125
	jg	.L3086	#,
	movzbl	(%rbx), %eax	# *s_7, D.29125
	subl	$32, %eax	#, D.29135
	xorl	$64, %eax	#, iftmp.2045
	jmp	.L3087	#
.L3086:
	.loc 1 8963 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_7, D.29125
	xorl	$64, %eax	#, iftmp.2045
.L3087:
	.loc 1 8963 0 discriminator 3
	movb	%al, (%r12)	# iftmp.2045, *d_175
	.loc 1 8964 0 is_stmt 1 discriminator 3
	addq	$1, %rbx	#, s
.L3083:
	.loc 1 8966 0
	cmpq	$0, -56(%rbp)	#, bracket
	je	.L3088	#,
	.loc 1 8967 0
	leaq	-1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_250, D.29125
	cmpb	$32, %al	#, D.29125
	je	.L3089	#,
	.loc 1 8967 0 is_stmt 0 discriminator 1
	leaq	-1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_252, D.29125
	cmpb	$9, %al	#, D.29125
	je	.L3089	#,
	leaq	-1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_254, D.29125
	cmpb	$10, %al	#, D.29125
	je	.L3089	#,
	leaq	-1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_256, D.29125
	cmpb	$13, %al	#, D.29125
	je	.L3089	#,
	leaq	-1(%rbx), %rax	#, D.29124
	movzbl	(%rax), %eax	# *_258, D.29125
	cmpb	$12, %al	#, D.29125
	jne	.L3090	#,
.L3089:
	.loc 1 8968 0 is_stmt 1
	jmp	.L3091	#
.L3092:
.LBB99:
	.loc 1 8969 0
	movq	%rbx, %rax	# s, s.2046
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.2046_260, tmp446
	movb	%al, -57(%rbp)	# tmp446, ch
	.loc 1 8970 0
	cmpb	$32, -57(%rbp)	#, ch
	je	.L3091	#,
	.loc 1 8970 0 is_stmt 0 discriminator 1
	cmpb	$9, -57(%rbp)	#, ch
	je	.L3091	#,
	.loc 1 8971 0 is_stmt 1
	movzbl	-57(%rbp), %eax	# ch, tmp447
	movb	%al, (%r12)	# tmp447, *d_175
	.loc 1 8972 0
	jmp	.L3090	#
.L3091:
.LBE99:
	.loc 1 8968 0 discriminator 1
	cmpq	%r14, %rbx	# send, s
	jb	.L3092	#,
.L3090:
	.loc 1 8976 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2048
	movzbl	37(%rax), %eax	# PL_curcop.2048_263->op_private, D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	andl	$8, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	jne	.L3093	#,
	.loc 1 8976 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2049
	testq	%rax, %rax	# PL_linestr.2049
	je	.L3094	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2050
	movl	12(%rax), %eax	# PL_linestr.2050_268->sv_flags, D.29129
	andl	$536870912, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3094	#,
	.loc 1 8976 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2051
	movzbl	37(%rax), %eax	# PL_curcop.2051_271->op_private, D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	andl	$8, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	je	.L3095	#,
.L3094:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2052
	andl	$8388608, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3093	#,
.L3095:
	movzbl	(%r12), %eax	# MEM[(U8 *)d_175], D.29127
	cmpb	$-65, %al	#, D.29127
	ja	.L3096	#,
.L3093:
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$64, %al	#, D.29125
	jle	.L3097	#,
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$90, %al	#, D.29125
	jle	.L3098	#,
.L3097:
	.loc 1 8976 0 discriminator 2
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$96, %al	#, D.29125
	jle	.L3099	#,
	.loc 1 8976 0 discriminator 1
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$122, %al	#, D.29125
	jle	.L3098	#,
.L3099:
	.loc 1 8976 0 discriminator 2
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$95, %al	#, D.29125
	jne	.L3100	#,
.L3098:
	.loc 1 8976 0 discriminator 1
	movl	$1, %eax	#, iftmp.2053
	jmp	.L3101	#
.L3100:
	.loc 1 8976 0 discriminator 3
	movl	$0, %eax	#, iftmp.2053
.L3101:
	.loc 1 8976 0 discriminator 4
	andl	$1, %eax	#, iftmp.2047
	jmp	.L3102	#
.L3096:
	.loc 1 8976 0 discriminator 1
	movq	%r12, %rdi	# d,
	call	Perl_is_utf8_idcont	#
	testb	%al, %al	# D.29125
	je	.L3103	#,
	movq	%r12, %rdi	# d,
	call	Perl_is_utf8_digit	#
	testb	%al, %al	# D.29125
	jne	.L3103	#,
	.loc 1 8976 0 discriminator 3
	movl	$1, %eax	#, iftmp.2054
	jmp	.L3104	#
.L3103:
	.loc 1 8976 0 discriminator 2
	movl	$0, %eax	#, iftmp.2054
.L3104:
	.loc 1 8976 0 discriminator 4
	andl	$1, %eax	#, iftmp.2047
.L3102:
	.loc 1 8976 0 discriminator 3
	testb	%al, %al	# iftmp.2047
	je	.L3105	#,
	.loc 1 8977 0 is_stmt 1
	addq	$1, %r12	#, d
	.loc 1 8978 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2055
	testq	%rax, %rax	# PL_linestr.2055
	je	.L3106	#,
	.loc 1 8978 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2056
	movl	12(%rax), %eax	# PL_linestr.2056_293->sv_flags, D.29129
	andl	$536870912, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3106	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2057
	movzbl	37(%rax), %eax	# PL_curcop.2057_296->op_private, D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	andl	$8, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	je	.L3107	#,
.L3106:
	.loc 1 8978 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2058
	andl	$8388608, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3108	#,
.L3107:
	.loc 1 8979 0 is_stmt 1
	movq	%rbx, %r13	# s, e
	.loc 1 8980 0
	jmp	.L3109	#
.L3123:
	.loc 1 8981 0
	movzbl	0(%r13), %eax	# MEM[(U8 *)e_27], D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.29127
	movzbl	%al, %eax	# D.29127, D.29126
	addq	%rax, %r13	# D.29126, e
	.loc 1 8982 0
	jmp	.L3110	#
.L3111:
	.loc 1 8983 0
	movzbl	0(%r13), %eax	# MEM[(U8 *)e_26], D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.29127
	movzbl	%al, %eax	# D.29127, D.29126
	addq	%rax, %r13	# D.29126, e
.L3110:
	.loc 1 8982 0 discriminator 1
	cmpq	%r14, %r13	# send, e
	jae	.L3109	#,
	.loc 1 8982 0 is_stmt 0 discriminator 2
	movzbl	0(%r13), %eax	# *e_26, D.29125
	testb	%al, %al	# D.29125
	jns	.L3109	#,
	.loc 1 8982 0 discriminator 1
	movq	%r13, %rdi	# e,
	call	Perl_is_utf8_mark	#
	testb	%al, %al	# D.29125
	jne	.L3111	#,
.L3109:
	.loc 1 8980 0 is_stmt 1 discriminator 1
	cmpq	%r14, %r13	# send, e
	jae	.L3112	#,
	.loc 1 8980 0 is_stmt 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2059
	movzbl	37(%rax), %eax	# PL_curcop.2059_316->op_private, D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	andl	$8, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	jne	.L3113	#,
	.loc 1 8980 0 discriminator 5
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2060
	testq	%rax, %rax	# PL_linestr.2060
	je	.L3114	#,
	.loc 1 8980 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2061
	movl	12(%rax), %eax	# PL_linestr.2061_321->sv_flags, D.29129
	andl	$536870912, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3114	#,
	.loc 1 8980 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2062
	movzbl	37(%rax), %eax	# PL_curcop.2062_324->op_private, D.29127
	movzbl	%al, %eax	# D.29127, D.29128
	andl	$8, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	je	.L3115	#,
.L3114:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2063
	andl	$8388608, %eax	#, D.29129
	testl	%eax, %eax	# D.29129
	je	.L3113	#,
.L3115:
	movzbl	0(%r13), %eax	# MEM[(U8 *)e_27], D.29127
	cmpb	$-65, %al	#, D.29127
	ja	.L3116	#,
.L3113:
	.loc 1 8980 0 discriminator 4
	movzbl	0(%r13), %eax	# *e_27, D.29125
	cmpb	$64, %al	#, D.29125
	jle	.L3117	#,
	.loc 1 8980 0 discriminator 1
	movzbl	0(%r13), %eax	# *e_27, D.29125
	cmpb	$90, %al	#, D.29125
	jle	.L3118	#,
.L3117:
	.loc 1 8980 0 discriminator 2
	movzbl	0(%r13), %eax	# *e_27, D.29125
	cmpb	$96, %al	#, D.29125
	jle	.L3119	#,
	.loc 1 8980 0 discriminator 1
	movzbl	0(%r13), %eax	# *e_27, D.29125
	cmpb	$122, %al	#, D.29125
	jle	.L3118	#,
.L3119:
	.loc 1 8980 0 discriminator 2
	movzbl	0(%r13), %eax	# *e_27, D.29125
	cmpb	$47, %al	#, D.29125
	jle	.L3120	#,
	.loc 1 8980 0 discriminator 1
	movzbl	0(%r13), %eax	# *e_27, D.29125
	cmpb	$57, %al	#, D.29125
	jle	.L3118	#,
.L3120:
	.loc 1 8980 0 discriminator 2
	movzbl	0(%r13), %eax	# *e_27, D.29125
	cmpb	$95, %al	#, D.29125
	jne	.L3121	#,
.L3118:
	.loc 1 8980 0 discriminator 1
	movl	$1, %eax	#, iftmp.2064
	jmp	.L3122	#
.L3121:
	.loc 1 8980 0 discriminator 3
	movl	$0, %eax	#, iftmp.2064
.L3122:
	.loc 1 8980 0 discriminator 4
	andl	$1, %eax	#, D.29131
	testb	%al, %al	# D.29131
	jne	.L3123	#,
	jmp	.L3112	#
.L3116:
	.loc 1 8980 0 discriminator 1
	movq	%r13, %rdi	# e,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.29125
	jne	.L3123	#,
.L3112:
	.loc 1 8980 0 discriminator 3
	movzbl	0(%r13), %eax	# *e_27, D.29125
	cmpb	$58, %al	#, D.29125
	je	.L3123	#,
	.loc 1 8985 0 is_stmt 1
	movq	%r13, %rdx	# e, e.2065
	movq	%rbx, %rax	# s, s.2066
	subq	%rax, %rdx	# s.2066, D.29132
	movq	%rdx, %rax	# D.29132, D.29132
	movq	%rax, %rdx	# D.29133,
	movq	%rbx, %rsi	# s,
	movq	%r12, %rdi	# d,
	call	memcpy	#
	.loc 1 8986 0
	movq	%r13, %rdx	# e, e.2067
	movq	%rbx, %rax	# s, s.2068
	subq	%rax, %rdx	# s.2068, D.29132
	movq	%rdx, %rax	# D.29132, D.29132
	addq	%rax, %r12	# D.29126, d
	.loc 1 8987 0
	movq	%r13, %rbx	# e, s
	jmp	.L3124	#
.L3108:
	.loc 1 8990 0
	jmp	.L3125	#
.L3131:
	.loc 1 8991 0
	movq	%r12, %rax	# d, d.2069
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2070
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2070_312, D.29125
	movb	%dl, (%rax)	# D.29125, *d.2069_310
.L3125:
	.loc 1 8990 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_11, D.29125
	cmpb	$64, %al	#, D.29125
	jle	.L3126	#,
	.loc 1 8990 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_11, D.29125
	cmpb	$90, %al	#, D.29125
	jle	.L3127	#,
.L3126:
	.loc 1 8990 0 discriminator 3
	movzbl	(%rbx), %eax	# *s_11, D.29125
	cmpb	$96, %al	#, D.29125
	jle	.L3128	#,
	.loc 1 8990 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_11, D.29125
	cmpb	$122, %al	#, D.29125
	jle	.L3127	#,
.L3128:
	.loc 1 8990 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_11, D.29125
	cmpb	$47, %al	#, D.29125
	jle	.L3129	#,
	.loc 1 8990 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_11, D.29125
	cmpb	$57, %al	#, D.29125
	jle	.L3127	#,
.L3129:
	.loc 1 8990 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_11, D.29125
	cmpb	$95, %al	#, D.29125
	je	.L3127	#,
	.loc 1 8990 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_11, D.29125
	cmpb	$58, %al	#, D.29125
	jne	.L3130	#,
.L3127:
	cmpq	%r13, %r12	# e, d
	jb	.L3131	#,
.L3130:
	.loc 1 8992 0 is_stmt 1
	cmpq	%r13, %r12	# e, d
	jb	.L3124	#,
	.loc 1 8993 0
	movl	$ident_too_long, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3124:
	.loc 1 8995 0
	movb	$0, (%r12)	#, *d_23
	.loc 1 8996 0
	jmp	.L3132	#
.L3134:
	.loc 1 8996 0 is_stmt 0 discriminator 1
	addq	$1, %rbx	#, s
.L3132:
	cmpq	%r14, %rbx	# send, s
	jae	.L3133	#,
	.loc 1 8996 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_13, D.29125
	cmpb	$32, %al	#, D.29125
	je	.L3134	#,
	movzbl	(%rbx), %eax	# *s_13, D.29125
	cmpb	$9, %al	#, D.29125
	je	.L3134	#,
.L3133:
	.loc 1 8997 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_13, D.29125
	cmpb	$91, %al	#, D.29125
	je	.L3135	#,
	.loc 1 8997 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_13, D.29125
	cmpb	$123, %al	#, D.29125
	jne	.L3136	#,
	movq	-72(%rbp), %rax	# dest, tmp450
	movl	$.LC135, %esi	#,
	movq	%rax, %rdi	# tmp450,
	call	strcmp	#
	testl	%eax, %eax	# D.29128
	je	.L3136	#,
.L3135:
	.loc 1 8998 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2071
	movq	80(%rax), %rax	# PL_curcop.2071_371->cop_warnings, D.29136
	testq	%rax, %rax	# D.29136
	je	.L3137	#,
	.loc 1 8998 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2072
	movq	80(%rax), %rax	# PL_curcop.2072_373->cop_warnings, D.29136
	cmpq	$32, %rax	#, D.29136
	je	.L3137	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2073
	movq	80(%rax), %rax	# PL_curcop.2073_375->cop_warnings, D.29136
	cmpq	$16, %rax	#, D.29136
	je	.L3138	#,
	.loc 1 8998 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2074
	movq	80(%rax), %rax	# PL_curcop.2074_377->cop_warnings, D.29136
	movq	(%rax), %rax	# _378->sv_any, D.29137
	movq	(%rax), %rax	# MEM[(struct XPV *)_379].xpv_pv, D.29124
	addq	$7, %rax	#, D.29124
	movzbl	(%rax), %eax	# *_381, D.29125
	movsbl	%al, %eax	# D.29125, D.29128
	andl	$4, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	jne	.L3138	#,
.L3137:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2075
	movq	80(%rax), %rax	# PL_curcop.2075_385->cop_warnings, D.29136
	testq	%rax, %rax	# D.29136
	jne	.L3139	#,
	.loc 1 8998 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2076
	movzbl	%al, %eax	# PL_dowarn.2076, D.29128
	andl	$1, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	je	.L3139	#,
.L3138:
	movq	%r12, %rdx	# d, d.2077
	movq	-72(%rbp), %rax	# dest, dest.2078
	subq	%rax, %rdx	# dest.2078, D.29132
	movq	%rdx, %rax	# D.29132, D.29132
	movl	%eax, %edx	# D.29132, D.29128
	movq	-72(%rbp), %rax	# dest, tmp451
	movl	%edx, %esi	# D.29128,
	movq	%rax, %rdi	# tmp451,
	call	Perl_keyword	#
	testl	%eax, %eax	# D.29128
	je	.L3139	#,
.LBB100:
	.loc 1 8999 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_13, D.29125
	cmpb	$91, %al	#, D.29125
	jne	.L3140	#,
	.loc 1 8999 0 is_stmt 0 discriminator 1
	movl	$.LC175, %eax	#, iftmp.2079
	jmp	.L3141	#
.L3140:
	.loc 1 8999 0 discriminator 2
	movl	$.LC176, %eax	#, iftmp.2079
.L3141:
	.loc 1 8999 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.2079, brack
	.loc 1 9000 0 is_stmt 1 discriminator 3
	movsbl	-58(%rbp), %edi	# funny, D.29128
	movsbl	-58(%rbp), %eax	# funny, D.29128
	movq	-40(%rbp), %rsi	# brack, tmp452
	movq	-72(%rbp), %rdx	# dest, tmp453
	movq	-40(%rbp), %rcx	# brack, tmp454
	movq	%rcx, 8(%rsp)	# tmp454,
	movq	-72(%rbp), %rcx	# dest, tmp455
	movq	%rcx, (%rsp)	# tmp455,
	movl	%edi, %r9d	# D.29128,
	movq	%rsi, %r8	# tmp452,
	movq	%rdx, %rcx	# tmp453,
	movl	%eax, %edx	# D.29128,
	movl	$.LC177, %esi	#,
	movl	$29, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3139:
.LBE100:
	.loc 1 9004 0
	addq	$1, -56(%rbp)	#, bracket
	.loc 1 9005 0
	movq	PL_lex_brackstack(%rip), %rcx	# PL_lex_brackstack, PL_lex_brackstack.2080
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.2081
	leal	1(%rax), %edx	#, PL_lex_brackets.2083
	movl	%edx, PL_lex_brackets(%rip)	# PL_lex_brackets.2083, PL_lex_brackets
	cltq
	addq	%rcx, %rax	# PL_lex_brackstack.2080, D.29124
	movb	$-128, (%rax)	#, *_407
	.loc 1 9006 0
	movq	%rbx, %rax	# s, D.29124
	jmp	.L3066	#
.L3105:
	.loc 1 9011 0
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$64, %al	#, D.29125
	jle	.L3142	#,
	.loc 1 9011 0 is_stmt 0 discriminator 2
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$90, %al	#, D.29125
	jle	.L3136	#,
.L3142:
	.loc 1 9011 0 discriminator 1
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$96, %al	#, D.29125
	jle	.L3143	#,
	.loc 1 9011 0 discriminator 2
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$122, %al	#, D.29125
	jle	.L3136	#,
.L3143:
	.loc 1 9011 0 discriminator 1
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$47, %al	#, D.29125
	jle	.L3144	#,
	.loc 1 9011 0 discriminator 2
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$57, %al	#, D.29125
	jle	.L3136	#,
.L3144:
	.loc 1 9011 0 discriminator 1
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$95, %al	#, D.29125
	je	.L3136	#,
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$32, %al	#, D.29125
	jle	.L3145	#,
	.loc 1 9011 0 discriminator 2
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$127, %al	#, D.29125
	jne	.L3136	#,
.L3145:
	.loc 1 9011 0 discriminator 1
	movzbl	(%r12), %eax	# *d_175, D.29125
	cmpb	$32, %al	#, D.29125
	je	.L3136	#,
	.loc 1 9012 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_10, D.29125
	cmpb	$64, %al	#, D.29125
	jle	.L3146	#,
	.loc 1 9012 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_10, D.29125
	cmpb	$90, %al	#, D.29125
	jle	.L3147	#,
.L3146:
	.loc 1 9012 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_10, D.29125
	cmpb	$96, %al	#, D.29125
	jle	.L3148	#,
	.loc 1 9012 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_10, D.29125
	cmpb	$122, %al	#, D.29125
	jle	.L3147	#,
.L3148:
	.loc 1 9012 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_10, D.29125
	cmpb	$47, %al	#, D.29125
	jle	.L3149	#,
	.loc 1 9012 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_10, D.29125
	cmpb	$57, %al	#, D.29125
	jle	.L3147	#,
.L3149:
	.loc 1 9012 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_10, D.29125
	cmpb	$95, %al	#, D.29125
	jne	.L3136	#,
.L3147:
	.loc 1 9014 0 is_stmt 1
	addq	$1, %r12	#, d
	.loc 1 9015 0
	jmp	.L3150	#
.L3156:
	.loc 1 9016 0
	movq	%r12, %rax	# d, d.2084
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2085
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2085_436, D.29125
	movb	%dl, (%rax)	# D.29125, *d.2084_434
.L3150:
	.loc 1 9015 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_14, D.29125
	cmpb	$64, %al	#, D.29125
	jle	.L3151	#,
	.loc 1 9015 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_14, D.29125
	cmpb	$90, %al	#, D.29125
	jle	.L3152	#,
.L3151:
	.loc 1 9015 0 discriminator 3
	movzbl	(%rbx), %eax	# *s_14, D.29125
	cmpb	$96, %al	#, D.29125
	jle	.L3153	#,
	.loc 1 9015 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_14, D.29125
	cmpb	$122, %al	#, D.29125
	jle	.L3152	#,
.L3153:
	.loc 1 9015 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_14, D.29125
	cmpb	$47, %al	#, D.29125
	jle	.L3154	#,
	.loc 1 9015 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_14, D.29125
	cmpb	$57, %al	#, D.29125
	jle	.L3152	#,
.L3154:
	.loc 1 9015 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_14, D.29125
	cmpb	$95, %al	#, D.29125
	jne	.L3155	#,
.L3152:
	.loc 1 9015 0 discriminator 1
	cmpq	%r13, %r12	# e, d
	jb	.L3156	#,
.L3155:
	.loc 1 9018 0 is_stmt 1
	cmpq	%r13, %r12	# e, d
	jb	.L3157	#,
	.loc 1 9019 0
	movl	$ident_too_long, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3157:
	.loc 1 9020 0
	movb	$0, (%r12)	#, *d_24
.L3136:
	.loc 1 9022 0
	movzbl	(%rbx), %eax	# *s_15, D.29125
	cmpb	$125, %al	#, D.29125
	jne	.L3158	#,
	.loc 1 9023 0
	addq	$1, %rbx	#, s
	.loc 1 9024 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.2086
	cmpl	$9, %eax	#, PL_lex_state.2086
	jne	.L3159	#,
	.loc 1 9024 0 is_stmt 0 discriminator 1
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.2087
	testl	%eax, %eax	# PL_lex_brackets.2087
	jne	.L3159	#,
	.loc 1 9025 0 is_stmt 1
	movl	$5, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 9026 0
	movl	$2, PL_expect(%rip)	#, PL_expect
.L3159:
	.loc 1 9028 0
	cmpb	$35, -58(%rbp)	#, funny
	jne	.L3160	#,
	.loc 1 9029 0
	movb	$64, -58(%rbp)	#, funny
.L3160:
	.loc 1 9030 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.2088
	cmpl	$10, %eax	#, PL_lex_state.2088
	jne	.L3166	#,
	.loc 1 9031 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2089
	movq	80(%rax), %rax	# PL_curcop.2089_445->cop_warnings, D.29136
	testq	%rax, %rax	# D.29136
	je	.L3162	#,
	.loc 1 9031 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2090
	movq	80(%rax), %rax	# PL_curcop.2090_447->cop_warnings, D.29136
	cmpq	$32, %rax	#, D.29136
	je	.L3162	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2091
	movq	80(%rax), %rax	# PL_curcop.2091_449->cop_warnings, D.29136
	cmpq	$16, %rax	#, D.29136
	je	.L3163	#,
	.loc 1 9031 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2092
	movq	80(%rax), %rax	# PL_curcop.2092_451->cop_warnings, D.29136
	movq	(%rax), %rax	# _452->sv_any, D.29137
	movq	(%rax), %rax	# MEM[(struct XPV *)_453].xpv_pv, D.29124
	addq	$7, %rax	#, D.29124
	movzbl	(%rax), %eax	# *_455, D.29125
	movsbl	%al, %eax	# D.29125, D.29128
	andl	$4, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	jne	.L3163	#,
.L3162:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2093
	movq	80(%rax), %rax	# PL_curcop.2093_459->cop_warnings, D.29136
	testq	%rax, %rax	# D.29136
	jne	.L3166	#,
	.loc 1 9031 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2094
	movzbl	%al, %eax	# PL_dowarn.2094, D.29128
	andl	$1, %eax	#, D.29128
	testl	%eax, %eax	# D.29128
	je	.L3166	#,
.L3163:
	.loc 1 9032 0 is_stmt 1 discriminator 1
	movq	%r12, %rdx	# d, d.2095
	movq	-72(%rbp), %rax	# dest, dest.2096
	subq	%rax, %rdx	# dest.2096, D.29132
	movq	%rdx, %rax	# D.29132, D.29132
	movl	%eax, %edx	# D.29132, D.29128
	movq	-72(%rbp), %rax	# dest, tmp456
	movl	%edx, %esi	# D.29128,
	movq	%rax, %rdi	# tmp456,
	call	Perl_keyword	#
	.loc 1 9031 0 discriminator 1
	testl	%eax, %eax	# D.29128
	jne	.L3164	#,
	.loc 1 9032 0
	movq	-72(%rbp), %rax	# dest, tmp457
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp457,
	call	Perl_get_cv	#
	testq	%rax, %rax	# D.29138
	je	.L3166	#,
.L3164:
	.loc 1 9034 0
	movsbl	-58(%rbp), %ecx	# funny, D.29128
	movsbl	-58(%rbp), %eax	# funny, D.29128
	movq	-72(%rbp), %rsi	# dest, tmp458
	movq	-72(%rbp), %rdx	# dest, tmp459
	movq	%rsi, %r9	# tmp458,
	movl	%ecx, %r8d	# D.29128,
	movq	%rdx, %rcx	# tmp459,
	movl	%eax, %edx	# D.29128,
	movl	$.LC178, %esi	#,
	movl	$29, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	jmp	.L3166	#
.L3158:
	.loc 1 9041 0
	movq	-56(%rbp), %rbx	# bracket, s
	.loc 1 9042 0
	movq	-72(%rbp), %rax	# dest, tmp460
	movb	$0, (%rax)	#, *dest_52(D)
	jmp	.L3166	#
.L3088:
	.loc 1 9045 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.2097
	cmpl	$9, %eax	#, PL_lex_state.2097
	jne	.L3166	#,
	.loc 1 9045 0 is_stmt 0 discriminator 1
	movl	PL_lex_brackets(%rip), %eax	# PL_lex_brackets, PL_lex_brackets.2098
	testl	%eax, %eax	# PL_lex_brackets.2098
	jne	.L3166	#,
	movq	%rbx, %rdi	# s,
	call	S_intuit_more	#
	testl	%eax, %eax	# D.29128
	jne	.L3166	#,
	.loc 1 9046 0 is_stmt 1
	movl	$5, PL_lex_state(%rip)	#, PL_lex_state
.L3166:
	.loc 1 9047 0
	movq	%rbx, %rax	# s, D.29124
.L3066:
	.loc 1 9048 0
	addq	$80, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE38:
	.size	S_scan_ident, .-S_scan_ident
	.globl	Perl_pmflag
	.type	Perl_pmflag, @function
Perl_pmflag:
.LFB39:
	.loc 1 9052 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# pmfl, pmfl
	movl	%esi, -12(%rbp)	# ch, ch
	.loc 1 9053 0
	cmpl	$105, -12(%rbp)	#, ch
	jne	.L3168	#,
	.loc 1 9054 0
	movq	-8(%rbp), %rax	# pmfl, tmp73
	movl	(%rax), %eax	# *pmfl_2(D), D.29144
	orb	$64, %ah	#, D.29144
	movl	%eax, %edx	# D.29144, D.29144
	movq	-8(%rbp), %rax	# pmfl, tmp74
	movl	%edx, (%rax)	# D.29144, *pmfl_2(D)
	jmp	.L3167	#
.L3168:
	.loc 1 9055 0
	cmpl	$103, -12(%rbp)	#, ch
	jne	.L3170	#,
	.loc 1 9056 0
	movq	-8(%rbp), %rax	# pmfl, tmp75
	movl	(%rax), %eax	# *pmfl_2(D), D.29144
	orb	$1, %ah	#, D.29144
	movl	%eax, %edx	# D.29144, D.29144
	movq	-8(%rbp), %rax	# pmfl, tmp76
	movl	%edx, (%rax)	# D.29144, *pmfl_2(D)
	jmp	.L3167	#
.L3170:
	.loc 1 9057 0
	cmpl	$99, -12(%rbp)	#, ch
	jne	.L3171	#,
	.loc 1 9058 0
	movq	-8(%rbp), %rax	# pmfl, tmp77
	movl	(%rax), %eax	# *pmfl_2(D), D.29144
	orb	$2, %ah	#, D.29144
	movl	%eax, %edx	# D.29144, D.29144
	movq	-8(%rbp), %rax	# pmfl, tmp78
	movl	%edx, (%rax)	# D.29144, *pmfl_2(D)
	jmp	.L3167	#
.L3171:
	.loc 1 9059 0
	cmpl	$111, -12(%rbp)	#, ch
	jne	.L3172	#,
	.loc 1 9060 0
	movq	-8(%rbp), %rax	# pmfl, tmp79
	movl	(%rax), %eax	# *pmfl_2(D), D.29144
	orb	$-128, %al	#, D.29144
	movl	%eax, %edx	# D.29144, D.29144
	movq	-8(%rbp), %rax	# pmfl, tmp80
	movl	%edx, (%rax)	# D.29144, *pmfl_2(D)
	jmp	.L3167	#
.L3172:
	.loc 1 9061 0
	cmpl	$109, -12(%rbp)	#, ch
	jne	.L3173	#,
	.loc 1 9062 0
	movq	-8(%rbp), %rax	# pmfl, tmp81
	movl	(%rax), %eax	# *pmfl_2(D), D.29144
	orb	$16, %ah	#, D.29144
	movl	%eax, %edx	# D.29144, D.29144
	movq	-8(%rbp), %rax	# pmfl, tmp82
	movl	%edx, (%rax)	# D.29144, *pmfl_2(D)
	jmp	.L3167	#
.L3173:
	.loc 1 9063 0
	cmpl	$115, -12(%rbp)	#, ch
	jne	.L3174	#,
	.loc 1 9064 0
	movq	-8(%rbp), %rax	# pmfl, tmp83
	movl	(%rax), %eax	# *pmfl_2(D), D.29144
	orb	$32, %ah	#, D.29144
	movl	%eax, %edx	# D.29144, D.29144
	movq	-8(%rbp), %rax	# pmfl, tmp84
	movl	%edx, (%rax)	# D.29144, *pmfl_2(D)
	jmp	.L3167	#
.L3174:
	.loc 1 9065 0
	cmpl	$120, -12(%rbp)	#, ch
	jne	.L3167	#,
	.loc 1 9066 0
	movq	-8(%rbp), %rax	# pmfl, tmp85
	movl	(%rax), %eax	# *pmfl_2(D), D.29144
	orb	$128, %ah	#, D.29144
	movl	%eax, %edx	# D.29144, D.29144
	movq	-8(%rbp), %rax	# pmfl, tmp86
	movl	%edx, (%rax)	# D.29144, *pmfl_2(D)
.L3167:
	.loc 1 9067 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE39:
	.size	Perl_pmflag, .-Perl_pmflag
	.section	.rodata
.LC179:
	.string	"Search pattern not terminated"
.LC180:
	.string	"iomsx"
.LC181:
	.string	"iogcmsx"
	.text
	.type	S_scan_pat, @function
S_scan_pat:
.LFB40:
	.loc 1 9071 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# start, start
	movl	%esi, -28(%rbp)	# type, type
	.loc 1 9075 0
	movq	-24(%rbp), %rax	# start, tmp104
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp104,
	call	S_scan_str	#
	movq	%rax, -16(%rbp)	# tmp105, s
	.loc 1 9076 0
	cmpq	$0, -16(%rbp)	#, s
	jne	.L3176	#,
	.loc 1 9077 0
	movl	$.LC179, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3176:
	.loc 1 9079 0
	movl	-28(%rbp), %eax	# type, tmp106
	movl	$0, %esi	#,
	movl	%eax, %edi	# tmp106,
	call	Perl_newPMOP	#
	movq	%rax, -8(%rbp)	# tmp107, pm
	.loc 1 9080 0
	movl	PL_multi_open(%rip), %eax	# PL_multi_open, PL_multi_open.2099
	cmpl	$63, %eax	#, PL_multi_open.2099
	jne	.L3177	#,
	.loc 1 9081 0
	movq	-8(%rbp), %rax	# pm, tmp108
	movl	88(%rax), %eax	# pm_7->op_pmflags, D.29145
	orl	$2, %eax	#, D.29145
	movl	%eax, %edx	# D.29145, D.29145
	movq	-8(%rbp), %rax	# pm, tmp109
	movl	%edx, 88(%rax)	# D.29145, pm_7->op_pmflags
.L3177:
	.loc 1 9082 0
	cmpl	$32, -28(%rbp)	#, type
	jne	.L3178	#,
	.loc 1 9083 0
	jmp	.L3179	#
.L3181:
	.loc 1 9084 0
	movq	-16(%rbp), %rax	# s, s.2100
	leaq	1(%rax), %rdx	#, tmp110
	movq	%rdx, -16(%rbp)	# tmp110, s
	movzbl	(%rax), %eax	# *s.2100_15, D.29146
	movsbl	%al, %eax	# D.29146, D.29147
	movq	-8(%rbp), %rdx	# pm, tmp111
	addq	$88, %rdx	#, D.29149
	movl	%eax, %esi	# D.29147,
	movq	%rdx, %rdi	# D.29149,
	call	Perl_pmflag	#
.L3179:
	.loc 1 9083 0 discriminator 1
	movq	-16(%rbp), %rax	# s, tmp112
	movzbl	(%rax), %eax	# *s_1, D.29146
	testb	%al, %al	# D.29146
	je	.L3180	#,
	.loc 1 9083 0 is_stmt 0 discriminator 2
	movq	-16(%rbp), %rax	# s, tmp113
	movzbl	(%rax), %eax	# *s_1, D.29146
	movsbl	%al, %eax	# D.29146, D.29147
	movl	%eax, %esi	# D.29147,
	movl	$.LC180, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.29148
	jne	.L3181	#,
	jmp	.L3180	#
.L3178:
	.loc 1 9087 0 is_stmt 1
	jmp	.L3182	#
.L3183:
	.loc 1 9088 0
	movq	-16(%rbp), %rax	# s, s.2101
	leaq	1(%rax), %rdx	#, tmp114
	movq	%rdx, -16(%rbp)	# tmp114, s
	movzbl	(%rax), %eax	# *s.2101_24, D.29146
	movsbl	%al, %eax	# D.29146, D.29147
	movq	-8(%rbp), %rdx	# pm, tmp115
	addq	$88, %rdx	#, D.29149
	movl	%eax, %esi	# D.29147,
	movq	%rdx, %rdi	# D.29149,
	call	Perl_pmflag	#
.L3182:
	.loc 1 9087 0 discriminator 1
	movq	-16(%rbp), %rax	# s, tmp116
	movzbl	(%rax), %eax	# *s_2, D.29146
	testb	%al, %al	# D.29146
	je	.L3180	#,
	.loc 1 9087 0 is_stmt 0 discriminator 2
	movq	-16(%rbp), %rax	# s, tmp117
	movzbl	(%rax), %eax	# *s_2, D.29146
	movsbl	%al, %eax	# D.29146, D.29147
	movl	%eax, %esi	# D.29147,
	movl	$.LC181, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.29148
	jne	.L3183	#,
.L3180:
	.loc 1 9091 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2102
	movq	80(%rax), %rax	# PL_curcop.2102_29->cop_warnings, D.29150
	testq	%rax, %rax	# D.29150
	je	.L3184	#,
	.loc 1 9091 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2103
	movq	80(%rax), %rax	# PL_curcop.2103_31->cop_warnings, D.29150
	cmpq	$32, %rax	#, D.29150
	je	.L3184	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2104
	movq	80(%rax), %rax	# PL_curcop.2104_33->cop_warnings, D.29150
	cmpq	$16, %rax	#, D.29150
	je	.L3185	#,
	.loc 1 9091 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2105
	movq	80(%rax), %rax	# PL_curcop.2105_35->cop_warnings, D.29150
	movq	(%rax), %rax	# _36->sv_any, D.29151
	movq	(%rax), %rax	# MEM[(struct XPV *)_37].xpv_pv, D.29148
	addq	$5, %rax	#, D.29148
	movzbl	(%rax), %eax	# *_39, D.29146
	movsbl	%al, %eax	# D.29146, D.29147
	andl	$1, %eax	#, D.29147
	testl	%eax, %eax	# D.29147
	jne	.L3185	#,
.L3184:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2106
	movq	80(%rax), %rax	# PL_curcop.2106_43->cop_warnings, D.29150
	testq	%rax, %rax	# D.29150
	jne	.L3186	#,
	.loc 1 9091 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2107
	movzbl	%al, %eax	# PL_dowarn.2107, D.29147
	andl	$1, %eax	#, D.29147
	testl	%eax, %eax	# D.29147
	je	.L3186	#,
.L3185:
	.loc 1 9092 0 is_stmt 1 discriminator 1
	movq	-8(%rbp), %rax	# pm, tmp118
	movl	88(%rax), %eax	# pm_7->op_pmflags, D.29145
	andl	$512, %eax	#, D.29145
	.loc 1 9091 0 discriminator 1
	testl	%eax, %eax	# D.29145
	je	.L3186	#,
	.loc 1 9092 0
	movq	-8(%rbp), %rax	# pm, tmp119
	movl	88(%rax), %eax	# pm_7->op_pmflags, D.29145
	andl	$256, %eax	#, D.29145
	testl	%eax, %eax	# D.29145
	jne	.L3186	#,
	.loc 1 9094 0
	movl	$c_without_g, %esi	#,
	movl	$20, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3186:
	.loc 1 9097 0
	movq	-8(%rbp), %rax	# pm, tmp120
	movl	88(%rax), %edx	# pm_7->op_pmflags, D.29145
	movq	-8(%rbp), %rax	# pm, tmp121
	movl	%edx, 92(%rax)	# D.29145, pm_7->op_pmpermflags
	.loc 1 9099 0
	movq	-8(%rbp), %rax	# pm, tmp122
	movq	%rax, PL_lex_op(%rip)	# tmp122, PL_lex_op
	.loc 1 9100 0
	movl	$31, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 9101 0
	movq	-16(%rbp), %rax	# s, D.29148
	.loc 1 9102 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE40:
	.size	S_scan_pat, .-S_scan_pat
	.section	.rodata
	.align 8
.LC182:
	.string	"Substitution pattern not terminated"
	.align 8
.LC183:
	.string	"Substitution replacement not terminated"
.LC184:
	.string	"eval "
.LC185:
	.string	"do "
.LC186:
	.string	"{ "
.LC187:
	.string	" };"
	.text
	.type	S_scan_subst, @function
S_scan_subst:
.LFB41:
	.loc 1 9106 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$32, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -40(%rbp)	# start, start
	.loc 1 9110 0
	movl	$0, -32(%rbp)	#, es
	.loc 1 9112 0
	movl	$0, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 9114 0
	movq	-40(%rbp), %rax	# start, tmp109
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp109,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 9116 0
	testq	%rbx, %rbx	# s
	jne	.L3189	#,
	.loc 1 9117 0
	movl	$.LC182, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3189:
	.loc 1 9119 0
	leaq	-1(%rbx), %rax	#, D.29155
	movzbl	(%rax), %eax	# *_9, D.29156
	movsbl	%al, %edx	# D.29156, D.29157
	movl	PL_multi_open(%rip), %eax	# PL_multi_open, PL_multi_open.2108
	cmpl	%eax, %edx	# PL_multi_open.2108, D.29157
	jne	.L3190	#,
	.loc 1 9120 0
	subq	$1, %rbx	#, s
.L3190:
	.loc 1 9122 0
	movl	PL_multi_start(%rip), %eax	# PL_multi_start, tmp110
	movl	%eax, -28(%rbp)	# tmp110, first_start
	.loc 1 9123 0
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 9124 0
	testq	%rbx, %rbx	# s
	jne	.L3191	#,
	.loc 1 9125 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.2109
	testq	%rax, %rax	# PL_lex_stuff.2109
	je	.L3192	#,
	.loc 1 9126 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.2110
	movq	%rax, %rdi	# PL_lex_stuff.2110,
	call	Perl_sv_free	#
	.loc 1 9127 0
	movq	$0, PL_lex_stuff(%rip)	#, PL_lex_stuff
.L3192:
	.loc 1 9129 0
	movl	$.LC183, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3191:
	.loc 1 9131 0
	movl	-28(%rbp), %eax	# first_start, tmp111
	movl	%eax, PL_multi_start(%rip)	# tmp111, PL_multi_start
	.loc 1 9133 0
	movl	$0, %esi	#,
	movl	$33, %edi	#,
	call	Perl_newPMOP	#
	movq	%rax, %r12	#, pm
	.loc 1 9134 0
	jmp	.L3193	#
.L3197:
	.loc 1 9135 0
	movzbl	(%rbx), %eax	# *s_2, D.29156
	cmpb	$101, %al	#, D.29156
	jne	.L3194	#,
	.loc 1 9136 0
	addq	$1, %rbx	#, s
	.loc 1 9137 0
	addl	$1, -32(%rbp)	#, es
	jmp	.L3193	#
.L3194:
	.loc 1 9139 0
	movzbl	(%rbx), %eax	# *s_2, D.29156
	movsbl	%al, %eax	# D.29156, D.29157
	movl	%eax, %esi	# D.29157,
	movl	$.LC181, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.29155
	je	.L3195	#,
	.loc 1 9140 0
	movq	%rbx, %rax	# s, s.2111
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.2111_26, D.29156
	movsbl	%al, %edx	# D.29156, D.29157
	leaq	88(%r12), %rax	#, D.29158
	movl	%edx, %esi	# D.29157,
	movq	%rax, %rdi	# D.29158,
	call	Perl_pmflag	#
	jmp	.L3193	#
.L3195:
	.loc 1 9142 0
	jmp	.L3196	#
.L3193:
	.loc 1 9134 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2, D.29156
	testb	%al, %al	# D.29156
	jne	.L3197	#,
.L3196:
	.loc 1 9146 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2112
	movq	80(%rax), %rax	# PL_curcop.2112_31->cop_warnings, D.29159
	testq	%rax, %rax	# D.29159
	je	.L3198	#,
	.loc 1 9146 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2113
	movq	80(%rax), %rax	# PL_curcop.2113_33->cop_warnings, D.29159
	cmpq	$32, %rax	#, D.29159
	je	.L3198	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2114
	movq	80(%rax), %rax	# PL_curcop.2114_35->cop_warnings, D.29159
	cmpq	$16, %rax	#, D.29159
	je	.L3199	#,
	.loc 1 9146 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2115
	movq	80(%rax), %rax	# PL_curcop.2115_37->cop_warnings, D.29159
	movq	(%rax), %rax	# _38->sv_any, D.29160
	movq	(%rax), %rax	# MEM[(struct XPV *)_39].xpv_pv, D.29155
	addq	$5, %rax	#, D.29155
	movzbl	(%rax), %eax	# *_41, D.29156
	movsbl	%al, %eax	# D.29156, D.29157
	andl	$1, %eax	#, D.29157
	testl	%eax, %eax	# D.29157
	jne	.L3199	#,
.L3198:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2116
	movq	80(%rax), %rax	# PL_curcop.2116_45->cop_warnings, D.29159
	testq	%rax, %rax	# D.29159
	jne	.L3200	#,
	.loc 1 9146 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2117
	movzbl	%al, %eax	# PL_dowarn.2117, D.29157
	andl	$1, %eax	#, D.29157
	testl	%eax, %eax	# D.29157
	je	.L3200	#,
.L3199:
	movl	88(%r12), %eax	# pm_18->op_pmflags, D.29161
	andl	$512, %eax	#, D.29161
	testl	%eax, %eax	# D.29161
	je	.L3200	#,
	.loc 1 9148 0 is_stmt 1
	movl	$c_in_subst, %esi	#,
	movl	$20, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3200:
	.loc 1 9151 0
	cmpl	$0, -32(%rbp)	#, es
	je	.L3201	#,
.LBB101:
	.loc 1 9153 0
	movq	%rbx, PL_sublex_info+16(%rip)	# s, PL_sublex_info.super_bufptr
	.loc 1 9154 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2118
	movq	%rax, PL_sublex_info+24(%rip)	# PL_bufend.2118, PL_sublex_info.super_bufend
	.loc 1 9155 0
	movl	$0, PL_multi_end(%rip)	#, PL_multi_end
	.loc 1 9156 0
	movl	88(%r12), %eax	# pm_18->op_pmflags, D.29161
	orb	$4, %ah	#, D.29161
	movl	%eax, 88(%r12)	# D.29161, pm_18->op_pmflags
	.loc 1 9157 0
	movl	$0, %esi	#,
	movl	$.LC17, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, -24(%rbp)	# tmp112, repl
	.loc 1 9158 0
	jmp	.L3202	#
.L3205:
	.loc 1 9159 0
	cmpl	$0, -32(%rbp)	#, es
	je	.L3203	#,
	.loc 1 9159 0 is_stmt 0 discriminator 1
	movl	$.LC184, %eax	#, iftmp.2119
	jmp	.L3204	#
.L3203:
	.loc 1 9159 0 discriminator 2
	movl	$.LC185, %eax	#, iftmp.2119
.L3204:
	.loc 1 9159 0 discriminator 3
	movq	-24(%rbp), %rdx	# repl, tmp113
	movq	%rax, %rsi	# iftmp.2119,
	movq	%rdx, %rdi	# tmp113,
	call	Perl_sv_catpv	#
.L3202:
	.loc 1 9158 0 is_stmt 1 discriminator 1
	movl	-32(%rbp), %eax	# es, es.2120
	leal	-1(%rax), %edx	#, tmp114
	movl	%edx, -32(%rbp)	# tmp114, es
	testl	%eax, %eax	# es.2120
	jg	.L3205	#,
	.loc 1 9160 0
	movq	-24(%rbp), %rax	# repl, tmp115
	movl	$2, %ecx	#,
	movl	$2, %edx	#,
	movl	$.LC186, %esi	#,
	movq	%rax, %rdi	# tmp115,
	call	Perl_sv_catpvn_flags	#
	.loc 1 9161 0
	movq	PL_lex_repl(%rip), %rcx	# PL_lex_repl, PL_lex_repl.2121
	movq	-24(%rbp), %rax	# repl, tmp116
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# PL_lex_repl.2121,
	movq	%rax, %rdi	# tmp116,
	call	Perl_sv_catsv_flags	#
	.loc 1 9162 0
	movq	-24(%rbp), %rax	# repl, tmp117
	movl	$2, %ecx	#,
	movl	$2, %edx	#,
	movl	$.LC187, %esi	#,
	movq	%rax, %rdi	# tmp117,
	call	Perl_sv_catpvn_flags	#
	.loc 1 9163 0
	movq	-24(%rbp), %rax	# repl, tmp118
	movl	12(%rax), %eax	# repl_55->sv_flags, D.29161
	orl	$1073741824, %eax	#, D.29161
	movl	%eax, %edx	# D.29161, D.29161
	movq	-24(%rbp), %rax	# repl, tmp119
	movl	%edx, 12(%rax)	# D.29161, repl_55->sv_flags
	.loc 1 9164 0
	movq	PL_lex_repl(%rip), %rax	# PL_lex_repl, PL_lex_repl.2122
	movq	%rax, %rdi	# PL_lex_repl.2122,
	call	Perl_sv_free	#
	.loc 1 9165 0
	movq	-24(%rbp), %rax	# repl, tmp120
	movq	%rax, PL_lex_repl(%rip)	# tmp120, PL_lex_repl
.L3201:
.LBE101:
	.loc 1 9168 0
	movl	88(%r12), %eax	# pm_18->op_pmflags, D.29161
	movl	%eax, 92(%r12)	# D.29161, pm_18->op_pmpermflags
	.loc 1 9169 0
	movq	%r12, PL_lex_op(%rip)	# pm, PL_lex_op
	.loc 1 9170 0
	movl	$33, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 9171 0
	movq	%rbx, %rax	# s, D.29155
	.loc 1 9172 0
	addq	$32, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE41:
	.size	S_scan_subst, .-S_scan_subst
	.section	.rodata
	.align 8
.LC188:
	.string	"Transliteration pattern not terminated"
	.align 8
.LC189:
	.string	"Transliteration replacement not terminated"
	.text
	.type	S_scan_trans, @function
S_scan_trans:
.LFB42:
	.loc 1 9176 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# start, start
	.loc 1 9184 0
	movl	$0, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 9186 0
	movq	-56(%rbp), %rax	# start, tmp96
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp96,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 9187 0
	testq	%rbx, %rbx	# s
	jne	.L3208	#,
	.loc 1 9188 0
	movl	$.LC188, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3208:
	.loc 1 9189 0
	leaq	-1(%rbx), %rax	#, D.29168
	movzbl	(%rax), %eax	# *_14, D.29169
	movsbl	%al, %edx	# D.29169, D.29170
	movl	PL_multi_open(%rip), %eax	# PL_multi_open, PL_multi_open.2123
	cmpl	%eax, %edx	# PL_multi_open.2123, D.29170
	jne	.L3209	#,
	.loc 1 9190 0
	subq	$1, %rbx	#, s
.L3209:
	.loc 1 9192 0
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# s,
	call	S_scan_str	#
	movq	%rax, %rbx	#, s
	.loc 1 9193 0
	testq	%rbx, %rbx	# s
	jne	.L3210	#,
	.loc 1 9194 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.2124
	testq	%rax, %rax	# PL_lex_stuff.2124
	je	.L3211	#,
	.loc 1 9195 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.2125
	movq	%rax, %rdi	# PL_lex_stuff.2125,
	call	Perl_sv_free	#
	.loc 1 9196 0
	movq	$0, PL_lex_stuff(%rip)	#, PL_lex_stuff
.L3211:
	.loc 1 9198 0
	movl	$.LC189, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3210:
	.loc 1 9201 0
	movl	$0, -44(%rbp)	#, squash
	movl	-44(%rbp), %eax	# squash, tmp97
	movl	%eax, -40(%rbp)	# tmp97, del
	movl	-40(%rbp), %eax	# del, tmp98
	movl	%eax, -36(%rbp)	# tmp98, complement
.L3218:
	.loc 1 9203 0
	movzbl	(%rbx), %eax	# *s_2, D.29169
	movsbl	%al, %eax	# D.29169, D.29170
	cmpl	$100, %eax	#, D.29170
	je	.L3213	#,
	cmpl	$115, %eax	#, D.29170
	je	.L3214	#,
	cmpl	$99, %eax	#, D.29170
	je	.L3215	#,
	.loc 1 9214 0
	nop
.L3217:
	.loc 1 9220 0
	cmpl	$0, -36(%rbp)	#, complement
	je	.L3219	#,
	jmp	.L3226	#
.L3215:
	.loc 1 9205 0
	movl	$32, -36(%rbp)	#, complement
	.loc 1 9206 0
	jmp	.L3216	#
.L3213:
	.loc 1 9208 0
	movl	$16, -40(%rbp)	#, del
	.loc 1 9209 0
	jmp	.L3216	#
.L3214:
	.loc 1 9211 0
	movl	$8, -44(%rbp)	#, squash
	.loc 1 9212 0
	nop
.L3216:
	.loc 1 9216 0
	addq	$1, %rbx	#, s
	.loc 1 9217 0
	jmp	.L3218	#
.L3226:
	.loc 1 9220 0 discriminator 1
	cmpl	$0, -40(%rbp)	#, del
	jne	.L3219	#,
	movl	$516, %eax	#, iftmp.2126
	jmp	.L3220	#
.L3219:
	.loc 1 9220 0 is_stmt 0 discriminator 2
	movl	$512, %eax	#, iftmp.2126
.L3220:
	.loc 1 9220 0 discriminator 3
	movq	%rax, %rdi	# iftmp.2126,
	call	Perl_safesysmalloc	#
	movq	%rax, -32(%rbp)	# tmp99, tbl
	.loc 1 9221 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rax	# tbl, tmp100
	movq	%rax, %rdx	# tmp100,
	movl	$0, %esi	#,
	movl	$35, %edi	#,
	call	Perl_newPVOP	#
	movq	%rax, -24(%rbp)	# tmp101, o
	.loc 1 9222 0 discriminator 3
	movl	-40(%rbp), %eax	# del, tmp102
	movl	%eax, %edx	# tmp102, D.29171
	movl	-44(%rbp), %eax	# squash, tmp103
	orl	%eax, %edx	# D.29171, D.29171
	movl	-36(%rbp), %eax	# complement, tmp104
	orl	%eax, %edx	# D.29171, D.29171
	.loc 1 9223 0 discriminator 3
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.2128
	movl	12(%rax), %eax	# PL_lex_stuff.2128_39->sv_flags, D.29172
	andl	$536870912, %eax	#, D.29172
	testl	%eax, %eax	# D.29172
	je	.L3221	#,
	.loc 1 9223 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2129
	movzbl	37(%rax), %eax	# PL_curcop.2129_42->op_private, D.29173
	movzbl	%al, %eax	# D.29173, D.29170
	andl	$8, %eax	#, D.29170
	testl	%eax, %eax	# D.29170
	jne	.L3221	#,
	.loc 1 9223 0 discriminator 3
	movl	$1, %eax	#, iftmp.2127
	jmp	.L3222	#
.L3221:
	.loc 1 9223 0 discriminator 2
	movl	$0, %eax	#, iftmp.2127
.L3222:
	.loc 1 9222 0 is_stmt 1
	orl	%eax, %edx	# D.29171, D.29171
	.loc 1 9224 0
	movq	PL_lex_repl(%rip), %rax	# PL_lex_repl, PL_lex_repl.2131
	movl	12(%rax), %eax	# PL_lex_repl.2131_50->sv_flags, D.29172
	andl	$536870912, %eax	#, D.29172
	.loc 1 9222 0
	testl	%eax, %eax	# D.29172
	je	.L3223	#,
	.loc 1 9224 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2132
	movzbl	37(%rax), %eax	# PL_curcop.2132_53->op_private, D.29173
	movzbl	%al, %eax	# D.29173, D.29170
	andl	$8, %eax	#, D.29170
	testl	%eax, %eax	# D.29170
	jne	.L3223	#,
	.loc 1 9222 0
	movl	$2, %eax	#, iftmp.2130
	jmp	.L3224	#
.L3223:
	.loc 1 9222 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.2130
.L3224:
	.loc 1 9222 0 discriminator 2
	orl	%edx, %eax	# D.29171, D.29171
	movl	%eax, %edx	# D.29171, D.29173
	movq	-24(%rbp), %rax	# o, tmp105
	movb	%dl, 37(%rax)	# D.29173, o_33->op_private
	.loc 1 9226 0 is_stmt 1 discriminator 2
	movq	-24(%rbp), %rax	# o, tmp106
	movq	%rax, PL_lex_op(%rip)	# tmp106, PL_lex_op
	.loc 1 9227 0 discriminator 2
	movl	$35, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 9228 0 discriminator 2
	movq	%rbx, %rax	# s, D.29168
	.loc 1 9229 0 discriminator 2
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE42:
	.size	S_scan_trans, .-S_scan_trans
	.section	.rodata
.LC190:
	.string	"bare << to mean <<\"\""
	.align 8
.LC191:
	.string	"Delimiter for here document is too long"
	.text
	.type	S_scan_heredoc, @function
S_scan_heredoc:
.LFB43:
	.loc 1 9233 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, %rbx	# s, s
	.loc 1 9235 0
	movl	$2, -112(%rbp)	#, op_type
	.loc 1 9242 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2134
	testq	%rax, %rax	# PL_rsfp.2134
	je	.L3228	#,
	.loc 1 9242 0 is_stmt 0 discriminator 1
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.2135
	cmpl	$2, %eax	#, PL_lex_inwhat.2135
	je	.L3228	#,
	.loc 1 9242 0 discriminator 3
	movl	$1, %eax	#, iftmp.2133
	jmp	.L3229	#
.L3228:
	.loc 1 9242 0 discriminator 2
	movl	$0, %eax	#, iftmp.2133
.L3229:
	.loc 1 9242 0 discriminator 4
	movl	%eax, -108(%rbp)	# iftmp.2133, outer
	.loc 1 9244 0 is_stmt 1 discriminator 4
	addq	$2, %rbx	#, s
	.loc 1 9245 0 discriminator 4
	movl	$PL_tokenbuf, %r12d	#, d
	.loc 1 9246 0 discriminator 4
	movl	$PL_tokenbuf+255, %r13d	#, e
	.loc 1 9247 0 discriminator 4
	cmpl	$0, -108(%rbp)	#, outer
	jne	.L3230	#,
	.loc 1 9248 0
	movq	%r12, %rax	# d, d.2136
	leaq	1(%rax), %r12	#, d
	movb	$10, (%rax)	#, *d.2136_44
.L3230:
	.loc 1 9249 0
	movq	%rbx, -96(%rbp)	# s, peek
	jmp	.L3231	#
.L3232:
	.loc 1 9249 0 is_stmt 0 discriminator 2
	addq	$1, -96(%rbp)	#, peek
.L3231:
	.loc 1 9249 0 discriminator 1
	movq	-96(%rbp), %rax	# peek, tmp427
	movzbl	(%rax), %eax	# *peek_26, D.29176
	cmpb	$32, %al	#, D.29176
	je	.L3232	#,
	.loc 1 9249 0 discriminator 3
	movq	-96(%rbp), %rax	# peek, tmp428
	movzbl	(%rax), %eax	# *peek_26, D.29176
	cmpb	$9, %al	#, D.29176
	je	.L3232	#,
	.loc 1 9250 0 is_stmt 1
	movq	-96(%rbp), %rax	# peek, tmp429
	movzbl	(%rax), %eax	# *peek_26, D.29176
	cmpb	$96, %al	#, D.29176
	je	.L3233	#,
	.loc 1 9250 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# peek, tmp430
	movzbl	(%rax), %eax	# *peek_26, D.29176
	cmpb	$39, %al	#, D.29176
	je	.L3233	#,
	movq	-96(%rbp), %rax	# peek, tmp431
	movzbl	(%rax), %eax	# *peek_26, D.29176
	cmpb	$34, %al	#, D.29176
	jne	.L3234	#,
.L3233:
	.loc 1 9251 0 is_stmt 1
	movq	-96(%rbp), %rbx	# peek, s
	.loc 1 9252 0
	movq	%rbx, %rax	# s, s.2137
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.2137_115, tmp432
	movb	%al, -117(%rbp)	# tmp432, term
	.loc 1 9253 0
	movsbl	-117(%rbp), %edx	# term, D.29178
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2138
	leaq	-116(%rbp), %rcx	#, tmp433
	movq	%rcx, %r9	# tmp433,
	movl	%edx, %r8d	# D.29178,
	movq	%rax, %rcx	# PL_bufend.2138,
	movq	%rbx, %rdx	# s,
	movq	%r13, %rsi	# e,
	movq	%r12, %rdi	# d,
	call	Perl_delimcpy	#
	movq	%rax, %rbx	#, s
	.loc 1 9254 0
	movl	-116(%rbp), %eax	# len, len.2139
	cltq
	addq	%rax, %r12	# D.29180, d
	.loc 1 9255 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2140
	cmpq	%rax, %rbx	# PL_bufend.2140, s
	jae	.L3235	#,
	.loc 1 9256 0
	addq	$1, %rbx	#, s
	.loc 1 9255 0
	jmp	.L3236	#
.L3235:
	.loc 1 9255 0 is_stmt 0 discriminator 1
	jmp	.L3236	#
.L3234:
	.loc 1 9259 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_41, D.29176
	cmpb	$92, %al	#, D.29176
	jne	.L3237	#,
	.loc 1 9260 0
	addq	$1, %rbx	#, s
	movb	$39, -117(%rbp)	#, term
	jmp	.L3238	#
.L3237:
	.loc 1 9262 0
	movb	$34, -117(%rbp)	#, term
.L3238:
	.loc 1 9263 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2142
	movzbl	37(%rax), %eax	# PL_curcop.2142_56->op_private, D.29177
	movzbl	%al, %eax	# D.29177, D.29178
	andl	$8, %eax	#, D.29178
	testl	%eax, %eax	# D.29178
	jne	.L3239	#,
	.loc 1 9263 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2143
	testq	%rax, %rax	# PL_linestr.2143
	je	.L3240	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2144
	movl	12(%rax), %eax	# PL_linestr.2144_61->sv_flags, D.29179
	andl	$536870912, %eax	#, D.29179
	testl	%eax, %eax	# D.29179
	je	.L3240	#,
	.loc 1 9263 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2145
	movzbl	37(%rax), %eax	# PL_curcop.2145_64->op_private, D.29177
	movzbl	%al, %eax	# D.29177, D.29178
	andl	$8, %eax	#, D.29178
	testl	%eax, %eax	# D.29178
	je	.L3241	#,
.L3240:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2146
	andl	$8388608, %eax	#, D.29179
	testl	%eax, %eax	# D.29179
	je	.L3239	#,
.L3241:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_2], D.29177
	cmpb	$-65, %al	#, D.29177
	ja	.L3242	#,
.L3239:
	movzbl	(%rbx), %eax	# *s_2, D.29176
	cmpb	$64, %al	#, D.29176
	jle	.L3243	#,
	.loc 1 9263 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_2, D.29176
	cmpb	$90, %al	#, D.29176
	jle	.L3244	#,
.L3243:
	.loc 1 9263 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2, D.29176
	cmpb	$96, %al	#, D.29176
	jle	.L3245	#,
	.loc 1 9263 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_2, D.29176
	cmpb	$122, %al	#, D.29176
	jle	.L3244	#,
.L3245:
	.loc 1 9263 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2, D.29176
	cmpb	$47, %al	#, D.29176
	jle	.L3246	#,
	.loc 1 9263 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_2, D.29176
	cmpb	$57, %al	#, D.29176
	jle	.L3244	#,
.L3246:
	.loc 1 9263 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2, D.29176
	cmpb	$95, %al	#, D.29176
	je	.L3244	#,
	.loc 1 9263 0 discriminator 3
	movl	$1, %eax	#, iftmp.2147
	jmp	.L3247	#
.L3244:
	.loc 1 9263 0 discriminator 1
	movl	$0, %eax	#, iftmp.2147
.L3247:
	.loc 1 9263 0 discriminator 4
	andl	$1, %eax	#, iftmp.2141
	jmp	.L3248	#
.L3242:
	.loc 1 9263 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.29176
	sete	%al	#, iftmp.2141
.L3248:
	.loc 1 9263 0 discriminator 3
	testb	%al, %al	# iftmp.2141
	je	.L3249	#,
	.loc 1 9264 0 is_stmt 1
	movl	$.LC190, %edi	#,
	call	Perl_deprecate_old	#
	.loc 1 9265 0
	jmp	.L3250	#
.L3249:
	jmp	.L3250	#
.L3263:
	.loc 1 9266 0
	cmpq	%r13, %r12	# e, d
	jae	.L3251	#,
	.loc 1 9267 0
	movq	%r12, %rax	# d, d.2148
	leaq	1(%rax), %r12	#, d
	movzbl	(%rbx), %edx	# *s_3, D.29176
	movb	%dl, (%rax)	# D.29176, *d.2148_110
.L3251:
	.loc 1 9265 0
	addq	$1, %rbx	#, s
.L3250:
	.loc 1 9265 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2150
	movzbl	37(%rax), %eax	# PL_curcop.2150_83->op_private, D.29177
	movzbl	%al, %eax	# D.29177, D.29178
	andl	$8, %eax	#, D.29178
	testl	%eax, %eax	# D.29178
	jne	.L3252	#,
	.loc 1 9265 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2151
	testq	%rax, %rax	# PL_linestr.2151
	je	.L3253	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2152
	movl	12(%rax), %eax	# PL_linestr.2152_88->sv_flags, D.29179
	andl	$536870912, %eax	#, D.29179
	testl	%eax, %eax	# D.29179
	je	.L3253	#,
	.loc 1 9265 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2153
	movzbl	37(%rax), %eax	# PL_curcop.2153_91->op_private, D.29177
	movzbl	%al, %eax	# D.29177, D.29178
	andl	$8, %eax	#, D.29178
	testl	%eax, %eax	# D.29178
	je	.L3254	#,
.L3253:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2154
	andl	$8388608, %eax	#, D.29179
	testl	%eax, %eax	# D.29179
	je	.L3252	#,
.L3254:
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_3], D.29177
	cmpb	$-65, %al	#, D.29177
	ja	.L3255	#,
.L3252:
	movzbl	(%rbx), %eax	# *s_3, D.29176
	cmpb	$64, %al	#, D.29176
	jle	.L3256	#,
	movzbl	(%rbx), %eax	# *s_3, D.29176
	cmpb	$90, %al	#, D.29176
	jle	.L3257	#,
.L3256:
	.loc 1 9265 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.29176
	cmpb	$96, %al	#, D.29176
	jle	.L3258	#,
	.loc 1 9265 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.29176
	cmpb	$122, %al	#, D.29176
	jle	.L3257	#,
.L3258:
	.loc 1 9265 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.29176
	cmpb	$47, %al	#, D.29176
	jle	.L3259	#,
	.loc 1 9265 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.29176
	cmpb	$57, %al	#, D.29176
	jle	.L3257	#,
.L3259:
	.loc 1 9265 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.29176
	cmpb	$95, %al	#, D.29176
	jne	.L3260	#,
.L3257:
	.loc 1 9265 0 discriminator 1
	movl	$1, %eax	#, iftmp.2155
	jmp	.L3261	#
.L3260:
	.loc 1 9265 0 discriminator 3
	movl	$0, %eax	#, iftmp.2155
.L3261:
	.loc 1 9265 0 discriminator 4
	andl	$1, %eax	#, iftmp.2149
	jmp	.L3262	#
.L3255:
	.loc 1 9265 0 discriminator 1
	movq	%rbx, %rdi	# s,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.29176
	setne	%al	#, iftmp.2149
.L3262:
	.loc 1 9265 0 discriminator 3
	testb	%al, %al	# iftmp.2149
	jne	.L3263	#,
.L3236:
	.loc 1 9270 0 is_stmt 1
	cmpq	$PL_tokenbuf+255, %r12	#, d
	jb	.L3264	#,
	.loc 1 9271 0
	movl	$.LC191, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3264:
	.loc 1 9272 0
	movq	%r12, %rax	# d, d.2156
	leaq	1(%rax), %r12	#, d
	movb	$10, (%rax)	#, *d.2156_126
	.loc 1 9273 0
	movb	$0, (%r12)	#, *d_127
	.loc 1 9274 0
	movq	%r12, %rdx	# d, d.2157
	movl	$PL_tokenbuf, %eax	#, PL_tokenbuf.2158
	subq	%rax, %rdx	# PL_tokenbuf.2158, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	movl	%eax, -116(%rbp)	# len.2159, len
	.loc 1 9276 0
	movl	$13, %esi	#,
	movq	%rbx, %rdi	# s,
	call	strchr	#
	movq	%rax, %r12	#, d
	.loc 1 9277 0
	testq	%r12, %r12	# d
	je	.L3265	#,
.LBB102:
	.loc 1 9278 0
	movq	%rbx, -88(%rbp)	# s, olds
	.loc 1 9279 0
	movq	%r12, %rbx	# d, s
	.loc 1 9280 0
	jmp	.L3266	#
.L3270:
	.loc 1 9281 0
	movzbl	(%rbx), %eax	# *s_6, D.29176
	cmpb	$13, %al	#, D.29176
	jne	.L3267	#,
	.loc 1 9282 0
	movq	%r12, %rax	# d, d.2160
	leaq	1(%rax), %r12	#, d
	movb	$10, (%rax)	#, *d.2160_137
	.loc 1 9283 0
	addq	$1, %rbx	#, s
	movzbl	(%rbx), %eax	# *s_139, D.29176
	cmpb	$10, %al	#, D.29176
	jne	.L3266	#,
	.loc 1 9284 0
	addq	$1, %rbx	#, s
	jmp	.L3266	#
.L3267:
	.loc 1 9286 0
	movzbl	(%rbx), %eax	# *s_6, D.29176
	cmpb	$10, %al	#, D.29176
	jne	.L3269	#,
	.loc 1 9286 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29182
	movzbl	(%rax), %eax	# *_143, D.29176
	cmpb	$13, %al	#, D.29176
	jne	.L3269	#,
	.loc 1 9287 0 is_stmt 1
	movq	%r12, %rax	# d, d.2161
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2162
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2162_147, D.29176
	movb	%dl, (%rax)	# D.29176, *d.2161_145
	.loc 1 9288 0
	addq	$1, %rbx	#, s
	jmp	.L3266	#
.L3269:
	.loc 1 9291 0
	movq	%r12, %rax	# d, d.2163
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2164
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2164_153, D.29176
	movb	%dl, (%rax)	# D.29176, *d.2163_151
.L3266:
	.loc 1 9280 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2165
	cmpq	%rax, %rbx	# PL_bufend.2165, s
	jb	.L3270	#,
	.loc 1 9293 0
	movb	$0, (%r12)	#, *d_25
	.loc 1 9294 0
	movq	%r12, PL_bufend(%rip)	# d, PL_bufend
	.loc 1 9295 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2166
	movq	(%rax), %rax	# PL_linestr.2166_156->sv_any, D.29183
	movq	PL_bufend(%rip), %rdx	# PL_bufend, PL_bufend.2167
	movq	%rdx, %rcx	# PL_bufend.2167, PL_bufend.2168
	movq	PL_linestr(%rip), %rdx	# PL_linestr, PL_linestr.2169
	movq	(%rdx), %rdx	# PL_linestr.2169_160->sv_any, D.29183
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_161].xpv_pv, D.29182
	subq	%rdx, %rcx	# D.29181, D.29181
	movq	%rcx, %rdx	# D.29181, D.29181
	movq	%rdx, 8(%rax)	# D.29184, MEM[(struct XPV *)_157].xpv_cur
	.loc 1 9296 0
	movq	-88(%rbp), %rbx	# olds, s
.L3265:
.LBE102:
	.loc 1 9299 0
	movl	$.LC62, %r12d	#, d
	.loc 1 9300 0
	cmpl	$0, -108(%rbp)	#, outer
	jne	.L3271	#,
	.loc 1 9300 0 is_stmt 0 discriminator 1
	leaq	1(%r12), %rdx	#, D.29185
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2170
	movq	%rdx, %rcx	# D.29185,
	movq	%r12, %rdx	# d,
	movq	%rax, %rsi	# PL_bufend.2170,
	movq	%rbx, %rdi	# s,
	call	Perl_ninstr	#
	movq	%rax, %r12	#, d
	testq	%r12, %r12	# d
	jne	.L3272	#,
.L3271:
	.loc 1 9301 0 is_stmt 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2171
	movq	%rax, %rdx	# PL_bufend.2171, PL_bufend.2172
	movq	%rbx, %rax	# s, s.2173
	subq	%rax, %rdx	# s.2173, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	movq	%rax, %rsi	# D.29184,
	movq	%rbx, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, -104(%rbp)	# tmp434, herewas
	jmp	.L3273	#
.L3272:
	.loc 1 9303 0
	subq	$1, %rbx	#, s
	movq	%r12, %rdx	# d, d.2174
	movq	%rbx, %rax	# s, s.2175
	subq	%rax, %rdx	# s.2175, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	movq	%rax, %rsi	# D.29184,
	movq	%rbx, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, -104(%rbp)	# tmp435, herewas
.L3273:
	.loc 1 9304 0
	movq	-104(%rbp), %rax	# herewas, tmp436
	movq	(%rax), %rax	# herewas_17->sv_any, D.29183
	movq	8(%rax), %rax	# MEM[(struct XPV *)_183].xpv_cur, D.29184
	addq	%rax, %rbx	# D.29184, s
	.loc 1 9306 0
	movl	$79, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -80(%rbp)	# tmp437, tmpstr
	.loc 1 9307 0
	movq	-80(%rbp), %rax	# tmpstr, tmp438
	movl	$5, %esi	#,
	movq	%rax, %rdi	# tmp438,
	call	Perl_sv_upgrade	#
	.loc 1 9308 0
	cmpb	$39, -117(%rbp)	#, term
	jne	.L3274	#,
	.loc 1 9309 0
	movl	$5, -112(%rbp)	#, op_type
	.loc 1 9310 0
	movq	-80(%rbp), %rax	# tmpstr, tmp439
	movq	(%rax), %rax	# tmpstr_186->sv_any, D.29183
	movq	$-1, 24(%rax)	#, MEM[(struct XPVIV *)_188].xiv_iv
	jmp	.L3275	#
.L3274:
	.loc 1 9312 0
	cmpb	$96, -117(%rbp)	#, term
	jne	.L3275	#,
	.loc 1 9313 0
	movl	$24, -112(%rbp)	#, op_type
	.loc 1 9314 0
	movq	-80(%rbp), %rax	# tmpstr, tmp440
	movq	(%rax), %rax	# tmpstr_186->sv_any, D.29183
	movq	$92, 24(%rax)	#, MEM[(struct XPVIV *)_190].xiv_iv
.L3275:
	.loc 1 9317 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2177
	movl	72(%rax), %edx	# PL_curcop.2177_191->cop_line, D.29179
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.2178
	cmpl	%eax, %edx	# PL_copline.2178, D.29179
	jae	.L3276	#,
	.loc 1 9317 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2179
	movl	72(%rax), %eax	# PL_curcop.2179_194->cop_line, iftmp.2176
	jmp	.L3277	#
.L3276:
	.loc 1 9317 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.2176
.L3277:
	.loc 1 9317 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.2176, PL_copline
	.loc 1 9318 0 is_stmt 1 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2180
	movl	72(%rax), %eax	# PL_curcop.2180_197->cop_line, D.29179
	movl	%eax, PL_multi_start(%rip)	# PL_multi_start.2181, PL_multi_start
	.loc 1 9319 0 discriminator 3
	movl	$60, PL_multi_close(%rip)	#, PL_multi_close
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.2182
	movl	%eax, PL_multi_open(%rip)	# PL_multi_close.2182, PL_multi_open
	.loc 1 9320 0 discriminator 3
	movzbl	PL_tokenbuf(%rip), %eax	# PL_tokenbuf, tmp441
	movb	%al, -117(%rbp)	# tmp441, term
	.loc 1 9321 0 discriminator 3
	movl	PL_lex_inwhat(%rip), %eax	# PL_lex_inwhat, PL_lex_inwhat.2183
	cmpl	$33, %eax	#, PL_lex_inwhat.2183
	jne	.L3278	#,
	.loc 1 9321 0 is_stmt 0 discriminator 1
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.2184
	testl	%eax, %eax	# PL_in_eval.2184
	je	.L3278	#,
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2185
	testq	%rax, %rax	# PL_rsfp.2185
	jne	.L3278	#,
.LBB103:
	.loc 1 9322 0 is_stmt 1
	movq	PL_sublex_info+16(%rip), %rax	# PL_sublex_info.super_bufptr, tmp442
	movq	%rax, -72(%rbp)	# tmp442, bufptr
	.loc 1 9323 0
	movq	PL_sublex_info+24(%rip), %rax	# PL_sublex_info.super_bufend, tmp443
	movq	%rax, -64(%rbp)	# tmp443, bufend
	.loc 1 9324 0
	movq	-104(%rbp), %rax	# herewas, tmp444
	movq	(%rax), %rax	# herewas_17->sv_any, D.29183
	movq	8(%rax), %rax	# MEM[(struct XPV *)_207].xpv_cur, D.29184
	negq	%rax	# D.29180
	addq	%rbx, %rax	# s, tmp445
	movq	%rax, -56(%rbp)	# tmp445, olds
	.loc 1 9325 0
	movq	-72(%rbp), %rax	# bufptr, tmp446
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp446,
	call	strchr	#
	movq	%rax, %rbx	#, s
	.loc 1 9326 0
	testq	%rbx, %rbx	# s
	jne	.L3279	#,
	.loc 1 9327 0
	movq	-64(%rbp), %rbx	# bufend, s
.L3279:
	.loc 1 9328 0
	movq	%rbx, %r12	# s, d
	.loc 1 9329 0
	jmp	.L3280	#
.L3282:
	.loc 1 9331 0
	movq	%rbx, %rax	# s, s.2186
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.2186_218, D.29176
	cmpb	$10, %al	#, D.29176
	jne	.L3280	#,
	.loc 1 9332 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2187
	movl	72(%rax), %edx	# PL_curcop.2187_221->cop_line, D.29179
	addl	$1, %edx	#, D.29179
	movl	%edx, 72(%rax)	# D.29179, PL_curcop.2187_221->cop_line
.L3280:
	.loc 1 9329 0 discriminator 1
	cmpq	-64(%rbp), %rbx	# bufend, s
	jae	.L3281	#,
	.loc 1 9330 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_10, D.29176
	.loc 1 9329 0 discriminator 2
	cmpb	-117(%rbp), %al	# term, D.29176
	jne	.L3282	#,
	.loc 1 9330 0
	movl	-116(%rbp), %eax	# len, len.2188
	cltq
	movq	%rax, %rdx	# D.29184,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	memcmp	#
	testl	%eax, %eax	# D.29178
	jne	.L3282	#,
.L3281:
	.loc 1 9334 0
	cmpq	-64(%rbp), %rbx	# bufend, s
	jb	.L3283	#,
	.loc 1 9335 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2189
	movl	PL_multi_start(%rip), %edx	# PL_multi_start, PL_multi_start.2190
	movl	%edx, 72(%rax)	# PL_multi_start.2191, PL_curcop.2189_224->cop_line
	.loc 1 9336 0
	movl	$PL_tokenbuf, %edi	#,
	call	S_missingterm	#
.L3283:
	.loc 1 9338 0
	movq	%r12, %rdx	# d, d.2192
	movq	-72(%rbp), %rax	# bufptr, bufptr.2193
	subq	%rax, %rdx	# bufptr.2193, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	addq	$1, %rax	#, D.29181
	movq	%rax, %rdx	# D.29181, D.29184
	movq	-72(%rbp), %rcx	# bufptr, tmp447
	movq	-104(%rbp), %rax	# herewas, tmp448
	movq	%rcx, %rsi	# tmp447,
	movq	%rax, %rdi	# tmp448,
	call	Perl_sv_setpvn	#
	.loc 1 9339 0
	movq	%rbx, %rdx	# s, s.2194
	movq	%r12, %rax	# d, d.2195
	subq	%rax, %rdx	# d.2195, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	movq	%rax, %rdx	# D.29181, D.29184
	leaq	1(%r12), %rcx	#, D.29185
	movq	-80(%rbp), %rax	# tmpstr, tmp449
	movq	%rcx, %rsi	# D.29185,
	movq	%rax, %rdi	# tmp449,
	call	Perl_sv_setpvn	#
	.loc 1 9340 0
	movl	-116(%rbp), %eax	# len, len.2196
	cltq
	subq	$1, %rax	#, D.29180
	addq	%rax, %rbx	# D.29180, s
	.loc 1 9341 0
	movq	-64(%rbp), %rdx	# bufend, bufend.2197
	movq	%rbx, %rax	# s, s.2198
	subq	%rax, %rdx	# s.2198, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	movq	%rax, %rdx	# D.29181, D.29184
	movq	-104(%rbp), %rax	# herewas, tmp450
	movl	$2, %ecx	#,
	movq	%rbx, %rsi	# s,
	movq	%rax, %rdi	# tmp450,
	call	Perl_sv_catpvn_flags	#
	.loc 1 9342 0
	movq	-104(%rbp), %rax	# herewas, tmp451
	movq	(%rax), %rax	# herewas_17->sv_any, D.29183
	movq	8(%rax), %rax	# MEM[(struct XPV *)_245].xpv_cur, D.29184
	leaq	1(%rax), %rdx	#, D.29184
	movq	-104(%rbp), %rax	# herewas, tmp452
	movq	(%rax), %rax	# herewas_17->sv_any, D.29183
	movq	(%rax), %rcx	# MEM[(struct XPV *)_248].xpv_pv, D.29182
	movq	-72(%rbp), %rax	# bufptr, tmp453
	movq	%rcx, %rsi	# D.29182,
	movq	%rax, %rdi	# tmp453,
	call	memcpy	#
	.loc 1 9344 0
	movq	-56(%rbp), %rbx	# olds, s
	.loc 1 9345 0
	jmp	.L3284	#
.L3278:
.LBE103:
	.loc 1 9347 0
	cmpl	$0, -108(%rbp)	#, outer
	jne	.L3285	#,
	.loc 1 9348 0
	movq	%rbx, %r12	# s, d
	.loc 1 9349 0
	jmp	.L3286	#
.L3288:
	.loc 1 9351 0
	movq	%rbx, %rax	# s, s.2199
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.2199_257, D.29176
	cmpb	$10, %al	#, D.29176
	jne	.L3286	#,
	.loc 1 9352 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2200
	movl	72(%rax), %edx	# PL_curcop.2200_260->cop_line, D.29179
	addl	$1, %edx	#, D.29179
	movl	%edx, 72(%rax)	# D.29179, PL_curcop.2200_260->cop_line
.L3286:
	.loc 1 9349 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2201
	cmpq	%rax, %rbx	# PL_bufend.2201, s
	jae	.L3287	#,
	.loc 1 9350 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_11, D.29176
	.loc 1 9349 0 discriminator 2
	cmpb	-117(%rbp), %al	# term, D.29176
	jne	.L3288	#,
	.loc 1 9350 0
	movl	-116(%rbp), %eax	# len, len.2202
	cltq
	movq	%rax, %rdx	# D.29184,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	memcmp	#
	testl	%eax, %eax	# D.29178
	jne	.L3288	#,
.L3287:
	.loc 1 9354 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2203
	cmpq	%rax, %rbx	# PL_bufend.2203, s
	jb	.L3289	#,
	.loc 1 9355 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2204
	movl	PL_multi_start(%rip), %edx	# PL_multi_start, PL_multi_start.2205
	movl	%edx, 72(%rax)	# PL_multi_start.2206, PL_curcop.2204_264->cop_line
	.loc 1 9356 0
	movl	$PL_tokenbuf, %edi	#,
	call	S_missingterm	#
.L3289:
	.loc 1 9358 0
	movq	%rbx, %rdx	# s, s.2207
	movq	%r12, %rax	# d, d.2208
	subq	%rax, %rdx	# d.2208, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	movq	%rax, %rdx	# D.29181, D.29184
	leaq	1(%r12), %rcx	#, D.29185
	movq	-80(%rbp), %rax	# tmpstr, tmp454
	movq	%rcx, %rsi	# D.29185,
	movq	%rax, %rdi	# tmp454,
	call	Perl_sv_setpvn	#
	.loc 1 9359 0
	movl	-116(%rbp), %eax	# len, len.2209
	cltq
	subq	$1, %rax	#, D.29180
	addq	%rax, %rbx	# D.29180, s
	.loc 1 9360 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2210
	movl	72(%rax), %edx	# PL_curcop.2210_276->cop_line, D.29179
	addl	$1, %edx	#, D.29179
	movl	%edx, 72(%rax)	# D.29179, PL_curcop.2210_276->cop_line
	.loc 1 9362 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2211
	movq	%rax, %rdx	# PL_bufend.2211, PL_bufend.2212
	movq	%rbx, %rax	# s, s.2213
	subq	%rax, %rdx	# s.2213, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	movq	%rax, %rdx	# D.29181, D.29184
	movq	-104(%rbp), %rax	# herewas, tmp455
	movl	$2, %ecx	#,
	movq	%rbx, %rsi	# s,
	movq	%rax, %rdi	# tmp455,
	call	Perl_sv_catpvn_flags	#
	.loc 1 9363 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2214
	movq	-104(%rbp), %rcx	# herewas, tmp456
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp456,
	movq	%rax, %rdi	# PL_linestr.2214,
	call	Perl_sv_setsv_flags	#
	.loc 1 9364 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2215
	movq	(%rax), %rax	# PL_linestr.2215_285->sv_any, D.29183
	movq	(%rax), %rax	# MEM[(struct XPV *)_286].xpv_pv, PL_linestart.2216
	movq	%rax, PL_linestart(%rip)	# PL_linestart.2216, PL_linestart
	movq	PL_linestart(%rip), %rbx	# PL_linestart, s
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.2217
	movq	%rax, PL_oldbufptr(%rip)	# PL_bufptr.2217, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2218
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.2218, PL_oldoldbufptr
	.loc 1 9365 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2219
	movq	(%rax), %rax	# PL_linestr.2219_291->sv_any, D.29183
	movq	(%rax), %rdx	# MEM[(struct XPV *)_292].xpv_pv, D.29182
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2220
	movq	(%rax), %rax	# PL_linestr.2220_294->sv_any, D.29183
	movq	8(%rax), %rax	# MEM[(struct XPV *)_295].xpv_cur, D.29184
	addq	%rdx, %rax	# D.29182, PL_bufend.2221
	movq	%rax, PL_bufend(%rip)	# PL_bufend.2221, PL_bufend
	.loc 1 9366 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.2222
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.2222, PL_last_lop
	.loc 1 9370 0
	jmp	.L3291	#
.L3285:
	.loc 1 9369 0
	movq	-80(%rbp), %rax	# tmpstr, tmp457
	movl	$0, %edx	#,
	movl	$.LC17, %esi	#,
	movq	%rax, %rdi	# tmp457,
	call	Perl_sv_setpvn	#
	.loc 1 9370 0
	jmp	.L3291	#
.L3306:
	.loc 1 9371 0
	cmpl	$0, -108(%rbp)	#, outer
	je	.L3292	#,
	.loc 1 9372 0 discriminator 1
	movq	PL_rsfp(%rip), %rcx	# PL_rsfp, PL_rsfp.2223
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2224
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# PL_rsfp.2223,
	movq	%rax, %rdi	# PL_linestr.2224,
	call	S_filter_gets	#
	movq	%rax, PL_linestart(%rip)	# PL_linestart.2225, PL_linestart
	movq	PL_linestart(%rip), %rbx	# PL_linestart, s
	movq	%rbx, PL_oldbufptr(%rip)	# s, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2226
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.2226, PL_oldoldbufptr
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2227
	.loc 1 9371 0 discriminator 1
	testq	%rax, %rax	# PL_oldoldbufptr.2227
	jne	.L3293	#,
.L3292:
	.loc 1 9373 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2228
	movl	PL_multi_start(%rip), %edx	# PL_multi_start, PL_multi_start.2229
	movl	%edx, 72(%rax)	# PL_multi_start.2230, PL_curcop.2228_306->cop_line
	.loc 1 9374 0
	movl	$PL_tokenbuf, %edi	#,
	call	S_missingterm	#
.L3293:
	.loc 1 9376 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2231
	movl	72(%rax), %edx	# PL_curcop.2231_309->cop_line, D.29179
	addl	$1, %edx	#, D.29179
	movl	%edx, 72(%rax)	# D.29179, PL_curcop.2231_309->cop_line
	.loc 1 9377 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2232
	movq	(%rax), %rax	# PL_linestr.2232_312->sv_any, D.29183
	movq	(%rax), %rdx	# MEM[(struct XPV *)_313].xpv_pv, D.29182
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2233
	movq	(%rax), %rax	# PL_linestr.2233_315->sv_any, D.29183
	movq	8(%rax), %rax	# MEM[(struct XPV *)_316].xpv_cur, D.29184
	addq	%rdx, %rax	# D.29182, PL_bufend.2234
	movq	%rax, PL_bufend(%rip)	# PL_bufend.2234, PL_bufend
	.loc 1 9378 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.2235
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.2235, PL_last_lop
	.loc 1 9380 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2236
	movq	%rax, %rdx	# PL_bufend.2236, PL_bufend.2237
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.2238
	subq	%rax, %rdx	# PL_linestart.2239, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	cmpq	$1, %rax	#, D.29181
	jle	.L3294	#,
	.loc 1 9381 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2240
	subq	$2, %rax	#, D.29182
	movzbl	(%rax), %eax	# *_326, D.29176
	cmpb	$13, %al	#, D.29176
	jne	.L3295	#,
	.loc 1 9381 0 is_stmt 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2241
	subq	$1, %rax	#, D.29182
	movzbl	(%rax), %eax	# *_329, D.29176
	cmpb	$10, %al	#, D.29176
	je	.L3296	#,
.L3295:
	.loc 1 9382 0 is_stmt 1 discriminator 2
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2242
	subq	$2, %rax	#, D.29182
	movzbl	(%rax), %eax	# *_332, D.29176
	.loc 1 9381 0 discriminator 2
	cmpb	$10, %al	#, D.29176
	jne	.L3297	#,
	.loc 1 9382 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2243
	subq	$1, %rax	#, D.29182
	movzbl	(%rax), %eax	# *_335, D.29176
	cmpb	$13, %al	#, D.29176
	jne	.L3297	#,
.L3296:
	.loc 1 9384 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2244
	subq	$2, %rax	#, D.29182
	movb	$10, (%rax)	#, *_343
	.loc 1 9385 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2245
	subq	$1, %rax	#, PL_bufend.2246
	movq	%rax, PL_bufend(%rip)	# PL_bufend.2246, PL_bufend
	.loc 1 9386 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2247
	movq	(%rax), %rax	# PL_linestr.2247_346->sv_any, D.29183
	movq	PL_bufend(%rip), %rdx	# PL_bufend, PL_bufend.2248
	movq	%rdx, %rcx	# PL_bufend.2248, PL_bufend.2249
	movq	PL_linestr(%rip), %rdx	# PL_linestr, PL_linestr.2250
	movq	(%rdx), %rdx	# PL_linestr.2250_350->sv_any, D.29183
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_351].xpv_pv, D.29182
	subq	%rdx, %rcx	# D.29181, D.29181
	movq	%rcx, %rdx	# D.29181, D.29181
	movq	%rdx, 8(%rax)	# D.29184, MEM[(struct XPV *)_347].xpv_cur
	nop
	jmp	.L3299	#
.L3297:
	.loc 1 9388 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2251
	subq	$1, %rax	#, D.29182
	movzbl	(%rax), %eax	# *_338, D.29176
	cmpb	$13, %al	#, D.29176
	jne	.L3299	#,
	.loc 1 9389 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2252
	subq	$1, %rax	#, D.29182
	movb	$10, (%rax)	#, *_341
	jmp	.L3299	#
.L3294:
	.loc 1 9391 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2253
	movq	%rax, %rdx	# PL_bufend.2253, PL_bufend.2254
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.2255
	subq	%rax, %rdx	# PL_linestart.2256, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	cmpq	$1, %rax	#, D.29181
	jne	.L3299	#,
	.loc 1 9391 0 is_stmt 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2257
	subq	$1, %rax	#, D.29182
	movzbl	(%rax), %eax	# *_362, D.29176
	cmpb	$13, %al	#, D.29176
	jne	.L3299	#,
	.loc 1 9392 0 is_stmt 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2258
	subq	$1, %rax	#, D.29182
	movb	$10, (%rax)	#, *_365
.L3299:
	.loc 1 9394 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.2259
	testl	%eax, %eax	# PL_perldb.2259
	je	.L3300	#,
	.loc 1 9394 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.2260
	andl	$2, %eax	#, D.29179
	testl	%eax, %eax	# D.29179
	je	.L3300	#,
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.2261
	movq	PL_debstash(%rip), %rax	# PL_debstash, PL_debstash.2262
	cmpq	%rax, %rdx	# PL_debstash.2262, PL_curstash.2261
	je	.L3300	#,
.LBB104:
	.loc 1 9395 0 is_stmt 1
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -48(%rbp)	# tmp458, sv
	.loc 1 9397 0
	movq	-48(%rbp), %rax	# sv, tmp459
	movl	$7, %esi	#,
	movq	%rax, %rdi	# tmp459,
	call	Perl_sv_upgrade	#
	.loc 1 9398 0
	movq	PL_linestr(%rip), %rcx	# PL_linestr, PL_linestr.2263
	movq	-48(%rbp), %rax	# sv, tmp460
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# PL_linestr.2263,
	movq	%rax, %rdi	# tmp460,
	call	Perl_sv_setsv_flags	#
	.loc 1 9399 0
	movq	-48(%rbp), %rax	# sv, tmp461
	movl	12(%rax), %eax	# sv_371->sv_flags, D.29179
	andl	$2097152, %eax	#, D.29179
	testl	%eax, %eax	# D.29179
	je	.L3302	#,
	.loc 1 9399 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# sv, tmp462
	movq	%rax, %rdi	# tmp462,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.29178
	je	.L3302	#,
	.loc 1 9399 0
	nop
.L3302:
	.loc 1 9399 0 discriminator 3
	movq	-48(%rbp), %rax	# sv, tmp463
	movl	12(%rax), %eax	# sv_371->sv_flags, D.29179
	orl	$16842752, %eax	#, D.29179
	movl	%eax, %edx	# D.29179, D.29179
	movq	-48(%rbp), %rax	# sv, tmp464
	movl	%edx, 12(%rax)	# D.29179, sv_371->sv_flags
	.loc 1 9400 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# sv, tmp465
	movq	(%rax), %rax	# sv_371->sv_any, D.29183
	movq	$0, 24(%rax)	#, MEM[(struct XPVIV *)_380].xiv_iv
	.loc 1 9401 0 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2265
	movl	72(%rax), %eax	# PL_curcop.2265_381->cop_line, D.29179
	movl	%eax, %ecx	# D.29179, D.29178
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2267
	movq	56(%rax), %rax	# PL_curcop.2267_384->cop_filegv, D.29186
	testq	%rax, %rax	# D.29186
	je	.L3303	#,
	.loc 1 9401 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2268
	movq	56(%rax), %rax	# PL_curcop.2268_386->cop_filegv, D.29186
	movq	(%rax), %rax	# _387->sv_any, D.29187
	movq	56(%rax), %rax	# _388->xgv_gp, D.29188
	movq	32(%rax), %rax	# _389->gp_av, iftmp.2266
	jmp	.L3304	#
.L3303:
	.loc 1 9401 0 discriminator 2
	movl	$0, %eax	#, iftmp.2266
.L3304:
	.loc 1 9401 0 discriminator 3
	movq	-48(%rbp), %rdx	# sv, tmp466
	movl	%ecx, %esi	# D.29178,
	movq	%rax, %rdi	# iftmp.2266,
	call	Perl_av_store	#
.L3300:
.LBE104:
	.loc 1 9403 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_14, D.29176
	cmpb	-117(%rbp), %al	# term, D.29176
	jne	.L3305	#,
	.loc 1 9403 0 is_stmt 0 discriminator 1
	movl	-116(%rbp), %eax	# len, len.2269
	cltq
	movq	%rax, %rdx	# D.29184,
	movl	$PL_tokenbuf, %esi	#,
	movq	%rbx, %rdi	# s,
	call	memcmp	#
	testl	%eax, %eax	# D.29178
	jne	.L3305	#,
.LBB105:
	.loc 1 9404 0 is_stmt 1 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2270
	subq	$1, %rax	#, D.29182
	movq	%rax, %rdx	# D.29182, D.29181
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2271
	movq	(%rax), %rax	# PL_linestr.2271_399->sv_any, D.29183
	movq	(%rax), %rax	# MEM[(struct XPV *)_400].xpv_pv, D.29182
	subq	%rax, %rdx	# D.29181, D.29181
	movq	%rdx, %rax	# D.29181, D.29181
	movq	%rax, -40(%rbp)	# D.29181, off
	.loc 1 9405 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2272
	movq	(%rax), %rax	# PL_linestr.2272_405->sv_any, D.29183
	movq	(%rax), %rdx	# MEM[(struct XPV *)_406].xpv_pv, D.29182
	movq	-40(%rbp), %rax	# off, tmp467
	addq	%rdx, %rax	# D.29182, D.29182
	movb	$32, (%rax)	#, *_408
	.loc 1 9406 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2273
	movq	-104(%rbp), %rcx	# herewas, tmp468
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp468,
	movq	%rax, %rdi	# PL_linestr.2273,
	call	Perl_sv_catsv_flags	#
	.loc 1 9407 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2274
	movq	(%rax), %rax	# PL_linestr.2274_410->sv_any, D.29183
	movq	(%rax), %rdx	# MEM[(struct XPV *)_411].xpv_pv, D.29182
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2275
	movq	(%rax), %rax	# PL_linestr.2275_413->sv_any, D.29183
	movq	8(%rax), %rax	# MEM[(struct XPV *)_414].xpv_cur, D.29184
	addq	%rdx, %rax	# D.29182, PL_bufend.2276
	movq	%rax, PL_bufend(%rip)	# PL_bufend.2276, PL_bufend
	.loc 1 9408 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2277
	movq	(%rax), %rax	# PL_linestr.2277_417->sv_any, D.29183
	movq	(%rax), %rdx	# MEM[(struct XPV *)_418].xpv_pv, D.29182
	movq	-40(%rbp), %rax	# off, tmp469
	leaq	(%rdx,%rax), %rbx	#, s
.LBE105:
	.loc 1 9403 0 discriminator 1
	jmp	.L3291	#
.L3305:
	.loc 1 9411 0
	movq	PL_bufend(%rip), %rbx	# PL_bufend, s
	.loc 1 9412 0
	movq	PL_linestr(%rip), %rcx	# PL_linestr, PL_linestr.2278
	movq	-80(%rbp), %rax	# tmpstr, tmp470
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# PL_linestr.2278,
	movq	%rax, %rdi	# tmp470,
	call	Perl_sv_catsv_flags	#
.L3291:
	.loc 1 9370 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2279
	cmpq	%rax, %rbx	# PL_bufend.2279, s
	jae	.L3306	#,
	.loc 1 9415 0
	addq	$1, %rbx	#, s
.L3284:
	.loc 1 9417 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2280
	movl	72(%rax), %eax	# PL_curcop.2280_424->cop_line, D.29179
	movl	%eax, PL_multi_end(%rip)	# PL_multi_end.2281, PL_multi_end
	.loc 1 9418 0
	movq	-80(%rbp), %rax	# tmpstr, tmp471
	movq	(%rax), %rax	# tmpstr_186->sv_any, D.29183
	movq	8(%rax), %rax	# MEM[(struct XPV *)_427].xpv_cur, D.29184
	leaq	5(%rax), %rdx	#, D.29184
	movq	-80(%rbp), %rax	# tmpstr, tmp472
	movq	(%rax), %rax	# tmpstr_186->sv_any, D.29183
	movq	16(%rax), %rax	# MEM[(struct XPV *)_430].xpv_len, D.29184
	cmpq	%rax, %rdx	# D.29184, D.29184
	jae	.L3307	#,
	.loc 1 9419 0
	movq	-80(%rbp), %rax	# tmpstr, tmp473
	movq	(%rax), %rax	# tmpstr_186->sv_any, D.29183
	movq	-80(%rbp), %rdx	# tmpstr, tmp474
	movq	(%rdx), %rdx	# tmpstr_186->sv_any, D.29183
	movq	8(%rdx), %rdx	# MEM[(struct XPV *)_433].xpv_cur, D.29184
	addq	$1, %rdx	#, D.29184
	movq	%rdx, 16(%rax)	# D.29184, MEM[(struct XPV *)_432].xpv_len
	.loc 1 9420 0
	movq	-80(%rbp), %rax	# tmpstr, tmp475
	movq	(%rax), %r12	# tmpstr_186->sv_any, D.29183
	movq	-80(%rbp), %rax	# tmpstr, tmp476
	movq	(%rax), %rax	# tmpstr_186->sv_any, D.29183
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_437].xpv_len, D.29184
	movq	-80(%rbp), %rax	# tmpstr, tmp477
	movq	(%rax), %rax	# tmpstr_186->sv_any, D.29183
	movq	(%rax), %rax	# MEM[(struct XPV *)_439].xpv_pv, D.29182
	movq	%rdx, %rsi	# D.29184,
	movq	%rax, %rdi	# D.29182,
	call	Perl_safesysrealloc	#
	movq	%rax, (%r12)	# D.29183, MEM[(struct XPV *)_436].xpv_pv
.L3307:
	.loc 1 9422 0
	movq	-104(%rbp), %rax	# herewas, tmp478
	movq	%rax, %rdi	# tmp478,
	call	Perl_sv_free	#
	.loc 1 9423 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2282
	movzbl	37(%rax), %eax	# PL_curcop.2282_442->op_private, D.29177
	movzbl	%al, %eax	# D.29177, D.29178
	andl	$8, %eax	#, D.29178
	testl	%eax, %eax	# D.29178
	jne	.L3308	#,
	.loc 1 9424 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2283
	testq	%rax, %rax	# PL_linestr.2283
	je	.L3309	#,
	.loc 1 9424 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2284
	movl	12(%rax), %eax	# PL_linestr.2284_447->sv_flags, D.29179
	andl	$536870912, %eax	#, D.29179
	testl	%eax, %eax	# D.29179
	je	.L3309	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2285
	movzbl	37(%rax), %eax	# PL_curcop.2285_450->op_private, D.29177
	movzbl	%al, %eax	# D.29177, D.29178
	andl	$8, %eax	#, D.29178
	testl	%eax, %eax	# D.29178
	je	.L3310	#,
.L3309:
	.loc 1 9424 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2286
	andl	$8388608, %eax	#, D.29179
	testl	%eax, %eax	# D.29179
	je	.L3311	#,
.L3310:
	.loc 1 9424 0 discriminator 1
	movq	-80(%rbp), %rax	# tmpstr, tmp479
	movq	(%rax), %rax	# tmpstr_186->sv_any, D.29183
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_456].xpv_cur, D.29184
	movq	-80(%rbp), %rax	# tmpstr, tmp480
	movq	(%rax), %rax	# tmpstr_186->sv_any, D.29183
	movq	(%rax), %rax	# MEM[(struct XPV *)_458].xpv_pv, D.29182
	movq	%rdx, %rsi	# D.29184,
	movq	%rax, %rdi	# D.29182,
	call	Perl_is_utf8_string	#
	testb	%al, %al	# D.29176
	je	.L3311	#,
	.loc 1 9425 0 is_stmt 1
	movq	-80(%rbp), %rax	# tmpstr, tmp481
	movl	12(%rax), %eax	# tmpstr_186->sv_flags, D.29179
	orl	$536870912, %eax	#, D.29179
	movl	%eax, %edx	# D.29179, D.29179
	movq	-80(%rbp), %rax	# tmpstr, tmp482
	movl	%edx, 12(%rax)	# D.29179, tmpstr_186->sv_flags
	jmp	.L3308	#
.L3311:
	.loc 1 9426 0
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.2287
	testq	%rax, %rax	# PL_encoding.2287
	je	.L3308	#,
	.loc 1 9427 0
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.2288
	movq	-80(%rbp), %rax	# tmpstr, tmp483
	movq	%rdx, %rsi	# PL_encoding.2288,
	movq	%rax, %rdi	# tmp483,
	call	Perl_sv_recode_to_utf8	#
.L3308:
	.loc 1 9429 0
	movq	-80(%rbp), %rax	# tmpstr, tmp484
	movq	%rax, PL_lex_stuff(%rip)	# tmp484, PL_lex_stuff
	.loc 1 9430 0
	movl	-112(%rbp), %eax	# op_type, tmp485
	movl	%eax, PL_yylval(%rip)	# tmp485, PL_yylval.ival
	.loc 1 9431 0
	movq	%rbx, %rax	# s, D.29182
	.loc 1 9432 0
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE43:
	.size	S_scan_heredoc, .-S_scan_heredoc
	.section	.rodata
.LC192:
	.string	"Excessively long <> operator"
.LC193:
	.string	"Unterminated <> operator"
.LC194:
	.string	"Glob not terminated"
.LC195:
	.string	"ARGV"
.LC196:
	.string	"readline"
	.text
	.type	S_scan_inputsymbol, @function
S_scan_inputsymbol:
.LFB44:
	.loc 1 9452 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -120(%rbp)	# start, start
	.loc 1 9453 0
	movq	-120(%rbp), %r12	# start, s
	.loc 1 9459 0
	movl	$PL_tokenbuf, %ebx	#, d
	.loc 1 9460 0
	movl	$PL_tokenbuf+256, %r13d	#, e
	.loc 1 9461 0
	movl	$10, %esi	#,
	movq	%r12, %rdi	# s,
	call	strchr	#
	movq	%rax, -88(%rbp)	# tmp165, end
	.loc 1 9462 0
	cmpq	$0, -88(%rbp)	#, end
	jne	.L3314	#,
	.loc 1 9463 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, tmp166
	movq	%rax, -88(%rbp)	# tmp166, end
.L3314:
	.loc 1 9464 0
	leaq	1(%r12), %rdx	#, D.29191
	leaq	-96(%rbp), %rcx	#, tmp167
	movq	-88(%rbp), %rax	# end, tmp168
	movq	%rcx, %r9	# tmp167,
	movl	$62, %r8d	#,
	movq	%rax, %rcx	# tmp168,
	movq	%r13, %rsi	# e,
	movq	%rbx, %rdi	# d,
	call	Perl_delimcpy	#
	movq	%rax, %r12	#, s
	.loc 1 9470 0
	movl	-96(%rbp), %eax	# len, len.2289
	cmpl	$255, %eax	#, len.2290
	jbe	.L3315	#,
	.loc 1 9471 0
	movl	$.LC192, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3315:
	.loc 1 9472 0
	cmpq	-88(%rbp), %r12	# end, s
	jb	.L3316	#,
	.loc 1 9473 0
	movl	$.LC193, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3316:
	.loc 1 9475 0
	addq	$1, %r12	#, s
	.loc 1 9484 0
	movzbl	(%rbx), %eax	# *d_16, D.29192
	cmpb	$36, %al	#, D.29192
	jne	.L3317	#,
	.loc 1 9484 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29191
	movzbl	(%rax), %eax	# *_26, D.29192
	testb	%al, %al	# D.29192
	je	.L3317	#,
	addq	$1, %rbx	#, d
	.loc 1 9487 0 is_stmt 1 discriminator 1
	jmp	.L3318	#
.L3317:
	.loc 1 9487 0 is_stmt 0
	jmp	.L3318	#
.L3330:
	.loc 1 9488 0 is_stmt 1
	addq	$1, %rbx	#, d
.L3318:
	.loc 1 9487 0 discriminator 1
	movzbl	(%rbx), %eax	# *d_2, D.29192
	testb	%al, %al	# D.29192
	je	.L3319	#,
	.loc 1 9487 0 is_stmt 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2291
	movzbl	37(%rax), %eax	# PL_curcop.2291_30->op_private, D.29193
	movzbl	%al, %eax	# D.29193, D.29194
	andl	$8, %eax	#, D.29194
	testl	%eax, %eax	# D.29194
	jne	.L3320	#,
	.loc 1 9487 0 discriminator 4
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2292
	testq	%rax, %rax	# PL_linestr.2292
	je	.L3321	#,
	.loc 1 9487 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2293
	movl	12(%rax), %eax	# PL_linestr.2293_35->sv_flags, D.29195
	andl	$536870912, %eax	#, D.29195
	testl	%eax, %eax	# D.29195
	je	.L3321	#,
	.loc 1 9487 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2294
	movzbl	37(%rax), %eax	# PL_curcop.2294_38->op_private, D.29193
	movzbl	%al, %eax	# D.29193, D.29194
	andl	$8, %eax	#, D.29194
	testl	%eax, %eax	# D.29194
	je	.L3322	#,
.L3321:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2295
	andl	$8388608, %eax	#, D.29195
	testl	%eax, %eax	# D.29195
	je	.L3320	#,
.L3322:
	movzbl	(%rbx), %eax	# MEM[(U8 *)d_2], D.29193
	cmpb	$-65, %al	#, D.29193
	ja	.L3323	#,
.L3320:
	.loc 1 9487 0 discriminator 3
	movzbl	(%rbx), %eax	# *d_2, D.29192
	cmpb	$64, %al	#, D.29192
	jle	.L3324	#,
	.loc 1 9487 0 discriminator 1
	movzbl	(%rbx), %eax	# *d_2, D.29192
	cmpb	$90, %al	#, D.29192
	jle	.L3325	#,
.L3324:
	.loc 1 9487 0 discriminator 2
	movzbl	(%rbx), %eax	# *d_2, D.29192
	cmpb	$96, %al	#, D.29192
	jle	.L3326	#,
	.loc 1 9487 0 discriminator 1
	movzbl	(%rbx), %eax	# *d_2, D.29192
	cmpb	$122, %al	#, D.29192
	jle	.L3325	#,
.L3326:
	.loc 1 9487 0 discriminator 2
	movzbl	(%rbx), %eax	# *d_2, D.29192
	cmpb	$47, %al	#, D.29192
	jle	.L3327	#,
	.loc 1 9487 0 discriminator 1
	movzbl	(%rbx), %eax	# *d_2, D.29192
	cmpb	$57, %al	#, D.29192
	jle	.L3325	#,
.L3327:
	.loc 1 9487 0 discriminator 2
	movzbl	(%rbx), %eax	# *d_2, D.29192
	cmpb	$95, %al	#, D.29192
	jne	.L3328	#,
.L3325:
	.loc 1 9487 0 discriminator 1
	movl	$1, %eax	#, iftmp.2296
	jmp	.L3329	#
.L3328:
	.loc 1 9487 0 discriminator 3
	movl	$0, %eax	#, iftmp.2296
.L3329:
	.loc 1 9487 0 discriminator 4
	andl	$1, %eax	#, D.29196
	testb	%al, %al	# D.29196
	jne	.L3330	#,
	.loc 1 9487 0 discriminator 1
	jmp	.L3331	#
.L3323:
	movq	%rbx, %rdi	# d,
	call	Perl_is_utf8_alnum	#
	testb	%al, %al	# D.29192
	jne	.L3330	#,
.L3331:
	.loc 1 9487 0 discriminator 2
	movzbl	(%rbx), %eax	# *d_2, D.29192
	cmpb	$39, %al	#, D.29192
	je	.L3330	#,
	.loc 1 9487 0 discriminator 1
	movzbl	(%rbx), %eax	# *d_2, D.29192
	cmpb	$58, %al	#, D.29192
	je	.L3330	#,
.L3319:
	.loc 1 9496 0 is_stmt 1
	movq	%rbx, %rdx	# d, d.2297
	movl	$PL_tokenbuf, %eax	#, PL_tokenbuf.2298
	subq	%rax, %rdx	# PL_tokenbuf.2298, D.29197
	movl	-96(%rbp), %eax	# len, len.2299
	cltq
	cmpq	%rax, %rdx	# D.29197, D.29197
	je	.L3332	#,
	.loc 1 9497 0
	movl	$25, PL_yylval(%rip)	#, PL_yylval.ival
	.loc 1 9498 0
	call	S_set_csh	#
	.loc 1 9499 0
	movq	-120(%rbp), %rax	# start, tmp169
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp169,
	call	S_scan_str	#
	movq	%rax, %r12	#, s
	.loc 1 9500 0
	testq	%r12, %r12	# s
	jne	.L3333	#,
	.loc 1 9501 0
	movl	$.LC194, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3333:
	.loc 1 9502 0
	movq	%r12, %rax	# s, D.29191
	jmp	.L3354	#
.L3332:
.LBB106:
	.loc 1 9505 0
	movb	$0, -97(%rbp)	#, readline_overriden
	.loc 1 9506 0
	movq	$0, -80(%rbp)	#, gv_readline
	.loc 1 9509 0
	movl	$PL_tokenbuf, %ebx	#, d
	.loc 1 9512 0
	movl	-96(%rbp), %eax	# len, len.2300
	testl	%eax, %eax	# len.2300
	jne	.L3335	#,
	.loc 1 9513 0
	movl	$5, %edx	#,
	movl	$.LC195, %esi	#,
	movq	%rbx, %rdi	# d,
	call	memcpy	#
.L3335:
	.loc 1 9516 0
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$.LC196, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -80(%rbp)	# tmp170, gv_readline
	cmpq	$0, -80(%rbp)	#, gv_readline
	je	.L3336	#,
	.loc 1 9517 0
	movq	-80(%rbp), %rax	# gv_readline, tmp171
	movq	(%rax), %rax	# gv_readline_70->sv_any, D.29198
	movq	56(%rax), %rax	# _71->xgv_gp, D.29199
	movl	64(%rax), %eax	# _72->gp_cvgen, D.29195
	testl	%eax, %eax	# D.29195
	jne	.L3336	#,
	.loc 1 9517 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# gv_readline, tmp172
	movq	(%rax), %rax	# gv_readline_70->sv_any, D.29198
	movq	56(%rax), %rax	# _74->xgv_gp, D.29199
	movq	56(%rax), %rax	# _75->gp_cv, D.29200
	testq	%rax, %rax	# D.29200
	je	.L3336	#,
	.loc 1 9517 0 discriminator 2
	movq	-80(%rbp), %rax	# gv_readline, tmp173
	movq	(%rax), %rax	# gv_readline_70->sv_any, D.29198
	movzbl	88(%rax), %eax	# _77->xgv_flags, D.29193
	testb	%al, %al	# D.29201
	js	.L3337	#,
.L3336:
	.loc 1 9519 0 is_stmt 1
	movq	PL_globalstash(%rip), %rax	# PL_globalstash, PL_globalstash.2301
	.loc 1 9518 0
	movl	$0, %ecx	#,
	movl	$8, %edx	#,
	movl	$.LC196, %esi	#,
	movq	%rax, %rdi	# PL_globalstash.2301,
	call	Perl_hv_fetch	#
	movq	%rax, -72(%rbp)	# tmp174, gvp
	cmpq	$0, -72(%rbp)	#, gvp
	je	.L3338	#,
	.loc 1 9520 0
	movq	-72(%rbp), %rax	# gvp, tmp175
	movq	(%rax), %rax	# *gvp_81, tmp176
	movq	%rax, -80(%rbp)	# tmp176, gv_readline
	cmpq	$PL_sv_undef, -80(%rbp)	#, gv_readline
	je	.L3338	#,
	.loc 1 9521 0
	movq	-80(%rbp), %rax	# gv_readline, tmp177
	movq	(%rax), %rax	# gv_readline_82->sv_any, D.29198
	movq	56(%rax), %rax	# _83->xgv_gp, D.29199
	movl	64(%rax), %eax	# _84->gp_cvgen, D.29195
	testl	%eax, %eax	# D.29195
	jne	.L3338	#,
	.loc 1 9521 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# gv_readline, tmp178
	movq	(%rax), %rax	# gv_readline_82->sv_any, D.29198
	movq	56(%rax), %rax	# _86->xgv_gp, D.29199
	movq	56(%rax), %rax	# _87->gp_cv, D.29200
	testq	%rax, %rax	# D.29200
	je	.L3338	#,
	.loc 1 9521 0 discriminator 2
	movq	-80(%rbp), %rax	# gv_readline, tmp179
	movq	(%rax), %rax	# gv_readline_82->sv_any, D.29198
	movzbl	88(%rax), %eax	# _89->xgv_flags, D.29193
	testb	%al, %al	# D.29201
	jns	.L3338	#,
.L3337:
	.loc 1 9522 0 is_stmt 1
	movb	$1, -97(%rbp)	#, readline_overriden
.L3338:
	.loc 1 9527 0
	movzbl	(%rbx), %eax	# *d_68, D.29192
	cmpb	$36, %al	#, D.29192
	jne	.L3339	#,
.LBB107:
	.loc 1 9533 0
	movq	%rbx, %rdi	# d,
	call	Perl_pad_findmy	#
	movl	%eax, -92(%rbp)	# D.29202, tmp
	cmpl	$-1, -92(%rbp)	#, tmp
	je	.L3340	#,
	.loc 1 9534 0
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.2302
	movl	-92(%rbp), %ecx	# tmp, tmp180
	movl	$0, %edx	#,
	movl	%ecx, %esi	# tmp180,
	movq	%rax, %rdi	# PL_comppad_name.2302,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_97, D.29204
	movl	12(%rax), %eax	# _98->sv_flags, D.29195
	testl	%eax, %eax	# D.29205
	jns	.L3341	#,
.LBB108:
	.loc 1 9536 0
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.2303
	movl	-92(%rbp), %ecx	# tmp, tmp181
	movl	$0, %edx	#,
	movl	%ecx, %esi	# tmp181,
	movq	%rax, %rdi	# PL_comppad_name.2303,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_102, D.29204
	movq	(%rax), %rax	# _103->sv_any, D.29206
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_104].xgv_stash, D.29207
	movq	(%rax), %rax	# _105->sv_any, D.29208
	movq	80(%rax), %rax	# _106->xhv_name, D.29191
	.loc 1 9535 0
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29191,
	call	Perl_newSVpv	#
	movq	%rax, %rdi	# D.29204,
	call	Perl_sv_2mortal	#
	movq	%rax, -64(%rbp)	# tmp182, sym
	.loc 1 9537 0
	movq	-64(%rbp), %rax	# sym, tmp183
	movl	$2, %ecx	#,
	movl	$2, %edx	#,
	movl	$.LC113, %esi	#,
	movq	%rax, %rdi	# tmp183,
	call	Perl_sv_catpvn_flags	#
	.loc 1 9538 0
	leaq	1(%rbx), %rdx	#, D.29209
	movq	-64(%rbp), %rax	# sym, tmp184
	movq	%rdx, %rsi	# D.29209,
	movq	%rax, %rdi	# tmp184,
	call	Perl_sv_catpv	#
	.loc 1 9539 0
	movq	-64(%rbp), %rax	# sym, tmp185
	movq	(%rax), %rax	# sym_109->sv_any, D.29206
	movq	(%rax), %rbx	# MEM[(struct XPV *)_111].xpv_pv, d
	.loc 1 9540 0
	jmp	.L3342	#
.L3341:
.LBE108:
.LBB109:
	.loc 1 9543 0
	movl	$0, %esi	#,
	movl	$9, %edi	#,
	call	Perl_newOP	#
	movq	%rax, -56(%rbp)	# tmp186, o
	.loc 1 9544 0
	movl	-92(%rbp), %eax	# tmp, tmp187
	movslq	%eax, %rdx	# tmp187, D.29202
	movq	-56(%rbp), %rax	# o, tmp188
	movq	%rdx, 24(%rax)	# D.29202, o_113->op_targ
	.loc 1 9549 0
	cmpb	$0, -97(%rbp)	#, readline_overriden
	je	.L3343	#,
	.loc 1 9546 0
	movq	-80(%rbp), %rax	# gv_readline, tmp189
	movq	%rax, %rdx	# tmp189,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rsi	# D.29210,
	movl	$0, %edi	#,
	call	Perl_newCVREF	#
	movq	%rax, %rdx	#, D.29210
	movq	-56(%rbp), %rax	# o, tmp190
	movq	%rax, %rsi	# tmp190,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	.loc 1 9549 0
	movq	%rax, %rdx	# D.29210,
	movl	$64, %esi	#,
	movl	$166, %edi	#,
	call	Perl_newUNOP	#
	jmp	.L3344	#
.L3343:
	.loc 1 9549 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# o, tmp191
	movq	%rax, %rdx	# tmp191,
	movl	$0, %esi	#,
	movl	$26, %edi	#,
	call	Perl_newUNOP	#
.L3344:
	.loc 1 9545 0 is_stmt 1 discriminator 1
	movq	%rax, PL_lex_op(%rip)	# iftmp.2304, PL_lex_op
.LBE109:
	jmp	.L3345	#
.L3340:
.LBB110:
	.loc 1 9554 0
	addq	$1, %rbx	#, d
.L3342:
	.loc 1 9558 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.2306
	.loc 1 9556 0
	testl	%eax, %eax	# PL_in_eval.2306
	je	.L3346	#,
	.loc 1 9556 0 is_stmt 0 discriminator 1
	movl	$10, %eax	#, iftmp.2305
	jmp	.L3347	#
.L3346:
	.loc 1 9556 0 discriminator 2
	movl	$2, %eax	#, iftmp.2305
.L3347:
	.loc 1 9556 0 discriminator 3
	movl	$4, %edx	#,
	movl	%eax, %esi	# iftmp.2305,
	movq	%rbx, %rdi	# d,
	call	Perl_gv_fetchpv	#
	movq	%rax, -48(%rbp)	# tmp192, gv
	.loc 1 9566 0 is_stmt 1 discriminator 3
	cmpb	$0, -97(%rbp)	#, readline_overriden
	je	.L3348	#,
	.loc 1 9562 0
	movq	-80(%rbp), %rax	# gv_readline, tmp193
	movq	%rax, %rdx	# tmp193,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rsi	# D.29210,
	movl	$0, %edi	#,
	call	Perl_newCVREF	#
	movq	%rax, %rbx	#, D.29210
	movq	-48(%rbp), %rax	# gv, tmp194
	movq	%rax, %rdx	# tmp194,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdx	# D.29210,
	movl	$0, %esi	#,
	movl	$15, %edi	#,
	call	Perl_newUNOP	#
	movq	%rbx, %rdx	# D.29210,
	movq	%rax, %rsi	# D.29210,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	.loc 1 9566 0
	movq	%rax, %rdx	# D.29210,
	movl	$64, %esi	#,
	movl	$166, %edi	#,
	call	Perl_newUNOP	#
	jmp	.L3349	#
.L3348:
	.loc 1 9566 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# gv, tmp195
	movq	%rax, %rdx	# tmp195,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdx	# D.29210,
	movl	$0, %esi	#,
	movl	$15, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, %rdx	# D.29210,
	movl	$0, %esi	#,
	movl	$26, %edi	#,
	call	Perl_newUNOP	#
.L3349:
	.loc 1 9561 0 is_stmt 1
	movq	%rax, PL_lex_op(%rip)	# iftmp.2307, PL_lex_op
.L3345:
.LBE110:
	.loc 1 9570 0
	cmpb	$0, -97(%rbp)	#, readline_overriden
	jne	.L3350	#,
	.loc 1 9571 0
	movq	PL_lex_op(%rip), %rax	# PL_lex_op, PL_lex_op.2308
	movq	PL_lex_op(%rip), %rdx	# PL_lex_op, PL_lex_op.2309
	movzbl	36(%rdx), %edx	# PL_lex_op.2309_135->op_flags, D.29193
	orl	$-128, %edx	#, D.29193
	movb	%dl, 36(%rax)	# D.29193, PL_lex_op.2308_134->op_flags
.L3350:
	.loc 1 9573 0
	movl	$0, PL_yylval(%rip)	#, PL_yylval.ival
.LBE107:
	jmp	.L3351	#
.L3339:
.LBB111:
	.loc 1 9579 0
	movl	$15, %edx	#,
	movl	$1, %esi	#,
	movq	%rbx, %rdi	# d,
	call	Perl_gv_fetchpv	#
	movq	%rax, -40(%rbp)	# tmp196, gv
	.loc 1 9585 0
	cmpb	$0, -97(%rbp)	#, readline_overriden
	je	.L3352	#,
	.loc 1 9581 0
	movq	-80(%rbp), %rax	# gv_readline, tmp197
	movq	%rax, %rdx	# tmp197,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rsi	# D.29210,
	movl	$0, %edi	#,
	call	Perl_newCVREF	#
	movq	%rax, %rbx	#, D.29210
	movq	-40(%rbp), %rax	# gv, tmp198
	movq	%rax, %rdx	# tmp198,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rbx, %rdx	# D.29210,
	movq	%rax, %rsi	# D.29210,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	.loc 1 9585 0
	movq	%rax, %rdx	# D.29210,
	movl	$64, %esi	#,
	movl	$166, %edi	#,
	call	Perl_newUNOP	#
	jmp	.L3353	#
.L3352:
	.loc 1 9585 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# gv, tmp199
	movq	%rax, %rdx	# tmp199,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdx	# D.29210,
	movl	$0, %esi	#,
	movl	$26, %edi	#,
	call	Perl_newUNOP	#
.L3353:
	.loc 1 9580 0 is_stmt 1
	movq	%rax, PL_lex_op(%rip)	# iftmp.2310, PL_lex_op
	.loc 1 9586 0
	movl	$0, PL_yylval(%rip)	#, PL_yylval.ival
.L3351:
.LBE111:
.LBE106:
	.loc 1 9590 0
	movq	%r12, %rax	# s, D.29191
.L3354:
	.loc 1 9591 0
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE44:
	.size	S_scan_inputsymbol, .-S_scan_inputsymbol
	.type	S_scan_str, @function
S_scan_str:
.LFB45:
	.loc 1 9639 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$152, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -168(%rbp)	# start, start
	movl	%esi, -172(%rbp)	# keep_quoted, keep_quoted
	movl	%edx, -176(%rbp)	# keep_delims, keep_delims
	.loc 1 9639 0
	movq	%fs:40, %rax	#, tmp505
	movq	%rax, -40(%rbp)	# tmp505, D.29229
	xorl	%eax, %eax	# tmp505
	.loc 1 9642 0
	movq	-168(%rbp), %rbx	# start, s
	.loc 1 9645 0
	movl	$1, -152(%rbp)	#, brackets
	.loc 1 9646 0
	movb	$0, -159(%rbp)	#, has_utf8
	.loc 1 9650 0
	movq	$0, -136(%rbp)	#, last
	.loc 1 9653 0
	movzbl	(%rbx), %eax	# *s_62, D.29217
	cmpb	$32, %al	#, D.29217
	je	.L3356	#,
	.loc 1 9653 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_62, D.29217
	cmpb	$9, %al	#, D.29217
	je	.L3356	#,
	movzbl	(%rbx), %eax	# *s_62, D.29217
	cmpb	$10, %al	#, D.29217
	je	.L3356	#,
	movzbl	(%rbx), %eax	# *s_62, D.29217
	cmpb	$13, %al	#, D.29217
	je	.L3356	#,
	movzbl	(%rbx), %eax	# *s_62, D.29217
	cmpb	$12, %al	#, D.29217
	jne	.L3357	#,
.L3356:
	.loc 1 9654 0 is_stmt 1
	movq	%rbx, %rdi	# s,
	call	S_skipspace	#
	movq	%rax, %rbx	#, s
.L3357:
	.loc 1 9657 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2312
	movl	72(%rax), %edx	# PL_curcop.2312_72->cop_line, D.29218
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.2313
	cmpl	%eax, %edx	# PL_copline.2313, D.29218
	jae	.L3358	#,
	.loc 1 9657 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2314
	movl	72(%rax), %eax	# PL_curcop.2314_75->cop_line, iftmp.2311
	jmp	.L3359	#
.L3358:
	.loc 1 9657 0 discriminator 2
	movl	PL_copline(%rip), %eax	# PL_copline, iftmp.2311
.L3359:
	.loc 1 9657 0 discriminator 3
	movl	%eax, PL_copline(%rip)	# iftmp.2311, PL_copline
	.loc 1 9660 0 is_stmt 1 discriminator 3
	movzbl	(%rbx), %r13d	# *s_1, term
	.loc 1 9661 0 discriminator 3
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2315
	testq	%rax, %rax	# PL_linestr.2315
	je	.L3360	#,
	.loc 1 9661 0 is_stmt 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2316
	movl	12(%rax), %eax	# PL_linestr.2316_80->sv_flags, D.29218
	andl	$536870912, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	je	.L3360	#,
	.loc 1 9661 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2317
	movzbl	37(%rax), %eax	# PL_curcop.2317_83->op_private, D.29219
	movzbl	%al, %eax	# D.29219, D.29220
	andl	$8, %eax	#, D.29220
	testl	%eax, %eax	# D.29220
	je	.L3361	#,
.L3360:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2318
	andl	$8388608, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	jne	.L3361	#,
	.loc 1 9662 0 is_stmt 1
	movl	%r13d, %eax	# term, term.2319
	movb	%al, -64(%rbp)	# term.2319, termstr
	movzbl	-64(%rbp), %eax	# termstr, D.29219
	movzbl	%al, %eax	# D.29219, tmp410
	movl	%eax, -148(%rbp)	# tmp410, termcode
	.loc 1 9663 0
	movq	$1, -144(%rbp)	#, termlen
	jmp	.L3362	#
.L3361:
	.loc 1 9666 0
	leaq	-144(%rbp), %rax	#, tmp411
	movq	%rax, %rsi	# tmp411,
	movq	%rbx, %rdi	# s,
	call	Perl_utf8_to_uvchr	#
	movl	%eax, -148(%rbp)	# D.29221, termcode
	.loc 1 9667 0
	movq	-144(%rbp), %rdx	# termlen, termlen.2320
	leaq	-64(%rbp), %rax	#, tmp412
	movq	%rbx, %rsi	# s,
	movq	%rax, %rdi	# tmp412,
	call	memcpy	#
	.loc 1 9668 0
	testb	%r13b, %r13b	# term
	jns	.L3362	#,
	.loc 1 9669 0
	movb	$1, -159(%rbp)	#, has_utf8
.L3362:
	.loc 1 9673 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2321
	movl	72(%rax), %eax	# PL_curcop.2321_96->cop_line, D.29218
	movl	%eax, PL_multi_start(%rip)	# PL_multi_start.2322, PL_multi_start
	.loc 1 9674 0
	movsbl	%r13b, %eax	# term, PL_multi_open.2323
	movl	%eax, PL_multi_open(%rip)	# PL_multi_open.2323, PL_multi_open
	.loc 1 9677 0
	testb	%r13b, %r13b	# term
	je	.L3363	#,
	.loc 1 9677 0 is_stmt 0 discriminator 1
	movsbl	%r13b, %eax	# term, D.29220
	movl	%eax, %esi	# D.29220,
	movl	$.LC83, %edi	#,
	call	strchr	#
	movq	%rax, -104(%rbp)	# tmp413, tmps
	cmpq	$0, -104(%rbp)	#, tmps
	je	.L3363	#,
	.loc 1 9678 0 is_stmt 1
	movq	-104(%rbp), %rax	# tmps, tmp414
	movzbl	5(%rax), %r13d	# MEM[(char *)tmps_101 + 5B], term
	movl	%r13d, %eax	# term, term.2324
	movb	%al, -64(%rbp)	# term.2324, termstr
	movzbl	-64(%rbp), %eax	# termstr, D.29219
	movzbl	%al, %eax	# D.29219, tmp415
	movl	%eax, -148(%rbp)	# tmp415, termcode
.L3363:
	.loc 1 9680 0
	movsbl	%r13b, %eax	# term, PL_multi_close.2325
	movl	%eax, PL_multi_close(%rip)	# PL_multi_close.2325, PL_multi_close
	.loc 1 9684 0
	movl	$79, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -96(%rbp)	# tmp416, sv
	.loc 1 9685 0
	movq	-96(%rbp), %rax	# sv, tmp417
	movl	$5, %esi	#,
	movq	%rax, %rdi	# tmp417,
	call	Perl_sv_upgrade	#
	.loc 1 9686 0
	movq	-96(%rbp), %rax	# sv, tmp418
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movl	-148(%rbp), %edx	# termcode, tmp419
	movslq	%edx, %rdx	# tmp419, D.29223
	movq	%rdx, 24(%rax)	# D.29223, MEM[(struct XPVIV *)_108].xiv_iv
	.loc 1 9687 0
	movq	-96(%rbp), %rax	# sv, tmp420
	movl	12(%rax), %eax	# sv_107->sv_flags, D.29218
	andl	$1223753727, %eax	#, D.29218
	movl	%eax, %edx	# D.29218, D.29218
	movq	-96(%rbp), %rax	# sv, tmp421
	movl	%edx, 12(%rax)	# D.29218, sv_107->sv_flags
	movq	-96(%rbp), %rax	# sv, tmp422
	movl	12(%rax), %eax	# sv_107->sv_flags, D.29218
	orl	$67371008, %eax	#, D.29218
	movl	%eax, %edx	# D.29218, D.29218
	movq	-96(%rbp), %rax	# sv, tmp423
	movl	%edx, 12(%rax)	# D.29218, sv_107->sv_flags
	.loc 1 9690 0
	cmpl	$0, -176(%rbp)	#, keep_delims
	je	.L3364	#,
	.loc 1 9691 0
	movq	-144(%rbp), %rdx	# termlen, termlen.2326
	movq	-96(%rbp), %rax	# sv, tmp424
	movl	$2, %ecx	#,
	movq	%rbx, %rsi	# s,
	movq	%rax, %rdi	# tmp424,
	call	Perl_sv_catpvn_flags	#
.L3364:
	.loc 1 9692 0
	movq	-144(%rbp), %rax	# termlen, termlen.2327
	addq	%rax, %rbx	# termlen.2327, s
.L3433:
	.loc 1 9694 0
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.2328
	testq	%rax, %rax	# PL_encoding.2328
	je	.L3365	#,
	.loc 1 9694 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2329
	testq	%rax, %rax	# PL_linestr.2329
	je	.L3366	#,
	.loc 1 9694 0 discriminator 2
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2330
	movl	12(%rax), %eax	# PL_linestr.2330_120->sv_flags, D.29218
	andl	$536870912, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	je	.L3366	#,
	.loc 1 9694 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2331
	movzbl	37(%rax), %eax	# PL_curcop.2331_123->op_private, D.29219
	movzbl	%al, %eax	# D.29219, D.29220
	andl	$8, %eax	#, D.29220
	testl	%eax, %eax	# D.29220
	je	.L3365	#,
.L3366:
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2332
	andl	$8388608, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	jne	.L3365	#,
.LBB112:
	.loc 1 9695 0 is_stmt 1
	movb	$1, -158(%rbp)	#, cont
	.loc 1 9697 0
	jmp	.L3367	#
.L3388:
.LBB113:
	.loc 1 9698 0
	movq	%rbx, %rdx	# s, s.2333
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2334
	movq	(%rax), %rax	# PL_linestr.2334_131->sv_any, D.29222
	movq	(%rax), %rax	# MEM[(struct XPV *)_132].xpv_pv, D.29216
	subq	%rax, %rdx	# D.29223, D.29223
	movq	%rdx, %rax	# D.29223, D.29223
	movl	%eax, -156(%rbp)	# offset.2335, offset
	.loc 1 9699 0
	movq	-144(%rbp), %rax	# termlen, termlen.2336
	movl	%eax, %r8d	# termlen.2336, D.29220
	movq	PL_linestr(%rip), %rdx	# PL_linestr, PL_linestr.2337
	movq	PL_encoding(%rip), %rsi	# PL_encoding, PL_encoding.2338
	leaq	-64(%rbp), %rdi	#, tmp425
	leaq	-156(%rbp), %rcx	#, tmp426
	movq	-96(%rbp), %rax	# sv, tmp427
	movl	%r8d, %r9d	# D.29220,
	movq	%rdi, %r8	# tmp425,
	movq	%rax, %rdi	# tmp427,
	call	Perl_sv_cat_decode	#
	movb	%al, -157(%rbp)	# tmp428, found
	.loc 1 9701 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2339
	movq	(%rax), %rax	# PL_linestr.2339_142->sv_any, D.29222
	movq	(%rax), %rdx	# MEM[(struct XPV *)_143].xpv_pv, D.29216
	movl	-156(%rbp), %eax	# offset, offset.2340
	cltq
	addq	%rdx, %rax	# D.29216, tmp429
	movq	%rax, -88(%rbp)	# tmp429, ns
	.loc 1 9702 0
	movq	-96(%rbp), %rax	# sv, tmp430
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	(%rax), %rdx	# MEM[(struct XPV *)_148].xpv_pv, D.29216
	movq	-96(%rbp), %rax	# sv, tmp431
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	8(%rax), %rax	# MEM[(struct XPV *)_150].xpv_cur, D.29221
	subq	$1, %rax	#, D.29224
	addq	%rdx, %rax	# D.29216, tmp432
	movq	%rax, -80(%rbp)	# tmp432, svlast
	.loc 1 9704 0
	jmp	.L3368	#
.L3370:
	.loc 1 9705 0
	movzbl	(%rbx), %eax	# *s_3, D.29217
	cmpb	$10, %al	#, D.29217
	jne	.L3369	#,
	.loc 1 9705 0 is_stmt 0 discriminator 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2341
	testq	%rax, %rax	# PL_rsfp.2341
	jne	.L3369	#,
	.loc 1 9706 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2342
	movl	72(%rax), %edx	# PL_curcop.2342_156->cop_line, D.29218
	addl	$1, %edx	#, D.29218
	movl	%edx, 72(%rax)	# D.29218, PL_curcop.2342_156->cop_line
.L3369:
	.loc 1 9704 0
	addq	$1, %rbx	#, s
.L3368:
	.loc 1 9704 0 is_stmt 0 discriminator 1
	cmpq	-88(%rbp), %rbx	# ns, s
	jb	.L3370	#,
	.loc 1 9708 0 is_stmt 1
	cmpb	$0, -157(%rbp)	#, found
	je	.L3372	#,
	.loc 1 9712 0
	movq	-96(%rbp), %rax	# sv, tmp433
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	8(%rax), %rax	# MEM[(struct XPV *)_160].xpv_cur, D.29221
	cmpq	$1, %rax	#, D.29221
	jbe	.L3373	#,
	.loc 1 9712 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# svlast, tmp434
	subq	$1, %rax	#, D.29216
	movzbl	(%rax), %eax	# *_162, D.29217
	cmpb	$92, %al	#, D.29217
	jne	.L3373	#,
.LBB114:
	.loc 1 9714 0 is_stmt 1
	movq	-80(%rbp), %rax	# svlast, tmp438
	subq	$2, %rax	#, tmp437
	movq	%rax, -128(%rbp)	# tmp437, t
	jmp	.L3374	#
.L3376:
	.loc 1 9715 0
	subq	$1, -128(%rbp)	#, t
.L3374:
	.loc 1 9714 0 discriminator 1
	movq	-96(%rbp), %rax	# sv, tmp439
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	(%rax), %rax	# MEM[(struct XPV *)_165].xpv_pv, D.29216
	cmpq	-128(%rbp), %rax	# t, D.29216
	ja	.L3375	#,
	.loc 1 9714 0 is_stmt 0 discriminator 2
	movq	-128(%rbp), %rax	# t, tmp440
	movzbl	(%rax), %eax	# *t_50, D.29217
	cmpb	$92, %al	#, D.29217
	je	.L3376	#,
.L3375:
	.loc 1 9716 0 is_stmt 1
	movq	-80(%rbp), %rax	# svlast, tmp441
	subq	$1, %rax	#, D.29216
	movq	%rax, %rdx	# D.29216, D.29223
	movq	-128(%rbp), %rax	# t, t.2343
	subq	%rax, %rdx	# t.2343, D.29223
	movq	%rdx, %rax	# D.29223, D.29223
	andl	$1, %eax	#, D.29225
	testq	%rax, %rax	# D.29225
	je	.L3373	#,
	.loc 1 9717 0
	cmpl	$0, -172(%rbp)	#, keep_quoted
	jne	.L3367	#,
	.loc 1 9718 0
	movq	-80(%rbp), %rax	# svlast, tmp442
	subq	$1, %rax	#, D.29216
	movb	%r13b, (%rax)	# term, *_176
	.loc 1 9719 0
	movq	-80(%rbp), %rax	# svlast, tmp443
	movb	$0, (%rax)	#, *svlast_153
	.loc 1 9720 0
	movq	-96(%rbp), %rax	# sv, tmp444
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	-96(%rbp), %rdx	# sv, tmp445
	movq	(%rdx), %rdx	# sv_107->sv_any, D.29222
	movq	8(%rdx), %rdx	# MEM[(struct XPV *)_178].xpv_cur, D.29221
	subq	$1, %rdx	#, D.29221
	movq	%rdx, 8(%rax)	# D.29221, MEM[(struct XPV *)_177].xpv_cur
	jmp	.L3367	#
.L3373:
.LBE114:
	.loc 1 9725 0
	movl	PL_multi_open(%rip), %edx	# PL_multi_open, PL_multi_open.2344
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.2345
	cmpl	%eax, %edx	# PL_multi_close.2345, PL_multi_open.2344
	jne	.L3378	#,
	.loc 1 9726 0
	movb	$0, -158(%rbp)	#, cont
	jmp	.L3367	#
.L3378:
.LBB115:
	.loc 1 9730 0
	cmpq	$0, -136(%rbp)	#, last
	jne	.L3380	#,
	.loc 1 9731 0
	movq	-96(%rbp), %rax	# sv, tmp446
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	(%rax), %rax	# MEM[(struct XPV *)_184].xpv_pv, tmp447
	movq	%rax, -136(%rbp)	# tmp447, last
.L3380:
	.loc 1 9732 0
	movq	-136(%rbp), %rax	# last, tmp448
	movq	%rax, -120(%rbp)	# tmp448, t
	movq	-120(%rbp), %rax	# t, tmp449
	movq	%rax, -112(%rbp)	# tmp449, w
	jmp	.L3381	#
.L3386:
	.loc 1 9735 0
	movq	-120(%rbp), %rax	# t, tmp450
	movzbl	(%rax), %eax	# *t_53, D.29217
	cmpb	$92, %al	#, D.29217
	jne	.L3382	#,
	.loc 1 9736 0
	cmpl	$0, -172(%rbp)	#, keep_quoted
	jne	.L3383	#,
	.loc 1 9736 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# t, tmp451
	addq	$1, %rax	#, D.29216
	movzbl	(%rax), %eax	# *_189, D.29217
	movsbl	%al, %edx	# D.29217, D.29220
	movl	PL_multi_open(%rip), %eax	# PL_multi_open, PL_multi_open.2346
	cmpl	%eax, %edx	# PL_multi_open.2346, D.29220
	jne	.L3383	#,
	.loc 1 9737 0 is_stmt 1
	addq	$1, -120(%rbp)	#, t
	jmp	.L3385	#
.L3383:
	.loc 1 9739 0
	movq	-112(%rbp), %rax	# w, w.2347
	leaq	1(%rax), %rdx	#, tmp452
	movq	%rdx, -112(%rbp)	# tmp452, w
	movq	-120(%rbp), %rdx	# t, t.2348
	leaq	1(%rdx), %rcx	#, tmp453
	movq	%rcx, -120(%rbp)	# tmp453, t
	movzbl	(%rdx), %edx	# *t.2348_196, D.29217
	movb	%dl, (%rax)	# D.29217, *w.2347_194
	jmp	.L3385	#
.L3382:
	.loc 1 9741 0
	movq	-120(%rbp), %rax	# t, tmp454
	movzbl	(%rax), %eax	# *t_53, D.29217
	movsbl	%al, %edx	# D.29217, D.29220
	movl	PL_multi_open(%rip), %eax	# PL_multi_open, PL_multi_open.2349
	cmpl	%eax, %edx	# PL_multi_open.2349, D.29220
	jne	.L3385	#,
	.loc 1 9742 0
	addl	$1, -152(%rbp)	#, brackets
.L3385:
	.loc 1 9744 0
	movq	-120(%rbp), %rax	# t, tmp455
	movzbl	(%rax), %edx	# *t_52, D.29217
	movq	-112(%rbp), %rax	# w, tmp456
	movb	%dl, (%rax)	# D.29217, *w_55
	.loc 1 9732 0
	addq	$1, -112(%rbp)	#, w
	addq	$1, -120(%rbp)	#, t
.L3381:
	.loc 1 9732 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# t, tmp457
	cmpq	-80(%rbp), %rax	# svlast, tmp457
	jb	.L3386	#,
	.loc 1 9746 0 is_stmt 1
	movq	-112(%rbp), %rax	# w, tmp458
	cmpq	-120(%rbp), %rax	# t, tmp458
	jae	.L3387	#,
	.loc 1 9747 0
	movq	-112(%rbp), %rax	# w, w.2350
	leaq	1(%rax), %rdx	#, tmp459
	movq	%rdx, -112(%rbp)	# tmp459, w
	movb	%r13b, (%rax)	# term, *w.2350_206
	.loc 1 9748 0
	movq	-112(%rbp), %rax	# w, tmp460
	movb	$0, (%rax)	#, *w_207
	.loc 1 9749 0
	movq	-96(%rbp), %rax	# sv, tmp461
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	-112(%rbp), %rcx	# w, w.2351
	movq	-96(%rbp), %rdx	# sv, tmp462
	movq	(%rdx), %rdx	# sv_107->sv_any, D.29222
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_210].xpv_pv, D.29216
	subq	%rdx, %rcx	# D.29223, D.29223
	movq	%rcx, %rdx	# D.29223, D.29223
	movq	%rdx, 8(%rax)	# D.29221, MEM[(struct XPV *)_208].xpv_cur
.L3387:
	.loc 1 9751 0
	movq	-112(%rbp), %rax	# w, tmp463
	movq	%rax, -136(%rbp)	# tmp463, last
	.loc 1 9752 0
	subl	$1, -152(%rbp)	#, brackets
	cmpl	$0, -152(%rbp)	#, brackets
	jg	.L3379	#,
	.loc 1 9753 0
	movb	$0, -158(%rbp)	#, cont
.LBE115:
	jmp	.L3367	#
.L3379:
.L3367:
.LBE113:
	.loc 1 9697 0 discriminator 1
	cmpb	$0, -158(%rbp)	#, cont
	jne	.L3388	#,
	.loc 1 9757 0
	cmpl	$0, -176(%rbp)	#, keep_delims
	jne	.L3389	#,
	.loc 1 9758 0
	movq	-96(%rbp), %rax	# sv, tmp464
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	-96(%rbp), %rdx	# sv, tmp465
	movq	(%rdx), %rdx	# sv_107->sv_any, D.29222
	movq	8(%rdx), %rdx	# MEM[(struct XPV *)_219].xpv_cur, D.29221
	subq	$1, %rdx	#, D.29221
	movq	%rdx, 8(%rax)	# D.29221, MEM[(struct XPV *)_218].xpv_cur
	.loc 1 9759 0
	movq	-96(%rbp), %rax	# sv, tmp466
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	(%rax), %rdx	# MEM[(struct XPV *)_222].xpv_pv, D.29216
	movq	-96(%rbp), %rax	# sv, tmp467
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	8(%rax), %rax	# MEM[(struct XPV *)_224].xpv_cur, D.29221
	addq	%rdx, %rax	# D.29216, D.29216
	movb	$0, (%rax)	#, *_226
	.loc 1 9761 0
	jmp	.L3390	#
.L3389:
	jmp	.L3390	#
.L3365:
.LBE112:
	.loc 1 9765 0
	movq	-96(%rbp), %rax	# sv, tmp468
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_227].xpv_len, D.29221
	movq	-96(%rbp), %rax	# sv, tmp469
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_229].xpv_cur, D.29221
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2353
	movq	%rax, %rsi	# PL_bufend.2353, PL_bufend.2354
	movq	%rbx, %rax	# s, s.2355
	subq	%rax, %rsi	# s.2355, D.29223
	movq	%rsi, %rax	# D.29223, D.29223
	addq	%rcx, %rax	# D.29221, D.29221
	addq	$1, %rax	#, D.29221
	cmpq	%rax, %rdx	# D.29221, D.29221
	jae	.L3392	#,
	.loc 1 9765 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# sv, tmp470
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_238].xpv_cur, D.29221
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2356
	movq	%rax, %rcx	# PL_bufend.2356, PL_bufend.2357
	movq	%rbx, %rax	# s, s.2358
	subq	%rax, %rcx	# s.2358, D.29223
	movq	%rcx, %rax	# D.29223, D.29223
	addq	%rdx, %rax	# D.29221, D.29221
	leaq	1(%rax), %rdx	#, D.29221
	movq	-96(%rbp), %rax	# sv, tmp471
	movq	%rdx, %rsi	# D.29221,
	movq	%rax, %rdi	# tmp471,
	call	Perl_sv_grow	#
.L3392:
	.loc 1 9767 0 is_stmt 1
	movq	-96(%rbp), %rax	# sv, tmp473
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	(%rax), %rdx	# MEM[(struct XPV *)_250].xpv_pv, D.29216
	movq	-96(%rbp), %rax	# sv, tmp474
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	8(%rax), %rax	# MEM[(struct XPV *)_252].xpv_cur, D.29221
	leaq	(%rdx,%rax), %r12	#, to
	.loc 1 9770 0
	movl	PL_multi_open(%rip), %edx	# PL_multi_open, PL_multi_open.2359
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.2360
	cmpl	%eax, %edx	# PL_multi_close.2360, PL_multi_open.2359
	jne	.L3393	#,
	.loc 1 9771 0
	jmp	.L3394	#
.L3405:
	.loc 1 9773 0
	movzbl	(%rbx), %eax	# *s_7, D.29217
	cmpb	$10, %al	#, D.29217
	jne	.L3395	#,
	.loc 1 9773 0 is_stmt 0 discriminator 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2361
	testq	%rax, %rax	# PL_rsfp.2361
	jne	.L3395	#,
	.loc 1 9774 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2362
	movl	72(%rax), %edx	# PL_curcop.2362_260->cop_line, D.29218
	addl	$1, %edx	#, D.29218
	movl	%edx, 72(%rax)	# D.29218, PL_curcop.2362_260->cop_line
.L3395:
	.loc 1 9776 0
	movzbl	(%rbx), %eax	# *s_7, D.29217
	cmpb	$92, %al	#, D.29217
	jne	.L3396	#,
	.loc 1 9776 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rdx	#, D.29216
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2363
	cmpq	%rax, %rdx	# PL_bufend.2363, D.29216
	jae	.L3396	#,
	cmpb	$92, %r13b	#, term
	je	.L3396	#,
	.loc 1 9777 0 is_stmt 1
	cmpl	$0, -172(%rbp)	#, keep_quoted
	jne	.L3397	#,
	.loc 1 9777 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29216
	movzbl	(%rax), %eax	# *_266, D.29217
	cmpb	%r13b, %al	# term, D.29217
	jne	.L3397	#,
	.loc 1 9778 0 is_stmt 1
	addq	$1, %rbx	#, s
	.loc 1 9777 0
	jmp	.L3399	#
.L3397:
	.loc 1 9781 0
	movq	%r12, %rax	# to, to.2364
	leaq	1(%rax), %r12	#, to
	movq	%rbx, %rdx	# s, s.2365
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2365_271, D.29217
	movb	%dl, (%rax)	# D.29217, *to.2364_269
	.loc 1 9777 0
	jmp	.L3399	#
.L3396:
	.loc 1 9785 0
	movzbl	(%rbx), %eax	# *s_7, D.29217
	cmpb	%r13b, %al	# term, D.29217
	jne	.L3400	#,
	.loc 1 9786 0
	movq	-144(%rbp), %rax	# termlen, termlen.2366
	cmpq	$1, %rax	#, termlen.2366
	jne	.L3401	#,
	.loc 1 9787 0
	jmp	.L3402	#
.L3401:
	.loc 1 9788 0
	movq	-144(%rbp), %rax	# termlen, termlen.2367
	leaq	(%rbx,%rax), %rdx	#, D.29216
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2368
	cmpq	%rax, %rdx	# PL_bufend.2368, D.29216
	ja	.L3399	#,
	.loc 1 9788 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rdx	# termlen, termlen.2369
	leaq	-64(%rbp), %rax	#, tmp475
	movq	%rax, %rsi	# tmp475,
	movq	%rbx, %rdi	# s,
	call	memcmp	#
	testl	%eax, %eax	# D.29220
	jne	.L3399	#,
	.loc 1 9789 0 is_stmt 1
	jmp	.L3402	#
.L3400:
	.loc 1 9791 0
	cmpb	$0, -159(%rbp)	#, has_utf8
	jne	.L3399	#,
	.loc 1 9791 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_7, D.29217
	testb	%al, %al	# D.29217
	jns	.L3399	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2370
	testq	%rax, %rax	# PL_linestr.2370
	je	.L3403	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2371
	movl	12(%rax), %eax	# PL_linestr.2371_283->sv_flags, D.29218
	andl	$536870912, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	je	.L3403	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2372
	movzbl	37(%rax), %eax	# PL_curcop.2372_286->op_private, D.29219
	movzbl	%al, %eax	# D.29219, D.29220
	andl	$8, %eax	#, D.29220
	testl	%eax, %eax	# D.29220
	je	.L3404	#,
.L3403:
	.loc 1 9791 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2373
	andl	$8388608, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	je	.L3399	#,
.L3404:
	.loc 1 9792 0 is_stmt 1
	movb	$1, -159(%rbp)	#, has_utf8
.L3399:
	.loc 1 9793 0
	movzbl	(%rbx), %eax	# *s_6, D.29217
	movb	%al, (%r12)	# D.29217, *to_16
	.loc 1 9771 0
	addq	$1, %rbx	#, s
	addq	$1, %r12	#, to
.L3394:
	.loc 1 9771 0 is_stmt 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2374
	cmpq	%rax, %rbx	# PL_bufend.2374, s
	jb	.L3405	#,
	jmp	.L3406	#
.L3402:
	jmp	.L3406	#
.L3393:
	.loc 1 9803 0 is_stmt 1
	jmp	.L3407	#
.L3418:
	.loc 1 9805 0
	movzbl	(%rbx), %eax	# *s_10, D.29217
	cmpb	$10, %al	#, D.29217
	jne	.L3408	#,
	.loc 1 9805 0 is_stmt 0 discriminator 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2375
	testq	%rax, %rax	# PL_rsfp.2375
	jne	.L3408	#,
	.loc 1 9806 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2376
	movl	72(%rax), %edx	# PL_curcop.2376_299->cop_line, D.29218
	addl	$1, %edx	#, D.29218
	movl	%edx, 72(%rax)	# D.29218, PL_curcop.2376_299->cop_line
.L3408:
	.loc 1 9808 0
	movzbl	(%rbx), %eax	# *s_10, D.29217
	cmpb	$92, %al	#, D.29217
	jne	.L3409	#,
	.loc 1 9808 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rdx	#, D.29216
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2377
	cmpq	%rax, %rdx	# PL_bufend.2377, D.29216
	jae	.L3409	#,
	.loc 1 9809 0 is_stmt 1
	cmpl	$0, -172(%rbp)	#, keep_quoted
	jne	.L3410	#,
	.loc 1 9810 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29216
	movzbl	(%rax), %eax	# *_305, D.29217
	movsbl	%al, %edx	# D.29217, D.29220
	movl	PL_multi_open(%rip), %eax	# PL_multi_open, PL_multi_open.2378
	.loc 1 9809 0 discriminator 1
	cmpl	%eax, %edx	# PL_multi_open.2378, D.29220
	je	.L3411	#,
	.loc 1 9810 0
	leaq	1(%rbx), %rax	#, D.29216
	movzbl	(%rax), %eax	# *_309, D.29217
	movsbl	%al, %edx	# D.29217, D.29220
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.2379
	cmpl	%eax, %edx	# PL_multi_close.2379, D.29220
	jne	.L3410	#,
.L3411:
	.loc 1 9811 0
	addq	$1, %rbx	#, s
	.loc 1 9809 0
	jmp	.L3413	#
.L3410:
	.loc 1 9813 0
	movq	%r12, %rax	# to, to.2380
	leaq	1(%rax), %r12	#, to
	movq	%rbx, %rdx	# s, s.2381
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2381_316, D.29217
	movb	%dl, (%rax)	# D.29217, *to.2380_314
	.loc 1 9809 0
	jmp	.L3413	#
.L3409:
	.loc 1 9816 0
	movzbl	(%rbx), %eax	# *s_10, D.29217
	movsbl	%al, %edx	# D.29217, D.29220
	movl	PL_multi_close(%rip), %eax	# PL_multi_close, PL_multi_close.2382
	cmpl	%eax, %edx	# PL_multi_close.2382, D.29220
	jne	.L3414	#,
	.loc 1 9816 0 is_stmt 0 discriminator 1
	subl	$1, -152(%rbp)	#, brackets
	cmpl	$0, -152(%rbp)	#, brackets
	jle	.L3406	#,
.L3414:
	.loc 1 9818 0 is_stmt 1
	movzbl	(%rbx), %eax	# *s_10, D.29217
	movsbl	%al, %edx	# D.29217, D.29220
	movl	PL_multi_open(%rip), %eax	# PL_multi_open, PL_multi_open.2383
	cmpl	%eax, %edx	# PL_multi_open.2383, D.29220
	jne	.L3415	#,
	.loc 1 9819 0
	addl	$1, -152(%rbp)	#, brackets
	jmp	.L3413	#
.L3415:
	.loc 1 9820 0
	cmpb	$0, -159(%rbp)	#, has_utf8
	jne	.L3413	#,
	.loc 1 9820 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_10, D.29217
	testb	%al, %al	# D.29217
	jns	.L3413	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2384
	testq	%rax, %rax	# PL_linestr.2384
	je	.L3416	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2385
	movl	12(%rax), %eax	# PL_linestr.2385_329->sv_flags, D.29218
	andl	$536870912, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	je	.L3416	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2386
	movzbl	37(%rax), %eax	# PL_curcop.2386_332->op_private, D.29219
	movzbl	%al, %eax	# D.29219, D.29220
	andl	$8, %eax	#, D.29220
	testl	%eax, %eax	# D.29220
	je	.L3417	#,
.L3416:
	.loc 1 9820 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2387
	andl	$8388608, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	je	.L3413	#,
.L3417:
	.loc 1 9821 0 is_stmt 1
	movb	$1, -159(%rbp)	#, has_utf8
.L3413:
	.loc 1 9822 0
	movzbl	(%rbx), %eax	# *s_9, D.29217
	movb	%al, (%r12)	# D.29217, *to_19
	.loc 1 9803 0
	addq	$1, %rbx	#, s
	addq	$1, %r12	#, to
.L3407:
	.loc 1 9803 0 is_stmt 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2388
	cmpq	%rax, %rbx	# PL_bufend.2388, s
	jb	.L3418	#,
.L3406:
	.loc 1 9826 0 is_stmt 1
	movb	$0, (%r12)	#, *to_21
	.loc 1 9827 0
	movq	-96(%rbp), %rax	# sv, tmp476
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	%r12, %rcx	# to, to.2389
	movq	-96(%rbp), %rdx	# sv, tmp477
	movq	(%rdx), %rdx	# sv_107->sv_any, D.29222
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_344].xpv_pv, D.29216
	subq	%rdx, %rcx	# D.29223, D.29223
	movq	%rcx, %rdx	# D.29223, D.29223
	movq	%rdx, 8(%rax)	# D.29221, MEM[(struct XPV *)_342].xpv_cur
	.loc 1 9833 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2390
	cmpq	%rax, %rbx	# PL_bufend.2390, s
	jae	.L3419	#,
	.loc 1 9834 0
	jmp	.L3390	#
.L3419:
	.loc 1 9837 0
	movq	%r12, %rdx	# to, to.2391
	movq	-96(%rbp), %rax	# sv, tmp478
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	(%rax), %rax	# MEM[(struct XPV *)_351].xpv_pv, D.29216
	subq	%rax, %rdx	# D.29223, D.29223
	movq	%rdx, %rax	# D.29223, D.29223
	cmpq	$1, %rax	#, D.29223
	jle	.L3420	#,
	.loc 1 9838 0
	leaq	-2(%r12), %rax	#, D.29216
	movzbl	(%rax), %eax	# *_355, D.29217
	cmpb	$13, %al	#, D.29217
	jne	.L3421	#,
	.loc 1 9838 0 is_stmt 0 discriminator 1
	leaq	-1(%r12), %rax	#, D.29216
	movzbl	(%rax), %eax	# *_357, D.29217
	cmpb	$10, %al	#, D.29217
	je	.L3422	#,
.L3421:
	.loc 1 9839 0 is_stmt 1 discriminator 2
	leaq	-2(%r12), %rax	#, D.29216
	movzbl	(%rax), %eax	# *_359, D.29217
	.loc 1 9838 0 discriminator 2
	cmpb	$10, %al	#, D.29217
	jne	.L3423	#,
	.loc 1 9839 0
	leaq	-1(%r12), %rax	#, D.29216
	movzbl	(%rax), %eax	# *_361, D.29217
	cmpb	$13, %al	#, D.29217
	jne	.L3423	#,
.L3422:
	.loc 1 9841 0
	leaq	-2(%r12), %rax	#, D.29216
	movb	$10, (%rax)	#, *_366
	.loc 1 9842 0
	subq	$1, %r12	#, to
	.loc 1 9843 0
	movq	-96(%rbp), %rax	# sv, tmp479
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	%r12, %rcx	# to, to.2392
	movq	-96(%rbp), %rdx	# sv, tmp480
	movq	(%rdx), %rdx	# sv_107->sv_any, D.29222
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_370].xpv_pv, D.29216
	subq	%rdx, %rcx	# D.29223, D.29223
	movq	%rcx, %rdx	# D.29223, D.29223
	movq	%rdx, 8(%rax)	# D.29221, MEM[(struct XPV *)_368].xpv_cur
	nop
	jmp	.L3372	#
.L3423:
	.loc 1 9845 0
	leaq	-1(%r12), %rax	#, D.29216
	movzbl	(%rax), %eax	# *_363, D.29217
	cmpb	$13, %al	#, D.29217
	jne	.L3372	#,
	.loc 1 9846 0
	leaq	-1(%r12), %rax	#, D.29216
	movb	$10, (%rax)	#, *_365
	jmp	.L3372	#
.L3420:
	.loc 1 9848 0
	movq	%r12, %rdx	# to, to.2393
	movq	-96(%rbp), %rax	# sv, tmp481
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	(%rax), %rax	# MEM[(struct XPV *)_376].xpv_pv, D.29216
	subq	%rax, %rdx	# D.29223, D.29223
	movq	%rdx, %rax	# D.29223, D.29223
	cmpq	$1, %rax	#, D.29223
	jne	.L3372	#,
	.loc 1 9848 0 is_stmt 0 discriminator 1
	leaq	-1(%r12), %rax	#, D.29216
	movzbl	(%rax), %eax	# *_380, D.29217
	cmpb	$13, %al	#, D.29217
	jne	.L3372	#,
	.loc 1 9849 0 is_stmt 1
	leaq	-1(%r12), %rax	#, D.29216
	movb	$10, (%rax)	#, *_382
.L3372:
	.loc 1 9856 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2394
	testq	%rax, %rax	# PL_rsfp.2394
	je	.L3425	#,
	.loc 1 9857 0 discriminator 1
	movq	PL_rsfp(%rip), %rcx	# PL_rsfp, PL_rsfp.2395
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2396
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# PL_rsfp.2395,
	movq	%rax, %rdi	# PL_linestr.2396,
	call	S_filter_gets	#
	movq	%rax, PL_linestart(%rip)	# PL_linestart.2397, PL_linestart
	movq	PL_linestart(%rip), %rbx	# PL_linestart, s
	movq	%rbx, PL_oldbufptr(%rip)	# s, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2398
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.2398, PL_oldoldbufptr
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2399
	.loc 1 9856 0 discriminator 1
	testq	%rax, %rax	# PL_oldoldbufptr.2399
	jne	.L3426	#,
.L3425:
	.loc 1 9858 0
	movq	-96(%rbp), %rax	# sv, tmp482
	movq	%rax, %rdi	# tmp482,
	call	Perl_sv_free	#
	.loc 1 9859 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2400
	movl	PL_multi_start(%rip), %edx	# PL_multi_start, PL_multi_start.2401
	movl	%edx, 72(%rax)	# PL_multi_start.2402, PL_curcop.2400_427->cop_line
	.loc 1 9860 0
	movl	$0, %eax	#, D.29216
	jmp	.L3443	#
.L3426:
	.loc 1 9863 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2403
	movl	72(%rax), %edx	# PL_curcop.2403_390->cop_line, D.29218
	addl	$1, %edx	#, D.29218
	movl	%edx, 72(%rax)	# D.29218, PL_curcop.2403_390->cop_line
	.loc 1 9866 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.2404
	testl	%eax, %eax	# PL_perldb.2404
	je	.L3428	#,
	.loc 1 9866 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.2405
	andl	$2, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	je	.L3428	#,
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.2406
	movq	PL_debstash(%rip), %rax	# PL_debstash, PL_debstash.2407
	cmpq	%rax, %rdx	# PL_debstash.2407, PL_curstash.2406
	je	.L3428	#,
.LBB116:
	.loc 1 9867 0 is_stmt 1
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -72(%rbp)	# tmp483, sv
	.loc 1 9869 0
	movq	-72(%rbp), %rax	# sv, tmp484
	movl	$7, %esi	#,
	movq	%rax, %rdi	# tmp484,
	call	Perl_sv_upgrade	#
	.loc 1 9870 0
	movq	PL_linestr(%rip), %rcx	# PL_linestr, PL_linestr.2408
	movq	-72(%rbp), %rax	# sv, tmp485
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# PL_linestr.2408,
	movq	%rax, %rdi	# tmp485,
	call	Perl_sv_setsv_flags	#
	.loc 1 9871 0
	movq	-72(%rbp), %rax	# sv, tmp486
	movl	12(%rax), %eax	# sv_398->sv_flags, D.29218
	andl	$2097152, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	je	.L3430	#,
	.loc 1 9871 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# sv, tmp487
	movq	%rax, %rdi	# tmp487,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.29220
	je	.L3430	#,
	.loc 1 9871 0
	nop
.L3430:
	.loc 1 9871 0 discriminator 3
	movq	-72(%rbp), %rax	# sv, tmp488
	movl	12(%rax), %eax	# sv_398->sv_flags, D.29218
	orl	$16842752, %eax	#, D.29218
	movl	%eax, %edx	# D.29218, D.29218
	movq	-72(%rbp), %rax	# sv, tmp489
	movl	%edx, 12(%rax)	# D.29218, sv_398->sv_flags
	.loc 1 9872 0 is_stmt 1 discriminator 3
	movq	-72(%rbp), %rax	# sv, tmp490
	movq	(%rax), %rax	# sv_398->sv_any, D.29222
	movq	$0, 24(%rax)	#, MEM[(struct XPVIV *)_407].xiv_iv
	.loc 1 9873 0 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2410
	movl	72(%rax), %eax	# PL_curcop.2410_408->cop_line, D.29218
	movl	%eax, %ecx	# D.29218, D.29220
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2412
	movq	56(%rax), %rax	# PL_curcop.2412_411->cop_filegv, D.29226
	testq	%rax, %rax	# D.29226
	je	.L3431	#,
	.loc 1 9873 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2413
	movq	56(%rax), %rax	# PL_curcop.2413_413->cop_filegv, D.29226
	movq	(%rax), %rax	# _414->sv_any, D.29227
	movq	56(%rax), %rax	# _415->xgv_gp, D.29228
	movq	32(%rax), %rax	# _416->gp_av, iftmp.2411
	jmp	.L3432	#
.L3431:
	.loc 1 9873 0 discriminator 2
	movl	$0, %eax	#, iftmp.2411
.L3432:
	.loc 1 9873 0 discriminator 3
	movq	-72(%rbp), %rdx	# sv, tmp491
	movl	%ecx, %esi	# D.29220,
	movq	%rax, %rdi	# iftmp.2411,
	call	Perl_av_store	#
.L3428:
.LBE116:
	.loc 1 9877 0 is_stmt 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2414
	movq	(%rax), %rax	# PL_linestr.2414_419->sv_any, D.29222
	movq	(%rax), %rdx	# MEM[(struct XPV *)_420].xpv_pv, D.29216
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2415
	movq	(%rax), %rax	# PL_linestr.2415_422->sv_any, D.29222
	movq	8(%rax), %rax	# MEM[(struct XPV *)_423].xpv_cur, D.29221
	addq	%rdx, %rax	# D.29216, PL_bufend.2416
	movq	%rax, PL_bufend(%rip)	# PL_bufend.2416, PL_bufend
	.loc 1 9878 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.2417
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.2417, PL_last_lop
	.loc 1 9879 0
	jmp	.L3433	#
.L3390:
	.loc 1 9883 0
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.2418
	testq	%rax, %rax	# PL_encoding.2418
	je	.L3434	#,
	.loc 1 9883 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2419
	testq	%rax, %rax	# PL_linestr.2419
	je	.L3435	#,
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2420
	movl	12(%rax), %eax	# PL_linestr.2420_433->sv_flags, D.29218
	andl	$536870912, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	je	.L3435	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2421
	movzbl	37(%rax), %eax	# PL_curcop.2421_436->op_private, D.29219
	movzbl	%al, %eax	# D.29219, D.29220
	andl	$8, %eax	#, D.29220
	testl	%eax, %eax	# D.29220
	je	.L3434	#,
.L3435:
	.loc 1 9883 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2422
	andl	$8388608, %eax	#, D.29218
	testl	%eax, %eax	# D.29218
	je	.L3436	#,
.L3434:
	.loc 1 9884 0 is_stmt 1
	cmpl	$0, -176(%rbp)	#, keep_delims
	je	.L3437	#,
	.loc 1 9885 0
	movq	-144(%rbp), %rdx	# termlen, termlen.2423
	movq	-96(%rbp), %rax	# sv, tmp492
	movl	$2, %ecx	#,
	movq	%rbx, %rsi	# s,
	movq	%rax, %rdi	# tmp492,
	call	Perl_sv_catpvn_flags	#
.L3437:
	.loc 1 9886 0
	movq	-144(%rbp), %rax	# termlen, termlen.2424
	addq	%rax, %rbx	# termlen.2424, s
.L3436:
	.loc 1 9888 0
	cmpb	$0, -159(%rbp)	#, has_utf8
	jne	.L3438	#,
	.loc 1 9888 0 is_stmt 0 discriminator 1
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.2425
	testq	%rax, %rax	# PL_encoding.2425
	je	.L3439	#,
.L3438:
	.loc 1 9889 0 is_stmt 1
	movq	-96(%rbp), %rax	# sv, tmp493
	movl	12(%rax), %eax	# sv_107->sv_flags, D.29218
	orl	$536870912, %eax	#, D.29218
	movl	%eax, %edx	# D.29218, D.29218
	movq	-96(%rbp), %rax	# sv, tmp494
	movl	%edx, 12(%rax)	# D.29218, sv_107->sv_flags
.L3439:
	.loc 1 9891 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2426
	movl	72(%rax), %eax	# PL_curcop.2426_448->cop_line, D.29218
	movl	%eax, PL_multi_end(%rip)	# PL_multi_end.2427, PL_multi_end
	.loc 1 9894 0
	movq	-96(%rbp), %rax	# sv, tmp495
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	8(%rax), %rax	# MEM[(struct XPV *)_451].xpv_cur, D.29221
	leaq	5(%rax), %rdx	#, D.29221
	movq	-96(%rbp), %rax	# sv, tmp496
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	16(%rax), %rax	# MEM[(struct XPV *)_454].xpv_len, D.29221
	cmpq	%rax, %rdx	# D.29221, D.29221
	jae	.L3440	#,
	.loc 1 9895 0
	movq	-96(%rbp), %rax	# sv, tmp497
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	-96(%rbp), %rdx	# sv, tmp498
	movq	(%rdx), %rdx	# sv_107->sv_any, D.29222
	movq	8(%rdx), %rdx	# MEM[(struct XPV *)_457].xpv_cur, D.29221
	addq	$1, %rdx	#, D.29221
	movq	%rdx, 16(%rax)	# D.29221, MEM[(struct XPV *)_456].xpv_len
	.loc 1 9896 0
	movq	-96(%rbp), %rax	# sv, tmp499
	movq	(%rax), %r12	# sv_107->sv_any, D.29222
	movq	-96(%rbp), %rax	# sv, tmp500
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_461].xpv_len, D.29221
	movq	-96(%rbp), %rax	# sv, tmp501
	movq	(%rax), %rax	# sv_107->sv_any, D.29222
	movq	(%rax), %rax	# MEM[(struct XPV *)_463].xpv_pv, D.29216
	movq	%rdx, %rsi	# D.29221,
	movq	%rax, %rdi	# D.29216,
	call	Perl_safesysrealloc	#
	movq	%rax, (%r12)	# D.29222, MEM[(struct XPV *)_460].xpv_pv
.L3440:
	.loc 1 9903 0
	movq	PL_lex_stuff(%rip), %rax	# PL_lex_stuff, PL_lex_stuff.2428
	testq	%rax, %rax	# PL_lex_stuff.2428
	je	.L3441	#,
	.loc 1 9904 0
	movq	-96(%rbp), %rax	# sv, tmp502
	movq	%rax, PL_lex_repl(%rip)	# tmp502, PL_lex_repl
	jmp	.L3442	#
.L3441:
	.loc 1 9906 0
	movq	-96(%rbp), %rax	# sv, tmp503
	movq	%rax, PL_lex_stuff(%rip)	# tmp503, PL_lex_stuff
.L3442:
	.loc 1 9907 0
	movq	%rbx, %rax	# s, D.29216
.L3443:
	.loc 1 9908 0
	movq	-40(%rbp), %rsi	# D.29229, tmp506
	xorq	%fs:40, %rsi	#, tmp506
	je	.L3444	#,
	call	__stack_chk_fail	#
.L3444:
	addq	$152, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE45:
	.size	S_scan_str, .-S_scan_str
	.section	.rodata
.LC197:
	.string	"panic: scan_num"
.LC198:
	.string	"Misplaced _ in number"
.LC199:
	.string	"Illegal octal digit '%c'"
.LC200:
	.string	"Illegal binary digit '%c'"
.LC201:
	.string	"Integer overflow in %s number"
.LC203:
	.string	"%s number > %s non-portable"
.LC204:
	.string	"integer"
.LC205:
	.string	"binary"
.LC206:
	.string	"+-0123456789_"
.LC207:
	.string	"float"
	.text
	.globl	Perl_scan_num
	.type	Perl_scan_num, @function
Perl_scan_num:
.LFB46:
	.loc 1 9934 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$152, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -152(%rbp)	# start, start
	movq	%rsi, -160(%rbp)	# lvalp, lvalp
	.loc 1 9935 0
	movq	-152(%rbp), %rbx	# start, s
	.loc 1 9939 0
	movq	$0, -112(%rbp)	#, sv
	.loc 1 9941 0
	movq	$0, -104(%rbp)	#, lastub
	.loc 1 9946 0
	movzbl	(%rbx), %eax	# *s_60, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	cmpl	$57, %eax	#, D.29231
	jg	.L3447	#,
	cmpl	$49, %eax	#, D.29231
	jge	.L3448	#,
	cmpl	$46, %eax	#, D.29231
	je	.L3448	#,
	cmpl	$48, %eax	#, D.29231
	je	.L3449	#,
	jmp	.L3446	#
.L3447:
	cmpl	$118, %eax	#, D.29231
	je	.L3450	#,
.L3446:
	.loc 1 9948 0
	movl	$.LC197, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3449:
.LBB117:
	.loc 1 9964 0
	movl	$0, %eax	#, tmp463
	movq	%rax, -96(%rbp)	# tmp463, n
	.loc 1 9965 0
	movq	$0, -88(%rbp)	#, u
	.loc 1 9967 0
	movb	$0, -130(%rbp)	#, overflowed
	.loc 1 9968 0
	movb	$1, -129(%rbp)	#, just_zero
	.loc 1 9982 0
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_69, D.29230
	cmpb	$120, %al	#, D.29230
	jne	.L3451	#,
	.loc 1 9983 0
	movl	$4, -128(%rbp)	#, shift
	.loc 1 9984 0
	addq	$2, %rbx	#, s
	.loc 1 9985 0
	movb	$0, -129(%rbp)	#, just_zero
	jmp	.L3452	#
.L3451:
	.loc 1 9986 0
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_74, D.29230
	cmpb	$98, %al	#, D.29230
	jne	.L3453	#,
	.loc 1 9987 0
	movl	$1, -128(%rbp)	#, shift
	.loc 1 9988 0
	addq	$2, %rbx	#, s
	.loc 1 9989 0
	movb	$0, -129(%rbp)	#, just_zero
	jmp	.L3452	#
.L3453:
	.loc 1 9992 0
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_79, D.29230
	cmpb	$46, %al	#, D.29230
	je	.L3448	#,
	.loc 1 9992 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_81, D.29230
	cmpb	$101, %al	#, D.29230
	je	.L3448	#,
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_83, D.29230
	cmpb	$69, %al	#, D.29230
	je	.L3448	#,
	.loc 1 9996 0 is_stmt 1
	movl	$3, -128(%rbp)	#, shift
	.loc 1 9997 0
	addq	$1, %rbx	#, s
.L3452:
	.loc 1 10000 0
	movzbl	(%rbx), %eax	# *s_1, D.29230
	cmpb	$95, %al	#, D.29230
	jne	.L3454	#,
	.loc 1 10001 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2429
	movq	80(%rax), %rax	# PL_curcop.2429_88->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3455	#,
	.loc 1 10001 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2430
	movq	80(%rax), %rax	# PL_curcop.2430_90->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3455	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2431
	movq	80(%rax), %rax	# PL_curcop.2431_92->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3456	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2432
	movq	80(%rax), %rax	# PL_curcop.2432_94->cop_warnings, D.29233
	movq	(%rax), %rax	# _95->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_96].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_98, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3456	#,
.L3455:
	.loc 1 10001 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2433
	movq	80(%rax), %rax	# PL_curcop.2433_102->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3457	#,
	.loc 1 10001 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2434
	movzbl	%al, %eax	# PL_dowarn.2434, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3457	#,
.L3456:
	.loc 1 10002 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3457:
	.loc 1 10004 0
	movq	%rbx, %rax	# s, s.2435
	leaq	1(%rax), %rbx	#, s
	movq	%rax, -104(%rbp)	# s.2435, lastub
.L3454:
	.loc 1 10007 0
	movl	-128(%rbp), %eax	# shift, tmp465
	cltq
	movq	bases.12133(,%rax,8), %rax	# bases, tmp466
	movq	%rax, -72(%rbp)	# tmp466, base
	.loc 1 10008 0
	movl	-128(%rbp), %eax	# shift, tmp468
	cltq
	movq	Bases.12134(,%rax,8), %rax	# Bases, tmp469
	movq	%rax, -64(%rbp)	# tmp469, Base
	.loc 1 10009 0
	movl	-128(%rbp), %eax	# shift, tmp471
	cltq
	movq	maxima.12135(,%rax,8), %rax	# maxima, tmp472
	movq	%rax, -56(%rbp)	# tmp472, max
.L3481:
.LBB118:
	.loc 1 10017 0
	movzbl	(%rbx), %eax	# *s_3, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	subl	$48, %eax	#, tmp473
	cmpl	$54, %eax	#, tmp473
	ja	.L3566	#,
	movl	%eax, %eax	# tmp473, tmp474
	movq	.L3460(,%rax,8), %rax	#, tmp475
	jmp	*%rax	# tmp475
	.section	.rodata
	.align 8
	.align 4
.L3460:
	.quad	.L3459
	.quad	.L3459
	.quad	.L3461
	.quad	.L3461
	.quad	.L3461
	.quad	.L3461
	.quad	.L3461
	.quad	.L3461
	.quad	.L3462
	.quad	.L3462
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3463
	.quad	.L3463
	.quad	.L3463
	.quad	.L3463
	.quad	.L3463
	.quad	.L3463
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3566
	.quad	.L3464
	.quad	.L3566
	.quad	.L3463
	.quad	.L3463
	.quad	.L3463
	.quad	.L3463
	.quad	.L3463
	.quad	.L3463
	.text
.L3464:
	.loc 1 10025 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2436
	movq	80(%rax), %rax	# PL_curcop.2436_115->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3466	#,
	.loc 1 10025 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2437
	movq	80(%rax), %rax	# PL_curcop.2437_117->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3466	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2438
	movq	80(%rax), %rax	# PL_curcop.2438_119->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3467	#,
	.loc 1 10025 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2439
	movq	80(%rax), %rax	# PL_curcop.2439_121->cop_warnings, D.29233
	movq	(%rax), %rax	# _122->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_123].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_125, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3467	#,
.L3466:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2440
	movq	80(%rax), %rax	# PL_curcop.2440_129->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3468	#,
	.loc 1 10025 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2441
	movzbl	%al, %eax	# PL_dowarn.2441, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3468	#,
.L3467:
	cmpq	$0, -104(%rbp)	#, lastub
	je	.L3468	#,
	movq	-104(%rbp), %rax	# lastub, tmp476
	addq	$1, %rax	#, D.29232
	cmpq	%rbx, %rax	# s, D.29232
	jne	.L3468	#,
	.loc 1 10026 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3468:
	.loc 1 10028 0
	movq	%rbx, %rax	# s, s.2442
	leaq	1(%rax), %rbx	#, s
	movq	%rax, -104(%rbp)	# s.2442, lastub
	.loc 1 10029 0
	jmp	.L3469	#
.L3462:
	.loc 1 10033 0
	cmpl	$3, -128(%rbp)	#, shift
	jne	.L3461	#,
	.loc 1 10034 0
	movzbl	(%rbx), %eax	# *s_3, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	movl	%eax, %esi	# D.29231,
	movl	$.LC199, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.29232,
	call	Perl_yyerror	#
.L3461:
	.loc 1 10040 0
	cmpl	$1, -128(%rbp)	#, shift
	jne	.L3459	#,
	.loc 1 10041 0
	movzbl	(%rbx), %eax	# *s_3, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	movl	%eax, %esi	# D.29231,
	movl	$.LC200, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.29232,
	call	Perl_yyerror	#
.L3459:
	.loc 1 10045 0
	movq	%rbx, %rax	# s, s.2443
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.2443_144, D.29230
	movsbq	%al, %rax	# D.29230, D.29235
	andl	$15, %eax	#, tmp477
	movq	%rax, -80(%rbp)	# tmp477, b
	.loc 1 10046 0
	jmp	.L3470	#
.L3463:
	.loc 1 10052 0
	cmpl	$4, -128(%rbp)	#, shift
	je	.L3471	#,
	.loc 1 10053 0
	jmp	.L3465	#
.L3471:
	.loc 1 10054 0
	movq	%rbx, %rax	# s, s.2444
	leaq	1(%rax), %rbx	#, s
	movzbl	(%rax), %eax	# *s.2444_149, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$7, %eax	#, D.29231
	addl	$9, %eax	#, D.29231
	cltq
	movq	%rax, -80(%rbp)	# tmp478, b
.L3470:
	.loc 1 10061 0
	movb	$0, -129(%rbp)	#, just_zero
	.loc 1 10062 0
	cmpb	$0, -130(%rbp)	#, overflowed
	jne	.L3472	#,
	.loc 1 10063 0
	movl	-128(%rbp), %eax	# shift, tmp482
	movq	-88(%rbp), %rdx	# u, tmp484
	movl	%eax, %ecx	# tmp482, tmp549
	salq	%cl, %rdx	# tmp549, tmp483
	movq	%rdx, %rax	# tmp483, tmp483
	movq	%rax, -48(%rbp)	# tmp483, x
	.loc 1 10065 0
	movl	-128(%rbp), %eax	# shift, tmp485
	movq	-48(%rbp), %rdx	# x, tmp486
	movl	%eax, %ecx	# tmp485, tmp551
	shrq	%cl, %rdx	# tmp551, D.29235
	movq	%rdx, %rax	# D.29235, D.29235
	cmpq	-88(%rbp), %rax	# u, D.29235
	je	.L3473	#,
	.loc 1 10066 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2445
	andl	$16384, %eax	#, D.29236
	testl	%eax, %eax	# D.29236
	jne	.L3473	#,
	.loc 1 10067 0
	movb	$1, -130(%rbp)	#, overflowed
	.loc 1 10068 0
	movq	-88(%rbp), %rax	# u, tmp488
	testq	%rax, %rax	# tmp488
	js	.L3474	#,
	cvtsi2sdq	%rax, %xmm0	# tmp488, tmp487
	jmp	.L3475	#
.L3474:
	movq	%rax, %rdx	# tmp488, tmp490
	shrq	%rdx	# tmp490
	andl	$1, %eax	#, tmp491
	orq	%rax, %rdx	# tmp491, tmp490
	cvtsi2sdq	%rdx, %xmm0	# tmp490, tmp489
	addsd	%xmm0, %xmm0	# tmp489, tmp487
.L3475:
	movsd	%xmm0, -96(%rbp)	# tmp487, n
	.loc 1 10069 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2446
	movq	80(%rax), %rax	# PL_curcop.2446_163->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3476	#,
	.loc 1 10069 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2447
	movq	80(%rax), %rax	# PL_curcop.2447_165->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3476	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2448
	movq	80(%rax), %rax	# PL_curcop.2448_167->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3477	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2449
	movq	80(%rax), %rax	# PL_curcop.2449_169->cop_warnings, D.29233
	movq	(%rax), %rax	# _170->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_171].xpv_pv, D.29232
	addq	$3, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_173, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$64, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3477	#,
.L3476:
	.loc 1 10070 0 is_stmt 1
	movq	-72(%rbp), %rax	# base, tmp492
	movq	%rax, %rdx	# tmp492,
	movl	$.LC201, %esi	#,
	movl	$15, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 10069 0
	jmp	.L3472	#
.L3477:
	.loc 1 10069 0 is_stmt 0 discriminator 2
	jmp	.L3472	#
.L3473:
	.loc 1 10074 0 is_stmt 1
	movq	-80(%rbp), %rax	# b, tmp497
	movq	-48(%rbp), %rdx	# x, tmp498
	orq	%rdx, %rax	# tmp498, tmp496
	movq	%rax, -88(%rbp)	# tmp496, u
.L3472:
	.loc 1 10076 0
	cmpb	$0, -130(%rbp)	#, overflowed
	je	.L3478	#,
	.loc 1 10077 0
	movl	-128(%rbp), %eax	# shift, tmp500
	cltq
	movsd	nvshift.12132(,%rax,8), %xmm0	# nvshift, D.29237
	movsd	-96(%rbp), %xmm1	# n, tmp502
	mulsd	%xmm1, %xmm0	# tmp502, tmp501
	movsd	%xmm0, -96(%rbp)	# tmp501, n
	.loc 1 10086 0
	movq	-80(%rbp), %rax	# b, tmp503
	testq	%rax, %rax	# tmp503
	js	.L3479	#,
	cvtsi2sdq	%rax, %xmm0	# tmp503, D.29237
	jmp	.L3480	#
.L3479:
	movq	%rax, %rdx	# tmp503, tmp505
	shrq	%rdx	# tmp505
	andl	$1, %eax	#, tmp506
	orq	%rax, %rdx	# tmp506, tmp505
	cvtsi2sdq	%rdx, %xmm0	# tmp505, tmp504
	addsd	%xmm0, %xmm0	# tmp504, D.29237
.L3480:
	movsd	-96(%rbp), %xmm1	# n, tmp508
	addsd	%xmm1, %xmm0	# tmp508, tmp507
	movsd	%xmm0, -96(%rbp)	# tmp507, n
	.loc 1 10088 0
	jmp	.L3567	#
.L3478:
.L3567:
	nop
.L3469:
.LBE118:
	.loc 1 10090 0
	jmp	.L3481	#
.L3566:
.LBB119:
	.loc 1 10021 0
	nop
.L3465:
.LBE119:
	.loc 1 10098 0
	leaq	-1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_182, D.29230
	cmpb	$95, %al	#, D.29230
	jne	.L3482	#,
	.loc 1 10099 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2450
	movq	80(%rax), %rax	# PL_curcop.2450_184->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3483	#,
	.loc 1 10099 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2451
	movq	80(%rax), %rax	# PL_curcop.2451_186->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3483	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2452
	movq	80(%rax), %rax	# PL_curcop.2452_188->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3484	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2453
	movq	80(%rax), %rax	# PL_curcop.2453_190->cop_warnings, D.29233
	movq	(%rax), %rax	# _191->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_192].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_194, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3484	#,
.L3483:
	.loc 1 10099 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2454
	movq	80(%rax), %rax	# PL_curcop.2454_198->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3482	#,
	.loc 1 10099 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2455
	movzbl	%al, %eax	# PL_dowarn.2455, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3482	#,
.L3484:
	.loc 1 10100 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3482:
	.loc 1 10103 0
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -112(%rbp)	# tmp509, sv
	.loc 1 10104 0
	cmpb	$0, -130(%rbp)	#, overflowed
	je	.L3485	#,
	.loc 1 10105 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2456
	movq	80(%rax), %rax	# PL_curcop.2456_204->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3486	#,
	.loc 1 10105 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2457
	movq	80(%rax), %rax	# PL_curcop.2457_206->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3486	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2458
	movq	80(%rax), %rax	# PL_curcop.2458_208->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3487	#,
	.loc 1 10105 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2459
	movq	80(%rax), %rax	# PL_curcop.2459_210->cop_warnings, D.29233
	movq	(%rax), %rax	# _211->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_212].xpv_pv, D.29232
	addq	$4, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_214, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$4, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3487	#,
.L3486:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2460
	movq	80(%rax), %rax	# PL_curcop.2460_218->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3488	#,
	.loc 1 10105 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2461
	movzbl	%al, %eax	# PL_dowarn.2461, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3488	#,
.L3487:
	movsd	-96(%rbp), %xmm0	# n, tmp510
	ucomisd	.LC202(%rip), %xmm0	#, tmp510
	jbe	.L3488	#,
	.loc 1 10106 0 is_stmt 1
	movq	-56(%rbp), %rdx	# max, tmp511
	movq	-64(%rbp), %rax	# Base, tmp512
	movq	%rdx, %rcx	# tmp511,
	movq	%rax, %rdx	# tmp512,
	movl	$.LC203, %esi	#,
	movl	$17, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3488:
	.loc 1 10109 0
	movq	-96(%rbp), %rax	# n, tmp513
	movq	-112(%rbp), %rdx	# sv, tmp514
	movq	%rax, -168(%rbp)	# tmp513, %sfp
	movsd	-168(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp514,
	call	Perl_sv_setnv	#
	jmp	.L3490	#
.L3485:
	.loc 1 10113 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2462
	movq	80(%rax), %rax	# PL_curcop.2462_223->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3491	#,
	.loc 1 10113 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2463
	movq	80(%rax), %rax	# PL_curcop.2463_225->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3491	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2464
	movq	80(%rax), %rax	# PL_curcop.2464_227->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3492	#,
	.loc 1 10113 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2465
	movq	80(%rax), %rax	# PL_curcop.2465_229->cop_warnings, D.29233
	movq	(%rax), %rax	# _230->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_231].xpv_pv, D.29232
	addq	$4, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_233, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$4, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3492	#,
.L3491:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2466
	movq	80(%rax), %rax	# PL_curcop.2466_237->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3493	#,
	.loc 1 10113 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2467
	movzbl	%al, %eax	# PL_dowarn.2467, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3493	#,
.L3492:
	movl	$4294967295, %eax	#, tmp515
	cmpq	%rax, -88(%rbp)	# tmp515, u
	jbe	.L3493	#,
	.loc 1 10114 0 is_stmt 1
	movq	-56(%rbp), %rdx	# max, tmp516
	movq	-64(%rbp), %rax	# Base, tmp517
	movq	%rdx, %rcx	# tmp516,
	movq	%rax, %rdx	# tmp517,
	movl	$.LC203, %esi	#,
	movl	$17, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3493:
	.loc 1 10118 0
	movq	-88(%rbp), %rdx	# u, tmp518
	movq	-112(%rbp), %rax	# sv, tmp519
	movq	%rdx, %rsi	# tmp518,
	movq	%rax, %rdi	# tmp519,
	call	Perl_sv_setuv	#
.L3490:
	.loc 1 10120 0
	cmpb	$0, -129(%rbp)	#, just_zero
	je	.L3494	#,
	.loc 1 10120 0 is_stmt 0 discriminator 1
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2468
	andl	$4096, %eax	#, D.29236
	testl	%eax, %eax	# D.29236
	je	.L3494	#,
	.loc 1 10121 0 is_stmt 1
	movq	%rbx, %rdx	# s, s.2469
	movq	-152(%rbp), %rax	# start, start.2470
	subq	%rax, %rdx	# start.2470, D.29238
	movq	%rdx, %rax	# D.29238, D.29238
	movq	%rax, %rsi	# D.29238, D.29235
	movq	-112(%rbp), %rdx	# sv, tmp520
	movq	-152(%rbp), %rax	# start, tmp521
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rdx, %rcx	# tmp520,
	movl	$.LC204, %edx	#,
	movq	%rax, %rdi	# tmp521,
	call	S_new_constant	#
	movq	%rax, -112(%rbp)	# tmp522, sv
	jmp	.L3495	#
.L3494:
	.loc 1 10123 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2471
	andl	$16384, %eax	#, D.29236
	testl	%eax, %eax	# D.29236
	je	.L3495	#,
	.loc 1 10124 0
	movq	%rbx, %rdx	# s, s.2472
	movq	-152(%rbp), %rax	# start, start.2473
	subq	%rax, %rdx	# start.2473, D.29238
	movq	%rdx, %rax	# D.29238, D.29238
	movq	%rax, %rsi	# D.29238, D.29235
	movq	-112(%rbp), %rdx	# sv, tmp523
	movq	-152(%rbp), %rax	# start, tmp524
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rdx, %rcx	# tmp523,
	movl	$.LC205, %edx	#,
	movq	%rax, %rdi	# tmp524,
	call	S_new_constant	#
	movq	%rax, -112(%rbp)	# tmp525, sv
.LBE117:
	.loc 1 10126 0
	jmp	.L3496	#
.L3495:
	jmp	.L3496	#
.L3448:
	.loc 1 10135 0
	movl	$PL_tokenbuf, %r12d	#, d
	.loc 1 10136 0
	movl	$PL_tokenbuf+250, %r13d	#, e
	.loc 1 10137 0
	movb	$0, -131(%rbp)	#, floatit
	.loc 1 10140 0
	jmp	.L3497	#
.L3504:
	.loc 1 10144 0
	movzbl	(%rbx), %eax	# *s_6, D.29230
	cmpb	$95, %al	#, D.29230
	jne	.L3498	#,
	.loc 1 10145 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2474
	movq	80(%rax), %rax	# PL_curcop.2474_502->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3499	#,
	.loc 1 10145 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2475
	movq	80(%rax), %rax	# PL_curcop.2475_504->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3499	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2476
	movq	80(%rax), %rax	# PL_curcop.2476_506->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3500	#,
	.loc 1 10145 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2477
	movq	80(%rax), %rax	# PL_curcop.2477_508->cop_warnings, D.29233
	movq	(%rax), %rax	# _509->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_510].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_512, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3500	#,
.L3499:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2478
	movq	80(%rax), %rax	# PL_curcop.2478_516->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3501	#,
	.loc 1 10145 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2479
	movzbl	%al, %eax	# PL_dowarn.2479, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3501	#,
.L3500:
	cmpq	$0, -104(%rbp)	#, lastub
	je	.L3501	#,
	movq	-104(%rbp), %rax	# lastub, tmp526
	addq	$1, %rax	#, D.29232
	cmpq	%rbx, %rax	# s, D.29232
	jne	.L3501	#,
	.loc 1 10146 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3501:
	.loc 1 10148 0
	movq	%rbx, %rax	# s, s.2480
	leaq	1(%rax), %rbx	#, s
	movq	%rax, -104(%rbp)	# s.2480, lastub
	jmp	.L3497	#
.L3498:
	.loc 1 10152 0
	cmpq	%r13, %r12	# e, d
	jb	.L3502	#,
	.loc 1 10153 0
	movl	$number_too_long.12124, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3502:
	.loc 1 10155 0
	movq	%r12, %rax	# d, d.2481
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2482
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2482_527, D.29230
	movb	%dl, (%rax)	# D.29230, *d.2481_525
.L3497:
	.loc 1 10140 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_6, D.29230
	cmpb	$47, %al	#, D.29230
	jle	.L3503	#,
	.loc 1 10140 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_6, D.29230
	cmpb	$57, %al	#, D.29230
	jle	.L3504	#,
.L3503:
	.loc 1 10140 0 discriminator 3
	movzbl	(%rbx), %eax	# *s_6, D.29230
	cmpb	$95, %al	#, D.29230
	je	.L3504	#,
	.loc 1 10160 0 is_stmt 1
	cmpq	$0, -104(%rbp)	#, lastub
	je	.L3505	#,
	.loc 1 10160 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# lastub, tmp527
	addq	$1, %rax	#, D.29232
	cmpq	%rbx, %rax	# s, D.29232
	jne	.L3505	#,
	.loc 1 10161 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2483
	movq	80(%rax), %rax	# PL_curcop.2483_263->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3506	#,
	.loc 1 10161 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2484
	movq	80(%rax), %rax	# PL_curcop.2484_265->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3506	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2485
	movq	80(%rax), %rax	# PL_curcop.2485_267->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3507	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2486
	movq	80(%rax), %rax	# PL_curcop.2486_269->cop_warnings, D.29233
	movq	(%rax), %rax	# _270->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_271].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_273, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3507	#,
.L3506:
	.loc 1 10161 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2487
	movq	80(%rax), %rax	# PL_curcop.2487_277->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3505	#,
	.loc 1 10161 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2488
	movzbl	%al, %eax	# PL_dowarn.2488, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3505	#,
.L3507:
	.loc 1 10162 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3505:
	.loc 1 10169 0
	movzbl	(%rbx), %eax	# *s_6, D.29230
	cmpb	$46, %al	#, D.29230
	jne	.L3508	#,
	.loc 1 10169 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_283, D.29230
	cmpb	$46, %al	#, D.29230
	je	.L3508	#,
	.loc 1 10170 0 is_stmt 1
	movb	$1, -131(%rbp)	#, floatit
	.loc 1 10171 0
	movq	%r12, %rax	# d, d.2489
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2490
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2490_288, D.29230
	movb	%dl, (%rax)	# D.29230, *d.2489_286
	.loc 1 10173 0
	movzbl	(%rbx), %eax	# *s_289, D.29230
	cmpb	$95, %al	#, D.29230
	jne	.L3509	#,
	.loc 1 10174 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2491
	movq	80(%rax), %rax	# PL_curcop.2491_292->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3510	#,
	.loc 1 10174 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2492
	movq	80(%rax), %rax	# PL_curcop.2492_294->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3510	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2493
	movq	80(%rax), %rax	# PL_curcop.2493_296->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3511	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2494
	movq	80(%rax), %rax	# PL_curcop.2494_298->cop_warnings, D.29233
	movq	(%rax), %rax	# _299->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_300].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_302, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3511	#,
.L3510:
	.loc 1 10174 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2495
	movq	80(%rax), %rax	# PL_curcop.2495_306->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3512	#,
	.loc 1 10174 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2496
	movzbl	%al, %eax	# PL_dowarn.2496, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3512	#,
.L3511:
	.loc 1 10175 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3512:
	.loc 1 10177 0
	movq	%rbx, -104(%rbp)	# s, lastub
	.loc 1 10182 0
	jmp	.L3513	#
.L3509:
	jmp	.L3513	#
.L3521:
	.loc 1 10184 0
	cmpq	%r13, %r12	# e, d
	jb	.L3514	#,
	.loc 1 10185 0
	movl	$number_too_long.12124, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3514:
	.loc 1 10186 0
	movzbl	(%rbx), %eax	# *s_7, D.29230
	cmpb	$95, %al	#, D.29230
	jne	.L3515	#,
	.loc 1 10187 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2497
	movq	80(%rax), %rax	# PL_curcop.2497_343->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3516	#,
	.loc 1 10187 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2498
	movq	80(%rax), %rax	# PL_curcop.2498_345->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3516	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2499
	movq	80(%rax), %rax	# PL_curcop.2499_347->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3517	#,
	.loc 1 10187 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2500
	movq	80(%rax), %rax	# PL_curcop.2500_349->cop_warnings, D.29233
	movq	(%rax), %rax	# _350->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_351].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_353, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3517	#,
.L3516:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2501
	movq	80(%rax), %rax	# PL_curcop.2501_357->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3518	#,
	.loc 1 10187 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2502
	movzbl	%al, %eax	# PL_dowarn.2502, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3518	#,
.L3517:
	cmpq	$0, -104(%rbp)	#, lastub
	je	.L3518	#,
	movq	-104(%rbp), %rax	# lastub, tmp528
	addq	$1, %rax	#, D.29232
	cmpq	%rbx, %rax	# s, D.29232
	jne	.L3518	#,
	.loc 1 10188 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3518:
	.loc 1 10190 0
	movq	%rbx, -104(%rbp)	# s, lastub
	jmp	.L3519	#
.L3515:
	.loc 1 10193 0
	movq	%r12, %rax	# d, d.2503
	leaq	1(%rax), %r12	#, d
	movzbl	(%rbx), %edx	# *s_7, D.29230
	movb	%dl, (%rax)	# D.29230, *d.2503_364
.L3519:
	.loc 1 10182 0
	addq	$1, %rbx	#, s
.L3513:
	.loc 1 10182 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_7, D.29230
	cmpb	$47, %al	#, D.29230
	jle	.L3520	#,
	.loc 1 10182 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_7, D.29230
	cmpb	$57, %al	#, D.29230
	jle	.L3521	#,
.L3520:
	.loc 1 10182 0 discriminator 3
	movzbl	(%rbx), %eax	# *s_7, D.29230
	cmpb	$95, %al	#, D.29230
	je	.L3521	#,
	.loc 1 10196 0 is_stmt 1
	leaq	-1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_315, D.29230
	cmpb	$95, %al	#, D.29230
	jne	.L3522	#,
	.loc 1 10197 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2504
	movq	80(%rax), %rax	# PL_curcop.2504_317->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3523	#,
	.loc 1 10197 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2505
	movq	80(%rax), %rax	# PL_curcop.2505_319->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3523	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2506
	movq	80(%rax), %rax	# PL_curcop.2506_321->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3524	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2507
	movq	80(%rax), %rax	# PL_curcop.2507_323->cop_warnings, D.29233
	movq	(%rax), %rax	# _324->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_325].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_327, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3524	#,
.L3523:
	.loc 1 10197 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2508
	movq	80(%rax), %rax	# PL_curcop.2508_331->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3522	#,
	.loc 1 10197 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2509
	movzbl	%al, %eax	# PL_dowarn.2509, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3522	#,
.L3524:
	.loc 1 10198 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3522:
	.loc 1 10201 0
	movzbl	(%rbx), %eax	# *s_7, D.29230
	cmpb	$46, %al	#, D.29230
	jne	.L3508	#,
	.loc 1 10201 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_337, D.29230
	cmpb	$47, %al	#, D.29230
	jle	.L3508	#,
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_339, D.29230
	cmpb	$57, %al	#, D.29230
	jg	.L3508	#,
	.loc 1 10203 0 is_stmt 1
	movq	-152(%rbp), %rbx	# start, s
	.loc 1 10204 0
	jmp	.L3450	#
.L3508:
	.loc 1 10209 0
	movzbl	(%rbx), %eax	# *s_8, D.29230
	cmpb	$101, %al	#, D.29230
	je	.L3525	#,
	.loc 1 10209 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_8, D.29230
	cmpb	$69, %al	#, D.29230
	jne	.L3526	#,
.L3525:
	.loc 1 10209 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_370, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	movl	%eax, %esi	# D.29231,
	movl	$.LC206, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.29232
	je	.L3526	#,
	.loc 1 10210 0 is_stmt 1
	movb	$1, -131(%rbp)	#, floatit
	.loc 1 10211 0
	addq	$1, %rbx	#, s
	.loc 1 10214 0
	movq	%r12, %rax	# d, d.2510
	leaq	1(%rax), %r12	#, d
	movb	$101, (%rax)	#, *d.2510_376
	.loc 1 10217 0
	movzbl	(%rbx), %eax	# *s_375, D.29230
	cmpb	$95, %al	#, D.29230
	jne	.L3527	#,
	.loc 1 10218 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2511
	movq	80(%rax), %rax	# PL_curcop.2511_379->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3528	#,
	.loc 1 10218 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2512
	movq	80(%rax), %rax	# PL_curcop.2512_381->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3528	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2513
	movq	80(%rax), %rax	# PL_curcop.2513_383->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3529	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2514
	movq	80(%rax), %rax	# PL_curcop.2514_385->cop_warnings, D.29233
	movq	(%rax), %rax	# _386->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_387].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_389, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3529	#,
.L3528:
	.loc 1 10218 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2515
	movq	80(%rax), %rax	# PL_curcop.2515_393->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3530	#,
	.loc 1 10218 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2516
	movzbl	%al, %eax	# PL_dowarn.2516, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3530	#,
.L3529:
	.loc 1 10219 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3530:
	.loc 1 10221 0
	movq	%rbx, %rax	# s, s.2517
	leaq	1(%rax), %rbx	#, s
	movq	%rax, -104(%rbp)	# s.2517, lastub
.L3527:
	.loc 1 10225 0
	movzbl	(%rbx), %eax	# *s_9, D.29230
	cmpb	$43, %al	#, D.29230
	je	.L3531	#,
	.loc 1 10225 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_9, D.29230
	cmpb	$45, %al	#, D.29230
	jne	.L3532	#,
.L3531:
	.loc 1 10226 0 is_stmt 1
	movq	%r12, %rax	# d, d.2518
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2519
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2519_405, D.29230
	movb	%dl, (%rax)	# D.29230, *d.2518_403
.L3532:
	.loc 1 10229 0
	movzbl	(%rbx), %eax	# *s_10, D.29230
	cmpb	$95, %al	#, D.29230
	jne	.L3533	#,
	.loc 1 10230 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2520
	movq	80(%rax), %rax	# PL_curcop.2520_409->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3534	#,
	.loc 1 10230 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2521
	movq	80(%rax), %rax	# PL_curcop.2521_411->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3534	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2522
	movq	80(%rax), %rax	# PL_curcop.2522_413->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3535	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2523
	movq	80(%rax), %rax	# PL_curcop.2523_415->cop_warnings, D.29233
	movq	(%rax), %rax	# _416->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_417].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_419, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3535	#,
.L3534:
	.loc 1 10230 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2524
	movq	80(%rax), %rax	# PL_curcop.2524_423->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3536	#,
	.loc 1 10230 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2525
	movzbl	%al, %eax	# PL_dowarn.2525, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3536	#,
.L3535:
	.loc 1 10231 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3536:
	.loc 1 10233 0
	movq	%rbx, %rax	# s, s.2526
	leaq	1(%rax), %rbx	#, s
	movq	%rax, -104(%rbp)	# s.2526, lastub
	.loc 1 10237 0
	jmp	.L3537	#
.L3533:
	jmp	.L3537	#
.L3547:
	.loc 1 10238 0
	movzbl	(%rbx), %eax	# *s_12, D.29230
	cmpb	$47, %al	#, D.29230
	jle	.L3538	#,
	.loc 1 10238 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_12, D.29230
	cmpb	$57, %al	#, D.29230
	jg	.L3538	#,
	.loc 1 10239 0 is_stmt 1
	cmpq	%r13, %r12	# e, d
	jb	.L3539	#,
	.loc 1 10240 0
	movl	$number_too_long.12124, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3539:
	.loc 1 10241 0
	movq	%r12, %rax	# d, d.2527
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.2528
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.2528_438, D.29230
	movb	%dl, (%rax)	# D.29230, *d.2527_436
	jmp	.L3537	#
.L3538:
	.loc 1 10244 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2529
	movq	80(%rax), %rax	# PL_curcop.2529_441->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	je	.L3540	#,
	.loc 1 10244 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2530
	movq	80(%rax), %rax	# PL_curcop.2530_443->cop_warnings, D.29233
	cmpq	$32, %rax	#, D.29233
	je	.L3540	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2531
	movq	80(%rax), %rax	# PL_curcop.2531_445->cop_warnings, D.29233
	cmpq	$16, %rax	#, D.29233
	je	.L3541	#,
	.loc 1 10244 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2532
	movq	80(%rax), %rax	# PL_curcop.2532_447->cop_warnings, D.29233
	movq	(%rax), %rax	# _448->sv_any, D.29234
	movq	(%rax), %rax	# MEM[(struct XPV *)_449].xpv_pv, D.29232
	addq	$7, %rax	#, D.29232
	movzbl	(%rax), %eax	# *_451, D.29230
	movsbl	%al, %eax	# D.29230, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	jne	.L3541	#,
.L3540:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2533
	movq	80(%rax), %rax	# PL_curcop.2533_455->cop_warnings, D.29233
	testq	%rax, %rax	# D.29233
	jne	.L3542	#,
	.loc 1 10244 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.2534
	movzbl	%al, %eax	# PL_dowarn.2534, D.29231
	andl	$1, %eax	#, D.29231
	testl	%eax, %eax	# D.29231
	je	.L3542	#,
.L3541:
	cmpq	$0, -104(%rbp)	#, lastub
	je	.L3543	#,
	.loc 1 10245 0 is_stmt 1
	movq	-104(%rbp), %rax	# lastub, tmp529
	addq	$1, %rax	#, D.29232
	cmpq	%rbx, %rax	# s, D.29232
	je	.L3544	#,
.L3543:
	.loc 1 10246 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_461, D.29230
	.loc 1 10245 0 discriminator 1
	cmpb	$47, %al	#, D.29230
	jle	.L3545	#,
	.loc 1 10246 0
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_463, D.29230
	cmpb	$57, %al	#, D.29230
	jle	.L3542	#,
.L3545:
	.loc 1 10246 0 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	#, D.29232
	movzbl	(%rax), %eax	# *_465, D.29230
	cmpb	$95, %al	#, D.29230
	je	.L3542	#,
.L3544:
	.loc 1 10247 0 is_stmt 1
	movl	$.LC198, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3542:
	.loc 1 10249 0
	movq	%rbx, %rax	# s, s.2535
	leaq	1(%rax), %rbx	#, s
	movq	%rax, -104(%rbp)	# s.2535, lastub
.L3537:
	.loc 1 10237 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_12, D.29230
	cmpb	$47, %al	#, D.29230
	jle	.L3546	#,
	.loc 1 10237 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_12, D.29230
	cmpb	$57, %al	#, D.29230
	jle	.L3547	#,
.L3546:
	.loc 1 10237 0 discriminator 3
	movzbl	(%rbx), %eax	# *s_12, D.29230
	cmpb	$95, %al	#, D.29230
	je	.L3547	#,
.L3526:
	.loc 1 10256 0 is_stmt 1
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -112(%rbp)	# tmp530, sv
	.loc 1 10263 0
	cmpb	$0, -131(%rbp)	#, floatit
	jne	.L3548	#,
.LBB120:
	.loc 1 10265 0
	movq	%r12, %rdx	# d, d.2536
	movl	$PL_tokenbuf, %eax	#, PL_tokenbuf.2537
	subq	%rax, %rdx	# PL_tokenbuf.2537, D.29238
	movq	%rdx, %rax	# D.29238, D.29238
	leaq	-120(%rbp), %rdx	#, tmp531
	movq	%rax, %rsi	# D.29235,
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_grok_number	#
	movl	%eax, -124(%rbp)	# tmp532, flags
	.loc 1 10267 0
	cmpl	$1, -124(%rbp)	#, flags
	jne	.L3549	#,
	.loc 1 10268 0
	movq	-120(%rbp), %rax	# uv, uv.2538
	testq	%rax, %rax	# uv.2539
	js	.L3550	#,
	.loc 1 10269 0
	movq	-120(%rbp), %rax	# uv, uv.2540
	movq	%rax, %rdx	# uv.2540, uv.2541
	movq	-112(%rbp), %rax	# sv, tmp533
	movq	%rdx, %rsi	# uv.2541,
	movq	%rax, %rdi	# tmp533,
	call	Perl_sv_setiv	#
	jmp	.L3548	#
.L3550:
	.loc 1 10271 0
	movq	-120(%rbp), %rdx	# uv, uv.2542
	movq	-112(%rbp), %rax	# sv, tmp534
	movq	%rdx, %rsi	# uv.2542,
	movq	%rax, %rdi	# tmp534,
	call	Perl_sv_setuv	#
	jmp	.L3548	#
.L3549:
	.loc 1 10272 0
	cmpl	$9, -124(%rbp)	#, flags
	jne	.L3553	#,
	.loc 1 10273 0
	movq	-120(%rbp), %rdx	# uv, uv.2543
	movabsq	$-9223372036854775808, %rax	#, tmp535
	cmpq	%rax, %rdx	# tmp535, uv.2543
	ja	.L3554	#,
	.loc 1 10274 0
	movq	-120(%rbp), %rax	# uv, uv.2544
	negq	%rax	# D.29238
	movq	%rax, %rdx	# D.29238, D.29238
	movq	-112(%rbp), %rax	# sv, tmp536
	movq	%rdx, %rsi	# D.29238,
	movq	%rax, %rdi	# tmp536,
	call	Perl_sv_setiv	#
	jmp	.L3548	#
.L3554:
	.loc 1 10276 0
	movb	$1, -131(%rbp)	#, floatit
	jmp	.L3548	#
.L3553:
	.loc 1 10278 0
	movb	$1, -131(%rbp)	#, floatit
.L3548:
.LBE120:
	.loc 1 10280 0
	cmpb	$0, -131(%rbp)	#, floatit
	je	.L3556	#,
	.loc 1 10282 0
	movb	$0, (%r12)	#, *d_22
	.loc 1 10283 0
	movl	$PL_tokenbuf, %edi	#,
	call	Perl_my_atof	#
	movsd	%xmm0, -168(%rbp)	#, %sfp
	movq	-168(%rbp), %rax	# %sfp, tmp537
	movq	%rax, -40(%rbp)	# tmp537, nv
	.loc 1 10284 0
	movq	-40(%rbp), %rax	# nv, tmp538
	movq	-112(%rbp), %rdx	# sv, tmp539
	movq	%rax, -168(%rbp)	# tmp538, %sfp
	movsd	-168(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp539,
	call	Perl_sv_setnv	#
.L3556:
	.loc 1 10287 0
	cmpb	$0, -131(%rbp)	#, floatit
	je	.L3557	#,
	.loc 1 10287 0 is_stmt 0 discriminator 1
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2547
	andl	$8192, %eax	#, D.29236
	testl	%eax, %eax	# D.29236
	setne	%al	#, iftmp.2546
	jmp	.L3558	#
.L3557:
	.loc 1 10288 0 is_stmt 1 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2548
	andl	$4096, %eax	#, D.29236
	.loc 1 10287 0 discriminator 2
	testl	%eax, %eax	# D.29236
	setne	%al	#, iftmp.2546
.L3558:
	.loc 1 10287 0 is_stmt 0 discriminator 3
	testb	%al, %al	# iftmp.2546
	je	.L3559	#,
	.loc 1 10289 0 is_stmt 1
	cmpb	$0, -131(%rbp)	#, floatit
	je	.L3560	#,
	.loc 1 10289 0 is_stmt 0 discriminator 1
	movl	$.LC207, %eax	#, iftmp.2549
	jmp	.L3561	#
.L3560:
	.loc 1 10289 0 discriminator 2
	movl	$.LC204, %eax	#, iftmp.2549
.L3561:
	.loc 1 10289 0 discriminator 3
	movq	%r12, %rcx	# d, d.2550
	movl	$PL_tokenbuf, %edx	#, PL_tokenbuf.2551
	subq	%rdx, %rcx	# PL_tokenbuf.2551, D.29238
	movq	%rcx, %rdx	# D.29238, D.29238
	movq	%rdx, %rsi	# D.29238, D.29235
	movq	-112(%rbp), %rdx	# sv, tmp540
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rdx, %rcx	# tmp540,
	movq	%rax, %rdx	# iftmp.2549,
	movl	$PL_tokenbuf, %edi	#,
	call	S_new_constant	#
	movq	%rax, -112(%rbp)	# tmp541, sv
	.loc 1 10292 0 is_stmt 1 discriminator 3
	jmp	.L3496	#
.L3559:
	.loc 1 10292 0 is_stmt 0
	jmp	.L3496	#
.L3450:
	.loc 1 10297 0 is_stmt 1
	movl	$5, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -112(%rbp)	# tmp542, sv
	.loc 1 10298 0
	movq	-112(%rbp), %rax	# sv, tmp543
	movq	%rax, %rsi	# tmp543,
	movq	%rbx, %rdi	# s,
	call	Perl_scan_vstring	#
	movq	%rax, %rbx	#, s
	.loc 1 10302 0
	nop
.L3496:
	.loc 1 10307 0
	cmpq	$0, -112(%rbp)	#, sv
	je	.L3562	#,
	.loc 1 10308 0
	movq	-112(%rbp), %rax	# sv, tmp544
	movq	%rax, %rdx	# tmp544,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	-160(%rbp), %rdx	# lvalp, tmp545
	movq	%rax, (%rdx)	# D.29239, lvalp_533(D)->opval
	jmp	.L3563	#
.L3562:
	.loc 1 10310 0
	movq	-160(%rbp), %rax	# lvalp, tmp546
	movq	$0, (%rax)	#, lvalp_533(D)->opval
.L3563:
	.loc 1 10312 0
	movq	%rbx, %rax	# s, D.29232
	.loc 1 10313 0
	addq	$152, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE46:
	.size	Perl_scan_num, .-Perl_scan_num
	.type	S_scan_formline, @function
S_scan_formline:
.LFB47:
	.loc 1 10317 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, %rbx	# s, s
	.loc 1 10320 0
	movl	$0, %esi	#,
	movl	$.LC17, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, -48(%rbp)	# tmp157, stuff
	.loc 1 10321 0
	movb	$0, -50(%rbp)	#, needargs
	.loc 1 10322 0
	movb	$0, -49(%rbp)	#, eofmt
	.loc 1 10324 0
	jmp	.L3569	#
.L3587:
	.loc 1 10325 0
	movzbl	(%rbx), %eax	# *s_2, D.29251
	cmpb	$46, %al	#, D.29251
	jne	.L3570	#,
	.loc 1 10330 0
	leaq	1(%rbx), %r12	#, t
	jmp	.L3571	#
.L3572:
	.loc 1 10330 0 is_stmt 0 discriminator 2
	addq	$1, %r12	#, t
.L3571:
	.loc 1 10330 0 discriminator 1
	movzbl	(%r12), %eax	# *t_6, D.29251
	cmpb	$32, %al	#, D.29251
	je	.L3572	#,
	.loc 1 10330 0 discriminator 3
	movzbl	(%r12), %eax	# *t_6, D.29251
	cmpb	$9, %al	#, D.29251
	je	.L3572	#,
	.loc 1 10330 0 discriminator 1
	movzbl	(%r12), %eax	# *t_6, D.29251
	cmpb	$13, %al	#, D.29251
	je	.L3572	#,
	.loc 1 10332 0 is_stmt 1
	movzbl	(%r12), %eax	# *t_6, D.29251
	cmpb	$10, %al	#, D.29251
	je	.L3573	#,
	.loc 1 10332 0 is_stmt 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2552
	cmpq	%rax, %r12	# PL_bufend.2552, t
	jne	.L3570	#,
.L3573:
	.loc 1 10333 0 is_stmt 1
	movb	$1, -49(%rbp)	#, eofmt
	.loc 1 10334 0
	jmp	.L3574	#
.L3570:
	.loc 1 10337 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.2553
	testl	%eax, %eax	# PL_in_eval.2553
	je	.L3575	#,
	.loc 1 10337 0 is_stmt 0 discriminator 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2554
	testq	%rax, %rax	# PL_rsfp.2554
	jne	.L3575	#,
	.loc 1 10338 0 is_stmt 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2555
	movq	%rax, %rdx	# PL_bufend.2555, PL_bufend.2556
	movq	%rbx, %rax	# s, s.2557
	subq	%rax, %rdx	# s.2557, D.29252
	movq	%rdx, %rax	# D.29252, D.29252
	movq	%rax, %rdx	# D.29253,
	movl	$10, %esi	#,
	movq	%rbx, %rdi	# s,
	call	memchr	#
	movq	%rax, %r13	#, eol
	.loc 1 10339 0
	movq	%r13, %rax	# eol, eol.2558
	leaq	1(%rax), %r13	#, eol
	testq	%rax, %rax	# eol.2558
	jne	.L3576	#,
	.loc 1 10340 0
	movq	PL_bufend(%rip), %r13	# PL_bufend, eol
	.loc 1 10339 0
	jmp	.L3577	#
.L3576:
	.loc 1 10339 0 is_stmt 0 discriminator 1
	jmp	.L3577	#
.L3575:
	.loc 1 10343 0 is_stmt 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2559
	movq	(%rax), %rax	# PL_linestr.2559_38->sv_any, D.29254
	movq	(%rax), %rdx	# MEM[(struct XPV *)_39].xpv_pv, D.29255
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2560
	movq	(%rax), %rax	# PL_linestr.2560_41->sv_any, D.29254
	movq	8(%rax), %rax	# MEM[(struct XPV *)_42].xpv_cur, D.29253
	addq	%rdx, %rax	# D.29255, PL_bufend.2561
	movq	%rax, PL_bufend(%rip)	# PL_bufend.2561, PL_bufend
	movq	PL_bufend(%rip), %r13	# PL_bufend, eol
.L3577:
	.loc 1 10344 0
	movzbl	(%rbx), %eax	# *s_2, D.29251
	cmpb	$35, %al	#, D.29251
	je	.L3578	#,
	.loc 1 10345 0
	movq	%rbx, %r12	# s, t
	jmp	.L3579	#
.L3583:
	.loc 1 10346 0
	movzbl	(%r12), %eax	# *t_7, D.29251
	cmpb	$126, %al	#, D.29251
	jne	.L3580	#,
	.loc 1 10346 0 is_stmt 0 discriminator 1
	leaq	1(%r12), %rax	#, D.29255
	movzbl	(%rax), %eax	# *_49, D.29251
	cmpb	$126, %al	#, D.29251
	jne	.L3580	#,
	movq	-48(%rbp), %rax	# stuff, tmp158
	movq	(%rax), %rax	# stuff_14->sv_any, D.29254
	movq	8(%rax), %rax	# MEM[(struct XPV *)_51].xpv_cur, D.29253
	testq	%rax, %rax	# D.29253
	je	.L3580	#,
	.loc 1 10347 0 is_stmt 1
	movb	$0, -50(%rbp)	#, needargs
	.loc 1 10348 0
	jmp	.L3574	#
.L3580:
	.loc 1 10350 0
	movzbl	(%r12), %eax	# *t_7, D.29251
	cmpb	$64, %al	#, D.29251
	je	.L3581	#,
	.loc 1 10350 0 is_stmt 0 discriminator 1
	movzbl	(%r12), %eax	# *t_7, D.29251
	cmpb	$94, %al	#, D.29251
	jne	.L3582	#,
.L3581:
	.loc 1 10351 0 is_stmt 1
	movb	$1, -50(%rbp)	#, needargs
.L3582:
	.loc 1 10345 0
	addq	$1, %r12	#, t
.L3579:
	.loc 1 10345 0 is_stmt 0 discriminator 1
	cmpq	%r13, %r12	# eol, t
	jb	.L3583	#,
	.loc 1 10353 0 is_stmt 1
	cmpq	%rbx, %r13	# s, eol
	jbe	.L3584	#,
	.loc 1 10354 0
	movq	%r13, %rdx	# eol, eol.2562
	movq	%rbx, %rax	# s, s.2563
	subq	%rax, %rdx	# s.2563, D.29252
	movq	%rdx, %rax	# D.29252, D.29252
	movq	%rax, %rdx	# D.29252, D.29253
	movq	-48(%rbp), %rax	# stuff, tmp159
	movl	$2, %ecx	#,
	movq	%rbx, %rsi	# s,
	movq	%rax, %rdi	# tmp159,
	call	Perl_sv_catpvn_flags	#
	.loc 1 10356 0
	movq	%r13, %rdx	# eol, eol.2564
	movq	%rbx, %rax	# s, s.2565
	subq	%rax, %rdx	# s.2565, D.29252
	movq	%rdx, %rax	# D.29252, D.29252
	cmpq	$1, %rax	#, D.29252
	jle	.L3578	#,
	.loc 1 10356 0 is_stmt 0 discriminator 1
	leaq	-2(%r13), %rax	#, D.29255
	movzbl	(%rax), %eax	# *_65, D.29251
	cmpb	$13, %al	#, D.29251
	jne	.L3578	#,
	leaq	-1(%r13), %rax	#, D.29255
	movzbl	(%rax), %eax	# *_67, D.29251
	cmpb	$10, %al	#, D.29251
	jne	.L3578	#,
.LBB121:
	.loc 1 10357 0 is_stmt 1
	movq	-48(%rbp), %rax	# stuff, tmp160
	movq	(%rax), %rax	# stuff_14->sv_any, D.29254
	movq	(%rax), %rdx	# MEM[(struct XPV *)_69].xpv_pv, D.29255
	movq	-48(%rbp), %rax	# stuff, tmp161
	movq	(%rax), %rax	# stuff_14->sv_any, D.29254
	movq	8(%rax), %rax	# MEM[(struct XPV *)_71].xpv_cur, D.29253
	addq	%rdx, %rax	# D.29255, tmp162
	movq	%rax, -40(%rbp)	# tmp162, end
	.loc 1 10358 0
	movq	-40(%rbp), %rax	# end, tmp163
	subq	$2, %rax	#, D.29255
	movb	$10, (%rax)	#, *_74
	.loc 1 10359 0
	movq	-40(%rbp), %rax	# end, tmp164
	subq	$1, %rax	#, D.29255
	movb	$0, (%rax)	#, *_75
	.loc 1 10360 0
	movq	-48(%rbp), %rax	# stuff, tmp165
	movq	(%rax), %rax	# stuff_14->sv_any, D.29254
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_76].xpv_cur, D.29253
	subq	$1, %rdx	#, D.29253
	movq	%rdx, 8(%rax)	# D.29253, MEM[(struct XPV *)_76].xpv_cur
	jmp	.L3578	#
.L3584:
.LBE121:
	.loc 1 10365 0
	jmp	.L3574	#
.L3578:
	.loc 1 10367 0
	movq	%r13, %rbx	# eol, s
	.loc 1 10368 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2566
	testq	%rax, %rax	# PL_rsfp.2566
	je	.L3586	#,
	.loc 1 10369 0
	movq	PL_rsfp(%rip), %rcx	# PL_rsfp, PL_rsfp.2567
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2568
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# PL_rsfp.2567,
	movq	%rax, %rdi	# PL_linestr.2568,
	call	S_filter_gets	#
	movq	%rax, %rbx	#, s
	.loc 1 10370 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2569
	movq	(%rax), %rax	# PL_linestr.2569_84->sv_any, D.29254
	movq	(%rax), %rax	# MEM[(struct XPV *)_85].xpv_pv, PL_linestart.2570
	movq	%rax, PL_linestart(%rip)	# PL_linestart.2570, PL_linestart
	movq	PL_linestart(%rip), %rax	# PL_linestart, PL_linestart.2571
	movq	%rax, PL_bufptr(%rip)	# PL_linestart.2571, PL_bufptr
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.2572
	movq	%rax, PL_oldbufptr(%rip)	# PL_bufptr.2572, PL_oldbufptr
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2573
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldbufptr.2573, PL_oldoldbufptr
	.loc 1 10371 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.2574
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2575
	movq	(%rax), %rax	# PL_linestr.2575_91->sv_any, D.29254
	movq	8(%rax), %rax	# MEM[(struct XPV *)_92].xpv_cur, D.29253
	addq	%rdx, %rax	# PL_bufptr.2574, PL_bufend.2576
	movq	%rax, PL_bufend(%rip)	# PL_bufend.2576, PL_bufend
	.loc 1 10372 0
	movq	$0, PL_last_uni(%rip)	#, PL_last_uni
	movq	PL_last_uni(%rip), %rax	# PL_last_uni, PL_last_uni.2577
	movq	%rax, PL_last_lop(%rip)	# PL_last_uni.2577, PL_last_lop
	.loc 1 10373 0
	testq	%rbx, %rbx	# s
	jne	.L3586	#,
	.loc 1 10374 0
	movq	PL_bufptr(%rip), %rbx	# PL_bufptr, s
	.loc 1 10375 0
	jmp	.L3574	#
.L3586:
	.loc 1 10378 0
	movq	%rbx, %rdi	# s,
	call	S_incline	#
.L3569:
	.loc 1 10324 0 discriminator 1
	cmpb	$0, -50(%rbp)	#, needargs
	je	.L3587	#,
.L3574:
	.loc 1 10381 0
	movq	-48(%rbp), %rax	# stuff, tmp166
	movq	(%rax), %rax	# stuff_14->sv_any, D.29254
	movq	8(%rax), %rax	# MEM[(struct XPV *)_97].xpv_cur, D.29253
	testq	%rax, %rax	# D.29253
	je	.L3588	#,
	.loc 1 10382 0
	movl	$1, PL_expect(%rip)	#, PL_expect
	.loc 1 10383 0
	cmpb	$0, -50(%rbp)	#, needargs
	je	.L3589	#,
	.loc 1 10384 0
	movl	$10, PL_lex_state(%rip)	#, PL_lex_state
	.loc 1 10385 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.2578
	cltq
	movl	$0, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.2578_99].ival
	.loc 1 10386 0
	movl	$44, %edi	#,
	call	S_force_next	#
	jmp	.L3590	#
.L3589:
	.loc 1 10389 0
	movl	$1, PL_lex_state(%rip)	#, PL_lex_state
.L3590:
	.loc 1 10390 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2579
	movzbl	37(%rax), %eax	# PL_curcop.2579_100->op_private, D.29256
	movzbl	%al, %eax	# D.29256, D.29257
	andl	$8, %eax	#, D.29257
	testl	%eax, %eax	# D.29257
	jne	.L3591	#,
	.loc 1 10391 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2580
	testq	%rax, %rax	# PL_linestr.2580
	je	.L3592	#,
	.loc 1 10391 0 is_stmt 0 discriminator 1
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2581
	movl	12(%rax), %eax	# PL_linestr.2581_105->sv_flags, D.29258
	andl	$536870912, %eax	#, D.29258
	testl	%eax, %eax	# D.29258
	je	.L3592	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2582
	movzbl	37(%rax), %eax	# PL_curcop.2582_108->op_private, D.29256
	movzbl	%al, %eax	# D.29256, D.29257
	andl	$8, %eax	#, D.29257
	testl	%eax, %eax	# D.29257
	je	.L3593	#,
.L3592:
	.loc 1 10391 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.2583
	andl	$8388608, %eax	#, D.29258
	testl	%eax, %eax	# D.29258
	je	.L3594	#,
.L3593:
	.loc 1 10391 0 discriminator 1
	movq	-48(%rbp), %rax	# stuff, tmp168
	movq	(%rax), %rax	# stuff_14->sv_any, D.29254
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_114].xpv_cur, D.29253
	movq	-48(%rbp), %rax	# stuff, tmp169
	movq	(%rax), %rax	# stuff_14->sv_any, D.29254
	movq	(%rax), %rax	# MEM[(struct XPV *)_116].xpv_pv, D.29255
	movq	%rdx, %rsi	# D.29253,
	movq	%rax, %rdi	# D.29255,
	call	Perl_is_utf8_string	#
	testb	%al, %al	# D.29251
	je	.L3594	#,
	.loc 1 10392 0 is_stmt 1
	movq	-48(%rbp), %rax	# stuff, tmp170
	movl	12(%rax), %eax	# stuff_14->sv_flags, D.29258
	orl	$536870912, %eax	#, D.29258
	movl	%eax, %edx	# D.29258, D.29258
	movq	-48(%rbp), %rax	# stuff, tmp171
	movl	%edx, 12(%rax)	# D.29258, stuff_14->sv_flags
	jmp	.L3591	#
.L3594:
	.loc 1 10393 0
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.2584
	testq	%rax, %rax	# PL_encoding.2584
	je	.L3591	#,
	.loc 1 10394 0
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.2585
	movq	-48(%rbp), %rax	# stuff, tmp172
	movq	%rdx, %rsi	# PL_encoding.2585,
	movq	%rax, %rdi	# tmp172,
	call	Perl_sv_recode_to_utf8	#
.L3591:
	.loc 1 10396 0
	movl	PL_nexttoke(%rip), %r12d	# PL_nexttoke, PL_nexttoke.2586
	movq	-48(%rbp), %rax	# stuff, tmp173
	movq	%rax, %rdx	# tmp173,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movslq	%r12d, %rdx	# PL_nexttoke.2586, tmp174
	movq	%rax, PL_nextval(,%rdx,8)	# D.29259, PL_nextval[PL_nexttoke.2586_123].opval
	.loc 1 10397 0
	movl	$260, %edi	#,
	call	S_force_next	#
	.loc 1 10398 0
	movl	PL_nexttoke(%rip), %eax	# PL_nexttoke, PL_nexttoke.2587
	cltq
	movl	$116, PL_nextval(,%rax,8)	#, PL_nextval[PL_nexttoke.2587_125].ival
	.loc 1 10399 0
	movl	$286, %edi	#,
	call	S_force_next	#
	jmp	.L3595	#
.L3588:
	.loc 1 10402 0
	movq	-48(%rbp), %rax	# stuff, tmp176
	movq	%rax, %rdi	# tmp176,
	call	Perl_sv_free	#
	.loc 1 10403 0
	cmpb	$0, -49(%rbp)	#, eofmt
	je	.L3596	#,
	.loc 1 10404 0
	movl	$0, PL_lex_formbrack(%rip)	#, PL_lex_formbrack
.L3596:
	.loc 1 10405 0
	movq	%rbx, PL_bufptr(%rip)	# s, PL_bufptr
.L3595:
	.loc 1 10407 0
	movq	%rbx, %rax	# s, D.29255
	.loc 1 10408 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE47:
	.size	S_scan_formline, .-S_scan_formline
	.type	S_set_csh, @function
S_set_csh:
.LFB48:
	.loc 1 10412 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 10414 0
	movl	PL_cshlen(%rip), %eax	# PL_cshlen, PL_cshlen.2588
	testl	%eax, %eax	# PL_cshlen.2588
	jne	.L3598	#,
	.loc 1 10415 0
	movq	PL_cshname(%rip), %rax	# PL_cshname, PL_cshname.2589
	movq	%rax, %rdi	# PL_cshname.2589,
	call	strlen	#
	movl	%eax, PL_cshlen(%rip)	# PL_cshlen.2590, PL_cshlen
.L3598:
	.loc 1 10417 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE48:
	.size	S_set_csh, .-S_set_csh
	.globl	Perl_start_subparse
	.type	Perl_start_subparse, @function
Perl_start_subparse:
.LFB49:
	.loc 1 10421 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -36(%rbp)	# is_format, is_format
	movl	%esi, -40(%rbp)	# flags, flags
	.loc 1 10422 0
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, tmp92
	movl	%eax, -28(%rbp)	# tmp92, oldsavestack_ix
	.loc 1 10423 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, tmp93
	movq	%rax, -24(%rbp)	# tmp93, outsidecv
	.loc 1 10428 0
	movl	$PL_subline, %edi	#,
	call	Perl_save_I32	#
	.loc 1 10429 0
	movq	PL_subname(%rip), %rax	# PL_subname, PL_subname.2592
	movq	%rax, %rdi	# PL_subname.2592,
	call	Perl_save_item	#
	.loc 1 10430 0
	movl	$PL_compcv, %edi	#,
	call	Perl_save_sptr	#
	.loc 1 10432 0
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, PL_compcv(%rip)	# PL_compcv.2593, PL_compcv
	.loc 1 10433 0
	cmpl	$0, -36(%rbp)	#, is_format
	je	.L3601	#,
	.loc 1 10433 0 is_stmt 0 discriminator 1
	movl	$14, %eax	#, iftmp.2594
	jmp	.L3602	#
.L3601:
	.loc 1 10433 0 discriminator 2
	movl	$12, %eax	#, iftmp.2594
.L3602:
	.loc 1 10433 0 discriminator 3
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.2595
	movl	%eax, %esi	# iftmp.2594,
	movq	%rdx, %rdi	# PL_compcv.2595,
	call	Perl_sv_upgrade	#
	.loc 1 10434 0 is_stmt 1 discriminator 3
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.2596
	movq	(%rax), %rax	# PL_compcv.2596_11->sv_any, D.29261
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.2597
	movq	(%rdx), %rdx	# PL_compcv.2597_13->sv_any, D.29261
	movzwl	136(%rdx), %ecx	# _14->xcv_flags, D.29262
	movl	-40(%rbp), %edx	# flags, tmp94
	orl	%ecx, %edx	# D.29262, D.29262
	movw	%dx, 136(%rax)	# D.29262, _12->xcv_flags
	.loc 1 10436 0 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2598
	movl	72(%rax), %eax	# PL_curcop.2598_19->cop_line, D.29263
	movl	%eax, PL_subline(%rip)	# PL_subline.2599, PL_subline
	.loc 1 10437 0 discriminator 3
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.2600
	movq	(%rax), %rbx	# PL_compcv.2600_22->sv_any, D.29261
	movl	$6, %edi	#,
	call	Perl_pad_new	#
	movq	%rax, 120(%rbx)	# D.29264, _23->xcv_padlist
	.loc 1 10438 0 discriminator 3
	movq	-24(%rbp), %rax	# outsidecv, tmp95
	movq	%rax, PL_Sv(%rip)	# tmp95, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.2602
	testq	%rax, %rax	# PL_Sv.2602
	je	.L3604	#,
	.loc 1 10438 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.2603
	movl	8(%rax), %edx	# PL_Sv.2603_26->sv_refcnt, D.29263
	addl	$1, %edx	#, D.29263
	movl	%edx, 8(%rax)	# D.29263, PL_Sv.2603_26->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.2603_26->sv_refcnt, D.29263
	testl	%eax, %eax	# D.29263
	je	.L3604	#,
	.loc 1 10438 0
	nop
.L3604:
	.loc 1 10438 0 discriminator 4
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.2604
	movq	(%rax), %rax	# PL_compcv.2604_32->sv_any, D.29261
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.2605
	movq	%rdx, 128(%rax)	# PL_Sv.2605, _33->xcv_outside
	.loc 1 10439 0 is_stmt 1 discriminator 4
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.2606
	movq	(%rax), %rax	# PL_compcv.2606_35->sv_any, D.29261
	movl	PL_cop_seqmax(%rip), %edx	# PL_cop_seqmax, PL_cop_seqmax.2607
	movl	%edx, 140(%rax)	# PL_cop_seqmax.2607, _36->xcv_outside_seq
	.loc 1 10446 0 discriminator 4
	movl	-28(%rbp), %eax	# oldsavestack_ix, D.29265
	.loc 1 10447 0 discriminator 4
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE49:
	.size	Perl_start_subparse, .-Perl_start_subparse
	.globl	Perl_yywarn
	.type	Perl_yywarn, @function
Perl_yywarn:
.LFB50:
	.loc 1 10454 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# s, s
	.loc 1 10455 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.2608
	orl	$2, %eax	#, PL_in_eval.2609
	movl	%eax, PL_in_eval(%rip)	# PL_in_eval.2609, PL_in_eval
	.loc 1 10456 0
	movq	-8(%rbp), %rax	# s, tmp65
	movq	%rax, %rdi	# tmp65,
	call	Perl_yyerror	#
	.loc 1 10457 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.2610
	andl	$-3, %eax	#, PL_in_eval.2611
	movl	%eax, PL_in_eval(%rip)	# PL_in_eval.2611, PL_in_eval
	.loc 1 10458 0
	movl	$0, %eax	#, D.29266
	.loc 1 10459 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE50:
	.size	Perl_yywarn, .-Perl_yywarn
	.section	.rodata
.LC208:
	.string	"at EOF"
.LC209:
	.string	"next token ???"
.LC210:
	.string	"at end of line"
.LC211:
	.string	"within pattern"
.LC212:
	.string	"within string"
.LC213:
	.string	"next char "
.LC214:
	.string	"^%c"
.LC215:
	.string	"%c"
.LC216:
	.string	"\\%03o"
.LC217:
	.string	" at %s line %ld, "
.LC218:
	.string	"near \"%.*s\"\n"
.LC219:
	.string	"%s\n"
	.align 8
.LC220:
	.string	"  (Might be a runaway multi-line %c%c string starting on line %ld)\n"
.LC221:
	.string	"%_"
.LC222:
	.string	"%_%s has too many errors.\n"
.LC223:
	.string	"%s has too many errors.\n"
	.text
	.globl	Perl_yyerror
	.type	Perl_yyerror, @function
Perl_yyerror:
.LFB51:
	.loc 1 10463 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -56(%rbp)	# s, s
	.loc 1 10464 0
	movq	$0, -32(%rbp)	#, where
	.loc 1 10465 0
	movq	$0, -24(%rbp)	#, context
	.loc 1 10466 0
	movl	$-1, -36(%rbp)	#, contlen
	.loc 1 10469 0
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2612
	testl	%eax, %eax	# PL_yychar.2612
	je	.L3609	#,
	.loc 1 10469 0 is_stmt 0 discriminator 1
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2613
	cmpl	$59, %eax	#, PL_yychar.2613
	jne	.L3610	#,
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2614
	testq	%rax, %rax	# PL_rsfp.2614
	jne	.L3610	#,
.L3609:
	.loc 1 10470 0 is_stmt 1
	movq	$.LC208, -32(%rbp)	#, where
	jmp	.L3611	#
.L3610:
	.loc 1 10471 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.2615
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2616
	cmpq	%rax, %rdx	# PL_oldoldbufptr.2616, PL_bufptr.2615
	jbe	.L3612	#,
	.loc 1 10471 0 is_stmt 0 discriminator 1
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.2617
	movq	%rax, %rdx	# PL_bufptr.2617, PL_bufptr.2618
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2619
	subq	%rax, %rdx	# PL_oldoldbufptr.2620, D.29267
	movq	%rdx, %rax	# D.29267, D.29267
	cmpq	$199, %rax	#, D.29267
	jg	.L3612	#,
	.loc 1 10472 0 is_stmt 1 discriminator 1
	movq	PL_oldoldbufptr(%rip), %rdx	# PL_oldoldbufptr, PL_oldoldbufptr.2621
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2622
	.loc 1 10471 0 discriminator 1
	cmpq	%rax, %rdx	# PL_oldbufptr.2622, PL_oldoldbufptr.2621
	je	.L3612	#,
	.loc 1 10472 0
	movq	PL_oldbufptr(%rip), %rdx	# PL_oldbufptr, PL_oldbufptr.2623
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.2624
	cmpq	%rax, %rdx	# PL_bufptr.2624, PL_oldbufptr.2623
	je	.L3612	#,
	.loc 1 10481 0
	jmp	.L3613	#
.L3614:
	.loc 1 10482 0
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2625
	addq	$1, %rax	#, PL_oldoldbufptr.2626
	movq	%rax, PL_oldoldbufptr(%rip)	# PL_oldoldbufptr.2626, PL_oldoldbufptr
.L3613:
	.loc 1 10481 0 discriminator 1
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2627
	movzbl	(%rax), %eax	# *PL_oldoldbufptr.2627_29, D.29268
	cmpb	$32, %al	#, D.29268
	je	.L3614	#,
	.loc 1 10481 0 is_stmt 0 discriminator 2
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2628
	movzbl	(%rax), %eax	# *PL_oldoldbufptr.2628_31, D.29268
	cmpb	$9, %al	#, D.29268
	je	.L3614	#,
	.loc 1 10481 0 discriminator 1
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2629
	movzbl	(%rax), %eax	# *PL_oldoldbufptr.2629_33, D.29268
	cmpb	$10, %al	#, D.29268
	je	.L3614	#,
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2630
	movzbl	(%rax), %eax	# *PL_oldoldbufptr.2630_35, D.29268
	cmpb	$13, %al	#, D.29268
	je	.L3614	#,
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2631
	movzbl	(%rax), %eax	# *PL_oldoldbufptr.2631_37, D.29268
	cmpb	$12, %al	#, D.29268
	je	.L3614	#,
	.loc 1 10484 0 is_stmt 1
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, tmp239
	movq	%rax, -24(%rbp)	# tmp239, context
	.loc 1 10485 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.2632
	movq	%rax, %rdx	# PL_bufptr.2632, PL_bufptr.2633
	movq	PL_oldoldbufptr(%rip), %rax	# PL_oldoldbufptr, PL_oldoldbufptr.2634
	subq	%rax, %rdx	# PL_oldoldbufptr.2635, D.29267
	movq	%rdx, %rax	# D.29267, D.29267
	movl	%eax, -36(%rbp)	# D.29267, contlen
	jmp	.L3611	#
.L3612:
	.loc 1 10487 0
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.2636
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2637
	cmpq	%rax, %rdx	# PL_oldbufptr.2637, PL_bufptr.2636
	jbe	.L3615	#,
	.loc 1 10487 0 is_stmt 0 discriminator 1
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.2638
	movq	%rax, %rdx	# PL_bufptr.2638, PL_bufptr.2639
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2640
	subq	%rax, %rdx	# PL_oldbufptr.2641, D.29267
	movq	%rdx, %rax	# D.29267, D.29267
	cmpq	$199, %rax	#, D.29267
	jg	.L3615	#,
	.loc 1 10488 0 is_stmt 1 discriminator 1
	movq	PL_oldbufptr(%rip), %rdx	# PL_oldbufptr, PL_oldbufptr.2642
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.2643
	.loc 1 10487 0 discriminator 1
	cmpq	%rax, %rdx	# PL_bufptr.2643, PL_oldbufptr.2642
	je	.L3615	#,
	.loc 1 10497 0
	jmp	.L3616	#
.L3617:
	.loc 1 10498 0
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2644
	addq	$1, %rax	#, PL_oldbufptr.2645
	movq	%rax, PL_oldbufptr(%rip)	# PL_oldbufptr.2645, PL_oldbufptr
.L3616:
	.loc 1 10497 0 discriminator 1
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2646
	movzbl	(%rax), %eax	# *PL_oldbufptr.2646_57, D.29268
	cmpb	$32, %al	#, D.29268
	je	.L3617	#,
	.loc 1 10497 0 is_stmt 0 discriminator 2
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2647
	movzbl	(%rax), %eax	# *PL_oldbufptr.2647_59, D.29268
	cmpb	$9, %al	#, D.29268
	je	.L3617	#,
	.loc 1 10497 0 discriminator 1
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2648
	movzbl	(%rax), %eax	# *PL_oldbufptr.2648_61, D.29268
	cmpb	$10, %al	#, D.29268
	je	.L3617	#,
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2649
	movzbl	(%rax), %eax	# *PL_oldbufptr.2649_63, D.29268
	cmpb	$13, %al	#, D.29268
	je	.L3617	#,
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2650
	movzbl	(%rax), %eax	# *PL_oldbufptr.2650_65, D.29268
	cmpb	$12, %al	#, D.29268
	je	.L3617	#,
	.loc 1 10500 0 is_stmt 1
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, tmp240
	movq	%rax, -24(%rbp)	# tmp240, context
	.loc 1 10501 0
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.2651
	movq	%rax, %rdx	# PL_bufptr.2651, PL_bufptr.2652
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.2653
	subq	%rax, %rdx	# PL_oldbufptr.2654, D.29267
	movq	%rdx, %rax	# D.29267, D.29267
	movl	%eax, -36(%rbp)	# D.29267, contlen
	jmp	.L3611	#
.L3615:
	.loc 1 10503 0
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2655
	cmpl	$255, %eax	#, PL_yychar.2655
	jle	.L3618	#,
	.loc 1 10504 0
	movq	$.LC209, -32(%rbp)	#, where
	jmp	.L3611	#
.L3618:
	.loc 1 10509 0
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2656
	andl	$127, %eax	#, D.29269
	cmpl	$127, %eax	#, D.29269
	jne	.L3619	#,
	.loc 1 10511 0
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.2657
	cmpl	$10, %eax	#, PL_lex_state.2657
	je	.L3620	#,
	.loc 1 10512 0 discriminator 1
	movl	PL_lex_state(%rip), %eax	# PL_lex_state, PL_lex_state.2658
	.loc 1 10511 0 discriminator 1
	testl	%eax, %eax	# PL_lex_state.2658
	jne	.L3621	#,
	.loc 1 10512 0
	movl	PL_lex_defer(%rip), %eax	# PL_lex_defer, PL_lex_defer.2659
	cmpl	$10, %eax	#, PL_lex_defer.2659
	jne	.L3621	#,
.L3620:
	.loc 1 10513 0
	movq	$.LC210, -32(%rbp)	#, where
	jmp	.L3611	#
.L3621:
	.loc 1 10514 0
	movq	PL_lex_inpat(%rip), %rax	# PL_lex_inpat, PL_lex_inpat.2660
	testq	%rax, %rax	# PL_lex_inpat.2660
	je	.L3623	#,
	.loc 1 10515 0
	movq	$.LC211, -32(%rbp)	#, where
	jmp	.L3611	#
.L3623:
	.loc 1 10517 0
	movq	$.LC212, -32(%rbp)	#, where
	jmp	.L3611	#
.L3619:
.LBB122:
	.loc 1 10520 0
	movl	$10, %esi	#,
	movl	$.LC213, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, %rdi	# D.29270,
	call	Perl_sv_2mortal	#
	movq	%rax, -16(%rbp)	# tmp241, where_sv
	.loc 1 10521 0
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2661
	cmpl	$31, %eax	#, PL_yychar.2661
	jg	.L3624	#,
	.loc 1 10522 0
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2663
	cmpl	$96, %eax	#, PL_yychar.2663
	jle	.L3625	#,
	.loc 1 10522 0 is_stmt 0 discriminator 1
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2664
	cmpl	$122, %eax	#, PL_yychar.2664
	jg	.L3625	#,
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2665
	subl	$32, %eax	#, D.29269
	xorl	$64, %eax	#, iftmp.2662
	jmp	.L3626	#
.L3625:
	.loc 1 10522 0 discriminator 2
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2666
	xorl	$64, %eax	#, iftmp.2662
.L3626:
	.loc 1 10522 0 discriminator 3
	movq	-16(%rbp), %rcx	# where_sv, tmp242
	movl	%eax, %edx	# iftmp.2662,
	movl	$.LC214, %esi	#,
	movq	%rcx, %rdi	# tmp242,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L3627	#
.L3624:
	.loc 1 10523 0 is_stmt 1
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2667
	andl	$-128, %eax	#, D.29269
	testl	%eax, %eax	# D.29269
	jne	.L3628	#,
	.loc 1 10523 0 is_stmt 0 discriminator 1
	call	__ctype_b_loc	#
	movq	(%rax), %rax	# *_99, D.29272
	movl	PL_yychar(%rip), %edx	# PL_yychar, PL_yychar.2668
	movslq	%edx, %rdx	# PL_yychar.2668, D.29273
	addq	%rdx, %rdx	# D.29273
	addq	%rdx, %rax	# D.29273, D.29272
	movzwl	(%rax), %eax	# *_104, D.29274
	movzwl	%ax, %eax	# D.29274, D.29269
	andl	$16384, %eax	#, D.29269
	testl	%eax, %eax	# D.29269
	je	.L3628	#,
	.loc 1 10524 0 is_stmt 1
	movl	PL_yychar(%rip), %edx	# PL_yychar, PL_yychar.2669
	movq	-16(%rbp), %rax	# where_sv, tmp243
	movl	$.LC215, %esi	#,
	movq	%rax, %rdi	# tmp243,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L3627	#
.L3628:
	.loc 1 10526 0
	movl	PL_yychar(%rip), %eax	# PL_yychar, PL_yychar.2670
	movzbl	%al, %edx	# PL_yychar.2670, D.29269
	movq	-16(%rbp), %rax	# where_sv, tmp244
	movl	$.LC216, %esi	#,
	movq	%rax, %rdi	# tmp244,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
.L3627:
	.loc 1 10527 0
	movq	-16(%rbp), %rax	# where_sv, tmp245
	movq	(%rax), %rax	# where_sv_88->sv_any, D.29275
	movq	(%rax), %rax	# MEM[(struct XPV *)_111].xpv_pv, tmp246
	movq	%rax, -32(%rbp)	# tmp246, where
.L3611:
.LBE122:
	.loc 1 10529 0
	movq	-56(%rbp), %rax	# s, tmp247
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp247,
	call	Perl_newSVpv	#
	movq	%rax, %rdi	# D.29270,
	call	Perl_sv_2mortal	#
	movq	%rax, -8(%rbp)	# tmp248, msg
	.loc 1 10531 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2671
	movl	72(%rax), %eax	# PL_curcop.2671_117->cop_line, D.29276
	.loc 1 10530 0
	movl	%eax, %edx	# D.29276, D.29267
	.loc 1 10531 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2673
	movq	56(%rax), %rax	# PL_curcop.2673_120->cop_filegv, D.29277
	.loc 1 10530 0
	testq	%rax, %rax	# D.29277
	je	.L3629	#,
	.loc 1 10531 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2674
	movq	56(%rax), %rax	# PL_curcop.2674_122->cop_filegv, D.29277
	movq	(%rax), %rax	# _123->sv_any, D.29278
	movq	56(%rax), %rax	# _124->xgv_gp, D.29279
	movq	(%rax), %rax	# _125->gp_sv, D.29270
	testq	%rax, %rax	# D.29270
	je	.L3629	#,
	.loc 1 10531 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2676
	movq	56(%rax), %rax	# PL_curcop.2676_127->cop_filegv, D.29277
	testq	%rax, %rax	# D.29277
	je	.L3630	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2677
	movq	56(%rax), %rax	# PL_curcop.2677_129->cop_filegv, D.29277
	movq	(%rax), %rax	# _130->sv_any, D.29278
	movq	56(%rax), %rax	# _131->xgv_gp, D.29279
	movq	(%rax), %rax	# _132->gp_sv, iftmp.2675
	jmp	.L3631	#
.L3630:
	.loc 1 10531 0 discriminator 2
	movl	$0, %eax	#, iftmp.2675
.L3631:
	.loc 1 10531 0 discriminator 3
	movq	(%rax), %rax	# iftmp.2675_7->sv_any, D.29275
	.loc 1 10530 0 is_stmt 1 discriminator 3
	movq	(%rax), %rax	# MEM[(struct XPV *)_135].xpv_pv, iftmp.2672
	jmp	.L3632	#
.L3629:
	.loc 1 10530 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.2672
.L3632:
	.loc 1 10530 0 discriminator 2
	movq	-8(%rbp), %rdi	# msg, tmp249
	movq	%rdx, %rcx	# D.29267,
	movq	%rax, %rdx	# iftmp.2672,
	movl	$.LC217, %esi	#,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	.loc 1 10532 0 is_stmt 1 discriminator 2
	cmpq	$0, -24(%rbp)	#, context
	je	.L3633	#,
	.loc 1 10533 0
	movq	-24(%rbp), %rcx	# context, tmp250
	movl	-36(%rbp), %edx	# contlen, tmp251
	movq	-8(%rbp), %rax	# msg, tmp252
	movl	$.LC218, %esi	#,
	movq	%rax, %rdi	# tmp252,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L3634	#
.L3633:
	.loc 1 10535 0
	movq	-32(%rbp), %rdx	# where, tmp253
	movq	-8(%rbp), %rax	# msg, tmp254
	movl	$.LC219, %esi	#,
	movq	%rax, %rdi	# tmp254,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
.L3634:
	.loc 1 10536 0
	movl	PL_multi_start(%rip), %edx	# PL_multi_start, PL_multi_start.2678
	movl	PL_multi_end(%rip), %eax	# PL_multi_end, PL_multi_end.2679
	cmpl	%eax, %edx	# PL_multi_end.2679, PL_multi_start.2678
	jge	.L3635	#,
	.loc 1 10536 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2680
	movl	72(%rax), %edx	# PL_curcop.2680_140->cop_line, D.29276
	movl	PL_multi_end(%rip), %eax	# PL_multi_end, PL_multi_end.2681
	subl	%eax, %edx	# PL_multi_end.2682, D.29276
	movl	%edx, %eax	# D.29276, D.29276
	cmpl	$1, %eax	#, D.29276
	ja	.L3635	#,
	.loc 1 10537 0 is_stmt 1
	movl	PL_multi_start(%rip), %eax	# PL_multi_start, PL_multi_start.2683
	movslq	%eax, %rsi	# PL_multi_start.2683, D.29267
	movl	PL_multi_close(%rip), %ecx	# PL_multi_close, PL_multi_close.2684
	movl	PL_multi_open(%rip), %edx	# PL_multi_open, PL_multi_open.2685
	movq	-8(%rbp), %rax	# msg, tmp255
	movq	%rsi, %r8	# D.29267,
	movl	$.LC220, %esi	#,
	movq	%rax, %rdi	# tmp255,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	.loc 1 10540 0
	movl	$0, PL_multi_end(%rip)	#, PL_multi_end
.L3635:
	.loc 1 10542 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.2686
	andl	$2, %eax	#, D.29269
	testl	%eax, %eax	# D.29269
	je	.L3636	#,
	.loc 1 10542 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2687
	movq	80(%rax), %rax	# PL_curcop.2687_151->cop_warnings, D.29270
	testq	%rax, %rax	# D.29270
	je	.L3637	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2688
	movq	80(%rax), %rax	# PL_curcop.2688_153->cop_warnings, D.29270
	cmpq	$16, %rax	#, D.29270
	je	.L3637	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2689
	movq	80(%rax), %rax	# PL_curcop.2689_155->cop_warnings, D.29270
	cmpq	$32, %rax	#, D.29270
	je	.L3636	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2690
	movq	80(%rax), %rax	# PL_curcop.2690_157->cop_warnings, D.29270
	movq	(%rax), %rax	# _158->sv_any, D.29275
	movq	(%rax), %rax	# MEM[(struct XPV *)_159].xpv_pv, D.29280
	addq	$7, %rax	#, D.29280
	movzbl	(%rax), %eax	# *_161, D.29268
	movsbl	%al, %eax	# D.29268, D.29269
	andl	$1, %eax	#, D.29269
	testl	%eax, %eax	# D.29269
	je	.L3636	#,
.L3637:
	.loc 1 10543 0 is_stmt 1
	movq	-8(%rbp), %rax	# msg, tmp256
	movq	%rax, %rdx	# tmp256,
	movl	$.LC221, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	jmp	.L3638	#
.L3636:
	.loc 1 10545 0
	movq	-8(%rbp), %rax	# msg, tmp257
	movq	%rax, %rdi	# tmp257,
	call	Perl_qerror	#
.L3638:
	.loc 1 10546 0
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.2691
	cmpl	$9, %eax	#, PL_error_count.2691
	jle	.L3639	#,
	.loc 1 10547 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.2692
	testl	%eax, %eax	# PL_in_eval.2692
	je	.L3640	#,
	.loc 1 10547 0 is_stmt 0 discriminator 1
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.2693
	movq	(%rax), %rax	# PL_errgv.2693_167->sv_any, D.29278
	movq	56(%rax), %rax	# _168->xgv_gp, D.29279
	movq	(%rax), %rax	# _169->gp_sv, D.29270
	movq	(%rax), %rax	# _170->sv_any, D.29275
	movq	8(%rax), %rax	# MEM[(struct XPV *)_171].xpv_cur, D.29273
	testq	%rax, %rax	# D.29273
	je	.L3640	#,
	.loc 1 10549 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2695
	movq	56(%rax), %rax	# PL_curcop.2695_173->cop_filegv, D.29277
	.loc 1 10548 0
	testq	%rax, %rax	# D.29277
	je	.L3641	#,
	.loc 1 10549 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2696
	movq	56(%rax), %rax	# PL_curcop.2696_175->cop_filegv, D.29277
	movq	(%rax), %rax	# _176->sv_any, D.29278
	movq	56(%rax), %rax	# _177->xgv_gp, D.29279
	movq	(%rax), %rax	# _178->gp_sv, D.29270
	testq	%rax, %rax	# D.29270
	je	.L3641	#,
	.loc 1 10549 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2698
	movq	56(%rax), %rax	# PL_curcop.2698_180->cop_filegv, D.29277
	testq	%rax, %rax	# D.29277
	je	.L3642	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2699
	movq	56(%rax), %rax	# PL_curcop.2699_182->cop_filegv, D.29277
	movq	(%rax), %rax	# _183->sv_any, D.29278
	movq	56(%rax), %rax	# _184->xgv_gp, D.29279
	movq	(%rax), %rax	# _185->gp_sv, iftmp.2697
	jmp	.L3643	#
.L3642:
	.loc 1 10549 0 discriminator 2
	movl	$0, %eax	#, iftmp.2697
.L3643:
	.loc 1 10549 0 discriminator 3
	movq	(%rax), %rax	# iftmp.2697_9->sv_any, D.29275
	.loc 1 10548 0 is_stmt 1 discriminator 3
	movq	(%rax), %rax	# MEM[(struct XPV *)_188].xpv_pv, iftmp.2694
	jmp	.L3644	#
.L3641:
	.loc 1 10548 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.2694
.L3644:
	.loc 1 10549 0 is_stmt 1 discriminator 2
	movq	PL_errgv(%rip), %rdx	# PL_errgv, PL_errgv.2700
	movq	(%rdx), %rdx	# PL_errgv.2700_191->sv_any, D.29278
	movq	56(%rdx), %rdx	# _192->xgv_gp, D.29279
	.loc 1 10548 0 discriminator 2
	movq	(%rdx), %rcx	# _193->gp_sv, D.29270
	movq	%rax, %rdx	# iftmp.2694,
	movq	%rcx, %rsi	# D.29270,
	movl	$.LC222, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L3639	#
.L3640:
	.loc 1 10552 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2702
	movq	56(%rax), %rax	# PL_curcop.2702_195->cop_filegv, D.29277
	.loc 1 10551 0
	testq	%rax, %rax	# D.29277
	je	.L3645	#,
	.loc 1 10552 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2703
	movq	56(%rax), %rax	# PL_curcop.2703_197->cop_filegv, D.29277
	movq	(%rax), %rax	# _198->sv_any, D.29278
	movq	56(%rax), %rax	# _199->xgv_gp, D.29279
	movq	(%rax), %rax	# _200->gp_sv, D.29270
	testq	%rax, %rax	# D.29270
	je	.L3645	#,
	.loc 1 10552 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2705
	movq	56(%rax), %rax	# PL_curcop.2705_202->cop_filegv, D.29277
	testq	%rax, %rax	# D.29277
	je	.L3646	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2706
	movq	56(%rax), %rax	# PL_curcop.2706_204->cop_filegv, D.29277
	movq	(%rax), %rax	# _205->sv_any, D.29278
	movq	56(%rax), %rax	# _206->xgv_gp, D.29279
	movq	(%rax), %rax	# _207->gp_sv, iftmp.2704
	jmp	.L3647	#
.L3646:
	.loc 1 10552 0 discriminator 2
	movl	$0, %eax	#, iftmp.2704
.L3647:
	.loc 1 10552 0 discriminator 3
	movq	(%rax), %rax	# iftmp.2704_11->sv_any, D.29275
	.loc 1 10551 0 is_stmt 1 discriminator 3
	movq	(%rax), %rax	# MEM[(struct XPV *)_210].xpv_pv, iftmp.2701
	jmp	.L3648	#
.L3645:
	.loc 1 10551 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.2701
.L3648:
	.loc 1 10551 0 discriminator 2
	movq	%rax, %rsi	# iftmp.2701,
	movl	$.LC223, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3639:
	.loc 1 10554 0 is_stmt 1
	movl	$0, PL_in_my(%rip)	#, PL_in_my
	.loc 1 10555 0
	movq	$0, PL_in_my_stash(%rip)	#, PL_in_my_stash
	.loc 1 10556 0
	movl	$0, %eax	#, D.29269
	.loc 1 10557 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE51:
	.size	Perl_yyerror, .-Perl_yyerror
	.section	.rodata
	.align 8
.LC224:
	.string	"Unsupported script encoding UTF32-LE"
	.align 8
.LC225:
	.string	"Unsupported script encoding UTF32-BE"
	.text
	.type	S_swallow_bom, @function
S_swallow_bom:
.LFB52:
	.loc 1 10564 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# s, s
	.loc 1 10566 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2707
	movq	(%rax), %rax	# PL_linestr.2707_7->sv_any, D.29297
	movq	8(%rax), %rax	# MEM[(struct XPV *)_8].xpv_cur, tmp153
	movq	%rax, -24(%rbp)	# tmp153, slen
	.loc 1 10567 0
	movq	-40(%rbp), %rax	# s, tmp154
	movzbl	(%rax), %eax	# *s_10(D), D.29298
	movzbl	%al, %eax	# D.29298, D.29299
	cmpl	$239, %eax	#, D.29299
	je	.L3652	#,
	cmpl	$239, %eax	#, D.29299
	jg	.L3653	#,
	testl	%eax, %eax	# D.29299
	je	.L3654	#,
	jmp	.L3651	#
.L3653:
	cmpl	$254, %eax	#, D.29299
	je	.L3655	#,
	cmpl	$255, %eax	#, D.29299
	jne	.L3651	#,
	.loc 1 10569 0
	movq	-40(%rbp), %rax	# s, tmp155
	addq	$1, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_13, D.29298
	cmpb	$-2, %al	#, D.29298
	jne	.L3657	#,
	.loc 1 10571 0
	movq	-40(%rbp), %rax	# s, tmp156
	addq	$2, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_15, D.29298
	testb	%al, %al	# D.29298
	jne	.L3667	#,
	.loc 1 10571 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# s, tmp157
	addq	$3, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_17, D.29298
	testb	%al, %al	# D.29298
	jne	.L3667	#,
	.loc 1 10572 0 is_stmt 1
	movl	$.LC224, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L3667:
	.loc 1 10575 0
	addq	$2, -40(%rbp)	#, s
.L3659:
	.loc 1 10577 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2708
	cmpq	-40(%rbp), %rax	# s, PL_bufend.2708
	jbe	.L3657	#,
.LBB123:
	.loc 1 10581 0
	movl	$0, %esi	#,
	movl	$utf16rev_textfilter, %edi	#,
	call	Perl_filter_add	#
	.loc 1 10582 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2709
	movq	%rax, %rdx	# PL_bufend.2709, PL_bufend.2710
	movq	-40(%rbp), %rax	# s, s.2711
	subq	%rax, %rdx	# s.2711, D.29301
	movq	%rdx, %rax	# D.29301, tmp158
	addq	%rax, %rax	# tmp158
	addq	%rdx, %rax	# D.29301, D.29301
	movq	%rax, %rdx	# D.29301, tmp159
	shrq	$63, %rdx	#, tmp159
	addq	%rdx, %rax	# tmp159, tmp160
	sarq	%rax	# tmp161
	addq	$1, %rax	#, D.29301
	movq	%rax, %rdi	# D.29302,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp162, news
	.loc 1 10584 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2712
	movq	%rax, %rdx	# PL_bufend.2712, PL_bufend.2713
	movq	-40(%rbp), %rax	# s, s.2714
	subq	%rax, %rdx	# s.2714, D.29301
	movq	%rdx, %rax	# D.29301, D.29301
	.loc 1 10583 0
	subl	$1, %eax	#, D.29306
	movl	%eax, %edx	# D.29306, D.29299
	leaq	-28(%rbp), %rcx	#, tmp163
	movq	-8(%rbp), %rsi	# news, tmp164
	movq	-40(%rbp), %rax	# s, tmp165
	movq	%rax, %rdi	# tmp165,
	call	Perl_utf16_to_utf8_reversed	#
	.loc 1 10586 0
	movl	-28(%rbp), %eax	# newlen, newlen.2715
	movslq	%eax, %rdx	# newlen.2715, D.29302
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2716
	movq	-8(%rbp), %rcx	# news, tmp166
	movq	%rcx, %rsi	# tmp166,
	movq	%rax, %rdi	# PL_linestr.2716,
	call	Perl_sv_setpvn	#
	.loc 1 10587 0
	movq	-8(%rbp), %rax	# news, tmp167
	movq	%rax, %rdi	# tmp167,
	call	Perl_safesysfree	#
	.loc 1 10588 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2717
	movq	PL_linestr(%rip), %rdx	# PL_linestr, PL_linestr.2718
	movl	12(%rdx), %edx	# PL_linestr.2718_96->sv_flags, D.29303
	orl	$536870912, %edx	#, D.29303
	movl	%edx, 12(%rax)	# D.29303, PL_linestr.2717_95->sv_flags
	.loc 1 10589 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2719
	movq	(%rax), %rax	# PL_linestr.2719_99->sv_any, D.29297
	movq	(%rax), %rax	# MEM[(struct XPV *)_100].xpv_pv, tmp168
	movq	%rax, -40(%rbp)	# tmp168, s
	.loc 1 10590 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2720
	movq	(%rax), %rax	# PL_linestr.2720_102->sv_any, D.29297
	movq	(%rax), %rdx	# MEM[(struct XPV *)_103].xpv_pv, D.29304
	movl	-28(%rbp), %eax	# newlen, newlen.2721
	cltq
	addq	%rdx, %rax	# D.29304, PL_bufend.2722
	movq	%rax, PL_bufend(%rip)	# PL_bufend.2722, PL_bufend
.LBE123:
	.loc 1 10596 0
	jmp	.L3660	#
.L3657:
	jmp	.L3660	#
.L3655:
	.loc 1 10598 0
	movq	-40(%rbp), %rax	# s, tmp169
	addq	$1, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_20, D.29298
	cmpb	$-1, %al	#, D.29298
	jne	.L3661	#,
	.loc 1 10601 0
	addq	$2, -40(%rbp)	#, s
.L3662:
	.loc 1 10603 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2723
	cmpq	-40(%rbp), %rax	# s, PL_bufend.2723
	jbe	.L3661	#,
.LBB124:
	.loc 1 10607 0
	movl	$0, %esi	#,
	movl	$utf16_textfilter, %edi	#,
	call	Perl_filter_add	#
	.loc 1 10608 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2724
	movq	%rax, %rdx	# PL_bufend.2724, PL_bufend.2725
	movq	-40(%rbp), %rax	# s, s.2726
	subq	%rax, %rdx	# s.2726, D.29301
	movq	%rdx, %rax	# D.29301, tmp170
	addq	%rax, %rax	# tmp170
	addq	%rdx, %rax	# D.29301, D.29301
	movq	%rax, %rdx	# D.29301, tmp171
	shrq	$63, %rdx	#, tmp171
	addq	%rdx, %rax	# tmp171, tmp172
	sarq	%rax	# tmp173
	addq	$1, %rax	#, D.29301
	movq	%rax, %rdi	# D.29302,
	call	Perl_safesysmalloc	#
	movq	%rax, -16(%rbp)	# tmp174, news
	.loc 1 10610 0
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2727
	movq	%rax, %rdx	# PL_bufend.2727, PL_bufend.2728
	movq	-40(%rbp), %rax	# s, s.2729
	subq	%rax, %rdx	# s.2729, D.29301
	movq	%rdx, %rax	# D.29301, D.29301
	.loc 1 10609 0
	movl	%eax, %edx	# D.29301, D.29299
	leaq	-28(%rbp), %rcx	#, tmp175
	movq	-16(%rbp), %rsi	# news, tmp176
	movq	-40(%rbp), %rax	# s, tmp177
	movq	%rax, %rdi	# tmp177,
	call	Perl_utf16_to_utf8	#
	.loc 1 10612 0
	movl	-28(%rbp), %eax	# newlen, newlen.2730
	movslq	%eax, %rdx	# newlen.2730, D.29302
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2731
	movq	-16(%rbp), %rcx	# news, tmp178
	movq	%rcx, %rsi	# tmp178,
	movq	%rax, %rdi	# PL_linestr.2731,
	call	Perl_sv_setpvn	#
	.loc 1 10613 0
	movq	-16(%rbp), %rax	# news, tmp179
	movq	%rax, %rdi	# tmp179,
	call	Perl_safesysfree	#
	.loc 1 10614 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2732
	movq	PL_linestr(%rip), %rdx	# PL_linestr, PL_linestr.2733
	movl	12(%rdx), %edx	# PL_linestr.2733_57->sv_flags, D.29303
	orl	$536870912, %edx	#, D.29303
	movl	%edx, 12(%rax)	# D.29303, PL_linestr.2732_56->sv_flags
	.loc 1 10615 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2734
	movq	(%rax), %rax	# PL_linestr.2734_60->sv_any, D.29297
	movq	(%rax), %rax	# MEM[(struct XPV *)_61].xpv_pv, tmp180
	movq	%rax, -40(%rbp)	# tmp180, s
	.loc 1 10616 0
	movq	PL_linestr(%rip), %rax	# PL_linestr, PL_linestr.2735
	movq	(%rax), %rax	# PL_linestr.2735_63->sv_any, D.29297
	movq	(%rax), %rdx	# MEM[(struct XPV *)_64].xpv_pv, D.29304
	movl	-28(%rbp), %eax	# newlen, newlen.2736
	cltq
	addq	%rdx, %rax	# D.29304, PL_bufend.2737
	movq	%rax, PL_bufend(%rip)	# PL_bufend.2737, PL_bufend
.LBE124:
	.loc 1 10622 0
	jmp	.L3660	#
.L3661:
	jmp	.L3660	#
.L3652:
	.loc 1 10624 0
	cmpq	$2, -24(%rbp)	#, slen
	jbe	.L3663	#,
	.loc 1 10624 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# s, tmp181
	addq	$1, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_23, D.29298
	cmpb	$-69, %al	#, D.29298
	jne	.L3663	#,
	movq	-40(%rbp), %rax	# s, tmp182
	addq	$2, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_25, D.29298
	cmpb	$-65, %al	#, D.29298
	jne	.L3663	#,
	.loc 1 10626 0 is_stmt 1
	addq	$3, -40(%rbp)	#, s
	.loc 1 10628 0
	jmp	.L3660	#
.L3663:
	jmp	.L3660	#
.L3654:
	.loc 1 10630 0
	cmpq	$3, -24(%rbp)	#, slen
	jbe	.L3651	#,
	.loc 1 10631 0
	movq	-40(%rbp), %rax	# s, tmp183
	addq	$1, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_28, D.29298
	testb	%al, %al	# D.29298
	jne	.L3664	#,
	.loc 1 10632 0
	movq	-40(%rbp), %rax	# s, tmp184
	addq	$2, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_30, D.29298
	cmpb	$-2, %al	#, D.29298
	jne	.L3651	#,
	.loc 1 10632 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# s, tmp185
	addq	$3, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_32, D.29298
	cmpb	$-1, %al	#, D.29298
	jne	.L3651	#,
	.loc 1 10634 0 is_stmt 1
	movl	$.LC225, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L3651	#
.L3664:
	.loc 1 10637 0
	movq	-40(%rbp), %rax	# s, tmp186
	addq	$2, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_34, D.29298
	testb	%al, %al	# D.29298
	jne	.L3651	#,
	.loc 1 10637 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# s, tmp187
	addq	$3, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_36, D.29298
	testb	%al, %al	# D.29298
	je	.L3651	#,
	.loc 1 10642 0 is_stmt 1
	jmp	.L3662	#
.L3651:
	.loc 1 10646 0
	cmpq	$3, -24(%rbp)	#, slen
	jbe	.L3660	#,
	.loc 1 10646 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# s, tmp188
	addq	$1, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_69, D.29298
	testb	%al, %al	# D.29298
	jne	.L3660	#,
	movq	-40(%rbp), %rax	# s, tmp189
	addq	$2, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_71, D.29298
	testb	%al, %al	# D.29298
	je	.L3660	#,
	movq	-40(%rbp), %rax	# s, tmp190
	addq	$3, %rax	#, D.29300
	movzbl	(%rax), %eax	# *_73, D.29298
	testb	%al, %al	# D.29298
	jne	.L3660	#,
	.loc 1 10651 0 is_stmt 1
	jmp	.L3659	#
.L3660:
	.loc 1 10654 0
	movq	-40(%rbp), %rax	# s, D.29304
	.loc 1 10655 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE52:
	.size	S_swallow_bom, .-S_swallow_bom
	.type	restore_rsfp, @function
restore_rsfp:
.LFB53:
	.loc 1 10664 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# f, f
	.loc 1 10665 0
	movq	-24(%rbp), %rax	# f, tmp65
	movq	%rax, -8(%rbp)	# tmp65, fp
	.loc 1 10667 0
	call	Perl_PerlIO_stdin	#
	movq	PL_rsfp(%rip), %rdx	# PL_rsfp, PL_rsfp.2738
	cmpq	%rdx, %rax	# PL_rsfp.2738, D.29311
	jne	.L3669	#,
	.loc 1 10668 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2739
	movq	%rax, %rdi	# PL_rsfp.2739,
	call	Perl_PerlIO_clearerr	#
	jmp	.L3670	#
.L3669:
	.loc 1 10669 0
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2740
	testq	%rax, %rax	# PL_rsfp.2740
	je	.L3670	#,
	.loc 1 10669 0 is_stmt 0 discriminator 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2741
	cmpq	-8(%rbp), %rax	# fp, PL_rsfp.2741
	je	.L3670	#,
	.loc 1 10670 0 is_stmt 1
	movq	PL_rsfp(%rip), %rax	# PL_rsfp, PL_rsfp.2742
	movq	%rax, %rdi	# PL_rsfp.2742,
	call	Perl_PerlIO_close	#
.L3670:
	.loc 1 10671 0
	movq	-8(%rbp), %rax	# fp, tmp66
	movq	%rax, PL_rsfp(%rip)	# tmp66, PL_rsfp
	.loc 1 10672 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE53:
	.size	restore_rsfp, .-restore_rsfp
	.type	utf16_textfilter, @function
utf16_textfilter:
.LFB54:
	.loc 1 10677 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movl	%edi, -36(%rbp)	# idx, idx
	movq	%rsi, -48(%rbp)	# sv, sv
	movl	%edx, -40(%rbp)	# maxlen, maxlen
	.loc 1 10678 0
	movq	-48(%rbp), %rax	# sv, tmp85
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.29312
	movq	8(%rax), %rax	# MEM[(struct XPV *)_2].xpv_cur, tmp86
	movq	%rax, -16(%rbp)	# tmp86, old
	.loc 1 10679 0
	movl	-36(%rbp), %eax	# idx, tmp87
	leal	1(%rax), %ecx	#, D.29313
	movl	-40(%rbp), %edx	# maxlen, tmp88
	movq	-48(%rbp), %rax	# sv, tmp89
	movq	%rax, %rsi	# tmp89,
	movl	%ecx, %edi	# D.29313,
	call	Perl_filter_read	#
	movl	%eax, -20(%rbp)	# tmp90, count
	.loc 1 10683 0
	cmpl	$0, -20(%rbp)	#, count
	je	.L3672	#,
.LBB125:
	.loc 1 10686 0
	movq	-48(%rbp), %rax	# sv, tmp91
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.29312
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_8].xpv_cur, D.29314
	movq	%rdx, %rax	# D.29314, tmp92
	addq	%rax, %rax	# tmp92
	addq	%rdx, %rax	# D.29314, D.29314
	shrq	%rax	# D.29314
	addq	$1, %rax	#, D.29314
	movq	%rax, %rdi	# D.29314,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp93, tmps
	.loc 1 10687 0
	movq	-48(%rbp), %rax	# sv, tmp94
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.29312
	movq	(%rax), %rcx	# MEM[(struct XPV *)_14].xpv_pv, D.29315
	movq	-16(%rbp), %rdx	# old, tmp95
	movq	-8(%rbp), %rax	# tmps, tmp96
	movq	%rcx, %rsi	# D.29315,
	movq	%rax, %rdi	# tmp96,
	call	memcpy	#
	.loc 1 10689 0
	movq	-48(%rbp), %rax	# sv, tmp97
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.29312
	movq	8(%rax), %rax	# MEM[(struct XPV *)_16].xpv_cur, D.29314
	.loc 1 10688 0
	movl	%eax, %edx	# D.29314, D.29316
	movq	-16(%rbp), %rax	# old, tmp98
	subl	%eax, %edx	# D.29316, D.29316
	movl	%edx, %eax	# D.29316, D.29316
	movq	-16(%rbp), %rdx	# old, tmp99
	movq	-8(%rbp), %rcx	# tmps, tmp100
	leaq	(%rcx,%rdx), %rsi	#, D.29317
	movq	-48(%rbp), %rdx	# sv, tmp101
	movq	(%rdx), %rdx	# sv_1(D)->sv_any, D.29312
	movq	(%rdx), %rcx	# MEM[(struct XPV *)_23].xpv_pv, D.29315
	movq	-16(%rbp), %rdx	# old, tmp102
	leaq	(%rcx,%rdx), %rdi	#, D.29317
	leaq	-24(%rbp), %rdx	#, tmp103
	movq	%rdx, %rcx	# tmp103,
	movl	%eax, %edx	# D.29313,
	call	Perl_utf16_to_utf8	#
	.loc 1 10690 0
	movl	-24(%rbp), %eax	# newlen, newlen.2743
	movslq	%eax, %rdx	# newlen.2743, D.29314
	movq	-16(%rbp), %rax	# old, tmp104
	addq	%rax, %rdx	# tmp104, D.29314
	movq	-8(%rbp), %rcx	# tmps, tmp105
	movq	-48(%rbp), %rax	# sv, tmp106
	movq	%rcx, %rsi	# tmp105,
	movq	%rax, %rdi	# tmp106,
	call	Perl_sv_usepvn	#
.L3672:
.LBE125:
	.loc 1 10693 0
	movq	-48(%rbp), %rax	# sv, tmp107
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.29312
	movq	8(%rax), %rax	# MEM[(struct XPV *)_29].xpv_cur, D.29314
	.loc 1 10694 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE54:
	.size	utf16_textfilter, .-utf16_textfilter
	.type	utf16rev_textfilter, @function
utf16rev_textfilter:
.LFB55:
	.loc 1 10698 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movl	%edi, -36(%rbp)	# idx, idx
	movq	%rsi, -48(%rbp)	# sv, sv
	movl	%edx, -40(%rbp)	# maxlen, maxlen
	.loc 1 10699 0
	movq	-48(%rbp), %rax	# sv, tmp83
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.29319
	movq	8(%rax), %rax	# MEM[(struct XPV *)_2].xpv_cur, tmp84
	movq	%rax, -16(%rbp)	# tmp84, old
	.loc 1 10700 0
	movl	-36(%rbp), %eax	# idx, tmp85
	leal	1(%rax), %ecx	#, D.29320
	movl	-40(%rbp), %edx	# maxlen, tmp86
	movq	-48(%rbp), %rax	# sv, tmp87
	movq	%rax, %rsi	# tmp87,
	movl	%ecx, %edi	# D.29320,
	call	Perl_filter_read	#
	movl	%eax, -20(%rbp)	# tmp88, count
	.loc 1 10704 0
	cmpl	$0, -20(%rbp)	#, count
	je	.L3675	#,
.LBB126:
	.loc 1 10707 0
	movq	-48(%rbp), %rax	# sv, tmp89
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.29319
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_8].xpv_cur, D.29321
	movq	%rdx, %rax	# D.29321, tmp90
	addq	%rax, %rax	# tmp90
	addq	%rdx, %rax	# D.29321, D.29321
	shrq	%rax	# D.29321
	addq	$1, %rax	#, D.29321
	movq	%rax, %rdi	# D.29321,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp91, tmps
	.loc 1 10708 0
	movq	-48(%rbp), %rax	# sv, tmp92
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.29319
	movq	(%rax), %rcx	# MEM[(struct XPV *)_14].xpv_pv, D.29322
	movq	-16(%rbp), %rdx	# old, tmp93
	movq	-8(%rbp), %rax	# tmps, tmp94
	movq	%rcx, %rsi	# D.29322,
	movq	%rax, %rdi	# tmp94,
	call	memcpy	#
	.loc 1 10710 0
	movq	-48(%rbp), %rax	# sv, tmp95
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.29319
	movq	8(%rax), %rax	# MEM[(struct XPV *)_16].xpv_cur, D.29321
	.loc 1 10709 0
	movl	%eax, %edx	# D.29321, D.29323
	movq	-16(%rbp), %rax	# old, tmp96
	subl	%eax, %edx	# D.29323, D.29323
	movl	%edx, %eax	# D.29323, D.29323
	movq	-16(%rbp), %rdx	# old, tmp97
	movq	-8(%rbp), %rcx	# tmps, tmp98
	leaq	(%rcx,%rdx), %rsi	#, D.29324
	movq	-48(%rbp), %rdx	# sv, tmp99
	movq	(%rdx), %rdx	# sv_1(D)->sv_any, D.29319
	movq	(%rdx), %rcx	# MEM[(struct XPV *)_23].xpv_pv, D.29322
	movq	-16(%rbp), %rdx	# old, tmp100
	leaq	(%rcx,%rdx), %rdi	#, D.29324
	leaq	-24(%rbp), %rdx	#, tmp101
	movq	%rdx, %rcx	# tmp101,
	movl	%eax, %edx	# D.29320,
	call	Perl_utf16_to_utf8	#
	.loc 1 10711 0
	movl	-24(%rbp), %eax	# newlen, newlen.2744
	movslq	%eax, %rdx	# newlen.2744, D.29321
	movq	-16(%rbp), %rax	# old, tmp102
	addq	%rax, %rdx	# tmp102, D.29321
	movq	-8(%rbp), %rcx	# tmps, tmp103
	movq	-48(%rbp), %rax	# sv, tmp104
	movq	%rcx, %rsi	# tmp103,
	movq	%rax, %rdi	# tmp104,
	call	Perl_sv_usepvn	#
.L3675:
.LBE126:
	.loc 1 10714 0
	movl	-20(%rbp), %eax	# count, D.29325
	.loc 1 10715 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE55:
	.size	utf16rev_textfilter, .-utf16rev_textfilter
	.section	.rodata
	.align 8
.LC226:
	.string	"Integer overflow in decimal number"
	.text
	.globl	Perl_scan_vstring
	.type	Perl_scan_vstring, @function
Perl_scan_vstring:
.LFB56:
	.loc 1 10734 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$120, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -120(%rbp)	# s, s
	movq	%rsi, -128(%rbp)	# sv, sv
	.loc 1 10734 0
	movq	%fs:40, %rax	#, tmp189
	movq	%rax, -24(%rbp)	# tmp189, D.29334
	xorl	%eax, %eax	# tmp189
	.loc 1 10735 0
	movq	-120(%rbp), %rax	# s, tmp134
	movq	%rax, -112(%rbp)	# tmp134, pos
	.loc 1 10736 0
	movq	-120(%rbp), %rax	# s, tmp135
	movq	%rax, -72(%rbp)	# tmp135, start
	.loc 1 10737 0
	movq	-112(%rbp), %rax	# pos, tmp136
	movzbl	(%rax), %eax	# *pos_14, D.29327
	cmpb	$118, %al	#, D.29327
	jne	.L3678	#,
	.loc 1 10737 0 is_stmt 0 discriminator 1
	addq	$1, -112(%rbp)	#, pos
	.loc 1 10738 0 is_stmt 1 discriminator 1
	jmp	.L3679	#
.L3678:
	.loc 1 10738 0 is_stmt 0
	jmp	.L3679	#
.L3682:
	.loc 1 10739 0 is_stmt 1
	addq	$1, -112(%rbp)	#, pos
.L3679:
	.loc 1 10738 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2745
	cmpq	%rax, -112(%rbp)	# PL_bufend.2745, pos
	jae	.L3680	#,
	.loc 1 10738 0 is_stmt 0 discriminator 2
	movq	-112(%rbp), %rax	# pos, tmp137
	movzbl	(%rax), %eax	# *pos_5, D.29327
	cmpb	$47, %al	#, D.29327
	jle	.L3681	#,
	.loc 1 10738 0 discriminator 1
	movq	-112(%rbp), %rax	# pos, tmp138
	movzbl	(%rax), %eax	# *pos_5, D.29327
	cmpb	$57, %al	#, D.29327
	jle	.L3682	#,
.L3681:
	.loc 1 10738 0 discriminator 2
	movq	-112(%rbp), %rax	# pos, tmp139
	movzbl	(%rax), %eax	# *pos_5, D.29327
	cmpb	$95, %al	#, D.29327
	je	.L3682	#,
.L3680:
	.loc 1 10740 0 is_stmt 1
	movq	-112(%rbp), %rax	# pos, tmp140
	movzbl	(%rax), %eax	# *pos_5, D.29327
	cmpb	$46, %al	#, D.29327
	je	.L3683	#,
.LBB127:
	.loc 1 10742 0
	movq	-112(%rbp), %rax	# pos, tmp141
	movq	%rax, -104(%rbp)	# tmp141, next
	.loc 1 10743 0
	jmp	.L3684	#
.L3686:
	.loc 1 10744 0
	addq	$1, -104(%rbp)	#, next
.L3684:
	.loc 1 10743 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2746
	cmpq	%rax, -104(%rbp)	# PL_bufend.2746, next
	jae	.L3685	#,
	.loc 1 10743 0 is_stmt 0 discriminator 2
	movq	-104(%rbp), %rax	# next, tmp142
	movzbl	(%rax), %eax	# *next_8, D.29327
	cmpb	$32, %al	#, D.29327
	je	.L3686	#,
	.loc 1 10743 0 discriminator 1
	movq	-104(%rbp), %rax	# next, tmp143
	movzbl	(%rax), %eax	# *next_8, D.29327
	cmpb	$9, %al	#, D.29327
	je	.L3686	#,
	movq	-104(%rbp), %rax	# next, tmp144
	movzbl	(%rax), %eax	# *next_8, D.29327
	cmpb	$10, %al	#, D.29327
	je	.L3686	#,
	movq	-104(%rbp), %rax	# next, tmp145
	movzbl	(%rax), %eax	# *next_8, D.29327
	cmpb	$13, %al	#, D.29327
	je	.L3686	#,
	movq	-104(%rbp), %rax	# next, tmp146
	movzbl	(%rax), %eax	# *next_8, D.29327
	cmpb	$12, %al	#, D.29327
	je	.L3686	#,
.L3685:
	.loc 1 10745 0 is_stmt 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2747
	movq	%rax, %rdx	# PL_bufend.2747, PL_bufend.2748
	movq	-104(%rbp), %rax	# next, next.2749
	subq	%rax, %rdx	# next.2749, D.29328
	movq	%rdx, %rax	# D.29328, D.29328
	cmpq	$1, %rax	#, D.29328
	jle	.L3683	#,
	.loc 1 10745 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# next, tmp147
	movzbl	(%rax), %eax	# *next_8, D.29327
	cmpb	$61, %al	#, D.29327
	jne	.L3683	#,
	movq	-104(%rbp), %rax	# next, tmp148
	addq	$1, %rax	#, D.29326
	movzbl	(%rax), %eax	# *_37, D.29327
	cmpb	$62, %al	#, D.29327
	jne	.L3683	#,
	.loc 1 10747 0 is_stmt 1
	movq	-112(%rbp), %rdx	# pos, pos.2750
	movq	-120(%rbp), %rax	# s, s.2751
	subq	%rax, %rdx	# s.2751, D.29328
	movq	%rdx, %rax	# D.29328, D.29328
	movq	%rax, %rdx	# D.29328, D.29329
	movq	-120(%rbp), %rcx	# s, tmp149
	movq	-128(%rbp), %rax	# sv, tmp150
	movq	%rcx, %rsi	# tmp149,
	movq	%rax, %rdi	# tmp150,
	call	Perl_sv_setpvn	#
	.loc 1 10748 0
	movq	-112(%rbp), %rax	# pos, D.29326
	jmp	.L3687	#
.L3683:
.LBE127:
	.loc 1 10752 0
	movq	-112(%rbp), %rax	# pos, tmp151
	movzbl	(%rax), %eax	# *pos_5, D.29327
	cmpb	$64, %al	#, D.29327
	jle	.L3688	#,
	.loc 1 10752 0 is_stmt 0 discriminator 2
	movq	-112(%rbp), %rax	# pos, tmp152
	movzbl	(%rax), %eax	# *pos_5, D.29327
	cmpb	$90, %al	#, D.29327
	jle	.L3689	#,
.L3688:
	.loc 1 10752 0 discriminator 1
	movq	-112(%rbp), %rax	# pos, tmp153
	movzbl	(%rax), %eax	# *pos_5, D.29327
	cmpb	$96, %al	#, D.29327
	jle	.L3690	#,
	movq	-112(%rbp), %rax	# pos, tmp154
	movzbl	(%rax), %eax	# *pos_5, D.29327
	cmpb	$122, %al	#, D.29327
	jle	.L3689	#,
.L3690:
.LBB128:
	.loc 1 10757 0 is_stmt 1
	movq	-120(%rbp), %rax	# s, tmp155
	movzbl	(%rax), %eax	# *s_13(D), D.29327
	cmpb	$118, %al	#, D.29327
	jne	.L3691	#,
	.loc 1 10757 0 is_stmt 0 discriminator 1
	addq	$1, -120(%rbp)	#, s
.L3691:
	.loc 1 10759 0 is_stmt 1
	movq	-128(%rbp), %rax	# sv, tmp156
	movl	$0, %edx	#,
	movl	$.LC17, %esi	#,
	movq	%rax, %rdi	# tmp156,
	call	Perl_sv_setpvn	#
.L3703:
	.loc 1 10762 0
	movq	$0, -96(%rbp)	#, rev
.LBB129:
	.loc 1 10765 0
	movq	-112(%rbp), %rax	# pos, tmp157
	movq	%rax, -88(%rbp)	# tmp157, end
	.loc 1 10766 0
	movq	$1, -80(%rbp)	#, mult
	.loc 1 10767 0
	jmp	.L3692	#
.L3695:
.LBB130:
	.loc 1 10769 0
	movq	-88(%rbp), %rax	# end, tmp158
	movzbl	(%rax), %eax	# *end_54, D.29327
	cmpb	$95, %al	#, D.29327
	jne	.L3693	#,
	.loc 1 10770 0
	jmp	.L3692	#
.L3693:
	.loc 1 10771 0
	movq	-96(%rbp), %rax	# rev, tmp159
	movq	%rax, -64(%rbp)	# tmp159, orev
	.loc 1 10772 0
	movq	-88(%rbp), %rax	# end, tmp160
	movzbl	(%rax), %eax	# *end_54, D.29327
	movsbl	%al, %eax	# D.29327, D.29330
	subl	$48, %eax	#, D.29330
	cltq
	imulq	-80(%rbp), %rax	# mult, D.29329
	addq	%rax, -96(%rbp)	# D.29329, rev
	.loc 1 10773 0
	movq	-80(%rbp), %rdx	# mult, tmp161
	movq	%rdx, %rax	# tmp161, tmp162
	salq	$2, %rax	#, tmp162
	addq	%rdx, %rax	# tmp161, tmp162
	addq	%rax, %rax	# tmp163
	movq	%rax, -80(%rbp)	# tmp162, mult
	.loc 1 10774 0
	movq	-64(%rbp), %rax	# orev, tmp164
	cmpq	-96(%rbp), %rax	# rev, tmp164
	jbe	.L3692	#,
	.loc 1 10774 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2752
	movq	80(%rax), %rax	# PL_curcop.2752_64->cop_warnings, D.29331
	testq	%rax, %rax	# D.29331
	je	.L3694	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2753
	movq	80(%rax), %rax	# PL_curcop.2753_66->cop_warnings, D.29331
	cmpq	$16, %rax	#, D.29331
	je	.L3694	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2754
	movq	80(%rax), %rax	# PL_curcop.2754_68->cop_warnings, D.29331
	cmpq	$32, %rax	#, D.29331
	je	.L3692	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2755
	movq	80(%rax), %rax	# PL_curcop.2755_70->cop_warnings, D.29331
	movq	(%rax), %rax	# _71->sv_any, D.29332
	movq	(%rax), %rax	# MEM[(struct XPV *)_72].xpv_pv, D.29326
	addq	$3, %rax	#, D.29326
	movzbl	(%rax), %eax	# *_74, D.29327
	movsbl	%al, %eax	# D.29327, D.29330
	andl	$64, %eax	#, D.29330
	testl	%eax, %eax	# D.29330
	je	.L3692	#,
.L3694:
	.loc 1 10775 0 is_stmt 1
	movl	$.LC226, %esi	#,
	movl	$15, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L3692:
.LBE130:
	.loc 1 10767 0 discriminator 1
	subq	$1, -88(%rbp)	#, end
	movq	-88(%rbp), %rax	# end, tmp165
	cmpq	-120(%rbp), %rax	# s, tmp165
	jae	.L3695	#,
.LBE129:
	.loc 1 10784 0
	movq	-96(%rbp), %rdx	# rev, tmp166
	leaq	-48(%rbp), %rax	#, tmp167
	movq	%rdx, %rsi	# tmp166,
	movq	%rax, %rdi	# tmp167,
	call	Perl_uvuni_to_utf8	#
	movq	%rax, -56(%rbp)	# tmp168, tmpend
	.loc 1 10785 0
	movq	-56(%rbp), %rdx	# tmpend, tmpend.2756
	leaq	-48(%rbp), %rax	#, tmpbuf.2757
	subq	%rax, %rdx	# tmpbuf.2757, D.29328
	movq	%rdx, %rax	# D.29328, D.29328
	movq	%rax, %rdx	# D.29328, D.29329
	leaq	-48(%rbp), %rsi	#, tmp169
	movq	-128(%rbp), %rax	# sv, tmp170
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp170,
	call	Perl_sv_catpvn_flags	#
	.loc 1 10786 0
	cmpq	$127, -96(%rbp)	#, rev
	jbe	.L3696	#,
	.loc 1 10787 0
	movq	-128(%rbp), %rax	# sv, tmp171
	movl	12(%rax), %eax	# sv_43(D)->sv_flags, D.29333
	orl	$536870912, %eax	#, D.29333
	movl	%eax, %edx	# D.29333, D.29333
	movq	-128(%rbp), %rax	# sv, tmp172
	movl	%edx, 12(%rax)	# D.29333, sv_43(D)->sv_flags
.L3696:
	.loc 1 10788 0
	movq	-112(%rbp), %rax	# pos, tmp173
	leaq	1(%rax), %rdx	#, D.29326
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2758
	cmpq	%rax, %rdx	# PL_bufend.2758, D.29326
	jae	.L3697	#,
	.loc 1 10788 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# pos, tmp174
	movzbl	(%rax), %eax	# *pos_6, D.29327
	cmpb	$46, %al	#, D.29327
	jne	.L3697	#,
	movq	-112(%rbp), %rax	# pos, tmp175
	addq	$1, %rax	#, D.29326
	movzbl	(%rax), %eax	# *_88, D.29327
	cmpb	$47, %al	#, D.29327
	jle	.L3697	#,
	movq	-112(%rbp), %rax	# pos, tmp176
	addq	$1, %rax	#, D.29326
	movzbl	(%rax), %eax	# *_90, D.29327
	cmpb	$57, %al	#, D.29327
	jg	.L3697	#,
	.loc 1 10789 0 is_stmt 1
	addq	$1, -112(%rbp)	#, pos
	movq	-112(%rbp), %rax	# pos, tmp177
	movq	%rax, -120(%rbp)	# tmp177, s
	.loc 1 10794 0
	jmp	.L3698	#
.L3697:
	.loc 1 10791 0
	movq	-112(%rbp), %rax	# pos, tmp178
	movq	%rax, -120(%rbp)	# tmp178, s
	.loc 1 10792 0
	nop
	.loc 1 10797 0
	movq	-128(%rbp), %rax	# sv, tmp182
	movl	12(%rax), %eax	# sv_43(D)->sv_flags, D.29333
	orl	$67371008, %eax	#, D.29333
	movl	%eax, %edx	# D.29333, D.29333
	movq	-128(%rbp), %rax	# sv, tmp183
	movl	%edx, 12(%rax)	# D.29333, sv_43(D)->sv_flags
	.loc 1 10798 0
	movq	-112(%rbp), %rdx	# pos, pos.2760
	movq	-72(%rbp), %rax	# start, start.2761
	subq	%rax, %rdx	# start.2761, D.29328
	movq	%rdx, %rax	# D.29328, D.29328
	movl	%eax, %ecx	# D.29328, D.29330
	movq	-72(%rbp), %rdx	# start, tmp184
	movq	-128(%rbp), %rax	# sv, tmp185
	movl	%ecx, %r8d	# D.29330,
	movq	%rdx, %rcx	# tmp184,
	movl	$86, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp185,
	call	Perl_sv_magic	#
	.loc 1 10799 0
	movq	-128(%rbp), %rax	# sv, tmp186
	movl	12(%rax), %eax	# sv_43(D)->sv_flags, D.29333
	orb	$128, %ah	#, D.29333
	movl	%eax, %edx	# D.29333, D.29333
	movq	-128(%rbp), %rax	# sv, tmp187
	movl	%edx, 12(%rax)	# D.29333, sv_43(D)->sv_flags
	jmp	.L3689	#
.L3702:
	.loc 1 10795 0
	addq	$1, -112(%rbp)	#, pos
.L3698:
	.loc 1 10794 0 discriminator 1
	movq	PL_bufend(%rip), %rax	# PL_bufend, PL_bufend.2759
	cmpq	%rax, -112(%rbp)	# PL_bufend.2759, pos
	jae	.L3700	#,
	.loc 1 10794 0 is_stmt 0 discriminator 2
	movq	-112(%rbp), %rax	# pos, tmp179
	movzbl	(%rax), %eax	# *pos_7, D.29327
	cmpb	$47, %al	#, D.29327
	jle	.L3701	#,
	.loc 1 10794 0 discriminator 1
	movq	-112(%rbp), %rax	# pos, tmp180
	movzbl	(%rax), %eax	# *pos_7, D.29327
	cmpb	$57, %al	#, D.29327
	jle	.L3702	#,
.L3701:
	.loc 1 10794 0 discriminator 2
	movq	-112(%rbp), %rax	# pos, tmp181
	movzbl	(%rax), %eax	# *pos_7, D.29327
	cmpb	$95, %al	#, D.29327
	je	.L3702	#,
.L3700:
	.loc 1 10796 0 is_stmt 1
	jmp	.L3703	#
.L3689:
.LBE128:
	.loc 1 10801 0
	movq	-120(%rbp), %rax	# s, D.29326
.L3687:
	.loc 1 10802 0
	movq	-24(%rbp), %rbx	# D.29334, tmp190
	xorq	%fs:40, %rbx	#, tmp190
	je	.L3704	#,
	call	__stack_chk_fail	#
.L3704:
	addq	$120, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE56:
	.size	Perl_scan_vstring, .-Perl_scan_vstring
	.section	.rodata
.LC227:
	.string	"octal"
.LC228:
	.string	"hexadecimal"
	.data
	.align 32
	.type	bases.12133, @object
	.size	bases.12133, 40
bases.12133:
	.quad	.LC17
	.quad	.LC205
	.quad	.LC17
	.quad	.LC227
	.quad	.LC228
	.section	.rodata
.LC229:
	.string	"Binary"
.LC230:
	.string	"Octal"
.LC231:
	.string	"Hexadecimal"
	.data
	.align 32
	.type	Bases.12134, @object
	.size	Bases.12134, 40
Bases.12134:
	.quad	.LC17
	.quad	.LC229
	.quad	.LC17
	.quad	.LC230
	.quad	.LC231
	.section	.rodata
	.align 8
.LC232:
	.string	"0b11111111111111111111111111111111"
.LC233:
	.string	"037777777777"
.LC234:
	.string	"0xffffffff"
	.data
	.align 32
	.type	maxima.12135, @object
	.size	maxima.12135, 40
maxima.12135:
	.quad	.LC17
	.quad	.LC232
	.quad	.LC17
	.quad	.LC233
	.quad	.LC234
	.align 32
	.type	nvshift.12132, @object
	.size	nvshift.12132, 40
nvshift.12132:
	.long	0
	.long	1072693248
	.long	0
	.long	1073741824
	.long	0
	.long	1074790400
	.long	0
	.long	1075838976
	.long	0
	.long	1076887552
	.align 16
	.type	number_too_long.12124, @object
	.size	number_too_long.12124, 16
number_too_long.12124:
	.string	"Number too long"
	.section	.rodata
	.align 8
.LC15:
	.long	0
	.long	1083129856
	.align 8
.LC202:
	.long	4292870144
	.long	1106247679
	.text
.Letext0:
	.file 2 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 3 "/usr/include/x86_64-linux-gnu/sys/types.h"
	.file 4 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
	.file 5 "/usr/include/dirent.h"
	.file 6 "perl.h"
	.file 7 "op.h"
	.file 8 "cop.h"
	.file 9 "sv.h"
	.file 10 "regexp.h"
	.file 11 "gv.h"
	.file 12 "mg.h"
	.file 13 "av.h"
	.file 14 "hv.h"
	.file 15 "cv.h"
	.file 16 "handy.h"
	.file 17 "perlio.h"
	.file 18 "/usr/include/ctype.h"
	.file 19 "pad.h"
	.file 20 "perly.h"
	.file 21 "utf8.h"
	.file 22 "opcode.h"
	.file 23 "intrpvar.h"
	.file 24 "thrdvar.h"
	.file 25 "opnames.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x529d
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF1081
	.byte	0x1
	.long	.LASF1082
	.long	.LASF1083
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.long	.LASF0
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.long	.LASF1
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.long	.LASF2
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF3
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x4
	.long	.LASF8
	.byte	0x2
	.byte	0x8c
	.long	0x5e
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF7
	.uleb128 0x5
	.byte	0x8
	.uleb128 0x4
	.long	.LASF9
	.byte	0x2
	.byte	0xb5
	.long	0x5e
	.uleb128 0x6
	.byte	0x8
	.long	0x8a
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF10
	.uleb128 0x4
	.long	.LASF11
	.byte	0x3
	.byte	0x56
	.long	0x65
	.uleb128 0x4
	.long	.LASF12
	.byte	0x3
	.byte	0x6d
	.long	0x79
	.uleb128 0x4
	.long	.LASF13
	.byte	0x4
	.byte	0xd4
	.long	0x42
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF14
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF15
	.uleb128 0x7
	.long	0x57
	.uleb128 0x8
	.byte	0x4
	.byte	0x12
	.byte	0x30
	.long	0x121
	.uleb128 0x9
	.long	.LASF16
	.sleb128 256
	.uleb128 0x9
	.long	.LASF17
	.sleb128 512
	.uleb128 0x9
	.long	.LASF18
	.sleb128 1024
	.uleb128 0x9
	.long	.LASF19
	.sleb128 2048
	.uleb128 0x9
	.long	.LASF20
	.sleb128 4096
	.uleb128 0x9
	.long	.LASF21
	.sleb128 8192
	.uleb128 0x9
	.long	.LASF22
	.sleb128 16384
	.uleb128 0x9
	.long	.LASF23
	.sleb128 32768
	.uleb128 0x9
	.long	.LASF24
	.sleb128 1
	.uleb128 0x9
	.long	.LASF25
	.sleb128 2
	.uleb128 0x9
	.long	.LASF26
	.sleb128 4
	.uleb128 0x9
	.long	.LASF27
	.sleb128 8
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x127
	.uleb128 0xa
	.long	0x8a
	.uleb128 0xb
	.long	0x8a
	.long	0x13c
	.uleb128 0xc
	.long	0x70
	.byte	0xff
	.byte	0
	.uleb128 0xd
	.string	"DIR"
	.byte	0x5
	.byte	0x80
	.long	0x147
	.uleb128 0xe
	.long	.LASF214
	.uleb128 0xf
	.string	"IV"
	.byte	0x6
	.value	0x52b
	.long	0x5e
	.uleb128 0xf
	.string	"UV"
	.byte	0x6
	.value	0x52c
	.long	0x42
	.uleb128 0xf
	.string	"NV"
	.byte	0x6
	.value	0x5f3
	.long	0x16d
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.long	.LASF28
	.uleb128 0x10
	.long	.LASF29
	.byte	0x6
	.value	0x7d3
	.long	0xa7
	.uleb128 0xf
	.string	"OP"
	.byte	0x6
	.value	0x7d5
	.long	0x18b
	.uleb128 0x11
	.string	"op"
	.byte	0x28
	.byte	0x7
	.byte	0xe2
	.long	0x1f7
	.uleb128 0x12
	.long	.LASF30
	.byte	0x7
	.byte	0xe3
	.long	0x1080
	.byte	0
	.uleb128 0x12
	.long	.LASF31
	.byte	0x7
	.byte	0xe3
	.long	0x1080
	.byte	0x8
	.uleb128 0x12
	.long	.LASF32
	.byte	0x7
	.byte	0xe3
	.long	0x1a83
	.byte	0x10
	.uleb128 0x12
	.long	.LASF33
	.byte	0x7
	.byte	0xe3
	.long	0x10f9
	.byte	0x18
	.uleb128 0x12
	.long	.LASF34
	.byte	0x7
	.byte	0xe3
	.long	0xeb7
	.byte	0x20
	.uleb128 0x12
	.long	.LASF35
	.byte	0x7
	.byte	0xe3
	.long	0xeb7
	.byte	0x22
	.uleb128 0x12
	.long	.LASF36
	.byte	0x7
	.byte	0xe3
	.long	0xead
	.byte	0x24
	.uleb128 0x12
	.long	.LASF37
	.byte	0x7
	.byte	0xe3
	.long	0xead
	.byte	0x25
	.byte	0
	.uleb128 0xf
	.string	"COP"
	.byte	0x6
	.value	0x7d6
	.long	0x203
	.uleb128 0x11
	.string	"cop"
	.byte	0x60
	.byte	0x8
	.byte	0x10
	.long	0x2d0
	.uleb128 0x12
	.long	.LASF30
	.byte	0x8
	.byte	0x11
	.long	0x1080
	.byte	0
	.uleb128 0x12
	.long	.LASF31
	.byte	0x8
	.byte	0x11
	.long	0x1080
	.byte	0x8
	.uleb128 0x12
	.long	.LASF32
	.byte	0x8
	.byte	0x11
	.long	0x1a83
	.byte	0x10
	.uleb128 0x12
	.long	.LASF33
	.byte	0x8
	.byte	0x11
	.long	0x10f9
	.byte	0x18
	.uleb128 0x12
	.long	.LASF34
	.byte	0x8
	.byte	0x11
	.long	0xeb7
	.byte	0x20
	.uleb128 0x12
	.long	.LASF35
	.byte	0x8
	.byte	0x11
	.long	0xeb7
	.byte	0x22
	.uleb128 0x12
	.long	.LASF36
	.byte	0x8
	.byte	0x11
	.long	0xead
	.byte	0x24
	.uleb128 0x12
	.long	.LASF37
	.byte	0x8
	.byte	0x11
	.long	0xead
	.byte	0x25
	.uleb128 0x12
	.long	.LASF38
	.byte	0x8
	.byte	0x12
	.long	0x84
	.byte	0x28
	.uleb128 0x12
	.long	.LASF39
	.byte	0x8
	.byte	0x17
	.long	0x1068
	.byte	0x30
	.uleb128 0x12
	.long	.LASF40
	.byte	0x8
	.byte	0x18
	.long	0x109d
	.byte	0x38
	.uleb128 0x12
	.long	.LASF41
	.byte	0x8
	.byte	0x1a
	.long	0xecd
	.byte	0x40
	.uleb128 0x12
	.long	.LASF42
	.byte	0x8
	.byte	0x1b
	.long	0xec2
	.byte	0x44
	.uleb128 0x12
	.long	.LASF43
	.byte	0x8
	.byte	0x1c
	.long	0xed8
	.byte	0x48
	.uleb128 0x12
	.long	.LASF44
	.byte	0x8
	.byte	0x1d
	.long	0xf20
	.byte	0x50
	.uleb128 0x12
	.long	.LASF45
	.byte	0x8
	.byte	0x1e
	.long	0xf20
	.byte	0x58
	.byte	0
	.uleb128 0x10
	.long	.LASF46
	.byte	0x6
	.value	0x7db
	.long	0x2dc
	.uleb128 0x13
	.long	.LASF47
	.byte	0x70
	.byte	0x7
	.byte	0xfd
	.long	0x3ca
	.uleb128 0x12
	.long	.LASF30
	.byte	0x7
	.byte	0xfe
	.long	0x1080
	.byte	0
	.uleb128 0x12
	.long	.LASF31
	.byte	0x7
	.byte	0xfe
	.long	0x1080
	.byte	0x8
	.uleb128 0x12
	.long	.LASF32
	.byte	0x7
	.byte	0xfe
	.long	0x1a83
	.byte	0x10
	.uleb128 0x12
	.long	.LASF33
	.byte	0x7
	.byte	0xfe
	.long	0x10f9
	.byte	0x18
	.uleb128 0x12
	.long	.LASF34
	.byte	0x7
	.byte	0xfe
	.long	0xeb7
	.byte	0x20
	.uleb128 0x12
	.long	.LASF35
	.byte	0x7
	.byte	0xfe
	.long	0xeb7
	.byte	0x22
	.uleb128 0x12
	.long	.LASF36
	.byte	0x7
	.byte	0xfe
	.long	0xead
	.byte	0x24
	.uleb128 0x12
	.long	.LASF37
	.byte	0x7
	.byte	0xfe
	.long	0xead
	.byte	0x25
	.uleb128 0x12
	.long	.LASF48
	.byte	0x7
	.byte	0xff
	.long	0x1080
	.byte	0x28
	.uleb128 0x14
	.long	.LASF49
	.byte	0x7
	.value	0x100
	.long	0x1080
	.byte	0x30
	.uleb128 0x14
	.long	.LASF50
	.byte	0x7
	.value	0x101
	.long	0x1080
	.byte	0x38
	.uleb128 0x14
	.long	.LASF51
	.byte	0x7
	.value	0x102
	.long	0x1080
	.byte	0x40
	.uleb128 0x14
	.long	.LASF52
	.byte	0x7
	.value	0x103
	.long	0x1a89
	.byte	0x48
	.uleb128 0x14
	.long	.LASF53
	.byte	0x7
	.value	0x107
	.long	0x1a8f
	.byte	0x50
	.uleb128 0x14
	.long	.LASF54
	.byte	0x7
	.value	0x109
	.long	0xecd
	.byte	0x58
	.uleb128 0x14
	.long	.LASF55
	.byte	0x7
	.value	0x10a
	.long	0xecd
	.byte	0x5c
	.uleb128 0x14
	.long	.LASF56
	.byte	0x7
	.value	0x10b
	.long	0xead
	.byte	0x60
	.uleb128 0x14
	.long	.LASF57
	.byte	0x7
	.value	0x10f
	.long	0x1068
	.byte	0x68
	.byte	0
	.uleb128 0x10
	.long	.LASF58
	.byte	0x6
	.value	0x7dc
	.long	0x3d6
	.uleb128 0x15
	.long	.LASF59
	.byte	0x30
	.byte	0x7
	.value	0x14c
	.long	0x459
	.uleb128 0x14
	.long	.LASF30
	.byte	0x7
	.value	0x14d
	.long	0x1080
	.byte	0
	.uleb128 0x14
	.long	.LASF31
	.byte	0x7
	.value	0x14d
	.long	0x1080
	.byte	0x8
	.uleb128 0x14
	.long	.LASF32
	.byte	0x7
	.value	0x14d
	.long	0x1a83
	.byte	0x10
	.uleb128 0x14
	.long	.LASF33
	.byte	0x7
	.value	0x14d
	.long	0x10f9
	.byte	0x18
	.uleb128 0x14
	.long	.LASF34
	.byte	0x7
	.value	0x14d
	.long	0xeb7
	.byte	0x20
	.uleb128 0x14
	.long	.LASF35
	.byte	0x7
	.value	0x14d
	.long	0xeb7
	.byte	0x22
	.uleb128 0x14
	.long	.LASF36
	.byte	0x7
	.value	0x14d
	.long	0xead
	.byte	0x24
	.uleb128 0x14
	.long	.LASF37
	.byte	0x7
	.value	0x14d
	.long	0xead
	.byte	0x25
	.uleb128 0x14
	.long	.LASF60
	.byte	0x7
	.value	0x14e
	.long	0xf20
	.byte	0x28
	.byte	0
	.uleb128 0x10
	.long	.LASF61
	.byte	0x6
	.value	0x7e1
	.long	0x465
	.uleb128 0x15
	.long	.LASF62
	.byte	0x1
	.byte	0x6
	.value	0xea7
	.long	0x480
	.uleb128 0x14
	.long	.LASF63
	.byte	0x6
	.value	0xea8
	.long	0x8a
	.byte	0
	.byte	0
	.uleb128 0xf
	.string	"SV"
	.byte	0x6
	.value	0x7ea
	.long	0x48b
	.uleb128 0x11
	.string	"sv"
	.byte	0x10
	.byte	0x9
	.byte	0x43
	.long	0x4bb
	.uleb128 0x12
	.long	.LASF64
	.byte	0x9
	.byte	0x44
	.long	0x77
	.byte	0
	.uleb128 0x12
	.long	.LASF65
	.byte	0x9
	.byte	0x45
	.long	0xecd
	.byte	0x8
	.uleb128 0x12
	.long	.LASF66
	.byte	0x9
	.byte	0x46
	.long	0xecd
	.byte	0xc
	.byte	0
	.uleb128 0xf
	.string	"AV"
	.byte	0x6
	.value	0x7eb
	.long	0x4c6
	.uleb128 0x11
	.string	"av"
	.byte	0x10
	.byte	0x9
	.byte	0x55
	.long	0x4f6
	.uleb128 0x12
	.long	.LASF64
	.byte	0x9
	.byte	0x56
	.long	0x1050
	.byte	0
	.uleb128 0x12
	.long	.LASF65
	.byte	0x9
	.byte	0x57
	.long	0xecd
	.byte	0x8
	.uleb128 0x12
	.long	.LASF66
	.byte	0x9
	.byte	0x58
	.long	0xecd
	.byte	0xc
	.byte	0
	.uleb128 0xf
	.string	"HV"
	.byte	0x6
	.value	0x7ec
	.long	0x501
	.uleb128 0x11
	.string	"hv"
	.byte	0x10
	.byte	0x9
	.byte	0x5b
	.long	0x531
	.uleb128 0x12
	.long	.LASF64
	.byte	0x9
	.byte	0x5c
	.long	0x1056
	.byte	0
	.uleb128 0x12
	.long	.LASF65
	.byte	0x9
	.byte	0x5d
	.long	0xecd
	.byte	0x8
	.uleb128 0x12
	.long	.LASF66
	.byte	0x9
	.byte	0x5e
	.long	0xecd
	.byte	0xc
	.byte	0
	.uleb128 0xf
	.string	"CV"
	.byte	0x6
	.value	0x7ed
	.long	0x53c
	.uleb128 0x11
	.string	"cv"
	.byte	0x10
	.byte	0x9
	.byte	0x4f
	.long	0x56c
	.uleb128 0x12
	.long	.LASF64
	.byte	0x9
	.byte	0x50
	.long	0x104a
	.byte	0
	.uleb128 0x12
	.long	.LASF65
	.byte	0x9
	.byte	0x51
	.long	0xecd
	.byte	0x8
	.uleb128 0x12
	.long	.LASF66
	.byte	0x9
	.byte	0x52
	.long	0xecd
	.byte	0xc
	.byte	0
	.uleb128 0x10
	.long	.LASF67
	.byte	0x6
	.value	0x7ee
	.long	0x578
	.uleb128 0x13
	.long	.LASF68
	.byte	0x68
	.byte	0xa
	.byte	0x1f
	.long	0x651
	.uleb128 0x12
	.long	.LASF69
	.byte	0xa
	.byte	0x20
	.long	0xfa3
	.byte	0
	.uleb128 0x12
	.long	.LASF70
	.byte	0xa
	.byte	0x21
	.long	0xfa3
	.byte	0x8
	.uleb128 0x12
	.long	.LASF71
	.byte	0xa
	.byte	0x22
	.long	0xfa9
	.byte	0x10
	.uleb128 0x12
	.long	.LASF72
	.byte	0xa
	.byte	0x23
	.long	0xfb4
	.byte	0x18
	.uleb128 0x12
	.long	.LASF73
	.byte	0xa
	.byte	0x24
	.long	0x84
	.byte	0x20
	.uleb128 0x12
	.long	.LASF74
	.byte	0xa
	.byte	0x25
	.long	0xfbf
	.byte	0x28
	.uleb128 0x12
	.long	.LASF75
	.byte	0xa
	.byte	0x26
	.long	0x84
	.byte	0x30
	.uleb128 0x12
	.long	.LASF76
	.byte	0xa
	.byte	0x28
	.long	0xfc5
	.byte	0x38
	.uleb128 0x12
	.long	.LASF77
	.byte	0xa
	.byte	0x29
	.long	0xec2
	.byte	0x40
	.uleb128 0x12
	.long	.LASF78
	.byte	0xa
	.byte	0x2a
	.long	0xec2
	.byte	0x44
	.uleb128 0x12
	.long	.LASF79
	.byte	0xa
	.byte	0x2b
	.long	0xec2
	.byte	0x48
	.uleb128 0x12
	.long	.LASF80
	.byte	0xa
	.byte	0x2c
	.long	0xec2
	.byte	0x4c
	.uleb128 0x12
	.long	.LASF81
	.byte	0xa
	.byte	0x2d
	.long	0xecd
	.byte	0x50
	.uleb128 0x12
	.long	.LASF82
	.byte	0xa
	.byte	0x2e
	.long	0xecd
	.byte	0x54
	.uleb128 0x12
	.long	.LASF83
	.byte	0xa
	.byte	0x2f
	.long	0xecd
	.byte	0x58
	.uleb128 0x12
	.long	.LASF84
	.byte	0xa
	.byte	0x30
	.long	0xecd
	.byte	0x5c
	.uleb128 0x12
	.long	.LASF85
	.byte	0xa
	.byte	0x32
	.long	0xfcb
	.byte	0x60
	.byte	0
	.uleb128 0xf
	.string	"GP"
	.byte	0x6
	.value	0x7ef
	.long	0x65c
	.uleb128 0x11
	.string	"gp"
	.byte	0x58
	.byte	0xb
	.byte	0xb
	.long	0x6f8
	.uleb128 0x12
	.long	.LASF86
	.byte	0xb
	.byte	0xc
	.long	0xf20
	.byte	0
	.uleb128 0x12
	.long	.LASF87
	.byte	0xb
	.byte	0xd
	.long	0xecd
	.byte	0x8
	.uleb128 0x12
	.long	.LASF88
	.byte	0xb
	.byte	0xe
	.long	0x10dd
	.byte	0x10
	.uleb128 0x12
	.long	.LASF89
	.byte	0xb
	.byte	0xf
	.long	0x1091
	.byte	0x18
	.uleb128 0x12
	.long	.LASF90
	.byte	0xb
	.byte	0x10
	.long	0x10a3
	.byte	0x20
	.uleb128 0x12
	.long	.LASF91
	.byte	0xb
	.byte	0x11
	.long	0x1068
	.byte	0x28
	.uleb128 0x12
	.long	.LASF92
	.byte	0xb
	.byte	0x12
	.long	0x109d
	.byte	0x30
	.uleb128 0x12
	.long	.LASF93
	.byte	0xb
	.byte	0x13
	.long	0x1091
	.byte	0x38
	.uleb128 0x12
	.long	.LASF94
	.byte	0xb
	.byte	0x14
	.long	0xecd
	.byte	0x40
	.uleb128 0x12
	.long	.LASF95
	.byte	0xb
	.byte	0x15
	.long	0xecd
	.byte	0x44
	.uleb128 0x12
	.long	.LASF96
	.byte	0xb
	.byte	0x16
	.long	0xed8
	.byte	0x48
	.uleb128 0x12
	.long	.LASF97
	.byte	0xb
	.byte	0x17
	.long	0x84
	.byte	0x50
	.byte	0
	.uleb128 0xf
	.string	"GV"
	.byte	0x6
	.value	0x7f0
	.long	0x703
	.uleb128 0x11
	.string	"gv"
	.byte	0x10
	.byte	0x9
	.byte	0x49
	.long	0x733
	.uleb128 0x12
	.long	.LASF64
	.byte	0x9
	.byte	0x4a
	.long	0x1044
	.byte	0
	.uleb128 0x12
	.long	.LASF65
	.byte	0x9
	.byte	0x4b
	.long	0xecd
	.byte	0x8
	.uleb128 0x12
	.long	.LASF66
	.byte	0x9
	.byte	0x4c
	.long	0xecd
	.byte	0xc
	.byte	0
	.uleb128 0x11
	.string	"io"
	.byte	0x10
	.byte	0x9
	.byte	0x61
	.long	0x763
	.uleb128 0x12
	.long	.LASF64
	.byte	0x9
	.byte	0x62
	.long	0x105c
	.byte	0
	.uleb128 0x12
	.long	.LASF65
	.byte	0x9
	.byte	0x63
	.long	0xecd
	.byte	0x8
	.uleb128 0x12
	.long	.LASF66
	.byte	0x9
	.byte	0x64
	.long	0xecd
	.byte	0xc
	.byte	0
	.uleb128 0x10
	.long	.LASF98
	.byte	0x6
	.value	0x7f2
	.long	0x76f
	.uleb128 0x15
	.long	.LASF99
	.byte	0x90
	.byte	0x8
	.value	0x1a2
	.long	0x797
	.uleb128 0x14
	.long	.LASF100
	.byte	0x8
	.value	0x1a3
	.long	0xecd
	.byte	0
	.uleb128 0x14
	.long	.LASF101
	.byte	0x8
	.value	0x1a7
	.long	0x1cf6
	.byte	0x8
	.byte	0
	.uleb128 0x15
	.long	.LASF102
	.byte	0x88
	.byte	0x8
	.value	0x130
	.long	0x80d
	.uleb128 0x14
	.long	.LASF103
	.byte	0x8
	.value	0x131
	.long	0xec2
	.byte	0
	.uleb128 0x14
	.long	.LASF104
	.byte	0x8
	.value	0x132
	.long	0x1c2c
	.byte	0x8
	.uleb128 0x14
	.long	.LASF105
	.byte	0x8
	.value	0x133
	.long	0xec2
	.byte	0x10
	.uleb128 0x14
	.long	.LASF106
	.byte	0x8
	.value	0x134
	.long	0xec2
	.byte	0x14
	.uleb128 0x14
	.long	.LASF107
	.byte	0x8
	.value	0x135
	.long	0xec2
	.byte	0x18
	.uleb128 0x14
	.long	.LASF108
	.byte	0x8
	.value	0x136
	.long	0x1a89
	.byte	0x20
	.uleb128 0x14
	.long	.LASF109
	.byte	0x8
	.value	0x137
	.long	0xead
	.byte	0x28
	.uleb128 0x14
	.long	.LASF110
	.byte	0x8
	.value	0x13d
	.long	0x1bfe
	.byte	0x30
	.byte	0
	.uleb128 0x10
	.long	.LASF111
	.byte	0x6
	.value	0x7f5
	.long	0x819
	.uleb128 0x13
	.long	.LASF112
	.byte	0x30
	.byte	0xc
	.byte	0x1a
	.long	0x886
	.uleb128 0x12
	.long	.LASF113
	.byte	0xc
	.byte	0x1b
	.long	0x1062
	.byte	0
	.uleb128 0x12
	.long	.LASF114
	.byte	0xc
	.byte	0x1c
	.long	0x1ea5
	.byte	0x8
	.uleb128 0x12
	.long	.LASF115
	.byte	0xc
	.byte	0x1d
	.long	0xeb7
	.byte	0x10
	.uleb128 0x12
	.long	.LASF116
	.byte	0xc
	.byte	0x1e
	.long	0x8a
	.byte	0x12
	.uleb128 0x12
	.long	.LASF117
	.byte	0xc
	.byte	0x1f
	.long	0xead
	.byte	0x13
	.uleb128 0x12
	.long	.LASF118
	.byte	0xc
	.byte	0x20
	.long	0xf20
	.byte	0x18
	.uleb128 0x12
	.long	.LASF119
	.byte	0xc
	.byte	0x21
	.long	0x84
	.byte	0x20
	.uleb128 0x12
	.long	.LASF120
	.byte	0xc
	.byte	0x22
	.long	0xec2
	.byte	0x28
	.byte	0
	.uleb128 0xf
	.string	"XPV"
	.byte	0x6
	.value	0x7f7
	.long	0x892
	.uleb128 0x11
	.string	"xpv"
	.byte	0x18
	.byte	0x9
	.byte	0xf9
	.long	0x8c3
	.uleb128 0x12
	.long	.LASF121
	.byte	0x9
	.byte	0xfa
	.long	0x84
	.byte	0
	.uleb128 0x12
	.long	.LASF122
	.byte	0x9
	.byte	0xfb
	.long	0x174
	.byte	0x8
	.uleb128 0x12
	.long	.LASF123
	.byte	0x9
	.byte	0xfc
	.long	0x174
	.byte	0x10
	.byte	0
	.uleb128 0x10
	.long	.LASF124
	.byte	0x6
	.value	0x7f8
	.long	0x8cf
	.uleb128 0x13
	.long	.LASF125
	.byte	0x20
	.byte	0x9
	.byte	0xff
	.long	0x910
	.uleb128 0x14
	.long	.LASF121
	.byte	0x9
	.value	0x100
	.long	0x84
	.byte	0
	.uleb128 0x14
	.long	.LASF122
	.byte	0x9
	.value	0x101
	.long	0x174
	.byte	0x8
	.uleb128 0x14
	.long	.LASF123
	.byte	0x9
	.value	0x102
	.long	0x174
	.byte	0x10
	.uleb128 0x14
	.long	.LASF126
	.byte	0x9
	.value	0x103
	.long	0x14c
	.byte	0x18
	.byte	0
	.uleb128 0x10
	.long	.LASF127
	.byte	0x6
	.value	0x7fa
	.long	0x91c
	.uleb128 0x15
	.long	.LASF128
	.byte	0x28
	.byte	0x9
	.value	0x10d
	.long	0x96b
	.uleb128 0x14
	.long	.LASF121
	.byte	0x9
	.value	0x10e
	.long	0x84
	.byte	0
	.uleb128 0x14
	.long	.LASF122
	.byte	0x9
	.value	0x10f
	.long	0x174
	.byte	0x8
	.uleb128 0x14
	.long	.LASF123
	.byte	0x9
	.value	0x110
	.long	0x174
	.byte	0x10
	.uleb128 0x14
	.long	.LASF126
	.byte	0x9
	.value	0x111
	.long	0x14c
	.byte	0x18
	.uleb128 0x14
	.long	.LASF129
	.byte	0x9
	.value	0x112
	.long	0x162
	.byte	0x20
	.byte	0
	.uleb128 0x10
	.long	.LASF130
	.byte	0x6
	.value	0x7fd
	.long	0x977
	.uleb128 0x13
	.long	.LASF131
	.byte	0x50
	.byte	0xd
	.byte	0xb
	.long	0x9fc
	.uleb128 0x12
	.long	.LASF132
	.byte	0xd
	.byte	0xc
	.long	0x84
	.byte	0
	.uleb128 0x12
	.long	.LASF133
	.byte	0xd
	.byte	0xd
	.long	0x9c
	.byte	0x8
	.uleb128 0x12
	.long	.LASF134
	.byte	0xd
	.byte	0xe
	.long	0x9c
	.byte	0x10
	.uleb128 0x12
	.long	.LASF135
	.byte	0xd
	.byte	0xf
	.long	0x14c
	.byte	0x18
	.uleb128 0x12
	.long	.LASF129
	.byte	0xd
	.byte	0x10
	.long	0x162
	.byte	0x20
	.uleb128 0x12
	.long	.LASF136
	.byte	0xd
	.byte	0x11
	.long	0x1062
	.byte	0x28
	.uleb128 0x12
	.long	.LASF137
	.byte	0xd
	.byte	0x12
	.long	0x1068
	.byte	0x30
	.uleb128 0x12
	.long	.LASF138
	.byte	0xd
	.byte	0x14
	.long	0x1bf8
	.byte	0x38
	.uleb128 0x12
	.long	.LASF139
	.byte	0xd
	.byte	0x15
	.long	0xf20
	.byte	0x40
	.uleb128 0x12
	.long	.LASF140
	.byte	0xd
	.byte	0x16
	.long	0xead
	.byte	0x48
	.byte	0
	.uleb128 0x10
	.long	.LASF141
	.byte	0x6
	.value	0x7fe
	.long	0xa08
	.uleb128 0x13
	.long	.LASF142
	.byte	0x58
	.byte	0xe
	.byte	0x22
	.long	0xa99
	.uleb128 0x12
	.long	.LASF143
	.byte	0xe
	.byte	0x23
	.long	0x84
	.byte	0
	.uleb128 0x12
	.long	.LASF144
	.byte	0xe
	.byte	0x24
	.long	0x174
	.byte	0x8
	.uleb128 0x12
	.long	.LASF145
	.byte	0xe
	.byte	0x25
	.long	0x174
	.byte	0x10
	.uleb128 0x12
	.long	.LASF146
	.byte	0xe
	.byte	0x26
	.long	0x14c
	.byte	0x18
	.uleb128 0x12
	.long	.LASF129
	.byte	0xe
	.byte	0x27
	.long	0x162
	.byte	0x20
	.uleb128 0x12
	.long	.LASF136
	.byte	0xe
	.byte	0x29
	.long	0x1062
	.byte	0x28
	.uleb128 0x12
	.long	.LASF137
	.byte	0xe
	.byte	0x2a
	.long	0x1068
	.byte	0x30
	.uleb128 0x12
	.long	.LASF147
	.byte	0xe
	.byte	0x2c
	.long	0xec2
	.byte	0x38
	.uleb128 0x12
	.long	.LASF148
	.byte	0xe
	.byte	0x2d
	.long	0x1e1c
	.byte	0x40
	.uleb128 0x12
	.long	.LASF149
	.byte	0xe
	.byte	0x2e
	.long	0x1a89
	.byte	0x48
	.uleb128 0x12
	.long	.LASF150
	.byte	0xe
	.byte	0x2f
	.long	0x84
	.byte	0x50
	.byte	0
	.uleb128 0x10
	.long	.LASF151
	.byte	0x6
	.value	0x7ff
	.long	0xaa5
	.uleb128 0x15
	.long	.LASF152
	.byte	0x60
	.byte	0x9
	.value	0x130
	.long	0xb4f
	.uleb128 0x14
	.long	.LASF121
	.byte	0x9
	.value	0x131
	.long	0x84
	.byte	0
	.uleb128 0x14
	.long	.LASF122
	.byte	0x9
	.value	0x132
	.long	0x174
	.byte	0x8
	.uleb128 0x14
	.long	.LASF123
	.byte	0x9
	.value	0x133
	.long	0x174
	.byte	0x10
	.uleb128 0x14
	.long	.LASF126
	.byte	0x9
	.value	0x134
	.long	0x14c
	.byte	0x18
	.uleb128 0x14
	.long	.LASF129
	.byte	0x9
	.value	0x135
	.long	0x162
	.byte	0x20
	.uleb128 0x14
	.long	.LASF136
	.byte	0x9
	.value	0x136
	.long	0x1062
	.byte	0x28
	.uleb128 0x14
	.long	.LASF137
	.byte	0x9
	.value	0x137
	.long	0x1068
	.byte	0x30
	.uleb128 0x14
	.long	.LASF153
	.byte	0x9
	.value	0x139
	.long	0x106e
	.byte	0x38
	.uleb128 0x14
	.long	.LASF154
	.byte	0x9
	.value	0x13a
	.long	0x84
	.byte	0x40
	.uleb128 0x14
	.long	.LASF155
	.byte	0x9
	.value	0x13b
	.long	0x174
	.byte	0x48
	.uleb128 0x14
	.long	.LASF156
	.byte	0x9
	.value	0x13c
	.long	0x1068
	.byte	0x50
	.uleb128 0x14
	.long	.LASF157
	.byte	0x9
	.value	0x13d
	.long	0xead
	.byte	0x58
	.byte	0
	.uleb128 0x10
	.long	.LASF158
	.byte	0x6
	.value	0x800
	.long	0xb5b
	.uleb128 0x13
	.long	.LASF159
	.byte	0x90
	.byte	0xf
	.byte	0xe
	.long	0xc4c
	.uleb128 0x12
	.long	.LASF121
	.byte	0xf
	.byte	0xf
	.long	0x84
	.byte	0
	.uleb128 0x12
	.long	.LASF122
	.byte	0xf
	.byte	0x10
	.long	0x174
	.byte	0x8
	.uleb128 0x12
	.long	.LASF123
	.byte	0xf
	.byte	0x11
	.long	0x174
	.byte	0x10
	.uleb128 0x12
	.long	.LASF135
	.byte	0xf
	.byte	0x12
	.long	0x14c
	.byte	0x18
	.uleb128 0x12
	.long	.LASF129
	.byte	0xf
	.byte	0x13
	.long	0x162
	.byte	0x20
	.uleb128 0x12
	.long	.LASF136
	.byte	0xf
	.byte	0x14
	.long	0x1062
	.byte	0x28
	.uleb128 0x12
	.long	.LASF137
	.byte	0xf
	.byte	0x15
	.long	0x1068
	.byte	0x30
	.uleb128 0x12
	.long	.LASF160
	.byte	0xf
	.byte	0x17
	.long	0x1068
	.byte	0x38
	.uleb128 0x12
	.long	.LASF161
	.byte	0xf
	.byte	0x18
	.long	0x1080
	.byte	0x40
	.uleb128 0x12
	.long	.LASF162
	.byte	0xf
	.byte	0x19
	.long	0x1080
	.byte	0x48
	.uleb128 0x12
	.long	.LASF163
	.byte	0xf
	.byte	0x1a
	.long	0x1097
	.byte	0x50
	.uleb128 0x12
	.long	.LASF164
	.byte	0xf
	.byte	0x1b
	.long	0xdfe
	.byte	0x58
	.uleb128 0x12
	.long	.LASF165
	.byte	0xf
	.byte	0x1c
	.long	0x109d
	.byte	0x60
	.uleb128 0x12
	.long	.LASF166
	.byte	0xf
	.byte	0x1d
	.long	0x84
	.byte	0x68
	.uleb128 0x12
	.long	.LASF167
	.byte	0xf
	.byte	0x1e
	.long	0x5e
	.byte	0x70
	.uleb128 0x12
	.long	.LASF168
	.byte	0xf
	.byte	0x1f
	.long	0x1104
	.byte	0x78
	.uleb128 0x12
	.long	.LASF169
	.byte	0xf
	.byte	0x20
	.long	0x1091
	.byte	0x80
	.uleb128 0x12
	.long	.LASF170
	.byte	0xf
	.byte	0x25
	.long	0x1074
	.byte	0x88
	.uleb128 0x12
	.long	.LASF171
	.byte	0xf
	.byte	0x26
	.long	0xecd
	.byte	0x8c
	.byte	0
	.uleb128 0x10
	.long	.LASF172
	.byte	0x6
	.value	0x803
	.long	0xc58
	.uleb128 0x15
	.long	.LASF173
	.byte	0xa8
	.byte	0x9
	.value	0x170
	.long	0xd91
	.uleb128 0x14
	.long	.LASF121
	.byte	0x9
	.value	0x171
	.long	0x84
	.byte	0
	.uleb128 0x14
	.long	.LASF122
	.byte	0x9
	.value	0x172
	.long	0x174
	.byte	0x8
	.uleb128 0x14
	.long	.LASF123
	.byte	0x9
	.value	0x173
	.long	0x174
	.byte	0x10
	.uleb128 0x14
	.long	.LASF126
	.byte	0x9
	.value	0x174
	.long	0x14c
	.byte	0x18
	.uleb128 0x14
	.long	.LASF129
	.byte	0x9
	.value	0x175
	.long	0x162
	.byte	0x20
	.uleb128 0x14
	.long	.LASF136
	.byte	0x9
	.value	0x176
	.long	0x1062
	.byte	0x28
	.uleb128 0x14
	.long	.LASF137
	.byte	0x9
	.value	0x177
	.long	0x1068
	.byte	0x30
	.uleb128 0x14
	.long	.LASF174
	.byte	0x9
	.value	0x179
	.long	0x10d1
	.byte	0x38
	.uleb128 0x14
	.long	.LASF175
	.byte	0x9
	.value	0x17a
	.long	0x10d1
	.byte	0x40
	.uleb128 0x14
	.long	.LASF176
	.byte	0x9
	.value	0x187
	.long	0x10a9
	.byte	0x48
	.uleb128 0x14
	.long	.LASF177
	.byte	0x9
	.value	0x188
	.long	0x14c
	.byte	0x50
	.uleb128 0x14
	.long	.LASF178
	.byte	0x9
	.value	0x189
	.long	0x14c
	.byte	0x58
	.uleb128 0x14
	.long	.LASF179
	.byte	0x9
	.value	0x18a
	.long	0x14c
	.byte	0x60
	.uleb128 0x14
	.long	.LASF180
	.byte	0x9
	.value	0x18b
	.long	0x14c
	.byte	0x68
	.uleb128 0x14
	.long	.LASF181
	.byte	0x9
	.value	0x18c
	.long	0x84
	.byte	0x70
	.uleb128 0x14
	.long	.LASF182
	.byte	0x9
	.value	0x18d
	.long	0x109d
	.byte	0x78
	.uleb128 0x14
	.long	.LASF183
	.byte	0x9
	.value	0x18e
	.long	0x84
	.byte	0x80
	.uleb128 0x14
	.long	.LASF184
	.byte	0x9
	.value	0x18f
	.long	0x109d
	.byte	0x88
	.uleb128 0x14
	.long	.LASF185
	.byte	0x9
	.value	0x190
	.long	0x84
	.byte	0x90
	.uleb128 0x14
	.long	.LASF186
	.byte	0x9
	.value	0x191
	.long	0x109d
	.byte	0x98
	.uleb128 0x14
	.long	.LASF187
	.byte	0x9
	.value	0x192
	.long	0x50
	.byte	0xa0
	.uleb128 0x14
	.long	.LASF188
	.byte	0x9
	.value	0x193
	.long	0x8a
	.byte	0xa2
	.uleb128 0x14
	.long	.LASF189
	.byte	0x9
	.value	0x194
	.long	0x8a
	.byte	0xa3
	.byte	0
	.uleb128 0x10
	.long	.LASF190
	.byte	0x6
	.value	0x804
	.long	0xd9d
	.uleb128 0x13
	.long	.LASF191
	.byte	0x38
	.byte	0xc
	.byte	0xe
	.long	0xdfe
	.uleb128 0x12
	.long	.LASF192
	.byte	0xc
	.byte	0xf
	.long	0x1e3c
	.byte	0
	.uleb128 0x12
	.long	.LASF193
	.byte	0xc
	.byte	0x10
	.long	0x1e3c
	.byte	0x8
	.uleb128 0x12
	.long	.LASF194
	.byte	0xc
	.byte	0x11
	.long	0x1e56
	.byte	0x10
	.uleb128 0x12
	.long	.LASF195
	.byte	0xc
	.byte	0x12
	.long	0x1e3c
	.byte	0x18
	.uleb128 0x12
	.long	.LASF196
	.byte	0xc
	.byte	0x13
	.long	0x1e3c
	.byte	0x20
	.uleb128 0x12
	.long	.LASF197
	.byte	0xc
	.byte	0x14
	.long	0x1e7f
	.byte	0x28
	.uleb128 0x12
	.long	.LASF198
	.byte	0xc
	.byte	0x16
	.long	0x1e9f
	.byte	0x30
	.byte	0
	.uleb128 0xf
	.string	"ANY"
	.byte	0x6
	.value	0x805
	.long	0xe0a
	.uleb128 0x16
	.string	"any"
	.byte	0x8
	.byte	0x6
	.value	0x9f1
	.long	0xe6c
	.uleb128 0x17
	.long	.LASF199
	.byte	0x6
	.value	0x9f2
	.long	0x77
	.uleb128 0x17
	.long	.LASF200
	.byte	0x6
	.value	0x9f3
	.long	0xec2
	.uleb128 0x17
	.long	.LASF201
	.byte	0x6
	.value	0x9f4
	.long	0x14c
	.uleb128 0x17
	.long	.LASF202
	.byte	0x6
	.value	0x9f5
	.long	0x5e
	.uleb128 0x17
	.long	.LASF203
	.byte	0x6
	.value	0x9f6
	.long	0x8a
	.uleb128 0x17
	.long	.LASF204
	.byte	0x6
	.value	0x9f7
	.long	0xeef
	.uleb128 0x17
	.long	.LASF205
	.byte	0x6
	.value	0x9f8
	.long	0xeef
	.byte	0
	.uleb128 0x10
	.long	.LASF206
	.byte	0x6
	.value	0x808
	.long	0xe78
	.uleb128 0x15
	.long	.LASF207
	.byte	0x18
	.byte	0x9
	.value	0x4ed
	.long	0xead
	.uleb128 0x14
	.long	.LASF208
	.byte	0x9
	.value	0x4ee
	.long	0x10a3
	.byte	0
	.uleb128 0x14
	.long	.LASF209
	.byte	0x9
	.value	0x4ef
	.long	0x157
	.byte	0x8
	.uleb128 0x14
	.long	.LASF210
	.byte	0x9
	.value	0x4f0
	.long	0x10d7
	.byte	0x10
	.byte	0
	.uleb128 0xd
	.string	"U8"
	.byte	0x10
	.byte	0x85
	.long	0x2d
	.uleb128 0xd
	.string	"U16"
	.byte	0x10
	.byte	0x87
	.long	0x34
	.uleb128 0xd
	.string	"I32"
	.byte	0x10
	.byte	0x88
	.long	0x57
	.uleb128 0xd
	.string	"U32"
	.byte	0x10
	.byte	0x89
	.long	0x3b
	.uleb128 0x10
	.long	.LASF211
	.byte	0x10
	.value	0x209
	.long	0xecd
	.uleb128 0x18
	.long	0xeef
	.uleb128 0x19
	.long	0x77
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xee4
	.uleb128 0x10
	.long	.LASF212
	.byte	0x6
	.value	0xa02
	.long	0xf01
	.uleb128 0x6
	.byte	0x8
	.long	0xf07
	.uleb128 0x1a
	.long	0xec2
	.long	0xf20
	.uleb128 0x19
	.long	0x57
	.uleb128 0x19
	.long	0xf20
	.uleb128 0x19
	.long	0x57
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x480
	.uleb128 0xb
	.long	0x8a
	.long	0xf36
	.uleb128 0xc
	.long	0x70
	.byte	0
	.byte	0
	.uleb128 0xb
	.long	0x8a
	.long	0xf46
	.uleb128 0xc
	.long	0x70
	.byte	0x13
	.byte	0
	.uleb128 0x4
	.long	.LASF213
	.byte	0x11
	.byte	0x63
	.long	0xf51
	.uleb128 0xe
	.long	.LASF215
	.uleb128 0x4
	.long	.LASF216
	.byte	0x11
	.byte	0x65
	.long	0xf61
	.uleb128 0x6
	.byte	0x8
	.long	0xf46
	.uleb128 0x13
	.long	.LASF217
	.byte	0x4
	.byte	0xa
	.byte	0x13
	.long	0xf98
	.uleb128 0x12
	.long	.LASF209
	.byte	0xa
	.byte	0x14
	.long	0xead
	.byte	0
	.uleb128 0x12
	.long	.LASF218
	.byte	0xa
	.byte	0x15
	.long	0xead
	.byte	0x1
	.uleb128 0x12
	.long	.LASF219
	.byte	0xa
	.byte	0x16
	.long	0xeb7
	.byte	0x2
	.byte	0
	.uleb128 0x4
	.long	.LASF217
	.byte	0xa
	.byte	0x19
	.long	0xf67
	.uleb128 0x6
	.byte	0x8
	.long	0xec2
	.uleb128 0x6
	.byte	0x8
	.long	0xf98
	.uleb128 0xe
	.long	.LASF220
	.uleb128 0x6
	.byte	0x8
	.long	0xfaf
	.uleb128 0xe
	.long	.LASF221
	.uleb128 0x6
	.byte	0x8
	.long	0xfba
	.uleb128 0x6
	.byte	0x8
	.long	0xecd
	.uleb128 0xb
	.long	0xf98
	.long	0xfdb
	.uleb128 0xc
	.long	0x70
	.byte	0
	.byte	0
	.uleb128 0x8
	.byte	0x4
	.byte	0x9
	.byte	0x2e
	.long	0x1044
	.uleb128 0x9
	.long	.LASF222
	.sleb128 0
	.uleb128 0x9
	.long	.LASF223
	.sleb128 1
	.uleb128 0x9
	.long	.LASF224
	.sleb128 2
	.uleb128 0x9
	.long	.LASF225
	.sleb128 3
	.uleb128 0x9
	.long	.LASF226
	.sleb128 4
	.uleb128 0x9
	.long	.LASF227
	.sleb128 5
	.uleb128 0x9
	.long	.LASF228
	.sleb128 6
	.uleb128 0x9
	.long	.LASF229
	.sleb128 7
	.uleb128 0x9
	.long	.LASF230
	.sleb128 8
	.uleb128 0x9
	.long	.LASF231
	.sleb128 9
	.uleb128 0x9
	.long	.LASF232
	.sleb128 10
	.uleb128 0x9
	.long	.LASF233
	.sleb128 11
	.uleb128 0x9
	.long	.LASF234
	.sleb128 12
	.uleb128 0x9
	.long	.LASF235
	.sleb128 13
	.uleb128 0x9
	.long	.LASF236
	.sleb128 14
	.uleb128 0x9
	.long	.LASF237
	.sleb128 15
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xa99
	.uleb128 0x6
	.byte	0x8
	.long	0xb4f
	.uleb128 0x6
	.byte	0x8
	.long	0x96b
	.uleb128 0x6
	.byte	0x8
	.long	0x9fc
	.uleb128 0x6
	.byte	0x8
	.long	0xc4c
	.uleb128 0x6
	.byte	0x8
	.long	0x80d
	.uleb128 0x6
	.byte	0x8
	.long	0x4f6
	.uleb128 0x6
	.byte	0x8
	.long	0x651
	.uleb128 0x10
	.long	.LASF238
	.byte	0x9
	.value	0x150
	.long	0xeb7
	.uleb128 0x6
	.byte	0x8
	.long	0x180
	.uleb128 0x18
	.long	0x1091
	.uleb128 0x19
	.long	0x1091
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x531
	.uleb128 0x6
	.byte	0x8
	.long	0x1086
	.uleb128 0x6
	.byte	0x8
	.long	0x6f8
	.uleb128 0x6
	.byte	0x8
	.long	0x4bb
	.uleb128 0x1b
	.byte	0x8
	.byte	0x9
	.value	0x184
	.long	0x10cb
	.uleb128 0x17
	.long	.LASF239
	.byte	0x9
	.value	0x185
	.long	0x10cb
	.uleb128 0x17
	.long	.LASF240
	.byte	0x9
	.value	0x186
	.long	0x77
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x13c
	.uleb128 0x6
	.byte	0x8
	.long	0xf56
	.uleb128 0x6
	.byte	0x8
	.long	0x459
	.uleb128 0x6
	.byte	0x8
	.long	0x733
	.uleb128 0x4
	.long	.LASF241
	.byte	0x13
	.byte	0x13
	.long	0x4bb
	.uleb128 0xd
	.string	"PAD"
	.byte	0x13
	.byte	0x14
	.long	0x4bb
	.uleb128 0x4
	.long	.LASF242
	.byte	0x13
	.byte	0x1d
	.long	0x42
	.uleb128 0x6
	.byte	0x8
	.long	0x10e3
	.uleb128 0x1c
	.long	.LASF1084
	.byte	0x4
	.byte	0x19
	.byte	0xf
	.long	0x1a7e
	.uleb128 0x9
	.long	.LASF243
	.sleb128 0
	.uleb128 0x9
	.long	.LASF244
	.sleb128 1
	.uleb128 0x9
	.long	.LASF245
	.sleb128 2
	.uleb128 0x9
	.long	.LASF246
	.sleb128 3
	.uleb128 0x9
	.long	.LASF247
	.sleb128 4
	.uleb128 0x9
	.long	.LASF248
	.sleb128 5
	.uleb128 0x9
	.long	.LASF249
	.sleb128 6
	.uleb128 0x9
	.long	.LASF250
	.sleb128 7
	.uleb128 0x9
	.long	.LASF251
	.sleb128 8
	.uleb128 0x9
	.long	.LASF252
	.sleb128 9
	.uleb128 0x9
	.long	.LASF253
	.sleb128 10
	.uleb128 0x9
	.long	.LASF254
	.sleb128 11
	.uleb128 0x9
	.long	.LASF255
	.sleb128 12
	.uleb128 0x9
	.long	.LASF256
	.sleb128 13
	.uleb128 0x9
	.long	.LASF257
	.sleb128 14
	.uleb128 0x9
	.long	.LASF258
	.sleb128 15
	.uleb128 0x9
	.long	.LASF259
	.sleb128 16
	.uleb128 0x9
	.long	.LASF260
	.sleb128 17
	.uleb128 0x9
	.long	.LASF261
	.sleb128 18
	.uleb128 0x9
	.long	.LASF262
	.sleb128 19
	.uleb128 0x9
	.long	.LASF263
	.sleb128 20
	.uleb128 0x9
	.long	.LASF264
	.sleb128 21
	.uleb128 0x9
	.long	.LASF265
	.sleb128 22
	.uleb128 0x9
	.long	.LASF266
	.sleb128 23
	.uleb128 0x9
	.long	.LASF267
	.sleb128 24
	.uleb128 0x9
	.long	.LASF268
	.sleb128 25
	.uleb128 0x9
	.long	.LASF269
	.sleb128 26
	.uleb128 0x9
	.long	.LASF270
	.sleb128 27
	.uleb128 0x9
	.long	.LASF271
	.sleb128 28
	.uleb128 0x9
	.long	.LASF272
	.sleb128 29
	.uleb128 0x9
	.long	.LASF273
	.sleb128 30
	.uleb128 0x9
	.long	.LASF274
	.sleb128 31
	.uleb128 0x9
	.long	.LASF275
	.sleb128 32
	.uleb128 0x9
	.long	.LASF276
	.sleb128 33
	.uleb128 0x9
	.long	.LASF277
	.sleb128 34
	.uleb128 0x9
	.long	.LASF278
	.sleb128 35
	.uleb128 0x9
	.long	.LASF279
	.sleb128 36
	.uleb128 0x9
	.long	.LASF280
	.sleb128 37
	.uleb128 0x9
	.long	.LASF281
	.sleb128 38
	.uleb128 0x9
	.long	.LASF282
	.sleb128 39
	.uleb128 0x9
	.long	.LASF283
	.sleb128 40
	.uleb128 0x9
	.long	.LASF284
	.sleb128 41
	.uleb128 0x9
	.long	.LASF285
	.sleb128 42
	.uleb128 0x9
	.long	.LASF286
	.sleb128 43
	.uleb128 0x9
	.long	.LASF287
	.sleb128 44
	.uleb128 0x9
	.long	.LASF288
	.sleb128 45
	.uleb128 0x9
	.long	.LASF289
	.sleb128 46
	.uleb128 0x9
	.long	.LASF290
	.sleb128 47
	.uleb128 0x9
	.long	.LASF291
	.sleb128 48
	.uleb128 0x9
	.long	.LASF292
	.sleb128 49
	.uleb128 0x9
	.long	.LASF293
	.sleb128 50
	.uleb128 0x9
	.long	.LASF294
	.sleb128 51
	.uleb128 0x9
	.long	.LASF295
	.sleb128 52
	.uleb128 0x9
	.long	.LASF296
	.sleb128 53
	.uleb128 0x9
	.long	.LASF297
	.sleb128 54
	.uleb128 0x9
	.long	.LASF298
	.sleb128 55
	.uleb128 0x9
	.long	.LASF299
	.sleb128 56
	.uleb128 0x9
	.long	.LASF300
	.sleb128 57
	.uleb128 0x9
	.long	.LASF301
	.sleb128 58
	.uleb128 0x9
	.long	.LASF302
	.sleb128 59
	.uleb128 0x9
	.long	.LASF303
	.sleb128 60
	.uleb128 0x9
	.long	.LASF304
	.sleb128 61
	.uleb128 0x9
	.long	.LASF305
	.sleb128 62
	.uleb128 0x9
	.long	.LASF306
	.sleb128 63
	.uleb128 0x9
	.long	.LASF307
	.sleb128 64
	.uleb128 0x9
	.long	.LASF308
	.sleb128 65
	.uleb128 0x9
	.long	.LASF309
	.sleb128 66
	.uleb128 0x9
	.long	.LASF310
	.sleb128 67
	.uleb128 0x9
	.long	.LASF311
	.sleb128 68
	.uleb128 0x9
	.long	.LASF312
	.sleb128 69
	.uleb128 0x9
	.long	.LASF313
	.sleb128 70
	.uleb128 0x9
	.long	.LASF314
	.sleb128 71
	.uleb128 0x9
	.long	.LASF315
	.sleb128 72
	.uleb128 0x9
	.long	.LASF316
	.sleb128 73
	.uleb128 0x9
	.long	.LASF317
	.sleb128 74
	.uleb128 0x9
	.long	.LASF318
	.sleb128 75
	.uleb128 0x9
	.long	.LASF319
	.sleb128 76
	.uleb128 0x9
	.long	.LASF320
	.sleb128 77
	.uleb128 0x9
	.long	.LASF321
	.sleb128 78
	.uleb128 0x9
	.long	.LASF322
	.sleb128 79
	.uleb128 0x9
	.long	.LASF323
	.sleb128 80
	.uleb128 0x9
	.long	.LASF324
	.sleb128 81
	.uleb128 0x9
	.long	.LASF325
	.sleb128 82
	.uleb128 0x9
	.long	.LASF326
	.sleb128 83
	.uleb128 0x9
	.long	.LASF327
	.sleb128 84
	.uleb128 0x9
	.long	.LASF328
	.sleb128 85
	.uleb128 0x9
	.long	.LASF329
	.sleb128 86
	.uleb128 0x9
	.long	.LASF330
	.sleb128 87
	.uleb128 0x9
	.long	.LASF331
	.sleb128 88
	.uleb128 0x9
	.long	.LASF332
	.sleb128 89
	.uleb128 0x9
	.long	.LASF333
	.sleb128 90
	.uleb128 0x9
	.long	.LASF334
	.sleb128 91
	.uleb128 0x9
	.long	.LASF335
	.sleb128 92
	.uleb128 0x9
	.long	.LASF336
	.sleb128 93
	.uleb128 0x9
	.long	.LASF337
	.sleb128 94
	.uleb128 0x9
	.long	.LASF338
	.sleb128 95
	.uleb128 0x9
	.long	.LASF339
	.sleb128 96
	.uleb128 0x9
	.long	.LASF340
	.sleb128 97
	.uleb128 0x9
	.long	.LASF341
	.sleb128 98
	.uleb128 0x9
	.long	.LASF342
	.sleb128 99
	.uleb128 0x9
	.long	.LASF343
	.sleb128 100
	.uleb128 0x9
	.long	.LASF344
	.sleb128 101
	.uleb128 0x9
	.long	.LASF345
	.sleb128 102
	.uleb128 0x9
	.long	.LASF346
	.sleb128 103
	.uleb128 0x9
	.long	.LASF347
	.sleb128 104
	.uleb128 0x9
	.long	.LASF348
	.sleb128 105
	.uleb128 0x9
	.long	.LASF349
	.sleb128 106
	.uleb128 0x9
	.long	.LASF350
	.sleb128 107
	.uleb128 0x9
	.long	.LASF351
	.sleb128 108
	.uleb128 0x9
	.long	.LASF352
	.sleb128 109
	.uleb128 0x9
	.long	.LASF353
	.sleb128 110
	.uleb128 0x9
	.long	.LASF354
	.sleb128 111
	.uleb128 0x9
	.long	.LASF355
	.sleb128 112
	.uleb128 0x9
	.long	.LASF356
	.sleb128 113
	.uleb128 0x9
	.long	.LASF357
	.sleb128 114
	.uleb128 0x9
	.long	.LASF358
	.sleb128 115
	.uleb128 0x9
	.long	.LASF359
	.sleb128 116
	.uleb128 0x9
	.long	.LASF360
	.sleb128 117
	.uleb128 0x9
	.long	.LASF361
	.sleb128 118
	.uleb128 0x9
	.long	.LASF362
	.sleb128 119
	.uleb128 0x9
	.long	.LASF363
	.sleb128 120
	.uleb128 0x9
	.long	.LASF364
	.sleb128 121
	.uleb128 0x9
	.long	.LASF365
	.sleb128 122
	.uleb128 0x9
	.long	.LASF366
	.sleb128 123
	.uleb128 0x9
	.long	.LASF367
	.sleb128 124
	.uleb128 0x9
	.long	.LASF368
	.sleb128 125
	.uleb128 0x9
	.long	.LASF369
	.sleb128 126
	.uleb128 0x9
	.long	.LASF370
	.sleb128 127
	.uleb128 0x9
	.long	.LASF371
	.sleb128 128
	.uleb128 0x9
	.long	.LASF372
	.sleb128 129
	.uleb128 0x9
	.long	.LASF373
	.sleb128 130
	.uleb128 0x9
	.long	.LASF374
	.sleb128 131
	.uleb128 0x9
	.long	.LASF375
	.sleb128 132
	.uleb128 0x9
	.long	.LASF376
	.sleb128 133
	.uleb128 0x9
	.long	.LASF377
	.sleb128 134
	.uleb128 0x9
	.long	.LASF378
	.sleb128 135
	.uleb128 0x9
	.long	.LASF379
	.sleb128 136
	.uleb128 0x9
	.long	.LASF380
	.sleb128 137
	.uleb128 0x9
	.long	.LASF381
	.sleb128 138
	.uleb128 0x9
	.long	.LASF382
	.sleb128 139
	.uleb128 0x9
	.long	.LASF383
	.sleb128 140
	.uleb128 0x9
	.long	.LASF384
	.sleb128 141
	.uleb128 0x9
	.long	.LASF385
	.sleb128 142
	.uleb128 0x9
	.long	.LASF386
	.sleb128 143
	.uleb128 0x9
	.long	.LASF387
	.sleb128 144
	.uleb128 0x9
	.long	.LASF388
	.sleb128 145
	.uleb128 0x9
	.long	.LASF389
	.sleb128 146
	.uleb128 0x9
	.long	.LASF390
	.sleb128 147
	.uleb128 0x9
	.long	.LASF391
	.sleb128 148
	.uleb128 0x9
	.long	.LASF392
	.sleb128 149
	.uleb128 0x9
	.long	.LASF393
	.sleb128 150
	.uleb128 0x9
	.long	.LASF394
	.sleb128 151
	.uleb128 0x9
	.long	.LASF395
	.sleb128 152
	.uleb128 0x9
	.long	.LASF396
	.sleb128 153
	.uleb128 0x9
	.long	.LASF397
	.sleb128 154
	.uleb128 0x9
	.long	.LASF398
	.sleb128 155
	.uleb128 0x9
	.long	.LASF399
	.sleb128 156
	.uleb128 0x9
	.long	.LASF400
	.sleb128 157
	.uleb128 0x9
	.long	.LASF401
	.sleb128 158
	.uleb128 0x9
	.long	.LASF402
	.sleb128 159
	.uleb128 0x9
	.long	.LASF403
	.sleb128 160
	.uleb128 0x9
	.long	.LASF404
	.sleb128 161
	.uleb128 0x9
	.long	.LASF405
	.sleb128 162
	.uleb128 0x9
	.long	.LASF406
	.sleb128 163
	.uleb128 0x9
	.long	.LASF407
	.sleb128 164
	.uleb128 0x9
	.long	.LASF408
	.sleb128 165
	.uleb128 0x9
	.long	.LASF409
	.sleb128 166
	.uleb128 0x9
	.long	.LASF410
	.sleb128 167
	.uleb128 0x9
	.long	.LASF411
	.sleb128 168
	.uleb128 0x9
	.long	.LASF412
	.sleb128 169
	.uleb128 0x9
	.long	.LASF413
	.sleb128 170
	.uleb128 0x9
	.long	.LASF414
	.sleb128 171
	.uleb128 0x9
	.long	.LASF415
	.sleb128 172
	.uleb128 0x9
	.long	.LASF416
	.sleb128 173
	.uleb128 0x9
	.long	.LASF417
	.sleb128 174
	.uleb128 0x9
	.long	.LASF418
	.sleb128 175
	.uleb128 0x9
	.long	.LASF419
	.sleb128 176
	.uleb128 0x9
	.long	.LASF420
	.sleb128 177
	.uleb128 0x9
	.long	.LASF421
	.sleb128 178
	.uleb128 0x9
	.long	.LASF422
	.sleb128 179
	.uleb128 0x9
	.long	.LASF423
	.sleb128 180
	.uleb128 0x9
	.long	.LASF424
	.sleb128 181
	.uleb128 0x9
	.long	.LASF425
	.sleb128 182
	.uleb128 0x9
	.long	.LASF426
	.sleb128 183
	.uleb128 0x9
	.long	.LASF427
	.sleb128 184
	.uleb128 0x9
	.long	.LASF428
	.sleb128 185
	.uleb128 0x9
	.long	.LASF429
	.sleb128 186
	.uleb128 0x9
	.long	.LASF430
	.sleb128 187
	.uleb128 0x9
	.long	.LASF431
	.sleb128 188
	.uleb128 0x9
	.long	.LASF432
	.sleb128 189
	.uleb128 0x9
	.long	.LASF433
	.sleb128 190
	.uleb128 0x9
	.long	.LASF434
	.sleb128 191
	.uleb128 0x9
	.long	.LASF435
	.sleb128 192
	.uleb128 0x9
	.long	.LASF436
	.sleb128 193
	.uleb128 0x9
	.long	.LASF437
	.sleb128 194
	.uleb128 0x9
	.long	.LASF438
	.sleb128 195
	.uleb128 0x9
	.long	.LASF439
	.sleb128 196
	.uleb128 0x9
	.long	.LASF440
	.sleb128 197
	.uleb128 0x9
	.long	.LASF441
	.sleb128 198
	.uleb128 0x9
	.long	.LASF442
	.sleb128 199
	.uleb128 0x9
	.long	.LASF443
	.sleb128 200
	.uleb128 0x9
	.long	.LASF444
	.sleb128 201
	.uleb128 0x9
	.long	.LASF445
	.sleb128 202
	.uleb128 0x9
	.long	.LASF446
	.sleb128 203
	.uleb128 0x9
	.long	.LASF447
	.sleb128 204
	.uleb128 0x9
	.long	.LASF448
	.sleb128 205
	.uleb128 0x9
	.long	.LASF449
	.sleb128 206
	.uleb128 0x9
	.long	.LASF450
	.sleb128 207
	.uleb128 0x9
	.long	.LASF451
	.sleb128 208
	.uleb128 0x9
	.long	.LASF452
	.sleb128 209
	.uleb128 0x9
	.long	.LASF453
	.sleb128 210
	.uleb128 0x9
	.long	.LASF454
	.sleb128 211
	.uleb128 0x9
	.long	.LASF455
	.sleb128 212
	.uleb128 0x9
	.long	.LASF456
	.sleb128 213
	.uleb128 0x9
	.long	.LASF457
	.sleb128 214
	.uleb128 0x9
	.long	.LASF458
	.sleb128 215
	.uleb128 0x9
	.long	.LASF459
	.sleb128 216
	.uleb128 0x9
	.long	.LASF460
	.sleb128 217
	.uleb128 0x9
	.long	.LASF461
	.sleb128 218
	.uleb128 0x9
	.long	.LASF462
	.sleb128 219
	.uleb128 0x9
	.long	.LASF463
	.sleb128 220
	.uleb128 0x9
	.long	.LASF464
	.sleb128 221
	.uleb128 0x9
	.long	.LASF465
	.sleb128 222
	.uleb128 0x9
	.long	.LASF466
	.sleb128 223
	.uleb128 0x9
	.long	.LASF467
	.sleb128 224
	.uleb128 0x9
	.long	.LASF468
	.sleb128 225
	.uleb128 0x9
	.long	.LASF469
	.sleb128 226
	.uleb128 0x9
	.long	.LASF470
	.sleb128 227
	.uleb128 0x9
	.long	.LASF471
	.sleb128 228
	.uleb128 0x9
	.long	.LASF472
	.sleb128 229
	.uleb128 0x9
	.long	.LASF473
	.sleb128 230
	.uleb128 0x9
	.long	.LASF474
	.sleb128 231
	.uleb128 0x9
	.long	.LASF475
	.sleb128 232
	.uleb128 0x9
	.long	.LASF476
	.sleb128 233
	.uleb128 0x9
	.long	.LASF477
	.sleb128 234
	.uleb128 0x9
	.long	.LASF478
	.sleb128 235
	.uleb128 0x9
	.long	.LASF479
	.sleb128 236
	.uleb128 0x9
	.long	.LASF480
	.sleb128 237
	.uleb128 0x9
	.long	.LASF481
	.sleb128 238
	.uleb128 0x9
	.long	.LASF482
	.sleb128 239
	.uleb128 0x9
	.long	.LASF483
	.sleb128 240
	.uleb128 0x9
	.long	.LASF484
	.sleb128 241
	.uleb128 0x9
	.long	.LASF485
	.sleb128 242
	.uleb128 0x9
	.long	.LASF486
	.sleb128 243
	.uleb128 0x9
	.long	.LASF487
	.sleb128 244
	.uleb128 0x9
	.long	.LASF488
	.sleb128 245
	.uleb128 0x9
	.long	.LASF489
	.sleb128 246
	.uleb128 0x9
	.long	.LASF490
	.sleb128 247
	.uleb128 0x9
	.long	.LASF491
	.sleb128 248
	.uleb128 0x9
	.long	.LASF492
	.sleb128 249
	.uleb128 0x9
	.long	.LASF493
	.sleb128 250
	.uleb128 0x9
	.long	.LASF494
	.sleb128 251
	.uleb128 0x9
	.long	.LASF495
	.sleb128 252
	.uleb128 0x9
	.long	.LASF496
	.sleb128 253
	.uleb128 0x9
	.long	.LASF497
	.sleb128 254
	.uleb128 0x9
	.long	.LASF498
	.sleb128 255
	.uleb128 0x9
	.long	.LASF499
	.sleb128 256
	.uleb128 0x9
	.long	.LASF500
	.sleb128 257
	.uleb128 0x9
	.long	.LASF501
	.sleb128 258
	.uleb128 0x9
	.long	.LASF502
	.sleb128 259
	.uleb128 0x9
	.long	.LASF503
	.sleb128 260
	.uleb128 0x9
	.long	.LASF504
	.sleb128 261
	.uleb128 0x9
	.long	.LASF505
	.sleb128 262
	.uleb128 0x9
	.long	.LASF506
	.sleb128 263
	.uleb128 0x9
	.long	.LASF507
	.sleb128 264
	.uleb128 0x9
	.long	.LASF508
	.sleb128 265
	.uleb128 0x9
	.long	.LASF509
	.sleb128 266
	.uleb128 0x9
	.long	.LASF510
	.sleb128 267
	.uleb128 0x9
	.long	.LASF511
	.sleb128 268
	.uleb128 0x9
	.long	.LASF512
	.sleb128 269
	.uleb128 0x9
	.long	.LASF513
	.sleb128 270
	.uleb128 0x9
	.long	.LASF514
	.sleb128 271
	.uleb128 0x9
	.long	.LASF515
	.sleb128 272
	.uleb128 0x9
	.long	.LASF516
	.sleb128 273
	.uleb128 0x9
	.long	.LASF517
	.sleb128 274
	.uleb128 0x9
	.long	.LASF518
	.sleb128 275
	.uleb128 0x9
	.long	.LASF519
	.sleb128 276
	.uleb128 0x9
	.long	.LASF520
	.sleb128 277
	.uleb128 0x9
	.long	.LASF521
	.sleb128 278
	.uleb128 0x9
	.long	.LASF522
	.sleb128 279
	.uleb128 0x9
	.long	.LASF523
	.sleb128 280
	.uleb128 0x9
	.long	.LASF524
	.sleb128 281
	.uleb128 0x9
	.long	.LASF525
	.sleb128 282
	.uleb128 0x9
	.long	.LASF526
	.sleb128 283
	.uleb128 0x9
	.long	.LASF527
	.sleb128 284
	.uleb128 0x9
	.long	.LASF528
	.sleb128 285
	.uleb128 0x9
	.long	.LASF529
	.sleb128 286
	.uleb128 0x9
	.long	.LASF530
	.sleb128 287
	.uleb128 0x9
	.long	.LASF531
	.sleb128 288
	.uleb128 0x9
	.long	.LASF532
	.sleb128 289
	.uleb128 0x9
	.long	.LASF533
	.sleb128 290
	.uleb128 0x9
	.long	.LASF534
	.sleb128 291
	.uleb128 0x9
	.long	.LASF535
	.sleb128 292
	.uleb128 0x9
	.long	.LASF536
	.sleb128 293
	.uleb128 0x9
	.long	.LASF537
	.sleb128 294
	.uleb128 0x9
	.long	.LASF538
	.sleb128 295
	.uleb128 0x9
	.long	.LASF539
	.sleb128 296
	.uleb128 0x9
	.long	.LASF540
	.sleb128 297
	.uleb128 0x9
	.long	.LASF541
	.sleb128 298
	.uleb128 0x9
	.long	.LASF542
	.sleb128 299
	.uleb128 0x9
	.long	.LASF543
	.sleb128 300
	.uleb128 0x9
	.long	.LASF544
	.sleb128 301
	.uleb128 0x9
	.long	.LASF545
	.sleb128 302
	.uleb128 0x9
	.long	.LASF546
	.sleb128 303
	.uleb128 0x9
	.long	.LASF547
	.sleb128 304
	.uleb128 0x9
	.long	.LASF548
	.sleb128 305
	.uleb128 0x9
	.long	.LASF549
	.sleb128 306
	.uleb128 0x9
	.long	.LASF550
	.sleb128 307
	.uleb128 0x9
	.long	.LASF551
	.sleb128 308
	.uleb128 0x9
	.long	.LASF552
	.sleb128 309
	.uleb128 0x9
	.long	.LASF553
	.sleb128 310
	.uleb128 0x9
	.long	.LASF554
	.sleb128 311
	.uleb128 0x9
	.long	.LASF555
	.sleb128 312
	.uleb128 0x9
	.long	.LASF556
	.sleb128 313
	.uleb128 0x9
	.long	.LASF557
	.sleb128 314
	.uleb128 0x9
	.long	.LASF558
	.sleb128 315
	.uleb128 0x9
	.long	.LASF559
	.sleb128 316
	.uleb128 0x9
	.long	.LASF560
	.sleb128 317
	.uleb128 0x9
	.long	.LASF561
	.sleb128 318
	.uleb128 0x9
	.long	.LASF562
	.sleb128 319
	.uleb128 0x9
	.long	.LASF563
	.sleb128 320
	.uleb128 0x9
	.long	.LASF564
	.sleb128 321
	.uleb128 0x9
	.long	.LASF565
	.sleb128 322
	.uleb128 0x9
	.long	.LASF566
	.sleb128 323
	.uleb128 0x9
	.long	.LASF567
	.sleb128 324
	.uleb128 0x9
	.long	.LASF568
	.sleb128 325
	.uleb128 0x9
	.long	.LASF569
	.sleb128 326
	.uleb128 0x9
	.long	.LASF570
	.sleb128 327
	.uleb128 0x9
	.long	.LASF571
	.sleb128 328
	.uleb128 0x9
	.long	.LASF572
	.sleb128 329
	.uleb128 0x9
	.long	.LASF573
	.sleb128 330
	.uleb128 0x9
	.long	.LASF574
	.sleb128 331
	.uleb128 0x9
	.long	.LASF575
	.sleb128 332
	.uleb128 0x9
	.long	.LASF576
	.sleb128 333
	.uleb128 0x9
	.long	.LASF577
	.sleb128 334
	.uleb128 0x9
	.long	.LASF578
	.sleb128 335
	.uleb128 0x9
	.long	.LASF579
	.sleb128 336
	.uleb128 0x9
	.long	.LASF580
	.sleb128 337
	.uleb128 0x9
	.long	.LASF581
	.sleb128 338
	.uleb128 0x9
	.long	.LASF582
	.sleb128 339
	.uleb128 0x9
	.long	.LASF583
	.sleb128 340
	.uleb128 0x9
	.long	.LASF584
	.sleb128 341
	.uleb128 0x9
	.long	.LASF585
	.sleb128 342
	.uleb128 0x9
	.long	.LASF586
	.sleb128 343
	.uleb128 0x9
	.long	.LASF587
	.sleb128 344
	.uleb128 0x9
	.long	.LASF588
	.sleb128 345
	.uleb128 0x9
	.long	.LASF589
	.sleb128 346
	.uleb128 0x9
	.long	.LASF590
	.sleb128 347
	.uleb128 0x9
	.long	.LASF591
	.sleb128 348
	.uleb128 0x9
	.long	.LASF592
	.sleb128 349
	.uleb128 0x9
	.long	.LASF593
	.sleb128 350
	.uleb128 0x9
	.long	.LASF594
	.sleb128 351
	.uleb128 0x9
	.long	.LASF595
	.sleb128 352
	.byte	0
	.uleb128 0x1d
	.long	0x1080
	.uleb128 0x6
	.byte	0x8
	.long	0x1a7e
	.uleb128 0x6
	.byte	0x8
	.long	0x2d0
	.uleb128 0x6
	.byte	0x8
	.long	0x56c
	.uleb128 0x13
	.long	.LASF596
	.byte	0x40
	.byte	0x8
	.byte	0x70
	.long	0x1b0c
	.uleb128 0x1e
	.string	"cv"
	.byte	0x8
	.byte	0x71
	.long	0x1091
	.byte	0
	.uleb128 0x1e
	.string	"gv"
	.byte	0x8
	.byte	0x72
	.long	0x109d
	.byte	0x8
	.uleb128 0x12
	.long	.LASF597
	.byte	0x8
	.byte	0x73
	.long	0x109d
	.byte	0x10
	.uleb128 0x12
	.long	.LASF598
	.byte	0x8
	.byte	0x75
	.long	0x10a3
	.byte	0x18
	.uleb128 0x12
	.long	.LASF599
	.byte	0x8
	.byte	0x77
	.long	0x10a3
	.byte	0x20
	.uleb128 0x12
	.long	.LASF600
	.byte	0x8
	.byte	0x78
	.long	0x5e
	.byte	0x28
	.uleb128 0x12
	.long	.LASF601
	.byte	0x8
	.byte	0x79
	.long	0xead
	.byte	0x30
	.uleb128 0x12
	.long	.LASF602
	.byte	0x8
	.byte	0x7a
	.long	0xead
	.byte	0x31
	.uleb128 0x12
	.long	.LASF603
	.byte	0x8
	.byte	0x7b
	.long	0x1b0c
	.byte	0x38
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x10ee
	.uleb128 0x13
	.long	.LASF604
	.byte	0x28
	.byte	0x8
	.byte	0xd3
	.long	0x1b66
	.uleb128 0x12
	.long	.LASF605
	.byte	0x8
	.byte	0xd4
	.long	0xec2
	.byte	0
	.uleb128 0x12
	.long	.LASF606
	.byte	0x8
	.byte	0xd5
	.long	0xec2
	.byte	0x4
	.uleb128 0x12
	.long	.LASF607
	.byte	0x8
	.byte	0xd6
	.long	0xf20
	.byte	0x8
	.uleb128 0x12
	.long	.LASF608
	.byte	0x8
	.byte	0xd7
	.long	0x1080
	.byte	0x10
	.uleb128 0x12
	.long	.LASF609
	.byte	0x8
	.byte	0xd8
	.long	0xf20
	.byte	0x18
	.uleb128 0x1e
	.string	"cv"
	.byte	0x8
	.byte	0xd9
	.long	0x1091
	.byte	0x20
	.byte	0
	.uleb128 0x13
	.long	.LASF610
	.byte	0x58
	.byte	0x8
	.byte	0xf0
	.long	0x1bf8
	.uleb128 0x12
	.long	.LASF611
	.byte	0x8
	.byte	0xf1
	.long	0x84
	.byte	0
	.uleb128 0x12
	.long	.LASF612
	.byte	0x8
	.byte	0xf2
	.long	0xec2
	.byte	0x8
	.uleb128 0x12
	.long	.LASF613
	.byte	0x8
	.byte	0xf3
	.long	0x1080
	.byte	0x10
	.uleb128 0x12
	.long	.LASF614
	.byte	0x8
	.byte	0xf4
	.long	0x1080
	.byte	0x18
	.uleb128 0x12
	.long	.LASF615
	.byte	0x8
	.byte	0xf5
	.long	0x1080
	.byte	0x20
	.uleb128 0x12
	.long	.LASF616
	.byte	0x8
	.byte	0xfa
	.long	0x1bf8
	.byte	0x28
	.uleb128 0x12
	.long	.LASF617
	.byte	0x8
	.byte	0xfc
	.long	0xf20
	.byte	0x30
	.uleb128 0x12
	.long	.LASF618
	.byte	0x8
	.byte	0xfd
	.long	0xf20
	.byte	0x38
	.uleb128 0x12
	.long	.LASF619
	.byte	0x8
	.byte	0xfe
	.long	0x10a3
	.byte	0x40
	.uleb128 0x12
	.long	.LASF620
	.byte	0x8
	.byte	0xff
	.long	0x14c
	.byte	0x48
	.uleb128 0x14
	.long	.LASF621
	.byte	0x8
	.value	0x100
	.long	0x14c
	.byte	0x50
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xf20
	.uleb128 0x1b
	.byte	0x58
	.byte	0x8
	.value	0x139
	.long	0x1c2c
	.uleb128 0x17
	.long	.LASF622
	.byte	0x8
	.value	0x13a
	.long	0x1a95
	.uleb128 0x17
	.long	.LASF623
	.byte	0x8
	.value	0x13b
	.long	0x1b12
	.uleb128 0x17
	.long	.LASF624
	.byte	0x8
	.value	0x13c
	.long	0x1b66
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1f7
	.uleb128 0x15
	.long	.LASF625
	.byte	0x58
	.byte	0x8
	.value	0x16e
	.long	0x1cf6
	.uleb128 0x14
	.long	.LASF626
	.byte	0x8
	.value	0x16f
	.long	0xec2
	.byte	0
	.uleb128 0x14
	.long	.LASF627
	.byte	0x8
	.value	0x170
	.long	0xec2
	.byte	0x4
	.uleb128 0x14
	.long	.LASF628
	.byte	0x8
	.value	0x171
	.long	0xec2
	.byte	0x8
	.uleb128 0x14
	.long	.LASF629
	.byte	0x8
	.value	0x172
	.long	0xec2
	.byte	0xc
	.uleb128 0x14
	.long	.LASF630
	.byte	0x8
	.value	0x173
	.long	0x8a
	.byte	0x10
	.uleb128 0x14
	.long	.LASF631
	.byte	0x8
	.value	0x174
	.long	0x8a
	.byte	0x11
	.uleb128 0x14
	.long	.LASF632
	.byte	0x8
	.value	0x175
	.long	0x84
	.byte	0x18
	.uleb128 0x14
	.long	.LASF633
	.byte	0x8
	.value	0x176
	.long	0xf20
	.byte	0x20
	.uleb128 0x14
	.long	.LASF634
	.byte	0x8
	.value	0x177
	.long	0xf20
	.byte	0x28
	.uleb128 0x14
	.long	.LASF635
	.byte	0x8
	.value	0x178
	.long	0x84
	.byte	0x30
	.uleb128 0x14
	.long	.LASF636
	.byte	0x8
	.value	0x179
	.long	0x84
	.byte	0x38
	.uleb128 0x14
	.long	.LASF637
	.byte	0x8
	.value	0x17a
	.long	0x84
	.byte	0x40
	.uleb128 0x14
	.long	.LASF638
	.byte	0x8
	.value	0x17b
	.long	0x77
	.byte	0x48
	.uleb128 0x14
	.long	.LASF639
	.byte	0x8
	.value	0x17c
	.long	0x1a8f
	.byte	0x50
	.byte	0
	.uleb128 0x1b
	.byte	0x88
	.byte	0x8
	.value	0x1a4
	.long	0x1d18
	.uleb128 0x17
	.long	.LASF640
	.byte	0x8
	.value	0x1a5
	.long	0x797
	.uleb128 0x17
	.long	.LASF641
	.byte	0x8
	.value	0x1a6
	.long	0x1c32
	.byte	0
	.uleb128 0x15
	.long	.LASF642
	.byte	0x38
	.byte	0x8
	.value	0x20c
	.long	0x1d8e
	.uleb128 0x14
	.long	.LASF643
	.byte	0x8
	.value	0x20d
	.long	0x10a3
	.byte	0
	.uleb128 0x14
	.long	.LASF644
	.byte	0x8
	.value	0x20e
	.long	0x1d8e
	.byte	0x8
	.uleb128 0x14
	.long	.LASF645
	.byte	0x8
	.value	0x20f
	.long	0xec2
	.byte	0x10
	.uleb128 0x14
	.long	.LASF646
	.byte	0x8
	.value	0x210
	.long	0xec2
	.byte	0x14
	.uleb128 0x14
	.long	.LASF647
	.byte	0x8
	.value	0x211
	.long	0xec2
	.byte	0x18
	.uleb128 0x14
	.long	.LASF648
	.byte	0x8
	.value	0x212
	.long	0x1d94
	.byte	0x20
	.uleb128 0x14
	.long	.LASF649
	.byte	0x8
	.value	0x213
	.long	0x1d94
	.byte	0x28
	.uleb128 0x14
	.long	.LASF650
	.byte	0x8
	.value	0x214
	.long	0xec2
	.byte	0x30
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x763
	.uleb128 0x6
	.byte	0x8
	.long	0x1d18
	.uleb128 0x10
	.long	.LASF651
	.byte	0x8
	.value	0x219
	.long	0x1d18
	.uleb128 0xd
	.string	"HE"
	.byte	0xe
	.byte	0xc
	.long	0x1db0
	.uleb128 0x11
	.string	"he"
	.byte	0x18
	.byte	0xe
	.byte	0x10
	.long	0x1de0
	.uleb128 0x12
	.long	.LASF652
	.byte	0xe
	.byte	0x11
	.long	0x1e1c
	.byte	0
	.uleb128 0x12
	.long	.LASF653
	.byte	0xe
	.byte	0x12
	.long	0x1e22
	.byte	0x8
	.uleb128 0x12
	.long	.LASF654
	.byte	0xe
	.byte	0x13
	.long	0xf20
	.byte	0x10
	.byte	0
	.uleb128 0xd
	.string	"HEK"
	.byte	0xe
	.byte	0xd
	.long	0x1deb
	.uleb128 0x11
	.string	"hek"
	.byte	0xc
	.byte	0xe
	.byte	0x17
	.long	0x1e1c
	.uleb128 0x12
	.long	.LASF655
	.byte	0xe
	.byte	0x18
	.long	0xecd
	.byte	0
	.uleb128 0x12
	.long	.LASF656
	.byte	0xe
	.byte	0x19
	.long	0xec2
	.byte	0x4
	.uleb128 0x12
	.long	.LASF657
	.byte	0xe
	.byte	0x1a
	.long	0xf26
	.byte	0x8
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1da6
	.uleb128 0x6
	.byte	0x8
	.long	0x1de0
	.uleb128 0x1a
	.long	0x57
	.long	0x1e3c
	.uleb128 0x19
	.long	0xf20
	.uleb128 0x19
	.long	0x1062
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1e28
	.uleb128 0x1a
	.long	0xecd
	.long	0x1e56
	.uleb128 0x19
	.long	0xf20
	.uleb128 0x19
	.long	0x1062
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1e42
	.uleb128 0x1a
	.long	0x57
	.long	0x1e7f
	.uleb128 0x19
	.long	0xf20
	.uleb128 0x19
	.long	0x1062
	.uleb128 0x19
	.long	0xf20
	.uleb128 0x19
	.long	0x121
	.uleb128 0x19
	.long	0x57
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1e5c
	.uleb128 0x1a
	.long	0x57
	.long	0x1e99
	.uleb128 0x19
	.long	0x1062
	.uleb128 0x19
	.long	0x1e99
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xe6c
	.uleb128 0x6
	.byte	0x8
	.long	0x1e85
	.uleb128 0x6
	.byte	0x8
	.long	0xd91
	.uleb128 0x10
	.long	.LASF658
	.byte	0x6
	.value	0xa45
	.long	0x1eb7
	.uleb128 0x15
	.long	.LASF659
	.byte	0x20
	.byte	0x6
	.value	0xa46
	.long	0x1f06
	.uleb128 0x14
	.long	.LASF660
	.byte	0x6
	.value	0xa47
	.long	0xec2
	.byte	0
	.uleb128 0x14
	.long	.LASF661
	.byte	0x6
	.value	0xa48
	.long	0xec2
	.byte	0x4
	.uleb128 0x14
	.long	.LASF662
	.byte	0x6
	.value	0xa49
	.long	0x1080
	.byte	0x8
	.uleb128 0x14
	.long	.LASF663
	.byte	0x6
	.value	0xa4a
	.long	0x84
	.byte	0x10
	.uleb128 0x14
	.long	.LASF664
	.byte	0x6
	.value	0xa4b
	.long	0x84
	.byte	0x18
	.byte	0
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.long	.LASF665
	.uleb128 0x1f
	.byte	0x8
	.byte	0x14
	.byte	0x41
	.long	0x1f42
	.uleb128 0x20
	.long	.LASF666
	.byte	0x14
	.byte	0x42
	.long	0xec2
	.uleb128 0x20
	.long	.LASF667
	.byte	0x14
	.byte	0x43
	.long	0x84
	.uleb128 0x20
	.long	.LASF668
	.byte	0x14
	.byte	0x44
	.long	0x1080
	.uleb128 0x20
	.long	.LASF669
	.byte	0x14
	.byte	0x45
	.long	0x109d
	.byte	0
	.uleb128 0x4
	.long	.LASF670
	.byte	0x14
	.byte	0x46
	.long	0x1f0d
	.uleb128 0x21
	.byte	0x4
	.byte	0x6
	.value	0xdfd
	.long	0x1f87
	.uleb128 0x9
	.long	.LASF671
	.sleb128 0
	.uleb128 0x9
	.long	.LASF672
	.sleb128 1
	.uleb128 0x9
	.long	.LASF673
	.sleb128 2
	.uleb128 0x9
	.long	.LASF674
	.sleb128 3
	.uleb128 0x9
	.long	.LASF675
	.sleb128 4
	.uleb128 0x9
	.long	.LASF676
	.sleb128 5
	.uleb128 0x9
	.long	.LASF677
	.sleb128 6
	.uleb128 0x9
	.long	.LASF678
	.sleb128 7
	.byte	0
	.uleb128 0x10
	.long	.LASF679
	.byte	0x6
	.value	0xe06
	.long	0x1f4d
	.uleb128 0x10
	.long	.LASF680
	.byte	0x6
	.value	0xe6e
	.long	0xeef
	.uleb128 0x21
	.byte	0x4
	.byte	0x6
	.value	0xfb1
	.long	0x213e
	.uleb128 0x9
	.long	.LASF681
	.sleb128 0
	.uleb128 0x9
	.long	.LASF682
	.sleb128 1
	.uleb128 0x9
	.long	.LASF683
	.sleb128 2
	.uleb128 0x9
	.long	.LASF684
	.sleb128 3
	.uleb128 0x9
	.long	.LASF685
	.sleb128 4
	.uleb128 0x9
	.long	.LASF686
	.sleb128 5
	.uleb128 0x9
	.long	.LASF687
	.sleb128 6
	.uleb128 0x9
	.long	.LASF688
	.sleb128 7
	.uleb128 0x9
	.long	.LASF689
	.sleb128 8
	.uleb128 0x9
	.long	.LASF690
	.sleb128 9
	.uleb128 0x9
	.long	.LASF691
	.sleb128 10
	.uleb128 0x9
	.long	.LASF692
	.sleb128 11
	.uleb128 0x9
	.long	.LASF693
	.sleb128 12
	.uleb128 0x9
	.long	.LASF694
	.sleb128 13
	.uleb128 0x9
	.long	.LASF695
	.sleb128 14
	.uleb128 0x9
	.long	.LASF696
	.sleb128 15
	.uleb128 0x9
	.long	.LASF697
	.sleb128 16
	.uleb128 0x9
	.long	.LASF698
	.sleb128 17
	.uleb128 0x9
	.long	.LASF699
	.sleb128 18
	.uleb128 0x9
	.long	.LASF700
	.sleb128 19
	.uleb128 0x9
	.long	.LASF701
	.sleb128 20
	.uleb128 0x9
	.long	.LASF702
	.sleb128 21
	.uleb128 0x9
	.long	.LASF703
	.sleb128 22
	.uleb128 0x9
	.long	.LASF704
	.sleb128 23
	.uleb128 0x9
	.long	.LASF705
	.sleb128 24
	.uleb128 0x9
	.long	.LASF706
	.sleb128 25
	.uleb128 0x9
	.long	.LASF707
	.sleb128 26
	.uleb128 0x9
	.long	.LASF708
	.sleb128 27
	.uleb128 0x9
	.long	.LASF709
	.sleb128 28
	.uleb128 0x9
	.long	.LASF710
	.sleb128 29
	.uleb128 0x9
	.long	.LASF711
	.sleb128 30
	.uleb128 0x9
	.long	.LASF712
	.sleb128 31
	.uleb128 0x9
	.long	.LASF713
	.sleb128 32
	.uleb128 0x9
	.long	.LASF714
	.sleb128 33
	.uleb128 0x9
	.long	.LASF715
	.sleb128 34
	.uleb128 0x9
	.long	.LASF716
	.sleb128 35
	.uleb128 0x9
	.long	.LASF717
	.sleb128 36
	.uleb128 0x9
	.long	.LASF718
	.sleb128 37
	.uleb128 0x9
	.long	.LASF719
	.sleb128 38
	.uleb128 0x9
	.long	.LASF720
	.sleb128 39
	.uleb128 0x9
	.long	.LASF721
	.sleb128 40
	.uleb128 0x9
	.long	.LASF722
	.sleb128 41
	.uleb128 0x9
	.long	.LASF723
	.sleb128 42
	.uleb128 0x9
	.long	.LASF724
	.sleb128 43
	.uleb128 0x9
	.long	.LASF725
	.sleb128 44
	.uleb128 0x9
	.long	.LASF726
	.sleb128 45
	.uleb128 0x9
	.long	.LASF727
	.sleb128 46
	.uleb128 0x9
	.long	.LASF728
	.sleb128 47
	.uleb128 0x9
	.long	.LASF729
	.sleb128 48
	.uleb128 0x9
	.long	.LASF730
	.sleb128 49
	.uleb128 0x9
	.long	.LASF731
	.sleb128 50
	.uleb128 0x9
	.long	.LASF732
	.sleb128 51
	.uleb128 0x9
	.long	.LASF733
	.sleb128 52
	.uleb128 0x9
	.long	.LASF734
	.sleb128 53
	.uleb128 0x9
	.long	.LASF735
	.sleb128 54
	.uleb128 0x9
	.long	.LASF736
	.sleb128 55
	.uleb128 0x9
	.long	.LASF737
	.sleb128 56
	.uleb128 0x9
	.long	.LASF738
	.sleb128 57
	.uleb128 0x9
	.long	.LASF739
	.sleb128 58
	.uleb128 0x9
	.long	.LASF740
	.sleb128 59
	.uleb128 0x9
	.long	.LASF741
	.sleb128 60
	.uleb128 0x9
	.long	.LASF742
	.sleb128 61
	.uleb128 0x9
	.long	.LASF743
	.sleb128 62
	.uleb128 0x9
	.long	.LASF744
	.sleb128 63
	.uleb128 0x9
	.long	.LASF745
	.sleb128 64
	.uleb128 0x9
	.long	.LASF746
	.sleb128 65
	.uleb128 0x9
	.long	.LASF747
	.sleb128 66
	.byte	0
	.uleb128 0x22
	.long	.LASF761
	.byte	0x1
	.byte	0xd8
	.long	0x57
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x216e
	.uleb128 0x23
	.long	.LASF748
	.byte	0x1
	.byte	0xd8
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x24
	.long	.LASF752
	.byte	0x1
	.byte	0xf3
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x21e1
	.uleb128 0x23
	.long	.LASF749
	.byte	0x1
	.byte	0xf3
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.string	"s"
	.byte	0x1
	.byte	0xf3
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x26
	.long	.LASF750
	.byte	0x1
	.byte	0xf5
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x26
	.long	.LASF751
	.byte	0x1
	.byte	0xf6
	.long	0x8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -33
	.uleb128 0x27
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0x102
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF753
	.byte	0x1
	.value	0x11c
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x2249
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x11c
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF754
	.byte	0x1
	.value	0x11e
	.long	0x2249
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x28
	.string	"q"
	.byte	0x1
	.value	0x11f
	.long	0x8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -33
	.uleb128 0x27
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.uleb128 0x28
	.string	"nl"
	.byte	0x1
	.value	0x121
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0xb
	.long	0x8a
	.long	0x2259
	.uleb128 0xc
	.long	0x70
	.byte	0x2
	.byte	0
	.uleb128 0x2c
	.long	.LASF755
	.byte	0x1
	.value	0x13f
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x2285
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x13f
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2c
	.long	.LASF756
	.byte	0x1
	.value	0x146
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.long	0x22b1
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x146
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2d
	.long	.LASF955
	.byte	0x1
	.value	0x15b
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x2c
	.long	.LASF757
	.byte	0x1
	.value	0x18d
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.long	0x2336
	.uleb128 0x2e
	.long	.LASF758
	.byte	0x1
	.value	0x18d
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x18f
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x190
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x27
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.uleb128 0x2b
	.long	.LASF759
	.byte	0x1
	.value	0x19a
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x2f
	.long	.LASF1085
	.byte	0x1
	.value	0x1db
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x29
	.long	.LASF760
	.byte	0x1
	.value	0x1eb
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x23b2
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x1eb
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0x1ed
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"n"
	.byte	0x1
	.value	0x1ee
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x28
	.string	"e"
	.byte	0x1
	.value	0x1ef
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x28
	.string	"ch"
	.byte	0x1
	.value	0x1f0
	.long	0x8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -57
	.byte	0
	.uleb128 0x30
	.long	.LASF762
	.byte	0x1
	.value	0x224
	.long	0x84
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.uleb128 0x1
	.byte	0x9c
	.long	0x2460
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x224
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x27
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.uleb128 0x2b
	.long	.LASF763
	.byte	0x1
	.value	0x22c
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.long	.LASF764
	.byte	0x1
	.value	0x22d
	.long	0x9c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF765
	.byte	0x1
	.value	0x22d
	.long	0x9c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF766
	.byte	0x1
	.value	0x22e
	.long	0x9c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.long	.LASF767
	.byte	0x1
	.value	0x22e
	.long	0x9c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x27
	.quad	.LBB6
	.quad	.LBE6-.LBB6
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x288
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF768
	.byte	0x1
	.value	0x29d
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x24b9
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x29f
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0x2a0
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x27
	.quad	.LBB7
	.quad	.LBE7-.LBB7
	.uleb128 0x28
	.string	"ch"
	.byte	0x1
	.value	0x2aa
	.long	0x8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -33
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF769
	.byte	0x1
	.value	0x2c3
	.long	0xec2
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x2503
	.uleb128 0x2a
	.string	"f"
	.byte	0x1
	.value	0x2c3
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2a
	.string	"x"
	.byte	0x1
	.value	0x2c3
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x2c3
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x31
	.long	.LASF770
	.byte	0x1
	.value	0x2e1
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.long	0x2531
	.uleb128 0x2e
	.long	.LASF218
	.byte	0x1
	.value	0x2e1
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x30
	.long	.LASF771
	.byte	0x1
	.value	0x2fd
	.long	0x84
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.uleb128 0x1
	.byte	0x9c
	.long	0x25b9
	.uleb128 0x2e
	.long	.LASF772
	.byte	0x1
	.value	0x2fd
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2e
	.long	.LASF773
	.byte	0x1
	.value	0x2fd
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2e
	.long	.LASF774
	.byte	0x1
	.value	0x2fd
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2e
	.long	.LASF775
	.byte	0x1
	.value	0x2fd
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2e
	.long	.LASF776
	.byte	0x1
	.value	0x2fd
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x2ff
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x300
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x29
	.long	.LASF777
	.byte	0x1
	.value	0x326
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0x2612
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x326
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2e
	.long	.LASF778
	.byte	0x1
	.value	0x326
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x27
	.quad	.LBB8
	.quad	.LBE8-.LBB8
	.uleb128 0x28
	.string	"o"
	.byte	0x1
	.value	0x329
	.long	0x1080
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	.LASF816
	.byte	0x1
	.value	0x33c
	.long	0x162
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x26ce
	.uleb128 0x2a
	.string	"sv"
	.byte	0x1
	.value	0x33c
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2b
	.long	.LASF779
	.byte	0x1
	.value	0x33e
	.long	0x162
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF780
	.byte	0x1
	.value	0x33f
	.long	0x162
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x340
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2b
	.long	.LASF772
	.byte	0x1
	.value	0x341
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x28
	.string	"utf"
	.byte	0x1
	.value	0x342
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -73
	.uleb128 0x28
	.string	"end"
	.byte	0x1
	.value	0x343
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x27
	.quad	.LBB9
	.quad	.LBE9-.LBB9
	.uleb128 0x2b
	.long	.LASF781
	.byte	0x1
	.value	0x345
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x28
	.string	"n"
	.byte	0x1
	.value	0x346
	.long	0x157
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF782
	.byte	0x1
	.value	0x35d
	.long	0x84
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0x274c
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x35d
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2e
	.long	.LASF783
	.byte	0x1
	.value	0x35d
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2b
	.long	.LASF784
	.byte	0x1
	.value	0x35f
	.long	0x1080
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x360
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x27
	.quad	.LBB10
	.quad	.LBE10-.LBB10
	.uleb128 0x28
	.string	"ver"
	.byte	0x1
	.value	0x36b
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF785
	.byte	0x1
	.value	0x389
	.long	0xf20
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0x27d1
	.uleb128 0x2a
	.string	"sv"
	.byte	0x1
	.value	0x389
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x38b
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2b
	.long	.LASF786
	.byte	0x1
	.value	0x38c
	.long	0x84
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x38d
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x38e
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x28
	.string	"pv"
	.byte	0x1
	.value	0x38f
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x33
	.long	.LASF795
	.byte	0x1
	.value	0x3ab
	.quad	.L220
	.byte	0
	.uleb128 0x30
	.long	.LASF787
	.byte	0x1
	.value	0x3d2
	.long	0xec2
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x285f
	.uleb128 0x2b
	.long	.LASF34
	.byte	0x1
	.value	0x3d4
	.long	0xec2
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x27
	.quad	.LBB11
	.quad	.LBE11-.LBB11
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x3dc
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x27
	.quad	.LBB12
	.quad	.LBE12-.LBB12
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x3e0
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x28
	.string	"p"
	.byte	0x1
	.value	0x3e1
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x28
	.string	"nsv"
	.byte	0x1
	.value	0x3e2
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x34
	.long	.LASF1086
	.byte	0x1
	.value	0x408
	.long	0xec2
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x30
	.long	.LASF788
	.byte	0x1
	.value	0x442
	.long	0xec2
	.quad	.LFB22
	.quad	.LFE22-.LFB22
	.uleb128 0x1
	.byte	0x9c
	.long	0x28c0
	.uleb128 0x27
	.quad	.LBB13
	.quad	.LBE13-.LBB13
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x445
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF789
	.byte	0x1
	.value	0x4c1
	.long	0x84
	.quad	.LFB23
	.quad	.LFE23-.LFB23
	.uleb128 0x1
	.byte	0x9c
	.long	0x2cfb
	.uleb128 0x2e
	.long	.LASF772
	.byte	0x1
	.value	0x4c1
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -264
	.uleb128 0x2b
	.long	.LASF786
	.byte	0x1
	.value	0x4c3
	.long	0x84
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x4c4
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x4c5
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x4c6
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2b
	.long	.LASF790
	.byte	0x1
	.value	0x4c7
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -245
	.uleb128 0x2b
	.long	.LASF791
	.byte	0x1
	.value	0x4c8
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -244
	.uleb128 0x2b
	.long	.LASF792
	.byte	0x1
	.value	0x4c9
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -236
	.uleb128 0x2b
	.long	.LASF793
	.byte	0x1
	.value	0x4ca
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x28
	.string	"uv"
	.byte	0x1
	.value	0x4cb
	.long	0x157
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2b
	.long	.LASF794
	.byte	0x1
	.value	0x4cd
	.long	0x121
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x33
	.long	.LASF796
	.byte	0x1
	.value	0x671
	.quad	.L321
	.uleb128 0x33
	.long	.LASF797
	.byte	0x1
	.value	0x5b7
	.quad	.L350
	.uleb128 0x33
	.long	.LASF798
	.byte	0x1
	.value	0x63e
	.quad	.L373
	.uleb128 0x35
	.quad	.LBB14
	.quad	.LBE14-.LBB14
	.long	0x2a28
	.uleb128 0x28
	.string	"i"
	.byte	0x1
	.value	0x4de
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -228
	.uleb128 0x28
	.string	"min"
	.byte	0x1
	.value	0x4df
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x28
	.string	"max"
	.byte	0x1
	.value	0x4e0
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x27
	.quad	.LBB15
	.quad	.LBE15-.LBB15
	.uleb128 0x28
	.string	"c"
	.byte	0x1
	.value	0x4e3
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x28
	.string	"e"
	.byte	0x1
	.value	0x4e4
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB16
	.quad	.LBE16-.LBB16
	.long	0x2a6c
	.uleb128 0x2b
	.long	.LASF799
	.byte	0x1
	.value	0x532
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x2b
	.long	.LASF800
	.byte	0x1
	.value	0x533
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x28
	.string	"c"
	.byte	0x1
	.value	0x534
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -243
	.byte	0
	.uleb128 0x35
	.quad	.LBB17
	.quad	.LBE17-.LBB17
	.long	0x2aa2
	.uleb128 0x2b
	.long	.LASF209
	.byte	0x1
	.value	0x595
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x596
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.byte	0
	.uleb128 0x35
	.quad	.LBB18
	.quad	.LBE18-.LBB18
	.long	0x2ae6
	.uleb128 0x28
	.string	"e"
	.byte	0x1
	.value	0x5a0
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2b
	.long	.LASF209
	.byte	0x1
	.value	0x5a1
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x5a3
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.byte	0
	.uleb128 0x35
	.quad	.LBB19
	.quad	.LBE19-.LBB19
	.long	0x2b1c
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x5b0
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x2b
	.long	.LASF209
	.byte	0x1
	.value	0x5b1
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.byte	0
	.uleb128 0x35
	.quad	.LBB20
	.quad	.LBE20-.LBB20
	.long	0x2bb3
	.uleb128 0x2b
	.long	.LASF801
	.byte	0x1
	.value	0x5c9
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -220
	.uleb128 0x28
	.string	"c"
	.byte	0x1
	.value	0x5ca
	.long	0x2cfb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x27
	.quad	.LBB21
	.quad	.LBE21-.LBB21
	.uleb128 0x2b
	.long	.LASF802
	.byte	0x1
	.value	0x5d1
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x28
	.string	"src"
	.byte	0x1
	.value	0x5d2
	.long	0x2cfb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x28
	.string	"dst"
	.byte	0x1
	.value	0x5d2
	.long	0x2cfb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x27
	.quad	.LBB22
	.quad	.LBE22-.LBB22
	.uleb128 0x28
	.string	"ch"
	.byte	0x1
	.value	0x5d9
	.long	0xead
	.uleb128 0x3
	.byte	0x91
	.sleb128 -242
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB23
	.quad	.LBE23-.LBB23
	.long	0x2c75
	.uleb128 0x28
	.string	"e"
	.byte	0x1
	.value	0x5fc
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x28
	.string	"res"
	.byte	0x1
	.value	0x5fd
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x5fe
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x28
	.string	"str"
	.byte	0x1
	.value	0x5ff
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x35
	.quad	.LBB24
	.quad	.LBE24-.LBB24
	.long	0x2c2c
	.uleb128 0x2b
	.long	.LASF209
	.byte	0x1
	.value	0x608
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.byte	0
	.uleb128 0x35
	.quad	.LBB25
	.quad	.LBE25-.LBB25
	.long	0x2c52
	.uleb128 0x2b
	.long	.LASF803
	.byte	0x1
	.value	0x62b
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x27
	.quad	.LBB26
	.quad	.LBE26-.LBB26
	.uleb128 0x2b
	.long	.LASF804
	.byte	0x1
	.value	0x636
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB27
	.quad	.LBE27-.LBB27
	.long	0x2c99
	.uleb128 0x28
	.string	"c"
	.byte	0x1
	.value	0x649
	.long	0xead
	.uleb128 0x3
	.byte	0x91
	.sleb128 -241
	.byte	0
	.uleb128 0x27
	.quad	.LBB28
	.quad	.LBE28-.LBB28
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x675
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x28
	.string	"uv"
	.byte	0x1
	.value	0x676
	.long	0x157
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2b
	.long	.LASF805
	.byte	0x1
	.value	0x677
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x27
	.quad	.LBB29
	.quad	.LBE29-.LBB29
	.uleb128 0x28
	.string	"off"
	.byte	0x1
	.value	0x67b
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xead
	.uleb128 0x30
	.long	.LASF806
	.byte	0x1
	.value	0x6c6
	.long	0x57
	.quad	.LFB24
	.quad	.LFE24-.LFB24
	.uleb128 0x1
	.byte	0x9c
	.long	0x2dc2
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x6c6
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x27
	.quad	.LBB30
	.quad	.LBE30-.LBB30
	.uleb128 0x2b
	.long	.LASF807
	.byte	0x1
	.value	0x6e9
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1348
	.uleb128 0x2b
	.long	.LASF808
	.byte	0x1
	.value	0x6ea
	.long	0x12c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1328
	.uleb128 0x2b
	.long	.LASF809
	.byte	0x1
	.value	0x6eb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1350
	.uleb128 0x2b
	.long	.LASF810
	.byte	0x1
	.value	0x6eb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1349
	.uleb128 0x2b
	.long	.LASF786
	.byte	0x1
	.value	0x6ec
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1336
	.uleb128 0x2b
	.long	.LASF754
	.byte	0x1
	.value	0x6ed
	.long	0x2dc2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1072
	.uleb128 0x27
	.quad	.LBB31
	.quad	.LBE31-.LBB31
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x735
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1344
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xb
	.long	0x8a
	.long	0x2dd3
	.uleb128 0x36
	.long	0x70
	.value	0x3ff
	.byte	0
	.uleb128 0x30
	.long	.LASF811
	.byte	0x1
	.value	0x760
	.long	0x57
	.quad	.LFB25
	.quad	.LFE25-.LFB25
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ea6
	.uleb128 0x2e
	.long	.LASF772
	.byte	0x1
	.value	0x760
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -360
	.uleb128 0x2a
	.string	"gv"
	.byte	0x1
	.value	0x760
	.long	0x109d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -368
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x762
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -336
	.uleb128 0x2b
	.long	.LASF754
	.byte	0x1
	.value	0x763
	.long	0x12c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x764
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -344
	.uleb128 0x2b
	.long	.LASF812
	.byte	0x1
	.value	0x765
	.long	0x109d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -312
	.uleb128 0x33
	.long	.LASF813
	.byte	0x1
	.value	0x792
	.quad	.L526
	.uleb128 0x27
	.quad	.LBB32
	.quad	.LBE32-.LBB32
	.uleb128 0x28
	.string	"cv"
	.byte	0x1
	.value	0x768
	.long	0x1091
	.uleb128 0x3
	.byte	0x91
	.sleb128 -320
	.uleb128 0x27
	.quad	.LBB33
	.quad	.LBE33-.LBB33
	.uleb128 0x2b
	.long	.LASF814
	.byte	0x1
	.value	0x76c
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -328
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF815
	.byte	0x1
	.value	0x7a7
	.long	0x84
	.quad	.LFB26
	.quad	.LFE26-.LFB26
	.uleb128 0x1
	.byte	0x9c
	.long	0x2eea
	.uleb128 0x27
	.quad	.LBB34
	.quad	.LBE34-.LBB34
	.uleb128 0x28
	.string	"pdb"
	.byte	0x1
	.value	0x7aa
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	.LASF817
	.byte	0x1
	.value	0x7c7
	.long	0xf20
	.quad	.LFB27
	.quad	.LFE27-.LFB27
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f2b
	.uleb128 0x2e
	.long	.LASF818
	.byte	0x1
	.value	0x7c7
	.long	0xef5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2e
	.long	.LASF819
	.byte	0x1
	.value	0x7c7
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x2c
	.long	.LASF820
	.byte	0x1
	.value	0x7de
	.quad	.LFB28
	.quad	.LFE28-.LFB28
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f68
	.uleb128 0x2e
	.long	.LASF818
	.byte	0x1
	.value	0x7de
	.long	0xef5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.long	.LASF819
	.byte	0x1
	.value	0x7e0
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x32
	.long	.LASF821
	.byte	0x1
	.value	0x7f5
	.long	0xec2
	.quad	.LFB29
	.quad	.LFE29-.LFB29
	.uleb128 0x1
	.byte	0x9c
	.long	0x3006
	.uleb128 0x2a
	.string	"idx"
	.byte	0x1
	.value	0x7f5
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2e
	.long	.LASF822
	.byte	0x1
	.value	0x7f5
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2e
	.long	.LASF823
	.byte	0x1
	.value	0x7f5
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF818
	.byte	0x1
	.value	0x7f7
	.long	0xef5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.long	.LASF819
	.byte	0x1
	.value	0x7f8
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x27
	.quad	.LBB35
	.quad	.LBE35-.LBB35
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x803
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2b
	.long	.LASF824
	.byte	0x1
	.value	0x804
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF825
	.byte	0x1
	.value	0x82d
	.long	0x84
	.quad	.LFB30
	.quad	.LFE30-.LFB30
	.uleb128 0x1
	.byte	0x9c
	.long	0x3052
	.uleb128 0x2a
	.string	"sv"
	.byte	0x1
	.value	0x82d
	.long	0xf20
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.string	"fp"
	.byte	0x1
	.value	0x82d
	.long	0x10d1
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x2e
	.long	.LASF826
	.byte	0x1
	.value	0x82d
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x30
	.long	.LASF827
	.byte	0x1
	.value	0x841
	.long	0x1068
	.quad	.LFB31
	.quad	.LFE31-.LFB31
	.uleb128 0x1
	.byte	0x9c
	.long	0x30c1
	.uleb128 0x2e
	.long	.LASF828
	.byte	0x1
	.value	0x841
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.string	"len"
	.byte	0x1
	.value	0x841
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x28
	.string	"gv"
	.byte	0x1
	.value	0x843
	.long	0x109d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x27
	.quad	.LBB36
	.quad	.LBE36-.LBB36
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x851
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	.LASF829
	.byte	0x1
	.value	0x893
	.long	0x57
	.quad	.LFB32
	.quad	.LFE32-.LFB32
	.uleb128 0x1
	.byte	0x9c
	.long	0x39f9
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x895
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x896
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x28
	.string	"tmp"
	.byte	0x1
	.value	0x897
	.long	0xec2
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x898
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1400
	.uleb128 0x28
	.string	"gv"
	.byte	0x1
	.value	0x899
	.long	0x109d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1384
	.uleb128 0x28
	.string	"gvp"
	.byte	0x1
	.value	0x89a
	.long	0x39f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1376
	.uleb128 0x28
	.string	"bof"
	.byte	0x1
	.value	0x89b
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1457
	.uleb128 0x2b
	.long	.LASF830
	.byte	0x1
	.value	0x89c
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1444
	.uleb128 0x33
	.long	.LASF831
	.byte	0x1
	.value	0xced
	.quad	.L621
	.uleb128 0x33
	.long	.LASF832
	.byte	0x1
	.value	0x974
	.quad	.L622
	.uleb128 0x33
	.long	.LASF833
	.byte	0x1
	.value	0xee5
	.quad	.L650
	.uleb128 0x33
	.long	.LASF834
	.byte	0x1
	.value	0x9d3
	.quad	.L673
	.uleb128 0x33
	.long	.LASF835
	.byte	0x1
	.value	0xf45
	.quad	.L852
	.uleb128 0x33
	.long	.LASF836
	.byte	0x1
	.value	0xbbc
	.quad	.L857
	.uleb128 0x33
	.long	.LASF837
	.byte	0x1
	.value	0xc23
	.quad	.L864
	.uleb128 0x33
	.long	.LASF838
	.byte	0x1
	.value	0xc4b
	.quad	.L658
	.uleb128 0x33
	.long	.LASF839
	.byte	0x1
	.value	0xf41
	.quad	.L1312
	.uleb128 0x33
	.long	.LASF840
	.byte	0x1
	.value	0x101e
	.quad	.L1589
	.uleb128 0x33
	.long	.LASF841
	.byte	0x1
	.value	0x1013
	.quad	.L1609
	.uleb128 0x33
	.long	.LASF842
	.byte	0x1
	.value	0xfeb
	.quad	.L1624
	.uleb128 0x33
	.long	.LASF843
	.byte	0x1
	.value	0x139c
	.quad	.L1388
	.uleb128 0x35
	.quad	.LBB37
	.quad	.LBE37-.LBB37
	.long	0x324e
	.uleb128 0x2b
	.long	.LASF844
	.byte	0x1
	.value	0x8c4
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1456
	.byte	0
	.uleb128 0x35
	.quad	.LBB38
	.quad	.LBE38-.LBB38
	.long	0x3273
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x947
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1368
	.byte	0
	.uleb128 0x35
	.quad	.LBB39
	.quad	.LBE39-.LBB39
	.long	0x3299
	.uleb128 0x2b
	.long	.LASF845
	.byte	0x1
	.value	0x997
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1208
	.byte	0
	.uleb128 0x35
	.quad	.LBB40
	.quad	.LBE40-.LBB40
	.long	0x32be
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x9c6
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1200
	.byte	0
	.uleb128 0x35
	.quad	.LBB41
	.quad	.LBE41-.LBB41
	.long	0x32e3
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0xa1d
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1192
	.byte	0
	.uleb128 0x35
	.quad	.LBB42
	.quad	.LBE42-.LBB42
	.long	0x342f
	.uleb128 0x2b
	.long	.LASF846
	.byte	0x1
	.value	0xa39
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1184
	.uleb128 0x2b
	.long	.LASF847
	.byte	0x1
	.value	0xa3a
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1176
	.uleb128 0x35
	.quad	.LBB43
	.quad	.LBE43-.LBB43
	.long	0x333e
	.uleb128 0x2b
	.long	.LASF848
	.byte	0x1
	.value	0xa94
	.long	0x39ff
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1360
	.byte	0
	.uleb128 0x27
	.quad	.LBB44
	.quad	.LBE44-.LBB44
	.uleb128 0x2b
	.long	.LASF849
	.byte	0x1
	.value	0xaac
	.long	0xecd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1412
	.uleb128 0x2b
	.long	.LASF850
	.byte	0x1
	.value	0xaad
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1455
	.uleb128 0x2b
	.long	.LASF851
	.byte	0x1
	.value	0xaae
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1454
	.uleb128 0x27
	.quad	.LBB45
	.quad	.LBE45-.LBB45
	.uleb128 0x2b
	.long	.LASF852
	.byte	0x1
	.value	0xab4
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1453
	.uleb128 0x35
	.quad	.LBB46
	.quad	.LBE46-.LBB46
	.long	0x33c4
	.uleb128 0x28
	.string	"m"
	.byte	0x1
	.value	0xab7
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1168
	.byte	0
	.uleb128 0x35
	.quad	.LBB47
	.quad	.LBE47-.LBB47
	.long	0x33fa
	.uleb128 0x2b
	.long	.LASF853
	.byte	0x1
	.value	0xabf
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1440
	.uleb128 0x2b
	.long	.LASF854
	.byte	0x1
	.value	0xac0
	.long	0x39ff
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1352
	.byte	0
	.uleb128 0x27
	.quad	.LBB48
	.quad	.LBE48-.LBB48
	.uleb128 0x2b
	.long	.LASF853
	.byte	0x1
	.value	0xad5
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1436
	.uleb128 0x2b
	.long	.LASF854
	.byte	0x1
	.value	0xad6
	.long	0x39ff
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1344
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB49
	.quad	.LBE49-.LBB49
	.long	0x3455
	.uleb128 0x2b
	.long	.LASF855
	.byte	0x1
	.value	0xb0f
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1432
	.byte	0
	.uleb128 0x35
	.quad	.LBB50
	.quad	.LBE50-.LBB50
	.long	0x34c0
	.uleb128 0x2b
	.long	.LASF856
	.byte	0x1
	.value	0xbb1
	.long	0x1080
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1336
	.uleb128 0x35
	.quad	.LBB51
	.quad	.LBE51-.LBB51
	.long	0x349f
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0xbde
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1160
	.byte	0
	.uleb128 0x27
	.quad	.LBB52
	.quad	.LBE52-.LBB52
	.uleb128 0x28
	.string	"q"
	.byte	0x1
	.value	0xc10
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1452
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB53
	.quad	.LBE53-.LBB53
	.long	0x34e6
	.uleb128 0x2b
	.long	.LASF857
	.byte	0x1
	.value	0xc6c
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1451
	.byte	0
	.uleb128 0x37
	.long	.Ldebug_ranges0+0
	.long	0x3560
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0xc7e
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1328
	.uleb128 0x27
	.quad	.LBB55
	.quad	.LBE55-.LBB55
	.uleb128 0x2b
	.long	.LASF858
	.byte	0x1
	.value	0xcac
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1152
	.uleb128 0x2b
	.long	.LASF859
	.byte	0x1
	.value	0xcad
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1450
	.uleb128 0x2b
	.long	.LASF860
	.byte	0x1
	.value	0xcad
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1449
	.uleb128 0x2b
	.long	.LASF861
	.byte	0x1
	.value	0xcad
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1461
	.uleb128 0x2b
	.long	.LASF862
	.byte	0x1
	.value	0xcae
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1428
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB57
	.quad	.LBE57-.LBB57
	.long	0x3584
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0xd52
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1320
	.byte	0
	.uleb128 0x35
	.quad	.LBB58
	.quad	.LBE58-.LBB58
	.long	0x35da
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0xdbb
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1312
	.uleb128 0x27
	.quad	.LBB59
	.quad	.LBE59-.LBB59
	.uleb128 0x2b
	.long	.LASF754
	.byte	0x1
	.value	0xdd1
	.long	0x12c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1088
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0xdd2
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1392
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB60
	.quad	.LBE60-.LBB60
	.long	0x3622
	.uleb128 0x2b
	.long	.LASF863
	.byte	0x1
	.value	0xde1
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1448
	.uleb128 0x27
	.quad	.LBB61
	.quad	.LBE61-.LBB61
	.uleb128 0x2b
	.long	.LASF754
	.byte	0x1
	.value	0xde9
	.long	0x12c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1088
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB62
	.quad	.LBE62-.LBB62
	.long	0x3646
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0xe1e
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1304
	.byte	0
	.uleb128 0x35
	.quad	.LBB63
	.quad	.LBE63-.LBB63
	.long	0x369b
	.uleb128 0x2b
	.long	.LASF772
	.byte	0x1
	.value	0xeab
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1296
	.uleb128 0x27
	.quad	.LBB64
	.quad	.LBE64-.LBB64
	.uleb128 0x28
	.string	"c"
	.byte	0x1
	.value	0xeb6
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1447
	.uleb128 0x28
	.string	"gv"
	.byte	0x1
	.value	0xeb7
	.long	0x109d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1144
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB65
	.quad	.LBE65-.LBB65
	.long	0x36f2
	.uleb128 0x28
	.string	"ogv"
	.byte	0x1
	.value	0xf12
	.long	0x109d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1288
	.uleb128 0x28
	.string	"hgv"
	.byte	0x1
	.value	0xf13
	.long	0x109d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1280
	.uleb128 0x27
	.quad	.LBB66
	.quad	.LBE66-.LBB66
	.uleb128 0x28
	.string	"cv"
	.byte	0x1
	.value	0xf15
	.long	0x1091
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1136
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB67
	.quad	.LBE67-.LBB67
	.long	0x37d6
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0xf46
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1272
	.uleb128 0x2b
	.long	.LASF828
	.byte	0x1
	.value	0xf47
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1424
	.uleb128 0x2b
	.long	.LASF864
	.byte	0x1
	.value	0xf48
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1446
	.uleb128 0x35
	.quad	.LBB68
	.quad	.LBE68-.LBB68
	.long	0x375c
	.uleb128 0x2b
	.long	.LASF865
	.byte	0x1
	.value	0xf4d
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1392
	.byte	0
	.uleb128 0x35
	.quad	.LBB69
	.quad	.LBE69-.LBB69
	.long	0x3782
	.uleb128 0x2b
	.long	.LASF866
	.byte	0x1
	.value	0xf9d
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1445
	.byte	0
	.uleb128 0x27
	.quad	.LBB70
	.quad	.LBE70-.LBB70
	.uleb128 0x28
	.string	"cv"
	.byte	0x1
	.value	0xfe3
	.long	0x1091
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1096
	.uleb128 0x27
	.quad	.LBB71
	.quad	.LBE71-.LBB71
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0xffa
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1392
	.uleb128 0x2b
	.long	.LASF814
	.byte	0x1
	.value	0xffb
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1264
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB72
	.quad	.LBE72-.LBB72
	.long	0x3871
	.uleb128 0x28
	.string	"gv"
	.byte	0x1
	.value	0x103e
	.long	0x109d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1128
	.uleb128 0x27
	.quad	.LBB73
	.quad	.LBE73-.LBB73
	.uleb128 0x2b
	.long	.LASF867
	.byte	0x1
	.value	0x1042
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1256
	.uleb128 0x35
	.quad	.LBB74
	.quad	.LBE74-.LBB74
	.long	0x3840
	.uleb128 0x28
	.string	"fd"
	.byte	0x1
	.value	0x104c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1408
	.byte	0
	.uleb128 0x27
	.quad	.LBB75
	.quad	.LBE75-.LBB75
	.uleb128 0x2b
	.long	.LASF868
	.byte	0x1
	.value	0x1079
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1120
	.uleb128 0x28
	.string	"sp"
	.byte	0x1
	.value	0x107a
	.long	0x1bf8
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x35
	.quad	.LBB78
	.quad	.LBE78-.LBB78
	.long	0x3895
	.uleb128 0x28
	.string	"p"
	.byte	0x1
	.value	0x114a
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1248
	.byte	0
	.uleb128 0x35
	.quad	.LBB79
	.quad	.LBE79-.LBB79
	.long	0x38bb
	.uleb128 0x2b
	.long	.LASF754
	.byte	0x1
	.value	0x122f
	.long	0x2dc2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1088
	.byte	0
	.uleb128 0x35
	.quad	.LBB80
	.quad	.LBE80-.LBB80
	.long	0x38df
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0x1250
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1240
	.byte	0
	.uleb128 0x35
	.quad	.LBB81
	.quad	.LBE81-.LBB81
	.long	0x3956
	.uleb128 0x2b
	.long	.LASF869
	.byte	0x1
	.value	0x1299
	.long	0x1080
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1232
	.uleb128 0x2b
	.long	.LASF870
	.byte	0x1
	.value	0x129a
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1420
	.uleb128 0x27
	.quad	.LBB82
	.quad	.LBE82-.LBB82
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x129d
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1104
	.uleb128 0x27
	.quad	.LBB83
	.quad	.LBE83-.LBB83
	.uleb128 0x28
	.string	"b"
	.byte	0x1
	.value	0x12a0
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1112
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x27
	.quad	.LBB84
	.quad	.LBE84-.LBB84
	.uleb128 0x2b
	.long	.LASF754
	.byte	0x1
	.value	0x139e
	.long	0x12c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1088
	.uleb128 0x2b
	.long	.LASF871
	.byte	0x1
	.value	0x139f
	.long	0x9c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1224
	.uleb128 0x2b
	.long	.LASF872
	.byte	0x1
	.value	0x13a0
	.long	0x1f87
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1416
	.uleb128 0x2b
	.long	.LASF873
	.byte	0x1
	.value	0x13a1
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1460
	.uleb128 0x2b
	.long	.LASF874
	.byte	0x1
	.value	0x13a1
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1459
	.uleb128 0x2b
	.long	.LASF875
	.byte	0x1
	.value	0x13a1
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1458
	.uleb128 0x28
	.string	"key"
	.byte	0x1
	.value	0x13a2
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1404
	.uleb128 0x27
	.quad	.LBB85
	.quad	.LBE85-.LBB85
	.uleb128 0x28
	.string	"p"
	.byte	0x1
	.value	0x13cc
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1216
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x109d
	.uleb128 0x6
	.byte	0x8
	.long	0x84
	.uleb128 0x30
	.long	.LASF876
	.byte	0x1
	.value	0x14a5
	.long	0x57
	.quad	.LFB33
	.quad	.LFE33-.LFB33
	.uleb128 0x1
	.byte	0x9c
	.long	0x3a96
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x14a7
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x28
	.string	"tmp"
	.byte	0x1
	.value	0x14a8
	.long	0xec2
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x28
	.string	"pit"
	.byte	0x1
	.value	0x14aa
	.long	0x8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -49
	.uleb128 0x35
	.quad	.LBB86
	.quad	.LBE86-.LBB86
	.long	0x3a75
	.uleb128 0x28
	.string	"sym"
	.byte	0x1
	.value	0x14e6
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x27
	.quad	.LBB87
	.quad	.LBE87-.LBB87
	.uleb128 0x28
	.string	"gv"
	.byte	0x1
	.value	0x1513
	.long	0x109d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	.LASF877
	.byte	0x1
	.value	0x152d
	.long	0xec2
	.quad	.LFB34
	.quad	.LFE34-.LFB34
	.uleb128 0x1
	.byte	0x9c
	.long	0x3ae7
	.uleb128 0x2e
	.long	.LASF868
	.byte	0x1
	.value	0x152d
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2a
	.string	"len"
	.byte	0x1
	.value	0x152d
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x33
	.long	.LASF878
	.byte	0x1
	.value	0x2202
	.quad	.L2208
	.byte	0
	.uleb128 0x29
	.long	.LASF879
	.byte	0x1
	.value	0x2207
	.quad	.LFB35
	.quad	.LFE35-.LFB35
	.uleb128 0x1
	.byte	0x9c
	.long	0x3b82
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x2207
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2e
	.long	.LASF868
	.byte	0x1
	.value	0x2207
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2e
	.long	.LASF749
	.byte	0x1
	.value	0x2207
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x28
	.string	"w"
	.byte	0x1
	.value	0x2209
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.quad	.LBB88
	.quad	.LBE88-.LBB88
	.long	0x3b61
	.uleb128 0x2b
	.long	.LASF880
	.byte	0x1
	.value	0x220d
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x27
	.quad	.LBB89
	.quad	.LBE89-.LBB89
	.uleb128 0x28
	.string	"kw"
	.byte	0x1
	.value	0x2228
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF881
	.byte	0x1
	.value	0x2239
	.long	0xf20
	.quad	.LFB36
	.quad	.LFE36-.LFB36
	.uleb128 0x1
	.byte	0x9c
	.long	0x3d4a
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x2239
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2a
	.string	"len"
	.byte	0x1
	.value	0x2239
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2a
	.string	"key"
	.byte	0x1
	.value	0x2239
	.long	0x121
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2a
	.string	"sv"
	.byte	0x1
	.value	0x2239
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2a
	.string	"pv"
	.byte	0x1
	.value	0x2239
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2e
	.long	.LASF218
	.byte	0x1
	.value	0x223a
	.long	0x121
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x28
	.string	"sp"
	.byte	0x1
	.value	0x223c
	.long	0x1bf8
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2b
	.long	.LASF882
	.byte	0x1
	.value	0x223d
	.long	0x1068
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x28
	.string	"res"
	.byte	0x1
	.value	0x223e
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x28
	.string	"cvp"
	.byte	0x1
	.value	0x223f
	.long	0x1bf8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"cv"
	.byte	0x1
	.value	0x2240
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF883
	.byte	0x1
	.value	0x2240
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF884
	.byte	0x1
	.value	0x2241
	.long	0x121
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2b
	.long	.LASF885
	.byte	0x1
	.value	0x2241
	.long	0x121
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2b
	.long	.LASF886
	.byte	0x1
	.value	0x2241
	.long	0x121
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x33
	.long	.LASF887
	.byte	0x1
	.value	0x2256
	.quad	.L2960
	.uleb128 0x33
	.long	.LASF888
	.byte	0x1
	.value	0x2253
	.quad	.L2961
	.uleb128 0x35
	.quad	.LBB90
	.quad	.LBE90-.LBB90
	.long	0x3ccf
	.uleb128 0x28
	.string	"msg"
	.byte	0x1
	.value	0x2244
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x35
	.quad	.LBB91
	.quad	.LBE91-.LBB91
	.long	0x3cf5
	.uleb128 0x2b
	.long	.LASF889
	.byte	0x1
	.value	0x226b
	.long	0x3d4a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x35
	.quad	.LBB94
	.quad	.LBE94-.LBB94
	.long	0x3d1b
	.uleb128 0x28
	.string	"n_a"
	.byte	0x1
	.value	0x227d
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.byte	0
	.uleb128 0x27
	.quad	.LBB95
	.quad	.LBE95-.LBB95
	.uleb128 0x28
	.string	"sp"
	.byte	0x1
	.value	0x228b
	.long	0x1bf8
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2b
	.long	.LASF890
	.byte	0x1
	.value	0x228b
	.long	0x3d4a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1d9a
	.uleb128 0x30
	.long	.LASF891
	.byte	0x1
	.value	0x2299
	.long	0x84
	.quad	.LFB37
	.quad	.LFE37-.LFB37
	.uleb128 0x1
	.byte	0x9c
	.long	0x3df6
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x2299
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2e
	.long	.LASF892
	.byte	0x1
	.value	0x2299
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2e
	.long	.LASF893
	.byte	0x1
	.value	0x2299
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2e
	.long	.LASF894
	.byte	0x1
	.value	0x2299
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x2a
	.string	"slp"
	.byte	0x1
	.value	0x2299
	.long	0x3df6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x229b
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x28
	.string	"e"
	.byte	0x1
	.value	0x229c
	.long	0x84
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x27
	.quad	.LBB97
	.quad	.LBE97-.LBB97
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0x22ac
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x174
	.uleb128 0x30
	.long	.LASF895
	.byte	0x1
	.value	0x22be
	.long	0x84
	.quad	.LFB38
	.quad	.LFE38-.LFB38
	.uleb128 0x1
	.byte	0x9c
	.long	0x3f0a
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x22be
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2e
	.long	.LASF786
	.byte	0x1
	.value	0x22be
	.long	0x84
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x2e
	.long	.LASF892
	.byte	0x1
	.value	0x22be
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2e
	.long	.LASF893
	.byte	0x1
	.value	0x22be
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2e
	.long	.LASF896
	.byte	0x1
	.value	0x22be
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x22c0
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x28
	.string	"e"
	.byte	0x1
	.value	0x22c1
	.long	0x84
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2b
	.long	.LASF897
	.byte	0x1
	.value	0x22c2
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2b
	.long	.LASF898
	.byte	0x1
	.value	0x22c3
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -74
	.uleb128 0x35
	.quad	.LBB98
	.quad	.LBE98-.LBB98
	.long	0x3ec3
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0x22e0
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x35
	.quad	.LBB99
	.quad	.LBE99-.LBB99
	.long	0x3ee8
	.uleb128 0x28
	.string	"ch"
	.byte	0x1
	.value	0x2309
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -73
	.byte	0
	.uleb128 0x27
	.quad	.LBB100
	.quad	.LBE100-.LBB100
	.uleb128 0x2b
	.long	.LASF899
	.byte	0x1
	.value	0x2327
	.long	0x121
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x38
	.long	.LASF900
	.byte	0x1
	.value	0x235b
	.quad	.LFB39
	.quad	.LFE39-.LFB39
	.uleb128 0x1
	.byte	0x9c
	.long	0x3f46
	.uleb128 0x2e
	.long	.LASF901
	.byte	0x1
	.value	0x235b
	.long	0xfc5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2a
	.string	"ch"
	.byte	0x1
	.value	0x235b
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x30
	.long	.LASF902
	.byte	0x1
	.value	0x236e
	.long	0x84
	.quad	.LFB40
	.quad	.LFE40-.LFB40
	.uleb128 0x1
	.byte	0x9c
	.long	0x3fa2
	.uleb128 0x2e
	.long	.LASF772
	.byte	0x1
	.value	0x236e
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2e
	.long	.LASF218
	.byte	0x1
	.value	0x236e
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x28
	.string	"pm"
	.byte	0x1
	.value	0x2370
	.long	0x1a89
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x2371
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x30
	.long	.LASF903
	.byte	0x1
	.value	0x2391
	.long	0x84
	.quad	.LFB41
	.quad	.LFE41-.LFB41
	.uleb128 0x1
	.byte	0x9c
	.long	0x402b
	.uleb128 0x2e
	.long	.LASF772
	.byte	0x1
	.value	0x2391
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x2393
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x28
	.string	"pm"
	.byte	0x1
	.value	0x2394
	.long	0x1a89
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2b
	.long	.LASF904
	.byte	0x1
	.value	0x2395
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x28
	.string	"es"
	.byte	0x1
	.value	0x2396
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x27
	.quad	.LBB101
	.quad	.LBE101-.LBB101
	.uleb128 0x2b
	.long	.LASF905
	.byte	0x1
	.value	0x23c0
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF906
	.byte	0x1
	.value	0x23d7
	.long	0x84
	.quad	.LFB42
	.quad	.LFE42-.LFB42
	.uleb128 0x1
	.byte	0x9c
	.long	0x40c3
	.uleb128 0x2e
	.long	.LASF772
	.byte	0x1
	.value	0x23d7
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x23d9
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x28
	.string	"o"
	.byte	0x1
	.value	0x23da
	.long	0x1080
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x28
	.string	"tbl"
	.byte	0x1
	.value	0x23db
	.long	0x40c3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF907
	.byte	0x1
	.value	0x23dc
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x28
	.string	"del"
	.byte	0x1
	.value	0x23dd
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF908
	.byte	0x1
	.value	0x23de
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x33
	.long	.LASF909
	.byte	0x1
	.value	0x2402
	.quad	.L3217
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x50
	.uleb128 0x30
	.long	.LASF910
	.byte	0x1
	.value	0x2410
	.long	0x84
	.quad	.LFB43
	.quad	.LFE43-.LFB43
	.uleb128 0x1
	.byte	0x9c
	.long	0x4241
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x2410
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2b
	.long	.LASF911
	.byte	0x1
	.value	0x2412
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2b
	.long	.LASF34
	.byte	0x1
	.value	0x2413
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x2414
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x2b
	.long	.LASF912
	.byte	0x1
	.value	0x2415
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2b
	.long	.LASF861
	.byte	0x1
	.value	0x2416
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -133
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x2417
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x28
	.string	"e"
	.byte	0x1
	.value	0x2418
	.long	0x84
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2b
	.long	.LASF913
	.byte	0x1
	.value	0x2419
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF914
	.byte	0x1
	.value	0x241a
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x33
	.long	.LASF779
	.byte	0x1
	.value	0x24c8
	.quad	.L3284
	.uleb128 0x35
	.quad	.LBB102
	.quad	.LBE102-.LBB102
	.long	0x41b5
	.uleb128 0x2b
	.long	.LASF915
	.byte	0x1
	.value	0x243e
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.uleb128 0x35
	.quad	.LBB103
	.quad	.LBE103-.LBB103
	.long	0x41fb
	.uleb128 0x2b
	.long	.LASF916
	.byte	0x1
	.value	0x246a
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2b
	.long	.LASF917
	.byte	0x1
	.value	0x246b
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.long	.LASF915
	.byte	0x1
	.value	0x246c
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x35
	.quad	.LBB104
	.quad	.LBE104-.LBB104
	.long	0x421f
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x24b3
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x27
	.quad	.LBB105
	.quad	.LBE105-.LBB105
	.uleb128 0x28
	.string	"off"
	.byte	0x1
	.value	0x24bc
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF918
	.byte	0x1
	.value	0x24eb
	.long	0x84
	.quad	.LFB44
	.quad	.LFE44-.LFB44
	.uleb128 0x1
	.byte	0x9c
	.long	0x43ba
	.uleb128 0x2e
	.long	.LASF772
	.byte	0x1
	.value	0x24eb
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x24ed
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x24ee
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x28
	.string	"e"
	.byte	0x1
	.value	0x24ef
	.long	0x84
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x28
	.string	"end"
	.byte	0x1
	.value	0x24f0
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x24f1
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x33
	.long	.LASF919
	.byte	0x1
	.value	0x2553
	.quad	.L3342
	.uleb128 0x27
	.quad	.LBB106
	.quad	.LBE106-.LBB106
	.uleb128 0x2b
	.long	.LASF920
	.byte	0x1
	.value	0x2521
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -113
	.uleb128 0x2b
	.long	.LASF921
	.byte	0x1
	.value	0x2522
	.long	0x109d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x28
	.string	"gvp"
	.byte	0x1
	.value	0x2523
	.long	0x39f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x35
	.quad	.LBB107
	.quad	.LBE107-.LBB107
	.long	0x4398
	.uleb128 0x28
	.string	"tmp"
	.byte	0x1
	.value	0x2538
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x35
	.quad	.LBB108
	.quad	.LBE108-.LBB108
	.long	0x4353
	.uleb128 0x28
	.string	"sym"
	.byte	0x1
	.value	0x253f
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x35
	.quad	.LBB109
	.quad	.LBE109-.LBB109
	.long	0x4377
	.uleb128 0x28
	.string	"o"
	.byte	0x1
	.value	0x2547
	.long	0x1080
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x27
	.quad	.LBB110
	.quad	.LBE110-.LBB110
	.uleb128 0x28
	.string	"gv"
	.byte	0x1
	.value	0x2551
	.long	0x109d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x27
	.quad	.LBB111
	.quad	.LBE111-.LBB111
	.uleb128 0x28
	.string	"gv"
	.byte	0x1
	.value	0x256b
	.long	0x109d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF922
	.byte	0x1
	.value	0x25a6
	.long	0x84
	.quad	.LFB45
	.quad	.LFE45-.LFB45
	.uleb128 0x1
	.byte	0x9c
	.long	0x45ad
	.uleb128 0x2e
	.long	.LASF772
	.byte	0x1
	.value	0x25a6
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x2e
	.long	.LASF923
	.byte	0x1
	.value	0x25a6
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x2e
	.long	.LASF924
	.byte	0x1
	.value	0x25a6
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x25a8
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF858
	.byte	0x1
	.value	0x25a9
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x25aa
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2b
	.long	.LASF861
	.byte	0x1
	.value	0x25ab
	.long	0x8a
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x28
	.string	"to"
	.byte	0x1
	.value	0x25ac
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2b
	.long	.LASF862
	.byte	0x1
	.value	0x25ad
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2b
	.long	.LASF792
	.byte	0x1
	.value	0x25ae
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -175
	.uleb128 0x2b
	.long	.LASF925
	.byte	0x1
	.value	0x25af
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x2b
	.long	.LASF926
	.byte	0x1
	.value	0x25b0
	.long	0x45ad
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.long	.LASF927
	.byte	0x1
	.value	0x25b1
	.long	0x174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2b
	.long	.LASF928
	.byte	0x1
	.value	0x25b2
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x33
	.long	.LASF929
	.byte	0x1
	.value	0x267c
	.quad	.L3372
	.uleb128 0x35
	.quad	.LBB112
	.quad	.LBE112-.LBB112
	.long	0x458b
	.uleb128 0x2b
	.long	.LASF930
	.byte	0x1
	.value	0x25df
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -174
	.uleb128 0x27
	.quad	.LBB113
	.quad	.LBE113-.LBB113
	.uleb128 0x2b
	.long	.LASF802
	.byte	0x1
	.value	0x25e2
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x2b
	.long	.LASF931
	.byte	0x1
	.value	0x25e3
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -173
	.uleb128 0x28
	.string	"ns"
	.byte	0x1
	.value	0x25e5
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2b
	.long	.LASF932
	.byte	0x1
	.value	0x25e6
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x35
	.quad	.LBB114
	.quad	.LBE114-.LBB114
	.long	0x455b
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0x25f1
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.byte	0
	.uleb128 0x27
	.quad	.LBB115
	.quad	.LBE115-.LBB115
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0x2601
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x28
	.string	"w"
	.byte	0x1
	.value	0x2601
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x27
	.quad	.LBB116
	.quad	.LBE116-.LBB116
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x268b
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.uleb128 0xb
	.long	0xead
	.long	0x45bd
	.uleb128 0xc
	.long	0x70
	.byte	0xc
	.byte	0
	.uleb128 0x32
	.long	.LASF933
	.byte	0x1
	.value	0x26cd
	.long	0x84
	.quad	.LFB46
	.quad	.LFE46-.LFB46
	.uleb128 0x1
	.byte	0x9c
	.long	0x47f3
	.uleb128 0x2e
	.long	.LASF772
	.byte	0x1
	.value	0x26cd
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2e
	.long	.LASF934
	.byte	0x1
	.value	0x26cd
	.long	0x47f3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x28
	.string	"s"
	.byte	0x1
	.value	0x26cf
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x28
	.string	"d"
	.byte	0x1
	.value	0x26d0
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x28
	.string	"e"
	.byte	0x1
	.value	0x26d1
	.long	0x84
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x28
	.string	"nv"
	.byte	0x1
	.value	0x26d2
	.long	0x162
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"sv"
	.byte	0x1
	.value	0x26d3
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2b
	.long	.LASF935
	.byte	0x1
	.value	0x26d4
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -147
	.uleb128 0x2b
	.long	.LASF936
	.byte	0x1
	.value	0x26d5
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2b
	.long	.LASF937
	.byte	0x1
	.value	0x26d6
	.long	0x47f9
	.uleb128 0x9
	.byte	0x3
	.quad	number_too_long.12124
	.uleb128 0x33
	.long	.LASF938
	.byte	0x1
	.value	0x2796
	.quad	.L3448
	.uleb128 0x39
	.string	"out"
	.byte	0x1
	.value	0x276f
	.quad	.L3465
	.uleb128 0x33
	.long	.LASF939
	.byte	0x1
	.value	0x274c
	.quad	.L3470
	.uleb128 0x33
	.long	.LASF940
	.byte	0x1
	.value	0x2838
	.quad	.L3450
	.uleb128 0x35
	.quad	.LBB117
	.quad	.LBE117-.LBB117
	.long	0x47c1
	.uleb128 0x28
	.string	"n"
	.byte	0x1
	.value	0x26ec
	.long	0x162
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x28
	.string	"u"
	.byte	0x1
	.value	0x26ed
	.long	0x157
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2b
	.long	.LASF941
	.byte	0x1
	.value	0x26ee
	.long	0xec2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2b
	.long	.LASF942
	.byte	0x1
	.value	0x26ef
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -146
	.uleb128 0x2b
	.long	.LASF943
	.byte	0x1
	.value	0x26f0
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -145
	.uleb128 0x2b
	.long	.LASF944
	.byte	0x1
	.value	0x26f1
	.long	0x4809
	.uleb128 0x9
	.byte	0x3
	.quad	nvshift.12132
	.uleb128 0x2b
	.long	.LASF945
	.byte	0x1
	.value	0x26f2
	.long	0x4819
	.uleb128 0x9
	.byte	0x3
	.quad	bases.12133
	.uleb128 0x2b
	.long	.LASF946
	.byte	0x1
	.value	0x26f4
	.long	0x4819
	.uleb128 0x9
	.byte	0x3
	.quad	Bases.12134
	.uleb128 0x2b
	.long	.LASF947
	.byte	0x1
	.value	0x26f6
	.long	0x4819
	.uleb128 0x9
	.byte	0x3
	.quad	maxima.12135
	.uleb128 0x2b
	.long	.LASF948
	.byte	0x1
	.value	0x26fb
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2b
	.long	.LASF949
	.byte	0x1
	.value	0x26fb
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x28
	.string	"max"
	.byte	0x1
	.value	0x26fb
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x3a
	.long	.Ldebug_ranges0+0x30
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x271f
	.long	0x157
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x28
	.string	"b"
	.byte	0x1
	.value	0x271f
	.long	0x157
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.byte	0
	.uleb128 0x27
	.quad	.LBB120
	.quad	.LBE120-.LBB120
	.uleb128 0x28
	.string	"uv"
	.byte	0x1
	.value	0x2818
	.long	0x157
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2b
	.long	.LASF209
	.byte	0x1
	.value	0x2819
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1f42
	.uleb128 0xb
	.long	0x8a
	.long	0x4809
	.uleb128 0xc
	.long	0x70
	.byte	0xf
	.byte	0
	.uleb128 0xb
	.long	0x162
	.long	0x4819
	.uleb128 0xc
	.long	0x70
	.byte	0x4
	.byte	0
	.uleb128 0xb
	.long	0x84
	.long	0x4829
	.uleb128 0xc
	.long	0x70
	.byte	0x4
	.byte	0
	.uleb128 0x30
	.long	.LASF950
	.byte	0x1
	.value	0x284c
	.long	0x84
	.quad	.LFB47
	.quad	.LFE47-.LFB47
	.uleb128 0x1
	.byte	0x9c
	.long	0x48d2
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x284c
	.long	0x84
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x28
	.string	"eol"
	.byte	0x1
	.value	0x284e
	.long	0x84
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x28
	.string	"t"
	.byte	0x1
	.value	0x284f
	.long	0x84
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2b
	.long	.LASF951
	.byte	0x1
	.value	0x2850
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.long	.LASF952
	.byte	0x1
	.value	0x2851
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -66
	.uleb128 0x2b
	.long	.LASF953
	.byte	0x1
	.value	0x2852
	.long	0x8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -65
	.uleb128 0x33
	.long	.LASF954
	.byte	0x1
	.value	0x288c
	.quad	.L3574
	.uleb128 0x27
	.quad	.LBB121
	.quad	.LBE121-.LBB121
	.uleb128 0x28
	.string	"end"
	.byte	0x1
	.value	0x2875
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF956
	.byte	0x1
	.value	0x28ab
	.quad	.LFB48
	.quad	.LFE48-.LFB48
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x32
	.long	.LASF957
	.byte	0x1
	.value	0x28b4
	.long	0xec2
	.quad	.LFB49
	.quad	.LFE49-.LFB49
	.uleb128 0x1
	.byte	0x9c
	.long	0x494b
	.uleb128 0x2e
	.long	.LASF958
	.byte	0x1
	.value	0x28b4
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2e
	.long	.LASF209
	.byte	0x1
	.value	0x28b4
	.long	0xecd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF959
	.byte	0x1
	.value	0x28b6
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2b
	.long	.LASF960
	.byte	0x1
	.value	0x28b7
	.long	0x1091
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x32
	.long	.LASF961
	.byte	0x1
	.value	0x28d5
	.long	0x57
	.quad	.LFB50
	.quad	.LFE50-.LFB50
	.uleb128 0x1
	.byte	0x9c
	.long	0x497b
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x28d5
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x32
	.long	.LASF962
	.byte	0x1
	.value	0x28de
	.long	0x57
	.quad	.LFB51
	.quad	.LFE51-.LFB51
	.uleb128 0x1
	.byte	0x9c
	.long	0x4a09
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x28de
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2b
	.long	.LASF963
	.byte	0x1
	.value	0x28e0
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF99
	.byte	0x1
	.value	0x28e1
	.long	0x84
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.long	.LASF964
	.byte	0x1
	.value	0x28e2
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x28
	.string	"msg"
	.byte	0x1
	.value	0x28e3
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x27
	.quad	.LBB122
	.quad	.LBE122-.LBB122
	.uleb128 0x2b
	.long	.LASF965
	.byte	0x1
	.value	0x2918
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF966
	.byte	0x1
	.value	0x2943
	.long	0x84
	.quad	.LFB52
	.quad	.LFE52-.LFB52
	.uleb128 0x1
	.byte	0x9c
	.long	0x4acc
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x2943
	.long	0x2cfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.long	.LASF967
	.byte	0x1
	.value	0x2945
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x33
	.long	.LASF968
	.byte	0x1
	.value	0x2950
	.quad	.L3659
	.uleb128 0x33
	.long	.LASF969
	.byte	0x1
	.value	0x296a
	.quad	.L3662
	.uleb128 0x35
	.quad	.LBB123
	.quad	.LBE123-.LBB123
	.long	0x4a9b
	.uleb128 0x2b
	.long	.LASF970
	.byte	0x1
	.value	0x2952
	.long	0x2cfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.long	.LASF971
	.byte	0x1
	.value	0x2953
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.uleb128 0x27
	.quad	.LBB124
	.quad	.LBE124-.LBB124
	.uleb128 0x2b
	.long	.LASF970
	.byte	0x1
	.value	0x296c
	.long	0x2cfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2b
	.long	.LASF971
	.byte	0x1
	.value	0x296d
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF972
	.byte	0x1
	.value	0x29a7
	.quad	.LFB53
	.quad	.LFE53-.LFB53
	.uleb128 0x1
	.byte	0x9c
	.long	0x4b06
	.uleb128 0x2a
	.string	"f"
	.byte	0x1
	.value	0x29a7
	.long	0x77
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x28
	.string	"fp"
	.byte	0x1
	.value	0x29a9
	.long	0x10d1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x30
	.long	.LASF973
	.byte	0x1
	.value	0x29b4
	.long	0xec2
	.quad	.LFB54
	.quad	.LFE54-.LFB54
	.uleb128 0x1
	.byte	0x9c
	.long	0x4ba3
	.uleb128 0x2a
	.string	"idx"
	.byte	0x1
	.value	0x29b4
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2a
	.string	"sv"
	.byte	0x1
	.value	0x29b4
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2e
	.long	.LASF823
	.byte	0x1
	.value	0x29b4
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"old"
	.byte	0x1
	.value	0x29b6
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2b
	.long	.LASF799
	.byte	0x1
	.value	0x29b7
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x27
	.quad	.LBB125
	.quad	.LBE125-.LBB125
	.uleb128 0x2b
	.long	.LASF858
	.byte	0x1
	.value	0x29bc
	.long	0x2cfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.long	.LASF971
	.byte	0x1
	.value	0x29bd
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x30
	.long	.LASF974
	.byte	0x1
	.value	0x29c9
	.long	0xec2
	.quad	.LFB55
	.quad	.LFE55-.LFB55
	.uleb128 0x1
	.byte	0x9c
	.long	0x4c40
	.uleb128 0x2a
	.string	"idx"
	.byte	0x1
	.value	0x29c9
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2a
	.string	"sv"
	.byte	0x1
	.value	0x29c9
	.long	0xf20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2e
	.long	.LASF823
	.byte	0x1
	.value	0x29c9
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"old"
	.byte	0x1
	.value	0x29cb
	.long	0x174
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2b
	.long	.LASF799
	.byte	0x1
	.value	0x29cc
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x27
	.quad	.LBB126
	.quad	.LBE126-.LBB126
	.uleb128 0x2b
	.long	.LASF858
	.byte	0x1
	.value	0x29d1
	.long	0x2cfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.long	.LASF971
	.byte	0x1
	.value	0x29d2
	.long	0xec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	.LASF975
	.byte	0x1
	.value	0x29ed
	.long	0x84
	.quad	.LFB56
	.quad	.LFE56-.LFB56
	.uleb128 0x1
	.byte	0x9c
	.long	0x4d5b
	.uleb128 0x2a
	.string	"s"
	.byte	0x1
	.value	0x29ed
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2a
	.string	"sv"
	.byte	0x1
	.value	0x29ed
	.long	0xf20
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x28
	.string	"pos"
	.byte	0x1
	.value	0x29ef
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2b
	.long	.LASF772
	.byte	0x1
	.value	0x29f0
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x35
	.quad	.LBB127
	.quad	.LBE127-.LBB127
	.long	0x4cc5
	.uleb128 0x2b
	.long	.LASF889
	.byte	0x1
	.value	0x29f6
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x27
	.quad	.LBB128
	.quad	.LBE128-.LBB128
	.uleb128 0x28
	.string	"rev"
	.byte	0x1
	.value	0x2a01
	.long	0x157
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.long	.LASF754
	.byte	0x1
	.value	0x2a02
	.long	0x4d5b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.long	.LASF976
	.byte	0x1
	.value	0x2a03
	.long	0x2cfb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x27
	.quad	.LBB129
	.quad	.LBE129-.LBB129
	.uleb128 0x28
	.string	"end"
	.byte	0x1
	.value	0x2a0d
	.long	0x84
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2b
	.long	.LASF977
	.byte	0x1
	.value	0x2a0e
	.long	0x157
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x27
	.quad	.LBB130
	.quad	.LBE130-.LBB130
	.uleb128 0x2b
	.long	.LASF978
	.byte	0x1
	.value	0x2a10
	.long	0x157
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xb
	.long	0xead
	.long	0x4d6b
	.uleb128 0xc
	.long	0x70
	.byte	0xd
	.byte	0
	.uleb128 0x26
	.long	.LASF979
	.byte	0x1
	.byte	0x1d
	.long	0xf36
	.uleb128 0x9
	.byte	0x3
	.quad	ident_too_long
	.uleb128 0xb
	.long	0x8a
	.long	0x4d90
	.uleb128 0xc
	.long	0x70
	.byte	0x2c
	.byte	0
	.uleb128 0x26
	.long	.LASF980
	.byte	0x1
	.byte	0x1e
	.long	0x4d80
	.uleb128 0x9
	.byte	0x3
	.quad	c_without_g
	.uleb128 0xb
	.long	0x8a
	.long	0x4db5
	.uleb128 0xc
	.long	0x70
	.byte	0x29
	.byte	0
	.uleb128 0x26
	.long	.LASF981
	.byte	0x1
	.byte	0x1f
	.long	0x4da5
	.uleb128 0x9
	.byte	0x3
	.quad	c_in_subst
	.uleb128 0xb
	.long	0x2d
	.long	0x4dd5
	.uleb128 0x3b
	.byte	0
	.uleb128 0x3c
	.long	.LASF982
	.byte	0x15
	.byte	0x29
	.long	0x4de0
	.uleb128 0xa
	.long	0x4dca
	.uleb128 0xb
	.long	0x8a
	.long	0x4df0
	.uleb128 0x3b
	.byte	0
	.uleb128 0x3d
	.long	.LASF983
	.byte	0x6
	.value	0xce7
	.long	0x4dfc
	.uleb128 0xa
	.long	0x4de5
	.uleb128 0x3d
	.long	.LASF984
	.byte	0x6
	.value	0xce9
	.long	0x4e0d
	.uleb128 0xa
	.long	0x4de5
	.uleb128 0x3d
	.long	.LASF985
	.byte	0x6
	.value	0xd03
	.long	0x4e1e
	.uleb128 0xa
	.long	0x4de5
	.uleb128 0xb
	.long	0xecd
	.long	0x4e2e
	.uleb128 0x3b
	.byte	0
	.uleb128 0x3d
	.long	.LASF986
	.byte	0x16
	.value	0x5be
	.long	0x4e23
	.uleb128 0x3c
	.long	.LASF987
	.byte	0x17
	.byte	0x14
	.long	0x57
	.uleb128 0x3c
	.long	.LASF988
	.byte	0x17
	.byte	0x15
	.long	0x39ff
	.uleb128 0x3c
	.long	.LASF989
	.byte	0x17
	.byte	0x17
	.long	0x109d
	.uleb128 0x3c
	.long	.LASF990
	.byte	0x17
	.byte	0x18
	.long	0x109d
	.uleb128 0x3c
	.long	.LASF991
	.byte	0x17
	.byte	0x19
	.long	0x84
	.uleb128 0x3c
	.long	.LASF992
	.byte	0x17
	.byte	0x1e
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF993
	.byte	0x17
	.byte	0x21
	.long	0x84
	.uleb128 0x3c
	.long	.LASF994
	.byte	0x17
	.byte	0x22
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF995
	.byte	0x17
	.byte	0x23
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF996
	.byte	0x17
	.byte	0x24
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF997
	.byte	0x17
	.byte	0x25
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF998
	.byte	0x17
	.byte	0x26
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF999
	.byte	0x17
	.byte	0x27
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF1000
	.byte	0x17
	.byte	0x28
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF1001
	.byte	0x17
	.byte	0x34
	.long	0xead
	.uleb128 0x3c
	.long	.LASF1002
	.byte	0x17
	.byte	0x36
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF1003
	.byte	0x17
	.byte	0x3b
	.long	0xecd
	.uleb128 0x3c
	.long	.LASF1004
	.byte	0x17
	.byte	0x51
	.long	0x109d
	.uleb128 0x3c
	.long	.LASF1005
	.byte	0x17
	.byte	0x5d
	.long	0x109d
	.uleb128 0x3c
	.long	.LASF1006
	.byte	0x17
	.byte	0x81
	.long	0x1068
	.uleb128 0x3c
	.long	.LASF1007
	.byte	0x17
	.byte	0x82
	.long	0x1068
	.uleb128 0x3c
	.long	.LASF1008
	.byte	0x17
	.byte	0x83
	.long	0xf20
	.uleb128 0x3c
	.long	.LASF1009
	.byte	0x17
	.byte	0xa4
	.long	0xed8
	.uleb128 0x3c
	.long	.LASF1010
	.byte	0x17
	.byte	0xad
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF1011
	.byte	0x17
	.byte	0xae
	.long	0x10a3
	.uleb128 0x3c
	.long	.LASF1012
	.byte	0x17
	.byte	0xcc
	.long	0x4f58
	.uleb128 0x7
	.long	0x10d1
	.uleb128 0x3c
	.long	.LASF1013
	.byte	0x17
	.byte	0xcd
	.long	0x10a3
	.uleb128 0x3c
	.long	.LASF1014
	.byte	0x17
	.byte	0xcf
	.long	0x1f7
	.uleb128 0x3c
	.long	.LASF1015
	.byte	0x17
	.byte	0xd1
	.long	0x1091
	.uleb128 0x3c
	.long	.LASF1016
	.byte	0x17
	.byte	0xd3
	.long	0x10a3
	.uleb128 0x3c
	.long	.LASF1017
	.byte	0x17
	.byte	0xe3
	.long	0x84
	.uleb128 0x3c
	.long	.LASF1018
	.byte	0x17
	.byte	0xe4
	.long	0x8a
	.uleb128 0x3c
	.long	.LASF1019
	.byte	0x17
	.byte	0xe5
	.long	0x1eab
	.uleb128 0x3c
	.long	.LASF1020
	.byte	0x17
	.byte	0xf3
	.long	0xecd
	.uleb128 0x3d
	.long	.LASF1021
	.byte	0x17
	.value	0x114
	.long	0x12c
	.uleb128 0x3d
	.long	.LASF1022
	.byte	0x17
	.value	0x125
	.long	0x480
	.uleb128 0x3d
	.long	.LASF1023
	.byte	0x17
	.value	0x12a
	.long	0x84
	.uleb128 0x3d
	.long	.LASF1024
	.byte	0x17
	.value	0x12b
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1025
	.byte	0x17
	.value	0x12e
	.long	0xecd
	.uleb128 0x3d
	.long	.LASF1026
	.byte	0x17
	.value	0x12f
	.long	0xecd
	.uleb128 0x3d
	.long	.LASF1027
	.byte	0x17
	.value	0x130
	.long	0x57
	.uleb128 0x3d
	.long	.LASF1028
	.byte	0x17
	.value	0x131
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1029
	.byte	0x17
	.value	0x132
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1030
	.byte	0x17
	.value	0x133
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1031
	.byte	0x17
	.value	0x134
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1032
	.byte	0x17
	.value	0x135
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1033
	.byte	0x17
	.value	0x136
	.long	0xf20
	.uleb128 0x3d
	.long	.LASF1034
	.byte	0x17
	.value	0x137
	.long	0xf20
	.uleb128 0x3d
	.long	.LASF1035
	.byte	0x17
	.value	0x138
	.long	0x1080
	.uleb128 0x3d
	.long	.LASF1036
	.byte	0x17
	.value	0x139
	.long	0x1080
	.uleb128 0x3d
	.long	.LASF1037
	.byte	0x17
	.value	0x13a
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1038
	.byte	0x17
	.value	0x13b
	.long	0x84
	.uleb128 0x3d
	.long	.LASF1039
	.byte	0x17
	.value	0x13c
	.long	0x84
	.uleb128 0xb
	.long	0x1f42
	.long	0x50a9
	.uleb128 0xc
	.long	0x70
	.byte	0x4
	.byte	0
	.uleb128 0x3d
	.long	.LASF1040
	.byte	0x17
	.value	0x13f
	.long	0x5099
	.uleb128 0xb
	.long	0xec2
	.long	0x50c5
	.uleb128 0xc
	.long	0x70
	.byte	0x4
	.byte	0
	.uleb128 0x3d
	.long	.LASF1041
	.byte	0x17
	.value	0x140
	.long	0x50b5
	.uleb128 0x3d
	.long	.LASF1042
	.byte	0x17
	.value	0x141
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1043
	.byte	0x17
	.value	0x143
	.long	0xf20
	.uleb128 0x3d
	.long	.LASF1044
	.byte	0x17
	.value	0x144
	.long	0x84
	.uleb128 0x3d
	.long	.LASF1045
	.byte	0x17
	.value	0x145
	.long	0x84
	.uleb128 0x3d
	.long	.LASF1046
	.byte	0x17
	.value	0x146
	.long	0x84
	.uleb128 0x3d
	.long	.LASF1047
	.byte	0x17
	.value	0x147
	.long	0x84
	.uleb128 0x3d
	.long	.LASF1048
	.byte	0x17
	.value	0x148
	.long	0x57
	.uleb128 0x3d
	.long	.LASF1049
	.byte	0x17
	.value	0x14a
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1050
	.byte	0x17
	.value	0x14b
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1051
	.byte	0x17
	.value	0x14c
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1052
	.byte	0x17
	.value	0x14d
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1053
	.byte	0x17
	.value	0x14f
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1054
	.byte	0x17
	.value	0x150
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1055
	.byte	0x17
	.value	0x151
	.long	0xf20
	.uleb128 0x3d
	.long	.LASF1056
	.byte	0x17
	.value	0x159
	.long	0x84
	.uleb128 0x3d
	.long	.LASF1057
	.byte	0x17
	.value	0x15a
	.long	0x84
	.uleb128 0x3d
	.long	.LASF1058
	.byte	0x17
	.value	0x15b
	.long	0xeb7
	.uleb128 0x3d
	.long	.LASF1059
	.byte	0x17
	.value	0x15c
	.long	0xec2
	.uleb128 0x3d
	.long	.LASF1060
	.byte	0x17
	.value	0x15d
	.long	0x1068
	.uleb128 0x3d
	.long	.LASF1061
	.byte	0x17
	.value	0x162
	.long	0xecd
	.uleb128 0x3d
	.long	.LASF1062
	.byte	0x17
	.value	0x19a
	.long	0x57
	.uleb128 0x3d
	.long	.LASF1063
	.byte	0x17
	.value	0x19c
	.long	0x1f42
	.uleb128 0x3d
	.long	.LASF1064
	.byte	0x17
	.value	0x1ff
	.long	0xf20
	.uleb128 0x3c
	.long	.LASF1065
	.byte	0x18
	.byte	0x22
	.long	0x1bf8
	.uleb128 0x3c
	.long	.LASF1066
	.byte	0x18
	.byte	0x2a
	.long	0x1bf8
	.uleb128 0x3c
	.long	.LASF1067
	.byte	0x18
	.byte	0x2b
	.long	0x1bf8
	.uleb128 0x3c
	.long	.LASF1068
	.byte	0x18
	.byte	0x33
	.long	0xec2
	.uleb128 0x3c
	.long	.LASF1069
	.byte	0x18
	.byte	0x37
	.long	0xec2
	.uleb128 0x3c
	.long	.LASF1070
	.byte	0x18
	.byte	0x38
	.long	0xec2
	.uleb128 0x3c
	.long	.LASF1071
	.byte	0x18
	.byte	0x3c
	.long	0xfa3
	.uleb128 0x3c
	.long	.LASF1072
	.byte	0x18
	.byte	0x3d
	.long	0xfa3
	.uleb128 0x3c
	.long	.LASF1073
	.byte	0x18
	.byte	0x43
	.long	0xf20
	.uleb128 0x3c
	.long	.LASF1074
	.byte	0x18
	.byte	0x44
	.long	0x5253
	.uleb128 0x6
	.byte	0x8
	.long	0x886
	.uleb128 0x3c
	.long	.LASF1075
	.byte	0x18
	.byte	0x7d
	.long	0x1068
	.uleb128 0x3c
	.long	.LASF1076
	.byte	0x18
	.byte	0x7e
	.long	0x1068
	.uleb128 0x3c
	.long	.LASF1077
	.byte	0x18
	.byte	0x81
	.long	0x527a
	.uleb128 0x7
	.long	0x1c2c
	.uleb128 0x3c
	.long	.LASF1078
	.byte	0x18
	.byte	0x82
	.long	0xc0
	.uleb128 0x3c
	.long	.LASF1079
	.byte	0x18
	.byte	0x87
	.long	0x10a3
	.uleb128 0x3c
	.long	.LASF1080
	.byte	0x18
	.byte	0x88
	.long	0x3d4a
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x17
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x15
	.byte	0
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x17
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0xa
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.byte	0
	.byte	0
	.uleb128 0x34
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x35
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x36
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x37
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x38
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x39
	.uleb128 0xa
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.byte	0
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x3b
	.uleb128 0x21
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x3c
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x3d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.LBB54-.Ltext0
	.quad	.LBE54-.Ltext0
	.quad	.LBB56-.Ltext0
	.quad	.LBE56-.Ltext0
	.quad	0
	.quad	0
	.quad	.LBB118-.Ltext0
	.quad	.LBE118-.Ltext0
	.quad	.LBB119-.Ltext0
	.quad	.LBE119-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF577:
	.string	"OP_ESERVENT"
.LASF502:
	.string	"OP_FTSVTX"
.LASF73:
	.string	"precomp"
.LASF455:
	.string	"OP_SYSREAD"
.LASF806:
	.string	"S_intuit_more"
.LASF105:
	.string	"blku_oldretsp"
.LASF472:
	.string	"OP_SHUTDOWN"
.LASF904:
	.string	"first_start"
.LASF734:
	.string	"repeat_ass_amg"
.LASF702:
	.string	"rshift_ass_amg"
.LASF976:
	.string	"tmpend"
.LASF548:
	.string	"OP_MSGRCV"
.LASF648:
	.string	"si_prev"
.LASF882:
	.string	"table"
.LASF590:
	.string	"OP_LOCK"
.LASF1019:
	.string	"PL_sublex_info"
.LASF595:
	.string	"OP_max"
.LASF1037:
	.string	"PL_lex_inwhat"
.LASF30:
	.string	"op_next"
.LASF240:
	.string	"xiou_any"
.LASF750:
	.string	"oldbp"
.LASF506:
	.string	"OP_CHDIR"
.LASF420:
	.string	"OP_ENTER"
.LASF271:
	.string	"OP_REGCMAYBE"
.LASF102:
	.string	"block"
.LASF401:
	.string	"OP_FLOP"
.LASF439:
	.string	"OP_BINMODE"
.LASF794:
	.string	"leaveit"
.LASF152:
	.string	"xpvgv"
.LASF174:
	.string	"xio_ifp"
.LASF331:
	.string	"OP_SEQ"
.LASF45:
	.string	"cop_io"
.LASF642:
	.string	"stackinfo"
.LASF839:
	.string	"reserved_word"
.LASF878:
	.string	"unknown"
.LASF704:
	.string	"band_ass_amg"
.LASF711:
	.string	"gt_amg"
.LASF998:
	.string	"PL_minus_a"
.LASF966:
	.string	"S_swallow_bom"
.LASF493:
	.string	"OP_FTSOCK"
.LASF146:
	.string	"xhv_keys"
.LASF858:
	.string	"tmps"
.LASF189:
	.string	"xio_flags"
.LASF569:
	.string	"OP_GSERVENT"
.LASF26:
	.string	"_ISpunct"
.LASF193:
	.string	"svt_set"
.LASF142:
	.string	"xpvhv"
.LASF736:
	.string	"concat_ass_amg"
.LASF1027:
	.string	"PL_lex_expect"
.LASF1083:
	.string	"/home/yunqi/SPEC2006/benchspec/CPU2006/400.perlbench/build/build_base_amd64-m64-gcc43-nn.0000"
.LASF970:
	.string	"news"
.LASF460:
	.string	"OP_TELL"
.LASF532:
	.string	"OP_SETPGRP"
.LASF664:
	.string	"super_bufend"
.LASF944:
	.string	"nvshift"
.LASF487:
	.string	"OP_FTROWNED"
.LASF971:
	.string	"newlen"
.LASF91:
	.string	"gp_hv"
.LASF1046:
	.string	"PL_oldoldbufptr"
.LASF899:
	.string	"brack"
.LASF173:
	.string	"xpvio"
.LASF669:
	.string	"gvval"
.LASF476:
	.string	"OP_GETPEERNAME"
.LASF330:
	.string	"OP_SGE"
.LASF125:
	.string	"xpviv"
.LASF728:
	.string	"cos_amg"
.LASF634:
	.string	"sbu_targ"
.LASF412:
	.string	"OP_CALLER"
.LASF470:
	.string	"OP_LISTEN"
.LASF328:
	.string	"OP_SGT"
.LASF864:
	.string	"lastchar"
.LASF542:
	.string	"OP_SHMCTL"
.LASF889:
	.string	"next"
.LASF300:
	.string	"OP_DIVIDE"
.LASF680:
	.string	"DESTRUCTORFUNC_t"
.LASF833:
	.string	"keylookup"
.LASF846:
	.string	"ipath"
.LASF161:
	.string	"xcv_start"
.LASF1075:
	.string	"PL_defstash"
.LASF8:
	.string	"__off_t"
.LASF88:
	.string	"gp_io"
.LASF933:
	.string	"Perl_scan_num"
.LASF92:
	.string	"gp_egv"
.LASF1006:
	.string	"PL_debstash"
.LASF626:
	.string	"sbu_iters"
.LASF345:
	.string	"OP_SRAND"
.LASF769:
	.string	"S_lop"
.LASF655:
	.string	"hek_hash"
.LASF766:
	.string	"oldloplen"
.LASF715:
	.string	"ncmp_amg"
.LASF43:
	.string	"cop_line"
.LASF160:
	.string	"xcv_stash"
.LASF311:
	.string	"OP_LEFT_SHIFT"
.LASF761:
	.string	"S_ao"
.LASF817:
	.string	"Perl_filter_add"
.LASF875:
	.string	"bad_proto"
.LASF578:
	.string	"OP_GPWNAM"
.LASF731:
	.string	"log_amg"
.LASF165:
	.string	"xcv_gv"
.LASF441:
	.string	"OP_UNTIE"
.LASF342:
	.string	"OP_SIN"
.LASF649:
	.string	"si_next"
.LASF529:
	.string	"OP_KILL"
.LASF122:
	.string	"xpv_cur"
.LASF1044:
	.string	"PL_bufptr"
.LASF269:
	.string	"OP_READLINE"
.LASF822:
	.string	"buf_sv"
.LASF282:
	.string	"OP_SCHOP"
.LASF972:
	.string	"restore_rsfp"
.LASF116:
	.string	"mg_type"
.LASF515:
	.string	"OP_READLINK"
.LASF1050:
	.string	"PL_multi_end"
.LASF406:
	.string	"OP_ANDASSIGN"
.LASF714:
	.string	"ne_amg"
.LASF121:
	.string	"xpv_pv"
.LASF955:
	.string	"S_depcom"
.LASF902:
	.string	"S_scan_pat"
.LASF1084:
	.string	"opcode"
.LASF986:
	.string	"PL_opargs"
.LASF408:
	.string	"OP_METHOD"
.LASF946:
	.string	"Bases"
.LASF768:
	.string	"S_check_uni"
.LASF285:
	.string	"OP_DEFINED"
.LASF843:
	.string	"really_sub"
.LASF633:
	.string	"sbu_dstr"
.LASF713:
	.string	"eq_amg"
.LASF782:
	.string	"S_force_version"
.LASF523:
	.string	"OP_CLOSEDIR"
.LASF550:
	.string	"OP_SEMCTL"
.LASF426:
	.string	"OP_LEAVELOOP"
.LASF517:
	.string	"OP_RMDIR"
.LASF456:
	.string	"OP_SYSWRITE"
.LASF1063:
	.string	"PL_yylval"
.LASF238:
	.string	"cv_flags_t"
.LASF803:
	.string	"ostart"
.LASF96:
	.string	"gp_line"
.LASF587:
	.string	"OP_EGRENT"
.LASF961:
	.string	"Perl_yywarn"
.LASF625:
	.string	"subst"
.LASF884:
	.string	"why1"
.LASF885:
	.string	"why2"
.LASF886:
	.string	"why3"
.LASF767:
	.string	"oldunilen"
.LASF179:
	.string	"xio_page_len"
.LASF284:
	.string	"OP_SCHOMP"
.LASF968:
	.string	"utf16le"
.LASF710:
	.string	"le_amg"
.LASF815:
	.string	"S_incl_perldb"
.LASF450:
	.string	"OP_LEAVEWRITE"
.LASF945:
	.string	"bases"
.LASF329:
	.string	"OP_SLE"
.LASF128:
	.string	"xpvnv"
.LASF153:
	.string	"xgv_gp"
.LASF449:
	.string	"OP_ENTERWRITE"
.LASF327:
	.string	"OP_SLT"
.LASF383:
	.string	"OP_JOIN"
.LASF115:
	.string	"mg_private"
.LASF1073:
	.string	"PL_Sv"
.LASF283:
	.string	"OP_CHOMP"
.LASF740:
	.string	"to_av_amg"
.LASF759:
	.string	"toke"
.LASF632:
	.string	"sbu_orig"
.LASF959:
	.string	"oldsavestack_ix"
.LASF770:
	.string	"S_force_next"
.LASF376:
	.string	"OP_EXISTS"
.LASF776:
	.string	"allow_initial_tick"
.LASF139:
	.string	"xav_arylen"
.LASF85:
	.string	"program"
.LASF162:
	.string	"xcv_root"
.LASF605:
	.string	"old_in_eval"
.LASF653:
	.string	"hent_hek"
.LASF847:
	.string	"ipathend"
.LASF1064:
	.string	"PL_encoding"
.LASF114:
	.string	"mg_virtual"
.LASF892:
	.string	"dest"
.LASF425:
	.string	"OP_ENTERLOOP"
.LASF916:
	.string	"bufptr"
.LASF244:
	.string	"OP_STUB"
.LASF730:
	.string	"exp_amg"
.LASF1032:
	.string	"PL_lex_starts"
.LASF957:
	.string	"Perl_start_subparse"
.LASF737:
	.string	"copy_amg"
.LASF41:
	.string	"cop_seq"
.LASF1082:
	.string	"toke.c"
.LASF435:
	.string	"OP_CLOSE"
.LASF332:
	.string	"OP_SNE"
.LASF66:
	.string	"sv_flags"
.LASF703:
	.string	"band_amg"
.LASF539:
	.string	"OP_ALARM"
.LASF320:
	.string	"OP_I_GE"
.LASF685:
	.string	"string_amg"
.LASF316:
	.string	"OP_I_GT"
.LASF63:
	.string	"broiled"
.LASF184:
	.string	"xio_fmt_gv"
.LASF867:
	.string	"pname"
.LASF982:
	.string	"PL_utf8skip"
.LASF440:
	.string	"OP_TIE"
.LASF273:
	.string	"OP_REGCOMP"
.LASF95:
	.string	"gp_flags"
.LASF101:
	.string	"cx_u"
.LASF281:
	.string	"OP_CHOP"
.LASF773:
	.string	"token"
.LASF87:
	.string	"gp_refcnt"
.LASF616:
	.string	"itervar"
.LASF81:
	.string	"nparens"
.LASF555:
	.string	"OP_LEAVEEVAL"
.LASF218:
	.string	"type"
.LASF444:
	.string	"OP_DBMCLOSE"
.LASF764:
	.string	"oldprevlen"
.LASF909:
	.string	"no_more"
.LASF298:
	.string	"OP_MULTIPLY"
.LASF407:
	.string	"OP_ORASSIGN"
.LASF97:
	.string	"gp_file"
.LASF473:
	.string	"OP_GSOCKOPT"
.LASF178:
	.string	"xio_page"
.LASF571:
	.string	"OP_SNETENT"
.LASF413:
	.string	"OP_WARN"
.LASF541:
	.string	"OP_SHMGET"
.LASF349:
	.string	"OP_INT"
.LASF662:
	.string	"sub_op"
.LASF563:
	.string	"OP_GNETENT"
.LASF969:
	.string	"utf16be"
.LASF530:
	.string	"OP_GETPPID"
.LASF663:
	.string	"super_bufptr"
.LASF353:
	.string	"OP_LENGTH"
.LASF274:
	.string	"OP_MATCH"
.LASF168:
	.string	"xcv_padlist"
.LASF920:
	.string	"readline_overriden"
.LASF498:
	.string	"OP_FTPIPE"
.LASF427:
	.string	"OP_RETURN"
.LASF935:
	.string	"floatit"
.LASF624:
	.string	"blku_loop"
.LASF684:
	.string	"nomethod_amg"
.LASF835:
	.string	"just_a_word"
.LASF337:
	.string	"OP_NEGATE"
.LASF86:
	.string	"gp_sv"
.LASF1012:
	.string	"PL_rsfp"
.LASF24:
	.string	"_ISblank"
.LASF0:
	.string	"unsigned char"
.LASF394:
	.string	"OP_REVERSE"
.LASF576:
	.string	"OP_EPROTOENT"
.LASF352:
	.string	"OP_ABS"
.LASF216:
	.string	"PerlIO"
.LASF635:
	.string	"sbu_s"
.LASF566:
	.string	"OP_GPROTOENT"
.LASF676:
	.string	"XATTRBLOCK"
.LASF1078:
	.string	"PL_in_eval"
.LASF665:
	.string	"float"
.LASF1007:
	.string	"PL_globalstash"
.LASF781:
	.string	"skip"
.LASF891:
	.string	"S_scan_word"
.LASF617:
	.string	"itersave"
.LASF658:
	.string	"SUBLEXINFO"
.LASF877:
	.string	"Perl_keyword"
.LASF936:
	.string	"lastub"
.LASF64:
	.string	"sv_any"
.LASF387:
	.string	"OP_ANONHASH"
.LASF318:
	.string	"OP_I_LE"
.LASF586:
	.string	"OP_SGRENT"
.LASF604:
	.string	"block_eval"
.LASF314:
	.string	"OP_I_LT"
.LASF717:
	.string	"slt_amg"
.LASF405:
	.string	"OP_COND_EXPR"
.LASF499:
	.string	"OP_FTLINK"
.LASF84:
	.string	"reganch"
.LASF208:
	.string	"stashes"
.LASF791:
	.string	"didrange"
.LASF433:
	.string	"OP_EXIT"
.LASF70:
	.string	"endp"
.LASF751:
	.string	"is_first"
.LASF11:
	.string	"off_t"
.LASF549:
	.string	"OP_SEMGET"
.LASF276:
	.string	"OP_SUBST"
.LASF399:
	.string	"OP_RANGE"
.LASF245:
	.string	"OP_SCALAR"
.LASF951:
	.string	"stuff"
.LASF18:
	.string	"_ISalpha"
.LASF572:
	.string	"OP_SPROTOENT"
.LASF547:
	.string	"OP_MSGSND"
.LASF967:
	.string	"slen"
.LASF372:
	.string	"OP_EACH"
.LASF866:
	.string	"immediate_paren"
.LASF544:
	.string	"OP_SHMWRITE"
.LASF373:
	.string	"OP_VALUES"
.LASF395:
	.string	"OP_GREPSTART"
.LASF789:
	.string	"S_scan_const"
.LASF13:
	.string	"size_t"
.LASF262:
	.string	"OP_PROTOTYPE"
.LASF777:
	.string	"S_force_ident"
.LASF324:
	.string	"OP_I_NE"
.LASF22:
	.string	"_ISprint"
.LASF748:
	.string	"toketype"
.LASF1068:
	.string	"PL_savestack_ix"
.LASF678:
	.string	"XTERMBLOCK"
.LASF677:
	.string	"XATTRTERM"
.LASF267:
	.string	"OP_BACKTICK"
.LASF27:
	.string	"_ISalnum"
.LASF667:
	.string	"pval"
.LASF905:
	.string	"repl"
.LASF859:
	.string	"open"
.LASF235:
	.string	"SVt_PVGV"
.LASF856:
	.string	"attrs"
.LASF852:
	.string	"switches_done"
.LASF623:
	.string	"blku_eval"
.LASF77:
	.string	"sublen"
.LASF421:
	.string	"OP_LEAVE"
.LASF133:
	.string	"xav_fill"
.LASF21:
	.string	"_ISspace"
.LASF507:
	.string	"OP_CHOWN"
.LASF683:
	.string	"bool__amg"
.LASF614:
	.string	"next_op"
.LASF660:
	.string	"super_state"
.LASF481:
	.string	"OP_FTREXEC"
.LASF113:
	.string	"mg_moremagic"
.LASF512:
	.string	"OP_RENAME"
.LASF637:
	.string	"sbu_strend"
.LASF787:
	.string	"S_sublex_start"
.LASF42:
	.string	"cop_arybase"
.LASF1071:
	.string	"PL_markstack_ptr"
.LASF355:
	.string	"OP_VEC"
.LASF646:
	.string	"si_cxmax"
.LASF448:
	.string	"OP_READ"
.LASF416:
	.string	"OP_LINESEQ"
.LASF119:
	.string	"mg_ptr"
.LASF442:
	.string	"OP_TIED"
.LASF293:
	.string	"OP_POSTINC"
.LASF758:
	.string	"line"
.LASF212:
	.string	"filter_t"
.LASF621:
	.string	"itermax"
.LASF860:
	.string	"close"
.LASF380:
	.string	"OP_UNPACK"
.LASF941:
	.string	"shift"
.LASF844:
	.string	"oldmod"
.LASF537:
	.string	"OP_LOCALTIME"
.LASF187:
	.string	"xio_subprocess"
.LASF824:
	.string	"old_len"
.LASF496:
	.string	"OP_FTFILE"
.LASF75:
	.string	"subbeg"
.LASF69:
	.string	"startp"
.LASF741:
	.string	"to_hv_amg"
.LASF583:
	.string	"OP_GGRNAM"
.LASF20:
	.string	"_ISxdigit"
.LASF1081:
	.string	"GNU C 4.8.1 -mtune=generic -march=x86-64 -g -fno-strict-aliasing -fstack-protector"
.LASF307:
	.string	"OP_SUBTRACT"
.LASF483:
	.string	"OP_FTEWRITE"
.LASF742:
	.string	"to_gv_amg"
.LASF509:
	.string	"OP_UNLINK"
.LASF68:
	.string	"regexp"
.LASF592:
	.string	"OP_SETSTATE"
.LASF429:
	.string	"OP_NEXT"
.LASF464:
	.string	"OP_IOCTL"
.LASF771:
	.string	"S_force_word"
.LASF1049:
	.string	"PL_multi_start"
.LASF67:
	.string	"REGEXP"
.LASF65:
	.string	"sv_refcnt"
.LASF424:
	.string	"OP_ITER"
.LASF501:
	.string	"OP_FTSGID"
.LASF256:
	.string	"OP_PUSHRE"
.LASF254:
	.string	"OP_PADHV"
.LASF524:
	.string	"OP_FORK"
.LASF1048:
	.string	"PL_expect"
.LASF194:
	.string	"svt_len"
.LASF958:
	.string	"is_format"
.LASF747:
	.string	"max_amg_code"
.LASF219:
	.string	"next_off"
.LASF418:
	.string	"OP_DBSTATE"
.LASF756:
	.string	"Perl_deprecate_old"
.LASF36:
	.string	"op_flags"
.LASF44:
	.string	"cop_warnings"
.LASF651:
	.string	"PERL_SI"
.LASF984:
	.string	"PL_warn_reserved"
.LASF949:
	.string	"Base"
.LASF72:
	.string	"substrs"
.LASF783:
	.string	"guessing"
.LASF579:
	.string	"OP_GPWUID"
.LASF907:
	.string	"squash"
.LASF999:
	.string	"PL_minus_F"
.LASF994:
	.string	"PL_preprocess"
.LASF287:
	.string	"OP_STUDY"
.LASF354:
	.string	"OP_SUBSTR"
.LASF107:
	.string	"blku_oldscopesp"
.LASF232:
	.string	"SVt_PVAV"
.LASF1047:
	.string	"PL_bufend"
.LASF560:
	.string	"OP_GHOSTENT"
.LASF645:
	.string	"si_cxix"
.LASF143:
	.string	"xhv_array"
.LASF562:
	.string	"OP_GNBYADDR"
.LASF698:
	.string	"pow_ass_amg"
.LASF992:
	.string	"PL_minus_c"
.LASF963:
	.string	"where"
.LASF1057:
	.string	"PL_last_lop"
.LASF76:
	.string	"offsets"
.LASF721:
	.string	"seq_amg"
.LASF997:
	.string	"PL_minus_l"
.LASF995:
	.string	"PL_minus_n"
.LASF388:
	.string	"OP_SPLICE"
.LASF996:
	.string	"PL_minus_p"
.LASF1065:
	.string	"PL_stack_sp"
.LASF333:
	.string	"OP_SCMP"
.LASF520:
	.string	"OP_TELLDIR"
.LASF185:
	.string	"xio_bottom_name"
.LASF334:
	.string	"OP_BIT_AND"
.LASF230:
	.string	"SVt_PVBM"
.LASF820:
	.string	"Perl_filter_del"
.LASF913:
	.string	"peek"
.LASF991:
	.string	"PL_origfilename"
.LASF681:
	.string	"fallback_amg"
.LASF1022:
	.string	"PL_sv_undef"
.LASF798:
	.string	"cont_scan"
.LASF111:
	.string	"MAGIC"
.LASF38:
	.string	"cop_label"
.LASF117:
	.string	"mg_flags"
.LASF609:
	.string	"cur_text"
.LASF130:
	.string	"XPVAV"
.LASF59:
	.string	"svop"
.LASF980:
	.string	"c_without_g"
.LASF924:
	.string	"keep_delims"
.LASF929:
	.string	"read_more_line"
.LASF234:
	.string	"SVt_PVCV"
.LASF942:
	.string	"overflowed"
.LASF290:
	.string	"OP_I_PREINC"
.LASF80:
	.string	"prelen"
.LASF831:
	.string	"rightbracket"
.LASF25:
	.string	"_IScntrl"
.LASF1077:
	.string	"PL_curcop"
.LASF396:
	.string	"OP_GREPWHILE"
.LASF430:
	.string	"OP_REDO"
.LASF956:
	.string	"S_set_csh"
.LASF33:
	.string	"op_targ"
.LASF16:
	.string	"_ISupper"
.LASF289:
	.string	"OP_PREINC"
.LASF931:
	.string	"found"
.LASF186:
	.string	"xio_bottom_gv"
.LASF1004:
	.string	"PL_stderrgv"
.LASF286:
	.string	"OP_UNDEF"
.LASF339:
	.string	"OP_NOT"
.LASF437:
	.string	"OP_FILENO"
.LASF106:
	.string	"blku_oldmarksp"
.LASF402:
	.string	"OP_AND"
.LASF1010:
	.string	"PL_preambled"
.LASF554:
	.string	"OP_ENTEREVAL"
.LASF801:
	.string	"hicount"
.LASF1062:
	.string	"PL_yychar"
.LASF82:
	.string	"lastparen"
.LASF849:
	.string	"oldpdb"
.LASF788:
	.string	"S_sublex_done"
.LASF811:
	.string	"S_intuit_method"
.LASF706:
	.string	"bor_ass_amg"
.LASF158:
	.string	"XPVCV"
.LASF619:
	.string	"iterary"
.LASF336:
	.string	"OP_BIT_OR"
.LASF471:
	.string	"OP_ACCEPT"
.LASF943:
	.string	"just_zero"
.LASF443:
	.string	"OP_DBMOPEN"
.LASF588:
	.string	"OP_GETLOGIN"
.LASF9:
	.string	"__ssize_t"
.LASF921:
	.string	"gv_readline"
.LASF221:
	.string	"reg_data"
.LASF183:
	.string	"xio_fmt_name"
.LASF654:
	.string	"hent_val"
.LASF419:
	.string	"OP_UNSTACK"
.LASF129:
	.string	"xnv_nv"
.LASF775:
	.string	"allow_pack"
.LASF652:
	.string	"hent_next"
.LASF1042:
	.string	"PL_nexttoke"
.LASF461:
	.string	"OP_SEEK"
.LASF701:
	.string	"rshift_amg"
.LASF196:
	.string	"svt_free"
.LASF1055:
	.string	"PL_subname"
.LASF965:
	.string	"where_sv"
.LASF56:
	.string	"op_pmdynflags"
.LASF744:
	.string	"iter_amg"
.LASF894:
	.string	"allow_package"
.LASF719:
	.string	"sgt_amg"
.LASF236:
	.string	"SVt_PVFM"
.LASF391:
	.string	"OP_SHIFT"
.LASF812:
	.string	"indirgv"
.LASF417:
	.string	"OP_NEXTSTATE"
.LASF207:
	.string	"clone_params"
.LASF887:
	.string	"msgdone"
.LASF1061:
	.string	"PL_hints"
.LASF585:
	.string	"OP_GGRENT"
.LASF708:
	.string	"bxor_ass_amg"
.LASF326:
	.string	"OP_I_NCMP"
.LASF304:
	.string	"OP_REPEAT"
.LASF364:
	.string	"OP_LCFIRST"
.LASF503:
	.string	"OP_FTTTY"
.LASF888:
	.string	"report"
.LASF309:
	.string	"OP_CONCAT"
.LASF838:
	.string	"leftbracket"
.LASF452:
	.string	"OP_PRINT"
.LASF760:
	.string	"S_incline"
.LASF821:
	.string	"Perl_filter_read"
.LASF636:
	.string	"sbu_m"
.LASF169:
	.string	"xcv_outside"
.LASF241:
	.string	"PADLIST"
.LASF205:
	.string	"any_dxptr"
.LASF923:
	.string	"keep_quoted"
.LASF939:
	.string	"digit"
.LASF938:
	.string	"decimal"
.LASF1070:
	.string	"PL_tmps_floor"
.LASF392:
	.string	"OP_UNSHIFT"
.LASF157:
	.string	"xgv_flags"
.LASF112:
	.string	"magic"
.LASF535:
	.string	"OP_TIME"
.LASF484:
	.string	"OP_FTEEXEC"
.LASF755:
	.string	"Perl_deprecate"
.LASF581:
	.string	"OP_SPWENT"
.LASF486:
	.string	"OP_FTEOWNED"
.LASF301:
	.string	"OP_I_DIVIDE"
.LASF322:
	.string	"OP_I_EQ"
.LASF978:
	.string	"orev"
.LASF233:
	.string	"SVt_PVHV"
.LASF222:
	.string	"SVt_NULL"
.LASF1031:
	.string	"PL_lex_dojoin"
.LASF863:
	.string	"islop"
.LASF552:
	.string	"OP_REQUIRE"
.LASF1041:
	.string	"PL_nexttype"
.LASF191:
	.string	"mgvtbl"
.LASF268:
	.string	"OP_GLOB"
.LASF952:
	.string	"needargs"
.LASF521:
	.string	"OP_SEEKDIR"
.LASF151:
	.string	"XPVGV"
.LASF451:
	.string	"OP_PRTF"
.LASF901:
	.string	"pmfl"
.LASF639:
	.string	"sbu_rx"
.LASF190:
	.string	"MGVTBL"
.LASF561:
	.string	"OP_GNBYNAME"
.LASF661:
	.string	"sub_inwhat"
.LASF641:
	.string	"cx_subst"
.LASF640:
	.string	"cx_blk"
.LASF237:
	.string	"SVt_PVIO"
.LASF1025:
	.string	"PL_lex_state"
.LASF227:
	.string	"SVt_PVIV"
.LASF347:
	.string	"OP_LOG"
.LASF78:
	.string	"refcnt"
.LASF294:
	.string	"OP_I_POSTINC"
.LASF743:
	.string	"to_cv_amg"
.LASF631:
	.string	"sbu_rxtainted"
.LASF513:
	.string	"OP_LINK"
.LASF790:
	.string	"dorange"
.LASF397:
	.string	"OP_MAPSTART"
.LASF712:
	.string	"ge_amg"
.LASF141:
	.string	"XPVHV"
.LASF7:
	.string	"sizetype"
.LASF321:
	.string	"OP_EQ"
.LASF248:
	.string	"OP_CONST"
.LASF873:
	.string	"have_name"
.LASF52:
	.string	"op_pmnext"
.LASF533:
	.string	"OP_GETPRIORITY"
.LASF469:
	.string	"OP_CONNECT"
.LASF872:
	.string	"attrful"
.LASF163:
	.string	"xcv_xsub"
.LASF536:
	.string	"OP_TMS"
.LASF601:
	.string	"hasargs"
.LASF411:
	.string	"OP_LEAVESUBLV"
.LASF475:
	.string	"OP_GETSOCKNAME"
.LASF37:
	.string	"op_private"
.LASF251:
	.string	"OP_GELEM"
.LASF361:
	.string	"OP_CHR"
.LASF726:
	.string	"dec_amg"
.LASF199:
	.string	"any_ptr"
.LASF1:
	.string	"short unsigned int"
.LASF827:
	.string	"S_find_in_my_stash"
.LASF4:
	.string	"signed char"
.LASF804:
	.string	"odest"
.LASF1066:
	.string	"PL_stack_base"
.LASF857:
	.string	"minus"
.LASF310:
	.string	"OP_STRINGIFY"
.LASF528:
	.string	"OP_EXEC"
.LASF308:
	.string	"OP_I_SUBTRACT"
.LASF172:
	.string	"XPVIO"
.LASF772:
	.string	"start"
.LASF124:
	.string	"XPVIV"
.LASF138:
	.string	"xav_alloc"
.LASF305:
	.string	"OP_ADD"
.LASF881:
	.string	"S_new_constant"
.LASF249:
	.string	"OP_GVSV"
.LASF629:
	.string	"sbu_oldsave"
.LASF145:
	.string	"xhv_max"
.LASF1034:
	.string	"PL_lex_repl"
.LASF79:
	.string	"minlen"
.LASF1002:
	.string	"PL_doextract"
.LASF280:
	.string	"OP_AASSIGN"
.LASF919:
	.string	"intro_sym"
.LASF799:
	.string	"count"
.LASF1085:
	.string	"Perl_lex_end"
.LASF874:
	.string	"have_proto"
.LASF454:
	.string	"OP_SYSSEEK"
.LASF137:
	.string	"xmg_stash"
.LASF551:
	.string	"OP_SEMOP"
.LASF628:
	.string	"sbu_rflags"
.LASF71:
	.string	"regstclass"
.LASF319:
	.string	"OP_GE"
.LASF985:
	.string	"PL_no_myglob"
.LASF148:
	.string	"xhv_eiter"
.LASF385:
	.string	"OP_LSLICE"
.LASF315:
	.string	"OP_GT"
.LASF250:
	.string	"OP_GV"
.LASF477:
	.string	"OP_LSTAT"
.LASF880:
	.string	"level"
.LASF926:
	.string	"termstr"
.LASF446:
	.string	"OP_SELECT"
.LASF540:
	.string	"OP_SLEEP"
.LASF231:
	.string	"SVt_PVLV"
.LASF666:
	.string	"ival"
.LASF220:
	.string	"reg_substr_data"
.LASF718:
	.string	"sle_amg"
.LASF602:
	.string	"lval"
.LASF598:
	.string	"savearray"
.LASF618:
	.string	"iterlval"
.LASF785:
	.string	"S_tokeq"
.LASF687:
	.string	"add_amg"
.LASF247:
	.string	"OP_WANTARRAY"
.LASF1067:
	.string	"PL_stack_max"
.LASF312:
	.string	"OP_RIGHT_SHIFT"
.LASF567:
	.string	"OP_GSBYNAME"
.LASF110:
	.string	"blk_u"
.LASF229:
	.string	"SVt_PVMG"
.LASF135:
	.string	"xof_off"
.LASF534:
	.string	"OP_SETPRIORITY"
.LASF690:
	.string	"subtr_ass_amg"
.LASF962:
	.string	"Perl_yyerror"
.LASF1013:
	.string	"PL_rsfp_filters"
.LASF584:
	.string	"OP_GGRGID"
.LASF865:
	.string	"morelen"
.LASF155:
	.string	"xgv_namelen"
.LASF793:
	.string	"this_utf8"
.LASF814:
	.string	"proto"
.LASF49:
	.string	"op_last"
.LASF253:
	.string	"OP_PADAV"
.LASF214:
	.string	"__dirstream"
.LASF381:
	.string	"OP_PACK"
.LASF202:
	.string	"any_long"
.LASF434:
	.string	"OP_OPEN"
.LASF1069:
	.string	"PL_tmps_ix"
.LASF35:
	.string	"op_seq"
.LASF723:
	.string	"not_amg"
.LASF1079:
	.string	"PL_curstack"
.LASF565:
	.string	"OP_GPBYNUMBER"
.LASF826:
	.string	"append"
.LASF228:
	.string	"SVt_PVNV"
.LASF46:
	.string	"PMOP"
.LASF368:
	.string	"OP_RV2AV"
.LASF516:
	.string	"OP_MKDIR"
.LASF679:
	.string	"expectation"
.LASF457:
	.string	"OP_SEND"
.LASF495:
	.string	"OP_FTBLK"
.LASF83:
	.string	"lastcloseparen"
.LASF682:
	.string	"abs_amg"
.LASF670:
	.string	"YYSTYPE"
.LASF808:
	.string	"seen"
.LASF508:
	.string	"OP_CHROOT"
.LASF188:
	.string	"xio_type"
.LASF834:
	.string	"fake_eof"
.LASF482:
	.string	"OP_FTEREAD"
.LASF6:
	.string	"long int"
.LASF932:
	.string	"svlast"
.LASF195:
	.string	"svt_clear"
.LASF1009:
	.string	"PL_copline"
.LASF175:
	.string	"xio_ofp"
.LASF156:
	.string	"xgv_stash"
.LASF351:
	.string	"OP_OCT"
.LASF990:
	.string	"PL_hintgv"
.LASF829:
	.string	"Perl_yylex"
.LASF606:
	.string	"old_op_type"
.LASF306:
	.string	"OP_I_ADD"
.LASF50:
	.string	"op_pmreplroot"
.LASF774:
	.string	"check_keyword"
.LASF807:
	.string	"weight"
.LASF918:
	.string	"S_scan_inputsymbol"
.LASF1030:
	.string	"PL_lex_casemods"
.LASF167:
	.string	"xcv_depth"
.LASF94:
	.string	"gp_cvgen"
.LASF127:
	.string	"XPVNV"
.LASF910:
	.string	"S_scan_heredoc"
.LASF659:
	.string	"_sublex_info"
.LASF147:
	.string	"xhv_riter"
.LASF109:
	.string	"blku_gimme"
.LASF611:
	.string	"label"
.LASF1059:
	.string	"PL_in_my"
.LASF940:
	.string	"vstring"
.LASF260:
	.string	"OP_RV2CV"
.LASF99:
	.string	"context"
.LASF597:
	.string	"dfoutgv"
.LASF1036:
	.string	"PL_lex_inpat"
.LASF1038:
	.string	"PL_lex_brackstack"
.LASF716:
	.string	"scmp_amg"
.LASF494:
	.string	"OP_FTCHR"
.LASF928:
	.string	"last"
.LASF1053:
	.string	"PL_error_count"
.LASF393:
	.string	"OP_SORT"
.LASF366:
	.string	"OP_LC"
.LASF317:
	.string	"OP_LE"
.LASF912:
	.string	"tmpstr"
.LASF568:
	.string	"OP_GSBYPORT"
.LASF51:
	.string	"op_pmreplstart"
.LASF594:
	.string	"OP_CUSTOM"
.LASF313:
	.string	"OP_LT"
.LASF335:
	.string	"OP_BIT_XOR"
.LASF925:
	.string	"termcode"
.LASF414:
	.string	"OP_DIE"
.LASF277:
	.string	"OP_SUBSTCONT"
.LASF223:
	.string	"SVt_IV"
.LASF299:
	.string	"OP_I_MULTIPLY"
.LASF217:
	.string	"regnode"
.LASF825:
	.string	"S_filter_gets"
.LASF691:
	.string	"mult_amg"
.LASF343:
	.string	"OP_COS"
.LASF974:
	.string	"utf16rev_textfilter"
.LASF31:
	.string	"op_sibling"
.LASF176:
	.string	"xio_dirpu"
.LASF973:
	.string	"utf16_textfilter"
.LASF201:
	.string	"any_iv"
.LASF370:
	.string	"OP_AELEM"
.LASF862:
	.string	"brackets"
.LASF149:
	.string	"xhv_pmroot"
.LASF700:
	.string	"lshift_ass_amg"
.LASF340:
	.string	"OP_COMPLEMENT"
.LASF415:
	.string	"OP_RESET"
.LASF1003:
	.string	"PL_perldb"
.LASF3:
	.string	"long unsigned int"
.LASF47:
	.string	"pmop"
.LASF492:
	.string	"OP_FTCTIME"
.LASF398:
	.string	"OP_MAPWHILE"
.LASF1035:
	.string	"PL_lex_op"
.LASF490:
	.string	"OP_FTMTIME"
.LASF382:
	.string	"OP_SPLIT"
.LASF630:
	.string	"sbu_once"
.LASF338:
	.string	"OP_I_NEGATE"
.LASF519:
	.string	"OP_READDIR"
.LASF745:
	.string	"int_amg"
.LASF61:
	.string	"PerlInterpreter"
.LASF686:
	.string	"numer_amg"
.LASF695:
	.string	"modulo_amg"
.LASF323:
	.string	"OP_NE"
.LASF732:
	.string	"sqrt_amg"
.LASF735:
	.string	"concat_amg"
.LASF559:
	.string	"OP_GHBYADDR"
.LASF668:
	.string	"opval"
.LASF981:
	.string	"c_in_subst"
.LASF688:
	.string	"add_ass_amg"
.LASF893:
	.string	"destlen"
.LASF10:
	.string	"char"
.LASF1018:
	.string	"PL_pending_ident"
.LASF975:
	.string	"Perl_scan_vstring"
.LASF762:
	.string	"S_skipspace"
.LASF404:
	.string	"OP_XOR"
.LASF479:
	.string	"OP_FTRREAD"
.LASF599:
	.string	"argarray"
.LASF707:
	.string	"bxor_amg"
.LASF993:
	.string	"PL_splitstr"
.LASF181:
	.string	"xio_top_name"
.LASF527:
	.string	"OP_SYSTEM"
.LASF120:
	.string	"mg_len"
.LASF453:
	.string	"OP_SYSOPEN"
.LASF239:
	.string	"xiou_dirp"
.LASF154:
	.string	"xgv_name"
.LASF270:
	.string	"OP_RCATLINE"
.LASF403:
	.string	"OP_OR"
.LASF752:
	.string	"S_no_op"
.LASF295:
	.string	"OP_POSTDEC"
.LASF694:
	.string	"div_ass_amg"
.LASF596:
	.string	"block_sub"
.LASF463:
	.string	"OP_FCNTL"
.LASF796:
	.string	"default_action"
.LASF488:
	.string	"OP_FTZERO"
.LASF257:
	.string	"OP_RV2GV"
.LASF384:
	.string	"OP_LIST"
.LASF765:
	.string	"oldoldprevlen"
.LASF177:
	.string	"xio_lines"
.LASF930:
	.string	"cont"
.LASF861:
	.string	"term"
.LASF947:
	.string	"maxima"
.LASF987:
	.string	"PL_origargc"
.LASF485:
	.string	"OP_FTIS"
.LASF1045:
	.string	"PL_oldbufptr"
.LASF813:
	.string	"bare_package"
.LASF644:
	.string	"si_cxstack"
.LASF243:
	.string	"OP_NULL"
.LASF898:
	.string	"funny"
.LASF123:
	.string	"xpv_len"
.LASF988:
	.string	"PL_origargv"
.LASF953:
	.string	"eofmt"
.LASF795:
	.string	"finish"
.LASF816:
	.string	"Perl_str_to_version"
.LASF34:
	.string	"op_type"
.LASF377:
	.string	"OP_RV2HV"
.LASF922:
	.string	"S_scan_str"
.LASF906:
	.string	"S_scan_trans"
.LASF29:
	.string	"STRLEN"
.LASF1072:
	.string	"PL_markstack_max"
.LASF500:
	.string	"OP_FTSUID"
.LASF1015:
	.string	"PL_compcv"
.LASF818:
	.string	"funcp"
.LASF275:
	.string	"OP_QR"
.LASF359:
	.string	"OP_FORMLINE"
.LASF607:
	.string	"old_namesv"
.LASF1051:
	.string	"PL_multi_open"
.LASF526:
	.string	"OP_WAITPID"
.LASF851:
	.string	"oldp"
.LASF224:
	.string	"SVt_NV"
.LASF356:
	.string	"OP_INDEX"
.LASF23:
	.string	"_ISgraph"
.LASF357:
	.string	"OP_RINDEX"
.LASF749:
	.string	"what"
.LASF657:
	.string	"hek_key"
.LASF574:
	.string	"OP_EHOSTENT"
.LASF303:
	.string	"OP_I_MODULO"
.LASF746:
	.string	"DESTROY_amg"
.LASF166:
	.string	"xcv_file"
.LASF1020:
	.string	"PL_cop_seqmax"
.LASF977:
	.string	"mult"
.LASF954:
	.string	"enough"
.LASF210:
	.string	"proto_perl"
.LASF608:
	.string	"old_eval_root"
.LASF379:
	.string	"OP_HSLICE"
.LASF763:
	.string	"prevlen"
.LASF302:
	.string	"OP_MODULO"
.LASF60:
	.string	"op_sv"
.LASF543:
	.string	"OP_SHMREAD"
.LASF497:
	.string	"OP_FTDIR"
.LASF1029:
	.string	"PL_lex_formbrack"
.LASF786:
	.string	"send"
.LASF573:
	.string	"OP_SSERVENT"
.LASF727:
	.string	"atan2_amg"
.LASF805:
	.string	"need"
.LASF242:
	.string	"PADOFFSET"
.LASF870:
	.string	"warned"
.LASF1023:
	.string	"PL_cshname"
.LASF54:
	.string	"op_pmflags"
.LASF696:
	.string	"modulo_ass_amg"
.LASF622:
	.string	"blku_sub"
.LASF62:
	.string	"interpreter"
.LASF108:
	.string	"blku_oldpm"
.LASF917:
	.string	"bufend"
.LASF720:
	.string	"sge_amg"
.LASF927:
	.string	"termlen"
.LASF48:
	.string	"op_first"
.LASF28:
	.string	"double"
.LASF855:
	.string	"ftst"
.LASF876:
	.string	"S_pending_ident"
.LASF871:
	.string	"tboffset"
.LASF55:
	.string	"op_pmpermflags"
.LASF134:
	.string	"xav_max"
.LASF673:
	.string	"XREF"
.LASF853:
	.string	"argc"
.LASF12:
	.string	"ssize_t"
.LASF32:
	.string	"op_ppaddr"
.LASF591:
	.string	"OP_THREADSV"
.LASF934:
	.string	"lvalp"
.LASF1058:
	.string	"PL_last_lop_op"
.LASF1000:
	.string	"PL_doswitches"
.LASF724:
	.string	"compl_amg"
.LASF200:
	.string	"any_i32"
.LASF900:
	.string	"Perl_pmflag"
.LASF842:
	.string	"its_constant"
.LASF725:
	.string	"inc_amg"
.LASF738:
	.string	"neg_amg"
.LASF964:
	.string	"contlen"
.LASF226:
	.string	"SVt_PV"
.LASF40:
	.string	"cop_filegv"
.LASF203:
	.string	"any_bool"
.LASF389:
	.string	"OP_PUSH"
.LASF365:
	.string	"OP_UC"
.LASF171:
	.string	"xcv_outside_seq"
.LASF292:
	.string	"OP_I_PREDEC"
.LASF74:
	.string	"data"
.LASF468:
	.string	"OP_BIND"
.LASF575:
	.string	"OP_ENETENT"
.LASF522:
	.string	"OP_REWINDDIR"
.LASF647:
	.string	"si_type"
.LASF132:
	.string	"xav_array"
.LASF1039:
	.string	"PL_lex_casestack"
.LASF225:
	.string	"SVt_RV"
.LASF1001:
	.string	"PL_dowarn"
.LASF206:
	.string	"CLONE_PARAMS"
.LASF422:
	.string	"OP_SCOPE"
.LASF1017:
	.string	"PL_linestart"
.LASF558:
	.string	"OP_GHBYNAME"
.LASF291:
	.string	"OP_PREDEC"
.LASF869:
	.string	"words"
.LASF612:
	.string	"resetsp"
.LASF98:
	.string	"PERL_CONTEXT"
.LASF17:
	.string	"_ISlower"
.LASF828:
	.string	"pkgname"
.LASF144:
	.string	"xhv_fill"
.LASF126:
	.string	"xiv_iv"
.LASF1043:
	.string	"PL_linestr"
.LASF675:
	.string	"XBLOCK"
.LASF948:
	.string	"base"
.LASF903:
	.string	"S_scan_subst"
.LASF897:
	.string	"bracket"
.LASF103:
	.string	"blku_oldsp"
.LASF699:
	.string	"lshift_amg"
.LASF525:
	.string	"OP_WAIT"
.LASF431:
	.string	"OP_DUMP"
.LASF733:
	.string	"repeat_amg"
.LASF797:
	.string	"NUM_ESCAPE_INSERT"
.LASF1056:
	.string	"PL_last_uni"
.LASF279:
	.string	"OP_SASSIGN"
.LASF1026:
	.string	"PL_lex_defer"
.LASF692:
	.string	"mult_ass_amg"
.LASF753:
	.string	"S_missingterm"
.LASF613:
	.string	"redo_op"
.LASF369:
	.string	"OP_AELEMFAST"
.LASF656:
	.string	"hek_len"
.LASF363:
	.string	"OP_UCFIRST"
.LASF514:
	.string	"OP_SYMLINK"
.LASF348:
	.string	"OP_SQRT"
.LASF754:
	.string	"tmpbuf"
.LASF546:
	.string	"OP_MSGCTL"
.LASF832:
	.string	"retry"
.LASF489:
	.string	"OP_FTSIZE"
.LASF14:
	.string	"long long unsigned int"
.LASF802:
	.string	"offset"
.LASF709:
	.string	"lt_amg"
.LASF459:
	.string	"OP_EOF"
.LASF615:
	.string	"last_op"
.LASF778:
	.string	"kind"
.LASF1016:
	.string	"PL_comppad_name"
.LASF505:
	.string	"OP_FTBINARY"
.LASF478:
	.string	"OP_STAT"
.LASF378:
	.string	"OP_HELEM"
.LASF883:
	.string	"typesv"
.LASF255:
	.string	"OP_PADANY"
.LASF259:
	.string	"OP_AV2ARYLEN"
.LASF465:
	.string	"OP_FLOCK"
.LASF360:
	.string	"OP_ORD"
.LASF198:
	.string	"svt_dup"
.LASF1076:
	.string	"PL_curstash"
.LASF1052:
	.string	"PL_multi_close"
.LASF650:
	.string	"si_markoff"
.LASF1054:
	.string	"PL_subline"
.LASF246:
	.string	"OP_PUSHMARK"
.LASF1040:
	.string	"PL_nextval"
.LASF757:
	.string	"Perl_lex_start"
.LASF553:
	.string	"OP_DOFILE"
.LASF182:
	.string	"xio_top_gv"
.LASF693:
	.string	"div_amg"
.LASF823:
	.string	"maxlen"
.LASF840:
	.string	"safe_bareword"
.LASF375:
	.string	"OP_DELETE"
.LASF689:
	.string	"subtr_amg"
.LASF638:
	.string	"sbu_rxres"
.LASF792:
	.string	"has_utf8"
.LASF1080:
	.string	"PL_curstackinfo"
.LASF1024:
	.string	"PL_cshlen"
.LASF896:
	.string	"ck_uni"
.LASF950:
	.string	"S_scan_formline"
.LASF410:
	.string	"OP_LEAVESUB"
.LASF1086:
	.string	"S_sublex_push"
.LASF983:
	.string	"PL_warn_nosemi"
.LASF252:
	.string	"OP_PADSV"
.LASF848:
	.string	"newargv"
.LASF264:
	.string	"OP_SREFGEN"
.LASF841:
	.string	"bareword"
.LASF432:
	.string	"OP_GOTO"
.LASF868:
	.string	"name"
.LASF57:
	.string	"op_pmstash"
.LASF192:
	.string	"svt_get"
.LASF89:
	.string	"gp_form"
.LASF296:
	.string	"OP_I_POSTDEC"
.LASF1005:
	.string	"PL_errgv"
.LASF779:
	.string	"retval"
.LASF258:
	.string	"OP_RV2SV"
.LASF104:
	.string	"blku_oldcop"
.LASF39:
	.string	"cop_stash"
.LASF266:
	.string	"OP_BLESS"
.LASF810:
	.string	"last_un_char"
.LASF538:
	.string	"OP_GMTIME"
.LASF850:
	.string	"oldn"
.LASF915:
	.string	"olds"
.LASF15:
	.string	"long long int"
.LASF211:
	.string	"line_t"
.LASF150:
	.string	"xhv_name"
.LASF504:
	.string	"OP_FTTEXT"
.LASF643:
	.string	"si_stack"
.LASF491:
	.string	"OP_FTATIME"
.LASF197:
	.string	"svt_copy"
.LASF390:
	.string	"OP_POP"
.LASF288:
	.string	"OP_POS"
.LASF895:
	.string	"S_scan_ident"
.LASF908:
	.string	"complement"
.LASF297:
	.string	"OP_POW"
.LASF423:
	.string	"OP_ENTERITER"
.LASF263:
	.string	"OP_REFGEN"
.LASF1021:
	.string	"PL_tokenbuf"
.LASF1008:
	.string	"PL_curstname"
.LASF447:
	.string	"OP_GETC"
.LASF674:
	.string	"XSTATE"
.LASF911:
	.string	"herewas"
.LASF480:
	.string	"OP_FTRWRITE"
.LASF474:
	.string	"OP_SSOCKOPT"
.LASF100:
	.string	"cx_type"
.LASF58:
	.string	"SVOP"
.LASF1060:
	.string	"PL_in_my_stash"
.LASF140:
	.string	"xav_flags"
.LASF580:
	.string	"OP_GPWENT"
.LASF989:
	.string	"PL_incgv"
.LASF19:
	.string	"_ISdigit"
.LASF836:
	.string	"grabattrs"
.LASF819:
	.string	"datasv"
.LASF620:
	.string	"iterix"
.LASF570:
	.string	"OP_SHOSTENT"
.LASF1011:
	.string	"PL_preambleav"
.LASF428:
	.string	"OP_LAST"
.LASF136:
	.string	"xmg_magic"
.LASF374:
	.string	"OP_KEYS"
.LASF118:
	.string	"mg_obj"
.LASF890:
	.string	"prev"
.LASF557:
	.string	"OP_LEAVETRY"
.LASF204:
	.string	"any_dptr"
.LASF400:
	.string	"OP_FLIP"
.LASF739:
	.string	"to_sv_amg"
.LASF518:
	.string	"OP_OPEN_DIR"
.LASF131:
	.string	"xpvav"
.LASF937:
	.string	"number_too_long"
.LASF53:
	.string	"op_pmregexp"
.LASF265:
	.string	"OP_REF"
.LASF809:
	.string	"un_char"
.LASF467:
	.string	"OP_SOCKPAIR"
.LASF1028:
	.string	"PL_lex_brackets"
.LASF780:
	.string	"nshift"
.LASF564:
	.string	"OP_GPBYNAME"
.LASF164:
	.string	"xcv_xsubany"
.LASF438:
	.string	"OP_UMASK"
.LASF180:
	.string	"xio_lines_left"
.LASF458:
	.string	"OP_RECV"
.LASF90:
	.string	"gp_av"
.LASF837:
	.string	"got_attrs"
.LASF462:
	.string	"OP_TRUNCATE"
.LASF436:
	.string	"OP_PIPE_OP"
.LASF830:
	.string	"orig_keyword"
.LASF582:
	.string	"OP_EPWENT"
.LASF800:
	.string	"regparse"
.LASF610:
	.string	"block_loop"
.LASF261:
	.string	"OP_ANONCODE"
.LASF914:
	.string	"outer"
.LASF784:
	.string	"version"
.LASF697:
	.string	"pow_amg"
.LASF278:
	.string	"OP_TRANS"
.LASF671:
	.string	"XOPERATOR"
.LASF589:
	.string	"OP_SYSCALL"
.LASF1074:
	.string	"PL_Xpv"
.LASF170:
	.string	"xcv_flags"
.LASF593:
	.string	"OP_METHOD_NAMED"
.LASF2:
	.string	"unsigned int"
.LASF627:
	.string	"sbu_maxiters"
.LASF159:
	.string	"xpvcv"
.LASF341:
	.string	"OP_ATAN2"
.LASF960:
	.string	"outsidecv"
.LASF386:
	.string	"OP_ANONLIST"
.LASF466:
	.string	"OP_SOCKET"
.LASF371:
	.string	"OP_ASLICE"
.LASF344:
	.string	"OP_RAND"
.LASF350:
	.string	"OP_HEX"
.LASF603:
	.string	"oldcomppad"
.LASF215:
	.string	"_PerlIO"
.LASF672:
	.string	"XTERM"
.LASF445:
	.string	"OP_SSELECT"
.LASF705:
	.string	"bor_amg"
.LASF722:
	.string	"sne_amg"
.LASF545:
	.string	"OP_MSGGET"
.LASF5:
	.string	"short int"
.LASF879:
	.string	"S_checkcomma"
.LASF93:
	.string	"gp_cv"
.LASF367:
	.string	"OP_QUOTEMETA"
.LASF531:
	.string	"OP_GETPGRP"
.LASF600:
	.string	"olddepth"
.LASF1014:
	.string	"PL_compiling"
.LASF325:
	.string	"OP_NCMP"
.LASF556:
	.string	"OP_ENTERTRY"
.LASF510:
	.string	"OP_CHMOD"
.LASF854:
	.string	"argv"
.LASF979:
	.string	"ident_too_long"
.LASF346:
	.string	"OP_EXP"
.LASF362:
	.string	"OP_CRYPT"
.LASF511:
	.string	"OP_UTIME"
.LASF729:
	.string	"sin_amg"
.LASF213:
	.string	"PerlIOl"
.LASF409:
	.string	"OP_ENTERSUB"
.LASF209:
	.string	"flags"
.LASF358:
	.string	"OP_SPRINTF"
.LASF272:
	.string	"OP_REGCRESET"
.LASF845:
	.string	"tmpsv"
.LASF1033:
	.string	"PL_lex_stuff"
	.ident	"GCC: (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1"
	.section	.note.GNU-stack,"",@progbits
