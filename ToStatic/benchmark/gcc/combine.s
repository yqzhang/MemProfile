	.file	"combine.c"
# GNU C (Ubuntu/Linaro 4.8.1-10ubuntu9) version 4.8.1 (x86_64-linux-gnu)
#	compiled by GNU C version 4.8.1, GMP version 5.1.2, MPFR version 3.1.1-p2, MPC version 1.0.1
# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
# options passed:  -I . -imultiarch x86_64-linux-gnu -D SPEC_CPU -D NDEBUG
# -D SPEC_CPU_LP64 combine.c -mtune=generic -march=x86-64 -g -fverbose-asm
# -fno-strict-aliasing -fstack-protector -Wformat -Wformat-security
# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg -fcommon
# -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
# -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
# -fident -finline-atomics -fira-hoist-pressure -fira-share-save-slots
# -fira-share-spill-slots -fivopts -fkeep-static-consts
# -fleading-underscore -fmath-errno -fmerge-debug-strings
# -fmove-loop-invariants -fpeephole -fprefetch-loop-arrays
# -freg-struct-return -fsched-critical-path-heuristic
# -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
# -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
# -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fshow-column
# -fsigned-zeros -fsplit-ivs-in-unroller -fstack-protector
# -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
# -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
# -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
# -ftree-parallelize-loops= -ftree-phiprop -ftree-pta -ftree-reassoc
# -ftree-scev-cprop -ftree-slp-vectorize -ftree-vect-loop-version
# -funit-at-a-time -funwind-tables -fverbose-asm -fzero-initialized-in-bss
# -m128bit-long-double -m64 -m80387 -maccumulate-outgoing-args
# -malign-stringops -mfancy-math-387 -mfp-ret-in-387 -mfxsr -mglibc
# -mieee-fp -mlong-double-80 -mmmx -mno-sse4 -mpush-args -mred-zone -msse
# -msse2 -mtls-direct-seg-refs

	.text
.Ltext0:
	.local	combine_attempts
	.comm	combine_attempts,4,4
	.local	combine_merges
	.comm	combine_merges,4,4
	.local	combine_extras
	.comm	combine_extras,4,4
	.local	combine_successes
	.comm	combine_successes,4,4
	.local	total_attempts
	.comm	total_attempts,4,4
	.local	total_merges
	.comm	total_merges,4,4
	.local	total_extras
	.comm	total_extras,4,4
	.local	total_successes
	.comm	total_successes,4,4
	.local	uid_cuid
	.comm	uid_cuid,8,8
	.local	max_uid_cuid
	.comm	max_uid_cuid,4,4
	.local	combine_max_regno
	.comm	combine_max_regno,4,4
	.local	reg_last_death
	.comm	reg_last_death,8,8
	.local	reg_last_set
	.comm	reg_last_set,8,8
	.local	mem_last_set
	.comm	mem_last_set,4,4
	.local	last_call_cuid
	.comm	last_call_cuid,4,4
	.local	subst_insn
	.comm	subst_insn,8,8
	.local	subst_prev_insn
	.comm	subst_prev_insn,8,8
	.local	subst_low_cuid
	.comm	subst_low_cuid,4,4
	.local	newpat_used_regs
	.comm	newpat_used_regs,8,8
	.local	added_links_insn
	.comm	added_links_insn,8,8
	.local	this_basic_block
	.comm	this_basic_block,4,4
	.local	refresh_blocks
	.comm	refresh_blocks,8,8
	.local	need_refresh
	.comm	need_refresh,4,4
	.local	reg_last_set_value
	.comm	reg_last_set_value,8,8
	.local	reg_last_set_label
	.comm	reg_last_set_label,8,8
	.local	reg_last_set_table_tick
	.comm	reg_last_set_table_tick,8,8
	.local	reg_last_set_invalid
	.comm	reg_last_set_invalid,8,8
	.local	label_tick
	.comm	label_tick,4,4
	.local	reg_nonzero_bits
	.comm	reg_nonzero_bits,8,8
	.local	nonzero_bits_mode
	.comm	nonzero_bits_mode,4,4
	.local	reg_sign_bit_copies
	.comm	reg_sign_bit_copies,8,8
	.local	nonzero_sign_valid
	.comm	nonzero_sign_valid,4,4
	.local	reg_last_set_mode
	.comm	reg_last_set_mode,8,8
	.local	reg_last_set_nonzero_bits
	.comm	reg_last_set_nonzero_bits,8,8
	.local	reg_last_set_sign_bit_copies
	.comm	reg_last_set_sign_bit_copies,8,8
	.local	undobuf
	.comm	undobuf,24,16
	.local	n_occurrences
	.comm	n_occurrences,4,4
	.section	.rodata
.LC0:
	.string	"combine.c"
	.text
	.type	do_SUBST, @function
do_SUBST:
.LFB2:
	.file 1 "combine.c"
	.loc 1 420 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# into, into
	movq	%rsi, -48(%rbp)	# newval, newval
	.loc 1 422 0
	movq	-40(%rbp), %rax	# into, tmp77
	movq	(%rax), %rax	# *into_2(D), tmp78
	movq	%rax, -24(%rbp)	# tmp78, oldval
	.loc 1 424 0
	movq	-24(%rbp), %rax	# oldval, tmp79
	cmpq	-48(%rbp), %rax	# newval, tmp79
	jne	.L2	#,
	.loc 1 425 0
	jmp	.L1	#
.L2:
	.loc 1 432 0
	movq	-24(%rbp), %rax	# oldval, tmp80
	movzbl	2(%rax), %eax	# oldval_3->mode, D.29054
	movzbl	%al, %eax	# D.29054, D.29055
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29056
	cmpl	$1, %eax	#, D.29056
	jne	.L4	#,
	.loc 1 433 0
	movq	-48(%rbp), %rax	# newval, tmp82
	movzwl	(%rax), %eax	# newval_4(D)->code, D.29057
	cmpw	$54, %ax	#, D.29057
	jne	.L4	#,
	.loc 1 437 0
	movq	-48(%rbp), %rax	# newval, tmp83
	movq	8(%rax), %rbx	# newval_4(D)->fld[0].rtwint, D.29058
	.loc 1 438 0
	movq	-24(%rbp), %rax	# oldval, tmp84
	movzbl	2(%rax), %eax	# oldval_3->mode, D.29054
	.loc 1 437 0
	movzbl	%al, %edx	# D.29054, D.29059
	movq	-48(%rbp), %rax	# newval, tmp85
	movq	8(%rax), %rax	# newval_4(D)->fld[0].rtwint, D.29058
	movl	%edx, %esi	# D.29059,
	movq	%rax, %rdi	# D.29058,
	call	trunc_int_for_mode	#
	cmpq	%rax, %rbx	# D.29058, D.29058
	je	.L5	#,
	.loc 1 439 0
	movl	$__FUNCTION__.11361, %edx	#,
	movl	$439, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L5:
	.loc 1 447 0
	movq	-24(%rbp), %rax	# oldval, tmp86
	movzwl	(%rax), %eax	# oldval_3->code, D.29057
	cmpw	$63, %ax	#, D.29057
	jne	.L6	#,
	.loc 1 448 0
	movq	-24(%rbp), %rax	# oldval, tmp87
	movq	8(%rax), %rax	# oldval_3->fld[0].rtx, D.29060
	movzwl	(%rax), %eax	# _15->code, D.29057
	cmpw	$54, %ax	#, D.29057
	je	.L7	#,
.L6:
	.loc 1 449 0
	movq	-24(%rbp), %rax	# oldval, tmp88
	movzwl	(%rax), %eax	# oldval_3->code, D.29057
	cmpw	$121, %ax	#, D.29057
	jne	.L4	#,
	.loc 1 450 0
	movq	-24(%rbp), %rax	# oldval, tmp89
	movq	8(%rax), %rax	# oldval_3->fld[0].rtx, D.29060
	movzwl	(%rax), %eax	# _18->code, D.29057
	cmpw	$54, %ax	#, D.29057
	jne	.L4	#,
.L7:
	.loc 1 451 0
	movl	$__FUNCTION__.11361, %edx	#,
	movl	$451, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L4:
	.loc 1 454 0
	movq	undobuf+8(%rip), %rax	# undobuf.frees, D.29061
	testq	%rax, %rax	# D.29061
	je	.L8	#,
	.loc 1 455 0
	movq	undobuf+8(%rip), %rax	# undobuf.frees, tmp90
	movq	%rax, -32(%rbp)	# tmp90, buf
	movq	-32(%rbp), %rax	# buf, tmp91
	movq	(%rax), %rax	# buf_21->next, D.29061
	movq	%rax, undobuf+8(%rip)	# D.29061, undobuf.frees
	jmp	.L9	#
.L8:
	.loc 1 457 0
	movl	$32, %edi	#,
	call	xmalloc	#
	movq	%rax, -32(%rbp)	# tmp92, buf
.L9:
	.loc 1 459 0
	movq	-32(%rbp), %rax	# buf, tmp93
	movl	$0, 8(%rax)	#, buf_1->is_int
	.loc 1 460 0
	movq	-32(%rbp), %rax	# buf, tmp94
	movq	-40(%rbp), %rdx	# into, tmp95
	movq	%rdx, 24(%rax)	# tmp95, buf_1->where.r
	.loc 1 461 0
	movq	-32(%rbp), %rax	# buf, tmp96
	movq	-24(%rbp), %rdx	# oldval, tmp97
	movq	%rdx, 16(%rax)	# tmp97, buf_1->old_contents.r
	.loc 1 462 0
	movq	-40(%rbp), %rax	# into, tmp98
	movq	-48(%rbp), %rdx	# newval, tmp99
	movq	%rdx, (%rax)	# tmp99, *into_2(D)
	.loc 1 464 0
	movq	undobuf(%rip), %rdx	# undobuf.undos, D.29061
	movq	-32(%rbp), %rax	# buf, tmp100
	movq	%rdx, (%rax)	# D.29061, buf_1->next
	movq	-32(%rbp), %rax	# buf, tmp101
	movq	%rax, undobuf(%rip)	# tmp101, undobuf.undos
.L1:
	.loc 1 465 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	do_SUBST, .-do_SUBST
	.type	do_SUBST_INT, @function
do_SUBST_INT:
.LFB3:
	.loc 1 476 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# into, into
	movl	%esi, -28(%rbp)	# newval, newval
	.loc 1 478 0
	movq	-24(%rbp), %rax	# into, tmp62
	movl	(%rax), %eax	# *into_2(D), tmp63
	movl	%eax, -12(%rbp)	# tmp63, oldval
	.loc 1 480 0
	movl	-12(%rbp), %eax	# oldval, tmp64
	cmpl	-28(%rbp), %eax	# newval, tmp64
	jne	.L11	#,
	.loc 1 481 0
	jmp	.L10	#
.L11:
	.loc 1 483 0
	movq	undobuf+8(%rip), %rax	# undobuf.frees, D.29063
	testq	%rax, %rax	# D.29063
	je	.L13	#,
	.loc 1 484 0
	movq	undobuf+8(%rip), %rax	# undobuf.frees, tmp65
	movq	%rax, -8(%rbp)	# tmp65, buf
	movq	-8(%rbp), %rax	# buf, tmp66
	movq	(%rax), %rax	# buf_6->next, D.29063
	movq	%rax, undobuf+8(%rip)	# D.29063, undobuf.frees
	jmp	.L14	#
.L13:
	.loc 1 486 0
	movl	$32, %edi	#,
	call	xmalloc	#
	movq	%rax, -8(%rbp)	# tmp67, buf
.L14:
	.loc 1 488 0
	movq	-8(%rbp), %rax	# buf, tmp68
	movl	$1, 8(%rax)	#, buf_1->is_int
	.loc 1 489 0
	movq	-8(%rbp), %rax	# buf, tmp69
	movq	-24(%rbp), %rdx	# into, tmp70
	movq	%rdx, 24(%rax)	# tmp70, buf_1->where.i
	.loc 1 490 0
	movq	-8(%rbp), %rax	# buf, tmp71
	movl	-12(%rbp), %edx	# oldval, tmp72
	movl	%edx, 16(%rax)	# tmp72, buf_1->old_contents.i
	.loc 1 491 0
	movq	-24(%rbp), %rax	# into, tmp73
	movl	-28(%rbp), %edx	# newval, tmp74
	movl	%edx, (%rax)	# tmp74, *into_2(D)
	.loc 1 493 0
	movq	undobuf(%rip), %rdx	# undobuf.undos, D.29063
	movq	-8(%rbp), %rax	# buf, tmp75
	movq	%rdx, (%rax)	# D.29063, buf_1->next
	movq	-8(%rbp), %rax	# buf, tmp76
	movq	%rax, undobuf(%rip)	# tmp76, undobuf.undos
.L10:
	.loc 1 494 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	do_SUBST_INT, .-do_SUBST_INT
	.globl	combine_instructions
	.type	combine_instructions, @function
combine_instructions:
.LFB4:
	.loc 1 508 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$80, %rsp	#,
	movq	%rdi, -72(%rbp)	# f, f
	movl	%esi, -76(%rbp)	# nregs, nregs
	.loc 1 516 0
	movl	$0, -64(%rbp)	#, new_direct_jump_p
	.loc 1 518 0
	movl	$0, combine_attempts(%rip)	#, combine_attempts
	.loc 1 519 0
	movl	$0, combine_merges(%rip)	#, combine_merges
	.loc 1 520 0
	movl	$0, combine_extras(%rip)	#, combine_extras
	.loc 1 521 0
	movl	$0, combine_successes(%rip)	#, combine_successes
	.loc 1 523 0
	movl	-76(%rbp), %eax	# nregs, tmp163
	movl	%eax, combine_max_regno(%rip)	# tmp163, combine_max_regno
	.loc 1 526 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	movl	$8, %esi	#,
	movq	%rax, %rdi	# D.29064,
	call	xcalloc	#
	.loc 1 525 0
	movq	%rax, reg_nonzero_bits(%rip)	# reg_nonzero_bits.0, reg_nonzero_bits
	.loc 1 528 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	movl	$1, %esi	#,
	movq	%rax, %rdi	# D.29064,
	call	xcalloc	#
	movq	%rax, reg_sign_bit_copies(%rip)	# reg_sign_bit_copies.1, reg_sign_bit_copies
	.loc 1 530 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	salq	$3, %rax	#, D.29064
	movq	%rax, %rdi	# D.29064,
	call	xmalloc	#
	movq	%rax, reg_last_death(%rip)	# reg_last_death.2, reg_last_death
	.loc 1 531 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	salq	$3, %rax	#, D.29064
	movq	%rax, %rdi	# D.29064,
	call	xmalloc	#
	movq	%rax, reg_last_set(%rip)	# reg_last_set.3, reg_last_set
	.loc 1 532 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	salq	$3, %rax	#, D.29064
	movq	%rax, %rdi	# D.29064,
	call	xmalloc	#
	movq	%rax, reg_last_set_value(%rip)	# reg_last_set_value.4, reg_last_set_value
	.loc 1 533 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	salq	$2, %rax	#, D.29064
	movq	%rax, %rdi	# D.29064,
	call	xmalloc	#
	movq	%rax, reg_last_set_table_tick(%rip)	# reg_last_set_table_tick.5, reg_last_set_table_tick
	.loc 1 534 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	salq	$2, %rax	#, D.29064
	movq	%rax, %rdi	# D.29064,
	call	xmalloc	#
	movq	%rax, reg_last_set_label(%rip)	# reg_last_set_label.6, reg_last_set_label
	.loc 1 535 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	movq	%rax, %rdi	# D.29064,
	call	xmalloc	#
	movq	%rax, reg_last_set_invalid(%rip)	# reg_last_set_invalid.7, reg_last_set_invalid
	.loc 1 537 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	salq	$2, %rax	#, D.29064
	movq	%rax, %rdi	# D.29064,
	call	xmalloc	#
	movq	%rax, reg_last_set_mode(%rip)	# reg_last_set_mode.8, reg_last_set_mode
	.loc 1 539 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	salq	$3, %rax	#, D.29064
	movq	%rax, %rdi	# D.29064,
	call	xmalloc	#
	movq	%rax, reg_last_set_nonzero_bits(%rip)	# reg_last_set_nonzero_bits.9, reg_last_set_nonzero_bits
	.loc 1 541 0
	movl	-76(%rbp), %eax	# nregs, D.29064
	movq	%rax, %rdi	# D.29064,
	call	xmalloc	#
	movq	%rax, reg_last_set_sign_bit_copies(%rip)	# reg_last_set_sign_bit_copies.10, reg_last_set_sign_bit_copies
	.loc 1 543 0
	call	init_reg_last_arrays	#
	.loc 1 545 0
	call	init_recog_no_volatile	#
	.loc 1 549 0
	movq	-72(%rbp), %rax	# f, tmp175
	movq	%rax, -56(%rbp)	# tmp175, insn
	movl	$0, -60(%rbp)	#, i
	jmp	.L16	#
.L18:
	.loc 1 550 0
	movq	-56(%rbp), %rax	# insn, tmp176
	movl	8(%rax), %eax	# insn_1->fld[0].rtint, D.29065
	cmpl	-60(%rbp), %eax	# i, D.29065
	jle	.L17	#,
	.loc 1 551 0
	movq	-56(%rbp), %rax	# insn, tmp177
	movl	8(%rax), %eax	# insn_1->fld[0].rtint, tmp178
	movl	%eax, -60(%rbp)	# tmp178, i
.L17:
	.loc 1 549 0
	movq	-56(%rbp), %rax	# insn, tmp179
	movq	24(%rax), %rax	# insn_1->fld[2].rtx, tmp180
	movq	%rax, -56(%rbp)	# tmp180, insn
.L16:
	.loc 1 549 0 is_stmt 0 discriminator 1
	cmpq	$0, -56(%rbp)	#, insn
	jne	.L18	#,
	.loc 1 553 0 is_stmt 1
	movl	-60(%rbp), %eax	# i, tmp181
	addl	$1, %eax	#, D.29065
	cltq
	salq	$2, %rax	#, D.29064
	movq	%rax, %rdi	# D.29064,
	call	xmalloc	#
	movq	%rax, uid_cuid(%rip)	# uid_cuid.11, uid_cuid
	.loc 1 554 0
	movl	-60(%rbp), %eax	# i, tmp183
	movl	%eax, max_uid_cuid(%rip)	# tmp183, max_uid_cuid
	.loc 1 556 0
	movl	$0, %edx	#,
	movl	$1, %esi	#,
	movl	$64, %edi	#,
	call	mode_for_size	#
	movl	%eax, nonzero_bits_mode(%rip)	# nonzero_bits_mode.12, nonzero_bits_mode
	.loc 1 561 0
	movl	$0, nonzero_sign_valid(%rip)	#, nonzero_sign_valid
	.loc 1 574 0
	movl	$1, label_tick(%rip)	#, label_tick
	.loc 1 578 0
	movq	$0, subst_prev_insn(%rip)	#, subst_prev_insn
	.loc 1 580 0
	call	setup_incoming_promotions	#
	.loc 1 582 0
	movl	n_basic_blocks(%rip), %eax	# n_basic_blocks, n_basic_blocks.13
	movl	%eax, %edi	# n_basic_blocks.14,
	call	sbitmap_alloc	#
	movq	%rax, refresh_blocks(%rip)	# refresh_blocks.15, refresh_blocks
	.loc 1 583 0
	movq	refresh_blocks(%rip), %rax	# refresh_blocks, refresh_blocks.16
	movq	%rax, %rdi	# refresh_blocks.16,
	call	sbitmap_zero	#
	.loc 1 584 0
	movl	$0, need_refresh(%rip)	#, need_refresh
	.loc 1 586 0
	movq	-72(%rbp), %rax	# f, tmp184
	movq	%rax, -56(%rbp)	# tmp184, insn
	movl	$0, -60(%rbp)	#, i
	jmp	.L19	#
.L22:
	.loc 1 588 0
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.17
	movq	-56(%rbp), %rax	# insn, tmp185
	movl	8(%rax), %eax	# insn_2->fld[0].rtint, D.29065
	cltq
	salq	$2, %rax	#, D.29064
	addq	%rax, %rdx	# D.29064, D.29066
	addl	$1, -60(%rbp)	#, i
	movl	-60(%rbp), %eax	# i, tmp186
	movl	%eax, (%rdx)	# tmp186, *_72
	.loc 1 589 0
	movl	-60(%rbp), %eax	# i, tmp187
	movl	%eax, subst_low_cuid(%rip)	# tmp187, subst_low_cuid
	.loc 1 590 0
	movq	-56(%rbp), %rax	# insn, tmp188
	movq	%rax, subst_insn(%rip)	# tmp188, subst_insn
	.loc 1 592 0
	movq	-56(%rbp), %rax	# insn, tmp189
	movzwl	(%rax), %eax	# insn_2->code, D.29067
	movzwl	%ax, %eax	# D.29067, D.29065
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29068
	cmpb	$105, %al	#, D.29068
	jne	.L20	#,
	.loc 1 594 0
	movq	-56(%rbp), %rax	# insn, tmp191
	movq	32(%rax), %rax	# insn_2->fld[3].rtx, D.29069
	movl	$0, %edx	#,
	movl	$set_nonzero_bits_and_sign_copies, %esi	#,
	movq	%rax, %rdi	# D.29069,
	call	note_stores	#
	.loc 1 596 0
	movq	-56(%rbp), %rax	# insn, tmp192
	movq	%rax, %rdi	# tmp192,
	call	record_dead_and_set_regs	#
.L20:
	.loc 1 606 0
	movq	-56(%rbp), %rax	# insn, tmp193
	movzwl	(%rax), %eax	# insn_2->code, D.29067
	cmpw	$36, %ax	#, D.29067
	jne	.L21	#,
	.loc 1 607 0
	movl	label_tick(%rip), %eax	# label_tick, label_tick.18
	addl	$1, %eax	#, label_tick.19
	movl	%eax, label_tick(%rip)	# label_tick.19, label_tick
.L21:
	.loc 1 586 0
	movq	-56(%rbp), %rax	# insn, tmp194
	movq	24(%rax), %rax	# insn_2->fld[2].rtx, tmp195
	movq	%rax, -56(%rbp)	# tmp195, insn
.L19:
	.loc 1 586 0 is_stmt 0 discriminator 1
	cmpq	$0, -56(%rbp)	#, insn
	jne	.L22	#,
	.loc 1 610 0 is_stmt 1
	movl	$1, nonzero_sign_valid(%rip)	#, nonzero_sign_valid
	.loc 1 614 0
	movl	$-1, this_basic_block(%rip)	#, this_basic_block
	.loc 1 615 0
	movl	$1, label_tick(%rip)	#, label_tick
	.loc 1 616 0
	movl	$0, last_call_cuid(%rip)	#, last_call_cuid
	.loc 1 617 0
	movl	$0, mem_last_set(%rip)	#, mem_last_set
	.loc 1 618 0
	call	init_reg_last_arrays	#
	.loc 1 619 0
	call	setup_incoming_promotions	#
	.loc 1 621 0
	movq	-72(%rbp), %rax	# f, tmp196
	movq	%rax, -56(%rbp)	# tmp196, insn
	jmp	.L23	#
.L44:
	.loc 1 623 0
	movq	$0, -48(%rbp)	#, next
	.loc 1 626 0
	movl	this_basic_block(%rip), %eax	# this_basic_block, this_basic_block.20
	leal	1(%rax), %edx	#, D.29065
	movl	n_basic_blocks(%rip), %eax	# n_basic_blocks, n_basic_blocks.21
	cmpl	%eax, %edx	# n_basic_blocks.21, D.29065
	jge	.L24	#,
	.loc 1 627 0
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.22
	movl	this_basic_block(%rip), %edx	# this_basic_block, this_basic_block.23
	addl	$1, %edx	#, D.29065
	movslq	%edx, %rdx	# D.29065, tmp197
	addq	$4, %rdx	#, tmp198
	movq	(%rax,%rdx,8), %rax	# basic_block_info.22_87->data.bb, D.29070
	movq	(%rax), %rax	# _90->head, D.29069
	cmpq	-56(%rbp), %rax	# insn, D.29069
	jne	.L24	#,
	.loc 1 628 0
	movl	this_basic_block(%rip), %eax	# this_basic_block, this_basic_block.24
	addl	$1, %eax	#, this_basic_block.25
	movl	%eax, this_basic_block(%rip)	# this_basic_block.25, this_basic_block
.L24:
	.loc 1 630 0
	movq	-56(%rbp), %rax	# insn, tmp199
	movzwl	(%rax), %eax	# insn_3->code, D.29067
	cmpw	$36, %ax	#, D.29067
	jne	.L25	#,
	.loc 1 631 0
	movl	label_tick(%rip), %eax	# label_tick, label_tick.26
	addl	$1, %eax	#, label_tick.27
	movl	%eax, label_tick(%rip)	# label_tick.27, label_tick
	jmp	.L26	#
.L25:
	.loc 1 633 0
	movq	-56(%rbp), %rax	# insn, tmp200
	movzwl	(%rax), %eax	# insn_3->code, D.29067
	movzwl	%ax, %eax	# D.29067, D.29065
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29068
	cmpb	$105, %al	#, D.29068
	jne	.L26	#,
	.loc 1 637 0
	movq	-56(%rbp), %rax	# insn, tmp202
	movq	32(%rax), %rdx	# insn_3->fld[3].rtx, D.29069
	movq	-56(%rbp), %rax	# insn, tmp203
	movq	%rdx, %rsi	# D.29069,
	movq	%rax, %rdi	# tmp203,
	call	check_promoted_subreg	#
	.loc 1 641 0
	movq	-56(%rbp), %rax	# insn, tmp204
	movq	48(%rax), %rax	# insn_3->fld[5].rtx, tmp205
	movq	%rax, -40(%rbp)	# tmp205, links
	jmp	.L27	#
.L29:
	.loc 1 642 0
	movq	-40(%rbp), %rax	# links, tmp206
	movq	8(%rax), %rsi	# links_14->fld[0].rtx, D.29069
	leaq	-64(%rbp), %rdx	#, tmp207
	movq	-56(%rbp), %rax	# insn, tmp208
	movq	%rdx, %rcx	# tmp207,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# tmp208,
	call	try_combine	#
	movq	%rax, -48(%rbp)	# tmp209, next
	cmpq	$0, -48(%rbp)	#, next
	je	.L28	#,
	.loc 1 644 0
	jmp	.L26	#
.L28:
	.loc 1 641 0
	movq	-40(%rbp), %rax	# links, tmp210
	movq	16(%rax), %rax	# links_14->fld[1].rtx, tmp211
	movq	%rax, -40(%rbp)	# tmp211, links
.L27:
	.loc 1 641 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, links
	jne	.L29	#,
	.loc 1 648 0 is_stmt 1
	movq	-56(%rbp), %rax	# insn, tmp212
	movq	48(%rax), %rax	# insn_3->fld[5].rtx, tmp213
	movq	%rax, -40(%rbp)	# tmp213, links
	jmp	.L30	#
.L36:
.LBB2:
	.loc 1 650 0
	movq	-40(%rbp), %rax	# links, tmp214
	movq	8(%rax), %rax	# links_15->fld[0].rtx, tmp215
	movq	%rax, -16(%rbp)	# tmp215, link
	.loc 1 654 0
	movq	-16(%rbp), %rax	# link, tmp216
	movzwl	(%rax), %eax	# link_106->code, D.29067
	cmpw	$37, %ax	#, D.29067
	jne	.L31	#,
	.loc 1 655 0
	jmp	.L32	#
.L31:
	.loc 1 657 0
	movq	-16(%rbp), %rax	# link, tmp217
	movq	48(%rax), %rax	# link_106->fld[5].rtx, tmp218
	movq	%rax, -32(%rbp)	# tmp218, nextlinks
	jmp	.L33	#
.L35:
	.loc 1 660 0
	movq	-32(%rbp), %rax	# nextlinks, tmp219
	movq	8(%rax), %rdx	# nextlinks_17->fld[0].rtx, D.29069
	leaq	-64(%rbp), %rcx	#, tmp220
	movq	-16(%rbp), %rsi	# link, tmp221
	movq	-56(%rbp), %rax	# insn, tmp222
	movq	%rax, %rdi	# tmp222,
	call	try_combine	#
	movq	%rax, -48(%rbp)	# tmp223, next
	cmpq	$0, -48(%rbp)	#, next
	je	.L34	#,
	.loc 1 663 0
	jmp	.L26	#
.L34:
	.loc 1 659 0
	movq	-32(%rbp), %rax	# nextlinks, tmp224
	movq	16(%rax), %rax	# nextlinks_17->fld[1].rtx, tmp225
	movq	%rax, -32(%rbp)	# tmp225, nextlinks
.L33:
	.loc 1 657 0 discriminator 1
	cmpq	$0, -32(%rbp)	#, nextlinks
	jne	.L35	#,
.L32:
.LBE2:
	.loc 1 648 0
	movq	-40(%rbp), %rax	# links, tmp226
	movq	16(%rax), %rax	# links_15->fld[1].rtx, tmp227
	movq	%rax, -40(%rbp)	# tmp227, links
.L30:
	.loc 1 648 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, links
	jne	.L36	#,
	.loc 1 728 0 is_stmt 1
	movq	-56(%rbp), %rax	# insn, tmp228
	movq	48(%rax), %rax	# insn_3->fld[5].rtx, tmp229
	movq	%rax, -40(%rbp)	# tmp229, links
	jmp	.L37	#
.L41:
	.loc 1 729 0
	movq	-40(%rbp), %rax	# links, tmp230
	movq	16(%rax), %rax	# links_16->fld[1].rtx, tmp231
	movq	%rax, -32(%rbp)	# tmp231, nextlinks
	jmp	.L38	#
.L40:
	.loc 1 731 0
	movq	-32(%rbp), %rax	# nextlinks, tmp232
	movq	8(%rax), %rdx	# nextlinks_18->fld[0].rtx, D.29069
	movq	-40(%rbp), %rax	# links, tmp233
	movq	8(%rax), %rsi	# links_16->fld[0].rtx, D.29069
	leaq	-64(%rbp), %rcx	#, tmp234
	movq	-56(%rbp), %rax	# insn, tmp235
	movq	%rax, %rdi	# tmp235,
	call	try_combine	#
	movq	%rax, -48(%rbp)	# tmp236, next
	cmpq	$0, -48(%rbp)	#, next
	je	.L39	#,
	.loc 1 734 0
	jmp	.L26	#
.L39:
	.loc 1 730 0
	movq	-32(%rbp), %rax	# nextlinks, tmp237
	movq	16(%rax), %rax	# nextlinks_18->fld[1].rtx, tmp238
	movq	%rax, -32(%rbp)	# tmp238, nextlinks
.L38:
	.loc 1 729 0 discriminator 1
	cmpq	$0, -32(%rbp)	#, nextlinks
	jne	.L40	#,
	.loc 1 728 0
	movq	-40(%rbp), %rax	# links, tmp239
	movq	16(%rax), %rax	# links_16->fld[1].rtx, tmp240
	movq	%rax, -40(%rbp)	# tmp240, links
.L37:
	.loc 1 728 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, links
	jne	.L41	#,
	.loc 1 736 0 is_stmt 1
	movq	-56(%rbp), %rax	# insn, tmp241
	movzwl	(%rax), %eax	# insn_3->code, D.29067
	cmpw	$37, %ax	#, D.29067
	je	.L26	#,
	.loc 1 737 0
	movq	-56(%rbp), %rax	# insn, tmp242
	movq	%rax, %rdi	# tmp242,
	call	record_dead_and_set_regs	#
.L26:
	.loc 1 621 0
	cmpq	$0, -48(%rbp)	#, next
	jne	.L42	#,
	.loc 1 621 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# insn, tmp243
	movq	24(%rax), %rax	# insn_3->fld[2].rtx, iftmp.28
	jmp	.L43	#
.L42:
	.loc 1 621 0 discriminator 2
	movq	-48(%rbp), %rax	# next, iftmp.28
.L43:
	.loc 1 621 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.28, insn
.L23:
	.loc 1 621 0 discriminator 1
	cmpq	$0, -56(%rbp)	#, insn
	jne	.L44	#,
	.loc 1 744 0 is_stmt 1
	movq	-72(%rbp), %rax	# f, tmp244
	movq	%rax, %rdi	# tmp244,
	call	delete_noop_moves	#
	.loc 1 746 0
	movl	need_refresh(%rip), %eax	# need_refresh, need_refresh.29
	testl	%eax, %eax	# need_refresh.29
	je	.L45	#,
	.loc 1 748 0
	movq	refresh_blocks(%rip), %rax	# refresh_blocks, refresh_blocks.30
	movl	$1, %edx	#,
	movl	$2, %esi	#,
	movq	%rax, %rdi	# refresh_blocks.30,
	call	update_life_info	#
.L45:
	.loc 1 753 0
	movq	refresh_blocks(%rip), %rax	# refresh_blocks, refresh_blocks.31
	movq	%rax, %rdi	# refresh_blocks.31,
	call	free	#
	.loc 1 754 0
	movq	reg_nonzero_bits(%rip), %rax	# reg_nonzero_bits, reg_nonzero_bits.32
	movq	%rax, %rdi	# reg_nonzero_bits.32,
	call	free	#
	.loc 1 755 0
	movq	reg_sign_bit_copies(%rip), %rax	# reg_sign_bit_copies, reg_sign_bit_copies.33
	movq	%rax, %rdi	# reg_sign_bit_copies.33,
	call	free	#
	.loc 1 756 0
	movq	reg_last_death(%rip), %rax	# reg_last_death, reg_last_death.34
	movq	%rax, %rdi	# reg_last_death.34,
	call	free	#
	.loc 1 757 0
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.35
	movq	%rax, %rdi	# reg_last_set.35,
	call	free	#
	.loc 1 758 0
	movq	reg_last_set_value(%rip), %rax	# reg_last_set_value, reg_last_set_value.36
	movq	%rax, %rdi	# reg_last_set_value.36,
	call	free	#
	.loc 1 759 0
	movq	reg_last_set_table_tick(%rip), %rax	# reg_last_set_table_tick, reg_last_set_table_tick.37
	movq	%rax, %rdi	# reg_last_set_table_tick.37,
	call	free	#
	.loc 1 760 0
	movq	reg_last_set_label(%rip), %rax	# reg_last_set_label, reg_last_set_label.38
	movq	%rax, %rdi	# reg_last_set_label.38,
	call	free	#
	.loc 1 761 0
	movq	reg_last_set_invalid(%rip), %rax	# reg_last_set_invalid, reg_last_set_invalid.39
	movq	%rax, %rdi	# reg_last_set_invalid.39,
	call	free	#
	.loc 1 762 0
	movq	reg_last_set_mode(%rip), %rax	# reg_last_set_mode, reg_last_set_mode.40
	movq	%rax, %rdi	# reg_last_set_mode.40,
	call	free	#
	.loc 1 763 0
	movq	reg_last_set_nonzero_bits(%rip), %rax	# reg_last_set_nonzero_bits, reg_last_set_nonzero_bits.41
	movq	%rax, %rdi	# reg_last_set_nonzero_bits.41,
	call	free	#
	.loc 1 764 0
	movq	reg_last_set_sign_bit_copies(%rip), %rax	# reg_last_set_sign_bit_copies, reg_last_set_sign_bit_copies.42
	movq	%rax, %rdi	# reg_last_set_sign_bit_copies.42,
	call	free	#
	.loc 1 765 0
	movq	uid_cuid(%rip), %rax	# uid_cuid, uid_cuid.43
	movq	%rax, %rdi	# uid_cuid.43,
	call	free	#
.LBB3:
	.loc 1 769 0
	movq	undobuf+8(%rip), %rax	# undobuf.frees, tmp245
	movq	%rax, -24(%rbp)	# tmp245, undo
	jmp	.L46	#
.L47:
	.loc 1 771 0 discriminator 2
	movq	-24(%rbp), %rax	# undo, tmp246
	movq	(%rax), %rax	# undo_19->next, tmp247
	movq	%rax, -8(%rbp)	# tmp247, next
	.loc 1 772 0 discriminator 2
	movq	-24(%rbp), %rax	# undo, tmp248
	movq	%rax, %rdi	# tmp248,
	call	free	#
	.loc 1 769 0 discriminator 2
	movq	-8(%rbp), %rax	# next, tmp249
	movq	%rax, -24(%rbp)	# tmp249, undo
.L46:
	.loc 1 769 0 is_stmt 0 discriminator 1
	cmpq	$0, -24(%rbp)	#, undo
	jne	.L47	#,
	.loc 1 774 0 is_stmt 1
	movq	$0, undobuf+8(%rip)	#, undobuf.frees
.LBE3:
	.loc 1 777 0
	movl	total_attempts(%rip), %edx	# total_attempts, total_attempts.44
	movl	combine_attempts(%rip), %eax	# combine_attempts, combine_attempts.45
	addl	%edx, %eax	# total_attempts.44, total_attempts.46
	movl	%eax, total_attempts(%rip)	# total_attempts.46, total_attempts
	.loc 1 778 0
	movl	total_merges(%rip), %edx	# total_merges, total_merges.47
	movl	combine_merges(%rip), %eax	# combine_merges, combine_merges.48
	addl	%edx, %eax	# total_merges.47, total_merges.49
	movl	%eax, total_merges(%rip)	# total_merges.49, total_merges
	.loc 1 779 0
	movl	total_extras(%rip), %edx	# total_extras, total_extras.50
	movl	combine_extras(%rip), %eax	# combine_extras, combine_extras.51
	addl	%edx, %eax	# total_extras.50, total_extras.52
	movl	%eax, total_extras(%rip)	# total_extras.52, total_extras
	.loc 1 780 0
	movl	total_successes(%rip), %edx	# total_successes, total_successes.53
	movl	combine_successes(%rip), %eax	# combine_successes, combine_successes.54
	addl	%edx, %eax	# total_successes.53, total_successes.55
	movl	%eax, total_successes(%rip)	# total_successes.55, total_successes
	.loc 1 782 0
	movl	$0, nonzero_sign_valid(%rip)	#, nonzero_sign_valid
	.loc 1 785 0
	call	init_recog	#
	.loc 1 787 0
	movl	-64(%rbp), %eax	# new_direct_jump_p, D.29065
	.loc 1 788 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	combine_instructions, .-combine_instructions
	.type	init_reg_last_arrays, @function
init_reg_last_arrays:
.LFB5:
	.loc 1 794 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 795 0
	movl	combine_max_regno(%rip), %eax	# combine_max_regno, tmp84
	movl	%eax, -4(%rbp)	# tmp84, nregs
	.loc 1 797 0
	movl	-4(%rbp), %eax	# nregs, D.29071
	leaq	0(,%rax,8), %rdx	#, D.29071
	movq	reg_last_death(%rip), %rax	# reg_last_death, reg_last_death.56
	movl	$0, %esi	#,
	movq	%rax, %rdi	# reg_last_death.56,
	call	memset	#
	.loc 1 798 0
	movl	-4(%rbp), %eax	# nregs, D.29071
	leaq	0(,%rax,8), %rdx	#, D.29071
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.57
	movl	$0, %esi	#,
	movq	%rax, %rdi	# reg_last_set.57,
	call	memset	#
	.loc 1 799 0
	movl	-4(%rbp), %eax	# nregs, D.29071
	leaq	0(,%rax,8), %rdx	#, D.29071
	movq	reg_last_set_value(%rip), %rax	# reg_last_set_value, reg_last_set_value.58
	movl	$0, %esi	#,
	movq	%rax, %rdi	# reg_last_set_value.58,
	call	memset	#
	.loc 1 800 0
	movl	-4(%rbp), %eax	# nregs, D.29071
	leaq	0(,%rax,4), %rdx	#, D.29071
	movq	reg_last_set_table_tick(%rip), %rax	# reg_last_set_table_tick, reg_last_set_table_tick.59
	movl	$0, %esi	#,
	movq	%rax, %rdi	# reg_last_set_table_tick.59,
	call	memset	#
	.loc 1 801 0
	movl	-4(%rbp), %eax	# nregs, D.29071
	leaq	0(,%rax,4), %rdx	#, D.29071
	movq	reg_last_set_label(%rip), %rax	# reg_last_set_label, reg_last_set_label.60
	movl	$0, %esi	#,
	movq	%rax, %rdi	# reg_last_set_label.60,
	call	memset	#
	.loc 1 802 0
	movl	-4(%rbp), %edx	# nregs, D.29071
	movq	reg_last_set_invalid(%rip), %rax	# reg_last_set_invalid, reg_last_set_invalid.61
	movl	$0, %esi	#,
	movq	%rax, %rdi	# reg_last_set_invalid.61,
	call	memset	#
	.loc 1 803 0
	movl	-4(%rbp), %eax	# nregs, D.29071
	leaq	0(,%rax,4), %rdx	#, D.29071
	movq	reg_last_set_mode(%rip), %rax	# reg_last_set_mode, reg_last_set_mode.62
	movl	$0, %esi	#,
	movq	%rax, %rdi	# reg_last_set_mode.62,
	call	memset	#
	.loc 1 804 0
	movl	-4(%rbp), %eax	# nregs, D.29071
	leaq	0(,%rax,8), %rdx	#, D.29071
	movq	reg_last_set_nonzero_bits(%rip), %rax	# reg_last_set_nonzero_bits, reg_last_set_nonzero_bits.63
	movl	$0, %esi	#,
	movq	%rax, %rdi	# reg_last_set_nonzero_bits.63,
	call	memset	#
	.loc 1 805 0
	movl	-4(%rbp), %edx	# nregs, D.29071
	movq	reg_last_set_sign_bit_copies(%rip), %rax	# reg_last_set_sign_bit_copies, reg_last_set_sign_bit_copies.64
	movl	$0, %esi	#,
	movq	%rax, %rdi	# reg_last_set_sign_bit_copies.64,
	call	memset	#
	.loc 1 806 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	init_reg_last_arrays, .-init_reg_last_arrays
	.type	setup_incoming_promotions, @function
setup_incoming_promotions:
.LFB6:
	.loc 1 812 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 837 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	setup_incoming_promotions, .-setup_incoming_promotions
	.type	set_nonzero_bits_and_sign_copies, @function
set_nonzero_bits_and_sign_copies:
.LFB7:
	.loc 1 855 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$48, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -40(%rbp)	# x, x
	movq	%rsi, -48(%rbp)	# set, set
	movq	%rdx, -56(%rbp)	# data, data
	.loc 1 858 0
	movq	-40(%rbp), %rax	# x, tmp148
	movzwl	(%rax), %eax	# x_1(D)->code, D.29072
	cmpw	$61, %ax	#, D.29072
	jne	.L51	#,
	.loc 1 859 0
	movq	-40(%rbp), %rax	# x, tmp149
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	cmpl	$52, %eax	#, D.29073
	jbe	.L51	#,
	.loc 1 862 0
	movq	-40(%rbp), %rax	# x, tmp150
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	movl	%eax, %edx	# D.29073, D.29074
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.65
	movq	32(%rax), %rax	# basic_block_info.65_6->data.bb, D.29075
	movq	64(%rax), %rax	# _7->global_live_at_start, D.29076
	movl	%edx, %esi	# D.29074,
	movq	%rax, %rdi	# D.29076,
	call	bitmap_bit_p	#
	testl	%eax, %eax	# D.29074
	jne	.L51	#,
	.loc 1 863 0
	movq	-40(%rbp), %rax	# x, tmp151
	movzbl	2(%rax), %eax	# x_1(D)->mode, D.29077
	movzbl	%al, %eax	# D.29077, D.29074
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29072
	cmpw	$64, %ax	#, D.29072
	ja	.L51	#,
	.loc 1 865 0
	cmpq	$0, -48(%rbp)	#, set
	je	.L53	#,
	.loc 1 865 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# set, tmp153
	movzwl	(%rax), %eax	# set_13(D)->code, D.29072
	cmpw	$49, %ax	#, D.29072
	jne	.L54	#,
.L53:
	.loc 1 867 0 is_stmt 1
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.66
	movq	-40(%rbp), %rax	# x, tmp154
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	movl	%eax, %eax	# D.29073, D.29079
	salq	$3, %rax	#, D.29079
	addq	%rax, %rdx	# D.29079, D.29080
	movq	-40(%rbp), %rax	# x, tmp155
	movzbl	2(%rax), %eax	# x_1(D)->mode, D.29077
	movzbl	%al, %eax	# D.29077, D.29074
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29079
	movq	%rax, (%rdx)	# D.29079, *_87
	.loc 1 868 0
	movq	reg_sign_bit_copies(%rip), %rdx	# reg_sign_bit_copies, reg_sign_bit_copies.67
	movq	-40(%rbp), %rax	# x, tmp157
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	movl	%eax, %eax	# D.29073, D.29081
	addq	%rdx, %rax	# reg_sign_bit_copies.67, D.29082
	movb	$1, (%rax)	#, *_94
	.loc 1 869 0
	jmp	.L51	#
.L54:
	.loc 1 874 0
	movq	-48(%rbp), %rax	# set, tmp158
	movq	%rax, %rdi	# tmp158,
	call	expand_field_assignment	#
	movq	%rax, -48(%rbp)	# tmp159, set
	.loc 1 879 0
	movq	-48(%rbp), %rax	# set, tmp160
	movq	8(%rax), %rax	# set_15->fld[0].rtx, D.29078
	cmpq	-40(%rbp), %rax	# x, D.29078
	je	.L55	#,
	.loc 1 880 0
	movq	-48(%rbp), %rax	# set, tmp161
	movq	8(%rax), %rax	# set_15->fld[0].rtx, D.29078
	movzwl	(%rax), %eax	# _17->code, D.29072
	cmpw	$63, %ax	#, D.29072
	jne	.L56	#,
	.loc 1 881 0
	movq	-48(%rbp), %rax	# set, tmp162
	movq	8(%rax), %rax	# set_15->fld[0].rtx, D.29078
	movzbl	2(%rax), %eax	# _19->mode, D.29077
	movzbl	%al, %eax	# D.29077, D.29074
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29077
	.loc 1 882 0
	movq	-48(%rbp), %rax	# set, tmp164
	movq	8(%rax), %rax	# set_15->fld[0].rtx, D.29078
	movq	8(%rax), %rax	# _23->fld[0].rtx, D.29078
	movzbl	2(%rax), %eax	# _24->mode, D.29077
	movzbl	%al, %eax	# D.29077, D.29074
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29077
	.loc 1 881 0
	cmpb	%al, %dl	# D.29077, D.29077
	jbe	.L56	#,
	.loc 1 883 0
	movq	-48(%rbp), %rax	# set, tmp166
	movq	8(%rax), %rax	# set_15->fld[0].rtx, D.29078
	movq	8(%rax), %rax	# _28->fld[0].rtx, D.29078
	cmpq	-40(%rbp), %rax	# x, D.29078
	jne	.L56	#,
.L55:
.LBB4:
	.loc 1 885 0
	movq	-48(%rbp), %rax	# set, tmp167
	movq	16(%rax), %rax	# set_15->fld[1].rtx, tmp168
	movq	%rax, -24(%rbp)	# tmp168, src
	.loc 1 909 0
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.68
	movq	-40(%rbp), %rax	# x, tmp169
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	movl	%eax, %eax	# D.29073, D.29079
	salq	$3, %rax	#, D.29079
	addq	%rdx, %rax	# reg_nonzero_bits.68, D.29080
	movq	(%rax), %rax	# *_47, D.29079
	cmpq	$-1, %rax	#, D.29079
	je	.L57	#,
	.loc 1 911 0
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.69
	.loc 1 910 0
	movq	-40(%rbp), %rax	# x, tmp170
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	.loc 1 911 0
	movl	%eax, %eax	# D.29073, D.29079
	salq	$3, %rax	#, D.29079
	leaq	(%rdx,%rax), %rbx	#, D.29080
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.70
	.loc 1 910 0
	movq	-40(%rbp), %rax	# x, tmp171
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	.loc 1 911 0
	movl	%eax, %eax	# D.29073, D.29079
	salq	$3, %rax	#, D.29079
	addq	%rdx, %rax	# reg_nonzero_bits.70, D.29080
	movq	(%rax), %r12	# *_58, D.29079
	movl	nonzero_bits_mode(%rip), %edx	# nonzero_bits_mode, nonzero_bits_mode.71
	movq	-24(%rbp), %rax	# src, tmp172
	movl	%edx, %esi	# nonzero_bits_mode.71,
	movq	%rax, %rdi	# tmp172,
	call	nonzero_bits	#
	orq	%r12, %rax	# D.29079, D.29079
	movq	%rax, (%rbx)	# D.29079, *_53
.L57:
	.loc 1 912 0
	movq	-40(%rbp), %rax	# x, tmp173
	movzbl	2(%rax), %eax	# x_1(D)->mode, D.29077
	movzbl	%al, %edx	# D.29077, D.29083
	movq	-48(%rbp), %rax	# set, tmp174
	movq	16(%rax), %rax	# set_15->fld[1].rtx, D.29078
	movl	%edx, %esi	# D.29083,
	movq	%rax, %rdi	# D.29078,
	call	num_sign_bit_copies	#
	movl	%eax, -28(%rbp)	# tmp175, num
	.loc 1 913 0
	movq	reg_sign_bit_copies(%rip), %rdx	# reg_sign_bit_copies, reg_sign_bit_copies.72
	movq	-40(%rbp), %rax	# x, tmp176
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	movl	%eax, %eax	# D.29073, D.29081
	addq	%rdx, %rax	# reg_sign_bit_copies.72, D.29082
	movzbl	(%rax), %eax	# *_70, D.29077
	testb	%al, %al	# D.29077
	je	.L58	#,
	.loc 1 914 0
	movq	reg_sign_bit_copies(%rip), %rdx	# reg_sign_bit_copies, reg_sign_bit_copies.73
	movq	-40(%rbp), %rax	# x, tmp177
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	movl	%eax, %eax	# D.29073, D.29081
	addq	%rdx, %rax	# reg_sign_bit_copies.73, D.29082
	movzbl	(%rax), %eax	# *_75, D.29077
	movzbl	%al, %eax	# D.29077, D.29073
	cmpl	-28(%rbp), %eax	# num, D.29073
	jbe	.L59	#,
.L58:
	.loc 1 915 0
	movq	reg_sign_bit_copies(%rip), %rdx	# reg_sign_bit_copies, reg_sign_bit_copies.74
	movq	-40(%rbp), %rax	# x, tmp178
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	movl	%eax, %eax	# D.29073, D.29081
	addq	%rax, %rdx	# D.29081, D.29082
	movl	-28(%rbp), %eax	# num, tmp179
	movb	%al, (%rdx)	# D.29077, *_81
.LBE4:
	.loc 1 884 0
	jmp	.L51	#
.L59:
	jmp	.L51	#
.L56:
	.loc 1 919 0
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.75
	movq	-40(%rbp), %rax	# x, tmp180
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	movl	%eax, %eax	# D.29073, D.29079
	salq	$3, %rax	#, D.29079
	addq	%rax, %rdx	# D.29079, D.29080
	movq	-40(%rbp), %rax	# x, tmp181
	movzbl	2(%rax), %eax	# x_1(D)->mode, D.29077
	movzbl	%al, %eax	# D.29077, D.29074
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29079
	movq	%rax, (%rdx)	# D.29079, *_34
	.loc 1 920 0
	movq	reg_sign_bit_copies(%rip), %rdx	# reg_sign_bit_copies, reg_sign_bit_copies.76
	movq	-40(%rbp), %rax	# x, tmp183
	movl	8(%rax), %eax	# x_1(D)->fld[0].rtuint, D.29073
	movl	%eax, %eax	# D.29073, D.29081
	addq	%rdx, %rax	# reg_sign_bit_copies.76, D.29082
	movb	$1, (%rax)	#, *_41
.L51:
	.loc 1 923 0
	addq	$48, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	set_nonzero_bits_and_sign_copies, .-set_nonzero_bits_and_sign_copies
	.type	can_combine_p, @function
can_combine_p:
.LFB8:
	.loc 1 942 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	addq	$-128, %rsp	#,
	movq	%rdi, -88(%rbp)	# insn, insn
	movq	%rsi, -96(%rbp)	# i3, i3
	movq	%rdx, -104(%rbp)	# pred, pred
	movq	%rcx, -112(%rbp)	# succ, succ
	movq	%r8, -120(%rbp)	# pdest, pdest
	movq	%r9, -128(%rbp)	# psrc, psrc
	.loc 1 944 0
	movq	$0, -56(%rbp)	#, set
	.loc 1 951 0
	cmpq	$0, -112(%rbp)	#, succ
	je	.L61	#,
	.loc 1 949 0
	movq	-88(%rbp), %rax	# insn, tmp203
	movq	%rax, %rdi	# tmp203,
	call	next_active_insn	#
	.loc 1 950 0
	cmpq	-112(%rbp), %rax	# succ, D.29085
	jne	.L62	#,
	.loc 1 950 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# succ, tmp204
	movq	%rax, %rdi	# tmp204,
	call	next_active_insn	#
	cmpq	-96(%rbp), %rax	# i3, D.29085
	jne	.L62	#,
	.loc 1 950 0 discriminator 3
	movl	$1, %eax	#, iftmp.78
	jmp	.L63	#
.L62:
	.loc 1 950 0 discriminator 2
	movl	$0, %eax	#, iftmp.78
.L63:
	jmp	.L64	#
.L61:
	.loc 1 951 0 is_stmt 1 discriminator 1
	movq	-88(%rbp), %rax	# insn, tmp205
	movq	%rax, %rdi	# tmp205,
	call	next_active_insn	#
	cmpq	-96(%rbp), %rax	# i3, D.29085
	sete	%al	#, D.29086
	movzbl	%al, %eax	# D.29086, iftmp.77
.L64:
	.loc 1 949 0
	movl	%eax, -64(%rbp)	# iftmp.77, all_adjacent
	.loc 1 968 0
	movq	-88(%rbp), %rax	# insn, tmp206
	movq	32(%rax), %rax	# insn_17(D)->fld[3].rtx, D.29085
	movzwl	(%rax), %eax	# _28->code, D.29087
	cmpw	$47, %ax	#, D.29087
	jne	.L65	#,
	.loc 1 969 0
	movq	-88(%rbp), %rax	# insn, tmp207
	movq	32(%rax), %rax	# insn_17(D)->fld[3].rtx, tmp208
	movq	%rax, -56(%rbp)	# tmp208, set
	jmp	.L66	#
.L65:
	.loc 1 970 0
	movq	-88(%rbp), %rax	# insn, tmp209
	movq	32(%rax), %rax	# insn_17(D)->fld[3].rtx, D.29085
	movzwl	(%rax), %eax	# _31->code, D.29087
	cmpw	$39, %ax	#, D.29087
	jne	.L67	#,
	.loc 1 971 0
	movq	-88(%rbp), %rax	# insn, tmp210
	movq	32(%rax), %rax	# insn_17(D)->fld[3].rtx, D.29085
	movq	8(%rax), %rax	# _33->fld[0].rtvec, D.29088
	movq	8(%rax), %rax	# _34->elem, D.29085
	movzwl	(%rax), %eax	# _35->code, D.29087
	cmpw	$47, %ax	#, D.29087
	jne	.L67	#,
	.loc 1 973 0
	movl	$0, -72(%rbp)	#, i
	jmp	.L68	#
.L82:
.LBB5:
	.loc 1 975 0
	movq	-88(%rbp), %rax	# insn, tmp211
	movq	32(%rax), %rax	# insn_17(D)->fld[3].rtx, D.29085
	movq	8(%rax), %rax	# _41->fld[0].rtvec, D.29088
	movl	-72(%rbp), %edx	# i, tmp213
	movslq	%edx, %rdx	# tmp213, tmp212
	movq	8(%rax,%rdx,8), %rax	# _42->elem, tmp214
	movq	%rax, -40(%rbp)	# tmp214, elt
	.loc 1 977 0
	movq	-40(%rbp), %rax	# elt, tmp215
	movzwl	(%rax), %eax	# elt_43->code, D.29087
	movzwl	%ax, %eax	# D.29087, D.29089
	cmpl	$48, %eax	#, D.29089
	je	.L70	#,
	cmpl	$49, %eax	#, D.29089
	je	.L120	#,
	cmpl	$47, %eax	#, D.29089
	je	.L72	#,
	jmp	.L119	#
.L70:
	.loc 1 995 0
	movq	-40(%rbp), %rax	# elt, tmp216
	movq	8(%rax), %rax	# elt_43->fld[0].rtx, D.29085
	movzwl	(%rax), %eax	# _46->code, D.29087
	cmpw	$61, %ax	#, D.29087
	jne	.L73	#,
	.loc 1 996 0
	movq	-96(%rbp), %rax	# i3, tmp217
	movq	32(%rax), %rax	# i3_20(D)->fld[3].rtx, D.29085
	movzwl	(%rax), %eax	# _48->code, D.29087
	cmpw	$39, %ax	#, D.29087
	jne	.L73	#,
.LBB6:
	.loc 1 998 0
	movq	-96(%rbp), %rax	# i3, tmp218
	movq	32(%rax), %rax	# i3_20(D)->fld[3].rtx, tmp219
	movq	%rax, -32(%rbp)	# tmp219, i3pat
	.loc 1 999 0
	movq	-32(%rbp), %rax	# i3pat, tmp220
	movq	8(%rax), %rax	# i3pat_50->fld[0].rtvec, D.29088
	movl	(%rax), %eax	# _51->num_elem, D.29084
	subl	$1, %eax	#, tmp221
	movl	%eax, -68(%rbp)	# tmp221, i
	.loc 1 1000 0
	movq	-40(%rbp), %rax	# elt, tmp222
	movq	8(%rax), %rax	# elt_43->fld[0].rtx, D.29085
	movl	8(%rax), %eax	# _54->fld[0].rtuint, tmp223
	movl	%eax, -60(%rbp)	# tmp223, regno
.L78:
.LBB7:
	.loc 1 1004 0
	movq	-32(%rbp), %rax	# i3pat, tmp224
	movq	8(%rax), %rax	# i3pat_50->fld[0].rtvec, D.29088
	movl	-68(%rbp), %edx	# i, tmp226
	movslq	%edx, %rdx	# tmp226, tmp225
	movq	8(%rax,%rdx,8), %rax	# _56->elem, tmp227
	movq	%rax, -24(%rbp)	# tmp227, i3elt
	.loc 1 1006 0
	movq	-24(%rbp), %rax	# i3elt, tmp228
	movzwl	(%rax), %eax	# i3elt_57->code, D.29087
	cmpw	$48, %ax	#, D.29087
	jne	.L74	#,
	.loc 1 1007 0
	movq	-24(%rbp), %rax	# i3elt, tmp229
	movq	8(%rax), %rax	# i3elt_57->fld[0].rtx, D.29085
	movzwl	(%rax), %eax	# _59->code, D.29087
	cmpw	$61, %ax	#, D.29087
	jne	.L74	#,
	.loc 1 1008 0
	movq	-24(%rbp), %rax	# i3elt, tmp230
	movq	8(%rax), %rax	# i3elt_57->fld[0].rtx, D.29085
	movl	8(%rax), %eax	# _61->fld[0].rtuint, D.29089
	cmpl	-60(%rbp), %eax	# regno, D.29089
	jne	.L75	#,
	.loc 1 1009 0
	movq	-88(%rbp), %rax	# insn, tmp231
	movq	16(%rax), %rcx	# insn_17(D)->fld[1].rtx, D.29085
	movq	-40(%rbp), %rax	# elt, tmp232
	movq	8(%rax), %rax	# elt_43->fld[0].rtx, D.29085
	movq	-96(%rbp), %rdx	# i3, tmp233
	movq	%rcx, %rsi	# D.29085,
	movq	%rax, %rdi	# D.29085,
	call	reg_set_between_p	#
	.loc 1 1008 0
	testl	%eax, %eax	# D.29084
	setne	%al	#, iftmp.79
	jmp	.L76	#
.L75:
	.loc 1 1008 0 is_stmt 0 discriminator 1
	cmpl	$52, -60(%rbp)	#, regno
	seta	%al	#, iftmp.79
.L76:
	.loc 1 1008 0 discriminator 2
	testb	%al, %al	# iftmp.79
	je	.L74	#,
	.loc 1 1012 0 is_stmt 1
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L74:
.LBE7:
	.loc 1 1014 0
	subl	$1, -68(%rbp)	#, i
	cmpl	$0, -68(%rbp)	#, i
	jns	.L78	#,
.L73:
.LBE6:
	.loc 1 1016 0
	jmp	.L79	#
.L72:
	.loc 1 1025 0
	movq	-40(%rbp), %rax	# elt, tmp234
	movq	8(%rax), %rdx	# elt_43->fld[0].rtx, D.29085
	movq	-88(%rbp), %rax	# insn, tmp235
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp235,
	call	find_reg_note	#
	testq	%rax, %rax	# D.29085
	je	.L80	#,
	.loc 1 1026 0
	movq	-40(%rbp), %rax	# elt, tmp236
	movq	%rax, %rdi	# tmp236,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29084
	jne	.L80	#,
	.loc 1 1027 0
	jmp	.L79	#
.L80:
	.loc 1 1031 0
	cmpq	$0, -56(%rbp)	#, set
	je	.L81	#,
	.loc 1 1032 0
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L81:
	.loc 1 1034 0
	movq	-40(%rbp), %rax	# elt, tmp237
	movq	%rax, -56(%rbp)	# tmp237, set
	.loc 1 1035 0
	jmp	.L79	#
.L119:
	.loc 1 1039 0
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L120:
	.loc 1 1020 0
	nop
.L79:
.LBE5:
	.loc 1 973 0
	addl	$1, -72(%rbp)	#, i
.L68:
	.loc 1 973 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# insn, tmp238
	movq	32(%rax), %rax	# insn_17(D)->fld[3].rtx, D.29085
	movq	8(%rax), %rax	# _38->fld[0].rtvec, D.29088
	movl	(%rax), %eax	# _39->num_elem, D.29084
	cmpl	-72(%rbp), %eax	# i, D.29084
	jg	.L82	#,
	.loc 1 1043 0 is_stmt 1
	cmpq	$0, -56(%rbp)	#, set
	je	.L83	#,
	.loc 1 1046 0
	movq	-56(%rbp), %rax	# set, tmp239
	movq	16(%rax), %rax	# set_4->fld[1].rtx, D.29085
	movzwl	(%rax), %eax	# _77->code, D.29087
	cmpw	$41, %ax	#, D.29087
	jne	.L84	#,
.L83:
	.loc 1 1047 0
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L84:
	.loc 1 1043 0
	jmp	.L66	#
.L67:
	.loc 1 1050 0
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L66:
	.loc 1 1052 0
	cmpq	$0, -56(%rbp)	#, set
	jne	.L85	#,
	.loc 1 1053 0
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L85:
	.loc 1 1055 0
	movq	-56(%rbp), %rax	# set, tmp240
	movq	%rax, %rdi	# tmp240,
	call	expand_field_assignment	#
	movq	%rax, -56(%rbp)	# tmp241, set
	.loc 1 1056 0
	movq	-56(%rbp), %rax	# set, tmp242
	movq	16(%rax), %rax	# set_82->fld[1].rtx, tmp243
	movq	%rax, -16(%rbp)	# tmp243, src
	movq	-56(%rbp), %rax	# set, tmp244
	movq	8(%rax), %rax	# set_82->fld[0].rtx, tmp245
	movq	%rax, -8(%rbp)	# tmp245, dest
	.loc 1 1059 0
	movq	global_rtl+16(%rip), %rax	# global_rtl, D.29085
	cmpq	-8(%rbp), %rax	# dest, D.29085
	je	.L86	#,
	.loc 1 1061 0
	movq	-8(%rbp), %rax	# dest, tmp246
	movzwl	(%rax), %eax	# dest_84->code, D.29087
	cmpw	$133, %ax	#, D.29087
	je	.L86	#,
	.loc 1 1061 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# dest, tmp247
	movzwl	(%rax), %eax	# dest_84->code, D.29087
	cmpw	$64, %ax	#, D.29087
	je	.L86	#,
	.loc 1 1064 0 is_stmt 1
	movq	-8(%rbp), %rdx	# dest, tmp248
	movq	-16(%rbp), %rax	# src, tmp249
	movq	%rdx, %rsi	# tmp248,
	movq	%rax, %rdi	# tmp249,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29084
	je	.L87	#,
	.loc 1 1064 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# insn, tmp250
	movl	$0, %edx	#,
	movl	$4, %esi	#,
	movq	%rax, %rdi	# tmp250,
	call	find_reg_note	#
	testq	%rax, %rax	# D.29085
	jne	.L86	#,
.L87:
	.loc 1 1066 0 is_stmt 1
	movq	-16(%rbp), %rax	# src, tmp251
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$41, %ax	#, D.29087
	je	.L86	#,
	.loc 1 1068 0
	movq	-16(%rbp), %rax	# src, tmp252
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$50, %ax	#, D.29087
	je	.L86	#,
	.loc 1 1070 0
	movq	-96(%rbp), %rax	# i3, tmp253
	movzwl	(%rax), %eax	# i3_20(D)->code, D.29087
	cmpw	$34, %ax	#, D.29087
	jne	.L88	#,
	.loc 1 1071 0
	movq	-8(%rbp), %rdx	# dest, tmp254
	movq	-96(%rbp), %rax	# i3, tmp255
	movl	$48, %esi	#,
	movq	%rax, %rdi	# tmp255,
	call	find_reg_fusage	#
	testl	%eax, %eax	# D.29084
	jne	.L86	#,
	.loc 1 1072 0
	movq	-8(%rbp), %rax	# dest, tmp256
	movzwl	(%rax), %eax	# dest_84->code, D.29087
	cmpw	$61, %ax	#, D.29087
	jne	.L88	#,
	.loc 1 1073 0
	movq	-8(%rbp), %rax	# dest, tmp257
	movl	8(%rax), %eax	# dest_84->fld[0].rtuint, D.29089
	cmpl	$52, %eax	#, D.29089
	ja	.L88	#,
	.loc 1 1074 0
	movq	-8(%rbp), %rax	# dest, tmp258
	movl	8(%rax), %eax	# dest_84->fld[0].rtuint, D.29089
	movl	%eax, %eax	# D.29089, tmp259
	movzbl	global_regs(%rax), %eax	# global_regs, D.29090
	testb	%al, %al	# D.29090
	jne	.L86	#,
.L88:
	.loc 1 1087 0
	cmpq	$0, -112(%rbp)	#, succ
	je	.L89	#,
	.loc 1 1087 0 is_stmt 0 discriminator 1
	cmpl	$0, -64(%rbp)	#, all_adjacent
	jne	.L89	#,
	.loc 1 1088 0 is_stmt 1
	movq	-96(%rbp), %rdx	# i3, tmp260
	movq	-112(%rbp), %rcx	# succ, tmp261
	movq	-8(%rbp), %rax	# dest, tmp262
	movq	%rcx, %rsi	# tmp261,
	movq	%rax, %rdi	# tmp262,
	call	reg_used_between_p	#
	testl	%eax, %eax	# D.29084
	jne	.L86	#,
.L89:
	.loc 1 1098 0
	cmpl	$0, -64(%rbp)	#, all_adjacent
	jne	.L90	#,
	.loc 1 1099 0
	movq	-16(%rbp), %rax	# src, tmp263
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$66, %ax	#, D.29087
	jne	.L91	#,
	.loc 1 1100 0
	movq	-16(%rbp), %rdx	# src, tmp264
	movq	-88(%rbp), %rax	# insn, tmp265
	movl	$3, %esi	#,
	movq	%rax, %rdi	# tmp265,
	call	find_reg_note	#
	testq	%rax, %rax	# D.29085
	jne	.L92	#,
.L91:
	.loc 1 1101 0
	movq	-88(%rbp), %rax	# insn, tmp266
	movl	8(%rax), %edx	# insn_17(D)->fld[0].rtint, D.29084
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.81
	cmpl	%eax, %edx	# max_uid_cuid.81, D.29084
	jle	.L93	#,
	.loc 1 1101 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# insn, tmp267
	movq	%rax, %rdi	# tmp267,
	call	insn_cuid	#
	jmp	.L94	#
.L93:
	.loc 1 1101 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.82
	movq	-88(%rbp), %rax	# insn, tmp268
	movl	8(%rax), %eax	# insn_17(D)->fld[0].rtint, D.29084
	cltq
	salq	$2, %rax	#, D.29091
	addq	%rdx, %rax	# uid_cuid.82, D.29092
	movl	(%rax), %eax	# *_108, iftmp.80
.L94:
	.loc 1 1101 0 discriminator 3
	movq	-16(%rbp), %rdx	# src, tmp269
	movl	%eax, %esi	# iftmp.80,
	movq	%rdx, %rdi	# tmp269,
	call	use_crosses_set_p	#
	testl	%eax, %eax	# D.29084
	jne	.L86	#,
.L92:
	.loc 1 1102 0 is_stmt 1
	movq	-16(%rbp), %rax	# src, tmp270
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$41, %ax	#, D.29087
	jne	.L95	#,
	.loc 1 1102 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# src, tmp271
	movzbl	3(%rax), %eax	# *src_83, D.29093
	andl	$8, %eax	#, D.29093
	testb	%al, %al	# D.29093
	jne	.L86	#,
.L95:
	.loc 1 1103 0 is_stmt 1
	movq	-16(%rbp), %rax	# src, tmp272
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$43, %ax	#, D.29087
	je	.L86	#,
.L90:
	.loc 1 1106 0
	movq	-8(%rbp), %rdx	# dest, tmp273
	movq	-96(%rbp), %rax	# i3, tmp274
	movl	$9, %esi	#,
	movq	%rax, %rdi	# tmp274,
	call	find_reg_note	#
	testq	%rax, %rax	# D.29085
	jne	.L86	#,
	.loc 1 1107 0
	cmpq	$0, -112(%rbp)	#, succ
	je	.L96	#,
	.loc 1 1107 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rdx	# dest, tmp275
	movq	-112(%rbp), %rax	# succ, tmp276
	movl	$9, %esi	#,
	movq	%rax, %rdi	# tmp276,
	call	find_reg_note	#
	testq	%rax, %rax	# D.29085
	jne	.L86	#,
.L96:
	.loc 1 1113 0 is_stmt 1
	movq	-88(%rbp), %rax	# insn, tmp277
	movl	8(%rax), %edx	# insn_17(D)->fld[0].rtint, D.29084
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.84
	cmpl	%eax, %edx	# max_uid_cuid.84, D.29084
	jle	.L97	#,
	.loc 1 1113 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# insn, tmp278
	movq	%rax, %rdi	# tmp278,
	call	insn_cuid	#
	jmp	.L98	#
.L97:
	.loc 1 1113 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.85
	movq	-88(%rbp), %rax	# insn, tmp279
	movl	8(%rax), %eax	# insn_17(D)->fld[0].rtint, D.29084
	cltq
	salq	$2, %rax	#, D.29091
	addq	%rdx, %rax	# uid_cuid.85, D.29092
	movl	(%rax), %eax	# *_124, iftmp.83
.L98:
	.loc 1 1113 0 discriminator 3
	movl	last_call_cuid(%rip), %edx	# last_call_cuid, last_call_cuid.86
	cmpl	%edx, %eax	# last_call_cuid.86, iftmp.83
	jge	.L99	#,
	.loc 1 1113 0 discriminator 1
	movq	-16(%rbp), %rax	# src, tmp280
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$67, %ax	#, D.29087
	je	.L99	#,
	movq	-16(%rbp), %rax	# src, tmp281
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$68, %ax	#, D.29087
	je	.L99	#,
	movq	-16(%rbp), %rax	# src, tmp282
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$54, %ax	#, D.29087
	je	.L99	#,
	movq	-16(%rbp), %rax	# src, tmp283
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$55, %ax	#, D.29087
	je	.L99	#,
	movq	-16(%rbp), %rax	# src, tmp284
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$58, %ax	#, D.29087
	je	.L99	#,
	movq	-16(%rbp), %rax	# src, tmp285
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$134, %ax	#, D.29087
	je	.L99	#,
	movq	-16(%rbp), %rax	# src, tmp286
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$56, %ax	#, D.29087
	je	.L99	#,
	movq	-16(%rbp), %rax	# src, tmp287
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$140, %ax	#, D.29087
	je	.L99	#,
.L86:
	.loc 1 1114 0 is_stmt 1
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L99:
	.loc 1 1117 0
	movq	-8(%rbp), %rax	# dest, tmp288
	movzwl	(%rax), %eax	# dest_84->code, D.29087
	cmpw	$61, %ax	#, D.29087
	jne	.L100	#,
	.loc 1 1128 0
	movq	-16(%rbp), %rax	# src, tmp289
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$61, %ax	#, D.29087
	jne	.L101	#,
	.loc 1 1129 0
	movq	-8(%rbp), %rax	# dest, tmp290
	movl	8(%rax), %eax	# dest_84->fld[0].rtuint, D.29089
	cmpl	$52, %eax	#, D.29089
	ja	.L102	#,
	.loc 1 1130 0
	movq	-8(%rbp), %rax	# dest, tmp291
	movzbl	2(%rax), %eax	# dest_84->mode, D.29093
	movzbl	%al, %edx	# D.29093, D.29094
	movq	-8(%rbp), %rax	# dest, tmp292
	movl	8(%rax), %eax	# dest_84->fld[0].rtuint, D.29089
	movl	%edx, %esi	# D.29094,
	movl	%eax, %edi	# D.29084,
	call	ix86_hard_regno_mode_ok	#
	testl	%eax, %eax	# D.29084
	je	.L103	#,
.L102:
	.loc 1 1138 0
	movq	-16(%rbp), %rax	# src, tmp293
	movl	8(%rax), %eax	# src_83->fld[0].rtuint, D.29089
	cmpl	$52, %eax	#, D.29089
	ja	.L101	#,
	.loc 1 1139 0
	movq	-16(%rbp), %rax	# src, tmp294
	movzbl	2(%rax), %eax	# src_83->mode, D.29093
	movzbl	%al, %edx	# D.29093, D.29094
	movq	-16(%rbp), %rax	# src, tmp295
	movl	8(%rax), %eax	# src_83->fld[0].rtuint, D.29089
	movl	%edx, %esi	# D.29094,
	movl	%eax, %edi	# D.29084,
	call	ix86_hard_regno_mode_ok	#
	testl	%eax, %eax	# D.29084
	jne	.L101	#,
.L103:
	.loc 1 1140 0
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L100:
	.loc 1 1142 0
	movq	-8(%rbp), %rax	# dest, tmp296
	movzwl	(%rax), %eax	# dest_84->code, D.29087
	cmpw	$69, %ax	#, D.29087
	je	.L101	#,
	.loc 1 1143 0
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L101:
	.loc 1 1148 0
	movq	-96(%rbp), %rax	# i3, tmp297
	movq	32(%rax), %rax	# i3_20(D)->fld[3].rtx, D.29085
	movzwl	(%rax), %eax	# _152->code, D.29087
	cmpw	$39, %ax	#, D.29087
	jne	.L104	#,
	.loc 1 1149 0
	movq	-96(%rbp), %rax	# i3, tmp298
	movq	32(%rax), %rax	# i3_20(D)->fld[3].rtx, D.29085
	movq	8(%rax), %rax	# _154->fld[0].rtvec, D.29088
	movl	(%rax), %eax	# _155->num_elem, D.29084
	subl	$1, %eax	#, tmp299
	movl	%eax, -72(%rbp)	# tmp299, i
	jmp	.L105	#
.L108:
	.loc 1 1150 0
	movq	-96(%rbp), %rax	# i3, tmp300
	movq	32(%rax), %rax	# i3_20(D)->fld[3].rtx, D.29085
	movq	8(%rax), %rax	# _158->fld[0].rtvec, D.29088
	movl	-72(%rbp), %edx	# i, tmp302
	movslq	%edx, %rdx	# tmp302, tmp301
	movq	8(%rax,%rdx,8), %rax	# _159->elem, D.29085
	movzwl	(%rax), %eax	# _160->code, D.29087
	cmpw	$49, %ax	#, D.29087
	jne	.L106	#,
	.loc 1 1151 0
	movq	-96(%rbp), %rax	# i3, tmp303
	movq	32(%rax), %rax	# i3_20(D)->fld[3].rtx, D.29085
	movq	8(%rax), %rax	# _162->fld[0].rtvec, D.29088
	movl	-72(%rbp), %edx	# i, tmp305
	movslq	%edx, %rdx	# tmp305, tmp304
	movq	8(%rax,%rdx,8), %rax	# _163->elem, D.29085
	movq	8(%rax), %rax	# _164->fld[0].rtx, D.29085
	movq	-16(%rbp), %rdx	# src, tmp306
	movq	%rdx, %rsi	# tmp306,
	movq	%rax, %rdi	# D.29085,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29084
	jne	.L107	#,
	.loc 1 1153 0
	movq	-96(%rbp), %rax	# i3, tmp307
	movq	32(%rax), %rax	# i3_20(D)->fld[3].rtx, D.29085
	movq	8(%rax), %rax	# _167->fld[0].rtvec, D.29088
	movl	-72(%rbp), %edx	# i, tmp309
	movslq	%edx, %rdx	# tmp309, tmp308
	movq	8(%rax,%rdx,8), %rax	# _168->elem, D.29085
	movq	8(%rax), %rax	# _169->fld[0].rtx, D.29085
	movq	-8(%rbp), %rdx	# dest, tmp310
	movq	%rdx, %rsi	# tmp310,
	movq	%rax, %rdi	# D.29085,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29084
	je	.L106	#,
.L107:
	.loc 1 1154 0
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L106:
	.loc 1 1149 0
	subl	$1, -72(%rbp)	#, i
.L105:
	.loc 1 1149 0 is_stmt 0 discriminator 1
	cmpl	$0, -72(%rbp)	#, i
	jns	.L108	#,
.L104:
	.loc 1 1159 0 is_stmt 1
	movq	-16(%rbp), %rax	# src, tmp311
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$41, %ax	#, D.29087
	je	.L109	#,
	.loc 1 1159 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# src, tmp312
	movq	%rax, %rdi	# tmp312,
	call	volatile_refs_p	#
	testl	%eax, %eax	# D.29084
	je	.L110	#,
.L109:
	.loc 1 1162 0 is_stmt 1
	cmpq	$0, -112(%rbp)	#, succ
	je	.L111	#,
	.loc 1 1162 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# succ, tmp313
	movq	32(%rax), %rax	# succ_16(D)->fld[3].rtx, D.29085
	movq	%rax, %rdi	# D.29085,
	call	volatile_refs_p	#
	testl	%eax, %eax	# D.29084
	je	.L111	#,
	.loc 1 1163 0 is_stmt 1
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L111:
	.loc 1 1165 0
	movq	-88(%rbp), %rax	# insn, tmp314
	movq	24(%rax), %rax	# insn_17(D)->fld[2].rtx, tmp315
	movq	%rax, -48(%rbp)	# tmp315, p
	jmp	.L112	#
.L114:
	.loc 1 1166 0
	movq	-48(%rbp), %rax	# p, tmp316
	movzwl	(%rax), %eax	# p_6->code, D.29087
	movzwl	%ax, %eax	# D.29087, D.29084
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29090
	cmpb	$105, %al	#, D.29090
	jne	.L113	#,
	.loc 1 1166 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# p, tmp318
	cmpq	-112(%rbp), %rax	# succ, tmp318
	je	.L113	#,
	movq	-48(%rbp), %rax	# p, tmp319
	movq	32(%rax), %rax	# p_6->fld[3].rtx, D.29085
	movq	%rax, %rdi	# D.29085,
	call	volatile_refs_p	#
	testl	%eax, %eax	# D.29084
	je	.L113	#,
	.loc 1 1167 0 is_stmt 1
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L113:
	.loc 1 1165 0
	movq	-48(%rbp), %rax	# p, tmp320
	movq	24(%rax), %rax	# p_6->fld[2].rtx, tmp321
	movq	%rax, -48(%rbp)	# tmp321, p
.L112:
	.loc 1 1165 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# p, tmp322
	cmpq	-96(%rbp), %rax	# i3, tmp322
	jne	.L114	#,
.L110:
	.loc 1 1173 0 is_stmt 1
	movq	-16(%rbp), %rax	# src, tmp323
	movzwl	(%rax), %eax	# src_83->code, D.29087
	cmpw	$41, %ax	#, D.29087
	jne	.L115	#,
	.loc 1 1174 0
	movq	-8(%rbp), %rax	# dest, tmp324
	movzwl	(%rax), %eax	# dest_84->code, D.29087
	cmpw	$61, %ax	#, D.29087
	jne	.L115	#,
	.loc 1 1174 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# dest, tmp325
	movl	8(%rax), %eax	# dest_84->fld[0].rtuint, D.29089
	cmpl	$52, %eax	#, D.29089
	ja	.L115	#,
	.loc 1 1175 0 is_stmt 1
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L115:
	.loc 1 1180 0
	movq	-88(%rbp), %rax	# insn, tmp326
	movq	24(%rax), %rax	# insn_17(D)->fld[2].rtx, tmp327
	movq	%rax, -48(%rbp)	# tmp327, p
	jmp	.L116	#
.L118:
	.loc 1 1181 0
	movq	-48(%rbp), %rax	# p, tmp328
	movzwl	(%rax), %eax	# p_7->code, D.29087
	movzwl	%ax, %eax	# D.29087, D.29084
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29090
	cmpb	$105, %al	#, D.29090
	jne	.L117	#,
	.loc 1 1181 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# p, tmp330
	cmpq	-112(%rbp), %rax	# succ, tmp330
	je	.L117	#,
	movq	-48(%rbp), %rax	# p, tmp331
	movq	32(%rax), %rax	# p_7->fld[3].rtx, D.29085
	movq	%rax, %rdi	# D.29085,
	call	volatile_insn_p	#
	testl	%eax, %eax	# D.29084
	je	.L117	#,
	.loc 1 1182 0 is_stmt 1
	movl	$0, %eax	#, D.29084
	jmp	.L77	#
.L117:
	.loc 1 1180 0
	movq	-48(%rbp), %rax	# p, tmp332
	movq	24(%rax), %rax	# p_7->fld[2].rtx, tmp333
	movq	%rax, -48(%rbp)	# tmp333, p
.L116:
	.loc 1 1180 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# p, tmp334
	cmpq	-96(%rbp), %rax	# i3, tmp334
	jne	.L118	#,
	.loc 1 1218 0 is_stmt 1
	movq	-120(%rbp), %rax	# pdest, tmp335
	movq	-8(%rbp), %rdx	# dest, tmp336
	movq	%rdx, (%rax)	# tmp336, *pdest_199(D)
	.loc 1 1219 0
	movq	-128(%rbp), %rax	# psrc, tmp337
	movq	-16(%rbp), %rdx	# src, tmp338
	movq	%rdx, (%rax)	# tmp338, *psrc_200(D)
	.loc 1 1221 0
	movl	$1, %eax	#, D.29084
.L77:
	.loc 1 1222 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	can_combine_p, .-can_combine_p
	.type	sets_function_arg_p, @function
sets_function_arg_p:
.LFB9:
	.loc 1 1230 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# pat, pat
	.loc 1 1234 0
	movq	-24(%rbp), %rax	# pat, tmp77
	movzwl	(%rax), %eax	# pat_5(D)->code, D.29096
	movzwl	%ax, %eax	# D.29096, D.29097
	cmpl	$39, %eax	#, D.29097
	je	.L123	#,
	cmpl	$47, %eax	#, D.29097
	je	.L124	#,
	cmpl	$32, %eax	#, D.29097
	je	.L125	#,
	.loc 1 1258 0
	jmp	.L129	#
.L125:
	.loc 1 1237 0
	movq	-24(%rbp), %rax	# pat, tmp78
	movq	32(%rax), %rax	# pat_5(D)->fld[3].rtx, D.29098
	movq	%rax, %rdi	# D.29098,
	call	sets_function_arg_p	#
	jmp	.L126	#
.L123:
	.loc 1 1240 0
	movq	-24(%rbp), %rax	# pat, tmp79
	movq	8(%rax), %rax	# pat_5(D)->fld[0].rtvec, D.29099
	movl	(%rax), %eax	# _10->num_elem, tmp80
	movl	%eax, -12(%rbp)	# tmp80, i
	jmp	.L127	#
.L128:
	.loc 1 1241 0
	movq	-24(%rbp), %rax	# pat, tmp81
	movq	8(%rax), %rax	# pat_5(D)->fld[0].rtvec, D.29099
	movl	-12(%rbp), %edx	# i, tmp83
	movslq	%edx, %rdx	# tmp83, tmp82
	movq	8(%rax,%rdx,8), %rax	# _13->elem, D.29098
	movq	%rax, %rdi	# D.29098,
	call	sets_function_arg_p	#
	testl	%eax, %eax	# D.29095
	je	.L127	#,
	.loc 1 1242 0
	movl	$1, %eax	#, D.29095
	jmp	.L126	#
.L127:
	.loc 1 1240 0 discriminator 1
	subl	$1, -12(%rbp)	#, i
	cmpl	$0, -12(%rbp)	#, i
	jns	.L128	#,
	.loc 1 1244 0
	jmp	.L129	#
.L124:
	.loc 1 1247 0
	movq	-24(%rbp), %rax	# pat, tmp84
	movq	8(%rax), %rax	# pat_5(D)->fld[0].rtx, tmp85
	movq	%rax, -8(%rbp)	# tmp85, inner_dest
	.loc 1 1248 0
	jmp	.L130	#
.L131:
	.loc 1 1251 0
	movq	-8(%rbp), %rax	# inner_dest, tmp86
	movq	8(%rax), %rax	# inner_dest_2->fld[0].rtx, tmp87
	movq	%rax, -8(%rbp)	# tmp87, inner_dest
.L130:
	.loc 1 1248 0 discriminator 1
	movq	-8(%rbp), %rax	# inner_dest, tmp88
	movzwl	(%rax), %eax	# inner_dest_2->code, D.29096
	cmpw	$64, %ax	#, D.29096
	je	.L131	#,
	.loc 1 1249 0
	movq	-8(%rbp), %rax	# inner_dest, tmp89
	movzwl	(%rax), %eax	# inner_dest_2->code, D.29096
	cmpw	$63, %ax	#, D.29096
	je	.L131	#,
	.loc 1 1250 0
	movq	-8(%rbp), %rax	# inner_dest, tmp90
	movzwl	(%rax), %eax	# inner_dest_2->code, D.29096
	cmpw	$133, %ax	#, D.29096
	je	.L131	#,
	.loc 1 1253 0
	movq	-8(%rbp), %rax	# inner_dest, tmp91
	movzwl	(%rax), %eax	# inner_dest_2->code, D.29096
	.loc 1 1255 0
	cmpw	$61, %ax	#, D.29096
	jne	.L132	#,
	.loc 1 1254 0
	movq	-8(%rbp), %rax	# inner_dest, tmp92
	movl	8(%rax), %eax	# inner_dest_2->fld[0].rtuint, D.29097
	cmpl	$52, %eax	#, D.29097
	ja	.L132	#,
	.loc 1 1255 0
	movq	-8(%rbp), %rax	# inner_dest, tmp93
	movl	8(%rax), %eax	# inner_dest_2->fld[0].rtuint, D.29097
	movl	%eax, %edi	# D.29095,
	call	ix86_function_arg_regno_p	#
	testb	%al, %al	# D.29100
	je	.L132	#,
	.loc 1 1255 0 is_stmt 0 discriminator 2
	movl	$1, %eax	#, iftmp.87
	jmp	.L133	#
.L132:
	.loc 1 1255 0 discriminator 1
	movl	$0, %eax	#, iftmp.87
.L133:
	.loc 1 1253 0 is_stmt 1
	jmp	.L126	#
.L129:
	.loc 1 1261 0
	movl	$0, %eax	#, D.29095
.L126:
	.loc 1 1262 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	sets_function_arg_p, .-sets_function_arg_p
	.type	combinable_i3pat, @function
combinable_i3pat:
.LFB10:
	.loc 1 1309 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$96, %rsp	#,
	movq	%rdi, -56(%rbp)	# i3, i3
	movq	%rsi, -64(%rbp)	# loc, loc
	movq	%rdx, -72(%rbp)	# i2dest, i2dest
	movq	%rcx, -80(%rbp)	# i1dest, i1dest
	movl	%r8d, -84(%rbp)	# i1_not_in_src, i1_not_in_src
	movq	%r9, -96(%rbp)	# pi3dest_killed, pi3dest_killed
	.loc 1 1310 0
	movq	-64(%rbp), %rax	# loc, tmp91
	movq	(%rax), %rax	# *loc_4(D), tmp92
	movq	%rax, -32(%rbp)	# tmp92, x
	.loc 1 1312 0
	movq	-32(%rbp), %rax	# x, tmp93
	movzwl	(%rax), %eax	# x_5->code, D.29102
	cmpw	$47, %ax	#, D.29102
	jne	.L135	#,
.LBB8:
	.loc 1 1314 0
	movq	-32(%rbp), %rax	# x, tmp94
	movq	%rax, %rdi	# tmp94,
	call	expand_field_assignment	#
	movq	%rax, -24(%rbp)	# tmp95, set
	.loc 1 1315 0
	movq	-24(%rbp), %rax	# set, tmp96
	movq	8(%rax), %rax	# set_7->fld[0].rtx, tmp97
	movq	%rax, -16(%rbp)	# tmp97, dest
	.loc 1 1316 0
	movq	-24(%rbp), %rax	# set, tmp98
	movq	16(%rax), %rax	# set_7->fld[1].rtx, tmp99
	movq	%rax, -8(%rbp)	# tmp99, src
	.loc 1 1317 0
	movq	-16(%rbp), %rax	# dest, tmp100
	movq	%rax, -40(%rbp)	# tmp100, inner_dest
	.loc 1 1323 0
	movq	-24(%rbp), %rdx	# set, tmp101
	movq	-64(%rbp), %rax	# loc, tmp102
	movq	%rdx, %rsi	# tmp101,
	movq	%rax, %rdi	# tmp102,
	call	do_SUBST	#
	.loc 1 1325 0
	jmp	.L136	#
.L137:
	.loc 1 1328 0
	movq	-40(%rbp), %rax	# inner_dest, tmp103
	movq	8(%rax), %rax	# inner_dest_1->fld[0].rtx, tmp104
	movq	%rax, -40(%rbp)	# tmp104, inner_dest
.L136:
	.loc 1 1325 0 discriminator 1
	movq	-40(%rbp), %rax	# inner_dest, tmp105
	movzwl	(%rax), %eax	# inner_dest_1->code, D.29102
	cmpw	$64, %ax	#, D.29102
	je	.L137	#,
	.loc 1 1326 0
	movq	-40(%rbp), %rax	# inner_dest, tmp106
	movzwl	(%rax), %eax	# inner_dest_1->code, D.29102
	cmpw	$63, %ax	#, D.29102
	je	.L137	#,
	.loc 1 1327 0
	movq	-40(%rbp), %rax	# inner_dest, tmp107
	movzwl	(%rax), %eax	# inner_dest_1->code, D.29102
	cmpw	$133, %ax	#, D.29102
	je	.L137	#,
	.loc 1 1356 0
	movq	-40(%rbp), %rax	# inner_dest, tmp108
	cmpq	-16(%rbp), %rax	# dest, tmp108
	je	.L138	#,
	.loc 1 1357 0
	movq	-40(%rbp), %rdx	# inner_dest, tmp109
	movq	-72(%rbp), %rax	# i2dest, tmp110
	movq	%rdx, %rsi	# tmp109,
	movq	%rax, %rdi	# tmp110,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29101
	jne	.L139	#,
	.loc 1 1358 0
	cmpq	$0, -80(%rbp)	#, i1dest
	je	.L138	#,
	.loc 1 1358 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rdx	# inner_dest, tmp111
	movq	-80(%rbp), %rax	# i1dest, tmp112
	movq	%rdx, %rsi	# tmp111,
	movq	%rax, %rdi	# tmp112,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29101
	jne	.L139	#,
.L138:
	.loc 1 1370 0 is_stmt 1
	movq	-40(%rbp), %rax	# inner_dest, tmp113
	movzwl	(%rax), %eax	# inner_dest_1->code, D.29102
	cmpw	$61, %ax	#, D.29102
	jne	.L140	#,
	.loc 1 1371 0
	movq	-40(%rbp), %rax	# inner_dest, tmp114
	movl	8(%rax), %eax	# inner_dest_1->fld[0].rtuint, D.29103
	cmpl	$52, %eax	#, D.29103
	ja	.L140	#,
	.loc 1 1372 0
	movq	-40(%rbp), %rax	# inner_dest, tmp115
	movzbl	2(%rax), %eax	# inner_dest_1->mode, D.29104
	movzbl	%al, %edx	# D.29104, D.29105
	movq	-40(%rbp), %rax	# inner_dest, tmp116
	movl	8(%rax), %eax	# inner_dest_1->fld[0].rtuint, D.29103
	movl	%edx, %esi	# D.29105,
	movl	%eax, %edi	# D.29101,
	call	ix86_hard_regno_mode_ok	#
	testl	%eax, %eax	# D.29101
	je	.L139	#,
.L140:
	.loc 1 1374 0
	cmpl	$0, -84(%rbp)	#, i1_not_in_src
	je	.L141	#,
	.loc 1 1374 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rdx	# src, tmp117
	movq	-80(%rbp), %rax	# i1dest, tmp118
	movq	%rdx, %rsi	# tmp117,
	movq	%rax, %rdi	# tmp118,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29101
	je	.L141	#,
.L139:
	.loc 1 1375 0 is_stmt 1
	movl	$0, %eax	#, D.29101
	jmp	.L142	#
.L141:
	.loc 1 1382 0
	cmpq	$0, -96(%rbp)	#, pi3dest_killed
	je	.L143	#,
	.loc 1 1382 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# dest, tmp119
	movzwl	(%rax), %eax	# dest_8->code, D.29102
	cmpw	$61, %ax	#, D.29102
	jne	.L143	#,
	.loc 1 1383 0 is_stmt 1
	movq	-56(%rbp), %rax	# i3, tmp120
	movq	32(%rax), %rdx	# i3_29(D)->fld[3].rtx, D.29106
	movq	-16(%rbp), %rax	# dest, tmp121
	movq	%rdx, %rsi	# D.29106,
	movq	%rax, %rdi	# tmp121,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29101
	je	.L143	#,
	.loc 1 1384 0
	movq	-16(%rbp), %rax	# dest, tmp122
	movl	8(%rax), %eax	# dest_8->fld[0].rtuint, D.29103
	cmpl	$20, %eax	#, D.29103
	je	.L143	#,
	.loc 1 1386 0
	movq	-16(%rbp), %rax	# dest, tmp123
	movl	8(%rax), %eax	# dest_8->fld[0].rtuint, D.29103
	cmpl	$6, %eax	#, D.29103
	je	.L143	#,
	.loc 1 1389 0
	movq	-16(%rbp), %rax	# dest, tmp124
	movl	8(%rax), %eax	# dest_8->fld[0].rtuint, D.29103
	cmpl	$16, %eax	#, D.29103
	jne	.L144	#,
	.loc 1 1390 0
	movq	-16(%rbp), %rax	# dest, tmp125
	movl	8(%rax), %eax	# dest_8->fld[0].rtuint, D.29103
	movl	%eax, %eax	# D.29103, tmp126
	movzbl	fixed_regs(%rax), %eax	# fixed_regs, D.29107
	testb	%al, %al	# D.29107
	jne	.L143	#,
.L144:
	.loc 1 1392 0
	movq	-16(%rbp), %rax	# dest, tmp127
	movl	8(%rax), %eax	# dest_8->fld[0].rtuint, D.29103
	cmpl	$7, %eax	#, D.29103
	je	.L143	#,
	.loc 1 1394 0
	movq	-96(%rbp), %rax	# pi3dest_killed, tmp128
	movq	(%rax), %rax	# *pi3dest_killed_27(D), D.29106
	testq	%rax, %rax	# D.29106
	je	.L145	#,
	.loc 1 1395 0
	movl	$0, %eax	#, D.29101
	jmp	.L142	#
.L145:
	.loc 1 1397 0
	movq	-96(%rbp), %rax	# pi3dest_killed, tmp129
	movq	-16(%rbp), %rdx	# dest, tmp130
	movq	%rdx, (%rax)	# tmp130, *pi3dest_killed_27(D)
.LBE8:
	jmp	.L146	#
.L143:
	jmp	.L146	#
.L135:
	.loc 1 1401 0
	movq	-32(%rbp), %rax	# x, tmp131
	movzwl	(%rax), %eax	# x_5->code, D.29102
	cmpw	$39, %ax	#, D.29102
	jne	.L146	#,
.LBB9:
	.loc 1 1405 0
	movl	$0, -44(%rbp)	#, i
	jmp	.L147	#
.L149:
	.loc 1 1406 0
	movq	-32(%rbp), %rax	# x, tmp132
	movq	8(%rax), %rax	# x_5->fld[0].rtvec, D.29108
	movl	-44(%rbp), %edx	# i, tmp134
	movslq	%edx, %rdx	# tmp134, tmp133
	salq	$3, %rdx	#, tmp135
	addq	%rdx, %rax	# tmp135, tmp136
	leaq	8(%rax), %rsi	#, D.29109
	movq	-96(%rbp), %r8	# pi3dest_killed, tmp137
	movl	-84(%rbp), %edi	# i1_not_in_src, tmp138
	movq	-80(%rbp), %rcx	# i1dest, tmp139
	movq	-72(%rbp), %rdx	# i2dest, tmp140
	movq	-56(%rbp), %rax	# i3, tmp141
	movq	%r8, %r9	# tmp137,
	movl	%edi, %r8d	# tmp138,
	movq	%rax, %rdi	# tmp141,
	call	combinable_i3pat	#
	testl	%eax, %eax	# D.29101
	jne	.L148	#,
	.loc 1 1408 0
	movl	$0, %eax	#, D.29101
	jmp	.L142	#
.L148:
	.loc 1 1405 0
	addl	$1, -44(%rbp)	#, i
.L147:
	.loc 1 1405 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# x, tmp142
	movq	8(%rax), %rax	# x_5->fld[0].rtvec, D.29108
	movl	(%rax), %eax	# _44->num_elem, D.29101
	cmpl	-44(%rbp), %eax	# i, D.29101
	jg	.L149	#,
.L146:
.LBE9:
	.loc 1 1411 0 is_stmt 1
	movl	$1, %eax	#, D.29101
.L142:
	.loc 1 1412 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	combinable_i3pat, .-combinable_i3pat
	.type	contains_muldiv, @function
contains_muldiv:
.LFB11:
	.loc 1 1420 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# x, x
	.loc 1 1421 0
	movq	-8(%rbp), %rax	# x, tmp80
	movzwl	(%rax), %eax	# x_4(D)->code, D.29111
	movzwl	%ax, %eax	# D.29111, D.29112
	cmpl	$78, %eax	#, D.29112
	je	.L152	#,
	cmpl	$78, %eax	#, D.29112
	jb	.L151	#,
	cmpl	$82, %eax	#, D.29112
	ja	.L151	#,
	.loc 1 1424 0
	movl	$1, %eax	#, D.29110
	jmp	.L154	#
.L152:
	.loc 1 1427 0
	movq	-8(%rbp), %rax	# x, tmp81
	movq	16(%rax), %rax	# x_4(D)->fld[1].rtx, D.29113
	movzwl	(%rax), %eax	# _8->code, D.29111
	cmpw	$54, %ax	#, D.29111
	jne	.L155	#,
	.loc 1 1428 0 discriminator 2
	movq	-8(%rbp), %rax	# x, tmp82
	movq	16(%rax), %rax	# x_4(D)->fld[1].rtx, D.29113
	movq	8(%rax), %rax	# _10->fld[0].rtwint, D.29114
	movq	%rax, %rdi	# D.29115,
	call	exact_log2_wide	#
	.loc 1 1427 0 discriminator 2
	testl	%eax, %eax	# D.29110
	jns	.L156	#,
.L155:
	.loc 1 1427 0 is_stmt 0 discriminator 1
	movl	$1, %eax	#, iftmp.88
	jmp	.L157	#
.L156:
	.loc 1 1427 0 discriminator 3
	movl	$0, %eax	#, iftmp.88
.L157:
	.loc 1 1427 0 discriminator 4
	jmp	.L154	#
.L151:
	.loc 1 1430 0 is_stmt 1
	movq	-8(%rbp), %rax	# x, tmp83
	movzwl	(%rax), %eax	# x_4(D)->code, D.29111
	movzwl	%ax, %eax	# D.29111, D.29110
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29116
	movsbl	%al, %eax	# D.29116, D.29110
	cmpl	$50, %eax	#, D.29110
	je	.L159	#,
	cmpl	$50, %eax	#, D.29110
	jg	.L160	#,
	cmpl	$49, %eax	#, D.29110
	je	.L161	#,
	jmp	.L158	#
.L160:
	cmpl	$60, %eax	#, D.29110
	je	.L159	#,
	cmpl	$99, %eax	#, D.29110
	jne	.L158	#,
.L159:
	.loc 1 1433 0
	movq	-8(%rbp), %rax	# x, tmp85
	movq	8(%rax), %rax	# x_4(D)->fld[0].rtx, D.29113
	movq	%rax, %rdi	# D.29113,
	call	contains_muldiv	#
	.loc 1 1434 0
	testl	%eax, %eax	# D.29110
	jne	.L162	#,
	.loc 1 1434 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# x, tmp86
	movq	16(%rax), %rax	# x_4(D)->fld[1].rtx, D.29113
	movq	%rax, %rdi	# D.29113,
	call	contains_muldiv	#
	testl	%eax, %eax	# D.29110
	je	.L163	#,
.L162:
	.loc 1 1434 0 discriminator 1
	movl	$1, %eax	#, iftmp.89
	jmp	.L164	#
.L163:
	.loc 1 1434 0 discriminator 3
	movl	$0, %eax	#, iftmp.89
.L164:
	.loc 1 1433 0 is_stmt 1
	jmp	.L154	#
.L161:
	.loc 1 1437 0
	movq	-8(%rbp), %rax	# x, tmp87
	movq	8(%rax), %rax	# x_4(D)->fld[0].rtx, D.29113
	movq	%rax, %rdi	# D.29113,
	call	contains_muldiv	#
	jmp	.L154	#
.L158:
	.loc 1 1440 0
	movl	$0, %eax	#, D.29110
.L154:
	.loc 1 1443 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	contains_muldiv, .-contains_muldiv
	.type	cant_combine_insn_p, @function
cant_combine_insn_p:
.LFB12:
	.loc 1 1452 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# insn, insn
	.loc 1 1459 0
	movq	-40(%rbp), %rax	# insn, tmp82
	movzwl	(%rax), %eax	# insn_6(D)->code, D.29119
	movzwl	%ax, %eax	# D.29119, D.29118
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29120
	cmpb	$105, %al	#, D.29120
	je	.L166	#,
	.loc 1 1460 0
	movl	$1, %eax	#, D.29118
	jmp	.L167	#
.L166:
	.loc 1 1469 0
	movq	-40(%rbp), %rax	# insn, tmp84
	movzwl	(%rax), %eax	# insn_6(D)->code, D.29119
	movzwl	%ax, %eax	# D.29119, D.29118
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29120
	cmpb	$105, %al	#, D.29120
	jne	.L168	#,
	.loc 1 1469 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# insn, tmp86
	movq	32(%rax), %rax	# insn_6(D)->fld[3].rtx, D.29121
	movzwl	(%rax), %eax	# _14->code, D.29119
	cmpw	$47, %ax	#, D.29119
	jne	.L169	#,
	.loc 1 1469 0 discriminator 3
	movq	-40(%rbp), %rax	# insn, tmp87
	movq	32(%rax), %rax	# insn_6(D)->fld[3].rtx, iftmp.91
	jmp	.L171	#
.L169:
	.loc 1 1469 0 discriminator 4
	movq	-40(%rbp), %rax	# insn, tmp88
	movq	32(%rax), %rdx	# insn_6(D)->fld[3].rtx, D.29121
	movq	-40(%rbp), %rax	# insn, tmp89
	movq	%rdx, %rsi	# D.29121,
	movq	%rax, %rdi	# tmp89,
	call	single_set_2	#
	jmp	.L171	#
.L168:
	.loc 1 1469 0 discriminator 2
	movl	$0, %eax	#, iftmp.90
.L171:
	.loc 1 1469 0 discriminator 5
	movq	%rax, -8(%rbp)	# iftmp.90, set
	.loc 1 1470 0 is_stmt 1 discriminator 5
	cmpq	$0, -8(%rbp)	#, set
	jne	.L172	#,
	.loc 1 1471 0
	movl	$0, %eax	#, D.29118
	jmp	.L167	#
.L172:
	.loc 1 1472 0
	movq	-8(%rbp), %rax	# set, tmp90
	movq	16(%rax), %rax	# set_21->fld[1].rtx, tmp91
	movq	%rax, -24(%rbp)	# tmp91, src
	.loc 1 1473 0
	movq	-8(%rbp), %rax	# set, tmp92
	movq	8(%rax), %rax	# set_21->fld[0].rtx, tmp93
	movq	%rax, -16(%rbp)	# tmp93, dest
	.loc 1 1474 0
	movq	-24(%rbp), %rax	# src, tmp94
	movzwl	(%rax), %eax	# src_23->code, D.29119
	cmpw	$63, %ax	#, D.29119
	jne	.L173	#,
	.loc 1 1475 0
	movq	-24(%rbp), %rax	# src, tmp95
	movq	8(%rax), %rax	# src_23->fld[0].rtx, tmp96
	movq	%rax, -24(%rbp)	# tmp96, src
.L173:
	.loc 1 1476 0
	movq	-16(%rbp), %rax	# dest, tmp97
	movzwl	(%rax), %eax	# dest_24->code, D.29119
	cmpw	$63, %ax	#, D.29119
	jne	.L174	#,
	.loc 1 1477 0
	movq	-16(%rbp), %rax	# dest, tmp98
	movq	8(%rax), %rax	# dest_24->fld[0].rtx, tmp99
	movq	%rax, -16(%rbp)	# tmp99, dest
.L174:
	.loc 1 1478 0
	movq	-24(%rbp), %rax	# src, tmp100
	movzwl	(%rax), %eax	# src_1->code, D.29119
	cmpw	$61, %ax	#, D.29119
	jne	.L175	#,
	.loc 1 1478 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# dest, tmp101
	movzwl	(%rax), %eax	# dest_2->code, D.29119
	cmpw	$61, %ax	#, D.29119
	jne	.L175	#,
	.loc 1 1479 0 is_stmt 1
	movq	-24(%rbp), %rax	# src, tmp102
	movl	8(%rax), %eax	# src_1->fld[0].rtuint, D.29122
	cmpl	$52, %eax	#, D.29122
	ja	.L176	#,
	.loc 1 1480 0
	movq	-24(%rbp), %rax	# src, tmp103
	movl	8(%rax), %eax	# src_1->fld[0].rtuint, D.29122
	movl	%eax, %eax	# D.29122, tmp104
	movzbl	fixed_regs(%rax), %eax	# fixed_regs, D.29120
	testb	%al, %al	# D.29120
	je	.L177	#,
.L176:
	.loc 1 1481 0
	movq	-16(%rbp), %rax	# dest, tmp105
	movl	8(%rax), %eax	# dest_2->fld[0].rtuint, D.29122
	cmpl	$52, %eax	#, D.29122
	ja	.L175	#,
	.loc 1 1482 0
	movq	-16(%rbp), %rax	# dest, tmp106
	movl	8(%rax), %eax	# dest_2->fld[0].rtuint, D.29122
	movl	%eax, %eax	# D.29122, tmp107
	movzbl	fixed_regs(%rax), %eax	# fixed_regs, D.29120
	testb	%al, %al	# D.29120
	jne	.L175	#,
.L177:
	.loc 1 1483 0
	movl	$1, %eax	#, D.29118
	jmp	.L167	#
.L175:
	.loc 1 1485 0
	movl	$0, %eax	#, D.29118
.L167:
	.loc 1 1486 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	cant_combine_insn_p, .-cant_combine_insn_p
	.type	try_combine, @function
try_combine:
.LFB13:
	.loc 1 1508 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$584, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -536(%rbp)	# i3, i3
	movq	%rsi, -544(%rbp)	# i2, i2
	movq	%rdx, -552(%rbp)	# i1, i1
	movq	%rcx, -560(%rbp)	# new_direct_jump_p, new_direct_jump_p
	.loc 1 1510 0
	movq	$0, -416(%rbp)	#, newi2pat
	.loc 1 1511 0
	movl	$0, -516(%rbp)	#, substed_i2
	movl	$0, -512(%rbp)	#, substed_i1
	.loc 1 1519 0
	movl	$0, -492(%rbp)	#, i2_code_number
	movl	$0, -488(%rbp)	#, other_code_number
	.loc 1 1523 0
	movq	$0, -408(%rbp)	#, i3dest_killed
	.loc 1 1525 0
	movq	$0, -384(%rbp)	#, i1dest
	movq	$0, -376(%rbp)	#, i1src
	.loc 1 1529 0
	movl	$0, -484(%rbp)	#, i2dest_in_i2src
	movl	$0, -480(%rbp)	#, i1dest_in_i1src
	movl	$0, -476(%rbp)	#, i2dest_in_i1src
	.loc 1 1530 0
	movl	$0, -456(%rbp)	#, i1_feeds_i3
	.loc 1 1534 0
	movl	$0, -472(%rbp)	#, i3_subst_into_i2
	.loc 1 1536 0
	movl	$0, -468(%rbp)	#, have_mult
	.loc 1 1545 0
	movq	-536(%rbp), %rax	# i3, tmp1454
	movq	%rax, %rdi	# tmp1454,
	call	cant_combine_insn_p	#
	testl	%eax, %eax	# D.29124
	jne	.L179	#,
	.loc 1 1546 0
	movq	-544(%rbp), %rax	# i2, tmp1455
	movq	%rax, %rdi	# tmp1455,
	call	cant_combine_insn_p	#
	testl	%eax, %eax	# D.29124
	jne	.L179	#,
	.loc 1 1547 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L180	#,
	.loc 1 1547 0 is_stmt 0 discriminator 1
	movq	-552(%rbp), %rax	# i1, tmp1456
	movq	%rax, %rdi	# tmp1456,
	call	cant_combine_insn_p	#
	testl	%eax, %eax	# D.29124
	je	.L180	#,
.L179:
	.loc 1 1557 0 is_stmt 1
	movl	$0, %eax	#, D.29123
	jmp	.L475	#
.L180:
	.loc 1 1559 0
	movl	combine_attempts(%rip), %eax	# combine_attempts, combine_attempts.92
	addl	$1, %eax	#, combine_attempts.93
	movl	%eax, combine_attempts(%rip)	# combine_attempts.93, combine_attempts
	.loc 1 1560 0
	movq	$0, undobuf+16(%rip)	#, undobuf.other_insn
	.loc 1 1563 0
	movq	$0, newpat_used_regs(%rip)	#, newpat_used_regs
	.loc 1 1567 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L182	#,
	.loc 1 1567 0 is_stmt 0 discriminator 1
	movq	-552(%rbp), %rax	# i1, tmp1457
	movl	8(%rax), %edx	# i1_147(D)->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.95
	cmpl	%eax, %edx	# max_uid_cuid.95, D.29124
	jle	.L183	#,
	movq	-552(%rbp), %rax	# i1, tmp1458
	movq	%rax, %rdi	# tmp1458,
	call	insn_cuid	#
	movl	%eax, %ebx	#, iftmp.94
	jmp	.L184	#
.L183:
	.loc 1 1567 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.96
	movq	-552(%rbp), %rax	# i1, tmp1459
	movl	8(%rax), %eax	# i1_147(D)->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.96, D.29126
	movl	(%rax), %ebx	# *_158, iftmp.94
.L184:
	.loc 1 1567 0 discriminator 3
	movq	-544(%rbp), %rax	# i2, tmp1460
	movl	8(%rax), %edx	# i2_145(D)->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.98
	cmpl	%eax, %edx	# max_uid_cuid.98, D.29124
	jle	.L185	#,
	.loc 1 1567 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1461
	movq	%rax, %rdi	# tmp1461,
	call	insn_cuid	#
	jmp	.L186	#
.L185:
	.loc 1 1567 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.99
	movq	-544(%rbp), %rax	# i2, tmp1462
	movl	8(%rax), %eax	# i2_145(D)->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.99, D.29126
	movl	(%rax), %eax	# *_167, iftmp.97
.L186:
	.loc 1 1567 0 discriminator 3
	cmpl	%eax, %ebx	# iftmp.97, iftmp.94
	jle	.L182	#,
	.loc 1 1568 0 is_stmt 1
	movq	-552(%rbp), %rax	# i1, tmp1463
	movq	%rax, -328(%rbp)	# tmp1463, temp
	movq	-544(%rbp), %rax	# i2, tmp1464
	movq	%rax, -552(%rbp)	# tmp1464, i1
	movq	-328(%rbp), %rax	# temp, tmp1465
	movq	%rax, -544(%rbp)	# tmp1465, i2
.L182:
	.loc 1 1570 0
	movq	$0, added_links_insn(%rip)	#, added_links_insn
	.loc 1 1588 0
	cmpq	$0, -552(%rbp)	#, i1
	jne	.L187	#,
	.loc 1 1588 0 is_stmt 0 discriminator 1
	movq	-536(%rbp), %rax	# i3, tmp1466
	movzwl	(%rax), %eax	# i3_143(D)->code, D.29127
	cmpw	$32, %ax	#, D.29127
	jne	.L187	#,
	movq	-536(%rbp), %rax	# i3, tmp1467
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _173->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L187	#,
	.loc 1 1589 0 is_stmt 1
	movq	-536(%rbp), %rax	# i3, tmp1468
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _175->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _176->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L187	#,
	.loc 1 1590 0
	movq	-536(%rbp), %rax	# i3, tmp1469
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _178->fld[1].rtx, D.29128
	movl	8(%rax), %eax	# _179->fld[0].rtuint, D.29129
	cmpl	$52, %eax	#, D.29129
	jbe	.L187	#,
	.loc 1 1591 0
	movq	-536(%rbp), %rax	# i3, tmp1470
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rdx	# _181->fld[1].rtx, D.29128
	movq	-536(%rbp), %rax	# i3, tmp1471
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp1471,
	call	find_reg_note	#
	testq	%rax, %rax	# D.29128
	je	.L187	#,
	.loc 1 1592 0
	movq	-544(%rbp), %rax	# i2, tmp1472
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _184->code, D.29127
	cmpw	$39, %ax	#, D.29127
	jne	.L187	#,
	.loc 1 1593 0
	movq	-536(%rbp), %rax	# i3, tmp1473
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _186->fld[0].rtx, D.29128
	movq	%rax, %rdi	# D.29128,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29124
	jne	.L187	#,
	.loc 1 1598 0
	movq	-536(%rbp), %rax	# i3, tmp1474
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _189->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _190->code, D.29127
	cmpw	$133, %ax	#, D.29127
	je	.L187	#,
	.loc 1 1599 0
	movq	-536(%rbp), %rax	# i3, tmp1475
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _192->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _193->code, D.29127
	cmpw	$64, %ax	#, D.29127
	je	.L187	#,
	.loc 1 1601 0
	movq	-536(%rbp), %rax	# i3, tmp1476
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	.loc 1 1600 0
	movq	8(%rax), %rdx	# _195->fld[0].rtx, D.29128
	movq	-536(%rbp), %rax	# i3, tmp1477
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _197->fld[1].rtx, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29124
	jne	.L187	#,
	.loc 1 1602 0
	movq	-544(%rbp), %rax	# i2, tmp1478
	movq	%rax, %rdi	# tmp1478,
	call	next_real_insn	#
	cmpq	-536(%rbp), %rax	# i3, D.29128
	jne	.L187	#,
.LBB10:
	.loc 1 1604 0
	movq	-544(%rbp), %rax	# i2, tmp1479
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, tmp1480
	movq	%rax, -152(%rbp)	# tmp1480, p2
	.loc 1 1616 0
	movl	$0, -464(%rbp)	#, i
	jmp	.L188	#
.L192:
	.loc 1 1617 0
	movq	-152(%rbp), %rax	# p2, tmp1481
	movq	8(%rax), %rax	# p2_201->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1483
	movslq	%edx, %rdx	# tmp1483, tmp1482
	movq	8(%rax,%rdx,8), %rax	# _205->elem, D.29128
	movzwl	(%rax), %eax	# _206->code, D.29127
	cmpw	$47, %ax	#, D.29127
	je	.L189	#,
	.loc 1 1618 0
	movq	-152(%rbp), %rax	# p2, tmp1484
	movq	8(%rax), %rax	# p2_201->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1486
	movslq	%edx, %rdx	# tmp1486, tmp1485
	movq	8(%rax,%rdx,8), %rax	# _208->elem, D.29128
	movzwl	(%rax), %eax	# _209->code, D.29127
	cmpw	$49, %ax	#, D.29127
	jne	.L190	#,
.L189:
	.loc 1 1620 0
	movq	-152(%rbp), %rax	# p2, tmp1487
	movq	8(%rax), %rax	# p2_201->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1489
	movslq	%edx, %rdx	# tmp1489, tmp1488
	movq	8(%rax,%rdx,8), %rax	# _211->elem, D.29128
	.loc 1 1619 0
	movq	8(%rax), %rdx	# _212->fld[0].rtx, D.29128
	movq	-536(%rbp), %rax	# i3, tmp1490
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _214->fld[0].rtx, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29124
	je	.L190	#,
	.loc 1 1621 0
	jmp	.L191	#
.L190:
	.loc 1 1616 0
	addl	$1, -464(%rbp)	#, i
.L188:
	.loc 1 1616 0 is_stmt 0 discriminator 1
	movq	-152(%rbp), %rax	# p2, tmp1491
	movq	8(%rax), %rax	# p2_201->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _203->num_elem, D.29124
	cmpl	-464(%rbp), %eax	# i, D.29124
	jg	.L192	#,
.L191:
	.loc 1 1623 0 is_stmt 1
	movq	-152(%rbp), %rax	# p2, tmp1492
	movq	8(%rax), %rax	# p2_201->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _218->num_elem, D.29124
	cmpl	-464(%rbp), %eax	# i, D.29124
	jne	.L187	#,
	.loc 1 1624 0
	movl	$0, -464(%rbp)	#, i
	jmp	.L193	#
.L199:
	.loc 1 1625 0
	movq	-152(%rbp), %rax	# p2, tmp1493
	movq	8(%rax), %rax	# p2_201->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1495
	movslq	%edx, %rdx	# tmp1495, tmp1494
	movq	8(%rax,%rdx,8), %rax	# _223->elem, D.29128
	movzwl	(%rax), %eax	# _224->code, D.29127
	cmpw	$47, %ax	#, D.29127
	je	.L194	#,
	.loc 1 1626 0
	movq	-152(%rbp), %rax	# p2, tmp1496
	movq	8(%rax), %rax	# p2_201->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1498
	movslq	%edx, %rdx	# tmp1498, tmp1497
	movq	8(%rax,%rdx,8), %rax	# _226->elem, D.29128
	movzwl	(%rax), %eax	# _227->code, D.29127
	cmpw	$49, %ax	#, D.29127
	jne	.L195	#,
.L194:
	.loc 1 1627 0
	movq	-152(%rbp), %rax	# p2, tmp1499
	movq	8(%rax), %rax	# p2_201->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1501
	movslq	%edx, %rdx	# tmp1501, tmp1500
	movq	8(%rax,%rdx,8), %rax	# _229->elem, D.29128
	movq	8(%rax), %rdx	# _230->fld[0].rtx, D.29128
	movq	-536(%rbp), %rax	# i3, tmp1502
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _232->fld[1].rtx, D.29128
	cmpq	%rax, %rdx	# D.29128, D.29128
	jne	.L195	#,
	.loc 1 1629 0
	movl	combine_merges(%rip), %eax	# combine_merges, combine_merges.100
	addl	$1, %eax	#, combine_merges.101
	movl	%eax, combine_merges(%rip)	# combine_merges.101, combine_merges
	.loc 1 1631 0
	movq	-536(%rbp), %rax	# i3, tmp1503
	movq	%rax, subst_insn(%rip)	# tmp1503, subst_insn
	.loc 1 1632 0
	movq	-544(%rbp), %rax	# i2, tmp1504
	movl	8(%rax), %edx	# i2_1->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.103
	cmpl	%eax, %edx	# max_uid_cuid.103, D.29124
	jle	.L196	#,
	.loc 1 1632 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1505
	movq	%rax, %rdi	# tmp1505,
	call	insn_cuid	#
	jmp	.L197	#
.L196:
	.loc 1 1632 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.104
	movq	-544(%rbp), %rax	# i2, tmp1506
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.104, D.29126
	movl	(%rax), %eax	# *_243, iftmp.102
.L197:
	.loc 1 1632 0 discriminator 3
	movl	%eax, subst_low_cuid(%rip)	# iftmp.102, subst_low_cuid
	.loc 1 1634 0 is_stmt 1 discriminator 3
	movl	$0, -508(%rbp)	#, added_sets_1
	movl	-508(%rbp), %eax	# added_sets_1, tmp1507
	movl	%eax, -504(%rbp)	# tmp1507, added_sets_2
	.loc 1 1635 0 discriminator 3
	movq	-536(%rbp), %rax	# i3, tmp1508
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _247->fld[1].rtx, i2dest.105
	movq	%rax, -400(%rbp)	# i2dest.105, i2dest
	.loc 1 1640 0 discriminator 3
	movq	-536(%rbp), %rax	# i3, tmp1509
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _249->fld[0].rtx, D.29128
	movq	-152(%rbp), %rdx	# p2, tmp1510
	movq	8(%rdx), %rdx	# p2_201->fld[0].rtvec, D.29130
	movl	-464(%rbp), %ecx	# i, tmp1512
	movslq	%ecx, %rcx	# tmp1512, tmp1511
	movq	8(%rdx,%rcx,8), %rdx	# _251->elem, D.29128
	addq	$8, %rdx	#, D.29131
	movq	%rax, %rsi	# D.29128,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
	.loc 1 1643 0 discriminator 3
	movq	-152(%rbp), %rax	# p2, tmp1513
	movq	%rax, -424(%rbp)	# tmp1513, newpat
	.loc 1 1644 0 discriminator 3
	movl	$1, -472(%rbp)	#, i3_subst_into_i2
	.loc 1 1645 0 discriminator 3
	jmp	.L198	#
.L195:
	.loc 1 1624 0
	addl	$1, -464(%rbp)	#, i
.L193:
	.loc 1 1624 0 is_stmt 0 discriminator 1
	movq	-152(%rbp), %rax	# p2, tmp1514
	movq	8(%rax), %rax	# p2_201->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _221->num_elem, D.29124
	cmpl	-464(%rbp), %eax	# i, D.29124
	jg	.L199	#,
.L187:
.LBE10:
	.loc 1 1652 0 is_stmt 1
	cmpq	$0, -552(%rbp)	#, i1
	jne	.L200	#,
	.loc 1 1653 0
	movq	-544(%rbp), %rax	# i2, tmp1515
	movzwl	(%rax), %eax	# i2_1->code, D.29127
	movzwl	%ax, %eax	# D.29127, D.29124
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29132
	cmpb	$105, %al	#, D.29132
	jne	.L201	#,
	.loc 1 1653 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1517
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _259->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L202	#,
	.loc 1 1653 0 discriminator 3
	movq	-544(%rbp), %rax	# i2, tmp1518
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, iftmp.107
	jmp	.L204	#
.L202:
	.loc 1 1653 0 discriminator 4
	movq	-544(%rbp), %rax	# i2, tmp1519
	movq	32(%rax), %rdx	# i2_1->fld[3].rtx, D.29128
	movq	-544(%rbp), %rax	# i2, tmp1520
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# tmp1520,
	call	single_set_2	#
	jmp	.L204	#
.L201:
	.loc 1 1653 0 discriminator 2
	movl	$0, %eax	#, iftmp.106
.L204:
	.loc 1 1653 0 discriminator 5
	movq	%rax, -328(%rbp)	# iftmp.106, temp
	cmpq	$0, -328(%rbp)	#, temp
	je	.L200	#,
	.loc 1 1654 0 is_stmt 1
	movq	-328(%rbp), %rax	# temp, tmp1521
	movq	16(%rax), %rax	# temp_266->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _267->code, D.29127
	cmpw	$54, %ax	#, D.29127
	je	.L205	#,
	.loc 1 1655 0
	movq	-328(%rbp), %rax	# temp, tmp1522
	movq	16(%rax), %rax	# temp_266->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _269->code, D.29127
	cmpw	$55, %ax	#, D.29127
	jne	.L200	#,
.L205:
	.loc 1 1656 0
	movq	-328(%rbp), %rax	# temp, tmp1523
	movq	8(%rax), %rax	# temp_266->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _271->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L200	#,
	.loc 1 1657 0
	movq	-328(%rbp), %rax	# temp, tmp1524
	movq	8(%rax), %rax	# temp_266->fld[0].rtx, D.29128
	movzbl	2(%rax), %eax	# _273->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29124
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29134
	cmpl	$1, %eax	#, D.29134
	jne	.L200	#,
	.loc 1 1658 0
	movq	-328(%rbp), %rax	# temp, tmp1526
	movq	8(%rax), %rax	# temp_266->fld[0].rtx, D.29128
	movzbl	2(%rax), %eax	# _277->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29124
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29133
	movzbl	%al, %edx	# D.29133, D.29124
	movl	target_flags(%rip), %eax	# target_flags, target_flags.109
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	je	.L206	#,
	.loc 1 1658 0 is_stmt 0 discriminator 1
	movl	$16, %eax	#, iftmp.108
	jmp	.L207	#
.L206:
	.loc 1 1658 0 discriminator 2
	movl	$8, %eax	#, iftmp.108
.L207:
	.loc 1 1658 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.108, D.29124
	jne	.L200	#,
	.loc 1 1659 0 is_stmt 1
	movq	-536(%rbp), %rax	# i3, tmp1528
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _286->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L200	#,
	.loc 1 1660 0
	movq	-536(%rbp), %rax	# i3, tmp1529
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _288->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _289->code, D.29127
	cmpw	$63, %ax	#, D.29127
	jne	.L200	#,
	.loc 1 1661 0
	movq	-536(%rbp), %rax	# i3, tmp1530
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _291->fld[0].rtx, D.29128
	movq	8(%rax), %rdx	# _292->fld[0].rtx, D.29128
	movq	-328(%rbp), %rax	# temp, tmp1531
	movq	8(%rax), %rax	# temp_266->fld[0].rtx, D.29128
	cmpq	%rax, %rdx	# D.29128, D.29128
	jne	.L200	#,
	.loc 1 1662 0
	movq	-536(%rbp), %rax	# i3, tmp1532
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _295->fld[0].rtx, D.29128
	movzbl	2(%rax), %eax	# _296->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29124
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29134
	cmpl	$1, %eax	#, D.29134
	jne	.L200	#,
	.loc 1 1663 0
	movq	-536(%rbp), %rax	# i3, tmp1534
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _300->fld[0].rtx, D.29128
	movzbl	2(%rax), %eax	# _301->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29124
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29133
	movzbl	%al, %edx	# D.29133, D.29124
	movl	target_flags(%rip), %eax	# target_flags, target_flags.111
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	je	.L208	#,
	.loc 1 1663 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.110
	jmp	.L209	#
.L208:
	.loc 1 1663 0 discriminator 2
	movl	$4, %eax	#, iftmp.110
.L209:
	.loc 1 1663 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.110, D.29124
	jne	.L200	#,
	.loc 1 1664 0 is_stmt 1
	movq	-536(%rbp), %rax	# i3, tmp1536
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _310->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _311->code, D.29127
	cmpw	$54, %ax	#, D.29127
	jne	.L200	#,
.LBB11:
	.loc 1 1668 0
	movq	-328(%rbp), %rax	# temp, tmp1537
	movq	16(%rax), %rax	# temp_266->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _313->code, D.29127
	cmpw	$54, %ax	#, D.29127
	jne	.L210	#,
	.loc 1 1669 0
	movq	-328(%rbp), %rax	# temp, tmp1538
	movq	16(%rax), %rax	# temp_266->fld[1].rtx, D.29128
	movq	8(%rax), %rax	# _315->fld[0].rtwint, tmp1539
	movq	%rax, -312(%rbp)	# tmp1539, lo
	cmpq	$0, -312(%rbp)	#, lo
	jns	.L211	#,
	.loc 1 1669 0 is_stmt 0 discriminator 1
	movq	$-1, %rax	#, iftmp.112
	jmp	.L212	#
.L211:
	.loc 1 1669 0 discriminator 2
	movl	$0, %eax	#, iftmp.112
.L212:
	.loc 1 1669 0 discriminator 1
	movq	%rax, -304(%rbp)	# iftmp.112, hi
	jmp	.L213	#
.L210:
	.loc 1 1672 0 is_stmt 1
	movq	-328(%rbp), %rax	# temp, tmp1540
	movq	16(%rax), %rax	# temp_266->fld[1].rtx, D.29128
	movq	16(%rax), %rax	# _320->fld[1].rtwint, tmp1541
	movq	%rax, -312(%rbp)	# tmp1541, lo
	.loc 1 1673 0
	movq	-328(%rbp), %rax	# temp, tmp1542
	movq	16(%rax), %rax	# temp_266->fld[1].rtx, D.29128
	movq	24(%rax), %rax	# _322->fld[2].rtwint, tmp1543
	movq	%rax, -304(%rbp)	# tmp1543, hi
.L213:
	.loc 1 1676 0
	movq	-536(%rbp), %rax	# i3, tmp1544
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _324->fld[0].rtx, D.29128
	movq	%rax, %rdi	# D.29128,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29124
	je	.L214	#,
	.loc 1 1683 0
	movl	target_flags(%rip), %eax	# target_flags, target_flags.114
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	je	.L215	#,
	.loc 1 1683 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.113
	jmp	.L216	#
.L215:
	.loc 1 1683 0 discriminator 2
	movabsq	$-4294967296, %rax	#, iftmp.113
.L216:
	.loc 1 1683 0 discriminator 3
	movq	-312(%rbp), %rdx	# lo, lo.115
	andq	%rdx, %rax	# lo.115, D.29125
	movq	%rax, -312(%rbp)	# D.29125, lo
	.loc 1 1684 0 is_stmt 1 discriminator 3
	movq	-536(%rbp), %rax	# i3, tmp1545
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _334->fld[1].rtx, D.29128
	movq	8(%rax), %rax	# _335->fld[0].rtwint, D.29135
	.loc 1 1685 0 discriminator 3
	movq	%rax, %rdx	# D.29135, D.29125
	movl	target_flags(%rip), %eax	# target_flags, target_flags.117
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	je	.L217	#,
	.loc 1 1685 0 is_stmt 0 discriminator 1
	movq	$-1, %rax	#, iftmp.116
	jmp	.L218	#
.L217:
	.loc 1 1685 0 discriminator 2
	movl	$4294967295, %eax	#, iftmp.116
.L218:
	andq	%rax, %rdx	# iftmp.116, D.29125
	.loc 1 1684 0 is_stmt 1 discriminator 2
	movq	-312(%rbp), %rax	# lo, lo.118
	orq	%rdx, %rax	# D.29125, D.29125
	movq	%rax, -312(%rbp)	# D.29125, lo
	jmp	.L219	#
.L214:
	.loc 1 1687 0
	movl	target_flags(%rip), %eax	# target_flags, target_flags.119
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	je	.L220	#,
	.loc 1 1688 0
	movq	-536(%rbp), %rax	# i3, tmp1546
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _348->fld[1].rtx, D.29128
	movq	8(%rax), %rax	# _349->fld[0].rtwint, tmp1547
	movq	%rax, -304(%rbp)	# tmp1547, hi
	jmp	.L219	#
.L220:
	.loc 1 1689 0
	movl	target_flags(%rip), %eax	# target_flags, target_flags.120
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	jne	.L221	#,
.LBB12:
	.loc 1 1691 0
	movq	-312(%rbp), %rax	# lo, lo.121
	.loc 1 1692 0
	shrq	$63, %rax	#, D.29125
	.loc 1 1691 0
	negl	%eax	# tmp1548
	movl	%eax, -452(%rbp)	# tmp1548, sign
	.loc 1 1694 0
	movl	target_flags(%rip), %eax	# target_flags, target_flags.123
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	je	.L222	#,
	.loc 1 1694 0 is_stmt 0 discriminator 1
	movq	$-1, %rdx	#, iftmp.122
	jmp	.L223	#
.L222:
	.loc 1 1694 0 discriminator 2
	movl	$4294967295, %edx	#, iftmp.122
.L223:
	.loc 1 1694 0 discriminator 3
	movl	target_flags(%rip), %eax	# target_flags, target_flags.125
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	je	.L224	#,
	.loc 1 1694 0 discriminator 1
	movl	$63, %eax	#, iftmp.124
	jmp	.L225	#
.L224:
	.loc 1 1694 0 discriminator 2
	movl	$31, %eax	#, iftmp.124
.L225:
	.loc 1 1694 0 discriminator 3
	movl	%eax, %ecx	# iftmp.124, tmp2088
	salq	%cl, %rdx	# tmp2088, D.29125
	movq	%rdx, %rax	# D.29125, D.29125
	addq	%rax, %rax	# D.29125
	notq	%rax	# D.29125
	movq	%rax, %rdx	# D.29125, D.29125
	movq	-312(%rbp), %rax	# lo, lo.126
	andq	%rdx, %rax	# D.29125, D.29125
	movq	%rax, -312(%rbp)	# D.29125, lo
	.loc 1 1696 0 is_stmt 1 discriminator 3
	movq	-536(%rbp), %rax	# i3, tmp1549
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _371->fld[1].rtx, D.29128
	movq	8(%rax), %rax	# _372->fld[0].rtwint, D.29135
	movq	%rax, %rdx	# D.29135, D.29125
	movl	target_flags(%rip), %eax	# target_flags, target_flags.128
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	je	.L226	#,
	.loc 1 1696 0 is_stmt 0 discriminator 1
	movl	$63, %eax	#, iftmp.127
	jmp	.L227	#
.L226:
	.loc 1 1696 0 discriminator 2
	movl	$31, %eax	#, iftmp.127
.L227:
	.loc 1 1696 0 discriminator 3
	movl	%eax, %ecx	# iftmp.127, tmp2091
	salq	%cl, %rdx	# tmp2091, D.29125
	movq	%rdx, %rax	# D.29125, D.29125
	leaq	(%rax,%rax), %rdx	#, D.29125
	movq	-312(%rbp), %rax	# lo, lo.129
	orq	%rdx, %rax	# D.29125, D.29125
	movq	%rax, -312(%rbp)	# D.29125, lo
	.loc 1 1698 0 is_stmt 1 discriminator 3
	movl	-452(%rbp), %eax	# sign, tmp1550
	cltq
	cmpq	-304(%rbp), %rax	# hi, D.29135
	jne	.L228	#,
	.loc 1 1699 0
	cmpq	$0, -312(%rbp)	#, lo
	jns	.L229	#,
	.loc 1 1699 0 is_stmt 0 discriminator 1
	movq	$-1, %rax	#, iftmp.130
	jmp	.L230	#
.L229:
	.loc 1 1699 0 discriminator 2
	movl	$0, %eax	#, iftmp.130
.L230:
	.loc 1 1699 0 discriminator 3
	movq	%rax, -304(%rbp)	# iftmp.130, hi
.LBE12:
	jmp	.L219	#
.L228:
	jmp	.L219	#
.L221:
	.loc 1 1704 0 is_stmt 1
	movl	$__FUNCTION__.11561, %edx	#,
	movl	$1704, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L219:
	.loc 1 1706 0
	movl	combine_merges(%rip), %eax	# combine_merges, combine_merges.131
	addl	$1, %eax	#, combine_merges.132
	movl	%eax, combine_merges(%rip)	# combine_merges.132, combine_merges
	.loc 1 1707 0
	movq	-536(%rbp), %rax	# i3, tmp1551
	movq	%rax, subst_insn(%rip)	# tmp1551, subst_insn
	.loc 1 1708 0
	movq	-544(%rbp), %rax	# i2, tmp1552
	movl	8(%rax), %edx	# i2_1->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.134
	cmpl	%eax, %edx	# max_uid_cuid.134, D.29124
	jle	.L231	#,
	.loc 1 1708 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1553
	movq	%rax, %rdi	# tmp1553,
	call	insn_cuid	#
	jmp	.L232	#
.L231:
	.loc 1 1708 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.135
	movq	-544(%rbp), %rax	# i2, tmp1554
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.135, D.29126
	movl	(%rax), %eax	# *_397, iftmp.133
.L232:
	.loc 1 1708 0 discriminator 3
	movl	%eax, subst_low_cuid(%rip)	# iftmp.133, subst_low_cuid
	.loc 1 1709 0 is_stmt 1 discriminator 3
	movl	$0, -508(%rbp)	#, added_sets_1
	movl	-508(%rbp), %eax	# added_sets_1, tmp1555
	movl	%eax, -504(%rbp)	# tmp1555, added_sets_2
	.loc 1 1710 0 discriminator 3
	movq	-328(%rbp), %rax	# temp, tmp1556
	movq	8(%rax), %rax	# temp_266->fld[0].rtx, i2dest.136
	movq	%rax, -400(%rbp)	# i2dest.136, i2dest
	.loc 1 1712 0 discriminator 3
	movq	-328(%rbp), %rax	# temp, tmp1557
	movq	8(%rax), %rax	# temp_266->fld[0].rtx, D.29128
	movzbl	2(%rax), %eax	# _402->mode, D.29133
	movzbl	%al, %edx	# D.29133, D.29136
	movq	-304(%rbp), %rcx	# hi, tmp1558
	movq	-312(%rbp), %rax	# lo, tmp1559
	movq	%rcx, %rsi	# tmp1558,
	movq	%rax, %rdi	# tmp1559,
	call	immed_double_const	#
	movq	-328(%rbp), %rdx	# temp, tmp1560
	addq	$16, %rdx	#, D.29131
	movq	%rax, %rsi	# D.29128,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
	.loc 1 1715 0 discriminator 3
	movq	-544(%rbp), %rax	# i2, tmp1561
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, newpat.137
	movq	%rax, -424(%rbp)	# newpat.137, newpat
	.loc 1 1716 0 discriminator 3
	jmp	.L198	#
.L200:
.LBE11:
	.loc 1 1733 0
	cmpq	$0, -552(%rbp)	#, i1
	jne	.L233	#,
	.loc 1 1733 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1562
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _408->code, D.29127
	cmpw	$39, %ax	#, D.29127
	jne	.L233	#,
	.loc 1 1734 0 is_stmt 1
	movq	-544(%rbp), %rax	# i2, tmp1563
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _410->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _411->num_elem, D.29124
	cmpl	$1, %eax	#, D.29124
	jle	.L233	#,
	.loc 1 1735 0
	movq	-544(%rbp), %rax	# i2, tmp1564
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _413->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _414->elem, D.29128
	movzwl	(%rax), %eax	# _415->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L233	#,
	.loc 1 1736 0
	movq	-544(%rbp), %rax	# i2, tmp1565
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _417->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _418->elem, D.29128
	movq	8(%rax), %rax	# _419->fld[0].rtx, D.29128
	movzbl	2(%rax), %eax	# _420->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29124
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29134
	cmpl	$4, %eax	#, D.29134
	jne	.L233	#,
	.loc 1 1738 0
	movq	-544(%rbp), %rax	# i2, tmp1567
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _424->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _425->elem, D.29128
	movq	16(%rax), %rax	# _426->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _427->code, D.29127
	cmpw	$74, %ax	#, D.29127
	jne	.L233	#,
	.loc 1 1739 0
	movq	-544(%rbp), %rax	# i2, tmp1568
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _429->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _430->elem, D.29128
	movq	16(%rax), %rax	# _431->fld[1].rtx, D.29128
	movq	16(%rax), %rdx	# _432->fld[1].rtx, D.29128
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29128
	cmpq	%rax, %rdx	# D.29128, D.29128
	jne	.L233	#,
	.loc 1 1740 0
	movq	-544(%rbp), %rax	# i2, tmp1569
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _435->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _436->elem, D.29128
	movzwl	(%rax), %eax	# _437->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L233	#,
	.loc 1 1741 0
	movq	-544(%rbp), %rax	# i2, tmp1570
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _439->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _440->elem, D.29128
	movq	8(%rax), %rax	# _441->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _442->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L233	#,
	.loc 1 1743 0
	movq	-544(%rbp), %rax	# i2, tmp1571
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _444->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _445->elem, D.29128
	.loc 1 1742 0
	movq	16(%rax), %rdx	# _446->fld[1].rtx, D.29128
	movq	-544(%rbp), %rax	# i2, tmp1572
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _448->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _449->elem, D.29128
	movq	16(%rax), %rax	# _450->fld[1].rtx, D.29128
	movq	8(%rax), %rax	# _451->fld[0].rtx, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29124
	je	.L233	#,
	.loc 1 1745 0
	movq	-544(%rbp), %rax	# i2, tmp1573
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _454->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _455->num_elem, D.29124
	subl	$1, %eax	#, tmp1574
	movl	%eax, -464(%rbp)	# tmp1574, i
	jmp	.L234	#
.L237:
	.loc 1 1746 0
	movq	-544(%rbp), %rax	# i2, tmp1575
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _458->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1577
	movslq	%edx, %rdx	# tmp1577, tmp1576
	movq	8(%rax,%rdx,8), %rax	# _459->elem, D.29128
	movzwl	(%rax), %eax	# _460->code, D.29127
	cmpw	$49, %ax	#, D.29127
	je	.L235	#,
	.loc 1 1747 0
	jmp	.L236	#
.L235:
	.loc 1 1745 0
	subl	$1, -464(%rbp)	#, i
.L234:
	.loc 1 1745 0 is_stmt 0 discriminator 1
	cmpl	$1, -464(%rbp)	#, i
	jg	.L237	#,
.L236:
	.loc 1 1749 0 is_stmt 1
	cmpl	$1, -464(%rbp)	#, i
	jne	.L233	#,
	.loc 1 1757 0
	movq	-544(%rbp), %rax	# i2, tmp1578
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _463->fld[0].rtvec, D.29130
	movq	16(%rax), %rcx	# _464->elem, D.29128
	movq	-544(%rbp), %rax	# i2, tmp1579
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	.loc 1 1756 0
	movq	-544(%rbp), %rdx	# i2, tmp1580
	movq	$0, 16(%rsp)	#,
	movq	$0, 8(%rsp)	#,
	movl	$-1, (%rsp)	#,
	movq	%rcx, %r9	# D.29128,
	movq	%rdx, %r8	# tmp1580,
	movl	$0, %ecx	#,
	movl	%eax, %edx	# D.29124,
	movl	$0, %esi	#,
	movl	$32, %edi	#,
	call	gen_rtx_fmt_iuueiee	#
	movq	%rax, -552(%rbp)	# tmp1581, i1
	movq	-552(%rbp), %rax	# i1, tmp1582
	movq	%rax, subst_prev_insn(%rip)	# tmp1582, subst_prev_insn
	.loc 1 1761 0
	movq	-544(%rbp), %rax	# i2, tmp1583
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _468->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _469->elem, D.29128
	movq	-544(%rbp), %rdx	# i2, tmp1584
	addq	$32, %rdx	#, D.29131
	movq	%rax, %rsi	# D.29128,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
	.loc 1 1762 0
	movq	-552(%rbp), %rax	# i1, tmp1585
	movq	32(%rax), %rax	# i1_467->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _472->fld[0].rtx, D.29128
	movq	-544(%rbp), %rdx	# i2, tmp1586
	movq	32(%rdx), %rdx	# i2_1->fld[3].rtx, D.29128
	movq	16(%rdx), %rdx	# _474->fld[1].rtx, D.29128
	addq	$8, %rdx	#, D.29131
	movq	%rax, %rsi	# D.29128,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
.L233:
	.loc 1 1769 0
	leaq	-392(%rbp), %rdi	#, tmp1587
	leaq	-400(%rbp), %rcx	#, tmp1588
	movq	-552(%rbp), %rdx	# i1, tmp1589
	movq	-536(%rbp), %rsi	# i3, tmp1590
	movq	-544(%rbp), %rax	# i2, tmp1591
	movq	%rdi, %r9	# tmp1587,
	movq	%rcx, %r8	# tmp1588,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp1591,
	call	can_combine_p	#
	testl	%eax, %eax	# D.29124
	je	.L238	#,
	.loc 1 1770 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L239	#,
	.loc 1 1770 0 is_stmt 0 discriminator 1
	leaq	-376(%rbp), %rdi	#, tmp1592
	leaq	-384(%rbp), %rcx	#, tmp1593
	movq	-544(%rbp), %rdx	# i2, tmp1594
	movq	-536(%rbp), %rsi	# i3, tmp1595
	movq	-552(%rbp), %rax	# i1, tmp1596
	movq	%rdi, %r9	# tmp1592,
	movq	%rcx, %r8	# tmp1593,
	movq	%rdx, %rcx	# tmp1594,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# tmp1596,
	call	can_combine_p	#
	testl	%eax, %eax	# D.29124
	jne	.L239	#,
.L238:
	.loc 1 1772 0 is_stmt 1
	call	undo_all	#
	.loc 1 1773 0
	movl	$0, %eax	#, D.29123
	jmp	.L475	#
.L239:
	.loc 1 1778 0
	movq	-392(%rbp), %rdx	# i2src, i2src.138
	movq	-400(%rbp), %rax	# i2dest, i2dest.139
	movq	%rdx, %rsi	# i2src.138,
	movq	%rax, %rdi	# i2dest.139,
	call	reg_overlap_mentioned_p	#
	movl	%eax, -484(%rbp)	# tmp1597, i2dest_in_i2src
	.loc 1 1779 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L240	#,
	.loc 1 1779 0 is_stmt 0 discriminator 1
	movq	-376(%rbp), %rdx	# i1src, i1src.141
	movq	-384(%rbp), %rax	# i1dest, i1dest.142
	movq	%rdx, %rsi	# i1src.141,
	movq	%rax, %rdi	# i1dest.142,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29124
	je	.L240	#,
	.loc 1 1779 0 discriminator 3
	movl	$1, %eax	#, iftmp.140
	jmp	.L241	#
.L240:
	.loc 1 1779 0 discriminator 2
	movl	$0, %eax	#, iftmp.140
.L241:
	.loc 1 1779 0 discriminator 4
	movl	%eax, -480(%rbp)	# iftmp.140, i1dest_in_i1src
	.loc 1 1780 0 is_stmt 1 discriminator 4
	cmpq	$0, -552(%rbp)	#, i1
	je	.L242	#,
	.loc 1 1780 0 is_stmt 0 discriminator 1
	movq	-376(%rbp), %rdx	# i1src, i1src.144
	movq	-400(%rbp), %rax	# i2dest, i2dest.145
	movq	%rdx, %rsi	# i1src.144,
	movq	%rax, %rdi	# i2dest.145,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29124
	je	.L242	#,
	.loc 1 1780 0 discriminator 3
	movl	$1, %eax	#, iftmp.143
	jmp	.L243	#
.L242:
	.loc 1 1780 0 discriminator 2
	movl	$0, %eax	#, iftmp.143
.L243:
	.loc 1 1780 0 discriminator 4
	movl	%eax, -476(%rbp)	# iftmp.143, i2dest_in_i1src
	.loc 1 1784 0 is_stmt 1 discriminator 4
	cmpq	$0, -552(%rbp)	#, i1
	je	.L244	#,
	.loc 1 1784 0 is_stmt 0 discriminator 1
	movq	-392(%rbp), %rdx	# i2src, i2src.147
	movq	-384(%rbp), %rax	# i1dest, i1dest.148
	movq	%rdx, %rsi	# i2src.147,
	movq	%rax, %rdi	# i1dest.148,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29124
	jne	.L244	#,
	.loc 1 1784 0 discriminator 3
	movl	$1, %eax	#, iftmp.146
	jmp	.L245	#
.L244:
	.loc 1 1784 0 discriminator 2
	movl	$0, %eax	#, iftmp.146
.L245:
	.loc 1 1784 0 discriminator 4
	movl	%eax, -456(%rbp)	# iftmp.146, i1_feeds_i3
	.loc 1 1787 0 is_stmt 1 discriminator 4
	cmpq	$0, -552(%rbp)	#, i1
	je	.L246	#,
	.loc 1 1788 0
	cmpl	$0, -476(%rbp)	#, i2dest_in_i1src
	je	.L246	#,
	.loc 1 1787 0
	cmpl	$0, -456(%rbp)	#, i1_feeds_i3
	je	.L246	#,
	.loc 1 1787 0 is_stmt 0 discriminator 2
	movl	$1, %eax	#, iftmp.149
	jmp	.L247	#
.L246:
	.loc 1 1787 0 discriminator 1
	movl	$0, %eax	#, iftmp.149
.L247:
	.loc 1 1787 0 discriminator 3
	movq	-384(%rbp), %rcx	# i1dest, i1dest.150
	movq	-400(%rbp), %rdx	# i2dest, i2dest.151
	movq	-536(%rbp), %rsi	# i3, tmp1598
	addq	$32, %rsi	#, D.29131
	leaq	-408(%rbp), %r8	#, tmp1599
	movq	-536(%rbp), %rdi	# i3, tmp1600
	movq	%r8, %r9	# tmp1599,
	movl	%eax, %r8d	# iftmp.149,
	call	combinable_i3pat	#
	testl	%eax, %eax	# D.29124
	jne	.L248	#,
	.loc 1 1791 0 is_stmt 1
	call	undo_all	#
	.loc 1 1792 0
	movl	$0, %eax	#, D.29123
	jmp	.L475	#
.L248:
	.loc 1 1798 0
	movq	-392(%rbp), %rax	# i2src, i2src.152
	movzwl	(%rax), %eax	# i2src.152_507->code, D.29127
	cmpw	$78, %ax	#, D.29127
	je	.L249	#,
	.loc 1 1799 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L250	#,
	.loc 1 1799 0 is_stmt 0 discriminator 1
	movq	-376(%rbp), %rax	# i1src, i1src.153
	movzwl	(%rax), %eax	# i1src.153_509->code, D.29127
	cmpw	$78, %ax	#, D.29127
	je	.L249	#,
.L250:
	.loc 1 1800 0 is_stmt 1
	movq	-536(%rbp), %rax	# i3, tmp1601
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _511->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L251	#,
	.loc 1 1801 0
	movq	-536(%rbp), %rax	# i3, tmp1602
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _513->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _514->code, D.29127
	cmpw	$78, %ax	#, D.29127
	jne	.L251	#,
.L249:
	.loc 1 1802 0
	movl	$1, -468(%rbp)	#, have_mult
.L251:
	.loc 1 1842 0
	movq	-400(%rbp), %rdx	# i2dest, i2dest.154
	movq	-536(%rbp), %rax	# i3, tmp1603
	movq	%rdx, %rsi	# i2dest.154,
	movq	%rax, %rdi	# tmp1603,
	call	dead_or_set_p	#
	testl	%eax, %eax	# D.29124
	sete	%al	#, D.29137
	movzbl	%al, %eax	# D.29137, tmp1604
	movl	%eax, -504(%rbp)	# tmp1604, added_sets_2
	.loc 1 1845 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L252	#,
	.loc 1 1845 0 is_stmt 0 discriminator 1
	cmpl	$0, -456(%rbp)	#, i1_feeds_i3
	je	.L253	#,
	.loc 1 1845 0 discriminator 3
	movq	-384(%rbp), %rdx	# i1dest, i1dest.156
	movq	-536(%rbp), %rax	# i3, tmp1605
	movq	%rdx, %rsi	# i1dest.156,
	movq	%rax, %rdi	# tmp1605,
	call	dead_or_set_p	#
	testl	%eax, %eax	# D.29124
	je	.L254	#,
	jmp	.L252	#
.L253:
	.loc 1 1846 0 is_stmt 1
	movq	-384(%rbp), %rdx	# i1dest, i1dest.158
	movq	-536(%rbp), %rax	# i3, tmp1606
	movq	%rdx, %rsi	# i1dest.158,
	movq	%rax, %rdi	# tmp1606,
	call	dead_or_set_p	#
	testl	%eax, %eax	# D.29124
	jne	.L255	#,
	.loc 1 1846 0 is_stmt 0 discriminator 1
	movq	-384(%rbp), %rdx	# i1dest, i1dest.159
	movq	-544(%rbp), %rax	# i2, tmp1607
	movq	%rdx, %rsi	# i1dest.159,
	movq	%rax, %rdi	# tmp1607,
	call	dead_or_set_p	#
	testl	%eax, %eax	# D.29124
	jne	.L255	#,
	.loc 1 1846 0 discriminator 3
	movl	$1, %eax	#, iftmp.157
	jmp	.L256	#
.L255:
	.loc 1 1846 0 discriminator 2
	movl	$0, %eax	#, iftmp.157
.L256:
	.loc 1 1845 0 is_stmt 1
	andl	$1, %eax	#, D.29137
	testb	%al, %al	# D.29137
	je	.L252	#,
.L254:
	.loc 1 1845 0 is_stmt 0 discriminator 4
	movl	$1, %eax	#, iftmp.155
	jmp	.L257	#
.L252:
	.loc 1 1845 0 discriminator 2
	movl	$0, %eax	#, iftmp.155
.L257:
	.loc 1 1845 0 discriminator 5
	movl	%eax, -508(%rbp)	# iftmp.155, added_sets_1
	.loc 1 1855 0 is_stmt 1 discriminator 5
	movq	-544(%rbp), %rax	# i2, tmp1608
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _533->code, D.29127
	.loc 1 1857 0 discriminator 5
	cmpw	$39, %ax	#, D.29127
	jne	.L258	#,
	.loc 1 1856 0
	movq	-392(%rbp), %rdx	# i2src, i2src.161
	movq	-400(%rbp), %rax	# i2dest, i2dest.162
	.loc 1 1857 0
	movq	%rdx, %rcx	# i2src.161,
	movq	%rax, %rdx	# i2dest.162,
	movl	$0, %esi	#,
	movl	$47, %edi	#,
	call	gen_rtx_fmt_ee	#
	jmp	.L259	#
.L258:
	.loc 1 1857 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1609
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, iftmp.160
.L259:
	.loc 1 1855 0 is_stmt 1
	movq	%rax, -336(%rbp)	# iftmp.160, i2pat
	.loc 1 1859 0
	cmpl	$0, -504(%rbp)	#, added_sets_2
	je	.L260	#,
	.loc 1 1860 0
	movq	-336(%rbp), %rax	# i2pat, tmp1610
	movq	%rax, %rdi	# tmp1610,
	call	copy_rtx	#
	movq	%rax, -336(%rbp)	# tmp1611, i2pat
.L260:
	.loc 1 1862 0
	movl	combine_merges(%rip), %eax	# combine_merges, combine_merges.163
	addl	$1, %eax	#, combine_merges.164
	movl	%eax, combine_merges(%rip)	# combine_merges.164, combine_merges
	.loc 1 1866 0
	call	max_reg_num	#
	movl	%eax, -448(%rbp)	# tmp1612, maxreg
	.loc 1 1868 0
	movq	-536(%rbp), %rax	# i3, tmp1613
	movq	%rax, subst_insn(%rip)	# tmp1613, subst_insn
	.loc 1 1884 0
	movl	flag_expensive_optimizations(%rip), %eax	# flag_expensive_optimizations, flag_expensive_optimizations.165
	testl	%eax, %eax	# flag_expensive_optimizations.165
	je	.L261	#,
	.loc 1 1889 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L262	#,
	.loc 1 1891 0
	movq	-552(%rbp), %rax	# i1, tmp1614
	movl	8(%rax), %edx	# i1_3->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.167
	cmpl	%eax, %edx	# max_uid_cuid.167, D.29124
	jle	.L263	#,
	.loc 1 1891 0 is_stmt 0 discriminator 1
	movq	-552(%rbp), %rax	# i1, tmp1615
	movq	%rax, %rdi	# tmp1615,
	call	insn_cuid	#
	jmp	.L264	#
.L263:
	.loc 1 1891 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.168
	movq	-552(%rbp), %rax	# i1, tmp1616
	movl	8(%rax), %eax	# i1_3->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.168, D.29126
	movl	(%rax), %eax	# *_552, iftmp.166
.L264:
	movl	%eax, subst_low_cuid(%rip)	# iftmp.166, subst_low_cuid
	.loc 1 1892 0 is_stmt 1 discriminator 2
	movq	global_rtl(%rip), %rdx	# global_rtl, D.29128
	movq	global_rtl(%rip), %rsi	# global_rtl, D.29128
	movq	-376(%rbp), %rax	# i1src, i1src.169
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# i1src.169,
	call	subst	#
	movq	%rax, -376(%rbp)	# i1src.170, i1src
	jmp	.L261	#
.L262:
	.loc 1 1896 0
	movq	-544(%rbp), %rax	# i2, tmp1617
	movl	8(%rax), %edx	# i2_1->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.172
	cmpl	%eax, %edx	# max_uid_cuid.172, D.29124
	jle	.L265	#,
	.loc 1 1896 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1618
	movq	%rax, %rdi	# tmp1618,
	call	insn_cuid	#
	jmp	.L266	#
.L265:
	.loc 1 1896 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.173
	movq	-544(%rbp), %rax	# i2, tmp1619
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.173, D.29126
	movl	(%rax), %eax	# *_565, iftmp.171
.L266:
	.loc 1 1896 0 discriminator 3
	movl	%eax, subst_low_cuid(%rip)	# iftmp.171, subst_low_cuid
	.loc 1 1897 0 is_stmt 1 discriminator 3
	movq	global_rtl(%rip), %rdx	# global_rtl, D.29128
	movq	global_rtl(%rip), %rsi	# global_rtl, D.29128
	movq	-392(%rbp), %rax	# i2src, i2src.174
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# i2src.174,
	call	subst	#
	movq	%rax, -392(%rbp)	# i2src.175, i2src
.L261:
	.loc 1 1913 0
	cmpq	$0, -552(%rbp)	#, i1
	jne	.L267	#,
	.loc 1 1913 0 is_stmt 0 discriminator 1
	cmpl	$0, -504(%rbp)	#, added_sets_2
	je	.L267	#,
	movq	-536(%rbp), %rax	# i3, tmp1620
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _571->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L267	#,
	.loc 1 1914 0 is_stmt 1
	movq	-536(%rbp), %rax	# i3, tmp1621
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _573->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _574->code, D.29127
	cmpw	$74, %ax	#, D.29127
	jne	.L267	#,
	.loc 1 1915 0
	movq	-536(%rbp), %rax	# i3, tmp1622
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _576->fld[1].rtx, D.29128
	movq	16(%rax), %rdx	# _577->fld[1].rtx, D.29128
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29128
	cmpq	%rax, %rdx	# D.29128, D.29128
	jne	.L267	#,
	.loc 1 1916 0
	movq	-400(%rbp), %rdx	# i2dest, i2dest.176
	movq	-536(%rbp), %rax	# i3, tmp1623
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, D.29128
	movq	16(%rax), %rax	# _581->fld[1].rtx, D.29128
	movq	8(%rax), %rax	# _582->fld[0].rtx, D.29128
	movq	%rdx, %rsi	# i2dest.176,
	movq	%rax, %rdi	# D.29128,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29124
	je	.L267	#,
.LBB13:
	.loc 1 1923 0
	movq	-536(%rbp), %rax	# i3, tmp1624
	movq	32(%rax), %rax	# i3_143(D)->fld[3].rtx, newpat.177
	movq	%rax, -424(%rbp)	# newpat.177, newpat
	.loc 1 1924 0
	movq	-392(%rbp), %rax	# i2src, i2src.178
	movq	-424(%rbp), %rdx	# newpat, newpat.179
	movq	16(%rdx), %rdx	# newpat.179_587->fld[1].rtx, D.29128
	addq	$8, %rdx	#, D.29131
	movq	%rax, %rsi	# i2src.178,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
	.loc 1 1926 0
	movl	$1, -444(%rbp)	#, i2_is_used
	.loc 1 1934 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	testq	%rax, %rax	# D.29128
	jne	.L268	#,
	.loc 1 1935 0
	movq	-424(%rbp), %rax	# newpat, newpat.180
	movq	8(%rax), %rax	# newpat.180_592->fld[0].rtx, D.29128
	movq	-536(%rbp), %rcx	# i3, tmp1625
	movl	$undobuf+16, %edx	#,
	movq	%rcx, %rsi	# tmp1625,
	movq	%rax, %rdi	# D.29128,
	call	find_single_use	#
	movq	%rax, -144(%rbp)	# tmp1626, cc_use
	cmpq	$0, -144(%rbp)	#, cc_use
	je	.L268	#,
	.loc 1 1937 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29128
	movq	-392(%rbp), %rcx	# i2src, i2src.181
	movq	-144(%rbp), %rax	# cc_use, tmp1627
	movq	(%rax), %rax	# *cc_use_594, D.29128
	movzwl	(%rax), %eax	# _597->code, D.29127
	movzwl	%ax, %eax	# D.29127, D.29138
	movq	%rcx, %rsi	# i2src.181,
	movl	%eax, %edi	# D.29138,
	call	ix86_cc_mode	#
	movl	%eax, -440(%rbp)	# tmp1628, compare_mode
	.loc 1 1939 0
	movq	-424(%rbp), %rax	# newpat, newpat.182
	movq	8(%rax), %rax	# newpat.182_601->fld[0].rtx, D.29128
	movzbl	2(%rax), %eax	# _602->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29129
	.loc 1 1937 0
	cmpl	%eax, -440(%rbp)	# D.29129, compare_mode
	je	.L268	#,
.LBB14:
	.loc 1 1941 0
	movq	-424(%rbp), %rax	# newpat, newpat.183
	movq	8(%rax), %rax	# newpat.183_605->fld[0].rtx, D.29128
	movl	8(%rax), %eax	# _606->fld[0].rtuint, tmp1629
	movl	%eax, -436(%rbp)	# tmp1629, regno
	.loc 1 1942 0
	movl	-436(%rbp), %edx	# regno, regno.184
	movl	-440(%rbp), %eax	# compare_mode, tmp1630
	movl	%edx, %esi	# regno.184,
	movl	%eax, %edi	# tmp1630,
	call	gen_rtx_REG	#
	movq	%rax, -136(%rbp)	# tmp1631, new_dest
	.loc 1 1944 0
	cmpl	$52, -436(%rbp)	#, regno
	jbe	.L269	#,
	.loc 1 1945 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.185
	movl	-436(%rbp), %edx	# regno, tmp1632
	addq	$4, %rdx	#, tmp1633
	movq	(%rax,%rdx,8), %rax	# reg_n_info.185_610->data.reg, D.29139
	movl	12(%rax), %eax	# _611->sets, D.29124
	cmpl	$1, %eax	#, D.29124
	jne	.L270	#,
	.loc 1 1945 0 is_stmt 0 discriminator 1
	cmpl	$0, -504(%rbp)	#, added_sets_2
	jne	.L270	#,
	.loc 1 1946 0 is_stmt 1
	movq	-424(%rbp), %rax	# newpat, newpat.186
	movq	8(%rax), %rax	# newpat.186_613->fld[0].rtx, D.29128
	movzbl	3(%rax), %eax	# *_614, D.29133
	andl	$8, %eax	#, D.29133
	testb	%al, %al	# D.29133
	jne	.L270	#,
.L269:
	.loc 1 1948 0
	cmpl	$52, -436(%rbp)	#, regno
	jbe	.L271	#,
	.loc 1 1949 0
	movq	cfun(%rip), %rax	# cfun, cfun.187
	movq	24(%rax), %rax	# cfun.187_617->emit, D.29140
	movq	80(%rax), %rax	# _618->x_regno_reg_rtx, D.29131
	movl	-436(%rbp), %edx	# regno, D.29125
	salq	$3, %rdx	#, D.29125
	addq	%rax, %rdx	# D.29131, D.29131
	movq	-136(%rbp), %rax	# new_dest, tmp1634
	movq	%rax, %rsi	# tmp1634,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
.L271:
	.loc 1 1951 0
	movq	-424(%rbp), %rax	# newpat, newpat.188
	leaq	8(%rax), %rdx	#, D.29131
	movq	-136(%rbp), %rax	# new_dest, tmp1635
	movq	%rax, %rsi	# tmp1635,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
	.loc 1 1952 0
	movq	-144(%rbp), %rax	# cc_use, tmp1636
	movq	(%rax), %rax	# *cc_use_594, D.29128
	leaq	8(%rax), %rdx	#, D.29131
	movq	-136(%rbp), %rax	# new_dest, tmp1637
	movq	%rax, %rsi	# tmp1637,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
	.loc 1 1953 0
	movq	const_int_rtx+512(%rip), %rcx	# const_int_rtx, D.29128
	movq	-392(%rbp), %rdx	# i2src, i2src.189
	movl	-440(%rbp), %eax	# compare_mode, tmp1638
	movl	%eax, %esi	# tmp1638,
	movl	$74, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-424(%rbp), %rdx	# newpat, newpat.190
	addq	$16, %rdx	#, D.29131
	movq	%rax, %rsi	# D.29128,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
	jmp	.L268	#
.L270:
	.loc 1 1957 0
	movq	$0, undobuf+16(%rip)	#, undobuf.other_insn
.LBE14:
.LBE13:
	.loc 1 1917 0
	jmp	.L272	#
.L268:
	jmp	.L272	#
.L267:
	.loc 1 1964 0
	movl	$0, n_occurrences(%rip)	#, n_occurrences
	.loc 1 1970 0
	movq	-544(%rbp), %rax	# i2, tmp1639
	movl	8(%rax), %edx	# i2_1->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.192
	cmpl	%eax, %edx	# max_uid_cuid.192, D.29124
	jle	.L273	#,
	.loc 1 1970 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1640
	movq	%rax, %rdi	# tmp1640,
	call	insn_cuid	#
	jmp	.L274	#
.L273:
	.loc 1 1970 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.193
	movq	-544(%rbp), %rax	# i2, tmp1641
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.193, D.29126
	movl	(%rax), %eax	# *_639, iftmp.191
.L274:
	.loc 1 1970 0 discriminator 3
	movl	%eax, subst_low_cuid(%rip)	# iftmp.191, subst_low_cuid
	.loc 1 1971 0 is_stmt 1 discriminator 3
	cmpl	$0, -456(%rbp)	#, i1_feeds_i3
	jne	.L275	#,
	.loc 1 1971 0 is_stmt 0 discriminator 1
	cmpl	$0, -480(%rbp)	#, i1dest_in_i1src
	je	.L275	#,
	.loc 1 1971 0 discriminator 3
	movl	$1, %eax	#, iftmp.194
	jmp	.L276	#
.L275:
	.loc 1 1971 0 discriminator 2
	movl	$0, %eax	#, iftmp.194
.L276:
	.loc 1 1971 0 discriminator 4
	movq	-392(%rbp), %rdx	# i2src, i2src.195
	movq	-400(%rbp), %rsi	# i2dest, i2dest.196
	movq	-536(%rbp), %rcx	# i3, tmp1642
	movq	32(%rcx), %rdi	# i3_143(D)->fld[3].rtx, D.29128
	movl	%eax, %r8d	# iftmp.194,
	movl	$0, %ecx	#,
	call	subst	#
	movq	%rax, -424(%rbp)	# newpat.197, newpat
	.loc 1 1973 0 is_stmt 1 discriminator 4
	movl	$1, -516(%rbp)	#, substed_i2
	.loc 1 1976 0 discriminator 4
	movl	n_occurrences(%rip), %eax	# n_occurrences, tmp1643
	movl	%eax, -444(%rbp)	# tmp1643, i2_is_used
.L272:
	.loc 1 1982 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L277	#,
	.loc 1 1982 0 is_stmt 0 discriminator 1
	movq	-424(%rbp), %rax	# newpat, newpat.198
	movzwl	(%rax), %eax	# newpat.198_649->code, D.29127
	cmpw	$49, %ax	#, D.29127
	je	.L277	#,
	.loc 1 1988 0 is_stmt 1
	movq	-384(%rbp), %rdx	# i1dest, i1dest.199
	leaq	-424(%rbp), %rax	#, tmp1644
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rsi	# tmp1644,
	movl	$0, %edi	#,
	call	combinable_i3pat	#
	testl	%eax, %eax	# D.29124
	jne	.L278	#,
	.loc 1 1991 0
	call	undo_all	#
	.loc 1 1992 0
	movl	$0, %eax	#, D.29123
	jmp	.L475	#
.L278:
	.loc 1 1995 0
	movl	$0, n_occurrences(%rip)	#, n_occurrences
	.loc 1 1996 0
	movq	-552(%rbp), %rax	# i1, tmp1645
	movl	8(%rax), %edx	# i1_3->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.201
	cmpl	%eax, %edx	# max_uid_cuid.201, D.29124
	jle	.L279	#,
	.loc 1 1996 0 is_stmt 0 discriminator 1
	movq	-552(%rbp), %rax	# i1, tmp1646
	movq	%rax, %rdi	# tmp1646,
	call	insn_cuid	#
	jmp	.L280	#
.L279:
	.loc 1 1996 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.202
	movq	-552(%rbp), %rax	# i1, tmp1647
	movl	8(%rax), %eax	# i1_3->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.202, D.29126
	movl	(%rax), %eax	# *_661, iftmp.200
.L280:
	.loc 1 1996 0 discriminator 3
	movl	%eax, subst_low_cuid(%rip)	# iftmp.200, subst_low_cuid
	.loc 1 1997 0 is_stmt 1 discriminator 3
	movq	-376(%rbp), %rdx	# i1src, i1src.203
	movq	-384(%rbp), %rsi	# i1dest, i1dest.204
	movq	-424(%rbp), %rax	# newpat, newpat.205
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# newpat.205,
	call	subst	#
	movq	%rax, -424(%rbp)	# newpat.206, newpat
	.loc 1 1998 0 discriminator 3
	movl	$1, -512(%rbp)	#, substed_i1
.L277:
	.loc 1 2010 0
	call	max_reg_num	#
	.loc 1 2003 0
	cmpl	-448(%rbp), %eax	# maxreg, D.29124
	jne	.L281	#,
	.loc 1 2012 0
	movq	-424(%rbp), %rax	# newpat, newpat.207
	movzwl	(%rax), %eax	# newpat.207_669->code, D.29127
	cmpw	$49, %ax	#, D.29127
	je	.L281	#,
	.loc 1 2015 0
	movq	-424(%rbp), %rax	# newpat, newpat.208
	movzwl	(%rax), %eax	# newpat.208_671->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L282	#,
	.loc 1 2015 0 is_stmt 0 discriminator 1
	movq	-424(%rbp), %rax	# newpat, newpat.209
	movq	16(%rax), %rax	# newpat.209_673->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _674->code, D.29127
	cmpw	$78, %ax	#, D.29127
	jne	.L282	#,
	.loc 1 2016 0 is_stmt 1
	cmpl	$0, -468(%rbp)	#, have_mult
	jne	.L282	#,
.L281:
	.loc 1 2018 0
	call	undo_all	#
	.loc 1 2019 0
	movl	$0, %eax	#, D.29123
	jmp	.L475	#
.L282:
	.loc 1 2027 0
	cmpl	$0, -508(%rbp)	#, added_sets_1
	jne	.L283	#,
	.loc 1 2027 0 is_stmt 0 discriminator 1
	cmpl	$0, -504(%rbp)	#, added_sets_2
	je	.L198	#,
.L283:
	.loc 1 2029 0 is_stmt 1
	movl	combine_extras(%rip), %eax	# combine_extras, combine_extras.210
	addl	$1, %eax	#, combine_extras.211
	movl	%eax, combine_extras(%rip)	# combine_extras.211, combine_extras
	.loc 1 2031 0
	movq	-424(%rbp), %rax	# newpat, newpat.212
	movzwl	(%rax), %eax	# newpat.212_678->code, D.29127
	cmpw	$39, %ax	#, D.29127
	jne	.L284	#,
.LBB15:
	.loc 1 2033 0
	movq	-424(%rbp), %rax	# newpat, newpat.213
	movq	8(%rax), %rax	# newpat.213_680->fld[0].rtvec, tmp1648
	movq	%rax, -128(%rbp)	# tmp1648, old
	.loc 1 2034 0
	movq	-424(%rbp), %rax	# newpat, newpat.214
	movq	8(%rax), %rax	# newpat.214_682->fld[0].rtvec, D.29130
	movl	(%rax), %edx	# _683->num_elem, D.29124
	movl	-508(%rbp), %eax	# added_sets_1, tmp1649
	addl	%eax, %edx	# tmp1649, D.29124
	movl	-504(%rbp), %eax	# added_sets_2, tmp1653
	addl	%edx, %eax	# D.29124, tmp1652
	movl	%eax, -500(%rbp)	# tmp1652, total_sets
	.loc 1 2035 0
	movl	-500(%rbp), %eax	# total_sets, tmp1654
	movl	%eax, %edi	# tmp1654,
	call	rtvec_alloc	#
	movq	%rax, %rdx	# D.29130,
	movl	$0, %esi	#,
	movl	$39, %edi	#,
	call	gen_rtx_fmt_E	#
	movq	%rax, -424(%rbp)	# newpat.215, newpat
	.loc 1 2037 0
	movq	-128(%rbp), %rax	# old, tmp1655
	movl	(%rax), %eax	# old_681->num_elem, D.29124
	.loc 1 2036 0
	cltq
	leaq	0(,%rax,8), %rdx	#, D.29125
	movq	-128(%rbp), %rax	# old, tmp1656
	leaq	8(%rax), %rcx	#, D.29131
	movq	-424(%rbp), %rax	# newpat, newpat.216
	movq	8(%rax), %rax	# newpat.216_693->fld[0].rtvec, D.29130
	addq	$8, %rax	#, D.29141
	movq	%rcx, %rsi	# D.29131,
	movq	%rax, %rdi	# D.29141,
	call	memcpy	#
.LBE15:
	jmp	.L285	#
.L284:
.LBB16:
	.loc 1 2041 0
	movq	-424(%rbp), %rax	# newpat, tmp1657
	movq	%rax, -120(%rbp)	# tmp1657, old
	.loc 1 2042 0
	movl	-508(%rbp), %eax	# added_sets_1, tmp1658
	leal	1(%rax), %edx	#, D.29124
	movl	-504(%rbp), %eax	# added_sets_2, tmp1662
	addl	%edx, %eax	# D.29124, tmp1661
	movl	%eax, -500(%rbp)	# tmp1661, total_sets
	.loc 1 2043 0
	movl	-500(%rbp), %eax	# total_sets, tmp1663
	movl	%eax, %edi	# tmp1663,
	call	rtvec_alloc	#
	movq	%rax, %rdx	# D.29130,
	movl	$0, %esi	#,
	movl	$39, %edi	#,
	call	gen_rtx_fmt_E	#
	movq	%rax, -424(%rbp)	# newpat.217, newpat
	.loc 1 2044 0
	movq	-424(%rbp), %rax	# newpat, newpat.218
	movq	8(%rax), %rax	# newpat.218_701->fld[0].rtvec, D.29130
	movq	-120(%rbp), %rdx	# old, tmp1664
	movq	%rdx, 8(%rax)	# tmp1664, _702->elem
.L285:
.LBE16:
	.loc 1 2047 0
	cmpl	$0, -508(%rbp)	#, added_sets_1
	je	.L286	#,
	.loc 1 2048 0
	movq	-424(%rbp), %rax	# newpat, newpat.219
	movq	8(%rax), %rbx	# newpat.219_703->fld[0].rtvec, D.29130
	.loc 1 2049 0
	subl	$1, -500(%rbp)	#, total_sets
	movq	-552(%rbp), %rax	# i1, tmp1665
	movq	32(%rax), %rax	# i1_3->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _706->code, D.29127
	.loc 1 2050 0
	cmpw	$39, %ax	#, D.29127
	jne	.L287	#,
	.loc 1 2050 0 is_stmt 0 discriminator 1
	movq	-376(%rbp), %rdx	# i1src, i1src.221
	movq	-384(%rbp), %rax	# i1dest, i1dest.222
	movq	%rdx, %rcx	# i1src.221,
	movq	%rax, %rdx	# i1dest.222,
	movl	$0, %esi	#,
	movl	$47, %edi	#,
	call	gen_rtx_fmt_ee	#
	jmp	.L288	#
.L287:
	.loc 1 2050 0 discriminator 2
	movq	-552(%rbp), %rax	# i1, tmp1666
	movq	32(%rax), %rax	# i1_3->fld[3].rtx, iftmp.220
.L288:
	.loc 1 2049 0 is_stmt 1
	movl	-500(%rbp), %edx	# total_sets, tmp1668
	movslq	%edx, %rdx	# tmp1668, tmp1667
	movq	%rax, 8(%rbx,%rdx,8)	# iftmp.220, _704->elem
.L286:
	.loc 1 2052 0
	cmpl	$0, -504(%rbp)	#, added_sets_2
	je	.L198	#,
	.loc 1 2057 0
	cmpq	$0, -552(%rbp)	#, i1
	jne	.L289	#,
	.loc 1 2058 0
	movq	-424(%rbp), %rax	# newpat, newpat.223
	movq	8(%rax), %rax	# newpat.223_712->fld[0].rtvec, D.29130
	subl	$1, -500(%rbp)	#, total_sets
	movl	-500(%rbp), %edx	# total_sets, tmp1670
	movslq	%edx, %rdx	# tmp1670, tmp1669
	movq	-336(%rbp), %rcx	# i2pat, tmp1671
	movq	%rcx, 8(%rax,%rdx,8)	# tmp1671, _713->elem
	jmp	.L198	#
.L289:
	.loc 1 2061 0
	movq	-424(%rbp), %rax	# newpat, newpat.224
	movq	8(%rax), %rbx	# newpat.224_715->fld[0].rtvec, D.29130
	.loc 1 2062 0
	subl	$1, -500(%rbp)	#, total_sets
	movq	-376(%rbp), %rdx	# i1src, i1src.225
	movq	-384(%rbp), %rsi	# i1dest, i1dest.226
	movq	-336(%rbp), %rax	# i2pat, tmp1672
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp1672,
	call	subst	#
	movl	-500(%rbp), %edx	# total_sets, tmp1674
	movslq	%edx, %rdx	# tmp1674, tmp1673
	movq	%rax, 8(%rbx,%rdx,8)	# D.29128, _716->elem
.L198:
	.loc 1 2071 0
	movq	-424(%rbp), %rax	# newpat, newpat.227
	movq	%rax, %rdi	# newpat.227,
	call	mark_used_regs_combine	#
	.loc 1 2074 0
	leaq	-368(%rbp), %rdx	#, tmp1675
	movq	-536(%rbp), %rcx	# i3, tmp1676
	leaq	-424(%rbp), %rax	#, tmp1677
	movq	%rcx, %rsi	# tmp1676,
	movq	%rax, %rdi	# tmp1677,
	call	recog_for_combine	#
	movl	%eax, -496(%rbp)	# tmp1678, insn_code_number
	.loc 1 2085 0
	cmpl	$0, -496(%rbp)	#, insn_code_number
	jns	.L290	#,
	.loc 1 2085 0 is_stmt 0 discriminator 1
	movq	-424(%rbp), %rax	# newpat, newpat.228
	movzwl	(%rax), %eax	# newpat.228_725->code, D.29127
	cmpw	$39, %ax	#, D.29127
	jne	.L290	#,
	.loc 1 2086 0 is_stmt 1
	movq	-424(%rbp), %rax	# newpat, newpat.229
	movq	8(%rax), %rax	# newpat.229_727->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _728->num_elem, D.29124
	cmpl	$2, %eax	#, D.29124
	jne	.L290	#,
	.loc 1 2087 0
	movq	-424(%rbp), %rax	# newpat, newpat.230
	movq	8(%rax), %rax	# newpat.230_730->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _731->elem, D.29128
	movzwl	(%rax), %eax	# _732->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L290	#,
	.loc 1 2088 0
	movq	-424(%rbp), %rax	# newpat, newpat.231
	movq	8(%rax), %rax	# newpat.231_734->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _735->elem, D.29128
	movzwl	(%rax), %eax	# _736->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L290	#,
	.loc 1 2089 0
	movq	-424(%rbp), %rax	# newpat, newpat.232
	movq	8(%rax), %rax	# newpat.232_738->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _739->elem, D.29128
	movq	8(%rax), %rax	# _740->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _741->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L290	#,
	.loc 1 2090 0
	movq	-424(%rbp), %rax	# newpat, newpat.233
	movq	8(%rax), %rax	# newpat.233_743->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _744->elem, D.29128
	movq	8(%rax), %rdx	# _745->fld[0].rtx, D.29128
	movq	-536(%rbp), %rax	# i3, tmp1679
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp1679,
	call	find_reg_note	#
	testq	%rax, %rax	# D.29128
	je	.L290	#,
	.loc 1 2091 0
	movq	-424(%rbp), %rax	# newpat, newpat.234
	movq	8(%rax), %rax	# newpat.234_748->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _749->elem, D.29128
	movq	16(%rax), %rax	# _750->fld[1].rtx, D.29128
	movq	%rax, %rdi	# D.29128,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29124
	jne	.L290	#,
	.loc 1 2092 0
	movq	-424(%rbp), %rax	# newpat, newpat.235
	movq	%rax, %rdi	# newpat.235,
	call	asm_noperands	#
	testl	%eax, %eax	# D.29124
	jns	.L290	#,
	.loc 1 2094 0
	movq	-424(%rbp), %rax	# newpat, newpat.236
	movq	8(%rax), %rax	# newpat.236_755->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _756->elem, newpat.237
	movq	%rax, -424(%rbp)	# newpat.237, newpat
	.loc 1 2095 0
	leaq	-368(%rbp), %rdx	#, tmp1680
	movq	-536(%rbp), %rcx	# i3, tmp1681
	leaq	-424(%rbp), %rax	#, tmp1682
	movq	%rcx, %rsi	# tmp1681,
	movq	%rax, %rdi	# tmp1682,
	call	recog_for_combine	#
	movl	%eax, -496(%rbp)	# tmp1683, insn_code_number
	jmp	.L291	#
.L290:
	.loc 1 2098 0
	cmpl	$0, -496(%rbp)	#, insn_code_number
	jns	.L291	#,
	.loc 1 2098 0 is_stmt 0 discriminator 1
	movq	-424(%rbp), %rax	# newpat, newpat.238
	movzwl	(%rax), %eax	# newpat.238_759->code, D.29127
	cmpw	$39, %ax	#, D.29127
	jne	.L291	#,
	.loc 1 2099 0 is_stmt 1
	movq	-424(%rbp), %rax	# newpat, newpat.239
	movq	8(%rax), %rax	# newpat.239_761->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _762->num_elem, D.29124
	cmpl	$2, %eax	#, D.29124
	jne	.L291	#,
	.loc 1 2100 0
	movq	-424(%rbp), %rax	# newpat, newpat.240
	movq	8(%rax), %rax	# newpat.240_764->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _765->elem, D.29128
	movzwl	(%rax), %eax	# _766->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L291	#,
	.loc 1 2101 0
	movq	-424(%rbp), %rax	# newpat, newpat.241
	movq	8(%rax), %rax	# newpat.241_768->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _769->elem, D.29128
	movzwl	(%rax), %eax	# _770->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L291	#,
	.loc 1 2102 0
	movq	-424(%rbp), %rax	# newpat, newpat.242
	movq	8(%rax), %rax	# newpat.242_772->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _773->elem, D.29128
	movq	8(%rax), %rax	# _774->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _775->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L291	#,
	.loc 1 2103 0
	movq	-424(%rbp), %rax	# newpat, newpat.243
	movq	8(%rax), %rax	# newpat.243_777->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _778->elem, D.29128
	movq	8(%rax), %rdx	# _779->fld[0].rtx, D.29128
	movq	-536(%rbp), %rax	# i3, tmp1684
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp1684,
	call	find_reg_note	#
	testq	%rax, %rax	# D.29128
	je	.L291	#,
	.loc 1 2104 0
	movq	-424(%rbp), %rax	# newpat, newpat.244
	movq	8(%rax), %rax	# newpat.244_782->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _783->elem, D.29128
	movq	16(%rax), %rax	# _784->fld[1].rtx, D.29128
	movq	%rax, %rdi	# D.29128,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29124
	jne	.L291	#,
	.loc 1 2105 0
	movq	-424(%rbp), %rax	# newpat, newpat.245
	movq	%rax, %rdi	# newpat.245,
	call	asm_noperands	#
	testl	%eax, %eax	# D.29124
	jns	.L291	#,
	.loc 1 2107 0
	movq	-424(%rbp), %rax	# newpat, newpat.246
	movq	8(%rax), %rax	# newpat.246_789->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _790->elem, newpat.247
	movq	%rax, -424(%rbp)	# newpat.247, newpat
	.loc 1 2108 0
	leaq	-368(%rbp), %rdx	#, tmp1685
	movq	-536(%rbp), %rcx	# i3, tmp1686
	leaq	-424(%rbp), %rax	#, tmp1687
	movq	%rcx, %rsi	# tmp1686,
	movq	%rax, %rdi	# tmp1687,
	call	recog_for_combine	#
	movl	%eax, -496(%rbp)	# tmp1688, insn_code_number
.L291:
	.loc 1 2117 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L292	#,
	.loc 1 2117 0 is_stmt 0 discriminator 1
	cmpl	$0, -496(%rbp)	#, insn_code_number
	jns	.L292	#,
	movq	-424(%rbp), %rax	# newpat, newpat.248
	movzwl	(%rax), %eax	# newpat.248_793->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L292	#,
	.loc 1 2118 0 is_stmt 1
	movq	-424(%rbp), %rax	# newpat, newpat.249
	movq	%rax, %rdi	# newpat.249,
	call	asm_noperands	#
	testl	%eax, %eax	# D.29124
	jns	.L292	#,
.LBB17:
	.loc 1 2121 0
	movq	-400(%rbp), %rax	# i2dest, tmp1689
	movq	%rax, -296(%rbp)	# tmp1689, ni2dest
	.loc 1 2127 0
	movq	-424(%rbp), %rax	# newpat, newpat.250
	movq	-536(%rbp), %rdx	# i3, tmp1690
	movq	%rdx, %rsi	# tmp1690,
	movq	%rax, %rdi	# newpat.250,
	call	split_insns	#
	movq	%rax, -352(%rbp)	# m_split.251, m_split
	.loc 1 2136 0
	movq	-352(%rbp), %rax	# m_split, m_split.252
	testq	%rax, %rax	# m_split.252
	jne	.L293	#,
	.loc 1 2136 0 is_stmt 0 discriminator 1
	movq	-424(%rbp), %rdx	# newpat, newpat.253
	movq	-296(%rbp), %rax	# ni2dest, tmp1691
	movq	%rdx, %rsi	# newpat.253,
	movq	%rax, %rdi	# tmp1691,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29124
	jne	.L293	#,
	.loc 1 2140 0 is_stmt 1
	movq	-424(%rbp), %rax	# newpat, newpat.254
	movq	8(%rax), %rax	# newpat.254_803->fld[0].rtx, D.29128
	movzbl	2(%rax), %edx	# _804->mode, D.29133
	movq	-400(%rbp), %rax	# i2dest, i2dest.255
	movzbl	2(%rax), %eax	# i2dest.255_806->mode, D.29133
	cmpb	%al, %dl	# D.29133, D.29133
	je	.L294	#,
	.loc 1 2141 0
	movq	-424(%rbp), %rax	# newpat, newpat.256
	movq	8(%rax), %rax	# newpat.256_808->fld[0].rtx, D.29128
	movzbl	2(%rax), %eax	# _809->mode, D.29133
	testb	%al, %al	# D.29133
	je	.L294	#,
	.loc 1 2142 0
	movq	-400(%rbp), %rax	# i2dest, i2dest.257
	movzwl	(%rax), %eax	# i2dest.257_811->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L294	#,
	.loc 1 2143 0
	movq	-400(%rbp), %rax	# i2dest, i2dest.258
	movl	8(%rax), %eax	# i2dest.258_813->fld[0].rtuint, D.29129
	cmpl	$52, %eax	#, D.29129
	jbe	.L295	#,
	.loc 1 2144 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.259
	movq	-400(%rbp), %rdx	# i2dest, i2dest.260
	movl	8(%rdx), %edx	# i2dest.260_816->fld[0].rtuint, D.29129
	movl	%edx, %edx	# D.29129, tmp1692
	addq	$4, %rdx	#, tmp1693
	movq	(%rax,%rdx,8), %rax	# reg_n_info.259_815->data.reg, D.29139
	movl	12(%rax), %eax	# _818->sets, D.29124
	cmpl	$1, %eax	#, D.29124
	jne	.L294	#,
	.loc 1 2144 0 is_stmt 0 discriminator 1
	cmpl	$0, -504(%rbp)	#, added_sets_2
	jne	.L294	#,
	.loc 1 2145 0 is_stmt 1
	movq	-400(%rbp), %rax	# i2dest, i2dest.261
	movzbl	3(%rax), %eax	# *i2dest.261_820, D.29133
	andl	$8, %eax	#, D.29133
	testb	%al, %al	# D.29133
	jne	.L294	#,
.L295:
	.loc 1 2147 0
	movq	-400(%rbp), %rax	# i2dest, i2dest.262
	movl	8(%rax), %eax	# i2dest.262_823->fld[0].rtuint, D.29129
	.loc 1 2146 0
	movl	%eax, %edx	# D.29129, D.29124
	movq	-424(%rbp), %rax	# newpat, newpat.263
	movq	8(%rax), %rax	# newpat.263_826->fld[0].rtx, D.29128
	movzbl	2(%rax), %eax	# _827->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29136
	movl	%edx, %esi	# D.29124,
	movl	%eax, %edi	# D.29136,
	call	gen_rtx_REG	#
	movq	%rax, -296(%rbp)	# tmp1694, ni2dest
.L294:
	.loc 1 2149 0
	movq	-296(%rbp), %rax	# ni2dest, tmp1695
	movq	%rax, %rdx	# tmp1695,
	movl	$0, %esi	#,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, %rdx	#, D.29128
	movq	-424(%rbp), %rax	# newpat, newpat.264
	movq	%rax, %rsi	# newpat.264,
	movl	$2, %edi	#,
	movl	$0, %eax	#,
	call	gen_rtvec	#
	movq	%rax, %rdx	# D.29130,
	movl	$0, %esi	#,
	movl	$39, %edi	#,
	call	gen_rtx_fmt_E	#
	movq	-536(%rbp), %rdx	# i3, tmp1696
	movq	%rdx, %rsi	# tmp1696,
	movq	%rax, %rdi	# D.29128,
	call	split_insns	#
	movq	%rax, -352(%rbp)	# m_split.265, m_split
	.loc 1 2157 0
	movq	-352(%rbp), %rax	# m_split, m_split.266
	testq	%rax, %rax	# m_split.266
	jne	.L293	#,
	.loc 1 2157 0 is_stmt 0 discriminator 1
	movq	-400(%rbp), %rax	# i2dest, i2dest.267
	cmpq	%rax, -296(%rbp)	# i2dest.267, ni2dest
	je	.L293	#,
	.loc 1 2159 0 is_stmt 1
	movq	-400(%rbp), %rax	# i2dest, tmp1697
	movq	%rax, -296(%rbp)	# tmp1697, ni2dest
	.loc 1 2160 0
	movq	-400(%rbp), %rax	# i2dest, i2dest.268
	movq	%rax, %rdx	# i2dest.268,
	movl	$0, %esi	#,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, %rdx	#, D.29128
	movq	-424(%rbp), %rax	# newpat, newpat.269
	movq	%rax, %rsi	# newpat.269,
	movl	$2, %edi	#,
	movl	$0, %eax	#,
	call	gen_rtvec	#
	movq	%rax, %rdx	# D.29130,
	movl	$0, %esi	#,
	movl	$39, %edi	#,
	call	gen_rtx_fmt_E	#
	movq	-536(%rbp), %rdx	# i3, tmp1698
	movq	%rdx, %rsi	# tmp1698,
	movq	%rax, %rdi	# D.29128,
	call	split_insns	#
	movq	%rax, -352(%rbp)	# m_split.270, m_split
.L293:
	.loc 1 2171 0
	movq	-352(%rbp), %rax	# m_split, m_split.271
	testq	%rax, %rax	# m_split.271
	je	.L296	#,
	.loc 1 2171 0 is_stmt 0 discriminator 1
	movq	-352(%rbp), %rax	# m_split, m_split.272
	movzwl	(%rax), %eax	# m_split.272_846->code, D.29127
	cmpw	$24, %ax	#, D.29127
	jne	.L296	#,
	.loc 1 2172 0 is_stmt 1
	movq	-352(%rbp), %rax	# m_split, m_split.273
	movq	8(%rax), %rax	# m_split.273_848->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _849->num_elem, D.29124
	cmpl	$1, %eax	#, D.29124
	jne	.L296	#,
	.loc 1 2173 0
	movq	-352(%rbp), %rax	# m_split, m_split.274
	movq	8(%rax), %rax	# m_split.274_851->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _852->elem, D.29128
	movq	32(%rax), %rax	# _853->fld[3].rtx, m_split.275
	movq	%rax, -352(%rbp)	# m_split.275, m_split
.L296:
	.loc 1 2175 0
	movq	-352(%rbp), %rax	# m_split, m_split.276
	testq	%rax, %rax	# m_split.276
	je	.L297	#,
	.loc 1 2175 0 is_stmt 0 discriminator 1
	movq	-352(%rbp), %rax	# m_split, m_split.277
	movzwl	(%rax), %eax	# m_split.277_856->code, D.29127
	cmpw	$24, %ax	#, D.29127
	je	.L297	#,
	.loc 1 2177 0 is_stmt 1
	leaq	-368(%rbp), %rdx	#, tmp1699
	movq	-536(%rbp), %rcx	# i3, tmp1700
	leaq	-352(%rbp), %rax	#, tmp1701
	movq	%rcx, %rsi	# tmp1700,
	movq	%rax, %rdi	# tmp1701,
	call	recog_for_combine	#
	movl	%eax, -496(%rbp)	# tmp1702, insn_code_number
	.loc 1 2178 0
	cmpl	$0, -496(%rbp)	#, insn_code_number
	js	.L298	#,
	.loc 1 2179 0
	movq	-352(%rbp), %rax	# m_split, m_split.278
	movq	%rax, -424(%rbp)	# m_split.278, newpat
	.loc 1 2178 0
	jmp	.L299	#
.L298:
	.loc 1 2178 0 is_stmt 0 discriminator 1
	jmp	.L299	#
.L297:
	.loc 1 2181 0 is_stmt 1
	movq	-352(%rbp), %rax	# m_split, m_split.279
	testq	%rax, %rax	# m_split.279
	je	.L299	#,
	.loc 1 2181 0 is_stmt 0 discriminator 1
	movq	-352(%rbp), %rax	# m_split, m_split.280
	movzwl	(%rax), %eax	# m_split.280_861->code, D.29127
	cmpw	$24, %ax	#, D.29127
	jne	.L299	#,
	.loc 1 2182 0 is_stmt 1
	movq	-352(%rbp), %rax	# m_split, m_split.281
	movq	8(%rax), %rax	# m_split.281_863->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _864->num_elem, D.29124
	cmpl	$2, %eax	#, D.29124
	jne	.L299	#,
	.loc 1 2183 0
	movq	-544(%rbp), %rax	# i2, tmp1703
	movq	%rax, %rdi	# tmp1703,
	call	next_real_insn	#
	cmpq	-536(%rbp), %rax	# i3, D.29128
	je	.L300	#,
	.loc 1 2185 0
	movq	-544(%rbp), %rax	# i2, tmp1704
	movl	8(%rax), %edx	# i2_1->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.283
	.loc 1 2184 0
	cmpl	%eax, %edx	# max_uid_cuid.283, D.29124
	jle	.L301	#,
	.loc 1 2184 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1705
	movq	%rax, %rdi	# tmp1705,
	call	insn_cuid	#
	jmp	.L302	#
.L301:
	.loc 1 2185 0 is_stmt 1 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.284
	movq	-544(%rbp), %rax	# i2, tmp1706
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.284, D.29126
	.loc 1 2184 0 discriminator 2
	movl	(%rax), %eax	# *_874, iftmp.282
.L302:
	.loc 1 2184 0 is_stmt 0 discriminator 3
	movq	-352(%rbp), %rdx	# m_split, m_split.285
	movq	8(%rdx), %rdx	# m_split.285_876->fld[0].rtvec, D.29130
	movq	8(%rdx), %rdx	# _877->elem, D.29128
	movq	32(%rdx), %rdx	# _878->fld[3].rtx, D.29128
	movl	%eax, %esi	# iftmp.282,
	movq	%rdx, %rdi	# D.29128,
	call	use_crosses_set_p	#
	testl	%eax, %eax	# D.29124
	jne	.L299	#,
.L300:
.LBB18:
	.loc 1 2188 0 is_stmt 1
	movq	-352(%rbp), %rax	# m_split, m_split.286
	movq	8(%rax), %rax	# m_split.286_881->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _882->elem, D.29128
	movq	32(%rax), %rax	# _883->fld[3].rtx, newi3pat.287
	movq	%rax, -344(%rbp)	# newi3pat.287, newi3pat
	.loc 1 2189 0
	movq	-352(%rbp), %rax	# m_split, m_split.288
	movq	8(%rax), %rax	# m_split.288_885->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _886->elem, D.29128
	movq	32(%rax), %rax	# _887->fld[3].rtx, newi2pat.289
	movq	%rax, -416(%rbp)	# newi2pat.289, newi2pat
	.loc 1 2191 0
	movq	-352(%rbp), %rax	# m_split, m_split.291
	movq	8(%rax), %rax	# m_split.291_889->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _890->elem, D.29128
	movzwl	(%rax), %eax	# _891->code, D.29127
	movzwl	%ax, %eax	# D.29127, D.29124
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29132
	cmpb	$105, %al	#, D.29132
	jne	.L303	#,
	.loc 1 2191 0 is_stmt 0 discriminator 1
	movq	-352(%rbp), %rax	# m_split, m_split.293
	movq	8(%rax), %rax	# m_split.293_895->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _896->elem, D.29128
	movq	32(%rax), %rax	# _897->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _898->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L304	#,
	.loc 1 2191 0 discriminator 3
	movq	-352(%rbp), %rax	# m_split, m_split.294
	movq	8(%rax), %rax	# m_split.294_900->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _901->elem, D.29128
	movq	32(%rax), %rax	# _902->fld[3].rtx, iftmp.292
	jmp	.L306	#
.L304:
	.loc 1 2191 0 discriminator 4
	movq	-352(%rbp), %rax	# m_split, m_split.295
	movq	8(%rax), %rax	# m_split.295_904->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _905->elem, D.29128
	movq	32(%rax), %rdx	# _906->fld[3].rtx, D.29128
	movq	-352(%rbp), %rax	# m_split, m_split.296
	movq	8(%rax), %rax	# m_split.296_908->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _909->elem, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	single_set_2	#
	jmp	.L306	#
.L303:
	.loc 1 2191 0 discriminator 2
	movl	$0, %eax	#, iftmp.290
.L306:
	.loc 1 2191 0 discriminator 5
	movq	%rax, -112(%rbp)	# iftmp.290, i3set
	.loc 1 2192 0 is_stmt 1 discriminator 5
	movq	-352(%rbp), %rax	# m_split, m_split.298
	movq	8(%rax), %rax	# m_split.298_915->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _916->elem, D.29128
	movzwl	(%rax), %eax	# _917->code, D.29127
	movzwl	%ax, %eax	# D.29127, D.29124
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29132
	cmpb	$105, %al	#, D.29132
	jne	.L307	#,
	.loc 1 2192 0 is_stmt 0 discriminator 1
	movq	-352(%rbp), %rax	# m_split, m_split.300
	movq	8(%rax), %rax	# m_split.300_921->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _922->elem, D.29128
	movq	32(%rax), %rax	# _923->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _924->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L308	#,
	.loc 1 2192 0 discriminator 3
	movq	-352(%rbp), %rax	# m_split, m_split.301
	movq	8(%rax), %rax	# m_split.301_926->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _927->elem, D.29128
	movq	32(%rax), %rax	# _928->fld[3].rtx, iftmp.299
	jmp	.L310	#
.L308:
	.loc 1 2192 0 discriminator 4
	movq	-352(%rbp), %rax	# m_split, m_split.302
	movq	8(%rax), %rax	# m_split.302_930->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _931->elem, D.29128
	movq	32(%rax), %rdx	# _932->fld[3].rtx, D.29128
	movq	-352(%rbp), %rax	# m_split, m_split.303
	movq	8(%rax), %rax	# m_split.303_934->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _935->elem, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	single_set_2	#
	jmp	.L310	#
.L307:
	.loc 1 2192 0 discriminator 2
	movl	$0, %eax	#, iftmp.297
.L310:
	.loc 1 2192 0 discriminator 5
	movq	%rax, -104(%rbp)	# iftmp.297, i2set
	.loc 1 2198 0 is_stmt 1 discriminator 5
	movq	-400(%rbp), %rax	# i2dest, i2dest.304
	movl	8(%rax), %eax	# i2dest.304_941->fld[0].rtuint, D.29129
	cmpl	$52, %eax	#, D.29129
	jbe	.L311	#,
	.loc 1 2199 0
	movq	cfun(%rip), %rax	# cfun, cfun.305
	movq	24(%rax), %rax	# cfun.305_943->emit, D.29140
	movq	80(%rax), %rdx	# _944->x_regno_reg_rtx, D.29131
	movq	-400(%rbp), %rax	# i2dest, i2dest.306
	movl	8(%rax), %eax	# i2dest.306_946->fld[0].rtuint, D.29129
	movl	%eax, %eax	# D.29129, D.29125
	salq	$3, %rax	#, D.29125
	addq	%rax, %rdx	# D.29125, D.29131
	movq	-296(%rbp), %rax	# ni2dest, tmp1709
	movq	%rax, %rsi	# tmp1709,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
.L311:
	.loc 1 2201 0
	leaq	-360(%rbp), %rdx	#, tmp1710
	movq	-544(%rbp), %rcx	# i2, tmp1711
	leaq	-416(%rbp), %rax	#, tmp1712
	movq	%rcx, %rsi	# tmp1711,
	movq	%rax, %rdi	# tmp1712,
	call	recog_for_combine	#
	movl	%eax, -492(%rbp)	# tmp1713, i2_code_number
	.loc 1 2207 0
	cmpl	$0, -492(%rbp)	#, i2_code_number
	js	.L312	#,
	.loc 1 2207 0 is_stmt 0 discriminator 1
	cmpq	$0, -104(%rbp)	#, i2set
	je	.L312	#,
	cmpq	$0, -112(%rbp)	#, i3set
	je	.L312	#,
	.loc 1 2208 0 is_stmt 1
	movq	-544(%rbp), %rax	# i2, tmp1714
	movq	%rax, %rdi	# tmp1714,
	call	next_real_insn	#
	cmpq	-536(%rbp), %rax	# i3, D.29128
	je	.L313	#,
	.loc 1 2209 0
	movq	-104(%rbp), %rax	# i2set, tmp1715
	movq	8(%rax), %rax	# i2set_940->fld[0].rtx, D.29128
	movq	-536(%rbp), %rdx	# i3, tmp1716
	movq	-544(%rbp), %rcx	# i2, tmp1717
	movq	%rcx, %rsi	# tmp1717,
	movq	%rax, %rdi	# D.29128,
	call	reg_used_between_p	#
	testl	%eax, %eax	# D.29124
	jne	.L312	#,
.L313:
	.loc 1 2210 0
	leaq	-368(%rbp), %rdx	#, tmp1718
	movq	-536(%rbp), %rcx	# i3, tmp1719
	leaq	-344(%rbp), %rax	#, tmp1720
	movq	%rcx, %rsi	# tmp1719,
	movq	%rax, %rdi	# tmp1720,
	call	recog_for_combine	#
	movl	%eax, -496(%rbp)	# tmp1721, insn_code_number
.L312:
	.loc 1 2212 0
	cmpl	$0, -496(%rbp)	#, insn_code_number
	js	.L314	#,
	.loc 1 2213 0
	movq	-344(%rbp), %rax	# newi3pat, newi3pat.307
	movq	%rax, -424(%rbp)	# newi3pat.307, newpat
.L314:
	.loc 1 2218 0
	cmpl	$0, -496(%rbp)	#, insn_code_number
	js	.L299	#,
.LBB19:
	.loc 1 2220 0
	movq	-112(%rbp), %rax	# i3set, tmp1722
	movq	8(%rax), %rax	# i3set_914->fld[0].rtx, tmp1723
	movq	%rax, -288(%rbp)	# tmp1723, new_i3_dest
	.loc 1 2221 0
	movq	-104(%rbp), %rax	# i2set, tmp1724
	movq	8(%rax), %rax	# i2set_940->fld[0].rtx, tmp1725
	movq	%rax, -280(%rbp)	# tmp1725, new_i2_dest
	.loc 1 2223 0
	jmp	.L316	#
.L317:
	.loc 1 2226 0
	movq	-288(%rbp), %rax	# new_i3_dest, tmp1726
	movq	8(%rax), %rax	# new_i3_dest_45->fld[0].rtx, tmp1727
	movq	%rax, -288(%rbp)	# tmp1727, new_i3_dest
.L316:
	.loc 1 2223 0 discriminator 1
	movq	-288(%rbp), %rax	# new_i3_dest, tmp1728
	movzwl	(%rax), %eax	# new_i3_dest_45->code, D.29127
	cmpw	$133, %ax	#, D.29127
	je	.L317	#,
	.loc 1 2224 0
	movq	-288(%rbp), %rax	# new_i3_dest, tmp1729
	movzwl	(%rax), %eax	# new_i3_dest_45->code, D.29127
	cmpw	$64, %ax	#, D.29127
	je	.L317	#,
	.loc 1 2225 0
	movq	-288(%rbp), %rax	# new_i3_dest, tmp1730
	movzwl	(%rax), %eax	# new_i3_dest_45->code, D.29127
	cmpw	$63, %ax	#, D.29127
	je	.L317	#,
	.loc 1 2228 0
	jmp	.L318	#
.L319:
	.loc 1 2231 0
	movq	-280(%rbp), %rax	# new_i2_dest, tmp1731
	movq	8(%rax), %rax	# new_i2_dest_46->fld[0].rtx, tmp1732
	movq	%rax, -280(%rbp)	# tmp1732, new_i2_dest
.L318:
	.loc 1 2228 0 discriminator 1
	movq	-280(%rbp), %rax	# new_i2_dest, tmp1733
	movzwl	(%rax), %eax	# new_i2_dest_46->code, D.29127
	cmpw	$133, %ax	#, D.29127
	je	.L319	#,
	.loc 1 2229 0
	movq	-280(%rbp), %rax	# new_i2_dest, tmp1734
	movzwl	(%rax), %eax	# new_i2_dest_46->code, D.29127
	cmpw	$64, %ax	#, D.29127
	je	.L319	#,
	.loc 1 2230 0
	movq	-280(%rbp), %rax	# new_i2_dest, tmp1735
	movzwl	(%rax), %eax	# new_i2_dest_46->code, D.29127
	cmpw	$63, %ax	#, D.29127
	je	.L319	#,
	.loc 1 2233 0
	movq	-288(%rbp), %rax	# new_i3_dest, tmp1736
	movzwl	(%rax), %eax	# new_i3_dest_45->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L299	#,
	.loc 1 2234 0
	movq	-280(%rbp), %rax	# new_i2_dest, tmp1737
	movzwl	(%rax), %eax	# new_i2_dest_46->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L299	#,
	.loc 1 2235 0
	movq	-288(%rbp), %rax	# new_i3_dest, tmp1738
	movl	8(%rax), %edx	# new_i3_dest_45->fld[0].rtuint, D.29129
	movq	-280(%rbp), %rax	# new_i2_dest, tmp1739
	movl	8(%rax), %eax	# new_i2_dest_46->fld[0].rtuint, D.29129
	cmpl	%eax, %edx	# D.29129, D.29129
	jne	.L299	#,
	.loc 1 2236 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.308
	movq	-280(%rbp), %rdx	# new_i2_dest, tmp1740
	movl	8(%rdx), %edx	# new_i2_dest_46->fld[0].rtuint, D.29129
	movl	%edx, %edx	# D.29129, tmp1741
	addq	$4, %rdx	#, tmp1742
	movq	(%rax,%rdx,8), %rax	# reg_n_info.308_969->data.reg, D.29139
	movl	12(%rax), %edx	# _971->sets, D.29124
	addl	$1, %edx	#, D.29124
	movl	%edx, 12(%rax)	# D.29124, _971->sets
.L299:
.LBE19:
.LBE18:
	.loc 1 2243 0
	cmpl	$0, -496(%rbp)	#, insn_code_number
	jns	.L320	#,
	.loc 1 2243 0 is_stmt 0 discriminator 1
	movq	-536(%rbp), %rdx	# i3, tmp1743
	leaq	-424(%rbp), %rax	#, tmp1744
	movq	%rdx, %rsi	# tmp1743,
	movq	%rax, %rdi	# tmp1744,
	call	find_split_point	#
	movq	%rax, -96(%rbp)	# tmp1745, split
	cmpq	$0, -96(%rbp)	#, split
	je	.L320	#,
	.loc 1 2249 0 is_stmt 1
	movq	-96(%rbp), %rax	# split, tmp1746
	movq	(%rax), %rax	# *split_976, D.29128
	movzbl	2(%rax), %edx	# _977->mode, D.29133
	movq	-400(%rbp), %rax	# i2dest, i2dest.309
	movzbl	2(%rax), %eax	# i2dest.309_979->mode, D.29133
	cmpb	%al, %dl	# D.29133, D.29133
	je	.L321	#,
	.loc 1 2250 0
	movq	-96(%rbp), %rax	# split, tmp1747
	movq	(%rax), %rax	# *split_976, D.29128
	movzbl	2(%rax), %eax	# _981->mode, D.29133
	testb	%al, %al	# D.29133
	je	.L321	#,
	.loc 1 2251 0
	movq	-400(%rbp), %rax	# i2dest, i2dest.310
	movl	8(%rax), %eax	# i2dest.310_983->fld[0].rtuint, D.29129
	cmpl	$52, %eax	#, D.29129
	jbe	.L321	#,
	.loc 1 2252 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.311
	movq	-400(%rbp), %rdx	# i2dest, i2dest.312
	movl	8(%rdx), %edx	# i2dest.312_986->fld[0].rtuint, D.29129
	movl	%edx, %edx	# D.29129, tmp1748
	addq	$4, %rdx	#, tmp1749
	movq	(%rax,%rdx,8), %rax	# reg_n_info.311_985->data.reg, D.29139
	movl	12(%rax), %eax	# _988->sets, D.29124
	cmpl	$1, %eax	#, D.29124
	jne	.L320	#,
	.loc 1 2252 0 is_stmt 0 discriminator 1
	cmpl	$0, -504(%rbp)	#, added_sets_2
	jne	.L320	#,
	.loc 1 2253 0 is_stmt 1
	movq	-400(%rbp), %rax	# i2dest, i2dest.313
	movzbl	3(%rax), %eax	# *i2dest.313_990, D.29133
	andl	$8, %eax	#, D.29133
	testb	%al, %al	# D.29133
	jne	.L320	#,
.L321:
	.loc 1 2254 0
	movq	-544(%rbp), %rax	# i2, tmp1750
	movq	%rax, %rdi	# tmp1750,
	call	next_real_insn	#
	cmpq	-536(%rbp), %rax	# i3, D.29128
	je	.L322	#,
	.loc 1 2255 0
	movq	-544(%rbp), %rax	# i2, tmp1751
	movl	8(%rax), %edx	# i2_1->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.315
	cmpl	%eax, %edx	# max_uid_cuid.315, D.29124
	jle	.L323	#,
	.loc 1 2255 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1752
	movq	%rax, %rdi	# tmp1752,
	call	insn_cuid	#
	jmp	.L324	#
.L323:
	.loc 1 2255 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.316
	movq	-544(%rbp), %rax	# i2, tmp1753
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.316, D.29126
	movl	(%rax), %eax	# *_1001, iftmp.314
.L324:
	.loc 1 2255 0 discriminator 3
	movq	-96(%rbp), %rdx	# split, tmp1754
	movq	(%rdx), %rdx	# *split_976, D.29128
	movl	%eax, %esi	# iftmp.314,
	movq	%rdx, %rdi	# D.29128,
	call	use_crosses_set_p	#
	testl	%eax, %eax	# D.29124
	jne	.L320	#,
.L322:
	.loc 1 2258 0 is_stmt 1
	movq	-424(%rbp), %rdx	# newpat, newpat.317
	movq	-400(%rbp), %rax	# i2dest, i2dest.318
	movq	%rdx, %rsi	# newpat.317,
	movq	%rax, %rdi	# i2dest.318,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29124
	jne	.L320	#,
.LBB20:
	.loc 1 2260 0
	movq	-400(%rbp), %rax	# i2dest, tmp1755
	movq	%rax, -272(%rbp)	# tmp1755, newdest
	.loc 1 2261 0
	movq	-96(%rbp), %rax	# split, tmp1756
	movq	(%rax), %rax	# *split_976, D.29128
	movzwl	(%rax), %eax	# _1009->code, D.29127
	movzwl	%ax, %eax	# D.29127, tmp1757
	movl	%eax, -460(%rbp)	# tmp1757, split_code
	.loc 1 2262 0
	movq	-96(%rbp), %rax	# split, tmp1758
	movq	(%rax), %rax	# *split_976, D.29128
	movzbl	2(%rax), %eax	# _1012->mode, D.29133
	movzbl	%al, %eax	# D.29133, tmp1759
	movl	%eax, -432(%rbp)	# tmp1759, split_mode
	.loc 1 2266 0
	movq	-400(%rbp), %rax	# i2dest, i2dest.319
	movzbl	2(%rax), %eax	# i2dest.319_1015->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29129
	cmpl	-432(%rbp), %eax	# split_mode, D.29129
	je	.L325	#,
	.loc 1 2266 0 is_stmt 0 discriminator 1
	cmpl	$0, -432(%rbp)	#, split_mode
	je	.L325	#,
	.loc 1 2268 0 is_stmt 1
	movq	-400(%rbp), %rax	# i2dest, i2dest.320
	movl	8(%rax), %eax	# i2dest.320_1018->fld[0].rtuint, D.29129
	movl	%eax, %edx	# D.29129, D.29124
	movl	-432(%rbp), %eax	# split_mode, tmp1760
	movl	%edx, %esi	# D.29124,
	movl	%eax, %edi	# tmp1760,
	call	gen_rtx_REG	#
	movq	%rax, -272(%rbp)	# tmp1761, newdest
	.loc 1 2270 0
	movq	-400(%rbp), %rax	# i2dest, i2dest.321
	movl	8(%rax), %eax	# i2dest.321_1022->fld[0].rtuint, D.29129
	cmpl	$52, %eax	#, D.29129
	jbe	.L325	#,
	.loc 1 2271 0
	movq	cfun(%rip), %rax	# cfun, cfun.322
	movq	24(%rax), %rax	# cfun.322_1024->emit, D.29140
	movq	80(%rax), %rdx	# _1025->x_regno_reg_rtx, D.29131
	movq	-400(%rbp), %rax	# i2dest, i2dest.323
	movl	8(%rax), %eax	# i2dest.323_1027->fld[0].rtuint, D.29129
	movl	%eax, %eax	# D.29129, D.29125
	salq	$3, %rax	#, D.29125
	addq	%rax, %rdx	# D.29125, D.29131
	movq	-272(%rbp), %rax	# newdest, tmp1762
	movq	%rax, %rsi	# tmp1762,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
.L325:
	.loc 1 2277 0
	cmpl	$78, -460(%rbp)	#, split_code
	jne	.L326	#,
	.loc 1 2278 0
	movq	-96(%rbp), %rax	# split, tmp1763
	movq	(%rax), %rax	# *split_976, D.29128
	movq	16(%rax), %rax	# _1032->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _1033->code, D.29127
	cmpw	$54, %ax	#, D.29127
	jne	.L326	#,
	.loc 1 2279 0
	movq	-96(%rbp), %rax	# split, tmp1764
	movq	(%rax), %rax	# *split_976, D.29128
	movq	16(%rax), %rax	# _1035->fld[1].rtx, D.29128
	movq	8(%rax), %rax	# _1036->fld[0].rtwint, D.29135
	testq	%rax, %rax	# D.29135
	jle	.L326	#,
	.loc 1 2280 0
	movq	-96(%rbp), %rax	# split, tmp1765
	movq	(%rax), %rax	# *split_976, D.29128
	movq	16(%rax), %rax	# _1038->fld[1].rtx, D.29128
	movq	8(%rax), %rax	# _1039->fld[0].rtwint, D.29135
	movq	%rax, %rdi	# D.29125,
	call	exact_log2_wide	#
	movl	%eax, -464(%rbp)	# tmp1766, i
	cmpl	$0, -464(%rbp)	#, i
	js	.L326	#,
	.loc 1 2282 0
	movl	-464(%rbp), %eax	# i, tmp1767
	cltq
	movq	%rax, %rsi	# D.29135,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29128
	movq	-96(%rbp), %rax	# split, tmp1768
	movq	(%rax), %rax	# *split_976, D.29128
	movq	8(%rax), %rdx	# _1045->fld[0].rtx, D.29128
	movl	-432(%rbp), %eax	# split_mode, tmp1769
	movl	%eax, %esi	# tmp1769,
	movl	$87, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, %rdx	#, D.29128
	movq	-96(%rbp), %rax	# split, tmp1770
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# tmp1770,
	call	do_SUBST	#
	.loc 1 2286 0
	movq	-96(%rbp), %rax	# split, tmp1771
	movq	(%rax), %rax	# *split_976, D.29128
	movzwl	(%rax), %eax	# _1048->code, D.29127
	movzwl	%ax, %eax	# D.29127, tmp1772
	movl	%eax, -460(%rbp)	# tmp1772, split_code
.L326:
	.loc 1 2292 0
	cmpl	$63, -460(%rbp)	#, split_code
	jne	.L327	#,
	.loc 1 2292 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# split, tmp1773
	movq	(%rax), %rax	# *split_976, D.29128
	movq	8(%rax), %rax	# _1051->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1052->code, D.29127
	cmpw	$66, %ax	#, D.29127
	jne	.L327	#,
	.loc 1 2293 0 is_stmt 1
	movq	-96(%rbp), %rax	# split, tmp1774
	movq	(%rax), %rax	# *split_976, D.29128
	movq	8(%rax), %rdx	# _1054->fld[0].rtx, D.29128
	movl	-432(%rbp), %eax	# split_mode, tmp1775
	movl	%eax, %esi	# tmp1775,
	movl	$121, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, %rdx	#, D.29128
	movq	-96(%rbp), %rax	# split, tmp1776
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# tmp1776,
	call	do_SUBST	#
.L327:
	.loc 1 2297 0
	movq	-96(%rbp), %rax	# split, tmp1777
	movq	(%rax), %rdx	# *split_976, D.29128
	movq	-272(%rbp), %rax	# newdest, tmp1778
	movq	%rdx, %rcx	# D.29128,
	movq	%rax, %rdx	# tmp1778,
	movl	$0, %esi	#,
	movl	$47, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -416(%rbp)	# newi2pat.324, newi2pat
	.loc 1 2298 0
	movq	-272(%rbp), %rdx	# newdest, tmp1779
	movq	-96(%rbp), %rax	# split, tmp1780
	movq	%rdx, %rsi	# tmp1779,
	movq	%rax, %rdi	# tmp1780,
	call	do_SUBST	#
	.loc 1 2299 0
	leaq	-360(%rbp), %rdx	#, tmp1781
	movq	-544(%rbp), %rcx	# i2, tmp1782
	leaq	-416(%rbp), %rax	#, tmp1783
	movq	%rcx, %rsi	# tmp1782,
	movq	%rax, %rdi	# tmp1783,
	call	recog_for_combine	#
	movl	%eax, -492(%rbp)	# tmp1784, i2_code_number
	.loc 1 2303 0
	cmpl	$0, -492(%rbp)	#, i2_code_number
	js	.L320	#,
	.loc 1 2303 0 is_stmt 0 discriminator 1
	cmpl	$78, -460(%rbp)	#, split_code
	jne	.L328	#,
	cmpl	$0, -468(%rbp)	#, have_mult
	je	.L320	#,
.L328:
	.loc 1 2304 0 is_stmt 1
	leaq	-368(%rbp), %rdx	#, tmp1785
	movq	-536(%rbp), %rcx	# i3, tmp1786
	leaq	-424(%rbp), %rax	#, tmp1787
	movq	%rcx, %rsi	# tmp1786,
	movq	%rax, %rdi	# tmp1787,
	call	recog_for_combine	#
	movl	%eax, -496(%rbp)	# tmp1788, insn_code_number
.LBE20:
.LBE17:
	.loc 1 2119 0
	jmp	.L329	#
.L320:
	jmp	.L329	#
.L292:
	.loc 1 2319 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L330	#,
	.loc 1 2319 0 is_stmt 0 discriminator 1
	cmpl	$0, -496(%rbp)	#, insn_code_number
	jns	.L330	#,
	movq	-424(%rbp), %rax	# newpat, newpat.325
	movq	%rax, %rdi	# newpat.325,
	call	asm_noperands	#
	testl	%eax, %eax	# D.29124
	jns	.L330	#,
	.loc 1 2320 0 is_stmt 1
	movq	-424(%rbp), %rax	# newpat, newpat.326
	movzwl	(%rax), %eax	# newpat.326_1063->code, D.29127
	cmpw	$39, %ax	#, D.29127
	jne	.L330	#,
	.loc 1 2321 0
	movq	-424(%rbp), %rax	# newpat, newpat.327
	movq	8(%rax), %rax	# newpat.327_1065->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _1066->num_elem, D.29124
	cmpl	$2, %eax	#, D.29124
	jne	.L330	#,
	.loc 1 2322 0
	movq	-424(%rbp), %rax	# newpat, newpat.328
	movq	8(%rax), %rax	# newpat.328_1068->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1069->elem, D.29128
	movzwl	(%rax), %eax	# _1070->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L330	#,
	.loc 1 2323 0
	movq	-424(%rbp), %rax	# newpat, newpat.329
	movq	8(%rax), %rax	# newpat.329_1072->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1073->elem, D.29128
	movq	16(%rax), %rax	# _1074->fld[1].rtx, D.29128
	movzwl	(%rax), %eax	# _1075->code, D.29127
	cmpw	$120, %ax	#, D.29127
	jne	.L330	#,
	.loc 1 2324 0
	movq	-424(%rbp), %rax	# newpat, newpat.330
	movq	8(%rax), %rax	# newpat.330_1077->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1078->elem, D.29128
	movzwl	(%rax), %eax	# _1079->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L330	#,
	.loc 1 2326 0
	movq	-424(%rbp), %rax	# newpat, newpat.331
	movq	8(%rax), %rax	# newpat.331_1081->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1082->elem, D.29128
	movq	16(%rax), %rax	# _1083->fld[1].rtx, D.29128
	.loc 1 2325 0
	movq	8(%rax), %rdx	# _1084->fld[0].rtx, D.29128
	movq	-424(%rbp), %rax	# newpat, newpat.332
	movq	8(%rax), %rax	# newpat.332_1086->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1087->elem, D.29128
	movq	16(%rax), %rax	# _1088->fld[1].rtx, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29124
	je	.L330	#,
	.loc 1 2328 0
	movq	-544(%rbp), %rax	# i2, tmp1789
	movl	8(%rax), %edx	# i2_1->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.334
	.loc 1 2327 0
	cmpl	%eax, %edx	# max_uid_cuid.334, D.29124
	jle	.L331	#,
	.loc 1 2327 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1790
	movq	%rax, %rdi	# tmp1790,
	call	insn_cuid	#
	jmp	.L332	#
.L331:
	.loc 1 2328 0 is_stmt 1 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.335
	movq	-544(%rbp), %rax	# i2, tmp1791
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.335, D.29126
	.loc 1 2327 0 discriminator 2
	movl	(%rax), %eax	# *_1098, iftmp.333
.L332:
	.loc 1 2327 0 is_stmt 0 discriminator 3
	movq	-424(%rbp), %rdx	# newpat, newpat.336
	movq	8(%rdx), %rdx	# newpat.336_1100->fld[0].rtvec, D.29130
	movq	16(%rdx), %rdx	# _1101->elem, D.29128
	movq	16(%rdx), %rdx	# _1102->fld[1].rtx, D.29128
	movl	%eax, %esi	# iftmp.333,
	movq	%rdx, %rdi	# D.29128,
	call	use_crosses_set_p	#
	testl	%eax, %eax	# D.29124
	jne	.L330	#,
	.loc 1 2329 0 is_stmt 1
	movq	-424(%rbp), %rax	# newpat, newpat.337
	movq	8(%rax), %rax	# newpat.337_1105->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1106->elem, D.29128
	movq	8(%rax), %rax	# _1107->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1108->code, D.29127
	cmpw	$133, %ax	#, D.29127
	je	.L330	#,
	.loc 1 2330 0
	movq	-424(%rbp), %rax	# newpat, newpat.338
	movq	8(%rax), %rax	# newpat.338_1110->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1111->elem, D.29128
	movq	8(%rax), %rax	# _1112->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1113->code, D.29127
	cmpw	$64, %ax	#, D.29127
	je	.L330	#,
	.loc 1 2331 0
	movq	-424(%rbp), %rax	# newpat, newpat.339
	movq	8(%rax), %rax	# newpat.339_1115->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1116->elem, D.29128
	movq	8(%rax), %rax	# _1117->fld[0].rtx, tmp1792
	movq	%rax, -328(%rbp)	# tmp1792, temp
	.loc 1 2332 0
	movq	-328(%rbp), %rax	# temp, tmp1793
	movzwl	(%rax), %eax	# temp_1118->code, D.29127
	.loc 1 2336 0
	cmpw	$61, %ax	#, D.29127
	jne	.L333	#,
	.loc 1 2333 0
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.341
	movq	-328(%rbp), %rax	# temp, tmp1794
	movl	8(%rax), %eax	# temp_1118->fld[0].rtuint, D.29129
	movl	%eax, %eax	# D.29129, D.29125
	salq	$3, %rax	#, D.29125
	addq	%rdx, %rax	# reg_nonzero_bits.341, D.29142
	movq	(%rax), %rax	# *_1124, D.29125
	testq	%rax, %rax	# D.29125
	je	.L333	#,
	.loc 1 2334 0
	movq	-328(%rbp), %rax	# temp, tmp1795
	movzbl	2(%rax), %eax	# temp_1118->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29124
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29127
	movzwl	%ax, %edx	# D.29127, D.29124
	movl	target_flags(%rip), %eax	# target_flags, target_flags.343
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	je	.L334	#,
	.loc 1 2334 0 is_stmt 0 discriminator 1
	movl	$64, %eax	#, iftmp.342
	jmp	.L335	#
.L334:
	.loc 1 2334 0 discriminator 2
	movl	$32, %eax	#, iftmp.342
.L335:
	.loc 1 2334 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.342, D.29124
	jge	.L333	#,
	.loc 1 2335 0 is_stmt 1
	movq	-328(%rbp), %rax	# temp, tmp1797
	movzbl	2(%rax), %eax	# temp_1118->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29124
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29127
	cmpw	$31, %ax	#, D.29127
	ja	.L333	#,
	.loc 1 2336 0
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.344
	movq	-328(%rbp), %rax	# temp, tmp1799
	movl	8(%rax), %eax	# temp_1118->fld[0].rtuint, D.29129
	movl	%eax, %eax	# D.29129, D.29125
	salq	$3, %rax	#, D.29125
	addq	%rdx, %rax	# reg_nonzero_bits.344, D.29142
	movq	(%rax), %rdx	# *_1141, D.29125
	.loc 1 2337 0
	movl	word_mode(%rip), %eax	# word_mode, word_mode.345
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29125
	.loc 1 2336 0
	cmpq	%rax, %rdx	# D.29125, D.29125
	je	.L333	#,
	.loc 1 2336 0 is_stmt 0 discriminator 2
	movl	$1, %eax	#, iftmp.340
	jmp	.L336	#
.L333:
	.loc 1 2336 0 discriminator 1
	movl	$0, %eax	#, iftmp.340
.L336:
	.loc 1 2331 0 is_stmt 1
	testl	%eax, %eax	# iftmp.340
	jne	.L330	#,
	.loc 1 2338 0
	movq	-424(%rbp), %rax	# newpat, newpat.347
	movq	8(%rax), %rax	# newpat.347_1148->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1149->elem, D.29128
	movq	8(%rax), %rax	# _1150->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1151->code, D.29127
	cmpw	$63, %ax	#, D.29127
	jne	.L337	#,
	.loc 1 2339 0
	movq	-424(%rbp), %rax	# newpat, newpat.348
	movq	8(%rax), %rax	# newpat.348_1153->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1154->elem, D.29128
	movq	8(%rax), %rax	# _1155->fld[0].rtx, D.29128
	movq	8(%rax), %rax	# _1156->fld[0].rtx, tmp1801
	movq	%rax, -328(%rbp)	# tmp1801, temp
	.loc 1 2340 0
	movq	-328(%rbp), %rax	# temp, tmp1802
	movzwl	(%rax), %eax	# temp_1157->code, D.29127
	.loc 1 2344 0
	cmpw	$61, %ax	#, D.29127
	jne	.L338	#,
	.loc 1 2341 0
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.350
	movq	-328(%rbp), %rax	# temp, tmp1803
	movl	8(%rax), %eax	# temp_1157->fld[0].rtuint, D.29129
	movl	%eax, %eax	# D.29129, D.29125
	salq	$3, %rax	#, D.29125
	addq	%rdx, %rax	# reg_nonzero_bits.350, D.29142
	movq	(%rax), %rax	# *_1163, D.29125
	testq	%rax, %rax	# D.29125
	je	.L338	#,
	.loc 1 2342 0
	movq	-328(%rbp), %rax	# temp, tmp1804
	movzbl	2(%rax), %eax	# temp_1157->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29124
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29127
	movzwl	%ax, %edx	# D.29127, D.29124
	movl	target_flags(%rip), %eax	# target_flags, target_flags.352
	andl	$33554432, %eax	#, D.29124
	testl	%eax, %eax	# D.29124
	je	.L339	#,
	.loc 1 2342 0 is_stmt 0 discriminator 1
	movl	$64, %eax	#, iftmp.351
	jmp	.L340	#
.L339:
	.loc 1 2342 0 discriminator 2
	movl	$32, %eax	#, iftmp.351
.L340:
	.loc 1 2342 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.351, D.29124
	jge	.L338	#,
	.loc 1 2343 0 is_stmt 1
	movq	-328(%rbp), %rax	# temp, tmp1806
	movzbl	2(%rax), %eax	# temp_1157->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29124
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29127
	cmpw	$31, %ax	#, D.29127
	ja	.L338	#,
	.loc 1 2344 0
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.353
	movq	-328(%rbp), %rax	# temp, tmp1808
	movl	8(%rax), %eax	# temp_1157->fld[0].rtuint, D.29129
	movl	%eax, %eax	# D.29129, D.29125
	salq	$3, %rax	#, D.29125
	addq	%rdx, %rax	# reg_nonzero_bits.353, D.29142
	movq	(%rax), %rdx	# *_1180, D.29125
	.loc 1 2345 0
	movl	word_mode(%rip), %eax	# word_mode, word_mode.354
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29125
	.loc 1 2344 0
	cmpq	%rax, %rdx	# D.29125, D.29125
	je	.L338	#,
	.loc 1 2344 0 is_stmt 0 discriminator 2
	movl	$1, %eax	#, iftmp.349
	jmp	.L341	#
.L338:
	.loc 1 2344 0 discriminator 1
	movl	$0, %eax	#, iftmp.349
.L341:
	.loc 1 2338 0 is_stmt 1
	testl	%eax, %eax	# iftmp.349
	jne	.L330	#,
.L337:
	.loc 1 2347 0
	movq	-424(%rbp), %rax	# newpat, newpat.356
	movq	8(%rax), %rax	# newpat.356_1187->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1188->elem, D.29128
	.loc 1 2346 0
	movq	16(%rax), %rdx	# _1189->fld[1].rtx, D.29128
	movq	-424(%rbp), %rax	# newpat, newpat.357
	movq	8(%rax), %rax	# newpat.357_1191->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1192->elem, D.29128
	movq	8(%rax), %rax	# _1193->fld[0].rtx, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29124
	jne	.L330	#,
	.loc 1 2349 0
	movq	-424(%rbp), %rax	# newpat, newpat.358
	movq	8(%rax), %rax	# newpat.358_1196->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1197->elem, D.29128
	.loc 1 2348 0
	movq	8(%rax), %rdx	# _1198->fld[0].rtx, D.29128
	movq	-536(%rbp), %rax	# i3, tmp1810
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp1810,
	call	find_reg_note	#
	testq	%rax, %rax	# D.29128
	jne	.L330	#,
.LBB21:
	.loc 1 2353 0
	movq	-424(%rbp), %rax	# newpat, newpat.359
	movq	8(%rax), %rax	# newpat.359_1201->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1202->elem, newi2pat.360
	movq	%rax, -416(%rbp)	# newi2pat.360, newi2pat
	.loc 1 2354 0
	movq	-424(%rbp), %rax	# newpat, newpat.361
	movq	8(%rax), %rax	# newpat.361_1204->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1205->elem, D.29128
	movq	8(%rax), %rax	# _1206->fld[0].rtx, tmp1811
	movq	%rax, -88(%rbp)	# tmp1811, ni2dest
	.loc 1 2355 0
	movq	-424(%rbp), %rax	# newpat, newpat.362
	movq	8(%rax), %rax	# newpat.362_1208->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1209->elem, newpat.363
	movq	%rax, -424(%rbp)	# newpat.363, newpat
	.loc 1 2356 0
	movq	-424(%rbp), %rax	# newpat, newpat.364
	movq	16(%rax), %rax	# newpat.364_1211->fld[1].rtx, D.29128
	movzbl	2(%rax), %eax	# _1212->mode, D.29133
	movzbl	%al, %eax	# D.29133, D.29136
	movq	-88(%rbp), %rdx	# ni2dest, tmp1812
	movq	%rdx, %rsi	# tmp1812,
	movl	%eax, %edi	# D.29136,
	call	gen_lowpart_for_combine	#
	movq	-424(%rbp), %rdx	# newpat, newpat.365
	addq	$16, %rdx	#, D.29131
	movq	%rax, %rsi	# D.29128,
	movq	%rdx, %rdi	# D.29131,
	call	do_SUBST	#
	.loc 1 2358 0
	leaq	-360(%rbp), %rdx	#, tmp1813
	movq	-544(%rbp), %rcx	# i2, tmp1814
	leaq	-416(%rbp), %rax	#, tmp1815
	movq	%rcx, %rsi	# tmp1814,
	movq	%rax, %rdi	# tmp1815,
	call	recog_for_combine	#
	movl	%eax, -492(%rbp)	# tmp1816, i2_code_number
	.loc 1 2360 0
	cmpl	$0, -492(%rbp)	#, i2_code_number
	js	.L342	#,
	.loc 1 2361 0
	leaq	-368(%rbp), %rdx	#, tmp1817
	movq	-536(%rbp), %rcx	# i3, tmp1818
	leaq	-424(%rbp), %rax	#, tmp1819
	movq	%rcx, %rsi	# tmp1818,
	movq	%rax, %rdi	# tmp1819,
	call	recog_for_combine	#
	movl	%eax, -496(%rbp)	# tmp1820, insn_code_number
.L342:
	.loc 1 2363 0
	cmpl	$0, -496(%rbp)	#, insn_code_number
	js	.L343	#,
.LBB22:
	.loc 1 2377 0
	movq	-424(%rbp), %rdx	# newpat, newpat.366
	movq	-536(%rbp), %rax	# i3, tmp1821
	movq	%rdx, 32(%rax)	# newpat.366, i3_143(D)->fld[3].rtx
	.loc 1 2378 0
	movq	-536(%rbp), %rax	# i3, tmp1822
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# tmp1822,
	movl	$0, %esi	#,
	movl	$4, %edi	#,
	call	gen_rtx_fmt_ue	#
	movq	%rax, %rdi	# D.29128,
	call	distribute_links	#
	.loc 1 2389 0
	movq	-536(%rbp), %rax	# i3, tmp1823
	movq	24(%rax), %rax	# i3_143(D)->fld[2].rtx, tmp1824
	movq	%rax, -264(%rbp)	# tmp1824, insn
	jmp	.L344	#
.L349:
	.loc 1 2394 0
	movq	-264(%rbp), %rax	# insn, tmp1825
	movzwl	(%rax), %eax	# insn_49->code, D.29127
	movzwl	%ax, %eax	# D.29127, D.29124
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29132
	cmpb	$105, %al	#, D.29132
	jne	.L345	#,
	.loc 1 2394 0 is_stmt 0 discriminator 1
	movq	-264(%rbp), %rax	# insn, tmp1827
	movq	32(%rax), %rdx	# insn_49->fld[3].rtx, D.29128
	movq	-88(%rbp), %rax	# ni2dest, tmp1828
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# tmp1828,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29124
	je	.L345	#,
	.loc 1 2396 0 is_stmt 1
	movq	-264(%rbp), %rax	# insn, tmp1829
	movq	48(%rax), %rax	# insn_49->fld[5].rtx, tmp1830
	movq	%rax, -256(%rbp)	# tmp1830, link
	jmp	.L346	#
.L348:
	.loc 1 2398 0
	movq	-256(%rbp), %rax	# link, tmp1831
	movq	8(%rax), %rax	# link_50->fld[0].rtx, D.29128
	cmpq	-536(%rbp), %rax	# i3, D.29128
	jne	.L347	#,
	.loc 1 2399 0
	movq	-256(%rbp), %rax	# link, tmp1832
	movq	-552(%rbp), %rdx	# i1, tmp1833
	movq	%rdx, 8(%rax)	# tmp1833, link_50->fld[0].rtx
.L347:
	.loc 1 2397 0
	movq	-256(%rbp), %rax	# link, tmp1834
	movq	16(%rax), %rax	# link_50->fld[1].rtx, tmp1835
	movq	%rax, -256(%rbp)	# tmp1835, link
.L346:
	.loc 1 2396 0 discriminator 1
	cmpq	$0, -256(%rbp)	#, link
	jne	.L348	#,
	.loc 1 2401 0
	jmp	.L343	#
.L345:
	.loc 1 2392 0
	movq	-264(%rbp), %rax	# insn, tmp1836
	movq	24(%rax), %rax	# insn_49->fld[2].rtx, tmp1837
	movq	%rax, -264(%rbp)	# tmp1837, insn
.L344:
	.loc 1 2389 0 discriminator 1
	cmpq	$0, -264(%rbp)	#, insn
	je	.L343	#,
	.loc 1 2390 0
	movl	n_basic_blocks(%rip), %eax	# n_basic_blocks, n_basic_blocks.367
	leal	-1(%rax), %edx	#, D.29124
	movl	this_basic_block(%rip), %eax	# this_basic_block, this_basic_block.368
	cmpl	%eax, %edx	# this_basic_block.368, D.29124
	je	.L349	#,
	.loc 1 2391 0
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.369
	movl	this_basic_block(%rip), %edx	# this_basic_block, this_basic_block.370
	addl	$1, %edx	#, D.29124
	movslq	%edx, %rdx	# D.29124, tmp1838
	addq	$4, %rdx	#, tmp1839
	movq	(%rax,%rdx,8), %rax	# basic_block_info.369_1226->data.bb, D.29143
	movq	(%rax), %rax	# _1229->head, D.29128
	cmpq	-264(%rbp), %rax	# insn, D.29128
	jne	.L349	#,
.L343:
.LBE22:
.LBE21:
	.loc 1 2350 0
	jmp	.L329	#
.L330:
	.loc 1 2412 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L329	#,
	.loc 1 2412 0 is_stmt 0 discriminator 1
	cmpl	$0, -496(%rbp)	#, insn_code_number
	jns	.L329	#,
	movq	-424(%rbp), %rax	# newpat, newpat.371
	movq	%rax, %rdi	# newpat.371,
	call	asm_noperands	#
	testl	%eax, %eax	# D.29124
	jns	.L329	#,
	.loc 1 2413 0 is_stmt 1
	movq	-424(%rbp), %rax	# newpat, newpat.372
	movzwl	(%rax), %eax	# newpat.372_1242->code, D.29127
	cmpw	$39, %ax	#, D.29127
	jne	.L329	#,
	.loc 1 2414 0
	movq	-424(%rbp), %rax	# newpat, newpat.373
	movq	8(%rax), %rax	# newpat.373_1244->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _1245->num_elem, D.29124
	cmpl	$2, %eax	#, D.29124
	jne	.L329	#,
	.loc 1 2415 0
	movq	-424(%rbp), %rax	# newpat, newpat.374
	movq	8(%rax), %rax	# newpat.374_1247->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1248->elem, D.29128
	movzwl	(%rax), %eax	# _1249->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L329	#,
	.loc 1 2416 0
	movq	-424(%rbp), %rax	# newpat, newpat.375
	movq	8(%rax), %rax	# newpat.375_1251->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1252->elem, D.29128
	movq	8(%rax), %rax	# _1253->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1254->code, D.29127
	cmpw	$133, %ax	#, D.29127
	je	.L329	#,
	.loc 1 2417 0
	movq	-424(%rbp), %rax	# newpat, newpat.376
	movq	8(%rax), %rax	# newpat.376_1256->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1257->elem, D.29128
	movq	8(%rax), %rax	# _1258->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1259->code, D.29127
	cmpw	$64, %ax	#, D.29127
	je	.L329	#,
	.loc 1 2418 0
	movq	-424(%rbp), %rax	# newpat, newpat.377
	movq	8(%rax), %rax	# newpat.377_1261->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1262->elem, D.29128
	movzwl	(%rax), %eax	# _1263->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L329	#,
	.loc 1 2419 0
	movq	-424(%rbp), %rax	# newpat, newpat.378
	movq	8(%rax), %rax	# newpat.378_1265->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1266->elem, D.29128
	movq	8(%rax), %rax	# _1267->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1268->code, D.29127
	cmpw	$133, %ax	#, D.29127
	je	.L329	#,
	.loc 1 2420 0
	movq	-424(%rbp), %rax	# newpat, newpat.379
	movq	8(%rax), %rax	# newpat.379_1270->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1271->elem, D.29128
	movq	8(%rax), %rax	# _1272->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1273->code, D.29127
	cmpw	$64, %ax	#, D.29127
	je	.L329	#,
	.loc 1 2422 0
	movq	-544(%rbp), %rax	# i2, tmp1840
	movl	8(%rax), %edx	# i2_1->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.381
	.loc 1 2421 0
	cmpl	%eax, %edx	# max_uid_cuid.381, D.29124
	jle	.L350	#,
	.loc 1 2421 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1841
	movq	%rax, %rdi	# tmp1841,
	call	insn_cuid	#
	jmp	.L351	#
.L350:
	.loc 1 2422 0 is_stmt 1 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.382
	movq	-544(%rbp), %rax	# i2, tmp1842
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.382, D.29126
	.loc 1 2421 0 discriminator 2
	movl	(%rax), %eax	# *_1282, iftmp.380
.L351:
	.loc 1 2421 0 is_stmt 0 discriminator 3
	movq	-424(%rbp), %rdx	# newpat, newpat.383
	movq	8(%rdx), %rdx	# newpat.383_1284->fld[0].rtvec, D.29130
	movq	16(%rdx), %rdx	# _1285->elem, D.29128
	movq	16(%rdx), %rdx	# _1286->fld[1].rtx, D.29128
	movl	%eax, %esi	# iftmp.380,
	movq	%rdx, %rdi	# D.29128,
	call	use_crosses_set_p	#
	testl	%eax, %eax	# D.29124
	jne	.L329	#,
	.loc 1 2424 0 is_stmt 1
	movq	-424(%rbp), %rax	# newpat, newpat.384
	movq	8(%rax), %rax	# newpat.384_1289->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1290->elem, D.29128
	movq	8(%rax), %rax	# _1291->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1292->code, D.29127
	cmpw	$48, %ax	#, D.29127
	je	.L329	#,
	.loc 1 2425 0
	movq	-424(%rbp), %rax	# newpat, newpat.385
	movq	8(%rax), %rax	# newpat.385_1294->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1295->elem, D.29128
	movq	8(%rax), %rax	# _1296->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1297->code, D.29127
	cmpw	$48, %ax	#, D.29127
	je	.L329	#,
	.loc 1 2427 0
	movq	-424(%rbp), %rax	# newpat, newpat.386
	movq	8(%rax), %rax	# newpat.386_1299->fld[0].rtvec, D.29130
	.loc 1 2426 0
	movq	8(%rax), %rdx	# _1300->elem, D.29128
	movq	-424(%rbp), %rax	# newpat, newpat.387
	movq	8(%rax), %rax	# newpat.387_1302->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1303->elem, D.29128
	movq	8(%rax), %rax	# _1304->fld[0].rtx, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29124
	jne	.L329	#,
	.loc 1 2429 0
	movq	-424(%rbp), %rax	# newpat, newpat.388
	movq	8(%rax), %rax	# newpat.388_1307->fld[0].rtvec, D.29130
	.loc 1 2428 0
	movq	16(%rax), %rdx	# _1308->elem, D.29128
	movq	-424(%rbp), %rax	# newpat, newpat.389
	movq	8(%rax), %rax	# newpat.389_1310->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1311->elem, D.29128
	movq	8(%rax), %rax	# _1312->fld[0].rtx, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29124
	jne	.L329	#,
	.loc 1 2430 0
	movq	-424(%rbp), %rax	# newpat, newpat.390
	movq	8(%rax), %rax	# newpat.390_1315->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1316->elem, D.29128
	movq	16(%rax), %rax	# _1317->fld[1].rtx, D.29128
	movq	%rax, %rdi	# D.29128,
	call	contains_muldiv	#
	testl	%eax, %eax	# D.29124
	je	.L352	#,
	.loc 1 2431 0 discriminator 1
	movq	-424(%rbp), %rax	# newpat, newpat.391
	movq	8(%rax), %rax	# newpat.391_1320->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1321->elem, D.29128
	movq	16(%rax), %rax	# _1322->fld[1].rtx, D.29128
	movq	%rax, %rdi	# D.29128,
	call	contains_muldiv	#
	.loc 1 2430 0 discriminator 1
	testl	%eax, %eax	# D.29124
	jne	.L329	#,
.L352:
	.loc 1 2445 0
	movq	-424(%rbp), %rax	# newpat, newpat.392
	movq	8(%rax), %rax	# newpat.392_1325->fld[0].rtvec, D.29130
	movq	16(%rax), %rax	# _1326->elem, newi2pat.393
	movq	%rax, -416(%rbp)	# newi2pat.393, newi2pat
	.loc 1 2446 0
	movq	-424(%rbp), %rax	# newpat, newpat.394
	movq	8(%rax), %rax	# newpat.394_1328->fld[0].rtvec, D.29130
	movq	8(%rax), %rax	# _1329->elem, newpat.395
	movq	%rax, -424(%rbp)	# newpat.395, newpat
	.loc 1 2449 0
	leaq	-360(%rbp), %rdx	#, tmp1843
	movq	-544(%rbp), %rcx	# i2, tmp1844
	leaq	-416(%rbp), %rax	#, tmp1845
	movq	%rcx, %rsi	# tmp1844,
	movq	%rax, %rdi	# tmp1845,
	call	recog_for_combine	#
	movl	%eax, -492(%rbp)	# tmp1846, i2_code_number
	.loc 1 2451 0
	cmpl	$0, -492(%rbp)	#, i2_code_number
	js	.L329	#,
	.loc 1 2452 0
	leaq	-368(%rbp), %rdx	#, tmp1847
	movq	-536(%rbp), %rcx	# i3, tmp1848
	leaq	-424(%rbp), %rax	#, tmp1849
	movq	%rcx, %rsi	# tmp1848,
	movq	%rax, %rdi	# tmp1849,
	call	recog_for_combine	#
	movl	%eax, -496(%rbp)	# tmp1850, insn_code_number
.L329:
	.loc 1 2457 0
	cmpl	$0, -496(%rbp)	#, insn_code_number
	jns	.L353	#,
	.loc 1 2459 0
	movq	-424(%rbp), %rax	# newpat, newpat.396
	movq	%rax, %rdi	# newpat.396,
	call	check_asm_operands	#
	testl	%eax, %eax	# D.29124
	je	.L354	#,
	.loc 1 2459 0 is_stmt 0 discriminator 1
	cmpl	$0, -508(%rbp)	#, added_sets_1
	jne	.L354	#,
	cmpl	$0, -504(%rbp)	#, added_sets_2
	je	.L353	#,
.L354:
	.loc 1 2461 0 is_stmt 1
	call	undo_all	#
	.loc 1 2462 0
	movl	$0, %eax	#, D.29123
	jmp	.L475	#
.L353:
	.loc 1 2466 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	testq	%rax, %rax	# D.29128
	je	.L355	#,
.LBB23:
	.loc 1 2468 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	movq	32(%rax), %rax	# _1337->fld[3].rtx, other_pat.397
	movq	%rax, -352(%rbp)	# other_pat.397, other_pat
	.loc 1 2472 0
	movq	$0, newpat_used_regs(%rip)	#, newpat_used_regs
	.loc 1 2474 0
	movq	undobuf+16(%rip), %rcx	# undobuf.other_insn, D.29128
	leaq	-344(%rbp), %rdx	#, tmp1851
	leaq	-352(%rbp), %rax	#, tmp1852
	movq	%rcx, %rsi	# D.29128,
	movq	%rax, %rdi	# tmp1852,
	call	recog_for_combine	#
	movl	%eax, -488(%rbp)	# tmp1853, other_code_number
	.loc 1 2477 0
	cmpl	$0, -488(%rbp)	#, other_code_number
	jns	.L356	#,
	.loc 1 2477 0 is_stmt 0 discriminator 1
	movq	-352(%rbp), %rax	# other_pat, other_pat.398
	movq	%rax, %rdi	# other_pat.398,
	call	check_asm_operands	#
	testl	%eax, %eax	# D.29124
	jne	.L356	#,
	.loc 1 2479 0 is_stmt 1
	call	undo_all	#
	.loc 1 2480 0
	movl	$0, %eax	#, D.29123
	jmp	.L475	#
.L356:
	.loc 1 2483 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	movq	-352(%rbp), %rdx	# other_pat, other_pat.399
	movq	%rdx, 32(%rax)	# other_pat.399, _1344->fld[3].rtx
	.loc 1 2488 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	movq	56(%rax), %rax	# _1346->fld[6].rtx, tmp1854
	movq	%rax, -248(%rbp)	# tmp1854, note
	jmp	.L357	#
.L360:
	.loc 1 2490 0
	movq	-248(%rbp), %rax	# note, tmp1855
	movq	16(%rax), %rax	# note_51->fld[1].rtx, tmp1856
	movq	%rax, -80(%rbp)	# tmp1856, next
	.loc 1 2492 0
	movq	-248(%rbp), %rax	# note, tmp1857
	movzbl	2(%rax), %eax	# note_51->mode, D.29133
	cmpb	$10, %al	#, D.29133
	jne	.L358	#,
	.loc 1 2493 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	movq	32(%rax), %rdx	# _1350->fld[3].rtx, D.29128
	movq	-248(%rbp), %rax	# note, tmp1858
	movq	8(%rax), %rax	# note_51->fld[0].rtx, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	reg_set_p	#
	testl	%eax, %eax	# D.29124
	jne	.L358	#,
	.loc 1 2495 0
	movq	-248(%rbp), %rax	# note, tmp1859
	movq	8(%rax), %rax	# note_51->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1354->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L359	#,
	.loc 1 2496 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.400
	movq	-248(%rbp), %rdx	# note, tmp1860
	movq	8(%rdx), %rdx	# note_51->fld[0].rtx, D.29128
	movl	8(%rdx), %edx	# _1357->fld[0].rtuint, D.29129
	movl	%edx, %edx	# D.29129, tmp1861
	addq	$4, %rdx	#, tmp1862
	movq	(%rax,%rdx,8), %rax	# reg_n_info.400_1356->data.reg, D.29139
	movl	24(%rax), %edx	# _1359->deaths, D.29124
	subl	$1, %edx	#, D.29124
	movl	%edx, 24(%rax)	# D.29124, _1359->deaths
.L359:
	.loc 1 2498 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	movq	-248(%rbp), %rdx	# note, tmp1863
	movq	%rdx, %rsi	# tmp1863,
	movq	%rax, %rdi	# D.29128,
	call	remove_note	#
.L358:
	.loc 1 2488 0
	movq	-80(%rbp), %rax	# next, tmp1864
	movq	%rax, -248(%rbp)	# tmp1864, note
.L357:
	.loc 1 2488 0 is_stmt 0 discriminator 1
	cmpq	$0, -248(%rbp)	#, note
	jne	.L360	#,
	.loc 1 2502 0 is_stmt 1
	movq	-344(%rbp), %rax	# new_other_notes, tmp1865
	movq	%rax, -248(%rbp)	# tmp1865, note
	jmp	.L361	#
.L363:
	.loc 1 2503 0
	movq	-248(%rbp), %rax	# note, tmp1866
	movq	8(%rax), %rax	# note_52->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1365->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L362	#,
	.loc 1 2504 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.401
	movq	-248(%rbp), %rdx	# note, tmp1867
	movq	8(%rdx), %rdx	# note_52->fld[0].rtx, D.29128
	movl	8(%rdx), %edx	# _1368->fld[0].rtuint, D.29129
	movl	%edx, %edx	# D.29129, tmp1868
	addq	$4, %rdx	#, tmp1869
	movq	(%rax,%rdx,8), %rax	# reg_n_info.401_1367->data.reg, D.29139
	movl	24(%rax), %edx	# _1370->deaths, D.29124
	addl	$1, %edx	#, D.29124
	movl	%edx, 24(%rax)	# D.29124, _1370->deaths
.L362:
	.loc 1 2502 0
	movq	-248(%rbp), %rax	# note, tmp1870
	movq	16(%rax), %rax	# note_52->fld[1].rtx, tmp1871
	movq	%rax, -248(%rbp)	# tmp1871, note
.L361:
	.loc 1 2502 0 is_stmt 0 discriminator 1
	cmpq	$0, -248(%rbp)	#, note
	jne	.L363	#,
	.loc 1 2506 0 is_stmt 1
	movq	undobuf+16(%rip), %rdx	# undobuf.other_insn, D.29128
	movq	undobuf+16(%rip), %rsi	# undobuf.other_insn, D.29128
	movq	-344(%rbp), %rax	# new_other_notes, new_other_notes.402
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# new_other_notes.402,
	call	distribute_notes	#
.L355:
.LBE23:
.LBB24:
	.loc 1 2527 0
	movq	$0, -224(%rbp)	#, i1notes
	.loc 1 2528 0
	movq	$0, -216(%rbp)	#, i1links
	.loc 1 2529 0
	movq	$0, -344(%rbp)	#, midnotes
	.loc 1 2534 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.404
	.loc 1 2536 0
	testq	%rax, %rax	# newi2pat.404
	je	.L364	#,
	.loc 1 2534 0
	movq	-416(%rbp), %rdx	# newi2pat, newi2pat.405
	movq	-400(%rbp), %rax	# i2dest, i2dest.406
	movq	%rdx, %rsi	# newi2pat.405,
	movq	%rax, %rdi	# i2dest.406,
	call	reg_set_p	#
	testl	%eax, %eax	# D.29124
	jne	.L365	#,
.L364:
	.loc 1 2535 0
	cmpl	$0, -484(%rbp)	#, i2dest_in_i2src
	jne	.L365	#,
	.loc 1 2535 0 is_stmt 0 discriminator 1
	cmpl	$0, -476(%rbp)	#, i2dest_in_i1src
	jne	.L365	#,
	.loc 1 2536 0 is_stmt 1
	movq	-400(%rbp), %rax	# i2dest, iftmp.403
	jmp	.L366	#
.L365:
	movl	$0, %eax	#, iftmp.403
.L366:
	.loc 1 2534 0
	movq	%rax, -72(%rbp)	# iftmp.403, elim_i2
	.loc 1 2539 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L367	#,
	.loc 1 2537 0
	cmpl	$0, -480(%rbp)	#, i1dest_in_i1src
	jne	.L367	#,
	.loc 1 2538 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.408
	testq	%rax, %rax	# newi2pat.408
	je	.L368	#,
	.loc 1 2538 0 is_stmt 0 discriminator 1
	movq	-416(%rbp), %rdx	# newi2pat, newi2pat.409
	movq	-384(%rbp), %rax	# i1dest, i1dest.410
	movq	%rdx, %rsi	# newi2pat.409,
	movq	%rax, %rdi	# i1dest.410,
	call	reg_set_p	#
	testl	%eax, %eax	# D.29124
	jne	.L367	#,
.L368:
	.loc 1 2539 0 is_stmt 1
	movq	-384(%rbp), %rax	# i1dest, iftmp.407
	jmp	.L369	#
.L367:
	.loc 1 2539 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.407
.L369:
	.loc 1 2537 0 is_stmt 1
	movq	%rax, -64(%rbp)	# iftmp.407, elim_i1
	.loc 1 2543 0
	movq	-536(%rbp), %rax	# i3, tmp1872
	movq	56(%rax), %rax	# i3_143(D)->fld[6].rtx, tmp1873
	movq	%rax, -240(%rbp)	# tmp1873, i3notes
	movq	-536(%rbp), %rax	# i3, tmp1874
	movq	48(%rax), %rax	# i3_143(D)->fld[5].rtx, tmp1875
	movq	%rax, -56(%rbp)	# tmp1875, i3links
	.loc 1 2544 0
	movq	-544(%rbp), %rax	# i2, tmp1876
	movq	56(%rax), %rax	# i2_1->fld[6].rtx, tmp1877
	movq	%rax, -232(%rbp)	# tmp1877, i2notes
	movq	-544(%rbp), %rax	# i2, tmp1878
	movq	48(%rax), %rax	# i2_1->fld[5].rtx, tmp1879
	movq	%rax, -48(%rbp)	# tmp1879, i2links
	.loc 1 2545 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L370	#,
	.loc 1 2546 0
	movq	-552(%rbp), %rax	# i1, tmp1880
	movq	56(%rax), %rax	# i1_4->fld[6].rtx, tmp1881
	movq	%rax, -224(%rbp)	# tmp1881, i1notes
	movq	-552(%rbp), %rax	# i1, tmp1882
	movq	48(%rax), %rax	# i1_4->fld[5].rtx, tmp1883
	movq	%rax, -216(%rbp)	# tmp1883, i1links
.L370:
	.loc 1 2552 0
	movq	-240(%rbp), %rax	# i3notes, tmp1884
	movq	%rax, %rdi	# tmp1884,
	call	reset_used_flags	#
	.loc 1 2553 0
	movq	-232(%rbp), %rax	# i2notes, tmp1885
	movq	%rax, %rdi	# tmp1885,
	call	reset_used_flags	#
	.loc 1 2554 0
	movq	-224(%rbp), %rax	# i1notes, tmp1886
	movq	%rax, %rdi	# tmp1886,
	call	reset_used_flags	#
	.loc 1 2555 0
	movq	-424(%rbp), %rax	# newpat, newpat.411
	movq	%rax, %rdi	# newpat.411,
	call	reset_used_flags	#
	.loc 1 2556 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.412
	movq	%rax, %rdi	# newi2pat.412,
	call	reset_used_flags	#
	.loc 1 2557 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	testq	%rax, %rax	# D.29128
	je	.L371	#,
	.loc 1 2558 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	movq	32(%rax), %rax	# _1402->fld[3].rtx, D.29128
	movq	%rax, %rdi	# D.29128,
	call	reset_used_flags	#
.L371:
	.loc 1 2560 0
	movq	-240(%rbp), %rax	# i3notes, tmp1887
	movq	%rax, %rdi	# tmp1887,
	call	copy_rtx_if_shared	#
	movq	%rax, -240(%rbp)	# tmp1888, i3notes
	.loc 1 2561 0
	movq	-232(%rbp), %rax	# i2notes, tmp1889
	movq	%rax, %rdi	# tmp1889,
	call	copy_rtx_if_shared	#
	movq	%rax, -232(%rbp)	# tmp1890, i2notes
	.loc 1 2562 0
	movq	-224(%rbp), %rax	# i1notes, tmp1891
	movq	%rax, %rdi	# tmp1891,
	call	copy_rtx_if_shared	#
	movq	%rax, -224(%rbp)	# tmp1892, i1notes
	.loc 1 2563 0
	movq	-424(%rbp), %rax	# newpat, newpat.413
	movq	%rax, %rdi	# newpat.413,
	call	copy_rtx_if_shared	#
	movq	%rax, -424(%rbp)	# newpat.414, newpat
	.loc 1 2564 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.415
	movq	%rax, %rdi	# newi2pat.415,
	call	copy_rtx_if_shared	#
	movq	%rax, -416(%rbp)	# newi2pat.416, newi2pat
	.loc 1 2565 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	testq	%rax, %rax	# D.29128
	je	.L372	#,
	.loc 1 2566 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	movq	32(%rax), %rax	# _1412->fld[3].rtx, D.29128
	movq	%rax, %rdi	# D.29128,
	call	reset_used_flags	#
.L372:
	.loc 1 2568 0
	movq	-536(%rbp), %rax	# i3, tmp1893
	movl	-496(%rbp), %edx	# insn_code_number, tmp1894
	movl	%edx, 40(%rax)	# tmp1894, i3_143(D)->fld[4].rtint
	.loc 1 2569 0
	movq	-424(%rbp), %rdx	# newpat, newpat.417
	movq	-536(%rbp), %rax	# i3, tmp1895
	movq	%rdx, 32(%rax)	# newpat.417, i3_143(D)->fld[3].rtx
	.loc 1 2571 0
	movq	-536(%rbp), %rax	# i3, tmp1896
	movzwl	(%rax), %eax	# i3_143(D)->code, D.29127
	cmpw	$34, %ax	#, D.29127
	jne	.L373	#,
	.loc 1 2571 0 is_stmt 0 discriminator 1
	movq	-536(%rbp), %rax	# i3, tmp1897
	movq	64(%rax), %rax	# i3_143(D)->fld[7].rtx, D.29128
	testq	%rax, %rax	# D.29128
	je	.L373	#,
.LBB25:
	.loc 1 2573 0 is_stmt 1
	movq	-536(%rbp), %rax	# i3, tmp1898
	movq	64(%rax), %rax	# i3_143(D)->fld[7].rtx, tmp1899
	movq	%rax, -40(%rbp)	# tmp1899, call_usage
	.loc 1 2575 0
	movq	-40(%rbp), %rax	# call_usage, tmp1900
	movq	%rax, %rdi	# tmp1900,
	call	reset_used_flags	#
	.loc 1 2576 0
	movq	-40(%rbp), %rax	# call_usage, tmp1901
	movq	%rax, %rdi	# tmp1901,
	call	copy_rtx	#
	movq	%rax, -40(%rbp)	# tmp1902, call_usage
	.loc 1 2578 0
	cmpl	$0, -516(%rbp)	#, substed_i2
	je	.L374	#,
	.loc 1 2579 0
	movq	-392(%rbp), %rdx	# i2src, i2src.418
	movq	-400(%rbp), %rcx	# i2dest, i2dest.419
	movq	-40(%rbp), %rax	# call_usage, tmp1903
	movq	%rcx, %rsi	# i2dest.419,
	movq	%rax, %rdi	# tmp1903,
	call	replace_rtx	#
.L374:
	.loc 1 2581 0
	cmpl	$0, -512(%rbp)	#, substed_i1
	je	.L375	#,
	.loc 1 2582 0
	movq	-376(%rbp), %rdx	# i1src, i1src.420
	movq	-384(%rbp), %rcx	# i1dest, i1dest.421
	movq	-40(%rbp), %rax	# call_usage, tmp1904
	movq	%rcx, %rsi	# i1dest.421,
	movq	%rax, %rdi	# tmp1904,
	call	replace_rtx	#
.L375:
	.loc 1 2584 0
	movq	-536(%rbp), %rax	# i3, tmp1905
	movq	-40(%rbp), %rdx	# call_usage, tmp1906
	movq	%rdx, 64(%rax)	# tmp1906, i3_143(D)->fld[7].rtx
.L373:
.LBE25:
	.loc 1 2587 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	testq	%rax, %rax	# D.29128
	je	.L376	#,
	.loc 1 2588 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29128
	movl	-488(%rbp), %edx	# other_code_number, tmp1907
	movl	%edx, 40(%rax)	# tmp1907, _1424->fld[4].rtint
.L376:
	.loc 1 2599 0
	cmpl	$0, -472(%rbp)	#, i3_subst_into_i2
	je	.L377	#,
	.loc 1 2601 0
	movl	$0, -464(%rbp)	#, i
	jmp	.L378	#
.L386:
	.loc 1 2602 0
	movq	-544(%rbp), %rax	# i2, tmp1908
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _1429->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1910
	movslq	%edx, %rdx	# tmp1910, tmp1909
	movq	8(%rax,%rdx,8), %rax	# _1430->elem, D.29128
	movzwl	(%rax), %eax	# _1431->code, D.29127
	cmpw	$48, %ax	#, D.29127
	je	.L379	#,
	.loc 1 2603 0
	movq	-544(%rbp), %rax	# i2, tmp1911
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _1433->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1913
	movslq	%edx, %rdx	# tmp1913, tmp1912
	movq	8(%rax,%rdx,8), %rax	# _1434->elem, D.29128
	movq	8(%rax), %rax	# _1435->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1436->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L379	#,
	.loc 1 2604 0
	movq	-544(%rbp), %rax	# i2, tmp1914
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _1438->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1916
	movslq	%edx, %rdx	# tmp1916, tmp1915
	movq	8(%rax,%rdx,8), %rax	# _1439->elem, D.29128
	movq	8(%rax), %rdx	# _1440->fld[0].rtx, D.29128
	movq	-400(%rbp), %rax	# i2dest, i2dest.422
	cmpq	%rax, %rdx	# i2dest.422, D.29128
	je	.L379	#,
	.loc 1 2606 0
	movq	-544(%rbp), %rax	# i2, tmp1917
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _1443->fld[0].rtvec, D.29130
	movl	-464(%rbp), %edx	# i, tmp1919
	movslq	%edx, %rdx	# tmp1919, tmp1918
	movq	8(%rax,%rdx,8), %rax	# _1444->elem, D.29128
	.loc 1 2605 0
	movq	8(%rax), %rdx	# _1445->fld[0].rtx, D.29128
	movq	-544(%rbp), %rax	# i2, tmp1920
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp1920,
	call	find_reg_note	#
	testq	%rax, %rax	# D.29128
	jne	.L379	#,
	.loc 1 2607 0
	movq	-544(%rbp), %rax	# i2, tmp1921
	movq	24(%rax), %rax	# i2_1->fld[2].rtx, tmp1922
	movq	%rax, -328(%rbp)	# tmp1922, temp
	jmp	.L380	#
.L385:
	.loc 1 2611 0
	movq	-328(%rbp), %rax	# temp, tmp1923
	cmpq	-536(%rbp), %rax	# i3, tmp1923
	je	.L381	#,
	.loc 1 2611 0 is_stmt 0 discriminator 1
	movq	-328(%rbp), %rax	# temp, tmp1924
	movzwl	(%rax), %eax	# temp_30->code, D.29127
	movzwl	%ax, %eax	# D.29127, D.29124
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29132
	cmpb	$105, %al	#, D.29132
	jne	.L381	#,
	.loc 1 2612 0 is_stmt 1
	movq	-328(%rbp), %rax	# temp, tmp1926
	movq	48(%rax), %rax	# temp_30->fld[5].rtx, tmp1927
	movq	%rax, -320(%rbp)	# tmp1927, link
	jmp	.L382	#
.L384:
	.loc 1 2613 0
	movq	-320(%rbp), %rax	# link, tmp1928
	movq	8(%rax), %rax	# link_33->fld[0].rtx, D.29128
	cmpq	-544(%rbp), %rax	# i2, D.29128
	jne	.L383	#,
	.loc 1 2614 0
	movq	-320(%rbp), %rax	# link, tmp1929
	movq	-536(%rbp), %rdx	# i3, tmp1930
	movq	%rdx, 8(%rax)	# tmp1930, link_33->fld[0].rtx
.L383:
	.loc 1 2612 0
	movq	-320(%rbp), %rax	# link, tmp1931
	movq	16(%rax), %rax	# link_33->fld[1].rtx, tmp1932
	movq	%rax, -320(%rbp)	# tmp1932, link
.L382:
	.loc 1 2612 0 is_stmt 0 discriminator 1
	cmpq	$0, -320(%rbp)	#, link
	jne	.L384	#,
.L381:
	.loc 1 2610 0 is_stmt 1
	movq	-328(%rbp), %rax	# temp, tmp1933
	movq	24(%rax), %rax	# temp_30->fld[2].rtx, tmp1934
	movq	%rax, -328(%rbp)	# tmp1934, temp
.L380:
	.loc 1 2607 0 discriminator 1
	cmpq	$0, -328(%rbp)	#, temp
	je	.L379	#,
	.loc 1 2608 0
	movl	n_basic_blocks(%rip), %eax	# n_basic_blocks, n_basic_blocks.423
	leal	-1(%rax), %edx	#, D.29124
	movl	this_basic_block(%rip), %eax	# this_basic_block, this_basic_block.424
	cmpl	%eax, %edx	# this_basic_block.424, D.29124
	je	.L385	#,
	.loc 1 2609 0
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.425
	movl	this_basic_block(%rip), %edx	# this_basic_block, this_basic_block.426
	movslq	%edx, %rdx	# this_basic_block.426, tmp1935
	addq	$4, %rdx	#, tmp1936
	movq	(%rax,%rdx,8), %rax	# basic_block_info.425_1452->data.bb, D.29143
	movq	(%rax), %rax	# _1454->head, D.29128
	cmpq	-328(%rbp), %rax	# temp, D.29128
	jne	.L385	#,
.L379:
	.loc 1 2601 0
	addl	$1, -464(%rbp)	#, i
.L378:
	.loc 1 2601 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1937
	movq	32(%rax), %rax	# i2_1->fld[3].rtx, D.29128
	movq	8(%rax), %rax	# _1426->fld[0].rtvec, D.29130
	movl	(%rax), %eax	# _1427->num_elem, D.29124
	cmpl	-464(%rbp), %eax	# i, D.29124
	jg	.L386	#,
	.loc 1 2616 0 is_stmt 1
	cmpq	$0, -240(%rbp)	#, i3notes
	je	.L387	#,
.LBB26:
	.loc 1 2618 0
	movq	-240(%rbp), %rax	# i3notes, tmp1938
	movq	%rax, -208(%rbp)	# tmp1938, link
	.loc 1 2619 0
	jmp	.L388	#
.L389:
	.loc 1 2620 0
	movq	-208(%rbp), %rax	# link, tmp1939
	movq	16(%rax), %rax	# link_58->fld[1].rtx, tmp1940
	movq	%rax, -208(%rbp)	# tmp1940, link
.L388:
	.loc 1 2619 0 discriminator 1
	movq	-208(%rbp), %rax	# link, tmp1941
	movq	16(%rax), %rax	# link_58->fld[1].rtx, D.29128
	testq	%rax, %rax	# D.29128
	jne	.L389	#,
	.loc 1 2621 0
	movq	-208(%rbp), %rax	# link, tmp1942
	movq	-232(%rbp), %rdx	# i2notes, tmp1943
	movq	%rdx, 16(%rax)	# tmp1943, link_58->fld[1].rtx
.LBE26:
	jmp	.L390	#
.L387:
	.loc 1 2624 0
	movq	-232(%rbp), %rax	# i2notes, tmp1944
	movq	%rax, -240(%rbp)	# tmp1944, i3notes
.L390:
	.loc 1 2625 0
	movq	$0, -232(%rbp)	#, i2notes
.L377:
	.loc 1 2628 0
	movq	-536(%rbp), %rax	# i3, tmp1945
	movq	$0, 48(%rax)	#, i3_143(D)->fld[5].rtx
	.loc 1 2629 0
	movq	-536(%rbp), %rax	# i3, tmp1946
	movq	$0, 56(%rax)	#, i3_143(D)->fld[6].rtx
	.loc 1 2630 0
	movq	-544(%rbp), %rax	# i2, tmp1947
	movq	$0, 48(%rax)	#, i2_1->fld[5].rtx
	.loc 1 2631 0
	movq	-544(%rbp), %rax	# i2, tmp1948
	movq	$0, 56(%rax)	#, i2_1->fld[6].rtx
	.loc 1 2633 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.427
	testq	%rax, %rax	# newi2pat.427
	je	.L391	#,
	.loc 1 2635 0
	movq	-544(%rbp), %rax	# i2, tmp1949
	movl	-492(%rbp), %edx	# i2_code_number, tmp1950
	movl	%edx, 40(%rax)	# tmp1950, i2_1->fld[4].rtint
	.loc 1 2636 0
	movq	-416(%rbp), %rdx	# newi2pat, newi2pat.428
	movq	-544(%rbp), %rax	# i2, tmp1951
	movq	%rdx, 32(%rax)	# newi2pat.428, i2_1->fld[3].rtx
	jmp	.L392	#
.L391:
	.loc 1 2640 0
	movq	-544(%rbp), %rax	# i2, tmp1952
	movw	$37, (%rax)	#, i2_1->code
	.loc 1 2641 0
	movq	-544(%rbp), %rax	# i2, tmp1953
	movl	$-99, 40(%rax)	#, i2_1->fld[4].rtint
	.loc 1 2642 0
	movq	-544(%rbp), %rax	# i2, tmp1954
	movq	$0, 32(%rax)	#, i2_1->fld[3].rtstr
.L392:
	.loc 1 2645 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L393	#,
	.loc 1 2647 0
	movq	-552(%rbp), %rax	# i1, tmp1955
	movq	$0, 48(%rax)	#, i1_4->fld[5].rtx
	.loc 1 2648 0
	movq	-552(%rbp), %rax	# i1, tmp1956
	movq	$0, 56(%rax)	#, i1_4->fld[6].rtx
	.loc 1 2649 0
	movq	-552(%rbp), %rax	# i1, tmp1957
	movw	$37, (%rax)	#, i1_4->code
	.loc 1 2650 0
	movq	-552(%rbp), %rax	# i1, tmp1958
	movl	$-99, 40(%rax)	#, i1_4->fld[4].rtint
	.loc 1 2651 0
	movq	-552(%rbp), %rax	# i1, tmp1959
	movq	$0, 32(%rax)	#, i1_4->fld[3].rtstr
.L393:
	.loc 1 2659 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.429
	testq	%rax, %rax	# newi2pat.429
	je	.L394	#,
	.loc 1 2661 0
	movq	-552(%rbp), %rax	# i1, tmp1960
	movl	8(%rax), %edx	# i1_4->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.431
	cmpl	%eax, %edx	# max_uid_cuid.431, D.29124
	jle	.L395	#,
	.loc 1 2661 0 is_stmt 0 discriminator 1
	movq	-552(%rbp), %rax	# i1, tmp1961
	movq	%rax, %rdi	# tmp1961,
	call	insn_cuid	#
	jmp	.L396	#
.L395:
	.loc 1 2661 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.432
	movq	-552(%rbp), %rax	# i1, tmp1962
	movl	8(%rax), %eax	# i1_4->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.432, D.29126
	movl	(%rax), %eax	# *_1479, iftmp.430
.L396:
	.loc 1 2661 0 discriminator 3
	movq	-416(%rbp), %rdi	# newi2pat, newi2pat.433
	leaq	-344(%rbp), %rcx	#, tmp1963
	movq	-544(%rbp), %rdx	# i2, tmp1964
	movq	%rcx, %r8	# tmp1963,
	movq	%rdx, %rcx	# tmp1964,
	movl	%eax, %edx	# iftmp.430,
	movl	$0, %esi	#,
	call	move_deaths	#
	.loc 1 2662 0 is_stmt 1 discriminator 3
	movq	-552(%rbp), %rax	# i1, tmp1965
	movl	8(%rax), %edx	# i1_4->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.435
	cmpl	%eax, %edx	# max_uid_cuid.435, D.29124
	jle	.L397	#,
	.loc 1 2662 0 is_stmt 0 discriminator 1
	movq	-552(%rbp), %rax	# i1, tmp1966
	movq	%rax, %rdi	# tmp1966,
	call	insn_cuid	#
	jmp	.L398	#
.L397:
	.loc 1 2662 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.436
	movq	-552(%rbp), %rax	# i1, tmp1967
	movl	8(%rax), %eax	# i1_4->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.436, D.29126
	movl	(%rax), %eax	# *_1489, iftmp.434
.L398:
	.loc 1 2662 0 discriminator 1
	movq	-416(%rbp), %rsi	# newi2pat, newi2pat.437
	movq	-424(%rbp), %rdi	# newpat, newpat.438
	leaq	-344(%rbp), %rcx	#, tmp1968
	movq	-536(%rbp), %rdx	# i3, tmp1969
	movq	%rcx, %r8	# tmp1968,
	movq	%rdx, %rcx	# tmp1969,
	movl	%eax, %edx	# iftmp.434,
	call	move_deaths	#
	jmp	.L399	#
.L394:
	.loc 1 2665 0 is_stmt 1
	cmpq	$0, -552(%rbp)	#, i1
	je	.L400	#,
	.loc 1 2665 0 is_stmt 0 discriminator 1
	movq	-552(%rbp), %rax	# i1, tmp1970
	movl	8(%rax), %edx	# i1_4->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.441
	cmpl	%eax, %edx	# max_uid_cuid.441, D.29124
	jle	.L401	#,
	movq	-552(%rbp), %rax	# i1, tmp1971
	movq	%rax, %rdi	# tmp1971,
	call	insn_cuid	#
	jmp	.L403	#
.L401:
	.loc 1 2665 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.442
	movq	-552(%rbp), %rax	# i1, tmp1972
	movl	8(%rax), %eax	# i1_4->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.442, D.29126
	movl	(%rax), %eax	# *_1500, iftmp.440
	jmp	.L403	#
.L400:
	movq	-544(%rbp), %rax	# i2, tmp1973
	movl	8(%rax), %edx	# i2_1->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.444
	cmpl	%eax, %edx	# max_uid_cuid.444, D.29124
	jle	.L404	#,
	.loc 1 2665 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp1974
	movq	%rax, %rdi	# tmp1974,
	call	insn_cuid	#
	jmp	.L403	#
.L404:
	.loc 1 2665 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.445
	movq	-544(%rbp), %rax	# i2, tmp1975
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.445, D.29126
	movl	(%rax), %eax	# *_1510, iftmp.443
.L403:
	.loc 1 2665 0 discriminator 3
	movq	-424(%rbp), %rdi	# newpat, newpat.446
	leaq	-344(%rbp), %rcx	#, tmp1976
	movq	-536(%rbp), %rdx	# i3, tmp1977
	movq	%rcx, %r8	# tmp1976,
	movq	%rdx, %rcx	# tmp1977,
	movl	%eax, %edx	# iftmp.439,
	movl	$0, %esi	#,
	call	move_deaths	#
.L399:
	.loc 1 2669 0 is_stmt 1
	cmpq	$0, -240(%rbp)	#, i3notes
	je	.L406	#,
	.loc 1 2670 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.448
	testq	%rax, %rax	# newi2pat.448
	je	.L407	#,
	.loc 1 2670 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, iftmp.447
	jmp	.L408	#
.L407:
	.loc 1 2670 0 discriminator 2
	movl	$0, %eax	#, iftmp.447
.L408:
	.loc 1 2670 0 discriminator 3
	movq	-64(%rbp), %r8	# elim_i1, tmp1978
	movq	-72(%rbp), %rcx	# elim_i2, tmp1979
	movq	-536(%rbp), %rdx	# i3, tmp1980
	movq	-536(%rbp), %rsi	# i3, tmp1981
	movq	-240(%rbp), %rdi	# i3notes, tmp1982
	movq	%r8, %r9	# tmp1978,
	movq	%rcx, %r8	# tmp1979,
	movq	%rax, %rcx	# iftmp.447,
	call	distribute_notes	#
.L406:
	.loc 1 2672 0 is_stmt 1
	cmpq	$0, -232(%rbp)	#, i2notes
	je	.L409	#,
	.loc 1 2673 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.450
	testq	%rax, %rax	# newi2pat.450
	je	.L410	#,
	.loc 1 2673 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, iftmp.449
	jmp	.L411	#
.L410:
	.loc 1 2673 0 discriminator 2
	movl	$0, %eax	#, iftmp.449
.L411:
	.loc 1 2673 0 discriminator 3
	movq	-64(%rbp), %r8	# elim_i1, tmp1983
	movq	-72(%rbp), %rcx	# elim_i2, tmp1984
	movq	-536(%rbp), %rdx	# i3, tmp1985
	movq	-544(%rbp), %rsi	# i2, tmp1986
	movq	-232(%rbp), %rdi	# i2notes, tmp1987
	movq	%r8, %r9	# tmp1983,
	movq	%rcx, %r8	# tmp1984,
	movq	%rax, %rcx	# iftmp.449,
	call	distribute_notes	#
.L409:
	.loc 1 2675 0 is_stmt 1
	cmpq	$0, -224(%rbp)	#, i1notes
	je	.L412	#,
	.loc 1 2676 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.452
	testq	%rax, %rax	# newi2pat.452
	je	.L413	#,
	.loc 1 2676 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, iftmp.451
	jmp	.L414	#
.L413:
	.loc 1 2676 0 discriminator 2
	movl	$0, %eax	#, iftmp.451
.L414:
	.loc 1 2676 0 discriminator 3
	movq	-64(%rbp), %r8	# elim_i1, tmp1988
	movq	-72(%rbp), %rcx	# elim_i2, tmp1989
	movq	-536(%rbp), %rdx	# i3, tmp1990
	movq	-552(%rbp), %rsi	# i1, tmp1991
	movq	-224(%rbp), %rdi	# i1notes, tmp1992
	movq	%r8, %r9	# tmp1988,
	movq	%rcx, %r8	# tmp1989,
	movq	%rax, %rcx	# iftmp.451,
	call	distribute_notes	#
.L412:
	.loc 1 2678 0 is_stmt 1
	movq	-344(%rbp), %rax	# midnotes, midnotes.453
	testq	%rax, %rax	# midnotes.453
	je	.L415	#,
	.loc 1 2679 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.455
	testq	%rax, %rax	# newi2pat.455
	je	.L416	#,
	.loc 1 2679 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, iftmp.454
	jmp	.L417	#
.L416:
	.loc 1 2679 0 discriminator 2
	movl	$0, %eax	#, iftmp.454
.L417:
	.loc 1 2679 0 discriminator 3
	movq	-344(%rbp), %rdi	# midnotes, midnotes.456
	movq	-64(%rbp), %rsi	# elim_i1, tmp1993
	movq	-72(%rbp), %rcx	# elim_i2, tmp1994
	movq	-536(%rbp), %rdx	# i3, tmp1995
	movq	%rsi, %r9	# tmp1993,
	movq	%rcx, %r8	# tmp1994,
	movq	%rax, %rcx	# iftmp.454,
	movl	$0, %esi	#,
	call	distribute_notes	#
.L415:
	.loc 1 2687 0 is_stmt 1
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.457
	testq	%rax, %rax	# newi2pat.457
	je	.L418	#,
	.loc 1 2687 0 is_stmt 0 discriminator 1
	movq	-360(%rbp), %rax	# new_i2_notes, new_i2_notes.458
	testq	%rax, %rax	# new_i2_notes.458
	je	.L418	#,
	.loc 1 2689 0 is_stmt 1
	movq	-360(%rbp), %rax	# new_i2_notes, tmp1996
	movq	%rax, -328(%rbp)	# tmp1996, temp
	jmp	.L419	#
.L421:
	.loc 1 2690 0
	movq	-328(%rbp), %rax	# temp, tmp1997
	movq	8(%rax), %rax	# temp_31->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1531->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L420	#,
	.loc 1 2691 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.459
	movq	-328(%rbp), %rdx	# temp, tmp1998
	movq	8(%rdx), %rdx	# temp_31->fld[0].rtx, D.29128
	movl	8(%rdx), %edx	# _1534->fld[0].rtuint, D.29129
	movl	%edx, %edx	# D.29129, tmp1999
	addq	$4, %rdx	#, tmp2000
	movq	(%rax,%rdx,8), %rax	# reg_n_info.459_1533->data.reg, D.29139
	movl	24(%rax), %edx	# _1536->deaths, D.29124
	addl	$1, %edx	#, D.29124
	movl	%edx, 24(%rax)	# D.29124, _1536->deaths
.L420:
	.loc 1 2689 0
	movq	-328(%rbp), %rax	# temp, tmp2001
	movq	16(%rax), %rax	# temp_31->fld[1].rtx, tmp2002
	movq	%rax, -328(%rbp)	# tmp2002, temp
.L419:
	.loc 1 2689 0 is_stmt 0 discriminator 1
	cmpq	$0, -328(%rbp)	#, temp
	jne	.L421	#,
	.loc 1 2693 0 is_stmt 1
	movq	-360(%rbp), %rax	# new_i2_notes, new_i2_notes.460
	movq	-544(%rbp), %rdx	# i2, tmp2003
	movq	-544(%rbp), %rsi	# i2, tmp2004
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# new_i2_notes.460,
	call	distribute_notes	#
.L418:
	.loc 1 2696 0
	movq	-368(%rbp), %rax	# new_i3_notes, new_i3_notes.461
	testq	%rax, %rax	# new_i3_notes.461
	je	.L422	#,
	.loc 1 2698 0
	movq	-368(%rbp), %rax	# new_i3_notes, tmp2005
	movq	%rax, -328(%rbp)	# tmp2005, temp
	jmp	.L423	#
.L425:
	.loc 1 2699 0
	movq	-328(%rbp), %rax	# temp, tmp2006
	movq	8(%rax), %rax	# temp_32->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1543->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L424	#,
	.loc 1 2700 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.462
	movq	-328(%rbp), %rdx	# temp, tmp2007
	movq	8(%rdx), %rdx	# temp_32->fld[0].rtx, D.29128
	movl	8(%rdx), %edx	# _1546->fld[0].rtuint, D.29129
	movl	%edx, %edx	# D.29129, tmp2008
	addq	$4, %rdx	#, tmp2009
	movq	(%rax,%rdx,8), %rax	# reg_n_info.462_1545->data.reg, D.29139
	movl	24(%rax), %edx	# _1548->deaths, D.29124
	addl	$1, %edx	#, D.29124
	movl	%edx, 24(%rax)	# D.29124, _1548->deaths
.L424:
	.loc 1 2698 0
	movq	-328(%rbp), %rax	# temp, tmp2010
	movq	16(%rax), %rax	# temp_32->fld[1].rtx, tmp2011
	movq	%rax, -328(%rbp)	# tmp2011, temp
.L423:
	.loc 1 2698 0 is_stmt 0 discriminator 1
	cmpq	$0, -328(%rbp)	#, temp
	jne	.L425	#,
	.loc 1 2702 0 is_stmt 1
	movq	-368(%rbp), %rax	# new_i3_notes, new_i3_notes.463
	movq	-536(%rbp), %rdx	# i3, tmp2012
	movq	-536(%rbp), %rsi	# i3, tmp2013
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# new_i3_notes.463,
	call	distribute_notes	#
.L422:
	.loc 1 2712 0
	movq	-408(%rbp), %rax	# i3dest_killed, i3dest_killed.464
	testq	%rax, %rax	# i3dest_killed.464
	je	.L426	#,
	.loc 1 2714 0
	movq	-408(%rbp), %rax	# i3dest_killed, i3dest_killed.465
	movzwl	(%rax), %eax	# i3dest_killed.465_1554->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L427	#,
	.loc 1 2715 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.466
	movq	-408(%rbp), %rdx	# i3dest_killed, i3dest_killed.467
	movl	8(%rdx), %edx	# i3dest_killed.467_1557->fld[0].rtuint, D.29129
	movl	%edx, %edx	# D.29129, tmp2014
	addq	$4, %rdx	#, tmp2015
	movq	(%rax,%rdx,8), %rax	# reg_n_info.466_1556->data.reg, D.29139
	movl	24(%rax), %edx	# _1559->deaths, D.29124
	addl	$1, %edx	#, D.29124
	movl	%edx, 24(%rax)	# D.29124, _1559->deaths
.L427:
	.loc 1 2717 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.468
	testq	%rax, %rax	# newi2pat.468
	je	.L428	#,
	.loc 1 2717 0 is_stmt 0 discriminator 1
	movq	-416(%rbp), %rdx	# newi2pat, newi2pat.469
	movq	-408(%rbp), %rax	# i3dest_killed, i3dest_killed.470
	movq	%rdx, %rsi	# newi2pat.469,
	movq	%rax, %rdi	# i3dest_killed.470,
	call	reg_set_p	#
	testl	%eax, %eax	# D.29124
	je	.L428	#,
	.loc 1 2718 0 is_stmt 1
	movq	-408(%rbp), %rax	# i3dest_killed, i3dest_killed.471
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# i3dest_killed.471,
	movl	$1, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-64(%rbp), %rsi	# elim_i1, tmp2016
	movq	-72(%rbp), %rcx	# elim_i2, tmp2017
	movq	-544(%rbp), %rdx	# i2, tmp2018
	movq	%rsi, %r9	# tmp2016,
	movq	%rcx, %r8	# tmp2017,
	movl	$0, %ecx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29128,
	call	distribute_notes	#
	jmp	.L426	#
.L428:
	.loc 1 2724 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.473
	.loc 1 2722 0
	testq	%rax, %rax	# newi2pat.473
	je	.L429	#,
	.loc 1 2722 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rbx	# i2, iftmp.472
	jmp	.L430	#
.L429:
	.loc 1 2722 0 discriminator 2
	movl	$0, %ebx	#, iftmp.472
.L430:
	.loc 1 2722 0 discriminator 3
	movq	-408(%rbp), %rax	# i3dest_killed, i3dest_killed.474
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# i3dest_killed.474,
	movl	$1, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-64(%rbp), %rsi	# elim_i1, tmp2019
	movq	-72(%rbp), %rcx	# elim_i2, tmp2020
	movq	-536(%rbp), %rdx	# i3, tmp2021
	movq	%rsi, %r9	# tmp2019,
	movq	%rcx, %r8	# tmp2020,
	movq	%rbx, %rcx	# iftmp.472,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29128,
	call	distribute_notes	#
.L426:
	.loc 1 2728 0 is_stmt 1
	cmpl	$0, -484(%rbp)	#, i2dest_in_i2src
	je	.L431	#,
	.loc 1 2730 0
	movq	-400(%rbp), %rax	# i2dest, i2dest.475
	movzwl	(%rax), %eax	# i2dest.475_1573->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L432	#,
	.loc 1 2731 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.476
	movq	-400(%rbp), %rdx	# i2dest, i2dest.477
	movl	8(%rdx), %edx	# i2dest.477_1576->fld[0].rtuint, D.29129
	movl	%edx, %edx	# D.29129, tmp2022
	addq	$4, %rdx	#, tmp2023
	movq	(%rax,%rdx,8), %rax	# reg_n_info.476_1575->data.reg, D.29139
	movl	24(%rax), %edx	# _1578->deaths, D.29124
	addl	$1, %edx	#, D.29124
	movl	%edx, 24(%rax)	# D.29124, _1578->deaths
.L432:
	.loc 1 2733 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.478
	testq	%rax, %rax	# newi2pat.478
	je	.L433	#,
	.loc 1 2733 0 is_stmt 0 discriminator 1
	movq	-416(%rbp), %rdx	# newi2pat, newi2pat.479
	movq	-400(%rbp), %rax	# i2dest, i2dest.480
	movq	%rdx, %rsi	# newi2pat.479,
	movq	%rax, %rdi	# i2dest.480,
	call	reg_set_p	#
	testl	%eax, %eax	# D.29124
	je	.L433	#,
	.loc 1 2734 0 is_stmt 1
	movq	-400(%rbp), %rax	# i2dest, i2dest.481
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# i2dest.481,
	movl	$1, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-544(%rbp), %rdx	# i2, tmp2024
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29128,
	call	distribute_notes	#
	jmp	.L431	#
.L433:
	.loc 1 2738 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.483
	.loc 1 2737 0
	testq	%rax, %rax	# newi2pat.483
	je	.L434	#,
	.loc 1 2737 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rbx	# i2, iftmp.482
	jmp	.L435	#
.L434:
	.loc 1 2737 0 discriminator 2
	movl	$0, %ebx	#, iftmp.482
.L435:
	.loc 1 2737 0 discriminator 3
	movq	-400(%rbp), %rax	# i2dest, i2dest.484
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# i2dest.484,
	movl	$1, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-536(%rbp), %rdx	# i3, tmp2025
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rbx, %rcx	# iftmp.482,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29128,
	call	distribute_notes	#
.L431:
	.loc 1 2742 0 is_stmt 1
	cmpl	$0, -480(%rbp)	#, i1dest_in_i1src
	je	.L436	#,
	.loc 1 2744 0
	movq	-384(%rbp), %rax	# i1dest, i1dest.485
	movzwl	(%rax), %eax	# i1dest.485_1592->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L437	#,
	.loc 1 2745 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.486
	movq	-384(%rbp), %rdx	# i1dest, i1dest.487
	movl	8(%rdx), %edx	# i1dest.487_1595->fld[0].rtuint, D.29129
	movl	%edx, %edx	# D.29129, tmp2026
	addq	$4, %rdx	#, tmp2027
	movq	(%rax,%rdx,8), %rax	# reg_n_info.486_1594->data.reg, D.29139
	movl	24(%rax), %edx	# _1597->deaths, D.29124
	addl	$1, %edx	#, D.29124
	movl	%edx, 24(%rax)	# D.29124, _1597->deaths
.L437:
	.loc 1 2747 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.488
	testq	%rax, %rax	# newi2pat.488
	je	.L438	#,
	.loc 1 2747 0 is_stmt 0 discriminator 1
	movq	-416(%rbp), %rdx	# newi2pat, newi2pat.489
	movq	-384(%rbp), %rax	# i1dest, i1dest.490
	movq	%rdx, %rsi	# newi2pat.489,
	movq	%rax, %rdi	# i1dest.490,
	call	reg_set_p	#
	testl	%eax, %eax	# D.29124
	je	.L438	#,
	.loc 1 2748 0 is_stmt 1
	movq	-384(%rbp), %rax	# i1dest, i1dest.491
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# i1dest.491,
	movl	$1, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-544(%rbp), %rdx	# i2, tmp2028
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29128,
	call	distribute_notes	#
	jmp	.L436	#
.L438:
	.loc 1 2752 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.493
	.loc 1 2751 0
	testq	%rax, %rax	# newi2pat.493
	je	.L439	#,
	.loc 1 2751 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rbx	# i2, iftmp.492
	jmp	.L440	#
.L439:
	.loc 1 2751 0 discriminator 2
	movl	$0, %ebx	#, iftmp.492
.L440:
	.loc 1 2751 0 discriminator 3
	movq	-384(%rbp), %rax	# i1dest, i1dest.494
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# i1dest.494,
	movl	$1, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-536(%rbp), %rdx	# i3, tmp2029
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rbx, %rcx	# iftmp.492,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29128,
	call	distribute_notes	#
.L436:
	.loc 1 2756 0 is_stmt 1
	movq	-56(%rbp), %rax	# i3links, tmp2030
	movq	%rax, %rdi	# tmp2030,
	call	distribute_links	#
	.loc 1 2757 0
	movq	-48(%rbp), %rax	# i2links, tmp2031
	movq	%rax, %rdi	# tmp2031,
	call	distribute_links	#
	.loc 1 2758 0
	movq	-216(%rbp), %rax	# i1links, tmp2032
	movq	%rax, %rdi	# tmp2032,
	call	distribute_links	#
	.loc 1 2760 0
	movq	-400(%rbp), %rax	# i2dest, i2dest.495
	movzwl	(%rax), %eax	# i2dest.495_1611->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L441	#,
.LBB27:
	.loc 1 2763 0
	movq	$0, -192(%rbp)	#, i2_insn
	movq	$0, -184(%rbp)	#, i2_val
	.loc 1 2773 0
	movq	-536(%rbp), %rax	# i3, tmp2033
	movq	48(%rax), %rax	# i3_143(D)->fld[5].rtx, tmp2034
	movq	%rax, -200(%rbp)	# tmp2034, link
	jmp	.L442	#
.L448:
	.loc 1 2774 0
	movq	-200(%rbp), %rax	# link, tmp2035
	movq	8(%rax), %rax	# link_59->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1616->code, D.29127
	movzwl	%ax, %eax	# D.29127, D.29124
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29132
	cmpb	$105, %al	#, D.29132
	jne	.L443	#,
	.loc 1 2774 0 is_stmt 0 discriminator 1
	movq	-200(%rbp), %rax	# link, tmp2037
	movq	8(%rax), %rax	# link_59->fld[0].rtx, D.29128
	movq	32(%rax), %rax	# _1620->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _1621->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L444	#,
	.loc 1 2774 0 discriminator 3
	movq	-200(%rbp), %rax	# link, tmp2038
	movq	8(%rax), %rax	# link_59->fld[0].rtx, D.29128
	movq	32(%rax), %rax	# _1623->fld[3].rtx, iftmp.497
	jmp	.L446	#
.L444:
	.loc 1 2774 0 discriminator 4
	movq	-200(%rbp), %rax	# link, tmp2039
	movq	8(%rax), %rax	# link_59->fld[0].rtx, D.29128
	movq	32(%rax), %rdx	# _1625->fld[3].rtx, D.29128
	movq	-200(%rbp), %rax	# link, tmp2040
	movq	8(%rax), %rax	# link_59->fld[0].rtx, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	single_set_2	#
	jmp	.L446	#
.L443:
	.loc 1 2774 0 discriminator 2
	movl	$0, %eax	#, iftmp.496
.L446:
	.loc 1 2774 0 discriminator 5
	movq	%rax, -32(%rbp)	# iftmp.496, set
	cmpq	$0, -32(%rbp)	#, set
	je	.L447	#,
	.loc 1 2775 0 is_stmt 1
	movq	-32(%rbp), %rax	# set, tmp2041
	movq	8(%rax), %rdx	# set_1631->fld[0].rtx, D.29128
	movq	-400(%rbp), %rax	# i2dest, i2dest.498
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# i2dest.498,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29124
	je	.L447	#,
	.loc 1 2776 0
	movq	-200(%rbp), %rax	# link, tmp2042
	movq	8(%rax), %rax	# link_59->fld[0].rtx, tmp2043
	movq	%rax, -192(%rbp)	# tmp2043, i2_insn
	movq	-32(%rbp), %rax	# set, tmp2044
	movq	16(%rax), %rax	# set_1631->fld[1].rtx, tmp2045
	movq	%rax, -184(%rbp)	# tmp2045, i2_val
.L447:
	.loc 1 2773 0
	movq	-200(%rbp), %rax	# link, tmp2046
	movq	16(%rax), %rax	# link_59->fld[1].rtx, tmp2047
	movq	%rax, -200(%rbp)	# tmp2047, link
.L442:
	.loc 1 2773 0 is_stmt 0 discriminator 1
	cmpq	$0, -200(%rbp)	#, link
	jne	.L448	#,
	.loc 1 2778 0 is_stmt 1
	movq	-400(%rbp), %rax	# i2dest, i2dest.499
	movq	-184(%rbp), %rdx	# i2_val, tmp2048
	movq	-192(%rbp), %rcx	# i2_insn, tmp2049
	movq	%rcx, %rsi	# tmp2049,
	movq	%rax, %rdi	# i2dest.499,
	call	record_value_for_reg	#
	.loc 1 2782 0
	cmpl	$0, -504(%rbp)	#, added_sets_2
	jne	.L441	#,
	.loc 1 2783 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.500
	testq	%rax, %rax	# newi2pat.500
	je	.L449	#,
	.loc 1 2783 0 is_stmt 0 discriminator 1
	movq	-416(%rbp), %rdx	# newi2pat, newi2pat.501
	movq	-400(%rbp), %rax	# i2dest, i2dest.502
	movq	%rdx, %rsi	# newi2pat.501,
	movq	%rax, %rdi	# i2dest.502,
	call	reg_mentioned_p	#
	testl	%eax, %eax	# D.29124
	jne	.L441	#,
.L449:
	.loc 1 2784 0 is_stmt 1
	cmpl	$0, -484(%rbp)	#, i2dest_in_i2src
	jne	.L441	#,
	.loc 1 2786 0
	movq	-400(%rbp), %rax	# i2dest, i2dest.503
	movl	8(%rax), %eax	# i2dest.503_1643->fld[0].rtuint, tmp2050
	movl	%eax, -428(%rbp)	# tmp2050, regno
	.loc 1 2787 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.504
	movl	-428(%rbp), %edx	# regno, tmp2051
	addq	$4, %rdx	#, tmp2052
	movq	(%rax,%rdx,8), %rax	# reg_n_info.504_1645->data.reg, D.29139
	movl	12(%rax), %edx	# _1646->sets, D.29124
	subl	$1, %edx	#, D.29124
	movl	%edx, 12(%rax)	# D.29124, _1646->sets
.L441:
.LBE27:
	.loc 1 2791 0
	cmpq	$0, -552(%rbp)	#, i1
	je	.L450	#,
	.loc 1 2791 0 is_stmt 0 discriminator 1
	movq	-384(%rbp), %rax	# i1dest, i1dest.505
	movzwl	(%rax), %eax	# i1dest.505_1649->code, D.29127
	cmpw	$61, %ax	#, D.29127
	jne	.L450	#,
.LBB28:
	.loc 1 2794 0 is_stmt 1
	movq	$0, -168(%rbp)	#, i1_insn
	movq	$0, -160(%rbp)	#, i1_val
	.loc 1 2796 0
	movq	-536(%rbp), %rax	# i3, tmp2053
	movq	48(%rax), %rax	# i3_143(D)->fld[5].rtx, tmp2054
	movq	%rax, -176(%rbp)	# tmp2054, link
	jmp	.L451	#
.L457:
	.loc 1 2797 0
	movq	-176(%rbp), %rax	# link, tmp2055
	movq	8(%rax), %rax	# link_64->fld[0].rtx, D.29128
	movzwl	(%rax), %eax	# _1654->code, D.29127
	movzwl	%ax, %eax	# D.29127, D.29124
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29132
	cmpb	$105, %al	#, D.29132
	jne	.L452	#,
	.loc 1 2797 0 is_stmt 0 discriminator 1
	movq	-176(%rbp), %rax	# link, tmp2057
	movq	8(%rax), %rax	# link_64->fld[0].rtx, D.29128
	movq	32(%rax), %rax	# _1658->fld[3].rtx, D.29128
	movzwl	(%rax), %eax	# _1659->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L453	#,
	.loc 1 2797 0 discriminator 3
	movq	-176(%rbp), %rax	# link, tmp2058
	movq	8(%rax), %rax	# link_64->fld[0].rtx, D.29128
	movq	32(%rax), %rax	# _1661->fld[3].rtx, iftmp.507
	jmp	.L455	#
.L453:
	.loc 1 2797 0 discriminator 4
	movq	-176(%rbp), %rax	# link, tmp2059
	movq	8(%rax), %rax	# link_64->fld[0].rtx, D.29128
	movq	32(%rax), %rdx	# _1663->fld[3].rtx, D.29128
	movq	-176(%rbp), %rax	# link, tmp2060
	movq	8(%rax), %rax	# link_64->fld[0].rtx, D.29128
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# D.29128,
	call	single_set_2	#
	jmp	.L455	#
.L452:
	.loc 1 2797 0 discriminator 2
	movl	$0, %eax	#, iftmp.506
.L455:
	.loc 1 2797 0 discriminator 5
	movq	%rax, -24(%rbp)	# iftmp.506, set
	cmpq	$0, -24(%rbp)	#, set
	je	.L456	#,
	.loc 1 2798 0 is_stmt 1
	movq	-24(%rbp), %rax	# set, tmp2061
	movq	8(%rax), %rdx	# set_1669->fld[0].rtx, D.29128
	movq	-384(%rbp), %rax	# i1dest, i1dest.508
	movq	%rdx, %rsi	# D.29128,
	movq	%rax, %rdi	# i1dest.508,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29124
	je	.L456	#,
	.loc 1 2799 0
	movq	-176(%rbp), %rax	# link, tmp2062
	movq	8(%rax), %rax	# link_64->fld[0].rtx, tmp2063
	movq	%rax, -168(%rbp)	# tmp2063, i1_insn
	movq	-24(%rbp), %rax	# set, tmp2064
	movq	16(%rax), %rax	# set_1669->fld[1].rtx, tmp2065
	movq	%rax, -160(%rbp)	# tmp2065, i1_val
.L456:
	.loc 1 2796 0
	movq	-176(%rbp), %rax	# link, tmp2066
	movq	16(%rax), %rax	# link_64->fld[1].rtx, tmp2067
	movq	%rax, -176(%rbp)	# tmp2067, link
.L451:
	.loc 1 2796 0 is_stmt 0 discriminator 1
	cmpq	$0, -176(%rbp)	#, link
	jne	.L457	#,
	.loc 1 2801 0 is_stmt 1
	movq	-384(%rbp), %rax	# i1dest, i1dest.509
	movq	-160(%rbp), %rdx	# i1_val, tmp2068
	movq	-168(%rbp), %rcx	# i1_insn, tmp2069
	movq	%rcx, %rsi	# tmp2069,
	movq	%rax, %rdi	# i1dest.509,
	call	record_value_for_reg	#
	.loc 1 2803 0
	movq	-384(%rbp), %rax	# i1dest, i1dest.510
	movl	8(%rax), %eax	# i1dest.510_1677->fld[0].rtuint, tmp2070
	movl	%eax, -428(%rbp)	# tmp2070, regno
	.loc 1 2804 0
	cmpl	$0, -508(%rbp)	#, added_sets_1
	jne	.L450	#,
	.loc 1 2804 0 is_stmt 0 discriminator 1
	cmpl	$0, -480(%rbp)	#, i1dest_in_i1src
	jne	.L450	#,
	.loc 1 2805 0 is_stmt 1
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.511
	movl	-428(%rbp), %edx	# regno, tmp2071
	addq	$4, %rdx	#, tmp2072
	movq	(%rax,%rdx,8), %rax	# reg_n_info.511_1679->data.reg, D.29139
	movl	12(%rax), %edx	# _1680->sets, D.29124
	subl	$1, %edx	#, D.29124
	movl	%edx, 12(%rax)	# D.29124, _1680->sets
.L450:
.LBE28:
	.loc 1 2811 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.512
	testq	%rax, %rax	# newi2pat.512
	je	.L458	#,
	.loc 1 2812 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.513
	movl	$0, %edx	#,
	movl	$set_nonzero_bits_and_sign_copies, %esi	#,
	movq	%rax, %rdi	# newi2pat.513,
	call	note_stores	#
.L458:
	.loc 1 2813 0
	movq	-424(%rbp), %rax	# newpat, newpat.514
	movl	$0, %edx	#,
	movl	$set_nonzero_bits_and_sign_copies, %esi	#,
	movq	%rax, %rdi	# newpat.514,
	call	note_stores	#
	.loc 1 2822 0
	movq	-424(%rbp), %rax	# newpat, newpat.515
	movzwl	(%rax), %eax	# newpat.515_1686->code, D.29127
	cmpw	$51, %ax	#, D.29127
	je	.L459	#,
	.loc 1 2822 0 is_stmt 0 discriminator 1
	movq	-536(%rbp), %rax	# i3, tmp2073
	movq	%rax, %rdi	# tmp2073,
	call	any_uncondjump_p	#
	testl	%eax, %eax	# D.29124
	je	.L460	#,
.L459:
	.loc 1 2824 0 is_stmt 1
	movq	-560(%rbp), %rax	# new_direct_jump_p, tmp2074
	movl	$1, (%rax)	#, *new_direct_jump_p_1689(D)
	.loc 1 2826 0
	movq	-536(%rbp), %rax	# i3, tmp2075
	movq	%rax, %rdi	# tmp2075,
	call	next_nonnote_insn	#
	movq	%rax, -328(%rbp)	# tmp2076, temp
	cmpq	$0, -328(%rbp)	#, temp
	je	.L461	#,
	.loc 1 2827 0
	movq	-328(%rbp), %rax	# temp, tmp2077
	movzwl	(%rax), %eax	# temp_1690->code, D.29127
	cmpw	$35, %ax	#, D.29127
	je	.L460	#,
.L461:
	.loc 1 2828 0
	movq	-536(%rbp), %rax	# i3, tmp2078
	movq	%rax, %rdi	# tmp2078,
	call	emit_barrier_after	#
.L460:
	.loc 1 2832 0
	movq	-424(%rbp), %rax	# newpat, newpat.516
	movzwl	(%rax), %eax	# newpat.516_1692->code, D.29127
	cmpw	$47, %ax	#, D.29127
	jne	.L462	#,
	.loc 1 2833 0
	movq	-424(%rbp), %rax	# newpat, newpat.517
	movq	16(%rax), %rdx	# newpat.517_1694->fld[1].rtx, D.29128
	movq	global_rtl(%rip), %rax	# global_rtl, D.29128
	cmpq	%rax, %rdx	# D.29128, D.29128
	jne	.L462	#,
	.loc 1 2834 0
	movq	-424(%rbp), %rax	# newpat, newpat.518
	movq	8(%rax), %rdx	# newpat.518_1697->fld[0].rtx, D.29128
	movq	global_rtl(%rip), %rax	# global_rtl, D.29128
	cmpq	%rax, %rdx	# D.29128, D.29128
	jne	.L462	#,
	.loc 1 2835 0
	movq	-560(%rbp), %rax	# new_direct_jump_p, tmp2079
	movl	$1, (%rax)	#, *new_direct_jump_p_1689(D)
.L462:
.LBE24:
	.loc 1 2838 0
	movl	combine_successes(%rip), %eax	# combine_successes, combine_successes.519
	addl	$1, %eax	#, combine_successes.520
	movl	%eax, combine_successes(%rip)	# combine_successes.520, combine_successes
	.loc 1 2839 0
	call	undo_commit	#
	.loc 1 2843 0
	movq	$0, subst_prev_insn(%rip)	#, subst_prev_insn
	.loc 1 2845 0
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.521
	testq	%rax, %rax	# added_links_insn.521
	je	.L463	#,
	.loc 1 2846 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.522
	testq	%rax, %rax	# newi2pat.522
	je	.L464	#,
	.loc 1 2846 0 is_stmt 0 discriminator 1
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.524
	movl	8(%rax), %edx	# added_links_insn.524_1704->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.525
	cmpl	%eax, %edx	# max_uid_cuid.525, D.29124
	jle	.L465	#,
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.526
	movq	%rax, %rdi	# added_links_insn.526,
	call	insn_cuid	#
	movl	%eax, %ebx	#, iftmp.523
	jmp	.L466	#
.L465:
	.loc 1 2846 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.527
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.528
	movl	8(%rax), %eax	# added_links_insn.528_1710->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.527, D.29126
	movl	(%rax), %ebx	# *_1714, iftmp.523
.L466:
	.loc 1 2846 0 discriminator 3
	movq	-544(%rbp), %rax	# i2, tmp2080
	movl	8(%rax), %edx	# i2_1->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.530
	cmpl	%eax, %edx	# max_uid_cuid.530, D.29124
	jle	.L467	#,
	.loc 1 2846 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, tmp2081
	movq	%rax, %rdi	# tmp2081,
	call	insn_cuid	#
	jmp	.L468	#
.L467:
	.loc 1 2846 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.531
	movq	-544(%rbp), %rax	# i2, tmp2082
	movl	8(%rax), %eax	# i2_1->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.531, D.29126
	movl	(%rax), %eax	# *_1723, iftmp.529
.L468:
	.loc 1 2846 0 discriminator 3
	cmpl	%eax, %ebx	# iftmp.529, iftmp.523
	jge	.L463	#,
.L464:
	.loc 1 2847 0 is_stmt 1
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.533
	movl	8(%rax), %edx	# added_links_insn.533_1725->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.534
	cmpl	%eax, %edx	# max_uid_cuid.534, D.29124
	jle	.L469	#,
	.loc 1 2847 0 is_stmt 0 discriminator 1
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.535
	movq	%rax, %rdi	# added_links_insn.535,
	call	insn_cuid	#
	movl	%eax, %ebx	#, iftmp.532
	jmp	.L470	#
.L469:
	.loc 1 2847 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.536
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.537
	movl	8(%rax), %eax	# added_links_insn.537_1731->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.536, D.29126
	movl	(%rax), %ebx	# *_1735, iftmp.532
.L470:
	.loc 1 2847 0 discriminator 3
	movq	-536(%rbp), %rax	# i3, tmp2083
	movl	8(%rax), %edx	# i3_143(D)->fld[0].rtint, D.29124
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.539
	cmpl	%eax, %edx	# max_uid_cuid.539, D.29124
	jle	.L471	#,
	.loc 1 2847 0 discriminator 1
	movq	-536(%rbp), %rax	# i3, tmp2084
	movq	%rax, %rdi	# tmp2084,
	call	insn_cuid	#
	jmp	.L472	#
.L471:
	.loc 1 2847 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.540
	movq	-536(%rbp), %rax	# i3, tmp2085
	movl	8(%rax), %eax	# i3_143(D)->fld[0].rtint, D.29124
	cltq
	salq	$2, %rax	#, D.29125
	addq	%rdx, %rax	# uid_cuid.540, D.29126
	movl	(%rax), %eax	# *_1744, iftmp.538
.L472:
	.loc 1 2847 0 discriminator 3
	cmpl	%eax, %ebx	# iftmp.538, iftmp.532
	jge	.L463	#,
	.loc 1 2848 0 is_stmt 1
	movq	added_links_insn(%rip), %rax	# added_links_insn, D.29123
	jmp	.L475	#
.L463:
	.loc 1 2850 0
	movq	-416(%rbp), %rax	# newi2pat, newi2pat.542
	testq	%rax, %rax	# newi2pat.542
	je	.L473	#,
	.loc 1 2850 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# i2, iftmp.541
	jmp	.L474	#
.L473:
	.loc 1 2850 0 discriminator 2
	movq	-536(%rbp), %rax	# i3, iftmp.541
.L474:
.L475:
	.loc 1 2851 0 is_stmt 1
	addq	$584, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE13:
	.size	try_combine, .-try_combine
	.type	undo_all, @function
undo_all:
.LFB14:
	.loc 1 2857 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 2860 0
	movq	undobuf(%rip), %rax	# undobuf.undos, tmp65
	movq	%rax, -16(%rbp)	# tmp65, undo
	jmp	.L477	#
.L480:
	.loc 1 2862 0
	movq	-16(%rbp), %rax	# undo, tmp66
	movq	(%rax), %rax	# undo_1->next, tmp67
	movq	%rax, -8(%rbp)	# tmp67, next
	.loc 1 2863 0
	movq	-16(%rbp), %rax	# undo, tmp68
	movl	8(%rax), %eax	# undo_1->is_int, D.29145
	testl	%eax, %eax	# D.29145
	je	.L478	#,
	.loc 1 2864 0
	movq	-16(%rbp), %rax	# undo, tmp69
	movq	24(%rax), %rax	# undo_1->where.i, D.29146
	movq	-16(%rbp), %rdx	# undo, tmp70
	movl	16(%rdx), %edx	# undo_1->old_contents.i, D.29147
	movl	%edx, (%rax)	# D.29147, *_5
	jmp	.L479	#
.L478:
	.loc 1 2866 0
	movq	-16(%rbp), %rax	# undo, tmp71
	movq	24(%rax), %rax	# undo_1->where.r, D.29148
	movq	-16(%rbp), %rdx	# undo, tmp72
	movq	16(%rdx), %rdx	# undo_1->old_contents.r, D.29149
	movq	%rdx, (%rax)	# D.29149, *_7
.L479:
	.loc 1 2868 0
	movq	undobuf+8(%rip), %rdx	# undobuf.frees, D.29150
	movq	-16(%rbp), %rax	# undo, tmp73
	movq	%rdx, (%rax)	# D.29150, undo_1->next
	.loc 1 2869 0
	movq	-16(%rbp), %rax	# undo, tmp74
	movq	%rax, undobuf+8(%rip)	# tmp74, undobuf.frees
	.loc 1 2860 0
	movq	-8(%rbp), %rax	# next, tmp75
	movq	%rax, -16(%rbp)	# tmp75, undo
.L477:
	.loc 1 2860 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, undo
	jne	.L480	#,
	.loc 1 2872 0 is_stmt 1
	movq	$0, undobuf(%rip)	#, undobuf.undos
	.loc 1 2876 0
	movq	$0, subst_prev_insn(%rip)	#, subst_prev_insn
	.loc 1 2877 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE14:
	.size	undo_all, .-undo_all
	.type	undo_commit, @function
undo_commit:
.LFB15:
	.loc 1 2884 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 2887 0
	movq	undobuf(%rip), %rax	# undobuf.undos, tmp60
	movq	%rax, -16(%rbp)	# tmp60, undo
	jmp	.L482	#
.L483:
	.loc 1 2889 0 discriminator 2
	movq	-16(%rbp), %rax	# undo, tmp61
	movq	(%rax), %rax	# undo_1->next, tmp62
	movq	%rax, -8(%rbp)	# tmp62, next
	.loc 1 2890 0 discriminator 2
	movq	undobuf+8(%rip), %rdx	# undobuf.frees, D.29151
	movq	-16(%rbp), %rax	# undo, tmp63
	movq	%rdx, (%rax)	# D.29151, undo_1->next
	.loc 1 2891 0 discriminator 2
	movq	-16(%rbp), %rax	# undo, tmp64
	movq	%rax, undobuf+8(%rip)	# tmp64, undobuf.frees
	.loc 1 2887 0 discriminator 2
	movq	-8(%rbp), %rax	# next, tmp65
	movq	%rax, -16(%rbp)	# tmp65, undo
.L482:
	.loc 1 2887 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, undo
	jne	.L483	#,
	.loc 1 2893 0 is_stmt 1
	movq	$0, undobuf(%rip)	#, undobuf.undos
	.loc 1 2894 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE15:
	.size	undo_commit, .-undo_commit
	.type	find_split_point, @function
find_split_point:
.LFB16:
	.loc 1 2908 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$176, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -168(%rbp)	# loc, loc
	movq	%rsi, -176(%rbp)	# insn, insn
	.loc 1 2909 0
	movq	-168(%rbp), %rax	# loc, tmp415
	movq	(%rax), %rax	# *loc_14(D), tmp416
	movq	%rax, -112(%rbp)	# tmp416, x
	.loc 1 2910 0
	movq	-112(%rbp), %rax	# x, tmp417
	movzwl	(%rax), %eax	# x_15->code, D.29153
	movzwl	%ax, %eax	# D.29153, tmp418
	movl	%eax, -156(%rbp)	# tmp418, code
	.loc 1 2912 0
	movq	$0, -136(%rbp)	#, len
	.loc 1 2913 0
	movq	$0, -128(%rbp)	#, pos
	.loc 1 2914 0
	movl	$0, -160(%rbp)	#, unsignedp
	.loc 1 2915 0
	movq	$0, -120(%rbp)	#, inner
	.loc 1 2918 0
	movl	-156(%rbp), %eax	# code, tmp420
	subl	$47, %eax	#, tmp419
	cmpl	$37, %eax	#, tmp419
	ja	.L538	#,
	movl	%eax, %eax	# tmp419, tmp421
	movq	.L487(,%rax,8), %rax	#, tmp422
	jmp	*%rax	# tmp422
	.section	.rodata
	.align 8
	.align 4
.L487:
	.quad	.L486
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L488
	.quad	.L538
	.quad	.L538
	.quad	.L489
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L538
	.quad	.L490
	.quad	.L490
	.text
.L488:
	.loc 1 2924 0
	movq	-112(%rbp), %rax	# x, tmp423
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _22->code, D.29153
	cmpw	$66, %ax	#, D.29153
	jne	.L491	#,
	.loc 1 2925 0
	movq	-168(%rbp), %rax	# loc, D.29152
	jmp	.L492	#
.L491:
	.loc 1 2927 0
	movq	-112(%rbp), %rax	# x, tmp424
	leaq	8(%rax), %rdx	#, D.29152
	movq	-176(%rbp), %rax	# insn, tmp425
	movq	%rax, %rsi	# tmp425,
	movq	%rdx, %rdi	# D.29152,
	call	find_split_point	#
	jmp	.L492	#
.L489:
	.loc 1 2949 0
	movq	-112(%rbp), %rax	# x, tmp426
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _28->code, D.29153
	cmpw	$75, %ax	#, D.29153
	jne	.L493	#,
	.loc 1 2950 0
	movq	-112(%rbp), %rax	# x, tmp427
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	16(%rax), %rax	# _30->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _31->code, D.29153
	cmpw	$54, %ax	#, D.29153
	jne	.L493	#,
	.loc 1 2951 0
	movq	-112(%rbp), %rax	# x, tmp428
	movq	8(%rax), %rdx	# x_15->fld[0].rtx, D.29154
	movq	-112(%rbp), %rax	# x, tmp429
	movzbl	2(%rax), %eax	# x_15->mode, D.29155
	movzbl	%al, %eax	# D.29155, D.29156
	movq	%rdx, %rsi	# D.29154,
	movl	%eax, %edi	# D.29156,
	call	memory_address_p	#
	testl	%eax, %eax	# D.29157
	jne	.L493	#,
.LBB29:
	.loc 1 2953 0
	movq	cfun(%rip), %rax	# cfun, cfun.543
	movq	24(%rax), %rax	# cfun.543_37->emit, D.29158
	movq	80(%rax), %rax	# _38->x_regno_reg_rtx, D.29152
	movq	424(%rax), %rax	# MEM[(struct rtx_def * *)_39 + 424B], tmp430
	movq	%rax, -104(%rbp)	# tmp430, reg
	.loc 1 2954 0
	movq	subst_insn(%rip), %rbx	# subst_insn, subst_insn.544
	movq	-112(%rbp), %rax	# x, tmp431
	movq	8(%rax), %rdx	# x_15->fld[0].rtx, D.29154
	movq	-104(%rbp), %rax	# reg, tmp432
	movq	%rdx, %rcx	# D.29154,
	movq	%rax, %rdx	# tmp432,
	movl	$0, %esi	#,
	movl	$47, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rbx, %rsi	# subst_insn.544,
	movq	%rax, %rdi	# D.29154,
	call	split_insns	#
	movq	%rax, -96(%rbp)	# tmp433, seq
	.loc 1 2962 0
	cmpq	$0, -96(%rbp)	#, seq
	je	.L494	#,
	.loc 1 2962 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# seq, tmp434
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movl	(%rax), %eax	# _45->num_elem, D.29157
	cmpl	$2, %eax	#, D.29157
	jne	.L494	#,
	.loc 1 2963 0 is_stmt 1
	movq	-96(%rbp), %rax	# seq, tmp435
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movq	8(%rax), %rax	# _47->elem, D.29154
	movzwl	(%rax), %eax	# _48->code, D.29153
	cmpw	$32, %ax	#, D.29153
	jne	.L494	#,
	.loc 1 2964 0
	movq	-96(%rbp), %rax	# seq, tmp436
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movq	8(%rax), %rax	# _50->elem, D.29154
	movq	32(%rax), %rax	# _51->fld[3].rtx, D.29154
	movzwl	(%rax), %eax	# _52->code, D.29153
	cmpw	$47, %ax	#, D.29153
	jne	.L494	#,
	.loc 1 2965 0
	movq	-96(%rbp), %rax	# seq, tmp437
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movq	8(%rax), %rax	# _54->elem, D.29154
	movq	32(%rax), %rax	# _55->fld[3].rtx, D.29154
	movq	8(%rax), %rax	# _56->fld[0].rtx, D.29154
	cmpq	-104(%rbp), %rax	# reg, D.29154
	jne	.L494	#,
	.loc 1 2967 0
	movq	-96(%rbp), %rax	# seq, tmp438
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movq	8(%rax), %rax	# _58->elem, D.29154
	movq	32(%rax), %rax	# _59->fld[3].rtx, D.29154
	.loc 1 2966 0
	movq	16(%rax), %rdx	# _60->fld[1].rtx, D.29154
	movq	-104(%rbp), %rax	# reg, tmp439
	movq	%rdx, %rsi	# D.29154,
	movq	%rax, %rdi	# tmp439,
	call	reg_mentioned_p	#
	testl	%eax, %eax	# D.29157
	jne	.L494	#,
	.loc 1 2968 0
	movq	-96(%rbp), %rax	# seq, tmp440
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movq	16(%rax), %rax	# _63->elem, D.29154
	movzwl	(%rax), %eax	# _64->code, D.29153
	cmpw	$32, %ax	#, D.29153
	jne	.L494	#,
	.loc 1 2969 0
	movq	-96(%rbp), %rax	# seq, tmp441
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movq	16(%rax), %rax	# _66->elem, D.29154
	movq	32(%rax), %rax	# _67->fld[3].rtx, D.29154
	movzwl	(%rax), %eax	# _68->code, D.29153
	cmpw	$47, %ax	#, D.29153
	jne	.L494	#,
	.loc 1 2970 0
	movq	-96(%rbp), %rax	# seq, tmp442
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movq	16(%rax), %rax	# _70->elem, D.29154
	movq	32(%rax), %rax	# _71->fld[3].rtx, D.29154
	movq	8(%rax), %rax	# _72->fld[0].rtx, D.29154
	cmpq	-104(%rbp), %rax	# reg, D.29154
	jne	.L494	#,
	.loc 1 2972 0
	movq	-96(%rbp), %rax	# seq, tmp443
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movq	16(%rax), %rax	# _74->elem, D.29154
	movq	32(%rax), %rax	# _75->fld[3].rtx, D.29154
	.loc 1 2971 0
	movq	16(%rax), %rdx	# _76->fld[1].rtx, D.29154
	movq	-112(%rbp), %rax	# x, tmp444
	movzbl	2(%rax), %eax	# x_15->mode, D.29155
	movzbl	%al, %eax	# D.29155, D.29156
	movq	%rdx, %rsi	# D.29154,
	movl	%eax, %edi	# D.29156,
	call	memory_address_p	#
	testl	%eax, %eax	# D.29157
	je	.L494	#,
.LBB30:
	.loc 1 2974 0
	movq	-96(%rbp), %rax	# seq, tmp445
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movq	8(%rax), %rax	# _81->elem, D.29154
	movq	32(%rax), %rax	# _82->fld[3].rtx, D.29154
	movq	16(%rax), %rax	# _83->fld[1].rtx, tmp446
	movq	%rax, -88(%rbp)	# tmp446, src1
	.loc 1 2975 0
	movq	-96(%rbp), %rax	# seq, tmp447
	movq	8(%rax), %rax	# seq_44->fld[0].rtvec, D.29159
	movq	16(%rax), %rax	# _85->elem, D.29154
	movq	32(%rax), %rax	# _86->fld[3].rtx, D.29154
	movq	16(%rax), %rax	# _87->fld[1].rtx, tmp448
	movq	%rax, -80(%rbp)	# tmp448, src2
	.loc 1 2982 0
	movq	-88(%rbp), %rdx	# src1, tmp449
	movq	-104(%rbp), %rcx	# reg, tmp450
	movq	-80(%rbp), %rax	# src2, tmp451
	movq	%rcx, %rsi	# tmp450,
	movq	%rax, %rdi	# tmp451,
	call	replace_rtx	#
	movq	%rax, -80(%rbp)	# tmp452, src2
	.loc 1 2983 0
	movq	$0, -144(%rbp)	#, split
	.loc 1 2984 0
	movq	-80(%rbp), %rax	# src2, tmp453
	movq	8(%rax), %rax	# src2_89->fld[0].rtx, D.29154
	cmpq	-88(%rbp), %rax	# src1, D.29154
	jne	.L495	#,
	.loc 1 2985 0
	movq	-80(%rbp), %rax	# src2, tmp457
	addq	$8, %rax	#, tmp456
	movq	%rax, -144(%rbp)	# tmp456, split
	jmp	.L496	#
.L495:
	.loc 1 2986 0
	movq	-80(%rbp), %rax	# src2, tmp458
	movq	8(%rax), %rax	# src2_89->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _93->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movq	rtx_format(,%rax,8), %rax	# rtx_format, D.29160
	movzbl	(%rax), %eax	# *_96, D.29161
	cmpb	$101, %al	#, D.29161
	jne	.L496	#,
	.loc 1 2987 0
	movq	-80(%rbp), %rax	# src2, tmp460
	movq	8(%rax), %rax	# src2_89->fld[0].rtx, D.29154
	movq	8(%rax), %rax	# _98->fld[0].rtx, D.29154
	cmpq	-88(%rbp), %rax	# src1, D.29154
	jne	.L496	#,
	.loc 1 2988 0
	movq	-80(%rbp), %rax	# src2, tmp461
	movq	8(%rax), %rax	# src2_89->fld[0].rtx, D.29154
	addq	$8, %rax	#, tmp462
	movq	%rax, -144(%rbp)	# tmp462, split
.L496:
	.loc 1 2990 0
	cmpq	$0, -144(%rbp)	#, split
	je	.L497	#,
	.loc 1 2992 0
	movq	-112(%rbp), %rax	# x, tmp463
	leaq	8(%rax), %rdx	#, D.29152
	movq	-80(%rbp), %rax	# src2, tmp464
	movq	%rax, %rsi	# tmp464,
	movq	%rdx, %rdi	# D.29152,
	call	do_SUBST	#
	.loc 1 2993 0
	movq	-144(%rbp), %rax	# split, D.29152
	jmp	.L492	#
.L497:
.LBE30:
	.loc 1 2973 0
	jmp	.L493	#
.L494:
	.loc 1 3002 0
	movq	-112(%rbp), %rax	# x, tmp465
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	8(%rax), %rax	# _104->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _105->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	cmpb	$111, %al	#, D.29161
	je	.L493	#,
	.loc 1 3003 0
	movq	-112(%rbp), %rax	# x, tmp467
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	8(%rax), %rax	# _109->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _110->code, D.29153
	cmpw	$63, %ax	#, D.29153
	jne	.L498	#,
	.loc 1 3004 0 discriminator 1
	movq	-112(%rbp), %rax	# x, tmp468
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	8(%rax), %rax	# _112->fld[0].rtx, D.29154
	movq	8(%rax), %rax	# _113->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _114->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	.loc 1 3003 0 discriminator 1
	cmpb	$111, %al	#, D.29161
	je	.L493	#,
.L498:
	.loc 1 3006 0
	movq	-112(%rbp), %rax	# x, tmp470
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	addq	$8, %rax	#, D.29152
	jmp	.L492	#
.L493:
.LBE29:
	.loc 1 3008 0
	jmp	.L499	#
.L486:
	.loc 1 3027 0
	movq	-112(%rbp), %rax	# x, tmp471
	leaq	16(%rax), %rdx	#, D.29152
	movq	-176(%rbp), %rax	# insn, tmp472
	movq	%rax, %rsi	# tmp472,
	movq	%rdx, %rdi	# D.29152,
	call	find_split_point	#
	movq	%rax, -144(%rbp)	# tmp473, split
	.loc 1 3028 0
	cmpq	$0, -144(%rbp)	#, split
	je	.L500	#,
	.loc 1 3028 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# x, tmp474
	addq	$16, %rax	#, D.29152
	cmpq	-144(%rbp), %rax	# split, D.29152
	je	.L500	#,
	.loc 1 3029 0 is_stmt 1
	movq	-144(%rbp), %rax	# split, D.29152
	jmp	.L492	#
.L500:
	.loc 1 3032 0
	movq	-112(%rbp), %rax	# x, tmp475
	leaq	8(%rax), %rdx	#, D.29152
	movq	-176(%rbp), %rax	# insn, tmp476
	movq	%rax, %rsi	# tmp476,
	movq	%rdx, %rdi	# D.29152,
	call	find_split_point	#
	movq	%rax, -144(%rbp)	# tmp477, split
	.loc 1 3033 0
	cmpq	$0, -144(%rbp)	#, split
	je	.L501	#,
	.loc 1 3033 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# x, tmp478
	addq	$8, %rax	#, D.29152
	cmpq	-144(%rbp), %rax	# split, D.29152
	je	.L501	#,
	.loc 1 3034 0 is_stmt 1
	movq	-144(%rbp), %rax	# split, D.29152
	jmp	.L492	#
.L501:
	.loc 1 3038 0
	movq	-112(%rbp), %rax	# x, tmp479
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _128->code, D.29153
	cmpw	$133, %ax	#, D.29153
	jne	.L502	#,
	.loc 1 3039 0
	movq	-112(%rbp), %rax	# x, tmp480
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	8(%rax), %rax	# _130->fld[0].rtx, D.29154
	movzbl	2(%rax), %eax	# _131->mode, D.29155
	movzbl	%al, %eax	# D.29155, D.29157
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29153
	cmpw	$64, %ax	#, D.29153
	ja	.L502	#,
	.loc 1 3041 0
	movq	-112(%rbp), %rax	# x, tmp482
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	16(%rax), %rax	# _135->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _136->code, D.29153
	cmpw	$54, %ax	#, D.29153
	jne	.L502	#,
	.loc 1 3042 0
	movq	-112(%rbp), %rax	# x, tmp483
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	24(%rax), %rax	# _138->fld[2].rtx, D.29154
	movzwl	(%rax), %eax	# _139->code, D.29153
	cmpw	$54, %ax	#, D.29153
	jne	.L502	#,
	.loc 1 3043 0
	movq	-112(%rbp), %rax	# x, tmp484
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _141->code, D.29153
	cmpw	$54, %ax	#, D.29153
	jne	.L502	#,
	.loc 1 3044 0
	movq	-112(%rbp), %rax	# x, tmp485
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	16(%rax), %rax	# _143->fld[1].rtx, D.29154
	movq	8(%rax), %rdx	# _144->fld[0].rtwint, D.29162
	.loc 1 3045 0
	movq	-112(%rbp), %rax	# x, tmp486
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	24(%rax), %rax	# _146->fld[2].rtx, D.29154
	movq	8(%rax), %rax	# _147->fld[0].rtwint, D.29162
	addq	%rax, %rdx	# D.29162, D.29162
	.loc 1 3046 0
	movq	-112(%rbp), %rax	# x, tmp487
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	8(%rax), %rax	# _150->fld[0].rtx, D.29154
	movzbl	2(%rax), %eax	# _151->mode, D.29155
	movzbl	%al, %eax	# D.29155, D.29157
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29153
	movzwl	%ax, %eax	# D.29153, D.29162
	.loc 1 3044 0
	cmpq	%rax, %rdx	# D.29162, D.29162
	jg	.L502	#,
	.loc 1 3047 0
	movq	-112(%rbp), %rax	# x, tmp489
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	8(%rax), %rax	# _156->fld[0].rtx, D.29154
	movq	%rax, %rdi	# D.29154,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29157
	jne	.L502	#,
.LBB31:
	.loc 1 3049 0
	movq	-112(%rbp), %rax	# x, tmp490
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	24(%rax), %rax	# _159->fld[2].rtx, D.29154
	movq	8(%rax), %rax	# _160->fld[0].rtwint, tmp491
	movq	%rax, -72(%rbp)	# tmp491, pos
	.loc 1 3050 0
	movq	-112(%rbp), %rax	# x, tmp492
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	16(%rax), %rax	# _162->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _163->fld[0].rtwint, D.29162
	movq	%rax, -64(%rbp)	# D.29162, len
	.loc 1 3051 0
	movq	-112(%rbp), %rax	# x, tmp493
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _166->fld[0].rtwint, D.29162
	movq	%rax, -56(%rbp)	# D.29162, src
	.loc 1 3052 0
	movq	-112(%rbp), %rax	# x, tmp494
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	8(%rax), %rax	# _169->fld[0].rtx, tmp495
	movq	%rax, -48(%rbp)	# tmp495, dest
	.loc 1 3053 0
	movq	-48(%rbp), %rax	# dest, tmp496
	movzbl	2(%rax), %eax	# dest_170->mode, D.29155
	movzbl	%al, %eax	# D.29155, tmp497
	movl	%eax, -152(%rbp)	# tmp497, mode
	.loc 1 3054 0
	movq	-64(%rbp), %rax	# len, tmp498
	movl	$1, %edx	#, tmp499
	movl	%eax, %ecx	# D.29157, tmp658
	salq	%cl, %rdx	# tmp658, D.29162
	movq	%rdx, %rax	# D.29162, D.29162
	subq	$1, %rax	#, D.29162
	movq	%rax, -40(%rbp)	# D.29162, mask
	.loc 1 3059 0
	movq	-56(%rbp), %rax	# src, tmp500
	cmpq	-40(%rbp), %rax	# mask, tmp500
	jne	.L503	#,
	.loc 1 3060 0
	movq	-72(%rbp), %rax	# pos, tmp501
	movq	-56(%rbp), %rdx	# src, tmp502
	movl	%eax, %ecx	# D.29157, tmp660
	salq	%cl, %rdx	# tmp660, D.29163
	movq	%rdx, %rax	# D.29163, D.29163
	movq	%rax, %rsi	# D.29162,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29154
	movq	-48(%rbp), %rdx	# dest, tmp503
	movl	-152(%rbp), %eax	# mode, tmp504
	movl	%eax, %esi	# tmp504,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	-112(%rbp), %rdx	# x, tmp505
	addq	$16, %rdx	#, D.29152
	movq	%rax, %rsi	# D.29154,
	movq	%rdx, %rdi	# D.29152,
	call	do_SUBST	#
	jmp	.L504	#
.L503:
	.loc 1 3063 0
	movq	-72(%rbp), %rax	# pos, tmp506
	movq	-56(%rbp), %rdx	# src, tmp507
	movl	%eax, %ecx	# D.29157, tmp662
	salq	%cl, %rdx	# tmp662, D.29163
	movq	%rdx, %rax	# D.29163, D.29163
	movq	%rax, %rsi	# D.29162,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rbx	#, D.29154
	movq	-72(%rbp), %rax	# pos, tmp508
	movq	-40(%rbp), %rdx	# mask, tmp509
	movl	%eax, %ecx	# D.29157, tmp664
	salq	%cl, %rdx	# tmp664, D.29163
	movq	%rdx, %rax	# D.29163, D.29163
	notq	%rax	# D.29163
	movq	%rax, %rdx	# D.29163, D.29163
	movl	-152(%rbp), %eax	# mode, mode.547
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29163
	andq	%rdx, %rax	# D.29163, D.29163
	movl	-152(%rbp), %edx	# mode, tmp511
	movl	%edx, %esi	# tmp511,
	movq	%rax, %rdi	# D.29162,
	call	trunc_int_for_mode	#
	movq	%rax, %rsi	# D.29162,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29154
	movq	-48(%rbp), %rdx	# dest, tmp512
	movl	-152(%rbp), %eax	# mode, tmp513
	movl	%eax, %esi	# tmp513,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29154
	movl	-152(%rbp), %eax	# mode, tmp514
	movq	%rbx, %rcx	# D.29154,
	movl	%eax, %esi	# tmp514,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	-112(%rbp), %rdx	# x, tmp515
	addq	$16, %rdx	#, D.29152
	movq	%rax, %rsi	# D.29154,
	movq	%rdx, %rdi	# D.29152,
	call	do_SUBST	#
.L504:
	.loc 1 3073 0
	movq	-112(%rbp), %rax	# x, tmp516
	leaq	8(%rax), %rdx	#, D.29152
	movq	-48(%rbp), %rax	# dest, tmp517
	movq	%rax, %rsi	# tmp517,
	movq	%rdx, %rdi	# D.29152,
	call	do_SUBST	#
	.loc 1 3075 0
	movq	-112(%rbp), %rax	# x, tmp518
	leaq	16(%rax), %rdx	#, D.29152
	movq	-176(%rbp), %rax	# insn, tmp519
	movq	%rax, %rsi	# tmp519,
	movq	%rdx, %rdi	# D.29152,
	call	find_split_point	#
	movq	%rax, -144(%rbp)	# tmp520, split
	.loc 1 3076 0
	cmpq	$0, -144(%rbp)	#, split
	je	.L502	#,
	.loc 1 3076 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# x, tmp521
	addq	$16, %rax	#, D.29152
	cmpq	-144(%rbp), %rax	# split, D.29152
	je	.L502	#,
	.loc 1 3077 0 is_stmt 1
	movq	-144(%rbp), %rax	# split, D.29152
	jmp	.L492	#
.L502:
.LBE31:
	.loc 1 3082 0
	movq	-112(%rbp), %rax	# x, tmp522
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _204->code, D.29153
	movzwl	%ax, %eax	# D.29153, tmp523
	movl	%eax, -156(%rbp)	# tmp523, code
	.loc 1 3084 0
	movl	-156(%rbp), %eax	# code, tmp525
	subl	$83, %eax	#, tmp524
	cmpl	$50, %eax	#, tmp524
	ja	.L539	#,
	movl	%eax, %eax	# tmp524, tmp526
	movq	.L507(,%rax,8), %rax	#, tmp527
	jmp	*%rax	# tmp527
	.section	.rodata
	.align 8
	.align 4
.L507:
	.quad	.L506
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L537
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L509
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L539
	.quad	.L510
	.quad	.L510
	.text
.L506:
	.loc 1 3096 0
	movq	-112(%rbp), %rax	# x, tmp528
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _207->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _208->code, D.29153
	cmpw	$54, %ax	#, D.29153
	jne	.L511	#,
	.loc 1 3097 0
	movq	-112(%rbp), %rax	# x, tmp529
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _210->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _211->code, D.29153
	cmpw	$61, %ax	#, D.29153
	jne	.L511	#,
	.loc 1 3098 0
	movq	-112(%rbp), %rax	# x, tmp530
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _213->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _214->fld[0].rtwint, D.29162
	movq	%rax, %rdi	# D.29163,
	call	exact_log2_wide	#
	cltq
	movq	%rax, -128(%rbp)	# tmp531, pos
	cmpq	$6, -128(%rbp)	#, pos
	jle	.L511	#,
	.loc 1 3099 0
	movq	-112(%rbp), %rax	# x, tmp532
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _219->code, D.29153
	cmpw	$61, %ax	#, D.29153
	jne	.L511	#,
	.loc 1 3100 0
	movq	-112(%rbp), %rax	# x, tmp533
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	-176(%rbp), %rcx	# insn, tmp534
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp534,
	movq	%rax, %rdi	# D.29154,
	call	find_single_use	#
	movq	%rax, -144(%rbp)	# tmp535, split
	cmpq	$0, -144(%rbp)	#, split
	je	.L511	#,
	.loc 1 3101 0
	movq	-144(%rbp), %rax	# split, tmp536
	movq	(%rax), %rax	# *split_222, D.29154
	movzwl	(%rax), %eax	# _223->code, D.29153
	cmpw	$103, %ax	#, D.29153
	je	.L512	#,
	.loc 1 3101 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rax	# split, tmp537
	movq	(%rax), %rax	# *split_222, D.29154
	movzwl	(%rax), %eax	# _225->code, D.29153
	cmpw	$102, %ax	#, D.29153
	jne	.L511	#,
.L512:
	.loc 1 3102 0 is_stmt 1
	movq	-144(%rbp), %rax	# split, tmp538
	movq	(%rax), %rax	# *split_222, D.29154
	movq	8(%rax), %rdx	# _227->fld[0].rtx, D.29154
	movq	-112(%rbp), %rax	# x, tmp539
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	cmpq	%rax, %rdx	# D.29154, D.29154
	jne	.L511	#,
	.loc 1 3103 0
	movq	-144(%rbp), %rax	# split, tmp540
	movq	(%rax), %rax	# *split_222, D.29154
	movq	16(%rax), %rdx	# _230->fld[1].rtx, D.29154
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29154
	cmpq	%rax, %rdx	# D.29154, D.29154
	jne	.L511	#,
.LBB32:
	.loc 1 3106 0
	movq	-112(%rbp), %rax	# x, tmp541
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	.loc 1 3105 0
	movq	8(%rax), %rsi	# _233->fld[0].rtx, D.29154
	movq	-112(%rbp), %rax	# x, tmp542
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movzbl	2(%rax), %eax	# _235->mode, D.29155
	movzbl	%al, %eax	# D.29155, D.29156
	movq	-128(%rbp), %rdx	# pos, tmp543
	movl	$0, 8(%rsp)	#,
	movl	$0, (%rsp)	#,
	movl	$1, %r9d	#,
	movl	$1, %r8d	#,
	movl	$0, %ecx	#,
	movl	%eax, %edi	# D.29156,
	call	make_extraction	#
	movq	%rax, -32(%rbp)	# tmp544, extraction
	.loc 1 3108 0
	cmpq	$0, -32(%rbp)	#, extraction
	je	.L511	#,
	.loc 1 3110 0
	movq	-112(%rbp), %rax	# x, tmp545
	leaq	16(%rax), %rdx	#, D.29152
	movq	-32(%rbp), %rax	# extraction, tmp546
	movq	%rax, %rsi	# tmp546,
	movq	%rdx, %rdi	# D.29152,
	call	do_SUBST	#
	.loc 1 3111 0
	movq	-176(%rbp), %rdx	# insn, tmp547
	movq	-168(%rbp), %rax	# loc, tmp548
	movq	%rdx, %rsi	# tmp547,
	movq	%rax, %rdi	# tmp548,
	call	find_split_point	#
	jmp	.L492	#
.L511:
.LBE32:
	.loc 1 3114 0
	jmp	.L513	#
.L537:
	.loc 1 3137 0
	jmp	.L513	#
.L509:
	.loc 1 3140 0
	movq	-112(%rbp), %rax	# x, tmp549
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _241->fld[0].rtx, tmp550
	movq	%rax, -120(%rbp)	# tmp550, inner
	.loc 1 3145 0
	movq	-120(%rbp), %rax	# inner, tmp551
	movzbl	2(%rax), %eax	# inner_242->mode, D.29155
	movzbl	%al, %eax	# D.29155, D.29157
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29164
	cmpl	$3, %eax	#, D.29164
	je	.L513	#,
	.loc 1 3146 0
	movq	-112(%rbp), %rax	# x, tmp553
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzbl	2(%rax), %eax	# _246->mode, D.29155
	movzbl	%al, %eax	# D.29155, D.29157
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29164
	cmpl	$3, %eax	#, D.29164
	je	.L513	#,
	.loc 1 3149 0
	movq	$0, -128(%rbp)	#, pos
	.loc 1 3150 0
	movq	-120(%rbp), %rax	# inner, tmp555
	movzbl	2(%rax), %eax	# inner_242->mode, D.29155
	movzbl	%al, %eax	# D.29155, D.29157
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29153
	movzwl	%ax, %eax	# D.29153, tmp557
	movq	%rax, -136(%rbp)	# tmp557, len
	.loc 1 3151 0
	movl	$0, -160(%rbp)	#, unsignedp
	.loc 1 3152 0
	jmp	.L513	#
.L510:
	.loc 1 3156 0
	movq	-112(%rbp), %rax	# x, tmp558
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _256->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _257->code, D.29153
	cmpw	$54, %ax	#, D.29153
	jne	.L514	#,
	.loc 1 3157 0
	movq	-112(%rbp), %rax	# x, tmp559
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	24(%rax), %rax	# _259->fld[2].rtx, D.29154
	movzwl	(%rax), %eax	# _260->code, D.29153
	cmpw	$54, %ax	#, D.29153
	jne	.L514	#,
	.loc 1 3159 0
	movq	-112(%rbp), %rax	# x, tmp560
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _262->fld[0].rtx, tmp561
	movq	%rax, -120(%rbp)	# tmp561, inner
	.loc 1 3160 0
	movq	-112(%rbp), %rax	# x, tmp562
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _264->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _265->fld[0].rtwint, D.29162
	movq	%rax, -136(%rbp)	# D.29162, len
	.loc 1 3161 0
	movq	-112(%rbp), %rax	# x, tmp563
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	24(%rax), %rax	# _268->fld[2].rtx, D.29154
	movq	8(%rax), %rax	# _269->fld[0].rtwint, tmp564
	movq	%rax, -128(%rbp)	# tmp564, pos
	.loc 1 3165 0
	cmpl	$133, -156(%rbp)	#, code
	sete	%al	#, D.29165
	movzbl	%al, %eax	# D.29165, tmp565
	movl	%eax, -160(%rbp)	# tmp565, unsignedp
	.loc 1 3167 0
	jmp	.L513	#
.L514:
	jmp	.L513	#
.L539:
	.loc 1 3170 0
	nop
.L513:
	.loc 1 3173 0
	cmpq	$0, -136(%rbp)	#, len
	je	.L515	#,
	.loc 1 3173 0 is_stmt 0 discriminator 1
	cmpq	$0, -128(%rbp)	#, pos
	js	.L515	#,
	movq	-128(%rbp), %rdx	# pos, pos.549
	movq	-136(%rbp), %rax	# len, tmp566
	addq	%rax, %rdx	# tmp566, D.29163
	movq	-120(%rbp), %rax	# inner, tmp567
	movzbl	2(%rax), %eax	# inner_10->mode, D.29155
	movzbl	%al, %eax	# D.29155, D.29157
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29153
	movzwl	%ax, %eax	# D.29153, D.29163
	cmpq	%rax, %rdx	# D.29163, D.29163
	ja	.L515	#,
.LBB33:
	.loc 1 3175 0 is_stmt 1
	movq	-112(%rbp), %rax	# x, tmp569
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzbl	2(%rax), %eax	# _279->mode, D.29155
	movzbl	%al, %eax	# D.29155, tmp570
	movl	%eax, -148(%rbp)	# tmp570, mode
	.loc 1 3183 0
	cmpl	$0, -160(%rbp)	#, unsignedp
	je	.L516	#,
	.loc 1 3183 0 is_stmt 0 discriminator 1
	cmpq	$8, -136(%rbp)	#, len
	ja	.L516	#,
	.loc 1 3185 0 is_stmt 1
	movq	-136(%rbp), %rax	# len, tmp571
	movl	$1, %edx	#, tmp572
	movl	%eax, %ecx	# D.29157, tmp667
	salq	%cl, %rdx	# tmp667, D.29162
	movq	%rdx, %rax	# D.29162, D.29162
	subq	$1, %rax	#, D.29162
	movq	%rax, %rsi	# D.29162,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rbx	#, D.29154
	movq	-128(%rbp), %rax	# pos, tmp573
	movq	%rax, %rsi	# tmp573,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %r12	#, D.29154
	movq	-120(%rbp), %rdx	# inner, tmp574
	movl	-148(%rbp), %eax	# mode, tmp575
	movq	%rdx, %rsi	# tmp574,
	movl	%eax, %edi	# tmp575,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29154
	movl	-148(%rbp), %eax	# mode, tmp576
	movq	%r12, %rcx	# D.29154,
	movl	%eax, %esi	# tmp576,
	movl	$90, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, %rdx	#, D.29154
	movl	-148(%rbp), %eax	# mode, tmp577
	movq	%rbx, %rcx	# D.29154,
	movl	%eax, %esi	# tmp577,
	movl	$83, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-112(%rbp), %rdx	# x, tmp578
	addq	$16, %rdx	#, D.29152
	movq	%rax, %rsi	# D.29154,
	movq	%rdx, %rdi	# D.29152,
	call	do_SUBST	#
	.loc 1 3192 0
	movq	-112(%rbp), %rax	# x, tmp579
	leaq	16(%rax), %rdx	#, D.29152
	movq	-176(%rbp), %rax	# insn, tmp580
	movq	%rax, %rsi	# tmp580,
	movq	%rdx, %rdi	# D.29152,
	call	find_split_point	#
	movq	%rax, -144(%rbp)	# tmp581, split
	.loc 1 3193 0
	cmpq	$0, -144(%rbp)	#, split
	je	.L517	#,
	.loc 1 3193 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# x, tmp582
	addq	$16, %rax	#, D.29152
	cmpq	-144(%rbp), %rax	# split, D.29152
	je	.L517	#,
	.loc 1 3194 0 is_stmt 1
	movq	-144(%rbp), %rax	# split, D.29152
	jmp	.L492	#
.L517:
	.loc 1 3193 0 discriminator 2
	jmp	.L515	#
.L516:
	.loc 1 3198 0
	movl	-148(%rbp), %eax	# mode, mode.550
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29153
	movzwl	%ax, %eax	# D.29153, D.29163
	subq	-136(%rbp), %rax	# len, D.29163
	movq	%rax, %rsi	# D.29162,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rbx	#, D.29154
	movl	-148(%rbp), %eax	# mode, mode.551
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29153
	movzwl	%ax, %eax	# D.29153, D.29163
	subq	-136(%rbp), %rax	# len, D.29163
	movq	%rax, %rdx	# D.29163, D.29163
	movq	-128(%rbp), %rax	# pos, pos.552
	subq	%rax, %rdx	# pos.552, D.29163
	movq	%rdx, %rax	# D.29163, D.29163
	movq	%rax, %rsi	# D.29162,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %r12	#, D.29154
	movq	-120(%rbp), %rdx	# inner, tmp585
	movl	-148(%rbp), %eax	# mode, tmp586
	movq	%rdx, %rsi	# tmp585,
	movl	%eax, %edi	# tmp586,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29154
	movl	-148(%rbp), %eax	# mode, tmp587
	movq	%r12, %rcx	# D.29154,
	movl	%eax, %esi	# tmp587,
	movl	$87, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, %rdx	#, D.29154
	cmpl	$0, -160(%rbp)	#, unsignedp
	je	.L518	#,
	.loc 1 3198 0 is_stmt 0 discriminator 1
	movl	$90, %eax	#, iftmp.553
	jmp	.L519	#
.L518:
	.loc 1 3198 0 discriminator 2
	movl	$89, %eax	#, iftmp.553
.L519:
	.loc 1 3198 0 discriminator 3
	movl	-148(%rbp), %esi	# mode, tmp588
	movq	%rbx, %rcx	# D.29154,
	movl	%eax, %edi	# iftmp.553,
	call	gen_rtx_fmt_ee	#
	movq	-112(%rbp), %rdx	# x, tmp589
	addq	$16, %rdx	#, D.29152
	movq	%rax, %rsi	# D.29154,
	movq	%rdx, %rdi	# D.29152,
	call	do_SUBST	#
	.loc 1 3207 0 is_stmt 1 discriminator 3
	movq	-112(%rbp), %rax	# x, tmp590
	leaq	16(%rax), %rdx	#, D.29152
	movq	-176(%rbp), %rax	# insn, tmp591
	movq	%rax, %rsi	# tmp591,
	movq	%rdx, %rdi	# D.29152,
	call	find_split_point	#
	movq	%rax, -144(%rbp)	# tmp592, split
	.loc 1 3208 0 discriminator 3
	cmpq	$0, -144(%rbp)	#, split
	je	.L515	#,
	.loc 1 3208 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# x, tmp593
	addq	$16, %rax	#, D.29152
	cmpq	-144(%rbp), %rax	# split, D.29152
	je	.L515	#,
	.loc 1 3209 0 is_stmt 1
	movq	-144(%rbp), %rax	# split, D.29152
	jmp	.L492	#
.L515:
.LBE33:
	.loc 1 3216 0
	movq	-112(%rbp), %rax	# x, tmp594
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _319->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	cmpb	$50, %al	#, D.29161
	je	.L520	#,
	.loc 1 3217 0
	movq	-112(%rbp), %rax	# x, tmp596
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _323->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	cmpb	$99, %al	#, D.29161
	je	.L520	#,
	.loc 1 3218 0
	movq	-112(%rbp), %rax	# x, tmp598
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _327->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	cmpb	$60, %al	#, D.29161
	jne	.L521	#,
.L520:
	.loc 1 3219 0
	movq	-112(%rbp), %rax	# x, tmp600
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _331->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _332->code, D.29153
	cmpw	$67, %ax	#, D.29153
	je	.L522	#,
	.loc 1 3219 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# x, tmp601
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _334->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _335->code, D.29153
	cmpw	$68, %ax	#, D.29153
	je	.L522	#,
	movq	-112(%rbp), %rax	# x, tmp602
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _337->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _338->code, D.29153
	cmpw	$54, %ax	#, D.29153
	je	.L522	#,
	movq	-112(%rbp), %rax	# x, tmp603
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _340->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _341->code, D.29153
	cmpw	$55, %ax	#, D.29153
	je	.L522	#,
	movq	-112(%rbp), %rax	# x, tmp604
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _343->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _344->code, D.29153
	cmpw	$58, %ax	#, D.29153
	je	.L522	#,
	movq	-112(%rbp), %rax	# x, tmp605
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _346->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _347->code, D.29153
	cmpw	$134, %ax	#, D.29153
	je	.L522	#,
	movq	-112(%rbp), %rax	# x, tmp606
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _349->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _350->code, D.29153
	cmpw	$56, %ax	#, D.29153
	je	.L522	#,
	movq	-112(%rbp), %rax	# x, tmp607
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	16(%rax), %rax	# _352->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _353->code, D.29153
	cmpw	$140, %ax	#, D.29153
	jne	.L521	#,
.L522:
	.loc 1 3220 0 is_stmt 1
	movq	-112(%rbp), %rax	# x, tmp608
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _355->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _356->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	cmpb	$111, %al	#, D.29161
	je	.L523	#,
	.loc 1 3221 0
	movq	-112(%rbp), %rax	# x, tmp610
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _360->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _361->code, D.29153
	cmpw	$63, %ax	#, D.29153
	jne	.L521	#,
	.loc 1 3222 0
	movq	-112(%rbp), %rax	# x, tmp611
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _363->fld[0].rtx, D.29154
	movq	8(%rax), %rax	# _364->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _365->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	cmpb	$111, %al	#, D.29161
	jne	.L521	#,
.L523:
	.loc 1 3224 0
	movq	-112(%rbp), %rax	# x, tmp613
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	addq	$16, %rax	#, D.29152
	jmp	.L492	#
.L521:
	.loc 1 3231 0
	movq	-112(%rbp), %rax	# x, tmp614
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _371->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	cmpb	$50, %al	#, D.29161
	je	.L524	#,
	.loc 1 3232 0
	movq	-112(%rbp), %rax	# x, tmp616
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _375->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	cmpb	$99, %al	#, D.29161
	je	.L524	#,
	.loc 1 3233 0
	movq	-112(%rbp), %rax	# x, tmp618
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _379->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	cmpb	$60, %al	#, D.29161
	je	.L524	#,
	.loc 1 3234 0
	movq	-112(%rbp), %rax	# x, tmp620
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _383->code, D.29153
	movzwl	%ax, %eax	# D.29153, D.29157
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	cmpb	$49, %al	#, D.29161
	jne	.L525	#,
.L524:
	.loc 1 3235 0
	movq	-112(%rbp), %rax	# x, tmp622
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	8(%rax), %rax	# _387->fld[0].rtx, D.29154
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29154,
	call	register_operand	#
	testl	%eax, %eax	# D.29157
	jne	.L525	#,
	.loc 1 3236 0
	movq	-112(%rbp), %rax	# x, tmp623
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	addq	$8, %rax	#, D.29152
	jmp	.L492	#
.L525:
	.loc 1 3238 0
	movl	$0, %eax	#, D.29152
	jmp	.L492	#
.L490:
	.loc 1 3245 0
	movq	-112(%rbp), %rax	# x, tmp624
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _393->code, D.29153
	cmpw	$86, %ax	#, D.29153
	jne	.L526	#,
	.loc 1 3245 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# x, tmp625
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _395->code, D.29153
	cmpw	$86, %ax	#, D.29153
	jne	.L526	#,
	.loc 1 3247 0 is_stmt 1
	movq	-112(%rbp), %rax	# x, tmp626
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	8(%rax), %rcx	# _397->fld[0].rtx, D.29154
	movq	-112(%rbp), %rax	# x, tmp627
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movq	8(%rax), %rdx	# _399->fld[0].rtx, D.29154
	movq	-112(%rbp), %rax	# x, tmp628
	movzbl	2(%rax), %eax	# x_15->mode, D.29155
	movzbl	%al, %esi	# D.29155, D.29156
	cmpl	$84, -156(%rbp)	#, code
	jne	.L527	#,
	.loc 1 3247 0 is_stmt 0 discriminator 1
	movl	$83, %eax	#, iftmp.554
	jmp	.L528	#
.L527:
	.loc 1 3247 0 discriminator 2
	movl	$84, %eax	#, iftmp.554
.L528:
	.loc 1 3247 0 discriminator 3
	movl	%eax, %edi	# iftmp.554,
	call	gen_rtx_fmt_ee	#
	movq	%rax, %rdx	#, D.29154
	movq	-112(%rbp), %rax	# x, tmp629
	movzbl	2(%rax), %eax	# x_15->mode, D.29155
	movzbl	%al, %eax	# D.29155, D.29156
	movl	%eax, %esi	# D.29156,
	movl	$86, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, %rdx	#, D.29154
	movq	-168(%rbp), %rax	# loc, tmp630
	movq	%rdx, %rsi	# D.29154,
	movq	%rax, %rdi	# tmp630,
	call	do_SUBST	#
	.loc 1 3253 0 is_stmt 1 discriminator 3
	movq	-176(%rbp), %rdx	# insn, tmp631
	movq	-168(%rbp), %rax	# loc, tmp632
	movq	%rdx, %rsi	# tmp631,
	movq	%rax, %rdi	# tmp632,
	call	find_split_point	#
	jmp	.L492	#
.L526:
	.loc 1 3259 0
	movq	-112(%rbp), %rax	# x, tmp633
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movzwl	(%rax), %eax	# _410->code, D.29153
	cmpw	$86, %ax	#, D.29153
	jne	.L529	#,
.LBB34:
	.loc 1 3261 0
	movq	-112(%rbp), %rax	# x, tmp634
	movq	8(%rax), %rax	# x_15->fld[0].rtx, tmp635
	movq	%rax, -24(%rbp)	# tmp635, tem
	.loc 1 3262 0
	movq	-112(%rbp), %rax	# x, tmp636
	movq	16(%rax), %rax	# x_15->fld[1].rtx, D.29154
	movq	-112(%rbp), %rdx	# x, tmp637
	addq	$8, %rdx	#, D.29152
	movq	%rax, %rsi	# D.29154,
	movq	%rdx, %rdi	# D.29152,
	call	do_SUBST	#
	.loc 1 3263 0
	movq	-112(%rbp), %rax	# x, tmp638
	leaq	16(%rax), %rdx	#, D.29152
	movq	-24(%rbp), %rax	# tem, tmp639
	movq	%rax, %rsi	# tmp639,
	movq	%rdx, %rdi	# D.29152,
	call	do_SUBST	#
.LBE34:
	.loc 1 3265 0
	jmp	.L499	#
.L529:
	jmp	.L499	#
.L538:
	.loc 1 3268 0
	nop
.L499:
	.loc 1 3272 0
	movl	-156(%rbp), %eax	# code, code.555
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29161
	movsbl	%al, %eax	# D.29161, D.29157
	subl	$49, %eax	#, tmp641
	cmpl	$50, %eax	#, tmp641
	ja	.L530	#,
	movl	%eax, %eax	# tmp641, tmp642
	movq	.L532(,%rax,8), %rax	#, tmp643
	jmp	*%rax	# tmp643
	.section	.rodata
	.align 8
	.align 4
.L532:
	.quad	.L531
	.quad	.L533
	.quad	.L534
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L533
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L530
	.quad	.L534
	.quad	.L533
	.text
.L534:
	.loc 1 3276 0
	movq	-112(%rbp), %rax	# x, tmp644
	leaq	24(%rax), %rdx	#, D.29152
	movq	-176(%rbp), %rax	# insn, tmp645
	movq	%rax, %rsi	# tmp645,
	movq	%rdx, %rdi	# D.29152,
	call	find_split_point	#
	movq	%rax, -144(%rbp)	# tmp646, split
	.loc 1 3277 0
	cmpq	$0, -144(%rbp)	#, split
	je	.L533	#,
	.loc 1 3278 0
	movq	-144(%rbp), %rax	# split, D.29152
	jmp	.L492	#
.L533:
	.loc 1 3283 0
	movq	-112(%rbp), %rax	# x, tmp647
	leaq	16(%rax), %rdx	#, D.29152
	movq	-176(%rbp), %rax	# insn, tmp648
	movq	%rax, %rsi	# tmp648,
	movq	%rdx, %rdi	# D.29152,
	call	find_split_point	#
	movq	%rax, -144(%rbp)	# tmp649, split
	.loc 1 3284 0
	cmpq	$0, -144(%rbp)	#, split
	je	.L531	#,
	.loc 1 3285 0
	movq	-144(%rbp), %rax	# split, D.29152
	jmp	.L492	#
.L531:
	.loc 1 3290 0
	movq	-112(%rbp), %rax	# x, tmp650
	movzwl	(%rax), %eax	# x_15->code, D.29153
	cmpw	$83, %ax	#, D.29153
	je	.L535	#,
	.loc 1 3290 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# x, tmp651
	movq	8(%rax), %rax	# x_15->fld[0].rtx, D.29154
	movzwl	(%rax), %eax	# _426->code, D.29153
	cmpw	$83, %ax	#, D.29153
	jne	.L535	#,
	.loc 1 3291 0 is_stmt 1
	movq	-112(%rbp), %rax	# x, tmp652
	addq	$8, %rax	#, D.29152
	jmp	.L492	#
.L535:
	.loc 1 3293 0
	movq	-112(%rbp), %rax	# x, tmp653
	leaq	8(%rax), %rdx	#, D.29152
	movq	-176(%rbp), %rax	# insn, tmp654
	movq	%rax, %rsi	# tmp654,
	movq	%rdx, %rdi	# D.29152,
	call	find_split_point	#
	movq	%rax, -144(%rbp)	# tmp655, split
	.loc 1 3294 0
	cmpq	$0, -144(%rbp)	#, split
	je	.L536	#,
	.loc 1 3295 0
	movq	-144(%rbp), %rax	# split, D.29152
	jmp	.L492	#
.L536:
	.loc 1 3296 0
	movq	-168(%rbp), %rax	# loc, D.29152
	jmp	.L492	#
.L530:
	.loc 1 3300 0
	movl	$0, %eax	#, D.29152
.L492:
	.loc 1 3301 0
	addq	$176, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE16:
	.size	find_split_point, .-find_split_point
	.section	.rodata
.LC1:
	.string	"ie"
	.text
	.type	subst, @function
subst:
.LFB17:
	.loc 1 3327 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$80, %rsp	#,
	movq	%rdi, -56(%rbp)	# x, x
	movq	%rsi, -64(%rbp)	# from, from
	movq	%rdx, -72(%rbp)	# to, to
	movl	%ecx, -76(%rbp)	# in_dest, in_dest
	movl	%r8d, -80(%rbp)	# unique_copy, unique_copy
	.loc 1 3328 0
	movq	-56(%rbp), %rax	# x, tmp265
	movzwl	(%rax), %eax	# x_24(D)->code, D.29167
	movzwl	%ax, %eax	# D.29167, tmp266
	movl	%eax, -48(%rbp)	# tmp266, code
	.loc 1 3329 0
	movl	$0, -44(%rbp)	#, op0_mode
	.loc 1 3343 0
	cmpl	$0, -76(%rbp)	#, in_dest
	jne	.L541	#,
	.loc 1 3343 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp267
	cmpq	-64(%rbp), %rax	# from, tmp267
	je	.L542	#,
	movq	-56(%rbp), %rax	# x, tmp268
	movzwl	(%rax), %eax	# x_24(D)->code, D.29167
	cmpw	$61, %ax	#, D.29167
	jne	.L541	#,
	movq	-64(%rbp), %rax	# from, tmp269
	movzwl	(%rax), %eax	# from_29(D)->code, D.29167
	cmpw	$61, %ax	#, D.29167
	jne	.L541	#,
	movq	-56(%rbp), %rax	# x, tmp270
	movl	8(%rax), %edx	# x_24(D)->fld[0].rtuint, D.29168
	movq	-64(%rbp), %rax	# from, tmp271
	movl	8(%rax), %eax	# from_29(D)->fld[0].rtuint, D.29168
	cmpl	%eax, %edx	# D.29168, D.29168
	jne	.L541	#,
	movq	-56(%rbp), %rax	# x, tmp272
	movzbl	2(%rax), %edx	# x_24(D)->mode, D.29169
	movq	-64(%rbp), %rax	# from, tmp273
	movzbl	2(%rax), %eax	# from_29(D)->mode, D.29169
	cmpb	%al, %dl	# D.29169, D.29169
	jne	.L541	#,
.L542:
	.loc 1 3345 0 is_stmt 1
	movl	n_occurrences(%rip), %eax	# n_occurrences, n_occurrences.556
	addl	$1, %eax	#, n_occurrences.557
	movl	%eax, n_occurrences(%rip)	# n_occurrences.557, n_occurrences
	.loc 1 3346 0
	cmpl	$0, -80(%rbp)	#, unique_copy
	je	.L543	#,
	.loc 1 3346 0 is_stmt 0 discriminator 1
	movl	n_occurrences(%rip), %eax	# n_occurrences, n_occurrences.559
	cmpl	$1, %eax	#, n_occurrences.559
	jle	.L543	#,
	movq	-72(%rbp), %rax	# to, tmp274
	movq	%rax, %rdi	# tmp274,
	call	copy_rtx	#
	jmp	.L544	#
.L543:
	.loc 1 3346 0 discriminator 2
	movq	-72(%rbp), %rax	# to, iftmp.558
.L544:
	.loc 1 3346 0 discriminator 3
	jmp	.L545	#
.L541:
	.loc 1 3356 0 is_stmt 1
	cmpl	$0, -76(%rbp)	#, in_dest
	jne	.L546	#,
	.loc 1 3356 0 is_stmt 0 discriminator 1
	cmpl	$61, -48(%rbp)	#, code
	jne	.L546	#,
	movq	-64(%rbp), %rax	# from, tmp275
	movzwl	(%rax), %eax	# from_29(D)->code, D.29167
	cmpw	$61, %ax	#, D.29167
	jne	.L546	#,
	.loc 1 3357 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, tmp276
	movl	8(%rax), %edx	# x_24(D)->fld[0].rtuint, D.29168
	movq	-64(%rbp), %rax	# from, tmp277
	movl	8(%rax), %eax	# from_29(D)->fld[0].rtuint, D.29168
	cmpl	%eax, %edx	# D.29168, D.29168
	jne	.L546	#,
	.loc 1 3358 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29170
	movq	-56(%rbp), %rax	# x, tmp278
	movzbl	2(%rax), %eax	# x_24(D)->mode, D.29169
	movzbl	%al, %eax	# D.29169, D.29171
	movl	%eax, %esi	# D.29171,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L545	#
.L546:
	.loc 1 3362 0
	cmpl	$66, -48(%rbp)	#, code
	je	.L547	#,
	.loc 1 3362 0 is_stmt 0 discriminator 1
	cmpl	$135, -48(%rbp)	#, code
	je	.L547	#,
	movl	-48(%rbp), %eax	# code, code.560
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29172
	cmpb	$111, %al	#, D.29172
	jne	.L547	#,
	.loc 1 3363 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, D.29166
	jmp	.L545	#
.L547:
	.loc 1 3371 0
	movq	-56(%rbp), %rax	# x, tmp280
	cmpq	-72(%rbp), %rax	# to, tmp280
	je	.L548	#,
	.loc 1 3371 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp281
	movzwl	(%rax), %eax	# x_24(D)->code, D.29167
	cmpw	$61, %ax	#, D.29167
	jne	.L549	#,
	movq	-72(%rbp), %rax	# to, tmp282
	movzwl	(%rax), %eax	# to_40(D)->code, D.29167
	cmpw	$61, %ax	#, D.29167
	jne	.L549	#,
	movq	-56(%rbp), %rax	# x, tmp283
	movl	8(%rax), %edx	# x_24(D)->fld[0].rtuint, D.29168
	movq	-72(%rbp), %rax	# to, tmp284
	movl	8(%rax), %eax	# to_40(D)->fld[0].rtuint, D.29168
	cmpl	%eax, %edx	# D.29168, D.29168
	jne	.L549	#,
	movq	-56(%rbp), %rax	# x, tmp285
	movzbl	2(%rax), %edx	# x_24(D)->mode, D.29169
	movq	-72(%rbp), %rax	# to, tmp286
	movzbl	2(%rax), %eax	# to_40(D)->mode, D.29169
	cmpb	%al, %dl	# D.29169, D.29169
	jne	.L549	#,
.L548:
	.loc 1 3372 0 is_stmt 1
	movq	-72(%rbp), %rax	# to, D.29166
	jmp	.L545	#
.L549:
	.loc 1 3383 0
	cmpl	$39, -48(%rbp)	#, code
	jne	.L550	#,
	.loc 1 3384 0
	movq	-56(%rbp), %rax	# x, tmp287
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtvec, D.29173
	movq	8(%rax), %rax	# _60->elem, D.29170
	movzwl	(%rax), %eax	# _61->code, D.29167
	cmpw	$47, %ax	#, D.29167
	jne	.L550	#,
	.loc 1 3385 0
	movq	-56(%rbp), %rax	# x, tmp288
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtvec, D.29173
	movq	8(%rax), %rax	# _63->elem, D.29170
	movq	16(%rax), %rax	# _64->fld[1].rtx, D.29170
	movzwl	(%rax), %eax	# _65->code, D.29167
	cmpw	$41, %ax	#, D.29167
	jne	.L550	#,
	.loc 1 3387 0
	movq	-56(%rbp), %rax	# x, tmp289
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtvec, D.29173
	movq	8(%rax), %rax	# _67->elem, D.29170
	movl	-80(%rbp), %ecx	# unique_copy, tmp290
	movq	-72(%rbp), %rdx	# to, tmp291
	movq	-64(%rbp), %rsi	# from, tmp292
	movl	%ecx, %r8d	# tmp290,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# D.29170,
	call	subst	#
	movq	%rax, -16(%rbp)	# tmp293, new
	.loc 1 3390 0
	movq	-16(%rbp), %rax	# new, tmp294
	movzwl	(%rax), %eax	# new_69->code, D.29167
	cmpw	$49, %ax	#, D.29167
	jne	.L551	#,
	.loc 1 3391 0
	movq	-16(%rbp), %rax	# new, tmp295
	movq	8(%rax), %rdx	# new_69->fld[0].rtx, D.29170
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29170
	cmpq	%rax, %rdx	# D.29170, D.29170
	jne	.L551	#,
	.loc 1 3392 0
	movq	-16(%rbp), %rax	# new, D.29166
	jmp	.L545	#
.L551:
	.loc 1 3394 0
	movq	-56(%rbp), %rax	# x, tmp296
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtvec, D.29173
	leaq	8(%rax), %rdx	#, D.29174
	movq	-16(%rbp), %rax	# new, tmp297
	movq	%rax, %rsi	# tmp297,
	movq	%rdx, %rdi	# D.29174,
	call	do_SUBST	#
	.loc 1 3396 0
	movq	-56(%rbp), %rax	# x, tmp298
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtvec, D.29173
	movl	(%rax), %eax	# _76->num_elem, D.29175
	subl	$1, %eax	#, tmp299
	movl	%eax, -40(%rbp)	# tmp299, i
	jmp	.L552	#
.L555:
.LBB35:
	.loc 1 3398 0
	movq	-56(%rbp), %rax	# x, tmp300
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtvec, D.29173
	movl	-40(%rbp), %edx	# i, tmp302
	movslq	%edx, %rdx	# tmp302, tmp301
	movq	8(%rax,%rdx,8), %rax	# _79->elem, D.29170
	movq	8(%rax), %rax	# _80->fld[0].rtx, tmp303
	movq	%rax, -8(%rbp)	# tmp303, dest
	.loc 1 3400 0
	movq	-8(%rbp), %rax	# dest, tmp304
	movzwl	(%rax), %eax	# dest_81->code, D.29167
	cmpw	$61, %ax	#, D.29167
	je	.L553	#,
	.loc 1 3401 0
	movq	-8(%rbp), %rax	# dest, tmp305
	movzwl	(%rax), %eax	# dest_81->code, D.29167
	cmpw	$69, %ax	#, D.29167
	je	.L553	#,
	.loc 1 3402 0
	movq	-8(%rbp), %rax	# dest, tmp306
	movzwl	(%rax), %eax	# dest_81->code, D.29167
	cmpw	$59, %ax	#, D.29167
	je	.L553	#,
	.loc 1 3404 0
	movl	-80(%rbp), %ecx	# unique_copy, tmp307
	movq	-72(%rbp), %rdx	# to, tmp308
	movq	-64(%rbp), %rsi	# from, tmp309
	movq	-8(%rbp), %rax	# dest, tmp310
	movl	%ecx, %r8d	# tmp307,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp310,
	call	subst	#
	movq	%rax, -16(%rbp)	# tmp311, new
	.loc 1 3407 0
	movq	-16(%rbp), %rax	# new, tmp312
	movzwl	(%rax), %eax	# new_85->code, D.29167
	cmpw	$49, %ax	#, D.29167
	jne	.L554	#,
	.loc 1 3408 0
	movq	-16(%rbp), %rax	# new, tmp313
	movq	8(%rax), %rdx	# new_85->fld[0].rtx, D.29170
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29170
	cmpq	%rax, %rdx	# D.29170, D.29170
	jne	.L554	#,
	.loc 1 3409 0
	movq	-16(%rbp), %rax	# new, D.29166
	jmp	.L545	#
.L554:
	.loc 1 3411 0
	movq	-56(%rbp), %rax	# x, tmp314
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtvec, D.29173
	movl	-40(%rbp), %edx	# i, tmp316
	movslq	%edx, %rdx	# tmp316, tmp315
	movq	8(%rax,%rdx,8), %rax	# _90->elem, D.29170
	leaq	8(%rax), %rdx	#, D.29174
	movq	-16(%rbp), %rax	# new, tmp317
	movq	%rax, %rsi	# tmp317,
	movq	%rdx, %rdi	# D.29174,
	call	do_SUBST	#
.L553:
.LBE35:
	.loc 1 3396 0
	subl	$1, -40(%rbp)	#, i
.L552:
	.loc 1 3396 0 is_stmt 0 discriminator 1
	cmpl	$0, -40(%rbp)	#, i
	jg	.L555	#,
	.loc 1 3383 0 is_stmt 1
	jmp	.L556	#
.L550:
	.loc 1 3417 0
	movl	-48(%rbp), %eax	# code, code.561
	cltq
	movzbl	rtx_length(%rax), %eax	# rtx_length, D.29169
	movzbl	%al, %eax	# D.29169, tmp319
	movl	%eax, -32(%rbp)	# tmp319, len
	.loc 1 3418 0
	movl	-48(%rbp), %eax	# code, code.562
	cltq
	movq	rtx_format(,%rax,8), %rax	# rtx_format, tmp321
	movq	%rax, -24(%rbp)	# tmp321, fmt
	.loc 1 3424 0
	cmpl	$47, -48(%rbp)	#, code
	jne	.L557	#,
	.loc 1 3425 0
	movq	-56(%rbp), %rax	# x, tmp322
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtx, D.29170
	movzwl	(%rax), %eax	# _99->code, D.29167
	cmpw	$61, %ax	#, D.29167
	je	.L558	#,
	.loc 1 3426 0
	movq	-56(%rbp), %rax	# x, tmp323
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtx, D.29170
	movzwl	(%rax), %eax	# _101->code, D.29167
	cmpw	$69, %ax	#, D.29167
	je	.L558	#,
	.loc 1 3427 0
	movq	-56(%rbp), %rax	# x, tmp324
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtx, D.29170
	movzwl	(%rax), %eax	# _103->code, D.29167
	cmpw	$59, %ax	#, D.29167
	jne	.L557	#,
.L558:
	.loc 1 3428 0
	movq	$.LC1, -24(%rbp)	#, fmt
.L557:
	.loc 1 3432 0
	movq	-24(%rbp), %rax	# fmt, tmp325
	movzbl	(%rax), %eax	# *fmt_12, D.29172
	cmpb	$101, %al	#, D.29172
	jne	.L559	#,
	.loc 1 3433 0
	movq	-56(%rbp), %rax	# x, tmp326
	movq	8(%rax), %rax	# x_24(D)->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _107->mode, D.29169
	movzbl	%al, %eax	# D.29169, tmp327
	movl	%eax, -44(%rbp)	# tmp327, op0_mode
.L559:
	.loc 1 3435 0
	movl	$0, -40(%rbp)	#, i
	jmp	.L560	#
.L595:
	.loc 1 3437 0
	movl	-40(%rbp), %eax	# i, tmp328
	movslq	%eax, %rdx	# tmp328, D.29176
	movq	-24(%rbp), %rax	# fmt, tmp329
	addq	%rdx, %rax	# D.29176, D.29177
	movzbl	(%rax), %eax	# *_112, D.29172
	cmpb	$69, %al	#, D.29172
	jne	.L561	#,
.LBB36:
	.loc 1 3440 0
	movq	-56(%rbp), %rax	# x, tmp330
	movl	-40(%rbp), %edx	# i, tmp332
	movslq	%edx, %rdx	# tmp332, tmp331
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtvec, D.29173
	movl	(%rax), %eax	# _114->num_elem, D.29175
	subl	$1, %eax	#, tmp333
	movl	%eax, -36(%rbp)	# tmp333, j
	jmp	.L562	#
.L568:
	.loc 1 3442 0
	movq	-56(%rbp), %rax	# x, tmp334
	movl	-40(%rbp), %edx	# i, tmp336
	movslq	%edx, %rdx	# tmp336, tmp335
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtvec, D.29173
	movl	-36(%rbp), %edx	# j, tmp338
	movslq	%edx, %rdx	# tmp338, tmp337
	movq	8(%rax,%rdx,8), %rax	# _117->elem, D.29170
	cmpq	-64(%rbp), %rax	# from, D.29170
	je	.L563	#,
	.loc 1 3442 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp339
	movl	-40(%rbp), %edx	# i, tmp341
	movslq	%edx, %rdx	# tmp341, tmp340
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtvec, D.29173
	movl	-36(%rbp), %edx	# j, tmp343
	movslq	%edx, %rdx	# tmp343, tmp342
	movq	8(%rax,%rdx,8), %rax	# _119->elem, D.29170
	movzwl	(%rax), %eax	# _120->code, D.29167
	cmpw	$61, %ax	#, D.29167
	jne	.L564	#,
	movq	-64(%rbp), %rax	# from, tmp344
	movzwl	(%rax), %eax	# from_29(D)->code, D.29167
	cmpw	$61, %ax	#, D.29167
	jne	.L564	#,
	movq	-56(%rbp), %rax	# x, tmp345
	movl	-40(%rbp), %edx	# i, tmp347
	movslq	%edx, %rdx	# tmp347, tmp346
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtvec, D.29173
	movl	-36(%rbp), %edx	# j, tmp349
	movslq	%edx, %rdx	# tmp349, tmp348
	movq	8(%rax,%rdx,8), %rax	# _123->elem, D.29170
	movl	8(%rax), %edx	# _124->fld[0].rtuint, D.29168
	movq	-64(%rbp), %rax	# from, tmp350
	movl	8(%rax), %eax	# from_29(D)->fld[0].rtuint, D.29168
	cmpl	%eax, %edx	# D.29168, D.29168
	jne	.L564	#,
	movq	-56(%rbp), %rax	# x, tmp351
	movl	-40(%rbp), %edx	# i, tmp353
	movslq	%edx, %rdx	# tmp353, tmp352
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtvec, D.29173
	movl	-36(%rbp), %edx	# j, tmp355
	movslq	%edx, %rdx	# tmp355, tmp354
	movq	8(%rax,%rdx,8), %rax	# _127->elem, D.29170
	movzbl	2(%rax), %edx	# _128->mode, D.29169
	movq	-64(%rbp), %rax	# from, tmp356
	movzbl	2(%rax), %eax	# from_29(D)->mode, D.29169
	cmpb	%al, %dl	# D.29169, D.29169
	jne	.L564	#,
.L563:
	.loc 1 3445 0 is_stmt 1
	cmpl	$0, -80(%rbp)	#, unique_copy
	je	.L565	#,
	.loc 1 3444 0
	movl	n_occurrences(%rip), %eax	# n_occurrences, n_occurrences.564
	testl	%eax, %eax	# n_occurrences.564
	je	.L565	#,
	.loc 1 3445 0
	movq	-72(%rbp), %rax	# to, tmp357
	movq	%rax, %rdi	# tmp357,
	call	copy_rtx	#
	jmp	.L566	#
.L565:
	.loc 1 3445 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# to, iftmp.563
.L566:
	.loc 1 3444 0 is_stmt 1
	movq	%rax, -16(%rbp)	# iftmp.563, new
	.loc 1 3446 0
	movl	n_occurrences(%rip), %eax	# n_occurrences, n_occurrences.565
	addl	$1, %eax	#, n_occurrences.566
	movl	%eax, n_occurrences(%rip)	# n_occurrences.566, n_occurrences
	jmp	.L567	#
.L564:
	.loc 1 3450 0
	movq	-56(%rbp), %rax	# x, tmp358
	movl	-40(%rbp), %edx	# i, tmp360
	movslq	%edx, %rdx	# tmp360, tmp359
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtvec, D.29173
	movl	-36(%rbp), %edx	# j, tmp362
	movslq	%edx, %rdx	# tmp362, tmp361
	movq	8(%rax,%rdx,8), %rax	# _131->elem, D.29170
	movl	-80(%rbp), %ecx	# unique_copy, tmp363
	movq	-72(%rbp), %rdx	# to, tmp364
	movq	-64(%rbp), %rsi	# from, tmp365
	movl	%ecx, %r8d	# tmp363,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# D.29170,
	call	subst	#
	movq	%rax, -16(%rbp)	# tmp366, new
	.loc 1 3455 0
	movq	-16(%rbp), %rax	# new, tmp367
	movzwl	(%rax), %eax	# new_133->code, D.29167
	cmpw	$49, %ax	#, D.29167
	jne	.L567	#,
	.loc 1 3456 0
	movq	-16(%rbp), %rax	# new, tmp368
	movq	8(%rax), %rdx	# new_133->fld[0].rtx, D.29170
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29170
	cmpq	%rax, %rdx	# D.29170, D.29170
	jne	.L567	#,
	.loc 1 3457 0
	movq	-16(%rbp), %rax	# new, D.29166
	jmp	.L545	#
.L567:
	.loc 1 3460 0
	movq	-56(%rbp), %rax	# x, tmp369
	movl	-40(%rbp), %edx	# i, tmp371
	movslq	%edx, %rdx	# tmp371, tmp370
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtvec, D.29173
	movl	-36(%rbp), %edx	# j, tmp373
	movslq	%edx, %rdx	# tmp373, tmp372
	salq	$3, %rdx	#, tmp374
	addq	%rdx, %rax	# tmp374, tmp375
	leaq	8(%rax), %rdx	#, D.29174
	movq	-16(%rbp), %rax	# new, tmp376
	movq	%rax, %rsi	# tmp376,
	movq	%rdx, %rdi	# D.29174,
	call	do_SUBST	#
	.loc 1 3440 0
	subl	$1, -36(%rbp)	#, j
.L562:
	.loc 1 3440 0 is_stmt 0 discriminator 1
	cmpl	$0, -36(%rbp)	#, j
	jns	.L568	#,
.LBE36:
	jmp	.L569	#
.L561:
	.loc 1 3463 0 is_stmt 1
	movl	-40(%rbp), %eax	# i, tmp377
	movslq	%eax, %rdx	# tmp377, D.29176
	movq	-24(%rbp), %rax	# fmt, tmp378
	addq	%rdx, %rax	# D.29176, D.29177
	movzbl	(%rax), %eax	# *_148, D.29172
	cmpb	$101, %al	#, D.29172
	jne	.L569	#,
	.loc 1 3466 0
	movq	-56(%rbp), %rax	# x, tmp379
	movl	-40(%rbp), %edx	# i, tmp381
	movslq	%edx, %rdx	# tmp381, tmp380
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtx, tmp382
	movq	%rax, -16(%rbp)	# tmp382, new
	.loc 1 3467 0
	cmpl	$0, -76(%rbp)	#, in_dest
	je	.L570	#,
	.loc 1 3468 0
	cmpl	$63, -48(%rbp)	#, code
	je	.L571	#,
	.loc 1 3468 0 is_stmt 0 discriminator 1
	cmpl	$64, -48(%rbp)	#, code
	je	.L571	#,
	.loc 1 3469 0 is_stmt 1
	cmpl	$133, -48(%rbp)	#, code
	jne	.L570	#,
.L571:
	.loc 1 3470 0
	cmpl	$0, -40(%rbp)	#, i
	jne	.L570	#,
	.loc 1 3471 0
	movq	-16(%rbp), %rax	# new, tmp383
	movzwl	(%rax), %eax	# new_150->code, D.29167
	cmpw	$61, %ax	#, D.29167
	jne	.L570	#,
	.loc 1 3471 0 is_stmt 0 discriminator 1
	jmp	.L572	#
.L570:
	.loc 1 3474 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, tmp384
	movl	-40(%rbp), %edx	# i, tmp386
	movslq	%edx, %rdx	# tmp386, tmp385
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtx, D.29170
	cmpq	-64(%rbp), %rax	# from, D.29170
	je	.L573	#,
	.loc 1 3474 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp387
	movl	-40(%rbp), %edx	# i, tmp389
	movslq	%edx, %rdx	# tmp389, tmp388
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtx, D.29170
	movzwl	(%rax), %eax	# _153->code, D.29167
	cmpw	$61, %ax	#, D.29167
	jne	.L574	#,
	movq	-64(%rbp), %rax	# from, tmp390
	movzwl	(%rax), %eax	# from_29(D)->code, D.29167
	cmpw	$61, %ax	#, D.29167
	jne	.L574	#,
	movq	-56(%rbp), %rax	# x, tmp391
	movl	-40(%rbp), %edx	# i, tmp393
	movslq	%edx, %rdx	# tmp393, tmp392
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtx, D.29170
	movl	8(%rax), %edx	# _156->fld[0].rtuint, D.29168
	movq	-64(%rbp), %rax	# from, tmp394
	movl	8(%rax), %eax	# from_29(D)->fld[0].rtuint, D.29168
	cmpl	%eax, %edx	# D.29168, D.29168
	jne	.L574	#,
	movq	-56(%rbp), %rax	# x, tmp395
	movl	-40(%rbp), %edx	# i, tmp397
	movslq	%edx, %rdx	# tmp397, tmp396
	movq	8(%rax,%rdx,8), %rax	# x_3->fld[i_14].rtx, D.29170
	movzbl	2(%rax), %edx	# _159->mode, D.29169
	movq	-64(%rbp), %rax	# from, tmp398
	movzbl	2(%rax), %eax	# from_29(D)->mode, D.29169
	cmpb	%al, %dl	# D.29169, D.29169
	jne	.L574	#,
.L573:
	.loc 1 3489 0 is_stmt 1
	movq	-72(%rbp), %rax	# to, tmp399
	movzwl	(%rax), %eax	# to_40(D)->code, D.29167
	cmpw	$63, %ax	#, D.29167
	jne	.L575	#,
	.loc 1 3490 0
	movq	-72(%rbp), %rax	# to, tmp400
	movzbl	2(%rax), %edx	# to_40(D)->mode, D.29169
	movq	-72(%rbp), %rax	# to, tmp401
	movq	8(%rax), %rax	# to_40(D)->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _168->mode, D.29169
	cmpb	%al, %dl	# D.29169, D.29169
	je	.L575	#,
	.loc 1 3490 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# to, tmp402
	movzbl	2(%rax), %eax	# to_40(D)->mode, D.29169
	cmpb	$3, %al	#, D.29169
	je	.L576	#,
	movq	-72(%rbp), %rax	# to, tmp403
	movzbl	2(%rax), %eax	# to_40(D)->mode, D.29169
	cmpb	$4, %al	#, D.29169
	je	.L576	#,
	movq	-72(%rbp), %rax	# to, tmp404
	movzbl	2(%rax), %eax	# to_40(D)->mode, D.29169
	cmpb	$2, %al	#, D.29169
	jne	.L577	#,
	.loc 1 3490 0 discriminator 2
	movl	target_flags(%rip), %eax	# target_flags, target_flags.567
	andl	$33554432, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	jne	.L576	#,
	.loc 1 3490 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.568
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.569
	movl	%eax, %ecx	# ix86_cpu.570, tmp463
	sarl	%cl, %edx	# tmp463, D.29175
	movl	%edx, %eax	# D.29175, D.29175
	andl	$1, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	je	.L576	#,
.L577:
	movq	-72(%rbp), %rax	# to, tmp405
	movzbl	2(%rax), %eax	# to_40(D)->mode, D.29169
	cmpb	$5, %al	#, D.29169
	jne	.L578	#,
	movl	target_flags(%rip), %eax	# target_flags, target_flags.571
	andl	$33554432, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	je	.L578	#,
.L576:
	.loc 1 3490 0 discriminator 2
	movq	-72(%rbp), %rax	# to, tmp406
	movq	8(%rax), %rax	# to_40(D)->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _183->mode, D.29169
	cmpb	$3, %al	#, D.29169
	je	.L575	#,
	.loc 1 3490 0 discriminator 1
	movq	-72(%rbp), %rax	# to, tmp407
	movq	8(%rax), %rax	# to_40(D)->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _185->mode, D.29169
	cmpb	$4, %al	#, D.29169
	je	.L575	#,
	movq	-72(%rbp), %rax	# to, tmp408
	movzbl	2(%rax), %eax	# to_40(D)->mode, D.29169
	cmpb	$2, %al	#, D.29169
	jne	.L579	#,
	.loc 1 3490 0 discriminator 2
	movl	target_flags(%rip), %eax	# target_flags, target_flags.572
	andl	$33554432, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	jne	.L575	#,
	.loc 1 3490 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.573
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.574
	movl	%eax, %ecx	# ix86_cpu.575, tmp465
	sarl	%cl, %edx	# tmp465, D.29175
	movl	%edx, %eax	# D.29175, D.29175
	andl	$1, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	je	.L575	#,
.L579:
	movq	-72(%rbp), %rax	# to, tmp409
	movq	8(%rax), %rax	# to_40(D)->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _195->mode, D.29169
	cmpb	$5, %al	#, D.29169
	jne	.L578	#,
	movl	target_flags(%rip), %eax	# target_flags, target_flags.576
	andl	$33554432, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	jne	.L575	#,
.L578:
	.loc 1 3492 0 is_stmt 1
	cmpl	$63, -48(%rbp)	#, code
	jne	.L580	#,
	.loc 1 3493 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp410
	movzbl	2(%rax), %edx	# x_3->mode, D.29169
	movq	-72(%rbp), %rax	# to, tmp411
	movq	8(%rax), %rax	# to_40(D)->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _200->mode, D.29169
	.loc 1 3492 0 discriminator 1
	cmpb	%al, %dl	# D.29169, D.29169
	je	.L575	#,
	.loc 1 3493 0
	movq	-56(%rbp), %rax	# x, tmp412
	movzbl	2(%rax), %eax	# x_3->mode, D.29169
	cmpb	$3, %al	#, D.29169
	je	.L581	#,
	.loc 1 3493 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp413
	movzbl	2(%rax), %eax	# x_3->mode, D.29169
	cmpb	$4, %al	#, D.29169
	je	.L581	#,
	movq	-56(%rbp), %rax	# x, tmp414
	movzbl	2(%rax), %eax	# x_3->mode, D.29169
	cmpb	$2, %al	#, D.29169
	jne	.L582	#,
	.loc 1 3493 0 discriminator 2
	movl	target_flags(%rip), %eax	# target_flags, target_flags.577
	andl	$33554432, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	jne	.L581	#,
	.loc 1 3493 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.578
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.579
	movl	%eax, %ecx	# ix86_cpu.580, tmp467
	sarl	%cl, %edx	# tmp467, D.29175
	movl	%edx, %eax	# D.29175, D.29175
	andl	$1, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	je	.L581	#,
.L582:
	movq	-56(%rbp), %rax	# x, tmp415
	movzbl	2(%rax), %eax	# x_3->mode, D.29169
	cmpb	$5, %al	#, D.29169
	jne	.L580	#,
	movl	target_flags(%rip), %eax	# target_flags, target_flags.581
	andl	$33554432, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	je	.L580	#,
.L581:
	.loc 1 3493 0 discriminator 2
	movq	-72(%rbp), %rax	# to, tmp416
	movq	8(%rax), %rax	# to_40(D)->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _215->mode, D.29169
	cmpb	$3, %al	#, D.29169
	je	.L575	#,
	.loc 1 3493 0 discriminator 1
	movq	-72(%rbp), %rax	# to, tmp417
	movq	8(%rax), %rax	# to_40(D)->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _217->mode, D.29169
	cmpb	$4, %al	#, D.29169
	je	.L575	#,
	movq	-56(%rbp), %rax	# x, tmp418
	movzbl	2(%rax), %eax	# x_3->mode, D.29169
	cmpb	$2, %al	#, D.29169
	jne	.L583	#,
	.loc 1 3493 0 discriminator 2
	movl	target_flags(%rip), %eax	# target_flags, target_flags.582
	andl	$33554432, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	jne	.L575	#,
	.loc 1 3493 0 discriminator 1
	movl	x86_partial_reg_stall(%rip), %edx	# x86_partial_reg_stall, x86_partial_reg_stall.583
	movl	ix86_cpu(%rip), %eax	# ix86_cpu, ix86_cpu.584
	movl	%eax, %ecx	# ix86_cpu.585, tmp469
	sarl	%cl, %edx	# tmp469, D.29175
	movl	%edx, %eax	# D.29175, D.29175
	andl	$1, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	je	.L575	#,
.L583:
	movq	-72(%rbp), %rax	# to, tmp419
	movq	8(%rax), %rax	# to_40(D)->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _227->mode, D.29169
	cmpb	$5, %al	#, D.29169
	jne	.L580	#,
	movl	target_flags(%rip), %eax	# target_flags, target_flags.586
	andl	$33554432, %eax	#, D.29175
	testl	%eax, %eax	# D.29175
	jne	.L575	#,
.L580:
	.loc 1 3499 0 is_stmt 1
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29170
	movq	%rax, %rdx	# D.29170,
	movl	$0, %esi	#,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L545	#
.L575:
	.loc 1 3513 0
	cmpl	$0, -80(%rbp)	#, unique_copy
	je	.L584	#,
	.loc 1 3513 0 is_stmt 0 discriminator 1
	movl	n_occurrences(%rip), %eax	# n_occurrences, n_occurrences.588
	testl	%eax, %eax	# n_occurrences.588
	je	.L584	#,
	movq	-72(%rbp), %rax	# to, tmp420
	movq	%rax, %rdi	# tmp420,
	call	copy_rtx	#
	jmp	.L585	#
.L584:
	.loc 1 3513 0 discriminator 2
	movq	-72(%rbp), %rax	# to, iftmp.587
.L585:
	.loc 1 3513 0 discriminator 3
	movq	%rax, -16(%rbp)	# iftmp.587, new
	.loc 1 3514 0 is_stmt 1 discriminator 3
	movl	n_occurrences(%rip), %eax	# n_occurrences, n_occurrences.589
	addl	$1, %eax	#, n_occurrences.590
	movl	%eax, n_occurrences(%rip)	# n_occurrences.590, n_occurrences
	jmp	.L572	#
.L574:
	.loc 1 3525 0
	cmpl	$0, -76(%rbp)	#, in_dest
	je	.L586	#,
	.loc 1 3527 0
	cmpl	$63, -48(%rbp)	#, code
	je	.L587	#,
	.loc 1 3527 0 is_stmt 0 discriminator 1
	cmpl	$64, -48(%rbp)	#, code
	je	.L587	#,
	.loc 1 3528 0 is_stmt 1
	cmpl	$133, -48(%rbp)	#, code
	je	.L587	#,
.L586:
	.loc 1 3529 0
	cmpl	$47, -48(%rbp)	#, code
	jne	.L588	#,
.L587:
	.loc 1 3525 0
	cmpl	$0, -40(%rbp)	#, i
	jne	.L588	#,
	.loc 1 3525 0 is_stmt 0 discriminator 1
	movl	$1, %eax	#, iftmp.591
	jmp	.L589	#
.L588:
	.loc 1 3525 0 discriminator 2
	movl	$0, %eax	#, iftmp.591
.L589:
	.loc 1 3525 0 discriminator 3
	movq	-56(%rbp), %rdx	# x, tmp421
	movl	-40(%rbp), %ecx	# i, tmp423
	movslq	%ecx, %rcx	# tmp423, tmp422
	movq	8(%rdx,%rcx,8), %rdi	# x_3->fld[i_14].rtx, D.29170
	movl	-80(%rbp), %ecx	# unique_copy, tmp424
	movq	-72(%rbp), %rdx	# to, tmp425
	movq	-64(%rbp), %rsi	# from, tmp426
	movl	%ecx, %r8d	# tmp424,
	movl	%eax, %ecx	# iftmp.591,
	call	subst	#
	movq	%rax, -16(%rbp)	# tmp427, new
.L572:
	.loc 1 3538 0 is_stmt 1
	movq	-16(%rbp), %rax	# new, tmp428
	movzwl	(%rax), %eax	# new_17->code, D.29167
	cmpw	$49, %ax	#, D.29167
	jne	.L590	#,
	.loc 1 3538 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# new, tmp429
	movq	8(%rax), %rdx	# new_17->fld[0].rtx, D.29170
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29170
	cmpq	%rax, %rdx	# D.29170, D.29170
	jne	.L590	#,
	.loc 1 3539 0 is_stmt 1
	movq	-16(%rbp), %rax	# new, D.29166
	jmp	.L545	#
.L590:
	.loc 1 3541 0
	movq	-16(%rbp), %rax	# new, tmp430
	movzwl	(%rax), %eax	# new_17->code, D.29167
	cmpw	$54, %ax	#, D.29167
	jne	.L591	#,
	.loc 1 3541 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp431
	movzwl	(%rax), %eax	# x_3->code, D.29167
	cmpw	$63, %ax	#, D.29167
	jne	.L591	#,
.LBB37:
	.loc 1 3543 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, tmp432
	movzbl	2(%rax), %eax	# x_3->mode, D.29169
	movzbl	%al, %eax	# D.29169, tmp433
	movl	%eax, -28(%rbp)	# tmp433, mode
	.loc 1 3544 0
	movq	-56(%rbp), %rax	# x, tmp434
	movl	16(%rax), %ecx	# x_3->fld[1].rtuint, D.29168
	.loc 1 3545 0
	movq	-56(%rbp), %rax	# x, tmp435
	movq	8(%rax), %rax	# x_3->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _248->mode, D.29169
	.loc 1 3544 0
	movzbl	%al, %edx	# D.29169, D.29171
	movq	-16(%rbp), %rsi	# new, tmp436
	movl	-28(%rbp), %eax	# mode, tmp437
	movl	%eax, %edi	# tmp437,
	call	simplify_subreg	#
	movq	%rax, -56(%rbp)	# tmp438, x
	.loc 1 3547 0
	cmpq	$0, -56(%rbp)	#, x
	jne	.L592	#,
	.loc 1 3548 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29170
	movl	-28(%rbp), %eax	# mode, tmp439
	movl	%eax, %esi	# tmp439,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, -56(%rbp)	# tmp440, x
.LBE37:
	.loc 1 3542 0
	jmp	.L569	#
.L592:
	jmp	.L569	#
.L591:
	.loc 1 3550 0
	movq	-16(%rbp), %rax	# new, tmp441
	movzwl	(%rax), %eax	# new_17->code, D.29167
	cmpw	$54, %ax	#, D.29167
	jne	.L593	#,
	.loc 1 3551 0
	movq	-56(%rbp), %rax	# x, tmp442
	movzwl	(%rax), %eax	# x_3->code, D.29167
	cmpw	$121, %ax	#, D.29167
	jne	.L593	#,
	.loc 1 3554 0
	movq	-56(%rbp), %rax	# x, tmp443
	movq	8(%rax), %rax	# x_3->fld[0].rtx, D.29170
	movzbl	2(%rax), %eax	# _256->mode, D.29169
	.loc 1 3553 0
	movzbl	%al, %ecx	# D.29169, D.29171
	movq	-56(%rbp), %rax	# x, tmp444
	movzbl	2(%rax), %eax	# x_3->mode, D.29169
	movzbl	%al, %eax	# D.29169, D.29171
	movq	-16(%rbp), %rdx	# new, tmp445
	movl	%eax, %esi	# D.29171,
	movl	$121, %edi	#,
	call	simplify_unary_operation	#
	movq	%rax, -56(%rbp)	# tmp446, x
	.loc 1 3555 0
	cmpq	$0, -56(%rbp)	#, x
	jne	.L594	#,
	.loc 1 3556 0
	movl	$__FUNCTION__.11733, %edx	#,
	movl	$3556, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L594:
	.loc 1 3555 0 discriminator 1
	jmp	.L569	#
.L593:
	.loc 1 3559 0
	movl	-40(%rbp), %eax	# i, tmp448
	cltq
	leaq	0(,%rax,8), %rdx	#, tmp449
	movq	-56(%rbp), %rax	# x, tmp451
	addq	%rdx, %rax	# tmp449, tmp450
	leaq	8(%rax), %rdx	#, D.29174
	movq	-16(%rbp), %rax	# new, tmp452
	movq	%rax, %rsi	# tmp452,
	movq	%rdx, %rdi	# D.29174,
	call	do_SUBST	#
.L569:
	.loc 1 3435 0
	addl	$1, -40(%rbp)	#, i
.L560:
	.loc 1 3435 0 is_stmt 0 discriminator 1
	movl	-40(%rbp), %eax	# i, tmp453
	cmpl	-32(%rbp), %eax	# len, tmp453
	jl	.L595	#,
.L556:
	.loc 1 3568 0 is_stmt 1
	movl	$0, -40(%rbp)	#, i
	jmp	.L596	#
.L600:
	.loc 1 3572 0
	cmpl	$54, -48(%rbp)	#, code
	je	.L597	#,
	.loc 1 3572 0 is_stmt 0 discriminator 1
	cmpl	$61, -48(%rbp)	#, code
	je	.L597	#,
	cmpl	$49, -48(%rbp)	#, code
	je	.L597	#,
	.loc 1 3573 0 is_stmt 1
	cmpl	$3, -40(%rbp)	#, i
	sete	%al	#, D.29178
	movzbl	%al, %edx	# D.29178, D.29175
	movl	-76(%rbp), %ecx	# in_dest, tmp454
	movl	-44(%rbp), %esi	# op0_mode, tmp455
	movq	-56(%rbp), %rax	# x, tmp456
	movq	%rax, %rdi	# tmp456,
	call	combine_simplify_rtx	#
	movq	%rax, -56(%rbp)	# tmp457, x
.L597:
	.loc 1 3575 0
	movq	-56(%rbp), %rax	# x, tmp458
	movzwl	(%rax), %eax	# x_5->code, D.29167
	movzwl	%ax, %eax	# D.29167, D.29168
	cmpl	-48(%rbp), %eax	# code, D.29168
	jne	.L598	#,
	.loc 1 3576 0
	jmp	.L599	#
.L598:
	.loc 1 3578 0
	movq	-56(%rbp), %rax	# x, tmp459
	movzwl	(%rax), %eax	# x_5->code, D.29167
	movzwl	%ax, %eax	# D.29167, tmp460
	movl	%eax, -48(%rbp)	# tmp460, code
	.loc 1 3582 0
	movl	$0, -44(%rbp)	#, op0_mode
	.loc 1 3568 0
	addl	$1, -40(%rbp)	#, i
.L596:
	.loc 1 3568 0 is_stmt 0 discriminator 1
	cmpl	$3, -40(%rbp)	#, i
	jle	.L600	#,
.L599:
	.loc 1 3585 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, D.29166
.L545:
	.loc 1 3586 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE17:
	.size	subst, .-subst
	.type	combine_simplify_rtx, @function
combine_simplify_rtx:
.LFB18:
	.loc 1 3602 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$256, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -248(%rbp)	# x, x
	movl	%esi, -252(%rbp)	# op0_mode, op0_mode
	movl	%edx, -256(%rbp)	# last, last
	movl	%ecx, -260(%rbp)	# in_dest, in_dest
	.loc 1 3603 0
	movq	-248(%rbp), %rax	# x, tmp997
	movzwl	(%rax), %eax	# x_41(D)->code, D.29181
	movzwl	%ax, %eax	# D.29181, tmp998
	movl	%eax, -232(%rbp)	# tmp998, code
	.loc 1 3604 0
	movq	-248(%rbp), %rax	# x, tmp999
	movzbl	2(%rax), %eax	# x_41(D)->mode, D.29182
	movzbl	%al, %eax	# D.29182, tmp1000
	movl	%eax, -228(%rbp)	# tmp1000, mode
	.loc 1 3611 0
	movl	-232(%rbp), %eax	# code, code.592
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$99, %al	#, D.29183
	jne	.L602	#,
	.loc 1 3612 0
	movq	-248(%rbp), %rax	# x, tmp1002
	movq	16(%rax), %rdx	# x_41(D)->fld[1].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1003
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	%rdx, %rsi	# D.29184,
	movq	%rax, %rdi	# D.29184,
	call	swap_commutative_operands_p	#
	testl	%eax, %eax	# D.29185
	je	.L602	#,
	.loc 1 3614 0
	movq	-248(%rbp), %rax	# x, tmp1004
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, tmp1005
	movq	%rax, -160(%rbp)	# tmp1005, temp
	.loc 1 3615 0
	movq	-248(%rbp), %rax	# x, tmp1006
	movq	16(%rax), %rax	# x_41(D)->fld[1].rtx, D.29184
	movq	-248(%rbp), %rdx	# x, tmp1007
	addq	$8, %rdx	#, D.29186
	movq	%rax, %rsi	# D.29184,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
	.loc 1 3616 0
	movq	-248(%rbp), %rax	# x, tmp1008
	leaq	16(%rax), %rdx	#, D.29186
	movq	-160(%rbp), %rax	# temp, tmp1009
	movq	%rax, %rsi	# tmp1009,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
.L602:
	.loc 1 3637 0
	cmpl	$75, -232(%rbp)	#, code
	je	.L603	#,
	.loc 1 3637 0 is_stmt 0 discriminator 1
	cmpl	$76, -232(%rbp)	#, code
	je	.L603	#,
	cmpl	$78, -232(%rbp)	#, code
	jne	.L604	#,
.L603:
	.loc 1 3638 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1010
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _55->code, D.29181
	cmpw	$89, %ax	#, D.29181
	jne	.L604	#,
	.loc 1 3639 0
	movq	-248(%rbp), %rax	# x, tmp1011
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _57->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _58->code, D.29181
	cmpw	$75, %ax	#, D.29181
	jne	.L604	#,
	.loc 1 3640 0
	movq	-248(%rbp), %rax	# x, tmp1012
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _60->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _61->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _62->code, D.29181
	cmpw	$87, %ax	#, D.29181
	jne	.L604	#,
	.loc 1 3641 0
	movq	-248(%rbp), %rax	# x, tmp1013
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _64->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _65->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _66->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _67->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L604	#,
	.loc 1 3642 0
	movq	-248(%rbp), %rax	# x, tmp1014
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _69->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _70->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L604	#,
	.loc 1 3643 0
	movq	-248(%rbp), %rax	# x, tmp1015
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _72->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _73->fld[0].rtx, D.29184
	movq	16(%rax), %rdx	# _74->fld[1].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1016
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _76->fld[1].rtx, D.29184
	cmpq	%rax, %rdx	# D.29184, D.29184
	jne	.L604	#,
	.loc 1 3644 0
	movq	-248(%rbp), %rax	# x, tmp1017
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _78->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _79->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _80->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L604	#,
	.loc 1 3647 0
	movq	-248(%rbp), %rax	# x, tmp1018
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	.loc 1 3645 0
	movq	16(%rax), %rcx	# _82->fld[1].rtx, D.29184
	.loc 1 3646 0
	movq	-248(%rbp), %rax	# x, tmp1019
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _84->fld[0].rtx, D.29184
	.loc 1 3645 0
	movq	16(%rax), %rdx	# _85->fld[1].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1020
	movl	%eax, %esi	# tmp1020,
	movl	$89, %edi	#,
	call	simplify_binary_operation	#
	movq	%rax, -160(%rbp)	# tmp1021, temp
	cmpq	$0, -160(%rbp)	#, temp
	je	.L604	#,
.LBB38:
	.loc 1 3652 0
	movq	-248(%rbp), %rax	# x, tmp1022
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _88->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _89->fld[0].rtwint, D.29187
	.loc 1 3650 0
	movl	%eax, %ecx	# D.29187, D.29185
	.loc 1 3651 0
	movq	-248(%rbp), %rax	# x, tmp1023
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _92->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _93->fld[0].rtx, D.29184
	.loc 1 3650 0
	movq	8(%rax), %rdx	# _94->fld[0].rtx, D.29184
	.loc 1 3649 0
	movl	-228(%rbp), %eax	# mode, tmp1024
	movl	%ecx, %r8d	# D.29185,
	movq	%rdx, %rcx	# D.29184,
	movl	%eax, %edx	# tmp1024,
	movl	$87, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, -96(%rbp)	# tmp1025, new
	.loc 1 3655 0
	movq	-248(%rbp), %rax	# x, tmp1026
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _97->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _98->fld[0].rtwint, D.29187
	.loc 1 3654 0
	movl	%eax, %ecx	# D.29187, D.29185
	movq	-96(%rbp), %rdx	# new, tmp1027
	movl	-228(%rbp), %eax	# mode, tmp1028
	movl	%ecx, %r8d	# D.29185,
	movq	%rdx, %rcx	# tmp1027,
	movl	%eax, %edx	# tmp1028,
	movl	$89, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, -96(%rbp)	# tmp1029, new
	.loc 1 3657 0
	movq	-160(%rbp), %rcx	# temp, tmp1030
	movq	-96(%rbp), %rdx	# new, tmp1031
	movl	-228(%rbp), %eax	# mode, tmp1032
	movl	%eax, %esi	# tmp1032,
	movl	$75, %edi	#,
	call	gen_binary	#
	movq	-248(%rbp), %rdx	# x, tmp1033
	addq	$8, %rdx	#, D.29186
	movq	%rax, %rsi	# D.29184,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
.L604:
.LBE38:
	.loc 1 3667 0
	movl	-232(%rbp), %eax	# code, code.593
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$50, %al	#, D.29183
	je	.L605	#,
	.loc 1 3667 0 is_stmt 0 discriminator 1
	movl	-232(%rbp), %eax	# code, code.594
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$99, %al	#, D.29183
	je	.L605	#,
	.loc 1 3668 0 is_stmt 1
	movl	-232(%rbp), %eax	# code, code.595
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$60, %al	#, D.29183
	jne	.L606	#,
.L605:
	.loc 1 3669 0
	movq	-248(%rbp), %rax	# x, tmp1037
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _110->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$111, %al	#, D.29183
	je	.L607	#,
	.loc 1 3670 0
	movq	-248(%rbp), %rax	# x, tmp1039
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _114->code, D.29181
	cmpw	$63, %ax	#, D.29181
	jne	.L608	#,
	.loc 1 3671 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1040
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _116->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _117->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	.loc 1 3670 0 discriminator 1
	cmpb	$111, %al	#, D.29183
	jne	.L608	#,
.L607:
	.loc 1 3673 0
	movq	-248(%rbp), %rax	# x, tmp1042
	movq	16(%rax), %rax	# x_41(D)->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _121->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$111, %al	#, D.29183
	je	.L606	#,
	.loc 1 3674 0
	movq	-248(%rbp), %rax	# x, tmp1044
	movq	16(%rax), %rax	# x_41(D)->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _125->code, D.29181
	cmpw	$63, %ax	#, D.29181
	jne	.L608	#,
	.loc 1 3675 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1045
	movq	16(%rax), %rax	# x_41(D)->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _127->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _128->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	.loc 1 3674 0 discriminator 1
	cmpb	$111, %al	#, D.29183
	jne	.L608	#,
.L606:
	.loc 1 3677 0
	movl	-232(%rbp), %eax	# code, code.596
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$49, %al	#, D.29183
	jne	.L609	#,
	.loc 1 3678 0
	movq	-248(%rbp), %rax	# x, tmp1048
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _135->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$111, %al	#, D.29183
	je	.L609	#,
	.loc 1 3679 0
	movq	-248(%rbp), %rax	# x, tmp1050
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _139->code, D.29181
	cmpw	$63, %ax	#, D.29181
	jne	.L608	#,
	.loc 1 3680 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1051
	movq	8(%rax), %rax	# x_41(D)->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _141->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _142->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	.loc 1 3679 0 discriminator 1
	cmpb	$111, %al	#, D.29183
	je	.L609	#,
.L608:
.LBB39:
	.loc 1 3685 0
	leaq	-176(%rbp), %rdx	#, tmp1053
	leaq	-184(%rbp), %rcx	#, tmp1054
	movq	-248(%rbp), %rax	# x, tmp1055
	movq	%rcx, %rsi	# tmp1054,
	movq	%rax, %rdi	# tmp1055,
	call	if_then_else_cond	#
	movq	%rax, -192(%rbp)	# cond.597, cond
	.loc 1 3686 0
	movq	-192(%rbp), %rax	# cond, cond.598
	testq	%rax, %rax	# cond.598
	je	.L609	#,
	.loc 1 3689 0
	movl	-232(%rbp), %eax	# code, code.599
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$60, %al	#, D.29183
	jne	.L611	#,
	.loc 1 3690 0 discriminator 1
	movq	-184(%rbp), %rax	# true_rtx, true_rtx.600
	movzwl	(%rax), %eax	# true_rtx.600_150->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	.loc 1 3689 0 discriminator 1
	cmpb	$60, %al	#, D.29183
	je	.L609	#,
	.loc 1 3691 0
	movq	-176(%rbp), %rax	# false_rtx, false_rtx.601
	movzwl	(%rax), %eax	# false_rtx.601_154->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$60, %al	#, D.29183
	je	.L609	#,
.L611:
.LBB40:
	.loc 1 3693 0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, cop1.602
	movq	%rax, -168(%rbp)	# cop1.602, cop1
	.loc 1 3694 0
	leaq	-168(%rbp), %rdx	#, tmp1059
	leaq	-192(%rbp), %rax	#, tmp1060
	movq	%rax, %rsi	# tmp1060,
	movl	$102, %edi	#,
	call	simplify_comparison	#
	movl	%eax, -208(%rbp)	# tmp1061, cond_code
	.loc 1 3696 0
	cmpl	$102, -208(%rbp)	#, cond_code
	jne	.L612	#,
	.loc 1 3696 0 is_stmt 0 discriminator 1
	movq	-192(%rbp), %rax	# cond, cond.603
	movzwl	(%rax), %eax	# cond.603_160->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$60, %al	#, D.29183
	jne	.L612	#,
	.loc 1 3697 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, D.29180
	jmp	.L620	#
.L612:
	.loc 1 3701 0
	movq	global_rtl(%rip), %rdx	# global_rtl, D.29184
	movq	global_rtl(%rip), %rsi	# global_rtl, D.29184
	movq	-184(%rbp), %rax	# true_rtx, true_rtx.604
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# true_rtx.604,
	call	subst	#
	movq	%rax, -184(%rbp)	# true_rtx.605, true_rtx
	.loc 1 3702 0
	movq	global_rtl(%rip), %rdx	# global_rtl, D.29184
	movq	global_rtl(%rip), %rsi	# global_rtl, D.29184
	movq	-176(%rbp), %rax	# false_rtx, false_rtx.606
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# false_rtx.606,
	call	subst	#
	movq	%rax, -176(%rbp)	# false_rtx.607, false_rtx
	.loc 1 3706 0
	movq	-184(%rbp), %rax	# true_rtx, true_rtx.608
	movl	$0, %esi	#,
	movq	%rax, %rdi	# true_rtx.608,
	call	general_operand	#
	testl	%eax, %eax	# D.29185
	je	.L610	#,
	.loc 1 3707 0
	movq	-176(%rbp), %rax	# false_rtx, false_rtx.609
	movl	$0, %esi	#,
	movq	%rax, %rdi	# false_rtx.609,
	call	general_operand	#
	testl	%eax, %eax	# D.29185
	je	.L610	#,
	.loc 1 3714 0
	movq	-184(%rbp), %rdx	# true_rtx, true_rtx.610
	movq	const_true_rtx(%rip), %rax	# const_true_rtx, const_true_rtx.611
	cmpq	%rax, %rdx	# const_true_rtx.611, true_rtx.610
	jne	.L615	#,
	.loc 1 3714 0 is_stmt 0 discriminator 1
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29184
	movq	-176(%rbp), %rax	# false_rtx, false_rtx.612
	cmpq	%rax, %rdx	# false_rtx.612, D.29184
	jne	.L615	#,
	.loc 1 3715 0 is_stmt 1
	movq	-168(%rbp), %rcx	# cop1, cop1.613
	movq	-192(%rbp), %rdx	# cond, cond.614
	movl	-228(%rbp), %esi	# mode, tmp1063
	movl	-208(%rbp), %eax	# cond_code, tmp1064
	movl	%eax, %edi	# tmp1064,
	call	gen_binary	#
	movq	%rax, -248(%rbp)	# tmp1065, x
	jmp	.L616	#
.L615:
	.loc 1 3716 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29184
	movq	-184(%rbp), %rax	# true_rtx, true_rtx.615
	cmpq	%rax, %rdx	# true_rtx.615, D.29184
	jne	.L617	#,
	.loc 1 3716 0 is_stmt 0 discriminator 1
	movq	-176(%rbp), %rdx	# false_rtx, false_rtx.616
	movq	const_true_rtx(%rip), %rax	# const_true_rtx, const_true_rtx.617
	cmpq	%rax, %rdx	# const_true_rtx.617, false_rtx.616
	jne	.L617	#,
	.loc 1 3717 0 is_stmt 1
	movl	-208(%rbp), %eax	# cond_code, tmp1066
	movl	%eax, %edi	# tmp1066,
	call	reverse_condition	#
	testl	%eax, %eax	# D.29188
	je	.L617	#,
	.loc 1 3718 0
	movq	-168(%rbp), %r12	# cop1, cop1.618
	movq	-192(%rbp), %rbx	# cond, cond.619
	movl	-208(%rbp), %eax	# cond_code, tmp1067
	movl	%eax, %edi	# tmp1067,
	call	reverse_condition	#
	movl	-228(%rbp), %esi	# mode, tmp1068
	movq	%r12, %rcx	# cop1.618,
	movq	%rbx, %rdx	# cond.619,
	movl	%eax, %edi	# D.29188,
	call	gen_binary	#
	movq	%rax, -248(%rbp)	# tmp1069, x
	jmp	.L616	#
.L617:
	.loc 1 3723 0
	movq	-184(%rbp), %rax	# true_rtx, true_rtx.620
	movzwl	(%rax), %eax	# true_rtx.620_193->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L618	#,
	.loc 1 3724 0
	movq	-184(%rbp), %rax	# true_rtx, true_rtx.621
	movq	8(%rax), %rax	# true_rtx.621_195->fld[0].rtwint, D.29187
	cmpq	$-1, %rax	#, D.29187
	jne	.L618	#,
	.loc 1 3725 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29184
	movq	-176(%rbp), %rax	# false_rtx, false_rtx.622
	cmpq	%rax, %rdx	# false_rtx.622, D.29184
	jne	.L618	#,
	.loc 1 3726 0
	movq	-168(%rbp), %rcx	# cop1, cop1.623
	movq	-192(%rbp), %rdx	# cond, cond.624
	movl	-228(%rbp), %esi	# mode, tmp1070
	movl	-208(%rbp), %eax	# cond_code, tmp1071
	movl	%eax, %edi	# tmp1071,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %ecx	# mode, tmp1072
	movl	-228(%rbp), %eax	# mode, tmp1073
	movl	%eax, %esi	# tmp1073,
	movl	$77, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, -248(%rbp)	# tmp1074, x
	jmp	.L616	#
.L618:
	.loc 1 3730 0
	movq	-176(%rbp), %rax	# false_rtx, false_rtx.625
	movzwl	(%rax), %eax	# false_rtx.625_203->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L619	#,
	.loc 1 3731 0
	movq	-176(%rbp), %rax	# false_rtx, false_rtx.626
	movq	8(%rax), %rax	# false_rtx.626_205->fld[0].rtwint, D.29187
	cmpq	$-1, %rax	#, D.29187
	jne	.L619	#,
	.loc 1 3732 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29184
	movq	-184(%rbp), %rax	# true_rtx, true_rtx.627
	cmpq	%rax, %rdx	# true_rtx.627, D.29184
	jne	.L619	#,
	.loc 1 3733 0
	movq	-168(%rbp), %r12	# cop1, cop1.628
	movq	-192(%rbp), %rbx	# cond, cond.629
	movl	-208(%rbp), %eax	# cond_code, tmp1075
	movl	%eax, %edi	# tmp1075,
	call	reverse_condition	#
	movl	-228(%rbp), %esi	# mode, tmp1076
	movq	%r12, %rcx	# cop1.628,
	movq	%rbx, %rdx	# cond.629,
	movl	%eax, %edi	# D.29188,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %ecx	# mode, tmp1077
	movl	-228(%rbp), %eax	# mode, tmp1078
	movl	%eax, %esi	# tmp1078,
	movl	$77, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, -248(%rbp)	# tmp1079, x
	jmp	.L616	#
.L619:
	.loc 1 3739 0
	movq	-176(%rbp), %r12	# false_rtx, false_rtx.630
	movq	-184(%rbp), %rbx	# true_rtx, true_rtx.631
	movq	-168(%rbp), %rcx	# cop1, cop1.632
	movq	-192(%rbp), %rdx	# cond, cond.633
	movl	-208(%rbp), %eax	# cond_code, tmp1080
	movl	$0, %esi	#,
	movl	%eax, %edi	# tmp1080,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1081
	movq	%r12, %r8	# false_rtx.630,
	movq	%rbx, %rcx	# true_rtx.631,
	movl	%eax, %esi	# tmp1081,
	movl	$72, %edi	#,
	call	gen_rtx_fmt_eee	#
	jmp	.L620	#
.L616:
	.loc 1 3744 0
	movq	-248(%rbp), %rax	# x, tmp1082
	movzwl	(%rax), %eax	# x_1->code, D.29181
	movzwl	%ax, %eax	# D.29181, tmp1083
	movl	%eax, -232(%rbp)	# tmp1083, code
	.loc 1 3745 0
	movl	$0, -252(%rbp)	#, op0_mode
.LBE40:
	jmp	.L609	#
.L610:
.L609:
.LBE39:
	.loc 1 3752 0
	movq	$0, -160(%rbp)	#, temp
	.loc 1 3753 0
	movl	-232(%rbp), %eax	# code, code.634
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	movsbl	%al, %eax	# D.29183, D.29185
	subl	$49, %eax	#, tmp1085
	cmpl	$50, %eax	#, tmp1085
	ja	.L621	#,
	movl	%eax, %eax	# tmp1085, tmp1086
	movq	.L623(,%rax,8), %rax	#, tmp1087
	jmp	*%rax	# tmp1087
	.section	.rodata
	.align 8
	.align 4
.L623:
	.quad	.L622
	.quad	.L624
	.quad	.L625
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L626
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L621
	.quad	.L625
	.quad	.L624
	.text
.L622:
	.loc 1 3756 0
	movq	-248(%rbp), %rax	# x, tmp1088
	movq	8(%rax), %rdx	# x_4->fld[0].rtx, D.29184
	movl	-252(%rbp), %ecx	# op0_mode, tmp1089
	movl	-228(%rbp), %esi	# mode, tmp1090
	movl	-232(%rbp), %eax	# code, tmp1091
	movl	%eax, %edi	# tmp1091,
	call	simplify_unary_operation	#
	movq	%rax, -160(%rbp)	# tmp1092, temp
	.loc 1 3757 0
	jmp	.L621	#
.L626:
.LBB41:
	.loc 1 3760 0
	movq	-248(%rbp), %rax	# x, tmp1093
	movq	8(%rax), %rax	# x_4->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _229->mode, D.29182
	movzbl	%al, %eax	# D.29182, tmp1094
	movl	%eax, -220(%rbp)	# tmp1094, cmp_mode
	.loc 1 3761 0
	cmpl	$0, -220(%rbp)	#, cmp_mode
	jne	.L627	#,
	.loc 1 3763 0
	movq	-248(%rbp), %rax	# x, tmp1095
	movq	16(%rax), %rax	# x_4->fld[1].rtx, D.29184
	movzbl	2(%rax), %eax	# _232->mode, D.29182
	movzbl	%al, %eax	# D.29182, tmp1096
	movl	%eax, -220(%rbp)	# tmp1096, cmp_mode
	.loc 1 3764 0
	cmpl	$0, -220(%rbp)	#, cmp_mode
	jne	.L627	#,
	.loc 1 3765 0
	movl	-252(%rbp), %eax	# op0_mode, tmp1097
	movl	%eax, -220(%rbp)	# tmp1097, cmp_mode
.L627:
	.loc 1 3767 0
	movq	-248(%rbp), %rax	# x, tmp1098
	movq	16(%rax), %rcx	# x_4->fld[1].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1099
	movq	8(%rax), %rdx	# x_4->fld[0].rtx, D.29184
	movl	-220(%rbp), %esi	# cmp_mode, tmp1100
	movl	-232(%rbp), %eax	# code, tmp1101
	movl	%eax, %edi	# tmp1101,
	call	simplify_relational_operation	#
	movq	%rax, -160(%rbp)	# tmp1102, temp
.LBE41:
	.loc 1 3779 0
	jmp	.L621	#
.L624:
	.loc 1 3782 0
	movq	-248(%rbp), %rax	# x, tmp1103
	movq	16(%rax), %rcx	# x_4->fld[1].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1104
	movq	8(%rax), %rdx	# x_4->fld[0].rtx, D.29184
	movl	-228(%rbp), %esi	# mode, tmp1105
	movl	-232(%rbp), %eax	# code, tmp1106
	movl	%eax, %edi	# tmp1106,
	call	simplify_binary_operation	#
	movq	%rax, -160(%rbp)	# tmp1107, temp
	.loc 1 3783 0
	jmp	.L621	#
.L625:
	.loc 1 3786 0
	movq	-248(%rbp), %rax	# x, tmp1108
	movq	24(%rax), %r8	# x_4->fld[2].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1109
	movq	16(%rax), %rdi	# x_4->fld[1].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1110
	movq	8(%rax), %rcx	# x_4->fld[0].rtx, D.29184
	movl	-252(%rbp), %edx	# op0_mode, tmp1111
	movl	-228(%rbp), %esi	# mode, tmp1112
	movl	-232(%rbp), %eax	# code, tmp1113
	movq	%r8, %r9	# D.29184,
	movq	%rdi, %r8	# D.29184,
	movl	%eax, %edi	# tmp1113,
	call	simplify_ternary_operation	#
	movq	%rax, -160(%rbp)	# tmp1114, temp
	.loc 1 3788 0
	nop
.L621:
	.loc 1 3791 0
	cmpq	$0, -160(%rbp)	#, temp
	je	.L628	#,
	.loc 1 3793 0
	movq	-160(%rbp), %rax	# temp, tmp1115
	movq	%rax, -248(%rbp)	# tmp1115, x
	.loc 1 3794 0
	movq	-160(%rbp), %rax	# temp, tmp1116
	movzwl	(%rax), %eax	# temp_21->code, D.29181
	movzwl	%ax, %eax	# D.29181, tmp1117
	movl	%eax, -232(%rbp)	# tmp1117, code
	.loc 1 3795 0
	movl	$0, -252(%rbp)	#, op0_mode
	.loc 1 3796 0
	movq	-160(%rbp), %rax	# temp, tmp1118
	movzbl	2(%rax), %eax	# temp_21->mode, D.29182
	movzbl	%al, %eax	# D.29182, tmp1119
	movl	%eax, -228(%rbp)	# tmp1119, mode
.L628:
	.loc 1 3800 0
	cmpl	$75, -232(%rbp)	#, code
	je	.L629	#,
	.loc 1 3800 0 is_stmt 0 discriminator 1
	cmpl	$76, -232(%rbp)	#, code
	je	.L629	#,
	.loc 1 3801 0 is_stmt 1
	cmpl	$83, -232(%rbp)	#, code
	je	.L629	#,
	.loc 1 3801 0 is_stmt 0 discriminator 1
	cmpl	$84, -232(%rbp)	#, code
	je	.L629	#,
	cmpl	$85, -232(%rbp)	#, code
	jne	.L630	#,
.L629:
	.loc 1 3803 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1120
	movq	%rax, %rdi	# tmp1120,
	call	apply_distributive_law	#
	movq	%rax, -248(%rbp)	# tmp1121, x
	.loc 1 3804 0
	movq	-248(%rbp), %rax	# x, tmp1122
	movzwl	(%rax), %eax	# x_252->code, D.29181
	movzwl	%ax, %eax	# D.29181, tmp1123
	movl	%eax, -232(%rbp)	# tmp1123, code
	.loc 1 3805 0
	movl	$0, -252(%rbp)	#, op0_mode
.L630:
	.loc 1 3811 0
	cmpl	$75, -232(%rbp)	#, code
	je	.L631	#,
	.loc 1 3811 0 is_stmt 0 discriminator 1
	cmpl	$76, -232(%rbp)	#, code
	je	.L631	#,
	cmpl	$78, -232(%rbp)	#, code
	je	.L631	#,
	cmpl	$79, -232(%rbp)	#, code
	je	.L631	#,
	.loc 1 3812 0 is_stmt 1
	cmpl	$83, -232(%rbp)	#, code
	je	.L631	#,
	.loc 1 3812 0 is_stmt 0 discriminator 1
	cmpl	$84, -232(%rbp)	#, code
	je	.L631	#,
	cmpl	$85, -232(%rbp)	#, code
	je	.L631	#,
	.loc 1 3813 0 is_stmt 1
	cmpl	$93, -232(%rbp)	#, code
	je	.L631	#,
	.loc 1 3813 0 is_stmt 0 discriminator 1
	cmpl	$92, -232(%rbp)	#, code
	je	.L631	#,
	cmpl	$95, -232(%rbp)	#, code
	je	.L631	#,
	cmpl	$94, -232(%rbp)	#, code
	jne	.L632	#,
.L631:
	.loc 1 3814 0 is_stmt 1
	movl	-228(%rbp), %eax	# mode, mode.635
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$1, %eax	#, D.29189
	je	.L633	#,
	.loc 1 3814 0 is_stmt 0 discriminator 2
	movl	-228(%rbp), %eax	# mode, mode.636
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$3, %eax	#, D.29189
	je	.L633	#,
	.loc 1 3814 0 discriminator 1
	movl	-228(%rbp), %eax	# mode, mode.637
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$5, %eax	#, D.29189
	je	.L633	#,
	movl	-228(%rbp), %eax	# mode, mode.638
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$7, %eax	#, D.29189
	jne	.L634	#,
.L633:
	cmpl	$79, -232(%rbp)	#, code
	jne	.L635	#,
.L634:
	.loc 1 3815 0 is_stmt 1
	movl	flag_unsafe_math_optimizations(%rip), %eax	# flag_unsafe_math_optimizations, flag_unsafe_math_optimizations.639
	testl	%eax, %eax	# flag_unsafe_math_optimizations.639
	je	.L632	#,
	.loc 1 3815 0 is_stmt 0 discriminator 1
	movl	-228(%rbp), %eax	# mode, mode.640
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$2, %eax	#, D.29189
	je	.L635	#,
	movl	-228(%rbp), %eax	# mode, mode.641
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$6, %eax	#, D.29189
	je	.L635	#,
	movl	-228(%rbp), %eax	# mode, mode.642
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$8, %eax	#, D.29189
	jne	.L632	#,
.L635:
	.loc 1 3817 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1131
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _271->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29190
	cmpl	-232(%rbp), %eax	# code, D.29190
	jne	.L632	#,
.LBB42:
	.loc 1 3819 0
	movq	-248(%rbp), %rax	# x, tmp1132
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _274->fld[0].rtx, tmp1133
	movq	%rax, -152(%rbp)	# tmp1133, other
	.loc 1 3820 0
	movq	-248(%rbp), %rax	# x, tmp1134
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _276->fld[1].rtx, tmp1135
	movq	%rax, -144(%rbp)	# tmp1135, inner_op0
	.loc 1 3821 0
	movq	-248(%rbp), %rax	# x, tmp1136
	movq	16(%rax), %rax	# x_6->fld[1].rtx, tmp1137
	movq	%rax, -136(%rbp)	# tmp1137, inner_op1
	.loc 1 3826 0
	movq	-144(%rbp), %rax	# inner_op0, tmp1138
	movzwl	(%rax), %eax	# inner_op0_277->code, D.29181
	cmpw	$67, %ax	#, D.29181
	je	.L636	#,
	.loc 1 3826 0 is_stmt 0 discriminator 2
	movq	-144(%rbp), %rax	# inner_op0, tmp1139
	movzwl	(%rax), %eax	# inner_op0_277->code, D.29181
	cmpw	$68, %ax	#, D.29181
	je	.L636	#,
	.loc 1 3826 0 discriminator 1
	movq	-144(%rbp), %rax	# inner_op0, tmp1140
	movzwl	(%rax), %eax	# inner_op0_277->code, D.29181
	cmpw	$54, %ax	#, D.29181
	je	.L636	#,
	movq	-144(%rbp), %rax	# inner_op0, tmp1141
	movzwl	(%rax), %eax	# inner_op0_277->code, D.29181
	cmpw	$55, %ax	#, D.29181
	je	.L636	#,
	movq	-144(%rbp), %rax	# inner_op0, tmp1142
	movzwl	(%rax), %eax	# inner_op0_277->code, D.29181
	cmpw	$58, %ax	#, D.29181
	je	.L636	#,
	movq	-144(%rbp), %rax	# inner_op0, tmp1143
	movzwl	(%rax), %eax	# inner_op0_277->code, D.29181
	cmpw	$134, %ax	#, D.29181
	je	.L636	#,
	movq	-144(%rbp), %rax	# inner_op0, tmp1144
	movzwl	(%rax), %eax	# inner_op0_277->code, D.29181
	cmpw	$56, %ax	#, D.29181
	je	.L636	#,
	movq	-144(%rbp), %rax	# inner_op0, tmp1145
	movzwl	(%rax), %eax	# inner_op0_277->code, D.29181
	cmpw	$140, %ax	#, D.29181
	jne	.L637	#,
.L636:
	movl	-232(%rbp), %eax	# code, code.643
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$99, %al	#, D.29183
	jne	.L637	#,
.LBB43:
	.loc 1 3828 0 is_stmt 1
	movq	-144(%rbp), %rax	# inner_op0, tmp1147
	movq	%rax, -88(%rbp)	# tmp1147, tem
	.loc 1 3829 0
	movq	-136(%rbp), %rax	# inner_op1, tmp1148
	movq	%rax, -144(%rbp)	# tmp1148, inner_op0
	.loc 1 3830 0
	movq	-88(%rbp), %rax	# tem, tmp1149
	movq	%rax, -136(%rbp)	# tmp1149, inner_op1
.L637:
.LBE43:
	.loc 1 3832 0
	cmpl	$76, -232(%rbp)	#, code
	je	.L638	#,
	.loc 1 3832 0 is_stmt 0 discriminator 1
	cmpl	$79, -232(%rbp)	#, code
	je	.L639	#,
	.loc 1 3832 0 discriminator 3
	movl	-232(%rbp), %eax	# code, iftmp.645
	jmp	.L641	#
.L639:
	.loc 1 3832 0 discriminator 4
	movl	$78, %eax	#, iftmp.645
	jmp	.L641	#
.L638:
	.loc 1 3832 0 discriminator 2
	movl	$75, %eax	#, iftmp.644
.L641:
	.loc 1 3832 0 discriminator 5
	movq	-136(%rbp), %rcx	# inner_op1, tmp1150
	movq	-144(%rbp), %rdx	# inner_op0, tmp1151
	movl	-228(%rbp), %esi	# mode, tmp1152
	movl	%eax, %edi	# iftmp.644,
	call	simplify_binary_operation	#
	movq	%rax, -128(%rbp)	# tmp1153, inner
	.loc 1 3839 0 is_stmt 1 discriminator 5
	cmpq	$0, -128(%rbp)	#, inner
	jne	.L642	#,
	.loc 1 3839 0 is_stmt 0 discriminator 1
	movl	-232(%rbp), %eax	# code, code.646
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$99, %al	#, D.29183
	jne	.L642	#,
	.loc 1 3841 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1155
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _299->fld[1].rtx, tmp1156
	movq	%rax, -152(%rbp)	# tmp1156, other
	.loc 1 3842 0
	movq	-248(%rbp), %rax	# x, tmp1157
	movq	16(%rax), %rcx	# x_6->fld[1].rtx, D.29184
	.loc 1 3843 0
	movq	-248(%rbp), %rax	# x, tmp1158
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	.loc 1 3842 0
	movq	8(%rax), %rdx	# _302->fld[0].rtx, D.29184
	movl	-228(%rbp), %esi	# mode, tmp1159
	movl	-232(%rbp), %eax	# code, tmp1160
	movl	%eax, %edi	# tmp1160,
	call	simplify_binary_operation	#
	movq	%rax, -128(%rbp)	# tmp1161, inner
.L642:
	.loc 1 3847 0
	cmpq	$0, -128(%rbp)	#, inner
	je	.L632	#,
	.loc 1 3848 0
	movq	-128(%rbp), %rcx	# inner, tmp1162
	movq	-152(%rbp), %rdx	# other, tmp1163
	movl	-228(%rbp), %esi	# mode, tmp1164
	movl	-232(%rbp), %eax	# code, tmp1165
	movl	%eax, %edi	# tmp1165,
	call	gen_binary	#
	jmp	.L620	#
.L632:
.LBE42:
	.loc 1 3853 0
	movl	-232(%rbp), %eax	# code, tmp1167
	subl	$47, %eax	#, tmp1166
	cmpl	$96, %eax	#, tmp1166
	ja	.L761	#,
	movl	%eax, %eax	# tmp1166, tmp1168
	movq	.L645(,%rax,8), %rax	#, tmp1169
	jmp	*%rax	# tmp1169
	.section	.rodata
	.align 8
	.align 4
.L645:
	.quad	.L644
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L646
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L647
	.quad	.L761
	.quad	.L761
	.quad	.L648
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L649
	.quad	.L761
	.quad	.L761
	.quad	.L650
	.quad	.L651
	.quad	.L652
	.quad	.L653
	.quad	.L761
	.quad	.L761
	.quad	.L654
	.quad	.L761
	.quad	.L655
	.quad	.L655
	.quad	.L655
	.quad	.L656
	.quad	.L657
	.quad	.L657
	.quad	.L657
	.quad	.L657
	.quad	.L657
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L658
	.quad	.L659
	.quad	.L659
	.quad	.L660
	.quad	.L761
	.quad	.L661
	.quad	.L662
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L663
	.quad	.L761
	.quad	.L664
	.quad	.L659
	.quad	.L659
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L761
	.quad	.L665
	.text
.L648:
	.loc 1 3858 0
	movq	-248(%rbp), %rax	# x, tmp1170
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movl	$66, %esi	#,
	movq	%rax, %rdi	# D.29184,
	call	make_compound_operation	#
	movq	%rax, -160(%rbp)	# tmp1171, temp
	.loc 1 3859 0
	movq	-248(%rbp), %rax	# x, tmp1172
	leaq	8(%rax), %rdx	#, D.29186
	movq	-160(%rbp), %rax	# temp, tmp1173
	movq	%rax, %rsi	# tmp1173,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
	.loc 1 3860 0
	jmp	.L666	#
.L647:
	.loc 1 3863 0
	cmpl	$0, -252(%rbp)	#, op0_mode
	jne	.L667	#,
	.loc 1 3864 0
	movq	-248(%rbp), %rax	# x, tmp1174
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _309->mode, D.29182
	movzbl	%al, %eax	# D.29182, tmp1175
	movl	%eax, -252(%rbp)	# tmp1175, op0_mode
.L667:
	.loc 1 3867 0
	movq	-248(%rbp), %rax	# x, tmp1176
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _312->code, D.29181
	cmpw	$67, %ax	#, D.29181
	je	.L668	#,
	.loc 1 3867 0 is_stmt 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1177
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _314->code, D.29181
	cmpw	$68, %ax	#, D.29181
	je	.L668	#,
	movq	-248(%rbp), %rax	# x, tmp1178
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _316->code, D.29181
	cmpw	$54, %ax	#, D.29181
	je	.L668	#,
	movq	-248(%rbp), %rax	# x, tmp1179
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _318->code, D.29181
	cmpw	$55, %ax	#, D.29181
	je	.L668	#,
	movq	-248(%rbp), %rax	# x, tmp1180
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _320->code, D.29181
	cmpw	$58, %ax	#, D.29181
	je	.L668	#,
	movq	-248(%rbp), %rax	# x, tmp1181
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _322->code, D.29181
	cmpw	$134, %ax	#, D.29181
	je	.L668	#,
	movq	-248(%rbp), %rax	# x, tmp1182
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _324->code, D.29181
	cmpw	$56, %ax	#, D.29181
	je	.L668	#,
	movq	-248(%rbp), %rax	# x, tmp1183
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _326->code, D.29181
	cmpw	$140, %ax	#, D.29181
	jne	.L669	#,
.L668:
	.loc 1 3868 0 is_stmt 1
	movl	-252(%rbp), %edx	# op0_mode, tmp1184
	movl	-228(%rbp), %eax	# mode, tmp1185
	movl	%edx, %esi	# tmp1184,
	movl	%eax, %edi	# tmp1185,
	call	subreg_lowpart_offset	#
	movq	-248(%rbp), %rdx	# x, tmp1186
	movl	16(%rdx), %edx	# x_6->fld[1].rtuint, D.29190
	cmpl	%edx, %eax	# D.29190, D.29190
	jne	.L669	#,
	.loc 1 3869 0
	movq	-248(%rbp), %rax	# x, tmp1187
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1188
	movq	%rdx, %rsi	# D.29184,
	movl	%eax, %edi	# tmp1188,
	call	gen_lowpart_for_combine	#
	jmp	.L620	#
.L669:
	.loc 1 3871 0
	movq	-248(%rbp), %rax	# x, tmp1189
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _332->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29185
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$4, %eax	#, D.29189
	jne	.L670	#,
	.loc 1 3872 0
	jmp	.L666	#
.L670:
.LBB44:
	.loc 1 3875 0
	movq	-248(%rbp), %rax	# x, tmp1191
	movl	16(%rax), %ecx	# x_6->fld[1].rtuint, D.29190
	movq	-248(%rbp), %rax	# x, tmp1192
	movq	8(%rax), %rsi	# x_6->fld[0].rtx, D.29184
	movl	-252(%rbp), %edx	# op0_mode, tmp1193
	movl	-228(%rbp), %eax	# mode, tmp1194
	movl	%eax, %edi	# tmp1194,
	call	simplify_subreg	#
	movq	%rax, -80(%rbp)	# tmp1195, temp
	.loc 1 3877 0
	cmpq	$0, -80(%rbp)	#, temp
	je	.L671	#,
	.loc 1 3878 0
	movq	-80(%rbp), %rax	# temp, D.29180
	jmp	.L620	#
.L671:
.LBE44:
	.loc 1 3883 0
	movq	-248(%rbp), %rax	# x, tmp1196
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _340->code, D.29181
	cmpw	$66, %ax	#, D.29181
	jne	.L672	#,
	.loc 1 3884 0
	movq	-248(%rbp), %rax	# x, tmp1197
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzbl	3(%rax), %eax	# *_342, D.29182
	andl	$8, %eax	#, D.29182
	testb	%al, %al	# D.29182
	jne	.L673	#,
	.loc 1 3885 0
	movq	-248(%rbp), %rax	# x, tmp1198
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _345->fld[0].rtx, D.29184
	movq	%rax, %rdi	# D.29184,
	call	mode_dependent_address_p	#
	testl	%eax, %eax	# D.29185
	je	.L672	#,
.L673:
	.loc 1 3886 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1199
	movl	%eax, %esi	# tmp1199,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L620	#
.L672:
	.loc 1 3892 0
	jmp	.L666	#
.L656:
	.loc 1 3896 0
	movq	-248(%rbp), %rax	# x, tmp1200
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _350->code, D.29181
	cmpw	$75, %ax	#, D.29181
	jne	.L674	#,
	.loc 1 3897 0
	movq	-248(%rbp), %rax	# x, tmp1201
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rdx	# _352->fld[1].rtx, D.29184
	movq	const_int_rtx+504(%rip), %rax	# const_int_rtx, D.29184
	cmpq	%rax, %rdx	# D.29184, D.29184
	jne	.L674	#,
	.loc 1 3898 0
	movq	-248(%rbp), %rax	# x, tmp1202
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rdx	# _355->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1203
	movl	%eax, %esi	# tmp1203,
	movl	$77, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L620	#
.L674:
	.loc 1 3901 0
	movq	-248(%rbp), %rax	# x, tmp1204
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _358->code, D.29181
	cmpw	$77, %ax	#, D.29181
	jne	.L675	#,
	.loc 1 3902 0
	movq	const_int_rtx+504(%rip), %rcx	# const_int_rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1205
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rdx	# _361->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1206
	movl	%eax, %esi	# tmp1206,
	movl	$75, %edi	#,
	call	gen_rtx_fmt_ee	#
	jmp	.L620	#
.L675:
	.loc 1 3905 0
	movq	-248(%rbp), %rax	# x, tmp1207
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _364->code, D.29181
	cmpw	$85, %ax	#, D.29181
	jne	.L676	#,
	.loc 1 3906 0
	movq	-248(%rbp), %rax	# x, tmp1208
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _366->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _367->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L676	#,
	.loc 1 3908 0
	movq	-248(%rbp), %rax	# x, tmp1209
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	.loc 1 3907 0
	movq	16(%rax), %rdx	# _369->fld[1].rtx, D.29184
	movl	-228(%rbp), %ecx	# mode, tmp1210
	movl	-228(%rbp), %eax	# mode, tmp1211
	movl	%eax, %esi	# tmp1211,
	movl	$86, %edi	#,
	call	simplify_unary_operation	#
	movq	%rax, -160(%rbp)	# tmp1212, temp
	cmpq	$0, -160(%rbp)	#, temp
	je	.L676	#,
	.loc 1 3910 0
	movq	-248(%rbp), %rax	# x, tmp1213
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rdx	# _372->fld[0].rtx, D.29184
	movq	-160(%rbp), %rcx	# temp, tmp1214
	movl	-228(%rbp), %eax	# mode, tmp1215
	movl	%eax, %esi	# tmp1215,
	movl	$85, %edi	#,
	call	gen_binary	#
	jmp	.L620	#
.L676:
	.loc 1 3916 0
	movq	-248(%rbp), %rax	# x, tmp1216
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _375->code, D.29181
	cmpw	$87, %ax	#, D.29181
	jne	.L677	#,
	.loc 1 3917 0
	movq	-248(%rbp), %rax	# x, tmp1217
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rdx	# _377->fld[0].rtx, D.29184
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29184
	cmpq	%rax, %rdx	# D.29184, D.29184
	jne	.L677	#,
	.loc 1 3918 0
	movq	-248(%rbp), %rax	# x, tmp1218
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rbx	# _380->fld[1].rtx, D.29184
	movq	const_int_rtx+520(%rip), %rdx	# const_int_rtx, D.29184
	movl	-228(%rbp), %ecx	# mode, tmp1219
	movl	-228(%rbp), %eax	# mode, tmp1220
	movl	%eax, %esi	# tmp1220,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1221
	movq	%rbx, %rcx	# D.29184,
	movl	%eax, %esi	# tmp1221,
	movl	$88, %edi	#,
	call	gen_rtx_fmt_ee	#
	jmp	.L620	#
.L677:
	.loc 1 3922 0
	movq	-248(%rbp), %rax	# x, tmp1222
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _385->code, D.29181
	cmpw	$63, %ax	#, D.29181
	jne	.L678	#,
	.loc 1 3923 0
	movq	-248(%rbp), %rax	# x, tmp1223
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	%rax, %rdi	# D.29184,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29185
	je	.L678	#,
	.loc 1 3924 0
	movq	-248(%rbp), %rax	# x, tmp1224
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _389->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29185
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29182
	.loc 1 3925 0
	movq	-248(%rbp), %rax	# x, tmp1226
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _393->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _394->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29185
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29182
	.loc 1 3924 0
	cmpb	%al, %dl	# D.29182, D.29182
	jae	.L678	#,
	.loc 1 3926 0
	movq	-248(%rbp), %rax	# x, tmp1228
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _398->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _399->code, D.29181
	cmpw	$87, %ax	#, D.29181
	jne	.L678	#,
	.loc 1 3927 0
	movq	-248(%rbp), %rax	# x, tmp1229
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _401->fld[0].rtx, D.29184
	movq	8(%rax), %rdx	# _402->fld[0].rtx, D.29184
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29184
	cmpq	%rax, %rdx	# D.29184, D.29184
	jne	.L678	#,
.LBB45:
	.loc 1 3929 0
	movq	-248(%rbp), %rax	# x, tmp1230
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _405->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _406->mode, D.29182
	movzbl	%al, %eax	# D.29182, tmp1231
	movl	%eax, -204(%rbp)	# tmp1231, inner_mode
	.loc 1 3931 0
	movq	-248(%rbp), %rax	# x, tmp1232
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _409->fld[0].rtx, D.29184
	movq	16(%rax), %rbx	# _410->fld[1].rtx, D.29184
	movq	const_int_rtx+520(%rip), %rdx	# const_int_rtx, D.29184
	movl	-204(%rbp), %ecx	# inner_mode, tmp1233
	movl	-204(%rbp), %eax	# inner_mode, tmp1234
	movl	%eax, %esi	# tmp1234,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, %rdx	#, D.29184
	movl	-204(%rbp), %eax	# inner_mode, tmp1235
	movq	%rbx, %rcx	# D.29184,
	movl	%eax, %esi	# tmp1235,
	movl	$88, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -248(%rbp)	# tmp1236, x
	.loc 1 3935 0
	movq	-248(%rbp), %rdx	# x, tmp1237
	movl	-228(%rbp), %eax	# mode, tmp1238
	movq	%rdx, %rsi	# tmp1237,
	movl	%eax, %edi	# tmp1238,
	call	gen_lowpart_for_combine	#
	jmp	.L620	#
.L678:
.LBE45:
	.loc 1 3961 0
	movq	-248(%rbp), %rax	# x, tmp1239
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _416->code, D.29181
	cmpw	$84, %ax	#, D.29181
	je	.L679	#,
	.loc 1 3961 0 is_stmt 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1240
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _418->code, D.29181
	cmpw	$83, %ax	#, D.29181
	jne	.L680	#,
.L679:
.LBB46:
	.loc 1 3963 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1241
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _420->fld[0].rtx, tmp1242
	movq	%rax, -120(%rbp)	# tmp1242, in1
	movq	-248(%rbp), %rax	# x, tmp1243
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _422->fld[1].rtx, tmp1244
	movq	%rax, -112(%rbp)	# tmp1244, in2
	.loc 1 3966 0
	movq	-120(%rbp), %rax	# in1, tmp1245
	movzbl	2(%rax), %eax	# in1_421->mode, D.29182
	movzbl	%al, %eax	# D.29182, tmp1246
	movl	%eax, -216(%rbp)	# tmp1246, op_mode
	.loc 1 3967 0
	movl	-216(%rbp), %ecx	# op_mode, tmp1247
	movq	-120(%rbp), %rdx	# in1, tmp1248
	movl	-216(%rbp), %eax	# op_mode, tmp1249
	movl	%eax, %esi	# tmp1249,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, -120(%rbp)	# tmp1250, in1
	.loc 1 3969 0
	movq	-112(%rbp), %rax	# in2, tmp1251
	movzbl	2(%rax), %eax	# in2_423->mode, D.29182
	movzbl	%al, %eax	# D.29182, tmp1252
	movl	%eax, -216(%rbp)	# tmp1252, op_mode
	.loc 1 3970 0
	cmpl	$0, -216(%rbp)	#, op_mode
	jne	.L681	#,
	.loc 1 3971 0
	movl	-228(%rbp), %eax	# mode, tmp1253
	movl	%eax, -216(%rbp)	# tmp1253, op_mode
.L681:
	.loc 1 3972 0
	movl	-216(%rbp), %ecx	# op_mode, tmp1254
	movq	-112(%rbp), %rdx	# in2, tmp1255
	movl	-216(%rbp), %eax	# op_mode, tmp1256
	movl	%eax, %esi	# tmp1256,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, -112(%rbp)	# tmp1257, in2
	.loc 1 3974 0
	movq	-112(%rbp), %rax	# in2, tmp1258
	movzwl	(%rax), %eax	# in2_430->code, D.29181
	cmpw	$86, %ax	#, D.29181
	jne	.L682	#,
	.loc 1 3974 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# in1, tmp1259
	movzwl	(%rax), %eax	# in1_426->code, D.29181
	cmpw	$86, %ax	#, D.29181
	je	.L682	#,
.LBB47:
	.loc 1 3976 0 is_stmt 1
	movq	-112(%rbp), %rax	# in2, tmp1260
	movq	%rax, -72(%rbp)	# tmp1260, tem
	.loc 1 3977 0
	movq	-120(%rbp), %rax	# in1, tmp1261
	movq	%rax, -112(%rbp)	# tmp1261, in2
	movq	-72(%rbp), %rax	# tem, tmp1262
	movq	%rax, -120(%rbp)	# tmp1262, in1
.L682:
.LBE47:
	.loc 1 3980 0
	movq	-248(%rbp), %rax	# x, tmp1263
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _436->code, D.29181
	cmpw	$84, %ax	#, D.29181
	jne	.L683	#,
	.loc 1 3980 0 is_stmt 0 discriminator 1
	movl	$83, %eax	#, iftmp.647
	jmp	.L684	#
.L683:
	.loc 1 3980 0 discriminator 2
	movl	$84, %eax	#, iftmp.647
.L684:
	.loc 1 3980 0 discriminator 3
	movq	-112(%rbp), %rcx	# in2, tmp1264
	movq	-120(%rbp), %rdx	# in1, tmp1265
	movl	-228(%rbp), %esi	# mode, tmp1266
	movl	%eax, %edi	# iftmp.647,
	call	gen_rtx_fmt_ee	#
	jmp	.L620	#
.L680:
.LBE46:
	.loc 1 3983 0 is_stmt 1
	jmp	.L666	#
.L652:
	.loc 1 3987 0
	movq	-248(%rbp), %rax	# x, tmp1267
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _441->code, D.29181
	cmpw	$75, %ax	#, D.29181
	jne	.L685	#,
	.loc 1 3988 0
	movq	-248(%rbp), %rax	# x, tmp1268
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rdx	# _443->fld[1].rtx, D.29184
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29184
	cmpq	%rax, %rdx	# D.29184, D.29184
	jne	.L685	#,
	.loc 1 3989 0
	movq	-248(%rbp), %rax	# x, tmp1269
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rdx	# _446->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1270
	movl	%eax, %esi	# tmp1270,
	movl	$86, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L620	#
.L685:
	.loc 1 3992 0
	movq	-248(%rbp), %rax	# x, tmp1271
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _449->code, D.29181
	cmpw	$86, %ax	#, D.29181
	jne	.L686	#,
	.loc 1 3993 0
	movq	-248(%rbp), %rax	# x, tmp1272
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _451->fld[0].rtx, D.29184
	movl	$1, %esi	#,
	movq	%rax, %rdi	# D.29184,
	call	plus_constant_wide	#
	jmp	.L620	#
.L686:
	.loc 1 3996 0
	movq	-248(%rbp), %rax	# x, tmp1273
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _454->code, D.29181
	cmpw	$76, %ax	#, D.29181
	jne	.L687	#,
	.loc 1 3997 0
	movl	-228(%rbp), %eax	# mode, mode.648
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$2, %eax	#, D.29189
	je	.L688	#,
	.loc 1 3997 0 is_stmt 0 discriminator 1
	movl	-228(%rbp), %eax	# mode, mode.649
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$6, %eax	#, D.29189
	je	.L688	#,
	movl	-228(%rbp), %eax	# mode, mode.650
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	.loc 1 3999 0 is_stmt 1 discriminator 1
	cmpl	$8, %eax	#, D.29189
	jne	.L689	#,
.L688:
	.loc 1 4000 0
	movl	flag_unsafe_math_optimizations(%rip), %eax	# flag_unsafe_math_optimizations, flag_unsafe_math_optimizations.651
	testl	%eax, %eax	# flag_unsafe_math_optimizations.651
	je	.L687	#,
.L689:
	.loc 1 4002 0
	movq	-248(%rbp), %rax	# x, tmp1277
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	.loc 1 4001 0
	movq	8(%rax), %rcx	# _463->fld[0].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1278
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rdx	# _465->fld[1].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1279
	movl	%eax, %esi	# tmp1279,
	movl	$76, %edi	#,
	call	gen_binary	#
	jmp	.L620	#
.L687:
	.loc 1 4005 0
	movq	-248(%rbp), %rax	# x, tmp1280
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _468->code, D.29181
	cmpw	$85, %ax	#, D.29181
	jne	.L690	#,
	.loc 1 4005 0 is_stmt 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1281
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rdx	# _470->fld[1].rtx, D.29184
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29184
	cmpq	%rax, %rdx	# D.29184, D.29184
	jne	.L690	#,
	.loc 1 4006 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1282
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _473->fld[0].rtx, D.29184
	movl	-228(%rbp), %edx	# mode, tmp1283
	movl	%edx, %esi	# tmp1283,
	movq	%rax, %rdi	# D.29184,
	call	nonzero_bits	#
	cmpq	$1, %rax	#, D.29191
	jne	.L690	#,
	.loc 1 4007 0
	movq	const_int_rtx+504(%rip), %rcx	# const_int_rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1284
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rdx	# _477->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1285
	movl	%eax, %esi	# tmp1285,
	movl	$75, %edi	#,
	call	gen_binary	#
	jmp	.L620	#
.L690:
	.loc 1 4013 0
	movq	-248(%rbp), %rax	# x, tmp1286
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _480->code, D.29181
	cmpw	$87, %ax	#, D.29181
	jne	.L691	#,
	.loc 1 4016 0
	movq	-248(%rbp), %rax	# x, tmp1287
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	.loc 1 4015 0
	movq	8(%rax), %rdx	# _482->fld[0].rtx, D.29184
	movl	-228(%rbp), %ecx	# mode, tmp1288
	movl	-228(%rbp), %eax	# mode, tmp1289
	movl	%eax, %esi	# tmp1289,
	movl	$77, %edi	#,
	call	simplify_unary_operation	#
	movq	%rax, -160(%rbp)	# tmp1290, temp
	.loc 1 4017 0
	cmpq	$0, -160(%rbp)	#, temp
	je	.L691	#,
	.loc 1 4018 0
	movq	-248(%rbp), %rax	# x, tmp1291
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rcx	# _485->fld[1].rtx, D.29184
	movq	-160(%rbp), %rdx	# temp, tmp1292
	movl	-228(%rbp), %eax	# mode, tmp1293
	movl	%eax, %esi	# tmp1293,
	movl	$87, %edi	#,
	call	gen_binary	#
	jmp	.L620	#
.L691:
	.loc 1 4021 0
	movq	-248(%rbp), %rax	# x, tmp1294
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	%rax, %rdi	# D.29184,
	call	expand_compound_operation	#
	movq	%rax, -160(%rbp)	# tmp1295, temp
	.loc 1 4027 0
	movq	-160(%rbp), %rax	# temp, tmp1296
	movzwl	(%rax), %eax	# temp_489->code, D.29181
	cmpw	$89, %ax	#, D.29181
	jne	.L692	#,
	.loc 1 4028 0
	movq	-160(%rbp), %rax	# temp, tmp1297
	movq	16(%rax), %rax	# temp_489->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _491->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L692	#,
	.loc 1 4029 0
	movq	-160(%rbp), %rax	# temp, tmp1298
	movq	16(%rax), %rax	# temp_489->fld[1].rtx, D.29184
	movq	8(%rax), %rdx	# _493->fld[0].rtwint, D.29187
	movl	-228(%rbp), %eax	# mode, mode.652
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	subl	$1, %eax	#, D.29185
	cltq
	cmpq	%rax, %rdx	# D.29187, D.29187
	jne	.L692	#,
	.loc 1 4031 0
	movq	-160(%rbp), %rax	# temp, tmp1300
	movq	16(%rax), %rax	# temp_489->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _500->fld[0].rtwint, D.29187
	.loc 1 4030 0
	movl	%eax, %esi	# D.29187, D.29185
	movq	-160(%rbp), %rax	# temp, tmp1301
	movq	8(%rax), %rcx	# temp_489->fld[0].rtx, D.29184
	movl	-228(%rbp), %edx	# mode, tmp1302
	movq	-160(%rbp), %rax	# temp, tmp1303
	movl	%esi, %r8d	# D.29185,
	movl	$90, %esi	#,
	movq	%rax, %rdi	# tmp1303,
	call	simplify_shift_const	#
	jmp	.L620	#
.L692:
	.loc 1 4040 0
	movq	-160(%rbp), %rax	# temp, tmp1304
	movzwl	(%rax), %eax	# temp_489->code, D.29181
	cmpw	$61, %ax	#, D.29181
	je	.L693	#,
	.loc 1 4041 0
	movq	-160(%rbp), %rax	# temp, tmp1305
	movzwl	(%rax), %eax	# temp_489->code, D.29181
	cmpw	$63, %ax	#, D.29181
	jne	.L694	#,
	.loc 1 4042 0 discriminator 1
	movq	-160(%rbp), %rax	# temp, tmp1306
	movq	8(%rax), %rax	# temp_489->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _507->code, D.29181
	.loc 1 4041 0 discriminator 1
	cmpw	$61, %ax	#, D.29181
	je	.L693	#,
.L694:
	.loc 1 4043 0
	movl	-228(%rbp), %edx	# mode, tmp1307
	movq	-160(%rbp), %rax	# temp, tmp1308
	movl	%edx, %esi	# tmp1307,
	movq	%rax, %rdi	# tmp1308,
	call	nonzero_bits	#
	movq	%rax, %rdi	# D.29191,
	call	exact_log2_wide	#
	movl	%eax, -224(%rbp)	# tmp1309, i
	cmpl	$0, -224(%rbp)	#, i
	js	.L693	#,
.LBB48:
	.loc 1 4049 0
	movl	-228(%rbp), %eax	# mode, mode.653
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	subl	$1, %eax	#, D.29185
	.loc 1 4046 0
	subl	-224(%rbp), %eax	# i, D.29185
	movl	%eax, %ebx	# D.29185, D.29185
	.loc 1 4048 0
	movl	-228(%rbp), %eax	# mode, mode.654
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	subl	$1, %eax	#, D.29185
	.loc 1 4046 0
	subl	-224(%rbp), %eax	# i, D.29185
	movl	%eax, %ecx	# D.29185, D.29185
	movq	-160(%rbp), %rdx	# temp, tmp1312
	movl	-228(%rbp), %eax	# mode, tmp1313
	movl	%ecx, %r8d	# D.29185,
	movq	%rdx, %rcx	# tmp1312,
	movl	%eax, %edx	# tmp1313,
	movl	$87, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, %rdx	#, D.29184
	.loc 1 4045 0
	movl	-228(%rbp), %eax	# mode, tmp1314
	movl	%ebx, %r8d	# D.29185,
	movq	%rdx, %rcx	# D.29184,
	movl	%eax, %edx	# tmp1314,
	movl	$89, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, -64(%rbp)	# tmp1315, temp1
	.loc 1 4054 0
	movq	-64(%rbp), %rax	# temp1, tmp1316
	movzwl	(%rax), %eax	# temp1_522->code, D.29181
	cmpw	$89, %ax	#, D.29181
	jne	.L695	#,
	.loc 1 4055 0
	movq	-64(%rbp), %rax	# temp1, tmp1317
	movq	8(%rax), %rax	# temp1_522->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _524->code, D.29181
	cmpw	$87, %ax	#, D.29181
	jne	.L695	#,
	.loc 1 4056 0
	movq	-64(%rbp), %rax	# temp1, tmp1318
	movq	8(%rax), %rax	# temp1_522->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _526->fld[0].rtx, D.29184
	cmpq	-160(%rbp), %rax	# temp, D.29184
	je	.L693	#,
.L695:
	.loc 1 4057 0
	movq	-64(%rbp), %rax	# temp1, D.29180
	jmp	.L620	#
.L693:
.LBE48:
	.loc 1 4059 0
	jmp	.L666	#
.L660:
	.loc 1 4065 0
	movl	-228(%rbp), %eax	# mode, mode.655
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$3, %eax	#, D.29189
	jne	.L696	#,
	.loc 1 4066 0
	jmp	.L666	#
.L696:
	.loc 1 4068 0
	movl	-228(%rbp), %eax	# mode, mode.656
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	cmpw	$64, %ax	#, D.29181
	ja	.L697	#,
	.loc 1 4071 0
	movl	-228(%rbp), %eax	# mode, mode.657
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29191
	movq	-248(%rbp), %rax	# x, tmp1322
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _535->mode, D.29182
	movzbl	%al, %esi	# D.29182, D.29192
	movq	-248(%rbp), %rax	# x, tmp1323
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# D.29184,
	call	force_to_mode	#
	movq	-248(%rbp), %rdx	# x, tmp1324
	addq	$8, %rdx	#, D.29186
	movq	%rax, %rsi	# D.29184,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
.L697:
	.loc 1 4076 0
	movq	-248(%rbp), %rax	# x, tmp1325
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _541->code, D.29181
	cmpw	$120, %ax	#, D.29181
	je	.L698	#,
	.loc 1 4077 0
	movq	-248(%rbp), %rax	# x, tmp1326
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _543->code, D.29181
	cmpw	$121, %ax	#, D.29181
	jne	.L699	#,
.L698:
	.loc 1 4078 0
	movq	-248(%rbp), %rax	# x, tmp1327
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _545->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _546->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29190
	cmpl	-228(%rbp), %eax	# mode, D.29190
	jne	.L699	#,
	.loc 1 4079 0
	movq	-248(%rbp), %rax	# x, tmp1328
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _549->fld[0].rtx, D.29180
	jmp	.L620	#
.L699:
	.loc 1 4083 0
	movq	-248(%rbp), %rax	# x, tmp1329
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _551->code, D.29181
	cmpw	$129, %ax	#, D.29181
	je	.L700	#,
	.loc 1 4084 0
	movq	-248(%rbp), %rax	# x, tmp1330
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _553->code, D.29181
	cmpw	$77, %ax	#, D.29181
	jne	.L701	#,
.L700:
	.loc 1 4085 0
	movq	-248(%rbp), %rax	# x, tmp1331
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _555->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _556->code, D.29181
	cmpw	$120, %ax	#, D.29181
	je	.L702	#,
	.loc 1 4086 0
	movq	-248(%rbp), %rax	# x, tmp1332
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _558->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _559->code, D.29181
	cmpw	$121, %ax	#, D.29181
	jne	.L701	#,
.L702:
	.loc 1 4087 0
	movq	-248(%rbp), %rax	# x, tmp1333
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _561->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _562->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _563->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29190
	cmpl	-228(%rbp), %eax	# mode, D.29190
	jne	.L701	#,
	.loc 1 4089 0
	movq	-248(%rbp), %rax	# x, tmp1334
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _566->fld[0].rtx, D.29184
	.loc 1 4088 0
	movq	8(%rax), %rdx	# _567->fld[0].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1335
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _569->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29188
	movl	-228(%rbp), %ecx	# mode, tmp1336
	movl	-228(%rbp), %esi	# mode, tmp1337
	movl	%eax, %edi	# D.29188,
	call	simplify_gen_unary	#
	jmp	.L620	#
.L701:
	.loc 1 4093 0
	movq	-248(%rbp), %rax	# x, tmp1338
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _573->code, D.29181
	cmpw	$63, %ax	#, D.29181
	jne	.L703	#,
	.loc 1 4094 0
	movq	-248(%rbp), %rax	# x, tmp1339
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _575->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _576->code, D.29181
	cmpw	$122, %ax	#, D.29181
	jne	.L703	#,
	.loc 1 4095 0
	movq	-248(%rbp), %rax	# x, tmp1340
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	%rax, %rdi	# D.29184,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29185
	je	.L703	#,
	.loc 1 4096 0
	movq	-248(%rbp), %rax	# x, tmp1341
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _580->fld[0].rtx, D.29180
	jmp	.L620	#
.L703:
	.loc 1 4105 0
	movq	-248(%rbp), %rax	# x, tmp1342
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _582->mode, D.29182
	movzbl	%al, %edx	# D.29182, D.29192
	movq	-248(%rbp), %rax	# x, tmp1343
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movl	%edx, %esi	# D.29192,
	movq	%rax, %rdi	# D.29184,
	call	num_sign_bit_copies	#
	.loc 1 4106 0
	movl	-228(%rbp), %edx	# mode, mode.658
	movslq	%edx, %rdx	# mode.658, tmp1344
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29181
	movzwl	%dx, %edx	# D.29181, D.29185
	addl	$1, %edx	#, D.29185
	.loc 1 4103 0
	cmpl	%edx, %eax	# D.29190, D.29190
	jb	.L704	#,
	.loc 1 4107 0
	movq	-248(%rbp), %rax	# x, tmp1345
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _592->code, D.29181
	cmpw	$90, %ax	#, D.29181
	jne	.L705	#,
	.loc 1 4108 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1346
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _594->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _595->code, D.29181
	.loc 1 4107 0 discriminator 1
	cmpw	$78, %ax	#, D.29181
	je	.L704	#,
.L705:
	.loc 1 4109 0
	movq	-248(%rbp), %rax	# x, tmp1347
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1348
	movq	%rdx, %rsi	# D.29184,
	movl	%eax, %edi	# tmp1348,
	call	gen_lowpart_for_combine	#
	jmp	.L620	#
.L704:
	.loc 1 4115 0
	movl	-228(%rbp), %eax	# mode, mode.659
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	cmpw	$64, %ax	#, D.29181
	ja	.L706	#,
	.loc 1 4116 0
	movq	-248(%rbp), %rax	# x, tmp1350
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _601->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$60, %al	#, D.29183
	jne	.L706	#,
	.loc 1 4117 0
	movl	-228(%rbp), %eax	# mode, mode.660
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29191
	andl	$1, %eax	#, D.29191
	testq	%rax, %rax	# D.29191
	je	.L706	#,
	.loc 1 4118 0
	movq	-248(%rbp), %rax	# x, tmp1353
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1354
	movq	%rdx, %rsi	# D.29184,
	movl	%eax, %edi	# tmp1354,
	call	gen_lowpart_for_combine	#
	jmp	.L620	#
.L706:
	.loc 1 4123 0
	movl	-228(%rbp), %eax	# mode, mode.661
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	cmpw	$64, %ax	#, D.29181
	ja	.L707	#,
	.loc 1 4124 0
	movl	-228(%rbp), %eax	# mode, mode.662
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29191
	andl	$1, %eax	#, D.29191
	testq	%rax, %rax	# D.29191
	je	.L707	#,
	.loc 1 4125 0
	movq	-248(%rbp), %rax	# x, tmp1357
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	%rax, %rdi	# D.29184,
	call	get_last_value	#
	movq	%rax, -160(%rbp)	# tmp1358, temp
	cmpq	$0, -160(%rbp)	#, temp
	je	.L707	#,
	.loc 1 4126 0
	movq	-160(%rbp), %rax	# temp, tmp1359
	movzwl	(%rax), %eax	# temp_616->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$60, %al	#, D.29183
	jne	.L707	#,
	.loc 1 4127 0
	movq	-248(%rbp), %rax	# x, tmp1361
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1362
	movq	%rdx, %rsi	# D.29184,
	movl	%eax, %edi	# tmp1362,
	call	gen_lowpart_for_combine	#
	jmp	.L620	#
.L707:
	.loc 1 4129 0
	jmp	.L666	#
.L661:
	.loc 1 4133 0
	movq	-248(%rbp), %rax	# x, tmp1363
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _622->code, D.29181
	cmpw	$123, %ax	#, D.29181
	jne	.L708	#,
	.loc 1 4134 0
	movq	-248(%rbp), %rax	# x, tmp1364
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _624->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _625->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29190
	cmpl	-228(%rbp), %eax	# mode, D.29190
	jne	.L708	#,
	.loc 1 4135 0
	movq	-248(%rbp), %rax	# x, tmp1365
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _628->fld[0].rtx, D.29180
	jmp	.L620	#
.L708:
	.loc 1 4139 0
	movq	-248(%rbp), %rax	# x, tmp1366
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _630->code, D.29181
	cmpw	$129, %ax	#, D.29181
	je	.L709	#,
	.loc 1 4140 0
	movq	-248(%rbp), %rax	# x, tmp1367
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _632->code, D.29181
	cmpw	$77, %ax	#, D.29181
	jne	.L710	#,
.L709:
	.loc 1 4141 0
	movq	-248(%rbp), %rax	# x, tmp1368
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _634->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _635->code, D.29181
	cmpw	$123, %ax	#, D.29181
	jne	.L710	#,
	.loc 1 4142 0
	movq	-248(%rbp), %rax	# x, tmp1369
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _637->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _638->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _639->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29190
	cmpl	-228(%rbp), %eax	# mode, D.29190
	jne	.L710	#,
	.loc 1 4144 0
	movq	-248(%rbp), %rax	# x, tmp1370
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _642->fld[0].rtx, D.29184
	.loc 1 4143 0
	movq	8(%rax), %rdx	# _643->fld[0].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1371
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _645->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29188
	movl	-228(%rbp), %ecx	# mode, tmp1372
	movl	-228(%rbp), %esi	# mode, tmp1373
	movl	%eax, %edi	# D.29188,
	call	simplify_gen_unary	#
	jmp	.L620	#
.L710:
	.loc 1 4148 0
	movq	-248(%rbp), %rax	# x, tmp1374
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _649->code, D.29181
	cmpw	$63, %ax	#, D.29181
	jne	.L711	#,
	.loc 1 4149 0
	movq	-248(%rbp), %rax	# x, tmp1375
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	%rax, %rdi	# D.29184,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29185
	je	.L711	#,
	.loc 1 4150 0
	movq	-248(%rbp), %rax	# x, tmp1376
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _653->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _654->code, D.29181
	cmpw	$124, %ax	#, D.29181
	jne	.L711	#,
	.loc 1 4151 0
	movq	-248(%rbp), %rax	# x, tmp1377
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _656->fld[0].rtx, D.29180
	jmp	.L620	#
.L711:
	.loc 1 4152 0
	jmp	.L666	#
.L646:
	.loc 1 4175 0
	movq	-248(%rbp), %rax	# x, tmp1378
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _658->code, D.29181
	cmpw	$58, %ax	#, D.29181
	jne	.L712	#,
	.loc 1 4176 0
	movq	-248(%rbp), %rax	# x, tmp1379
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _660->fld[0].rtx, D.29184
	movq	-248(%rbp), %rdx	# x, tmp1380
	addq	$8, %rdx	#, D.29186
	movq	%rax, %rsi	# D.29184,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
	.loc 1 4177 0
	jmp	.L666	#
.L712:
	jmp	.L666	#
.L650:
	.loc 1 4195 0
	movq	-248(%rbp), %rax	# x, tmp1381
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _663->code, D.29181
	cmpw	$75, %ax	#, D.29181
	jne	.L713	#,
	.loc 1 4196 0
	movq	-248(%rbp), %rax	# x, tmp1382
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _665->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _666->code, D.29181
	cmpw	$67, %ax	#, D.29181
	je	.L714	#,
	.loc 1 4196 0 is_stmt 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1383
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _668->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _669->code, D.29181
	cmpw	$68, %ax	#, D.29181
	je	.L714	#,
	movq	-248(%rbp), %rax	# x, tmp1384
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _671->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _672->code, D.29181
	cmpw	$54, %ax	#, D.29181
	je	.L714	#,
	movq	-248(%rbp), %rax	# x, tmp1385
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _674->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _675->code, D.29181
	cmpw	$58, %ax	#, D.29181
	je	.L714	#,
	movq	-248(%rbp), %rax	# x, tmp1386
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _677->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _678->code, D.29181
	cmpw	$55, %ax	#, D.29181
	jne	.L713	#,
.L714:
	.loc 1 4200 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1387
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	.loc 1 4197 0
	movq	16(%rax), %rbx	# _680->fld[1].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1388
	movq	16(%rax), %rcx	# x_6->fld[1].rtx, D.29184
	.loc 1 4198 0
	movq	-248(%rbp), %rax	# x, tmp1389
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	.loc 1 4197 0
	movq	8(%rax), %rdx	# _683->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1390
	movl	%eax, %esi	# tmp1390,
	movl	$75, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1391
	movq	%rbx, %rcx	# D.29184,
	movl	%eax, %esi	# tmp1391,
	movl	$75, %edi	#,
	call	gen_binary	#
	jmp	.L620	#
.L713:
	.loc 1 4207 0
	movq	-248(%rbp), %rax	# x, tmp1392
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _687->code, D.29181
	cmpw	$85, %ax	#, D.29181
	jne	.L715	#,
	.loc 1 4208 0
	movq	-248(%rbp), %rax	# x, tmp1393
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _689->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L715	#,
	.loc 1 4209 0
	movq	-248(%rbp), %rax	# x, tmp1394
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _691->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _692->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L715	#,
	.loc 1 4210 0
	movq	-248(%rbp), %rax	# x, tmp1395
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movq	8(%rax), %rdx	# _694->fld[0].rtwint, D.29187
	movq	-248(%rbp), %rax	# x, tmp1396
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _696->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _697->fld[0].rtwint, D.29187
	negq	%rax	# D.29187
	cmpq	%rax, %rdx	# D.29187, D.29187
	jne	.L715	#,
	.loc 1 4211 0
	movq	-248(%rbp), %rax	# x, tmp1397
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _700->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _701->fld[0].rtwint, D.29187
	movq	%rax, %rdi	# D.29191,
	call	exact_log2_wide	#
	movl	%eax, -224(%rbp)	# tmp1398, i
	cmpl	$0, -224(%rbp)	#, i
	jns	.L716	#,
	.loc 1 4212 0
	movq	-248(%rbp), %rax	# x, tmp1399
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _705->fld[0].rtwint, D.29187
	movq	%rax, %rdi	# D.29191,
	call	exact_log2_wide	#
	movl	%eax, -224(%rbp)	# tmp1400, i
	cmpl	$0, -224(%rbp)	#, i
	js	.L715	#,
.L716:
	.loc 1 4213 0
	movl	-228(%rbp), %eax	# mode, mode.663
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	cmpw	$64, %ax	#, D.29181
	ja	.L715	#,
	.loc 1 4214 0
	movq	-248(%rbp), %rax	# x, tmp1402
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _711->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _712->code, D.29181
	cmpw	$83, %ax	#, D.29181
	jne	.L717	#,
	.loc 1 4215 0
	movq	-248(%rbp), %rax	# x, tmp1403
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _714->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _715->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _716->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L717	#,
	.loc 1 4216 0
	movq	-248(%rbp), %rax	# x, tmp1404
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _718->fld[0].rtx, D.29184
	movq	16(%rax), %rax	# _719->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _720->fld[0].rtwint, D.29187
	.loc 1 4217 0
	movl	-224(%rbp), %edx	# i, tmp1405
	addl	$1, %edx	#, D.29185
	movl	$1, %esi	#, tmp1406
	movl	%edx, %ecx	# D.29185, tmp1623
	salq	%cl, %rsi	# tmp1623, D.29187
	movq	%rsi, %rdx	# D.29187, D.29187
	subq	$1, %rdx	#, D.29187
	.loc 1 4216 0
	cmpq	%rdx, %rax	# D.29187, D.29187
	je	.L718	#,
.L717:
	.loc 1 4218 0
	movq	-248(%rbp), %rax	# x, tmp1407
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _725->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _726->code, D.29181
	cmpw	$121, %ax	#, D.29181
	jne	.L715	#,
	.loc 1 4219 0
	movq	-248(%rbp), %rax	# x, tmp1408
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _728->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _729->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _730->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29185
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	.loc 1 4220 0
	movzwl	%ax, %eax	# D.29181, D.29190
	movl	-224(%rbp), %edx	# i, i.664
	addl	$1, %edx	#, D.29190
	.loc 1 4219 0
	cmpl	%edx, %eax	# D.29190, D.29190
	jne	.L715	#,
.L718:
	.loc 1 4226 0
	movl	-228(%rbp), %eax	# mode, mode.665
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	.loc 1 4222 0
	movzwl	%ax, %eax	# D.29181, D.29185
	.loc 1 4226 0
	movl	-224(%rbp), %edx	# i, tmp1411
	notl	%edx	# D.29185
	.loc 1 4222 0
	leal	(%rax,%rdx), %ebx	#, D.29185
	.loc 1 4225 0
	movl	-228(%rbp), %eax	# mode, mode.666
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	.loc 1 4222 0
	movzwl	%ax, %eax	# D.29181, D.29185
	.loc 1 4225 0
	movl	-224(%rbp), %edx	# i, tmp1413
	notl	%edx	# D.29185
	.loc 1 4222 0
	leal	(%rax,%rdx), %ecx	#, D.29185
	.loc 1 4224 0
	movq	-248(%rbp), %rax	# x, tmp1414
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _747->fld[0].rtx, D.29184
	.loc 1 4222 0
	movq	8(%rax), %rdx	# _748->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1415
	movl	%ecx, %r8d	# D.29185,
	movq	%rdx, %rcx	# D.29184,
	movl	%eax, %edx	# tmp1415,
	movl	$87, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, %rdx	#, D.29184
	.loc 1 4221 0
	movl	-228(%rbp), %eax	# mode, tmp1416
	movl	%ebx, %r8d	# D.29185,
	movq	%rdx, %rcx	# D.29184,
	movl	%eax, %edx	# tmp1416,
	movl	$89, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	jmp	.L620	#
.L715:
	.loc 1 4232 0
	movq	-248(%rbp), %rax	# x, tmp1417
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _752->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$60, %al	#, D.29183
	jne	.L719	#,
	.loc 1 4234 0
	movq	-248(%rbp), %rax	# x, tmp1419
	movq	16(%rax), %rdx	# x_6->fld[1].rtx, D.29184
	movq	const_int_rtx+504(%rip), %rax	# const_int_rtx, D.29184
	.loc 1 4233 0
	cmpq	%rax, %rdx	# D.29184, D.29184
	jne	.L719	#,
	.loc 1 4237 0
	movq	-248(%rbp), %rax	# x, tmp1420
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	.loc 1 4235 0
	movq	16(%rax), %rcx	# _758->fld[1].rtx, D.29184
	.loc 1 4236 0
	movq	-248(%rbp), %rax	# x, tmp1421
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	.loc 1 4235 0
	movq	8(%rax), %rdx	# _760->fld[0].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1422
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %esi	# mode, tmp1423
	movq	%rax, %rdi	# D.29184,
	call	reversed_comparison	#
	movq	%rax, -56(%rbp)	# tmp1424, reversed
	cmpq	$0, -56(%rbp)	#, reversed
	je	.L719	#,
	.loc 1 4238 0
	movl	-228(%rbp), %ecx	# mode, tmp1425
	movq	-56(%rbp), %rdx	# reversed, tmp1426
	movl	-228(%rbp), %eax	# mode, tmp1427
	movl	%eax, %esi	# tmp1427,
	movl	$77, %edi	#,
	call	simplify_gen_unary	#
	jmp	.L620	#
.L719:
	.loc 1 4245 0
	movq	-248(%rbp), %rax	# x, tmp1428
	movq	16(%rax), %rdx	# x_6->fld[1].rtx, D.29184
	movq	const_int_rtx+504(%rip), %rax	# const_int_rtx, D.29184
	cmpq	%rax, %rdx	# D.29184, D.29184
	jne	.L720	#,
	.loc 1 4246 0
	movq	-248(%rbp), %rax	# x, tmp1429
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _767->code, D.29181
	cmpw	$61, %ax	#, D.29181
	je	.L720	#,
	.loc 1 4247 0
	movq	-248(%rbp), %rax	# x, tmp1430
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _769->code, D.29181
	cmpw	$63, %ax	#, D.29181
	jne	.L721	#,
	.loc 1 4248 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1431
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _771->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _772->code, D.29181
	.loc 1 4247 0 discriminator 1
	cmpw	$61, %ax	#, D.29181
	je	.L720	#,
.L721:
	.loc 1 4249 0
	movq	-248(%rbp), %rax	# x, tmp1432
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %edx	# mode, tmp1433
	movl	%edx, %esi	# tmp1433,
	movq	%rax, %rdi	# D.29184,
	call	nonzero_bits	#
	cmpq	$1, %rax	#, D.29191
	jne	.L720	#,
	.loc 1 4254 0
	movl	-228(%rbp), %eax	# mode, mode.667
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	.loc 1 4250 0
	movzwl	%ax, %eax	# D.29181, D.29185
	leal	-1(%rax), %ebx	#, D.29185
	.loc 1 4253 0
	movl	-228(%rbp), %eax	# mode, mode.668
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	.loc 1 4250 0
	movzwl	%ax, %eax	# D.29181, D.29185
	leal	-1(%rax), %r12d	#, D.29185
	movq	const_int_rtx+520(%rip), %rcx	# const_int_rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1436
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1437
	movl	%eax, %esi	# tmp1437,
	movl	$85, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1438
	movl	%r12d, %r8d	# D.29185,
	movq	%rdx, %rcx	# D.29184,
	movl	%eax, %edx	# tmp1438,
	movl	$87, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1439
	movl	%ebx, %r8d	# D.29185,
	movq	%rdx, %rcx	# D.29184,
	movl	%eax, %edx	# tmp1439,
	movl	$89, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	jmp	.L620	#
.L720:
	.loc 1 4261 0
	movl	-228(%rbp), %eax	# mode, mode.669
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	cmpw	$64, %ax	#, D.29181
	ja	.L722	#,
	.loc 1 4262 0
	movq	-248(%rbp), %rax	# x, tmp1441
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %edx	# mode, tmp1442
	movl	%edx, %esi	# tmp1442,
	movq	%rax, %rdi	# D.29184,
	call	nonzero_bits	#
	movq	%rax, %rbx	#, D.29191
	.loc 1 4263 0
	movq	-248(%rbp), %rax	# x, tmp1443
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movl	-228(%rbp), %edx	# mode, tmp1444
	movl	%edx, %esi	# tmp1444,
	movq	%rax, %rdi	# D.29184,
	call	nonzero_bits	#
	andq	%rbx, %rax	# D.29191, D.29191
	.loc 1 4262 0
	testq	%rax, %rax	# D.29191
	jne	.L722	#,
.LBB49:
	.loc 1 4266 0
	movq	-248(%rbp), %rax	# x, tmp1445
	movq	16(%rax), %rcx	# x_6->fld[1].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1446
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1447
	movl	%eax, %esi	# tmp1447,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, -48(%rbp)	# tmp1448, tor
	.loc 1 4267 0
	movl	-260(%rbp), %ecx	# in_dest, tmp1449
	movl	-256(%rbp), %edx	# last, tmp1450
	movl	-228(%rbp), %esi	# mode, tmp1451
	movq	-48(%rbp), %rax	# tor, tmp1452
	movq	%rax, %rdi	# tmp1452,
	call	combine_simplify_rtx	#
	movq	%rax, -160(%rbp)	# tmp1453, temp
	.loc 1 4272 0
	movq	-160(%rbp), %rax	# temp, tmp1454
	movzwl	(%rax), %eax	# temp_801->code, D.29181
	cmpw	$49, %ax	#, D.29181
	je	.L722	#,
	.loc 1 4272 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# temp, tmp1455
	cmpq	-48(%rbp), %rax	# tor, tmp1455
	je	.L722	#,
	.loc 1 4273 0 is_stmt 1
	movq	-160(%rbp), %rax	# temp, D.29180
	jmp	.L620	#
.L722:
.LBE49:
	.loc 1 4275 0
	jmp	.L666	#
.L651:
	.loc 1 4281 0
	movq	-248(%rbp), %rax	# x, tmp1456
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29184
	.loc 1 4280 0
	cmpq	%rax, %rdx	# D.29184, D.29184
	jne	.L723	#,
	.loc 1 4282 0
	movq	-248(%rbp), %rax	# x, tmp1457
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _806->code, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29183
	cmpb	$60, %al	#, D.29183
	jne	.L723	#,
	.loc 1 4285 0
	movq	-248(%rbp), %rax	# x, tmp1459
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	.loc 1 4283 0
	movq	16(%rax), %rcx	# _810->fld[1].rtx, D.29184
	.loc 1 4284 0
	movq	-248(%rbp), %rax	# x, tmp1460
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	.loc 1 4283 0
	movq	8(%rax), %rdx	# _812->fld[0].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1461
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movl	-228(%rbp), %esi	# mode, tmp1462
	movq	%rax, %rdi	# D.29184,
	call	reversed_comparison	#
	movq	%rax, -56(%rbp)	# tmp1463, reversed
	cmpq	$0, -56(%rbp)	#, reversed
	je	.L723	#,
	.loc 1 4286 0
	movq	-56(%rbp), %rax	# reversed, D.29180
	jmp	.L620	#
.L723:
	.loc 1 4290 0
	movq	-248(%rbp), %rax	# x, tmp1464
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _817->code, D.29181
	cmpw	$83, %ax	#, D.29181
	jne	.L724	#,
	.loc 1 4291 0
	movq	-248(%rbp), %rax	# x, tmp1465
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movq	16(%rax), %rax	# _819->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _820->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L724	#,
	.loc 1 4292 0
	movq	-248(%rbp), %rax	# x, tmp1466
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movq	16(%rax), %rax	# _822->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _823->fld[0].rtwint, D.29187
	negq	%rax	# D.29187
	movq	%rax, %rdi	# D.29191,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29185
	js	.L724	#,
	.loc 1 4293 0
	movq	-248(%rbp), %rax	# x, tmp1467
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1468
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _829->fld[0].rtx, D.29184
	movq	%rdx, %rsi	# D.29184,
	movq	%rax, %rdi	# D.29184,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29185
	je	.L724	#,
	.loc 1 4295 0
	movq	-248(%rbp), %rax	# x, tmp1469
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movq	16(%rax), %rax	# _832->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _833->fld[0].rtwint, D.29187
	notq	%rax	# D.29187
	.loc 1 4294 0
	movq	%rax, %rcx	# D.29187, D.29191
	movq	-248(%rbp), %rax	# x, tmp1470
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1471
	movl	%eax, %esi	# tmp1471,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	jmp	.L620	#
.L724:
	.loc 1 4299 0
	movq	-248(%rbp), %rax	# x, tmp1472
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _839->code, D.29181
	cmpw	$75, %ax	#, D.29181
	jne	.L725	#,
	.loc 1 4299 0 is_stmt 0 discriminator 1
	movl	-228(%rbp), %eax	# mode, mode.670
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$1, %eax	#, D.29189
	je	.L726	#,
	movl	-228(%rbp), %eax	# mode, mode.671
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$3, %eax	#, D.29189
	je	.L726	#,
	movl	-228(%rbp), %eax	# mode, mode.672
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$5, %eax	#, D.29189
	je	.L726	#,
	movl	-228(%rbp), %eax	# mode, mode.673
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$7, %eax	#, D.29189
	jne	.L725	#,
.L726:
	.loc 1 4303 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1477
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	.loc 1 4300 0
	movq	16(%rax), %rbx	# _849->fld[1].rtx, D.29184
	.loc 1 4302 0
	movq	-248(%rbp), %rax	# x, tmp1478
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	.loc 1 4300 0
	movq	8(%rax), %rcx	# _851->fld[0].rtx, D.29184
	movq	-248(%rbp), %rax	# x, tmp1479
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1480
	movl	%eax, %esi	# tmp1480,
	movl	$76, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1481
	movq	%rbx, %rcx	# D.29184,
	movl	%eax, %esi	# tmp1481,
	movl	$76, %edi	#,
	call	gen_binary	#
	jmp	.L620	#
.L725:
	.loc 1 4304 0
	jmp	.L666	#
.L653:
	.loc 1 4311 0
	movq	-248(%rbp), %rax	# x, tmp1482
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _856->code, D.29181
	cmpw	$75, %ax	#, D.29181
	jne	.L727	#,
	.loc 1 4314 0
	movq	-248(%rbp), %rax	# x, tmp1483
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movq	%rax, %rdi	# D.29184,
	call	copy_rtx	#
	movq	%rax, %rcx	#, D.29184
	.loc 1 4318 0
	movq	-248(%rbp), %rax	# x, tmp1484
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	.loc 1 4314 0
	movq	16(%rax), %rdx	# _860->fld[1].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1485
	movl	%eax, %esi	# tmp1485,
	movl	$78, %edi	#,
	call	gen_binary	#
	movq	%rax, %rbx	#, D.29184
	movq	-248(%rbp), %rax	# x, tmp1486
	movq	16(%rax), %rcx	# x_6->fld[1].rtx, D.29184
	.loc 1 4316 0
	movq	-248(%rbp), %rax	# x, tmp1487
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	.loc 1 4314 0
	movq	8(%rax), %rdx	# _864->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1488
	movl	%eax, %esi	# tmp1488,
	movl	$78, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1489
	movq	%rbx, %rcx	# D.29184,
	movl	%eax, %esi	# tmp1489,
	movl	$75, %edi	#,
	call	gen_binary	#
	.loc 1 4313 0
	movq	%rax, %rdi	# D.29184,
	call	apply_distributive_law	#
	movq	%rax, -248(%rbp)	# tmp1490, x
	.loc 1 4321 0
	movq	-248(%rbp), %rax	# x, tmp1491
	movzwl	(%rax), %eax	# x_868->code, D.29181
	cmpw	$78, %ax	#, D.29181
	je	.L727	#,
	.loc 1 4322 0
	movq	-248(%rbp), %rax	# x, D.29180
	jmp	.L620	#
.L727:
	.loc 1 4325 0
	movl	-228(%rbp), %eax	# mode, mode.674
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$2, %eax	#, D.29189
	je	.L728	#,
	.loc 1 4325 0 is_stmt 0 discriminator 2
	movl	-228(%rbp), %eax	# mode, mode.675
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$6, %eax	#, D.29189
	je	.L728	#,
	.loc 1 4325 0 discriminator 1
	movl	-228(%rbp), %eax	# mode, mode.676
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$8, %eax	#, D.29189
	jne	.L729	#,
.L728:
	movl	flag_unsafe_math_optimizations(%rip), %eax	# flag_unsafe_math_optimizations, flag_unsafe_math_optimizations.677
	testl	%eax, %eax	# flag_unsafe_math_optimizations.677
	je	.L729	#,
	.loc 1 4326 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1495
	movq	8(%rax), %rax	# x_7->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _878->code, D.29181
	cmpw	$79, %ax	#, D.29181
	jne	.L729	#,
.LBB50:
	.loc 1 4328 0
	movq	-248(%rbp), %rax	# x, tmp1496
	movq	16(%rax), %rcx	# x_7->fld[1].rtx, D.29184
	.loc 1 4329 0
	movq	-248(%rbp), %rax	# x, tmp1497
	movq	8(%rax), %rax	# x_7->fld[0].rtx, D.29184
	.loc 1 4328 0
	movq	8(%rax), %rdx	# _881->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1498
	movl	%eax, %esi	# tmp1498,
	movl	$78, %edi	#,
	call	simplify_binary_operation	#
	movq	%rax, -40(%rbp)	# tmp1499, tem
	.loc 1 4331 0
	cmpq	$0, -40(%rbp)	#, tem
	je	.L729	#,
	.loc 1 4332 0
	movq	-248(%rbp), %rax	# x, tmp1500
	movq	8(%rax), %rax	# x_7->fld[0].rtx, D.29184
	movq	16(%rax), %rcx	# _884->fld[1].rtx, D.29184
	movq	-40(%rbp), %rdx	# tem, tmp1501
	movl	-228(%rbp), %eax	# mode, tmp1502
	movl	%eax, %esi	# tmp1502,
	movl	$79, %edi	#,
	call	gen_binary	#
	jmp	.L620	#
.L729:
.LBE50:
	.loc 1 4334 0
	jmp	.L666	#
.L654:
	.loc 1 4339 0
	movq	-248(%rbp), %rax	# x, tmp1503
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _887->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L730	#,
	.loc 1 4340 0
	movq	-248(%rbp), %rax	# x, tmp1504
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _889->fld[0].rtwint, D.29187
	movq	%rax, %rdi	# D.29191,
	call	exact_log2_wide	#
	movl	%eax, -224(%rbp)	# tmp1505, i
	cmpl	$0, -224(%rbp)	#, i
	js	.L730	#,
	.loc 1 4341 0
	movq	-248(%rbp), %rax	# x, tmp1506
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _893->code, D.29181
	cmpw	$87, %ax	#, D.29181
	je	.L731	#,
	.loc 1 4342 0
	movq	-248(%rbp), %rax	# x, tmp1507
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _895->code, D.29181
	cmpw	$90, %ax	#, D.29181
	je	.L731	#,
	.loc 1 4343 0
	movq	-248(%rbp), %rax	# x, tmp1508
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _897->code, D.29181
	cmpw	$89, %ax	#, D.29181
	je	.L731	#,
	.loc 1 4344 0
	movq	-248(%rbp), %rax	# x, tmp1509
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _899->code, D.29181
	cmpw	$88, %ax	#, D.29181
	je	.L731	#,
	.loc 1 4345 0
	movq	-248(%rbp), %rax	# x, tmp1510
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _901->code, D.29181
	cmpw	$91, %ax	#, D.29181
	jne	.L730	#,
.L731:
	.loc 1 4346 0
	movq	-248(%rbp), %rax	# x, tmp1511
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movl	-224(%rbp), %ecx	# i, tmp1512
	movl	-228(%rbp), %eax	# mode, tmp1513
	movl	%ecx, %r8d	# tmp1512,
	movq	%rdx, %rcx	# D.29184,
	movl	%eax, %edx	# tmp1513,
	movl	$90, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	jmp	.L620	#
.L730:
	.loc 1 4347 0
	jmp	.L666	#
.L658:
	.loc 1 4358 0
	movq	-248(%rbp), %rax	# x, tmp1514
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _905->code, D.29181
	cmpw	$74, %ax	#, D.29181
	je	.L732	#,
	.loc 1 4359 0
	movq	-248(%rbp), %rax	# x, tmp1515
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _907->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29185
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$4, %eax	#, D.29189
	je	.L762	#,
.L732:
.LBB51:
	.loc 1 4365 0
	movq	-248(%rbp), %rax	# x, tmp1517
	movq	8(%rax), %rax	# x_6->fld[0].rtx, op0.678
	movq	%rax, -176(%rbp)	# op0.678, op0
	.loc 1 4366 0
	movq	-248(%rbp), %rax	# x, tmp1518
	movq	16(%rax), %rax	# x_6->fld[1].rtx, op1.679
	movq	%rax, -168(%rbp)	# op1.679, op1
	.loc 1 4369 0
	movq	-176(%rbp), %rax	# op0, op0.680
	movzwl	(%rax), %eax	# op0.680_913->code, D.29181
	cmpw	$74, %ax	#, D.29181
	jne	.L734	#,
	.loc 1 4370 0
	movq	-176(%rbp), %rax	# op0, op0.681
	movq	16(%rax), %rax	# op0.681_915->fld[1].rtx, op1.682
	movq	%rax, -168(%rbp)	# op1.682, op1
	movq	-176(%rbp), %rax	# op0, op0.683
	movq	8(%rax), %rax	# op0.683_917->fld[0].rtx, op0.684
	movq	%rax, -176(%rbp)	# op0.684, op0
.L734:
	.loc 1 4373 0
	leaq	-168(%rbp), %rdx	#, tmp1519
	leaq	-176(%rbp), %rcx	#, tmp1520
	movl	-232(%rbp), %eax	# code, tmp1521
	movq	%rcx, %rsi	# tmp1520,
	movl	%eax, %edi	# tmp1521,
	call	simplify_comparison	#
	movl	%eax, -200(%rbp)	# tmp1522, new_code
	.loc 1 4387 0
	cmpl	$102, -200(%rbp)	#, new_code
	jne	.L735	#,
	.loc 1 4388 0
	movl	-228(%rbp), %eax	# mode, mode.685
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$1, %eax	#, D.29189
	jne	.L735	#,
	.loc 1 4389 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29184
	movq	-168(%rbp), %rax	# op1, op1.686
	cmpq	%rax, %rdx	# op1.686, D.29184
	jne	.L735	#,
	.loc 1 4390 0
	movq	-176(%rbp), %rax	# op0, op0.687
	movzbl	2(%rax), %eax	# op0.687_924->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29190
	cmpl	-228(%rbp), %eax	# mode, D.29190
	jne	.L735	#,
	.loc 1 4391 0
	movq	-176(%rbp), %rax	# op0, op0.688
	movl	-228(%rbp), %edx	# mode, tmp1524
	movl	%edx, %esi	# tmp1524,
	movq	%rax, %rdi	# op0.688,
	call	nonzero_bits	#
	cmpq	$1, %rax	#, D.29191
	jne	.L735	#,
	.loc 1 4392 0
	movq	-176(%rbp), %rax	# op0, op0.689
	movq	%rax, %rdi	# op0.689,
	call	expand_compound_operation	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1525
	movq	%rdx, %rsi	# D.29184,
	movl	%eax, %edi	# tmp1525,
	call	gen_lowpart_for_combine	#
	jmp	.L620	#
.L735:
	.loc 1 4395 0
	cmpl	$102, -200(%rbp)	#, new_code
	jne	.L737	#,
	.loc 1 4396 0
	movl	-228(%rbp), %eax	# mode, mode.690
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$1, %eax	#, D.29189
	jne	.L737	#,
	.loc 1 4397 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29184
	movq	-168(%rbp), %rax	# op1, op1.691
	cmpq	%rax, %rdx	# op1.691, D.29184
	jne	.L737	#,
	.loc 1 4398 0
	movq	-176(%rbp), %rax	# op0, op0.692
	movzbl	2(%rax), %eax	# op0.692_936->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29190
	cmpl	-228(%rbp), %eax	# mode, D.29190
	jne	.L737	#,
	.loc 1 4399 0
	movq	-176(%rbp), %rax	# op0, op0.693
	movl	-228(%rbp), %edx	# mode, tmp1527
	movl	%edx, %esi	# tmp1527,
	movq	%rax, %rdi	# op0.693,
	call	num_sign_bit_copies	#
	.loc 1 4400 0
	movl	-228(%rbp), %edx	# mode, mode.694
	movslq	%edx, %rdx	# mode.694, tmp1528
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29181
	movzwl	%dx, %edx	# D.29181, D.29190
	.loc 1 4399 0
	cmpl	%edx, %eax	# D.29190, D.29190
	jne	.L737	#,
	.loc 1 4402 0
	movq	-176(%rbp), %rax	# op0, op0.695
	movq	%rax, %rdi	# op0.695,
	call	expand_compound_operation	#
	movq	%rax, -176(%rbp)	# op0.696, op0
	.loc 1 4403 0
	movq	-176(%rbp), %rdx	# op0, op0.697
	movl	-228(%rbp), %eax	# mode, tmp1529
	movq	%rdx, %rsi	# op0.697,
	movl	%eax, %edi	# tmp1529,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %ecx	# mode, tmp1530
	movl	-228(%rbp), %eax	# mode, tmp1531
	movl	%eax, %esi	# tmp1531,
	movl	$77, %edi	#,
	call	simplify_gen_unary	#
	jmp	.L620	#
.L737:
	.loc 1 4408 0
	cmpl	$103, -200(%rbp)	#, new_code
	jne	.L738	#,
	.loc 1 4409 0
	movl	-228(%rbp), %eax	# mode, mode.698
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$1, %eax	#, D.29189
	jne	.L738	#,
	.loc 1 4410 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29184
	movq	-168(%rbp), %rax	# op1, op1.699
	cmpq	%rax, %rdx	# op1.699, D.29184
	jne	.L738	#,
	.loc 1 4411 0
	movq	-176(%rbp), %rax	# op0, op0.700
	movzbl	2(%rax), %eax	# op0.700_953->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29190
	cmpl	-228(%rbp), %eax	# mode, D.29190
	jne	.L738	#,
	.loc 1 4412 0
	movq	-176(%rbp), %rax	# op0, op0.701
	movl	-228(%rbp), %edx	# mode, tmp1533
	movl	%edx, %esi	# tmp1533,
	movq	%rax, %rdi	# op0.701,
	call	nonzero_bits	#
	cmpq	$1, %rax	#, D.29191
	jne	.L738	#,
	.loc 1 4414 0
	movq	-176(%rbp), %rax	# op0, op0.702
	movq	%rax, %rdi	# op0.702,
	call	expand_compound_operation	#
	movq	%rax, -176(%rbp)	# op0.703, op0
	.loc 1 4415 0
	movq	const_int_rtx+520(%rip), %rbx	# const_int_rtx, D.29184
	movq	-176(%rbp), %rdx	# op0, op0.704
	movl	-228(%rbp), %eax	# mode, tmp1534
	movq	%rdx, %rsi	# op0.704,
	movl	%eax, %edi	# tmp1534,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1535
	movq	%rbx, %rcx	# D.29184,
	movl	%eax, %esi	# tmp1535,
	movl	$85, %edi	#,
	call	gen_binary	#
	jmp	.L620	#
.L738:
	.loc 1 4420 0
	cmpl	$103, -200(%rbp)	#, new_code
	jne	.L739	#,
	.loc 1 4421 0
	movl	-228(%rbp), %eax	# mode, mode.705
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$1, %eax	#, D.29189
	jne	.L739	#,
	.loc 1 4422 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29184
	movq	-168(%rbp), %rax	# op1, op1.706
	cmpq	%rax, %rdx	# op1.706, D.29184
	jne	.L739	#,
	.loc 1 4423 0
	movq	-176(%rbp), %rax	# op0, op0.707
	movzbl	2(%rax), %eax	# op0.707_968->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29190
	cmpl	-228(%rbp), %eax	# mode, D.29190
	jne	.L739	#,
	.loc 1 4424 0
	movq	-176(%rbp), %rax	# op0, op0.708
	movl	-228(%rbp), %edx	# mode, tmp1537
	movl	%edx, %esi	# tmp1537,
	movq	%rax, %rdi	# op0.708,
	call	num_sign_bit_copies	#
	.loc 1 4425 0
	movl	-228(%rbp), %edx	# mode, mode.709
	movslq	%edx, %rdx	# mode.709, tmp1538
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29181
	movzwl	%dx, %edx	# D.29181, D.29190
	.loc 1 4424 0
	cmpl	%edx, %eax	# D.29190, D.29190
	jne	.L739	#,
	.loc 1 4427 0
	movq	-176(%rbp), %rax	# op0, op0.710
	movq	%rax, %rdi	# op0.710,
	call	expand_compound_operation	#
	movq	%rax, -176(%rbp)	# op0.711, op0
	.loc 1 4428 0
	movq	-176(%rbp), %rdx	# op0, op0.712
	movl	-228(%rbp), %eax	# mode, tmp1539
	movq	%rdx, %rsi	# op0.712,
	movl	%eax, %edi	# tmp1539,
	call	gen_lowpart_for_combine	#
	movl	$1, %esi	#,
	movq	%rax, %rdi	# D.29184,
	call	plus_constant_wide	#
	jmp	.L620	#
.L739:
	.loc 1 4482 0
	cmpl	$102, -200(%rbp)	#, new_code
	jne	.L740	#,
	.loc 1 4482 0 is_stmt 0 discriminator 1
	movl	-228(%rbp), %eax	# mode, mode.723
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29189
	cmpl	$1, %eax	#, D.29189
	jne	.L740	#,
	.loc 1 4483 0 is_stmt 1
	movl	-228(%rbp), %eax	# mode, mode.724
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	cmpw	$64, %ax	#, D.29181
	ja	.L740	#,
	.loc 1 4484 0
	movl	-228(%rbp), %eax	# mode, mode.725
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29191
	andl	$1, %eax	#, D.29191
	movq	%rax, %rsi	# D.29191, D.29191
	.loc 1 4485 0
	movl	-228(%rbp), %eax	# mode, mode.726
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	subl	$1, %eax	#, D.29185
	movl	$1, %edx	#, tmp1544
	movl	%eax, %ecx	# D.29185, tmp1626
	salq	%cl, %rdx	# tmp1626, D.29191
	movq	%rdx, %rax	# D.29191, D.29191
	.loc 1 4484 0
	cmpq	%rax, %rsi	# D.29191, D.29191
	jne	.L740	#,
	.loc 1 4486 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29184
	movq	-168(%rbp), %rax	# op1, op1.727
	cmpq	%rax, %rdx	# op1.727, D.29184
	jne	.L740	#,
	.loc 1 4487 0
	movq	-176(%rbp), %rax	# op0, op0.728
	movzbl	2(%rax), %eax	# op0.728_995->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29190
	cmpl	-228(%rbp), %eax	# mode, D.29190
	jne	.L740	#,
	.loc 1 4488 0
	movq	-176(%rbp), %rax	# op0, op0.729
	movl	-228(%rbp), %edx	# mode, tmp1545
	movl	%edx, %esi	# tmp1545,
	movq	%rax, %rdi	# op0.729,
	call	nonzero_bits	#
	movq	%rax, %rdi	# D.29191,
	call	exact_log2_wide	#
	movl	%eax, -224(%rbp)	# tmp1546, i
	cmpl	$0, -224(%rbp)	#, i
	js	.L740	#,
	.loc 1 4492 0
	movl	-228(%rbp), %eax	# mode, mode.730
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	movzwl	%ax, %eax	# D.29181, D.29185
	subl	$1, %eax	#, D.29185
	.loc 1 4490 0
	subl	-224(%rbp), %eax	# i, D.29185
	movl	%eax, %ebx	# D.29185, D.29185
	movq	-176(%rbp), %rax	# op0, op0.731
	movq	%rax, %rdi	# op0.731,
	call	expand_compound_operation	#
	movq	%rax, %rdx	#, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1548
	movl	%ebx, %r8d	# D.29185,
	movq	%rdx, %rcx	# D.29184,
	movl	%eax, %edx	# tmp1548,
	movl	$87, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, -248(%rbp)	# tmp1549, x
	.loc 1 4493 0
	movq	-248(%rbp), %rax	# x, tmp1550
	movzwl	(%rax), %eax	# x_1008->code, D.29181
	cmpw	$83, %ax	#, D.29181
	jne	.L741	#,
	.loc 1 4493 0 is_stmt 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1551
	movq	16(%rax), %rdx	# x_1008->fld[1].rtx, D.29184
	movq	const_true_rtx(%rip), %rax	# const_true_rtx, const_true_rtx.732
	cmpq	%rax, %rdx	# const_true_rtx.732, D.29184
	jne	.L741	#,
	.loc 1 4494 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1552
	movq	8(%rax), %rax	# x_1008->fld[0].rtx, D.29180
	jmp	.L620	#
.L741:
	.loc 1 4496 0
	movq	-248(%rbp), %rax	# x, D.29180
	jmp	.L620	#
.L740:
	.loc 1 4500 0
	movl	-200(%rbp), %eax	# new_code, tmp1553
	cmpl	-232(%rbp), %eax	# code, tmp1553
	je	.L742	#,
	.loc 1 4501 0
	movq	-168(%rbp), %rcx	# op1, op1.733
	movq	-176(%rbp), %rdx	# op0, op0.734
	movl	-228(%rbp), %esi	# mode, tmp1554
	movl	-200(%rbp), %eax	# new_code, tmp1555
	movl	%eax, %edi	# tmp1555,
	call	gen_rtx_fmt_ee	#
	jmp	.L620	#
.L742:
	.loc 1 4505 0
	movq	-176(%rbp), %rax	# op0, op0.735
	movq	-248(%rbp), %rdx	# x, tmp1556
	addq	$8, %rdx	#, D.29186
	movq	%rax, %rsi	# op0.735,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
	.loc 1 4506 0
	movq	-168(%rbp), %rax	# op1, op1.736
	movq	-248(%rbp), %rdx	# x, tmp1557
	addq	$16, %rdx	#, D.29186
	movq	%rax, %rsi	# op1.736,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
.LBE51:
	.loc 1 4508 0
	jmp	.L762	#
.L649:
	.loc 1 4511 0
	movq	-248(%rbp), %rax	# x, tmp1558
	movq	%rax, %rdi	# tmp1558,
	call	simplify_if_then_else	#
	jmp	.L620	#
.L659:
	.loc 1 4518 0
	cmpl	$0, -260(%rbp)	#, in_dest
	je	.L743	#,
	.loc 1 4519 0
	movq	-248(%rbp), %rax	# x, D.29180
	jmp	.L620	#
.L743:
	.loc 1 4521 0
	movq	-248(%rbp), %rax	# x, tmp1559
	movq	%rax, %rdi	# tmp1559,
	call	expand_compound_operation	#
	jmp	.L620	#
.L644:
	.loc 1 4524 0
	movq	-248(%rbp), %rax	# x, tmp1560
	movq	%rax, %rdi	# tmp1560,
	call	simplify_set	#
	jmp	.L620	#
.L655:
	.loc 1 4529 0
	movl	-256(%rbp), %edx	# last, tmp1561
	movq	-248(%rbp), %rax	# x, tmp1562
	movl	%edx, %esi	# tmp1561,
	movq	%rax, %rdi	# tmp1562,
	call	simplify_logical	#
	jmp	.L620	#
.L663:
	.loc 1 4533 0
	movq	-248(%rbp), %rax	# x, tmp1563
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _1026->code, D.29181
	cmpw	$77, %ax	#, D.29181
	jne	.L744	#,
	.loc 1 4534 0
	movq	-248(%rbp), %rax	# x, tmp1564
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _1028->fld[0].rtx, D.29184
	movq	-248(%rbp), %rdx	# x, tmp1565
	addq	$8, %rdx	#, D.29186
	movq	%rax, %rsi	# D.29184,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
.L744:
	.loc 1 4538 0
	movq	-248(%rbp), %rax	# x, tmp1566
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _1031->mode, D.29182
	testb	%al, %al	# D.29182
	jne	.L745	#,
	.loc 1 4539 0
	jmp	.L666	#
.L745:
	.loc 1 4542 0
	movq	-248(%rbp), %rax	# x, tmp1567
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _1033->code, D.29181
	cmpw	$131, %ax	#, D.29181
	je	.L746	#,
	.loc 1 4542 0 is_stmt 0 discriminator 1
	movq	-248(%rbp), %rax	# x, tmp1568
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _1035->code, D.29181
	cmpw	$129, %ax	#, D.29181
	je	.L746	#,
	.loc 1 4543 0 is_stmt 1
	movq	-248(%rbp), %rax	# x, tmp1569
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _1037->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29185
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29181
	cmpw	$64, %ax	#, D.29181
	ja	.L747	#,
	.loc 1 4545 0
	movq	-248(%rbp), %rax	# x, tmp1571
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _1041->mode, D.29182
	movzbl	%al, %edx	# D.29182, D.29192
	movq	-248(%rbp), %rax	# x, tmp1572
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movl	%edx, %esi	# D.29192,
	movq	%rax, %rdi	# D.29184,
	call	nonzero_bits	#
	.loc 1 4547 0
	movq	-248(%rbp), %rdx	# x, tmp1573
	movq	8(%rdx), %rdx	# x_6->fld[0].rtx, D.29184
	movzbl	2(%rdx), %edx	# _1046->mode, D.29182
	movzbl	%dl, %edx	# D.29182, D.29185
	movslq	%edx, %rdx	# D.29185, tmp1574
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29181
	movzwl	%dx, %edx	# D.29181, D.29185
	subl	$1, %edx	#, D.29185
	movl	$1, %esi	#, tmp1575
	movl	%edx, %ecx	# D.29185, tmp1629
	salq	%cl, %rsi	# tmp1629, D.29187
	movq	%rsi, %rdx	# D.29187, D.29187
	.loc 1 4546 0
	andq	%rdx, %rax	# D.29191, D.29191
	.loc 1 4545 0
	testq	%rax, %rax	# D.29191
	jne	.L747	#,
.L746:
	.loc 1 4549 0
	movq	-248(%rbp), %rax	# x, tmp1576
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29180
	jmp	.L620	#
.L747:
	.loc 1 4552 0
	movq	-248(%rbp), %rax	# x, tmp1577
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %edx	# mode, tmp1578
	movl	%edx, %esi	# tmp1578,
	movq	%rax, %rdi	# D.29184,
	call	num_sign_bit_copies	#
	movl	-228(%rbp), %edx	# mode, mode.737
	movslq	%edx, %rdx	# mode.737, tmp1579
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29181
	movzwl	%dx, %edx	# D.29181, D.29190
	cmpl	%edx, %eax	# D.29190, D.29190
	jne	.L748	#,
	.loc 1 4553 0
	movq	-248(%rbp), %rax	# x, tmp1580
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %eax	# mode, tmp1581
	movl	%eax, %esi	# tmp1581,
	movl	$77, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L620	#
.L748:
	.loc 1 4555 0
	jmp	.L666	#
.L664:
	.loc 1 4559 0
	movq	-248(%rbp), %rax	# x, tmp1582
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _1063->code, D.29181
	cmpw	$120, %ax	#, D.29181
	je	.L749	#,
	.loc 1 4560 0
	movq	-248(%rbp), %rax	# x, tmp1583
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _1065->code, D.29181
	cmpw	$121, %ax	#, D.29181
	jne	.L750	#,
.L749:
	.loc 1 4561 0
	movq	-248(%rbp), %rax	# x, tmp1584
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _1067->fld[0].rtx, D.29184
	movq	-248(%rbp), %rdx	# x, tmp1585
	addq	$8, %rdx	#, D.29186
	movq	%rax, %rsi	# D.29184,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
	.loc 1 4562 0
	jmp	.L666	#
.L750:
	jmp	.L666	#
.L662:
	.loc 1 4566 0
	movq	-248(%rbp), %rax	# x, tmp1586
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movzwl	(%rax), %eax	# _1070->code, D.29181
	cmpw	$120, %ax	#, D.29181
	jne	.L751	#,
	.loc 1 4567 0
	movq	-248(%rbp), %rax	# x, tmp1587
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29184
	movq	8(%rax), %rax	# _1072->fld[0].rtx, D.29184
	movq	-248(%rbp), %rdx	# x, tmp1588
	addq	$8, %rdx	#, D.29186
	movq	%rax, %rsi	# D.29184,
	movq	%rdx, %rdi	# D.29186,
	call	do_SUBST	#
	.loc 1 4568 0
	jmp	.L666	#
.L751:
	jmp	.L666	#
.L657:
	.loc 1 4576 0
	movq	-248(%rbp), %rax	# x, tmp1589
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movzwl	(%rax), %eax	# _1075->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L752	#,
	.loc 1 4578 0
	movq	-248(%rbp), %rax	# x, tmp1590
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29184
	movq	8(%rax), %rax	# _1077->fld[0].rtwint, D.29187
	.loc 1 4577 0
	movl	%eax, %edi	# D.29187, D.29185
	movq	-248(%rbp), %rax	# x, tmp1591
	movq	8(%rax), %rcx	# x_6->fld[0].rtx, D.29184
	movl	-228(%rbp), %edx	# mode, tmp1592
	movl	-232(%rbp), %esi	# code, tmp1593
	movq	-248(%rbp), %rax	# x, tmp1594
	movl	%edi, %r8d	# D.29185,
	movq	%rax, %rdi	# tmp1594,
	call	simplify_shift_const	#
	jmp	.L620	#
.L752:
	.loc 1 4590 0
	jmp	.L666	#
.L665:
.LBB52:
	.loc 1 4594 0
	movq	-248(%rbp), %rax	# x, tmp1595
	movq	8(%rax), %rax	# x_6->fld[0].rtx, tmp1596
	movq	%rax, -104(%rbp)	# tmp1596, op0
	.loc 1 4595 0
	movq	-248(%rbp), %rax	# x, tmp1597
	movq	16(%rax), %rax	# x_6->fld[1].rtx, tmp1598
	movq	%rax, -32(%rbp)	# tmp1598, op1
	.loc 1 4598 0
	movq	-32(%rbp), %rax	# op1, tmp1599
	movzwl	(%rax), %eax	# op1_1083->code, D.29181
	cmpw	$39, %ax	#, D.29181
	je	.L753	#,
	.loc 1 4599 0
	movl	$__FUNCTION__.11833, %edx	#,
	movl	$4599, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L753:
	.loc 1 4600 0
	movq	-32(%rbp), %rax	# op1, tmp1600
	movq	8(%rax), %rax	# op1_1083->fld[0].rtvec, D.29193
	movl	(%rax), %eax	# _1085->num_elem, tmp1601
	movl	%eax, -196(%rbp)	# tmp1601, len
	.loc 1 4601 0
	cmpl	$1, -196(%rbp)	#, len
	jne	.L754	#,
	.loc 1 4602 0
	movq	-32(%rbp), %rax	# op1, tmp1602
	movq	8(%rax), %rax	# op1_1083->fld[0].rtvec, D.29193
	movq	8(%rax), %rax	# _1087->elem, D.29184
	movzwl	(%rax), %eax	# _1088->code, D.29181
	cmpw	$54, %ax	#, D.29181
	jne	.L754	#,
	.loc 1 4603 0
	movq	-104(%rbp), %rax	# op0, tmp1603
	movzwl	(%rax), %eax	# op0_1082->code, D.29181
	cmpw	$144, %ax	#, D.29181
	jne	.L754	#,
.LBB53:
	.loc 1 4605 0
	movq	-32(%rbp), %rax	# op1, tmp1604
	movq	8(%rax), %rax	# op1_1083->fld[0].rtvec, D.29193
	movq	8(%rax), %rax	# _1091->elem, D.29184
	movq	8(%rax), %rax	# _1092->fld[0].rtwint, D.29187
	movl	%eax, %edx	# D.29187, D.29194
	movq	-248(%rbp), %rax	# x, tmp1605
	movzbl	2(%rax), %eax	# x_6->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29185
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29182
	movzbl	%al, %eax	# D.29182, D.29194
	imull	%edx, %eax	# D.29194, D.29194
	movl	%eax, -212(%rbp)	# D.29194, offset
.L760:
	.loc 1 4610 0
	movq	-104(%rbp), %rax	# op0, tmp1607
	movzbl	2(%rax), %edx	# op0_31->mode, D.29182
	movq	-248(%rbp), %rax	# x, tmp1608
	movzbl	2(%rax), %eax	# x_6->mode, D.29182
	cmpb	%al, %dl	# D.29182, D.29182
	jne	.L755	#,
	.loc 1 4611 0
	movq	-104(%rbp), %rax	# op0, D.29180
	jmp	.L620	#
.L755:
	.loc 1 4612 0
	movq	-104(%rbp), %rax	# op0, tmp1609
	movzwl	(%rax), %eax	# op0_31->code, D.29181
	cmpw	$144, %ax	#, D.29181
	jne	.L756	#,
.LBB54:
	.loc 1 4614 0
	movq	-104(%rbp), %rax	# op0, tmp1610
	movq	8(%rax), %rax	# op0_31->fld[0].rtx, D.29184
	movzbl	2(%rax), %eax	# _1105->mode, D.29182
	movzbl	%al, %eax	# D.29182, D.29185
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29182
	movzbl	%al, %eax	# D.29182, tmp1612
	movq	%rax, -24(%rbp)	# tmp1612, op0_size
	.loc 1 4615 0
	movl	-212(%rbp), %eax	# offset, tmp1613
	cltq
	cmpq	-24(%rbp), %rax	# op0_size, D.29187
	jle	.L757	#,
	.loc 1 4616 0
	movq	-104(%rbp), %rax	# op0, tmp1614
	movq	8(%rax), %rax	# op0_31->fld[0].rtx, tmp1615
	movq	%rax, -104(%rbp)	# tmp1615, op0
	jmp	.L759	#
.L757:
	.loc 1 4619 0
	movl	-212(%rbp), %edx	# offset, offset.738
	movq	-24(%rbp), %rax	# op0_size, tmp1616
	subl	%eax, %edx	# D.29194, D.29194
	movl	%edx, %eax	# D.29194, D.29194
	movl	%eax, -212(%rbp)	# D.29194, offset
	.loc 1 4620 0
	movq	-104(%rbp), %rax	# op0, tmp1617
	movq	16(%rax), %rax	# op0_31->fld[1].rtx, tmp1618
	movq	%rax, -104(%rbp)	# tmp1618, op0
.LBE54:
	jmp	.L759	#
.L756:
	.loc 1 4624 0
	jmp	.L754	#
.L759:
	.loc 1 4625 0
	jmp	.L760	#
.L754:
.LBE53:
.LBE52:
	.loc 1 4629 0
	jmp	.L666	#
.L761:
	.loc 1 4632 0
	nop
	jmp	.L666	#
.L762:
	.loc 1 4508 0
	nop
.L666:
	.loc 1 4635 0
	movq	-248(%rbp), %rax	# x, D.29180
.L620:
	.loc 1 4636 0
	addq	$256, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE18:
	.size	combine_simplify_rtx, .-combine_simplify_rtx
	.type	simplify_if_then_else, @function
simplify_if_then_else:
.LFB19:
	.loc 1 4643 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$176, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -184(%rbp)	# x, x
	.loc 1 4644 0
	movq	-184(%rbp), %rax	# x, tmp393
	movzbl	2(%rax), %eax	# x_28(D)->mode, D.29197
	movzbl	%al, %eax	# D.29197, tmp394
	movl	%eax, -140(%rbp)	# tmp394, mode
	.loc 1 4645 0
	movq	-184(%rbp), %rax	# x, tmp395
	movq	8(%rax), %rax	# x_28(D)->fld[0].rtx, tmp396
	movq	%rax, -136(%rbp)	# tmp396, cond
	.loc 1 4646 0
	movq	-184(%rbp), %rax	# x, tmp397
	movq	16(%rax), %rax	# x_28(D)->fld[1].rtx, tmp398
	movq	%rax, -128(%rbp)	# tmp398, true_rtx
	.loc 1 4647 0
	movq	-184(%rbp), %rax	# x, tmp399
	movq	24(%rax), %rax	# x_28(D)->fld[2].rtx, tmp400
	movq	%rax, -120(%rbp)	# tmp400, false_rtx
	.loc 1 4648 0
	movq	-136(%rbp), %rax	# cond, tmp401
	movzwl	(%rax), %eax	# cond_31->code, D.29198
	movzwl	%ax, %eax	# D.29198, tmp402
	movl	%eax, -172(%rbp)	# tmp402, true_code
	.loc 1 4649 0
	movl	-172(%rbp), %eax	# true_code, true_code.739
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29199
	cmpb	$60, %al	#, D.29199
	sete	%al	#, D.29200
	movzbl	%al, %eax	# D.29200, tmp404
	movl	%eax, -168(%rbp)	# tmp404, comparison_p
	.loc 1 4656 0
	cmpl	$0, -168(%rbp)	#, comparison_p
	je	.L764	#,
	.loc 1 4656 0 is_stmt 0 discriminator 1
	movq	const_true_rtx(%rip), %rax	# const_true_rtx, const_true_rtx.740
	cmpq	%rax, -128(%rbp)	# const_true_rtx.740, true_rtx
	jne	.L764	#,
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29201
	cmpq	-120(%rbp), %rax	# false_rtx, D.29201
	jne	.L764	#,
	.loc 1 4657 0 is_stmt 1
	movq	-136(%rbp), %rax	# cond, tmp405
	movq	16(%rax), %rcx	# cond_31->fld[1].rtx, D.29201
	movq	-136(%rbp), %rax	# cond, tmp406
	movq	8(%rax), %rdx	# cond_31->fld[0].rtx, D.29201
	movl	-140(%rbp), %esi	# mode, tmp407
	movl	-172(%rbp), %eax	# true_code, tmp408
	movl	%eax, %edi	# tmp408,
	call	gen_binary	#
	jmp	.L765	#
.L764:
	.loc 1 4660 0
	cmpl	$0, -168(%rbp)	#, comparison_p
	je	.L766	#,
	.loc 1 4661 0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29201
	cmpq	-128(%rbp), %rax	# true_rtx, D.29201
	jne	.L766	#,
	.loc 1 4661 0 is_stmt 0 discriminator 1
	movq	const_true_rtx(%rip), %rax	# const_true_rtx, const_true_rtx.741
	cmpq	%rax, -120(%rbp)	# const_true_rtx.741, false_rtx
	jne	.L766	#,
	.loc 1 4662 0 is_stmt 1
	movq	-136(%rbp), %rax	# cond, tmp409
	movq	16(%rax), %rcx	# cond_31->fld[1].rtx, D.29201
	movq	-136(%rbp), %rax	# cond, tmp410
	movq	8(%rax), %rdx	# cond_31->fld[0].rtx, D.29201
	movl	-140(%rbp), %esi	# mode, tmp411
	movq	-136(%rbp), %rax	# cond, tmp412
	movq	%rax, %rdi	# tmp412,
	call	reversed_comparison	#
	movq	%rax, -80(%rbp)	# tmp413, reversed
	cmpq	$0, -80(%rbp)	#, reversed
	je	.L766	#,
	.loc 1 4664 0
	movq	-80(%rbp), %rax	# reversed, D.29196
	jmp	.L765	#
.L766:
	.loc 1 4670 0
	cmpl	$0, -168(%rbp)	#, comparison_p
	je	.L767	#,
	.loc 1 4671 0
	movq	-136(%rbp), %rax	# cond, tmp414
	movq	%rax, %rdi	# tmp414,
	call	combine_reversed_comparison_code	#
	movl	%eax, -160(%rbp)	# tmp415, false_code
	cmpl	$0, -160(%rbp)	#, false_code
	je	.L767	#,
	.loc 1 4673 0
	movq	-136(%rbp), %rax	# cond, tmp416
	movq	8(%rax), %rax	# cond_31->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _52->code, D.29198
	cmpw	$61, %ax	#, D.29198
	jne	.L767	#,
.LBB55:
	.loc 1 4676 0
	movq	-136(%rbp), %rax	# cond, tmp417
	movq	8(%rax), %rax	# cond_31->fld[0].rtx, tmp418
	movq	%rax, -72(%rbp)	# tmp418, from
	.loc 1 4677 0
	movq	-136(%rbp), %rax	# cond, tmp419
	movq	16(%rax), %rax	# cond_31->fld[1].rtx, tmp420
	movq	%rax, -64(%rbp)	# tmp420, true_val
	.loc 1 4678 0
	movq	-64(%rbp), %rax	# true_val, tmp421
	movq	%rax, -104(%rbp)	# tmp421, false_val
	.loc 1 4679 0
	movl	$0, -156(%rbp)	#, swapped
	.loc 1 4683 0
	cmpl	$103, -160(%rbp)	#, false_code
	jne	.L768	#,
	.loc 1 4685 0
	movl	$1, -156(%rbp)	#, swapped
	movl	$103, -172(%rbp)	#, true_code
	movl	$102, -160(%rbp)	#, false_code
	.loc 1 4686 0
	movq	-128(%rbp), %rax	# true_rtx, tmp422
	movq	%rax, -112(%rbp)	# tmp422, temp
	movq	-120(%rbp), %rax	# false_rtx, tmp423
	movq	%rax, -128(%rbp)	# tmp423, true_rtx
	movq	-112(%rbp), %rax	# temp, tmp424
	movq	%rax, -120(%rbp)	# tmp424, false_rtx
.L768:
	.loc 1 4693 0
	cmpl	$103, -172(%rbp)	#, true_code
	jne	.L769	#,
	.loc 1 4693 0 is_stmt 0 discriminator 1
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29201
	cmpq	-64(%rbp), %rax	# true_val, D.29201
	jne	.L769	#,
	.loc 1 4694 0 is_stmt 1
	movq	-72(%rbp), %rax	# from, tmp425
	movzbl	2(%rax), %eax	# from_54->mode, D.29197
	movzbl	%al, %edx	# D.29197, D.29202
	movq	-72(%rbp), %rax	# from, tmp426
	movl	%edx, %esi	# D.29202,
	movq	%rax, %rdi	# tmp426,
	call	nonzero_bits	#
	movq	%rax, -56(%rbp)	# D.29203, nzb
	movq	-56(%rbp), %rax	# nzb, nzb.742
	movq	%rax, %rdi	# nzb.742,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29204
	js	.L769	#,
	.loc 1 4695 0
	movl	$103, -160(%rbp)	#, false_code
	movq	-56(%rbp), %rax	# nzb, tmp427
	movq	%rax, %rsi	# tmp427,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -104(%rbp)	# tmp428, false_val
	jmp	.L770	#
.L769:
	.loc 1 4696 0
	cmpl	$103, -172(%rbp)	#, true_code
	jne	.L770	#,
	.loc 1 4696 0 is_stmt 0 discriminator 1
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29201
	cmpq	-64(%rbp), %rax	# true_val, D.29201
	jne	.L770	#,
	.loc 1 4697 0 is_stmt 1
	movq	-72(%rbp), %rax	# from, tmp429
	movzbl	2(%rax), %eax	# from_54->mode, D.29197
	movzbl	%al, %edx	# D.29197, D.29202
	movq	-72(%rbp), %rax	# from, tmp430
	movl	%edx, %esi	# D.29202,
	movq	%rax, %rdi	# tmp430,
	call	num_sign_bit_copies	#
	.loc 1 4698 0
	movq	-72(%rbp), %rdx	# from, tmp431
	movzbl	2(%rdx), %edx	# from_54->mode, D.29197
	movzbl	%dl, %edx	# D.29197, D.29204
	movslq	%edx, %rdx	# D.29204, tmp432
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29198
	movzwl	%dx, %edx	# D.29198, D.29205
	.loc 1 4697 0
	cmpl	%edx, %eax	# D.29205, D.29205
	jne	.L770	#,
	.loc 1 4699 0
	movl	$103, -160(%rbp)	#, false_code
	movq	const_int_rtx+504(%rip), %rax	# const_int_rtx, tmp433
	movq	%rax, -104(%rbp)	# tmp433, false_val
.L770:
	.loc 1 4705 0
	movq	-128(%rbp), %rdx	# true_rtx, tmp434
	movq	-72(%rbp), %rax	# from, tmp435
	movq	%rdx, %rsi	# tmp434,
	movq	%rax, %rdi	# tmp435,
	call	reg_mentioned_p	#
	testl	%eax, %eax	# D.29204
	je	.L771	#,
	.loc 1 4706 0
	movq	global_rtl(%rip), %r12	# global_rtl, D.29201
	movq	global_rtl(%rip), %rbx	# global_rtl, D.29201
	movq	-128(%rbp), %rax	# true_rtx, tmp436
	movq	%rax, %rdi	# tmp436,
	call	copy_rtx	#
	movq	-64(%rbp), %rcx	# true_val, tmp437
	movq	-72(%rbp), %rdx	# from, tmp438
	movl	-172(%rbp), %esi	# true_code, tmp439
	movq	%rax, %rdi	# D.29201,
	call	known_cond	#
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%r12, %rdx	# D.29201,
	movq	%rbx, %rsi	# D.29201,
	movq	%rax, %rdi	# D.29201,
	call	subst	#
	movq	%rax, -128(%rbp)	# tmp440, true_rtx
.L771:
	.loc 1 4709 0
	movq	-120(%rbp), %rdx	# false_rtx, tmp441
	movq	-72(%rbp), %rax	# from, tmp442
	movq	%rdx, %rsi	# tmp441,
	movq	%rax, %rdi	# tmp442,
	call	reg_mentioned_p	#
	testl	%eax, %eax	# D.29204
	je	.L772	#,
	.loc 1 4710 0
	movq	global_rtl(%rip), %r12	# global_rtl, D.29201
	movq	global_rtl(%rip), %rbx	# global_rtl, D.29201
	movq	-120(%rbp), %rax	# false_rtx, tmp443
	movq	%rax, %rdi	# tmp443,
	call	copy_rtx	#
	movq	-104(%rbp), %rcx	# false_val, tmp444
	movq	-72(%rbp), %rdx	# from, tmp445
	movl	-160(%rbp), %esi	# false_code, tmp446
	movq	%rax, %rdi	# D.29201,
	call	known_cond	#
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%r12, %rdx	# D.29201,
	movq	%rbx, %rsi	# D.29201,
	movq	%rax, %rdi	# D.29201,
	call	subst	#
	movq	%rax, -120(%rbp)	# tmp447, false_rtx
.L772:
	.loc 1 4714 0
	cmpl	$0, -156(%rbp)	#, swapped
	je	.L773	#,
	.loc 1 4714 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# false_rtx, iftmp.743
	jmp	.L774	#
.L773:
	.loc 1 4714 0 discriminator 2
	movq	-128(%rbp), %rax	# true_rtx, iftmp.743
.L774:
	.loc 1 4714 0 discriminator 3
	movq	-184(%rbp), %rdx	# x, tmp448
	addq	$16, %rdx	#, D.29206
	movq	%rax, %rsi	# iftmp.743,
	movq	%rdx, %rdi	# D.29206,
	call	do_SUBST	#
	.loc 1 4715 0 is_stmt 1 discriminator 3
	cmpl	$0, -156(%rbp)	#, swapped
	je	.L775	#,
	.loc 1 4715 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# true_rtx, iftmp.744
	jmp	.L776	#
.L775:
	.loc 1 4715 0 discriminator 2
	movq	-120(%rbp), %rax	# false_rtx, iftmp.744
.L776:
	.loc 1 4715 0 discriminator 3
	movq	-184(%rbp), %rdx	# x, tmp449
	addq	$24, %rdx	#, D.29206
	movq	%rax, %rsi	# iftmp.744,
	movq	%rdx, %rdi	# D.29206,
	call	do_SUBST	#
	.loc 1 4717 0 is_stmt 1 discriminator 3
	movq	-184(%rbp), %rax	# x, tmp450
	movq	16(%rax), %rax	# x_28(D)->fld[1].rtx, tmp451
	movq	%rax, -128(%rbp)	# tmp451, true_rtx
	.loc 1 4718 0 discriminator 3
	movq	-184(%rbp), %rax	# x, tmp452
	movq	24(%rax), %rax	# x_28(D)->fld[2].rtx, tmp453
	movq	%rax, -120(%rbp)	# tmp453, false_rtx
	.loc 1 4719 0 discriminator 3
	movq	-136(%rbp), %rax	# cond, tmp454
	movzwl	(%rax), %eax	# cond_31->code, D.29198
	movzwl	%ax, %eax	# D.29198, tmp455
	movl	%eax, -172(%rbp)	# tmp455, true_code
.L767:
.LBE55:
	.loc 1 4728 0
	cmpl	$0, -168(%rbp)	#, comparison_p
	je	.L777	#,
	.loc 1 4729 0
	movq	-136(%rbp), %rax	# cond, tmp456
	movq	%rax, %rdi	# tmp456,
	call	combine_reversed_comparison_code	#
	testl	%eax, %eax	# D.29207
	je	.L777	#,
	.loc 1 4730 0
	movq	global_rtl(%rip), %rax	# global_rtl, D.29201
	cmpq	-128(%rbp), %rax	# true_rtx, D.29201
	je	.L778	#,
	.loc 1 4731 0
	movq	-128(%rbp), %rax	# true_rtx, tmp457
	movzwl	(%rax), %eax	# true_rtx_4->code, D.29198
	cmpw	$67, %ax	#, D.29198
	je	.L779	#,
	.loc 1 4731 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# true_rtx, tmp458
	movzwl	(%rax), %eax	# true_rtx_4->code, D.29198
	cmpw	$68, %ax	#, D.29198
	je	.L779	#,
	movq	-128(%rbp), %rax	# true_rtx, tmp459
	movzwl	(%rax), %eax	# true_rtx_4->code, D.29198
	cmpw	$54, %ax	#, D.29198
	je	.L779	#,
	movq	-128(%rbp), %rax	# true_rtx, tmp460
	movzwl	(%rax), %eax	# true_rtx_4->code, D.29198
	cmpw	$55, %ax	#, D.29198
	je	.L779	#,
	movq	-128(%rbp), %rax	# true_rtx, tmp461
	movzwl	(%rax), %eax	# true_rtx_4->code, D.29198
	cmpw	$58, %ax	#, D.29198
	je	.L779	#,
	movq	-128(%rbp), %rax	# true_rtx, tmp462
	movzwl	(%rax), %eax	# true_rtx_4->code, D.29198
	cmpw	$134, %ax	#, D.29198
	je	.L779	#,
	movq	-128(%rbp), %rax	# true_rtx, tmp463
	movzwl	(%rax), %eax	# true_rtx_4->code, D.29198
	cmpw	$56, %ax	#, D.29198
	je	.L779	#,
	movq	-128(%rbp), %rax	# true_rtx, tmp464
	movzwl	(%rax), %eax	# true_rtx_4->code, D.29198
	cmpw	$140, %ax	#, D.29198
	jne	.L780	#,
.L779:
	.loc 1 4732 0 is_stmt 1
	movq	-120(%rbp), %rax	# false_rtx, tmp465
	movzwl	(%rax), %eax	# false_rtx_8->code, D.29198
	cmpw	$54, %ax	#, D.29198
	je	.L780	#,
	.loc 1 4732 0 is_stmt 0 discriminator 1
	movq	global_rtl(%rip), %rax	# global_rtl, D.29201
	cmpq	-120(%rbp), %rax	# false_rtx, D.29201
	jne	.L778	#,
.L780:
	.loc 1 4733 0 is_stmt 1
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29201
	cmpq	-128(%rbp), %rax	# true_rtx, D.29201
	je	.L778	#,
	.loc 1 4734 0
	movq	-128(%rbp), %rax	# true_rtx, tmp466
	movzwl	(%rax), %eax	# true_rtx_4->code, D.29198
	movzwl	%ax, %eax	# D.29198, D.29204
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29199
	cmpb	$111, %al	#, D.29199
	jne	.L781	#,
	.loc 1 4735 0
	movq	-120(%rbp), %rax	# false_rtx, tmp468
	movzwl	(%rax), %eax	# false_rtx_8->code, D.29198
	movzwl	%ax, %eax	# D.29198, D.29204
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29199
	cmpb	$111, %al	#, D.29199
	jne	.L778	#,
.L781:
	.loc 1 4736 0
	movq	-128(%rbp), %rax	# true_rtx, tmp470
	movzwl	(%rax), %eax	# true_rtx_4->code, D.29198
	cmpw	$63, %ax	#, D.29198
	jne	.L782	#,
	.loc 1 4737 0
	movq	-128(%rbp), %rax	# true_rtx, tmp471
	movq	8(%rax), %rax	# true_rtx_4->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _125->code, D.29198
	movzwl	%ax, %eax	# D.29198, D.29204
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29199
	cmpb	$111, %al	#, D.29199
	jne	.L782	#,
	.loc 1 4738 0
	movq	-120(%rbp), %rax	# false_rtx, tmp473
	movzwl	(%rax), %eax	# false_rtx_8->code, D.29198
	movzwl	%ax, %eax	# D.29198, D.29204
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29199
	cmpb	$111, %al	#, D.29199
	jne	.L778	#,
.L782:
	.loc 1 4739 0
	movq	-120(%rbp), %rdx	# false_rtx, tmp475
	movq	-128(%rbp), %rax	# true_rtx, tmp476
	movq	%rdx, %rsi	# tmp475,
	movq	%rax, %rdi	# tmp476,
	call	reg_mentioned_p	#
	testl	%eax, %eax	# D.29204
	jne	.L778	#,
	.loc 1 4740 0
	movq	-136(%rbp), %rax	# cond, tmp477
	movq	8(%rax), %rdx	# cond_31->fld[0].rtx, D.29201
	movq	-120(%rbp), %rax	# false_rtx, tmp478
	movq	%rdx, %rsi	# D.29201,
	movq	%rax, %rdi	# tmp478,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L777	#,
.L778:
	.loc 1 4742 0
	movq	-136(%rbp), %rax	# cond, tmp479
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp479,
	call	reversed_comparison_code	#
	movl	%eax, -172(%rbp)	# tmp480, true_code
	.loc 1 4743 0
	movq	-136(%rbp), %rax	# cond, tmp481
	movq	16(%rax), %rcx	# cond_31->fld[1].rtx, D.29201
	movq	-136(%rbp), %rax	# cond, tmp482
	movq	8(%rax), %rdx	# cond_31->fld[0].rtx, D.29201
	movq	-136(%rbp), %rax	# cond, tmp483
	movzbl	2(%rax), %eax	# cond_31->mode, D.29197
	movzbl	%al, %esi	# D.29197, D.29202
	movq	-136(%rbp), %rax	# cond, tmp484
	movq	%rax, %rdi	# tmp484,
	call	reversed_comparison	#
	movq	-184(%rbp), %rdx	# x, tmp485
	addq	$8, %rdx	#, D.29206
	movq	%rax, %rsi	# D.29201,
	movq	%rdx, %rdi	# D.29206,
	call	do_SUBST	#
	.loc 1 4747 0
	movq	-184(%rbp), %rax	# x, tmp486
	leaq	16(%rax), %rdx	#, D.29206
	movq	-120(%rbp), %rax	# false_rtx, tmp487
	movq	%rax, %rsi	# tmp487,
	movq	%rdx, %rdi	# D.29206,
	call	do_SUBST	#
	.loc 1 4748 0
	movq	-184(%rbp), %rax	# x, tmp488
	leaq	24(%rax), %rdx	#, D.29206
	movq	-128(%rbp), %rax	# true_rtx, tmp489
	movq	%rax, %rsi	# tmp489,
	movq	%rdx, %rdi	# D.29206,
	call	do_SUBST	#
	.loc 1 4750 0
	movq	-128(%rbp), %rax	# true_rtx, tmp490
	movq	%rax, -112(%rbp)	# tmp490, temp
	movq	-120(%rbp), %rax	# false_rtx, tmp491
	movq	%rax, -128(%rbp)	# tmp491, true_rtx
	movq	-112(%rbp), %rax	# temp, tmp492
	movq	%rax, -120(%rbp)	# tmp492, false_rtx
	.loc 1 4751 0
	movq	-184(%rbp), %rax	# x, tmp493
	movq	8(%rax), %rax	# x_28(D)->fld[0].rtx, tmp494
	movq	%rax, -136(%rbp)	# tmp494, cond
	.loc 1 4754 0
	movq	-136(%rbp), %rax	# cond, tmp495
	movzwl	(%rax), %eax	# cond_147->code, D.29198
	movzwl	%ax, %eax	# D.29198, tmp496
	movl	%eax, -172(%rbp)	# tmp496, true_code
	.loc 1 4755 0
	movl	-172(%rbp), %eax	# true_code, true_code.745
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29199
	cmpb	$60, %al	#, D.29199
	sete	%al	#, D.29200
	movzbl	%al, %eax	# D.29200, tmp498
	movl	%eax, -168(%rbp)	# tmp498, comparison_p
.L777:
	.loc 1 4760 0
	movq	-120(%rbp), %rdx	# false_rtx, tmp499
	movq	-128(%rbp), %rax	# true_rtx, tmp500
	movq	%rdx, %rsi	# tmp499,
	movq	%rax, %rdi	# tmp500,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L783	#,
	.loc 1 4760 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# cond, tmp501
	movq	%rax, %rdi	# tmp501,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29204
	jne	.L783	#,
	.loc 1 4761 0 is_stmt 1
	movq	-128(%rbp), %rax	# true_rtx, D.29196
	jmp	.L765	#
.L783:
	.loc 1 4764 0
	cmpl	$103, -172(%rbp)	#, true_code
	jne	.L784	#,
	.loc 1 4764 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# cond, tmp502
	movq	%rax, %rdi	# tmp502,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29204
	jne	.L784	#,
	.loc 1 4765 0 is_stmt 1
	movl	-140(%rbp), %eax	# mode, mode.746
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29208
	cmpl	$2, %eax	#, D.29208
	je	.L785	#,
	.loc 1 4765 0 is_stmt 0 discriminator 1
	movl	-140(%rbp), %eax	# mode, mode.747
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29208
	cmpl	$6, %eax	#, D.29208
	je	.L785	#,
	movl	-140(%rbp), %eax	# mode, mode.748
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29208
	cmpl	$8, %eax	#, D.29208
	jne	.L786	#,
.L785:
	.loc 1 4765 0 discriminator 2
	movl	flag_unsafe_math_optimizations(%rip), %eax	# flag_unsafe_math_optimizations, flag_unsafe_math_optimizations.749
	testl	%eax, %eax	# flag_unsafe_math_optimizations.749
	je	.L784	#,
.L786:
	.loc 1 4766 0 is_stmt 1
	movq	-136(%rbp), %rax	# cond, tmp506
	movq	8(%rax), %rax	# cond_1->fld[0].rtx, D.29201
	movq	-120(%rbp), %rdx	# false_rtx, tmp507
	movq	%rdx, %rsi	# tmp507,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L784	#,
	.loc 1 4767 0
	movq	-136(%rbp), %rax	# cond, tmp508
	movq	16(%rax), %rax	# cond_1->fld[1].rtx, D.29201
	movq	-128(%rbp), %rdx	# true_rtx, tmp509
	movq	%rdx, %rsi	# tmp509,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L784	#,
	.loc 1 4768 0
	movq	-120(%rbp), %rax	# false_rtx, D.29196
	jmp	.L765	#
.L784:
	.loc 1 4769 0
	cmpl	$102, -172(%rbp)	#, true_code
	jne	.L787	#,
	.loc 1 4769 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# cond, tmp510
	movq	%rax, %rdi	# tmp510,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29204
	jne	.L787	#,
	.loc 1 4770 0 is_stmt 1
	movl	-140(%rbp), %eax	# mode, mode.750
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29208
	cmpl	$2, %eax	#, D.29208
	je	.L788	#,
	.loc 1 4770 0 is_stmt 0 discriminator 1
	movl	-140(%rbp), %eax	# mode, mode.751
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29208
	cmpl	$6, %eax	#, D.29208
	je	.L788	#,
	movl	-140(%rbp), %eax	# mode, mode.752
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29208
	cmpl	$8, %eax	#, D.29208
	jne	.L789	#,
.L788:
	.loc 1 4770 0 discriminator 2
	movl	flag_unsafe_math_optimizations(%rip), %eax	# flag_unsafe_math_optimizations, flag_unsafe_math_optimizations.753
	testl	%eax, %eax	# flag_unsafe_math_optimizations.753
	je	.L787	#,
.L789:
	.loc 1 4771 0 is_stmt 1
	movq	-136(%rbp), %rax	# cond, tmp514
	movq	8(%rax), %rax	# cond_1->fld[0].rtx, D.29201
	movq	-128(%rbp), %rdx	# true_rtx, tmp515
	movq	%rdx, %rsi	# tmp515,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L787	#,
	.loc 1 4772 0
	movq	-136(%rbp), %rax	# cond, tmp516
	movq	16(%rax), %rax	# cond_1->fld[1].rtx, D.29201
	movq	-120(%rbp), %rdx	# false_rtx, tmp517
	movq	%rdx, %rsi	# tmp517,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L787	#,
	.loc 1 4773 0
	movq	-128(%rbp), %rax	# true_rtx, D.29196
	jmp	.L765	#
.L787:
	.loc 1 4777 0
	movl	-140(%rbp), %eax	# mode, mode.754
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29208
	cmpl	$1, %eax	#, D.29208
	jne	.L790	#,
	.loc 1 4778 0
	movq	-120(%rbp), %rax	# false_rtx, tmp519
	movzwl	(%rax), %eax	# false_rtx_9->code, D.29198
	cmpw	$77, %ax	#, D.29198
	jne	.L790	#,
	.loc 1 4779 0
	movq	-120(%rbp), %rax	# false_rtx, tmp520
	movq	8(%rax), %rdx	# false_rtx_9->fld[0].rtx, D.29201
	movq	-128(%rbp), %rax	# true_rtx, tmp521
	movq	%rdx, %rsi	# D.29201,
	movq	%rax, %rdi	# tmp521,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L790	#,
	.loc 1 4780 0
	cmpl	$0, -168(%rbp)	#, comparison_p
	je	.L790	#,
	.loc 1 4781 0
	movq	-136(%rbp), %rax	# cond, tmp522
	movq	8(%rax), %rdx	# cond_1->fld[0].rtx, D.29201
	movq	-128(%rbp), %rax	# true_rtx, tmp523
	movq	%rdx, %rsi	# D.29201,
	movq	%rax, %rdi	# tmp523,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L790	#,
	.loc 1 4782 0
	movq	-128(%rbp), %rax	# true_rtx, tmp524
	movq	%rax, %rdi	# tmp524,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29204
	jne	.L790	#,
	.loc 1 4783 0
	movl	-172(%rbp), %eax	# true_code, true_code
	cmpl	$104, %eax	#, true_code
	jb	.L821	#,
	cmpl	$105, %eax	#, true_code
	jbe	.L792	#,
	cmpl	$107, %eax	#, true_code
	ja	.L821	#,
	jmp	.L820	#
.L792:
	.loc 1 4787 0
	movl	-140(%rbp), %ecx	# mode, tmp526
	movq	-128(%rbp), %rdx	# true_rtx, tmp527
	movl	-140(%rbp), %eax	# mode, tmp528
	movl	%eax, %esi	# tmp528,
	movl	$129, %edi	#,
	call	simplify_gen_unary	#
	jmp	.L765	#
.L820:
	.loc 1 4791 0
	movl	-140(%rbp), %ecx	# mode, tmp529
	movq	-128(%rbp), %rdx	# true_rtx, tmp530
	movl	-140(%rbp), %eax	# mode, tmp531
	movl	%eax, %esi	# tmp531,
	movl	$129, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, %rdx	#, D.29201
	.loc 1 4790 0
	movl	-140(%rbp), %ecx	# mode, tmp532
	movl	-140(%rbp), %eax	# mode, tmp533
	movl	%eax, %esi	# tmp533,
	movl	$77, %edi	#,
	call	simplify_gen_unary	#
	jmp	.L765	#
.L821:
	.loc 1 4795 0
	nop
.L790:
	.loc 1 4800 0
	movl	-140(%rbp), %eax	# mode, mode.755
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29208
	cmpl	$2, %eax	#, D.29208
	je	.L794	#,
	.loc 1 4800 0 is_stmt 0 discriminator 1
	movl	-140(%rbp), %eax	# mode, mode.756
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29208
	cmpl	$6, %eax	#, D.29208
	je	.L794	#,
	movl	-140(%rbp), %eax	# mode, mode.757
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29208
	cmpl	$8, %eax	#, D.29208
	jne	.L795	#,
.L794:
	.loc 1 4800 0 discriminator 2
	movl	flag_unsafe_math_optimizations(%rip), %eax	# flag_unsafe_math_optimizations, flag_unsafe_math_optimizations.758
	testl	%eax, %eax	# flag_unsafe_math_optimizations.758
	je	.L796	#,
.L795:
	.loc 1 4801 0 is_stmt 1
	cmpl	$0, -168(%rbp)	#, comparison_p
	je	.L796	#,
	.loc 1 4802 0
	movq	-136(%rbp), %rax	# cond, tmp537
	movq	8(%rax), %rax	# cond_1->fld[0].rtx, D.29201
	movq	-128(%rbp), %rdx	# true_rtx, tmp538
	movq	%rdx, %rsi	# tmp538,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L796	#,
	.loc 1 4803 0
	movq	-136(%rbp), %rax	# cond, tmp539
	movq	16(%rax), %rax	# cond_1->fld[1].rtx, D.29201
	movq	-120(%rbp), %rdx	# false_rtx, tmp540
	movq	%rdx, %rsi	# tmp540,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L796	#,
	.loc 1 4804 0
	movq	-136(%rbp), %rax	# cond, tmp541
	movq	%rax, %rdi	# tmp541,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29204
	jne	.L796	#,
	.loc 1 4805 0
	movl	-172(%rbp), %eax	# true_code, tmp543
	subl	$104, %eax	#, tmp542
	cmpl	$7, %eax	#, tmp542
	ja	.L822	#,
	movl	%eax, %eax	# tmp542, tmp544
	movq	.L799(,%rax,8), %rax	#, tmp545
	jmp	*%rax	# tmp545
	.section	.rodata
	.align 8
	.align 4
.L799:
	.quad	.L798
	.quad	.L798
	.quad	.L800
	.quad	.L800
	.quad	.L801
	.quad	.L801
	.quad	.L802
	.quad	.L802
	.text
.L798:
	.loc 1 4809 0
	movq	-120(%rbp), %rcx	# false_rtx, tmp546
	movq	-128(%rbp), %rdx	# true_rtx, tmp547
	movl	-140(%rbp), %eax	# mode, tmp548
	movl	%eax, %esi	# tmp548,
	movl	$93, %edi	#,
	call	gen_binary	#
	jmp	.L765	#
.L800:
	.loc 1 4812 0
	movq	-120(%rbp), %rcx	# false_rtx, tmp549
	movq	-128(%rbp), %rdx	# true_rtx, tmp550
	movl	-140(%rbp), %eax	# mode, tmp551
	movl	%eax, %esi	# tmp551,
	movl	$92, %edi	#,
	call	gen_binary	#
	jmp	.L765	#
.L801:
	.loc 1 4815 0
	movq	-120(%rbp), %rcx	# false_rtx, tmp552
	movq	-128(%rbp), %rdx	# true_rtx, tmp553
	movl	-140(%rbp), %eax	# mode, tmp554
	movl	%eax, %esi	# tmp554,
	movl	$95, %edi	#,
	call	gen_binary	#
	jmp	.L765	#
.L802:
	.loc 1 4818 0
	movq	-120(%rbp), %rcx	# false_rtx, tmp555
	movq	-128(%rbp), %rdx	# true_rtx, tmp556
	movl	-140(%rbp), %eax	# mode, tmp557
	movl	%eax, %esi	# tmp557,
	movl	$94, %edi	#,
	call	gen_binary	#
	jmp	.L765	#
.L822:
	.loc 1 4820 0
	nop
.L796:
	.loc 1 4830 0
	cmpl	$0, -168(%rbp)	#, comparison_p
	je	.L803	#,
	.loc 1 4831 0
	cmpl	$0, -140(%rbp)	#, mode
	je	.L803	#,
	.loc 1 4831 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# x, tmp558
	movq	%rax, %rdi	# tmp558,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29204
	jne	.L803	#,
.LBB56:
	.loc 1 4833 0 is_stmt 1
	movq	-128(%rbp), %rax	# true_rtx, tmp559
	movl	$47, %esi	#,
	movq	%rax, %rdi	# tmp559,
	call	make_compound_operation	#
	movq	%rax, -48(%rbp)	# tmp560, t
	.loc 1 4834 0
	movq	-120(%rbp), %rax	# false_rtx, tmp561
	movl	$47, %esi	#,
	movq	%rax, %rdi	# tmp561,
	call	make_compound_operation	#
	movq	%rax, -40(%rbp)	# tmp562, f
	.loc 1 4835 0
	movq	-136(%rbp), %rax	# cond, tmp563
	movq	8(%rax), %rax	# cond_1->fld[0].rtx, tmp564
	movq	%rax, -32(%rbp)	# tmp564, cond_op0
	.loc 1 4836 0
	movq	-136(%rbp), %rax	# cond, tmp565
	movq	16(%rax), %rax	# cond_1->fld[1].rtx, tmp566
	movq	%rax, -24(%rbp)	# tmp566, cond_op1
	.loc 1 4837 0
	movl	$1, -152(%rbp)	#, op
	movl	$1, -148(%rbp)	#, extend_op
	.loc 1 4838 0
	movl	-140(%rbp), %eax	# mode, tmp567
	movl	%eax, -144(%rbp)	# tmp567, m
	.loc 1 4839 0
	movq	$0, -96(%rbp)	#, z
	movq	$0, -88(%rbp)	#, c1
	.loc 1 4841 0
	movq	-48(%rbp), %rax	# t, tmp568
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$75, %ax	#, D.29198
	je	.L804	#,
	.loc 1 4841 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# t, tmp569
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$76, %ax	#, D.29198
	je	.L804	#,
	.loc 1 4842 0 is_stmt 1
	movq	-48(%rbp), %rax	# t, tmp570
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$84, %ax	#, D.29198
	je	.L804	#,
	.loc 1 4842 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# t, tmp571
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$85, %ax	#, D.29198
	je	.L804	#,
	.loc 1 4843 0 is_stmt 1
	movq	-48(%rbp), %rax	# t, tmp572
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$87, %ax	#, D.29198
	je	.L804	#,
	.loc 1 4844 0
	movq	-48(%rbp), %rax	# t, tmp573
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$90, %ax	#, D.29198
	je	.L804	#,
	.loc 1 4844 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# t, tmp574
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$89, %ax	#, D.29198
	jne	.L805	#,
.L804:
	.loc 1 4845 0 is_stmt 1
	movq	-48(%rbp), %rax	# t, tmp575
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	-40(%rbp), %rdx	# f, tmp576
	movq	%rdx, %rsi	# tmp576,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L805	#,
	.loc 1 4846 0
	movq	-48(%rbp), %rax	# t, tmp577
	movq	16(%rax), %rax	# t_211->fld[1].rtx, tmp578
	movq	%rax, -88(%rbp)	# tmp578, c1
	movq	-48(%rbp), %rax	# t, tmp579
	movzwl	(%rax), %eax	# t_211->code, D.29198
	movzwl	%ax, %eax	# D.29198, tmp580
	movl	%eax, -152(%rbp)	# tmp580, op
	movq	-40(%rbp), %rax	# f, tmp581
	movq	%rax, -96(%rbp)	# tmp581, z
	jmp	.L806	#
.L805:
	.loc 1 4850 0
	movq	-48(%rbp), %rax	# t, tmp582
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$75, %ax	#, D.29198
	je	.L807	#,
	.loc 1 4850 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# t, tmp583
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$84, %ax	#, D.29198
	je	.L807	#,
	.loc 1 4851 0 is_stmt 1
	movq	-48(%rbp), %rax	# t, tmp584
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$85, %ax	#, D.29198
	jne	.L808	#,
.L807:
	.loc 1 4852 0
	movq	-48(%rbp), %rax	# t, tmp585
	movq	16(%rax), %rax	# t_211->fld[1].rtx, D.29201
	movq	-40(%rbp), %rdx	# f, tmp586
	movq	%rdx, %rsi	# tmp586,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L808	#,
	.loc 1 4853 0
	movq	-48(%rbp), %rax	# t, tmp587
	movq	8(%rax), %rax	# t_211->fld[0].rtx, tmp588
	movq	%rax, -88(%rbp)	# tmp588, c1
	movq	-48(%rbp), %rax	# t, tmp589
	movzwl	(%rax), %eax	# t_211->code, D.29198
	movzwl	%ax, %eax	# D.29198, tmp590
	movl	%eax, -152(%rbp)	# tmp590, op
	movq	-40(%rbp), %rax	# f, tmp591
	movq	%rax, -96(%rbp)	# tmp591, z
	jmp	.L806	#
.L808:
	.loc 1 4854 0
	movq	-48(%rbp), %rax	# t, tmp592
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$120, %ax	#, D.29198
	jne	.L809	#,
	.loc 1 4855 0
	movq	-48(%rbp), %rax	# t, tmp593
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _243->code, D.29198
	cmpw	$75, %ax	#, D.29198
	je	.L810	#,
	.loc 1 4856 0
	movq	-48(%rbp), %rax	# t, tmp594
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _245->code, D.29198
	cmpw	$76, %ax	#, D.29198
	je	.L810	#,
	.loc 1 4857 0
	movq	-48(%rbp), %rax	# t, tmp595
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _247->code, D.29198
	cmpw	$84, %ax	#, D.29198
	je	.L810	#,
	.loc 1 4858 0
	movq	-48(%rbp), %rax	# t, tmp596
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _249->code, D.29198
	cmpw	$85, %ax	#, D.29198
	je	.L810	#,
	.loc 1 4859 0
	movq	-48(%rbp), %rax	# t, tmp597
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _251->code, D.29198
	cmpw	$87, %ax	#, D.29198
	je	.L810	#,
	.loc 1 4860 0
	movq	-48(%rbp), %rax	# t, tmp598
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _253->code, D.29198
	cmpw	$90, %ax	#, D.29198
	je	.L810	#,
	.loc 1 4861 0
	movq	-48(%rbp), %rax	# t, tmp599
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _255->code, D.29198
	cmpw	$89, %ax	#, D.29198
	jne	.L809	#,
.L810:
	.loc 1 4862 0
	movq	-48(%rbp), %rax	# t, tmp600
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	8(%rax), %rax	# _257->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _258->code, D.29198
	cmpw	$63, %ax	#, D.29198
	jne	.L809	#,
	.loc 1 4863 0
	movq	-48(%rbp), %rax	# t, tmp601
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	8(%rax), %rax	# _260->fld[0].rtx, D.29201
	movq	%rax, %rdi	# D.29201,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29204
	je	.L809	#,
	.loc 1 4864 0
	movq	-48(%rbp), %rax	# t, tmp602
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	8(%rax), %rax	# _263->fld[0].rtx, D.29201
	movq	8(%rax), %rax	# _264->fld[0].rtx, D.29201
	movq	-40(%rbp), %rdx	# f, tmp603
	movq	%rdx, %rsi	# tmp603,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L809	#,
	.loc 1 4865 0
	movq	-40(%rbp), %rax	# f, tmp604
	movzbl	2(%rax), %eax	# f_212->mode, D.29197
	movzbl	%al, %edx	# D.29197, D.29202
	movq	-40(%rbp), %rax	# f, tmp605
	movl	%edx, %esi	# D.29202,
	movq	%rax, %rdi	# tmp605,
	call	num_sign_bit_copies	#
	.loc 1 4866 0
	movl	-140(%rbp), %edx	# mode, mode.759
	movslq	%edx, %rdx	# mode.759, tmp606
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29198
	.loc 1 4867 0
	movzwl	%dx, %ecx	# D.29198, D.29204
	movq	-48(%rbp), %rdx	# t, tmp607
	movq	8(%rdx), %rdx	# t_211->fld[0].rtx, D.29201
	movq	8(%rdx), %rdx	# _273->fld[0].rtx, D.29201
	movzbl	2(%rdx), %edx	# _274->mode, D.29197
	movzbl	%dl, %edx	# D.29197, D.29204
	movslq	%edx, %rdx	# D.29204, tmp608
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29198
	movzwl	%dx, %edx	# D.29198, D.29204
	subl	%edx, %ecx	# D.29204, D.29204
	movl	%ecx, %edx	# D.29204, D.29204
	.loc 1 4865 0
	cmpl	%edx, %eax	# D.29205, D.29205
	jbe	.L809	#,
	.loc 1 4869 0
	movq	-48(%rbp), %rax	# t, tmp609
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	16(%rax), %rax	# _281->fld[1].rtx, tmp610
	movq	%rax, -88(%rbp)	# tmp610, c1
	movq	-40(%rbp), %rax	# f, tmp611
	movq	%rax, -96(%rbp)	# tmp611, z
	movq	-48(%rbp), %rax	# t, tmp612
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _284->code, D.29198
	movzwl	%ax, %eax	# D.29198, tmp613
	movl	%eax, -152(%rbp)	# tmp613, op
	.loc 1 4870 0
	movl	$120, -148(%rbp)	#, extend_op
	.loc 1 4871 0
	movq	-48(%rbp), %rax	# t, tmp614
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzbl	2(%rax), %eax	# _288->mode, D.29197
	movzbl	%al, %eax	# D.29197, tmp615
	movl	%eax, -144(%rbp)	# tmp615, m
	jmp	.L806	#
.L809:
	.loc 1 4873 0
	movq	-48(%rbp), %rax	# t, tmp616
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$120, %ax	#, D.29198
	jne	.L811	#,
	.loc 1 4874 0
	movq	-48(%rbp), %rax	# t, tmp617
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _292->code, D.29198
	cmpw	$75, %ax	#, D.29198
	je	.L812	#,
	.loc 1 4875 0
	movq	-48(%rbp), %rax	# t, tmp618
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _294->code, D.29198
	cmpw	$84, %ax	#, D.29198
	je	.L812	#,
	.loc 1 4876 0
	movq	-48(%rbp), %rax	# t, tmp619
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _296->code, D.29198
	cmpw	$85, %ax	#, D.29198
	jne	.L811	#,
.L812:
	.loc 1 4877 0
	movq	-48(%rbp), %rax	# t, tmp620
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	16(%rax), %rax	# _298->fld[1].rtx, D.29201
	movzwl	(%rax), %eax	# _299->code, D.29198
	cmpw	$63, %ax	#, D.29198
	jne	.L811	#,
	.loc 1 4878 0
	movq	-48(%rbp), %rax	# t, tmp621
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	16(%rax), %rax	# _301->fld[1].rtx, D.29201
	movq	%rax, %rdi	# D.29201,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29204
	je	.L811	#,
	.loc 1 4879 0
	movq	-48(%rbp), %rax	# t, tmp622
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	16(%rax), %rax	# _304->fld[1].rtx, D.29201
	movq	8(%rax), %rax	# _305->fld[0].rtx, D.29201
	movq	-40(%rbp), %rdx	# f, tmp623
	movq	%rdx, %rsi	# tmp623,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L811	#,
	.loc 1 4880 0
	movq	-40(%rbp), %rax	# f, tmp624
	movzbl	2(%rax), %eax	# f_212->mode, D.29197
	movzbl	%al, %edx	# D.29197, D.29202
	movq	-40(%rbp), %rax	# f, tmp625
	movl	%edx, %esi	# D.29202,
	movq	%rax, %rdi	# tmp625,
	call	num_sign_bit_copies	#
	.loc 1 4881 0
	movl	-140(%rbp), %edx	# mode, mode.760
	movslq	%edx, %rdx	# mode.760, tmp626
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29198
	.loc 1 4882 0
	movzwl	%dx, %ecx	# D.29198, D.29204
	movq	-48(%rbp), %rdx	# t, tmp627
	movq	8(%rdx), %rdx	# t_211->fld[0].rtx, D.29201
	movq	16(%rdx), %rdx	# _314->fld[1].rtx, D.29201
	movzbl	2(%rdx), %edx	# _315->mode, D.29197
	movzbl	%dl, %edx	# D.29197, D.29204
	movslq	%edx, %rdx	# D.29204, tmp628
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29198
	movzwl	%dx, %edx	# D.29198, D.29204
	subl	%edx, %ecx	# D.29204, D.29204
	movl	%ecx, %edx	# D.29204, D.29204
	.loc 1 4880 0
	cmpl	%edx, %eax	# D.29205, D.29205
	jbe	.L811	#,
	.loc 1 4884 0
	movq	-48(%rbp), %rax	# t, tmp629
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	8(%rax), %rax	# _322->fld[0].rtx, tmp630
	movq	%rax, -88(%rbp)	# tmp630, c1
	movq	-40(%rbp), %rax	# f, tmp631
	movq	%rax, -96(%rbp)	# tmp631, z
	movq	-48(%rbp), %rax	# t, tmp632
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _325->code, D.29198
	movzwl	%ax, %eax	# D.29198, tmp633
	movl	%eax, -152(%rbp)	# tmp633, op
	.loc 1 4885 0
	movl	$120, -148(%rbp)	#, extend_op
	.loc 1 4886 0
	movq	-48(%rbp), %rax	# t, tmp634
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzbl	2(%rax), %eax	# _329->mode, D.29197
	movzbl	%al, %eax	# D.29197, tmp635
	movl	%eax, -144(%rbp)	# tmp635, m
	jmp	.L806	#
.L811:
	.loc 1 4888 0
	movq	-48(%rbp), %rax	# t, tmp636
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$121, %ax	#, D.29198
	jne	.L813	#,
	.loc 1 4889 0
	movq	-48(%rbp), %rax	# t, tmp637
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _333->code, D.29198
	cmpw	$75, %ax	#, D.29198
	je	.L814	#,
	.loc 1 4890 0
	movq	-48(%rbp), %rax	# t, tmp638
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _335->code, D.29198
	cmpw	$76, %ax	#, D.29198
	je	.L814	#,
	.loc 1 4891 0
	movq	-48(%rbp), %rax	# t, tmp639
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _337->code, D.29198
	cmpw	$84, %ax	#, D.29198
	je	.L814	#,
	.loc 1 4892 0
	movq	-48(%rbp), %rax	# t, tmp640
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _339->code, D.29198
	cmpw	$85, %ax	#, D.29198
	je	.L814	#,
	.loc 1 4893 0
	movq	-48(%rbp), %rax	# t, tmp641
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _341->code, D.29198
	cmpw	$87, %ax	#, D.29198
	je	.L814	#,
	.loc 1 4894 0
	movq	-48(%rbp), %rax	# t, tmp642
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _343->code, D.29198
	cmpw	$90, %ax	#, D.29198
	je	.L814	#,
	.loc 1 4895 0
	movq	-48(%rbp), %rax	# t, tmp643
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _345->code, D.29198
	cmpw	$89, %ax	#, D.29198
	jne	.L813	#,
.L814:
	.loc 1 4896 0
	movq	-48(%rbp), %rax	# t, tmp644
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	8(%rax), %rax	# _347->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _348->code, D.29198
	cmpw	$63, %ax	#, D.29198
	jne	.L813	#,
	.loc 1 4897 0
	movl	-140(%rbp), %eax	# mode, mode.761
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29198
	cmpw	$64, %ax	#, D.29198
	ja	.L813	#,
	.loc 1 4898 0
	movq	-48(%rbp), %rax	# t, tmp646
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	8(%rax), %rax	# _352->fld[0].rtx, D.29201
	movq	%rax, %rdi	# D.29201,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29204
	je	.L813	#,
	.loc 1 4899 0
	movq	-48(%rbp), %rax	# t, tmp647
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	8(%rax), %rax	# _355->fld[0].rtx, D.29201
	movq	8(%rax), %rax	# _356->fld[0].rtx, D.29201
	movq	-40(%rbp), %rdx	# f, tmp648
	movq	%rdx, %rsi	# tmp648,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L813	#,
	.loc 1 4900 0
	movq	-40(%rbp), %rax	# f, tmp649
	movzbl	2(%rax), %eax	# f_212->mode, D.29197
	movzbl	%al, %edx	# D.29197, D.29202
	movq	-40(%rbp), %rax	# f, tmp650
	movl	%edx, %esi	# D.29202,
	movq	%rax, %rdi	# tmp650,
	call	nonzero_bits	#
	.loc 1 4901 0
	movq	-48(%rbp), %rdx	# t, tmp651
	movq	8(%rdx), %rdx	# t_211->fld[0].rtx, D.29201
	movq	8(%rdx), %rdx	# _362->fld[0].rtx, D.29201
	movzbl	2(%rdx), %edx	# _363->mode, D.29197
	movzbl	%dl, %edx	# D.29197, D.29204
	movslq	%edx, %rdx	# D.29204, tmp652
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29203
	notq	%rdx	# D.29203
	andq	%rdx, %rax	# D.29203, D.29203
	.loc 1 4900 0
	testq	%rax, %rax	# D.29203
	jne	.L813	#,
	.loc 1 4904 0
	movq	-48(%rbp), %rax	# t, tmp653
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	16(%rax), %rax	# _369->fld[1].rtx, tmp654
	movq	%rax, -88(%rbp)	# tmp654, c1
	movq	-40(%rbp), %rax	# f, tmp655
	movq	%rax, -96(%rbp)	# tmp655, z
	movq	-48(%rbp), %rax	# t, tmp656
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _372->code, D.29198
	movzwl	%ax, %eax	# D.29198, tmp657
	movl	%eax, -152(%rbp)	# tmp657, op
	.loc 1 4905 0
	movl	$121, -148(%rbp)	#, extend_op
	.loc 1 4906 0
	movq	-48(%rbp), %rax	# t, tmp658
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzbl	2(%rax), %eax	# _376->mode, D.29197
	movzbl	%al, %eax	# D.29197, tmp659
	movl	%eax, -144(%rbp)	# tmp659, m
	jmp	.L806	#
.L813:
	.loc 1 4908 0
	movq	-48(%rbp), %rax	# t, tmp660
	movzwl	(%rax), %eax	# t_211->code, D.29198
	cmpw	$121, %ax	#, D.29198
	jne	.L806	#,
	.loc 1 4909 0
	movq	-48(%rbp), %rax	# t, tmp661
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _380->code, D.29198
	cmpw	$75, %ax	#, D.29198
	je	.L815	#,
	.loc 1 4910 0
	movq	-48(%rbp), %rax	# t, tmp662
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _382->code, D.29198
	cmpw	$84, %ax	#, D.29198
	je	.L815	#,
	.loc 1 4911 0
	movq	-48(%rbp), %rax	# t, tmp663
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _384->code, D.29198
	cmpw	$85, %ax	#, D.29198
	jne	.L806	#,
.L815:
	.loc 1 4912 0
	movq	-48(%rbp), %rax	# t, tmp664
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	16(%rax), %rax	# _386->fld[1].rtx, D.29201
	movzwl	(%rax), %eax	# _387->code, D.29198
	cmpw	$63, %ax	#, D.29198
	jne	.L806	#,
	.loc 1 4913 0
	movl	-140(%rbp), %eax	# mode, mode.762
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29198
	cmpw	$64, %ax	#, D.29198
	ja	.L806	#,
	.loc 1 4914 0
	movq	-48(%rbp), %rax	# t, tmp666
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	16(%rax), %rax	# _391->fld[1].rtx, D.29201
	movq	%rax, %rdi	# D.29201,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29204
	je	.L806	#,
	.loc 1 4915 0
	movq	-48(%rbp), %rax	# t, tmp667
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	16(%rax), %rax	# _394->fld[1].rtx, D.29201
	movq	8(%rax), %rax	# _395->fld[0].rtx, D.29201
	movq	-40(%rbp), %rdx	# f, tmp668
	movq	%rdx, %rsi	# tmp668,
	movq	%rax, %rdi	# D.29201,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29204
	je	.L806	#,
	.loc 1 4916 0
	movq	-40(%rbp), %rax	# f, tmp669
	movzbl	2(%rax), %eax	# f_212->mode, D.29197
	movzbl	%al, %edx	# D.29197, D.29202
	movq	-40(%rbp), %rax	# f, tmp670
	movl	%edx, %esi	# D.29202,
	movq	%rax, %rdi	# tmp670,
	call	nonzero_bits	#
	.loc 1 4917 0
	movq	-48(%rbp), %rdx	# t, tmp671
	movq	8(%rdx), %rdx	# t_211->fld[0].rtx, D.29201
	movq	16(%rdx), %rdx	# _401->fld[1].rtx, D.29201
	movzbl	2(%rdx), %edx	# _402->mode, D.29197
	movzbl	%dl, %edx	# D.29197, D.29204
	movslq	%edx, %rdx	# D.29204, tmp672
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29203
	notq	%rdx	# D.29203
	andq	%rdx, %rax	# D.29203, D.29203
	.loc 1 4916 0
	testq	%rax, %rax	# D.29203
	jne	.L806	#,
	.loc 1 4920 0
	movq	-48(%rbp), %rax	# t, tmp673
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movq	8(%rax), %rax	# _408->fld[0].rtx, tmp674
	movq	%rax, -88(%rbp)	# tmp674, c1
	movq	-40(%rbp), %rax	# f, tmp675
	movq	%rax, -96(%rbp)	# tmp675, z
	movq	-48(%rbp), %rax	# t, tmp676
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzwl	(%rax), %eax	# _411->code, D.29198
	movzwl	%ax, %eax	# D.29198, tmp677
	movl	%eax, -152(%rbp)	# tmp677, op
	.loc 1 4921 0
	movl	$121, -148(%rbp)	#, extend_op
	.loc 1 4922 0
	movq	-48(%rbp), %rax	# t, tmp678
	movq	8(%rax), %rax	# t_211->fld[0].rtx, D.29201
	movzbl	2(%rax), %eax	# _415->mode, D.29197
	movzbl	%al, %eax	# D.29197, tmp679
	movl	%eax, -144(%rbp)	# tmp679, m
.L806:
	.loc 1 4925 0
	cmpq	$0, -96(%rbp)	#, z
	je	.L803	#,
	.loc 1 4927 0
	movq	global_rtl(%rip), %r12	# global_rtl, D.29201
	movq	global_rtl(%rip), %rbx	# global_rtl, D.29201
	movq	-24(%rbp), %rcx	# cond_op1, tmp680
	movq	-32(%rbp), %rdx	# cond_op0, tmp681
	movl	-144(%rbp), %esi	# m, tmp682
	movl	-172(%rbp), %eax	# true_code, tmp683
	movl	%eax, %edi	# tmp683,
	call	gen_binary	#
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%r12, %rdx	# D.29201,
	movq	%rbx, %rsi	# D.29201,
	movq	%rax, %rdi	# D.29201,
	call	subst	#
	movq	%rax, -112(%rbp)	# tmp684, temp
	.loc 1 4929 0
	movq	const_true_rtx(%rip), %rcx	# const_true_rtx, const_true_rtx.763
	movq	-88(%rbp), %rdx	# c1, tmp685
	movl	-144(%rbp), %eax	# m, tmp686
	movl	%eax, %esi	# tmp686,
	movl	$78, %edi	#,
	call	gen_binary	#
	movq	%rax, %rcx	#, D.29201
	movq	-112(%rbp), %rdx	# temp, tmp687
	movl	-144(%rbp), %eax	# m, tmp688
	movl	%eax, %esi	# tmp688,
	movl	$78, %edi	#,
	call	gen_binary	#
	movq	%rax, -112(%rbp)	# tmp689, temp
	.loc 1 4931 0
	movq	global_rtl(%rip), %rdx	# global_rtl, D.29201
	movq	global_rtl(%rip), %rsi	# global_rtl, D.29201
	movq	-112(%rbp), %rax	# temp, tmp690
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp690,
	call	subst	#
	movq	%rax, -112(%rbp)	# tmp691, temp
	.loc 1 4932 0
	movq	-96(%rbp), %rdx	# z, tmp692
	movl	-144(%rbp), %eax	# m, tmp693
	movq	%rdx, %rsi	# tmp692,
	movl	%eax, %edi	# tmp693,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29201
	movq	-112(%rbp), %rcx	# temp, tmp694
	movl	-144(%rbp), %esi	# m, tmp695
	movl	-152(%rbp), %eax	# op, tmp696
	movl	%eax, %edi	# tmp696,
	call	gen_binary	#
	movq	%rax, -112(%rbp)	# tmp697, temp
	.loc 1 4934 0
	cmpl	$1, -148(%rbp)	#, extend_op
	je	.L816	#,
	.loc 1 4935 0
	movl	-144(%rbp), %ecx	# m, tmp698
	movq	-112(%rbp), %rdx	# temp, tmp699
	movl	-140(%rbp), %esi	# mode, tmp700
	movl	-148(%rbp), %eax	# extend_op, tmp701
	movl	%eax, %edi	# tmp701,
	call	simplify_gen_unary	#
	movq	%rax, -112(%rbp)	# tmp702, temp
.L816:
	.loc 1 4937 0
	movq	-112(%rbp), %rax	# temp, D.29196
	jmp	.L765	#
.L803:
.LBE56:
	.loc 1 4946 0
	cmpl	$102, -172(%rbp)	#, true_code
	jne	.L817	#,
	.loc 1 4946 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# cond, tmp703
	movq	16(%rax), %rdx	# cond_1->fld[1].rtx, D.29201
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29201
	cmpq	%rax, %rdx	# D.29201, D.29201
	jne	.L817	#,
	.loc 1 4947 0 is_stmt 1
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29201
	cmpq	-120(%rbp), %rax	# false_rtx, D.29201
	jne	.L817	#,
	.loc 1 4947 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# true_rtx, tmp704
	movzwl	(%rax), %eax	# true_rtx_5->code, D.29198
	cmpw	$54, %ax	#, D.29198
	jne	.L817	#,
	.loc 1 4948 0 is_stmt 1
	movq	-136(%rbp), %rax	# cond, tmp705
	movq	8(%rax), %rax	# cond_1->fld[0].rtx, D.29201
	movl	-140(%rbp), %edx	# mode, tmp706
	movl	%edx, %esi	# tmp706,
	movq	%rax, %rdi	# D.29201,
	call	nonzero_bits	#
	cmpq	$1, %rax	#, D.29203
	jne	.L818	#,
	.loc 1 4949 0
	movq	-128(%rbp), %rax	# true_rtx, tmp707
	movq	8(%rax), %rax	# true_rtx_5->fld[0].rtwint, D.29209
	movq	%rax, %rdi	# D.29203,
	call	exact_log2_wide	#
	movl	%eax, -164(%rbp)	# tmp708, i
	cmpl	$0, -164(%rbp)	#, i
	jns	.L819	#,
.L818:
	.loc 1 4950 0
	movq	-136(%rbp), %rax	# cond, tmp709
	movq	8(%rax), %rax	# cond_1->fld[0].rtx, D.29201
	movl	-140(%rbp), %edx	# mode, tmp710
	movl	%edx, %esi	# tmp710,
	movq	%rax, %rdi	# D.29201,
	call	num_sign_bit_copies	#
	.loc 1 4951 0
	movl	-140(%rbp), %edx	# mode, mode.764
	movslq	%edx, %rdx	# mode.764, tmp711
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29198
	movzwl	%dx, %edx	# D.29198, D.29205
	.loc 1 4950 0
	cmpl	%edx, %eax	# D.29205, D.29205
	jne	.L817	#,
	.loc 1 4952 0
	movq	-128(%rbp), %rax	# true_rtx, tmp712
	movq	8(%rax), %rax	# true_rtx_5->fld[0].rtwint, D.29209
	negq	%rax	# D.29209
	movq	%rax, %rdi	# D.29203,
	call	exact_log2_wide	#
	movl	%eax, -164(%rbp)	# tmp713, i
	cmpl	$0, -164(%rbp)	#, i
	js	.L817	#,
.L819:
	.loc 1 4954 0
	movq	-136(%rbp), %rax	# cond, tmp714
	movq	8(%rax), %rdx	# cond_1->fld[0].rtx, D.29201
	movl	-140(%rbp), %eax	# mode, tmp715
	movq	%rdx, %rsi	# D.29201,
	movl	%eax, %edi	# tmp715,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29201
	.loc 1 4953 0
	movl	-164(%rbp), %ecx	# i, tmp716
	movl	-140(%rbp), %eax	# mode, tmp717
	movl	%ecx, %r8d	# tmp716,
	movq	%rdx, %rcx	# D.29201,
	movl	%eax, %edx	# tmp717,
	movl	$87, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	jmp	.L765	#
.L817:
	.loc 1 4957 0
	movq	-184(%rbp), %rax	# x, D.29196
.L765:
	.loc 1 4958 0
	addq	$176, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE19:
	.size	simplify_if_then_else, .-simplify_if_then_else
	.type	simplify_set, @function
simplify_set:
.LFB20:
	.loc 1 4965 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$168, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -168(%rbp)	# x, x
	.loc 1 4966 0
	movq	-168(%rbp), %rax	# x, tmp278
	movq	16(%rax), %rax	# x_22(D)->fld[1].rtx, tmp279
	movq	%rax, -96(%rbp)	# tmp279, src
	.loc 1 4967 0
	movq	-168(%rbp), %rax	# x, tmp280
	movq	8(%rax), %rax	# x_22(D)->fld[0].rtx, tmp281
	movq	%rax, -88(%rbp)	# tmp281, dest
	.loc 1 4969 0
	movq	-96(%rbp), %rax	# src, tmp282
	movzbl	2(%rax), %eax	# src_23->mode, D.29211
	testb	%al, %al	# D.29211
	je	.L824	#,
	.loc 1 4969 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# src, tmp283
	movzbl	2(%rax), %eax	# src_23->mode, D.29211
	movzbl	%al, %eax	# D.29211, iftmp.765
	jmp	.L825	#
.L824:
	.loc 1 4969 0 discriminator 2
	movq	-88(%rbp), %rax	# dest, tmp284
	movzbl	2(%rax), %eax	# dest_24->mode, D.29211
	movzbl	%al, %eax	# D.29211, iftmp.765
.L825:
	.loc 1 4968 0 is_stmt 1
	movl	%eax, -156(%rbp)	# iftmp.765, mode
	.loc 1 4974 0
	movq	-88(%rbp), %rax	# dest, tmp285
	movzwl	(%rax), %eax	# dest_24->code, D.29212
	cmpw	$59, %ax	#, D.29212
	jne	.L826	#,
	.loc 1 4974 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# src, tmp286
	movzwl	(%rax), %eax	# src_23->code, D.29212
	cmpw	$51, %ax	#, D.29212
	jne	.L826	#,
	.loc 1 4975 0 is_stmt 1
	movq	-96(%rbp), %rax	# src, D.29210
	jmp	.L868	#
.L826:
	.loc 1 4981 0
	movl	-156(%rbp), %eax	# mode, mode.766
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29213
	cmpl	$1, %eax	#, D.29213
	jne	.L828	#,
	.loc 1 4983 0
	movl	-156(%rbp), %esi	# mode, tmp288
	movq	-96(%rbp), %rax	# src, tmp289
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	$-1, %rdx	#,
	movq	%rax, %rdi	# tmp289,
	call	force_to_mode	#
	movq	%rax, -96(%rbp)	# tmp290, src
	.loc 1 4984 0
	movq	-168(%rbp), %rax	# x, tmp291
	leaq	16(%rax), %rdx	#, D.29214
	movq	-96(%rbp), %rax	# src, tmp292
	movq	%rax, %rsi	# tmp292,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
.L828:
	.loc 1 4990 0
	movq	-96(%rbp), %rax	# src, tmp293
	movzwl	(%rax), %eax	# src_1->code, D.29212
	cmpw	$74, %ax	#, D.29212
	jne	.L829	#,
	.loc 1 4995 0
	movq	subst_insn(%rip), %rcx	# subst_insn, subst_insn.767
	leaq	-136(%rbp), %rdx	#, tmp294
	movq	-88(%rbp), %rax	# dest, tmp295
	movq	%rcx, %rsi	# subst_insn.767,
	movq	%rax, %rdi	# tmp295,
	call	find_single_use	#
	movq	%rax, -56(%rbp)	# tmp296, cc_use
	cmpq	$0, -56(%rbp)	#, cc_use
	je	.L829	#,
	.loc 1 4996 0
	movq	undobuf+16(%rip), %rax	# undobuf.other_insn, D.29215
	testq	%rax, %rax	# D.29215
	je	.L830	#,
	.loc 1 4996 0 is_stmt 0 discriminator 1
	movq	undobuf+16(%rip), %rdx	# undobuf.other_insn, D.29215
	movq	-136(%rbp), %rax	# other_insn, other_insn.768
	cmpq	%rax, %rdx	# other_insn.768, D.29215
	jne	.L829	#,
.L830:
	.loc 1 4997 0 is_stmt 1
	movq	-56(%rbp), %rax	# cc_use, tmp297
	movq	(%rax), %rax	# *cc_use_40, D.29215
	movzwl	(%rax), %eax	# _44->code, D.29212
	movzwl	%ax, %eax	# D.29212, D.29216
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29217
	cmpb	$60, %al	#, D.29217
	jne	.L829	#,
	.loc 1 4998 0
	movq	-56(%rbp), %rax	# cc_use, tmp299
	movq	(%rax), %rax	# *cc_use_40, D.29215
	movq	8(%rax), %rax	# _48->fld[0].rtx, D.29215
	movq	-88(%rbp), %rdx	# dest, tmp300
	movq	%rdx, %rsi	# tmp300,
	movq	%rax, %rdi	# D.29215,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29216
	je	.L829	#,
.LBB57:
	.loc 1 5000 0
	movq	-56(%rbp), %rax	# cc_use, tmp301
	movq	(%rax), %rax	# *cc_use_40, D.29215
	movzwl	(%rax), %eax	# _51->code, D.29212
	movzwl	%ax, %eax	# D.29212, tmp302
	movl	%eax, -152(%rbp)	# tmp302, old_code
	.loc 1 5003 0
	movl	$0, -160(%rbp)	#, other_changed
	.loc 1 5004 0
	movq	-88(%rbp), %rax	# dest, tmp303
	movzbl	2(%rax), %eax	# dest_24->mode, D.29211
	movzbl	%al, %eax	# D.29211, tmp304
	movl	%eax, -148(%rbp)	# tmp304, compare_mode
	.loc 1 5006 0
	movq	-96(%rbp), %rax	# src, tmp305
	movzwl	(%rax), %eax	# src_1->code, D.29212
	cmpw	$74, %ax	#, D.29212
	jne	.L831	#,
	.loc 1 5007 0
	movq	-96(%rbp), %rax	# src, tmp306
	movq	8(%rax), %rax	# src_1->fld[0].rtx, op0.769
	movq	%rax, -128(%rbp)	# op0.769, op0
	movq	-96(%rbp), %rax	# src, tmp307
	movq	16(%rax), %rax	# src_1->fld[1].rtx, op1.770
	movq	%rax, -120(%rbp)	# op1.770, op1
	jmp	.L832	#
.L831:
	.loc 1 5009 0
	movq	-96(%rbp), %rax	# src, tmp308
	movq	%rax, -128(%rbp)	# tmp308, op0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, op1.771
	movq	%rax, -120(%rbp)	# op1.771, op1
.L832:
	.loc 1 5012 0
	leaq	-120(%rbp), %rdx	#, tmp309
	leaq	-128(%rbp), %rcx	#, tmp310
	movl	-152(%rbp), %eax	# old_code, tmp311
	movq	%rcx, %rsi	# tmp310,
	movl	%eax, %edi	# tmp311,
	call	simplify_comparison	#
	movl	%eax, -144(%rbp)	# tmp312, new_code
	.loc 1 5017 0
	movq	-120(%rbp), %rdx	# op1, op1.772
	movq	-128(%rbp), %rcx	# op0, op0.773
	movl	-144(%rbp), %eax	# new_code, tmp313
	movq	%rcx, %rsi	# op0.773,
	movl	%eax, %edi	# tmp313,
	call	ix86_cc_mode	#
	movl	%eax, -148(%rbp)	# tmp314, compare_mode
	.loc 1 5026 0
	movq	-88(%rbp), %rax	# dest, tmp315
	movzbl	2(%rax), %eax	# dest_24->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29218
	cmpl	-148(%rbp), %eax	# compare_mode, D.29218
	je	.L833	#,
.LBB58:
	.loc 1 5028 0
	movq	-88(%rbp), %rax	# dest, tmp316
	movl	8(%rax), %eax	# dest_24->fld[0].rtuint, tmp317
	movl	%eax, -140(%rbp)	# tmp317, regno
	.loc 1 5029 0
	movl	-140(%rbp), %edx	# regno, regno.774
	movl	-148(%rbp), %eax	# compare_mode, tmp318
	movl	%edx, %esi	# regno.774,
	movl	%eax, %edi	# tmp318,
	call	gen_rtx_REG	#
	movq	%rax, -48(%rbp)	# tmp319, new_dest
	.loc 1 5031 0
	cmpl	$52, -140(%rbp)	#, regno
	jbe	.L834	#,
	.loc 1 5032 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.775
	movl	-140(%rbp), %edx	# regno, tmp320
	addq	$4, %rdx	#, tmp321
	movq	(%rax,%rdx,8), %rax	# reg_n_info.775_70->data.reg, D.29219
	movl	12(%rax), %eax	# _71->sets, D.29216
	cmpl	$1, %eax	#, D.29216
	jne	.L833	#,
	.loc 1 5032 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# dest, tmp322
	movzbl	3(%rax), %eax	# *dest_24, D.29211
	andl	$8, %eax	#, D.29211
	testb	%al, %al	# D.29211
	jne	.L833	#,
.L834:
	.loc 1 5034 0 is_stmt 1
	cmpl	$52, -140(%rbp)	#, regno
	jbe	.L835	#,
	.loc 1 5035 0
	movq	cfun(%rip), %rax	# cfun, cfun.776
	movq	24(%rax), %rax	# cfun.776_75->emit, D.29220
	movq	80(%rax), %rax	# _76->x_regno_reg_rtx, D.29214
	movl	-140(%rbp), %edx	# regno, D.29221
	salq	$3, %rdx	#, D.29221
	addq	%rax, %rdx	# D.29214, D.29214
	movq	-48(%rbp), %rax	# new_dest, tmp323
	movq	%rax, %rsi	# tmp323,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
.L835:
	.loc 1 5037 0
	movq	-168(%rbp), %rax	# x, tmp324
	leaq	8(%rax), %rdx	#, D.29214
	movq	-48(%rbp), %rax	# new_dest, tmp325
	movq	%rax, %rsi	# tmp325,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
	.loc 1 5038 0
	movq	-56(%rbp), %rax	# cc_use, tmp326
	movq	(%rax), %rax	# *cc_use_40, D.29215
	leaq	8(%rax), %rdx	#, D.29214
	movq	-48(%rbp), %rax	# new_dest, tmp327
	movq	%rax, %rsi	# tmp327,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
	.loc 1 5039 0
	movl	$1, -160(%rbp)	#, other_changed
	.loc 1 5041 0
	movq	-48(%rbp), %rax	# new_dest, tmp328
	movq	%rax, -88(%rbp)	# tmp328, dest
.L833:
.LBE58:
	.loc 1 5048 0
	movl	-144(%rbp), %eax	# new_code, tmp329
	cmpl	-152(%rbp), %eax	# old_code, tmp329
	je	.L836	#,
.LBB59:
	.loc 1 5052 0
	movq	const_int_rtx+512(%rip), %rcx	# const_int_rtx, D.29215
	movq	-56(%rbp), %rax	# cc_use, tmp330
	movq	(%rax), %rax	# *cc_use_40, D.29215
	movzbl	2(%rax), %eax	# _87->mode, D.29211
	movzbl	%al, %esi	# D.29211, D.29222
	movq	-88(%rbp), %rdx	# dest, tmp331
	movl	-144(%rbp), %eax	# new_code, tmp332
	movl	%eax, %edi	# tmp332,
	call	gen_rtx_fmt_ee	#
	movq	%rax, %rdx	#, D.29215
	movq	-56(%rbp), %rax	# cc_use, tmp333
	movq	%rdx, %rsi	# D.29215,
	movq	%rax, %rdi	# tmp333,
	call	do_SUBST	#
	.loc 1 5061 0
	cmpl	$102, -152(%rbp)	#, old_code
	jne	.L837	#,
	.loc 1 5061 0 is_stmt 0 discriminator 1
	cmpl	$103, -144(%rbp)	#, new_code
	je	.L838	#,
.L837:
	.loc 1 5062 0 is_stmt 1
	cmpl	$103, -152(%rbp)	#, old_code
	jne	.L839	#,
	.loc 1 5062 0 is_stmt 0 discriminator 1
	cmpl	$102, -144(%rbp)	#, new_code
	jne	.L839	#,
.L838:
	.loc 1 5063 0 is_stmt 1
	cmpl	$0, -160(%rbp)	#, other_changed
	jne	.L839	#,
	.loc 1 5063 0 is_stmt 0 discriminator 1
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29215
	movq	-120(%rbp), %rax	# op1, op1.777
	cmpq	%rax, %rdx	# op1.777, D.29215
	jne	.L839	#,
	.loc 1 5064 0 is_stmt 1
	movq	-128(%rbp), %rax	# op0, op0.778
	movzbl	2(%rax), %eax	# op0.778_93->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29216
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29212
	cmpw	$64, %ax	#, D.29212
	ja	.L839	#,
	.loc 1 5065 0
	movq	-128(%rbp), %rax	# op0, op0.779
	movzbl	2(%rax), %eax	# op0.779_97->mode, D.29211
	movzbl	%al, %edx	# D.29211, D.29222
	movq	-128(%rbp), %rax	# op0, op0.780
	movl	%edx, %esi	# D.29222,
	movq	%rax, %rdi	# op0.780,
	call	nonzero_bits	#
	movq	%rax, -40(%rbp)	# tmp335, mask
	movq	-40(%rbp), %rax	# mask, tmp336
	movq	%rax, %rdi	# tmp336,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29216
	js	.L839	#,
.LBB60:
	.loc 1 5067 0
	movq	-136(%rbp), %rax	# other_insn, other_insn.781
	movq	32(%rax), %rax	# other_insn.781_103->fld[3].rtx, pat.782
	movq	%rax, -112(%rbp)	# pat.782, pat
	movq	$0, -104(%rbp)	#, note
	.loc 1 5069 0
	movq	-136(%rbp), %rcx	# other_insn, other_insn.783
	leaq	-104(%rbp), %rdx	#, tmp337
	leaq	-112(%rbp), %rax	#, tmp338
	movq	%rcx, %rsi	# other_insn.783,
	movq	%rax, %rdi	# tmp338,
	call	recog_for_combine	#
	testl	%eax, %eax	# D.29216
	jns	.L839	#,
	.loc 1 5070 0
	movq	-112(%rbp), %rax	# pat, pat.784
	movq	%rax, %rdi	# pat.784,
	call	check_asm_operands	#
	testl	%eax, %eax	# D.29216
	jne	.L839	#,
	.loc 1 5072 0
	movq	-56(%rbp), %rax	# cc_use, tmp339
	movq	(%rax), %rax	# *cc_use_40, D.29215
	movl	-152(%rbp), %edx	# old_code, tmp340
	movw	%dx, (%rax)	# D.29212, _109->code
	.loc 1 5073 0
	movq	$0, -136(%rbp)	#, other_insn
	.loc 1 5075 0
	movq	-40(%rbp), %rax	# mask, mask.785
	movq	%rax, %rsi	# mask.785,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29215
	movq	-128(%rbp), %rdx	# op0, op0.786
	movq	-128(%rbp), %rax	# op0, op0.787
	movzbl	2(%rax), %eax	# op0.787_114->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29222
	movl	%eax, %esi	# D.29222,
	movl	$85, %edi	#,
	call	gen_binary	#
	movq	%rax, -128(%rbp)	# op0.788, op0
.L839:
.LBE60:
	.loc 1 5079 0
	movl	$1, -160(%rbp)	#, other_changed
.L836:
.LBE59:
	.loc 1 5082 0
	cmpl	$0, -160(%rbp)	#, other_changed
	je	.L841	#,
	.loc 1 5083 0
	movq	-136(%rbp), %rax	# other_insn, other_insn.789
	movq	%rax, undobuf+16(%rip)	# other_insn.789, undobuf.other_insn
.L841:
	.loc 1 5098 0
	movq	-96(%rbp), %rax	# src, tmp341
	movzwl	(%rax), %eax	# src_1->code, D.29212
	cmpw	$74, %ax	#, D.29212
	jne	.L842	#,
	.loc 1 5098 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# src, tmp342
	movzbl	2(%rax), %eax	# src_1->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29218
	cmpl	-148(%rbp), %eax	# compare_mode, D.29218
	je	.L843	#,
.L842:
	.loc 1 5100 0 is_stmt 1
	movq	-120(%rbp), %rcx	# op1, op1.790
	movq	-128(%rbp), %rdx	# op0, op0.791
	movl	-148(%rbp), %eax	# compare_mode, tmp343
	movl	%eax, %esi	# tmp343,
	movl	$74, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-168(%rbp), %rdx	# x, tmp344
	addq	$16, %rdx	#, D.29214
	movq	%rax, %rsi	# D.29215,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
	.loc 1 5101 0
	movq	-168(%rbp), %rax	# x, tmp345
	movq	16(%rax), %rax	# x_22(D)->fld[1].rtx, tmp346
	movq	%rax, -96(%rbp)	# tmp346, src
.LBE57:
	.loc 1 4999 0
	jmp	.L845	#
.L843:
.LBB61:
	.loc 1 5106 0
	movq	-128(%rbp), %rax	# op0, op0.792
	movq	-96(%rbp), %rdx	# src, tmp347
	addq	$8, %rdx	#, D.29214
	movq	%rax, %rsi	# op0.792,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
	.loc 1 5107 0
	movq	-120(%rbp), %rax	# op1, op1.793
	movq	-96(%rbp), %rdx	# src, tmp348
	addq	$16, %rdx	#, D.29214
	movq	%rax, %rsi	# op1.793,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
.LBE61:
	.loc 1 4999 0
	jmp	.L845	#
.L829:
	.loc 1 5114 0
	movq	-96(%rbp), %rax	# src, tmp349
	movl	$47, %esi	#,
	movq	%rax, %rdi	# tmp349,
	call	make_compound_operation	#
	movq	%rax, -96(%rbp)	# tmp350, src
	.loc 1 5115 0
	movq	-168(%rbp), %rax	# x, tmp351
	leaq	16(%rax), %rdx	#, D.29214
	movq	-96(%rbp), %rax	# src, tmp352
	movq	%rax, %rsi	# tmp352,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
.L845:
	.loc 1 5130 0
	movq	-96(%rbp), %rax	# src, tmp353
	movzwl	(%rax), %eax	# src_3->code, D.29212
	cmpw	$63, %ax	#, D.29212
	jne	.L846	#,
	.loc 1 5130 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# src, tmp354
	movq	%rax, %rdi	# tmp354,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29216
	je	.L846	#,
	.loc 1 5131 0 is_stmt 1
	movq	-96(%rbp), %rax	# src, tmp355
	movq	8(%rax), %rax	# src_3->fld[0].rtx, D.29215
	movzwl	(%rax), %eax	# _136->code, D.29212
	movzwl	%ax, %eax	# D.29212, D.29216
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29217
	cmpb	$111, %al	#, D.29217
	je	.L846	#,
	.loc 1 5132 0
	movq	-96(%rbp), %rax	# src, tmp357
	movzbl	2(%rax), %eax	# src_3->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29216
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29211
	movzbl	%al, %edx	# D.29211, D.29216
	movl	target_flags(%rip), %eax	# target_flags, target_flags.795
	andl	$33554432, %eax	#, D.29216
	testl	%eax, %eax	# D.29216
	je	.L847	#,
	.loc 1 5132 0 is_stmt 0 discriminator 1
	movl	$7, %eax	#, iftmp.794
	jmp	.L848	#
.L847:
	.loc 1 5132 0 discriminator 2
	movl	$3, %eax	#, iftmp.794
.L848:
	.loc 1 5132 0 discriminator 3
	addl	%edx, %eax	# D.29216, D.29216
	.loc 1 5133 0 is_stmt 1 discriminator 3
	movl	target_flags(%rip), %edx	# target_flags, target_flags.797
	andl	$33554432, %edx	#, D.29216
	testl	%edx, %edx	# D.29216
	je	.L849	#,
	.loc 1 5133 0 is_stmt 0 discriminator 1
	movl	$8, %ebx	#, iftmp.796
	jmp	.L850	#
.L849:
	.loc 1 5133 0 discriminator 2
	movl	$4, %ebx	#, iftmp.796
.L850:
	.loc 1 5133 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.796
	movl	%eax, %ecx	# tmp359, D.29216
	.loc 1 5134 0 is_stmt 1 discriminator 3
	movq	-96(%rbp), %rax	# src, tmp361
	movq	8(%rax), %rax	# src_3->fld[0].rtx, D.29215
	movzbl	2(%rax), %eax	# _154->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29216
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29211
	.loc 1 5135 0 discriminator 3
	movzbl	%al, %edx	# D.29211, D.29216
	movl	target_flags(%rip), %eax	# target_flags, target_flags.799
	andl	$33554432, %eax	#, D.29216
	testl	%eax, %eax	# D.29216
	je	.L851	#,
	.loc 1 5135 0 is_stmt 0 discriminator 1
	movl	$7, %eax	#, iftmp.798
	jmp	.L852	#
.L851:
	.loc 1 5135 0 discriminator 2
	movl	$3, %eax	#, iftmp.798
.L852:
	.loc 1 5135 0 discriminator 3
	addl	%edx, %eax	# D.29216, D.29216
	movl	target_flags(%rip), %edx	# target_flags, target_flags.801
	andl	$33554432, %edx	#, D.29216
	testl	%edx, %edx	# D.29216
	je	.L853	#,
	.loc 1 5135 0 discriminator 1
	movl	$8, %ebx	#, iftmp.800
	jmp	.L854	#
.L853:
	.loc 1 5135 0 discriminator 2
	movl	$4, %ebx	#, iftmp.800
.L854:
	.loc 1 5135 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.800
	.loc 1 5132 0 is_stmt 1 discriminator 3
	cmpl	%eax, %ecx	# D.29216, D.29216
	jne	.L846	#,
	.loc 1 5137 0
	movq	-96(%rbp), %rax	# src, tmp365
	movzbl	2(%rax), %eax	# src_3->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29216
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29211
	.loc 1 5138 0
	movq	-96(%rbp), %rax	# src, tmp367
	movq	8(%rax), %rax	# src_3->fld[0].rtx, D.29215
	movzbl	2(%rax), %eax	# _172->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29216
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29211
	.loc 1 5137 0
	cmpb	%al, %dl	# D.29211, D.29211
	jae	.L846	#,
	.loc 1 5148 0
	movq	-88(%rbp), %rax	# dest, tmp369
	movzwl	(%rax), %eax	# dest_7->code, D.29212
	cmpw	$61, %ax	#, D.29212
	je	.L855	#,
	.loc 1 5149 0
	movq	-88(%rbp), %rax	# dest, tmp370
	movzwl	(%rax), %eax	# dest_7->code, D.29212
	cmpw	$63, %ax	#, D.29212
	jne	.L846	#,
	.loc 1 5150 0
	movq	-88(%rbp), %rax	# dest, tmp371
	movq	8(%rax), %rax	# dest_7->fld[0].rtx, D.29215
	movzwl	(%rax), %eax	# _178->code, D.29212
	cmpw	$61, %ax	#, D.29212
	jne	.L846	#,
.L855:
	.loc 1 5152 0
	movq	-96(%rbp), %rax	# src, tmp372
	movq	8(%rax), %rax	# src_3->fld[0].rtx, D.29215
	movzbl	2(%rax), %eax	# _180->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29222
	movq	-88(%rbp), %rdx	# dest, tmp373
	movq	%rdx, %rsi	# tmp373,
	movl	%eax, %edi	# D.29222,
	call	gen_lowpart_for_combine	#
	movq	-168(%rbp), %rdx	# x, tmp374
	addq	$8, %rdx	#, D.29214
	movq	%rax, %rsi	# D.29215,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
	.loc 1 5155 0
	movq	-96(%rbp), %rax	# src, tmp375
	movq	8(%rax), %rax	# src_3->fld[0].rtx, D.29215
	movq	-168(%rbp), %rdx	# x, tmp376
	addq	$16, %rdx	#, D.29214
	movq	%rax, %rsi	# D.29215,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
	.loc 1 5157 0
	movq	-168(%rbp), %rax	# x, tmp377
	movq	16(%rax), %rax	# x_22(D)->fld[1].rtx, tmp378
	movq	%rax, -96(%rbp)	# tmp378, src
	movq	-168(%rbp), %rax	# x, tmp379
	movq	8(%rax), %rax	# x_22(D)->fld[0].rtx, tmp380
	movq	%rax, -88(%rbp)	# tmp380, dest
.L846:
	.loc 1 5186 0
	movq	-88(%rbp), %rax	# dest, tmp381
	movzwl	(%rax), %eax	# dest_8->code, D.29212
	cmpw	$59, %ax	#, D.29212
	je	.L856	#,
	.loc 1 5187 0
	movq	-96(%rbp), %rax	# src, tmp382
	movzwl	(%rax), %eax	# src_4->code, D.29212
	cmpw	$72, %ax	#, D.29212
	jne	.L856	#,
	.loc 1 5188 0
	movq	-96(%rbp), %rax	# src, tmp383
	movzbl	2(%rax), %eax	# src_4->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29216
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29213
	cmpl	$1, %eax	#, D.29213
	jne	.L856	#,
	.loc 1 5189 0
	movq	-96(%rbp), %rax	# src, tmp385
	movq	8(%rax), %rax	# src_4->fld[0].rtx, D.29215
	movzwl	(%rax), %eax	# _194->code, D.29212
	cmpw	$103, %ax	#, D.29212
	je	.L857	#,
	.loc 1 5189 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# src, tmp386
	movq	8(%rax), %rax	# src_4->fld[0].rtx, D.29215
	movzwl	(%rax), %eax	# _196->code, D.29212
	cmpw	$102, %ax	#, D.29212
	jne	.L856	#,
.L857:
	.loc 1 5190 0 is_stmt 1
	movq	-96(%rbp), %rax	# src, tmp387
	movq	8(%rax), %rax	# src_4->fld[0].rtx, D.29215
	movq	16(%rax), %rdx	# _198->fld[1].rtx, D.29215
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29215
	cmpq	%rax, %rdx	# D.29215, D.29215
	jne	.L856	#,
	.loc 1 5191 0
	movq	-96(%rbp), %rax	# src, tmp388
	movzbl	2(%rax), %edx	# src_4->mode, D.29211
	movq	-96(%rbp), %rax	# src, tmp389
	movq	8(%rax), %rax	# src_4->fld[0].rtx, D.29215
	movq	8(%rax), %rax	# _202->fld[0].rtx, D.29215
	movzbl	2(%rax), %eax	# _203->mode, D.29211
	cmpb	%al, %dl	# D.29211, D.29211
	jne	.L856	#,
	.loc 1 5193 0
	movq	-96(%rbp), %rax	# src, tmp390
	movzbl	2(%rax), %eax	# src_4->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29222
	movl	%eax, %edi	# D.29222,
	call	can_conditionally_move_p	#
	testl	%eax, %eax	# D.29216
	jne	.L856	#,
	.loc 1 5196 0
	movq	-96(%rbp), %rax	# src, tmp391
	movq	8(%rax), %rax	# src_4->fld[0].rtx, D.29215
	movq	8(%rax), %rax	# _208->fld[0].rtx, D.29215
	movzbl	2(%rax), %eax	# _209->mode, D.29211
	.loc 1 5195 0
	movzbl	%al, %edx	# D.29211, D.29222
	movq	-96(%rbp), %rax	# src, tmp392
	movq	8(%rax), %rax	# src_4->fld[0].rtx, D.29215
	movq	8(%rax), %rax	# _212->fld[0].rtx, D.29215
	movl	%edx, %esi	# D.29222,
	movq	%rax, %rdi	# D.29215,
	call	num_sign_bit_copies	#
	.loc 1 5197 0
	movq	-96(%rbp), %rdx	# src, tmp393
	movq	8(%rdx), %rdx	# src_4->fld[0].rtx, D.29215
	movq	8(%rdx), %rdx	# _215->fld[0].rtx, D.29215
	movzbl	2(%rdx), %edx	# _216->mode, D.29211
	movzbl	%dl, %edx	# D.29211, D.29216
	movslq	%edx, %rdx	# D.29216, tmp394
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29212
	movzwl	%dx, %edx	# D.29212, D.29218
	.loc 1 5195 0
	cmpl	%edx, %eax	# D.29218, D.29218
	jne	.L856	#,
	.loc 1 5198 0
	movq	-96(%rbp), %rax	# src, tmp395
	movq	%rax, %rdi	# tmp395,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29216
	jne	.L856	#,
.LBB62:
	.loc 1 5200 0
	movq	-96(%rbp), %rax	# src, tmp396
	movq	8(%rax), %rax	# src_4->fld[0].rtx, D.29215
	movzwl	(%rax), %eax	# _222->code, D.29212
	.loc 1 5201 0
	cmpw	$102, %ax	#, D.29212
	jne	.L858	#,
	.loc 1 5201 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# src, tmp397
	movq	16(%rax), %rax	# src_4->fld[1].rtx, iftmp.802
	jmp	.L859	#
.L858:
	.loc 1 5201 0 discriminator 2
	movq	-96(%rbp), %rax	# src, tmp398
	movq	24(%rax), %rax	# src_4->fld[2].rtx, iftmp.802
.L859:
	.loc 1 5200 0 is_stmt 1
	movq	%rax, -80(%rbp)	# iftmp.802, true_rtx
	.loc 1 5202 0
	movq	-96(%rbp), %rax	# src, tmp399
	movq	8(%rax), %rax	# src_4->fld[0].rtx, D.29215
	movzwl	(%rax), %eax	# _227->code, D.29212
	.loc 1 5203 0
	cmpw	$102, %ax	#, D.29212
	jne	.L860	#,
	.loc 1 5203 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# src, tmp400
	movq	24(%rax), %rax	# src_4->fld[2].rtx, iftmp.803
	jmp	.L861	#
.L860:
	.loc 1 5203 0 discriminator 2
	movq	-96(%rbp), %rax	# src, tmp401
	movq	16(%rax), %rax	# src_4->fld[1].rtx, iftmp.803
.L861:
	.loc 1 5202 0 is_stmt 1
	movq	%rax, -72(%rbp)	# iftmp.803, false_rtx
	.loc 1 5204 0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp402
	movq	%rax, -64(%rbp)	# tmp402, term1
	.loc 1 5206 0
	movq	-80(%rbp), %rax	# true_rtx, tmp403
	movzwl	(%rax), %eax	# true_rtx_226->code, D.29212
	cmpw	$84, %ax	#, D.29212
	jne	.L862	#,
	.loc 1 5207 0
	movq	-80(%rbp), %rax	# true_rtx, tmp404
	movq	8(%rax), %rax	# true_rtx_226->fld[0].rtx, D.29215
	movq	-72(%rbp), %rdx	# false_rtx, tmp405
	movq	%rdx, %rsi	# tmp405,
	movq	%rax, %rdi	# D.29215,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29216
	je	.L862	#,
	.loc 1 5208 0
	movq	-72(%rbp), %rax	# false_rtx, tmp406
	movq	%rax, -64(%rbp)	# tmp406, term1
	movq	-80(%rbp), %rax	# true_rtx, tmp407
	movq	16(%rax), %rax	# true_rtx_226->fld[1].rtx, tmp408
	movq	%rax, -80(%rbp)	# tmp408, true_rtx
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp409
	movq	%rax, -72(%rbp)	# tmp409, false_rtx
	jmp	.L863	#
.L862:
	.loc 1 5209 0
	movq	-80(%rbp), %rax	# true_rtx, tmp410
	movzwl	(%rax), %eax	# true_rtx_226->code, D.29212
	cmpw	$84, %ax	#, D.29212
	jne	.L864	#,
	.loc 1 5210 0
	movq	-80(%rbp), %rax	# true_rtx, tmp411
	movq	16(%rax), %rax	# true_rtx_226->fld[1].rtx, D.29215
	movq	-72(%rbp), %rdx	# false_rtx, tmp412
	movq	%rdx, %rsi	# tmp412,
	movq	%rax, %rdi	# D.29215,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29216
	je	.L864	#,
	.loc 1 5211 0
	movq	-72(%rbp), %rax	# false_rtx, tmp413
	movq	%rax, -64(%rbp)	# tmp413, term1
	movq	-80(%rbp), %rax	# true_rtx, tmp414
	movq	8(%rax), %rax	# true_rtx_226->fld[0].rtx, tmp415
	movq	%rax, -80(%rbp)	# tmp415, true_rtx
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp416
	movq	%rax, -72(%rbp)	# tmp416, false_rtx
	jmp	.L863	#
.L864:
	.loc 1 5212 0
	movq	-72(%rbp), %rax	# false_rtx, tmp417
	movzwl	(%rax), %eax	# false_rtx_231->code, D.29212
	cmpw	$84, %ax	#, D.29212
	jne	.L865	#,
	.loc 1 5213 0
	movq	-72(%rbp), %rax	# false_rtx, tmp418
	movq	8(%rax), %rax	# false_rtx_231->fld[0].rtx, D.29215
	movq	-80(%rbp), %rdx	# true_rtx, tmp419
	movq	%rdx, %rsi	# tmp419,
	movq	%rax, %rdi	# D.29215,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29216
	je	.L865	#,
	.loc 1 5214 0
	movq	-80(%rbp), %rax	# true_rtx, tmp420
	movq	%rax, -64(%rbp)	# tmp420, term1
	movq	-72(%rbp), %rax	# false_rtx, tmp421
	movq	16(%rax), %rax	# false_rtx_231->fld[1].rtx, tmp422
	movq	%rax, -72(%rbp)	# tmp422, false_rtx
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp423
	movq	%rax, -80(%rbp)	# tmp423, true_rtx
	jmp	.L863	#
.L865:
	.loc 1 5215 0
	movq	-72(%rbp), %rax	# false_rtx, tmp424
	movzwl	(%rax), %eax	# false_rtx_231->code, D.29212
	cmpw	$84, %ax	#, D.29212
	jne	.L863	#,
	.loc 1 5216 0
	movq	-72(%rbp), %rax	# false_rtx, tmp425
	movq	16(%rax), %rax	# false_rtx_231->fld[1].rtx, D.29215
	movq	-80(%rbp), %rdx	# true_rtx, tmp426
	movq	%rdx, %rsi	# tmp426,
	movq	%rax, %rdi	# D.29215,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29216
	je	.L863	#,
	.loc 1 5217 0
	movq	-80(%rbp), %rax	# true_rtx, tmp427
	movq	%rax, -64(%rbp)	# tmp427, term1
	movq	-72(%rbp), %rax	# false_rtx, tmp428
	movq	8(%rax), %rax	# false_rtx_231->fld[0].rtx, tmp429
	movq	%rax, -72(%rbp)	# tmp429, false_rtx
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp430
	movq	%rax, -80(%rbp)	# tmp430, true_rtx
.L863:
	.loc 1 5220 0
	movq	-96(%rbp), %rax	# src, tmp431
	movq	8(%rax), %rax	# src_4->fld[0].rtx, D.29215
	.loc 1 5219 0
	movq	8(%rax), %rdx	# _257->fld[0].rtx, D.29215
	movq	-96(%rbp), %rax	# src, tmp432
	movzbl	2(%rax), %eax	# src_4->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29222
	movq	-80(%rbp), %rcx	# true_rtx, tmp433
	movl	%eax, %esi	# D.29222,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, -32(%rbp)	# tmp434, term2
	.loc 1 5224 0
	movq	-96(%rbp), %rax	# src, tmp435
	movzbl	2(%rax), %eax	# src_4->mode, D.29211
	.loc 1 5221 0
	movzbl	%al, %ecx	# D.29211, D.29222
	.loc 1 5223 0
	movq	-96(%rbp), %rax	# src, tmp436
	movq	8(%rax), %rax	# src_4->fld[0].rtx, D.29215
	.loc 1 5221 0
	movq	8(%rax), %rdx	# _264->fld[0].rtx, D.29215
	.loc 1 5222 0
	movq	-96(%rbp), %rax	# src, tmp437
	movzbl	2(%rax), %eax	# src_4->mode, D.29211
	.loc 1 5221 0
	movzbl	%al, %eax	# D.29211, D.29222
	movl	%eax, %esi	# D.29222,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, %rdx	#, D.29215
	movq	-96(%rbp), %rax	# src, tmp438
	movzbl	2(%rax), %eax	# src_4->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29222
	movq	-72(%rbp), %rcx	# false_rtx, tmp439
	movl	%eax, %esi	# D.29222,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, -24(%rbp)	# tmp440, term3
	.loc 1 5227 0
	movq	-96(%rbp), %rax	# src, tmp441
	movzbl	2(%rax), %eax	# src_4->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29222
	movq	-32(%rbp), %rcx	# term2, tmp442
	movq	-64(%rbp), %rdx	# term1, tmp443
	movl	%eax, %esi	# D.29222,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29215
	movq	-96(%rbp), %rax	# src, tmp444
	movzbl	2(%rax), %eax	# src_4->mode, D.29211
	movzbl	%al, %eax	# D.29211, D.29222
	movq	-24(%rbp), %rcx	# term3, tmp445
	movl	%eax, %esi	# D.29222,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	-168(%rbp), %rdx	# x, tmp446
	addq	$16, %rdx	#, D.29214
	movq	%rax, %rsi	# D.29215,
	movq	%rdx, %rdi	# D.29214,
	call	do_SUBST	#
	.loc 1 5232 0
	movq	-168(%rbp), %rax	# x, tmp447
	movq	16(%rax), %rax	# x_22(D)->fld[1].rtx, tmp448
	movq	%rax, -96(%rbp)	# tmp448, src
.L856:
.LBE62:
	.loc 1 5237 0
	movq	-96(%rbp), %rax	# src, tmp449
	movzwl	(%rax), %eax	# src_5->code, D.29212
	cmpw	$49, %ax	#, D.29212
	jne	.L866	#,
	.loc 1 5237 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# src, tmp450
	movq	8(%rax), %rdx	# src_5->fld[0].rtx, D.29215
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29215
	cmpq	%rax, %rdx	# D.29215, D.29215
	jne	.L866	#,
	.loc 1 5238 0 is_stmt 1
	movq	-96(%rbp), %rax	# src, D.29210
	jmp	.L868	#
.L866:
	.loc 1 5239 0
	movq	-88(%rbp), %rax	# dest, tmp451
	movzwl	(%rax), %eax	# dest_8->code, D.29212
	cmpw	$49, %ax	#, D.29212
	jne	.L867	#,
	.loc 1 5239 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# dest, tmp452
	movq	8(%rax), %rdx	# dest_8->fld[0].rtx, D.29215
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29215
	cmpq	%rax, %rdx	# D.29215, D.29215
	jne	.L867	#,
	.loc 1 5240 0 is_stmt 1
	movq	-88(%rbp), %rax	# dest, D.29210
	jmp	.L868	#
.L867:
	.loc 1 5243 0
	movq	-168(%rbp), %rax	# x, tmp453
	movq	%rax, %rdi	# tmp453,
	call	make_field_assignment	#
.L868:
	.loc 1 5244 0
	addq	$168, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE20:
	.size	simplify_set, .-simplify_set
	.type	simplify_logical, @function
simplify_logical:
.LFB21:
	.loc 1 5253 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -72(%rbp)	# x, x
	movl	%esi, -76(%rbp)	# last, last
	.loc 1 5254 0
	movq	-72(%rbp), %rax	# x, tmp309
	movzbl	2(%rax), %eax	# x_18(D)->mode, D.29224
	movzbl	%al, %eax	# D.29224, tmp310
	movl	%eax, -56(%rbp)	# tmp310, mode
	.loc 1 5255 0
	movq	-72(%rbp), %rax	# x, tmp311
	movq	8(%rax), %rax	# x_18(D)->fld[0].rtx, tmp312
	movq	%rax, -48(%rbp)	# tmp312, op0
	.loc 1 5256 0
	movq	-72(%rbp), %rax	# x, tmp313
	movq	16(%rax), %rax	# x_18(D)->fld[1].rtx, tmp314
	movq	%rax, -40(%rbp)	# tmp314, op1
	.loc 1 5259 0
	movq	-72(%rbp), %rax	# x, tmp315
	movzwl	(%rax), %eax	# x_18(D)->code, D.29225
	movzwl	%ax, %eax	# D.29225, D.29226
	cmpl	$84, %eax	#, D.29226
	je	.L871	#,
	cmpl	$85, %eax	#, D.29226
	je	.L872	#,
	cmpl	$83, %eax	#, D.29226
	jne	.L914	#,
	.loc 1 5264 0
	movq	-48(%rbp), %rax	# op0, tmp316
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$85, %ax	#, D.29225
	jne	.L874	#,
	.loc 1 5265 0
	movq	-48(%rbp), %rax	# op0, tmp317
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movq	-40(%rbp), %rdx	# op1, tmp318
	movq	%rdx, %rsi	# tmp318,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	je	.L874	#,
	.loc 1 5266 0
	movq	-40(%rbp), %rax	# op1, tmp319
	movq	%rax, %rdi	# tmp319,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29228
	jne	.L874	#,
	.loc 1 5267 0
	movq	-48(%rbp), %rax	# op0, tmp320
	movq	16(%rax), %rdx	# op0_21->fld[1].rtx, D.29227
	movl	-56(%rbp), %ecx	# mode, tmp321
	movl	-56(%rbp), %eax	# mode, tmp322
	movl	%eax, %esi	# tmp322,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, %rdx	#, D.29227
	movq	-40(%rbp), %rcx	# op1, tmp323
	movl	-56(%rbp), %eax	# mode, tmp324
	movl	%eax, %esi	# tmp324,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, -72(%rbp)	# tmp325, x
.L874:
	.loc 1 5271 0
	movq	-48(%rbp), %rax	# op0, tmp326
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$85, %ax	#, D.29225
	jne	.L875	#,
	.loc 1 5272 0
	movq	-48(%rbp), %rax	# op0, tmp327
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29227
	movq	-40(%rbp), %rdx	# op1, tmp328
	movq	%rdx, %rsi	# tmp328,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	je	.L875	#,
	.loc 1 5273 0
	movq	-40(%rbp), %rax	# op1, tmp329
	movq	%rax, %rdi	# tmp329,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29228
	jne	.L875	#,
	.loc 1 5274 0
	movq	-48(%rbp), %rax	# op0, tmp330
	movq	8(%rax), %rdx	# op0_21->fld[0].rtx, D.29227
	movl	-56(%rbp), %ecx	# mode, tmp331
	movl	-56(%rbp), %eax	# mode, tmp332
	movl	%eax, %esi	# tmp332,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, %rdx	#, D.29227
	movq	-40(%rbp), %rcx	# op1, tmp333
	movl	-56(%rbp), %eax	# mode, tmp334
	movl	%eax, %esi	# tmp334,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, -72(%rbp)	# tmp335, x
.L875:
	.loc 1 5279 0
	movq	-48(%rbp), %rax	# op0, tmp336
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$86, %ax	#, D.29225
	jne	.L876	#,
	.loc 1 5280 0
	movq	-48(%rbp), %rax	# op0, tmp337
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movzwl	(%rax), %eax	# _40->code, D.29225
	cmpw	$85, %ax	#, D.29225
	jne	.L876	#,
	.loc 1 5281 0
	movq	-48(%rbp), %rax	# op0, tmp338
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movq	8(%rax), %rax	# _42->fld[0].rtx, D.29227
	movq	-40(%rbp), %rdx	# op1, tmp339
	movq	%rdx, %rsi	# tmp339,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	je	.L876	#,
	.loc 1 5282 0
	movq	-40(%rbp), %rax	# op1, tmp340
	movq	%rax, %rdi	# tmp340,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29228
	jne	.L876	#,
	.loc 1 5283 0
	movq	-48(%rbp), %rax	# op0, tmp341
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movq	16(%rax), %rdx	# _46->fld[1].rtx, D.29227
	movq	-40(%rbp), %rcx	# op1, tmp342
	movl	-56(%rbp), %eax	# mode, tmp343
	movl	%eax, %esi	# tmp343,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, -72(%rbp)	# tmp344, x
.L876:
	.loc 1 5285 0
	movq	-48(%rbp), %rax	# op0, tmp345
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$86, %ax	#, D.29225
	jne	.L877	#,
	.loc 1 5286 0
	movq	-48(%rbp), %rax	# op0, tmp346
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movzwl	(%rax), %eax	# _50->code, D.29225
	cmpw	$85, %ax	#, D.29225
	jne	.L877	#,
	.loc 1 5287 0
	movq	-48(%rbp), %rax	# op0, tmp347
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movq	16(%rax), %rax	# _52->fld[1].rtx, D.29227
	movq	-40(%rbp), %rdx	# op1, tmp348
	movq	%rdx, %rsi	# tmp348,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	je	.L877	#,
	.loc 1 5288 0
	movq	-40(%rbp), %rax	# op1, tmp349
	movq	%rax, %rdi	# tmp349,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29228
	jne	.L877	#,
	.loc 1 5289 0
	movq	-48(%rbp), %rax	# op0, tmp350
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movq	8(%rax), %rdx	# _56->fld[0].rtx, D.29227
	movq	-40(%rbp), %rcx	# op1, tmp351
	movl	-56(%rbp), %eax	# mode, tmp352
	movl	%eax, %esi	# tmp352,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, -72(%rbp)	# tmp353, x
.L877:
	.loc 1 5294 0
	movq	-40(%rbp), %rax	# op1, tmp354
	movzwl	(%rax), %eax	# op1_22->code, D.29225
	cmpw	$54, %ax	#, D.29225
	jne	.L878	#,
	.loc 1 5295 0
	movl	-56(%rbp), %eax	# mode, mode.804
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29225
	cmpw	$64, %ax	#, D.29225
	jbe	.L879	#,
	.loc 1 5296 0
	movq	-40(%rbp), %rax	# op1, tmp356
	movq	8(%rax), %rax	# op1_22->fld[0].rtwint, D.29229
	testq	%rax, %rax	# D.29229
	jle	.L878	#,
.L879:
	.loc 1 5298 0
	movq	-40(%rbp), %rax	# op1, tmp357
	movq	8(%rax), %rax	# op1_22->fld[0].rtwint, D.29229
	movq	%rax, %rcx	# D.29229, D.29230
	movq	-48(%rbp), %rdx	# op0, tmp358
	movl	-56(%rbp), %esi	# mode, tmp359
	movq	-72(%rbp), %rax	# x, tmp360
	movq	%rax, %rdi	# tmp360,
	call	simplify_and_const_int	#
	movq	%rax, -72(%rbp)	# tmp361, x
	.loc 1 5303 0
	cmpl	$0, -76(%rbp)	#, last
	je	.L880	#,
	.loc 1 5304 0
	movq	-72(%rbp), %rax	# x, tmp362
	movzwl	(%rax), %eax	# x_65->code, D.29225
	cmpw	$84, %ax	#, D.29225
	jne	.L880	#,
	.loc 1 5304 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# op0, tmp363
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$83, %ax	#, D.29225
	jne	.L880	#,
	.loc 1 5305 0 is_stmt 1
	movq	-48(%rbp), %rax	# op0, tmp364
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29227
	movzwl	(%rax), %eax	# _69->code, D.29225
	cmpw	$54, %ax	#, D.29225
	jne	.L880	#,
	.loc 1 5306 0
	movq	-40(%rbp), %rax	# op1, tmp365
	movzwl	(%rax), %eax	# op1_22->code, D.29225
	cmpw	$54, %ax	#, D.29225
	jne	.L880	#,
	.loc 1 5309 0
	movq	-48(%rbp), %rax	# op0, tmp366
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29227
	movq	8(%rax), %rdx	# _72->fld[0].rtwint, D.29229
	movq	-40(%rbp), %rax	# op1, tmp367
	movq	8(%rax), %rax	# op1_22->fld[0].rtwint, D.29229
	notq	%rax	# D.29229
	.loc 1 5307 0
	andq	%rdx, %rax	# D.29229, D.29229
	movq	%rax, %rsi	# D.29229,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29227
	movq	-48(%rbp), %rax	# op0, tmp368
	movq	8(%rax), %rdx	# op0_21->fld[0].rtx, D.29227
	movl	-56(%rbp), %eax	# mode, tmp369
	movl	%eax, %esi	# tmp369,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29227
	movq	-40(%rbp), %rcx	# op1, tmp370
	movl	-56(%rbp), %eax	# mode, tmp371
	movl	%eax, %esi	# tmp371,
	movl	$84, %edi	#,
	call	gen_binary	#
	jmp	.L881	#
.L880:
	.loc 1 5312 0
	movq	-72(%rbp), %rax	# x, tmp372
	movzwl	(%rax), %eax	# x_65->code, D.29225
	cmpw	$83, %ax	#, D.29225
	je	.L882	#,
	.loc 1 5313 0
	movq	-72(%rbp), %rax	# x, D.29223
	jmp	.L881	#
.L882:
	.loc 1 5315 0
	movq	-72(%rbp), %rax	# x, tmp373
	movzwl	(%rax), %eax	# x_65->code, D.29225
	movzwl	%ax, %eax	# D.29225, D.29228
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29231
	cmpb	$99, %al	#, D.29231
	je	.L883	#,
	.loc 1 5316 0
	movq	-72(%rbp), %rax	# x, tmp375
	movzwl	(%rax), %eax	# x_65->code, D.29225
	movzwl	%ax, %eax	# D.29225, D.29228
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29231
	cmpb	$50, %al	#, D.29231
	jne	.L878	#,
.L883:
	.loc 1 5317 0
	movq	-72(%rbp), %rax	# x, tmp377
	movq	8(%rax), %rax	# x_65->fld[0].rtx, tmp378
	movq	%rax, -48(%rbp)	# tmp378, op0
	movq	-72(%rbp), %rax	# x, tmp379
	movq	16(%rax), %rax	# x_65->fld[1].rtx, tmp380
	movq	%rax, -40(%rbp)	# tmp380, op1
.L878:
	.loc 1 5321 0
	movq	-48(%rbp), %rax	# op0, tmp381
	movzwl	(%rax), %eax	# op0_10->code, D.29225
	cmpw	$84, %ax	#, D.29225
	jne	.L884	#,
	.loc 1 5322 0
	movq	-48(%rbp), %rax	# op0, tmp382
	movq	8(%rax), %rax	# op0_10->fld[0].rtx, D.29227
	movq	-40(%rbp), %rdx	# op1, tmp383
	movq	%rdx, %rsi	# tmp383,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	jne	.L885	#,
	.loc 1 5323 0
	movq	-48(%rbp), %rax	# op0, tmp384
	movq	16(%rax), %rax	# op0_10->fld[1].rtx, D.29227
	movq	-40(%rbp), %rdx	# op1, tmp385
	movq	%rdx, %rsi	# tmp385,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	je	.L884	#,
.L885:
	.loc 1 5324 0
	movq	-48(%rbp), %rax	# op0, tmp386
	movq	8(%rax), %rax	# op0_10->fld[0].rtx, D.29227
	movq	%rax, %rdi	# D.29227,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29228
	jne	.L884	#,
	.loc 1 5325 0
	movq	-48(%rbp), %rax	# op0, tmp387
	movq	16(%rax), %rax	# op0_10->fld[1].rtx, D.29227
	movq	%rax, %rdi	# D.29227,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29228
	jne	.L884	#,
	.loc 1 5326 0
	movq	-40(%rbp), %rax	# op1, D.29223
	jmp	.L881	#
.L884:
	.loc 1 5343 0
	movq	-48(%rbp), %rax	# op0, tmp388
	movzwl	(%rax), %eax	# op0_10->code, D.29225
	cmpw	$84, %ax	#, D.29225
	je	.L886	#,
	.loc 1 5343 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# op0, tmp389
	movzwl	(%rax), %eax	# op0_10->code, D.29225
	cmpw	$85, %ax	#, D.29225
	jne	.L887	#,
.L886:
	.loc 1 5346 0 is_stmt 1
	movq	-40(%rbp), %rax	# op1, tmp390
	movq	%rax, %rdi	# tmp390,
	call	copy_rtx	#
	movq	%rax, %rcx	#, D.29227
	movq	-48(%rbp), %rax	# op0, tmp391
	movq	16(%rax), %rdx	# op0_10->fld[1].rtx, D.29227
	movl	-56(%rbp), %eax	# mode, tmp392
	movl	%eax, %esi	# tmp392,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, %rbx	#, D.29227
	movq	-48(%rbp), %rax	# op0, tmp393
	movq	8(%rax), %rdx	# op0_10->fld[0].rtx, D.29227
	movq	-40(%rbp), %rcx	# op1, tmp394
	movl	-56(%rbp), %eax	# mode, tmp395
	movl	%eax, %esi	# tmp395,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29227
	movq	-48(%rbp), %rax	# op0, tmp396
	movzwl	(%rax), %eax	# op0_10->code, D.29225
	movzwl	%ax, %eax	# D.29225, D.29232
	movl	-56(%rbp), %esi	# mode, tmp397
	movq	%rbx, %rcx	# D.29227,
	movl	%eax, %edi	# D.29232,
	call	gen_binary	#
	.loc 1 5345 0
	movq	%rax, %rdi	# D.29227,
	call	apply_distributive_law	#
	movq	%rax, -72(%rbp)	# tmp398, x
	.loc 1 5350 0
	movq	-72(%rbp), %rax	# x, tmp399
	movzwl	(%rax), %eax	# x_111->code, D.29225
	cmpw	$83, %ax	#, D.29225
	je	.L887	#,
	.loc 1 5351 0
	movq	-72(%rbp), %rax	# x, D.29223
	jmp	.L881	#
.L887:
	.loc 1 5354 0
	movq	-40(%rbp), %rax	# op1, tmp400
	movzwl	(%rax), %eax	# op1_12->code, D.29225
	cmpw	$84, %ax	#, D.29225
	je	.L888	#,
	.loc 1 5354 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# op1, tmp401
	movzwl	(%rax), %eax	# op1_12->code, D.29225
	cmpw	$85, %ax	#, D.29225
	jne	.L889	#,
.L888:
	.loc 1 5356 0 is_stmt 1
	movq	-48(%rbp), %rax	# op0, tmp402
	movq	%rax, %rdi	# tmp402,
	call	copy_rtx	#
	movq	%rax, %rcx	#, D.29227
	movq	-40(%rbp), %rax	# op1, tmp403
	movq	16(%rax), %rdx	# op1_12->fld[1].rtx, D.29227
	movl	-56(%rbp), %eax	# mode, tmp404
	movl	%eax, %esi	# tmp404,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, %rbx	#, D.29227
	movq	-40(%rbp), %rax	# op1, tmp405
	movq	8(%rax), %rdx	# op1_12->fld[0].rtx, D.29227
	movq	-48(%rbp), %rcx	# op0, tmp406
	movl	-56(%rbp), %eax	# mode, tmp407
	movl	%eax, %esi	# tmp407,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29227
	movq	-40(%rbp), %rax	# op1, tmp408
	movzwl	(%rax), %eax	# op1_12->code, D.29225
	movzwl	%ax, %eax	# D.29225, D.29232
	movl	-56(%rbp), %esi	# mode, tmp409
	movq	%rbx, %rcx	# D.29227,
	movl	%eax, %edi	# D.29232,
	call	gen_binary	#
	.loc 1 5355 0
	movq	%rax, %rdi	# D.29227,
	call	apply_distributive_law	#
	jmp	.L881	#
.L889:
	.loc 1 5364 0
	movq	-48(%rbp), %rax	# op0, tmp410
	movzwl	(%rax), %eax	# op0_10->code, D.29225
	cmpw	$86, %ax	#, D.29225
	jne	.L890	#,
	.loc 1 5364 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# op1, tmp411
	movzwl	(%rax), %eax	# op1_12->code, D.29225
	cmpw	$85, %ax	#, D.29225
	jne	.L890	#,
	.loc 1 5366 0 is_stmt 1
	movq	-40(%rbp), %rax	# op1, tmp412
	movq	16(%rax), %rbx	# op1_12->fld[1].rtx, D.29227
	movq	-48(%rbp), %rax	# op0, tmp413
	movq	8(%rax), %rax	# op0_10->fld[0].rtx, D.29227
	movq	%rax, %rdi	# D.29227,
	call	copy_rtx	#
	movq	%rax, %rdx	#, D.29227
	movl	-56(%rbp), %eax	# mode, tmp414
	movq	%rbx, %rcx	# D.29227,
	movl	%eax, %esi	# tmp414,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, %rbx	#, D.29227
	movq	-40(%rbp), %rax	# op1, tmp415
	movq	8(%rax), %rcx	# op1_12->fld[0].rtx, D.29227
	movq	-48(%rbp), %rax	# op0, tmp416
	movq	8(%rax), %rdx	# op0_10->fld[0].rtx, D.29227
	movl	-56(%rbp), %eax	# mode, tmp417
	movl	%eax, %esi	# tmp417,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29227
	movl	-56(%rbp), %eax	# mode, tmp418
	movq	%rbx, %rcx	# D.29227,
	movl	%eax, %esi	# tmp418,
	movl	$85, %edi	#,
	call	gen_binary	#
	.loc 1 5365 0
	movq	%rax, %rdi	# D.29227,
	call	apply_distributive_law	#
	jmp	.L881	#
.L890:
	.loc 1 5371 0
	movq	-40(%rbp), %rax	# op1, tmp419
	movzwl	(%rax), %eax	# op1_12->code, D.29225
	cmpw	$86, %ax	#, D.29225
	jne	.L891	#,
	.loc 1 5371 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# op0, tmp420
	movzwl	(%rax), %eax	# op0_10->code, D.29225
	cmpw	$85, %ax	#, D.29225
	jne	.L891	#,
	.loc 1 5373 0 is_stmt 1
	movq	-48(%rbp), %rax	# op0, tmp421
	movq	16(%rax), %rbx	# op0_10->fld[1].rtx, D.29227
	movq	-40(%rbp), %rax	# op1, tmp422
	movq	8(%rax), %rax	# op1_12->fld[0].rtx, D.29227
	movq	%rax, %rdi	# D.29227,
	call	copy_rtx	#
	movq	%rax, %rdx	#, D.29227
	movl	-56(%rbp), %eax	# mode, tmp423
	movq	%rbx, %rcx	# D.29227,
	movl	%eax, %esi	# tmp423,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, %rbx	#, D.29227
	movq	-48(%rbp), %rax	# op0, tmp424
	movq	8(%rax), %rcx	# op0_10->fld[0].rtx, D.29227
	movq	-40(%rbp), %rax	# op1, tmp425
	movq	8(%rax), %rdx	# op1_12->fld[0].rtx, D.29227
	movl	-56(%rbp), %eax	# mode, tmp426
	movl	%eax, %esi	# tmp426,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29227
	movl	-56(%rbp), %eax	# mode, tmp427
	movq	%rbx, %rcx	# D.29227,
	movl	%eax, %esi	# tmp427,
	movl	$85, %edi	#,
	call	gen_binary	#
	.loc 1 5372 0
	movq	%rax, %rdi	# D.29227,
	call	apply_distributive_law	#
	jmp	.L881	#
.L891:
	.loc 1 5376 0
	jmp	.L892	#
.L871:
	.loc 1 5380 0
	movq	-40(%rbp), %rax	# op1, tmp428
	movzwl	(%rax), %eax	# op1_22->code, D.29225
	cmpw	$54, %ax	#, D.29225
	jne	.L893	#,
	.loc 1 5381 0
	movl	-56(%rbp), %eax	# mode, mode.805
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29225
	cmpw	$64, %ax	#, D.29225
	ja	.L893	#,
	.loc 1 5382 0
	movl	-56(%rbp), %edx	# mode, tmp430
	movq	-48(%rbp), %rax	# op0, tmp431
	movl	%edx, %esi	# tmp430,
	movq	%rax, %rdi	# tmp431,
	call	nonzero_bits	#
	movq	-40(%rbp), %rdx	# op1, tmp432
	movq	8(%rdx), %rdx	# op1_22->fld[0].rtwint, D.29229
	notq	%rdx	# D.29229
	andq	%rdx, %rax	# D.29230, D.29230
	testq	%rax, %rax	# D.29230
	jne	.L893	#,
	.loc 1 5383 0
	movq	-40(%rbp), %rax	# op1, D.29223
	jmp	.L881	#
.L893:
	.loc 1 5386 0
	movq	-48(%rbp), %rax	# op0, tmp433
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$83, %ax	#, D.29225
	jne	.L894	#,
	.loc 1 5387 0
	movq	-48(%rbp), %rax	# op0, tmp434
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movq	-40(%rbp), %rdx	# op1, tmp435
	movq	%rdx, %rsi	# tmp435,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	jne	.L895	#,
	.loc 1 5388 0
	movq	-48(%rbp), %rax	# op0, tmp436
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29227
	movq	-40(%rbp), %rdx	# op1, tmp437
	movq	%rdx, %rsi	# tmp437,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	je	.L894	#,
.L895:
	.loc 1 5389 0
	movq	-48(%rbp), %rax	# op0, tmp438
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movq	%rax, %rdi	# D.29227,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29228
	jne	.L894	#,
	.loc 1 5390 0
	movq	-48(%rbp), %rax	# op0, tmp439
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29227
	movq	%rax, %rdi	# D.29227,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29228
	jne	.L894	#,
	.loc 1 5391 0
	movq	-40(%rbp), %rax	# op1, D.29223
	jmp	.L881	#
.L894:
	.loc 1 5396 0
	movq	-48(%rbp), %rax	# op0, tmp440
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$83, %ax	#, D.29225
	jne	.L896	#,
	.loc 1 5399 0
	movq	-40(%rbp), %rax	# op1, tmp441
	movq	%rax, %rdi	# tmp441,
	call	copy_rtx	#
	movq	%rax, %rcx	#, D.29227
	movq	-48(%rbp), %rax	# op0, tmp442
	movq	16(%rax), %rdx	# op0_21->fld[1].rtx, D.29227
	movl	-56(%rbp), %eax	# mode, tmp443
	movl	%eax, %esi	# tmp443,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, %rbx	#, D.29227
	movq	-48(%rbp), %rax	# op0, tmp444
	movq	8(%rax), %rdx	# op0_21->fld[0].rtx, D.29227
	movq	-40(%rbp), %rcx	# op1, tmp445
	movl	-56(%rbp), %eax	# mode, tmp446
	movl	%eax, %esi	# tmp446,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29227
	movl	-56(%rbp), %eax	# mode, tmp447
	movq	%rbx, %rcx	# D.29227,
	movl	%eax, %esi	# tmp447,
	movl	$83, %edi	#,
	call	gen_binary	#
	.loc 1 5398 0
	movq	%rax, %rdi	# D.29227,
	call	apply_distributive_law	#
	movq	%rax, -72(%rbp)	# tmp448, x
	.loc 1 5404 0
	movq	-72(%rbp), %rax	# x, tmp449
	movzwl	(%rax), %eax	# x_173->code, D.29225
	cmpw	$84, %ax	#, D.29225
	je	.L896	#,
	.loc 1 5405 0
	movq	-72(%rbp), %rax	# x, D.29223
	jmp	.L881	#
.L896:
	.loc 1 5408 0
	movq	-40(%rbp), %rax	# op1, tmp450
	movzwl	(%rax), %eax	# op1_22->code, D.29225
	cmpw	$83, %ax	#, D.29225
	jne	.L897	#,
	.loc 1 5411 0
	movq	-48(%rbp), %rax	# op0, tmp451
	movq	%rax, %rdi	# tmp451,
	call	copy_rtx	#
	movq	%rax, %rcx	#, D.29227
	movq	-40(%rbp), %rax	# op1, tmp452
	movq	16(%rax), %rdx	# op1_22->fld[1].rtx, D.29227
	movl	-56(%rbp), %eax	# mode, tmp453
	movl	%eax, %esi	# tmp453,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, %rbx	#, D.29227
	movq	-40(%rbp), %rax	# op1, tmp454
	movq	8(%rax), %rdx	# op1_22->fld[0].rtx, D.29227
	movq	-48(%rbp), %rcx	# op0, tmp455
	movl	-56(%rbp), %eax	# mode, tmp456
	movl	%eax, %esi	# tmp456,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29227
	movl	-56(%rbp), %eax	# mode, tmp457
	movq	%rbx, %rcx	# D.29227,
	movl	%eax, %esi	# tmp457,
	movl	$83, %edi	#,
	call	gen_binary	#
	.loc 1 5410 0
	movq	%rax, %rdi	# D.29227,
	call	apply_distributive_law	#
	movq	%rax, -72(%rbp)	# tmp458, x
	.loc 1 5416 0
	movq	-72(%rbp), %rax	# x, tmp459
	movzwl	(%rax), %eax	# x_183->code, D.29225
	cmpw	$84, %ax	#, D.29225
	je	.L897	#,
	.loc 1 5417 0
	movq	-72(%rbp), %rax	# x, D.29223
	jmp	.L881	#
.L897:
	.loc 1 5423 0
	movq	-48(%rbp), %rax	# op0, tmp460
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$87, %ax	#, D.29225
	jne	.L898	#,
	.loc 1 5423 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# op1, tmp461
	movzwl	(%rax), %eax	# op1_22->code, D.29225
	cmpw	$90, %ax	#, D.29225
	je	.L899	#,
.L898:
	.loc 1 5424 0 is_stmt 1
	movq	-40(%rbp), %rax	# op1, tmp462
	movzwl	(%rax), %eax	# op1_22->code, D.29225
	cmpw	$87, %ax	#, D.29225
	jne	.L900	#,
	.loc 1 5424 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# op0, tmp463
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$90, %ax	#, D.29225
	jne	.L900	#,
.L899:
	.loc 1 5425 0 is_stmt 1
	movq	-40(%rbp), %rax	# op1, tmp464
	movq	8(%rax), %rdx	# op1_22->fld[0].rtx, D.29227
	movq	-48(%rbp), %rax	# op0, tmp465
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movq	%rdx, %rsi	# D.29227,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	je	.L900	#,
	.loc 1 5426 0
	movq	-48(%rbp), %rax	# op0, tmp466
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29227
	movzwl	(%rax), %eax	# _193->code, D.29225
	cmpw	$54, %ax	#, D.29225
	jne	.L900	#,
	.loc 1 5427 0
	movq	-40(%rbp), %rax	# op1, tmp467
	movq	16(%rax), %rax	# op1_22->fld[1].rtx, D.29227
	movzwl	(%rax), %eax	# _195->code, D.29225
	cmpw	$54, %ax	#, D.29225
	jne	.L900	#,
	.loc 1 5428 0
	movq	-48(%rbp), %rax	# op0, tmp468
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29227
	movq	8(%rax), %rdx	# _197->fld[0].rtwint, D.29229
	movq	-40(%rbp), %rax	# op1, tmp469
	movq	16(%rax), %rax	# op1_22->fld[1].rtx, D.29227
	movq	8(%rax), %rax	# _199->fld[0].rtwint, D.29229
	addq	%rax, %rdx	# D.29229, D.29229
	.loc 1 5429 0
	movl	-56(%rbp), %eax	# mode, mode.806
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29225
	movzwl	%ax, %eax	# D.29225, D.29229
	.loc 1 5428 0
	cmpq	%rax, %rdx	# D.29229, D.29229
	jne	.L900	#,
	.loc 1 5430 0
	movq	-48(%rbp), %rax	# op0, tmp471
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$87, %ax	#, D.29225
	jne	.L901	#,
	.loc 1 5430 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# op0, tmp472
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, iftmp.807
	jmp	.L902	#
.L901:
	.loc 1 5430 0 discriminator 2
	movq	-40(%rbp), %rax	# op1, tmp473
	movq	16(%rax), %rax	# op1_22->fld[1].rtx, iftmp.807
.L902:
	.loc 1 5430 0 discriminator 3
	movq	-48(%rbp), %rdx	# op0, tmp474
	movq	8(%rdx), %rdx	# op0_21->fld[0].rtx, D.29227
	movl	-56(%rbp), %esi	# mode, tmp475
	movq	%rax, %rcx	# iftmp.807,
	movl	$88, %edi	#,
	call	gen_rtx_fmt_ee	#
	jmp	.L881	#
.L900:
	.loc 1 5439 0 is_stmt 1
	movq	-40(%rbp), %rax	# op1, tmp476
	movzwl	(%rax), %eax	# op1_22->code, D.29225
	cmpw	$54, %ax	#, D.29225
	jne	.L903	#,
	.loc 1 5439 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# op0, tmp477
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$89, %ax	#, D.29225
	jne	.L903	#,
	.loc 1 5440 0 is_stmt 1
	movq	-48(%rbp), %rax	# op0, tmp478
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movzwl	(%rax), %eax	# _212->code, D.29225
	cmpw	$75, %ax	#, D.29225
	jne	.L903	#,
	.loc 1 5441 0
	movq	-48(%rbp), %rax	# op0, tmp479
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movq	16(%rax), %rax	# _214->fld[1].rtx, D.29227
	movzwl	(%rax), %eax	# _215->code, D.29225
	cmpw	$54, %ax	#, D.29225
	jne	.L903	#,
	.loc 1 5442 0
	movq	-48(%rbp), %rax	# op0, tmp480
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29227
	movzwl	(%rax), %eax	# _217->code, D.29225
	cmpw	$54, %ax	#, D.29225
	jne	.L903	#,
	.loc 1 5443 0
	movq	-48(%rbp), %rax	# op0, tmp481
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29227
	movq	8(%rax), %rax	# _219->fld[0].rtwint, D.29229
	cmpq	$63, %rax	#, D.29229
	jg	.L903	#,
.LBB63:
	.loc 1 5445 0
	movq	-48(%rbp), %rax	# op0, tmp482
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29227
	movq	8(%rax), %rax	# _221->fld[0].rtwint, D.29229
	movl	%eax, -52(%rbp)	# D.29229, count
	.loc 1 5446 0
	movq	-40(%rbp), %rax	# op1, tmp483
	movq	8(%rax), %rdx	# op1_22->fld[0].rtwint, D.29229
	movl	-52(%rbp), %eax	# count, tmp484
	movl	%eax, %ecx	# tmp484, tmp560
	salq	%cl, %rdx	# tmp560, tmp485
	movq	%rdx, %rax	# tmp485, tmp485
	movq	%rax, -32(%rbp)	# tmp485, mask
	.loc 1 5448 0
	movl	-52(%rbp), %eax	# count, tmp486
	movq	-32(%rbp), %rdx	# mask, tmp487
	movl	%eax, %ecx	# tmp486, tmp561
	sarq	%cl, %rdx	# tmp561, D.29229
	movq	-40(%rbp), %rax	# op1, tmp488
	movq	8(%rax), %rax	# op1_22->fld[0].rtwint, D.29229
	cmpq	%rax, %rdx	# D.29229, D.29229
	jne	.L903	#,
	.loc 1 5449 0
	movq	-48(%rbp), %rax	# op0, tmp489
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movl	-56(%rbp), %edx	# mode, tmp490
	movl	%edx, %esi	# tmp490,
	movq	%rax, %rdi	# D.29227,
	call	nonzero_bits	#
	movq	-32(%rbp), %rdx	# mask, mask.808
	andq	%rdx, %rax	# mask.808, D.29230
	testq	%rax, %rax	# D.29230
	jne	.L903	#,
	.loc 1 5451 0
	movq	-48(%rbp), %rax	# op0, tmp491
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29227
	movq	16(%rax), %rax	# _232->fld[1].rtx, D.29227
	movq	8(%rax), %rax	# _233->fld[0].rtwint, D.29229
	orq	-32(%rbp), %rax	# mask, D.29229
	movq	%rax, %rsi	# D.29229,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	-48(%rbp), %rdx	# op0, tmp492
	movq	8(%rdx), %rdx	# op0_21->fld[0].rtx, D.29227
	addq	$16, %rdx	#, D.29233
	movq	%rax, %rsi	# D.29227,
	movq	%rdx, %rdi	# D.29233,
	call	do_SUBST	#
	.loc 1 5453 0
	movq	-48(%rbp), %rax	# op0, D.29223
	jmp	.L881	#
.L903:
.LBE63:
	.loc 1 5456 0
	jmp	.L892	#
.L872:
	.loc 1 5463 0
	movl	-56(%rbp), %eax	# mode, mode.809
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29225
	cmpw	$64, %ax	#, D.29225
	ja	.L904	#,
	.loc 1 5464 0
	movl	-56(%rbp), %edx	# mode, tmp494
	movq	-48(%rbp), %rax	# op0, tmp495
	movl	%edx, %esi	# tmp494,
	movq	%rax, %rdi	# tmp495,
	call	nonzero_bits	#
	movq	%rax, %rbx	#, D.29230
	.loc 1 5465 0
	movl	-56(%rbp), %edx	# mode, tmp496
	movq	-40(%rbp), %rax	# op1, tmp497
	movl	%edx, %esi	# tmp496,
	movq	%rax, %rdi	# tmp497,
	call	nonzero_bits	#
	andq	%rbx, %rax	# D.29230, D.29230
	.loc 1 5464 0
	testq	%rax, %rax	# D.29230
	jne	.L904	#,
	.loc 1 5466 0
	movq	-40(%rbp), %rcx	# op1, tmp498
	movq	-48(%rbp), %rdx	# op0, tmp499
	movl	-56(%rbp), %eax	# mode, tmp500
	movl	%eax, %esi	# tmp500,
	movl	$84, %edi	#,
	call	gen_binary	#
	jmp	.L881	#
.L904:
.LBB64:
	.loc 1 5472 0
	movl	$0, -60(%rbp)	#, num_negated
	.loc 1 5474 0
	movq	-48(%rbp), %rax	# op0, tmp501
	movzwl	(%rax), %eax	# op0_21->code, D.29225
	cmpw	$86, %ax	#, D.29225
	jne	.L905	#,
	.loc 1 5475 0
	addl	$1, -60(%rbp)	#, num_negated
	movq	-48(%rbp), %rax	# op0, tmp502
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, tmp503
	movq	%rax, -48(%rbp)	# tmp503, op0
.L905:
	.loc 1 5476 0
	movq	-40(%rbp), %rax	# op1, tmp504
	movzwl	(%rax), %eax	# op1_22->code, D.29225
	cmpw	$86, %ax	#, D.29225
	jne	.L906	#,
	.loc 1 5477 0
	addl	$1, -60(%rbp)	#, num_negated
	movq	-40(%rbp), %rax	# op1, tmp505
	movq	8(%rax), %rax	# op1_22->fld[0].rtx, tmp506
	movq	%rax, -40(%rbp)	# tmp506, op1
.L906:
	.loc 1 5479 0
	cmpl	$2, -60(%rbp)	#, num_negated
	jne	.L907	#,
	.loc 1 5481 0
	movq	-72(%rbp), %rax	# x, tmp507
	leaq	8(%rax), %rdx	#, D.29233
	movq	-48(%rbp), %rax	# op0, tmp508
	movq	%rax, %rsi	# tmp508,
	movq	%rdx, %rdi	# D.29233,
	call	do_SUBST	#
	.loc 1 5482 0
	movq	-72(%rbp), %rax	# x, tmp509
	leaq	16(%rax), %rdx	#, D.29233
	movq	-40(%rbp), %rax	# op1, tmp510
	movq	%rax, %rsi	# tmp510,
	movq	%rdx, %rdi	# D.29233,
	call	do_SUBST	#
	jmp	.L908	#
.L907:
	.loc 1 5484 0
	cmpl	$1, -60(%rbp)	#, num_negated
	jne	.L908	#,
	.loc 1 5486 0
	movq	-40(%rbp), %rcx	# op1, tmp511
	movq	-48(%rbp), %rdx	# op0, tmp512
	movl	-56(%rbp), %eax	# mode, tmp513
	movl	%eax, %esi	# tmp513,
	movl	$85, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29227
	.loc 1 5485 0
	movl	-56(%rbp), %ecx	# mode, tmp514
	movl	-56(%rbp), %eax	# mode, tmp515
	movl	%eax, %esi	# tmp515,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	jmp	.L881	#
.L908:
.LBE64:
	.loc 1 5494 0
	movq	-48(%rbp), %rax	# op0, tmp516
	movzwl	(%rax), %eax	# op0_11->code, D.29225
	cmpw	$83, %ax	#, D.29225
	jne	.L909	#,
	.loc 1 5495 0
	movq	-48(%rbp), %rax	# op0, tmp517
	movq	16(%rax), %rax	# op0_11->fld[1].rtx, D.29227
	movq	-40(%rbp), %rdx	# op1, tmp518
	movq	%rdx, %rsi	# tmp518,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	je	.L909	#,
	.loc 1 5496 0
	movq	-40(%rbp), %rax	# op1, tmp519
	movq	%rax, %rdi	# tmp519,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29228
	jne	.L909	#,
	.loc 1 5497 0
	movq	-48(%rbp), %rax	# op0, tmp520
	movq	8(%rax), %rdx	# op0_11->fld[0].rtx, D.29227
	movl	-56(%rbp), %ecx	# mode, tmp521
	movl	-56(%rbp), %eax	# mode, tmp522
	movl	%eax, %esi	# tmp522,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, %rdx	#, D.29227
	movq	-40(%rbp), %rcx	# op1, tmp523
	movl	-56(%rbp), %eax	# mode, tmp524
	movl	%eax, %esi	# tmp524,
	movl	$83, %edi	#,
	call	gen_binary	#
	jmp	.L881	#
.L909:
	.loc 1 5501 0
	movq	-48(%rbp), %rax	# op0, tmp525
	movzwl	(%rax), %eax	# op0_11->code, D.29225
	cmpw	$83, %ax	#, D.29225
	jne	.L910	#,
	.loc 1 5502 0
	movq	-48(%rbp), %rax	# op0, tmp526
	movq	8(%rax), %rax	# op0_11->fld[0].rtx, D.29227
	movq	-40(%rbp), %rdx	# op1, tmp527
	movq	%rdx, %rsi	# tmp527,
	movq	%rax, %rdi	# D.29227,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29228
	je	.L910	#,
	.loc 1 5503 0
	movq	-40(%rbp), %rax	# op1, tmp528
	movq	%rax, %rdi	# tmp528,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29228
	jne	.L910	#,
	.loc 1 5504 0
	movq	-48(%rbp), %rax	# op0, tmp529
	movq	16(%rax), %rdx	# op0_11->fld[1].rtx, D.29227
	movl	-56(%rbp), %ecx	# mode, tmp530
	movl	-56(%rbp), %eax	# mode, tmp531
	movl	%eax, %esi	# tmp531,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, %rdx	#, D.29227
	movq	-40(%rbp), %rcx	# op1, tmp532
	movl	-56(%rbp), %eax	# mode, tmp533
	movl	%eax, %esi	# tmp533,
	movl	$83, %edi	#,
	call	gen_binary	#
	jmp	.L881	#
.L910:
	.loc 1 5511 0
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29227
	.loc 1 5510 0
	cmpq	-40(%rbp), %rax	# op1, D.29227
	jne	.L911	#,
	.loc 1 5512 0
	movq	-48(%rbp), %rax	# op0, tmp534
	movzwl	(%rax), %eax	# op0_11->code, D.29225
	movzwl	%ax, %eax	# D.29225, D.29228
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29231
	cmpb	$60, %al	#, D.29231
	jne	.L911	#,
	.loc 1 5513 0
	movq	-48(%rbp), %rax	# op0, tmp536
	movq	16(%rax), %rcx	# op0_11->fld[1].rtx, D.29227
	movq	-48(%rbp), %rax	# op0, tmp537
	movq	8(%rax), %rdx	# op0_11->fld[0].rtx, D.29227
	movl	-56(%rbp), %esi	# mode, tmp538
	movq	-48(%rbp), %rax	# op0, tmp539
	movq	%rax, %rdi	# tmp539,
	call	reversed_comparison	#
	movq	%rax, -24(%rbp)	# tmp540, reversed
	cmpq	$0, -24(%rbp)	#, reversed
	je	.L911	#,
	.loc 1 5515 0
	movq	-24(%rbp), %rax	# reversed, D.29223
	jmp	.L881	#
.L911:
	.loc 1 5522 0
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29227
	.loc 1 5521 0
	cmpq	-40(%rbp), %rax	# op1, D.29227
	jne	.L912	#,
	.loc 1 5523 0
	movq	-48(%rbp), %rax	# op0, tmp541
	movzwl	(%rax), %eax	# op0_11->code, D.29225
	cmpw	$90, %ax	#, D.29225
	jne	.L912	#,
	.loc 1 5524 0
	movq	-48(%rbp), %rax	# op0, tmp542
	movq	16(%rax), %rax	# op0_11->fld[1].rtx, D.29227
	movzwl	(%rax), %eax	# _281->code, D.29225
	cmpw	$54, %ax	#, D.29225
	jne	.L912	#,
	.loc 1 5525 0
	movq	-48(%rbp), %rax	# op0, tmp543
	movq	16(%rax), %rax	# op0_11->fld[1].rtx, D.29227
	movq	8(%rax), %rdx	# _283->fld[0].rtwint, D.29229
	movl	-56(%rbp), %eax	# mode, mode.810
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29225
	movzwl	%ax, %eax	# D.29225, D.29228
	subl	$1, %eax	#, D.29228
	cltq
	cmpq	%rax, %rdx	# D.29229, D.29229
	jne	.L912	#,
	.loc 1 5526 0
	movq	const_int_rtx+512(%rip), %rcx	# const_int_rtx, D.29227
	movq	-48(%rbp), %rax	# op0, tmp545
	movq	8(%rax), %rdx	# op0_11->fld[0].rtx, D.29227
	movl	-56(%rbp), %eax	# mode, tmp546
	movl	%eax, %esi	# tmp546,
	movl	$104, %edi	#,
	call	gen_rtx_fmt_ee	#
	jmp	.L881	#
.L912:
	.loc 1 5530 0
	movl	-56(%rbp), %eax	# mode, mode.811
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29225
	cmpw	$64, %ax	#, D.29225
	ja	.L913	#,
	.loc 1 5531 0
	movl	-56(%rbp), %eax	# mode, mode.812
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29230
	andl	$1, %eax	#, D.29230
	movq	%rax, %rsi	# D.29230, D.29230
	.loc 1 5532 0
	movl	-56(%rbp), %eax	# mode, mode.813
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29225
	movzwl	%ax, %eax	# D.29225, D.29228
	subl	$1, %eax	#, D.29228
	movl	$1, %edx	#, tmp550
	movl	%eax, %ecx	# D.29228, tmp564
	salq	%cl, %rdx	# tmp564, D.29230
	movq	%rdx, %rax	# D.29230, D.29230
	.loc 1 5531 0
	cmpq	%rax, %rsi	# D.29230, D.29230
	jne	.L913	#,
	.loc 1 5533 0
	movq	const_true_rtx(%rip), %rax	# const_true_rtx, const_true_rtx.814
	cmpq	%rax, -40(%rbp)	# const_true_rtx.814, op1
	jne	.L913	#,
	.loc 1 5534 0
	movq	-48(%rbp), %rax	# op0, tmp551
	movzwl	(%rax), %eax	# op0_11->code, D.29225
	movzwl	%ax, %eax	# D.29225, D.29228
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29231
	cmpb	$60, %al	#, D.29231
	jne	.L913	#,
	.loc 1 5535 0
	movq	-48(%rbp), %rax	# op0, tmp553
	movq	16(%rax), %rcx	# op0_11->fld[1].rtx, D.29227
	movq	-48(%rbp), %rax	# op0, tmp554
	movq	8(%rax), %rdx	# op0_11->fld[0].rtx, D.29227
	movl	-56(%rbp), %esi	# mode, tmp555
	movq	-48(%rbp), %rax	# op0, tmp556
	movq	%rax, %rdi	# tmp556,
	call	reversed_comparison	#
	movq	%rax, -24(%rbp)	# tmp557, reversed
	cmpq	$0, -24(%rbp)	#, reversed
	je	.L913	#,
	.loc 1 5537 0
	movq	-24(%rbp), %rax	# reversed, D.29223
	jmp	.L881	#
.L913:
	.loc 1 5539 0
	jmp	.L892	#
.L914:
	.loc 1 5542 0
	movl	$__FUNCTION__.11922, %edx	#,
	movl	$5542, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L892:
	.loc 1 5545 0
	movq	-72(%rbp), %rax	# x, D.29223
.L881:
	.loc 1 5546 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE21:
	.size	simplify_logical, .-simplify_logical
	.type	expand_compound_operation, @function
expand_compound_operation:
.LFB22:
	.loc 1 5564 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -72(%rbp)	# x, x
	.loc 1 5565 0
	movq	$0, -48(%rbp)	#, pos
	.loc 1 5566 0
	movl	$0, -56(%rbp)	#, unsignedp
	.loc 1 5570 0
	movq	-72(%rbp), %rax	# x, tmp240
	movzwl	(%rax), %eax	# x_12(D)->code, D.29235
	movzwl	%ax, %eax	# D.29235, D.29236
	cmpl	$121, %eax	#, D.29236
	je	.L917	#,
	cmpl	$121, %eax	#, D.29236
	ja	.L918	#,
	cmpl	$120, %eax	#, D.29236
	je	.L919	#,
	jmp	.L916	#
.L918:
	cmpl	$132, %eax	#, D.29236
	je	.L920	#,
	cmpl	$133, %eax	#, D.29236
	je	.L921	#,
	jmp	.L916	#
.L917:
	.loc 1 5573 0
	movl	$1, -56(%rbp)	#, unsignedp
.L919:
	.loc 1 5583 0
	movq	-72(%rbp), %rax	# x, tmp241
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzwl	(%rax), %eax	# _16->code, D.29235
	cmpw	$54, %ax	#, D.29235
	jne	.L922	#,
	.loc 1 5584 0
	movq	-72(%rbp), %rax	# x, D.29234
	jmp	.L923	#
.L922:
	.loc 1 5595 0
	movq	-72(%rbp), %rax	# x, tmp242
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rax), %eax	# _19->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29238
	movzbl	%al, %edx	# D.29238, D.29239
	movl	target_flags(%rip), %eax	# target_flags, target_flags.816
	andl	$33554432, %eax	#, D.29239
	testl	%eax, %eax	# D.29239
	je	.L924	#,
	.loc 1 5595 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.815
	jmp	.L925	#
.L924:
	.loc 1 5595 0 discriminator 2
	movl	$4, %eax	#, iftmp.815
.L925:
	.loc 1 5595 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.815, D.29239
	jle	.L926	#,
	.loc 1 5596 0 is_stmt 1
	movq	-72(%rbp), %rax	# x, D.29234
	jmp	.L923	#
.L926:
	.loc 1 5598 0
	movq	-72(%rbp), %rax	# x, tmp244
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rax), %eax	# _29->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29235
	movzwl	%ax, %eax	# D.29235, tmp246
	movq	%rax, -40(%rbp)	# tmp246, len
	.loc 1 5602 0
	cmpq	$0, -40(%rbp)	#, len
	jne	.L927	#,
	.loc 1 5603 0
	movq	-72(%rbp), %rax	# x, D.29234
	jmp	.L923	#
.L927:
	.loc 1 5605 0
	jmp	.L928	#
.L921:
	.loc 1 5608 0
	movl	$1, -56(%rbp)	#, unsignedp
.L920:
	.loc 1 5611 0
	movq	-72(%rbp), %rax	# x, tmp247
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzwl	(%rax), %eax	# _36->code, D.29235
	cmpw	$49, %ax	#, D.29235
	jne	.L929	#,
	.loc 1 5612 0
	movq	-72(%rbp), %rax	# x, tmp248
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29234
	jmp	.L923	#
.L929:
	.loc 1 5614 0
	movq	-72(%rbp), %rax	# x, tmp249
	movq	16(%rax), %rax	# x_12(D)->fld[1].rtx, D.29237
	movzwl	(%rax), %eax	# _39->code, D.29235
	cmpw	$54, %ax	#, D.29235
	jne	.L930	#,
	.loc 1 5615 0
	movq	-72(%rbp), %rax	# x, tmp250
	movq	24(%rax), %rax	# x_12(D)->fld[2].rtx, D.29237
	movzwl	(%rax), %eax	# _41->code, D.29235
	cmpw	$54, %ax	#, D.29235
	jne	.L930	#,
	.loc 1 5616 0
	movq	-72(%rbp), %rax	# x, tmp251
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rax), %eax	# _43->mode, D.29238
	testb	%al, %al	# D.29238
	jne	.L931	#,
.L930:
	.loc 1 5617 0
	movq	-72(%rbp), %rax	# x, D.29234
	jmp	.L923	#
.L931:
	.loc 1 5619 0
	movq	-72(%rbp), %rax	# x, tmp252
	movq	16(%rax), %rax	# x_12(D)->fld[1].rtx, D.29237
	movq	8(%rax), %rax	# _45->fld[0].rtwint, D.29240
	movq	%rax, -40(%rbp)	# D.29240, len
	.loc 1 5620 0
	movq	-72(%rbp), %rax	# x, tmp253
	movq	24(%rax), %rax	# x_12(D)->fld[2].rtx, D.29237
	movq	8(%rax), %rax	# _48->fld[0].rtwint, D.29240
	movq	%rax, -48(%rbp)	# D.29240, pos
	.loc 1 5625 0
	movq	-48(%rbp), %rax	# pos, tmp254
	movq	-40(%rbp), %rdx	# len, tmp255
	addq	%rax, %rdx	# tmp254, D.29241
	movq	-72(%rbp), %rax	# x, tmp256
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rax), %eax	# _52->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29235
	movzwl	%ax, %eax	# D.29235, D.29241
	cmpq	%rax, %rdx	# D.29241, D.29241
	jbe	.L944	#,
	.loc 1 5626 0
	movq	-72(%rbp), %rax	# x, tmp258
	movq	8(%rax), %rdx	# x_12(D)->fld[0].rtx, D.29237
	movq	-72(%rbp), %rax	# x, tmp259
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29242
	movl	%eax, %esi	# D.29242,
	movl	$48, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	-72(%rbp), %rdx	# x, tmp260
	addq	$8, %rdx	#, D.29243
	movq	%rax, %rsi	# D.29237,
	movq	%rdx, %rdi	# D.29243,
	call	do_SUBST	#
	.loc 1 5631 0
	jmp	.L928	#
.L944:
	jmp	.L928	#
.L916:
	.loc 1 5634 0
	movq	-72(%rbp), %rax	# x, D.29234
	jmp	.L923	#
.L928:
	.loc 1 5639 0
	movq	-72(%rbp), %rax	# x, tmp261
	movzwl	(%rax), %eax	# x_12(D)->code, D.29235
	cmpw	$120, %ax	#, D.29235
	jne	.L933	#,
	.loc 1 5640 0
	movq	-72(%rbp), %rax	# x, tmp262
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29235
	cmpw	$64, %ax	#, D.29235
	ja	.L933	#,
	.loc 1 5641 0
	movq	-72(%rbp), %rax	# x, tmp264
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rax), %eax	# _68->mode, D.29238
	movzbl	%al, %edx	# D.29238, D.29242
	movq	-72(%rbp), %rax	# x, tmp265
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movl	%edx, %esi	# D.29242,
	movq	%rax, %rdi	# D.29237,
	call	nonzero_bits	#
	.loc 1 5643 0
	movq	-72(%rbp), %rdx	# x, tmp266
	movq	8(%rdx), %rdx	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rdx), %edx	# _73->mode, D.29238
	movzbl	%dl, %edx	# D.29238, D.29239
	movslq	%edx, %rdx	# D.29239, tmp267
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29241
	.loc 1 5644 0
	shrq	%rdx	# D.29241
	.loc 1 5642 0
	notq	%rdx	# D.29241
	andq	%rdx, %rax	# D.29241, D.29241
	.loc 1 5641 0
	testq	%rax, %rax	# D.29241
	jne	.L933	#,
.LBB65:
	.loc 1 5647 0
	movq	-72(%rbp), %rax	# x, tmp268
	movq	8(%rax), %rdx	# x_12(D)->fld[0].rtx, D.29237
	movq	-72(%rbp), %rax	# x, tmp269
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29242
	movl	%eax, %esi	# D.29242,
	movl	$121, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, -24(%rbp)	# tmp270, temp
	.loc 1 5648 0
	movq	-24(%rbp), %rax	# temp, tmp271
	movq	%rax, %rdi	# tmp271,
	call	expand_compound_operation	#
	jmp	.L923	#
.L933:
.LBE65:
	.loc 1 5652 0
	movq	-72(%rbp), %rax	# x, tmp272
	movzwl	(%rax), %eax	# x_12(D)->code, D.29235
	cmpw	$121, %ax	#, D.29235
	jne	.L934	#,
	.loc 1 5657 0
	movq	-72(%rbp), %rax	# x, tmp273
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzwl	(%rax), %eax	# _86->code, D.29235
	cmpw	$122, %ax	#, D.29235
	jne	.L935	#,
	.loc 1 5658 0
	movq	-72(%rbp), %rax	# x, tmp274
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _88->fld[0].rtx, D.29237
	movzbl	2(%rax), %edx	# _89->mode, D.29238
	movq	-72(%rbp), %rax	# x, tmp275
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	cmpb	%al, %dl	# D.29238, D.29238
	jne	.L935	#,
	.loc 1 5659 0
	movq	-72(%rbp), %rax	# x, tmp276
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29235
	cmpw	$64, %ax	#, D.29235
	ja	.L935	#,
	.loc 1 5660 0
	movq	-72(%rbp), %rax	# x, tmp278
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	movzbl	%al, %edx	# D.29238, D.29242
	movq	-72(%rbp), %rax	# x, tmp279
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _97->fld[0].rtx, D.29237
	movl	%edx, %esi	# D.29242,
	movq	%rax, %rdi	# D.29237,
	call	nonzero_bits	#
	.loc 1 5661 0
	movq	-72(%rbp), %rdx	# x, tmp280
	movq	8(%rdx), %rdx	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rdx), %edx	# _100->mode, D.29238
	movzbl	%dl, %edx	# D.29238, D.29239
	movslq	%edx, %rdx	# D.29239, tmp281
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29241
	notq	%rdx	# D.29241
	andq	%rdx, %rax	# D.29241, D.29241
	.loc 1 5660 0
	testq	%rax, %rax	# D.29241
	jne	.L935	#,
	.loc 1 5662 0
	movq	-72(%rbp), %rax	# x, tmp282
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _106->fld[0].rtx, D.29234
	jmp	.L923	#
.L935:
	.loc 1 5665 0
	movq	-72(%rbp), %rax	# x, tmp283
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzwl	(%rax), %eax	# _108->code, D.29235
	cmpw	$63, %ax	#, D.29235
	jne	.L936	#,
	.loc 1 5666 0
	movq	-72(%rbp), %rax	# x, tmp284
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _110->fld[0].rtx, D.29237
	movzbl	2(%rax), %edx	# _111->mode, D.29238
	movq	-72(%rbp), %rax	# x, tmp285
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	cmpb	%al, %dl	# D.29238, D.29238
	jne	.L936	#,
	.loc 1 5667 0
	movq	-72(%rbp), %rax	# x, tmp286
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	%rax, %rdi	# D.29237,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29239
	je	.L936	#,
	.loc 1 5668 0
	movq	-72(%rbp), %rax	# x, tmp287
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29235
	cmpw	$64, %ax	#, D.29235
	ja	.L936	#,
	.loc 1 5669 0
	movq	-72(%rbp), %rax	# x, tmp289
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	movzbl	%al, %edx	# D.29238, D.29242
	movq	-72(%rbp), %rax	# x, tmp290
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _121->fld[0].rtx, D.29237
	movl	%edx, %esi	# D.29242,
	movq	%rax, %rdi	# D.29237,
	call	nonzero_bits	#
	.loc 1 5670 0
	movq	-72(%rbp), %rdx	# x, tmp291
	movq	8(%rdx), %rdx	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rdx), %edx	# _124->mode, D.29238
	movzbl	%dl, %edx	# D.29238, D.29239
	movslq	%edx, %rdx	# D.29239, tmp292
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29241
	notq	%rdx	# D.29241
	andq	%rdx, %rax	# D.29241, D.29241
	.loc 1 5669 0
	testq	%rax, %rax	# D.29241
	jne	.L936	#,
	.loc 1 5671 0
	movq	-72(%rbp), %rax	# x, tmp293
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _130->fld[0].rtx, D.29234
	jmp	.L923	#
.L936:
	.loc 1 5677 0
	movq	-72(%rbp), %rax	# x, tmp294
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzwl	(%rax), %eax	# _132->code, D.29235
	cmpw	$122, %ax	#, D.29235
	jne	.L937	#,
	.loc 1 5678 0
	movq	-72(%rbp), %rax	# x, tmp295
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _134->fld[0].rtx, D.29237
	movzbl	2(%rax), %edx	# _135->mode, D.29238
	movq	-72(%rbp), %rax	# x, tmp296
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	cmpb	%al, %dl	# D.29238, D.29238
	jne	.L937	#,
	.loc 1 5679 0
	movq	-72(%rbp), %rax	# x, tmp297
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _138->fld[0].rtx, D.29237
	movzwl	(%rax), %eax	# _139->code, D.29235
	movzwl	%ax, %eax	# D.29235, D.29239
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29244
	cmpb	$60, %al	#, D.29244
	jne	.L937	#,
	.loc 1 5680 0
	movq	-72(%rbp), %rax	# x, tmp299
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rax), %eax	# _143->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29235
	cmpw	$64, %ax	#, D.29235
	ja	.L937	#,
	.loc 1 5683 0
	movq	-72(%rbp), %rax	# x, tmp301
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rax), %eax	# _147->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29241
	andl	$1, %eax	#, D.29241
	.loc 1 5682 0
	testq	%rax, %rax	# D.29241
	je	.L937	#,
	.loc 1 5684 0
	movq	-72(%rbp), %rax	# x, tmp303
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _152->fld[0].rtx, D.29234
	jmp	.L923	#
.L937:
	.loc 1 5687 0
	movq	-72(%rbp), %rax	# x, tmp304
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzwl	(%rax), %eax	# _154->code, D.29235
	cmpw	$63, %ax	#, D.29235
	jne	.L934	#,
	.loc 1 5688 0
	movq	-72(%rbp), %rax	# x, tmp305
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _156->fld[0].rtx, D.29237
	movzbl	2(%rax), %edx	# _157->mode, D.29238
	movq	-72(%rbp), %rax	# x, tmp306
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	cmpb	%al, %dl	# D.29238, D.29238
	jne	.L934	#,
	.loc 1 5689 0
	movq	-72(%rbp), %rax	# x, tmp307
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	%rax, %rdi	# D.29237,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29239
	je	.L934	#,
	.loc 1 5690 0
	movq	-72(%rbp), %rax	# x, tmp308
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _162->fld[0].rtx, D.29237
	movzwl	(%rax), %eax	# _163->code, D.29235
	movzwl	%ax, %eax	# D.29235, D.29239
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29244
	cmpb	$60, %al	#, D.29244
	jne	.L934	#,
	.loc 1 5691 0
	movq	-72(%rbp), %rax	# x, tmp310
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rax), %eax	# _167->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29235
	cmpw	$64, %ax	#, D.29235
	ja	.L934	#,
	.loc 1 5694 0
	movq	-72(%rbp), %rax	# x, tmp312
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movzbl	2(%rax), %eax	# _171->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29241
	andl	$1, %eax	#, D.29241
	.loc 1 5693 0
	testq	%rax, %rax	# D.29241
	je	.L934	#,
	.loc 1 5695 0
	movq	-72(%rbp), %rax	# x, tmp314
	movq	8(%rax), %rax	# x_12(D)->fld[0].rtx, D.29237
	movq	8(%rax), %rax	# _176->fld[0].rtx, D.29234
	jmp	.L923	#
.L934:
	.loc 1 5714 0
	movq	-72(%rbp), %rax	# x, tmp315
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29239
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29235
	movzwl	%ax, %eax	# D.29235, tmp317
	movl	%eax, -52(%rbp)	# tmp317, modewidth
	.loc 1 5715 0
	movl	-52(%rbp), %edx	# modewidth, D.29241
	movq	-40(%rbp), %rax	# len, tmp318
	addq	%rdx, %rax	# D.29241, D.29241
	cmpq	-48(%rbp), %rax	# pos, D.29241
	jb	.L938	#,
	.loc 1 5716 0
	movq	-40(%rbp), %rax	# len, tmp319
	movl	-52(%rbp), %edx	# modewidth, tmp320
	subl	%eax, %edx	# D.29245, D.29245
	movl	%edx, %eax	# D.29245, D.29245
	movl	%eax, %ebx	# D.29245, D.29239
	movq	-48(%rbp), %rax	# pos, tmp321
	movl	-52(%rbp), %edx	# modewidth, tmp322
	subl	%eax, %edx	# D.29245, D.29245
	movq	-40(%rbp), %rax	# len, tmp323
	subl	%eax, %edx	# D.29245, D.29245
	movl	%edx, %eax	# D.29245, D.29245
	movl	%eax, %ecx	# D.29245, D.29239
	movq	-72(%rbp), %rax	# x, tmp324
	movq	8(%rax), %rdx	# x_12(D)->fld[0].rtx, D.29237
	.loc 1 5719 0
	movq	-72(%rbp), %rax	# x, tmp325
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	.loc 1 5716 0
	movzbl	%al, %eax	# D.29238, D.29242
	movl	%ecx, %r8d	# D.29239,
	movq	%rdx, %rcx	# D.29237,
	movl	%eax, %edx	# D.29242,
	movl	$87, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, %rcx	#, D.29237
	.loc 1 5717 0
	movq	-72(%rbp), %rax	# x, tmp326
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	.loc 1 5716 0
	movzbl	%al, %edx	# D.29238, D.29242
	cmpl	$0, -56(%rbp)	#, unsignedp
	je	.L939	#,
	.loc 1 5716 0 is_stmt 0 discriminator 1
	movl	$90, %eax	#, iftmp.817
	jmp	.L940	#
.L939:
	.loc 1 5716 0 discriminator 2
	movl	$89, %eax	#, iftmp.817
.L940:
	.loc 1 5716 0 discriminator 1
	movl	%ebx, %r8d	# D.29239,
	movl	%eax, %esi	# iftmp.817,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, -32(%rbp)	# tmp327, tem
	jmp	.L941	#
.L938:
	.loc 1 5724 0 is_stmt 1
	cmpl	$0, -56(%rbp)	#, unsignedp
	je	.L942	#,
	.loc 1 5724 0 is_stmt 0 discriminator 1
	cmpq	$63, -40(%rbp)	#, len
	ja	.L942	#,
	.loc 1 5729 0 is_stmt 1
	movq	-40(%rbp), %rax	# len, tmp328
	movl	$1, %edx	#, tmp329
	movl	%eax, %ecx	# D.29239, tmp340
	salq	%cl, %rdx	# tmp340, D.29240
	movq	%rdx, %rax	# D.29240, D.29240
	subq	$1, %rax	#, D.29240
	.loc 1 5725 0
	movq	%rax, %rbx	# D.29240, D.29241
	movq	-48(%rbp), %rax	# pos, tmp330
	movl	%eax, %ecx	# tmp330, D.29239
	movq	-72(%rbp), %rax	# x, tmp331
	movq	8(%rax), %rdx	# x_12(D)->fld[0].rtx, D.29237
	.loc 1 5727 0
	movq	-72(%rbp), %rax	# x, tmp332
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	.loc 1 5725 0
	movzbl	%al, %eax	# D.29238, D.29242
	movl	%ecx, %r8d	# D.29239,
	movq	%rdx, %rcx	# D.29237,
	movl	%eax, %edx	# D.29242,
	movl	$90, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, %rdx	#, D.29237
	movq	-72(%rbp), %rax	# x, tmp333
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29238
	movzbl	%al, %eax	# D.29238, D.29242
	movq	%rbx, %rcx	# D.29241,
	movl	%eax, %esi	# D.29242,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, -32(%rbp)	# tmp334, tem
	jmp	.L941	#
.L942:
	.loc 1 5732 0
	movq	-72(%rbp), %rax	# x, D.29234
	jmp	.L923	#
.L941:
	.loc 1 5736 0
	movq	-32(%rbp), %rax	# tem, tmp335
	movzwl	(%rax), %eax	# tem_6->code, D.29235
	cmpw	$49, %ax	#, D.29235
	jne	.L943	#,
	.loc 1 5737 0
	movq	-72(%rbp), %rax	# x, D.29234
	jmp	.L923	#
.L943:
	.loc 1 5739 0
	movq	-32(%rbp), %rax	# tem, D.29234
.L923:
	.loc 1 5740 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE22:
	.size	expand_compound_operation, .-expand_compound_operation
	.type	expand_field_assignment, @function
expand_field_assignment:
.LFB23:
	.loc 1 5753 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -72(%rbp)	# x, x
.L968:
	.loc 1 5763 0
	movq	-72(%rbp), %rax	# x, tmp167
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movzwl	(%rax), %eax	# _15->code, D.29248
	cmpw	$64, %ax	#, D.29248
	jne	.L946	#,
	.loc 1 5764 0
	movq	-72(%rbp), %rax	# x, tmp168
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	8(%rax), %rax	# _17->fld[0].rtx, D.29247
	movzwl	(%rax), %eax	# _18->code, D.29248
	cmpw	$63, %ax	#, D.29248
	jne	.L946	#,
	.loc 1 5766 0
	movq	-72(%rbp), %rax	# x, tmp169
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	8(%rax), %rax	# _20->fld[0].rtx, D.29247
	movq	8(%rax), %rax	# _21->fld[0].rtx, tmp170
	movq	%rax, -40(%rbp)	# tmp170, inner
	.loc 1 5767 0
	movq	-72(%rbp), %rax	# x, tmp171
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	8(%rax), %rax	# _23->fld[0].rtx, D.29247
	movzbl	2(%rax), %eax	# _24->mode, D.29249
	movzbl	%al, %eax	# D.29249, D.29250
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29248
	movzwl	%ax, %eax	# D.29248, tmp173
	movl	%eax, -52(%rbp)	# tmp173, len
	.loc 1 5768 0
	movq	-72(%rbp), %rax	# x, tmp174
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	8(%rax), %rax	# _29->fld[0].rtx, D.29247
	movq	%rax, %rdi	# D.29247,
	call	subreg_lsb	#
	movl	%eax, %eax	# D.29251, D.29252
	movq	%rax, %rsi	# D.29252,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -32(%rbp)	# tmp175, pos
	jmp	.L947	#
.L946:
	.loc 1 5770 0
	movq	-72(%rbp), %rax	# x, tmp176
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movzwl	(%rax), %eax	# _34->code, D.29248
	cmpw	$133, %ax	#, D.29248
	jne	.L948	#,
	.loc 1 5771 0
	movq	-72(%rbp), %rax	# x, tmp177
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	16(%rax), %rax	# _36->fld[1].rtx, D.29247
	movzwl	(%rax), %eax	# _37->code, D.29248
	cmpw	$54, %ax	#, D.29248
	jne	.L948	#,
	.loc 1 5773 0
	movq	-72(%rbp), %rax	# x, tmp178
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	8(%rax), %rax	# _39->fld[0].rtx, tmp179
	movq	%rax, -40(%rbp)	# tmp179, inner
	.loc 1 5774 0
	movq	-72(%rbp), %rax	# x, tmp180
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	16(%rax), %rax	# _41->fld[1].rtx, D.29247
	movq	8(%rax), %rax	# _42->fld[0].rtwint, D.29252
	movl	%eax, -52(%rbp)	# D.29252, len
	.loc 1 5775 0
	movq	-72(%rbp), %rax	# x, tmp181
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	24(%rax), %rax	# _45->fld[2].rtx, tmp182
	movq	%rax, -32(%rbp)	# tmp182, pos
	.loc 1 5779 0
	movq	-32(%rbp), %rax	# pos, tmp183
	movzwl	(%rax), %eax	# pos_46->code, D.29248
	cmpw	$54, %ax	#, D.29248
	jne	.L970	#,
	.loc 1 5780 0
	movq	-32(%rbp), %rax	# pos, tmp184
	movq	8(%rax), %rdx	# pos_46->fld[0].rtwint, D.29252
	movl	-52(%rbp), %eax	# len, tmp185
	cltq
	addq	%rax, %rdx	# D.29252, D.29252
	movq	-40(%rbp), %rax	# inner, tmp186
	movzbl	2(%rax), %eax	# inner_40->mode, D.29249
	movzbl	%al, %eax	# D.29249, D.29250
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29248
	movzwl	%ax, %eax	# D.29248, D.29252
	cmpq	%rax, %rdx	# D.29252, D.29252
	jle	.L970	#,
	.loc 1 5781 0
	movq	-72(%rbp), %rax	# x, tmp188
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movzbl	2(%rax), %eax	# _55->mode, D.29249
	movzbl	%al, %eax	# D.29249, D.29253
	movq	-40(%rbp), %rdx	# inner, tmp189
	movl	%eax, %esi	# D.29253,
	movl	$48, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, -40(%rbp)	# tmp190, inner
	.loc 1 5783 0
	jmp	.L947	#
.L970:
	.loc 1 5783 0 is_stmt 0 discriminator 1
	jmp	.L947	#
.L948:
	.loc 1 5804 0 is_stmt 1
	movq	-72(%rbp), %rax	# x, tmp191
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movzwl	(%rax), %eax	# _59->code, D.29248
	cmpw	$63, %ax	#, D.29248
	jne	.L950	#,
	.loc 1 5806 0
	movl	nonzero_sign_valid(%rip), %eax	# nonzero_sign_valid, nonzero_sign_valid.818
	testl	%eax, %eax	# nonzero_sign_valid.818
	je	.L950	#,
	.loc 1 5807 0
	movq	-72(%rbp), %rax	# x, tmp192
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movzbl	2(%rax), %eax	# _62->mode, D.29249
	movzbl	%al, %eax	# D.29249, D.29250
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29249
	.loc 1 5808 0
	movzbl	%al, %edx	# D.29249, D.29250
	movl	target_flags(%rip), %eax	# target_flags, target_flags.820
	andl	$33554432, %eax	#, D.29250
	testl	%eax, %eax	# D.29250
	je	.L951	#,
	.loc 1 5808 0 is_stmt 0 discriminator 1
	movl	$7, %eax	#, iftmp.819
	jmp	.L952	#
.L951:
	.loc 1 5808 0 discriminator 2
	movl	$3, %eax	#, iftmp.819
.L952:
	.loc 1 5808 0 discriminator 3
	addl	%edx, %eax	# D.29250, D.29250
	movl	target_flags(%rip), %edx	# target_flags, target_flags.822
	andl	$33554432, %edx	#, D.29250
	testl	%edx, %edx	# D.29250
	je	.L953	#,
	.loc 1 5808 0 discriminator 1
	movl	$8, %ebx	#, iftmp.821
	jmp	.L954	#
.L953:
	.loc 1 5808 0 discriminator 2
	movl	$4, %ebx	#, iftmp.821
.L954:
	.loc 1 5808 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.821
	movl	%eax, %ecx	# tmp194, D.29250
	.loc 1 5809 0 is_stmt 1 discriminator 3
	movq	-72(%rbp), %rax	# x, tmp196
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	8(%rax), %rax	# _77->fld[0].rtx, D.29247
	movzbl	2(%rax), %eax	# _78->mode, D.29249
	movzbl	%al, %eax	# D.29249, D.29250
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29249
	.loc 1 5810 0 discriminator 3
	movzbl	%al, %edx	# D.29249, D.29250
	movl	target_flags(%rip), %eax	# target_flags, target_flags.824
	andl	$33554432, %eax	#, D.29250
	testl	%eax, %eax	# D.29250
	je	.L955	#,
	.loc 1 5810 0 is_stmt 0 discriminator 1
	movl	$7, %eax	#, iftmp.823
	jmp	.L956	#
.L955:
	.loc 1 5810 0 discriminator 2
	movl	$3, %eax	#, iftmp.823
.L956:
	.loc 1 5810 0 discriminator 3
	addl	%edx, %eax	# D.29250, D.29250
	movl	target_flags(%rip), %edx	# target_flags, target_flags.826
	andl	$33554432, %edx	#, D.29250
	testl	%edx, %edx	# D.29250
	je	.L957	#,
	.loc 1 5810 0 discriminator 1
	movl	$8, %ebx	#, iftmp.825
	jmp	.L958	#
.L957:
	.loc 1 5810 0 discriminator 2
	movl	$4, %ebx	#, iftmp.825
.L958:
	.loc 1 5810 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.825
	.loc 1 5807 0 is_stmt 1 discriminator 3
	cmpl	%eax, %ecx	# D.29250, D.29250
	jne	.L950	#,
	.loc 1 5812 0
	movq	-72(%rbp), %rax	# x, tmp200
	movq	16(%rax), %rdx	# x_1->fld[1].rtx, D.29247
	movq	-72(%rbp), %rax	# x, tmp201
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	8(%rax), %rax	# _94->fld[0].rtx, D.29247
	movzbl	2(%rax), %eax	# _95->mode, D.29249
	movzbl	%al, %eax	# D.29249, D.29253
	movq	%rdx, %rsi	# D.29247,
	movl	%eax, %edi	# D.29253,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29247
	movq	-72(%rbp), %rax	# x, tmp202
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29247
	movq	8(%rax), %rax	# _99->fld[0].rtx, D.29247
	movq	%rdx, %rcx	# D.29247,
	movq	%rax, %rdx	# D.29247,
	movl	$0, %esi	#,
	movl	$47, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -72(%rbp)	# tmp203, x
	.loc 1 5816 0
	nop
	.loc 1 5869 0
	jmp	.L968	#
.L947:
	.loc 1 5821 0
	jmp	.L960	#
.L962:
	.loc 1 5822 0
	movq	-40(%rbp), %rax	# inner, tmp204
	movq	8(%rax), %rax	# inner_5->fld[0].rtx, tmp205
	movq	%rax, -40(%rbp)	# tmp205, inner
.L960:
	.loc 1 5821 0 discriminator 1
	movq	-40(%rbp), %rax	# inner, tmp206
	movzwl	(%rax), %eax	# inner_5->code, D.29248
	cmpw	$63, %ax	#, D.29248
	jne	.L961	#,
	.loc 1 5821 0 is_stmt 0 discriminator 2
	movq	-40(%rbp), %rax	# inner, tmp207
	movq	%rax, %rdi	# tmp207,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29250
	jne	.L962	#,
.L961:
	.loc 1 5824 0 is_stmt 1
	movq	-40(%rbp), %rax	# inner, tmp208
	movzbl	2(%rax), %eax	# inner_5->mode, D.29249
	movzbl	%al, %eax	# D.29249, tmp209
	movl	%eax, -48(%rbp)	# tmp209, compute_mode
	.loc 1 5827 0
	movl	-48(%rbp), %eax	# compute_mode, compute_mode.827
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29254
	cmpl	$1, %eax	#, D.29254
	je	.L963	#,
	.loc 1 5827 0 is_stmt 0 discriminator 1
	movl	-48(%rbp), %eax	# compute_mode, compute_mode.828
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29254
	cmpl	$3, %eax	#, D.29254
	je	.L963	#,
	movl	-48(%rbp), %eax	# compute_mode, compute_mode.829
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29254
	cmpl	$5, %eax	#, D.29254
	je	.L963	#,
	movl	-48(%rbp), %eax	# compute_mode, compute_mode.830
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29254
	cmpl	$7, %eax	#, D.29254
	je	.L963	#,
.LBB66:
	.loc 1 5832 0 is_stmt 1
	movl	-48(%rbp), %eax	# compute_mode, compute_mode.831
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29254
	cmpl	$2, %eax	#, D.29254
	je	.L964	#,
	.loc 1 5832 0 is_stmt 0 discriminator 1
	movl	-48(%rbp), %eax	# compute_mode, compute_mode.832
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29254
	cmpl	$6, %eax	#, D.29254
	je	.L964	#,
	movl	-48(%rbp), %eax	# compute_mode, compute_mode.833
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29254
	cmpl	$8, %eax	#, D.29254
	je	.L964	#,
	.loc 1 5833 0 is_stmt 1
	jmp	.L950	#
.L964:
	.loc 1 5836 0
	movl	-48(%rbp), %eax	# compute_mode, compute_mode.834
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29248
	movzwl	%ax, %eax	# D.29248, D.29251
	movl	$0, %edx	#,
	movl	$1, %esi	#,
	movl	%eax, %edi	# D.29251,
	call	mode_for_size	#
	movl	%eax, -44(%rbp)	# tmp218, imode
	.loc 1 5837 0
	cmpl	$51, -44(%rbp)	#, imode
	jne	.L965	#,
	.loc 1 5838 0
	jmp	.L950	#
.L965:
	.loc 1 5840 0
	movl	-44(%rbp), %eax	# imode, tmp219
	movl	%eax, -48(%rbp)	# tmp219, compute_mode
	.loc 1 5841 0
	movq	-40(%rbp), %rdx	# inner, tmp220
	movl	-44(%rbp), %eax	# imode, tmp221
	movq	%rdx, %rsi	# tmp220,
	movl	%eax, %edi	# tmp221,
	call	gen_lowpart_for_combine	#
	movq	%rax, -40(%rbp)	# tmp222, inner
.L963:
.LBE66:
	.loc 1 5845 0
	cmpl	$63, -52(%rbp)	#, len
	jg	.L966	#,
	.loc 1 5846 0
	movl	-52(%rbp), %eax	# len, tmp223
	movl	$1, %edx	#, tmp224
	movl	%eax, %ecx	# tmp223, tmp246
	salq	%cl, %rdx	# tmp246, D.29252
	movq	%rdx, %rax	# D.29252, D.29252
	subq	$1, %rax	#, D.29252
	movq	%rax, %rsi	# D.29252,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -24(%rbp)	# tmp225, mask
	.loc 1 5853 0
	movq	-72(%rbp), %rax	# x, tmp226
	movq	16(%rax), %rdx	# x_1->fld[1].rtx, D.29247
	movl	-48(%rbp), %eax	# compute_mode, tmp227
	movq	%rdx, %rsi	# D.29247,
	movl	%eax, %edi	# tmp227,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29247
	movq	-24(%rbp), %rcx	# mask, tmp228
	movl	-48(%rbp), %eax	# compute_mode, tmp229
	movl	%eax, %esi	# tmp229,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29247
	movq	-32(%rbp), %rcx	# pos, tmp230
	movl	-48(%rbp), %eax	# compute_mode, tmp231
	movl	%eax, %esi	# tmp231,
	movl	$87, %edi	#,
	call	gen_binary	#
	movq	%rax, %rbx	#, D.29247
	movq	-32(%rbp), %rcx	# pos, tmp232
	movq	-24(%rbp), %rdx	# mask, tmp233
	movl	-48(%rbp), %eax	# compute_mode, tmp234
	movl	%eax, %esi	# tmp234,
	movl	$87, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29247
	movl	-48(%rbp), %ecx	# compute_mode, tmp235
	movl	-48(%rbp), %eax	# compute_mode, tmp236
	movl	%eax, %esi	# tmp236,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, %rdx	#, D.29247
	movq	-40(%rbp), %rcx	# inner, tmp237
	movl	-48(%rbp), %eax	# compute_mode, tmp238
	movl	%eax, %esi	# tmp238,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29247
	movl	-48(%rbp), %eax	# compute_mode, tmp239
	movq	%rbx, %rcx	# D.29247,
	movl	%eax, %esi	# tmp239,
	movl	$84, %edi	#,
	call	gen_binary	#
	movq	%rax, %rbx	#, D.29247
	movq	-40(%rbp), %rax	# inner, tmp240
	movq	%rax, %rdi	# tmp240,
	call	copy_rtx	#
	movq	%rbx, %rcx	# D.29247,
	movq	%rax, %rdx	# D.29247,
	movl	$0, %esi	#,
	movl	$47, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -72(%rbp)	# tmp241, x
	.loc 1 5869 0
	jmp	.L968	#
.L966:
	.loc 1 5848 0
	nop
.L950:
	.loc 1 5871 0
	movq	-72(%rbp), %rax	# x, D.29255
	.loc 1 5872 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE23:
	.size	expand_field_assignment, .-expand_field_assignment
	.type	make_extraction, @function
make_extraction:
.LFB24:
	.loc 1 5911 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$168, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -132(%rbp)	# mode, mode
	movq	%rsi, -144(%rbp)	# inner, inner
	movq	%rdx, -152(%rbp)	# pos, pos
	movq	%rcx, -160(%rbp)	# pos_rtx, pos_rtx
	movq	%r8, -168(%rbp)	# len, len
	movl	%r9d, -136(%rbp)	# unsignedp, unsignedp
	.loc 1 5915 0
	movq	-144(%rbp), %rax	# inner, tmp208
	movzbl	2(%rax), %eax	# inner_40(D)->mode, D.29257
	movzbl	%al, %eax	# D.29257, tmp209
	movl	%eax, -124(%rbp)	# tmp209, is_mode
	.loc 1 5917 0
	movl	byte_mode(%rip), %eax	# byte_mode, tmp210
	movl	%eax, -120(%rbp)	# tmp210, wanted_inner_mode
	.loc 1 5918 0
	movl	word_mode(%rip), %eax	# word_mode, tmp211
	movl	%eax, -116(%rbp)	# tmp211, wanted_inner_reg_mode
	.loc 1 5919 0
	movl	word_mode(%rip), %eax	# word_mode, tmp212
	movl	%eax, -112(%rbp)	# tmp212, pos_mode
	.loc 1 5920 0
	movl	word_mode(%rip), %eax	# word_mode, tmp213
	movl	%eax, -108(%rbp)	# tmp213, extraction_mode
	.loc 1 5921 0
	movq	-168(%rbp), %rax	# len, tmp214
	movl	$1, %edx	#,
	movl	$1, %esi	#,
	movl	%eax, %edi	# D.29258,
	call	mode_for_size	#
	movl	%eax, -96(%rbp)	# tmp215, tmode
	.loc 1 5922 0
	movl	$0, -104(%rbp)	#, spans_byte
	.loc 1 5923 0
	movq	$0, -88(%rbp)	#, new
	.loc 1 5924 0
	movq	-160(%rbp), %rax	# pos_rtx, tmp216
	movq	%rax, -72(%rbp)	# tmp216, orig_pos_rtx
	.loc 1 5928 0
	movq	-144(%rbp), %rax	# inner, tmp217
	movzwl	(%rax), %eax	# inner_40(D)->code, D.29259
	cmpw	$48, %ax	#, D.29259
	jne	.L972	#,
	.loc 1 5932 0
	movl	$1, -104(%rbp)	#, spans_byte
	movq	-144(%rbp), %rax	# inner, tmp218
	movq	8(%rax), %rax	# inner_40(D)->fld[0].rtx, tmp219
	movq	%rax, -144(%rbp)	# tmp219, inner
	jmp	.L973	#
.L972:
	.loc 1 5933 0
	movq	-144(%rbp), %rax	# inner, tmp220
	movzwl	(%rax), %eax	# inner_40(D)->code, D.29259
	cmpw	$63, %ax	#, D.29259
	jne	.L973	#,
	.loc 1 5933 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rax	# inner, tmp221
	movq	%rax, %rdi	# tmp221,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29260
	je	.L973	#,
	.loc 1 5940 0 is_stmt 1
	movq	-144(%rbp), %rax	# inner, tmp222
	movq	8(%rax), %rax	# inner_40(D)->fld[0].rtx, D.29261
	movzwl	(%rax), %eax	# _59->code, D.29259
	cmpw	$66, %ax	#, D.29259
	jne	.L974	#,
	.loc 1 5941 0
	movq	-144(%rbp), %rax	# inner, tmp223
	movq	8(%rax), %rax	# inner_40(D)->fld[0].rtx, D.29261
	movzbl	2(%rax), %eax	# _61->mode, D.29257
	movzbl	%al, %eax	# D.29257, tmp224
	movl	%eax, -124(%rbp)	# tmp224, is_mode
.L974:
	.loc 1 5942 0
	movq	-144(%rbp), %rax	# inner, tmp225
	movq	8(%rax), %rax	# inner_40(D)->fld[0].rtx, tmp226
	movq	%rax, -144(%rbp)	# tmp226, inner
.L973:
	.loc 1 5945 0
	movq	-144(%rbp), %rax	# inner, tmp227
	movzbl	2(%rax), %eax	# inner_1->mode, D.29257
	movzbl	%al, %eax	# D.29257, tmp228
	movl	%eax, -92(%rbp)	# tmp228, inner_mode
	.loc 1 5947 0
	cmpq	$0, -160(%rbp)	#, pos_rtx
	je	.L975	#,
	.loc 1 5947 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# pos_rtx, tmp229
	movzwl	(%rax), %eax	# pos_rtx_52(D)->code, D.29259
	cmpw	$54, %ax	#, D.29259
	jne	.L975	#,
	.loc 1 5948 0 is_stmt 1
	movq	-160(%rbp), %rax	# pos_rtx, tmp230
	movq	8(%rax), %rax	# pos_rtx_52(D)->fld[0].rtwint, tmp231
	movq	%rax, -152(%rbp)	# tmp231, pos
	movq	$0, -160(%rbp)	#, pos_rtx
.L975:
	.loc 1 5963 0
	cmpl	$51, -96(%rbp)	#, tmode
	je	.L976	#,
	.loc 1 5964 0
	cmpl	$0, -104(%rbp)	#, spans_byte
	je	.L977	#,
	.loc 1 5964 0 is_stmt 0 discriminator 1
	movl	-92(%rbp), %eax	# inner_mode, tmp232
	cmpl	-96(%rbp), %eax	# tmode, tmp232
	jne	.L976	#,
.L977:
	.loc 1 5965 0 is_stmt 1
	cmpq	$0, -160(%rbp)	#, pos_rtx
	jne	.L978	#,
	.loc 1 5965 0 is_stmt 0 discriminator 1
	movl	target_flags(%rip), %eax	# target_flags, target_flags.836
	andl	$33554432, %eax	#, D.29260
	testl	%eax, %eax	# D.29260
	je	.L979	#,
	movl	$64, %ebx	#, iftmp.835
	jmp	.L980	#
.L979:
	.loc 1 5965 0 discriminator 2
	movl	$32, %ebx	#, iftmp.835
.L980:
	.loc 1 5965 0 discriminator 3
	movq	-152(%rbp), %rax	# pos, tmp233
	cqto
	idivq	%rbx	# iftmp.835
	movq	%rdx, %rcx	# tmp234, tmp234
	movq	%rcx, %rax	# tmp234, D.29262
	testq	%rax, %rax	# D.29262
	jne	.L978	#,
	.loc 1 5966 0 is_stmt 1
	movq	-144(%rbp), %rax	# inner, tmp236
	movzwl	(%rax), %eax	# inner_1->code, D.29259
	cmpw	$66, %ax	#, D.29259
	je	.L978	#,
	.loc 1 5967 0
	cmpl	$0, 16(%rbp)	#, in_dest
	je	.L981	#,
	.loc 1 5968 0
	movq	-144(%rbp), %rax	# inner, tmp237
	movzwl	(%rax), %eax	# inner_1->code, D.29259
	cmpw	$61, %ax	#, D.29259
	jne	.L978	#,
	.loc 1 5969 0
	movl	-96(%rbp), %eax	# tmode, tmp238
	movl	%eax, %esi	# tmp238,
	movl	$64, %edi	#,
	call	have_insn_for	#
	testl	%eax, %eax	# D.29260
	jne	.L981	#,
.L978:
	.loc 1 5970 0
	movq	-144(%rbp), %rax	# inner, tmp239
	movzwl	(%rax), %eax	# inner_1->code, D.29259
	cmpw	$66, %ax	#, D.29259
	jne	.L976	#,
	.loc 1 5970 0 is_stmt 0 discriminator 1
	cmpq	$0, -160(%rbp)	#, pos_rtx
	jne	.L976	#,
	.loc 1 5973 0 is_stmt 1
	movq	-152(%rbp), %rax	# pos, pos.837
	andl	$7, %eax	#, D.29263
	.loc 1 5971 0
	testq	%rax, %rax	# D.29263
	jne	.L976	#,
	.loc 1 5976 0
	movl	-92(%rbp), %eax	# inner_mode, inner_mode.838
	cltq
	movzwl	mode_bitsize(%rax,%rax), %edx	# mode_bitsize, D.29259
	movl	-96(%rbp), %eax	# tmode, tmode.839
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29259
	cmpw	%ax, %dx	# D.29259, D.29259
	jb	.L976	#,
	.loc 1 5977 0
	movl	-92(%rbp), %eax	# inner_mode, tmp242
	cmpl	-96(%rbp), %eax	# tmode, tmp242
	je	.L981	#,
	.loc 1 5978 0
	movq	-144(%rbp), %rax	# inner, tmp243
	movq	8(%rax), %rax	# inner_1->fld[0].rtx, D.29261
	movq	%rax, %rdi	# D.29261,
	call	mode_dependent_address_p	#
	testl	%eax, %eax	# D.29260
	jne	.L976	#,
	.loc 1 5979 0
	movq	-144(%rbp), %rax	# inner, tmp244
	movzbl	3(%rax), %eax	# *inner_1, D.29257
	andl	$8, %eax	#, D.29257
	testb	%al, %al	# D.29257
	jne	.L976	#,
.L981:
	.loc 1 5988 0
	movq	-144(%rbp), %rax	# inner, tmp245
	movzwl	(%rax), %eax	# inner_1->code, D.29259
	cmpw	$66, %ax	#, D.29259
	jne	.L982	#,
.LBB67:
	.loc 1 5996 0
	movq	-152(%rbp), %rax	# pos, tmp247
	leaq	7(%rax), %rdx	#, tmp249
	testq	%rax, %rax	# tmp248
	cmovs	%rdx, %rax	# tmp249,, tmp248
	sarq	$3, %rax	#, tmp250
	movq	%rax, -64(%rbp)	# tmp250, offset
	.loc 1 5998 0
	movq	-64(%rbp), %rdx	# offset, tmp251
	movl	-96(%rbp), %esi	# tmode, tmp252
	movq	-144(%rbp), %rax	# inner, tmp253
	movl	$1, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp253,
	call	adjust_address_1	#
	movq	%rax, -88(%rbp)	# tmp254, new
.LBE67:
	jmp	.L983	#
.L982:
	.loc 1 6000 0
	movq	-144(%rbp), %rax	# inner, tmp255
	movzwl	(%rax), %eax	# inner_1->code, D.29259
	cmpw	$61, %ax	#, D.29259
	jne	.L984	#,
	.loc 1 6004 0
	movl	-96(%rbp), %eax	# tmode, tmp256
	cmpl	-92(%rbp), %eax	# inner_mode, tmp256
	je	.L985	#,
.LBB68:
	.loc 1 6006 0
	movl	target_flags(%rip), %eax	# target_flags, target_flags.843
	andl	$33554432, %eax	#, D.29260
	testl	%eax, %eax	# D.29260
	je	.L986	#,
	.loc 1 6006 0 is_stmt 0 discriminator 1
	movl	$64, %ebx	#, iftmp.842
	jmp	.L987	#
.L986:
	.loc 1 6006 0 discriminator 2
	movl	$32, %ebx	#, iftmp.842
.L987:
	.loc 1 6006 0 discriminator 3
	movq	-152(%rbp), %rax	# pos, tmp259
	cqto
	idivq	%rbx	# iftmp.842
	movq	%rax, -56(%rbp)	# tmp257, final_word
	.loc 1 6014 0 is_stmt 1 discriminator 3
	movl	target_flags(%rip), %eax	# target_flags, target_flags.849
	andl	$33554432, %eax	#, D.29260
	testl	%eax, %eax	# D.29260
	je	.L988	#,
	.loc 1 6014 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.848
	jmp	.L989	#
.L988:
	.loc 1 6014 0 discriminator 2
	movl	$4, %eax	#, iftmp.848
.L989:
	.loc 1 6014 0 discriminator 3
	movq	-56(%rbp), %rdx	# final_word, tmp261
	imulq	%rdx, %rax	# tmp261, tmp260
	movq	%rax, -56(%rbp)	# tmp260, final_word
	.loc 1 6020 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# final_word, tmp262
	movl	%eax, %edx	# tmp262, D.29260
	movq	-144(%rbp), %rcx	# inner, tmp263
	movl	-96(%rbp), %eax	# tmode, tmp264
	movq	%rcx, %rsi	# tmp263,
	movl	%eax, %edi	# tmp264,
	call	gen_rtx_SUBREG	#
	movq	%rax, -88(%rbp)	# tmp265, new
.LBE68:
	jmp	.L983	#
.L985:
	.loc 1 6023 0
	movq	-144(%rbp), %rax	# inner, tmp266
	movq	%rax, -88(%rbp)	# tmp266, new
	jmp	.L983	#
.L984:
	.loc 1 6026 0
	cmpq	$63, -168(%rbp)	#, len
	ja	.L991	#,
	.loc 1 6029 0
	movq	-168(%rbp), %rax	# len, tmp267
	movl	$1, %edx	#, tmp268
	movl	%eax, %ecx	# D.29260, tmp393
	salq	%cl, %rdx	# tmp393, D.29264
	movq	%rdx, %rax	# D.29264, D.29264
	.loc 1 6026 0
	subq	$1, %rax	#, iftmp.854
	jmp	.L992	#
.L991:
	.loc 1 6026 0 is_stmt 0 discriminator 1
	movq	$-1, %rax	#, iftmp.854
.L992:
	.loc 1 6026 0 discriminator 2
	movl	-96(%rbp), %esi	# tmode, tmp269
	movq	-144(%rbp), %rdi	# inner, tmp270
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# iftmp.854,
	call	force_to_mode	#
	movq	%rax, -88(%rbp)	# tmp271, new
.L983:
	.loc 1 6035 0 is_stmt 1
	cmpl	$0, 16(%rbp)	#, in_dest
	je	.L993	#,
	.loc 1 6036 0
	movq	-88(%rbp), %rax	# new, tmp272
	movzwl	(%rax), %eax	# new_26->code, D.29259
	.loc 1 6037 0
	cmpw	$66, %ax	#, D.29259
	je	.L994	#,
	.loc 1 6037 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# new, tmp273
	movzwl	(%rax), %eax	# new_26->code, D.29259
	.loc 1 6039 0 is_stmt 1 discriminator 1
	cmpw	$63, %ax	#, D.29259
	je	.L995	#,
	.loc 1 6038 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29261
	.loc 1 6039 0
	movl	-96(%rbp), %eax	# tmode, tmp274
	movl	%eax, %esi	# tmp274,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L997	#
.L995:
	.loc 1 6039 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# new, tmp275
	movq	%rax, %rdx	# tmp275,
	movl	$0, %esi	#,
	movl	$64, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L998	#
.L994:
	.loc 1 6037 0 is_stmt 1 discriminator 2
	movq	-88(%rbp), %rax	# new, iftmp.855
.L997:
	.loc 1 6036 0
	jmp	.L998	#
.L993:
	.loc 1 6041 0
	movl	-132(%rbp), %eax	# mode, tmp276
	cmpl	-96(%rbp), %eax	# tmode, tmp276
	jne	.L999	#,
	.loc 1 6042 0
	movq	-88(%rbp), %rax	# new, D.29256
	jmp	.L998	#
.L999:
	.loc 1 6044 0
	movq	-88(%rbp), %rax	# new, tmp277
	movzwl	(%rax), %eax	# new_26->code, D.29259
	cmpw	$54, %ax	#, D.29259
	jne	.L1000	#,
	.loc 1 6045 0
	movq	-88(%rbp), %rax	# new, tmp278
	movq	8(%rax), %rax	# new_26->fld[0].rtwint, D.29262
	movl	-132(%rbp), %edx	# mode, tmp279
	movl	%edx, %esi	# tmp279,
	movq	%rax, %rdi	# D.29262,
	call	trunc_int_for_mode	#
	movq	%rax, %rsi	# D.29262,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	jmp	.L998	#
.L1000:
	.loc 1 6050 0
	movl	flag_expensive_optimizations(%rip), %eax	# flag_expensive_optimizations, flag_expensive_optimizations.857
	testl	%eax, %eax	# flag_expensive_optimizations.857
	je	.L1001	#,
	.loc 1 6051 0
	movl	-96(%rbp), %eax	# tmode, tmode.858
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29259
	cmpw	$64, %ax	#, D.29259
	ja	.L1001	#,
	.loc 1 6052 0
	movl	-96(%rbp), %edx	# tmode, tmp281
	movq	-88(%rbp), %rax	# new, tmp282
	movl	%edx, %esi	# tmp281,
	movq	%rax, %rdi	# tmp282,
	call	nonzero_bits	#
	.loc 1 6054 0
	movl	-96(%rbp), %edx	# tmode, tmode.859
	movslq	%edx, %rdx	# tmode.859, tmp283
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29264
	.loc 1 6055 0
	shrq	%rdx	# D.29264
	.loc 1 6053 0
	notq	%rdx	# D.29264
	andq	%rdx, %rax	# D.29264, D.29264
	.loc 1 6052 0
	testq	%rax, %rax	# D.29264
	jne	.L1001	#,
.LBB69:
	.loc 1 6058 0
	movq	-88(%rbp), %rdx	# new, tmp284
	movl	-132(%rbp), %eax	# mode, tmp285
	movl	%eax, %esi	# tmp285,
	movl	$121, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, -48(%rbp)	# tmp286, temp
	.loc 1 6059 0
	movq	-88(%rbp), %rdx	# new, tmp287
	movl	-132(%rbp), %eax	# mode, tmp288
	movl	%eax, %esi	# tmp288,
	movl	$120, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, -40(%rbp)	# tmp289, temp1
	.loc 1 6063 0
	movq	-48(%rbp), %rax	# temp, tmp290
	movl	$47, %esi	#,
	movq	%rax, %rdi	# tmp290,
	call	rtx_cost	#
	movl	%eax, %ebx	#, D.29260
	movq	-40(%rbp), %rax	# temp1, tmp291
	movl	$47, %esi	#,
	movq	%rax, %rdi	# tmp291,
	call	rtx_cost	#
	cmpl	%eax, %ebx	# D.29260, D.29260
	jg	.L1002	#,
	.loc 1 6064 0
	movq	-48(%rbp), %rax	# temp, D.29256
	jmp	.L998	#
.L1002:
	.loc 1 6065 0
	movq	-40(%rbp), %rax	# temp1, D.29256
	jmp	.L998	#
.L1001:
.LBE69:
	.loc 1 6071 0
	cmpl	$0, -136(%rbp)	#, unsignedp
	je	.L1003	#,
	.loc 1 6071 0 is_stmt 0 discriminator 1
	movl	$121, %eax	#, iftmp.860
	jmp	.L1004	#
.L1003:
	.loc 1 6071 0 discriminator 2
	movl	$120, %eax	#, iftmp.860
.L1004:
	.loc 1 6071 0 discriminator 3
	movq	-88(%rbp), %rdx	# new, tmp292
	movl	-132(%rbp), %ecx	# mode, tmp293
	movl	%ecx, %esi	# tmp293,
	movl	%eax, %edi	# iftmp.860,
	call	gen_rtx_fmt_e	#
	jmp	.L998	#
.L976:
	.loc 1 6078 0 is_stmt 1
	cmpq	$0, -160(%rbp)	#, pos_rtx
	jne	.L1005	#,
	.loc 1 6078 0 is_stmt 0 discriminator 1
	cmpq	$0, -152(%rbp)	#, pos
	jne	.L1005	#,
	cmpl	$0, 16(%rbp)	#, in_dest
	jne	.L1005	#,
	.loc 1 6079 0 is_stmt 1
	cmpl	$0, 24(%rbp)	#, in_compare
	jne	.L1005	#,
	.loc 1 6079 0 is_stmt 0 discriminator 1
	cmpl	$0, -104(%rbp)	#, spans_byte
	jne	.L1005	#,
	cmpl	$0, -136(%rbp)	#, unsignedp
	je	.L1005	#,
	.loc 1 6080 0 is_stmt 1
	movl	$0, %eax	#, D.29256
	jmp	.L998	#
.L1005:
	.loc 1 6087 0
	cmpl	$0, -104(%rbp)	#, spans_byte
	jne	.L1006	#,
	.loc 1 6087 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rax	# inner, tmp294
	movzwl	(%rax), %eax	# inner_1->code, D.29259
	cmpw	$66, %ax	#, D.29259
	jne	.L1006	#,
	.loc 1 6088 0 is_stmt 1
	cmpq	$0, -160(%rbp)	#, pos_rtx
	jne	.L1007	#,
	.loc 1 6088 0 is_stmt 0 discriminator 1
	movq	-152(%rbp), %rdx	# pos, pos.861
	movq	-168(%rbp), %rax	# len, tmp295
	addq	%rax, %rdx	# tmp295, D.29264
	movl	-124(%rbp), %eax	# is_mode, is_mode.862
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29259
	movzwl	%ax, %eax	# D.29259, D.29264
	cmpq	%rax, %rdx	# D.29264, D.29264
	ja	.L1008	#,
.L1007:
	.loc 1 6089 0 is_stmt 1
	cmpq	$0, -160(%rbp)	#, pos_rtx
	je	.L1006	#,
	.loc 1 6089 0 is_stmt 0 discriminator 1
	cmpq	$1, -168(%rbp)	#, len
	je	.L1006	#,
.L1008:
	.loc 1 6090 0 is_stmt 1
	movl	$0, %eax	#, D.29256
	jmp	.L998	#
.L1006:
	.loc 1 6094 0
	cmpl	$0, 16(%rbp)	#, in_dest
	je	.L1009	#,
	.loc 1 6094 0 is_stmt 0 discriminator 1
	movl	$-1, %esi	#,
	movl	$0, %edi	#,
	call	mode_for_extraction	#
	cmpl	$59, %eax	#, D.29265
	je	.L1009	#,
	.loc 1 6096 0 is_stmt 1
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	mode_for_extraction	#
	movl	%eax, -116(%rbp)	# tmp297, wanted_inner_reg_mode
	.loc 1 6097 0
	movl	$2, %esi	#,
	movl	$0, %edi	#,
	call	mode_for_extraction	#
	movl	%eax, -112(%rbp)	# tmp298, pos_mode
	.loc 1 6098 0
	movl	$3, %esi	#,
	movl	$0, %edi	#,
	call	mode_for_extraction	#
	movl	%eax, -108(%rbp)	# tmp299, extraction_mode
.L1009:
	.loc 1 6101 0
	cmpl	$0, 16(%rbp)	#, in_dest
	jne	.L1010	#,
	.loc 1 6101 0 is_stmt 0 discriminator 1
	cmpl	$0, -136(%rbp)	#, unsignedp
	je	.L1010	#,
	.loc 1 6102 0 is_stmt 1
	movl	$-1, %esi	#,
	movl	$2, %edi	#,
	call	mode_for_extraction	#
	cmpl	$59, %eax	#, D.29265
	je	.L1010	#,
	.loc 1 6104 0
	movl	$1, %esi	#,
	movl	$2, %edi	#,
	call	mode_for_extraction	#
	movl	%eax, -116(%rbp)	# tmp300, wanted_inner_reg_mode
	.loc 1 6105 0
	movl	$3, %esi	#,
	movl	$2, %edi	#,
	call	mode_for_extraction	#
	movl	%eax, -112(%rbp)	# tmp301, pos_mode
	.loc 1 6106 0
	movl	$0, %esi	#,
	movl	$2, %edi	#,
	call	mode_for_extraction	#
	movl	%eax, -108(%rbp)	# tmp302, extraction_mode
.L1010:
	.loc 1 6109 0
	cmpl	$0, 16(%rbp)	#, in_dest
	jne	.L1011	#,
	.loc 1 6109 0 is_stmt 0 discriminator 1
	cmpl	$0, -136(%rbp)	#, unsignedp
	jne	.L1011	#,
	.loc 1 6110 0 is_stmt 1
	movl	$-1, %esi	#,
	movl	$1, %edi	#,
	call	mode_for_extraction	#
	cmpl	$59, %eax	#, D.29265
	je	.L1011	#,
	.loc 1 6112 0
	movl	$1, %esi	#,
	movl	$1, %edi	#,
	call	mode_for_extraction	#
	movl	%eax, -116(%rbp)	# tmp303, wanted_inner_reg_mode
	.loc 1 6113 0
	movl	$3, %esi	#,
	movl	$1, %edi	#,
	call	mode_for_extraction	#
	movl	%eax, -112(%rbp)	# tmp304, pos_mode
	.loc 1 6114 0
	movl	$0, %esi	#,
	movl	$1, %edi	#,
	call	mode_for_extraction	#
	movl	%eax, -108(%rbp)	# tmp305, extraction_mode
.L1011:
	.loc 1 6119 0
	cmpl	$0, -132(%rbp)	#, mode
	je	.L1012	#,
	.loc 1 6120 0
	movl	-108(%rbp), %eax	# extraction_mode, extraction_mode.863
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29257
	movl	-132(%rbp), %eax	# mode, mode.864
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29257
	cmpb	%al, %dl	# D.29257, D.29257
	jae	.L1012	#,
	.loc 1 6121 0
	movl	-132(%rbp), %eax	# mode, tmp308
	movl	%eax, -108(%rbp)	# tmp308, extraction_mode
.L1012:
	.loc 1 6123 0
	cmpq	$0, -160(%rbp)	#, pos_rtx
	je	.L1013	#,
	.loc 1 6123 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# pos_rtx, tmp309
	movzbl	2(%rax), %eax	# pos_rtx_7->mode, D.29257
	testb	%al, %al	# D.29257
	je	.L1013	#,
	.loc 1 6124 0 is_stmt 1
	movl	-112(%rbp), %eax	# pos_mode, pos_mode.865
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29257
	movq	-160(%rbp), %rax	# pos_rtx, tmp311
	movzbl	2(%rax), %eax	# pos_rtx_7->mode, D.29257
	movzbl	%al, %eax	# D.29257, D.29260
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29257
	cmpb	%al, %dl	# D.29257, D.29257
	jae	.L1013	#,
	.loc 1 6125 0
	movq	-160(%rbp), %rax	# pos_rtx, tmp313
	movzbl	2(%rax), %eax	# pos_rtx_7->mode, D.29257
	movzbl	%al, %eax	# D.29257, tmp314
	movl	%eax, -112(%rbp)	# tmp314, pos_mode
.L1013:
	.loc 1 6130 0
	movq	-144(%rbp), %rax	# inner, tmp315
	movzwl	(%rax), %eax	# inner_1->code, D.29259
	cmpw	$66, %ax	#, D.29259
	je	.L1014	#,
	.loc 1 6131 0
	movl	-116(%rbp), %eax	# wanted_inner_reg_mode, tmp316
	movl	%eax, -120(%rbp)	# tmp316, wanted_inner_mode
	jmp	.L1015	#
.L1014:
	.loc 1 6132 0
	movl	-92(%rbp), %eax	# inner_mode, tmp317
	cmpl	-120(%rbp), %eax	# wanted_inner_mode, tmp317
	je	.L1015	#,
	.loc 1 6133 0
	movq	-144(%rbp), %rax	# inner, tmp318
	movq	8(%rax), %rax	# inner_1->fld[0].rtx, D.29261
	movq	%rax, %rdi	# D.29261,
	call	mode_dependent_address_p	#
	testl	%eax, %eax	# D.29260
	jne	.L1016	#,
	.loc 1 6134 0
	movq	-144(%rbp), %rax	# inner, tmp319
	movzbl	3(%rax), %eax	# *inner_1, D.29257
	andl	$8, %eax	#, D.29257
	testb	%al, %al	# D.29257
	je	.L1015	#,
.L1016:
	.loc 1 6135 0
	movl	-108(%rbp), %eax	# extraction_mode, tmp320
	movl	%eax, -120(%rbp)	# tmp320, wanted_inner_mode
.L1015:
	.loc 1 6137 0
	movq	-152(%rbp), %rax	# pos, tmp321
	movq	%rax, -32(%rbp)	# tmp321, orig_pos
	.loc 1 6164 0
	cmpl	$0, -120(%rbp)	#, wanted_inner_mode
	je	.L1017	#,
	.loc 1 6165 0
	movl	-120(%rbp), %eax	# wanted_inner_mode, wanted_inner_mode.870
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29257
	movl	-124(%rbp), %eax	# is_mode, is_mode.871
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29257
	cmpb	%al, %dl	# D.29257, D.29257
	jae	.L1017	#,
	.loc 1 6166 0
	movq	-144(%rbp), %rax	# inner, tmp324
	movzwl	(%rax), %eax	# inner_1->code, D.29259
	cmpw	$66, %ax	#, D.29259
	jne	.L1017	#,
	.loc 1 6167 0
	movl	-92(%rbp), %eax	# inner_mode, tmp325
	cmpl	-120(%rbp), %eax	# wanted_inner_mode, tmp325
	je	.L1018	#,
	.loc 1 6168 0
	movq	-144(%rbp), %rax	# inner, tmp326
	movq	8(%rax), %rax	# inner_1->fld[0].rtx, D.29261
	movq	%rax, %rdi	# D.29261,
	call	mode_dependent_address_p	#
	testl	%eax, %eax	# D.29260
	jne	.L1017	#,
	.loc 1 6169 0
	movq	-144(%rbp), %rax	# inner, tmp327
	movzbl	3(%rax), %eax	# *inner_1, D.29257
	andl	$8, %eax	#, D.29257
	testb	%al, %al	# D.29257
	jne	.L1017	#,
.L1018:
.LBB70:
	.loc 1 6171 0
	movl	$0, -100(%rbp)	#, offset
	.loc 1 6185 0
	cmpq	$0, -160(%rbp)	#, pos_rtx
	jne	.L1035	#,
	.loc 1 6187 0
	movq	-152(%rbp), %rax	# pos, tmp328
	leaq	7(%rax), %rdx	#, tmp330
	testq	%rax, %rax	# tmp329
	cmovs	%rdx, %rax	# tmp330,, tmp329
	sarq	$3, %rax	#, tmp331
	movl	%eax, %edx	# D.29262, D.29266
	movl	-100(%rbp), %eax	# offset, offset.874
	addl	%edx, %eax	# D.29266, D.29266
	movl	%eax, -100(%rbp)	# D.29266, offset
	.loc 1 6188 0
	movl	-120(%rbp), %eax	# wanted_inner_mode, wanted_inner_mode.875
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29259
	movzwl	%ax, %ecx	# D.29259, D.29262
	movq	-152(%rbp), %rax	# pos, tmp334
	cqto
	idivq	%rcx	# D.29262
	movq	%rdx, -152(%rbp)	# tmp335, pos
.L1035:
	.loc 1 6197 0
	cmpl	$0, -100(%rbp)	#, offset
	jne	.L1020	#,
	.loc 1 6197 0 is_stmt 0 discriminator 1
	movl	-92(%rbp), %eax	# inner_mode, tmp337
	cmpl	-120(%rbp), %eax	# wanted_inner_mode, tmp337
	je	.L1021	#,
.L1020:
	.loc 1 6198 0 is_stmt 1
	movl	-100(%rbp), %eax	# offset, tmp338
	movslq	%eax, %rdx	# tmp338, D.29262
	movl	-120(%rbp), %esi	# wanted_inner_mode, tmp339
	movq	-144(%rbp), %rax	# inner, tmp340
	movl	$1, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp340,
	call	adjust_address_1	#
	movq	%rax, -144(%rbp)	# tmp341, inner
.LBE70:
	.loc 1 6170 0
	jmp	.L1022	#
.L1021:
	jmp	.L1022	#
.L1017:
	.loc 1 6204 0
	movq	-144(%rbp), %rax	# inner, tmp342
	movzwl	(%rax), %eax	# inner_1->code, D.29259
	cmpw	$66, %ax	#, D.29259
	je	.L1022	#,
	.loc 1 6206 0
	movq	-144(%rbp), %rax	# inner, tmp343
	movzbl	2(%rax), %eax	# inner_1->mode, D.29257
	movzbl	%al, %eax	# D.29257, D.29258
	cmpl	-120(%rbp), %eax	# wanted_inner_mode, D.29258
	je	.L1023	#,
	.loc 1 6207 0
	cmpq	$0, -160(%rbp)	#, pos_rtx
	jne	.L1024	#,
	.loc 1 6208 0
	movq	-32(%rbp), %rdx	# orig_pos, orig_pos.878
	movq	-168(%rbp), %rax	# len, tmp344
	addq	%rax, %rdx	# tmp344, D.29264
	movl	-120(%rbp), %eax	# wanted_inner_mode, wanted_inner_mode.879
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29259
	movzwl	%ax, %eax	# D.29259, D.29264
	cmpq	%rax, %rdx	# D.29264, D.29264
	jbe	.L1023	#,
.L1024:
	.loc 1 6209 0
	movl	$0, %eax	#, D.29256
	jmp	.L998	#
.L1023:
	.loc 1 6211 0
	cmpq	$0, -160(%rbp)	#, pos_rtx
	jne	.L1025	#,
	.loc 1 6213 0
	movq	-32(%rbp), %rdx	# orig_pos, orig_pos.881
	movq	-168(%rbp), %rax	# len, tmp346
	addq	%rdx, %rax	# orig_pos.881, D.29264
	cmpq	$63, %rax	#, D.29264
	ja	.L1025	#,
	.loc 1 6215 0
	movq	-168(%rbp), %rax	# len, tmp347
	movl	$1, %edx	#, tmp348
	movl	%eax, %ecx	# D.29260, tmp395
	salq	%cl, %rdx	# tmp395, D.29264
	movq	%rdx, %rax	# D.29264, D.29264
	leaq	-1(%rax), %rdx	#, D.29264
	.loc 1 6216 0
	movq	-32(%rbp), %rax	# orig_pos, tmp349
	.loc 1 6211 0
	movl	%eax, %ecx	# D.29260, tmp397
	salq	%cl, %rdx	# tmp397, iftmp.880
	movq	%rdx, %rax	# iftmp.880, iftmp.880
	jmp	.L1026	#
.L1025:
	.loc 1 6211 0 is_stmt 0 discriminator 1
	movq	$-1, %rax	#, iftmp.880
.L1026:
	.loc 1 6211 0 discriminator 2
	movl	-120(%rbp), %esi	# wanted_inner_mode, tmp350
	movq	-144(%rbp), %rdi	# inner, tmp351
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# iftmp.880,
	call	force_to_mode	#
	movq	%rax, -144(%rbp)	# tmp352, inner
.L1022:
	.loc 1 6222 0 is_stmt 1
	cmpq	$0, -160(%rbp)	#, pos_rtx
	je	.L1027	#,
	.loc 1 6223 0
	movl	-112(%rbp), %eax	# pos_mode, pos_mode.882
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29257
	movq	-160(%rbp), %rax	# pos_rtx, tmp354
	movzbl	2(%rax), %eax	# pos_rtx_7->mode, D.29257
	movzbl	%al, %eax	# D.29257, D.29260
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29257
	cmpb	%al, %dl	# D.29257, D.29257
	jbe	.L1027	#,
.LBB71:
	.loc 1 6225 0
	movq	-160(%rbp), %rdx	# pos_rtx, tmp356
	movl	-112(%rbp), %eax	# pos_mode, tmp357
	movl	%eax, %esi	# tmp357,
	movl	$121, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, -80(%rbp)	# tmp358, temp
	.loc 1 6231 0
	movl	flag_expensive_optimizations(%rip), %eax	# flag_expensive_optimizations, flag_expensive_optimizations.883
	testl	%eax, %eax	# flag_expensive_optimizations.883
	je	.L1028	#,
	.loc 1 6232 0
	movq	-160(%rbp), %rax	# pos_rtx, tmp359
	movzbl	2(%rax), %eax	# pos_rtx_7->mode, D.29257
	movzbl	%al, %eax	# D.29257, D.29260
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29259
	cmpw	$64, %ax	#, D.29259
	ja	.L1028	#,
	.loc 1 6233 0
	movq	-160(%rbp), %rax	# pos_rtx, tmp361
	movzbl	2(%rax), %eax	# pos_rtx_7->mode, D.29257
	movzbl	%al, %edx	# D.29257, D.29265
	movq	-160(%rbp), %rax	# pos_rtx, tmp362
	movl	%edx, %esi	# D.29265,
	movq	%rax, %rdi	# tmp362,
	call	nonzero_bits	#
	.loc 1 6235 0
	movq	-160(%rbp), %rdx	# pos_rtx, tmp363
	movzbl	2(%rdx), %edx	# pos_rtx_7->mode, D.29257
	movzbl	%dl, %edx	# D.29257, D.29260
	movslq	%edx, %rdx	# D.29260, tmp364
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29264
	.loc 1 6236 0
	shrq	%rdx	# D.29264
	.loc 1 6234 0
	notq	%rdx	# D.29264
	andq	%rdx, %rax	# D.29264, D.29264
	.loc 1 6233 0
	testq	%rax, %rax	# D.29264
	jne	.L1028	#,
.LBB72:
	.loc 1 6239 0
	movq	-160(%rbp), %rdx	# pos_rtx, tmp365
	movl	-112(%rbp), %eax	# pos_mode, tmp366
	movl	%eax, %esi	# tmp366,
	movl	$120, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, -24(%rbp)	# tmp367, temp1
	.loc 1 6243 0
	movq	-24(%rbp), %rax	# temp1, tmp368
	movl	$47, %esi	#,
	movq	%rax, %rdi	# tmp368,
	call	rtx_cost	#
	movl	%eax, %ebx	#, D.29260
	movq	-80(%rbp), %rax	# temp, tmp369
	movl	$47, %esi	#,
	movq	%rax, %rdi	# tmp369,
	call	rtx_cost	#
	cmpl	%eax, %ebx	# D.29260, D.29260
	jge	.L1028	#,
	.loc 1 6244 0
	movq	-24(%rbp), %rax	# temp1, tmp370
	movq	%rax, -80(%rbp)	# tmp370, temp
.L1028:
.LBE72:
	.loc 1 6246 0
	movq	-80(%rbp), %rax	# temp, tmp371
	movq	%rax, -160(%rbp)	# tmp371, pos_rtx
.LBE71:
	.loc 1 6224 0
	jmp	.L1029	#
.L1027:
	.loc 1 6248 0
	cmpq	$0, -160(%rbp)	#, pos_rtx
	je	.L1029	#,
	.loc 1 6249 0
	movl	-112(%rbp), %eax	# pos_mode, pos_mode.884
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29257
	movq	-160(%rbp), %rax	# pos_rtx, tmp373
	movzbl	2(%rax), %eax	# pos_rtx_7->mode, D.29257
	movzbl	%al, %eax	# D.29257, D.29260
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29257
	cmpb	%al, %dl	# D.29257, D.29257
	jae	.L1029	#,
	.loc 1 6250 0
	movq	-160(%rbp), %rdx	# pos_rtx, tmp375
	movl	-112(%rbp), %eax	# pos_mode, tmp376
	movq	%rdx, %rsi	# tmp375,
	movl	%eax, %edi	# tmp376,
	call	gen_lowpart_for_combine	#
	movq	%rax, -160(%rbp)	# tmp377, pos_rtx
.L1029:
	.loc 1 6255 0
	cmpq	$0, -160(%rbp)	#, pos_rtx
	jne	.L1030	#,
	.loc 1 6255 0 is_stmt 0 discriminator 1
	cmpq	$0, -72(%rbp)	#, orig_pos_rtx
	je	.L1030	#,
	movq	-72(%rbp), %rax	# orig_pos_rtx, tmp378
	movq	8(%rax), %rax	# orig_pos_rtx_53->fld[0].rtwint, D.29262
	cmpq	-152(%rbp), %rax	# pos, D.29262
	jne	.L1030	#,
	.loc 1 6256 0 is_stmt 1
	movq	-72(%rbp), %rax	# orig_pos_rtx, tmp379
	movq	%rax, -160(%rbp)	# tmp379, pos_rtx
	jmp	.L1031	#
.L1030:
	.loc 1 6258 0
	cmpq	$0, -160(%rbp)	#, pos_rtx
	jne	.L1031	#,
	.loc 1 6259 0
	movq	-152(%rbp), %rax	# pos, tmp380
	movq	%rax, %rsi	# tmp380,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -160(%rbp)	# tmp381, pos_rtx
.L1031:
	.loc 1 6262 0
	movq	-168(%rbp), %rax	# len, len.885
	movq	%rax, %rsi	# len.885,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29261
	cmpl	$0, -136(%rbp)	#, unsignedp
	je	.L1032	#,
	.loc 1 6262 0 is_stmt 0 discriminator 1
	movl	$133, %eax	#, iftmp.886
	jmp	.L1033	#
.L1032:
	.loc 1 6262 0 discriminator 2
	movl	$132, %eax	#, iftmp.886
.L1033:
	.loc 1 6262 0 discriminator 3
	movq	-160(%rbp), %rdi	# pos_rtx, tmp382
	movq	-144(%rbp), %rdx	# inner, tmp383
	movl	-108(%rbp), %esi	# extraction_mode, tmp384
	movq	%rdi, %r8	# tmp382,
	movl	%eax, %edi	# iftmp.886,
	call	gen_rtx_fmt_eee	#
	movq	%rax, -88(%rbp)	# tmp385, new
	.loc 1 6264 0 is_stmt 1 discriminator 3
	cmpl	$0, 16(%rbp)	#, in_dest
	jne	.L1034	#,
	.loc 1 6265 0
	movq	-88(%rbp), %rdx	# new, tmp386
	movl	-132(%rbp), %eax	# mode, tmp387
	movq	%rdx, %rsi	# tmp386,
	movl	%eax, %edi	# tmp387,
	call	gen_lowpart_for_combine	#
	movq	%rax, -88(%rbp)	# tmp388, new
.L1034:
	.loc 1 6267 0
	movq	-88(%rbp), %rax	# new, D.29256
.L998:
	.loc 1 6268 0
	addq	$168, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE24:
	.size	make_extraction, .-make_extraction
	.type	extract_left_shift, @function
extract_left_shift:
.LFB25:
	.loc 1 6277 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# x, x
	movl	%esi, -28(%rbp)	# count, count
	.loc 1 6278 0
	movq	-24(%rbp), %rax	# x, tmp88
	movzwl	(%rax), %eax	# x_2(D)->code, D.29270
	movzwl	%ax, %eax	# D.29270, tmp89
	movl	%eax, -16(%rbp)	# tmp89, code
	.loc 1 6279 0
	movq	-24(%rbp), %rax	# x, tmp90
	movzbl	2(%rax), %eax	# x_2(D)->mode, D.29271
	movzbl	%al, %eax	# D.29271, tmp91
	movl	%eax, -12(%rbp)	# tmp91, mode
	.loc 1 6282 0
	movl	-16(%rbp), %eax	# code, tmp93
	subl	$75, %eax	#, tmp92
	cmpl	$12, %eax	#, tmp92
	ja	.L1047	#,
	movl	%eax, %eax	# tmp92, tmp94
	movq	.L1039(,%rax,8), %rax	#, tmp95
	jmp	*%rax	# tmp95
	.section	.rodata
	.align 8
	.align 4
.L1039:
	.quad	.L1038
	.quad	.L1047
	.quad	.L1040
	.quad	.L1047
	.quad	.L1047
	.quad	.L1047
	.quad	.L1047
	.quad	.L1047
	.quad	.L1038
	.quad	.L1038
	.quad	.L1038
	.quad	.L1040
	.quad	.L1041
	.text
.L1041:
	.loc 1 6288 0
	movq	-24(%rbp), %rax	# x, tmp96
	movq	16(%rax), %rax	# x_2(D)->fld[1].rtx, D.29272
	movzwl	(%rax), %eax	# _7->code, D.29270
	cmpw	$54, %ax	#, D.29270
	jne	.L1042	#,
	.loc 1 6289 0
	movq	-24(%rbp), %rax	# x, tmp97
	movq	16(%rax), %rax	# x_2(D)->fld[1].rtx, D.29272
	movq	8(%rax), %rdx	# _9->fld[0].rtwint, D.29273
	movl	-28(%rbp), %eax	# count, tmp98
	cltq
	cmpq	%rax, %rdx	# D.29273, D.29273
	jl	.L1042	#,
	.loc 1 6291 0
	movq	-24(%rbp), %rax	# x, tmp99
	movq	16(%rax), %rax	# x_2(D)->fld[1].rtx, D.29272
	movq	8(%rax), %rax	# _13->fld[0].rtwint, D.29273
	.loc 1 6290 0
	movl	%eax, %edx	# D.29273, D.29274
	movl	-28(%rbp), %eax	# count, count.887
	subl	%eax, %edx	# count.887, D.29274
	movl	%edx, %eax	# D.29274, D.29274
	movl	%eax, %ecx	# D.29274, D.29275
	movq	-24(%rbp), %rax	# x, tmp100
	movq	8(%rax), %rdx	# x_2(D)->fld[0].rtx, D.29272
	movl	-12(%rbp), %eax	# mode, tmp101
	movl	%ecx, %r8d	# D.29275,
	movq	%rdx, %rcx	# D.29272,
	movl	%eax, %edx	# tmp101,
	movl	$87, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	jmp	.L1043	#
.L1042:
	.loc 1 6292 0
	jmp	.L1044	#
.L1040:
	.loc 1 6295 0
	movq	-24(%rbp), %rax	# x, tmp102
	movq	8(%rax), %rax	# x_2(D)->fld[0].rtx, D.29272
	movl	-28(%rbp), %edx	# count, tmp103
	movl	%edx, %esi	# tmp103,
	movq	%rax, %rdi	# D.29272,
	call	extract_left_shift	#
	movq	%rax, -8(%rbp)	# tmp104, tem
	cmpq	$0, -8(%rbp)	#, tem
	je	.L1045	#,
	.loc 1 6296 0
	movl	-12(%rbp), %ecx	# mode, tmp105
	movq	-8(%rbp), %rdx	# tem, tmp106
	movl	-12(%rbp), %esi	# mode, tmp107
	movl	-16(%rbp), %eax	# code, tmp108
	movl	%eax, %edi	# tmp108,
	call	simplify_gen_unary	#
	jmp	.L1043	#
.L1045:
	.loc 1 6298 0
	jmp	.L1044	#
.L1038:
	.loc 1 6303 0
	movq	-24(%rbp), %rax	# x, tmp109
	movq	16(%rax), %rax	# x_2(D)->fld[1].rtx, D.29272
	movzwl	(%rax), %eax	# _24->code, D.29270
	cmpw	$54, %ax	#, D.29270
	jne	.L1046	#,
	.loc 1 6304 0
	movq	-24(%rbp), %rax	# x, tmp110
	movq	16(%rax), %rax	# x_2(D)->fld[1].rtx, D.29272
	movq	8(%rax), %rdx	# _26->fld[0].rtwint, D.29273
	movl	-28(%rbp), %eax	# count, tmp111
	movl	$1, %esi	#, tmp112
	movl	%eax, %ecx	# tmp111, tmp124
	salq	%cl, %rsi	# tmp124, D.29273
	movq	%rsi, %rax	# D.29273, D.29273
	subq	$1, %rax	#, D.29273
	andq	%rdx, %rax	# D.29273, D.29273
	testq	%rax, %rax	# D.29273
	jne	.L1046	#,
	.loc 1 6305 0
	movq	-24(%rbp), %rax	# x, tmp113
	movq	8(%rax), %rax	# x_2(D)->fld[0].rtx, D.29272
	movl	-28(%rbp), %edx	# count, tmp114
	movl	%edx, %esi	# tmp114,
	movq	%rax, %rdi	# D.29272,
	call	extract_left_shift	#
	movq	%rax, -8(%rbp)	# tmp115, tem
	cmpq	$0, -8(%rbp)	#, tem
	je	.L1046	#,
	.loc 1 6307 0
	movq	-24(%rbp), %rax	# x, tmp116
	movq	16(%rax), %rax	# x_2(D)->fld[1].rtx, D.29272
	movq	8(%rax), %rdx	# _33->fld[0].rtwint, D.29273
	.loc 1 6306 0
	movl	-28(%rbp), %eax	# count, tmp117
	movl	%eax, %ecx	# tmp117, tmp126
	sarq	%cl, %rdx	# tmp126, D.29273
	movq	%rdx, %rax	# D.29273, D.29273
	movq	%rax, %rsi	# D.29273,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29272
	movq	-8(%rbp), %rdx	# tem, tmp118
	movl	-12(%rbp), %esi	# mode, tmp119
	movl	-16(%rbp), %eax	# code, tmp120
	movl	%eax, %edi	# tmp120,
	call	gen_binary	#
	jmp	.L1043	#
.L1046:
	.loc 1 6309 0
	jmp	.L1044	#
.L1047:
	.loc 1 6312 0
	nop
.L1044:
	.loc 1 6315 0
	movl	$0, %eax	#, D.29269
.L1043:
	.loc 1 6316 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE25:
	.size	extract_left_shift, .-extract_left_shift
	.type	make_compound_operation, @function
make_compound_operation:
.LFB26:
	.loc 1 6340 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$120, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -120(%rbp)	# x, x
	movl	%esi, -124(%rbp)	# in_code, in_code
	.loc 1 6341 0
	movq	-120(%rbp), %rax	# x, tmp309
	movzwl	(%rax), %eax	# x_14(D)->code, D.29277
	movzwl	%ax, %eax	# D.29277, tmp310
	movl	%eax, -108(%rbp)	# tmp310, code
	.loc 1 6342 0
	movq	-120(%rbp), %rax	# x, tmp311
	movzbl	2(%rax), %eax	# x_14(D)->mode, D.29278
	movzbl	%al, %eax	# D.29278, tmp312
	movl	%eax, -100(%rbp)	# tmp312, mode
	.loc 1 6343 0
	movl	-100(%rbp), %eax	# mode, mode.888
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29277
	movzwl	%ax, %eax	# D.29277, tmp314
	movl	%eax, -96(%rbp)	# tmp314, mode_width
	.loc 1 6347 0
	movq	$0, -88(%rbp)	#, new
	.loc 1 6355 0
	cmpl	$66, -108(%rbp)	#, code
	je	.L1049	#,
	.loc 1 6355 0 is_stmt 0 discriminator 1
	cmpl	$75, -108(%rbp)	#, code
	je	.L1049	#,
	cmpl	$76, -108(%rbp)	#, code
	je	.L1049	#,
	cmpl	$74, -108(%rbp)	#, code
	je	.L1050	#,
	.loc 1 6356 0 is_stmt 1
	movl	-108(%rbp), %eax	# code, code.891
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29279
	cmpb	$60, %al	#, D.29279
	jne	.L1051	#,
.L1050:
	.loc 1 6357 0
	movq	-120(%rbp), %rax	# x, tmp316
	movq	16(%rax), %rdx	# x_14(D)->fld[1].rtx, D.29280
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29280
	cmpq	%rax, %rdx	# D.29280, D.29280
	je	.L1052	#,
.L1051:
	.loc 1 6355 0
	cmpl	$74, -124(%rbp)	#, in_code
	je	.L1053	#,
	.loc 1 6355 0 is_stmt 0 discriminator 3
	movl	-124(%rbp), %eax	# in_code, iftmp.892
	jmp	.L1054	#
.L1053:
	.loc 1 6355 0 discriminator 4
	movl	$47, %eax	#, iftmp.892
.L1054:
	.loc 1 6355 0 discriminator 5
	jmp	.L1056	#
.L1052:
	.loc 1 6355 0
	movl	$74, %eax	#, iftmp.890
	jmp	.L1056	#
.L1049:
	.loc 1 6355 0 discriminator 2
	movl	$66, %eax	#, iftmp.889
.L1056:
	.loc 1 6355 0 discriminator 7
	movl	%eax, -92(%rbp)	# iftmp.889, next_code
	.loc 1 6363 0 is_stmt 1 discriminator 7
	movl	-108(%rbp), %eax	# code, tmp318
	subl	$63, %eax	#, tmp317
	cmpl	$27, %eax	#, tmp317
	ja	.L1091	#,
	movl	%eax, %eax	# tmp317, tmp319
	movq	.L1059(,%rax,8), %rax	#, tmp320
	jmp	*%rax	# tmp320
	.section	.rodata
	.align 8
	.align 4
.L1059:
	.quad	.L1058
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1060
	.quad	.L1091
	.quad	.L1091
	.quad	.L1091
	.quad	.L1061
	.quad	.L1091
	.quad	.L1062
	.quad	.L1063
	.text
.L1061:
	.loc 1 6368 0
	cmpl	$66, -124(%rbp)	#, in_code
	jne	.L1064	#,
	.loc 1 6368 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# x, tmp321
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movzwl	(%rax), %eax	# _35->code, D.29277
	cmpw	$54, %ax	#, D.29277
	jne	.L1064	#,
	.loc 1 6369 0 is_stmt 1
	movq	-120(%rbp), %rax	# x, tmp322
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _37->fld[0].rtwint, D.29281
	cmpq	$63, %rax	#, D.29281
	jg	.L1064	#,
	.loc 1 6370 0
	movq	-120(%rbp), %rax	# x, tmp323
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _39->fld[0].rtwint, D.29281
	testq	%rax, %rax	# D.29281
	js	.L1064	#,
	.loc 1 6372 0
	movq	-120(%rbp), %rax	# x, tmp324
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movl	-92(%rbp), %edx	# next_code, tmp325
	movl	%edx, %esi	# tmp325,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, -88(%rbp)	# tmp326, new
	.loc 1 6373 0
	movq	-120(%rbp), %rax	# x, tmp327
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _43->fld[0].rtwint, D.29281
	movl	$1, %edx	#, tmp328
	movl	%eax, %ecx	# D.29282, tmp521
	salq	%cl, %rdx	# tmp521, D.29281
	movq	%rdx, %rax	# D.29281, D.29281
	movq	%rax, %rsi	# D.29281,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29280
	movq	-88(%rbp), %rdx	# new, tmp329
	movl	-100(%rbp), %eax	# mode, tmp330
	movl	%eax, %esi	# tmp330,
	movl	$78, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -88(%rbp)	# tmp331, new
	.loc 1 6377 0
	jmp	.L1065	#
.L1064:
	jmp	.L1065	#
.L1060:
	.loc 1 6382 0
	movq	-120(%rbp), %rax	# x, tmp332
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movzwl	(%rax), %eax	# _49->code, D.29277
	cmpw	$54, %ax	#, D.29277
	je	.L1066	#,
	.loc 1 6383 0
	jmp	.L1065	#
.L1066:
	.loc 1 6387 0
	movq	-120(%rbp), %rax	# x, tmp333
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _51->code, D.29277
	cmpw	$90, %ax	#, D.29277
	jne	.L1067	#,
	.loc 1 6388 0
	movq	-120(%rbp), %rax	# x, tmp334
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _53->fld[0].rtwint, D.29281
	addq	$1, %rax	#, D.29281
	movq	%rax, %rdi	# D.29283,
	call	exact_log2_wide	#
	movl	%eax, -104(%rbp)	# tmp335, i
	cmpl	$0, -104(%rbp)	#, i
	js	.L1067	#,
	.loc 1 6390 0
	movq	-120(%rbp), %rax	# x, tmp336
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	8(%rax), %rax	# _58->fld[0].rtx, D.29280
	movl	-92(%rbp), %edx	# next_code, tmp337
	movl	%edx, %esi	# tmp337,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, -88(%rbp)	# tmp338, new
	.loc 1 6391 0
	cmpl	$74, -124(%rbp)	#, in_code
	sete	%al	#, D.29284
	movzbl	%al, %ecx	# D.29284, D.29282
	movl	-104(%rbp), %eax	# i, tmp339
	movslq	%eax, %rdi	# tmp339, D.29283
	movq	-120(%rbp), %rax	# x, tmp340
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	16(%rax), %rdx	# _64->fld[1].rtx, D.29280
	movq	-88(%rbp), %rsi	# new, tmp341
	movl	-100(%rbp), %eax	# mode, tmp342
	movl	%ecx, 8(%rsp)	# D.29282,
	movl	$0, (%rsp)	#,
	movl	$1, %r9d	#,
	movq	%rdi, %r8	# D.29283,
	movq	%rdx, %rcx	# D.29280,
	movl	$0, %edx	#,
	movl	%eax, %edi	# tmp342,
	call	make_extraction	#
	movq	%rax, -88(%rbp)	# tmp343, new
	jmp	.L1068	#
.L1067:
	.loc 1 6396 0
	movq	-120(%rbp), %rax	# x, tmp344
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _67->code, D.29277
	cmpw	$63, %ax	#, D.29277
	jne	.L1069	#,
	.loc 1 6397 0
	movq	-120(%rbp), %rax	# x, tmp345
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	%rax, %rdi	# D.29280,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29282
	je	.L1069	#,
	.loc 1 6398 0
	movq	-120(%rbp), %rax	# x, tmp346
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	8(%rax), %rax	# _71->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _72->code, D.29277
	cmpw	$90, %ax	#, D.29277
	jne	.L1069	#,
	.loc 1 6399 0
	movq	-120(%rbp), %rax	# x, tmp347
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _74->fld[0].rtwint, D.29281
	addq	$1, %rax	#, D.29281
	movq	%rax, %rdi	# D.29283,
	call	exact_log2_wide	#
	movl	%eax, -104(%rbp)	# tmp348, i
	cmpl	$0, -104(%rbp)	#, i
	js	.L1069	#,
	.loc 1 6401 0
	movq	-120(%rbp), %rax	# x, tmp349
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	8(%rax), %rax	# _79->fld[0].rtx, D.29280
	movq	8(%rax), %rax	# _80->fld[0].rtx, D.29280
	movl	-92(%rbp), %edx	# next_code, tmp350
	movl	%edx, %esi	# tmp350,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, -88(%rbp)	# tmp351, new
	.loc 1 6403 0
	cmpl	$74, -124(%rbp)	#, in_code
	sete	%al	#, D.29284
	movzbl	%al, %ecx	# D.29284, D.29282
	movl	-104(%rbp), %eax	# i, tmp352
	movslq	%eax, %rdi	# tmp352, D.29283
	.loc 1 6404 0
	movq	-120(%rbp), %rax	# x, tmp353
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	8(%rax), %rax	# _86->fld[0].rtx, D.29280
	.loc 1 6403 0
	movq	16(%rax), %rdx	# _87->fld[1].rtx, D.29280
	movq	-120(%rbp), %rax	# x, tmp354
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	8(%rax), %rax	# _89->fld[0].rtx, D.29280
	movzbl	2(%rax), %eax	# _90->mode, D.29278
	movzbl	%al, %eax	# D.29278, D.29285
	movq	-88(%rbp), %rsi	# new, tmp355
	movl	%ecx, 8(%rsp)	# D.29282,
	movl	$0, (%rsp)	#,
	movl	$1, %r9d	#,
	movq	%rdi, %r8	# D.29283,
	movq	%rdx, %rcx	# D.29280,
	movl	$0, %edx	#,
	movl	%eax, %edi	# D.29285,
	call	make_extraction	#
	movq	%rax, -88(%rbp)	# tmp356, new
	jmp	.L1068	#
.L1069:
	.loc 1 6408 0
	movq	-120(%rbp), %rax	# x, tmp357
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _94->code, D.29277
	cmpw	$85, %ax	#, D.29277
	je	.L1070	#,
	.loc 1 6409 0
	movq	-120(%rbp), %rax	# x, tmp358
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _96->code, D.29277
	cmpw	$84, %ax	#, D.29277
	jne	.L1071	#,
.L1070:
	.loc 1 6410 0
	movq	-120(%rbp), %rax	# x, tmp359
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	8(%rax), %rax	# _98->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _99->code, D.29277
	cmpw	$90, %ax	#, D.29277
	jne	.L1071	#,
	.loc 1 6411 0
	movq	-120(%rbp), %rax	# x, tmp360
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	16(%rax), %rax	# _101->fld[1].rtx, D.29280
	movzwl	(%rax), %eax	# _102->code, D.29277
	cmpw	$90, %ax	#, D.29277
	jne	.L1071	#,
	.loc 1 6412 0
	movq	-120(%rbp), %rax	# x, tmp361
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _104->fld[0].rtwint, D.29281
	addq	$1, %rax	#, D.29281
	movq	%rax, %rdi	# D.29283,
	call	exact_log2_wide	#
	movl	%eax, -104(%rbp)	# tmp362, i
	cmpl	$0, -104(%rbp)	#, i
	js	.L1071	#,
	.loc 1 6415 0
	movq	-120(%rbp), %rax	# x, tmp363
	movq	16(%rax), %rcx	# x_14(D)->fld[1].rtx, D.29280
	.loc 1 6418 0
	movq	-120(%rbp), %rax	# x, tmp364
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	.loc 1 6415 0
	movq	16(%rax), %rdx	# _110->fld[1].rtx, D.29280
	movl	-100(%rbp), %eax	# mode, tmp365
	movl	%eax, %esi	# tmp365,
	movl	$83, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, %rbx	#, D.29280
	movq	-120(%rbp), %rax	# x, tmp366
	movq	16(%rax), %rcx	# x_14(D)->fld[1].rtx, D.29280
	.loc 1 6416 0
	movq	-120(%rbp), %rax	# x, tmp367
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	.loc 1 6415 0
	movq	8(%rax), %rdx	# _114->fld[0].rtx, D.29280
	movl	-100(%rbp), %eax	# mode, tmp368
	movl	%eax, %esi	# tmp368,
	movl	$83, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, %rdx	#, D.29280
	movq	-120(%rbp), %rax	# x, tmp369
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _117->code, D.29277
	movzwl	%ax, %eax	# D.29277, D.29286
	movl	-100(%rbp), %esi	# mode, tmp370
	movq	%rbx, %rcx	# D.29280,
	movl	%eax, %edi	# D.29286,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -88(%rbp)	# tmp371, new
	.loc 1 6420 0
	movl	-124(%rbp), %edx	# in_code, tmp372
	movq	-88(%rbp), %rax	# new, tmp373
	movl	%edx, %esi	# tmp372,
	movq	%rax, %rdi	# tmp373,
	call	make_compound_operation	#
	movq	%rax, -88(%rbp)	# tmp374, new
	jmp	.L1068	#
.L1071:
	.loc 1 6426 0
	movq	-120(%rbp), %rax	# x, tmp375
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _122->code, D.29277
	cmpw	$88, %ax	#, D.29277
	jne	.L1072	#,
	.loc 1 6427 0
	movq	-120(%rbp), %rax	# x, tmp376
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	16(%rax), %rax	# _124->fld[1].rtx, D.29280
	movzwl	(%rax), %eax	# _125->code, D.29277
	cmpw	$54, %ax	#, D.29277
	jne	.L1072	#,
	.loc 1 6428 0
	movq	-120(%rbp), %rax	# x, tmp377
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _127->fld[0].rtwint, D.29281
	addq	$1, %rax	#, D.29281
	movq	%rax, %rdi	# D.29283,
	call	exact_log2_wide	#
	movl	%eax, -104(%rbp)	# tmp378, i
	cmpl	$0, -104(%rbp)	#, i
	js	.L1072	#,
	.loc 1 6429 0
	movl	-104(%rbp), %eax	# i, tmp379
	movslq	%eax, %rdx	# tmp379, D.29281
	movq	-120(%rbp), %rax	# x, tmp380
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	16(%rax), %rax	# _133->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _134->fld[0].rtwint, D.29281
	cmpq	%rax, %rdx	# D.29281, D.29281
	jg	.L1072	#,
	.loc 1 6431 0
	movq	-120(%rbp), %rax	# x, tmp381
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	8(%rax), %rax	# _136->fld[0].rtx, D.29280
	movl	-92(%rbp), %edx	# next_code, tmp382
	movl	%edx, %esi	# tmp382,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, -88(%rbp)	# tmp383, new
	.loc 1 6432 0
	cmpl	$74, -124(%rbp)	#, in_code
	sete	%al	#, D.29284
	movzbl	%al, %edx	# D.29284, D.29282
	movl	-104(%rbp), %eax	# i, tmp384
	movslq	%eax, %rcx	# tmp384, D.29283
	.loc 1 6433 0
	movl	-100(%rbp), %eax	# mode, mode.893
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29277
	.loc 1 6432 0
	movzwl	%ax, %esi	# D.29277, D.29281
	.loc 1 6434 0
	movq	-120(%rbp), %rax	# x, tmp386
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	16(%rax), %rax	# _145->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _146->fld[0].rtwint, D.29281
	.loc 1 6432 0
	movq	%rsi, %rdi	# D.29281, D.29281
	subq	%rax, %rdi	# D.29281, D.29281
	movq	-88(%rbp), %rsi	# new, tmp387
	movl	-100(%rbp), %eax	# mode, tmp388
	movl	%edx, 8(%rsp)	# D.29282,
	movl	$0, (%rsp)	#,
	movl	$1, %r9d	#,
	movq	%rcx, %r8	# D.29283,
	movl	$0, %ecx	#,
	movq	%rdi, %rdx	# D.29281,
	movl	%eax, %edi	# tmp388,
	call	make_extraction	#
	movq	%rax, -88(%rbp)	# tmp389, new
	jmp	.L1068	#
.L1072:
	.loc 1 6441 0
	movq	-120(%rbp), %rax	# x, tmp390
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _150->code, D.29277
	cmpw	$90, %ax	#, D.29277
	jne	.L1073	#,
	.loc 1 6442 0
	movl	-100(%rbp), %eax	# mode, tmp391
	movl	%eax, %esi	# tmp391,
	movl	$90, %edi	#,
	call	have_insn_for	#
	testl	%eax, %eax	# D.29282
	jne	.L1073	#,
	.loc 1 6443 0
	movl	-100(%rbp), %eax	# mode, tmp392
	movl	%eax, %esi	# tmp392,
	movl	$89, %edi	#,
	call	have_insn_for	#
	testl	%eax, %eax	# D.29282
	je	.L1073	#,
	.loc 1 6444 0
	movq	-120(%rbp), %rax	# x, tmp393
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	16(%rax), %rax	# _154->fld[1].rtx, D.29280
	movzwl	(%rax), %eax	# _155->code, D.29277
	cmpw	$54, %ax	#, D.29277
	jne	.L1073	#,
	.loc 1 6445 0
	movq	-120(%rbp), %rax	# x, tmp394
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	16(%rax), %rax	# _157->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _158->fld[0].rtwint, D.29281
	testq	%rax, %rax	# D.29281
	js	.L1073	#,
	.loc 1 6446 0
	movq	-120(%rbp), %rax	# x, tmp395
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	16(%rax), %rax	# _160->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _161->fld[0].rtwint, D.29281
	cmpq	$63, %rax	#, D.29281
	jg	.L1073	#,
	.loc 1 6447 0
	cmpl	$64, -96(%rbp)	#, mode_width
	jg	.L1073	#,
.LBB73:
	.loc 1 6449 0
	movl	-100(%rbp), %eax	# mode, mode.894
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, tmp397
	movq	%rax, -64(%rbp)	# tmp397, mask
	.loc 1 6451 0
	movq	-120(%rbp), %rax	# x, tmp398
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	16(%rax), %rax	# _165->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _166->fld[0].rtwint, D.29281
	movl	%eax, %ecx	# D.29282, tmp523
	shrq	%cl, -64(%rbp)	# tmp523, mask
	.loc 1 6452 0
	movq	-120(%rbp), %rax	# x, tmp399
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _170->fld[0].rtwint, D.29281
	movq	-64(%rbp), %rdx	# mask, tmp400
	notq	%rdx	# D.29283
	andq	%rdx, %rax	# D.29283, D.29283
	testq	%rax, %rax	# D.29283
	jne	.L1074	#,
	.loc 1 6453 0
	movq	-120(%rbp), %rax	# x, tmp401
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	16(%rax), %rbx	# _175->fld[1].rtx, D.29280
	movq	-120(%rbp), %rax	# x, tmp402
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movq	8(%rax), %rax	# _177->fld[0].rtx, D.29280
	movl	-92(%rbp), %edx	# next_code, tmp403
	movl	%edx, %esi	# tmp403,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, %rdx	#, D.29280
	movl	-100(%rbp), %eax	# mode, tmp404
	movq	%rbx, %rcx	# D.29280,
	movl	%eax, %esi	# tmp404,
	movl	$89, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-120(%rbp), %rdx	# x, tmp405
	addq	$8, %rdx	#, D.29287
	movq	%rax, %rsi	# D.29280,
	movq	%rdx, %rdi	# D.29287,
	call	do_SUBST	#
.LBE73:
	.loc 1 6448 0
	jmp	.L1068	#
.L1074:
	jmp	.L1068	#
.L1073:
	.loc 1 6464 0
	movq	-120(%rbp), %rax	# x, tmp406
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _182->fld[0].rtwint, D.29281
	addq	$1, %rax	#, D.29281
	movq	%rax, %rdi	# D.29283,
	call	exact_log2_wide	#
	movl	%eax, -104(%rbp)	# tmp407, i
	cmpl	$0, -104(%rbp)	#, i
	js	.L1075	#,
	.loc 1 6465 0
	cmpl	$74, -124(%rbp)	#, in_code
	sete	%al	#, D.29284
	movzbl	%al, %ebx	# D.29284, D.29282
	movl	-104(%rbp), %eax	# i, tmp408
	movslq	%eax, %r12	# tmp408, D.29283
	movq	-120(%rbp), %rax	# x, tmp409
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movl	-92(%rbp), %edx	# next_code, tmp410
	movl	%edx, %esi	# tmp410,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, %rsi	#, D.29280
	movl	-100(%rbp), %eax	# mode, tmp411
	movl	%ebx, 8(%rsp)	# D.29282,
	movl	$0, (%rsp)	#,
	movl	$1, %r9d	#,
	movq	%r12, %r8	# D.29283,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movl	%eax, %edi	# tmp411,
	call	make_extraction	#
	movq	%rax, -88(%rbp)	# tmp412, new
	jmp	.L1068	#
.L1075:
	.loc 1 6472 0
	cmpl	$74, -124(%rbp)	#, in_code
	jne	.L1068	#,
	.loc 1 6473 0
	movq	-120(%rbp), %rax	# x, tmp413
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _193->fld[0].rtwint, D.29281
	movq	%rax, %rdi	# D.29283,
	call	exact_log2_wide	#
	movl	%eax, -104(%rbp)	# tmp414, i
	cmpl	$0, -104(%rbp)	#, i
	js	.L1068	#,
	.loc 1 6474 0
	movl	-104(%rbp), %eax	# i, tmp415
	movslq	%eax, %rbx	# tmp415, D.29281
	movq	-120(%rbp), %rax	# x, tmp416
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movl	-92(%rbp), %edx	# next_code, tmp417
	movl	%edx, %esi	# tmp417,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, %rsi	#, D.29280
	movl	-100(%rbp), %eax	# mode, tmp418
	movl	$1, 8(%rsp)	#,
	movl	$0, (%rsp)	#,
	movl	$1, %r9d	#,
	movl	$1, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rbx, %rdx	# D.29281,
	movl	%eax, %edi	# tmp418,
	call	make_extraction	#
	movq	%rax, -88(%rbp)	# tmp419, new
	.loc 1 6479 0
	jmp	.L1065	#
.L1068:
	jmp	.L1065	#
.L1063:
	.loc 1 6484 0
	movl	-100(%rbp), %eax	# mode, tmp420
	movl	%eax, %esi	# tmp420,
	movl	$89, %edi	#,
	call	have_insn_for	#
	testl	%eax, %eax	# D.29282
	je	.L1062	#,
	.loc 1 6485 0
	movl	-100(%rbp), %eax	# mode, tmp421
	movl	%eax, %esi	# tmp421,
	movl	$90, %edi	#,
	call	have_insn_for	#
	testl	%eax, %eax	# D.29282
	jne	.L1062	#,
	.loc 1 6486 0
	cmpl	$64, -96(%rbp)	#, mode_width
	jg	.L1062	#,
	.loc 1 6487 0
	movq	-120(%rbp), %rax	# x, tmp422
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movl	-100(%rbp), %edx	# mode, tmp423
	movl	%edx, %esi	# tmp423,
	movq	%rax, %rdi	# D.29280,
	call	nonzero_bits	#
	movl	-96(%rbp), %edx	# mode_width, tmp424
	subl	$1, %edx	#, D.29282
	movl	$1, %esi	#, tmp425
	movl	%edx, %ecx	# D.29282, tmp525
	sall	%cl, %esi	# tmp525, D.29282
	movl	%esi, %edx	# D.29282, D.29282
	movslq	%edx, %rdx	# D.29282, D.29283
	andq	%rdx, %rax	# D.29283, D.29283
	testq	%rax, %rax	# D.29283
	jne	.L1062	#,
	.loc 1 6489 0
	movq	-120(%rbp), %rax	# x, tmp426
	movq	16(%rax), %rbx	# x_14(D)->fld[1].rtx, D.29280
	movq	-120(%rbp), %rax	# x, tmp427
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movl	-92(%rbp), %edx	# next_code, tmp428
	movl	%edx, %esi	# tmp428,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, %rdx	#, D.29280
	movl	-100(%rbp), %eax	# mode, tmp429
	movq	%rbx, %rcx	# D.29280,
	movl	%eax, %esi	# tmp429,
	movl	$89, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -88(%rbp)	# tmp430, new
	.loc 1 6493 0
	jmp	.L1065	#
.L1062:
	.loc 1 6499 0
	movq	-120(%rbp), %rax	# x, tmp431
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, tmp432
	movq	%rax, -56(%rbp)	# tmp432, lhs
	.loc 1 6500 0
	movq	-120(%rbp), %rax	# x, tmp433
	movq	16(%rax), %rax	# x_14(D)->fld[1].rtx, tmp434
	movq	%rax, -48(%rbp)	# tmp434, rhs
	.loc 1 6504 0
	movq	-48(%rbp), %rax	# rhs, tmp435
	movzwl	(%rax), %eax	# rhs_214->code, D.29277
	cmpw	$54, %ax	#, D.29277
	jne	.L1076	#,
	.loc 1 6505 0
	movq	-56(%rbp), %rax	# lhs, tmp436
	movzwl	(%rax), %eax	# lhs_213->code, D.29277
	cmpw	$87, %ax	#, D.29277
	jne	.L1076	#,
	.loc 1 6506 0
	movq	-56(%rbp), %rax	# lhs, tmp437
	movq	16(%rax), %rax	# lhs_213->fld[1].rtx, D.29280
	movzwl	(%rax), %eax	# _217->code, D.29277
	cmpw	$54, %ax	#, D.29277
	jne	.L1076	#,
	.loc 1 6507 0
	movq	-48(%rbp), %rax	# rhs, tmp438
	movq	8(%rax), %rdx	# rhs_214->fld[0].rtwint, D.29281
	movq	-56(%rbp), %rax	# lhs, tmp439
	movq	16(%rax), %rax	# lhs_213->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _220->fld[0].rtwint, D.29281
	cmpq	%rax, %rdx	# D.29281, D.29281
	jl	.L1076	#,
	.loc 1 6509 0
	movq	-56(%rbp), %rax	# lhs, tmp440
	movq	8(%rax), %rax	# lhs_213->fld[0].rtx, D.29280
	movl	-92(%rbp), %edx	# next_code, tmp441
	movl	%edx, %esi	# tmp441,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, -88(%rbp)	# tmp442, new
	.loc 1 6510 0
	cmpl	$74, -124(%rbp)	#, in_code
	sete	%al	#, D.29284
	movzbl	%al, %edx	# D.29284, D.29282
	cmpl	$90, -108(%rbp)	#, code
	sete	%al	#, D.29284
	movzbl	%al, %r8d	# D.29284, D.29282
	.loc 1 6512 0
	movl	-96(%rbp), %eax	# mode_width, tmp443
	movslq	%eax, %rcx	# tmp443, D.29281
	movq	-48(%rbp), %rax	# rhs, tmp444
	movq	8(%rax), %rax	# rhs_214->fld[0].rtwint, D.29281
	subq	%rax, %rcx	# D.29281, D.29281
	movq	%rcx, %rax	# D.29281, D.29281
	.loc 1 6510 0
	movq	%rax, %rcx	# D.29281, D.29283
	.loc 1 6511 0
	movq	-48(%rbp), %rax	# rhs, tmp445
	movq	8(%rax), %rsi	# rhs_214->fld[0].rtwint, D.29281
	movq	-56(%rbp), %rax	# lhs, tmp446
	movq	16(%rax), %rax	# lhs_213->fld[1].rtx, D.29280
	movq	8(%rax), %rax	# _233->fld[0].rtwint, D.29281
	.loc 1 6510 0
	movq	%rsi, %rdi	# D.29281, D.29281
	subq	%rax, %rdi	# D.29281, D.29281
	movq	-88(%rbp), %rsi	# new, tmp447
	movl	-100(%rbp), %eax	# mode, tmp448
	movl	%edx, 8(%rsp)	# D.29282,
	movl	$0, (%rsp)	#,
	movl	%r8d, %r9d	# D.29282,
	movq	%rcx, %r8	# D.29283,
	movl	$0, %ecx	#,
	movq	%rdi, %rdx	# D.29281,
	movl	%eax, %edi	# tmp448,
	call	make_extraction	#
	movq	%rax, -88(%rbp)	# tmp449, new
	.loc 1 6514 0
	jmp	.L1065	#
.L1076:
	.loc 1 6522 0
	movq	-56(%rbp), %rax	# lhs, tmp450
	movzwl	(%rax), %eax	# lhs_213->code, D.29277
	movzwl	%ax, %eax	# D.29277, D.29282
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29279
	cmpb	$111, %al	#, D.29279
	je	.L1077	#,
	.loc 1 6523 0
	movq	-56(%rbp), %rax	# lhs, tmp452
	movzwl	(%rax), %eax	# lhs_213->code, D.29277
	cmpw	$63, %ax	#, D.29277
	jne	.L1078	#,
	.loc 1 6524 0 discriminator 1
	movq	-56(%rbp), %rax	# lhs, tmp453
	movq	8(%rax), %rax	# lhs_213->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _241->code, D.29277
	movzwl	%ax, %eax	# D.29277, D.29282
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29279
	.loc 1 6523 0 discriminator 1
	cmpb	$111, %al	#, D.29279
	je	.L1077	#,
.L1078:
	.loc 1 6525 0
	movq	-48(%rbp), %rax	# rhs, tmp455
	movzwl	(%rax), %eax	# rhs_214->code, D.29277
	cmpw	$54, %ax	#, D.29277
	jne	.L1077	#,
	.loc 1 6526 0
	movq	-48(%rbp), %rax	# rhs, tmp456
	movq	8(%rax), %rax	# rhs_214->fld[0].rtwint, D.29281
	cmpq	$63, %rax	#, D.29281
	jg	.L1077	#,
	.loc 1 6527 0
	movq	-48(%rbp), %rax	# rhs, tmp457
	movq	8(%rax), %rax	# rhs_214->fld[0].rtwint, D.29281
	movl	%eax, %edx	# D.29281, D.29282
	movq	-56(%rbp), %rax	# lhs, tmp458
	movl	%edx, %esi	# D.29282,
	movq	%rax, %rdi	# tmp458,
	call	extract_left_shift	#
	movq	%rax, -88(%rbp)	# tmp459, new
	cmpq	$0, -88(%rbp)	#, new
	je	.L1077	#,
	.loc 1 6528 0
	cmpl	$74, -124(%rbp)	#, in_code
	sete	%al	#, D.29284
	movzbl	%al, %ebx	# D.29284, D.29282
	cmpl	$90, -108(%rbp)	#, code
	sete	%al	#, D.29284
	movzbl	%al, %r13d	# D.29284, D.29282
	.loc 1 6529 0
	movl	-96(%rbp), %eax	# mode_width, tmp460
	movslq	%eax, %rdx	# tmp460, D.29281
	movq	-48(%rbp), %rax	# rhs, tmp461
	movq	8(%rax), %rax	# rhs_214->fld[0].rtwint, D.29281
	subq	%rax, %rdx	# D.29281, D.29281
	movq	%rdx, %rax	# D.29281, D.29281
	.loc 1 6528 0
	movq	%rax, %r12	# D.29281, D.29283
	movl	-92(%rbp), %edx	# next_code, tmp462
	movq	-88(%rbp), %rax	# new, tmp463
	movl	%edx, %esi	# tmp462,
	movq	%rax, %rdi	# tmp463,
	call	make_compound_operation	#
	movq	%rax, %rsi	#, D.29280
	movl	-100(%rbp), %eax	# mode, tmp464
	movl	%ebx, 8(%rsp)	# D.29282,
	movl	$0, (%rsp)	#,
	movl	%r13d, %r9d	# D.29282,
	movq	%r12, %r8	# D.29283,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movl	%eax, %edi	# tmp464,
	call	make_extraction	#
	movq	%rax, -88(%rbp)	# tmp465, new
	.loc 1 6532 0
	jmp	.L1065	#
.L1077:
	jmp	.L1065	#
.L1058:
	.loc 1 6539 0
	movq	-120(%rbp), %rax	# x, tmp466
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movl	-124(%rbp), %edx	# in_code, tmp467
	movl	%edx, %esi	# tmp467,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, -80(%rbp)	# tmp468, tem
	.loc 1 6540 0
	movq	-80(%rbp), %rax	# tem, tmp469
	movzwl	(%rax), %edx	# tem_261->code, D.29277
	movq	-120(%rbp), %rax	# x, tmp470
	movq	8(%rax), %rax	# x_14(D)->fld[0].rtx, D.29280
	movzwl	(%rax), %eax	# _263->code, D.29277
	cmpw	%ax, %dx	# D.29277, D.29277
	je	.L1079	#,
	.loc 1 6541 0
	movl	-100(%rbp), %eax	# mode, mode.895
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29278
	movq	-80(%rbp), %rax	# tem, tmp472
	movzbl	2(%rax), %eax	# tem_261->mode, D.29278
	movzbl	%al, %eax	# D.29278, D.29282
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29278
	cmpb	%al, %dl	# D.29278, D.29278
	jae	.L1079	#,
	.loc 1 6542 0
	movq	-120(%rbp), %rax	# x, tmp474
	movq	%rax, %rdi	# tmp474,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29282
	je	.L1079	#,
.LBB74:
	.loc 1 6544 0
	movl	-100(%rbp), %esi	# mode, tmp475
	movq	-80(%rbp), %rax	# tem, tmp476
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	$-1, %rdx	#,
	movq	%rax, %rdi	# tmp476,
	call	force_to_mode	#
	movq	%rax, -72(%rbp)	# tmp477, newer
	.loc 1 6549 0
	movq	-72(%rbp), %rax	# newer, tmp478
	movzwl	(%rax), %eax	# newer_271->code, D.29277
	cmpw	$63, %ax	#, D.29277
	je	.L1080	#,
	.loc 1 6550 0
	movl	-124(%rbp), %edx	# in_code, tmp479
	movq	-72(%rbp), %rax	# newer, tmp480
	movl	%edx, %esi	# tmp479,
	movq	%rax, %rdi	# tmp480,
	call	make_compound_operation	#
	movq	%rax, -72(%rbp)	# tmp481, newer
.L1080:
	.loc 1 6552 0
	movq	-72(%rbp), %rax	# newer, D.29276
	jmp	.L1081	#
.L1079:
.LBE74:
	.loc 1 6559 0
	movq	-80(%rbp), %rax	# tem, tmp482
	movzwl	(%rax), %eax	# tem_261->code, D.29277
	cmpw	$120, %ax	#, D.29277
	je	.L1082	#,
	.loc 1 6560 0
	movq	-80(%rbp), %rax	# tem, tmp483
	movzwl	(%rax), %eax	# tem_261->code, D.29277
	cmpw	$121, %ax	#, D.29277
	jne	.L1083	#,
.L1082:
	.loc 1 6561 0
	movq	-120(%rbp), %rax	# x, tmp484
	movq	%rax, %rdi	# tmp484,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29282
	je	.L1083	#,
	.loc 1 6563 0
	movl	-100(%rbp), %eax	# mode, mode.896
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29278
	movq	-80(%rbp), %rax	# tem, tmp486
	movzbl	2(%rax), %eax	# tem_261->mode, D.29278
	movzbl	%al, %eax	# D.29278, D.29282
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29278
	cmpb	%al, %dl	# D.29278, D.29278
	ja	.L1084	#,
	.loc 1 6564 0
	movl	-100(%rbp), %eax	# mode, mode.897
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29278
	.loc 1 6565 0
	movq	-80(%rbp), %rax	# tem, tmp489
	movq	8(%rax), %rax	# tem_261->fld[0].rtx, D.29280
	movzbl	2(%rax), %eax	# _285->mode, D.29278
	movzbl	%al, %eax	# D.29278, D.29282
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29278
	.loc 1 6564 0
	cmpb	%al, %dl	# D.29278, D.29278
	jbe	.L1085	#,
.L1084:
	.loc 1 6566 0
	movq	-80(%rbp), %rax	# tem, tmp491
	movq	8(%rax), %rdx	# tem_261->fld[0].rtx, D.29280
	movq	-80(%rbp), %rax	# tem, tmp492
	movzwl	(%rax), %eax	# tem_261->code, D.29277
	movzwl	%ax, %eax	# D.29277, D.29286
	movl	-100(%rbp), %ecx	# mode, tmp493
	movl	%ecx, %esi	# tmp493,
	movl	%eax, %edi	# D.29286,
	call	gen_rtx_fmt_e	#
	movq	%rax, -80(%rbp)	# tmp494, tem
	jmp	.L1086	#
.L1085:
	.loc 1 6568 0
	movq	-80(%rbp), %rax	# tem, tmp495
	movq	8(%rax), %rdx	# tem_261->fld[0].rtx, D.29280
	movl	-100(%rbp), %eax	# mode, tmp496
	movq	%rdx, %rsi	# D.29280,
	movl	%eax, %edi	# tmp496,
	call	gen_lowpart_for_combine	#
	movq	%rax, -80(%rbp)	# tmp497, tem
.L1086:
	.loc 1 6569 0
	movq	-80(%rbp), %rax	# tem, D.29276
	jmp	.L1081	#
.L1083:
	.loc 1 6571 0
	jmp	.L1065	#
.L1091:
	.loc 1 6574 0
	nop
.L1065:
	.loc 1 6577 0
	cmpq	$0, -88(%rbp)	#, new
	je	.L1087	#,
	.loc 1 6579 0
	movq	-88(%rbp), %rdx	# new, tmp498
	movl	-100(%rbp), %eax	# mode, tmp499
	movq	%rdx, %rsi	# tmp498,
	movl	%eax, %edi	# tmp499,
	call	gen_lowpart_for_combine	#
	movq	%rax, -120(%rbp)	# tmp500, x
	.loc 1 6580 0
	movq	-120(%rbp), %rax	# x, tmp501
	movzwl	(%rax), %eax	# x_296->code, D.29277
	movzwl	%ax, %eax	# D.29277, tmp502
	movl	%eax, -108(%rbp)	# tmp502, code
.L1087:
	.loc 1 6584 0
	movl	-108(%rbp), %eax	# code, code.898
	cltq
	movq	rtx_format(,%rax,8), %rax	# rtx_format, tmp504
	movq	%rax, -40(%rbp)	# tmp504, fmt
	.loc 1 6585 0
	movl	$0, -104(%rbp)	#, i
	jmp	.L1088	#
.L1090:
	.loc 1 6586 0
	movl	-104(%rbp), %eax	# i, tmp505
	movslq	%eax, %rdx	# tmp505, D.29288
	movq	-40(%rbp), %rax	# fmt, tmp506
	addq	%rdx, %rax	# D.29288, D.29289
	movzbl	(%rax), %eax	# *_306, D.29279
	cmpb	$101, %al	#, D.29279
	jne	.L1089	#,
	.loc 1 6588 0
	movq	-120(%rbp), %rax	# x, tmp507
	movl	-104(%rbp), %edx	# i, tmp509
	movslq	%edx, %rdx	# tmp509, tmp508
	movq	8(%rax,%rdx,8), %rax	# x_1->fld[i_3].rtx, D.29280
	movl	-92(%rbp), %edx	# next_code, tmp510
	movl	%edx, %esi	# tmp510,
	movq	%rax, %rdi	# D.29280,
	call	make_compound_operation	#
	movq	%rax, -88(%rbp)	# tmp511, new
	.loc 1 6589 0
	movl	-104(%rbp), %eax	# i, tmp513
	cltq
	leaq	0(,%rax,8), %rdx	#, tmp514
	movq	-120(%rbp), %rax	# x, tmp516
	addq	%rdx, %rax	# tmp514, tmp515
	leaq	8(%rax), %rdx	#, D.29287
	movq	-88(%rbp), %rax	# new, tmp517
	movq	%rax, %rsi	# tmp517,
	movq	%rdx, %rdi	# D.29287,
	call	do_SUBST	#
.L1089:
	.loc 1 6585 0
	addl	$1, -104(%rbp)	#, i
.L1088:
	.loc 1 6585 0 is_stmt 0 discriminator 1
	movl	-108(%rbp), %eax	# code, code.899
	cltq
	movzbl	rtx_length(%rax), %eax	# rtx_length, D.29278
	movzbl	%al, %eax	# D.29278, D.29282
	cmpl	-104(%rbp), %eax	# i, D.29282
	jg	.L1090	#,
	.loc 1 6592 0 is_stmt 1
	movq	-120(%rbp), %rax	# x, D.29276
.L1081:
	.loc 1 6593 0
	addq	$120, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE26:
	.size	make_compound_operation, .-make_compound_operation
	.type	get_pos_from_mask, @function
get_pos_from_mask:
.LFB27:
	.loc 1 6606 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# m, m
	movq	%rsi, -32(%rbp)	# plen, plen
	.loc 1 6608 0
	movq	-24(%rbp), %rax	# m, tmp66
	negq	%rax	# D.29291
	andq	-24(%rbp), %rax	# m, D.29291
	movq	%rax, %rdi	# D.29291,
	call	exact_log2_wide	#
	movl	%eax, -8(%rbp)	# tmp67, pos
	.loc 1 6611 0
	cmpl	$0, -8(%rbp)	#, pos
	jns	.L1093	#,
	.loc 1 6612 0
	movl	$-1, %eax	#, D.29290
	jmp	.L1094	#
.L1093:
	.loc 1 6616 0
	movl	-8(%rbp), %eax	# pos, tmp68
	movq	-24(%rbp), %rdx	# m, tmp69
	movl	%eax, %ecx	# tmp68, tmp75
	shrq	%cl, %rdx	# tmp75, D.29291
	movq	%rdx, %rax	# D.29291, D.29291
	addq	$1, %rax	#, D.29291
	movq	%rax, %rdi	# D.29291,
	call	exact_log2_wide	#
	movl	%eax, -4(%rbp)	# tmp70, len
	.loc 1 6618 0
	cmpl	$0, -4(%rbp)	#, len
	jg	.L1095	#,
	.loc 1 6619 0
	movl	$-1, %eax	#, D.29290
	jmp	.L1094	#
.L1095:
	.loc 1 6621 0
	movl	-4(%rbp), %eax	# len, tmp71
	movslq	%eax, %rdx	# tmp71, D.29291
	movq	-32(%rbp), %rax	# plen, tmp72
	movq	%rdx, (%rax)	# D.29291, *plen_12(D)
	.loc 1 6622 0
	movl	-8(%rbp), %eax	# pos, D.29290
.L1094:
	.loc 1 6623 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE27:
	.size	get_pos_from_mask, .-get_pos_from_mask
	.type	force_to_mode, @function
force_to_mode:
.LFB28:
	.loc 1 6648 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$144, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -136(%rbp)	# x, x
	movl	%esi, -140(%rbp)	# mode, mode
	movq	%rdx, -152(%rbp)	# mask, mask
	movq	%rcx, -160(%rbp)	# reg, reg
	movl	%r8d, -144(%rbp)	# just_select, just_select
	.loc 1 6649 0
	movq	-136(%rbp), %rax	# x, tmp580
	movzwl	(%rax), %eax	# x_30(D)->code, D.29293
	movzwl	%ax, %eax	# D.29293, tmp581
	movl	%eax, -112(%rbp)	# tmp581, code
	.loc 1 6650 0
	cmpl	$0, -144(%rbp)	#, just_select
	jne	.L1097	#,
	.loc 1 6650 0 is_stmt 0 discriminator 2
	cmpl	$85, -112(%rbp)	#, code
	je	.L1097	#,
	.loc 1 6650 0 discriminator 1
	cmpl	$86, -112(%rbp)	#, code
	je	.L1097	#,
	cmpl	$77, -112(%rbp)	#, code
	jne	.L1098	#,
.L1097:
	movl	$1, %eax	#, iftmp.900
	jmp	.L1099	#
.L1098:
	.loc 1 6650 0 discriminator 3
	movl	$0, %eax	#, iftmp.900
.L1099:
	.loc 1 6650 0 discriminator 4
	movl	%eax, -108(%rbp)	# iftmp.900, next_select
	.loc 1 6661 0 is_stmt 1 discriminator 4
	cmpl	$50, -112(%rbp)	#, code
	je	.L1100	#,
	.loc 1 6661 0 is_stmt 0 discriminator 1
	cmpl	$41, -112(%rbp)	#, code
	je	.L1100	#,
	cmpl	$49, -112(%rbp)	#, code
	jne	.L1101	#,
.L1100:
	.loc 1 6662 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, D.29292
	jmp	.L1102	#
.L1101:
	.loc 1 6667 0
	movl	-140(%rbp), %eax	# mode, mode.902
	cltq
	movl	mode_class(,%rax,4), %edx	# mode_class, D.29294
	movq	-136(%rbp), %rax	# x, tmp583
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29294
	cmpl	%eax, %edx	# D.29294, D.29294
	jne	.L1103	#,
	.loc 1 6668 0
	movl	-140(%rbp), %edx	# mode, tmp585
	movl	-112(%rbp), %eax	# code, tmp586
	movl	%edx, %esi	# tmp585,
	movl	%eax, %edi	# tmp586,
	call	have_insn_for	#
	testl	%eax, %eax	# D.29296
	jne	.L1104	#,
.L1103:
	.loc 1 6669 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp587
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	.loc 1 6667 0 discriminator 1
	movzbl	%al, %eax	# D.29295, iftmp.901
	jmp	.L1105	#
.L1104:
	.loc 1 6667 0 is_stmt 0
	movl	-140(%rbp), %eax	# mode, iftmp.901
.L1105:
	.loc 1 6667 0 discriminator 2
	movl	%eax, -120(%rbp)	# iftmp.901, op_mode
	.loc 1 6673 0 is_stmt 1 discriminator 2
	cmpl	$90, -112(%rbp)	#, code
	je	.L1106	#,
	.loc 1 6673 0 is_stmt 0 discriminator 1
	cmpl	$89, -112(%rbp)	#, code
	jne	.L1107	#,
.L1106:
	.loc 1 6674 0 is_stmt 1
	movl	-140(%rbp), %eax	# mode, mode.903
	cltq
	movzwl	mode_bitsize(%rax,%rax), %edx	# mode_bitsize, D.29293
	movq	-136(%rbp), %rax	# x, tmp589
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	cmpw	%ax, %dx	# D.29293, D.29293
	jae	.L1107	#,
	.loc 1 6675 0
	movq	-136(%rbp), %rax	# x, tmp591
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, tmp592
	movl	%eax, -120(%rbp)	# tmp592, op_mode
.L1107:
	.loc 1 6678 0
	cmpl	$0, -120(%rbp)	#, op_mode
	je	.L1108	#,
	.loc 1 6679 0
	movl	-120(%rbp), %eax	# op_mode, op_mode.904
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29297
	andq	%rax, -152(%rbp)	# D.29297, mask
.L1108:
	.loc 1 6684 0
	cmpl	$0, -120(%rbp)	#, op_mode
	je	.L1109	#,
	.loc 1 6685 0
	movl	-120(%rbp), %eax	# op_mode, op_mode.906
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	.loc 1 6687 0
	cmpw	$63, %ax	#, D.29293
	jbe	.L1110	#,
	.loc 1 6686 0
	movl	-120(%rbp), %eax	# op_mode, op_mode.907
	.loc 1 6687 0
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, iftmp.905
	jmp	.L1111	#
.L1110:
	.loc 1 6687 0 is_stmt 0 discriminator 1
	movq	-152(%rbp), %rax	# mask, tmp596
	movq	%rax, %rdi	# tmp596,
	call	floor_log2_wide	#
	addl	$1, %eax	#, D.29296
	movl	$1, %edx	#, tmp597
	movl	%eax, %ecx	# D.29296, tmp1011
	salq	%cl, %rdx	# tmp1011, D.29297
	movq	%rdx, %rax	# D.29297, D.29297
	subq	$1, %rax	#, iftmp.905
.L1111:
	.loc 1 6685 0 is_stmt 1 discriminator 1
	movq	%rax, -96(%rbp)	# iftmp.905, fuller_mask
	jmp	.L1112	#
.L1109:
	.loc 1 6690 0
	movq	$-1, -96(%rbp)	#, fuller_mask
.L1112:
	.loc 1 6693 0
	movl	-140(%rbp), %edx	# mode, tmp598
	movq	-136(%rbp), %rax	# x, tmp599
	movl	%edx, %esi	# tmp598,
	movq	%rax, %rdi	# tmp599,
	call	nonzero_bits	#
	movq	%rax, -88(%rbp)	# tmp600, nonzero
	.loc 1 6696 0
	cmpl	$0, -144(%rbp)	#, just_select
	jne	.L1113	#,
	.loc 1 6696 0 is_stmt 0 discriminator 1
	movq	-152(%rbp), %rax	# mask, tmp601
	movq	-88(%rbp), %rdx	# nonzero, tmp602
	andq	%rdx, %rax	# tmp602, D.29297
	testq	%rax, %rax	# D.29297
	jne	.L1113	#,
	.loc 1 6697 0 is_stmt 1
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29292
	jmp	.L1102	#
.L1113:
	.loc 1 6701 0
	movq	-136(%rbp), %rax	# x, tmp603
	movzwl	(%rax), %eax	# x_30(D)->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1114	#,
	.loc 1 6702 0
	movq	-136(%rbp), %rax	# x, tmp604
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtwint, D.29298
	andq	-152(%rbp), %rax	# mask, D.29297
	movl	-140(%rbp), %edx	# mode, tmp605
	movl	%edx, %esi	# tmp605,
	movq	%rax, %rdi	# D.29298,
	call	gen_int_mode	#
	jmp	.L1102	#
.L1114:
	.loc 1 6706 0
	movq	-136(%rbp), %rax	# x, tmp606
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29295
	movl	-140(%rbp), %eax	# mode, mode.908
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29295
	cmpb	%al, %dl	# D.29295, D.29295
	jae	.L1115	#,
	.loc 1 6707 0
	movq	-136(%rbp), %rax	# x, tmp609
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29297
	movq	-152(%rbp), %rdx	# mask, tmp611
	notq	%rdx	# D.29297
	andq	%rdx, %rax	# D.29297, D.29297
	testq	%rax, %rax	# D.29297
	jne	.L1115	#,
	.loc 1 6708 0
	movq	-136(%rbp), %rdx	# x, tmp612
	movl	-140(%rbp), %eax	# mode, tmp613
	movq	%rdx, %rsi	# tmp612,
	movl	%eax, %edi	# tmp613,
	call	gen_lowpart_for_combine	#
	jmp	.L1102	#
.L1115:
	.loc 1 6712 0
	movq	-136(%rbp), %rax	# x, tmp614
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29299
	cmpl	-140(%rbp), %eax	# mode, D.29299
	jne	.L1116	#,
	.loc 1 6712 0 is_stmt 0 discriminator 1
	cmpl	$63, -112(%rbp)	#, code
	je	.L1116	#,
	movq	-152(%rbp), %rax	# mask, tmp615
	notq	%rax	# D.29297
	andq	-88(%rbp), %rax	# nonzero, D.29297
	testq	%rax, %rax	# D.29297
	jne	.L1116	#,
	.loc 1 6713 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, D.29292
	jmp	.L1102	#
.L1116:
	.loc 1 6715 0
	movl	-112(%rbp), %eax	# code, tmp617
	subl	$48, %eax	#, tmp616
	cmpl	$85, %eax	#, tmp616
	ja	.L1185	#,
	movl	%eax, %eax	# tmp616, tmp618
	movq	.L1119(,%rax,8), %rax	#, tmp619
	jmp	*%rax	# tmp619
	.section	.rodata
	.align 8
	.align 4
.L1119:
	.quad	.L1118
	.quad	.L1120
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1121
	.quad	.L1185
	.quad	.L1122
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1123
	.quad	.L1185
	.quad	.L1185
	.quad	.L1124
	.quad	.L1125
	.quad	.L1126
	.quad	.L1127
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1128
	.quad	.L1129
	.quad	.L1129
	.quad	.L1130
	.quad	.L1131
	.quad	.L1132
	.quad	.L1133
	.quad	.L1134
	.quad	.L1132
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1135
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1136
	.quad	.L1136
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1185
	.quad	.L1136
	.quad	.L1136
	.text
.L1120:
	.loc 1 6720 0
	movq	-136(%rbp), %rax	# x, D.29292
	jmp	.L1102	#
.L1118:
	.loc 1 6727 0
	movq	-136(%rbp), %rax	# x, tmp620
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movzbl	2(%rax), %eax	# _95->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29297
	notq	%rax	# D.29297
	andq	-152(%rbp), %rax	# mask, D.29297
	.loc 1 6726 0
	testq	%rax, %rax	# D.29297
	jne	.L1137	#,
	.loc 1 6728 0
	movq	-136(%rbp), %rax	# x, tmp622
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp623
	movq	-160(%rbp), %rcx	# reg, tmp624
	movq	-152(%rbp), %rdx	# mask, tmp625
	movl	-140(%rbp), %esi	# mode, tmp626
	movl	%edi, %r8d	# tmp623,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	jmp	.L1102	#
.L1137:
	.loc 1 6729 0
	jmp	.L1138	#
.L1136:
	.loc 1 6735 0
	movq	-136(%rbp), %rax	# x, tmp627
	movq	%rax, %rdi	# tmp627,
	call	expand_compound_operation	#
	movq	%rax, -136(%rbp)	# tmp628, x
	.loc 1 6736 0
	movq	-136(%rbp), %rax	# x, tmp629
	movzwl	(%rax), %eax	# x_104->code, D.29293
	movzwl	%ax, %eax	# D.29293, D.29299
	cmpl	-112(%rbp), %eax	# code, D.29299
	je	.L1139	#,
	.loc 1 6737 0
	movl	-108(%rbp), %edi	# next_select, tmp630
	movq	-160(%rbp), %rcx	# reg, tmp631
	movq	-152(%rbp), %rdx	# mask, tmp632
	movl	-140(%rbp), %esi	# mode, tmp633
	movq	-136(%rbp), %rax	# x, tmp634
	movl	%edi, %r8d	# tmp630,
	movq	%rax, %rdi	# tmp634,
	call	force_to_mode	#
	jmp	.L1102	#
.L1139:
	.loc 1 6738 0
	jmp	.L1138	#
.L1121:
	.loc 1 6741 0
	cmpq	$0, -160(%rbp)	#, reg
	je	.L1140	#,
	.loc 1 6741 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# reg, tmp635
	movq	%rax, %rdi	# tmp635,
	call	get_last_value	#
	movq	-136(%rbp), %rdx	# x, tmp636
	movq	%rdx, %rsi	# tmp636,
	movq	%rax, %rdi	# D.29300,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29296
	jne	.L1141	#,
	.loc 1 6742 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp637
	movq	%rax, %rdi	# tmp637,
	call	get_last_value	#
	movq	%rax, %rdx	#, D.29300
	movq	-160(%rbp), %rax	# reg, tmp638
	movq	%rdx, %rsi	# D.29300,
	movq	%rax, %rdi	# tmp638,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29296
	je	.L1140	#,
.L1141:
	.loc 1 6743 0
	movq	-160(%rbp), %rax	# reg, tmp639
	movq	%rax, -136(%rbp)	# tmp639, x
	.loc 1 6744 0
	jmp	.L1138	#
.L1140:
	jmp	.L1138	#
.L1122:
	.loc 1 6747 0
	movq	-136(%rbp), %rax	# x, tmp640
	movq	%rax, %rdi	# tmp640,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29296
	je	.L1142	#,
	.loc 1 6751 0
	movq	-136(%rbp), %rax	# x, tmp641
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29295
	.loc 1 6752 0
	movq	-136(%rbp), %rax	# x, tmp643
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movzbl	2(%rax), %eax	# _117->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29295
	.loc 1 6751 0
	cmpb	%al, %dl	# D.29295, D.29295
	jb	.L1143	#,
	.loc 1 6754 0
	movq	-136(%rbp), %rax	# x, tmp645
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29297
	andq	-152(%rbp), %rax	# mask, D.29297
	movq	%rax, %rdx	# D.29297, D.29297
	.loc 1 6755 0
	movq	-136(%rbp), %rax	# x, tmp647
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movzbl	2(%rax), %eax	# _125->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29297
	notq	%rax	# D.29297
	andq	%rdx, %rax	# D.29297, D.29297
	.loc 1 6753 0
	testq	%rax, %rax	# D.29297
	jne	.L1142	#,
.L1143:
	.loc 1 6756 0
	movq	-136(%rbp), %rax	# x, tmp649
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp650
	movq	-160(%rbp), %rcx	# reg, tmp651
	movq	-152(%rbp), %rdx	# mask, tmp652
	movl	-140(%rbp), %esi	# mode, tmp653
	movl	%edi, %r8d	# tmp650,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	jmp	.L1102	#
.L1142:
	.loc 1 6757 0
	jmp	.L1138	#
.L1128:
	.loc 1 6764 0
	movq	-136(%rbp), %rax	# x, tmp654
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _133->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1144	#,
	.loc 1 6767 0
	movq	-136(%rbp), %rax	# x, tmp655
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _135->fld[0].rtwint, D.29298
	.loc 1 6766 0
	andq	-152(%rbp), %rax	# mask, D.29297
	movq	%rax, %rcx	# D.29297, D.29297
	movq	-136(%rbp), %rax	# x, tmp656
	movq	8(%rax), %rdx	# x_30(D)->fld[0].rtx, D.29300
	movl	-120(%rbp), %esi	# op_mode, tmp657
	movq	-136(%rbp), %rax	# x, tmp658
	movq	%rax, %rdi	# tmp658,
	call	simplify_and_const_int	#
	movq	%rax, -136(%rbp)	# tmp659, x
	.loc 1 6773 0
	movq	-136(%rbp), %rax	# x, tmp660
	movzwl	(%rax), %eax	# x_140->code, D.29293
	cmpw	$83, %ax	#, D.29293
	jne	.L1145	#,
	.loc 1 6773 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp661
	movq	16(%rax), %rax	# x_140->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _142->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1145	#,
	.loc 1 6774 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp662
	movq	16(%rax), %rax	# x_140->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _144->fld[0].rtwint, D.29298
	movq	%rax, %rdx	# D.29298, D.29297
	movq	-136(%rbp), %rax	# x, tmp663
	movzbl	2(%rax), %eax	# x_140->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29297
	andq	%rdx, %rax	# D.29297, D.29297
	cmpq	-152(%rbp), %rax	# mask, D.29297
	jne	.L1145	#,
	.loc 1 6776 0
	movq	-136(%rbp), %rax	# x, tmp665
	movq	8(%rax), %rax	# x_140->fld[0].rtx, tmp666
	movq	%rax, -136(%rbp)	# tmp666, x
.L1145:
	.loc 1 6783 0
	movq	-136(%rbp), %rax	# x, tmp667
	movzwl	(%rax), %eax	# x_2->code, D.29293
	cmpw	$83, %ax	#, D.29293
	jne	.L1146	#,
	.loc 1 6783 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp668
	movq	16(%rax), %rax	# x_2->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _153->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1146	#,
	.loc 1 6784 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp669
	movzbl	2(%rax), %eax	# x_2->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29297
	cmpq	-152(%rbp), %rax	# mask, D.29297
	je	.L1146	#,
	.loc 1 6785 0
	movq	-136(%rbp), %rax	# x, tmp671
	movzbl	2(%rax), %eax	# x_2->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	cmpw	$64, %ax	#, D.29293
	ja	.L1146	#,
.LBB75:
	.loc 1 6787 0
	movq	-136(%rbp), %rax	# x, tmp673
	movq	16(%rax), %rax	# x_2->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _161->fld[0].rtwint, D.29298
	.loc 1 6788 0
	movq	%rax, %rdx	# D.29298, D.29297
	movq	-136(%rbp), %rax	# x, tmp674
	movzbl	2(%rax), %eax	# x_2->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29297
	movq	-152(%rbp), %rcx	# mask, tmp676
	notq	%rcx	# D.29297
	andq	%rcx, %rax	# D.29297, D.29297
	orq	%rdx, %rax	# D.29297, D.29297
	.loc 1 6787 0
	movq	%rax, -80(%rbp)	# D.29297, cval
	.loc 1 6789 0
	movq	-136(%rbp), %rax	# x, tmp677
	movzbl	2(%rax), %eax	# x_2->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %eax	# D.29293, tmp679
	movl	%eax, -104(%rbp)	# tmp679, width
	.loc 1 6794 0
	cmpl	$0, -104(%rbp)	#, width
	jle	.L1147	#,
	.loc 1 6794 0 is_stmt 0 discriminator 1
	cmpl	$63, -104(%rbp)	#, width
	jg	.L1147	#,
	.loc 1 6795 0 is_stmt 1
	movl	-104(%rbp), %eax	# width, tmp680
	subl	$1, %eax	#, D.29296
	movq	-80(%rbp), %rdx	# cval, tmp681
	movl	%eax, %ecx	# D.29296, tmp1015
	sarq	%cl, %rdx	# tmp1015, D.29298
	movq	%rdx, %rax	# D.29298, D.29298
	andl	$1, %eax	#, D.29298
	testq	%rax, %rax	# D.29298
	je	.L1147	#,
	.loc 1 6796 0
	movl	-104(%rbp), %eax	# width, tmp682
	movq	$-1, %rdx	#, tmp683
	movl	%eax, %ecx	# tmp682, tmp1017
	salq	%cl, %rdx	# tmp1017, D.29298
	movq	%rdx, %rax	# D.29298, D.29298
	orq	%rax, -80(%rbp)	# D.29298, cval
.L1147:
	.loc 1 6798 0
	movq	-80(%rbp), %rax	# cval, tmp684
	movq	%rax, %rsi	# tmp684,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29300
	movq	-136(%rbp), %rax	# x, tmp685
	movq	8(%rax), %rdx	# x_2->fld[0].rtx, D.29300
	movq	-136(%rbp), %rax	# x, tmp686
	movzbl	2(%rax), %eax	# x_2->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29301
	movl	%eax, %esi	# D.29301,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, -64(%rbp)	# tmp687, y
	.loc 1 6799 0
	movq	-64(%rbp), %rax	# y, tmp688
	movl	$47, %esi	#,
	movq	%rax, %rdi	# tmp688,
	call	rtx_cost	#
	movl	%eax, %ebx	#, D.29296
	movq	-136(%rbp), %rax	# x, tmp689
	movl	$47, %esi	#,
	movq	%rax, %rdi	# tmp689,
	call	rtx_cost	#
	cmpl	%eax, %ebx	# D.29296, D.29296
	jge	.L1146	#,
	.loc 1 6800 0
	movq	-64(%rbp), %rax	# y, tmp690
	movq	%rax, -136(%rbp)	# tmp690, x
.LBE75:
	.loc 1 6803 0
	jmp	.L1138	#
.L1146:
	jmp	.L1138	#
.L1144:
	.loc 1 6806 0
	jmp	.L1148	#
.L1124:
.LBB76:
	.loc 1 6815 0
	movl	-140(%rbp), %eax	# mode, mode.909
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %eax	# D.29293, tmp692
	movl	%eax, -100(%rbp)	# tmp692, width
	.loc 1 6816 0
	movq	-152(%rbp), %rax	# mask, tmp693
	movq	%rax, -72(%rbp)	# tmp693, smask
	.loc 1 6821 0
	cmpl	$63, -100(%rbp)	#, width
	ja	.L1149	#,
	.loc 1 6822 0
	movl	-100(%rbp), %eax	# width, tmp694
	subl	$1, %eax	#, D.29299
	movl	$1, %edx	#, tmp695
	movl	%eax, %ecx	# D.29296, tmp1019
	salq	%cl, %rdx	# tmp1019, D.29298
	movq	%rdx, %rax	# D.29298, D.29298
	andq	-72(%rbp), %rax	# smask, D.29297
	testq	%rax, %rax	# D.29297
	je	.L1149	#,
	.loc 1 6823 0
	movl	-100(%rbp), %eax	# width, width.910
	movq	$-1, %rdx	#, tmp696
	movl	%eax, %ecx	# width.910, tmp1021
	salq	%cl, %rdx	# tmp1021, D.29298
	movq	%rdx, %rax	# D.29298, D.29298
	orq	%rax, -72(%rbp)	# D.29297, smask
.L1149:
	.loc 1 6825 0
	movq	-136(%rbp), %rax	# x, tmp697
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _201->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1127	#,
	.loc 1 6826 0
	movq	-72(%rbp), %rax	# smask, tmp698
	negq	%rax	# D.29297
	movq	%rax, %rdi	# D.29297,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29296
	js	.L1127	#,
	.loc 1 6827 0
	movq	-136(%rbp), %rax	# x, tmp699
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-140(%rbp), %edx	# mode, tmp700
	movl	%edx, %esi	# tmp700,
	movq	%rax, %rdi	# D.29300,
	call	nonzero_bits	#
	movq	-72(%rbp), %rdx	# smask, tmp701
	notq	%rdx	# D.29297
	andq	%rdx, %rax	# D.29297, D.29297
	testq	%rax, %rax	# D.29297
	jne	.L1127	#,
	.loc 1 6828 0
	movq	-136(%rbp), %rax	# x, tmp702
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _209->fld[0].rtwint, D.29298
	movq	-72(%rbp), %rdx	# smask, tmp703
	notq	%rdx	# D.29297
	andq	%rdx, %rax	# D.29297, D.29297
	testq	%rax, %rax	# D.29297
	je	.L1127	#,
	.loc 1 6829 0
	movq	-136(%rbp), %rax	# x, tmp704
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _214->fld[0].rtwint, D.29298
	andq	-72(%rbp), %rax	# smask, D.29297
	movq	%rax, %rdx	# D.29297, D.29298
	movq	-136(%rbp), %rax	# x, tmp705
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	%rdx, %rsi	# D.29298,
	movq	%rax, %rdi	# D.29300,
	call	plus_constant_wide	#
	movl	-108(%rbp), %edi	# next_select, tmp706
	movq	-160(%rbp), %rcx	# reg, tmp707
	movq	-72(%rbp), %rdx	# smask, tmp708
	movl	-140(%rbp), %esi	# mode, tmp709
	movl	%edi, %r8d	# tmp706,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	jmp	.L1102	#
.L1127:
.LBE76:
	.loc 1 6840 0
	movq	-96(%rbp), %rax	# fuller_mask, tmp710
	movq	%rax, -152(%rbp)	# tmp710, mask
	.loc 1 6841 0
	jmp	.L1148	#
.L1125:
	.loc 1 6846 0
	movq	-136(%rbp), %rax	# x, tmp711
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movzwl	(%rax), %eax	# _223->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1150	#,
	.loc 1 6847 0
	movq	-136(%rbp), %rax	# x, tmp712
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	8(%rax), %rdx	# _225->fld[0].rtwint, D.29298
	.loc 1 6848 0
	movq	-136(%rbp), %rax	# x, tmp713
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	8(%rax), %rax	# _227->fld[0].rtwint, D.29298
	negq	%rax	# D.29298
	andq	%rdx, %rax	# D.29298, D.29298
	.loc 1 6847 0
	cmpq	-152(%rbp), %rax	# mask, D.29297
	jbe	.L1150	#,
	.loc 1 6852 0
	movq	-136(%rbp), %rax	# x, tmp714
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	.loc 1 6851 0
	movzbl	%al, %ecx	# D.29295, D.29301
	movq	-136(%rbp), %rax	# x, tmp715
	movq	16(%rax), %rdx	# x_30(D)->fld[1].rtx, D.29300
	movq	-136(%rbp), %rax	# x, tmp716
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29301
	movl	%eax, %esi	# D.29301,
	movl	$77, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, -136(%rbp)	# tmp717, x
	.loc 1 6853 0
	movl	-108(%rbp), %edi	# next_select, tmp718
	movq	-160(%rbp), %rcx	# reg, tmp719
	movq	-152(%rbp), %rdx	# mask, tmp720
	movl	-140(%rbp), %esi	# mode, tmp721
	movq	-136(%rbp), %rax	# x, tmp722
	movl	%edi, %r8d	# tmp718,
	movq	%rax, %rdi	# tmp722,
	call	force_to_mode	#
	jmp	.L1102	#
.L1150:
	.loc 1 6858 0
	movq	-136(%rbp), %rax	# x, tmp723
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movzwl	(%rax), %eax	# _239->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1151	#,
	.loc 1 6859 0
	movq	-136(%rbp), %rax	# x, tmp724
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	8(%rax), %rdx	# _241->fld[0].rtwint, D.29298
	movq	-152(%rbp), %rax	# mask, mask.911
	orq	%rax, %rdx	# mask.911, D.29298
	.loc 1 6860 0
	movq	-136(%rbp), %rax	# x, tmp725
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	8(%rax), %rax	# _245->fld[0].rtwint, D.29298
	.loc 1 6859 0
	cmpq	%rax, %rdx	# D.29298, D.29298
	jne	.L1151	#,
	.loc 1 6863 0
	movq	-136(%rbp), %rax	# x, tmp726
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	.loc 1 6862 0
	movzbl	%al, %ecx	# D.29295, D.29301
	movq	-136(%rbp), %rax	# x, tmp727
	movq	16(%rax), %rdx	# x_30(D)->fld[1].rtx, D.29300
	movq	-136(%rbp), %rax	# x, tmp728
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29301
	movl	%eax, %esi	# D.29301,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, -136(%rbp)	# tmp729, x
	.loc 1 6864 0
	movl	-108(%rbp), %edi	# next_select, tmp730
	movq	-160(%rbp), %rcx	# reg, tmp731
	movq	-152(%rbp), %rdx	# mask, tmp732
	movl	-140(%rbp), %esi	# mode, tmp733
	movq	-136(%rbp), %rax	# x, tmp734
	movl	%edi, %r8d	# tmp730,
	movq	%rax, %rdi	# tmp734,
	call	force_to_mode	#
	jmp	.L1102	#
.L1151:
	.loc 1 6867 0
	movq	-96(%rbp), %rax	# fuller_mask, tmp735
	movq	%rax, -152(%rbp)	# tmp735, mask
	.loc 1 6868 0
	jmp	.L1148	#
.L1129:
	.loc 1 6877 0
	movq	-136(%rbp), %rax	# x, tmp736
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movzwl	(%rax), %eax	# _255->code, D.29293
	cmpw	$90, %ax	#, D.29293
	jne	.L1148	#,
	.loc 1 6878 0
	movq	-136(%rbp), %rax	# x, tmp737
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _257->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _258->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1148	#,
	.loc 1 6879 0
	movq	-136(%rbp), %rax	# x, tmp738
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _260->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _261->fld[0].rtwint, D.29298
	testq	%rax, %rax	# D.29298
	js	.L1148	#,
	.loc 1 6880 0
	movq	-136(%rbp), %rax	# x, tmp739
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _263->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _264->fld[0].rtwint, D.29298
	cmpq	$63, %rax	#, D.29298
	jg	.L1148	#,
	.loc 1 6881 0
	movq	-136(%rbp), %rax	# x, tmp740
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _266->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1148	#,
	.loc 1 6882 0
	movq	-136(%rbp), %rax	# x, tmp741
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _268->fld[1].rtx, D.29300
	movq	8(%rax), %rbx	# _269->fld[0].rtwint, D.29298
	.loc 1 6883 0
	movq	-136(%rbp), %rax	# x, tmp742
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _271->fld[0].rtwint, D.29298
	movq	%rax, %rdi	# D.29297,
	call	floor_log2_wide	#
	cltq
	leaq	(%rbx,%rax), %rdx	#, D.29298
	.loc 1 6884 0
	movq	-136(%rbp), %rax	# x, tmp743
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %eax	# D.29293, D.29298
	.loc 1 6882 0
	cmpq	%rax, %rdx	# D.29298, D.29298
	jge	.L1148	#,
	.loc 1 6885 0
	movq	-136(%rbp), %rax	# x, tmp745
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _281->fld[0].rtwint, D.29298
	.loc 1 6886 0
	movq	%rax, %rbx	# D.29298, D.29297
	movq	-136(%rbp), %rax	# x, tmp746
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %edx	# D.29295, D.29301
	movq	-136(%rbp), %rax	# x, tmp747
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	%edx, %esi	# D.29301,
	movq	%rax, %rdi	# D.29300,
	call	nonzero_bits	#
	notq	%rax	# D.29297
	andq	%rbx, %rax	# D.29297, D.29297
	.loc 1 6885 0
	testq	%rax, %rax	# D.29297
	jne	.L1148	#,
	.loc 1 6888 0
	movq	-136(%rbp), %rax	# x, tmp748
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _290->fld[0].rtwint, D.29298
	andq	-152(%rbp), %rax	# mask, D.29297
	movq	%rax, %rdx	# D.29297, D.29297
	movq	-136(%rbp), %rax	# x, tmp749
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _294->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _295->fld[0].rtwint, D.29298
	movl	%eax, %ecx	# D.29296, tmp1024
	salq	%cl, %rdx	# tmp1024, D.29297
	movq	%rdx, %rax	# D.29297, D.29297
	movq	%rax, %rsi	# D.29298,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -56(%rbp)	# tmp750, temp
	.loc 1 6891 0
	movq	-136(%rbp), %rax	# x, tmp751
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	.loc 1 6890 0
	movq	8(%rax), %rdx	# _301->fld[0].rtx, D.29300
	movq	-136(%rbp), %rax	# x, tmp752
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %esi	# D.29295, D.29301
	movq	-136(%rbp), %rax	# x, tmp753
	movzwl	(%rax), %eax	# x_30(D)->code, D.29293
	movzwl	%ax, %eax	# D.29293, D.29302
	movq	-56(%rbp), %rcx	# temp, tmp754
	movl	%eax, %edi	# D.29302,
	call	gen_binary	#
	movq	%rax, -56(%rbp)	# tmp755, temp
	.loc 1 6893 0
	movq	-136(%rbp), %rax	# x, tmp756
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	.loc 1 6892 0
	movq	16(%rax), %rcx	# _308->fld[1].rtx, D.29300
	movq	-136(%rbp), %rax	# x, tmp757
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29301
	movq	-56(%rbp), %rdx	# temp, tmp758
	movl	%eax, %esi	# D.29301,
	movl	$90, %edi	#,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp759, x
	.loc 1 6894 0
	movl	-108(%rbp), %edi	# next_select, tmp760
	movq	-160(%rbp), %rcx	# reg, tmp761
	movq	-152(%rbp), %rdx	# mask, tmp762
	movl	-140(%rbp), %esi	# mode, tmp763
	movq	-136(%rbp), %rax	# x, tmp764
	movl	%edi, %r8d	# tmp760,
	movq	%rax, %rdi	# tmp764,
	call	force_to_mode	#
	jmp	.L1102	#
.L1148:
	.loc 1 6901 0
	movq	-136(%rbp), %rax	# x, tmp765
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp766
	movq	-160(%rbp), %rcx	# reg, tmp767
	movq	-152(%rbp), %rdx	# mask, tmp768
	movl	-140(%rbp), %esi	# mode, tmp769
	movl	%edi, %r8d	# tmp766,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	movq	%rax, %rdx	#, D.29300
	movl	-120(%rbp), %eax	# op_mode, tmp770
	movq	%rdx, %rsi	# D.29300,
	movl	%eax, %edi	# tmp770,
	call	gen_lowpart_for_combine	#
	movq	%rax, -48(%rbp)	# tmp771, op0
	.loc 1 6904 0
	movq	-136(%rbp), %rax	# x, tmp772
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp773
	movq	-160(%rbp), %rcx	# reg, tmp774
	movq	-152(%rbp), %rdx	# mask, tmp775
	movl	-140(%rbp), %esi	# mode, tmp776
	movl	%edi, %r8d	# tmp773,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	movq	%rax, %rdx	#, D.29300
	movl	-120(%rbp), %eax	# op_mode, tmp777
	movq	%rdx, %rsi	# D.29300,
	movl	%eax, %edi	# tmp777,
	call	gen_lowpart_for_combine	#
	movq	%rax, -40(%rbp)	# tmp778, op1
	.loc 1 6908 0
	movq	-136(%rbp), %rax	# x, tmp779
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29299
	cmpl	-120(%rbp), %eax	# op_mode, D.29299
	jne	.L1152	#,
	.loc 1 6908 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp780
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	cmpq	-48(%rbp), %rax	# op0, D.29300
	jne	.L1152	#,
	movq	-136(%rbp), %rax	# x, tmp781
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	cmpq	-40(%rbp), %rax	# op1, D.29300
	je	.L1153	#,
.L1152:
	.loc 1 6909 0 is_stmt 1
	movq	-40(%rbp), %rcx	# op1, tmp782
	movq	-48(%rbp), %rdx	# op0, tmp783
	movl	-120(%rbp), %esi	# op_mode, tmp784
	movl	-112(%rbp), %eax	# code, tmp785
	movl	%eax, %edi	# tmp785,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp786, x
	.loc 1 6910 0
	jmp	.L1138	#
.L1153:
	jmp	.L1138	#
.L1131:
	.loc 1 6919 0
	movq	-136(%rbp), %rax	# x, tmp787
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _325->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1154	#,
	.loc 1 6920 0
	movq	-136(%rbp), %rax	# x, tmp788
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _327->fld[0].rtwint, D.29298
	testq	%rax, %rax	# D.29298
	js	.L1154	#,
	.loc 1 6921 0
	movq	-136(%rbp), %rax	# x, tmp789
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rdx	# _329->fld[0].rtwint, D.29298
	movl	-140(%rbp), %eax	# mode, mode.912
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %eax	# D.29293, D.29298
	.loc 1 6919 0
	cmpq	%rax, %rdx	# D.29298, D.29298
	jl	.L1155	#,
.L1154:
	.loc 1 6922 0
	movq	-136(%rbp), %rax	# x, tmp791
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movzbl	2(%rax), %eax	# _334->mode, D.29295
	testb	%al, %al	# D.29295
	je	.L1138	#,
	.loc 1 6923 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp792
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movzbl	2(%rax), %eax	# _336->mode, D.29295
	movzbl	%al, %edx	# D.29295, D.29301
	movq	-136(%rbp), %rax	# x, tmp793
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movl	%edx, %esi	# D.29301,
	movq	%rax, %rdi	# D.29300,
	call	nonzero_bits	#
	.loc 1 6924 0 discriminator 1
	movl	-140(%rbp), %edx	# mode, mode.913
	movslq	%edx, %rdx	# mode.913, tmp794
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29293
	movzwl	%dx, %edx	# D.29293, D.29297
	.loc 1 6922 0 discriminator 1
	cmpq	%rdx, %rax	# D.29297, D.29297
	jae	.L1138	#,
.L1155:
	.loc 1 6930 0
	movq	-136(%rbp), %rax	# x, tmp795
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _344->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1156	#,
	.loc 1 6931 0
	movq	-136(%rbp), %rax	# x, tmp796
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _346->fld[0].rtwint, D.29298
	testq	%rax, %rax	# D.29298
	js	.L1156	#,
	.loc 1 6932 0
	movq	-136(%rbp), %rax	# x, tmp797
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rdx	# _348->fld[0].rtwint, D.29298
	movl	-120(%rbp), %eax	# op_mode, op_mode.914
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %eax	# D.29293, D.29298
	cmpq	%rax, %rdx	# D.29298, D.29298
	jge	.L1156	#,
	.loc 1 6933 0
	movl	-120(%rbp), %eax	# op_mode, op_mode.915
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	cmpw	$64, %ax	#, D.29293
	ja	.L1156	#,
	.loc 1 6934 0
	movq	-136(%rbp), %rax	# x, tmp800
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _355->fld[0].rtwint, D.29298
	movl	%eax, %ecx	# D.29296, tmp1025
	shrq	%cl, -152(%rbp)	# tmp1025, mask
	jmp	.L1157	#
.L1156:
	.loc 1 6936 0
	movq	-96(%rbp), %rax	# fuller_mask, tmp801
	movq	%rax, -152(%rbp)	# tmp801, mask
.L1157:
	.loc 1 6938 0
	movq	-136(%rbp), %rax	# x, tmp802
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp803
	movq	-160(%rbp), %rcx	# reg, tmp804
	movq	-152(%rbp), %rdx	# mask, tmp805
	movl	-120(%rbp), %esi	# op_mode, tmp806
	movl	%edi, %r8d	# tmp803,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	movq	%rax, %rdx	#, D.29300
	movl	-120(%rbp), %eax	# op_mode, tmp807
	movq	%rdx, %rsi	# D.29300,
	movl	%eax, %edi	# tmp807,
	call	gen_lowpart_for_combine	#
	movq	%rax, -48(%rbp)	# tmp808, op0
	.loc 1 6942 0
	movq	-136(%rbp), %rax	# x, tmp809
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29299
	cmpl	-120(%rbp), %eax	# op_mode, D.29299
	jne	.L1158	#,
	.loc 1 6942 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp810
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	cmpq	-48(%rbp), %rax	# op0, D.29300
	je	.L1159	#,
.L1158:
	.loc 1 6943 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp811
	movq	16(%rax), %rcx	# x_30(D)->fld[1].rtx, D.29300
	movq	-48(%rbp), %rdx	# op0, tmp812
	movl	-120(%rbp), %esi	# op_mode, tmp813
	movl	-112(%rbp), %eax	# code, tmp814
	movl	%eax, %edi	# tmp814,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp815, x
	.loc 1 6944 0
	jmp	.L1138	#
.L1159:
	jmp	.L1138	#
.L1134:
	.loc 1 6951 0
	movq	-136(%rbp), %rax	# x, tmp816
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _368->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1160	#,
	.loc 1 6952 0
	movq	-136(%rbp), %rax	# x, tmp817
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _370->fld[0].rtwint, D.29298
	cmpq	$63, %rax	#, D.29298
	jg	.L1160	#,
	.loc 1 6953 0
	movl	-120(%rbp), %eax	# op_mode, op_mode.916
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	cmpw	$64, %ax	#, D.29293
	ja	.L1160	#,
.LBB77:
	.loc 1 6955 0
	movq	-136(%rbp), %rax	# x, tmp819
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, tmp820
	movq	%rax, -32(%rbp)	# tmp820, inner
	.loc 1 6959 0
	movq	-136(%rbp), %rax	# x, tmp821
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _375->fld[0].rtwint, D.29298
	movq	-152(%rbp), %rdx	# mask, tmp825
	movl	%eax, %ecx	# D.29296, tmp1027
	salq	%cl, %rdx	# tmp1027, tmp824
	movq	%rdx, %rax	# tmp824, tmp824
	movq	%rax, -24(%rbp)	# tmp824, inner_mask
	.loc 1 6964 0
	movl	-120(%rbp), %eax	# op_mode, op_mode.917
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	cmpw	$64, %ax	#, D.29293
	ja	.L1161	#,
	.loc 1 6965 0
	movl	-120(%rbp), %eax	# op_mode, op_mode.918
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29297
	notq	%rax	# D.29297
	andq	-24(%rbp), %rax	# inner_mask, D.29297
	testq	%rax, %rax	# D.29297
	je	.L1162	#,
.L1161:
	.loc 1 6966 0
	movq	-136(%rbp), %rax	# x, tmp828
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, tmp829
	movl	%eax, -120(%rbp)	# tmp829, op_mode
.L1162:
	.loc 1 6968 0
	movl	-108(%rbp), %edi	# next_select, tmp830
	movq	-160(%rbp), %rcx	# reg, tmp831
	movq	-24(%rbp), %rdx	# inner_mask, tmp832
	movl	-120(%rbp), %esi	# op_mode, tmp833
	movq	-32(%rbp), %rax	# inner, tmp834
	movl	%edi, %r8d	# tmp830,
	movq	%rax, %rdi	# tmp834,
	call	force_to_mode	#
	movq	%rax, -32(%rbp)	# tmp835, inner
	.loc 1 6970 0
	movq	-136(%rbp), %rax	# x, tmp836
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29299
	cmpl	-120(%rbp), %eax	# op_mode, D.29299
	jne	.L1163	#,
	.loc 1 6970 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp837
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	cmpq	-32(%rbp), %rax	# inner, D.29300
	je	.L1160	#,
.L1163:
	.loc 1 6971 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp838
	movq	16(%rax), %rcx	# x_30(D)->fld[1].rtx, D.29300
	movq	-32(%rbp), %rdx	# inner, tmp839
	movl	-120(%rbp), %eax	# op_mode, tmp840
	movl	%eax, %esi	# tmp840,
	movl	$90, %edi	#,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp841, x
.L1160:
.LBE77:
	.loc 1 6978 0
	movq	-136(%rbp), %rax	# x, tmp842
	movzwl	(%rax), %eax	# x_6->code, D.29293
	cmpw	$90, %ax	#, D.29293
	jne	.L1164	#,
	.loc 1 6979 0
	movq	-136(%rbp), %rax	# x, tmp843
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _394->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1164	#,
	.loc 1 6982 0
	movq	-136(%rbp), %rax	# x, tmp844
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29300
	movq	8(%rax), %rbx	# _396->fld[0].rtwint, D.29298
	.loc 1 6983 0
	movq	-136(%rbp), %rax	# x, tmp845
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29300
	movzbl	2(%rax), %eax	# _398->mode, D.29295
	movzbl	%al, %edx	# D.29295, D.29301
	movq	-136(%rbp), %rax	# x, tmp846
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29300
	movl	%edx, %esi	# D.29301,
	movq	%rax, %rdi	# D.29300,
	call	num_sign_bit_copies	#
	movl	%eax, %eax	# D.29299, D.29298
	leaq	(%rbx,%rax), %rdx	#, D.29298
	.loc 1 6984 0
	movq	-136(%rbp), %rax	# x, tmp847
	movzbl	2(%rax), %eax	# x_6->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %eax	# D.29293, D.29298
	.loc 1 6982 0
	cmpq	%rax, %rdx	# D.29298, D.29298
	jl	.L1164	#,
	.loc 1 6985 0
	movq	-152(%rbp), %rax	# mask, tmp849
	addq	$1, %rax	#, D.29297
	movq	%rax, %rdi	# D.29297,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29296
	js	.L1164	#,
	.loc 1 6988 0
	movq	-136(%rbp), %rax	# x, tmp850
	movq	16(%rax), %rax	# x_6->fld[1].rtx, D.29300
	movq	8(%rax), %rbx	# _411->fld[0].rtwint, D.29298
	movq	-152(%rbp), %rax	# mask, tmp851
	addq	$1, %rax	#, D.29297
	movq	%rax, %rdi	# D.29297,
	call	exact_log2_wide	#
	cltq
	leaq	(%rbx,%rax), %rdx	#, D.29298
	.loc 1 6989 0
	movq	-136(%rbp), %rax	# x, tmp852
	movzbl	2(%rax), %eax	# x_6->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %eax	# D.29293, D.29298
	.loc 1 6988 0
	cmpq	%rax, %rdx	# D.29298, D.29298
	jg	.L1164	#,
	.loc 1 6991 0
	movq	-136(%rbp), %rax	# x, tmp854
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29300
	movzbl	2(%rax), %eax	# _421->mode, D.29295
	movzbl	%al, %edx	# D.29295, D.29301
	movq	-136(%rbp), %rax	# x, tmp855
	movq	8(%rax), %rax	# x_6->fld[0].rtx, D.29300
	movl	%edx, %esi	# D.29301,
	movq	%rax, %rdi	# D.29300,
	call	num_sign_bit_copies	#
	movl	%eax, %ebx	# D.29299, D.29296
	.loc 1 6992 0
	movq	-152(%rbp), %rax	# mask, tmp856
	addq	$1, %rax	#, D.29297
	movq	%rax, %rdi	# D.29297,
	call	exact_log2_wide	#
	.loc 1 6991 0
	cmpl	%eax, %ebx	# D.29296, D.29296
	jl	.L1164	#,
	.loc 1 6994 0
	movq	-136(%rbp), %rax	# x, tmp857
	movzbl	2(%rax), %eax	# x_6->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %ebx	# D.29293, D.29296
	movq	-152(%rbp), %rax	# mask, tmp859
	addq	$1, %rax	#, D.29297
	movq	%rax, %rdi	# D.29297,
	call	exact_log2_wide	#
	subl	%eax, %ebx	# D.29296, D.29296
	movl	%ebx, %eax	# D.29296, D.29296
	.loc 1 6993 0
	cltq
	movq	%rax, %rsi	# D.29298,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29300
	movq	-136(%rbp), %rax	# x, tmp860
	movq	8(%rax), %rdx	# x_6->fld[0].rtx, D.29300
	movq	-136(%rbp), %rax	# x, tmp861
	movzbl	2(%rax), %eax	# x_6->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29301
	movl	%eax, %esi	# D.29301,
	movl	$90, %edi	#,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp862, x
	.loc 1 6997 0
	jmp	.L1165	#
.L1164:
	jmp	.L1165	#
.L1133:
	.loc 1 7002 0
	movq	-136(%rbp), %rax	# x, tmp863
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	cmpw	$64, %ax	#, D.29293
	ja	.L1166	#,
	.loc 1 7004 0
	movq	-136(%rbp), %rax	# x, tmp865
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %eax	# D.29293, D.29296
	subl	$1, %eax	#, D.29296
	movl	$1, %edx	#, tmp867
	movl	%eax, %ecx	# D.29296, tmp1030
	salq	%cl, %rdx	# tmp1030, D.29297
	movq	%rdx, %rax	# D.29297, D.29297
	.loc 1 7003 0
	cmpq	-152(%rbp), %rax	# mask, D.29297
	jne	.L1166	#,
	.loc 1 7005 0
	movq	-136(%rbp), %rax	# x, tmp868
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp869
	movq	-160(%rbp), %rcx	# reg, tmp870
	movq	-152(%rbp), %rdx	# mask, tmp871
	movl	-140(%rbp), %esi	# mode, tmp872
	movl	%edi, %r8d	# tmp869,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	jmp	.L1102	#
.L1166:
	.loc 1 7014 0
	movq	-136(%rbp), %rax	# x, tmp873
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _453->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1167	#,
	.loc 1 7014 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp874
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _455->fld[0].rtwint, D.29298
	testq	%rax, %rax	# D.29298
	js	.L1167	#,
	.loc 1 7015 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp875
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _457->fld[0].rtwint, D.29298
	cmpq	$63, %rax	#, D.29298
	jg	.L1167	#,
.LBB78:
	.loc 1 7017 0
	movl	$-1, -116(%rbp)	#, i
	.loc 1 7023 0
	movq	-136(%rbp), %rax	# x, tmp876
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	cmpw	$64, %ax	#, D.29293
	jbe	.L1168	#,
	.loc 1 7025 0
	movq	$-1, -88(%rbp)	#, nonzero
	.loc 1 7032 0
	movq	-136(%rbp), %rax	# x, tmp878
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %edx	# D.29293, D.29298
	movq	-136(%rbp), %rax	# x, tmp880
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _468->fld[0].rtwint, D.29298
	subq	%rax, %rdx	# D.29298, D.29298
	movq	%rdx, %rax	# D.29298, D.29298
	cmpq	$63, %rax	#, D.29298
	jg	.L1170	#,
	.loc 1 7034 0
	movq	-136(%rbp), %rax	# x, tmp881
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _471->fld[0].rtwint, D.29298
	movl	%eax, %edx	# D.29298, D.29303
	.loc 1 7036 0
	movq	-136(%rbp), %rax	# x, tmp882
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	.loc 1 7034 0
	movzwl	%ax, %eax	# D.29293, D.29303
	subl	%eax, %edx	# D.29303, D.29303
	movl	%edx, %eax	# D.29303, D.29303
	addl	$64, %eax	#, D.29303
	movl	%eax, %ecx	# D.29296, tmp1033
	shrq	%cl, -88(%rbp)	# tmp1033, nonzero
	jmp	.L1170	#
.L1168:
	.loc 1 7040 0
	movq	-136(%rbp), %rax	# x, tmp884
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, tmp886
	movq	%rax, -88(%rbp)	# tmp886, nonzero
	.loc 1 7041 0
	movq	-136(%rbp), %rax	# x, tmp887
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _485->fld[0].rtwint, D.29298
	movl	%eax, %ecx	# D.29296, tmp1034
	shrq	%cl, -88(%rbp)	# tmp1034, nonzero
.L1170:
	.loc 1 7044 0
	movq	-88(%rbp), %rax	# nonzero, tmp888
	notq	%rax	# D.29297
	andq	-152(%rbp), %rax	# mask, D.29297
	testq	%rax, %rax	# D.29297
	je	.L1171	#,
	.loc 1 7045 0
	movq	-152(%rbp), %rax	# mask, tmp889
	movq	%rax, %rdi	# tmp889,
	call	exact_log2_wide	#
	movl	%eax, -116(%rbp)	# tmp890, i
	cmpl	$0, -116(%rbp)	#, i
	js	.L1167	#,
.L1171:
	.loc 1 7048 0
	cmpl	$0, -116(%rbp)	#, i
	jns	.L1172	#,
	.loc 1 7049 0
	movq	-136(%rbp), %rax	# x, tmp891
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _492->fld[0].rtwint, D.29298
	jmp	.L1173	#
.L1172:
	.loc 1 7050 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp892
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %eax	# D.29293, D.29296
	subl	$1, %eax	#, D.29296
	.loc 1 7048 0 discriminator 1
	subl	-116(%rbp), %eax	# i, iftmp.919
.L1173:
	.loc 1 7048 0 is_stmt 0 discriminator 2
	movq	-136(%rbp), %rdx	# x, tmp894
	movq	8(%rdx), %rcx	# x_30(D)->fld[0].rtx, D.29300
	movq	-136(%rbp), %rdx	# x, tmp895
	movzbl	2(%rdx), %edx	# x_30(D)->mode, D.29295
	movzbl	%dl, %edx	# D.29295, D.29301
	.loc 1 7047 0 is_stmt 1 discriminator 2
	movq	-136(%rbp), %rdi	# x, tmp896
	movl	%eax, %r8d	# iftmp.919,
	movl	$90, %esi	#,
	call	simplify_shift_const	#
	movq	%rax, -136(%rbp)	# tmp897, x
	.loc 1 7052 0 discriminator 2
	movq	-136(%rbp), %rax	# x, tmp898
	movzwl	(%rax), %eax	# x_504->code, D.29293
	cmpw	$89, %ax	#, D.29293
	je	.L1167	#,
	.loc 1 7053 0
	movl	-108(%rbp), %edi	# next_select, tmp899
	movq	-160(%rbp), %rcx	# reg, tmp900
	movq	-152(%rbp), %rdx	# mask, tmp901
	movl	-140(%rbp), %esi	# mode, tmp902
	movq	-136(%rbp), %rax	# x, tmp903
	movl	%edi, %r8d	# tmp899,
	movq	%rax, %rdi	# tmp903,
	call	force_to_mode	#
	jmp	.L1102	#
.L1167:
.LBE78:
	.loc 1 7059 0
	cmpq	$1, -152(%rbp)	#, mask
	jne	.L1165	#,
	.loc 1 7060 0
	movq	-136(%rbp), %rax	# x, tmp904
	movq	16(%rax), %rcx	# x_8->fld[1].rtx, D.29300
	movq	-136(%rbp), %rax	# x, tmp905
	movq	8(%rax), %rdx	# x_8->fld[0].rtx, D.29300
	movq	-136(%rbp), %rax	# x, tmp906
	movzbl	2(%rax), %eax	# x_8->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29301
	movl	%eax, %esi	# D.29301,
	movl	$90, %edi	#,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp907, x
.L1165:
	.loc 1 7068 0
	movq	-136(%rbp), %rax	# x, tmp908
	movzwl	(%rax), %eax	# x_9->code, D.29293
	cmpw	$90, %ax	#, D.29293
	je	.L1174	#,
	.loc 1 7068 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp909
	movzwl	(%rax), %eax	# x_9->code, D.29293
	cmpw	$89, %ax	#, D.29293
	jne	.L1175	#,
.L1174:
	.loc 1 7069 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp910
	movq	16(%rax), %rax	# x_9->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _514->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1175	#,
	.loc 1 7070 0
	movq	-136(%rbp), %rax	# x, tmp911
	movq	16(%rax), %rax	# x_9->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _516->fld[0].rtwint, D.29298
	testq	%rax, %rax	# D.29298
	js	.L1175	#,
	.loc 1 7071 0
	movq	-136(%rbp), %rax	# x, tmp912
	movq	16(%rax), %rax	# x_9->fld[1].rtx, D.29300
	movq	8(%rax), %rbx	# _518->fld[0].rtwint, D.29298
	.loc 1 7072 0
	movq	-136(%rbp), %rax	# x, tmp913
	movzbl	2(%rax), %eax	# x_9->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %r12d	# D.29293, D.29296
	movq	-152(%rbp), %rax	# mask, tmp915
	movq	%rax, %rdi	# tmp915,
	call	floor_log2_wide	#
	notl	%eax	# D.29296
	addl	%r12d, %eax	# D.29296, D.29296
	cltq
	.loc 1 7071 0
	cmpq	%rax, %rbx	# D.29298, D.29298
	jg	.L1175	#,
	.loc 1 7073 0
	movq	-136(%rbp), %rax	# x, tmp916
	movq	8(%rax), %rax	# x_9->fld[0].rtx, D.29300
	movzwl	(%rax), %eax	# _528->code, D.29293
	cmpw	$87, %ax	#, D.29293
	jne	.L1175	#,
	.loc 1 7074 0
	movq	-136(%rbp), %rax	# x, tmp917
	movq	8(%rax), %rax	# x_9->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _530->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _531->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1175	#,
	.loc 1 7075 0
	movq	-136(%rbp), %rax	# x, tmp918
	movq	8(%rax), %rax	# x_9->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _533->fld[1].rtx, D.29300
	movq	8(%rax), %rdx	# _534->fld[0].rtwint, D.29298
	movq	-136(%rbp), %rax	# x, tmp919
	movq	16(%rax), %rax	# x_9->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _536->fld[0].rtwint, D.29298
	cmpq	%rax, %rdx	# D.29298, D.29298
	jne	.L1175	#,
	.loc 1 7076 0
	movq	-136(%rbp), %rax	# x, tmp920
	movq	8(%rax), %rax	# x_9->fld[0].rtx, D.29300
	movq	8(%rax), %rax	# _538->fld[0].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp921
	movq	-160(%rbp), %rcx	# reg, tmp922
	movq	-152(%rbp), %rdx	# mask, tmp923
	movl	-140(%rbp), %esi	# mode, tmp924
	movl	%edi, %r8d	# tmp921,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	jmp	.L1102	#
.L1175:
	.loc 1 7079 0
	jmp	.L1138	#
.L1132:
	.loc 1 7087 0
	movq	-136(%rbp), %rax	# x, tmp925
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _541->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1176	#,
	.loc 1 7088 0
	movq	-136(%rbp), %rax	# x, tmp926
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _543->fld[0].rtwint, D.29298
	testq	%rax, %rax	# D.29298
	js	.L1176	#,
	.loc 1 7090 0
	movq	-136(%rbp), %rax	# x, tmp927
	movq	16(%rax), %rbx	# x_30(D)->fld[1].rtx, D.29300
	movq	-152(%rbp), %rax	# mask, mask.920
	movq	%rax, %rsi	# mask.920,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rdx	#, D.29300
	.loc 1 7091 0
	movq	-136(%rbp), %rax	# x, tmp928
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	.loc 1 7090 0
	movzbl	%al, %esi	# D.29295, D.29301
	cmpl	$88, -112(%rbp)	#, code
	jne	.L1177	#,
	.loc 1 7090 0 is_stmt 0 discriminator 1
	movl	$91, %eax	#, iftmp.921
	jmp	.L1178	#
.L1177:
	.loc 1 7090 0 discriminator 2
	movl	$88, %eax	#, iftmp.921
.L1178:
	.loc 1 7090 0 discriminator 3
	movq	%rbx, %rcx	# D.29300,
	movl	%eax, %edi	# iftmp.921,
	call	simplify_binary_operation	#
	movq	%rax, -56(%rbp)	# tmp929, temp
	.loc 1 7093 0 is_stmt 1 discriminator 3
	cmpq	$0, -56(%rbp)	#, temp
	je	.L1176	#,
	.loc 1 7093 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# temp, tmp930
	movzwl	(%rax), %eax	# temp_552->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1176	#,
	.loc 1 7094 0 is_stmt 1
	movq	-56(%rbp), %rax	# temp, tmp931
	movq	8(%rax), %rax	# temp_552->fld[0].rtwint, D.29298
	movq	%rax, %rdx	# D.29298, D.29297
	movq	-136(%rbp), %rax	# x, tmp932
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %esi	# D.29295, D.29301
	movq	-136(%rbp), %rax	# x, tmp933
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp934
	movq	-160(%rbp), %rcx	# reg, tmp935
	movl	%edi, %r8d	# tmp934,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	movq	-136(%rbp), %rdx	# x, tmp936
	addq	$8, %rdx	#, D.29304
	movq	%rax, %rsi	# D.29300,
	movq	%rdx, %rdi	# D.29304,
	call	do_SUBST	#
	.loc 1 7098 0
	jmp	.L1138	#
.L1176:
	jmp	.L1138	#
.L1126:
	.loc 1 7103 0
	cmpq	$1, -152(%rbp)	#, mask
	jne	.L1179	#,
	.loc 1 7104 0
	movq	-136(%rbp), %rax	# x, tmp937
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-144(%rbp), %edi	# just_select, tmp938
	movq	-160(%rbp), %rcx	# reg, tmp939
	movq	-152(%rbp), %rdx	# mask, tmp940
	movl	-140(%rbp), %esi	# mode, tmp941
	movl	%edi, %r8d	# tmp938,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	jmp	.L1102	#
.L1179:
	.loc 1 7109 0
	movq	-96(%rbp), %rax	# fuller_mask, tmp942
	movq	%rax, -152(%rbp)	# tmp942, mask
	.loc 1 7110 0
	jmp	.L1180	#
.L1130:
	.loc 1 7117 0
	movq	-136(%rbp), %rax	# x, tmp943
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movzwl	(%rax), %eax	# _564->code, D.29293
	cmpw	$90, %ax	#, D.29293
	jne	.L1181	#,
	.loc 1 7118 0
	movq	-136(%rbp), %rax	# x, tmp944
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _566->fld[1].rtx, D.29300
	movzwl	(%rax), %eax	# _567->code, D.29293
	cmpw	$54, %ax	#, D.29293
	jne	.L1181	#,
	.loc 1 7119 0
	movq	-136(%rbp), %rax	# x, tmp945
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _569->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _570->fld[0].rtwint, D.29298
	testq	%rax, %rax	# D.29298
	js	.L1181	#,
	.loc 1 7120 0
	movq	-136(%rbp), %rax	# x, tmp946
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _572->fld[1].rtx, D.29300
	movq	8(%rax), %rbx	# _573->fld[0].rtwint, D.29298
	movq	-152(%rbp), %rax	# mask, tmp947
	movq	%rax, %rdi	# tmp947,
	call	floor_log2_wide	#
	cltq
	leaq	(%rbx,%rax), %rdx	#, D.29298
	.loc 1 7121 0
	movq	-136(%rbp), %rax	# x, tmp948
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29296
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29293
	movzwl	%ax, %eax	# D.29293, D.29298
	.loc 1 7120 0
	cmpq	%rax, %rdx	# D.29298, D.29298
	jge	.L1181	#,
	.loc 1 7122 0
	movq	-136(%rbp), %rax	# x, tmp950
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _582->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _583->fld[0].rtwint, D.29298
	cmpq	$63, %rax	#, D.29298
	jg	.L1181	#,
	.loc 1 7124 0
	movq	-136(%rbp), %rax	# x, tmp951
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rax	# _585->fld[1].rtx, D.29300
	movq	8(%rax), %rax	# _586->fld[0].rtwint, D.29298
	movq	-152(%rbp), %rdx	# mask, tmp952
	movl	%eax, %ecx	# D.29296, tmp1036
	salq	%cl, %rdx	# tmp1036, D.29297
	movq	%rdx, %rax	# D.29297, D.29297
	movq	%rax, %rsi	# D.29298,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -56(%rbp)	# tmp953, temp
	.loc 1 7125 0
	movq	-136(%rbp), %rax	# x, tmp954
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	8(%rax), %rdx	# _592->fld[0].rtx, D.29300
	movq	-136(%rbp), %rax	# x, tmp955
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29301
	movq	-56(%rbp), %rcx	# temp, tmp956
	movl	%eax, %esi	# D.29301,
	movl	$85, %edi	#,
	call	gen_binary	#
	movq	%rax, -56(%rbp)	# tmp957, temp
	.loc 1 7126 0
	movq	-136(%rbp), %rax	# x, tmp958
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movq	16(%rax), %rcx	# _597->fld[1].rtx, D.29300
	movq	-136(%rbp), %rax	# x, tmp959
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29301
	movq	-56(%rbp), %rdx	# temp, tmp960
	movl	%eax, %esi	# D.29301,
	movl	$90, %edi	#,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp961, x
	.loc 1 7128 0
	movl	-108(%rbp), %edi	# next_select, tmp962
	movq	-160(%rbp), %rcx	# reg, tmp963
	movq	-152(%rbp), %rdx	# mask, tmp964
	movl	-140(%rbp), %esi	# mode, tmp965
	movq	-136(%rbp), %rax	# x, tmp966
	movl	%edi, %r8d	# tmp962,
	movq	%rax, %rdi	# tmp966,
	call	force_to_mode	#
	jmp	.L1102	#
.L1181:
	.loc 1 7133 0
	movq	-96(%rbp), %rax	# fuller_mask, tmp967
	movq	%rax, -152(%rbp)	# tmp967, mask
.L1180:
	.loc 1 7136 0
	movq	-136(%rbp), %rax	# x, tmp968
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp969
	movq	-160(%rbp), %rcx	# reg, tmp970
	movq	-152(%rbp), %rdx	# mask, tmp971
	movl	-140(%rbp), %esi	# mode, tmp972
	movl	%edi, %r8d	# tmp969,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	movq	%rax, %rdx	#, D.29300
	movl	-120(%rbp), %eax	# op_mode, tmp973
	movq	%rdx, %rsi	# D.29300,
	movl	%eax, %edi	# tmp973,
	call	gen_lowpart_for_combine	#
	movq	%rax, -48(%rbp)	# tmp974, op0
	.loc 1 7139 0
	movq	-136(%rbp), %rax	# x, tmp975
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29299
	cmpl	-120(%rbp), %eax	# op_mode, D.29299
	jne	.L1182	#,
	.loc 1 7139 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp976
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	cmpq	-48(%rbp), %rax	# op0, D.29300
	je	.L1183	#,
.L1182:
	.loc 1 7140 0 is_stmt 1
	movl	-120(%rbp), %ecx	# op_mode, tmp977
	movq	-48(%rbp), %rdx	# op0, tmp978
	movl	-120(%rbp), %esi	# op_mode, tmp979
	movl	-112(%rbp), %eax	# code, tmp980
	movl	%eax, %edi	# tmp980,
	call	simplify_gen_unary	#
	movq	%rax, -136(%rbp)	# tmp981, x
	.loc 1 7141 0
	jmp	.L1138	#
.L1183:
	jmp	.L1138	#
.L1135:
	.loc 1 7147 0
	movq	-152(%rbp), %rax	# mask, tmp982
	andq	$-2, %rax	#, D.29297
	testq	%rax, %rax	# D.29297
	jne	.L1184	#,
	.loc 1 7147 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp983
	movq	16(%rax), %rdx	# x_30(D)->fld[1].rtx, D.29300
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29300
	cmpq	%rax, %rdx	# D.29300, D.29300
	jne	.L1184	#,
	.loc 1 7148 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp984
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-140(%rbp), %edx	# mode, tmp985
	movl	%edx, %esi	# tmp985,
	movq	%rax, %rdi	# D.29300,
	call	nonzero_bits	#
	movq	%rax, %rdi	# D.29297,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29296
	js	.L1184	#,
	.loc 1 7149 0
	movq	-136(%rbp), %rax	# x, tmp986
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-140(%rbp), %edx	# mode, tmp987
	movl	%edx, %esi	# tmp987,
	movq	%rax, %rdi	# D.29300,
	call	nonzero_bits	#
	cmpq	$1, %rax	#, D.29297
	jne	.L1184	#,
	.loc 1 7150 0
	movq	-136(%rbp), %rax	# x, tmp988
	movq	8(%rax), %rax	# x_30(D)->fld[0].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp989
	movq	-160(%rbp), %rcx	# reg, tmp990
	movq	-152(%rbp), %rdx	# mask, tmp991
	movl	-140(%rbp), %esi	# mode, tmp992
	movl	%edi, %r8d	# tmp989,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	jmp	.L1102	#
.L1184:
	.loc 1 7152 0
	jmp	.L1138	#
.L1123:
	.loc 1 7158 0
	movq	-136(%rbp), %rax	# x, tmp993
	movq	16(%rax), %rax	# x_30(D)->fld[1].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp994
	movq	-160(%rbp), %rcx	# reg, tmp995
	movq	-152(%rbp), %rdx	# mask, tmp996
	movl	-140(%rbp), %esi	# mode, tmp997
	movl	%edi, %r8d	# tmp994,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	movq	%rax, %rdx	#, D.29300
	movq	-136(%rbp), %rax	# x, tmp998
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29301
	movq	%rdx, %rsi	# D.29300,
	movl	%eax, %edi	# D.29301,
	call	gen_lowpart_for_combine	#
	movq	-136(%rbp), %rdx	# x, tmp999
	addq	$16, %rdx	#, D.29304
	movq	%rax, %rsi	# D.29300,
	movq	%rdx, %rdi	# D.29304,
	call	do_SUBST	#
	.loc 1 7162 0
	movq	-136(%rbp), %rax	# x, tmp1000
	movq	24(%rax), %rax	# x_30(D)->fld[2].rtx, D.29300
	movl	-108(%rbp), %edi	# next_select, tmp1001
	movq	-160(%rbp), %rcx	# reg, tmp1002
	movq	-152(%rbp), %rdx	# mask, tmp1003
	movl	-140(%rbp), %esi	# mode, tmp1004
	movl	%edi, %r8d	# tmp1001,
	movq	%rax, %rdi	# D.29300,
	call	force_to_mode	#
	movq	%rax, %rdx	#, D.29300
	movq	-136(%rbp), %rax	# x, tmp1005
	movzbl	2(%rax), %eax	# x_30(D)->mode, D.29295
	movzbl	%al, %eax	# D.29295, D.29301
	movq	%rdx, %rsi	# D.29300,
	movl	%eax, %edi	# D.29301,
	call	gen_lowpart_for_combine	#
	movq	-136(%rbp), %rdx	# x, tmp1006
	addq	$24, %rdx	#, D.29304
	movq	%rax, %rsi	# D.29300,
	movq	%rdx, %rdi	# D.29304,
	call	do_SUBST	#
	.loc 1 7166 0
	jmp	.L1138	#
.L1185:
	.loc 1 7169 0
	nop
.L1138:
	.loc 1 7173 0
	movq	-136(%rbp), %rdx	# x, tmp1007
	movl	-140(%rbp), %eax	# mode, tmp1008
	movq	%rdx, %rsi	# tmp1007,
	movl	%eax, %edi	# tmp1008,
	call	gen_lowpart_for_combine	#
.L1102:
	.loc 1 7174 0
	addq	$144, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE28:
	.size	force_to_mode, .-force_to_mode
	.type	if_then_else_cond, @function
if_then_else_cond:
.LFB29:
	.loc 1 7187 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$120, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -104(%rbp)	# x, x
	movq	%rsi, -112(%rbp)	# ptrue, ptrue
	movq	%rdx, -120(%rbp)	# pfalse, pfalse
	.loc 1 7188 0
	movq	-104(%rbp), %rax	# x, tmp232
	movzbl	2(%rax), %eax	# x_6(D)->mode, D.29306
	movzbl	%al, %eax	# D.29306, tmp233
	movl	%eax, -96(%rbp)	# tmp233, mode
	.loc 1 7189 0
	movq	-104(%rbp), %rax	# x, tmp234
	movzwl	(%rax), %eax	# x_6(D)->code, D.29307
	movzwl	%ax, %eax	# D.29307, tmp235
	movl	%eax, -92(%rbp)	# tmp235, code
	.loc 1 7194 0
	cmpl	$102, -92(%rbp)	#, code
	je	.L1187	#,
	.loc 1 7194 0 is_stmt 0 discriminator 1
	cmpl	$103, -92(%rbp)	#, code
	jne	.L1188	#,
.L1187:
	.loc 1 7195 0 is_stmt 1
	movq	-104(%rbp), %rax	# x, tmp236
	movq	16(%rax), %rax	# x_6(D)->fld[1].rtx, D.29308
	movzwl	(%rax), %eax	# _11->code, D.29307
	cmpw	$54, %ax	#, D.29307
	jne	.L1188	#,
	.loc 1 7195 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# x, tmp237
	movq	16(%rax), %rax	# x_6(D)->fld[1].rtx, D.29308
	movq	8(%rax), %rax	# _13->fld[0].rtwint, D.29309
	testq	%rax, %rax	# D.29309
	jne	.L1188	#,
	.loc 1 7197 0 is_stmt 1
	cmpl	$102, -92(%rbp)	#, code
	je	.L1189	#,
	.loc 1 7197 0 is_stmt 0 discriminator 1
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, iftmp.922
	jmp	.L1190	#
.L1189:
	.loc 1 7197 0 discriminator 2
	movq	const_true_rtx(%rip), %rax	# const_true_rtx, iftmp.922
.L1190:
	.loc 1 7197 0 discriminator 3
	movq	-112(%rbp), %rdx	# ptrue, tmp238
	movq	%rax, (%rdx)	# iftmp.922, *ptrue_17(D)
	.loc 1 7198 0 is_stmt 1 discriminator 3
	cmpl	$102, -92(%rbp)	#, code
	jne	.L1191	#,
	.loc 1 7198 0 is_stmt 0 discriminator 1
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, iftmp.923
	jmp	.L1192	#
.L1191:
	.loc 1 7198 0 discriminator 2
	movq	const_true_rtx(%rip), %rax	# const_true_rtx, iftmp.923
.L1192:
	.loc 1 7198 0 discriminator 3
	movq	-120(%rbp), %rdx	# pfalse, tmp239
	movq	%rax, (%rdx)	# iftmp.923, *pfalse_20(D)
	.loc 1 7199 0 is_stmt 1 discriminator 3
	movq	-104(%rbp), %rax	# x, tmp240
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29305
	jmp	.L1224	#
.L1188:
	.loc 1 7204 0
	movl	-92(%rbp), %eax	# code, code.924
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29310
	cmpb	$49, %al	#, D.29310
	jne	.L1194	#,
	.loc 1 7205 0
	movq	-104(%rbp), %rax	# x, tmp242
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	leaq	-72(%rbp), %rdx	#, tmp243
	leaq	-88(%rbp), %rcx	#, tmp244
	movq	%rcx, %rsi	# tmp244,
	movq	%rax, %rdi	# D.29308,
	call	if_then_else_cond	#
	movq	%rax, -56(%rbp)	# tmp245, cond0
	cmpq	$0, -56(%rbp)	#, cond0
	je	.L1194	#,
	.loc 1 7207 0
	movq	-104(%rbp), %rax	# x, tmp246
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	movzbl	2(%rax), %eax	# _26->mode, D.29306
	movzbl	%al, %ecx	# D.29306, D.29311
	movq	-88(%rbp), %rdx	# true0, true0.925
	movl	-96(%rbp), %esi	# mode, tmp247
	movl	-92(%rbp), %eax	# code, tmp248
	movl	%eax, %edi	# tmp248,
	call	simplify_gen_unary	#
	movq	-112(%rbp), %rdx	# ptrue, tmp249
	movq	%rax, (%rdx)	# D.29308, *ptrue_17(D)
	.loc 1 7209 0
	movq	-104(%rbp), %rax	# x, tmp250
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	movzbl	2(%rax), %eax	# _31->mode, D.29306
	.loc 1 7208 0
	movzbl	%al, %ecx	# D.29306, D.29311
	movq	-72(%rbp), %rdx	# false0, false0.926
	movl	-96(%rbp), %esi	# mode, tmp251
	movl	-92(%rbp), %eax	# code, tmp252
	movl	%eax, %edi	# tmp252,
	call	simplify_gen_unary	#
	movq	-120(%rbp), %rdx	# pfalse, tmp253
	movq	%rax, (%rdx)	# D.29308, *pfalse_20(D)
	.loc 1 7210 0
	movq	-56(%rbp), %rax	# cond0, D.29305
	jmp	.L1224	#
.L1194:
	.loc 1 7215 0
	cmpl	$74, -92(%rbp)	#, code
	je	.L1195	#,
	.loc 1 7221 0
	movl	-92(%rbp), %eax	# code, code.927
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29310
	cmpb	$99, %al	#, D.29310
	je	.L1196	#,
	.loc 1 7221 0 is_stmt 0 discriminator 1
	movl	-92(%rbp), %eax	# code, code.928
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29310
	cmpb	$50, %al	#, D.29310
	je	.L1196	#,
	.loc 1 7222 0 is_stmt 1
	movl	-92(%rbp), %eax	# code, code.929
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29310
	cmpb	$60, %al	#, D.29310
	jne	.L1197	#,
.L1196:
	.loc 1 7224 0
	movq	-104(%rbp), %rax	# x, tmp257
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	leaq	-72(%rbp), %rdx	#, tmp258
	leaq	-88(%rbp), %rcx	#, tmp259
	movq	%rcx, %rsi	# tmp259,
	movq	%rax, %rdi	# D.29308,
	call	if_then_else_cond	#
	movq	%rax, -56(%rbp)	# tmp260, cond0
	.loc 1 7225 0
	movq	-104(%rbp), %rax	# x, tmp261
	movq	16(%rax), %rax	# x_6(D)->fld[1].rtx, D.29308
	leaq	-64(%rbp), %rdx	#, tmp262
	leaq	-80(%rbp), %rcx	#, tmp263
	movq	%rcx, %rsi	# tmp263,
	movq	%rax, %rdi	# D.29308,
	call	if_then_else_cond	#
	movq	%rax, -40(%rbp)	# tmp264, cond1
	.loc 1 7227 0
	cmpq	$0, -56(%rbp)	#, cond0
	jne	.L1198	#,
	.loc 1 7227 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, cond1
	je	.L1199	#,
.L1198:
	.loc 1 7228 0 is_stmt 1
	cmpq	$0, -56(%rbp)	#, cond0
	je	.L1200	#,
	.loc 1 7228 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, cond1
	je	.L1200	#,
	movq	-40(%rbp), %rdx	# cond1, tmp265
	movq	-56(%rbp), %rax	# cond0, tmp266
	movq	%rdx, %rsi	# tmp265,
	movq	%rax, %rdi	# tmp266,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29313
	je	.L1199	#,
.L1200:
	.loc 1 7233 0 is_stmt 1
	cmpq	$0, -56(%rbp)	#, cond0
	jne	.L1201	#,
	.loc 1 7234 0
	movq	-88(%rbp), %rax	# true0, true0.930
	movq	%rax, %rdi	# true0.930,
	call	copy_rtx	#
	movq	%rax, -88(%rbp)	# true0.931, true0
	jmp	.L1202	#
.L1201:
	.loc 1 7235 0
	cmpq	$0, -40(%rbp)	#, cond1
	jne	.L1202	#,
	.loc 1 7236 0
	movq	-80(%rbp), %rax	# true1, true1.932
	movq	%rax, %rdi	# true1.932,
	call	copy_rtx	#
	movq	%rax, -80(%rbp)	# true1.933, true1
.L1202:
	.loc 1 7238 0
	movq	-80(%rbp), %rcx	# true1, true1.934
	movq	-88(%rbp), %rdx	# true0, true0.935
	movl	-96(%rbp), %esi	# mode, tmp267
	movl	-92(%rbp), %eax	# code, tmp268
	movl	%eax, %edi	# tmp268,
	call	gen_binary	#
	movq	-112(%rbp), %rdx	# ptrue, tmp269
	movq	%rax, (%rdx)	# D.29308, *ptrue_17(D)
	.loc 1 7239 0
	movq	-64(%rbp), %rcx	# false1, false1.936
	movq	-72(%rbp), %rdx	# false0, false0.937
	movl	-96(%rbp), %esi	# mode, tmp270
	movl	-92(%rbp), %eax	# code, tmp271
	movl	%eax, %edi	# tmp271,
	call	gen_binary	#
	movq	-120(%rbp), %rdx	# pfalse, tmp272
	movq	%rax, (%rdx)	# D.29308, *pfalse_20(D)
	.loc 1 7240 0
	cmpq	$0, -56(%rbp)	#, cond0
	je	.L1203	#,
	.loc 1 7240 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# cond0, iftmp.938
	jmp	.L1204	#
.L1203:
	.loc 1 7240 0 discriminator 2
	movq	-40(%rbp), %rax	# cond1, iftmp.938
.L1204:
	.loc 1 7240 0 discriminator 3
	jmp	.L1224	#
.L1199:
	.loc 1 7247 0 is_stmt 1
	cmpl	$75, -92(%rbp)	#, code
	je	.L1205	#,
	.loc 1 7248 0
	cmpl	$84, -92(%rbp)	#, code
	je	.L1205	#,
	.loc 1 7248 0 is_stmt 0 discriminator 1
	cmpl	$85, -92(%rbp)	#, code
	je	.L1205	#,
	cmpl	$76, -92(%rbp)	#, code
	je	.L1205	#,
	cmpl	$95, -92(%rbp)	#, code
	jne	.L1206	#,
.L1205:
	.loc 1 7250 0 is_stmt 1
	movq	-104(%rbp), %rax	# x, tmp273
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	movzwl	(%rax), %eax	# _128->code, D.29307
	cmpw	$78, %ax	#, D.29307
	jne	.L1206	#,
	.loc 1 7250 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# x, tmp274
	movq	16(%rax), %rax	# x_6(D)->fld[1].rtx, D.29308
	movzwl	(%rax), %eax	# _130->code, D.29307
	cmpw	$78, %ax	#, D.29307
	jne	.L1206	#,
.LBB79:
	.loc 1 7252 0 is_stmt 1
	movq	-104(%rbp), %rax	# x, tmp275
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	movq	16(%rax), %rax	# _132->fld[1].rtx, tmp276
	movq	%rax, -32(%rbp)	# tmp276, op0
	.loc 1 7253 0
	movq	-104(%rbp), %rax	# x, tmp277
	movq	16(%rax), %rax	# x_6(D)->fld[1].rtx, D.29308
	movq	16(%rax), %rax	# _134->fld[1].rtx, tmp278
	movq	%rax, -24(%rbp)	# tmp278, op1
	.loc 1 7255 0
	movq	-104(%rbp), %rax	# x, tmp279
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	movq	8(%rax), %rax	# _136->fld[0].rtx, tmp280
	movq	%rax, -56(%rbp)	# tmp280, cond0
	.loc 1 7256 0
	movq	-104(%rbp), %rax	# x, tmp281
	movq	16(%rax), %rax	# x_6(D)->fld[1].rtx, D.29308
	movq	8(%rax), %rax	# _138->fld[0].rtx, tmp282
	movq	%rax, -40(%rbp)	# tmp282, cond1
	.loc 1 7258 0
	movq	-56(%rbp), %rax	# cond0, tmp283
	movzwl	(%rax), %eax	# cond0_137->code, D.29307
	movzwl	%ax, %eax	# D.29307, D.29313
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29310
	cmpb	$60, %al	#, D.29310
	jne	.L1206	#,
	.loc 1 7259 0
	movq	-40(%rbp), %rax	# cond1, tmp285
	movzwl	(%rax), %eax	# cond1_139->code, D.29307
	movzwl	%ax, %eax	# D.29307, D.29313
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29310
	cmpb	$60, %al	#, D.29310
	jne	.L1206	#,
	.loc 1 7260 0
	movq	-56(%rbp), %rax	# cond0, tmp287
	movzwl	(%rax), %eax	# cond0_137->code, D.29307
	movzwl	%ax, %ebx	# D.29307, D.29312
	movq	-40(%rbp), %rax	# cond1, tmp288
	movq	%rax, %rdi	# tmp288,
	call	combine_reversed_comparison_code	#
	cmpl	%eax, %ebx	# D.29314, D.29312
	jne	.L1207	#,
	.loc 1 7261 0
	movq	-40(%rbp), %rax	# cond1, tmp289
	movq	8(%rax), %rdx	# cond1_139->fld[0].rtx, D.29308
	movq	-56(%rbp), %rax	# cond0, tmp290
	movq	8(%rax), %rax	# cond0_137->fld[0].rtx, D.29308
	movq	%rdx, %rsi	# D.29308,
	movq	%rax, %rdi	# D.29308,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29313
	je	.L1207	#,
	.loc 1 7262 0
	movq	-40(%rbp), %rax	# cond1, tmp291
	movq	16(%rax), %rdx	# cond1_139->fld[1].rtx, D.29308
	movq	-56(%rbp), %rax	# cond0, tmp292
	movq	16(%rax), %rax	# cond0_137->fld[1].rtx, D.29308
	movq	%rdx, %rsi	# D.29308,
	movq	%rax, %rdi	# D.29308,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29313
	jne	.L1208	#,
.L1207:
	.loc 1 7263 0
	movq	-56(%rbp), %rax	# cond0, tmp293
	movzwl	(%rax), %eax	# cond0_137->code, D.29307
	movzwl	%ax, %eax	# D.29307, D.29314
	movl	%eax, %edi	# D.29314,
	call	swap_condition	#
	movl	%eax, %ebx	#, D.29314
	.loc 1 7264 0
	movq	-40(%rbp), %rax	# cond1, tmp294
	movq	%rax, %rdi	# tmp294,
	call	combine_reversed_comparison_code	#
	.loc 1 7263 0
	cmpl	%eax, %ebx	# D.29314, D.29314
	jne	.L1206	#,
	.loc 1 7265 0
	movq	-40(%rbp), %rax	# cond1, tmp295
	movq	16(%rax), %rdx	# cond1_139->fld[1].rtx, D.29308
	movq	-56(%rbp), %rax	# cond0, tmp296
	movq	8(%rax), %rax	# cond0_137->fld[0].rtx, D.29308
	movq	%rdx, %rsi	# D.29308,
	movq	%rax, %rdi	# D.29308,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29313
	je	.L1206	#,
	.loc 1 7266 0
	movq	-40(%rbp), %rax	# cond1, tmp297
	movq	8(%rax), %rdx	# cond1_139->fld[0].rtx, D.29308
	movq	-56(%rbp), %rax	# cond0, tmp298
	movq	16(%rax), %rax	# cond0_137->fld[1].rtx, D.29308
	movq	%rdx, %rsi	# D.29308,
	movq	%rax, %rdi	# D.29308,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29313
	je	.L1206	#,
.L1208:
	.loc 1 7267 0
	movq	-104(%rbp), %rax	# x, tmp299
	movq	%rax, %rdi	# tmp299,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29313
	jne	.L1206	#,
	.loc 1 7269 0
	movq	const_true_rtx(%rip), %rcx	# const_true_rtx, const_true_rtx.939
	movq	-32(%rbp), %rdx	# op0, tmp300
	movl	-96(%rbp), %eax	# mode, tmp301
	movl	%eax, %esi	# tmp301,
	movl	$78, %edi	#,
	call	gen_binary	#
	movq	-112(%rbp), %rdx	# ptrue, tmp302
	movq	%rax, (%rdx)	# D.29308, *ptrue_17(D)
	.loc 1 7270 0
	movq	const_true_rtx(%rip), %rbx	# const_true_rtx, const_true_rtx.940
	cmpl	$76, -92(%rbp)	#, code
	jne	.L1209	#,
	.loc 1 7270 0 is_stmt 0 discriminator 1
	movl	-96(%rbp), %ecx	# mode, tmp303
	movq	-24(%rbp), %rdx	# op1, tmp304
	movl	-96(%rbp), %eax	# mode, tmp305
	movl	%eax, %esi	# tmp305,
	movl	$77, %edi	#,
	call	simplify_gen_unary	#
	jmp	.L1210	#
.L1209:
	.loc 1 7270 0 discriminator 2
	movq	-24(%rbp), %rax	# op1, iftmp.941
.L1210:
	.loc 1 7270 0 discriminator 3
	movl	-96(%rbp), %esi	# mode, tmp306
	movq	%rbx, %rcx	# const_true_rtx.940,
	movq	%rax, %rdx	# iftmp.941,
	movl	$78, %edi	#,
	call	gen_binary	#
	movq	-120(%rbp), %rdx	# pfalse, tmp307
	movq	%rax, (%rdx)	# D.29308, *pfalse_20(D)
	.loc 1 7276 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# cond0, D.29305
	jmp	.L1224	#
.L1206:
.LBE79:
	.loc 1 7282 0
	cmpl	$78, -92(%rbp)	#, code
	je	.L1211	#,
	.loc 1 7283 0
	cmpl	$83, -92(%rbp)	#, code
	je	.L1211	#,
	.loc 1 7283 0 is_stmt 0 discriminator 1
	cmpl	$94, -92(%rbp)	#, code
	jne	.L1212	#,
.L1211:
	.loc 1 7284 0 is_stmt 1
	movq	-104(%rbp), %rax	# x, tmp308
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	movzwl	(%rax), %eax	# _173->code, D.29307
	cmpw	$78, %ax	#, D.29307
	jne	.L1212	#,
	.loc 1 7284 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# x, tmp309
	movq	16(%rax), %rax	# x_6(D)->fld[1].rtx, D.29308
	movzwl	(%rax), %eax	# _175->code, D.29307
	cmpw	$78, %ax	#, D.29307
	jne	.L1212	#,
	.loc 1 7286 0 is_stmt 1
	movq	-104(%rbp), %rax	# x, tmp310
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	movq	8(%rax), %rax	# _177->fld[0].rtx, tmp311
	movq	%rax, -56(%rbp)	# tmp311, cond0
	.loc 1 7287 0
	movq	-104(%rbp), %rax	# x, tmp312
	movq	16(%rax), %rax	# x_6(D)->fld[1].rtx, D.29308
	movq	8(%rax), %rax	# _179->fld[0].rtx, tmp313
	movq	%rax, -40(%rbp)	# tmp313, cond1
	.loc 1 7289 0
	movq	-56(%rbp), %rax	# cond0, tmp314
	movzwl	(%rax), %eax	# cond0_178->code, D.29307
	movzwl	%ax, %eax	# D.29307, D.29313
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29310
	cmpb	$60, %al	#, D.29310
	jne	.L1212	#,
	.loc 1 7290 0
	movq	-40(%rbp), %rax	# cond1, tmp316
	movzwl	(%rax), %eax	# cond1_180->code, D.29307
	movzwl	%ax, %eax	# D.29307, D.29313
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29310
	cmpb	$60, %al	#, D.29310
	jne	.L1212	#,
	.loc 1 7291 0
	movq	-56(%rbp), %rax	# cond0, tmp318
	movzwl	(%rax), %eax	# cond0_178->code, D.29307
	movzwl	%ax, %ebx	# D.29307, D.29312
	movq	-40(%rbp), %rax	# cond1, tmp319
	movq	%rax, %rdi	# tmp319,
	call	combine_reversed_comparison_code	#
	cmpl	%eax, %ebx	# D.29314, D.29312
	jne	.L1213	#,
	.loc 1 7292 0
	movq	-40(%rbp), %rax	# cond1, tmp320
	movq	8(%rax), %rdx	# cond1_180->fld[0].rtx, D.29308
	movq	-56(%rbp), %rax	# cond0, tmp321
	movq	8(%rax), %rax	# cond0_178->fld[0].rtx, D.29308
	movq	%rdx, %rsi	# D.29308,
	movq	%rax, %rdi	# D.29308,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29313
	je	.L1213	#,
	.loc 1 7293 0
	movq	-40(%rbp), %rax	# cond1, tmp322
	movq	16(%rax), %rdx	# cond1_180->fld[1].rtx, D.29308
	movq	-56(%rbp), %rax	# cond0, tmp323
	movq	16(%rax), %rax	# cond0_178->fld[1].rtx, D.29308
	movq	%rdx, %rsi	# D.29308,
	movq	%rax, %rdi	# D.29308,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29313
	jne	.L1214	#,
.L1213:
	.loc 1 7294 0
	movq	-56(%rbp), %rax	# cond0, tmp324
	movzwl	(%rax), %eax	# cond0_178->code, D.29307
	movzwl	%ax, %eax	# D.29307, D.29314
	movl	%eax, %edi	# D.29314,
	call	swap_condition	#
	movl	%eax, %ebx	#, D.29314
	.loc 1 7295 0
	movq	-40(%rbp), %rax	# cond1, tmp325
	movq	%rax, %rdi	# tmp325,
	call	combine_reversed_comparison_code	#
	.loc 1 7294 0
	cmpl	%eax, %ebx	# D.29314, D.29314
	jne	.L1212	#,
	.loc 1 7296 0
	movq	-40(%rbp), %rax	# cond1, tmp326
	movq	16(%rax), %rdx	# cond1_180->fld[1].rtx, D.29308
	movq	-56(%rbp), %rax	# cond0, tmp327
	movq	8(%rax), %rax	# cond0_178->fld[0].rtx, D.29308
	movq	%rdx, %rsi	# D.29308,
	movq	%rax, %rdi	# D.29308,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29313
	je	.L1212	#,
	.loc 1 7297 0
	movq	-40(%rbp), %rax	# cond1, tmp328
	movq	8(%rax), %rdx	# cond1_180->fld[0].rtx, D.29308
	movq	-56(%rbp), %rax	# cond0, tmp329
	movq	16(%rax), %rax	# cond0_178->fld[1].rtx, D.29308
	movq	%rdx, %rsi	# D.29308,
	movq	%rax, %rdi	# D.29308,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29313
	je	.L1212	#,
.L1214:
	.loc 1 7298 0
	movq	-104(%rbp), %rax	# x, tmp330
	movq	%rax, %rdi	# tmp330,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29313
	jne	.L1212	#,
	.loc 1 7300 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29308
	movq	-120(%rbp), %rax	# pfalse, tmp331
	movq	%rdx, (%rax)	# D.29308, *pfalse_20(D)
	movq	-120(%rbp), %rax	# pfalse, tmp332
	movq	(%rax), %rdx	# *pfalse_20(D), D.29308
	movq	-112(%rbp), %rax	# ptrue, tmp333
	movq	%rdx, (%rax)	# D.29308, *ptrue_17(D)
	.loc 1 7301 0
	movq	-56(%rbp), %rax	# cond0, D.29305
	jmp	.L1224	#
.L1212:
	.loc 1 7282 0
	jmp	.L1195	#
.L1197:
	.loc 1 7306 0
	cmpl	$72, -92(%rbp)	#, code
	jne	.L1215	#,
	.loc 1 7310 0
	movq	-104(%rbp), %rax	# x, tmp334
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, tmp335
	movq	%rax, -56(%rbp)	# tmp335, cond0
	.loc 1 7311 0
	movq	-104(%rbp), %rax	# x, tmp336
	movq	16(%rax), %rdx	# x_6(D)->fld[1].rtx, D.29308
	movq	-112(%rbp), %rax	# ptrue, tmp337
	movq	%rdx, (%rax)	# D.29308, *ptrue_17(D)
	movq	-104(%rbp), %rax	# x, tmp338
	movq	24(%rax), %rdx	# x_6(D)->fld[2].rtx, D.29308
	movq	-120(%rbp), %rax	# pfalse, tmp339
	movq	%rdx, (%rax)	# D.29308, *pfalse_20(D)
	.loc 1 7312 0
	movq	-56(%rbp), %rax	# cond0, tmp340
	movzwl	(%rax), %eax	# cond0_43->code, D.29307
	cmpw	$102, %ax	#, D.29307
	jne	.L1216	#,
	.loc 1 7312 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# cond0, tmp341
	movq	16(%rax), %rdx	# cond0_43->fld[1].rtx, D.29308
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29308
	cmpq	%rax, %rdx	# D.29308, D.29308
	jne	.L1216	#,
	.loc 1 7313 0 is_stmt 1
	movq	-56(%rbp), %rax	# cond0, tmp342
	movq	8(%rax), %rax	# cond0_43->fld[0].rtx, D.29305
	jmp	.L1224	#
.L1216:
	.loc 1 7314 0
	movq	-56(%rbp), %rax	# cond0, tmp343
	movzwl	(%rax), %eax	# cond0_43->code, D.29307
	cmpw	$103, %ax	#, D.29307
	jne	.L1217	#,
	.loc 1 7314 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# cond0, tmp344
	movq	16(%rax), %rdx	# cond0_43->fld[1].rtx, D.29308
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29308
	cmpq	%rax, %rdx	# D.29308, D.29308
	jne	.L1217	#,
	.loc 1 7316 0 is_stmt 1
	movq	-104(%rbp), %rax	# x, tmp345
	movq	24(%rax), %rdx	# x_6(D)->fld[2].rtx, D.29308
	movq	-112(%rbp), %rax	# ptrue, tmp346
	movq	%rdx, (%rax)	# D.29308, *ptrue_17(D)
	movq	-104(%rbp), %rax	# x, tmp347
	movq	16(%rax), %rdx	# x_6(D)->fld[1].rtx, D.29308
	movq	-120(%rbp), %rax	# pfalse, tmp348
	movq	%rdx, (%rax)	# D.29308, *pfalse_20(D)
	.loc 1 7317 0
	movq	-56(%rbp), %rax	# cond0, tmp349
	movq	8(%rax), %rax	# cond0_43->fld[0].rtx, D.29305
	jmp	.L1224	#
.L1217:
	.loc 1 7320 0
	movq	-56(%rbp), %rax	# cond0, D.29305
	jmp	.L1224	#
.L1215:
	.loc 1 7325 0
	cmpl	$63, -92(%rbp)	#, code
	jne	.L1218	#,
	.loc 1 7326 0
	movq	-104(%rbp), %rax	# x, tmp350
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	leaq	-72(%rbp), %rdx	#, tmp351
	leaq	-88(%rbp), %rcx	#, tmp352
	movq	%rcx, %rsi	# tmp352,
	movq	%rax, %rdi	# D.29308,
	call	if_then_else_cond	#
	movq	%rax, -56(%rbp)	# tmp353, cond0
	cmpq	$0, -56(%rbp)	#, cond0
	je	.L1218	#,
	.loc 1 7329 0
	movq	-104(%rbp), %rax	# x, tmp354
	movl	16(%rax), %ecx	# x_6(D)->fld[1].rtuint, D.29312
	.loc 1 7330 0
	movq	-104(%rbp), %rax	# x, tmp355
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	movzbl	2(%rax), %eax	# _60->mode, D.29306
	.loc 1 7329 0
	movzbl	%al, %edx	# D.29306, D.29311
	movq	-88(%rbp), %rsi	# true0, true0.942
	movl	-96(%rbp), %eax	# mode, tmp356
	movl	%eax, %edi	# tmp356,
	call	simplify_gen_subreg	#
	movq	-112(%rbp), %rdx	# ptrue, tmp357
	movq	%rax, (%rdx)	# D.29308, *ptrue_17(D)
	.loc 1 7331 0
	movq	-104(%rbp), %rax	# x, tmp358
	movl	16(%rax), %ecx	# x_6(D)->fld[1].rtuint, D.29312
	.loc 1 7332 0
	movq	-104(%rbp), %rax	# x, tmp359
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, D.29308
	movzbl	2(%rax), %eax	# _66->mode, D.29306
	.loc 1 7331 0
	movzbl	%al, %edx	# D.29306, D.29311
	movq	-72(%rbp), %rsi	# false0, false0.943
	movl	-96(%rbp), %eax	# mode, tmp360
	movl	%eax, %edi	# tmp360,
	call	simplify_gen_subreg	#
	movq	-120(%rbp), %rdx	# pfalse, tmp361
	movq	%rax, (%rdx)	# D.29308, *pfalse_20(D)
	.loc 1 7334 0
	movq	-56(%rbp), %rax	# cond0, D.29305
	jmp	.L1224	#
.L1218:
	.loc 1 7339 0
	movq	-104(%rbp), %rax	# x, tmp362
	movzwl	(%rax), %eax	# x_6(D)->code, D.29307
	cmpw	$67, %ax	#, D.29307
	je	.L1195	#,
	.loc 1 7339 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# x, tmp363
	movzwl	(%rax), %eax	# x_6(D)->code, D.29307
	cmpw	$68, %ax	#, D.29307
	je	.L1195	#,
	movq	-104(%rbp), %rax	# x, tmp364
	movzwl	(%rax), %eax	# x_6(D)->code, D.29307
	cmpw	$54, %ax	#, D.29307
	je	.L1195	#,
	movq	-104(%rbp), %rax	# x, tmp365
	movzwl	(%rax), %eax	# x_6(D)->code, D.29307
	cmpw	$55, %ax	#, D.29307
	je	.L1195	#,
	movq	-104(%rbp), %rax	# x, tmp366
	movzwl	(%rax), %eax	# x_6(D)->code, D.29307
	cmpw	$58, %ax	#, D.29307
	je	.L1195	#,
	movq	-104(%rbp), %rax	# x, tmp367
	movzwl	(%rax), %eax	# x_6(D)->code, D.29307
	cmpw	$134, %ax	#, D.29307
	je	.L1195	#,
	movq	-104(%rbp), %rax	# x, tmp368
	movzwl	(%rax), %eax	# x_6(D)->code, D.29307
	cmpw	$56, %ax	#, D.29307
	je	.L1195	#,
	movq	-104(%rbp), %rax	# x, tmp369
	movzwl	(%rax), %eax	# x_6(D)->code, D.29307
	cmpw	$140, %ax	#, D.29307
	je	.L1195	#,
	.loc 1 7340 0 is_stmt 1
	movq	-104(%rbp), %rax	# x, tmp370
	movq	%rax, %rdi	# tmp370,
	call	get_last_value	#
	movq	%rax, -56(%rbp)	# tmp371, cond0
	cmpq	$0, -56(%rbp)	#, cond0
	je	.L1219	#,
	.loc 1 7340 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# cond0, tmp372
	movzwl	(%rax), %eax	# cond0_80->code, D.29307
	cmpw	$67, %ax	#, D.29307
	je	.L1220	#,
	movq	-56(%rbp), %rax	# cond0, tmp373
	movzwl	(%rax), %eax	# cond0_80->code, D.29307
	cmpw	$68, %ax	#, D.29307
	je	.L1220	#,
	movq	-56(%rbp), %rax	# cond0, tmp374
	movzwl	(%rax), %eax	# cond0_80->code, D.29307
	cmpw	$54, %ax	#, D.29307
	je	.L1220	#,
	movq	-56(%rbp), %rax	# cond0, tmp375
	movzwl	(%rax), %eax	# cond0_80->code, D.29307
	cmpw	$55, %ax	#, D.29307
	je	.L1220	#,
	movq	-56(%rbp), %rax	# cond0, tmp376
	movzwl	(%rax), %eax	# cond0_80->code, D.29307
	cmpw	$58, %ax	#, D.29307
	je	.L1220	#,
	movq	-56(%rbp), %rax	# cond0, tmp377
	movzwl	(%rax), %eax	# cond0_80->code, D.29307
	cmpw	$134, %ax	#, D.29307
	je	.L1220	#,
	movq	-56(%rbp), %rax	# cond0, tmp378
	movzwl	(%rax), %eax	# cond0_80->code, D.29307
	cmpw	$56, %ax	#, D.29307
	je	.L1220	#,
	movq	-56(%rbp), %rax	# cond0, tmp379
	movzwl	(%rax), %eax	# cond0_80->code, D.29307
	cmpw	$140, %ax	#, D.29307
	jne	.L1219	#,
.L1220:
	.loc 1 7339 0 is_stmt 1
	jmp	.L1195	#
.L1219:
	.loc 1 7345 0
	cmpl	$1, -96(%rbp)	#, mode
	jne	.L1221	#,
	.loc 1 7347 0
	movl	$1, %esi	#,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	-112(%rbp), %rdx	# ptrue, tmp380
	movq	%rax, (%rdx)	# D.29308, *ptrue_17(D)
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29308
	movq	-120(%rbp), %rax	# pfalse, tmp381
	movq	%rdx, (%rax)	# D.29308, *pfalse_20(D)
	.loc 1 7348 0
	movq	-104(%rbp), %rax	# x, D.29305
	jmp	.L1224	#
.L1221:
	.loc 1 7353 0
	movq	const_int_rtx+504(%rip), %rax	# const_int_rtx, D.29308
	cmpq	-104(%rbp), %rax	# x, D.29308
	je	.L1222	#,
	.loc 1 7353 0 is_stmt 0 discriminator 1
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29308
	cmpq	-104(%rbp), %rax	# x, D.29308
	je	.L1222	#,
	.loc 1 7354 0 is_stmt 1
	cmpl	$0, -96(%rbp)	#, mode
	je	.L1223	#,
	.loc 1 7355 0
	movl	-96(%rbp), %edx	# mode, tmp382
	movq	-104(%rbp), %rax	# x, tmp383
	movl	%edx, %esi	# tmp382,
	movq	%rax, %rdi	# tmp383,
	call	num_sign_bit_copies	#
	movl	-96(%rbp), %edx	# mode, mode.944
	movslq	%edx, %rdx	# mode.944, tmp384
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29307
	movzwl	%dx, %edx	# D.29307, D.29312
	cmpl	%edx, %eax	# D.29312, D.29312
	jne	.L1223	#,
.L1222:
	.loc 1 7357 0
	movq	const_int_rtx+504(%rip), %rdx	# const_int_rtx, D.29308
	movq	-112(%rbp), %rax	# ptrue, tmp385
	movq	%rdx, (%rax)	# D.29308, *ptrue_17(D)
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29308
	movq	-120(%rbp), %rax	# pfalse, tmp386
	movq	%rdx, (%rax)	# D.29308, *pfalse_20(D)
	.loc 1 7358 0
	movq	-104(%rbp), %rax	# x, D.29305
	jmp	.L1224	#
.L1223:
	.loc 1 7362 0
	cmpl	$0, -96(%rbp)	#, mode
	je	.L1195	#,
	.loc 1 7363 0
	movl	-96(%rbp), %eax	# mode, mode.945
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29307
	cmpw	$64, %ax	#, D.29307
	ja	.L1195	#,
	.loc 1 7364 0
	movl	-96(%rbp), %edx	# mode, tmp388
	movq	-104(%rbp), %rax	# x, tmp389
	movl	%edx, %esi	# tmp388,
	movq	%rax, %rdi	# tmp389,
	call	nonzero_bits	#
	movq	%rax, -48(%rbp)	# tmp390, nz
	movq	-48(%rbp), %rax	# nz, tmp391
	movq	%rax, %rdi	# tmp391,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29313
	js	.L1195	#,
	.loc 1 7366 0
	movq	-48(%rbp), %rax	# nz, nz.946
	movl	-96(%rbp), %edx	# mode, tmp392
	movl	%edx, %esi	# tmp392,
	movq	%rax, %rdi	# nz.946,
	call	trunc_int_for_mode	#
	movq	%rax, %rsi	# D.29309,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	-112(%rbp), %rdx	# ptrue, tmp393
	movq	%rax, (%rdx)	# D.29308, *ptrue_17(D)
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29308
	movq	-120(%rbp), %rax	# pfalse, tmp394
	movq	%rdx, (%rax)	# D.29308, *pfalse_20(D)
	.loc 1 7367 0
	movq	-104(%rbp), %rax	# x, D.29305
	jmp	.L1224	#
.L1195:
	.loc 1 7371 0
	movq	-120(%rbp), %rax	# pfalse, tmp395
	movq	-104(%rbp), %rdx	# x, tmp396
	movq	%rdx, (%rax)	# tmp396, *pfalse_20(D)
	movq	-120(%rbp), %rax	# pfalse, tmp397
	movq	(%rax), %rdx	# *pfalse_20(D), D.29308
	movq	-112(%rbp), %rax	# ptrue, tmp398
	movq	%rdx, (%rax)	# D.29308, *ptrue_17(D)
	.loc 1 7372 0
	movl	$0, %eax	#, D.29305
.L1224:
	.loc 1 7373 0
	addq	$120, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE29:
	.size	if_then_else_cond, .-if_then_else_cond
	.type	known_cond, @function
known_cond:
.LFB30:
	.loc 1 7388 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$112, %rsp	#,
	movq	%rdi, -88(%rbp)	# x, x
	movl	%esi, -92(%rbp)	# cond, cond
	movq	%rdx, -104(%rbp)	# reg, reg
	movq	%rcx, -112(%rbp)	# val, val
	.loc 1 7389 0
	movq	-88(%rbp), %rax	# x, tmp147
	movzwl	(%rax), %eax	# x_17(D)->code, D.29316
	movzwl	%ax, %eax	# D.29316, tmp148
	movl	%eax, -64(%rbp)	# tmp148, code
	.loc 1 7394 0
	movq	-88(%rbp), %rax	# x, tmp149
	movq	%rax, %rdi	# tmp149,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29317
	je	.L1226	#,
	.loc 1 7395 0
	movq	-88(%rbp), %rax	# x, D.29315
	jmp	.L1227	#
.L1226:
	.loc 1 7399 0
	cmpl	$103, -92(%rbp)	#, cond
	jne	.L1228	#,
	.loc 1 7400 0
	movq	-104(%rbp), %rdx	# reg, tmp150
	movq	-88(%rbp), %rax	# x, tmp151
	movq	%rdx, %rsi	# tmp150,
	movq	%rax, %rdi	# tmp151,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29317
	je	.L1228	#,
	.loc 1 7401 0
	movq	-88(%rbp), %rax	# x, tmp152
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29318
	movzbl	%al, %eax	# D.29318, D.29317
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29319
	cmpl	$2, %eax	#, D.29319
	je	.L1228	#,
	.loc 1 7401 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# x, tmp154
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29318
	movzbl	%al, %eax	# D.29318, D.29317
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29319
	cmpl	$6, %eax	#, D.29319
	je	.L1228	#,
	movq	-88(%rbp), %rax	# x, tmp156
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29318
	movzbl	%al, %eax	# D.29318, D.29317
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29319
	cmpl	$8, %eax	#, D.29319
	je	.L1228	#,
	.loc 1 7402 0 is_stmt 1
	movq	-112(%rbp), %rax	# val, tmp158
	movzbl	2(%rax), %eax	# val_34(D)->mode, D.29318
	movzbl	%al, %eax	# D.29318, D.29317
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29319
	cmpl	$2, %eax	#, D.29319
	je	.L1228	#,
	.loc 1 7402 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# val, tmp160
	movzbl	2(%rax), %eax	# val_34(D)->mode, D.29318
	movzbl	%al, %eax	# D.29318, D.29317
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29319
	cmpl	$6, %eax	#, D.29319
	je	.L1228	#,
	movq	-112(%rbp), %rax	# val, tmp162
	movzbl	2(%rax), %eax	# val_34(D)->mode, D.29318
	movzbl	%al, %eax	# D.29318, D.29317
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29319
	cmpl	$8, %eax	#, D.29319
	je	.L1228	#,
	.loc 1 7403 0 is_stmt 1
	movq	-112(%rbp), %rax	# val, D.29315
	jmp	.L1227	#
.L1228:
	.loc 1 7405 0
	cmpl	$114, -92(%rbp)	#, cond
	jne	.L1229	#,
	.loc 1 7405 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rdx	# reg, tmp164
	movq	-88(%rbp), %rax	# x, tmp165
	movq	%rdx, %rsi	# tmp164,
	movq	%rax, %rdi	# tmp165,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29317
	je	.L1229	#,
	.loc 1 7406 0 is_stmt 1
	movq	-112(%rbp), %rax	# val, D.29315
	jmp	.L1227	#
.L1229:
	.loc 1 7411 0
	cmpl	$129, -64(%rbp)	#, code
	jne	.L1230	#,
	.loc 1 7411 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# x, tmp166
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	movq	-104(%rbp), %rdx	# reg, tmp167
	movq	%rdx, %rsi	# tmp167,
	movq	%rax, %rdi	# D.29320,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29317
	je	.L1230	#,
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29320
	cmpq	-112(%rbp), %rax	# val, D.29320
	jne	.L1230	#,
	.loc 1 7412 0 is_stmt 1
	movl	-92(%rbp), %eax	# cond, cond
	cmpl	$103, %eax	#, cond
	jb	.L1275	#,
	cmpl	$105, %eax	#, cond
	jbe	.L1232	#,
	cmpl	$107, %eax	#, cond
	ja	.L1275	#,
	jmp	.L1274	#
.L1232:
	.loc 1 7415 0
	movq	-88(%rbp), %rax	# x, tmp169
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29315
	jmp	.L1227	#
.L1274:
	.loc 1 7419 0
	movq	-88(%rbp), %rax	# x, tmp170
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	movzbl	2(%rax), %eax	# _51->mode, D.29318
	.loc 1 7417 0
	movzbl	%al, %ecx	# D.29318, D.29321
	movq	-88(%rbp), %rax	# x, tmp171
	movq	8(%rax), %rdx	# x_17(D)->fld[0].rtx, D.29320
	movq	-88(%rbp), %rax	# x, tmp172
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	movzbl	2(%rax), %eax	# _55->mode, D.29318
	movzbl	%al, %eax	# D.29318, D.29321
	movl	%eax, %esi	# D.29321,
	movl	$77, %edi	#,
	call	simplify_gen_unary	#
	jmp	.L1227	#
.L1275:
	.loc 1 7421 0
	nop
	.loc 1 7427 0
	jmp	.L1234	#
.L1230:
	movl	-64(%rbp), %eax	# code, code.947
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29322
	cmpb	$60, %al	#, D.29322
	je	.L1235	#,
	.loc 1 7427 0 is_stmt 0 discriminator 1
	movl	-64(%rbp), %eax	# code, code.948
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29322
	cmpb	$99, %al	#, D.29322
	jne	.L1236	#,
.L1235:
	.loc 1 7429 0 is_stmt 1
	movq	-88(%rbp), %rax	# x, tmp175
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	movq	-112(%rbp), %rdx	# val, tmp176
	movq	%rdx, %rsi	# tmp176,
	movq	%rax, %rdi	# D.29320,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29317
	je	.L1237	#,
	.loc 1 7430 0
	movl	-92(%rbp), %eax	# cond, tmp177
	movl	%eax, %edi	# tmp177,
	call	swap_condition	#
	movl	%eax, -92(%rbp)	# tmp178, cond
	movq	-112(%rbp), %rax	# val, tmp179
	movq	%rax, -16(%rbp)	# tmp179, temp
	movq	-104(%rbp), %rax	# reg, tmp180
	movq	%rax, -112(%rbp)	# tmp180, val
	movq	-16(%rbp), %rax	# temp, tmp181
	movq	%rax, -104(%rbp)	# tmp181, reg
.L1237:
	.loc 1 7432 0
	movq	-88(%rbp), %rax	# x, tmp182
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	movq	-104(%rbp), %rdx	# reg, tmp183
	movq	%rdx, %rsi	# tmp183,
	movq	%rax, %rdi	# D.29320,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29317
	je	.L1238	#,
	.loc 1 7432 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# x, tmp184
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29320
	movq	-112(%rbp), %rdx	# val, tmp185
	movq	%rdx, %rsi	# tmp185,
	movq	%rax, %rdi	# D.29320,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29317
	je	.L1238	#,
	.loc 1 7434 0 is_stmt 1
	movl	-64(%rbp), %eax	# code, code.949
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29322
	cmpb	$60, %al	#, D.29322
	jne	.L1239	#,
	.loc 1 7436 0
	movl	-64(%rbp), %edx	# code, tmp187
	movl	-92(%rbp), %eax	# cond, tmp188
	movl	%edx, %esi	# tmp187,
	movl	%eax, %edi	# tmp188,
	call	comparison_dominates_p	#
	testl	%eax, %eax	# D.29317
	je	.L1240	#,
	.loc 1 7437 0
	movq	const_true_rtx(%rip), %rax	# const_true_rtx, D.29315
	jmp	.L1227	#
.L1240:
	.loc 1 7439 0
	movq	-88(%rbp), %rax	# x, tmp189
	movq	%rax, %rdi	# tmp189,
	call	combine_reversed_comparison_code	#
	movl	%eax, -64(%rbp)	# tmp190, code
	.loc 1 7440 0
	cmpl	$0, -64(%rbp)	#, code
	je	.L1241	#,
	.loc 1 7441 0
	movl	-64(%rbp), %edx	# code, tmp191
	movl	-92(%rbp), %eax	# cond, tmp192
	movl	%edx, %esi	# tmp191,
	movl	%eax, %edi	# tmp192,
	call	comparison_dominates_p	#
	testl	%eax, %eax	# D.29317
	je	.L1241	#,
	.loc 1 7442 0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29315
	jmp	.L1227	#
.L1241:
	.loc 1 7444 0
	movq	-88(%rbp), %rax	# x, D.29315
	jmp	.L1227	#
.L1239:
	.loc 1 7446 0
	cmpl	$93, -64(%rbp)	#, code
	je	.L1242	#,
	.loc 1 7446 0 is_stmt 0 discriminator 1
	cmpl	$92, -64(%rbp)	#, code
	je	.L1242	#,
	.loc 1 7447 0 is_stmt 1
	cmpl	$94, -64(%rbp)	#, code
	je	.L1242	#,
	.loc 1 7447 0 is_stmt 0 discriminator 1
	cmpl	$95, -64(%rbp)	#, code
	jne	.L1238	#,
.L1242:
.LBB80:
	.loc 1 7449 0 is_stmt 1
	cmpl	$94, -64(%rbp)	#, code
	je	.L1243	#,
	.loc 1 7449 0 is_stmt 0 discriminator 2
	cmpl	$95, -64(%rbp)	#, code
	jne	.L1244	#,
.L1243:
	.loc 1 7449 0 discriminator 1
	movl	$1, %eax	#, iftmp.950
	jmp	.L1245	#
.L1244:
	.loc 1 7449 0 discriminator 3
	movl	$0, %eax	#, iftmp.950
.L1245:
	.loc 1 7449 0 discriminator 4
	movl	%eax, -52(%rbp)	# iftmp.950, unsignedp
	.loc 1 7455 0 is_stmt 1 discriminator 4
	cmpl	$93, -64(%rbp)	#, code
	je	.L1246	#,
	.loc 1 7455 0 is_stmt 0 discriminator 1
	cmpl	$95, -64(%rbp)	#, code
	jne	.L1247	#,
.L1246:
	.loc 1 7456 0 is_stmt 1
	cmpl	$103, -92(%rbp)	#, cond
	je	.L1247	#,
	.loc 1 7456 0 is_stmt 0 discriminator 1
	cmpl	$102, -92(%rbp)	#, cond
	je	.L1247	#,
	.loc 1 7457 0 is_stmt 1
	movl	-92(%rbp), %eax	# cond, tmp193
	movl	%eax, %edi	# tmp193,
	call	reverse_condition	#
	movl	%eax, -92(%rbp)	# tmp194, cond
.L1247:
	.loc 1 7459 0
	movl	-92(%rbp), %eax	# cond, tmp196
	subl	$104, %eax	#, tmp195
	cmpl	$7, %eax	#, tmp195
	ja	.L1276	#,
	movl	%eax, %eax	# tmp195, tmp197
	movq	.L1250(,%rax,8), %rax	#, tmp198
	jmp	*%rax	# tmp198
	.section	.rodata
	.align 8
	.align 4
.L1250:
	.quad	.L1249
	.quad	.L1249
	.quad	.L1251
	.quad	.L1251
	.quad	.L1252
	.quad	.L1252
	.quad	.L1253
	.quad	.L1253
	.text
.L1249:
	.loc 1 7462 0
	cmpl	$0, -52(%rbp)	#, unsignedp
	jne	.L1254	#,
	.loc 1 7462 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# x, tmp199
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, iftmp.951
	jmp	.L1255	#
.L1254:
	.loc 1 7462 0 discriminator 2
	movq	-88(%rbp), %rax	# x, iftmp.951
.L1255:
	.loc 1 7462 0 discriminator 3
	jmp	.L1227	#
.L1251:
	.loc 1 7464 0 is_stmt 1
	cmpl	$0, -52(%rbp)	#, unsignedp
	jne	.L1256	#,
	.loc 1 7464 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# x, tmp200
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, iftmp.952
	jmp	.L1257	#
.L1256:
	.loc 1 7464 0 discriminator 2
	movq	-88(%rbp), %rax	# x, iftmp.952
.L1257:
	.loc 1 7464 0 discriminator 3
	jmp	.L1227	#
.L1252:
	.loc 1 7466 0 is_stmt 1
	cmpl	$0, -52(%rbp)	#, unsignedp
	je	.L1258	#,
	.loc 1 7466 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# x, tmp201
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, iftmp.953
	jmp	.L1259	#
.L1258:
	.loc 1 7466 0 discriminator 2
	movq	-88(%rbp), %rax	# x, iftmp.953
.L1259:
	.loc 1 7466 0 discriminator 3
	jmp	.L1227	#
.L1253:
	.loc 1 7468 0 is_stmt 1
	cmpl	$0, -52(%rbp)	#, unsignedp
	je	.L1260	#,
	.loc 1 7468 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# x, tmp202
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, iftmp.954
	jmp	.L1261	#
.L1260:
	.loc 1 7468 0 discriminator 2
	movq	-88(%rbp), %rax	# x, iftmp.954
.L1261:
	.loc 1 7468 0 discriminator 3
	jmp	.L1227	#
.L1276:
	.loc 1 7470 0 is_stmt 1
	nop
.L1238:
.LBE80:
	.loc 1 7432 0 discriminator 2
	jmp	.L1234	#
.L1236:
	.loc 1 7475 0
	cmpl	$63, -64(%rbp)	#, code
	jne	.L1262	#,
.LBB81:
	.loc 1 7477 0
	movq	-88(%rbp), %rax	# x, tmp203
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	movzbl	2(%rax), %eax	# _63->mode, D.29318
	movzbl	%al, %eax	# D.29318, tmp204
	movl	%eax, -60(%rbp)	# tmp204, inner_mode
	.loc 1 7478 0
	movq	-88(%rbp), %rax	# x, tmp205
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	movq	-112(%rbp), %rcx	# val, tmp206
	movq	-104(%rbp), %rdx	# reg, tmp207
	movl	-92(%rbp), %esi	# cond, tmp208
	movq	%rax, %rdi	# D.29320,
	call	known_cond	#
	movq	%rax, -48(%rbp)	# tmp209, r
	.loc 1 7480 0
	movq	-88(%rbp), %rax	# x, tmp210
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	cmpq	-48(%rbp), %rax	# r, D.29320
	je	.L1263	#,
	.loc 1 7484 0
	movq	-88(%rbp), %rax	# x, tmp211
	movl	16(%rax), %ecx	# x_17(D)->fld[1].rtuint, D.29323
	movq	-88(%rbp), %rax	# x, tmp212
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29318
	movzbl	%al, %eax	# D.29318, D.29321
	movl	-60(%rbp), %edx	# inner_mode, tmp213
	movq	-48(%rbp), %rsi	# r, tmp214
	movl	%eax, %edi	# D.29321,
	call	simplify_subreg	#
	movq	%rax, -40(%rbp)	# tmp215, new
	.loc 1 7486 0
	cmpq	$0, -40(%rbp)	#, new
	je	.L1264	#,
	.loc 1 7487 0
	movq	-40(%rbp), %rax	# new, D.29315
	jmp	.L1227	#
.L1264:
	.loc 1 7489 0
	movq	-88(%rbp), %rax	# x, tmp216
	leaq	8(%rax), %rdx	#, D.29324
	movq	-48(%rbp), %rax	# r, tmp217
	movq	%rax, %rsi	# tmp217,
	movq	%rdx, %rdi	# D.29324,
	call	do_SUBST	#
.L1263:
	.loc 1 7492 0
	movq	-88(%rbp), %rax	# x, D.29315
	jmp	.L1227	#
.L1262:
.LBE81:
	.loc 1 7500 0
	cmpl	$121, -64(%rbp)	#, code
	jne	.L1234	#,
.LBB82:
	.loc 1 7502 0
	movq	-88(%rbp), %rax	# x, tmp218
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	movzbl	2(%rax), %eax	# _76->mode, D.29318
	movzbl	%al, %eax	# D.29318, tmp219
	movl	%eax, -56(%rbp)	# tmp219, inner_mode
	.loc 1 7503 0
	movq	-88(%rbp), %rax	# x, tmp220
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	movq	-112(%rbp), %rcx	# val, tmp221
	movq	-104(%rbp), %rdx	# reg, tmp222
	movl	-92(%rbp), %esi	# cond, tmp223
	movq	%rax, %rdi	# D.29320,
	call	known_cond	#
	movq	%rax, -32(%rbp)	# tmp224, r
	.loc 1 7505 0
	movq	-88(%rbp), %rax	# x, tmp225
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29320
	cmpq	-32(%rbp), %rax	# r, D.29320
	je	.L1265	#,
	.loc 1 7509 0
	movq	-88(%rbp), %rax	# x, tmp226
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29318
	movzbl	%al, %eax	# D.29318, D.29321
	movl	-56(%rbp), %ecx	# inner_mode, tmp227
	movq	-32(%rbp), %rdx	# r, tmp228
	movl	%eax, %esi	# D.29321,
	movl	$121, %edi	#,
	call	simplify_unary_operation	#
	movq	%rax, -24(%rbp)	# tmp229, new
	.loc 1 7511 0
	cmpq	$0, -24(%rbp)	#, new
	je	.L1266	#,
	.loc 1 7512 0
	movq	-24(%rbp), %rax	# new, D.29315
	jmp	.L1227	#
.L1266:
	.loc 1 7514 0
	movq	-88(%rbp), %rax	# x, tmp230
	leaq	8(%rax), %rdx	#, D.29324
	movq	-32(%rbp), %rax	# r, tmp231
	movq	%rax, %rsi	# tmp231,
	movq	%rdx, %rdi	# D.29324,
	call	do_SUBST	#
.L1265:
	.loc 1 7517 0
	movq	-88(%rbp), %rax	# x, D.29315
	jmp	.L1227	#
.L1234:
.LBE82:
	.loc 1 7520 0
	movl	-64(%rbp), %eax	# code, code.955
	cltq
	movq	rtx_format(,%rax,8), %rax	# rtx_format, tmp233
	movq	%rax, -8(%rbp)	# tmp233, fmt
	.loc 1 7521 0
	movl	-64(%rbp), %eax	# code, code.956
	cltq
	movzbl	rtx_length(%rax), %eax	# rtx_length, D.29318
	movzbl	%al, %eax	# D.29318, D.29317
	subl	$1, %eax	#, tmp235
	movl	%eax, -72(%rbp)	# tmp235, i
	jmp	.L1267	#
.L1272:
	.loc 1 7523 0
	movl	-72(%rbp), %eax	# i, tmp236
	movslq	%eax, %rdx	# tmp236, D.29325
	movq	-8(%rbp), %rax	# fmt, tmp237
	addq	%rdx, %rax	# D.29325, D.29326
	movzbl	(%rax), %eax	# *_129, D.29322
	cmpb	$101, %al	#, D.29322
	jne	.L1268	#,
	.loc 1 7524 0
	movq	-88(%rbp), %rax	# x, tmp238
	movl	-72(%rbp), %edx	# i, tmp240
	movslq	%edx, %rdx	# tmp240, tmp239
	movq	8(%rax,%rdx,8), %rax	# x_17(D)->fld[i_9].rtx, D.29320
	movq	-112(%rbp), %rcx	# val, tmp241
	movq	-104(%rbp), %rdx	# reg, tmp242
	movl	-92(%rbp), %esi	# cond, tmp243
	movq	%rax, %rdi	# D.29320,
	call	known_cond	#
	movl	-72(%rbp), %edx	# i, tmp245
	movslq	%edx, %rdx	# tmp245, tmp244
	leaq	0(,%rdx,8), %rcx	#, tmp246
	movq	-88(%rbp), %rdx	# x, tmp248
	addq	%rcx, %rdx	# tmp246, tmp247
	addq	$8, %rdx	#, D.29324
	movq	%rax, %rsi	# D.29320,
	movq	%rdx, %rdi	# D.29324,
	call	do_SUBST	#
	jmp	.L1269	#
.L1268:
	.loc 1 7525 0
	movl	-72(%rbp), %eax	# i, tmp249
	movslq	%eax, %rdx	# tmp249, D.29325
	movq	-8(%rbp), %rax	# fmt, tmp250
	addq	%rdx, %rax	# D.29325, D.29326
	movzbl	(%rax), %eax	# *_135, D.29322
	cmpb	$69, %al	#, D.29322
	jne	.L1269	#,
	.loc 1 7526 0
	movq	-88(%rbp), %rax	# x, tmp251
	movl	-72(%rbp), %edx	# i, tmp253
	movslq	%edx, %rdx	# tmp253, tmp252
	movq	8(%rax,%rdx,8), %rax	# x_17(D)->fld[i_9].rtvec, D.29327
	movl	(%rax), %eax	# _137->num_elem, D.29317
	subl	$1, %eax	#, tmp254
	movl	%eax, -68(%rbp)	# tmp254, j
	jmp	.L1270	#
.L1271:
	.loc 1 7527 0 discriminator 2
	movq	-88(%rbp), %rax	# x, tmp255
	movl	-72(%rbp), %edx	# i, tmp257
	movslq	%edx, %rdx	# tmp257, tmp256
	movq	8(%rax,%rdx,8), %rax	# x_17(D)->fld[i_9].rtvec, D.29327
	movl	-68(%rbp), %edx	# j, tmp259
	movslq	%edx, %rdx	# tmp259, tmp258
	movq	8(%rax,%rdx,8), %rax	# _140->elem, D.29320
	movq	-112(%rbp), %rcx	# val, tmp260
	movq	-104(%rbp), %rdx	# reg, tmp261
	movl	-92(%rbp), %esi	# cond, tmp262
	movq	%rax, %rdi	# D.29320,
	call	known_cond	#
	movq	-88(%rbp), %rdx	# x, tmp263
	movl	-72(%rbp), %ecx	# i, tmp265
	movslq	%ecx, %rcx	# tmp265, tmp264
	movq	8(%rdx,%rcx,8), %rdx	# x_17(D)->fld[i_9].rtvec, D.29327
	movl	-68(%rbp), %ecx	# j, tmp267
	movslq	%ecx, %rcx	# tmp267, tmp266
	salq	$3, %rcx	#, tmp268
	addq	%rcx, %rdx	# tmp268, tmp269
	addq	$8, %rdx	#, D.29324
	movq	%rax, %rsi	# D.29320,
	movq	%rdx, %rdi	# D.29324,
	call	do_SUBST	#
	.loc 1 7526 0 discriminator 2
	subl	$1, -68(%rbp)	#, j
.L1270:
	.loc 1 7526 0 is_stmt 0 discriminator 1
	cmpl	$0, -68(%rbp)	#, j
	jns	.L1271	#,
.L1269:
	.loc 1 7521 0 is_stmt 1
	subl	$1, -72(%rbp)	#, i
.L1267:
	.loc 1 7521 0 is_stmt 0 discriminator 1
	cmpl	$0, -72(%rbp)	#, i
	jns	.L1272	#,
	.loc 1 7531 0 is_stmt 1
	movq	-88(%rbp), %rax	# x, D.29315
.L1227:
	.loc 1 7532 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE30:
	.size	known_cond, .-known_cond
	.type	rtx_equal_for_field_assignment_p, @function
rtx_equal_for_field_assignment_p:
.LFB31:
	.loc 1 7541 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# x, x
	movq	%rsi, -16(%rbp)	# y, y
	.loc 1 7542 0
	movq	-8(%rbp), %rax	# x, tmp84
	cmpq	-16(%rbp), %rax	# y, tmp84
	je	.L1278	#,
	.loc 1 7542 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rdx	# y, tmp85
	movq	-8(%rbp), %rax	# x, tmp86
	movq	%rdx, %rsi	# tmp85,
	movq	%rax, %rdi	# tmp86,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29328
	je	.L1279	#,
.L1278:
	.loc 1 7543 0 is_stmt 1
	movl	$1, %eax	#, D.29328
	jmp	.L1280	#
.L1279:
	.loc 1 7545 0
	cmpq	$0, -8(%rbp)	#, x
	je	.L1281	#,
	.loc 1 7545 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, y
	je	.L1281	#,
	movq	-8(%rbp), %rax	# x, tmp87
	movzbl	2(%rax), %edx	# x_2(D)->mode, D.29329
	movq	-16(%rbp), %rax	# y, tmp88
	movzbl	2(%rax), %eax	# y_3(D)->mode, D.29329
	cmpb	%al, %dl	# D.29329, D.29329
	je	.L1282	#,
.L1281:
	.loc 1 7546 0 is_stmt 1
	movl	$0, %eax	#, D.29328
	jmp	.L1280	#
.L1282:
	.loc 1 7551 0
	movq	-8(%rbp), %rax	# x, tmp89
	movzwl	(%rax), %eax	# x_2(D)->code, D.29330
	cmpw	$66, %ax	#, D.29330
	jne	.L1283	#,
	.loc 1 7551 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# y, tmp90
	movzwl	(%rax), %eax	# y_3(D)->code, D.29330
	cmpw	$63, %ax	#, D.29330
	jne	.L1283	#,
	.loc 1 7552 0 is_stmt 1
	movq	-16(%rbp), %rax	# y, tmp91
	movq	8(%rax), %rax	# y_3(D)->fld[0].rtx, D.29331
	movzwl	(%rax), %eax	# _9->code, D.29330
	cmpw	$66, %ax	#, D.29330
	jne	.L1283	#,
	.loc 1 7554 0
	movq	-16(%rbp), %rax	# y, tmp92
	movq	8(%rax), %rax	# y_3(D)->fld[0].rtx, D.29331
	movzbl	2(%rax), %eax	# _11->mode, D.29329
	.loc 1 7553 0
	movzbl	%al, %eax	# D.29329, D.29332
	movq	-8(%rbp), %rdx	# x, tmp93
	movq	%rdx, %rsi	# tmp93,
	movl	%eax, %edi	# D.29332,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29331
	movq	-16(%rbp), %rax	# y, tmp94
	movq	8(%rax), %rax	# y_3(D)->fld[0].rtx, D.29331
	movq	%rdx, %rsi	# D.29331,
	movq	%rax, %rdi	# D.29331,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29328
	je	.L1283	#,
	.loc 1 7555 0
	movl	$1, %eax	#, D.29328
	jmp	.L1280	#
.L1283:
	.loc 1 7557 0
	movq	-16(%rbp), %rax	# y, tmp95
	movzwl	(%rax), %eax	# y_3(D)->code, D.29330
	cmpw	$66, %ax	#, D.29330
	jne	.L1284	#,
	.loc 1 7557 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# x, tmp96
	movzwl	(%rax), %eax	# x_2(D)->code, D.29330
	cmpw	$63, %ax	#, D.29330
	jne	.L1284	#,
	.loc 1 7558 0 is_stmt 1
	movq	-8(%rbp), %rax	# x, tmp97
	movq	8(%rax), %rax	# x_2(D)->fld[0].rtx, D.29331
	movzwl	(%rax), %eax	# _20->code, D.29330
	cmpw	$66, %ax	#, D.29330
	jne	.L1284	#,
	.loc 1 7560 0
	movq	-8(%rbp), %rax	# x, tmp98
	movq	8(%rax), %rax	# x_2(D)->fld[0].rtx, D.29331
	movzbl	2(%rax), %eax	# _22->mode, D.29329
	.loc 1 7559 0
	movzbl	%al, %eax	# D.29329, D.29332
	movq	-16(%rbp), %rdx	# y, tmp99
	movq	%rdx, %rsi	# tmp99,
	movl	%eax, %edi	# D.29332,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29331
	movq	-8(%rbp), %rax	# x, tmp100
	movq	8(%rax), %rax	# x_2(D)->fld[0].rtx, D.29331
	movq	%rdx, %rsi	# D.29331,
	movq	%rax, %rdi	# D.29331,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29328
	je	.L1284	#,
	.loc 1 7561 0
	movl	$1, %eax	#, D.29328
	jmp	.L1280	#
.L1284:
	.loc 1 7568 0
	movl	$0, %eax	#, D.29328
.L1280:
	.loc 1 7569 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE31:
	.size	rtx_equal_for_field_assignment_p, .-rtx_equal_for_field_assignment_p
	.type	make_field_assignment, @function
make_field_assignment:
.LFB32:
	.loc 1 7579 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$120, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -104(%rbp)	# x, x
	.loc 1 7580 0
	movq	-104(%rbp), %rax	# x, tmp167
	movq	8(%rax), %rax	# x_6(D)->fld[0].rtx, tmp168
	movq	%rax, -64(%rbp)	# tmp168, dest
	.loc 1 7581 0
	movq	-104(%rbp), %rax	# x, tmp169
	movq	16(%rax), %rax	# x_6(D)->fld[1].rtx, tmp170
	movq	%rax, -56(%rbp)	# tmp170, src
	.loc 1 7586 0
	movq	$0, -88(%rbp)	#, len
	.loc 1 7595 0
	movq	-56(%rbp), %rax	# src, tmp171
	movzwl	(%rax), %eax	# src_8->code, D.29334
	cmpw	$83, %ax	#, D.29334
	jne	.L1286	#,
	.loc 1 7595 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# src, tmp172
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movzwl	(%rax), %eax	# _10->code, D.29334
	cmpw	$88, %ax	#, D.29334
	jne	.L1286	#,
	.loc 1 7596 0 is_stmt 1
	movq	-56(%rbp), %rax	# src, tmp173
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	8(%rax), %rax	# _12->fld[0].rtx, D.29335
	movzwl	(%rax), %eax	# _13->code, D.29334
	cmpw	$54, %ax	#, D.29334
	jne	.L1286	#,
	.loc 1 7597 0
	movq	-56(%rbp), %rax	# src, tmp174
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	8(%rax), %rax	# _15->fld[0].rtx, D.29335
	movq	8(%rax), %rax	# _16->fld[0].rtwint, D.29336
	cmpq	$-2, %rax	#, D.29336
	jne	.L1286	#,
	.loc 1 7598 0
	movq	-56(%rbp), %rax	# src, tmp175
	movq	16(%rax), %rdx	# src_8->fld[1].rtx, D.29335
	movq	-64(%rbp), %rax	# dest, tmp176
	movq	%rdx, %rsi	# D.29335,
	movq	%rax, %rdi	# tmp176,
	call	rtx_equal_for_field_assignment_p	#
	testl	%eax, %eax	# D.29337
	je	.L1286	#,
	.loc 1 7600 0
	movq	-56(%rbp), %rax	# src, tmp177
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	16(%rax), %rdx	# _20->fld[1].rtx, D.29335
	movq	-64(%rbp), %rax	# dest, tmp178
	movl	$0, 8(%rsp)	#,
	movl	$1, (%rsp)	#,
	movl	$1, %r9d	#,
	movl	$1, %r8d	#,
	movq	%rdx, %rcx	# D.29335,
	movl	$0, %edx	#,
	movq	%rax, %rsi	# tmp178,
	movl	$0, %edi	#,
	call	make_extraction	#
	movq	%rax, -48(%rbp)	# tmp179, assign
	.loc 1 7602 0
	cmpq	$0, -48(%rbp)	#, assign
	je	.L1287	#,
	.loc 1 7603 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29335
	movq	-48(%rbp), %rax	# assign, tmp180
	movq	%rdx, %rcx	# D.29335,
	movq	%rax, %rdx	# tmp180,
	movl	$0, %esi	#,
	movl	$47, %edi	#,
	call	gen_rtx_fmt_ee	#
	jmp	.L1304	#
.L1287:
	.loc 1 7604 0
	movq	-104(%rbp), %rax	# x, D.29333
	jmp	.L1304	#
.L1286:
	.loc 1 7607 0
	movq	-56(%rbp), %rax	# src, tmp181
	movzwl	(%rax), %eax	# src_8->code, D.29334
	cmpw	$83, %ax	#, D.29334
	jne	.L1289	#,
	.loc 1 7607 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# src, tmp182
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movzwl	(%rax), %eax	# _27->code, D.29334
	cmpw	$63, %ax	#, D.29334
	jne	.L1289	#,
	.loc 1 7608 0 is_stmt 1
	movq	-56(%rbp), %rax	# src, tmp183
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	%rax, %rdi	# D.29335,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29337
	je	.L1289	#,
	.loc 1 7609 0
	movq	-56(%rbp), %rax	# src, tmp184
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movzbl	2(%rax), %eax	# _31->mode, D.29338
	movzbl	%al, %eax	# D.29338, D.29337
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29338
	.loc 1 7610 0
	movq	-56(%rbp), %rax	# src, tmp186
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	8(%rax), %rax	# _35->fld[0].rtx, D.29335
	movzbl	2(%rax), %eax	# _36->mode, D.29338
	movzbl	%al, %eax	# D.29338, D.29337
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29338
	.loc 1 7609 0
	cmpb	%al, %dl	# D.29338, D.29338
	jae	.L1289	#,
	.loc 1 7611 0
	movq	-56(%rbp), %rax	# src, tmp188
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	8(%rax), %rax	# _40->fld[0].rtx, D.29335
	movzwl	(%rax), %eax	# _41->code, D.29334
	cmpw	$88, %ax	#, D.29334
	jne	.L1289	#,
	.loc 1 7612 0
	movq	-56(%rbp), %rax	# src, tmp189
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	8(%rax), %rax	# _43->fld[0].rtx, D.29335
	movq	8(%rax), %rax	# _44->fld[0].rtx, D.29335
	movq	8(%rax), %rax	# _45->fld[0].rtwint, D.29336
	cmpq	$-2, %rax	#, D.29336
	jne	.L1289	#,
	.loc 1 7613 0
	movq	-56(%rbp), %rax	# src, tmp190
	movq	16(%rax), %rdx	# src_8->fld[1].rtx, D.29335
	movq	-64(%rbp), %rax	# dest, tmp191
	movq	%rdx, %rsi	# D.29335,
	movq	%rax, %rdi	# tmp191,
	call	rtx_equal_for_field_assignment_p	#
	testl	%eax, %eax	# D.29337
	je	.L1289	#,
	.loc 1 7616 0
	movq	-56(%rbp), %rax	# src, tmp192
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	8(%rax), %rax	# _49->fld[0].rtx, D.29335
	.loc 1 7615 0
	movq	16(%rax), %rdx	# _50->fld[1].rtx, D.29335
	movq	-64(%rbp), %rax	# dest, tmp193
	movl	$0, 8(%rsp)	#,
	movl	$1, (%rsp)	#,
	movl	$1, %r9d	#,
	movl	$1, %r8d	#,
	movq	%rdx, %rcx	# D.29335,
	movl	$0, %edx	#,
	movq	%rax, %rsi	# tmp193,
	movl	$0, %edi	#,
	call	make_extraction	#
	movq	%rax, -48(%rbp)	# tmp194, assign
	.loc 1 7618 0
	cmpq	$0, -48(%rbp)	#, assign
	je	.L1290	#,
	.loc 1 7619 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29335
	movq	-48(%rbp), %rax	# assign, tmp195
	movq	%rdx, %rcx	# D.29335,
	movq	%rax, %rdx	# tmp195,
	movl	$0, %esi	#,
	movl	$47, %edi	#,
	call	gen_rtx_fmt_ee	#
	jmp	.L1304	#
.L1290:
	.loc 1 7620 0
	movq	-104(%rbp), %rax	# x, D.29333
	jmp	.L1304	#
.L1289:
	.loc 1 7625 0
	movq	-56(%rbp), %rax	# src, tmp196
	movzwl	(%rax), %eax	# src_8->code, D.29334
	cmpw	$84, %ax	#, D.29334
	jne	.L1291	#,
	.loc 1 7625 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# src, tmp197
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movzwl	(%rax), %eax	# _57->code, D.29334
	cmpw	$87, %ax	#, D.29334
	jne	.L1291	#,
	.loc 1 7626 0 is_stmt 1
	movq	-56(%rbp), %rax	# src, tmp198
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	8(%rax), %rdx	# _59->fld[0].rtx, D.29335
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29335
	cmpq	%rax, %rdx	# D.29335, D.29335
	jne	.L1291	#,
	.loc 1 7627 0
	movq	-56(%rbp), %rax	# src, tmp199
	movq	16(%rax), %rdx	# src_8->fld[1].rtx, D.29335
	movq	-64(%rbp), %rax	# dest, tmp200
	movq	%rdx, %rsi	# D.29335,
	movq	%rax, %rdi	# tmp200,
	call	rtx_equal_for_field_assignment_p	#
	testl	%eax, %eax	# D.29337
	je	.L1291	#,
	.loc 1 7629 0
	movq	-56(%rbp), %rax	# src, tmp201
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	16(%rax), %rdx	# _64->fld[1].rtx, D.29335
	movq	-64(%rbp), %rax	# dest, tmp202
	movl	$0, 8(%rsp)	#,
	movl	$1, (%rsp)	#,
	movl	$1, %r9d	#,
	movl	$1, %r8d	#,
	movq	%rdx, %rcx	# D.29335,
	movl	$0, %edx	#,
	movq	%rax, %rsi	# tmp202,
	movl	$0, %edi	#,
	call	make_extraction	#
	movq	%rax, -48(%rbp)	# tmp203, assign
	.loc 1 7631 0
	cmpq	$0, -48(%rbp)	#, assign
	je	.L1292	#,
	.loc 1 7632 0
	movq	const_int_rtx+520(%rip), %rdx	# const_int_rtx, D.29335
	movq	-48(%rbp), %rax	# assign, tmp204
	movq	%rdx, %rcx	# D.29335,
	movq	%rax, %rdx	# tmp204,
	movl	$0, %esi	#,
	movl	$47, %edi	#,
	call	gen_rtx_fmt_ee	#
	jmp	.L1304	#
.L1292:
	.loc 1 7633 0
	movq	-104(%rbp), %rax	# x, D.29333
	jmp	.L1304	#
.L1291:
	.loc 1 7644 0
	movq	-56(%rbp), %rax	# src, tmp205
	movzwl	(%rax), %eax	# src_8->code, D.29334
	cmpw	$84, %ax	#, D.29334
	je	.L1293	#,
	.loc 1 7644 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# src, tmp206
	movzwl	(%rax), %eax	# src_8->code, D.29334
	cmpw	$85, %ax	#, D.29334
	je	.L1293	#,
	.loc 1 7645 0 is_stmt 1
	movq	-104(%rbp), %rax	# x, D.29333
	jmp	.L1304	#
.L1293:
	.loc 1 7647 0
	movq	-56(%rbp), %rax	# src, tmp207
	movq	8(%rax), %rax	# src_8->fld[0].rtx, D.29335
	movq	%rax, %rdi	# D.29335,
	call	expand_compound_operation	#
	movq	%rax, -40(%rbp)	# tmp208, rhs
	.loc 1 7648 0
	movq	-56(%rbp), %rax	# src, tmp209
	movq	16(%rax), %rax	# src_8->fld[1].rtx, D.29335
	movq	%rax, %rdi	# D.29335,
	call	expand_compound_operation	#
	movq	%rax, -32(%rbp)	# tmp210, lhs
	.loc 1 7650 0
	movq	-40(%rbp), %rax	# rhs, tmp211
	movzwl	(%rax), %eax	# rhs_74->code, D.29334
	cmpw	$83, %ax	#, D.29334
	jne	.L1294	#,
	.loc 1 7651 0
	movq	-40(%rbp), %rax	# rhs, tmp212
	movq	16(%rax), %rax	# rhs_74->fld[1].rtx, D.29335
	movzwl	(%rax), %eax	# _78->code, D.29334
	cmpw	$54, %ax	#, D.29334
	jne	.L1294	#,
	.loc 1 7652 0
	movq	-40(%rbp), %rax	# rhs, tmp213
	movq	8(%rax), %rax	# rhs_74->fld[0].rtx, D.29335
	movq	-64(%rbp), %rdx	# dest, tmp214
	movq	%rdx, %rsi	# tmp214,
	movq	%rax, %rdi	# D.29335,
	call	rtx_equal_for_field_assignment_p	#
	testl	%eax, %eax	# D.29337
	je	.L1294	#,
	.loc 1 7653 0
	movq	-40(%rbp), %rax	# rhs, tmp215
	movq	16(%rax), %rax	# rhs_74->fld[1].rtx, D.29335
	movq	8(%rax), %rax	# _82->fld[0].rtwint, tmp216
	movq	%rax, -80(%rbp)	# tmp216, c1
	movq	-32(%rbp), %rax	# lhs, tmp217
	movq	%rax, -72(%rbp)	# tmp217, other
	jmp	.L1295	#
.L1294:
	.loc 1 7654 0
	movq	-32(%rbp), %rax	# lhs, tmp218
	movzwl	(%rax), %eax	# lhs_76->code, D.29334
	cmpw	$83, %ax	#, D.29334
	jne	.L1296	#,
	.loc 1 7655 0
	movq	-32(%rbp), %rax	# lhs, tmp219
	movq	16(%rax), %rax	# lhs_76->fld[1].rtx, D.29335
	movzwl	(%rax), %eax	# _86->code, D.29334
	cmpw	$54, %ax	#, D.29334
	jne	.L1296	#,
	.loc 1 7656 0
	movq	-32(%rbp), %rax	# lhs, tmp220
	movq	8(%rax), %rax	# lhs_76->fld[0].rtx, D.29335
	movq	-64(%rbp), %rdx	# dest, tmp221
	movq	%rdx, %rsi	# tmp221,
	movq	%rax, %rdi	# D.29335,
	call	rtx_equal_for_field_assignment_p	#
	testl	%eax, %eax	# D.29337
	je	.L1296	#,
	.loc 1 7657 0
	movq	-32(%rbp), %rax	# lhs, tmp222
	movq	16(%rax), %rax	# lhs_76->fld[1].rtx, D.29335
	movq	8(%rax), %rax	# _90->fld[0].rtwint, tmp223
	movq	%rax, -80(%rbp)	# tmp223, c1
	movq	-40(%rbp), %rax	# rhs, tmp224
	movq	%rax, -72(%rbp)	# tmp224, other
	jmp	.L1295	#
.L1296:
	.loc 1 7659 0
	movq	-104(%rbp), %rax	# x, D.29333
	jmp	.L1304	#
.L1295:
	.loc 1 7661 0
	movq	-80(%rbp), %rax	# c1, tmp225
	notq	%rax	# D.29336
	movq	%rax, %rdx	# D.29336, D.29339
	movq	-64(%rbp), %rax	# dest, tmp226
	movzbl	2(%rax), %eax	# dest_7->mode, D.29338
	movzbl	%al, %eax	# D.29338, D.29337
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29339
	andq	%rax, %rdx	# D.29339, D.29339
	leaq	-88(%rbp), %rax	#, tmp228
	movq	%rax, %rsi	# tmp228,
	movq	%rdx, %rdi	# D.29339,
	call	get_pos_from_mask	#
	cltq
	movq	%rax, -24(%rbp)	# tmp229, pos
	.loc 1 7662 0
	cmpq	$0, -24(%rbp)	#, pos
	js	.L1297	#,
	.loc 1 7662 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rdx	# pos, pos.957
	movq	-88(%rbp), %rax	# len, len.958
	addq	%rax, %rdx	# len.958, D.29339
	movq	-64(%rbp), %rax	# dest, tmp230
	movzbl	2(%rax), %eax	# dest_7->mode, D.29338
	movzbl	%al, %eax	# D.29338, D.29337
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29334
	movzwl	%ax, %eax	# D.29334, D.29339
	cmpq	%rax, %rdx	# D.29339, D.29339
	ja	.L1297	#,
	.loc 1 7663 0 is_stmt 1
	movq	-64(%rbp), %rax	# dest, tmp232
	movzbl	2(%rax), %eax	# dest_7->mode, D.29338
	movzbl	%al, %eax	# D.29338, D.29337
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29334
	cmpw	$64, %ax	#, D.29334
	ja	.L1297	#,
	.loc 1 7664 0
	movq	-64(%rbp), %rax	# dest, tmp234
	movzbl	2(%rax), %eax	# dest_7->mode, D.29338
	movzbl	%al, %edx	# D.29338, D.29340
	movq	-72(%rbp), %rax	# other, tmp235
	movl	%edx, %esi	# D.29340,
	movq	%rax, %rdi	# tmp235,
	call	nonzero_bits	#
	movq	-80(%rbp), %rdx	# c1, c1.959
	andq	%rdx, %rax	# c1.959, D.29339
	testq	%rax, %rax	# D.29339
	je	.L1298	#,
.L1297:
	.loc 1 7665 0
	movq	-104(%rbp), %rax	# x, D.29333
	jmp	.L1304	#
.L1298:
	.loc 1 7667 0
	movq	-88(%rbp), %rcx	# len, len.960
	movq	-24(%rbp), %rdx	# pos, tmp236
	movq	-64(%rbp), %rax	# dest, tmp237
	movl	$0, 8(%rsp)	#,
	movl	$1, (%rsp)	#,
	movl	$1, %r9d	#,
	movq	%rcx, %r8	# len.960,
	movl	$0, %ecx	#,
	movq	%rax, %rsi	# tmp237,
	movl	$0, %edi	#,
	call	make_extraction	#
	movq	%rax, -48(%rbp)	# tmp238, assign
	.loc 1 7668 0
	cmpq	$0, -48(%rbp)	#, assign
	jne	.L1299	#,
	.loc 1 7669 0
	movq	-104(%rbp), %rax	# x, D.29333
	jmp	.L1304	#
.L1299:
	.loc 1 7673 0
	movq	-48(%rbp), %rax	# assign, tmp239
	movzwl	(%rax), %eax	# assign_118->code, D.29334
	cmpw	$64, %ax	#, D.29334
	jne	.L1300	#,
	.loc 1 7674 0
	movq	-48(%rbp), %rax	# assign, tmp240
	movq	8(%rax), %rax	# assign_118->fld[0].rtx, D.29335
	movzbl	2(%rax), %eax	# _121->mode, D.29338
	.loc 1 7673 0
	movzbl	%al, %eax	# D.29338, iftmp.961
	jmp	.L1301	#
.L1300:
	.loc 1 7674 0 discriminator 1
	movq	-48(%rbp), %rax	# assign, tmp241
	movzbl	2(%rax), %eax	# assign_118->mode, D.29338
	.loc 1 7673 0 discriminator 1
	movzbl	%al, %eax	# D.29338, iftmp.961
.L1301:
	.loc 1 7673 0 is_stmt 0 discriminator 2
	movl	%eax, -92(%rbp)	# iftmp.961, mode
	.loc 1 7682 0 is_stmt 1 discriminator 2
	movl	-92(%rbp), %eax	# mode, mode.963
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29334
	.loc 1 7679 0 discriminator 2
	cmpw	$63, %ax	#, D.29334
	ja	.L1302	#,
	.loc 1 7684 0
	movq	-88(%rbp), %rax	# len, len.964
	movl	$1, %edx	#, tmp243
	movl	%eax, %ecx	# D.29337, tmp254
	salq	%cl, %rdx	# tmp254, D.29339
	movq	%rdx, %rax	# D.29339, D.29339
	.loc 1 7679 0
	leaq	-1(%rax), %rbx	#, iftmp.962
	jmp	.L1303	#
.L1302:
	.loc 1 7679 0 is_stmt 0 discriminator 1
	movq	$-1, %rbx	#, iftmp.962
.L1303:
	.loc 1 7679 0 discriminator 2
	movq	-24(%rbp), %rax	# pos, tmp244
	movl	%eax, %ecx	# tmp244, D.29337
	.loc 1 7680 0 is_stmt 1 discriminator 2
	movq	-56(%rbp), %rax	# src, tmp245
	movzbl	2(%rax), %eax	# src_8->mode, D.29338
	.loc 1 7679 0 discriminator 2
	movzbl	%al, %eax	# D.29338, D.29340
	movq	-72(%rbp), %rdx	# other, tmp246
	movl	%ecx, %r8d	# D.29337,
	movq	%rdx, %rcx	# tmp246,
	movl	%eax, %edx	# D.29340,
	movl	$90, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	-64(%rbp), %rdx	# dest, tmp247
	movl	-92(%rbp), %esi	# mode, tmp248
	movl	$0, %r8d	#,
	movq	%rdx, %rcx	# tmp247,
	movq	%rbx, %rdx	# iftmp.962,
	movq	%rax, %rdi	# D.29335,
	call	force_to_mode	#
	movq	%rax, -56(%rbp)	# tmp249, src
	.loc 1 7687 0 discriminator 2
	movq	-56(%rbp), %rdx	# src, tmp250
	movq	-48(%rbp), %rax	# assign, tmp251
	movq	%rdx, %rcx	# tmp250,
	movq	%rax, %rdx	# tmp251,
	movl	$0, %esi	#,
	movl	$47, %edi	#,
	call	gen_rtx_fmt_ee	#
.L1304:
	.loc 1 7688 0
	addq	$120, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE32:
	.size	make_field_assignment, .-make_field_assignment
	.type	apply_distributive_law, @function
apply_distributive_law:
.LFB33:
	.loc 1 7696 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -56(%rbp)	# x, x
	.loc 1 7697 0
	movq	-56(%rbp), %rax	# x, tmp143
	movzwl	(%rax), %eax	# x_8(D)->code, D.29342
	movzwl	%ax, %eax	# D.29342, tmp144
	movl	%eax, -36(%rbp)	# tmp144, code
	.loc 1 7705 0
	movq	-56(%rbp), %rax	# x, tmp145
	movzbl	2(%rax), %eax	# x_8(D)->mode, D.29343
	movzbl	%al, %eax	# D.29343, D.29344
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29345
	cmpl	$2, %eax	#, D.29345
	je	.L1306	#,
	.loc 1 7705 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp147
	movzbl	2(%rax), %eax	# x_8(D)->mode, D.29343
	movzbl	%al, %eax	# D.29343, D.29344
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29345
	cmpl	$6, %eax	#, D.29345
	je	.L1306	#,
	movq	-56(%rbp), %rax	# x, tmp149
	movzbl	2(%rax), %eax	# x_8(D)->mode, D.29343
	movzbl	%al, %eax	# D.29343, D.29344
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29345
	cmpl	$8, %eax	#, D.29345
	jne	.L1307	#,
.L1306:
	.loc 1 7706 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, D.29341
	jmp	.L1308	#
.L1307:
	.loc 1 7709 0
	cmpl	$84, -36(%rbp)	#, code
	je	.L1309	#,
	.loc 1 7709 0 is_stmt 0 discriminator 1
	cmpl	$83, -36(%rbp)	#, code
	je	.L1309	#,
	cmpl	$85, -36(%rbp)	#, code
	je	.L1309	#,
	.loc 1 7710 0 is_stmt 1
	cmpl	$75, -36(%rbp)	#, code
	je	.L1309	#,
	.loc 1 7710 0 is_stmt 0 discriminator 1
	cmpl	$76, -36(%rbp)	#, code
	je	.L1309	#,
	.loc 1 7711 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, D.29341
	jmp	.L1308	#
.L1309:
	.loc 1 7713 0
	movq	-56(%rbp), %rax	# x, tmp151
	movq	8(%rax), %rax	# x_8(D)->fld[0].rtx, tmp152
	movq	%rax, -32(%rbp)	# tmp152, lhs
	movq	-56(%rbp), %rax	# x, tmp153
	movq	16(%rax), %rax	# x_8(D)->fld[1].rtx, tmp154
	movq	%rax, -24(%rbp)	# tmp154, rhs
	.loc 1 7717 0
	movq	-32(%rbp), %rax	# lhs, tmp155
	movzwl	(%rax), %eax	# lhs_21->code, D.29342
	movzwl	%ax, %eax	# D.29342, D.29344
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29346
	cmpb	$111, %al	#, D.29346
	je	.L1310	#,
	.loc 1 7718 0
	movq	-24(%rbp), %rax	# rhs, tmp157
	movzwl	(%rax), %eax	# rhs_22->code, D.29342
	movzwl	%ax, %eax	# D.29342, D.29344
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29346
	cmpb	$111, %al	#, D.29346
	jne	.L1311	#,
.L1310:
	.loc 1 7719 0
	movq	-56(%rbp), %rax	# x, D.29341
	jmp	.L1308	#
.L1311:
	.loc 1 7721 0
	movq	-32(%rbp), %rax	# lhs, tmp159
	movq	%rax, %rdi	# tmp159,
	call	expand_compound_operation	#
	movq	%rax, -32(%rbp)	# tmp160, lhs
	.loc 1 7722 0
	movq	-24(%rbp), %rax	# rhs, tmp161
	movq	%rax, %rdi	# tmp161,
	call	expand_compound_operation	#
	movq	%rax, -24(%rbp)	# tmp162, rhs
	.loc 1 7723 0
	movq	-32(%rbp), %rax	# lhs, tmp163
	movzwl	(%rax), %eax	# lhs_29->code, D.29342
	movzwl	%ax, %eax	# D.29342, tmp164
	movl	%eax, -40(%rbp)	# tmp164, inner_code
	.loc 1 7724 0
	movq	-24(%rbp), %rax	# rhs, tmp165
	movzwl	(%rax), %eax	# rhs_30->code, D.29342
	movzwl	%ax, %eax	# D.29342, D.29347
	cmpl	-40(%rbp), %eax	# inner_code, D.29347
	je	.L1312	#,
	.loc 1 7725 0
	movq	-56(%rbp), %rax	# x, D.29341
	jmp	.L1308	#
.L1312:
	.loc 1 7728 0
	movl	-40(%rbp), %eax	# inner_code, tmp167
	subl	$63, %eax	#, tmp166
	cmpl	$27, %eax	#, tmp166
	ja	.L1313	#,
	movl	%eax, %eax	# tmp166, tmp168
	movq	.L1315(,%rax,8), %rax	#, tmp169
	jmp	*%rax	# tmp169
	.section	.rodata
	.align 8
	.align 4
.L1315:
	.quad	.L1314
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1316
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1313
	.quad	.L1317
	.quad	.L1317
	.quad	.L1313
	.quad	.L1313
	.quad	.L1333
	.quad	.L1313
	.quad	.L1317
	.quad	.L1317
	.text
.L1317:
	.loc 1 7735 0
	cmpl	$75, -36(%rbp)	#, code
	je	.L1319	#,
	.loc 1 7735 0 is_stmt 0 discriminator 1
	cmpl	$76, -36(%rbp)	#, code
	jne	.L1320	#,
.L1319:
	.loc 1 7736 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, D.29341
	jmp	.L1308	#
.L1320:
	.loc 1 7737 0
	jmp	.L1321	#
.L1316:
	.loc 1 7740 0
	cmpl	$75, -36(%rbp)	#, code
	je	.L1322	#,
	.loc 1 7740 0 is_stmt 0 discriminator 1
	cmpl	$76, -36(%rbp)	#, code
	je	.L1322	#,
	.loc 1 7741 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, D.29341
	jmp	.L1308	#
.L1322:
	.loc 1 7742 0
	jmp	.L1321	#
.L1314:
	.loc 1 7760 0
	movq	-32(%rbp), %rax	# lhs, tmp170
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, D.29348
	movzbl	2(%rax), %edx	# _38->mode, D.29343
	movq	-24(%rbp), %rax	# rhs, tmp171
	movq	8(%rax), %rax	# rhs_30->fld[0].rtx, D.29348
	movzbl	2(%rax), %eax	# _40->mode, D.29343
	cmpb	%al, %dl	# D.29343, D.29343
	jne	.L1323	#,
	.loc 1 7761 0
	movq	-32(%rbp), %rax	# lhs, tmp172
	movl	16(%rax), %edx	# lhs_29->fld[1].rtuint, D.29347
	movq	-24(%rbp), %rax	# rhs, tmp173
	movl	16(%rax), %eax	# rhs_30->fld[1].rtuint, D.29347
	cmpl	%eax, %edx	# D.29347, D.29347
	jne	.L1323	#,
	.loc 1 7762 0
	movq	-32(%rbp), %rax	# lhs, tmp174
	movq	%rax, %rdi	# tmp174,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29344
	je	.L1323	#,
	.loc 1 7763 0
	movq	-32(%rbp), %rax	# lhs, tmp175
	movzbl	2(%rax), %eax	# lhs_29->mode, D.29343
	movzbl	%al, %eax	# D.29343, D.29344
	cltq
	movl	mode_class(,%rax,4), %edx	# mode_class, D.29345
	.loc 1 7764 0
	movq	-32(%rbp), %rax	# lhs, tmp177
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, D.29348
	movzbl	2(%rax), %eax	# _48->mode, D.29343
	movzbl	%al, %eax	# D.29343, D.29344
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29345
	.loc 1 7763 0
	cmpl	%eax, %edx	# D.29345, D.29345
	jne	.L1323	#,
	.loc 1 7765 0
	movq	-32(%rbp), %rax	# lhs, tmp179
	movzbl	2(%rax), %eax	# lhs_29->mode, D.29343
	movzbl	%al, %eax	# D.29343, D.29344
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29343
	.loc 1 7766 0
	movq	-32(%rbp), %rax	# lhs, tmp181
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, D.29348
	movzbl	2(%rax), %eax	# _55->mode, D.29343
	movzbl	%al, %eax	# D.29343, D.29344
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29343
	.loc 1 7765 0
	cmpb	%al, %dl	# D.29343, D.29343
	ja	.L1323	#,
	.loc 1 7767 0
	movq	-32(%rbp), %rax	# lhs, tmp183
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, D.29348
	movzbl	2(%rax), %eax	# _59->mode, D.29343
	movzbl	%al, %eax	# D.29343, D.29344
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29343
	movzbl	%al, %edx	# D.29343, D.29344
	movl	target_flags(%rip), %eax	# target_flags, target_flags.966
	andl	$33554432, %eax	#, D.29344
	testl	%eax, %eax	# D.29344
	je	.L1324	#,
	.loc 1 7767 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.965
	jmp	.L1325	#
.L1324:
	.loc 1 7767 0 discriminator 2
	movl	$4, %eax	#, iftmp.965
.L1325:
	.loc 1 7767 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.965, D.29344
	jle	.L1326	#,
.L1323:
	.loc 1 7768 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, D.29341
	jmp	.L1308	#
.L1326:
	.loc 1 7770 0
	movq	-24(%rbp), %rax	# rhs, tmp185
	movq	8(%rax), %rcx	# rhs_30->fld[0].rtx, D.29348
	movq	-32(%rbp), %rax	# lhs, tmp186
	movq	8(%rax), %rdx	# lhs_29->fld[0].rtx, D.29348
	movq	-32(%rbp), %rax	# lhs, tmp187
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, D.29348
	movzbl	2(%rax), %eax	# _70->mode, D.29343
	movzbl	%al, %esi	# D.29343, D.29349
	movl	-36(%rbp), %eax	# code, tmp188
	movl	%eax, %edi	# tmp188,
	call	gen_binary	#
	movq	%rax, -8(%rbp)	# tmp189, tem
	.loc 1 7772 0
	movq	-56(%rbp), %rax	# x, tmp190
	movzbl	2(%rax), %eax	# x_8(D)->mode, D.29343
	movzbl	%al, %eax	# D.29343, D.29349
	movq	-8(%rbp), %rdx	# tem, tmp191
	movq	%rdx, %rsi	# tmp191,
	movl	%eax, %edi	# D.29349,
	call	gen_lowpart_for_combine	#
	jmp	.L1308	#
.L1313:
	.loc 1 7775 0
	movq	-56(%rbp), %rax	# x, D.29341
	jmp	.L1308	#
.L1333:
	.loc 1 7746 0
	nop
.L1321:
	.loc 1 7782 0
	movl	-40(%rbp), %eax	# inner_code, inner_code.967
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29346
	cmpb	$99, %al	#, D.29346
	jne	.L1327	#,
	.loc 1 7783 0
	movq	-24(%rbp), %rax	# rhs, tmp193
	movq	8(%rax), %rdx	# rhs_30->fld[0].rtx, D.29348
	movq	-32(%rbp), %rax	# lhs, tmp194
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, D.29348
	movq	%rdx, %rsi	# D.29348,
	movq	%rax, %rdi	# D.29348,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29344
	je	.L1327	#,
	.loc 1 7784 0
	movq	-32(%rbp), %rax	# lhs, tmp195
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, tmp196
	movq	%rax, -16(%rbp)	# tmp196, other
	movq	-32(%rbp), %rax	# lhs, tmp197
	movq	16(%rax), %rax	# lhs_29->fld[1].rtx, tmp198
	movq	%rax, -32(%rbp)	# tmp198, lhs
	movq	-24(%rbp), %rax	# rhs, tmp199
	movq	16(%rax), %rax	# rhs_30->fld[1].rtx, tmp200
	movq	%rax, -24(%rbp)	# tmp200, rhs
	jmp	.L1328	#
.L1327:
	.loc 1 7785 0
	movl	-40(%rbp), %eax	# inner_code, inner_code.968
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29346
	cmpb	$99, %al	#, D.29346
	jne	.L1329	#,
	.loc 1 7786 0
	movq	-24(%rbp), %rax	# rhs, tmp202
	movq	16(%rax), %rdx	# rhs_30->fld[1].rtx, D.29348
	movq	-32(%rbp), %rax	# lhs, tmp203
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, D.29348
	movq	%rdx, %rsi	# D.29348,
	movq	%rax, %rdi	# D.29348,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29344
	je	.L1329	#,
	.loc 1 7787 0
	movq	-32(%rbp), %rax	# lhs, tmp204
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, tmp205
	movq	%rax, -16(%rbp)	# tmp205, other
	movq	-32(%rbp), %rax	# lhs, tmp206
	movq	16(%rax), %rax	# lhs_29->fld[1].rtx, tmp207
	movq	%rax, -32(%rbp)	# tmp207, lhs
	movq	-24(%rbp), %rax	# rhs, tmp208
	movq	8(%rax), %rax	# rhs_30->fld[0].rtx, tmp209
	movq	%rax, -24(%rbp)	# tmp209, rhs
	jmp	.L1328	#
.L1329:
	.loc 1 7788 0
	movl	-40(%rbp), %eax	# inner_code, inner_code.969
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29346
	cmpb	$99, %al	#, D.29346
	jne	.L1330	#,
	.loc 1 7789 0
	movq	-24(%rbp), %rax	# rhs, tmp211
	movq	8(%rax), %rdx	# rhs_30->fld[0].rtx, D.29348
	movq	-32(%rbp), %rax	# lhs, tmp212
	movq	16(%rax), %rax	# lhs_29->fld[1].rtx, D.29348
	movq	%rdx, %rsi	# D.29348,
	movq	%rax, %rdi	# D.29348,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29344
	je	.L1330	#,
	.loc 1 7790 0
	movq	-32(%rbp), %rax	# lhs, tmp213
	movq	16(%rax), %rax	# lhs_29->fld[1].rtx, tmp214
	movq	%rax, -16(%rbp)	# tmp214, other
	movq	-32(%rbp), %rax	# lhs, tmp215
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, tmp216
	movq	%rax, -32(%rbp)	# tmp216, lhs
	movq	-24(%rbp), %rax	# rhs, tmp217
	movq	16(%rax), %rax	# rhs_30->fld[1].rtx, tmp218
	movq	%rax, -24(%rbp)	# tmp218, rhs
	jmp	.L1328	#
.L1330:
	.loc 1 7791 0
	movq	-24(%rbp), %rax	# rhs, tmp219
	movq	16(%rax), %rdx	# rhs_30->fld[1].rtx, D.29348
	movq	-32(%rbp), %rax	# lhs, tmp220
	movq	16(%rax), %rax	# lhs_29->fld[1].rtx, D.29348
	movq	%rdx, %rsi	# D.29348,
	movq	%rax, %rdi	# D.29348,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29344
	je	.L1331	#,
	.loc 1 7792 0
	movq	-32(%rbp), %rax	# lhs, tmp221
	movq	16(%rax), %rax	# lhs_29->fld[1].rtx, tmp222
	movq	%rax, -16(%rbp)	# tmp222, other
	movq	-32(%rbp), %rax	# lhs, tmp223
	movq	8(%rax), %rax	# lhs_29->fld[0].rtx, tmp224
	movq	%rax, -32(%rbp)	# tmp224, lhs
	movq	-24(%rbp), %rax	# rhs, tmp225
	movq	8(%rax), %rax	# rhs_30->fld[0].rtx, tmp226
	movq	%rax, -24(%rbp)	# tmp226, rhs
	jmp	.L1328	#
.L1331:
	.loc 1 7794 0
	movq	-56(%rbp), %rax	# x, D.29341
	jmp	.L1308	#
.L1328:
	.loc 1 7797 0
	movq	-56(%rbp), %rax	# x, tmp227
	movzbl	2(%rax), %eax	# x_8(D)->mode, D.29343
	movzbl	%al, %esi	# D.29343, D.29349
	movq	-24(%rbp), %rcx	# rhs, tmp228
	movq	-32(%rbp), %rdx	# lhs, tmp229
	movl	-36(%rbp), %eax	# code, tmp230
	movl	%eax, %edi	# tmp230,
	call	gen_binary	#
	movq	%rax, -8(%rbp)	# tmp231, tem
	.loc 1 7801 0
	cmpl	$85, -36(%rbp)	#, code
	jne	.L1332	#,
	.loc 1 7801 0 is_stmt 0 discriminator 1
	cmpl	$84, -40(%rbp)	#, inner_code
	jne	.L1332	#,
	.loc 1 7803 0 is_stmt 1
	movl	$83, -40(%rbp)	#, inner_code
	.loc 1 7804 0
	movq	-56(%rbp), %rax	# x, tmp232
	movzbl	2(%rax), %eax	# x_8(D)->mode, D.29343
	movzbl	%al, %ecx	# D.29343, D.29349
	movq	-56(%rbp), %rax	# x, tmp233
	movzbl	2(%rax), %eax	# x_8(D)->mode, D.29343
	movzbl	%al, %eax	# D.29343, D.29349
	movq	-16(%rbp), %rdx	# other, tmp234
	movl	%eax, %esi	# D.29349,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, -16(%rbp)	# tmp235, other
.L1332:
	.loc 1 7810 0
	movq	-8(%rbp), %rax	# tem, tmp236
	movq	%rax, %rdi	# tmp236,
	call	apply_distributive_law	#
	movq	%rax, %rdx	#, D.29348
	movq	-56(%rbp), %rax	# x, tmp237
	movzbl	2(%rax), %eax	# x_8(D)->mode, D.29343
	movzbl	%al, %esi	# D.29343, D.29349
	movq	-16(%rbp), %rcx	# other, tmp238
	movl	-40(%rbp), %eax	# inner_code, tmp239
	movl	%eax, %edi	# tmp239,
	call	gen_binary	#
.L1308:
	.loc 1 7812 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE33:
	.size	apply_distributive_law, .-apply_distributive_law
	.type	simplify_and_const_int, @function
simplify_and_const_int:
.LFB34:
	.loc 1 7826 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# x, x
	movl	%esi, -60(%rbp)	# mode, mode
	movq	%rdx, -72(%rbp)	# varop, varop
	movq	%rcx, -80(%rbp)	# constop, constop
	.loc 1 7837 0
	movq	-80(%rbp), %rdx	# constop, tmp123
	movl	-60(%rbp), %esi	# mode, tmp124
	movq	-72(%rbp), %rax	# varop, tmp125
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp125,
	call	force_to_mode	#
	movq	%rax, -72(%rbp)	# tmp126, varop
	.loc 1 7840 0
	movq	-72(%rbp), %rax	# varop, tmp127
	movzwl	(%rax), %eax	# varop_8->code, D.29351
	cmpw	$49, %ax	#, D.29351
	jne	.L1335	#,
	.loc 1 7841 0
	movq	-72(%rbp), %rax	# varop, D.29350
	jmp	.L1336	#
.L1335:
	.loc 1 7845 0
	movq	-72(%rbp), %rax	# varop, tmp128
	movzwl	(%rax), %eax	# varop_8->code, D.29351
	cmpw	$54, %ax	#, D.29351
	jne	.L1337	#,
	.loc 1 7846 0
	movq	-72(%rbp), %rax	# varop, tmp129
	movq	8(%rax), %rax	# varop_8->fld[0].rtwint, D.29352
	andq	-80(%rbp), %rax	# constop, D.29353
	movl	-60(%rbp), %edx	# mode, tmp130
	movl	%edx, %esi	# tmp130,
	movq	%rax, %rdi	# D.29352,
	call	trunc_int_for_mode	#
	movq	%rax, %rsi	# D.29352,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	jmp	.L1336	#
.L1337:
	.loc 1 7852 0
	movl	-60(%rbp), %edx	# mode, tmp131
	movq	-72(%rbp), %rax	# varop, tmp132
	movl	%edx, %esi	# tmp131,
	movq	%rax, %rdi	# tmp132,
	call	nonzero_bits	#
	movl	-60(%rbp), %edx	# mode, mode.970
	movslq	%edx, %rdx	# mode.970, tmp133
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29353
	andq	%rdx, %rax	# D.29353, tmp134
	movq	%rax, -40(%rbp)	# tmp134, nonzero
	.loc 1 7858 0
	movq	-40(%rbp), %rax	# nonzero, tmp135
	andq	%rax, -80(%rbp)	# tmp135, constop
	.loc 1 7861 0
	cmpq	$0, -80(%rbp)	#, constop
	jne	.L1338	#,
	.loc 1 7862 0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29350
	jmp	.L1336	#
.L1338:
	.loc 1 7866 0
	movq	-72(%rbp), %rax	# varop, tmp136
	movzwl	(%rax), %eax	# varop_8->code, D.29351
	cmpw	$77, %ax	#, D.29351
	jne	.L1339	#,
	.loc 1 7866 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# varop, tmp137
	movq	8(%rax), %rax	# varop_8->fld[0].rtx, D.29354
	movl	-60(%rbp), %edx	# mode, tmp138
	movl	%edx, %esi	# tmp138,
	movq	%rax, %rdi	# D.29354,
	call	nonzero_bits	#
	cmpq	$1, %rax	#, D.29353
	jne	.L1339	#,
	.loc 1 7867 0 is_stmt 1
	movq	-80(%rbp), %rax	# constop, tmp139
	movq	%rax, %rdi	# tmp139,
	call	exact_log2_wide	#
	movl	%eax, -44(%rbp)	# tmp140, i
	cmpl	$0, -44(%rbp)	#, i
	js	.L1339	#,
	.loc 1 7868 0
	movq	-72(%rbp), %rax	# varop, tmp141
	movq	8(%rax), %rdx	# varop_8->fld[0].rtx, D.29354
	movl	-44(%rbp), %ecx	# i, tmp142
	movl	-60(%rbp), %eax	# mode, tmp143
	movl	%ecx, %r8d	# tmp142,
	movq	%rdx, %rcx	# D.29354,
	movl	%eax, %edx	# tmp143,
	movl	$87, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	jmp	.L1336	#
.L1339:
	.loc 1 7876 0
	movq	-72(%rbp), %rax	# varop, tmp144
	movzwl	(%rax), %eax	# varop_8->code, D.29351
	cmpw	$84, %ax	#, D.29351
	je	.L1340	#,
	.loc 1 7876 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# varop, tmp145
	movzwl	(%rax), %eax	# varop_8->code, D.29351
	cmpw	$85, %ax	#, D.29351
	jne	.L1341	#,
.L1340:
	.loc 1 7879 0 is_stmt 1
	movq	-72(%rbp), %rax	# varop, tmp146
	movq	16(%rax), %rdx	# varop_8->fld[1].rtx, D.29354
	.loc 1 7884 0
	movq	-72(%rbp), %rax	# varop, tmp147
	movzbl	2(%rax), %eax	# varop_8->mode, D.29356
	.loc 1 7879 0
	movzbl	%al, %eax	# D.29356, D.29359
	movq	-80(%rbp), %rcx	# constop, tmp148
	movl	%eax, %esi	# D.29359,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, %rbx	#, D.29354
	movq	-72(%rbp), %rax	# varop, tmp149
	movq	8(%rax), %rdx	# varop_8->fld[0].rtx, D.29354
	.loc 1 7882 0
	movq	-72(%rbp), %rax	# varop, tmp150
	movzbl	2(%rax), %eax	# varop_8->mode, D.29356
	.loc 1 7879 0
	movzbl	%al, %eax	# D.29356, D.29359
	movq	-80(%rbp), %rcx	# constop, tmp151
	movl	%eax, %esi	# D.29359,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, %rdx	#, D.29354
	.loc 1 7881 0
	movq	-72(%rbp), %rax	# varop, tmp152
	movzbl	2(%rax), %eax	# varop_8->mode, D.29356
	.loc 1 7879 0
	movzbl	%al, %esi	# D.29356, D.29359
	.loc 1 7881 0
	movq	-72(%rbp), %rax	# varop, tmp153
	movzwl	(%rax), %eax	# varop_8->code, D.29351
	.loc 1 7879 0
	movzwl	%ax, %eax	# D.29351, D.29360
	movq	%rbx, %rcx	# D.29354,
	movl	%eax, %edi	# D.29360,
	call	gen_binary	#
	movq	%rax, %rdi	# D.29354,
	call	apply_distributive_law	#
	movq	%rax, %rdx	#, D.29354
	.loc 1 7877 0
	movl	-60(%rbp), %eax	# mode, tmp154
	movq	%rdx, %rsi	# D.29354,
	movl	%eax, %edi	# tmp154,
	call	gen_lowpart_for_combine	#
	jmp	.L1336	#
.L1341:
	.loc 1 7891 0
	movq	-72(%rbp), %rax	# varop, tmp155
	movzwl	(%rax), %eax	# varop_8->code, D.29351
	cmpw	$75, %ax	#, D.29351
	jne	.L1342	#,
	.loc 1 7892 0
	movq	-80(%rbp), %rax	# constop, tmp156
	addq	$1, %rax	#, D.29353
	movq	%rax, %rdi	# D.29353,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29355
	js	.L1342	#,
.LBB83:
	.loc 1 7896 0
	movq	-72(%rbp), %rax	# varop, tmp157
	movq	8(%rax), %rdx	# varop_8->fld[0].rtx, D.29354
	movq	-80(%rbp), %rcx	# constop, tmp158
	movl	-60(%rbp), %eax	# mode, tmp159
	movl	%eax, %esi	# tmp159,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, -32(%rbp)	# tmp160, o0
	.loc 1 7897 0
	movq	-72(%rbp), %rax	# varop, tmp161
	movq	16(%rax), %rdx	# varop_8->fld[1].rtx, D.29354
	movq	-80(%rbp), %rcx	# constop, tmp162
	movl	-60(%rbp), %eax	# mode, tmp163
	movl	%eax, %esi	# tmp163,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, -24(%rbp)	# tmp164, o1
	.loc 1 7898 0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29354
	cmpq	-32(%rbp), %rax	# o0, D.29354
	jne	.L1343	#,
	.loc 1 7899 0
	movq	-24(%rbp), %rax	# o1, D.29350
	jmp	.L1336	#
.L1343:
	.loc 1 7900 0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29354
	cmpq	-24(%rbp), %rax	# o1, D.29354
	jne	.L1342	#,
	.loc 1 7901 0
	movq	-32(%rbp), %rax	# o0, D.29350
	jmp	.L1336	#
.L1342:
.LBE83:
	.loc 1 7906 0
	cmpq	$0, -56(%rbp)	#, x
	je	.L1344	#,
	.loc 1 7906 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp165
	movq	8(%rax), %rax	# x_43(D)->fld[0].rtx, D.29354
	movzwl	(%rax), %eax	# _44->code, D.29351
	cmpw	$63, %ax	#, D.29351
	jne	.L1344	#,
	.loc 1 7907 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, tmp166
	movq	8(%rax), %rax	# x_43(D)->fld[0].rtx, D.29354
	movzbl	2(%rax), %eax	# _46->mode, D.29356
	movzbl	%al, %eax	# D.29356, D.29357
	cmpl	-60(%rbp), %eax	# mode, D.29357
	jne	.L1344	#,
	.loc 1 7908 0
	movq	-56(%rbp), %rax	# x, tmp167
	movq	8(%rax), %rax	# x_43(D)->fld[0].rtx, D.29354
	movq	8(%rax), %rax	# _49->fld[0].rtx, D.29354
	cmpq	-72(%rbp), %rax	# varop, D.29354
	jne	.L1344	#,
	.loc 1 7909 0
	movq	-56(%rbp), %rax	# x, tmp168
	movq	8(%rax), %rax	# x_43(D)->fld[0].rtx, tmp169
	movq	%rax, -72(%rbp)	# tmp169, varop
	jmp	.L1345	#
.L1344:
	.loc 1 7911 0
	movq	-72(%rbp), %rdx	# varop, tmp170
	movl	-60(%rbp), %eax	# mode, tmp171
	movq	%rdx, %rsi	# tmp170,
	movl	%eax, %edi	# tmp171,
	call	gen_lowpart_for_combine	#
	movq	%rax, -72(%rbp)	# tmp172, varop
.L1345:
	.loc 1 7914 0
	movq	-72(%rbp), %rax	# varop, tmp173
	movzwl	(%rax), %eax	# varop_2->code, D.29351
	cmpw	$49, %ax	#, D.29351
	jne	.L1346	#,
	.loc 1 7915 0
	cmpq	$0, -56(%rbp)	#, x
	je	.L1347	#,
	.loc 1 7915 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, iftmp.971
	jmp	.L1348	#
.L1347:
	.loc 1 7915 0 discriminator 2
	movq	-72(%rbp), %rax	# varop, iftmp.971
.L1348:
	.loc 1 7915 0 discriminator 3
	jmp	.L1336	#
.L1346:
	.loc 1 7918 0 is_stmt 1
	movq	-80(%rbp), %rax	# constop, tmp174
	cmpq	-40(%rbp), %rax	# nonzero, tmp174
	jne	.L1349	#,
	.loc 1 7919 0
	movq	-72(%rbp), %rax	# varop, tmp175
	movq	%rax, -56(%rbp)	# tmp175, x
	jmp	.L1350	#
.L1349:
	.loc 1 7923 0
	movq	-80(%rbp), %rax	# constop, constop.972
	movl	-60(%rbp), %edx	# mode, tmp176
	movl	%edx, %esi	# tmp176,
	movq	%rax, %rdi	# constop.972,
	call	trunc_int_for_mode	#
	movq	%rax, -80(%rbp)	# D.29352, constop
	.loc 1 7925 0
	cmpq	$0, -56(%rbp)	#, x
	je	.L1351	#,
	.loc 1 7925 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp177
	movzwl	(%rax), %eax	# x_43(D)->code, D.29351
	cmpw	$83, %ax	#, D.29351
	jne	.L1351	#,
	movq	-56(%rbp), %rax	# x, tmp178
	movzbl	2(%rax), %eax	# x_43(D)->mode, D.29356
	movzbl	%al, %eax	# D.29356, D.29357
	cmpl	-60(%rbp), %eax	# mode, D.29357
	je	.L1352	#,
.L1351:
	.loc 1 7926 0 is_stmt 1
	movq	-80(%rbp), %rax	# constop, constop.973
	movq	%rax, %rsi	# constop.973,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29354
	movq	-72(%rbp), %rdx	# varop, tmp179
	movl	-60(%rbp), %eax	# mode, tmp180
	movl	%eax, %esi	# tmp180,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, -56(%rbp)	# tmp181, x
	jmp	.L1350	#
.L1352:
	.loc 1 7930 0
	movq	-56(%rbp), %rax	# x, tmp182
	movq	16(%rax), %rax	# x_43(D)->fld[1].rtx, D.29354
	movzwl	(%rax), %eax	# _64->code, D.29351
	cmpw	$54, %ax	#, D.29351
	jne	.L1353	#,
	.loc 1 7931 0
	movq	-56(%rbp), %rax	# x, tmp183
	movq	16(%rax), %rax	# x_43(D)->fld[1].rtx, D.29354
	movq	8(%rax), %rax	# _66->fld[0].rtwint, D.29352
	cmpq	-80(%rbp), %rax	# constop, D.29353
	je	.L1354	#,
.L1353:
	.loc 1 7932 0
	movq	-80(%rbp), %rax	# constop, constop.974
	movq	%rax, %rsi	# constop.974,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	-56(%rbp), %rdx	# x, tmp184
	addq	$16, %rdx	#, D.29358
	movq	%rax, %rsi	# D.29354,
	movq	%rdx, %rdi	# D.29358,
	call	do_SUBST	#
.L1354:
	.loc 1 7934 0
	movq	-56(%rbp), %rax	# x, tmp185
	leaq	8(%rax), %rdx	#, D.29358
	movq	-72(%rbp), %rax	# varop, tmp186
	movq	%rax, %rsi	# tmp186,
	movq	%rdx, %rdi	# D.29358,
	call	do_SUBST	#
.L1350:
	.loc 1 7938 0
	movq	-56(%rbp), %rax	# x, D.29350
.L1336:
	.loc 1 7939 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE34:
	.size	simplify_and_const_int, .-simplify_and_const_int
	.type	nonzero_bits, @function
nonzero_bits:
.LFB35:
	.loc 1 7958 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$184, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -184(%rbp)	# x, x
	movl	%esi, -188(%rbp)	# mode, mode
	.loc 1 7959 0
	movl	-188(%rbp), %eax	# mode, mode.975
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, tmp432
	movq	%rax, -128(%rbp)	# tmp432, nonzero
	.loc 1 7962 0
	movl	-188(%rbp), %eax	# mode, mode.976
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	movzwl	%ax, %eax	# D.29362, tmp434
	movl	%eax, -172(%rbp)	# tmp434, mode_width
	.loc 1 7966 0
	movq	-184(%rbp), %rax	# x, tmp435
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29365
	cmpl	$2, %eax	#, D.29365
	je	.L1356	#,
	.loc 1 7966 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# x, tmp437
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29365
	cmpl	$6, %eax	#, D.29365
	je	.L1356	#,
	movq	-184(%rbp), %rax	# x, tmp439
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29365
	cmpl	$8, %eax	#, D.29365
	je	.L1356	#,
	movl	-188(%rbp), %eax	# mode, mode.977
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29365
	cmpl	$2, %eax	#, D.29365
	je	.L1356	#,
	movl	-188(%rbp), %eax	# mode, mode.978
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29365
	cmpl	$6, %eax	#, D.29365
	je	.L1356	#,
	movl	-188(%rbp), %eax	# mode, mode.979
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29365
	cmpl	$8, %eax	#, D.29365
	jne	.L1357	#,
.L1356:
	.loc 1 7967 0 is_stmt 1
	movq	-128(%rbp), %rax	# nonzero, D.29361
	jmp	.L1358	#
.L1357:
	.loc 1 7970 0
	movq	-184(%rbp), %rax	# x, tmp444
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	movzwl	%ax, %eax	# D.29362, D.29366
	cmpl	-172(%rbp), %eax	# mode_width, D.29366
	jbe	.L1359	#,
	.loc 1 7972 0
	movq	-184(%rbp), %rax	# x, tmp446
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, tmp447
	movl	%eax, -188(%rbp)	# tmp447, mode
	.loc 1 7973 0
	movl	-188(%rbp), %eax	# mode, mode.980
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, tmp449
	movq	%rax, -128(%rbp)	# tmp449, nonzero
	.loc 1 7974 0
	movl	-188(%rbp), %eax	# mode, mode.981
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	movzwl	%ax, %eax	# D.29362, tmp451
	movl	%eax, -172(%rbp)	# tmp451, mode_width
.L1359:
	.loc 1 7977 0
	cmpl	$64, -172(%rbp)	#, mode_width
	jbe	.L1360	#,
	.loc 1 7980 0
	movq	-128(%rbp), %rax	# nonzero, D.29361
	jmp	.L1358	#
.L1360:
	.loc 1 7990 0
	movq	-184(%rbp), %rax	# x, tmp452
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	testb	%al, %al	# D.29363
	je	.L1361	#,
	.loc 1 7990 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# x, tmp453
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29366
	cmpl	-188(%rbp), %eax	# mode, D.29366
	je	.L1361	#,
	.loc 1 7991 0 is_stmt 1
	movq	-184(%rbp), %rax	# x, tmp454
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	movzwl	%ax, %edx	# D.29362, D.29364
	movl	target_flags(%rip), %eax	# target_flags, target_flags.983
	andl	$33554432, %eax	#, D.29364
	testl	%eax, %eax	# D.29364
	je	.L1362	#,
	.loc 1 7991 0 is_stmt 0 discriminator 1
	movl	$64, %eax	#, iftmp.982
	jmp	.L1363	#
.L1362:
	.loc 1 7991 0 discriminator 2
	movl	$32, %eax	#, iftmp.982
.L1363:
	.loc 1 7991 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.982, D.29364
	jg	.L1361	#,
	.loc 1 7992 0 is_stmt 1
	movq	-184(%rbp), %rax	# x, tmp456
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	cmpw	$64, %ax	#, D.29362
	ja	.L1361	#,
	.loc 1 7993 0
	movl	-188(%rbp), %eax	# mode, mode.984
	cltq
	movzwl	mode_bitsize(%rax,%rax), %edx	# mode_bitsize, D.29362
	movq	-184(%rbp), %rax	# x, tmp459
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	cmpw	%ax, %dx	# D.29362, D.29362
	jbe	.L1361	#,
	.loc 1 7995 0
	movq	-184(%rbp), %rax	# x, tmp461
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %edx	# D.29363, D.29367
	movq	-184(%rbp), %rax	# x, tmp462
	movl	%edx, %esi	# D.29367,
	movq	%rax, %rdi	# tmp462,
	call	nonzero_bits	#
	andq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 7996 0
	movl	-188(%rbp), %eax	# mode, mode.985
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29361
	movq	-184(%rbp), %rax	# x, tmp464
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29361
	notq	%rax	# D.29361
	andq	%rdx, %rax	# D.29361, D.29361
	orq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 7997 0
	movq	-128(%rbp), %rax	# nonzero, D.29361
	jmp	.L1358	#
.L1361:
	.loc 1 8001 0
	movq	-184(%rbp), %rax	# x, tmp466
	movzwl	(%rax), %eax	# x_37(D)->code, D.29362
	movzwl	%ax, %eax	# D.29362, tmp467
	movl	%eax, -160(%rbp)	# tmp467, code
	.loc 1 8002 0
	movl	-160(%rbp), %eax	# code, tmp469
	subl	$54, %eax	#, tmp468
	cmpl	$79, %eax	#, tmp468
	ja	.L1432	#,
	movl	%eax, %eax	# tmp468, tmp470
	movq	.L1366(,%rax,8), %rax	#, tmp471
	jmp	*%rax	# tmp471
	.section	.rodata
	.align 8
	.align 4
.L1366:
	.quad	.L1365
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1367
	.quad	.L1432
	.quad	.L1368
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1370
	.quad	.L1432
	.quad	.L1432
	.quad	.L1371
	.quad	.L1371
	.quad	.L1372
	.quad	.L1371
	.quad	.L1371
	.quad	.L1371
	.quad	.L1371
	.quad	.L1371
	.quad	.L1373
	.quad	.L1374
	.quad	.L1374
	.quad	.L1432
	.quad	.L1375
	.quad	.L1375
	.quad	.L1375
	.quad	.L1375
	.quad	.L1432
	.quad	.L1374
	.quad	.L1374
	.quad	.L1374
	.quad	.L1374
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1376
	.quad	.L1377
	.quad	.L1378
	.quad	.L1379
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1432
	.quad	.L1381
	.quad	.L1432
	.quad	.L1382
	.text
.L1367:
	.loc 1 8017 0
	movq	global_rtl+16(%rip), %rax	# global_rtl, D.29368
	cmpq	-184(%rbp), %rax	# x, D.29368
	je	.L1383	#,
	.loc 1 8018 0
	movq	global_rtl+24(%rip), %rax	# global_rtl, D.29368
	cmpq	-184(%rbp), %rax	# x, D.29368
	je	.L1383	#,
	.loc 1 8019 0
	movq	global_rtl+40(%rip), %rax	# global_rtl, D.29368
	cmpq	-184(%rbp), %rax	# x, D.29368
	jne	.L1384	#,
.L1383:
	.loc 1 8020 0
	movq	cfun(%rip), %rax	# cfun, cfun.986
	movq	24(%rax), %rax	# cfun.986_102->emit, D.29369
	movq	64(%rax), %rdx	# _103->regno_pointer_align, D.29370
	movq	-184(%rbp), %rax	# x, tmp472
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29371
	addq	%rdx, %rax	# D.29370, D.29370
	movzbl	(%rax), %eax	# *_107, D.29363
	testb	%al, %al	# D.29363
	je	.L1384	#,
.LBB84:
	.loc 1 8023 0
	movq	cfun(%rip), %rax	# cfun, cfun.987
	movq	24(%rax), %rax	# cfun.987_109->emit, D.29369
	movq	64(%rax), %rdx	# _110->regno_pointer_align, D.29370
	movq	-184(%rbp), %rax	# x, tmp473
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29371
	addq	%rdx, %rax	# D.29370, D.29370
	movzbl	(%rax), %eax	# *_114, D.29363
	.loc 1 8022 0
	shrb	$3, %al	#, D.29363
	movzbl	%al, %eax	# D.29363, tmp474
	movq	%rax, -112(%rbp)	# tmp474, alignment
	.loc 1 8029 0
	movq	global_rtl+16(%rip), %rax	# global_rtl, D.29368
	cmpq	-184(%rbp), %rax	# x, D.29368
	jne	.L1385	#,
	.loc 1 8029 0 is_stmt 0 discriminator 1
	movl	target_flags(%rip), %eax	# target_flags, target_flags.988
	andl	$2048, %eax	#, D.29364
	testl	%eax, %eax	# D.29364
	jne	.L1385	#,
	movl	target_flags(%rip), %eax	# target_flags, target_flags.989
	andl	$4096, %eax	#, D.29364
	testl	%eax, %eax	# D.29364
	jne	.L1385	#,
	.loc 1 8030 0 is_stmt 1
	movl	target_flags(%rip), %eax	# target_flags, target_flags.991
	andl	$33554432, %eax	#, D.29364
	testl	%eax, %eax	# D.29364
	je	.L1386	#,
	.loc 1 8030 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.990
	jmp	.L1387	#
.L1386:
	.loc 1 8030 0 discriminator 2
	movl	$2, %eax	#, iftmp.990
.L1387:
	.loc 1 8030 0 discriminator 3
	movq	-112(%rbp), %rdx	# alignment, tmp476
	cmpq	%rdx, %rax	# tmp476, iftmp.990
	cmova	%rdx, %rax	# iftmp.990,, tmp476, tmp475
	movq	%rax, -112(%rbp)	# tmp475, alignment
.L1385:
	.loc 1 8033 0 is_stmt 1
	movq	-112(%rbp), %rax	# alignment, tmp477
	negq	%rax	# D.29361
	andq	%rax, -128(%rbp)	# D.29361, nonzero
.L1384:
.LBE84:
	.loc 1 8041 0
	movq	reg_last_set_value(%rip), %rdx	# reg_last_set_value, reg_last_set_value.992
	movq	-184(%rbp), %rax	# x, tmp478
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29361
	salq	$3, %rax	#, D.29361
	addq	%rdx, %rax	# reg_last_set_value.992, D.29372
	movq	(%rax), %rax	# *_134, D.29368
	testq	%rax, %rax	# D.29368
	je	.L1388	#,
	.loc 1 8042 0
	movq	reg_last_set_mode(%rip), %rdx	# reg_last_set_mode, reg_last_set_mode.993
	movq	-184(%rbp), %rax	# x, tmp479
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29361
	salq	$2, %rax	#, D.29361
	addq	%rdx, %rax	# reg_last_set_mode.993, D.29373
	movl	(%rax), %eax	# *_140, D.29367
	cmpl	-188(%rbp), %eax	# mode, D.29367
	je	.L1389	#,
	.loc 1 8043 0
	movq	reg_last_set_mode(%rip), %rdx	# reg_last_set_mode, reg_last_set_mode.994
	movq	-184(%rbp), %rax	# x, tmp480
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29361
	salq	$2, %rax	#, D.29361
	addq	%rdx, %rax	# reg_last_set_mode.994, D.29373
	movl	(%rax), %eax	# *_146, D.29367
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29365
	cmpl	$1, %eax	#, D.29365
	jne	.L1388	#,
	.loc 1 8044 0
	movl	-188(%rbp), %eax	# mode, mode.995
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29365
	cmpl	$1, %eax	#, D.29365
	jne	.L1388	#,
.L1389:
	.loc 1 8045 0
	movq	reg_last_set_label(%rip), %rdx	# reg_last_set_label, reg_last_set_label.996
	movq	-184(%rbp), %rax	# x, tmp483
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29361
	salq	$2, %rax	#, D.29361
	addq	%rdx, %rax	# reg_last_set_label.996, D.29374
	movl	(%rax), %edx	# *_156, D.29364
	movl	label_tick(%rip), %eax	# label_tick, label_tick.997
	cmpl	%eax, %edx	# label_tick.997, D.29364
	je	.L1390	#,
	.loc 1 8046 0
	movq	-184(%rbp), %rax	# x, tmp484
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	cmpl	$52, %eax	#, D.29366
	jbe	.L1388	#,
	.loc 1 8047 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.998
	movq	-184(%rbp), %rdx	# x, tmp485
	movl	8(%rdx), %edx	# x_37(D)->fld[0].rtuint, D.29366
	movl	%edx, %edx	# D.29366, tmp486
	addq	$4, %rdx	#, tmp487
	movq	(%rax,%rdx,8), %rax	# reg_n_info.998_160->data.reg, D.29375
	movl	12(%rax), %eax	# _162->sets, D.29364
	cmpl	$1, %eax	#, D.29364
	jne	.L1388	#,
	.loc 1 8048 0
	movq	-184(%rbp), %rax	# x, tmp488
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %edx	# D.29366, D.29364
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.999
	movq	32(%rax), %rax	# basic_block_info.999_166->data.bb, D.29376
	movq	64(%rax), %rax	# _167->global_live_at_start, D.29377
	movl	%edx, %esi	# D.29364,
	movq	%rax, %rdi	# D.29377,
	call	bitmap_bit_p	#
	testl	%eax, %eax	# D.29364
	jne	.L1388	#,
.L1390:
	.loc 1 8050 0
	movq	reg_last_set(%rip), %rdx	# reg_last_set, reg_last_set.1001
	movq	-184(%rbp), %rax	# x, tmp489
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29361
	salq	$3, %rax	#, D.29361
	addq	%rdx, %rax	# reg_last_set.1001, D.29372
	movq	(%rax), %rax	# *_174, D.29368
	movl	8(%rax), %edx	# _175->fld[0].rtint, D.29364
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1002
	cmpl	%eax, %edx	# max_uid_cuid.1002, D.29364
	jle	.L1391	#,
	.loc 1 8050 0 is_stmt 0 discriminator 1
	movq	reg_last_set(%rip), %rdx	# reg_last_set, reg_last_set.1003
	movq	-184(%rbp), %rax	# x, tmp490
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29361
	salq	$3, %rax	#, D.29361
	addq	%rdx, %rax	# reg_last_set.1003, D.29372
	movq	(%rax), %rax	# *_182, D.29368
	movq	%rax, %rdi	# D.29368,
	call	insn_cuid	#
	jmp	.L1392	#
.L1391:
	.loc 1 8050 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1004
	movq	reg_last_set(%rip), %rcx	# reg_last_set, reg_last_set.1005
	movq	-184(%rbp), %rax	# x, tmp491
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29361
	salq	$3, %rax	#, D.29361
	addq	%rcx, %rax	# reg_last_set.1005, D.29372
	movq	(%rax), %rax	# *_190, D.29368
	movl	8(%rax), %eax	# _191->fld[0].rtint, D.29364
	cltq
	salq	$2, %rax	#, D.29361
	addq	%rdx, %rax	# uid_cuid.1004, D.29374
	movl	(%rax), %eax	# *_195, iftmp.1000
.L1392:
	.loc 1 8050 0 discriminator 3
	movl	subst_low_cuid(%rip), %edx	# subst_low_cuid, subst_low_cuid.1006
	cmpl	%edx, %eax	# subst_low_cuid.1006, iftmp.1000
	jge	.L1388	#,
	.loc 1 8051 0 is_stmt 1
	movq	reg_last_set_nonzero_bits(%rip), %rdx	# reg_last_set_nonzero_bits, reg_last_set_nonzero_bits.1007
	movq	-184(%rbp), %rax	# x, tmp492
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29361
	salq	$3, %rax	#, D.29361
	addq	%rdx, %rax	# reg_last_set_nonzero_bits.1007, D.29378
	movq	(%rax), %rax	# *_202, D.29361
	andq	-128(%rbp), %rax	# nonzero, D.29361
	jmp	.L1358	#
.L1388:
	.loc 1 8053 0
	movq	-184(%rbp), %rax	# x, tmp493
	movq	%rax, %rdi	# tmp493,
	call	get_last_value	#
	movq	%rax, -80(%rbp)	# tmp494, tem
	.loc 1 8055 0
	cmpq	$0, -80(%rbp)	#, tem
	je	.L1393	#,
	.loc 1 8077 0
	movl	-188(%rbp), %edx	# mode, tmp495
	movq	-80(%rbp), %rax	# tem, tmp496
	movl	%edx, %esi	# tmp495,
	movq	%rax, %rdi	# tmp496,
	call	nonzero_bits	#
	andq	-128(%rbp), %rax	# nonzero, D.29361
	jmp	.L1358	#
.L1393:
	.loc 1 8079 0
	movl	nonzero_sign_valid(%rip), %eax	# nonzero_sign_valid, nonzero_sign_valid.1008
	testl	%eax, %eax	# nonzero_sign_valid.1008
	je	.L1394	#,
	.loc 1 8079 0 is_stmt 0 discriminator 1
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.1009
	movq	-184(%rbp), %rax	# x, tmp497
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29361
	salq	$3, %rax	#, D.29361
	addq	%rdx, %rax	# reg_nonzero_bits.1009, D.29378
	movq	(%rax), %rax	# *_213, D.29361
	testq	%rax, %rax	# D.29361
	je	.L1394	#,
.LBB85:
	.loc 1 8081 0 is_stmt 1
	movq	reg_nonzero_bits(%rip), %rdx	# reg_nonzero_bits, reg_nonzero_bits.1010
	movq	-184(%rbp), %rax	# x, tmp498
	movl	8(%rax), %eax	# x_37(D)->fld[0].rtuint, D.29366
	movl	%eax, %eax	# D.29366, D.29361
	salq	$3, %rax	#, D.29361
	addq	%rdx, %rax	# reg_nonzero_bits.1010, D.29378
	movq	(%rax), %rax	# *_219, tmp499
	movq	%rax, -104(%rbp)	# tmp499, mask
	.loc 1 8083 0
	movq	-184(%rbp), %rax	# x, tmp500
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	movzwl	%ax, %eax	# D.29362, D.29366
	cmpl	-172(%rbp), %eax	# mode_width, D.29366
	jae	.L1395	#,
	.loc 1 8085 0
	movl	-188(%rbp), %eax	# mode, mode.1011
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29361
	movq	-184(%rbp), %rax	# x, tmp503
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29361
	xorq	%rdx, %rax	# D.29361, D.29361
	orq	%rax, -104(%rbp)	# D.29361, mask
.L1395:
	.loc 1 8086 0
	movq	-104(%rbp), %rax	# mask, tmp505
	movq	-128(%rbp), %rdx	# nonzero, tmp506
	andq	%rdx, %rax	# tmp506, D.29361
	jmp	.L1358	#
.L1394:
.LBE85:
	.loc 1 8089 0
	movq	-128(%rbp), %rax	# nonzero, D.29361
	jmp	.L1358	#
.L1365:
	.loc 1 8099 0
	movq	-184(%rbp), %rax	# x, tmp507
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtwint, D.29379
	jmp	.L1358	#
.L1376:
	.loc 1 8123 0
	movl	-188(%rbp), %eax	# mode, mode.1012
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29365
	cmpl	$1, %eax	#, D.29365
	jne	.L1397	#,
	.loc 1 8124 0
	cmpl	$64, -172(%rbp)	#, mode_width
	ja	.L1397	#,
	.loc 1 8125 0
	movq	$1, -128(%rbp)	#, nonzero
	.loc 1 8126 0
	jmp	.L1396	#
.L1397:
	jmp	.L1396	#
.L1372:
	.loc 1 8137 0
	movq	-184(%rbp), %rax	# x, tmp509
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29363
	movzbl	%al, %eax	# D.29363, D.29366
	cmpl	-172(%rbp), %eax	# mode_width, D.29366
	jae	.L1398	#,
	.loc 1 8138 0
	movl	-188(%rbp), %eax	# mode, mode.1013
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29361
	movq	-184(%rbp), %rax	# x, tmp512
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29361
	notq	%rax	# D.29361
	andq	%rdx, %rax	# D.29361, D.29361
	orq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 8139 0
	jmp	.L1396	#
.L1398:
	jmp	.L1396	#
.L1379:
	.loc 1 8152 0
	movq	-184(%rbp), %rax	# x, tmp514
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp515
	movl	%edx, %esi	# tmp515,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	movl	-188(%rbp), %edx	# mode, mode.1014
	movslq	%edx, %rdx	# mode.1014, tmp516
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29361
	andq	%rdx, %rax	# D.29361, D.29361
	andq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 8153 0
	jmp	.L1396	#
.L1378:
	.loc 1 8156 0
	movq	-184(%rbp), %rax	# x, tmp517
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp518
	movl	%edx, %esi	# tmp518,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	andq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 8157 0
	movq	-184(%rbp), %rax	# x, tmp519
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movzbl	2(%rax), %eax	# _260->mode, D.29363
	testb	%al, %al	# D.29363
	je	.L1399	#,
	.loc 1 8158 0
	movq	-184(%rbp), %rax	# x, tmp520
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movzbl	2(%rax), %eax	# _262->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29361
	andq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 8159 0
	jmp	.L1396	#
.L1399:
	jmp	.L1396	#
.L1377:
	.loc 1 8165 0
	movq	-184(%rbp), %rax	# x, tmp522
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp523
	movl	%edx, %esi	# tmp523,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	movq	%rax, -120(%rbp)	# tmp524, inner_nz
	.loc 1 8166 0
	movq	-184(%rbp), %rax	# x, tmp525
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movzbl	2(%rax), %eax	# _269->mode, D.29363
	testb	%al, %al	# D.29363
	je	.L1400	#,
	.loc 1 8168 0
	movq	-184(%rbp), %rax	# x, tmp526
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movzbl	2(%rax), %eax	# _271->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29361
	andq	%rax, -120(%rbp)	# D.29361, inner_nz
	.loc 1 8171 0
	movq	-184(%rbp), %rax	# x, tmp528
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movzbl	2(%rax), %eax	# _276->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	movzwl	%ax, %eax	# D.29362, D.29364
	subl	$1, %eax	#, D.29364
	movl	$1, %edx	#, tmp530
	movl	%eax, %ecx	# D.29364, tmp669
	salq	%cl, %rdx	# tmp669, D.29379
	movq	%rdx, %rax	# D.29379, D.29379
	.loc 1 8170 0
	andq	-120(%rbp), %rax	# inner_nz, D.29361
	.loc 1 8169 0
	testq	%rax, %rax	# D.29361
	je	.L1400	#,
	.loc 1 8172 0
	movl	-188(%rbp), %eax	# mode, mode.1015
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29361
	.loc 1 8173 0
	movq	-184(%rbp), %rax	# x, tmp532
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movzbl	2(%rax), %eax	# _287->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29361
	notq	%rax	# D.29361
	andq	%rdx, %rax	# D.29361, D.29361
	.loc 1 8172 0
	orq	%rax, -120(%rbp)	# D.29361, inner_nz
.L1400:
	.loc 1 8176 0
	movq	-120(%rbp), %rax	# inner_nz, tmp534
	andq	%rax, -128(%rbp)	# tmp534, nonzero
	.loc 1 8177 0
	jmp	.L1396	#
.L1373:
	.loc 1 8180 0
	movq	-184(%rbp), %rax	# x, tmp535
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp536
	movl	%edx, %esi	# tmp536,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	movq	%rax, %rbx	#, D.29361
	.loc 1 8181 0
	movq	-184(%rbp), %rax	# x, tmp537
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp538
	movl	%edx, %esi	# tmp538,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	andq	%rbx, %rax	# D.29361, D.29361
	.loc 1 8180 0
	andq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 8182 0
	jmp	.L1396	#
.L1374:
.LBB86:
	.loc 1 8187 0
	movq	-184(%rbp), %rax	# x, tmp539
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp540
	movl	%edx, %esi	# tmp540,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	movq	%rax, -72(%rbp)	# tmp541, nonzero0
	.loc 1 8191 0
	movq	-72(%rbp), %rax	# nonzero0, tmp542
	movq	-128(%rbp), %rdx	# nonzero, tmp543
	andq	%rdx, %rax	# tmp543, D.29361
	cmpq	-128(%rbp), %rax	# nonzero, D.29361
	je	.L1401	#,
	.loc 1 8192 0
	movq	-184(%rbp), %rax	# x, tmp544
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp545
	movl	%edx, %esi	# tmp545,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	orq	-72(%rbp), %rax	# nonzero0, D.29361
	andq	%rax, -128(%rbp)	# D.29361, nonzero
.LBE86:
	.loc 1 8194 0
	jmp	.L1396	#
.L1401:
	jmp	.L1396	#
.L1371:
.LBB87:
	.loc 1 8205 0
	movq	-184(%rbp), %rax	# x, tmp546
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp547
	movl	%edx, %esi	# tmp547,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	movq	%rax, -64(%rbp)	# tmp548, nz0
	.loc 1 8206 0
	movq	-184(%rbp), %rax	# x, tmp549
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp550
	movl	%edx, %esi	# tmp550,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	movq	%rax, -56(%rbp)	# tmp551, nz1
	.loc 1 8207 0
	movq	-64(%rbp), %rax	# nz0, tmp552
	movq	%rax, %rdi	# tmp552,
	call	floor_log2_wide	#
	addl	$1, %eax	#, tmp553
	movl	%eax, -156(%rbp)	# tmp553, width0
	.loc 1 8208 0
	movq	-56(%rbp), %rax	# nz1, tmp554
	movq	%rax, %rdi	# tmp554,
	call	floor_log2_wide	#
	addl	$1, %eax	#, tmp555
	movl	%eax, -152(%rbp)	# tmp555, width1
	.loc 1 8209 0
	movq	-64(%rbp), %rax	# nz0, tmp556
	negq	%rax	# D.29361
	andq	-64(%rbp), %rax	# nz0, D.29361
	movq	%rax, %rdi	# D.29361,
	call	floor_log2_wide	#
	movl	%eax, -148(%rbp)	# tmp557, low0
	.loc 1 8210 0
	movq	-56(%rbp), %rax	# nz1, tmp558
	negq	%rax	# D.29361
	andq	-56(%rbp), %rax	# nz1, D.29361
	movq	%rax, %rdi	# D.29361,
	call	floor_log2_wide	#
	movl	%eax, -144(%rbp)	# tmp559, low1
	.loc 1 8212 0
	movl	-172(%rbp), %eax	# mode_width, tmp560
	subl	$1, %eax	#, D.29366
	movl	$1, %edx	#, tmp561
	movl	%eax, %ecx	# D.29364, tmp671
	salq	%cl, %rdx	# tmp671, D.29379
	movq	%rdx, %rax	# D.29379, D.29379
	andq	-64(%rbp), %rax	# nz0, D.29361
	.loc 1 8211 0
	movq	%rax, -48(%rbp)	# D.29361, op0_maybe_minusp
	.loc 1 8214 0
	movl	-172(%rbp), %eax	# mode_width, tmp562
	subl	$1, %eax	#, D.29366
	movl	$1, %edx	#, tmp563
	movl	%eax, %ecx	# D.29364, tmp673
	salq	%cl, %rdx	# tmp673, D.29379
	movq	%rdx, %rax	# D.29379, D.29379
	andq	-56(%rbp), %rax	# nz1, D.29361
	.loc 1 8213 0
	movq	%rax, -40(%rbp)	# D.29361, op1_maybe_minusp
	.loc 1 8215 0
	movl	-172(%rbp), %eax	# mode_width, tmp564
	movl	%eax, -168(%rbp)	# tmp564, result_width
	.loc 1 8216 0
	movl	$0, -164(%rbp)	#, result_low
	.loc 1 8218 0
	movl	-160(%rbp), %eax	# code, tmp566
	subl	$75, %eax	#, tmp565
	cmpl	$7, %eax	#, tmp565
	ja	.L1402	#,
	movl	%eax, %eax	# tmp565, tmp567
	movq	.L1404(,%rax,8), %rax	#, tmp568
	jmp	*%rax	# tmp568
	.section	.rodata
	.align 8
	.align 4
.L1404:
	.quad	.L1403
	.quad	.L1405
	.quad	.L1402
	.quad	.L1406
	.quad	.L1407
	.quad	.L1408
	.quad	.L1409
	.quad	.L1410
	.text
.L1403:
	.loc 1 8221 0
	movl	-156(%rbp), %eax	# width0, tmp569
	cmpl	%eax, -152(%rbp)	# tmp569, width1
	cmovge	-152(%rbp), %eax	# width1,, D.29364
	addl	$1, %eax	#, D.29364
	movl	%eax, -168(%rbp)	# D.29364, result_width
	.loc 1 8222 0
	movl	-148(%rbp), %eax	# low0, tmp571
	cmpl	%eax, -144(%rbp)	# tmp571, low1
	cmovle	-144(%rbp), %eax	# low1,, tmp570
	movl	%eax, -164(%rbp)	# tmp570, result_low
	.loc 1 8223 0
	jmp	.L1411	#
.L1405:
	.loc 1 8225 0
	movl	-148(%rbp), %eax	# low0, tmp573
	cmpl	%eax, -144(%rbp)	# tmp573, low1
	cmovle	-144(%rbp), %eax	# low1,, tmp572
	movl	%eax, -164(%rbp)	# tmp572, result_low
	.loc 1 8226 0
	jmp	.L1411	#
.L1406:
	.loc 1 8228 0
	movl	-152(%rbp), %eax	# width1, tmp574
	movl	-156(%rbp), %edx	# width0, tmp575
	addl	%edx, %eax	# tmp575, D.29364
	movl	%eax, -168(%rbp)	# D.29364, result_width
	.loc 1 8229 0
	movl	-144(%rbp), %eax	# low1, tmp580
	movl	-148(%rbp), %edx	# low0, tmp581
	addl	%edx, %eax	# tmp581, tmp579
	movl	%eax, -164(%rbp)	# tmp579, result_low
	.loc 1 8230 0
	jmp	.L1411	#
.L1407:
	.loc 1 8232 0
	cmpl	$0, -152(%rbp)	#, width1
	jne	.L1412	#,
	.loc 1 8233 0
	jmp	.L1411	#
.L1412:
	.loc 1 8234 0
	cmpq	$0, -48(%rbp)	#, op0_maybe_minusp
	jne	.L1413	#,
	.loc 1 8234 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, op1_maybe_minusp
	jne	.L1413	#,
	.loc 1 8235 0 is_stmt 1
	movl	-156(%rbp), %eax	# width0, tmp582
	movl	%eax, -168(%rbp)	# tmp582, result_width
	.loc 1 8236 0
	jmp	.L1411	#
.L1413:
	jmp	.L1411	#
.L1409:
	.loc 1 8238 0
	cmpl	$0, -152(%rbp)	#, width1
	jne	.L1414	#,
	.loc 1 8239 0
	jmp	.L1411	#
.L1414:
	.loc 1 8240 0
	movl	-156(%rbp), %eax	# width0, tmp583
	movl	%eax, -168(%rbp)	# tmp583, result_width
	.loc 1 8241 0
	jmp	.L1411	#
.L1408:
	.loc 1 8243 0
	cmpl	$0, -152(%rbp)	#, width1
	jne	.L1415	#,
	.loc 1 8244 0
	jmp	.L1411	#
.L1415:
	.loc 1 8245 0
	cmpq	$0, -48(%rbp)	#, op0_maybe_minusp
	jne	.L1416	#,
	.loc 1 8245 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, op1_maybe_minusp
	jne	.L1416	#,
	.loc 1 8246 0 is_stmt 1
	movl	-156(%rbp), %eax	# width0, tmp584
	cmpl	%eax, -152(%rbp)	# tmp584, width1
	cmovle	-152(%rbp), %eax	# width1,, D.29364
	movl	%eax, -168(%rbp)	# D.29364, result_width
.L1416:
	.loc 1 8247 0
	movl	-148(%rbp), %eax	# low0, tmp586
	cmpl	%eax, -144(%rbp)	# tmp586, low1
	cmovle	-144(%rbp), %eax	# low1,, tmp585
	movl	%eax, -164(%rbp)	# tmp585, result_low
	.loc 1 8248 0
	jmp	.L1411	#
.L1410:
	.loc 1 8250 0
	cmpl	$0, -152(%rbp)	#, width1
	jne	.L1417	#,
	.loc 1 8251 0
	jmp	.L1411	#
.L1417:
	.loc 1 8252 0
	movl	-156(%rbp), %eax	# width0, tmp587
	cmpl	%eax, -152(%rbp)	# tmp587, width1
	cmovle	-152(%rbp), %eax	# width1,, D.29364
	movl	%eax, -168(%rbp)	# D.29364, result_width
	.loc 1 8253 0
	movl	-148(%rbp), %eax	# low0, tmp589
	cmpl	%eax, -144(%rbp)	# tmp589, low1
	cmovle	-144(%rbp), %eax	# low1,, tmp588
	movl	%eax, -164(%rbp)	# tmp588, result_low
	.loc 1 8254 0
	jmp	.L1411	#
.L1402:
	.loc 1 8256 0
	movl	$__FUNCTION__.12255, %edx	#,
	movl	$8256, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L1411:
	.loc 1 8259 0
	movl	-168(%rbp), %eax	# result_width, tmp590
	cmpl	-172(%rbp), %eax	# mode_width, tmp590
	jae	.L1418	#,
	.loc 1 8260 0
	movl	-168(%rbp), %eax	# result_width, result_width.1016
	movl	$1, %edx	#, tmp591
	movl	%eax, %ecx	# result_width.1016, tmp675
	salq	%cl, %rdx	# tmp675, D.29379
	movq	%rdx, %rax	# D.29379, D.29379
	subq	$1, %rax	#, D.29379
	andq	%rax, -128(%rbp)	# D.29361, nonzero
.L1418:
	.loc 1 8262 0
	cmpl	$0, -164(%rbp)	#, result_low
	jle	.L1419	#,
	.loc 1 8263 0
	movl	-164(%rbp), %eax	# result_low, tmp592
	movl	$1, %edx	#, tmp593
	movl	%eax, %ecx	# tmp592, tmp677
	salq	%cl, %rdx	# tmp677, D.29379
	movq	%rdx, %rax	# D.29379, D.29379
	negq	%rax	# D.29379
	andq	%rax, -128(%rbp)	# D.29361, nonzero
.LBE87:
	.loc 1 8275 0
	jmp	.L1396	#
.L1419:
	jmp	.L1396	#
.L1382:
	.loc 1 8278 0
	movq	-184(%rbp), %rax	# x, tmp594
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movzwl	(%rax), %eax	# _361->code, D.29362
	cmpw	$54, %ax	#, D.29362
	jne	.L1420	#,
	.loc 1 8279 0
	movq	-184(%rbp), %rax	# x, tmp595
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movq	8(%rax), %rax	# _363->fld[0].rtwint, D.29379
	cmpq	$63, %rax	#, D.29379
	jg	.L1420	#,
	.loc 1 8280 0
	movq	-184(%rbp), %rax	# x, tmp596
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movq	8(%rax), %rax	# _365->fld[0].rtwint, D.29379
	movl	$1, %edx	#, tmp597
	movl	%eax, %ecx	# D.29364, tmp679
	salq	%cl, %rdx	# tmp679, D.29379
	movq	%rdx, %rax	# D.29379, D.29379
	subq	$1, %rax	#, D.29379
	andq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 8281 0
	jmp	.L1396	#
.L1420:
	jmp	.L1396	#
.L1368:
	.loc 1 8288 0
	movq	-184(%rbp), %rax	# x, tmp598
	movzbl	3(%rax), %eax	# *x_37(D), D.29363
	andl	$16, %eax	#, D.29363
	testb	%al, %al	# D.29363
	je	.L1421	#,
	.loc 1 8288 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# x, tmp599
	movzbl	3(%rax), %eax	# *x_37(D), D.29363
	andl	$4, %eax	#, D.29363
	testb	%al, %al	# D.29363
	je	.L1421	#,
	.loc 1 8289 0 is_stmt 1
	movq	-184(%rbp), %rax	# x, tmp600
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movq	mode_mask_array(,%rax,8), %rbx	# mode_mask_array, D.29361
	.loc 1 8290 0
	movq	-184(%rbp), %rax	# x, tmp602
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %edx	# D.29363, D.29367
	movq	-184(%rbp), %rax	# x, tmp603
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movl	%edx, %esi	# D.29367,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	.loc 1 8289 0
	andq	%rbx, %rax	# D.29361, tmp604
	movq	%rax, -128(%rbp)	# tmp604, nonzero
.L1421:
	.loc 1 8295 0
	movq	-184(%rbp), %rax	# x, tmp605
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movzbl	2(%rax), %eax	# _384->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	movzwl	%ax, %edx	# D.29362, D.29364
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1018
	andl	$33554432, %eax	#, D.29364
	testl	%eax, %eax	# D.29364
	je	.L1422	#,
	.loc 1 8295 0 is_stmt 0 discriminator 1
	movl	$64, %eax	#, iftmp.1017
	jmp	.L1423	#
.L1422:
	.loc 1 8295 0 discriminator 2
	movl	$32, %eax	#, iftmp.1017
.L1423:
	.loc 1 8295 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.1017, D.29364
	jg	.L1424	#,
	.loc 1 8296 0 is_stmt 1
	movq	-184(%rbp), %rax	# x, tmp607
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movzbl	2(%rax), %eax	# _393->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	cmpw	$64, %ax	#, D.29362
	ja	.L1424	#,
	.loc 1 8299 0
	movq	-184(%rbp), %rax	# x, tmp609
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp610
	movl	%edx, %esi	# tmp610,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	andq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 8315 0
	movq	-184(%rbp), %rax	# x, tmp611
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29363
	.loc 1 8316 0
	movq	-184(%rbp), %rax	# x, tmp613
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movzbl	2(%rax), %eax	# _403->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29363
	.loc 1 8315 0
	cmpb	%al, %dl	# D.29363, D.29363
	jbe	.L1424	#,
	.loc 1 8317 0
	movq	-184(%rbp), %rax	# x, tmp615
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29361
	.loc 1 8318 0
	movq	-184(%rbp), %rax	# x, tmp617
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movzbl	2(%rax), %eax	# _410->mode, D.29363
	movzbl	%al, %eax	# D.29363, D.29364
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29361
	notq	%rax	# D.29361
	andq	%rdx, %rax	# D.29361, D.29361
	.loc 1 8317 0
	orq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 8321 0
	jmp	.L1396	#
.L1424:
	jmp	.L1396	#
.L1375:
	.loc 1 8333 0
	movq	-184(%rbp), %rax	# x, tmp619
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movzwl	(%rax), %eax	# _417->code, D.29362
	cmpw	$54, %ax	#, D.29362
	jne	.L1425	#,
	.loc 1 8334 0
	movq	-184(%rbp), %rax	# x, tmp620
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movq	8(%rax), %rax	# _419->fld[0].rtwint, D.29379
	testq	%rax, %rax	# D.29379
	js	.L1425	#,
	.loc 1 8335 0
	movq	-184(%rbp), %rax	# x, tmp621
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movq	8(%rax), %rax	# _421->fld[0].rtwint, D.29379
	cmpq	$63, %rax	#, D.29379
	jg	.L1425	#,
.LBB88:
	.loc 1 8337 0
	movq	-184(%rbp), %rax	# x, tmp622
	movzbl	2(%rax), %eax	# x_37(D)->mode, D.29363
	movzbl	%al, %eax	# D.29363, tmp623
	movl	%eax, -140(%rbp)	# tmp623, inner_mode
	.loc 1 8338 0
	movl	-140(%rbp), %eax	# inner_mode, inner_mode.1019
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29362
	movzwl	%ax, %eax	# D.29362, tmp625
	movl	%eax, -136(%rbp)	# tmp625, width
	.loc 1 8339 0
	movq	-184(%rbp), %rax	# x, tmp626
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movq	8(%rax), %rax	# _428->fld[0].rtwint, D.29379
	movl	%eax, -132(%rbp)	# D.29379, count
	.loc 1 8340 0
	movl	-140(%rbp), %eax	# inner_mode, inner_mode.1020
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, tmp628
	movq	%rax, -32(%rbp)	# tmp628, mode_mask
	.loc 1 8341 0
	movq	-184(%rbp), %rax	# x, tmp629
	movq	8(%rax), %rax	# x_37(D)->fld[0].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp630
	movl	%edx, %esi	# tmp630,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	movq	%rax, -24(%rbp)	# tmp631, op_nonzero
	.loc 1 8342 0
	movq	-32(%rbp), %rax	# mode_mask, tmp636
	movq	-24(%rbp), %rdx	# op_nonzero, tmp637
	andq	%rdx, %rax	# tmp637, tmp635
	movq	%rax, -96(%rbp)	# tmp635, inner
	.loc 1 8343 0
	movq	$0, -88(%rbp)	#, outer
	.loc 1 8345 0
	movl	-172(%rbp), %eax	# mode_width, tmp638
	cmpl	-136(%rbp), %eax	# width, tmp638
	jbe	.L1426	#,
	.loc 1 8346 0
	movq	-128(%rbp), %rax	# nonzero, tmp639
	movq	-24(%rbp), %rdx	# op_nonzero, tmp640
	andq	%rax, %rdx	# tmp639, D.29361
	movq	-32(%rbp), %rax	# mode_mask, tmp641
	notq	%rax	# D.29361
	andq	%rdx, %rax	# D.29361, tmp642
	movq	%rax, -88(%rbp)	# tmp642, outer
.L1426:
	.loc 1 8348 0
	cmpl	$90, -160(%rbp)	#, code
	jne	.L1427	#,
	.loc 1 8349 0
	movl	-132(%rbp), %eax	# count, tmp643
	movl	%eax, %ecx	# tmp643, tmp680
	shrq	%cl, -96(%rbp)	# tmp680, inner
	jmp	.L1428	#
.L1427:
	.loc 1 8350 0
	cmpl	$89, -160(%rbp)	#, code
	jne	.L1429	#,
	.loc 1 8352 0
	movl	-132(%rbp), %eax	# count, tmp644
	movl	%eax, %ecx	# tmp644, tmp681
	shrq	%cl, -96(%rbp)	# tmp681, inner
	.loc 1 8357 0
	movl	-132(%rbp), %eax	# count, count.1021
	movl	-136(%rbp), %edx	# width, tmp645
	subl	%eax, %edx	# count.1021, D.29366
	movl	%edx, %eax	# D.29366, D.29366
	subl	$1, %eax	#, D.29366
	movl	$1, %edx	#, tmp646
	movl	%eax, %ecx	# D.29364, tmp684
	salq	%cl, %rdx	# tmp684, D.29379
	movq	%rdx, %rax	# D.29379, D.29379
	andq	-96(%rbp), %rax	# inner, D.29361
	testq	%rax, %rax	# D.29361
	je	.L1428	#,
	.loc 1 8358 0
	movl	-132(%rbp), %eax	# count, tmp647
	movl	$1, %edx	#, tmp648
	movl	%eax, %ecx	# tmp647, tmp686
	salq	%cl, %rdx	# tmp686, D.29379
	movq	%rdx, %rax	# D.29379, D.29379
	leaq	-1(%rax), %rsi	#, D.29379
	movl	-132(%rbp), %eax	# count, count.1022
	movl	-136(%rbp), %edx	# width, tmp649
	subl	%eax, %edx	# count.1022, D.29366
	movl	%edx, %eax	# D.29366, D.29366
	movl	%eax, %ecx	# D.29364, tmp689
	salq	%cl, %rsi	# tmp689, D.29379
	movq	%rsi, %rax	# D.29379, D.29379
	orq	%rax, -96(%rbp)	# D.29361, inner
	jmp	.L1428	#
.L1429:
	.loc 1 8360 0
	cmpl	$87, -160(%rbp)	#, code
	jne	.L1431	#,
	.loc 1 8361 0
	movl	-132(%rbp), %eax	# count, tmp650
	movl	%eax, %ecx	# tmp650, tmp690
	salq	%cl, -96(%rbp)	# tmp690, inner
	jmp	.L1428	#
.L1431:
	.loc 1 8363 0
	movl	-132(%rbp), %eax	# count, count.1023
	movl	$0, %edx	#, tmp651
	divl	-136(%rbp)	# width
	movl	%edx, %eax	# tmp651, D.29366
	movq	-96(%rbp), %rdx	# inner, tmp653
	movq	%rdx, %rsi	# tmp653, D.29361
	movl	%eax, %ecx	# D.29364, tmp692
	salq	%cl, %rsi	# tmp692, D.29361
	.loc 1 8364 0
	movl	-132(%rbp), %eax	# count, count.1024
	movl	$0, %edx	#, tmp654
	divl	-136(%rbp)	# width
	movl	%edx, %eax	# tmp654, D.29366
	movl	-136(%rbp), %edx	# width, tmp656
	subl	%eax, %edx	# D.29366, D.29366
	movl	%edx, %eax	# D.29366, D.29366
	movq	-96(%rbp), %rdx	# inner, tmp657
	movl	%eax, %ecx	# D.29364, tmp695
	shrq	%cl, %rdx	# tmp695, D.29361
	movq	%rdx, %rax	# D.29361, D.29361
	orq	%rsi, %rax	# D.29361, D.29361
	.loc 1 8363 0
	andq	-32(%rbp), %rax	# mode_mask, tmp659
	movq	%rax, -96(%rbp)	# tmp659, inner
.L1428:
	.loc 1 8366 0
	movq	-96(%rbp), %rax	# inner, tmp660
	movq	-88(%rbp), %rdx	# outer, tmp661
	orq	%rdx, %rax	# tmp661, D.29361
	andq	%rax, -128(%rbp)	# D.29361, nonzero
.LBE88:
	.loc 1 8368 0
	jmp	.L1396	#
.L1425:
	jmp	.L1396	#
.L1381:
	.loc 1 8372 0
	movl	-172(%rbp), %eax	# mode_width, D.29361
	movq	%rax, %rdi	# D.29361,
	call	floor_log2_wide	#
	addl	$1, %eax	#, D.29364
	movl	$1, %edx	#, tmp662
	movl	%eax, %ecx	# D.29364, tmp697
	salq	%cl, %rdx	# tmp697, D.29379
	movq	%rdx, %rax	# D.29379, D.29379
	subq	$1, %rax	#, D.29379
	movq	%rax, -128(%rbp)	# D.29379, nonzero
	.loc 1 8373 0
	jmp	.L1396	#
.L1370:
	.loc 1 8376 0
	movq	-184(%rbp), %rax	# x, tmp663
	movq	16(%rax), %rax	# x_37(D)->fld[1].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp664
	movl	%edx, %esi	# tmp664,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	movq	%rax, %rbx	#, D.29361
	.loc 1 8377 0
	movq	-184(%rbp), %rax	# x, tmp665
	movq	24(%rax), %rax	# x_37(D)->fld[2].rtx, D.29368
	movl	-188(%rbp), %edx	# mode, tmp666
	movl	%edx, %esi	# tmp666,
	movq	%rax, %rdi	# D.29368,
	call	nonzero_bits	#
	orq	%rbx, %rax	# D.29361, D.29361
	.loc 1 8376 0
	andq	%rax, -128(%rbp)	# D.29361, nonzero
	.loc 1 8378 0
	jmp	.L1396	#
.L1432:
	.loc 1 8381 0
	nop
.L1396:
	.loc 1 8384 0
	movq	-128(%rbp), %rax	# nonzero, D.29361
.L1358:
	.loc 1 8385 0
	addq	$184, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE35:
	.size	nonzero_bits, .-nonzero_bits
	.type	num_sign_bit_copies, @function
num_sign_bit_copies:
.LFB36:
	.loc 1 8399 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -72(%rbp)	# x, x
	movl	%esi, -76(%rbp)	# mode, mode
	.loc 1 8400 0
	movq	-72(%rbp), %rax	# x, tmp409
	movzwl	(%rax), %eax	# x_17(D)->code, D.29382
	movzwl	%ax, %eax	# D.29382, tmp410
	movl	%eax, -44(%rbp)	# tmp410, code
	.loc 1 8410 0
	cmpl	$0, -76(%rbp)	#, mode
	jne	.L1434	#,
	.loc 1 8411 0
	movq	-72(%rbp), %rax	# x, tmp411
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	movzbl	%al, %eax	# D.29383, tmp412
	movl	%eax, -76(%rbp)	# tmp412, mode
.L1434:
	.loc 1 8413 0
	cmpl	$0, -76(%rbp)	#, mode
	je	.L1435	#,
	.loc 1 8413 0 is_stmt 0 discriminator 1
	movl	-76(%rbp), %eax	# mode, mode.1025
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29384
	cmpl	$2, %eax	#, D.29384
	je	.L1435	#,
	movl	-76(%rbp), %eax	# mode, mode.1026
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29384
	cmpl	$6, %eax	#, D.29384
	je	.L1435	#,
	movl	-76(%rbp), %eax	# mode, mode.1027
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29384
	cmpl	$8, %eax	#, D.29384
	je	.L1435	#,
	movq	-72(%rbp), %rax	# x, tmp416
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29384
	cmpl	$2, %eax	#, D.29384
	je	.L1435	#,
	movq	-72(%rbp), %rax	# x, tmp418
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29384
	cmpl	$6, %eax	#, D.29384
	je	.L1435	#,
	movq	-72(%rbp), %rax	# x, tmp420
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29384
	cmpl	$8, %eax	#, D.29384
	jne	.L1436	#,
.L1435:
	.loc 1 8414 0 is_stmt 1
	movl	$1, %eax	#, D.29381
	jmp	.L1437	#
.L1436:
	.loc 1 8416 0
	movl	-76(%rbp), %eax	# mode, mode.1028
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29382
	movzwl	%ax, %eax	# D.29382, tmp423
	movl	%eax, -40(%rbp)	# tmp423, bitwidth
	.loc 1 8419 0
	movq	-72(%rbp), %rax	# x, tmp424
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29382
	movzwl	%ax, %eax	# D.29382, D.29381
	cmpl	-40(%rbp), %eax	# bitwidth, D.29381
	jbe	.L1438	#,
	.loc 1 8421 0
	movq	-72(%rbp), %rax	# x, tmp426
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	movzbl	%al, %edx	# D.29383, D.29386
	movq	-72(%rbp), %rax	# x, tmp427
	movl	%edx, %esi	# D.29386,
	movq	%rax, %rdi	# tmp427,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8422 0
	movq	-72(%rbp), %rax	# x, tmp428
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29382
	movzwl	%ax, %eax	# D.29382, D.29381
	movl	-40(%rbp), %edx	# bitwidth, tmp430
	subl	%eax, %edx	# D.29381, D.29381
	movl	%edx, %eax	# D.29381, D.29381
	movl	%eax, %edx	# D.29381, D.29385
	movl	-52(%rbp), %eax	# num0, tmp431
	addl	%edx, %eax	# D.29385, D.29385
	movl	$1, %edx	#, tmp432
	testl	%eax, %eax	# D.29385
	cmovle	%edx, %eax	# D.29385,, tmp432, D.29385
	jmp	.L1437	#
.L1438:
	.loc 1 8426 0
	movq	-72(%rbp), %rax	# x, tmp433
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	testb	%al, %al	# D.29383
	je	.L1439	#,
	.loc 1 8426 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# x, tmp434
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29382
	movzwl	%ax, %eax	# D.29382, D.29381
	cmpl	-40(%rbp), %eax	# bitwidth, D.29381
	jae	.L1439	#,
	.loc 1 8432 0 is_stmt 1
	movl	$1, %eax	#, D.29381
	jmp	.L1437	#
.L1439:
	.loc 1 8446 0
	movl	-44(%rbp), %eax	# code, tmp437
	subl	$54, %eax	#, tmp436
	cmpl	$78, %eax	#, tmp436
	ja	.L1504	#,
	movl	%eax, %eax	# tmp436, tmp438
	movq	.L1442(,%rax,8), %rax	#, tmp439
	jmp	*%rax	# tmp439
	.section	.rodata
	.align 8
	.align 4
.L1442:
	.quad	.L1441
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1443
	.quad	.L1504
	.quad	.L1444
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1446
	.quad	.L1504
	.quad	.L1504
	.quad	.L1447
	.quad	.L1447
	.quad	.L1448
	.quad	.L1449
	.quad	.L1450
	.quad	.L1451
	.quad	.L1452
	.quad	.L1453
	.quad	.L1454
	.quad	.L1454
	.quad	.L1454
	.quad	.L1455
	.quad	.L1456
	.quad	.L1457
	.quad	.L1458
	.quad	.L1504
	.quad	.L1457
	.quad	.L1454
	.quad	.L1454
	.quad	.L1454
	.quad	.L1454
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1459
	.quad	.L1460
	.quad	.L1504
	.quad	.L1461
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1504
	.quad	.L1462
	.text
.L1443:
	.loc 1 8458 0
	movq	reg_last_set_value(%rip), %rdx	# reg_last_set_value, reg_last_set_value.1029
	movq	-72(%rbp), %rax	# x, tmp440
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	movl	%eax, %eax	# D.29381, D.29387
	salq	$3, %rax	#, D.29387
	addq	%rdx, %rax	# reg_last_set_value.1029, D.29388
	movq	(%rax), %rax	# *_68, D.29389
	testq	%rax, %rax	# D.29389
	je	.L1463	#,
	.loc 1 8459 0
	movq	reg_last_set_mode(%rip), %rdx	# reg_last_set_mode, reg_last_set_mode.1030
	movq	-72(%rbp), %rax	# x, tmp441
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	movl	%eax, %eax	# D.29381, D.29387
	salq	$2, %rax	#, D.29387
	addq	%rdx, %rax	# reg_last_set_mode.1030, D.29390
	movl	(%rax), %eax	# *_74, D.29386
	cmpl	-76(%rbp), %eax	# mode, D.29386
	jne	.L1463	#,
	.loc 1 8460 0
	movq	reg_last_set_label(%rip), %rdx	# reg_last_set_label, reg_last_set_label.1031
	movq	-72(%rbp), %rax	# x, tmp442
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	movl	%eax, %eax	# D.29381, D.29387
	salq	$2, %rax	#, D.29387
	addq	%rdx, %rax	# reg_last_set_label.1031, D.29391
	movl	(%rax), %edx	# *_80, D.29385
	movl	label_tick(%rip), %eax	# label_tick, label_tick.1032
	cmpl	%eax, %edx	# label_tick.1032, D.29385
	je	.L1464	#,
	.loc 1 8461 0
	movq	-72(%rbp), %rax	# x, tmp443
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	cmpl	$52, %eax	#, D.29381
	jbe	.L1463	#,
	.loc 1 8462 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.1033
	movq	-72(%rbp), %rdx	# x, tmp444
	movl	8(%rdx), %edx	# x_17(D)->fld[0].rtuint, D.29381
	movl	%edx, %edx	# D.29381, tmp445
	addq	$4, %rdx	#, tmp446
	movq	(%rax,%rdx,8), %rax	# reg_n_info.1033_84->data.reg, D.29392
	movl	12(%rax), %eax	# _86->sets, D.29385
	cmpl	$1, %eax	#, D.29385
	jne	.L1463	#,
	.loc 1 8463 0
	movq	-72(%rbp), %rax	# x, tmp447
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	movl	%eax, %edx	# D.29381, D.29385
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.1034
	movq	32(%rax), %rax	# basic_block_info.1034_90->data.bb, D.29393
	movq	64(%rax), %rax	# _91->global_live_at_start, D.29394
	movl	%edx, %esi	# D.29385,
	movq	%rax, %rdi	# D.29394,
	call	bitmap_bit_p	#
	testl	%eax, %eax	# D.29385
	jne	.L1463	#,
.L1464:
	.loc 1 8465 0
	movq	reg_last_set(%rip), %rdx	# reg_last_set, reg_last_set.1036
	movq	-72(%rbp), %rax	# x, tmp448
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	movl	%eax, %eax	# D.29381, D.29387
	salq	$3, %rax	#, D.29387
	addq	%rdx, %rax	# reg_last_set.1036, D.29388
	movq	(%rax), %rax	# *_98, D.29389
	movl	8(%rax), %edx	# _99->fld[0].rtint, D.29385
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1037
	cmpl	%eax, %edx	# max_uid_cuid.1037, D.29385
	jle	.L1465	#,
	.loc 1 8465 0 is_stmt 0 discriminator 1
	movq	reg_last_set(%rip), %rdx	# reg_last_set, reg_last_set.1038
	movq	-72(%rbp), %rax	# x, tmp449
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	movl	%eax, %eax	# D.29381, D.29387
	salq	$3, %rax	#, D.29387
	addq	%rdx, %rax	# reg_last_set.1038, D.29388
	movq	(%rax), %rax	# *_106, D.29389
	movq	%rax, %rdi	# D.29389,
	call	insn_cuid	#
	jmp	.L1466	#
.L1465:
	.loc 1 8465 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1039
	movq	reg_last_set(%rip), %rcx	# reg_last_set, reg_last_set.1040
	movq	-72(%rbp), %rax	# x, tmp450
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	movl	%eax, %eax	# D.29381, D.29387
	salq	$3, %rax	#, D.29387
	addq	%rcx, %rax	# reg_last_set.1040, D.29388
	movq	(%rax), %rax	# *_114, D.29389
	movl	8(%rax), %eax	# _115->fld[0].rtint, D.29385
	cltq
	salq	$2, %rax	#, D.29387
	addq	%rdx, %rax	# uid_cuid.1039, D.29391
	movl	(%rax), %eax	# *_119, iftmp.1035
.L1466:
	.loc 1 8465 0 discriminator 3
	movl	subst_low_cuid(%rip), %edx	# subst_low_cuid, subst_low_cuid.1041
	cmpl	%edx, %eax	# subst_low_cuid.1041, iftmp.1035
	jge	.L1463	#,
	.loc 1 8466 0 is_stmt 1
	movq	reg_last_set_sign_bit_copies(%rip), %rdx	# reg_last_set_sign_bit_copies, reg_last_set_sign_bit_copies.1042
	movq	-72(%rbp), %rax	# x, tmp451
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	movl	%eax, %eax	# D.29381, D.29395
	addq	%rdx, %rax	# reg_last_set_sign_bit_copies.1042, D.29396
	movzbl	(%rax), %eax	# *_125, D.29397
	movsbl	%al, %eax	# D.29397, D.29381
	jmp	.L1437	#
.L1463:
	.loc 1 8468 0
	movq	-72(%rbp), %rax	# x, tmp452
	movq	%rax, %rdi	# tmp452,
	call	get_last_value	#
	movq	%rax, -24(%rbp)	# tmp453, tem
	.loc 1 8469 0
	cmpq	$0, -24(%rbp)	#, tem
	je	.L1467	#,
	.loc 1 8470 0
	movl	-76(%rbp), %edx	# mode, tmp454
	movq	-24(%rbp), %rax	# tem, tmp455
	movl	%edx, %esi	# tmp454,
	movq	%rax, %rdi	# tmp455,
	call	num_sign_bit_copies	#
	jmp	.L1437	#
.L1467:
	.loc 1 8472 0
	movl	nonzero_sign_valid(%rip), %eax	# nonzero_sign_valid, nonzero_sign_valid.1043
	testl	%eax, %eax	# nonzero_sign_valid.1043
	je	.L1468	#,
	.loc 1 8472 0 is_stmt 0 discriminator 1
	movq	reg_sign_bit_copies(%rip), %rdx	# reg_sign_bit_copies, reg_sign_bit_copies.1044
	movq	-72(%rbp), %rax	# x, tmp456
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	movl	%eax, %eax	# D.29381, D.29395
	addq	%rdx, %rax	# reg_sign_bit_copies.1044, D.29398
	movzbl	(%rax), %eax	# *_134, D.29383
	testb	%al, %al	# D.29383
	je	.L1468	#,
	.loc 1 8473 0 is_stmt 1
	movq	-72(%rbp), %rax	# x, tmp457
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29382
	movzwl	%ax, %eax	# D.29382, D.29381
	cmpl	-40(%rbp), %eax	# bitwidth, D.29381
	jne	.L1468	#,
	.loc 1 8474 0
	movq	reg_sign_bit_copies(%rip), %rdx	# reg_sign_bit_copies, reg_sign_bit_copies.1045
	movq	-72(%rbp), %rax	# x, tmp459
	movl	8(%rax), %eax	# x_17(D)->fld[0].rtuint, D.29381
	movl	%eax, %eax	# D.29381, D.29395
	addq	%rdx, %rax	# reg_sign_bit_copies.1045, D.29398
	movzbl	(%rax), %eax	# *_143, D.29383
	movzbl	%al, %eax	# D.29383, D.29381
	jmp	.L1437	#
.L1468:
	.loc 1 8475 0
	jmp	.L1469	#
.L1441:
	.loc 1 8489 0
	movq	-72(%rbp), %rax	# x, tmp460
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtwint, D.29399
	movq	%rax, %rdx	# D.29399, D.29387
	movl	-76(%rbp), %eax	# mode, mode.1046
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29387
	andq	%rdx, %rax	# D.29387, tmp462
	movq	%rax, -32(%rbp)	# tmp462, nonzero
	.loc 1 8490 0
	cmpl	$64, -40(%rbp)	#, bitwidth
	ja	.L1470	#,
	.loc 1 8491 0
	movl	-40(%rbp), %eax	# bitwidth, tmp463
	subl	$1, %eax	#, D.29381
	movl	$1, %edx	#, tmp464
	movl	%eax, %ecx	# D.29385, tmp607
	salq	%cl, %rdx	# tmp607, D.29399
	movq	%rdx, %rax	# D.29399, D.29399
	andq	-32(%rbp), %rax	# nonzero, D.29387
	testq	%rax, %rax	# D.29387
	je	.L1470	#,
	.loc 1 8492 0
	movq	-32(%rbp), %rax	# nonzero, tmp465
	notq	%rax	# D.29387
	movq	%rax, %rdx	# D.29387, D.29387
	movl	-76(%rbp), %eax	# mode, mode.1047
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29387
	andq	%rdx, %rax	# D.29387, tmp467
	movq	%rax, -32(%rbp)	# tmp467, nonzero
.L1470:
	.loc 1 8494 0
	cmpq	$0, -32(%rbp)	#, nonzero
	je	.L1471	#,
	.loc 1 8494 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# nonzero, tmp468
	movq	%rax, %rdi	# tmp468,
	call	floor_log2_wide	#
	movl	-40(%rbp), %edx	# bitwidth, tmp469
	subl	%eax, %edx	# D.29381, D.29381
	movl	%edx, %eax	# D.29381, D.29381
	subl	$1, %eax	#, iftmp.1048
	jmp	.L1472	#
.L1471:
	.loc 1 8494 0 discriminator 2
	movl	-40(%rbp), %eax	# bitwidth, iftmp.1048
.L1472:
	.loc 1 8494 0 discriminator 3
	jmp	.L1437	#
.L1444:
	.loc 1 8501 0 is_stmt 1
	movq	-72(%rbp), %rax	# x, tmp470
	movzbl	3(%rax), %eax	# *x_17(D), D.29383
	andl	$16, %eax	#, D.29383
	testb	%al, %al	# D.29383
	je	.L1473	#,
	.loc 1 8501 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# x, tmp471
	movzbl	3(%rax), %eax	# *x_17(D), D.29383
	andl	$4, %eax	#, D.29383
	testb	%al, %al	# D.29383
	jne	.L1473	#,
	.loc 1 8503 0 is_stmt 1
	movq	-72(%rbp), %rax	# x, tmp472
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp473
	movl	%edx, %esi	# tmp473,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8504 0
	movl	-40(%rbp), %edx	# bitwidth, bitwidth.1049
	movq	-72(%rbp), %rax	# x, tmp474
	movzbl	2(%rax), %eax	# x_17(D)->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29382
	movzwl	%ax, %eax	# D.29382, D.29385
	subl	%eax, %edx	# D.29385, D.29385
	movl	%edx, %eax	# D.29385, D.29385
	leal	1(%rax), %edx	#, D.29385
	movl	-52(%rbp), %eax	# num0, tmp476
	cmpl	%eax, %edx	# tmp476, D.29385
	cmovge	%edx, %eax	# D.29385,, D.29385
	jmp	.L1437	#
.L1473:
	.loc 1 8510 0
	movq	-72(%rbp), %rax	# x, tmp477
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movzbl	2(%rax), %eax	# _182->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29382
	movzwl	%ax, %eax	# D.29382, D.29381
	cmpl	-40(%rbp), %eax	# bitwidth, D.29381
	jb	.L1474	#,
	.loc 1 8512 0
	movq	-72(%rbp), %rax	# x, tmp479
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8513 0
	movq	-72(%rbp), %rax	# x, tmp480
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movzbl	2(%rax), %eax	# _190->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29382
	movzwl	%ax, %eax	# D.29382, D.29381
	movl	-40(%rbp), %edx	# bitwidth, tmp482
	subl	%eax, %edx	# D.29381, D.29381
	movl	%edx, %eax	# D.29381, D.29381
	movl	%eax, %edx	# D.29381, D.29385
	movl	-52(%rbp), %eax	# num0, tmp483
	addl	%edx, %eax	# D.29385, D.29385
	movl	$1, %edx	#, tmp484
	testl	%eax, %eax	# D.29385
	cmovle	%edx, %eax	# D.29385,, tmp484, D.29385
	jmp	.L1437	#
.L1474:
	.loc 1 8536 0
	jmp	.L1469	#
.L1462:
	.loc 1 8539 0
	movq	-72(%rbp), %rax	# x, tmp485
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movzwl	(%rax), %eax	# _200->code, D.29382
	cmpw	$54, %ax	#, D.29382
	jne	.L1475	#,
	.loc 1 8540 0
	movl	-40(%rbp), %eax	# bitwidth, bitwidth.1050
	movslq	%eax, %rdx	# bitwidth.1050, D.29399
	movq	-72(%rbp), %rax	# x, tmp486
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movq	8(%rax), %rax	# _204->fld[0].rtwint, D.29399
	subq	%rax, %rdx	# D.29399, D.29399
	movq	%rdx, %rax	# D.29399, D.29399
	movl	$1, %edx	#, tmp487
	testq	%rax, %rax	# D.29399
	cmovle	%rdx, %rax	# D.29399,, tmp487, D.29399
	jmp	.L1437	#
.L1475:
	.loc 1 8541 0
	jmp	.L1469	#
.L1460:
	.loc 1 8544 0
	movq	-72(%rbp), %rax	# x, tmp488
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movzbl	2(%rax), %eax	# _209->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29382
	movzwl	%ax, %eax	# D.29382, D.29381
	movl	-40(%rbp), %edx	# bitwidth, tmp490
	movl	%edx, %ebx	# tmp490, D.29381
	subl	%eax, %ebx	# D.29381, D.29381
	.loc 1 8545 0
	movq	-72(%rbp), %rax	# x, tmp491
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	.loc 1 8544 0
	addl	%ebx, %eax	# D.29381, D.29381
	jmp	.L1437	#
.L1461:
	.loc 1 8549 0
	movq	-72(%rbp), %rax	# x, tmp492
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8550 0
	movq	-72(%rbp), %rax	# x, tmp493
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movzbl	2(%rax), %eax	# _221->mode, D.29383
	movzbl	%al, %eax	# D.29383, D.29385
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29382
	movzwl	%ax, %eax	# D.29382, D.29381
	movl	-40(%rbp), %edx	# bitwidth, tmp495
	subl	%eax, %edx	# D.29381, D.29381
	movl	%edx, %eax	# D.29381, D.29381
	movl	%eax, %edx	# D.29381, D.29385
	movl	-52(%rbp), %eax	# num0, tmp496
	addl	%edx, %eax	# D.29385, D.29385
	movl	$1, %edx	#, tmp497
	testl	%eax, %eax	# D.29385
	cmovle	%edx, %eax	# D.29385,, tmp497, D.29385
	jmp	.L1437	#
.L1455:
	.loc 1 8554 0
	movq	-72(%rbp), %rax	# x, tmp498
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp499
	movl	%edx, %esi	# tmp499,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	jmp	.L1437	#
.L1457:
	.loc 1 8560 0
	movq	-72(%rbp), %rax	# x, tmp500
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movzwl	(%rax), %eax	# _233->code, D.29382
	cmpw	$54, %ax	#, D.29382
	jne	.L1476	#,
	.loc 1 8561 0
	movq	-72(%rbp), %rax	# x, tmp501
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movq	8(%rax), %rax	# _235->fld[0].rtwint, D.29399
	testq	%rax, %rax	# D.29399
	js	.L1476	#,
	.loc 1 8562 0
	movq	-72(%rbp), %rax	# x, tmp502
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movq	8(%rax), %rdx	# _237->fld[0].rtwint, D.29399
	movl	-40(%rbp), %eax	# bitwidth, bitwidth.1051
	cltq
	cmpq	%rax, %rdx	# D.29399, D.29399
	jge	.L1476	#,
	.loc 1 8564 0
	movq	-72(%rbp), %rax	# x, tmp503
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp504
	movl	%edx, %esi	# tmp504,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8565 0
	movl	-52(%rbp), %eax	# num0, tmp505
	movslq	%eax, %rdx	# tmp505, D.29399
	cmpl	$88, -44(%rbp)	#, code
	jne	.L1477	#,
	.loc 1 8565 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# x, tmp506
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movq	8(%rax), %rax	# _245->fld[0].rtwint, iftmp.1052
	jmp	.L1478	#
.L1477:
	.loc 1 8565 0 discriminator 2
	movl	-40(%rbp), %eax	# bitwidth, bitwidth.1053
	movslq	%eax, %rcx	# bitwidth.1053, D.29399
	movq	-72(%rbp), %rax	# x, tmp507
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movq	8(%rax), %rax	# _249->fld[0].rtwint, D.29399
	subq	%rax, %rcx	# D.29399, iftmp.1052
	movq	%rcx, %rax	# iftmp.1052, iftmp.1052
.L1478:
	.loc 1 8565 0 discriminator 3
	subq	%rax, %rdx	# iftmp.1052, D.29399
	movq	%rdx, %rax	# D.29399, D.29399
	movl	$1, %edx	#, tmp508
	testq	%rax, %rax	# D.29399
	cmovle	%rdx, %rax	# D.29399,, tmp508, D.29399
	jmp	.L1437	#
.L1476:
	.loc 1 8568 0 is_stmt 1
	jmp	.L1469	#
.L1448:
	.loc 1 8575 0
	movq	-72(%rbp), %rax	# x, tmp509
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp510
	movl	%edx, %esi	# tmp510,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8576 0
	cmpl	$64, -40(%rbp)	#, bitwidth
	jbe	.L1479	#,
	.loc 1 8577 0
	cmpl	$1, -52(%rbp)	#, num0
	jle	.L1480	#,
	.loc 1 8577 0 is_stmt 0 discriminator 1
	movl	-52(%rbp), %eax	# num0, tmp511
	subl	$1, %eax	#, D.29385
	jmp	.L1481	#
.L1480:
	.loc 1 8577 0 discriminator 2
	movl	$1, %eax	#, iftmp.1054
.L1481:
	.loc 1 8577 0 discriminator 3
	jmp	.L1437	#
.L1479:
	.loc 1 8579 0 is_stmt 1
	movq	-72(%rbp), %rax	# x, tmp512
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp513
	movl	%edx, %esi	# tmp513,
	movq	%rax, %rdi	# D.29389,
	call	nonzero_bits	#
	movq	%rax, -32(%rbp)	# tmp514, nonzero
	.loc 1 8580 0
	cmpq	$1, -32(%rbp)	#, nonzero
	jne	.L1482	#,
	.loc 1 8581 0
	movl	-40(%rbp), %eax	# bitwidth, D.29381
	jmp	.L1437	#
.L1482:
	.loc 1 8583 0
	cmpl	$1, -52(%rbp)	#, num0
	jle	.L1483	#,
	.loc 1 8584 0
	movl	-40(%rbp), %eax	# bitwidth, tmp515
	subl	$1, %eax	#, D.29381
	movl	$1, %edx	#, tmp516
	movl	%eax, %ecx	# D.29385, tmp618
	salq	%cl, %rdx	# tmp618, D.29399
	movq	%rdx, %rax	# D.29399, D.29399
	andq	-32(%rbp), %rax	# nonzero, D.29387
	testq	%rax, %rax	# D.29387
	je	.L1483	#,
	.loc 1 8585 0
	subl	$1, -52(%rbp)	#, num0
.L1483:
	.loc 1 8587 0
	movl	-52(%rbp), %eax	# num0, D.29381
	jmp	.L1437	#
.L1454:
	.loc 1 8593 0
	movq	-72(%rbp), %rax	# x, tmp517
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp518
	movl	%edx, %esi	# tmp518,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8594 0
	movq	-72(%rbp), %rax	# x, tmp519
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp520
	movl	%edx, %esi	# tmp520,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -36(%rbp)	# D.29381, num1
	.loc 1 8595 0
	movl	-52(%rbp), %eax	# num0, tmp521
	cmpl	%eax, -36(%rbp)	# tmp521, num1
	cmovle	-36(%rbp), %eax	# num1,, D.29385
	jmp	.L1437	#
.L1447:
	.loc 1 8603 0
	cmpl	$75, -44(%rbp)	#, code
	jne	.L1484	#,
	.loc 1 8603 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# x, tmp522
	movq	16(%rax), %rdx	# x_17(D)->fld[1].rtx, D.29389
	movq	const_int_rtx+504(%rip), %rax	# const_int_rtx, D.29389
	cmpq	%rax, %rdx	# D.29389, D.29389
	jne	.L1484	#,
	.loc 1 8604 0 is_stmt 1
	cmpl	$64, -40(%rbp)	#, bitwidth
	ja	.L1484	#,
	.loc 1 8606 0
	movq	-72(%rbp), %rax	# x, tmp523
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp524
	movl	%edx, %esi	# tmp524,
	movq	%rax, %rdi	# D.29389,
	call	nonzero_bits	#
	movq	%rax, -32(%rbp)	# tmp525, nonzero
	.loc 1 8607 0
	movl	-40(%rbp), %eax	# bitwidth, tmp526
	subl	$1, %eax	#, D.29381
	movl	$1, %edx	#, tmp527
	movl	%eax, %ecx	# D.29385, tmp620
	salq	%cl, %rdx	# tmp620, D.29399
	movq	%rdx, %rax	# D.29399, D.29399
	andq	-32(%rbp), %rax	# nonzero, D.29387
	testq	%rax, %rax	# D.29387
	jne	.L1484	#,
	.loc 1 8609 0
	cmpq	$1, -32(%rbp)	#, nonzero
	je	.L1485	#,
	.loc 1 8608 0
	cmpq	$0, -32(%rbp)	#, nonzero
	je	.L1485	#,
	.loc 1 8609 0
	movq	-32(%rbp), %rax	# nonzero, tmp528
	movq	%rax, %rdi	# tmp528,
	call	floor_log2_wide	#
	movl	-40(%rbp), %edx	# bitwidth, tmp529
	subl	%eax, %edx	# D.29381, D.29381
	movl	%edx, %eax	# D.29381, D.29381
	subl	$1, %eax	#, iftmp.1055
	jmp	.L1486	#
.L1485:
	.loc 1 8609 0 is_stmt 0 discriminator 1
	movl	-40(%rbp), %eax	# bitwidth, iftmp.1055
.L1486:
	.loc 1 8608 0 is_stmt 1
	jmp	.L1437	#
.L1484:
	.loc 1 8612 0
	movq	-72(%rbp), %rax	# x, tmp530
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp531
	movl	%edx, %esi	# tmp531,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8613 0
	movq	-72(%rbp), %rax	# x, tmp532
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp533
	movl	%edx, %esi	# tmp533,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -36(%rbp)	# D.29381, num1
	.loc 1 8614 0
	movl	-52(%rbp), %eax	# num0, tmp534
	cmpl	%eax, -36(%rbp)	# tmp534, num1
	cmovle	-36(%rbp), %eax	# num1,, D.29385
	subl	$1, %eax	#, D.29385
	movl	$1, %edx	#, tmp536
	testl	%eax, %eax	# D.29385
	cmovle	%edx, %eax	# D.29385,, tmp536, tmp535
	movl	%eax, -48(%rbp)	# tmp535, result
	.loc 1 8627 0
	movl	-48(%rbp), %eax	# result, D.29381
	jmp	.L1437	#
.L1449:
	.loc 1 8635 0
	movq	-72(%rbp), %rax	# x, tmp537
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp538
	movl	%edx, %esi	# tmp538,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8636 0
	movq	-72(%rbp), %rax	# x, tmp539
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp540
	movl	%edx, %esi	# tmp540,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -36(%rbp)	# D.29381, num1
	.loc 1 8638 0
	movl	-52(%rbp), %eax	# num0, num0.1056
	subl	-40(%rbp), %eax	# bitwidth, D.29381
	movl	%eax, %edx	# D.29381, D.29381
	movl	-40(%rbp), %eax	# bitwidth, tmp541
	addl	%eax, %edx	# tmp541, D.29381
	movl	-36(%rbp), %eax	# num1, num1.1057
	subl	-40(%rbp), %eax	# bitwidth, D.29381
	addl	%edx, %eax	# D.29381, D.29381
	movl	%eax, -48(%rbp)	# D.29381, result
	.loc 1 8639 0
	cmpl	$0, -48(%rbp)	#, result
	jle	.L1487	#,
	.loc 1 8640 0
	cmpl	$64, -40(%rbp)	#, bitwidth
	ja	.L1488	#,
	.loc 1 8641 0
	movq	-72(%rbp), %rax	# x, tmp542
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp543
	movl	%edx, %esi	# tmp543,
	movq	%rax, %rdi	# D.29389,
	call	nonzero_bits	#
	.loc 1 8642 0
	movl	-40(%rbp), %edx	# bitwidth, tmp544
	subl	$1, %edx	#, D.29381
	movl	$1, %esi	#, tmp545
	movl	%edx, %ecx	# D.29385, tmp624
	salq	%cl, %rsi	# tmp624, D.29399
	movq	%rsi, %rdx	# D.29399, D.29399
	andq	%rdx, %rax	# D.29387, D.29387
	.loc 1 8641 0
	testq	%rax, %rax	# D.29387
	je	.L1487	#,
	.loc 1 8643 0
	movq	-72(%rbp), %rax	# x, tmp546
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp547
	movl	%edx, %esi	# tmp547,
	movq	%rax, %rdi	# D.29389,
	call	nonzero_bits	#
	.loc 1 8644 0
	movl	-40(%rbp), %edx	# bitwidth, tmp548
	subl	$1, %edx	#, D.29381
	movl	$1, %esi	#, tmp549
	movl	%edx, %ecx	# D.29385, tmp626
	salq	%cl, %rsi	# tmp626, D.29399
	movq	%rsi, %rdx	# D.29399, D.29399
	andq	%rdx, %rax	# D.29387, D.29387
	.loc 1 8643 0
	testq	%rax, %rax	# D.29387
	je	.L1487	#,
.L1488:
	.loc 1 8645 0
	subl	$1, -48(%rbp)	#, result
.L1487:
	.loc 1 8647 0
	movl	$1, %eax	#, tmp550
	cmpl	$0, -48(%rbp)	#, result
	cmovg	-48(%rbp), %eax	# result,, D.29385
	jmp	.L1437	#
.L1452:
	.loc 1 8653 0
	cmpl	$64, -40(%rbp)	#, bitwidth
	jbe	.L1489	#,
	.loc 1 8654 0
	movl	$1, %eax	#, D.29381
	jmp	.L1437	#
.L1489:
	.loc 1 8655 0
	movq	-72(%rbp), %rax	# x, tmp551
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp552
	movl	%edx, %esi	# tmp552,
	movq	%rax, %rdi	# D.29389,
	call	nonzero_bits	#
	.loc 1 8656 0
	movl	-40(%rbp), %edx	# bitwidth, tmp553
	subl	$1, %edx	#, D.29381
	movl	$1, %esi	#, tmp554
	movl	%edx, %ecx	# D.29385, tmp628
	salq	%cl, %rsi	# tmp628, D.29399
	movq	%rsi, %rdx	# D.29399, D.29399
	andq	%rdx, %rax	# D.29387, D.29387
	.loc 1 8655 0
	testq	%rax, %rax	# D.29387
	je	.L1490	#,
	.loc 1 8657 0
	movl	$1, %eax	#, D.29381
	jmp	.L1437	#
.L1490:
	.loc 1 8659 0
	movq	-72(%rbp), %rax	# x, tmp555
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp556
	movl	%edx, %esi	# tmp556,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	jmp	.L1437	#
.L1453:
	.loc 1 8663 0
	movq	-72(%rbp), %rax	# x, tmp557
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp558
	movl	%edx, %esi	# tmp558,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	jmp	.L1437	#
.L1450:
	.loc 1 8669 0
	movq	-72(%rbp), %rax	# x, tmp559
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp560
	movl	%edx, %esi	# tmp560,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -48(%rbp)	# D.29381, result
	.loc 1 8670 0
	cmpl	$1, -48(%rbp)	#, result
	jle	.L1491	#,
	.loc 1 8671 0
	cmpl	$64, -40(%rbp)	#, bitwidth
	ja	.L1492	#,
	.loc 1 8672 0
	movq	-72(%rbp), %rax	# x, tmp561
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp562
	movl	%edx, %esi	# tmp562,
	movq	%rax, %rdi	# D.29389,
	call	nonzero_bits	#
	.loc 1 8673 0
	movl	-40(%rbp), %edx	# bitwidth, tmp563
	subl	$1, %edx	#, D.29381
	movl	$1, %esi	#, tmp564
	movl	%edx, %ecx	# D.29385, tmp630
	salq	%cl, %rsi	# tmp630, D.29399
	movq	%rsi, %rdx	# D.29399, D.29399
	andq	%rdx, %rax	# D.29387, D.29387
	.loc 1 8672 0
	testq	%rax, %rax	# D.29387
	je	.L1491	#,
.L1492:
	.loc 1 8674 0
	subl	$1, -48(%rbp)	#, result
.L1491:
	.loc 1 8676 0
	movl	-48(%rbp), %eax	# result, D.29381
	jmp	.L1437	#
.L1451:
	.loc 1 8679 0
	movq	-72(%rbp), %rax	# x, tmp565
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp566
	movl	%edx, %esi	# tmp566,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -48(%rbp)	# D.29381, result
	.loc 1 8680 0
	cmpl	$1, -48(%rbp)	#, result
	jle	.L1493	#,
	.loc 1 8681 0
	cmpl	$64, -40(%rbp)	#, bitwidth
	ja	.L1494	#,
	.loc 1 8682 0
	movq	-72(%rbp), %rax	# x, tmp567
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp568
	movl	%edx, %esi	# tmp568,
	movq	%rax, %rdi	# D.29389,
	call	nonzero_bits	#
	.loc 1 8683 0
	movl	-40(%rbp), %edx	# bitwidth, tmp569
	subl	$1, %edx	#, D.29381
	movl	$1, %esi	#, tmp570
	movl	%edx, %ecx	# D.29385, tmp632
	salq	%cl, %rsi	# tmp632, D.29399
	movq	%rsi, %rdx	# D.29399, D.29399
	andq	%rdx, %rax	# D.29387, D.29387
	.loc 1 8682 0
	testq	%rax, %rax	# D.29387
	je	.L1493	#,
.L1494:
	.loc 1 8684 0
	subl	$1, -48(%rbp)	#, result
.L1493:
	.loc 1 8686 0
	movl	-48(%rbp), %eax	# result, D.29381
	jmp	.L1437	#
.L1458:
	.loc 1 8691 0
	movq	-72(%rbp), %rax	# x, tmp571
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp572
	movl	%edx, %esi	# tmp572,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8692 0
	movq	-72(%rbp), %rax	# x, tmp573
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movzwl	(%rax), %eax	# _375->code, D.29382
	cmpw	$54, %ax	#, D.29382
	jne	.L1495	#,
	.loc 1 8693 0
	movq	-72(%rbp), %rax	# x, tmp574
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movq	8(%rax), %rax	# _377->fld[0].rtwint, D.29399
	testq	%rax, %rax	# D.29399
	jle	.L1495	#,
	.loc 1 8694 0
	movl	-52(%rbp), %eax	# num0, tmp575
	movslq	%eax, %rdx	# tmp575, D.29399
	movq	-72(%rbp), %rax	# x, tmp576
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movq	8(%rax), %rax	# _380->fld[0].rtwint, D.29399
	addq	%rax, %rdx	# D.29399, D.29399
	movl	-40(%rbp), %eax	# bitwidth, bitwidth.1058
	cltq
	cmpq	%rax, %rdx	# D.29399, D.29399
	cmovle	%rdx, %rax	# D.29399,, D.29399
	movl	%eax, -52(%rbp)	# D.29399, num0
.L1495:
	.loc 1 8696 0
	movl	-52(%rbp), %eax	# num0, D.29381
	jmp	.L1437	#
.L1456:
	.loc 1 8700 0
	movq	-72(%rbp), %rax	# x, tmp577
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movzwl	(%rax), %eax	# _388->code, D.29382
	cmpw	$54, %ax	#, D.29382
	jne	.L1496	#,
	.loc 1 8701 0
	movq	-72(%rbp), %rax	# x, tmp578
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movq	8(%rax), %rax	# _390->fld[0].rtwint, D.29399
	testq	%rax, %rax	# D.29399
	js	.L1496	#,
	.loc 1 8702 0
	movq	-72(%rbp), %rax	# x, tmp579
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movq	8(%rax), %rdx	# _392->fld[0].rtwint, D.29399
	movl	-40(%rbp), %eax	# bitwidth, bitwidth.1059
	cltq
	cmpq	%rax, %rdx	# D.29399, D.29399
	jl	.L1497	#,
.L1496:
	.loc 1 8703 0
	movl	$1, %eax	#, D.29381
	jmp	.L1437	#
.L1497:
	.loc 1 8705 0
	movq	-72(%rbp), %rax	# x, tmp580
	movq	8(%rax), %rax	# x_17(D)->fld[0].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp581
	movl	%edx, %esi	# tmp581,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8706 0
	movl	-52(%rbp), %eax	# num0, tmp582
	movslq	%eax, %rdx	# tmp582, D.29399
	movq	-72(%rbp), %rax	# x, tmp583
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movq	8(%rax), %rax	# _400->fld[0].rtwint, D.29399
	subq	%rax, %rdx	# D.29399, D.29399
	movq	%rdx, %rax	# D.29399, D.29399
	movl	$1, %edx	#, tmp584
	testq	%rax, %rax	# D.29399
	cmovle	%rdx, %rax	# D.29399,, tmp584, D.29399
	jmp	.L1437	#
.L1446:
	.loc 1 8709 0
	movq	-72(%rbp), %rax	# x, tmp585
	movq	16(%rax), %rax	# x_17(D)->fld[1].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp586
	movl	%edx, %esi	# tmp586,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -52(%rbp)	# D.29381, num0
	.loc 1 8710 0
	movq	-72(%rbp), %rax	# x, tmp587
	movq	24(%rax), %rax	# x_17(D)->fld[2].rtx, D.29389
	movl	-76(%rbp), %edx	# mode, tmp588
	movl	%edx, %esi	# tmp588,
	movq	%rax, %rdi	# D.29389,
	call	num_sign_bit_copies	#
	movl	%eax, -36(%rbp)	# D.29381, num1
	.loc 1 8711 0
	movl	-52(%rbp), %eax	# num0, tmp589
	cmpl	%eax, -36(%rbp)	# tmp589, num1
	cmovle	-36(%rbp), %eax	# num1,, D.29385
	jmp	.L1437	#
.L1459:
	.loc 1 8719 0
	movq	$1, -32(%rbp)	#, nonzero
	.loc 1 8720 0
	cmpl	$64, -40(%rbp)	#, bitwidth
	ja	.L1498	#,
	.loc 1 8721 0
	movl	-40(%rbp), %eax	# bitwidth, tmp590
	subl	$1, %eax	#, D.29381
	movl	$1, %edx	#, tmp591
	movl	%eax, %ecx	# D.29385, tmp635
	salq	%cl, %rdx	# tmp635, D.29399
	movq	%rdx, %rax	# D.29399, D.29399
	andq	-32(%rbp), %rax	# nonzero, D.29387
	testq	%rax, %rax	# D.29387
	je	.L1498	#,
	.loc 1 8722 0
	movq	-32(%rbp), %rax	# nonzero, tmp592
	notq	%rax	# D.29387
	movq	%rax, %rdx	# D.29387, D.29387
	movl	-76(%rbp), %eax	# mode, mode.1060
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29387
	andq	%rdx, %rax	# D.29387, tmp594
	movq	%rax, -32(%rbp)	# tmp594, nonzero
.L1498:
	.loc 1 8724 0
	cmpq	$0, -32(%rbp)	#, nonzero
	je	.L1499	#,
	.loc 1 8724 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# nonzero, tmp595
	movq	%rax, %rdi	# tmp595,
	call	floor_log2_wide	#
	movl	-40(%rbp), %edx	# bitwidth, tmp596
	subl	%eax, %edx	# D.29381, D.29381
	movl	%edx, %eax	# D.29381, D.29381
	subl	$1, %eax	#, iftmp.1061
	jmp	.L1500	#
.L1499:
	.loc 1 8724 0 discriminator 2
	movl	-40(%rbp), %eax	# bitwidth, iftmp.1061
.L1500:
	.loc 1 8724 0 discriminator 3
	jmp	.L1437	#
.L1504:
	.loc 1 8728 0 is_stmt 1
	nop
.L1469:
	.loc 1 8736 0
	cmpl	$64, -40(%rbp)	#, bitwidth
	jbe	.L1501	#,
	.loc 1 8737 0
	movl	$1, %eax	#, D.29381
	jmp	.L1437	#
.L1501:
	.loc 1 8739 0
	movl	-76(%rbp), %edx	# mode, tmp597
	movq	-72(%rbp), %rax	# x, tmp598
	movl	%edx, %esi	# tmp597,
	movq	%rax, %rdi	# tmp598,
	call	nonzero_bits	#
	movq	%rax, -32(%rbp)	# tmp599, nonzero
	.loc 1 8740 0
	movl	-40(%rbp), %eax	# bitwidth, tmp600
	subl	$1, %eax	#, D.29381
	movl	$1, %edx	#, tmp601
	movl	%eax, %ecx	# D.29385, tmp639
	salq	%cl, %rdx	# tmp639, D.29399
	movq	%rdx, %rax	# D.29399, D.29399
	andq	-32(%rbp), %rax	# nonzero, D.29387
	.loc 1 8741 0
	testq	%rax, %rax	# D.29387
	jne	.L1502	#,
	.loc 1 8741 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# nonzero, tmp602
	movq	%rax, %rdi	# tmp602,
	call	floor_log2_wide	#
	movl	-40(%rbp), %edx	# bitwidth, tmp603
	subl	%eax, %edx	# D.29381, D.29381
	movl	%edx, %eax	# D.29381, D.29381
	subl	$1, %eax	#, iftmp.1062
	jmp	.L1503	#
.L1502:
	.loc 1 8741 0 discriminator 2
	movl	$1, %eax	#, iftmp.1062
.L1503:
.L1437:
	.loc 1 8742 0 is_stmt 1
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE36:
	.size	num_sign_bit_copies, .-num_sign_bit_copies
	.globl	extended_count
	.type	extended_count, @function
extended_count:
.LFB37:
	.loc 1 8760 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# x, x
	movl	%esi, -28(%rbp)	# mode, mode
	movl	%edx, -32(%rbp)	# unsignedp, unsignedp
	.loc 1 8761 0
	movl	nonzero_sign_valid(%rip), %eax	# nonzero_sign_valid, nonzero_sign_valid.1063
	testl	%eax, %eax	# nonzero_sign_valid.1063
	jne	.L1506	#,
	.loc 1 8762 0
	movl	$0, %eax	#, D.29402
	jmp	.L1507	#
.L1506:
	.loc 1 8769 0
	cmpl	$0, -32(%rbp)	#, unsignedp
	je	.L1508	#,
	.loc 1 8765 0 discriminator 1
	movl	-28(%rbp), %eax	# mode, mode.1066
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29403
	.loc 1 8769 0 discriminator 1
	cmpw	$64, %ax	#, D.29403
	ja	.L1509	#,
	.loc 1 8766 0
	movl	-28(%rbp), %eax	# mode, mode.1067
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29403
	movzwl	%ax, %eax	# D.29403, D.29404
	leal	-1(%rax), %ebx	#, D.29404
	.loc 1 8767 0
	movl	-28(%rbp), %edx	# mode, tmp76
	movq	-24(%rbp), %rax	# x, tmp77
	movl	%edx, %esi	# tmp76,
	movq	%rax, %rdi	# tmp77,
	call	nonzero_bits	#
	movq	%rax, %rdi	# D.29405,
	call	floor_log2_wide	#
	subl	%eax, %ebx	# D.29404, D.29404
	movl	%ebx, %eax	# D.29404, D.29404
	jmp	.L1511	#
.L1509:
	.loc 1 8769 0 discriminator 3
	movl	$0, %eax	#, iftmp.1065
	jmp	.L1507	#
.L1508:
	.loc 1 8769 0 is_stmt 0 discriminator 2
	movl	-28(%rbp), %edx	# mode, tmp78
	movq	-24(%rbp), %rax	# x, tmp79
	movl	%edx, %esi	# tmp78,
	movq	%rax, %rdi	# tmp79,
	call	num_sign_bit_copies	#
	subl	$1, %eax	#, iftmp.1064
.L1511:
.L1507:
	.loc 1 8770 0 is_stmt 1
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE37:
	.size	extended_count, .-extended_count
	.type	merge_outer_ops, @function
merge_outer_ops:
.LFB38:
	.loc 1 8801 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -24(%rbp)	# pop0, pop0
	movq	%rsi, -32(%rbp)	# pconst0, pconst0
	movl	%edx, -36(%rbp)	# op1, op1
	movq	%rcx, -48(%rbp)	# const1, const1
	movl	%r8d, -40(%rbp)	# mode, mode
	movq	%r9, -56(%rbp)	# pcomp_p, pcomp_p
	.loc 1 8802 0
	movq	-24(%rbp), %rax	# pop0, tmp77
	movl	(%rax), %eax	# *pop0_11(D), tmp78
	movl	%eax, -12(%rbp)	# tmp78, op0
	.loc 1 8803 0
	movq	-32(%rbp), %rax	# pconst0, tmp79
	movq	(%rax), %rax	# *pconst0_13(D), tmp80
	movq	%rax, -8(%rbp)	# tmp80, const0
	.loc 1 8805 0
	movl	-40(%rbp), %eax	# mode, mode.1068
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29407
	movq	-8(%rbp), %rax	# const0, const0.1069
	andq	%rdx, %rax	# D.29407, D.29407
	movq	%rax, -8(%rbp)	# D.29407, const0
	.loc 1 8806 0
	movl	-40(%rbp), %eax	# mode, mode.1070
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29407
	movq	-48(%rbp), %rax	# const1, const1.1071
	andq	%rdx, %rax	# D.29407, D.29407
	movq	%rax, -48(%rbp)	# D.29407, const1
	.loc 1 8809 0
	cmpl	$83, -12(%rbp)	#, op0
	jne	.L1513	#,
	.loc 1 8810 0
	movq	-8(%rbp), %rax	# const0, tmp83
	andq	%rax, -48(%rbp)	# tmp83, const1
.L1513:
	.loc 1 8815 0
	cmpl	$1, -36(%rbp)	#, op1
	je	.L1514	#,
	.loc 1 8815 0 is_stmt 0 discriminator 1
	cmpl	$47, -12(%rbp)	#, op0
	jne	.L1515	#,
.L1514:
	.loc 1 8816 0 is_stmt 1
	movl	$1, %eax	#, D.29406
	jmp	.L1516	#
.L1515:
	.loc 1 8818 0
	cmpl	$1, -12(%rbp)	#, op0
	jne	.L1517	#,
	.loc 1 8819 0
	movl	-36(%rbp), %eax	# op1, tmp84
	movl	%eax, -12(%rbp)	# tmp84, op0
	movq	-48(%rbp), %rax	# const1, tmp85
	movq	%rax, -8(%rbp)	# tmp85, const0
	jmp	.L1518	#
.L1517:
	.loc 1 8821 0
	movl	-12(%rbp), %eax	# op0, tmp86
	cmpl	-36(%rbp), %eax	# op1, tmp86
	jne	.L1519	#,
	.loc 1 8823 0
	movl	-12(%rbp), %eax	# op0, tmp88
	subl	$75, %eax	#, tmp87
	cmpl	$10, %eax	#, tmp87
	ja	.L1544	#,
	movl	%eax, %eax	# tmp87, tmp89
	movq	.L1522(,%rax,8), %rax	#, tmp90
	jmp	*%rax	# tmp90
	.section	.rodata
	.align 8
	.align 4
.L1522:
	.quad	.L1521
	.quad	.L1544
	.quad	.L1523
	.quad	.L1544
	.quad	.L1544
	.quad	.L1544
	.quad	.L1544
	.quad	.L1544
	.quad	.L1524
	.quad	.L1525
	.quad	.L1526
	.text
.L1524:
	.loc 1 8826 0
	movq	-48(%rbp), %rax	# const1, tmp91
	andq	%rax, -8(%rbp)	# tmp91, const0
	.loc 1 8827 0
	jmp	.L1527	#
.L1525:
	.loc 1 8829 0
	movq	-48(%rbp), %rax	# const1, tmp92
	orq	%rax, -8(%rbp)	# tmp92, const0
	.loc 1 8830 0
	jmp	.L1527	#
.L1526:
	.loc 1 8832 0
	movq	-48(%rbp), %rax	# const1, tmp93
	xorq	%rax, -8(%rbp)	# tmp93, const0
	.loc 1 8833 0
	jmp	.L1527	#
.L1521:
	.loc 1 8835 0
	movq	-48(%rbp), %rax	# const1, tmp94
	addq	%rax, -8(%rbp)	# tmp94, const0
	.loc 1 8836 0
	jmp	.L1527	#
.L1523:
	.loc 1 8838 0
	movl	$1, -12(%rbp)	#, op0
	.loc 1 8839 0
	jmp	.L1527	#
.L1544:
	.loc 1 8841 0
	nop
.L1527:
	jmp	.L1518	#
.L1519:
	.loc 1 8846 0
	cmpl	$75, -12(%rbp)	#, op0
	je	.L1528	#,
	.loc 1 8846 0 is_stmt 0 discriminator 1
	cmpl	$75, -36(%rbp)	#, op1
	je	.L1528	#,
	cmpl	$77, -12(%rbp)	#, op0
	je	.L1528	#,
	cmpl	$77, -36(%rbp)	#, op1
	jne	.L1529	#,
.L1528:
	.loc 1 8847 0 is_stmt 1
	movl	$0, %eax	#, D.29406
	jmp	.L1516	#
.L1529:
	.loc 1 8851 0
	movq	-8(%rbp), %rax	# const0, tmp95
	cmpq	-48(%rbp), %rax	# const1, tmp95
	je	.L1530	#,
	.loc 1 8852 0
	movl	$0, %eax	#, D.29406
	jmp	.L1516	#
.L1530:
	.loc 1 8855 0
	movl	-12(%rbp), %eax	# op0, op0
	cmpl	$84, %eax	#, op0
	je	.L1532	#,
	cmpl	$85, %eax	#, op0
	je	.L1533	#,
	cmpl	$83, %eax	#, op0
	je	.L1534	#,
	.loc 1 8884 0
	jmp	.L1518	#
.L1532:
	.loc 1 8858 0
	cmpl	$83, -36(%rbp)	#, op1
	jne	.L1535	#,
	.loc 1 8860 0
	movl	$47, -12(%rbp)	#, op0
.L1535:
	.loc 1 8864 0
	jmp	.L1518	#
.L1533:
	.loc 1 8867 0
	cmpl	$83, -36(%rbp)	#, op1
	jne	.L1536	#,
	.loc 1 8869 0
	movl	$83, -12(%rbp)	#, op0
	movq	-56(%rbp), %rax	# pcomp_p, tmp97
	movl	$1, (%rax)	#, *pcomp_p_39(D)
	.loc 1 8873 0
	jmp	.L1518	#
.L1536:
	.loc 1 8872 0
	movl	$83, -12(%rbp)	#, op0
	movq	-8(%rbp), %rax	# const0, tmp98
	notq	%rax	# D.29408
	movq	%rax, %rdx	# D.29408, D.29408
	movq	-32(%rbp), %rax	# pconst0, tmp99
	movq	%rdx, (%rax)	# D.29408, *pconst0_13(D)
	.loc 1 8873 0
	jmp	.L1518	#
.L1534:
	.loc 1 8876 0
	cmpl	$84, -36(%rbp)	#, op1
	jne	.L1538	#,
	.loc 1 8878 0
	movl	$47, -12(%rbp)	#, op0
	.loc 1 8882 0
	jmp	.L1545	#
.L1538:
	.loc 1 8881 0
	movq	-56(%rbp), %rax	# pcomp_p, tmp100
	movl	$1, (%rax)	#, *pcomp_p_39(D)
.L1545:
	.loc 1 8882 0
	nop
.L1518:
	.loc 1 8888 0
	movl	-40(%rbp), %eax	# mode, mode.1072
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29407
	movq	-8(%rbp), %rax	# const0, const0.1073
	andq	%rdx, %rax	# D.29407, D.29407
	movq	%rax, -8(%rbp)	# D.29407, const0
	.loc 1 8889 0
	cmpq	$0, -8(%rbp)	#, const0
	jne	.L1540	#,
	.loc 1 8890 0
	cmpl	$84, -12(%rbp)	#, op0
	je	.L1541	#,
	.loc 1 8890 0 is_stmt 0 discriminator 1
	cmpl	$85, -12(%rbp)	#, op0
	je	.L1541	#,
	cmpl	$75, -12(%rbp)	#, op0
	jne	.L1540	#,
.L1541:
	.loc 1 8891 0 is_stmt 1
	movl	$1, -12(%rbp)	#, op0
	jmp	.L1542	#
.L1540:
	.loc 1 8892 0
	cmpq	$0, -8(%rbp)	#, const0
	jne	.L1543	#,
	.loc 1 8892 0 is_stmt 0 discriminator 1
	cmpl	$83, -12(%rbp)	#, op0
	jne	.L1543	#,
	.loc 1 8893 0 is_stmt 1
	movl	$47, -12(%rbp)	#, op0
	jmp	.L1542	#
.L1543:
	.loc 1 8894 0
	movq	-8(%rbp), %rdx	# const0, const0.1074
	movl	-40(%rbp), %eax	# mode, mode.1075
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29407
	cmpq	%rax, %rdx	# D.29407, const0.1074
	jne	.L1542	#,
	.loc 1 8895 0
	cmpl	$83, -12(%rbp)	#, op0
	jne	.L1542	#,
	.loc 1 8896 0
	movl	$1, -12(%rbp)	#, op0
.L1542:
	.loc 1 8901 0
	movl	-40(%rbp), %edx	# mode, tmp103
	movq	-8(%rbp), %rax	# const0, tmp104
	movl	%edx, %esi	# tmp103,
	movq	%rax, %rdi	# tmp104,
	call	trunc_int_for_mode	#
	movq	%rax, -8(%rbp)	# tmp105, const0
	.loc 1 8903 0
	movq	-24(%rbp), %rax	# pop0, tmp106
	movl	-12(%rbp), %edx	# op0, tmp107
	movl	%edx, (%rax)	# tmp107, *pop0_11(D)
	.loc 1 8904 0
	movq	-32(%rbp), %rax	# pconst0, tmp108
	movq	-8(%rbp), %rdx	# const0, tmp109
	movq	%rdx, (%rax)	# tmp109, *pconst0_13(D)
	.loc 1 8906 0
	movl	$1, %eax	#, D.29406
.L1516:
	.loc 1 8907 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE38:
	.size	merge_outer_ops, .-merge_outer_ops
	.type	simplify_shift_const, @function
simplify_shift_const:
.LFB39:
	.loc 1 8924 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$152, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -136(%rbp)	# x, x
	movl	%esi, -140(%rbp)	# code, code
	movl	%edx, -144(%rbp)	# result_mode, result_mode
	movq	%rcx, -152(%rbp)	# varop, varop
	movl	%r8d, -156(%rbp)	# orig_count, orig_count
	.loc 1 8925 0
	movl	-140(%rbp), %eax	# code, tmp500
	movl	%eax, -104(%rbp)	# tmp500, orig_code
	.loc 1 8928 0
	movl	-144(%rbp), %eax	# result_mode, tmp501
	movl	%eax, -108(%rbp)	# tmp501, mode
	.loc 1 8931 0
	movl	-108(%rbp), %eax	# mode, mode.1076
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29410
	movzbl	%al, %edx	# D.29410, D.29411
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1078
	andl	$33554432, %eax	#, D.29411
	testl	%eax, %eax	# D.29411
	je	.L1547	#,
	.loc 1 8931 0 is_stmt 0 discriminator 1
	movl	$7, %eax	#, iftmp.1077
	jmp	.L1548	#
.L1547:
	.loc 1 8931 0 discriminator 2
	movl	$3, %eax	#, iftmp.1077
.L1548:
	.loc 1 8931 0 discriminator 3
	addl	%edx, %eax	# D.29411, D.29411
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1080
	andl	$33554432, %edx	#, D.29411
	testl	%edx, %edx	# D.29411
	je	.L1549	#,
	.loc 1 8931 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1079
	jmp	.L1550	#
.L1549:
	.loc 1 8931 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1079
.L1550:
	.loc 1 8931 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1079
	.loc 1 8930 0 is_stmt 1 discriminator 3
	movl	%eax, -100(%rbp)	# D.29411, mode_words
	.loc 1 8933 0 discriminator 3
	movl	$1, -124(%rbp)	#, outer_op
	.loc 1 8934 0 discriminator 3
	movq	$0, -80(%rbp)	#, outer_const
	.loc 1 8936 0 discriminator 3
	movl	$0, -120(%rbp)	#, complement_p
	.loc 1 8950 0 discriminator 3
	cmpl	$0, -156(%rbp)	#, orig_count
	js	.L1551	#,
	.loc 1 8950 0 is_stmt 0 discriminator 1
	movl	-108(%rbp), %eax	# mode, mode.1081
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	cmpl	-156(%rbp), %eax	# orig_count, D.29411
	jg	.L1552	#,
.L1551:
	.loc 1 8952 0 is_stmt 1
	cmpq	$0, -136(%rbp)	#, x
	je	.L1553	#,
	.loc 1 8953 0
	movq	-136(%rbp), %rax	# x, D.29409
	jmp	.L1666	#
.L1553:
	.loc 1 8955 0
	movl	-156(%rbp), %eax	# orig_count, tmp506
	cltq
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29416
	movq	-152(%rbp), %rdx	# varop, tmp507
	movl	-108(%rbp), %esi	# mode, tmp508
	movl	-140(%rbp), %eax	# code, tmp509
	movl	%eax, %edi	# tmp509,
	call	gen_rtx_fmt_ee	#
	jmp	.L1666	#
.L1552:
	.loc 1 8958 0
	movl	-156(%rbp), %eax	# orig_count, tmp510
	movl	%eax, -116(%rbp)	# tmp510, count
	.loc 1 8963 0
	jmp	.L1555	#
.L1645:
	.loc 1 8967 0
	movq	-152(%rbp), %rax	# varop, tmp511
	movzwl	(%rax), %eax	# varop_15->code, D.29412
	cmpw	$49, %ax	#, D.29412
	jne	.L1556	#,
	.loc 1 8968 0
	movq	-152(%rbp), %rax	# varop, D.29409
	jmp	.L1666	#
.L1556:
	.loc 1 8972 0
	movl	-120(%rbp), %eax	# complement_p, complement_p.1082
	testl	%eax, %eax	# complement_p.1082
	je	.L1557	#,
	.loc 1 8973 0
	jmp	.L1558	#
.L1557:
	.loc 1 8976 0
	cmpl	$91, -140(%rbp)	#, code
	jne	.L1559	#,
	.loc 1 8977 0
	movl	$88, -140(%rbp)	#, code
	movl	-144(%rbp), %eax	# result_mode, result_mode.1083
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29413
	subl	-116(%rbp), %eax	# count, tmp514
	movl	%eax, -116(%rbp)	# tmp514, count
.L1559:
	.loc 1 8984 0
	cmpl	$89, -140(%rbp)	#, code
	je	.L1560	#,
	.loc 1 8984 0 is_stmt 0 discriminator 2
	cmpl	$90, -140(%rbp)	#, code
	je	.L1560	#,
	.loc 1 8984 0 discriminator 1
	cmpl	$88, -140(%rbp)	#, code
	jne	.L1561	#,
.L1560:
	movl	-144(%rbp), %eax	# result_mode, iftmp.1084
	jmp	.L1562	#
.L1561:
	movl	-108(%rbp), %eax	# mode, iftmp.1084
.L1562:
	.loc 1 8984 0 discriminator 3
	movl	%eax, -96(%rbp)	# iftmp.1084, shift_mode
	.loc 1 8997 0 is_stmt 1 discriminator 3
	movl	-96(%rbp), %eax	# shift_mode, shift_mode.1085
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	$1, %eax	#, D.29411
	cmpl	-116(%rbp), %eax	# count, D.29413
	jae	.L1563	#,
	.loc 1 8999 0
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1564	#,
	.loc 1 9000 0
	movl	-96(%rbp), %eax	# shift_mode, shift_mode.1086
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	$1, %eax	#, D.29411
	movl	%eax, -116(%rbp)	# D.29411, count
	jmp	.L1563	#
.L1564:
	.loc 1 9001 0
	cmpl	$88, -140(%rbp)	#, code
	je	.L1565	#,
	.loc 1 9001 0 is_stmt 0 discriminator 1
	cmpl	$91, -140(%rbp)	#, code
	jne	.L1566	#,
.L1565:
	.loc 1 9002 0 is_stmt 1
	movl	-96(%rbp), %eax	# shift_mode, shift_mode.1087
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %ecx	# D.29412, D.29413
	movl	-116(%rbp), %eax	# count, tmp519
	movl	$0, %edx	#, tmp520
	divl	%ecx	# D.29413
	movl	%edx, -116(%rbp)	# tmp520, count
	jmp	.L1563	#
.L1566:
	.loc 1 9007 0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp522
	movq	%rax, -152(%rbp)	# tmp522, varop
	.loc 1 9008 0
	movl	$0, -116(%rbp)	#, count
	.loc 1 9009 0
	jmp	.L1558	#
.L1563:
	.loc 1 9015 0
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1567	#,
	.loc 1 9016 0
	movl	-96(%rbp), %edx	# shift_mode, tmp523
	movq	-152(%rbp), %rax	# varop, tmp524
	movl	%edx, %esi	# tmp523,
	movq	%rax, %rdi	# tmp524,
	call	num_sign_bit_copies	#
	.loc 1 9017 0
	movl	-96(%rbp), %edx	# shift_mode, shift_mode.1088
	movslq	%edx, %rdx	# shift_mode.1088, tmp525
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29412
	movzwl	%dx, %edx	# D.29412, D.29413
	.loc 1 9016 0
	cmpl	%edx, %eax	# D.29413, D.29413
	jne	.L1567	#,
	.loc 1 9019 0
	movl	$0, -116(%rbp)	#, count
	.loc 1 9020 0
	jmp	.L1558	#
.L1567:
	.loc 1 9028 0
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1568	#,
	.loc 1 9029 0
	movl	-96(%rbp), %edx	# shift_mode, tmp526
	movq	-152(%rbp), %rax	# varop, tmp527
	movl	%edx, %esi	# tmp526,
	movq	%rax, %rdi	# tmp527,
	call	num_sign_bit_copies	#
	movl	-116(%rbp), %edx	# count, tmp528
	addl	%eax, %edx	# D.29413, D.29413
	.loc 1 9030 0
	movl	-96(%rbp), %eax	# shift_mode, shift_mode.1089
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29413
	.loc 1 9029 0
	cmpl	%eax, %edx	# D.29413, D.29413
	jb	.L1568	#,
	.loc 1 9031 0
	movl	-96(%rbp), %eax	# shift_mode, shift_mode.1090
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	$1, %eax	#, D.29411
	movl	%eax, -116(%rbp)	# D.29411, count
.L1568:
	.loc 1 9037 0
	movl	-96(%rbp), %eax	# shift_mode, shift_mode.1091
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	cmpw	$64, %ax	#, D.29412
	ja	.L1569	#,
	.loc 1 9038 0
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1569	#,
	.loc 1 9039 0
	movl	-96(%rbp), %edx	# shift_mode, tmp532
	movq	-152(%rbp), %rax	# varop, tmp533
	movl	%edx, %esi	# tmp532,
	movq	%rax, %rdi	# tmp533,
	call	nonzero_bits	#
	.loc 1 9040 0
	movl	-96(%rbp), %edx	# shift_mode, shift_mode.1092
	movslq	%edx, %rdx	# shift_mode.1092, tmp534
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29412
	movzwl	%dx, %edx	# D.29412, D.29411
	subl	$1, %edx	#, D.29411
	movl	$1, %esi	#, tmp535
	movl	%edx, %ecx	# D.29411, tmp877
	salq	%cl, %rsi	# tmp877, D.29415
	movq	%rsi, %rdx	# D.29415, D.29415
	andq	%rdx, %rax	# D.29414, D.29414
	.loc 1 9039 0
	testq	%rax, %rax	# D.29414
	jne	.L1569	#,
	.loc 1 9042 0
	movl	$90, -140(%rbp)	#, code
.L1569:
	.loc 1 9044 0
	movq	-152(%rbp), %rax	# varop, tmp536
	movzwl	(%rax), %eax	# varop_15->code, D.29412
	movzwl	%ax, %eax	# D.29412, D.29413
	subl	$48, %eax	#, tmp537
	cmpl	$85, %eax	#, tmp537
	ja	.L1667	#,
	movl	%eax, %eax	# tmp537, tmp538
	movq	.L1572(,%rax,8), %rax	#, tmp539
	jmp	*%rax	# tmp539
	.section	.rodata
	.align 8
	.align 4
.L1572:
	.quad	.L1571
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1573
	.quad	.L1667
	.quad	.L1667
	.quad	.L1574
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1575
	.quad	.L1576
	.quad	.L1577
	.quad	.L1578
	.quad	.L1667
	.quad	.L1667
	.quad	.L1579
	.quad	.L1667
	.quad	.L1580
	.quad	.L1580
	.quad	.L1580
	.quad	.L1581
	.quad	.L1582
	.quad	.L1582
	.quad	.L1583
	.quad	.L1582
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1584
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1585
	.quad	.L1585
	.quad	.L1586
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1667
	.quad	.L1585
	.quad	.L1585
	.text
.L1585:
	.loc 1 9050 0
	movq	-152(%rbp), %rax	# varop, tmp540
	movq	%rax, %rdi	# tmp540,
	call	expand_compound_operation	#
	movq	%rax, -64(%rbp)	# tmp541, new
	.loc 1 9051 0
	movq	-64(%rbp), %rax	# new, tmp542
	cmpq	-152(%rbp), %rax	# varop, tmp542
	je	.L1587	#,
	.loc 1 9053 0
	movq	-64(%rbp), %rax	# new, tmp543
	movq	%rax, -152(%rbp)	# tmp543, varop
	.loc 1 9054 0
	jmp	.L1555	#
.L1587:
	.loc 1 9056 0
	jmp	.L1588	#
.L1574:
	.loc 1 9062 0
	cmpl	$89, -140(%rbp)	#, code
	je	.L1589	#,
	.loc 1 9062 0 is_stmt 0 discriminator 1
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1590	#,
.L1589:
	.loc 1 9063 0 is_stmt 1
	movq	-152(%rbp), %rax	# varop, tmp544
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movq	%rax, %rdi	# D.29416,
	call	mode_dependent_address_p	#
	testl	%eax, %eax	# D.29411
	jne	.L1590	#,
	.loc 1 9064 0
	movq	-152(%rbp), %rax	# varop, tmp545
	movzbl	3(%rax), %eax	# *varop_15, D.29410
	andl	$8, %eax	#, D.29410
	testb	%al, %al	# D.29410
	jne	.L1590	#,
	.loc 1 9065 0
	movl	-108(%rbp), %eax	# mode, mode.1093
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29413
	subl	-116(%rbp), %eax	# count, D.29413
	movl	$1, %edx	#,
	movl	$1, %esi	#,
	movl	%eax, %edi	# D.29413,
	call	mode_for_size	#
	movl	%eax, -92(%rbp)	# tmp547, tmode
	cmpl	$51, -92(%rbp)	#, tmode
	je	.L1590	#,
	.loc 1 9068 0
	movl	-116(%rbp), %eax	# count, tmp548
	shrl	$3, %eax	#, D.29413
	movl	%eax, %edx	# D.29413, D.29415
	movl	-92(%rbp), %esi	# tmode, tmp549
	movq	-152(%rbp), %rax	# varop, tmp550
	movl	$1, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp550,
	call	adjust_address_1	#
	movq	%rax, -64(%rbp)	# tmp551, new
	.loc 1 9072 0
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1591	#,
	.loc 1 9072 0 is_stmt 0 discriminator 1
	movl	$120, %eax	#, iftmp.1094
	jmp	.L1592	#
.L1591:
	.loc 1 9072 0 discriminator 2
	movl	$121, %eax	#, iftmp.1094
.L1592:
	.loc 1 9072 0 discriminator 3
	movq	-64(%rbp), %rdx	# new, tmp552
	movl	-108(%rbp), %ecx	# mode, tmp553
	movl	%ecx, %esi	# tmp553,
	movl	%eax, %edi	# iftmp.1094,
	call	gen_rtx_fmt_e	#
	movq	%rax, -152(%rbp)	# tmp554, varop
	.loc 1 9074 0 is_stmt 1 discriminator 3
	movl	$0, -116(%rbp)	#, count
	.loc 1 9075 0 discriminator 3
	jmp	.L1555	#
.L1590:
	.loc 1 9077 0
	jmp	.L1588	#
.L1571:
	.loc 1 9084 0
	cmpl	$89, -140(%rbp)	#, code
	je	.L1593	#,
	.loc 1 9084 0 is_stmt 0 discriminator 1
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1594	#,
.L1593:
	.loc 1 9085 0 is_stmt 1
	movl	-108(%rbp), %eax	# mode, mode.1095
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29413
	subl	-116(%rbp), %eax	# count, D.29413
	movl	$1, %edx	#,
	movl	$1, %esi	#,
	movl	%eax, %edi	# D.29413,
	call	mode_for_size	#
	movl	%eax, -92(%rbp)	# tmp556, tmode
	cmpl	$51, -92(%rbp)	#, tmode
	je	.L1594	#,
	.loc 1 9087 0
	movq	-152(%rbp), %rax	# varop, tmp557
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movzbl	2(%rax), %eax	# _144->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29413
	cmpl	-92(%rbp), %eax	# tmode, D.29413
	jne	.L1594	#,
	.loc 1 9093 0
	movq	-152(%rbp), %rax	# varop, tmp558
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movq	%rax, %rdi	# D.29416,
	call	copy_rtx	#
	movq	%rax, -64(%rbp)	# tmp559, new
	.loc 1 9094 0
	movl	-116(%rbp), %eax	# count, tmp560
	shrl	$3, %eax	#, D.29413
	movl	%eax, %edx	# D.29413, D.29415
	movq	-64(%rbp), %rax	# new, tmp561
	movq	8(%rax), %rax	# new_148->fld[0].rtx, D.29416
	movq	%rdx, %rsi	# D.29415,
	movq	%rax, %rdi	# D.29416,
	call	plus_constant_wide	#
	movq	-64(%rbp), %rdx	# new, tmp562
	addq	$8, %rdx	#, D.29417
	movq	%rax, %rsi	# D.29416,
	movq	%rdx, %rdi	# D.29417,
	call	do_SUBST	#
	.loc 1 9099 0
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1595	#,
	.loc 1 9099 0 is_stmt 0 discriminator 1
	movl	$120, %eax	#, iftmp.1096
	jmp	.L1596	#
.L1595:
	.loc 1 9099 0 discriminator 2
	movl	$121, %eax	#, iftmp.1096
.L1596:
	.loc 1 9099 0 discriminator 3
	movq	-64(%rbp), %rdx	# new, tmp563
	movl	-108(%rbp), %ecx	# mode, tmp564
	movl	%ecx, %esi	# tmp564,
	movl	%eax, %edi	# iftmp.1096,
	call	gen_rtx_fmt_e	#
	movq	%rax, -152(%rbp)	# tmp565, varop
	.loc 1 9101 0 is_stmt 1 discriminator 3
	movl	$0, -116(%rbp)	#, count
	.loc 1 9102 0 discriminator 3
	jmp	.L1555	#
.L1594:
	.loc 1 9104 0
	jmp	.L1588	#
.L1573:
	.loc 1 9110 0
	movq	-152(%rbp), %rax	# varop, tmp566
	movq	%rax, %rdi	# tmp566,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29411
	je	.L1597	#,
	.loc 1 9111 0
	movq	-152(%rbp), %rax	# varop, tmp567
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movzbl	2(%rax), %eax	# _159->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29410
	.loc 1 9112 0
	movq	-152(%rbp), %rax	# varop, tmp569
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29410
	.loc 1 9111 0
	cmpb	%al, %dl	# D.29410, D.29410
	jbe	.L1597	#,
	.loc 1 9113 0
	movq	-152(%rbp), %rax	# varop, tmp571
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movzbl	2(%rax), %eax	# _166->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29410
	.loc 1 9114 0
	movzbl	%al, %edx	# D.29410, D.29411
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1098
	andl	$33554432, %eax	#, D.29411
	testl	%eax, %eax	# D.29411
	je	.L1598	#,
	.loc 1 9114 0 is_stmt 0 discriminator 1
	movl	$7, %eax	#, iftmp.1097
	jmp	.L1599	#
.L1598:
	.loc 1 9114 0 discriminator 2
	movl	$3, %eax	#, iftmp.1097
.L1599:
	.loc 1 9114 0 discriminator 3
	addl	%edx, %eax	# D.29411, D.29411
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1100
	andl	$33554432, %edx	#, D.29411
	testl	%edx, %edx	# D.29411
	je	.L1600	#,
	.loc 1 9114 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1099
	jmp	.L1601	#
.L1600:
	.loc 1 9114 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1099
.L1601:
	.loc 1 9114 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1099
	.loc 1 9113 0 is_stmt 1 discriminator 3
	cmpl	-100(%rbp), %eax	# mode_words, D.29413
	jne	.L1597	#,
	.loc 1 9117 0
	movq	-152(%rbp), %rax	# varop, tmp575
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp576
	movq	%rax, -152(%rbp)	# tmp576, varop
	.loc 1 9118 0
	movq	-152(%rbp), %rax	# varop, tmp577
	movzbl	2(%rax), %eax	# varop_182->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29410
	movl	-108(%rbp), %eax	# mode, mode.1101
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29410
	cmpb	%al, %dl	# D.29410, D.29410
	jbe	.L1602	#,
	.loc 1 9119 0
	movq	-152(%rbp), %rax	# varop, tmp580
	movzbl	2(%rax), %eax	# varop_182->mode, D.29410
	movzbl	%al, %eax	# D.29410, tmp581
	movl	%eax, -108(%rbp)	# tmp581, mode
	.loc 1 9120 0
	jmp	.L1555	#
.L1602:
	jmp	.L1555	#
.L1597:
	.loc 1 9122 0
	jmp	.L1588	#
.L1578:
	.loc 1 9128 0
	movq	-152(%rbp), %rax	# varop, tmp582
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movzwl	(%rax), %eax	# _190->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1603	#,
	.loc 1 9129 0
	movq	-152(%rbp), %rax	# varop, tmp583
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movq	8(%rax), %rax	# _192->fld[0].rtwint, D.29415
	movq	%rax, %rdi	# D.29414,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29411
	js	.L1603	#,
	.loc 1 9133 0
	movq	-152(%rbp), %rax	# varop, tmp584
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movq	8(%rax), %rax	# _196->fld[0].rtwint, D.29415
	movq	%rax, %rdi	# D.29414,
	call	exact_log2_wide	#
	.loc 1 9132 0
	cltq
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29416
	movq	-152(%rbp), %rax	# varop, tmp585
	movq	8(%rax), %rdx	# varop_15->fld[0].rtx, D.29416
	movq	-152(%rbp), %rax	# varop, tmp586
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29418
	movl	%eax, %esi	# D.29418,
	movl	$87, %edi	#,
	call	gen_binary	#
	movq	%rax, -152(%rbp)	# tmp587, varop
	.loc 1 9134 0
	jmp	.L1555	#
.L1603:
	.loc 1 9136 0
	jmp	.L1588	#
.L1579:
	.loc 1 9140 0
	movq	-152(%rbp), %rax	# varop, tmp588
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movzwl	(%rax), %eax	# _206->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1604	#,
	.loc 1 9141 0
	movq	-152(%rbp), %rax	# varop, tmp589
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movq	8(%rax), %rax	# _208->fld[0].rtwint, D.29415
	movq	%rax, %rdi	# D.29414,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29411
	js	.L1604	#,
	.loc 1 9145 0
	movq	-152(%rbp), %rax	# varop, tmp590
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movq	8(%rax), %rax	# _212->fld[0].rtwint, D.29415
	movq	%rax, %rdi	# D.29414,
	call	exact_log2_wide	#
	.loc 1 9144 0
	cltq
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29416
	movq	-152(%rbp), %rax	# varop, tmp591
	movq	8(%rax), %rdx	# varop_15->fld[0].rtx, D.29416
	movq	-152(%rbp), %rax	# varop, tmp592
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29418
	movl	%eax, %esi	# D.29418,
	movl	$90, %edi	#,
	call	gen_binary	#
	movq	%rax, -152(%rbp)	# tmp593, varop
	.loc 1 9146 0
	jmp	.L1555	#
.L1604:
	.loc 1 9148 0
	jmp	.L1588	#
.L1583:
	.loc 1 9156 0
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1582	#,
	.loc 1 9156 0 is_stmt 0 discriminator 1
	movl	-144(%rbp), %eax	# result_mode, result_mode.1102
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	$1, %eax	#, D.29411
	cmpl	-116(%rbp), %eax	# count, D.29413
	jne	.L1582	#,
	.loc 1 9157 0 is_stmt 1
	movl	-144(%rbp), %eax	# result_mode, result_mode.1103
	cltq
	movzwl	mode_bitsize(%rax,%rax), %edx	# mode_bitsize, D.29412
	.loc 1 9158 0
	movq	-152(%rbp), %rax	# varop, tmp596
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	.loc 1 9157 0
	cmpw	%ax, %dx	# D.29412, D.29412
	jb	.L1582	#,
	.loc 1 9160 0
	movq	-152(%rbp), %rax	# varop, tmp598
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp599
	movq	%rax, -152(%rbp)	# tmp599, varop
	.loc 1 9161 0
	jmp	.L1555	#
.L1582:
	.loc 1 9171 0
	movq	-152(%rbp), %rax	# varop, tmp600
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movzwl	(%rax), %eax	# _233->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1605	#,
	.loc 1 9172 0
	movq	-152(%rbp), %rax	# varop, tmp601
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movq	8(%rax), %rax	# _235->fld[0].rtwint, D.29415
	testq	%rax, %rax	# D.29415
	js	.L1605	#,
	.loc 1 9173 0
	movq	-152(%rbp), %rax	# varop, tmp602
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movq	8(%rax), %rdx	# _237->fld[0].rtwint, D.29415
	movq	-152(%rbp), %rax	# varop, tmp603
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29415
	cmpq	%rax, %rdx	# D.29415, D.29415
	jge	.L1605	#,
	.loc 1 9174 0
	movl	-144(%rbp), %eax	# result_mode, result_mode.1104
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	cmpw	$64, %ax	#, D.29412
	ja	.L1605	#,
	.loc 1 9175 0
	movl	-108(%rbp), %eax	# mode, mode.1105
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	cmpw	$64, %ax	#, D.29412
	ja	.L1605	#,
.LBB89:
	.loc 1 9177 0
	movq	-152(%rbp), %rax	# varop, tmp607
	movzwl	(%rax), %eax	# varop_15->code, D.29412
	movzwl	%ax, %eax	# D.29412, tmp608
	movl	%eax, -88(%rbp)	# tmp608, first_code
	.loc 1 9178 0
	movq	-152(%rbp), %rax	# varop, tmp609
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movq	8(%rax), %rax	# _249->fld[0].rtwint, D.29415
	movl	%eax, -84(%rbp)	# D.29415, first_count
	.loc 1 9189 0
	cmpl	$87, -140(%rbp)	#, code
	jne	.L1606	#,
	.loc 1 9189 0 is_stmt 0 discriminator 1
	cmpl	$89, -88(%rbp)	#, first_code
	jne	.L1606	#,
	.loc 1 9190 0 is_stmt 1
	movl	-144(%rbp), %eax	# result_mode, result_mode.1106
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	.loc 1 9191 0
	movzwl	%ax, %edx	# D.29412, D.29411
	movq	-152(%rbp), %rax	# varop, tmp611
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	%eax, %edx	# D.29411, D.29411
	movl	%edx, %eax	# D.29411, D.29411
	.loc 1 9190 0
	cmpl	-116(%rbp), %eax	# count, D.29413
	jne	.L1606	#,
	.loc 1 9195 0
	movl	-108(%rbp), %eax	# mode, mode.1107
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29414
	.loc 1 9196 0
	movl	-84(%rbp), %eax	# first_count, first_count.1108
	movl	$1, %esi	#, tmp614
	movl	%eax, %ecx	# first_count.1108, tmp881
	salq	%cl, %rsi	# tmp881, D.29415
	movq	%rsi, %rax	# D.29415, D.29415
	negq	%rax	# D.29415
	.loc 1 9195 0
	andq	%rdx, %rax	# D.29414, tmp615
	movq	%rax, -56(%rbp)	# tmp615, mask
	.loc 1 9198 0
	movq	-152(%rbp), %rax	# varop, tmp616
	movq	8(%rax), %rdx	# varop_15->fld[0].rtx, D.29416
	movq	-56(%rbp), %rcx	# mask, tmp617
	movl	-144(%rbp), %eax	# result_mode, tmp618
	movl	%eax, %esi	# tmp618,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, -152(%rbp)	# tmp619, varop
	.loc 1 9200 0
	movl	-116(%rbp), %ecx	# count, count.1109
	movq	-152(%rbp), %rdx	# varop, tmp620
	movl	-144(%rbp), %eax	# result_mode, tmp621
	movl	%ecx, %r8d	# count.1109,
	movq	%rdx, %rcx	# tmp620,
	movl	%eax, %edx	# tmp621,
	movl	$87, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, -152(%rbp)	# tmp622, varop
	.loc 1 9202 0
	movl	-84(%rbp), %eax	# first_count, tmp623
	movl	%eax, -116(%rbp)	# tmp623, count
	.loc 1 9203 0
	movl	$89, -140(%rbp)	#, code
	.loc 1 9204 0
	jmp	.L1555	#
.L1606:
	.loc 1 9214 0
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1607	#,
	.loc 1 9214 0 is_stmt 0 discriminator 1
	cmpl	$87, -88(%rbp)	#, first_code
	jne	.L1607	#,
	.loc 1 9215 0 is_stmt 1
	movq	-152(%rbp), %rax	# varop, tmp624
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29413
	cmpl	-96(%rbp), %eax	# shift_mode, D.29413
	jne	.L1607	#,
	.loc 1 9216 0
	movq	-152(%rbp), %rax	# varop, tmp625
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movl	-96(%rbp), %edx	# shift_mode, tmp626
	movl	%edx, %esi	# tmp626,
	movq	%rax, %rdi	# D.29416,
	call	num_sign_bit_copies	#
	cmpl	-84(%rbp), %eax	# first_count, D.29413
	jbe	.L1607	#,
	.loc 1 9219 0
	movq	-152(%rbp), %rax	# varop, tmp627
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp628
	movq	%rax, -152(%rbp)	# tmp628, varop
	.loc 1 9221 0
	movl	-84(%rbp), %eax	# first_count, tmp629
	movl	-116(%rbp), %edx	# count, tmp630
	subl	%eax, %edx	# tmp629, D.29413
	movl	%edx, %eax	# D.29413, D.29413
	movl	%eax, -112(%rbp)	# D.29413, signed_count
	.loc 1 9222 0
	cmpl	$0, -112(%rbp)	#, signed_count
	jns	.L1608	#,
	.loc 1 9223 0
	movl	-112(%rbp), %eax	# signed_count, tmp631
	negl	%eax	# D.29411
	movl	%eax, -116(%rbp)	# D.29411, count
	movl	$87, -140(%rbp)	#, code
	.loc 1 9227 0
	jmp	.L1555	#
.L1608:
	.loc 1 9225 0
	movl	-112(%rbp), %eax	# signed_count, tmp632
	movl	%eax, -116(%rbp)	# tmp632, count
	.loc 1 9227 0
	jmp	.L1555	#
.L1607:
	.loc 1 9245 0
	movl	-140(%rbp), %eax	# code, tmp633
	cmpl	-88(%rbp), %eax	# first_code, tmp633
	jne	.L1610	#,
	.loc 1 9247 0
	movq	-152(%rbp), %rax	# varop, tmp634
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29413
	cmpl	-144(%rbp), %eax	# result_mode, D.29413
	je	.L1611	#,
	.loc 1 9248 0
	cmpl	$89, -140(%rbp)	#, code
	je	.L1588	#,
	.loc 1 9248 0 is_stmt 0 discriminator 1
	cmpl	$90, -140(%rbp)	#, code
	je	.L1588	#,
	.loc 1 9249 0 is_stmt 1
	cmpl	$88, -140(%rbp)	#, code
	je	.L1588	#,
.L1611:
	.loc 1 9252 0
	movl	-84(%rbp), %eax	# first_count, tmp635
	addl	%eax, -116(%rbp)	# tmp635, count
	.loc 1 9253 0
	movq	-152(%rbp), %rax	# varop, tmp636
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp637
	movq	%rax, -152(%rbp)	# tmp637, varop
	.loc 1 9254 0
	jmp	.L1555	#
.L1610:
	.loc 1 9257 0
	cmpl	$89, -140(%rbp)	#, code
	je	.L1588	#,
	.loc 1 9258 0
	cmpl	$88, -140(%rbp)	#, code
	jne	.L1612	#,
	.loc 1 9258 0 is_stmt 0 discriminator 1
	cmpl	$89, -88(%rbp)	#, first_code
	je	.L1588	#,
.L1612:
	.loc 1 9259 0 is_stmt 1
	movl	-108(%rbp), %eax	# mode, mode.1110
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	cmpw	$64, %ax	#, D.29412
	ja	.L1588	#,
	.loc 1 9260 0
	movq	-152(%rbp), %rax	# varop, tmp639
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29413
	cmpl	-144(%rbp), %eax	# result_mode, D.29413
	je	.L1613	#,
	.loc 1 9261 0
	cmpl	$89, -88(%rbp)	#, first_code
	je	.L1588	#,
	.loc 1 9261 0 is_stmt 0 discriminator 1
	cmpl	$90, -88(%rbp)	#, first_code
	je	.L1588	#,
	.loc 1 9262 0 is_stmt 1
	cmpl	$88, -88(%rbp)	#, first_code
	je	.L1588	#,
	.loc 1 9263 0
	cmpl	$88, -140(%rbp)	#, code
	je	.L1588	#,
.L1613:
	.loc 1 9270 0
	movq	-152(%rbp), %rax	# varop, tmp640
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %edx	# D.29410, D.29418
	movq	-152(%rbp), %rax	# varop, tmp641
	movl	%edx, %esi	# D.29418,
	movq	%rax, %rdi	# tmp641,
	call	nonzero_bits	#
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -48(%rbp)	# tmp642, mask_rtx
	.loc 1 9273 0
	movl	-116(%rbp), %eax	# count, D.29415
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29416
	movq	-48(%rbp), %rdx	# mask_rtx, tmp643
	movl	-144(%rbp), %esi	# result_mode, tmp644
	movl	-140(%rbp), %eax	# code, tmp645
	movl	%eax, %edi	# tmp645,
	call	simplify_binary_operation	#
	movq	%rax, -48(%rbp)	# tmp646, mask_rtx
	.loc 1 9277 0
	cmpq	$0, -48(%rbp)	#, mask_rtx
	je	.L1588	#,
	.loc 1 9278 0
	movq	-48(%rbp), %rax	# mask_rtx, tmp647
	movzwl	(%rax), %eax	# mask_rtx_300->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1588	#,
	.loc 1 9279 0
	movq	-48(%rbp), %rax	# mask_rtx, tmp648
	movq	8(%rax), %rdx	# mask_rtx_300->fld[0].rtwint, D.29415
	leaq	-120(%rbp), %rdi	#, tmp649
	movl	-144(%rbp), %ecx	# result_mode, tmp650
	leaq	-80(%rbp), %rsi	#, tmp651
	leaq	-124(%rbp), %rax	#, tmp652
	movq	%rdi, %r9	# tmp649,
	movl	%ecx, %r8d	# tmp650,
	movq	%rdx, %rcx	# D.29415,
	movl	$83, %edx	#,
	movq	%rax, %rdi	# tmp652,
	call	merge_outer_ops	#
	testl	%eax, %eax	# D.29411
	je	.L1588	#,
	.loc 1 9286 0
	movl	-116(%rbp), %eax	# count, tmp653
	movl	%eax, -112(%rbp)	# tmp653, signed_count
	.loc 1 9287 0
	cmpl	$89, -140(%rbp)	#, code
	je	.L1614	#,
	.loc 1 9287 0 is_stmt 0 discriminator 2
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1615	#,
.L1614:
	.loc 1 9287 0 discriminator 1
	movl	$1, %eax	#, iftmp.1111
	jmp	.L1616	#
.L1615:
	.loc 1 9287 0 discriminator 3
	movl	$0, %eax	#, iftmp.1111
.L1616:
	.loc 1 9288 0 is_stmt 1
	andl	$1, %eax	#, D.29419
	xorl	$1, %eax	#, D.29419
	movl	%eax, %edx	# D.29419, D.29419
	cmpl	$89, -88(%rbp)	#, first_code
	je	.L1617	#,
	.loc 1 9288 0 is_stmt 0 discriminator 2
	cmpl	$90, -88(%rbp)	#, first_code
	jne	.L1618	#,
.L1617:
	.loc 1 9288 0 discriminator 1
	movl	$1, %eax	#, iftmp.1112
	jmp	.L1619	#
.L1618:
	.loc 1 9288 0 discriminator 3
	movl	$0, %eax	#, iftmp.1112
.L1619:
	.loc 1 9288 0 discriminator 4
	andl	$1, %eax	#, D.29419
	xorl	%edx, %eax	# D.29419, D.29419
	.loc 1 9287 0 is_stmt 1 discriminator 4
	testb	%al, %al	# D.29419
	je	.L1620	#,
	.loc 1 9289 0
	movl	-112(%rbp), %edx	# signed_count, signed_count.1113
	movl	-84(%rbp), %eax	# first_count, tmp654
	addl	%edx, %eax	# signed_count.1113, D.29413
	movl	%eax, -112(%rbp)	# D.29413, signed_count
	jmp	.L1621	#
.L1620:
	.loc 1 9291 0
	movl	-112(%rbp), %eax	# signed_count, signed_count.1114
	subl	-84(%rbp), %eax	# first_count, D.29413
	movl	%eax, -112(%rbp)	# D.29413, signed_count
.L1621:
	.loc 1 9297 0
	cmpl	$0, -112(%rbp)	#, signed_count
	jle	.L1622	#,
	.loc 1 9298 0
	cmpl	$88, -88(%rbp)	#, first_code
	jne	.L1623	#,
	.loc 1 9298 0 is_stmt 0 discriminator 1
	cmpl	$87, -140(%rbp)	#, code
	je	.L1624	#,
.L1623:
	.loc 1 9299 0 is_stmt 1
	cmpl	$89, -88(%rbp)	#, first_code
	jne	.L1622	#,
	.loc 1 9299 0 is_stmt 0 discriminator 1
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1622	#,
.L1624:
	.loc 1 9300 0 is_stmt 1
	movl	-88(%rbp), %eax	# first_code, tmp655
	movl	%eax, -140(%rbp)	# tmp655, code
	movl	-112(%rbp), %eax	# signed_count, tmp656
	movl	%eax, -116(%rbp)	# tmp656, count
	jmp	.L1625	#
.L1622:
	.loc 1 9301 0
	cmpl	$0, -112(%rbp)	#, signed_count
	jns	.L1626	#,
	.loc 1 9302 0
	movl	-88(%rbp), %eax	# first_code, tmp657
	movl	%eax, -140(%rbp)	# tmp657, code
	movl	-112(%rbp), %eax	# signed_count, tmp658
	negl	%eax	# D.29411
	movl	%eax, -116(%rbp)	# D.29411, count
	jmp	.L1625	#
.L1626:
	.loc 1 9304 0
	movl	-112(%rbp), %eax	# signed_count, tmp659
	movl	%eax, -116(%rbp)	# tmp659, count
.L1625:
	.loc 1 9306 0
	movq	-152(%rbp), %rax	# varop, tmp660
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp661
	movq	%rax, -152(%rbp)	# tmp661, varop
	.loc 1 9307 0
	jmp	.L1555	#
.L1605:
.LBE89:
	.loc 1 9314 0
	movq	-152(%rbp), %rax	# varop, tmp662
	movzwl	(%rax), %eax	# varop_15->code, D.29412
	movzwl	%ax, %eax	# D.29412, D.29413
	cmpl	-140(%rbp), %eax	# code, D.29413
	jne	.L1627	#,
	.loc 1 9315 0
	movq	-152(%rbp), %rax	# varop, tmp663
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movzwl	(%rax), %eax	# _328->code, D.29412
	cmpw	$54, %ax	#, D.29412
	je	.L1627	#,
	.loc 1 9317 0
	movl	-116(%rbp), %eax	# count, D.29415
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29416
	movq	-152(%rbp), %rax	# varop, tmp664
	movq	8(%rax), %rdx	# varop_15->fld[0].rtx, D.29416
	.loc 1 9316 0
	movl	-108(%rbp), %esi	# mode, tmp665
	movl	-140(%rbp), %eax	# code, tmp666
	movl	%eax, %edi	# tmp666,
	call	simplify_binary_operation	#
	movq	%rax, -64(%rbp)	# tmp667, new
	cmpq	$0, -64(%rbp)	#, new
	je	.L1627	#,
	.loc 1 9321 0
	movq	-152(%rbp), %rax	# varop, tmp668
	movq	16(%rax), %rcx	# varop_15->fld[1].rtx, D.29416
	movq	-64(%rbp), %rdx	# new, tmp669
	movl	-108(%rbp), %esi	# mode, tmp670
	movl	-140(%rbp), %eax	# code, tmp671
	movl	%eax, %edi	# tmp671,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -152(%rbp)	# tmp672, varop
	.loc 1 9322 0
	movl	$0, -116(%rbp)	#, count
	.loc 1 9323 0
	jmp	.L1555	#
.L1627:
	.loc 1 9325 0
	jmp	.L1588	#
.L1581:
	.loc 1 9329 0
	movl	-108(%rbp), %eax	# mode, mode.1115
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29414
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29416
	movq	-152(%rbp), %rax	# varop, tmp674
	movq	8(%rax), %rdx	# varop_15->fld[0].rtx, D.29416
	movl	-108(%rbp), %eax	# mode, tmp675
	movl	%eax, %esi	# tmp675,
	movl	$85, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -152(%rbp)	# tmp676, varop
	.loc 1 9331 0
	jmp	.L1555	#
.L1580:
	.loc 1 9343 0
	movq	-152(%rbp), %rax	# varop, tmp677
	movzwl	(%rax), %eax	# varop_15->code, D.29412
	cmpw	$84, %ax	#, D.29412
	jne	.L1628	#,
	.loc 1 9343 0 is_stmt 0 discriminator 1
	movq	-152(%rbp), %rax	# varop, tmp678
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movzwl	(%rax), %eax	# _344->code, D.29412
	cmpw	$75, %ax	#, D.29412
	jne	.L1628	#,
	.loc 1 9344 0 is_stmt 1
	movq	-152(%rbp), %rax	# varop, tmp679
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movq	16(%rax), %rdx	# _346->fld[1].rtx, D.29416
	movq	const_int_rtx+504(%rip), %rax	# const_int_rtx, D.29416
	.loc 1 9345 0
	cmpq	%rax, %rdx	# D.29416, D.29416
	jne	.L1628	#,
	.loc 1 9346 0
	cmpl	$90, -140(%rbp)	#, code
	je	.L1629	#,
	.loc 1 9346 0 is_stmt 0 discriminator 1
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1628	#,
.L1629:
	.loc 1 9347 0 is_stmt 1
	movq	-152(%rbp), %rax	# varop, tmp680
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	$1, %eax	#, D.29411
	cmpl	-116(%rbp), %eax	# count, D.29413
	jne	.L1628	#,
	.loc 1 9348 0
	movq	-152(%rbp), %rax	# varop, tmp682
	movq	16(%rax), %rdx	# varop_15->fld[1].rtx, D.29416
	movq	-152(%rbp), %rax	# varop, tmp683
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movq	8(%rax), %rax	# _356->fld[0].rtx, D.29416
	movq	%rdx, %rsi	# D.29416,
	movq	%rax, %rdi	# D.29416,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29411
	je	.L1628	#,
	.loc 1 9350 0
	movl	$0, -116(%rbp)	#, count
	.loc 1 9351 0
	movq	const_int_rtx+512(%rip), %rcx	# const_int_rtx, D.29416
	movq	-152(%rbp), %rax	# varop, tmp684
	movq	16(%rax), %rdx	# varop_15->fld[1].rtx, D.29416
	movq	-152(%rbp), %rax	# varop, tmp685
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29418
	movl	%eax, %esi	# D.29418,
	movl	$106, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -152(%rbp)	# tmp686, varop
	.loc 1 9354 0
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1630	#,
	.loc 1 9355 0
	movq	-152(%rbp), %rax	# varop, tmp687
	movzbl	2(%rax), %eax	# varop_364->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29418
	movq	-152(%rbp), %rdx	# varop, tmp688
	movl	%eax, %esi	# D.29418,
	movl	$77, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, -152(%rbp)	# tmp689, varop
	.loc 1 9357 0
	jmp	.L1555	#
.L1630:
	jmp	.L1555	#
.L1628:
	.loc 1 9366 0
	movq	-152(%rbp), %rax	# varop, tmp690
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movzwl	(%rax), %eax	# _368->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1631	#,
	.loc 1 9367 0
	movl	-116(%rbp), %eax	# count, D.29415
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29416
	movq	-152(%rbp), %rax	# varop, tmp691
	movq	16(%rax), %rdx	# varop_15->fld[1].rtx, D.29416
	movl	-144(%rbp), %esi	# result_mode, tmp692
	movl	-140(%rbp), %eax	# code, tmp693
	movl	%eax, %edi	# tmp693,
	call	simplify_binary_operation	#
	movq	%rax, -64(%rbp)	# tmp694, new
	cmpq	$0, -64(%rbp)	#, new
	je	.L1631	#,
	.loc 1 9370 0
	movq	-64(%rbp), %rax	# new, tmp695
	movzwl	(%rax), %eax	# new_373->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1631	#,
	.loc 1 9371 0
	movq	-64(%rbp), %rax	# new, tmp696
	movq	8(%rax), %rcx	# new_373->fld[0].rtwint, D.29415
	movq	-152(%rbp), %rax	# varop, tmp697
	movzwl	(%rax), %eax	# varop_15->code, D.29412
	movzwl	%ax, %edx	# D.29412, D.29420
	leaq	-120(%rbp), %r8	#, tmp698
	movl	-144(%rbp), %edi	# result_mode, tmp699
	leaq	-80(%rbp), %rsi	#, tmp700
	leaq	-124(%rbp), %rax	#, tmp701
	movq	%r8, %r9	# tmp698,
	movl	%edi, %r8d	# tmp699,
	movq	%rax, %rdi	# tmp701,
	call	merge_outer_ops	#
	testl	%eax, %eax	# D.29411
	je	.L1631	#,
	.loc 1 9374 0
	movq	-152(%rbp), %rax	# varop, tmp702
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp703
	movq	%rax, -152(%rbp)	# tmp703, varop
	.loc 1 9375 0
	jmp	.L1555	#
.L1631:
.LBB90:
	.loc 1 9382 0
	movl	-116(%rbp), %esi	# count, count.1116
	movq	-152(%rbp), %rax	# varop, tmp704
	movq	8(%rax), %rcx	# varop_15->fld[0].rtx, D.29416
	movl	-96(%rbp), %edx	# shift_mode, tmp705
	movl	-140(%rbp), %eax	# code, tmp706
	movl	%esi, %r8d	# count.1116,
	movl	%eax, %esi	# tmp706,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, -40(%rbp)	# tmp707, lhs
	.loc 1 9384 0
	movl	-116(%rbp), %esi	# count, count.1117
	movq	-152(%rbp), %rax	# varop, tmp708
	movq	16(%rax), %rcx	# varop_15->fld[1].rtx, D.29416
	movl	-96(%rbp), %edx	# shift_mode, tmp709
	movl	-140(%rbp), %eax	# code, tmp710
	movl	%esi, %r8d	# count.1117,
	movl	%eax, %esi	# tmp710,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, -32(%rbp)	# tmp711, rhs
	.loc 1 9387 0
	movq	-152(%rbp), %rax	# varop, tmp712
	movzwl	(%rax), %eax	# varop_15->code, D.29412
	movzwl	%ax, %eax	# D.29412, D.29420
	movq	-32(%rbp), %rcx	# rhs, tmp713
	movq	-40(%rbp), %rdx	# lhs, tmp714
	movl	-96(%rbp), %esi	# shift_mode, tmp715
	movl	%eax, %edi	# D.29420,
	call	gen_binary	#
	movq	%rax, -152(%rbp)	# tmp716, varop
	.loc 1 9388 0
	movq	-152(%rbp), %rax	# varop, tmp717
	movq	%rax, %rdi	# tmp717,
	call	apply_distributive_law	#
	movq	%rax, -152(%rbp)	# tmp718, varop
	.loc 1 9390 0
	movl	$0, -116(%rbp)	#, count
.LBE90:
	.loc 1 9392 0
	jmp	.L1588	#
.L1584:
	.loc 1 9399 0
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1632	#,
	.loc 1 9400 0
	movq	-152(%rbp), %rax	# varop, tmp719
	movq	16(%rax), %rdx	# varop_15->fld[1].rtx, D.29416
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29416
	cmpq	%rax, %rdx	# D.29416, D.29416
	jne	.L1632	#,
	.loc 1 9401 0
	movq	-152(%rbp), %rax	# varop, tmp720
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movzbl	2(%rax), %eax	# _393->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29413
	cmpl	-144(%rbp), %eax	# result_mode, D.29413
	jne	.L1632	#,
	.loc 1 9402 0
	movl	-144(%rbp), %eax	# result_mode, result_mode.1118
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	$1, %eax	#, D.29411
	cmpl	-116(%rbp), %eax	# count, D.29413
	jne	.L1632	#,
	.loc 1 9403 0
	movl	-144(%rbp), %eax	# result_mode, result_mode.1119
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	cmpw	$64, %ax	#, D.29412
	ja	.L1632	#,
	.loc 1 9406 0
	movl	-144(%rbp), %eax	# result_mode, result_mode.1120
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	$1, %eax	#, D.29411
	.loc 1 9404 0
	cmpl	$1, %eax	#, D.29411
	jle	.L1632	#,
	.loc 1 9407 0
	movq	-152(%rbp), %rax	# varop, tmp724
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movl	-144(%rbp), %edx	# result_mode, tmp725
	movl	%edx, %esi	# tmp725,
	movq	%rax, %rdi	# D.29416,
	call	nonzero_bits	#
	cmpq	$1, %rax	#, D.29414
	jne	.L1632	#,
	.loc 1 9408 0
	leaq	-120(%rbp), %rcx	#, tmp726
	movl	-144(%rbp), %edx	# result_mode, tmp727
	leaq	-80(%rbp), %rsi	#, tmp728
	leaq	-124(%rbp), %rax	#, tmp729
	movq	%rcx, %r9	# tmp726,
	movl	%edx, %r8d	# tmp727,
	movl	$1, %ecx	#,
	movl	$85, %edx	#,
	movq	%rax, %rdi	# tmp729,
	call	merge_outer_ops	#
	testl	%eax, %eax	# D.29411
	je	.L1632	#,
	.loc 1 9412 0
	movq	-152(%rbp), %rax	# varop, tmp730
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp731
	movq	%rax, -152(%rbp)	# tmp731, varop
	.loc 1 9413 0
	movl	$0, -116(%rbp)	#, count
	.loc 1 9414 0
	jmp	.L1555	#
.L1632:
	.loc 1 9416 0
	jmp	.L1588	#
.L1577:
	.loc 1 9421 0
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1633	#,
	.loc 1 9421 0 is_stmt 0 discriminator 1
	movl	-144(%rbp), %eax	# result_mode, result_mode.1121
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	$1, %eax	#, D.29411
	cmpl	-116(%rbp), %eax	# count, D.29413
	jne	.L1633	#,
	.loc 1 9422 0 is_stmt 1
	movq	-152(%rbp), %rax	# varop, tmp733
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movl	-144(%rbp), %edx	# result_mode, tmp734
	movl	%edx, %esi	# tmp734,
	movq	%rax, %rdi	# D.29416,
	call	nonzero_bits	#
	cmpq	$1, %rax	#, D.29414
	jne	.L1633	#,
	.loc 1 9424 0
	movq	-152(%rbp), %rax	# varop, tmp735
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp736
	movq	%rax, -152(%rbp)	# tmp736, varop
	.loc 1 9425 0
	movl	$0, -116(%rbp)	#, count
	.loc 1 9426 0
	jmp	.L1555	#
.L1633:
	.loc 1 9431 0
	cmpl	$87, -140(%rbp)	#, code
	jne	.L1634	#,
	.loc 1 9432 0
	leaq	-120(%rbp), %rcx	#, tmp737
	movl	-144(%rbp), %edx	# result_mode, tmp738
	leaq	-80(%rbp), %rsi	#, tmp739
	leaq	-124(%rbp), %rax	#, tmp740
	movq	%rcx, %r9	# tmp737,
	movl	%edx, %r8d	# tmp738,
	movl	$0, %ecx	#,
	movl	$77, %edx	#,
	movq	%rax, %rdi	# tmp740,
	call	merge_outer_ops	#
	testl	%eax, %eax	# D.29411
	je	.L1634	#,
	.loc 1 9436 0
	movq	-152(%rbp), %rax	# varop, tmp741
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp742
	movq	%rax, -152(%rbp)	# tmp742, varop
	.loc 1 9437 0
	jmp	.L1555	#
.L1634:
	.loc 1 9439 0
	jmp	.L1588	#
.L1575:
	.loc 1 9445 0
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1635	#,
	.loc 1 9445 0 is_stmt 0 discriminator 1
	movl	-144(%rbp), %eax	# result_mode, result_mode.1122
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	$1, %eax	#, D.29411
	cmpl	-116(%rbp), %eax	# count, D.29413
	jne	.L1635	#,
	.loc 1 9446 0 is_stmt 1
	movq	-152(%rbp), %rax	# varop, tmp744
	movq	16(%rax), %rdx	# varop_15->fld[1].rtx, D.29416
	movq	const_int_rtx+504(%rip), %rax	# const_int_rtx, D.29416
	cmpq	%rax, %rdx	# D.29416, D.29416
	jne	.L1635	#,
	.loc 1 9447 0
	movq	-152(%rbp), %rax	# varop, tmp745
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movl	-144(%rbp), %edx	# result_mode, tmp746
	movl	%edx, %esi	# tmp746,
	movq	%rax, %rdi	# D.29416,
	call	nonzero_bits	#
	cmpq	$1, %rax	#, D.29414
	jne	.L1635	#,
	.loc 1 9448 0
	leaq	-120(%rbp), %rcx	#, tmp747
	movl	-144(%rbp), %edx	# result_mode, tmp748
	leaq	-80(%rbp), %rsi	#, tmp749
	leaq	-124(%rbp), %rax	#, tmp750
	movq	%rcx, %r9	# tmp747,
	movl	%edx, %r8d	# tmp748,
	movl	$1, %ecx	#,
	movl	$85, %edx	#,
	movq	%rax, %rdi	# tmp750,
	call	merge_outer_ops	#
	testl	%eax, %eax	# D.29411
	je	.L1635	#,
	.loc 1 9452 0
	movl	$0, -116(%rbp)	#, count
	.loc 1 9453 0
	movq	-152(%rbp), %rax	# varop, tmp751
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp752
	movq	%rax, -152(%rbp)	# tmp752, varop
	.loc 1 9454 0
	jmp	.L1555	#
.L1635:
	.loc 1 9463 0
	cmpl	$89, -140(%rbp)	#, code
	je	.L1636	#,
	.loc 1 9463 0 is_stmt 0 discriminator 1
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1637	#,
.L1636:
	.loc 1 9464 0 is_stmt 1
	cmpl	$63, -116(%rbp)	#, count
	ja	.L1637	#,
	.loc 1 9465 0
	movq	-152(%rbp), %rax	# varop, tmp753
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movl	-144(%rbp), %edx	# result_mode, tmp754
	movl	%edx, %esi	# tmp754,
	movq	%rax, %rdi	# D.29416,
	call	nonzero_bits	#
	movq	%rax, %rdx	#, D.29414
	movl	-116(%rbp), %eax	# count, count.1123
	movl	%eax, %ecx	# count.1123, tmp885
	shrq	%cl, %rdx	# tmp885, D.29414
	movq	%rdx, %rax	# D.29414, D.29414
	testq	%rax, %rax	# D.29414
	jne	.L1637	#,
	.loc 1 9466 0
	movq	-152(%rbp), %rax	# varop, tmp755
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movl	-144(%rbp), %edx	# result_mode, tmp756
	movl	%edx, %esi	# tmp756,
	movq	%rax, %rdi	# D.29416,
	call	nonzero_bits	#
	movq	%rax, %rbx	#, D.29414
	.loc 1 9467 0
	movq	-152(%rbp), %rax	# varop, tmp757
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movl	-144(%rbp), %edx	# result_mode, tmp758
	movl	%edx, %esi	# tmp758,
	movq	%rax, %rdi	# D.29416,
	call	nonzero_bits	#
	andq	%rbx, %rax	# D.29414, D.29414
	.loc 1 9466 0
	testq	%rax, %rax	# D.29414
	jne	.L1637	#,
	.loc 1 9469 0
	movq	-152(%rbp), %rax	# varop, tmp759
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp760
	movq	%rax, -152(%rbp)	# tmp760, varop
	.loc 1 9470 0
	jmp	.L1555	#
.L1637:
	.loc 1 9472 0
	cmpl	$89, -140(%rbp)	#, code
	je	.L1638	#,
	.loc 1 9472 0 is_stmt 0 discriminator 1
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1639	#,
.L1638:
	.loc 1 9473 0 is_stmt 1
	cmpl	$63, -116(%rbp)	#, count
	ja	.L1639	#,
	.loc 1 9474 0
	movl	-144(%rbp), %eax	# result_mode, result_mode.1124
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	cmpw	$64, %ax	#, D.29412
	ja	.L1639	#,
	.loc 1 9475 0
	movq	-152(%rbp), %rax	# varop, tmp762
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movl	-144(%rbp), %edx	# result_mode, tmp763
	movl	%edx, %esi	# tmp763,
	movq	%rax, %rdi	# D.29416,
	call	nonzero_bits	#
	movq	%rax, %rdx	#, D.29414
	.loc 1 9476 0
	movl	-116(%rbp), %eax	# count, count.1125
	movl	%eax, %ecx	# count.1125, tmp887
	shrq	%cl, %rdx	# tmp887, D.29414
	movq	%rdx, %rax	# D.29414, D.29414
	.loc 1 9475 0
	testq	%rax, %rax	# D.29414
	jne	.L1639	#,
	.loc 1 9477 0
	movq	-152(%rbp), %rax	# varop, tmp764
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movl	-144(%rbp), %edx	# result_mode, tmp765
	movl	%edx, %esi	# tmp765,
	movq	%rax, %rdi	# D.29416,
	call	nonzero_bits	#
	movq	%rax, %rbx	#, D.29414
	.loc 1 9478 0
	movq	-152(%rbp), %rax	# varop, tmp766
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movl	-144(%rbp), %edx	# result_mode, tmp767
	movl	%edx, %esi	# tmp767,
	movq	%rax, %rdi	# D.29416,
	call	nonzero_bits	#
	andq	%rbx, %rax	# D.29414, D.29414
	.loc 1 9477 0
	testq	%rax, %rax	# D.29414
	jne	.L1639	#,
	.loc 1 9481 0
	movq	-152(%rbp), %rax	# varop, tmp768
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, tmp769
	movq	%rax, -152(%rbp)	# tmp769, varop
	.loc 1 9482 0
	jmp	.L1555	#
.L1639:
	.loc 1 9486 0
	cmpl	$87, -140(%rbp)	#, code
	jne	.L1640	#,
	.loc 1 9487 0
	movq	-152(%rbp), %rax	# varop, tmp770
	movq	16(%rax), %rax	# varop_15->fld[1].rtx, D.29416
	movzwl	(%rax), %eax	# _457->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1640	#,
	.loc 1 9488 0
	movl	-116(%rbp), %eax	# count, D.29415
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29416
	movq	-152(%rbp), %rax	# varop, tmp771
	movq	16(%rax), %rdx	# varop_15->fld[1].rtx, D.29416
	movl	-144(%rbp), %eax	# result_mode, tmp772
	movl	%eax, %esi	# tmp772,
	movl	$87, %edi	#,
	call	simplify_binary_operation	#
	movq	%rax, -64(%rbp)	# tmp773, new
	cmpq	$0, -64(%rbp)	#, new
	je	.L1640	#,
	.loc 1 9491 0
	movq	-64(%rbp), %rax	# new, tmp774
	movzwl	(%rax), %eax	# new_462->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1640	#,
	.loc 1 9492 0
	movq	-64(%rbp), %rax	# new, tmp775
	movq	8(%rax), %rdx	# new_462->fld[0].rtwint, D.29415
	leaq	-120(%rbp), %rdi	#, tmp776
	movl	-144(%rbp), %ecx	# result_mode, tmp777
	leaq	-80(%rbp), %rsi	#, tmp778
	leaq	-124(%rbp), %rax	#, tmp779
	movq	%rdi, %r9	# tmp776,
	movl	%ecx, %r8d	# tmp777,
	movq	%rdx, %rcx	# D.29415,
	movl	$75, %edx	#,
	movq	%rax, %rdi	# tmp779,
	call	merge_outer_ops	#
	testl	%eax, %eax	# D.29411
	je	.L1640	#,
	.loc 1 9495 0
	movq	-152(%rbp), %rax	# varop, tmp780
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp781
	movq	%rax, -152(%rbp)	# tmp781, varop
	.loc 1 9496 0
	jmp	.L1555	#
.L1640:
	.loc 1 9498 0
	jmp	.L1588	#
.L1576:
	.loc 1 9509 0
	movq	-152(%rbp), %rax	# varop, tmp782
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movzwl	(%rax), %eax	# _467->code, D.29412
	.loc 1 9508 0
	cmpw	$89, %ax	#, D.29412
	jne	.L1641	#,
	.loc 1 9510 0
	movq	-152(%rbp), %rax	# varop, tmp783
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	$1, %eax	#, D.29411
	cmpl	-116(%rbp), %eax	# count, D.29413
	jne	.L1641	#,
	.loc 1 9511 0
	cmpl	$90, -140(%rbp)	#, code
	je	.L1642	#,
	.loc 1 9511 0 is_stmt 0 discriminator 1
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1641	#,
.L1642:
	.loc 1 9512 0 is_stmt 1
	movq	-152(%rbp), %rax	# varop, tmp785
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movq	16(%rax), %rax	# _475->fld[1].rtx, D.29416
	movzwl	(%rax), %eax	# _476->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1641	#,
	.loc 1 9513 0
	movq	-152(%rbp), %rax	# varop, tmp786
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movq	16(%rax), %rax	# _478->fld[1].rtx, D.29416
	movq	8(%rax), %rdx	# _479->fld[0].rtwint, D.29415
	movl	-116(%rbp), %eax	# count, D.29415
	cmpq	%rax, %rdx	# D.29415, D.29415
	jne	.L1641	#,
	.loc 1 9514 0
	movq	-152(%rbp), %rax	# varop, tmp787
	movq	16(%rax), %rdx	# varop_15->fld[1].rtx, D.29416
	movq	-152(%rbp), %rax	# varop, tmp788
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movq	8(%rax), %rax	# _483->fld[0].rtx, D.29416
	movq	%rdx, %rsi	# D.29416,
	movq	%rax, %rdi	# D.29416,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29411
	je	.L1641	#,
	.loc 1 9516 0
	movl	$0, -116(%rbp)	#, count
	.loc 1 9517 0
	movq	const_int_rtx+512(%rip), %rcx	# const_int_rtx, D.29416
	movq	-152(%rbp), %rax	# varop, tmp789
	movq	16(%rax), %rdx	# varop_15->fld[1].rtx, D.29416
	movq	-152(%rbp), %rax	# varop, tmp790
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29418
	movl	%eax, %esi	# D.29418,
	movl	$105, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -152(%rbp)	# tmp791, varop
	.loc 1 9520 0
	cmpl	$89, -140(%rbp)	#, code
	jne	.L1643	#,
	.loc 1 9521 0
	movq	-152(%rbp), %rax	# varop, tmp792
	movzbl	2(%rax), %eax	# varop_491->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29418
	movq	-152(%rbp), %rdx	# varop, tmp793
	movl	%eax, %esi	# D.29418,
	movl	$77, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, -152(%rbp)	# tmp794, varop
	.loc 1 9523 0
	jmp	.L1555	#
.L1643:
	jmp	.L1555	#
.L1641:
	.loc 1 9525 0
	jmp	.L1588	#
.L1586:
	.loc 1 9530 0
	cmpl	$90, -140(%rbp)	#, code
	jne	.L1644	#,
	.loc 1 9531 0
	movq	-152(%rbp), %rax	# varop, tmp795
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movzwl	(%rax), %eax	# _495->code, D.29412
	cmpw	$90, %ax	#, D.29412
	jne	.L1644	#,
	.loc 1 9532 0
	movq	-152(%rbp), %rax	# varop, tmp796
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movq	16(%rax), %rax	# _497->fld[1].rtx, D.29416
	movzwl	(%rax), %eax	# _498->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1644	#,
	.loc 1 9533 0
	movq	-152(%rbp), %rax	# varop, tmp797
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movq	16(%rax), %rax	# _500->fld[1].rtx, D.29416
	movq	8(%rax), %rdx	# _501->fld[0].rtwint, D.29415
	.loc 1 9534 0
	movq	-152(%rbp), %rax	# varop, tmp798
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, D.29416
	movzbl	2(%rax), %eax	# _503->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	.loc 1 9535 0
	movzwl	%ax, %ecx	# D.29412, D.29411
	movq	-152(%rbp), %rax	# varop, tmp800
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29411
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	subl	%eax, %ecx	# D.29411, D.29411
	movl	%ecx, %eax	# D.29411, D.29411
	.loc 1 9534 0
	cltq
	.loc 1 9533 0
	cmpq	%rax, %rdx	# D.29415, D.29415
	jl	.L1644	#,
.LBB91:
	.loc 1 9537 0
	movq	-152(%rbp), %rax	# varop, tmp802
	movq	8(%rax), %rax	# varop_15->fld[0].rtx, tmp803
	movq	%rax, -24(%rbp)	# tmp803, varop_inner
	.loc 1 9540 0
	movl	-116(%rbp), %edx	# count, D.29415
	movq	-24(%rbp), %rax	# varop_inner, tmp804
	movq	16(%rax), %rax	# varop_inner_514->fld[1].rtx, D.29416
	movq	8(%rax), %rax	# _516->fld[0].rtwint, D.29415
	addq	%rdx, %rax	# D.29415, D.29415
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29416
	movq	-24(%rbp), %rax	# varop_inner, tmp805
	movq	8(%rax), %rdx	# varop_inner_514->fld[0].rtx, D.29416
	movq	-24(%rbp), %rax	# varop_inner, tmp806
	movzbl	2(%rax), %eax	# varop_inner_514->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29418
	movl	%eax, %esi	# D.29418,
	movl	$90, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -24(%rbp)	# tmp807, varop_inner
	.loc 1 9544 0
	movq	-152(%rbp), %rax	# varop, tmp808
	movzbl	2(%rax), %eax	# varop_15->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29418
	movq	-24(%rbp), %rdx	# varop_inner, tmp809
	movl	%eax, %esi	# D.29418,
	movl	$122, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	%rax, -152(%rbp)	# tmp810, varop
	.loc 1 9545 0
	movl	$0, -116(%rbp)	#, count
	.loc 1 9546 0
	jmp	.L1555	#
.L1644:
.LBE91:
	.loc 1 9548 0
	jmp	.L1588	#
.L1667:
	.loc 1 9551 0
	nop
.L1588:
	.loc 1 9554 0
	jmp	.L1558	#
.L1555:
	.loc 1 8963 0 discriminator 1
	cmpl	$0, -116(%rbp)	#, count
	jne	.L1645	#,
.L1558:
	.loc 1 9563 0
	cmpl	$89, -140(%rbp)	#, code
	je	.L1646	#,
	.loc 1 9563 0 is_stmt 0 discriminator 2
	cmpl	$90, -140(%rbp)	#, code
	je	.L1646	#,
	.loc 1 9563 0 discriminator 1
	cmpl	$88, -140(%rbp)	#, code
	jne	.L1647	#,
.L1646:
	movl	-144(%rbp), %eax	# result_mode, iftmp.1126
	jmp	.L1648	#
.L1647:
	movl	-108(%rbp), %eax	# mode, iftmp.1126
.L1648:
	.loc 1 9563 0 discriminator 3
	movl	%eax, -96(%rbp)	# iftmp.1126, shift_mode
	.loc 1 9575 0 is_stmt 1 discriminator 3
	cmpq	$0, -136(%rbp)	#, x
	je	.L1649	#,
	.loc 1 9575 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp811
	movzwl	(%rax), %eax	# x_531(D)->code, D.29412
	movzwl	%ax, %eax	# D.29412, D.29411
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29421
	cmpb	$50, %al	#, D.29421
	jne	.L1649	#,
	.loc 1 9576 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp813
	movq	16(%rax), %rax	# x_531(D)->fld[1].rtx, D.29416
	movzwl	(%rax), %eax	# _535->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1649	#,
	.loc 1 9577 0
	movq	-136(%rbp), %rax	# x, tmp814
	movq	16(%rax), %rax	# x_531(D)->fld[1].rtx, D.29416
	movq	8(%rax), %rdx	# _537->fld[0].rtwint, D.29415
	movl	-116(%rbp), %eax	# count, D.29415
	cmpq	%rax, %rdx	# D.29415, D.29415
	jne	.L1649	#,
	.loc 1 9578 0
	movq	-136(%rbp), %rax	# x, tmp815
	movq	16(%rax), %rax	# x_531(D)->fld[1].rtx, tmp816
	movq	%rax, -72(%rbp)	# tmp816, const_rtx
	jmp	.L1650	#
.L1649:
	.loc 1 9580 0
	movl	-116(%rbp), %eax	# count, D.29415
	movq	%rax, %rsi	# D.29415,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -72(%rbp)	# tmp817, const_rtx
.L1650:
	.loc 1 9582 0
	cmpq	$0, -136(%rbp)	#, x
	je	.L1651	#,
	.loc 1 9582 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp818
	movq	8(%rax), %rax	# x_531(D)->fld[0].rtx, D.29416
	movzwl	(%rax), %eax	# _543->code, D.29412
	cmpw	$63, %ax	#, D.29412
	jne	.L1651	#,
	.loc 1 9583 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp819
	movq	8(%rax), %rax	# x_531(D)->fld[0].rtx, D.29416
	movzbl	2(%rax), %eax	# _545->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29413
	cmpl	-96(%rbp), %eax	# shift_mode, D.29413
	jne	.L1651	#,
	.loc 1 9584 0
	movq	-136(%rbp), %rax	# x, tmp820
	movq	8(%rax), %rax	# x_531(D)->fld[0].rtx, D.29416
	movq	8(%rax), %rax	# _548->fld[0].rtx, D.29416
	cmpq	-152(%rbp), %rax	# varop, D.29416
	jne	.L1651	#,
	.loc 1 9585 0
	movq	-136(%rbp), %rax	# x, tmp821
	movq	8(%rax), %rax	# x_531(D)->fld[0].rtx, tmp822
	movq	%rax, -152(%rbp)	# tmp822, varop
	jmp	.L1652	#
.L1651:
	.loc 1 9586 0
	movq	-152(%rbp), %rax	# varop, tmp823
	movzbl	2(%rax), %eax	# varop_16->mode, D.29410
	movzbl	%al, %eax	# D.29410, D.29413
	cmpl	-96(%rbp), %eax	# shift_mode, D.29413
	je	.L1652	#,
	.loc 1 9587 0
	movq	-152(%rbp), %rdx	# varop, tmp824
	movl	-96(%rbp), %eax	# shift_mode, tmp825
	movq	%rdx, %rsi	# tmp824,
	movl	%eax, %edi	# tmp825,
	call	gen_lowpart_for_combine	#
	movq	%rax, -152(%rbp)	# tmp826, varop
.L1652:
	.loc 1 9590 0
	movq	-152(%rbp), %rax	# varop, tmp827
	movzwl	(%rax), %eax	# varop_17->code, D.29412
	cmpw	$49, %ax	#, D.29412
	jne	.L1653	#,
	.loc 1 9591 0
	cmpq	$0, -136(%rbp)	#, x
	je	.L1654	#,
	.loc 1 9591 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, iftmp.1127
	jmp	.L1655	#
.L1654:
	.loc 1 9591 0 discriminator 2
	movq	-152(%rbp), %rax	# varop, iftmp.1127
.L1655:
	.loc 1 9591 0 discriminator 3
	jmp	.L1666	#
.L1653:
	.loc 1 9593 0 is_stmt 1
	movq	-72(%rbp), %rcx	# const_rtx, tmp828
	movq	-152(%rbp), %rdx	# varop, tmp829
	movl	-96(%rbp), %esi	# shift_mode, tmp830
	movl	-140(%rbp), %eax	# code, tmp831
	movl	%eax, %edi	# tmp831,
	call	simplify_binary_operation	#
	movq	%rax, -64(%rbp)	# tmp832, new
	.loc 1 9594 0
	cmpq	$0, -64(%rbp)	#, new
	je	.L1656	#,
	.loc 1 9595 0
	movq	-64(%rbp), %rax	# new, tmp833
	movq	%rax, -136(%rbp)	# tmp833, x
	jmp	.L1657	#
.L1656:
	.loc 1 9597 0
	movq	-72(%rbp), %rcx	# const_rtx, tmp834
	movq	-152(%rbp), %rdx	# varop, tmp835
	movl	-96(%rbp), %esi	# shift_mode, tmp836
	movl	-140(%rbp), %eax	# code, tmp837
	movl	%eax, %edi	# tmp837,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -136(%rbp)	# tmp838, x
.L1657:
	.loc 1 9604 0
	movl	-124(%rbp), %eax	# outer_op, outer_op.1128
	cmpl	$1, %eax	#, outer_op.1128
	je	.L1658	#,
	.loc 1 9604 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# x, tmp839
	movzwl	(%rax), %eax	# x_1->code, D.29412
	movzwl	%ax, %eax	# D.29412, D.29413
	cmpl	-140(%rbp), %eax	# code, D.29413
	jne	.L1658	#,
	.loc 1 9605 0 is_stmt 1
	movq	-136(%rbp), %rax	# x, tmp840
	movq	16(%rax), %rax	# x_1->fld[1].rtx, D.29416
	movzwl	(%rax), %eax	# _564->code, D.29412
	cmpw	$54, %ax	#, D.29412
	jne	.L1658	#,
	.loc 1 9607 0
	movq	-136(%rbp), %rax	# x, tmp841
	movq	16(%rax), %rax	# x_1->fld[1].rtx, D.29416
	movq	8(%rax), %rax	# _566->fld[0].rtwint, D.29415
	.loc 1 9606 0
	movl	%eax, %edi	# D.29415, D.29411
	movq	-136(%rbp), %rax	# x, tmp842
	movq	8(%rax), %rcx	# x_1->fld[0].rtx, D.29416
	movl	-96(%rbp), %edx	# shift_mode, tmp843
	movl	-140(%rbp), %esi	# code, tmp844
	movq	-136(%rbp), %rax	# x, tmp845
	movl	%edi, %r8d	# D.29411,
	movq	%rax, %rdi	# tmp845,
	call	simplify_shift_const	#
	movq	%rax, -136(%rbp)	# tmp846, x
.L1658:
	.loc 1 9611 0
	cmpl	$90, -104(%rbp)	#, orig_code
	jne	.L1659	#,
	.loc 1 9611 0 is_stmt 0 discriminator 1
	movl	-144(%rbp), %eax	# result_mode, tmp847
	cmpl	-96(%rbp), %eax	# shift_mode, tmp847
	je	.L1659	#,
	.loc 1 9613 0 is_stmt 1
	movl	-144(%rbp), %eax	# result_mode, result_mode.1129
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29414
	.loc 1 9612 0
	movl	-156(%rbp), %eax	# orig_count, tmp849
	movl	%eax, %ecx	# tmp849, tmp890
	shrq	%cl, %rdx	# tmp890, D.29414
	movq	%rdx, %rcx	# D.29414, D.29414
	movq	-136(%rbp), %rdx	# x, tmp850
	movl	-96(%rbp), %eax	# shift_mode, tmp851
	movl	%eax, %esi	# tmp851,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, -136(%rbp)	# tmp852, x
.L1659:
	.loc 1 9616 0
	movq	-136(%rbp), %rdx	# x, tmp853
	movl	-144(%rbp), %eax	# result_mode, tmp854
	movq	%rdx, %rsi	# tmp853,
	movl	%eax, %edi	# tmp854,
	call	gen_lowpart_for_combine	#
	movq	%rax, -136(%rbp)	# tmp855, x
	.loc 1 9620 0
	movl	-120(%rbp), %eax	# complement_p, complement_p.1130
	testl	%eax, %eax	# complement_p.1130
	je	.L1660	#,
	.loc 1 9621 0
	movl	-144(%rbp), %ecx	# result_mode, tmp856
	movq	-136(%rbp), %rdx	# x, tmp857
	movl	-144(%rbp), %eax	# result_mode, tmp858
	movl	%eax, %esi	# tmp858,
	movl	$86, %edi	#,
	call	simplify_gen_unary	#
	movq	%rax, -136(%rbp)	# tmp859, x
.L1660:
	.loc 1 9623 0
	movl	-124(%rbp), %eax	# outer_op, outer_op.1131
	cmpl	$1, %eax	#, outer_op.1131
	je	.L1661	#,
	.loc 1 9625 0
	movl	-144(%rbp), %eax	# result_mode, result_mode.1132
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29412
	cmpw	$63, %ax	#, D.29412
	ja	.L1662	#,
	.loc 1 9626 0
	movq	-80(%rbp), %rax	# outer_const, outer_const.1133
	movl	-144(%rbp), %edx	# result_mode, tmp861
	movl	%edx, %esi	# tmp861,
	movq	%rax, %rdi	# outer_const.1133,
	call	trunc_int_for_mode	#
	movq	%rax, -80(%rbp)	# outer_const.1134, outer_const
.L1662:
	.loc 1 9628 0
	movl	-124(%rbp), %eax	# outer_op, outer_op.1135
	cmpl	$83, %eax	#, outer_op.1135
	jne	.L1663	#,
	.loc 1 9629 0
	movq	-80(%rbp), %rax	# outer_const, outer_const.1136
	movq	%rax, %rcx	# outer_const.1136, outer_const.1137
	movq	-136(%rbp), %rdx	# x, tmp862
	movl	-144(%rbp), %eax	# result_mode, tmp863
	movl	%eax, %esi	# tmp863,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, -136(%rbp)	# tmp864, x
	jmp	.L1661	#
.L1663:
	.loc 1 9630 0
	movl	-124(%rbp), %eax	# outer_op, outer_op.1138
	cmpl	$47, %eax	#, outer_op.1138
	jne	.L1664	#,
	.loc 1 9633 0
	movq	-80(%rbp), %rax	# outer_const, outer_const.1139
	movq	%rax, %rsi	# outer_const.1139,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -136(%rbp)	# tmp865, x
	jmp	.L1661	#
.L1664:
	.loc 1 9634 0
	movl	-124(%rbp), %eax	# outer_op, outer_op.1140
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29421
	cmpb	$49, %al	#, D.29421
	jne	.L1665	#,
	.loc 1 9635 0
	movl	-124(%rbp), %eax	# outer_op, outer_op.1142
	movl	-144(%rbp), %ecx	# result_mode, tmp867
	movq	-136(%rbp), %rdx	# x, tmp868
	movl	-144(%rbp), %esi	# result_mode, tmp869
	movl	%eax, %edi	# outer_op.1142,
	call	simplify_gen_unary	#
	movq	%rax, -136(%rbp)	# tmp870, x
	jmp	.L1661	#
.L1665:
	.loc 1 9637 0
	movq	-80(%rbp), %rax	# outer_const, outer_const.1143
	movq	%rax, %rsi	# outer_const.1143,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rcx	#, D.29416
	movl	-124(%rbp), %eax	# outer_op, outer_op.1144
	movq	-136(%rbp), %rdx	# x, tmp871
	movl	-144(%rbp), %esi	# result_mode, tmp872
	movl	%eax, %edi	# outer_op.1144,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp873, x
.L1661:
	.loc 1 9640 0
	movq	-136(%rbp), %rax	# x, D.29409
.L1666:
	.loc 1 9641 0
	addq	$152, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE39:
	.size	simplify_shift_const, .-simplify_shift_const
	.type	recog_for_combine, @function
recog_for_combine:
.LFB40:
	.loc 1 9661 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$80, %rsp	#,
	movq	%rdi, -56(%rbp)	# pnewpat, pnewpat
	movq	%rsi, -64(%rbp)	# insn, insn
	movq	%rdx, -72(%rbp)	# pnotes, pnotes
	.loc 1 9662 0
	movq	-56(%rbp), %rax	# pnewpat, tmp119
	movq	(%rax), %rax	# *pnewpat_16(D), tmp120
	movq	%rax, -32(%rbp)	# tmp120, pat
	.loc 1 9664 0
	movl	$0, -48(%rbp)	#, num_clobbers_to_add
	.loc 1 9666 0
	movq	$0, -24(%rbp)	#, notes
	.loc 1 9672 0
	movq	-32(%rbp), %rax	# pat, tmp121
	movzwl	(%rax), %eax	# pat_17->code, D.29423
	cmpw	$39, %ax	#, D.29423
	jne	.L1669	#,
	.loc 1 9673 0
	movq	-32(%rbp), %rax	# pat, tmp122
	movq	8(%rax), %rax	# pat_17->fld[0].rtvec, D.29424
	movl	(%rax), %eax	# _20->num_elem, D.29422
	subl	$1, %eax	#, tmp123
	movl	%eax, -40(%rbp)	# tmp123, i
	jmp	.L1670	#
.L1673:
	.loc 1 9674 0
	movq	-32(%rbp), %rax	# pat, tmp124
	movq	8(%rax), %rax	# pat_17->fld[0].rtvec, D.29424
	movl	-40(%rbp), %edx	# i, tmp126
	movslq	%edx, %rdx	# tmp126, tmp125
	movq	8(%rax,%rdx,8), %rax	# _23->elem, D.29425
	movzwl	(%rax), %eax	# _24->code, D.29423
	cmpw	$49, %ax	#, D.29423
	jne	.L1671	#,
	.loc 1 9675 0
	movq	-32(%rbp), %rax	# pat, tmp127
	movq	8(%rax), %rax	# pat_17->fld[0].rtvec, D.29424
	movl	-40(%rbp), %edx	# i, tmp129
	movslq	%edx, %rdx	# tmp129, tmp128
	movq	8(%rax,%rdx,8), %rax	# _26->elem, D.29425
	movq	8(%rax), %rdx	# _27->fld[0].rtx, D.29425
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29425
	cmpq	%rax, %rdx	# D.29425, D.29425
	jne	.L1671	#,
	.loc 1 9676 0
	movl	$-1, %eax	#, D.29422
	jmp	.L1691	#
.L1671:
	.loc 1 9673 0
	subl	$1, -40(%rbp)	#, i
.L1670:
	.loc 1 9673 0 is_stmt 0 discriminator 1
	cmpl	$0, -40(%rbp)	#, i
	jns	.L1673	#,
.L1669:
	.loc 1 9680 0 is_stmt 1
	movq	-64(%rbp), %rax	# insn, tmp130
	movq	%rax, %rdi	# tmp130,
	call	shallow_copy_rtx	#
	movq	%rax, -16(%rbp)	# tmp131, dummy_insn
	.loc 1 9681 0
	movq	-16(%rbp), %rax	# dummy_insn, tmp132
	movq	-32(%rbp), %rdx	# pat, tmp133
	movq	%rdx, 32(%rax)	# tmp133, dummy_insn_33->fld[3].rtx
	.loc 1 9682 0
	movq	-16(%rbp), %rax	# dummy_insn, tmp134
	movq	$0, 56(%rax)	#, dummy_insn_33->fld[6].rtx
	.loc 1 9684 0
	leaq	-48(%rbp), %rdx	#, tmp135
	movq	-16(%rbp), %rcx	# dummy_insn, tmp136
	movq	-32(%rbp), %rax	# pat, tmp137
	movq	%rcx, %rsi	# tmp136,
	movq	%rax, %rdi	# tmp137,
	call	recog	#
	movl	%eax, -44(%rbp)	# tmp138, insn_code_number
	.loc 1 9691 0
	cmpl	$0, -44(%rbp)	#, insn_code_number
	jns	.L1674	#,
	.loc 1 9691 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# pat, tmp139
	movq	%rax, %rdi	# tmp139,
	call	check_asm_operands	#
	testl	%eax, %eax	# D.29422
	jne	.L1674	#,
	.loc 1 9692 0 is_stmt 1
	movq	-32(%rbp), %rax	# pat, tmp140
	movzwl	(%rax), %eax	# pat_17->code, D.29423
	cmpw	$39, %ax	#, D.29423
	jne	.L1674	#,
.LBB92:
	.loc 1 9696 0
	movl	$0, -36(%rbp)	#, pos
	movl	$0, -40(%rbp)	#, i
	jmp	.L1675	#
.L1678:
	.loc 1 9697 0
	movq	-32(%rbp), %rax	# pat, tmp141
	movq	8(%rax), %rax	# pat_17->fld[0].rtvec, D.29424
	movl	-40(%rbp), %edx	# i, tmp143
	movslq	%edx, %rdx	# tmp143, tmp142
	movq	8(%rax,%rdx,8), %rax	# _41->elem, D.29425
	movzwl	(%rax), %eax	# _42->code, D.29423
	cmpw	$49, %ax	#, D.29423
	je	.L1676	#,
	.loc 1 9699 0
	movl	-40(%rbp), %eax	# i, tmp144
	cmpl	-36(%rbp), %eax	# pos, tmp144
	je	.L1677	#,
	.loc 1 9700 0
	movq	-32(%rbp), %rax	# pat, tmp145
	movq	8(%rax), %rax	# pat_17->fld[0].rtvec, D.29424
	movl	-40(%rbp), %edx	# i, tmp147
	movslq	%edx, %rdx	# tmp147, tmp146
	movq	8(%rax,%rdx,8), %rax	# _44->elem, D.29425
	movq	-32(%rbp), %rdx	# pat, tmp148
	movq	8(%rdx), %rdx	# pat_17->fld[0].rtvec, D.29424
	movl	-36(%rbp), %ecx	# pos, tmp150
	movslq	%ecx, %rcx	# tmp150, tmp149
	salq	$3, %rcx	#, tmp151
	addq	%rcx, %rdx	# tmp151, tmp152
	addq	$8, %rdx	#, D.29426
	movq	%rax, %rsi	# D.29425,
	movq	%rdx, %rdi	# D.29426,
	call	do_SUBST	#
.L1677:
	.loc 1 9701 0
	addl	$1, -36(%rbp)	#, pos
.L1676:
	.loc 1 9696 0
	addl	$1, -40(%rbp)	#, i
.L1675:
	.loc 1 9696 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# pat, tmp153
	movq	8(%rax), %rax	# pat_17->fld[0].rtvec, D.29424
	movl	(%rax), %eax	# _39->num_elem, D.29422
	cmpl	-40(%rbp), %eax	# i, D.29422
	jg	.L1678	#,
	.loc 1 9704 0 is_stmt 1
	movl	-36(%rbp), %edx	# pos, pos.1145
	movq	-32(%rbp), %rax	# pat, tmp154
	movq	8(%rax), %rax	# pat_17->fld[0].rtvec, D.29424
	movl	%edx, %esi	# pos.1145,
	movq	%rax, %rdi	# D.29427,
	call	do_SUBST_INT	#
	.loc 1 9706 0
	cmpl	$1, -36(%rbp)	#, pos
	jne	.L1679	#,
	.loc 1 9707 0
	movq	-32(%rbp), %rax	# pat, tmp155
	movq	8(%rax), %rax	# pat_17->fld[0].rtvec, D.29424
	movq	8(%rax), %rax	# _53->elem, tmp156
	movq	%rax, -32(%rbp)	# tmp156, pat
.L1679:
	.loc 1 9709 0
	movq	-16(%rbp), %rax	# dummy_insn, tmp157
	movq	-32(%rbp), %rdx	# pat, tmp158
	movq	%rdx, 32(%rax)	# tmp158, dummy_insn_33->fld[3].rtx
	.loc 1 9710 0
	leaq	-48(%rbp), %rdx	#, tmp159
	movq	-16(%rbp), %rcx	# dummy_insn, tmp160
	movq	-32(%rbp), %rax	# pat, tmp161
	movq	%rcx, %rsi	# tmp160,
	movq	%rax, %rdi	# tmp161,
	call	recog	#
	movl	%eax, -44(%rbp)	# tmp162, insn_code_number
.L1674:
.LBE92:
	.loc 1 9714 0
	cmpl	$0, -44(%rbp)	#, insn_code_number
	jns	.L1680	#,
	.loc 1 9714 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# pat, tmp163
	movzwl	(%rax), %eax	# pat_2->code, D.29423
	cmpw	$47, %ax	#, D.29423
	jne	.L1680	#,
	movq	-32(%rbp), %rax	# pat, tmp164
	movq	%rax, %rdi	# tmp164,
	call	set_noop_p	#
	testl	%eax, %eax	# D.29422
	je	.L1680	#,
	.loc 1 9715 0 is_stmt 1
	movl	$2147483647, -44(%rbp)	#, insn_code_number
	movl	$0, -48(%rbp)	#, num_clobbers_to_add
.L1680:
	.loc 1 9719 0
	movl	-48(%rbp), %eax	# num_clobbers_to_add, num_clobbers_to_add.1146
	testl	%eax, %eax	# num_clobbers_to_add.1146
	je	.L1681	#,
.LBB93:
	.loc 1 9721 0
	movq	-32(%rbp), %rax	# pat, tmp165
	movzwl	(%rax), %eax	# pat_2->code, D.29423
	cmpw	$39, %ax	#, D.29423
	jne	.L1682	#,
	.loc 1 9721 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# pat, tmp166
	movq	8(%rax), %rax	# pat_2->fld[0].rtvec, D.29424
	movl	(%rax), %edx	# _61->num_elem, D.29422
	movl	-48(%rbp), %eax	# num_clobbers_to_add, num_clobbers_to_add.1148
	addl	%edx, %eax	# D.29422, iftmp.1147
	jmp	.L1683	#
.L1682:
	.loc 1 9721 0 discriminator 2
	movl	-48(%rbp), %eax	# num_clobbers_to_add, num_clobbers_to_add.1149
	addl	$1, %eax	#, iftmp.1147
.L1683:
	.loc 1 9721 0 discriminator 3
	movl	%eax, %edi	# iftmp.1147,
	call	rtvec_alloc	#
	movq	%rax, %rdx	# D.29424,
	movl	$0, %esi	#,
	movl	$39, %edi	#,
	call	gen_rtx_fmt_E	#
	movq	%rax, -8(%rbp)	# tmp167, newpat
	.loc 1 9727 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rax	# pat, tmp168
	movzwl	(%rax), %eax	# pat_2->code, D.29423
	cmpw	$39, %ax	#, D.29423
	jne	.L1684	#,
	.loc 1 9728 0
	movl	$0, -40(%rbp)	#, i
	jmp	.L1685	#
.L1686:
	.loc 1 9729 0 discriminator 2
	movq	-8(%rbp), %rax	# newpat, tmp169
	movq	8(%rax), %rax	# newpat_68->fld[0].rtvec, D.29424
	movq	-32(%rbp), %rdx	# pat, tmp170
	movq	8(%rdx), %rdx	# pat_2->fld[0].rtvec, D.29424
	movl	-40(%rbp), %ecx	# i, tmp172
	movslq	%ecx, %rcx	# tmp172, tmp171
	movq	8(%rdx,%rcx,8), %rcx	# _74->elem, D.29425
	movl	-40(%rbp), %edx	# i, tmp174
	movslq	%edx, %rdx	# tmp174, tmp173
	movq	%rcx, 8(%rax,%rdx,8)	# D.29425, _73->elem
	.loc 1 9728 0 discriminator 2
	addl	$1, -40(%rbp)	#, i
.L1685:
	.loc 1 9728 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# pat, tmp175
	movq	8(%rax), %rax	# pat_2->fld[0].rtvec, D.29424
	movl	(%rax), %eax	# _71->num_elem, D.29422
	cmpl	-40(%rbp), %eax	# i, D.29422
	jg	.L1686	#,
	jmp	.L1687	#
.L1684:
	.loc 1 9731 0 is_stmt 1
	movq	-8(%rbp), %rax	# newpat, tmp176
	movq	8(%rax), %rax	# newpat_68->fld[0].rtvec, D.29424
	movq	-32(%rbp), %rdx	# pat, tmp177
	movq	%rdx, 8(%rax)	# tmp177, _77->elem
.L1687:
	.loc 1 9733 0
	movl	-44(%rbp), %edx	# insn_code_number, tmp178
	movq	-8(%rbp), %rax	# newpat, tmp179
	movl	%edx, %esi	# tmp178,
	movq	%rax, %rdi	# tmp179,
	call	add_clobbers	#
	.loc 1 9735 0
	movq	-8(%rbp), %rax	# newpat, tmp180
	movq	8(%rax), %rax	# newpat_68->fld[0].rtvec, D.29424
	movl	(%rax), %edx	# _78->num_elem, D.29422
	movl	-48(%rbp), %eax	# num_clobbers_to_add, num_clobbers_to_add.1150
	subl	%eax, %edx	# num_clobbers_to_add.1150, tmp181
	movl	%edx, %eax	# tmp181, tmp181
	movl	%eax, -40(%rbp)	# tmp181, i
	jmp	.L1688	#
.L1690:
	.loc 1 9738 0
	movq	-8(%rbp), %rax	# newpat, tmp182
	movq	8(%rax), %rax	# newpat_68->fld[0].rtvec, D.29424
	movl	-40(%rbp), %edx	# i, tmp184
	movslq	%edx, %rdx	# tmp184, tmp183
	movq	8(%rax,%rdx,8), %rax	# _84->elem, D.29425
	movq	8(%rax), %rax	# _85->fld[0].rtx, D.29425
	movzwl	(%rax), %eax	# _86->code, D.29423
	cmpw	$61, %ax	#, D.29423
	jne	.L1689	#,
	.loc 1 9739 0
	movq	-8(%rbp), %rax	# newpat, tmp185
	movq	8(%rax), %rax	# newpat_68->fld[0].rtvec, D.29424
	movl	-40(%rbp), %edx	# i, tmp187
	movslq	%edx, %rdx	# tmp187, tmp186
	movq	8(%rax,%rdx,8), %rax	# _88->elem, D.29425
	movq	8(%rax), %rax	# _89->fld[0].rtx, D.29425
	movq	-64(%rbp), %rdx	# insn, tmp188
	movq	%rdx, %rsi	# tmp188,
	movq	%rax, %rdi	# D.29425,
	call	reg_dead_at_p	#
	testl	%eax, %eax	# D.29422
	jne	.L1689	#,
	.loc 1 9740 0
	movl	$-1, %eax	#, D.29422
	jmp	.L1691	#
.L1689:
	.loc 1 9741 0
	movq	-8(%rbp), %rax	# newpat, tmp189
	movq	8(%rax), %rax	# newpat_68->fld[0].rtvec, D.29424
	movl	-40(%rbp), %edx	# i, tmp191
	movslq	%edx, %rdx	# tmp191, tmp190
	movq	8(%rax,%rdx,8), %rax	# _93->elem, D.29425
	movq	8(%rax), %rax	# _94->fld[0].rtx, D.29425
	movq	-24(%rbp), %rdx	# notes, tmp192
	movq	%rdx, %rcx	# tmp192,
	movq	%rax, %rdx	# D.29425,
	movl	$10, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -24(%rbp)	# tmp193, notes
	.loc 1 9736 0
	addl	$1, -40(%rbp)	#, i
.L1688:
	.loc 1 9736 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# newpat, tmp194
	movq	8(%rax), %rax	# newpat_68->fld[0].rtvec, D.29424
	movl	(%rax), %eax	# _82->num_elem, D.29422
	.loc 1 9735 0 is_stmt 1 discriminator 1
	cmpl	-40(%rbp), %eax	# i, D.29422
	jg	.L1690	#,
	.loc 1 9744 0
	movq	-8(%rbp), %rax	# newpat, tmp195
	movq	%rax, -32(%rbp)	# tmp195, pat
.L1681:
.LBE93:
	.loc 1 9747 0
	movq	-56(%rbp), %rax	# pnewpat, tmp196
	movq	-32(%rbp), %rdx	# pat, tmp197
	movq	%rdx, (%rax)	# tmp197, *pnewpat_16(D)
	.loc 1 9748 0
	movq	-72(%rbp), %rax	# pnotes, tmp198
	movq	-24(%rbp), %rdx	# notes, tmp199
	movq	%rdx, (%rax)	# tmp199, *pnotes_99(D)
	.loc 1 9750 0
	movl	-44(%rbp), %eax	# insn_code_number, D.29422
.L1691:
	.loc 1 9751 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE40:
	.size	recog_for_combine, .-recog_for_combine
	.type	gen_lowpart_for_combine, @function
gen_lowpart_for_combine:
.LFB41:
	.loc 1 9768 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movl	%edi, -36(%rbp)	# mode, mode
	movq	%rsi, -48(%rbp)	# x, x
	.loc 1 9771 0
	movq	-48(%rbp), %rax	# x, tmp119
	movzbl	2(%rax), %eax	# x_4(D)->mode, D.29429
	movzbl	%al, %eax	# D.29429, D.29430
	cmpl	-36(%rbp), %eax	# mode, D.29430
	jne	.L1693	#,
	.loc 1 9772 0
	movq	-48(%rbp), %rax	# x, D.29428
	jmp	.L1694	#
.L1693:
	.loc 1 9777 0
	movl	-36(%rbp), %eax	# mode, mode.1151
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29429
	movzbl	%al, %edx	# D.29429, D.29431
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1153
	andl	$33554432, %eax	#, D.29431
	testl	%eax, %eax	# D.29431
	je	.L1695	#,
	.loc 1 9777 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1152
	jmp	.L1696	#
.L1695:
	.loc 1 9777 0 discriminator 2
	movl	$4, %eax	#, iftmp.1152
.L1696:
	.loc 1 9777 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.1152, D.29431
	jle	.L1697	#,
	.loc 1 9778 0 is_stmt 1
	movq	-48(%rbp), %rax	# x, tmp121
	movzbl	2(%rax), %eax	# x_4(D)->mode, D.29429
	testb	%al, %al	# D.29429
	jne	.L1698	#,
	.loc 1 9779 0
	movq	-48(%rbp), %rax	# x, tmp122
	movzwl	(%rax), %eax	# x_4(D)->code, D.29432
	cmpw	$54, %ax	#, D.29432
	je	.L1697	#,
	.loc 1 9780 0
	movq	-48(%rbp), %rax	# x, tmp123
	movzwl	(%rax), %eax	# x_4(D)->code, D.29432
	cmpw	$55, %ax	#, D.29432
	je	.L1697	#,
.L1698:
	.loc 1 9781 0 discriminator 1
	movq	-48(%rbp), %rax	# x, tmp124
	movzbl	2(%rax), %eax	# x_4(D)->mode, D.29429
	movzbl	%al, %eax	# D.29429, D.29431
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29429
	movl	-36(%rbp), %eax	# mode, mode.1154
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29429
	.loc 1 9778 0 discriminator 1
	cmpb	%al, %dl	# D.29429, D.29429
	je	.L1697	#,
	.loc 1 9782 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29433
	movq	-48(%rbp), %rax	# x, tmp127
	movzbl	2(%rax), %eax	# x_4(D)->mode, D.29429
	movzbl	%al, %eax	# D.29429, D.29434
	movl	%eax, %esi	# D.29434,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L1694	#
.L1697:
	.loc 1 9787 0
	movq	-48(%rbp), %rax	# x, tmp128
	movzwl	(%rax), %eax	# x_4(D)->code, D.29432
	cmpw	$63, %ax	#, D.29432
	jne	.L1699	#,
	.loc 1 9787 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# x, tmp129
	movq	8(%rax), %rax	# x_4(D)->fld[0].rtx, D.29433
	movzwl	(%rax), %eax	# _29->code, D.29432
	cmpw	$66, %ax	#, D.29432
	jne	.L1699	#,
	.loc 1 9789 0 is_stmt 1
	movq	-48(%rbp), %rax	# x, tmp130
	movq	8(%rax), %rax	# x_4(D)->fld[0].rtx, tmp131
	movq	%rax, -48(%rbp)	# tmp131, x
	.loc 1 9790 0
	movq	-48(%rbp), %rax	# x, tmp132
	movzbl	2(%rax), %eax	# x_31->mode, D.29429
	movzbl	%al, %eax	# D.29429, D.29430
	cmpl	-36(%rbp), %eax	# mode, D.29430
	jne	.L1699	#,
	.loc 1 9791 0
	movq	-48(%rbp), %rax	# x, D.29428
	jmp	.L1694	#
.L1699:
	.loc 1 9794 0
	movq	-48(%rbp), %rdx	# x, tmp133
	movl	-36(%rbp), %eax	# mode, tmp134
	movq	%rdx, %rsi	# tmp133,
	movl	%eax, %edi	# tmp134,
	call	gen_lowpart_common	#
	movq	%rax, -16(%rbp)	# tmp135, result
	.loc 1 9805 0
	cmpq	$0, -16(%rbp)	#, result
	je	.L1700	#,
	.loc 1 9806 0
	movq	-16(%rbp), %rax	# result, D.29428
	jmp	.L1694	#
.L1700:
	.loc 1 9808 0
	movq	-48(%rbp), %rax	# x, tmp136
	movzwl	(%rax), %eax	# x_1->code, D.29432
	cmpw	$66, %ax	#, D.29432
	jne	.L1701	#,
.LBB94:
	.loc 1 9810 0
	movl	$0, -24(%rbp)	#, offset
	.loc 1 9814 0
	movq	-48(%rbp), %rax	# x, tmp137
	movzbl	3(%rax), %eax	# *x_1, D.29429
	andl	$8, %eax	#, D.29429
	testb	%al, %al	# D.29429
	jne	.L1702	#,
	.loc 1 9814 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# x, tmp138
	movq	8(%rax), %rax	# x_1->fld[0].rtx, D.29433
	movq	%rax, %rdi	# D.29433,
	call	mode_dependent_address_p	#
	testl	%eax, %eax	# D.29431
	je	.L1703	#,
.L1702:
	.loc 1 9815 0 is_stmt 1
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29433
	movq	-48(%rbp), %rax	# x, tmp139
	movzbl	2(%rax), %eax	# x_1->mode, D.29429
	movzbl	%al, %eax	# D.29429, D.29434
	movl	%eax, %esi	# D.29434,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L1694	#
.L1703:
	.loc 1 9820 0
	movq	-48(%rbp), %rax	# x, tmp140
	movzbl	2(%rax), %eax	# x_1->mode, D.29429
	movzbl	%al, %eax	# D.29429, D.29431
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29429
	movl	-36(%rbp), %eax	# mode, mode.1155
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29429
	cmpb	%al, %dl	# D.29429, D.29429
	jae	.L1704	#,
	.loc 1 9821 0
	movq	-48(%rbp), %rcx	# x, tmp143
	movl	-36(%rbp), %eax	# mode, tmp144
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp143,
	movl	%eax, %edi	# tmp144,
	call	gen_rtx_SUBREG	#
	jmp	.L1694	#
.L1704:
	.loc 1 9835 0
	movl	-24(%rbp), %eax	# offset, tmp145
	movslq	%eax, %rdx	# tmp145, D.29435
	movl	-36(%rbp), %esi	# mode, tmp146
	movq	-48(%rbp), %rax	# x, tmp147
	movl	$1, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp147,
	call	adjust_address_1	#
	jmp	.L1694	#
.L1701:
.LBE94:
	.loc 1 9840 0
	movq	-48(%rbp), %rax	# x, tmp148
	movzwl	(%rax), %eax	# x_1->code, D.29432
	movzwl	%ax, %eax	# D.29432, D.29431
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29436
	cmpb	$60, %al	#, D.29436
	jne	.L1705	#,
	.loc 1 9841 0
	movq	-48(%rbp), %rax	# x, tmp150
	movq	16(%rax), %rcx	# x_1->fld[1].rtx, D.29433
	movq	-48(%rbp), %rax	# x, tmp151
	movq	8(%rax), %rdx	# x_1->fld[0].rtx, D.29433
	movq	-48(%rbp), %rax	# x, tmp152
	movzwl	(%rax), %eax	# x_1->code, D.29432
	movzwl	%ax, %eax	# D.29432, D.29437
	movl	-36(%rbp), %esi	# mode, tmp153
	movl	%eax, %edi	# D.29437,
	call	gen_rtx_fmt_ee	#
	jmp	.L1694	#
.L1705:
.LBB95:
	.loc 1 9848 0
	movl	$0, -20(%rbp)	#, offset
	.loc 1 9854 0
	movq	-48(%rbp), %rax	# x, tmp154
	movzbl	2(%rax), %eax	# x_1->mode, D.29429
	testb	%al, %al	# D.29429
	jne	.L1706	#,
	.loc 1 9855 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29433
	movq	-48(%rbp), %rax	# x, tmp155
	movzbl	2(%rax), %eax	# x_1->mode, D.29429
	movzbl	%al, %eax	# D.29429, D.29434
	movl	%eax, %esi	# D.29434,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	jmp	.L1694	#
.L1706:
	.loc 1 9857 0
	movq	-48(%rbp), %rax	# x, tmp156
	movzbl	2(%rax), %eax	# x_1->mode, D.29429
	movzbl	%al, %edx	# D.29429, D.29434
	movl	-36(%rbp), %eax	# mode, tmp157
	movl	%edx, %esi	# D.29434,
	movl	%eax, %edi	# tmp157,
	call	subreg_lowpart_offset	#
	movl	%eax, -20(%rbp)	# D.29430, offset
	.loc 1 9858 0
	movl	-20(%rbp), %ecx	# offset, offset.1166
	movq	-48(%rbp), %rax	# x, tmp158
	movzbl	2(%rax), %eax	# x_1->mode, D.29429
	movzbl	%al, %edx	# D.29429, D.29434
	movq	-48(%rbp), %rsi	# x, tmp159
	movl	-36(%rbp), %eax	# mode, tmp160
	movl	%eax, %edi	# tmp160,
	call	simplify_gen_subreg	#
	movq	%rax, -8(%rbp)	# tmp161, res
	.loc 1 9859 0
	cmpq	$0, -8(%rbp)	#, res
	je	.L1707	#,
	.loc 1 9860 0
	movq	-8(%rbp), %rax	# res, D.29428
	jmp	.L1694	#
.L1707:
	.loc 1 9861 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29433
	movq	-48(%rbp), %rax	# x, tmp162
	movzbl	2(%rax), %eax	# x_1->mode, D.29429
	movzbl	%al, %eax	# D.29429, D.29434
	movl	%eax, %esi	# D.29434,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
.L1694:
.LBE95:
	.loc 1 9863 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE41:
	.size	gen_lowpart_for_combine, .-gen_lowpart_for_combine
	.type	gen_binary, @function
gen_binary:
.LFB42:
	.loc 1 9873 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movl	%edi, -36(%rbp)	# code, code
	movl	%esi, -40(%rbp)	# mode, mode
	movq	%rdx, -48(%rbp)	# op0, op0
	movq	%rcx, -56(%rbp)	# op1, op1
	.loc 1 9877 0
	movl	-36(%rbp), %eax	# code, code.1167
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29439
	cmpb	$99, %al	#, D.29439
	jne	.L1709	#,
	.loc 1 9878 0
	movq	-56(%rbp), %rdx	# op1, tmp83
	movq	-48(%rbp), %rax	# op0, tmp84
	movq	%rdx, %rsi	# tmp83,
	movq	%rax, %rdi	# tmp84,
	call	swap_commutative_operands_p	#
	testl	%eax, %eax	# D.29440
	je	.L1709	#,
	.loc 1 9879 0
	movq	-48(%rbp), %rax	# op0, tmp85
	movq	%rax, -8(%rbp)	# tmp85, tem
	movq	-56(%rbp), %rax	# op1, tmp86
	movq	%rax, -48(%rbp)	# tmp86, op0
	movq	-8(%rbp), %rax	# tem, tmp87
	movq	%rax, -56(%rbp)	# tmp87, op1
.L1709:
	.loc 1 9881 0
	movl	-36(%rbp), %eax	# code, code.1168
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29439
	cmpb	$60, %al	#, D.29439
	jne	.L1710	#,
.LBB96:
	.loc 1 9883 0
	movq	-48(%rbp), %rax	# op0, tmp89
	movzbl	2(%rax), %eax	# op0_1->mode, D.29441
	movzbl	%al, %eax	# D.29441, tmp90
	movl	%eax, -20(%rbp)	# tmp90, op_mode
	.loc 1 9887 0
	movq	-48(%rbp), %rax	# op0, tmp91
	movzwl	(%rax), %eax	# op0_1->code, D.29442
	cmpw	$74, %ax	#, D.29442
	jne	.L1711	#,
	.loc 1 9887 0 is_stmt 0 discriminator 1
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29443
	cmpq	-56(%rbp), %rax	# op1, D.29443
	jne	.L1711	#,
	.loc 1 9889 0 is_stmt 1
	movq	-48(%rbp), %rax	# op0, tmp92
	movq	16(%rax), %rax	# op0_1->fld[1].rtx, tmp93
	movq	%rax, -56(%rbp)	# tmp93, op1
	.loc 1 9890 0
	movq	-48(%rbp), %rax	# op0, tmp94
	movq	8(%rax), %rax	# op0_1->fld[0].rtx, tmp95
	movq	%rax, -48(%rbp)	# tmp95, op0
	.loc 1 9891 0
	movq	-48(%rbp), %rax	# op0, tmp96
	movzbl	2(%rax), %eax	# op0_27->mode, D.29441
	movzbl	%al, %eax	# D.29441, tmp97
	movl	%eax, -20(%rbp)	# tmp97, op_mode
.L1711:
	.loc 1 9894 0
	cmpl	$0, -20(%rbp)	#, op_mode
	jne	.L1712	#,
	.loc 1 9895 0
	movq	-56(%rbp), %rax	# op1, tmp98
	movzbl	2(%rax), %eax	# op1_5->mode, D.29441
	movzbl	%al, %eax	# D.29441, tmp99
	movl	%eax, -20(%rbp)	# tmp99, op_mode
.L1712:
	.loc 1 9896 0
	movq	-56(%rbp), %rcx	# op1, tmp100
	movq	-48(%rbp), %rdx	# op0, tmp101
	movl	-20(%rbp), %esi	# op_mode, tmp102
	movl	-36(%rbp), %eax	# code, tmp103
	movl	%eax, %edi	# tmp103,
	call	simplify_relational_operation	#
	movq	%rax, -16(%rbp)	# tmp104, result
.LBE96:
	jmp	.L1713	#
.L1710:
	.loc 1 9899 0
	movq	-56(%rbp), %rcx	# op1, tmp105
	movq	-48(%rbp), %rdx	# op0, tmp106
	movl	-40(%rbp), %esi	# mode, tmp107
	movl	-36(%rbp), %eax	# code, tmp108
	movl	%eax, %edi	# tmp108,
	call	simplify_binary_operation	#
	movq	%rax, -16(%rbp)	# tmp109, result
.L1713:
	.loc 1 9901 0
	cmpq	$0, -16(%rbp)	#, result
	je	.L1714	#,
	.loc 1 9902 0
	movq	-16(%rbp), %rax	# result, D.29438
	jmp	.L1715	#
.L1714:
	.loc 1 9905 0
	movl	-36(%rbp), %eax	# code, code.1169
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29439
	cmpb	$99, %al	#, D.29439
	jne	.L1716	#,
	.loc 1 9906 0
	movq	-56(%rbp), %rdx	# op1, tmp111
	movq	-48(%rbp), %rax	# op0, tmp112
	movq	%rdx, %rsi	# tmp111,
	movq	%rax, %rdi	# tmp112,
	call	swap_commutative_operands_p	#
	testl	%eax, %eax	# D.29440
	je	.L1716	#,
	.loc 1 9907 0
	movq	-48(%rbp), %rcx	# op0, tmp113
	movq	-56(%rbp), %rdx	# op1, tmp114
	movl	-40(%rbp), %esi	# mode, tmp115
	movl	-36(%rbp), %eax	# code, tmp116
	movl	%eax, %edi	# tmp116,
	call	gen_rtx_fmt_ee	#
	jmp	.L1715	#
.L1716:
	.loc 1 9911 0
	cmpl	$83, -36(%rbp)	#, code
	jne	.L1717	#,
	.loc 1 9911 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# op1, tmp117
	movzwl	(%rax), %eax	# op1_6->code, D.29442
	cmpw	$54, %ax	#, D.29442
	jne	.L1717	#,
	.loc 1 9912 0 is_stmt 1
	movl	-40(%rbp), %eax	# mode, mode.1170
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29442
	cmpw	$64, %ax	#, D.29442
	ja	.L1717	#,
	.loc 1 9913 0
	movl	-40(%rbp), %edx	# mode, tmp119
	movq	-48(%rbp), %rax	# op0, tmp120
	movl	%edx, %esi	# tmp119,
	movq	%rax, %rdi	# tmp120,
	call	nonzero_bits	#
	movq	-56(%rbp), %rdx	# op1, tmp121
	movq	8(%rdx), %rdx	# op1_6->fld[0].rtwint, D.29445
	notq	%rdx	# D.29445
	andq	%rdx, %rax	# D.29444, D.29444
	testq	%rax, %rax	# D.29444
	jne	.L1717	#,
	.loc 1 9914 0
	movq	-48(%rbp), %rax	# op0, D.29438
	jmp	.L1715	#
.L1717:
	.loc 1 9916 0
	movq	-56(%rbp), %rcx	# op1, tmp122
	movq	-48(%rbp), %rdx	# op0, tmp123
	movl	-40(%rbp), %esi	# mode, tmp124
	movl	-36(%rbp), %eax	# code, tmp125
	movl	%eax, %edi	# tmp125,
	call	gen_rtx_fmt_ee	#
.L1715:
	.loc 1 9917 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE42:
	.size	gen_binary, .-gen_binary
	.type	simplify_comparison, @function
simplify_comparison:
.LFB43:
	.loc 1 9935 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$216, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -196(%rbp)	# code, code
	movq	%rsi, -208(%rbp)	# pop0, pop0
	movq	%rdx, -216(%rbp)	# pop1, pop1
	.loc 1 9936 0
	movq	-208(%rbp), %rax	# pop0, tmp859
	movq	(%rax), %rax	# *pop0_94(D), tmp860
	movq	%rax, -136(%rbp)	# tmp860, op0
	.loc 1 9937 0
	movq	-216(%rbp), %rax	# pop1, tmp861
	movq	(%rax), %rax	# *pop1_96(D), tmp862
	movq	%rax, -128(%rbp)	# tmp862, op1
.L1739:
	.loc 1 9948 0
	cmpl	$109, -196(%rbp)	#, code
	je	.L1719	#,
	.loc 1 9948 0 is_stmt 0 discriminator 1
	cmpl	$108, -196(%rbp)	#, code
	je	.L1719	#,
	cmpl	$111, -196(%rbp)	#, code
	je	.L1719	#,
	cmpl	$110, -196(%rbp)	#, code
	je	.L1719	#,
	.loc 1 9949 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp863
	movzwl	(%rax), %eax	# op0_21->code, D.29446
	cmpw	$89, %ax	#, D.29446
	jne	.L1719	#,
	.loc 1 9949 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# op1, tmp864
	movzwl	(%rax), %eax	# op1_33->code, D.29446
	cmpw	$89, %ax	#, D.29446
	jne	.L1719	#,
	.loc 1 9950 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp865
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _101->code, D.29446
	cmpw	$87, %ax	#, D.29446
	jne	.L1719	#,
	.loc 1 9951 0
	movq	-128(%rbp), %rax	# op1, tmp866
	movq	8(%rax), %rax	# op1_33->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _103->code, D.29446
	cmpw	$87, %ax	#, D.29446
	jne	.L1719	#,
	.loc 1 9952 0
	movq	-136(%rbp), %rax	# op0, tmp867
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _105->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _106->code, D.29446
	cmpw	$63, %ax	#, D.29446
	jne	.L1719	#,
	.loc 1 9953 0
	movq	-128(%rbp), %rax	# op1, tmp868
	movq	8(%rax), %rax	# op1_33->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _108->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _109->code, D.29446
	cmpw	$63, %ax	#, D.29446
	jne	.L1719	#,
	.loc 1 9954 0
	movq	-136(%rbp), %rax	# op0, tmp869
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _111->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _112->fld[0].rtx, D.29447
	movzbl	2(%rax), %edx	# _113->mode, D.29448
	.loc 1 9955 0
	movq	-128(%rbp), %rax	# op1, tmp870
	movq	8(%rax), %rax	# op1_33->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _115->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _116->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _117->mode, D.29448
	.loc 1 9954 0
	cmpb	%al, %dl	# D.29448, D.29448
	jne	.L1719	#,
	.loc 1 9956 0
	movq	-136(%rbp), %rax	# op0, tmp871
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _119->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1719	#,
	.loc 1 9957 0
	movq	-128(%rbp), %rax	# op1, tmp872
	movq	16(%rax), %rax	# op1_33->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _121->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1719	#,
	.loc 1 9958 0
	movq	-136(%rbp), %rax	# op0, tmp873
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _123->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _124->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1719	#,
	.loc 1 9959 0
	movq	-128(%rbp), %rax	# op1, tmp874
	movq	8(%rax), %rax	# op1_33->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _126->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _127->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1719	#,
	.loc 1 9960 0
	movq	-136(%rbp), %rax	# op0, tmp875
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29447
	movq	8(%rax), %rdx	# _129->fld[0].rtwint, D.29449
	movq	-128(%rbp), %rax	# op1, tmp876
	movq	16(%rax), %rax	# op1_33->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _131->fld[0].rtwint, D.29449
	cmpq	%rax, %rdx	# D.29449, D.29449
	jne	.L1719	#,
	.loc 1 9961 0
	movq	-136(%rbp), %rax	# op0, tmp877
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29447
	movq	8(%rax), %rdx	# _133->fld[0].rtwint, D.29449
	movq	-136(%rbp), %rax	# op0, tmp878
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _135->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _136->fld[0].rtwint, D.29449
	cmpq	%rax, %rdx	# D.29449, D.29449
	jne	.L1719	#,
	.loc 1 9962 0
	movq	-136(%rbp), %rax	# op0, tmp879
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29447
	movq	8(%rax), %rdx	# _138->fld[0].rtwint, D.29449
	movq	-128(%rbp), %rax	# op1, tmp880
	movq	8(%rax), %rax	# op1_33->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _140->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _141->fld[0].rtwint, D.29449
	cmpq	%rax, %rdx	# D.29449, D.29449
	jne	.L1719	#,
	.loc 1 9963 0
	movq	-136(%rbp), %rax	# op0, tmp881
	movq	16(%rax), %rax	# op0_21->fld[1].rtx, D.29447
	movq	8(%rax), %rdx	# _143->fld[0].rtwint, D.29449
	.loc 1 9964 0
	movq	-136(%rbp), %rax	# op0, tmp882
	movzbl	2(%rax), %eax	# op0_21->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	.loc 1 9965 0
	movzwl	%ax, %ecx	# D.29446, D.29450
	movq	-136(%rbp), %rax	# op0, tmp884
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _149->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _150->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _151->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	movzwl	%ax, %eax	# D.29446, D.29450
	subl	%eax, %ecx	# D.29450, D.29450
	movl	%ecx, %eax	# D.29450, D.29450
	.loc 1 9964 0
	cltq
	.loc 1 9963 0
	cmpq	%rax, %rdx	# D.29449, D.29449
	jne	.L1719	#,
	.loc 1 9968 0
	movq	-136(%rbp), %rax	# op0, tmp886
	movq	8(%rax), %rax	# op0_21->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _158->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _159->fld[0].rtx, tmp887
	movq	%rax, -136(%rbp)	# tmp887, op0
	.loc 1 9969 0
	movq	-128(%rbp), %rax	# op1, tmp888
	movq	8(%rax), %rax	# op1_33->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _161->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _162->fld[0].rtx, tmp889
	movq	%rax, -128(%rbp)	# tmp889, op1
.L1719:
	.loc 1 9977 0
	movq	-136(%rbp), %rax	# op0, tmp890
	movzwl	(%rax), %edx	# op0_22->code, D.29446
	movq	-128(%rbp), %rax	# op1, tmp891
	movzwl	(%rax), %eax	# op1_34->code, D.29446
	cmpw	%ax, %dx	# D.29446, D.29446
	jne	.L1720	#,
	.loc 1 9978 0
	movq	-136(%rbp), %rax	# op0, tmp892
	movzbl	2(%rax), %eax	# op0_22->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	cmpw	$64, %ax	#, D.29446
	ja	.L1720	#,
	.loc 1 9979 0
	movq	-136(%rbp), %rax	# op0, tmp894
	movzwl	(%rax), %eax	# op0_22->code, D.29446
	cmpw	$88, %ax	#, D.29446
	jne	.L1721	#,
	.loc 1 9979 0 is_stmt 0 discriminator 1
	cmpl	$102, -196(%rbp)	#, code
	je	.L1722	#,
	cmpl	$103, -196(%rbp)	#, code
	je	.L1722	#,
.L1721:
	.loc 1 9980 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp895
	movzwl	(%rax), %eax	# op0_22->code, D.29446
	cmpw	$90, %ax	#, D.29446
	je	.L1723	#,
	.loc 1 9980 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# op0, tmp896
	movzwl	(%rax), %eax	# op0_22->code, D.29446
	cmpw	$87, %ax	#, D.29446
	jne	.L1724	#,
.L1723:
	.loc 1 9981 0 is_stmt 1
	cmpl	$105, -196(%rbp)	#, code
	je	.L1724	#,
	.loc 1 9981 0 is_stmt 0 discriminator 1
	cmpl	$107, -196(%rbp)	#, code
	je	.L1724	#,
	cmpl	$104, -196(%rbp)	#, code
	je	.L1724	#,
	cmpl	$106, -196(%rbp)	#, code
	jne	.L1722	#,
.L1724:
	.loc 1 9982 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp897
	movzwl	(%rax), %eax	# op0_22->code, D.29446
	cmpw	$89, %ax	#, D.29446
	jne	.L1720	#,
	.loc 1 9983 0
	cmpl	$109, -196(%rbp)	#, code
	je	.L1720	#,
	.loc 1 9983 0 is_stmt 0 discriminator 1
	cmpl	$111, -196(%rbp)	#, code
	je	.L1720	#,
	.loc 1 9984 0 is_stmt 1
	cmpl	$108, -196(%rbp)	#, code
	je	.L1720	#,
	.loc 1 9984 0 is_stmt 0 discriminator 1
	cmpl	$110, -196(%rbp)	#, code
	je	.L1720	#,
.L1722:
	.loc 1 9985 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp898
	movq	16(%rax), %rax	# op0_22->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _173->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1720	#,
	.loc 1 9986 0
	movq	-136(%rbp), %rax	# op0, tmp899
	movq	16(%rax), %rax	# op0_22->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _175->fld[0].rtwint, D.29449
	testq	%rax, %rax	# D.29449
	js	.L1720	#,
	.loc 1 9987 0
	movq	-136(%rbp), %rax	# op0, tmp900
	movq	16(%rax), %rax	# op0_22->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _177->fld[0].rtwint, D.29449
	cmpq	$63, %rax	#, D.29449
	jg	.L1720	#,
	.loc 1 9988 0
	movq	-136(%rbp), %rax	# op0, tmp901
	movq	16(%rax), %rdx	# op0_22->fld[1].rtx, D.29447
	movq	-128(%rbp), %rax	# op1, tmp902
	movq	16(%rax), %rax	# op1_34->fld[1].rtx, D.29447
	cmpq	%rax, %rdx	# D.29447, D.29447
	jne	.L1720	#,
.LBB97:
	.loc 1 9990 0
	movq	-136(%rbp), %rax	# op0, tmp903
	movzbl	2(%rax), %eax	# op0_22->mode, D.29448
	movzbl	%al, %eax	# D.29448, tmp904
	movl	%eax, -176(%rbp)	# tmp904, mode
	.loc 1 9991 0
	movl	-176(%rbp), %eax	# mode, mode.1171
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, tmp906
	movq	%rax, -104(%rbp)	# tmp906, mask
	.loc 1 9992 0
	movq	-136(%rbp), %rax	# op0, tmp907
	movq	16(%rax), %rax	# op0_22->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _185->fld[0].rtwint, D.29449
	movl	%eax, -172(%rbp)	# D.29449, shift_count
	.loc 1 9994 0
	movq	-136(%rbp), %rax	# op0, tmp908
	movzwl	(%rax), %eax	# op0_22->code, D.29446
	cmpw	$90, %ax	#, D.29446
	je	.L1725	#,
	.loc 1 9994 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# op0, tmp909
	movzwl	(%rax), %eax	# op0_22->code, D.29446
	cmpw	$89, %ax	#, D.29446
	jne	.L1726	#,
.L1725:
	.loc 1 9995 0 is_stmt 1
	movl	-172(%rbp), %eax	# shift_count, tmp910
	movq	-104(%rbp), %rdx	# mask, tmp911
	movl	%eax, %ecx	# tmp910, tmp1494
	shrq	%cl, %rdx	# tmp1494, D.29451
	movl	-172(%rbp), %eax	# shift_count, tmp912
	movl	%eax, %ecx	# tmp912, tmp1496
	salq	%cl, %rdx	# tmp1496, D.29451
	movq	%rdx, %rax	# D.29451, D.29451
	andq	%rax, -104(%rbp)	# D.29451, mask
	jmp	.L1727	#
.L1726:
	.loc 1 9996 0
	movq	-136(%rbp), %rax	# op0, tmp913
	movzwl	(%rax), %eax	# op0_22->code, D.29446
	cmpw	$87, %ax	#, D.29446
	jne	.L1727	#,
	.loc 1 9997 0
	movl	-172(%rbp), %eax	# shift_count, tmp914
	movq	-104(%rbp), %rdx	# mask, tmp915
	movl	%eax, %ecx	# tmp914, tmp1498
	salq	%cl, %rdx	# tmp1498, D.29451
	movq	%rdx, %rax	# D.29451, D.29451
	andq	-104(%rbp), %rax	# mask, D.29451
	movq	%rax, %rdx	# D.29451, D.29451
	movl	-172(%rbp), %eax	# shift_count, tmp916
	movl	%eax, %ecx	# tmp916, tmp1501
	shrq	%cl, %rdx	# tmp1501, tmp917
	movq	%rdx, %rax	# tmp917, tmp917
	movq	%rax, -104(%rbp)	# tmp917, mask
.L1727:
	.loc 1 9999 0
	movq	-136(%rbp), %rax	# op0, tmp918
	movq	8(%rax), %rax	# op0_22->fld[0].rtx, D.29447
	movl	-176(%rbp), %edx	# mode, tmp919
	movl	%edx, %esi	# tmp919,
	movq	%rax, %rdi	# D.29447,
	call	nonzero_bits	#
	movq	-104(%rbp), %rdx	# mask, tmp920
	notq	%rdx	# D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	testq	%rax, %rax	# D.29451
	jne	.L1728	#,
	.loc 1 10000 0
	movq	-128(%rbp), %rax	# op1, tmp921
	movq	8(%rax), %rax	# op1_34->fld[0].rtx, D.29447
	movl	-176(%rbp), %edx	# mode, tmp922
	movl	%edx, %esi	# tmp922,
	movq	%rax, %rdi	# D.29447,
	call	nonzero_bits	#
	movq	-104(%rbp), %rdx	# mask, tmp923
	notq	%rdx	# D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	testq	%rax, %rax	# D.29451
	jne	.L1728	#,
	.loc 1 10001 0
	movq	-136(%rbp), %rax	# op0, tmp924
	movq	8(%rax), %rax	# op0_22->fld[0].rtx, tmp925
	movq	%rax, -136(%rbp)	# tmp925, op0
	movq	-128(%rbp), %rax	# op1, tmp926
	movq	8(%rax), %rax	# op1_34->fld[0].rtx, tmp927
	movq	%rax, -128(%rbp)	# tmp927, op1
.LBE97:
	.loc 1 9989 0
	jmp	.L1729	#
.L1720:
	.loc 1 10019 0
	movq	-136(%rbp), %rax	# op0, tmp928
	movzwl	(%rax), %eax	# op0_22->code, D.29446
	cmpw	$83, %ax	#, D.29446
	jne	.L1730	#,
	.loc 1 10019 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# op1, tmp929
	movzwl	(%rax), %eax	# op1_34->code, D.29446
	cmpw	$83, %ax	#, D.29446
	jne	.L1730	#,
	.loc 1 10020 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp930
	movq	16(%rax), %rax	# op0_22->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _209->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1730	#,
	.loc 1 10021 0
	movq	-128(%rbp), %rax	# op1, tmp931
	movq	16(%rax), %rax	# op1_34->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _211->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1730	#,
.LBB98:
	.loc 1 10023 0
	movq	-136(%rbp), %rax	# op0, tmp932
	movq	8(%rax), %rax	# op0_22->fld[0].rtx, tmp933
	movq	%rax, -80(%rbp)	# tmp933, inner_op0
	.loc 1 10024 0
	movq	-128(%rbp), %rax	# op1, tmp934
	movq	8(%rax), %rax	# op1_34->fld[0].rtx, tmp935
	movq	%rax, -72(%rbp)	# tmp935, inner_op1
	.loc 1 10025 0
	movq	-136(%rbp), %rax	# op0, tmp936
	movq	16(%rax), %rax	# op0_22->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _215->fld[0].rtwint, tmp937
	movq	%rax, -64(%rbp)	# tmp937, c0
	.loc 1 10026 0
	movq	-128(%rbp), %rax	# op1, tmp938
	movq	16(%rax), %rax	# op1_34->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _217->fld[0].rtwint, tmp939
	movq	%rax, -56(%rbp)	# tmp939, c1
	.loc 1 10027 0
	movl	$0, -184(%rbp)	#, changed
	.loc 1 10029 0
	movq	-80(%rbp), %rax	# inner_op0, tmp940
	movzwl	(%rax), %eax	# inner_op0_213->code, D.29446
	cmpw	$63, %ax	#, D.29446
	jne	.L1731	#,
	.loc 1 10029 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# inner_op1, tmp941
	movzwl	(%rax), %eax	# inner_op1_214->code, D.29446
	cmpw	$63, %ax	#, D.29446
	jne	.L1731	#,
	.loc 1 10030 0 is_stmt 1
	movq	-80(%rbp), %rax	# inner_op0, tmp942
	movzbl	2(%rax), %eax	# inner_op0_213->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29448
	.loc 1 10031 0
	movq	-80(%rbp), %rax	# inner_op0, tmp944
	movq	8(%rax), %rax	# inner_op0_213->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _225->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29448
	.loc 1 10030 0
	cmpb	%al, %dl	# D.29448, D.29448
	jbe	.L1731	#,
	.loc 1 10032 0
	movq	-80(%rbp), %rax	# inner_op0, tmp946
	movq	8(%rax), %rax	# inner_op0_213->fld[0].rtx, D.29447
	movzbl	2(%rax), %edx	# _229->mode, D.29448
	.loc 1 10033 0
	movq	-72(%rbp), %rax	# inner_op1, tmp947
	movq	8(%rax), %rax	# inner_op1_214->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _231->mode, D.29448
	.loc 1 10032 0
	cmpb	%al, %dl	# D.29448, D.29448
	jne	.L1731	#,
	.loc 1 10034 0
	movq	-80(%rbp), %rax	# inner_op0, tmp948
	movq	8(%rax), %rax	# inner_op0_213->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _233->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	cmpw	$64, %ax	#, D.29446
	ja	.L1731	#,
	.loc 1 10036 0
	movq	-64(%rbp), %rax	# c0, tmp950
	notq	%rax	# D.29449
	movq	%rax, %rbx	# D.29449, D.29451
	.loc 1 10037 0
	movq	-80(%rbp), %rax	# inner_op0, tmp951
	movq	8(%rax), %rax	# inner_op0_213->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _239->mode, D.29448
	.loc 1 10036 0
	movzbl	%al, %edx	# D.29448, D.29452
	movq	-80(%rbp), %rax	# inner_op0, tmp952
	movq	8(%rax), %rax	# inner_op0_213->fld[0].rtx, D.29447
	movl	%edx, %esi	# D.29452,
	movq	%rax, %rdi	# D.29447,
	call	nonzero_bits	#
	andq	%rbx, %rax	# D.29451, D.29451
	testq	%rax, %rax	# D.29451
	jne	.L1731	#,
	.loc 1 10038 0
	movq	-56(%rbp), %rax	# c1, tmp953
	notq	%rax	# D.29449
	movq	%rax, %rbx	# D.29449, D.29451
	.loc 1 10039 0
	movq	-72(%rbp), %rax	# inner_op1, tmp954
	movq	8(%rax), %rax	# inner_op1_214->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _247->mode, D.29448
	.loc 1 10038 0
	movzbl	%al, %edx	# D.29448, D.29452
	movq	-72(%rbp), %rax	# inner_op1, tmp955
	movq	8(%rax), %rax	# inner_op1_214->fld[0].rtx, D.29447
	movl	%edx, %esi	# D.29452,
	movq	%rax, %rdi	# D.29447,
	call	nonzero_bits	#
	andq	%rbx, %rax	# D.29451, D.29451
	testq	%rax, %rax	# D.29451
	jne	.L1731	#,
	.loc 1 10041 0
	movq	-80(%rbp), %rax	# inner_op0, tmp956
	movq	8(%rax), %rax	# inner_op0_213->fld[0].rtx, tmp957
	movq	%rax, -136(%rbp)	# tmp957, op0
	.loc 1 10042 0
	movq	-72(%rbp), %rax	# inner_op1, tmp958
	movq	8(%rax), %rax	# inner_op1_214->fld[0].rtx, tmp959
	movq	%rax, -128(%rbp)	# tmp959, op1
	.loc 1 10046 0
	movl	-196(%rbp), %eax	# code, tmp960
	movl	%eax, %edi	# tmp960,
	call	unsigned_condition	#
	movl	%eax, -196(%rbp)	# tmp961, code
	.loc 1 10048 0
	movl	$1, -184(%rbp)	#, changed
	jmp	.L1732	#
.L1731:
	.loc 1 10051 0
	movq	-64(%rbp), %rax	# c0, tmp962
	cmpq	-56(%rbp), %rax	# c1, tmp962
	jne	.L1732	#,
	.loc 1 10052 0
	movq	-136(%rbp), %rax	# op0, tmp963
	movzbl	2(%rax), %eax	# op0_22->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29453
	cltq
	movl	class_narrowest_mode(,%rax,4), %eax	# class_narrowest_mode, tmp966
	movl	%eax, -188(%rbp)	# tmp966, tmode
	jmp	.L1733	#
.L1735:
	.loc 1 10055 0
	movq	-64(%rbp), %rdx	# c0, c0.1172
	movl	-188(%rbp), %eax	# tmode, tmode.1173
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	cmpq	%rax, %rdx	# D.29451, c0.1172
	jne	.L1734	#,
	.loc 1 10057 0
	movq	-80(%rbp), %rdx	# inner_op0, tmp968
	movl	-188(%rbp), %eax	# tmode, tmp969
	movq	%rdx, %rsi	# tmp968,
	movl	%eax, %edi	# tmp969,
	call	gen_lowpart_for_combine	#
	movq	%rax, -136(%rbp)	# tmp970, op0
	.loc 1 10058 0
	movq	-72(%rbp), %rdx	# inner_op1, tmp971
	movl	-188(%rbp), %eax	# tmode, tmp972
	movq	%rdx, %rsi	# tmp971,
	movl	%eax, %edi	# tmp972,
	call	gen_lowpart_for_combine	#
	movq	%rax, -128(%rbp)	# tmp973, op1
	.loc 1 10059 0
	movl	-196(%rbp), %eax	# code, tmp974
	movl	%eax, %edi	# tmp974,
	call	unsigned_condition	#
	movl	%eax, -196(%rbp)	# tmp975, code
	.loc 1 10060 0
	movl	$1, -184(%rbp)	#, changed
	.loc 1 10061 0
	jmp	.L1732	#
.L1734:
	.loc 1 10054 0
	movl	-188(%rbp), %eax	# tmode, tmode.1174
	cltq
	movzbl	mode_wider_mode(%rax), %eax	# mode_wider_mode, D.29448
	movzbl	%al, %eax	# D.29448, tmp977
	movl	%eax, -188(%rbp)	# tmp977, tmode
.L1733:
	.loc 1 10054 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# op0, tmp978
	movzbl	2(%rax), %eax	# op0_22->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29454
	.loc 1 10052 0 is_stmt 1 discriminator 1
	cmpl	-188(%rbp), %eax	# tmode, D.29454
	jne	.L1735	#,
.L1732:
	.loc 1 10064 0
	cmpl	$0, -184(%rbp)	#, changed
	jne	.L1736	#,
	.loc 1 10065 0
	jmp	.L1728	#
.L1736:
.LBE98:
	.loc 1 10022 0
	jmp	.L1729	#
.L1730:
	.loc 1 10071 0
	movq	-136(%rbp), %rax	# op0, tmp979
	movzwl	(%rax), %eax	# op0_22->code, D.29446
	cmpw	$86, %ax	#, D.29446
	jne	.L1737	#,
	.loc 1 10071 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# op1, tmp980
	movzwl	(%rax), %eax	# op1_34->code, D.29446
	cmpw	$86, %ax	#, D.29446
	je	.L1738	#,
.L1737:
	.loc 1 10072 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp981
	movzwl	(%rax), %eax	# op0_22->code, D.29446
	cmpw	$77, %ax	#, D.29446
	jne	.L1728	#,
	.loc 1 10072 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# op1, tmp982
	movzwl	(%rax), %eax	# op1_34->code, D.29446
	cmpw	$77, %ax	#, D.29446
	jne	.L1728	#,
	.loc 1 10073 0 is_stmt 1
	cmpl	$103, -196(%rbp)	#, code
	je	.L1738	#,
	.loc 1 10073 0 is_stmt 0 discriminator 1
	cmpl	$102, -196(%rbp)	#, code
	jne	.L1728	#,
.L1738:
	.loc 1 10074 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp983
	movq	8(%rax), %rax	# op0_22->fld[0].rtx, tmp984
	movq	%rax, -136(%rbp)	# tmp984, op0
	movq	-128(%rbp), %rax	# op1, tmp985
	movq	8(%rax), %rax	# op1_34->fld[0].rtx, tmp986
	movq	%rax, -128(%rbp)	# tmp986, op1
	movl	-196(%rbp), %eax	# code, tmp987
	movl	%eax, %edi	# tmp987,
	call	swap_condition	#
	movl	%eax, -196(%rbp)	# tmp988, code
	.loc 1 10078 0
	jmp	.L1739	#
.L1729:
	jmp	.L1739	#
.L1728:
	.loc 1 10083 0
	movq	-128(%rbp), %rdx	# op1, tmp989
	movq	-136(%rbp), %rax	# op0, tmp990
	movq	%rdx, %rsi	# tmp989,
	movq	%rax, %rdi	# tmp990,
	call	swap_commutative_operands_p	#
	testl	%eax, %eax	# D.29450
	je	.L1740	#,
	.loc 1 10085 0
	movq	-136(%rbp), %rax	# op0, tmp991
	movq	%rax, -120(%rbp)	# tmp991, tem
	movq	-128(%rbp), %rax	# op1, tmp992
	movq	%rax, -136(%rbp)	# tmp992, op0
	movq	-120(%rbp), %rax	# tem, tmp993
	movq	%rax, -128(%rbp)	# tmp993, op1
	.loc 1 10086 0
	movl	-196(%rbp), %eax	# code, tmp994
	movl	%eax, %edi	# tmp994,
	call	swap_condition	#
	movl	%eax, -196(%rbp)	# tmp995, code
	.loc 1 10094 0
	jmp	.L1741	#
.L1740:
	jmp	.L1741	#
.L1877:
.LBB99:
	.loc 1 10096 0
	movq	-136(%rbp), %rax	# op0, tmp996
	movzbl	2(%rax), %eax	# op0_28->mode, D.29448
	movzbl	%al, %eax	# D.29448, tmp997
	movl	%eax, -168(%rbp)	# tmp997, mode
	.loc 1 10097 0
	movl	-168(%rbp), %eax	# mode, mode.1175
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	movzwl	%ax, %eax	# D.29446, tmp999
	movl	%eax, -164(%rbp)	# tmp999, mode_width
	.loc 1 10098 0
	movl	-168(%rbp), %eax	# mode, mode.1176
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, tmp1001
	movq	%rax, -96(%rbp)	# tmp1001, mask
	.loc 1 10109 0
	movl	-168(%rbp), %eax	# mode, mode.1177
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29453
	cmpl	$1, %eax	#, D.29453
	je	.L1742	#,
	.loc 1 10110 0
	cmpl	$0, -168(%rbp)	#, mode
	jne	.L1743	#,
	.loc 1 10111 0 discriminator 1
	movq	-136(%rbp), %rax	# op0, tmp1003
	movzwl	(%rax), %eax	# op0_28->code, D.29446
	.loc 1 10110 0 discriminator 1
	cmpw	$74, %ax	#, D.29446
	je	.L1742	#,
	.loc 1 10112 0
	movq	-136(%rbp), %rax	# op0, tmp1004
	movzwl	(%rax), %eax	# op0_28->code, D.29446
	movzwl	%ax, %eax	# D.29446, D.29450
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29455
	cmpb	$60, %al	#, D.29455
	jne	.L1743	#,
.L1742:
	.loc 1 10117 0
	movq	-128(%rbp), %rax	# op1, tmp1006
	movq	8(%rax), %rax	# op1_50->fld[0].rtwint, D.29449
	movl	-168(%rbp), %edx	# mode, tmp1007
	movl	%edx, %esi	# tmp1007,
	movq	%rax, %rdi	# D.29449,
	call	trunc_int_for_mode	#
	movq	%rax, -88(%rbp)	# tmp1008, const_op
	.loc 1 10118 0
	movq	-88(%rbp), %rax	# const_op, tmp1009
	movq	%rax, %rsi	# tmp1009,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1010, op1
	.loc 1 10124 0
	cmpq	$0, -88(%rbp)	#, const_op
	je	.L1744	#,
	.loc 1 10125 0
	cmpl	$103, -196(%rbp)	#, code
	je	.L1745	#,
	.loc 1 10125 0 is_stmt 0 discriminator 1
	cmpl	$102, -196(%rbp)	#, code
	je	.L1745	#,
	cmpl	$104, -196(%rbp)	#, code
	je	.L1745	#,
	cmpl	$108, -196(%rbp)	#, code
	je	.L1745	#,
	.loc 1 10126 0 is_stmt 1
	cmpl	$107, -196(%rbp)	#, code
	je	.L1745	#,
	.loc 1 10126 0 is_stmt 0 discriminator 1
	cmpl	$111, -196(%rbp)	#, code
	jne	.L1744	#,
.L1745:
	.loc 1 10127 0 is_stmt 1
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1744	#,
	.loc 1 10128 0
	movq	-88(%rbp), %rax	# const_op, const_op.1178
	movq	%rax, %rdi	# const_op.1178,
	call	exact_log2_wide	#
	testl	%eax, %eax	# D.29450
	js	.L1744	#,
	.loc 1 10129 0
	movl	-168(%rbp), %edx	# mode, tmp1011
	movq	-136(%rbp), %rax	# op0, tmp1012
	movl	%edx, %esi	# tmp1011,
	movq	%rax, %rdi	# tmp1012,
	call	nonzero_bits	#
	movq	-88(%rbp), %rdx	# const_op, const_op.1179
	cmpq	%rdx, %rax	# const_op.1179, D.29451
	jne	.L1744	#,
	.loc 1 10131 0
	cmpl	$103, -196(%rbp)	#, code
	je	.L1746	#,
	.loc 1 10131 0 is_stmt 0 discriminator 2
	cmpl	$104, -196(%rbp)	#, code
	je	.L1746	#,
	.loc 1 10131 0 discriminator 1
	cmpl	$108, -196(%rbp)	#, code
	jne	.L1747	#,
.L1746:
	movl	$102, %eax	#, iftmp.1180
	jmp	.L1748	#
.L1747:
	movl	$103, %eax	#, iftmp.1180
.L1748:
	.loc 1 10131 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1180, code
	.loc 1 10132 0 is_stmt 1 discriminator 3
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp1013
	movq	%rax, -128(%rbp)	# tmp1013, op1
	movq	$0, -88(%rbp)	#, const_op
.L1744:
	.loc 1 10138 0
	cmpq	$-1, -88(%rbp)	#, const_op
	jne	.L1749	#,
	.loc 1 10139 0
	cmpl	$103, -196(%rbp)	#, code
	je	.L1750	#,
	.loc 1 10139 0 is_stmt 0 discriminator 1
	cmpl	$102, -196(%rbp)	#, code
	je	.L1750	#,
	cmpl	$105, -196(%rbp)	#, code
	je	.L1750	#,
	cmpl	$106, -196(%rbp)	#, code
	je	.L1750	#,
	.loc 1 10140 0 is_stmt 1
	cmpl	$108, -196(%rbp)	#, code
	je	.L1750	#,
	.loc 1 10140 0 is_stmt 0 discriminator 1
	cmpl	$111, -196(%rbp)	#, code
	jne	.L1749	#,
.L1750:
	.loc 1 10141 0 is_stmt 1
	movl	-168(%rbp), %edx	# mode, tmp1014
	movq	-136(%rbp), %rax	# op0, tmp1015
	movl	%edx, %esi	# tmp1014,
	movq	%rax, %rdi	# tmp1015,
	call	num_sign_bit_copies	#
	cmpl	-164(%rbp), %eax	# mode_width, D.29454
	jne	.L1749	#,
	.loc 1 10143 0
	cmpl	$103, -196(%rbp)	#, code
	je	.L1751	#,
	.loc 1 10143 0 is_stmt 0 discriminator 2
	cmpl	$106, -196(%rbp)	#, code
	je	.L1751	#,
	.loc 1 10143 0 discriminator 1
	cmpl	$108, -196(%rbp)	#, code
	jne	.L1752	#,
.L1751:
	movl	$102, %eax	#, iftmp.1181
	jmp	.L1753	#
.L1752:
	movl	$103, %eax	#, iftmp.1181
.L1753:
	.loc 1 10143 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1181, code
	.loc 1 10144 0 is_stmt 1 discriminator 3
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp1016
	movq	%rax, -128(%rbp)	# tmp1016, op1
	movq	$0, -88(%rbp)	#, const_op
.L1749:
	.loc 1 10151 0
	movl	-196(%rbp), %eax	# code, tmp1018
	subl	$104, %eax	#, tmp1017
	cmpl	$7, %eax	#, tmp1017
	ja	.L1901	#,
	movl	%eax, %eax	# tmp1017, tmp1019
	movq	.L1756(,%rax,8), %rax	#, tmp1020
	jmp	*%rax	# tmp1020
	.section	.rodata
	.align 8
	.align 4
.L1756:
	.quad	.L1755
	.quad	.L1757
	.quad	.L1758
	.quad	.L1759
	.quad	.L1760
	.quad	.L1761
	.quad	.L1762
	.quad	.L1763
	.text
.L1759:
	.loc 1 10155 0
	cmpq	$0, -88(%rbp)	#, const_op
	jle	.L1764	#,
	.loc 1 10157 0
	subq	$1, -88(%rbp)	#, const_op
	.loc 1 10158 0
	movq	-88(%rbp), %rax	# const_op, tmp1021
	movq	%rax, %rsi	# tmp1021,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1022, op1
	.loc 1 10159 0
	movl	$106, -196(%rbp)	#, code
	jmp	.L1758	#
.L1764:
	.loc 1 10163 0
	jmp	.L1765	#
.L1758:
	.loc 1 10167 0
	cmpq	$0, -88(%rbp)	#, const_op
	jns	.L1766	#,
	.loc 1 10169 0
	addq	$1, -88(%rbp)	#, const_op
	.loc 1 10170 0
	movq	-88(%rbp), %rax	# const_op, tmp1023
	movq	%rax, %rsi	# tmp1023,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1024, op1
	.loc 1 10171 0
	movl	$107, -196(%rbp)	#, code
	jmp	.L1767	#
.L1766:
	.loc 1 10176 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1767	#,
	.loc 1 10177 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1767	#,
	.loc 1 10178 0
	movl	-168(%rbp), %edx	# mode, tmp1025
	movq	-136(%rbp), %rax	# op0, tmp1026
	movl	%edx, %esi	# tmp1025,
	movq	%rax, %rdi	# tmp1026,
	call	nonzero_bits	#
	.loc 1 10179 0
	movl	-164(%rbp), %edx	# mode_width, tmp1027
	subl	$1, %edx	#, D.29454
	movl	$1, %esi	#, tmp1028
	movl	%edx, %ecx	# D.29450, tmp1503
	salq	%cl, %rsi	# tmp1503, D.29449
	movq	%rsi, %rdx	# D.29449, D.29449
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10178 0
	testq	%rax, %rax	# D.29451
	jne	.L1767	#,
	.loc 1 10180 0
	movl	$103, -196(%rbp)	#, code
	.loc 1 10181 0
	jmp	.L1765	#
.L1767:
	jmp	.L1765	#
.L1755:
	.loc 1 10185 0
	cmpq	$0, -88(%rbp)	#, const_op
	jle	.L1768	#,
	.loc 1 10187 0
	subq	$1, -88(%rbp)	#, const_op
	.loc 1 10188 0
	movq	-88(%rbp), %rax	# const_op, tmp1029
	movq	%rax, %rsi	# tmp1029,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1030, op1
	.loc 1 10189 0
	movl	$105, -196(%rbp)	#, code
	jmp	.L1757	#
.L1768:
	.loc 1 10193 0
	jmp	.L1765	#
.L1757:
	.loc 1 10197 0
	cmpq	$0, -88(%rbp)	#, const_op
	jns	.L1769	#,
	.loc 1 10199 0
	addq	$1, -88(%rbp)	#, const_op
	.loc 1 10200 0
	movq	-88(%rbp), %rax	# const_op, tmp1031
	movq	%rax, %rsi	# tmp1031,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1032, op1
	.loc 1 10201 0
	movl	$104, -196(%rbp)	#, code
	jmp	.L1770	#
.L1769:
	.loc 1 10206 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1770	#,
	.loc 1 10207 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1770	#,
	.loc 1 10208 0
	movl	-168(%rbp), %edx	# mode, tmp1033
	movq	-136(%rbp), %rax	# op0, tmp1034
	movl	%edx, %esi	# tmp1033,
	movq	%rax, %rdi	# tmp1034,
	call	nonzero_bits	#
	.loc 1 10209 0
	movl	-164(%rbp), %edx	# mode_width, tmp1035
	subl	$1, %edx	#, D.29454
	movl	$1, %esi	#, tmp1036
	movl	%edx, %ecx	# D.29450, tmp1505
	salq	%cl, %rsi	# tmp1505, D.29449
	movq	%rsi, %rdx	# D.29449, D.29449
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10208 0
	testq	%rax, %rax	# D.29451
	jne	.L1770	#,
	.loc 1 10210 0
	movl	$102, -196(%rbp)	#, code
	.loc 1 10211 0
	jmp	.L1765	#
.L1770:
	jmp	.L1765	#
.L1763:
	.loc 1 10215 0
	cmpq	$0, -88(%rbp)	#, const_op
	jle	.L1771	#,
	.loc 1 10217 0
	subq	$1, -88(%rbp)	#, const_op
	.loc 1 10218 0
	movq	-88(%rbp), %rax	# const_op, tmp1037
	movq	%rax, %rsi	# tmp1037,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1038, op1
	.loc 1 10219 0
	movl	$110, -196(%rbp)	#, code
	jmp	.L1762	#
.L1771:
	.loc 1 10224 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1765	#,
	.loc 1 10225 0
	movl	-164(%rbp), %eax	# mode_width, tmp1039
	subl	$1, %eax	#, D.29454
	movl	$1, %edx	#, tmp1040
	movl	%eax, %ecx	# D.29450, tmp1507
	salq	%cl, %rdx	# tmp1507, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	cmpq	-88(%rbp), %rax	# const_op, D.29449
	jne	.L1765	#,
	.loc 1 10227 0
	movq	$0, -88(%rbp)	#, const_op
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp1041
	movq	%rax, -128(%rbp)	# tmp1041, op1
	.loc 1 10228 0
	movl	$104, -196(%rbp)	#, code
	.loc 1 10229 0
	jmp	.L1765	#
.L1762:
	.loc 1 10236 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1772	#,
	.loc 1 10237 0
	movl	$103, -196(%rbp)	#, code
	jmp	.L1773	#
.L1772:
	.loc 1 10240 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1773	#,
	.loc 1 10241 0
	movl	-164(%rbp), %eax	# mode_width, tmp1042
	subl	$1, %eax	#, D.29454
	movl	$1, %edx	#, tmp1043
	movl	%eax, %ecx	# D.29450, tmp1509
	salq	%cl, %rdx	# tmp1509, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	subq	$1, %rax	#, D.29449
	cmpq	-88(%rbp), %rax	# const_op, D.29449
	jne	.L1773	#,
	.loc 1 10243 0
	movq	$0, -88(%rbp)	#, const_op
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp1044
	movq	%rax, -128(%rbp)	# tmp1044, op1
	.loc 1 10244 0
	movl	$104, -196(%rbp)	#, code
	.loc 1 10246 0
	jmp	.L1765	#
.L1773:
	jmp	.L1765	#
.L1760:
	.loc 1 10250 0
	cmpq	$1, -88(%rbp)	#, const_op
	jle	.L1774	#,
	.loc 1 10252 0
	subq	$1, -88(%rbp)	#, const_op
	.loc 1 10253 0
	movq	-88(%rbp), %rax	# const_op, tmp1045
	movq	%rax, %rsi	# tmp1045,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1046, op1
	.loc 1 10254 0
	movl	$109, -196(%rbp)	#, code
	jmp	.L1761	#
.L1774:
	.loc 1 10259 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1765	#,
	.loc 1 10260 0
	movl	-164(%rbp), %eax	# mode_width, tmp1047
	subl	$1, %eax	#, D.29454
	movl	$1, %edx	#, tmp1048
	movl	%eax, %ecx	# D.29450, tmp1511
	salq	%cl, %rdx	# tmp1511, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	cmpq	-88(%rbp), %rax	# const_op, D.29449
	jne	.L1765	#,
	.loc 1 10262 0
	movq	$0, -88(%rbp)	#, const_op
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp1049
	movq	%rax, -128(%rbp)	# tmp1049, op1
	.loc 1 10263 0
	movl	$107, -196(%rbp)	#, code
	.loc 1 10264 0
	jmp	.L1765	#
.L1761:
	.loc 1 10271 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1775	#,
	.loc 1 10272 0
	movl	$102, -196(%rbp)	#, code
	jmp	.L1776	#
.L1775:
	.loc 1 10275 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1776	#,
	.loc 1 10276 0
	movl	-164(%rbp), %eax	# mode_width, tmp1050
	subl	$1, %eax	#, D.29454
	movl	$1, %edx	#, tmp1051
	movl	%eax, %ecx	# D.29450, tmp1513
	salq	%cl, %rdx	# tmp1513, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	subq	$1, %rax	#, D.29449
	cmpq	-88(%rbp), %rax	# const_op, D.29449
	jne	.L1776	#,
	.loc 1 10278 0
	movq	$0, -88(%rbp)	#, const_op
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, tmp1052
	movq	%rax, -128(%rbp)	# tmp1052, op1
	.loc 1 10279 0
	movl	$107, -196(%rbp)	#, code
	.loc 1 10281 0
	jmp	.L1765	#
.L1776:
	jmp	.L1765	#
.L1901:
	.loc 1 10284 0
	nop
.L1765:
	.loc 1 10289 0
	cmpl	$103, -196(%rbp)	#, code
	je	.L1777	#,
	.loc 1 10289 0 is_stmt 0 discriminator 2
	cmpl	$102, -196(%rbp)	#, code
	jne	.L1778	#,
.L1777:
	.loc 1 10289 0 discriminator 1
	movl	$1, %eax	#, iftmp.1182
	jmp	.L1779	#
.L1778:
	.loc 1 10289 0 discriminator 3
	movl	$0, %eax	#, iftmp.1182
.L1779:
	.loc 1 10289 0 discriminator 4
	movl	%eax, -160(%rbp)	# iftmp.1182, equality_comparison_p
	.loc 1 10290 0 is_stmt 1 discriminator 4
	cmpl	$107, -196(%rbp)	#, code
	je	.L1780	#,
	.loc 1 10290 0 is_stmt 0 discriminator 2
	cmpl	$104, -196(%rbp)	#, code
	jne	.L1781	#,
.L1780:
	.loc 1 10290 0 discriminator 1
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1781	#,
	.loc 1 10290 0 discriminator 3
	movl	$1, %eax	#, iftmp.1183
	jmp	.L1782	#
.L1781:
	.loc 1 10290 0 discriminator 1
	movl	$0, %eax	#, iftmp.1183
.L1782:
	.loc 1 10290 0 discriminator 4
	movl	%eax, -156(%rbp)	# iftmp.1183, sign_bit_comparison_p
	.loc 1 10292 0 is_stmt 1 discriminator 4
	cmpl	$111, -196(%rbp)	#, code
	je	.L1783	#,
	.loc 1 10291 0
	cmpl	$110, -196(%rbp)	#, code
	je	.L1783	#,
	.loc 1 10291 0 is_stmt 0 discriminator 1
	cmpl	$109, -196(%rbp)	#, code
	je	.L1783	#,
	.loc 1 10292 0 is_stmt 1
	cmpl	$108, -196(%rbp)	#, code
	jne	.L1784	#,
.L1783:
	.loc 1 10292 0 is_stmt 0 discriminator 1
	movl	$1, %eax	#, iftmp.1184
	jmp	.L1785	#
.L1784:
	.loc 1 10292 0 discriminator 2
	movl	$0, %eax	#, iftmp.1184
.L1785:
	.loc 1 10291 0 is_stmt 1
	movl	%eax, -152(%rbp)	# iftmp.1184, unsigned_comparison_p
	.loc 1 10296 0
	cmpl	$0, -156(%rbp)	#, sign_bit_comparison_p
	je	.L1786	#,
	.loc 1 10297 0
	movl	-168(%rbp), %eax	# mode, mode.1185
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	cmpw	$64, %ax	#, D.29446
	ja	.L1786	#,
	.loc 1 10300 0
	movl	-168(%rbp), %eax	# mode, mode.1186
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	movzwl	%ax, %eax	# D.29446, D.29450
	subl	$1, %eax	#, D.29450
	movl	$1, %edx	#, tmp1055
	movl	%eax, %ecx	# D.29450, tmp1515
	salq	%cl, %rdx	# tmp1515, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	.loc 1 10298 0
	movq	%rax, %rdx	# D.29449, D.29451
	movl	-168(%rbp), %esi	# mode, tmp1056
	movq	-136(%rbp), %rax	# op0, tmp1057
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp1057,
	call	force_to_mode	#
	movq	%rax, -136(%rbp)	# tmp1058, op0
.L1786:
	.loc 1 10307 0
	movq	-136(%rbp), %rax	# op0, tmp1059
	movzwl	(%rax), %eax	# op0_27->code, D.29446
	movzwl	%ax, %eax	# D.29446, D.29454
	subl	$63, %eax	#, tmp1060
	cmpl	$70, %eax	#, tmp1060
	ja	.L1902	#,
	movl	%eax, %eax	# tmp1060, tmp1061
	movq	.L1789(,%rax,8), %rax	#, tmp1062
	jmp	*%rax	# tmp1062
	.section	.rodata
	.align 8
	.align 4
.L1789:
	.quad	.L1788
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1790
	.quad	.L1791
	.quad	.L1792
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1793
	.quad	.L1794
	.quad	.L1795
	.quad	.L1796
	.quad	.L1797
	.quad	.L1798
	.quad	.L1799
	.quad	.L1800
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1801
	.quad	.L1802
	.quad	.L1803
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1902
	.quad	.L1804
	.quad	.L1902
	.quad	.L1902
	.quad	.L1805
	.quad	.L1806
	.text
.L1806:
	.loc 1 10315 0
	movq	-136(%rbp), %rax	# op0, tmp1063
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _398->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1805	#,
	.loc 1 10316 0
	movq	-136(%rbp), %rax	# op0, tmp1064
	movq	16(%rax), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29447
	cmpq	%rax, %rdx	# D.29447, D.29447
	jne	.L1805	#,
	.loc 1 10317 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1805	#,
	.loc 1 10317 0 is_stmt 0 discriminator 1
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1805	#,
	.loc 1 10318 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1065
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _402->fld[0].rtwint, D.29449
	movq	%rax, %rdi	# D.29451,
	call	exact_log2_wide	#
	movl	%eax, -148(%rbp)	# tmp1066, i
	cmpl	$0, -148(%rbp)	#, i
	js	.L1805	#,
	.loc 1 10333 0
	movq	-136(%rbp), %rax	# op0, tmp1067
	movq	24(%rax), %rax	# op0_27->fld[2].rtx, tmp1068
	movq	%rax, -136(%rbp)	# tmp1068, op0
	.loc 1 10334 0
	movl	-148(%rbp), %eax	# i, tmp1069
	cltq
	movq	%rax, %rsi	# D.29449,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1070, op1
	.loc 1 10335 0
	movl	-148(%rbp), %eax	# i, tmp1072
	cltq
	movq	%rax, -88(%rbp)	# tmp1071, const_op
	.loc 1 10338 0
	movl	-196(%rbp), %eax	# code, tmp1073
	movl	%eax, %edi	# tmp1073,
	call	reverse_condition	#
	movl	%eax, -196(%rbp)	# tmp1074, code
	.loc 1 10339 0
	jmp	.L1741	#
.L1805:
	.loc 1 10345 0
	movq	-136(%rbp), %rax	# op0, tmp1075
	movq	%rax, %rdi	# tmp1075,
	call	expand_compound_operation	#
	movq	%rax, -120(%rbp)	# tmp1076, tem
	.loc 1 10346 0
	movq	-120(%rbp), %rax	# tem, tmp1077
	cmpq	-136(%rbp), %rax	# op0, tmp1077
	je	.L1807	#,
	.loc 1 10348 0
	movq	-120(%rbp), %rax	# tem, tmp1078
	movq	%rax, -136(%rbp)	# tmp1078, op0
	.loc 1 10349 0
	jmp	.L1741	#
.L1807:
	.loc 1 10351 0
	jmp	.L1808	#
.L1796:
	.loc 1 10355 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1809	#,
	.loc 1 10356 0
	movl	-168(%rbp), %ecx	# mode, tmp1079
	movq	-128(%rbp), %rdx	# op1, tmp1080
	movl	-168(%rbp), %eax	# mode, tmp1081
	movl	%eax, %esi	# tmp1081,
	movl	$86, %edi	#,
	call	simplify_unary_operation	#
	movq	%rax, -120(%rbp)	# tmp1082, tem
	cmpq	$0, -120(%rbp)	#, tem
	je	.L1809	#,
	.loc 1 10358 0
	movq	-136(%rbp), %rax	# op0, tmp1083
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1084
	movq	%rax, -136(%rbp)	# tmp1084, op0
	.loc 1 10359 0
	movq	-120(%rbp), %rax	# tem, tmp1085
	movq	%rax, -128(%rbp)	# tmp1085, op1
	.loc 1 10360 0
	jmp	.L1741	#
.L1809:
	.loc 1 10365 0
	cmpl	$0, -156(%rbp)	#, sign_bit_comparison_p
	je	.L1810	#,
	.loc 1 10367 0
	movq	-136(%rbp), %rax	# op0, tmp1086
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1087
	movq	%rax, -136(%rbp)	# tmp1087, op0
	.loc 1 10368 0
	cmpl	$104, -196(%rbp)	#, code
	jne	.L1811	#,
	.loc 1 10368 0 is_stmt 0 discriminator 1
	movl	$107, %eax	#, iftmp.1190
	jmp	.L1812	#
.L1811:
	.loc 1 10368 0 discriminator 2
	movl	$104, %eax	#, iftmp.1190
.L1812:
	.loc 1 10368 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1190, code
	.loc 1 10369 0 is_stmt 1 discriminator 3
	jmp	.L1741	#
.L1810:
	.loc 1 10371 0
	jmp	.L1808	#
.L1792:
	.loc 1 10375 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1813	#,
	.loc 1 10376 0
	movl	-168(%rbp), %ecx	# mode, tmp1088
	movq	-128(%rbp), %rdx	# op1, tmp1089
	movl	-168(%rbp), %eax	# mode, tmp1090
	movl	%eax, %esi	# tmp1090,
	movl	$77, %edi	#,
	call	simplify_unary_operation	#
	movq	%rax, -120(%rbp)	# tmp1091, tem
	cmpq	$0, -120(%rbp)	#, tem
	je	.L1813	#,
	.loc 1 10378 0
	movq	-136(%rbp), %rax	# op0, tmp1092
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1093
	movq	%rax, -136(%rbp)	# tmp1093, op0
	.loc 1 10379 0
	movq	-120(%rbp), %rax	# tem, tmp1094
	movq	%rax, -128(%rbp)	# tmp1094, op1
	.loc 1 10380 0
	jmp	.L1741	#
.L1813:
	.loc 1 10384 0
	cmpq	$0, -88(%rbp)	#, const_op
	je	.L1814	#,
	.loc 1 10385 0
	jmp	.L1808	#
.L1814:
	.loc 1 10390 0
	cmpl	$0, -156(%rbp)	#, sign_bit_comparison_p
	je	.L1815	#,
	.loc 1 10391 0
	movq	-136(%rbp), %rax	# op0, tmp1095
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _423->code, D.29446
	cmpw	$129, %ax	#, D.29446
	je	.L1816	#,
	.loc 1 10392 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1815	#,
	.loc 1 10393 0
	movq	-136(%rbp), %rax	# op0, tmp1096
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movl	-168(%rbp), %edx	# mode, tmp1097
	movl	%edx, %esi	# tmp1097,
	movq	%rax, %rdi	# D.29447,
	call	nonzero_bits	#
	.loc 1 10394 0
	movl	-164(%rbp), %edx	# mode_width, tmp1098
	subl	$1, %edx	#, D.29454
	movl	$1, %esi	#, tmp1099
	movl	%edx, %ecx	# D.29450, tmp1517
	salq	%cl, %rsi	# tmp1517, D.29449
	movq	%rsi, %rdx	# D.29449, D.29449
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10393 0
	testq	%rax, %rax	# D.29451
	jne	.L1815	#,
.L1816:
	.loc 1 10396 0
	movq	-136(%rbp), %rax	# op0, tmp1100
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1101
	movq	%rax, -136(%rbp)	# tmp1101, op0
	.loc 1 10397 0
	cmpl	$107, -196(%rbp)	#, code
	jne	.L1817	#,
	.loc 1 10397 0 is_stmt 0 discriminator 1
	movl	$102, %eax	#, iftmp.1191
	jmp	.L1818	#
.L1817:
	.loc 1 10397 0 discriminator 2
	movl	$103, %eax	#, iftmp.1191
.L1818:
	.loc 1 10397 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1191, code
	.loc 1 10398 0 is_stmt 1 discriminator 3
	jmp	.L1741	#
.L1815:
	.loc 1 10403 0
	movl	-168(%rbp), %edx	# mode, tmp1102
	movq	-136(%rbp), %rax	# op0, tmp1103
	movl	%edx, %esi	# tmp1102,
	movq	%rax, %rdi	# tmp1103,
	call	num_sign_bit_copies	#
	cmpl	$1, %eax	#, D.29454
	jbe	.L1819	#,
	.loc 1 10405 0
	movq	-136(%rbp), %rax	# op0, tmp1104
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1105
	movq	%rax, -136(%rbp)	# tmp1105, op0
	.loc 1 10406 0
	movl	-196(%rbp), %eax	# code, tmp1106
	movl	%eax, %edi	# tmp1106,
	call	swap_condition	#
	movl	%eax, -196(%rbp)	# tmp1107, code
	.loc 1 10407 0
	jmp	.L1741	#
.L1819:
	.loc 1 10409 0
	jmp	.L1808	#
.L1798:
	.loc 1 10414 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1820	#,
	.loc 1 10414 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# op0, tmp1108
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _439->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1820	#,
	.loc 1 10415 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1109
	movq	16(%rax), %rcx	# op0_27->fld[1].rtx, D.29447
	movq	-128(%rbp), %rdx	# op1, tmp1110
	movl	-168(%rbp), %eax	# mode, tmp1111
	movl	%eax, %esi	# tmp1111,
	movl	$91, %edi	#,
	call	simplify_binary_operation	#
	movq	%rax, -120(%rbp)	# tmp1112, tem
	cmpq	$0, -120(%rbp)	#, tem
	je	.L1820	#,
	.loc 1 10418 0
	movq	-136(%rbp), %rax	# op0, tmp1113
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1114
	movq	%rax, -136(%rbp)	# tmp1114, op0
	.loc 1 10419 0
	movq	-120(%rbp), %rax	# tem, tmp1115
	movq	%rax, -128(%rbp)	# tmp1115, op1
	.loc 1 10420 0
	jmp	.L1741	#
.L1820:
	.loc 1 10426 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1804	#,
	.loc 1 10426 0 is_stmt 0 discriminator 1
	cmpl	$0, -156(%rbp)	#, sign_bit_comparison_p
	je	.L1804	#,
	.loc 1 10427 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1116
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _445->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1804	#,
	.loc 1 10428 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1804	#,
	.loc 1 10433 0
	movq	-136(%rbp), %rax	# op0, tmp1117
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _447->fld[0].rtwint, D.29449
	.loc 1 10432 0
	movl	-164(%rbp), %edx	# mode_width, tmp1118
	subl	%eax, %edx	# D.29456, D.29456
	movl	%edx, %eax	# D.29456, D.29456
	subl	$1, %eax	#, D.29456
	movl	$1, %edx	#, tmp1119
	movl	%eax, %ecx	# D.29450, tmp1520
	salq	%cl, %rdx	# tmp1520, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	.loc 1 10430 0
	movq	%rax, %rcx	# D.29449, D.29451
	movq	-136(%rbp), %rax	# op0, tmp1120
	movq	8(%rax), %rdx	# op0_27->fld[0].rtx, D.29447
	movl	-168(%rbp), %eax	# mode, tmp1121
	movl	%eax, %esi	# tmp1121,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, -136(%rbp)	# tmp1122, op0
	.loc 1 10434 0
	cmpl	$107, -196(%rbp)	#, code
	jne	.L1821	#,
	.loc 1 10434 0 is_stmt 0 discriminator 1
	movl	$102, %eax	#, iftmp.1192
	jmp	.L1822	#
.L1821:
	.loc 1 10434 0 discriminator 2
	movl	$103, %eax	#, iftmp.1192
.L1822:
	.loc 1 10434 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1192, code
	.loc 1 10435 0 is_stmt 1 discriminator 3
	jmp	.L1741	#
.L1804:
	.loc 1 10442 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1823	#,
	.loc 1 10442 0 is_stmt 0 discriminator 1
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1823	#,
	.loc 1 10444 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1123
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1124
	movq	%rax, -136(%rbp)	# tmp1124, op0
	.loc 1 10445 0
	jmp	.L1741	#
.L1823:
	.loc 1 10447 0
	jmp	.L1808	#
.L1802:
	.loc 1 10454 0
	cmpl	$0, -152(%rbp)	#, unsigned_comparison_p
	jne	.L1824	#,
	.loc 1 10455 0
	movq	-136(%rbp), %rax	# op0, tmp1125
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _461->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	cmpw	$64, %ax	#, D.29446
	ja	.L1824	#,
	.loc 1 10457 0
	movq	-88(%rbp), %rdx	# const_op, const_op.1193
	.loc 1 10459 0
	movq	-136(%rbp), %rax	# op0, tmp1127
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _466->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	movzwl	%ax, %eax	# D.29446, D.29450
	subl	$1, %eax	#, D.29450
	.loc 1 10458 0
	movl	%eax, %ecx	# D.29450, tmp1522
	shrq	%cl, %rdx	# tmp1522, D.29451
	movq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10457 0
	testq	%rax, %rax	# D.29451
	jne	.L1824	#,
	.loc 1 10461 0
	movq	-136(%rbp), %rax	# op0, tmp1129
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1130
	movq	%rax, -136(%rbp)	# tmp1130, op0
	.loc 1 10462 0
	jmp	.L1741	#
.L1824:
	.loc 1 10464 0
	jmp	.L1808	#
.L1788:
	.loc 1 10476 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1825	#,
	.loc 1 10477 0
	movq	-136(%rbp), %rax	# op0, tmp1131
	movq	%rax, %rdi	# tmp1131,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29450
	je	.L1825	#,
	.loc 1 10478 0
	movq	-136(%rbp), %rax	# op0, tmp1132
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _475->code, D.29446
	cmpw	$75, %ax	#, D.29446
	jne	.L1825	#,
	.loc 1 10479 0
	movq	-136(%rbp), %rax	# op0, tmp1133
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _477->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _478->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1825	#,
	.loc 1 10480 0
	movq	-136(%rbp), %rax	# op0, tmp1134
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _480->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _481->fld[0].rtwint, D.29449
	testq	%rax, %rax	# D.29449
	jns	.L1825	#,
	.loc 1 10481 0
	movq	-136(%rbp), %rax	# op0, tmp1135
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _483->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _484->fld[0].rtwint, D.29449
	negq	%rax	# D.29449
	movq	%rax, %rdx	# D.29449, D.29449
	.loc 1 10482 0
	movl	-168(%rbp), %eax	# mode, mode.1194
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	shrq	%rax	# D.29451
	.loc 1 10481 0
	cmpq	%rax, %rdx	# D.29449, D.29449
	jge	.L1825	#,
	.loc 1 10483 0
	movq	-88(%rbp), %rdx	# const_op, const_op.1195
	movl	-168(%rbp), %eax	# mode, mode.1196
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	shrq	%rax	# D.29451
	cmpq	%rax, %rdx	# D.29451, const_op.1195
	jae	.L1825	#,
	.loc 1 10485 0
	movq	-136(%rbp), %rax	# op0, tmp1138
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _495->mode, D.29448
	.loc 1 10484 0
	movzbl	%al, %edx	# D.29448, D.29452
	movq	-136(%rbp), %rax	# op0, tmp1139
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _498->fld[0].rtx, D.29447
	movl	%edx, %esi	# D.29452,
	movq	%rax, %rdi	# D.29447,
	call	nonzero_bits	#
	.loc 1 10486 0
	movl	-168(%rbp), %edx	# mode, mode.1197
	movslq	%edx, %rdx	# mode.1197, tmp1140
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29451
	notq	%rdx	# D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10484 0
	testq	%rax, %rax	# D.29451
	je	.L1826	#,
	.loc 1 10488 0
	movq	-136(%rbp), %rax	# op0, tmp1141
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _505->mode, D.29448
	.loc 1 10487 0
	movzbl	%al, %edx	# D.29448, D.29452
	movq	-136(%rbp), %rax	# op0, tmp1142
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _508->fld[0].rtx, D.29447
	movl	%edx, %esi	# D.29452,
	movq	%rax, %rdi	# D.29447,
	call	num_sign_bit_copies	#
	.loc 1 10489 0
	movq	-136(%rbp), %rdx	# op0, tmp1143
	movq	8(%rdx), %rdx	# op0_27->fld[0].rtx, D.29447
	movzbl	2(%rdx), %edx	# _511->mode, D.29448
	movzbl	%dl, %edx	# D.29448, D.29450
	movslq	%edx, %rdx	# D.29450, tmp1144
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29446
	.loc 1 10490 0
	movzwl	%dx, %ecx	# D.29446, D.29450
	movl	-168(%rbp), %edx	# mode, mode.1198
	movslq	%edx, %rdx	# mode.1198, tmp1145
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29446
	movzwl	%dx, %edx	# D.29446, D.29450
	subl	%edx, %ecx	# D.29450, D.29450
	movl	%ecx, %edx	# D.29450, D.29450
	.loc 1 10487 0
	cmpl	%edx, %eax	# D.29454, D.29454
	jbe	.L1825	#,
.L1826:
	.loc 1 10492 0
	movq	-136(%rbp), %rax	# op0, tmp1146
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1147
	movq	%rax, -136(%rbp)	# tmp1147, op0
	.loc 1 10493 0
	jmp	.L1741	#
.L1825:
	.loc 1 10498 0
	movq	-136(%rbp), %rax	# op0, tmp1148
	movq	%rax, %rdi	# tmp1148,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29450
	je	.L1808	#,
	.loc 1 10499 0
	movq	-136(%rbp), %rax	# op0, tmp1149
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _523->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	movzwl	%ax, %eax	# D.29446, D.29454
	cmpl	-164(%rbp), %eax	# mode_width, D.29454
	jae	.L1808	#,
.L1803:
	.loc 1 10507 0
	cmpl	$0, -152(%rbp)	#, unsigned_comparison_p
	jne	.L1827	#,
	.loc 1 10507 0 is_stmt 0 discriminator 1
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1828	#,
.L1827:
	.loc 1 10508 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1151
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _528->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	cmpw	$64, %ax	#, D.29446
	ja	.L1828	#,
	.loc 1 10510 0
	movq	-88(%rbp), %rdx	# const_op, const_op.1199
	.loc 1 10511 0
	movq	-136(%rbp), %rax	# op0, tmp1153
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _533->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	.loc 1 10510 0
	cmpq	%rax, %rdx	# D.29451, const_op.1199
	jae	.L1828	#,
	.loc 1 10513 0
	movq	-136(%rbp), %rax	# op0, tmp1155
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1156
	movq	%rax, -136(%rbp)	# tmp1156, op0
	.loc 1 10514 0
	jmp	.L1741	#
.L1828:
	.loc 1 10516 0
	jmp	.L1808	#
.L1790:
	.loc 1 10522 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1829	#,
	.loc 1 10523 0
	movq	-136(%rbp), %rax	# op0, tmp1157
	movq	16(%rax), %rcx	# op0_27->fld[1].rtx, D.29447
	movq	-128(%rbp), %rdx	# op1, tmp1158
	movl	-168(%rbp), %eax	# mode, tmp1159
	movl	%eax, %esi	# tmp1159,
	movl	$76, %edi	#,
	call	simplify_binary_operation	#
	movq	%rax, -120(%rbp)	# tmp1160, tem
	cmpq	$0, -120(%rbp)	#, tem
	je	.L1829	#,
	.loc 1 10526 0
	movq	-136(%rbp), %rax	# op0, tmp1161
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1162
	movq	%rax, -136(%rbp)	# tmp1162, op0
	.loc 1 10527 0
	movq	-120(%rbp), %rax	# tem, tmp1163
	movq	%rax, -128(%rbp)	# tmp1163, op1
	.loc 1 10528 0
	jmp	.L1741	#
.L1829:
	.loc 1 10532 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1830	#,
	.loc 1 10532 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# op0, tmp1164
	movq	16(%rax), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	const_int_rtx+504(%rip), %rax	# const_int_rtx, D.29447
	cmpq	%rax, %rdx	# D.29447, D.29447
	jne	.L1830	#,
	.loc 1 10533 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1165
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _544->code, D.29446
	cmpw	$129, %ax	#, D.29446
	jne	.L1830	#,
	.loc 1 10533 0 is_stmt 0 discriminator 1
	cmpl	$0, -156(%rbp)	#, sign_bit_comparison_p
	je	.L1830	#,
	.loc 1 10535 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1166
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _546->fld[0].rtx, tmp1167
	movq	%rax, -136(%rbp)	# tmp1167, op0
	.loc 1 10536 0
	cmpl	$107, -196(%rbp)	#, code
	jne	.L1831	#,
	.loc 1 10536 0 is_stmt 0 discriminator 1
	movl	$103, %eax	#, iftmp.1200
	jmp	.L1832	#
.L1831:
	.loc 1 10536 0 discriminator 2
	movl	$102, %eax	#, iftmp.1200
.L1832:
	.loc 1 10536 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1200, code
	.loc 1 10537 0 is_stmt 1 discriminator 3
	jmp	.L1741	#
.L1830:
	.loc 1 10539 0
	jmp	.L1808	#
.L1791:
	.loc 1 10551 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1833	#,
	.loc 1 10552 0
	movq	-136(%rbp), %rax	# op0, tmp1168
	movq	16(%rax), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	-128(%rbp), %rcx	# op1, tmp1169
	movl	-168(%rbp), %eax	# mode, tmp1170
	movl	%eax, %esi	# tmp1170,
	movl	$75, %edi	#,
	call	simplify_binary_operation	#
	movq	%rax, -120(%rbp)	# tmp1171, tem
	cmpq	$0, -120(%rbp)	#, tem
	je	.L1833	#,
	.loc 1 10555 0
	movq	-136(%rbp), %rax	# op0, tmp1172
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1173
	movq	%rax, -136(%rbp)	# tmp1173, op0
	.loc 1 10556 0
	movq	-120(%rbp), %rax	# tem, tmp1174
	movq	%rax, -128(%rbp)	# tmp1174, op1
	.loc 1 10557 0
	jmp	.L1741	#
.L1833:
	.loc 1 10560 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1834	#,
	.loc 1 10561 0
	movq	-136(%rbp), %rax	# op0, tmp1175
	movq	8(%rax), %rdx	# op0_27->fld[0].rtx, D.29447
	movq	-128(%rbp), %rcx	# op1, tmp1176
	movl	-168(%rbp), %eax	# mode, tmp1177
	movl	%eax, %esi	# tmp1177,
	movl	$76, %edi	#,
	call	simplify_binary_operation	#
	movq	%rax, -120(%rbp)	# tmp1178, tem
	cmpq	$0, -120(%rbp)	#, tem
	je	.L1834	#,
	.loc 1 10564 0
	movq	-136(%rbp), %rax	# op0, tmp1179
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, tmp1180
	movq	%rax, -136(%rbp)	# tmp1180, op0
	.loc 1 10565 0
	movq	-120(%rbp), %rax	# tem, tmp1181
	movq	%rax, -128(%rbp)	# tmp1181, op1
	.loc 1 10566 0
	jmp	.L1741	#
.L1834:
	.loc 1 10571 0
	cmpl	$0, -156(%rbp)	#, sign_bit_comparison_p
	je	.L1835	#,
	.loc 1 10571 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# op0, tmp1182
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _559->code, D.29446
	cmpw	$89, %ax	#, D.29446
	jne	.L1835	#,
	.loc 1 10572 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1183
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _561->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _562->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1835	#,
	.loc 1 10573 0
	movq	-136(%rbp), %rax	# op0, tmp1184
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _564->fld[1].rtx, D.29447
	movq	8(%rax), %rdx	# _565->fld[0].rtwint, D.29449
	movl	-164(%rbp), %eax	# mode_width, tmp1185
	subl	$1, %eax	#, D.29454
	movl	%eax, %eax	# D.29454, D.29449
	cmpq	%rax, %rdx	# D.29449, D.29449
	jne	.L1835	#,
	.loc 1 10574 0
	movq	-136(%rbp), %rax	# op0, tmp1186
	movq	16(%rax), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	-136(%rbp), %rax	# op0, tmp1187
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _570->fld[0].rtx, D.29447
	movq	%rdx, %rsi	# D.29447,
	movq	%rax, %rdi	# D.29447,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29450
	je	.L1835	#,
	.loc 1 10576 0
	movq	-136(%rbp), %rax	# op0, tmp1188
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, tmp1189
	movq	%rax, -136(%rbp)	# tmp1189, op0
	.loc 1 10577 0
	cmpl	$104, -196(%rbp)	#, code
	jne	.L1836	#,
	.loc 1 10577 0 is_stmt 0 discriminator 1
	movl	$106, %eax	#, iftmp.1201
	jmp	.L1837	#
.L1836:
	.loc 1 10577 0 discriminator 2
	movl	$105, %eax	#, iftmp.1201
.L1837:
	.loc 1 10577 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1201, code
	.loc 1 10578 0 is_stmt 1 discriminator 3
	jmp	.L1741	#
.L1835:
	.loc 1 10580 0
	jmp	.L1808	#
.L1795:
	.loc 1 10585 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1838	#,
	.loc 1 10586 0
	movq	-136(%rbp), %rax	# op0, tmp1190
	movq	16(%rax), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	-128(%rbp), %rcx	# op1, tmp1191
	movl	-168(%rbp), %eax	# mode, tmp1192
	movl	%eax, %esi	# tmp1192,
	movl	$85, %edi	#,
	call	simplify_binary_operation	#
	movq	%rax, -120(%rbp)	# tmp1193, tem
	cmpq	$0, -120(%rbp)	#, tem
	je	.L1838	#,
	.loc 1 10589 0
	movq	-136(%rbp), %rax	# op0, tmp1194
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1195
	movq	%rax, -136(%rbp)	# tmp1195, op0
	.loc 1 10590 0
	movq	-120(%rbp), %rax	# tem, tmp1196
	movq	%rax, -128(%rbp)	# tmp1196, op1
	.loc 1 10591 0
	jmp	.L1741	#
.L1838:
	.loc 1 10593 0
	jmp	.L1808	#
.L1801:
	.loc 1 10602 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1808	#,
	.loc 1 10606 0
	movq	-136(%rbp), %rax	# op0, tmp1197
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _581->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29453
	cmpl	$4, %eax	#, D.29453
	je	.L1808	#,
	.loc 1 10610 0
	movq	-136(%rbp), %rax	# op0, tmp1199
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _585->code, D.29446
	cmpw	$74, %ax	#, D.29446
	jne	.L1839	#,
	.loc 1 10611 0
	movq	-136(%rbp), %rax	# op0, tmp1200
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _587->fld[0].rtx, tmp1201
	movq	%rax, -120(%rbp)	# tmp1201, tem
	movq	-136(%rbp), %rax	# op0, tmp1202
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _589->fld[1].rtx, tmp1203
	movq	%rax, -112(%rbp)	# tmp1203, tem1
	jmp	.L1840	#
.L1839:
	.loc 1 10613 0
	movq	-136(%rbp), %rax	# op0, tmp1204
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1205
	movq	%rax, -120(%rbp)	# tmp1205, tem
	movq	-136(%rbp), %rax	# op0, tmp1206
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, tmp1207
	movq	%rax, -112(%rbp)	# tmp1207, tem1
.L1840:
	.loc 1 10617 0
	cmpl	$102, -196(%rbp)	#, code
	je	.L1841	#,
	.loc 1 10617 0 is_stmt 0 discriminator 1
	cmpl	$103, -196(%rbp)	#, code
	je	.L1841	#,
	.loc 1 10618 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1208
	movzbl	2(%rax), %eax	# op0_27->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	cmpw	$64, %ax	#, D.29446
	ja	.L1842	#,
	.loc 1 10619 0
	movq	-136(%rbp), %rax	# op0, tmp1210
	movzbl	2(%rax), %eax	# op0_27->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29453
	cmpl	$1, %eax	#, D.29453
	jne	.L1842	#,
	.loc 1 10622 0
	movq	-136(%rbp), %rax	# op0, tmp1212
	movzbl	2(%rax), %eax	# op0_27->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	movzwl	%ax, %eax	# D.29446, D.29450
	subl	$1, %eax	#, D.29450
	.loc 1 10620 0
	movl	$1, %edx	#, tmp1214
	movl	%eax, %ecx	# D.29450, tmp1526
	sarq	%cl, %rdx	# tmp1526, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	andl	$1, %eax	#, D.29449
	testq	%rax, %rax	# D.29449
	je	.L1842	#,
	.loc 1 10623 0
	cmpl	$107, -196(%rbp)	#, code
	je	.L1841	#,
	.loc 1 10623 0 is_stmt 0 discriminator 1
	cmpl	$104, -196(%rbp)	#, code
	jne	.L1842	#,
.L1841:
.LBB100:
	.loc 1 10626 0 is_stmt 1
	cmpl	$107, -196(%rbp)	#, code
	je	.L1843	#,
	.loc 1 10626 0 is_stmt 0 discriminator 1
	cmpl	$102, -196(%rbp)	#, code
	jne	.L1844	#,
.L1843:
	.loc 1 10627 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1215
	movzwl	(%rax), %eax	# op0_27->code, D.29446
	movzwl	%ax, %eax	# D.29446, tmp1216
	movl	%eax, -180(%rbp)	# tmp1216, new_code
	jmp	.L1845	#
.L1844:
	.loc 1 10629 0
	movq	-136(%rbp), %rax	# op0, tmp1217
	movq	%rax, %rdi	# tmp1217,
	call	combine_reversed_comparison_code	#
	movl	%eax, -180(%rbp)	# tmp1218, new_code
.L1845:
	.loc 1 10631 0
	cmpl	$0, -180(%rbp)	#, new_code
	je	.L1842	#,
	.loc 1 10633 0
	movl	-180(%rbp), %eax	# new_code, tmp1219
	movl	%eax, -196(%rbp)	# tmp1219, code
	.loc 1 10634 0
	movq	-120(%rbp), %rax	# tem, tmp1220
	movq	%rax, -136(%rbp)	# tmp1220, op0
	.loc 1 10635 0
	movq	-112(%rbp), %rax	# tem1, tmp1221
	movq	%rax, -128(%rbp)	# tmp1221, op1
	.loc 1 10636 0
	jmp	.L1741	#
.L1842:
.LBE100:
	.loc 1 10639 0
	jmp	.L1808	#
.L1794:
	.loc 1 10644 0
	cmpl	$0, -156(%rbp)	#, sign_bit_comparison_p
	je	.L1846	#,
	.loc 1 10644 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# op0, tmp1222
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _612->code, D.29446
	cmpw	$75, %ax	#, D.29446
	jne	.L1846	#,
	.loc 1 10645 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1223
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rdx	# _614->fld[1].rtx, D.29447
	movq	const_int_rtx+504(%rip), %rax	# const_int_rtx, D.29447
	cmpq	%rax, %rdx	# D.29447, D.29447
	jne	.L1846	#,
	.loc 1 10646 0
	movq	-136(%rbp), %rax	# op0, tmp1224
	movq	16(%rax), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	-136(%rbp), %rax	# op0, tmp1225
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _618->fld[0].rtx, D.29447
	movq	%rdx, %rsi	# D.29447,
	movq	%rax, %rdi	# D.29447,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29450
	je	.L1846	#,
	.loc 1 10648 0
	movq	-136(%rbp), %rax	# op0, tmp1226
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, tmp1227
	movq	%rax, -136(%rbp)	# tmp1227, op0
	.loc 1 10649 0
	cmpl	$104, -196(%rbp)	#, code
	jne	.L1847	#,
	.loc 1 10649 0 is_stmt 0 discriminator 1
	movl	$105, %eax	#, iftmp.1202
	jmp	.L1848	#
.L1847:
	.loc 1 10649 0 discriminator 2
	movl	$106, %eax	#, iftmp.1202
.L1848:
	.loc 1 10649 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1202, code
	.loc 1 10650 0 is_stmt 1 discriminator 3
	jmp	.L1741	#
.L1846:
	.loc 1 10652 0
	jmp	.L1808	#
.L1793:
	.loc 1 10657 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1849	#,
	.loc 1 10657 0 is_stmt 0 discriminator 1
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1849	#,
	.loc 1 10658 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1228
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _625->code, D.29446
	cmpw	$87, %ax	#, D.29446
	jne	.L1849	#,
	.loc 1 10659 0
	movq	-136(%rbp), %rax	# op0, tmp1229
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rdx	# _627->fld[0].rtx, D.29447
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29447
	cmpq	%rax, %rdx	# D.29447, D.29447
	jne	.L1849	#,
	.loc 1 10662 0
	movq	-136(%rbp), %rax	# op0, tmp1230
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rcx	# _630->fld[1].rtx, D.29447
	movq	-136(%rbp), %rax	# op0, tmp1231
	movq	16(%rax), %rdx	# op0_27->fld[1].rtx, D.29447
	movl	-168(%rbp), %eax	# mode, tmp1232
	movl	%eax, %esi	# tmp1232,
	movl	$90, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, %rdx	#, D.29447
	.loc 1 10661 0
	movl	-168(%rbp), %esi	# mode, tmp1233
	movq	-136(%rbp), %rax	# op0, tmp1234
	movl	$1, %ecx	#,
	movq	%rax, %rdi	# tmp1234,
	call	simplify_and_const_int	#
	movq	%rax, -136(%rbp)	# tmp1235, op0
	.loc 1 10666 0
	jmp	.L1741	#
.L1849:
	.loc 1 10672 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1850	#,
	.loc 1 10672 0 is_stmt 0 discriminator 1
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1850	#,
	.loc 1 10673 0 is_stmt 1
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1850	#,
	.loc 1 10674 0
	movq	-136(%rbp), %rax	# op0, tmp1236
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _635->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1850	#,
	.loc 1 10675 0
	movq	-136(%rbp), %rax	# op0, tmp1237
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _637->code, D.29446
	cmpw	$90, %ax	#, D.29446
	jne	.L1850	#,
	.loc 1 10676 0
	movq	-136(%rbp), %rax	# op0, tmp1238
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _639->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _640->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1850	#,
	.loc 1 10677 0
	movq	-136(%rbp), %rax	# op0, tmp1239
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _642->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _643->fld[0].rtwint, D.29449
	testq	%rax, %rax	# D.29449
	js	.L1850	#,
	.loc 1 10678 0
	movq	-136(%rbp), %rax	# op0, tmp1240
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _645->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _646->fld[0].rtwint, D.29449
	cmpq	$63, %rax	#, D.29449
	jg	.L1850	#,
	.loc 1 10680 0
	movq	-136(%rbp), %rax	# op0, tmp1241
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _648->fld[0].rtwint, D.29449
	movq	%rax, %rdx	# D.29449, D.29451
	movl	-168(%rbp), %eax	# mode, mode.1203
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	andq	%rax, %rdx	# D.29451, D.29451
	.loc 1 10681 0
	movq	-136(%rbp), %rax	# op0, tmp1243
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _654->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _655->fld[0].rtwint, D.29449
	.loc 1 10680 0
	movl	%eax, %ecx	# D.29450, tmp1528
	salq	%cl, %rdx	# tmp1528, tmp1244
	movq	%rdx, %rax	# tmp1244, tmp1244
	movq	%rax, -96(%rbp)	# tmp1244, mask
	.loc 1 10682 0
	movq	-96(%rbp), %rax	# mask, tmp1245
	andq	$-2, %rax	#, D.29451
	testq	%rax, %rax	# D.29451
	jne	.L1850	#,
	.loc 1 10683 0
	movq	-136(%rbp), %rax	# op0, tmp1246
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _660->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _661->code, D.29446
	movzwl	%ax, %eax	# D.29446, D.29450
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29455
	cmpb	$60, %al	#, D.29455
	je	.L1851	#,
	.loc 1 10684 0
	movq	-136(%rbp), %rax	# op0, tmp1248
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _665->fld[0].rtx, D.29447
	movq	%rax, %rdi	# D.29447,
	call	get_last_value	#
	movq	%rax, -120(%rbp)	# tmp1249, tem
	cmpq	$0, -120(%rbp)	#, tem
	je	.L1850	#,
	.loc 1 10685 0
	movq	-120(%rbp), %rax	# tem, tmp1250
	movzwl	(%rax), %eax	# tem_667->code, D.29446
	movzwl	%ax, %eax	# D.29446, D.29450
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29455
	cmpb	$60, %al	#, D.29455
	jne	.L1850	#,
.L1851:
	.loc 1 10687 0
	movq	-136(%rbp), %rax	# op0, tmp1252
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _671->fld[0].rtx, tmp1253
	movq	%rax, -136(%rbp)	# tmp1253, op0
	.loc 1 10688 0
	jmp	.L1741	#
.L1850:
	.loc 1 10695 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1852	#,
	.loc 1 10696 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1852	#,
	.loc 1 10697 0
	movq	-136(%rbp), %rax	# op0, tmp1254
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _673->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1852	#,
	.loc 1 10698 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1852	#,
	.loc 1 10699 0
	movq	-136(%rbp), %rax	# op0, tmp1255
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _675->fld[0].rtwint, D.29449
	movq	%rax, %rdx	# D.29449, D.29451
	movl	-168(%rbp), %eax	# mode, mode.1204
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	movq	%rdx, %rsi	# D.29451, D.29451
	andq	%rax, %rsi	# D.29451, D.29451
	.loc 1 10700 0
	movl	-164(%rbp), %eax	# mode_width, tmp1257
	subl	$1, %eax	#, D.29454
	movl	$1, %edx	#, tmp1258
	movl	%eax, %ecx	# D.29450, tmp1531
	salq	%cl, %rdx	# tmp1531, D.29451
	movq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10699 0
	cmpq	%rax, %rsi	# D.29451, D.29451
	jne	.L1852	#,
	.loc 1 10702 0
	movq	-136(%rbp), %rax	# op0, tmp1259
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1260
	movq	%rax, -136(%rbp)	# tmp1260, op0
	.loc 1 10703 0
	cmpl	$103, -196(%rbp)	#, code
	jne	.L1853	#,
	.loc 1 10703 0 is_stmt 0 discriminator 1
	movl	$104, %eax	#, iftmp.1205
	jmp	.L1854	#
.L1853:
	.loc 1 10703 0 discriminator 2
	movl	$107, %eax	#, iftmp.1205
.L1854:
	.loc 1 10703 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1205, code
	.loc 1 10704 0 is_stmt 1 discriminator 3
	jmp	.L1741	#
.L1852:
	.loc 1 10711 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	jne	.L1855	#,
	.loc 1 10711 0 is_stmt 0 discriminator 1
	cmpl	$0, -152(%rbp)	#, unsigned_comparison_p
	je	.L1856	#,
.L1855:
	.loc 1 10712 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1261
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _688->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1856	#,
	.loc 1 10713 0
	movq	-136(%rbp), %rax	# op0, tmp1262
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _690->fld[0].rtwint, D.29449
	movq	%rax, %rdx	# D.29449, D.29451
	movl	-168(%rbp), %eax	# mode, mode.1206
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	addq	$1, %rax	#, D.29451
	movq	%rax, %rdi	# D.29451,
	call	exact_log2_wide	#
	movl	%eax, -148(%rbp)	# tmp1264, i
	cmpl	$0, -148(%rbp)	#, i
	js	.L1856	#,
	.loc 1 10716 0
	movl	-148(%rbp), %eax	# i, tmp1265
	movq	-88(%rbp), %rdx	# const_op, tmp1266
	movl	%eax, %ecx	# tmp1265, tmp1533
	sarq	%cl, %rdx	# tmp1533, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	testq	%rax, %rax	# D.29449
	jne	.L1856	#,
	.loc 1 10717 0
	movl	-148(%rbp), %eax	# i, i.1207
	movl	$1, %edx	#,
	movl	$1, %esi	#,
	movl	%eax, %edi	# i.1207,
	call	mode_for_size	#
	movl	%eax, -188(%rbp)	# tmp1267, tmode
	cmpl	$51, -188(%rbp)	#, tmode
	je	.L1856	#,
	.loc 1 10719 0
	movq	-136(%rbp), %rax	# op0, tmp1268
	movq	8(%rax), %rdx	# op0_27->fld[0].rtx, D.29447
	movl	-188(%rbp), %eax	# tmode, tmp1269
	movq	%rdx, %rsi	# D.29447,
	movl	%eax, %edi	# tmp1269,
	call	gen_lowpart_for_combine	#
	movq	%rax, -136(%rbp)	# tmp1270, op0
	.loc 1 10720 0
	jmp	.L1741	#
.L1856:
	.loc 1 10727 0
	movq	-136(%rbp), %rax	# op0, tmp1271
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _703->code, D.29446
	cmpw	$63, %ax	#, D.29446
	jne	.L1857	#,
	.loc 1 10736 0
	movq	-136(%rbp), %rax	# op0, tmp1272
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _705->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _706->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	movzwl	%ax, %eax	# D.29446, D.29454
	.loc 1 10728 0
	cmpl	-164(%rbp), %eax	# mode_width, D.29454
	jb	.L1857	#,
	.loc 1 10738 0
	movq	-136(%rbp), %rax	# op0, tmp1274
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	%rax, %rdi	# D.29447,
	call	subreg_lowpart_p	#
	.loc 1 10735 0
	testl	%eax, %eax	# D.29450
	je	.L1857	#,
	.loc 1 10746 0
	movq	-136(%rbp), %rax	# op0, tmp1275
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _713->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29448
	.loc 1 10747 0
	movq	-136(%rbp), %rax	# op0, tmp1277
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _717->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _718->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29448
	.loc 1 10746 0
	cmpb	%al, %dl	# D.29448, D.29448
	ja	.L1857	#,
	.loc 1 10749 0
	movq	-136(%rbp), %rax	# op0, tmp1279
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _722->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1857	#,
	.loc 1 10750 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1857	#,
	.loc 1 10751 0
	movq	-136(%rbp), %rax	# op0, tmp1280
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _724->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _725->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	cmpw	$64, %ax	#, D.29446
	ja	.L1857	#,
	.loc 1 10753 0
	movq	-136(%rbp), %rax	# op0, tmp1282
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _729->fld[0].rtwint, D.29449
	movq	-96(%rbp), %rdx	# mask, tmp1283
	notq	%rdx	# D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	testq	%rax, %rax	# D.29451
	jne	.L1857	#,
	.loc 1 10754 0
	movq	-136(%rbp), %rax	# op0, tmp1284
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _734->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _735->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	notq	%rax	# D.29451
	movq	%rax, %rdx	# D.29451, D.29451
	.loc 1 10755 0
	movq	-136(%rbp), %rax	# op0, tmp1286
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _740->fld[0].rtwint, D.29449
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10754 0
	testq	%rax, %rax	# D.29451
	jne	.L1857	#,
	.loc 1 10756 0
	movq	-136(%rbp), %rax	# op0, tmp1287
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _744->fld[0].rtwint, D.29449
	cmpq	-96(%rbp), %rax	# mask, D.29451
	je	.L1857	#,
	.loc 1 10757 0
	movq	-136(%rbp), %rax	# op0, tmp1288
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _747->fld[0].rtwint, D.29449
	movq	%rax, %rdx	# D.29449, D.29451
	.loc 1 10758 0
	movq	-136(%rbp), %rax	# op0, tmp1289
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _750->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _751->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	.loc 1 10757 0
	cmpq	%rax, %rdx	# D.29451, D.29451
	je	.L1857	#,
	.loc 1 10763 0
	movq	-136(%rbp), %rax	# op0, tmp1291
	movq	16(%rax), %rcx	# op0_27->fld[1].rtx, D.29447
	.loc 1 10765 0
	movq	-136(%rbp), %rax	# op0, tmp1292
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	.loc 1 10763 0
	movq	8(%rax), %rdx	# _756->fld[0].rtx, D.29447
	.loc 1 10764 0
	movq	-136(%rbp), %rax	# op0, tmp1293
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _758->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _759->mode, D.29448
	.loc 1 10763 0
	movzbl	%al, %eax	# D.29448, D.29452
	movl	%eax, %esi	# D.29452,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, %rdx	#, D.29447
	.loc 1 10762 0
	movl	-168(%rbp), %eax	# mode, tmp1294
	movq	%rdx, %rsi	# D.29447,
	movl	%eax, %edi	# tmp1294,
	call	gen_lowpart_for_combine	#
	movq	%rax, -136(%rbp)	# tmp1295, op0
	.loc 1 10766 0
	jmp	.L1741	#
.L1857:
	.loc 1 10771 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1858	#,
	.loc 1 10771 0 is_stmt 0 discriminator 1
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1858	#,
	.loc 1 10772 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1296
	movq	16(%rax), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	const_int_rtx+520(%rip), %rax	# const_int_rtx, D.29447
	cmpq	%rax, %rdx	# D.29447, D.29447
	jne	.L1858	#,
	.loc 1 10773 0
	movq	-136(%rbp), %rax	# op0, tmp1297
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _766->code, D.29446
	cmpw	$90, %ax	#, D.29446
	jne	.L1858	#,
	.loc 1 10774 0
	movq	-136(%rbp), %rax	# op0, tmp1298
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _768->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _769->code, D.29446
	cmpw	$86, %ax	#, D.29446
	jne	.L1858	#,
	.loc 1 10778 0
	movq	-136(%rbp), %rax	# op0, tmp1299
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	.loc 1 10777 0
	movq	16(%rax), %rcx	# _771->fld[1].rtx, D.29447
	.loc 1 10778 0
	movq	-136(%rbp), %rax	# op0, tmp1300
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _773->fld[0].rtx, D.29447
	.loc 1 10777 0
	movq	8(%rax), %rdx	# _774->fld[0].rtx, D.29447
	movl	-168(%rbp), %eax	# mode, tmp1301
	movl	%eax, %esi	# tmp1301,
	movl	$90, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, %rdx	#, D.29447
	.loc 1 10776 0
	movl	-168(%rbp), %esi	# mode, tmp1302
	movq	-136(%rbp), %rax	# op0, tmp1303
	movl	$1, %ecx	#,
	movq	%rax, %rdi	# tmp1303,
	call	simplify_and_const_int	#
	movq	%rax, -136(%rbp)	# tmp1304, op0
	.loc 1 10781 0
	cmpl	$102, -196(%rbp)	#, code
	jne	.L1859	#,
	.loc 1 10781 0 is_stmt 0 discriminator 1
	movl	$103, %eax	#, iftmp.1208
	jmp	.L1860	#
.L1859:
	.loc 1 10781 0 discriminator 2
	movl	$102, %eax	#, iftmp.1208
.L1860:
	.loc 1 10781 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1208, code
	.loc 1 10782 0 is_stmt 1 discriminator 3
	jmp	.L1741	#
.L1858:
	.loc 1 10784 0
	jmp	.L1808	#
.L1797:
	.loc 1 10792 0
	movq	-136(%rbp), %rax	# op0, tmp1305
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _781->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1861	#,
	.loc 1 10793 0
	movq	-136(%rbp), %rax	# op0, tmp1306
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _783->fld[0].rtwint, D.29449
	testq	%rax, %rax	# D.29449
	js	.L1861	#,
	.loc 1 10794 0
	movq	-136(%rbp), %rax	# op0, tmp1307
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rdx	# _785->fld[0].rtwint, D.29449
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	sete	%al	#, D.29457
	movzbl	%al, %eax	# D.29457, D.29449
	addq	%rdx, %rax	# D.29449, D.29449
	cmpq	$63, %rax	#, D.29449
	jg	.L1861	#,
	.loc 1 10797 0
	movq	-136(%rbp), %rax	# op0, tmp1308
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _790->fld[0].rtwint, D.29449
	movl	$1, %edx	#, tmp1309
	movl	%eax, %ecx	# D.29450, tmp1536
	salq	%cl, %rdx	# tmp1536, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	subq	$1, %rax	#, D.29449
	andq	-88(%rbp), %rax	# const_op, D.29449
	.loc 1 10796 0
	testq	%rax, %rax	# D.29449
	jne	.L1861	#,
	.loc 1 10798 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1861	#,
	.loc 1 10799 0
	movq	-136(%rbp), %rax	# op0, tmp1310
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movl	-168(%rbp), %edx	# mode, tmp1311
	movl	%edx, %esi	# tmp1311,
	movq	%rax, %rdi	# D.29447,
	call	nonzero_bits	#
	.loc 1 10800 0
	movq	-136(%rbp), %rdx	# op0, tmp1312
	movq	16(%rdx), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	8(%rdx), %rdx	# _798->fld[0].rtwint, D.29449
	movl	%edx, %ecx	# D.29449, D.29456
	.loc 1 10801 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	sete	%dl	#, D.29457
	movzbl	%dl, %edx	# D.29457, D.29456
	.loc 1 10800 0
	addl	%ecx, %edx	# D.29456, D.29456
	movq	-96(%rbp), %rsi	# mask, tmp1313
	movl	%edx, %ecx	# D.29450, tmp1538
	shrq	%cl, %rsi	# tmp1538, D.29451
	movq	%rsi, %rdx	# D.29451, D.29451
	notq	%rdx	# D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10799 0
	testq	%rax, %rax	# D.29451
	jne	.L1861	#,
.LBB101:
	.loc 1 10805 0
	movl	-168(%rbp), %eax	# mode, mode.1209
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29451
	movq	-88(%rbp), %rax	# const_op, const_op.1210
	andq	%rdx, %rax	# D.29451, tmp1315
	movq	%rax, -48(%rbp)	# tmp1315, temp
	.loc 1 10807 0
	movq	-136(%rbp), %rax	# op0, tmp1316
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _812->fld[0].rtwint, D.29449
	movl	%eax, %ecx	# D.29450, tmp1539
	shrq	%cl, -48(%rbp)	# tmp1539, temp
	.loc 1 10808 0
	movq	-48(%rbp), %rax	# temp, temp.1211
	movl	-168(%rbp), %edx	# mode, tmp1317
	movl	%edx, %esi	# tmp1317,
	movq	%rax, %rdi	# temp.1211,
	call	trunc_int_for_mode	#
	movq	%rax, %rsi	# D.29449,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1318, op1
	.loc 1 10809 0
	movq	-136(%rbp), %rax	# op0, tmp1319
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1320
	movq	%rax, -136(%rbp)	# tmp1320, op0
	.loc 1 10810 0
	jmp	.L1741	#
.L1861:
.LBE101:
	.loc 1 10815 0
	cmpl	$0, -156(%rbp)	#, sign_bit_comparison_p
	je	.L1862	#,
	.loc 1 10815 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# op0, tmp1321
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _820->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1862	#,
	.loc 1 10816 0 is_stmt 1
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1862	#,
	.loc 1 10821 0
	movq	-136(%rbp), %rax	# op0, tmp1322
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _822->fld[0].rtwint, D.29449
	.loc 1 10820 0
	movl	-164(%rbp), %edx	# mode_width, tmp1323
	subl	%eax, %edx	# D.29456, D.29456
	movl	%edx, %eax	# D.29456, D.29456
	subl	$1, %eax	#, D.29456
	movl	$1, %edx	#, tmp1324
	movl	%eax, %ecx	# D.29450, tmp1542
	salq	%cl, %rdx	# tmp1542, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	.loc 1 10818 0
	movq	%rax, %rcx	# D.29449, D.29451
	movq	-136(%rbp), %rax	# op0, tmp1325
	movq	8(%rax), %rdx	# op0_27->fld[0].rtx, D.29447
	movl	-168(%rbp), %eax	# mode, tmp1326
	movl	%eax, %esi	# tmp1326,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, -136(%rbp)	# tmp1327, op0
	.loc 1 10822 0
	cmpl	$107, -196(%rbp)	#, code
	jne	.L1863	#,
	.loc 1 10822 0 is_stmt 0 discriminator 1
	movl	$102, %eax	#, iftmp.1212
	jmp	.L1864	#
.L1863:
	.loc 1 10822 0 discriminator 2
	movl	$103, %eax	#, iftmp.1212
.L1864:
	.loc 1 10822 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1212, code
	.loc 1 10823 0 is_stmt 1 discriminator 3
	jmp	.L1741	#
.L1862:
	.loc 1 10829 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1865	#,
	.loc 1 10829 0 is_stmt 0 discriminator 1
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1865	#,
	.loc 1 10830 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1328
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _835->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1865	#,
	.loc 1 10831 0
	movq	-136(%rbp), %rax	# op0, tmp1329
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rdx	# _837->fld[0].rtwint, D.29449
	movl	-164(%rbp), %eax	# mode_width, tmp1330
	subl	$1, %eax	#, D.29454
	movl	%eax, %eax	# D.29454, D.29449
	cmpq	%rax, %rdx	# D.29449, D.29449
	jne	.L1865	#,
	.loc 1 10833 0
	movq	-136(%rbp), %rax	# op0, tmp1331
	movq	8(%rax), %rdx	# op0_27->fld[0].rtx, D.29447
	movl	-168(%rbp), %eax	# mode, tmp1332
	movl	$1, %ecx	#,
	movl	%eax, %esi	# tmp1332,
	movl	$0, %edi	#,
	call	simplify_and_const_int	#
	movq	%rax, -136(%rbp)	# tmp1333, op0
	.loc 1 10835 0
	jmp	.L1741	#
.L1865:
	.loc 1 10837 0
	jmp	.L1808	#
.L1799:
	.loc 1 10842 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	je	.L1866	#,
	.loc 1 10842 0 is_stmt 0 discriminator 1
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1866	#,
	.loc 1 10843 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1334
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _843->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1866	#,
	.loc 1 10847 0
	movq	-136(%rbp), %rax	# op0, tmp1335
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _845->fld[0].rtwint, D.29449
	.loc 1 10845 0
	movl	%eax, %ecx	# D.29449, D.29450
	movq	-136(%rbp), %rax	# op0, tmp1336
	movq	8(%rax), %rdx	# op0_27->fld[0].rtx, D.29447
	movl	-168(%rbp), %eax	# mode, tmp1337
	movl	%ecx, %r8d	# D.29450,
	movq	%rdx, %rcx	# D.29447,
	movl	%eax, %edx	# tmp1337,
	movl	$90, %esi	#,
	movl	$0, %edi	#,
	call	simplify_shift_const	#
	movq	%rax, -136(%rbp)	# tmp1338, op0
	.loc 1 10848 0
	jmp	.L1741	#
.L1866:
	.loc 1 10853 0
	cmpl	$0, -152(%rbp)	#, unsigned_comparison_p
	jne	.L1867	#,
	.loc 1 10854 0
	movq	-136(%rbp), %rax	# op0, tmp1339
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _850->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1867	#,
	.loc 1 10855 0
	movq	-136(%rbp), %rax	# op0, tmp1340
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _852->code, D.29446
	cmpw	$87, %ax	#, D.29446
	jne	.L1867	#,
	.loc 1 10856 0
	movq	-136(%rbp), %rax	# op0, tmp1341
	movq	16(%rax), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	-136(%rbp), %rax	# op0, tmp1342
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _855->fld[1].rtx, D.29447
	cmpq	%rax, %rdx	# D.29447, D.29447
	jne	.L1867	#,
	.loc 1 10857 0
	movq	-136(%rbp), %rax	# op0, tmp1343
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _857->fld[0].rtwint, D.29449
	movl	-164(%rbp), %edx	# mode_width, tmp1344
	subl	%eax, %edx	# D.29454, D.29454
	movl	%edx, %eax	# D.29454, D.29454
	movl	$1, %edx	#,
	movl	$1, %esi	#,
	movl	%eax, %edi	# D.29454,
	call	mode_for_size	#
	movl	%eax, -188(%rbp)	# tmp1345, tmode
	cmpl	$51, -188(%rbp)	#, tmode
	je	.L1867	#,
	.loc 1 10860 0
	movl	-188(%rbp), %eax	# tmode, tmode.1213
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	shrq	%rax	# D.29451
	movq	%rax, %rdx	# D.29451, D.29451
	.loc 1 10859 0
	movq	-88(%rbp), %rax	# const_op, const_op.1214
	.loc 1 10860 0
	addq	%rdx, %rax	# D.29451, D.29451
	leaq	1(%rax), %rdx	#, D.29451
	.loc 1 10861 0
	movl	-188(%rbp), %eax	# tmode, tmode.1215
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	.loc 1 10859 0
	cmpq	%rax, %rdx	# D.29451, D.29451
	ja	.L1867	#,
	.loc 1 10863 0
	movq	-136(%rbp), %rax	# op0, tmp1348
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rdx	# _870->fld[0].rtx, D.29447
	movl	-188(%rbp), %eax	# tmode, tmp1349
	movq	%rdx, %rsi	# D.29447,
	movl	%eax, %edi	# tmp1349,
	call	gen_lowpart_for_combine	#
	movq	%rax, -136(%rbp)	# tmp1350, op0
	.loc 1 10864 0
	jmp	.L1741	#
.L1867:
	.loc 1 10870 0
	cmpl	$0, -152(%rbp)	#, unsigned_comparison_p
	jne	.L1800	#,
	.loc 1 10871 0
	movq	-136(%rbp), %rax	# op0, tmp1351
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _873->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1800	#,
	.loc 1 10872 0
	movq	-136(%rbp), %rax	# op0, tmp1352
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _875->code, D.29446
	cmpw	$75, %ax	#, D.29446
	jne	.L1800	#,
	.loc 1 10873 0
	movq	-136(%rbp), %rax	# op0, tmp1353
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _877->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _878->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1800	#,
	.loc 1 10874 0
	movq	-136(%rbp), %rax	# op0, tmp1354
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _880->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _881->code, D.29446
	cmpw	$87, %ax	#, D.29446
	jne	.L1800	#,
	.loc 1 10875 0
	movq	-136(%rbp), %rax	# op0, tmp1355
	movq	16(%rax), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	-136(%rbp), %rax	# op0, tmp1356
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _884->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _885->fld[1].rtx, D.29447
	cmpq	%rax, %rdx	# D.29447, D.29447
	jne	.L1800	#,
	.loc 1 10876 0
	movq	-136(%rbp), %rax	# op0, tmp1357
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _887->fld[0].rtwint, D.29449
	movl	-164(%rbp), %edx	# mode_width, tmp1358
	subl	%eax, %edx	# D.29454, D.29454
	movl	%edx, %eax	# D.29454, D.29454
	movl	$1, %edx	#,
	movl	$1, %esi	#,
	movl	%eax, %edi	# D.29454,
	call	mode_for_size	#
	movl	%eax, -188(%rbp)	# tmp1359, tmode
	cmpl	$51, -188(%rbp)	#, tmode
	je	.L1800	#,
	.loc 1 10879 0
	movl	-188(%rbp), %eax	# tmode, tmode.1216
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	shrq	%rax	# D.29451
	movq	%rax, %rdx	# D.29451, D.29451
	.loc 1 10878 0
	movq	-88(%rbp), %rax	# const_op, const_op.1217
	.loc 1 10879 0
	addq	%rdx, %rax	# D.29451, D.29451
	leaq	1(%rax), %rdx	#, D.29451
	.loc 1 10880 0
	movl	-188(%rbp), %eax	# tmode, tmode.1218
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	.loc 1 10878 0
	cmpq	%rax, %rdx	# D.29451, D.29451
	ja	.L1800	#,
.LBB102:
	.loc 1 10882 0
	movq	-136(%rbp), %rax	# op0, tmp1362
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _900->fld[0].rtx, D.29447
	movq	8(%rax), %rax	# _901->fld[0].rtx, tmp1363
	movq	%rax, -40(%rbp)	# tmp1363, inner
	.loc 1 10883 0
	movq	-136(%rbp), %rax	# op0, tmp1364
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movq	16(%rax), %rax	# _903->fld[1].rtx, tmp1365
	movq	%rax, -32(%rbp)	# tmp1365, add_const
	.loc 1 10884 0
	movq	-136(%rbp), %rax	# op0, tmp1366
	movq	16(%rax), %rcx	# op0_27->fld[1].rtx, D.29447
	movq	-136(%rbp), %rax	# op0, tmp1367
	movzbl	2(%rax), %eax	# op0_27->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29452
	movq	-32(%rbp), %rdx	# add_const, tmp1368
	movl	%eax, %esi	# D.29452,
	movl	$89, %edi	#,
	call	gen_binary	#
	movq	%rax, -24(%rbp)	# tmp1369, new_const
	.loc 1 10887 0
	movq	-40(%rbp), %rdx	# inner, tmp1370
	movl	-188(%rbp), %eax	# tmode, tmp1371
	movq	%rdx, %rsi	# tmp1370,
	movl	%eax, %edi	# tmp1371,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29447
	movq	-24(%rbp), %rcx	# new_const, tmp1372
	movl	-188(%rbp), %eax	# tmode, tmp1373
	movl	%eax, %esi	# tmp1373,
	movl	$75, %edi	#,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp1374, op0
	.loc 1 10890 0
	jmp	.L1741	#
.L1800:
.LBE102:
	.loc 1 10899 0
	movq	-136(%rbp), %rax	# op0, tmp1375
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _911->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1868	#,
	.loc 1 10900 0
	movq	-136(%rbp), %rax	# op0, tmp1376
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _913->fld[0].rtwint, D.29449
	testq	%rax, %rax	# D.29449
	js	.L1868	#,
	.loc 1 10901 0
	movq	-136(%rbp), %rax	# op0, tmp1377
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _915->fld[0].rtwint, D.29449
	cmpq	$63, %rax	#, D.29449
	jg	.L1868	#,
	.loc 1 10902 0
	cmpl	$64, -164(%rbp)	#, mode_width
	ja	.L1868	#,
	.loc 1 10903 0
	movq	-136(%rbp), %rax	# op0, tmp1378
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, D.29447
	movl	-168(%rbp), %edx	# mode, tmp1379
	movl	%edx, %esi	# tmp1379,
	movq	%rax, %rdi	# D.29447,
	call	nonzero_bits	#
	.loc 1 10904 0
	movq	-136(%rbp), %rdx	# op0, tmp1380
	movq	16(%rdx), %rdx	# op0_27->fld[1].rtx, D.29447
	movq	8(%rdx), %rdx	# _919->fld[0].rtwint, D.29449
	movl	$1, %esi	#, tmp1381
	movl	%edx, %ecx	# D.29450, tmp1548
	salq	%cl, %rsi	# tmp1548, D.29449
	movq	%rsi, %rdx	# D.29449, D.29449
	subq	$1, %rdx	#, D.29449
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10903 0
	testq	%rax, %rax	# D.29451
	jne	.L1868	#,
	.loc 1 10906 0
	movq	-136(%rbp), %rax	# op0, tmp1382
	movzwl	(%rax), %eax	# op0_27->code, D.29446
	.loc 1 10909 0
	cmpw	$90, %ax	#, D.29446
	je	.L1869	#,
	.loc 1 10907 0
	movl	-168(%rbp), %eax	# mode, mode.1220
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29451
	movq	-136(%rbp), %rax	# op0, tmp1384
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _929->fld[0].rtwint, D.29449
	movl	%eax, %ecx	# D.29450, tmp1550
	shrq	%cl, %rdx	# tmp1550, D.29451
	movq	%rdx, %rax	# D.29451, D.29451
	shrq	%rax	# D.29451
	.loc 1 10909 0
	addq	$1, %rax	#, iftmp.1219
	jmp	.L1870	#
.L1869:
	.loc 1 10909 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.1219
.L1870:
	.loc 1 10905 0 is_stmt 1
	movq	-88(%rbp), %rdx	# const_op, const_op.1221
	.loc 1 10906 0
	leaq	(%rax,%rdx), %rsi	#, D.29451
	.loc 1 10910 0
	movl	-168(%rbp), %eax	# mode, mode.1222
	cltq
	movq	mode_mask_array(,%rax,8), %rdx	# mode_mask_array, D.29451
	movq	-136(%rbp), %rax	# op0, tmp1386
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _940->fld[0].rtwint, D.29449
	movl	%eax, %ecx	# D.29450, tmp1552
	shrq	%cl, %rdx	# tmp1552, D.29451
	movq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10905 0
	cmpq	%rax, %rsi	# D.29451, D.29451
	ja	.L1868	#,
	.loc 1 10914 0
	movq	-136(%rbp), %rax	# op0, tmp1387
	movzwl	(%rax), %eax	# op0_27->code, D.29446
	cmpw	$90, %ax	#, D.29446
	jne	.L1871	#,
	.loc 1 10915 0
	movl	-196(%rbp), %eax	# code, tmp1388
	movl	%eax, %edi	# tmp1388,
	call	unsigned_condition	#
	movl	%eax, -196(%rbp)	# tmp1389, code
.L1871:
	.loc 1 10917 0
	movq	-136(%rbp), %rax	# op0, tmp1390
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rax	# _946->fld[0].rtwint, D.29449
	movl	%eax, %ecx	# D.29450, tmp1553
	salq	%cl, -88(%rbp)	# tmp1553, const_op
	.loc 1 10918 0
	movq	-88(%rbp), %rax	# const_op, tmp1391
	movq	%rax, %rsi	# tmp1391,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1392, op1
	.loc 1 10919 0
	movq	-136(%rbp), %rax	# op0, tmp1393
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1394
	movq	%rax, -136(%rbp)	# tmp1394, op0
	.loc 1 10920 0
	jmp	.L1741	#
.L1868:
	.loc 1 10925 0
	cmpq	$0, -88(%rbp)	#, const_op
	jne	.L1872	#,
	.loc 1 10926 0
	cmpl	$0, -160(%rbp)	#, equality_comparison_p
	jne	.L1873	#,
	.loc 1 10926 0 is_stmt 0 discriminator 1
	cmpl	$0, -156(%rbp)	#, sign_bit_comparison_p
	je	.L1872	#,
.L1873:
	.loc 1 10927 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1395
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movzwl	(%rax), %eax	# _952->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1872	#,
	.loc 1 10928 0
	movq	-136(%rbp), %rax	# op0, tmp1396
	movq	16(%rax), %rax	# op0_27->fld[1].rtx, D.29447
	movq	8(%rax), %rdx	# _954->fld[0].rtwint, D.29449
	movl	-164(%rbp), %eax	# mode_width, tmp1397
	subl	$1, %eax	#, D.29454
	movl	%eax, %eax	# D.29454, D.29449
	cmpq	%rax, %rdx	# D.29449, D.29449
	jne	.L1872	#,
	.loc 1 10930 0
	movq	-136(%rbp), %rax	# op0, tmp1398
	movq	8(%rax), %rax	# op0_27->fld[0].rtx, tmp1399
	movq	%rax, -136(%rbp)	# tmp1399, op0
	.loc 1 10931 0
	cmpl	$102, -196(%rbp)	#, code
	je	.L1874	#,
	.loc 1 10931 0 is_stmt 0 discriminator 2
	cmpl	$105, -196(%rbp)	#, code
	jne	.L1875	#,
.L1874:
	.loc 1 10931 0 discriminator 1
	movl	$107, %eax	#, iftmp.1223
	jmp	.L1876	#
.L1875:
	movl	$104, %eax	#, iftmp.1223
.L1876:
	.loc 1 10931 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1223, code
	.loc 1 10932 0 is_stmt 1 discriminator 3
	jmp	.L1741	#
.L1872:
	.loc 1 10934 0
	jmp	.L1808	#
.L1902:
	.loc 1 10937 0
	nop
.L1808:
	.loc 1 10940 0
	jmp	.L1743	#
.L1741:
.LBE99:
	.loc 1 10094 0 discriminator 1
	movq	-128(%rbp), %rax	# op1, tmp1400
	movzwl	(%rax), %eax	# op1_50->code, D.29446
	cmpw	$54, %ax	#, D.29446
	je	.L1877	#,
.L1743:
	.loc 1 10965 0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29447
	cmpq	-128(%rbp), %rax	# op1, D.29447
	jne	.L1878	#,
	.loc 1 10965 0 is_stmt 0 discriminator 1
	movl	$74, %eax	#, iftmp.1224
	jmp	.L1879	#
.L1878:
	.loc 1 10965 0 discriminator 2
	movl	$47, %eax	#, iftmp.1224
.L1879:
	.loc 1 10965 0 discriminator 3
	movq	-136(%rbp), %rdx	# op0, tmp1401
	movl	%eax, %esi	# iftmp.1224,
	movq	%rdx, %rdi	# tmp1401,
	call	make_compound_operation	#
	movq	%rax, -136(%rbp)	# tmp1402, op0
	.loc 1 10966 0 is_stmt 1 discriminator 3
	movq	-128(%rbp), %rax	# op1, tmp1403
	movl	$47, %esi	#,
	movq	%rax, %rdi	# tmp1403,
	call	make_compound_operation	#
	movq	%rax, -128(%rbp)	# tmp1404, op1
	.loc 1 10968 0 discriminator 3
	movq	-136(%rbp), %rax	# op0, tmp1405
	movzwl	(%rax), %eax	# op0_965->code, D.29446
	cmpw	$63, %ax	#, D.29446
	jne	.L1880	#,
	.loc 1 10968 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# op0, tmp1406
	movq	%rax, %rdi	# tmp1406,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29450
	je	.L1880	#,
	.loc 1 10971 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1407
	movq	8(%rax), %rax	# op0_965->fld[0].rtx, D.29447
	movzwl	(%rax), %eax	# _969->code, D.29446
	cmpw	$61, %ax	#, D.29446
	jne	.L1880	#,
	.loc 1 10972 0
	movq	-136(%rbp), %rax	# op0, tmp1408
	movzbl	2(%rax), %eax	# op0_965->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29453
	cmpl	$1, %eax	#, D.29453
	jne	.L1880	#,
	.loc 1 10973 0
	movq	-136(%rbp), %rax	# op0, tmp1410
	movq	8(%rax), %rax	# op0_965->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _974->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29453
	cmpl	$1, %eax	#, D.29453
	jne	.L1880	#,
	.loc 1 10974 0
	cmpl	$102, -196(%rbp)	#, code
	je	.L1881	#,
	.loc 1 10974 0 is_stmt 0 discriminator 1
	cmpl	$103, -196(%rbp)	#, code
	jne	.L1880	#,
.L1881:
	.loc 1 10976 0 is_stmt 1
	movq	-136(%rbp), %rax	# op0, tmp1412
	movzbl	2(%rax), %eax	# op0_965->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29448
	.loc 1 10977 0
	movq	-136(%rbp), %rax	# op0, tmp1414
	movq	8(%rax), %rax	# op0_965->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _981->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29448
	.loc 1 10976 0
	cmpb	%al, %dl	# D.29448, D.29448
	jbe	.L1882	#,
	.loc 1 10979 0
	movq	-136(%rbp), %rax	# op0, tmp1416
	movq	8(%rax), %rax	# op0_965->fld[0].rtx, tmp1417
	movq	%rax, -136(%rbp)	# tmp1417, op0
	.loc 1 10980 0
	movq	-136(%rbp), %rax	# op0, tmp1418
	movzbl	2(%rax), %eax	# op0_985->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29452
	movq	-128(%rbp), %rdx	# op1, tmp1419
	movq	%rdx, %rsi	# tmp1419,
	movl	%eax, %edi	# D.29452,
	call	gen_lowpart_for_combine	#
	movq	%rax, -128(%rbp)	# tmp1420, op1
	jmp	.L1880	#
.L1882:
	.loc 1 10982 0
	movq	-136(%rbp), %rax	# op0, tmp1421
	movq	8(%rax), %rax	# op0_965->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _989->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29450
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	cmpw	$64, %ax	#, D.29446
	ja	.L1880	#,
	.loc 1 10985 0
	movq	-136(%rbp), %rax	# op0, tmp1423
	movq	8(%rax), %rax	# op0_965->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _993->mode, D.29448
	.loc 1 10984 0
	movzbl	%al, %edx	# D.29448, D.29452
	movq	-136(%rbp), %rax	# op0, tmp1424
	movq	8(%rax), %rax	# op0_965->fld[0].rtx, D.29447
	movl	%edx, %esi	# D.29452,
	movq	%rax, %rdi	# D.29447,
	call	nonzero_bits	#
	.loc 1 10986 0
	movq	-136(%rbp), %rdx	# op0, tmp1425
	movzbl	2(%rdx), %edx	# op0_965->mode, D.29448
	movzbl	%dl, %edx	# D.29448, D.29450
	movslq	%edx, %rdx	# D.29450, tmp1426
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29451
	notq	%rdx	# D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10984 0
	testq	%rax, %rax	# D.29451
	jne	.L1880	#,
	.loc 1 10988 0
	movq	-136(%rbp), %rax	# op0, tmp1427
	movq	8(%rax), %rax	# op0_965->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _1003->mode, D.29448
	movzbl	%al, %eax	# D.29448, D.29452
	movq	-128(%rbp), %rdx	# op1, tmp1428
	movq	%rdx, %rsi	# tmp1428,
	movl	%eax, %edi	# D.29452,
	call	gen_lowpart_for_combine	#
	movq	%rax, -120(%rbp)	# tmp1429, tem
	.loc 1 10990 0
	movq	-136(%rbp), %rax	# op0, tmp1430
	movq	8(%rax), %rax	# op0_965->fld[0].rtx, D.29447
	movzbl	2(%rax), %eax	# _1007->mode, D.29448
	movzbl	%al, %edx	# D.29448, D.29452
	movq	-120(%rbp), %rax	# tem, tmp1431
	movl	%edx, %esi	# D.29452,
	movq	%rax, %rdi	# tmp1431,
	call	nonzero_bits	#
	.loc 1 10991 0
	movq	-136(%rbp), %rdx	# op0, tmp1432
	movzbl	2(%rdx), %edx	# op0_965->mode, D.29448
	movzbl	%dl, %edx	# D.29448, D.29450
	movslq	%edx, %rdx	# D.29450, tmp1433
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29451
	notq	%rdx	# D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 10990 0
	testq	%rax, %rax	# D.29451
	jne	.L1880	#,
	.loc 1 10992 0
	movq	-136(%rbp), %rax	# op0, tmp1434
	movq	8(%rax), %rax	# op0_965->fld[0].rtx, tmp1435
	movq	%rax, -136(%rbp)	# tmp1435, op0
	movq	-120(%rbp), %rax	# tem, tmp1436
	movq	%rax, -128(%rbp)	# tmp1436, op1
.L1880:
	.loc 1 11002 0
	movq	-136(%rbp), %rax	# op0, tmp1437
	movzbl	2(%rax), %eax	# op0_30->mode, D.29448
	movzbl	%al, %eax	# D.29448, tmp1438
	movl	%eax, -144(%rbp)	# tmp1438, mode
	.loc 1 11003 0
	cmpl	$0, -144(%rbp)	#, mode
	je	.L1883	#,
	.loc 1 11003 0 is_stmt 0 discriminator 1
	movl	-144(%rbp), %eax	# mode, mode.1225
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29453
	cmpl	$1, %eax	#, D.29453
	jne	.L1883	#,
	.loc 1 11004 0 is_stmt 1
	movl	-144(%rbp), %eax	# mode, mode.1226
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29448
	movzbl	%al, %edx	# D.29448, D.29450
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1228
	andl	$33554432, %eax	#, D.29450
	testl	%eax, %eax	# D.29450
	je	.L1884	#,
	.loc 1 11004 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1227
	jmp	.L1885	#
.L1884:
	.loc 1 11004 0 discriminator 2
	movl	$4, %eax	#, iftmp.1227
.L1885:
	.loc 1 11004 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.1227, D.29450
	jge	.L1883	#,
	.loc 1 11005 0 is_stmt 1
	movl	-144(%rbp), %eax	# mode, tmp1441
	movl	%eax, %esi	# tmp1441,
	movl	$74, %edi	#,
	call	have_insn_for	#
	testl	%eax, %eax	# D.29450
	jne	.L1883	#,
	.loc 1 11006 0
	movl	-144(%rbp), %eax	# mode, mode.1229
	cltq
	movzbl	mode_wider_mode(%rax), %eax	# mode_wider_mode, D.29448
	movzbl	%al, %eax	# D.29448, tmp1443
	movl	%eax, -188(%rbp)	# tmp1443, tmode
	jmp	.L1886	#
.L1899:
	.loc 1 11010 0
	movl	-188(%rbp), %eax	# tmode, tmp1444
	movl	%eax, %esi	# tmp1444,
	movl	$74, %edi	#,
	call	have_insn_for	#
	testl	%eax, %eax	# D.29450
	je	.L1887	#,
.LBB103:
	.loc 1 11023 0
	cmpl	$103, -196(%rbp)	#, code
	je	.L1888	#,
	.loc 1 11018 0
	cmpl	$102, -196(%rbp)	#, code
	je	.L1888	#,
	.loc 1 11019 0
	cmpl	$108, -196(%rbp)	#, code
	je	.L1888	#,
	.loc 1 11019 0 is_stmt 0 discriminator 1
	cmpl	$109, -196(%rbp)	#, code
	je	.L1888	#,
	.loc 1 11020 0 is_stmt 1
	cmpl	$110, -196(%rbp)	#, code
	je	.L1888	#,
	.loc 1 11020 0 is_stmt 0 discriminator 1
	cmpl	$111, -196(%rbp)	#, code
	jne	.L1889	#,
.L1888:
	.loc 1 11021 0 is_stmt 1
	movl	-188(%rbp), %edx	# tmode, tmp1445
	movq	-136(%rbp), %rax	# op0, tmp1446
	movl	%edx, %esi	# tmp1445,
	movq	%rax, %rdi	# tmp1446,
	call	nonzero_bits	#
	.loc 1 11022 0
	movl	-144(%rbp), %edx	# mode, mode.1231
	movslq	%edx, %rdx	# mode.1231, tmp1447
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29451
	notq	%rdx	# D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 11021 0
	testq	%rax, %rax	# D.29451
	jne	.L1889	#,
	.loc 1 11023 0
	movq	-128(%rbp), %rax	# op1, tmp1448
	movzwl	(%rax), %eax	# op1_52->code, D.29446
	cmpw	$54, %ax	#, D.29446
	je	.L1890	#,
	.loc 1 11024 0
	movl	-188(%rbp), %edx	# tmode, tmp1449
	movq	-128(%rbp), %rax	# op1, tmp1450
	movl	%edx, %esi	# tmp1449,
	movq	%rax, %rdi	# tmp1450,
	call	nonzero_bits	#
	.loc 1 11025 0
	movl	-144(%rbp), %edx	# mode, mode.1232
	movslq	%edx, %rdx	# mode.1232, tmp1451
	movq	mode_mask_array(,%rdx,8), %rdx	# mode_mask_array, D.29451
	notq	%rdx	# D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	.loc 1 11024 0
	testq	%rax, %rax	# D.29451
	jne	.L1889	#,
.L1890:
	.loc 1 11023 0 discriminator 1
	movl	$1, %eax	#, iftmp.1230
	jmp	.L1891	#
.L1889:
	.loc 1 11023 0 is_stmt 0
	movl	$0, %eax	#, iftmp.1230
.L1891:
	.loc 1 11018 0 is_stmt 1
	movl	%eax, -140(%rbp)	# iftmp.1230, zero_extended
	.loc 1 11027 0
	cmpl	$0, -140(%rbp)	#, zero_extended
	jne	.L1892	#,
	.loc 1 11028 0
	movl	-188(%rbp), %edx	# tmode, tmp1452
	movq	-136(%rbp), %rax	# op0, tmp1453
	movl	%edx, %esi	# tmp1452,
	movq	%rax, %rdi	# tmp1453,
	call	num_sign_bit_copies	#
	.loc 1 11029 0
	movl	-188(%rbp), %edx	# tmode, tmode.1233
	movslq	%edx, %rdx	# tmode.1233, tmp1454
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29446
	movzwl	%dx, %ecx	# D.29446, D.29450
	movl	-144(%rbp), %edx	# mode, mode.1234
	movslq	%edx, %rdx	# mode.1234, tmp1455
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29446
	movzwl	%dx, %edx	# D.29446, D.29450
	subl	%edx, %ecx	# D.29450, D.29450
	movl	%ecx, %edx	# D.29450, D.29450
	.loc 1 11028 0
	cmpl	%edx, %eax	# D.29454, D.29454
	jbe	.L1893	#,
	.loc 1 11030 0
	movl	-188(%rbp), %edx	# tmode, tmp1456
	movq	-128(%rbp), %rax	# op1, tmp1457
	movl	%edx, %esi	# tmp1456,
	movq	%rax, %rdi	# tmp1457,
	call	num_sign_bit_copies	#
	.loc 1 11031 0
	movl	-188(%rbp), %edx	# tmode, tmode.1235
	movslq	%edx, %rdx	# tmode.1235, tmp1458
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29446
	movzwl	%dx, %ecx	# D.29446, D.29450
	movl	-144(%rbp), %edx	# mode, mode.1236
	movslq	%edx, %rdx	# mode.1236, tmp1459
	movzwl	mode_bitsize(%rdx,%rdx), %edx	# mode_bitsize, D.29446
	movzwl	%dx, %edx	# D.29446, D.29450
	subl	%edx, %ecx	# D.29450, D.29450
	movl	%ecx, %edx	# D.29450, D.29450
	.loc 1 11030 0
	cmpl	%edx, %eax	# D.29454, D.29454
	jbe	.L1893	#,
.L1892:
	.loc 1 11035 0
	movq	-136(%rbp), %rax	# op0, tmp1460
	movzwl	(%rax), %eax	# op0_30->code, D.29446
	cmpw	$83, %ax	#, D.29446
	jne	.L1894	#,
	.loc 1 11036 0
	movl	-144(%rbp), %eax	# mode, tmp1461
	movl	%eax, %esi	# tmp1461,
	movl	$83, %edi	#,
	call	have_insn_for	#
	testl	%eax, %eax	# D.29450
	jne	.L1894	#,
	.loc 1 11037 0
	movq	-136(%rbp), %rax	# op0, tmp1462
	movq	16(%rax), %rdx	# op0_30->fld[1].rtx, D.29447
	movl	-188(%rbp), %eax	# tmode, tmp1463
	movq	%rdx, %rsi	# D.29447,
	movl	%eax, %edi	# tmp1463,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rbx	#, D.29447
	movq	-136(%rbp), %rax	# op0, tmp1464
	movq	8(%rax), %rdx	# op0_30->fld[0].rtx, D.29447
	movl	-188(%rbp), %eax	# tmode, tmp1465
	movq	%rdx, %rsi	# D.29447,
	movl	%eax, %edi	# tmp1465,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29447
	movl	-188(%rbp), %eax	# tmode, tmp1466
	movq	%rbx, %rcx	# D.29447,
	movl	%eax, %esi	# tmp1466,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp1467, op0
.L1894:
	.loc 1 11043 0
	movq	-136(%rbp), %rdx	# op0, tmp1468
	movl	-188(%rbp), %eax	# tmode, tmp1469
	movq	%rdx, %rsi	# tmp1468,
	movl	%eax, %edi	# tmp1469,
	call	gen_lowpart_for_combine	#
	movq	%rax, -136(%rbp)	# tmp1470, op0
	.loc 1 11044 0
	cmpl	$0, -140(%rbp)	#, zero_extended
	je	.L1895	#,
	.loc 1 11044 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# op1, tmp1471
	movzwl	(%rax), %eax	# op1_52->code, D.29446
	cmpw	$54, %ax	#, D.29446
	jne	.L1895	#,
	.loc 1 11045 0 is_stmt 1
	movq	-128(%rbp), %rax	# op1, tmp1472
	movq	8(%rax), %rax	# op1_52->fld[0].rtwint, D.29449
	movq	%rax, %rdx	# D.29449, D.29451
	movl	-144(%rbp), %eax	# mode, mode.1237
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29451
	andq	%rdx, %rax	# D.29451, D.29451
	movq	%rax, %rsi	# D.29449,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, -128(%rbp)	# tmp1474, op1
.L1895:
	.loc 1 11046 0
	movq	-128(%rbp), %rdx	# op1, tmp1475
	movl	-188(%rbp), %eax	# tmode, tmp1476
	movq	%rdx, %rsi	# tmp1475,
	movl	%eax, %edi	# tmp1476,
	call	gen_lowpart_for_combine	#
	movq	%rax, -128(%rbp)	# tmp1477, op1
	.loc 1 11047 0
	jmp	.L1883	#
.L1893:
	.loc 1 11053 0
	movq	const_int_rtx+512(%rip), %rax	# const_int_rtx, D.29447
	cmpq	-128(%rbp), %rax	# op1, D.29447
	jne	.L1887	#,
	.loc 1 11053 0 is_stmt 0 discriminator 1
	cmpl	$107, -196(%rbp)	#, code
	je	.L1896	#,
	cmpl	$104, -196(%rbp)	#, code
	jne	.L1887	#,
.L1896:
	.loc 1 11054 0 is_stmt 1
	movl	-144(%rbp), %eax	# mode, mode.1238
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	cmpw	$64, %ax	#, D.29446
	ja	.L1887	#,
	.loc 1 11058 0
	movl	-144(%rbp), %eax	# mode, mode.1239
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	movzwl	%ax, %eax	# D.29446, D.29450
	subl	$1, %eax	#, D.29450
	.loc 1 11056 0
	movl	$1, %edx	#, tmp1480
	movl	%eax, %ecx	# D.29450, tmp1557
	salq	%cl, %rdx	# tmp1557, D.29449
	movq	%rdx, %rax	# D.29449, D.29449
	movq	%rax, %rsi	# D.29449,
	movl	$0, %edi	#,
	call	gen_rtx_CONST_INT	#
	movq	%rax, %rbx	#, D.29447
	movq	-136(%rbp), %rdx	# op0, tmp1481
	movl	-188(%rbp), %eax	# tmode, tmp1482
	movq	%rdx, %rsi	# tmp1481,
	movl	%eax, %edi	# tmp1482,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29447
	movl	-188(%rbp), %eax	# tmode, tmp1483
	movq	%rbx, %rcx	# D.29447,
	movl	%eax, %esi	# tmp1483,
	movl	$83, %edi	#,
	call	gen_binary	#
	movq	%rax, -136(%rbp)	# tmp1484, op0
	.loc 1 11060 0
	cmpl	$107, -196(%rbp)	#, code
	jne	.L1897	#,
	.loc 1 11060 0 is_stmt 0 discriminator 1
	movl	$102, %eax	#, iftmp.1240
	jmp	.L1898	#
.L1897:
	.loc 1 11060 0 discriminator 2
	movl	$103, %eax	#, iftmp.1240
.L1898:
	.loc 1 11060 0 discriminator 3
	movl	%eax, -196(%rbp)	# iftmp.1240, code
	.loc 1 11061 0 is_stmt 1 discriminator 3
	jmp	.L1883	#
.L1887:
.LBE103:
	.loc 1 11009 0
	movl	-188(%rbp), %eax	# tmode, tmode.1241
	cltq
	movzbl	mode_wider_mode(%rax), %eax	# mode_wider_mode, D.29448
	movzbl	%al, %eax	# D.29448, tmp1486
	movl	%eax, -188(%rbp)	# tmp1486, tmode
.L1886:
	.loc 1 11006 0 discriminator 1
	cmpl	$0, -188(%rbp)	#, tmode
	je	.L1883	#,
	.loc 1 11008 0
	movl	-188(%rbp), %eax	# tmode, tmode.1242
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29446
	cmpw	$64, %ax	#, D.29446
	jbe	.L1899	#,
.L1883:
	.loc 1 11071 0
	movq	-208(%rbp), %rax	# pop0, tmp1488
	movq	-136(%rbp), %rdx	# op0, tmp1489
	movq	%rdx, (%rax)	# tmp1489, *pop0_94(D)
	.loc 1 11072 0
	movq	-216(%rbp), %rax	# pop1, tmp1490
	movq	-128(%rbp), %rdx	# op1, tmp1491
	movq	%rdx, (%rax)	# tmp1491, *pop1_96(D)
	.loc 1 11074 0
	movl	-196(%rbp), %eax	# code, D.29458
	.loc 1 11075 0
	addq	$216, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE43:
	.size	simplify_comparison, .-simplify_comparison
	.type	combine_reversed_comparison_code, @function
combine_reversed_comparison_code:
.LFB44:
	.loc 1 11082 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# exp, exp
	.loc 1 11083 0
	movq	-24(%rbp), %rax	# exp, tmp71
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp71,
	call	reversed_comparison_code	#
	movl	%eax, -12(%rbp)	# tmp72, code1
	.loc 1 11086 0
	cmpl	$0, -12(%rbp)	#, code1
	jne	.L1904	#,
	.loc 1 11087 0
	movq	-24(%rbp), %rax	# exp, tmp73
	movq	8(%rax), %rax	# exp_2(D)->fld[0].rtx, D.29460
	movzbl	2(%rax), %eax	# _4->mode, D.29461
	movzbl	%al, %eax	# D.29461, D.29462
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29463
	cmpl	$4, %eax	#, D.29463
	je	.L1905	#,
.L1904:
	.loc 1 11088 0
	movl	-12(%rbp), %eax	# code1, D.29459
	jmp	.L1906	#
.L1905:
	.loc 1 11091 0
	movq	-24(%rbp), %rax	# exp, tmp75
	movq	8(%rax), %rax	# exp_2(D)->fld[0].rtx, D.29460
	movq	%rax, %rdi	# D.29460,
	call	get_last_value	#
	movq	%rax, -8(%rbp)	# tmp76, x
	.loc 1 11092 0
	cmpq	$0, -8(%rbp)	#, x
	je	.L1907	#,
	.loc 1 11092 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# x, tmp77
	movzwl	(%rax), %eax	# x_9->code, D.29464
	cmpw	$74, %ax	#, D.29464
	je	.L1908	#,
.L1907:
	.loc 1 11093 0 is_stmt 1
	movl	$0, %eax	#, D.29459
	jmp	.L1906	#
.L1908:
	.loc 1 11094 0
	movq	-8(%rbp), %rax	# x, tmp78
	movq	16(%rax), %rdx	# x_9->fld[1].rtx, D.29460
	movq	-8(%rbp), %rax	# x, tmp79
	movq	8(%rax), %rsi	# x_9->fld[0].rtx, D.29460
	movq	-24(%rbp), %rax	# exp, tmp80
	movzwl	(%rax), %eax	# exp_2(D)->code, D.29464
	movzwl	%ax, %eax	# D.29464, D.29459
	movl	$0, %ecx	#,
	movl	%eax, %edi	# D.29459,
	call	reversed_comparison_code_parts	#
.L1906:
	.loc 1 11096 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE44:
	.size	combine_reversed_comparison_code, .-combine_reversed_comparison_code
	.type	reversed_comparison, @function
reversed_comparison:
.LFB45:
	.loc 1 11103 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -24(%rbp)	# exp, exp
	movl	%esi, -28(%rbp)	# mode, mode
	movq	%rdx, -40(%rbp)	# op0, op0
	movq	%rcx, -48(%rbp)	# op1, op1
	.loc 1 11104 0
	movq	-24(%rbp), %rax	# exp, tmp61
	movq	%rax, %rdi	# tmp61,
	call	combine_reversed_comparison_code	#
	movl	%eax, -4(%rbp)	# tmp62, reversed_code
	.loc 1 11105 0
	cmpl	$0, -4(%rbp)	#, reversed_code
	jne	.L1910	#,
	.loc 1 11106 0
	movl	$0, %eax	#, D.29465
	jmp	.L1911	#
.L1910:
	.loc 1 11108 0
	movq	-48(%rbp), %rcx	# op1, tmp63
	movq	-40(%rbp), %rdx	# op0, tmp64
	movl	-28(%rbp), %esi	# mode, tmp65
	movl	-4(%rbp), %eax	# reversed_code, tmp66
	movl	%eax, %edi	# tmp66,
	call	gen_binary	#
.L1911:
	.loc 1 11109 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE45:
	.size	reversed_comparison, .-reversed_comparison
	.type	update_table_tick, @function
update_table_tick:
.LFB46:
	.loc 1 11118 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# x, x
	.loc 1 11119 0
	movq	-40(%rbp), %rax	# x, tmp105
	movzwl	(%rax), %eax	# x_12(D)->code, D.29466
	movzwl	%ax, %eax	# D.29466, tmp106
	movl	%eax, -20(%rbp)	# tmp106, code
	.loc 1 11120 0
	movl	-20(%rbp), %eax	# code, code.1243
	cltq
	movq	rtx_format(,%rax,8), %rax	# rtx_format, tmp108
	movq	%rax, -8(%rbp)	# tmp108, fmt
	.loc 1 11123 0
	cmpl	$61, -20(%rbp)	#, code
	jne	.L1913	#,
.LBB104:
	.loc 1 11125 0
	movq	-40(%rbp), %rax	# x, tmp109
	movl	8(%rax), %eax	# x_12(D)->fld[0].rtuint, tmp110
	movl	%eax, -16(%rbp)	# tmp110, regno
	.loc 1 11127 0
	cmpl	$52, -16(%rbp)	#, regno
	ja	.L1914	#,
	.loc 1 11127 0 is_stmt 0 discriminator 1
	cmpl	$7, -16(%rbp)	#, regno
	jbe	.L1915	#,
	.loc 1 11128 0 is_stmt 1
	cmpl	$15, -16(%rbp)	#, regno
	jbe	.L1916	#,
.L1915:
	.loc 1 11128 0 is_stmt 0 discriminator 2
	cmpl	$20, -16(%rbp)	#, regno
	jbe	.L1917	#,
	.loc 1 11128 0 discriminator 1
	cmpl	$28, -16(%rbp)	#, regno
	jbe	.L1916	#,
.L1917:
	.loc 1 11128 0 discriminator 2
	cmpl	$44, -16(%rbp)	#, regno
	jbe	.L1918	#,
	.loc 1 11128 0 discriminator 1
	cmpl	$52, -16(%rbp)	#, regno
	jbe	.L1916	#,
.L1918:
	.loc 1 11128 0 discriminator 2
	cmpl	$28, -16(%rbp)	#, regno
	jbe	.L1919	#,
	.loc 1 11128 0 discriminator 1
	cmpl	$36, -16(%rbp)	#, regno
	ja	.L1919	#,
.L1916:
	movq	-40(%rbp), %rax	# x, tmp111
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29467
	movzbl	%al, %eax	# D.29467, D.29468
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29469
	.loc 1 11127 0 is_stmt 1 discriminator 1
	cmpl	$5, %eax	#, D.29469
	je	.L1920	#,
	.loc 1 11128 0
	movq	-40(%rbp), %rax	# x, tmp113
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29467
	movzbl	%al, %eax	# D.29467, D.29468
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29469
	cmpl	$6, %eax	#, D.29469
	jne	.L1921	#,
.L1920:
	.loc 1 11127 0 discriminator 3
	movl	$2, %eax	#, iftmp.1246
	jmp	.L1923	#
.L1921:
	.loc 1 11127 0 is_stmt 0
	movl	$1, %eax	#, iftmp.1246
	jmp	.L1923	#
.L1919:
	.loc 1 11128 0 is_stmt 1 discriminator 2
	movq	-40(%rbp), %rax	# x, tmp115
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29467
	.loc 1 11127 0 discriminator 2
	cmpb	$18, %al	#, D.29467
	jne	.L1924	#,
	.loc 1 11128 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1249
	andl	$33554432, %eax	#, D.29468
	.loc 1 11127 0 discriminator 6
	testl	%eax, %eax	# D.29468
	je	.L1925	#,
	.loc 1 11127 0 is_stmt 0 discriminator 8
	movl	$2, %eax	#, iftmp.1248
	jmp	.L1936	#
.L1925:
	.loc 1 11127 0 discriminator 9
	movl	$3, %eax	#, iftmp.1248
	jmp	.L1936	#
.L1924:
	.loc 1 11128 0 is_stmt 1 discriminator 7
	movq	-40(%rbp), %rax	# x, tmp116
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29467
	.loc 1 11127 0 discriminator 7
	cmpb	$24, %al	#, D.29467
	jne	.L1928	#,
	.loc 1 11128 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1252
	andl	$33554432, %eax	#, D.29468
	.loc 1 11127 0 discriminator 10
	testl	%eax, %eax	# D.29468
	je	.L1929	#,
	.loc 1 11127 0 is_stmt 0 discriminator 11
	movl	$4, %eax	#, iftmp.1251
	jmp	.L1936	#
.L1929:
	.loc 1 11127 0 discriminator 12
	movl	$6, %eax	#, iftmp.1251
	jmp	.L1936	#
.L1928:
	.loc 1 11128 0 is_stmt 1
	movq	-40(%rbp), %rax	# x, tmp117
	movzbl	2(%rax), %eax	# x_12(D)->mode, D.29467
	movzbl	%al, %eax	# D.29467, D.29468
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29467
	movzbl	%al, %edx	# D.29467, D.29468
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1254
	andl	$33554432, %eax	#, D.29468
	testl	%eax, %eax	# D.29468
	je	.L1932	#,
	.loc 1 11128 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1253
	jmp	.L1933	#
.L1932:
	.loc 1 11128 0 discriminator 2
	movl	$4, %eax	#, iftmp.1253
.L1933:
	.loc 1 11128 0 discriminator 3
	addl	%edx, %eax	# D.29468, D.29468
	subl	$1, %eax	#, D.29468
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1256
	andl	$33554432, %edx	#, D.29468
	testl	%edx, %edx	# D.29468
	je	.L1934	#,
	.loc 1 11128 0 discriminator 1
	movl	$8, %ecx	#, iftmp.1255
	jmp	.L1935	#
.L1934:
	.loc 1 11128 0 discriminator 2
	movl	$4, %ecx	#, iftmp.1255
.L1935:
	.loc 1 11128 0 discriminator 3
	cltd
	idivl	%ecx	# iftmp.1255
.L1923:
	jmp	.L1936	#
.L1914:
	.loc 1 11127 0 is_stmt 1 discriminator 2
	movl	$1, %eax	#, iftmp.1244
.L1936:
	.loc 1 11126 0
	movl	-16(%rbp), %edx	# regno, tmp124
	addl	%edx, %eax	# tmp124, tmp123
	movl	%eax, -12(%rbp)	# tmp123, endregno
	.loc 1 11131 0
	movl	-16(%rbp), %eax	# regno, tmp125
	movl	%eax, -24(%rbp)	# tmp125, r
	jmp	.L1937	#
.L1938:
	.loc 1 11132 0 discriminator 2
	movq	reg_last_set_table_tick(%rip), %rax	# reg_last_set_table_tick, reg_last_set_table_tick.1257
	movl	-24(%rbp), %edx	# r, D.29470
	salq	$2, %rdx	#, D.29470
	addq	%rax, %rdx	# reg_last_set_table_tick.1257, D.29471
	movl	label_tick(%rip), %eax	# label_tick, label_tick.1258
	movl	%eax, (%rdx)	# label_tick.1258, *_64
	.loc 1 11131 0 discriminator 2
	addl	$1, -24(%rbp)	#, r
.L1937:
	.loc 1 11131 0 is_stmt 0 discriminator 1
	movl	-24(%rbp), %eax	# r, tmp126
	cmpl	-12(%rbp), %eax	# endregno, tmp126
	jb	.L1938	#,
	.loc 1 11134 0 is_stmt 1
	jmp	.L1912	#
.L1913:
.LBE104:
	.loc 1 11137 0
	movl	-20(%rbp), %eax	# code, code.1259
	cltq
	movzbl	rtx_length(%rax), %eax	# rtx_length, D.29467
	movzbl	%al, %eax	# D.29467, D.29468
	subl	$1, %eax	#, tmp128
	movl	%eax, -28(%rbp)	# tmp128, i
	jmp	.L1940	#
.L1942:
	.loc 1 11140 0
	movl	-28(%rbp), %eax	# i, tmp129
	movslq	%eax, %rdx	# tmp129, D.29472
	movq	-8(%rbp), %rax	# fmt, tmp130
	addq	%rdx, %rax	# D.29472, D.29473
	movzbl	(%rax), %eax	# *_72, D.29474
	cmpb	$101, %al	#, D.29474
	jne	.L1941	#,
	.loc 1 11141 0
	movq	-40(%rbp), %rax	# x, tmp131
	movl	-28(%rbp), %edx	# i, tmp133
	movslq	%edx, %rdx	# tmp133, tmp132
	movq	8(%rax,%rdx,8), %rax	# x_12(D)->fld[i_1].rtx, D.29475
	movq	%rax, %rdi	# D.29475,
	call	update_table_tick	#
.L1941:
	.loc 1 11137 0
	subl	$1, -28(%rbp)	#, i
.L1940:
	.loc 1 11137 0 is_stmt 0 discriminator 1
	cmpl	$0, -28(%rbp)	#, i
	jns	.L1942	#,
.L1912:
	.loc 1 11142 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE46:
	.size	update_table_tick, .-update_table_tick
	.type	record_value_for_reg, @function
record_value_for_reg:
.LFB47:
	.loc 1 11154 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# reg, reg
	movq	%rsi, -64(%rbp)	# insn, insn
	movq	%rdx, -72(%rbp)	# value, value
	.loc 1 11155 0
	movq	-56(%rbp), %rax	# reg, tmp210
	movl	8(%rax), %eax	# reg_16(D)->fld[0].rtuint, tmp211
	movl	%eax, -32(%rbp)	# tmp211, regno
	.loc 1 11157 0
	cmpl	$52, -32(%rbp)	#, regno
	ja	.L1944	#,
	.loc 1 11157 0 is_stmt 0 discriminator 1
	cmpl	$7, -32(%rbp)	#, regno
	jbe	.L1945	#,
	.loc 1 11158 0 is_stmt 1
	cmpl	$15, -32(%rbp)	#, regno
	jbe	.L1946	#,
.L1945:
	.loc 1 11158 0 is_stmt 0 discriminator 2
	cmpl	$20, -32(%rbp)	#, regno
	jbe	.L1947	#,
	.loc 1 11158 0 discriminator 1
	cmpl	$28, -32(%rbp)	#, regno
	jbe	.L1946	#,
.L1947:
	.loc 1 11158 0 discriminator 2
	cmpl	$44, -32(%rbp)	#, regno
	jbe	.L1948	#,
	.loc 1 11158 0 discriminator 1
	cmpl	$52, -32(%rbp)	#, regno
	jbe	.L1946	#,
.L1948:
	.loc 1 11158 0 discriminator 2
	cmpl	$28, -32(%rbp)	#, regno
	jbe	.L1949	#,
	.loc 1 11158 0 discriminator 1
	cmpl	$36, -32(%rbp)	#, regno
	ja	.L1949	#,
.L1946:
	movq	-56(%rbp), %rax	# reg, tmp212
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29476
	movzbl	%al, %eax	# D.29476, D.29477
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29478
	.loc 1 11157 0 is_stmt 1 discriminator 1
	cmpl	$5, %eax	#, D.29478
	je	.L1950	#,
	.loc 1 11158 0
	movq	-56(%rbp), %rax	# reg, tmp214
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29476
	movzbl	%al, %eax	# D.29476, D.29477
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29478
	cmpl	$6, %eax	#, D.29478
	jne	.L1951	#,
.L1950:
	.loc 1 11157 0 discriminator 3
	movl	$2, %eax	#, iftmp.1262
	jmp	.L1953	#
.L1951:
	.loc 1 11157 0 is_stmt 0
	movl	$1, %eax	#, iftmp.1262
	jmp	.L1953	#
.L1949:
	.loc 1 11158 0 is_stmt 1 discriminator 2
	movq	-56(%rbp), %rax	# reg, tmp216
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29476
	.loc 1 11157 0 discriminator 2
	cmpb	$18, %al	#, D.29476
	jne	.L1954	#,
	.loc 1 11158 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1265
	andl	$33554432, %eax	#, D.29477
	.loc 1 11157 0 discriminator 6
	testl	%eax, %eax	# D.29477
	je	.L1955	#,
	.loc 1 11157 0 is_stmt 0 discriminator 8
	movl	$2, %eax	#, iftmp.1264
	jmp	.L1966	#
.L1955:
	.loc 1 11157 0 discriminator 9
	movl	$3, %eax	#, iftmp.1264
	jmp	.L1966	#
.L1954:
	.loc 1 11158 0 is_stmt 1 discriminator 7
	movq	-56(%rbp), %rax	# reg, tmp217
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29476
	.loc 1 11157 0 discriminator 7
	cmpb	$24, %al	#, D.29476
	jne	.L1958	#,
	.loc 1 11158 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1268
	andl	$33554432, %eax	#, D.29477
	.loc 1 11157 0 discriminator 10
	testl	%eax, %eax	# D.29477
	je	.L1959	#,
	.loc 1 11157 0 is_stmt 0 discriminator 11
	movl	$4, %eax	#, iftmp.1267
	jmp	.L1966	#
.L1959:
	.loc 1 11157 0 discriminator 12
	movl	$6, %eax	#, iftmp.1267
	jmp	.L1966	#
.L1958:
	.loc 1 11158 0 is_stmt 1
	movq	-56(%rbp), %rax	# reg, tmp218
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29476
	movzbl	%al, %eax	# D.29476, D.29477
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29476
	movzbl	%al, %edx	# D.29476, D.29477
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1270
	andl	$33554432, %eax	#, D.29477
	testl	%eax, %eax	# D.29477
	je	.L1962	#,
	.loc 1 11158 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1269
	jmp	.L1963	#
.L1962:
	.loc 1 11158 0 discriminator 2
	movl	$4, %eax	#, iftmp.1269
.L1963:
	.loc 1 11158 0 discriminator 3
	addl	%edx, %eax	# D.29477, D.29477
	subl	$1, %eax	#, D.29477
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1272
	andl	$33554432, %edx	#, D.29477
	testl	%edx, %edx	# D.29477
	je	.L1964	#,
	.loc 1 11158 0 discriminator 1
	movl	$8, %ecx	#, iftmp.1271
	jmp	.L1965	#
.L1964:
	.loc 1 11158 0 discriminator 2
	movl	$4, %ecx	#, iftmp.1271
.L1965:
	.loc 1 11158 0 discriminator 3
	cltd
	idivl	%ecx	# iftmp.1271
.L1953:
	jmp	.L1966	#
.L1944:
	.loc 1 11157 0 is_stmt 1 discriminator 2
	movl	$1, %eax	#, iftmp.1260
.L1966:
	.loc 1 11156 0
	movl	-32(%rbp), %edx	# regno, tmp225
	addl	%edx, %eax	# tmp225, tmp224
	movl	%eax, -28(%rbp)	# tmp224, endregno
	.loc 1 11163 0
	movq	-72(%rbp), %rax	# value, value.1273
	testq	%rax, %rax	# value.1273
	je	.L1967	#,
	.loc 1 11163 0 is_stmt 0 discriminator 1
	cmpq	$0, -64(%rbp)	#, insn
	je	.L1967	#,
	movq	-72(%rbp), %rdx	# value, value.1274
	movq	-56(%rbp), %rax	# reg, tmp226
	movq	%rdx, %rsi	# value.1274,
	movq	%rax, %rdi	# tmp226,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29477
	je	.L1967	#,
.LBB105:
	.loc 1 11169 0 is_stmt 1
	movq	-64(%rbp), %rax	# insn, tmp227
	movl	8(%rax), %edx	# insn_61(D)->fld[0].rtint, D.29477
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1276
	cmpl	%eax, %edx	# max_uid_cuid.1276, D.29477
	jle	.L1968	#,
	.loc 1 11169 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# insn, tmp228
	movq	%rax, %rdi	# tmp228,
	call	insn_cuid	#
	jmp	.L1969	#
.L1968:
	.loc 1 11169 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1277
	movq	-64(%rbp), %rax	# insn, tmp229
	movl	8(%rax), %eax	# insn_61(D)->fld[0].rtint, D.29477
	cltq
	salq	$2, %rax	#, D.29479
	addq	%rdx, %rax	# uid_cuid.1277, D.29480
	movl	(%rax), %eax	# *_71, iftmp.1275
.L1969:
	.loc 1 11169 0 discriminator 3
	movl	%eax, subst_low_cuid(%rip)	# iftmp.1275, subst_low_cuid
	.loc 1 11170 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# reg, tmp230
	movq	%rax, %rdi	# tmp230,
	call	get_last_value	#
	movq	%rax, -24(%rbp)	# tmp231, tem
	.loc 1 11176 0 discriminator 3
	cmpq	$0, -24(%rbp)	#, tem
	je	.L1967	#,
	.loc 1 11178 0
	movq	-24(%rbp), %rax	# tem, tmp232
	movzwl	(%rax), %eax	# tem_73->code, D.29481
	movzwl	%ax, %eax	# D.29481, D.29477
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29482
	cmpb	$50, %al	#, D.29482
	je	.L1970	#,
	.loc 1 11179 0
	movq	-24(%rbp), %rax	# tem, tmp234
	movzwl	(%rax), %eax	# tem_73->code, D.29481
	movzwl	%ax, %eax	# D.29481, D.29477
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29482
	cmpb	$99, %al	#, D.29482
	jne	.L1971	#,
.L1970:
	.loc 1 11180 0
	movq	-24(%rbp), %rax	# tem, tmp236
	movq	8(%rax), %rax	# tem_73->fld[0].rtx, D.29483
	movzwl	(%rax), %eax	# _80->code, D.29481
	cmpw	$49, %ax	#, D.29481
	jne	.L1971	#,
	.loc 1 11181 0
	movq	-24(%rbp), %rax	# tem, tmp237
	movq	16(%rax), %rax	# tem_73->fld[1].rtx, D.29483
	movzwl	(%rax), %eax	# _82->code, D.29481
	cmpw	$49, %ax	#, D.29481
	jne	.L1971	#,
	.loc 1 11182 0
	movq	-24(%rbp), %rax	# tem, tmp238
	movq	8(%rax), %rax	# tem_73->fld[0].rtx, tmp239
	movq	%rax, -24(%rbp)	# tmp239, tem
.L1971:
	.loc 1 11184 0
	movq	-72(%rbp), %rax	# value, value.1278
	movq	%rax, %rdi	# value.1278,
	call	copy_rtx	#
	movq	-24(%rbp), %rdx	# tem, tmp240
	movq	-56(%rbp), %rcx	# reg, tmp241
	movq	%rcx, %rsi	# tmp241,
	movq	%rax, %rdi	# D.29483,
	call	replace_rtx	#
	movq	%rax, -72(%rbp)	# value.1279, value
.L1967:
.LBE105:
	.loc 1 11192 0
	movl	-32(%rbp), %eax	# regno, tmp242
	movl	%eax, -40(%rbp)	# tmp242, i
	jmp	.L1972	#
.L1974:
	.loc 1 11194 0
	cmpq	$0, -64(%rbp)	#, insn
	je	.L1973	#,
	.loc 1 11195 0
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1280
	movl	-40(%rbp), %edx	# i, D.29479
	salq	$3, %rdx	#, D.29479
	addq	%rax, %rdx	# reg_last_set.1280, D.29484
	movq	-64(%rbp), %rax	# insn, tmp243
	movq	%rax, (%rdx)	# tmp243, *_92
.L1973:
	.loc 1 11197 0
	movq	reg_last_set_value(%rip), %rax	# reg_last_set_value, reg_last_set_value.1281
	movl	-40(%rbp), %edx	# i, D.29479
	salq	$3, %rdx	#, D.29479
	addq	%rdx, %rax	# D.29479, D.29484
	movq	$0, (%rax)	#, *_96
	.loc 1 11198 0
	movq	reg_last_set_mode(%rip), %rax	# reg_last_set_mode, reg_last_set_mode.1282
	movl	-40(%rbp), %edx	# i, D.29479
	salq	$2, %rdx	#, D.29479
	addq	%rdx, %rax	# D.29479, D.29485
	movl	$0, (%rax)	#, *_100
	.loc 1 11199 0
	movq	reg_last_set_nonzero_bits(%rip), %rax	# reg_last_set_nonzero_bits, reg_last_set_nonzero_bits.1283
	movl	-40(%rbp), %edx	# i, D.29479
	salq	$3, %rdx	#, D.29479
	addq	%rdx, %rax	# D.29479, D.29486
	movq	$0, (%rax)	#, *_104
	.loc 1 11200 0
	movq	reg_last_set_sign_bit_copies(%rip), %rdx	# reg_last_set_sign_bit_copies, reg_last_set_sign_bit_copies.1284
	movl	-40(%rbp), %eax	# i, D.29487
	addq	%rdx, %rax	# reg_last_set_sign_bit_copies.1284, D.29488
	movb	$0, (%rax)	#, *_107
	.loc 1 11201 0
	movq	reg_last_death(%rip), %rax	# reg_last_death, reg_last_death.1285
	movl	-40(%rbp), %edx	# i, D.29479
	salq	$3, %rdx	#, D.29479
	addq	%rdx, %rax	# D.29479, D.29484
	movq	$0, (%rax)	#, *_111
	.loc 1 11192 0
	addl	$1, -40(%rbp)	#, i
.L1972:
	.loc 1 11192 0 is_stmt 0 discriminator 1
	movl	-40(%rbp), %eax	# i, tmp244
	cmpl	-28(%rbp), %eax	# endregno, tmp244
	jb	.L1974	#,
	.loc 1 11205 0 is_stmt 1
	movq	-72(%rbp), %rax	# value, value.1286
	testq	%rax, %rax	# value.1286
	je	.L1975	#,
	.loc 1 11206 0
	movq	-72(%rbp), %rax	# value, value.1287
	movq	%rax, %rdi	# value.1287,
	call	update_table_tick	#
.L1975:
	.loc 1 11215 0
	movl	-32(%rbp), %eax	# regno, tmp245
	movl	%eax, -40(%rbp)	# tmp245, i
	jmp	.L1976	#
.L1979:
	.loc 1 11217 0
	movq	reg_last_set_label(%rip), %rax	# reg_last_set_label, reg_last_set_label.1288
	movl	-40(%rbp), %edx	# i, D.29479
	salq	$2, %rdx	#, D.29479
	addq	%rax, %rdx	# reg_last_set_label.1288, D.29480
	movl	label_tick(%rip), %eax	# label_tick, label_tick.1289
	movl	%eax, (%rdx)	# label_tick.1289, *_119
	.loc 1 11218 0
	movq	-72(%rbp), %rax	# value, value.1290
	testq	%rax, %rax	# value.1290
	je	.L1977	#,
	.loc 1 11218 0 is_stmt 0 discriminator 1
	movq	reg_last_set_table_tick(%rip), %rax	# reg_last_set_table_tick, reg_last_set_table_tick.1291
	movl	-40(%rbp), %edx	# i, D.29479
	salq	$2, %rdx	#, D.29479
	addq	%rdx, %rax	# D.29479, D.29480
	movl	(%rax), %edx	# *_125, D.29477
	movl	label_tick(%rip), %eax	# label_tick, label_tick.1292
	cmpl	%eax, %edx	# label_tick.1292, D.29477
	jne	.L1977	#,
	.loc 1 11219 0 is_stmt 1
	movq	reg_last_set_invalid(%rip), %rdx	# reg_last_set_invalid, reg_last_set_invalid.1293
	movl	-40(%rbp), %eax	# i, D.29487
	addq	%rdx, %rax	# reg_last_set_invalid.1293, D.29488
	movb	$1, (%rax)	#, *_130
	jmp	.L1978	#
.L1977:
	.loc 1 11221 0
	movq	reg_last_set_invalid(%rip), %rdx	# reg_last_set_invalid, reg_last_set_invalid.1294
	movl	-40(%rbp), %eax	# i, D.29487
	addq	%rdx, %rax	# reg_last_set_invalid.1294, D.29488
	movb	$0, (%rax)	#, *_133
.L1978:
	.loc 1 11215 0
	addl	$1, -40(%rbp)	#, i
.L1976:
	.loc 1 11215 0 is_stmt 0 discriminator 1
	movl	-40(%rbp), %eax	# i, tmp246
	cmpl	-28(%rbp), %eax	# endregno, tmp246
	jb	.L1979	#,
	.loc 1 11227 0 is_stmt 1
	movq	-72(%rbp), %rax	# value, value.1295
	testq	%rax, %rax	# value.1295
	je	.L1980	#,
	.loc 1 11228 0 discriminator 1
	movq	reg_last_set_label(%rip), %rax	# reg_last_set_label, reg_last_set_label.1296
	movl	-32(%rbp), %edx	# regno, D.29479
	salq	$2, %rdx	#, D.29479
	addq	%rdx, %rax	# D.29479, D.29480
	.loc 1 11227 0 discriminator 1
	movl	(%rax), %edx	# *_139, D.29477
	movq	-64(%rbp), %rsi	# insn, tmp247
	leaq	-72(%rbp), %rax	#, tmp248
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp248,
	call	get_last_value_validate	#
	testl	%eax, %eax	# D.29477
	jne	.L1980	#,
	.loc 1 11230 0
	movq	-72(%rbp), %rax	# value, value.1297
	movq	%rax, %rdi	# value.1297,
	call	copy_rtx	#
	movq	%rax, -72(%rbp)	# value.1298, value
	.loc 1 11232 0
	movq	reg_last_set_label(%rip), %rax	# reg_last_set_label, reg_last_set_label.1299
	movl	-32(%rbp), %edx	# regno, D.29479
	salq	$2, %rdx	#, D.29479
	addq	%rdx, %rax	# D.29479, D.29480
	.loc 1 11231 0
	movl	(%rax), %edx	# *_147, D.29477
	movq	-64(%rbp), %rsi	# insn, tmp249
	leaq	-72(%rbp), %rax	#, tmp250
	movl	$1, %ecx	#,
	movq	%rax, %rdi	# tmp250,
	call	get_last_value_validate	#
	testl	%eax, %eax	# D.29477
	jne	.L1980	#,
	.loc 1 11233 0
	movq	$0, -72(%rbp)	#, value
.L1980:
	.loc 1 11239 0
	movq	reg_last_set_value(%rip), %rax	# reg_last_set_value, reg_last_set_value.1300
	movl	-32(%rbp), %edx	# regno, D.29479
	salq	$3, %rdx	#, D.29479
	addq	%rax, %rdx	# reg_last_set_value.1300, D.29484
	movq	-72(%rbp), %rax	# value, value.1301
	movq	%rax, (%rdx)	# value.1301, *_153
	.loc 1 11241 0
	movq	-72(%rbp), %rax	# value, value.1302
	testq	%rax, %rax	# value.1302
	je	.L1943	#,
.LBB106:
	.loc 1 11243 0
	movq	-56(%rbp), %rax	# reg, tmp251
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29476
	movzbl	%al, %eax	# D.29476, tmp252
	movl	%eax, -36(%rbp)	# tmp252, mode
	.loc 1 11244 0
	movq	-64(%rbp), %rax	# insn, tmp253
	movl	8(%rax), %edx	# insn_61(D)->fld[0].rtint, D.29477
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1304
	cmpl	%eax, %edx	# max_uid_cuid.1304, D.29477
	jle	.L1982	#,
	.loc 1 11244 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# insn, tmp254
	movq	%rax, %rdi	# tmp254,
	call	insn_cuid	#
	jmp	.L1983	#
.L1982:
	.loc 1 11244 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1305
	movq	-64(%rbp), %rax	# insn, tmp255
	movl	8(%rax), %eax	# insn_61(D)->fld[0].rtint, D.29477
	cltq
	salq	$2, %rax	#, D.29479
	addq	%rdx, %rax	# uid_cuid.1305, D.29480
	movl	(%rax), %eax	# *_165, iftmp.1303
.L1983:
	.loc 1 11244 0 discriminator 3
	movl	%eax, subst_low_cuid(%rip)	# iftmp.1303, subst_low_cuid
	.loc 1 11245 0 is_stmt 1 discriminator 3
	movq	reg_last_set_mode(%rip), %rax	# reg_last_set_mode, reg_last_set_mode.1306
	movl	-32(%rbp), %edx	# regno, D.29479
	salq	$2, %rdx	#, D.29479
	addq	%rax, %rdx	# reg_last_set_mode.1306, D.29485
	movl	-36(%rbp), %eax	# mode, tmp256
	movl	%eax, (%rdx)	# tmp256, *_170
	.loc 1 11246 0 discriminator 3
	movl	-36(%rbp), %eax	# mode, mode.1307
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29478
	cmpl	$1, %eax	#, D.29478
	jne	.L1984	#,
	.loc 1 11247 0
	movl	-36(%rbp), %eax	# mode, mode.1308
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29481
	cmpw	$64, %ax	#, D.29481
	ja	.L1984	#,
	.loc 1 11248 0
	movl	nonzero_bits_mode(%rip), %eax	# nonzero_bits_mode, tmp259
	movl	%eax, -36(%rbp)	# tmp259, mode
.L1984:
	.loc 1 11249 0
	movq	reg_last_set_nonzero_bits(%rip), %rax	# reg_last_set_nonzero_bits, reg_last_set_nonzero_bits.1309
	movl	-32(%rbp), %edx	# regno, D.29479
	salq	$3, %rdx	#, D.29479
	leaq	(%rax,%rdx), %rbx	#, D.29486
	movq	-72(%rbp), %rax	# value, value.1310
	movl	-36(%rbp), %edx	# mode, tmp260
	movl	%edx, %esi	# tmp260,
	movq	%rax, %rdi	# value.1310,
	call	nonzero_bits	#
	movq	%rax, (%rbx)	# D.29479, *_179
	.loc 1 11250 0
	movq	reg_last_set_sign_bit_copies(%rip), %rdx	# reg_last_set_sign_bit_copies, reg_last_set_sign_bit_copies.1311
	movl	-32(%rbp), %eax	# regno, D.29487
	leaq	(%rdx,%rax), %rbx	#, D.29488
	.loc 1 11251 0
	movq	-56(%rbp), %rax	# reg, tmp261
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29476
	movzbl	%al, %edx	# D.29476, D.29489
	movq	-72(%rbp), %rax	# value, value.1312
	movl	%edx, %esi	# D.29489,
	movq	%rax, %rdi	# value.1312,
	call	num_sign_bit_copies	#
	movb	%al, (%rbx)	# D.29482, *_184
.L1943:
.LBE106:
	.loc 1 11253 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE47:
	.size	record_value_for_reg, .-record_value_for_reg
	.type	record_dead_and_set_regs_1, @function
record_dead_and_set_regs_1:
.LFB48:
	.loc 1 11263 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -24(%rbp)	# dest, dest
	movq	%rsi, -32(%rbp)	# setter, setter
	movq	%rdx, -40(%rbp)	# data, data
	.loc 1 11264 0
	movq	-40(%rbp), %rax	# data, tmp94
	movq	%rax, -8(%rbp)	# tmp94, record_dead_insn
	.loc 1 11266 0
	movq	-24(%rbp), %rax	# dest, tmp95
	movzwl	(%rax), %eax	# dest_6(D)->code, D.29491
	cmpw	$63, %ax	#, D.29491
	jne	.L1986	#,
	.loc 1 11267 0
	movq	-24(%rbp), %rax	# dest, tmp96
	movq	8(%rax), %rax	# dest_6(D)->fld[0].rtx, tmp97
	movq	%rax, -24(%rbp)	# tmp97, dest
.L1986:
	.loc 1 11269 0
	movq	-24(%rbp), %rax	# dest, tmp98
	movzwl	(%rax), %eax	# dest_1->code, D.29491
	cmpw	$61, %ax	#, D.29491
	jne	.L1987	#,
	.loc 1 11274 0
	movq	-32(%rbp), %rax	# setter, tmp99
	movzwl	(%rax), %eax	# setter_10(D)->code, D.29491
	cmpw	$47, %ax	#, D.29491
	jne	.L1988	#,
	.loc 1 11274 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# setter, tmp100
	movq	8(%rax), %rax	# setter_10(D)->fld[0].rtx, D.29492
	cmpq	-24(%rbp), %rax	# dest, D.29492
	jne	.L1988	#,
	.loc 1 11275 0 is_stmt 1
	movq	-32(%rbp), %rax	# setter, tmp101
	movq	16(%rax), %rdx	# setter_10(D)->fld[1].rtx, D.29492
	movq	-8(%rbp), %rcx	# record_dead_insn, tmp102
	movq	-24(%rbp), %rax	# dest, tmp103
	movq	%rcx, %rsi	# tmp102,
	movq	%rax, %rdi	# tmp103,
	call	record_value_for_reg	#
	jmp	.L1989	#
.L1988:
	.loc 1 11276 0
	movq	-32(%rbp), %rax	# setter, tmp104
	movzwl	(%rax), %eax	# setter_10(D)->code, D.29491
	cmpw	$47, %ax	#, D.29491
	jne	.L1990	#,
	.loc 1 11277 0
	movq	-32(%rbp), %rax	# setter, tmp105
	movq	8(%rax), %rax	# setter_10(D)->fld[0].rtx, D.29492
	movzwl	(%rax), %eax	# _15->code, D.29491
	cmpw	$63, %ax	#, D.29491
	jne	.L1990	#,
	.loc 1 11278 0
	movq	-32(%rbp), %rax	# setter, tmp106
	movq	8(%rax), %rax	# setter_10(D)->fld[0].rtx, D.29492
	movq	8(%rax), %rax	# _17->fld[0].rtx, D.29492
	cmpq	-24(%rbp), %rax	# dest, D.29492
	jne	.L1990	#,
	.loc 1 11279 0
	movq	-24(%rbp), %rax	# dest, tmp107
	movzbl	2(%rax), %eax	# dest_1->mode, D.29493
	movzbl	%al, %eax	# D.29493, D.29494
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29491
	movzwl	%ax, %edx	# D.29491, D.29494
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1314
	andl	$33554432, %eax	#, D.29494
	testl	%eax, %eax	# D.29494
	je	.L1991	#,
	.loc 1 11279 0 is_stmt 0 discriminator 1
	movl	$64, %eax	#, iftmp.1313
	jmp	.L1992	#
.L1991:
	.loc 1 11279 0 discriminator 2
	movl	$32, %eax	#, iftmp.1313
.L1992:
	.loc 1 11279 0 discriminator 3
	cmpl	%eax, %edx	# iftmp.1313, D.29494
	jg	.L1990	#,
	.loc 1 11280 0 is_stmt 1
	movq	-32(%rbp), %rax	# setter, tmp109
	movq	8(%rax), %rax	# setter_10(D)->fld[0].rtx, D.29492
	movq	%rax, %rdi	# D.29492,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29494
	je	.L1990	#,
	.loc 1 11281 0
	movq	-32(%rbp), %rax	# setter, tmp110
	movq	16(%rax), %rdx	# setter_10(D)->fld[1].rtx, D.29492
	.loc 1 11282 0
	movq	-24(%rbp), %rax	# dest, tmp111
	movzbl	2(%rax), %eax	# dest_1->mode, D.29493
	.loc 1 11281 0
	movzbl	%al, %eax	# D.29493, D.29495
	movq	%rdx, %rsi	# D.29492,
	movl	%eax, %edi	# D.29495,
	call	gen_lowpart_for_combine	#
	movq	%rax, %rdx	#, D.29492
	movq	-8(%rbp), %rcx	# record_dead_insn, tmp112
	movq	-24(%rbp), %rax	# dest, tmp113
	movq	%rcx, %rsi	# tmp112,
	movq	%rax, %rdi	# tmp113,
	call	record_value_for_reg	#
	jmp	.L1989	#
.L1990:
	.loc 1 11285 0
	movq	-8(%rbp), %rcx	# record_dead_insn, tmp114
	movq	-24(%rbp), %rax	# dest, tmp115
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp114,
	movq	%rax, %rdi	# tmp115,
	call	record_value_for_reg	#
	jmp	.L1985	#
.L1989:
	jmp	.L1985	#
.L1987:
	.loc 1 11287 0
	movq	-24(%rbp), %rax	# dest, tmp116
	movzwl	(%rax), %eax	# dest_1->code, D.29491
	cmpw	$66, %ax	#, D.29491
	jne	.L1985	#,
	.loc 1 11289 0
	movq	-24(%rbp), %rax	# dest, tmp117
	movzbl	2(%rax), %eax	# dest_1->mode, D.29493
	movzbl	%al, %edx	# D.29493, D.29495
	movq	-24(%rbp), %rax	# dest, tmp118
	movl	%edx, %esi	# D.29495,
	movq	%rax, %rdi	# tmp118,
	call	push_operand	#
	testl	%eax, %eax	# D.29494
	jne	.L1985	#,
	.loc 1 11290 0
	movq	-8(%rbp), %rax	# record_dead_insn, tmp119
	movl	8(%rax), %edx	# record_dead_insn_5->fld[0].rtint, D.29494
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1316
	cmpl	%eax, %edx	# max_uid_cuid.1316, D.29494
	jle	.L1994	#,
	.loc 1 11290 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# record_dead_insn, tmp120
	movq	%rax, %rdi	# tmp120,
	call	insn_cuid	#
	jmp	.L1995	#
.L1994:
	.loc 1 11290 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1317
	movq	-8(%rbp), %rax	# record_dead_insn, tmp121
	movl	8(%rax), %eax	# record_dead_insn_5->fld[0].rtint, D.29494
	cltq
	salq	$2, %rax	#, D.29496
	addq	%rdx, %rax	# uid_cuid.1317, D.29497
	movl	(%rax), %eax	# *_44, iftmp.1315
.L1995:
	.loc 1 11290 0 discriminator 3
	movl	%eax, mem_last_set(%rip)	# iftmp.1315, mem_last_set
.L1985:
	.loc 1 11291 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE48:
	.size	record_dead_and_set_regs_1, .-record_dead_and_set_regs_1
	.type	record_dead_and_set_regs, @function
record_dead_and_set_regs:
.LFB49:
	.loc 1 11306 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# insn, insn
	.loc 1 11310 0
	movq	-56(%rbp), %rax	# insn, tmp140
	movq	56(%rax), %rax	# insn_14(D)->fld[6].rtx, tmp141
	movq	%rax, -24(%rbp)	# tmp141, link
	jmp	.L1997	#
.L2025:
	.loc 1 11312 0
	movq	-24(%rbp), %rax	# link, tmp142
	movzbl	2(%rax), %eax	# link_1->mode, D.29498
	cmpb	$1, %al	#, D.29498
	jne	.L1998	#,
	.loc 1 11313 0
	movq	-24(%rbp), %rax	# link, tmp143
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29499
	movzwl	(%rax), %eax	# _17->code, D.29500
	cmpw	$61, %ax	#, D.29500
	jne	.L1998	#,
.LBB107:
	.loc 1 11315 0
	movq	-24(%rbp), %rax	# link, tmp144
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29499
	movl	8(%rax), %eax	# _19->fld[0].rtuint, tmp145
	movl	%eax, -32(%rbp)	# tmp145, regno
	.loc 1 11317 0
	cmpl	$52, -32(%rbp)	#, regno
	ja	.L1999	#,
	.loc 1 11317 0 is_stmt 0 discriminator 1
	cmpl	$7, -32(%rbp)	#, regno
	jbe	.L2000	#,
	.loc 1 11318 0 is_stmt 1
	cmpl	$15, -32(%rbp)	#, regno
	jbe	.L2001	#,
.L2000:
	.loc 1 11318 0 is_stmt 0 discriminator 2
	cmpl	$20, -32(%rbp)	#, regno
	jbe	.L2002	#,
	.loc 1 11318 0 discriminator 1
	cmpl	$28, -32(%rbp)	#, regno
	jbe	.L2001	#,
.L2002:
	.loc 1 11318 0 discriminator 2
	cmpl	$44, -32(%rbp)	#, regno
	jbe	.L2003	#,
	.loc 1 11318 0 discriminator 1
	cmpl	$52, -32(%rbp)	#, regno
	jbe	.L2001	#,
.L2003:
	.loc 1 11318 0 discriminator 2
	cmpl	$28, -32(%rbp)	#, regno
	jbe	.L2004	#,
	.loc 1 11318 0 discriminator 1
	cmpl	$36, -32(%rbp)	#, regno
	ja	.L2004	#,
.L2001:
	movq	-24(%rbp), %rax	# link, tmp146
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29499
	movzbl	2(%rax), %eax	# _54->mode, D.29498
	movzbl	%al, %eax	# D.29498, D.29501
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29502
	.loc 1 11317 0 is_stmt 1 discriminator 1
	cmpl	$5, %eax	#, D.29502
	je	.L2005	#,
	.loc 1 11318 0
	movq	-24(%rbp), %rax	# link, tmp148
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29499
	movzbl	2(%rax), %eax	# _58->mode, D.29498
	movzbl	%al, %eax	# D.29498, D.29501
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29502
	cmpl	$6, %eax	#, D.29502
	jne	.L2006	#,
.L2005:
	.loc 1 11317 0 discriminator 3
	movl	$2, %eax	#, iftmp.1320
	jmp	.L2008	#
.L2006:
	.loc 1 11317 0 is_stmt 0
	movl	$1, %eax	#, iftmp.1320
	jmp	.L2008	#
.L2004:
	.loc 1 11318 0 is_stmt 1 discriminator 2
	movq	-24(%rbp), %rax	# link, tmp150
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29499
	movzbl	2(%rax), %eax	# _21->mode, D.29498
	.loc 1 11317 0 discriminator 2
	cmpb	$18, %al	#, D.29498
	jne	.L2009	#,
	.loc 1 11318 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1323
	andl	$33554432, %eax	#, D.29501
	.loc 1 11317 0 discriminator 6
	testl	%eax, %eax	# D.29501
	je	.L2010	#,
	.loc 1 11317 0 is_stmt 0 discriminator 8
	movl	$2, %eax	#, iftmp.1322
	jmp	.L2021	#
.L2010:
	.loc 1 11317 0 discriminator 9
	movl	$3, %eax	#, iftmp.1322
	jmp	.L2021	#
.L2009:
	.loc 1 11318 0 is_stmt 1 discriminator 7
	movq	-24(%rbp), %rax	# link, tmp151
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29499
	movzbl	2(%rax), %eax	# _28->mode, D.29498
	.loc 1 11317 0 discriminator 7
	cmpb	$24, %al	#, D.29498
	jne	.L2013	#,
	.loc 1 11318 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1326
	andl	$33554432, %eax	#, D.29501
	.loc 1 11317 0 discriminator 10
	testl	%eax, %eax	# D.29501
	je	.L2014	#,
	.loc 1 11317 0 is_stmt 0 discriminator 11
	movl	$4, %eax	#, iftmp.1325
	jmp	.L2021	#
.L2014:
	.loc 1 11317 0 discriminator 12
	movl	$6, %eax	#, iftmp.1325
	jmp	.L2021	#
.L2013:
	.loc 1 11318 0 is_stmt 1
	movq	-24(%rbp), %rax	# link, tmp152
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29499
	movzbl	2(%rax), %eax	# _35->mode, D.29498
	movzbl	%al, %eax	# D.29498, D.29501
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29498
	movzbl	%al, %edx	# D.29498, D.29501
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1328
	andl	$33554432, %eax	#, D.29501
	testl	%eax, %eax	# D.29501
	je	.L2017	#,
	.loc 1 11318 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1327
	jmp	.L2018	#
.L2017:
	.loc 1 11318 0 discriminator 2
	movl	$4, %eax	#, iftmp.1327
.L2018:
	.loc 1 11318 0 discriminator 3
	addl	%edx, %eax	# D.29501, D.29501
	subl	$1, %eax	#, D.29501
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1330
	andl	$33554432, %edx	#, D.29501
	testl	%edx, %edx	# D.29501
	je	.L2019	#,
	.loc 1 11318 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1329
	jmp	.L2020	#
.L2019:
	.loc 1 11318 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1329
.L2020:
	.loc 1 11318 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1329
.L2008:
	jmp	.L2021	#
.L1999:
	.loc 1 11317 0 is_stmt 1 discriminator 2
	movl	$1, %eax	#, iftmp.1318
.L2021:
	.loc 1 11316 0
	movl	-32(%rbp), %edx	# regno, tmp159
	addl	%edx, %eax	# tmp159, tmp158
	movl	%eax, -28(%rbp)	# tmp158, endregno
	.loc 1 11321 0
	movl	-32(%rbp), %eax	# regno, tmp160
	movl	%eax, -36(%rbp)	# tmp160, i
	jmp	.L2022	#
.L2023:
	.loc 1 11322 0 discriminator 2
	movq	reg_last_death(%rip), %rax	# reg_last_death, reg_last_death.1331
	movl	-36(%rbp), %edx	# i, D.29503
	salq	$3, %rdx	#, D.29503
	addq	%rax, %rdx	# reg_last_death.1331, D.29504
	movq	-56(%rbp), %rax	# insn, tmp161
	movq	%rax, (%rdx)	# tmp161, *_72
	.loc 1 11321 0 discriminator 2
	addl	$1, -36(%rbp)	#, i
.L2022:
	.loc 1 11321 0 is_stmt 0 discriminator 1
	movl	-36(%rbp), %eax	# i, tmp162
	cmpl	-28(%rbp), %eax	# endregno, tmp162
	jb	.L2023	#,
.LBE107:
	.loc 1 11314 0 is_stmt 1
	jmp	.L2024	#
.L1998:
	.loc 1 11324 0
	movq	-24(%rbp), %rax	# link, tmp163
	movzbl	2(%rax), %eax	# link_1->mode, D.29498
	cmpb	$2, %al	#, D.29498
	jne	.L2024	#,
	.loc 1 11325 0
	movq	-24(%rbp), %rax	# link, tmp164
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29499
	movq	-56(%rbp), %rcx	# insn, tmp165
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp165,
	movq	%rax, %rdi	# D.29499,
	call	record_value_for_reg	#
.L2024:
	.loc 1 11310 0
	movq	-24(%rbp), %rax	# link, tmp166
	movq	16(%rax), %rax	# link_1->fld[1].rtx, tmp167
	movq	%rax, -24(%rbp)	# tmp167, link
.L1997:
	.loc 1 11310 0 is_stmt 0 discriminator 1
	cmpq	$0, -24(%rbp)	#, link
	jne	.L2025	#,
	.loc 1 11328 0 is_stmt 1
	movq	-56(%rbp), %rax	# insn, tmp168
	movzwl	(%rax), %eax	# insn_14(D)->code, D.29500
	cmpw	$34, %ax	#, D.29500
	jne	.L2026	#,
	.loc 1 11330 0
	movl	$0, -36(%rbp)	#, i
	jmp	.L2027	#
.L2029:
	.loc 1 11331 0
	movq	regs_invalidated_by_call(%rip), %rdx	# regs_invalidated_by_call, regs_invalidated_by_call.1332
	movl	-36(%rbp), %eax	# i, i.1333
	movl	%eax, %ecx	# i.1333, tmp176
	shrq	%cl, %rdx	# tmp176, D.29503
	movq	%rdx, %rax	# D.29503, D.29503
	andl	$1, %eax	#, D.29503
	testq	%rax, %rax	# D.29503
	je	.L2028	#,
	.loc 1 11333 0
	movq	reg_last_set_value(%rip), %rax	# reg_last_set_value, reg_last_set_value.1334
	movl	-36(%rbp), %edx	# i, D.29503
	salq	$3, %rdx	#, D.29503
	addq	%rdx, %rax	# D.29503, D.29504
	movq	$0, (%rax)	#, *_86
	.loc 1 11334 0
	movq	reg_last_set_mode(%rip), %rax	# reg_last_set_mode, reg_last_set_mode.1335
	movl	-36(%rbp), %edx	# i, D.29503
	salq	$2, %rdx	#, D.29503
	addq	%rdx, %rax	# D.29503, D.29505
	movl	$0, (%rax)	#, *_90
	.loc 1 11335 0
	movq	reg_last_set_nonzero_bits(%rip), %rax	# reg_last_set_nonzero_bits, reg_last_set_nonzero_bits.1336
	movl	-36(%rbp), %edx	# i, D.29503
	salq	$3, %rdx	#, D.29503
	addq	%rdx, %rax	# D.29503, D.29506
	movq	$0, (%rax)	#, *_94
	.loc 1 11336 0
	movq	reg_last_set_sign_bit_copies(%rip), %rdx	# reg_last_set_sign_bit_copies, reg_last_set_sign_bit_copies.1337
	movl	-36(%rbp), %eax	# i, D.29507
	addq	%rdx, %rax	# reg_last_set_sign_bit_copies.1337, D.29508
	movb	$0, (%rax)	#, *_97
	.loc 1 11337 0
	movq	reg_last_death(%rip), %rax	# reg_last_death, reg_last_death.1338
	movl	-36(%rbp), %edx	# i, D.29503
	salq	$3, %rdx	#, D.29503
	addq	%rdx, %rax	# D.29503, D.29504
	movq	$0, (%rax)	#, *_101
.L2028:
	.loc 1 11330 0
	addl	$1, -36(%rbp)	#, i
.L2027:
	.loc 1 11330 0 is_stmt 0 discriminator 1
	cmpl	$52, -36(%rbp)	#, i
	jbe	.L2029	#,
	.loc 1 11340 0 is_stmt 1
	movq	-56(%rbp), %rax	# insn, tmp169
	movl	8(%rax), %edx	# insn_14(D)->fld[0].rtint, D.29501
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1340
	cmpl	%eax, %edx	# max_uid_cuid.1340, D.29501
	jle	.L2030	#,
	.loc 1 11340 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# insn, tmp170
	movq	%rax, %rdi	# tmp170,
	call	insn_cuid	#
	jmp	.L2031	#
.L2030:
	.loc 1 11340 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1341
	movq	-56(%rbp), %rax	# insn, tmp171
	movl	8(%rax), %eax	# insn_14(D)->fld[0].rtint, D.29501
	cltq
	salq	$2, %rax	#, D.29503
	addq	%rdx, %rax	# uid_cuid.1341, D.29509
	movl	(%rax), %eax	# *_110, iftmp.1339
.L2031:
	.loc 1 11340 0 discriminator 3
	movl	%eax, mem_last_set(%rip)	# iftmp.1339, mem_last_set
	movl	mem_last_set(%rip), %eax	# mem_last_set, mem_last_set.1342
	movl	%eax, last_call_cuid(%rip)	# mem_last_set.1342, last_call_cuid
	.loc 1 11347 0 is_stmt 1 discriminator 3
	jmp	.L1996	#
.L2026:
	.loc 1 11350 0
	movq	-56(%rbp), %rax	# insn, tmp172
	movq	32(%rax), %rax	# insn_14(D)->fld[3].rtx, D.29499
	movq	-56(%rbp), %rdx	# insn, tmp173
	movl	$record_dead_and_set_regs_1, %esi	#,
	movq	%rax, %rdi	# D.29499,
	call	note_stores	#
.L1996:
	.loc 1 11351 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE49:
	.size	record_dead_and_set_regs, .-record_dead_and_set_regs
	.type	record_promoted_value, @function
record_promoted_value:
.LFB50:
	.loc 1 11366 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# insn, insn
	movq	%rsi, -48(%rbp)	# subreg, subreg
	.loc 1 11368 0
	movq	-48(%rbp), %rax	# subreg, tmp101
	movq	8(%rax), %rax	# subreg_5(D)->fld[0].rtx, D.29510
	movl	8(%rax), %eax	# _6->fld[0].rtuint, tmp102
	movl	%eax, -24(%rbp)	# tmp102, regno
	.loc 1 11369 0
	movq	-48(%rbp), %rax	# subreg, tmp103
	movzbl	2(%rax), %eax	# subreg_5(D)->mode, D.29511
	movzbl	%al, %eax	# D.29511, tmp104
	movl	%eax, -20(%rbp)	# tmp104, mode
	.loc 1 11371 0
	movl	-20(%rbp), %eax	# mode, mode.1343
	cltq
	movzwl	mode_bitsize(%rax,%rax), %eax	# mode_bitsize, D.29512
	cmpw	$64, %ax	#, D.29512
	jbe	.L2034	#,
	.loc 1 11372 0
	jmp	.L2033	#
.L2034:
	.loc 1 11374 0
	movq	-40(%rbp), %rax	# insn, tmp106
	movq	48(%rax), %rax	# insn_12(D)->fld[5].rtx, tmp107
	movq	%rax, -16(%rbp)	# tmp107, links
	jmp	.L2036	#
.L2045:
	.loc 1 11376 0
	movq	-16(%rbp), %rax	# links, tmp108
	movq	8(%rax), %rax	# links_1->fld[0].rtx, tmp109
	movq	%rax, -40(%rbp)	# tmp109, insn
	.loc 1 11377 0
	movq	-40(%rbp), %rax	# insn, tmp110
	movzwl	(%rax), %eax	# insn_14->code, D.29512
	movzwl	%ax, %eax	# D.29512, D.29513
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29514
	cmpb	$105, %al	#, D.29514
	jne	.L2037	#,
	.loc 1 11377 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# insn, tmp112
	movq	32(%rax), %rax	# insn_14->fld[3].rtx, D.29510
	movzwl	(%rax), %eax	# _18->code, D.29512
	cmpw	$47, %ax	#, D.29512
	jne	.L2038	#,
	.loc 1 11377 0 discriminator 3
	movq	-40(%rbp), %rax	# insn, tmp113
	movq	32(%rax), %rax	# insn_14->fld[3].rtx, iftmp.1345
	jmp	.L2040	#
.L2038:
	.loc 1 11377 0 discriminator 4
	movq	-40(%rbp), %rax	# insn, tmp114
	movq	32(%rax), %rdx	# insn_14->fld[3].rtx, D.29510
	movq	-40(%rbp), %rax	# insn, tmp115
	movq	%rdx, %rsi	# D.29510,
	movq	%rax, %rdi	# tmp115,
	call	single_set_2	#
	jmp	.L2040	#
.L2037:
	.loc 1 11377 0 discriminator 2
	movl	$0, %eax	#, iftmp.1344
.L2040:
	.loc 1 11377 0 discriminator 5
	movq	%rax, -8(%rbp)	# iftmp.1344, set
	.loc 1 11379 0 is_stmt 1 discriminator 5
	cmpq	$0, -8(%rbp)	#, set
	je	.L2041	#,
	.loc 1 11379 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# set, tmp116
	movq	8(%rax), %rax	# set_25->fld[0].rtx, D.29510
	movzwl	(%rax), %eax	# _26->code, D.29512
	cmpw	$61, %ax	#, D.29512
	jne	.L2041	#,
	.loc 1 11380 0 is_stmt 1
	movq	-8(%rbp), %rax	# set, tmp117
	movq	8(%rax), %rax	# set_25->fld[0].rtx, D.29510
	movl	8(%rax), %eax	# _28->fld[0].rtuint, D.29515
	cmpl	-24(%rbp), %eax	# regno, D.29515
	jne	.L2041	#,
	.loc 1 11381 0
	movq	-8(%rbp), %rax	# set, tmp118
	movq	8(%rax), %rax	# set_25->fld[0].rtx, D.29510
	movzbl	2(%rax), %edx	# _30->mode, D.29511
	movq	-48(%rbp), %rax	# subreg, tmp119
	movq	8(%rax), %rax	# subreg_5(D)->fld[0].rtx, D.29510
	movzbl	2(%rax), %eax	# _32->mode, D.29511
	cmpb	%al, %dl	# D.29511, D.29511
	je	.L2042	#,
.L2041:
	.loc 1 11383 0
	movq	-16(%rbp), %rax	# links, tmp120
	movq	16(%rax), %rax	# links_1->fld[1].rtx, tmp121
	movq	%rax, -16(%rbp)	# tmp121, links
	.loc 1 11384 0
	jmp	.L2036	#
.L2042:
	.loc 1 11387 0
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1346
	movl	-24(%rbp), %edx	# regno, D.29516
	salq	$3, %rdx	#, D.29516
	addq	%rdx, %rax	# D.29516, D.29517
	movq	(%rax), %rax	# *_37, D.29510
	cmpq	-40(%rbp), %rax	# insn, D.29510
	jne	.L2043	#,
	.loc 1 11389 0
	movq	-48(%rbp), %rax	# subreg, tmp122
	movzbl	3(%rax), %eax	# *subreg_5(D), D.29511
	andl	$4, %eax	#, D.29511
	testb	%al, %al	# D.29511
	je	.L2043	#,
	.loc 1 11390 0
	movq	reg_last_set_nonzero_bits(%rip), %rax	# reg_last_set_nonzero_bits, reg_last_set_nonzero_bits.1347
	movl	-24(%rbp), %edx	# regno, D.29516
	salq	$3, %rdx	#, D.29516
	addq	%rax, %rdx	# reg_last_set_nonzero_bits.1347, D.29518
	movq	reg_last_set_nonzero_bits(%rip), %rax	# reg_last_set_nonzero_bits, reg_last_set_nonzero_bits.1348
	movl	-24(%rbp), %ecx	# regno, D.29516
	salq	$3, %rcx	#, D.29516
	addq	%rcx, %rax	# D.29516, D.29518
	movq	(%rax), %rcx	# *_48, D.29516
	movl	-20(%rbp), %eax	# mode, mode.1349
	cltq
	movq	mode_mask_array(,%rax,8), %rax	# mode_mask_array, D.29516
	andq	%rcx, %rax	# D.29516, D.29516
	movq	%rax, (%rdx)	# D.29516, *_44
.L2043:
	.loc 1 11393 0
	movq	-8(%rbp), %rax	# set, tmp124
	movq	16(%rax), %rax	# set_25->fld[1].rtx, D.29510
	movzwl	(%rax), %eax	# _53->code, D.29512
	cmpw	$61, %ax	#, D.29512
	jne	.L2044	#,
	.loc 1 11395 0
	movq	-8(%rbp), %rax	# set, tmp125
	movq	16(%rax), %rax	# set_25->fld[1].rtx, D.29510
	movl	8(%rax), %eax	# _55->fld[0].rtuint, tmp126
	movl	%eax, -24(%rbp)	# tmp126, regno
	.loc 1 11396 0
	movq	-40(%rbp), %rax	# insn, tmp127
	movq	48(%rax), %rax	# insn_14->fld[5].rtx, tmp128
	movq	%rax, -16(%rbp)	# tmp128, links
	jmp	.L2036	#
.L2044:
	.loc 1 11399 0
	jmp	.L2033	#
.L2036:
	.loc 1 11374 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, links
	jne	.L2045	#,
.L2033:
	.loc 1 11401 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE50:
	.size	record_promoted_value, .-record_promoted_value
	.type	check_promoted_subreg, @function
check_promoted_subreg:
.LFB51:
	.loc 1 11410 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# insn, insn
	movq	%rsi, -32(%rbp)	# x, x
	.loc 1 11411 0
	movq	-32(%rbp), %rax	# x, tmp80
	movzwl	(%rax), %eax	# x_3(D)->code, D.29519
	cmpw	$63, %ax	#, D.29519
	jne	.L2047	#,
	.loc 1 11411 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# x, tmp81
	movzbl	3(%rax), %eax	# *x_3(D), D.29520
	andl	$16, %eax	#, D.29520
	testb	%al, %al	# D.29520
	je	.L2047	#,
	.loc 1 11412 0 is_stmt 1
	movq	-32(%rbp), %rax	# x, tmp82
	movq	8(%rax), %rax	# x_3(D)->fld[0].rtx, D.29521
	movzwl	(%rax), %eax	# _7->code, D.29519
	cmpw	$61, %ax	#, D.29519
	jne	.L2047	#,
	.loc 1 11413 0
	movq	-32(%rbp), %rdx	# x, tmp83
	movq	-24(%rbp), %rax	# insn, tmp84
	movq	%rdx, %rsi	# tmp83,
	movq	%rax, %rdi	# tmp84,
	call	record_promoted_value	#
	jmp	.L2046	#
.L2047:
.LBB108:
	.loc 1 11416 0
	movq	-32(%rbp), %rax	# x, tmp85
	movzwl	(%rax), %eax	# x_3(D)->code, D.29519
	movzwl	%ax, %eax	# D.29519, D.29522
	cltq
	movq	rtx_format(,%rax,8), %rax	# rtx_format, tmp87
	movq	%rax, -8(%rbp)	# tmp87, format
	.loc 1 11419 0
	movl	$0, -16(%rbp)	#, i
	jmp	.L2049	#
.L2056:
	.loc 1 11420 0
	movl	-16(%rbp), %eax	# i, tmp88
	movslq	%eax, %rdx	# tmp88, D.29523
	movq	-8(%rbp), %rax	# format, tmp89
	addq	%rdx, %rax	# D.29523, D.29524
	movzbl	(%rax), %eax	# *_19, D.29525
	movsbl	%al, %eax	# D.29525, D.29522
	cmpl	$86, %eax	#, D.29522
	je	.L2051	#,
	cmpl	$101, %eax	#, D.29522
	je	.L2052	#,
	cmpl	$69, %eax	#, D.29522
	je	.L2051	#,
	jmp	.L2050	#
.L2052:
	.loc 1 11423 0
	movq	-32(%rbp), %rax	# x, tmp90
	movl	-16(%rbp), %edx	# i, tmp92
	movslq	%edx, %rdx	# tmp92, tmp91
	movq	8(%rax,%rdx,8), %rdx	# x_3(D)->fld[i_1].rtx, D.29521
	movq	-24(%rbp), %rax	# insn, tmp93
	movq	%rdx, %rsi	# D.29521,
	movq	%rax, %rdi	# tmp93,
	call	check_promoted_subreg	#
	.loc 1 11424 0
	jmp	.L2050	#
.L2051:
	.loc 1 11427 0
	movq	-32(%rbp), %rax	# x, tmp94
	movl	-16(%rbp), %edx	# i, tmp96
	movslq	%edx, %rdx	# tmp96, tmp95
	movq	8(%rax,%rdx,8), %rax	# x_3(D)->fld[i_1].rtvec, D.29526
	testq	%rax, %rax	# D.29526
	je	.L2053	#,
	.loc 1 11428 0
	movl	$0, -12(%rbp)	#, j
	jmp	.L2054	#
.L2055:
	.loc 1 11429 0 discriminator 2
	movq	-32(%rbp), %rax	# x, tmp97
	movl	-16(%rbp), %edx	# i, tmp99
	movslq	%edx, %rdx	# tmp99, tmp98
	movq	8(%rax,%rdx,8), %rax	# x_3(D)->fld[i_1].rtvec, D.29526
	movl	-12(%rbp), %edx	# j, tmp101
	movslq	%edx, %rdx	# tmp101, tmp100
	movq	8(%rax,%rdx,8), %rdx	# _27->elem, D.29521
	movq	-24(%rbp), %rax	# insn, tmp102
	movq	%rdx, %rsi	# D.29521,
	movq	%rax, %rdi	# tmp102,
	call	check_promoted_subreg	#
	.loc 1 11428 0 discriminator 2
	addl	$1, -12(%rbp)	#, j
.L2054:
	.loc 1 11428 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# x, tmp103
	movl	-16(%rbp), %edx	# i, tmp105
	movslq	%edx, %rdx	# tmp105, tmp104
	movq	8(%rax,%rdx,8), %rax	# x_3(D)->fld[i_1].rtvec, D.29526
	movl	(%rax), %eax	# _25->num_elem, D.29522
	cmpl	-12(%rbp), %eax	# j, D.29522
	jg	.L2055	#,
.L2053:
	.loc 1 11430 0 is_stmt 1
	nop
.L2050:
	.loc 1 11419 0
	addl	$1, -16(%rbp)	#, i
.L2049:
	.loc 1 11419 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# x, tmp106
	movzwl	(%rax), %eax	# x_3(D)->code, D.29519
	movzwl	%ax, %eax	# D.29519, D.29522
	cltq
	movzbl	rtx_length(%rax), %eax	# rtx_length, D.29520
	movzbl	%al, %eax	# D.29520, D.29522
	cmpl	-16(%rbp), %eax	# i, D.29522
	jg	.L2056	#,
.L2046:
.LBE108:
	.loc 1 11433 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE51:
	.size	check_promoted_subreg, .-check_promoted_subreg
	.type	get_last_value_validate, @function
get_last_value_validate:
.LFB52:
	.loc 1 11451 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -72(%rbp)	# loc, loc
	movq	%rsi, -80(%rbp)	# insn, insn
	movl	%edx, -84(%rbp)	# tick, tick
	movl	%ecx, -88(%rbp)	# replace, replace
	.loc 1 11452 0
	movq	-72(%rbp), %rax	# loc, tmp144
	movq	(%rax), %rax	# *loc_14(D), tmp145
	movq	%rax, -32(%rbp)	# tmp145, x
	.loc 1 11453 0
	movq	-32(%rbp), %rax	# x, tmp146
	movzwl	(%rax), %eax	# x_15->code, D.29528
	movzwl	%ax, %eax	# D.29528, D.29527
	cltq
	movq	rtx_format(,%rax,8), %rax	# rtx_format, tmp148
	movq	%rax, -24(%rbp)	# tmp148, fmt
	.loc 1 11454 0
	movq	-32(%rbp), %rax	# x, tmp149
	movzwl	(%rax), %eax	# x_15->code, D.29528
	movzwl	%ax, %eax	# D.29528, D.29527
	cltq
	movzbl	rtx_length(%rax), %eax	# rtx_length, D.29529
	movzbl	%al, %eax	# D.29529, tmp151
	movl	%eax, -44(%rbp)	# tmp151, len
	.loc 1 11457 0
	movq	-32(%rbp), %rax	# x, tmp152
	movzwl	(%rax), %eax	# x_15->code, D.29528
	cmpw	$61, %ax	#, D.29528
	jne	.L2058	#,
.LBB109:
	.loc 1 11459 0
	movq	-32(%rbp), %rax	# x, tmp153
	movl	8(%rax), %eax	# x_15->fld[0].rtuint, tmp154
	movl	%eax, -40(%rbp)	# tmp154, regno
	.loc 1 11461 0
	cmpl	$52, -40(%rbp)	#, regno
	ja	.L2059	#,
	.loc 1 11461 0 is_stmt 0 discriminator 1
	cmpl	$7, -40(%rbp)	#, regno
	jbe	.L2060	#,
	.loc 1 11462 0 is_stmt 1
	cmpl	$15, -40(%rbp)	#, regno
	jbe	.L2061	#,
.L2060:
	.loc 1 11462 0 is_stmt 0 discriminator 2
	cmpl	$20, -40(%rbp)	#, regno
	jbe	.L2062	#,
	.loc 1 11462 0 discriminator 1
	cmpl	$28, -40(%rbp)	#, regno
	jbe	.L2061	#,
.L2062:
	.loc 1 11462 0 discriminator 2
	cmpl	$44, -40(%rbp)	#, regno
	jbe	.L2063	#,
	.loc 1 11462 0 discriminator 1
	cmpl	$52, -40(%rbp)	#, regno
	jbe	.L2061	#,
.L2063:
	.loc 1 11462 0 discriminator 2
	cmpl	$28, -40(%rbp)	#, regno
	jbe	.L2064	#,
	.loc 1 11462 0 discriminator 1
	cmpl	$36, -40(%rbp)	#, regno
	ja	.L2064	#,
.L2061:
	movq	-32(%rbp), %rax	# x, tmp155
	movzbl	2(%rax), %eax	# x_15->mode, D.29529
	movzbl	%al, %eax	# D.29529, D.29527
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29530
	.loc 1 11461 0 is_stmt 1 discriminator 1
	cmpl	$5, %eax	#, D.29530
	je	.L2065	#,
	.loc 1 11462 0
	movq	-32(%rbp), %rax	# x, tmp157
	movzbl	2(%rax), %eax	# x_15->mode, D.29529
	movzbl	%al, %eax	# D.29529, D.29527
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29530
	cmpl	$6, %eax	#, D.29530
	jne	.L2066	#,
.L2065:
	.loc 1 11461 0 discriminator 3
	movl	$2, %eax	#, iftmp.1352
	jmp	.L2068	#
.L2066:
	.loc 1 11461 0 is_stmt 0
	movl	$1, %eax	#, iftmp.1352
	jmp	.L2068	#
.L2064:
	.loc 1 11462 0 is_stmt 1 discriminator 2
	movq	-32(%rbp), %rax	# x, tmp159
	movzbl	2(%rax), %eax	# x_15->mode, D.29529
	.loc 1 11461 0 discriminator 2
	cmpb	$18, %al	#, D.29529
	jne	.L2069	#,
	.loc 1 11462 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1355
	andl	$33554432, %eax	#, D.29527
	.loc 1 11461 0 discriminator 6
	testl	%eax, %eax	# D.29527
	je	.L2070	#,
	.loc 1 11461 0 is_stmt 0 discriminator 8
	movl	$2, %eax	#, iftmp.1354
	jmp	.L2081	#
.L2070:
	.loc 1 11461 0 discriminator 9
	movl	$3, %eax	#, iftmp.1354
	jmp	.L2081	#
.L2069:
	.loc 1 11462 0 is_stmt 1 discriminator 7
	movq	-32(%rbp), %rax	# x, tmp160
	movzbl	2(%rax), %eax	# x_15->mode, D.29529
	.loc 1 11461 0 discriminator 7
	cmpb	$24, %al	#, D.29529
	jne	.L2073	#,
	.loc 1 11462 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1358
	andl	$33554432, %eax	#, D.29527
	.loc 1 11461 0 discriminator 10
	testl	%eax, %eax	# D.29527
	je	.L2074	#,
	.loc 1 11461 0 is_stmt 0 discriminator 11
	movl	$4, %eax	#, iftmp.1357
	jmp	.L2081	#
.L2074:
	.loc 1 11461 0 discriminator 12
	movl	$6, %eax	#, iftmp.1357
	jmp	.L2081	#
.L2073:
	.loc 1 11462 0 is_stmt 1
	movq	-32(%rbp), %rax	# x, tmp161
	movzbl	2(%rax), %eax	# x_15->mode, D.29529
	movzbl	%al, %eax	# D.29529, D.29527
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29529
	movzbl	%al, %edx	# D.29529, D.29527
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1360
	andl	$33554432, %eax	#, D.29527
	testl	%eax, %eax	# D.29527
	je	.L2077	#,
	.loc 1 11462 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1359
	jmp	.L2078	#
.L2077:
	.loc 1 11462 0 discriminator 2
	movl	$4, %eax	#, iftmp.1359
.L2078:
	.loc 1 11462 0 discriminator 3
	addl	%edx, %eax	# D.29527, D.29527
	subl	$1, %eax	#, D.29527
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1362
	andl	$33554432, %edx	#, D.29527
	testl	%edx, %edx	# D.29527
	je	.L2079	#,
	.loc 1 11462 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1361
	jmp	.L2080	#
.L2079:
	.loc 1 11462 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1361
.L2080:
	.loc 1 11462 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1361
.L2068:
	jmp	.L2081	#
.L2059:
	.loc 1 11461 0 is_stmt 1 discriminator 2
	movl	$1, %eax	#, iftmp.1350
.L2081:
	.loc 1 11460 0
	movl	-40(%rbp), %edx	# regno, tmp168
	addl	%edx, %eax	# tmp168, tmp167
	movl	%eax, -36(%rbp)	# tmp167, endregno
	.loc 1 11465 0
	movl	-40(%rbp), %eax	# regno, tmp169
	movl	%eax, -48(%rbp)	# tmp169, j
	jmp	.L2082	#
.L2088:
	.loc 1 11466 0
	movq	reg_last_set_invalid(%rip), %rdx	# reg_last_set_invalid, reg_last_set_invalid.1363
	movl	-48(%rbp), %eax	# j, D.29531
	addq	%rdx, %rax	# reg_last_set_invalid.1363, D.29532
	movzbl	(%rax), %eax	# *_70, D.29533
	testb	%al, %al	# D.29533
	jne	.L2083	#,
	.loc 1 11469 0
	cmpl	$52, -40(%rbp)	#, regno
	jbe	.L2084	#,
	.loc 1 11470 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.1364
	movl	-40(%rbp), %edx	# regno, tmp170
	addq	$4, %rdx	#, tmp171
	movq	(%rax,%rdx,8), %rax	# reg_n_info.1364_72->data.reg, D.29534
	movl	12(%rax), %eax	# _73->sets, D.29527
	cmpl	$1, %eax	#, D.29527
	jne	.L2084	#,
	.loc 1 11471 0
	movl	-40(%rbp), %edx	# regno, regno.1365
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.1366
	movq	32(%rax), %rax	# basic_block_info.1366_76->data.bb, D.29535
	movq	64(%rax), %rax	# _77->global_live_at_start, D.29536
	movl	%edx, %esi	# regno.1365,
	movq	%rax, %rdi	# D.29536,
	call	bitmap_bit_p	#
	.loc 1 11469 0
	testl	%eax, %eax	# D.29527
	je	.L2085	#,
.L2084:
	.loc 1 11473 0
	movq	reg_last_set_label(%rip), %rax	# reg_last_set_label, reg_last_set_label.1367
	movl	-48(%rbp), %edx	# j, D.29537
	salq	$2, %rdx	#, D.29537
	addq	%rdx, %rax	# D.29537, D.29538
	movl	(%rax), %eax	# *_83, D.29527
	cmpl	-84(%rbp), %eax	# tick, D.29527
	jle	.L2085	#,
.L2083:
	.loc 1 11475 0
	cmpl	$0, -88(%rbp)	#, replace
	je	.L2086	#,
	.loc 1 11476 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29539
	movq	-32(%rbp), %rax	# x, tmp172
	movzbl	2(%rax), %eax	# x_15->mode, D.29529
	movzbl	%al, %eax	# D.29529, D.29540
	movl	%eax, %esi	# D.29540,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	-72(%rbp), %rdx	# loc, tmp173
	movq	%rax, (%rdx)	# D.29539, *loc_14(D)
.L2086:
	.loc 1 11477 0
	movl	-88(%rbp), %eax	# replace, D.29527
	jmp	.L2087	#
.L2085:
	.loc 1 11465 0
	addl	$1, -48(%rbp)	#, j
.L2082:
	.loc 1 11465 0 is_stmt 0 discriminator 1
	movl	-48(%rbp), %eax	# j, tmp174
	cmpl	-36(%rbp), %eax	# endregno, tmp174
	jb	.L2088	#,
	.loc 1 11480 0 is_stmt 1
	movl	$1, %eax	#, D.29527
	jmp	.L2087	#
.L2058:
.LBE109:
	.loc 1 11485 0
	movq	-32(%rbp), %rax	# x, tmp175
	movzwl	(%rax), %eax	# x_15->code, D.29528
	cmpw	$66, %ax	#, D.29528
	jne	.L2089	#,
	.loc 1 11485 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# x, tmp176
	movzbl	3(%rax), %eax	# *x_15, D.29529
	andl	$4, %eax	#, D.29529
	testb	%al, %al	# D.29529
	jne	.L2089	#,
	.loc 1 11486 0 is_stmt 1
	movq	-80(%rbp), %rax	# insn, tmp177
	movl	8(%rax), %edx	# insn_97(D)->fld[0].rtint, D.29527
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1369
	cmpl	%eax, %edx	# max_uid_cuid.1369, D.29527
	jle	.L2090	#,
	.loc 1 11486 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# insn, tmp178
	movq	%rax, %rdi	# tmp178,
	call	insn_cuid	#
	jmp	.L2091	#
.L2090:
	.loc 1 11486 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1370
	movq	-80(%rbp), %rax	# insn, tmp179
	movl	8(%rax), %eax	# insn_97(D)->fld[0].rtint, D.29527
	cltq
	salq	$2, %rax	#, D.29537
	addq	%rdx, %rax	# uid_cuid.1370, D.29538
	movl	(%rax), %eax	# *_105, iftmp.1368
.L2091:
	.loc 1 11486 0 discriminator 3
	movl	mem_last_set(%rip), %edx	# mem_last_set, mem_last_set.1371
	cmpl	%edx, %eax	# mem_last_set.1371, iftmp.1368
	jg	.L2089	#,
	.loc 1 11488 0 is_stmt 1
	cmpl	$0, -88(%rbp)	#, replace
	je	.L2092	#,
	.loc 1 11489 0
	movq	const_int_rtx+512(%rip), %rdx	# const_int_rtx, D.29539
	movq	-32(%rbp), %rax	# x, tmp180
	movzbl	2(%rax), %eax	# x_15->mode, D.29529
	movzbl	%al, %eax	# D.29529, D.29540
	movl	%eax, %esi	# D.29540,
	movl	$49, %edi	#,
	call	gen_rtx_fmt_e	#
	movq	-72(%rbp), %rdx	# loc, tmp181
	movq	%rax, (%rdx)	# D.29539, *loc_14(D)
.L2092:
	.loc 1 11490 0
	movl	-88(%rbp), %eax	# replace, D.29527
	jmp	.L2087	#
.L2089:
	.loc 1 11493 0
	movl	$0, -52(%rbp)	#, i
	jmp	.L2093	#
.L2097:
	.loc 1 11494 0
	movl	-52(%rbp), %eax	# i, tmp182
	movslq	%eax, %rdx	# tmp182, D.29531
	movq	-24(%rbp), %rax	# fmt, tmp183
	addq	%rdx, %rax	# D.29531, D.29541
	movzbl	(%rax), %eax	# *_115, D.29533
	cmpb	$101, %al	#, D.29533
	jne	.L2094	#,
	.loc 1 11495 0
	movl	-52(%rbp), %eax	# i, tmp185
	cltq
	leaq	0(,%rax,8), %rdx	#, tmp186
	movq	-32(%rbp), %rax	# x, tmp188
	addq	%rdx, %rax	# tmp186, tmp187
	leaq	8(%rax), %rdi	#, D.29542
	movl	-88(%rbp), %ecx	# replace, tmp189
	movl	-84(%rbp), %edx	# tick, tmp190
	movq	-80(%rbp), %rax	# insn, tmp191
	movq	%rax, %rsi	# tmp191,
	call	get_last_value_validate	#
	testl	%eax, %eax	# D.29527
	je	.L2095	#,
.L2094:
	.loc 1 11497 0
	movl	-52(%rbp), %eax	# i, tmp192
	movslq	%eax, %rdx	# tmp192, D.29531
	movq	-24(%rbp), %rax	# fmt, tmp193
	addq	%rdx, %rax	# D.29531, D.29541
	movzbl	(%rax), %eax	# *_120, D.29533
	cmpb	$69, %al	#, D.29533
	jne	.L2096	#,
.L2095:
	.loc 1 11498 0
	movl	$0, %eax	#, D.29527
	jmp	.L2087	#
.L2096:
	.loc 1 11493 0
	addl	$1, -52(%rbp)	#, i
.L2093:
	.loc 1 11493 0 is_stmt 0 discriminator 1
	movl	-52(%rbp), %eax	# i, tmp194
	cmpl	-44(%rbp), %eax	# len, tmp194
	jl	.L2097	#,
	.loc 1 11501 0 is_stmt 1
	movl	$1, %eax	#, D.29527
.L2087:
	.loc 1 11502 0
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE52:
	.size	get_last_value_validate, .-get_last_value_validate
	.type	get_last_value, @function
get_last_value:
.LFB53:
	.loc 1 11511 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# x, x
	.loc 1 11518 0
	movq	-24(%rbp), %rax	# x, tmp145
	movzwl	(%rax), %eax	# x_3(D)->code, D.29544
	cmpw	$63, %ax	#, D.29544
	jne	.L2099	#,
	.loc 1 11519 0
	movq	-24(%rbp), %rax	# x, tmp146
	movq	%rax, %rdi	# tmp146,
	call	subreg_lowpart_p	#
	testl	%eax, %eax	# D.29545
	je	.L2099	#,
	.loc 1 11520 0
	movq	-24(%rbp), %rax	# x, tmp147
	movzbl	2(%rax), %eax	# x_3(D)->mode, D.29546
	movzbl	%al, %eax	# D.29546, D.29545
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29546
	.loc 1 11521 0
	movq	-24(%rbp), %rax	# x, tmp149
	movq	8(%rax), %rax	# x_3(D)->fld[0].rtx, D.29547
	movzbl	2(%rax), %eax	# _9->mode, D.29546
	movzbl	%al, %eax	# D.29546, D.29545
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29546
	.loc 1 11520 0
	cmpb	%al, %dl	# D.29546, D.29546
	ja	.L2099	#,
	.loc 1 11522 0
	movq	-24(%rbp), %rax	# x, tmp151
	movq	8(%rax), %rax	# x_3(D)->fld[0].rtx, D.29547
	movq	%rax, %rdi	# D.29547,
	call	get_last_value	#
	movq	%rax, -8(%rbp)	# value.1372, value
	movq	-8(%rbp), %rax	# value, value.1373
	testq	%rax, %rax	# value.1373
	je	.L2099	#,
	.loc 1 11523 0
	movq	-8(%rbp), %rdx	# value, value.1374
	movq	-24(%rbp), %rax	# x, tmp152
	movzbl	2(%rax), %eax	# x_3(D)->mode, D.29546
	movzbl	%al, %eax	# D.29546, D.29548
	movq	%rdx, %rsi	# value.1374,
	movl	%eax, %edi	# D.29548,
	call	gen_lowpart_for_combine	#
	jmp	.L2109	#
.L2099:
	.loc 1 11525 0
	movq	-24(%rbp), %rax	# x, tmp153
	movzwl	(%rax), %eax	# x_3(D)->code, D.29544
	cmpw	$61, %ax	#, D.29544
	je	.L2101	#,
	.loc 1 11526 0
	movl	$0, %eax	#, D.29543
	jmp	.L2109	#
.L2101:
	.loc 1 11528 0
	movq	-24(%rbp), %rax	# x, tmp154
	movl	8(%rax), %eax	# x_3(D)->fld[0].rtuint, tmp155
	movl	%eax, -12(%rbp)	# tmp155, regno
	.loc 1 11529 0
	movq	reg_last_set_value(%rip), %rax	# reg_last_set_value, reg_last_set_value.1375
	movl	-12(%rbp), %edx	# regno, D.29549
	salq	$3, %rdx	#, D.29549
	addq	%rdx, %rax	# D.29549, D.29550
	movq	(%rax), %rax	# *_26, value.1376
	movq	%rax, -8(%rbp)	# value.1376, value
	.loc 1 11541 0
	movq	-8(%rbp), %rax	# value, value.1377
	testq	%rax, %rax	# value.1377
	je	.L2102	#,
	.loc 1 11542 0
	movq	reg_last_set_label(%rip), %rax	# reg_last_set_label, reg_last_set_label.1378
	movl	-12(%rbp), %edx	# regno, D.29549
	salq	$2, %rdx	#, D.29549
	addq	%rdx, %rax	# D.29549, D.29551
	movl	(%rax), %edx	# *_32, D.29545
	movl	label_tick(%rip), %eax	# label_tick, label_tick.1379
	cmpl	%eax, %edx	# label_tick.1379, D.29545
	je	.L2103	#,
	.loc 1 11543 0
	cmpl	$52, -12(%rbp)	#, regno
	jbe	.L2102	#,
	.loc 1 11544 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.1380
	movl	-12(%rbp), %edx	# regno, tmp156
	addq	$4, %rdx	#, tmp157
	movq	(%rax,%rdx,8), %rax	# reg_n_info.1380_35->data.reg, D.29552
	movl	12(%rax), %eax	# _36->sets, D.29545
	cmpl	$1, %eax	#, D.29545
	jne	.L2102	#,
	.loc 1 11545 0
	movl	-12(%rbp), %edx	# regno, regno.1381
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.1382
	movq	32(%rax), %rax	# basic_block_info.1382_39->data.bb, D.29553
	movq	64(%rax), %rax	# _40->global_live_at_start, D.29554
	movl	%edx, %esi	# regno.1381,
	movq	%rax, %rdi	# D.29554,
	call	bitmap_bit_p	#
	testl	%eax, %eax	# D.29545
	je	.L2103	#,
.L2102:
	.loc 1 11547 0
	movl	$0, %eax	#, D.29543
	jmp	.L2109	#
.L2103:
	.loc 1 11551 0
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1384
	movl	-12(%rbp), %edx	# regno, D.29549
	salq	$3, %rdx	#, D.29549
	addq	%rdx, %rax	# D.29549, D.29550
	movq	(%rax), %rax	# *_46, D.29547
	movl	8(%rax), %edx	# _47->fld[0].rtint, D.29545
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1385
	cmpl	%eax, %edx	# max_uid_cuid.1385, D.29545
	jle	.L2104	#,
	.loc 1 11551 0 is_stmt 0 discriminator 1
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1386
	movl	-12(%rbp), %edx	# regno, D.29549
	salq	$3, %rdx	#, D.29549
	addq	%rdx, %rax	# D.29549, D.29550
	movq	(%rax), %rax	# *_53, D.29547
	movq	%rax, %rdi	# D.29547,
	call	insn_cuid	#
	jmp	.L2105	#
.L2104:
	.loc 1 11551 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1387
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1388
	movl	-12(%rbp), %ecx	# regno, D.29549
	salq	$3, %rcx	#, D.29549
	addq	%rcx, %rax	# D.29549, D.29550
	movq	(%rax), %rax	# *_60, D.29547
	movl	8(%rax), %eax	# _61->fld[0].rtint, D.29545
	cltq
	salq	$2, %rax	#, D.29549
	addq	%rdx, %rax	# uid_cuid.1387, D.29551
	movl	(%rax), %eax	# *_65, iftmp.1383
.L2105:
	.loc 1 11551 0 discriminator 3
	movl	subst_low_cuid(%rip), %edx	# subst_low_cuid, subst_low_cuid.1389
	cmpl	%edx, %eax	# subst_low_cuid.1389, iftmp.1383
	jl	.L2106	#,
	.loc 1 11552 0 is_stmt 1
	movl	$0, %eax	#, D.29543
	jmp	.L2109	#
.L2106:
	.loc 1 11556 0
	movq	reg_last_set_label(%rip), %rax	# reg_last_set_label, reg_last_set_label.1390
	movl	-12(%rbp), %edx	# regno, D.29549
	salq	$2, %rdx	#, D.29549
	addq	%rdx, %rax	# D.29549, D.29551
	.loc 1 11555 0
	movl	(%rax), %edx	# *_72, D.29545
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1391
	movl	-12(%rbp), %ecx	# regno, D.29549
	salq	$3, %rcx	#, D.29549
	addq	%rcx, %rax	# D.29549, D.29550
	movq	(%rax), %rsi	# *_77, D.29547
	leaq	-8(%rbp), %rax	#, tmp158
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp158,
	call	get_last_value_validate	#
	testl	%eax, %eax	# D.29545
	je	.L2107	#,
	.loc 1 11557 0
	movq	-8(%rbp), %rax	# value, D.29543
	jmp	.L2109	#
.L2107:
	.loc 1 11562 0
	movq	-8(%rbp), %rax	# value, value.1392
	movq	%rax, %rdi	# value.1392,
	call	copy_rtx	#
	movq	%rax, -8(%rbp)	# value.1393, value
	.loc 1 11564 0
	movq	reg_last_set_label(%rip), %rax	# reg_last_set_label, reg_last_set_label.1394
	movl	-12(%rbp), %edx	# regno, D.29549
	salq	$2, %rdx	#, D.29549
	addq	%rdx, %rax	# D.29549, D.29551
	.loc 1 11563 0
	movl	(%rax), %edx	# *_86, D.29545
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1395
	movl	-12(%rbp), %ecx	# regno, D.29549
	salq	$3, %rcx	#, D.29549
	addq	%rcx, %rax	# D.29549, D.29550
	movq	(%rax), %rsi	# *_91, D.29547
	leaq	-8(%rbp), %rax	#, tmp159
	movl	$1, %ecx	#,
	movq	%rax, %rdi	# tmp159,
	call	get_last_value_validate	#
	testl	%eax, %eax	# D.29545
	je	.L2108	#,
	.loc 1 11565 0
	movq	-8(%rbp), %rax	# value, D.29543
	jmp	.L2109	#
.L2108:
	.loc 1 11567 0
	movl	$0, %eax	#, D.29543
.L2109:
	.loc 1 11568 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE53:
	.size	get_last_value, .-get_last_value
	.type	use_crosses_set_p, @function
use_crosses_set_p:
.LFB54:
	.loc 1 11577 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# x, x
	movl	%esi, -60(%rbp)	# from_cuid, from_cuid
	.loc 1 11580 0
	movq	-56(%rbp), %rax	# x, tmp144
	movzwl	(%rax), %eax	# x_15(D)->code, D.29556
	movzwl	%ax, %eax	# D.29556, tmp145
	movl	%eax, -32(%rbp)	# tmp145, code
	.loc 1 11582 0
	cmpl	$61, -32(%rbp)	#, code
	jne	.L2111	#,
.LBB110:
	.loc 1 11584 0
	movq	-56(%rbp), %rax	# x, tmp146
	movl	8(%rax), %eax	# x_15(D)->fld[0].rtuint, tmp147
	movl	%eax, -40(%rbp)	# tmp147, regno
	.loc 1 11585 0
	cmpl	$52, -40(%rbp)	#, regno
	ja	.L2112	#,
	.loc 1 11585 0 is_stmt 0 discriminator 1
	cmpl	$7, -40(%rbp)	#, regno
	jbe	.L2113	#,
	.loc 1 11586 0 is_stmt 1
	cmpl	$15, -40(%rbp)	#, regno
	jbe	.L2114	#,
.L2113:
	.loc 1 11586 0 is_stmt 0 discriminator 2
	cmpl	$20, -40(%rbp)	#, regno
	jbe	.L2115	#,
	.loc 1 11586 0 discriminator 1
	cmpl	$28, -40(%rbp)	#, regno
	jbe	.L2114	#,
.L2115:
	.loc 1 11586 0 discriminator 2
	cmpl	$44, -40(%rbp)	#, regno
	jbe	.L2116	#,
	.loc 1 11586 0 discriminator 1
	cmpl	$52, -40(%rbp)	#, regno
	jbe	.L2114	#,
.L2116:
	.loc 1 11586 0 discriminator 2
	cmpl	$28, -40(%rbp)	#, regno
	jbe	.L2117	#,
	.loc 1 11586 0 discriminator 1
	cmpl	$36, -40(%rbp)	#, regno
	ja	.L2117	#,
.L2114:
	movq	-56(%rbp), %rax	# x, tmp148
	movzbl	2(%rax), %eax	# x_15(D)->mode, D.29557
	movzbl	%al, %eax	# D.29557, D.29555
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29558
	.loc 1 11585 0 is_stmt 1 discriminator 1
	cmpl	$5, %eax	#, D.29558
	je	.L2118	#,
	.loc 1 11586 0
	movq	-56(%rbp), %rax	# x, tmp150
	movzbl	2(%rax), %eax	# x_15(D)->mode, D.29557
	movzbl	%al, %eax	# D.29557, D.29555
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29558
	cmpl	$6, %eax	#, D.29558
	jne	.L2119	#,
.L2118:
	.loc 1 11585 0 discriminator 3
	movl	$2, %eax	#, iftmp.1398
	jmp	.L2121	#
.L2119:
	.loc 1 11585 0 is_stmt 0
	movl	$1, %eax	#, iftmp.1398
	jmp	.L2121	#
.L2117:
	.loc 1 11586 0 is_stmt 1 discriminator 2
	movq	-56(%rbp), %rax	# x, tmp152
	movzbl	2(%rax), %eax	# x_15(D)->mode, D.29557
	.loc 1 11585 0 discriminator 2
	cmpb	$18, %al	#, D.29557
	jne	.L2122	#,
	.loc 1 11586 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1401
	andl	$33554432, %eax	#, D.29555
	.loc 1 11585 0 discriminator 6
	testl	%eax, %eax	# D.29555
	je	.L2123	#,
	.loc 1 11585 0 is_stmt 0 discriminator 8
	movl	$2, %eax	#, iftmp.1400
	jmp	.L2134	#
.L2123:
	.loc 1 11585 0 discriminator 9
	movl	$3, %eax	#, iftmp.1400
	jmp	.L2134	#
.L2122:
	.loc 1 11586 0 is_stmt 1 discriminator 7
	movq	-56(%rbp), %rax	# x, tmp153
	movzbl	2(%rax), %eax	# x_15(D)->mode, D.29557
	.loc 1 11585 0 discriminator 7
	cmpb	$24, %al	#, D.29557
	jne	.L2126	#,
	.loc 1 11586 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1404
	andl	$33554432, %eax	#, D.29555
	.loc 1 11585 0 discriminator 10
	testl	%eax, %eax	# D.29555
	je	.L2127	#,
	.loc 1 11585 0 is_stmt 0 discriminator 11
	movl	$4, %eax	#, iftmp.1403
	jmp	.L2134	#
.L2127:
	.loc 1 11585 0 discriminator 12
	movl	$6, %eax	#, iftmp.1403
	jmp	.L2134	#
.L2126:
	.loc 1 11586 0 is_stmt 1
	movq	-56(%rbp), %rax	# x, tmp154
	movzbl	2(%rax), %eax	# x_15(D)->mode, D.29557
	movzbl	%al, %eax	# D.29557, D.29555
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29557
	movzbl	%al, %edx	# D.29557, D.29555
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1406
	andl	$33554432, %eax	#, D.29555
	testl	%eax, %eax	# D.29555
	je	.L2130	#,
	.loc 1 11586 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1405
	jmp	.L2131	#
.L2130:
	.loc 1 11586 0 discriminator 2
	movl	$4, %eax	#, iftmp.1405
.L2131:
	.loc 1 11586 0 discriminator 3
	addl	%edx, %eax	# D.29555, D.29555
	subl	$1, %eax	#, D.29555
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1408
	andl	$33554432, %edx	#, D.29555
	testl	%edx, %edx	# D.29555
	je	.L2132	#,
	.loc 1 11586 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1407
	jmp	.L2133	#
.L2132:
	.loc 1 11586 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1407
.L2133:
	.loc 1 11586 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1407
.L2121:
	jmp	.L2134	#
.L2112:
	.loc 1 11585 0 is_stmt 1 discriminator 2
	movl	$1, %eax	#, iftmp.1396
.L2134:
	.loc 1 11585 0 is_stmt 0 discriminator 15
	movl	-40(%rbp), %edx	# regno, tmp161
	addl	%edx, %eax	# tmp161, tmp160
	movl	%eax, -28(%rbp)	# tmp160, endreg
	.loc 1 11591 0 is_stmt 1 discriminator 15
	cmpl	$7, -40(%rbp)	#, regno
	jne	.L2135	#,
	.loc 1 11591 0 is_stmt 0 discriminator 1
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1409
	andl	$2048, %eax	#, D.29555
	testl	%eax, %eax	# D.29555
	jne	.L2135	#,
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1410
	andl	$4096, %eax	#, D.29555
	testl	%eax, %eax	# D.29555
	jne	.L2135	#,
	.loc 1 11592 0 is_stmt 1
	movl	$1, %eax	#, D.29555
	jmp	.L2136	#
.L2135:
	.loc 1 11594 0
	jmp	.L2137	#
.L2141:
	.loc 1 11595 0
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1411
	movl	-40(%rbp), %edx	# regno, D.29559
	salq	$3, %rdx	#, D.29559
	addq	%rdx, %rax	# D.29559, D.29560
	movq	(%rax), %rax	# *_69, D.29561
	testq	%rax, %rax	# D.29561
	je	.L2138	#,
	.loc 1 11596 0
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1413
	movl	-40(%rbp), %edx	# regno, D.29559
	salq	$3, %rdx	#, D.29559
	addq	%rdx, %rax	# D.29559, D.29560
	movq	(%rax), %rax	# *_74, D.29561
	movl	8(%rax), %edx	# _75->fld[0].rtint, D.29555
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1414
	cmpl	%eax, %edx	# max_uid_cuid.1414, D.29555
	jle	.L2139	#,
	.loc 1 11596 0 is_stmt 0 discriminator 1
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1415
	movl	-40(%rbp), %edx	# regno, D.29559
	salq	$3, %rdx	#, D.29559
	addq	%rdx, %rax	# D.29559, D.29560
	movq	(%rax), %rax	# *_81, D.29561
	movq	%rax, %rdi	# D.29561,
	call	insn_cuid	#
	jmp	.L2140	#
.L2139:
	.loc 1 11596 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1416
	movq	reg_last_set(%rip), %rax	# reg_last_set, reg_last_set.1417
	movl	-40(%rbp), %ecx	# regno, D.29559
	salq	$3, %rcx	#, D.29559
	addq	%rcx, %rax	# D.29559, D.29560
	movq	(%rax), %rax	# *_88, D.29561
	movl	8(%rax), %eax	# _89->fld[0].rtint, D.29555
	cltq
	salq	$2, %rax	#, D.29559
	addq	%rdx, %rax	# uid_cuid.1416, D.29562
	movl	(%rax), %eax	# *_93, iftmp.1412
.L2140:
	.loc 1 11596 0 discriminator 3
	cmpl	-60(%rbp), %eax	# from_cuid, iftmp.1412
	jle	.L2138	#,
	.loc 1 11597 0 is_stmt 1
	movl	$1, %eax	#, D.29555
	jmp	.L2136	#
.L2138:
	.loc 1 11594 0
	addl	$1, -40(%rbp)	#, regno
.L2137:
	.loc 1 11594 0 is_stmt 0 discriminator 1
	movl	-40(%rbp), %eax	# regno, tmp162
	cmpl	-28(%rbp), %eax	# endreg, tmp162
	jb	.L2141	#,
	.loc 1 11598 0 is_stmt 1
	movl	$0, %eax	#, D.29555
	jmp	.L2136	#
.L2111:
.LBE110:
	.loc 1 11601 0
	cmpl	$66, -32(%rbp)	#, code
	jne	.L2142	#,
	.loc 1 11601 0 is_stmt 0 discriminator 1
	movl	mem_last_set(%rip), %eax	# mem_last_set, mem_last_set.1418
	cmpl	-60(%rbp), %eax	# from_cuid, mem_last_set.1418
	jle	.L2142	#,
	.loc 1 11602 0 is_stmt 1
	movl	$1, %eax	#, D.29555
	jmp	.L2136	#
.L2142:
	.loc 1 11604 0
	movl	-32(%rbp), %eax	# code, code.1419
	cltq
	movq	rtx_format(,%rax,8), %rax	# rtx_format, tmp164
	movq	%rax, -24(%rbp)	# tmp164, fmt
	.loc 1 11606 0
	movl	-32(%rbp), %eax	# code, code.1420
	cltq
	movzbl	rtx_length(%rax), %eax	# rtx_length, D.29557
	movzbl	%al, %eax	# D.29557, D.29555
	subl	$1, %eax	#, tmp166
	movl	%eax, -44(%rbp)	# tmp166, i
	jmp	.L2143	#
.L2149:
	.loc 1 11608 0
	movl	-44(%rbp), %eax	# i, tmp167
	movslq	%eax, %rdx	# tmp167, D.29563
	movq	-24(%rbp), %rax	# fmt, tmp168
	addq	%rdx, %rax	# D.29563, D.29564
	movzbl	(%rax), %eax	# *_108, D.29565
	cmpb	$69, %al	#, D.29565
	jne	.L2144	#,
.LBB111:
	.loc 1 11611 0
	movq	-56(%rbp), %rax	# x, tmp169
	movl	-44(%rbp), %edx	# i, tmp171
	movslq	%edx, %rdx	# tmp171, tmp170
	movq	8(%rax,%rdx,8), %rax	# x_15(D)->fld[i_1].rtvec, D.29566
	movl	(%rax), %eax	# _110->num_elem, D.29555
	subl	$1, %eax	#, tmp172
	movl	%eax, -36(%rbp)	# tmp172, j
	jmp	.L2145	#
.L2147:
	.loc 1 11612 0
	movq	-56(%rbp), %rax	# x, tmp173
	movl	-44(%rbp), %edx	# i, tmp175
	movslq	%edx, %rdx	# tmp175, tmp174
	movq	8(%rax,%rdx,8), %rax	# x_15(D)->fld[i_1].rtvec, D.29566
	movl	-36(%rbp), %edx	# j, tmp177
	movslq	%edx, %rdx	# tmp177, tmp176
	movq	8(%rax,%rdx,8), %rax	# _113->elem, D.29561
	movl	-60(%rbp), %edx	# from_cuid, tmp178
	movl	%edx, %esi	# tmp178,
	movq	%rax, %rdi	# D.29561,
	call	use_crosses_set_p	#
	testl	%eax, %eax	# D.29555
	je	.L2146	#,
	.loc 1 11613 0
	movl	$1, %eax	#, D.29555
	jmp	.L2136	#
.L2146:
	.loc 1 11611 0
	subl	$1, -36(%rbp)	#, j
.L2145:
	.loc 1 11611 0 is_stmt 0 discriminator 1
	cmpl	$0, -36(%rbp)	#, j
	jns	.L2147	#,
.LBE111:
	jmp	.L2148	#
.L2144:
	.loc 1 11615 0 is_stmt 1
	movl	-44(%rbp), %eax	# i, tmp179
	movslq	%eax, %rdx	# tmp179, D.29563
	movq	-24(%rbp), %rax	# fmt, tmp180
	addq	%rdx, %rax	# D.29563, D.29564
	movzbl	(%rax), %eax	# *_119, D.29565
	cmpb	$101, %al	#, D.29565
	jne	.L2148	#,
	.loc 1 11616 0
	movq	-56(%rbp), %rax	# x, tmp181
	movl	-44(%rbp), %edx	# i, tmp183
	movslq	%edx, %rdx	# tmp183, tmp182
	movq	8(%rax,%rdx,8), %rax	# x_15(D)->fld[i_1].rtx, D.29561
	movl	-60(%rbp), %edx	# from_cuid, tmp184
	movl	%edx, %esi	# tmp184,
	movq	%rax, %rdi	# D.29561,
	call	use_crosses_set_p	#
	testl	%eax, %eax	# D.29555
	je	.L2148	#,
	.loc 1 11617 0
	movl	$1, %eax	#, D.29555
	jmp	.L2136	#
.L2148:
	.loc 1 11606 0
	subl	$1, -44(%rbp)	#, i
.L2143:
	.loc 1 11606 0 is_stmt 0 discriminator 1
	cmpl	$0, -44(%rbp)	#, i
	jns	.L2149	#,
	.loc 1 11619 0 is_stmt 1
	movl	$0, %eax	#, D.29555
.L2136:
	.loc 1 11620 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE54:
	.size	use_crosses_set_p, .-use_crosses_set_p
	.local	reg_dead_regno
	.comm	reg_dead_regno,4,4
	.local	reg_dead_endregno
	.comm	reg_dead_endregno,4,4
	.local	reg_dead_flag
	.comm	reg_dead_flag,4,4
	.type	reg_dead_at_p_1, @function
reg_dead_at_p_1:
.LFB55:
	.loc 1 11638 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)	# dest, dest
	movq	%rsi, -32(%rbp)	# x, x
	movq	%rdx, -40(%rbp)	# data, data
	.loc 1 11641 0
	movq	-24(%rbp), %rax	# dest, tmp96
	movzwl	(%rax), %eax	# dest_11(D)->code, D.29567
	cmpw	$61, %ax	#, D.29567
	je	.L2151	#,
	.loc 1 11642 0
	jmp	.L2150	#
.L2151:
	.loc 1 11644 0
	movq	-24(%rbp), %rax	# dest, tmp97
	movl	8(%rax), %eax	# dest_11(D)->fld[0].rtuint, tmp98
	movl	%eax, -8(%rbp)	# tmp98, regno
	.loc 1 11645 0
	cmpl	$52, -8(%rbp)	#, regno
	ja	.L2153	#,
	.loc 1 11645 0 is_stmt 0 discriminator 1
	cmpl	$7, -8(%rbp)	#, regno
	jbe	.L2154	#,
	.loc 1 11646 0 is_stmt 1
	cmpl	$15, -8(%rbp)	#, regno
	jbe	.L2155	#,
.L2154:
	.loc 1 11646 0 is_stmt 0 discriminator 2
	cmpl	$20, -8(%rbp)	#, regno
	jbe	.L2156	#,
	.loc 1 11646 0 discriminator 1
	cmpl	$28, -8(%rbp)	#, regno
	jbe	.L2155	#,
.L2156:
	.loc 1 11646 0 discriminator 2
	cmpl	$44, -8(%rbp)	#, regno
	jbe	.L2157	#,
	.loc 1 11646 0 discriminator 1
	cmpl	$52, -8(%rbp)	#, regno
	jbe	.L2155	#,
.L2157:
	.loc 1 11646 0 discriminator 2
	cmpl	$28, -8(%rbp)	#, regno
	jbe	.L2158	#,
	.loc 1 11646 0 discriminator 1
	cmpl	$36, -8(%rbp)	#, regno
	ja	.L2158	#,
.L2155:
	movq	-24(%rbp), %rax	# dest, tmp99
	movzbl	2(%rax), %eax	# dest_11(D)->mode, D.29568
	movzbl	%al, %eax	# D.29568, D.29569
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29570
	.loc 1 11645 0 is_stmt 1 discriminator 1
	cmpl	$5, %eax	#, D.29570
	je	.L2159	#,
	.loc 1 11646 0
	movq	-24(%rbp), %rax	# dest, tmp101
	movzbl	2(%rax), %eax	# dest_11(D)->mode, D.29568
	movzbl	%al, %eax	# D.29568, D.29569
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29570
	cmpl	$6, %eax	#, D.29570
	jne	.L2160	#,
.L2159:
	.loc 1 11645 0 discriminator 3
	movl	$2, %eax	#, iftmp.1423
	jmp	.L2162	#
.L2160:
	.loc 1 11645 0 is_stmt 0
	movl	$1, %eax	#, iftmp.1423
	jmp	.L2162	#
.L2158:
	.loc 1 11646 0 is_stmt 1 discriminator 2
	movq	-24(%rbp), %rax	# dest, tmp103
	movzbl	2(%rax), %eax	# dest_11(D)->mode, D.29568
	.loc 1 11645 0 discriminator 2
	cmpb	$18, %al	#, D.29568
	jne	.L2163	#,
	.loc 1 11646 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1426
	andl	$33554432, %eax	#, D.29569
	.loc 1 11645 0 discriminator 6
	testl	%eax, %eax	# D.29569
	je	.L2164	#,
	.loc 1 11645 0 is_stmt 0 discriminator 8
	movl	$2, %eax	#, iftmp.1425
	jmp	.L2175	#
.L2164:
	.loc 1 11645 0 discriminator 9
	movl	$3, %eax	#, iftmp.1425
	jmp	.L2175	#
.L2163:
	.loc 1 11646 0 is_stmt 1 discriminator 7
	movq	-24(%rbp), %rax	# dest, tmp104
	movzbl	2(%rax), %eax	# dest_11(D)->mode, D.29568
	.loc 1 11645 0 discriminator 7
	cmpb	$24, %al	#, D.29568
	jne	.L2167	#,
	.loc 1 11646 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1429
	andl	$33554432, %eax	#, D.29569
	.loc 1 11645 0 discriminator 10
	testl	%eax, %eax	# D.29569
	je	.L2168	#,
	.loc 1 11645 0 is_stmt 0 discriminator 11
	movl	$4, %eax	#, iftmp.1428
	jmp	.L2175	#
.L2168:
	.loc 1 11645 0 discriminator 12
	movl	$6, %eax	#, iftmp.1428
	jmp	.L2175	#
.L2167:
	.loc 1 11646 0 is_stmt 1
	movq	-24(%rbp), %rax	# dest, tmp105
	movzbl	2(%rax), %eax	# dest_11(D)->mode, D.29568
	movzbl	%al, %eax	# D.29568, D.29569
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29568
	movzbl	%al, %edx	# D.29568, D.29569
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1431
	andl	$33554432, %eax	#, D.29569
	testl	%eax, %eax	# D.29569
	je	.L2171	#,
	.loc 1 11646 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1430
	jmp	.L2172	#
.L2171:
	.loc 1 11646 0 discriminator 2
	movl	$4, %eax	#, iftmp.1430
.L2172:
	.loc 1 11646 0 discriminator 3
	addl	%edx, %eax	# D.29569, D.29569
	subl	$1, %eax	#, D.29569
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1433
	andl	$33554432, %edx	#, D.29569
	testl	%edx, %edx	# D.29569
	je	.L2173	#,
	.loc 1 11646 0 discriminator 1
	movl	$8, %ecx	#, iftmp.1432
	jmp	.L2174	#
.L2173:
	.loc 1 11646 0 discriminator 2
	movl	$4, %ecx	#, iftmp.1432
.L2174:
	.loc 1 11646 0 discriminator 3
	cltd
	idivl	%ecx	# iftmp.1432
.L2162:
	jmp	.L2175	#
.L2153:
	.loc 1 11645 0 is_stmt 1 discriminator 2
	movl	$1, %eax	#, iftmp.1421
.L2175:
	.loc 1 11645 0 is_stmt 0 discriminator 15
	movl	-8(%rbp), %edx	# regno, tmp112
	addl	%edx, %eax	# tmp112, tmp111
	movl	%eax, -4(%rbp)	# tmp111, endregno
	.loc 1 11648 0 is_stmt 1 discriminator 15
	movl	reg_dead_endregno(%rip), %eax	# reg_dead_endregno, reg_dead_endregno.1434
	cmpl	-8(%rbp), %eax	# regno, reg_dead_endregno.1434
	jbe	.L2150	#,
	.loc 1 11648 0 is_stmt 0 discriminator 1
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1435
	cmpl	-4(%rbp), %eax	# endregno, reg_dead_regno.1435
	jae	.L2150	#,
	.loc 1 11649 0 is_stmt 1
	movq	-32(%rbp), %rax	# x, tmp113
	movzwl	(%rax), %eax	# x_58(D)->code, D.29567
	cmpw	$49, %ax	#, D.29567
	jne	.L2176	#,
	.loc 1 11649 0 is_stmt 0 discriminator 1
	movl	$1, %eax	#, iftmp.1436
	jmp	.L2177	#
.L2176:
	.loc 1 11649 0 discriminator 2
	movl	$-1, %eax	#, iftmp.1436
.L2177:
	.loc 1 11649 0 discriminator 3
	movl	%eax, reg_dead_flag(%rip)	# iftmp.1436, reg_dead_flag
.L2150:
	.loc 1 11650 0 is_stmt 1
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE55:
	.size	reg_dead_at_p_1, .-reg_dead_at_p_1
	.type	reg_dead_at_p, @function
reg_dead_at_p:
.LFB56:
	.loc 1 11664 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# reg, reg
	movq	%rsi, -48(%rbp)	# insn, insn
	.loc 1 11669 0
	movq	-40(%rbp), %rax	# reg, tmp130
	movl	8(%rax), %eax	# reg_16(D)->fld[0].rtuint, reg_dead_regno.1437
	movl	%eax, reg_dead_regno(%rip)	# reg_dead_regno.1437, reg_dead_regno
	.loc 1 11670 0
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1439
	cmpl	$52, %eax	#, reg_dead_regno.1439
	ja	.L2179	#,
	.loc 1 11671 0 discriminator 1
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1441
	.loc 1 11670 0 discriminator 1
	cmpl	$7, %eax	#, reg_dead_regno.1441
	jbe	.L2180	#,
	.loc 1 11671 0
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1442
	cmpl	$15, %eax	#, reg_dead_regno.1442
	jbe	.L2181	#,
.L2180:
	.loc 1 11671 0 is_stmt 0 discriminator 2
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1443
	cmpl	$20, %eax	#, reg_dead_regno.1443
	jbe	.L2182	#,
	.loc 1 11671 0 discriminator 1
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1444
	cmpl	$28, %eax	#, reg_dead_regno.1444
	jbe	.L2181	#,
.L2182:
	.loc 1 11671 0 discriminator 2
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1445
	cmpl	$44, %eax	#, reg_dead_regno.1445
	jbe	.L2183	#,
	.loc 1 11671 0 discriminator 1
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1446
	cmpl	$52, %eax	#, reg_dead_regno.1446
	jbe	.L2181	#,
.L2183:
	.loc 1 11671 0 discriminator 2
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1447
	cmpl	$28, %eax	#, reg_dead_regno.1447
	jbe	.L2184	#,
	.loc 1 11671 0 discriminator 1
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1448
	cmpl	$36, %eax	#, reg_dead_regno.1448
	ja	.L2184	#,
.L2181:
	movq	-40(%rbp), %rax	# reg, tmp131
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29572
	movzbl	%al, %eax	# D.29572, D.29571
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29573
	.loc 1 11670 0 is_stmt 1 discriminator 1
	cmpl	$5, %eax	#, D.29573
	je	.L2185	#,
	.loc 1 11671 0
	movq	-40(%rbp), %rax	# reg, tmp133
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29572
	movzbl	%al, %eax	# D.29572, D.29571
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29573
	cmpl	$6, %eax	#, D.29573
	jne	.L2186	#,
.L2185:
	.loc 1 11670 0 discriminator 3
	movl	$2, %eax	#, iftmp.1449
	jmp	.L2188	#
.L2186:
	.loc 1 11670 0 is_stmt 0
	movl	$1, %eax	#, iftmp.1449
	jmp	.L2188	#
.L2184:
	.loc 1 11671 0 is_stmt 1 discriminator 2
	movq	-40(%rbp), %rax	# reg, tmp135
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29572
	.loc 1 11670 0 discriminator 2
	cmpb	$18, %al	#, D.29572
	jne	.L2189	#,
	.loc 1 11671 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1452
	andl	$33554432, %eax	#, D.29571
	.loc 1 11670 0 discriminator 6
	testl	%eax, %eax	# D.29571
	je	.L2190	#,
	.loc 1 11670 0 is_stmt 0 discriminator 8
	movl	$2, %eax	#, iftmp.1451
	jmp	.L2201	#
.L2190:
	.loc 1 11670 0 discriminator 9
	movl	$3, %eax	#, iftmp.1451
	jmp	.L2201	#
.L2189:
	.loc 1 11671 0 is_stmt 1 discriminator 7
	movq	-40(%rbp), %rax	# reg, tmp136
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29572
	.loc 1 11670 0 discriminator 7
	cmpb	$24, %al	#, D.29572
	jne	.L2193	#,
	.loc 1 11671 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1455
	andl	$33554432, %eax	#, D.29571
	.loc 1 11670 0 discriminator 10
	testl	%eax, %eax	# D.29571
	je	.L2194	#,
	.loc 1 11670 0 is_stmt 0 discriminator 11
	movl	$4, %eax	#, iftmp.1454
	jmp	.L2201	#
.L2194:
	.loc 1 11670 0 discriminator 12
	movl	$6, %eax	#, iftmp.1454
	jmp	.L2201	#
.L2193:
	.loc 1 11671 0 is_stmt 1
	movq	-40(%rbp), %rax	# reg, tmp137
	movzbl	2(%rax), %eax	# reg_16(D)->mode, D.29572
	movzbl	%al, %eax	# D.29572, D.29571
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29572
	movzbl	%al, %edx	# D.29572, D.29571
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1457
	andl	$33554432, %eax	#, D.29571
	testl	%eax, %eax	# D.29571
	je	.L2197	#,
	.loc 1 11671 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1456
	jmp	.L2198	#
.L2197:
	.loc 1 11671 0 discriminator 2
	movl	$4, %eax	#, iftmp.1456
.L2198:
	.loc 1 11671 0 discriminator 3
	addl	%edx, %eax	# D.29571, D.29571
	subl	$1, %eax	#, D.29571
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1459
	andl	$33554432, %edx	#, D.29571
	testl	%edx, %edx	# D.29571
	je	.L2199	#,
	.loc 1 11671 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1458
	jmp	.L2200	#
.L2199:
	.loc 1 11671 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1458
.L2200:
	.loc 1 11671 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1458
.L2188:
	jmp	.L2201	#
.L2179:
	.loc 1 11670 0 is_stmt 1 discriminator 2
	movl	$1, %eax	#, iftmp.1438
.L2201:
	.loc 1 11670 0 is_stmt 0 discriminator 15
	movl	reg_dead_regno(%rip), %edx	# reg_dead_regno, reg_dead_regno.1460
	addl	%edx, %eax	# reg_dead_regno.1460, reg_dead_endregno.1461
	movl	%eax, reg_dead_endregno(%rip)	# reg_dead_endregno.1461, reg_dead_endregno
	.loc 1 11675 0 is_stmt 1 discriminator 15
	movl	$0, reg_dead_flag(%rip)	#, reg_dead_flag
	.loc 1 11678 0 discriminator 15
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, reg_dead_regno.1462
	cmpl	$52, %eax	#, reg_dead_regno.1462
	ja	.L2202	#,
	.loc 1 11680 0
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, tmp141
	movl	%eax, -20(%rbp)	# tmp141, i
	jmp	.L2203	#
.L2206:
	.loc 1 11681 0
	movq	newpat_used_regs(%rip), %rdx	# newpat_used_regs, newpat_used_regs.1463
	movl	-20(%rbp), %eax	# i, i.1464
	movl	%eax, %ecx	# i.1464, tmp158
	shrq	%cl, %rdx	# tmp158, D.29574
	movq	%rdx, %rax	# D.29574, D.29574
	andl	$1, %eax	#, D.29574
	testq	%rax, %rax	# D.29574
	je	.L2204	#,
	.loc 1 11682 0
	movl	$0, %eax	#, D.29571
	jmp	.L2205	#
.L2204:
	.loc 1 11680 0
	addl	$1, -20(%rbp)	#, i
.L2203:
	.loc 1 11680 0 is_stmt 0 discriminator 1
	movl	reg_dead_endregno(%rip), %eax	# reg_dead_endregno, reg_dead_endregno.1465
	cmpl	%eax, -20(%rbp)	# reg_dead_endregno.1465, i
	jb	.L2206	#,
.L2202:
	.loc 1 11687 0 is_stmt 1
	jmp	.L2207	#
.L2211:
	.loc 1 11690 0
	movq	-48(%rbp), %rax	# insn, tmp142
	movq	32(%rax), %rax	# insn_1->fld[3].rtx, D.29576
	movl	$0, %edx	#,
	movl	$reg_dead_at_p_1, %esi	#,
	movq	%rax, %rdi	# D.29576,
	call	note_stores	#
	.loc 1 11691 0
	movl	reg_dead_flag(%rip), %eax	# reg_dead_flag, reg_dead_flag.1466
	testl	%eax, %eax	# reg_dead_flag.1466
	je	.L2208	#,
	.loc 1 11692 0
	movl	reg_dead_flag(%rip), %eax	# reg_dead_flag, reg_dead_flag.1467
	cmpl	$1, %eax	#, reg_dead_flag.1467
	sete	%al	#, D.29577
	movzbl	%al, %eax	# D.29577, D.29571
	jmp	.L2205	#
.L2208:
	.loc 1 11694 0
	movl	reg_dead_regno(%rip), %edx	# reg_dead_regno, reg_dead_regno.1468
	movq	-48(%rbp), %rax	# insn, tmp143
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp143,
	call	find_regno_note	#
	testq	%rax, %rax	# D.29576
	je	.L2209	#,
	.loc 1 11695 0
	movl	$1, %eax	#, D.29571
	jmp	.L2205	#
.L2209:
	.loc 1 11688 0
	movq	-48(%rbp), %rax	# insn, tmp144
	movq	%rax, %rdi	# tmp144,
	call	prev_nonnote_insn	#
	movq	%rax, -48(%rbp)	# tmp145, insn
.L2207:
	.loc 1 11687 0 discriminator 1
	cmpq	$0, -48(%rbp)	#, insn
	je	.L2210	#,
	.loc 1 11687 0 is_stmt 0 discriminator 2
	movq	-48(%rbp), %rax	# insn, tmp146
	movzwl	(%rax), %eax	# insn_1->code, D.29575
	cmpw	$36, %ax	#, D.29575
	je	.L2210	#,
	.loc 1 11687 0 discriminator 1
	movq	-48(%rbp), %rax	# insn, tmp147
	movzwl	(%rax), %eax	# insn_1->code, D.29575
	cmpw	$35, %ax	#, D.29575
	jne	.L2211	#,
.L2210:
	.loc 1 11699 0 is_stmt 1
	cmpq	$0, -48(%rbp)	#, insn
	jne	.L2212	#,
	.loc 1 11700 0
	movl	$0, -24(%rbp)	#, block
	jmp	.L2213	#
.L2212:
	.loc 1 11703 0
	movl	$0, -24(%rbp)	#, block
	jmp	.L2214	#
.L2217:
	.loc 1 11704 0
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.1469
	movl	-24(%rbp), %edx	# block, tmp149
	movslq	%edx, %rdx	# tmp149, tmp148
	addq	$4, %rdx	#, tmp150
	movq	(%rax,%rdx,8), %rax	# basic_block_info.1469_94->data.bb, D.29578
	movq	(%rax), %rax	# _95->head, D.29576
	cmpq	-48(%rbp), %rax	# insn, D.29576
	jne	.L2215	#,
	.loc 1 11705 0
	jmp	.L2216	#
.L2215:
	.loc 1 11703 0
	addl	$1, -24(%rbp)	#, block
.L2214:
	.loc 1 11703 0 is_stmt 0 discriminator 1
	movl	n_basic_blocks(%rip), %eax	# n_basic_blocks, n_basic_blocks.1470
	cmpl	%eax, -24(%rbp)	# n_basic_blocks.1470, block
	jl	.L2217	#,
.L2216:
	.loc 1 11707 0 is_stmt 1
	movl	n_basic_blocks(%rip), %eax	# n_basic_blocks, n_basic_blocks.1471
	cmpl	%eax, -24(%rbp)	# n_basic_blocks.1471, block
	jne	.L2213	#,
	.loc 1 11708 0
	movl	$0, %eax	#, D.29571
	jmp	.L2205	#
.L2213:
	.loc 1 11711 0
	movl	reg_dead_regno(%rip), %eax	# reg_dead_regno, tmp151
	movl	%eax, -20(%rbp)	# tmp151, i
	jmp	.L2218	#
.L2220:
	.loc 1 11712 0
	movl	-20(%rbp), %edx	# i, i.1472
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.1473
	movl	-24(%rbp), %ecx	# block, tmp153
	movslq	%ecx, %rcx	# tmp153, tmp152
	addq	$4, %rcx	#, tmp154
	movq	(%rax,%rcx,8), %rax	# basic_block_info.1473_103->data.bb, D.29578
	movq	64(%rax), %rax	# _104->global_live_at_start, D.29579
	movl	%edx, %esi	# i.1472,
	movq	%rax, %rdi	# D.29579,
	call	bitmap_bit_p	#
	testl	%eax, %eax	# D.29571
	je	.L2219	#,
	.loc 1 11713 0
	movl	$0, %eax	#, D.29571
	jmp	.L2205	#
.L2219:
	.loc 1 11711 0
	addl	$1, -20(%rbp)	#, i
.L2218:
	.loc 1 11711 0 is_stmt 0 discriminator 1
	movl	reg_dead_endregno(%rip), %eax	# reg_dead_endregno, reg_dead_endregno.1474
	cmpl	%eax, -20(%rbp)	# reg_dead_endregno.1474, i
	jb	.L2220	#,
	.loc 1 11715 0 is_stmt 1
	movl	$1, %eax	#, D.29571
.L2205:
	.loc 1 11716 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE56:
	.size	reg_dead_at_p, .-reg_dead_at_p
	.type	mark_used_regs_combine, @function
mark_used_regs_combine:
.LFB57:
	.loc 1 11724 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -56(%rbp)	# x, x
	.loc 1 11725 0
	movq	-56(%rbp), %rax	# x, tmp122
	movzwl	(%rax), %eax	# x_13(D)->code, D.29580
	movzwl	%ax, %eax	# D.29580, tmp123
	movl	%eax, -28(%rbp)	# tmp123, code
	.loc 1 11729 0
	movl	-28(%rbp), %eax	# code, tmp125
	subl	$40, %eax	#, tmp124
	cmpl	$28, %eax	#, tmp124
	ja	.L2267	#,
	movl	%eax, %eax	# tmp124, tmp126
	movq	.L2224(,%rax,8), %rax	#, tmp127
	jmp	*%rax	# tmp127
	.section	.rodata
	.align 8
	.align 4
.L2224:
	.quad	.L2268
	.quad	.L2267
	.quad	.L2267
	.quad	.L2267
	.quad	.L2268
	.quad	.L2268
	.quad	.L2267
	.quad	.L2225
	.quad	.L2267
	.quad	.L2226
	.quad	.L2267
	.quad	.L2267
	.quad	.L2267
	.quad	.L2267
	.quad	.L2268
	.quad	.L2268
	.quad	.L2268
	.quad	.L2267
	.quad	.L2268
	.quad	.L2268
	.quad	.L2267
	.quad	.L2227
	.quad	.L2267
	.quad	.L2267
	.quad	.L2267
	.quad	.L2267
	.quad	.L2267
	.quad	.L2268
	.quad	.L2268
	.text
.L2226:
	.loc 1 11751 0
	movq	-56(%rbp), %rax	# x, tmp128
	movq	8(%rax), %rax	# x_13(D)->fld[0].rtx, D.29581
	movzwl	(%rax), %eax	# _16->code, D.29580
	cmpw	$66, %ax	#, D.29580
	jne	.L2229	#,
	.loc 1 11752 0
	movq	-56(%rbp), %rax	# x, tmp129
	movq	8(%rax), %rax	# x_13(D)->fld[0].rtx, D.29581
	movq	8(%rax), %rax	# _18->fld[0].rtx, D.29581
	movq	%rax, %rdi	# D.29581,
	call	mark_used_regs_combine	#
	.loc 1 11753 0
	jmp	.L2221	#
.L2229:
	jmp	.L2221	#
.L2227:
	.loc 1 11756 0
	movq	-56(%rbp), %rax	# x, tmp130
	movl	8(%rax), %eax	# x_13(D)->fld[0].rtuint, tmp131
	movl	%eax, -24(%rbp)	# tmp131, regno
	.loc 1 11759 0
	cmpl	$52, -24(%rbp)	#, regno
	ja	.L2230	#,
.LBB112:
	.loc 1 11764 0
	cmpl	$7, -24(%rbp)	#, regno
	je	.L2231	#,
	.loc 1 11766 0
	cmpl	$6, -24(%rbp)	#, regno
	je	.L2231	#,
	.loc 1 11769 0
	cmpl	$16, -24(%rbp)	#, regno
	jne	.L2232	#,
	.loc 1 11769 0 is_stmt 0 discriminator 1
	movl	-24(%rbp), %eax	# regno, tmp132
	movzbl	fixed_regs(%rax), %eax	# fixed_regs, D.29582
	testb	%al, %al	# D.29582
	jne	.L2231	#,
.L2232:
	.loc 1 11771 0 is_stmt 1
	cmpl	$20, -24(%rbp)	#, regno
	jne	.L2233	#,
.L2231:
	.loc 1 11772 0
	jmp	.L2221	#
.L2233:
	.loc 1 11774 0
	cmpl	$7, -24(%rbp)	#, regno
	jbe	.L2234	#,
	.loc 1 11774 0 is_stmt 0 discriminator 1
	cmpl	$15, -24(%rbp)	#, regno
	jbe	.L2235	#,
.L2234:
	.loc 1 11774 0 discriminator 2
	cmpl	$20, -24(%rbp)	#, regno
	jbe	.L2236	#,
	.loc 1 11774 0 discriminator 1
	cmpl	$28, -24(%rbp)	#, regno
	jbe	.L2235	#,
.L2236:
	.loc 1 11774 0 discriminator 2
	cmpl	$44, -24(%rbp)	#, regno
	jbe	.L2237	#,
	.loc 1 11774 0 discriminator 1
	cmpl	$52, -24(%rbp)	#, regno
	jbe	.L2235	#,
.L2237:
	.loc 1 11774 0 discriminator 2
	cmpl	$28, -24(%rbp)	#, regno
	jbe	.L2238	#,
	.loc 1 11774 0 discriminator 1
	cmpl	$36, -24(%rbp)	#, regno
	ja	.L2238	#,
.L2235:
	movq	-56(%rbp), %rax	# x, tmp133
	movzbl	2(%rax), %eax	# x_13(D)->mode, D.29583
	movzbl	%al, %eax	# D.29583, D.29584
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29585
	cmpl	$5, %eax	#, D.29585
	je	.L2239	#,
	.loc 1 11774 0 discriminator 4
	movq	-56(%rbp), %rax	# x, tmp135
	movzbl	2(%rax), %eax	# x_13(D)->mode, D.29583
	movzbl	%al, %eax	# D.29583, D.29584
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29585
	cmpl	$6, %eax	#, D.29585
	jne	.L2240	#,
.L2239:
	.loc 1 11774 0 discriminator 3
	movl	$2, %eax	#, iftmp.1476
	jmp	.L2242	#
.L2240:
	.loc 1 11774 0 discriminator 1
	movl	$1, %eax	#, iftmp.1476
	jmp	.L2242	#
.L2238:
	.loc 1 11774 0 discriminator 2
	movq	-56(%rbp), %rax	# x, tmp137
	movzbl	2(%rax), %eax	# x_13(D)->mode, D.29583
	cmpb	$18, %al	#, D.29583
	jne	.L2243	#,
	.loc 1 11774 0 discriminator 7
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1479
	andl	$33554432, %eax	#, D.29584
	testl	%eax, %eax	# D.29584
	je	.L2244	#,
	.loc 1 11774 0 discriminator 9
	movl	$2, %eax	#, iftmp.1478
	jmp	.L2242	#
.L2244:
	.loc 1 11774 0 discriminator 10
	movl	$3, %eax	#, iftmp.1478
	jmp	.L2242	#
.L2243:
	.loc 1 11774 0 discriminator 8
	movq	-56(%rbp), %rax	# x, tmp138
	movzbl	2(%rax), %eax	# x_13(D)->mode, D.29583
	cmpb	$24, %al	#, D.29583
	jne	.L2247	#,
	.loc 1 11774 0 discriminator 11
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1482
	andl	$33554432, %eax	#, D.29584
	testl	%eax, %eax	# D.29584
	je	.L2248	#,
	.loc 1 11774 0 discriminator 13
	movl	$4, %eax	#, iftmp.1481
	jmp	.L2242	#
.L2248:
	.loc 1 11774 0 discriminator 14
	movl	$6, %eax	#, iftmp.1481
	jmp	.L2242	#
.L2247:
	.loc 1 11774 0 discriminator 12
	movq	-56(%rbp), %rax	# x, tmp139
	movzbl	2(%rax), %eax	# x_13(D)->mode, D.29583
	movzbl	%al, %eax	# D.29583, D.29584
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29583
	movzbl	%al, %edx	# D.29583, D.29584
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1484
	andl	$33554432, %eax	#, D.29584
	testl	%eax, %eax	# D.29584
	je	.L2251	#,
	.loc 1 11774 0 discriminator 1
	movl	$8, %eax	#, iftmp.1483
	jmp	.L2252	#
.L2251:
	.loc 1 11774 0 discriminator 2
	movl	$4, %eax	#, iftmp.1483
.L2252:
	.loc 1 11774 0 discriminator 3
	addl	%edx, %eax	# D.29584, D.29584
	subl	$1, %eax	#, D.29584
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1486
	andl	$33554432, %edx	#, D.29584
	testl	%edx, %edx	# D.29584
	je	.L2253	#,
	.loc 1 11774 0 discriminator 1
	movl	$8, %esi	#, iftmp.1485
	jmp	.L2254	#
.L2253:
	.loc 1 11774 0 discriminator 2
	movl	$4, %esi	#, iftmp.1485
.L2254:
	.loc 1 11774 0 discriminator 3
	cltd
	idivl	%esi	# iftmp.1485
.L2242:
	.loc 1 11774 0 discriminator 6
	movl	-24(%rbp), %edx	# regno, tmp146
	addl	%edx, %eax	# tmp146, tmp145
	movl	%eax, -20(%rbp)	# tmp145, endregno
	.loc 1 11775 0 is_stmt 1 discriminator 6
	movl	-24(%rbp), %eax	# regno, tmp147
	movl	%eax, -36(%rbp)	# tmp147, r
	jmp	.L2255	#
.L2256:
	.loc 1 11776 0 discriminator 2
	movl	-36(%rbp), %eax	# r, r.1487
	movl	$1, %edx	#, tmp148
	movl	%eax, %ecx	# r.1487, tmp181
	salq	%cl, %rdx	# tmp181, D.29586
	movq	newpat_used_regs(%rip), %rax	# newpat_used_regs, newpat_used_regs.1488
	orq	%rdx, %rax	# D.29586, newpat_used_regs.1489
	movq	%rax, newpat_used_regs(%rip)	# newpat_used_regs.1489, newpat_used_regs
	.loc 1 11775 0 discriminator 2
	addl	$1, -36(%rbp)	#, r
.L2255:
	.loc 1 11775 0 is_stmt 0 discriminator 1
	movl	-36(%rbp), %eax	# r, tmp149
	cmpl	-20(%rbp), %eax	# endregno, tmp149
	jb	.L2256	#,
.L2230:
.LBE112:
	.loc 1 11778 0 is_stmt 1
	jmp	.L2221	#
.L2225:
.LBB113:
	.loc 1 11784 0
	movq	-56(%rbp), %rax	# x, tmp150
	movq	8(%rax), %rax	# x_13(D)->fld[0].rtx, tmp151
	movq	%rax, -16(%rbp)	# tmp151, testreg
	.loc 1 11786 0
	jmp	.L2257	#
.L2258:
	.loc 1 11790 0
	movq	-16(%rbp), %rax	# testreg, tmp152
	movq	8(%rax), %rax	# testreg_3->fld[0].rtx, tmp153
	movq	%rax, -16(%rbp)	# tmp153, testreg
.L2257:
	.loc 1 11786 0 discriminator 1
	movq	-16(%rbp), %rax	# testreg, tmp154
	movzwl	(%rax), %eax	# testreg_3->code, D.29580
	cmpw	$63, %ax	#, D.29580
	je	.L2258	#,
	.loc 1 11787 0
	movq	-16(%rbp), %rax	# testreg, tmp155
	movzwl	(%rax), %eax	# testreg_3->code, D.29580
	cmpw	$133, %ax	#, D.29580
	je	.L2258	#,
	.loc 1 11788 0
	movq	-16(%rbp), %rax	# testreg, tmp156
	movzwl	(%rax), %eax	# testreg_3->code, D.29580
	cmpw	$132, %ax	#, D.29580
	je	.L2258	#,
	.loc 1 11789 0
	movq	-16(%rbp), %rax	# testreg, tmp157
	movzwl	(%rax), %eax	# testreg_3->code, D.29580
	cmpw	$64, %ax	#, D.29580
	je	.L2258	#,
	.loc 1 11792 0
	movq	-16(%rbp), %rax	# testreg, tmp158
	movzwl	(%rax), %eax	# testreg_3->code, D.29580
	cmpw	$66, %ax	#, D.29580
	jne	.L2259	#,
	.loc 1 11793 0
	movq	-16(%rbp), %rax	# testreg, tmp159
	movq	8(%rax), %rax	# testreg_3->fld[0].rtx, D.29581
	movq	%rax, %rdi	# D.29581,
	call	mark_used_regs_combine	#
.L2259:
	.loc 1 11795 0
	movq	-56(%rbp), %rax	# x, tmp160
	movq	16(%rax), %rax	# x_13(D)->fld[1].rtx, D.29581
	movq	%rax, %rdi	# D.29581,
	call	mark_used_regs_combine	#
.LBE113:
	.loc 1 11797 0
	jmp	.L2221	#
.L2267:
	.loc 1 11800 0
	nop
.LBB114:
	.loc 1 11806 0
	movl	-28(%rbp), %eax	# code, code.1490
	cltq
	movq	rtx_format(,%rax,8), %rax	# rtx_format, tmp162
	movq	%rax, -8(%rbp)	# tmp162, fmt
	.loc 1 11808 0
	movl	-28(%rbp), %eax	# code, code.1491
	cltq
	movzbl	rtx_length(%rax), %eax	# rtx_length, D.29583
	movzbl	%al, %eax	# D.29583, D.29584
	subl	$1, %eax	#, tmp164
	movl	%eax, -40(%rbp)	# tmp164, i
	jmp	.L2260	#
.L2265:
	.loc 1 11810 0
	movl	-40(%rbp), %eax	# i, tmp165
	movslq	%eax, %rdx	# tmp165, D.29587
	movq	-8(%rbp), %rax	# fmt, tmp166
	addq	%rdx, %rax	# D.29587, D.29588
	movzbl	(%rax), %eax	# *_84, D.29582
	cmpb	$101, %al	#, D.29582
	jne	.L2261	#,
	.loc 1 11811 0
	movq	-56(%rbp), %rax	# x, tmp167
	movl	-40(%rbp), %edx	# i, tmp169
	movslq	%edx, %rdx	# tmp169, tmp168
	movq	8(%rax,%rdx,8), %rax	# x_13(D)->fld[i_1].rtx, D.29581
	movq	%rax, %rdi	# D.29581,
	call	mark_used_regs_combine	#
	jmp	.L2262	#
.L2261:
	.loc 1 11812 0
	movl	-40(%rbp), %eax	# i, tmp170
	movslq	%eax, %rdx	# tmp170, D.29587
	movq	-8(%rbp), %rax	# fmt, tmp171
	addq	%rdx, %rax	# D.29587, D.29588
	movzbl	(%rax), %eax	# *_88, D.29582
	cmpb	$69, %al	#, D.29582
	jne	.L2262	#,
.LBB115:
	.loc 1 11816 0
	movl	$0, -32(%rbp)	#, j
	jmp	.L2263	#
.L2264:
	.loc 1 11817 0 discriminator 2
	movq	-56(%rbp), %rax	# x, tmp172
	movl	-40(%rbp), %edx	# i, tmp174
	movslq	%edx, %rdx	# tmp174, tmp173
	movq	8(%rax,%rdx,8), %rax	# x_13(D)->fld[i_1].rtvec, D.29589
	movl	-32(%rbp), %edx	# j, tmp176
	movslq	%edx, %rdx	# tmp176, tmp175
	movq	8(%rax,%rdx,8), %rax	# _93->elem, D.29581
	movq	%rax, %rdi	# D.29581,
	call	mark_used_regs_combine	#
	.loc 1 11816 0 discriminator 2
	addl	$1, -32(%rbp)	#, j
.L2263:
	.loc 1 11816 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# x, tmp177
	movl	-40(%rbp), %edx	# i, tmp179
	movslq	%edx, %rdx	# tmp179, tmp178
	movq	8(%rax,%rdx,8), %rax	# x_13(D)->fld[i_1].rtvec, D.29589
	movl	(%rax), %eax	# _91->num_elem, D.29584
	cmpl	-32(%rbp), %eax	# j, D.29584
	jg	.L2264	#,
.L2262:
.LBE115:
	.loc 1 11808 0 is_stmt 1
	subl	$1, -40(%rbp)	#, i
.L2260:
	.loc 1 11808 0 is_stmt 0 discriminator 1
	cmpl	$0, -40(%rbp)	#, i
	jns	.L2265	#,
	jmp	.L2221	#
.L2268:
.LBE114:
	.loc 1 11746 0 is_stmt 1
	nop
.L2221:
	.loc 1 11821 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE57:
	.size	mark_used_regs_combine, .-mark_used_regs_combine
	.globl	remove_death
	.type	remove_death, @function
remove_death:
.LFB58:
	.loc 1 11831 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -20(%rbp)	# regno, regno
	movq	%rsi, -32(%rbp)	# insn, insn
	.loc 1 11832 0
	movl	-20(%rbp), %edx	# regno, tmp65
	movq	-32(%rbp), %rax	# insn, tmp66
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp66,
	call	find_regno_note	#
	movq	%rax, -8(%rbp)	# tmp67, note
	.loc 1 11834 0
	cmpq	$0, -8(%rbp)	#, note
	je	.L2270	#,
	.loc 1 11836 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.1492
	movl	-20(%rbp), %edx	# regno, tmp68
	addq	$4, %rdx	#, tmp69
	movq	(%rax,%rdx,8), %rax	# reg_n_info.1492_4->data.reg, D.29590
	movl	24(%rax), %edx	# _5->deaths, D.29591
	subl	$1, %edx	#, D.29591
	movl	%edx, 24(%rax)	# D.29591, _5->deaths
	.loc 1 11837 0
	movq	-8(%rbp), %rdx	# note, tmp70
	movq	-32(%rbp), %rax	# insn, tmp71
	movq	%rdx, %rsi	# tmp70,
	movq	%rax, %rdi	# tmp71,
	call	remove_note	#
.L2270:
	.loc 1 11840 0
	movq	-8(%rbp), %rax	# note, D.29592
	.loc 1 11841 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE58:
	.size	remove_death, .-remove_death
	.type	move_deaths, @function
move_deaths:
.LFB59:
	.loc 1 11860 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$168, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -136(%rbp)	# x, x
	movq	%rsi, -144(%rbp)	# maybe_kill_insn, maybe_kill_insn
	movl	%edx, -148(%rbp)	# from_cuid, from_cuid
	movq	%rcx, -160(%rbp)	# to_insn, to_insn
	movq	%r8, -168(%rbp)	# pnotes, pnotes
	.loc 1 11863 0
	movq	-136(%rbp), %rax	# x, tmp351
	movzwl	(%rax), %eax	# x_55(D)->code, D.29593
	movzwl	%ax, %eax	# D.29593, tmp352
	movl	%eax, -100(%rbp)	# tmp352, code
	.loc 1 11865 0
	cmpl	$61, -100(%rbp)	#, code
	jne	.L2273	#,
.LBB116:
	.loc 1 11867 0
	movq	-136(%rbp), %rax	# x, tmp353
	movl	8(%rax), %eax	# x_55(D)->fld[0].rtuint, tmp354
	movl	%eax, -96(%rbp)	# tmp354, regno
	.loc 1 11868 0
	movq	reg_last_death(%rip), %rax	# reg_last_death, reg_last_death.1493
	movl	-96(%rbp), %edx	# regno, D.29594
	salq	$3, %rdx	#, D.29594
	addq	%rdx, %rax	# D.29594, D.29595
	movq	(%rax), %rax	# *_62, tmp355
	movq	%rax, -40(%rbp)	# tmp355, where_dead
	.loc 1 11872 0
	cmpq	$0, -144(%rbp)	#, maybe_kill_insn
	je	.L2274	#,
	.loc 1 11872 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rdx	# maybe_kill_insn, tmp356
	movq	-136(%rbp), %rax	# x, tmp357
	movq	%rdx, %rsi	# tmp356,
	movq	%rax, %rdi	# tmp357,
	call	reg_set_p	#
	testl	%eax, %eax	# D.29596
	je	.L2274	#,
	.loc 1 11873 0 is_stmt 1
	movq	-144(%rbp), %rdx	# maybe_kill_insn, tmp358
	movq	-136(%rbp), %rax	# x, tmp359
	movq	%rdx, %rsi	# tmp358,
	movq	%rax, %rdi	# tmp359,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29596
	jne	.L2274	#,
	.loc 1 11874 0
	jmp	.L2272	#
.L2274:
	.loc 1 11878 0
	movq	-40(%rbp), %rax	# where_dead, tmp360
	movq	%rax, -64(%rbp)	# tmp360, before_dead
	.loc 1 11879 0
	jmp	.L2276	#
.L2278:
	.loc 1 11880 0
	movq	-64(%rbp), %rax	# before_dead, tmp361
	movq	16(%rax), %rax	# before_dead_2->fld[1].rtx, tmp362
	movq	%rax, -64(%rbp)	# tmp362, before_dead
.L2276:
	.loc 1 11879 0 discriminator 1
	cmpq	$0, -64(%rbp)	#, before_dead
	je	.L2277	#,
	.loc 1 11879 0 is_stmt 0 discriminator 2
	movq	-64(%rbp), %rax	# before_dead, tmp363
	movl	8(%rax), %edx	# before_dead_2->fld[0].rtint, D.29596
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1494
	cmpl	%eax, %edx	# max_uid_cuid.1494, D.29596
	jg	.L2278	#,
.L2277:
	.loc 1 11882 0 is_stmt 1
	movq	-40(%rbp), %rax	# where_dead, tmp364
	movq	%rax, -56(%rbp)	# tmp364, after_dead
	.loc 1 11883 0
	jmp	.L2279	#
.L2281:
	.loc 1 11884 0
	movq	-56(%rbp), %rax	# after_dead, tmp365
	movq	24(%rax), %rax	# after_dead_3->fld[2].rtx, tmp366
	movq	%rax, -56(%rbp)	# tmp366, after_dead
.L2279:
	.loc 1 11883 0 discriminator 1
	cmpq	$0, -56(%rbp)	#, after_dead
	je	.L2280	#,
	.loc 1 11883 0 is_stmt 0 discriminator 2
	movq	-56(%rbp), %rax	# after_dead, tmp367
	movl	8(%rax), %edx	# after_dead_3->fld[0].rtint, D.29596
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1495
	cmpl	%eax, %edx	# max_uid_cuid.1495, D.29596
	jg	.L2281	#,
.L2280:
	.loc 1 11886 0 is_stmt 1
	cmpq	$0, -64(%rbp)	#, before_dead
	je	.L2282	#,
	.loc 1 11886 0 is_stmt 0 discriminator 1
	cmpq	$0, -56(%rbp)	#, after_dead
	je	.L2282	#,
	.loc 1 11887 0 is_stmt 1
	movq	-64(%rbp), %rax	# before_dead, tmp368
	movl	8(%rax), %edx	# before_dead_2->fld[0].rtint, D.29596
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1497
	cmpl	%eax, %edx	# max_uid_cuid.1497, D.29596
	jle	.L2283	#,
	.loc 1 11887 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# before_dead, tmp369
	movq	%rax, %rdi	# tmp369,
	call	insn_cuid	#
	jmp	.L2284	#
.L2283:
	.loc 1 11887 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1498
	movq	-64(%rbp), %rax	# before_dead, tmp370
	movl	8(%rax), %eax	# before_dead_2->fld[0].rtint, D.29596
	cltq
	salq	$2, %rax	#, D.29594
	addq	%rdx, %rax	# uid_cuid.1498, D.29597
	movl	(%rax), %eax	# *_82, iftmp.1496
.L2284:
	.loc 1 11887 0 discriminator 3
	cmpl	-148(%rbp), %eax	# from_cuid, iftmp.1496
	jl	.L2282	#,
	.loc 1 11888 0 is_stmt 1
	movq	-56(%rbp), %rax	# after_dead, tmp371
	movl	8(%rax), %edx	# after_dead_3->fld[0].rtint, D.29596
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1500
	cmpl	%eax, %edx	# max_uid_cuid.1500, D.29596
	jle	.L2285	#,
	.loc 1 11888 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# after_dead, tmp372
	movq	%rax, %rdi	# tmp372,
	call	insn_cuid	#
	movl	%eax, %ebx	#, iftmp.1499
	jmp	.L2286	#
.L2285:
	.loc 1 11888 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1501
	movq	-56(%rbp), %rax	# after_dead, tmp373
	movl	8(%rax), %eax	# after_dead_3->fld[0].rtint, D.29596
	cltq
	salq	$2, %rax	#, D.29594
	addq	%rdx, %rax	# uid_cuid.1501, D.29597
	movl	(%rax), %ebx	# *_92, iftmp.1499
.L2286:
	.loc 1 11888 0 discriminator 3
	movq	-160(%rbp), %rax	# to_insn, tmp374
	movl	8(%rax), %edx	# to_insn_94(D)->fld[0].rtint, D.29596
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1503
	cmpl	%eax, %edx	# max_uid_cuid.1503, D.29596
	jle	.L2287	#,
	.loc 1 11888 0 discriminator 1
	movq	-160(%rbp), %rax	# to_insn, tmp375
	movq	%rax, %rdi	# tmp375,
	call	insn_cuid	#
	jmp	.L2288	#
.L2287:
	.loc 1 11888 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1504
	movq	-160(%rbp), %rax	# to_insn, tmp376
	movl	8(%rax), %eax	# to_insn_94(D)->fld[0].rtint, D.29596
	cltq
	salq	$2, %rax	#, D.29594
	addq	%rdx, %rax	# uid_cuid.1504, D.29597
	movl	(%rax), %eax	# *_102, iftmp.1502
.L2288:
	.loc 1 11888 0 discriminator 3
	cmpl	%eax, %ebx	# iftmp.1502, iftmp.1499
	jl	.L2289	#,
	.loc 1 11889 0 is_stmt 1
	movq	-40(%rbp), %rax	# where_dead, tmp377
	cmpq	-56(%rbp), %rax	# after_dead, tmp377
	je	.L2282	#,
	.loc 1 11890 0
	movq	-56(%rbp), %rax	# after_dead, tmp378
	movl	8(%rax), %edx	# after_dead_3->fld[0].rtint, D.29596
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1506
	cmpl	%eax, %edx	# max_uid_cuid.1506, D.29596
	jle	.L2290	#,
	.loc 1 11890 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# after_dead, tmp379
	movq	%rax, %rdi	# tmp379,
	call	insn_cuid	#
	movl	%eax, %ebx	#, iftmp.1505
	jmp	.L2291	#
.L2290:
	.loc 1 11890 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1507
	movq	-56(%rbp), %rax	# after_dead, tmp380
	movl	8(%rax), %eax	# after_dead_3->fld[0].rtint, D.29596
	cltq
	salq	$2, %rax	#, D.29594
	addq	%rdx, %rax	# uid_cuid.1507, D.29597
	movl	(%rax), %ebx	# *_111, iftmp.1505
.L2291:
	.loc 1 11890 0 discriminator 3
	movq	-160(%rbp), %rax	# to_insn, tmp381
	movl	8(%rax), %edx	# to_insn_94(D)->fld[0].rtint, D.29596
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1509
	cmpl	%eax, %edx	# max_uid_cuid.1509, D.29596
	jle	.L2292	#,
	.loc 1 11890 0 discriminator 1
	movq	-160(%rbp), %rax	# to_insn, tmp382
	movq	%rax, %rdi	# tmp382,
	call	insn_cuid	#
	jmp	.L2293	#
.L2292:
	.loc 1 11890 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1510
	movq	-160(%rbp), %rax	# to_insn, tmp383
	movl	8(%rax), %eax	# to_insn_94(D)->fld[0].rtint, D.29596
	cltq
	salq	$2, %rax	#, D.29594
	addq	%rdx, %rax	# uid_cuid.1510, D.29597
	movl	(%rax), %eax	# *_120, iftmp.1508
.L2293:
	.loc 1 11890 0 discriminator 3
	cmpl	%eax, %ebx	# iftmp.1508, iftmp.1505
	jne	.L2282	#,
.L2289:
.LBB117:
	.loc 1 11892 0 is_stmt 1
	movq	-40(%rbp), %rdx	# where_dead, tmp384
	movl	-96(%rbp), %eax	# regno, tmp385
	movq	%rdx, %rsi	# tmp384,
	movl	%eax, %edi	# tmp385,
	call	remove_death	#
	movq	%rax, -32(%rbp)	# tmp386, note
	.loc 1 11903 0
	cmpq	$0, -32(%rbp)	#, note
	je	.L2294	#,
	.loc 1 11903 0 is_stmt 0 discriminator 1
	cmpl	$52, -96(%rbp)	#, regno
	ja	.L2294	#,
	.loc 1 11904 0 is_stmt 1
	movq	-32(%rbp), %rax	# note, tmp387
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _123->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29599
	.loc 1 11905 0
	movq	-136(%rbp), %rax	# x, tmp389
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29599
	.loc 1 11904 0
	cmpb	%al, %dl	# D.29599, D.29599
	jbe	.L2294	#,
.LBB118:
	.loc 1 11907 0
	movq	-32(%rbp), %rax	# note, tmp391
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movl	8(%rax), %eax	# _130->fld[0].rtuint, tmp392
	movl	%eax, -92(%rbp)	# tmp392, deadregno
	.loc 1 11909 0
	cmpl	$7, -92(%rbp)	#, deadregno
	jbe	.L2295	#,
	.loc 1 11909 0 is_stmt 0 discriminator 1
	cmpl	$15, -92(%rbp)	#, deadregno
	jbe	.L2296	#,
.L2295:
	.loc 1 11909 0 discriminator 2
	cmpl	$20, -92(%rbp)	#, deadregno
	jbe	.L2297	#,
	.loc 1 11909 0 discriminator 1
	cmpl	$28, -92(%rbp)	#, deadregno
	jbe	.L2296	#,
.L2297:
	.loc 1 11909 0 discriminator 2
	cmpl	$44, -92(%rbp)	#, deadregno
	jbe	.L2298	#,
	.loc 1 11909 0 discriminator 1
	cmpl	$52, -92(%rbp)	#, deadregno
	jbe	.L2296	#,
.L2298:
	.loc 1 11909 0 discriminator 2
	cmpl	$28, -92(%rbp)	#, deadregno
	jbe	.L2299	#,
	.loc 1 11909 0 discriminator 1
	cmpl	$36, -92(%rbp)	#, deadregno
	ja	.L2299	#,
.L2296:
	movq	-32(%rbp), %rax	# note, tmp393
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _165->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29600
	cmpl	$5, %eax	#, D.29600
	je	.L2300	#,
	.loc 1 11909 0 discriminator 4
	movq	-32(%rbp), %rax	# note, tmp395
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _169->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29600
	cmpl	$6, %eax	#, D.29600
	jne	.L2301	#,
.L2300:
	.loc 1 11909 0 discriminator 3
	movl	$2, %eax	#, iftmp.1512
	jmp	.L2303	#
.L2301:
	.loc 1 11909 0 discriminator 1
	movl	$1, %eax	#, iftmp.1512
	jmp	.L2303	#
.L2299:
	.loc 1 11909 0 discriminator 2
	movq	-32(%rbp), %rax	# note, tmp397
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _132->mode, D.29599
	cmpb	$18, %al	#, D.29599
	jne	.L2304	#,
	.loc 1 11909 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1515
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2305	#,
	.loc 1 11909 0 discriminator 8
	movl	$2, %eax	#, iftmp.1514
	jmp	.L2303	#
.L2305:
	.loc 1 11909 0 discriminator 9
	movl	$3, %eax	#, iftmp.1514
	jmp	.L2303	#
.L2304:
	.loc 1 11909 0 discriminator 7
	movq	-32(%rbp), %rax	# note, tmp398
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _139->mode, D.29599
	cmpb	$24, %al	#, D.29599
	jne	.L2308	#,
	.loc 1 11909 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1518
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2309	#,
	.loc 1 11909 0 discriminator 12
	movl	$4, %eax	#, iftmp.1517
	jmp	.L2303	#
.L2309:
	.loc 1 11909 0 discriminator 13
	movl	$6, %eax	#, iftmp.1517
	jmp	.L2303	#
.L2308:
	.loc 1 11909 0 discriminator 11
	movq	-32(%rbp), %rax	# note, tmp399
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _146->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29599
	movzbl	%al, %edx	# D.29599, D.29596
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1520
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2312	#,
	.loc 1 11909 0 discriminator 1
	movl	$8, %eax	#, iftmp.1519
	jmp	.L2313	#
.L2312:
	.loc 1 11909 0 discriminator 2
	movl	$4, %eax	#, iftmp.1519
.L2313:
	.loc 1 11909 0 discriminator 3
	addl	%edx, %eax	# D.29596, D.29596
	subl	$1, %eax	#, D.29596
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1522
	andl	$33554432, %edx	#, D.29596
	testl	%edx, %edx	# D.29596
	je	.L2314	#,
	.loc 1 11909 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1521
	jmp	.L2315	#
.L2314:
	.loc 1 11909 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1521
.L2315:
	.loc 1 11909 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1521
.L2303:
	.loc 1 11908 0 is_stmt 1
	movl	-92(%rbp), %edx	# deadregno, tmp406
	addl	%edx, %eax	# tmp406, tmp405
	movl	%eax, -88(%rbp)	# tmp405, deadend
	.loc 1 11912 0
	cmpl	$7, -96(%rbp)	#, regno
	jbe	.L2316	#,
	.loc 1 11912 0 is_stmt 0 discriminator 1
	cmpl	$15, -96(%rbp)	#, regno
	jbe	.L2317	#,
.L2316:
	.loc 1 11912 0 discriminator 2
	cmpl	$20, -96(%rbp)	#, regno
	jbe	.L2318	#,
	.loc 1 11912 0 discriminator 1
	cmpl	$28, -96(%rbp)	#, regno
	jbe	.L2317	#,
.L2318:
	.loc 1 11912 0 discriminator 2
	cmpl	$44, -96(%rbp)	#, regno
	jbe	.L2319	#,
	.loc 1 11912 0 discriminator 1
	cmpl	$52, -96(%rbp)	#, regno
	jbe	.L2317	#,
.L2319:
	.loc 1 11912 0 discriminator 2
	cmpl	$28, -96(%rbp)	#, regno
	jbe	.L2320	#,
	.loc 1 11912 0 discriminator 1
	cmpl	$36, -96(%rbp)	#, regno
	ja	.L2320	#,
.L2317:
	movq	-136(%rbp), %rax	# x, tmp407
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29600
	cmpl	$5, %eax	#, D.29600
	je	.L2321	#,
	.loc 1 11912 0 discriminator 4
	movq	-136(%rbp), %rax	# x, tmp409
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29600
	cmpl	$6, %eax	#, D.29600
	jne	.L2322	#,
.L2321:
	.loc 1 11912 0 discriminator 3
	movl	$2, %eax	#, iftmp.1524
	jmp	.L2324	#
.L2322:
	.loc 1 11912 0 discriminator 1
	movl	$1, %eax	#, iftmp.1524
	jmp	.L2324	#
.L2320:
	.loc 1 11912 0 discriminator 2
	movq	-136(%rbp), %rax	# x, tmp411
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	cmpb	$18, %al	#, D.29599
	jne	.L2325	#,
	.loc 1 11912 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1527
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2326	#,
	.loc 1 11912 0 discriminator 8
	movl	$2, %eax	#, iftmp.1526
	jmp	.L2324	#
.L2326:
	.loc 1 11912 0 discriminator 9
	movl	$3, %eax	#, iftmp.1526
	jmp	.L2324	#
.L2325:
	.loc 1 11912 0 discriminator 7
	movq	-136(%rbp), %rax	# x, tmp412
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	cmpb	$24, %al	#, D.29599
	jne	.L2329	#,
	.loc 1 11912 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1530
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2330	#,
	.loc 1 11912 0 discriminator 12
	movl	$4, %eax	#, iftmp.1529
	jmp	.L2324	#
.L2330:
	.loc 1 11912 0 discriminator 13
	movl	$6, %eax	#, iftmp.1529
	jmp	.L2324	#
.L2329:
	.loc 1 11912 0 discriminator 11
	movq	-136(%rbp), %rax	# x, tmp413
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29599
	movzbl	%al, %edx	# D.29599, D.29596
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1532
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2333	#,
	.loc 1 11912 0 discriminator 1
	movl	$8, %eax	#, iftmp.1531
	jmp	.L2334	#
.L2333:
	.loc 1 11912 0 discriminator 2
	movl	$4, %eax	#, iftmp.1531
.L2334:
	.loc 1 11912 0 discriminator 3
	addl	%edx, %eax	# D.29596, D.29596
	subl	$1, %eax	#, D.29596
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1534
	andl	$33554432, %edx	#, D.29596
	testl	%edx, %edx	# D.29596
	je	.L2335	#,
	.loc 1 11912 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1533
	jmp	.L2336	#
.L2335:
	.loc 1 11912 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1533
.L2336:
	.loc 1 11912 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1533
.L2324:
	.loc 1 11911 0 is_stmt 1
	movl	-96(%rbp), %edx	# regno, tmp420
	addl	%edx, %eax	# tmp420, tmp419
	movl	%eax, -84(%rbp)	# tmp419, ourend
	.loc 1 11915 0
	movl	-92(%rbp), %eax	# deadregno, tmp421
	movl	%eax, -116(%rbp)	# tmp421, i
	jmp	.L2337	#
.L2340:
	.loc 1 11916 0
	movl	-116(%rbp), %eax	# i, tmp422
	cmpl	-96(%rbp), %eax	# regno, tmp422
	jb	.L2338	#,
	.loc 1 11916 0 is_stmt 0 discriminator 1
	movl	-116(%rbp), %eax	# i, tmp423
	cmpl	-84(%rbp), %eax	# ourend, tmp423
	jb	.L2339	#,
.L2338:
	.loc 1 11918 0 is_stmt 1
	movq	-40(%rbp), %rax	# where_dead, tmp424
	movq	56(%rax), %rbx	# where_dead_63->fld[6].rtx, D.29598
	movl	-116(%rbp), %edx	# i, i.1535
	movl	-116(%rbp), %eax	# i, tmp425
	movl	reg_raw_mode(,%rax,4), %eax	# reg_raw_mode, D.29601
	movl	%edx, %esi	# i.1535,
	movl	%eax, %edi	# D.29601,
	call	gen_rtx_REG	#
	movq	%rbx, %rcx	# D.29598,
	movq	%rax, %rdx	# D.29598,
	movl	$1, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-40(%rbp), %rdx	# where_dead, tmp426
	movq	%rax, 56(%rdx)	# D.29598, where_dead_63->fld[6].rtx
.L2339:
	.loc 1 11915 0
	addl	$1, -116(%rbp)	#, i
.L2337:
	.loc 1 11915 0 is_stmt 0 discriminator 1
	movl	-116(%rbp), %eax	# i, tmp427
	cmpl	-88(%rbp), %eax	# deadend, tmp427
	jb	.L2340	#,
.LBE118:
	.loc 1 11906 0 is_stmt 1
	jmp	.L2341	#
.L2294:
	.loc 1 11928 0
	cmpq	$0, -32(%rbp)	#, note
	je	.L2342	#,
	.loc 1 11929 0
	cmpq	$0, -32(%rbp)	#, note
	je	.L2341	#,
	.loc 1 11930 0
	movq	-32(%rbp), %rax	# note, tmp428
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _224->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %edx	# mode_size, D.29599
	.loc 1 11931 0
	movq	-136(%rbp), %rax	# x, tmp430
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29599
	.loc 1 11930 0
	cmpb	%al, %dl	# D.29599, D.29599
	jae	.L2341	#,
.L2342:
	.loc 1 11932 0
	cmpl	$52, -96(%rbp)	#, regno
	ja	.L2341	#,
	.loc 1 11933 0
	cmpl	$7, -96(%rbp)	#, regno
	jbe	.L2343	#,
	.loc 1 11933 0 is_stmt 0 discriminator 1
	cmpl	$15, -96(%rbp)	#, regno
	jbe	.L2344	#,
.L2343:
	.loc 1 11933 0 discriminator 2
	cmpl	$20, -96(%rbp)	#, regno
	jbe	.L2345	#,
	.loc 1 11933 0 discriminator 1
	cmpl	$28, -96(%rbp)	#, regno
	jbe	.L2344	#,
.L2345:
	.loc 1 11933 0 discriminator 2
	cmpl	$44, -96(%rbp)	#, regno
	jbe	.L2346	#,
	.loc 1 11933 0 discriminator 1
	cmpl	$52, -96(%rbp)	#, regno
	jbe	.L2344	#,
.L2346:
	.loc 1 11933 0 discriminator 2
	cmpl	$28, -96(%rbp)	#, regno
	jbe	.L2347	#,
	.loc 1 11933 0 discriminator 1
	cmpl	$36, -96(%rbp)	#, regno
	ja	.L2347	#,
.L2344:
	movq	-136(%rbp), %rax	# x, tmp432
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29600
	cmpl	$5, %eax	#, D.29600
	je	.L2348	#,
	.loc 1 11933 0 discriminator 2
	movq	-136(%rbp), %rax	# x, tmp434
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29600
	cmpl	$6, %eax	#, D.29600
	jne	.L2349	#,
.L2348:
	.loc 1 11933 0 discriminator 1
	movl	$1, %eax	#, iftmp.1537
	jmp	.L2350	#
.L2349:
	.loc 1 11933 0 discriminator 3
	movl	$0, %eax	#, iftmp.1537
.L2350:
	.loc 1 11933 0 discriminator 4
	andl	$1, %eax	#, iftmp.1536
	jmp	.L2351	#
.L2347:
	.loc 1 11933 0 discriminator 2
	movq	-136(%rbp), %rax	# x, tmp436
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	cmpb	$18, %al	#, D.29599
	je	.L2352	#,
	.loc 1 11933 0 discriminator 5
	movq	-136(%rbp), %rax	# x, tmp437
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	cmpb	$24, %al	#, D.29599
	je	.L2352	#,
	.loc 1 11933 0 discriminator 6
	movq	-136(%rbp), %rax	# x, tmp438
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29599
	movzbl	%al, %edx	# D.29599, D.29596
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1540
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2353	#,
	.loc 1 11933 0 discriminator 1
	movl	$8, %eax	#, iftmp.1539
	jmp	.L2354	#
.L2353:
	.loc 1 11933 0 discriminator 2
	movl	$4, %eax	#, iftmp.1539
.L2354:
	.loc 1 11933 0 discriminator 3
	addl	%edx, %eax	# D.29596, D.29596
	subl	$1, %eax	#, D.29596
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1542
	andl	$33554432, %edx	#, D.29596
	testl	%edx, %edx	# D.29596
	je	.L2355	#,
	.loc 1 11933 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1541
	jmp	.L2356	#
.L2355:
	.loc 1 11933 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1541
.L2356:
	.loc 1 11933 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1541
	cmpl	$1, %eax	#, D.29596
	jle	.L2357	#,
.L2352:
	.loc 1 11933 0 discriminator 4
	movl	$1, %eax	#, iftmp.1538
	jmp	.L2358	#
.L2357:
	.loc 1 11933 0 discriminator 7
	movl	$0, %eax	#, iftmp.1538
.L2358:
	.loc 1 11933 0 discriminator 8
	andl	$1, %eax	#, iftmp.1536
.L2351:
	.loc 1 11933 0 discriminator 3
	testb	%al, %al	# iftmp.1536
	je	.L2341	#,
.LBB119:
	.loc 1 11936 0 is_stmt 1
	cmpl	$7, -96(%rbp)	#, regno
	jbe	.L2359	#,
	.loc 1 11936 0 is_stmt 0 discriminator 1
	cmpl	$15, -96(%rbp)	#, regno
	jbe	.L2360	#,
.L2359:
	.loc 1 11936 0 discriminator 2
	cmpl	$20, -96(%rbp)	#, regno
	jbe	.L2361	#,
	.loc 1 11936 0 discriminator 1
	cmpl	$28, -96(%rbp)	#, regno
	jbe	.L2360	#,
.L2361:
	.loc 1 11936 0 discriminator 2
	cmpl	$44, -96(%rbp)	#, regno
	jbe	.L2362	#,
	.loc 1 11936 0 discriminator 1
	cmpl	$52, -96(%rbp)	#, regno
	jbe	.L2360	#,
.L2362:
	.loc 1 11936 0 discriminator 2
	cmpl	$28, -96(%rbp)	#, regno
	jbe	.L2363	#,
	.loc 1 11936 0 discriminator 1
	cmpl	$36, -96(%rbp)	#, regno
	ja	.L2363	#,
.L2360:
	movq	-136(%rbp), %rax	# x, tmp442
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29600
	cmpl	$5, %eax	#, D.29600
	je	.L2364	#,
	.loc 1 11936 0 discriminator 4
	movq	-136(%rbp), %rax	# x, tmp444
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29600
	cmpl	$6, %eax	#, D.29600
	jne	.L2365	#,
.L2364:
	.loc 1 11936 0 discriminator 3
	movl	$2, %eax	#, iftmp.1544
	jmp	.L2367	#
.L2365:
	.loc 1 11936 0 discriminator 1
	movl	$1, %eax	#, iftmp.1544
	jmp	.L2367	#
.L2363:
	.loc 1 11936 0 discriminator 2
	movq	-136(%rbp), %rax	# x, tmp446
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	cmpb	$18, %al	#, D.29599
	jne	.L2368	#,
	.loc 1 11936 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1547
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2369	#,
	.loc 1 11936 0 discriminator 8
	movl	$2, %eax	#, iftmp.1546
	jmp	.L2367	#
.L2369:
	.loc 1 11936 0 discriminator 9
	movl	$3, %eax	#, iftmp.1546
	jmp	.L2367	#
.L2368:
	.loc 1 11936 0 discriminator 7
	movq	-136(%rbp), %rax	# x, tmp447
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	cmpb	$24, %al	#, D.29599
	jne	.L2372	#,
	.loc 1 11936 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1550
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2373	#,
	.loc 1 11936 0 discriminator 12
	movl	$4, %eax	#, iftmp.1549
	jmp	.L2367	#
.L2373:
	.loc 1 11936 0 discriminator 13
	movl	$6, %eax	#, iftmp.1549
	jmp	.L2367	#
.L2372:
	.loc 1 11936 0 discriminator 11
	movq	-136(%rbp), %rax	# x, tmp448
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29599
	movzbl	%al, %edx	# D.29599, D.29596
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1552
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2376	#,
	.loc 1 11936 0 discriminator 1
	movl	$8, %eax	#, iftmp.1551
	jmp	.L2377	#
.L2376:
	.loc 1 11936 0 discriminator 2
	movl	$4, %eax	#, iftmp.1551
.L2377:
	.loc 1 11936 0 discriminator 3
	addl	%edx, %eax	# D.29596, D.29596
	subl	$1, %eax	#, D.29596
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1554
	andl	$33554432, %edx	#, D.29596
	testl	%edx, %edx	# D.29596
	je	.L2378	#,
	.loc 1 11936 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1553
	jmp	.L2379	#
.L2378:
	.loc 1 11936 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1553
.L2379:
	.loc 1 11936 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1553
.L2367:
	.loc 1 11935 0 is_stmt 1
	movl	-96(%rbp), %edx	# regno, tmp455
	addl	%edx, %eax	# tmp455, tmp454
	movl	%eax, -80(%rbp)	# tmp454, ourend
	.loc 1 11938 0
	movq	$0, -72(%rbp)	#, oldnotes
	.loc 1 11940 0
	cmpq	$0, -32(%rbp)	#, note
	je	.L2380	#,
	.loc 1 11941 0
	cmpl	$7, -96(%rbp)	#, regno
	jbe	.L2381	#,
	.loc 1 11941 0 is_stmt 0 discriminator 1
	cmpl	$15, -96(%rbp)	#, regno
	jbe	.L2382	#,
.L2381:
	.loc 1 11941 0 discriminator 2
	cmpl	$20, -96(%rbp)	#, regno
	jbe	.L2383	#,
	.loc 1 11941 0 discriminator 1
	cmpl	$28, -96(%rbp)	#, regno
	jbe	.L2382	#,
.L2383:
	.loc 1 11941 0 discriminator 2
	cmpl	$44, -96(%rbp)	#, regno
	jbe	.L2384	#,
	.loc 1 11941 0 discriminator 1
	cmpl	$52, -96(%rbp)	#, regno
	jbe	.L2382	#,
.L2384:
	.loc 1 11941 0 discriminator 2
	cmpl	$28, -96(%rbp)	#, regno
	jbe	.L2385	#,
	.loc 1 11941 0 discriminator 1
	cmpl	$36, -96(%rbp)	#, regno
	ja	.L2385	#,
.L2382:
	movq	-32(%rbp), %rax	# note, tmp456
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _333->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29600
	cmpl	$5, %eax	#, D.29600
	je	.L2386	#,
	.loc 1 11941 0 discriminator 4
	movq	-32(%rbp), %rax	# note, tmp458
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _337->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29600
	cmpl	$6, %eax	#, D.29600
	jne	.L2387	#,
.L2386:
	.loc 1 11941 0 discriminator 3
	movl	$2, %eax	#, iftmp.1556
	jmp	.L2389	#
.L2387:
	.loc 1 11941 0 discriminator 1
	movl	$1, %eax	#, iftmp.1556
	jmp	.L2389	#
.L2385:
	.loc 1 11941 0 discriminator 2
	movq	-32(%rbp), %rax	# note, tmp460
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _300->mode, D.29599
	cmpb	$18, %al	#, D.29599
	jne	.L2390	#,
	.loc 1 11941 0 discriminator 7
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1559
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2391	#,
	.loc 1 11941 0 discriminator 9
	movl	$2, %eax	#, iftmp.1558
	jmp	.L2389	#
.L2391:
	.loc 1 11941 0 discriminator 10
	movl	$3, %eax	#, iftmp.1558
	jmp	.L2389	#
.L2390:
	.loc 1 11941 0 discriminator 8
	movq	-32(%rbp), %rax	# note, tmp461
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _307->mode, D.29599
	cmpb	$24, %al	#, D.29599
	jne	.L2394	#,
	.loc 1 11941 0 discriminator 11
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1562
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2395	#,
	.loc 1 11941 0 discriminator 13
	movl	$4, %eax	#, iftmp.1561
	jmp	.L2389	#
.L2395:
	.loc 1 11941 0 discriminator 14
	movl	$6, %eax	#, iftmp.1561
	jmp	.L2389	#
.L2394:
	.loc 1 11941 0 discriminator 12
	movq	-32(%rbp), %rax	# note, tmp462
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _314->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29599
	movzbl	%al, %edx	# D.29599, D.29596
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1564
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2398	#,
	.loc 1 11941 0 discriminator 1
	movl	$8, %eax	#, iftmp.1563
	jmp	.L2399	#
.L2398:
	.loc 1 11941 0 discriminator 2
	movl	$4, %eax	#, iftmp.1563
.L2399:
	.loc 1 11941 0 discriminator 3
	addl	%edx, %eax	# D.29596, D.29596
	subl	$1, %eax	#, D.29596
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1566
	andl	$33554432, %edx	#, D.29596
	testl	%edx, %edx	# D.29596
	je	.L2400	#,
	.loc 1 11941 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1565
	jmp	.L2401	#
.L2400:
	.loc 1 11941 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1565
.L2401:
	.loc 1 11941 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1565
.L2389:
	.loc 1 11941 0 discriminator 6
	movl	%eax, -108(%rbp)	# iftmp.1555, offset
	jmp	.L2402	#
.L2380:
	.loc 1 11943 0 is_stmt 1
	movl	$1, -108(%rbp)	#, offset
.L2402:
	.loc 1 11945 0
	movl	-108(%rbp), %eax	# offset, tmp470
	movl	-96(%rbp), %edx	# regno, tmp471
	addl	%edx, %eax	# tmp471, tmp469
	movl	%eax, -112(%rbp)	# tmp469, i
	jmp	.L2403	#
.L2404:
	.loc 1 11946 0 discriminator 2
	movl	-112(%rbp), %edx	# i, i.1567
	movl	-112(%rbp), %eax	# i, tmp472
	movl	reg_raw_mode(,%rax,4), %eax	# reg_raw_mode, D.29601
	movl	%edx, %esi	# i.1567,
	movl	%eax, %edi	# D.29601,
	call	gen_rtx_REG	#
	leaq	-72(%rbp), %rdi	#, tmp473
	movq	-160(%rbp), %rcx	# to_insn, tmp474
	movl	-148(%rbp), %edx	# from_cuid, tmp475
	movq	-144(%rbp), %rsi	# maybe_kill_insn, tmp476
	movq	%rdi, %r8	# tmp473,
	movq	%rax, %rdi	# D.29598,
	call	move_deaths	#
	.loc 1 11945 0 discriminator 2
	addl	$1, -112(%rbp)	#, i
.L2403:
	.loc 1 11945 0 is_stmt 0 discriminator 1
	movl	-112(%rbp), %eax	# i, tmp477
	cmpl	-80(%rbp), %eax	# ourend, tmp477
	jb	.L2404	#,
.L2341:
.LBE119:
	.loc 1 11950 0 is_stmt 1
	cmpq	$0, -32(%rbp)	#, note
	je	.L2405	#,
	.loc 1 11950 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# note, tmp478
	movq	8(%rax), %rax	# note_122->fld[0].rtx, D.29598
	movzbl	2(%rax), %edx	# _351->mode, D.29599
	movq	-136(%rbp), %rax	# x, tmp479
	movzbl	2(%rax), %eax	# x_55(D)->mode, D.29599
	cmpb	%al, %dl	# D.29599, D.29599
	jne	.L2405	#,
	.loc 1 11952 0 is_stmt 1
	movq	-168(%rbp), %rax	# pnotes, tmp480
	movq	(%rax), %rdx	# *pnotes_354(D), D.29598
	movq	-32(%rbp), %rax	# note, tmp481
	movq	%rdx, 16(%rax)	# D.29598, note_122->fld[1].rtx
	.loc 1 11953 0
	movq	-168(%rbp), %rax	# pnotes, tmp482
	movq	-32(%rbp), %rdx	# note, tmp483
	movq	%rdx, (%rax)	# tmp483, *pnotes_354(D)
	jmp	.L2406	#
.L2405:
	.loc 1 11956 0
	movq	-168(%rbp), %rax	# pnotes, tmp484
	movq	(%rax), %rdx	# *pnotes_354(D), D.29598
	movq	-136(%rbp), %rax	# x, tmp485
	movq	%rdx, %rcx	# D.29598,
	movq	%rax, %rdx	# tmp485,
	movl	$1, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-168(%rbp), %rdx	# pnotes, tmp486
	movq	%rax, (%rdx)	# D.29598, *pnotes_354(D)
.L2406:
	.loc 1 11958 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.1568
	movl	-96(%rbp), %edx	# regno, tmp487
	addq	$4, %rdx	#, tmp488
	movq	(%rax,%rdx,8), %rax	# reg_n_info.1568_358->data.reg, D.29602
	movl	24(%rax), %edx	# _359->deaths, D.29596
	addl	$1, %edx	#, D.29596
	movl	%edx, 24(%rax)	# D.29596, _359->deaths
.LBE117:
	.loc 1 11961 0
	jmp	.L2272	#
.L2282:
	jmp	.L2272	#
.L2273:
.LBE116:
	.loc 1 11964 0
	movq	-136(%rbp), %rax	# x, tmp489
	movzwl	(%rax), %eax	# x_55(D)->code, D.29593
	cmpw	$47, %ax	#, D.29593
	jne	.L2407	#,
.LBB120:
	.loc 1 11966 0
	movq	-136(%rbp), %rax	# x, tmp490
	movq	8(%rax), %rax	# x_55(D)->fld[0].rtx, tmp491
	movq	%rax, -48(%rbp)	# tmp491, dest
	.loc 1 11968 0
	movq	-136(%rbp), %rax	# x, tmp492
	movq	16(%rax), %rax	# x_55(D)->fld[1].rtx, D.29598
	movq	-168(%rbp), %rdi	# pnotes, tmp493
	movq	-160(%rbp), %rcx	# to_insn, tmp494
	movl	-148(%rbp), %edx	# from_cuid, tmp495
	movq	-144(%rbp), %rsi	# maybe_kill_insn, tmp496
	movq	%rdi, %r8	# tmp493,
	movq	%rax, %rdi	# D.29598,
	call	move_deaths	#
	.loc 1 11976 0
	movq	-48(%rbp), %rax	# dest, tmp497
	movzwl	(%rax), %eax	# dest_363->code, D.29593
	cmpw	$133, %ax	#, D.29593
	je	.L2408	#,
	.loc 1 11977 0
	movq	-48(%rbp), %rax	# dest, tmp498
	movzwl	(%rax), %eax	# dest_363->code, D.29593
	cmpw	$64, %ax	#, D.29593
	je	.L2408	#,
	.loc 1 11978 0
	movq	-48(%rbp), %rax	# dest, tmp499
	movzwl	(%rax), %eax	# dest_363->code, D.29593
	cmpw	$63, %ax	#, D.29593
	jne	.L2409	#,
	.loc 1 11979 0
	movq	-48(%rbp), %rax	# dest, tmp500
	movzbl	2(%rax), %eax	# dest_363->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29599
	.loc 1 11980 0
	movzbl	%al, %edx	# D.29599, D.29596
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1570
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2410	#,
	.loc 1 11980 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1569
	jmp	.L2411	#
.L2410:
	.loc 1 11980 0 discriminator 2
	movl	$4, %eax	#, iftmp.1569
.L2411:
	.loc 1 11980 0 discriminator 3
	addl	%edx, %eax	# D.29596, D.29596
	subl	$1, %eax	#, D.29596
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1572
	andl	$33554432, %edx	#, D.29596
	testl	%edx, %edx	# D.29596
	je	.L2412	#,
	.loc 1 11980 0 discriminator 1
	movl	$8, %ecx	#, iftmp.1571
	jmp	.L2413	#
.L2412:
	.loc 1 11980 0 discriminator 2
	movl	$4, %ecx	#, iftmp.1571
.L2413:
	.loc 1 11980 0 discriminator 3
	cltd
	idivl	%ecx	# iftmp.1571
	movl	%eax, %ecx	# tmp502, D.29596
	.loc 1 11981 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# dest, tmp504
	movq	8(%rax), %rax	# dest_363->fld[0].rtx, D.29598
	movzbl	2(%rax), %eax	# _383->mode, D.29599
	movzbl	%al, %eax	# D.29599, D.29596
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29599
	.loc 1 11982 0 discriminator 3
	movzbl	%al, %edx	# D.29599, D.29596
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1574
	andl	$33554432, %eax	#, D.29596
	testl	%eax, %eax	# D.29596
	je	.L2414	#,
	.loc 1 11982 0 is_stmt 0 discriminator 1
	movl	$8, %eax	#, iftmp.1573
	jmp	.L2415	#
.L2414:
	.loc 1 11982 0 discriminator 2
	movl	$4, %eax	#, iftmp.1573
.L2415:
	.loc 1 11982 0 discriminator 3
	addl	%edx, %eax	# D.29596, D.29596
	subl	$1, %eax	#, D.29596
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1576
	andl	$33554432, %edx	#, D.29596
	testl	%edx, %edx	# D.29596
	je	.L2416	#,
	.loc 1 11982 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1575
	jmp	.L2417	#
.L2416:
	.loc 1 11982 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1575
.L2417:
	.loc 1 11982 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1575
	.loc 1 11979 0 is_stmt 1 discriminator 3
	cmpl	%eax, %ecx	# D.29596, D.29596
	jne	.L2409	#,
.L2408:
	.loc 1 11984 0
	movq	-168(%rbp), %rdi	# pnotes, tmp508
	movq	-160(%rbp), %rcx	# to_insn, tmp509
	movl	-148(%rbp), %edx	# from_cuid, tmp510
	movq	-144(%rbp), %rsi	# maybe_kill_insn, tmp511
	movq	-48(%rbp), %rax	# dest, tmp512
	movq	%rdi, %r8	# tmp508,
	movq	%rax, %rdi	# tmp512,
	call	move_deaths	#
	.loc 1 11985 0
	jmp	.L2272	#
.L2409:
	.loc 1 11990 0
	movq	-48(%rbp), %rax	# dest, tmp513
	movzwl	(%rax), %eax	# dest_363->code, D.29593
	cmpw	$63, %ax	#, D.29593
	jne	.L2418	#,
	.loc 1 11991 0
	movq	-48(%rbp), %rax	# dest, tmp514
	movq	8(%rax), %rax	# dest_363->fld[0].rtx, tmp515
	movq	%rax, -48(%rbp)	# tmp515, dest
.L2418:
	.loc 1 11997 0
	movq	-48(%rbp), %rax	# dest, tmp516
	movzwl	(%rax), %eax	# dest_7->code, D.29593
	cmpw	$66, %ax	#, D.29593
	jne	.L2419	#,
	.loc 1 11998 0
	movq	-48(%rbp), %rax	# dest, tmp517
	movq	8(%rax), %rax	# dest_7->fld[0].rtx, D.29598
	movq	-168(%rbp), %rdi	# pnotes, tmp518
	movq	-160(%rbp), %rcx	# to_insn, tmp519
	movl	-148(%rbp), %edx	# from_cuid, tmp520
	movq	-144(%rbp), %rsi	# maybe_kill_insn, tmp521
	movq	%rdi, %r8	# tmp518,
	movq	%rax, %rdi	# D.29598,
	call	move_deaths	#
	.loc 1 12000 0
	jmp	.L2272	#
.L2419:
	jmp	.L2272	#
.L2407:
.LBE120:
	.loc 1 12003 0
	movq	-136(%rbp), %rax	# x, tmp522
	movzwl	(%rax), %eax	# x_55(D)->code, D.29593
	cmpw	$49, %ax	#, D.29593
	jne	.L2420	#,
	.loc 1 12004 0
	jmp	.L2272	#
.L2420:
	.loc 1 12006 0
	movl	-100(%rbp), %eax	# code, code.1577
	cltq
	movzbl	rtx_length(%rax), %eax	# rtx_length, D.29599
	movzbl	%al, %eax	# D.29599, tmp524
	movl	%eax, -76(%rbp)	# tmp524, len
	.loc 1 12007 0
	movl	-100(%rbp), %eax	# code, code.1578
	cltq
	movq	rtx_format(,%rax,8), %rax	# rtx_format, tmp526
	movq	%rax, -24(%rbp)	# tmp526, fmt
	.loc 1 12009 0
	movl	$0, -120(%rbp)	#, i
	jmp	.L2421	#
.L2426:
	.loc 1 12011 0
	movl	-120(%rbp), %eax	# i, tmp527
	movslq	%eax, %rdx	# tmp527, D.29603
	movq	-24(%rbp), %rax	# fmt, tmp528
	addq	%rdx, %rax	# D.29603, D.29604
	movzbl	(%rax), %eax	# *_411, D.29605
	cmpb	$69, %al	#, D.29605
	jne	.L2422	#,
.LBB121:
	.loc 1 12014 0
	movq	-136(%rbp), %rax	# x, tmp529
	movl	-120(%rbp), %edx	# i, tmp531
	movslq	%edx, %rdx	# tmp531, tmp530
	movq	8(%rax,%rdx,8), %rax	# x_55(D)->fld[i_1].rtvec, D.29606
	movl	(%rax), %eax	# _413->num_elem, D.29596
	subl	$1, %eax	#, tmp532
	movl	%eax, -104(%rbp)	# tmp532, j
	jmp	.L2423	#
.L2424:
	.loc 1 12015 0 discriminator 2
	movq	-136(%rbp), %rax	# x, tmp533
	movl	-120(%rbp), %edx	# i, tmp535
	movslq	%edx, %rdx	# tmp535, tmp534
	movq	8(%rax,%rdx,8), %rax	# x_55(D)->fld[i_1].rtvec, D.29606
	movl	-104(%rbp), %edx	# j, tmp537
	movslq	%edx, %rdx	# tmp537, tmp536
	movq	8(%rax,%rdx,8), %rax	# _416->elem, D.29598
	movq	-168(%rbp), %rdi	# pnotes, tmp538
	movq	-160(%rbp), %rcx	# to_insn, tmp539
	movl	-148(%rbp), %edx	# from_cuid, tmp540
	movq	-144(%rbp), %rsi	# maybe_kill_insn, tmp541
	movq	%rdi, %r8	# tmp538,
	movq	%rax, %rdi	# D.29598,
	call	move_deaths	#
	.loc 1 12014 0 discriminator 2
	subl	$1, -104(%rbp)	#, j
.L2423:
	.loc 1 12014 0 is_stmt 0 discriminator 1
	cmpl	$0, -104(%rbp)	#, j
	jns	.L2424	#,
.LBE121:
	jmp	.L2425	#
.L2422:
	.loc 1 12018 0 is_stmt 1
	movl	-120(%rbp), %eax	# i, tmp542
	movslq	%eax, %rdx	# tmp542, D.29603
	movq	-24(%rbp), %rax	# fmt, tmp543
	addq	%rdx, %rax	# D.29603, D.29604
	movzbl	(%rax), %eax	# *_420, D.29605
	cmpb	$101, %al	#, D.29605
	jne	.L2425	#,
	.loc 1 12019 0
	movq	-136(%rbp), %rax	# x, tmp544
	movl	-120(%rbp), %edx	# i, tmp546
	movslq	%edx, %rdx	# tmp546, tmp545
	movq	8(%rax,%rdx,8), %rax	# x_55(D)->fld[i_1].rtx, D.29598
	movq	-168(%rbp), %rdi	# pnotes, tmp547
	movq	-160(%rbp), %rcx	# to_insn, tmp548
	movl	-148(%rbp), %edx	# from_cuid, tmp549
	movq	-144(%rbp), %rsi	# maybe_kill_insn, tmp550
	movq	%rdi, %r8	# tmp547,
	movq	%rax, %rdi	# D.29598,
	call	move_deaths	#
.L2425:
	.loc 1 12009 0
	addl	$1, -120(%rbp)	#, i
.L2421:
	.loc 1 12009 0 is_stmt 0 discriminator 1
	movl	-120(%rbp), %eax	# i, tmp551
	cmpl	-76(%rbp), %eax	# len, tmp551
	jl	.L2426	#,
.L2272:
	.loc 1 12021 0 is_stmt 1
	addq	$168, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE59:
	.size	move_deaths, .-move_deaths
	.type	reg_bitfield_target_p, @function
reg_bitfield_target_p:
.LFB60:
	.loc 1 12030 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -72(%rbp)	# x, x
	movq	%rsi, -80(%rbp)	# body, body
	.loc 1 12033 0
	movq	-80(%rbp), %rax	# body, tmp137
	movzwl	(%rax), %eax	# body_22(D)->code, D.29608
	cmpw	$47, %ax	#, D.29608
	jne	.L2428	#,
.LBB122:
	.loc 1 12035 0
	movq	-80(%rbp), %rax	# body, tmp138
	movq	8(%rax), %rax	# body_22(D)->fld[0].rtx, tmp139
	movq	%rax, -24(%rbp)	# tmp139, dest
	.loc 1 12039 0
	movq	-24(%rbp), %rax	# dest, tmp140
	movzwl	(%rax), %eax	# dest_24->code, D.29608
	cmpw	$133, %ax	#, D.29608
	jne	.L2429	#,
	.loc 1 12040 0
	movq	-24(%rbp), %rax	# dest, tmp141
	movq	8(%rax), %rax	# dest_24->fld[0].rtx, tmp142
	movq	%rax, -32(%rbp)	# tmp142, target
	jmp	.L2430	#
.L2429:
	.loc 1 12041 0
	movq	-24(%rbp), %rax	# dest, tmp143
	movzwl	(%rax), %eax	# dest_24->code, D.29608
	cmpw	$64, %ax	#, D.29608
	jne	.L2431	#,
	.loc 1 12042 0
	movq	-24(%rbp), %rax	# dest, tmp144
	movq	8(%rax), %rax	# dest_24->fld[0].rtx, D.29609
	movq	8(%rax), %rax	# _28->fld[0].rtx, tmp145
	movq	%rax, -32(%rbp)	# tmp145, target
	jmp	.L2430	#
.L2431:
	.loc 1 12044 0
	movl	$0, %eax	#, D.29607
	jmp	.L2432	#
.L2430:
	.loc 1 12046 0
	movq	-32(%rbp), %rax	# target, tmp146
	movzwl	(%rax), %eax	# target_2->code, D.29608
	cmpw	$63, %ax	#, D.29608
	jne	.L2433	#,
	.loc 1 12047 0
	movq	-32(%rbp), %rax	# target, tmp147
	movq	8(%rax), %rax	# target_2->fld[0].rtx, tmp148
	movq	%rax, -32(%rbp)	# tmp148, target
.L2433:
	.loc 1 12049 0
	movq	-32(%rbp), %rax	# target, tmp149
	movzwl	(%rax), %eax	# target_3->code, D.29608
	cmpw	$61, %ax	#, D.29608
	je	.L2434	#,
	.loc 1 12050 0
	movl	$0, %eax	#, D.29607
	jmp	.L2432	#
.L2434:
	.loc 1 12052 0
	movq	-32(%rbp), %rax	# target, tmp150
	movl	8(%rax), %eax	# target_3->fld[0].rtuint, tmp151
	movl	%eax, -48(%rbp)	# tmp151, tregno
	movq	-72(%rbp), %rax	# x, tmp152
	movl	8(%rax), %eax	# x_36(D)->fld[0].rtuint, tmp153
	movl	%eax, -44(%rbp)	# tmp153, regno
	.loc 1 12053 0
	cmpl	$52, -48(%rbp)	#, tregno
	ja	.L2435	#,
	.loc 1 12053 0 is_stmt 0 discriminator 1
	cmpl	$52, -44(%rbp)	#, regno
	jbe	.L2436	#,
.L2435:
	.loc 1 12054 0 is_stmt 1
	movq	-32(%rbp), %rax	# target, tmp154
	cmpq	-72(%rbp), %rax	# x, tmp154
	sete	%al	#, D.29612
	movzbl	%al, %eax	# D.29612, D.29607
	jmp	.L2432	#
.L2436:
	.loc 1 12056 0
	cmpl	$7, -48(%rbp)	#, tregno
	jbe	.L2437	#,
	.loc 1 12056 0 is_stmt 0 discriminator 1
	cmpl	$15, -48(%rbp)	#, tregno
	jbe	.L2438	#,
.L2437:
	.loc 1 12056 0 discriminator 2
	cmpl	$20, -48(%rbp)	#, tregno
	jbe	.L2439	#,
	.loc 1 12056 0 discriminator 1
	cmpl	$28, -48(%rbp)	#, tregno
	jbe	.L2438	#,
.L2439:
	.loc 1 12056 0 discriminator 2
	cmpl	$44, -48(%rbp)	#, tregno
	jbe	.L2440	#,
	.loc 1 12056 0 discriminator 1
	cmpl	$52, -48(%rbp)	#, tregno
	jbe	.L2438	#,
.L2440:
	.loc 1 12056 0 discriminator 2
	cmpl	$28, -48(%rbp)	#, tregno
	jbe	.L2441	#,
	.loc 1 12056 0 discriminator 1
	cmpl	$36, -48(%rbp)	#, tregno
	ja	.L2441	#,
.L2438:
	movq	-32(%rbp), %rax	# target, tmp155
	movzbl	2(%rax), %eax	# target_3->mode, D.29610
	movzbl	%al, %eax	# D.29610, D.29607
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29611
	cmpl	$5, %eax	#, D.29611
	je	.L2442	#,
	.loc 1 12056 0 discriminator 4
	movq	-32(%rbp), %rax	# target, tmp157
	movzbl	2(%rax), %eax	# target_3->mode, D.29610
	movzbl	%al, %eax	# D.29610, D.29607
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29611
	cmpl	$6, %eax	#, D.29611
	jne	.L2443	#,
.L2442:
	.loc 1 12056 0 discriminator 3
	movl	$2, %eax	#, iftmp.1580
	jmp	.L2445	#
.L2443:
	.loc 1 12056 0 discriminator 1
	movl	$1, %eax	#, iftmp.1580
	jmp	.L2445	#
.L2441:
	.loc 1 12056 0 discriminator 2
	movq	-32(%rbp), %rax	# target, tmp159
	movzbl	2(%rax), %eax	# target_3->mode, D.29610
	cmpb	$18, %al	#, D.29610
	jne	.L2446	#,
	.loc 1 12056 0 discriminator 7
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1583
	andl	$33554432, %eax	#, D.29607
	testl	%eax, %eax	# D.29607
	je	.L2447	#,
	.loc 1 12056 0 discriminator 9
	movl	$2, %eax	#, iftmp.1582
	jmp	.L2445	#
.L2447:
	.loc 1 12056 0 discriminator 10
	movl	$3, %eax	#, iftmp.1582
	jmp	.L2445	#
.L2446:
	.loc 1 12056 0 discriminator 8
	movq	-32(%rbp), %rax	# target, tmp160
	movzbl	2(%rax), %eax	# target_3->mode, D.29610
	cmpb	$24, %al	#, D.29610
	jne	.L2450	#,
	.loc 1 12056 0 discriminator 11
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1586
	andl	$33554432, %eax	#, D.29607
	testl	%eax, %eax	# D.29607
	je	.L2451	#,
	.loc 1 12056 0 discriminator 13
	movl	$4, %eax	#, iftmp.1585
	jmp	.L2445	#
.L2451:
	.loc 1 12056 0 discriminator 14
	movl	$6, %eax	#, iftmp.1585
	jmp	.L2445	#
.L2450:
	.loc 1 12056 0 discriminator 12
	movq	-32(%rbp), %rax	# target, tmp161
	movzbl	2(%rax), %eax	# target_3->mode, D.29610
	movzbl	%al, %eax	# D.29610, D.29607
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29610
	movzbl	%al, %edx	# D.29610, D.29607
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1588
	andl	$33554432, %eax	#, D.29607
	testl	%eax, %eax	# D.29607
	je	.L2454	#,
	.loc 1 12056 0 discriminator 1
	movl	$8, %eax	#, iftmp.1587
	jmp	.L2455	#
.L2454:
	.loc 1 12056 0 discriminator 2
	movl	$4, %eax	#, iftmp.1587
.L2455:
	.loc 1 12056 0 discriminator 3
	addl	%edx, %eax	# D.29607, D.29607
	subl	$1, %eax	#, D.29607
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1590
	andl	$33554432, %edx	#, D.29607
	testl	%edx, %edx	# D.29607
	je	.L2456	#,
	.loc 1 12056 0 discriminator 1
	movl	$8, %ecx	#, iftmp.1589
	jmp	.L2457	#
.L2456:
	.loc 1 12056 0 discriminator 2
	movl	$4, %ecx	#, iftmp.1589
.L2457:
	.loc 1 12056 0 discriminator 3
	cltd
	idivl	%ecx	# iftmp.1589
.L2445:
	.loc 1 12056 0 discriminator 6
	movl	-48(%rbp), %edx	# tregno, tmp168
	addl	%edx, %eax	# tmp168, tmp167
	movl	%eax, -40(%rbp)	# tmp167, endtregno
	.loc 1 12057 0 is_stmt 1 discriminator 6
	cmpl	$7, -44(%rbp)	#, regno
	jbe	.L2458	#,
	.loc 1 12057 0 is_stmt 0 discriminator 1
	cmpl	$15, -44(%rbp)	#, regno
	jbe	.L2459	#,
.L2458:
	.loc 1 12057 0 discriminator 2
	cmpl	$20, -44(%rbp)	#, regno
	jbe	.L2460	#,
	.loc 1 12057 0 discriminator 1
	cmpl	$28, -44(%rbp)	#, regno
	jbe	.L2459	#,
.L2460:
	.loc 1 12057 0 discriminator 2
	cmpl	$44, -44(%rbp)	#, regno
	jbe	.L2461	#,
	.loc 1 12057 0 discriminator 1
	cmpl	$52, -44(%rbp)	#, regno
	jbe	.L2459	#,
.L2461:
	.loc 1 12057 0 discriminator 2
	cmpl	$28, -44(%rbp)	#, regno
	jbe	.L2462	#,
	.loc 1 12057 0 discriminator 1
	cmpl	$36, -44(%rbp)	#, regno
	ja	.L2462	#,
.L2459:
	movq	-72(%rbp), %rax	# x, tmp169
	movzbl	2(%rax), %eax	# x_36(D)->mode, D.29610
	movzbl	%al, %eax	# D.29610, D.29607
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29611
	cmpl	$5, %eax	#, D.29611
	je	.L2463	#,
	.loc 1 12057 0 discriminator 4
	movq	-72(%rbp), %rax	# x, tmp171
	movzbl	2(%rax), %eax	# x_36(D)->mode, D.29610
	movzbl	%al, %eax	# D.29610, D.29607
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29611
	cmpl	$6, %eax	#, D.29611
	jne	.L2464	#,
.L2463:
	.loc 1 12057 0 discriminator 3
	movl	$2, %eax	#, iftmp.1592
	jmp	.L2466	#
.L2464:
	.loc 1 12057 0 discriminator 1
	movl	$1, %eax	#, iftmp.1592
	jmp	.L2466	#
.L2462:
	.loc 1 12057 0 discriminator 2
	movq	-72(%rbp), %rax	# x, tmp173
	movzbl	2(%rax), %eax	# x_36(D)->mode, D.29610
	cmpb	$18, %al	#, D.29610
	jne	.L2467	#,
	.loc 1 12057 0 discriminator 7
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1595
	andl	$33554432, %eax	#, D.29607
	testl	%eax, %eax	# D.29607
	je	.L2468	#,
	.loc 1 12057 0 discriminator 9
	movl	$2, %eax	#, iftmp.1594
	jmp	.L2466	#
.L2468:
	.loc 1 12057 0 discriminator 10
	movl	$3, %eax	#, iftmp.1594
	jmp	.L2466	#
.L2467:
	.loc 1 12057 0 discriminator 8
	movq	-72(%rbp), %rax	# x, tmp174
	movzbl	2(%rax), %eax	# x_36(D)->mode, D.29610
	cmpb	$24, %al	#, D.29610
	jne	.L2471	#,
	.loc 1 12057 0 discriminator 11
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1598
	andl	$33554432, %eax	#, D.29607
	testl	%eax, %eax	# D.29607
	je	.L2472	#,
	.loc 1 12057 0 discriminator 13
	movl	$4, %eax	#, iftmp.1597
	jmp	.L2466	#
.L2472:
	.loc 1 12057 0 discriminator 14
	movl	$6, %eax	#, iftmp.1597
	jmp	.L2466	#
.L2471:
	.loc 1 12057 0 discriminator 12
	movq	-72(%rbp), %rax	# x, tmp175
	movzbl	2(%rax), %eax	# x_36(D)->mode, D.29610
	movzbl	%al, %eax	# D.29610, D.29607
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29610
	movzbl	%al, %edx	# D.29610, D.29607
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1600
	andl	$33554432, %eax	#, D.29607
	testl	%eax, %eax	# D.29607
	je	.L2475	#,
	.loc 1 12057 0 discriminator 1
	movl	$8, %eax	#, iftmp.1599
	jmp	.L2476	#
.L2475:
	.loc 1 12057 0 discriminator 2
	movl	$4, %eax	#, iftmp.1599
.L2476:
	.loc 1 12057 0 discriminator 3
	addl	%edx, %eax	# D.29607, D.29607
	subl	$1, %eax	#, D.29607
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1602
	andl	$33554432, %edx	#, D.29607
	testl	%edx, %edx	# D.29607
	je	.L2477	#,
	.loc 1 12057 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1601
	jmp	.L2478	#
.L2477:
	.loc 1 12057 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1601
.L2478:
	.loc 1 12057 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1601
.L2466:
	.loc 1 12057 0 discriminator 6
	movl	-44(%rbp), %edx	# regno, tmp182
	addl	%edx, %eax	# tmp182, tmp181
	movl	%eax, -36(%rbp)	# tmp181, endregno
	.loc 1 12059 0 is_stmt 1 discriminator 6
	movl	-36(%rbp), %eax	# endregno, tmp183
	cmpl	-48(%rbp), %eax	# tregno, tmp183
	jbe	.L2479	#,
	.loc 1 12059 0 is_stmt 0 discriminator 1
	movl	-44(%rbp), %eax	# regno, tmp184
	cmpl	-40(%rbp), %eax	# endtregno, tmp184
	jae	.L2479	#,
	.loc 1 12059 0 discriminator 3
	movl	$1, %eax	#, iftmp.1603
	jmp	.L2480	#
.L2479:
	.loc 1 12059 0 discriminator 2
	movl	$0, %eax	#, iftmp.1603
.L2480:
	.loc 1 12059 0 discriminator 4
	jmp	.L2432	#
.L2428:
.LBE122:
	.loc 1 12062 0 is_stmt 1
	movq	-80(%rbp), %rax	# body, tmp185
	movzwl	(%rax), %eax	# body_22(D)->code, D.29608
	cmpw	$39, %ax	#, D.29608
	jne	.L2481	#,
	.loc 1 12063 0
	movq	-80(%rbp), %rax	# body, tmp186
	movq	8(%rax), %rax	# body_22(D)->fld[0].rtvec, D.29613
	movl	(%rax), %eax	# _124->num_elem, D.29607
	subl	$1, %eax	#, tmp187
	movl	%eax, -52(%rbp)	# tmp187, i
	jmp	.L2482	#
.L2484:
	.loc 1 12064 0
	movq	-80(%rbp), %rax	# body, tmp188
	movq	8(%rax), %rax	# body_22(D)->fld[0].rtvec, D.29613
	movl	-52(%rbp), %edx	# i, tmp190
	movslq	%edx, %rdx	# tmp190, tmp189
	movq	8(%rax,%rdx,8), %rdx	# _127->elem, D.29609
	movq	-72(%rbp), %rax	# x, tmp191
	movq	%rdx, %rsi	# D.29609,
	movq	%rax, %rdi	# tmp191,
	call	reg_bitfield_target_p	#
	testl	%eax, %eax	# D.29607
	je	.L2483	#,
	.loc 1 12065 0
	movl	$1, %eax	#, D.29607
	jmp	.L2432	#
.L2483:
	.loc 1 12063 0
	subl	$1, -52(%rbp)	#, i
.L2482:
	.loc 1 12063 0 is_stmt 0 discriminator 1
	cmpl	$0, -52(%rbp)	#, i
	jns	.L2484	#,
.L2481:
	.loc 1 12067 0 is_stmt 1
	movl	$0, %eax	#, D.29607
.L2432:
	.loc 1 12068 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE60:
	.size	reg_bitfield_target_p, .-reg_bitfield_target_p
	.type	distribute_notes, @function
distribute_notes:
.LFB61:
	.loc 1 12087 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$168, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -136(%rbp)	# notes, notes
	movq	%rsi, -144(%rbp)	# from_insn, from_insn
	movq	%rdx, -152(%rbp)	# i3, i3
	movq	%rcx, -160(%rbp)	# i2, i2
	movq	%r8, -168(%rbp)	# elim_i2, elim_i2
	movq	%r9, -176(%rbp)	# elim_i1, elim_i1
	.loc 1 12091 0
	movq	-136(%rbp), %rax	# notes, tmp472
	movq	%rax, -112(%rbp)	# tmp472, note
	jmp	.L2486	#
.L2664:
.LBB123:
	.loc 1 12093 0
	movq	$0, -96(%rbp)	#, place
	movq	$0, -88(%rbp)	#, place2
	.loc 1 12097 0
	movq	-112(%rbp), %rax	# note, tmp473
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	testq	%rax, %rax	# D.29614
	je	.L2487	#,
	.loc 1 12097 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# note, tmp474
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _73->code, D.29615
	cmpw	$61, %ax	#, D.29615
	jne	.L2487	#,
	.loc 1 12098 0 is_stmt 1
	movq	-112(%rbp), %rax	# note, tmp475
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movl	8(%rax), %eax	# _75->fld[0].rtuint, D.29616
	cmpl	$52, %eax	#, D.29616
	jbe	.L2487	#,
	.loc 1 12099 0
	movq	cfun(%rip), %rax	# cfun, cfun.1604
	movq	24(%rax), %rax	# cfun.1604_77->emit, D.29617
	movq	80(%rax), %rdx	# _78->x_regno_reg_rtx, D.29618
	movq	-112(%rbp), %rax	# note, tmp476
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movl	8(%rax), %eax	# _80->fld[0].rtuint, D.29616
	movl	%eax, %eax	# D.29616, D.29619
	salq	$3, %rax	#, D.29619
	addq	%rdx, %rax	# D.29618, D.29618
	movq	(%rax), %rdx	# *_84, D.29614
	movq	-112(%rbp), %rax	# note, tmp477
	movq	%rdx, 8(%rax)	# D.29614, note_1->fld[0].rtx
.L2487:
	.loc 1 12101 0
	movq	-112(%rbp), %rax	# note, tmp478
	movq	16(%rax), %rax	# note_1->fld[1].rtx, tmp479
	movq	%rax, -72(%rbp)	# tmp479, next_note
	.loc 1 12102 0
	movq	-112(%rbp), %rax	# note, tmp480
	movzbl	2(%rax), %eax	# note_1->mode, D.29620
	movzbl	%al, %eax	# D.29620, D.29616
	cmpl	$30, %eax	#, D.29616
	ja	.L2488	#,
	movl	%eax, %eax	# D.29616, tmp481
	movq	.L2490(,%rax,8), %rax	#, tmp482
	jmp	*%rax	# tmp482
	.section	.rodata
	.align 8
	.align 4
.L2490:
	.quad	.L2488
	.quad	.L2489
	.quad	.L2491
	.quad	.L2492
	.quad	.L2492
	.quad	.L2665
	.quad	.L2494
	.quad	.L2495
	.quad	.L2665
	.quad	.L2491
	.quad	.L2496
	.quad	.L2488
	.quad	.L2488
	.quad	.L2497
	.quad	.L2488
	.quad	.L2488
	.quad	.L2498
	.quad	.L2498
	.quad	.L2492
	.quad	.L2488
	.quad	.L2498
	.quad	.L2488
	.quad	.L2488
	.quad	.L2499
	.quad	.L2488
	.quad	.L2488
	.quad	.L2500
	.quad	.L2501
	.quad	.L2500
	.quad	.L2488
	.quad	.L2502
	.text
.L2498:
	.loc 1 12110 0
	movq	-152(%rbp), %rax	# i3, tmp483
	movq	%rax, -96(%rbp)	# tmp483, place
	.loc 1 12111 0
	jmp	.L2503	#
.L2502:
	.loc 1 12116 0
	movq	-152(%rbp), %rax	# i3, tmp484
	movq	%rax, -96(%rbp)	# tmp484, place
	.loc 1 12117 0
	jmp	.L2503	#
.L2501:
	.loc 1 12120 0
	movq	-152(%rbp), %rax	# i3, tmp485
	movzwl	(%rax), %eax	# i3_89(D)->code, D.29615
	cmpw	$33, %ax	#, D.29615
	jne	.L2504	#,
	.loc 1 12121 0
	movq	-152(%rbp), %rax	# i3, tmp486
	movq	%rax, -96(%rbp)	# tmp486, place
	jmp	.L2505	#
.L2504:
	.loc 1 12122 0
	cmpq	$0, -160(%rbp)	#, i2
	je	.L2506	#,
	.loc 1 12122 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# i2, tmp487
	movzwl	(%rax), %eax	# i2_94(D)->code, D.29615
	cmpw	$33, %ax	#, D.29615
	jne	.L2506	#,
	.loc 1 12123 0 is_stmt 1
	movq	-160(%rbp), %rax	# i2, tmp488
	movq	%rax, -96(%rbp)	# tmp488, place
	jmp	.L2505	#
.L2506:
	.loc 1 12125 0
	movl	$__FUNCTION__.12829, %edx	#,
	movl	$12125, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L2505:
	.loc 1 12126 0
	jmp	.L2503	#
.L2499:
	.loc 1 12130 0
	movq	-152(%rbp), %rax	# i3, tmp489
	movzwl	(%rax), %eax	# i3_89(D)->code, D.29615
	cmpw	$34, %ax	#, D.29615
	jne	.L2507	#,
	.loc 1 12131 0
	movq	-152(%rbp), %rax	# i3, tmp490
	movq	%rax, -96(%rbp)	# tmp490, place
	jmp	.L2508	#
.L2507:
	.loc 1 12132 0
	cmpq	$0, -160(%rbp)	#, i2
	je	.L2509	#,
	.loc 1 12132 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# i2, tmp491
	movzwl	(%rax), %eax	# i2_94(D)->code, D.29615
	cmpw	$34, %ax	#, D.29615
	jne	.L2509	#,
	.loc 1 12133 0 is_stmt 1
	movq	-160(%rbp), %rax	# i2, tmp492
	movq	%rax, -96(%rbp)	# tmp492, place
	jmp	.L2508	#
.L2509:
	.loc 1 12134 0
	movl	flag_non_call_exceptions(%rip), %eax	# flag_non_call_exceptions, flag_non_call_exceptions.1605
	testl	%eax, %eax	# flag_non_call_exceptions.1605
	je	.L2510	#,
	.loc 1 12136 0
	movq	-152(%rbp), %rax	# i3, tmp493
	movq	%rax, %rdi	# tmp493,
	call	may_trap_p	#
	testl	%eax, %eax	# D.29621
	je	.L2511	#,
	.loc 1 12137 0
	movq	-152(%rbp), %rax	# i3, tmp494
	movq	%rax, -96(%rbp)	# tmp494, place
	jmp	.L2508	#
.L2511:
	.loc 1 12138 0
	cmpq	$0, -160(%rbp)	#, i2
	je	.L2508	#,
	.loc 1 12138 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# i2, tmp495
	movq	%rax, %rdi	# tmp495,
	call	may_trap_p	#
	testl	%eax, %eax	# D.29621
	je	.L2508	#,
	.loc 1 12139 0 is_stmt 1
	movq	-160(%rbp), %rax	# i2, tmp496
	movq	%rax, -96(%rbp)	# tmp496, place
	.loc 1 12146 0
	jmp	.L2503	#
.L2510:
	.loc 1 12145 0
	movl	$__FUNCTION__.12829, %edx	#,
	movl	$12145, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L2508:
	.loc 1 12146 0
	jmp	.L2503	#
.L2500:
	.loc 1 12152 0
	movq	-152(%rbp), %rax	# i3, tmp497
	movzwl	(%rax), %eax	# i3_89(D)->code, D.29615
	cmpw	$34, %ax	#, D.29615
	jne	.L2513	#,
	.loc 1 12153 0
	movq	-152(%rbp), %rax	# i3, tmp498
	movq	%rax, -96(%rbp)	# tmp498, place
	jmp	.L2514	#
.L2513:
	.loc 1 12154 0
	cmpq	$0, -160(%rbp)	#, i2
	je	.L2515	#,
	.loc 1 12154 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# i2, tmp499
	movzwl	(%rax), %eax	# i2_94(D)->code, D.29615
	cmpw	$34, %ax	#, D.29615
	jne	.L2515	#,
	.loc 1 12155 0 is_stmt 1
	movq	-160(%rbp), %rax	# i2, tmp500
	movq	%rax, -96(%rbp)	# tmp500, place
	jmp	.L2514	#
.L2515:
	.loc 1 12157 0
	movl	$__FUNCTION__.12829, %edx	#,
	movl	$12157, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L2514:
	.loc 1 12158 0
	jmp	.L2503	#
.L2496:
	.loc 1 12178 0
	movq	-152(%rbp), %rax	# i3, tmp501
	movq	32(%rax), %rdx	# i3_89(D)->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp502
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_set_p	#
	testl	%eax, %eax	# D.29621
	je	.L2516	#,
	.loc 1 12180 0
	movq	-144(%rbp), %rax	# from_insn, tmp503
	cmpq	-152(%rbp), %rax	# i3, tmp503
	je	.L2517	#,
	.loc 1 12181 0
	jmp	.L2503	#
.L2517:
	.loc 1 12183 0
	movq	-112(%rbp), %rax	# note, tmp504
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _114->code, D.29615
	cmpw	$61, %ax	#, D.29615
	jne	.L2518	#,
	.loc 1 12184 0
	movq	-112(%rbp), %rax	# note, tmp505
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movl	8(%rax), %edx	# _116->fld[0].rtuint, D.29616
	movq	-152(%rbp), %rax	# i3, tmp506
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp506,
	call	find_regno_note	#
	.loc 1 12183 0
	testq	%rax, %rax	# D.29614
	sete	%al	#, iftmp.1606
	jmp	.L2519	#
.L2518:
	.loc 1 12185 0 discriminator 1
	movq	-112(%rbp), %rax	# note, tmp507
	movq	8(%rax), %rdx	# note_1->fld[0].rtx, D.29614
	movq	-152(%rbp), %rax	# i3, tmp508
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp508,
	call	find_reg_note	#
	.loc 1 12183 0 discriminator 1
	testq	%rax, %rax	# D.29614
	sete	%al	#, iftmp.1606
.L2519:
	.loc 1 12183 0 is_stmt 0 discriminator 2
	testb	%al, %al	# iftmp.1606
	je	.L2521	#,
	.loc 1 12186 0 is_stmt 1
	movq	-152(%rbp), %rax	# i3, tmp509
	movq	%rax, -96(%rbp)	# tmp509, place
	.loc 1 12200 0
	jmp	.L2503	#
.L2516:
	.loc 1 12191 0
	movq	-152(%rbp), %rax	# i3, tmp510
	movq	32(%rax), %rdx	# i3_89(D)->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp511
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29621
	je	.L2521	#,
	.loc 1 12192 0
	movq	-112(%rbp), %rax	# note, tmp512
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _127->code, D.29615
	cmpw	$61, %ax	#, D.29615
	jne	.L2522	#,
	.loc 1 12194 0
	movq	-112(%rbp), %rax	# note, tmp513
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	.loc 1 12193 0
	movl	8(%rax), %edx	# _129->fld[0].rtuint, D.29616
	movq	-152(%rbp), %rax	# i3, tmp514
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp514,
	call	find_regno_note	#
	.loc 1 12192 0
	testq	%rax, %rax	# D.29614
	sete	%al	#, iftmp.1607
	jmp	.L2523	#
.L2522:
	.loc 1 12195 0 discriminator 1
	movq	-112(%rbp), %rax	# note, tmp515
	movq	8(%rax), %rdx	# note_1->fld[0].rtx, D.29614
	movq	-152(%rbp), %rax	# i3, tmp516
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp516,
	call	find_reg_note	#
	.loc 1 12192 0 discriminator 1
	testq	%rax, %rax	# D.29614
	sete	%al	#, iftmp.1607
.L2523:
	.loc 1 12192 0 is_stmt 0 discriminator 2
	testb	%al, %al	# iftmp.1607
	je	.L2521	#,
	.loc 1 12197 0 is_stmt 1
	movq	-112(%rbp), %rax	# note, tmp517
	movb	$1, 2(%rax)	#, note_1->mode
	.loc 1 12198 0
	movq	-152(%rbp), %rax	# i3, tmp518
	movq	%rax, -96(%rbp)	# tmp518, place
	.loc 1 12200 0
	jmp	.L2503	#
.L2521:
	jmp	.L2503	#
.L2492:
	.loc 1 12216 0
	movq	-144(%rbp), %rax	# from_insn, tmp519
	cmpq	-152(%rbp), %rax	# i3, tmp519
	jne	.L2524	#,
	.loc 1 12217 0
	movq	-112(%rbp), %rax	# note, tmp520
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	testq	%rax, %rax	# D.29614
	je	.L2525	#,
	.loc 1 12217 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# note, tmp521
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _138->code, D.29615
	cmpw	$67, %ax	#, D.29615
	je	.L2525	#,
	movq	-112(%rbp), %rax	# note, tmp522
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _140->code, D.29615
	cmpw	$68, %ax	#, D.29615
	je	.L2525	#,
	movq	-112(%rbp), %rax	# note, tmp523
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _142->code, D.29615
	cmpw	$54, %ax	#, D.29615
	je	.L2525	#,
	movq	-112(%rbp), %rax	# note, tmp524
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _144->code, D.29615
	cmpw	$55, %ax	#, D.29615
	je	.L2525	#,
	movq	-112(%rbp), %rax	# note, tmp525
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _146->code, D.29615
	cmpw	$58, %ax	#, D.29615
	je	.L2525	#,
	movq	-112(%rbp), %rax	# note, tmp526
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _148->code, D.29615
	cmpw	$134, %ax	#, D.29615
	je	.L2525	#,
	movq	-112(%rbp), %rax	# note, tmp527
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _150->code, D.29615
	cmpw	$56, %ax	#, D.29615
	je	.L2525	#,
	movq	-112(%rbp), %rax	# note, tmp528
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _152->code, D.29615
	cmpw	$140, %ax	#, D.29615
	jne	.L2524	#,
.L2525:
	.loc 1 12218 0 is_stmt 1
	movq	-152(%rbp), %rax	# i3, tmp529
	movq	%rax, -96(%rbp)	# tmp529, place
	.loc 1 12219 0
	jmp	.L2503	#
.L2524:
	jmp	.L2503	#
.L2491:
	.loc 1 12225 0
	movq	-152(%rbp), %rax	# i3, tmp530
	movq	32(%rax), %rdx	# i3_89(D)->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp531
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_mentioned_p	#
	testl	%eax, %eax	# D.29621
	je	.L2526	#,
	.loc 1 12226 0
	movq	-152(%rbp), %rax	# i3, tmp532
	movq	%rax, -96(%rbp)	# tmp532, place
.L2526:
	.loc 1 12228 0
	cmpq	$0, -160(%rbp)	#, i2
	je	.L2527	#,
	.loc 1 12228 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# i2, tmp533
	movq	32(%rax), %rdx	# i2_94(D)->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp534
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_mentioned_p	#
	testl	%eax, %eax	# D.29621
	je	.L2527	#,
	.loc 1 12230 0 is_stmt 1
	cmpq	$0, -96(%rbp)	#, place
	je	.L2528	#,
	.loc 1 12231 0
	movq	-160(%rbp), %rax	# i2, tmp535
	movq	%rax, -88(%rbp)	# tmp535, place2
	jmp	.L2527	#
.L2528:
	.loc 1 12233 0
	movq	-160(%rbp), %rax	# i2, tmp536
	movq	%rax, -96(%rbp)	# tmp536, place
	.loc 1 12235 0
	jmp	.L2503	#
.L2527:
	jmp	.L2503	#
.L2497:
	.loc 1 12242 0
	movq	-152(%rbp), %rax	# i3, tmp537
	movq	32(%rax), %rdx	# i3_89(D)->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp538
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_mentioned_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2529	#,
	.loc 1 12243 0
	movq	-152(%rbp), %rax	# i3, tmp539
	movl	$0, %edx	#,
	movl	$4, %esi	#,
	movq	%rax, %rdi	# tmp539,
	call	find_reg_note	#
	movq	%rax, -104(%rbp)	# tmp540, tem
	cmpq	$0, -104(%rbp)	#, tem
	je	.L2530	#,
	.loc 1 12244 0
	movq	-104(%rbp), %rax	# tem, tmp541
	movq	8(%rax), %rax	# tem_167->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _168->code, D.29615
	cmpw	$67, %ax	#, D.29615
	jne	.L2530	#,
	.loc 1 12245 0
	movq	-104(%rbp), %rax	# tem, tmp542
	movq	8(%rax), %rax	# tem_167->fld[0].rtx, D.29614
	movq	8(%rax), %rdx	# _170->fld[0].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp543
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	cmpq	%rax, %rdx	# D.29614, D.29614
	jne	.L2530	#,
.L2529:
	.loc 1 12246 0
	movq	-152(%rbp), %rax	# i3, tmp544
	movq	%rax, -96(%rbp)	# tmp544, place
.L2530:
	.loc 1 12248 0
	cmpq	$0, -160(%rbp)	#, i2
	je	.L2531	#,
	.loc 1 12249 0
	movq	-160(%rbp), %rax	# i2, tmp545
	movq	32(%rax), %rdx	# i2_94(D)->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp546
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_mentioned_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2532	#,
	.loc 1 12250 0
	movq	-160(%rbp), %rax	# i2, tmp547
	movl	$0, %edx	#,
	movl	$4, %esi	#,
	movq	%rax, %rdi	# tmp547,
	call	find_reg_note	#
	movq	%rax, -104(%rbp)	# tmp548, tem
	cmpq	$0, -104(%rbp)	#, tem
	je	.L2531	#,
	.loc 1 12251 0
	movq	-104(%rbp), %rax	# tem, tmp549
	movq	8(%rax), %rax	# tem_177->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _178->code, D.29615
	cmpw	$67, %ax	#, D.29615
	jne	.L2531	#,
	.loc 1 12252 0
	movq	-104(%rbp), %rax	# tem, tmp550
	movq	8(%rax), %rax	# tem_177->fld[0].rtx, D.29614
	movq	8(%rax), %rdx	# _180->fld[0].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp551
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	cmpq	%rax, %rdx	# D.29614, D.29614
	jne	.L2531	#,
.L2532:
	.loc 1 12254 0
	cmpq	$0, -96(%rbp)	#, place
	je	.L2533	#,
	.loc 1 12255 0
	movq	-160(%rbp), %rax	# i2, tmp552
	movq	%rax, -88(%rbp)	# tmp552, place2
	jmp	.L2531	#
.L2533:
	.loc 1 12257 0
	movq	-160(%rbp), %rax	# i2, tmp553
	movq	%rax, -96(%rbp)	# tmp553, place
.L2531:
	.loc 1 12262 0
	cmpq	$0, -96(%rbp)	#, place
	je	.L2534	#,
	.loc 1 12262 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# place, tmp554
	movzwl	(%rax), %eax	# place_14->code, D.29615
	cmpw	$33, %ax	#, D.29615
	jne	.L2534	#,
	movq	-96(%rbp), %rax	# place, tmp555
	movq	64(%rax), %rax	# place_14->fld[7].rtx, D.29614
	testq	%rax, %rax	# D.29614
	je	.L2534	#,
	.loc 1 12264 0 is_stmt 1
	movq	-96(%rbp), %rax	# place, tmp556
	movq	64(%rax), %rdx	# place_14->fld[7].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp557
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	cmpq	%rax, %rdx	# D.29614, D.29614
	je	.L2535	#,
	.loc 1 12265 0
	movl	$__FUNCTION__.12829, %edx	#,
	movl	$12265, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L2535:
	.loc 1 12266 0
	movq	-96(%rbp), %rax	# place, tmp558
	movq	64(%rax), %rax	# place_14->fld[7].rtx, D.29614
	movzwl	(%rax), %eax	# _189->code, D.29615
	cmpw	$36, %ax	#, D.29615
	jne	.L2536	#,
	.loc 1 12267 0
	movq	-96(%rbp), %rax	# place, tmp559
	movq	64(%rax), %rax	# place_14->fld[7].rtx, D.29614
	movl	32(%rax), %edx	# _191->fld[3].rtint, D.29621
	subl	$1, %edx	#, D.29621
	movl	%edx, 32(%rax)	# D.29621, _191->fld[3].rtint
.L2536:
	.loc 1 12268 0
	movq	$0, -96(%rbp)	#, place
.L2534:
	.loc 1 12270 0
	cmpq	$0, -88(%rbp)	#, place2
	je	.L2537	#,
	.loc 1 12270 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# place2, tmp560
	movzwl	(%rax), %eax	# place2_30->code, D.29615
	cmpw	$33, %ax	#, D.29615
	jne	.L2537	#,
	movq	-88(%rbp), %rax	# place2, tmp561
	movq	64(%rax), %rax	# place2_30->fld[7].rtx, D.29614
	testq	%rax, %rax	# D.29614
	je	.L2537	#,
	.loc 1 12272 0 is_stmt 1
	movq	-88(%rbp), %rax	# place2, tmp562
	movq	64(%rax), %rdx	# place2_30->fld[7].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp563
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	cmpq	%rax, %rdx	# D.29614, D.29614
	je	.L2538	#,
	.loc 1 12273 0
	movl	$__FUNCTION__.12829, %edx	#,
	movl	$12273, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L2538:
	.loc 1 12274 0
	movq	-88(%rbp), %rax	# place2, tmp564
	movq	64(%rax), %rax	# place2_30->fld[7].rtx, D.29614
	movzwl	(%rax), %eax	# _199->code, D.29615
	cmpw	$36, %ax	#, D.29615
	jne	.L2539	#,
	.loc 1 12275 0
	movq	-88(%rbp), %rax	# place2, tmp565
	movq	64(%rax), %rax	# place2_30->fld[7].rtx, D.29614
	movl	32(%rax), %edx	# _201->fld[3].rtint, D.29621
	subl	$1, %edx	#, D.29621
	movl	%edx, 32(%rax)	# D.29621, _201->fld[3].rtint
.L2539:
	.loc 1 12276 0
	movq	$0, -88(%rbp)	#, place2
	.loc 1 12278 0
	jmp	.L2503	#
.L2537:
	jmp	.L2503	#
.L2494:
	.loc 1 12292 0
	movq	-144(%rbp), %rax	# from_insn, tmp566
	movzwl	(%rax), %eax	# from_insn_113(D)->code, D.29615
	cmpw	$37, %ax	#, D.29615
	je	.L2540	#,
	.loc 1 12293 0
	movq	-144(%rbp), %rax	# from_insn, tmp567
	movq	%rax, -96(%rbp)	# tmp567, place
	jmp	.L2541	#
.L2540:
	.loc 1 12296 0
	movq	-112(%rbp), %rax	# note, tmp568
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movl	$0, %edx	#,
	movl	$7, %esi	#,
	movq	%rax, %rdi	# D.29614,
	call	find_reg_note	#
	movq	%rax, -104(%rbp)	# tmp569, tem
	.loc 1 12297 0
	movq	-144(%rbp), %rax	# from_insn, tmp570
	movq	%rax, %rdi	# tmp570,
	call	prev_real_insn	#
	movq	%rax, -96(%rbp)	# tmp571, place
	.loc 1 12298 0
	cmpq	$0, -104(%rbp)	#, tem
	je	.L2542	#,
	.loc 1 12298 0 is_stmt 0 discriminator 1
	cmpq	$0, -96(%rbp)	#, place
	je	.L2542	#,
	.loc 1 12299 0 is_stmt 1
	movq	-104(%rbp), %rax	# tem, tmp572
	movq	-96(%rbp), %rdx	# place, tmp573
	movq	%rdx, 8(%rax)	# tmp573, tem_208->fld[0].rtx
	jmp	.L2541	#
.L2542:
	.loc 1 12302 0
	movq	-112(%rbp), %rax	# note, tmp574
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	cmpq	-144(%rbp), %rax	# from_insn, D.29614
	jne	.L2541	#,
	.loc 1 12303 0
	movq	$0, -96(%rbp)	#, place
	movq	-96(%rbp), %rax	# place, tmp575
	movq	%rax, -104(%rbp)	# tmp575, tem
	.loc 1 12305 0
	jmp	.L2503	#
.L2541:
	jmp	.L2503	#
.L2495:
	.loc 1 12309 0
	movq	-144(%rbp), %rax	# from_insn, tmp576
	movzwl	(%rax), %eax	# from_insn_113(D)->code, D.29615
	cmpw	$37, %ax	#, D.29615
	je	.L2543	#,
	.loc 1 12310 0
	movq	-144(%rbp), %rax	# from_insn, tmp577
	movq	%rax, -96(%rbp)	# tmp577, place
	jmp	.L2544	#
.L2543:
	.loc 1 12313 0
	movq	-112(%rbp), %rax	# note, tmp578
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movl	$0, %edx	#,
	movl	$6, %esi	#,
	movq	%rax, %rdi	# D.29614,
	call	find_reg_note	#
	movq	%rax, -104(%rbp)	# tmp579, tem
	.loc 1 12314 0
	movq	-144(%rbp), %rax	# from_insn, tmp580
	movq	%rax, %rdi	# tmp580,
	call	next_real_insn	#
	movq	%rax, -96(%rbp)	# tmp581, place
	.loc 1 12315 0
	cmpq	$0, -104(%rbp)	#, tem
	je	.L2545	#,
	.loc 1 12315 0 is_stmt 0 discriminator 1
	cmpq	$0, -96(%rbp)	#, place
	je	.L2545	#,
	.loc 1 12316 0 is_stmt 1
	movq	-104(%rbp), %rax	# tem, tmp582
	movq	-96(%rbp), %rdx	# place, tmp583
	movq	%rdx, 8(%rax)	# tmp583, tem_216->fld[0].rtx
	jmp	.L2544	#
.L2545:
	.loc 1 12319 0
	movq	-112(%rbp), %rax	# note, tmp584
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	cmpq	-144(%rbp), %rax	# from_insn, D.29614
	jne	.L2544	#,
	.loc 1 12320 0
	movq	$0, -96(%rbp)	#, place
	movq	-96(%rbp), %rax	# place, tmp585
	movq	%rax, -104(%rbp)	# tmp585, tem
	.loc 1 12322 0
	jmp	.L2503	#
.L2544:
	jmp	.L2503	#
.L2489:
	.loc 1 12339 0
	cmpq	$0, -144(%rbp)	#, from_insn
	je	.L2546	#,
	.loc 1 12340 0
	movq	-144(%rbp), %rax	# from_insn, tmp586
	movzwl	(%rax), %eax	# from_insn_113(D)->code, D.29615
	cmpw	$34, %ax	#, D.29615
	jne	.L2546	#,
	.loc 1 12341 0
	movq	-112(%rbp), %rax	# note, tmp587
	movq	8(%rax), %rdx	# note_1->fld[0].rtx, D.29614
	movq	-144(%rbp), %rax	# from_insn, tmp588
	movl	$48, %esi	#,
	movq	%rax, %rdi	# tmp588,
	call	find_reg_fusage	#
	testl	%eax, %eax	# D.29621
	je	.L2546	#,
	.loc 1 12342 0
	movq	-144(%rbp), %rax	# from_insn, tmp589
	movq	%rax, -96(%rbp)	# tmp589, place
	jmp	.L2547	#
.L2546:
	.loc 1 12343 0
	movq	-152(%rbp), %rax	# i3, tmp590
	movq	32(%rax), %rdx	# i3_89(D)->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp591
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29621
	je	.L2548	#,
	.loc 1 12344 0
	movq	-152(%rbp), %rax	# i3, tmp592
	movq	%rax, -96(%rbp)	# tmp592, place
	jmp	.L2547	#
.L2548:
	.loc 1 12345 0
	cmpq	$0, -160(%rbp)	#, i2
	je	.L2547	#,
	.loc 1 12345 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# i2, tmp593
	movq	%rax, %rdi	# tmp593,
	call	next_nonnote_insn	#
	cmpq	-152(%rbp), %rax	# i3, D.29614
	jne	.L2547	#,
	.loc 1 12346 0 is_stmt 1
	movq	-160(%rbp), %rax	# i2, tmp594
	movq	32(%rax), %rdx	# i2_94(D)->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp595
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29621
	je	.L2547	#,
	.loc 1 12347 0
	movq	-160(%rbp), %rax	# i2, tmp596
	movq	%rax, -96(%rbp)	# tmp596, place
.L2547:
	.loc 1 12349 0
	movq	-112(%rbp), %rax	# note, tmp597
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	-168(%rbp), %rdx	# elim_i2, tmp598
	movq	%rdx, %rsi	# tmp598,
	movq	%rax, %rdi	# D.29614,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2503	#,
	.loc 1 12350 0
	movq	-112(%rbp), %rax	# note, tmp599
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	-176(%rbp), %rdx	# elim_i1, tmp600
	movq	%rdx, %rsi	# tmp600,
	movq	%rax, %rdi	# D.29614,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2503	#,
	.loc 1 12353 0
	cmpq	$0, -96(%rbp)	#, place
	jne	.L2549	#,
.LBB124:
	.loc 1 12355 0
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.1608
	movl	this_basic_block(%rip), %edx	# this_basic_block, this_basic_block.1609
	movslq	%edx, %rdx	# this_basic_block.1609, tmp601
	addq	$4, %rdx	#, tmp602
	movq	(%rax,%rdx,8), %rax	# basic_block_info.1608_240->data.bb, tmp603
	movq	%rax, -64(%rbp)	# tmp603, bb
	.loc 1 12357 0
	movq	-152(%rbp), %rax	# i3, tmp604
	movq	16(%rax), %rax	# i3_89(D)->fld[1].rtx, tmp605
	movq	%rax, -104(%rbp)	# tmp605, tem
	jmp	.L2550	#
.L2579:
	.loc 1 12359 0
	movq	-104(%rbp), %rax	# tem, tmp606
	movzwl	(%rax), %eax	# tem_2->code, D.29615
	movzwl	%ax, %eax	# D.29615, D.29621
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29622
	cmpb	$105, %al	#, D.29622
	je	.L2551	#,
	.loc 1 12361 0
	movq	-64(%rbp), %rax	# bb, tmp608
	movq	(%rax), %rax	# bb_242->head, D.29614
	cmpq	-104(%rbp), %rax	# tem, D.29614
	jne	.L2552	#,
	.loc 1 12362 0
	jmp	.L2553	#
.L2552:
	.loc 1 12363 0
	jmp	.L2554	#
.L2551:
	.loc 1 12369 0
	movq	-104(%rbp), %rax	# tem, tmp609
	movq	32(%rax), %rdx	# tem_2->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp610
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_set_p	#
	testl	%eax, %eax	# D.29621
	je	.L2555	#,
.LBB125:
	.loc 1 12371 0
	movq	-104(%rbp), %rax	# tem, tmp611
	movzwl	(%rax), %eax	# tem_2->code, D.29615
	movzwl	%ax, %eax	# D.29615, D.29621
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29622
	cmpb	$105, %al	#, D.29622
	jne	.L2556	#,
	.loc 1 12371 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# tem, tmp613
	movq	32(%rax), %rax	# tem_2->fld[3].rtx, D.29614
	movzwl	(%rax), %eax	# _254->code, D.29615
	cmpw	$47, %ax	#, D.29615
	jne	.L2557	#,
	.loc 1 12371 0 discriminator 3
	movq	-104(%rbp), %rax	# tem, tmp614
	movq	32(%rax), %rax	# tem_2->fld[3].rtx, iftmp.1611
	jmp	.L2559	#
.L2557:
	.loc 1 12371 0 discriminator 4
	movq	-104(%rbp), %rax	# tem, tmp615
	movq	32(%rax), %rdx	# tem_2->fld[3].rtx, D.29614
	movq	-104(%rbp), %rax	# tem, tmp616
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# tmp616,
	call	single_set_2	#
	jmp	.L2559	#
.L2556:
	.loc 1 12371 0 discriminator 2
	movl	$0, %eax	#, iftmp.1610
.L2559:
	.loc 1 12371 0 discriminator 5
	movq	%rax, -56(%rbp)	# iftmp.1610, set
	.loc 1 12372 0 is_stmt 1 discriminator 5
	movq	$0, -80(%rbp)	#, inner_dest
	.loc 1 12377 0 discriminator 5
	cmpq	$0, -56(%rbp)	#, set
	je	.L2560	#,
	.loc 1 12378 0
	movq	-56(%rbp), %rax	# set, tmp617
	movq	8(%rax), %rax	# set_261->fld[0].rtx, tmp618
	movq	%rax, -80(%rbp)	# tmp618, inner_dest
	jmp	.L2561	#
.L2562:
	.loc 1 12382 0
	movq	-80(%rbp), %rax	# inner_dest, tmp619
	movq	8(%rax), %rax	# inner_dest_33->fld[0].rtx, tmp620
	movq	%rax, -80(%rbp)	# tmp620, inner_dest
.L2561:
	.loc 1 12379 0 discriminator 1
	movq	-80(%rbp), %rax	# inner_dest, tmp621
	movzwl	(%rax), %eax	# inner_dest_33->code, D.29615
	.loc 1 12378 0 discriminator 1
	cmpw	$64, %ax	#, D.29615
	je	.L2562	#,
	.loc 1 12380 0
	movq	-80(%rbp), %rax	# inner_dest, tmp622
	movzwl	(%rax), %eax	# inner_dest_33->code, D.29615
	cmpw	$63, %ax	#, D.29615
	je	.L2562	#,
	.loc 1 12381 0
	movq	-80(%rbp), %rax	# inner_dest, tmp623
	movzwl	(%rax), %eax	# inner_dest_33->code, D.29615
	cmpw	$133, %ax	#, D.29615
	je	.L2562	#,
.L2560:
	.loc 1 12393 0
	cmpq	$0, -56(%rbp)	#, set
	je	.L2563	#,
	.loc 1 12393 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# set, tmp624
	movq	16(%rax), %rax	# set_261->fld[1].rtx, D.29614
	movq	%rax, %rdi	# D.29614,
	call	side_effects_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2563	#,
	.loc 1 12394 0 is_stmt 1
	movq	-112(%rbp), %rax	# note, tmp625
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	-80(%rbp), %rdx	# inner_dest, tmp626
	movq	%rdx, %rsi	# tmp626,
	movq	%rax, %rdi	# D.29614,
	call	rtx_equal_p	#
	testl	%eax, %eax	# D.29621
	je	.L2563	#,
	.loc 1 12407 0
	movq	global_rtl(%rip), %rdx	# global_rtl, D.29614
	movq	-104(%rbp), %rax	# tem, tmp627
	movq	%rdx, 32(%rax)	# D.29614, tem_2->fld[3].rtx
	.loc 1 12409 0
	movq	-104(%rbp), %rax	# tem, tmp628
	movq	56(%rax), %rax	# tem_2->fld[6].rtx, D.29614
	movq	-104(%rbp), %rdx	# tem, tmp629
	movq	-104(%rbp), %rsi	# tem, tmp630
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# D.29614,
	call	distribute_notes	#
	.loc 1 12411 0
	movq	-104(%rbp), %rax	# tem, tmp631
	movq	48(%rax), %rax	# tem_2->fld[5].rtx, D.29614
	movq	%rax, %rdi	# D.29614,
	call	distribute_links	#
	.loc 1 12413 0
	movq	-104(%rbp), %rax	# tem, tmp632
	movw	$37, (%rax)	#, tem_2->code
	.loc 1 12414 0
	movq	-104(%rbp), %rax	# tem, tmp633
	movl	$-99, 40(%rax)	#, tem_2->fld[4].rtint
	.loc 1 12415 0
	movq	-104(%rbp), %rax	# tem, tmp634
	movq	$0, 32(%rax)	#, tem_2->fld[3].rtstr
	jmp	.L2564	#
.L2563:
	.loc 1 12438 0
	movq	-104(%rbp), %rax	# tem, tmp635
	movq	32(%rax), %rdx	# tem_2->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp636
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29621
	je	.L2565	#,
	.loc 1 12441 0
	movq	-104(%rbp), %rax	# tem, tmp637
	movq	%rax, -96(%rbp)	# tmp637, place
	.loc 1 12444 0
	movq	-112(%rbp), %rax	# note, tmp638
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	.loc 1 12443 0
	movl	8(%rax), %edx	# _279->fld[0].rtuint, D.29616
	movq	-104(%rbp), %rax	# tem, tmp639
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp639,
	call	find_regno_note	#
	testq	%rax, %rax	# D.29614
	jne	.L2564	#,
	.loc 1 12446 0
	movq	-104(%rbp), %rax	# tem, tmp640
	movq	56(%rax), %rdx	# tem_2->fld[6].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp641
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rcx	# D.29614,
	movq	%rax, %rdx	# D.29614,
	movl	$10, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-104(%rbp), %rdx	# tem, tmp642
	movq	%rax, 56(%rdx)	# D.29614, tem_2->fld[6].rtx
.LBE125:
	jmp	.L2568	#
.L2565:
.LBB126:
	.loc 1 12451 0
	movq	-112(%rbp), %rax	# note, tmp643
	movb	$10, 2(%rax)	#, note_1->mode
	.loc 1 12456 0
	movq	-112(%rbp), %rax	# note, tmp644
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	.loc 1 12455 0
	movl	8(%rax), %edx	# _285->fld[0].rtuint, D.29616
	movq	-104(%rbp), %rax	# tem, tmp645
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp645,
	call	find_regno_note	#
	testq	%rax, %rax	# D.29614
	jne	.L2567	#,
	.loc 1 12457 0
	movq	-104(%rbp), %rax	# tem, tmp646
	movq	%rax, -96(%rbp)	# tmp646, place
	.loc 1 12458 0
	jmp	.L2553	#
.L2567:
	jmp	.L2553	#
.L2564:
.LBE126:
	jmp	.L2568	#
.L2555:
	.loc 1 12461 0
	movq	-104(%rbp), %rax	# tem, tmp647
	movq	32(%rax), %rdx	# tem_2->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp648
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2569	#,
	.loc 1 12462 0
	movq	-104(%rbp), %rax	# tem, tmp649
	movzwl	(%rax), %eax	# tem_2->code, D.29615
	cmpw	$34, %ax	#, D.29615
	jne	.L2568	#,
	.loc 1 12463 0
	movq	-112(%rbp), %rax	# note, tmp650
	movq	8(%rax), %rdx	# note_1->fld[0].rtx, D.29614
	movq	-104(%rbp), %rax	# tem, tmp651
	movl	$48, %esi	#,
	movq	%rax, %rdi	# tmp651,
	call	find_reg_fusage	#
	testl	%eax, %eax	# D.29621
	je	.L2568	#,
.L2569:
	.loc 1 12465 0
	movq	-104(%rbp), %rax	# tem, tmp652
	movq	%rax, -96(%rbp)	# tmp652, place
	.loc 1 12473 0
	cmpq	$0, -160(%rbp)	#, i2
	je	.L2570	#,
	.loc 1 12473 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# place, tmp653
	movl	8(%rax), %edx	# place_295->fld[0].rtint, D.29621
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1612
	cmpl	%eax, %edx	# max_uid_cuid.1612, D.29621
	jg	.L2570	#,
	.loc 1 12474 0 is_stmt 1
	movq	-96(%rbp), %rax	# place, tmp654
	movl	8(%rax), %edx	# place_295->fld[0].rtint, D.29621
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1614
	cmpl	%eax, %edx	# max_uid_cuid.1614, D.29621
	jle	.L2571	#,
	.loc 1 12474 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# place, tmp655
	movq	%rax, %rdi	# tmp655,
	call	insn_cuid	#
	movl	%eax, %ebx	#, iftmp.1613
	jmp	.L2572	#
.L2571:
	.loc 1 12474 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1615
	movq	-96(%rbp), %rax	# place, tmp656
	movl	8(%rax), %eax	# place_295->fld[0].rtint, D.29621
	cltq
	salq	$2, %rax	#, D.29619
	addq	%rdx, %rax	# uid_cuid.1615, D.29623
	movl	(%rax), %ebx	# *_305, iftmp.1613
.L2572:
	.loc 1 12474 0 discriminator 3
	movq	-160(%rbp), %rax	# i2, tmp657
	movl	8(%rax), %edx	# i2_94(D)->fld[0].rtint, D.29621
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1617
	cmpl	%eax, %edx	# max_uid_cuid.1617, D.29621
	jle	.L2573	#,
	.loc 1 12474 0 discriminator 1
	movq	-160(%rbp), %rax	# i2, tmp658
	movq	%rax, %rdi	# tmp658,
	call	insn_cuid	#
	jmp	.L2574	#
.L2573:
	.loc 1 12474 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1618
	movq	-160(%rbp), %rax	# i2, tmp659
	movl	8(%rax), %eax	# i2_94(D)->fld[0].rtint, D.29621
	cltq
	salq	$2, %rax	#, D.29619
	addq	%rdx, %rax	# uid_cuid.1618, D.29623
	movl	(%rax), %eax	# *_314, iftmp.1616
.L2574:
	.loc 1 12474 0 discriminator 3
	cmpl	%eax, %ebx	# iftmp.1616, iftmp.1613
	jle	.L2570	#,
	.loc 1 12475 0 is_stmt 1
	cmpq	$0, -144(%rbp)	#, from_insn
	je	.L2570	#,
	.loc 1 12476 0
	movq	-144(%rbp), %rax	# from_insn, tmp660
	movl	8(%rax), %edx	# from_insn_113(D)->fld[0].rtint, D.29621
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1620
	cmpl	%eax, %edx	# max_uid_cuid.1620, D.29621
	jle	.L2575	#,
	.loc 1 12476 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rax	# from_insn, tmp661
	movq	%rax, %rdi	# tmp661,
	call	insn_cuid	#
	movl	%eax, %ebx	#, iftmp.1619
	jmp	.L2576	#
.L2575:
	.loc 1 12476 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1621
	movq	-144(%rbp), %rax	# from_insn, tmp662
	movl	8(%rax), %eax	# from_insn_113(D)->fld[0].rtint, D.29621
	cltq
	salq	$2, %rax	#, D.29619
	addq	%rdx, %rax	# uid_cuid.1621, D.29623
	movl	(%rax), %ebx	# *_323, iftmp.1619
.L2576:
	.loc 1 12476 0 discriminator 3
	movq	-160(%rbp), %rax	# i2, tmp663
	movl	8(%rax), %edx	# i2_94(D)->fld[0].rtint, D.29621
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1623
	cmpl	%eax, %edx	# max_uid_cuid.1623, D.29621
	jle	.L2577	#,
	.loc 1 12476 0 discriminator 1
	movq	-160(%rbp), %rax	# i2, tmp664
	movq	%rax, %rdi	# tmp664,
	call	insn_cuid	#
	jmp	.L2578	#
.L2577:
	.loc 1 12476 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1624
	movq	-160(%rbp), %rax	# i2, tmp665
	movl	8(%rax), %eax	# i2_94(D)->fld[0].rtint, D.29621
	cltq
	salq	$2, %rax	#, D.29619
	addq	%rdx, %rax	# uid_cuid.1624, D.29623
	movl	(%rax), %eax	# *_332, iftmp.1622
.L2578:
	.loc 1 12476 0 discriminator 3
	cmpl	%eax, %ebx	# iftmp.1622, iftmp.1619
	jle	.L2570	#,
	.loc 1 12477 0 is_stmt 1
	movq	-160(%rbp), %rax	# i2, tmp666
	movq	32(%rax), %rdx	# i2_94(D)->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp667
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29621
	je	.L2570	#,
.LBB127:
	.loc 1 12479 0
	movq	-96(%rbp), %rax	# place, tmp668
	movq	48(%rax), %rax	# place_295->fld[5].rtx, tmp669
	movq	%rax, -48(%rbp)	# tmp669, links
	.loc 1 12480 0
	movq	-96(%rbp), %rax	# place, tmp670
	movq	$0, 48(%rax)	#, place_295->fld[5].rtx
	.loc 1 12481 0
	movq	-48(%rbp), %rax	# links, tmp671
	movq	%rax, %rdi	# tmp671,
	call	distribute_links	#
.LBE127:
	.loc 1 12483 0
	jmp	.L2553	#
.L2570:
	jmp	.L2553	#
.L2568:
	.loc 1 12486 0
	movq	-64(%rbp), %rax	# bb, tmp672
	movq	(%rax), %rax	# bb_242->head, D.29614
	cmpq	-104(%rbp), %rax	# tem, D.29614
	jne	.L2554	#,
	.loc 1 12487 0
	jmp	.L2553	#
.L2554:
	.loc 1 12357 0
	movq	-104(%rbp), %rax	# tem, tmp673
	movq	16(%rax), %rax	# tem_2->fld[1].rtx, tmp674
	movq	%rax, -104(%rbp)	# tmp674, tem
.L2550:
	.loc 1 12357 0 is_stmt 0 discriminator 1
	cmpq	$0, -96(%rbp)	#, place
	je	.L2579	#,
.L2553:
	.loc 1 12495 0 is_stmt 1
	movq	-112(%rbp), %rax	# note, tmp675
	movzbl	2(%rax), %eax	# note_1->mode, D.29620
	cmpb	$1, %al	#, D.29620
	jne	.L2549	#,
	.loc 1 12495 0 is_stmt 0 discriminator 1
	cmpq	$0, -96(%rbp)	#, place
	jne	.L2549	#,
	.loc 1 12496 0 is_stmt 1
	movq	-112(%rbp), %rax	# note, tmp676
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movl	8(%rax), %eax	# _341->fld[0].rtuint, D.29616
	movl	%eax, %edx	# D.29616, D.29621
	movq	-64(%rbp), %rax	# bb, tmp677
	movq	64(%rax), %rax	# bb_242->global_live_at_start, D.29624
	movl	%edx, %esi	# D.29621,
	movq	%rax, %rdi	# D.29624,
	call	bitmap_bit_p	#
	testl	%eax, %eax	# D.29621
	je	.L2549	#,
	.loc 1 12499 0
	movq	refresh_blocks(%rip), %rdx	# refresh_blocks, refresh_blocks.1625
	movl	this_basic_block(%rip), %eax	# this_basic_block, this_basic_block.1626
	shrl	$6, %eax	#, D.29616
	movq	refresh_blocks(%rip), %rcx	# refresh_blocks, refresh_blocks.1628
	movl	%eax, %esi	# D.29616, tmp678
	addq	$2, %rsi	#, tmp679
	movq	(%rcx,%rsi,8), %rsi	# refresh_blocks.1628_350->elms, D.29619
	movl	this_basic_block(%rip), %ecx	# this_basic_block, this_basic_block.1629
	andl	$63, %ecx	#, D.29621
	movl	$1, %edi	#, tmp680
	salq	%cl, %rdi	# D.29621, D.29619
	movq	%rdi, %rcx	# D.29619, D.29619
	orq	%rsi, %rcx	# D.29619, D.29619
	movl	%eax, %eax	# D.29616, tmp681
	addq	$2, %rax	#, tmp682
	movq	%rcx, (%rdx,%rax,8)	# D.29619, refresh_blocks.1625_346->elms
	.loc 1 12500 0
	movl	$1, need_refresh(%rip)	#, need_refresh
.L2549:
.LBE124:
	.loc 1 12510 0
	cmpq	$0, -96(%rbp)	#, place
	je	.L2580	#,
	.loc 1 12510 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# note, tmp683
	movzbl	2(%rax), %eax	# note_1->mode, D.29620
	cmpb	$1, %al	#, D.29620
	jne	.L2580	#,
.LBB128:
	.loc 1 12512 0 is_stmt 1
	movq	-112(%rbp), %rax	# note, tmp684
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movl	8(%rax), %eax	# _357->fld[0].rtuint, tmp685
	movl	%eax, -120(%rbp)	# tmp685, regno
	.loc 1 12517 0
	movq	-96(%rbp), %rax	# place, tmp686
	movq	%rax, %rdi	# tmp686,
	call	noop_move_p	#
	testl	%eax, %eax	# D.29621
	je	.L2581	#,
	.loc 1 12519 0
	movq	refresh_blocks(%rip), %rdx	# refresh_blocks, refresh_blocks.1630
	movl	this_basic_block(%rip), %eax	# this_basic_block, this_basic_block.1631
	shrl	$6, %eax	#, D.29616
	movq	refresh_blocks(%rip), %rcx	# refresh_blocks, refresh_blocks.1633
	movl	%eax, %esi	# D.29616, tmp687
	addq	$2, %rsi	#, tmp688
	movq	(%rcx,%rsi,8), %rsi	# refresh_blocks.1633_364->elms, D.29619
	movl	this_basic_block(%rip), %ecx	# this_basic_block, this_basic_block.1634
	andl	$63, %ecx	#, D.29621
	movl	$1, %edi	#, tmp689
	salq	%cl, %rdi	# D.29621, D.29619
	movq	%rdi, %rcx	# D.29619, D.29619
	orq	%rsi, %rcx	# D.29619, D.29619
	movl	%eax, %eax	# D.29616, tmp690
	addq	$2, %rax	#, tmp691
	movq	%rcx, (%rdx,%rax,8)	# D.29619, refresh_blocks.1630_360->elms
	.loc 1 12520 0
	movl	$1, need_refresh(%rip)	#, need_refresh
.L2581:
	.loc 1 12523 0
	movq	-112(%rbp), %rax	# note, tmp692
	movq	8(%rax), %rdx	# note_1->fld[0].rtx, D.29614
	movq	-96(%rbp), %rax	# place, tmp693
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# tmp693,
	call	dead_or_set_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2582	#,
	.loc 1 12524 0
	movq	-96(%rbp), %rax	# place, tmp694
	movq	32(%rax), %rdx	# place_25->fld[3].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp695
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# D.29614,
	call	reg_bitfield_target_p	#
	testl	%eax, %eax	# D.29621
	je	.L2583	#,
.L2582:
	.loc 1 12529 0
	movq	reg_last_death(%rip), %rax	# reg_last_death, reg_last_death.1635
	movl	-120(%rbp), %edx	# regno, D.29619
	salq	$3, %rdx	#, D.29619
	addq	%rdx, %rax	# D.29619, D.29618
	movq	(%rax), %rax	# *_382, D.29614
	cmpq	-96(%rbp), %rax	# place, D.29614
	je	.L2584	#,
	.loc 1 12530 0
	movq	reg_last_death(%rip), %rax	# reg_last_death, reg_last_death.1636
	movl	-120(%rbp), %edx	# regno, D.29619
	salq	$3, %rdx	#, D.29619
	addq	%rdx, %rax	# D.29619, D.29618
	movq	$0, (%rax)	#, *_387
.L2584:
	.loc 1 12531 0
	movq	$0, -96(%rbp)	#, place
	jmp	.L2585	#
.L2583:
	.loc 1 12534 0
	movq	reg_last_death(%rip), %rax	# reg_last_death, reg_last_death.1637
	movl	-120(%rbp), %edx	# regno, D.29619
	salq	$3, %rdx	#, D.29619
	addq	%rax, %rdx	# reg_last_death.1637, D.29618
	movq	-96(%rbp), %rax	# place, tmp696
	movq	%rax, (%rdx)	# tmp696, *_378
.L2585:
	.loc 1 12545 0
	cmpq	$0, -96(%rbp)	#, place
	je	.L2580	#,
	.loc 1 12545 0 is_stmt 0 discriminator 1
	cmpl	$52, -120(%rbp)	#, regno
	ja	.L2580	#,
	.loc 1 12546 0 is_stmt 1
	cmpl	$7, -120(%rbp)	#, regno
	jbe	.L2586	#,
	.loc 1 12546 0 is_stmt 0 discriminator 1
	cmpl	$15, -120(%rbp)	#, regno
	jbe	.L2587	#,
.L2586:
	.loc 1 12546 0 discriminator 2
	cmpl	$20, -120(%rbp)	#, regno
	jbe	.L2588	#,
	.loc 1 12546 0 discriminator 1
	cmpl	$28, -120(%rbp)	#, regno
	jbe	.L2587	#,
.L2588:
	.loc 1 12546 0 discriminator 2
	cmpl	$44, -120(%rbp)	#, regno
	jbe	.L2589	#,
	.loc 1 12546 0 discriminator 1
	cmpl	$52, -120(%rbp)	#, regno
	jbe	.L2587	#,
.L2589:
	.loc 1 12546 0 discriminator 2
	cmpl	$28, -120(%rbp)	#, regno
	jbe	.L2590	#,
	.loc 1 12546 0 discriminator 1
	cmpl	$36, -120(%rbp)	#, regno
	ja	.L2590	#,
.L2587:
	movq	-112(%rbp), %rax	# note, tmp697
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzbl	2(%rax), %eax	# _412->mode, D.29620
	movzbl	%al, %eax	# D.29620, D.29621
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29625
	cmpl	$5, %eax	#, D.29625
	je	.L2591	#,
	.loc 1 12546 0 discriminator 2
	movq	-112(%rbp), %rax	# note, tmp699
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzbl	2(%rax), %eax	# _416->mode, D.29620
	movzbl	%al, %eax	# D.29620, D.29621
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29625
	cmpl	$6, %eax	#, D.29625
	jne	.L2592	#,
.L2591:
	.loc 1 12546 0 discriminator 1
	movl	$1, %eax	#, iftmp.1639
	jmp	.L2593	#
.L2592:
	.loc 1 12546 0 discriminator 3
	movl	$0, %eax	#, iftmp.1639
.L2593:
	.loc 1 12546 0 discriminator 4
	andl	$1, %eax	#, iftmp.1638
	jmp	.L2594	#
.L2590:
	.loc 1 12546 0 discriminator 2
	movq	-112(%rbp), %rax	# note, tmp701
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzbl	2(%rax), %eax	# _389->mode, D.29620
	cmpb	$18, %al	#, D.29620
	je	.L2595	#,
	.loc 1 12546 0 discriminator 5
	movq	-112(%rbp), %rax	# note, tmp702
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzbl	2(%rax), %eax	# _391->mode, D.29620
	cmpb	$24, %al	#, D.29620
	je	.L2595	#,
	.loc 1 12546 0 discriminator 6
	movq	-112(%rbp), %rax	# note, tmp703
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzbl	2(%rax), %eax	# _393->mode, D.29620
	movzbl	%al, %eax	# D.29620, D.29621
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29620
	movzbl	%al, %edx	# D.29620, D.29621
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1642
	andl	$33554432, %eax	#, D.29621
	testl	%eax, %eax	# D.29621
	je	.L2596	#,
	.loc 1 12546 0 discriminator 1
	movl	$8, %eax	#, iftmp.1641
	jmp	.L2597	#
.L2596:
	.loc 1 12546 0 discriminator 2
	movl	$4, %eax	#, iftmp.1641
.L2597:
	.loc 1 12546 0 discriminator 3
	addl	%edx, %eax	# D.29621, D.29621
	subl	$1, %eax	#, D.29621
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1644
	andl	$33554432, %edx	#, D.29621
	testl	%edx, %edx	# D.29621
	je	.L2598	#,
	.loc 1 12546 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1643
	jmp	.L2599	#
.L2598:
	.loc 1 12546 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1643
.L2599:
	.loc 1 12546 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1643
	cmpl	$1, %eax	#, D.29621
	jle	.L2600	#,
.L2595:
	.loc 1 12546 0 discriminator 4
	movl	$1, %eax	#, iftmp.1640
	jmp	.L2601	#
.L2600:
	.loc 1 12546 0 discriminator 7
	movl	$0, %eax	#, iftmp.1640
.L2601:
	.loc 1 12546 0 discriminator 8
	andl	$1, %eax	#, iftmp.1638
.L2594:
	.loc 1 12546 0 discriminator 3
	testb	%al, %al	# iftmp.1638
	je	.L2580	#,
.LBB129:
	.loc 1 12549 0 is_stmt 1
	cmpl	$7, -120(%rbp)	#, regno
	jbe	.L2602	#,
	.loc 1 12549 0 is_stmt 0 discriminator 1
	cmpl	$15, -120(%rbp)	#, regno
	jbe	.L2603	#,
.L2602:
	.loc 1 12549 0 discriminator 2
	cmpl	$20, -120(%rbp)	#, regno
	jbe	.L2604	#,
	.loc 1 12549 0 discriminator 1
	cmpl	$28, -120(%rbp)	#, regno
	jbe	.L2603	#,
.L2604:
	.loc 1 12549 0 discriminator 2
	cmpl	$44, -120(%rbp)	#, regno
	jbe	.L2605	#,
	.loc 1 12549 0 discriminator 1
	cmpl	$52, -120(%rbp)	#, regno
	jbe	.L2603	#,
.L2605:
	.loc 1 12549 0 discriminator 2
	cmpl	$28, -120(%rbp)	#, regno
	jbe	.L2606	#,
	.loc 1 12549 0 discriminator 1
	cmpl	$36, -120(%rbp)	#, regno
	ja	.L2606	#,
.L2603:
	movq	-112(%rbp), %rax	# note, tmp707
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzbl	2(%rax), %eax	# _456->mode, D.29620
	movzbl	%al, %eax	# D.29620, D.29621
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29625
	cmpl	$5, %eax	#, D.29625
	je	.L2607	#,
	.loc 1 12549 0 discriminator 4
	movq	-112(%rbp), %rax	# note, tmp709
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzbl	2(%rax), %eax	# _460->mode, D.29620
	movzbl	%al, %eax	# D.29620, D.29621
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29625
	cmpl	$6, %eax	#, D.29625
	jne	.L2608	#,
.L2607:
	.loc 1 12549 0 discriminator 3
	movl	$2, %eax	#, iftmp.1646
	jmp	.L2610	#
.L2608:
	.loc 1 12549 0 discriminator 1
	movl	$1, %eax	#, iftmp.1646
	jmp	.L2610	#
.L2606:
	.loc 1 12549 0 discriminator 2
	movq	-112(%rbp), %rax	# note, tmp711
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzbl	2(%rax), %eax	# _423->mode, D.29620
	cmpb	$18, %al	#, D.29620
	jne	.L2611	#,
	.loc 1 12549 0 discriminator 6
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1649
	andl	$33554432, %eax	#, D.29621
	testl	%eax, %eax	# D.29621
	je	.L2612	#,
	.loc 1 12549 0 discriminator 8
	movl	$2, %eax	#, iftmp.1648
	jmp	.L2610	#
.L2612:
	.loc 1 12549 0 discriminator 9
	movl	$3, %eax	#, iftmp.1648
	jmp	.L2610	#
.L2611:
	.loc 1 12549 0 discriminator 7
	movq	-112(%rbp), %rax	# note, tmp712
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzbl	2(%rax), %eax	# _430->mode, D.29620
	cmpb	$24, %al	#, D.29620
	jne	.L2615	#,
	.loc 1 12549 0 discriminator 10
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1652
	andl	$33554432, %eax	#, D.29621
	testl	%eax, %eax	# D.29621
	je	.L2616	#,
	.loc 1 12549 0 discriminator 12
	movl	$4, %eax	#, iftmp.1651
	jmp	.L2610	#
.L2616:
	.loc 1 12549 0 discriminator 13
	movl	$6, %eax	#, iftmp.1651
	jmp	.L2610	#
.L2615:
	.loc 1 12549 0 discriminator 11
	movq	-112(%rbp), %rax	# note, tmp713
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzbl	2(%rax), %eax	# _437->mode, D.29620
	movzbl	%al, %eax	# D.29620, D.29621
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29620
	movzbl	%al, %edx	# D.29620, D.29621
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1654
	andl	$33554432, %eax	#, D.29621
	testl	%eax, %eax	# D.29621
	je	.L2619	#,
	.loc 1 12549 0 discriminator 1
	movl	$8, %eax	#, iftmp.1653
	jmp	.L2620	#
.L2619:
	.loc 1 12549 0 discriminator 2
	movl	$4, %eax	#, iftmp.1653
.L2620:
	.loc 1 12549 0 discriminator 3
	addl	%edx, %eax	# D.29621, D.29621
	subl	$1, %eax	#, D.29621
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1656
	andl	$33554432, %edx	#, D.29621
	testl	%edx, %edx	# D.29621
	je	.L2621	#,
	.loc 1 12549 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1655
	jmp	.L2622	#
.L2621:
	.loc 1 12549 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1655
.L2622:
	.loc 1 12549 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1655
.L2610:
	.loc 1 12548 0 is_stmt 1
	movl	-120(%rbp), %edx	# regno, tmp720
	addl	%edx, %eax	# tmp720, tmp719
	movl	%eax, -116(%rbp)	# tmp719, endregno
	.loc 1 12551 0
	movl	$1, -128(%rbp)	#, all_used
	.loc 1 12554 0
	movl	-120(%rbp), %eax	# regno, tmp721
	movl	%eax, -124(%rbp)	# tmp721, i
	jmp	.L2623	#
.L2627:
	.loc 1 12555 0
	movq	-96(%rbp), %rax	# place, tmp722
	movq	32(%rax), %rdx	# place_26->fld[3].rtx, D.29614
	movl	-124(%rbp), %eax	# i, tmp723
	leal	1(%rax), %esi	#, D.29616
	movl	-124(%rbp), %eax	# i, tmp724
	movl	$0, %ecx	#,
	movl	%eax, %edi	# tmp724,
	call	refers_to_regno_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2624	#,
	.loc 1 12556 0
	movl	-124(%rbp), %edx	# i, tmp725
	movq	-96(%rbp), %rax	# place, tmp726
	movl	$48, %esi	#,
	movq	%rax, %rdi	# tmp726,
	call	find_regno_fusage	#
	testl	%eax, %eax	# D.29621
	je	.L2625	#,
.L2624:
	.loc 1 12557 0
	movl	-124(%rbp), %edx	# i, tmp727
	movq	-96(%rbp), %rax	# place, tmp728
	movl	%edx, %esi	# tmp727,
	movq	%rax, %rdi	# tmp728,
	call	dead_or_set_regno_p	#
	testl	%eax, %eax	# D.29621
	je	.L2626	#,
.L2625:
	.loc 1 12558 0
	movl	$0, -128(%rbp)	#, all_used
.L2626:
	.loc 1 12554 0
	addl	$1, -124(%rbp)	#, i
.L2623:
	.loc 1 12554 0 is_stmt 0 discriminator 1
	movl	-124(%rbp), %eax	# i, tmp729
	cmpl	-116(%rbp), %eax	# endregno, tmp729
	jb	.L2627	#,
	.loc 1 12560 0 is_stmt 1
	cmpl	$0, -128(%rbp)	#, all_used
	jne	.L2580	#,
	.loc 1 12565 0
	movl	-120(%rbp), %eax	# regno, tmp730
	movl	%eax, -124(%rbp)	# tmp730, i
	jmp	.L2628	#
.L2657:
.LBB130:
	.loc 1 12568 0
	movl	-124(%rbp), %edx	# i, i.1657
	movl	-124(%rbp), %eax	# i, tmp731
	movl	reg_raw_mode(,%rax,4), %eax	# reg_raw_mode, D.29626
	movl	%edx, %esi	# i.1657,
	movl	%eax, %edi	# D.29626,
	call	gen_rtx_REG	#
	movq	%rax, -40(%rbp)	# tmp732, piece
	.loc 1 12569 0
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.1658
	movl	this_basic_block(%rip), %edx	# this_basic_block, this_basic_block.1659
	movslq	%edx, %rdx	# this_basic_block.1659, tmp733
	addq	$4, %rdx	#, tmp734
	movq	(%rax,%rdx,8), %rax	# basic_block_info.1658_481->data.bb, tmp735
	movq	%rax, -32(%rbp)	# tmp735, bb
	.loc 1 12571 0
	movq	-40(%rbp), %rdx	# piece, tmp736
	movq	-96(%rbp), %rax	# place, tmp737
	movq	%rdx, %rsi	# tmp736,
	movq	%rax, %rdi	# tmp737,
	call	dead_or_set_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2629	#,
	.loc 1 12572 0
	movq	-96(%rbp), %rax	# place, tmp738
	movq	32(%rax), %rdx	# place_26->fld[3].rtx, D.29614
	movq	-40(%rbp), %rax	# piece, tmp739
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# tmp739,
	call	reg_bitfield_target_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2629	#,
.LBB131:
	.loc 1 12575 0
	movq	-40(%rbp), %rax	# piece, tmp740
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# tmp740,
	movl	$1, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	%rax, -24(%rbp)	# tmp741, new_note
	.loc 1 12578 0
	movq	-96(%rbp), %rdx	# place, tmp742
	movq	-96(%rbp), %rsi	# place, tmp743
	movq	-24(%rbp), %rax	# new_note, tmp744
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp744,
	call	distribute_notes	#
.LBE131:
	.loc 1 12574 0
	jmp	.L2630	#
.L2629:
	.loc 1 12581 0
	movq	-96(%rbp), %rax	# place, tmp745
	movq	32(%rax), %rdx	# place_26->fld[3].rtx, D.29614
	movl	-124(%rbp), %eax	# i, tmp746
	leal	1(%rax), %esi	#, D.29616
	movl	-124(%rbp), %eax	# i, tmp747
	movl	$0, %ecx	#,
	movl	%eax, %edi	# tmp747,
	call	refers_to_regno_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2630	#,
	.loc 1 12583 0
	movl	-124(%rbp), %edx	# i, tmp748
	movq	-96(%rbp), %rax	# place, tmp749
	movl	$48, %esi	#,
	movq	%rax, %rdi	# tmp749,
	call	find_regno_fusage	#
	testl	%eax, %eax	# D.29621
	jne	.L2630	#,
	.loc 1 12584 0
	movq	-96(%rbp), %rax	# place, tmp750
	movq	16(%rax), %rax	# place_26->fld[1].rtx, tmp751
	movq	%rax, -104(%rbp)	# tmp751, tem
.L2635:
	.loc 1 12587 0
	movq	-104(%rbp), %rax	# tem, tmp752
	movzwl	(%rax), %eax	# tem_3->code, D.29615
	movzwl	%ax, %eax	# D.29615, D.29621
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29622
	cmpb	$105, %al	#, D.29622
	je	.L2631	#,
	.loc 1 12589 0
	movq	-32(%rbp), %rax	# bb, tmp754
	movq	(%rax), %rax	# bb_483->head, D.29614
	cmpq	-104(%rbp), %rax	# tem, D.29614
	jne	.L2632	#,
	.loc 1 12591 0
	movq	refresh_blocks(%rip), %rdx	# refresh_blocks, refresh_blocks.1660
	movl	this_basic_block(%rip), %eax	# this_basic_block, this_basic_block.1661
	shrl	$6, %eax	#, D.29616
	movq	refresh_blocks(%rip), %rcx	# refresh_blocks, refresh_blocks.1663
	movl	%eax, %esi	# D.29616, tmp755
	addq	$2, %rsi	#, tmp756
	movq	(%rcx,%rsi,8), %rsi	# refresh_blocks.1663_501->elms, D.29619
	movl	this_basic_block(%rip), %ecx	# this_basic_block, this_basic_block.1664
	andl	$63, %ecx	#, D.29621
	movl	$1, %edi	#, tmp757
	salq	%cl, %rdi	# D.29621, D.29619
	movq	%rdi, %rcx	# D.29619, D.29619
	orq	%rsi, %rcx	# D.29619, D.29619
	movl	%eax, %eax	# D.29616, tmp758
	addq	$2, %rax	#, tmp759
	movq	%rcx, (%rdx,%rax,8)	# D.29619, refresh_blocks.1660_497->elms
	.loc 1 12593 0
	movl	$1, need_refresh(%rip)	#, need_refresh
	.loc 1 12594 0
	jmp	.L2630	#
.L2632:
	.loc 1 12596 0
	jmp	.L2633	#
.L2631:
	.loc 1 12598 0
	movq	-40(%rbp), %rdx	# piece, tmp760
	movq	-104(%rbp), %rax	# tem, tmp761
	movq	%rdx, %rsi	# tmp760,
	movq	%rax, %rdi	# tmp761,
	call	dead_or_set_p	#
	testl	%eax, %eax	# D.29621
	jne	.L2634	#,
	.loc 1 12599 0
	movq	-104(%rbp), %rax	# tem, tmp762
	movq	32(%rax), %rdx	# tem_3->fld[3].rtx, D.29614
	movq	-40(%rbp), %rax	# piece, tmp763
	movq	%rdx, %rsi	# D.29614,
	movq	%rax, %rdi	# tmp763,
	call	reg_bitfield_target_p	#
	testl	%eax, %eax	# D.29621
	je	.L2633	#,
.L2634:
	.loc 1 12603 0
	movq	-104(%rbp), %rax	# tem, tmp764
	movq	56(%rax), %rdx	# tem_3->fld[6].rtx, D.29614
	movq	-40(%rbp), %rax	# piece, tmp765
	movq	%rdx, %rcx	# D.29614,
	movq	%rax, %rdx	# tmp765,
	movl	$10, %esi	#,
	movl	$3, %edi	#,
	call	gen_rtx_fmt_ee	#
	movq	-104(%rbp), %rdx	# tem, tmp766
	movq	%rax, 56(%rdx)	# D.29614, tem_3->fld[6].rtx
	.loc 1 12605 0
	jmp	.L2630	#
.L2633:
	.loc 1 12585 0
	movq	-104(%rbp), %rax	# tem, tmp767
	movq	16(%rax), %rax	# tem_3->fld[1].rtx, tmp768
	movq	%rax, -104(%rbp)	# tmp768, tem
	.loc 1 12607 0
	jmp	.L2635	#
.L2630:
.LBE130:
	.loc 1 12566 0
	cmpl	$7, -124(%rbp)	#, i
	jbe	.L2636	#,
	.loc 1 12566 0 is_stmt 0 discriminator 1
	cmpl	$15, -124(%rbp)	#, i
	jbe	.L2637	#,
.L2636:
	.loc 1 12566 0 discriminator 2
	cmpl	$20, -124(%rbp)	#, i
	jbe	.L2638	#,
	.loc 1 12566 0 discriminator 1
	cmpl	$28, -124(%rbp)	#, i
	jbe	.L2637	#,
.L2638:
	.loc 1 12566 0 discriminator 2
	cmpl	$44, -124(%rbp)	#, i
	jbe	.L2639	#,
	.loc 1 12566 0 discriminator 1
	cmpl	$52, -124(%rbp)	#, i
	jbe	.L2637	#,
.L2639:
	.loc 1 12566 0 discriminator 2
	cmpl	$28, -124(%rbp)	#, i
	jbe	.L2640	#,
	.loc 1 12566 0 discriminator 1
	cmpl	$36, -124(%rbp)	#, i
	ja	.L2640	#,
.L2637:
	movl	-124(%rbp), %eax	# i, tmp769
	movl	reg_raw_mode(,%rax,4), %eax	# reg_raw_mode, D.29626
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29625
	cmpl	$5, %eax	#, D.29625
	je	.L2641	#,
	.loc 1 12566 0 discriminator 4
	movl	-124(%rbp), %eax	# i, tmp771
	movl	reg_raw_mode(,%rax,4), %eax	# reg_raw_mode, D.29626
	cltq
	movl	mode_class(,%rax,4), %eax	# mode_class, D.29625
	cmpl	$6, %eax	#, D.29625
	jne	.L2642	#,
.L2641:
	.loc 1 12566 0 discriminator 3
	movl	$2, %eax	#, iftmp.1666
	jmp	.L2644	#
.L2642:
	.loc 1 12566 0 discriminator 1
	movl	$1, %eax	#, iftmp.1666
	jmp	.L2644	#
.L2640:
	.loc 1 12566 0 discriminator 2
	movl	-124(%rbp), %eax	# i, tmp773
	movl	reg_raw_mode(,%rax,4), %eax	# reg_raw_mode, D.29626
	cmpl	$18, %eax	#, D.29626
	jne	.L2645	#,
	.loc 1 12566 0 discriminator 7
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1669
	andl	$33554432, %eax	#, D.29621
	testl	%eax, %eax	# D.29621
	je	.L2646	#,
	.loc 1 12566 0 discriminator 9
	movl	$2, %eax	#, iftmp.1668
	jmp	.L2644	#
.L2646:
	.loc 1 12566 0 discriminator 10
	movl	$3, %eax	#, iftmp.1668
	jmp	.L2644	#
.L2645:
	.loc 1 12566 0 discriminator 8
	movl	-124(%rbp), %eax	# i, tmp774
	movl	reg_raw_mode(,%rax,4), %eax	# reg_raw_mode, D.29626
	cmpl	$24, %eax	#, D.29626
	jne	.L2649	#,
	.loc 1 12566 0 discriminator 11
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1672
	andl	$33554432, %eax	#, D.29621
	testl	%eax, %eax	# D.29621
	je	.L2650	#,
	.loc 1 12566 0 discriminator 13
	movl	$4, %eax	#, iftmp.1671
	jmp	.L2644	#
.L2650:
	.loc 1 12566 0 discriminator 14
	movl	$6, %eax	#, iftmp.1671
	jmp	.L2644	#
.L2649:
	.loc 1 12566 0 discriminator 12
	movl	-124(%rbp), %eax	# i, tmp775
	movl	reg_raw_mode(,%rax,4), %eax	# reg_raw_mode, D.29626
	cltq
	movzbl	mode_size(%rax), %eax	# mode_size, D.29620
	movzbl	%al, %edx	# D.29620, D.29621
	movl	target_flags(%rip), %eax	# target_flags, target_flags.1674
	andl	$33554432, %eax	#, D.29621
	testl	%eax, %eax	# D.29621
	je	.L2653	#,
	.loc 1 12566 0 discriminator 1
	movl	$8, %eax	#, iftmp.1673
	jmp	.L2654	#
.L2653:
	.loc 1 12566 0 discriminator 2
	movl	$4, %eax	#, iftmp.1673
.L2654:
	.loc 1 12566 0 discriminator 3
	addl	%edx, %eax	# D.29621, D.29621
	subl	$1, %eax	#, D.29621
	movl	target_flags(%rip), %edx	# target_flags, target_flags.1676
	andl	$33554432, %edx	#, D.29621
	testl	%edx, %edx	# D.29621
	je	.L2655	#,
	.loc 1 12566 0 discriminator 1
	movl	$8, %ebx	#, iftmp.1675
	jmp	.L2656	#
.L2655:
	.loc 1 12566 0 discriminator 2
	movl	$4, %ebx	#, iftmp.1675
.L2656:
	.loc 1 12566 0 discriminator 3
	cltd
	idivl	%ebx	# iftmp.1675
.L2644:
	.loc 1 12566 0 discriminator 6
	addl	%eax, -124(%rbp)	# iftmp.1665, i
.L2628:
	.loc 1 12565 0 is_stmt 1 discriminator 1
	movl	-124(%rbp), %eax	# i, tmp779
	cmpl	-116(%rbp), %eax	# endregno, tmp779
	jb	.L2657	#,
	.loc 1 12611 0
	movq	$0, -96(%rbp)	#, place
.LBE129:
.LBE128:
	.loc 1 12615 0
	jmp	.L2503	#
.L2580:
	jmp	.L2503	#
.L2488:
	.loc 1 12620 0
	movl	$__FUNCTION__.12829, %edx	#,
	movl	$12620, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L2665:
	.loc 1 12286 0
	nop
.L2503:
	.loc 1 12623 0
	cmpq	$0, -96(%rbp)	#, place
	je	.L2658	#,
	.loc 1 12625 0
	movq	-96(%rbp), %rax	# place, tmp780
	movq	56(%rax), %rdx	# place_28->fld[6].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp781
	movq	%rdx, 16(%rax)	# D.29614, note_1->fld[1].rtx
	.loc 1 12626 0
	movq	-96(%rbp), %rax	# place, tmp782
	movq	-112(%rbp), %rdx	# note, tmp783
	movq	%rdx, 56(%rax)	# tmp783, place_28->fld[6].rtx
	jmp	.L2659	#
.L2658:
	.loc 1 12628 0
	movq	-112(%rbp), %rax	# note, tmp784
	movzbl	2(%rax), %eax	# note_1->mode, D.29620
	cmpb	$1, %al	#, D.29620
	je	.L2660	#,
	.loc 1 12629 0
	movq	-112(%rbp), %rax	# note, tmp785
	movzbl	2(%rax), %eax	# note_1->mode, D.29620
	cmpb	$10, %al	#, D.29620
	jne	.L2659	#,
.L2660:
	.loc 1 12630 0
	movq	-112(%rbp), %rax	# note, tmp786
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _557->code, D.29615
	cmpw	$61, %ax	#, D.29615
	jne	.L2659	#,
	.loc 1 12631 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.1677
	movq	-112(%rbp), %rdx	# note, tmp787
	movq	8(%rdx), %rdx	# note_1->fld[0].rtx, D.29614
	movl	8(%rdx), %edx	# _560->fld[0].rtuint, D.29616
	movl	%edx, %edx	# D.29616, tmp788
	addq	$4, %rdx	#, tmp789
	movq	(%rax,%rdx,8), %rax	# reg_n_info.1677_559->data.reg, D.29627
	movl	24(%rax), %edx	# _562->deaths, D.29621
	subl	$1, %edx	#, D.29621
	movl	%edx, 24(%rax)	# D.29621, _562->deaths
.L2659:
	.loc 1 12633 0
	cmpq	$0, -88(%rbp)	#, place2
	je	.L2661	#,
	.loc 1 12635 0
	movq	-112(%rbp), %rax	# note, tmp790
	movzbl	2(%rax), %eax	# note_1->mode, D.29620
	cmpb	$1, %al	#, D.29620
	je	.L2662	#,
	.loc 1 12636 0
	movq	-112(%rbp), %rax	# note, tmp791
	movzbl	2(%rax), %eax	# note_1->mode, D.29620
	cmpb	$10, %al	#, D.29620
	jne	.L2663	#,
.L2662:
	.loc 1 12637 0
	movq	-112(%rbp), %rax	# note, tmp792
	movq	8(%rax), %rax	# note_1->fld[0].rtx, D.29614
	movzwl	(%rax), %eax	# _567->code, D.29615
	cmpw	$61, %ax	#, D.29615
	jne	.L2663	#,
	.loc 1 12638 0
	movq	reg_n_info(%rip), %rax	# reg_n_info, reg_n_info.1678
	movq	-112(%rbp), %rdx	# note, tmp793
	movq	8(%rdx), %rdx	# note_1->fld[0].rtx, D.29614
	movl	8(%rdx), %edx	# _570->fld[0].rtuint, D.29616
	movl	%edx, %edx	# D.29616, tmp794
	addq	$4, %rdx	#, tmp795
	movq	(%rax,%rdx,8), %rax	# reg_n_info.1678_569->data.reg, D.29627
	movl	24(%rax), %edx	# _572->deaths, D.29621
	addl	$1, %edx	#, D.29621
	movl	%edx, 24(%rax)	# D.29621, _572->deaths
.L2663:
	.loc 1 12640 0
	movq	-88(%rbp), %rax	# place2, tmp796
	movq	56(%rax), %rcx	# place2_32->fld[6].rtx, D.29614
	movq	-112(%rbp), %rax	# note, tmp797
	movq	8(%rax), %rdx	# note_1->fld[0].rtx, D.29614
	.loc 1 12641 0
	movq	-112(%rbp), %rax	# note, tmp798
	movzbl	2(%rax), %eax	# note_1->mode, D.29620
	.loc 1 12640 0
	movzbl	%al, %esi	# D.29620, D.29626
	movq	-112(%rbp), %rax	# note, tmp799
	movzwl	(%rax), %eax	# note_1->code, D.29615
	movzwl	%ax, %eax	# D.29615, D.29628
	movl	%eax, %edi	# D.29628,
	call	gen_rtx_fmt_ee	#
	movq	-88(%rbp), %rdx	# place2, tmp800
	movq	%rax, 56(%rdx)	# D.29614, place2_32->fld[6].rtx
.L2661:
.LBE123:
	.loc 1 12091 0
	movq	-72(%rbp), %rax	# next_note, tmp801
	movq	%rax, -112(%rbp)	# tmp801, note
.L2486:
	.loc 1 12091 0 is_stmt 0 discriminator 1
	cmpq	$0, -112(%rbp)	#, note
	jne	.L2664	#,
	.loc 1 12646 0 is_stmt 1
	addq	$168, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE61:
	.size	distribute_notes, .-distribute_notes
	.type	distribute_links, @function
distribute_links:
.LFB62:
	.loc 1 12655 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -88(%rbp)	# links, links
	.loc 1 12658 0
	movq	-88(%rbp), %rax	# links, tmp119
	movq	%rax, -72(%rbp)	# tmp119, link
	jmp	.L2667	#
.L2692:
.LBB132:
	.loc 1 12660 0
	movq	$0, -64(%rbp)	#, place
	.loc 1 12664 0
	movq	-72(%rbp), %rax	# link, tmp120
	movq	16(%rax), %rax	# link_1->fld[1].rtx, tmp121
	movq	%rax, -32(%rbp)	# tmp121, next_link
	.loc 1 12677 0
	movq	-72(%rbp), %rax	# link, tmp122
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29629
	movzwl	(%rax), %eax	# _15->code, D.29630
	cmpw	$37, %ax	#, D.29630
	je	.L2668	#,
	.loc 1 12678 0
	movq	-72(%rbp), %rax	# link, tmp123
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29629
	movzwl	(%rax), %eax	# _17->code, D.29630
	movzwl	%ax, %eax	# D.29630, D.29631
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29632
	cmpb	$105, %al	#, D.29632
	jne	.L2669	#,
	.loc 1 12678 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# link, tmp125
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29629
	movq	32(%rax), %rax	# _21->fld[3].rtx, D.29629
	movzwl	(%rax), %eax	# _22->code, D.29630
	cmpw	$47, %ax	#, D.29630
	jne	.L2670	#,
	.loc 1 12678 0 discriminator 3
	movq	-72(%rbp), %rax	# link, tmp126
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29629
	movq	32(%rax), %rax	# _24->fld[3].rtx, iftmp.1680
	jmp	.L2672	#
.L2670:
	.loc 1 12678 0 discriminator 4
	movq	-72(%rbp), %rax	# link, tmp127
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29629
	movq	32(%rax), %rdx	# _26->fld[3].rtx, D.29629
	movq	-72(%rbp), %rax	# link, tmp128
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29629
	movq	%rdx, %rsi	# D.29629,
	movq	%rax, %rdi	# D.29629,
	call	single_set_2	#
	jmp	.L2672	#
.L2669:
	.loc 1 12678 0 discriminator 2
	movl	$0, %eax	#, iftmp.1679
.L2672:
	.loc 1 12678 0 discriminator 5
	movq	%rax, -24(%rbp)	# iftmp.1679, set
	cmpq	$0, -24(%rbp)	#, set
	jne	.L2673	#,
.L2668:
	.loc 1 12679 0 is_stmt 1
	jmp	.L2674	#
.L2673:
	.loc 1 12681 0
	movq	-24(%rbp), %rax	# set, tmp129
	movq	8(%rax), %rax	# set_32->fld[0].rtx, tmp130
	movq	%rax, -48(%rbp)	# tmp130, reg
	.loc 1 12682 0
	jmp	.L2675	#
.L2676:
	.loc 1 12685 0
	movq	-48(%rbp), %rax	# reg, tmp131
	movq	8(%rax), %rax	# reg_5->fld[0].rtx, tmp132
	movq	%rax, -48(%rbp)	# tmp132, reg
.L2675:
	.loc 1 12682 0 discriminator 1
	movq	-48(%rbp), %rax	# reg, tmp133
	movzwl	(%rax), %eax	# reg_5->code, D.29630
	cmpw	$63, %ax	#, D.29630
	je	.L2676	#,
	.loc 1 12682 0 is_stmt 0 discriminator 2
	movq	-48(%rbp), %rax	# reg, tmp134
	movzwl	(%rax), %eax	# reg_5->code, D.29630
	cmpw	$133, %ax	#, D.29630
	je	.L2676	#,
	.loc 1 12683 0 is_stmt 1
	movq	-48(%rbp), %rax	# reg, tmp135
	movzwl	(%rax), %eax	# reg_5->code, D.29630
	cmpw	$132, %ax	#, D.29630
	je	.L2676	#,
	.loc 1 12684 0
	movq	-48(%rbp), %rax	# reg, tmp136
	movzwl	(%rax), %eax	# reg_5->code, D.29630
	cmpw	$64, %ax	#, D.29630
	je	.L2676	#,
	.loc 1 12696 0
	movq	-72(%rbp), %rax	# link, tmp137
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29629
	movq	24(%rax), %rax	# _38->fld[2].rtx, tmp138
	movq	%rax, -56(%rbp)	# tmp138, insn
	jmp	.L2677	#
.L2682:
	.loc 1 12700 0
	movq	-56(%rbp), %rax	# insn, tmp139
	movzwl	(%rax), %eax	# insn_4->code, D.29630
	movzwl	%ax, %eax	# D.29630, D.29631
	cltq
	movzbl	rtx_class(%rax), %eax	# rtx_class, D.29632
	cmpb	$105, %al	#, D.29632
	jne	.L2678	#,
	.loc 1 12700 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# insn, tmp141
	movq	32(%rax), %rdx	# insn_4->fld[3].rtx, D.29629
	movq	-48(%rbp), %rax	# reg, tmp142
	movq	%rdx, %rsi	# D.29629,
	movq	%rax, %rdi	# tmp142,
	call	reg_overlap_mentioned_p	#
	testl	%eax, %eax	# D.29631
	je	.L2678	#,
	.loc 1 12702 0 is_stmt 1
	movq	-56(%rbp), %rax	# insn, tmp143
	movq	32(%rax), %rdx	# insn_4->fld[3].rtx, D.29629
	movq	-48(%rbp), %rax	# reg, tmp144
	movq	%rdx, %rsi	# D.29629,
	movq	%rax, %rdi	# tmp144,
	call	reg_referenced_p	#
	testl	%eax, %eax	# D.29631
	je	.L2679	#,
	.loc 1 12703 0
	movq	-56(%rbp), %rax	# insn, tmp145
	movq	%rax, -64(%rbp)	# tmp145, place
	.loc 1 12704 0
	jmp	.L2680	#
.L2679:
	jmp	.L2680	#
.L2678:
	.loc 1 12706 0
	movq	-56(%rbp), %rax	# insn, tmp146
	movzwl	(%rax), %eax	# insn_4->code, D.29630
	cmpw	$34, %ax	#, D.29630
	jne	.L2681	#,
	.loc 1 12707 0
	movq	-48(%rbp), %rdx	# reg, tmp147
	movq	-56(%rbp), %rax	# insn, tmp148
	movl	$48, %esi	#,
	movq	%rax, %rdi	# tmp148,
	call	find_reg_fusage	#
	testl	%eax, %eax	# D.29631
	je	.L2681	#,
	.loc 1 12709 0
	movq	-56(%rbp), %rax	# insn, tmp149
	movq	%rax, -64(%rbp)	# tmp149, place
	.loc 1 12710 0
	jmp	.L2680	#
.L2681:
	.loc 1 12699 0
	movq	-56(%rbp), %rax	# insn, tmp150
	movq	24(%rax), %rax	# insn_4->fld[2].rtx, tmp151
	movq	%rax, -56(%rbp)	# tmp151, insn
.L2677:
	.loc 1 12696 0 discriminator 1
	cmpq	$0, -56(%rbp)	#, insn
	je	.L2680	#,
	.loc 1 12697 0
	movl	n_basic_blocks(%rip), %eax	# n_basic_blocks, n_basic_blocks.1681
	leal	-1(%rax), %edx	#, D.29631
	movl	this_basic_block(%rip), %eax	# this_basic_block, this_basic_block.1682
	cmpl	%eax, %edx	# this_basic_block.1682, D.29631
	je	.L2682	#,
	.loc 1 12698 0
	movq	basic_block_info(%rip), %rax	# basic_block_info, basic_block_info.1683
	movl	this_basic_block(%rip), %edx	# this_basic_block, this_basic_block.1684
	addl	$1, %edx	#, D.29631
	movslq	%edx, %rdx	# D.29631, tmp152
	addq	$4, %rdx	#, tmp153
	movq	(%rax,%rdx,8), %rax	# basic_block_info.1683_43->data.bb, D.29633
	movq	(%rax), %rax	# _46->head, D.29629
	cmpq	-56(%rbp), %rax	# insn, D.29629
	jne	.L2682	#,
.L2680:
	.loc 1 12716 0
	cmpq	$0, -64(%rbp)	#, place
	je	.L2674	#,
.LBB133:
	.loc 1 12720 0
	movq	-64(%rbp), %rax	# place, tmp154
	movq	48(%rax), %rax	# place_3->fld[5].rtx, tmp155
	movq	%rax, -40(%rbp)	# tmp155, link2
	jmp	.L2683	#
.L2686:
	.loc 1 12721 0
	movq	-40(%rbp), %rax	# link2, tmp156
	movq	8(%rax), %rdx	# link2_6->fld[0].rtx, D.29629
	movq	-72(%rbp), %rax	# link, tmp157
	movq	8(%rax), %rax	# link_1->fld[0].rtx, D.29629
	cmpq	%rax, %rdx	# D.29629, D.29629
	jne	.L2684	#,
	.loc 1 12722 0
	jmp	.L2685	#
.L2684:
	.loc 1 12720 0
	movq	-40(%rbp), %rax	# link2, tmp158
	movq	16(%rax), %rax	# link2_6->fld[1].rtx, tmp159
	movq	%rax, -40(%rbp)	# tmp159, link2
.L2683:
	.loc 1 12720 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, link2
	jne	.L2686	#,
.L2685:
	.loc 1 12724 0 is_stmt 1
	cmpq	$0, -40(%rbp)	#, link2
	jne	.L2674	#,
	.loc 1 12726 0
	movq	-64(%rbp), %rax	# place, tmp160
	movq	48(%rax), %rdx	# place_3->fld[5].rtx, D.29629
	movq	-72(%rbp), %rax	# link, tmp161
	movq	%rdx, 16(%rax)	# D.29629, link_1->fld[1].rtx
	.loc 1 12727 0
	movq	-64(%rbp), %rax	# place, tmp162
	movq	-72(%rbp), %rdx	# link, tmp163
	movq	%rdx, 48(%rax)	# tmp163, place_3->fld[5].rtx
	.loc 1 12731 0
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.1685
	testq	%rax, %rax	# added_links_insn.1685
	je	.L2687	#,
	.loc 1 12732 0
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.1687
	movl	8(%rax), %edx	# added_links_insn.1687_66->fld[0].rtint, D.29631
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1688
	cmpl	%eax, %edx	# max_uid_cuid.1688, D.29631
	jle	.L2688	#,
	.loc 1 12732 0 is_stmt 0 discriminator 1
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.1689
	movq	%rax, %rdi	# added_links_insn.1689,
	call	insn_cuid	#
	movl	%eax, %ebx	#, iftmp.1686
	jmp	.L2689	#
.L2688:
	.loc 1 12732 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1690
	movq	added_links_insn(%rip), %rax	# added_links_insn, added_links_insn.1691
	movl	8(%rax), %eax	# added_links_insn.1691_72->fld[0].rtint, D.29631
	cltq
	salq	$2, %rax	#, D.29634
	addq	%rdx, %rax	# uid_cuid.1690, D.29635
	movl	(%rax), %ebx	# *_76, iftmp.1686
.L2689:
	.loc 1 12732 0 discriminator 3
	movq	-64(%rbp), %rax	# place, tmp164
	movl	8(%rax), %edx	# place_3->fld[0].rtint, D.29631
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1693
	cmpl	%eax, %edx	# max_uid_cuid.1693, D.29631
	jle	.L2690	#,
	.loc 1 12732 0 discriminator 1
	movq	-64(%rbp), %rax	# place, tmp165
	movq	%rax, %rdi	# tmp165,
	call	insn_cuid	#
	jmp	.L2691	#
.L2690:
	.loc 1 12732 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1694
	movq	-64(%rbp), %rax	# place, tmp166
	movl	8(%rax), %eax	# place_3->fld[0].rtint, D.29631
	cltq
	salq	$2, %rax	#, D.29634
	addq	%rdx, %rax	# uid_cuid.1694, D.29635
	movl	(%rax), %eax	# *_85, iftmp.1692
.L2691:
	.loc 1 12732 0 discriminator 3
	cmpl	%eax, %ebx	# iftmp.1692, iftmp.1686
	jle	.L2674	#,
.L2687:
	.loc 1 12733 0 is_stmt 1
	movq	-64(%rbp), %rax	# place, tmp167
	movq	%rax, added_links_insn(%rip)	# tmp167, added_links_insn
.L2674:
.LBE133:
.LBE132:
	.loc 1 12658 0
	movq	-32(%rbp), %rax	# next_link, tmp168
	movq	%rax, -72(%rbp)	# tmp168, link
.L2667:
	.loc 1 12658 0 is_stmt 0 discriminator 1
	cmpq	$0, -72(%rbp)	#, link
	jne	.L2692	#,
	.loc 1 12737 0 is_stmt 1
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE62:
	.size	distribute_links, .-distribute_links
	.type	insn_cuid, @function
insn_cuid:
.LFB63:
	.loc 1 12744 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# insn, insn
	.loc 1 12745 0
	jmp	.L2694	#
.L2696:
	.loc 1 12747 0
	movq	-8(%rbp), %rax	# insn, tmp76
	movq	24(%rax), %rax	# insn_1->fld[2].rtx, tmp77
	movq	%rax, -8(%rbp)	# tmp77, insn
.L2694:
	.loc 1 12745 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, insn
	je	.L2695	#,
	.loc 1 12745 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# insn, tmp78
	movl	8(%rax), %edx	# insn_1->fld[0].rtint, D.29636
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1695
	cmpl	%eax, %edx	# max_uid_cuid.1695, D.29636
	jle	.L2695	#,
	.loc 1 12746 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp79
	movzwl	(%rax), %eax	# insn_1->code, D.29637
	cmpw	$32, %ax	#, D.29637
	jne	.L2695	#,
	.loc 1 12746 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp80
	movq	32(%rax), %rax	# insn_1->fld[3].rtx, D.29638
	movzwl	(%rax), %eax	# _7->code, D.29637
	cmpw	$48, %ax	#, D.29637
	je	.L2696	#,
.L2695:
	.loc 1 12749 0 is_stmt 1
	movq	-8(%rbp), %rax	# insn, tmp81
	movl	8(%rax), %edx	# insn_1->fld[0].rtint, D.29636
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1696
	cmpl	%eax, %edx	# max_uid_cuid.1696, D.29636
	jle	.L2697	#,
	.loc 1 12750 0
	movl	$__FUNCTION__.12905, %edx	#,
	movl	$12750, %esi	#,
	movl	$.LC0, %edi	#,
	call	fancy_abort	#
.L2697:
	.loc 1 12752 0
	movq	-8(%rbp), %rax	# insn, tmp82
	movl	8(%rax), %edx	# insn_1->fld[0].rtint, D.29636
	movl	max_uid_cuid(%rip), %eax	# max_uid_cuid, max_uid_cuid.1698
	cmpl	%eax, %edx	# max_uid_cuid.1698, D.29636
	jle	.L2698	#,
	.loc 1 12752 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# insn, tmp83
	movq	%rax, %rdi	# tmp83,
	call	insn_cuid	#
	jmp	.L2699	#
.L2698:
	.loc 1 12752 0 discriminator 2
	movq	uid_cuid(%rip), %rdx	# uid_cuid, uid_cuid.1699
	movq	-8(%rbp), %rax	# insn, tmp84
	movl	8(%rax), %eax	# insn_1->fld[0].rtint, D.29636
	cltq
	salq	$2, %rax	#, D.29639
	addq	%rdx, %rax	# uid_cuid.1699, D.29640
	movl	(%rax), %eax	# *_19, iftmp.1697
.L2699:
	.loc 1 12753 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE63:
	.size	insn_cuid, .-insn_cuid
	.section	.rodata
	.align 8
.LC2:
	.string	";; Combiner statistics: %d attempts, %d substitutions (%d requiring new space),\n;; %d successes.\n\n"
	.text
	.globl	dump_combine_stats
	.type	dump_combine_stats, @function
dump_combine_stats:
.LFB64:
	.loc 1 12758 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# file, file
	.loc 1 12760 0
	movl	combine_successes(%rip), %edi	# combine_successes, combine_successes.1700
	movl	combine_extras(%rip), %esi	# combine_extras, combine_extras.1701
	movl	combine_merges(%rip), %ecx	# combine_merges, combine_merges.1702
	movl	combine_attempts(%rip), %edx	# combine_attempts, combine_attempts.1703
	movq	-8(%rbp), %rax	# file, tmp63
	movl	%edi, %r9d	# combine_successes.1700,
	movl	%esi, %r8d	# combine_extras.1701,
	movl	$.LC2, %esi	#,
	movq	%rax, %rdi	# tmp63,
	movl	$0, %eax	#,
	call	fnotice	#
	.loc 1 12763 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE64:
	.size	dump_combine_stats, .-dump_combine_stats
	.section	.rodata
	.align 8
.LC3:
	.string	"\n;; Combiner totals: %d attempts, %d substitutions (%d requiring new space),\n;; %d successes.\n"
	.text
	.globl	dump_combine_total_stats
	.type	dump_combine_total_stats, @function
dump_combine_total_stats:
.LFB65:
	.loc 1 12768 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# file, file
	.loc 1 12770 0
	movl	total_successes(%rip), %edi	# total_successes, total_successes.1704
	movl	total_extras(%rip), %esi	# total_extras, total_extras.1705
	movl	total_merges(%rip), %ecx	# total_merges, total_merges.1706
	movl	total_attempts(%rip), %edx	# total_attempts, total_attempts.1707
	movq	-8(%rbp), %rax	# file, tmp63
	movl	%edi, %r9d	# total_successes.1704,
	movl	%esi, %r8d	# total_extras.1705,
	movl	$.LC3, %esi	#,
	movq	%rax, %rdi	# tmp63,
	movl	$0, %eax	#,
	call	fnotice	#
	.loc 1 12773 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE65:
	.size	dump_combine_total_stats, .-dump_combine_total_stats
	.section	.rodata
	.type	__FUNCTION__.11361, @object
	.size	__FUNCTION__.11361, 9
__FUNCTION__.11361:
	.string	"do_SUBST"
	.type	__FUNCTION__.11561, @object
	.size	__FUNCTION__.11561, 12
__FUNCTION__.11561:
	.string	"try_combine"
	.type	__FUNCTION__.11733, @object
	.size	__FUNCTION__.11733, 6
__FUNCTION__.11733:
	.string	"subst"
	.align 16
	.type	__FUNCTION__.11833, @object
	.size	__FUNCTION__.11833, 21
__FUNCTION__.11833:
	.string	"combine_simplify_rtx"
	.align 16
	.type	__FUNCTION__.11922, @object
	.size	__FUNCTION__.11922, 17
__FUNCTION__.11922:
	.string	"simplify_logical"
	.type	__FUNCTION__.12255, @object
	.size	__FUNCTION__.12255, 13
__FUNCTION__.12255:
	.string	"nonzero_bits"
	.align 16
	.type	__FUNCTION__.12829, @object
	.size	__FUNCTION__.12829, 17
__FUNCTION__.12829:
	.string	"distribute_notes"
	.type	__FUNCTION__.12905, @object
	.size	__FUNCTION__.12905, 10
__FUNCTION__.12905:
	.string	"insn_cuid"
	.text
.Letext0:
	.file 2 "rtl.h"
	.file 3 "config.h"
	.file 4 "i386.h"
	.file 5 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
	.file 6 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 7 "/usr/include/stdio.h"
	.file 8 "/usr/include/libio.h"
	.file 9 "machmode.h"
	.file 10 "bitmap.h"
	.file 11 "basic-block.h"
	.file 12 "varray.h"
	.file 13 "regs.h"
	.file 14 "hard-reg-set.h"
	.file 15 "sbitmap.h"
	.file 16 "function.h"
	.file 17 "expr.h"
	.file 18 "flags.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x5eef
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF981
	.byte	0x1
	.long	.LASF982
	.long	.LASF983
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.string	"rtx"
	.byte	0x3
	.byte	0x8
	.long	0x38
	.uleb128 0x3
	.byte	0x8
	.long	0x3e
	.uleb128 0x4
	.long	.LASF11
	.byte	0x10
	.byte	0x2
	.byte	0x7a
	.long	0xed
	.uleb128 0x5
	.long	.LASF0
	.byte	0x2
	.byte	0x7d
	.long	0x2a9
	.byte	0x4
	.byte	0x10
	.byte	0x10
	.byte	0
	.uleb128 0x5
	.long	.LASF1
	.byte	0x2
	.byte	0x80
	.long	0x2a9
	.byte	0x4
	.byte	0x8
	.byte	0x8
	.byte	0
	.uleb128 0x5
	.long	.LASF2
	.byte	0x2
	.byte	0x87
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0
	.uleb128 0x5
	.long	.LASF3
	.byte	0x2
	.byte	0x8a
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0
	.uleb128 0x5
	.long	.LASF4
	.byte	0x2
	.byte	0x95
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0
	.uleb128 0x5
	.long	.LASF5
	.byte	0x2
	.byte	0x9d
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0
	.uleb128 0x5
	.long	.LASF6
	.byte	0x2
	.byte	0xaf
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0
	.uleb128 0x5
	.long	.LASF7
	.byte	0x2
	.byte	0xb6
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0
	.uleb128 0x5
	.long	.LASF8
	.byte	0x2
	.byte	0xbb
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0
	.uleb128 0x5
	.long	.LASF9
	.byte	0x2
	.byte	0xc4
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0
	.byte	0
	.uleb128 0x6
	.string	"fld"
	.byte	0x2
	.byte	0xc9
	.long	0xd76
	.byte	0x8
	.byte	0
	.uleb128 0x7
	.long	.LASF10
	.byte	0x3
	.byte	0xa
	.long	0xf8
	.uleb128 0x3
	.byte	0x8
	.long	0xfe
	.uleb128 0x4
	.long	.LASF12
	.byte	0x10
	.byte	0x2
	.byte	0xde
	.long	0x123
	.uleb128 0x8
	.long	.LASF13
	.byte	0x2
	.byte	0xdf
	.long	0x13e
	.byte	0
	.uleb128 0x8
	.long	.LASF14
	.byte	0x2
	.byte	0xe0
	.long	0xd86
	.byte	0x8
	.byte	0
	.uleb128 0x7
	.long	.LASF15
	.byte	0x3
	.byte	0xc
	.long	0x12e
	.uleb128 0x3
	.byte	0x8
	.long	0x134
	.uleb128 0x9
	.long	.LASF984
	.uleb128 0xa
	.long	0x13e
	.uleb128 0xb
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0xc
	.byte	0x8
	.byte	0x7
	.long	.LASF16
	.uleb128 0xd
	.long	.LASF25
	.byte	0x4
	.byte	0x4
	.value	0x18b
	.long	0x18a
	.uleb128 0xe
	.long	.LASF17
	.sleb128 0
	.uleb128 0xe
	.long	.LASF18
	.sleb128 1
	.uleb128 0xe
	.long	.LASF19
	.sleb128 2
	.uleb128 0xe
	.long	.LASF20
	.sleb128 3
	.uleb128 0xe
	.long	.LASF21
	.sleb128 4
	.uleb128 0xe
	.long	.LASF22
	.sleb128 5
	.uleb128 0xe
	.long	.LASF23
	.sleb128 6
	.uleb128 0xe
	.long	.LASF24
	.sleb128 7
	.byte	0
	.uleb128 0xd
	.long	.LASF26
	.byte	0x4
	.byte	0x4
	.value	0x4b2
	.long	0x234
	.uleb128 0xe
	.long	.LASF27
	.sleb128 0
	.uleb128 0xe
	.long	.LASF28
	.sleb128 1
	.uleb128 0xe
	.long	.LASF29
	.sleb128 2
	.uleb128 0xe
	.long	.LASF30
	.sleb128 3
	.uleb128 0xe
	.long	.LASF31
	.sleb128 4
	.uleb128 0xe
	.long	.LASF32
	.sleb128 5
	.uleb128 0xe
	.long	.LASF33
	.sleb128 6
	.uleb128 0xe
	.long	.LASF34
	.sleb128 7
	.uleb128 0xe
	.long	.LASF35
	.sleb128 8
	.uleb128 0xe
	.long	.LASF36
	.sleb128 9
	.uleb128 0xe
	.long	.LASF37
	.sleb128 10
	.uleb128 0xe
	.long	.LASF38
	.sleb128 11
	.uleb128 0xe
	.long	.LASF39
	.sleb128 12
	.uleb128 0xe
	.long	.LASF40
	.sleb128 13
	.uleb128 0xe
	.long	.LASF41
	.sleb128 14
	.uleb128 0xe
	.long	.LASF42
	.sleb128 15
	.uleb128 0xe
	.long	.LASF43
	.sleb128 16
	.uleb128 0xe
	.long	.LASF44
	.sleb128 17
	.uleb128 0xe
	.long	.LASF45
	.sleb128 18
	.uleb128 0xe
	.long	.LASF46
	.sleb128 19
	.uleb128 0xe
	.long	.LASF47
	.sleb128 20
	.uleb128 0xe
	.long	.LASF48
	.sleb128 21
	.uleb128 0xe
	.long	.LASF49
	.sleb128 22
	.uleb128 0xe
	.long	.LASF50
	.sleb128 23
	.uleb128 0xe
	.long	.LASF51
	.sleb128 24
	.uleb128 0xe
	.long	.LASF52
	.sleb128 25
	.byte	0
	.uleb128 0xf
	.long	.LASF53
	.byte	0x1c
	.byte	0x4
	.value	0x683
	.long	0x29d
	.uleb128 0x10
	.long	.LASF54
	.byte	0x4
	.value	0x684
	.long	0x13e
	.byte	0
	.uleb128 0x10
	.long	.LASF55
	.byte	0x4
	.value	0x685
	.long	0x13e
	.byte	0x4
	.uleb128 0x10
	.long	.LASF56
	.byte	0x4
	.value	0x686
	.long	0x13e
	.byte	0x8
	.uleb128 0x10
	.long	.LASF57
	.byte	0x4
	.value	0x687
	.long	0x13e
	.byte	0xc
	.uleb128 0x10
	.long	.LASF58
	.byte	0x4
	.value	0x688
	.long	0x13e
	.byte	0x10
	.uleb128 0x10
	.long	.LASF59
	.byte	0x4
	.value	0x689
	.long	0x13e
	.byte	0x14
	.uleb128 0x10
	.long	.LASF60
	.byte	0x4
	.value	0x68a
	.long	0x13e
	.byte	0x18
	.byte	0
	.uleb128 0x11
	.long	.LASF61
	.byte	0x4
	.value	0x68b
	.long	0x234
	.uleb128 0xc
	.byte	0x4
	.byte	0x7
	.long	.LASF62
	.uleb128 0x12
	.byte	0x8
	.uleb128 0xc
	.byte	0x8
	.byte	0x5
	.long	.LASF63
	.uleb128 0x7
	.long	.LASF64
	.byte	0x5
	.byte	0xd4
	.long	0x2c4
	.uleb128 0xc
	.byte	0x8
	.byte	0x7
	.long	.LASF65
	.uleb128 0xc
	.byte	0x1
	.byte	0x8
	.long	.LASF66
	.uleb128 0xc
	.byte	0x2
	.byte	0x7
	.long	.LASF67
	.uleb128 0xc
	.byte	0x1
	.byte	0x6
	.long	.LASF68
	.uleb128 0xc
	.byte	0x2
	.byte	0x5
	.long	.LASF69
	.uleb128 0x7
	.long	.LASF70
	.byte	0x6
	.byte	0x8c
	.long	0x2b2
	.uleb128 0x7
	.long	.LASF71
	.byte	0x6
	.byte	0x8d
	.long	0x2b2
	.uleb128 0x3
	.byte	0x8
	.long	0x303
	.uleb128 0xc
	.byte	0x1
	.byte	0x6
	.long	.LASF72
	.uleb128 0x7
	.long	.LASF73
	.byte	0x7
	.byte	0x30
	.long	0x315
	.uleb128 0x4
	.long	.LASF74
	.byte	0xd8
	.byte	0x8
	.byte	0xf6
	.long	0x496
	.uleb128 0x8
	.long	.LASF75
	.byte	0x8
	.byte	0xf7
	.long	0x13e
	.byte	0
	.uleb128 0x8
	.long	.LASF76
	.byte	0x8
	.byte	0xfc
	.long	0x2fd
	.byte	0x8
	.uleb128 0x8
	.long	.LASF77
	.byte	0x8
	.byte	0xfd
	.long	0x2fd
	.byte	0x10
	.uleb128 0x8
	.long	.LASF78
	.byte	0x8
	.byte	0xfe
	.long	0x2fd
	.byte	0x18
	.uleb128 0x8
	.long	.LASF79
	.byte	0x8
	.byte	0xff
	.long	0x2fd
	.byte	0x20
	.uleb128 0x10
	.long	.LASF80
	.byte	0x8
	.value	0x100
	.long	0x2fd
	.byte	0x28
	.uleb128 0x10
	.long	.LASF81
	.byte	0x8
	.value	0x101
	.long	0x2fd
	.byte	0x30
	.uleb128 0x10
	.long	.LASF82
	.byte	0x8
	.value	0x102
	.long	0x2fd
	.byte	0x38
	.uleb128 0x10
	.long	.LASF83
	.byte	0x8
	.value	0x103
	.long	0x2fd
	.byte	0x40
	.uleb128 0x10
	.long	.LASF84
	.byte	0x8
	.value	0x105
	.long	0x2fd
	.byte	0x48
	.uleb128 0x10
	.long	.LASF85
	.byte	0x8
	.value	0x106
	.long	0x2fd
	.byte	0x50
	.uleb128 0x10
	.long	.LASF86
	.byte	0x8
	.value	0x107
	.long	0x2fd
	.byte	0x58
	.uleb128 0x10
	.long	.LASF87
	.byte	0x8
	.value	0x109
	.long	0x4ce
	.byte	0x60
	.uleb128 0x10
	.long	.LASF88
	.byte	0x8
	.value	0x10b
	.long	0x4d4
	.byte	0x68
	.uleb128 0x10
	.long	.LASF89
	.byte	0x8
	.value	0x10d
	.long	0x13e
	.byte	0x70
	.uleb128 0x10
	.long	.LASF90
	.byte	0x8
	.value	0x111
	.long	0x13e
	.byte	0x74
	.uleb128 0x10
	.long	.LASF91
	.byte	0x8
	.value	0x113
	.long	0x2e7
	.byte	0x78
	.uleb128 0x10
	.long	.LASF92
	.byte	0x8
	.value	0x117
	.long	0x2d2
	.byte	0x80
	.uleb128 0x10
	.long	.LASF93
	.byte	0x8
	.value	0x118
	.long	0x2d9
	.byte	0x82
	.uleb128 0x10
	.long	.LASF94
	.byte	0x8
	.value	0x119
	.long	0x4da
	.byte	0x83
	.uleb128 0x10
	.long	.LASF95
	.byte	0x8
	.value	0x11d
	.long	0x4ea
	.byte	0x88
	.uleb128 0x10
	.long	.LASF96
	.byte	0x8
	.value	0x126
	.long	0x2f2
	.byte	0x90
	.uleb128 0x10
	.long	.LASF97
	.byte	0x8
	.value	0x12f
	.long	0x2b0
	.byte	0x98
	.uleb128 0x10
	.long	.LASF98
	.byte	0x8
	.value	0x130
	.long	0x2b0
	.byte	0xa0
	.uleb128 0x10
	.long	.LASF99
	.byte	0x8
	.value	0x131
	.long	0x2b0
	.byte	0xa8
	.uleb128 0x10
	.long	.LASF100
	.byte	0x8
	.value	0x132
	.long	0x2b0
	.byte	0xb0
	.uleb128 0x10
	.long	.LASF101
	.byte	0x8
	.value	0x133
	.long	0x2b9
	.byte	0xb8
	.uleb128 0x10
	.long	.LASF102
	.byte	0x8
	.value	0x135
	.long	0x13e
	.byte	0xc0
	.uleb128 0x10
	.long	.LASF103
	.byte	0x8
	.value	0x137
	.long	0x4f0
	.byte	0xc4
	.byte	0
	.uleb128 0x13
	.long	.LASF985
	.byte	0x8
	.byte	0x9b
	.uleb128 0x4
	.long	.LASF104
	.byte	0x18
	.byte	0x8
	.byte	0xa1
	.long	0x4ce
	.uleb128 0x8
	.long	.LASF105
	.byte	0x8
	.byte	0xa2
	.long	0x4ce
	.byte	0
	.uleb128 0x8
	.long	.LASF106
	.byte	0x8
	.byte	0xa3
	.long	0x4d4
	.byte	0x8
	.uleb128 0x8
	.long	.LASF107
	.byte	0x8
	.byte	0xa7
	.long	0x13e
	.byte	0x10
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x49d
	.uleb128 0x3
	.byte	0x8
	.long	0x315
	.uleb128 0x14
	.long	0x303
	.long	0x4ea
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x496
	.uleb128 0x14
	.long	0x303
	.long	0x500
	.uleb128 0x15
	.long	0x145
	.byte	0x13
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x506
	.uleb128 0xa
	.long	0x303
	.uleb128 0xc
	.byte	0x8
	.byte	0x7
	.long	.LASF108
	.uleb128 0xc
	.byte	0x8
	.byte	0x5
	.long	.LASF109
	.uleb128 0x3
	.byte	0x8
	.long	0x13e
	.uleb128 0x16
	.long	.LASF110
	.byte	0x4
	.byte	0x9
	.byte	0x1d
	.long	0x694
	.uleb128 0xe
	.long	.LASF111
	.sleb128 0
	.uleb128 0xe
	.long	.LASF112
	.sleb128 1
	.uleb128 0xe
	.long	.LASF113
	.sleb128 2
	.uleb128 0xe
	.long	.LASF114
	.sleb128 3
	.uleb128 0xe
	.long	.LASF115
	.sleb128 4
	.uleb128 0xe
	.long	.LASF116
	.sleb128 5
	.uleb128 0xe
	.long	.LASF117
	.sleb128 6
	.uleb128 0xe
	.long	.LASF118
	.sleb128 7
	.uleb128 0xe
	.long	.LASF119
	.sleb128 8
	.uleb128 0xe
	.long	.LASF120
	.sleb128 9
	.uleb128 0xe
	.long	.LASF121
	.sleb128 10
	.uleb128 0xe
	.long	.LASF122
	.sleb128 11
	.uleb128 0xe
	.long	.LASF123
	.sleb128 12
	.uleb128 0xe
	.long	.LASF124
	.sleb128 13
	.uleb128 0xe
	.long	.LASF125
	.sleb128 14
	.uleb128 0xe
	.long	.LASF126
	.sleb128 15
	.uleb128 0xe
	.long	.LASF127
	.sleb128 16
	.uleb128 0xe
	.long	.LASF128
	.sleb128 17
	.uleb128 0xe
	.long	.LASF129
	.sleb128 18
	.uleb128 0xe
	.long	.LASF130
	.sleb128 19
	.uleb128 0xe
	.long	.LASF131
	.sleb128 20
	.uleb128 0xe
	.long	.LASF132
	.sleb128 21
	.uleb128 0xe
	.long	.LASF133
	.sleb128 22
	.uleb128 0xe
	.long	.LASF134
	.sleb128 23
	.uleb128 0xe
	.long	.LASF135
	.sleb128 24
	.uleb128 0xe
	.long	.LASF136
	.sleb128 25
	.uleb128 0xe
	.long	.LASF137
	.sleb128 26
	.uleb128 0xe
	.long	.LASF138
	.sleb128 27
	.uleb128 0xe
	.long	.LASF139
	.sleb128 28
	.uleb128 0xe
	.long	.LASF140
	.sleb128 29
	.uleb128 0xe
	.long	.LASF141
	.sleb128 30
	.uleb128 0xe
	.long	.LASF142
	.sleb128 31
	.uleb128 0xe
	.long	.LASF143
	.sleb128 32
	.uleb128 0xe
	.long	.LASF144
	.sleb128 33
	.uleb128 0xe
	.long	.LASF145
	.sleb128 34
	.uleb128 0xe
	.long	.LASF146
	.sleb128 35
	.uleb128 0xe
	.long	.LASF147
	.sleb128 36
	.uleb128 0xe
	.long	.LASF148
	.sleb128 37
	.uleb128 0xe
	.long	.LASF149
	.sleb128 38
	.uleb128 0xe
	.long	.LASF150
	.sleb128 39
	.uleb128 0xe
	.long	.LASF151
	.sleb128 40
	.uleb128 0xe
	.long	.LASF152
	.sleb128 41
	.uleb128 0xe
	.long	.LASF153
	.sleb128 42
	.uleb128 0xe
	.long	.LASF154
	.sleb128 43
	.uleb128 0xe
	.long	.LASF155
	.sleb128 44
	.uleb128 0xe
	.long	.LASF156
	.sleb128 45
	.uleb128 0xe
	.long	.LASF157
	.sleb128 46
	.uleb128 0xe
	.long	.LASF158
	.sleb128 47
	.uleb128 0xe
	.long	.LASF159
	.sleb128 48
	.uleb128 0xe
	.long	.LASF160
	.sleb128 49
	.uleb128 0xe
	.long	.LASF161
	.sleb128 50
	.uleb128 0xe
	.long	.LASF162
	.sleb128 51
	.uleb128 0xe
	.long	.LASF163
	.sleb128 52
	.uleb128 0xe
	.long	.LASF164
	.sleb128 53
	.uleb128 0xe
	.long	.LASF165
	.sleb128 54
	.uleb128 0xe
	.long	.LASF166
	.sleb128 55
	.uleb128 0xe
	.long	.LASF167
	.sleb128 56
	.uleb128 0xe
	.long	.LASF168
	.sleb128 57
	.uleb128 0xe
	.long	.LASF169
	.sleb128 58
	.uleb128 0xe
	.long	.LASF170
	.sleb128 59
	.byte	0
	.uleb128 0x16
	.long	.LASF171
	.byte	0x4
	.byte	0x9
	.byte	0x2c
	.long	0x6dd
	.uleb128 0xe
	.long	.LASF172
	.sleb128 0
	.uleb128 0xe
	.long	.LASF173
	.sleb128 1
	.uleb128 0xe
	.long	.LASF174
	.sleb128 2
	.uleb128 0xe
	.long	.LASF175
	.sleb128 3
	.uleb128 0xe
	.long	.LASF176
	.sleb128 4
	.uleb128 0xe
	.long	.LASF177
	.sleb128 5
	.uleb128 0xe
	.long	.LASF178
	.sleb128 6
	.uleb128 0xe
	.long	.LASF179
	.sleb128 7
	.uleb128 0xe
	.long	.LASF180
	.sleb128 8
	.uleb128 0xe
	.long	.LASF181
	.sleb128 9
	.byte	0
	.uleb128 0x16
	.long	.LASF182
	.byte	0x4
	.byte	0x2
	.byte	0x29
	.long	0xad9
	.uleb128 0xe
	.long	.LASF183
	.sleb128 0
	.uleb128 0x17
	.string	"NIL"
	.sleb128 1
	.uleb128 0xe
	.long	.LASF184
	.sleb128 2
	.uleb128 0xe
	.long	.LASF185
	.sleb128 3
	.uleb128 0xe
	.long	.LASF186
	.sleb128 4
	.uleb128 0xe
	.long	.LASF187
	.sleb128 5
	.uleb128 0xe
	.long	.LASF188
	.sleb128 6
	.uleb128 0xe
	.long	.LASF189
	.sleb128 7
	.uleb128 0xe
	.long	.LASF190
	.sleb128 8
	.uleb128 0xe
	.long	.LASF191
	.sleb128 9
	.uleb128 0xe
	.long	.LASF192
	.sleb128 10
	.uleb128 0xe
	.long	.LASF193
	.sleb128 11
	.uleb128 0xe
	.long	.LASF194
	.sleb128 12
	.uleb128 0xe
	.long	.LASF195
	.sleb128 13
	.uleb128 0xe
	.long	.LASF196
	.sleb128 14
	.uleb128 0xe
	.long	.LASF197
	.sleb128 15
	.uleb128 0xe
	.long	.LASF198
	.sleb128 16
	.uleb128 0xe
	.long	.LASF199
	.sleb128 17
	.uleb128 0xe
	.long	.LASF200
	.sleb128 18
	.uleb128 0xe
	.long	.LASF201
	.sleb128 19
	.uleb128 0xe
	.long	.LASF202
	.sleb128 20
	.uleb128 0xe
	.long	.LASF203
	.sleb128 21
	.uleb128 0xe
	.long	.LASF204
	.sleb128 22
	.uleb128 0xe
	.long	.LASF205
	.sleb128 23
	.uleb128 0xe
	.long	.LASF206
	.sleb128 24
	.uleb128 0xe
	.long	.LASF207
	.sleb128 25
	.uleb128 0xe
	.long	.LASF208
	.sleb128 26
	.uleb128 0xe
	.long	.LASF209
	.sleb128 27
	.uleb128 0xe
	.long	.LASF210
	.sleb128 28
	.uleb128 0xe
	.long	.LASF211
	.sleb128 29
	.uleb128 0xe
	.long	.LASF212
	.sleb128 30
	.uleb128 0xe
	.long	.LASF213
	.sleb128 31
	.uleb128 0xe
	.long	.LASF214
	.sleb128 32
	.uleb128 0xe
	.long	.LASF215
	.sleb128 33
	.uleb128 0xe
	.long	.LASF216
	.sleb128 34
	.uleb128 0xe
	.long	.LASF217
	.sleb128 35
	.uleb128 0xe
	.long	.LASF218
	.sleb128 36
	.uleb128 0xe
	.long	.LASF219
	.sleb128 37
	.uleb128 0xe
	.long	.LASF220
	.sleb128 38
	.uleb128 0xe
	.long	.LASF221
	.sleb128 39
	.uleb128 0xe
	.long	.LASF222
	.sleb128 40
	.uleb128 0xe
	.long	.LASF223
	.sleb128 41
	.uleb128 0xe
	.long	.LASF224
	.sleb128 42
	.uleb128 0xe
	.long	.LASF225
	.sleb128 43
	.uleb128 0xe
	.long	.LASF226
	.sleb128 44
	.uleb128 0xe
	.long	.LASF227
	.sleb128 45
	.uleb128 0xe
	.long	.LASF228
	.sleb128 46
	.uleb128 0x17
	.string	"SET"
	.sleb128 47
	.uleb128 0x17
	.string	"USE"
	.sleb128 48
	.uleb128 0xe
	.long	.LASF229
	.sleb128 49
	.uleb128 0xe
	.long	.LASF230
	.sleb128 50
	.uleb128 0xe
	.long	.LASF231
	.sleb128 51
	.uleb128 0xe
	.long	.LASF232
	.sleb128 52
	.uleb128 0xe
	.long	.LASF233
	.sleb128 53
	.uleb128 0xe
	.long	.LASF234
	.sleb128 54
	.uleb128 0xe
	.long	.LASF235
	.sleb128 55
	.uleb128 0xe
	.long	.LASF236
	.sleb128 56
	.uleb128 0xe
	.long	.LASF237
	.sleb128 57
	.uleb128 0xe
	.long	.LASF238
	.sleb128 58
	.uleb128 0x17
	.string	"PC"
	.sleb128 59
	.uleb128 0xe
	.long	.LASF239
	.sleb128 60
	.uleb128 0x17
	.string	"REG"
	.sleb128 61
	.uleb128 0xe
	.long	.LASF240
	.sleb128 62
	.uleb128 0xe
	.long	.LASF241
	.sleb128 63
	.uleb128 0xe
	.long	.LASF242
	.sleb128 64
	.uleb128 0xe
	.long	.LASF243
	.sleb128 65
	.uleb128 0x17
	.string	"MEM"
	.sleb128 66
	.uleb128 0xe
	.long	.LASF244
	.sleb128 67
	.uleb128 0xe
	.long	.LASF245
	.sleb128 68
	.uleb128 0x17
	.string	"CC0"
	.sleb128 69
	.uleb128 0xe
	.long	.LASF246
	.sleb128 70
	.uleb128 0xe
	.long	.LASF247
	.sleb128 71
	.uleb128 0xe
	.long	.LASF248
	.sleb128 72
	.uleb128 0xe
	.long	.LASF249
	.sleb128 73
	.uleb128 0xe
	.long	.LASF250
	.sleb128 74
	.uleb128 0xe
	.long	.LASF251
	.sleb128 75
	.uleb128 0xe
	.long	.LASF252
	.sleb128 76
	.uleb128 0x17
	.string	"NEG"
	.sleb128 77
	.uleb128 0xe
	.long	.LASF253
	.sleb128 78
	.uleb128 0x17
	.string	"DIV"
	.sleb128 79
	.uleb128 0x17
	.string	"MOD"
	.sleb128 80
	.uleb128 0xe
	.long	.LASF254
	.sleb128 81
	.uleb128 0xe
	.long	.LASF255
	.sleb128 82
	.uleb128 0x17
	.string	"AND"
	.sleb128 83
	.uleb128 0x17
	.string	"IOR"
	.sleb128 84
	.uleb128 0x17
	.string	"XOR"
	.sleb128 85
	.uleb128 0x17
	.string	"NOT"
	.sleb128 86
	.uleb128 0xe
	.long	.LASF256
	.sleb128 87
	.uleb128 0xe
	.long	.LASF257
	.sleb128 88
	.uleb128 0xe
	.long	.LASF258
	.sleb128 89
	.uleb128 0xe
	.long	.LASF259
	.sleb128 90
	.uleb128 0xe
	.long	.LASF260
	.sleb128 91
	.uleb128 0xe
	.long	.LASF261
	.sleb128 92
	.uleb128 0xe
	.long	.LASF262
	.sleb128 93
	.uleb128 0xe
	.long	.LASF263
	.sleb128 94
	.uleb128 0xe
	.long	.LASF264
	.sleb128 95
	.uleb128 0xe
	.long	.LASF265
	.sleb128 96
	.uleb128 0xe
	.long	.LASF266
	.sleb128 97
	.uleb128 0xe
	.long	.LASF267
	.sleb128 98
	.uleb128 0xe
	.long	.LASF268
	.sleb128 99
	.uleb128 0xe
	.long	.LASF269
	.sleb128 100
	.uleb128 0xe
	.long	.LASF270
	.sleb128 101
	.uleb128 0x17
	.string	"NE"
	.sleb128 102
	.uleb128 0x17
	.string	"EQ"
	.sleb128 103
	.uleb128 0x17
	.string	"GE"
	.sleb128 104
	.uleb128 0x17
	.string	"GT"
	.sleb128 105
	.uleb128 0x17
	.string	"LE"
	.sleb128 106
	.uleb128 0x17
	.string	"LT"
	.sleb128 107
	.uleb128 0x17
	.string	"GEU"
	.sleb128 108
	.uleb128 0x17
	.string	"GTU"
	.sleb128 109
	.uleb128 0x17
	.string	"LEU"
	.sleb128 110
	.uleb128 0x17
	.string	"LTU"
	.sleb128 111
	.uleb128 0xe
	.long	.LASF271
	.sleb128 112
	.uleb128 0xe
	.long	.LASF272
	.sleb128 113
	.uleb128 0xe
	.long	.LASF273
	.sleb128 114
	.uleb128 0xe
	.long	.LASF274
	.sleb128 115
	.uleb128 0xe
	.long	.LASF275
	.sleb128 116
	.uleb128 0xe
	.long	.LASF276
	.sleb128 117
	.uleb128 0xe
	.long	.LASF277
	.sleb128 118
	.uleb128 0xe
	.long	.LASF278
	.sleb128 119
	.uleb128 0xe
	.long	.LASF279
	.sleb128 120
	.uleb128 0xe
	.long	.LASF280
	.sleb128 121
	.uleb128 0xe
	.long	.LASF281
	.sleb128 122
	.uleb128 0xe
	.long	.LASF282
	.sleb128 123
	.uleb128 0xe
	.long	.LASF283
	.sleb128 124
	.uleb128 0xe
	.long	.LASF284
	.sleb128 125
	.uleb128 0x17
	.string	"FIX"
	.sleb128 126
	.uleb128 0xe
	.long	.LASF285
	.sleb128 127
	.uleb128 0xe
	.long	.LASF286
	.sleb128 128
	.uleb128 0x17
	.string	"ABS"
	.sleb128 129
	.uleb128 0xe
	.long	.LASF287
	.sleb128 130
	.uleb128 0x17
	.string	"FFS"
	.sleb128 131
	.uleb128 0xe
	.long	.LASF288
	.sleb128 132
	.uleb128 0xe
	.long	.LASF289
	.sleb128 133
	.uleb128 0xe
	.long	.LASF290
	.sleb128 134
	.uleb128 0xe
	.long	.LASF291
	.sleb128 135
	.uleb128 0xe
	.long	.LASF292
	.sleb128 136
	.uleb128 0xe
	.long	.LASF293
	.sleb128 137
	.uleb128 0xe
	.long	.LASF294
	.sleb128 138
	.uleb128 0xe
	.long	.LASF295
	.sleb128 139
	.uleb128 0xe
	.long	.LASF296
	.sleb128 140
	.uleb128 0xe
	.long	.LASF297
	.sleb128 141
	.uleb128 0xe
	.long	.LASF298
	.sleb128 142
	.uleb128 0xe
	.long	.LASF299
	.sleb128 143
	.uleb128 0xe
	.long	.LASF300
	.sleb128 144
	.uleb128 0xe
	.long	.LASF301
	.sleb128 145
	.uleb128 0xe
	.long	.LASF302
	.sleb128 146
	.uleb128 0xe
	.long	.LASF303
	.sleb128 147
	.uleb128 0xe
	.long	.LASF304
	.sleb128 148
	.uleb128 0xe
	.long	.LASF305
	.sleb128 149
	.uleb128 0xe
	.long	.LASF306
	.sleb128 150
	.uleb128 0xe
	.long	.LASF307
	.sleb128 151
	.uleb128 0x17
	.string	"PHI"
	.sleb128 152
	.uleb128 0xe
	.long	.LASF308
	.sleb128 153
	.byte	0
	.uleb128 0x18
	.byte	0x4
	.byte	0x2
	.byte	0x44
	.long	0xb5a
	.uleb128 0x5
	.long	.LASF309
	.byte	0x2
	.byte	0x47
	.long	0x2a9
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0
	.uleb128 0x5
	.long	.LASF310
	.byte	0x2
	.byte	0x49
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0
	.uleb128 0x5
	.long	.LASF311
	.byte	0x2
	.byte	0x4a
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0
	.uleb128 0x5
	.long	.LASF312
	.byte	0x2
	.byte	0x4c
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0
	.uleb128 0x5
	.long	.LASF313
	.byte	0x2
	.byte	0x4e
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0
	.uleb128 0x5
	.long	.LASF314
	.byte	0x2
	.byte	0x50
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0
	.uleb128 0x5
	.long	.LASF315
	.byte	0x2
	.byte	0x53
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0
	.uleb128 0x5
	.long	.LASF316
	.byte	0x2
	.byte	0x55
	.long	0x2a9
	.byte	0x4
	.byte	0x8
	.byte	0x8
	.byte	0
	.byte	0
	.uleb128 0x7
	.long	.LASF317
	.byte	0x2
	.byte	0x56
	.long	0xad9
	.uleb128 0x18
	.byte	0x28
	.byte	0x2
	.byte	0x5c
	.long	0xbaa
	.uleb128 0x8
	.long	.LASF318
	.byte	0x2
	.byte	0x5e
	.long	0x2b2
	.byte	0
	.uleb128 0x8
	.long	.LASF319
	.byte	0x2
	.byte	0x5f
	.long	0x123
	.byte	0x8
	.uleb128 0x8
	.long	.LASF320
	.byte	0x2
	.byte	0x60
	.long	0x2d
	.byte	0x10
	.uleb128 0x8
	.long	.LASF321
	.byte	0x2
	.byte	0x61
	.long	0x2d
	.byte	0x18
	.uleb128 0x8
	.long	.LASF322
	.byte	0x2
	.byte	0x62
	.long	0x2a9
	.byte	0x20
	.byte	0
	.uleb128 0x7
	.long	.LASF323
	.byte	0x2
	.byte	0x63
	.long	0xb65
	.uleb128 0x19
	.long	.LASF423
	.byte	0x8
	.byte	0x2
	.byte	0x67
	.long	0xc50
	.uleb128 0x1a
	.long	.LASF324
	.byte	0x2
	.byte	0x69
	.long	0x2b2
	.uleb128 0x1a
	.long	.LASF325
	.byte	0x2
	.byte	0x6a
	.long	0x13e
	.uleb128 0x1a
	.long	.LASF326
	.byte	0x2
	.byte	0x6b
	.long	0x2a9
	.uleb128 0x1a
	.long	.LASF327
	.byte	0x2
	.byte	0x6c
	.long	0x500
	.uleb128 0x1b
	.string	"rtx"
	.byte	0x2
	.byte	0x6d
	.long	0x2d
	.uleb128 0x1a
	.long	.LASF10
	.byte	0x2
	.byte	0x6e
	.long	0xed
	.uleb128 0x1a
	.long	.LASF328
	.byte	0x2
	.byte	0x6f
	.long	0x51f
	.uleb128 0x1a
	.long	.LASF329
	.byte	0x2
	.byte	0x70
	.long	0xb5a
	.uleb128 0x1a
	.long	.LASF330
	.byte	0x2
	.byte	0x71
	.long	0xc55
	.uleb128 0x1a
	.long	.LASF331
	.byte	0x2
	.byte	0x72
	.long	0xc8c
	.uleb128 0x1a
	.long	.LASF332
	.byte	0x2
	.byte	0x73
	.long	0x123
	.uleb128 0x1b
	.string	"bb"
	.byte	0x2
	.byte	0x74
	.long	0xd5f
	.uleb128 0x1a
	.long	.LASF333
	.byte	0x2
	.byte	0x75
	.long	0xd65
	.byte	0
	.uleb128 0x1c
	.long	.LASF432
	.uleb128 0x3
	.byte	0x8
	.long	0xc50
	.uleb128 0x4
	.long	.LASF334
	.byte	0x18
	.byte	0xa
	.byte	0x34
	.long	0xc8c
	.uleb128 0x8
	.long	.LASF335
	.byte	0xa
	.byte	0x35
	.long	0x1308
	.byte	0
	.uleb128 0x8
	.long	.LASF336
	.byte	0xa
	.byte	0x36
	.long	0x1308
	.byte	0x8
	.uleb128 0x8
	.long	.LASF337
	.byte	0xa
	.byte	0x37
	.long	0x2a9
	.byte	0x10
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0xc5b
	.uleb128 0x4
	.long	.LASF338
	.byte	0x70
	.byte	0xb
	.byte	0xae
	.long	0xd5f
	.uleb128 0x8
	.long	.LASF339
	.byte	0xb
	.byte	0xb0
	.long	0x2d
	.byte	0
	.uleb128 0x6
	.string	"end"
	.byte	0xb
	.byte	0xb0
	.long	0x2d
	.byte	0x8
	.uleb128 0x8
	.long	.LASF340
	.byte	0xb
	.byte	0xb3
	.long	0x123
	.byte	0x10
	.uleb128 0x8
	.long	.LASF341
	.byte	0xb
	.byte	0xb4
	.long	0x123
	.byte	0x18
	.uleb128 0x8
	.long	.LASF342
	.byte	0xb
	.byte	0xb7
	.long	0x1402
	.byte	0x20
	.uleb128 0x8
	.long	.LASF343
	.byte	0xb
	.byte	0xb7
	.long	0x1402
	.byte	0x28
	.uleb128 0x8
	.long	.LASF344
	.byte	0xb
	.byte	0xbc
	.long	0x136d
	.byte	0x30
	.uleb128 0x8
	.long	.LASF345
	.byte	0xb
	.byte	0xc0
	.long	0x136d
	.byte	0x38
	.uleb128 0x8
	.long	.LASF346
	.byte	0xb
	.byte	0xc6
	.long	0x136d
	.byte	0x40
	.uleb128 0x8
	.long	.LASF347
	.byte	0xb
	.byte	0xc8
	.long	0x136d
	.byte	0x48
	.uleb128 0x6
	.string	"aux"
	.byte	0xb
	.byte	0xcb
	.long	0x2b0
	.byte	0x50
	.uleb128 0x8
	.long	.LASF348
	.byte	0xb
	.byte	0xce
	.long	0x13e
	.byte	0x58
	.uleb128 0x8
	.long	.LASF349
	.byte	0xb
	.byte	0xd1
	.long	0x13e
	.byte	0x5c
	.uleb128 0x8
	.long	.LASF350
	.byte	0xb
	.byte	0xd4
	.long	0x1378
	.byte	0x60
	.uleb128 0x8
	.long	.LASF351
	.byte	0xb
	.byte	0xd7
	.long	0x13e
	.byte	0x68
	.uleb128 0x8
	.long	.LASF352
	.byte	0xb
	.byte	0xda
	.long	0x13e
	.byte	0x6c
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0xc92
	.uleb128 0x3
	.byte	0x8
	.long	0xbaa
	.uleb128 0x7
	.long	.LASF353
	.byte	0x2
	.byte	0x76
	.long	0xbb5
	.uleb128 0x14
	.long	0xd6b
	.long	0xd86
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x2d
	.long	0xd96
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0xd
	.long	.LASF354
	.byte	0x4
	.byte	0x2
	.value	0x1c3
	.long	0xe58
	.uleb128 0xe
	.long	.LASF355
	.sleb128 1
	.uleb128 0xe
	.long	.LASF356
	.sleb128 2
	.uleb128 0xe
	.long	.LASF357
	.sleb128 3
	.uleb128 0xe
	.long	.LASF358
	.sleb128 4
	.uleb128 0xe
	.long	.LASF359
	.sleb128 5
	.uleb128 0xe
	.long	.LASF360
	.sleb128 6
	.uleb128 0xe
	.long	.LASF361
	.sleb128 7
	.uleb128 0xe
	.long	.LASF362
	.sleb128 8
	.uleb128 0xe
	.long	.LASF363
	.sleb128 9
	.uleb128 0xe
	.long	.LASF364
	.sleb128 10
	.uleb128 0xe
	.long	.LASF365
	.sleb128 11
	.uleb128 0xe
	.long	.LASF366
	.sleb128 12
	.uleb128 0xe
	.long	.LASF367
	.sleb128 13
	.uleb128 0xe
	.long	.LASF368
	.sleb128 14
	.uleb128 0xe
	.long	.LASF369
	.sleb128 15
	.uleb128 0xe
	.long	.LASF370
	.sleb128 16
	.uleb128 0xe
	.long	.LASF371
	.sleb128 17
	.uleb128 0xe
	.long	.LASF372
	.sleb128 18
	.uleb128 0xe
	.long	.LASF373
	.sleb128 19
	.uleb128 0xe
	.long	.LASF374
	.sleb128 20
	.uleb128 0xe
	.long	.LASF375
	.sleb128 21
	.uleb128 0xe
	.long	.LASF376
	.sleb128 22
	.uleb128 0xe
	.long	.LASF377
	.sleb128 23
	.uleb128 0xe
	.long	.LASF378
	.sleb128 24
	.uleb128 0xe
	.long	.LASF379
	.sleb128 25
	.uleb128 0xe
	.long	.LASF380
	.sleb128 26
	.uleb128 0xe
	.long	.LASF381
	.sleb128 27
	.uleb128 0xe
	.long	.LASF382
	.sleb128 28
	.uleb128 0xe
	.long	.LASF383
	.sleb128 29
	.uleb128 0xe
	.long	.LASF384
	.sleb128 30
	.byte	0
	.uleb128 0xd
	.long	.LASF385
	.byte	0x4
	.byte	0x2
	.value	0x297
	.long	0xf07
	.uleb128 0xe
	.long	.LASF386
	.sleb128 -100
	.uleb128 0xe
	.long	.LASF387
	.sleb128 -99
	.uleb128 0xe
	.long	.LASF388
	.sleb128 -98
	.uleb128 0xe
	.long	.LASF389
	.sleb128 -97
	.uleb128 0xe
	.long	.LASF390
	.sleb128 -96
	.uleb128 0xe
	.long	.LASF391
	.sleb128 -95
	.uleb128 0xe
	.long	.LASF392
	.sleb128 -94
	.uleb128 0xe
	.long	.LASF393
	.sleb128 -93
	.uleb128 0xe
	.long	.LASF394
	.sleb128 -92
	.uleb128 0xe
	.long	.LASF395
	.sleb128 -91
	.uleb128 0xe
	.long	.LASF396
	.sleb128 -90
	.uleb128 0xe
	.long	.LASF397
	.sleb128 -89
	.uleb128 0xe
	.long	.LASF398
	.sleb128 -88
	.uleb128 0xe
	.long	.LASF399
	.sleb128 -87
	.uleb128 0xe
	.long	.LASF400
	.sleb128 -86
	.uleb128 0xe
	.long	.LASF401
	.sleb128 -85
	.uleb128 0xe
	.long	.LASF402
	.sleb128 -84
	.uleb128 0xe
	.long	.LASF403
	.sleb128 -83
	.uleb128 0xe
	.long	.LASF404
	.sleb128 -82
	.uleb128 0xe
	.long	.LASF405
	.sleb128 -81
	.uleb128 0xe
	.long	.LASF406
	.sleb128 -80
	.uleb128 0xe
	.long	.LASF407
	.sleb128 -79
	.uleb128 0xe
	.long	.LASF408
	.sleb128 -78
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x2d
	.uleb128 0xd
	.long	.LASF409
	.byte	0x4
	.byte	0x2
	.value	0x630
	.long	0xf63
	.uleb128 0xe
	.long	.LASF410
	.sleb128 0
	.uleb128 0xe
	.long	.LASF411
	.sleb128 1
	.uleb128 0xe
	.long	.LASF412
	.sleb128 2
	.uleb128 0xe
	.long	.LASF413
	.sleb128 3
	.uleb128 0xe
	.long	.LASF414
	.sleb128 4
	.uleb128 0xe
	.long	.LASF415
	.sleb128 5
	.uleb128 0xe
	.long	.LASF416
	.sleb128 6
	.uleb128 0xe
	.long	.LASF417
	.sleb128 7
	.uleb128 0xe
	.long	.LASF418
	.sleb128 8
	.uleb128 0xe
	.long	.LASF419
	.sleb128 9
	.uleb128 0xe
	.long	.LASF420
	.sleb128 10
	.uleb128 0xe
	.long	.LASF421
	.sleb128 11
	.byte	0
	.uleb128 0x4
	.long	.LASF422
	.byte	0x10
	.byte	0xc
	.byte	0x24
	.long	0xf88
	.uleb128 0x6
	.string	"rtx"
	.byte	0xc
	.byte	0x32
	.long	0x38
	.byte	0
	.uleb128 0x6
	.string	"age"
	.byte	0xc
	.byte	0x36
	.long	0x2a9
	.byte	0x8
	.byte	0
	.uleb128 0x19
	.long	.LASF424
	.byte	0x10
	.byte	0xc
	.byte	0x3a
	.long	0x106d
	.uleb128 0x1b
	.string	"c"
	.byte	0xc
	.byte	0x3b
	.long	0x4da
	.uleb128 0x1b
	.string	"uc"
	.byte	0xc
	.byte	0x3c
	.long	0x106d
	.uleb128 0x1b
	.string	"s"
	.byte	0xc
	.byte	0x3d
	.long	0x107d
	.uleb128 0x1b
	.string	"us"
	.byte	0xc
	.byte	0x3e
	.long	0x108d
	.uleb128 0x1b
	.string	"i"
	.byte	0xc
	.byte	0x3f
	.long	0x109d
	.uleb128 0x1b
	.string	"u"
	.byte	0xc
	.byte	0x40
	.long	0x10ad
	.uleb128 0x1b
	.string	"l"
	.byte	0xc
	.byte	0x41
	.long	0x10bd
	.uleb128 0x1b
	.string	"ul"
	.byte	0xc
	.byte	0x42
	.long	0x10cd
	.uleb128 0x1a
	.long	.LASF425
	.byte	0xc
	.byte	0x43
	.long	0x10bd
	.uleb128 0x1a
	.long	.LASF426
	.byte	0xc
	.byte	0x44
	.long	0x10cd
	.uleb128 0x1a
	.long	.LASF427
	.byte	0xc
	.byte	0x45
	.long	0x10dd
	.uleb128 0x1a
	.long	.LASF428
	.byte	0xc
	.byte	0x46
	.long	0x10ed
	.uleb128 0x1b
	.string	"rtx"
	.byte	0xc
	.byte	0x47
	.long	0x10fd
	.uleb128 0x1a
	.long	.LASF10
	.byte	0xc
	.byte	0x48
	.long	0x110d
	.uleb128 0x1a
	.long	.LASF15
	.byte	0xc
	.byte	0x49
	.long	0x111d
	.uleb128 0x1a
	.long	.LASF429
	.byte	0xc
	.byte	0x4a
	.long	0x112d
	.uleb128 0x1a
	.long	.LASF430
	.byte	0xc
	.byte	0x4b
	.long	0x113d
	.uleb128 0x1b
	.string	"reg"
	.byte	0xc
	.byte	0x4c
	.long	0x1158
	.uleb128 0x1a
	.long	.LASF431
	.byte	0xc
	.byte	0x4d
	.long	0x11ff
	.uleb128 0x1b
	.string	"bb"
	.byte	0xc
	.byte	0x4e
	.long	0x120f
	.uleb128 0x1b
	.string	"te"
	.byte	0xc
	.byte	0x4f
	.long	0x121f
	.byte	0
	.uleb128 0x14
	.long	0x2cb
	.long	0x107d
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x2e0
	.long	0x108d
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x2d2
	.long	0x109d
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x13e
	.long	0x10ad
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x2a9
	.long	0x10bd
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x2b2
	.long	0x10cd
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x2c4
	.long	0x10dd
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x2b0
	.long	0x10ed
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x2fd
	.long	0x10fd
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x38
	.long	0x110d
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xf8
	.long	0x111d
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x12e
	.long	0x112d
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xc8c
	.long	0x113d
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x114d
	.long	0x114d
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x1153
	.uleb128 0x1c
	.long	.LASF433
	.uleb128 0x14
	.long	0x1168
	.long	0x1168
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x116e
	.uleb128 0x4
	.long	.LASF434
	.byte	0x2c
	.byte	0xd
	.byte	0x2d
	.long	0x11ff
	.uleb128 0x8
	.long	.LASF435
	.byte	0xd
	.byte	0x2f
	.long	0x13e
	.byte	0
	.uleb128 0x8
	.long	.LASF436
	.byte	0xd
	.byte	0x30
	.long	0x13e
	.byte	0x4
	.uleb128 0x8
	.long	.LASF437
	.byte	0xd
	.byte	0x31
	.long	0x13e
	.byte	0x8
	.uleb128 0x8
	.long	.LASF438
	.byte	0xd
	.byte	0x34
	.long	0x13e
	.byte	0xc
	.uleb128 0x8
	.long	.LASF439
	.byte	0xd
	.byte	0x37
	.long	0x13e
	.byte	0x10
	.uleb128 0x8
	.long	.LASF440
	.byte	0xd
	.byte	0x38
	.long	0x13e
	.byte	0x14
	.uleb128 0x8
	.long	.LASF441
	.byte	0xd
	.byte	0x39
	.long	0x13e
	.byte	0x18
	.uleb128 0x8
	.long	.LASF442
	.byte	0xd
	.byte	0x3a
	.long	0x13e
	.byte	0x1c
	.uleb128 0x8
	.long	.LASF443
	.byte	0xd
	.byte	0x3b
	.long	0x13e
	.byte	0x20
	.uleb128 0x8
	.long	.LASF444
	.byte	0xd
	.byte	0x3c
	.long	0x13e
	.byte	0x24
	.uleb128 0x8
	.long	.LASF445
	.byte	0xd
	.byte	0x3d
	.long	0x303
	.byte	0x28
	.byte	0
	.uleb128 0x14
	.long	0xf63
	.long	0x120f
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xd5f
	.long	0x121f
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x122f
	.long	0x122f
	.uleb128 0x15
	.long	0x145
	.byte	0
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x1235
	.uleb128 0x1c
	.long	.LASF446
	.uleb128 0x7
	.long	.LASF447
	.byte	0xc
	.byte	0x50
	.long	0xf88
	.uleb128 0x4
	.long	.LASF448
	.byte	0x30
	.byte	0xc
	.byte	0x53
	.long	0x128e
	.uleb128 0x8
	.long	.LASF449
	.byte	0xc
	.byte	0x54
	.long	0x2b9
	.byte	0
	.uleb128 0x8
	.long	.LASF450
	.byte	0xc
	.byte	0x55
	.long	0x2b9
	.byte	0x8
	.uleb128 0x8
	.long	.LASF451
	.byte	0xc
	.byte	0x57
	.long	0x2b9
	.byte	0x10
	.uleb128 0x8
	.long	.LASF452
	.byte	0xc
	.byte	0x58
	.long	0x500
	.byte	0x18
	.uleb128 0x8
	.long	.LASF453
	.byte	0xc
	.byte	0x59
	.long	0x123a
	.byte	0x20
	.byte	0
	.uleb128 0x7
	.long	.LASF454
	.byte	0xc
	.byte	0x5a
	.long	0x1299
	.uleb128 0x3
	.byte	0x8
	.long	0x1245
	.uleb128 0x7
	.long	.LASF455
	.byte	0xe
	.byte	0x29
	.long	0x2c4
	.uleb128 0x4
	.long	.LASF456
	.byte	0x28
	.byte	0xa
	.byte	0x2b
	.long	0x12e7
	.uleb128 0x8
	.long	.LASF457
	.byte	0xa
	.byte	0x2d
	.long	0x12e7
	.byte	0
	.uleb128 0x8
	.long	.LASF458
	.byte	0xa
	.byte	0x2e
	.long	0x12e7
	.byte	0x8
	.uleb128 0x8
	.long	.LASF337
	.byte	0xa
	.byte	0x2f
	.long	0x2a9
	.byte	0x10
	.uleb128 0x8
	.long	.LASF459
	.byte	0xa
	.byte	0x30
	.long	0x12ed
	.byte	0x18
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x12aa
	.uleb128 0x14
	.long	0x2c4
	.long	0x12fd
	.uleb128 0x15
	.long	0x145
	.byte	0x1
	.byte	0
	.uleb128 0x7
	.long	.LASF460
	.byte	0xa
	.byte	0x31
	.long	0x12aa
	.uleb128 0x3
	.byte	0x8
	.long	0x12fd
	.uleb128 0x7
	.long	.LASF429
	.byte	0xa
	.byte	0x39
	.long	0xc8c
	.uleb128 0x4
	.long	.LASF461
	.byte	0x18
	.byte	0xf
	.byte	0x1f
	.long	0x1356
	.uleb128 0x8
	.long	.LASF462
	.byte	0xf
	.byte	0x21
	.long	0x2a9
	.byte	0
	.uleb128 0x8
	.long	.LASF321
	.byte	0xf
	.byte	0x22
	.long	0x2a9
	.byte	0x4
	.uleb128 0x8
	.long	.LASF463
	.byte	0xf
	.byte	0x23
	.long	0x2a9
	.byte	0x8
	.uleb128 0x8
	.long	.LASF464
	.byte	0xf
	.byte	0x24
	.long	0x10cd
	.byte	0x10
	.byte	0
	.uleb128 0x7
	.long	.LASF465
	.byte	0xf
	.byte	0x25
	.long	0x1361
	.uleb128 0x3
	.byte	0x8
	.long	0x1319
	.uleb128 0x3
	.byte	0x8
	.long	0x2c4
	.uleb128 0x7
	.long	.LASF466
	.byte	0xb
	.byte	0x21
	.long	0x130e
	.uleb128 0x7
	.long	.LASF467
	.byte	0xb
	.byte	0x74
	.long	0x2b2
	.uleb128 0x4
	.long	.LASF468
	.byte	0x40
	.byte	0xb
	.byte	0x77
	.long	0x13fc
	.uleb128 0x8
	.long	.LASF469
	.byte	0xb
	.byte	0x79
	.long	0x13fc
	.byte	0
	.uleb128 0x8
	.long	.LASF470
	.byte	0xb
	.byte	0x79
	.long	0x13fc
	.byte	0x8
	.uleb128 0x6
	.string	"src"
	.byte	0xb
	.byte	0x7c
	.long	0xd5f
	.byte	0x10
	.uleb128 0x8
	.long	.LASF471
	.byte	0xb
	.byte	0x7c
	.long	0xd5f
	.byte	0x18
	.uleb128 0x8
	.long	.LASF472
	.byte	0xb
	.byte	0x7f
	.long	0x2d
	.byte	0x20
	.uleb128 0x6
	.string	"aux"
	.byte	0xb
	.byte	0x82
	.long	0x2b0
	.byte	0x28
	.uleb128 0x8
	.long	.LASF352
	.byte	0xb
	.byte	0x84
	.long	0x13e
	.byte	0x30
	.uleb128 0x8
	.long	.LASF473
	.byte	0xb
	.byte	0x85
	.long	0x13e
	.byte	0x34
	.uleb128 0x8
	.long	.LASF350
	.byte	0xb
	.byte	0x86
	.long	0x1378
	.byte	0x38
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x1383
	.uleb128 0x7
	.long	.LASF474
	.byte	0xb
	.byte	0x88
	.long	0x13fc
	.uleb128 0x7
	.long	.LASF444
	.byte	0xb
	.byte	0xdb
	.long	0xd5f
	.uleb128 0xd
	.long	.LASF475
	.byte	0x4
	.byte	0xb
	.value	0x223
	.long	0x1438
	.uleb128 0xe
	.long	.LASF476
	.sleb128 0
	.uleb128 0xe
	.long	.LASF477
	.sleb128 1
	.uleb128 0xe
	.long	.LASF478
	.sleb128 2
	.byte	0
	.uleb128 0x4
	.long	.LASF479
	.byte	0x18
	.byte	0x10
	.byte	0x16
	.long	0x1475
	.uleb128 0x8
	.long	.LASF480
	.byte	0x10
	.byte	0x18
	.long	0x2d
	.byte	0
	.uleb128 0x8
	.long	.LASF481
	.byte	0x10
	.byte	0x19
	.long	0x51f
	.byte	0x8
	.uleb128 0x8
	.long	.LASF482
	.byte	0x10
	.byte	0x1a
	.long	0x13e
	.byte	0xc
	.uleb128 0x8
	.long	.LASF457
	.byte	0x10
	.byte	0x1b
	.long	0x1475
	.byte	0x10
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x1438
	.uleb128 0x4
	.long	.LASF483
	.byte	0x20
	.byte	0x10
	.byte	0x23
	.long	0x14b8
	.uleb128 0x8
	.long	.LASF335
	.byte	0x10
	.byte	0x26
	.long	0x2d
	.byte	0
	.uleb128 0x8
	.long	.LASF484
	.byte	0x10
	.byte	0x26
	.long	0x2d
	.byte	0x8
	.uleb128 0x8
	.long	.LASF485
	.byte	0x10
	.byte	0x27
	.long	0x123
	.byte	0x10
	.uleb128 0x8
	.long	.LASF457
	.byte	0x10
	.byte	0x28
	.long	0x14b8
	.byte	0x18
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x147b
	.uleb128 0x4
	.long	.LASF486
	.byte	0x58
	.byte	0x10
	.byte	0x35
	.long	0x1567
	.uleb128 0x8
	.long	.LASF487
	.byte	0x10
	.byte	0x39
	.long	0x13e
	.byte	0
	.uleb128 0x8
	.long	.LASF488
	.byte	0x10
	.byte	0x3c
	.long	0x13e
	.byte	0x4
	.uleb128 0x8
	.long	.LASF489
	.byte	0x10
	.byte	0x43
	.long	0x2d
	.byte	0x8
	.uleb128 0x8
	.long	.LASF490
	.byte	0x10
	.byte	0x44
	.long	0x2d
	.byte	0x10
	.uleb128 0x8
	.long	.LASF485
	.byte	0x10
	.byte	0x49
	.long	0x123
	.byte	0x18
	.uleb128 0x8
	.long	.LASF483
	.byte	0x10
	.byte	0x4f
	.long	0x14b8
	.byte	0x20
	.uleb128 0x8
	.long	.LASF491
	.byte	0x10
	.byte	0x53
	.long	0x13e
	.byte	0x28
	.uleb128 0x8
	.long	.LASF492
	.byte	0x10
	.byte	0x57
	.long	0x13e
	.byte	0x2c
	.uleb128 0x8
	.long	.LASF493
	.byte	0x10
	.byte	0x58
	.long	0x500
	.byte	0x30
	.uleb128 0x8
	.long	.LASF494
	.byte	0x10
	.byte	0x5e
	.long	0x13e
	.byte	0x38
	.uleb128 0x8
	.long	.LASF495
	.byte	0x10
	.byte	0x63
	.long	0x1567
	.byte	0x40
	.uleb128 0x8
	.long	.LASF496
	.byte	0x10
	.byte	0x67
	.long	0x156d
	.byte	0x48
	.uleb128 0x8
	.long	.LASF497
	.byte	0x10
	.byte	0x6b
	.long	0xf07
	.byte	0x50
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x2cb
	.uleb128 0x3
	.byte	0x8
	.long	0x123
	.uleb128 0x4
	.long	.LASF498
	.byte	0x30
	.byte	0x10
	.byte	0x77
	.long	0x15d4
	.uleb128 0x8
	.long	.LASF499
	.byte	0x10
	.byte	0x7b
	.long	0x13e
	.byte	0
	.uleb128 0x8
	.long	.LASF500
	.byte	0x10
	.byte	0x8c
	.long	0x13e
	.byte	0x4
	.uleb128 0x8
	.long	.LASF501
	.byte	0x10
	.byte	0x92
	.long	0x13e
	.byte	0x8
	.uleb128 0x8
	.long	.LASF502
	.byte	0x10
	.byte	0x97
	.long	0x2d
	.byte	0x10
	.uleb128 0x8
	.long	.LASF503
	.byte	0x10
	.byte	0x9a
	.long	0x2d
	.byte	0x18
	.uleb128 0x8
	.long	.LASF504
	.byte	0x10
	.byte	0x9d
	.long	0x2d
	.byte	0x20
	.uleb128 0x8
	.long	.LASF505
	.byte	0x10
	.byte	0xa0
	.long	0x2d
	.byte	0x28
	.byte	0
	.uleb128 0x1d
	.long	.LASF506
	.value	0x1b0
	.byte	0x10
	.byte	0xae
	.long	0x1a54
	.uleb128 0x6
	.string	"eh"
	.byte	0x10
	.byte	0xb0
	.long	0x1a59
	.byte	0
	.uleb128 0x8
	.long	.LASF507
	.byte	0x10
	.byte	0xb1
	.long	0x1a64
	.byte	0x8
	.uleb128 0x8
	.long	.LASF319
	.byte	0x10
	.byte	0xb2
	.long	0x1a6a
	.byte	0x10
	.uleb128 0x8
	.long	.LASF508
	.byte	0x10
	.byte	0xb3
	.long	0x1a70
	.byte	0x18
	.uleb128 0x8
	.long	.LASF509
	.byte	0x10
	.byte	0xb4
	.long	0x1a7b
	.byte	0x20
	.uleb128 0x8
	.long	.LASF452
	.byte	0x10
	.byte	0xb9
	.long	0x500
	.byte	0x28
	.uleb128 0x8
	.long	.LASF510
	.byte	0x10
	.byte	0xbc
	.long	0x123
	.byte	0x30
	.uleb128 0x8
	.long	.LASF511
	.byte	0x10
	.byte	0xbf
	.long	0x1a81
	.byte	0x38
	.uleb128 0x8
	.long	.LASF512
	.byte	0x10
	.byte	0xc4
	.long	0x13e
	.byte	0x40
	.uleb128 0x8
	.long	.LASF513
	.byte	0x10
	.byte	0xc9
	.long	0x13e
	.byte	0x44
	.uleb128 0x8
	.long	.LASF514
	.byte	0x10
	.byte	0xce
	.long	0x13e
	.byte	0x48
	.uleb128 0x8
	.long	.LASF515
	.byte	0x10
	.byte	0xd2
	.long	0x13e
	.byte	0x4c
	.uleb128 0x8
	.long	.LASF516
	.byte	0x10
	.byte	0xd6
	.long	0x2d
	.byte	0x50
	.uleb128 0x8
	.long	.LASF517
	.byte	0x10
	.byte	0xda
	.long	0x29d
	.byte	0x58
	.uleb128 0x8
	.long	.LASF518
	.byte	0x10
	.byte	0xe0
	.long	0x2d
	.byte	0x78
	.uleb128 0x8
	.long	.LASF519
	.byte	0x10
	.byte	0xe3
	.long	0x2d
	.byte	0x80
	.uleb128 0x8
	.long	.LASF520
	.byte	0x10
	.byte	0xe7
	.long	0x500
	.byte	0x88
	.uleb128 0x8
	.long	.LASF521
	.byte	0x10
	.byte	0xeb
	.long	0x1a8c
	.byte	0x90
	.uleb128 0x8
	.long	.LASF522
	.byte	0x10
	.byte	0xee
	.long	0x13e
	.byte	0x98
	.uleb128 0x8
	.long	.LASF523
	.byte	0x10
	.byte	0xf3
	.long	0x123
	.byte	0xa0
	.uleb128 0x8
	.long	.LASF524
	.byte	0x10
	.byte	0xf9
	.long	0x2d
	.byte	0xa8
	.uleb128 0x8
	.long	.LASF525
	.byte	0x10
	.byte	0xfd
	.long	0x2d
	.byte	0xb0
	.uleb128 0x10
	.long	.LASF526
	.byte	0x10
	.value	0x102
	.long	0x2d
	.byte	0xb8
	.uleb128 0x10
	.long	.LASF527
	.byte	0x10
	.value	0x108
	.long	0x2d
	.byte	0xc0
	.uleb128 0x10
	.long	.LASF528
	.byte	0x10
	.value	0x10d
	.long	0x2d
	.byte	0xc8
	.uleb128 0x10
	.long	.LASF529
	.byte	0x10
	.value	0x111
	.long	0x2d
	.byte	0xd0
	.uleb128 0x10
	.long	.LASF530
	.byte	0x10
	.value	0x115
	.long	0x2d
	.byte	0xd8
	.uleb128 0x10
	.long	.LASF531
	.byte	0x10
	.value	0x118
	.long	0x123
	.byte	0xe0
	.uleb128 0x10
	.long	.LASF532
	.byte	0x10
	.value	0x11c
	.long	0x2d
	.byte	0xe8
	.uleb128 0x10
	.long	.LASF533
	.byte	0x10
	.value	0x11f
	.long	0x2d
	.byte	0xf0
	.uleb128 0x10
	.long	.LASF534
	.byte	0x10
	.value	0x125
	.long	0x2d
	.byte	0xf8
	.uleb128 0x1e
	.long	.LASF535
	.byte	0x10
	.value	0x12a
	.long	0x2d
	.value	0x100
	.uleb128 0x1e
	.long	.LASF536
	.byte	0x10
	.value	0x12f
	.long	0x2b2
	.value	0x108
	.uleb128 0x1e
	.long	.LASF537
	.byte	0x10
	.value	0x134
	.long	0x123
	.value	0x110
	.uleb128 0x1e
	.long	.LASF538
	.byte	0x10
	.value	0x13d
	.long	0x123
	.value	0x118
	.uleb128 0x1e
	.long	.LASF539
	.byte	0x10
	.value	0x140
	.long	0x2d
	.value	0x120
	.uleb128 0x1e
	.long	.LASF540
	.byte	0x10
	.value	0x144
	.long	0x2d
	.value	0x128
	.uleb128 0x1e
	.long	.LASF541
	.byte	0x10
	.value	0x148
	.long	0x2a9
	.value	0x130
	.uleb128 0x1e
	.long	.LASF542
	.byte	0x10
	.value	0x14e
	.long	0xf07
	.value	0x138
	.uleb128 0x1e
	.long	.LASF543
	.byte	0x10
	.value	0x151
	.long	0x1a97
	.value	0x140
	.uleb128 0x1e
	.long	.LASF544
	.byte	0x10
	.value	0x154
	.long	0x13e
	.value	0x148
	.uleb128 0x1e
	.long	.LASF545
	.byte	0x10
	.value	0x157
	.long	0x13e
	.value	0x14c
	.uleb128 0x1e
	.long	.LASF546
	.byte	0x10
	.value	0x15d
	.long	0x13e
	.value	0x150
	.uleb128 0x1e
	.long	.LASF547
	.byte	0x10
	.value	0x161
	.long	0x1475
	.value	0x158
	.uleb128 0x1e
	.long	.LASF548
	.byte	0x10
	.value	0x164
	.long	0x13e
	.value	0x160
	.uleb128 0x1e
	.long	.LASF549
	.byte	0x10
	.value	0x165
	.long	0x13e
	.value	0x164
	.uleb128 0x1e
	.long	.LASF550
	.byte	0x10
	.value	0x167
	.long	0x2b0
	.value	0x168
	.uleb128 0x1e
	.long	.LASF551
	.byte	0x10
	.value	0x168
	.long	0x123
	.value	0x170
	.uleb128 0x1e
	.long	.LASF552
	.byte	0x10
	.value	0x16b
	.long	0x2d
	.value	0x178
	.uleb128 0x1e
	.long	.LASF553
	.byte	0x10
	.value	0x16d
	.long	0x13e
	.value	0x180
	.uleb128 0x1e
	.long	.LASF554
	.byte	0x10
	.value	0x170
	.long	0x13e
	.value	0x184
	.uleb128 0x1e
	.long	.LASF555
	.byte	0x10
	.value	0x175
	.long	0x1aa2
	.value	0x188
	.uleb128 0x1e
	.long	.LASF556
	.byte	0x10
	.value	0x177
	.long	0x13e
	.value	0x190
	.uleb128 0x1e
	.long	.LASF557
	.byte	0x10
	.value	0x179
	.long	0x13e
	.value	0x194
	.uleb128 0x1e
	.long	.LASF558
	.byte	0x10
	.value	0x17c
	.long	0x1aad
	.value	0x198
	.uleb128 0x1e
	.long	.LASF559
	.byte	0x10
	.value	0x182
	.long	0x2d
	.value	0x1a0
	.uleb128 0x1f
	.long	.LASF560
	.byte	0x10
	.value	0x188
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF561
	.byte	0x10
	.value	0x18c
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF562
	.byte	0x10
	.value	0x18f
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x1d
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF563
	.byte	0x10
	.value	0x192
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x1c
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF564
	.byte	0x10
	.value	0x195
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF565
	.byte	0x10
	.value	0x198
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x1a
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF566
	.byte	0x10
	.value	0x19c
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x19
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF567
	.byte	0x10
	.value	0x19f
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x18
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF568
	.byte	0x10
	.value	0x1a3
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF569
	.byte	0x10
	.value	0x1a7
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF570
	.byte	0x10
	.value	0x1aa
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF571
	.byte	0x10
	.value	0x1ad
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF572
	.byte	0x10
	.value	0x1b2
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF573
	.byte	0x10
	.value	0x1b6
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF574
	.byte	0x10
	.value	0x1b9
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF575
	.byte	0x10
	.value	0x1bd
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF576
	.byte	0x10
	.value	0x1c1
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF577
	.byte	0x10
	.value	0x1c5
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF578
	.byte	0x10
	.value	0x1cb
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF579
	.byte	0x10
	.value	0x1d4
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF580
	.byte	0x10
	.value	0x1d7
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF581
	.byte	0x10
	.value	0x1da
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF582
	.byte	0x10
	.value	0x1dd
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.value	0x1a8
	.uleb128 0x1f
	.long	.LASF583
	.byte	0x10
	.value	0x1e0
	.long	0x2a9
	.byte	0x4
	.byte	0x1
	.byte	0x8
	.value	0x1a8
	.byte	0
	.uleb128 0x1c
	.long	.LASF584
	.uleb128 0x3
	.byte	0x8
	.long	0x1a54
	.uleb128 0x1c
	.long	.LASF585
	.uleb128 0x3
	.byte	0x8
	.long	0x1a5f
	.uleb128 0x3
	.byte	0x8
	.long	0x1573
	.uleb128 0x3
	.byte	0x8
	.long	0x14be
	.uleb128 0x1c
	.long	.LASF586
	.uleb128 0x3
	.byte	0x8
	.long	0x1a76
	.uleb128 0x3
	.byte	0x8
	.long	0x15d4
	.uleb128 0x1c
	.long	.LASF587
	.uleb128 0x3
	.byte	0x8
	.long	0x1a87
	.uleb128 0x1c
	.long	.LASF588
	.uleb128 0x3
	.byte	0x8
	.long	0x1a92
	.uleb128 0x1c
	.long	.LASF589
	.uleb128 0x3
	.byte	0x8
	.long	0x1a9d
	.uleb128 0x1c
	.long	.LASF590
	.uleb128 0x3
	.byte	0x8
	.long	0x1aa8
	.uleb128 0xd
	.long	.LASF591
	.byte	0x4
	.byte	0x11
	.value	0x2ed
	.long	0x1ad3
	.uleb128 0xe
	.long	.LASF592
	.sleb128 0
	.uleb128 0xe
	.long	.LASF593
	.sleb128 1
	.uleb128 0xe
	.long	.LASF594
	.sleb128 2
	.byte	0
	.uleb128 0x20
	.byte	0x8
	.byte	0x1
	.value	0x13d
	.long	0x1af1
	.uleb128 0x21
	.string	"r"
	.byte	0x1
	.value	0x13d
	.long	0x2d
	.uleb128 0x21
	.string	"i"
	.byte	0x1
	.value	0x13d
	.long	0x2a9
	.byte	0
	.uleb128 0x20
	.byte	0x8
	.byte	0x1
	.value	0x13e
	.long	0x1b0f
	.uleb128 0x21
	.string	"r"
	.byte	0x1
	.value	0x13e
	.long	0xf07
	.uleb128 0x21
	.string	"i"
	.byte	0x1
	.value	0x13e
	.long	0x1b0f
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x2a9
	.uleb128 0xf
	.long	.LASF595
	.byte	0x20
	.byte	0x1
	.value	0x139
	.long	0x1b57
	.uleb128 0x10
	.long	.LASF457
	.byte	0x1
	.value	0x13b
	.long	0x1b57
	.byte	0
	.uleb128 0x10
	.long	.LASF596
	.byte	0x1
	.value	0x13c
	.long	0x13e
	.byte	0x8
	.uleb128 0x10
	.long	.LASF597
	.byte	0x1
	.value	0x13d
	.long	0x1ad3
	.byte	0x10
	.uleb128 0x10
	.long	.LASF598
	.byte	0x1
	.value	0x13e
	.long	0x1af1
	.byte	0x18
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x1b15
	.uleb128 0xf
	.long	.LASF599
	.byte	0x18
	.byte	0x1
	.value	0x147
	.long	0x1b92
	.uleb128 0x10
	.long	.LASF600
	.byte	0x1
	.value	0x149
	.long	0x1b57
	.byte	0
	.uleb128 0x10
	.long	.LASF601
	.byte	0x1
	.value	0x14a
	.long	0x1b57
	.byte	0x8
	.uleb128 0x10
	.long	.LASF602
	.byte	0x1
	.value	0x14b
	.long	0x2d
	.byte	0x10
	.byte	0
	.uleb128 0x22
	.long	.LASF606
	.byte	0x1
	.value	0x1a2
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c00
	.uleb128 0x23
	.long	.LASF603
	.byte	0x1
	.value	0x1a3
	.long	0xf07
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x23
	.long	.LASF604
	.byte	0x1
	.value	0x1a3
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x24
	.string	"buf"
	.byte	0x1
	.value	0x1a5
	.long	0x1b57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF605
	.byte	0x1
	.value	0x1a6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x26
	.long	.LASF658
	.long	0x1c10
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11361
	.byte	0
	.uleb128 0x14
	.long	0x303
	.long	0x1c10
	.uleb128 0x15
	.long	0x145
	.byte	0x8
	.byte	0
	.uleb128 0xa
	.long	0x1c00
	.uleb128 0x22
	.long	.LASF607
	.byte	0x1
	.value	0x1da
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c70
	.uleb128 0x23
	.long	.LASF603
	.byte	0x1
	.value	0x1db
	.long	0x1b0f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF604
	.byte	0x1
	.value	0x1db
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x24
	.string	"buf"
	.byte	0x1
	.value	0x1dd
	.long	0x1b57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x25
	.long	.LASF605
	.byte	0x1
	.value	0x1de
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x27
	.long	.LASF813
	.byte	0x1
	.value	0x1f9
	.long	0x13e
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d71
	.uleb128 0x28
	.string	"f"
	.byte	0x1
	.value	0x1fa
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x23
	.long	.LASF55
	.byte	0x1
	.value	0x1fb
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x25
	.long	.LASF608
	.byte	0x1
	.value	0x1fd
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF457
	.byte	0x1
	.value	0x1fd
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x201
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x25
	.long	.LASF609
	.byte	0x1
	.value	0x202
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF610
	.byte	0x1
	.value	0x202
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF611
	.byte	0x1
	.value	0x204
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x29
	.long	.LASF656
	.byte	0x1
	.value	0x2e3
	.quad	.L26
	.uleb128 0x2a
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.long	0x1d40
	.uleb128 0x25
	.long	.LASF612
	.byte	0x1
	.value	0x28a
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x2b
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.uleb128 0x25
	.long	.LASF595
	.byte	0x1
	.value	0x300
	.long	0x1b57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF457
	.byte	0x1
	.value	0x300
	.long	0x1b57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x22
	.long	.LASF613
	.byte	0x1
	.value	0x319
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d9f
	.uleb128 0x25
	.long	.LASF55
	.byte	0x1
	.value	0x31b
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x2c
	.long	.LASF986
	.byte	0x1
	.value	0x32b
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x22
	.long	.LASF614
	.byte	0x1
	.value	0x353
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e34
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x354
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"set"
	.byte	0x1
	.value	0x355
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF453
	.byte	0x1
	.value	0x356
	.long	0x2b0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x24
	.string	"num"
	.byte	0x1
	.value	0x358
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2b
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.uleb128 0x24
	.string	"src"
	.byte	0x1
	.value	0x375
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF620
	.byte	0x1
	.value	0x3a8
	.long	0x13e
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f90
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x3a9
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x28
	.string	"i3"
	.byte	0x1
	.value	0x3aa
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x23
	.long	.LASF342
	.byte	0x1
	.value	0x3ab
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x23
	.long	.LASF343
	.byte	0x1
	.value	0x3ac
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x23
	.long	.LASF615
	.byte	0x1
	.value	0x3ad
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x23
	.long	.LASF616
	.byte	0x1
	.value	0x3ad
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x3af
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.string	"set"
	.byte	0x1
	.value	0x3b0
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x24
	.string	"src"
	.byte	0x1
	.value	0x3b0
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x25
	.long	.LASF471
	.byte	0x1
	.value	0x3b0
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x24
	.string	"p"
	.byte	0x1
	.value	0x3b1
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF617
	.byte	0x1
	.value	0x3b5
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.uleb128 0x24
	.string	"elt"
	.byte	0x1
	.value	0x3cf
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.quad	.LBB6
	.quad	.LBE6-.LBB6
	.uleb128 0x25
	.long	.LASF618
	.byte	0x1
	.value	0x3e6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x3e7
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x3e8
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2b
	.quad	.LBB7
	.quad	.LBE7-.LBB7
	.uleb128 0x25
	.long	.LASF619
	.byte	0x1
	.value	0x3ec
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF621
	.byte	0x1
	.value	0x4cc
	.long	0x13e
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fde
	.uleb128 0x28
	.string	"pat"
	.byte	0x1
	.value	0x4cd
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x4cf
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x25
	.long	.LASF622
	.byte	0x1
	.value	0x4d0
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2d
	.long	.LASF623
	.byte	0x1
	.value	0x516
	.long	0x13e
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x20de
	.uleb128 0x28
	.string	"i3"
	.byte	0x1
	.value	0x517
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x28
	.string	"loc"
	.byte	0x1
	.value	0x518
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x23
	.long	.LASF624
	.byte	0x1
	.value	0x519
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x23
	.long	.LASF625
	.byte	0x1
	.value	0x51a
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x23
	.long	.LASF626
	.byte	0x1
	.value	0x51b
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x23
	.long	.LASF627
	.byte	0x1
	.value	0x51c
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x24
	.string	"x"
	.byte	0x1
	.value	0x51e
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.quad	.LBB8
	.quad	.LBE8-.LBB8
	.long	0x20be
	.uleb128 0x24
	.string	"set"
	.byte	0x1
	.value	0x522
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF471
	.byte	0x1
	.value	0x523
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x24
	.string	"src"
	.byte	0x1
	.value	0x524
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x25
	.long	.LASF622
	.byte	0x1
	.value	0x525
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2b
	.quad	.LBB9
	.quad	.LBE9-.LBB9
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x57b
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF628
	.byte	0x1
	.value	0x58a
	.long	0x13e
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.uleb128 0x1
	.byte	0x9c
	.long	0x210e
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x58b
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2d
	.long	.LASF629
	.byte	0x1
	.value	0x5aa
	.long	0x13e
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x216d
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x5ab
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.string	"set"
	.byte	0x1
	.value	0x5ad
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x24
	.string	"src"
	.byte	0x1
	.value	0x5ae
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF471
	.byte	0x1
	.value	0x5ae
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x2d
	.long	.LASF630
	.byte	0x1
	.value	0x5e1
	.long	0x2d
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x283d
	.uleb128 0x28
	.string	"i3"
	.byte	0x1
	.value	0x5e2
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -552
	.uleb128 0x28
	.string	"i2"
	.byte	0x1
	.value	0x5e2
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -560
	.uleb128 0x28
	.string	"i1"
	.byte	0x1
	.value	0x5e2
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -568
	.uleb128 0x23
	.long	.LASF611
	.byte	0x1
	.value	0x5e3
	.long	0x519
	.uleb128 0x3
	.byte	0x91
	.sleb128 -576
	.uleb128 0x25
	.long	.LASF631
	.byte	0x1
	.value	0x5e6
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -440
	.uleb128 0x25
	.long	.LASF632
	.byte	0x1
	.value	0x5e6
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -432
	.uleb128 0x25
	.long	.LASF633
	.byte	0x1
	.value	0x5e7
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -532
	.uleb128 0x25
	.long	.LASF634
	.byte	0x1
	.value	0x5e7
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -528
	.uleb128 0x25
	.long	.LASF635
	.byte	0x1
	.value	0x5e9
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -524
	.uleb128 0x25
	.long	.LASF636
	.byte	0x1
	.value	0x5e9
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -520
	.uleb128 0x25
	.long	.LASF637
	.byte	0x1
	.value	0x5eb
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -516
	.uleb128 0x25
	.long	.LASF638
	.byte	0x1
	.value	0x5ed
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -460
	.uleb128 0x25
	.long	.LASF639
	.byte	0x1
	.value	0x5ef
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -512
	.uleb128 0x25
	.long	.LASF640
	.byte	0x1
	.value	0x5ef
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -508
	.uleb128 0x25
	.long	.LASF641
	.byte	0x1
	.value	0x5ef
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -504
	.uleb128 0x25
	.long	.LASF642
	.byte	0x1
	.value	0x5f3
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -424
	.uleb128 0x25
	.long	.LASF624
	.byte	0x1
	.value	0x5f5
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -416
	.uleb128 0x25
	.long	.LASF643
	.byte	0x1
	.value	0x5f5
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -408
	.uleb128 0x25
	.long	.LASF625
	.byte	0x1
	.value	0x5f5
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -400
	.uleb128 0x25
	.long	.LASF644
	.byte	0x1
	.value	0x5f5
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -392
	.uleb128 0x25
	.long	.LASF645
	.byte	0x1
	.value	0x5f7
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -352
	.uleb128 0x25
	.long	.LASF646
	.byte	0x1
	.value	0x5f9
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -500
	.uleb128 0x25
	.long	.LASF647
	.byte	0x1
	.value	0x5f9
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -496
	.uleb128 0x25
	.long	.LASF648
	.byte	0x1
	.value	0x5f9
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -492
	.uleb128 0x25
	.long	.LASF649
	.byte	0x1
	.value	0x5fa
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -472
	.uleb128 0x25
	.long	.LASF650
	.byte	0x1
	.value	0x5fc
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -384
	.uleb128 0x25
	.long	.LASF651
	.byte	0x1
	.value	0x5fc
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -376
	.uleb128 0x25
	.long	.LASF652
	.byte	0x1
	.value	0x5fe
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -488
	.uleb128 0x25
	.long	.LASF653
	.byte	0x1
	.value	0x600
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -484
	.uleb128 0x25
	.long	.LASF654
	.byte	0x1
	.value	0x602
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -464
	.uleb128 0x25
	.long	.LASF655
	.byte	0x1
	.value	0x603
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -344
	.uleb128 0x25
	.long	.LASF612
	.byte	0x1
	.value	0x604
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -336
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x605
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -480
	.uleb128 0x29
	.long	.LASF657
	.byte	0x1
	.value	0x814
	.quad	.L198
	.uleb128 0x26
	.long	.LASF658
	.long	0x284d
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11561
	.uleb128 0x2a
	.quad	.LBB10
	.quad	.LBE10-.LBB10
	.long	0x23e2
	.uleb128 0x24
	.string	"p2"
	.byte	0x1
	.value	0x644
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.byte	0
	.uleb128 0x2a
	.quad	.LBB11
	.quad	.LBE11-.LBB11
	.long	0x2438
	.uleb128 0x24
	.string	"lo"
	.byte	0x1
	.value	0x682
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -328
	.uleb128 0x24
	.string	"hi"
	.byte	0x1
	.value	0x682
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -320
	.uleb128 0x2b
	.quad	.LBB12
	.quad	.LBE12-.LBB12
	.uleb128 0x25
	.long	.LASF659
	.byte	0x1
	.value	0x69b
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -468
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LBB13
	.quad	.LBE13-.LBB13
	.long	0x24a0
	.uleb128 0x25
	.long	.LASF660
	.byte	0x1
	.value	0x77f
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x25
	.long	.LASF661
	.byte	0x1
	.value	0x780
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -456
	.uleb128 0x2b
	.quad	.LBB14
	.quad	.LBE14-.LBB14
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x795
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -452
	.uleb128 0x25
	.long	.LASF662
	.byte	0x1
	.value	0x796
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LBB15
	.quad	.LBE15-.LBB15
	.long	0x24c6
	.uleb128 0x24
	.string	"old"
	.byte	0x1
	.value	0x7f1
	.long	0xed
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.byte	0
	.uleb128 0x2a
	.quad	.LBB16
	.quad	.LBE16-.LBB16
	.long	0x24ec
	.uleb128 0x24
	.string	"old"
	.byte	0x1
	.value	0x7f9
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.byte	0
	.uleb128 0x2a
	.quad	.LBB17
	.quad	.LBE17-.LBB17
	.long	0x25ec
	.uleb128 0x25
	.long	.LASF663
	.byte	0x1
	.value	0x848
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -368
	.uleb128 0x25
	.long	.LASF664
	.byte	0x1
	.value	0x848
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.long	.LASF665
	.byte	0x1
	.value	0x849
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -312
	.uleb128 0x2a
	.quad	.LBB18
	.quad	.LBE18-.LBB18
	.long	0x25a9
	.uleb128 0x25
	.long	.LASF666
	.byte	0x1
	.value	0x88b
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x25
	.long	.LASF667
	.byte	0x1
	.value	0x88b
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.long	.LASF668
	.byte	0x1
	.value	0x88c
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -360
	.uleb128 0x2b
	.quad	.LBB19
	.quad	.LBE19-.LBB19
	.uleb128 0x25
	.long	.LASF669
	.byte	0x1
	.value	0x8ac
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x25
	.long	.LASF670
	.byte	0x1
	.value	0x8ad
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -296
	.byte	0
	.byte	0
	.uleb128 0x2b
	.quad	.LBB20
	.quad	.LBE20-.LBB20
	.uleb128 0x25
	.long	.LASF671
	.byte	0x1
	.value	0x8d4
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -288
	.uleb128 0x25
	.long	.LASF672
	.byte	0x1
	.value	0x8d5
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -476
	.uleb128 0x25
	.long	.LASF673
	.byte	0x1
	.value	0x8d6
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -448
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LBB21
	.quad	.LBE21-.LBB21
	.long	0x2644
	.uleb128 0x25
	.long	.LASF665
	.byte	0x1
	.value	0x92f
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2b
	.quad	.LBB22
	.quad	.LBE22-.LBB22
	.uleb128 0x25
	.long	.LASF608
	.byte	0x1
	.value	0x93d
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -280
	.uleb128 0x25
	.long	.LASF612
	.byte	0x1
	.value	0x93e
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LBB23
	.quad	.LBE23-.LBB23
	.long	0x269a
	.uleb128 0x25
	.long	.LASF674
	.byte	0x1
	.value	0x9a4
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -368
	.uleb128 0x25
	.long	.LASF675
	.byte	0x1
	.value	0x9a5
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -360
	.uleb128 0x25
	.long	.LASF676
	.byte	0x1
	.value	0x9a6
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -264
	.uleb128 0x25
	.long	.LASF457
	.byte	0x1
	.value	0x9a6
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x2b
	.quad	.LBB24
	.quad	.LBE24-.LBB24
	.uleb128 0x25
	.long	.LASF677
	.byte	0x1
	.value	0x9df
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x25
	.long	.LASF678
	.byte	0x1
	.value	0x9df
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x25
	.long	.LASF679
	.byte	0x1
	.value	0x9df
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x25
	.long	.LASF680
	.byte	0x1
	.value	0x9e0
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF681
	.byte	0x1
	.value	0x9e0
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF682
	.byte	0x1
	.value	0x9e0
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x25
	.long	.LASF683
	.byte	0x1
	.value	0x9e1
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -360
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x9e2
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -444
	.uleb128 0x25
	.long	.LASF684
	.byte	0x1
	.value	0x9e6
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.long	.LASF685
	.byte	0x1
	.value	0x9e9
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.quad	.LBB25
	.quad	.LBE25-.LBB25
	.long	0x276f
	.uleb128 0x25
	.long	.LASF686
	.byte	0x1
	.value	0xa0d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2a
	.quad	.LBB26
	.quad	.LBE26-.LBB26
	.long	0x2795
	.uleb128 0x25
	.long	.LASF612
	.byte	0x1
	.value	0xa3a
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.byte	0
	.uleb128 0x2a
	.quad	.LBB27
	.quad	.LBE27-.LBB27
	.long	0x27ea
	.uleb128 0x25
	.long	.LASF612
	.byte	0x1
	.value	0xaca
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x25
	.long	.LASF687
	.byte	0x1
	.value	0xacb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x25
	.long	.LASF688
	.byte	0x1
	.value	0xacb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x24
	.string	"set"
	.byte	0x1
	.value	0xacb
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x2b
	.quad	.LBB28
	.quad	.LBE28-.LBB28
	.uleb128 0x25
	.long	.LASF612
	.byte	0x1
	.value	0xae9
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x25
	.long	.LASF689
	.byte	0x1
	.value	0xaea
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x25
	.long	.LASF690
	.byte	0x1
	.value	0xaea
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x24
	.string	"set"
	.byte	0x1
	.value	0xaea
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x303
	.long	0x284d
	.uleb128 0x15
	.long	0x145
	.byte	0xb
	.byte	0
	.uleb128 0xa
	.long	0x283d
	.uleb128 0x2e
	.long	.LASF691
	.byte	0x1
	.value	0xb28
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.long	0x288f
	.uleb128 0x25
	.long	.LASF595
	.byte	0x1
	.value	0xb2a
	.long	0x1b57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x25
	.long	.LASF457
	.byte	0x1
	.value	0xb2a
	.long	0x1b57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2e
	.long	.LASF692
	.byte	0x1
	.value	0xb43
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.uleb128 0x1
	.byte	0x9c
	.long	0x28cc
	.uleb128 0x25
	.long	.LASF595
	.byte	0x1
	.value	0xb45
	.long	0x1b57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x25
	.long	.LASF457
	.byte	0x1
	.value	0xb45
	.long	0x1b57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2d
	.long	.LASF693
	.byte	0x1
	.value	0xb59
	.long	0xf07
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ac5
	.uleb128 0x28
	.string	"loc"
	.byte	0x1
	.value	0xb5a
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0xb5b
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x24
	.string	"x"
	.byte	0x1
	.value	0xb5d
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0xb5e
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x25
	.long	.LASF664
	.byte	0x1
	.value	0xb5f
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x24
	.string	"len"
	.byte	0x1
	.value	0xb60
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x24
	.string	"pos"
	.byte	0x1
	.value	0xb61
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x25
	.long	.LASF482
	.byte	0x1
	.value	0xb62
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x25
	.long	.LASF694
	.byte	0x1
	.value	0xb63
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2a
	.quad	.LBB29
	.quad	.LBE29-.LBB29
	.long	0x29e4
	.uleb128 0x24
	.string	"reg"
	.byte	0x1
	.value	0xb89
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x24
	.string	"seq"
	.byte	0x1
	.value	0xb8a
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2b
	.quad	.LBB30
	.quad	.LBE30-.LBB30
	.uleb128 0x25
	.long	.LASF695
	.byte	0x1
	.value	0xb9e
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.long	.LASF696
	.byte	0x1
	.value	0xb9f
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LBB31
	.quad	.LBE31-.LBB31
	.long	0x2a58
	.uleb128 0x24
	.string	"pos"
	.byte	0x1
	.value	0xbe9
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.string	"len"
	.byte	0x1
	.value	0xbea
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.string	"src"
	.byte	0x1
	.value	0xbeb
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF471
	.byte	0x1
	.value	0xbec
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0xbed
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x25
	.long	.LASF697
	.byte	0x1
	.value	0xbee
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2a
	.quad	.LBB32
	.quad	.LBE32-.LBB32
	.long	0x2a7d
	.uleb128 0x25
	.long	.LASF698
	.byte	0x1
	.value	0xc21
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x2a
	.quad	.LBB33
	.quad	.LBE33-.LBB33
	.long	0x2aa3
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0xc67
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.byte	0
	.uleb128 0x2b
	.quad	.LBB34
	.quad	.LBE34-.LBB34
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0xcbd
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF699
	.byte	0x1
	.value	0xcfb
	.long	0x2d
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c09
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0xcfc
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x23
	.long	.LASF700
	.byte	0x1
	.value	0xcfc
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x28
	.string	"to"
	.byte	0x1
	.value	0xcfc
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x23
	.long	.LASF701
	.byte	0x1
	.value	0xcfd
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x23
	.long	.LASF702
	.byte	0x1
	.value	0xcfe
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0xd00
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF703
	.byte	0x1
	.value	0xd01
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x24
	.string	"fmt"
	.byte	0x1
	.value	0xd02
	.long	0x500
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"len"
	.byte	0x1
	.value	0xd03
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0xd03
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.string	"new"
	.byte	0x1
	.value	0xd04
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x26
	.long	.LASF658
	.long	0x2c19
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11733
	.uleb128 0x2a
	.quad	.LBB35
	.quad	.LBE35-.LBB35
	.long	0x2bc4
	.uleb128 0x25
	.long	.LASF471
	.byte	0x1
	.value	0xd46
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2a
	.quad	.LBB36
	.quad	.LBE36-.LBB36
	.long	0x2be7
	.uleb128 0x24
	.string	"j"
	.byte	0x1
	.value	0xd6f
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x2b
	.quad	.LBB37
	.quad	.LBE37-.LBB37
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0xdd7
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x303
	.long	0x2c19
	.uleb128 0x15
	.long	0x145
	.byte	0x5
	.byte	0
	.uleb128 0xa
	.long	0x2c09
	.uleb128 0x2d
	.long	.LASF704
	.byte	0x1
	.value	0xe0d
	.long	0x2d
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0x300a
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0xe0e
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -264
	.uleb128 0x23
	.long	.LASF703
	.byte	0x1
	.value	0xe0f
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -268
	.uleb128 0x23
	.long	.LASF484
	.byte	0x1
	.value	0xe10
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.uleb128 0x23
	.long	.LASF701
	.byte	0x1
	.value	0xe11
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -276
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0xe13
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0xe14
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -244
	.uleb128 0x25
	.long	.LASF655
	.byte	0x1
	.value	0xe15
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x25
	.long	.LASF705
	.byte	0x1
	.value	0xe16
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0xe17
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x26
	.long	.LASF658
	.long	0x301a
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11833
	.uleb128 0x2a
	.quad	.LBB38
	.quad	.LBE38-.LBB38
	.long	0x2d05
	.uleb128 0x24
	.string	"new"
	.byte	0x1
	.value	0xe41
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.byte	0
	.uleb128 0x2a
	.quad	.LBB39
	.quad	.LBE39-.LBB39
	.long	0x2d7d
	.uleb128 0x25
	.long	.LASF706
	.byte	0x1
	.value	0xe63
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x25
	.long	.LASF707
	.byte	0x1
	.value	0xe63
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x25
	.long	.LASF708
	.byte	0x1
	.value	0xe63
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2b
	.quad	.LBB40
	.quad	.LBE40-.LBB40
	.uleb128 0x25
	.long	.LASF709
	.byte	0x1
	.value	0xe6d
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x25
	.long	.LASF710
	.byte	0x1
	.value	0xe6e
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LBB41
	.quad	.LBE41-.LBB41
	.long	0x2da3
	.uleb128 0x25
	.long	.LASF711
	.byte	0x1
	.value	0xeb0
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -236
	.byte	0
	.uleb128 0x2a
	.quad	.LBB42
	.quad	.LBE42-.LBB42
	.long	0x2e1b
	.uleb128 0x25
	.long	.LASF712
	.byte	0x1
	.value	0xeeb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x25
	.long	.LASF713
	.byte	0x1
	.value	0xeec
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x25
	.long	.LASF714
	.byte	0x1
	.value	0xeed
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x25
	.long	.LASF694
	.byte	0x1
	.value	0xeee
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2b
	.quad	.LBB43
	.quad	.LBE43-.LBB43
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0xef4
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LBB44
	.quad	.LBE44-.LBB44
	.long	0x2e41
	.uleb128 0x25
	.long	.LASF655
	.byte	0x1
	.value	0xf22
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x2a
	.quad	.LBB45
	.quad	.LBE45-.LBB45
	.long	0x2e67
	.uleb128 0x25
	.long	.LASF715
	.byte	0x1
	.value	0xf59
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -220
	.byte	0
	.uleb128 0x2a
	.quad	.LBB46
	.quad	.LBE46-.LBB46
	.long	0x2ecf
	.uleb128 0x24
	.string	"in1"
	.byte	0x1
	.value	0xf7b
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x24
	.string	"in2"
	.byte	0x1
	.value	0xf7b
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.long	.LASF716
	.byte	0x1
	.value	0xf7c
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x2b
	.quad	.LBB47
	.quad	.LBE47-.LBB47
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0xf88
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LBB48
	.quad	.LBE48-.LBB48
	.long	0x2ef5
	.uleb128 0x25
	.long	.LASF717
	.byte	0x1
	.value	0xfcd
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x2a
	.quad	.LBB49
	.quad	.LBE49-.LBB49
	.long	0x2f1a
	.uleb128 0x24
	.string	"tor"
	.byte	0x1
	.value	0x10aa
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x2a
	.quad	.LBB50
	.quad	.LBE50-.LBB50
	.long	0x2f3f
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x10e8
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2a
	.quad	.LBB51
	.quad	.LBE51-.LBB51
	.long	0x2f85
	.uleb128 0x24
	.string	"op0"
	.byte	0x1
	.value	0x110d
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x24
	.string	"op1"
	.byte	0x1
	.value	0x110e
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x25
	.long	.LASF718
	.byte	0x1
	.value	0x110f
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.byte	0
	.uleb128 0x2b
	.quad	.LBB52
	.quad	.LBE52-.LBB52
	.uleb128 0x24
	.string	"op0"
	.byte	0x1
	.value	0x11f2
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x24
	.string	"op1"
	.byte	0x1
	.value	0x11f3
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"len"
	.byte	0x1
	.value	0x11f4
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x2b
	.quad	.LBB53
	.quad	.LBE53-.LBB53
	.uleb128 0x25
	.long	.LASF320
	.byte	0x1
	.value	0x11fd
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -228
	.uleb128 0x2b
	.quad	.LBB54
	.quad	.LBE54-.LBB54
	.uleb128 0x25
	.long	.LASF719
	.byte	0x1
	.value	0x1206
	.long	0x2b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x303
	.long	0x301a
	.uleb128 0x15
	.long	0x145
	.byte	0x14
	.byte	0
	.uleb128 0xa
	.long	0x300a
	.uleb128 0x2d
	.long	.LASF720
	.byte	0x1
	.value	0x1221
	.long	0x2d
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0x31e8
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1222
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x1224
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x25
	.long	.LASF706
	.byte	0x1
	.value	0x1225
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x25
	.long	.LASF707
	.byte	0x1
	.value	0x1226
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x25
	.long	.LASF708
	.byte	0x1
	.value	0x1227
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x25
	.long	.LASF721
	.byte	0x1
	.value	0x1228
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x25
	.long	.LASF722
	.byte	0x1
	.value	0x1229
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x25
	.long	.LASF655
	.byte	0x1
	.value	0x122a
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x122b
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x25
	.long	.LASF723
	.byte	0x1
	.value	0x122c
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x25
	.long	.LASF705
	.byte	0x1
	.value	0x122d
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2a
	.quad	.LBB55
	.quad	.LBE55-.LBB55
	.long	0x3153
	.uleb128 0x24
	.string	"nzb"
	.byte	0x1
	.value	0x1243
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF700
	.byte	0x1
	.value	0x1244
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.long	.LASF724
	.byte	0x1
	.value	0x1245
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.long	.LASF725
	.byte	0x1
	.value	0x1246
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x25
	.long	.LASF726
	.byte	0x1
	.value	0x1247
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.byte	0
	.uleb128 0x2b
	.quad	.LBB56
	.quad	.LBE56-.LBB56
	.uleb128 0x24
	.string	"t"
	.byte	0x1
	.value	0x12e1
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x24
	.string	"f"
	.byte	0x1
	.value	0x12e2
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF727
	.byte	0x1
	.value	0x12e3
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF728
	.byte	0x1
	.value	0x12e4
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"op"
	.byte	0x1
	.value	0x12e5
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x25
	.long	.LASF729
	.byte	0x1
	.value	0x12e5
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x24
	.string	"m"
	.byte	0x1
	.value	0x12e6
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x24
	.string	"z"
	.byte	0x1
	.value	0x12e7
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x24
	.string	"c1"
	.byte	0x1
	.value	0x12e7
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF730
	.byte	0x1
	.value	0x1363
	.long	0x2d
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x33bb
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1364
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x24
	.string	"src"
	.byte	0x1
	.value	0x1366
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.long	.LASF471
	.byte	0x1
	.value	0x1367
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x1368
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x25
	.long	.LASF602
	.byte	0x1
	.value	0x136a
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x25
	.long	.LASF660
	.byte	0x1
	.value	0x136b
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2f
	.long	.Ldebug_ranges0+0
	.long	0x335a
	.uleb128 0x25
	.long	.LASF731
	.byte	0x1
	.value	0x1388
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x25
	.long	.LASF718
	.byte	0x1
	.value	0x1389
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x24
	.string	"op0"
	.byte	0x1
	.value	0x138a
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x24
	.string	"op1"
	.byte	0x1
	.value	0x138a
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x25
	.long	.LASF732
	.byte	0x1
	.value	0x138b
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x25
	.long	.LASF661
	.byte	0x1
	.value	0x138c
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x2a
	.quad	.LBB58
	.quad	.LBE58-.LBB58
	.long	0x3306
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x13a4
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x25
	.long	.LASF662
	.byte	0x1
	.value	0x13a5
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x2b
	.quad	.LBB59
	.quad	.LBE59-.LBB59
	.uleb128 0x25
	.long	.LASF697
	.byte	0x1
	.value	0x13ba
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.quad	.LBB60
	.quad	.LBE60-.LBB60
	.uleb128 0x24
	.string	"pat"
	.byte	0x1
	.value	0x13cb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.long	.LASF676
	.byte	0x1
	.value	0x13cb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2b
	.quad	.LBB62
	.quad	.LBE62-.LBB62
	.uleb128 0x25
	.long	.LASF707
	.byte	0x1
	.value	0x1450
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x25
	.long	.LASF708
	.byte	0x1
	.value	0x1452
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.long	.LASF733
	.byte	0x1
	.value	0x1454
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.long	.LASF734
	.byte	0x1
	.value	0x1454
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF735
	.byte	0x1
	.value	0x1454
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF736
	.byte	0x1
	.value	0x1482
	.long	0x2d
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.long	0x34a3
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1483
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x23
	.long	.LASF484
	.byte	0x1
	.value	0x1484
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x1486
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x24
	.string	"op0"
	.byte	0x1
	.value	0x1487
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x24
	.string	"op1"
	.byte	0x1
	.value	0x1488
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF705
	.byte	0x1
	.value	0x1489
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x26
	.long	.LASF658
	.long	0x34b3
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.11922
	.uleb128 0x2a
	.quad	.LBB63
	.quad	.LBE63-.LBB63
	.long	0x3480
	.uleb128 0x25
	.long	.LASF350
	.byte	0x1
	.value	0x1545
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x25
	.long	.LASF697
	.byte	0x1
	.value	0x1546
	.long	0x2b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x2b
	.quad	.LBB64
	.quad	.LBE64-.LBB64
	.uleb128 0x25
	.long	.LASF737
	.byte	0x1
	.value	0x1560
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x303
	.long	0x34b3
	.uleb128 0x15
	.long	0x145
	.byte	0x10
	.byte	0
	.uleb128 0xa
	.long	0x34a3
	.uleb128 0x2d
	.long	.LASF738
	.byte	0x1
	.value	0x15ba
	.long	0x2d
	.quad	.LFB22
	.quad	.LFE22-.LFB22
	.uleb128 0x1
	.byte	0x9c
	.long	0x3557
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x15bb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.string	"pos"
	.byte	0x1
	.value	0x15bd
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x24
	.string	"len"
	.byte	0x1
	.value	0x15bd
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF482
	.byte	0x1
	.value	0x15be
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF739
	.byte	0x1
	.value	0x15bf
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x15c0
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.quad	.LBB65
	.quad	.LBE65-.LBB65
	.uleb128 0x25
	.long	.LASF655
	.byte	0x1
	.value	0x160f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF740
	.byte	0x1
	.value	0x1677
	.long	0x2d
	.quad	.LFB23
	.quad	.LFE23-.LFB23
	.uleb128 0x1
	.byte	0x9c
	.long	0x35f5
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1678
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.long	.LASF694
	.byte	0x1
	.value	0x167a
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.string	"pos"
	.byte	0x1
	.value	0x167b
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"len"
	.byte	0x1
	.value	0x167c
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x25
	.long	.LASF697
	.byte	0x1
	.value	0x167d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF741
	.byte	0x1
	.value	0x167e
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.quad	.LBB66
	.quad	.LBE66-.LBB66
	.uleb128 0x25
	.long	.LASF742
	.byte	0x1
	.value	0x16c5
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF743
	.byte	0x1
	.value	0x170e
	.long	0x2d
	.quad	.LFB24
	.quad	.LFE24-.LFB24
	.uleb128 0x1
	.byte	0x9c
	.long	0x382e
	.uleb128 0x23
	.long	.LASF1
	.byte	0x1
	.value	0x1710
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x23
	.long	.LASF694
	.byte	0x1
	.value	0x1711
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x28
	.string	"pos"
	.byte	0x1
	.value	0x1712
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x23
	.long	.LASF744
	.byte	0x1
	.value	0x1713
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x28
	.string	"len"
	.byte	0x1
	.value	0x1714
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x23
	.long	.LASF482
	.byte	0x1
	.value	0x1715
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x23
	.long	.LASF701
	.byte	0x1
	.value	0x1716
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x23
	.long	.LASF745
	.byte	0x1
	.value	0x1716
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x25
	.long	.LASF746
	.byte	0x1
	.value	0x171b
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x25
	.long	.LASF715
	.byte	0x1
	.value	0x171c
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x25
	.long	.LASF747
	.byte	0x1
	.value	0x171d
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x25
	.long	.LASF748
	.byte	0x1
	.value	0x171e
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x25
	.long	.LASF749
	.byte	0x1
	.value	0x171f
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.long	.LASF750
	.byte	0x1
	.value	0x1720
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x25
	.long	.LASF751
	.byte	0x1
	.value	0x1721
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.long	.LASF752
	.byte	0x1
	.value	0x1722
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x24
	.string	"new"
	.byte	0x1
	.value	0x1723
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.long	.LASF753
	.byte	0x1
	.value	0x1724
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.long	.LASF754
	.byte	0x1
	.value	0x1725
	.long	0x2b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.quad	.LBB67
	.quad	.LBE67-.LBB67
	.long	0x376a
	.uleb128 0x25
	.long	.LASF320
	.byte	0x1
	.value	0x1766
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x2a
	.quad	.LBB68
	.quad	.LBE68-.LBB68
	.long	0x3790
	.uleb128 0x25
	.long	.LASF755
	.byte	0x1
	.value	0x1776
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x2a
	.quad	.LBB69
	.quad	.LBE69-.LBB69
	.long	0x37c4
	.uleb128 0x25
	.long	.LASF655
	.byte	0x1
	.value	0x17aa
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF717
	.byte	0x1
	.value	0x17ab
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2a
	.quad	.LBB70
	.quad	.LBE70-.LBB70
	.long	0x37ea
	.uleb128 0x25
	.long	.LASF320
	.byte	0x1
	.value	0x181b
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.byte	0
	.uleb128 0x2b
	.quad	.LBB71
	.quad	.LBE71-.LBB71
	.uleb128 0x25
	.long	.LASF655
	.byte	0x1
	.value	0x1851
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2b
	.quad	.LBB72
	.quad	.LBE72-.LBB72
	.uleb128 0x25
	.long	.LASF717
	.byte	0x1
	.value	0x185f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF756
	.byte	0x1
	.value	0x1882
	.long	0x2d
	.quad	.LFB25
	.quad	.LFE25-.LFB25
	.uleb128 0x1
	.byte	0x9c
	.long	0x389a
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1883
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF350
	.byte	0x1
	.value	0x1884
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x1886
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x1887
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x1888
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2d
	.long	.LASF757
	.byte	0x1
	.value	0x18c1
	.long	0x2d
	.quad	.LFB26
	.quad	.LFE26-.LFB26
	.uleb128 0x1
	.byte	0x9c
	.long	0x39bf
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x18c2
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x23
	.long	.LASF758
	.byte	0x1
	.value	0x18c3
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x18c5
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x18c6
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x25
	.long	.LASF759
	.byte	0x1
	.value	0x18c7
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x24
	.string	"rhs"
	.byte	0x1
	.value	0x18c8
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x24
	.string	"lhs"
	.byte	0x1
	.value	0x18c8
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF760
	.byte	0x1
	.value	0x18c9
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x18ca
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x24
	.string	"new"
	.byte	0x1
	.value	0x18cb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x18cc
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x24
	.string	"fmt"
	.byte	0x1
	.value	0x18cd
	.long	0x500
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.quad	.LBB73
	.quad	.LBE73-.LBB73
	.long	0x399c
	.uleb128 0x25
	.long	.LASF697
	.byte	0x1
	.value	0x1931
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x2b
	.quad	.LBB74
	.quad	.LBE74-.LBB74
	.uleb128 0x25
	.long	.LASF761
	.byte	0x1
	.value	0x1990
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF762
	.byte	0x1
	.value	0x19cb
	.long	0x13e
	.quad	.LFB27
	.quad	.LFE27-.LFB27
	.uleb128 0x1
	.byte	0x9c
	.long	0x3a1c
	.uleb128 0x28
	.string	"m"
	.byte	0x1
	.value	0x19cc
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF763
	.byte	0x1
	.value	0x19cd
	.long	0x1367
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"pos"
	.byte	0x1
	.value	0x19d0
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x24
	.string	"len"
	.byte	0x1
	.value	0x19d1
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x2d
	.long	.LASF764
	.byte	0x1
	.value	0x19f2
	.long	0x2d
	.quad	.LFB28
	.quad	.LFE28-.LFB28
	.uleb128 0x1
	.byte	0x9c
	.long	0x3c09
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x19f3
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x23
	.long	.LASF1
	.byte	0x1
	.value	0x19f4
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x23
	.long	.LASF697
	.byte	0x1
	.value	0x19f5
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x28
	.string	"reg"
	.byte	0x1
	.value	0x19f6
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x23
	.long	.LASF765
	.byte	0x1
	.value	0x19f7
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x19f9
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.long	.LASF766
	.byte	0x1
	.value	0x19fa
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x25
	.long	.LASF716
	.byte	0x1
	.value	0x19fb
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x25
	.long	.LASF767
	.byte	0x1
	.value	0x19fc
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.long	.LASF768
	.byte	0x1
	.value	0x19fc
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x24
	.string	"op0"
	.byte	0x1
	.value	0x19fd
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x24
	.string	"op1"
	.byte	0x1
	.value	0x19fd
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF655
	.byte	0x1
	.value	0x19fd
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.long	.LASF769
	.byte	0x1
	.value	0x1af1
	.quad	.L1148
	.uleb128 0x29
	.long	.LASF770
	.byte	0x1
	.value	0x1b96
	.quad	.L1165
	.uleb128 0x29
	.long	.LASF771
	.byte	0x1
	.value	0x1bdf
	.quad	.L1180
	.uleb128 0x2a
	.quad	.LBB75
	.quad	.LBE75-.LBB75
	.long	0x3b7e
	.uleb128 0x25
	.long	.LASF772
	.byte	0x1
	.value	0x1a83
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x25
	.long	.LASF773
	.byte	0x1
	.value	0x1a85
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x24
	.string	"y"
	.byte	0x1
	.value	0x1a86
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x2a
	.quad	.LBB76
	.quad	.LBE76-.LBB76
	.long	0x3bb4
	.uleb128 0x25
	.long	.LASF773
	.byte	0x1
	.value	0x1a9f
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x25
	.long	.LASF774
	.byte	0x1
	.value	0x1aa0
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x2a
	.quad	.LBB77
	.quad	.LBE77-.LBB77
	.long	0x3be8
	.uleb128 0x25
	.long	.LASF694
	.byte	0x1
	.value	0x1b2b
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF775
	.byte	0x1
	.value	0x1b2c
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2b
	.quad	.LBB78
	.quad	.LBE78-.LBB78
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x1b69
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF776
	.byte	0x1
	.value	0x1c10
	.long	0x2d
	.quad	.LFB29
	.quad	.LFE29-.LFB29
	.uleb128 0x1
	.byte	0x9c
	.long	0x3d17
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1c11
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x23
	.long	.LASF777
	.byte	0x1
	.value	0x1c12
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x23
	.long	.LASF778
	.byte	0x1
	.value	0x1c12
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x1c14
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x1c15
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x25
	.long	.LASF779
	.byte	0x1
	.value	0x1c16
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF780
	.byte	0x1
	.value	0x1c16
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF781
	.byte	0x1
	.value	0x1c16
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.long	.LASF782
	.byte	0x1
	.value	0x1c16
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x25
	.long	.LASF783
	.byte	0x1
	.value	0x1c16
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.long	.LASF784
	.byte	0x1
	.value	0x1c16
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.string	"nz"
	.byte	0x1
	.value	0x1c17
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.quad	.LBB79
	.quad	.LBE79-.LBB79
	.uleb128 0x24
	.string	"op0"
	.byte	0x1
	.value	0x1c54
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"op1"
	.byte	0x1
	.value	0x1c55
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF785
	.byte	0x1
	.value	0x1cd8
	.long	0x2d
	.quad	.LFB30
	.quad	.LFE30-.LFB30
	.uleb128 0x1
	.byte	0x9c
	.long	0x3e68
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1cd9
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x23
	.long	.LASF706
	.byte	0x1
	.value	0x1cda
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x28
	.string	"reg"
	.byte	0x1
	.value	0x1cdb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x28
	.string	"val"
	.byte	0x1
	.value	0x1cdb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x1cdd
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.long	.LASF655
	.byte	0x1
	.value	0x1cde
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x24
	.string	"fmt"
	.byte	0x1
	.value	0x1cdf
	.long	0x500
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x1ce0
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.string	"j"
	.byte	0x1
	.value	0x1ce0
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x2a
	.quad	.LBB80
	.quad	.LBE80-.LBB80
	.long	0x3de7
	.uleb128 0x25
	.long	.LASF482
	.byte	0x1
	.value	0x1d19
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.uleb128 0x2a
	.quad	.LBB81
	.quad	.LBE81-.LBB81
	.long	0x3e29
	.uleb128 0x25
	.long	.LASF715
	.byte	0x1
	.value	0x1d35
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x24
	.string	"new"
	.byte	0x1
	.value	0x1d36
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.string	"r"
	.byte	0x1
	.value	0x1d36
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x2b
	.quad	.LBB82
	.quad	.LBE82-.LBB82
	.uleb128 0x25
	.long	.LASF715
	.byte	0x1
	.value	0x1d4e
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x24
	.string	"new"
	.byte	0x1
	.value	0x1d4f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"r"
	.byte	0x1
	.value	0x1d4f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF786
	.byte	0x1
	.value	0x1d72
	.long	0x13e
	.quad	.LFB31
	.quad	.LFE31-.LFB31
	.uleb128 0x1
	.byte	0x9c
	.long	0x3ea5
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1d73
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x28
	.string	"y"
	.byte	0x1
	.value	0x1d74
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x2d
	.long	.LASF787
	.byte	0x1
	.value	0x1d99
	.long	0x2d
	.quad	.LFB32
	.quad	.LFE32-.LFB32
	.uleb128 0x1
	.byte	0x9c
	.long	0x3f71
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1d9a
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x25
	.long	.LASF471
	.byte	0x1
	.value	0x1d9c
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.string	"src"
	.byte	0x1
	.value	0x1d9d
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF788
	.byte	0x1
	.value	0x1d9e
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x24
	.string	"rhs"
	.byte	0x1
	.value	0x1d9f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.string	"lhs"
	.byte	0x1
	.value	0x1d9f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"c1"
	.byte	0x1
	.value	0x1da0
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x24
	.string	"pos"
	.byte	0x1
	.value	0x1da1
	.long	0x2b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"len"
	.byte	0x1
	.value	0x1da2
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.long	.LASF712
	.byte	0x1
	.value	0x1da3
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x1da4
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.byte	0
	.uleb128 0x2d
	.long	.LASF789
	.byte	0x1
	.value	0x1e0e
	.long	0x2d
	.quad	.LFB33
	.quad	.LFE33-.LFB33
	.uleb128 0x1
	.byte	0x9c
	.long	0x3ffc
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1e0f
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x1e11
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x24
	.string	"lhs"
	.byte	0x1
	.value	0x1e12
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"rhs"
	.byte	0x1
	.value	0x1e12
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF712
	.byte	0x1
	.value	0x1e12
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x1e13
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x25
	.long	.LASF790
	.byte	0x1
	.value	0x1e14
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2d
	.long	.LASF791
	.byte	0x1
	.value	0x1e8d
	.long	0x2d
	.quad	.LFB34
	.quad	.LFE34-.LFB34
	.uleb128 0x1
	.byte	0x9c
	.long	0x40a7
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1e8e
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x23
	.long	.LASF1
	.byte	0x1
	.value	0x1e8f
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x23
	.long	.LASF792
	.byte	0x1
	.value	0x1e90
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x23
	.long	.LASF793
	.byte	0x1
	.value	0x1e91
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x25
	.long	.LASF768
	.byte	0x1
	.value	0x1e93
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x1e94
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2b
	.quad	.LBB83
	.quad	.LBE83-.LBB83
	.uleb128 0x24
	.string	"o0"
	.byte	0x1
	.value	0x1ed6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"o1"
	.byte	0x1
	.value	0x1ed6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF794
	.byte	0x1
	.value	0x1f13
	.long	0x2c4
	.quad	.LFB35
	.quad	.LFE35-.LFB35
	.uleb128 0x1
	.byte	0x9c
	.long	0x42f1
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x1f14
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x23
	.long	.LASF1
	.byte	0x1
	.value	0x1f15
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x25
	.long	.LASF768
	.byte	0x1
	.value	0x1f17
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x25
	.long	.LASF795
	.byte	0x1
	.value	0x1f18
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x1f19
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x25
	.long	.LASF759
	.byte	0x1
	.value	0x1f1a
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x1f1b
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x26
	.long	.LASF658
	.long	0x4301
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.12255
	.uleb128 0x2a
	.quad	.LBB84
	.quad	.LBE84-.LBB84
	.long	0x4170
	.uleb128 0x25
	.long	.LASF796
	.byte	0x1
	.value	0x1f56
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.byte	0
	.uleb128 0x2a
	.quad	.LBB85
	.quad	.LBE85-.LBB85
	.long	0x4196
	.uleb128 0x25
	.long	.LASF697
	.byte	0x1
	.value	0x1f91
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x2a
	.quad	.LBB86
	.quad	.LBE86-.LBB86
	.long	0x41bc
	.uleb128 0x25
	.long	.LASF797
	.byte	0x1
	.value	0x1ffb
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x2a
	.quad	.LBB87
	.quad	.LBE87-.LBB87
	.long	0x4270
	.uleb128 0x24
	.string	"nz0"
	.byte	0x1
	.value	0x200d
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.string	"nz1"
	.byte	0x1
	.value	0x200e
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF798
	.byte	0x1
	.value	0x200f
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x25
	.long	.LASF799
	.byte	0x1
	.value	0x2010
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x25
	.long	.LASF800
	.byte	0x1
	.value	0x2011
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x25
	.long	.LASF801
	.byte	0x1
	.value	0x2012
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x25
	.long	.LASF802
	.byte	0x1
	.value	0x2013
	.long	0x2b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF803
	.byte	0x1
	.value	0x2015
	.long	0x2b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF804
	.byte	0x1
	.value	0x2017
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x25
	.long	.LASF805
	.byte	0x1
	.value	0x2018
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.byte	0
	.uleb128 0x2b
	.quad	.LBB88
	.quad	.LBE88-.LBB88
	.uleb128 0x25
	.long	.LASF715
	.byte	0x1
	.value	0x2091
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x25
	.long	.LASF773
	.byte	0x1
	.value	0x2092
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x25
	.long	.LASF350
	.byte	0x1
	.value	0x2093
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x25
	.long	.LASF806
	.byte	0x1
	.value	0x2094
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF807
	.byte	0x1
	.value	0x2095
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF694
	.byte	0x1
	.value	0x2096
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.long	.LASF511
	.byte	0x1
	.value	0x2097
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x303
	.long	0x4301
	.uleb128 0x15
	.long	0x145
	.byte	0xc
	.byte	0
	.uleb128 0xa
	.long	0x42f1
	.uleb128 0x2d
	.long	.LASF808
	.byte	0x1
	.value	0x20cc
	.long	0x2a9
	.quad	.LFB36
	.quad	.LFE36-.LFB36
	.uleb128 0x1
	.byte	0x9c
	.long	0x43b1
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x20cd
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x23
	.long	.LASF1
	.byte	0x1
	.value	0x20ce
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x20d0
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x25
	.long	.LASF809
	.byte	0x1
	.value	0x20d1
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF810
	.byte	0x1
	.value	0x20d2
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x25
	.long	.LASF811
	.byte	0x1
	.value	0x20d2
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x25
	.long	.LASF812
	.byte	0x1
	.value	0x20d2
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF768
	.byte	0x1
	.value	0x20d3
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x20d4
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x27
	.long	.LASF814
	.byte	0x1
	.value	0x2234
	.long	0x2a9
	.quad	.LFB37
	.quad	.LFE37-.LFB37
	.uleb128 0x1
	.byte	0x9c
	.long	0x43ff
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x2235
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF1
	.byte	0x1
	.value	0x2236
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x23
	.long	.LASF482
	.byte	0x1
	.value	0x2237
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x2d
	.long	.LASF815
	.byte	0x1
	.value	0x225a
	.long	0x13e
	.quad	.LFB38
	.quad	.LFE38-.LFB38
	.uleb128 0x1
	.byte	0x9c
	.long	0x449b
	.uleb128 0x23
	.long	.LASF816
	.byte	0x1
	.value	0x225b
	.long	0x449b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF817
	.byte	0x1
	.value	0x225c
	.long	0x44a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x28
	.string	"op1"
	.byte	0x1
	.value	0x225d
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x23
	.long	.LASF818
	.byte	0x1
	.value	0x225e
	.long	0x2b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF1
	.byte	0x1
	.value	0x225f
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x23
	.long	.LASF819
	.byte	0x1
	.value	0x2260
	.long	0x519
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x24
	.string	"op0"
	.byte	0x1
	.value	0x2262
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x25
	.long	.LASF820
	.byte	0x1
	.value	0x2263
	.long	0x2b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x6dd
	.uleb128 0x3
	.byte	0x8
	.long	0x2b2
	.uleb128 0x2d
	.long	.LASF821
	.byte	0x1
	.value	0x22d6
	.long	0x2d
	.quad	.LFB39
	.quad	.LFE39-.LFB39
	.uleb128 0x1
	.byte	0x9c
	.long	0x4682
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x22d7
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x23
	.long	.LASF0
	.byte	0x1
	.value	0x22d8
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x23
	.long	.LASF822
	.byte	0x1
	.value	0x22d9
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x23
	.long	.LASF792
	.byte	0x1
	.value	0x22da
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x23
	.long	.LASF823
	.byte	0x1
	.value	0x22db
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x25
	.long	.LASF824
	.byte	0x1
	.value	0x22dd
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x25
	.long	.LASF350
	.byte	0x1
	.value	0x22de
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x25
	.long	.LASF825
	.byte	0x1
	.value	0x22df
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x22e0
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x25
	.long	.LASF826
	.byte	0x1
	.value	0x22e1
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.long	.LASF751
	.byte	0x1
	.value	0x22e1
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x25
	.long	.LASF827
	.byte	0x1
	.value	0x22e2
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x25
	.long	.LASF828
	.byte	0x1
	.value	0x22e5
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x25
	.long	.LASF829
	.byte	0x1
	.value	0x22e6
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x25
	.long	.LASF830
	.byte	0x1
	.value	0x22e7
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.long	.LASF831
	.byte	0x1
	.value	0x22e8
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x24
	.string	"new"
	.byte	0x1
	.value	0x22e9
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.quad	.LBB89
	.quad	.LBE89-.LBB89
	.long	0x462c
	.uleb128 0x25
	.long	.LASF832
	.byte	0x1
	.value	0x23d9
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.long	.LASF833
	.byte	0x1
	.value	0x23da
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x25
	.long	.LASF697
	.byte	0x1
	.value	0x23db
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF834
	.byte	0x1
	.value	0x23dc
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x2a
	.quad	.LBB90
	.quad	.LBE90-.LBB90
	.long	0x4660
	.uleb128 0x24
	.string	"lhs"
	.byte	0x1
	.value	0x24a6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.string	"rhs"
	.byte	0x1
	.value	0x24a8
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x2b
	.quad	.LBB91
	.quad	.LBE91-.LBB91
	.uleb128 0x25
	.long	.LASF835
	.byte	0x1
	.value	0x2541
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF836
	.byte	0x1
	.value	0x25b9
	.long	0x13e
	.quad	.LFB40
	.quad	.LFE40-.LFB40
	.uleb128 0x1
	.byte	0x9c
	.long	0x4773
	.uleb128 0x23
	.long	.LASF837
	.byte	0x1
	.value	0x25ba
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x25bb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x23
	.long	.LASF838
	.byte	0x1
	.value	0x25bc
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.string	"pat"
	.byte	0x1
	.value	0x25be
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF639
	.byte	0x1
	.value	0x25bf
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x25
	.long	.LASF839
	.byte	0x1
	.value	0x25c0
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x25c1
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF840
	.byte	0x1
	.value	0x25c2
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF841
	.byte	0x1
	.value	0x25c3
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2a
	.quad	.LBB92
	.quad	.LBE92-.LBB92
	.long	0x4751
	.uleb128 0x24
	.string	"pos"
	.byte	0x1
	.value	0x25de
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x2b
	.quad	.LBB93
	.quad	.LBE93-.LBB93
	.uleb128 0x25
	.long	.LASF631
	.byte	0x1
	.value	0x25f9
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF842
	.byte	0x1
	.value	0x2625
	.long	0x2d
	.quad	.LFB41
	.quad	.LFE41-.LFB41
	.uleb128 0x1
	.byte	0x9c
	.long	0x4816
	.uleb128 0x23
	.long	.LASF1
	.byte	0x1
	.value	0x2626
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x2627
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF812
	.byte	0x1
	.value	0x2629
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2a
	.quad	.LBB94
	.quad	.LBE94-.LBB94
	.long	0x47e5
	.uleb128 0x25
	.long	.LASF320
	.byte	0x1
	.value	0x2652
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2b
	.quad	.LBB95
	.quad	.LBE95-.LBB95
	.uleb128 0x25
	.long	.LASF320
	.byte	0x1
	.value	0x2678
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x24
	.string	"res"
	.byte	0x1
	.value	0x2679
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF843
	.byte	0x1
	.value	0x268d
	.long	0x2d
	.quad	.LFB42
	.quad	.LFE42-.LFB42
	.uleb128 0x1
	.byte	0x9c
	.long	0x48b5
	.uleb128 0x23
	.long	.LASF0
	.byte	0x1
	.value	0x268e
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x23
	.long	.LASF1
	.byte	0x1
	.value	0x268f
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"op0"
	.byte	0x1
	.value	0x2690
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x28
	.string	"op1"
	.byte	0x1
	.value	0x2690
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF812
	.byte	0x1
	.value	0x2692
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x2693
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.quad	.LBB96
	.quad	.LBE96-.LBB96
	.uleb128 0x25
	.long	.LASF716
	.byte	0x1
	.value	0x269b
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF844
	.byte	0x1
	.value	0x26cb
	.long	0x6dd
	.quad	.LFB43
	.quad	.LFE43-.LFB43
	.uleb128 0x1
	.byte	0x9c
	.long	0x4b52
	.uleb128 0x23
	.long	.LASF0
	.byte	0x1
	.value	0x26cc
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x23
	.long	.LASF816
	.byte	0x1
	.value	0x26cd
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x23
	.long	.LASF845
	.byte	0x1
	.value	0x26ce
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x24
	.string	"op0"
	.byte	0x1
	.value	0x26d0
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x24
	.string	"op1"
	.byte	0x1
	.value	0x26d1
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x26d2
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x25
	.long	.LASF846
	.byte	0x1
	.value	0x26d2
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x26d3
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x26d4
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x25
	.long	.LASF751
	.byte	0x1
	.value	0x26d4
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x2a
	.quad	.LBB97
	.quad	.LBE97-.LBB97
	.long	0x49bb
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x2706
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x25
	.long	.LASF697
	.byte	0x1
	.value	0x2707
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x25
	.long	.LASF847
	.byte	0x1
	.value	0x2708
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.byte	0
	.uleb128 0x2a
	.quad	.LBB98
	.quad	.LBE98-.LBB98
	.long	0x4a1f
	.uleb128 0x25
	.long	.LASF713
	.byte	0x1
	.value	0x2727
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x25
	.long	.LASF714
	.byte	0x1
	.value	0x2728
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.string	"c0"
	.byte	0x1
	.value	0x2729
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.string	"c1"
	.byte	0x1
	.value	0x272a
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF848
	.byte	0x1
	.value	0x272b
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.byte	0
	.uleb128 0x2a
	.quad	.LBB99
	.quad	.LBE99-.LBB99
	.long	0x4b2f
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x2770
	.long	0x51f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x25
	.long	.LASF759
	.byte	0x1
	.value	0x2771
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x25
	.long	.LASF697
	.byte	0x1
	.value	0x2772
	.long	0x2c4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.long	.LASF849
	.byte	0x1
	.value	0x2773
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x25
	.long	.LASF850
	.byte	0x1
	.value	0x2774
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x25
	.long	.LASF851
	.byte	0x1
	.value	0x2775
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x25
	.long	.LASF852
	.byte	0x1
	.value	0x2776
	.long	0x2b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.quad	.LBB100
	.quad	.LBE100-.LBB100
	.long	0x4aca
	.uleb128 0x25
	.long	.LASF718
	.byte	0x1
	.value	0x2981
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.byte	0
	.uleb128 0x2a
	.quad	.LBB101
	.quad	.LBE101-.LBB101
	.long	0x4aef
	.uleb128 0x25
	.long	.LASF655
	.byte	0x1
	.value	0x2a35
	.long	0x2c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x2b
	.quad	.LBB102
	.quad	.LBE102-.LBB102
	.uleb128 0x25
	.long	.LASF694
	.byte	0x1
	.value	0x2a82
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF853
	.byte	0x1
	.value	0x2a83
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF854
	.byte	0x1
	.value	0x2a84
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2b
	.quad	.LBB103
	.quad	.LBE103-.LBB103
	.uleb128 0x25
	.long	.LASF855
	.byte	0x1
	.value	0x2b04
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF856
	.byte	0x1
	.value	0x2b48
	.long	0x6dd
	.quad	.LFB44
	.quad	.LFE44-.LFB44
	.uleb128 0x1
	.byte	0x9c
	.long	0x4ba0
	.uleb128 0x28
	.string	"exp"
	.byte	0x1
	.value	0x2b49
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF857
	.byte	0x1
	.value	0x2b4b
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x24
	.string	"x"
	.byte	0x1
	.value	0x2b4c
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2d
	.long	.LASF858
	.byte	0x1
	.value	0x2b5c
	.long	0x2d
	.quad	.LFB45
	.quad	.LFE45-.LFB45
	.uleb128 0x1
	.byte	0x9c
	.long	0x4c0e
	.uleb128 0x28
	.string	"exp"
	.byte	0x1
	.value	0x2b5d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF1
	.byte	0x1
	.value	0x2b5e
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x28
	.string	"op0"
	.byte	0x1
	.value	0x2b5d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x28
	.string	"op1"
	.byte	0x1
	.value	0x2b5d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF859
	.byte	0x1
	.value	0x2b60
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x22
	.long	.LASF860
	.byte	0x1
	.value	0x2b6c
	.quad	.LFB46
	.quad	.LFE46-.LFB46
	.uleb128 0x1
	.byte	0x9c
	.long	0x4ca2
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x2b6d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x2b6f
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x24
	.string	"fmt"
	.byte	0x1
	.value	0x2b70
	.long	0x500
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2b71
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2b
	.quad	.LBB104
	.quad	.LBE104-.LBB104
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2b75
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x25
	.long	.LASF861
	.byte	0x1
	.value	0x2b76
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x24
	.string	"r"
	.byte	0x1
	.value	0x2b79
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x22
	.long	.LASF862
	.byte	0x1
	.value	0x2b8e
	.quad	.LFB47
	.quad	.LFE47-.LFB47
	.uleb128 0x1
	.byte	0x9c
	.long	0x4d62
	.uleb128 0x28
	.string	"reg"
	.byte	0x1
	.value	0x2b8f
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x2b90
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x23
	.long	.LASF863
	.byte	0x1
	.value	0x2b91
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2b93
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF861
	.byte	0x1
	.value	0x2b94
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2b97
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.quad	.LBB105
	.quad	.LBE105-.LBB105
	.long	0x4d40
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x2b9d
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2b
	.quad	.LBB106
	.quad	.LBE106-.LBB106
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x2beb
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.byte	0
	.uleb128 0x22
	.long	.LASF864
	.byte	0x1
	.value	0x2bfc
	.quad	.LFB48
	.quad	.LFE48-.LFB48
	.uleb128 0x1
	.byte	0x9c
	.long	0x4dbd
	.uleb128 0x23
	.long	.LASF471
	.byte	0x1
	.value	0x2bfd
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF865
	.byte	0x1
	.value	0x2bfd
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF453
	.byte	0x1
	.value	0x2bfe
	.long	0x2b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF866
	.byte	0x1
	.value	0x2c00
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x22
	.long	.LASF867
	.byte	0x1
	.value	0x2c28
	.quad	.LFB49
	.quad	.LFE49-.LFB49
	.uleb128 0x1
	.byte	0x9c
	.long	0x4e38
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x2c29
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF612
	.byte	0x1
	.value	0x2c2b
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2c2c
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2b
	.quad	.LBB107
	.quad	.LBE107-.LBB107
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2c33
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF861
	.byte	0x1
	.value	0x2c34
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0x22
	.long	.LASF868
	.byte	0x1
	.value	0x2c63
	.quad	.LFB50
	.quad	.LFE50-.LFB50
	.uleb128 0x1
	.byte	0x9c
	.long	0x4eb1
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x2c64
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x23
	.long	.LASF869
	.byte	0x1
	.value	0x2c65
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF609
	.byte	0x1
	.value	0x2c67
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x24
	.string	"set"
	.byte	0x1
	.value	0x2c67
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2c68
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF1
	.byte	0x1
	.value	0x2c69
	.long	0x51f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x22
	.long	.LASF870
	.byte	0x1
	.value	0x2c8f
	.quad	.LFB51
	.quad	.LFE51-.LFB51
	.uleb128 0x1
	.byte	0x9c
	.long	0x4f27
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x2c90
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x2c91
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.quad	.LBB108
	.quad	.LBE108-.LBB108
	.uleb128 0x25
	.long	.LASF871
	.byte	0x1
	.value	0x2c98
	.long	0x500
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2c99
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x24
	.string	"j"
	.byte	0x1
	.value	0x2c99
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF872
	.byte	0x1
	.value	0x2cb6
	.long	0x13e
	.quad	.LFB52
	.quad	.LFE52-.LFB52
	.uleb128 0x1
	.byte	0x9c
	.long	0x5000
	.uleb128 0x28
	.string	"loc"
	.byte	0x1
	.value	0x2cb7
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x2cb8
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x23
	.long	.LASF873
	.byte	0x1
	.value	0x2cb9
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x23
	.long	.LASF874
	.byte	0x1
	.value	0x2cba
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x24
	.string	"x"
	.byte	0x1
	.value	0x2cbc
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.string	"fmt"
	.byte	0x1
	.value	0x2cbd
	.long	0x500
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"len"
	.byte	0x1
	.value	0x2cbe
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2cbf
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2b
	.quad	.LBB109
	.quad	.LBE109-.LBB109
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2cc3
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF861
	.byte	0x1
	.value	0x2cc4
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x24
	.string	"j"
	.byte	0x1
	.value	0x2cc7
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF875
	.byte	0x1
	.value	0x2cf5
	.long	0x2d
	.quad	.LFB53
	.quad	.LFE53-.LFB53
	.uleb128 0x1
	.byte	0x9c
	.long	0x504e
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x2cf6
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2cf8
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x25
	.long	.LASF863
	.byte	0x1
	.value	0x2cf9
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2d
	.long	.LASF876
	.byte	0x1
	.value	0x2d36
	.long	0x13e
	.quad	.LFB54
	.quad	.LFE54-.LFB54
	.uleb128 0x1
	.byte	0x9c
	.long	0x510d
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x2d37
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x23
	.long	.LASF877
	.byte	0x1
	.value	0x2d38
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x24
	.string	"fmt"
	.byte	0x1
	.value	0x2d3a
	.long	0x500
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2d3b
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x2d3c
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.quad	.LBB110
	.quad	.LBE110-.LBB110
	.long	0x50ed
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2d40
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF878
	.byte	0x1
	.value	0x2d41
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.uleb128 0x2b
	.quad	.LBB111
	.quad	.LBE111-.LBB111
	.uleb128 0x24
	.string	"j"
	.byte	0x1
	.value	0x2d5a
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.byte	0
	.uleb128 0x2e
	.long	.LASF879
	.byte	0x1
	.value	0x2d72
	.quad	.LFB55
	.quad	.LFE55-.LFB55
	.uleb128 0x1
	.byte	0x9c
	.long	0x5175
	.uleb128 0x23
	.long	.LASF471
	.byte	0x1
	.value	0x2d73
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x2d74
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF453
	.byte	0x1
	.value	0x2d75
	.long	0x2b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2d77
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x25
	.long	.LASF861
	.byte	0x1
	.value	0x2d77
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x2d
	.long	.LASF880
	.byte	0x1
	.value	0x2d8d
	.long	0x13e
	.quad	.LFB56
	.quad	.LFE56-.LFB56
	.uleb128 0x1
	.byte	0x9c
	.long	0x51d2
	.uleb128 0x28
	.string	"reg"
	.byte	0x1
	.value	0x2d8e
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x2d8f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF881
	.byte	0x1
	.value	0x2d91
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2d92
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x22
	.long	.LASF882
	.byte	0x1
	.value	0x2dca
	.quad	.LFB57
	.quad	.LFE57-.LFB57
	.uleb128 0x1
	.byte	0x9c
	.long	0x52c1
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x2dcb
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x2dcd
	.long	0x6dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2dce
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2dcf
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.quad	.LBB112
	.quad	.LBE112-.LBB112
	.long	0x525b
	.uleb128 0x25
	.long	.LASF861
	.byte	0x1
	.value	0x2df1
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x24
	.string	"r"
	.byte	0x1
	.value	0x2df1
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x2a
	.quad	.LBB113
	.quad	.LBE113-.LBB113
	.long	0x5280
	.uleb128 0x25
	.long	.LASF883
	.byte	0x1
	.value	0x2e08
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x2b
	.quad	.LBB114
	.quad	.LBE114-.LBB114
	.uleb128 0x24
	.string	"fmt"
	.byte	0x1
	.value	0x2e1e
	.long	0x500
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.quad	.LBB115
	.quad	.LBE115-.LBB115
	.uleb128 0x24
	.string	"j"
	.byte	0x1
	.value	0x2e26
	.long	0x13e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x27
	.long	.LASF884
	.byte	0x1
	.value	0x2e34
	.long	0x2d
	.quad	.LFB58
	.quad	.LFE58-.LFB58
	.uleb128 0x1
	.byte	0x9c
	.long	0x5311
	.uleb128 0x23
	.long	.LASF56
	.byte	0x1
	.value	0x2e35
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x2e36
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF676
	.byte	0x1
	.value	0x2e38
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x22
	.long	.LASF885
	.byte	0x1
	.value	0x2e4e
	.quad	.LFB59
	.quad	.LFE59-.LFB59
	.uleb128 0x1
	.byte	0x9c
	.long	0x551a
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x2e4f
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x23
	.long	.LASF886
	.byte	0x1
	.value	0x2e50
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x23
	.long	.LASF877
	.byte	0x1
	.value	0x2e51
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x23
	.long	.LASF887
	.byte	0x1
	.value	0x2e52
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x23
	.long	.LASF838
	.byte	0x1
	.value	0x2e53
	.long	0xf07
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x24
	.string	"fmt"
	.byte	0x1
	.value	0x2e55
	.long	0x500
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"len"
	.byte	0x1
	.value	0x2e56
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2e56
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x25
	.long	.LASF0
	.byte	0x1
	.value	0x2e57
	.long	0x6dd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x2a
	.quad	.LBB116
	.quad	.LBE116-.LBB116
	.long	0x54d4
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2e5b
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.long	.LASF888
	.byte	0x1
	.value	0x2e5c
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.long	.LASF889
	.byte	0x1
	.value	0x2e5d
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.long	.LASF890
	.byte	0x1
	.value	0x2e5d
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2b
	.quad	.LBB117
	.quad	.LBE117-.LBB117
	.uleb128 0x25
	.long	.LASF676
	.byte	0x1
	.value	0x2e74
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.quad	.LBB118
	.quad	.LBE118-.LBB118
	.long	0x5482
	.uleb128 0x25
	.long	.LASF891
	.byte	0x1
	.value	0x2e83
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x25
	.long	.LASF892
	.byte	0x1
	.value	0x2e84
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.long	.LASF893
	.byte	0x1
	.value	0x2e87
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2e89
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.byte	0
	.uleb128 0x2b
	.quad	.LBB119
	.quad	.LBE119-.LBB119
	.uleb128 0x25
	.long	.LASF893
	.byte	0x1
	.value	0x2e9f
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2ea1
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.long	.LASF320
	.byte	0x1
	.value	0x2ea1
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x25
	.long	.LASF894
	.byte	0x1
	.value	0x2ea2
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LBB120
	.quad	.LBE120-.LBB120
	.long	0x54f9
	.uleb128 0x25
	.long	.LASF471
	.byte	0x1
	.value	0x2ebe
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x2b
	.quad	.LBB121
	.quad	.LBE121-.LBB121
	.uleb128 0x24
	.string	"j"
	.byte	0x1
	.value	0x2eed
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF895
	.byte	0x1
	.value	0x2efb
	.long	0x13e
	.quad	.LFB60
	.quad	.LFE60-.LFB60
	.uleb128 0x1
	.byte	0x9c
	.long	0x55d5
	.uleb128 0x28
	.string	"x"
	.byte	0x1
	.value	0x2efc
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x23
	.long	.LASF896
	.byte	0x1
	.value	0x2efd
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x2eff
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2b
	.quad	.LBB122
	.quad	.LBE122-.LBB122
	.uleb128 0x25
	.long	.LASF471
	.byte	0x1
	.value	0x2f03
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.long	.LASF897
	.byte	0x1
	.value	0x2f04
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x2f05
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x25
	.long	.LASF898
	.byte	0x1
	.value	0x2f05
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.long	.LASF861
	.byte	0x1
	.value	0x2f05
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x25
	.long	.LASF899
	.byte	0x1
	.value	0x2f05
	.long	0x2a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x22
	.long	.LASF900
	.byte	0x1
	.value	0x2f32
	.quad	.LFB61
	.quad	.LFE61-.LFB61
	.uleb128 0x1
	.byte	0x9c
	.long	0x57e9
	.uleb128 0x23
	.long	.LASF840
	.byte	0x1
	.value	0x2f33
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x23
	.long	.LASF901
	.byte	0x1
	.value	0x2f34
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x28
	.string	"i3"
	.byte	0x1
	.value	0x2f35
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x28
	.string	"i2"
	.byte	0x1
	.value	0x2f35
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x23
	.long	.LASF684
	.byte	0x1
	.value	0x2f36
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x23
	.long	.LASF685
	.byte	0x1
	.value	0x2f36
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x25
	.long	.LASF676
	.byte	0x1
	.value	0x2f38
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.long	.LASF902
	.byte	0x1
	.value	0x2f38
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.string	"tem"
	.byte	0x1
	.value	0x2f39
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x26
	.long	.LASF658
	.long	0x57e9
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.12829
	.uleb128 0x2b
	.quad	.LBB123
	.quad	.LBE123-.LBB123
	.uleb128 0x25
	.long	.LASF903
	.byte	0x1
	.value	0x2f3d
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.long	.LASF904
	.byte	0x1
	.value	0x2f3d
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.quad	.LBB124
	.quad	.LBE124-.LBB124
	.long	0x5735
	.uleb128 0x24
	.string	"bb"
	.byte	0x1
	.value	0x3043
	.long	0x140d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2f
	.long	.Ldebug_ranges0+0x30
	.long	0x5713
	.uleb128 0x24
	.string	"set"
	.byte	0x1
	.value	0x3053
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.long	.LASF622
	.byte	0x1
	.value	0x3054
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x2b
	.quad	.LBB127
	.quad	.LBE127-.LBB127
	.uleb128 0x25
	.long	.LASF609
	.byte	0x1
	.value	0x30bf
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x2b
	.quad	.LBB128
	.quad	.LBE128-.LBB128
	.uleb128 0x25
	.long	.LASF56
	.byte	0x1
	.value	0x30e0
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2b
	.quad	.LBB129
	.quad	.LBE129-.LBB129
	.uleb128 0x25
	.long	.LASF861
	.byte	0x1
	.value	0x3104
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x25
	.long	.LASF905
	.byte	0x1
	.value	0x3107
	.long	0x13e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x24
	.string	"i"
	.byte	0x1
	.value	0x3108
	.long	0x2a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x2b
	.quad	.LBB130
	.quad	.LBE130-.LBB130
	.uleb128 0x25
	.long	.LASF906
	.byte	0x1
	.value	0x3118
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.string	"bb"
	.byte	0x1
	.value	0x3119
	.long	0x140d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.quad	.LBB131
	.quad	.LBE131-.LBB131
	.uleb128 0x25
	.long	.LASF907
	.byte	0x1
	.value	0x311f
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x34a3
	.uleb128 0x22
	.long	.LASF908
	.byte	0x1
	.value	0x316d
	.quad	.LFB62
	.quad	.LFE62-.LFB62
	.uleb128 0x1
	.byte	0x9c
	.long	0x58ad
	.uleb128 0x23
	.long	.LASF609
	.byte	0x1
	.value	0x316e
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.long	.LASF612
	.byte	0x1
	.value	0x3170
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.long	.LASF909
	.byte	0x1
	.value	0x3170
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.quad	.LBB132
	.quad	.LBE132-.LBB132
	.uleb128 0x25
	.long	.LASF903
	.byte	0x1
	.value	0x3174
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.long	.LASF608
	.byte	0x1
	.value	0x3175
	.long	0x2d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x24
	.string	"set"
	.byte	0x1
	.value	0x3176
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"reg"
	.byte	0x1
	.value	0x3176
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.quad	.LBB133
	.quad	.LBE133-.LBB133
	.uleb128 0x25
	.long	.LASF910
	.byte	0x1
	.value	0x31ae
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF911
	.byte	0x1
	.value	0x31c6
	.long	0x13e
	.quad	.LFB63
	.quad	.LFE63-.LFB63
	.uleb128 0x1
	.byte	0x9c
	.long	0x58f2
	.uleb128 0x23
	.long	.LASF608
	.byte	0x1
	.value	0x31c7
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x26
	.long	.LASF658
	.long	0x5902
	.uleb128 0x9
	.byte	0x3
	.quad	__FUNCTION__.12905
	.byte	0
	.uleb128 0x14
	.long	0x303
	.long	0x5902
	.uleb128 0x15
	.long	0x145
	.byte	0x9
	.byte	0
	.uleb128 0xa
	.long	0x58f2
	.uleb128 0x30
	.long	.LASF913
	.byte	0x1
	.value	0x31d4
	.quad	.LFB64
	.quad	.LFE64-.LFB64
	.uleb128 0x1
	.byte	0x9c
	.long	0x5935
	.uleb128 0x23
	.long	.LASF912
	.byte	0x1
	.value	0x31d5
	.long	0x5935
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.long	0x30a
	.uleb128 0x30
	.long	.LASF914
	.byte	0x1
	.value	0x31de
	.quad	.LFB65
	.quad	.LFE65-.LFB65
	.uleb128 0x1
	.byte	0x9c
	.long	0x5969
	.uleb128 0x23
	.long	.LASF912
	.byte	0x1
	.value	0x31df
	.long	0x5935
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF915
	.byte	0x1
	.byte	0x64
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	combine_attempts
	.uleb128 0x31
	.long	.LASF916
	.byte	0x1
	.byte	0x68
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	combine_merges
	.uleb128 0x31
	.long	.LASF917
	.byte	0x1
	.byte	0x6c
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	combine_extras
	.uleb128 0x31
	.long	.LASF918
	.byte	0x1
	.byte	0x70
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	combine_successes
	.uleb128 0x31
	.long	.LASF919
	.byte	0x1
	.byte	0x74
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	total_attempts
	.uleb128 0x31
	.long	.LASF920
	.byte	0x1
	.byte	0x74
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	total_merges
	.uleb128 0x31
	.long	.LASF921
	.byte	0x1
	.byte	0x74
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	total_extras
	.uleb128 0x31
	.long	.LASF922
	.byte	0x1
	.byte	0x74
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	total_successes
	.uleb128 0x31
	.long	.LASF923
	.byte	0x1
	.byte	0x7e
	.long	0x519
	.uleb128 0x9
	.byte	0x3
	.quad	uid_cuid
	.uleb128 0x31
	.long	.LASF924
	.byte	0x1
	.byte	0x7f
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	max_uid_cuid
	.uleb128 0x31
	.long	.LASF925
	.byte	0x1
	.byte	0x8e
	.long	0x2a9
	.uleb128 0x9
	.byte	0x3
	.quad	combine_max_regno
	.uleb128 0x31
	.long	.LASF926
	.byte	0x1
	.byte	0x92
	.long	0xf07
	.uleb128 0x9
	.byte	0x3
	.quad	reg_last_death
	.uleb128 0x31
	.long	.LASF927
	.byte	0x1
	.byte	0x96
	.long	0xf07
	.uleb128 0x9
	.byte	0x3
	.quad	reg_last_set
	.uleb128 0x31
	.long	.LASF928
	.byte	0x1
	.byte	0x9b
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	mem_last_set
	.uleb128 0x31
	.long	.LASF929
	.byte	0x1
	.byte	0xa0
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	last_call_cuid
	.uleb128 0x31
	.long	.LASF930
	.byte	0x1
	.byte	0xa8
	.long	0x2d
	.uleb128 0x9
	.byte	0x3
	.quad	subst_insn
	.uleb128 0x31
	.long	.LASF931
	.byte	0x1
	.byte	0xad
	.long	0x2d
	.uleb128 0x9
	.byte	0x3
	.quad	subst_prev_insn
	.uleb128 0x31
	.long	.LASF932
	.byte	0x1
	.byte	0xb6
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	subst_low_cuid
	.uleb128 0x31
	.long	.LASF933
	.byte	0x1
	.byte	0xbb
	.long	0x129f
	.uleb128 0x9
	.byte	0x3
	.quad	newpat_used_regs
	.uleb128 0x31
	.long	.LASF934
	.byte	0x1
	.byte	0xc1
	.long	0x2d
	.uleb128 0x9
	.byte	0x3
	.quad	added_links_insn
	.uleb128 0x31
	.long	.LASF935
	.byte	0x1
	.byte	0xc4
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	this_basic_block
	.uleb128 0x31
	.long	.LASF936
	.byte	0x1
	.byte	0xc9
	.long	0x1356
	.uleb128 0x9
	.byte	0x3
	.quad	refresh_blocks
	.uleb128 0x31
	.long	.LASF937
	.byte	0x1
	.byte	0xca
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	need_refresh
	.uleb128 0x31
	.long	.LASF938
	.byte	0x1
	.byte	0xfa
	.long	0xf07
	.uleb128 0x9
	.byte	0x3
	.quad	reg_last_set_value
	.uleb128 0x31
	.long	.LASF939
	.byte	0x1
	.byte	0xff
	.long	0x519
	.uleb128 0x9
	.byte	0x3
	.quad	reg_last_set_label
	.uleb128 0x25
	.long	.LASF940
	.byte	0x1
	.value	0x104
	.long	0x519
	.uleb128 0x9
	.byte	0x3
	.quad	reg_last_set_table_tick
	.uleb128 0x25
	.long	.LASF941
	.byte	0x1
	.value	0x109
	.long	0x2fd
	.uleb128 0x9
	.byte	0x3
	.quad	reg_last_set_invalid
	.uleb128 0x25
	.long	.LASF942
	.byte	0x1
	.value	0x10d
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	label_tick
	.uleb128 0x25
	.long	.LASF943
	.byte	0x1
	.value	0x119
	.long	0x1367
	.uleb128 0x9
	.byte	0x3
	.quad	reg_nonzero_bits
	.uleb128 0x25
	.long	.LASF944
	.byte	0x1
	.value	0x11e
	.long	0x51f
	.uleb128 0x9
	.byte	0x3
	.quad	nonzero_bits_mode
	.uleb128 0x25
	.long	.LASF945
	.byte	0x1
	.value	0x123
	.long	0x1567
	.uleb128 0x9
	.byte	0x3
	.quad	reg_sign_bit_copies
	.uleb128 0x25
	.long	.LASF946
	.byte	0x1
	.value	0x12a
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	nonzero_sign_valid
	.uleb128 0x25
	.long	.LASF947
	.byte	0x1
	.value	0x131
	.long	0x5c26
	.uleb128 0x9
	.byte	0x3
	.quad	reg_last_set_mode
	.uleb128 0x3
	.byte	0x8
	.long	0x51f
	.uleb128 0x25
	.long	.LASF948
	.byte	0x1
	.value	0x132
	.long	0x1367
	.uleb128 0x9
	.byte	0x3
	.quad	reg_last_set_nonzero_bits
	.uleb128 0x25
	.long	.LASF949
	.byte	0x1
	.value	0x133
	.long	0x2fd
	.uleb128 0x9
	.byte	0x3
	.quad	reg_last_set_sign_bit_copies
	.uleb128 0x25
	.long	.LASF599
	.byte	0x1
	.value	0x14e
	.long	0x1b5d
	.uleb128 0x9
	.byte	0x3
	.quad	undobuf
	.uleb128 0x25
	.long	.LASF950
	.byte	0x1
	.value	0x153
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	n_occurrences
	.uleb128 0x25
	.long	.LASF951
	.byte	0x1
	.value	0x2d69
	.long	0x2a9
	.uleb128 0x9
	.byte	0x3
	.quad	reg_dead_regno
	.uleb128 0x25
	.long	.LASF952
	.byte	0x1
	.value	0x2d69
	.long	0x2a9
	.uleb128 0x9
	.byte	0x3
	.quad	reg_dead_endregno
	.uleb128 0x25
	.long	.LASF953
	.byte	0x1
	.value	0x2d6a
	.long	0x13e
	.uleb128 0x9
	.byte	0x3
	.quad	reg_dead_flag
	.uleb128 0x32
	.long	.LASF954
	.byte	0x4
	.byte	0x62
	.long	0x13e
	.uleb128 0x32
	.long	.LASF955
	.byte	0x4
	.byte	0xd6
	.long	0x139
	.uleb128 0x33
	.long	.LASF956
	.byte	0x4
	.value	0x19c
	.long	0x14c
	.uleb128 0x14
	.long	0x694
	.long	0x5cf8
	.uleb128 0x15
	.long	0x145
	.byte	0x3a
	.byte	0
	.uleb128 0x32
	.long	.LASF171
	.byte	0x9
	.byte	0x34
	.long	0x5d03
	.uleb128 0xa
	.long	0x5ce8
	.uleb128 0x14
	.long	0x2cb
	.long	0x5d18
	.uleb128 0x15
	.long	0x145
	.byte	0x3a
	.byte	0
	.uleb128 0x32
	.long	.LASF957
	.byte	0x9
	.byte	0x50
	.long	0x5d23
	.uleb128 0xa
	.long	0x5d08
	.uleb128 0x14
	.long	0x2d2
	.long	0x5d38
	.uleb128 0x15
	.long	0x145
	.byte	0x3a
	.byte	0
	.uleb128 0x32
	.long	.LASF958
	.byte	0x9
	.byte	0x60
	.long	0x5d43
	.uleb128 0xa
	.long	0x5d28
	.uleb128 0x14
	.long	0x2c4
	.long	0x5d58
	.uleb128 0x15
	.long	0x145
	.byte	0x3a
	.byte	0
	.uleb128 0x32
	.long	.LASF959
	.byte	0x9
	.byte	0x6a
	.long	0x5d63
	.uleb128 0xa
	.long	0x5d48
	.uleb128 0x32
	.long	.LASF960
	.byte	0x9
	.byte	0x7b
	.long	0x5d73
	.uleb128 0xa
	.long	0x5d08
	.uleb128 0x14
	.long	0x51f
	.long	0x5d88
	.uleb128 0x15
	.long	0x145
	.byte	0x8
	.byte	0
	.uleb128 0x32
	.long	.LASF961
	.byte	0x9
	.byte	0x9d
	.long	0x5d93
	.uleb128 0xa
	.long	0x5d78
	.uleb128 0x32
	.long	.LASF962
	.byte	0x9
	.byte	0xa3
	.long	0x51f
	.uleb128 0x32
	.long	.LASF963
	.byte	0x9
	.byte	0xa4
	.long	0x51f
	.uleb128 0x14
	.long	0x2cb
	.long	0x5dbe
	.uleb128 0x15
	.long	0x145
	.byte	0x98
	.byte	0
	.uleb128 0x32
	.long	.LASF964
	.byte	0x2
	.byte	0x36
	.long	0x5dc9
	.uleb128 0xa
	.long	0x5dae
	.uleb128 0x14
	.long	0x500
	.long	0x5dde
	.uleb128 0x15
	.long	0x145
	.byte	0x98
	.byte	0
	.uleb128 0x32
	.long	.LASF965
	.byte	0x2
	.byte	0x3c
	.long	0x5de9
	.uleb128 0xa
	.long	0x5dce
	.uleb128 0x14
	.long	0x303
	.long	0x5dfe
	.uleb128 0x15
	.long	0x145
	.byte	0x98
	.byte	0
	.uleb128 0x32
	.long	.LASF966
	.byte	0x2
	.byte	0x3f
	.long	0x5e09
	.uleb128 0xa
	.long	0x5dee
	.uleb128 0x14
	.long	0x2d
	.long	0x5e1e
	.uleb128 0x15
	.long	0x145
	.byte	0x80
	.byte	0
	.uleb128 0x33
	.long	.LASF967
	.byte	0x2
	.value	0x611
	.long	0x5e0e
	.uleb128 0x33
	.long	.LASF968
	.byte	0x2
	.value	0x617
	.long	0x2d
	.uleb128 0x14
	.long	0x2d
	.long	0x5e46
	.uleb128 0x15
	.long	0x145
	.byte	0xa
	.byte	0
	.uleb128 0x33
	.long	.LASF969
	.byte	0x2
	.value	0x652
	.long	0x5e36
	.uleb128 0x33
	.long	.LASF970
	.byte	0x12
	.value	0x12a
	.long	0x13e
	.uleb128 0x33
	.long	.LASF971
	.byte	0x12
	.value	0x15a
	.long	0x13e
	.uleb128 0x33
	.long	.LASF972
	.byte	0x12
	.value	0x282
	.long	0x13e
	.uleb128 0x32
	.long	.LASF973
	.byte	0xd
	.byte	0x41
	.long	0x128e
	.uleb128 0x14
	.long	0x51f
	.long	0x5e91
	.uleb128 0x15
	.long	0x145
	.byte	0x34
	.byte	0
	.uleb128 0x32
	.long	.LASF974
	.byte	0xd
	.byte	0xad
	.long	0x5e81
	.uleb128 0x14
	.long	0x303
	.long	0x5eac
	.uleb128 0x15
	.long	0x145
	.byte	0x34
	.byte	0
	.uleb128 0x33
	.long	.LASF975
	.byte	0xe
	.value	0x18b
	.long	0x5e9c
	.uleb128 0x33
	.long	.LASF976
	.byte	0xe
	.value	0x1b0
	.long	0x5e9c
	.uleb128 0x33
	.long	.LASF977
	.byte	0xe
	.value	0x1b9
	.long	0x129f
	.uleb128 0x32
	.long	.LASF978
	.byte	0xb
	.byte	0xe4
	.long	0x13e
	.uleb128 0x32
	.long	.LASF979
	.byte	0xb
	.byte	0xec
	.long	0x128e
	.uleb128 0x33
	.long	.LASF980
	.byte	0x10
	.value	0x1e4
	.long	0x1a81
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x17
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x17
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0xa
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.LBB57-.Ltext0
	.quad	.LBE57-.Ltext0
	.quad	.LBB61-.Ltext0
	.quad	.LBE61-.Ltext0
	.quad	0
	.quad	0
	.quad	.LBB125-.Ltext0
	.quad	.LBE125-.Ltext0
	.quad	.LBB126-.Ltext0
	.quad	.LBE126-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF370:
	.string	"REG_BR_PROB"
.LASF400:
	.string	"NOTE_INSN_EH_REGION_BEG"
.LASF554:
	.string	"profile_label_no"
.LASF327:
	.string	"rtstr"
.LASF387:
	.string	"NOTE_INSN_DELETED"
.LASF103:
	.string	"_unused2"
.LASF255:
	.string	"UMOD"
.LASF309:
	.string	"min_align"
.LASF89:
	.string	"_fileno"
.LASF424:
	.string	"varray_data_tag"
.LASF728:
	.string	"cond_op1"
.LASF856:
	.string	"combine_reversed_comparison_code"
.LASF34:
	.string	"AD_REGS"
.LASF335:
	.string	"first"
.LASF802:
	.string	"op0_maybe_minusp"
.LASF548:
	.string	"inlinable"
.LASF796:
	.string	"alignment"
.LASF580:
	.string	"uses_const_pool"
.LASF296:
	.string	"CONSTANT_P_RTX"
.LASF659:
	.string	"sign"
.LASF976:
	.string	"global_regs"
.LASF914:
	.string	"dump_combine_total_stats"
.LASF881:
	.string	"block"
.LASF754:
	.string	"orig_pos"
.LASF635:
	.string	"added_sets_1"
.LASF636:
	.string	"added_sets_2"
.LASF772:
	.string	"cval"
.LASF326:
	.string	"rtuint"
.LASF978:
	.string	"n_basic_blocks"
.LASF599:
	.string	"undobuf"
.LASF792:
	.string	"varop"
.LASF665:
	.string	"ni2dest"
.LASF330:
	.string	"rt_cselib"
.LASF199:
	.string	"DEFINE_PEEPHOLE2"
.LASF657:
	.string	"validate_replacement"
.LASF12:
	.string	"rtvec_def"
.LASF553:
	.string	"inl_max_label_num"
.LASF259:
	.string	"LSHIFTRT"
.LASF800:
	.string	"low0"
.LASF801:
	.string	"low1"
.LASF836:
	.string	"recog_for_combine"
.LASF632:
	.string	"newi2pat"
.LASF193:
	.string	"MATCH_PAR_DUP"
.LASF94:
	.string	"_shortbuf"
.LASF983:
	.string	"/home/yunqi/SPEC2006/benchspec/CPU2006/403.gcc/build/build_base_amd64-m64-gcc43-nn.0000"
.LASF254:
	.string	"UDIV"
.LASF10:
	.string	"rtvec"
.LASF743:
	.string	"make_extraction"
.LASF825:
	.string	"signed_count"
.LASF187:
	.string	"MATCH_OPERAND"
.LASF488:
	.string	"x_first_label_num"
.LASF168:
	.string	"CCFPmode"
.LASF689:
	.string	"i1_insn"
.LASF26:
	.string	"reg_class"
.LASF753:
	.string	"orig_pos_rtx"
.LASF276:
	.string	"UNLE"
.LASF38:
	.string	"LEGACY_REGS"
.LASF314:
	.string	"max_after_base"
.LASF903:
	.string	"place"
.LASF662:
	.string	"new_dest"
.LASF277:
	.string	"UNLT"
.LASF961:
	.string	"class_narrowest_mode"
.LASF634:
	.string	"substed_i1"
.LASF633:
	.string	"substed_i2"
.LASF581:
	.string	"uses_pic_offset_table"
.LASF587:
	.string	"initial_value_struct"
.LASF473:
	.string	"probability"
.LASF614:
	.string	"set_nonzero_bits_and_sign_copies"
.LASF140:
	.string	"CTImode"
.LASF75:
	.string	"_flags"
.LASF874:
	.string	"replace"
.LASF457:
	.string	"next"
.LASF70:
	.string	"__off_t"
.LASF806:
	.string	"mode_mask"
.LASF740:
	.string	"expand_field_assignment"
.LASF894:
	.string	"oldnotes"
.LASF138:
	.string	"CSImode"
.LASF40:
	.string	"FP_TOP_REG"
.LASF673:
	.string	"split_mode"
.LASF298:
	.string	"VEC_MERGE"
.LASF551:
	.string	"original_decl_initial"
.LASF95:
	.string	"_lock"
.LASF426:
	.string	"uhint"
.LASF231:
	.string	"RETURN"
.LASF719:
	.string	"op0_size"
.LASF950:
	.string	"n_occurrences"
.LASF427:
	.string	"generic"
.LASF731:
	.string	"old_code"
.LASF14:
	.string	"elem"
.LASF174:
	.string	"MODE_FLOAT"
.LASF929:
	.string	"last_call_cuid"
.LASF606:
	.string	"do_SUBST"
.LASF926:
	.string	"reg_last_death"
.LASF931:
	.string	"subst_prev_insn"
.LASF814:
	.string	"extended_count"
.LASF318:
	.string	"alias"
.LASF315:
	.string	"offset_unsigned"
.LASF144:
	.string	"V2SImode"
.LASF577:
	.string	"stdarg"
.LASF538:
	.string	"x_trampoline_list"
.LASF705:
	.string	"reversed"
.LASF35:
	.string	"Q_REGS"
.LASF878:
	.string	"endreg"
.LASF218:
	.string	"CODE_LABEL"
.LASF893:
	.string	"ourend"
.LASF139:
	.string	"CDImode"
.LASF224:
	.string	"UNSPEC"
.LASF785:
	.string	"known_cond"
.LASF217:
	.string	"BARRIER"
.LASF747:
	.string	"wanted_inner_mode"
.LASF393:
	.string	"NOTE_INSN_LOOP_VTOP"
.LASF220:
	.string	"COND_EXEC"
.LASF697:
	.string	"mask"
.LASF234:
	.string	"CONST_INT"
.LASF895:
	.string	"reg_bitfield_target_p"
.LASF230:
	.string	"CALL"
.LASF60:
	.string	"maybe_vaarg"
.LASF559:
	.string	"epilogue_delay_list"
.LASF146:
	.string	"V4QImode"
.LASF209:
	.string	"ATTR"
.LASF640:
	.string	"i2_code_number"
.LASF350:
	.string	"count"
.LASF328:
	.string	"rttype"
.LASF805:
	.string	"result_low"
.LASF965:
	.string	"rtx_format"
.LASF858:
	.string	"reversed_comparison"
.LASF860:
	.string	"update_table_tick"
.LASF29:
	.string	"DREG"
.LASF340:
	.string	"head_tree"
.LASF47:
	.string	"FLOAT_SSE_REGS"
.LASF417:
	.string	"GR_VIRTUAL_STACK_ARGS"
.LASF617:
	.string	"all_adjacent"
.LASF145:
	.string	"V2DImode"
.LASF528:
	.string	"x_return_label"
.LASF21:
	.string	"PROCESSOR_K6"
.LASF699:
	.string	"subst"
.LASF454:
	.string	"varray_type"
.LASF323:
	.string	"mem_attrs"
.LASF81:
	.string	"_IO_write_end"
.LASF364:
	.string	"REG_UNUSED"
.LASF986:
	.string	"setup_incoming_promotions"
.LASF202:
	.string	"DEFINE_DELAY"
.LASF797:
	.string	"nonzero0"
.LASF252:
	.string	"MINUS"
.LASF535:
	.string	"x_clobber_return_insn"
.LASF835:
	.string	"varop_inner"
.LASF32:
	.string	"SIREG"
.LASF646:
	.string	"i2dest_in_i2src"
.LASF686:
	.string	"call_usage"
.LASF830:
	.string	"const_rtx"
.LASF433:
	.string	"sched_info_tag"
.LASF242:
	.string	"STRICT_LOW_PART"
.LASF667:
	.string	"i3set"
.LASF184:
	.string	"INCLUDE"
.LASF413:
	.string	"GR_FRAME_POINTER"
.LASF348:
	.string	"index"
.LASF440:
	.string	"freq"
.LASF280:
	.string	"ZERO_EXTEND"
.LASF899:
	.string	"endtregno"
.LASF283:
	.string	"FLOAT_TRUNCATE"
.LASF504:
	.string	"x_forced_labels"
.LASF519:
	.string	"internal_arg_pointer"
.LASF410:
	.string	"GR_PC"
.LASF861:
	.string	"endregno"
.LASF902:
	.string	"next_note"
.LASF31:
	.string	"BREG"
.LASF155:
	.string	"V2SFmode"
.LASF447:
	.string	"varray_data"
.LASF589:
	.string	"machine_function"
.LASF284:
	.string	"FLOAT"
.LASF733:
	.string	"term1"
.LASF734:
	.string	"term2"
.LASF735:
	.string	"term3"
.LASF376:
	.string	"REG_EH_CONTEXT"
.LASF110:
	.string	"machine_mode"
.LASF637:
	.string	"total_sets"
.LASF820:
	.string	"const0"
.LASF818:
	.string	"const1"
.LASF949:
	.string	"reg_last_set_sign_bit_copies"
.LASF716:
	.string	"op_mode"
.LASF944:
	.string	"nonzero_bits_mode"
.LASF333:
	.string	"rtmem"
.LASF547:
	.string	"fixup_var_refs_queue"
.LASF293:
	.string	"RANGE_REG"
.LASF331:
	.string	"rtbit"
.LASF456:
	.string	"bitmap_element_def"
.LASF3:
	.string	"call"
.LASF117:
	.string	"TImode"
.LASF774:
	.string	"smask"
.LASF269:
	.string	"PRE_MODIFY"
.LASF905:
	.string	"all_used"
.LASF562:
	.string	"returns_pointer"
.LASF282:
	.string	"FLOAT_EXTEND"
.LASF591:
	.string	"extraction_pattern"
.LASF437:
	.string	"last_note_uid"
.LASF945:
	.string	"reg_sign_bit_copies"
.LASF507:
	.string	"stmt"
.LASF6:
	.string	"in_struct"
.LASF388:
	.string	"NOTE_INSN_BLOCK_BEG"
.LASF115:
	.string	"SImode"
.LASF226:
	.string	"ADDR_VEC"
.LASF585:
	.string	"stmt_status"
.LASF156:
	.string	"V2DFmode"
.LASF680:
	.string	"i3links"
.LASF308:
	.string	"LAST_AND_UNUSED_RTX_CODE"
.LASF918:
	.string	"combine_successes"
.LASF972:
	.string	"flag_non_call_exceptions"
.LASF322:
	.string	"align"
.LASF59:
	.string	"sse_regno"
.LASF337:
	.string	"indx"
.LASF555:
	.string	"machine"
.LASF846:
	.string	"tem1"
.LASF730:
	.string	"simplify_set"
.LASF245:
	.string	"SYMBOL_REF"
.LASF386:
	.string	"NOTE_INSN_BIAS"
.LASF963:
	.string	"word_mode"
.LASF736:
	.string	"simplify_logical"
.LASF408:
	.string	"NOTE_INSN_MAX"
.LASF502:
	.string	"x_saveregs_value"
.LASF681:
	.string	"i2links"
.LASF678:
	.string	"i2notes"
.LASF198:
	.string	"DEFINE_INSN_AND_SPLIT"
.LASF250:
	.string	"COMPARE"
.LASF278:
	.string	"LTGT"
.LASF655:
	.string	"temp"
.LASF482:
	.string	"unsignedp"
.LASF290:
	.string	"HIGH"
.LASF247:
	.string	"QUEUED"
.LASF36:
	.string	"NON_Q_REGS"
.LASF1:
	.string	"mode"
.LASF930:
	.string	"subst_insn"
.LASF116:
	.string	"DImode"
.LASF464:
	.string	"elms"
.LASF682:
	.string	"i1links"
.LASF422:
	.string	"const_equiv_data"
.LASF521:
	.string	"hard_reg_initial_vals"
.LASF592:
	.string	"EP_insv"
.LASF500:
	.string	"x_inhibit_defer_pop"
.LASF88:
	.string	"_chain"
.LASF821:
	.string	"simplify_shift_const"
.LASF268:
	.string	"POST_INC"
.LASF842:
	.string	"gen_lowpart_for_combine"
.LASF17:
	.string	"PROCESSOR_I386"
.LASF129:
	.string	"TFmode"
.LASF670:
	.string	"new_i2_dest"
.LASF66:
	.string	"unsigned char"
.LASF588:
	.string	"temp_slot"
.LASF41:
	.string	"FP_SECOND_REG"
.LASF505:
	.string	"x_pending_chain"
.LASF601:
	.string	"frees"
.LASF602:
	.string	"other_insn"
.LASF520:
	.string	"cannot_inline"
.LASF700:
	.string	"from"
.LASF958:
	.string	"mode_bitsize"
.LASF985:
	.string	"_IO_lock_t"
.LASF923:
	.string	"uid_cuid"
.LASF866:
	.string	"record_dead_insn"
.LASF23:
	.string	"PROCESSOR_PENTIUM4"
.LASF444:
	.string	"basic_block"
.LASF112:
	.string	"BImode"
.LASF266:
	.string	"PRE_INC"
.LASF363:
	.string	"REG_NO_CONFLICT"
.LASF126:
	.string	"SFmode"
.LASF890:
	.string	"after_dead"
.LASF741:
	.string	"compute_mode"
.LASF692:
	.string	"undo_commit"
.LASF799:
	.string	"width1"
.LASF508:
	.string	"emit"
.LASF737:
	.string	"num_negated"
.LASF847:
	.string	"shift_count"
.LASF788:
	.string	"assign"
.LASF672:
	.string	"split_code"
.LASF215:
	.string	"JUMP_INSN"
.LASF345:
	.string	"cond_local_set"
.LASF24:
	.string	"PROCESSOR_max"
.LASF897:
	.string	"target"
.LASF474:
	.string	"edge"
.LASF178:
	.string	"MODE_COMPLEX_FLOAT"
.LASF671:
	.string	"newdest"
.LASF332:
	.string	"rttree"
.LASF687:
	.string	"i2_insn"
.LASF813:
	.string	"combine_instructions"
.LASF385:
	.string	"insn_note"
.LASF404:
	.string	"NOTE_INSN_RANGE_END"
.LASF197:
	.string	"DEFINE_SPLIT"
.LASF569:
	.string	"has_nonlocal_goto"
.LASF583:
	.string	"arg_pointer_save_area_init"
.LASF934:
	.string	"added_links_insn"
.LASF868:
	.string	"record_promoted_value"
.LASF236:
	.string	"CONST_VECTOR"
.LASF194:
	.string	"MATCH_INSN"
.LASF891:
	.string	"deadregno"
.LASF593:
	.string	"EP_extv"
.LASF529:
	.string	"x_save_expr_regs"
.LASF127:
	.string	"DFmode"
.LASF43:
	.string	"SSE_REGS"
.LASF467:
	.string	"gcov_type"
.LASF616:
	.string	"psrc"
.LASF64:
	.string	"size_t"
.LASF228:
	.string	"PREFETCH"
.LASF831:
	.string	"complement_p"
.LASF52:
	.string	"LIM_REG_CLASSES"
.LASF51:
	.string	"ALL_REGS"
.LASF512:
	.string	"pops_args"
.LASF121:
	.string	"PSImode"
.LASF852:
	.string	"const_op"
.LASF746:
	.string	"is_mode"
.LASF531:
	.string	"x_rtl_expr_chain"
.LASF942:
	.string	"label_tick"
.LASF675:
	.string	"new_other_notes"
.LASF292:
	.string	"RANGE_INFO"
.LASF690:
	.string	"i1_val"
.LASF423:
	.string	"rtunion_def"
.LASF208:
	.string	"DEFINE_ATTR"
.LASF951:
	.string	"reg_dead_regno"
.LASF210:
	.string	"SET_ATTR"
.LASF135:
	.string	"TCmode"
.LASF523:
	.string	"x_nonlocal_labels"
.LASF939:
	.string	"reg_last_set_label"
.LASF936:
	.string	"refresh_blocks"
.LASF285:
	.string	"UNSIGNED_FLOAT"
.LASF375:
	.string	"REG_FRAME_RELATED_EXPR"
.LASF432:
	.string	"cselib_val_struct"
.LASF407:
	.string	"NOTE_INSN_EXPECTED_VALUE"
.LASF915:
	.string	"combine_attempts"
.LASF80:
	.string	"_IO_write_ptr"
.LASF257:
	.string	"ROTATE"
.LASF343:
	.string	"succ"
.LASF439:
	.string	"refs"
.LASF631:
	.string	"newpat"
.LASF281:
	.string	"TRUNCATE"
.LASF368:
	.string	"REG_DEP_ANTI"
.LASF663:
	.string	"m_split"
.LASF132:
	.string	"SCmode"
.LASF712:
	.string	"other"
.LASF964:
	.string	"rtx_length"
.LASF418:
	.string	"GR_VIRTUAL_STACK_DYNAMIC"
.LASF122:
	.string	"PDImode"
.LASF389:
	.string	"NOTE_INSN_BLOCK_END"
.LASF429:
	.string	"bitmap"
.LASF851:
	.string	"unsigned_comparison_p"
.LASF759:
	.string	"mode_width"
.LASF398:
	.string	"NOTE_INSN_DELETED_LABEL"
.LASF966:
	.string	"rtx_class"
.LASF880:
	.string	"reg_dead_at_p"
.LASF612:
	.string	"link"
.LASF352:
	.string	"flags"
.LASF497:
	.string	"x_regno_reg_rtx"
.LASF185:
	.string	"EXPR_LIST"
.LASF212:
	.string	"EQ_ATTR"
.LASF165:
	.string	"CCGOCmode"
.LASF243:
	.string	"CONCAT"
.LASF18:
	.string	"PROCESSOR_I486"
.LASF469:
	.string	"pred_next"
.LASF311:
	.string	"min_after_vec"
.LASF73:
	.string	"FILE"
.LASF249:
	.string	"COND"
.LASF461:
	.string	"simple_bitmap_def"
.LASF175:
	.string	"MODE_PARTIAL_INT"
.LASF850:
	.string	"sign_bit_comparison_p"
.LASF539:
	.string	"x_parm_birth_insn"
.LASF946:
	.string	"nonzero_sign_valid"
.LASF541:
	.string	"x_max_parm_reg"
.LASF15:
	.string	"tree"
.LASF862:
	.string	"record_value_for_reg"
.LASF133:
	.string	"DCmode"
.LASF787:
	.string	"make_field_assignment"
.LASF200:
	.string	"DEFINE_COMBINE"
.LASF708:
	.string	"false_rtx"
.LASF981:
	.string	"GNU C 4.8.1 -mtune=generic -march=x86-64 -g -fno-strict-aliasing -fstack-protector"
.LASF533:
	.string	"x_tail_recursion_reentry"
.LASF258:
	.string	"ASHIFTRT"
.LASF826:
	.string	"shift_mode"
.LASF755:
	.string	"final_word"
.LASF163:
	.string	"CCmode"
.LASF19:
	.string	"PROCESSOR_PENTIUM"
.LASF625:
	.string	"i1dest"
.LASF341:
	.string	"end_tree"
.LASF42:
	.string	"FLOAT_REGS"
.LASF391:
	.string	"NOTE_INSN_LOOP_END"
.LASF161:
	.string	"V16SFmode"
.LASF762:
	.string	"get_pos_from_mask"
.LASF660:
	.string	"cc_use"
.LASF707:
	.string	"true_rtx"
.LASF911:
	.string	"insn_cuid"
.LASF784:
	.string	"false1"
.LASF405:
	.string	"NOTE_INSN_LIVE"
.LASF205:
	.string	"DEFINE_COND_EXEC"
.LASF84:
	.string	"_IO_save_base"
.LASF843:
	.string	"gen_binary"
.LASF479:
	.string	"var_refs_queue"
.LASF770:
	.string	"shiftrt"
.LASF501:
	.string	"x_stack_pointer_delta"
.LASF201:
	.string	"DEFINE_EXPAND"
.LASF572:
	.string	"is_thunk"
.LASF450:
	.string	"elements_used"
.LASF922:
	.string	"total_successes"
.LASF152:
	.string	"V8SImode"
.LASF525:
	.string	"x_nonlocal_goto_handler_labels"
.LASF214:
	.string	"INSN"
.LASF325:
	.string	"rtint"
.LASF725:
	.string	"false_val"
.LASF244:
	.string	"LABEL_REF"
.LASF598:
	.string	"where"
.LASF367:
	.string	"REG_LABEL"
.LASF775:
	.string	"inner_mask"
.LASF446:
	.string	"elt_list"
.LASF644:
	.string	"i1src"
.LASF355:
	.string	"REG_DEAD"
.LASF912:
	.string	"file"
.LASF763:
	.string	"plen"
.LASF395:
	.string	"NOTE_INSN_FUNCTION_END"
.LASF98:
	.string	"__pad2"
.LASF957:
	.string	"mode_size"
.LASF358:
	.string	"REG_EQUAL"
.LASF0:
	.string	"code"
.LASF466:
	.string	"regset"
.LASF752:
	.string	"spans_byte"
.LASF477:
	.string	"UPDATE_LIFE_GLOBAL"
.LASF916:
	.string	"combine_merges"
.LASF164:
	.string	"CCGCmode"
.LASF943:
	.string	"reg_nonzero_bits"
.LASF347:
	.string	"global_live_at_end"
.LASF977:
	.string	"regs_invalidated_by_call"
.LASF240:
	.string	"SCRATCH"
.LASF150:
	.string	"V8QImode"
.LASF153:
	.string	"V8DImode"
.LASF181:
	.string	"MAX_MODE_CLASS"
.LASF973:
	.string	"reg_n_info"
.LASF776:
	.string	"if_then_else_cond"
.LASF955:
	.string	"x86_partial_reg_stall"
.LASF859:
	.string	"reversed_code"
.LASF810:
	.string	"num0"
.LASF811:
	.string	"num1"
.LASF920:
	.string	"total_merges"
.LASF279:
	.string	"SIGN_EXTEND"
.LASF564:
	.string	"calls_setjmp"
.LASF595:
	.string	"undo"
.LASF652:
	.string	"i3_subst_into_i2"
.LASF863:
	.string	"value"
.LASF967:
	.string	"const_int_rtx"
.LASF301:
	.string	"VEC_DUPLICATE"
.LASF526:
	.string	"x_nonlocal_goto_stack_level"
.LASF849:
	.string	"equality_comparison_p"
.LASF105:
	.string	"_next"
.LASF970:
	.string	"flag_expensive_optimizations"
.LASF319:
	.string	"expr"
.LASF401:
	.string	"NOTE_INSN_EH_REGION_END"
.LASF622:
	.string	"inner_dest"
.LASF873:
	.string	"tick"
.LASF524:
	.string	"x_nonlocal_goto_handler_slots"
.LASF159:
	.string	"V8SFmode"
.LASF982:
	.string	"combine.c"
.LASF654:
	.string	"maxreg"
.LASF608:
	.string	"insn"
.LASF33:
	.string	"DIREG"
.LASF366:
	.string	"REG_CC_USER"
.LASF223:
	.string	"ASM_OPERANDS"
.LASF969:
	.string	"global_rtl"
.LASF544:
	.string	"x_temp_slot_level"
.LASF167:
	.string	"CCZmode"
.LASF392:
	.string	"NOTE_INSN_LOOP_CONT"
.LASF793:
	.string	"constop"
.LASF37:
	.string	"INDEX_REGS"
.LASF25:
	.string	"processor_type"
.LASF756:
	.string	"extract_left_shift"
.LASF953:
	.string	"reg_dead_flag"
.LASF603:
	.string	"into"
.LASF570:
	.string	"contains_functions"
.LASF898:
	.string	"tregno"
.LASF509:
	.string	"varasm"
.LASF381:
	.string	"REG_NON_LOCAL_GOTO"
.LASF227:
	.string	"ADDR_DIFF_VEC"
.LASF744:
	.string	"pos_rtx"
.LASF574:
	.string	"profile"
.LASF289:
	.string	"ZERO_EXTRACT"
.LASF837:
	.string	"pnewpat"
.LASF883:
	.string	"testreg"
.LASF425:
	.string	"hint"
.LASF222:
	.string	"ASM_INPUT"
.LASF272:
	.string	"ORDERED"
.LASF160:
	.string	"V8DFmode"
.LASF887:
	.string	"to_insn"
.LASF481:
	.string	"promoted_mode"
.LASF832:
	.string	"first_code"
.LASF795:
	.string	"inner_nz"
.LASF710:
	.string	"cond_code"
.LASF449:
	.string	"num_elements"
.LASF286:
	.string	"UNSIGNED_FIX"
.LASF561:
	.string	"returns_pcc_struct"
.LASF718:
	.string	"new_code"
.LASF57:
	.string	"sse_words"
.LASF816:
	.string	"pop0"
.LASF39:
	.string	"GENERAL_REGS"
.LASF812:
	.string	"result"
.LASF452:
	.string	"name"
.LASF748:
	.string	"wanted_inner_reg_mode"
.LASF721:
	.string	"true_code"
.LASF186:
	.string	"INSN_LIST"
.LASF106:
	.string	"_sbuf"
.LASF294:
	.string	"RANGE_VAR"
.LASF445:
	.string	"changes_mode"
.LASF86:
	.string	"_IO_save_end"
.LASF959:
	.string	"mode_mask_array"
.LASF173:
	.string	"MODE_INT"
.LASF451:
	.string	"element_size"
.LASF974:
	.string	"reg_raw_mode"
.LASF516:
	.string	"arg_offset_rtx"
.LASF829:
	.string	"outer_const"
.LASF2:
	.string	"jump"
.LASF56:
	.string	"regno"
.LASF498:
	.string	"expr_status"
.LASF568:
	.string	"has_nonlocal_label"
.LASF971:
	.string	"flag_unsafe_math_optimizations"
.LASF295:
	.string	"RANGE_LIVE"
.LASF499:
	.string	"x_pending_stack_adjust"
.LASF143:
	.string	"V2HImode"
.LASF513:
	.string	"args_size"
.LASF9:
	.string	"frame_related"
.LASF431:
	.string	"const_equiv"
.LASF947:
	.string	"reg_last_set_mode"
.LASF703:
	.string	"op0_mode"
.LASF668:
	.string	"newi3pat"
.LASF436:
	.string	"last_uid"
.LASF329:
	.string	"rt_addr_diff_vec_flags"
.LASF768:
	.string	"nonzero"
.LASF415:
	.string	"GR_ARG_POINTER"
.LASF16:
	.string	"sizetype"
.LASF46:
	.string	"FP_SECOND_SSE_REGS"
.LASF304:
	.string	"SS_MINUS"
.LASF664:
	.string	"split"
.LASF191:
	.string	"MATCH_PARALLEL"
.LASF148:
	.string	"V4SImode"
.LASF5:
	.string	"volatil"
.LASF478:
	.string	"UPDATE_LIFE_GLOBAL_RM_NOTES"
.LASF357:
	.string	"REG_EQUIV"
.LASF67:
	.string	"short unsigned int"
.LASF948:
	.string	"reg_last_set_nonzero_bits"
.LASF68:
	.string	"signed char"
.LASF190:
	.string	"MATCH_OPERATOR"
.LASF919:
	.string	"total_attempts"
.LASF630:
	.string	"try_combine"
.LASF960:
	.string	"mode_wider_mode"
.LASF600:
	.string	"undos"
.LASF448:
	.string	"varray_head_tag"
.LASF336:
	.string	"current"
.LASF749:
	.string	"pos_mode"
.LASF924:
	.string	"max_uid_cuid"
.LASF491:
	.string	"x_cur_insn_uid"
.LASF540:
	.string	"x_last_parm_insn"
.LASF306:
	.string	"SS_TRUNCATE"
.LASF371:
	.string	"REG_EXEC_COUNT"
.LASF935:
	.string	"this_basic_block"
.LASF684:
	.string	"elim_i2"
.LASF549:
	.string	"no_debugging_symbols"
.LASF933:
	.string	"newpat_used_regs"
.LASF975:
	.string	"fixed_regs"
.LASF310:
	.string	"base_after_vec"
.LASF711:
	.string	"cmp_mode"
.LASF195:
	.string	"DEFINE_INSN"
.LASF715:
	.string	"inner_mode"
.LASF71:
	.string	"__off64_t"
.LASF149:
	.string	"V4DImode"
.LASF349:
	.string	"loop_depth"
.LASF706:
	.string	"cond"
.LASF78:
	.string	"_IO_read_base"
.LASF49:
	.string	"INT_SSE_REGS"
.LASF807:
	.string	"op_nonzero"
.LASF96:
	.string	"_offset"
.LASF416:
	.string	"GR_VIRTUAL_INCOMING_ARGS"
.LASF493:
	.string	"x_last_filename"
.LASF937:
	.string	"need_refresh"
.LASF369:
	.string	"REG_DEP_OUTPUT"
.LASF83:
	.string	"_IO_buf_end"
.LASF462:
	.string	"n_bits"
.LASF791:
	.string	"simplify_and_const_int"
.LASF204:
	.string	"DEFINE_ASM_ATTRIBUTES"
.LASF305:
	.string	"US_MINUS"
.LASF611:
	.string	"new_direct_jump_p"
.LASF888:
	.string	"where_dead"
.LASF871:
	.string	"format"
.LASF921:
	.string	"total_extras"
.LASF518:
	.string	"return_rtx"
.LASF45:
	.string	"FP_TOP_SSE_REGS"
.LASF629:
	.string	"cant_combine_insn_p"
.LASF908:
	.string	"distribute_links"
.LASF288:
	.string	"SIGN_EXTRACT"
.LASF8:
	.string	"integrated"
.LASF927:
	.string	"reg_last_set"
.LASF442:
	.string	"live_length"
.LASF900:
	.string	"distribute_notes"
.LASF229:
	.string	"CLOBBER"
.LASF709:
	.string	"cop1"
.LASF468:
	.string	"edge_def"
.LASF882:
	.string	"mark_used_regs_combine"
.LASF102:
	.string	"_mode"
.LASF179:
	.string	"MODE_VECTOR_INT"
.LASF79:
	.string	"_IO_write_base"
.LASF373:
	.string	"REG_SAVE_AREA"
.LASF297:
	.string	"CALL_PLACEHOLDER"
.LASF506:
	.string	"function"
.LASF157:
	.string	"V4SFmode"
.LASF815:
	.string	"merge_outer_ops"
.LASF854:
	.string	"new_const"
.LASF727:
	.string	"cond_op0"
.LASF573:
	.string	"instrument_entry_exit"
.LASF781:
	.string	"true0"
.LASF782:
	.string	"true1"
.LASF536:
	.string	"x_frame_offset"
.LASF751:
	.string	"tmode"
.LASF251:
	.string	"PLUS"
.LASF757:
	.string	"make_compound_operation"
.LASF267:
	.string	"POST_DEC"
.LASF459:
	.string	"bits"
.LASF114:
	.string	"HImode"
.LASF353:
	.string	"rtunion"
.LASF394:
	.string	"NOTE_INSN_LOOP_END_TOP_COND"
.LASF771:
	.string	"unop"
.LASF476:
	.string	"UPDATE_LIFE_LOCAL"
.LASF177:
	.string	"MODE_COMPLEX_INT"
.LASF584:
	.string	"eh_status"
.LASF483:
	.string	"sequence_stack"
.LASF63:
	.string	"long int"
.LASF420:
	.string	"GR_VIRTUAL_CFA"
.LASF745:
	.string	"in_compare"
.LASF750:
	.string	"extraction_mode"
.LASF979:
	.string	"basic_block_info"
.LASF877:
	.string	"from_cuid"
.LASF359:
	.string	"REG_WAS_0"
.LASF594:
	.string	"EP_extzv"
.LASF853:
	.string	"add_const"
.LASF822:
	.string	"result_mode"
.LASF607:
	.string	"do_SUBST_INT"
.LASF380:
	.string	"REG_NORETURN"
.LASF941:
	.string	"reg_last_set_invalid"
.LASF104:
	.string	"_IO_marker"
.LASF128:
	.string	"XFmode"
.LASF563:
	.string	"needs_context"
.LASF379:
	.string	"REG_MAYBE_DEAD"
.LASF834:
	.string	"mask_rtx"
.LASF158:
	.string	"V4DFmode"
.LASF4:
	.string	"unchanging"
.LASF786:
	.string	"rtx_equal_for_field_assignment_p"
.LASF354:
	.string	"reg_note"
.LASF567:
	.string	"calls_eh_return"
.LASF546:
	.string	"x_target_temp_slot_level"
.LASF514:
	.string	"pretend_args_size"
.LASF804:
	.string	"result_width"
.LASF182:
	.string	"rtx_code"
.LASF61:
	.string	"CUMULATIVE_ARGS"
.LASF484:
	.string	"last"
.LASF677:
	.string	"i3notes"
.LASF576:
	.string	"varargs"
.LASF729:
	.string	"extend_op"
.LASF872:
	.string	"get_last_value_validate"
.LASF909:
	.string	"next_link"
.LASF30:
	.string	"CREG"
.LASF648:
	.string	"i2dest_in_i1src"
.LASF642:
	.string	"i3dest_killed"
.LASF578:
	.string	"x_whole_function_mode_p"
.LASF183:
	.string	"UNKNOWN"
.LASF225:
	.string	"UNSPEC_VOLATILE"
.LASF613:
	.string	"init_reg_last_arrays"
.LASF702:
	.string	"unique_copy"
.LASF590:
	.string	"language_function"
.LASF917:
	.string	"combine_extras"
.LASF397:
	.string	"NOTE_INSN_EPILOGUE_BEG"
.LASF65:
	.string	"long unsigned int"
.LASF11:
	.string	"rtx_def"
.LASF938:
	.string	"reg_last_set_value"
.LASF638:
	.string	"i2_is_used"
.LASF962:
	.string	"byte_mode"
.LASF124:
	.string	"HFmode"
.LASF758:
	.string	"in_code"
.LASF713:
	.string	"inner_op0"
.LASF714:
	.string	"inner_op1"
.LASF552:
	.string	"inl_last_parm_insn"
.LASF232:
	.string	"TRAP_IF"
.LASF441:
	.string	"deaths"
.LASF666:
	.string	"i2set"
.LASF377:
	.string	"REG_EH_REGION"
.LASF542:
	.string	"x_parm_reg_stack_loc"
.LASF360:
	.string	"REG_RETVAL"
.LASF624:
	.string	"i2dest"
.LASF136:
	.string	"CQImode"
.LASF724:
	.string	"true_val"
.LASF790:
	.string	"inner_code"
.LASF72:
	.string	"char"
.LASF560:
	.string	"returns_struct"
.LASF134:
	.string	"XCmode"
.LASF534:
	.string	"x_arg_pointer_save_area"
.LASF952:
	.string	"reg_dead_endregno"
.LASF769:
	.string	"binop"
.LASF28:
	.string	"AREG"
.LASF532:
	.string	"x_tail_recursion_label"
.LASF808:
	.string	"num_sign_bit_copies"
.LASF82:
	.string	"_IO_buf_base"
.LASF558:
	.string	"language"
.LASF260:
	.string	"ROTATERT"
.LASF779:
	.string	"cond0"
.LASF780:
	.string	"cond1"
.LASF246:
	.string	"ADDRESSOF"
.LASF382:
	.string	"REG_SETJMP"
.LASF925:
	.string	"combine_max_regno"
.LASF142:
	.string	"V2QImode"
.LASF651:
	.string	"new_i2_notes"
.LASF487:
	.string	"x_reg_rtx_no"
.LASF120:
	.string	"PHImode"
.LASF77:
	.string	"_IO_read_end"
.LASF480:
	.string	"modified"
.LASF833:
	.string	"first_count"
.LASF798:
	.string	"width0"
.LASF496:
	.string	"regno_decl"
.LASF434:
	.string	"reg_info_def"
.LASF141:
	.string	"COImode"
.LASF265:
	.string	"PRE_DEC"
.LASF621:
	.string	"sets_function_arg_p"
.LASF696:
	.string	"src2"
.LASF885:
	.string	"move_deaths"
.LASF74:
	.string	"_IO_FILE"
.LASF396:
	.string	"NOTE_INSN_PROLOGUE_END"
.LASF414:
	.string	"GR_HARD_FRAME_POINTER"
.LASF365:
	.string	"REG_CC_SETTER"
.LASF566:
	.string	"calls_alloca"
.LASF828:
	.string	"outer_op"
.LASF693:
	.string	"find_split_point"
.LASF545:
	.string	"x_var_temp_slot_level"
.LASF172:
	.string	"MODE_RANDOM"
.LASF303:
	.string	"US_PLUS"
.LASF722:
	.string	"comparison_p"
.LASF742:
	.string	"imode"
.LASF162:
	.string	"BLKmode"
.LASF892:
	.string	"deadend"
.LASF131:
	.string	"HCmode"
.LASF904:
	.string	"place2"
.LASF803:
	.string	"op1_maybe_minusp"
.LASF841:
	.string	"dummy_insn"
.LASF717:
	.string	"temp1"
.LASF839:
	.string	"num_clobbers_to_add"
.LASF910:
	.string	"link2"
.LASF237:
	.string	"CONST_STRING"
.LASF300:
	.string	"VEC_CONCAT"
.LASF321:
	.string	"size"
.LASF623:
	.string	"combinable_i3pat"
.LASF766:
	.string	"next_select"
.LASF97:
	.string	"__pad1"
.LASF99:
	.string	"__pad3"
.LASF100:
	.string	"__pad4"
.LASF101:
	.string	"__pad5"
.LASF372:
	.string	"REG_NOALIAS"
.LASF213:
	.string	"ATTR_FLAG"
.LASF857:
	.string	"code1"
.LASF169:
	.string	"CCFPUmode"
.LASF356:
	.string	"REG_INC"
.LASF203:
	.string	"DEFINE_FUNCTION_UNIT"
.LASF465:
	.string	"sbitmap"
.LASF609:
	.string	"links"
.LASF537:
	.string	"x_context_display"
.LASF87:
	.string	"_markers"
.LASF107:
	.string	"_pos"
.LASF840:
	.string	"notes"
.LASF865:
	.string	"setter"
.LASF207:
	.string	"ADDRESS"
.LASF472:
	.string	"insns"
.LASF597:
	.string	"old_contents"
.LASF550:
	.string	"original_arg_vector"
.LASF628:
	.string	"contains_muldiv"
.LASF22:
	.string	"PROCESSOR_ATHLON"
.LASF582:
	.string	"uses_eh_lsda"
.LASF428:
	.string	"cptr"
.LASF334:
	.string	"bitmap_head_def"
.LASF838:
	.string	"pnotes"
.LASF764:
	.string	"force_to_mode"
.LASF848:
	.string	"changed"
.LASF443:
	.string	"calls_crossed"
.LASF307:
	.string	"US_TRUNCATE"
.LASF876:
	.string	"use_crosses_set_p"
.LASF794:
	.string	"nonzero_bits"
.LASF409:
	.string	"global_rtl_index"
.LASF55:
	.string	"nregs"
.LASF302:
	.string	"SS_PLUS"
.LASF264:
	.string	"UMAX"
.LASF44:
	.string	"MMX_REGS"
.LASF316:
	.string	"scale"
.LASF113:
	.string	"QImode"
.LASF817:
	.string	"pconst0"
.LASF954:
	.string	"target_flags"
.LASF928:
	.string	"mem_last_set"
.LASF453:
	.string	"data"
.LASF412:
	.string	"GR_STACK_POINTER"
.LASF761:
	.string	"newer"
.LASF125:
	.string	"TQFmode"
.LASF339:
	.string	"head"
.LASF618:
	.string	"i3pat"
.LASF20:
	.string	"PROCESSOR_PENTIUMPRO"
.LASF54:
	.string	"words"
.LASF844:
	.string	"simplify_comparison"
.LASF313:
	.string	"min_after_base"
.LASF886:
	.string	"maybe_kill_insn"
.LASF647:
	.string	"i1dest_in_i1src"
.LASF430:
	.string	"sched"
.LASF579:
	.string	"x_dont_save_pending_sizes_p"
.LASF53:
	.string	"ix86_args"
.LASF823:
	.string	"orig_count"
.LASF704:
	.string	"combine_simplify_rtx"
.LASF773:
	.string	"width"
.LASF27:
	.string	"NO_REGS"
.LASF980:
	.string	"cfun"
.LASF515:
	.string	"outgoing_args_size"
.LASF118:
	.string	"OImode"
.LASF378:
	.string	"REG_SAVE_NOTE"
.LASF695:
	.string	"src1"
.LASF620:
	.string	"can_combine_p"
.LASF463:
	.string	"bytes"
.LASF262:
	.string	"SMAX"
.LASF421:
	.string	"GR_MAX"
.LASF299:
	.string	"VEC_SELECT"
.LASF362:
	.string	"REG_NONNEG"
.LASF556:
	.string	"stack_alignment_needed"
.LASF870:
	.string	"check_promoted_subreg"
.LASF486:
	.string	"emit_status"
.LASF180:
	.string	"MODE_VECTOR_FLOAT"
.LASF270:
	.string	"POST_MODIFY"
.LASF884:
	.string	"remove_death"
.LASF656:
	.string	"retry"
.LASF875:
	.string	"get_last_value"
.LASF374:
	.string	"REG_BR_PRED"
.LASF196:
	.string	"DEFINE_PEEPHOLE"
.LASF108:
	.string	"long long unsigned int"
.LASF403:
	.string	"NOTE_INSN_RANGE_BEG"
.LASF320:
	.string	"offset"
.LASF317:
	.string	"addr_diff_vec_flags"
.LASF92:
	.string	"_cur_column"
.LASF192:
	.string	"MATCH_OP_DUP"
.LASF206:
	.string	"SEQUENCE"
.LASF674:
	.string	"other_pat"
.LASF956:
	.string	"ix86_cpu"
.LASF123:
	.string	"QFmode"
.LASF661:
	.string	"compare_mode"
.LASF688:
	.string	"i2_val"
.LASF809:
	.string	"bitwidth"
.LASF615:
	.string	"pdest"
.LASF438:
	.string	"sets"
.LASF517:
	.string	"args_info"
.LASF845:
	.string	"pop1"
.LASF777:
	.string	"ptrue"
.LASF819:
	.string	"pcomp_p"
.LASF575:
	.string	"limit_stack"
.LASF233:
	.string	"RESX"
.LASF471:
	.string	"dest"
.LASF221:
	.string	"PARALLEL"
.LASF13:
	.string	"num_elem"
.LASF940:
	.string	"reg_last_set_table_tick"
.LASF85:
	.string	"_IO_backup_base"
.LASF641:
	.string	"other_code_number"
.LASF271:
	.string	"UNORDERED"
.LASF170:
	.string	"MAX_MACHINE_MODE"
.LASF76:
	.string	"_IO_read_ptr"
.LASF346:
	.string	"global_live_at_start"
.LASF50:
	.string	"FLOAT_INT_SSE_REGS"
.LASF188:
	.string	"MATCH_SCRATCH"
.LASF238:
	.string	"CONST"
.LASF495:
	.string	"regno_pointer_align"
.LASF669:
	.string	"new_i3_dest"
.LASF287:
	.string	"SQRT"
.LASF698:
	.string	"extraction"
.LASF411:
	.string	"GR_CC0"
.LASF171:
	.string	"mode_class"
.LASF253:
	.string	"MULT"
.LASF643:
	.string	"i2src"
.LASF176:
	.string	"MODE_CC"
.LASF344:
	.string	"local_set"
.LASF685:
	.string	"elim_i1"
.LASF119:
	.string	"PQImode"
.LASF485:
	.string	"sequence_rtl_expr"
.LASF694:
	.string	"inner"
.LASF151:
	.string	"V8HImode"
.LASF639:
	.string	"insn_code_number"
.LASF869:
	.string	"subreg"
.LASF543:
	.string	"x_temp_slots"
.LASF530:
	.string	"x_stack_slot_list"
.LASF91:
	.string	"_old_offset"
.LASF789:
	.string	"apply_distributive_law"
.LASF216:
	.string	"CALL_INSN"
.LASF864:
	.string	"record_dead_and_set_regs_1"
.LASF241:
	.string	"SUBREG"
.LASF767:
	.string	"fuller_mask"
.LASF565:
	.string	"calls_longjmp"
.LASF154:
	.string	"V16QImode"
.LASF383:
	.string	"REG_ALWAYS_RETURN"
.LASF510:
	.string	"decl"
.LASF109:
	.string	"long long int"
.LASF361:
	.string	"REG_LIBCALL"
.LASF90:
	.string	"_flags2"
.LASF130:
	.string	"QCmode"
.LASF239:
	.string	"VALUE"
.LASF219:
	.string	"NOTE"
.LASF824:
	.string	"orig_code"
.LASF645:
	.string	"i2pat"
.LASF650:
	.string	"new_i3_notes"
.LASF58:
	.string	"sse_nregs"
.LASF263:
	.string	"UMIN"
.LASF189:
	.string	"MATCH_DUP"
.LASF619:
	.string	"i3elt"
.LASF455:
	.string	"HARD_REG_ELT_TYPE"
.LASF338:
	.string	"basic_block_def"
.LASF723:
	.string	"false_code"
.LASF610:
	.string	"nextlinks"
.LASF913:
	.string	"dump_combine_stats"
.LASF586:
	.string	"varasm_status"
.LASF7:
	.string	"used"
.LASF896:
	.string	"body"
.LASF932:
	.string	"subst_low_cuid"
.LASF596:
	.string	"is_int"
.LASF390:
	.string	"NOTE_INSN_LOOP_BEG"
.LASF460:
	.string	"bitmap_element"
.LASF522:
	.string	"x_function_call_count"
.LASF137:
	.string	"CHImode"
.LASF406:
	.string	"NOTE_INSN_BASIC_BLOCK"
.LASF627:
	.string	"pi3dest_killed"
.LASF211:
	.string	"SET_ATTR_ALTERNATIVE"
.LASF760:
	.string	"next_code"
.LASF494:
	.string	"regno_pointer_align_length"
.LASF489:
	.string	"x_first_insn"
.LASF503:
	.string	"x_apply_args_value"
.LASF48:
	.string	"FLOAT_INT_REGS"
.LASF235:
	.string	"CONST_DOUBLE"
.LASF435:
	.string	"first_uid"
.LASF679:
	.string	"i1notes"
.LASF166:
	.string	"CCNOmode"
.LASF147:
	.string	"V4HImode"
.LASF889:
	.string	"before_dead"
.LASF273:
	.string	"UNEQ"
.LASF879:
	.string	"reg_dead_at_p_1"
.LASF256:
	.string	"ASHIFT"
.LASF261:
	.string	"SMIN"
.LASF658:
	.string	"__FUNCTION__"
.LASF701:
	.string	"in_dest"
.LASF248:
	.string	"IF_THEN_ELSE"
.LASF691:
	.string	"undo_all"
.LASF649:
	.string	"i1_feeds_i3"
.LASF402:
	.string	"NOTE_INSN_REPEATED_LINE_NUMBER"
.LASF511:
	.string	"outer"
.LASF720:
	.string	"simplify_if_then_else"
.LASF683:
	.string	"midnotes"
.LASF778:
	.string	"pfalse"
.LASF604:
	.string	"newval"
.LASF399:
	.string	"NOTE_INSN_FUNCTION_BEG"
.LASF492:
	.string	"x_last_linenum"
.LASF62:
	.string	"unsigned int"
.LASF732:
	.string	"other_changed"
.LASF765:
	.string	"just_select"
.LASF738:
	.string	"expand_compound_operation"
.LASF984:
	.string	"tree_node"
.LASF855:
	.string	"zero_extended"
.LASF783:
	.string	"false0"
.LASF676:
	.string	"note"
.LASF527:
	.string	"x_cleanup_label"
.LASF653:
	.string	"have_mult"
.LASF739:
	.string	"modewidth"
.LASF312:
	.string	"max_after_vec"
.LASF274:
	.string	"UNGE"
.LASF907:
	.string	"new_note"
.LASF605:
	.string	"oldval"
.LASF69:
	.string	"short int"
.LASF342:
	.string	"pred"
.LASF275:
	.string	"UNGT"
.LASF571:
	.string	"has_computed_jump"
.LASF490:
	.string	"x_last_insn"
.LASF458:
	.string	"prev"
.LASF93:
	.string	"_vtable_offset"
.LASF968:
	.string	"const_true_rtx"
.LASF626:
	.string	"i1_not_in_src"
.LASF557:
	.string	"preferred_stack_boundary"
.LASF726:
	.string	"swapped"
.LASF827:
	.string	"mode_words"
.LASF111:
	.string	"VOIDmode"
.LASF384:
	.string	"REG_VTABLE_REF"
.LASF419:
	.string	"GR_VIRTUAL_OUTGOING_ARGS"
.LASF291:
	.string	"LO_SUM"
.LASF475:
	.string	"update_life_extent"
.LASF351:
	.string	"frequency"
.LASF901:
	.string	"from_insn"
.LASF324:
	.string	"rtwint"
.LASF867:
	.string	"record_dead_and_set_regs"
.LASF906:
	.string	"piece"
.LASF470:
	.string	"succ_next"
	.ident	"GCC: (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1"
	.section	.note.GNU-stack,"",@progbits
