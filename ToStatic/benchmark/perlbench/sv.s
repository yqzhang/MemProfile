	.file	"sv.c"
# GNU C (Ubuntu/Linaro 4.8.1-10ubuntu9) version 4.8.1 (x86_64-linux-gnu)
#	compiled by GNU C version 4.8.1, GMP version 5.1.2, MPFR version 3.1.1-p2, MPC version 1.0.1
# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
# options passed:  -imultiarch x86_64-linux-gnu -D SPEC_CPU -D NDEBUG
# -D PERL_CORE -D SPEC_CPU_LP64 -D SPEC_CPU_LINUX_X64 sv.c -mtune=generic
# -march=x86-64 -g -fverbose-asm -fno-strict-aliasing -fstack-protector
# -Wformat -Wformat-security
# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg -fcommon
# -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
# -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
# -fident -finline-atomics -fira-hoist-pressure -fira-share-save-slots
# -fira-share-spill-slots -fivopts -fkeep-static-consts
# -fleading-underscore -fmath-errno -fmerge-debug-strings
# -fmove-loop-invariants -fpeephole -fprefetch-loop-arrays
# -freg-struct-return -fsched-critical-path-heuristic
# -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
# -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
# -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fshow-column
# -fsigned-zeros -fsplit-ivs-in-unroller -fstack-protector
# -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
# -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
# -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
# -ftree-parallelize-loops= -ftree-phiprop -ftree-pta -ftree-reassoc
# -ftree-scev-cprop -ftree-slp-vectorize -ftree-vect-loop-version
# -funit-at-a-time -funwind-tables -fverbose-asm -fzero-initialized-in-bss
# -m128bit-long-double -m64 -m80387 -maccumulate-outgoing-args
# -malign-stringops -mfancy-math-387 -mfp-ret-in-387 -mfxsr -mglibc
# -mieee-fp -mlong-double-80 -mmmx -mno-sse4 -mpush-args -mred-zone -msse
# -msse2 -mtls-direct-seg-refs

	.text
.Ltext0:
	.globl	Perl_sv_add_arena
	.type	Perl_sv_add_arena, @function
Perl_sv_add_arena:
.LFB2:
	.file 1 "sv.c"
	.loc 1 275 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -40(%rbp)	# ptr, ptr
	movl	%esi, -44(%rbp)	# size, size
	movl	%edx, -48(%rbp)	# flags, flags
	.loc 1 276 0
	movq	-40(%rbp), %rax	# ptr, tmp69
	movq	%rax, -24(%rbp)	# tmp69, sva
	.loc 1 281 0
	movq	PL_sv_arenaroot(%rip), %rdx	# PL_sv_arenaroot, PL_sv_arenaroot.0
	movq	-24(%rbp), %rax	# sva, tmp70
	movq	%rdx, (%rax)	# PL_sv_arenaroot.0, sva_3->sv_any
	.loc 1 282 0
	movl	-44(%rbp), %eax	# size, tmp71
	shrl	$4, %eax	#, D.22583
	movl	%eax, %edx	# D.22583, D.22583
	movq	-24(%rbp), %rax	# sva, tmp72
	movl	%edx, 8(%rax)	# D.22583, sva_3->sv_refcnt
	.loc 1 283 0
	movq	-24(%rbp), %rax	# sva, tmp73
	movl	-48(%rbp), %edx	# flags, tmp74
	movl	%edx, 12(%rax)	# tmp74, sva_3->sv_flags
	.loc 1 285 0
	movq	-24(%rbp), %rax	# sva, tmp75
	movq	%rax, PL_sv_arenaroot(%rip)	# tmp75, PL_sv_arenaroot
	.loc 1 286 0
	movq	-24(%rbp), %rax	# sva, tmp76
	addq	$16, %rax	#, PL_sv_root.1
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.1, PL_sv_root
	.loc 1 288 0
	movq	-24(%rbp), %rax	# sva, tmp77
	movl	8(%rax), %eax	# sva_3->sv_refcnt, D.22583
	subl	$1, %eax	#, D.22583
	movl	%eax, %eax	# D.22583, D.22584
	salq	$4, %rax	#, D.22584
	movq	%rax, %rdx	# D.22584, D.22584
	movq	-24(%rbp), %rax	# sva, tmp78
	leaq	(%rdx,%rax), %r12	#, svend
	.loc 1 289 0
	movq	-24(%rbp), %rax	# sva, tmp79
	leaq	16(%rax), %rbx	#, sv
	.loc 1 290 0
	jmp	.L2	#
.L3:
	.loc 1 291 0
	leaq	16(%rbx), %rax	#, D.22585
	movq	%rax, (%rbx)	# D.22585, sv_1->sv_any
	.loc 1 292 0
	movl	$0, 8(%rbx)	#, sv_1->sv_refcnt
	.loc 1 293 0
	movl	$255, 12(%rbx)	#, sv_1->sv_flags
	.loc 1 294 0
	addq	$16, %rbx	#, sv
.L2:
	.loc 1 290 0 discriminator 1
	cmpq	%r12, %rbx	# svend, sv
	jb	.L3	#,
	.loc 1 296 0
	movq	$0, (%rbx)	#, sv_1->sv_any
	.loc 1 297 0
	movl	$255, 12(%rbx)	#, sv_1->sv_flags
	.loc 1 298 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	Perl_sv_add_arena, .-Perl_sv_add_arena
	.type	S_more_sv, @function
S_more_sv:
.LFB3:
	.loc 1 305 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 308 0
	movq	PL_nice_chunk(%rip), %rax	# PL_nice_chunk, PL_nice_chunk.2
	testq	%rax, %rax	# PL_nice_chunk.2
	je	.L5	#,
	.loc 1 309 0
	movl	PL_nice_chunk_size(%rip), %ecx	# PL_nice_chunk_size, PL_nice_chunk_size.3
	movq	PL_nice_chunk(%rip), %rax	# PL_nice_chunk, PL_nice_chunk.4
	movl	$0, %edx	#,
	movl	%ecx, %esi	# PL_nice_chunk_size.3,
	movq	%rax, %rdi	# PL_nice_chunk.4,
	call	Perl_sv_add_arena	#
	.loc 1 310 0
	movq	$0, PL_nice_chunk(%rip)	#, PL_nice_chunk
	.loc 1 311 0
	movl	$0, PL_nice_chunk_size(%rip)	#, PL_nice_chunk_size
	jmp	.L6	#
.L5:
.LBB2:
	.loc 1 315 0
	movl	$4080, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -24(%rbp)	# tmp69, chunk
	.loc 1 316 0
	movq	-24(%rbp), %rax	# chunk, tmp70
	movl	$0, %edx	#,
	movl	$4080, %esi	#,
	movq	%rax, %rdi	# tmp70,
	call	Perl_sv_add_arena	#
.L6:
.LBE2:
.LBB3:
	.loc 1 318 0
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_5->sv_any, PL_sv_root.5
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.5, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.6
	addl	$1, %eax	#, PL_sv_count.7
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.7, PL_sv_count
.LBE3:
	.loc 1 319 0
	movq	%rbx, %rax	# sv, D.22587
	.loc 1 320 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	S_more_sv, .-S_more_sv
	.type	S_visit, @function
S_visit:
.LFB4:
	.loc 1 327 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# f, f
	movl	%esi, -60(%rbp)	# flags, flags
	movl	%edx, -64(%rbp)	# mask, mask
	.loc 1 331 0
	movl	$0, -36(%rbp)	#, visited
	.loc 1 333 0
	movq	PL_sv_arenaroot(%rip), %rax	# PL_sv_arenaroot, tmp70
	movq	%rax, -32(%rbp)	# tmp70, sva
	jmp	.L9	#
.L13:
	.loc 1 334 0
	movq	-32(%rbp), %rax	# sva, tmp71
	movl	8(%rax), %eax	# sva_1->sv_refcnt, D.22588
	movl	%eax, %eax	# D.22588, D.22589
	salq	$4, %rax	#, D.22589
	movq	%rax, %rdx	# D.22589, D.22589
	movq	-32(%rbp), %rax	# sva, tmp72
	leaq	(%rdx,%rax), %rbx	#, svend
	.loc 1 335 0
	movq	-32(%rbp), %rax	# sva, tmp76
	addq	$16, %rax	#, tmp75
	movq	%rax, -24(%rbp)	# tmp75, sv
	jmp	.L10	#
.L12:
	.loc 1 336 0
	movq	-24(%rbp), %rax	# sv, tmp77
	movl	12(%rax), %eax	# sv_2->sv_flags, D.22588
	movzbl	%al, %eax	# D.22588, D.22588
	cmpl	$255, %eax	#, D.22588
	je	.L11	#,
	.loc 1 337 0
	movq	-24(%rbp), %rax	# sv, tmp78
	movl	12(%rax), %eax	# sv_2->sv_flags, D.22588
	andl	-64(%rbp), %eax	# mask, D.22588
	cmpl	-60(%rbp), %eax	# flags, D.22588
	jne	.L11	#,
	.loc 1 338 0
	movq	-24(%rbp), %rax	# sv, tmp79
	movl	8(%rax), %eax	# sv_2->sv_refcnt, D.22588
	testl	%eax, %eax	# D.22588
	je	.L11	#,
	.loc 1 340 0
	movq	-24(%rbp), %rdx	# sv, tmp80
	movq	-56(%rbp), %rax	# f, tmp81
	movq	%rdx, %rdi	# tmp80,
	call	*%rax	# tmp81
	.loc 1 341 0
	addl	$1, -36(%rbp)	#, visited
.L11:
	.loc 1 335 0
	addq	$16, -24(%rbp)	#, sv
.L10:
	.loc 1 335 0 is_stmt 0 discriminator 1
	cmpq	%rbx, -24(%rbp)	# svend, sv
	jb	.L12	#,
	.loc 1 333 0 is_stmt 1
	movq	-32(%rbp), %rax	# sva, tmp82
	movq	(%rax), %rax	# sva_1->sv_any, tmp83
	movq	%rax, -32(%rbp)	# tmp83, sva
.L9:
	.loc 1 333 0 is_stmt 0 discriminator 1
	cmpq	$0, -32(%rbp)	#, sva
	jne	.L13	#,
	.loc 1 345 0 is_stmt 1
	movl	-36(%rbp), %eax	# visited, D.22590
	.loc 1 346 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	S_visit, .-S_visit
	.globl	Perl_sv_report_used
	.type	Perl_sv_report_used, @function
Perl_sv_report_used:
.LFB5:
	.loc 1 372 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 376 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	Perl_sv_report_used, .-Perl_sv_report_used
	.type	do_clean_objs, @function
do_clean_objs:
.LFB6:
	.loc 1 382 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	.loc 1 385 0
	movq	-24(%rbp), %rax	# sv, tmp72
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.22591
	andl	$524288, %eax	#, D.22591
	testl	%eax, %eax	# D.22591
	je	.L16	#,
	.loc 1 385 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp73
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.22592
	movq	(%rax), %rax	# MEM[(struct XRV *)_4].xrv_rv, tmp74
	movq	%rax, -8(%rbp)	# tmp74, rv
	movq	-8(%rbp), %rax	# rv, tmp75
	movl	12(%rax), %eax	# rv_5->sv_flags, D.22591
	andl	$4096, %eax	#, D.22591
	testl	%eax, %eax	# D.22591
	je	.L16	#,
	.loc 1 387 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp76
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.22591
	andl	$-2146959360, %eax	#, D.22591
	cmpl	$-2146959360, %eax	#, D.22591
	jne	.L18	#,
	.loc 1 388 0
	movq	-24(%rbp), %rax	# sv, tmp77
	movq	%rax, %rdi	# tmp77,
	call	S_sv_del_backref	#
	.loc 1 389 0
	movq	-24(%rbp), %rax	# sv, tmp78
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.22591
	andl	$2146959359, %eax	#, D.22591
	movl	%eax, %edx	# D.22591, D.22591
	movq	-24(%rbp), %rax	# sv, tmp79
	movl	%edx, 12(%rax)	# D.22591, sv_1(D)->sv_flags
	.loc 1 390 0
	movq	-24(%rbp), %rax	# sv, tmp80
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.22592
	movq	$0, (%rax)	#, MEM[(struct XRV *)_12].xrv_rv
	jmp	.L16	#
.L18:
	.loc 1 392 0
	movq	-24(%rbp), %rax	# sv, tmp81
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.22591
	andl	$-268959745, %eax	#, D.22591
	movl	%eax, %edx	# D.22591, D.22591
	movq	-24(%rbp), %rax	# sv, tmp82
	movl	%edx, 12(%rax)	# D.22591, sv_1(D)->sv_flags
	.loc 1 393 0
	movq	-24(%rbp), %rax	# sv, tmp83
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.22592
	movq	$0, (%rax)	#, MEM[(struct XRV *)_15].xrv_rv
	.loc 1 394 0
	movq	-8(%rbp), %rax	# rv, tmp84
	movq	%rax, %rdi	# tmp84,
	call	Perl_sv_free	#
.L16:
	.loc 1 399 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	do_clean_objs, .-do_clean_objs
	.type	do_clean_named_objs, @function
do_clean_named_objs:
.LFB7:
	.loc 1 406 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	.loc 1 407 0
	movq	-8(%rbp), %rax	# sv, tmp110
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22593
	movzbl	%al, %eax	# D.22593, D.22593
	cmpl	$13, %eax	#, D.22593
	jne	.L19	#,
	.loc 1 407 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp111
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_5].xgv_gp, D.22595
	testq	%rax, %rax	# D.22595
	je	.L19	#,
	.loc 1 408 0 is_stmt 1
	movq	-8(%rbp), %rax	# sv, tmp112
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_7].xgv_gp, D.22595
	movq	(%rax), %rax	# _8->gp_sv, D.22596
	movl	12(%rax), %eax	# _9->sv_flags, D.22593
	andl	$4096, %eax	#, D.22593
	testl	%eax, %eax	# D.22593
	jne	.L21	#,
	.loc 1 409 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp113
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_12].xgv_gp, D.22595
	movq	32(%rax), %rax	# _13->gp_av, D.22597
	.loc 1 408 0 discriminator 1
	testq	%rax, %rax	# D.22597
	je	.L22	#,
	.loc 1 409 0
	movq	-8(%rbp), %rax	# sv, tmp114
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_15].xgv_gp, D.22595
	movq	32(%rax), %rax	# _16->gp_av, D.22597
	movl	12(%rax), %eax	# _17->sv_flags, D.22593
	andl	$4096, %eax	#, D.22593
	testl	%eax, %eax	# D.22593
	jne	.L21	#,
.L22:
	.loc 1 410 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp115
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_20].xgv_gp, D.22595
	movq	40(%rax), %rax	# _21->gp_hv, D.22598
	.loc 1 409 0 discriminator 1
	testq	%rax, %rax	# D.22598
	je	.L23	#,
	.loc 1 410 0
	movq	-8(%rbp), %rax	# sv, tmp116
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_23].xgv_gp, D.22595
	movq	40(%rax), %rax	# _24->gp_hv, D.22598
	movl	12(%rax), %eax	# _25->sv_flags, D.22593
	andl	$4096, %eax	#, D.22593
	testl	%eax, %eax	# D.22593
	jne	.L21	#,
.L23:
	.loc 1 410 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, sv
	je	.L24	#,
	.loc 1 411 0 is_stmt 1
	movq	-8(%rbp), %rax	# sv, tmp117
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22593
	movzbl	%al, %eax	# D.22593, D.22593
	cmpl	$13, %eax	#, D.22593
	jne	.L24	#,
	.loc 1 411 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp118
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_30].xgv_gp, D.22595
	testq	%rax, %rax	# D.22595
	je	.L24	#,
	movq	-8(%rbp), %rax	# sv, tmp119
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_32].xgv_gp, D.22595
	movq	16(%rax), %rax	# _33->gp_io, D.22599
	testq	%rax, %rax	# D.22599
	je	.L24	#,
	cmpq	$0, -8(%rbp)	#, sv
	je	.L25	#,
	movq	-8(%rbp), %rax	# sv, tmp120
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22593
	movzbl	%al, %eax	# D.22593, D.22593
	cmpl	$13, %eax	#, D.22593
	jne	.L25	#,
	movq	-8(%rbp), %rax	# sv, tmp121
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_37].xgv_gp, D.22595
	testq	%rax, %rax	# D.22595
	je	.L25	#,
	movq	-8(%rbp), %rax	# sv, tmp122
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_39].xgv_gp, D.22595
	movq	16(%rax), %rax	# _40->gp_io, iftmp.8
	jmp	.L26	#
.L25:
	.loc 1 411 0 discriminator 2
	movl	$0, %eax	#, iftmp.8
.L26:
	.loc 1 411 0 discriminator 3
	movl	12(%rax), %eax	# iftmp.8_1->sv_flags, D.22593
	andl	$4096, %eax	#, D.22593
	testl	%eax, %eax	# D.22593
	jne	.L21	#,
.L24:
	.loc 1 412 0 is_stmt 1 discriminator 2
	movq	-8(%rbp), %rax	# sv, tmp123
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_45].xgv_gp, D.22595
	movq	56(%rax), %rax	# _46->gp_cv, D.22600
	.loc 1 411 0 discriminator 2
	testq	%rax, %rax	# D.22600
	je	.L19	#,
	.loc 1 412 0
	movq	-8(%rbp), %rax	# sv, tmp124
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22594
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_48].xgv_gp, D.22595
	movq	56(%rax), %rax	# _49->gp_cv, D.22600
	movl	12(%rax), %eax	# _50->sv_flags, D.22593
	andl	$4096, %eax	#, D.22593
	testl	%eax, %eax	# D.22593
	je	.L19	#,
.L21:
	.loc 1 415 0
	movq	-8(%rbp), %rax	# sv, tmp125
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22593
	orl	$4194304, %eax	#, D.22593
	movl	%eax, %edx	# D.22593, D.22593
	movq	-8(%rbp), %rax	# sv, tmp126
	movl	%edx, 12(%rax)	# D.22593, sv_2(D)->sv_flags
	.loc 1 416 0
	movq	-8(%rbp), %rax	# sv, tmp127
	movq	%rax, %rdi	# tmp127,
	call	Perl_sv_free	#
.L19:
	.loc 1 419 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	do_clean_named_objs, .-do_clean_named_objs
	.globl	Perl_sv_clean_objs
	.type	Perl_sv_clean_objs, @function
Perl_sv_clean_objs:
.LFB8:
	.loc 1 432 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 433 0
	movb	$1, PL_in_clean_objs(%rip)	#, PL_in_clean_objs
	.loc 1 434 0
	movl	$524288, %edx	#,
	movl	$524288, %esi	#,
	movl	$do_clean_objs, %edi	#,
	call	S_visit	#
	.loc 1 437 0
	movl	$255, %edx	#,
	movl	$13, %esi	#,
	movl	$do_clean_named_objs, %edi	#,
	call	S_visit	#
	.loc 1 439 0
	movb	$0, PL_in_clean_objs(%rip)	#, PL_in_clean_objs
	.loc 1 440 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	Perl_sv_clean_objs, .-Perl_sv_clean_objs
	.type	do_clean_all, @function
do_clean_all:
.LFB9:
	.loc 1 446 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	.loc 1 448 0
	movq	-8(%rbp), %rax	# sv, tmp61
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.22601
	orl	$4194304, %eax	#, D.22601
	movl	%eax, %edx	# D.22601, D.22601
	movq	-8(%rbp), %rax	# sv, tmp62
	movl	%edx, 12(%rax)	# D.22601, sv_1(D)->sv_flags
	.loc 1 449 0
	movq	-8(%rbp), %rax	# sv, tmp63
	movq	%rax, %rdi	# tmp63,
	call	Perl_sv_free	#
	.loc 1 450 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	do_clean_all, .-do_clean_all
	.globl	Perl_sv_clean_all
	.type	Perl_sv_clean_all, @function
Perl_sv_clean_all:
.LFB10:
	.loc 1 464 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 466 0
	movb	$1, PL_in_clean_all(%rip)	#, PL_in_clean_all
	.loc 1 467 0
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movl	$do_clean_all, %edi	#,
	call	S_visit	#
	movl	%eax, -4(%rbp)	# tmp61, cleaned
	.loc 1 468 0
	movb	$0, PL_in_clean_all(%rip)	#, PL_in_clean_all
	.loc 1 469 0
	movl	-4(%rbp), %eax	# cleaned, D.22602
	.loc 1 470 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	Perl_sv_clean_all, .-Perl_sv_clean_all
	.globl	Perl_sv_free_arenas
	.type	Perl_sv_free_arenas, @function
Perl_sv_free_arenas:
.LFB11:
	.loc 1 483 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	.loc 1 491 0
	movq	PL_sv_arenaroot(%rip), %rax	# PL_sv_arenaroot, tmp65
	movq	%rax, -32(%rbp)	# tmp65, sva
	jmp	.L32	#
.L37:
	.loc 1 492 0
	movq	-32(%rbp), %rax	# sva, tmp66
	movq	(%rax), %rax	# sva_1->sv_any, tmp67
	movq	%rax, -24(%rbp)	# tmp67, svanext
	.loc 1 493 0
	jmp	.L33	#
.L35:
	.loc 1 494 0
	movq	-24(%rbp), %rax	# svanext, tmp68
	movq	(%rax), %rax	# svanext_2->sv_any, tmp69
	movq	%rax, -24(%rbp)	# tmp69, svanext
.L33:
	.loc 1 493 0 discriminator 1
	cmpq	$0, -24(%rbp)	#, svanext
	je	.L34	#,
	.loc 1 493 0 is_stmt 0 discriminator 2
	movq	-24(%rbp), %rax	# svanext, tmp70
	movl	12(%rax), %eax	# svanext_2->sv_flags, D.22603
	andl	$1048576, %eax	#, D.22603
	testl	%eax, %eax	# D.22603
	jne	.L35	#,
.L34:
	.loc 1 496 0 is_stmt 1
	movq	-32(%rbp), %rax	# sva, tmp71
	movl	12(%rax), %eax	# sva_1->sv_flags, D.22603
	andl	$1048576, %eax	#, D.22603
	testl	%eax, %eax	# D.22603
	jne	.L36	#,
	.loc 1 497 0
	movq	-32(%rbp), %rax	# sva, tmp72
	movq	%rax, %rdi	# tmp72,
	call	Perl_safesysfree	#
.L36:
	.loc 1 491 0
	movq	-24(%rbp), %rax	# svanext, tmp73
	movq	%rax, -32(%rbp)	# tmp73, sva
.L32:
	.loc 1 491 0 is_stmt 0 discriminator 1
	cmpq	$0, -32(%rbp)	#, sva
	jne	.L37	#,
	.loc 1 500 0 is_stmt 1
	movq	PL_xiv_arenaroot(%rip), %rax	# PL_xiv_arenaroot, tmp74
	movq	%rax, -16(%rbp)	# tmp74, arena
	jmp	.L38	#
.L39:
	.loc 1 501 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp75
	movq	(%rax), %rax	# arena_3->xpv_pv, tmp76
	movq	%rax, -8(%rbp)	# tmp76, arenanext
	.loc 1 502 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp77
	movq	%rax, %rdi	# tmp77,
	call	Perl_safesysfree	#
	.loc 1 500 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp78
	movq	%rax, -16(%rbp)	# tmp78, arena
.L38:
	.loc 1 500 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L39	#,
	.loc 1 504 0 is_stmt 1
	movq	$0, PL_xiv_arenaroot(%rip)	#, PL_xiv_arenaroot
	.loc 1 505 0
	movq	$0, PL_xiv_root(%rip)	#, PL_xiv_root
	.loc 1 507 0
	movq	PL_xnv_arenaroot(%rip), %rax	# PL_xnv_arenaroot, tmp79
	movq	%rax, -16(%rbp)	# tmp79, arena
	jmp	.L40	#
.L41:
	.loc 1 508 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp80
	movq	(%rax), %rax	# arena_4->xpv_pv, tmp81
	movq	%rax, -8(%rbp)	# tmp81, arenanext
	.loc 1 509 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp82
	movq	%rax, %rdi	# tmp82,
	call	Perl_safesysfree	#
	.loc 1 507 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp83
	movq	%rax, -16(%rbp)	# tmp83, arena
.L40:
	.loc 1 507 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L41	#,
	.loc 1 511 0 is_stmt 1
	movq	$0, PL_xnv_arenaroot(%rip)	#, PL_xnv_arenaroot
	.loc 1 512 0
	movq	$0, PL_xnv_root(%rip)	#, PL_xnv_root
	.loc 1 514 0
	movq	PL_xrv_arenaroot(%rip), %rax	# PL_xrv_arenaroot, tmp84
	movq	%rax, -16(%rbp)	# tmp84, arena
	jmp	.L42	#
.L43:
	.loc 1 515 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp85
	movq	(%rax), %rax	# arena_5->xpv_pv, tmp86
	movq	%rax, -8(%rbp)	# tmp86, arenanext
	.loc 1 516 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp87
	movq	%rax, %rdi	# tmp87,
	call	Perl_safesysfree	#
	.loc 1 514 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp88
	movq	%rax, -16(%rbp)	# tmp88, arena
.L42:
	.loc 1 514 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L43	#,
	.loc 1 518 0 is_stmt 1
	movq	$0, PL_xrv_arenaroot(%rip)	#, PL_xrv_arenaroot
	.loc 1 519 0
	movq	$0, PL_xrv_root(%rip)	#, PL_xrv_root
	.loc 1 521 0
	movq	PL_xpv_arenaroot(%rip), %rax	# PL_xpv_arenaroot, tmp89
	movq	%rax, -16(%rbp)	# tmp89, arena
	jmp	.L44	#
.L45:
	.loc 1 522 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp90
	movq	(%rax), %rax	# arena_6->xpv_pv, tmp91
	movq	%rax, -8(%rbp)	# tmp91, arenanext
	.loc 1 523 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp92
	movq	%rax, %rdi	# tmp92,
	call	Perl_safesysfree	#
	.loc 1 521 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp93
	movq	%rax, -16(%rbp)	# tmp93, arena
.L44:
	.loc 1 521 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L45	#,
	.loc 1 525 0 is_stmt 1
	movq	$0, PL_xpv_arenaroot(%rip)	#, PL_xpv_arenaroot
	.loc 1 526 0
	movq	$0, PL_xpv_root(%rip)	#, PL_xpv_root
	.loc 1 528 0
	movq	PL_xpviv_arenaroot(%rip), %rax	# PL_xpviv_arenaroot, tmp94
	movq	%rax, -16(%rbp)	# tmp94, arena
	jmp	.L46	#
.L47:
	.loc 1 529 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp95
	movq	(%rax), %rax	# arena_7->xpv_pv, tmp96
	movq	%rax, -8(%rbp)	# tmp96, arenanext
	.loc 1 530 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp97
	movq	%rax, %rdi	# tmp97,
	call	Perl_safesysfree	#
	.loc 1 528 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp98
	movq	%rax, -16(%rbp)	# tmp98, arena
.L46:
	.loc 1 528 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L47	#,
	.loc 1 532 0 is_stmt 1
	movq	$0, PL_xpviv_arenaroot(%rip)	#, PL_xpviv_arenaroot
	.loc 1 533 0
	movq	$0, PL_xpviv_root(%rip)	#, PL_xpviv_root
	.loc 1 535 0
	movq	PL_xpvnv_arenaroot(%rip), %rax	# PL_xpvnv_arenaroot, tmp99
	movq	%rax, -16(%rbp)	# tmp99, arena
	jmp	.L48	#
.L49:
	.loc 1 536 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp100
	movq	(%rax), %rax	# arena_8->xpv_pv, tmp101
	movq	%rax, -8(%rbp)	# tmp101, arenanext
	.loc 1 537 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp102
	movq	%rax, %rdi	# tmp102,
	call	Perl_safesysfree	#
	.loc 1 535 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp103
	movq	%rax, -16(%rbp)	# tmp103, arena
.L48:
	.loc 1 535 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L49	#,
	.loc 1 539 0 is_stmt 1
	movq	$0, PL_xpvnv_arenaroot(%rip)	#, PL_xpvnv_arenaroot
	.loc 1 540 0
	movq	$0, PL_xpvnv_root(%rip)	#, PL_xpvnv_root
	.loc 1 542 0
	movq	PL_xpvcv_arenaroot(%rip), %rax	# PL_xpvcv_arenaroot, tmp104
	movq	%rax, -16(%rbp)	# tmp104, arena
	jmp	.L50	#
.L51:
	.loc 1 543 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp105
	movq	(%rax), %rax	# arena_9->xpv_pv, tmp106
	movq	%rax, -8(%rbp)	# tmp106, arenanext
	.loc 1 544 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp107
	movq	%rax, %rdi	# tmp107,
	call	Perl_safesysfree	#
	.loc 1 542 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp108
	movq	%rax, -16(%rbp)	# tmp108, arena
.L50:
	.loc 1 542 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L51	#,
	.loc 1 546 0 is_stmt 1
	movq	$0, PL_xpvcv_arenaroot(%rip)	#, PL_xpvcv_arenaroot
	.loc 1 547 0
	movq	$0, PL_xpvcv_root(%rip)	#, PL_xpvcv_root
	.loc 1 549 0
	movq	PL_xpvav_arenaroot(%rip), %rax	# PL_xpvav_arenaroot, tmp109
	movq	%rax, -16(%rbp)	# tmp109, arena
	jmp	.L52	#
.L53:
	.loc 1 550 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp110
	movq	(%rax), %rax	# arena_10->xpv_pv, tmp111
	movq	%rax, -8(%rbp)	# tmp111, arenanext
	.loc 1 551 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp112
	movq	%rax, %rdi	# tmp112,
	call	Perl_safesysfree	#
	.loc 1 549 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp113
	movq	%rax, -16(%rbp)	# tmp113, arena
.L52:
	.loc 1 549 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L53	#,
	.loc 1 553 0 is_stmt 1
	movq	$0, PL_xpvav_arenaroot(%rip)	#, PL_xpvav_arenaroot
	.loc 1 554 0
	movq	$0, PL_xpvav_root(%rip)	#, PL_xpvav_root
	.loc 1 556 0
	movq	PL_xpvhv_arenaroot(%rip), %rax	# PL_xpvhv_arenaroot, tmp114
	movq	%rax, -16(%rbp)	# tmp114, arena
	jmp	.L54	#
.L55:
	.loc 1 557 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp115
	movq	(%rax), %rax	# arena_11->xpv_pv, tmp116
	movq	%rax, -8(%rbp)	# tmp116, arenanext
	.loc 1 558 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp117
	movq	%rax, %rdi	# tmp117,
	call	Perl_safesysfree	#
	.loc 1 556 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp118
	movq	%rax, -16(%rbp)	# tmp118, arena
.L54:
	.loc 1 556 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L55	#,
	.loc 1 560 0 is_stmt 1
	movq	$0, PL_xpvhv_arenaroot(%rip)	#, PL_xpvhv_arenaroot
	.loc 1 561 0
	movq	$0, PL_xpvhv_root(%rip)	#, PL_xpvhv_root
	.loc 1 563 0
	movq	PL_xpvmg_arenaroot(%rip), %rax	# PL_xpvmg_arenaroot, tmp119
	movq	%rax, -16(%rbp)	# tmp119, arena
	jmp	.L56	#
.L57:
	.loc 1 564 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp120
	movq	(%rax), %rax	# arena_12->xpv_pv, tmp121
	movq	%rax, -8(%rbp)	# tmp121, arenanext
	.loc 1 565 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp122
	movq	%rax, %rdi	# tmp122,
	call	Perl_safesysfree	#
	.loc 1 563 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp123
	movq	%rax, -16(%rbp)	# tmp123, arena
.L56:
	.loc 1 563 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L57	#,
	.loc 1 567 0 is_stmt 1
	movq	$0, PL_xpvmg_arenaroot(%rip)	#, PL_xpvmg_arenaroot
	.loc 1 568 0
	movq	$0, PL_xpvmg_root(%rip)	#, PL_xpvmg_root
	.loc 1 570 0
	movq	PL_xpvlv_arenaroot(%rip), %rax	# PL_xpvlv_arenaroot, tmp124
	movq	%rax, -16(%rbp)	# tmp124, arena
	jmp	.L58	#
.L59:
	.loc 1 571 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp125
	movq	(%rax), %rax	# arena_13->xpv_pv, tmp126
	movq	%rax, -8(%rbp)	# tmp126, arenanext
	.loc 1 572 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp127
	movq	%rax, %rdi	# tmp127,
	call	Perl_safesysfree	#
	.loc 1 570 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp128
	movq	%rax, -16(%rbp)	# tmp128, arena
.L58:
	.loc 1 570 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L59	#,
	.loc 1 574 0 is_stmt 1
	movq	$0, PL_xpvlv_arenaroot(%rip)	#, PL_xpvlv_arenaroot
	.loc 1 575 0
	movq	$0, PL_xpvlv_root(%rip)	#, PL_xpvlv_root
	.loc 1 577 0
	movq	PL_xpvbm_arenaroot(%rip), %rax	# PL_xpvbm_arenaroot, tmp129
	movq	%rax, -16(%rbp)	# tmp129, arena
	jmp	.L60	#
.L61:
	.loc 1 578 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp130
	movq	(%rax), %rax	# arena_14->xpv_pv, tmp131
	movq	%rax, -8(%rbp)	# tmp131, arenanext
	.loc 1 579 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp132
	movq	%rax, %rdi	# tmp132,
	call	Perl_safesysfree	#
	.loc 1 577 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp133
	movq	%rax, -16(%rbp)	# tmp133, arena
.L60:
	.loc 1 577 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L61	#,
	.loc 1 581 0 is_stmt 1
	movq	$0, PL_xpvbm_arenaroot(%rip)	#, PL_xpvbm_arenaroot
	.loc 1 582 0
	movq	$0, PL_xpvbm_root(%rip)	#, PL_xpvbm_root
	.loc 1 584 0
	movq	PL_he_arenaroot(%rip), %rax	# PL_he_arenaroot, tmp134
	movq	%rax, -16(%rbp)	# tmp134, arena
	jmp	.L62	#
.L63:
	.loc 1 585 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp135
	movq	(%rax), %rax	# arena_15->xpv_pv, tmp136
	movq	%rax, -8(%rbp)	# tmp136, arenanext
	.loc 1 586 0 discriminator 2
	movq	-16(%rbp), %rax	# arena, tmp137
	movq	%rax, %rdi	# tmp137,
	call	Perl_safesysfree	#
	.loc 1 584 0 discriminator 2
	movq	-8(%rbp), %rax	# arenanext, tmp138
	movq	%rax, -16(%rbp)	# tmp138, arena
.L62:
	.loc 1 584 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, arena
	jne	.L63	#,
	.loc 1 588 0 is_stmt 1
	movq	$0, PL_he_arenaroot(%rip)	#, PL_he_arenaroot
	.loc 1 589 0
	movq	$0, PL_he_root(%rip)	#, PL_he_root
	.loc 1 600 0
	movq	PL_nice_chunk(%rip), %rax	# PL_nice_chunk, PL_nice_chunk.9
	testq	%rax, %rax	# PL_nice_chunk.9
	je	.L64	#,
	.loc 1 601 0
	movq	PL_nice_chunk(%rip), %rax	# PL_nice_chunk, PL_nice_chunk.10
	movq	%rax, %rdi	# PL_nice_chunk.10,
	call	Perl_safesysfree	#
.L64:
	.loc 1 602 0
	movq	$0, PL_nice_chunk(%rip)	#, PL_nice_chunk
	.loc 1 603 0
	movl	$0, PL_nice_chunk_size(%rip)	#, PL_nice_chunk_size
	.loc 1 604 0
	movq	$0, PL_sv_arenaroot(%rip)	#, PL_sv_arenaroot
	.loc 1 605 0
	movq	$0, PL_sv_root(%rip)	#, PL_sv_root
	.loc 1 606 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	Perl_sv_free_arenas, .-Perl_sv_free_arenas
	.section	.rodata
.LC0:
	.string	" in "
.LC1:
	.string	""
	.text
	.globl	Perl_report_uninit
	.type	Perl_report_uninit, @function
Perl_report_uninit:
.LFB12:
	.loc 1 618 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 619 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.11
	testq	%rax, %rax	# PL_op.11
	je	.L66	#,
	.loc 1 621 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.13
	movzwl	32(%rax), %eax	# PL_op.13_3->op_type, D.22604
	.loc 1 620 0
	cmpw	$351, %ax	#, D.22604
	jne	.L67	#,
	.loc 1 621 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.14
	.loc 1 620 0
	movq	%rax, %rdi	# PL_op.14,
	call	Perl_custom_op_desc	#
	jmp	.L68	#
.L67:
	.loc 1 621 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.15
	movzwl	32(%rax), %eax	# PL_op.15_7->op_type, D.22604
	movzwl	%ax, %eax	# D.22604, D.22605
	.loc 1 620 0 discriminator 1
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.12
.L68:
	movq	%rax, %rcx	# iftmp.12,
	movl	$.LC0, %edx	#,
	movl	$PL_warn_uninit, %esi	#,
	movl	$41, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	jmp	.L65	#
.L66:
	.loc 1 623 0
	movl	$.LC1, %ecx	#,
	movl	$.LC1, %edx	#,
	movl	$PL_warn_uninit, %esi	#,
	movl	$41, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L65:
	.loc 1 624 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	Perl_report_uninit, .-Perl_report_uninit
	.type	S_new_xiv, @function
S_new_xiv:
.LFB13:
	.loc 1 630 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 633 0
	movq	PL_xiv_root(%rip), %rax	# PL_xiv_root, PL_xiv_root.16
	testq	%rax, %rax	# PL_xiv_root.16
	jne	.L71	#,
	.loc 1 634 0
	call	S_more_xiv	#
.L71:
	.loc 1 635 0
	movq	PL_xiv_root(%rip), %rax	# PL_xiv_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xiv
	.loc 1 639 0
	movq	-8(%rbp), %rax	# xiv, tmp64
	movq	(%rax), %rax	# MEM[(IV * *)xiv_2], PL_xiv_root.17
	movq	%rax, PL_xiv_root(%rip)	# PL_xiv_root.17, PL_xiv_root
	.loc 1 641 0
	movq	-8(%rbp), %rax	# xiv, tmp65
	subq	$24, %rax	#, D.22608
	.loc 1 642 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE13:
	.size	S_new_xiv, .-S_new_xiv
	.type	S_del_xiv, @function
S_del_xiv:
.LFB14:
	.loc 1 648 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)	# p, p
	.loc 1 649 0
	movq	-24(%rbp), %rax	# p, tmp63
	addq	$24, %rax	#, tmp62
	movq	%rax, -8(%rbp)	# tmp62, xiv
	.loc 1 651 0
	movq	PL_xiv_root(%rip), %rdx	# PL_xiv_root, PL_xiv_root.18
	movq	-8(%rbp), %rax	# xiv, tmp64
	movq	%rdx, (%rax)	# PL_xiv_root.18, MEM[(IV * *)xiv_2]
	.loc 1 652 0
	movq	-8(%rbp), %rax	# xiv, tmp65
	movq	%rax, PL_xiv_root(%rip)	# tmp65, PL_xiv_root
	.loc 1 654 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE14:
	.size	S_del_xiv, .-S_del_xiv
	.type	S_more_xiv, @function
S_more_xiv:
.LFB15:
	.loc 1 660 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 664 0
	movl	$4080, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -24(%rbp)	# tmp63, ptr
	.loc 1 665 0
	movq	PL_xiv_arenaroot(%rip), %rdx	# PL_xiv_arenaroot, PL_xiv_arenaroot.19
	movq	-24(%rbp), %rax	# ptr, tmp64
	movq	%rdx, (%rax)	# PL_xiv_arenaroot.19, ptr_2->xpv_pv
	.loc 1 666 0
	movq	-24(%rbp), %rax	# ptr, tmp65
	movq	%rax, PL_xiv_arenaroot(%rip)	# tmp65, PL_xiv_arenaroot
	.loc 1 668 0
	movq	-24(%rbp), %rbx	# ptr, xiv
	.loc 1 669 0
	leaq	4072(%rbx), %r12	#, xivend
	.loc 1 670 0
	addq	$24, %rbx	#, xiv
	.loc 1 671 0
	movq	%rbx, PL_xiv_root(%rip)	# xiv, PL_xiv_root
	.loc 1 672 0
	jmp	.L75	#
.L76:
	.loc 1 673 0
	leaq	8(%rbx), %rax	#, D.22609
	movq	%rax, (%rbx)	# D.22609, MEM[(IV * *)xiv_1]
	.loc 1 674 0
	addq	$8, %rbx	#, xiv
.L75:
	.loc 1 672 0 discriminator 1
	cmpq	%r12, %rbx	# xivend, xiv
	jb	.L76	#,
	.loc 1 676 0
	movq	$0, (%rbx)	#, MEM[(IV * *)xiv_1]
	.loc 1 677 0
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE15:
	.size	S_more_xiv, .-S_more_xiv
	.type	S_new_xnv, @function
S_new_xnv:
.LFB16:
	.loc 1 683 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 686 0
	movq	PL_xnv_root(%rip), %rax	# PL_xnv_root, PL_xnv_root.20
	testq	%rax, %rax	# PL_xnv_root.20
	jne	.L78	#,
	.loc 1 687 0
	call	S_more_xnv	#
.L78:
	.loc 1 688 0
	movq	PL_xnv_root(%rip), %rax	# PL_xnv_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xnv
	.loc 1 689 0
	movq	-8(%rbp), %rax	# xnv, tmp64
	movq	(%rax), %rax	# MEM[(NV * *)xnv_2], PL_xnv_root.21
	movq	%rax, PL_xnv_root(%rip)	# PL_xnv_root.21, PL_xnv_root
	.loc 1 691 0
	movq	-8(%rbp), %rax	# xnv, tmp65
	subq	$32, %rax	#, D.22610
	.loc 1 692 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE16:
	.size	S_new_xnv, .-S_new_xnv
	.type	S_del_xnv, @function
S_del_xnv:
.LFB17:
	.loc 1 698 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)	# p, p
	.loc 1 699 0
	movq	-24(%rbp), %rax	# p, tmp63
	addq	$32, %rax	#, tmp62
	movq	%rax, -8(%rbp)	# tmp62, xnv
	.loc 1 701 0
	movq	PL_xnv_root(%rip), %rdx	# PL_xnv_root, PL_xnv_root.22
	movq	-8(%rbp), %rax	# xnv, tmp64
	movq	%rdx, (%rax)	# PL_xnv_root.22, MEM[(NV * *)xnv_2]
	.loc 1 702 0
	movq	-8(%rbp), %rax	# xnv, tmp65
	movq	%rax, PL_xnv_root(%rip)	# tmp65, PL_xnv_root
	.loc 1 704 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE17:
	.size	S_del_xnv, .-S_del_xnv
	.type	S_more_xnv, @function
S_more_xnv:
.LFB18:
	.loc 1 710 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 714 0
	movl	$4080, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -24(%rbp)	# tmp63, ptr
	.loc 1 715 0
	movq	PL_xnv_arenaroot(%rip), %rdx	# PL_xnv_arenaroot, PL_xnv_arenaroot.23
	movq	-24(%rbp), %rax	# ptr, tmp64
	movq	%rdx, (%rax)	# PL_xnv_arenaroot.23, ptr_2->xpv_pv
	.loc 1 716 0
	movq	-24(%rbp), %rax	# ptr, tmp65
	movq	%rax, PL_xnv_arenaroot(%rip)	# tmp65, PL_xnv_arenaroot
	.loc 1 718 0
	movq	-24(%rbp), %rbx	# ptr, xnv
	.loc 1 719 0
	leaq	4072(%rbx), %r12	#, xnvend
	.loc 1 720 0
	addq	$32, %rbx	#, xnv
	.loc 1 721 0
	movq	%rbx, PL_xnv_root(%rip)	# xnv, PL_xnv_root
	.loc 1 722 0
	jmp	.L82	#
.L83:
	.loc 1 723 0
	leaq	8(%rbx), %rax	#, D.22611
	movq	%rax, (%rbx)	# D.22611, MEM[(NV * *)xnv_1]
	.loc 1 724 0
	addq	$8, %rbx	#, xnv
.L82:
	.loc 1 722 0 discriminator 1
	cmpq	%r12, %rbx	# xnvend, xnv
	jb	.L83	#,
	.loc 1 726 0
	movq	$0, (%rbx)	#, MEM[(NV * *)xnv_1]
	.loc 1 727 0
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE18:
	.size	S_more_xnv, .-S_more_xnv
	.type	S_new_xrv, @function
S_new_xrv:
.LFB19:
	.loc 1 733 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 736 0
	movq	PL_xrv_root(%rip), %rax	# PL_xrv_root, PL_xrv_root.24
	testq	%rax, %rax	# PL_xrv_root.24
	jne	.L85	#,
	.loc 1 737 0
	call	S_more_xrv	#
.L85:
	.loc 1 738 0
	movq	PL_xrv_root(%rip), %rax	# PL_xrv_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xrv
	.loc 1 739 0
	movq	-8(%rbp), %rax	# xrv, tmp64
	movq	(%rax), %rax	# xrv_2->xrv_rv, PL_xrv_root.25
	movq	%rax, PL_xrv_root(%rip)	# PL_xrv_root.25, PL_xrv_root
	.loc 1 741 0
	movq	-8(%rbp), %rax	# xrv, D.22612
	.loc 1 742 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE19:
	.size	S_new_xrv, .-S_new_xrv
	.type	S_del_xrv, @function
S_del_xrv:
.LFB20:
	.loc 1 748 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# p, p
	.loc 1 750 0
	movq	PL_xrv_root(%rip), %rdx	# PL_xrv_root, PL_xrv_root.26
	movq	-8(%rbp), %rax	# p, tmp60
	movq	%rdx, (%rax)	# PL_xrv_root.26, p_2(D)->xrv_rv
	.loc 1 751 0
	movq	-8(%rbp), %rax	# p, tmp61
	movq	%rax, PL_xrv_root(%rip)	# tmp61, PL_xrv_root
	.loc 1 753 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE20:
	.size	S_del_xrv, .-S_del_xrv
	.type	S_more_xrv, @function
S_more_xrv:
.LFB21:
	.loc 1 759 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 763 0
	movl	$4080, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -24(%rbp)	# tmp63, ptr
	.loc 1 764 0
	movq	PL_xrv_arenaroot(%rip), %rdx	# PL_xrv_arenaroot, PL_xrv_arenaroot.27
	movq	-24(%rbp), %rax	# ptr, tmp64
	movq	%rdx, (%rax)	# PL_xrv_arenaroot.27, ptr_2->xpv_pv
	.loc 1 765 0
	movq	-24(%rbp), %rax	# ptr, tmp65
	movq	%rax, PL_xrv_arenaroot(%rip)	# tmp65, PL_xrv_arenaroot
	.loc 1 767 0
	movq	-24(%rbp), %rbx	# ptr, xrv
	.loc 1 768 0
	leaq	4072(%rbx), %r12	#, xrvend
	.loc 1 769 0
	addq	$24, %rbx	#, xrv
	.loc 1 770 0
	movq	%rbx, PL_xrv_root(%rip)	# xrv, PL_xrv_root
	.loc 1 771 0
	jmp	.L89	#
.L90:
	.loc 1 772 0
	leaq	8(%rbx), %rax	#, D.22613
	movq	%rax, (%rbx)	# D.22613, xrv_1->xrv_rv
	.loc 1 773 0
	addq	$8, %rbx	#, xrv
.L89:
	.loc 1 771 0 discriminator 1
	cmpq	%r12, %rbx	# xrvend, xrv
	jb	.L90	#,
	.loc 1 775 0
	movq	$0, (%rbx)	#, xrv_1->xrv_rv
	.loc 1 776 0
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE21:
	.size	S_more_xrv, .-S_more_xrv
	.type	S_new_xpv, @function
S_new_xpv:
.LFB22:
	.loc 1 782 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 785 0
	movq	PL_xpv_root(%rip), %rax	# PL_xpv_root, PL_xpv_root.28
	testq	%rax, %rax	# PL_xpv_root.28
	jne	.L92	#,
	.loc 1 786 0
	call	S_more_xpv	#
.L92:
	.loc 1 787 0
	movq	PL_xpv_root(%rip), %rax	# PL_xpv_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xpv
	.loc 1 788 0
	movq	-8(%rbp), %rax	# xpv, tmp64
	movq	(%rax), %rax	# xpv_2->xpv_pv, PL_xpv_root.29
	movq	%rax, PL_xpv_root(%rip)	# PL_xpv_root.29, PL_xpv_root
	.loc 1 790 0
	movq	-8(%rbp), %rax	# xpv, D.22614
	.loc 1 791 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE22:
	.size	S_new_xpv, .-S_new_xpv
	.type	S_del_xpv, @function
S_del_xpv:
.LFB23:
	.loc 1 797 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# p, p
	.loc 1 799 0
	movq	PL_xpv_root(%rip), %rdx	# PL_xpv_root, PL_xpv_root.30
	movq	-8(%rbp), %rax	# p, tmp60
	movq	%rdx, (%rax)	# PL_xpv_root.30, p_2(D)->xpv_pv
	.loc 1 800 0
	movq	-8(%rbp), %rax	# p, tmp61
	movq	%rax, PL_xpv_root(%rip)	# tmp61, PL_xpv_root
	.loc 1 802 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE23:
	.size	S_del_xpv, .-S_del_xpv
	.type	S_more_xpv, @function
S_more_xpv:
.LFB24:
	.loc 1 808 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 811 0
	movl	$4080, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, %rbx	#, xpv
	.loc 1 812 0
	movq	PL_xpv_arenaroot(%rip), %rax	# PL_xpv_arenaroot, PL_xpv_arenaroot.31
	movq	%rax, (%rbx)	# PL_xpv_arenaroot.31, xpv_2->xpv_pv
	.loc 1 813 0
	movq	%rbx, PL_xpv_arenaroot(%rip)	# xpv, PL_xpv_arenaroot
	.loc 1 815 0
	leaq	4056(%rbx), %r12	#, xpvend
	.loc 1 816 0
	addq	$24, %rbx	#, xpv
	movq	%rbx, PL_xpv_root(%rip)	# xpv, PL_xpv_root
	.loc 1 817 0
	jmp	.L96	#
.L97:
	.loc 1 818 0
	leaq	24(%rbx), %rax	#, D.22615
	movq	%rax, (%rbx)	# D.22615, xpv_1->xpv_pv
	.loc 1 819 0
	addq	$24, %rbx	#, xpv
.L96:
	.loc 1 817 0 discriminator 1
	cmpq	%r12, %rbx	# xpvend, xpv
	jb	.L97	#,
	.loc 1 821 0
	movq	$0, (%rbx)	#, xpv_1->xpv_pv
	.loc 1 822 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE24:
	.size	S_more_xpv, .-S_more_xpv
	.type	S_new_xpviv, @function
S_new_xpviv:
.LFB25:
	.loc 1 828 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 831 0
	movq	PL_xpviv_root(%rip), %rax	# PL_xpviv_root, PL_xpviv_root.32
	testq	%rax, %rax	# PL_xpviv_root.32
	jne	.L99	#,
	.loc 1 832 0
	call	S_more_xpviv	#
.L99:
	.loc 1 833 0
	movq	PL_xpviv_root(%rip), %rax	# PL_xpviv_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xpviv
	.loc 1 834 0
	movq	-8(%rbp), %rax	# xpviv, tmp64
	movq	(%rax), %rax	# xpviv_2->xpv_pv, PL_xpviv_root.33
	movq	%rax, PL_xpviv_root(%rip)	# PL_xpviv_root.33, PL_xpviv_root
	.loc 1 836 0
	movq	-8(%rbp), %rax	# xpviv, D.22616
	.loc 1 837 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE25:
	.size	S_new_xpviv, .-S_new_xpviv
	.type	S_del_xpviv, @function
S_del_xpviv:
.LFB26:
	.loc 1 843 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# p, p
	.loc 1 845 0
	movq	PL_xpviv_root(%rip), %rdx	# PL_xpviv_root, PL_xpviv_root.34
	movq	-8(%rbp), %rax	# p, tmp60
	movq	%rdx, (%rax)	# PL_xpviv_root.34, p_2(D)->xpv_pv
	.loc 1 846 0
	movq	-8(%rbp), %rax	# p, tmp61
	movq	%rax, PL_xpviv_root(%rip)	# tmp61, PL_xpviv_root
	.loc 1 848 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE26:
	.size	S_del_xpviv, .-S_del_xpviv
	.type	S_more_xpviv, @function
S_more_xpviv:
.LFB27:
	.loc 1 854 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 857 0
	movl	$4064, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, %rbx	#, xpviv
	.loc 1 858 0
	movq	PL_xpviv_arenaroot(%rip), %rax	# PL_xpviv_arenaroot, PL_xpviv_arenaroot.35
	movq	%rax, (%rbx)	# PL_xpviv_arenaroot.35, xpviv_2->xpv_pv
	.loc 1 859 0
	movq	%rbx, PL_xpviv_arenaroot(%rip)	# xpviv, PL_xpviv_arenaroot
	.loc 1 861 0
	leaq	4032(%rbx), %r12	#, xpvivend
	.loc 1 862 0
	addq	$32, %rbx	#, xpviv
	movq	%rbx, PL_xpviv_root(%rip)	# xpviv, PL_xpviv_root
	.loc 1 863 0
	jmp	.L103	#
.L104:
	.loc 1 864 0
	leaq	32(%rbx), %rax	#, D.22617
	movq	%rax, (%rbx)	# D.22617, xpviv_1->xpv_pv
	.loc 1 865 0
	addq	$32, %rbx	#, xpviv
.L103:
	.loc 1 863 0 discriminator 1
	cmpq	%r12, %rbx	# xpvivend, xpviv
	jb	.L104	#,
	.loc 1 867 0
	movq	$0, (%rbx)	#, xpviv_1->xpv_pv
	.loc 1 868 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE27:
	.size	S_more_xpviv, .-S_more_xpviv
	.type	S_new_xpvnv, @function
S_new_xpvnv:
.LFB28:
	.loc 1 874 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 877 0
	movq	PL_xpvnv_root(%rip), %rax	# PL_xpvnv_root, PL_xpvnv_root.36
	testq	%rax, %rax	# PL_xpvnv_root.36
	jne	.L106	#,
	.loc 1 878 0
	call	S_more_xpvnv	#
.L106:
	.loc 1 879 0
	movq	PL_xpvnv_root(%rip), %rax	# PL_xpvnv_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xpvnv
	.loc 1 880 0
	movq	-8(%rbp), %rax	# xpvnv, tmp64
	movq	(%rax), %rax	# xpvnv_2->xpv_pv, PL_xpvnv_root.37
	movq	%rax, PL_xpvnv_root(%rip)	# PL_xpvnv_root.37, PL_xpvnv_root
	.loc 1 882 0
	movq	-8(%rbp), %rax	# xpvnv, D.22618
	.loc 1 883 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE28:
	.size	S_new_xpvnv, .-S_new_xpvnv
	.type	S_del_xpvnv, @function
S_del_xpvnv:
.LFB29:
	.loc 1 889 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# p, p
	.loc 1 891 0
	movq	PL_xpvnv_root(%rip), %rdx	# PL_xpvnv_root, PL_xpvnv_root.38
	movq	-8(%rbp), %rax	# p, tmp60
	movq	%rdx, (%rax)	# PL_xpvnv_root.38, p_2(D)->xpv_pv
	.loc 1 892 0
	movq	-8(%rbp), %rax	# p, tmp61
	movq	%rax, PL_xpvnv_root(%rip)	# tmp61, PL_xpvnv_root
	.loc 1 894 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE29:
	.size	S_del_xpvnv, .-S_del_xpvnv
	.type	S_more_xpvnv, @function
S_more_xpvnv:
.LFB30:
	.loc 1 900 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 903 0
	movl	$4080, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, %rbx	#, xpvnv
	.loc 1 904 0
	movq	PL_xpvnv_arenaroot(%rip), %rax	# PL_xpvnv_arenaroot, PL_xpvnv_arenaroot.39
	movq	%rax, (%rbx)	# PL_xpvnv_arenaroot.39, xpvnv_2->xpv_pv
	.loc 1 905 0
	movq	%rbx, PL_xpvnv_arenaroot(%rip)	# xpvnv, PL_xpvnv_arenaroot
	.loc 1 907 0
	leaq	4040(%rbx), %r12	#, xpvnvend
	.loc 1 908 0
	addq	$40, %rbx	#, xpvnv
	movq	%rbx, PL_xpvnv_root(%rip)	# xpvnv, PL_xpvnv_root
	.loc 1 909 0
	jmp	.L110	#
.L111:
	.loc 1 910 0
	leaq	40(%rbx), %rax	#, D.22619
	movq	%rax, (%rbx)	# D.22619, xpvnv_1->xpv_pv
	.loc 1 911 0
	addq	$40, %rbx	#, xpvnv
.L110:
	.loc 1 909 0 discriminator 1
	cmpq	%r12, %rbx	# xpvnvend, xpvnv
	jb	.L111	#,
	.loc 1 913 0
	movq	$0, (%rbx)	#, xpvnv_1->xpv_pv
	.loc 1 914 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE30:
	.size	S_more_xpvnv, .-S_more_xpvnv
	.type	S_new_xpvcv, @function
S_new_xpvcv:
.LFB31:
	.loc 1 920 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 923 0
	movq	PL_xpvcv_root(%rip), %rax	# PL_xpvcv_root, PL_xpvcv_root.40
	testq	%rax, %rax	# PL_xpvcv_root.40
	jne	.L113	#,
	.loc 1 924 0
	call	S_more_xpvcv	#
.L113:
	.loc 1 925 0
	movq	PL_xpvcv_root(%rip), %rax	# PL_xpvcv_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xpvcv
	.loc 1 926 0
	movq	-8(%rbp), %rax	# xpvcv, tmp64
	movq	(%rax), %rax	# xpvcv_2->xpv_pv, PL_xpvcv_root.41
	movq	%rax, PL_xpvcv_root(%rip)	# PL_xpvcv_root.41, PL_xpvcv_root
	.loc 1 928 0
	movq	-8(%rbp), %rax	# xpvcv, D.22620
	.loc 1 929 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE31:
	.size	S_new_xpvcv, .-S_new_xpvcv
	.type	S_del_xpvcv, @function
S_del_xpvcv:
.LFB32:
	.loc 1 935 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# p, p
	.loc 1 937 0
	movq	PL_xpvcv_root(%rip), %rdx	# PL_xpvcv_root, PL_xpvcv_root.42
	movq	-8(%rbp), %rax	# p, tmp60
	movq	%rdx, (%rax)	# PL_xpvcv_root.42, p_2(D)->xpv_pv
	.loc 1 938 0
	movq	-8(%rbp), %rax	# p, tmp61
	movq	%rax, PL_xpvcv_root(%rip)	# tmp61, PL_xpvcv_root
	.loc 1 940 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE32:
	.size	S_del_xpvcv, .-S_del_xpvcv
	.type	S_more_xpvcv, @function
S_more_xpvcv:
.LFB33:
	.loc 1 946 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 949 0
	movl	$4032, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, %rbx	#, xpvcv
	.loc 1 950 0
	movq	PL_xpvcv_arenaroot(%rip), %rax	# PL_xpvcv_arenaroot, PL_xpvcv_arenaroot.43
	movq	%rax, (%rbx)	# PL_xpvcv_arenaroot.43, xpvcv_2->xpv_pv
	.loc 1 951 0
	movq	%rbx, PL_xpvcv_arenaroot(%rip)	# xpvcv, PL_xpvcv_arenaroot
	.loc 1 953 0
	leaq	3888(%rbx), %r12	#, xpvcvend
	.loc 1 954 0
	addq	$144, %rbx	#, xpvcv
	movq	%rbx, PL_xpvcv_root(%rip)	# xpvcv, PL_xpvcv_root
	.loc 1 955 0
	jmp	.L117	#
.L118:
	.loc 1 956 0
	leaq	144(%rbx), %rax	#, D.22621
	movq	%rax, (%rbx)	# D.22621, xpvcv_1->xpv_pv
	.loc 1 957 0
	addq	$144, %rbx	#, xpvcv
.L117:
	.loc 1 955 0 discriminator 1
	cmpq	%r12, %rbx	# xpvcvend, xpvcv
	jb	.L118	#,
	.loc 1 959 0
	movq	$0, (%rbx)	#, xpvcv_1->xpv_pv
	.loc 1 960 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE33:
	.size	S_more_xpvcv, .-S_more_xpvcv
	.type	S_new_xpvav, @function
S_new_xpvav:
.LFB34:
	.loc 1 966 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 969 0
	movq	PL_xpvav_root(%rip), %rax	# PL_xpvav_root, PL_xpvav_root.44
	testq	%rax, %rax	# PL_xpvav_root.44
	jne	.L120	#,
	.loc 1 970 0
	call	S_more_xpvav	#
.L120:
	.loc 1 971 0
	movq	PL_xpvav_root(%rip), %rax	# PL_xpvav_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xpvav
	.loc 1 972 0
	movq	-8(%rbp), %rax	# xpvav, tmp64
	movq	(%rax), %rax	# xpvav_2->xav_array, PL_xpvav_root.45
	movq	%rax, PL_xpvav_root(%rip)	# PL_xpvav_root.45, PL_xpvav_root
	.loc 1 974 0
	movq	-8(%rbp), %rax	# xpvav, D.22622
	.loc 1 975 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE34:
	.size	S_new_xpvav, .-S_new_xpvav
	.type	S_del_xpvav, @function
S_del_xpvav:
.LFB35:
	.loc 1 981 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# p, p
	.loc 1 983 0
	movq	PL_xpvav_root(%rip), %rdx	# PL_xpvav_root, PL_xpvav_root.46
	movq	-8(%rbp), %rax	# p, tmp60
	movq	%rdx, (%rax)	# PL_xpvav_root.46, p_2(D)->xav_array
	.loc 1 984 0
	movq	-8(%rbp), %rax	# p, tmp61
	movq	%rax, PL_xpvav_root(%rip)	# tmp61, PL_xpvav_root
	.loc 1 986 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE35:
	.size	S_del_xpvav, .-S_del_xpvav
	.type	S_more_xpvav, @function
S_more_xpvav:
.LFB36:
	.loc 1 992 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 995 0
	movl	$4080, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, %rbx	#, xpvav
	.loc 1 996 0
	movq	PL_xpvav_arenaroot(%rip), %rax	# PL_xpvav_arenaroot, PL_xpvav_arenaroot.47
	movq	%rax, (%rbx)	# PL_xpvav_arenaroot.47, xpvav_2->xav_array
	.loc 1 997 0
	movq	%rbx, PL_xpvav_arenaroot(%rip)	# xpvav, PL_xpvav_arenaroot
	.loc 1 999 0
	leaq	4000(%rbx), %r12	#, xpvavend
	.loc 1 1000 0
	addq	$80, %rbx	#, xpvav
	movq	%rbx, PL_xpvav_root(%rip)	# xpvav, PL_xpvav_root
	.loc 1 1001 0
	jmp	.L124	#
.L125:
	.loc 1 1002 0
	leaq	80(%rbx), %rax	#, D.22623
	movq	%rax, (%rbx)	# D.22623, xpvav_1->xav_array
	.loc 1 1003 0
	addq	$80, %rbx	#, xpvav
.L124:
	.loc 1 1001 0 discriminator 1
	cmpq	%r12, %rbx	# xpvavend, xpvav
	jb	.L125	#,
	.loc 1 1005 0
	movq	$0, (%rbx)	#, xpvav_1->xav_array
	.loc 1 1006 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE36:
	.size	S_more_xpvav, .-S_more_xpvav
	.type	S_new_xpvhv, @function
S_new_xpvhv:
.LFB37:
	.loc 1 1012 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 1015 0
	movq	PL_xpvhv_root(%rip), %rax	# PL_xpvhv_root, PL_xpvhv_root.48
	testq	%rax, %rax	# PL_xpvhv_root.48
	jne	.L127	#,
	.loc 1 1016 0
	call	S_more_xpvhv	#
.L127:
	.loc 1 1017 0
	movq	PL_xpvhv_root(%rip), %rax	# PL_xpvhv_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xpvhv
	.loc 1 1018 0
	movq	-8(%rbp), %rax	# xpvhv, tmp64
	movq	(%rax), %rax	# xpvhv_2->xhv_array, PL_xpvhv_root.49
	movq	%rax, PL_xpvhv_root(%rip)	# PL_xpvhv_root.49, PL_xpvhv_root
	.loc 1 1020 0
	movq	-8(%rbp), %rax	# xpvhv, D.22624
	.loc 1 1021 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE37:
	.size	S_new_xpvhv, .-S_new_xpvhv
	.type	S_del_xpvhv, @function
S_del_xpvhv:
.LFB38:
	.loc 1 1027 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# p, p
	.loc 1 1029 0
	movq	PL_xpvhv_root(%rip), %rdx	# PL_xpvhv_root, PL_xpvhv_root.50
	movq	-8(%rbp), %rax	# p, tmp60
	movq	%rdx, (%rax)	# PL_xpvhv_root.50, p_2(D)->xhv_array
	.loc 1 1030 0
	movq	-8(%rbp), %rax	# p, tmp61
	movq	%rax, PL_xpvhv_root(%rip)	# tmp61, PL_xpvhv_root
	.loc 1 1032 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE38:
	.size	S_del_xpvhv, .-S_del_xpvhv
	.type	S_more_xpvhv, @function
S_more_xpvhv:
.LFB39:
	.loc 1 1038 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 1041 0
	movl	$4048, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, %rbx	#, xpvhv
	.loc 1 1042 0
	movq	PL_xpvhv_arenaroot(%rip), %rax	# PL_xpvhv_arenaroot, PL_xpvhv_arenaroot.51
	movq	%rax, (%rbx)	# PL_xpvhv_arenaroot.51, xpvhv_2->xhv_array
	.loc 1 1043 0
	movq	%rbx, PL_xpvhv_arenaroot(%rip)	# xpvhv, PL_xpvhv_arenaroot
	.loc 1 1045 0
	leaq	3960(%rbx), %r12	#, xpvhvend
	.loc 1 1046 0
	addq	$88, %rbx	#, xpvhv
	movq	%rbx, PL_xpvhv_root(%rip)	# xpvhv, PL_xpvhv_root
	.loc 1 1047 0
	jmp	.L131	#
.L132:
	.loc 1 1048 0
	leaq	88(%rbx), %rax	#, D.22625
	movq	%rax, (%rbx)	# D.22625, xpvhv_1->xhv_array
	.loc 1 1049 0
	addq	$88, %rbx	#, xpvhv
.L131:
	.loc 1 1047 0 discriminator 1
	cmpq	%r12, %rbx	# xpvhvend, xpvhv
	jb	.L132	#,
	.loc 1 1051 0
	movq	$0, (%rbx)	#, xpvhv_1->xhv_array
	.loc 1 1052 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE39:
	.size	S_more_xpvhv, .-S_more_xpvhv
	.type	S_new_xpvmg, @function
S_new_xpvmg:
.LFB40:
	.loc 1 1058 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 1061 0
	movq	PL_xpvmg_root(%rip), %rax	# PL_xpvmg_root, PL_xpvmg_root.52
	testq	%rax, %rax	# PL_xpvmg_root.52
	jne	.L134	#,
	.loc 1 1062 0
	call	S_more_xpvmg	#
.L134:
	.loc 1 1063 0
	movq	PL_xpvmg_root(%rip), %rax	# PL_xpvmg_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xpvmg
	.loc 1 1064 0
	movq	-8(%rbp), %rax	# xpvmg, tmp64
	movq	(%rax), %rax	# xpvmg_2->xpv_pv, PL_xpvmg_root.53
	movq	%rax, PL_xpvmg_root(%rip)	# PL_xpvmg_root.53, PL_xpvmg_root
	.loc 1 1066 0
	movq	-8(%rbp), %rax	# xpvmg, D.22626
	.loc 1 1067 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE40:
	.size	S_new_xpvmg, .-S_new_xpvmg
	.type	S_del_xpvmg, @function
S_del_xpvmg:
.LFB41:
	.loc 1 1073 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# p, p
	.loc 1 1075 0
	movq	PL_xpvmg_root(%rip), %rdx	# PL_xpvmg_root, PL_xpvmg_root.54
	movq	-8(%rbp), %rax	# p, tmp60
	movq	%rdx, (%rax)	# PL_xpvmg_root.54, p_2(D)->xpv_pv
	.loc 1 1076 0
	movq	-8(%rbp), %rax	# p, tmp61
	movq	%rax, PL_xpvmg_root(%rip)	# tmp61, PL_xpvmg_root
	.loc 1 1078 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE41:
	.size	S_del_xpvmg, .-S_del_xpvmg
	.type	S_more_xpvmg, @function
S_more_xpvmg:
.LFB42:
	.loc 1 1084 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 1087 0
	movl	$4032, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, %rbx	#, xpvmg
	.loc 1 1088 0
	movq	PL_xpvmg_arenaroot(%rip), %rax	# PL_xpvmg_arenaroot, PL_xpvmg_arenaroot.55
	movq	%rax, (%rbx)	# PL_xpvmg_arenaroot.55, xpvmg_2->xpv_pv
	.loc 1 1089 0
	movq	%rbx, PL_xpvmg_arenaroot(%rip)	# xpvmg, PL_xpvmg_arenaroot
	.loc 1 1091 0
	leaq	3976(%rbx), %r12	#, xpvmgend
	.loc 1 1092 0
	addq	$56, %rbx	#, xpvmg
	movq	%rbx, PL_xpvmg_root(%rip)	# xpvmg, PL_xpvmg_root
	.loc 1 1093 0
	jmp	.L138	#
.L139:
	.loc 1 1094 0
	leaq	56(%rbx), %rax	#, D.22627
	movq	%rax, (%rbx)	# D.22627, xpvmg_1->xpv_pv
	.loc 1 1095 0
	addq	$56, %rbx	#, xpvmg
.L138:
	.loc 1 1093 0 discriminator 1
	cmpq	%r12, %rbx	# xpvmgend, xpvmg
	jb	.L139	#,
	.loc 1 1097 0
	movq	$0, (%rbx)	#, xpvmg_1->xpv_pv
	.loc 1 1098 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE42:
	.size	S_more_xpvmg, .-S_more_xpvmg
	.type	S_new_xpvlv, @function
S_new_xpvlv:
.LFB43:
	.loc 1 1104 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 1107 0
	movq	PL_xpvlv_root(%rip), %rax	# PL_xpvlv_root, PL_xpvlv_root.56
	testq	%rax, %rax	# PL_xpvlv_root.56
	jne	.L141	#,
	.loc 1 1108 0
	call	S_more_xpvlv	#
.L141:
	.loc 1 1109 0
	movq	PL_xpvlv_root(%rip), %rax	# PL_xpvlv_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xpvlv
	.loc 1 1110 0
	movq	-8(%rbp), %rax	# xpvlv, tmp64
	movq	(%rax), %rax	# xpvlv_2->xpv_pv, PL_xpvlv_root.57
	movq	%rax, PL_xpvlv_root(%rip)	# PL_xpvlv_root.57, PL_xpvlv_root
	.loc 1 1112 0
	movq	-8(%rbp), %rax	# xpvlv, D.22628
	.loc 1 1113 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE43:
	.size	S_new_xpvlv, .-S_new_xpvlv
	.type	S_del_xpvlv, @function
S_del_xpvlv:
.LFB44:
	.loc 1 1119 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# p, p
	.loc 1 1121 0
	movq	PL_xpvlv_root(%rip), %rdx	# PL_xpvlv_root, PL_xpvlv_root.58
	movq	-8(%rbp), %rax	# p, tmp60
	movq	%rdx, (%rax)	# PL_xpvlv_root.58, p_2(D)->xpv_pv
	.loc 1 1122 0
	movq	-8(%rbp), %rax	# p, tmp61
	movq	%rax, PL_xpvlv_root(%rip)	# tmp61, PL_xpvlv_root
	.loc 1 1124 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE44:
	.size	S_del_xpvlv, .-S_del_xpvlv
	.type	S_more_xpvlv, @function
S_more_xpvlv:
.LFB45:
	.loc 1 1130 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 1133 0
	movl	$4048, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, %rbx	#, xpvlv
	.loc 1 1134 0
	movq	PL_xpvlv_arenaroot(%rip), %rax	# PL_xpvlv_arenaroot, PL_xpvlv_arenaroot.59
	movq	%rax, (%rbx)	# PL_xpvlv_arenaroot.59, xpvlv_2->xpv_pv
	.loc 1 1135 0
	movq	%rbx, PL_xpvlv_arenaroot(%rip)	# xpvlv, PL_xpvlv_arenaroot
	.loc 1 1137 0
	leaq	3960(%rbx), %r12	#, xpvlvend
	.loc 1 1138 0
	addq	$88, %rbx	#, xpvlv
	movq	%rbx, PL_xpvlv_root(%rip)	# xpvlv, PL_xpvlv_root
	.loc 1 1139 0
	jmp	.L145	#
.L146:
	.loc 1 1140 0
	leaq	88(%rbx), %rax	#, D.22629
	movq	%rax, (%rbx)	# D.22629, xpvlv_1->xpv_pv
	.loc 1 1141 0
	addq	$88, %rbx	#, xpvlv
.L145:
	.loc 1 1139 0 discriminator 1
	cmpq	%r12, %rbx	# xpvlvend, xpvlv
	jb	.L146	#,
	.loc 1 1143 0
	movq	$0, (%rbx)	#, xpvlv_1->xpv_pv
	.loc 1 1144 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE45:
	.size	S_more_xpvlv, .-S_more_xpvlv
	.type	S_new_xpvbm, @function
S_new_xpvbm:
.LFB46:
	.loc 1 1150 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 1153 0
	movq	PL_xpvbm_root(%rip), %rax	# PL_xpvbm_root, PL_xpvbm_root.60
	testq	%rax, %rax	# PL_xpvbm_root.60
	jne	.L148	#,
	.loc 1 1154 0
	call	S_more_xpvbm	#
.L148:
	.loc 1 1155 0
	movq	PL_xpvbm_root(%rip), %rax	# PL_xpvbm_root, tmp63
	movq	%rax, -8(%rbp)	# tmp63, xpvbm
	.loc 1 1156 0
	movq	-8(%rbp), %rax	# xpvbm, tmp64
	movq	(%rax), %rax	# xpvbm_2->xpv_pv, PL_xpvbm_root.61
	movq	%rax, PL_xpvbm_root(%rip)	# PL_xpvbm_root.61, PL_xpvbm_root
	.loc 1 1158 0
	movq	-8(%rbp), %rax	# xpvbm, D.22630
	.loc 1 1159 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE46:
	.size	S_new_xpvbm, .-S_new_xpvbm
	.type	S_del_xpvbm, @function
S_del_xpvbm:
.LFB47:
	.loc 1 1165 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# p, p
	.loc 1 1167 0
	movq	PL_xpvbm_root(%rip), %rdx	# PL_xpvbm_root, PL_xpvbm_root.62
	movq	-8(%rbp), %rax	# p, tmp60
	movq	%rdx, (%rax)	# PL_xpvbm_root.62, p_2(D)->xpv_pv
	.loc 1 1168 0
	movq	-8(%rbp), %rax	# p, tmp61
	movq	%rax, PL_xpvbm_root(%rip)	# tmp61, PL_xpvbm_root
	.loc 1 1170 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE47:
	.size	S_del_xpvbm, .-S_del_xpvbm
	.type	S_more_xpvbm, @function
S_more_xpvbm:
.LFB48:
	.loc 1 1176 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 1179 0
	movl	$4032, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, %rbx	#, xpvbm
	.loc 1 1180 0
	movq	PL_xpvbm_arenaroot(%rip), %rax	# PL_xpvbm_arenaroot, PL_xpvbm_arenaroot.63
	movq	%rax, (%rbx)	# PL_xpvbm_arenaroot.63, xpvbm_2->xpv_pv
	.loc 1 1181 0
	movq	%rbx, PL_xpvbm_arenaroot(%rip)	# xpvbm, PL_xpvbm_arenaroot
	.loc 1 1183 0
	leaq	3968(%rbx), %r12	#, xpvbmend
	.loc 1 1184 0
	addq	$64, %rbx	#, xpvbm
	movq	%rbx, PL_xpvbm_root(%rip)	# xpvbm, PL_xpvbm_root
	.loc 1 1185 0
	jmp	.L152	#
.L153:
	.loc 1 1186 0
	leaq	64(%rbx), %rax	#, D.22631
	movq	%rax, (%rbx)	# D.22631, xpvbm_1->xpv_pv
	.loc 1 1187 0
	addq	$64, %rbx	#, xpvbm
.L152:
	.loc 1 1185 0 discriminator 1
	cmpq	%r12, %rbx	# xpvbmend, xpvbm
	jb	.L153	#,
	.loc 1 1189 0
	movq	$0, (%rbx)	#, xpvbm_1->xpv_pv
	.loc 1 1190 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE48:
	.size	S_more_xpvbm, .-S_more_xpvbm
	.section	.rodata
	.align 8
.LC3:
	.string	"Can't upgrade that kind of scalar"
.LC4:
	.string	"Can't upgrade to undef"
	.text
	.globl	Perl_sv_upgrade
	.type	Perl_sv_upgrade, @function
Perl_sv_upgrade:
.LFB49:
	.loc 1 1294 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movl	%esi, -68(%rbp)	# mt, mt
	.loc 1 1304 0
	cmpl	$4, -68(%rbp)	#, mt
	je	.L155	#,
	.loc 1 1304 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	andl	$8388608, %eax	#, D.22633
	testl	%eax, %eax	# D.22633
	je	.L155	#,
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	andl	$1048576, %eax	#, D.22633
	testl	%eax, %eax	# D.22633
	je	.L155	#,
	.loc 1 1305 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L155:
	.loc 1 1308 0
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	movzbl	%al, %eax	# D.22633, D.22633
	cmpl	-68(%rbp), %eax	# mt, D.22633
	jne	.L156	#,
	.loc 1 1309 0
	movl	$1, %eax	#, D.22632
	jmp	.L157	#
.L156:
	.loc 1 1311 0
	cmpl	$4, -68(%rbp)	#, mt
	ja	.L158	#,
	.loc 1 1312 0
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	andl	$2097152, %eax	#, D.22633
	testl	%eax, %eax	# D.22633
	je	.L158	#,
	.loc 1 1312 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22634
	je	.L158	#,
	.loc 1 1312 0
	nop
.L158:
	.loc 1 1314 0 is_stmt 1
	movq	$0, -56(%rbp)	#, pv
	.loc 1 1315 0
	movl	$0, -64(%rbp)	#, cur
	.loc 1 1316 0
	movl	$0, -60(%rbp)	#, len
	.loc 1 1317 0
	movq	$0, -48(%rbp)	#, iv
	.loc 1 1318 0
	movl	$0, %eax	#, tmp263
	movq	%rax, -40(%rbp)	# tmp263, nv
	.loc 1 1319 0
	movq	$0, -32(%rbp)	#, magic
	.loc 1 1320 0
	movq	$0, -24(%rbp)	#, stash
	.loc 1 1322 0
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	movzbl	%al, %eax	# D.22633, D.22633
	cmpl	$7, %eax	#, D.22633
	ja	.L160	#,
	movl	%eax, %eax	# D.22633, tmp264
	movq	.L162(,%rax,8), %rax	#, tmp265
	jmp	*%rax	# tmp265
	.section	.rodata
	.align 8
	.align 4
.L162:
	.quad	.L199
	.quad	.L163
	.quad	.L164
	.quad	.L165
	.quad	.L166
	.quad	.L167
	.quad	.L168
	.quad	.L169
	.text
.L163:
	.loc 1 1326 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_36].xiv_iv, tmp266
	movq	%rax, -48(%rbp)	# tmp266, iv
	.loc 1 1327 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	%rax, %rdi	# D.22635,
	call	S_del_xiv	#
	.loc 1 1328 0
	cmpl	$2, -68(%rbp)	#, mt
	jne	.L171	#,
	.loc 1 1329 0
	movl	$6, -68(%rbp)	#, mt
	jmp	.L172	#
.L171:
	.loc 1 1330 0
	cmpl	$4, -68(%rbp)	#, mt
	ja	.L172	#,
	.loc 1 1331 0
	movl	$5, -68(%rbp)	#, mt
	.loc 1 1332 0
	jmp	.L170	#
.L172:
	jmp	.L170	#
.L164:
	.loc 1 1334 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_41].xnv_nv, tmp267
	movq	%rax, -40(%rbp)	# tmp267, nv
	.loc 1 1335 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	%rax, %rdi	# D.22635,
	call	S_del_xnv	#
	.loc 1 1336 0
	cmpl	$5, -68(%rbp)	#, mt
	ja	.L173	#,
	.loc 1 1337 0
	movl	$6, -68(%rbp)	#, mt
	.loc 1 1338 0
	jmp	.L170	#
.L173:
	jmp	.L170	#
.L165:
	.loc 1 1340 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	(%rax), %rax	# MEM[(struct XRV *)_45].xrv_rv, tmp268
	movq	%rax, -56(%rbp)	# tmp268, pv
	.loc 1 1341 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	%rax, %rdi	# D.22635,
	call	S_del_xrv	#
	.loc 1 1342 0
	jmp	.L170	#
.L166:
	.loc 1 1344 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	(%rax), %rax	# MEM[(struct XPV *)_48].xpv_pv, tmp269
	movq	%rax, -56(%rbp)	# tmp269, pv
	.loc 1 1345 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	8(%rax), %rax	# MEM[(struct XPV *)_50].xpv_cur, D.22636
	movl	%eax, -64(%rbp)	# D.22636, cur
	.loc 1 1346 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	16(%rax), %rax	# MEM[(struct XPV *)_53].xpv_len, D.22636
	movl	%eax, -60(%rbp)	# D.22636, len
	.loc 1 1347 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	%rax, %rdi	# D.22635,
	call	S_del_xpv	#
	.loc 1 1348 0
	cmpl	$1, -68(%rbp)	#, mt
	ja	.L174	#,
	.loc 1 1349 0
	movl	$5, -68(%rbp)	#, mt
	jmp	.L175	#
.L174:
	.loc 1 1350 0
	cmpl	$2, -68(%rbp)	#, mt
	jne	.L175	#,
	.loc 1 1351 0
	movl	$6, -68(%rbp)	#, mt
	.loc 1 1352 0
	jmp	.L170	#
.L175:
	jmp	.L170	#
.L167:
	.loc 1 1354 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	(%rax), %rax	# MEM[(struct XPV *)_59].xpv_pv, tmp270
	movq	%rax, -56(%rbp)	# tmp270, pv
	.loc 1 1355 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	8(%rax), %rax	# MEM[(struct XPV *)_61].xpv_cur, D.22636
	movl	%eax, -64(%rbp)	# D.22636, cur
	.loc 1 1356 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	16(%rax), %rax	# MEM[(struct XPV *)_64].xpv_len, D.22636
	movl	%eax, -60(%rbp)	# D.22636, len
	.loc 1 1357 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_67].xiv_iv, tmp271
	movq	%rax, -48(%rbp)	# tmp271, iv
	.loc 1 1358 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	%rax, %rdi	# D.22635,
	call	S_del_xpviv	#
	.loc 1 1359 0
	jmp	.L170	#
.L168:
	.loc 1 1361 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	(%rax), %rax	# MEM[(struct XPV *)_70].xpv_pv, tmp272
	movq	%rax, -56(%rbp)	# tmp272, pv
	.loc 1 1362 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	8(%rax), %rax	# MEM[(struct XPV *)_72].xpv_cur, D.22636
	movl	%eax, -64(%rbp)	# D.22636, cur
	.loc 1 1363 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	16(%rax), %rax	# MEM[(struct XPV *)_75].xpv_len, D.22636
	movl	%eax, -60(%rbp)	# D.22636, len
	.loc 1 1364 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_78].xiv_iv, tmp273
	movq	%rax, -48(%rbp)	# tmp273, iv
	.loc 1 1365 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_80].xnv_nv, tmp274
	movq	%rax, -40(%rbp)	# tmp274, nv
	.loc 1 1366 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	%rax, %rdi	# D.22635,
	call	S_del_xpvnv	#
	.loc 1 1367 0
	jmp	.L170	#
.L169:
	.loc 1 1369 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	(%rax), %rax	# MEM[(struct XPV *)_83].xpv_pv, tmp275
	movq	%rax, -56(%rbp)	# tmp275, pv
	.loc 1 1370 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	8(%rax), %rax	# MEM[(struct XPV *)_85].xpv_cur, D.22636
	movl	%eax, -64(%rbp)	# D.22636, cur
	.loc 1 1371 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	16(%rax), %rax	# MEM[(struct XPV *)_88].xpv_len, D.22636
	movl	%eax, -60(%rbp)	# D.22636, len
	.loc 1 1372 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_91].xiv_iv, tmp276
	movq	%rax, -48(%rbp)	# tmp276, iv
	.loc 1 1373 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_93].xnv_nv, tmp277
	movq	%rax, -40(%rbp)	# tmp277, nv
	.loc 1 1374 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	40(%rax), %rax	# MEM[(struct XPVMG *)_95].xmg_magic, tmp278
	movq	%rax, -32(%rbp)	# tmp278, magic
	.loc 1 1375 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_97].xmg_stash, tmp279
	movq	%rax, -24(%rbp)	# tmp279, stash
	.loc 1 1376 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	%rax, %rdi	# D.22635,
	call	S_del_xpvmg	#
	.loc 1 1377 0
	jmp	.L170	#
.L160:
	.loc 1 1379 0
	movl	$.LC3, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L170	#
.L199:
	.loc 1 1324 0
	nop
.L170:
	.loc 1 1382 0
	cmpl	$15, -68(%rbp)	#, mt
	ja	.L176	#,
	movl	-68(%rbp), %eax	# mt, tmp280
	movq	.L178(,%rax,8), %rax	#, tmp281
	jmp	*%rax	# tmp281
	.section	.rodata
	.align 8
	.align 4
.L178:
	.quad	.L177
	.quad	.L179
	.quad	.L180
	.quad	.L181
	.quad	.L182
	.quad	.L183
	.quad	.L184
	.quad	.L185
	.quad	.L186
	.quad	.L187
	.quad	.L188
	.quad	.L189
	.quad	.L190
	.quad	.L191
	.quad	.L192
	.quad	.L193
	.text
.L177:
	.loc 1 1384 0
	movl	$.LC4, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L179:
	.loc 1 1386 0
	call	S_new_xiv	#
	movq	%rax, (%rbx)	# D.22637, sv_14(D)->sv_any
	.loc 1 1387 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-48(%rbp), %rdx	# iv, tmp282
	movq	%rdx, 24(%rax)	# tmp282, MEM[(struct XPVIV *)_101].xiv_iv
	.loc 1 1388 0
	jmp	.L176	#
.L180:
	.loc 1 1390 0
	call	S_new_xnv	#
	movq	%rax, (%rbx)	# D.22638, sv_14(D)->sv_any
	.loc 1 1391 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movq	-40(%rbp), %rax	# nv, tmp283
	movq	%rax, 32(%rdx)	# tmp283, MEM[(struct XPVNV *)_103].xnv_nv
	.loc 1 1392 0
	jmp	.L176	#
.L181:
	.loc 1 1394 0
	call	S_new_xrv	#
	movq	%rax, (%rbx)	# D.22639, sv_14(D)->sv_any
	.loc 1 1395 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp284
	movq	%rdx, (%rax)	# tmp284, MEM[(struct XRV *)_105].xrv_rv
	.loc 1 1396 0
	jmp	.L176	#
.L182:
	.loc 1 1398 0
	call	S_new_xpv	#
	movq	%rax, (%rbx)	# D.22640, sv_14(D)->sv_any
	.loc 1 1399 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp285
	movq	%rdx, (%rax)	# tmp285, MEM[(struct XPV *)_107].xpv_pv
	.loc 1 1400 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-64(%rbp), %edx	# cur, D.22636
	movq	%rdx, 8(%rax)	# D.22636, MEM[(struct XPV *)_108].xpv_cur
	.loc 1 1401 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-60(%rbp), %edx	# len, D.22636
	movq	%rdx, 16(%rax)	# D.22636, MEM[(struct XPV *)_110].xpv_len
	.loc 1 1402 0
	jmp	.L176	#
.L183:
	.loc 1 1404 0
	call	S_new_xpviv	#
	movq	%rax, (%rbx)	# D.22637, sv_14(D)->sv_any
	.loc 1 1405 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp286
	movq	%rdx, (%rax)	# tmp286, MEM[(struct XPV *)_113].xpv_pv
	.loc 1 1406 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-64(%rbp), %edx	# cur, D.22636
	movq	%rdx, 8(%rax)	# D.22636, MEM[(struct XPV *)_114].xpv_cur
	.loc 1 1407 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-60(%rbp), %edx	# len, D.22636
	movq	%rdx, 16(%rax)	# D.22636, MEM[(struct XPV *)_116].xpv_len
	.loc 1 1408 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-48(%rbp), %rdx	# iv, tmp287
	movq	%rdx, 24(%rax)	# tmp287, MEM[(struct XPVIV *)_118].xiv_iv
	.loc 1 1409 0
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	andl	$196608, %eax	#, D.22633
	testl	%eax, %eax	# D.22633
	je	.L194	#,
	.loc 1 1410 0
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	andl	$2097152, %eax	#, D.22633
	testl	%eax, %eax	# D.22633
	je	.L196	#,
	.loc 1 1410 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22634
	je	.L196	#,
	.loc 1 1410 0
	nop
.L196:
	.loc 1 1410 0 discriminator 3
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	orl	$16842752, %eax	#, D.22633
	movl	%eax, 12(%rbx)	# D.22633, sv_14(D)->sv_flags
.L194:
	.loc 1 1411 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	andl	$-33685505, %eax	#, D.22633
	movl	%eax, 12(%rbx)	# D.22633, sv_14(D)->sv_flags
	.loc 1 1412 0
	jmp	.L176	#
.L184:
	.loc 1 1414 0
	call	S_new_xpvnv	#
	movq	%rax, (%rbx)	# D.22638, sv_14(D)->sv_any
	.loc 1 1415 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp288
	movq	%rdx, (%rax)	# tmp288, MEM[(struct XPV *)_131].xpv_pv
	.loc 1 1416 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-64(%rbp), %edx	# cur, D.22636
	movq	%rdx, 8(%rax)	# D.22636, MEM[(struct XPV *)_132].xpv_cur
	.loc 1 1417 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-60(%rbp), %edx	# len, D.22636
	movq	%rdx, 16(%rax)	# D.22636, MEM[(struct XPV *)_134].xpv_len
	.loc 1 1418 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-48(%rbp), %rdx	# iv, tmp289
	movq	%rdx, 24(%rax)	# tmp289, MEM[(struct XPVIV *)_136].xiv_iv
	.loc 1 1419 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movq	-40(%rbp), %rax	# nv, tmp290
	movq	%rax, 32(%rdx)	# tmp290, MEM[(struct XPVNV *)_137].xnv_nv
	.loc 1 1420 0
	jmp	.L176	#
.L185:
	.loc 1 1422 0
	call	S_new_xpvmg	#
	movq	%rax, (%rbx)	# D.22641, sv_14(D)->sv_any
	.loc 1 1423 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp291
	movq	%rdx, (%rax)	# tmp291, MEM[(struct XPV *)_139].xpv_pv
	.loc 1 1424 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-64(%rbp), %edx	# cur, D.22636
	movq	%rdx, 8(%rax)	# D.22636, MEM[(struct XPV *)_140].xpv_cur
	.loc 1 1425 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-60(%rbp), %edx	# len, D.22636
	movq	%rdx, 16(%rax)	# D.22636, MEM[(struct XPV *)_142].xpv_len
	.loc 1 1426 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-48(%rbp), %rdx	# iv, tmp292
	movq	%rdx, 24(%rax)	# tmp292, MEM[(struct XPVIV *)_144].xiv_iv
	.loc 1 1427 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movq	-40(%rbp), %rax	# nv, tmp293
	movq	%rax, 32(%rdx)	# tmp293, MEM[(struct XPVNV *)_145].xnv_nv
	.loc 1 1428 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-32(%rbp), %rdx	# magic, tmp294
	movq	%rdx, 40(%rax)	# tmp294, MEM[(struct XPVMG *)_146].xmg_magic
	.loc 1 1429 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-24(%rbp), %rdx	# stash, tmp295
	movq	%rdx, 48(%rax)	# tmp295, MEM[(struct XPVMG *)_147].xmg_stash
	.loc 1 1430 0
	jmp	.L176	#
.L187:
	.loc 1 1432 0
	call	S_new_xpvlv	#
	movq	%rax, (%rbx)	# D.22642, sv_14(D)->sv_any
	.loc 1 1433 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp296
	movq	%rdx, (%rax)	# tmp296, MEM[(struct XPV *)_149].xpv_pv
	.loc 1 1434 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-64(%rbp), %edx	# cur, D.22636
	movq	%rdx, 8(%rax)	# D.22636, MEM[(struct XPV *)_150].xpv_cur
	.loc 1 1435 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-60(%rbp), %edx	# len, D.22636
	movq	%rdx, 16(%rax)	# D.22636, MEM[(struct XPV *)_152].xpv_len
	.loc 1 1436 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-48(%rbp), %rdx	# iv, tmp297
	movq	%rdx, 24(%rax)	# tmp297, MEM[(struct XPVIV *)_154].xiv_iv
	.loc 1 1437 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movq	-40(%rbp), %rax	# nv, tmp298
	movq	%rax, 32(%rdx)	# tmp298, MEM[(struct XPVNV *)_155].xnv_nv
	.loc 1 1438 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-32(%rbp), %rdx	# magic, tmp299
	movq	%rdx, 40(%rax)	# tmp299, MEM[(struct XPVMG *)_156].xmg_magic
	.loc 1 1439 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-24(%rbp), %rdx	# stash, tmp300
	movq	%rdx, 48(%rax)	# tmp300, MEM[(struct XPVMG *)_157].xmg_stash
	.loc 1 1440 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 56(%rax)	#, MEM[(struct XPVLV *)_158].xlv_targoff
	.loc 1 1441 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 64(%rax)	#, MEM[(struct XPVLV *)_159].xlv_targlen
	.loc 1 1442 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 72(%rax)	#, MEM[(struct XPVLV *)_160].xlv_targ
	.loc 1 1443 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movb	$0, 80(%rax)	#, MEM[(struct XPVLV *)_161].xlv_type
	.loc 1 1444 0
	jmp	.L176	#
.L188:
	.loc 1 1446 0
	call	S_new_xpvav	#
	movq	%rax, (%rbx)	# D.22643, sv_14(D)->sv_any
	.loc 1 1447 0
	cmpq	$0, -56(%rbp)	#, pv
	je	.L197	#,
	.loc 1 1448 0
	movq	-56(%rbp), %rax	# pv, tmp301
	movq	%rax, %rdi	# tmp301,
	call	Perl_safesysfree	#
.L197:
	.loc 1 1449 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, (%rax)	#, MEM[(struct XPV *)_163].xpv_pv
	.loc 1 1450 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$-1, 16(%rax)	#, MEM[(struct XPVAV *)_164].xav_max
	.loc 1 1451 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$-1, 8(%rax)	#, MEM[(struct XPVAV *)_165].xav_fill
	.loc 1 1452 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 24(%rax)	#, MEM[(struct XPVIV *)_166].xiv_iv
	.loc 1 1453 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movl	$0, %eax	#, tmp302
	movq	%rax, 32(%rdx)	# tmp302, MEM[(struct XPVNV *)_167].xnv_nv
	.loc 1 1454 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-32(%rbp), %rdx	# magic, tmp303
	movq	%rdx, 40(%rax)	# tmp303, MEM[(struct XPVMG *)_168].xmg_magic
	.loc 1 1455 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-24(%rbp), %rdx	# stash, tmp304
	movq	%rdx, 48(%rax)	# tmp304, MEM[(struct XPVMG *)_169].xmg_stash
	.loc 1 1456 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 56(%rax)	#, MEM[(struct XPVAV *)_170].xav_alloc
	.loc 1 1457 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 64(%rax)	#, MEM[(struct XPVAV *)_171].xav_arylen
	.loc 1 1458 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movb	$1, 72(%rax)	#, MEM[(struct XPVAV *)_172].xav_flags
	.loc 1 1459 0
	jmp	.L176	#
.L189:
	.loc 1 1461 0
	call	S_new_xpvhv	#
	movq	%rax, (%rbx)	# D.22644, sv_14(D)->sv_any
	.loc 1 1462 0
	cmpq	$0, -56(%rbp)	#, pv
	je	.L198	#,
	.loc 1 1463 0
	movq	-56(%rbp), %rax	# pv, tmp305
	movq	%rax, %rdi	# tmp305,
	call	Perl_safesysfree	#
.L198:
	.loc 1 1464 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, (%rax)	#, MEM[(struct XPV *)_174].xpv_pv
	.loc 1 1465 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 8(%rax)	#, MEM[(struct XPVHV *)_175].xhv_fill
	.loc 1 1466 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 16(%rax)	#, MEM[(struct XPVHV *)_176].xhv_max
	.loc 1 1467 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 24(%rax)	#, MEM[(struct XPVHV *)_177].xhv_keys
	.loc 1 1468 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movl	$0, %eax	#, tmp306
	movq	%rax, 32(%rdx)	# tmp306, MEM[(struct XPVHV *)_178].xnv_nv
	.loc 1 1469 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-32(%rbp), %rdx	# magic, tmp307
	movq	%rdx, 40(%rax)	# tmp307, MEM[(struct XPVMG *)_179].xmg_magic
	.loc 1 1470 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-24(%rbp), %rdx	# stash, tmp308
	movq	%rdx, 48(%rax)	# tmp308, MEM[(struct XPVMG *)_180].xmg_stash
	.loc 1 1471 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	$0, 56(%rax)	#, MEM[(struct XPVHV *)_181].xhv_riter
	.loc 1 1472 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 64(%rax)	#, MEM[(struct XPVHV *)_182].xhv_eiter
	.loc 1 1473 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 72(%rax)	#, MEM[(struct XPVHV *)_183].xhv_pmroot
	.loc 1 1474 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 80(%rax)	#, MEM[(struct XPVHV *)_184].xhv_name
	.loc 1 1475 0
	jmp	.L176	#
.L190:
	.loc 1 1477 0
	call	S_new_xpvcv	#
	movq	%rax, (%rbx)	# D.22645, sv_14(D)->sv_any
	.loc 1 1478 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	$144, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.22635,
	call	memset	#
	.loc 1 1479 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp309
	movq	%rdx, (%rax)	# tmp309, MEM[(struct XPV *)_187].xpv_pv
	.loc 1 1480 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-64(%rbp), %edx	# cur, D.22636
	movq	%rdx, 8(%rax)	# D.22636, MEM[(struct XPV *)_188].xpv_cur
	.loc 1 1481 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-60(%rbp), %edx	# len, D.22636
	movq	%rdx, 16(%rax)	# D.22636, MEM[(struct XPV *)_190].xpv_len
	.loc 1 1482 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-48(%rbp), %rdx	# iv, tmp310
	movq	%rdx, 24(%rax)	# tmp310, MEM[(struct XPVIV *)_192].xiv_iv
	.loc 1 1483 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movq	-40(%rbp), %rax	# nv, tmp311
	movq	%rax, 32(%rdx)	# tmp311, MEM[(struct XPVNV *)_193].xnv_nv
	.loc 1 1484 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-32(%rbp), %rdx	# magic, tmp312
	movq	%rdx, 40(%rax)	# tmp312, MEM[(struct XPVMG *)_194].xmg_magic
	.loc 1 1485 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-24(%rbp), %rdx	# stash, tmp313
	movq	%rdx, 48(%rax)	# tmp313, MEM[(struct XPVMG *)_195].xmg_stash
	.loc 1 1486 0
	jmp	.L176	#
.L191:
	.loc 1 1488 0
	movl	$96, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, (%rbx)	# D.22635, sv_14(D)->sv_any
	.loc 1 1489 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp314
	movq	%rdx, (%rax)	# tmp314, MEM[(struct XPV *)_197].xpv_pv
	.loc 1 1490 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-64(%rbp), %edx	# cur, D.22636
	movq	%rdx, 8(%rax)	# D.22636, MEM[(struct XPV *)_198].xpv_cur
	.loc 1 1491 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-60(%rbp), %edx	# len, D.22636
	movq	%rdx, 16(%rax)	# D.22636, MEM[(struct XPV *)_200].xpv_len
	.loc 1 1492 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-48(%rbp), %rdx	# iv, tmp315
	movq	%rdx, 24(%rax)	# tmp315, MEM[(struct XPVIV *)_202].xiv_iv
	.loc 1 1493 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movq	-40(%rbp), %rax	# nv, tmp316
	movq	%rax, 32(%rdx)	# tmp316, MEM[(struct XPVNV *)_203].xnv_nv
	.loc 1 1494 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-32(%rbp), %rdx	# magic, tmp317
	movq	%rdx, 40(%rax)	# tmp317, MEM[(struct XPVMG *)_204].xmg_magic
	.loc 1 1495 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-24(%rbp), %rdx	# stash, tmp318
	movq	%rdx, 48(%rax)	# tmp318, MEM[(struct XPVMG *)_205].xmg_stash
	.loc 1 1496 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 56(%rax)	#, MEM[(struct XPVGV *)_206].xgv_gp
	.loc 1 1497 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 64(%rax)	#, MEM[(struct XPVGV *)_207].xgv_name
	.loc 1 1498 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 72(%rax)	#, MEM[(struct XPVGV *)_208].xgv_namelen
	.loc 1 1499 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$0, 80(%rax)	#, MEM[(struct XPVGV *)_209].xgv_stash
	.loc 1 1500 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movb	$0, 88(%rax)	#, MEM[(struct XPVGV *)_210].xgv_flags
	.loc 1 1501 0
	jmp	.L176	#
.L186:
	.loc 1 1503 0
	call	S_new_xpvbm	#
	movq	%rax, (%rbx)	# D.22646, sv_14(D)->sv_any
	.loc 1 1504 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp319
	movq	%rdx, (%rax)	# tmp319, MEM[(struct XPV *)_212].xpv_pv
	.loc 1 1505 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-64(%rbp), %edx	# cur, D.22636
	movq	%rdx, 8(%rax)	# D.22636, MEM[(struct XPV *)_213].xpv_cur
	.loc 1 1506 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-60(%rbp), %edx	# len, D.22636
	movq	%rdx, 16(%rax)	# D.22636, MEM[(struct XPV *)_215].xpv_len
	.loc 1 1507 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-48(%rbp), %rdx	# iv, tmp320
	movq	%rdx, 24(%rax)	# tmp320, MEM[(struct XPVIV *)_217].xiv_iv
	.loc 1 1508 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movq	-40(%rbp), %rax	# nv, tmp321
	movq	%rax, 32(%rdx)	# tmp321, MEM[(struct XPVNV *)_218].xnv_nv
	.loc 1 1509 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-32(%rbp), %rdx	# magic, tmp322
	movq	%rdx, 40(%rax)	# tmp322, MEM[(struct XPVMG *)_219].xmg_magic
	.loc 1 1510 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-24(%rbp), %rdx	# stash, tmp323
	movq	%rdx, 48(%rax)	# tmp323, MEM[(struct XPVMG *)_220].xmg_stash
	.loc 1 1511 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movb	$0, 62(%rax)	#, MEM[(struct XPVBM *)_221].xbm_rare
	.loc 1 1512 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	$0, 56(%rax)	#, MEM[(struct XPVBM *)_222].xbm_useful
	.loc 1 1513 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movw	$0, 60(%rax)	#, MEM[(struct XPVBM *)_223].xbm_previous
	.loc 1 1514 0
	jmp	.L176	#
.L192:
	.loc 1 1516 0
	movl	$152, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, (%rbx)	# D.22635, sv_14(D)->sv_any
	.loc 1 1517 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	$152, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.22635,
	call	memset	#
	.loc 1 1518 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp324
	movq	%rdx, (%rax)	# tmp324, MEM[(struct XPV *)_226].xpv_pv
	.loc 1 1519 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-64(%rbp), %edx	# cur, D.22636
	movq	%rdx, 8(%rax)	# D.22636, MEM[(struct XPV *)_227].xpv_cur
	.loc 1 1520 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-60(%rbp), %edx	# len, D.22636
	movq	%rdx, 16(%rax)	# D.22636, MEM[(struct XPV *)_229].xpv_len
	.loc 1 1521 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-48(%rbp), %rdx	# iv, tmp325
	movq	%rdx, 24(%rax)	# tmp325, MEM[(struct XPVIV *)_231].xiv_iv
	.loc 1 1522 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movq	-40(%rbp), %rax	# nv, tmp326
	movq	%rax, 32(%rdx)	# tmp326, MEM[(struct XPVNV *)_232].xnv_nv
	.loc 1 1523 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-32(%rbp), %rdx	# magic, tmp327
	movq	%rdx, 40(%rax)	# tmp327, MEM[(struct XPVMG *)_233].xmg_magic
	.loc 1 1524 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-24(%rbp), %rdx	# stash, tmp328
	movq	%rdx, 48(%rax)	# tmp328, MEM[(struct XPVMG *)_234].xmg_stash
	.loc 1 1525 0
	jmp	.L176	#
.L193:
	.loc 1 1527 0
	movl	$168, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, (%rbx)	# D.22635, sv_14(D)->sv_any
	.loc 1 1528 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	$168, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.22635,
	call	memset	#
	.loc 1 1529 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-56(%rbp), %rdx	# pv, tmp329
	movq	%rdx, (%rax)	# tmp329, MEM[(struct XPV *)_237].xpv_pv
	.loc 1 1530 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-64(%rbp), %edx	# cur, D.22636
	movq	%rdx, 8(%rax)	# D.22636, MEM[(struct XPV *)_238].xpv_cur
	.loc 1 1531 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movl	-60(%rbp), %edx	# len, D.22636
	movq	%rdx, 16(%rax)	# D.22636, MEM[(struct XPV *)_240].xpv_len
	.loc 1 1532 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-48(%rbp), %rdx	# iv, tmp330
	movq	%rdx, 24(%rax)	# tmp330, MEM[(struct XPVIV *)_242].xiv_iv
	.loc 1 1533 0
	movq	(%rbx), %rdx	# sv_14(D)->sv_any, D.22635
	movq	-40(%rbp), %rax	# nv, tmp331
	movq	%rax, 32(%rdx)	# tmp331, MEM[(struct XPVNV *)_243].xnv_nv
	.loc 1 1534 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-32(%rbp), %rdx	# magic, tmp332
	movq	%rdx, 40(%rax)	# tmp332, MEM[(struct XPVMG *)_244].xmg_magic
	.loc 1 1535 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	-24(%rbp), %rdx	# stash, tmp333
	movq	%rdx, 48(%rax)	# tmp333, MEM[(struct XPVMG *)_245].xmg_stash
	.loc 1 1536 0
	movq	(%rbx), %rax	# sv_14(D)->sv_any, D.22635
	movq	$60, 96(%rax)	#, MEM[(struct XPVIO *)_246].xio_page_len
	.loc 1 1537 0
	nop
.L176:
	.loc 1 1539 0
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	movb	$0, %al	#, D.22633
	movl	%eax, 12(%rbx)	# D.22633, sv_14(D)->sv_flags
	.loc 1 1540 0
	movl	12(%rbx), %eax	# sv_14(D)->sv_flags, D.22633
	orl	-68(%rbp), %eax	# mt, D.22633
	movl	%eax, 12(%rbx)	# D.22633, sv_14(D)->sv_flags
	.loc 1 1541 0
	movl	$1, %eax	#, D.22632
.L157:
	.loc 1 1542 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE49:
	.size	Perl_sv_upgrade, .-Perl_sv_upgrade
	.globl	Perl_sv_backoff
	.type	Perl_sv_backoff, @function
Perl_sv_backoff:
.LFB50:
	.loc 1 1555 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	.loc 1 1557 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22649
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_2].xiv_iv, D.22650
	testq	%rax, %rax	# D.22650
	je	.L201	#,
.LBB4:
	.loc 1 1558 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22649
	movq	(%rax), %rax	# MEM[(struct XPV *)_4].xpv_pv, tmp88
	movq	%rax, -24(%rbp)	# tmp88, s
	.loc 1 1559 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22649
	movq	(%rbx), %rdx	# sv_1(D)->sv_any, D.22649
	movq	16(%rdx), %rcx	# MEM[(struct XPV *)_7].xpv_len, D.22651
	movq	(%rbx), %rdx	# sv_1(D)->sv_any, D.22649
	movq	24(%rdx), %rdx	# MEM[(struct XPVIV *)_9].xiv_iv, D.22650
	addq	%rcx, %rdx	# D.22651, D.22651
	movq	%rdx, 16(%rax)	# D.22651, MEM[(struct XPV *)_6].xpv_len
	.loc 1 1560 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22649
	movq	(%rbx), %rdx	# sv_1(D)->sv_any, D.22649
	movq	(%rdx), %rcx	# MEM[(struct XPV *)_14].xpv_pv, D.22652
	movq	(%rbx), %rdx	# sv_1(D)->sv_any, D.22649
	movq	24(%rdx), %rdx	# MEM[(struct XPVIV *)_16].xiv_iv, D.22650
	negq	%rdx	# D.22653
	addq	%rcx, %rdx	# D.22652, D.22652
	movq	%rdx, (%rax)	# D.22652, MEM[(struct XPV *)_13].xpv_pv
	.loc 1 1561 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22649
	movq	$0, 24(%rax)	#, MEM[(struct XPVIV *)_21].xiv_iv
	.loc 1 1562 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22649
	movq	8(%rax), %rax	# MEM[(struct XPV *)_22].xpv_cur, D.22651
	leaq	1(%rax), %rdx	#, D.22651
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22649
	movq	(%rax), %rax	# MEM[(struct XPV *)_25].xpv_pv, D.22652
	movq	-24(%rbp), %rcx	# s, tmp89
	movq	%rcx, %rsi	# tmp89,
	movq	%rax, %rdi	# D.22652,
	call	memmove	#
.L201:
.LBE4:
	.loc 1 1564 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22654
	andl	$-2097153, %eax	#, D.22654
	movl	%eax, 12(%rbx)	# D.22654, sv_1(D)->sv_flags
	.loc 1 1565 0
	movl	$0, %eax	#, D.22655
	.loc 1 1566 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE50:
	.size	Perl_sv_backoff, .-Perl_sv_backoff
	.globl	Perl_sv_grow
	.type	Perl_sv_grow, @function
Perl_sv_grow:
.LFB51:
	.loc 1 1580 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %r13	# newlen, newlen
	.loc 1 1592 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22656
	andl	$524288, %eax	#, D.22656
	testl	%eax, %eax	# D.22656
	je	.L204	#,
	.loc 1 1593 0
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_unref	#
.L204:
	.loc 1 1594 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22656
	movzbl	%al, %eax	# D.22656, D.22656
	cmpl	$3, %eax	#, D.22656
	ja	.L205	#,
	.loc 1 1595 0
	movl	$4, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	.loc 1 1596 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	(%rax), %r12	# MEM[(struct XPV *)_11].xpv_pv, s
	jmp	.L206	#
.L205:
	.loc 1 1598 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22656
	andl	$2097152, %eax	#, D.22656
	testl	%eax, %eax	# D.22656
	je	.L207	#,
	.loc 1 1599 0
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	.loc 1 1600 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	(%rax), %r12	# MEM[(struct XPV *)_16].xpv_pv, s
	.loc 1 1601 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	16(%rax), %rax	# MEM[(struct XPV *)_18].xpv_len, D.22658
	cmpq	%r13, %rax	# newlen, D.22658
	jae	.L206	#,
	.loc 1 1602 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	8(%rax), %rax	# MEM[(struct XPV *)_20].xpv_cur, D.22658
	movq	%r13, %rdx	# newlen, D.22658
	subq	%rax, %rdx	# D.22658, D.22658
	movq	%rdx, %rax	# D.22658, tmp102
	salq	$2, %rax	#, tmp102
	addq	%rdx, %rax	# D.22658, tmp102
	addq	%rax, %rax	# tmp103
	addq	%rax, %r13	# D.22658, newlen
	jmp	.L206	#
.L207:
	.loc 1 1609 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	(%rax), %r12	# MEM[(struct XPV *)_25].xpv_pv, s
.L206:
	.loc 1 1611 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	16(%rax), %rax	# MEM[(struct XPV *)_27].xpv_len, D.22658
	cmpq	%r13, %rax	# newlen, D.22658
	jae	.L209	#,
	.loc 1 1612 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	16(%rax), %rax	# MEM[(struct XPV *)_29].xpv_len, D.22658
	testq	%rax, %rax	# D.22658
	je	.L210	#,
	.loc 1 1612 0 is_stmt 0 discriminator 1
	testq	%r12, %r12	# s
	je	.L210	#,
	.loc 1 1620 0 is_stmt 1
	movq	%r13, %rsi	# newlen,
	movq	%r12, %rdi	# s,
	call	Perl_safesysrealloc	#
	movq	%rax, %r12	#, s
	jmp	.L211	#
.L210:
	.loc 1 1625 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22656
	andl	$8388608, %eax	#, D.22656
	testl	%eax, %eax	# D.22656
	je	.L212	#,
	.loc 1 1625 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22656
	andl	$1048576, %eax	#, D.22656
	testl	%eax, %eax	# D.22656
	je	.L212	#,
	.loc 1 1626 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22656
	andl	$-1048577, %eax	#, D.22656
	movl	%eax, 12(%rbx)	# D.22656, sv_6(D)->sv_flags
	.loc 1 1627 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22656
	andl	$-8388609, %eax	#, D.22656
	movl	%eax, 12(%rbx)	# D.22656, sv_6(D)->sv_flags
.L212:
	.loc 1 1629 0
	movq	%r13, %rdi	# newlen,
	call	Perl_safesysmalloc	#
	movq	%rax, %r12	#, s
	.loc 1 1630 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	(%rax), %rax	# MEM[(struct XPV *)_41].xpv_pv, D.22659
	testq	%rax, %rax	# D.22659
	je	.L211	#,
	.loc 1 1630 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	8(%rax), %rax	# MEM[(struct XPV *)_43].xpv_cur, D.22658
	testq	%rax, %rax	# D.22658
	je	.L211	#,
	.loc 1 1631 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	8(%rax), %rax	# MEM[(struct XPV *)_45].xpv_cur, D.22658
	cmpq	%r13, %rax	# newlen, D.22658
	cmova	%r13, %rax	# D.22658,, newlen, D.22658
	movq	%rax, %rdx	# D.22658, D.22658
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	(%rax), %rax	# MEM[(struct XPV *)_48].xpv_pv, D.22659
	movq	%rax, %rsi	# D.22659,
	movq	%r12, %rdi	# s,
	call	memmove	#
.L211:
	.loc 1 1634 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	%r12, (%rax)	# s, MEM[(struct XPV *)_50].xpv_pv
	.loc 1 1635 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22657
	movq	%r13, 16(%rax)	# newlen, MEM[(struct XPV *)_51].xpv_len
.L209:
	.loc 1 1637 0
	movq	%r12, %rax	# s, D.22659
	.loc 1 1638 0
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE51:
	.size	Perl_sv_grow, .-Perl_sv_grow
	.section	.rodata
	.align 8
.LC5:
	.string	"Can't coerce %s to integer in %s"
	.text
	.globl	Perl_sv_setiv
	.type	Perl_sv_setiv, @function
Perl_sv_setiv:
.LFB52:
	.loc 1 1651 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, -24(%rbp)	# i, i
	.loc 1 1652 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22661
	andl	$9961472, %eax	#, D.22661
	testl	%eax, %eax	# D.22661
	je	.L215	#,
	.loc 1 1652 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L215:
	.loc 1 1653 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22661
	movzbl	%al, %eax	# D.22661, D.22661
	cmpl	$15, %eax	#, D.22661
	ja	.L216	#,
	movl	%eax, %eax	# D.22661, tmp85
	movq	.L218(,%rax,8), %rax	#, tmp86
	jmp	*%rax	# tmp86
	.section	.rodata
	.align 8
	.align 4
.L218:
	.quad	.L217
	.quad	.L216
	.quad	.L219
	.quad	.L220
	.quad	.L220
	.quad	.L216
	.quad	.L216
	.quad	.L216
	.quad	.L216
	.quad	.L216
	.quad	.L221
	.quad	.L221
	.quad	.L221
	.quad	.L221
	.quad	.L221
	.quad	.L221
	.text
.L217:
	.loc 1 1655 0
	movl	$1, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	.loc 1 1656 0
	jmp	.L216	#
.L219:
	.loc 1 1658 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	.loc 1 1659 0
	jmp	.L216	#
.L220:
	.loc 1 1662 0
	movl	$5, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	.loc 1 1663 0
	jmp	.L216	#
.L221:
	.loc 1 1672 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.67
	movzwl	32(%rax), %eax	# PL_op.67_7->op_type, D.22662
	.loc 1 1671 0
	cmpw	$351, %ax	#, D.22662
	jne	.L222	#,
	.loc 1 1672 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.68
	.loc 1 1671 0
	movq	%rax, %rdi	# PL_op.68,
	call	Perl_custom_op_desc	#
	movq	%rax, %r12	#, iftmp.66
	jmp	.L223	#
.L222:
	.loc 1 1672 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.69
	movzwl	32(%rax), %eax	# PL_op.69_11->op_type, D.22662
	movzwl	%ax, %eax	# D.22662, D.22663
	.loc 1 1671 0 discriminator 1
	cltq
	movq	PL_op_desc(,%rax,8), %r12	# PL_op_desc, iftmp.66
.L223:
	.loc 1 1671 0 is_stmt 0 discriminator 2
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_reftype	#
	movq	%r12, %rdx	# iftmp.66,
	movq	%rax, %rsi	# D.22664,
	movl	$.LC5, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L216:
	.loc 1 1674 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22661
	andl	$1223753727, %eax	#, D.22661
	movl	%eax, 12(%rbx)	# D.22661, sv_2(D)->sv_flags
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22661
	andl	$2097152, %eax	#, D.22661
	testl	%eax, %eax	# D.22661
	je	.L225	#,
	.loc 1 1674 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22663
	je	.L225	#,
	.loc 1 1674 0
	nop
.L225:
	.loc 1 1674 0 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22661
	orl	$16842752, %eax	#, D.22661
	movl	%eax, 12(%rbx)	# D.22661, sv_2(D)->sv_flags
	.loc 1 1675 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22665
	movq	-24(%rbp), %rdx	# i, tmp88
	movq	%rdx, 24(%rax)	# tmp88, MEM[(struct XPVIV *)_25].xiv_iv
	.loc 1 1676 0 discriminator 3
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.71
	testb	%al, %al	# PL_tainting.71
	je	.L214	#,
	.loc 1 1676 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.72
	testb	%al, %al	# PL_tainted.72
	je	.L214	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.73
	testb	%al, %al	# PL_tainting.73
	je	.L214	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_taint	#
.L214:
	.loc 1 1677 0 is_stmt 1
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE52:
	.size	Perl_sv_setiv, .-Perl_sv_setiv
	.globl	Perl_sv_setiv_mg
	.type	Perl_sv_setiv_mg, @function
Perl_sv_setiv_mg:
.LFB53:
	.loc 1 1689 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, -24(%rbp)	# i, i
	.loc 1 1690 0
	movq	-24(%rbp), %rax	# i, tmp62
	movq	%rax, %rsi	# tmp62,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setiv	#
	.loc 1 1691 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22667
	andl	$16384, %eax	#, D.22667
	testl	%eax, %eax	# D.22667
	je	.L227	#,
	.loc 1 1691 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_set	#
.L227:
	.loc 1 1692 0 is_stmt 1
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE53:
	.size	Perl_sv_setiv_mg, .-Perl_sv_setiv_mg
	.globl	Perl_sv_setuv
	.type	Perl_sv_setuv, @function
Perl_sv_setuv:
.LFB54:
	.loc 1 1705 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, -24(%rbp)	# u, u
	.loc 1 1714 0
	movq	-24(%rbp), %rax	# u, u.74
	testq	%rax, %rax	# u.74
	js	.L230	#,
	.loc 1 1715 0
	movq	-24(%rbp), %rax	# u, u.75
	movq	%rax, %rsi	# u.75,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setiv	#
	.loc 1 1716 0
	jmp	.L229	#
.L230:
	.loc 1 1718 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setiv	#
	.loc 1 1719 0
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22668
	orl	$-2147483648, %eax	#, D.22668
	movl	%eax, 12(%rbx)	# D.22668, sv_4(D)->sv_flags
	.loc 1 1720 0
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.22669
	movq	-24(%rbp), %rdx	# u, tmp65
	movq	%rdx, 24(%rax)	# tmp65, MEM[(struct XPVUV *)_7].xuv_uv
.L229:
	.loc 1 1721 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE54:
	.size	Perl_sv_setuv, .-Perl_sv_setuv
	.globl	Perl_sv_setuv_mg
	.type	Perl_sv_setuv_mg, @function
Perl_sv_setuv_mg:
.LFB55:
	.loc 1 1733 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, -24(%rbp)	# u, u
	.loc 1 1742 0
	movq	-24(%rbp), %rax	# u, u.76
	testq	%rax, %rax	# u.76
	js	.L233	#,
	.loc 1 1743 0
	movq	-24(%rbp), %rax	# u, u.77
	movq	%rax, %rsi	# u.77,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setiv	#
	jmp	.L234	#
.L233:
	.loc 1 1745 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setiv	#
	.loc 1 1746 0
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22670
	orl	$-2147483648, %eax	#, D.22670
	movl	%eax, 12(%rbx)	# D.22670, sv_4(D)->sv_flags
	.loc 1 1747 0
	movq	-24(%rbp), %rax	# u, tmp66
	movq	%rax, %rsi	# tmp66,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setuv	#
.L234:
	.loc 1 1749 0
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22670
	andl	$16384, %eax	#, D.22670
	testl	%eax, %eax	# D.22670
	je	.L232	#,
	.loc 1 1749 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_set	#
.L232:
	.loc 1 1750 0 is_stmt 1
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE55:
	.size	Perl_sv_setuv_mg, .-Perl_sv_setuv_mg
	.section	.rodata
	.align 8
.LC6:
	.string	"Can't coerce %s to number in %s"
	.text
	.globl	Perl_sv_setnv
	.type	Perl_sv_setnv, @function
Perl_sv_setnv:
.LFB56:
	.loc 1 1763 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	movsd	%xmm0, -24(%rbp)	# num, num
	.loc 1 1764 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22671
	andl	$9961472, %eax	#, D.22671
	testl	%eax, %eax	# D.22671
	je	.L237	#,
	.loc 1 1764 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L237:
	.loc 1 1765 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22671
	movzbl	%al, %eax	# D.22671, D.22671
	cmpl	$15, %eax	#, D.22671
	ja	.L238	#,
	movl	%eax, %eax	# D.22671, tmp85
	movq	.L240(,%rax,8), %rax	#, tmp86
	jmp	*%rax	# tmp86
	.section	.rodata
	.align 8
	.align 4
.L240:
	.quad	.L239
	.quad	.L239
	.quad	.L238
	.quad	.L241
	.quad	.L241
	.quad	.L241
	.quad	.L238
	.quad	.L238
	.quad	.L238
	.quad	.L238
	.quad	.L242
	.quad	.L242
	.quad	.L242
	.quad	.L242
	.quad	.L242
	.quad	.L242
	.text
.L239:
	.loc 1 1768 0
	movl	$2, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	.loc 1 1769 0
	jmp	.L238	#
.L241:
	.loc 1 1773 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	.loc 1 1774 0
	jmp	.L238	#
.L242:
	.loc 1 1783 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.79
	movzwl	32(%rax), %eax	# PL_op.79_7->op_type, D.22672
	.loc 1 1782 0
	cmpw	$351, %ax	#, D.22672
	jne	.L243	#,
	.loc 1 1783 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.80
	.loc 1 1782 0
	movq	%rax, %rdi	# PL_op.80,
	call	Perl_custom_op_name	#
	movq	%rax, %r12	#, iftmp.78
	jmp	.L244	#
.L243:
	.loc 1 1783 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.81
	movzwl	32(%rax), %eax	# PL_op.81_11->op_type, D.22672
	movzwl	%ax, %eax	# D.22672, D.22673
	.loc 1 1782 0 discriminator 1
	cltq
	movq	PL_op_name(,%rax,8), %r12	# PL_op_name, iftmp.78
.L244:
	.loc 1 1782 0 is_stmt 0 discriminator 2
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_reftype	#
	movq	%r12, %rdx	# iftmp.78,
	movq	%rax, %rsi	# D.22674,
	movl	$.LC6, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L238:
	.loc 1 1785 0 is_stmt 1
	movq	(%rbx), %rdx	# sv_2(D)->sv_any, D.22675
	movq	-24(%rbp), %rax	# num, tmp88
	movq	%rax, 32(%rdx)	# tmp88, MEM[(struct XPVNV *)_16].xnv_nv
	.loc 1 1786 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22671
	andl	$1223753727, %eax	#, D.22671
	movl	%eax, 12(%rbx)	# D.22671, sv_2(D)->sv_flags
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22671
	andl	$2097152, %eax	#, D.22671
	testl	%eax, %eax	# D.22671
	je	.L246	#,
	.loc 1 1786 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22673
	je	.L246	#,
	.loc 1 1786 0
	nop
.L246:
	.loc 1 1786 0 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22671
	orl	$33685504, %eax	#, D.22671
	movl	%eax, 12(%rbx)	# D.22671, sv_2(D)->sv_flags
	.loc 1 1787 0 is_stmt 1 discriminator 3
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.83
	testb	%al, %al	# PL_tainting.83
	je	.L236	#,
	.loc 1 1787 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.84
	testb	%al, %al	# PL_tainted.84
	je	.L236	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.85
	testb	%al, %al	# PL_tainting.85
	je	.L236	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_taint	#
.L236:
	.loc 1 1788 0 is_stmt 1
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE56:
	.size	Perl_sv_setnv, .-Perl_sv_setnv
	.globl	Perl_sv_setnv_mg
	.type	Perl_sv_setnv_mg, @function
Perl_sv_setnv_mg:
.LFB57:
	.loc 1 1800 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movsd	%xmm0, -24(%rbp)	# num, num
	.loc 1 1801 0
	movq	-24(%rbp), %rax	# num, tmp62
	movq	%rax, -32(%rbp)	# tmp62, %sfp
	movsd	-32(%rbp), %xmm0	# %sfp,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setnv	#
	.loc 1 1802 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22677
	andl	$16384, %eax	#, D.22677
	testl	%eax, %eax	# D.22677
	je	.L248	#,
	.loc 1 1802 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_set	#
.L248:
	.loc 1 1803 0 is_stmt 1
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE57:
	.size	Perl_sv_setnv_mg, .-Perl_sv_setnv_mg
	.section	.rodata
	.align 8
.LC7:
	.string	"Argument \"%s\" isn't numeric in %s"
.LC8:
	.string	"Argument \"%s\" isn't numeric"
	.text
	.type	S_not_a_number, @function
S_not_a_number:
.LFB58:
	.loc 1 1811 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$160, %rsp	#,
	movq	%rdi, -152(%rbp)	# sv, sv
	.loc 1 1811 0
	movq	%fs:40, %rax	#, tmp173
	movq	%rax, -8(%rbp)	# tmp173, D.22690
	xorl	%eax, %eax	# tmp173
	.loc 1 1816 0
	movq	-152(%rbp), %rax	# sv, tmp122
	movl	12(%rax), %eax	# sv_10(D)->sv_flags, D.22679
	andl	$536870912, %eax	#, D.22679
	testl	%eax, %eax	# D.22679
	je	.L251	#,
	.loc 1 1816 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.86
	movzbl	37(%rax), %eax	# PL_curcop.86_13->op_private, D.22680
	movzbl	%al, %eax	# D.22680, D.22681
	andl	$8, %eax	#, D.22681
	testl	%eax, %eax	# D.22681
	jne	.L251	#,
	.loc 1 1817 0 is_stmt 1
	movl	$0, %esi	#,
	movl	$.LC1, %edi	#,
	call	Perl_newSVpv	#
	movq	%rax, %rdi	# D.22682,
	call	Perl_sv_2mortal	#
	movq	%rax, -104(%rbp)	# tmp123, dsv
	.loc 1 1818 0
	movq	-152(%rbp), %rsi	# sv, tmp124
	movq	-104(%rbp), %rax	# dsv, tmp125
	movl	$0, %ecx	#,
	movl	$10, %edx	#,
	movq	%rax, %rdi	# tmp125,
	call	Perl_sv_uni_display	#
	movq	%rax, -128(%rbp)	# tmp126, pv
	jmp	.L252	#
.L251:
.LBB5:
	.loc 1 1820 0
	leaq	-80(%rbp), %rax	#, tmp127
	movq	%rax, -120(%rbp)	# tmp127, d
	.loc 1 1821 0
	leaq	-80(%rbp), %rax	#, tmp128
	addq	$56, %rax	#, tmp129
	movq	%rax, -96(%rbp)	# tmp129, limit
	.loc 1 1826 0
	movq	-152(%rbp), %rax	# sv, tmp130
	movq	(%rax), %rax	# sv_10(D)->sv_any, D.22683
	movq	(%rax), %rax	# MEM[(struct XPV *)_22].xpv_pv, tmp131
	movq	%rax, -112(%rbp)	# tmp131, s
	movq	-152(%rbp), %rax	# sv, tmp132
	movq	(%rax), %rax	# sv_10(D)->sv_any, D.22683
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_24].xpv_cur, D.22684
	movq	-112(%rbp), %rax	# s, tmp136
	addq	%rdx, %rax	# D.22684, tmp135
	movq	%rax, -88(%rbp)	# tmp135, end
	jmp	.L253	#
.L266:
.LBB6:
	.loc 1 1827 0
	movq	-112(%rbp), %rax	# s, tmp137
	movzbl	(%rax), %eax	# *s_6, D.22685
	movsbl	%al, %eax	# D.22685, D.22681
	andl	$255, %eax	#, tmp138
	movl	%eax, -132(%rbp)	# tmp138, ch
	.loc 1 1828 0
	movl	-132(%rbp), %eax	# ch, tmp139
	andl	$128, %eax	#, D.22681
	testl	%eax, %eax	# D.22681
	je	.L254	#,
	.loc 1 1828 0 is_stmt 0 discriminator 1
	movl	-132(%rbp), %eax	# ch, tmp140
	andl	$-128, %eax	#, D.22681
	testl	%eax, %eax	# D.22681
	jne	.L255	#,
	call	__ctype_b_loc	#
	movq	(%rax), %rax	# *_32, D.22687
	movl	-132(%rbp), %edx	# ch, tmp141
	movslq	%edx, %rdx	# tmp141, D.22684
	addq	%rdx, %rdx	# D.22684
	addq	%rdx, %rax	# D.22684, D.22687
	movzwl	(%rax), %eax	# *_36, D.22688
	movzwl	%ax, %eax	# D.22688, D.22681
	andl	$16384, %eax	#, D.22681
	testl	%eax, %eax	# D.22681
	jne	.L254	#,
.L255:
	.loc 1 1829 0 is_stmt 1
	movq	-120(%rbp), %rax	# d, d.87
	leaq	1(%rax), %rdx	#, tmp142
	movq	%rdx, -120(%rbp)	# tmp142, d
	movb	$77, (%rax)	#, *d.87_40
	.loc 1 1830 0
	movq	-120(%rbp), %rax	# d, d.88
	leaq	1(%rax), %rdx	#, tmp143
	movq	%rdx, -120(%rbp)	# tmp143, d
	movb	$45, (%rax)	#, *d.88_42
	.loc 1 1831 0
	andl	$127, -132(%rbp)	#, ch
.L254:
	.loc 1 1833 0
	cmpl	$10, -132(%rbp)	#, ch
	jne	.L256	#,
	.loc 1 1834 0
	movq	-120(%rbp), %rax	# d, d.89
	leaq	1(%rax), %rdx	#, tmp144
	movq	%rdx, -120(%rbp)	# tmp144, d
	movb	$92, (%rax)	#, *d.89_45
	.loc 1 1835 0
	movq	-120(%rbp), %rax	# d, d.90
	leaq	1(%rax), %rdx	#, tmp145
	movq	%rdx, -120(%rbp)	# tmp145, d
	movb	$110, (%rax)	#, *d.90_47
	jmp	.L257	#
.L256:
	.loc 1 1837 0
	cmpl	$13, -132(%rbp)	#, ch
	jne	.L258	#,
	.loc 1 1838 0
	movq	-120(%rbp), %rax	# d, d.91
	leaq	1(%rax), %rdx	#, tmp146
	movq	%rdx, -120(%rbp)	# tmp146, d
	movb	$92, (%rax)	#, *d.91_49
	.loc 1 1839 0
	movq	-120(%rbp), %rax	# d, d.92
	leaq	1(%rax), %rdx	#, tmp147
	movq	%rdx, -120(%rbp)	# tmp147, d
	movb	$114, (%rax)	#, *d.92_51
	jmp	.L257	#
.L258:
	.loc 1 1841 0
	cmpl	$12, -132(%rbp)	#, ch
	jne	.L259	#,
	.loc 1 1842 0
	movq	-120(%rbp), %rax	# d, d.93
	leaq	1(%rax), %rdx	#, tmp148
	movq	%rdx, -120(%rbp)	# tmp148, d
	movb	$92, (%rax)	#, *d.93_53
	.loc 1 1843 0
	movq	-120(%rbp), %rax	# d, d.94
	leaq	1(%rax), %rdx	#, tmp149
	movq	%rdx, -120(%rbp)	# tmp149, d
	movb	$102, (%rax)	#, *d.94_55
	jmp	.L257	#
.L259:
	.loc 1 1845 0
	cmpl	$92, -132(%rbp)	#, ch
	jne	.L260	#,
	.loc 1 1846 0
	movq	-120(%rbp), %rax	# d, d.95
	leaq	1(%rax), %rdx	#, tmp150
	movq	%rdx, -120(%rbp)	# tmp150, d
	movb	$92, (%rax)	#, *d.95_57
	.loc 1 1847 0
	movq	-120(%rbp), %rax	# d, d.96
	leaq	1(%rax), %rdx	#, tmp151
	movq	%rdx, -120(%rbp)	# tmp151, d
	movb	$92, (%rax)	#, *d.96_59
	jmp	.L257	#
.L260:
	.loc 1 1849 0
	cmpl	$0, -132(%rbp)	#, ch
	jne	.L261	#,
	.loc 1 1850 0
	movq	-120(%rbp), %rax	# d, d.97
	leaq	1(%rax), %rdx	#, tmp152
	movq	%rdx, -120(%rbp)	# tmp152, d
	movb	$92, (%rax)	#, *d.97_61
	.loc 1 1851 0
	movq	-120(%rbp), %rax	# d, d.98
	leaq	1(%rax), %rdx	#, tmp153
	movq	%rdx, -120(%rbp)	# tmp153, d
	movb	$48, (%rax)	#, *d.98_63
	jmp	.L257	#
.L261:
	.loc 1 1853 0
	movl	-132(%rbp), %eax	# ch, tmp154
	andl	$-128, %eax	#, D.22681
	testl	%eax, %eax	# D.22681
	jne	.L262	#,
	.loc 1 1853 0 is_stmt 0 discriminator 1
	call	__ctype_b_loc	#
	movq	(%rax), %rax	# *_66, D.22687
	movl	-132(%rbp), %edx	# ch, tmp155
	movslq	%edx, %rdx	# tmp155, D.22684
	addq	%rdx, %rdx	# D.22684
	addq	%rdx, %rax	# D.22684, D.22687
	movzwl	(%rax), %eax	# *_70, D.22688
	movzwl	%ax, %eax	# D.22688, D.22681
	andl	$16384, %eax	#, D.22681
	testl	%eax, %eax	# D.22681
	je	.L262	#,
	.loc 1 1854 0 is_stmt 1
	movq	-120(%rbp), %rax	# d, d.99
	leaq	1(%rax), %rdx	#, tmp156
	movq	%rdx, -120(%rbp)	# tmp156, d
	movl	-132(%rbp), %edx	# ch, tmp157
	movb	%dl, (%rax)	# D.22685, *d.99_74
	jmp	.L257	#
.L262:
	.loc 1 1856 0
	movq	-120(%rbp), %rax	# d, d.100
	leaq	1(%rax), %rdx	#, tmp158
	movq	%rdx, -120(%rbp)	# tmp158, d
	movb	$94, (%rax)	#, *d.100_77
	.loc 1 1857 0
	movq	-120(%rbp), %rax	# d, d.101
	leaq	1(%rax), %rdx	#, tmp159
	movq	%rdx, -120(%rbp)	# tmp159, d
	cmpl	$96, -132(%rbp)	#, ch
	jle	.L263	#,
	.loc 1 1857 0 is_stmt 0 discriminator 1
	cmpl	$122, -132(%rbp)	#, ch
	jg	.L263	#,
	movl	-132(%rbp), %edx	# ch, tmp160
	subl	$32, %edx	#, D.22689
	xorl	$64, %edx	#, iftmp.102
	jmp	.L264	#
.L263:
	.loc 1 1857 0 discriminator 2
	movl	-132(%rbp), %edx	# ch, tmp161
	xorl	$64, %edx	#, iftmp.102
.L264:
	.loc 1 1857 0 discriminator 3
	movb	%dl, (%rax)	# iftmp.102, *d.101_79
.L257:
.LBE6:
	.loc 1 1826 0 is_stmt 1
	addq	$1, -112(%rbp)	#, s
.L253:
	.loc 1 1826 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# s, tmp162
	cmpq	-88(%rbp), %rax	# end, tmp162
	jae	.L265	#,
	.loc 1 1826 0 discriminator 2
	movq	-120(%rbp), %rax	# d, tmp163
	cmpq	-96(%rbp), %rax	# limit, tmp163
	jb	.L266	#,
.L265:
	.loc 1 1860 0 is_stmt 1
	movq	-112(%rbp), %rax	# s, tmp164
	cmpq	-88(%rbp), %rax	# end, tmp164
	jae	.L267	#,
	.loc 1 1861 0
	movq	-120(%rbp), %rax	# d, d.103
	leaq	1(%rax), %rdx	#, tmp165
	movq	%rdx, -120(%rbp)	# tmp165, d
	movb	$46, (%rax)	#, *d.103_88
	.loc 1 1862 0
	movq	-120(%rbp), %rax	# d, d.104
	leaq	1(%rax), %rdx	#, tmp166
	movq	%rdx, -120(%rbp)	# tmp166, d
	movb	$46, (%rax)	#, *d.104_90
	.loc 1 1863 0
	movq	-120(%rbp), %rax	# d, d.105
	leaq	1(%rax), %rdx	#, tmp167
	movq	%rdx, -120(%rbp)	# tmp167, d
	movb	$46, (%rax)	#, *d.105_92
.L267:
	.loc 1 1865 0
	movq	-120(%rbp), %rax	# d, tmp168
	movb	$0, (%rax)	#, *d_5
	.loc 1 1866 0
	leaq	-80(%rbp), %rax	#, tmp169
	movq	%rax, -128(%rbp)	# tmp169, pv
.L252:
.LBE5:
	.loc 1 1869 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.106
	testq	%rax, %rax	# PL_op.106
	je	.L268	#,
	.loc 1 1872 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.108
	movzwl	32(%rax), %eax	# PL_op.108_96->op_type, D.22688
	.loc 1 1870 0
	cmpw	$351, %ax	#, D.22688
	jne	.L269	#,
	.loc 1 1872 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.109
	.loc 1 1870 0
	movq	%rax, %rdi	# PL_op.109,
	call	Perl_custom_op_desc	#
	jmp	.L270	#
.L269:
	.loc 1 1872 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.110
	movzwl	32(%rax), %eax	# PL_op.110_100->op_type, D.22688
	movzwl	%ax, %eax	# D.22688, D.22681
	.loc 1 1870 0 discriminator 1
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.107
.L270:
	movq	-128(%rbp), %rdx	# pv, tmp171
	movq	%rax, %rcx	# iftmp.107,
	movl	$.LC7, %esi	#,
	movl	$13, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	jmp	.L250	#
.L268:
	.loc 1 1874 0
	movq	-128(%rbp), %rax	# pv, tmp172
	movq	%rax, %rdx	# tmp172,
	movl	$.LC8, %esi	#,
	movl	$13, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L250:
	.loc 1 1876 0
	movq	-8(%rbp), %rax	# D.22690, tmp174
	xorq	%fs:40, %rax	#, tmp174
	je	.L272	#,
	call	__stack_chk_fail	#
.L272:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE58:
	.size	S_not_a_number, .-S_not_a_number
	.globl	Perl_looks_like_number
	.type	Perl_looks_like_number, @function
Perl_looks_like_number:
.LFB59:
	.loc 1 1890 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# sv, sv
	.loc 1 1894 0
	movq	-40(%rbp), %rax	# sv, tmp78
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.22696
	andl	$262144, %eax	#, D.22696
	testl	%eax, %eax	# D.22696
	je	.L274	#,
	.loc 1 1895 0
	movq	-40(%rbp), %rax	# sv, tmp79
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.22697
	movq	(%rax), %rbx	# MEM[(struct XPV *)_7].xpv_pv, sbegin
	.loc 1 1896 0
	movq	-40(%rbp), %rax	# sv, tmp80
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.22697
	movq	8(%rax), %rax	# MEM[(struct XPV *)_9].xpv_cur, len.111
	movq	%rax, -24(%rbp)	# len.111, len
	jmp	.L275	#
.L274:
	.loc 1 1898 0
	movq	-40(%rbp), %rax	# sv, tmp81
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.22696
	andl	$67108864, %eax	#, D.22696
	testl	%eax, %eax	# D.22696
	je	.L276	#,
	.loc 1 1899 0
	movq	-40(%rbp), %rax	# sv, tmp82
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.22696
	andl	$262144, %eax	#, D.22696
	testl	%eax, %eax	# D.22696
	je	.L277	#,
	.loc 1 1899 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp83
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.22697
	movq	8(%rax), %rax	# MEM[(struct XPV *)_15].xpv_cur, len.113
	movq	%rax, -24(%rbp)	# len.113, len
	movq	-40(%rbp), %rax	# sv, tmp84
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.22697
	movq	(%rax), %rax	# MEM[(struct XPV *)_17].xpv_pv, iftmp.112
	jmp	.L278	#
.L277:
	.loc 1 1899 0 discriminator 2
	leaq	-24(%rbp), %rcx	#, tmp85
	movq	-40(%rbp), %rax	# sv, tmp86
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp85,
	movq	%rax, %rdi	# tmp86,
	call	Perl_sv_2pv_flags	#
.L278:
	.loc 1 1899 0 discriminator 1
	movq	%rax, %rbx	# iftmp.112, sbegin
	jmp	.L275	#
.L276:
	.loc 1 1901 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp87
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.22696
	andl	$50528256, %eax	#, D.22695
	jmp	.L280	#
.L275:
	.loc 1 1902 0
	movq	-24(%rbp), %rax	# len, len.114
	movl	$0, %edx	#,
	movq	%rax, %rsi	# len.114,
	movq	%rbx, %rdi	# sbegin,
	call	Perl_grok_number	#
.L280:
	.loc 1 1903 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE59:
	.size	Perl_looks_like_number, .-Perl_looks_like_number
	.type	S_sv_2iuv_non_preserve, @function
S_sv_2iuv_non_preserve:
.LFB60:
	.loc 1 1991 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	movl	%esi, -20(%rbp)	# numtype, numtype
	.loc 1 1993 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_3].xnv_nv, D.22701
	movsd	.LC9(%rip), %xmm0	#, tmp135
	ucomisd	%xmm1, %xmm0	# D.22701, tmp135
	jbe	.L311	#,
	.loc 1 1994 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	andl	$2097152, %eax	#, D.22702
	testl	%eax, %eax	# D.22702
	je	.L285	#,
	.loc 1 1994 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22699
	je	.L285	#,
	.loc 1 1994 0
	nop
.L285:
	.loc 1 1994 0 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	orl	$16777216, %eax	#, D.22702
	movl	%eax, 12(%rbx)	# D.22702, sv_2(D)->sv_flags
	.loc 1 1995 0 is_stmt 1 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	orl	$33685504, %eax	#, D.22702
	movl	%eax, 12(%rbx)	# D.22702, sv_2(D)->sv_flags
	.loc 1 1996 0 discriminator 3
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movabsq	$-9223372036854775808, %rcx	#, tmp141
	movq	%rcx, 24(%rax)	# tmp141, MEM[(struct XPVIV *)_14].xiv_iv
	.loc 1 1997 0 discriminator 3
	movl	$1, %eax	#, D.22699
	jmp	.L286	#
.L311:
	.loc 1 1999 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_16].xnv_nv, D.22701
	ucomisd	.LC10(%rip), %xmm0	#, D.22701
	jbe	.L312	#,
	.loc 1 2000 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	andl	$2097152, %eax	#, D.22702
	testl	%eax, %eax	# D.22702
	je	.L290	#,
	.loc 1 2000 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22699
	je	.L290	#,
	.loc 1 2000 0
	nop
.L290:
	.loc 1 2000 0 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	orl	$16777216, %eax	#, D.22702
	movl	%eax, 12(%rbx)	# D.22702, sv_2(D)->sv_flags
	.loc 1 2001 0 is_stmt 1 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	orl	$33685504, %eax	#, D.22702
	movl	%eax, 12(%rbx)	# D.22702, sv_2(D)->sv_flags
	.loc 1 2002 0 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	orl	$-2147483648, %eax	#, D.22702
	movl	%eax, 12(%rbx)	# D.22702, sv_2(D)->sv_flags
	.loc 1 2003 0 discriminator 3
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movq	$-1, 24(%rax)	#, MEM[(struct XPVUV *)_29].xuv_uv
	.loc 1 2004 0 discriminator 3
	movl	$5, %eax	#, D.22699
	jmp	.L286	#
.L312:
	.loc 1 2006 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	andl	$2097152, %eax	#, D.22702
	testl	%eax, %eax	# D.22702
	je	.L292	#,
	.loc 1 2006 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22699
	je	.L292	#,
	.loc 1 2006 0
	nop
.L292:
	.loc 1 2006 0 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	orl	$16777216, %eax	#, D.22702
	movl	%eax, 12(%rbx)	# D.22702, sv_2(D)->sv_flags
	.loc 1 2007 0 is_stmt 1 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	orl	$33685504, %eax	#, D.22702
	movl	%eax, 12(%rbx)	# D.22702, sv_2(D)->sv_flags
	.loc 1 2010 0 discriminator 3
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_40].xnv_nv, D.22701
	movsd	.LC11(%rip), %xmm0	#, tmp136
	ucomisd	%xmm1, %xmm0	# D.22701, tmp136
	jb	.L313	#,
	.loc 1 2011 0
	movq	(%rbx), %r12	# sv_2(D)->sv_any, D.22700
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_43].xnv_nv, D.22701
	movq	%rax, -32(%rbp)	# D.22701, %sfp
	movsd	-32(%rbp), %xmm0	# %sfp,
	call	Perl_cast_iv	#
	movq	%rax, 24(%r12)	# D.22703, MEM[(struct XPVIV *)_42].xiv_iv
	.loc 1 2012 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_46].xiv_iv, D.22703
	cvtsi2sdq	%rax, %xmm0	# D.22703, D.22701
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_49].xnv_nv, D.22701
	ucomisd	%xmm1, %xmm0	# D.22701, D.22701
	jp	.L295	#,
	ucomisd	%xmm1, %xmm0	# D.22701, D.22701
	jne	.L295	#,
	.loc 1 2013 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	andl	$2097152, %eax	#, D.22702
	testl	%eax, %eax	# D.22702
	je	.L298	#,
	.loc 1 2013 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22699
	je	.L298	#,
	.loc 1 2013 0
	nop
.L298:
	.loc 1 2013 0 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	orl	$16842752, %eax	#, D.22702
	movl	%eax, 12(%rbx)	# D.22702, sv_2(D)->sv_flags
.L295:
	.loc 1 2017 0 is_stmt 1
	movl	$2, %eax	#, D.22699
	jmp	.L286	#
.L313:
	.loc 1 2019 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	orl	$-2147483648, %eax	#, D.22702
	movl	%eax, 12(%rbx)	# D.22702, sv_2(D)->sv_flags
	.loc 1 2020 0
	movq	(%rbx), %r12	# sv_2(D)->sv_any, D.22700
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_62].xnv_nv, D.22701
	movq	%rax, -32(%rbp)	# D.22701, %sfp
	movsd	-32(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movq	%rax, 24(%r12)	# D.22704, MEM[(struct XPVUV *)_61].xuv_uv
	.loc 1 2021 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_65].xuv_uv, D.22704
	testq	%rax, %rax	# D.22704
	js	.L299	#,
	cvtsi2sdq	%rax, %xmm0	# D.22704, D.22701
	jmp	.L300	#
.L299:
	movq	%rax, %rdx	# D.22704, tmp138
	shrq	%rdx	# tmp138
	andl	$1, %eax	#, tmp139
	orq	%rax, %rdx	# tmp139, tmp138
	cvtsi2sdq	%rdx, %xmm0	# tmp138, tmp137
	addsd	%xmm0, %xmm0	# tmp137, D.22701
.L300:
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_68].xnv_nv, D.22701
	ucomisd	%xmm1, %xmm0	# D.22701, D.22701
	jp	.L301	#,
	ucomisd	%xmm1, %xmm0	# D.22701, D.22701
	jne	.L301	#,
	.loc 1 2022 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22700
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_70].xuv_uv, D.22704
	cmpq	$-1, %rax	#, D.22704
	jne	.L303	#,
	.loc 1 2026 0
	movl	$5, %eax	#, D.22699
	jmp	.L286	#
.L303:
	.loc 1 2028 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	andl	$2097152, %eax	#, D.22702
	testl	%eax, %eax	# D.22702
	je	.L305	#,
	.loc 1 2028 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22699
	je	.L305	#,
	.loc 1 2028 0
	nop
.L305:
	.loc 1 2028 0 discriminator 3
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22702
	orl	$16842752, %eax	#, D.22702
	movl	%eax, 12(%rbx)	# D.22702, sv_2(D)->sv_flags
.L301:
	.loc 1 2032 0 is_stmt 1
	movl	$4, %eax	#, D.22699
.L286:
	.loc 1 2033 0
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE60:
	.size	S_sv_2iuv_non_preserve, .-S_sv_2iuv_non_preserve
	.section	.rodata
	.align 8
.LC13:
	.string	"sv_2iv assumed (U_V(fabs((double)SvNVX(sv))) < (UV)IV_MAX) but SvNVX(sv)=%g U_V is 0x%lx, IV_MAX is 0x%lx\n"
	.text
	.globl	Perl_sv_2iv
	.type	Perl_sv_2iv, @function
Perl_sv_2iv:
.LFB61:
	.loc 1 2047 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$48, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	.loc 1 2048 0
	testq	%rbx, %rbx	# sv
	jne	.L315	#,
	.loc 1 2049 0
	movl	$0, %eax	#, D.22705
	jmp	.L316	#
.L315:
	.loc 1 2050 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$8192, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L317	#,
	.loc 1 2051 0
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_get	#
	.loc 1 2052 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$16777216, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L318	#,
	.loc 1 2053 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_12].xiv_iv, D.22705
	jmp	.L316	#
.L318:
	.loc 1 2054 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$33554432, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L319	#,
	.loc 1 2055 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_16].xnv_nv, D.22708
	movq	%rax, -56(%rbp)	# D.22708, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_iv	#
	jmp	.L316	#
.L319:
	.loc 1 2057 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$67108864, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L320	#,
	.loc 1 2057 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	16(%rax), %rax	# MEM[(struct XPV *)_21].xpv_len, D.22709
	testq	%rax, %rax	# D.22709
	je	.L320	#,
	.loc 1 2058 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	S_asIV	#
	jmp	.L316	#
.L320:
	.loc 1 2059 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$524288, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	jne	.L317	#,
	.loc 1 2060 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$512, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	jne	.L321	#,
	.loc 1 2061 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.120
	movq	80(%rax), %rax	# PL_curcop.120_28->cop_warnings, D.22710
	testq	%rax, %rax	# D.22710
	je	.L322	#,
	.loc 1 2061 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.121
	movq	80(%rax), %rax	# PL_curcop.121_30->cop_warnings, D.22710
	cmpq	$32, %rax	#, D.22710
	je	.L322	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.122
	movq	80(%rax), %rax	# PL_curcop.122_32->cop_warnings, D.22710
	cmpq	$16, %rax	#, D.22710
	je	.L323	#,
	.loc 1 2061 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.123
	movq	80(%rax), %rax	# PL_curcop.123_34->cop_warnings, D.22710
	movq	(%rax), %rax	# _35->sv_any, D.22707
	movq	(%rax), %rax	# MEM[(struct XPV *)_36].xpv_pv, D.22711
	addq	$10, %rax	#, D.22711
	movzbl	(%rax), %eax	# *_38, D.22712
	movsbl	%al, %eax	# D.22712, D.22713
	andl	$4, %eax	#, D.22713
	testl	%eax, %eax	# D.22713
	jne	.L323	#,
.L322:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.124
	movq	80(%rax), %rax	# PL_curcop.124_42->cop_warnings, D.22710
	testq	%rax, %rax	# D.22710
	jne	.L321	#,
	.loc 1 2061 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.125
	movzbl	%al, %eax	# PL_dowarn.125, D.22713
	andl	$1, %eax	#, D.22713
	testl	%eax, %eax	# D.22713
	je	.L321	#,
.L323:
	movl	PL_localizing(%rip), %eax	# PL_localizing, PL_localizing.126
	testl	%eax, %eax	# PL_localizing.126
	jne	.L321	#,
	.loc 1 2062 0 is_stmt 1
	call	Perl_report_uninit	#
.L321:
	.loc 1 2064 0
	movl	$0, %eax	#, D.22705
	jmp	.L316	#
.L317:
	.loc 1 2067 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$9961472, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L324	#,
	.loc 1 2068 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$524288, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L325	#,
.LBB7:
	.loc 1 2070 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$268435456, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L326	#,
	.loc 1 2070 0 is_stmt 0 discriminator 1
	movl	$9, %ecx	#,
	movl	$5, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_amagic_call	#
	movq	%rax, -24(%rbp)	# tmp369, tmpstr
	cmpq	$0, -24(%rbp)	#, tmpstr
	je	.L326	#,
	.loc 1 2071 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# tmpstr, tmp370
	movl	12(%rax), %eax	# tmpstr_55->sv_flags, D.22706
	andl	$524288, %eax	#, D.22706
	.loc 1 2070 0 discriminator 1
	testl	%eax, %eax	# D.22706
	je	.L327	#,
	.loc 1 2071 0
	movq	-24(%rbp), %rax	# tmpstr, tmp371
	movq	(%rax), %rax	# tmpstr_55->sv_any, D.22707
	movq	(%rax), %rdx	# MEM[(struct XRV *)_58].xrv_rv, D.22710
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	(%rax), %rax	# MEM[(struct XRV *)_60].xrv_rv, D.22710
	cmpq	%rax, %rdx	# D.22710, D.22710
	je	.L326	#,
.L327:
	.loc 1 2072 0
	movq	-24(%rbp), %rax	# tmpstr, tmp372
	movl	12(%rax), %eax	# tmpstr_55->sv_flags, D.22706
	andl	$65536, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L328	#,
	.loc 1 2072 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# tmpstr, tmp373
	movq	(%rax), %rax	# tmpstr_55->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_64].xiv_iv, iftmp.127
	jmp	.L329	#
.L328:
	.loc 1 2072 0 discriminator 2
	movq	-24(%rbp), %rax	# tmpstr, tmp374
	movq	%rax, %rdi	# tmp374,
	call	Perl_sv_2iv	#
.L329:
	.loc 1 2072 0 discriminator 3
	jmp	.L316	#
.L326:
	.loc 1 2073 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	(%rax), %rax	# MEM[(struct XRV *)_68].xrv_rv, D.22710
	jmp	.L316	#
.L325:
.LBE7:
	.loc 1 2075 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$8388608, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L330	#,
	.loc 1 2075 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$1048576, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L330	#,
	.loc 1 2076 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L330:
	.loc 1 2078 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$8388608, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L324	#,
	.loc 1 2078 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$118423552, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	jne	.L324	#,
	.loc 1 2079 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.128
	movq	80(%rax), %rax	# PL_curcop.128_79->cop_warnings, D.22710
	testq	%rax, %rax	# D.22710
	je	.L331	#,
	.loc 1 2079 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.129
	movq	80(%rax), %rax	# PL_curcop.129_81->cop_warnings, D.22710
	cmpq	$32, %rax	#, D.22710
	je	.L331	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.130
	movq	80(%rax), %rax	# PL_curcop.130_83->cop_warnings, D.22710
	cmpq	$16, %rax	#, D.22710
	je	.L332	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.131
	movq	80(%rax), %rax	# PL_curcop.131_85->cop_warnings, D.22710
	movq	(%rax), %rax	# _86->sv_any, D.22707
	movq	(%rax), %rax	# MEM[(struct XPV *)_87].xpv_pv, D.22711
	addq	$10, %rax	#, D.22711
	movzbl	(%rax), %eax	# *_89, D.22712
	movsbl	%al, %eax	# D.22712, D.22713
	andl	$4, %eax	#, D.22713
	testl	%eax, %eax	# D.22713
	jne	.L332	#,
.L331:
	.loc 1 2079 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.132
	movq	80(%rax), %rax	# PL_curcop.132_93->cop_warnings, D.22710
	testq	%rax, %rax	# D.22710
	jne	.L333	#,
	.loc 1 2079 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.133
	movzbl	%al, %eax	# PL_dowarn.133, D.22713
	andl	$1, %eax	#, D.22713
	testl	%eax, %eax	# D.22713
	je	.L333	#,
.L332:
	.loc 1 2080 0 is_stmt 1
	call	Perl_report_uninit	#
.L333:
	.loc 1 2081 0
	movl	$0, %eax	#, D.22705
	jmp	.L316	#
.L324:
	.loc 1 2084 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$16777216, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L334	#,
	.loc 1 2085 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	testl	%eax, %eax	# D.22714
	jns	.L335	#,
	.loc 1 2086 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_103].xuv_uv, D.22709
	jmp	.L316	#
.L335:
	.loc 1 2089 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_106].xiv_iv, D.22705
	jmp	.L316	#
.L334:
	.loc 1 2092 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$33554432, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L336	#,
	.loc 1 2098 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	movzbl	%al, %eax	# D.22706, D.22706
	cmpl	$2, %eax	#, D.22706
	jne	.L337	#,
	.loc 1 2099 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L337:
	.loc 1 2101 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$2097152, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L339	#,
	.loc 1 2101 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22713
	je	.L339	#,
	.loc 1 2101 0
	nop
.L339:
	.loc 1 2101 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$16777216, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	.loc 1 2106 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_119].xnv_nv, D.22708
	movsd	.LC11(%rip), %xmm0	#, tmp375
	ucomisd	%xmm1, %xmm0	# D.22708, tmp375
	jbe	.L402	#,
	.loc 1 2107 0
	movq	(%rbx), %r12	# sv_6(D)->sv_any, D.22707
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_122].xnv_nv, D.22708
	movq	%rax, -56(%rbp)	# D.22708, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_iv	#
	movq	%rax, 24(%r12)	# D.22715, MEM[(struct XPVIV *)_121].xiv_iv
	.loc 1 2108 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_125].xnv_nv, D.22708
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_127].xiv_iv, D.22715
	cvtsi2sdq	%rax, %xmm0	# D.22715, D.22708
	ucomisd	%xmm0, %xmm1	# D.22708, D.22708
	jp	.L342	#,
	ucomisd	%xmm0, %xmm1	# D.22708, D.22708
	jne	.L342	#,
	.loc 1 2111 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_130].xiv_iv, D.22715
	cqto
	xorq	%rdx, %rax	# tmp376, D.22715
	subq	%rdx, %rax	# tmp376, D.22715
	movq	%rax, %rdx	# D.22715, D.22709
	.loc 1 2110 0
	movl	$4294967295, %eax	#, tmp377
	cmpq	%rax, %rdx	# tmp377, D.22709
	ja	.L342	#,
	.loc 1 2117 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$2097152, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L345	#,
	.loc 1 2117 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22713
	je	.L345	#,
	.loc 1 2117 0
	nop
.L345:
	.loc 1 2117 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$16842752, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	jmp	.L342	#
.L402:
	.loc 1 2145 0 is_stmt 1
	movq	(%rbx), %r12	# sv_6(D)->sv_any, D.22707
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_142].xnv_nv, D.22708
	movq	%rax, -56(%rbp)	# D.22708, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movq	%rax, 24(%r12)	# D.22709, MEM[(struct XPVUV *)_141].xuv_uv
	.loc 1 2147 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_145].xnv_nv, D.22708
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_147].xuv_uv, D.22709
	testq	%rax, %rax	# D.22709
	js	.L346	#,
	cvtsi2sdq	%rax, %xmm0	# D.22709, D.22708
	jmp	.L347	#
.L346:
	movq	%rax, %rdx	# D.22709, tmp379
	shrq	%rdx	# tmp379
	andl	$1, %eax	#, tmp380
	orq	%rax, %rdx	# tmp380, tmp379
	cvtsi2sdq	%rdx, %xmm0	# tmp379, tmp378
	addsd	%xmm0, %xmm0	# tmp378, D.22708
.L347:
	.loc 1 2146 0
	ucomisd	%xmm0, %xmm1	# D.22708, D.22708
	jp	.L348	#,
	ucomisd	%xmm0, %xmm1	# D.22708, D.22708
	jne	.L348	#,
	.loc 1 2151 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rdx	# MEM[(struct XPVUV *)_150].xuv_uv, D.22709
	movl	$4294967295, %eax	#, tmp381
	cmpq	%rax, %rdx	# tmp381, D.22709
	ja	.L348	#,
	.loc 1 2157 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$2097152, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L351	#,
	.loc 1 2157 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22713
	je	.L351	#,
	.loc 1 2157 0
	nop
.L351:
	.loc 1 2157 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$16842752, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
.L348:
	.loc 1 2158 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$-2147483648, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
.L352:
	.loc 1 2165 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_322].xuv_uv, D.22709
	jmp	.L316	#
.L336:
	.loc 1 2168 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$67108864, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L353	#,
	.loc 1 2168 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	16(%rax), %rax	# MEM[(struct XPV *)_163].xpv_len, D.22709
	testq	%rax, %rax	# D.22709
	je	.L353	#,
.LBB8:
	.loc 1 2170 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_165].xpv_cur, D.22709
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	(%rax), %rax	# MEM[(struct XPV *)_167].xpv_pv, D.22711
	leaq	-32(%rbp), %rdx	#, tmp382
	movq	%rcx, %rsi	# D.22709,
	movq	%rax, %rdi	# D.22711,
	call	Perl_grok_number	#
	movl	%eax, -36(%rbp)	# tmp383, numtype
	.loc 1 2184 0
	movl	-36(%rbp), %eax	# numtype, tmp384
	andl	$5, %eax	#, D.22713
	cmpl	$1, %eax	#, D.22713
	jne	.L354	#,
	.loc 1 2187 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	movzbl	%al, %eax	# D.22706, D.22706
	cmpl	$4, %eax	#, D.22706
	ja	.L355	#,
	.loc 1 2188 0
	movl	$5, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L355:
	.loc 1 2189 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$2097152, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L357	#,
	.loc 1 2189 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22713
	je	.L357	#,
	.loc 1 2189 0
	nop
.L357:
	.loc 1 2189 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$16842752, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	jmp	.L358	#
.L354:
	.loc 1 2190 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	movzbl	%al, %eax	# D.22706, D.22706
	cmpl	$5, %eax	#, D.22706
	ja	.L358	#,
	.loc 1 2191 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L358:
	.loc 1 2197 0
	movl	-36(%rbp), %eax	# numtype, tmp385
	andl	$1, %eax	#, D.22713
	testl	%eax, %eax	# D.22713
	je	.L359	#,
	.loc 1 2203 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$2097152, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L361	#,
	.loc 1 2203 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22713
	je	.L361	#,
	.loc 1 2203 0
	nop
.L361:
	.loc 1 2203 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$16777216, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	.loc 1 2205 0 is_stmt 1 discriminator 3
	movl	-36(%rbp), %eax	# numtype, tmp386
	andl	$8, %eax	#, D.22713
	testl	%eax, %eax	# D.22713
	jne	.L362	#,
	.loc 1 2207 0
	movq	-32(%rbp), %rax	# value, value.139
	testq	%rax, %rax	# value.140
	js	.L363	#,
	.loc 1 2208 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	-32(%rbp), %rdx	# value, value.141
	movq	%rdx, 24(%rax)	# value.142, MEM[(struct XPVIV *)_193].xiv_iv
	jmp	.L359	#
.L363:
	.loc 1 2210 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	-32(%rbp), %rdx	# value, value.143
	movq	%rdx, 24(%rax)	# value.143, MEM[(struct XPVUV *)_196].xuv_uv
	.loc 1 2211 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$-2147483648, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	jmp	.L359	#
.L362:
	.loc 1 2215 0
	movq	-32(%rbp), %rdx	# value, value.144
	movabsq	$-9223372036854775808, %rax	#, tmp387
	cmpq	%rax, %rdx	# tmp387, value.144
	ja	.L365	#,
	.loc 1 2216 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	-32(%rbp), %rdx	# value, value.145
	negq	%rdx	# D.22715
	movq	%rdx, 24(%rax)	# D.22715, MEM[(struct XPVIV *)_201].xiv_iv
	jmp	.L359	#
.L365:
	.loc 1 2220 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	movzbl	%al, %eax	# D.22706, D.22706
	cmpl	$5, %eax	#, D.22706
	ja	.L366	#,
	.loc 1 2221 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L366:
	.loc 1 2222 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$33685504, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	.loc 1 2223 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$2130640895, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	.loc 1 2224 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$2097152, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L368	#,
	.loc 1 2224 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22713
	je	.L368	#,
	.loc 1 2224 0
	nop
.L368:
	.loc 1 2224 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$16777216, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	.loc 1 2225 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rcx	# sv_6(D)->sv_any, D.22707
	movq	-32(%rbp), %rax	# value, value.148
	testq	%rax, %rax	# value.148
	js	.L369	#,
	cvtsi2sdq	%rax, %xmm0	# value.148, D.22708
	jmp	.L370	#
.L369:
	movq	%rax, %rdx	# value.148, tmp389
	shrq	%rdx	# tmp389
	andl	$1, %eax	#, tmp390
	orq	%rax, %rdx	# tmp390, tmp389
	cvtsi2sdq	%rdx, %xmm0	# tmp389, tmp388
	addsd	%xmm0, %xmm0	# tmp388, D.22708
.L370:
	movsd	.LC12(%rip), %xmm1	#, tmp391
	xorpd	%xmm1, %xmm0	# tmp391, D.22708
	movsd	%xmm0, 32(%rcx)	# D.22708, MEM[(struct XPVNV *)_218].xnv_nv
	.loc 1 2226 0 discriminator 3
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movabsq	$-9223372036854775808, %rcx	#, tmp407
	movq	%rcx, 24(%rax)	# tmp407, MEM[(struct XPVIV *)_222].xiv_iv
.L359:
	.loc 1 2234 0
	movl	-36(%rbp), %eax	# numtype, tmp392
	andl	$5, %eax	#, D.22713
	cmpl	$1, %eax	#, D.22713
	je	.L371	#,
	.loc 1 2237 0
	movq	(%rbx), %r12	# sv_6(D)->sv_any, D.22707
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	(%rax), %rax	# MEM[(struct XPV *)_225].xpv_pv, D.22711
	movq	%rax, %rdi	# D.22711,
	call	Perl_my_atof	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, D.22708
	movq	%rax, 32(%r12)	# D.22708, MEM[(struct XPVNV *)_224].xnv_nv
	.loc 1 2239 0
	cmpl	$0, -36(%rbp)	#, numtype
	jne	.L372	#,
	.loc 1 2239 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.149
	movq	80(%rax), %rax	# PL_curcop.149_228->cop_warnings, D.22710
	testq	%rax, %rax	# D.22710
	je	.L373	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.150
	movq	80(%rax), %rax	# PL_curcop.150_230->cop_warnings, D.22710
	cmpq	$32, %rax	#, D.22710
	je	.L373	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.151
	movq	80(%rax), %rax	# PL_curcop.151_232->cop_warnings, D.22710
	cmpq	$16, %rax	#, D.22710
	je	.L374	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.152
	movq	80(%rax), %rax	# PL_curcop.152_234->cop_warnings, D.22710
	movq	(%rax), %rax	# _235->sv_any, D.22707
	movq	(%rax), %rax	# MEM[(struct XPV *)_236].xpv_pv, D.22711
	addq	$3, %rax	#, D.22711
	movzbl	(%rax), %eax	# *_238, D.22712
	movsbl	%al, %eax	# D.22712, D.22713
	andl	$4, %eax	#, D.22713
	testl	%eax, %eax	# D.22713
	jne	.L374	#,
.L373:
	.loc 1 2239 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.153
	movq	80(%rax), %rax	# PL_curcop.153_242->cop_warnings, D.22710
	testq	%rax, %rax	# D.22710
	jne	.L372	#,
	.loc 1 2239 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.154
	movzbl	%al, %eax	# PL_dowarn.154, D.22713
	andl	$1, %eax	#, D.22713
	testl	%eax, %eax	# D.22713
	je	.L372	#,
.L374:
	.loc 1 2240 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	S_not_a_number	#
.L372:
	.loc 1 2282 0
	movl	-36(%rbp), %eax	# numtype, tmp393
	andl	$5, %eax	#, D.22713
	cmpl	$5, %eax	#, D.22713
	jne	.L375	#,
	.loc 1 2287 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$33685504, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	jmp	.L371	#
.L375:
	.loc 1 2291 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_250].xnv_nv, D.22708
	xorpd	%xmm1, %xmm1	# tmp394
	ucomisd	%xmm1, %xmm0	# tmp394, D.22708
	jbe	.L403	#,
	.loc 1 2291 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_252].xnv_nv, iftmp.155
	jmp	.L378	#
.L403:
	.loc 1 2291 0 discriminator 2
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_254].xnv_nv, D.22708
	movsd	.LC12(%rip), %xmm0	#, tmp395
	xorpd	%xmm0, %xmm1	# tmp395, iftmp.155
	movsd	%xmm1, -56(%rbp)	# iftmp.155, %sfp
	movq	-56(%rbp), %rax	# %sfp, iftmp.155
.L378:
	.loc 1 2291 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.155, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	.loc 1 2290 0 is_stmt 1 discriminator 3
	movl	$4294967295, %edx	#, tmp396
	cmpq	%rdx, %rax	# tmp396, D.22709
	ja	.L379	#,
	.loc 1 2293 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$2097152, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L381	#,
	.loc 1 2293 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22713
	je	.L381	#,
	.loc 1 2293 0
	nop
.L381:
	.loc 1 2293 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$16777216, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	.loc 1 2294 0 is_stmt 1 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$33685504, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
	.loc 1 2295 0 discriminator 3
	movq	(%rbx), %r12	# sv_6(D)->sv_any, D.22707
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_268].xnv_nv, D.22708
	movq	%rax, -56(%rbp)	# D.22708, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_iv	#
	movq	%rax, 24(%r12)	# D.22715, MEM[(struct XPVIV *)_267].xiv_iv
	.loc 1 2296 0 discriminator 3
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_271].xiv_iv, D.22715
	cvtsi2sdq	%rax, %xmm0	# D.22715, D.22708
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_274].xnv_nv, D.22708
	ucomisd	%xmm1, %xmm0	# D.22708, D.22708
	jp	.L382	#,
	ucomisd	%xmm1, %xmm0	# D.22708, D.22708
	jne	.L382	#,
	.loc 1 2297 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$2097152, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	je	.L385	#,
	.loc 1 2297 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22713
	je	.L385	#,
	.loc 1 2297 0
	nop
.L385:
	.loc 1 2297 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	orl	$16842752, %eax	#, D.22706
	movl	%eax, 12(%rbx)	# D.22706, sv_6(D)->sv_flags
.L382:
	.loc 1 2300 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_283].xnv_nv, D.22708
	xorpd	%xmm1, %xmm1	# tmp397
	ucomisd	%xmm1, %xmm0	# tmp397, D.22708
	jbe	.L404	#,
	.loc 1 2300 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_285].xnv_nv, iftmp.158
	jmp	.L388	#
.L404:
	.loc 1 2300 0 discriminator 2
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_287].xnv_nv, D.22708
	movsd	.LC12(%rip), %xmm0	#, tmp398
	xorpd	%xmm0, %xmm1	# tmp398, iftmp.158
	movsd	%xmm1, -56(%rbp)	# iftmp.158, %sfp
	movq	-56(%rbp), %rax	# %sfp, iftmp.158
.L388:
	.loc 1 2300 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.158, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movabsq	$9223372036854775806, %rdx	#, tmp399
	cmpq	%rdx, %rax	# tmp399, D.22709
	jbe	.L371	#,
	.loc 1 2302 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_291].xnv_nv, D.22708
	movq	%rax, -56(%rbp)	# D.22708, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movq	%rax, %rcx	#, D.22709
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_294].xnv_nv, D.22708
	movabsq	$9223372036854775807, %rdx	#,
	movq	%rcx, %rsi	# D.22709,
	movq	%rax, -56(%rbp)	# D.22708, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	movl	$.LC13, %edi	#,
	movl	$1, %eax	#,
	call	Perl_croak	#
.LBE8:
	.loc 1 2168 0
	jmp	.L342	#
.L379:
.LBB9:
	.loc 1 2313 0
	movl	-36(%rbp), %eax	# numtype, tmp400
	movl	%eax, %esi	# tmp400,
	movq	%rbx, %rdi	# sv,
	call	S_sv_2iuv_non_preserve	#
	cmpl	$3, %eax	#, D.22713
	jg	.L352	#,
.L371:
.LBE9:
	.loc 1 2168 0 discriminator 2
	jmp	.L342	#
.L353:
	.loc 1 2321 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.159
	movq	80(%rax), %rax	# PL_curcop.159_297->cop_warnings, D.22710
	testq	%rax, %rax	# D.22710
	je	.L390	#,
	.loc 1 2321 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.160
	movq	80(%rax), %rax	# PL_curcop.160_299->cop_warnings, D.22710
	cmpq	$32, %rax	#, D.22710
	je	.L390	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.161
	movq	80(%rax), %rax	# PL_curcop.161_301->cop_warnings, D.22710
	cmpq	$16, %rax	#, D.22710
	je	.L391	#,
	.loc 1 2321 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.162
	movq	80(%rax), %rax	# PL_curcop.162_303->cop_warnings, D.22710
	movq	(%rax), %rax	# _304->sv_any, D.22707
	movq	(%rax), %rax	# MEM[(struct XPV *)_305].xpv_pv, D.22711
	addq	$10, %rax	#, D.22711
	movzbl	(%rax), %eax	# *_307, D.22712
	movsbl	%al, %eax	# D.22712, D.22713
	andl	$4, %eax	#, D.22713
	testl	%eax, %eax	# D.22713
	jne	.L391	#,
.L390:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.163
	movq	80(%rax), %rax	# PL_curcop.163_311->cop_warnings, D.22710
	testq	%rax, %rax	# D.22710
	jne	.L392	#,
	.loc 1 2321 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.164
	movzbl	%al, %eax	# PL_dowarn.164, D.22713
	andl	$1, %eax	#, D.22713
	testl	%eax, %eax	# D.22713
	je	.L392	#,
.L391:
	movl	PL_localizing(%rip), %eax	# PL_localizing, PL_localizing.165
	testl	%eax, %eax	# PL_localizing.165
	jne	.L392	#,
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	andl	$512, %eax	#, D.22706
	testl	%eax, %eax	# D.22706
	jne	.L392	#,
	.loc 1 2322 0 is_stmt 1
	call	Perl_report_uninit	#
.L392:
	.loc 1 2323 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	movzbl	%al, %eax	# D.22706, D.22706
	testl	%eax, %eax	# D.22706
	jne	.L393	#,
	.loc 1 2325 0
	movl	$1, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L393:
	.loc 1 2326 0
	movl	$0, %eax	#, D.22705
	jmp	.L316	#
.L342:
	.loc 1 2330 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22706
	testl	%eax, %eax	# D.22714
	jns	.L394	#,
	.loc 1 2330 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_327].xuv_uv, D.22709
	jmp	.L395	#
.L394:
	.loc 1 2330 0 discriminator 2
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22707
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_330].xiv_iv, iftmp.166
.L395:
.L316:
	.loc 1 2331 0 is_stmt 1
	addq	$48, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE61:
	.size	Perl_sv_2iv, .-Perl_sv_2iv
	.section	.rodata
	.align 8
.LC14:
	.string	"sv_2uv assumed (U_V(fabs((double)SvNVX(sv))) < (UV)IV_MAX) but SvNVX(sv)=%g U_V is 0x%lx, IV_MAX is 0x%lx\n"
	.text
	.globl	Perl_sv_2uv
	.type	Perl_sv_2uv, @function
Perl_sv_2uv:
.LFB62:
	.loc 1 2345 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$48, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	.loc 1 2346 0
	testq	%rbx, %rbx	# sv
	jne	.L406	#,
	.loc 1 2347 0
	movl	$0, %eax	#, D.22717
	jmp	.L407	#
.L406:
	.loc 1 2348 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$8192, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L408	#,
	.loc 1 2349 0
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_get	#
	.loc 1 2350 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$16777216, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L409	#,
	.loc 1 2351 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_12].xuv_uv, D.22717
	jmp	.L407	#
.L409:
	.loc 1 2352 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$33554432, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L410	#,
	.loc 1 2353 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_16].xnv_nv, D.22720
	movq	%rax, -56(%rbp)	# D.22720, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	jmp	.L407	#
.L410:
	.loc 1 2354 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$67108864, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L411	#,
	.loc 1 2354 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	16(%rax), %rax	# MEM[(struct XPV *)_21].xpv_len, D.22721
	testq	%rax, %rax	# D.22721
	je	.L411	#,
	.loc 1 2355 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	S_asUV	#
	jmp	.L407	#
.L411:
	.loc 1 2356 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$524288, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	jne	.L408	#,
	.loc 1 2357 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$512, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	jne	.L412	#,
	.loc 1 2358 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.167
	movq	80(%rax), %rax	# PL_curcop.167_28->cop_warnings, D.22722
	testq	%rax, %rax	# D.22722
	je	.L413	#,
	.loc 1 2358 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.168
	movq	80(%rax), %rax	# PL_curcop.168_30->cop_warnings, D.22722
	cmpq	$32, %rax	#, D.22722
	je	.L413	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.169
	movq	80(%rax), %rax	# PL_curcop.169_32->cop_warnings, D.22722
	cmpq	$16, %rax	#, D.22722
	je	.L414	#,
	.loc 1 2358 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.170
	movq	80(%rax), %rax	# PL_curcop.170_34->cop_warnings, D.22722
	movq	(%rax), %rax	# _35->sv_any, D.22719
	movq	(%rax), %rax	# MEM[(struct XPV *)_36].xpv_pv, D.22723
	addq	$10, %rax	#, D.22723
	movzbl	(%rax), %eax	# *_38, D.22724
	movsbl	%al, %eax	# D.22724, D.22725
	andl	$4, %eax	#, D.22725
	testl	%eax, %eax	# D.22725
	jne	.L414	#,
.L413:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.171
	movq	80(%rax), %rax	# PL_curcop.171_42->cop_warnings, D.22722
	testq	%rax, %rax	# D.22722
	jne	.L412	#,
	.loc 1 2358 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.172
	movzbl	%al, %eax	# PL_dowarn.172, D.22725
	andl	$1, %eax	#, D.22725
	testl	%eax, %eax	# D.22725
	je	.L412	#,
.L414:
	movl	PL_localizing(%rip), %eax	# PL_localizing, PL_localizing.173
	testl	%eax, %eax	# PL_localizing.173
	jne	.L412	#,
	.loc 1 2359 0 is_stmt 1
	call	Perl_report_uninit	#
.L412:
	.loc 1 2361 0
	movl	$0, %eax	#, D.22717
	jmp	.L407	#
.L408:
	.loc 1 2364 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$9961472, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L415	#,
	.loc 1 2365 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$524288, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L416	#,
.LBB10:
	.loc 1 2367 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$268435456, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L417	#,
	.loc 1 2367 0 is_stmt 0 discriminator 1
	movl	$9, %ecx	#,
	movl	$5, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_amagic_call	#
	movq	%rax, -24(%rbp)	# tmp366, tmpstr
	cmpq	$0, -24(%rbp)	#, tmpstr
	je	.L417	#,
	.loc 1 2368 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# tmpstr, tmp367
	movl	12(%rax), %eax	# tmpstr_55->sv_flags, D.22718
	andl	$524288, %eax	#, D.22718
	.loc 1 2367 0 discriminator 1
	testl	%eax, %eax	# D.22718
	je	.L418	#,
	.loc 1 2368 0
	movq	-24(%rbp), %rax	# tmpstr, tmp368
	movq	(%rax), %rax	# tmpstr_55->sv_any, D.22719
	movq	(%rax), %rdx	# MEM[(struct XRV *)_58].xrv_rv, D.22722
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	(%rax), %rax	# MEM[(struct XRV *)_60].xrv_rv, D.22722
	cmpq	%rax, %rdx	# D.22722, D.22722
	je	.L417	#,
.L418:
	.loc 1 2369 0
	movq	-24(%rbp), %rax	# tmpstr, tmp369
	movl	12(%rax), %eax	# tmpstr_55->sv_flags, D.22718
	andl	$65536, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L419	#,
	.loc 1 2369 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# tmpstr, tmp370
	movq	(%rax), %rax	# tmpstr_55->sv_any, D.22719
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_64].xuv_uv, iftmp.174
	jmp	.L420	#
.L419:
	.loc 1 2369 0 discriminator 2
	movq	-24(%rbp), %rax	# tmpstr, tmp371
	movq	%rax, %rdi	# tmp371,
	call	Perl_sv_2uv	#
.L420:
	.loc 1 2369 0 discriminator 3
	jmp	.L407	#
.L417:
	.loc 1 2370 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	(%rax), %rax	# MEM[(struct XRV *)_68].xrv_rv, D.22722
	jmp	.L407	#
.L416:
.LBE10:
	.loc 1 2372 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$8388608, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L421	#,
	.loc 1 2372 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$1048576, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L421	#,
	.loc 1 2373 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L421:
	.loc 1 2375 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$8388608, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L415	#,
	.loc 1 2375 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$118423552, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	jne	.L415	#,
	.loc 1 2376 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.175
	movq	80(%rax), %rax	# PL_curcop.175_79->cop_warnings, D.22722
	testq	%rax, %rax	# D.22722
	je	.L422	#,
	.loc 1 2376 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.176
	movq	80(%rax), %rax	# PL_curcop.176_81->cop_warnings, D.22722
	cmpq	$32, %rax	#, D.22722
	je	.L422	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.177
	movq	80(%rax), %rax	# PL_curcop.177_83->cop_warnings, D.22722
	cmpq	$16, %rax	#, D.22722
	je	.L423	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.178
	movq	80(%rax), %rax	# PL_curcop.178_85->cop_warnings, D.22722
	movq	(%rax), %rax	# _86->sv_any, D.22719
	movq	(%rax), %rax	# MEM[(struct XPV *)_87].xpv_pv, D.22723
	addq	$10, %rax	#, D.22723
	movzbl	(%rax), %eax	# *_89, D.22724
	movsbl	%al, %eax	# D.22724, D.22725
	andl	$4, %eax	#, D.22725
	testl	%eax, %eax	# D.22725
	jne	.L423	#,
.L422:
	.loc 1 2376 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.179
	movq	80(%rax), %rax	# PL_curcop.179_93->cop_warnings, D.22722
	testq	%rax, %rax	# D.22722
	jne	.L424	#,
	.loc 1 2376 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.180
	movzbl	%al, %eax	# PL_dowarn.180, D.22725
	andl	$1, %eax	#, D.22725
	testl	%eax, %eax	# D.22725
	je	.L424	#,
.L423:
	.loc 1 2377 0 is_stmt 1
	call	Perl_report_uninit	#
.L424:
	.loc 1 2378 0
	movl	$0, %eax	#, D.22717
	jmp	.L407	#
.L415:
	.loc 1 2381 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$16777216, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L425	#,
	.loc 1 2382 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	testl	%eax, %eax	# D.22726
	jns	.L426	#,
	.loc 1 2383 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_103].xuv_uv, D.22717
	jmp	.L407	#
.L426:
	.loc 1 2386 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_105].xiv_iv, D.22727
	jmp	.L407	#
.L425:
	.loc 1 2389 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$33554432, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L427	#,
	.loc 1 2396 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	movzbl	%al, %eax	# D.22718, D.22718
	cmpl	$2, %eax	#, D.22718
	jne	.L428	#,
	.loc 1 2397 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L428:
	.loc 1 2399 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$2097152, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L430	#,
	.loc 1 2399 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22725
	je	.L430	#,
	.loc 1 2399 0
	nop
.L430:
	.loc 1 2399 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$16777216, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	.loc 1 2400 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_119].xnv_nv, D.22720
	movsd	.LC11(%rip), %xmm0	#, tmp372
	ucomisd	%xmm1, %xmm0	# D.22720, tmp372
	jbe	.L493	#,
	.loc 1 2401 0
	movq	(%rbx), %r12	# sv_6(D)->sv_any, D.22719
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_122].xnv_nv, D.22720
	movq	%rax, -56(%rbp)	# D.22720, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_iv	#
	movq	%rax, 24(%r12)	# D.22727, MEM[(struct XPVIV *)_121].xiv_iv
	.loc 1 2402 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_125].xnv_nv, D.22720
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_127].xiv_iv, D.22727
	cvtsi2sdq	%rax, %xmm0	# D.22727, D.22720
	ucomisd	%xmm0, %xmm1	# D.22720, D.22720
	jp	.L443	#,
	ucomisd	%xmm0, %xmm1	# D.22720, D.22720
	je	.L488	#,
	jmp	.L443	#
.L488:
	.loc 1 2405 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_130].xiv_iv, D.22727
	cqto
	xorq	%rdx, %rax	# tmp373, D.22727
	subq	%rdx, %rax	# tmp373, D.22727
	movq	%rax, %rdx	# D.22727, D.22721
	.loc 1 2404 0
	movl	$4294967295, %eax	#, tmp374
	cmpq	%rax, %rdx	# tmp374, D.22721
	ja	.L443	#,
	.loc 1 2411 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$2097152, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L436	#,
	.loc 1 2411 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22725
	je	.L436	#,
	.loc 1 2411 0
	nop
.L436:
	.loc 1 2411 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$16842752, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	jmp	.L443	#
.L493:
	.loc 1 2439 0 is_stmt 1
	movq	(%rbx), %r12	# sv_6(D)->sv_any, D.22719
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_142].xnv_nv, D.22720
	movq	%rax, -56(%rbp)	# D.22720, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movq	%rax, 24(%r12)	# D.22721, MEM[(struct XPVUV *)_141].xuv_uv
	.loc 1 2441 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_145].xnv_nv, D.22720
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_147].xuv_uv, D.22721
	testq	%rax, %rax	# D.22721
	js	.L437	#,
	cvtsi2sdq	%rax, %xmm0	# D.22721, D.22720
	jmp	.L438	#
.L437:
	movq	%rax, %rdx	# D.22721, tmp376
	shrq	%rdx	# tmp376
	andl	$1, %eax	#, tmp377
	orq	%rax, %rdx	# tmp377, tmp376
	cvtsi2sdq	%rdx, %xmm0	# tmp376, tmp375
	addsd	%xmm0, %xmm0	# tmp375, D.22720
.L438:
	.loc 1 2440 0
	ucomisd	%xmm0, %xmm1	# D.22720, D.22720
	jp	.L439	#,
	ucomisd	%xmm0, %xmm1	# D.22720, D.22720
	jne	.L439	#,
	.loc 1 2445 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	24(%rax), %rdx	# MEM[(struct XPVUV *)_150].xuv_uv, D.22721
	movl	$4294967295, %eax	#, tmp378
	cmpq	%rax, %rdx	# tmp378, D.22721
	ja	.L439	#,
	.loc 1 2451 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$2097152, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L442	#,
	.loc 1 2451 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22725
	je	.L442	#,
	.loc 1 2451 0
	nop
.L442:
	.loc 1 2451 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$16842752, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
.L439:
	.loc 1 2452 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$-2147483648, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	jmp	.L443	#
.L427:
	.loc 1 2460 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$67108864, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L444	#,
	.loc 1 2460 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	16(%rax), %rax	# MEM[(struct XPV *)_163].xpv_len, D.22721
	testq	%rax, %rax	# D.22721
	je	.L444	#,
.LBB11:
	.loc 1 2462 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_165].xpv_cur, D.22721
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	(%rax), %rax	# MEM[(struct XPV *)_167].xpv_pv, D.22723
	leaq	-32(%rbp), %rdx	#, tmp379
	movq	%rcx, %rsi	# D.22721,
	movq	%rax, %rdi	# D.22723,
	call	Perl_grok_number	#
	movl	%eax, -36(%rbp)	# tmp380, numtype
	.loc 1 2474 0
	movl	-36(%rbp), %eax	# numtype, tmp381
	andl	$5, %eax	#, D.22725
	cmpl	$1, %eax	#, D.22725
	jne	.L445	#,
	.loc 1 2477 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	movzbl	%al, %eax	# D.22718, D.22718
	cmpl	$4, %eax	#, D.22718
	ja	.L446	#,
	.loc 1 2478 0
	movl	$5, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L446:
	.loc 1 2479 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$2097152, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L448	#,
	.loc 1 2479 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22725
	je	.L448	#,
	.loc 1 2479 0
	nop
.L448:
	.loc 1 2479 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$16842752, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	jmp	.L449	#
.L445:
	.loc 1 2480 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	movzbl	%al, %eax	# D.22718, D.22718
	cmpl	$5, %eax	#, D.22718
	ja	.L449	#,
	.loc 1 2481 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L449:
	.loc 1 2487 0
	movl	-36(%rbp), %eax	# numtype, tmp382
	andl	$1, %eax	#, D.22725
	testl	%eax, %eax	# D.22725
	je	.L450	#,
	.loc 1 2493 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$2097152, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L452	#,
	.loc 1 2493 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22725
	je	.L452	#,
	.loc 1 2493 0
	nop
.L452:
	.loc 1 2493 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$16777216, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	.loc 1 2495 0 is_stmt 1 discriminator 3
	movl	-36(%rbp), %eax	# numtype, tmp383
	andl	$8, %eax	#, D.22725
	testl	%eax, %eax	# D.22725
	jne	.L453	#,
	.loc 1 2497 0
	movq	-32(%rbp), %rax	# value, value.186
	testq	%rax, %rax	# value.187
	js	.L454	#,
	.loc 1 2498 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	-32(%rbp), %rdx	# value, value.188
	movq	%rdx, 24(%rax)	# value.189, MEM[(struct XPVIV *)_193].xiv_iv
	jmp	.L450	#
.L454:
	.loc 1 2501 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	-32(%rbp), %rdx	# value, value.190
	movq	%rdx, 24(%rax)	# value.190, MEM[(struct XPVUV *)_196].xuv_uv
	.loc 1 2502 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$-2147483648, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	jmp	.L450	#
.L453:
	.loc 1 2506 0
	movq	-32(%rbp), %rdx	# value, value.191
	movabsq	$-9223372036854775808, %rax	#, tmp384
	cmpq	%rax, %rdx	# tmp384, value.191
	ja	.L456	#,
	.loc 1 2507 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	-32(%rbp), %rdx	# value, value.192
	negq	%rdx	# D.22727
	movq	%rdx, 24(%rax)	# D.22727, MEM[(struct XPVIV *)_201].xiv_iv
	jmp	.L450	#
.L456:
	.loc 1 2511 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	movzbl	%al, %eax	# D.22718, D.22718
	cmpl	$5, %eax	#, D.22718
	ja	.L457	#,
	.loc 1 2512 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L457:
	.loc 1 2513 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$33685504, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	.loc 1 2514 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$2130640895, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	.loc 1 2515 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$2097152, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L459	#,
	.loc 1 2515 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22725
	je	.L459	#,
	.loc 1 2515 0
	nop
.L459:
	.loc 1 2515 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$16777216, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	.loc 1 2516 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rcx	# sv_6(D)->sv_any, D.22719
	movq	-32(%rbp), %rax	# value, value.195
	testq	%rax, %rax	# value.195
	js	.L460	#,
	cvtsi2sdq	%rax, %xmm0	# value.195, D.22720
	jmp	.L461	#
.L460:
	movq	%rax, %rdx	# value.195, tmp386
	shrq	%rdx	# tmp386
	andl	$1, %eax	#, tmp387
	orq	%rax, %rdx	# tmp387, tmp386
	cvtsi2sdq	%rdx, %xmm0	# tmp386, tmp385
	addsd	%xmm0, %xmm0	# tmp385, D.22720
.L461:
	movsd	.LC12(%rip), %xmm1	#, tmp388
	xorpd	%xmm1, %xmm0	# tmp388, D.22720
	movsd	%xmm0, 32(%rcx)	# D.22720, MEM[(struct XPVNV *)_218].xnv_nv
	.loc 1 2517 0 discriminator 3
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movabsq	$-9223372036854775808, %rcx	#, tmp404
	movq	%rcx, 24(%rax)	# tmp404, MEM[(struct XPVIV *)_222].xiv_iv
.L450:
	.loc 1 2522 0
	movl	-36(%rbp), %eax	# numtype, tmp389
	andl	$5, %eax	#, D.22725
	cmpl	$1, %eax	#, D.22725
	je	.L462	#,
	.loc 1 2525 0
	movq	(%rbx), %r12	# sv_6(D)->sv_any, D.22719
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	(%rax), %rax	# MEM[(struct XPV *)_225].xpv_pv, D.22723
	movq	%rax, %rdi	# D.22723,
	call	Perl_my_atof	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, D.22720
	movq	%rax, 32(%r12)	# D.22720, MEM[(struct XPVNV *)_224].xnv_nv
	.loc 1 2527 0
	cmpl	$0, -36(%rbp)	#, numtype
	jne	.L463	#,
	.loc 1 2527 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.196
	movq	80(%rax), %rax	# PL_curcop.196_228->cop_warnings, D.22722
	testq	%rax, %rax	# D.22722
	je	.L464	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.197
	movq	80(%rax), %rax	# PL_curcop.197_230->cop_warnings, D.22722
	cmpq	$32, %rax	#, D.22722
	je	.L464	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.198
	movq	80(%rax), %rax	# PL_curcop.198_232->cop_warnings, D.22722
	cmpq	$16, %rax	#, D.22722
	je	.L465	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.199
	movq	80(%rax), %rax	# PL_curcop.199_234->cop_warnings, D.22722
	movq	(%rax), %rax	# _235->sv_any, D.22719
	movq	(%rax), %rax	# MEM[(struct XPV *)_236].xpv_pv, D.22723
	addq	$3, %rax	#, D.22723
	movzbl	(%rax), %eax	# *_238, D.22724
	movsbl	%al, %eax	# D.22724, D.22725
	andl	$4, %eax	#, D.22725
	testl	%eax, %eax	# D.22725
	jne	.L465	#,
.L464:
	.loc 1 2527 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.200
	movq	80(%rax), %rax	# PL_curcop.200_242->cop_warnings, D.22722
	testq	%rax, %rax	# D.22722
	jne	.L463	#,
	.loc 1 2527 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.201
	movzbl	%al, %eax	# PL_dowarn.201, D.22725
	andl	$1, %eax	#, D.22725
	testl	%eax, %eax	# D.22725
	je	.L463	#,
.L465:
	.loc 1 2528 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	S_not_a_number	#
.L463:
	.loc 1 2569 0
	movl	-36(%rbp), %eax	# numtype, tmp390
	andl	$5, %eax	#, D.22725
	cmpl	$5, %eax	#, D.22725
	jne	.L466	#,
	.loc 1 2574 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$33685504, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	jmp	.L462	#
.L466:
	.loc 1 2578 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_250].xnv_nv, D.22720
	xorpd	%xmm1, %xmm1	# tmp391
	ucomisd	%xmm1, %xmm0	# tmp391, D.22720
	jbe	.L494	#,
	.loc 1 2578 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_252].xnv_nv, iftmp.202
	jmp	.L469	#
.L494:
	.loc 1 2578 0 discriminator 2
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_254].xnv_nv, D.22720
	movsd	.LC12(%rip), %xmm0	#, tmp392
	xorpd	%xmm0, %xmm1	# tmp392, iftmp.202
	movsd	%xmm1, -56(%rbp)	# iftmp.202, %sfp
	movq	-56(%rbp), %rax	# %sfp, iftmp.202
.L469:
	.loc 1 2578 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.202, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	.loc 1 2577 0 is_stmt 1 discriminator 3
	movl	$4294967295, %edx	#, tmp393
	cmpq	%rdx, %rax	# tmp393, D.22721
	ja	.L470	#,
	.loc 1 2580 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$2097152, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L472	#,
	.loc 1 2580 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22725
	je	.L472	#,
	.loc 1 2580 0
	nop
.L472:
	.loc 1 2580 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$16777216, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	.loc 1 2581 0 is_stmt 1 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$33685504, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
	.loc 1 2582 0 discriminator 3
	movq	(%rbx), %r12	# sv_6(D)->sv_any, D.22719
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_268].xnv_nv, D.22720
	movq	%rax, -56(%rbp)	# D.22720, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_iv	#
	movq	%rax, 24(%r12)	# D.22727, MEM[(struct XPVIV *)_267].xiv_iv
	.loc 1 2583 0 discriminator 3
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_271].xiv_iv, D.22727
	cvtsi2sdq	%rax, %xmm0	# D.22727, D.22720
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_274].xnv_nv, D.22720
	ucomisd	%xmm1, %xmm0	# D.22720, D.22720
	jp	.L473	#,
	ucomisd	%xmm1, %xmm0	# D.22720, D.22720
	jne	.L473	#,
	.loc 1 2584 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$2097152, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	je	.L476	#,
	.loc 1 2584 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22725
	je	.L476	#,
	.loc 1 2584 0
	nop
.L476:
	.loc 1 2584 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	orl	$16842752, %eax	#, D.22718
	movl	%eax, 12(%rbx)	# D.22718, sv_6(D)->sv_flags
.L473:
	.loc 1 2587 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_283].xnv_nv, D.22720
	xorpd	%xmm1, %xmm1	# tmp394
	ucomisd	%xmm1, %xmm0	# tmp394, D.22720
	jbe	.L495	#,
	.loc 1 2587 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_285].xnv_nv, iftmp.205
	jmp	.L479	#
.L495:
	.loc 1 2587 0 discriminator 2
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_287].xnv_nv, D.22720
	movsd	.LC12(%rip), %xmm0	#, tmp395
	xorpd	%xmm0, %xmm1	# tmp395, iftmp.205
	movsd	%xmm1, -56(%rbp)	# iftmp.205, %sfp
	movq	-56(%rbp), %rax	# %sfp, iftmp.205
.L479:
	.loc 1 2587 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.205, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movabsq	$9223372036854775806, %rdx	#, tmp396
	cmpq	%rdx, %rax	# tmp396, D.22721
	jbe	.L462	#,
	.loc 1 2589 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_291].xnv_nv, D.22720
	movq	%rax, -56(%rbp)	# D.22720, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movq	%rax, %rcx	#, D.22721
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_294].xnv_nv, D.22720
	movabsq	$9223372036854775807, %rdx	#,
	movq	%rcx, %rsi	# D.22721,
	movq	%rax, -56(%rbp)	# D.22720, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	movl	$.LC14, %edi	#,
	movl	$1, %eax	#,
	call	Perl_croak	#
.LBE11:
	.loc 1 2460 0
	jmp	.L443	#
.L470:
.LBB12:
	.loc 1 2592 0
	movl	-36(%rbp), %eax	# numtype, tmp397
	movl	%eax, %esi	# tmp397,
	movq	%rbx, %rdi	# sv,
	call	S_sv_2iuv_non_preserve	#
.LBE12:
	.loc 1 2460 0
	jmp	.L443	#
.L462:
	.loc 1 2460 0 is_stmt 0 discriminator 2
	jmp	.L443	#
.L444:
	.loc 1 2598 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	andl	$512, %eax	#, D.22718
	testl	%eax, %eax	# D.22718
	jne	.L481	#,
	.loc 1 2599 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.206
	movq	80(%rax), %rax	# PL_curcop.206_298->cop_warnings, D.22722
	testq	%rax, %rax	# D.22722
	je	.L482	#,
	.loc 1 2599 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.207
	movq	80(%rax), %rax	# PL_curcop.207_300->cop_warnings, D.22722
	cmpq	$32, %rax	#, D.22722
	je	.L482	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.208
	movq	80(%rax), %rax	# PL_curcop.208_302->cop_warnings, D.22722
	cmpq	$16, %rax	#, D.22722
	je	.L483	#,
	.loc 1 2599 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.209
	movq	80(%rax), %rax	# PL_curcop.209_304->cop_warnings, D.22722
	movq	(%rax), %rax	# _305->sv_any, D.22719
	movq	(%rax), %rax	# MEM[(struct XPV *)_306].xpv_pv, D.22723
	addq	$10, %rax	#, D.22723
	movzbl	(%rax), %eax	# *_308, D.22724
	movsbl	%al, %eax	# D.22724, D.22725
	andl	$4, %eax	#, D.22725
	testl	%eax, %eax	# D.22725
	jne	.L483	#,
.L482:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.210
	movq	80(%rax), %rax	# PL_curcop.210_312->cop_warnings, D.22722
	testq	%rax, %rax	# D.22722
	jne	.L481	#,
	.loc 1 2599 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.211
	movzbl	%al, %eax	# PL_dowarn.211, D.22725
	andl	$1, %eax	#, D.22725
	testl	%eax, %eax	# D.22725
	je	.L481	#,
.L483:
	movl	PL_localizing(%rip), %eax	# PL_localizing, PL_localizing.212
	testl	%eax, %eax	# PL_localizing.212
	jne	.L481	#,
	.loc 1 2600 0 is_stmt 1
	call	Perl_report_uninit	#
.L481:
	.loc 1 2602 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	movzbl	%al, %eax	# D.22718, D.22718
	testl	%eax, %eax	# D.22718
	jne	.L484	#,
	.loc 1 2604 0
	movl	$1, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L484:
	.loc 1 2605 0
	movl	$0, %eax	#, D.22717
	jmp	.L407	#
.L443:
	.loc 1 2610 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22718
	testl	%eax, %eax	# D.22726
	jns	.L485	#,
	.loc 1 2610 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_323].xuv_uv, iftmp.213
	jmp	.L486	#
.L485:
	.loc 1 2610 0 discriminator 2
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22719
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_325].xiv_iv, D.22727
.L486:
.L407:
	.loc 1 2611 0 is_stmt 1
	addq	$48, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE62:
	.size	Perl_sv_2uv, .-Perl_sv_2uv
	.globl	Perl_sv_2nv
	.type	Perl_sv_2nv, @function
Perl_sv_2nv:
.LFB63:
	.loc 1 2625 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$64, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	.loc 1 2626 0
	testq	%rbx, %rbx	# sv
	jne	.L497	#,
	.loc 1 2627 0
	movl	$0, %eax	#, D.22729
	jmp	.L498	#
.L497:
	.loc 1 2628 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$8192, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L499	#,
	.loc 1 2629 0
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_get	#
	.loc 1 2630 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$33554432, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L500	#,
	.loc 1 2631 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_13].xnv_nv, D.22729
	jmp	.L498	#
.L500:
	.loc 1 2632 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$67108864, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L501	#,
	.loc 1 2632 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	16(%rax), %rax	# MEM[(struct XPV *)_17].xpv_len, D.22732
	testq	%rax, %rax	# D.22732
	je	.L501	#,
	.loc 1 2633 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.214
	movq	80(%rax), %rax	# PL_curcop.214_19->cop_warnings, D.22733
	testq	%rax, %rax	# D.22733
	je	.L502	#,
	.loc 1 2633 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.215
	movq	80(%rax), %rax	# PL_curcop.215_21->cop_warnings, D.22733
	cmpq	$32, %rax	#, D.22733
	je	.L502	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.216
	movq	80(%rax), %rax	# PL_curcop.216_23->cop_warnings, D.22733
	cmpq	$16, %rax	#, D.22733
	je	.L503	#,
	.loc 1 2633 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.217
	movq	80(%rax), %rax	# PL_curcop.217_25->cop_warnings, D.22733
	movq	(%rax), %rax	# _26->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XPV *)_27].xpv_pv, D.22734
	addq	$3, %rax	#, D.22734
	movzbl	(%rax), %eax	# *_29, D.22735
	movsbl	%al, %eax	# D.22735, D.22736
	andl	$4, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	jne	.L503	#,
.L502:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.218
	movq	80(%rax), %rax	# PL_curcop.218_33->cop_warnings, D.22733
	testq	%rax, %rax	# D.22733
	jne	.L504	#,
	.loc 1 2633 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.219
	movzbl	%al, %eax	# PL_dowarn.219, D.22736
	andl	$1, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	je	.L504	#,
.L503:
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$16777216, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	jne	.L504	#,
	.loc 1 2634 0 is_stmt 1 discriminator 1
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_40].xpv_cur, D.22732
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XPV *)_42].xpv_pv, D.22734
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# D.22732,
	movq	%rax, %rdi	# D.22734,
	call	Perl_grok_number	#
	.loc 1 2633 0 discriminator 1
	testl	%eax, %eax	# D.22736
	jne	.L504	#,
	.loc 1 2635 0
	movq	%rbx, %rdi	# sv,
	call	S_not_a_number	#
.L504:
	.loc 1 2636 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XPV *)_45].xpv_pv, D.22734
	movq	%rax, %rdi	# D.22734,
	call	Perl_my_atof	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.22729
	jmp	.L498	#
.L501:
	.loc 1 2638 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$16777216, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L505	#,
	.loc 1 2639 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	testl	%eax, %eax	# D.22737
	jns	.L506	#,
	.loc 1 2640 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_52].xuv_uv, D.22732
	testq	%rax, %rax	# D.22732
	js	.L507	#,
	cvtsi2sdq	%rax, %xmm4	# D.22732, D.22729
	movsd	%xmm4, -72(%rbp)	# D.22729, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.22729
	jmp	.L498	#
.L507:
	movq	%rax, %rdx	# D.22732, tmp357
	shrq	%rdx	# tmp357
	andl	$1, %eax	#, tmp358
	orq	%rax, %rdx	# tmp358, tmp357
	cvtsi2sdq	%rdx, %xmm0	# tmp357, tmp356
	movapd	%xmm0, %xmm2	# tmp356, D.22729
	addsd	%xmm0, %xmm2	# tmp356, D.22729
	movsd	%xmm2, -72(%rbp)	# D.22729, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.22729
	jmp	.L498	#
.L506:
	.loc 1 2642 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_55].xiv_iv, D.22738
	cvtsi2sdq	%rax, %xmm5	# D.22738, D.22729
	movsd	%xmm5, -72(%rbp)	# D.22729, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.22729
	jmp	.L498	#
.L505:
	.loc 1 2644 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$524288, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	jne	.L499	#,
	.loc 1 2645 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$512, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	jne	.L509	#,
	.loc 1 2646 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.220
	movq	80(%rax), %rax	# PL_curcop.220_62->cop_warnings, D.22733
	testq	%rax, %rax	# D.22733
	je	.L510	#,
	.loc 1 2646 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.221
	movq	80(%rax), %rax	# PL_curcop.221_64->cop_warnings, D.22733
	cmpq	$32, %rax	#, D.22733
	je	.L510	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.222
	movq	80(%rax), %rax	# PL_curcop.222_66->cop_warnings, D.22733
	cmpq	$16, %rax	#, D.22733
	je	.L511	#,
	.loc 1 2646 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.223
	movq	80(%rax), %rax	# PL_curcop.223_68->cop_warnings, D.22733
	movq	(%rax), %rax	# _69->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XPV *)_70].xpv_pv, D.22734
	addq	$10, %rax	#, D.22734
	movzbl	(%rax), %eax	# *_72, D.22735
	movsbl	%al, %eax	# D.22735, D.22736
	andl	$4, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	jne	.L511	#,
.L510:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.224
	movq	80(%rax), %rax	# PL_curcop.224_76->cop_warnings, D.22733
	testq	%rax, %rax	# D.22733
	jne	.L509	#,
	.loc 1 2646 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.225
	movzbl	%al, %eax	# PL_dowarn.225, D.22736
	andl	$1, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	je	.L509	#,
.L511:
	movl	PL_localizing(%rip), %eax	# PL_localizing, PL_localizing.226
	testl	%eax, %eax	# PL_localizing.226
	jne	.L509	#,
	.loc 1 2647 0 is_stmt 1
	call	Perl_report_uninit	#
.L509:
	.loc 1 2649 0
	movl	$0, %eax	#, D.22729
	jmp	.L498	#
.L499:
	.loc 1 2652 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$9961472, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L512	#,
	.loc 1 2653 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$524288, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L513	#,
.LBB13:
	.loc 1 2655 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$268435456, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L514	#,
	.loc 1 2655 0 is_stmt 0 discriminator 1
	movl	$9, %ecx	#,
	movl	$5, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp359, tmpstr
	cmpq	$0, -40(%rbp)	#, tmpstr
	je	.L514	#,
	.loc 1 2656 0 is_stmt 1 discriminator 1
	movq	-40(%rbp), %rax	# tmpstr, tmp360
	movl	12(%rax), %eax	# tmpstr_89->sv_flags, D.22730
	andl	$524288, %eax	#, D.22730
	.loc 1 2655 0 discriminator 1
	testl	%eax, %eax	# D.22730
	je	.L515	#,
	.loc 1 2656 0
	movq	-40(%rbp), %rax	# tmpstr, tmp361
	movq	(%rax), %rax	# tmpstr_89->sv_any, D.22731
	movq	(%rax), %rdx	# MEM[(struct XRV *)_92].xrv_rv, D.22733
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XRV *)_94].xrv_rv, D.22733
	cmpq	%rax, %rdx	# D.22733, D.22733
	je	.L514	#,
.L515:
	.loc 1 2657 0
	movq	-40(%rbp), %rax	# tmpstr, tmp362
	movl	12(%rax), %eax	# tmpstr_89->sv_flags, D.22730
	andl	$131072, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L516	#,
	.loc 1 2657 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# tmpstr, tmp363
	movq	(%rax), %rax	# tmpstr_89->sv_any, D.22731
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_98].xnv_nv, iftmp.227
	jmp	.L517	#
.L516:
	.loc 1 2657 0 discriminator 2
	movq	-40(%rbp), %rax	# tmpstr, tmp364
	movq	%rax, %rdi	# tmp364,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, iftmp.227
.L517:
	.loc 1 2657 0 discriminator 3
	jmp	.L498	#
.L514:
	.loc 1 2658 0 is_stmt 1
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XRV *)_102].xrv_rv, D.22733
	testq	%rax, %rax	# D.22732
	js	.L518	#,
	cvtsi2sdq	%rax, %xmm6	# D.22732, D.22729
	movsd	%xmm6, -72(%rbp)	# D.22729, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.22729
	jmp	.L498	#
.L518:
	movq	%rax, %rdx	# D.22732, tmp366
	shrq	%rdx	# tmp366
	andl	$1, %eax	#, tmp367
	orq	%rax, %rdx	# tmp367, tmp366
	cvtsi2sdq	%rdx, %xmm0	# tmp366, tmp365
	movapd	%xmm0, %xmm3	# tmp365, D.22729
	addsd	%xmm0, %xmm3	# tmp365, D.22729
	movsd	%xmm3, -72(%rbp)	# D.22729, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.22729
	jmp	.L498	#
.L513:
.LBE13:
	.loc 1 2660 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$8388608, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L520	#,
	.loc 1 2660 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$1048576, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L520	#,
	.loc 1 2661 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L520:
	.loc 1 2663 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$8388608, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L512	#,
	.loc 1 2663 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$118423552, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	jne	.L512	#,
	.loc 1 2664 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.228
	movq	80(%rax), %rax	# PL_curcop.228_114->cop_warnings, D.22733
	testq	%rax, %rax	# D.22733
	je	.L521	#,
	.loc 1 2664 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.229
	movq	80(%rax), %rax	# PL_curcop.229_116->cop_warnings, D.22733
	cmpq	$32, %rax	#, D.22733
	je	.L521	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.230
	movq	80(%rax), %rax	# PL_curcop.230_118->cop_warnings, D.22733
	cmpq	$16, %rax	#, D.22733
	je	.L522	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.231
	movq	80(%rax), %rax	# PL_curcop.231_120->cop_warnings, D.22733
	movq	(%rax), %rax	# _121->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XPV *)_122].xpv_pv, D.22734
	addq	$10, %rax	#, D.22734
	movzbl	(%rax), %eax	# *_124, D.22735
	movsbl	%al, %eax	# D.22735, D.22736
	andl	$4, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	jne	.L522	#,
.L521:
	.loc 1 2664 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.232
	movq	80(%rax), %rax	# PL_curcop.232_128->cop_warnings, D.22733
	testq	%rax, %rax	# D.22733
	jne	.L523	#,
	.loc 1 2664 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.233
	movzbl	%al, %eax	# PL_dowarn.233, D.22736
	andl	$1, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	je	.L523	#,
.L522:
	.loc 1 2665 0 is_stmt 1
	call	Perl_report_uninit	#
.L523:
	.loc 1 2666 0
	movl	$0, %eax	#, D.22729
	jmp	.L498	#
.L512:
	.loc 1 2669 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	movzbl	%al, %eax	# D.22730, D.22730
	cmpl	$1, %eax	#, D.22730
	ja	.L524	#,
	.loc 1 2670 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	movzbl	%al, %eax	# D.22730, D.22730
	cmpl	$1, %eax	#, D.22730
	jne	.L525	#,
	.loc 1 2671 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	jmp	.L527	#
.L525:
	.loc 1 2673 0
	movl	$2, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	jmp	.L527	#
.L524:
	.loc 1 2691 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	movzbl	%al, %eax	# D.22730, D.22730
	cmpl	$5, %eax	#, D.22730
	ja	.L527	#,
	.loc 1 2692 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L527:
	.loc 1 2693 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$33554432, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L528	#,
	.loc 1 2694 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_142].xnv_nv, D.22729
	jmp	.L498	#
.L528:
	.loc 1 2696 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$16777216, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L529	#,
	.loc 1 2697 0
	movq	(%rbx), %rcx	# sv_7(D)->sv_any, D.22731
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	testl	%eax, %eax	# D.22737
	jns	.L530	#,
	.loc 1 2697 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_149].xuv_uv, D.22732
	testq	%rax, %rax	# D.22732
	js	.L531	#,
	cvtsi2sdq	%rax, %xmm0	# D.22732, iftmp.234
	jmp	.L533	#
.L531:
	movq	%rax, %rdx	# D.22732, tmp369
	shrq	%rdx	# tmp369
	andl	$1, %eax	#, tmp370
	orq	%rax, %rdx	# tmp370, tmp369
	cvtsi2sdq	%rdx, %xmm0	# tmp369, tmp368
	addsd	%xmm0, %xmm0	# tmp368, iftmp.234
	jmp	.L533	#
.L530:
	.loc 1 2697 0 discriminator 2
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_152].xiv_iv, D.22738
	cvtsi2sdq	%rax, %xmm0	# D.22738, iftmp.234
.L533:
	.loc 1 2697 0 discriminator 3
	movsd	%xmm0, 32(%rcx)	# iftmp.234, MEM[(struct XPVNV *)_146].xnv_nv
	.loc 1 2703 0 is_stmt 1 discriminator 3
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	testl	%eax, %eax	# D.22737
	jns	.L534	#,
	.loc 1 2703 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_157].xuv_uv, D.22732
	cmpq	$-1, %rax	#, D.22732
	je	.L535	#,
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	24(%rax), %r12	# MEM[(struct XPVUV *)_159].xuv_uv, D.22732
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_161].xnv_nv, D.22739
	movq	%rax, -72(%rbp)	# D.22739, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	cmpq	%rax, %r12	# D.22732, D.22732
	jne	.L535	#,
	.loc 1 2703 0 discriminator 3
	movl	$1, %eax	#, iftmp.236
	jmp	.L536	#
.L535:
	.loc 1 2703 0 discriminator 2
	movl	$0, %eax	#, iftmp.236
.L536:
	.loc 1 2703 0 discriminator 4
	andl	$1, %eax	#, iftmp.235
	jmp	.L537	#
.L534:
	.loc 1 2704 0 is_stmt 1 discriminator 2
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	24(%rax), %r12	# MEM[(struct XPVIV *)_167].xiv_iv, D.22738
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_169].xnv_nv, D.22739
	movq	%rax, -72(%rbp)	# D.22739, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	call	Perl_cast_iv	#
	.loc 1 2703 0 discriminator 2
	cmpq	%rax, %r12	# D.22738, D.22738
	sete	%al	#, iftmp.235
.L537:
	.loc 1 2703 0 is_stmt 0 discriminator 3
	testb	%al, %al	# iftmp.235
	je	.L538	#,
	.loc 1 2705 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$33685504, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	jmp	.L540	#
.L538:
	.loc 1 2707 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$33554432, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	jmp	.L540	#
.L529:
	.loc 1 2710 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$67108864, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L541	#,
	.loc 1 2710 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	16(%rax), %rax	# MEM[(struct XPV *)_179].xpv_len, D.22732
	testq	%rax, %rax	# D.22732
	je	.L541	#,
.LBB14:
	.loc 1 2712 0 is_stmt 1
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_181].xpv_cur, D.22732
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XPV *)_183].xpv_pv, D.22734
	leaq	-48(%rbp), %rdx	#, tmp371
	movq	%rcx, %rsi	# D.22732,
	movq	%rax, %rdi	# D.22734,
	call	Perl_grok_number	#
	movl	%eax, -52(%rbp)	# tmp372, numtype
	.loc 1 2713 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.237
	movq	80(%rax), %rax	# PL_curcop.237_186->cop_warnings, D.22733
	testq	%rax, %rax	# D.22733
	je	.L542	#,
	.loc 1 2713 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.238
	movq	80(%rax), %rax	# PL_curcop.238_188->cop_warnings, D.22733
	cmpq	$32, %rax	#, D.22733
	je	.L542	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.239
	movq	80(%rax), %rax	# PL_curcop.239_190->cop_warnings, D.22733
	cmpq	$16, %rax	#, D.22733
	je	.L543	#,
	.loc 1 2713 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.240
	movq	80(%rax), %rax	# PL_curcop.240_192->cop_warnings, D.22733
	movq	(%rax), %rax	# _193->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XPV *)_194].xpv_pv, D.22734
	addq	$3, %rax	#, D.22734
	movzbl	(%rax), %eax	# *_196, D.22735
	movsbl	%al, %eax	# D.22735, D.22736
	andl	$4, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	jne	.L543	#,
.L542:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.241
	movq	80(%rax), %rax	# PL_curcop.241_200->cop_warnings, D.22733
	testq	%rax, %rax	# D.22733
	jne	.L544	#,
	.loc 1 2713 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.242
	movzbl	%al, %eax	# PL_dowarn.242, D.22736
	andl	$1, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	je	.L544	#,
.L543:
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$16777216, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	jne	.L544	#,
	cmpl	$0, -52(%rbp)	#, numtype
	jne	.L544	#,
	.loc 1 2714 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	S_not_a_number	#
.L544:
	.loc 1 2724 0
	movq	(%rbx), %r12	# sv_7(D)->sv_any, D.22731
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XPV *)_208].xpv_pv, D.22734
	movq	%rax, %rdi	# D.22734,
	call	Perl_my_atof	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.22739
	movq	%rax, 32(%r12)	# D.22739, MEM[(struct XPVNV *)_207].xnv_nv
	.loc 1 2732 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_211].xnv_nv, D.22739
	xorpd	%xmm1, %xmm1	# tmp373
	ucomisd	%xmm1, %xmm0	# tmp373, D.22739
	jbe	.L576	#,
	.loc 1 2732 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_213].xnv_nv, iftmp.243
	jmp	.L547	#
.L576:
	.loc 1 2732 0 discriminator 2
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_215].xnv_nv, D.22739
	movsd	.LC12(%rip), %xmm0	#, tmp374
	xorpd	%xmm0, %xmm1	# tmp374, iftmp.243
	movsd	%xmm1, -72(%rbp)	# iftmp.243, %sfp
	movq	-72(%rbp), %rax	# %sfp, iftmp.243
.L547:
	.loc 1 2732 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.243, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	.loc 1 2731 0 is_stmt 1 discriminator 3
	movl	$4294967295, %edx	#, tmp375
	cmpq	%rdx, %rax	# tmp375, D.22732
	ja	.L548	#,
	.loc 1 2733 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$33685504, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	jmp	.L549	#
.L548:
	.loc 1 2734 0
	movl	-52(%rbp), %eax	# numtype, tmp376
	andl	$1, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	jne	.L550	#,
	.loc 1 2737 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$33685504, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	jmp	.L549	#
.L550:
	.loc 1 2740 0
	movl	-52(%rbp), %eax	# numtype, tmp377
	andl	$8, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	je	.L551	#,
	.loc 1 2740 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rdx	# value, value.244
	movabsq	$-9223372036854775808, %rax	#, tmp378
	cmpq	%rax, %rdx	# tmp378, value.244
	jbe	.L551	#,
	.loc 1 2742 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$33685504, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	jmp	.L549	#
.L551:
	.loc 1 2744 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$33554432, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	.loc 1 2745 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$2097152, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L553	#,
	.loc 1 2745 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22736
	je	.L553	#,
	.loc 1 2745 0
	nop
.L553:
	.loc 1 2745 0 discriminator 3
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$16777216, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	.loc 1 2747 0 is_stmt 1 discriminator 3
	movl	-52(%rbp), %eax	# numtype, tmp379
	andl	$8, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	je	.L554	#,
	.loc 1 2748 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	-48(%rbp), %rdx	# value, value.246
	negq	%rdx	# D.22738
	movq	%rdx, 24(%rax)	# D.22738, MEM[(struct XPVIV *)_238].xiv_iv
	jmp	.L555	#
.L554:
	.loc 1 2749 0
	movq	-48(%rbp), %rax	# value, value.248
	testq	%rax, %rax	# value.249
	js	.L556	#,
	.loc 1 2750 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	-48(%rbp), %rdx	# value, value.250
	movq	%rdx, 24(%rax)	# value.251, MEM[(struct XPVIV *)_244].xiv_iv
	jmp	.L555	#
.L556:
	.loc 1 2752 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	-48(%rbp), %rdx	# value, value.252
	movq	%rdx, 24(%rax)	# value.252, MEM[(struct XPVUV *)_247].xuv_uv
	.loc 1 2753 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$-2147483648, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
.L555:
	.loc 1 2756 0
	movl	-52(%rbp), %eax	# numtype, tmp380
	andl	$4, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	jne	.L549	#,
.LBB15:
	.loc 1 2763 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_252].xnv_nv, tmp381
	movq	%rax, -32(%rbp)	# tmp381, nv
	.loc 1 2764 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_254].xnv_nv, D.22739
	movsd	.LC11(%rip), %xmm0	#, tmp382
	ucomisd	%xmm1, %xmm0	# D.22739, tmp382
	jbe	.L577	#,
	.loc 1 2765 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	24(%rax), %r12	# MEM[(struct XPVIV *)_256].xiv_iv, D.22738
	movq	-32(%rbp), %rax	# nv, tmp383
	movq	%rax, -72(%rbp)	# tmp383, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	call	Perl_cast_iv	#
	cmpq	%rax, %r12	# D.22738, D.22738
	jne	.L559	#,
	.loc 1 2766 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$33685504, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	.loc 1 2767 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$2097152, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L561	#,
	.loc 1 2767 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22736
	je	.L561	#,
	.loc 1 2767 0
	nop
.L561:
	.loc 1 2767 0 discriminator 3
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$16842752, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	jmp	.L549	#
.L559:
	.loc 1 2769 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$2097152, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L564	#,
	.loc 1 2769 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22736
	je	.L564	#,
	.loc 1 2769 0
	nop
.L564:
	.loc 1 2769 0 discriminator 3
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$16842752, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
.LBE15:
.LBE14:
	.loc 1 2710 0 is_stmt 1 discriminator 3
	jmp	.L540	#
.L577:
.LBB18:
.LBB17:
	.loc 1 2776 0
	movl	-52(%rbp), %eax	# numtype, tmp384
	andl	$4, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	jne	.L549	#,
.LBB16:
	.loc 1 2779 0
	movq	-32(%rbp), %rax	# nv, tmp385
	movq	%rax, -72(%rbp)	# tmp385, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movq	%rax, -24(%rbp)	# tmp386, nv_as_uv
	.loc 1 2781 0
	movq	-48(%rbp), %rax	# value, value.255
	cmpq	-24(%rbp), %rax	# nv_as_uv, value.255
	jne	.L565	#,
	.loc 1 2781 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_278].xuv_uv, D.22732
	cmpq	$-1, %rax	#, D.22732
	je	.L565	#,
	.loc 1 2782 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$33685504, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	.loc 1 2783 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$2097152, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L567	#,
	.loc 1 2783 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22736
	je	.L567	#,
	.loc 1 2783 0
	nop
.L567:
	.loc 1 2783 0 discriminator 3
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$16842752, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
	jmp	.L549	#
.L565:
	.loc 1 2785 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$2097152, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	je	.L569	#,
	.loc 1 2785 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22736
	je	.L569	#,
	.loc 1 2785 0
	nop
.L569:
	.loc 1 2785 0 discriminator 3
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	orl	$16842752, %eax	#, D.22730
	movl	%eax, 12(%rbx)	# D.22730, sv_7(D)->sv_flags
.LBE16:
.LBE17:
.LBE18:
	.loc 1 2710 0 is_stmt 1 discriminator 3
	jmp	.L540	#
.L549:
	.loc 1 2710 0 is_stmt 0 discriminator 1
	jmp	.L540	#
.L541:
	.loc 1 2795 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.258
	movq	80(%rax), %rax	# PL_curcop.258_296->cop_warnings, D.22733
	testq	%rax, %rax	# D.22733
	je	.L570	#,
	.loc 1 2795 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.259
	movq	80(%rax), %rax	# PL_curcop.259_298->cop_warnings, D.22733
	cmpq	$32, %rax	#, D.22733
	je	.L570	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.260
	movq	80(%rax), %rax	# PL_curcop.260_300->cop_warnings, D.22733
	cmpq	$16, %rax	#, D.22733
	je	.L571	#,
	.loc 1 2795 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.261
	movq	80(%rax), %rax	# PL_curcop.261_302->cop_warnings, D.22733
	movq	(%rax), %rax	# _303->sv_any, D.22731
	movq	(%rax), %rax	# MEM[(struct XPV *)_304].xpv_pv, D.22734
	addq	$10, %rax	#, D.22734
	movzbl	(%rax), %eax	# *_306, D.22735
	movsbl	%al, %eax	# D.22735, D.22736
	andl	$4, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	jne	.L571	#,
.L570:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.262
	movq	80(%rax), %rax	# PL_curcop.262_310->cop_warnings, D.22733
	testq	%rax, %rax	# D.22733
	jne	.L572	#,
	.loc 1 2795 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.263
	movzbl	%al, %eax	# PL_dowarn.263, D.22736
	andl	$1, %eax	#, D.22736
	testl	%eax, %eax	# D.22736
	je	.L572	#,
.L571:
	movl	PL_localizing(%rip), %eax	# PL_localizing, PL_localizing.264
	testl	%eax, %eax	# PL_localizing.264
	jne	.L572	#,
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	andl	$512, %eax	#, D.22730
	testl	%eax, %eax	# D.22730
	jne	.L572	#,
	.loc 1 2796 0 is_stmt 1
	call	Perl_report_uninit	#
.L572:
	.loc 1 2797 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22730
	movzbl	%al, %eax	# D.22730, D.22730
	cmpl	$1, %eax	#, D.22730
	ja	.L573	#,
	.loc 1 2801 0
	movl	$2, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L573:
	.loc 1 2802 0
	movl	$0, %eax	#, D.22729
	jmp	.L498	#
.L540:
	.loc 1 2819 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22731
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_321].xnv_nv, D.22729
.L498:
	.loc 1 2820 0
	movq	%rax, -72(%rbp)	# <retval>, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	addq	$64, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE63:
	.size	Perl_sv_2nv, .-Perl_sv_2nv
	.type	S_asIV, @function
S_asIV:
.LFB64:
	.loc 1 2827 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	.loc 1 2829 0
	movq	-24(%rbp), %rax	# sv, tmp95
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22741
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_3].xpv_cur, D.22742
	movq	-24(%rbp), %rax	# sv, tmp96
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22741
	movq	(%rax), %rax	# MEM[(struct XPV *)_5].xpv_pv, D.22743
	leaq	-8(%rbp), %rdx	#, tmp97
	movq	%rcx, %rsi	# D.22742,
	movq	%rax, %rdi	# D.22743,
	call	Perl_grok_number	#
	movl	%eax, -12(%rbp)	# tmp98, numtype
	.loc 1 2831 0
	movl	-12(%rbp), %eax	# numtype, tmp99
	andl	$5, %eax	#, D.22744
	cmpl	$1, %eax	#, D.22744
	jne	.L579	#,
	.loc 1 2834 0
	movl	-12(%rbp), %eax	# numtype, tmp100
	andl	$8, %eax	#, D.22744
	testl	%eax, %eax	# D.22744
	je	.L580	#,
	.loc 1 2835 0
	movq	-8(%rbp), %rax	# value, value.265
	testq	%rax, %rax	# value.266
	js	.L579	#,
	.loc 1 2836 0
	movq	-8(%rbp), %rax	# value, value.267
	negq	%rax	# D.22740
	jmp	.L585	#
.L580:
	.loc 1 2838 0
	movq	-8(%rbp), %rdx	# value, value.269
	movabsq	$9223372036854775806, %rax	#, tmp101
	cmpq	%rax, %rdx	# tmp101, value.269
	ja	.L579	#,
	.loc 1 2839 0
	movq	-8(%rbp), %rax	# value, value.270
	jmp	.L585	#
.L579:
	.loc 1 2842 0
	cmpl	$0, -12(%rbp)	#, numtype
	jne	.L582	#,
	.loc 1 2843 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.271
	movq	80(%rax), %rax	# PL_curcop.271_18->cop_warnings, D.22745
	testq	%rax, %rax	# D.22745
	je	.L583	#,
	.loc 1 2843 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.272
	movq	80(%rax), %rax	# PL_curcop.272_20->cop_warnings, D.22745
	cmpq	$32, %rax	#, D.22745
	je	.L583	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.273
	movq	80(%rax), %rax	# PL_curcop.273_22->cop_warnings, D.22745
	cmpq	$16, %rax	#, D.22745
	je	.L584	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.274
	movq	80(%rax), %rax	# PL_curcop.274_24->cop_warnings, D.22745
	movq	(%rax), %rax	# _25->sv_any, D.22741
	movq	(%rax), %rax	# MEM[(struct XPV *)_26].xpv_pv, D.22743
	addq	$3, %rax	#, D.22743
	movzbl	(%rax), %eax	# *_28, D.22746
	movsbl	%al, %eax	# D.22746, D.22744
	andl	$4, %eax	#, D.22744
	testl	%eax, %eax	# D.22744
	jne	.L584	#,
.L583:
	.loc 1 2843 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.275
	movq	80(%rax), %rax	# PL_curcop.275_32->cop_warnings, D.22745
	testq	%rax, %rax	# D.22745
	jne	.L582	#,
	.loc 1 2843 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.276
	movzbl	%al, %eax	# PL_dowarn.276, D.22744
	andl	$1, %eax	#, D.22744
	testl	%eax, %eax	# D.22744
	je	.L582	#,
.L584:
	.loc 1 2844 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp102
	movq	%rax, %rdi	# tmp102,
	call	S_not_a_number	#
.L582:
	.loc 1 2846 0
	movq	-24(%rbp), %rax	# sv, tmp103
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22741
	movq	(%rax), %rax	# MEM[(struct XPV *)_37].xpv_pv, D.22743
	movq	%rax, %rdi	# D.22743,
	call	Perl_my_atof	#
	movsd	%xmm0, -32(%rbp)	#, %sfp
	movq	-32(%rbp), %rax	# %sfp, D.22747
	movq	%rax, -32(%rbp)	# D.22747, %sfp
	movsd	-32(%rbp), %xmm0	# %sfp,
	call	Perl_cast_iv	#
.L585:
	.loc 1 2847 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE64:
	.size	S_asIV, .-S_asIV
	.type	S_asUV, @function
S_asUV:
.LFB65:
	.loc 1 2854 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	.loc 1 2856 0
	movq	-24(%rbp), %rax	# sv, tmp89
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22749
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_3].xpv_cur, D.22750
	movq	-24(%rbp), %rax	# sv, tmp90
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22749
	movq	(%rax), %rax	# MEM[(struct XPV *)_5].xpv_pv, D.22751
	leaq	-8(%rbp), %rdx	#, tmp91
	movq	%rcx, %rsi	# D.22750,
	movq	%rax, %rdi	# D.22751,
	call	Perl_grok_number	#
	movl	%eax, -12(%rbp)	# tmp92, numtype
	.loc 1 2858 0
	movl	-12(%rbp), %eax	# numtype, tmp93
	andl	$5, %eax	#, D.22752
	cmpl	$1, %eax	#, D.22752
	jne	.L587	#,
	.loc 1 2861 0
	movl	-12(%rbp), %eax	# numtype, tmp94
	andl	$8, %eax	#, D.22752
	testl	%eax, %eax	# D.22752
	jne	.L587	#,
	.loc 1 2862 0
	movq	-8(%rbp), %rax	# value, D.22748
	jmp	.L592	#
.L587:
	.loc 1 2864 0
	cmpl	$0, -12(%rbp)	#, numtype
	jne	.L589	#,
	.loc 1 2865 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.277
	movq	80(%rax), %rax	# PL_curcop.277_11->cop_warnings, D.22753
	testq	%rax, %rax	# D.22753
	je	.L590	#,
	.loc 1 2865 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.278
	movq	80(%rax), %rax	# PL_curcop.278_13->cop_warnings, D.22753
	cmpq	$32, %rax	#, D.22753
	je	.L590	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.279
	movq	80(%rax), %rax	# PL_curcop.279_15->cop_warnings, D.22753
	cmpq	$16, %rax	#, D.22753
	je	.L591	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.280
	movq	80(%rax), %rax	# PL_curcop.280_17->cop_warnings, D.22753
	movq	(%rax), %rax	# _18->sv_any, D.22749
	movq	(%rax), %rax	# MEM[(struct XPV *)_19].xpv_pv, D.22751
	addq	$3, %rax	#, D.22751
	movzbl	(%rax), %eax	# *_21, D.22754
	movsbl	%al, %eax	# D.22754, D.22752
	andl	$4, %eax	#, D.22752
	testl	%eax, %eax	# D.22752
	jne	.L591	#,
.L590:
	.loc 1 2865 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.281
	movq	80(%rax), %rax	# PL_curcop.281_25->cop_warnings, D.22753
	testq	%rax, %rax	# D.22753
	jne	.L589	#,
	.loc 1 2865 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.282
	movzbl	%al, %eax	# PL_dowarn.282, D.22752
	andl	$1, %eax	#, D.22752
	testl	%eax, %eax	# D.22752
	je	.L589	#,
.L591:
	.loc 1 2866 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp95
	movq	%rax, %rdi	# tmp95,
	call	S_not_a_number	#
.L589:
	.loc 1 2868 0
	movq	-24(%rbp), %rax	# sv, tmp96
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22749
	movq	(%rax), %rax	# MEM[(struct XPV *)_30].xpv_pv, D.22751
	movq	%rax, %rdi	# D.22751,
	call	Perl_my_atof	#
	movsd	%xmm0, -32(%rbp)	#, %sfp
	movq	-32(%rbp), %rax	# %sfp, D.22755
	movq	%rax, -32(%rbp)	# D.22755, %sfp
	movsd	-32(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
.L592:
	.loc 1 2869 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE65:
	.size	S_asUV, .-S_asUV
	.globl	Perl_sv_2pv_nolen
	.type	Perl_sv_2pv_nolen, @function
Perl_sv_2pv_nolen:
.LFB66:
	.loc 1 2881 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, %rax	# sv, sv
	.loc 1 2883 0
	leaq	-8(%rbp), %rcx	#, tmp62
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp62,
	movq	%rax, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
	.loc 1 2884 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE66:
	.size	Perl_sv_2pv_nolen, .-Perl_sv_2pv_nolen
	.type	uiv_2buf, @function
uiv_2buf:
.LFB67:
	.loc 1 2895 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -40(%rbp)	# buf, buf
	movq	%rsi, -48(%rbp)	# iv, iv
	movq	%rdx, -56(%rbp)	# uv, uv
	movl	%ecx, -60(%rbp)	# is_uv, is_uv
	movq	%r8, -72(%rbp)	# peob, peob
	.loc 1 2896 0
	movq	-40(%rbp), %rax	# buf, tmp69
	addq	$22, %rax	#, tmp68
	movq	%rax, -16(%rbp)	# tmp68, ptr
	.loc 1 2897 0
	movq	-16(%rbp), %rax	# ptr, tmp70
	movq	%rax, -8(%rbp)	# tmp70, ebuf
	.loc 1 2900 0
	cmpl	$0, -60(%rbp)	#, is_uv
	je	.L596	#,
	.loc 1 2901 0
	movl	$0, -20(%rbp)	#, sign
	jmp	.L597	#
.L596:
	.loc 1 2902 0
	cmpq	$0, -48(%rbp)	#, iv
	js	.L598	#,
	.loc 1 2903 0
	movq	-48(%rbp), %rax	# iv, tmp71
	movq	%rax, -56(%rbp)	# tmp71, uv
	.loc 1 2904 0
	movl	$0, -20(%rbp)	#, sign
	jmp	.L597	#
.L598:
	.loc 1 2906 0
	movq	-48(%rbp), %rax	# iv, tmp72
	negq	%rax	# D.22757
	movq	%rax, -56(%rbp)	# D.22757, uv
	.loc 1 2907 0
	movl	$1, -20(%rbp)	#, sign
.L597:
	.loc 1 2910 0 discriminator 1
	subq	$1, -16(%rbp)	#, ptr
	movq	-56(%rbp), %rcx	# uv, tmp73
	movabsq	$-3689348814741910323, %rdx	#, tmp75
	movq	%rcx, %rax	# tmp73, tmp87
	mulq	%rdx	# tmp75
	shrq	$3, %rdx	#, D.22758
	movq	%rdx, %rax	# D.22758, tmp76
	salq	$2, %rax	#, tmp76
	addq	%rdx, %rax	# D.22758, tmp76
	addq	%rax, %rax	# tmp77
	subq	%rax, %rcx	# tmp76, D.22758
	movq	%rcx, %rdx	# D.22758, D.22758
	movl	%edx, %eax	# D.22758, D.22759
	addl	$48, %eax	#, D.22759
	movl	%eax, %edx	# D.22759, D.22760
	movq	-16(%rbp), %rax	# ptr, tmp78
	movb	%dl, (%rax)	# D.22760, *ptr_17
	.loc 1 2911 0 discriminator 1
	movq	-56(%rbp), %rax	# uv, tmp80
	movabsq	$-3689348814741910323, %rdx	#, tmp82
	mulq	%rdx	# tmp82
	movq	%rdx, %rax	# tmp81, tmp79
	shrq	$3, %rax	#, tmp79
	movq	%rax, -56(%rbp)	# tmp79, uv
	cmpq	$0, -56(%rbp)	#, uv
	jne	.L597	#,
	.loc 1 2912 0
	cmpl	$0, -20(%rbp)	#, sign
	je	.L599	#,
	.loc 1 2913 0
	subq	$1, -16(%rbp)	#, ptr
	movq	-16(%rbp), %rax	# ptr, tmp83
	movb	$45, (%rax)	#, *ptr_23
.L599:
	.loc 1 2914 0
	movq	-72(%rbp), %rax	# peob, tmp84
	movq	-8(%rbp), %rdx	# ebuf, tmp85
	movq	%rdx, (%rax)	# tmp85, *peob_24(D)
	.loc 1 2915 0
	movq	-16(%rbp), %rax	# ptr, D.22761
	.loc 1 2916 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE67:
	.size	uiv_2buf, .-uiv_2buf
	.globl	Perl_sv_2pv
	.type	Perl_sv_2pv, @function
Perl_sv_2pv:
.LFB68:
	.loc 1 2924 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, %rax	# sv, sv
	movq	%rsi, -8(%rbp)	# lp, lp
	.loc 1 2925 0
	movq	-8(%rbp), %rcx	# lp, tmp62
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp62,
	movq	%rax, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
	.loc 1 2926 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE68:
	.size	Perl_sv_2pv, .-Perl_sv_2pv
	.section	.rodata
.LC15:
	.string	"%lu"
.LC16:
	.string	"%ld"
.LC17:
	.string	"NULLREF"
.LC18:
	.string	"msix"
.LC19:
	.string	"(?"
.LC20:
	.string	":"
.LC21:
	.string	"REF"
.LC22:
	.string	"SCALAR"
.LC23:
	.string	"LVALUE"
.LC24:
	.string	"ARRAY"
.LC25:
	.string	"HASH"
.LC26:
	.string	"CODE"
.LC27:
	.string	"GLOB"
.LC28:
	.string	"FORMAT"
.LC29:
	.string	"IO"
.LC30:
	.string	"UNKNOWN"
.LC31:
	.string	"__ANON__"
.LC32:
	.string	"%s=%s(0x%lx)"
.LC33:
	.string	"%s(0x%lx)"
	.text
	.globl	Perl_sv_2pv_flags
	.type	Perl_sv_2pv_flags, @function
Perl_sv_2pv_flags:
.LFB69:
	.loc 1 2942 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$288, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, -280(%rbp)	# lp, lp
	movl	%edx, -284(%rbp)	# flags, flags
	.loc 1 2942 0
	movq	%fs:40, %rax	#, tmp496
	movq	%rax, -24(%rbp)	# tmp496, D.22779
	xorl	%eax, %eax	# tmp496
	.loc 1 2947 0
	leaq	-96(%rbp), %rax	#, tmp380
	movq	%rax, -184(%rbp)	# tmp380, tmpbuf
	.loc 1 2949 0
	testq	%rbx, %rbx	# sv
	jne	.L604	#,
	.loc 1 2950 0
	movq	-280(%rbp), %rax	# lp, tmp381
	movq	$0, (%rax)	#, *lp_28(D)
	.loc 1 2951 0
	movl	$.LC1, %eax	#, D.22763
	jmp	.L701	#
.L604:
	.loc 1 2953 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$8192, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L606	#,
	.loc 1 2954 0
	movl	-284(%rbp), %eax	# flags, tmp382
	andl	$2, %eax	#, D.22765
	testl	%eax, %eax	# D.22765
	je	.L607	#,
	.loc 1 2955 0
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_get	#
.L607:
	.loc 1 2956 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$67108864, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L608	#,
	.loc 1 2957 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_36].xpv_cur, D.22767
	movq	-280(%rbp), %rax	# lp, tmp383
	movq	%rdx, (%rax)	# D.22767, *lp_28(D)
	.loc 1 2958 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_38].xpv_pv, D.22763
	jmp	.L701	#
.L608:
	.loc 1 2960 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$16777216, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L609	#,
	.loc 1 2961 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	testl	%eax, %eax	# D.22768
	jns	.L610	#,
	.loc 1 2962 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	24(%rax), %rdx	# MEM[(struct XPVUV *)_44].xuv_uv, D.22767
	movq	-184(%rbp), %rax	# tmpbuf, tmp384
	movl	$.LC15, %esi	#,
	movq	%rax, %rdi	# tmp384,
	movl	$0, %eax	#,
	call	sprintf	#
	jmp	.L611	#
.L610:
	.loc 1 2964 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_46].xiv_iv, D.22769
	movq	-184(%rbp), %rax	# tmpbuf, tmp385
	movl	$.LC16, %esi	#,
	movq	%rax, %rdi	# tmp385,
	movl	$0, %eax	#,
	call	sprintf	#
.L611:
	.loc 1 2965 0
	movq	$0, -232(%rbp)	#, tsv
	.loc 1 2966 0
	jmp	.L612	#
.L609:
	.loc 1 2968 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$33554432, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L613	#,
	.loc 1 2969 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_51].xnv_nv, D.22770
	movq	-184(%rbp), %rdx	# tmpbuf, tmp386
	movq	%rdx, %rsi	# tmp386,
	movl	$15, %edi	#,
	movq	%rax, -296(%rbp)	# D.22770, %sfp
	movsd	-296(%rbp), %xmm0	# %sfp,
	call	gcvt	#
	.loc 1 2970 0
	movq	$0, -232(%rbp)	#, tsv
	.loc 1 2971 0
	jmp	.L612	#
.L613:
	.loc 1 2973 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$524288, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	jne	.L606	#,
	.loc 1 2974 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$512, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	jne	.L614	#,
	.loc 1 2975 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.283
	movq	80(%rax), %rax	# PL_curcop.283_58->cop_warnings, D.22771
	testq	%rax, %rax	# D.22771
	je	.L615	#,
	.loc 1 2975 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.284
	movq	80(%rax), %rax	# PL_curcop.284_60->cop_warnings, D.22771
	cmpq	$32, %rax	#, D.22771
	je	.L615	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.285
	movq	80(%rax), %rax	# PL_curcop.285_62->cop_warnings, D.22771
	cmpq	$16, %rax	#, D.22771
	je	.L616	#,
	.loc 1 2975 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.286
	movq	80(%rax), %rax	# PL_curcop.286_64->cop_warnings, D.22771
	movq	(%rax), %rax	# _65->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_66].xpv_pv, D.22763
	addq	$10, %rax	#, D.22763
	movzbl	(%rax), %eax	# *_68, D.22772
	movsbl	%al, %eax	# D.22772, D.22765
	andl	$4, %eax	#, D.22765
	testl	%eax, %eax	# D.22765
	jne	.L616	#,
.L615:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.287
	movq	80(%rax), %rax	# PL_curcop.287_72->cop_warnings, D.22771
	testq	%rax, %rax	# D.22771
	jne	.L614	#,
	.loc 1 2975 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.288
	movzbl	%al, %eax	# PL_dowarn.288, D.22765
	andl	$1, %eax	#, D.22765
	testl	%eax, %eax	# D.22765
	je	.L614	#,
.L616:
	movl	PL_localizing(%rip), %eax	# PL_localizing, PL_localizing.289
	testl	%eax, %eax	# PL_localizing.289
	jne	.L614	#,
	.loc 1 2976 0 is_stmt 1
	call	Perl_report_uninit	#
.L614:
	.loc 1 2978 0
	movq	-280(%rbp), %rax	# lp, tmp387
	movq	$0, (%rax)	#, *lp_28(D)
	.loc 1 2979 0
	movl	$.LC1, %eax	#, D.22763
	jmp	.L701	#
.L606:
	.loc 1 2982 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$9961472, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L617	#,
	.loc 1 2983 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$524288, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L618	#,
.LBB19:
	.loc 1 2985 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$268435456, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L619	#,
	.loc 1 2985 0 is_stmt 0 discriminator 1
	movl	$9, %ecx	#,
	movl	$4, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_amagic_call	#
	movq	%rax, -176(%rbp)	# tmp388, tmpstr
	cmpq	$0, -176(%rbp)	#, tmpstr
	je	.L619	#,
	.loc 1 2986 0 is_stmt 1 discriminator 1
	movq	-176(%rbp), %rax	# tmpstr, tmp389
	movl	12(%rax), %eax	# tmpstr_110->sv_flags, D.22764
	andl	$524288, %eax	#, D.22764
	.loc 1 2985 0 discriminator 1
	testl	%eax, %eax	# D.22764
	je	.L620	#,
	.loc 1 2986 0
	movq	-176(%rbp), %rax	# tmpstr, tmp390
	movq	(%rax), %rax	# tmpstr_110->sv_any, D.22766
	movq	(%rax), %rdx	# MEM[(struct XRV *)_113].xrv_rv, D.22771
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XRV *)_115].xrv_rv, D.22771
	cmpq	%rax, %rdx	# D.22771, D.22771
	je	.L619	#,
.L620:
.LBB20:
	.loc 1 2987 0
	movq	-176(%rbp), %rax	# tmpstr, tmp391
	movl	12(%rax), %eax	# tmpstr_110->sv_flags, D.22764
	andl	$262144, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L621	#,
	.loc 1 2987 0 is_stmt 0 discriminator 1
	movq	-176(%rbp), %rax	# tmpstr, tmp392
	movq	(%rax), %rax	# tmpstr_110->sv_any, D.22766
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_119].xpv_cur, D.22767
	movq	-280(%rbp), %rax	# lp, tmp393
	movq	%rdx, (%rax)	# D.22767, *lp_28(D)
	movq	-176(%rbp), %rax	# tmpstr, tmp394
	movq	(%rax), %rax	# tmpstr_110->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_121].xpv_pv, iftmp.290
	jmp	.L622	#
.L621:
	.loc 1 2987 0 discriminator 2
	movq	-280(%rbp), %rcx	# lp, tmp395
	movq	-176(%rbp), %rax	# tmpstr, tmp396
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp395,
	movq	%rax, %rdi	# tmp396,
	call	Perl_sv_2pv_flags	#
.L622:
	.loc 1 2987 0 discriminator 3
	movq	%rax, -168(%rbp)	# iftmp.290, pv
	.loc 1 2988 0 is_stmt 1 discriminator 3
	movq	-176(%rbp), %rax	# tmpstr, tmp397
	movl	12(%rax), %eax	# tmpstr_110->sv_flags, D.22764
	andl	$536870912, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L623	#,
	.loc 1 2989 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	orl	$536870912, %eax	#, D.22764
	movl	%eax, 12(%rbx)	# D.22764, sv_27(D)->sv_flags
	jmp	.L624	#
.L623:
	.loc 1 2991 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$-536870913, %eax	#, D.22764
	movl	%eax, 12(%rbx)	# D.22764, sv_27(D)->sv_flags
.L624:
	.loc 1 2992 0
	movq	-168(%rbp), %rax	# pv, D.22763
	jmp	.L701	#
.L619:
.LBE20:
	.loc 1 2994 0
	movq	%rbx, -160(%rbp)	# sv, origsv
	.loc 1 2995 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	(%rax), %rbx	# MEM[(struct XRV *)_133].xrv_rv, sv
	.loc 1 2996 0
	testq	%rbx, %rbx	# sv
	jne	.L625	#,
	.loc 1 2997 0
	movl	$.LC17, %r12d	#, s
	.loc 1 3120 0
	movq	%r12, %rdi	# s,
	call	strlen	#
	movq	-280(%rbp), %rdx	# lp, tmp459
	movq	%rax, (%rdx)	# D.22767, *lp_28(D)
	.loc 1 3121 0
	movq	%r12, %rax	# s, D.22763
	jmp	.L701	#
.L625:
.LBB21:
	.loc 1 3001 0
	movl	12(%rbx), %eax	# sv_134->sv_flags, D.22764
	movzbl	%al, %eax	# D.22764, D.22764
	cmpl	$15, %eax	#, D.22764
	ja	.L627	#,
	movl	%eax, %eax	# D.22764, tmp398
	movq	.L629(,%rax,8), %rax	#, tmp399
	jmp	*%rax	# tmp399
	.section	.rodata
	.align 8
	.align 4
.L629:
	.quad	.L628
	.quad	.L628
	.quad	.L628
	.quad	.L628
	.quad	.L628
	.quad	.L628
	.quad	.L628
	.quad	.L630
	.quad	.L628
	.quad	.L631
	.quad	.L632
	.quad	.L633
	.quad	.L634
	.quad	.L635
	.quad	.L636
	.quad	.L637
	.text
.L630:
	.loc 1 3003 0
	movl	12(%rbx), %eax	# sv_134->sv_flags, D.22764
	andl	$118484992, %eax	#, D.22764
	cmpl	$20480, %eax	#, D.22764
	jne	.L628	#,
	.loc 1 3006 0
	movl	$114, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_find	#
	movq	%rax, -152(%rbp)	# tmp400, mg
	cmpq	$0, -152(%rbp)	#, mg
	je	.L628	#,
.LBB22:
	.loc 1 3007 0
	movq	-152(%rbp), %rax	# mg, tmp401
	movq	24(%rax), %rax	# mg_142->mg_obj, tmp402
	movq	%rax, -144(%rbp)	# tmp402, re
	.loc 1 3009 0
	movq	-152(%rbp), %rax	# mg, tmp403
	movq	32(%rax), %rax	# mg_142->mg_ptr, D.22763
	testq	%rax, %rax	# D.22763
	jne	.L638	#,
.LBB23:
	.loc 1 3010 0
	movq	$.LC18, -224(%rbp)	#, fptr
	.loc 1 3013 0
	movl	$0, -260(%rbp)	#, left
	.loc 1 3014 0
	movl	$4, -256(%rbp)	#, right
	.loc 1 3015 0
	movb	$0, -265(%rbp)	#, need_newline
	.loc 1 3016 0
	movq	-144(%rbp), %rax	# re, tmp404
	movl	92(%rax), %eax	# re_143->reganch, D.22764
	andl	$63488, %eax	#, D.22764
	shrl	$12, %eax	#, D.22764
	movw	%ax, -262(%rbp)	# D.22764, reganch
	.loc 1 3018 0
	jmp	.L639	#
.L642:
	.loc 1 3019 0
	movzwl	-262(%rbp), %eax	# reganch, D.22765
	andl	$1, %eax	#, D.22765
	testl	%eax, %eax	# D.22765
	je	.L640	#,
	.loc 1 3020 0
	movl	-260(%rbp), %eax	# left, left.291
	leal	1(%rax), %edx	#, tmp405
	movl	%edx, -260(%rbp)	# tmp405, left
	cltq
	movzbl	-264(%rbp), %edx	# ch, tmp407
	movb	%dl, -128(%rbp,%rax)	# tmp407, reflags
	jmp	.L641	#
.L640:
	.loc 1 3023 0
	movl	-256(%rbp), %eax	# right, right.292
	leal	-1(%rax), %edx	#, tmp408
	movl	%edx, -256(%rbp)	# tmp408, right
	cltq
	movzbl	-264(%rbp), %edx	# ch, tmp410
	movb	%dl, -128(%rbp,%rax)	# tmp410, reflags
.L641:
	.loc 1 3025 0
	shrw	-262(%rbp)	# reganch
.L639:
	.loc 1 3018 0 discriminator 1
	movq	-224(%rbp), %rax	# fptr, fptr.293
	leaq	1(%rax), %rdx	#, tmp411
	movq	%rdx, -224(%rbp)	# tmp411, fptr
	movzbl	(%rax), %eax	# *fptr.293_153, tmp412
	movb	%al, -264(%rbp)	# tmp412, ch
	cmpb	$0, -264(%rbp)	#, ch
	jne	.L642	#,
	.loc 1 3027 0
	cmpl	$4, -260(%rbp)	#, left
	je	.L643	#,
	.loc 1 3028 0
	movl	-260(%rbp), %eax	# left, tmp414
	cltq
	movb	$45, -128(%rbp,%rax)	#, reflags
	.loc 1 3029 0
	movl	$5, -260(%rbp)	#, left
.L643:
	.loc 1 3032 0
	movq	-144(%rbp), %rax	# re, tmp415
	movl	76(%rax), %eax	# re_143->prelen, D.22765
	leal	4(%rax), %edx	#, D.22765
	movl	-260(%rbp), %eax	# left, tmp416
	addl	%eax, %edx	# tmp416, D.22765
	movq	-152(%rbp), %rax	# mg, tmp417
	movl	%edx, 40(%rax)	# D.22765, mg_142->mg_len
	.loc 1 3048 0
	movq	-144(%rbp), %rax	# re, tmp418
	movl	92(%rax), %eax	# re_143->reganch, D.22764
	andl	$32768, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L644	#,
.LBB24:
	.loc 1 3050 0
	movq	-144(%rbp), %rax	# re, tmp419
	movq	32(%rax), %rdx	# re_143->precomp, D.22763
	movq	-144(%rbp), %rax	# re, tmp420
	movl	76(%rax), %eax	# re_143->prelen, D.22765
	cltq
	addq	%rdx, %rax	# D.22763, tmp421
	movq	%rax, -216(%rbp)	# tmp421, endptr
	.loc 1 3051 0
	jmp	.L645	#
.L647:
.LBB25:
	.loc 1 3053 0
	movq	-216(%rbp), %rax	# endptr, endptr.294
	leaq	-1(%rax), %rdx	#, tmp422
	movq	%rdx, -216(%rbp)	# tmp422, endptr
	movzbl	(%rax), %eax	# *endptr.294_174, tmp423
	movb	%al, -263(%rbp)	# tmp423, c
	.loc 1 3054 0
	cmpb	$10, -263(%rbp)	#, c
	jne	.L646	#,
	.loc 1 3055 0
	jmp	.L644	#
.L646:
	.loc 1 3056 0
	cmpb	$35, -263(%rbp)	#, c
	jne	.L645	#,
	.loc 1 3059 0
	movq	-152(%rbp), %rax	# mg, tmp424
	movl	40(%rax), %eax	# mg_142->mg_len, D.22765
	leal	1(%rax), %edx	#, D.22765
	movq	-152(%rbp), %rax	# mg, tmp425
	movl	%edx, 40(%rax)	# D.22765, mg_142->mg_len
	.loc 1 3060 0
	movb	$1, -265(%rbp)	#, need_newline
	.loc 1 3061 0
	jmp	.L644	#
.L645:
.LBE25:
	.loc 1 3051 0 discriminator 1
	movq	-144(%rbp), %rax	# re, tmp426
	movq	32(%rax), %rax	# re_143->precomp, D.22763
	cmpq	-216(%rbp), %rax	# endptr, D.22763
	jbe	.L647	#,
.L644:
.LBE24:
	.loc 1 3066 0
	movq	-152(%rbp), %rax	# mg, tmp427
	movl	40(%rax), %eax	# mg_142->mg_len, D.22765
	leal	1(%rax), %edx	#, D.22765
	movl	-260(%rbp), %eax	# left, tmp428
	addl	%edx, %eax	# D.22765, D.22765
	cltq
	movq	%rax, %rdi	# D.22767,
	call	Perl_safesysmalloc	#
	movq	-152(%rbp), %rdx	# mg, tmp429
	movq	%rax, 32(%rdx)	# D.22766, mg_142->mg_ptr
	.loc 1 3067 0
	movq	-152(%rbp), %rax	# mg, tmp430
	movq	32(%rax), %rax	# mg_142->mg_ptr, D.22763
	movl	$2, %edx	#,
	movl	$.LC19, %esi	#,
	movq	%rax, %rdi	# D.22763,
	call	memcpy	#
	.loc 1 3068 0
	movl	-260(%rbp), %eax	# left, tmp431
	movslq	%eax, %rdx	# tmp431, D.22767
	movq	-152(%rbp), %rax	# mg, tmp432
	movq	32(%rax), %rax	# mg_142->mg_ptr, D.22763
	leaq	2(%rax), %rcx	#, D.22763
	leaq	-128(%rbp), %rax	#, tmp433
	movq	%rax, %rsi	# tmp433,
	movq	%rcx, %rdi	# D.22763,
	call	memcpy	#
	.loc 1 3069 0
	movq	-152(%rbp), %rax	# mg, tmp434
	movq	32(%rax), %rax	# mg_142->mg_ptr, D.22763
	movl	-260(%rbp), %edx	# left, tmp435
	movslq	%edx, %rdx	# tmp435, D.22773
	addq	$2, %rdx	#, D.22773
	addq	%rdx, %rax	# D.22773, D.22763
	movl	$1, %edx	#,
	movl	$.LC20, %esi	#,
	movq	%rax, %rdi	# D.22763,
	call	memcpy	#
	.loc 1 3070 0
	movq	-144(%rbp), %rax	# re, tmp436
	movl	76(%rax), %eax	# re_143->prelen, D.22765
	movslq	%eax, %rdx	# D.22765, D.22767
	movq	-144(%rbp), %rax	# re, tmp437
	movq	32(%rax), %rax	# re_143->precomp, D.22763
	movq	-152(%rbp), %rcx	# mg, tmp438
	movq	32(%rcx), %rcx	# mg_142->mg_ptr, D.22763
	movl	-260(%rbp), %esi	# left, tmp439
	movslq	%esi, %rsi	# tmp439, D.22773
	addq	$3, %rsi	#, D.22773
	addq	%rsi, %rcx	# D.22773, D.22763
	movq	%rax, %rsi	# D.22763,
	movq	%rcx, %rdi	# D.22763,
	call	memcpy	#
	.loc 1 3071 0
	cmpb	$0, -265(%rbp)	#, need_newline
	je	.L648	#,
	.loc 1 3072 0
	movq	-152(%rbp), %rax	# mg, tmp440
	movq	32(%rax), %rdx	# mg_142->mg_ptr, D.22763
	movq	-152(%rbp), %rax	# mg, tmp441
	movl	40(%rax), %eax	# mg_142->mg_len, D.22765
	cltq
	subq	$2, %rax	#, D.22773
	addq	%rdx, %rax	# D.22763, D.22763
	movb	$10, (%rax)	#, *_204
.L648:
	.loc 1 3073 0
	movq	-152(%rbp), %rax	# mg, tmp442
	movq	32(%rax), %rdx	# mg_142->mg_ptr, D.22763
	movq	-152(%rbp), %rax	# mg, tmp443
	movl	40(%rax), %eax	# mg_142->mg_len, D.22765
	cltq
	subq	$1, %rax	#, D.22773
	addq	%rdx, %rax	# D.22763, D.22763
	movb	$41, (%rax)	#, *_209
	.loc 1 3074 0
	movq	-152(%rbp), %rax	# mg, tmp444
	movq	32(%rax), %rdx	# mg_142->mg_ptr, D.22763
	movq	-152(%rbp), %rax	# mg, tmp445
	movl	40(%rax), %eax	# mg_142->mg_len, D.22765
	cltq
	addq	%rdx, %rax	# D.22763, D.22763
	movb	$0, (%rax)	#, *_213
.L638:
.LBE23:
	.loc 1 3076 0
	movq	-144(%rbp), %rax	# re, tmp446
	movzwl	98(%rax), %eax	# re_143->program[0].next_off, D.22774
	movzwl	%ax, %edx	# D.22774, D.22765
	movl	PL_reginterp_cnt(%rip), %eax	# PL_reginterp_cnt, PL_reginterp_cnt.295
	addl	%edx, %eax	# D.22765, PL_reginterp_cnt.296
	movl	%eax, PL_reginterp_cnt(%rip)	# PL_reginterp_cnt.296, PL_reginterp_cnt
	.loc 1 3078 0
	movq	-144(%rbp), %rax	# re, tmp447
	movl	92(%rax), %eax	# re_143->reganch, D.22764
	andl	$65536, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L649	#,
	.loc 1 3079 0
	movq	-160(%rbp), %rax	# origsv, tmp448
	movl	12(%rax), %eax	# origsv_132->sv_flags, D.22764
	orl	$536870912, %eax	#, D.22764
	movl	%eax, %edx	# D.22764, D.22764
	movq	-160(%rbp), %rax	# origsv, tmp449
	movl	%edx, 12(%rax)	# D.22764, origsv_132->sv_flags
	jmp	.L650	#
.L649:
	.loc 1 3081 0
	movq	-160(%rbp), %rax	# origsv, tmp450
	movl	12(%rax), %eax	# origsv_132->sv_flags, D.22764
	andl	$-536870913, %eax	#, D.22764
	movl	%eax, %edx	# D.22764, D.22764
	movq	-160(%rbp), %rax	# origsv, tmp451
	movl	%edx, 12(%rax)	# D.22764, origsv_132->sv_flags
.L650:
	.loc 1 3082 0
	movq	-152(%rbp), %rax	# mg, tmp452
	movl	40(%rax), %eax	# mg_142->mg_len, D.22765
	movslq	%eax, %rdx	# D.22765, D.22767
	movq	-280(%rbp), %rax	# lp, tmp453
	movq	%rdx, (%rax)	# D.22767, *lp_28(D)
	.loc 1 3083 0
	movq	-152(%rbp), %rax	# mg, tmp454
	movq	32(%rax), %rax	# mg_142->mg_ptr, D.22763
	jmp	.L701	#
.L628:
.LBE22:
	.loc 1 3093 0
	movl	12(%rbx), %eax	# sv_134->sv_flags, D.22764
	andl	$524288, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L651	#,
	.loc 1 3094 0
	movl	$.LC21, %r12d	#, s
	.loc 1 3096 0
	jmp	.L653	#
.L651:
	movl	$.LC22, %r12d	#, s
	jmp	.L653	#
.L631:
	.loc 1 3097 0
	movl	12(%rbx), %eax	# sv_134->sv_flags, D.22764
	andl	$524288, %eax	#, D.22764
	.loc 1 3100 0
	testl	%eax, %eax	# D.22764
	jne	.L654	#,
	.loc 1 3100 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_134->sv_any, D.22766
	movzbl	80(%rax), %eax	# MEM[(struct XPVLV *)_233].xlv_type, D.22772
	.loc 1 3101 0 is_stmt 1 discriminator 1
	cmpb	$116, %al	#, D.22772
	je	.L655	#,
	.loc 1 3100 0
	movq	(%rbx), %rax	# sv_134->sv_any, D.22766
	movzbl	80(%rax), %eax	# MEM[(struct XPVLV *)_235].xlv_type, D.22772
	cmpb	$84, %al	#, D.22772
	jne	.L656	#,
.L655:
	.loc 1 3101 0 discriminator 1
	movl	$.LC22, %eax	#, iftmp.298
	jmp	.L657	#
.L656:
	.loc 1 3101 0 is_stmt 0
	movl	$.LC23, %eax	#, iftmp.298
.L657:
	jmp	.L658	#
.L654:
	.loc 1 3100 0 is_stmt 1 discriminator 2
	movl	$.LC21, %eax	#, iftmp.297
.L658:
	.loc 1 3097 0
	movq	%rax, %r12	# iftmp.297, s
	.loc 1 3101 0
	jmp	.L653	#
.L632:
	.loc 1 3102 0
	movl	$.LC24, %r12d	#, s
	jmp	.L653	#
.L633:
	.loc 1 3103 0
	movl	$.LC25, %r12d	#, s
	jmp	.L653	#
.L634:
	.loc 1 3104 0
	movl	$.LC26, %r12d	#, s
	jmp	.L653	#
.L635:
	.loc 1 3105 0
	movl	$.LC27, %r12d	#, s
	jmp	.L653	#
.L636:
	.loc 1 3106 0
	movl	$.LC28, %r12d	#, s
	jmp	.L653	#
.L637:
	.loc 1 3107 0
	movl	$.LC29, %r12d	#, s
	jmp	.L653	#
.L627:
	.loc 1 3108 0
	movl	$.LC30, %r12d	#, s
	nop
.L653:
	.loc 1 3110 0
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -232(%rbp)	# tmp455, tsv
	.loc 1 3111 0
	movl	12(%rbx), %eax	# sv_134->sv_flags, D.22764
	andl	$4096, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L659	#,
.LBB26:
	.loc 1 3112 0
	movq	(%rbx), %rax	# sv_134->sv_any, D.22766
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_252].xmg_stash, D.22775
	movq	(%rax), %rax	# _253->sv_any, D.22776
	movq	80(%rax), %rax	# _254->xhv_name, tmp456
	movq	%rax, -136(%rbp)	# tmp456, name
	.loc 1 3113 0
	movq	%rbx, %rdx	# sv, sv.299
	cmpq	$0, -136(%rbp)	#, name
	je	.L660	#,
	.loc 1 3113 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# name, iftmp.300
	jmp	.L661	#
.L660:
	.loc 1 3113 0 discriminator 2
	movl	$.LC31, %eax	#, iftmp.300
.L661:
	.loc 1 3113 0 discriminator 1
	movq	-232(%rbp), %rdi	# tsv, tmp457
	movq	%rdx, %r8	# sv.299,
	movq	%r12, %rcx	# s,
	movq	%rax, %rdx	# iftmp.300,
	movl	$.LC32, %esi	#,
	movl	$0, %eax	#,
	call	Perl_sv_setpvf	#
.LBE26:
	.loc 1 3118 0 is_stmt 1 discriminator 1
	jmp	.L663	#
.L659:
	.loc 1 3117 0
	movq	%rbx, %rdx	# sv, sv.301
	movq	-232(%rbp), %rax	# tsv, tmp458
	movq	%rdx, %rcx	# sv.301,
	movq	%r12, %rdx	# s,
	movl	$.LC33, %esi	#,
	movq	%rax, %rdi	# tmp458,
	movl	$0, %eax	#,
	call	Perl_sv_setpvf	#
	.loc 1 3118 0
	jmp	.L663	#
.L618:
.LBE21:
.LBE19:
	.loc 1 3123 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$8388608, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L617	#,
	.loc 1 3123 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$118423552, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	jne	.L617	#,
	.loc 1 3124 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.302
	movq	80(%rax), %rax	# PL_curcop.302_264->cop_warnings, D.22771
	testq	%rax, %rax	# D.22771
	je	.L664	#,
	.loc 1 3124 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.303
	movq	80(%rax), %rax	# PL_curcop.303_266->cop_warnings, D.22771
	cmpq	$32, %rax	#, D.22771
	je	.L664	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.304
	movq	80(%rax), %rax	# PL_curcop.304_268->cop_warnings, D.22771
	cmpq	$16, %rax	#, D.22771
	je	.L665	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.305
	movq	80(%rax), %rax	# PL_curcop.305_270->cop_warnings, D.22771
	movq	(%rax), %rax	# _271->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_272].xpv_pv, D.22763
	addq	$10, %rax	#, D.22763
	movzbl	(%rax), %eax	# *_274, D.22772
	movsbl	%al, %eax	# D.22772, D.22765
	andl	$4, %eax	#, D.22765
	testl	%eax, %eax	# D.22765
	jne	.L665	#,
.L664:
	.loc 1 3124 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.306
	movq	80(%rax), %rax	# PL_curcop.306_278->cop_warnings, D.22771
	testq	%rax, %rax	# D.22771
	jne	.L666	#,
	.loc 1 3124 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.307
	movzbl	%al, %eax	# PL_dowarn.307, D.22765
	andl	$1, %eax	#, D.22765
	testl	%eax, %eax	# D.22765
	je	.L666	#,
.L665:
	.loc 1 3125 0 is_stmt 1
	call	Perl_report_uninit	#
.L666:
	.loc 1 3126 0
	movq	-280(%rbp), %rax	# lp, tmp460
	movq	$0, (%rax)	#, *lp_28(D)
	.loc 1 3127 0
	movl	$.LC1, %eax	#, D.22763
	jmp	.L701	#
.L617:
	.loc 1 3130 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$65536, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	jne	.L667	#,
	.loc 1 3130 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$16777216, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L668	#,
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$33554432, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	jne	.L668	#,
.L667:
.LBB27:
	.loc 1 3133 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$65536, %eax	#, tmp461
	movl	%eax, -248(%rbp)	# tmp461, isIOK
	.loc 1 3134 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$-2147483648, %eax	#, tmp462
	movl	%eax, -244(%rbp)	# tmp462, isUIOK
	.loc 1 3138 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	movzbl	%al, %eax	# D.22764, D.22764
	cmpl	$4, %eax	#, D.22764
	ja	.L669	#,
	.loc 1 3139 0
	movl	$5, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L669:
	.loc 1 3140 0
	cmpl	$0, -244(%rbp)	#, isUIOK
	je	.L670	#,
	.loc 1 3141 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	24(%rax), %rdx	# MEM[(struct XPVUV *)_339].xuv_uv, D.22767
	leaq	-240(%rbp), %rcx	#, tmp463
	leaq	-128(%rbp), %rax	#, tmp464
	movq	%rcx, %r8	# tmp463,
	movl	$1, %ecx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp464,
	call	uiv_2buf	#
	movq	%rax, -208(%rbp)	# tmp465, ptr
	jmp	.L671	#
.L670:
	.loc 1 3143 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	24(%rax), %rsi	# MEM[(struct XPVIV *)_342].xiv_iv, D.22769
	leaq	-240(%rbp), %rdx	#, tmp466
	leaq	-128(%rbp), %rax	#, tmp467
	movq	%rdx, %r8	# tmp466,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# tmp467,
	call	uiv_2buf	#
	movq	%rax, -208(%rbp)	# tmp468, ptr
.L671:
	.loc 1 3144 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_345].xpv_len, D.22767
	movq	-240(%rbp), %rax	# ebuf, ebuf.309
	movq	%rax, %rcx	# ebuf.309, ebuf.310
	movq	-208(%rbp), %rax	# ptr, ptr.311
	subq	%rax, %rcx	# ptr.311, D.22769
	movq	%rcx, %rax	# D.22769, D.22769
	addq	$1, %rax	#, D.22769
	cmpq	%rax, %rdx	# D.22767, D.22767
	jae	.L673	#,
	.loc 1 3144 0 is_stmt 0 discriminator 1
	movq	-240(%rbp), %rax	# ebuf, ebuf.312
	movq	%rax, %rdx	# ebuf.312, ebuf.313
	movq	-208(%rbp), %rax	# ptr, ptr.314
	subq	%rax, %rdx	# ptr.314, D.22769
	movq	%rdx, %rax	# D.22769, D.22769
	addq	$1, %rax	#, D.22769
	movq	%rax, %rsi	# D.22767,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L673:
	.loc 1 3145 0 is_stmt 1
	movq	-240(%rbp), %rax	# ebuf, ebuf.315
	movq	%rax, %rdx	# ebuf.315, ebuf.316
	movq	-208(%rbp), %rax	# ptr, ptr.317
	subq	%rax, %rdx	# ptr.317, D.22769
	movq	%rdx, %rax	# D.22769, D.22769
	movq	%rax, %rdx	# D.22769, D.22767
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_367].xpv_pv, D.22763
	movq	-208(%rbp), %rcx	# ptr, tmp469
	movq	%rcx, %rsi	# tmp469,
	movq	%rax, %rdi	# D.22763,
	call	memmove	#
	.loc 1 3146 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	-240(%rbp), %rdx	# ebuf, ebuf.318
	movq	%rdx, %rcx	# ebuf.318, ebuf.319
	movq	-208(%rbp), %rdx	# ptr, ptr.320
	subq	%rdx, %rcx	# ptr.320, D.22769
	movq	%rcx, %rdx	# D.22769, D.22769
	movq	%rdx, 8(%rax)	# D.22767, MEM[(struct XPV *)_369].xpv_cur
	.loc 1 3147 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	(%rax), %rdx	# MEM[(struct XPV *)_375].xpv_pv, D.22763
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	8(%rax), %rax	# MEM[(struct XPV *)_377].xpv_cur, D.22767
	leaq	(%rdx,%rax), %r12	#, s
	.loc 1 3148 0
	movb	$0, (%r12)	#, *s_379
	.loc 1 3149 0
	cmpl	$0, -248(%rbp)	#, isIOK
	je	.L674	#,
	.loc 1 3150 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$2097152, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L676	#,
	.loc 1 3150 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22765
	je	.L676	#,
	.loc 1 3150 0
	nop
.L676:
	.loc 1 3150 0 discriminator 3
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	orl	$16842752, %eax	#, D.22764
	movl	%eax, 12(%rbx)	# D.22764, sv_27(D)->sv_flags
	jmp	.L677	#
.L674:
	.loc 1 3152 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$2097152, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L679	#,
	.loc 1 3152 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22765
	je	.L679	#,
	.loc 1 3152 0
	nop
.L679:
	.loc 1 3152 0 discriminator 3
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	orl	$16777216, %eax	#, D.22764
	movl	%eax, 12(%rbx)	# D.22764, sv_27(D)->sv_flags
.L677:
	.loc 1 3153 0 is_stmt 1
	cmpl	$0, -244(%rbp)	#, isUIOK
	je	.L680	#,
	.loc 1 3154 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	orl	$-2147483648, %eax	#, D.22764
	movl	%eax, 12(%rbx)	# D.22764, sv_27(D)->sv_flags
.LBE27:
	.loc 1 3130 0
	jmp	.L681	#
.L680:
	jmp	.L681	#
.L668:
	.loc 1 3156 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$33554432, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L682	#,
	.loc 1 3157 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	movzbl	%al, %eax	# D.22764, D.22764
	cmpl	$5, %eax	#, D.22764
	ja	.L683	#,
	.loc 1 3158 0
	movl	$6, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L683:
	.loc 1 3160 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	16(%rax), %rax	# MEM[(struct XPV *)_294].xpv_len, D.22767
	cmpq	$34, %rax	#, D.22767
	ja	.L685	#,
	.loc 1 3160 0 is_stmt 0 discriminator 1
	movl	$35, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L685:
	.loc 1 3161 0 is_stmt 1
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	(%rax), %r12	# MEM[(struct XPV *)_299].xpv_pv, s
	.loc 1 3162 0
	call	__errno_location	#
	movl	(%rax), %eax	# *_301, tmp470
	movl	%eax, -252(%rbp)	# tmp470, olderrno
	.loc 1 3169 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_303].xnv_nv, D.22770
	movq	%r12, %rsi	# s,
	movl	$15, %edi	#,
	movq	%rax, -296(%rbp)	# D.22770, %sfp
	movsd	-296(%rbp), %xmm0	# %sfp,
	call	gcvt	#
	.loc 1 3171 0
	call	__errno_location	#
	movl	-252(%rbp), %edx	# olderrno, tmp471
	movl	%edx, (%rax)	# tmp471, *_305
	.loc 1 3176 0
	jmp	.L686	#
.L687:
	.loc 1 3176 0 is_stmt 0 discriminator 2
	addq	$1, %r12	#, s
.L686:
	.loc 1 3176 0 discriminator 1
	movzbl	(%r12), %eax	# *s_3, D.22772
	testb	%al, %al	# D.22772
	jne	.L687	#,
	jmp	.L681	#
.L682:
	.loc 1 3183 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.324
	movq	80(%rax), %rax	# PL_curcop.324_308->cop_warnings, D.22771
	testq	%rax, %rax	# D.22771
	je	.L688	#,
	.loc 1 3183 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.325
	movq	80(%rax), %rax	# PL_curcop.325_310->cop_warnings, D.22771
	cmpq	$32, %rax	#, D.22771
	je	.L688	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.326
	movq	80(%rax), %rax	# PL_curcop.326_312->cop_warnings, D.22771
	cmpq	$16, %rax	#, D.22771
	je	.L689	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.327
	movq	80(%rax), %rax	# PL_curcop.327_314->cop_warnings, D.22771
	movq	(%rax), %rax	# _315->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_316].xpv_pv, D.22763
	addq	$10, %rax	#, D.22763
	movzbl	(%rax), %eax	# *_318, D.22772
	movsbl	%al, %eax	# D.22772, D.22765
	andl	$4, %eax	#, D.22765
	testl	%eax, %eax	# D.22765
	jne	.L689	#,
.L688:
	.loc 1 3183 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.328
	movq	80(%rax), %rax	# PL_curcop.328_322->cop_warnings, D.22771
	testq	%rax, %rax	# D.22771
	jne	.L690	#,
	.loc 1 3183 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.329
	movzbl	%al, %eax	# PL_dowarn.329, D.22765
	andl	$1, %eax	#, D.22765
	testl	%eax, %eax	# D.22765
	je	.L690	#,
.L689:
	.loc 1 3184 0 is_stmt 1
	movl	PL_localizing(%rip), %eax	# PL_localizing, PL_localizing.330
	testl	%eax, %eax	# PL_localizing.330
	jne	.L690	#,
	.loc 1 3184 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$512, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	jne	.L690	#,
	.loc 1 3185 0 is_stmt 1
	call	Perl_report_uninit	#
.L690:
	.loc 1 3186 0
	movq	-280(%rbp), %rax	# lp, tmp472
	movq	$0, (%rax)	#, *lp_28(D)
	.loc 1 3187 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	movzbl	%al, %eax	# D.22764, D.22764
	cmpl	$3, %eax	#, D.22764
	ja	.L691	#,
	.loc 1 3189 0
	movl	$4, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L691:
	.loc 1 3190 0
	movl	$.LC1, %eax	#, D.22763
	jmp	.L701	#
.L681:
	.loc 1 3192 0
	movq	%r12, %rdx	# s, s.331
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_397].xpv_pv, D.22763
	subq	%rax, %rdx	# D.22769, D.22769
	movq	%rdx, %rax	# D.22769, D.22769
	movq	%rax, %rdx	# D.22769, D.22767
	movq	-280(%rbp), %rax	# lp, tmp473
	movq	%rdx, (%rax)	# D.22767, *lp_28(D)
	.loc 1 3193 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	-280(%rbp), %rdx	# lp, tmp474
	movq	(%rdx), %rdx	# *lp_28(D), D.22767
	movq	%rdx, 8(%rax)	# D.22767, MEM[(struct XPV *)_402].xpv_cur
	.loc 1 3194 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	orl	$67371008, %eax	#, D.22764
	movl	%eax, 12(%rbx)	# D.22764, sv_27(D)->sv_flags
	.loc 1 3197 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_406].xpv_pv, D.22763
	jmp	.L701	#
.L612:
	.loc 1 3200 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	andl	$524288, %eax	#, D.22764
	testl	%eax, %eax	# D.22764
	je	.L692	#,
.L663:
	.loc 1 3204 0
	cmpq	$0, -232(%rbp)	#, tsv
	jne	.L693	#,
	.loc 1 3205 0
	movq	-184(%rbp), %rax	# tmpbuf, tmp475
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp475,
	call	Perl_newSVpv	#
	movq	%rax, -232(%rbp)	# tmp476, tsv
.L693:
	.loc 1 3206 0
	movq	-232(%rbp), %rax	# tsv, tmp477
	movq	%rax, %rdi	# tmp477,
	call	Perl_sv_2mortal	#
	.loc 1 3207 0
	movq	-232(%rbp), %rax	# tsv, tmp478
	movq	(%rax), %rax	# tsv_7->sv_any, D.22766
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_409].xpv_cur, D.22767
	movq	-280(%rbp), %rax	# lp, tmp479
	movq	%rdx, (%rax)	# D.22767, *lp_28(D)
	.loc 1 3208 0
	movq	-232(%rbp), %rax	# tsv, tmp480
	movq	(%rax), %rax	# tsv_7->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_411].xpv_pv, D.22763
	jmp	.L701	#
.L692:
.LBB28:
	.loc 1 3214 0
	cmpq	$0, -232(%rbp)	#, tsv
	je	.L694	#,
	.loc 1 3215 0
	movq	-232(%rbp), %rax	# tsv, tmp481
	movq	%rax, %rdi	# tmp481,
	call	Perl_sv_2mortal	#
	.loc 1 3216 0
	movq	-232(%rbp), %rax	# tsv, tmp482
	movq	(%rax), %rax	# tsv_5->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_81].xpv_pv, tmp483
	movq	%rax, -192(%rbp)	# tmp483, t
	.loc 1 3217 0
	movq	-232(%rbp), %rax	# tsv, tmp484
	movq	(%rax), %rax	# tsv_5->sv_any, D.22766
	movq	8(%rax), %rax	# MEM[(struct XPV *)_83].xpv_cur, tmp485
	movq	%rax, -200(%rbp)	# tmp485, len
	jmp	.L695	#
.L694:
	.loc 1 3220 0
	movq	-184(%rbp), %rax	# tmpbuf, tmp486
	movq	%rax, -192(%rbp)	# tmp486, t
	.loc 1 3221 0
	movq	-184(%rbp), %rax	# tmpbuf, tmp487
	movq	%rax, %rdi	# tmp487,
	call	strlen	#
	movq	%rax, -200(%rbp)	# tmp488, len
.L695:
	.loc 1 3229 0
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	movzbl	%al, %eax	# D.22764, D.22764
	cmpl	$3, %eax	#, D.22764
	ja	.L696	#,
	.loc 1 3229 0 is_stmt 0 discriminator 2
	movl	$4, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.22772
	je	.L698	#,
.L696:
	.loc 1 3229 0 discriminator 1
	nop
.L698:
	.loc 1 3230 0 is_stmt 1
	movq	-280(%rbp), %rax	# lp, tmp489
	movq	-200(%rbp), %rdx	# len, tmp490
	movq	%rdx, (%rax)	# tmp490, *lp_28(D)
	.loc 1 3231 0
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	16(%rax), %rax	# MEM[(struct XPV *)_92].xpv_len, D.22767
	movq	-200(%rbp), %rdx	# len, tmp491
	addq	$1, %rdx	#, D.22767
	cmpq	%rdx, %rax	# D.22767, D.22767
	jae	.L699	#,
	.loc 1 3231 0 is_stmt 0 discriminator 1
	movq	-200(%rbp), %rax	# len, tmp492
	addq	$1, %rax	#, D.22767
	movq	%rax, %rsi	# D.22767,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
	jmp	.L700	#
.L699:
	.loc 1 3231 0 discriminator 2
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	(%rax), %rax	# MEM[(struct XPV *)_97].xpv_pv, iftmp.333
.L700:
	.loc 1 3231 0 discriminator 3
	movq	%rax, %r12	# iftmp.333, s
	.loc 1 3232 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_27(D)->sv_any, D.22766
	movq	-200(%rbp), %rdx	# len, tmp493
	movq	%rdx, 8(%rax)	# tmp493, MEM[(struct XPV *)_100].xpv_cur
	.loc 1 3233 0 discriminator 3
	movl	12(%rbx), %eax	# sv_27(D)->sv_flags, D.22764
	orl	$67108864, %eax	#, D.22764
	movl	%eax, 12(%rbx)	# D.22764, sv_27(D)->sv_flags
	.loc 1 3234 0 discriminator 3
	movq	-192(%rbp), %rax	# t, tmp494
	movq	%rax, %rsi	# tmp494,
	movq	%r12, %rdi	# s,
	call	strcpy	#
.L701:
.LBE28:
	.loc 1 3236 0
	movq	-24(%rbp), %rcx	# D.22779, tmp497
	xorq	%fs:40, %rcx	#, tmp497
	je	.L702	#,
	call	__stack_chk_fail	#
.L702:
	addq	$288, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE69:
	.size	Perl_sv_2pv_flags, .-Perl_sv_2pv_flags
	.globl	Perl_sv_copypv
	.type	Perl_sv_copypv, @function
Perl_sv_copypv:
.LFB70:
	.loc 1 3254 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# dsv, dsv
	movq	%rsi, %rbx	# ssv, ssv
	.loc 1 3257 0
	movl	12(%rbx), %eax	# ssv_2(D)->sv_flags, D.22799
	andl	$262144, %eax	#, D.22799
	testl	%eax, %eax	# D.22799
	je	.L704	#,
	.loc 1 3257 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# ssv_2(D)->sv_any, D.22800
	movq	8(%rax), %rax	# MEM[(struct XPV *)_5].xpv_cur, len.335
	movq	%rax, -32(%rbp)	# len.335, len
	movq	(%rbx), %rax	# ssv_2(D)->sv_any, D.22800
	movq	(%rax), %rax	# MEM[(struct XPV *)_7].xpv_pv, iftmp.334
	jmp	.L705	#
.L704:
	.loc 1 3257 0 discriminator 2
	leaq	-32(%rbp), %rax	#, tmp73
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp73,
	movq	%rbx, %rdi	# ssv,
	call	Perl_sv_2pv_flags	#
.L705:
	.loc 1 3257 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.334, s
	.loc 1 3258 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rdx	# len, len.336
	movq	-24(%rbp), %rcx	# s, tmp74
	movq	-40(%rbp), %rax	# dsv, tmp75
	movq	%rcx, %rsi	# tmp74,
	movq	%rax, %rdi	# tmp75,
	call	Perl_sv_setpvn	#
	.loc 1 3259 0 discriminator 3
	movl	12(%rbx), %eax	# ssv_2(D)->sv_flags, D.22799
	andl	$536870912, %eax	#, D.22799
	testl	%eax, %eax	# D.22799
	je	.L706	#,
	.loc 1 3260 0
	movq	-40(%rbp), %rax	# dsv, tmp76
	movl	12(%rax), %eax	# dsv_12(D)->sv_flags, D.22799
	orl	$536870912, %eax	#, D.22799
	movl	%eax, %edx	# D.22799, D.22799
	movq	-40(%rbp), %rax	# dsv, tmp77
	movl	%edx, 12(%rax)	# D.22799, dsv_12(D)->sv_flags
	jmp	.L703	#
.L706:
	.loc 1 3262 0
	movq	-40(%rbp), %rax	# dsv, tmp78
	movl	12(%rax), %eax	# dsv_12(D)->sv_flags, D.22799
	andl	$-536870913, %eax	#, D.22799
	movl	%eax, %edx	# D.22799, D.22799
	movq	-40(%rbp), %rax	# dsv, tmp79
	movl	%edx, 12(%rax)	# D.22799, dsv_12(D)->sv_flags
.L703:
	.loc 1 3263 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE70:
	.size	Perl_sv_copypv, .-Perl_sv_copypv
	.globl	Perl_sv_2pvbyte_nolen
	.type	Perl_sv_2pvbyte_nolen, @function
Perl_sv_2pvbyte_nolen:
.LFB71:
	.loc 1 3278 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, %rax	# sv, sv
	.loc 1 3280 0
	leaq	-8(%rbp), %rdx	#, tmp62
	movq	%rdx, %rsi	# tmp62,
	movq	%rax, %rdi	# sv,
	call	Perl_sv_2pvbyte	#
	.loc 1 3281 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE71:
	.size	Perl_sv_2pvbyte_nolen, .-Perl_sv_2pvbyte_nolen
	.globl	Perl_sv_2pvbyte
	.type	Perl_sv_2pvbyte, @function
Perl_sv_2pvbyte:
.LFB72:
	.loc 1 3297 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, -24(%rbp)	# lp, lp
	.loc 1 3298 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_utf8_downgrade	#
	.loc 1 3299 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22802
	andl	$262144, %eax	#, D.22802
	testl	%eax, %eax	# D.22802
	je	.L711	#,
	.loc 1 3299 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22803
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_5].xpv_cur, D.22804
	movq	-24(%rbp), %rax	# lp, tmp68
	movq	%rdx, (%rax)	# D.22804, *lp_7(D)
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22803
	movq	(%rax), %rax	# MEM[(struct XPV *)_8].xpv_pv, iftmp.337
	jmp	.L712	#
.L711:
	.loc 1 3299 0 discriminator 2
	movq	-24(%rbp), %rax	# lp, tmp69
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp69,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
.L712:
	.loc 1 3300 0 is_stmt 1 discriminator 3
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE72:
	.size	Perl_sv_2pvbyte, .-Perl_sv_2pvbyte
	.globl	Perl_sv_2pvutf8_nolen
	.type	Perl_sv_2pvutf8_nolen, @function
Perl_sv_2pvutf8_nolen:
.LFB73:
	.loc 1 3315 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, %rax	# sv, sv
	.loc 1 3317 0
	leaq	-8(%rbp), %rdx	#, tmp62
	movq	%rdx, %rsi	# tmp62,
	movq	%rax, %rdi	# sv,
	call	Perl_sv_2pvutf8	#
	.loc 1 3318 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE73:
	.size	Perl_sv_2pvutf8_nolen, .-Perl_sv_2pvutf8_nolen
	.globl	Perl_sv_2pvutf8
	.type	Perl_sv_2pvutf8, @function
Perl_sv_2pvutf8:
.LFB74:
	.loc 1 3333 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, -24(%rbp)	# lp, lp
	.loc 1 3334 0
	movl	$2, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 3335 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22807
	andl	$262144, %eax	#, D.22807
	testl	%eax, %eax	# D.22807
	je	.L717	#,
	.loc 1 3335 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22808
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_5].xpv_cur, D.22809
	movq	-24(%rbp), %rax	# lp, tmp68
	movq	%rdx, (%rax)	# D.22809, *lp_7(D)
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22808
	movq	(%rax), %rax	# MEM[(struct XPV *)_8].xpv_pv, iftmp.338
	jmp	.L718	#
.L717:
	.loc 1 3335 0 discriminator 2
	movq	-24(%rbp), %rax	# lp, tmp69
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp69,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
.L718:
	.loc 1 3336 0 is_stmt 1 discriminator 3
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE74:
	.size	Perl_sv_2pvutf8, .-Perl_sv_2pvutf8
	.globl	Perl_sv_2bool
	.type	Perl_sv_2bool, @function
Perl_sv_2bool:
.LFB75:
	.loc 1 3349 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	.loc 1 3350 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22812
	andl	$8192, %eax	#, D.22812
	testl	%eax, %eax	# D.22812
	je	.L721	#,
	.loc 1 3351 0
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_get	#
.L721:
	.loc 1 3353 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22812
	andl	$118423552, %eax	#, D.22812
	testl	%eax, %eax	# D.22812
	jne	.L722	#,
	.loc 1 3354 0
	movl	$0, %eax	#, D.22811
	jmp	.L723	#
.L722:
	.loc 1 3355 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22812
	andl	$524288, %eax	#, D.22812
	testl	%eax, %eax	# D.22812
	je	.L724	#,
.LBB29:
	.loc 1 3357 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22812
	andl	$268435456, %eax	#, D.22812
	testl	%eax, %eax	# D.22812
	je	.L725	#,
	.loc 1 3357 0 is_stmt 0 discriminator 1
	movl	$9, %ecx	#,
	movl	$2, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_amagic_call	#
	movq	%rax, -24(%rbp)	# tmp124, tmpsv
	cmpq	$0, -24(%rbp)	#, tmpsv
	je	.L725	#,
	.loc 1 3358 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# tmpsv, tmp125
	movl	12(%rax), %eax	# tmpsv_17->sv_flags, D.22812
	andl	$524288, %eax	#, D.22812
	.loc 1 3357 0 discriminator 1
	testl	%eax, %eax	# D.22812
	je	.L726	#,
	.loc 1 3358 0
	movq	-24(%rbp), %rax	# tmpsv, tmp126
	movq	(%rax), %rax	# tmpsv_17->sv_any, D.22813
	movq	(%rax), %rdx	# MEM[(struct XRV *)_20].xrv_rv, D.22814
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22813
	movq	(%rax), %rax	# MEM[(struct XRV *)_22].xrv_rv, D.22814
	cmpq	%rax, %rdx	# D.22814, D.22814
	je	.L725	#,
.L726:
	.loc 1 3359 0
	cmpq	$0, -24(%rbp)	#, tmpsv
	je	.L727	#,
	.loc 1 3359 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# tmpsv, tmp127
	movl	12(%rax), %eax	# tmpsv_17->sv_flags, D.22812
	andl	$262144, %eax	#, D.22812
	testl	%eax, %eax	# D.22812
	je	.L728	#,
	.loc 1 3359 0 discriminator 3
	movq	-24(%rbp), %rax	# tmpsv, tmp128
	movq	(%rax), %rax	# tmpsv_17->sv_any, PL_Xpv.342
	movq	%rax, PL_Xpv(%rip)	# PL_Xpv.342, PL_Xpv
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.343
	testq	%rax, %rax	# PL_Xpv.343
	je	.L729	#,
	.loc 1 3359 0 discriminator 5
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.344
	movq	8(%rax), %rax	# PL_Xpv.344_28->xpv_cur, D.22815
	cmpq	$1, %rax	#, D.22815
	ja	.L730	#,
	.loc 1 3359 0 discriminator 2
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.345
	movq	8(%rax), %rax	# PL_Xpv.345_30->xpv_cur, D.22815
	testq	%rax, %rax	# D.22815
	je	.L729	#,
	.loc 1 3359 0 discriminator 1
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.346
	movq	(%rax), %rax	# PL_Xpv.346_32->xpv_pv, D.22816
	movzbl	(%rax), %eax	# *_33, D.22811
	cmpb	$48, %al	#, D.22811
	je	.L729	#,
.L730:
	movl	$1, %eax	#, iftmp.341
	jmp	.L731	#
.L729:
	.loc 1 3359 0 discriminator 6
	movl	$0, %eax	#, iftmp.341
.L731:
	jmp	.L737	#
.L728:
	.loc 1 3359 0 discriminator 4
	movq	-24(%rbp), %rax	# tmpsv, tmp129
	movl	12(%rax), %eax	# tmpsv_17->sv_flags, D.22812
	andl	$65536, %eax	#, D.22812
	testl	%eax, %eax	# D.22812
	je	.L733	#,
	.loc 1 3359 0 discriminator 8
	movq	-24(%rbp), %rax	# tmpsv, tmp130
	movq	(%rax), %rax	# tmpsv_17->sv_any, D.22813
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_40].xiv_iv, D.22817
	testq	%rax, %rax	# D.22817
	setne	%al	#, D.22818
	jmp	.L737	#
.L733:
	.loc 1 3359 0 discriminator 9
	movq	-24(%rbp), %rax	# tmpsv, tmp131
	movl	12(%rax), %eax	# tmpsv_17->sv_flags, D.22812
	andl	$131072, %eax	#, D.22812
	testl	%eax, %eax	# D.22812
	je	.L735	#,
	.loc 1 3359 0 discriminator 10
	movq	-24(%rbp), %rax	# tmpsv, tmp132
	movq	(%rax), %rax	# tmpsv_17->sv_any, D.22813
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_46].xnv_nv, D.22819
	xorpd	%xmm1, %xmm1	# tmp134
	ucomisd	%xmm1, %xmm0	# tmp134, D.22819
	setp	%dl	#, tmp133
	movl	$1, %eax	#, tmp136
	xorpd	%xmm1, %xmm1	# tmp135
	ucomisd	%xmm1, %xmm0	# tmp135, D.22819
	cmove	%edx, %eax	# tmp133,, D.22818
	jmp	.L737	#
.L735:
	.loc 1 3359 0 discriminator 11
	movq	-24(%rbp), %rax	# tmpsv, tmp137
	movq	%rax, %rdi	# tmp137,
	call	Perl_sv_2bool	#
	jmp	.L723	#
.L727:
	.loc 1 3359 0 discriminator 2
	movl	$0, %eax	#, iftmp.339
.L737:
	.loc 1 3359 0 discriminator 14
	jmp	.L723	#
.L725:
	.loc 1 3360 0 is_stmt 1
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22813
	movq	(%rax), %rax	# MEM[(struct XRV *)_56].xrv_rv, D.22814
	testq	%rax, %rax	# D.22814
	setne	%al	#, D.22818
	jmp	.L723	#
.L724:
.LBE29:
	.loc 1 3362 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22812
	andl	$67108864, %eax	#, D.22812
	testl	%eax, %eax	# D.22812
	je	.L738	#,
.LBB30:
	.loc 1 3364 0
	movq	(%rbx), %rbx	# sv_7(D)->sv_any, Xpvtmp
	testq	%rbx, %rbx	# Xpvtmp
	je	.L739	#,
	.loc 1 3365 0 discriminator 1
	movq	(%rbx), %rax	# Xpvtmp_62->xpv_pv, D.22816
	movzbl	(%rax), %eax	# *_63, D.22811
	.loc 1 3364 0 discriminator 1
	cmpb	$48, %al	#, D.22811
	jg	.L740	#,
	.loc 1 3366 0
	movq	8(%rbx), %rax	# Xpvtmp_62->xpv_cur, D.22815
	.loc 1 3365 0
	cmpq	$1, %rax	#, D.22815
	ja	.L740	#,
	.loc 1 3367 0
	movq	8(%rbx), %rax	# Xpvtmp_62->xpv_cur, D.22815
	.loc 1 3366 0
	testq	%rax, %rax	# D.22815
	je	.L739	#,
	.loc 1 3367 0
	movq	(%rbx), %rax	# Xpvtmp_62->xpv_pv, D.22816
	movzbl	(%rax), %eax	# *_67, D.22811
	cmpb	$48, %al	#, D.22811
	je	.L739	#,
.L740:
	.loc 1 3368 0
	movl	$1, %eax	#, D.22811
	jmp	.L723	#
.L739:
	.loc 1 3370 0
	movl	$0, %eax	#, D.22811
	jmp	.L723	#
.L738:
.LBE30:
	.loc 1 3373 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22812
	andl	$16777216, %eax	#, D.22812
	testl	%eax, %eax	# D.22812
	je	.L741	#,
	.loc 1 3374 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22813
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_73].xiv_iv, D.22817
	testq	%rax, %rax	# D.22817
	setne	%al	#, D.22818
	jmp	.L723	#
.L741:
	.loc 1 3376 0
	movl	12(%rbx), %eax	# sv_7(D)->sv_flags, D.22812
	andl	$33554432, %eax	#, D.22812
	testl	%eax, %eax	# D.22812
	je	.L742	#,
	.loc 1 3377 0
	movq	(%rbx), %rax	# sv_7(D)->sv_any, D.22813
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_79].xnv_nv, D.22819
	xorpd	%xmm1, %xmm1	# tmp139
	ucomisd	%xmm1, %xmm0	# tmp139, D.22819
	setp	%dl	#, tmp138
	movl	$1, %eax	#, tmp141
	xorpd	%xmm1, %xmm1	# tmp140
	ucomisd	%xmm1, %xmm0	# tmp140, D.22819
	cmove	%edx, %eax	# tmp138,, D.22818
	jmp	.L723	#
.L742:
	.loc 1 3379 0
	movl	$0, %eax	#, D.22811
.L723:
	.loc 1 3382 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE75:
	.size	Perl_sv_2bool, .-Perl_sv_2bool
	.globl	Perl_sv_utf8_upgrade
	.type	Perl_sv_utf8_upgrade, @function
Perl_sv_utf8_upgrade:
.LFB76:
	.loc 1 3391 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, %rax	# sv, sv
	.loc 1 3392 0
	movl	$2, %esi	#,
	movq	%rax, %rdi	# sv,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 3393 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE76:
	.size	Perl_sv_utf8_upgrade, .-Perl_sv_utf8_upgrade
	.globl	Perl_sv_utf8_upgrade_flags
	.type	Perl_sv_utf8_upgrade_flags, @function
Perl_sv_utf8_upgrade_flags:
.LFB77:
	.loc 1 3423 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$64, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	movl	%esi, -68(%rbp)	# flags, flags
	.loc 1 3425 0
	movl	$0, -52(%rbp)	#, hibit
	.loc 1 3427 0
	cmpq	$PL_sv_undef, %rbx	#, sv
	jne	.L746	#,
	.loc 1 3428 0
	movl	$0, %eax	#, D.22821
	jmp	.L747	#
.L746:
	.loc 1 3429 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$262144, %eax	#, D.22822
	testl	%eax, %eax	# D.22822
	jne	.L748	#,
.LBB31:
	.loc 1 3430 0
	movq	$0, -48(%rbp)	#, len
	.loc 1 3431 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$8388608, %eax	#, D.22822
	testl	%eax, %eax	# D.22822
	je	.L749	#,
	.loc 1 3431 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$67108864, %eax	#, D.22822
	testl	%eax, %eax	# D.22822
	jne	.L750	#,
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$16777216, %eax	#, D.22822
	testl	%eax, %eax	# D.22822
	jne	.L750	#,
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$33554432, %eax	#, D.22822
	testl	%eax, %eax	# D.22822
	je	.L749	#,
.L750:
	.loc 1 3432 0 is_stmt 1
	movl	-68(%rbp), %edx	# flags, tmp118
	leaq	-48(%rbp), %rax	#, tmp119
	movq	%rax, %rsi	# tmp119,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
	.loc 1 3433 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$536870912, %eax	#, D.22822
	testl	%eax, %eax	# D.22822
	je	.L751	#,
	.loc 1 3434 0
	movq	-48(%rbp), %rax	# len, D.22821
	jmp	.L747	#
.L751:
	.loc 1 3433 0 discriminator 1
	nop
	jmp	.L748	#
.L749:
	.loc 1 3436 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$10223616, %eax	#, D.22822
	cmpl	$262144, %eax	#, D.22822
	jne	.L753	#,
	.loc 1 3436 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	8(%rax), %rax	# MEM[(struct XPV *)_24].xpv_cur, len.349
	movq	%rax, -48(%rbp)	# len.349, len
	jmp	.L748	#
.L753:
	.loc 1 3436 0 discriminator 2
	leaq	-48(%rbp), %rax	#, tmp120
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp120,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_pvn_force_flags	#
.L748:
.LBE31:
	.loc 1 3440 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$536870912, %eax	#, D.22822
	testl	%eax, %eax	# D.22822
	je	.L754	#,
	.loc 1 3441 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	8(%rax), %rax	# MEM[(struct XPV *)_29].xpv_cur, D.22821
	jmp	.L747	#
.L754:
	.loc 1 3444 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$8388608, %eax	#, D.22822
	testl	%eax, %eax	# D.22822
	je	.L755	#,
	.loc 1 3444 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$1048576, %eax	#, D.22822
	testl	%eax, %eax	# D.22822
	je	.L755	#,
	.loc 1 3445 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L755:
	.loc 1 3448 0
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.350
	testq	%rax, %rax	# PL_encoding.350
	je	.L756	#,
	.loc 1 3448 0 is_stmt 0 discriminator 1
	movl	-68(%rbp), %eax	# flags, tmp121
	andl	$8, %eax	#, D.22824
	testl	%eax, %eax	# D.22824
	jne	.L756	#,
	.loc 1 3449 0 is_stmt 1
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.351
	movq	%rax, %rsi	# PL_encoding.351,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_recode_to_utf8	#
	jmp	.L757	#
.L756:
	.loc 1 3455 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	(%rax), %rax	# MEM[(struct XPV *)_38].xpv_pv, tmp122
	movq	%rax, -32(%rbp)	# tmp122, s
	.loc 1 3456 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	(%rax), %rdx	# MEM[(struct XPV *)_40].xpv_pv, D.22825
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	8(%rax), %rax	# MEM[(struct XPV *)_42].xpv_cur, D.22826
	addq	%rdx, %rax	# D.22825, tmp123
	movq	%rax, -24(%rbp)	# tmp123, e
	.loc 1 3457 0
	movq	-32(%rbp), %rax	# s, tmp124
	movq	%rax, -40(%rbp)	# tmp124, t
	.loc 1 3458 0
	jmp	.L758	#
.L760:
.LBB32:
	.loc 1 3459 0
	movq	-40(%rbp), %rax	# t, t.352
	leaq	1(%rax), %rdx	#, tmp125
	movq	%rdx, -40(%rbp)	# tmp125, t
	movzbl	(%rax), %eax	# *t.352_46, tmp126
	movb	%al, -53(%rbp)	# tmp126, ch
	.loc 1 3460 0
	movzbl	-53(%rbp), %eax	# ch, ch.353
	shrb	$7, %al	#, D.22827
	movzbl	%al, %eax	# D.22827, tmp127
	movl	%eax, -52(%rbp)	# tmp127, hibit
	cmpl	$0, -52(%rbp)	#, hibit
	je	.L758	#,
	.loc 1 3461 0
	jmp	.L759	#
.L758:
.LBE32:
	.loc 1 3458 0 discriminator 1
	movq	-40(%rbp), %rax	# t, tmp128
	cmpq	-24(%rbp), %rax	# e, tmp128
	jb	.L760	#,
.L759:
	.loc 1 3463 0
	cmpl	$0, -52(%rbp)	#, hibit
	je	.L761	#,
.LBB33:
	.loc 1 3465 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	andl	$2097152, %eax	#, D.22822
	testl	%eax, %eax	# D.22822
	je	.L763	#,
	.loc 1 3465 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22824
	je	.L763	#,
	.loc 1 3465 0
	nop
.L763:
	.loc 1 3466 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	(%rax), %rax	# MEM[(struct XPV *)_57].xpv_pv, tmp129
	movq	%rax, -32(%rbp)	# tmp129, s
	.loc 1 3467 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	8(%rax), %rax	# MEM[(struct XPV *)_59].xpv_cur, D.22826
	addq	$1, %rax	#, len.355
	movq	%rax, -48(%rbp)	# len.355, len
	.loc 1 3468 0
	movq	(%rbx), %r12	# sv_6(D)->sv_any, D.22823
	leaq	-48(%rbp), %rdx	#, tmp130
	movq	-32(%rbp), %rax	# s, tmp131
	movq	%rdx, %rsi	# tmp130,
	movq	%rax, %rdi	# tmp131,
	call	Perl_bytes_to_utf8	#
	movq	%rax, (%r12)	# D.22828, MEM[(struct XPV *)_62].xpv_pv
	.loc 1 3469 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	-48(%rbp), %rdx	# len, len.356
	subq	$1, %rdx	#, D.22826
	movq	%rdx, 8(%rax)	# D.22826, MEM[(struct XPV *)_64].xpv_cur
	.loc 1 3470 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	16(%rax), %rax	# MEM[(struct XPV *)_67].xpv_len, D.22826
	testq	%rax, %rax	# D.22826
	je	.L764	#,
	.loc 1 3471 0
	movq	-32(%rbp), %rax	# s, tmp132
	movq	%rax, %rdi	# tmp132,
	call	Perl_safesysfree	#
.L764:
	.loc 1 3472 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	-48(%rbp), %rdx	# len, len.357
	movq	%rdx, 16(%rax)	# len.357, MEM[(struct XPV *)_69].xpv_len
.L761:
.LBE33:
	.loc 1 3475 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.22822
	orl	$536870912, %eax	#, D.22822
	movl	%eax, 12(%rbx)	# D.22822, sv_6(D)->sv_flags
.L757:
	.loc 1 3477 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.22823
	movq	8(%rax), %rax	# MEM[(struct XPV *)_73].xpv_cur, D.22821
.L747:
	.loc 1 3478 0
	addq	$64, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE77:
	.size	Perl_sv_utf8_upgrade_flags, .-Perl_sv_utf8_upgrade_flags
	.section	.rodata
.LC34:
	.string	"Wide character in %s"
.LC35:
	.string	"Wide character"
	.text
	.globl	Perl_sv_utf8_downgrade
	.type	Perl_sv_utf8_downgrade, @function
Perl_sv_utf8_downgrade:
.LFB78:
	.loc 1 3496 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movl	%esi, %eax	# fail_ok, tmp91
	movb	%al, -36(%rbp)	# tmp91, fail_ok
	.loc 1 3497 0
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22831
	andl	$67108864, %eax	#, D.22831
	testl	%eax, %eax	# D.22831
	je	.L766	#,
	.loc 1 3497 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22831
	andl	$536870912, %eax	#, D.22831
	testl	%eax, %eax	# D.22831
	je	.L766	#,
	.loc 1 3498 0 is_stmt 1
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.22832
	movq	8(%rax), %rax	# MEM[(struct XPV *)_9].xpv_cur, D.22833
	testq	%rax, %rax	# D.22833
	je	.L766	#,
.LBB34:
	.loc 1 3502 0
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22831
	andl	$8388608, %eax	#, D.22831
	testl	%eax, %eax	# D.22831
	je	.L767	#,
	.loc 1 3502 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22831
	andl	$1048576, %eax	#, D.22831
	testl	%eax, %eax	# D.22831
	je	.L767	#,
	.loc 1 3503 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L767:
	.loc 1 3504 0
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22831
	andl	$262144, %eax	#, D.22831
	testl	%eax, %eax	# D.22831
	je	.L768	#,
	.loc 1 3504 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.22832
	movq	8(%rax), %rax	# MEM[(struct XPV *)_17].xpv_cur, len.359
	movq	%rax, -32(%rbp)	# len.359, len
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.22832
	movq	(%rax), %rax	# MEM[(struct XPV *)_19].xpv_pv, iftmp.358
	jmp	.L769	#
.L768:
	.loc 1 3504 0 discriminator 2
	leaq	-32(%rbp), %rax	#, tmp92
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp92,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
.L769:
	.loc 1 3504 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.358, s
	.loc 1 3505 0 is_stmt 1 discriminator 3
	leaq	-32(%rbp), %rdx	#, tmp93
	movq	-24(%rbp), %rax	# s, tmp94
	movq	%rdx, %rsi	# tmp93,
	movq	%rax, %rdi	# tmp94,
	call	Perl_utf8_to_bytes	#
	testq	%rax, %rax	# D.22834
	jne	.L770	#,
	.loc 1 3506 0
	cmpb	$0, -36(%rbp)	#, fail_ok
	je	.L771	#,
	.loc 1 3507 0
	movl	$0, %eax	#, D.22830
	jmp	.L772	#
.L771:
	.loc 1 3509 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.360
	testq	%rax, %rax	# PL_op.360
	je	.L773	#,
	.loc 1 3511 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.362
	movzwl	32(%rax), %eax	# PL_op.362_27->op_type, D.22835
	.loc 1 3510 0
	cmpw	$351, %ax	#, D.22835
	jne	.L774	#,
	.loc 1 3511 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.363
	.loc 1 3510 0
	movq	%rax, %rdi	# PL_op.363,
	call	Perl_custom_op_desc	#
	jmp	.L775	#
.L774:
	.loc 1 3511 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.364
	movzwl	32(%rax), %eax	# PL_op.364_31->op_type, D.22835
	movzwl	%ax, %eax	# D.22835, D.22836
	.loc 1 3510 0 discriminator 1
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.361
.L775:
	movq	%rax, %rsi	# iftmp.361,
	movl	$.LC34, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L770	#
.L773:
	.loc 1 3513 0
	movl	$.LC35, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L770:
	.loc 1 3516 0 discriminator 2
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.22832
	movq	-32(%rbp), %rdx	# len, len.365
	movq	%rdx, 8(%rax)	# len.365, MEM[(struct XPV *)_35].xpv_cur
.L766:
.LBE34:
	.loc 1 3519 0
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22831
	andl	$-536870913, %eax	#, D.22831
	movl	%eax, 12(%rbx)	# D.22831, sv_4(D)->sv_flags
	.loc 1 3520 0
	movl	$1, %eax	#, D.22830
.L772:
	.loc 1 3521 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE78:
	.size	Perl_sv_utf8_downgrade, .-Perl_sv_utf8_downgrade
	.globl	Perl_sv_utf8_encode
	.type	Perl_sv_utf8_encode, @function
Perl_sv_utf8_encode:
.LFB79:
	.loc 1 3534 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	.loc 1 3535 0
	movl	$2, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 3536 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22839
	andl	$9437184, %eax	#, D.22839
	cmpl	$9437184, %eax	#, D.22839
	jne	.L777	#,
	.loc 1 3537 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal_flags	#
.L777:
	.loc 1 3539 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22839
	andl	$8388608, %eax	#, D.22839
	testl	%eax, %eax	# D.22839
	je	.L778	#,
	.loc 1 3540 0
	movl	$PL_no_modify, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L778:
	.loc 1 3542 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22839
	andl	$-536870913, %eax	#, D.22839
	movl	%eax, 12(%rbx)	# D.22839, sv_1(D)->sv_flags
	.loc 1 3543 0
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE79:
	.size	Perl_sv_utf8_encode, .-Perl_sv_utf8_encode
	.globl	Perl_sv_utf8_decode
	.type	Perl_sv_utf8_decode, @function
Perl_sv_utf8_decode:
.LFB80:
	.loc 1 3559 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	.loc 1 3560 0
	movl	12(%rbx), %eax	# sv_3(D)->sv_flags, D.22841
	andl	$67108864, %eax	#, D.22841
	testl	%eax, %eax	# D.22841
	je	.L780	#,
.LBB35:
	.loc 1 3567 0
	movl	$1, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_utf8_downgrade	#
	testb	%al, %al	# D.22840
	jne	.L781	#,
	.loc 1 3568 0
	movl	$0, %eax	#, D.22840
	jmp	.L782	#
.L781:
	.loc 1 3573 0
	movq	(%rbx), %rax	# sv_3(D)->sv_any, D.22842
	movq	(%rax), %rax	# MEM[(struct XPV *)_8].xpv_pv, tmp78
	movq	%rax, -32(%rbp)	# tmp78, c
	.loc 1 3574 0
	movq	(%rbx), %rax	# sv_3(D)->sv_any, D.22842
	movq	8(%rax), %rax	# MEM[(struct XPV *)_10].xpv_cur, D.22843
	leaq	1(%rax), %rdx	#, D.22843
	movq	-32(%rbp), %rax	# c, tmp79
	movq	%rdx, %rsi	# D.22843,
	movq	%rax, %rdi	# tmp79,
	call	Perl_is_utf8_string	#
	testb	%al, %al	# D.22840
	jne	.L783	#,
	.loc 1 3575 0
	movl	$0, %eax	#, D.22840
	jmp	.L782	#
.L783:
	.loc 1 3576 0
	movq	(%rbx), %rax	# sv_3(D)->sv_any, D.22842
	movq	(%rax), %rdx	# MEM[(struct XPV *)_15].xpv_pv, D.22844
	movq	(%rbx), %rax	# sv_3(D)->sv_any, D.22842
	movq	8(%rax), %rax	# MEM[(struct XPV *)_17].xpv_cur, D.22843
	addq	%rdx, %rax	# D.22844, tmp80
	movq	%rax, -24(%rbp)	# tmp80, e
	.loc 1 3577 0
	jmp	.L784	#
.L785:
.LBB36:
	.loc 1 3578 0
	movq	-32(%rbp), %rax	# c, c.366
	leaq	1(%rax), %rdx	#, tmp81
	movq	%rdx, -32(%rbp)	# tmp81, c
	movzbl	(%rax), %eax	# *c.366_20, tmp82
	movb	%al, -33(%rbp)	# tmp82, ch
	.loc 1 3579 0
	movzbl	-33(%rbp), %eax	# ch, ch.367
	testb	%al, %al	# ch.367
	jns	.L784	#,
	.loc 1 3580 0
	movl	12(%rbx), %eax	# sv_3(D)->sv_flags, D.22841
	orl	$536870912, %eax	#, D.22841
	movl	%eax, 12(%rbx)	# D.22841, sv_3(D)->sv_flags
	.loc 1 3581 0
	jmp	.L780	#
.L784:
.LBE36:
	.loc 1 3577 0 discriminator 1
	movq	-32(%rbp), %rax	# c, tmp83
	cmpq	-24(%rbp), %rax	# e, tmp83
	jb	.L785	#,
.L780:
.LBE35:
	.loc 1 3585 0
	movl	$1, %eax	#, D.22840
.L782:
	.loc 1 3586 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE80:
	.size	Perl_sv_utf8_decode, .-Perl_sv_utf8_decode
	.globl	Perl_sv_setsv
	.type	Perl_sv_setsv, @function
Perl_sv_setsv:
.LFB81:
	.loc 1 3594 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# dstr, dstr
	movq	%rsi, %rax	# sstr, sstr
	.loc 1 3595 0
	movq	-8(%rbp), %rcx	# dstr, tmp60
	movl	$2, %edx	#,
	movq	%rax, %rsi	# sstr,
	movq	%rcx, %rdi	# tmp60,
	call	Perl_sv_setsv_flags	#
	.loc 1 3596 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE81:
	.size	Perl_sv_setsv, .-Perl_sv_setsv
	.section	.rodata
.LC36:
	.string	"Bizarre copy of %s in %s"
.LC37:
	.string	"Bizarre copy of %s"
	.align 8
.LC38:
	.string	"Can't redefine active sort subroutine %s"
	.align 8
.LC39:
	.string	"Constant subroutine %s::%s redefined"
.LC40:
	.string	"Subroutine %s::%s redefined"
	.align 8
.LC41:
	.string	"Undefined value assigned to typeglob"
	.text
	.globl	Perl_sv_setsv_flags
	.type	Perl_sv_setsv_flags, @function
Perl_sv_setsv_flags:
.LFB82:
	.loc 1 3635 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -104(%rbp)	# dstr, dstr
	movq	%rsi, %rbx	# sstr, sstr
	movl	%edx, -108(%rbp)	# flags, flags
	.loc 1 3640 0
	cmpq	-104(%rbp), %rbx	# dstr, sstr
	jne	.L788	#,
	.loc 1 3641 0
	jmp	.L787	#
.L788:
	.loc 1 3642 0
	movq	-104(%rbp), %rax	# dstr, tmp744
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$9961472, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L790	#,
	.loc 1 3642 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp745
	movq	%rax, %rdi	# tmp745,
	call	Perl_sv_force_normal	#
.L790:
	.loc 1 3643 0 is_stmt 1
	testq	%rbx, %rbx	# sstr
	jne	.L791	#,
	.loc 1 3644 0
	movl	$PL_sv_undef, %ebx	#, sstr
.L791:
	.loc 1 3645 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	movzbl	%al, %r12d	# D.22846, stype
	.loc 1 3646 0
	movq	-104(%rbp), %rax	# dstr, tmp746
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	movzbl	%al, %r13d	# D.22846, dtype
	.loc 1 3648 0
	movq	-104(%rbp), %rax	# dstr, tmp747
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$-268435457, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp748
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 3649 0
	movq	-104(%rbp), %rax	# dstr, tmp749
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$57344, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L792	#,
	.loc 1 3649 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp750
	movl	$86, %esi	#,
	movq	%rax, %rdi	# tmp750,
	call	Perl_mg_find	#
	testq	%rax, %rax	# D.22847
	je	.L792	#,
	.loc 1 3652 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp751
	movq	%rax, %rdi	# tmp751,
	call	Perl_mg_free	#
	.loc 1 3653 0
	movq	-104(%rbp), %rax	# dstr, tmp752
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andb	$127, %ah	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp753
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L792:
	.loc 1 3658 0
	cmpl	$15, %r12d	#, stype
	ja	.L793	#,
	movl	%r12d, %eax	# stype, tmp754
	movq	.L795(,%rax,8), %rax	#, tmp755
	jmp	*%rax	# tmp755
	.section	.rodata
	.align 8
	.align 4
.L795:
	.quad	.L794
	.quad	.L796
	.quad	.L797
	.quad	.L798
	.quad	.L799
	.quad	.L800
	.quad	.L801
	.quad	.L793
	.quad	.L793
	.quad	.L793
	.quad	.L802
	.quad	.L802
	.quad	.L802
	.quad	.L803
	.quad	.L799
	.quad	.L802
	.text
.L794:
	.loc 1 3661 0
	cmpl	$13, %r13d	#, dtype
	je	.L804	#,
	.loc 1 3662 0
	movq	-104(%rbp), %rax	# dstr, tmp756
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp757
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp758
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L805	#,
	.loc 1 3662 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp759
	movq	%rax, %rdi	# tmp759,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L805	#,
	.loc 1 3663 0 is_stmt 1 discriminator 1
	jmp	.L787	#
.L805:
	.loc 1 3663 0 is_stmt 0 discriminator 2
	jmp	.L787	#
.L804:
	.loc 1 3665 0 is_stmt 1
	jmp	.L807	#
.L796:
	.loc 1 3667 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$65536, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L808	#,
	.loc 1 3668 0
	cmpl	$2, %r13d	#, dtype
	je	.L810	#,
	cmpl	$2, %r13d	#, dtype
	jg	.L811	#,
	testl	%r13d, %r13d	# dtype
	je	.L812	#,
	jmp	.L809	#
.L811:
	cmpl	$4, %r13d	#, dtype
	jg	.L809	#,
	jmp	.L961	#
.L812:
	.loc 1 3670 0
	movq	-104(%rbp), %rax	# dstr, tmp760
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp760,
	call	Perl_sv_upgrade	#
	.loc 1 3671 0
	jmp	.L809	#
.L810:
	.loc 1 3673 0
	movq	-104(%rbp), %rax	# dstr, tmp761
	movl	$6, %esi	#,
	movq	%rax, %rdi	# tmp761,
	call	Perl_sv_upgrade	#
	.loc 1 3674 0
	jmp	.L809	#
.L961:
	.loc 1 3677 0
	movq	-104(%rbp), %rax	# dstr, tmp762
	movl	$5, %esi	#,
	movq	%rax, %rdi	# tmp762,
	call	Perl_sv_upgrade	#
	.loc 1 3678 0
	nop
.L809:
	.loc 1 3680 0
	movq	-104(%rbp), %rax	# dstr, tmp763
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp764
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp765
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L815	#,
	.loc 1 3680 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp766
	movq	%rax, %rdi	# tmp766,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L815	#,
	.loc 1 3680 0
	nop
.L815:
	.loc 1 3680 0 discriminator 3
	movq	-104(%rbp), %rax	# dstr, tmp767
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$16842752, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp768
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 3681 0 is_stmt 1 discriminator 3
	movq	-104(%rbp), %rax	# dstr, tmp769
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rdx	# sstr_1->sv_any, D.22848
	movq	24(%rdx), %rdx	# MEM[(struct XPVIV *)_46].xiv_iv, D.22849
	movq	%rdx, 24(%rax)	# D.22849, MEM[(struct XPVIV *)_45].xiv_iv
	.loc 1 3682 0 discriminator 3
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	testl	%eax, %eax	# D.22850
	jns	.L816	#,
	.loc 1 3683 0
	movq	-104(%rbp), %rax	# dstr, tmp770
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$-2147483648, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp771
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L816:
	.loc 1 3684 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$57344, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L817	#,
	.loc 1 3684 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sstr,
	call	Perl_sv_tainted	#
	testb	%al, %al	# D.22851
	je	.L817	#,
	.loc 1 3685 0 is_stmt 1
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.370
	testb	%al, %al	# PL_tainting.370
	je	.L817	#,
	.loc 1 3685 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.371
	testb	%al, %al	# PL_tainted.371
	je	.L817	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.372
	testb	%al, %al	# PL_tainting.372
	je	.L817	#,
	movq	-104(%rbp), %rax	# dstr, tmp772
	movq	%rax, %rdi	# tmp772,
	call	Perl_sv_taint	#
	.loc 1 3686 0 is_stmt 1 discriminator 1
	jmp	.L787	#
.L817:
	.loc 1 3686 0 is_stmt 0
	jmp	.L787	#
.L808:
	.loc 1 3688 0 is_stmt 1
	jmp	.L794	#
.L797:
	.loc 1 3691 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$131072, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L818	#,
	.loc 1 3692 0
	testl	%r13d, %r13d	# dtype
	js	.L819	#,
	cmpl	$1, %r13d	#, dtype
	jle	.L820	#,
	leal	-3(%r13), %eax	#, tmp773
	cmpl	$2, %eax	#, tmp773
	ja	.L819	#,
	jmp	.L962	#
.L820:
	.loc 1 3695 0
	movq	-104(%rbp), %rax	# dstr, tmp774
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp774,
	call	Perl_sv_upgrade	#
	.loc 1 3696 0
	jmp	.L819	#
.L962:
	.loc 1 3700 0
	movq	-104(%rbp), %rax	# dstr, tmp775
	movl	$6, %esi	#,
	movq	%rax, %rdi	# tmp775,
	call	Perl_sv_upgrade	#
	.loc 1 3701 0
	nop
.L819:
	.loc 1 3703 0
	movq	-104(%rbp), %rax	# dstr, tmp776
	movq	(%rax), %rdx	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_61].xnv_nv, D.22852
	movq	%rax, 32(%rdx)	# D.22852, MEM[(struct XPVNV *)_60].xnv_nv
	.loc 1 3704 0
	movq	-104(%rbp), %rax	# dstr, tmp777
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp778
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp779
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L823	#,
	.loc 1 3704 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp780
	movq	%rax, %rdi	# tmp780,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L823	#,
	.loc 1 3704 0
	nop
.L823:
	.loc 1 3704 0 discriminator 3
	movq	-104(%rbp), %rax	# dstr, tmp781
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$33685504, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp782
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 3705 0 is_stmt 1 discriminator 3
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$57344, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L824	#,
	.loc 1 3705 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sstr,
	call	Perl_sv_tainted	#
	testb	%al, %al	# D.22851
	je	.L824	#,
	.loc 1 3706 0 is_stmt 1
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.374
	testb	%al, %al	# PL_tainting.374
	je	.L824	#,
	.loc 1 3706 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.375
	testb	%al, %al	# PL_tainted.375
	je	.L824	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.376
	testb	%al, %al	# PL_tainting.376
	je	.L824	#,
	movq	-104(%rbp), %rax	# dstr, tmp783
	movq	%rax, %rdi	# tmp783,
	call	Perl_sv_taint	#
	.loc 1 3707 0 is_stmt 1 discriminator 1
	jmp	.L787	#
.L824:
	.loc 1 3707 0 is_stmt 0
	jmp	.L787	#
.L818:
	.loc 1 3709 0 is_stmt 1
	jmp	.L794	#
.L798:
	.loc 1 3712 0
	cmpl	$2, %r13d	#, dtype
	jg	.L825	#,
	.loc 1 3713 0
	movq	-104(%rbp), %rax	# dstr, tmp784
	movl	$3, %esi	#,
	movq	%rax, %rdi	# tmp784,
	call	Perl_sv_upgrade	#
	jmp	.L826	#
.L825:
	.loc 1 3714 0
	cmpl	$13, %r13d	#, dtype
	jne	.L826	#,
	.loc 1 3715 0 discriminator 1
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$524288, %eax	#, D.22845
	.loc 1 3714 0 discriminator 1
	testl	%eax, %eax	# D.22845
	je	.L826	#,
	.loc 1 3715 0
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	(%rax), %rax	# MEM[(struct XRV *)_87].xrv_rv, D.22853
	movl	12(%rax), %eax	# _88->sv_flags, D.22845
	movzbl	%al, %eax	# D.22845, D.22845
	cmpl	$13, %eax	#, D.22845
	jne	.L826	#,
	.loc 1 3716 0
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	(%rax), %rbx	# MEM[(struct XRV *)_91].xrv_rv, sstr
	.loc 1 3717 0
	cmpq	-104(%rbp), %rbx	# dstr, sstr
	jne	.L827	#,
	.loc 1 3718 0
	movq	-104(%rbp), %rax	# dstr, tmp785
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rax), %eax	# MEM[(struct XPVGV *)_93].xgv_flags, D.22854
	movzbl	%al, %eax	# D.22854, D.22846
	andl	$240, %eax	#, D.22846
	cmpl	$240, %eax	#, D.22846
	je	.L828	#,
	.loc 1 3719 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.377
	movq	48(%rax), %rdx	# PL_curcop.377_97->cop_stash, D.22855
	movq	-104(%rbp), %rax	# dstr, tmp786
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_99].xgv_stash, D.22855
	cmpq	%rax, %rdx	# D.22855, D.22855
	je	.L828	#,
	.loc 1 3721 0
	movq	-104(%rbp), %rax	# dstr, tmp787
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp788
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_102].xgv_flags, D.22854
	orl	$-16, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_101].xgv_flags
.L828:
	.loc 1 3723 0
	movq	-104(%rbp), %rax	# dstr, tmp789
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp790
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_106].xgv_flags, D.22854
	orl	$2, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_105].xgv_flags
	.loc 1 3724 0
	jmp	.L787	#
.L827:
	.loc 1 3726 0
	jmp	.L829	#
.L826:
	.loc 1 3728 0
	jmp	.L807	#
.L799:
	.loc 1 3731 0
	cmpl	$3, %r13d	#, dtype
	jg	.L830	#,
	.loc 1 3732 0
	movq	-104(%rbp), %rax	# dstr, tmp791
	movl	$4, %esi	#,
	movq	%rax, %rdi	# tmp791,
	call	Perl_sv_upgrade	#
	.loc 1 3733 0
	jmp	.L807	#
.L830:
	jmp	.L807	#
.L800:
	.loc 1 3735 0
	cmpl	$4, %r13d	#, dtype
	jg	.L831	#,
	.loc 1 3736 0
	movq	-104(%rbp), %rax	# dstr, tmp792
	movl	$5, %esi	#,
	movq	%rax, %rdi	# tmp792,
	call	Perl_sv_upgrade	#
	.loc 1 3737 0
	jmp	.L807	#
.L831:
	jmp	.L807	#
.L801:
	.loc 1 3739 0
	cmpl	$5, %r13d	#, dtype
	jg	.L832	#,
	.loc 1 3740 0
	movq	-104(%rbp), %rax	# dstr, tmp793
	movl	$6, %esi	#,
	movq	%rax, %rdi	# tmp793,
	call	Perl_sv_upgrade	#
	.loc 1 3741 0
	jmp	.L807	#
.L832:
	jmp	.L807	#
.L802:
	.loc 1 3746 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.378
	testq	%rax, %rax	# PL_op.378
	je	.L833	#,
	.loc 1 3748 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.380
	movzwl	32(%rax), %eax	# PL_op.380_110->op_type, D.22856
	.loc 1 3747 0
	cmpw	$351, %ax	#, D.22856
	jne	.L834	#,
	.loc 1 3748 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.381
	.loc 1 3747 0
	movq	%rax, %rdi	# PL_op.381,
	call	Perl_custom_op_name	#
	movq	%rax, %r12	#, iftmp.379
	jmp	.L835	#
.L834:
	.loc 1 3748 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.382
	movzwl	32(%rax), %eax	# PL_op.382_114->op_type, D.22856
	movzwl	%ax, %eax	# D.22856, D.22846
	.loc 1 3747 0 discriminator 1
	cltq
	movq	PL_op_name(,%rax,8), %r12	# PL_op_name, iftmp.379
.L835:
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sstr,
	call	Perl_sv_reftype	#
	movq	%r12, %rdx	# iftmp.379,
	movq	%rax, %rsi	# D.22857,
	movl	$.LC36, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 3751 0 discriminator 1
	jmp	.L807	#
.L833:
	.loc 1 3750 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sstr,
	call	Perl_sv_reftype	#
	movq	%rax, %rsi	# D.22857,
	movl	$.LC37, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 3751 0
	jmp	.L807	#
.L803:
	.loc 1 3754 0
	cmpl	$13, %r13d	#, dtype
	jg	.L793	#,
.L829:
	.loc 1 3756 0
	cmpl	$13, %r13d	#, dtype
	je	.L837	#,
.LBB37:
	.loc 1 3757 0
	movq	(%rbx), %rax	# sstr_2->sv_any, D.22848
	movq	64(%rax), %rax	# MEM[(struct XPVGV *)_142].xgv_name, tmp795
	movq	%rax, -80(%rbp)	# tmp795, name
	.loc 1 3758 0
	movq	(%rbx), %rax	# sstr_2->sv_any, D.22848
	movq	72(%rax), %rax	# MEM[(struct XPVGV *)_144].xgv_namelen, tmp796
	movq	%rax, -72(%rbp)	# tmp796, len
	.loc 1 3759 0
	movq	-104(%rbp), %rax	# dstr, tmp797
	movl	$13, %esi	#,
	movq	%rax, %rdi	# tmp797,
	call	Perl_sv_upgrade	#
	.loc 1 3760 0
	movq	-104(%rbp), %rsi	# dstr, tmp798
	movq	-104(%rbp), %rax	# dstr, tmp799
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$42, %edx	#,
	movq	%rax, %rdi	# tmp799,
	call	Perl_sv_magic	#
	.loc 1 3761 0
	movq	(%rbx), %rax	# sstr_2->sv_any, D.22848
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_146].xgv_stash, PL_Sv.383
	movq	%rax, PL_Sv(%rip)	# PL_Sv.383, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.385
	testq	%rax, %rax	# PL_Sv.385
	je	.L839	#,
	.loc 1 3761 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.386
	movl	8(%rax), %edx	# PL_Sv.386_149->sv_refcnt, D.22845
	addl	$1, %edx	#, D.22845
	movl	%edx, 8(%rax)	# D.22845, PL_Sv.386_149->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.386_149->sv_refcnt, D.22845
	testl	%eax, %eax	# D.22845
	je	.L839	#,
	.loc 1 3761 0
	nop
.L839:
	.loc 1 3761 0 discriminator 4
	movq	-104(%rbp), %rax	# dstr, tmp800
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.387
	movq	%rdx, 80(%rax)	# PL_Sv.387, MEM[(struct XPVGV *)_155].xgv_stash
	.loc 1 3762 0 is_stmt 1 discriminator 4
	movq	-104(%rbp), %rax	# dstr, tmp801
	movq	(%rax), %r12	# dstr_17(D)->sv_any, D.22848
	movq	-72(%rbp), %rax	# len, tmp802
	movl	%eax, %edx	# tmp802, D.22846
	movq	-80(%rbp), %rax	# name, tmp803
	movl	%edx, %esi	# D.22846,
	movq	%rax, %rdi	# tmp803,
	call	Perl_savepvn	#
	movq	%rax, 64(%r12)	# D.22857, MEM[(struct XPVGV *)_157].xgv_name
	.loc 1 3763 0 discriminator 4
	movq	-104(%rbp), %rax	# dstr, tmp804
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-72(%rbp), %rdx	# len, tmp805
	movq	%rdx, 72(%rax)	# tmp805, MEM[(struct XPVGV *)_160].xgv_namelen
	.loc 1 3764 0 discriminator 4
	movq	-104(%rbp), %rax	# dstr, tmp806
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$1048576, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp807
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.LBE37:
	jmp	.L840	#
.L837:
	.loc 1 3767 0
	movq	PL_curstackinfo(%rip), %rax	# PL_curstackinfo, PL_curstackinfo.388
	movl	24(%rax), %eax	# PL_curstackinfo.388_163->si_type, D.22846
	cmpl	$3, %eax	#, D.22846
	jne	.L840	#,
	.loc 1 3768 0
	movq	-104(%rbp), %rax	# dstr, tmp808
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_165].xgv_gp, D.22858
	movq	56(%rax), %rax	# _166->gp_cv, D.22859
	testq	%rax, %rax	# D.22859
	je	.L840	#,
	.loc 1 3768 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp809
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_168].xgv_gp, D.22858
	movq	56(%rax), %rax	# _169->gp_cv, D.22859
	movq	(%rax), %rax	# _170->sv_any, D.22860
	movq	64(%rax), %rdx	# _171->xcv_start, D.22861
	movq	PL_sortcop(%rip), %rax	# PL_sortcop, PL_sortcop.389
	cmpq	%rax, %rdx	# PL_sortcop.389, D.22861
	jne	.L840	#,
	.loc 1 3770 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp810
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	.loc 1 3769 0
	movq	64(%rax), %rax	# MEM[(struct XPVGV *)_174].xgv_name, D.22857
	movq	%rax, %rsi	# D.22857,
	movl	$.LC38, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L840:
	.loc 1 3778 0
	movq	-104(%rbp), %rax	# dstr, tmp811
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp812
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp813
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L842	#,
	.loc 1 3778 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp814
	movq	%rax, %rdi	# tmp814,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L842	#,
	.loc 1 3778 0
	nop
.L842:
	.loc 1 3779 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp815
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp816
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_184].xgv_flags, D.22854
	andl	$-2, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_183].xgv_flags
	.loc 1 3780 0
	movq	-104(%rbp), %rax	# dstr, tmp817
	movq	%rax, %rdi	# tmp817,
	call	Perl_gp_free	#
	.loc 1 3781 0
	movq	-104(%rbp), %rax	# dstr, tmp818
	movq	(%rax), %r12	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rax	# sstr_2->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_188].xgv_gp, D.22858
	movq	%rax, %rdi	# D.22858,
	call	Perl_gp_ref	#
	movq	%rax, 56(%r12)	# D.22858, MEM[(struct XPVGV *)_187].xgv_gp
	.loc 1 3782 0
	movl	12(%rbx), %eax	# sstr_2->sv_flags, D.22845
	andl	$57344, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L843	#,
	.loc 1 3782 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sstr,
	call	Perl_sv_tainted	#
	testb	%al, %al	# D.22851
	je	.L843	#,
	.loc 1 3783 0 is_stmt 1
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.391
	testb	%al, %al	# PL_tainting.391
	je	.L843	#,
	.loc 1 3783 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.392
	testb	%al, %al	# PL_tainted.392
	je	.L843	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.393
	testb	%al, %al	# PL_tainting.393
	je	.L843	#,
	movq	-104(%rbp), %rax	# dstr, tmp819
	movq	%rax, %rdi	# tmp819,
	call	Perl_sv_taint	#
.L843:
	.loc 1 3784 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp820
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rax), %eax	# MEM[(struct XPVGV *)_197].xgv_flags, D.22854
	movzbl	%al, %eax	# D.22854, D.22846
	andl	$240, %eax	#, D.22846
	cmpl	$240, %eax	#, D.22846
	je	.L844	#,
	.loc 1 3785 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.394
	movq	48(%rax), %rdx	# PL_curcop.394_201->cop_stash, D.22855
	movq	-104(%rbp), %rax	# dstr, tmp821
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_203].xgv_stash, D.22855
	cmpq	%rax, %rdx	# D.22855, D.22855
	je	.L844	#,
	.loc 1 3787 0
	movq	-104(%rbp), %rax	# dstr, tmp822
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp823
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_206].xgv_flags, D.22854
	orl	$-16, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_205].xgv_flags
.L844:
	.loc 1 3789 0
	movq	-104(%rbp), %rax	# dstr, tmp824
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp825
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_210].xgv_flags, D.22854
	orl	$2, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_209].xgv_flags
	.loc 1 3790 0
	jmp	.L787	#
.L793:
	.loc 1 3795 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$8192, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L845	#,
	.loc 1 3795 0 is_stmt 0 discriminator 1
	movl	-108(%rbp), %eax	# flags, tmp826
	andl	$2, %eax	#, D.22846
	testl	%eax, %eax	# D.22846
	je	.L845	#,
	.loc 1 3796 0 is_stmt 1
	movq	%rbx, %rdi	# sstr,
	call	Perl_mg_get	#
	.loc 1 3797 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	movzbl	%al, %eax	# D.22846, D.22846
	cmpl	%r12d, %eax	# stype, D.22846
	je	.L845	#,
	.loc 1 3798 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	movzbl	%al, %r12d	# D.22846, stype
	.loc 1 3799 0
	cmpl	$13, %r12d	#, stype
	jne	.L845	#,
	.loc 1 3799 0 is_stmt 0 discriminator 1
	cmpl	$13, %r13d	#, dtype
	jg	.L845	#,
	.loc 1 3800 0 is_stmt 1
	jmp	.L829	#
.L845:
	.loc 1 3803 0
	cmpl	$9, %r12d	#, stype
	jne	.L846	#,
	.loc 1 3804 0
	movq	-104(%rbp), %rax	# dstr, tmp827
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	movzbl	%al, %eax	# D.22845, D.22845
	cmpl	$5, %eax	#, D.22845
	ja	.L847	#,
	.loc 1 3804 0 is_stmt 0 discriminator 2
	movq	-104(%rbp), %rax	# dstr, tmp828
	movl	$6, %esi	#,
	movq	%rax, %rdi	# tmp828,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.22851
	je	.L807	#,
.L847:
	.loc 1 3804 0 discriminator 1
	jmp	.L807	#
.L846:
	.loc 1 3806 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp829
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	movzbl	%al, %edx	# D.22845, D.22845
	movl	%r12d, %eax	# stype, stype.397
	cmpl	%eax, %edx	# stype.397, D.22845
	jae	.L850	#,
	.loc 1 3806 0 is_stmt 0 discriminator 2
	movl	%r12d, %edx	# stype, stype.398
	movq	-104(%rbp), %rax	# dstr, tmp830
	movl	%edx, %esi	# stype.398,
	movq	%rax, %rdi	# tmp830,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.22851
	je	.L807	#,
.L850:
	.loc 1 3806 0 discriminator 1
	nop
.L807:
	.loc 1 3809 0 is_stmt 1
	movl	12(%rbx), %r12d	# sstr_1->sv_flags, sflags
	.loc 1 3811 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$524288, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L852	#,
	.loc 1 3812 0
	cmpl	$3, %r13d	#, dtype
	jle	.L853	#,
	.loc 1 3813 0
	cmpl	$13, %r13d	#, dtype
	jne	.L854	#,
.LBB38:
	.loc 1 3814 0
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	(%rax), %rax	# MEM[(struct XRV *)_215].xrv_rv, PL_Sv.399
	movq	%rax, PL_Sv(%rip)	# PL_Sv.399, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.401
	testq	%rax, %rax	# PL_Sv.401
	je	.L856	#,
	.loc 1 3814 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.402
	movl	8(%rax), %edx	# PL_Sv.402_218->sv_refcnt, D.22845
	addl	$1, %edx	#, D.22845
	movl	%edx, 8(%rax)	# D.22845, PL_Sv.402_218->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.402_218->sv_refcnt, D.22845
	testl	%eax, %eax	# D.22845
	je	.L856	#,
	.loc 1 3814 0
	nop
.L856:
	.loc 1 3814 0 discriminator 4
	movq	PL_Sv(%rip), %rax	# PL_Sv, tmp831
	movq	%rax, -64(%rbp)	# tmp831, sref
	.loc 1 3815 0 is_stmt 1 discriminator 4
	movq	$0, -88(%rbp)	#, dref
	.loc 1 3816 0 discriminator 4
	movq	-104(%rbp), %rax	# dstr, tmp832
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rax), %eax	# MEM[(struct XPVGV *)_226].xgv_flags, D.22854
	movzbl	%al, %eax	# D.22854, D.22846
	andl	$1, %eax	#, tmp833
	movl	%eax, -92(%rbp)	# tmp833, intro
	.loc 1 3824 0 discriminator 4
	cmpl	$0, -92(%rbp)	#, intro
	je	.L857	#,
	.loc 1 3825 0
	movq	-104(%rbp), %rax	# dstr, tmp834
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp835
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_231].xgv_flags, D.22854
	andl	$-2, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_230].xgv_flags
	.loc 1 3826 0
	movq	-104(%rbp), %rax	# dstr, tmp836
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_234].xgv_gp, D.22858
	movq	PL_curcop(%rip), %rdx	# PL_curcop, PL_curcop.403
	movl	72(%rdx), %edx	# PL_curcop.403_236->cop_line, D.22845
	movl	%edx, 72(%rax)	# D.22845, _235->gp_line
	.loc 1 3827 0
	movq	-104(%rbp), %rax	# dstr, tmp837
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_238].xgv_gp, D.22858
	movq	-104(%rbp), %rdx	# dstr, tmp838
	movq	%rdx, 48(%rax)	# tmp838, _239->gp_egv
.L857:
	.loc 1 3829 0
	movq	-104(%rbp), %rax	# dstr, tmp839
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp840
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_241].xgv_flags, D.22854
	orl	$2, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_240].xgv_flags
	.loc 1 3830 0
	movq	-64(%rbp), %rax	# sref, tmp841
	movl	12(%rax), %eax	# sref_224->sv_flags, D.22845
	movzbl	%al, %eax	# D.22845, D.22845
	subl	$10, %eax	#, tmp842
	cmpl	$5, %eax	#, tmp842
	ja	.L858	#,
	movl	%eax, %eax	# tmp842, tmp843
	movq	.L860(,%rax,8), %rax	#, tmp844
	jmp	*%rax	# tmp844
	.section	.rodata
	.align 8
	.align 4
.L860:
	.quad	.L859
	.quad	.L861
	.quad	.L862
	.quad	.L858
	.quad	.L863
	.quad	.L864
	.text
.L859:
	.loc 1 3832 0
	cmpl	$0, -92(%rbp)	#, intro
	je	.L865	#,
	.loc 1 3833 0
	movq	-104(%rbp), %rax	# dstr, tmp845
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_246].xgv_gp, D.22858
	addq	$32, %rax	#, D.22862
	movq	%rax, %rdi	# D.22862,
	call	Perl_save_generic_svref	#
	jmp	.L866	#
.L865:
	.loc 1 3835 0
	movq	-104(%rbp), %rax	# dstr, tmp846
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_249].xgv_gp, D.22858
	movq	32(%rax), %rax	# _250->gp_av, tmp847
	movq	%rax, -88(%rbp)	# tmp847, dref
.L866:
	.loc 1 3836 0
	movq	-104(%rbp), %rax	# dstr, tmp848
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_252].xgv_gp, D.22858
	movq	-64(%rbp), %rdx	# sref, tmp849
	movq	%rdx, 32(%rax)	# tmp849, _253->gp_av
	.loc 1 3837 0
	movq	-104(%rbp), %rax	# dstr, tmp850
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rax), %eax	# MEM[(struct XPVGV *)_254].xgv_flags, D.22854
	movzbl	%al, %eax	# D.22854, D.22846
	andl	$32, %eax	#, D.22846
	testl	%eax, %eax	# D.22846
	jne	.L867	#,
	.loc 1 3838 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.404
	movq	48(%rax), %rdx	# PL_curcop.404_258->cop_stash, D.22855
	movq	-104(%rbp), %rax	# dstr, tmp851
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_260].xgv_stash, D.22855
	cmpq	%rax, %rdx	# D.22855, D.22855
	je	.L867	#,
	.loc 1 3840 0
	movq	-104(%rbp), %rax	# dstr, tmp852
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp853
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_263].xgv_flags, D.22854
	orl	$32, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_262].xgv_flags
	.loc 1 3842 0
	jmp	.L868	#
.L867:
	jmp	.L868	#
.L861:
	.loc 1 3844 0
	cmpl	$0, -92(%rbp)	#, intro
	je	.L869	#,
	.loc 1 3845 0
	movq	-104(%rbp), %rax	# dstr, tmp854
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_266].xgv_gp, D.22858
	addq	$40, %rax	#, D.22863
	movq	%rax, %rdi	# D.22863,
	call	Perl_save_generic_svref	#
	jmp	.L870	#
.L869:
	.loc 1 3847 0
	movq	-104(%rbp), %rax	# dstr, tmp855
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_269].xgv_gp, D.22858
	movq	40(%rax), %rax	# _270->gp_hv, tmp856
	movq	%rax, -88(%rbp)	# tmp856, dref
.L870:
	.loc 1 3848 0
	movq	-104(%rbp), %rax	# dstr, tmp857
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_272].xgv_gp, D.22858
	movq	-64(%rbp), %rdx	# sref, tmp858
	movq	%rdx, 40(%rax)	# tmp858, _273->gp_hv
	.loc 1 3849 0
	movq	-104(%rbp), %rax	# dstr, tmp859
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rax), %eax	# MEM[(struct XPVGV *)_274].xgv_flags, D.22854
	movzbl	%al, %eax	# D.22854, D.22846
	andl	$64, %eax	#, D.22846
	testl	%eax, %eax	# D.22846
	jne	.L871	#,
	.loc 1 3850 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.405
	movq	48(%rax), %rdx	# PL_curcop.405_278->cop_stash, D.22855
	movq	-104(%rbp), %rax	# dstr, tmp860
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_280].xgv_stash, D.22855
	cmpq	%rax, %rdx	# D.22855, D.22855
	je	.L871	#,
	.loc 1 3852 0
	movq	-104(%rbp), %rax	# dstr, tmp861
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp862
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_283].xgv_flags, D.22854
	orl	$64, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_282].xgv_flags
	.loc 1 3854 0
	jmp	.L868	#
.L871:
	jmp	.L868	#
.L862:
	.loc 1 3856 0
	cmpl	$0, -92(%rbp)	#, intro
	je	.L872	#,
	.loc 1 3857 0
	movq	-104(%rbp), %rax	# dstr, tmp863
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_286].xgv_gp, D.22858
	movl	64(%rax), %eax	# _287->gp_cvgen, D.22845
	testl	%eax, %eax	# D.22845
	je	.L873	#,
	.loc 1 3857 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp864
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_289].xgv_gp, D.22858
	movq	56(%rax), %rax	# _290->gp_cv, D.22859
	cmpq	-64(%rbp), %rax	# sref, D.22859
	je	.L873	#,
	.loc 1 3858 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp865
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_292].xgv_gp, D.22858
	movq	56(%rax), %rax	# _293->gp_cv, D.22859
	movq	%rax, %rdi	# D.22859,
	call	Perl_sv_free	#
	.loc 1 3859 0
	movq	-104(%rbp), %rax	# dstr, tmp866
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_295].xgv_gp, D.22858
	movq	$0, 56(%rax)	#, _296->gp_cv
	.loc 1 3860 0
	movq	-104(%rbp), %rax	# dstr, tmp867
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_297].xgv_gp, D.22858
	movl	$0, 64(%rax)	#, _298->gp_cvgen
	.loc 1 3861 0
	movl	PL_sub_generation(%rip), %eax	# PL_sub_generation, PL_sub_generation.406
	addl	$1, %eax	#, PL_sub_generation.407
	movl	%eax, PL_sub_generation(%rip)	# PL_sub_generation.407, PL_sub_generation
.L873:
	.loc 1 3863 0
	movq	-104(%rbp), %rax	# dstr, tmp868
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_301].xgv_gp, D.22858
	addq	$56, %rax	#, D.22864
	movq	%rax, %rdi	# D.22864,
	call	Perl_save_generic_svref	#
	jmp	.L874	#
.L872:
	.loc 1 3866 0
	movq	-104(%rbp), %rax	# dstr, tmp869
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_304].xgv_gp, D.22858
	movq	56(%rax), %rax	# _305->gp_cv, tmp870
	movq	%rax, -88(%rbp)	# tmp870, dref
.L874:
	.loc 1 3867 0
	movq	-104(%rbp), %rax	# dstr, tmp871
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_307].xgv_gp, D.22858
	movq	56(%rax), %rax	# _308->gp_cv, D.22859
	cmpq	-64(%rbp), %rax	# sref, D.22859
	je	.L875	#,
.LBB39:
	.loc 1 3868 0
	movq	-104(%rbp), %rax	# dstr, tmp872
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_310].xgv_gp, D.22858
	movq	56(%rax), %rax	# _311->gp_cv, tmp873
	movq	%rax, -56(%rbp)	# tmp873, cv
	.loc 1 3869 0
	cmpq	$0, -56(%rbp)	#, cv
	je	.L876	#,
	.loc 1 3870 0
	movq	-104(%rbp), %rax	# dstr, tmp874
	movq	(%rax), %rax	# MEM[(struct GV *)dstr_17(D)].sv_any, D.22865
	movq	56(%rax), %rax	# _313->xgv_gp, D.22858
	movl	64(%rax), %eax	# _314->gp_cvgen, D.22845
	testl	%eax, %eax	# D.22845
	jne	.L877	#,
	.loc 1 3871 0 discriminator 1
	movq	-56(%rbp), %rax	# cv, tmp875
	movq	(%rax), %rax	# cv_312->sv_any, D.22860
	movq	72(%rax), %rax	# _316->xcv_root, D.22861
	.loc 1 3870 0 discriminator 1
	testq	%rax, %rax	# D.22861
	jne	.L878	#,
	.loc 1 3871 0
	movq	-56(%rbp), %rax	# cv, tmp876
	movq	(%rax), %rax	# cv_312->sv_any, D.22860
	movq	80(%rax), %rax	# _318->xcv_xsub, D.22866
	testq	%rax, %rax	# D.22866
	je	.L877	#,
.L878:
	.loc 1 3875 0
	movq	PL_curstackinfo(%rip), %rax	# PL_curstackinfo, PL_curstackinfo.408
	movl	24(%rax), %eax	# PL_curstackinfo.408_320->si_type, D.22846
	cmpl	$3, %eax	#, D.22846
	jne	.L879	#,
	.loc 1 3876 0 discriminator 1
	movq	-56(%rbp), %rax	# cv, tmp877
	movq	(%rax), %rax	# cv_312->sv_any, D.22860
	movq	64(%rax), %rdx	# _322->xcv_start, D.22861
	movq	PL_sortcop(%rip), %rax	# PL_sortcop, PL_sortcop.409
	.loc 1 3875 0 discriminator 1
	cmpq	%rax, %rdx	# PL_sortcop.409, D.22861
	jne	.L879	#,
	.loc 1 3879 0
	movq	-104(%rbp), %rax	# dstr, tmp878
	movq	(%rax), %rax	# MEM[(struct GV *)dstr_17(D)].sv_any, D.22865
	movq	56(%rax), %rax	# _325->xgv_gp, D.22858
	movq	48(%rax), %rax	# _326->gp_egv, D.22867
	testq	%rax, %rax	# D.22867
	je	.L880	#,
	.loc 1 3879 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp879
	movq	(%rax), %rax	# MEM[(struct GV *)dstr_17(D)].sv_any, D.22865
	movq	56(%rax), %rax	# _328->xgv_gp, D.22858
	movq	48(%rax), %rax	# _329->gp_egv, iftmp.410
	jmp	.L881	#
.L880:
	.loc 1 3879 0 discriminator 2
	movq	-104(%rbp), %rax	# dstr, iftmp.410
.L881:
	.loc 1 3879 0 discriminator 3
	movq	(%rax), %rax	# iftmp.410_12->sv_any, D.22865
	.loc 1 3877 0 is_stmt 1 discriminator 3
	movq	64(%rax), %rax	# _332->xgv_name, D.22857
	movq	%rax, %rsi	# D.22857,
	movl	$.LC38, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L879:
	.loc 1 3882 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.411
	movq	80(%rax), %rax	# PL_curcop.411_334->cop_warnings, D.22853
	testq	%rax, %rax	# D.22853
	je	.L882	#,
	.loc 1 3882 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.412
	movq	80(%rax), %rax	# PL_curcop.412_336->cop_warnings, D.22853
	cmpq	$32, %rax	#, D.22853
	je	.L882	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.413
	movq	80(%rax), %rax	# PL_curcop.413_338->cop_warnings, D.22853
	cmpq	$16, %rax	#, D.22853
	je	.L883	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.414
	movq	80(%rax), %rax	# PL_curcop.414_340->cop_warnings, D.22853
	movq	(%rax), %rax	# _341->sv_any, D.22848
	movq	(%rax), %rax	# MEM[(struct XPV *)_342].xpv_pv, D.22857
	addq	$4, %rax	#, D.22857
	movzbl	(%rax), %eax	# *_344, D.22851
	movsbl	%al, %eax	# D.22851, D.22846
	andl	$64, %eax	#, D.22846
	testl	%eax, %eax	# D.22846
	jne	.L883	#,
.L882:
	.loc 1 3882 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.415
	movq	80(%rax), %rax	# PL_curcop.415_348->cop_warnings, D.22853
	testq	%rax, %rax	# D.22853
	jne	.L884	#,
	.loc 1 3882 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.416
	movzbl	%al, %eax	# PL_dowarn.416, D.22846
	andl	$1, %eax	#, D.22846
	testl	%eax, %eax	# D.22846
	jne	.L883	#,
.L884:
	.loc 1 3883 0 is_stmt 1
	movq	-56(%rbp), %rax	# cv, tmp880
	movq	(%rax), %rax	# cv_312->sv_any, D.22860
	movzwl	136(%rax), %eax	# _353->xcv_flags, D.22856
	movzwl	%ax, %eax	# D.22856, D.22846
	andl	$512, %eax	#, D.22846
	testl	%eax, %eax	# D.22846
	je	.L877	#,
	.loc 1 3884 0
	movq	-64(%rbp), %rax	# sref, tmp881
	movq	(%rax), %rax	# MEM[(struct CV *)sref_224].sv_any, D.22860
	movzwl	136(%rax), %eax	# _357->xcv_flags, D.22856
	movzwl	%ax, %eax	# D.22856, D.22846
	andl	$512, %eax	#, D.22846
	testl	%eax, %eax	# D.22846
	je	.L883	#,
	.loc 1 3885 0
	movq	-64(%rbp), %rax	# sref, tmp882
	movq	%rax, %rdi	# tmp882,
	call	Perl_cv_const_sv	#
	movq	%rax, %r12	#, D.22853
	movq	-56(%rbp), %rax	# cv, tmp883
	movq	%rax, %rdi	# tmp883,
	call	Perl_cv_const_sv	#
	movq	%r12, %rsi	# D.22853,
	movq	%rax, %rdi	# D.22853,
	call	Perl_sv_cmp	#
	testl	%eax, %eax	# D.22846
	je	.L877	#,
.L883:
	.loc 1 3893 0
	movq	-104(%rbp), %rax	# dstr, tmp884
	movq	(%rax), %rax	# MEM[(struct GV *)dstr_17(D)].sv_any, D.22865
	movq	56(%rax), %rax	# _364->xgv_gp, D.22858
	movq	48(%rax), %rax	# _365->gp_egv, D.22867
	testq	%rax, %rax	# D.22867
	je	.L885	#,
	.loc 1 3893 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp885
	movq	(%rax), %rax	# MEM[(struct GV *)dstr_17(D)].sv_any, D.22865
	movq	56(%rax), %rax	# _367->xgv_gp, D.22858
	movq	48(%rax), %rax	# _368->gp_egv, iftmp.417
	jmp	.L886	#
.L885:
	.loc 1 3893 0 discriminator 2
	movq	-104(%rbp), %rax	# dstr, iftmp.417
.L886:
	.loc 1 3893 0 discriminator 3
	movq	(%rax), %rax	# iftmp.417_13->sv_any, D.22865
	.loc 1 3888 0 is_stmt 1 discriminator 3
	movq	64(%rax), %rcx	# _371->xgv_name, D.22857
	.loc 1 3892 0 discriminator 3
	movq	-104(%rbp), %rax	# dstr, tmp886
	movq	(%rax), %rax	# MEM[(struct GV *)dstr_17(D)].sv_any, D.22865
	movq	80(%rax), %rax	# _373->xgv_stash, D.22855
	movq	(%rax), %rax	# _374->sv_any, D.22868
	.loc 1 3888 0 discriminator 3
	movq	80(%rax), %rdx	# _375->xhv_name, D.22857
	.loc 1 3889 0 discriminator 3
	movq	-56(%rbp), %rax	# cv, tmp887
	movq	(%rax), %rax	# cv_312->sv_any, D.22860
	movzwl	136(%rax), %eax	# _377->xcv_flags, D.22856
	movzwl	%ax, %eax	# D.22856, D.22846
	andl	$512, %eax	#, D.22846
	.loc 1 3888 0 discriminator 3
	testl	%eax, %eax	# D.22846
	je	.L887	#,
	.loc 1 3888 0 is_stmt 0 discriminator 1
	movl	$.LC39, %eax	#, iftmp.418
	jmp	.L888	#
.L887:
	.loc 1 3888 0 discriminator 2
	movl	$.LC40, %eax	#, iftmp.418
.L888:
	.loc 1 3888 0 discriminator 3
	movq	%rax, %rsi	# iftmp.418,
	movl	$19, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L877:
	.loc 1 3896 0 is_stmt 1
	cmpl	$0, -92(%rbp)	#, intro
	jne	.L876	#,
	.loc 1 3898 0
	movq	-64(%rbp), %rax	# sref, tmp888
	movl	12(%rax), %eax	# sref_224->sv_flags, D.22845
	andl	$262144, %eax	#, D.22845
	.loc 1 3897 0
	testl	%eax, %eax	# D.22845
	je	.L889	#,
	.loc 1 3898 0
	movq	-64(%rbp), %rax	# sref, tmp889
	movq	(%rax), %rax	# sref_224->sv_any, D.22848
	.loc 1 3897 0
	movq	(%rax), %rax	# MEM[(struct XPV *)_385].xpv_pv, iftmp.419
	jmp	.L890	#
.L889:
	.loc 1 3897 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.419
.L890:
	.loc 1 3897 0 discriminator 2
	movq	-104(%rbp), %rsi	# dstr, tmp890
	movq	-56(%rbp), %rcx	# cv, tmp891
	movq	%rax, %rdx	# iftmp.419,
	movq	%rcx, %rdi	# tmp891,
	call	Perl_cv_ckproto	#
.L876:
	.loc 1 3900 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp892
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_388].xgv_gp, D.22858
	movq	-64(%rbp), %rdx	# sref, tmp893
	movq	%rdx, 56(%rax)	# tmp893, _389->gp_cv
	.loc 1 3901 0
	movq	-104(%rbp), %rax	# dstr, tmp894
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_390].xgv_gp, D.22858
	movl	$0, 64(%rax)	#, _391->gp_cvgen
	.loc 1 3902 0
	movq	-104(%rbp), %rax	# dstr, tmp895
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp896
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_393].xgv_flags, D.22854
	orl	$4, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_392].xgv_flags
	.loc 1 3903 0
	movl	PL_sub_generation(%rip), %eax	# PL_sub_generation, PL_sub_generation.420
	addl	$1, %eax	#, PL_sub_generation.421
	movl	%eax, PL_sub_generation(%rip)	# PL_sub_generation.421, PL_sub_generation
.L875:
.LBE39:
	.loc 1 3905 0
	movq	-104(%rbp), %rax	# dstr, tmp897
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rax), %eax	# MEM[(struct XPVGV *)_398].xgv_flags, D.22854
	testb	%al, %al	# D.22869
	js	.L891	#,
	.loc 1 3906 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.422
	movq	48(%rax), %rdx	# PL_curcop.422_401->cop_stash, D.22855
	movq	-104(%rbp), %rax	# dstr, tmp898
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_403].xgv_stash, D.22855
	cmpq	%rax, %rdx	# D.22855, D.22855
	je	.L891	#,
	.loc 1 3908 0
	movq	-104(%rbp), %rax	# dstr, tmp899
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp900
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_406].xgv_flags, D.22854
	orl	$-128, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_405].xgv_flags
	.loc 1 3910 0
	jmp	.L868	#
.L891:
	jmp	.L868	#
.L864:
	.loc 1 3912 0
	cmpl	$0, -92(%rbp)	#, intro
	je	.L892	#,
	.loc 1 3913 0
	movq	-104(%rbp), %rax	# dstr, tmp901
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_409].xgv_gp, D.22858
	addq	$16, %rax	#, D.22870
	movq	%rax, %rdi	# D.22870,
	call	Perl_save_generic_svref	#
	jmp	.L893	#
.L892:
	.loc 1 3915 0
	movq	-104(%rbp), %rax	# dstr, tmp902
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_412].xgv_gp, D.22858
	movq	16(%rax), %rax	# _413->gp_io, tmp903
	movq	%rax, -88(%rbp)	# tmp903, dref
.L893:
	.loc 1 3916 0
	movq	-104(%rbp), %rax	# dstr, tmp904
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_415].xgv_gp, D.22858
	movq	-64(%rbp), %rdx	# sref, tmp905
	movq	%rdx, 16(%rax)	# tmp905, _416->gp_io
	.loc 1 3917 0
	jmp	.L868	#
.L863:
	.loc 1 3919 0
	cmpl	$0, -92(%rbp)	#, intro
	je	.L894	#,
	.loc 1 3920 0
	movq	-104(%rbp), %rax	# dstr, tmp906
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_417].xgv_gp, D.22858
	addq	$24, %rax	#, D.22864
	movq	%rax, %rdi	# D.22864,
	call	Perl_save_generic_svref	#
	jmp	.L895	#
.L894:
	.loc 1 3922 0
	movq	-104(%rbp), %rax	# dstr, tmp907
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_420].xgv_gp, D.22858
	movq	24(%rax), %rax	# _421->gp_form, tmp908
	movq	%rax, -88(%rbp)	# tmp908, dref
.L895:
	.loc 1 3923 0
	movq	-104(%rbp), %rax	# dstr, tmp909
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_423].xgv_gp, D.22858
	movq	-64(%rbp), %rdx	# sref, tmp910
	movq	%rdx, 24(%rax)	# tmp910, _424->gp_form
	.loc 1 3924 0
	jmp	.L868	#
.L858:
	.loc 1 3926 0
	cmpl	$0, -92(%rbp)	#, intro
	je	.L896	#,
	.loc 1 3927 0
	movq	-104(%rbp), %rax	# dstr, tmp911
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_425].xgv_gp, D.22858
	movq	%rax, %rdi	# D.22871,
	call	Perl_save_generic_svref	#
	jmp	.L897	#
.L896:
	.loc 1 3929 0
	movq	-104(%rbp), %rax	# dstr, tmp912
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_428].xgv_gp, D.22858
	movq	(%rax), %rax	# _429->gp_sv, tmp913
	movq	%rax, -88(%rbp)	# tmp913, dref
.L897:
	.loc 1 3930 0
	movq	-104(%rbp), %rax	# dstr, tmp914
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_431].xgv_gp, D.22858
	movq	-64(%rbp), %rdx	# sref, tmp915
	movq	%rdx, (%rax)	# tmp915, _432->gp_sv
	.loc 1 3931 0
	movq	-104(%rbp), %rax	# dstr, tmp916
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rax), %eax	# MEM[(struct XPVGV *)_433].xgv_flags, D.22854
	movzbl	%al, %eax	# D.22854, D.22846
	andl	$16, %eax	#, D.22846
	testl	%eax, %eax	# D.22846
	jne	.L898	#,
	.loc 1 3932 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.423
	movq	48(%rax), %rdx	# PL_curcop.423_437->cop_stash, D.22855
	movq	-104(%rbp), %rax	# dstr, tmp917
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_439].xgv_stash, D.22855
	cmpq	%rax, %rdx	# D.22855, D.22855
	je	.L898	#,
	.loc 1 3934 0
	movq	-104(%rbp), %rax	# dstr, tmp918
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rdx	# dstr, tmp919
	movq	(%rdx), %rdx	# dstr_17(D)->sv_any, D.22848
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_442].xgv_flags, D.22854
	orl	$16, %edx	#, D.22854
	movb	%dl, 88(%rax)	# D.22854, MEM[(struct XPVGV *)_441].xgv_flags
	.loc 1 3936 0
	jmp	.L963	#
.L898:
.L963:
	nop
.L868:
	.loc 1 3938 0
	cmpq	$0, -88(%rbp)	#, dref
	je	.L899	#,
	.loc 1 3939 0
	movq	-88(%rbp), %rax	# dref, tmp920
	movq	%rax, %rdi	# tmp920,
	call	Perl_sv_free	#
.L899:
	.loc 1 3940 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$57344, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L900	#,
	.loc 1 3940 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sstr,
	call	Perl_sv_tainted	#
	testb	%al, %al	# D.22851
	je	.L900	#,
	.loc 1 3941 0 is_stmt 1
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.424
	testb	%al, %al	# PL_tainting.424
	je	.L900	#,
	.loc 1 3941 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.425
	testb	%al, %al	# PL_tainted.425
	je	.L900	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.426
	testb	%al, %al	# PL_tainting.426
	je	.L900	#,
	movq	-104(%rbp), %rax	# dstr, tmp921
	movq	%rax, %rdi	# tmp921,
	call	Perl_sv_taint	#
	.loc 1 3942 0 is_stmt 1 discriminator 1
	jmp	.L787	#
.L900:
	.loc 1 3942 0 is_stmt 0
	jmp	.L787	#
.L854:
.LBE38:
	.loc 1 3944 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp922
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rax), %rax	# MEM[(struct XPV *)_451].xpv_pv, D.22857
	testq	%rax, %rax	# D.22857
	je	.L853	#,
	.loc 1 3945 0
	movq	-104(%rbp), %rax	# dstr, tmp923
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L902	#,
	.loc 1 3945 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp924
	movq	%rax, %rdi	# tmp924,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L902	#,
	.loc 1 3945 0
	nop
.L902:
	.loc 1 3946 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp925
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	16(%rax), %rax	# MEM[(struct XPV *)_458].xpv_len, D.22872
	testq	%rax, %rax	# D.22872
	je	.L903	#,
	.loc 1 3947 0
	movq	-104(%rbp), %rax	# dstr, tmp926
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rax), %rax	# MEM[(struct XPV *)_460].xpv_pv, D.22857
	movq	%rax, %rdi	# D.22857,
	call	Perl_safesysfree	#
.L903:
	.loc 1 3948 0
	movq	-104(%rbp), %rax	# dstr, tmp927
	movq	(%rax), %rdx	# dstr_17(D)->sv_any, D.22848
	movq	-104(%rbp), %rax	# dstr, tmp928
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	$0, 8(%rax)	#, MEM[(struct XPV *)_463].xpv_cur
	movq	8(%rax), %rax	# MEM[(struct XPV *)_463].xpv_cur, D.22872
	movq	%rax, 16(%rdx)	# D.22872, MEM[(struct XPV *)_462].xpv_len
.L853:
	.loc 1 3951 0
	movq	-104(%rbp), %rax	# dstr, tmp929
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp930
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp931
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L905	#,
	.loc 1 3951 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp932
	movq	%rax, %rdi	# tmp932,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L905	#,
	.loc 1 3951 0
	nop
.L905:
	.loc 1 3952 0 is_stmt 1
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	(%rax), %rax	# MEM[(struct XRV *)_472].xrv_rv, PL_Sv.429
	movq	%rax, PL_Sv(%rip)	# PL_Sv.429, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.431
	testq	%rax, %rax	# PL_Sv.431
	je	.L907	#,
	.loc 1 3952 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.432
	movl	8(%rax), %edx	# PL_Sv.432_475->sv_refcnt, D.22845
	addl	$1, %edx	#, D.22845
	movl	%edx, 8(%rax)	# D.22845, PL_Sv.432_475->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.432_475->sv_refcnt, D.22845
	testl	%eax, %eax	# D.22845
	je	.L907	#,
	.loc 1 3952 0
	nop
.L907:
	.loc 1 3952 0 discriminator 4
	movq	-104(%rbp), %rax	# dstr, tmp933
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.433
	movq	%rdx, (%rax)	# PL_Sv.433, MEM[(struct XRV *)_481].xrv_rv
	.loc 1 3953 0 is_stmt 1 discriminator 4
	movq	-104(%rbp), %rax	# dstr, tmp934
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$524288, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp935
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 3954 0 discriminator 4
	movl	%r12d, %eax	# sflags, D.22845
	andl	$33554432, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L908	#,
	.loc 1 3955 0
	movq	-104(%rbp), %rax	# dstr, tmp936
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$33554432, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp937
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 3957 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$131072, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L909	#,
	.loc 1 3958 0
	movq	-104(%rbp), %rax	# dstr, tmp938
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$131072, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp939
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L909:
	.loc 1 3959 0
	movq	-104(%rbp), %rax	# dstr, tmp940
	movq	(%rax), %rdx	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_492].xnv_nv, D.22852
	movq	%rax, 32(%rdx)	# D.22852, MEM[(struct XPVNV *)_491].xnv_nv
.L908:
	.loc 1 3961 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$16777216, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L910	#,
	.loc 1 3962 0
	movq	-104(%rbp), %rax	# dstr, tmp941
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L912	#,
	.loc 1 3962 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp942
	movq	%rax, %rdi	# tmp942,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L912	#,
	.loc 1 3962 0
	nop
.L912:
	.loc 1 3962 0 discriminator 3
	movq	-104(%rbp), %rax	# dstr, tmp943
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$16777216, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp944
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 3963 0 is_stmt 1 discriminator 3
	movl	%r12d, %eax	# sflags, D.22845
	andl	$65536, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L913	#,
	.loc 1 3964 0
	movq	-104(%rbp), %rax	# dstr, tmp945
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$65536, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp946
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L913:
	.loc 1 3965 0
	movl	%r12d, %eax	# sflags, sflags.435
	testl	%eax, %eax	# sflags.435
	jns	.L914	#,
	.loc 1 3966 0
	movq	-104(%rbp), %rax	# dstr, tmp947
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$-2147483648, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp948
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L914:
	.loc 1 3967 0
	movq	-104(%rbp), %rax	# dstr, tmp949
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rdx	# sstr_1->sv_any, D.22848
	movq	24(%rdx), %rdx	# MEM[(struct XPVIV *)_509].xiv_iv, D.22849
	movq	%rdx, 24(%rax)	# D.22849, MEM[(struct XPVIV *)_508].xiv_iv
.L910:
	.loc 1 3969 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$268435456, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L916	#,
	.loc 1 3970 0
	movq	-104(%rbp), %rax	# dstr, tmp950
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$268435456, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp951
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	jmp	.L916	#
.L852:
	.loc 1 3973 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$67108864, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L917	#,
	.loc 1 3982 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$2048, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L918	#,
	.loc 1 3983 0 discriminator 1
	movl	8(%rbx), %eax	# sstr_1->sv_refcnt, D.22845
	.loc 1 3982 0 discriminator 1
	cmpl	$1, %eax	#, D.22845
	jne	.L918	#,
	.loc 1 3984 0
	movl	-108(%rbp), %eax	# flags, tmp952
	andl	$16, %eax	#, D.22846
	.loc 1 3983 0
	testl	%eax, %eax	# D.22846
	jne	.L918	#,
	.loc 1 3985 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$2097152, %eax	#, D.22845
	.loc 1 3984 0
	testl	%eax, %eax	# D.22845
	jne	.L918	#,
	.loc 1 3986 0
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	16(%rax), %rax	# MEM[(struct XPV *)_521].xpv_len, D.22872
	.loc 1 3985 0
	testq	%rax, %rax	# D.22872
	je	.L918	#,
	.loc 1 3988 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.436
	.loc 1 3986 0
	testq	%rax, %rax	# PL_op.436
	je	.L919	#,
	.loc 1 3988 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.437
	movzwl	32(%rax), %eax	# PL_op.437_524->op_type, D.22856
	cmpw	$37, %ax	#, D.22856
	je	.L918	#,
.L919:
	.loc 1 3990 0
	movq	-104(%rbp), %rax	# dstr, tmp953
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rax), %rax	# MEM[(struct XPV *)_526].xpv_pv, D.22857
	testq	%rax, %rax	# D.22857
	je	.L920	#,
	.loc 1 3991 0
	movq	-104(%rbp), %rax	# dstr, tmp954
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L921	#,
	.loc 1 3992 0
	movq	-104(%rbp), %rax	# dstr, tmp955
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$-2097153, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp956
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 3993 0
	movq	-104(%rbp), %rax	# dstr, tmp957
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rax), %rdx	# MEM[(struct XPV *)_532].xpv_pv, D.22857
	movq	-104(%rbp), %rax	# dstr, tmp958
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_534].xiv_iv, D.22849
	negq	%rax	# D.22873
	addq	%rdx, %rax	# D.22857, D.22857
	movq	%rax, %rdi	# D.22857,
	call	Perl_safesysfree	#
	jmp	.L920	#
.L921:
	.loc 1 3995 0
	movq	-104(%rbp), %rax	# dstr, tmp959
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	16(%rax), %rax	# MEM[(struct XPV *)_539].xpv_len, D.22872
	testq	%rax, %rax	# D.22872
	je	.L920	#,
	.loc 1 3996 0
	movq	-104(%rbp), %rax	# dstr, tmp960
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rax), %rax	# MEM[(struct XPV *)_541].xpv_pv, D.22857
	movq	%rax, %rdi	# D.22857,
	call	Perl_safesysfree	#
.L920:
	.loc 1 3998 0
	movq	-104(%rbp), %rax	# dstr, tmp961
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp962
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp963
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$67371008, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp964
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 3999 0
	movq	-104(%rbp), %rax	# dstr, tmp965
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rdx	# sstr_1->sv_any, D.22848
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_548].xpv_pv, D.22857
	movq	%rdx, (%rax)	# D.22857, MEM[(struct XPV *)_547].xpv_pv
	.loc 1 4000 0
	movq	-104(%rbp), %rax	# dstr, tmp966
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rdx	# sstr_1->sv_any, D.22848
	movq	16(%rdx), %rdx	# MEM[(struct XPV *)_551].xpv_len, D.22872
	movq	%rdx, 16(%rax)	# D.22872, MEM[(struct XPV *)_550].xpv_len
	.loc 1 4001 0
	movq	-104(%rbp), %rax	# dstr, tmp967
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rdx	# sstr_1->sv_any, D.22848
	movq	8(%rdx), %rdx	# MEM[(struct XPV *)_554].xpv_cur, D.22872
	movq	%rdx, 8(%rax)	# D.22872, MEM[(struct XPV *)_553].xpv_cur
	.loc 1 4003 0
	movq	-104(%rbp), %rax	# dstr, tmp968
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andb	$247, %ah	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp969
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 4004 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, 12(%rbx)	# D.22845, sstr_1->sv_flags
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L923	#,
	.loc 1 4004 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sstr,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L923	#,
	.loc 1 4004 0
	nop
.L923:
	.loc 1 4005 0 is_stmt 1
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	$0, (%rax)	#, MEM[(struct XPV *)_565].xpv_pv
	.loc 1 4006 0
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	$0, 16(%rax)	#, MEM[(struct XPV *)_566].xpv_len
	.loc 1 4007 0
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	$0, 8(%rax)	#, MEM[(struct XPV *)_567].xpv_cur
	.loc 1 4008 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andb	$247, %ah	#, D.22845
	movl	%eax, 12(%rbx)	# D.22845, sstr_1->sv_flags
	jmp	.L924	#
.L918:
.LBB40:
	.loc 1 4011 0
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	8(%rax), %rax	# MEM[(struct XPV *)_570].xpv_cur, tmp970
	movq	%rax, -48(%rbp)	# tmp970, len
	.loc 1 4012 0
	movq	-104(%rbp), %rax	# dstr, tmp971
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	16(%rax), %rax	# MEM[(struct XPV *)_572].xpv_len, D.22872
	movq	-48(%rbp), %rdx	# len, tmp972
	addq	$1, %rdx	#, D.22872
	cmpq	%rdx, %rax	# D.22872, D.22872
	jae	.L926	#,
	.loc 1 4012 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# len, tmp973
	leaq	1(%rax), %rdx	#, D.22872
	movq	-104(%rbp), %rax	# dstr, tmp974
	movq	%rdx, %rsi	# D.22872,
	movq	%rax, %rdi	# tmp974,
	call	Perl_sv_grow	#
.L926:
	.loc 1 4013 0 is_stmt 1
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	(%rax), %rcx	# MEM[(struct XPV *)_579].xpv_pv, D.22857
	movq	-104(%rbp), %rax	# dstr, tmp976
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rax), %rax	# MEM[(struct XPV *)_581].xpv_pv, D.22857
	movq	-48(%rbp), %rdx	# len, tmp977
	movq	%rcx, %rsi	# D.22857,
	movq	%rax, %rdi	# D.22857,
	call	memmove	#
	.loc 1 4014 0
	movq	-104(%rbp), %rax	# dstr, tmp978
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	-48(%rbp), %rdx	# len, tmp979
	movq	%rdx, 8(%rax)	# tmp979, MEM[(struct XPV *)_583].xpv_cur
	.loc 1 4015 0
	movq	-104(%rbp), %rax	# dstr, tmp980
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rax), %rdx	# MEM[(struct XPV *)_584].xpv_pv, D.22857
	movq	-104(%rbp), %rax	# dstr, tmp981
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	8(%rax), %rax	# MEM[(struct XPV *)_586].xpv_cur, D.22872
	addq	%rdx, %rax	# D.22857, D.22857
	movb	$0, (%rax)	#, *_588
	.loc 1 4016 0
	movq	-104(%rbp), %rax	# dstr, tmp982
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp983
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp984
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$67371008, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp985
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L924:
.LBE40:
	.loc 1 4018 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$536870912, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L927	#,
	.loc 1 4019 0
	movq	-104(%rbp), %rax	# dstr, tmp986
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$536870912, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp987
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L927:
	.loc 1 4021 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$33554432, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L928	#,
	.loc 1 4022 0
	movq	-104(%rbp), %rax	# dstr, tmp988
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$33554432, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp989
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 4023 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$131072, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L929	#,
	.loc 1 4024 0
	movq	-104(%rbp), %rax	# dstr, tmp990
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$131072, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp991
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L929:
	.loc 1 4025 0
	movq	-104(%rbp), %rax	# dstr, tmp992
	movq	(%rax), %rdx	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_603].xnv_nv, D.22852
	movq	%rax, 32(%rdx)	# D.22852, MEM[(struct XPVNV *)_602].xnv_nv
.L928:
	.loc 1 4027 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$16777216, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L930	#,
	.loc 1 4028 0
	movq	-104(%rbp), %rax	# dstr, tmp993
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L932	#,
	.loc 1 4028 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp994
	movq	%rax, %rdi	# tmp994,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L932	#,
	.loc 1 4028 0
	nop
.L932:
	.loc 1 4028 0 discriminator 3
	movq	-104(%rbp), %rax	# dstr, tmp995
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$16777216, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp996
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	.loc 1 4029 0 is_stmt 1 discriminator 3
	movl	%r12d, %eax	# sflags, D.22845
	andl	$65536, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L933	#,
	.loc 1 4030 0
	movq	-104(%rbp), %rax	# dstr, tmp997
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$65536, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp998
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L933:
	.loc 1 4031 0
	movl	%r12d, %eax	# sflags, sflags.441
	testl	%eax, %eax	# sflags.441
	jns	.L934	#,
	.loc 1 4032 0
	movq	-104(%rbp), %rax	# dstr, tmp999
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$-2147483648, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1000
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L934:
	.loc 1 4033 0
	movq	-104(%rbp), %rax	# dstr, tmp1001
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rdx	# sstr_1->sv_any, D.22848
	movq	24(%rdx), %rdx	# MEM[(struct XPVIV *)_620].xiv_iv, D.22849
	movq	%rdx, 24(%rax)	# D.22849, MEM[(struct XPVIV *)_619].xiv_iv
.L930:
	.loc 1 4035 0
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$57344, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L916	#,
	.loc 1 4035 0 is_stmt 0 discriminator 1
	movl	$86, %esi	#,
	movq	%rbx, %rdi	# sstr,
	call	Perl_mg_find	#
	testq	%rax, %rax	# D.22847
	je	.L916	#,
.LBB41:
	.loc 1 4036 0 is_stmt 1
	movl	$86, %esi	#,
	movq	%rbx, %rdi	# sstr,
	call	Perl_mg_find	#
	movq	%rax, -40(%rbp)	# tmp1002, smg
	.loc 1 4037 0
	movq	-40(%rbp), %rax	# smg, tmp1003
	movl	40(%rax), %ecx	# smg_625->mg_len, D.22846
	.loc 1 4038 0
	movq	-40(%rbp), %rax	# smg, tmp1004
	movq	32(%rax), %rdx	# smg_625->mg_ptr, D.22857
	.loc 1 4037 0
	movq	-104(%rbp), %rax	# dstr, tmp1005
	movl	%ecx, %r8d	# D.22846,
	movq	%rdx, %rcx	# D.22857,
	movl	$86, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp1005,
	call	Perl_sv_magic	#
	.loc 1 4039 0
	movq	-104(%rbp), %rax	# dstr, tmp1006
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orb	$128, %ah	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1007
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	jmp	.L916	#
.L917:
.LBE41:
	.loc 1 4042 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$16777216, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L936	#,
	.loc 1 4043 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$65536, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L937	#,
	.loc 1 4044 0
	movq	-104(%rbp), %rax	# dstr, tmp1008
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1009
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp1010
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L939	#,
	.loc 1 4044 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp1011
	movq	%rax, %rdi	# tmp1011,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L939	#,
	.loc 1 4044 0
	nop
.L939:
	.loc 1 4044 0 discriminator 3
	movq	-104(%rbp), %rax	# dstr, tmp1012
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$16842752, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1013
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	jmp	.L940	#
.L937:
	.loc 1 4046 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp1014
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1015
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp1016
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L942	#,
	.loc 1 4046 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp1017
	movq	%rax, %rdi	# tmp1017,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L942	#,
	.loc 1 4046 0
	nop
.L942:
	.loc 1 4047 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp1018
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L944	#,
	.loc 1 4047 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp1019
	movq	%rax, %rdi	# tmp1019,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L944	#,
	.loc 1 4047 0
	nop
.L944:
	.loc 1 4047 0 discriminator 3
	movq	-104(%rbp), %rax	# dstr, tmp1020
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$16777216, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1021
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L940:
	.loc 1 4050 0 is_stmt 1
	movl	%r12d, %eax	# sflags, sflags.445
	testl	%eax, %eax	# sflags.445
	jns	.L945	#,
	.loc 1 4051 0
	movq	-104(%rbp), %rax	# dstr, tmp1022
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$-2147483648, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1023
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L945:
	.loc 1 4052 0
	movq	-104(%rbp), %rax	# dstr, tmp1024
	movq	(%rax), %rax	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rdx	# sstr_1->sv_any, D.22848
	movq	24(%rdx), %rdx	# MEM[(struct XPVIV *)_659].xiv_iv, D.22849
	movq	%rdx, 24(%rax)	# D.22849, MEM[(struct XPVIV *)_658].xiv_iv
	.loc 1 4053 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$33554432, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L916	#,
	.loc 1 4054 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$131072, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L947	#,
	.loc 1 4055 0
	movq	-104(%rbp), %rax	# dstr, tmp1025
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$33685504, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1026
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	jmp	.L948	#
.L947:
	.loc 1 4057 0
	movq	-104(%rbp), %rax	# dstr, tmp1027
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$33554432, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1028
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L948:
	.loc 1 4058 0
	movq	-104(%rbp), %rax	# dstr, tmp1029
	movq	(%rax), %rdx	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_668].xnv_nv, D.22852
	movq	%rax, 32(%rdx)	# D.22852, MEM[(struct XPVNV *)_667].xnv_nv
	jmp	.L916	#
.L936:
	.loc 1 4061 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$33554432, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L949	#,
	.loc 1 4062 0
	movl	%r12d, %eax	# sflags, D.22845
	andl	$131072, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L950	#,
	.loc 1 4063 0
	movq	-104(%rbp), %rax	# dstr, tmp1030
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1031
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp1032
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L952	#,
	.loc 1 4063 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp1033
	movq	%rax, %rdi	# tmp1033,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L952	#,
	.loc 1 4063 0
	nop
.L952:
	.loc 1 4063 0 discriminator 3
	movq	-104(%rbp), %rax	# dstr, tmp1034
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$33685504, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1035
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	jmp	.L953	#
.L950:
	.loc 1 4065 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp1036
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1037
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp1038
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L955	#,
	.loc 1 4065 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp1039
	movq	%rax, %rdi	# tmp1039,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L955	#,
	.loc 1 4065 0
	nop
.L955:
	.loc 1 4066 0 is_stmt 1
	movq	-104(%rbp), %rax	# dstr, tmp1040
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	orl	$33554432, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1041
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
.L953:
	.loc 1 4068 0 discriminator 2
	movq	-104(%rbp), %rax	# dstr, tmp1042
	movq	(%rax), %rdx	# dstr_17(D)->sv_any, D.22848
	movq	(%rbx), %rax	# sstr_1->sv_any, D.22848
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_691].xnv_nv, D.22852
	movq	%rax, 32(%rdx)	# D.22852, MEM[(struct XPVNV *)_690].xnv_nv
	jmp	.L916	#
.L949:
	.loc 1 4071 0
	cmpl	$13, %r13d	#, dtype
	jne	.L956	#,
	.loc 1 4072 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.448
	movq	80(%rax), %rax	# PL_curcop.448_693->cop_warnings, D.22853
	testq	%rax, %rax	# D.22853
	je	.L957	#,
	.loc 1 4072 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.449
	movq	80(%rax), %rax	# PL_curcop.449_695->cop_warnings, D.22853
	cmpq	$32, %rax	#, D.22853
	je	.L957	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.450
	movq	80(%rax), %rax	# PL_curcop.450_697->cop_warnings, D.22853
	cmpq	$16, %rax	#, D.22853
	je	.L958	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.451
	movq	80(%rax), %rax	# PL_curcop.451_699->cop_warnings, D.22853
	movq	(%rax), %rax	# _700->sv_any, D.22848
	movq	(%rax), %rax	# MEM[(struct XPV *)_701].xpv_pv, D.22857
	addq	$3, %rax	#, D.22857
	movzbl	(%rax), %eax	# *_703, D.22851
	movsbl	%al, %eax	# D.22851, D.22846
	andl	$1, %eax	#, D.22846
	testl	%eax, %eax	# D.22846
	jne	.L958	#,
.L957:
	.loc 1 4072 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.452
	movq	80(%rax), %rax	# PL_curcop.452_707->cop_warnings, D.22853
	testq	%rax, %rax	# D.22853
	jne	.L916	#,
	.loc 1 4072 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.453
	movzbl	%al, %eax	# PL_dowarn.453, D.22846
	andl	$1, %eax	#, D.22846
	testl	%eax, %eax	# D.22846
	je	.L916	#,
.L958:
	.loc 1 4073 0 is_stmt 1
	movl	$.LC41, %esi	#,
	movl	$12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	jmp	.L916	#
.L956:
	.loc 1 4076 0
	movq	-104(%rbp), %rax	# dstr, tmp1043
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$1223753727, %eax	#, D.22845
	movl	%eax, %edx	# D.22845, D.22845
	movq	-104(%rbp), %rax	# dstr, tmp1044
	movl	%edx, 12(%rax)	# D.22845, dstr_17(D)->sv_flags
	movq	-104(%rbp), %rax	# dstr, tmp1045
	movl	12(%rax), %eax	# dstr_17(D)->sv_flags, D.22845
	andl	$2097152, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L916	#,
	.loc 1 4076 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# dstr, tmp1046
	movq	%rax, %rdi	# tmp1046,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22846
	je	.L916	#,
	.loc 1 4076 0
	nop
.L916:
	.loc 1 4078 0 is_stmt 1
	movl	12(%rbx), %eax	# sstr_1->sv_flags, D.22845
	andl	$57344, %eax	#, D.22845
	testl	%eax, %eax	# D.22845
	je	.L787	#,
	.loc 1 4078 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sstr,
	call	Perl_sv_tainted	#
	testb	%al, %al	# D.22851
	je	.L787	#,
	.loc 1 4079 0 is_stmt 1
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.455
	testb	%al, %al	# PL_tainting.455
	je	.L787	#,
	.loc 1 4079 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.456
	testb	%al, %al	# PL_tainted.456
	je	.L787	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.457
	testb	%al, %al	# PL_tainting.457
	je	.L787	#,
	movq	-104(%rbp), %rax	# dstr, tmp1047
	movq	%rax, %rdi	# tmp1047,
	call	Perl_sv_taint	#
.L787:
	.loc 1 4080 0 is_stmt 1
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE82:
	.size	Perl_sv_setsv_flags, .-Perl_sv_setsv_flags
	.globl	Perl_sv_setsv_mg
	.type	Perl_sv_setsv_mg, @function
Perl_sv_setsv_mg:
.LFB83:
	.loc 1 4092 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# dstr, dstr
	movq	%rsi, %rax	# sstr, sstr
	.loc 1 4093 0
	movq	-8(%rbp), %rcx	# dstr, tmp62
	movl	$2, %edx	#,
	movq	%rax, %rsi	# sstr,
	movq	%rcx, %rdi	# tmp62,
	call	Perl_sv_setsv_flags	#
	.loc 1 4094 0
	movq	-8(%rbp), %rax	# dstr, tmp63
	movl	12(%rax), %eax	# dstr_1(D)->sv_flags, D.22881
	andl	$16384, %eax	#, D.22881
	testl	%eax, %eax	# D.22881
	je	.L964	#,
	.loc 1 4094 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# dstr, tmp64
	movq	%rax, %rdi	# tmp64,
	call	Perl_mg_set	#
.L964:
	.loc 1 4095 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE83:
	.size	Perl_sv_setsv_mg, .-Perl_sv_setsv_mg
	.section	.rodata
	.align 8
.LC42:
	.string	"panic: sv_setpvn called with negative strlen"
	.text
	.globl	Perl_sv_setpvn
	.type	Perl_sv_setpvn, @function
Perl_sv_setpvn:
.LFB84:
	.loc 1 4109 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 14, -24
	.cfi_offset 13, -32
	.cfi_offset 12, -40
	.cfi_offset 3, -48
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %r13	# ptr, ptr
	movq	%rdx, %r12	# len, len
	.loc 1 4112 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22882
	andl	$9961472, %eax	#, D.22882
	testl	%eax, %eax	# D.22882
	je	.L967	#,
	.loc 1 4112 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L967:
	.loc 1 4113 0 is_stmt 1
	testq	%r13, %r13	# ptr
	jne	.L968	#,
	.loc 1 4114 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22882
	andl	$1223753727, %eax	#, D.22882
	movl	%eax, 12(%rbx)	# D.22882, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22882
	andl	$2097152, %eax	#, D.22882
	testl	%eax, %eax	# D.22882
	je	.L969	#,
	.loc 1 4114 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22883
	je	.L969	#,
	.loc 1 4115 0 is_stmt 1 discriminator 1
	jmp	.L966	#
.L969:
	.loc 1 4115 0 is_stmt 0 discriminator 2
	jmp	.L966	#
.L968:
.LBB42:
	.loc 1 4119 0 is_stmt 1
	movq	%r12, -40(%rbp)	# len, iv
	.loc 1 4120 0
	cmpq	$0, -40(%rbp)	#, iv
	jns	.L972	#,
	.loc 1 4121 0
	movl	$.LC42, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L972:
.LBE42:
	.loc 1 4123 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22882
	movzbl	%al, %eax	# D.22882, D.22882
	cmpl	$3, %eax	#, D.22882
	ja	.L973	#,
	.loc 1 4123 0 is_stmt 0 discriminator 2
	movl	$4, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.22884
	je	.L975	#,
.L973:
	.loc 1 4123 0 discriminator 1
	nop
.L975:
	.loc 1 4125 0 is_stmt 1
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22885
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_19].xpv_len, D.22886
	leaq	1(%r12), %rax	#, D.22886
	cmpq	%rax, %rdx	# D.22886, D.22886
	jae	.L977	#,
	.loc 1 4125 0 is_stmt 0 discriminator 1
	leaq	1(%r12), %rax	#, D.22886
	movq	%rax, %rsi	# D.22886,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L977:
	.loc 1 4126 0 is_stmt 1
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22885
	movq	(%rax), %r14	# MEM[(struct XPV *)_26].xpv_pv, dptr
	.loc 1 4127 0
	movq	%r12, %rdx	# len,
	movq	%r13, %rsi	# ptr,
	movq	%r14, %rdi	# dptr,
	call	memmove	#
	.loc 1 4128 0
	leaq	(%r14,%r12), %rax	#, D.22887
	movb	$0, (%rax)	#, *_28
	.loc 1 4129 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22885
	movq	%r12, 8(%rax)	# len, MEM[(struct XPV *)_29].xpv_cur
	.loc 1 4130 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22882
	andl	$1760624639, %eax	#, D.22882
	movl	%eax, 12(%rbx)	# D.22882, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22882
	orl	$67371008, %eax	#, D.22882
	movl	%eax, 12(%rbx)	# D.22882, sv_1(D)->sv_flags
	.loc 1 4131 0
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.461
	testb	%al, %al	# PL_tainting.461
	je	.L966	#,
	.loc 1 4131 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.462
	testb	%al, %al	# PL_tainted.462
	je	.L966	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.463
	testb	%al, %al	# PL_tainting.463
	je	.L966	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_taint	#
.L966:
	.loc 1 4132 0 is_stmt 1
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE84:
	.size	Perl_sv_setpvn, .-Perl_sv_setpvn
	.globl	Perl_sv_setpvn_mg
	.type	Perl_sv_setpvn_mg, @function
Perl_sv_setpvn_mg:
.LFB85:
	.loc 1 4144 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %rax	# ptr, ptr
	.loc 1 4145 0
	movq	%rax, %rsi	# ptr,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setpvn	#
	.loc 1 4146 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22889
	andl	$16384, %eax	#, D.22889
	testl	%eax, %eax	# D.22889
	je	.L978	#,
	.loc 1 4146 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_set	#
.L978:
	.loc 1 4147 0 is_stmt 1
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE85:
	.size	Perl_sv_setpvn_mg, .-Perl_sv_setpvn_mg
	.globl	Perl_sv_setpv
	.type	Perl_sv_setpv, @function
Perl_sv_setpv:
.LFB86:
	.loc 1 4160 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %r13	# ptr, ptr
	.loc 1 4163 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22890
	andl	$9961472, %eax	#, D.22890
	testl	%eax, %eax	# D.22890
	je	.L981	#,
	.loc 1 4163 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L981:
	.loc 1 4164 0 is_stmt 1
	testq	%r13, %r13	# ptr
	jne	.L982	#,
	.loc 1 4165 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22890
	andl	$1223753727, %eax	#, D.22890
	movl	%eax, 12(%rbx)	# D.22890, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22890
	andl	$2097152, %eax	#, D.22890
	testl	%eax, %eax	# D.22890
	je	.L983	#,
	.loc 1 4165 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22891
	je	.L983	#,
	.loc 1 4166 0 is_stmt 1 discriminator 1
	jmp	.L980	#
.L983:
	.loc 1 4166 0 is_stmt 0 discriminator 2
	jmp	.L980	#
.L982:
	.loc 1 4168 0 is_stmt 1
	movq	%r13, %rdi	# ptr,
	call	strlen	#
	movq	%rax, %r12	#, len
	.loc 1 4169 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22890
	movzbl	%al, %eax	# D.22890, D.22890
	cmpl	$3, %eax	#, D.22890
	ja	.L986	#,
	.loc 1 4169 0 is_stmt 0 discriminator 2
	movl	$4, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.22892
	je	.L988	#,
.L986:
	.loc 1 4169 0 discriminator 1
	nop
.L988:
	.loc 1 4171 0 is_stmt 1
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22893
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_18].xpv_len, D.22894
	leaq	1(%r12), %rax	#, D.22894
	cmpq	%rax, %rdx	# D.22894, D.22894
	jae	.L990	#,
	.loc 1 4171 0 is_stmt 0 discriminator 1
	leaq	1(%r12), %rax	#, D.22894
	movq	%rax, %rsi	# D.22894,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L990:
	.loc 1 4172 0 is_stmt 1
	leaq	1(%r12), %rdx	#, D.22894
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22893
	movq	(%rax), %rax	# MEM[(struct XPV *)_26].xpv_pv, D.22895
	movq	%r13, %rsi	# ptr,
	movq	%rax, %rdi	# D.22895,
	call	memmove	#
	.loc 1 4173 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22893
	movq	%r12, 8(%rax)	# len, MEM[(struct XPV *)_28].xpv_cur
	.loc 1 4174 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22890
	andl	$1760624639, %eax	#, D.22890
	movl	%eax, 12(%rbx)	# D.22890, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22890
	orl	$67371008, %eax	#, D.22890
	movl	%eax, 12(%rbx)	# D.22890, sv_1(D)->sv_flags
	.loc 1 4175 0
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.467
	testb	%al, %al	# PL_tainting.467
	je	.L980	#,
	.loc 1 4175 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.468
	testb	%al, %al	# PL_tainted.468
	je	.L980	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.469
	testb	%al, %al	# PL_tainting.469
	je	.L980	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_taint	#
.L980:
	.loc 1 4176 0 is_stmt 1
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE86:
	.size	Perl_sv_setpv, .-Perl_sv_setpv
	.globl	Perl_sv_setpv_mg
	.type	Perl_sv_setpv_mg, @function
Perl_sv_setpv_mg:
.LFB87:
	.loc 1 4188 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %rax	# ptr, ptr
	.loc 1 4189 0
	movq	%rax, %rsi	# ptr,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setpv	#
	.loc 1 4190 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22896
	andl	$16384, %eax	#, D.22896
	testl	%eax, %eax	# D.22896
	je	.L991	#,
	.loc 1 4190 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_set	#
.L991:
	.loc 1 4191 0 is_stmt 1
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE87:
	.size	Perl_sv_setpv_mg, .-Perl_sv_setpv_mg
	.globl	Perl_sv_usepvn
	.type	Perl_sv_usepvn, @function
Perl_sv_usepvn:
.LFB88:
	.loc 1 4209 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %r12	# ptr, ptr
	movq	%rdx, %r13	# len, len
	.loc 1 4210 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22897
	andl	$9961472, %eax	#, D.22897
	testl	%eax, %eax	# D.22897
	je	.L994	#,
	.loc 1 4210 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L994:
	.loc 1 4211 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22897
	movzbl	%al, %eax	# D.22897, D.22897
	cmpl	$3, %eax	#, D.22897
	ja	.L995	#,
	.loc 1 4211 0 is_stmt 0 discriminator 2
	movl	$4, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.22898
	je	.L997	#,
.L995:
	.loc 1 4211 0 discriminator 1
	nop
.L997:
	.loc 1 4212 0 is_stmt 1
	testq	%r12, %r12	# ptr
	jne	.L998	#,
	.loc 1 4213 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22897
	andl	$1223753727, %eax	#, D.22897
	movl	%eax, 12(%rbx)	# D.22897, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22897
	andl	$2097152, %eax	#, D.22897
	testl	%eax, %eax	# D.22897
	je	.L999	#,
	.loc 1 4213 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22899
	je	.L999	#,
	.loc 1 4214 0 is_stmt 1 discriminator 1
	jmp	.L993	#
.L999:
	.loc 1 4214 0 is_stmt 0 discriminator 2
	jmp	.L993	#
.L998:
	.loc 1 4216 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22897
	andl	$2097152, %eax	#, D.22897
	testl	%eax, %eax	# D.22897
	je	.L1003	#,
	.loc 1 4216 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.22899
	je	.L1003	#,
	.loc 1 4216 0
	nop
.L1003:
	.loc 1 4217 0 is_stmt 1
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22900
	movq	(%rax), %rax	# MEM[(struct XPV *)_22].xpv_pv, D.22901
	testq	%rax, %rax	# D.22901
	je	.L1004	#,
	.loc 1 4217 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22900
	movq	16(%rax), %rax	# MEM[(struct XPV *)_24].xpv_len, D.22902
	testq	%rax, %rax	# D.22902
	je	.L1004	#,
	.loc 1 4218 0 is_stmt 1
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22900
	movq	(%rax), %rax	# MEM[(struct XPV *)_26].xpv_pv, D.22901
	movq	%rax, %rdi	# D.22901,
	call	Perl_safesysfree	#
.L1004:
	.loc 1 4219 0
	leaq	1(%r13), %rax	#, D.22902
	movq	%rax, %rsi	# D.22902,
	movq	%r12, %rdi	# ptr,
	call	Perl_safesysrealloc	#
	movq	%rax, %r12	#, ptr
	.loc 1 4220 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22900
	movq	%r12, (%rax)	# ptr, MEM[(struct XPV *)_31].xpv_pv
	.loc 1 4221 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22900
	movq	%r13, 8(%rax)	# len, MEM[(struct XPV *)_32].xpv_cur
	.loc 1 4222 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22900
	leaq	1(%r13), %rdx	#, D.22902
	movq	%rdx, 16(%rax)	# D.22902, MEM[(struct XPV *)_33].xpv_len
	.loc 1 4223 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22900
	movq	(%rax), %rdx	# MEM[(struct XPV *)_35].xpv_pv, D.22901
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.22900
	movq	8(%rax), %rax	# MEM[(struct XPV *)_37].xpv_cur, D.22902
	addq	%rdx, %rax	# D.22901, D.22901
	movb	$0, (%rax)	#, *_39
	.loc 1 4224 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22897
	andl	$1760624639, %eax	#, D.22897
	movl	%eax, 12(%rbx)	# D.22897, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22897
	orl	$67371008, %eax	#, D.22897
	movl	%eax, 12(%rbx)	# D.22897, sv_1(D)->sv_flags
	.loc 1 4225 0
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.473
	testb	%al, %al	# PL_tainting.473
	je	.L993	#,
	.loc 1 4225 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.474
	testb	%al, %al	# PL_tainted.474
	je	.L993	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.475
	testb	%al, %al	# PL_tainting.475
	je	.L993	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_taint	#
.L993:
	.loc 1 4226 0 is_stmt 1
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE88:
	.size	Perl_sv_usepvn, .-Perl_sv_usepvn
	.globl	Perl_sv_usepvn_mg
	.type	Perl_sv_usepvn_mg, @function
Perl_sv_usepvn_mg:
.LFB89:
	.loc 1 4238 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %rax	# ptr, ptr
	.loc 1 4239 0
	movq	%rax, %rsi	# ptr,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_usepvn	#
	.loc 1 4240 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22903
	andl	$16384, %eax	#, D.22903
	testl	%eax, %eax	# D.22903
	je	.L1005	#,
	.loc 1 4240 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_set	#
.L1005:
	.loc 1 4241 0 is_stmt 1
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE89:
	.size	Perl_sv_usepvn_mg, .-Perl_sv_usepvn_mg
	.globl	Perl_sv_force_normal_flags
	.type	Perl_sv_force_normal_flags, @function
Perl_sv_force_normal_flags:
.LFB90:
	.loc 1 4256 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movl	%esi, -52(%rbp)	# flags, flags
	.loc 1 4257 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22904
	andl	$8388608, %eax	#, D.22904
	testl	%eax, %eax	# D.22904
	je	.L1008	#,
	.loc 1 4258 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22904
	andl	$1048576, %eax	#, D.22904
	testl	%eax, %eax	# D.22904
	je	.L1009	#,
.LBB43:
	.loc 1 4259 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22905
	movq	(%rax), %rax	# MEM[(struct XPV *)_7].xpv_pv, tmp97
	movq	%rax, -32(%rbp)	# tmp97, pvx
	.loc 1 4260 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22905
	movq	8(%rax), %rax	# MEM[(struct XPV *)_9].xpv_cur, tmp98
	movq	%rax, -24(%rbp)	# tmp98, len
	.loc 1 4261 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22905
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_11].xuv_uv, D.22906
	movl	%eax, -36(%rbp)	# D.22906, hash
	.loc 1 4262 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22904
	andl	$-1048577, %eax	#, D.22904
	movl	%eax, 12(%rbx)	# D.22904, sv_2(D)->sv_flags
	.loc 1 4263 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22904
	andl	$-8388609, %eax	#, D.22904
	movl	%eax, 12(%rbx)	# D.22904, sv_2(D)->sv_flags
	.loc 1 4264 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22905
	movq	16(%rax), %rax	# MEM[(struct XPV *)_18].xpv_len, D.22906
	movq	-24(%rbp), %rdx	# len, tmp99
	addq	$1, %rdx	#, D.22906
	cmpq	%rdx, %rax	# D.22906, D.22906
	jae	.L1011	#,
	.loc 1 4264 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# len, tmp100
	addq	$1, %rax	#, D.22906
	movq	%rax, %rsi	# D.22906,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L1011:
	.loc 1 4265 0 is_stmt 1
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22905
	movq	(%rax), %rax	# MEM[(struct XPV *)_25].xpv_pv, D.22907
	movq	-24(%rbp), %rdx	# len, tmp101
	movq	-32(%rbp), %rcx	# pvx, tmp102
	movq	%rcx, %rsi	# tmp102,
	movq	%rax, %rdi	# D.22907,
	call	memmove	#
	.loc 1 4266 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22905
	movq	(%rax), %rdx	# MEM[(struct XPV *)_27].xpv_pv, D.22907
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22905
	movq	8(%rax), %rax	# MEM[(struct XPV *)_29].xpv_cur, D.22906
	addq	%rdx, %rax	# D.22907, D.22907
	movb	$0, (%rax)	#, *_31
	.loc 1 4267 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22904
	andl	$536870912, %eax	#, D.22904
	testl	%eax, %eax	# D.22904
	je	.L1012	#,
	.loc 1 4267 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# len, tmp103
	negl	%eax	# iftmp.477
	jmp	.L1013	#
.L1012:
	.loc 1 4267 0 discriminator 2
	movq	-24(%rbp), %rax	# len, tmp104
.L1013:
	.loc 1 4267 0 discriminator 1
	movl	-36(%rbp), %edx	# hash, tmp105
	movq	-32(%rbp), %rcx	# pvx, tmp106
	movl	%eax, %esi	# iftmp.477,
	movq	%rcx, %rdi	# tmp106,
	call	Perl_unsharepvn	#
.LBE43:
	jmp	.L1008	#
.L1009:
	.loc 1 4269 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.478
	cmpq	$PL_compiling, %rax	#, PL_curcop.478
	je	.L1008	#,
	.loc 1 4270 0
	movl	$PL_no_modify, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1008:
	.loc 1 4272 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22904
	andl	$524288, %eax	#, D.22904
	testl	%eax, %eax	# D.22904
	je	.L1014	#,
	.loc 1 4273 0
	movl	-52(%rbp), %eax	# flags, tmp107
	movl	%eax, %esi	# tmp107,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_unref_flags	#
	jmp	.L1007	#
.L1014:
	.loc 1 4274 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22904
	andl	$1048576, %eax	#, D.22904
	testl	%eax, %eax	# D.22904
	je	.L1007	#,
	.loc 1 4274 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22904
	movzbl	%al, %eax	# D.22904, D.22904
	cmpl	$13, %eax	#, D.22904
	jne	.L1007	#,
	.loc 1 4275 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	S_sv_unglob	#
.L1007:
	.loc 1 4276 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE90:
	.size	Perl_sv_force_normal_flags, .-Perl_sv_force_normal_flags
	.globl	Perl_sv_force_normal
	.type	Perl_sv_force_normal, @function
Perl_sv_force_normal:
.LFB91:
	.loc 1 4290 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, %rax	# sv, sv
	.loc 1 4291 0
	movl	$0, %esi	#,
	movq	%rax, %rdi	# sv,
	call	Perl_sv_force_normal_flags	#
	.loc 1 4292 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE91:
	.size	Perl_sv_force_normal, .-Perl_sv_force_normal
	.globl	Perl_sv_chop
	.type	Perl_sv_chop, @function
Perl_sv_chop:
.LFB92:
	.loc 1 4309 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %rax	# ptr, ptr
	.loc 1 4311 0
	testq	%rax, %rax	# ptr
	je	.L1018	#,
	.loc 1 4311 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %edx	# sv_2(D)->sv_flags, D.22909
	andl	$67108864, %edx	#, D.22909
	testl	%edx, %edx	# D.22909
	jne	.L1019	#,
.L1018:
	.loc 1 4312 0 is_stmt 1
	jmp	.L1017	#
.L1019:
	.loc 1 4313 0
	movq	%rax, %rdx	# ptr, ptr.479
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	(%rax), %rax	# MEM[(struct XPV *)_6].xpv_pv, D.22911
	subq	%rax, %rdx	# D.22912, D.22912
	movq	%rdx, %rax	# D.22912, D.22912
	movq	%rax, %r12	# D.22912, delta
	.loc 1 4314 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22909
	andl	$9961472, %eax	#, D.22909
	testl	%eax, %eax	# D.22909
	je	.L1021	#,
	.loc 1 4314 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L1021:
	.loc 1 4315 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22909
	movzbl	%al, %eax	# D.22909, D.22909
	cmpl	$4, %eax	#, D.22909
	ja	.L1022	#,
	.loc 1 4316 0
	movl	$5, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L1022:
	.loc 1 4318 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22909
	andl	$2097152, %eax	#, D.22909
	testl	%eax, %eax	# D.22909
	jne	.L1023	#,
	.loc 1 4319 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	16(%rax), %rax	# MEM[(struct XPV *)_17].xpv_len, D.22913
	testq	%rax, %rax	# D.22913
	jne	.L1024	#,
.LBB44:
	.loc 1 4320 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	(%rax), %rax	# MEM[(struct XPV *)_19].xpv_pv, tmp116
	movq	%rax, -32(%rbp)	# tmp116, pvx
	.loc 1 4321 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	8(%rax), %rax	# MEM[(struct XPV *)_21].xpv_cur, tmp117
	movq	%rax, -24(%rbp)	# tmp117, len
	.loc 1 4322 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	16(%rax), %rax	# MEM[(struct XPV *)_23].xpv_len, D.22913
	movq	-24(%rbp), %rdx	# len, tmp118
	addq	$1, %rdx	#, D.22913
	cmpq	%rdx, %rax	# D.22913, D.22913
	jae	.L1026	#,
	.loc 1 4322 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# len, tmp119
	addq	$1, %rax	#, D.22913
	movq	%rax, %rsi	# D.22913,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L1026:
	.loc 1 4323 0 is_stmt 1
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	(%rax), %rax	# MEM[(struct XPV *)_30].xpv_pv, D.22911
	movq	-24(%rbp), %rdx	# len, tmp120
	movq	-32(%rbp), %rcx	# pvx, tmp121
	movq	%rcx, %rsi	# tmp121,
	movq	%rax, %rdi	# D.22911,
	call	memmove	#
	.loc 1 4324 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	(%rax), %rdx	# MEM[(struct XPV *)_32].xpv_pv, D.22911
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	8(%rax), %rax	# MEM[(struct XPV *)_34].xpv_cur, D.22913
	addq	%rdx, %rax	# D.22911, D.22911
	movb	$0, (%rax)	#, *_36
.L1024:
.LBE44:
	.loc 1 4326 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	$0, 24(%rax)	#, MEM[(struct XPVIV *)_37].xiv_iv
	.loc 1 4330 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22909
	orl	$2097152, %eax	#, D.22909
	movl	%eax, 12(%rbx)	# D.22909, sv_2(D)->sv_flags
.L1023:
	.loc 1 4332 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.22909
	andl	$2096955391, %eax	#, D.22909
	movl	%eax, 12(%rbx)	# D.22909, sv_2(D)->sv_flags
	.loc 1 4333 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	(%rbx), %rdx	# sv_2(D)->sv_any, D.22910
	movq	16(%rdx), %rdx	# MEM[(struct XPV *)_43].xpv_len, D.22913
	subq	%r12, %rdx	# delta, D.22913
	movq	%rdx, 16(%rax)	# D.22913, MEM[(struct XPV *)_42].xpv_len
	.loc 1 4334 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	(%rbx), %rdx	# sv_2(D)->sv_any, D.22910
	movq	8(%rdx), %rdx	# MEM[(struct XPV *)_47].xpv_cur, D.22913
	subq	%r12, %rdx	# delta, D.22913
	movq	%rdx, 8(%rax)	# D.22913, MEM[(struct XPV *)_46].xpv_cur
	.loc 1 4335 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	(%rbx), %rdx	# sv_2(D)->sv_any, D.22910
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_51].xpv_pv, D.22911
	addq	%r12, %rdx	# delta, D.22911
	movq	%rdx, (%rax)	# D.22911, MEM[(struct XPV *)_50].xpv_pv
	.loc 1 4336 0
	movq	(%rbx), %rax	# sv_2(D)->sv_any, D.22910
	movq	(%rbx), %rdx	# sv_2(D)->sv_any, D.22910
	movq	24(%rdx), %rdx	# MEM[(struct XPVIV *)_55].xiv_iv, D.22912
	addq	%r12, %rdx	# delta, D.22913
	movq	%rdx, 24(%rax)	# D.22912, MEM[(struct XPVIV *)_54].xiv_iv
.L1017:
	.loc 1 4337 0
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE92:
	.size	Perl_sv_chop, .-Perl_sv_chop
	.globl	Perl_sv_catpvn
	.type	Perl_sv_catpvn, @function
Perl_sv_catpvn:
.LFB93:
	.loc 1 4345 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -8(%rbp)	# dsv, dsv
	movq	%rsi, -16(%rbp)	# sstr, sstr
	movq	%rdx, -24(%rbp)	# slen, slen
	.loc 1 4346 0
	movq	-24(%rbp), %rdx	# slen, tmp59
	movq	-16(%rbp), %rsi	# sstr, tmp60
	movq	-8(%rbp), %rax	# dsv, tmp61
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp61,
	call	Perl_sv_catpvn_flags	#
	.loc 1 4347 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE93:
	.size	Perl_sv_catpvn, .-Perl_sv_catpvn
	.globl	Perl_sv_catpvn_flags
	.type	Perl_sv_catpvn_flags, @function
Perl_sv_catpvn_flags:
.LFB94:
	.loc 1 4371 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, %rbx	# dsv, dsv
	movq	%rsi, %r13	# sstr, sstr
	movq	%rdx, %r12	# slen, slen
	movl	%ecx, -52(%rbp)	# flags, flags
	.loc 1 4375 0
	movl	12(%rbx), %eax	# dsv_3(D)->sv_flags, D.22914
	andl	$10223616, %eax	#, D.22914
	cmpl	$262144, %eax	#, D.22914
	jne	.L1029	#,
	.loc 1 4375 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# dsv_3(D)->sv_any, D.22915
	movq	8(%rax), %rax	# MEM[(struct XPV *)_6].xpv_cur, dlen.482
	movq	%rax, -48(%rbp)	# dlen.482, dlen
	movq	(%rbx), %rax	# dsv_3(D)->sv_any, D.22915
	movq	(%rax), %rax	# MEM[(struct XPV *)_8].xpv_pv, iftmp.481
	jmp	.L1030	#
.L1029:
	.loc 1 4375 0 discriminator 2
	movl	-52(%rbp), %edx	# flags, tmp100
	leaq	-48(%rbp), %rax	#, tmp101
	movq	%rax, %rsi	# tmp101,
	movq	%rbx, %rdi	# dsv,
	call	Perl_sv_pvn_force_flags	#
.L1030:
	.loc 1 4375 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.481, dstr
	.loc 1 4376 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# dsv_3(D)->sv_any, D.22915
	movq	16(%rax), %rax	# MEM[(struct XPV *)_13].xpv_len, D.22916
	movq	-48(%rbp), %rdx	# dlen, dlen.484
	addq	%r12, %rdx	# slen, D.22916
	addq	$1, %rdx	#, D.22916
	cmpq	%rdx, %rax	# D.22916, D.22916
	jae	.L1032	#,
	.loc 1 4376 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# dlen, dlen.485
	addq	%r12, %rax	# slen, D.22916
	addq	$1, %rax	#, D.22916
	movq	%rax, %rsi	# D.22916,
	movq	%rbx, %rdi	# dsv,
	call	Perl_sv_grow	#
.L1032:
	.loc 1 4377 0 is_stmt 1
	cmpq	-40(%rbp), %r13	# dstr, sstr
	jne	.L1033	#,
	.loc 1 4378 0
	movq	(%rbx), %rax	# dsv_3(D)->sv_any, D.22915
	movq	(%rax), %r13	# MEM[(struct XPV *)_26].xpv_pv, sstr
.L1033:
	.loc 1 4379 0
	movq	(%rbx), %rax	# dsv_3(D)->sv_any, D.22915
	movq	(%rax), %rdx	# MEM[(struct XPV *)_28].xpv_pv, D.22917
	movq	-48(%rbp), %rax	# dlen, dlen.486
	addq	%rdx, %rax	# D.22917, D.22915
	movq	%r12, %rdx	# slen,
	movq	%r13, %rsi	# sstr,
	movq	%rax, %rdi	# D.22915,
	call	memmove	#
	.loc 1 4380 0
	movq	(%rbx), %rax	# dsv_3(D)->sv_any, D.22915
	movq	(%rbx), %rdx	# dsv_3(D)->sv_any, D.22915
	movq	8(%rdx), %rdx	# MEM[(struct XPV *)_33].xpv_cur, D.22916
	addq	%r12, %rdx	# slen, D.22916
	movq	%rdx, 8(%rax)	# D.22916, MEM[(struct XPV *)_32].xpv_cur
	.loc 1 4381 0
	movq	(%rbx), %rax	# dsv_3(D)->sv_any, D.22915
	movq	(%rax), %rdx	# MEM[(struct XPV *)_36].xpv_pv, D.22917
	movq	(%rbx), %rax	# dsv_3(D)->sv_any, D.22915
	movq	8(%rax), %rax	# MEM[(struct XPV *)_38].xpv_cur, D.22916
	addq	%rdx, %rax	# D.22917, D.22917
	movb	$0, (%rax)	#, *_40
	.loc 1 4382 0
	movl	12(%rbx), %eax	# dsv_3(D)->sv_flags, D.22914
	andl	$1760624639, %eax	#, D.22914
	movl	%eax, 12(%rbx)	# D.22914, dsv_3(D)->sv_flags
	movl	12(%rbx), %eax	# dsv_3(D)->sv_flags, D.22914
	orl	$67371008, %eax	#, D.22914
	movl	%eax, 12(%rbx)	# D.22914, dsv_3(D)->sv_flags
	.loc 1 4383 0
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.487
	testb	%al, %al	# PL_tainting.487
	je	.L1028	#,
	.loc 1 4383 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.488
	testb	%al, %al	# PL_tainted.488
	je	.L1028	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.489
	testb	%al, %al	# PL_tainting.489
	je	.L1028	#,
	movq	%rbx, %rdi	# dsv,
	call	Perl_sv_taint	#
.L1028:
	.loc 1 4384 0 is_stmt 1
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE94:
	.size	Perl_sv_catpvn_flags, .-Perl_sv_catpvn_flags
	.globl	Perl_sv_catpvn_mg
	.type	Perl_sv_catpvn_mg, @function
Perl_sv_catpvn_mg:
.LFB95:
	.loc 1 4396 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %rax	# ptr, ptr
	.loc 1 4397 0
	movl	$2, %ecx	#,
	movq	%rax, %rsi	# ptr,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_catpvn_flags	#
	.loc 1 4398 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22918
	andl	$16384, %eax	#, D.22918
	testl	%eax, %eax	# D.22918
	je	.L1035	#,
	.loc 1 4398 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_set	#
.L1035:
	.loc 1 4399 0 is_stmt 1
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE95:
	.size	Perl_sv_catpvn_mg, .-Perl_sv_catpvn_mg
	.globl	Perl_sv_catsv
	.type	Perl_sv_catsv, @function
Perl_sv_catsv:
.LFB96:
	.loc 1 4407 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# dstr, dstr
	movq	%rsi, %rax	# sstr, sstr
	.loc 1 4408 0
	movq	-8(%rbp), %rcx	# dstr, tmp60
	movl	$2, %edx	#,
	movq	%rax, %rsi	# sstr,
	movq	%rcx, %rdi	# tmp60,
	call	Perl_sv_catsv_flags	#
	.loc 1 4409 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE96:
	.size	Perl_sv_catsv, .-Perl_sv_catsv
	.globl	Perl_sv_catsv_flags
	.type	Perl_sv_catsv_flags, @function
Perl_sv_catsv_flags:
.LFB97:
	.loc 1 4429 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# dsv, dsv
	movq	%rsi, %rbx	# ssv, ssv
	movl	%edx, -60(%rbp)	# flags, flags
	.loc 1 4432 0
	testq	%rbx, %rbx	# ssv
	je	.L1038	#,
	.loc 1 4434 0
	movl	12(%rbx), %eax	# ssv_6(D)->sv_flags, D.22919
	andl	$262144, %eax	#, D.22919
	testl	%eax, %eax	# D.22919
	je	.L1041	#,
	.loc 1 4434 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# ssv_6(D)->sv_any, D.22920
	movq	8(%rax), %rax	# MEM[(struct XPV *)_9].xpv_cur, slen.491
	movq	%rax, -40(%rbp)	# slen.491, slen
	movq	(%rbx), %rax	# ssv_6(D)->sv_any, D.22920
	movq	(%rax), %rax	# MEM[(struct XPV *)_11].xpv_pv, iftmp.490
	jmp	.L1042	#
.L1041:
	.loc 1 4434 0 discriminator 2
	leaq	-40(%rbp), %rax	#, tmp92
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp92,
	movq	%rbx, %rdi	# ssv,
	call	Perl_sv_2pv_flags	#
.L1042:
	.loc 1 4434 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.490, spv
	cmpq	$0, -32(%rbp)	#, spv
	je	.L1038	#,
.LBB45:
	.loc 1 4442 0 is_stmt 1
	movl	12(%rbx), %eax	# ssv_6(D)->sv_flags, D.22919
	andl	$536870912, %eax	#, D.22919
	testl	%eax, %eax	# D.22919
	je	.L1044	#,
	.loc 1 4442 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.493
	movzbl	37(%rax), %eax	# PL_curcop.493_17->op_private, D.22921
	movzbl	%al, %eax	# D.22921, D.22922
	andl	$8, %eax	#, D.22922
	testl	%eax, %eax	# D.22922
	jne	.L1044	#,
	.loc 1 4442 0 discriminator 3
	movl	$1, %eax	#, iftmp.492
	jmp	.L1045	#
.L1044:
	.loc 1 4442 0 discriminator 2
	movl	$0, %eax	#, iftmp.492
.L1045:
	.loc 1 4442 0 discriminator 4
	movl	%eax, -48(%rbp)	# iftmp.492, sutf8
	.loc 1 4445 0 is_stmt 1 discriminator 4
	movq	-56(%rbp), %rax	# dsv, tmp93
	movl	12(%rax), %eax	# dsv_24(D)->sv_flags, D.22919
	andl	$8192, %eax	#, D.22919
	testl	%eax, %eax	# D.22919
	je	.L1046	#,
	.loc 1 4445 0 is_stmt 0 discriminator 1
	movl	-60(%rbp), %eax	# flags, tmp94
	andl	$2, %eax	#, D.22922
	testl	%eax, %eax	# D.22922
	je	.L1046	#,
	.loc 1 4446 0 is_stmt 1
	movq	-56(%rbp), %rax	# dsv, tmp95
	movq	%rax, %rdi	# tmp95,
	call	Perl_mg_get	#
.L1046:
	.loc 1 4447 0
	movq	-56(%rbp), %rax	# dsv, tmp96
	movl	12(%rax), %eax	# dsv_24(D)->sv_flags, D.22919
	andl	$536870912, %eax	#, D.22919
	testl	%eax, %eax	# D.22919
	je	.L1047	#,
	.loc 1 4447 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.495
	movzbl	37(%rax), %eax	# PL_curcop.495_31->op_private, D.22921
	movzbl	%al, %eax	# D.22921, D.22922
	andl	$8, %eax	#, D.22922
	testl	%eax, %eax	# D.22922
	jne	.L1047	#,
	.loc 1 4447 0 discriminator 3
	movl	$1, %eax	#, iftmp.494
	jmp	.L1048	#
.L1047:
	.loc 1 4447 0 discriminator 2
	movl	$0, %eax	#, iftmp.494
.L1048:
	.loc 1 4447 0 discriminator 4
	movl	%eax, -44(%rbp)	# iftmp.494, dutf8
	.loc 1 4449 0 is_stmt 1 discriminator 4
	movl	-44(%rbp), %eax	# dutf8, tmp97
	cmpl	-48(%rbp), %eax	# sutf8, tmp97
	je	.L1049	#,
	.loc 1 4450 0
	cmpl	$0, -44(%rbp)	#, dutf8
	je	.L1050	#,
.LBB46:
	.loc 1 4452 0
	movq	-40(%rbp), %rdx	# slen, slen.496
	movq	-32(%rbp), %rax	# spv, tmp98
	movq	%rdx, %rsi	# slen.496,
	movq	%rax, %rdi	# tmp98,
	call	Perl_newSVpvn	#
	movq	%rax, %rdi	# D.22923,
	call	Perl_sv_2mortal	#
	movq	%rax, -24(%rbp)	# tmp99, csv
	.loc 1 4454 0
	movq	-24(%rbp), %rax	# csv, tmp100
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp100,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 4455 0
	movq	-24(%rbp), %rax	# csv, tmp101
	movl	12(%rax), %eax	# csv_40->sv_flags, D.22919
	andl	$262144, %eax	#, D.22919
	testl	%eax, %eax	# D.22919
	je	.L1051	#,
	.loc 1 4455 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# csv, tmp102
	movq	(%rax), %rax	# csv_40->sv_any, D.22920
	movq	8(%rax), %rax	# MEM[(struct XPV *)_43].xpv_cur, slen.498
	movq	%rax, -40(%rbp)	# slen.498, slen
	movq	-24(%rbp), %rax	# csv, tmp103
	movq	(%rax), %rax	# csv_40->sv_any, D.22920
	movq	(%rax), %rax	# MEM[(struct XPV *)_45].xpv_pv, iftmp.497
	jmp	.L1052	#
.L1051:
	.loc 1 4455 0 discriminator 2
	leaq	-40(%rbp), %rcx	#, tmp104
	movq	-24(%rbp), %rax	# csv, tmp105
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp104,
	movq	%rax, %rdi	# tmp105,
	call	Perl_sv_2pv_flags	#
.L1052:
	.loc 1 4455 0 discriminator 1
	movq	%rax, -32(%rbp)	# iftmp.497, spv
.LBE46:
	jmp	.L1049	#
.L1050:
	.loc 1 4458 0 is_stmt 1
	movq	-56(%rbp), %rax	# dsv, tmp106
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp106,
	call	Perl_sv_utf8_upgrade_flags	#
.L1049:
	.loc 1 4460 0
	movq	-40(%rbp), %rdx	# slen, slen.499
	movq	-32(%rbp), %rsi	# spv, tmp107
	movq	-56(%rbp), %rax	# dsv, tmp108
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp108,
	call	Perl_sv_catpvn_flags	#
.L1038:
.LBE45:
	.loc 1 4462 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE97:
	.size	Perl_sv_catsv_flags, .-Perl_sv_catsv_flags
	.globl	Perl_sv_catsv_mg
	.type	Perl_sv_catsv_mg, @function
Perl_sv_catsv_mg:
.LFB98:
	.loc 1 4474 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# dsv, dsv
	movq	%rsi, %rax	# ssv, ssv
	.loc 1 4475 0
	movq	-8(%rbp), %rcx	# dsv, tmp62
	movl	$2, %edx	#,
	movq	%rax, %rsi	# ssv,
	movq	%rcx, %rdi	# tmp62,
	call	Perl_sv_catsv_flags	#
	.loc 1 4476 0
	movq	-8(%rbp), %rax	# dsv, tmp63
	movl	12(%rax), %eax	# dsv_1(D)->sv_flags, D.22924
	andl	$16384, %eax	#, D.22924
	testl	%eax, %eax	# D.22924
	je	.L1053	#,
	.loc 1 4476 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# dsv, tmp64
	movq	%rax, %rdi	# tmp64,
	call	Perl_mg_set	#
.L1053:
	.loc 1 4477 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE98:
	.size	Perl_sv_catsv_mg, .-Perl_sv_catsv_mg
	.globl	Perl_sv_catpv
	.type	Perl_sv_catpv, @function
Perl_sv_catpv:
.LFB99:
	.loc 1 4490 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %r12	# ptr, ptr
	.loc 1 4495 0
	testq	%r12, %r12	# ptr
	je	.L1055	#,
	.loc 1 4497 0
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22925
	andl	$10223616, %eax	#, D.22925
	cmpl	$262144, %eax	#, D.22925
	jne	.L1058	#,
	.loc 1 4497 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.22926
	movq	8(%rax), %rax	# MEM[(struct XPV *)_7].xpv_cur, tlen.501
	movq	%rax, -48(%rbp)	# tlen.501, tlen
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.22926
	movq	(%rax), %rax	# MEM[(struct XPV *)_9].xpv_pv, iftmp.500
	jmp	.L1059	#
.L1058:
	.loc 1 4497 0 discriminator 2
	leaq	-48(%rbp), %rax	#, tmp96
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp96,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_pvn_force_flags	#
.L1059:
	.loc 1 4497 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.500, junk
	.loc 1 4498 0 is_stmt 1 discriminator 3
	movq	%r12, %rdi	# ptr,
	call	strlen	#
	movq	%rax, %r13	#, len
	.loc 1 4499 0 discriminator 3
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.22926
	movq	16(%rax), %rax	# MEM[(struct XPV *)_14].xpv_len, D.22927
	movq	-48(%rbp), %rdx	# tlen, tlen.503
	addq	%r13, %rdx	# len, D.22927
	addq	$1, %rdx	#, D.22927
	cmpq	%rdx, %rax	# D.22927, D.22927
	jae	.L1061	#,
	.loc 1 4499 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# tlen, tlen.504
	addq	%r13, %rax	# len, D.22927
	addq	$1, %rax	#, D.22927
	movq	%rax, %rsi	# D.22927,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L1061:
	.loc 1 4500 0 is_stmt 1
	cmpq	-40(%rbp), %r12	# junk, ptr
	jne	.L1062	#,
	.loc 1 4501 0
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.22926
	movq	(%rax), %r12	# MEM[(struct XPV *)_25].xpv_pv, ptr
.L1062:
	.loc 1 4502 0
	leaq	1(%r13), %rax	#, D.22927
	movq	(%rbx), %rdx	# sv_4(D)->sv_any, D.22926
	movq	(%rdx), %rcx	# MEM[(struct XPV *)_28].xpv_pv, D.22928
	movq	-48(%rbp), %rdx	# tlen, tlen.505
	addq	%rdx, %rcx	# tlen.505, D.22926
	movq	%rax, %rdx	# D.22927,
	movq	%r12, %rsi	# ptr,
	movq	%rcx, %rdi	# D.22926,
	call	memmove	#
	.loc 1 4503 0
	movq	(%rbx), %rax	# sv_4(D)->sv_any, D.22926
	movq	(%rbx), %rdx	# sv_4(D)->sv_any, D.22926
	movq	8(%rdx), %rdx	# MEM[(struct XPV *)_33].xpv_cur, D.22927
	addq	%r13, %rdx	# len, D.22927
	movq	%rdx, 8(%rax)	# D.22927, MEM[(struct XPV *)_32].xpv_cur
	.loc 1 4504 0
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22925
	andl	$1760624639, %eax	#, D.22925
	movl	%eax, 12(%rbx)	# D.22925, sv_4(D)->sv_flags
	movl	12(%rbx), %eax	# sv_4(D)->sv_flags, D.22925
	orl	$67371008, %eax	#, D.22925
	movl	%eax, 12(%rbx)	# D.22925, sv_4(D)->sv_flags
	.loc 1 4505 0
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.506
	testb	%al, %al	# PL_tainting.506
	je	.L1055	#,
	.loc 1 4505 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.507
	testb	%al, %al	# PL_tainted.507
	je	.L1055	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.508
	testb	%al, %al	# PL_tainting.508
	je	.L1055	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_taint	#
.L1055:
	.loc 1 4506 0 is_stmt 1
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE99:
	.size	Perl_sv_catpv, .-Perl_sv_catpv
	.globl	Perl_sv_catpv_mg
	.type	Perl_sv_catpv_mg, @function
Perl_sv_catpv_mg:
.LFB100:
	.loc 1 4518 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %rax	# ptr, ptr
	.loc 1 4519 0
	movq	%rax, %rsi	# ptr,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_catpv	#
	.loc 1 4520 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.22929
	andl	$16384, %eax	#, D.22929
	testl	%eax, %eax	# D.22929
	je	.L1064	#,
	.loc 1 4520 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_set	#
.L1064:
	.loc 1 4521 0 is_stmt 1
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE100:
	.size	Perl_sv_catpv_mg, .-Perl_sv_catpv_mg
	.globl	Perl_newSV
	.type	Perl_newSV, @function
Perl_newSV:
.LFB101:
	.loc 1 4535 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# len, len
.LBB47:
	.loc 1 4538 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.509
	testq	%rax, %rax	# PL_sv_root.509
	je	.L1067	#,
.LBB48:
	.loc 1 4538 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_3->sv_any, PL_sv_root.510
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.510, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.511
	addl	$1, %eax	#, PL_sv_count.512
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.512, PL_sv_count
.LBE48:
	jmp	.L1068	#
.L1067:
	.loc 1 4538 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1068:
	.loc 1 4538 0 discriminator 1
	movq	$0, (%rbx)	#, sv_1->sv_any
	movl	$1, 8(%rbx)	#, sv_1->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_1->sv_flags
.LBE47:
	.loc 1 4539 0 is_stmt 1 discriminator 1
	cmpq	$0, -24(%rbp)	#, len
	je	.L1069	#,
	.loc 1 4540 0
	movl	$4, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	.loc 1 4541 0
	movq	(%rbx), %rax	# sv_1->sv_any, D.22932
	movq	16(%rax), %rax	# MEM[(struct XPV *)_11].xpv_len, D.22933
	movq	-24(%rbp), %rdx	# len, tmp75
	addq	$1, %rdx	#, D.22933
	cmpq	%rdx, %rax	# D.22933, D.22933
	jae	.L1069	#,
	.loc 1 4541 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# len, tmp76
	addq	$1, %rax	#, D.22933
	movq	%rax, %rsi	# D.22933,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L1069:
	.loc 1 4543 0 is_stmt 1
	movq	%rbx, %rax	# sv, D.22934
	.loc 1 4544 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE101:
	.size	Perl_newSV, .-Perl_newSV
	.globl	Perl_sv_magicext
	.type	Perl_sv_magicext, @function
Perl_sv_magicext:
.LFB102:
	.loc 1 4567 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	movq	%rsi, -32(%rbp)	# obj, obj
	movl	%edx, -36(%rbp)	# how, how
	movq	%rcx, -48(%rbp)	# vtable, vtable
	movq	%r8, -56(%rbp)	# name, name
	movl	%r9d, -40(%rbp)	# namlen, namlen
	.loc 1 4570 0
	movq	-24(%rbp), %rax	# sv, tmp134
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22935
	movzbl	%al, %eax	# D.22935, D.22935
	cmpl	$6, %eax	#, D.22935
	ja	.L1073	#,
	.loc 1 4571 0
	movq	-24(%rbp), %rax	# sv, tmp135
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22935
	movzbl	%al, %eax	# D.22935, D.22935
	cmpl	$6, %eax	#, D.22935
	ja	.L1074	#,
	.loc 1 4571 0 is_stmt 0 discriminator 2
	movq	-24(%rbp), %rax	# sv, tmp136
	movl	$7, %esi	#,
	movq	%rax, %rdi	# tmp136,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.22936
	je	.L1073	#,
.L1074:
	.loc 1 4571 0 discriminator 1
	nop
.L1073:
	.loc 1 4573 0 is_stmt 1
	movl	$48, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp137, mg
	movq	-8(%rbp), %rax	# mg, tmp138
	movl	$48, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp138,
	call	memset	#
	.loc 1 4574 0
	movq	-24(%rbp), %rax	# sv, tmp139
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22937
	movq	40(%rax), %rdx	# MEM[(struct XPVMG *)_11].xmg_magic, D.22938
	movq	-8(%rbp), %rax	# mg, tmp140
	movq	%rdx, (%rax)	# D.22938, mg_10->mg_moremagic
	.loc 1 4575 0
	movq	-24(%rbp), %rax	# sv, tmp141
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22937
	movq	-8(%rbp), %rdx	# mg, tmp142
	movq	%rdx, 40(%rax)	# tmp142, MEM[(struct XPVMG *)_13].xmg_magic
	.loc 1 4586 0
	cmpq	$0, -32(%rbp)	#, obj
	je	.L1076	#,
	.loc 1 4586 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# obj, tmp143
	cmpq	-24(%rbp), %rax	# sv, tmp143
	je	.L1076	#,
	cmpl	$35, -36(%rbp)	#, how
	je	.L1076	#,
	.loc 1 4587 0 is_stmt 1
	cmpl	$114, -36(%rbp)	#, how
	je	.L1076	#,
	.loc 1 4589 0
	movq	-32(%rbp), %rax	# obj, tmp144
	movl	12(%rax), %eax	# obj_14(D)->sv_flags, D.22935
	movzbl	%al, %eax	# D.22935, D.22935
	.loc 1 4588 0
	cmpl	$13, %eax	#, D.22935
	jne	.L1077	#,
	.loc 1 4590 0
	movq	-32(%rbp), %rax	# obj, tmp145
	movq	(%rax), %rax	# obj_14(D)->sv_any, D.22937
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_18].xgv_gp, D.22939
	movq	(%rax), %rax	# _19->gp_sv, D.22940
	.loc 1 4589 0
	cmpq	-24(%rbp), %rax	# sv, D.22940
	je	.L1076	#,
	.loc 1 4590 0
	movq	-32(%rbp), %rax	# obj, tmp146
	movq	(%rax), %rax	# obj_14(D)->sv_any, D.22937
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_21].xgv_gp, D.22939
	movq	40(%rax), %rax	# _22->gp_hv, D.22941
	cmpq	-24(%rbp), %rax	# sv, D.22941
	je	.L1076	#,
	.loc 1 4590 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# obj, tmp147
	movq	(%rax), %rax	# obj_14(D)->sv_any, D.22937
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_24].xgv_gp, D.22939
	movq	32(%rax), %rax	# _25->gp_av, D.22942
	cmpq	-24(%rbp), %rax	# sv, D.22942
	je	.L1076	#,
	.loc 1 4591 0 is_stmt 1 discriminator 1
	movq	-32(%rbp), %rax	# obj, tmp148
	movq	(%rax), %rax	# obj_14(D)->sv_any, D.22937
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_27].xgv_gp, D.22939
	movq	56(%rax), %rax	# _28->gp_cv, D.22943
	.loc 1 4590 0 discriminator 1
	cmpq	-24(%rbp), %rax	# sv, D.22943
	je	.L1076	#,
	.loc 1 4591 0
	movq	-32(%rbp), %rax	# obj, tmp149
	movq	(%rax), %rax	# obj_14(D)->sv_any, D.22937
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_30].xgv_gp, D.22939
	movq	16(%rax), %rax	# _31->gp_io, D.22944
	cmpq	-24(%rbp), %rax	# sv, D.22944
	je	.L1076	#,
	.loc 1 4592 0 discriminator 1
	movq	-32(%rbp), %rax	# obj, tmp150
	movq	(%rax), %rax	# obj_14(D)->sv_any, D.22937
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_33].xgv_gp, D.22939
	movq	24(%rax), %rax	# _34->gp_form, D.22943
	.loc 1 4591 0 discriminator 1
	cmpq	-24(%rbp), %rax	# sv, D.22943
	jne	.L1077	#,
.L1076:
	.loc 1 4594 0
	movq	-8(%rbp), %rax	# mg, tmp151
	movq	-32(%rbp), %rdx	# obj, tmp152
	movq	%rdx, 24(%rax)	# tmp152, mg_10->mg_obj
	jmp	.L1078	#
.L1077:
	.loc 1 4597 0
	movq	-32(%rbp), %rax	# obj, tmp153
	movq	%rax, PL_Sv(%rip)	# tmp153, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.516
	testq	%rax, %rax	# PL_Sv.516
	je	.L1080	#,
	.loc 1 4597 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.517
	movl	8(%rax), %edx	# PL_Sv.517_37->sv_refcnt, D.22935
	addl	$1, %edx	#, D.22935
	movl	%edx, 8(%rax)	# D.22935, PL_Sv.517_37->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.517_37->sv_refcnt, D.22935
	testl	%eax, %eax	# D.22935
	je	.L1080	#,
	.loc 1 4597 0
	nop
.L1080:
	.loc 1 4597 0 discriminator 4
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.518
	movq	-8(%rbp), %rax	# mg, tmp154
	movq	%rdx, 24(%rax)	# PL_Sv.518, mg_10->mg_obj
	.loc 1 4598 0 is_stmt 1 discriminator 4
	movq	-8(%rbp), %rax	# mg, tmp155
	movzbl	19(%rax), %eax	# mg_10->mg_flags, D.22945
	orl	$2, %eax	#, D.22945
	movl	%eax, %edx	# D.22945, D.22945
	movq	-8(%rbp), %rax	# mg, tmp156
	movb	%dl, 19(%rax)	# D.22945, mg_10->mg_flags
.L1078:
	.loc 1 4609 0
	cmpl	$113, -36(%rbp)	#, how
	jne	.L1081	#,
	.loc 1 4609 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp157
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22935
	movzbl	%al, %eax	# D.22935, D.22935
	cmpl	$15, %eax	#, D.22935
	jne	.L1081	#,
	cmpq	$0, -32(%rbp)	#, obj
	je	.L1081	#,
	.loc 1 4610 0 is_stmt 1
	movq	-32(%rbp), %rax	# obj, tmp158
	movl	12(%rax), %eax	# obj_14(D)->sv_flags, D.22935
	andl	$524288, %eax	#, D.22935
	testl	%eax, %eax	# D.22935
	je	.L1081	#,
	.loc 1 4610 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# obj, tmp159
	movq	(%rax), %rax	# obj_14(D)->sv_any, D.22937
	movq	(%rax), %rax	# MEM[(struct XRV *)_50].xrv_rv, D.22940
	testq	%rax, %rax	# D.22940
	je	.L1082	#,
	movq	-32(%rbp), %rax	# obj, tmp160
	movq	(%rax), %rax	# obj_14(D)->sv_any, D.22937
	movq	(%rax), %rax	# MEM[(struct XRV *)_52].xrv_rv, D.22940
	movl	12(%rax), %eax	# _53->sv_flags, D.22935
	movzbl	%al, %eax	# D.22935, D.22935
	cmpl	$13, %eax	#, D.22935
	jne	.L1082	#,
	movq	-32(%rbp), %rax	# obj, tmp161
	movq	(%rax), %rax	# obj_14(D)->sv_any, D.22937
	movq	(%rax), %rax	# MEM[(struct XRV *)_56].xrv_rv, D.22940
	movq	(%rax), %rax	# _57->sv_any, D.22937
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_58].xgv_gp, D.22939
	testq	%rax, %rax	# D.22939
	je	.L1082	#,
	movq	-32(%rbp), %rax	# obj, tmp162
	movq	(%rax), %rax	# obj_14(D)->sv_any, D.22937
	movq	(%rax), %rax	# MEM[(struct XRV *)_60].xrv_rv, D.22940
	movq	(%rax), %rax	# _61->sv_any, D.22937
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_62].xgv_gp, D.22939
	movq	16(%rax), %rax	# _63->gp_io, iftmp.519
	jmp	.L1083	#
.L1082:
	.loc 1 4610 0 discriminator 2
	movl	$0, %eax	#, iftmp.519
.L1083:
	.loc 1 4610 0 discriminator 3
	cmpq	-24(%rbp), %rax	# sv, iftmp.519
	jne	.L1081	#,
	.loc 1 4612 0 is_stmt 1
	movq	-32(%rbp), %rax	# obj, tmp163
	movq	%rax, %rdi	# tmp163,
	call	Perl_sv_rvweaken	#
.L1081:
	.loc 1 4615 0
	movl	-36(%rbp), %eax	# how, tmp164
	movl	%eax, %edx	# tmp164, D.22936
	movq	-8(%rbp), %rax	# mg, tmp165
	movb	%dl, 18(%rax)	# D.22936, mg_10->mg_type
	.loc 1 4616 0
	movq	-8(%rbp), %rax	# mg, tmp166
	movl	-40(%rbp), %edx	# namlen, tmp167
	movl	%edx, 40(%rax)	# tmp167, mg_10->mg_len
	.loc 1 4617 0
	cmpq	$0, -56(%rbp)	#, name
	je	.L1084	#,
	.loc 1 4618 0
	cmpl	$0, -40(%rbp)	#, namlen
	jle	.L1085	#,
	.loc 1 4619 0
	movl	-40(%rbp), %edx	# namlen, tmp168
	movq	-56(%rbp), %rax	# name, tmp169
	movl	%edx, %esi	# tmp168,
	movq	%rax, %rdi	# tmp169,
	call	Perl_savepvn	#
	movq	-8(%rbp), %rdx	# mg, tmp170
	movq	%rax, 32(%rdx)	# D.22946, mg_10->mg_ptr
	jmp	.L1084	#
.L1085:
	.loc 1 4620 0
	cmpl	$-2, -40(%rbp)	#, namlen
	jne	.L1086	#,
	.loc 1 4621 0
	movq	-56(%rbp), %rax	# name, tmp171
	movq	%rax, PL_Sv(%rip)	# tmp171, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.521
	testq	%rax, %rax	# PL_Sv.521
	je	.L1088	#,
	.loc 1 4621 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.522
	movl	8(%rax), %edx	# PL_Sv.522_71->sv_refcnt, D.22935
	addl	$1, %edx	#, D.22935
	movl	%edx, 8(%rax)	# D.22935, PL_Sv.522_71->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.522_71->sv_refcnt, D.22935
	testl	%eax, %eax	# D.22935
	je	.L1088	#,
	.loc 1 4621 0
	nop
.L1088:
	.loc 1 4621 0 discriminator 4
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.523
	movq	-8(%rbp), %rax	# mg, tmp172
	movq	%rdx, 32(%rax)	# PL_Sv.523, mg_10->mg_ptr
	jmp	.L1084	#
.L1086:
	.loc 1 4623 0 is_stmt 1
	movq	-8(%rbp), %rax	# mg, tmp173
	movq	-56(%rbp), %rdx	# name, tmp174
	movq	%rdx, 32(%rax)	# tmp174, mg_10->mg_ptr
.L1084:
	.loc 1 4625 0
	movq	-8(%rbp), %rax	# mg, tmp175
	movq	-48(%rbp), %rdx	# vtable, tmp176
	movq	%rdx, 8(%rax)	# tmp176, mg_10->mg_virtual
	.loc 1 4627 0
	movq	-24(%rbp), %rax	# sv, tmp177
	movq	%rax, %rdi	# tmp177,
	call	Perl_mg_magical	#
	.loc 1 4628 0
	movq	-24(%rbp), %rax	# sv, tmp178
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22935
	andl	$8192, %eax	#, D.22935
	testl	%eax, %eax	# D.22935
	je	.L1089	#,
	.loc 1 4629 0
	movq	-24(%rbp), %rax	# sv, tmp179
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22935
	andl	$-458753, %eax	#, D.22935
	movl	%eax, %edx	# D.22935, D.22935
	movq	-24(%rbp), %rax	# sv, tmp180
	movl	%edx, 12(%rax)	# D.22935, sv_2(D)->sv_flags
.L1089:
	.loc 1 4630 0
	movq	-8(%rbp), %rax	# mg, D.22938
	.loc 1 4631 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE102:
	.size	Perl_sv_magicext, .-Perl_sv_magicext
	.section	.rodata
	.align 8
.LC43:
	.string	"Don't know how to handle magic of type \\%o"
	.text
	.globl	Perl_sv_magic
	.type	Perl_sv_magic, @function
Perl_sv_magic:
.LFB103:
	.loc 1 4650 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, -40(%rbp)	# obj, obj
	movl	%edx, -44(%rbp)	# how, how
	movq	%rcx, -56(%rbp)	# name, name
	movl	%r8d, -48(%rbp)	# namlen, namlen
	.loc 1 4652 0
	movq	$0, -32(%rbp)	#, vtable
	.loc 1 4654 0
	movl	12(%rbx), %eax	# sv_3(D)->sv_flags, D.22947
	andl	$8388608, %eax	#, D.22947
	testl	%eax, %eax	# D.22947
	je	.L1092	#,
	.loc 1 4655 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.524
	cmpq	$PL_compiling, %rax	#, PL_curcop.524
	je	.L1092	#,
	.loc 1 4656 0
	cmpl	$103, -44(%rbp)	#, how
	je	.L1092	#,
	.loc 1 4657 0
	cmpl	$66, -44(%rbp)	#, how
	je	.L1092	#,
	.loc 1 4658 0
	cmpl	$102, -44(%rbp)	#, how
	je	.L1092	#,
	.loc 1 4659 0
	cmpl	$0, -44(%rbp)	#, how
	je	.L1092	#,
	.loc 1 4660 0
	cmpl	$60, -44(%rbp)	#, how
	je	.L1092	#,
	.loc 1 4663 0
	movl	$PL_no_modify, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1092:
	.loc 1 4666 0
	movl	12(%rbx), %eax	# sv_3(D)->sv_flags, D.22947
	andl	$57344, %eax	#, D.22947
	testl	%eax, %eax	# D.22947
	jne	.L1093	#,
	.loc 1 4666 0 is_stmt 0 discriminator 1
	cmpl	$116, -44(%rbp)	#, how
	jne	.L1094	#,
	movl	12(%rbx), %eax	# sv_3(D)->sv_flags, D.22947
	movzbl	%al, %eax	# D.22947, D.22947
	cmpl	$6, %eax	#, D.22947
	jbe	.L1094	#,
.L1093:
	.loc 1 4667 0 is_stmt 1
	movq	(%rbx), %rax	# sv_3(D)->sv_any, D.22948
	movq	40(%rax), %rax	# MEM[(struct XPVMG *)_12].xmg_magic, D.22949
	testq	%rax, %rax	# D.22949
	je	.L1094	#,
	.loc 1 4667 0 is_stmt 0 discriminator 1
	movl	-44(%rbp), %eax	# how, tmp73
	movl	%eax, %esi	# tmp73,
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_find	#
	movq	%rax, -24(%rbp)	# tmp74, mg
	cmpq	$0, -24(%rbp)	#, mg
	je	.L1094	#,
	.loc 1 4671 0 is_stmt 1
	cmpl	$116, -44(%rbp)	#, how
	jne	.L1095	#,
	.loc 1 4672 0
	movq	-24(%rbp), %rax	# mg, tmp75
	movl	40(%rax), %eax	# mg_14->mg_len, D.22950
	orl	$1, %eax	#, D.22950
	movl	%eax, %edx	# D.22950, D.22950
	movq	-24(%rbp), %rax	# mg, tmp76
	movl	%edx, 40(%rax)	# D.22950, mg_14->mg_len
	.loc 1 4673 0
	jmp	.L1091	#
.L1095:
	jmp	.L1091	#
.L1094:
	.loc 1 4677 0
	cmpl	$126, -44(%rbp)	#, how
	ja	.L1097	#,
	movl	-44(%rbp), %eax	# how, tmp77
	movq	.L1099(,%rax,8), %rax	#, tmp78
	jmp	*%rax	# tmp78
	.section	.rodata
	.align 8
	.align 4
.L1099:
	.quad	.L1098
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1100
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1101
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1102
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1103
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1104
	.quad	.L1105
	.quad	.L1097
	.quad	.L1106
	.quad	.L1107
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1108
	.quad	.L1097
	.quad	.L1097
	.quad	.L1109
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1110
	.quad	.L1097
	.quad	.L1097
	.quad	.L1111
	.quad	.L1097
	.quad	.L1112
	.quad	.L1113
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1114
	.quad	.L1097
	.quad	.L1115
	.quad	.L1116
	.quad	.L1117
	.quad	.L1118
	.quad	.L1119
	.quad	.L1097
	.quad	.L1120
	.quad	.L1097
	.quad	.L1121
	.quad	.L1122
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1123
	.quad	.L1123
	.quad	.L1124
	.quad	.L1125
	.quad	.L1126
	.quad	.L1097
	.quad	.L1127
	.quad	.L1128
	.quad	.L1129
	.quad	.L1130
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1097
	.quad	.L1135
	.text
.L1098:
	.loc 1 4679 0
	movq	$PL_vtbl_sv, -32(%rbp)	#, vtable
	.loc 1 4680 0
	jmp	.L1132	#
.L1104:
	.loc 1 4682 0
	movq	$PL_vtbl_amagic, -32(%rbp)	#, vtable
	.loc 1 4683 0
	jmp	.L1132	#
.L1114:
	.loc 1 4685 0
	movq	$PL_vtbl_amagicelem, -32(%rbp)	#, vtable
	.loc 1 4686 0
	jmp	.L1132	#
.L1115:
	.loc 1 4688 0
	movq	$PL_vtbl_ovrld, -32(%rbp)	#, vtable
	.loc 1 4689 0
	jmp	.L1132	#
.L1105:
	.loc 1 4691 0
	movq	$PL_vtbl_bm, -32(%rbp)	#, vtable
	.loc 1 4692 0
	jmp	.L1132	#
.L1106:
	.loc 1 4694 0
	movq	$PL_vtbl_regdata, -32(%rbp)	#, vtable
	.loc 1 4695 0
	jmp	.L1132	#
.L1116:
	.loc 1 4697 0
	movq	$PL_vtbl_regdatum, -32(%rbp)	#, vtable
	.loc 1 4698 0
	jmp	.L1132	#
.L1107:
	.loc 1 4700 0
	movq	$PL_vtbl_env, -32(%rbp)	#, vtable
	.loc 1 4701 0
	jmp	.L1132	#
.L1118:
	.loc 1 4703 0
	movq	$PL_vtbl_fm, -32(%rbp)	#, vtable
	.loc 1 4704 0
	jmp	.L1132	#
.L1117:
	.loc 1 4706 0
	movq	$PL_vtbl_envelem, -32(%rbp)	#, vtable
	.loc 1 4707 0
	jmp	.L1132	#
.L1119:
	.loc 1 4709 0
	movq	$PL_vtbl_mglob, -32(%rbp)	#, vtable
	.loc 1 4710 0
	jmp	.L1132	#
.L1108:
	.loc 1 4712 0
	movq	$PL_vtbl_isa, -32(%rbp)	#, vtable
	.loc 1 4713 0
	jmp	.L1132	#
.L1120:
	.loc 1 4715 0
	movq	$PL_vtbl_isaelem, -32(%rbp)	#, vtable
	.loc 1 4716 0
	jmp	.L1132	#
.L1121:
	.loc 1 4718 0
	movq	$PL_vtbl_nkeys, -32(%rbp)	#, vtable
	.loc 1 4719 0
	jmp	.L1132	#
.L1109:
	.loc 1 4721 0
	movq	$0, -32(%rbp)	#, vtable
	.loc 1 4722 0
	jmp	.L1132	#
.L1122:
	.loc 1 4724 0
	movq	$PL_vtbl_dbline, -32(%rbp)	#, vtable
	.loc 1 4725 0
	jmp	.L1132	#
.L1110:
	.loc 1 4737 0
	movq	$PL_vtbl_pack, -32(%rbp)	#, vtable
	.loc 1 4738 0
	jmp	.L1132	#
.L1123:
	.loc 1 4741 0
	movq	$PL_vtbl_packelem, -32(%rbp)	#, vtable
	.loc 1 4742 0
	jmp	.L1132	#
.L1124:
	.loc 1 4744 0
	movq	$PL_vtbl_regexp, -32(%rbp)	#, vtable
	.loc 1 4745 0
	jmp	.L1132	#
.L1111:
	.loc 1 4747 0
	movq	$PL_vtbl_sig, -32(%rbp)	#, vtable
	.loc 1 4748 0
	jmp	.L1132	#
.L1125:
	.loc 1 4750 0
	movq	$PL_vtbl_sigelem, -32(%rbp)	#, vtable
	.loc 1 4751 0
	jmp	.L1132	#
.L1126:
	.loc 1 4753 0
	movq	$PL_vtbl_taint, -32(%rbp)	#, vtable
	.loc 1 4754 0
	jmp	.L1132	#
.L1112:
	.loc 1 4756 0
	movq	$PL_vtbl_uvar, -32(%rbp)	#, vtable
	.loc 1 4757 0
	jmp	.L1132	#
.L1127:
	.loc 1 4759 0
	movq	$PL_vtbl_vec, -32(%rbp)	#, vtable
	.loc 1 4760 0
	jmp	.L1132	#
.L1113:
	.loc 1 4762 0
	movq	$0, -32(%rbp)	#, vtable
	.loc 1 4763 0
	jmp	.L1132	#
.L1128:
	.loc 1 4765 0
	movq	$PL_vtbl_utf8, -32(%rbp)	#, vtable
	.loc 1 4766 0
	jmp	.L1132	#
.L1129:
	.loc 1 4768 0
	movq	$PL_vtbl_substr, -32(%rbp)	#, vtable
	.loc 1 4769 0
	jmp	.L1132	#
.L1130:
	.loc 1 4771 0
	movq	$PL_vtbl_defelem, -32(%rbp)	#, vtable
	.loc 1 4772 0
	jmp	.L1132	#
.L1101:
	.loc 1 4774 0
	movq	$PL_vtbl_glob, -32(%rbp)	#, vtable
	.loc 1 4775 0
	jmp	.L1132	#
.L1100:
	.loc 1 4777 0
	movq	$PL_vtbl_arylen, -32(%rbp)	#, vtable
	.loc 1 4778 0
	jmp	.L1132	#
.L1102:
	.loc 1 4780 0
	movq	$PL_vtbl_pos, -32(%rbp)	#, vtable
	.loc 1 4781 0
	jmp	.L1132	#
.L1103:
	.loc 1 4783 0
	movq	$PL_vtbl_backref, -32(%rbp)	#, vtable
	.loc 1 4784 0
	jmp	.L1132	#
.L1097:
	.loc 1 4792 0
	movl	-44(%rbp), %eax	# how, tmp79
	movl	%eax, %esi	# tmp79,
	movl	$.LC43, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L1132	#
.L1135:
	.loc 1 4790 0
	nop
.L1132:
	.loc 1 4796 0
	movl	-48(%rbp), %edi	# namlen, tmp80
	movq	-56(%rbp), %rsi	# name, tmp81
	movq	-32(%rbp), %rcx	# vtable, tmp82
	movl	-44(%rbp), %edx	# how, tmp83
	movq	-40(%rbp), %rax	# obj, tmp84
	movl	%edi, %r9d	# tmp80,
	movq	%rsi, %r8	# tmp81,
	movq	%rax, %rsi	# tmp84,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_magicext	#
	movq	%rax, -24(%rbp)	# tmp85, mg
	.loc 1 4798 0
	movl	-44(%rbp), %eax	# how, how
	cmpl	$116, %eax	#, how
	je	.L1133	#,
	cmpl	$126, %eax	#, how
	je	.L1134	#,
	cmpl	$76, %eax	#, how
	je	.L1134	#,
	jmp	.L1091	#
.L1133:
	.loc 1 4800 0
	movq	-24(%rbp), %rax	# mg, tmp87
	movl	$1, 40(%rax)	#, mg_52->mg_len
	.loc 1 4801 0
	jmp	.L1091	#
.L1134:
	.loc 1 4804 0
	movl	12(%rbx), %eax	# sv_3(D)->sv_flags, D.22947
	orb	$128, %ah	#, D.22947
	movl	%eax, 12(%rbx)	# D.22947, sv_3(D)->sv_flags
	.loc 1 4805 0
	nop
.L1091:
	.loc 1 4807 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE103:
	.size	Perl_sv_magic, .-Perl_sv_magic
	.globl	Perl_sv_unmagic
	.type	Perl_sv_unmagic, @function
Perl_sv_unmagic:
.LFB104:
	.loc 1 4819 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# sv, sv
	movl	%esi, -44(%rbp)	# type, type
	.loc 1 4822 0
	movq	-40(%rbp), %rax	# sv, tmp93
	movl	12(%rax), %eax	# sv_5(D)->sv_flags, D.22953
	movzbl	%al, %eax	# D.22953, D.22953
	cmpl	$6, %eax	#, D.22953
	jbe	.L1137	#,
	.loc 1 4822 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp94
	movq	(%rax), %rax	# sv_5(D)->sv_any, D.22954
	movq	40(%rax), %rax	# MEM[(struct XPVMG *)_8].xmg_magic, D.22955
	testq	%rax, %rax	# D.22955
	jne	.L1138	#,
.L1137:
	.loc 1 4823 0 is_stmt 1
	movl	$0, %eax	#, D.22952
	jmp	.L1139	#
.L1138:
	.loc 1 4824 0
	movq	-40(%rbp), %rax	# sv, tmp95
	movq	(%rax), %rax	# sv_5(D)->sv_any, D.22954
	addq	$40, %rax	#, tmp96
	movq	%rax, -16(%rbp)	# tmp96, mgp
	.loc 1 4825 0
	movq	-16(%rbp), %rax	# mgp, tmp97
	movq	(%rax), %rax	# *mgp_11, tmp98
	movq	%rax, -24(%rbp)	# tmp98, mg
	jmp	.L1140	#
.L1148:
	.loc 1 4826 0
	movq	-24(%rbp), %rax	# mg, tmp99
	movzbl	18(%rax), %eax	# mg_1->mg_type, D.22956
	movsbl	%al, %eax	# D.22956, D.22952
	cmpl	-44(%rbp), %eax	# type, D.22952
	jne	.L1141	#,
.LBB49:
	.loc 1 4827 0
	movq	-24(%rbp), %rax	# mg, tmp100
	movq	8(%rax), %rax	# mg_1->mg_virtual, tmp101
	movq	%rax, -8(%rbp)	# tmp101, vtbl
	.loc 1 4828 0
	movq	-24(%rbp), %rax	# mg, tmp102
	movq	(%rax), %rdx	# mg_1->mg_moremagic, D.22955
	movq	-16(%rbp), %rax	# mgp, tmp103
	movq	%rdx, (%rax)	# D.22955, *mgp_3
	.loc 1 4829 0
	cmpq	$0, -8(%rbp)	#, vtbl
	je	.L1142	#,
	.loc 1 4829 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# vtbl, tmp104
	movq	32(%rax), %rax	# vtbl_16->svt_free, D.22957
	testq	%rax, %rax	# D.22957
	je	.L1142	#,
	.loc 1 4830 0 is_stmt 1
	movq	-8(%rbp), %rax	# vtbl, tmp105
	movq	32(%rax), %rax	# vtbl_16->svt_free, D.22957
	movq	-24(%rbp), %rcx	# mg, tmp106
	movq	-40(%rbp), %rdx	# sv, tmp107
	movq	%rcx, %rsi	# tmp106,
	movq	%rdx, %rdi	# tmp107,
	call	*%rax	# D.22957
.L1142:
	.loc 1 4831 0
	movq	-24(%rbp), %rax	# mg, tmp108
	movq	32(%rax), %rax	# mg_1->mg_ptr, D.22958
	testq	%rax, %rax	# D.22958
	je	.L1143	#,
	.loc 1 4831 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# mg, tmp109
	movzbl	18(%rax), %eax	# mg_1->mg_type, D.22956
	cmpb	$103, %al	#, D.22956
	je	.L1143	#,
	.loc 1 4832 0 is_stmt 1
	movq	-24(%rbp), %rax	# mg, tmp110
	movl	40(%rax), %eax	# mg_1->mg_len, D.22952
	testl	%eax, %eax	# D.22952
	jle	.L1144	#,
	.loc 1 4833 0
	movq	-24(%rbp), %rax	# mg, tmp111
	movq	32(%rax), %rax	# mg_1->mg_ptr, D.22958
	movq	%rax, %rdi	# D.22958,
	call	Perl_safesysfree	#
	jmp	.L1143	#
.L1144:
	.loc 1 4834 0
	movq	-24(%rbp), %rax	# mg, tmp112
	movl	40(%rax), %eax	# mg_1->mg_len, D.22952
	cmpl	$-2, %eax	#, D.22952
	jne	.L1145	#,
	.loc 1 4835 0
	movq	-24(%rbp), %rax	# mg, tmp113
	movq	32(%rax), %rax	# mg_1->mg_ptr, D.22958
	movq	%rax, %rdi	# D.22958,
	call	Perl_sv_free	#
	jmp	.L1143	#
.L1145:
	.loc 1 4836 0
	movq	-24(%rbp), %rax	# mg, tmp114
	movzbl	18(%rax), %eax	# mg_1->mg_type, D.22956
	cmpb	$119, %al	#, D.22956
	jne	.L1143	#,
	.loc 1 4836 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# mg, tmp115
	movq	32(%rax), %rax	# mg_1->mg_ptr, D.22958
	testq	%rax, %rax	# D.22958
	je	.L1143	#,
	.loc 1 4837 0 is_stmt 1
	movq	-24(%rbp), %rax	# mg, tmp116
	movq	32(%rax), %rax	# mg_1->mg_ptr, D.22958
	movq	%rax, %rdi	# D.22958,
	call	Perl_safesysfree	#
.L1143:
	.loc 1 4839 0
	movq	-24(%rbp), %rax	# mg, tmp117
	movzbl	19(%rax), %eax	# mg_1->mg_flags, D.22959
	movzbl	%al, %eax	# D.22959, D.22952
	andl	$2, %eax	#, D.22952
	testl	%eax, %eax	# D.22952
	je	.L1146	#,
	.loc 1 4840 0
	movq	-24(%rbp), %rax	# mg, tmp118
	movq	24(%rax), %rax	# mg_1->mg_obj, D.22960
	movq	%rax, %rdi	# D.22960,
	call	Perl_sv_free	#
.L1146:
	.loc 1 4841 0
	movq	-24(%rbp), %rax	# mg, tmp119
	movq	%rax, %rdi	# tmp119,
	call	Perl_safesysfree	#
.LBE49:
	jmp	.L1147	#
.L1141:
	.loc 1 4844 0
	movq	-24(%rbp), %rax	# mg, tmp120
	movq	%rax, -16(%rbp)	# tmp120, mgp
.L1147:
	.loc 1 4825 0
	movq	-16(%rbp), %rax	# mgp, tmp121
	movq	(%rax), %rax	# *mgp_2, tmp122
	movq	%rax, -24(%rbp)	# tmp122, mg
.L1140:
	.loc 1 4825 0 is_stmt 0 discriminator 1
	cmpq	$0, -24(%rbp)	#, mg
	jne	.L1148	#,
	.loc 1 4846 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp123
	movq	(%rax), %rax	# sv_5(D)->sv_any, D.22954
	movq	40(%rax), %rax	# MEM[(struct XPVMG *)_35].xmg_magic, D.22955
	testq	%rax, %rax	# D.22955
	jne	.L1149	#,
	.loc 1 4847 0
	movq	-40(%rbp), %rax	# sv, tmp124
	movl	12(%rax), %eax	# sv_5(D)->sv_flags, D.22953
	andb	$31, %ah	#, D.22953
	movl	%eax, %edx	# D.22953, D.22953
	movq	-40(%rbp), %rax	# sv, tmp125
	movl	%edx, 12(%rax)	# D.22953, sv_5(D)->sv_flags
	.loc 1 4848 0
	movq	-40(%rbp), %rax	# sv, tmp126
	movl	12(%rax), %edx	# sv_5(D)->sv_flags, D.22953
	movq	-40(%rbp), %rax	# sv, tmp127
	movl	12(%rax), %eax	# sv_5(D)->sv_flags, D.22953
	andl	$100663296, %eax	#, D.22953
	shrl	$8, %eax	#, D.22953
	orl	%eax, %edx	# D.22953, D.22953
	movq	-40(%rbp), %rax	# sv, tmp128
	movl	%edx, 12(%rax)	# D.22953, sv_5(D)->sv_flags
.L1149:
	.loc 1 4851 0
	movl	$0, %eax	#, D.22952
.L1139:
	.loc 1 4852 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE104:
	.size	Perl_sv_unmagic, .-Perl_sv_unmagic
	.section	.rodata
.LC44:
	.string	"Can't weaken a nonreference"
.LC45:
	.string	"Reference is already weak"
	.text
	.globl	Perl_sv_rvweaken
	.type	Perl_sv_rvweaken, @function
Perl_sv_rvweaken:
.LFB105:
	.loc 1 4867 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	.loc 1 4869 0
	movq	-24(%rbp), %rax	# sv, tmp89
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22962
	andl	$118423552, %eax	#, D.22962
	testl	%eax, %eax	# D.22962
	jne	.L1151	#,
	.loc 1 4870 0
	movq	-24(%rbp), %rax	# sv, D.22961
	jmp	.L1152	#
.L1151:
	.loc 1 4871 0
	movq	-24(%rbp), %rax	# sv, tmp90
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22962
	andl	$524288, %eax	#, D.22962
	testl	%eax, %eax	# D.22962
	jne	.L1153	#,
	.loc 1 4872 0
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L1154	#
.L1153:
	.loc 1 4873 0
	movq	-24(%rbp), %rax	# sv, tmp91
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22962
	andl	$-2146959360, %eax	#, D.22962
	cmpl	$-2146959360, %eax	#, D.22962
	jne	.L1154	#,
	.loc 1 4874 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.525
	movq	80(%rax), %rax	# PL_curcop.525_10->cop_warnings, D.22961
	testq	%rax, %rax	# D.22961
	je	.L1155	#,
	.loc 1 4874 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.526
	movq	80(%rax), %rax	# PL_curcop.526_12->cop_warnings, D.22961
	cmpq	$32, %rax	#, D.22961
	je	.L1155	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.527
	movq	80(%rax), %rax	# PL_curcop.527_14->cop_warnings, D.22961
	cmpq	$16, %rax	#, D.22961
	je	.L1156	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.528
	movq	80(%rax), %rax	# PL_curcop.528_16->cop_warnings, D.22961
	movq	(%rax), %rax	# _17->sv_any, D.22963
	movq	(%rax), %rax	# MEM[(struct XPV *)_18].xpv_pv, D.22964
	addq	$3, %rax	#, D.22964
	movzbl	(%rax), %eax	# *_20, D.22965
	movsbl	%al, %eax	# D.22965, D.22966
	andl	$1, %eax	#, D.22966
	testl	%eax, %eax	# D.22966
	jne	.L1156	#,
.L1155:
	.loc 1 4874 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.529
	movq	80(%rax), %rax	# PL_curcop.529_24->cop_warnings, D.22961
	testq	%rax, %rax	# D.22961
	jne	.L1157	#,
	.loc 1 4874 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.530
	movzbl	%al, %eax	# PL_dowarn.530, D.22966
	andl	$1, %eax	#, D.22966
	testl	%eax, %eax	# D.22966
	je	.L1157	#,
.L1156:
	.loc 1 4875 0 is_stmt 1
	movl	$.LC45, %esi	#,
	movl	$12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1157:
	.loc 1 4876 0
	movq	-24(%rbp), %rax	# sv, D.22961
	jmp	.L1152	#
.L1154:
	.loc 1 4878 0
	movq	-24(%rbp), %rax	# sv, tmp92
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.22963
	movq	(%rax), %rax	# MEM[(struct XRV *)_30].xrv_rv, tmp93
	movq	%rax, -8(%rbp)	# tmp93, tsv
	.loc 1 4879 0
	movq	-24(%rbp), %rdx	# sv, tmp94
	movq	-8(%rbp), %rax	# tsv, tmp95
	movq	%rdx, %rsi	# tmp94,
	movq	%rax, %rdi	# tmp95,
	call	S_sv_add_backref	#
	.loc 1 4880 0
	movq	-24(%rbp), %rax	# sv, tmp96
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.22962
	orl	$-2146959360, %eax	#, D.22962
	movl	%eax, %edx	# D.22962, D.22962
	movq	-24(%rbp), %rax	# sv, tmp97
	movl	%edx, 12(%rax)	# D.22962, sv_2(D)->sv_flags
	.loc 1 4881 0
	movq	-8(%rbp), %rax	# tsv, tmp98
	movq	%rax, %rdi	# tmp98,
	call	Perl_sv_free	#
	.loc 1 4882 0
	movq	-24(%rbp), %rax	# sv, D.22961
.L1152:
	.loc 1 4883 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE105:
	.size	Perl_sv_rvweaken, .-Perl_sv_rvweaken
	.type	S_sv_add_backref, @function
S_sv_add_backref:
.LFB106:
	.loc 1 4891 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# tsv, tsv
	movq	%rsi, -48(%rbp)	# sv, sv
	.loc 1 4894 0
	movq	-40(%rbp), %rax	# tsv, tmp89
	movl	12(%rax), %eax	# tsv_3(D)->sv_flags, D.22969
	andl	$57344, %eax	#, D.22969
	testl	%eax, %eax	# D.22969
	je	.L1159	#,
	.loc 1 4894 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# tsv, tmp90
	movl	$60, %esi	#,
	movq	%rax, %rdi	# tmp90,
	call	Perl_mg_find	#
	movq	%rax, -16(%rbp)	# tmp91, mg
	cmpq	$0, -16(%rbp)	#, mg
	je	.L1159	#,
	.loc 1 4895 0 is_stmt 1
	movq	-16(%rbp), %rax	# mg, tmp92
	movq	24(%rax), %rax	# mg_6->mg_obj, tmp93
	movq	%rax, -24(%rbp)	# tmp93, av
	jmp	.L1160	#
.L1159:
	.loc 1 4897 0
	call	Perl_newAV	#
	movq	%rax, -24(%rbp)	# tmp94, av
	.loc 1 4898 0
	movq	-24(%rbp), %rsi	# av, tmp95
	movq	-40(%rbp), %rax	# tsv, tmp96
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$60, %edx	#,
	movq	%rax, %rdi	# tmp96,
	call	Perl_sv_magic	#
.L1160:
	.loc 1 4903 0
	movq	-24(%rbp), %rax	# av, tmp97
	movq	(%rax), %rax	# av_1->sv_any, D.22970
	movq	8(%rax), %rdx	# _9->xav_fill, D.22971
	movq	-24(%rbp), %rax	# av, tmp98
	movq	(%rax), %rax	# av_1->sv_any, D.22970
	movq	16(%rax), %rax	# _11->xav_max, D.22971
	cmpq	%rax, %rdx	# D.22971, D.22971
	jl	.L1161	#,
.LBB50:
	.loc 1 4905 0
	movq	-24(%rbp), %rax	# av, tmp99
	movq	(%rax), %rax	# av_1->sv_any, D.22970
	movq	(%rax), %rax	# _13->xav_array, tmp100
	movq	%rax, -8(%rbp)	# tmp100, svp
	.loc 1 4906 0
	movq	-24(%rbp), %rax	# av, tmp101
	movq	(%rax), %rax	# av_1->sv_any, D.22970
	movq	8(%rax), %rax	# _15->xav_fill, D.22971
	movl	%eax, -28(%rbp)	# D.22971, i
	jmp	.L1162	#
.L1165:
	.loc 1 4907 0
	movl	-28(%rbp), %eax	# i, tmp102
	cltq
	leaq	0(,%rax,8), %rdx	#, D.22972
	movq	-8(%rbp), %rax	# svp, tmp103
	addq	%rdx, %rax	# D.22972, D.22973
	movq	(%rax), %rax	# *_20, D.22974
	testq	%rax, %rax	# D.22974
	jne	.L1163	#,
	.loc 1 4908 0
	movl	-28(%rbp), %eax	# i, tmp104
	cltq
	leaq	0(,%rax,8), %rdx	#, D.22972
	movq	-8(%rbp), %rax	# svp, tmp105
	addq	%rax, %rdx	# tmp105, D.22973
	movq	-48(%rbp), %rax	# sv, tmp106
	movq	%rax, (%rdx)	# tmp106, *_24
	.loc 1 4909 0
	jmp	.L1158	#
.L1163:
	.loc 1 4906 0
	subl	$1, -28(%rbp)	#, i
.L1162:
	.loc 1 4906 0 is_stmt 0 discriminator 1
	cmpl	$0, -28(%rbp)	#, i
	jns	.L1165	#,
	.loc 1 4911 0 is_stmt 1
	movq	-24(%rbp), %rax	# av, tmp107
	movq	(%rax), %rax	# av_1->sv_any, D.22970
	movq	8(%rax), %rax	# _27->xav_fill, D.22971
	addl	$1, %eax	#, D.22975
	movl	%eax, %edx	# D.22975, D.22976
	movq	-24(%rbp), %rax	# av, tmp108
	movl	%edx, %esi	# D.22976,
	movq	%rax, %rdi	# tmp108,
	call	Perl_av_extend	#
.L1161:
.LBE50:
	.loc 1 4913 0
	movq	-24(%rbp), %rax	# av, tmp109
	movq	(%rax), %rax	# av_1->sv_any, D.22970
	movq	(%rax), %rdx	# _32->xav_array, D.22977
	movq	-24(%rbp), %rax	# av, tmp110
	movq	(%rax), %rax	# av_1->sv_any, D.22970
	movq	8(%rax), %rcx	# _34->xav_fill, D.22971
	addq	$1, %rcx	#, D.22971
	movq	%rcx, 8(%rax)	# D.22971, _34->xav_fill
	movq	8(%rax), %rax	# _34->xav_fill, D.22971
	salq	$3, %rax	#, D.22972
	addq	%rax, %rdx	# D.22972, D.22973
	movq	-48(%rbp), %rax	# sv, tmp111
	movq	%rax, (%rdx)	# tmp111, *_40
.L1158:
	.loc 1 4914 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE106:
	.size	S_sv_add_backref, .-S_sv_add_backref
	.section	.rodata
.LC46:
	.string	"panic: del_backref"
	.text
	.type	S_sv_del_backref, @function
S_sv_del_backref:
.LFB107:
	.loc 1 4922 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -56(%rbp)	# sv, sv
	.loc 1 4926 0
	movq	-56(%rbp), %rax	# sv, tmp72
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.22978
	movq	(%rax), %rax	# MEM[(struct XRV *)_5].xrv_rv, tmp73
	movq	%rax, -24(%rbp)	# tmp73, tsv
	.loc 1 4927 0
	movq	$0, -32(%rbp)	#, mg
	.loc 1 4928 0
	movq	-24(%rbp), %rax	# tsv, tmp74
	movl	12(%rax), %eax	# tsv_6->sv_flags, D.22979
	andl	$57344, %eax	#, D.22979
	testl	%eax, %eax	# D.22979
	je	.L1167	#,
	.loc 1 4928 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# tsv, tmp75
	movl	$60, %esi	#,
	movq	%rax, %rdi	# tmp75,
	call	Perl_mg_find	#
	movq	%rax, -32(%rbp)	# tmp76, mg
	cmpq	$0, -32(%rbp)	#, mg
	jne	.L1168	#,
.L1167:
	.loc 1 4929 0 is_stmt 1
	movl	$.LC46, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1168:
	.loc 1 4930 0
	movq	-32(%rbp), %rax	# mg, tmp77
	movq	24(%rax), %rax	# mg_3->mg_obj, tmp78
	movq	%rax, -16(%rbp)	# tmp78, av
	.loc 1 4931 0
	movq	-16(%rbp), %rax	# av, tmp79
	movq	(%rax), %rax	# av_11->sv_any, D.22980
	movq	(%rax), %rax	# _12->xav_array, tmp80
	movq	%rax, -8(%rbp)	# tmp80, svp
	.loc 1 4932 0
	movq	-16(%rbp), %rax	# av, tmp81
	movq	(%rax), %rax	# av_11->sv_any, D.22980
	movq	8(%rax), %rax	# _14->xav_fill, D.22981
	movl	%eax, -36(%rbp)	# D.22981, i
	jmp	.L1169	#
.L1171:
	.loc 1 4933 0
	movl	-36(%rbp), %eax	# i, tmp82
	cltq
	leaq	0(,%rax,8), %rdx	#, D.22982
	movq	-8(%rbp), %rax	# svp, tmp83
	addq	%rdx, %rax	# D.22982, D.22983
	movq	(%rax), %rax	# *_19, D.22984
	cmpq	-56(%rbp), %rax	# sv, D.22984
	jne	.L1170	#,
	.loc 1 4933 0 is_stmt 0 discriminator 1
	movl	-36(%rbp), %eax	# i, tmp84
	cltq
	leaq	0(,%rax,8), %rdx	#, D.22982
	movq	-8(%rbp), %rax	# svp, tmp85
	addq	%rdx, %rax	# D.22982, D.22983
	movq	$0, (%rax)	#, *_23
.L1170:
	.loc 1 4932 0 is_stmt 1
	subl	$1, -36(%rbp)	#, i
.L1169:
	.loc 1 4932 0 is_stmt 0 discriminator 1
	cmpl	$0, -36(%rbp)	#, i
	jns	.L1171	#,
	.loc 1 4934 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE107:
	.size	S_sv_del_backref, .-S_sv_del_backref
	.section	.rodata
	.align 8
.LC47:
	.string	"Can't modify non-existent substring"
.LC48:
	.string	"panic: sv_insert"
	.text
	.globl	Perl_sv_insert
	.type	Perl_sv_insert, @function
Perl_sv_insert:
.LFB108:
	.loc 1 4947 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r15	#
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	movq	%rdi, -72(%rbp)	# bigstr, bigstr
	movq	%rsi, -80(%rbp)	# offset, offset
	movq	%rdx, -88(%rbp)	# len, len
	movq	%rcx, -96(%rbp)	# little, little
	movq	%r8, -104(%rbp)	# littlelen, littlelen
	.loc 1 4956 0
	cmpq	$0, -72(%rbp)	#, bigstr
	jne	.L1173	#,
	.loc 1 4957 0
	movl	$.LC47, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1173:
	.loc 1 4958 0
	movq	-72(%rbp), %rax	# bigstr, tmp165
	movl	12(%rax), %eax	# bigstr_9(D)->sv_flags, D.22986
	andl	$10223616, %eax	#, D.22986
	cmpl	$262144, %eax	#, D.22986
	jne	.L1174	#,
	.loc 1 4958 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# bigstr, tmp166
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	8(%rax), %rax	# MEM[(struct XPV *)_12].xpv_cur, curlen.532
	movq	%rax, -56(%rbp)	# curlen.532, curlen
	jmp	.L1175	#
.L1174:
	.loc 1 4958 0 discriminator 2
	leaq	-56(%rbp), %rcx	#, tmp168
	movq	-72(%rbp), %rax	# bigstr, tmp169
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp168,
	movq	%rax, %rdi	# tmp169,
	call	Perl_sv_pvn_force_flags	#
.L1175:
	.loc 1 4959 0 is_stmt 1
	movq	-72(%rbp), %rax	# bigstr, tmp170
	movl	12(%rax), %eax	# bigstr_9(D)->sv_flags, D.22986
	andl	$1760624639, %eax	#, D.22986
	movl	%eax, %edx	# D.22986, D.22986
	movq	-72(%rbp), %rax	# bigstr, tmp171
	movl	%edx, 12(%rax)	# D.22986, bigstr_9(D)->sv_flags
	movq	-72(%rbp), %rax	# bigstr, tmp172
	movl	12(%rax), %eax	# bigstr_9(D)->sv_flags, D.22986
	orl	$67371008, %eax	#, D.22986
	movl	%eax, %edx	# D.22986, D.22986
	movq	-72(%rbp), %rax	# bigstr, tmp173
	movl	%edx, 12(%rax)	# D.22986, bigstr_9(D)->sv_flags
	.loc 1 4960 0
	movq	-88(%rbp), %rax	# len, tmp174
	movq	-80(%rbp), %rdx	# offset, tmp175
	addq	%rax, %rdx	# tmp174, D.22988
	movq	-56(%rbp), %rax	# curlen, curlen.533
	cmpq	%rax, %rdx	# curlen.533, D.22988
	jbe	.L1176	#,
	.loc 1 4961 0
	movq	-72(%rbp), %rax	# bigstr, tmp176
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	16(%rax), %rax	# MEM[(struct XPV *)_25].xpv_len, D.22988
	movq	-88(%rbp), %rdx	# len, tmp177
	movq	-80(%rbp), %rcx	# offset, tmp178
	addq	%rcx, %rdx	# tmp178, D.22988
	addq	$1, %rdx	#, D.22988
	cmpq	%rdx, %rax	# D.22988, D.22988
	jae	.L1178	#,
	.loc 1 4961 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# len, tmp179
	movq	-80(%rbp), %rdx	# offset, tmp180
	addq	%rdx, %rax	# tmp180, D.22988
	leaq	1(%rax), %rdx	#, D.22988
	movq	-72(%rbp), %rax	# bigstr, tmp181
	movq	%rdx, %rsi	# D.22988,
	movq	%rax, %rdi	# tmp181,
	call	Perl_sv_grow	#
.L1178:
	.loc 1 4962 0 is_stmt 1
	movq	-88(%rbp), %rax	# len, tmp183
	movq	-80(%rbp), %rdx	# offset, tmp184
	addq	%rax, %rdx	# tmp183, D.22988
	movq	-56(%rbp), %rax	# curlen, curlen.535
	subq	%rax, %rdx	# curlen.535, D.22988
	movq	-72(%rbp), %rax	# bigstr, tmp185
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	(%rax), %rcx	# MEM[(struct XPV *)_37].xpv_pv, D.22989
	movq	-56(%rbp), %rax	# curlen, curlen.536
	addq	%rcx, %rax	# D.22989, D.22987
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.22987,
	call	memset	#
	.loc 1 4963 0
	movq	-72(%rbp), %rax	# bigstr, tmp186
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	-88(%rbp), %rdx	# len, tmp187
	movq	-80(%rbp), %rcx	# offset, tmp188
	addq	%rcx, %rdx	# tmp188, D.22988
	movq	%rdx, 8(%rax)	# D.22988, MEM[(struct XPV *)_41].xpv_cur
.L1176:
	.loc 1 4966 0
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.537
	testb	%al, %al	# PL_tainting.537
	je	.L1179	#,
	.loc 1 4966 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.538
	testb	%al, %al	# PL_tainted.538
	je	.L1179	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.539
	testb	%al, %al	# PL_tainting.539
	je	.L1179	#,
	movq	-72(%rbp), %rax	# bigstr, tmp189
	movq	%rax, %rdi	# tmp189,
	call	Perl_sv_taint	#
.L1179:
	.loc 1 4967 0 is_stmt 1
	movq	-104(%rbp), %rax	# littlelen, tmp190
	movl	%eax, %edx	# tmp190, D.22990
	movq	-88(%rbp), %rax	# len, tmp191
	subl	%eax, %edx	# D.22990, D.22990
	movl	%edx, %eax	# D.22990, D.22990
	movl	%eax, %r12d	# D.22990, i
	.loc 1 4968 0
	testl	%r12d, %r12d	# i
	jle	.L1180	#,
	.loc 1 4969 0
	movq	-72(%rbp), %rax	# bigstr, tmp192
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_51].xpv_len, D.22988
	movq	-72(%rbp), %rax	# bigstr, tmp193
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_53].xpv_cur, D.22988
	movslq	%r12d, %rax	# i, D.22988
	addq	%rcx, %rax	# D.22988, D.22988
	addq	$1, %rax	#, D.22988
	cmpq	%rax, %rdx	# D.22988, D.22988
	jae	.L1181	#,
	.loc 1 4969 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# bigstr, tmp194
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_58].xpv_cur, D.22988
	movslq	%r12d, %rax	# i, D.22988
	addq	%rdx, %rax	# D.22988, D.22988
	leaq	1(%rax), %rdx	#, D.22988
	movq	-72(%rbp), %rax	# bigstr, tmp195
	movq	%rdx, %rsi	# D.22988,
	movq	%rax, %rdi	# tmp195,
	call	Perl_sv_grow	#
	jmp	.L1182	#
.L1181:
	.loc 1 4969 0 discriminator 2
	movq	-72(%rbp), %rax	# bigstr, tmp196
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	(%rax), %rax	# MEM[(struct XPV *)_64].xpv_pv, iftmp.540
.L1182:
	.loc 1 4969 0 discriminator 3
	movq	%rax, %r14	# iftmp.540, big
	.loc 1 4970 0 is_stmt 1 discriminator 3
	movq	-88(%rbp), %rax	# len, tmp197
	movq	-80(%rbp), %rdx	# offset, tmp198
	addq	%rdx, %rax	# tmp198, D.22991
	leaq	(%r14,%rax), %r13	#, mid
	.loc 1 4971 0 discriminator 3
	movq	-72(%rbp), %rax	# bigstr, tmp199
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	8(%rax), %rax	# MEM[(struct XPV *)_69].xpv_cur, D.22988
	leaq	(%r14,%rax), %r15	#, bigend
	movq	%r15, %rbx	# bigend, midend
	.loc 1 4972 0 discriminator 3
	movslq	%r12d, %rax	# i, D.22991
	addq	%rax, %r15	# D.22991, bigend
	.loc 1 4973 0 discriminator 3
	movb	$0, (%r15)	#, *bigend_74
	.loc 1 4974 0 discriminator 3
	jmp	.L1183	#
.L1184:
	.loc 1 4975 0
	subq	$1, %r15	#, bigend
	subq	$1, %rbx	#, midend
	movzbl	(%rbx), %eax	# *midend_76, D.22992
	movb	%al, (%r15)	# D.22992, *bigend_75
.L1183:
	.loc 1 4974 0 discriminator 1
	cmpq	%r13, %rbx	# mid, midend
	ja	.L1184	#,
	.loc 1 4976 0
	movq	-80(%rbp), %rax	# offset, tmp200
	leaq	(%r14,%rax), %rcx	#, D.22987
	movq	-104(%rbp), %rdx	# littlelen, tmp201
	movq	-96(%rbp), %rax	# little, tmp202
	movq	%rax, %rsi	# tmp202,
	movq	%rcx, %rdi	# D.22987,
	call	memmove	#
	.loc 1 4977 0
	movq	-72(%rbp), %rax	# bigstr, tmp203
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	-72(%rbp), %rdx	# bigstr, tmp204
	movq	(%rdx), %rdx	# bigstr_9(D)->sv_any, D.22987
	movq	8(%rdx), %rcx	# MEM[(struct XPV *)_81].xpv_cur, D.22988
	movslq	%r12d, %rdx	# i, D.22988
	addq	%rcx, %rdx	# D.22988, D.22988
	movq	%rdx, 8(%rax)	# D.22988, MEM[(struct XPV *)_80].xpv_cur
	.loc 1 4978 0
	movq	-72(%rbp), %rax	# bigstr, tmp205
	movl	12(%rax), %eax	# bigstr_9(D)->sv_flags, D.22986
	andl	$16384, %eax	#, D.22986
	testl	%eax, %eax	# D.22986
	je	.L1185	#,
	.loc 1 4978 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# bigstr, tmp206
	movq	%rax, %rdi	# tmp206,
	call	Perl_mg_set	#
	.loc 1 4979 0 is_stmt 1 discriminator 1
	jmp	.L1172	#
.L1185:
	.loc 1 4979 0 is_stmt 0
	jmp	.L1172	#
.L1180:
	.loc 1 4981 0 is_stmt 1
	testl	%r12d, %r12d	# i
	jne	.L1187	#,
	.loc 1 4982 0
	movq	-72(%rbp), %rax	# bigstr, tmp207
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	(%rax), %rdx	# MEM[(struct XPV *)_87].xpv_pv, D.22989
	movq	-80(%rbp), %rax	# offset, tmp208
	leaq	(%rdx,%rax), %rcx	#, D.22987
	movq	-88(%rbp), %rdx	# len, tmp209
	movq	-96(%rbp), %rax	# little, tmp210
	movq	%rax, %rsi	# tmp210,
	movq	%rcx, %rdi	# D.22987,
	call	memmove	#
	.loc 1 4983 0
	movq	-72(%rbp), %rax	# bigstr, tmp211
	movl	12(%rax), %eax	# bigstr_9(D)->sv_flags, D.22986
	andl	$16384, %eax	#, D.22986
	testl	%eax, %eax	# D.22986
	je	.L1188	#,
	.loc 1 4983 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# bigstr, tmp212
	movq	%rax, %rdi	# tmp212,
	call	Perl_mg_set	#
	.loc 1 4984 0 is_stmt 1 discriminator 1
	jmp	.L1172	#
.L1188:
	.loc 1 4984 0 is_stmt 0
	jmp	.L1172	#
.L1187:
	.loc 1 4987 0 is_stmt 1
	movq	-72(%rbp), %rax	# bigstr, tmp213
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	(%rax), %r14	# MEM[(struct XPV *)_92].xpv_pv, big
	.loc 1 4988 0
	movq	-80(%rbp), %rax	# offset, tmp214
	leaq	(%r14,%rax), %r13	#, mid
	.loc 1 4989 0
	movq	-88(%rbp), %rax	# len, tmp215
	leaq	0(%r13,%rax), %rbx	#, midend
	.loc 1 4990 0
	movq	-72(%rbp), %rax	# bigstr, tmp216
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	8(%rax), %rax	# MEM[(struct XPV *)_96].xpv_cur, D.22988
	leaq	(%r14,%rax), %r15	#, bigend
	.loc 1 4992 0
	cmpq	%r15, %rbx	# bigend, midend
	jbe	.L1189	#,
	.loc 1 4993 0
	movl	$.LC48, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1189:
	.loc 1 4995 0
	movq	%r13, %rdx	# mid, mid.541
	movq	%r14, %rax	# big, big.542
	movq	%rdx, %rcx	# mid.541, D.22993
	subq	%rax, %rcx	# big.542, D.22993
	movq	%r15, %rdx	# bigend, bigend.543
	movq	%rbx, %rax	# midend, midend.544
	subq	%rax, %rdx	# midend.544, D.22993
	movq	%rdx, %rax	# D.22993, D.22993
	cmpq	%rax, %rcx	# D.22993, D.22993
	jle	.L1190	#,
	.loc 1 4996 0
	cmpq	$0, -104(%rbp)	#, littlelen
	je	.L1191	#,
	.loc 1 4997 0
	movq	-104(%rbp), %rdx	# littlelen, tmp217
	movq	-96(%rbp), %rax	# little, tmp218
	movq	%rax, %rsi	# tmp218,
	movq	%r13, %rdi	# mid,
	call	memmove	#
	.loc 1 4998 0
	movq	-104(%rbp), %rax	# littlelen, tmp221
	addq	%r13, %rax	# mid, tmp220
	movq	%rax, %r13	# tmp220, mid
.L1191:
	.loc 1 5000 0
	movq	%r15, %rdx	# bigend, bigend.545
	movq	%rbx, %rax	# midend, midend.546
	subq	%rax, %rdx	# midend.546, D.22993
	movq	%rdx, %rax	# D.22993, D.22993
	movl	%eax, %r12d	# D.22993, i
	.loc 1 5001 0
	testl	%r12d, %r12d	# i
	jle	.L1192	#,
	.loc 1 5002 0
	movslq	%r12d, %rax	# i, D.22988
	movq	%rax, %rdx	# D.22988,
	movq	%rbx, %rsi	# midend,
	movq	%r13, %rdi	# mid,
	call	memmove	#
	.loc 1 5003 0
	movslq	%r12d, %rax	# i, D.22991
	addq	%rax, %r13	# D.22991, mid
.L1192:
	.loc 1 5005 0
	movb	$0, 0(%r13)	#, *mid_3
	.loc 1 5006 0
	movq	-72(%rbp), %rax	# bigstr, tmp222
	movq	(%rax), %rax	# bigstr_9(D)->sv_any, D.22987
	movq	%r13, %rcx	# mid, mid.547
	movq	%r14, %rdx	# big, big.548
	subq	%rdx, %rcx	# big.548, D.22993
	movq	%rcx, %rdx	# D.22993, D.22993
	movq	%rdx, 8(%rax)	# D.22988, MEM[(struct XPV *)_113].xpv_cur
	jmp	.L1193	#
.L1190:
	.loc 1 5009 0
	movq	%r13, %rdx	# mid, mid.549
	movq	%r14, %rax	# big, big.550
	subq	%rax, %rdx	# big.550, D.22993
	movq	%rdx, %rax	# D.22993, D.22993
	movl	%eax, %r12d	# D.22993, i
	testl	%r12d, %r12d	# i
	je	.L1194	#,
	.loc 1 5010 0
	movq	-104(%rbp), %rax	# littlelen, tmp223
	negq	%rax	# D.22991
	addq	%rax, %rbx	# D.22991, midend
	.loc 1 5011 0
	movq	%rbx, %r13	# midend, mid
	.loc 1 5012 0
	movslq	%r12d, %rax	# i, D.22991
	negq	%rax	# D.22991
	leaq	(%rbx,%rax), %rdx	#, D.22989
	movq	-72(%rbp), %rax	# bigstr, tmp224
	movq	%rdx, %rsi	# D.22989,
	movq	%rax, %rdi	# tmp224,
	call	Perl_sv_chop	#
	.loc 1 5013 0
	movslq	%r12d, %rax	# i, D.22991
	addq	%rax, %r14	# D.22991, big
	.loc 1 5014 0
	jmp	.L1195	#
.L1196:
	.loc 1 5015 0
	subq	$1, %rbx	#, midend
	subq	$1, %r14	#, big
	movzbl	(%r14), %eax	# *big_133, D.22992
	movb	%al, (%rbx)	# D.22992, *midend_132
.L1195:
	.loc 1 5014 0 discriminator 1
	movl	%r12d, %eax	# i, i.551
	leal	-1(%rax), %r12d	#, i
	testl	%eax, %eax	# i.551
	jne	.L1196	#,
	.loc 1 5016 0
	cmpq	$0, -104(%rbp)	#, littlelen
	je	.L1193	#,
	.loc 1 5017 0
	movq	-104(%rbp), %rdx	# littlelen, tmp225
	movq	-96(%rbp), %rax	# little, tmp226
	movq	%rax, %rsi	# tmp226,
	movq	%r13, %rdi	# mid,
	call	memmove	#
	jmp	.L1193	#
.L1194:
	.loc 1 5019 0
	cmpq	$0, -104(%rbp)	#, littlelen
	je	.L1198	#,
	.loc 1 5020 0
	movq	-104(%rbp), %rax	# littlelen, tmp227
	negq	%rax	# D.22991
	addq	%rax, %rbx	# D.22991, midend
	.loc 1 5021 0
	movq	-72(%rbp), %rax	# bigstr, tmp228
	movq	%rbx, %rsi	# midend,
	movq	%rax, %rdi	# tmp228,
	call	Perl_sv_chop	#
	.loc 1 5022 0
	movq	-104(%rbp), %rdx	# littlelen, tmp229
	movq	-96(%rbp), %rax	# little, tmp230
	movq	%rax, %rsi	# tmp230,
	movq	%rbx, %rdi	# midend,
	call	memmove	#
	jmp	.L1193	#
.L1198:
	.loc 1 5025 0
	movq	-72(%rbp), %rax	# bigstr, tmp231
	movq	%rbx, %rsi	# midend,
	movq	%rax, %rdi	# tmp231,
	call	Perl_sv_chop	#
.L1193:
	.loc 1 5027 0
	movq	-72(%rbp), %rax	# bigstr, tmp232
	movl	12(%rax), %eax	# bigstr_9(D)->sv_flags, D.22986
	andl	$16384, %eax	#, D.22986
	testl	%eax, %eax	# D.22986
	je	.L1172	#,
	.loc 1 5027 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# bigstr, tmp233
	movq	%rax, %rdi	# tmp233,
	call	Perl_mg_set	#
.L1172:
	.loc 1 5028 0 is_stmt 1
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%r15	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE108:
	.size	Perl_sv_insert, .-Perl_sv_insert
	.section	.rodata
	.align 8
.LC49:
	.string	"Reference miscount in sv_replace()"
	.text
	.globl	Perl_sv_replace
	.type	Perl_sv_replace, @function
Perl_sv_replace:
.LFB109:
	.loc 1 5045 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %r12	# sv, sv
	movq	%rsi, %rbx	# nsv, nsv
	.loc 1 5046 0
	movl	8(%r12), %eax	# sv_1(D)->sv_refcnt, tmp98
	movl	%eax, -20(%rbp)	# tmp98, refcnt
	.loc 1 5047 0
	movl	12(%r12), %eax	# sv_1(D)->sv_flags, D.22996
	andl	$9961472, %eax	#, D.22996
	testl	%eax, %eax	# D.22996
	je	.L1202	#,
	.loc 1 5047 0 is_stmt 0 discriminator 1
	movq	%r12, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L1202:
	.loc 1 5048 0 is_stmt 1
	movl	8(%rbx), %eax	# nsv_5(D)->sv_refcnt, D.22996
	cmpl	$1, %eax	#, D.22996
	je	.L1203	#,
	.loc 1 5048 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.552
	movq	80(%rax), %rax	# PL_curcop.552_7->cop_warnings, D.22997
	testq	%rax, %rax	# D.22997
	je	.L1204	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.553
	movq	80(%rax), %rax	# PL_curcop.553_9->cop_warnings, D.22997
	cmpq	$16, %rax	#, D.22997
	je	.L1204	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.554
	movq	80(%rax), %rax	# PL_curcop.554_11->cop_warnings, D.22997
	cmpq	$32, %rax	#, D.22997
	je	.L1203	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.555
	movq	80(%rax), %rax	# PL_curcop.555_13->cop_warnings, D.22997
	movq	(%rax), %rax	# _14->sv_any, D.22998
	movq	(%rax), %rax	# MEM[(struct XPV *)_15].xpv_pv, D.22999
	addq	$6, %rax	#, D.22999
	movzbl	(%rax), %eax	# *_17, D.23000
	movsbl	%al, %eax	# D.23000, D.23001
	andl	$1, %eax	#, D.23001
	testl	%eax, %eax	# D.23001
	je	.L1203	#,
.L1204:
	.loc 1 5049 0 is_stmt 1
	movl	$.LC49, %esi	#,
	movl	$24, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1203:
	.loc 1 5050 0
	movl	12(%r12), %eax	# sv_1(D)->sv_flags, D.22996
	andl	$57344, %eax	#, D.22996
	testl	%eax, %eax	# D.22996
	je	.L1205	#,
	.loc 1 5051 0
	movl	12(%rbx), %eax	# nsv_5(D)->sv_flags, D.22996
	andl	$57344, %eax	#, D.22996
	testl	%eax, %eax	# D.22996
	je	.L1206	#,
	.loc 1 5052 0
	movq	%rbx, %rdi	# nsv,
	call	Perl_mg_free	#
	jmp	.L1207	#
.L1206:
	.loc 1 5054 0
	movl	$7, %esi	#,
	movq	%rbx, %rdi	# nsv,
	call	Perl_sv_upgrade	#
.L1207:
	.loc 1 5055 0
	movq	(%rbx), %rax	# nsv_5(D)->sv_any, D.22998
	movq	(%r12), %rdx	# sv_1(D)->sv_any, D.22998
	movq	40(%rdx), %rdx	# MEM[(struct XPVMG *)_26].xmg_magic, D.23002
	movq	%rdx, 40(%rax)	# D.23002, MEM[(struct XPVMG *)_25].xmg_magic
	.loc 1 5056 0
	movl	12(%rbx), %eax	# nsv_5(D)->sv_flags, D.22996
	movl	12(%r12), %edx	# sv_1(D)->sv_flags, D.22996
	andl	$57344, %edx	#, D.22996
	orl	%edx, %eax	# D.22996, D.22996
	movl	%eax, 12(%rbx)	# D.22996, nsv_5(D)->sv_flags
	.loc 1 5057 0
	movl	12(%r12), %eax	# sv_1(D)->sv_flags, D.22996
	andb	$31, %ah	#, D.22996
	movl	%eax, 12(%r12)	# D.22996, sv_1(D)->sv_flags
	.loc 1 5058 0
	movq	(%r12), %rax	# sv_1(D)->sv_any, D.22998
	movq	$0, 40(%rax)	#, MEM[(struct XPVMG *)_34].xmg_magic
.L1205:
	.loc 1 5060 0
	movl	$0, 8(%r12)	#, sv_1(D)->sv_refcnt
	.loc 1 5061 0
	movq	%r12, %rdi	# sv,
	call	Perl_sv_clear	#
	.loc 1 5063 0
	movq	(%rbx), %rax	# *nsv_5(D), tmp99
	movq	8(%rbx), %rdx	# *nsv_5(D),
	movq	%rax, (%r12)	# tmp99, *sv_1(D)
	movq	%rdx, 8(%r12)	#, *sv_1(D)
	.loc 1 5064 0
	movl	-20(%rbp), %eax	# refcnt, tmp100
	movl	%eax, 8(%r12)	# tmp100, sv_1(D)->sv_refcnt
	.loc 1 5065 0
	movl	12(%rbx), %eax	# nsv_5(D)->sv_flags, D.22996
	orb	$-1, %al	#, D.22996
	movl	%eax, 12(%rbx)	# D.22996, nsv_5(D)->sv_flags
	.loc 1 5066 0
	movl	$0, 8(%rbx)	#, nsv_5(D)->sv_refcnt
.LBB51:
	.loc 1 5067 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.556
	movq	%rax, (%rbx)	# PL_sv_root.556, nsv_5(D)->sv_any
	movl	$255, 12(%rbx)	#, nsv_5(D)->sv_flags
	movq	%rbx, PL_sv_root(%rip)	# nsv, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.557
	subl	$1, %eax	#, PL_sv_count.558
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.558, PL_sv_count
.LBE51:
	.loc 1 5068 0
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE109:
	.size	Perl_sv_replace, .-Perl_sv_replace
	.section	.rodata
.LC50:
	.string	"panic: POPSTACK\n"
	.align 8
.LC51:
	.string	"DESTROY created new reference to dead object '%s'"
	.text
	.globl	Perl_sv_clear
	.type	Perl_sv_clear, @function
Perl_sv_clear:
.LFB110:
	.loc 1 5086 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$48, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	.loc 1 5091 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$4096, %eax	#, D.23005
	testl	%eax, %eax	# D.23005
	je	.L1209	#,
	.loc 1 5092 0
	movq	PL_defstash(%rip), %rax	# PL_defstash, PL_defstash.559
	testq	%rax, %rax	# PL_defstash.559
	je	.L1210	#,
.LBB52:
	.loc 1 5093 0
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
.L1220:
	.loc 1 5099 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_15].xmg_stash, tmp305
	movq	%rax, -56(%rbp)	# tmp305, stash
	.loc 1 5100 0
	movq	-56(%rbp), %rax	# stash, tmp306
	movl	$65, %esi	#,
	movq	%rax, %rdi	# tmp306,
	call	Perl_gv_handler	#
	movq	%rax, -40(%rbp)	# tmp307, destructor
	.loc 1 5101 0
	cmpq	$0, -40(%rbp)	#, destructor
	je	.L1211	#,
.LBB53:
	.loc 1 5102 0
	movq	%rbx, %rdi	# sv,
	call	Perl_newRV	#
	movq	%rax, -32(%rbp)	# tmp308, tmpref
	.loc 1 5103 0
	movq	-32(%rbp), %rax	# tmpref, tmp309
	movl	12(%rax), %eax	# tmpref_18->sv_flags, D.23005
	orl	$8388608, %eax	#, D.23005
	movl	%eax, %edx	# D.23005, D.23005
	movq	-32(%rbp), %rax	# tmpref, tmp310
	movl	%edx, 12(%rax)	# D.23005, tmpref_18->sv_flags
	.loc 1 5104 0
	call	Perl_push_scope	#
.LBB54:
	.loc 1 5105 0
	movq	PL_curstackinfo(%rip), %rax	# PL_curstackinfo, PL_curstackinfo.560
	movq	40(%rax), %rax	# PL_curstackinfo.560_21->si_next, tmp311
	movq	%rax, -48(%rbp)	# tmp311, next
	cmpq	$0, -48(%rbp)	#, next
	jne	.L1212	#,
	.loc 1 5105 0 is_stmt 0 discriminator 1
	movl	$13, %esi	#,
	movl	$32, %edi	#,
	call	Perl_new_stackinfo	#
	movq	%rax, -48(%rbp)	# tmp312, next
	movq	PL_curstackinfo(%rip), %rdx	# PL_curstackinfo, PL_curstackinfo.561
	movq	-48(%rbp), %rax	# next, tmp313
	movq	%rdx, 32(%rax)	# PL_curstackinfo.561, next_23->si_prev
	movq	PL_curstackinfo(%rip), %rax	# PL_curstackinfo, PL_curstackinfo.562
	movq	-48(%rbp), %rdx	# next, tmp314
	movq	%rdx, 40(%rax)	# tmp314, PL_curstackinfo.562_25->si_next
.L1212:
	.loc 1 5105 0 discriminator 2
	movq	-48(%rbp), %rax	# next, tmp315
	movl	$6, 24(%rax)	#, next_7->si_type
	movq	-48(%rbp), %rax	# next, tmp316
	movl	$-1, 16(%rax)	#, next_7->si_cxix
	movq	-48(%rbp), %rax	# next, tmp317
	movq	(%rax), %rax	# next_7->si_stack, D.23007
	movq	(%rax), %rax	# _26->sv_any, D.23008
	movq	$0, 8(%rax)	#, _27->xav_fill
.LBB55:
	movq	PL_curstack(%rip), %rax	# PL_curstack, PL_curstack.563
	movq	(%rax), %rax	# PL_curstack.563_28->sv_any, D.23008
	movq	%r12, %rcx	# sp, sp.564
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.565
	subq	%rdx, %rcx	# PL_stack_base.566, D.23009
	movq	%rcx, %rdx	# D.23009, D.23009
	sarq	$3, %rdx	#, tmp318
	movq	%rdx, 8(%rax)	# D.23009, _29->xav_fill
	movq	-48(%rbp), %rax	# next, tmp319
	movq	(%rax), %rax	# next_7->si_stack, D.23007
	movq	(%rax), %rax	# _35->sv_any, D.23008
	movq	(%rax), %rax	# _36->xav_array, PL_stack_base.567
	movq	%rax, PL_stack_base(%rip)	# PL_stack_base.567, PL_stack_base
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.568
	movq	-48(%rbp), %rax	# next, tmp320
	movq	(%rax), %rax	# next_7->si_stack, D.23007
	movq	(%rax), %rax	# _39->sv_any, D.23008
	movq	16(%rax), %rax	# _40->xav_max, D.23009
	salq	$3, %rax	#, D.23010
	addq	%rdx, %rax	# PL_stack_base.568, PL_stack_max.569
	movq	%rax, PL_stack_max(%rip)	# PL_stack_max.569, PL_stack_max
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.570
	movq	-48(%rbp), %rax	# next, tmp321
	movq	(%rax), %rax	# next_7->si_stack, D.23007
	movq	(%rax), %rax	# _46->sv_any, D.23008
	movq	8(%rax), %rax	# _47->xav_fill, D.23009
	salq	$3, %rax	#, D.23010
	addq	%rdx, %rax	# PL_stack_base.570, PL_stack_sp.571
	movq	%rax, PL_stack_sp(%rip)	# PL_stack_sp.571, PL_stack_sp
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	movq	-48(%rbp), %rax	# next, tmp322
	movq	(%rax), %rax	# next_7->si_stack, PL_curstack.572
	movq	%rax, PL_curstack(%rip)	# PL_curstack.572, PL_curstack
.LBE55:
	movq	-48(%rbp), %rax	# next, tmp323
	movq	%rax, PL_curstackinfo(%rip)	# tmp323, PL_curstackinfo
.LBE54:
	.loc 1 5106 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.573
	movq	%rax, %rdx	# PL_stack_max.573, PL_stack_max.574
	movq	%r12, %rax	# sp, sp.575
	subq	%rax, %rdx	# sp.575, D.23009
	movq	%rdx, %rax	# D.23009, D.23009
	cmpq	$15, %rax	#, D.23009
	jg	.L1213	#,
	.loc 1 5106 0 is_stmt 0 discriminator 1
	movl	$2, %edx	#,
	movq	%r12, %rsi	# sp,
	movq	%r12, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %r12	#, sp
.L1213:
.LBB56:
	.loc 1 5107 0 is_stmt 1
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.576
	addq	$4, %rax	#, PL_markstack_ptr.577
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.577, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.578
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.579
	cmpq	%rax, %rdx	# PL_markstack_max.579, PL_markstack_ptr.578
	jne	.L1214	#,
	.loc 1 5107 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L1214:
	.loc 1 5107 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.580
	movq	%r12, %rcx	# sp, sp.581
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.582
	subq	%rdx, %rcx	# PL_stack_base.583, D.23009
	movq	%rcx, %rdx	# D.23009, D.23009
	sarq	$3, %rdx	#, tmp324
	movl	%edx, (%rax)	# D.23011, *PL_markstack_ptr.580_64
.LBE56:
	.loc 1 5108 0 is_stmt 1 discriminator 2
	addq	$8, %r12	#, sp
	movq	-32(%rbp), %rax	# tmpref, tmp325
	movq	%rax, (%r12)	# tmp325, *sp_72
	.loc 1 5109 0 discriminator 2
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 5110 0 discriminator 2
	movq	-40(%rbp), %rax	# destructor, tmp326
	movl	$150, %esi	#,
	movq	%rax, %rdi	# tmp326,
	call	Perl_call_sv	#
.LBB57:
	.loc 1 5113 0 discriminator 2
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	movq	PL_curstackinfo(%rip), %rax	# PL_curstackinfo, PL_curstackinfo.584
	movq	32(%rax), %rax	# PL_curstackinfo.584_74->si_prev, tmp327
	movq	%rax, -24(%rbp)	# tmp327, prev
	cmpq	$0, -24(%rbp)	#, prev
	jne	.L1215	#,
	.loc 1 5113 0 is_stmt 0 discriminator 1
	movq	PL_stderrgv(%rip), %rax	# PL_stderrgv, PL_stderrgv.586
	testq	%rax, %rax	# PL_stderrgv.586
	je	.L1216	#,
	movq	PL_stderrgv(%rip), %rax	# PL_stderrgv, PL_stderrgv.587
	movl	12(%rax), %eax	# PL_stderrgv.587_77->sv_flags, D.23005
	movzbl	%al, %eax	# D.23005, D.23005
	cmpl	$13, %eax	#, D.23005
	jne	.L1216	#,
	movq	PL_stderrgv(%rip), %rax	# PL_stderrgv, PL_stderrgv.588
	movq	(%rax), %rax	# PL_stderrgv.588_80->sv_any, D.23013
	movq	56(%rax), %rax	# _81->xgv_gp, D.23014
	movq	16(%rax), %rax	# _82->gp_io, D.23015
	testq	%rax, %rax	# D.23015
	je	.L1216	#,
	movq	PL_stderrgv(%rip), %rax	# PL_stderrgv, PL_stderrgv.589
	movq	(%rax), %rax	# PL_stderrgv.589_84->sv_any, D.23013
	movq	56(%rax), %rax	# _85->xgv_gp, D.23014
	movq	16(%rax), %rax	# _86->gp_io, D.23015
	movq	(%rax), %rax	# _87->sv_any, D.23016
	movq	64(%rax), %rax	# _88->xio_ofp, D.23017
	testq	%rax, %rax	# D.23017
	je	.L1216	#,
	movq	PL_stderrgv(%rip), %rax	# PL_stderrgv, PL_stderrgv.590
	movq	(%rax), %rax	# PL_stderrgv.590_90->sv_any, D.23013
	movq	56(%rax), %rax	# _91->xgv_gp, D.23014
	movq	16(%rax), %rax	# _92->gp_io, D.23015
	movq	(%rax), %rax	# _93->sv_any, D.23016
	movq	64(%rax), %rax	# _94->xio_ofp, iftmp.585
	jmp	.L1217	#
.L1216:
	.loc 1 5113 0 discriminator 2
	call	Perl_PerlIO_stderr	#
.L1217:
	.loc 1 5113 0 discriminator 3
	movl	$.LC50, %esi	#,
	movq	%rax, %rdi	# iftmp.585,
	movl	$0, %eax	#,
	call	PerlIO_printf	#
	movl	$1, %edi	#,
	call	Perl_my_exit	#
.L1215:
.LBB58:
	.loc 1 5113 0 discriminator 2
	movq	PL_curstack(%rip), %rax	# PL_curstack, PL_curstack.591
	movq	(%rax), %rax	# PL_curstack.591_97->sv_any, D.23008
	movq	%r12, %rcx	# sp, sp.592
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.593
	subq	%rdx, %rcx	# PL_stack_base.594, D.23009
	movq	%rcx, %rdx	# D.23009, D.23009
	sarq	$3, %rdx	#, tmp328
	movq	%rdx, 8(%rax)	# D.23009, _98->xav_fill
	movq	-24(%rbp), %rax	# prev, tmp329
	movq	(%rax), %rax	# prev_75->si_stack, D.23007
	movq	(%rax), %rax	# _104->sv_any, D.23008
	movq	(%rax), %rax	# _105->xav_array, PL_stack_base.595
	movq	%rax, PL_stack_base(%rip)	# PL_stack_base.595, PL_stack_base
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.596
	movq	-24(%rbp), %rax	# prev, tmp330
	movq	(%rax), %rax	# prev_75->si_stack, D.23007
	movq	(%rax), %rax	# _108->sv_any, D.23008
	movq	16(%rax), %rax	# _109->xav_max, D.23009
	salq	$3, %rax	#, D.23010
	addq	%rdx, %rax	# PL_stack_base.596, PL_stack_max.597
	movq	%rax, PL_stack_max(%rip)	# PL_stack_max.597, PL_stack_max
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.598
	movq	-24(%rbp), %rax	# prev, tmp331
	movq	(%rax), %rax	# prev_75->si_stack, D.23007
	movq	(%rax), %rax	# _115->sv_any, D.23008
	movq	8(%rax), %rax	# _116->xav_fill, D.23009
	salq	$3, %rax	#, D.23010
	addq	%rdx, %rax	# PL_stack_base.598, PL_stack_sp.599
	movq	%rax, PL_stack_sp(%rip)	# PL_stack_sp.599, PL_stack_sp
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	movq	-24(%rbp), %rax	# prev, tmp332
	movq	(%rax), %rax	# prev_75->si_stack, PL_curstack.600
	movq	%rax, PL_curstack(%rip)	# PL_curstack.600, PL_curstack
.LBE58:
	movq	-24(%rbp), %rax	# prev, tmp333
	movq	%rax, PL_curstackinfo(%rip)	# tmp333, PL_curstackinfo
.LBE57:
	.loc 1 5114 0 is_stmt 1 discriminator 2
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	.loc 1 5115 0 discriminator 2
	call	Perl_pop_scope	#
	.loc 1 5116 0 discriminator 2
	movq	-32(%rbp), %rax	# tmpref, tmp334
	movl	8(%rax), %eax	# tmpref_18->sv_refcnt, D.23005
	cmpl	$1, %eax	#, D.23005
	ja	.L1218	#,
	.loc 1 5118 0
	movl	8(%rbx), %eax	# sv_10(D)->sv_refcnt, D.23005
	subl	$1, %eax	#, D.23005
	movl	%eax, 8(%rbx)	# D.23005, sv_10(D)->sv_refcnt
	.loc 1 5119 0
	movq	-32(%rbp), %rax	# tmpref, tmp335
	movq	(%rax), %rax	# tmpref_18->sv_any, D.23006
	movq	$0, (%rax)	#, MEM[(struct XRV *)_129].xrv_rv
	.loc 1 5120 0
	movq	-32(%rbp), %rax	# tmpref, tmp336
	movl	12(%rax), %eax	# tmpref_18->sv_flags, D.23005
	andl	$-268959745, %eax	#, D.23005
	movl	%eax, %edx	# D.23005, D.23005
	movq	-32(%rbp), %rax	# tmpref, tmp337
	movl	%edx, 12(%rax)	# D.23005, tmpref_18->sv_flags
.L1218:
	.loc 1 5122 0
	movq	-32(%rbp), %rax	# tmpref, tmp338
	movq	%rax, %rdi	# tmp338,
	call	Perl_sv_free	#
.L1211:
.LBE53:
	.loc 1 5124 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$4096, %eax	#, D.23005
	testl	%eax, %eax	# D.23005
	je	.L1219	#,
	.loc 1 5124 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_134].xmg_stash, D.23019
	cmpq	-56(%rbp), %rax	# stash, D.23019
	jne	.L1220	#,
.L1219:
	.loc 1 5127 0 is_stmt 1
	movl	8(%rbx), %eax	# sv_10(D)->sv_refcnt, D.23005
	testl	%eax, %eax	# D.23005
	je	.L1210	#,
	.loc 1 5128 0
	movzbl	PL_in_clean_objs(%rip), %eax	# PL_in_clean_objs, PL_in_clean_objs.601
	testb	%al, %al	# PL_in_clean_objs.601
	je	.L1221	#,
	.loc 1 5130 0
	movq	-56(%rbp), %rax	# stash, tmp339
	movq	(%rax), %rax	# stash_16->sv_any, D.23020
	.loc 1 5129 0
	movq	80(%rax), %rax	# _138->xhv_name, D.23021
	movq	%rax, %rsi	# D.23021,
	movl	$.LC51, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 5132 0
	jmp	.L1208	#
.L1221:
	jmp	.L1208	#
.L1210:
.LBE52:
	.loc 1 5136 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$4096, %eax	#, D.23005
	testl	%eax, %eax	# D.23005
	je	.L1209	#,
	.loc 1 5137 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_142].xmg_stash, D.23019
	movq	%rax, %rdi	# D.23019,
	call	Perl_sv_free	#
	.loc 1 5138 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andb	$239, %ah	#, D.23005
	movl	%eax, 12(%rbx)	# D.23005, sv_10(D)->sv_flags
	.loc 1 5139 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	movzbl	%al, %eax	# D.23005, D.23005
	cmpl	$15, %eax	#, D.23005
	je	.L1209	#,
	.loc 1 5140 0
	movl	PL_sv_objcount(%rip), %eax	# PL_sv_objcount, PL_sv_objcount.602
	subl	$1, %eax	#, PL_sv_objcount.603
	movl	%eax, PL_sv_objcount(%rip)	# PL_sv_objcount.603, PL_sv_objcount
.L1209:
	.loc 1 5143 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	movzbl	%al, %eax	# D.23005, D.23005
	cmpl	$6, %eax	#, D.23005
	jbe	.L1223	#,
	.loc 1 5144 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	40(%rax), %rax	# MEM[(struct XPVMG *)_152].xmg_magic, D.23022
	testq	%rax, %rax	# D.23022
	je	.L1224	#,
	.loc 1 5145 0
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_free	#
.L1224:
	.loc 1 5146 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$1073741824, %eax	#, D.23005
	testl	%eax, %eax	# D.23005
	je	.L1223	#,
	.loc 1 5147 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_156].xmg_stash, D.23019
	movq	%rax, %rdi	# D.23019,
	call	Perl_sv_free	#
.L1223:
	.loc 1 5149 0
	movq	$0, -56(%rbp)	#, stash
	.loc 1 5150 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	movzbl	%al, %eax	# D.23005, D.23005
	subl	$3, %eax	#, tmp340
	cmpl	$12, %eax	#, tmp340
	ja	.L1225	#,
	movl	%eax, %eax	# tmp340, tmp341
	movq	.L1227(,%rax,8), %rax	#, tmp342
	jmp	*%rax	# tmp342
	.section	.rodata
	.align 8
	.align 4
.L1227:
	.quad	.L1226
	.quad	.L1226
	.quad	.L1228
	.quad	.L1228
	.quad	.L1228
	.quad	.L1228
	.quad	.L1230
	.quad	.L1231
	.quad	.L1232
	.quad	.L1233
	.quad	.L1234
	.quad	.L1233
	.quad	.L1235
	.text
.L1235:
	.loc 1 5152 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	56(%rax), %rax	# MEM[(struct XPVIO *)_161].xio_ifp, D.23017
	testq	%rax, %rax	# D.23017
	je	.L1236	#,
	.loc 1 5153 0 discriminator 1
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	56(%rax), %r12	# MEM[(struct XPVIO *)_163].xio_ifp, D.23017
	call	Perl_PerlIO_stdin	#
	.loc 1 5152 0 discriminator 1
	cmpq	%rax, %r12	# D.23017, D.23017
	je	.L1236	#,
	.loc 1 5154 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	56(%rax), %r12	# MEM[(struct XPVIO *)_166].xio_ifp, D.23017
	call	Perl_PerlIO_stdout	#
	.loc 1 5153 0
	cmpq	%rax, %r12	# D.23017, D.23017
	je	.L1236	#,
	.loc 1 5155 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	56(%rax), %r12	# MEM[(struct XPVIO *)_169].xio_ifp, D.23017
	call	Perl_PerlIO_stderr	#
	.loc 1 5154 0
	cmpq	%rax, %r12	# D.23017, D.23017
	je	.L1236	#,
	.loc 1 5157 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_io_close	#
.L1236:
	.loc 1 5159 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	72(%rax), %rax	# MEM[(struct XPVIO *)_172].xio_dirpu.xiou_dirp, D.23023
	testq	%rax, %rax	# D.23023
	je	.L1237	#,
	.loc 1 5159 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movzbl	163(%rax), %eax	# MEM[(struct XPVIO *)_174].xio_flags, D.23024
	movsbl	%al, %eax	# D.23024, D.23011
	andl	$64, %eax	#, D.23011
	testl	%eax, %eax	# D.23011
	jne	.L1237	#,
	.loc 1 5160 0 is_stmt 1
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	72(%rax), %rax	# MEM[(struct XPVIO *)_178].xio_dirpu.xiou_dirp, D.23023
	movq	%rax, %rdi	# D.23023,
	call	closedir	#
.L1237:
	.loc 1 5161 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	$0, 72(%rax)	#, MEM[(struct XPVIO *)_180].xio_dirpu.xiou_dirp
	.loc 1 5162 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	112(%rax), %rax	# MEM[(struct XPVIO *)_181].xio_top_name, D.23021
	movq	%rax, %rdi	# D.23021,
	call	Perl_safesysfree	#
	.loc 1 5163 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	128(%rax), %rax	# MEM[(struct XPVIO *)_183].xio_fmt_name, D.23021
	movq	%rax, %rdi	# D.23021,
	call	Perl_safesysfree	#
	.loc 1 5164 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	144(%rax), %rax	# MEM[(struct XPVIO *)_185].xio_bottom_name, D.23021
	movq	%rax, %rdi	# D.23021,
	call	Perl_safesysfree	#
	.loc 1 5167 0
	jmp	.L1228	#
.L1233:
	.loc 1 5170 0
	movq	%rbx, %rdi	# sv,
	call	Perl_cv_undef	#
	.loc 1 5171 0
	jmp	.L1228	#
.L1232:
	.loc 1 5173 0
	movq	%rbx, %rdi	# sv,
	call	Perl_hv_undef	#
	.loc 1 5174 0
	jmp	.L1225	#
.L1231:
	.loc 1 5176 0
	movq	%rbx, %rdi	# sv,
	call	Perl_av_undef	#
	.loc 1 5177 0
	jmp	.L1225	#
.L1230:
	.loc 1 5179 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movzbl	80(%rax), %eax	# MEM[(struct XPVLV *)_187].xlv_type, D.23024
	cmpb	$84, %al	#, D.23024
	jne	.L1238	#,
	.loc 1 5180 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_189].xlv_targ, D.23025
	movq	8(%rax), %rax	# MEM[(struct HE *)_190].hent_hek, D.23026
	addq	$8, %rax	#, D.23027
	movq	(%rax), %rax	# MEM[(struct SV * *)_192], D.23025
	movq	%rax, %rdi	# D.23025,
	call	Perl_sv_free	#
	.loc 1 5181 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_194].xlv_targ, D.23025
	movq	PL_hv_fetch_ent_mh(%rip), %rdx	# PL_hv_fetch_ent_mh, PL_hv_fetch_ent_mh.604
	movq	%rdx, (%rax)	# PL_hv_fetch_ent_mh.604, MEM[(struct HE *)_195].hent_next
	.loc 1 5182 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_197].xlv_targ, PL_hv_fetch_ent_mh.605
	movq	%rax, PL_hv_fetch_ent_mh(%rip)	# PL_hv_fetch_ent_mh.605, PL_hv_fetch_ent_mh
	jmp	.L1239	#
.L1238:
	.loc 1 5184 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movzbl	80(%rax), %eax	# MEM[(struct XPVLV *)_199].xlv_type, D.23024
	cmpb	$116, %al	#, D.23024
	je	.L1239	#,
	.loc 1 5185 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_201].xlv_targ, D.23025
	movq	%rax, %rdi	# D.23025,
	call	Perl_sv_free	#
	.loc 1 5186 0
	jmp	.L1228	#
.L1239:
	jmp	.L1228	#
.L1234:
	.loc 1 5188 0
	movq	%rbx, %rdi	# sv,
	call	Perl_gp_free	#
	.loc 1 5189 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	64(%rax), %rax	# MEM[(struct XPVGV *)_203].xgv_name, D.23021
	movq	%rax, %rdi	# D.23021,
	call	Perl_safesysfree	#
	.loc 1 5194 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_205].xgv_stash, tmp343
	movq	%rax, -56(%rbp)	# tmp343, stash
.L1228:
	.loc 1 5200 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$2097152, %eax	#, D.23005
	testl	%eax, %eax	# D.23005
	je	.L1226	#,
	.loc 1 5200 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23011
	je	.L1226	#,
	.loc 1 5200 0
	nop
.L1226:
	.loc 1 5204 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$524288, %eax	#, D.23005
	testl	%eax, %eax	# D.23005
	je	.L1241	#,
	.loc 1 5205 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$-2146959360, %eax	#, D.23005
	cmpl	$-2146959360, %eax	#, D.23005
	jne	.L1242	#,
	.loc 1 5206 0
	movq	%rbx, %rdi	# sv,
	call	S_sv_del_backref	#
	jmp	.L1244	#
.L1242:
	.loc 1 5208 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	(%rax), %rax	# MEM[(struct XRV *)_216].xrv_rv, D.23025
	movq	%rax, %rdi	# D.23025,
	call	Perl_sv_free	#
	.loc 1 5218 0
	jmp	.L1267	#
.L1241:
	.loc 1 5210 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	(%rax), %rax	# MEM[(struct XPV *)_218].xpv_pv, D.23021
	testq	%rax, %rax	# D.23021
	je	.L1245	#,
	.loc 1 5210 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	16(%rax), %rax	# MEM[(struct XPV *)_220].xpv_len, D.23010
	testq	%rax, %rax	# D.23010
	je	.L1245	#,
	.loc 1 5211 0 is_stmt 1
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	(%rax), %rax	# MEM[(struct XPV *)_222].xpv_pv, D.23021
	movq	%rax, %rdi	# D.23021,
	call	Perl_safesysfree	#
	jmp	.L1244	#
.L1245:
	.loc 1 5212 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	(%rax), %rax	# MEM[(struct XPV *)_224].xpv_pv, D.23021
	testq	%rax, %rax	# D.23021
	je	.L1244	#,
	.loc 1 5212 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$8388608, %eax	#, D.23005
	testl	%eax, %eax	# D.23005
	je	.L1244	#,
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$1048576, %eax	#, D.23005
	testl	%eax, %eax	# D.23005
	je	.L1244	#,
	.loc 1 5215 0 is_stmt 1
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_230].xuv_uv, D.23010
	.loc 1 5213 0
	movl	%eax, %edx	# D.23010, D.23005
	.loc 1 5214 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$536870912, %eax	#, D.23005
	.loc 1 5213 0
	testl	%eax, %eax	# D.23005
	je	.L1246	#,
	.loc 1 5214 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	8(%rax), %rax	# MEM[(struct XPV *)_235].xpv_cur, D.23010
	.loc 1 5213 0
	negl	%eax	# iftmp.607
	jmp	.L1247	#
.L1246:
	.loc 1 5214 0 discriminator 1
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	8(%rax), %rax	# MEM[(struct XPV *)_239].xpv_cur, D.23010
.L1247:
	.loc 1 5213 0 discriminator 2
	movq	(%rbx), %rcx	# sv_10(D)->sv_any, D.23006
	movq	(%rcx), %rcx	# MEM[(struct XPV *)_242].xpv_pv, D.23021
	movl	%eax, %esi	# iftmp.607,
	movq	%rcx, %rdi	# D.23021,
	call	Perl_unsharepvn	#
	.loc 1 5216 0 discriminator 2
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$-1048577, %eax	#, D.23005
	movl	%eax, 12(%rbx)	# D.23005, sv_10(D)->sv_flags
	.loc 1 5218 0 discriminator 2
	jmp	.L1267	#
.L1244:
.L1267:
	.loc 1 5218 0 is_stmt 0
	nop
.L1225:
	.loc 1 5227 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	movzbl	%al, %eax	# D.23005, D.23005
	cmpl	$15, %eax	#, D.23005
	ja	.L1248	#,
	movl	%eax, %eax	# D.23005, tmp344
	movq	.L1250(,%rax,8), %rax	#, tmp345
	jmp	*%rax	# tmp345
	.section	.rodata
	.align 8
	.align 4
.L1250:
	.quad	.L1268
	.quad	.L1251
	.quad	.L1252
	.quad	.L1253
	.quad	.L1254
	.quad	.L1255
	.quad	.L1256
	.quad	.L1257
	.quad	.L1258
	.quad	.L1259
	.quad	.L1260
	.quad	.L1261
	.quad	.L1262
	.quad	.L1263
	.quad	.L1264
	.quad	.L1265
	.text
.L1251:
	.loc 1 5231 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xiv	#
	.loc 1 5232 0
	jmp	.L1248	#
.L1252:
	.loc 1 5234 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xnv	#
	.loc 1 5235 0
	jmp	.L1248	#
.L1253:
	.loc 1 5237 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xrv	#
	.loc 1 5238 0
	jmp	.L1248	#
.L1254:
	.loc 1 5240 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xpv	#
	.loc 1 5241 0
	jmp	.L1248	#
.L1255:
	.loc 1 5243 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xpviv	#
	.loc 1 5244 0
	jmp	.L1248	#
.L1256:
	.loc 1 5246 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xpvnv	#
	.loc 1 5247 0
	jmp	.L1248	#
.L1257:
	.loc 1 5249 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xpvmg	#
	.loc 1 5250 0
	jmp	.L1248	#
.L1259:
	.loc 1 5252 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xpvlv	#
	.loc 1 5253 0
	jmp	.L1248	#
.L1260:
	.loc 1 5255 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xpvav	#
	.loc 1 5256 0
	jmp	.L1248	#
.L1261:
	.loc 1 5258 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xpvhv	#
	.loc 1 5259 0
	jmp	.L1248	#
.L1262:
	.loc 1 5261 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xpvcv	#
	.loc 1 5262 0
	jmp	.L1248	#
.L1263:
	.loc 1 5264 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	Perl_safesysfree	#
	.loc 1 5266 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$4194304, %eax	#, D.23005
	movl	%eax, 12(%rbx)	# D.23005, sv_10(D)->sv_flags
	.loc 1 5267 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	orb	$-1, %al	#, D.23005
	movl	%eax, 12(%rbx)	# D.23005, sv_10(D)->sv_flags
	.loc 1 5269 0
	cmpq	$0, -56(%rbp)	#, stash
	je	.L1266	#,
	.loc 1 5270 0
	movq	-56(%rbp), %rax	# stash, tmp346
	movq	%rax, %rdi	# tmp346,
	call	Perl_sv_free	#
	.loc 1 5271 0
	jmp	.L1208	#
.L1266:
	jmp	.L1208	#
.L1258:
	.loc 1 5273 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	S_del_xpvbm	#
	.loc 1 5274 0
	jmp	.L1248	#
.L1264:
	.loc 1 5276 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	Perl_safesysfree	#
	.loc 1 5277 0
	jmp	.L1248	#
.L1265:
	.loc 1 5279 0
	movq	(%rbx), %rax	# sv_10(D)->sv_any, D.23006
	movq	%rax, %rdi	# D.23006,
	call	Perl_safesysfree	#
	.loc 1 5280 0
	jmp	.L1248	#
.L1268:
	.loc 1 5229 0
	nop
.L1248:
	.loc 1 5282 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	andl	$4194304, %eax	#, D.23005
	movl	%eax, 12(%rbx)	# D.23005, sv_10(D)->sv_flags
	.loc 1 5283 0
	movl	12(%rbx), %eax	# sv_10(D)->sv_flags, D.23005
	orb	$-1, %al	#, D.23005
	movl	%eax, 12(%rbx)	# D.23005, sv_10(D)->sv_flags
.L1208:
	.loc 1 5284 0
	addq	$48, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE110:
	.size	Perl_sv_clear, .-Perl_sv_clear
	.globl	Perl_sv_newref
	.type	Perl_sv_newref, @function
Perl_sv_newref:
.LFB111:
	.loc 1 5297 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# sv, sv
	.loc 1 5298 0
	cmpq	$0, -8(%rbp)	#, sv
	je	.L1270	#,
	.loc 1 5299 0
	movq	-8(%rbp), %rax	# sv, tmp63
	movl	8(%rax), %eax	# sv_1(D)->sv_refcnt, D.23030
	leal	1(%rax), %edx	#, D.23030
	movq	-8(%rbp), %rax	# sv, tmp64
	movl	%edx, 8(%rax)	# D.23030, sv_1(D)->sv_refcnt
.L1270:
	.loc 1 5300 0
	movq	-8(%rbp), %rax	# sv, D.23031
	.loc 1 5301 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE111:
	.size	Perl_sv_newref, .-Perl_sv_newref
	.section	.rodata
	.align 8
.LC52:
	.string	"Attempt to free unreferenced scalar: SV 0x%lx"
	.text
	.globl	Perl_sv_free
	.type	Perl_sv_free, @function
Perl_sv_free:
.LFB112:
	.loc 1 5316 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	.loc 1 5319 0
	cmpq	$0, -24(%rbp)	#, sv
	jne	.L1273	#,
	.loc 1 5320 0
	jmp	.L1272	#
.L1273:
	.loc 1 5321 0
	movq	-24(%rbp), %rax	# sv, tmp91
	movl	8(%rax), %eax	# sv_1(D)->sv_refcnt, D.23032
	testl	%eax, %eax	# D.23032
	jne	.L1275	#,
	.loc 1 5322 0
	movq	-24(%rbp), %rax	# sv, tmp92
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23032
	andl	$4194304, %eax	#, D.23032
	testl	%eax, %eax	# D.23032
	je	.L1276	#,
	.loc 1 5325 0
	jmp	.L1272	#
.L1276:
	.loc 1 5326 0
	movzbl	PL_in_clean_all(%rip), %eax	# PL_in_clean_all, PL_in_clean_all.608
	testb	%al, %al	# PL_in_clean_all.608
	je	.L1277	#,
	.loc 1 5327 0
	jmp	.L1272	#
.L1277:
	.loc 1 5328 0
	movq	-24(%rbp), %rax	# sv, tmp93
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23032
	andl	$8388608, %eax	#, D.23032
	testl	%eax, %eax	# D.23032
	je	.L1278	#,
	.loc 1 5328 0 is_stmt 0 discriminator 1
	cmpq	$PL_sv_undef, -24(%rbp)	#, sv
	je	.L1279	#,
	cmpq	$PL_sv_yes, -24(%rbp)	#, sv
	je	.L1279	#,
	cmpq	$PL_sv_no, -24(%rbp)	#, sv
	je	.L1279	#,
	cmpq	$PL_sv_placeholder, -24(%rbp)	#, sv
	jne	.L1278	#,
.L1279:
	.loc 1 5330 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp94
	movl	$2147483647, 8(%rax)	#, sv_1(D)->sv_refcnt
	.loc 1 5331 0
	jmp	.L1272	#
.L1278:
	.loc 1 5333 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.609
	movq	80(%rax), %rax	# PL_curcop.609_8->cop_warnings, D.23033
	testq	%rax, %rax	# D.23033
	je	.L1280	#,
	.loc 1 5333 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.610
	movq	80(%rax), %rax	# PL_curcop.610_10->cop_warnings, D.23033
	cmpq	$16, %rax	#, D.23033
	je	.L1280	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.611
	movq	80(%rax), %rax	# PL_curcop.611_12->cop_warnings, D.23033
	cmpq	$32, %rax	#, D.23033
	je	.L1281	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.612
	movq	80(%rax), %rax	# PL_curcop.612_14->cop_warnings, D.23033
	movq	(%rax), %rax	# _15->sv_any, D.23034
	movq	(%rax), %rax	# MEM[(struct XPV *)_16].xpv_pv, D.23035
	addq	$6, %rax	#, D.23035
	movzbl	(%rax), %eax	# *_18, D.23036
	movsbl	%al, %eax	# D.23036, D.23037
	andl	$1, %eax	#, D.23037
	testl	%eax, %eax	# D.23037
	je	.L1281	#,
.L1280:
	.loc 1 5334 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, sv.613
	movq	%rax, %rdx	# sv.613,
	movl	$.LC52, %esi	#,
	movl	$24, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 5337 0
	jmp	.L1272	#
.L1281:
	jmp	.L1272	#
.L1275:
	.loc 1 5339 0
	movq	-24(%rbp), %rax	# sv, tmp95
	movl	8(%rax), %eax	# sv_1(D)->sv_refcnt, D.23032
	leal	-1(%rax), %edx	#, D.23032
	movq	-24(%rbp), %rax	# sv, tmp96
	movl	%edx, 8(%rax)	# D.23032, sv_1(D)->sv_refcnt
	movq	-24(%rbp), %rax	# sv, tmp97
	movl	8(%rax), %eax	# sv_1(D)->sv_refcnt, D.23032
	testl	%eax, %eax	# D.23032
	sete	%al	#, D.23038
	movzbl	%al, %eax	# D.23038, tmp98
	movl	%eax, -4(%rbp)	# tmp98, refcount_is_zero
	.loc 1 5340 0
	cmpl	$0, -4(%rbp)	#, refcount_is_zero
	jne	.L1282	#,
	.loc 1 5341 0
	jmp	.L1272	#
.L1282:
	.loc 1 5351 0
	movq	-24(%rbp), %rax	# sv, tmp99
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23032
	andl	$8388608, %eax	#, D.23032
	testl	%eax, %eax	# D.23032
	je	.L1283	#,
	.loc 1 5351 0 is_stmt 0 discriminator 1
	cmpq	$PL_sv_undef, -24(%rbp)	#, sv
	je	.L1284	#,
	cmpq	$PL_sv_yes, -24(%rbp)	#, sv
	je	.L1284	#,
	cmpq	$PL_sv_no, -24(%rbp)	#, sv
	je	.L1284	#,
	cmpq	$PL_sv_placeholder, -24(%rbp)	#, sv
	jne	.L1283	#,
.L1284:
	.loc 1 5353 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp100
	movl	$2147483647, 8(%rax)	#, sv_1(D)->sv_refcnt
	.loc 1 5354 0
	jmp	.L1272	#
.L1283:
	.loc 1 5356 0
	movq	-24(%rbp), %rax	# sv, tmp101
	movq	%rax, %rdi	# tmp101,
	call	Perl_sv_clear	#
	.loc 1 5357 0
	movq	-24(%rbp), %rax	# sv, tmp102
	movl	8(%rax), %eax	# sv_1(D)->sv_refcnt, D.23032
	testl	%eax, %eax	# D.23032
	jne	.L1272	#,
.LBB59:
	.loc 1 5358 0
	movq	PL_sv_root(%rip), %rdx	# PL_sv_root, PL_sv_root.614
	movq	-24(%rbp), %rax	# sv, tmp103
	movq	%rdx, (%rax)	# PL_sv_root.614, sv_1(D)->sv_any
	movq	-24(%rbp), %rax	# sv, tmp104
	movl	$255, 12(%rax)	#, sv_1(D)->sv_flags
	movq	-24(%rbp), %rax	# sv, tmp105
	movq	%rax, PL_sv_root(%rip)	# tmp105, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.615
	subl	$1, %eax	#, PL_sv_count.616
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.616, PL_sv_count
.L1272:
.LBE59:
	.loc 1 5359 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE112:
	.size	Perl_sv_free, .-Perl_sv_free
	.globl	Perl_sv_len
	.type	Perl_sv_len, @function
Perl_sv_len:
.LFB113:
	.loc 1 5372 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, %rax	# sv, sv
	.loc 1 5375 0
	testq	%rax, %rax	# sv
	jne	.L1286	#,
	.loc 1 5376 0
	movl	$0, %eax	#, D.23041
	jmp	.L1291	#
.L1286:
	.loc 1 5378 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23042
	andl	$8192, %edx	#, D.23042
	testl	%edx, %edx	# D.23042
	je	.L1288	#,
	.loc 1 5379 0
	movq	%rax, %rdi	# sv,
	call	Perl_mg_length	#
	movl	%eax, %eax	# D.23042, len.617
	movq	%rax, -8(%rbp)	# len.617, len
	jmp	.L1289	#
.L1288:
	.loc 1 5381 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23042
	andl	$262144, %edx	#, D.23042
	testl	%edx, %edx	# D.23042
	je	.L1290	#,
	.loc 1 5381 0 is_stmt 0 discriminator 1
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23043
	movq	8(%rax), %rax	# MEM[(struct XPV *)_10].xpv_cur, len.618
	movq	%rax, -8(%rbp)	# len.618, len
	jmp	.L1289	#
.L1290:
	.loc 1 5381 0 discriminator 2
	leaq	-8(%rbp), %rcx	#, tmp71
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp71,
	movq	%rax, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
.L1289:
	.loc 1 5382 0 is_stmt 1
	movq	-8(%rbp), %rax	# len, D.23041
.L1291:
	.loc 1 5383 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE113:
	.size	Perl_sv_len, .-Perl_sv_len
	.globl	Perl_sv_len_utf8
	.type	Perl_sv_len_utf8, @function
Perl_sv_len_utf8:
.LFB114:
	.loc 1 5403 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	.loc 1 5404 0
	testq	%rbx, %rbx	# sv
	jne	.L1293	#,
	.loc 1 5405 0
	movl	$0, %eax	#, D.23044
	jmp	.L1294	#
.L1293:
	.loc 1 5407 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23045
	andl	$8192, %eax	#, D.23045
	testl	%eax, %eax	# D.23045
	je	.L1295	#,
	.loc 1 5408 0
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_length	#
	movl	%eax, %eax	# D.23045, D.23044
	jmp	.L1294	#
.L1295:
.LBB60:
	.loc 1 5412 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23045
	andl	$262144, %eax	#, D.23045
	testl	%eax, %eax	# D.23045
	je	.L1296	#,
	.loc 1 5412 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23046
	movq	8(%rax), %rax	# MEM[(struct XPV *)_14].xpv_cur, len.620
	movq	%rax, -48(%rbp)	# len.620, len
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23046
	movq	(%rax), %rax	# MEM[(struct XPV *)_16].xpv_pv, iftmp.619
	jmp	.L1297	#
.L1296:
	.loc 1 5412 0 discriminator 2
	leaq	-48(%rbp), %rax	#, tmp83
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp83,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
.L1297:
	.loc 1 5412 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.619, s
	.loc 1 5413 0 is_stmt 1 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23045
	andl	$57344, %eax	#, D.23045
	testl	%eax, %eax	# D.23045
	je	.L1298	#,
	.loc 1 5413 0 is_stmt 0 discriminator 1
	movl	$119, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_find	#
	jmp	.L1299	#
.L1298:
	.loc 1 5413 0 discriminator 2
	movl	$0, %eax	#, iftmp.621
.L1299:
	.loc 1 5413 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.621, mg
	.loc 1 5415 0 is_stmt 1 discriminator 3
	cmpq	$0, -32(%rbp)	#, mg
	je	.L1300	#,
	.loc 1 5415 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# mg, tmp84
	movl	40(%rax), %eax	# mg_24->mg_len, D.23047
	cmpl	$-1, %eax	#, D.23047
	je	.L1300	#,
	movq	-32(%rbp), %rax	# mg, tmp85
	movl	40(%rax), %eax	# mg_24->mg_len, D.23047
	testl	%eax, %eax	# D.23047
	jg	.L1301	#,
	movq	-48(%rbp), %rax	# len, len.622
	testq	%rax, %rax	# len.622
	jne	.L1300	#,
.L1301:
	.loc 1 5416 0 is_stmt 1
	movq	-32(%rbp), %rax	# mg, tmp86
	movl	40(%rax), %eax	# mg_24->mg_len, D.23047
	cltq
	movq	%rax, -40(%rbp)	# tmp87, ulen
	jmp	.L1302	#
.L1300:
	.loc 1 5422 0
	movq	-48(%rbp), %rdx	# len, len.623
	movq	-24(%rbp), %rax	# s, tmp88
	addq	%rax, %rdx	# tmp88, D.23048
	movq	-24(%rbp), %rax	# s, tmp89
	movq	%rdx, %rsi	# D.23048,
	movq	%rax, %rdi	# tmp89,
	call	Perl_utf8_length	#
	movq	%rax, -40(%rbp)	# tmp90, ulen
	.loc 1 5423 0
	cmpq	$0, -32(%rbp)	#, mg
	jne	.L1303	#,
	.loc 1 5423 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23045
	andl	$8388608, %eax	#, D.23045
	testl	%eax, %eax	# D.23045
	jne	.L1303	#,
	.loc 1 5424 0 is_stmt 1
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$119, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_magic	#
	.loc 1 5425 0
	movl	$119, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_find	#
	movq	%rax, -32(%rbp)	# tmp91, mg
.L1303:
	.loc 1 5428 0
	cmpq	$0, -32(%rbp)	#, mg
	je	.L1302	#,
	.loc 1 5429 0
	movq	-40(%rbp), %rax	# ulen, tmp92
	movl	%eax, %edx	# tmp92, D.23047
	movq	-32(%rbp), %rax	# mg, tmp93
	movl	%edx, 40(%rax)	# D.23047, mg_2->mg_len
.L1302:
	.loc 1 5431 0
	movq	-40(%rbp), %rax	# ulen, D.23044
.L1294:
.LBE60:
	.loc 1 5433 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE114:
	.size	Perl_sv_len_utf8, .-Perl_sv_len_utf8
	.type	S_utf8_mg_pos_init, @function
S_utf8_mg_pos_init:
.LFB115:
	.loc 1 5447 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	movq	%rsi, -32(%rbp)	# mgp, mgp
	movq	%rdx, -40(%rbp)	# cachep, cachep
	movl	%ecx, -44(%rbp)	# i, i
	movq	%r8, -56(%rbp)	# offsetp, offsetp
	movq	%r9, -64(%rbp)	# s, s
	.loc 1 5448 0
	movb	$0, -1(%rbp)	#, found
	.loc 1 5450 0
	movq	-24(%rbp), %rax	# sv, tmp90
	movl	12(%rax), %eax	# sv_3(D)->sv_flags, D.23049
	andl	$57344, %eax	#, D.23049
	testl	%eax, %eax	# D.23049
	je	.L1305	#,
	.loc 1 5450 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp91
	movl	12(%rax), %eax	# sv_3(D)->sv_flags, D.23049
	andl	$8388608, %eax	#, D.23049
	testl	%eax, %eax	# D.23049
	jne	.L1305	#,
	.loc 1 5451 0 is_stmt 1
	movq	-32(%rbp), %rax	# mgp, tmp92
	movq	(%rax), %rax	# *mgp_8(D), D.23050
	testq	%rax, %rax	# D.23050
	jne	.L1306	#,
	.loc 1 5452 0
	movq	-24(%rbp), %rax	# sv, tmp93
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movl	$PL_vtbl_utf8, %ecx	#,
	movl	$119, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp93,
	call	Perl_sv_magicext	#
	movq	-32(%rbp), %rdx	# mgp, tmp94
	movq	%rax, (%rdx)	# D.23050, *mgp_8(D)
.L1306:
	.loc 1 5455 0
	movq	-32(%rbp), %rax	# mgp, tmp95
	movq	(%rax), %rax	# *mgp_8(D), D.23050
	movq	32(%rax), %rax	# _11->mg_ptr, D.23051
	testq	%rax, %rax	# D.23051
	je	.L1307	#,
	.loc 1 5456 0
	movq	-32(%rbp), %rax	# mgp, tmp96
	movq	(%rax), %rax	# *mgp_8(D), D.23050
	movq	32(%rax), %rdx	# _13->mg_ptr, D.23051
	movq	-40(%rbp), %rax	# cachep, tmp97
	movq	%rdx, (%rax)	# D.23051, *cachep_15(D)
	jmp	.L1308	#
.L1307:
	.loc 1 5458 0
	movl	$32, %edi	#,
	call	Perl_safesysmalloc	#
	movq	-40(%rbp), %rdx	# cachep, tmp98
	movq	%rax, (%rdx)	# D.23052, *cachep_15(D)
	movq	-40(%rbp), %rax	# cachep, tmp99
	movq	(%rax), %rax	# *cachep_15(D), D.23053
	movl	$32, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.23053,
	call	memset	#
	.loc 1 5459 0
	movq	-32(%rbp), %rax	# mgp, tmp100
	movq	(%rax), %rax	# *mgp_8(D), D.23050
	movq	-40(%rbp), %rdx	# cachep, tmp101
	movq	(%rdx), %rdx	# *cachep_15(D), D.23053
	movq	%rdx, 32(%rax)	# D.23053, _18->mg_ptr
.L1308:
	.loc 1 5463 0
	movq	-40(%rbp), %rax	# cachep, tmp102
	movq	(%rax), %rax	# *cachep_15(D), D.23053
	movl	-44(%rbp), %edx	# i, tmp103
	movslq	%edx, %rdx	# tmp103, D.23054
	salq	$3, %rdx	#, D.23054
	addq	%rax, %rdx	# D.23053, D.23053
	movq	-56(%rbp), %rax	# offsetp, tmp104
	movl	(%rax), %eax	# *offsetp_25(D), D.23055
	cltq
	movq	%rax, (%rdx)	# D.23054, *_24
	.loc 1 5464 0
	movq	-40(%rbp), %rax	# cachep, tmp105
	movq	(%rax), %rax	# *cachep_15(D), D.23053
	movl	-44(%rbp), %edx	# i, tmp106
	movslq	%edx, %rdx	# tmp106, D.23056
	addq	$1, %rdx	#, D.23056
	salq	$3, %rdx	#, D.23056
	addq	%rax, %rdx	# D.23053, D.23053
	movq	-64(%rbp), %rcx	# s, s.624
	movq	16(%rbp), %rax	# start, start.625
	subq	%rax, %rcx	# start.625, D.23057
	movq	%rcx, %rax	# D.23057, D.23057
	movq	%rax, (%rdx)	# D.23054, *_32
	.loc 1 5465 0
	movb	$1, -1(%rbp)	#, found
.L1305:
	.loc 1 5468 0
	movzbl	-1(%rbp), %eax	# found, D.23058
	.loc 1 5469 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE115:
	.size	S_utf8_mg_pos_init, .-S_utf8_mg_pos_init
	.type	S_utf8_mg_pos, @function
S_utf8_mg_pos:
.LFB116:
	.loc 1 5480 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$96, %rsp	#,
	movq	%rdi, -56(%rbp)	# sv, sv
	movq	%rsi, -64(%rbp)	# mgp, mgp
	movq	%rdx, -72(%rbp)	# cachep, cachep
	movl	%ecx, -76(%rbp)	# i, i
	movq	%r8, -88(%rbp)	# offsetp, offsetp
	movl	%r9d, -80(%rbp)	# uoff, uoff
	.loc 1 5481 0
	movb	$0, -33(%rbp)	#, found
	.loc 1 5483 0
	movq	-56(%rbp), %rax	# sv, tmp156
	movl	12(%rax), %eax	# sv_14(D)->sv_flags, D.23059
	andl	$57344, %eax	#, D.23059
	testl	%eax, %eax	# D.23059
	je	.L1311	#,
	.loc 1 5483 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp157
	movl	12(%rax), %eax	# sv_14(D)->sv_flags, D.23059
	andl	$8388608, %eax	#, D.23059
	testl	%eax, %eax	# D.23059
	jne	.L1311	#,
	.loc 1 5484 0 is_stmt 1
	movq	-64(%rbp), %rax	# mgp, tmp158
	movq	(%rax), %rax	# *mgp_19(D), D.23060
	testq	%rax, %rax	# D.23060
	jne	.L1312	#,
	.loc 1 5485 0
	movq	-56(%rbp), %rax	# sv, tmp159
	movl	$119, %esi	#,
	movq	%rax, %rdi	# tmp159,
	call	Perl_mg_find	#
	movq	-64(%rbp), %rdx	# mgp, tmp160
	movq	%rax, (%rdx)	# D.23060, *mgp_19(D)
.L1312:
	.loc 1 5486 0
	movq	-64(%rbp), %rax	# mgp, tmp161
	movq	(%rax), %rax	# *mgp_19(D), D.23060
	testq	%rax, %rax	# D.23060
	je	.L1311	#,
	.loc 1 5486 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# mgp, tmp162
	movq	(%rax), %rax	# *mgp_19(D), D.23060
	movq	32(%rax), %rax	# _23->mg_ptr, D.23061
	testq	%rax, %rax	# D.23061
	je	.L1311	#,
	.loc 1 5487 0 is_stmt 1
	movq	-64(%rbp), %rax	# mgp, tmp163
	movq	(%rax), %rax	# *mgp_19(D), D.23060
	movq	32(%rax), %rdx	# _25->mg_ptr, D.23061
	movq	-72(%rbp), %rax	# cachep, tmp164
	movq	%rdx, (%rax)	# D.23061, *cachep_27(D)
	.loc 1 5489 0
	movq	-72(%rbp), %rax	# cachep, tmp165
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	movl	-76(%rbp), %edx	# i, tmp166
	movslq	%edx, %rdx	# tmp166, D.23063
	salq	$3, %rdx	#, D.23063
	addq	%rdx, %rax	# D.23063, D.23062
	movq	(%rax), %rdx	# *_32, D.23063
	movl	-80(%rbp), %eax	# uoff, tmp167
	cltq
	cmpq	%rax, %rdx	# D.23063, D.23063
	jne	.L1313	#,
	.loc 1 5490 0
	movb	$1, -33(%rbp)	#, found
	jmp	.L1314	#
.L1313:
.LBB61:
	.loc 1 5492 0
	movq	$0, -32(%rbp)	#, forw
	.loc 1 5493 0
	movq	$0, -24(%rbp)	#, backw
	.loc 1 5494 0
	movq	$0, -16(%rbp)	#, p
	.loc 1 5501 0
	movq	-72(%rbp), %rax	# cachep, tmp168
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	movl	-76(%rbp), %edx	# i, tmp169
	movslq	%edx, %rdx	# tmp169, D.23063
	salq	$3, %rdx	#, D.23063
	addq	%rdx, %rax	# D.23063, D.23062
	movq	(%rax), %rdx	# *_43, D.23063
	movl	-80(%rbp), %eax	# uoff, tmp170
	cltq
	cmpq	%rax, %rdx	# D.23063, D.23063
	jbe	.L1315	#,
	.loc 1 5502 0
	movl	-80(%rbp), %eax	# uoff, tmp172
	cltq
	movq	%rax, -32(%rbp)	# tmp171, forw
	.loc 1 5503 0
	movq	-72(%rbp), %rax	# cachep, tmp173
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	movl	-76(%rbp), %edx	# i, tmp174
	movslq	%edx, %rdx	# tmp174, D.23063
	salq	$3, %rdx	#, D.23063
	addq	%rdx, %rax	# D.23063, D.23062
	movq	(%rax), %rdx	# *_50, D.23063
	movl	-80(%rbp), %eax	# uoff, tmp175
	cltq
	subq	%rax, %rdx	# D.23063, tmp176
	movq	%rdx, %rax	# tmp176, tmp176
	movq	%rax, -24(%rbp)	# tmp176, backw
	.loc 1 5505 0
	movq	-24(%rbp), %rax	# backw, tmp177
	addq	%rax, %rax	# D.23063
	cmpq	-32(%rbp), %rax	# forw, D.23063
	jbe	.L1316	#,
	.loc 1 5506 0
	movq	24(%rbp), %rax	# start, tmp178
	movq	%rax, -16(%rbp)	# tmp178, p
	jmp	.L1318	#
.L1316:
	.loc 1 5508 0
	movq	-72(%rbp), %rax	# cachep, tmp179
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	movl	-76(%rbp), %edx	# i, tmp180
	movslq	%edx, %rdx	# tmp180, D.23064
	addq	$1, %rdx	#, D.23064
	salq	$3, %rdx	#, D.23064
	addq	%rdx, %rax	# D.23064, D.23062
	movq	(%rax), %rdx	# *_61, D.23063
	movq	24(%rbp), %rax	# start, tmp184
	addq	%rdx, %rax	# D.23063, tmp183
	movq	%rax, -16(%rbp)	# tmp183, p
	jmp	.L1318	#
.L1315:
	.loc 1 5512 0
	cmpl	$0, -76(%rbp)	#, i
	jne	.L1318	#,
.LBB62:
	.loc 1 5513 0
	movq	-56(%rbp), %rax	# sv, tmp185
	movq	%rax, %rdi	# tmp185,
	call	Perl_sv_len_utf8	#
	movq	%rax, -8(%rbp)	# tmp186, ulen
	.loc 1 5515 0
	movl	-80(%rbp), %eax	# uoff, tmp187
	cltq
	cmpq	-8(%rbp), %rax	# ulen, D.23063
	jae	.L1318	#,
	.loc 1 5516 0
	movl	-80(%rbp), %eax	# uoff, tmp188
	movslq	%eax, %rdx	# tmp188, D.23063
	movq	-72(%rbp), %rax	# cachep, tmp189
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	movl	-76(%rbp), %ecx	# i, tmp190
	movslq	%ecx, %rcx	# tmp190, D.23063
	salq	$3, %rcx	#, D.23063
	addq	%rcx, %rax	# D.23063, D.23062
	movq	(%rax), %rax	# *_70, D.23063
	subq	%rax, %rdx	# D.23063, tmp191
	movq	%rdx, %rax	# tmp191, tmp191
	movq	%rax, -32(%rbp)	# tmp191, forw
	.loc 1 5517 0
	movl	-80(%rbp), %eax	# uoff, tmp192
	cltq
	movq	-8(%rbp), %rdx	# ulen, tmp196
	subq	%rax, %rdx	# D.23063, tmp195
	movq	%rdx, %rax	# tmp195, tmp195
	movq	%rax, -24(%rbp)	# tmp195, backw
	.loc 1 5519 0
	movq	-24(%rbp), %rax	# backw, tmp197
	addq	%rax, %rax	# D.23063
	cmpq	-32(%rbp), %rax	# forw, D.23063
	jbe	.L1319	#,
	.loc 1 5520 0
	movq	-72(%rbp), %rax	# cachep, tmp198
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	movl	-76(%rbp), %edx	# i, tmp199
	movslq	%edx, %rdx	# tmp199, D.23064
	addq	$1, %rdx	#, D.23064
	salq	$3, %rdx	#, D.23064
	addq	%rdx, %rax	# D.23064, D.23062
	movq	(%rax), %rdx	# *_80, D.23063
	movq	24(%rbp), %rax	# start, tmp203
	addq	%rdx, %rax	# D.23063, tmp202
	movq	%rax, -16(%rbp)	# tmp202, p
	jmp	.L1318	#
.L1319:
	.loc 1 5522 0
	movq	32(%rbp), %rax	# send, tmp204
	movq	%rax, -16(%rbp)	# tmp204, p
.L1318:
.LBE62:
	.loc 1 5529 0
	cmpq	$0, -16(%rbp)	#, p
	je	.L1314	#,
	.loc 1 5530 0
	movq	-24(%rbp), %rax	# backw, tmp205
	addq	%rax, %rax	# D.23063
	cmpq	-32(%rbp), %rax	# forw, D.23063
	jbe	.L1320	#,
	.loc 1 5531 0
	jmp	.L1321	#
.L1322:
	.loc 1 5532 0
	movq	-16(%rbp), %rax	# p, tmp206
	movzbl	(%rax), %eax	# *p_9, D.23065
	movzbl	%al, %eax	# D.23065, D.23066
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.23065
	movzbl	%al, %eax	# D.23065, D.23064
	addq	%rax, -16(%rbp)	# D.23064, p
.L1321:
	.loc 1 5531 0 discriminator 1
	movq	-32(%rbp), %rax	# forw, forw.626
	leaq	-1(%rax), %rdx	#, tmp208
	movq	%rdx, -32(%rbp)	# tmp208, forw
	testq	%rax, %rax	# forw.626
	jne	.L1322	#,
	jmp	.L1323	#
.L1320:
	.loc 1 5535 0
	jmp	.L1324	#
.L1327:
	.loc 1 5536 0
	subq	$1, -16(%rbp)	#, p
	.loc 1 5537 0
	jmp	.L1325	#
.L1326:
	.loc 1 5538 0
	subq	$1, -16(%rbp)	#, p
.L1325:
	.loc 1 5537 0 discriminator 1
	movq	-16(%rbp), %rax	# p, tmp209
	movzbl	(%rax), %eax	# *p_10, D.23065
	testb	%al, %al	# D.23067
	jns	.L1324	#,
	.loc 1 5537 0 is_stmt 0 discriminator 2
	movq	-16(%rbp), %rax	# p, tmp210
	movzbl	(%rax), %eax	# *p_10, D.23065
	cmpb	$-65, %al	#, D.23065
	jbe	.L1326	#,
.L1324:
	.loc 1 5535 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# backw, backw.627
	leaq	-1(%rax), %rdx	#, tmp211
	movq	%rdx, -24(%rbp)	# tmp211, backw
	testq	%rax, %rax	# backw.627
	jne	.L1327	#,
.L1323:
	.loc 1 5543 0
	movq	-72(%rbp), %rax	# cachep, tmp212
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	movl	-76(%rbp), %edx	# i, tmp213
	movslq	%edx, %rdx	# tmp213, D.23063
	salq	$3, %rdx	#, D.23063
	addq	%rax, %rdx	# D.23062, D.23062
	movl	-80(%rbp), %eax	# uoff, tmp214
	cltq
	movq	%rax, (%rdx)	# D.23063, *_103
	.loc 1 5544 0
	movq	-72(%rbp), %rax	# cachep, tmp215
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	movl	-76(%rbp), %edx	# i, tmp216
	movslq	%edx, %rdx	# tmp216, D.23064
	addq	$1, %rdx	#, D.23064
	salq	$3, %rdx	#, D.23064
	addq	%rax, %rdx	# D.23062, D.23062
	movq	-16(%rbp), %rcx	# p, p.628
	movq	24(%rbp), %rax	# start, start.629
	subq	%rax, %rcx	# start.629, D.23068
	movq	%rcx, %rax	# D.23068, D.23068
	movq	%rax, (%rdx)	# D.23063, *_109
	.loc 1 5547 0
	cmpl	$0, -76(%rbp)	#, i
	jne	.L1328	#,
	.loc 1 5548 0
	movq	-72(%rbp), %rax	# cachep, tmp217
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	addq	$16, %rax	#, D.23062
	movq	$0, (%rax)	#, *_115
	.loc 1 5549 0
	movq	-72(%rbp), %rax	# cachep, tmp218
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	addq	$24, %rax	#, D.23062
	movq	$0, (%rax)	#, *_117
.L1328:
	.loc 1 5552 0
	movb	$1, -33(%rbp)	#, found
.L1314:
.LBE61:
	.loc 1 5555 0
	cmpb	$0, -33(%rbp)	#, found
	je	.L1311	#,
	.loc 1 5556 0
	movq	-72(%rbp), %rax	# cachep, tmp219
	movq	(%rax), %rax	# *cachep_27(D), D.23062
	movl	-76(%rbp), %edx	# i, tmp220
	movslq	%edx, %rdx	# tmp220, D.23064
	addq	$1, %rdx	#, D.23064
	salq	$3, %rdx	#, D.23064
	addq	%rdx, %rax	# D.23064, D.23062
	movq	(%rax), %rax	# *_123, D.23063
	movl	%eax, %edx	# D.23063, D.23066
	movq	-88(%rbp), %rax	# offsetp, tmp221
	movl	%edx, (%rax)	# D.23066, *offsetp_126(D)
	.loc 1 5557 0
	movq	-88(%rbp), %rax	# offsetp, tmp222
	movl	(%rax), %eax	# *offsetp_126(D), D.23066
	movslq	%eax, %rdx	# D.23066, D.23064
	movq	24(%rbp), %rax	# start, tmp223
	addq	%rax, %rdx	# tmp223, D.23069
	movq	16(%rbp), %rax	# sp, tmp224
	movq	%rdx, (%rax)	# D.23069, *sp_130(D)
	.loc 1 5558 0
	movq	16(%rbp), %rax	# sp, tmp225
	movq	(%rax), %rax	# *sp_130(D), D.23069
	cmpq	32(%rbp), %rax	# send, D.23069
	jb	.L1329	#,
	.loc 1 5559 0
	movq	16(%rbp), %rax	# sp, tmp226
	movq	32(%rbp), %rdx	# send, tmp227
	movq	%rdx, (%rax)	# tmp227, *sp_130(D)
	.loc 1 5560 0
	movq	32(%rbp), %rdx	# send, send.630
	movq	24(%rbp), %rax	# start, start.631
	subq	%rax, %rdx	# start.631, D.23068
	movq	%rdx, %rax	# D.23068, D.23068
	movl	%eax, %edx	# D.23068, D.23066
	movq	-88(%rbp), %rax	# offsetp, tmp228
	movl	%edx, (%rax)	# D.23066, *offsetp_126(D)
	jmp	.L1311	#
.L1329:
	.loc 1 5562 0
	movq	16(%rbp), %rax	# sp, tmp229
	movq	(%rax), %rax	# *sp_130(D), D.23069
	cmpq	24(%rbp), %rax	# start, D.23069
	jae	.L1311	#,
	.loc 1 5563 0
	movq	16(%rbp), %rax	# sp, tmp230
	movq	24(%rbp), %rdx	# start, tmp231
	movq	%rdx, (%rax)	# tmp231, *sp_130(D)
	.loc 1 5564 0
	movq	-88(%rbp), %rax	# offsetp, tmp232
	movl	$0, (%rax)	#, *offsetp_126(D)
.L1311:
	.loc 1 5586 0
	movzbl	-33(%rbp), %eax	# found, D.23070
	.loc 1 5587 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE116:
	.size	S_utf8_mg_pos, .-S_utf8_mg_pos
	.globl	Perl_sv_pos_u2b
	.type	Perl_sv_pos_u2b, @function
Perl_sv_pos_u2b:
.LFB117:
	.loc 1 5610 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, -104(%rbp)	# offsetp, offsetp
	movq	%rdx, -112(%rbp)	# lenp, lenp
	.loc 1 5614 0
	movq	$0, -56(%rbp)	#, cache
	.loc 1 5615 0
	movq	$0, -40(%rbp)	#, boffset
	.loc 1 5617 0
	testq	%rbx, %rbx	# sv
	jne	.L1332	#,
	.loc 1 5618 0
	jmp	.L1331	#
.L1332:
	.loc 1 5620 0
	movl	12(%rbx), %eax	# sv_9(D)->sv_flags, D.23071
	andl	$262144, %eax	#, D.23071
	testl	%eax, %eax	# D.23071
	je	.L1334	#,
	.loc 1 5620 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_9(D)->sv_any, D.23072
	movq	8(%rax), %rax	# MEM[(struct XPV *)_12].xpv_cur, len.633
	movq	%rax, -64(%rbp)	# len.633, len
	movq	(%rbx), %rax	# sv_9(D)->sv_any, D.23072
	movq	(%rax), %rax	# MEM[(struct XPV *)_14].xpv_pv, iftmp.632
	jmp	.L1335	#
.L1334:
	.loc 1 5620 0 discriminator 2
	leaq	-64(%rbp), %rax	#, tmp113
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp113,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
.L1335:
	.loc 1 5620 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.632, s
	movq	-72(%rbp), %rax	# s, tmp114
	movq	%rax, -32(%rbp)	# tmp114, start
	.loc 1 5621 0 is_stmt 1 discriminator 3
	movq	-64(%rbp), %rax	# len, len.634
	testq	%rax, %rax	# len.634
	je	.L1336	#,
.LBB63:
	.loc 1 5622 0
	movq	-104(%rbp), %rax	# offsetp, tmp115
	movl	(%rax), %eax	# *offsetp_19(D), tmp116
	movl	%eax, -80(%rbp)	# tmp116, uoffset
	.loc 1 5623 0
	movq	-72(%rbp), %rdx	# s, s.635
	movq	-64(%rbp), %rax	# len, len.636
	addq	%rdx, %rax	# s.635, tmp117
	movq	%rax, -24(%rbp)	# tmp117, send
	.loc 1 5624 0
	movq	$0, -48(%rbp)	#, mg
	.loc 1 5625 0
	movb	$0, -81(%rbp)	#, found
	.loc 1 5627 0
	movq	-104(%rbp), %rax	# offsetp, tmp118
	movl	(%rax), %edi	# *offsetp_19(D), D.23073
	movq	-104(%rbp), %rsi	# offsetp, tmp119
	leaq	-56(%rbp), %rdx	#, tmp120
	leaq	-48(%rbp), %rax	#, tmp121
	movq	-24(%rbp), %rcx	# send, tmp122
	movq	%rcx, 16(%rsp)	# tmp122,
	movq	-32(%rbp), %rcx	# start, tmp123
	movq	%rcx, 8(%rsp)	# tmp123,
	leaq	-72(%rbp), %rcx	#, tmp124
	movq	%rcx, (%rsp)	# tmp124,
	movl	%edi, %r9d	# D.23073,
	movq	%rsi, %r8	# tmp119,
	movl	$0, %ecx	#,
	movq	%rax, %rsi	# tmp121,
	movq	%rbx, %rdi	# sv,
	call	S_utf8_mg_pos	#
	testb	%al, %al	# D.23074
	je	.L1337	#,
	.loc 1 5628 0
	movb	$1, -81(%rbp)	#, found
.L1337:
	.loc 1 5629 0
	cmpb	$0, -81(%rbp)	#, found
	jne	.L1338	#,
	.loc 1 5629 0 is_stmt 0 discriminator 1
	cmpl	$0, -80(%rbp)	#, uoffset
	jle	.L1338	#,
	.loc 1 5630 0 is_stmt 1
	jmp	.L1339	#
.L1341:
	.loc 1 5631 0
	movq	-72(%rbp), %rdx	# s, s.637
	movq	-72(%rbp), %rax	# s, s.638
	movzbl	(%rax), %eax	# *s.638_32, D.23075
	movzbl	%al, %eax	# D.23075, D.23073
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.23075
	movzbl	%al, %eax	# D.23075, D.23076
	addq	%rdx, %rax	# s.637, s.639
	movq	%rax, -72(%rbp)	# s.639, s
.L1339:
	.loc 1 5630 0 discriminator 1
	movq	-72(%rbp), %rax	# s, s.640
	cmpq	-24(%rbp), %rax	# send, s.640
	jae	.L1340	#,
	.loc 1 5630 0 is_stmt 0 discriminator 2
	movl	-80(%rbp), %eax	# uoffset, uoffset.641
	leal	-1(%rax), %edx	#, tmp126
	movl	%edx, -80(%rbp)	# tmp126, uoffset
	testl	%eax, %eax	# uoffset.641
	jne	.L1341	#,
.L1340:
	.loc 1 5632 0 is_stmt 1
	movq	-72(%rbp), %rax	# s, s.642
	cmpq	-24(%rbp), %rax	# send, s.642
	jb	.L1342	#,
	.loc 1 5633 0
	movq	-24(%rbp), %rax	# send, tmp127
	movq	%rax, -72(%rbp)	# tmp127, s
.L1342:
	.loc 1 5634 0
	movq	-72(%rbp), %rdi	# s, s.643
	movq	-104(%rbp), %rsi	# offsetp, tmp128
	leaq	-56(%rbp), %rdx	#, tmp129
	leaq	-48(%rbp), %rax	#, tmp130
	movq	-32(%rbp), %rcx	# start, tmp131
	movq	%rcx, (%rsp)	# tmp131,
	movq	%rdi, %r9	# s.643,
	movq	%rsi, %r8	# tmp128,
	movl	$0, %ecx	#,
	movq	%rax, %rsi	# tmp130,
	movq	%rbx, %rdi	# sv,
	call	S_utf8_mg_pos_init	#
	testb	%al, %al	# D.23074
	je	.L1343	#,
	.loc 1 5635 0
	movq	-56(%rbp), %rax	# cache, cache.644
	movq	8(%rax), %rax	# MEM[(STRLEN *)cache.644_41 + 8B], tmp132
	movq	%rax, -40(%rbp)	# tmp132, boffset
.L1343:
	.loc 1 5636 0
	movq	-72(%rbp), %rax	# s, s.645
	movq	%rax, %rdx	# s.645, s.646
	movq	-32(%rbp), %rax	# start, start.647
	subq	%rax, %rdx	# start.647, D.23077
	movq	%rdx, %rax	# D.23077, D.23077
	movl	%eax, %edx	# D.23077, D.23073
	movq	-104(%rbp), %rax	# offsetp, tmp133
	movl	%edx, (%rax)	# D.23073, *offsetp_19(D)
.L1338:
	.loc 1 5638 0
	cmpq	$0, -112(%rbp)	#, lenp
	je	.L1344	#,
	.loc 1 5639 0
	movb	$0, -81(%rbp)	#, found
	.loc 1 5640 0
	movq	-72(%rbp), %rax	# s, tmp134
	movq	%rax, -32(%rbp)	# tmp134, start
	.loc 1 5641 0
	movq	-112(%rbp), %rax	# lenp, tmp135
	movl	(%rax), %edi	# *lenp_48(D), D.23073
	movq	-112(%rbp), %rsi	# lenp, tmp136
	leaq	-56(%rbp), %rdx	#, tmp137
	leaq	-48(%rbp), %rax	#, tmp138
	movq	-24(%rbp), %rcx	# send, tmp139
	movq	%rcx, 16(%rsp)	# tmp139,
	movq	-32(%rbp), %rcx	# start, tmp140
	movq	%rcx, 8(%rsp)	# tmp140,
	leaq	-72(%rbp), %rcx	#, tmp141
	movq	%rcx, (%rsp)	# tmp141,
	movl	%edi, %r9d	# D.23073,
	movq	%rsi, %r8	# tmp136,
	movl	$2, %ecx	#,
	movq	%rax, %rsi	# tmp138,
	movq	%rbx, %rdi	# sv,
	call	S_utf8_mg_pos	#
	testb	%al, %al	# D.23074
	je	.L1345	#,
	.loc 1 5642 0
	movq	-112(%rbp), %rax	# lenp, tmp142
	movl	(%rax), %eax	# *lenp_48(D), D.23073
	movl	%eax, %edx	# D.23073, D.23078
	movq	-40(%rbp), %rax	# boffset, tmp143
	subl	%eax, %edx	# D.23078, D.23078
	movl	%edx, %eax	# D.23078, D.23078
	movl	%eax, %edx	# D.23078, D.23073
	movq	-112(%rbp), %rax	# lenp, tmp144
	movl	%edx, (%rax)	# D.23073, *lenp_48(D)
	.loc 1 5643 0
	movb	$1, -81(%rbp)	#, found
.L1345:
	.loc 1 5645 0
	cmpb	$0, -81(%rbp)	#, found
	jne	.L1346	#,
	.loc 1 5645 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# lenp, tmp145
	movl	(%rax), %eax	# *lenp_48(D), D.23073
	testl	%eax, %eax	# D.23073
	jle	.L1346	#,
.LBB64:
	.loc 1 5646 0 is_stmt 1
	movq	-112(%rbp), %rax	# lenp, tmp146
	movl	(%rax), %eax	# *lenp_48(D), tmp147
	movl	%eax, -76(%rbp)	# tmp147, ulen
	.loc 1 5647 0
	cmpl	$0, -76(%rbp)	#, ulen
	jle	.L1347	#,
	.loc 1 5648 0
	jmp	.L1348	#
.L1349:
	.loc 1 5649 0
	movq	-72(%rbp), %rdx	# s, s.648
	movq	-72(%rbp), %rax	# s, s.649
	movzbl	(%rax), %eax	# *s.649_65, D.23075
	movzbl	%al, %eax	# D.23075, D.23073
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.23075
	movzbl	%al, %eax	# D.23075, D.23076
	addq	%rdx, %rax	# s.648, s.650
	movq	%rax, -72(%rbp)	# s.650, s
.L1348:
	.loc 1 5648 0 discriminator 1
	movq	-72(%rbp), %rax	# s, s.651
	cmpq	-24(%rbp), %rax	# send, s.651
	jae	.L1347	#,
	.loc 1 5648 0 is_stmt 0 discriminator 2
	movl	-76(%rbp), %eax	# ulen, ulen.652
	leal	-1(%rax), %edx	#, tmp149
	movl	%edx, -76(%rbp)	# tmp149, ulen
	testl	%eax, %eax	# ulen.652
	jne	.L1349	#,
.L1347:
	.loc 1 5650 0 is_stmt 1
	movq	-72(%rbp), %rax	# s, s.653
	cmpq	-24(%rbp), %rax	# send, s.653
	jb	.L1350	#,
	.loc 1 5651 0
	movq	-24(%rbp), %rax	# send, tmp150
	movq	%rax, -72(%rbp)	# tmp150, s
.L1350:
	.loc 1 5652 0
	movq	-72(%rbp), %rdi	# s, s.654
	movq	-112(%rbp), %rsi	# lenp, tmp151
	leaq	-56(%rbp), %rdx	#, tmp152
	leaq	-48(%rbp), %rax	#, tmp153
	movq	-32(%rbp), %rcx	# start, tmp154
	movq	%rcx, (%rsp)	# tmp154,
	movq	%rdi, %r9	# s.654,
	movq	%rsi, %r8	# tmp151,
	movl	$2, %ecx	#,
	movq	%rax, %rsi	# tmp153,
	movq	%rbx, %rdi	# sv,
	call	S_utf8_mg_pos_init	#
.L1346:
.LBE64:
	.loc 1 5654 0
	movq	-72(%rbp), %rax	# s, s.655
	movq	%rax, %rdx	# s.655, s.656
	movq	-32(%rbp), %rax	# start, start.657
	subq	%rax, %rdx	# start.657, D.23077
	movq	%rdx, %rax	# D.23077, D.23077
	movl	%eax, %edx	# D.23077, D.23073
	movq	-112(%rbp), %rax	# lenp, tmp155
	movl	%edx, (%rax)	# D.23073, *lenp_48(D)
.LBE63:
	jmp	.L1351	#
.L1344:
	jmp	.L1351	#
.L1336:
	.loc 1 5659 0
	movq	-104(%rbp), %rax	# offsetp, tmp156
	movl	$0, (%rax)	#, *offsetp_19(D)
	.loc 1 5660 0
	cmpq	$0, -112(%rbp)	#, lenp
	je	.L1351	#,
	.loc 1 5661 0
	movq	-112(%rbp), %rax	# lenp, tmp157
	movl	$0, (%rax)	#, *lenp_48(D)
.L1351:
	.loc 1 5664 0
	nop
.L1331:
	.loc 1 5665 0
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE117:
	.size	Perl_sv_pos_u2b, .-Perl_sv_pos_u2b
	.section	.rodata
	.align 8
.LC53:
	.string	"panic: sv_pos_b2u: bad byte offset"
	.text
	.globl	Perl_sv_pos_b2u
	.type	Perl_sv_pos_b2u, @function
Perl_sv_pos_b2u:
.LFB118:
	.loc 1 5686 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, -104(%rbp)	# offsetp, offsetp
	.loc 1 5690 0
	testq	%rbx, %rbx	# sv
	jne	.L1354	#,
	.loc 1 5691 0
	jmp	.L1353	#
.L1354:
	.loc 1 5693 0
	movl	12(%rbx), %eax	# sv_13(D)->sv_flags, D.23079
	andl	$262144, %eax	#, D.23079
	testl	%eax, %eax	# D.23079
	je	.L1356	#,
	.loc 1 5693 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_13(D)->sv_any, D.23080
	movq	8(%rax), %rax	# MEM[(struct XPV *)_16].xpv_cur, len.659
	movq	%rax, -96(%rbp)	# len.659, len
	movq	(%rbx), %rax	# sv_13(D)->sv_any, D.23080
	movq	(%rax), %rax	# MEM[(struct XPV *)_18].xpv_pv, iftmp.658
	jmp	.L1357	#
.L1356:
	.loc 1 5693 0 discriminator 2
	leaq	-96(%rbp), %rax	#, tmp132
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp132,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
.L1357:
	.loc 1 5693 0 discriminator 3
	movq	%rax, -80(%rbp)	# iftmp.658, s
	.loc 1 5694 0 is_stmt 1 discriminator 3
	movq	-96(%rbp), %rax	# len, len.660
	movl	%eax, %edx	# len.660, D.23081
	movq	-104(%rbp), %rax	# offsetp, tmp133
	movl	(%rax), %eax	# *offsetp_24(D), D.23081
	cmpl	%eax, %edx	# D.23081, D.23081
	jge	.L1358	#,
	.loc 1 5695 0
	movl	$.LC53, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L1359	#
.L1358:
.LBB65:
	.loc 1 5697 0
	movq	-104(%rbp), %rax	# offsetp, tmp134
	movl	(%rax), %eax	# *offsetp_24(D), D.23081
	movslq	%eax, %rdx	# D.23081, D.23082
	movq	-80(%rbp), %rax	# s, tmp138
	addq	%rdx, %rax	# D.23082, tmp137
	movq	%rax, -32(%rbp)	# tmp137, send
	.loc 1 5698 0
	movq	$0, -72(%rbp)	#, mg
	.loc 1 5699 0
	movq	$0, -64(%rbp)	#, cache
	.loc 1 5701 0
	movq	$0, -96(%rbp)	#, len
	.loc 1 5703 0
	movl	12(%rbx), %eax	# sv_13(D)->sv_flags, D.23079
	andl	$57344, %eax	#, D.23079
	testl	%eax, %eax	# D.23079
	je	.L1360	#,
	.loc 1 5703 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_13(D)->sv_flags, D.23079
	andl	$8388608, %eax	#, D.23079
	testl	%eax, %eax	# D.23079
	jne	.L1360	#,
	.loc 1 5704 0 is_stmt 1
	movl	$119, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_find	#
	movq	%rax, -72(%rbp)	# tmp139, mg
	.loc 1 5705 0
	cmpq	$0, -72(%rbp)	#, mg
	je	.L1360	#,
	.loc 1 5705 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# mg, tmp140
	movq	32(%rax), %rax	# mg_35->mg_ptr, D.23083
	testq	%rax, %rax	# D.23083
	je	.L1360	#,
	.loc 1 5706 0 is_stmt 1
	movq	-72(%rbp), %rax	# mg, tmp141
	movq	32(%rax), %rax	# mg_35->mg_ptr, tmp142
	movq	%rax, -64(%rbp)	# tmp142, cache
	.loc 1 5707 0
	movq	-64(%rbp), %rax	# cache, tmp143
	addq	$8, %rax	#, D.23084
	movq	(%rax), %rdx	# *_38, D.23085
	movq	-104(%rbp), %rax	# offsetp, tmp144
	movl	(%rax), %eax	# *offsetp_24(D), D.23081
	cltq
	cmpq	%rax, %rdx	# D.23085, D.23085
	jne	.L1361	#,
	.loc 1 5709 0
	movq	-64(%rbp), %rax	# cache, tmp145
	movq	(%rax), %rax	# *cache_37, D.23085
	movl	%eax, %edx	# D.23085, D.23081
	movq	-104(%rbp), %rax	# offsetp, tmp146
	movl	%edx, (%rax)	# D.23081, *offsetp_24(D)
	.loc 1 5711 0
	jmp	.L1353	#
.L1361:
	.loc 1 5713 0
	movq	-64(%rbp), %rax	# cache, tmp147
	addq	$8, %rax	#, D.23084
	movq	(%rax), %rdx	# *_44, D.23085
	movq	-104(%rbp), %rax	# offsetp, tmp148
	movl	(%rax), %eax	# *offsetp_24(D), D.23081
	cltq
	cmpq	%rax, %rdx	# D.23085, D.23085
	jae	.L1362	#,
	.loc 1 5715 0
	movq	-64(%rbp), %rax	# cache, tmp149
	movq	(%rax), %rax	# *cache_37, len.661
	movq	%rax, -96(%rbp)	# len.661, len
	.loc 1 5716 0
	movq	-64(%rbp), %rax	# cache, tmp150
	addq	$8, %rax	#, D.23084
	movq	(%rax), %rax	# *_49, D.23085
	addq	%rax, -80(%rbp)	# D.23085, s
	jmp	.L1360	#
.L1362:
.LBB66:
	.loc 1 5725 0
	movq	-104(%rbp), %rax	# offsetp, tmp151
	movl	(%rax), %eax	# *offsetp_24(D), D.23081
	cltq
	movq	%rax, -24(%rbp)	# tmp152, forw
	.loc 1 5726 0
	movq	-64(%rbp), %rax	# cache, tmp153
	addq	$8, %rax	#, D.23084
	movq	(%rax), %rdx	# *_54, D.23085
	movq	-104(%rbp), %rax	# offsetp, tmp154
	movl	(%rax), %eax	# *offsetp_24(D), D.23081
	cltq
	subq	%rax, %rdx	# D.23085, tmp155
	movq	%rdx, %rax	# tmp155, tmp155
	movq	%rax, -56(%rbp)	# tmp155, backw
	.loc 1 5728 0
	movq	-56(%rbp), %rax	# backw, tmp156
	addq	%rax, %rax	# D.23085
	cmpq	-24(%rbp), %rax	# forw, D.23085
	ja	.L1360	#,
.LBB67:
	.loc 1 5729 0
	movq	-64(%rbp), %rax	# cache, tmp157
	addq	$8, %rax	#, D.23084
	movq	(%rax), %rdx	# *_60, D.23085
	movq	-80(%rbp), %rax	# s, tmp161
	addq	%rdx, %rax	# D.23085, tmp160
	movq	%rax, -48(%rbp)	# tmp160, p
	.loc 1 5730 0
	movq	$0, -40(%rbp)	#, ubackw
	.loc 1 5732 0
	movq	-64(%rbp), %rax	# cache, tmp162
	leaq	8(%rax), %rdx	#, D.23084
	movq	-64(%rbp), %rax	# cache, tmp163
	addq	$8, %rax	#, D.23084
	movq	(%rax), %rax	# *_65, D.23085
	subq	-56(%rbp), %rax	# backw, D.23085
	movq	%rax, (%rdx)	# D.23085, *_64
	.loc 1 5734 0
	jmp	.L1363	#
.L1367:
	.loc 1 5735 0
	subq	$1, -48(%rbp)	#, p
	.loc 1 5736 0
	jmp	.L1364	#
.L1366:
	.loc 1 5737 0
	subq	$1, -48(%rbp)	#, p
	.loc 1 5738 0
	subq	$1, -56(%rbp)	#, backw
.L1364:
	.loc 1 5736 0 discriminator 1
	movq	-48(%rbp), %rax	# p, tmp164
	movzbl	(%rax), %eax	# *p_9, D.23086
	testb	%al, %al	# D.23087
	jns	.L1365	#,
	.loc 1 5736 0 is_stmt 0 discriminator 2
	movq	-48(%rbp), %rax	# p, tmp165
	movzbl	(%rax), %eax	# *p_9, D.23086
	cmpb	$-65, %al	#, D.23086
	jbe	.L1366	#,
.L1365:
	.loc 1 5740 0 is_stmt 1
	addq	$1, -40(%rbp)	#, ubackw
.L1363:
	.loc 1 5734 0 discriminator 1
	movq	-56(%rbp), %rax	# backw, backw.662
	leaq	-1(%rax), %rdx	#, tmp166
	movq	%rdx, -56(%rbp)	# tmp166, backw
	testq	%rax, %rax	# backw.662
	jne	.L1367	#,
	.loc 1 5743 0
	movq	-64(%rbp), %rax	# cache, tmp167
	movq	(%rax), %rax	# *cache_37, D.23085
	subq	-40(%rbp), %rax	# ubackw, D.23085
	movq	%rax, %rdx	# D.23085, D.23085
	movq	-64(%rbp), %rax	# cache, tmp168
	movq	%rdx, (%rax)	# D.23085, *cache_37
	.loc 1 5744 0
	movq	-64(%rbp), %rax	# cache, tmp169
	movq	(%rax), %rax	# *cache_37, D.23085
	movl	%eax, %edx	# D.23085, D.23081
	movq	-104(%rbp), %rax	# offsetp, tmp170
	movl	%edx, (%rax)	# D.23081, *offsetp_24(D)
	.loc 1 5747 0
	movq	-64(%rbp), %rax	# cache, tmp171
	addq	$16, %rax	#, D.23084
	movq	$0, (%rax)	#, *_81
	.loc 1 5748 0
	movq	-64(%rbp), %rax	# cache, tmp172
	addq	$24, %rax	#, D.23084
	movq	$0, (%rax)	#, *_82
	.loc 1 5750 0
	jmp	.L1353	#
.L1360:
.LBE67:
.LBE66:
	.loc 1 5757 0
	jmp	.L1368	#
.L1372:
.LBB68:
	.loc 1 5758 0
	movq	$1, -88(%rbp)	#, n
	.loc 1 5762 0
	movq	-80(%rbp), %rax	# s, tmp173
	movzbl	(%rax), %eax	# *s_2, D.23086
	testb	%al, %al	# D.23087
	jns	.L1369	#,
	.loc 1 5763 0
	movq	-80(%rbp), %rax	# s, tmp174
	movzbl	(%rax), %eax	# *s_2, D.23086
	movzbl	%al, %eax	# D.23086, D.23081
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.23086
	movzbl	%al, %esi	# D.23086, D.23085
	leaq	-88(%rbp), %rdx	#, tmp176
	movq	-80(%rbp), %rax	# s, tmp177
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp177,
	call	Perl_utf8n_to_uvuni	#
.L1369:
	.loc 1 5764 0
	movq	-88(%rbp), %rax	# n, n.663
	testq	%rax, %rax	# n.663
	je	.L1371	#,
	.loc 1 5765 0
	movq	-88(%rbp), %rax	# n, n.664
	addq	%rax, -80(%rbp)	# n.664, s
	.loc 1 5766 0
	movq	-96(%rbp), %rax	# len, len.665
	addq	$1, %rax	#, len.666
	movq	%rax, -96(%rbp)	# len.666, len
.L1368:
.LBE68:
	.loc 1 5757 0 discriminator 1
	movq	-80(%rbp), %rax	# s, tmp178
	cmpq	-32(%rbp), %rax	# send, tmp178
	jb	.L1372	#,
.L1371:
	.loc 1 5772 0
	movl	12(%rbx), %eax	# sv_13(D)->sv_flags, D.23079
	andl	$8388608, %eax	#, D.23079
	testl	%eax, %eax	# D.23079
	jne	.L1373	#,
	.loc 1 5773 0
	cmpq	$0, -72(%rbp)	#, mg
	jne	.L1374	#,
	.loc 1 5774 0
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$119, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_magic	#
	.loc 1 5775 0
	movl	$119, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_find	#
	movq	%rax, -72(%rbp)	# tmp179, mg
.L1374:
	.loc 1 5779 0
	movq	-72(%rbp), %rax	# mg, tmp180
	movq	32(%rax), %rax	# mg_4->mg_ptr, D.23083
	testq	%rax, %rax	# D.23083
	jne	.L1375	#,
	.loc 1 5780 0
	movl	$32, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -64(%rbp)	# tmp181, cache
	movq	-64(%rbp), %rax	# cache, tmp182
	movl	$32, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp182,
	call	memset	#
	.loc 1 5781 0
	movq	-72(%rbp), %rax	# mg, tmp183
	movq	-64(%rbp), %rdx	# cache, tmp184
	movq	%rdx, 32(%rax)	# tmp184, mg_4->mg_ptr
.L1375:
	.loc 1 5785 0
	movq	-96(%rbp), %rdx	# len, len.667
	movq	-64(%rbp), %rax	# cache, tmp185
	movq	%rdx, (%rax)	# len.667, *cache_6
	.loc 1 5786 0
	movq	-64(%rbp), %rax	# cache, tmp186
	leaq	8(%rax), %rdx	#, D.23084
	movq	-104(%rbp), %rax	# offsetp, tmp187
	movl	(%rax), %eax	# *offsetp_24(D), D.23081
	cltq
	movq	%rax, (%rdx)	# D.23085, *_100
	.loc 1 5788 0
	movq	-64(%rbp), %rax	# cache, tmp188
	addq	$16, %rax	#, D.23084
	movq	$0, (%rax)	#, *_103
	.loc 1 5789 0
	movq	-64(%rbp), %rax	# cache, tmp189
	addq	$24, %rax	#, D.23084
	movq	$0, (%rax)	#, *_104
.L1373:
	.loc 1 5792 0
	movq	-96(%rbp), %rax	# len, len.668
	movl	%eax, %edx	# len.668, D.23081
	movq	-104(%rbp), %rax	# offsetp, tmp190
	movl	%edx, (%rax)	# D.23081, *offsetp_24(D)
.L1359:
.LBE65:
	.loc 1 5795 0
	nop
.L1353:
	.loc 1 5796 0
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE118:
	.size	Perl_sv_pos_b2u, .-Perl_sv_pos_b2u
	.globl	Perl_sv_eq
	.type	Perl_sv_eq, @function
Perl_sv_eq:
.LFB119:
	.loc 1 5810 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$80, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv1, sv1
	movq	%rsi, %r12	# sv2, sv2
	.loc 1 5815 0
	movl	$0, -84(%rbp)	#, eq
	.loc 1 5816 0
	movq	$0, -48(%rbp)	#, tpv
	.loc 1 5817 0
	movq	$0, -40(%rbp)	#, svrecode
	.loc 1 5819 0
	testq	%rbx, %rbx	# sv1
	jne	.L1378	#,
	.loc 1 5820 0
	movq	$.LC1, -64(%rbp)	#, pv1
	.loc 1 5821 0
	movq	$0, -80(%rbp)	#, cur1
	jmp	.L1379	#
.L1378:
	.loc 1 5824 0
	movl	12(%rbx), %eax	# sv1_24(D)->sv_flags, D.23090
	andl	$262144, %eax	#, D.23090
	testl	%eax, %eax	# D.23090
	je	.L1380	#,
	.loc 1 5824 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv1_24(D)->sv_any, D.23091
	movq	8(%rax), %rax	# MEM[(struct XPV *)_28].xpv_cur, cur1.670
	movq	%rax, -80(%rbp)	# cur1.670, cur1
	movq	(%rbx), %rax	# sv1_24(D)->sv_any, D.23091
	movq	(%rax), %rax	# MEM[(struct XPV *)_30].xpv_pv, iftmp.669
	jmp	.L1381	#
.L1380:
	.loc 1 5824 0 discriminator 2
	leaq	-80(%rbp), %rax	#, tmp114
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp114,
	movq	%rbx, %rdi	# sv1,
	call	Perl_sv_2pv_flags	#
.L1381:
	.loc 1 5824 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.669, pv1
.L1379:
	.loc 1 5826 0 is_stmt 1
	testq	%r12, %r12	# sv2
	jne	.L1382	#,
	.loc 1 5827 0
	movq	$.LC1, -56(%rbp)	#, pv2
	.loc 1 5828 0
	movq	$0, -72(%rbp)	#, cur2
	jmp	.L1383	#
.L1382:
	.loc 1 5831 0
	movl	12(%r12), %eax	# sv2_34(D)->sv_flags, D.23090
	andl	$262144, %eax	#, D.23090
	testl	%eax, %eax	# D.23090
	je	.L1384	#,
	.loc 1 5831 0 is_stmt 0 discriminator 1
	movq	(%r12), %rax	# sv2_34(D)->sv_any, D.23091
	movq	8(%rax), %rax	# MEM[(struct XPV *)_38].xpv_cur, cur2.672
	movq	%rax, -72(%rbp)	# cur2.672, cur2
	movq	(%r12), %rax	# sv2_34(D)->sv_any, D.23091
	movq	(%rax), %rax	# MEM[(struct XPV *)_40].xpv_pv, iftmp.671
	jmp	.L1385	#
.L1384:
	.loc 1 5831 0 discriminator 2
	leaq	-72(%rbp), %rax	#, tmp115
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp115,
	movq	%r12, %rdi	# sv2,
	call	Perl_sv_2pv_flags	#
.L1385:
	.loc 1 5831 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.671, pv2
.L1383:
	.loc 1 5833 0 is_stmt 1
	movq	-80(%rbp), %rax	# cur1, cur1.673
	testq	%rax, %rax	# cur1.673
	je	.L1386	#,
	.loc 1 5833 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# cur2, cur2.674
	testq	%rax, %rax	# cur2.674
	je	.L1386	#,
	movl	12(%rbx), %edx	# sv1_24(D)->sv_flags, D.23090
	movl	12(%r12), %eax	# sv2_34(D)->sv_flags, D.23090
	xorl	%edx, %eax	# D.23090, D.23090
	andl	$536870912, %eax	#, D.23090
	testl	%eax, %eax	# D.23090
	je	.L1386	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.675
	movzbl	37(%rax), %eax	# PL_curcop.675_50->op_private, D.23092
	movzbl	%al, %eax	# D.23092, D.23093
	andl	$8, %eax	#, D.23093
	testl	%eax, %eax	# D.23093
	jne	.L1386	#,
	.loc 1 5836 0 is_stmt 1
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.676
	testq	%rax, %rax	# PL_encoding.676
	je	.L1387	#,
	.loc 1 5837 0
	movl	12(%rbx), %eax	# sv1_24(D)->sv_flags, D.23090
	andl	$536870912, %eax	#, D.23090
	testl	%eax, %eax	# D.23090
	je	.L1388	#,
	.loc 1 5838 0
	movq	-72(%rbp), %rdx	# cur2, cur2.677
	movq	-56(%rbp), %rax	# pv2, tmp116
	movq	%rdx, %rsi	# cur2.677,
	movq	%rax, %rdi	# tmp116,
	call	Perl_newSVpvn	#
	movq	%rax, -40(%rbp)	# tmp117, svrecode
	.loc 1 5839 0
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.678
	movq	-40(%rbp), %rax	# svrecode, tmp118
	movq	%rdx, %rsi	# PL_encoding.678,
	movq	%rax, %rdi	# tmp118,
	call	Perl_sv_recode_to_utf8	#
	.loc 1 5840 0
	movq	-40(%rbp), %rax	# svrecode, tmp119
	movl	12(%rax), %eax	# svrecode_58->sv_flags, D.23090
	andl	$262144, %eax	#, D.23090
	testl	%eax, %eax	# D.23090
	je	.L1389	#,
	.loc 1 5840 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# svrecode, tmp120
	movq	(%rax), %rax	# svrecode_58->sv_any, D.23091
	movq	8(%rax), %rax	# MEM[(struct XPV *)_62].xpv_cur, cur2.680
	movq	%rax, -72(%rbp)	# cur2.680, cur2
	movq	-40(%rbp), %rax	# svrecode, tmp121
	movq	(%rax), %rax	# svrecode_58->sv_any, D.23091
	movq	(%rax), %rax	# MEM[(struct XPV *)_64].xpv_pv, iftmp.679
	jmp	.L1390	#
.L1389:
	.loc 1 5840 0 discriminator 2
	leaq	-72(%rbp), %rcx	#, tmp122
	movq	-40(%rbp), %rax	# svrecode, tmp123
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp122,
	movq	%rax, %rdi	# tmp123,
	call	Perl_sv_2pv_flags	#
.L1390:
	.loc 1 5840 0 discriminator 1
	movq	%rax, -56(%rbp)	# iftmp.679, pv2
	jmp	.L1391	#
.L1388:
	.loc 1 5843 0 is_stmt 1
	movq	-80(%rbp), %rdx	# cur1, cur1.681
	movq	-64(%rbp), %rax	# pv1, tmp124
	movq	%rdx, %rsi	# cur1.681,
	movq	%rax, %rdi	# tmp124,
	call	Perl_newSVpvn	#
	movq	%rax, -40(%rbp)	# tmp125, svrecode
	.loc 1 5844 0
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.682
	movq	-40(%rbp), %rax	# svrecode, tmp126
	movq	%rdx, %rsi	# PL_encoding.682,
	movq	%rax, %rdi	# tmp126,
	call	Perl_sv_recode_to_utf8	#
	.loc 1 5845 0
	movq	-40(%rbp), %rax	# svrecode, tmp127
	movl	12(%rax), %eax	# svrecode_69->sv_flags, D.23090
	andl	$262144, %eax	#, D.23090
	testl	%eax, %eax	# D.23090
	je	.L1392	#,
	.loc 1 5845 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# svrecode, tmp128
	movq	(%rax), %rax	# svrecode_69->sv_any, D.23091
	movq	8(%rax), %rax	# MEM[(struct XPV *)_73].xpv_cur, cur1.684
	movq	%rax, -80(%rbp)	# cur1.684, cur1
	movq	-40(%rbp), %rax	# svrecode, tmp129
	movq	(%rax), %rax	# svrecode_69->sv_any, D.23091
	movq	(%rax), %rax	# MEM[(struct XPV *)_75].xpv_pv, iftmp.683
	jmp	.L1393	#
.L1392:
	.loc 1 5845 0 discriminator 2
	leaq	-80(%rbp), %rcx	#, tmp130
	movq	-40(%rbp), %rax	# svrecode, tmp131
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp130,
	movq	%rax, %rdi	# tmp131,
	call	Perl_sv_2pv_flags	#
.L1393:
	.loc 1 5845 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.683, pv1
.L1391:
	.loc 1 5848 0 is_stmt 1
	movq	-80(%rbp), %rdx	# cur1, cur1.685
	movq	-72(%rbp), %rax	# cur2, cur2.686
	cmpq	%rax, %rdx	# cur2.686, cur1.685
	je	.L1386	#,
	.loc 1 5849 0
	movq	-40(%rbp), %rax	# svrecode, tmp132
	movq	%rax, %rdi	# tmp132,
	call	Perl_sv_free	#
	.loc 1 5850 0
	movl	$0, %eax	#, D.23089
	jmp	.L1402	#
.L1387:
.LBB69:
	.loc 1 5854 0
	movb	$1, -85(%rbp)	#, is_utf8
	.loc 1 5856 0
	movl	12(%rbx), %eax	# sv1_24(D)->sv_flags, D.23090
	andl	$536870912, %eax	#, D.23090
	testl	%eax, %eax	# D.23090
	je	.L1395	#,
.LBB70:
	.loc 1 5859 0
	leaq	-85(%rbp), %rdx	#, tmp133
	leaq	-80(%rbp), %rcx	#, tmp134
	movq	-64(%rbp), %rax	# pv1, tmp135
	movq	%rcx, %rsi	# tmp134,
	movq	%rax, %rdi	# tmp135,
	call	Perl_bytes_from_utf8	#
	movq	%rax, -32(%rbp)	# tmp136, pv
	.loc 1 5861 0
	movq	-32(%rbp), %rax	# pv, tmp137
	cmpq	-64(%rbp), %rax	# pv1, tmp137
	je	.L1396	#,
	.loc 1 5862 0
	movq	-32(%rbp), %rax	# pv, tmp138
	movq	%rax, -48(%rbp)	# tmp138, tpv
	movq	-48(%rbp), %rax	# tpv, tmp139
	movq	%rax, -64(%rbp)	# tmp139, pv1
.LBE70:
	jmp	.L1397	#
.L1396:
	jmp	.L1397	#
.L1395:
.LBB71:
	.loc 1 5867 0
	leaq	-85(%rbp), %rdx	#, tmp140
	leaq	-72(%rbp), %rcx	#, tmp141
	movq	-56(%rbp), %rax	# pv2, tmp142
	movq	%rcx, %rsi	# tmp141,
	movq	%rax, %rdi	# tmp142,
	call	Perl_bytes_from_utf8	#
	movq	%rax, -24(%rbp)	# tmp143, pv
	.loc 1 5869 0
	movq	-24(%rbp), %rax	# pv, tmp144
	cmpq	-56(%rbp), %rax	# pv2, tmp144
	je	.L1397	#,
	.loc 1 5870 0
	movq	-24(%rbp), %rax	# pv, tmp145
	movq	%rax, -48(%rbp)	# tmp145, tpv
	movq	-48(%rbp), %rax	# tpv, tmp146
	movq	%rax, -56(%rbp)	# tmp146, pv2
.L1397:
.LBE71:
	.loc 1 5872 0
	movzbl	-85(%rbp), %eax	# is_utf8, is_utf8.687
	testb	%al, %al	# is_utf8.687
	je	.L1386	#,
	.loc 1 5874 0
	movl	$0, %eax	#, D.23089
	jmp	.L1402	#
.L1386:
.LBE69:
	.loc 1 5879 0
	movq	-80(%rbp), %rdx	# cur1, cur1.688
	movq	-72(%rbp), %rax	# cur2, cur2.689
	cmpq	%rax, %rdx	# cur2.689, cur1.688
	jne	.L1399	#,
	.loc 1 5880 0
	movq	-80(%rbp), %rdx	# cur1, cur1.690
	movq	-56(%rbp), %rcx	# pv2, tmp147
	movq	-64(%rbp), %rax	# pv1, tmp148
	movq	%rcx, %rsi	# tmp147,
	movq	%rax, %rdi	# tmp148,
	call	memcmp	#
	testl	%eax, %eax	# D.23093
	sete	%al	#, D.23094
	movzbl	%al, %eax	# D.23094, tmp149
	movl	%eax, -84(%rbp)	# tmp149, eq
.L1399:
	.loc 1 5882 0
	cmpq	$0, -40(%rbp)	#, svrecode
	je	.L1400	#,
	.loc 1 5883 0
	movq	-40(%rbp), %rax	# svrecode, tmp150
	movq	%rax, %rdi	# tmp150,
	call	Perl_sv_free	#
.L1400:
	.loc 1 5885 0
	cmpq	$0, -48(%rbp)	#, tpv
	je	.L1401	#,
	.loc 1 5886 0
	movq	-48(%rbp), %rax	# tpv, tmp151
	movq	%rax, %rdi	# tmp151,
	call	Perl_safesysfree	#
.L1401:
	.loc 1 5888 0
	movl	-84(%rbp), %eax	# eq, D.23089
.L1402:
	.loc 1 5889 0
	addq	$80, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE119:
	.size	Perl_sv_eq, .-Perl_sv_eq
	.globl	Perl_sv_cmp
	.type	Perl_sv_cmp, @function
Perl_sv_cmp:
.LFB120:
	.loc 1 5904 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$64, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv1, sv1
	movq	%rsi, %r12	# sv2, sv2
	.loc 1 5906 0
	movq	$0, -32(%rbp)	#, tpv
	.loc 1 5908 0
	movq	$0, -24(%rbp)	#, svrecode
	.loc 1 5910 0
	testq	%rbx, %rbx	# sv1
	jne	.L1404	#,
	.loc 1 5911 0
	movq	$.LC1, -48(%rbp)	#, pv1
	.loc 1 5912 0
	movq	$0, -64(%rbp)	#, cur1
	jmp	.L1405	#
.L1404:
	.loc 1 5915 0
	movl	12(%rbx), %eax	# sv1_20(D)->sv_flags, D.23095
	andl	$262144, %eax	#, D.23095
	testl	%eax, %eax	# D.23095
	je	.L1406	#,
	.loc 1 5915 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv1_20(D)->sv_any, D.23096
	movq	8(%rax), %rax	# MEM[(struct XPV *)_24].xpv_cur, cur1.692
	movq	%rax, -64(%rbp)	# cur1.692, cur1
	movq	(%rbx), %rax	# sv1_20(D)->sv_any, D.23096
	movq	(%rax), %rax	# MEM[(struct XPV *)_26].xpv_pv, iftmp.691
	jmp	.L1407	#
.L1406:
	.loc 1 5915 0 discriminator 2
	leaq	-64(%rbp), %rax	#, tmp118
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp118,
	movq	%rbx, %rdi	# sv1,
	call	Perl_sv_2pv_flags	#
.L1407:
	.loc 1 5915 0 discriminator 3
	movq	%rax, -48(%rbp)	# iftmp.691, pv1
.L1405:
	.loc 1 5917 0 is_stmt 1
	testq	%r12, %r12	# sv2
	jne	.L1408	#,
	.loc 1 5918 0
	movq	$.LC1, -40(%rbp)	#, pv2
	.loc 1 5919 0
	movq	$0, -56(%rbp)	#, cur2
	jmp	.L1409	#
.L1408:
	.loc 1 5922 0
	movl	12(%r12), %eax	# sv2_30(D)->sv_flags, D.23095
	andl	$262144, %eax	#, D.23095
	testl	%eax, %eax	# D.23095
	je	.L1410	#,
	.loc 1 5922 0 is_stmt 0 discriminator 1
	movq	(%r12), %rax	# sv2_30(D)->sv_any, D.23096
	movq	8(%rax), %rax	# MEM[(struct XPV *)_34].xpv_cur, cur2.694
	movq	%rax, -56(%rbp)	# cur2.694, cur2
	movq	(%r12), %rax	# sv2_30(D)->sv_any, D.23096
	movq	(%rax), %rax	# MEM[(struct XPV *)_36].xpv_pv, iftmp.693
	jmp	.L1411	#
.L1410:
	.loc 1 5922 0 discriminator 2
	leaq	-56(%rbp), %rax	#, tmp119
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp119,
	movq	%r12, %rdi	# sv2,
	call	Perl_sv_2pv_flags	#
.L1411:
	.loc 1 5922 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.693, pv2
.L1409:
	.loc 1 5924 0 is_stmt 1
	movq	-64(%rbp), %rax	# cur1, cur1.695
	testq	%rax, %rax	# cur1.695
	je	.L1412	#,
	.loc 1 5924 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# cur2, cur2.696
	testq	%rax, %rax	# cur2.696
	je	.L1412	#,
	movl	12(%rbx), %edx	# sv1_20(D)->sv_flags, D.23095
	movl	12(%r12), %eax	# sv2_30(D)->sv_flags, D.23095
	xorl	%edx, %eax	# D.23095, D.23095
	andl	$536870912, %eax	#, D.23095
	testl	%eax, %eax	# D.23095
	je	.L1412	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.697
	movzbl	37(%rax), %eax	# PL_curcop.697_46->op_private, D.23097
	movzbl	%al, %eax	# D.23097, D.23098
	andl	$8, %eax	#, D.23098
	testl	%eax, %eax	# D.23098
	jne	.L1412	#,
	.loc 1 5927 0 is_stmt 1
	movl	12(%rbx), %eax	# sv1_20(D)->sv_flags, D.23095
	andl	$536870912, %eax	#, D.23095
	testl	%eax, %eax	# D.23095
	je	.L1413	#,
	.loc 1 5928 0
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.698
	testq	%rax, %rax	# PL_encoding.698
	je	.L1414	#,
	.loc 1 5929 0
	movq	-56(%rbp), %rdx	# cur2, cur2.699
	movq	-40(%rbp), %rax	# pv2, tmp120
	movq	%rdx, %rsi	# cur2.699,
	movq	%rax, %rdi	# tmp120,
	call	Perl_newSVpvn	#
	movq	%rax, -24(%rbp)	# tmp121, svrecode
	.loc 1 5930 0
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.700
	movq	-24(%rbp), %rax	# svrecode, tmp122
	movq	%rdx, %rsi	# PL_encoding.700,
	movq	%rax, %rdi	# tmp122,
	call	Perl_sv_recode_to_utf8	#
	.loc 1 5931 0
	movq	-24(%rbp), %rax	# svrecode, tmp123
	movl	12(%rax), %eax	# svrecode_54->sv_flags, D.23095
	andl	$262144, %eax	#, D.23095
	testl	%eax, %eax	# D.23095
	je	.L1415	#,
	.loc 1 5931 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# svrecode, tmp124
	movq	(%rax), %rax	# svrecode_54->sv_any, D.23096
	movq	8(%rax), %rax	# MEM[(struct XPV *)_58].xpv_cur, cur2.702
	movq	%rax, -56(%rbp)	# cur2.702, cur2
	movq	-24(%rbp), %rax	# svrecode, tmp125
	movq	(%rax), %rax	# svrecode_54->sv_any, D.23096
	movq	(%rax), %rax	# MEM[(struct XPV *)_60].xpv_pv, iftmp.701
	jmp	.L1416	#
.L1415:
	.loc 1 5931 0 discriminator 2
	leaq	-56(%rbp), %rcx	#, tmp126
	movq	-24(%rbp), %rax	# svrecode, tmp127
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp126,
	movq	%rax, %rdi	# tmp127,
	call	Perl_sv_2pv_flags	#
.L1416:
	.loc 1 5931 0 discriminator 1
	movq	%rax, -40(%rbp)	# iftmp.701, pv2
	jmp	.L1412	#
.L1414:
	.loc 1 5934 0 is_stmt 1
	leaq	-56(%rbp), %rdx	#, tmp128
	movq	-40(%rbp), %rax	# pv2, tmp129
	movq	%rdx, %rsi	# tmp128,
	movq	%rax, %rdi	# tmp129,
	call	Perl_bytes_to_utf8	#
	movq	%rax, -32(%rbp)	# tmp130, tpv
	movq	-32(%rbp), %rax	# tpv, tmp131
	movq	%rax, -40(%rbp)	# tmp131, pv2
	jmp	.L1412	#
.L1413:
	.loc 1 5938 0
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.703
	testq	%rax, %rax	# PL_encoding.703
	je	.L1418	#,
	.loc 1 5939 0
	movq	-64(%rbp), %rdx	# cur1, cur1.704
	movq	-48(%rbp), %rax	# pv1, tmp132
	movq	%rdx, %rsi	# cur1.704,
	movq	%rax, %rdi	# tmp132,
	call	Perl_newSVpvn	#
	movq	%rax, -24(%rbp)	# tmp133, svrecode
	.loc 1 5940 0
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.705
	movq	-24(%rbp), %rax	# svrecode, tmp134
	movq	%rdx, %rsi	# PL_encoding.705,
	movq	%rax, %rdi	# tmp134,
	call	Perl_sv_recode_to_utf8	#
	.loc 1 5941 0
	movq	-24(%rbp), %rax	# svrecode, tmp135
	movl	12(%rax), %eax	# svrecode_68->sv_flags, D.23095
	andl	$262144, %eax	#, D.23095
	testl	%eax, %eax	# D.23095
	je	.L1419	#,
	.loc 1 5941 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# svrecode, tmp136
	movq	(%rax), %rax	# svrecode_68->sv_any, D.23096
	movq	8(%rax), %rax	# MEM[(struct XPV *)_72].xpv_cur, cur1.707
	movq	%rax, -64(%rbp)	# cur1.707, cur1
	movq	-24(%rbp), %rax	# svrecode, tmp137
	movq	(%rax), %rax	# svrecode_68->sv_any, D.23096
	movq	(%rax), %rax	# MEM[(struct XPV *)_74].xpv_pv, iftmp.706
	jmp	.L1420	#
.L1419:
	.loc 1 5941 0 discriminator 2
	leaq	-64(%rbp), %rcx	#, tmp138
	movq	-24(%rbp), %rax	# svrecode, tmp139
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp138,
	movq	%rax, %rdi	# tmp139,
	call	Perl_sv_2pv_flags	#
.L1420:
	.loc 1 5941 0 discriminator 3
	movq	%rax, -48(%rbp)	# iftmp.706, pv1
	jmp	.L1412	#
.L1418:
	.loc 1 5944 0 is_stmt 1
	leaq	-64(%rbp), %rdx	#, tmp140
	movq	-48(%rbp), %rax	# pv1, tmp141
	movq	%rdx, %rsi	# tmp140,
	movq	%rax, %rdi	# tmp141,
	call	Perl_bytes_to_utf8	#
	movq	%rax, -32(%rbp)	# tmp142, tpv
	movq	-32(%rbp), %rax	# tpv, tmp143
	movq	%rax, -48(%rbp)	# tmp143, pv1
.L1412:
	.loc 1 5949 0
	movq	-64(%rbp), %rax	# cur1, cur1.708
	testq	%rax, %rax	# cur1.708
	jne	.L1421	#,
	.loc 1 5950 0
	movq	-56(%rbp), %rax	# cur2, cur2.710
	testq	%rax, %rax	# cur2.710
	je	.L1422	#,
	.loc 1 5950 0 is_stmt 0 discriminator 1
	movl	$-1, %eax	#, iftmp.709
	jmp	.L1423	#
.L1422:
	.loc 1 5950 0 discriminator 2
	movl	$0, %eax	#, iftmp.709
.L1423:
	.loc 1 5950 0 discriminator 4
	movl	%eax, -72(%rbp)	# iftmp.709, cmp
	jmp	.L1424	#
.L1421:
	.loc 1 5951 0 is_stmt 1
	movq	-56(%rbp), %rax	# cur2, cur2.711
	testq	%rax, %rax	# cur2.711
	jne	.L1425	#,
	.loc 1 5952 0
	movl	$1, -72(%rbp)	#, cmp
	jmp	.L1424	#
.L1425:
.LBB72:
	.loc 1 5954 0
	movq	-56(%rbp), %rdx	# cur2, cur2.712
	movq	-64(%rbp), %rax	# cur1, cur1.713
	cmpq	%rax, %rdx	# cur1.713, cur2.712
	cmova	%rax, %rdx	# cur2.712,, cur1.713, D.23099
	movq	-40(%rbp), %rcx	# pv2, tmp144
	movq	-48(%rbp), %rax	# pv1, tmp145
	movq	%rcx, %rsi	# tmp144,
	movq	%rax, %rdi	# tmp145,
	call	memcmp	#
	movl	%eax, -68(%rbp)	# tmp146, retval
	.loc 1 5956 0
	cmpl	$0, -68(%rbp)	#, retval
	je	.L1426	#,
	.loc 1 5957 0
	cmpl	$0, -68(%rbp)	#, retval
	jns	.L1427	#,
	.loc 1 5957 0 is_stmt 0 discriminator 1
	movl	$-1, %eax	#, iftmp.714
	jmp	.L1428	#
.L1427:
	.loc 1 5957 0 discriminator 2
	movl	$1, %eax	#, iftmp.714
.L1428:
	.loc 1 5957 0 discriminator 1
	movl	%eax, -72(%rbp)	# iftmp.714, cmp
	jmp	.L1424	#
.L1426:
	.loc 1 5958 0 is_stmt 1
	movq	-64(%rbp), %rdx	# cur1, cur1.715
	movq	-56(%rbp), %rax	# cur2, cur2.716
	cmpq	%rax, %rdx	# cur2.716, cur1.715
	jne	.L1429	#,
	.loc 1 5959 0
	movl	$0, -72(%rbp)	#, cmp
	jmp	.L1424	#
.L1429:
	.loc 1 5961 0
	movq	-64(%rbp), %rdx	# cur1, cur1.718
	movq	-56(%rbp), %rax	# cur2, cur2.719
	cmpq	%rax, %rdx	# cur2.719, cur1.718
	jae	.L1430	#,
	.loc 1 5961 0 is_stmt 0 discriminator 1
	movl	$-1, %eax	#, iftmp.717
	jmp	.L1431	#
.L1430:
	.loc 1 5961 0 discriminator 2
	movl	$1, %eax	#, iftmp.717
.L1431:
	.loc 1 5961 0 discriminator 3
	movl	%eax, -72(%rbp)	# iftmp.717, cmp
.L1424:
.LBE72:
	.loc 1 5965 0 is_stmt 1
	cmpq	$0, -24(%rbp)	#, svrecode
	je	.L1432	#,
	.loc 1 5966 0
	movq	-24(%rbp), %rax	# svrecode, tmp147
	movq	%rax, %rdi	# tmp147,
	call	Perl_sv_free	#
.L1432:
	.loc 1 5968 0
	cmpq	$0, -32(%rbp)	#, tpv
	je	.L1433	#,
	.loc 1 5969 0
	movq	-32(%rbp), %rax	# tpv, tmp148
	movq	%rax, %rdi	# tmp148,
	call	Perl_safesysfree	#
.L1433:
	.loc 1 5971 0
	movl	-72(%rbp), %eax	# cmp, D.23100
	.loc 1 5972 0
	addq	$64, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE120:
	.size	Perl_sv_cmp, .-Perl_sv_cmp
	.globl	Perl_sv_cmp_locale
	.type	Perl_sv_cmp_locale, @function
Perl_sv_cmp_locale:
.LFB121:
	.loc 1 5986 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, %rax	# sv1, sv1
	movq	%rsi, %rdx	# sv2, sv2
	.loc 1 6029 0
	movq	%rdx, %rsi	# sv2,
	movq	%rax, %rdi	# sv1,
	call	Perl_sv_cmp	#
	.loc 1 6030 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE121:
	.size	Perl_sv_cmp_locale, .-Perl_sv_cmp_locale
	.section	.rodata
.LC54:
	.string	"\n"
.LC55:
	.string	"\n\n"
.LC56:
	.string	"Wide character in $/"
	.text
	.globl	Perl_sv_gets
	.type	Perl_sv_gets, @function
Perl_sv_gets:
.LFB122:
	.loc 1 6105 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r15	#
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$8456, %rsp	#,
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	movq	%rdi, %rbx	# sv, sv
	movq	%rsi, %r13	# fp, fp
	movl	%edx, -8484(%rbp)	# append, append
	.loc 1 6105 0
	movq	%fs:40, %rax	#, tmp417
	movq	%rax, -56(%rbp)	# tmp417, D.23115
	xorl	%eax, %eax	# tmp417
	.loc 1 6111 0
	movl	$0, -8468(%rbp)	#, i
	.loc 1 6112 0
	movl	$0, -8464(%rbp)	#, rspara
	.loc 1 6115 0
	movl	12(%rbx), %eax	# sv_53(D)->sv_flags, D.23103
	andl	$9961472, %eax	#, D.23103
	testl	%eax, %eax	# D.23103
	je	.L1438	#,
	.loc 1 6116 0
	movl	-8484(%rbp), %eax	# append, append.721
	testl	%eax, %eax	# append.721
	je	.L1439	#,
	.loc 1 6116 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.720
	jmp	.L1440	#
.L1439:
	.loc 1 6116 0 discriminator 2
	movl	$4, %eax	#, iftmp.720
.L1440:
	.loc 1 6116 0 discriminator 3
	movl	%eax, %esi	# iftmp.720,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal_flags	#
.L1438:
	.loc 1 6122 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_53(D)->sv_flags, D.23103
	movzbl	%al, %eax	# D.23103, D.23103
	cmpl	$3, %eax	#, D.23103
	ja	.L1441	#,
	.loc 1 6122 0 is_stmt 0 discriminator 2
	movl	$4, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.23104
	je	.L1443	#,
.L1441:
	.loc 1 6122 0 discriminator 1
	nop
.L1443:
	.loc 1 6124 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_53(D)->sv_flags, D.23103
	andl	$-134217729, %eax	#, D.23103
	movl	%eax, 12(%rbx)	# D.23103, sv_53(D)->sv_flags
	.loc 1 6126 0
	movl	-8484(%rbp), %eax	# append, append.723
	testl	%eax, %eax	# append.723
	je	.L1444	#,
	.loc 1 6127 0
	movq	%r13, %rdi	# fp,
	call	PerlIO_isutf8	#
	testl	%eax, %eax	# D.23105
	je	.L1445	#,
	.loc 1 6128 0
	movl	12(%rbx), %eax	# sv_53(D)->sv_flags, D.23103
	andl	$536870912, %eax	#, D.23103
	testl	%eax, %eax	# D.23103
	jne	.L1444	#,
	.loc 1 6129 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 6130 0
	leaq	-8484(%rbp), %rax	#, tmp372
	movl	$0, %edx	#,
	movq	%rax, %rsi	# tmp372,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_pos_u2b	#
	jmp	.L1444	#
.L1445:
	.loc 1 6132 0
	movl	12(%rbx), %eax	# sv_53(D)->sv_flags, D.23103
	andl	$536870912, %eax	#, D.23103
	testl	%eax, %eax	# D.23103
	je	.L1444	#,
.LBB73:
	.loc 1 6133 0
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -8432(%rbp)	# tmp373, tsv
	.loc 1 6134 0
	movq	-8432(%rbp), %rax	# tsv, tmp374
	movl	$0, %edx	#,
	movq	%r13, %rsi	# fp,
	movq	%rax, %rdi	# tmp374,
	call	Perl_sv_gets	#
	.loc 1 6135 0
	movq	-8432(%rbp), %rax	# tsv, tmp375
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp375,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 6136 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movl	-8484(%rbp), %edx	# append, append.724
	movslq	%edx, %rdx	# append.724, D.23107
	movq	%rdx, 8(%rax)	# D.23107, MEM[(struct XPV *)_74].xpv_cur
	.loc 1 6137 0
	movq	-8432(%rbp), %rax	# tsv, tmp376
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp376,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_catsv_flags	#
	.loc 1 6138 0
	movq	-8432(%rbp), %rax	# tsv, tmp377
	movq	%rax, %rdi	# tmp377,
	call	Perl_sv_free	#
	.loc 1 6139 0
	jmp	.L1447	#
.L1444:
.LBE73:
	.loc 1 6143 0
	movl	12(%rbx), %eax	# sv_53(D)->sv_flags, D.23103
	andl	$1223753727, %eax	#, D.23103
	movl	%eax, 12(%rbx)	# D.23103, sv_53(D)->sv_flags
	movl	12(%rbx), %eax	# sv_53(D)->sv_flags, D.23103
	orl	$67371008, %eax	#, D.23103
	movl	%eax, 12(%rbx)	# D.23103, sv_53(D)->sv_flags
	.loc 1 6144 0
	movq	%r13, %rdi	# fp,
	call	PerlIO_isutf8	#
	testl	%eax, %eax	# D.23105
	je	.L1448	#,
	.loc 1 6145 0
	movl	12(%rbx), %eax	# sv_53(D)->sv_flags, D.23103
	orl	$536870912, %eax	#, D.23103
	movl	%eax, 12(%rbx)	# D.23103, sv_53(D)->sv_flags
.L1448:
	.loc 1 6147 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.725
	cmpq	$PL_compiling, %rax	#, PL_curcop.725
	jne	.L1449	#,
	.loc 1 6149 0
	movq	$.LC54, -8440(%rbp)	#, rsptr
	.loc 1 6150 0
	movq	$1, -8448(%rbp)	#, rslen
	jmp	.L1450	#
.L1449:
	.loc 1 6152 0
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.726
	movl	12(%rax), %eax	# PL_rs.726_86->sv_flags, D.23103
	andl	$118423552, %eax	#, D.23103
	testl	%eax, %eax	# D.23103
	jne	.L1451	#,
.LBB74:
	.loc 1 6159 0
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_fileno	#
	leaq	-8400(%rbp), %rdx	#, tmp378
	movq	%rdx, %rsi	# tmp378,
	movl	%eax, %edi	# D.23105,
	call	fstat	#
	testl	%eax, %eax	# D.23105
	jne	.L1452	#,
	.loc 1 6159 0 is_stmt 0 discriminator 1
	movl	-8376(%rbp), %eax	# st.st_mode, D.23103
	andl	$61440, %eax	#, D.23103
	cmpl	$32768, %eax	#, D.23103
	jne	.L1452	#,
.LBB75:
	.loc 1 6160 0 is_stmt 1
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_tell	#
	movq	%rax, -8424(%rbp)	# tmp379, offset
	.loc 1 6161 0
	cmpq	$-1, -8424(%rbp)	#, offset
	je	.L1452	#,
	.loc 1 6161 0 is_stmt 0 discriminator 1
	movq	-8352(%rbp), %rdx	# st.st_size, D.23108
	movl	-8484(%rbp), %eax	# append, append.727
	cltq
	addq	%rdx, %rax	# D.23108, D.23108
	cmpq	-8424(%rbp), %rax	# offset, D.23108
	jle	.L1452	#,
	.loc 1 6162 0 is_stmt 1
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_98].xpv_len, D.23107
	movq	-8352(%rbp), %rax	# st.st_size, D.23108
	subq	-8424(%rbp), %rax	# offset, D.23108
	movq	%rax, %rcx	# D.23108, D.23108
	movl	-8484(%rbp), %eax	# append, append.729
	cltq
	addq	%rcx, %rax	# D.23108, D.23108
	addq	$1, %rax	#, D.23108
	cmpq	%rax, %rdx	# D.23107, D.23107
	jae	.L1452	#,
	.loc 1 6162 0 is_stmt 0 discriminator 1
	movq	-8352(%rbp), %rax	# st.st_size, D.23108
	subq	-8424(%rbp), %rax	# offset, D.23108
	movq	%rax, %rdx	# D.23108, D.23108
	movl	-8484(%rbp), %eax	# append, append.730
	cltq
	addq	%rdx, %rax	# D.23108, D.23108
	addq	$1, %rax	#, D.23108
	movq	%rax, %rsi	# D.23107,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L1452:
.LBE75:
	.loc 1 6165 0 is_stmt 1 discriminator 1
	movq	$0, -8440(%rbp)	#, rsptr
	.loc 1 6166 0 discriminator 1
	movq	$0, -8448(%rbp)	#, rslen
.LBE74:
	jmp	.L1450	#
.L1451:
	.loc 1 6168 0
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.731
	movl	12(%rax), %eax	# PL_rs.731_118->sv_flags, D.23103
	andl	$524288, %eax	#, D.23103
	testl	%eax, %eax	# D.23103
	je	.L1454	#,
	.loc 1 6168 0 is_stmt 0 discriminator 1
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.732
	movq	(%rax), %rax	# PL_rs.732_121->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XRV *)_122].xrv_rv, D.23109
	movl	12(%rax), %eax	# _123->sv_flags, D.23103
	andl	$65536, %eax	#, D.23103
	testl	%eax, %eax	# D.23103
	je	.L1455	#,
	.loc 1 6168 0 discriminator 2
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.733
	movq	(%rax), %rax	# PL_rs.733_126->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XRV *)_127].xrv_rv, D.23109
	movq	(%rax), %rax	# _128->sv_any, D.23106
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_129].xiv_iv, D.23108
	testq	%rax, %rax	# D.23108
	jg	.L1456	#,
	jmp	.L1454	#
.L1455:
	.loc 1 6168 0 discriminator 3
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.734
	movq	(%rax), %rax	# PL_rs.734_131->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XRV *)_132].xrv_rv, D.23109
	movq	%rax, %rdi	# D.23109,
	call	Perl_sv_2iv	#
	testq	%rax, %rax	# D.23108
	jle	.L1454	#,
.L1456:
.LBB76:
	.loc 1 6173 0 is_stmt 1
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.736
	movq	(%rax), %rax	# PL_rs.736_135->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XRV *)_136].xrv_rv, D.23109
	movl	12(%rax), %eax	# _137->sv_flags, D.23103
	andl	$65536, %eax	#, D.23103
	testl	%eax, %eax	# D.23103
	je	.L1457	#,
	.loc 1 6173 0 is_stmt 0 discriminator 1
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.737
	movq	(%rax), %rax	# PL_rs.737_140->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XRV *)_141].xrv_rv, D.23109
	movq	(%rax), %rax	# _142->sv_any, D.23106
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_143].xiv_iv, D.23108
	jmp	.L1458	#
.L1457:
	.loc 1 6173 0 discriminator 2
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.738
	movq	(%rax), %rax	# PL_rs.738_146->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XRV *)_147].xrv_rv, D.23109
	movq	%rax, %rdi	# D.23109,
	call	Perl_sv_2iv	#
.L1458:
	.loc 1 6173 0 discriminator 3
	movl	%eax, -8452(%rbp)	# iftmp.735, recsize
	.loc 1 6174 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_152].xpv_len, D.23107
	movl	-8484(%rbp), %ecx	# append, append.740
	movl	-8452(%rbp), %eax	# recsize, tmp380
	addl	%ecx, %eax	# append.740, D.23105
	addl	$1, %eax	#, D.23105
	cltq
	cmpq	%rax, %rdx	# D.23107, D.23107
	jae	.L1459	#,
	.loc 1 6174 0 is_stmt 0 discriminator 1
	movl	-8484(%rbp), %edx	# append, append.741
	movl	-8452(%rbp), %eax	# recsize, tmp381
	addl	%edx, %eax	# append.741, D.23105
	addl	$1, %eax	#, D.23105
	cltq
	movq	%rax, %rsi	# D.23107,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
	jmp	.L1460	#
.L1459:
	.loc 1 6174 0 discriminator 2
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XPV *)_163].xpv_pv, iftmp.739
.L1460:
	.loc 1 6174 0 discriminator 3
	movl	-8484(%rbp), %edx	# append, append.742
	movslq	%edx, %rdx	# append.742, D.23110
	addq	%rdx, %rax	# D.23110, tmp382
	movq	%rax, -8416(%rbp)	# tmp382, buffer
	.loc 1 6184 0 is_stmt 1 discriminator 3
	movl	-8452(%rbp), %eax	# recsize, tmp383
	movslq	%eax, %rdx	# tmp383, D.23107
	movq	-8416(%rbp), %rax	# buffer, tmp384
	movq	%rax, %rsi	# tmp384,
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_read	#
	movl	%eax, -8460(%rbp)	# D.23108, bytesread
	.loc 1 6186 0 discriminator 3
	cmpl	$0, -8460(%rbp)	#, bytesread
	jns	.L1461	#,
	.loc 1 6187 0
	movl	$0, -8460(%rbp)	#, bytesread
.L1461:
	.loc 1 6188 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movl	-8484(%rbp), %edx	# append, append.743
	addl	%edx, -8460(%rbp)	# append.743, bytesread
	movl	-8460(%rbp), %edx	# bytesread, tmp385
	movslq	%edx, %rdx	# tmp385, D.23107
	movq	%rdx, 8(%rax)	# D.23107, MEM[(struct XPV *)_172].xpv_cur
	.loc 1 6189 0
	movl	-8460(%rbp), %eax	# bytesread, tmp386
	movslq	%eax, %rdx	# tmp386, D.23110
	movq	-8416(%rbp), %rax	# buffer, tmp387
	addq	%rdx, %rax	# D.23110, D.23102
	movb	$0, (%rax)	#, *_177
	.loc 1 6190 0
	jmp	.L1447	#
.L1454:
.LBE76:
	.loc 1 6192 0
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.744
	movl	12(%rax), %eax	# PL_rs.744_178->sv_flags, D.23103
	andl	$262144, %eax	#, D.23103
	testl	%eax, %eax	# D.23103
	je	.L1462	#,
	.loc 1 6192 0 is_stmt 0 discriminator 1
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.745
	movq	(%rax), %rax	# PL_rs.745_181->sv_any, D.23106
	movq	8(%rax), %rax	# MEM[(struct XPV *)_182].xpv_cur, D.23107
	testq	%rax, %rax	# D.23107
	jne	.L1462	#,
	.loc 1 6193 0 is_stmt 1
	movq	$.LC55, -8440(%rbp)	#, rsptr
	.loc 1 6194 0
	movq	$2, -8448(%rbp)	#, rslen
	.loc 1 6195 0
	movl	$1, -8464(%rbp)	#, rspara
	jmp	.L1450	#
.L1462:
	.loc 1 6199 0
	movq	%r13, %rdi	# fp,
	call	PerlIO_isutf8	#
	testl	%eax, %eax	# D.23105
	je	.L1463	#,
	.loc 1 6200 0
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.747
	movl	12(%rax), %eax	# PL_rs.747_187->sv_flags, D.23103
	andl	$537133056, %eax	#, D.23103
	cmpl	$537133056, %eax	#, D.23103
	jne	.L1464	#,
	.loc 1 6200 0 is_stmt 0 discriminator 1
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.748
	movq	(%rax), %rax	# PL_rs.748_190->sv_any, D.23106
	movq	8(%rax), %rax	# MEM[(struct XPV *)_191].xpv_cur, rslen.749
	movq	%rax, -8448(%rbp)	# rslen.749, rslen
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.750
	movq	(%rax), %rax	# PL_rs.750_193->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XPV *)_194].xpv_pv, iftmp.746
	jmp	.L1465	#
.L1464:
	.loc 1 6200 0 discriminator 2
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.751
	leaq	-8448(%rbp), %rdx	#, tmp388
	movq	%rdx, %rsi	# tmp388,
	movq	%rax, %rdi	# PL_rs.751,
	call	Perl_sv_2pvutf8	#
.L1465:
	.loc 1 6200 0 discriminator 1
	movq	%rax, -8440(%rbp)	# iftmp.746, rsptr
	jmp	.L1450	#
.L1463:
	.loc 1 6203 0 is_stmt 1
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.752
	movl	12(%rax), %eax	# PL_rs.752_199->sv_flags, D.23103
	andl	$536870912, %eax	#, D.23103
	testl	%eax, %eax	# D.23103
	je	.L1466	#,
	.loc 1 6204 0
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.753
	movl	$1, %esi	#,
	movq	%rax, %rdi	# PL_rs.753,
	call	Perl_sv_utf8_downgrade	#
	testb	%al, %al	# D.23104
	jne	.L1466	#,
	.loc 1 6205 0
	movl	$.LC56, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1466:
	.loc 1 6208 0
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.755
	movl	12(%rax), %eax	# PL_rs.755_204->sv_flags, D.23103
	andl	$262144, %eax	#, D.23103
	testl	%eax, %eax	# D.23103
	je	.L1467	#,
	.loc 1 6208 0 is_stmt 0 discriminator 1
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.756
	movq	(%rax), %rax	# PL_rs.756_207->sv_any, D.23106
	movq	8(%rax), %rax	# MEM[(struct XPV *)_208].xpv_cur, rslen.757
	movq	%rax, -8448(%rbp)	# rslen.757, rslen
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.758
	movq	(%rax), %rax	# PL_rs.758_210->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XPV *)_211].xpv_pv, iftmp.754
	jmp	.L1468	#
.L1467:
	.loc 1 6208 0 discriminator 2
	movq	PL_rs(%rip), %rax	# PL_rs, PL_rs.759
	leaq	-8448(%rbp), %rcx	#, tmp389
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp389,
	movq	%rax, %rdi	# PL_rs.759,
	call	Perl_sv_2pv_flags	#
.L1468:
	.loc 1 6208 0 discriminator 3
	movq	%rax, -8440(%rbp)	# iftmp.754, rsptr
.L1450:
	.loc 1 6212 0 is_stmt 1
	movq	-8448(%rbp), %rax	# rslen, rslen.761
	testq	%rax, %rax	# rslen.761
	je	.L1469	#,
	.loc 1 6212 0 is_stmt 0 discriminator 1
	movq	-8448(%rbp), %rax	# rslen, rslen.762
	leaq	-1(%rax), %rdx	#, D.23110
	movq	-8440(%rbp), %rax	# rsptr, tmp390
	addq	%rdx, %rax	# D.23110, D.23102
	movzbl	(%rax), %eax	# *_219, iftmp.760
	jmp	.L1470	#
.L1469:
	.loc 1 6212 0 discriminator 2
	movl	$0, %eax	#, iftmp.760
.L1470:
	.loc 1 6212 0 discriminator 3
	movb	%al, -8485(%rbp)	# iftmp.760, %sfp
	.loc 1 6214 0 is_stmt 1 discriminator 3
	cmpl	$0, -8464(%rbp)	#, rspara
	je	.L1471	#,
.L1476:
	.loc 1 6216 0
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_eof	#
	testl	%eax, %eax	# D.23105
	je	.L1472	#,
	.loc 1 6217 0
	movl	$0, %eax	#, D.23102
	jmp	.L1518	#
.L1472:
	.loc 1 6218 0
	movq	%r13, %rdi	# fp,
	call	PerlIO_getc	#
	movl	%eax, -8468(%rbp)	# tmp391, i
	.loc 1 6219 0
	cmpl	$10, -8468(%rbp)	#, i
	je	.L1474	#,
	.loc 1 6220 0
	cmpl	$-1, -8468(%rbp)	#, i
	jne	.L1475	#,
	.loc 1 6221 0
	movl	$0, %eax	#, D.23102
	jmp	.L1518	#
.L1475:
	.loc 1 6222 0
	movl	-8468(%rbp), %eax	# i, tmp392
	movl	%eax, %esi	# tmp392,
	movq	%r13, %rdi	# fp,
	call	PerlIO_ungetc	#
	.loc 1 6223 0
	jmp	.L1471	#
.L1474:
	.loc 1 6225 0
	cmpl	$-1, -8468(%rbp)	#, i
	jne	.L1476	#,
.L1471:
	.loc 1 6236 0
	movq	%r13, %rdi	# fp,
	call	PerlIO_fast_gets	#
	testl	%eax, %eax	# D.23105
	je	.L1477	#,
.LBB77:
	.loc 1 6258 0
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_get_cnt	#
	movl	%eax, %r12d	#, cnt
	.loc 1 6260 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	16(%rax), %rax	# MEM[(struct XPV *)_229].xpv_len, D.23107
	movl	%eax, %edx	# D.23107, D.23111
	movl	-8484(%rbp), %eax	# append, append.763
	subl	%eax, %edx	# append.764, D.23111
	movl	%edx, %eax	# D.23111, D.23111
	movl	%eax, %edx	# D.23111, D.23105
	leal	1(%r12), %eax	#, D.23105
	cmpl	%eax, %edx	# D.23105, D.23105
	jg	.L1478	#,
	.loc 1 6264 0
	movq	-8448(%rbp), %rax	# rslen, rslen.765
	testq	%rax, %rax	# rslen.765
	je	.L1479	#,
	.loc 1 6264 0 is_stmt 0 discriminator 1
	cmpl	$80, %r12d	#, cnt
	jle	.L1479	#,
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	16(%rax), %rax	# MEM[(struct XPV *)_238].xpv_len, D.23107
	movl	%eax, %edx	# D.23107, D.23105
	movl	-8484(%rbp), %eax	# append, append.766
	cmpl	%eax, %edx	# append.766, D.23105
	jle	.L1479	#,
	.loc 1 6266 0 is_stmt 1
	movl	%r12d, %edx	# cnt, cnt.767
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	16(%rax), %rax	# MEM[(struct XPV *)_243].xpv_len, D.23107
	subl	%eax, %edx	# D.23111, D.23111
	movl	-8484(%rbp), %eax	# append, append.768
	addl	%edx, %eax	# D.23111, D.23111
	addl	$1, %eax	#, D.23111
	movl	%eax, -8456(%rbp)	# D.23111, shortbuffered
	.loc 1 6267 0
	subl	-8456(%rbp), %r12d	# shortbuffered, cnt
	jmp	.L1486	#
.L1479:
	.loc 1 6270 0
	movl	$0, -8456(%rbp)	#, shortbuffered
	.loc 1 6272 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_254].xpv_len, D.23107
	testl	%r12d, %r12d	# cnt
	jle	.L1481	#,
	.loc 1 6272 0 is_stmt 0 discriminator 1
	leal	1(%r12), %eax	#, iftmp.771
	jmp	.L1482	#
.L1481:
	.loc 1 6272 0 discriminator 2
	movl	$2, %eax	#, iftmp.771
.L1482:
	.loc 1 6272 0 discriminator 3
	movl	-8484(%rbp), %ecx	# append, append.772
	addl	%ecx, %eax	# append.772, D.23105
	cltq
	cmpq	%rax, %rdx	# D.23107, D.23107
	jae	.L1486	#,
	.loc 1 6272 0 discriminator 1
	testl	%r12d, %r12d	# cnt
	jle	.L1484	#,
	leal	1(%r12), %eax	#, iftmp.773
	jmp	.L1485	#
.L1484:
	.loc 1 6272 0 discriminator 2
	movl	$2, %eax	#, iftmp.773
.L1485:
	.loc 1 6272 0 discriminator 1
	movl	-8484(%rbp), %edx	# append, append.774
	addl	%edx, %eax	# append.774, D.23105
	cltq
	movq	%rax, %rsi	# D.23107,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
	jmp	.L1486	#
.L1478:
	.loc 1 6276 0 is_stmt 1
	movl	$0, -8456(%rbp)	#, shortbuffered
.L1486:
	.loc 1 6277 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	(%rax), %rdx	# MEM[(struct XPV *)_270].xpv_pv, D.23102
	movl	-8484(%rbp), %eax	# append, append.775
	cltq
	leaq	(%rdx,%rax), %r14	#, bp
	.loc 1 6278 0
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_get_ptr	#
	movq	%rax, %r15	#, ptr
.L1487:
	.loc 1 6287 0
	testl	%r12d, %r12d	# cnt
	jle	.L1488	#,
	.loc 1 6288 0
	movq	-8448(%rbp), %rax	# rslen, rslen.776
	testq	%rax, %rax	# rslen.776
	je	.L1489	#,
	.loc 1 6289 0
	jmp	.L1490	#
.L1492:
	.loc 1 6290 0
	subl	$1, %r12d	#, cnt
	.loc 1 6291 0
	movq	%r14, %rax	# bp, bp.777
	leaq	1(%rax), %r14	#, bp
	movq	%r15, %rdx	# ptr, ptr.778
	leaq	1(%rdx), %r15	#, ptr
	movzbl	(%rdx), %edx	# *ptr.778_280, D.23112
	movb	%dl, (%rax)	# D.23112, *bp.777_278
	movzbl	(%rax), %eax	# *bp.777_278, D.23112
	cmpb	-8485(%rbp), %al	# %sfp, D.23112
	jne	.L1490	#,
	.loc 1 6292 0
	jmp	.L1491	#
.L1490:
	.loc 1 6289 0 discriminator 1
	testl	%r12d, %r12d	# cnt
	jg	.L1492	#,
	jmp	.L1488	#
.L1489:
	.loc 1 6296 0
	movslq	%r12d, %rax	# cnt, D.23107
	movq	%rax, %rdx	# D.23107,
	movq	%r15, %rsi	# ptr,
	movq	%r14, %rdi	# bp,
	call	memcpy	#
	.loc 1 6297 0
	movslq	%r12d, %rax	# cnt, D.23110
	addq	%rax, %r14	# D.23110, bp
	.loc 1 6298 0
	movslq	%r12d, %rax	# cnt, D.23110
	addq	%rax, %r15	# D.23110, ptr
	.loc 1 6299 0
	movl	$0, %r12d	#, cnt
.L1488:
	.loc 1 6303 0
	cmpl	$0, -8456(%rbp)	#, shortbuffered
	je	.L1493	#,
	.loc 1 6304 0
	movl	-8456(%rbp), %r12d	# shortbuffered, cnt
	.loc 1 6305 0
	movl	$0, -8456(%rbp)	#, shortbuffered
	.loc 1 6306 0
	movq	%r14, %rdx	# bp, bp.779
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XPV *)_293].xpv_pv, D.23102
	subq	%rax, %rdx	# D.23108, D.23108
	movq	%rdx, %rax	# D.23108, D.23108
	movq	%rax, -8408(%rbp)	# D.23108, bpx
	.loc 1 6307 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	-8408(%rbp), %rdx	# bpx, tmp393
	movq	%rdx, 8(%rax)	# tmp393, MEM[(struct XPV *)_298].xpv_cur
	.loc 1 6308 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_299].xpv_len, D.23107
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	16(%rax), %rcx	# MEM[(struct XPV *)_301].xpv_len, D.23107
	movl	-8484(%rbp), %eax	# append, append.781
	cltq
	addq	%rax, %rcx	# D.23107, D.23107
	movslq	%r12d, %rax	# cnt, D.23107
	addq	%rcx, %rax	# D.23107, D.23107
	addq	$2, %rax	#, D.23107
	cmpq	%rax, %rdx	# D.23107, D.23107
	jae	.L1495	#,
	.loc 1 6308 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_309].xpv_len, D.23107
	movl	-8484(%rbp), %eax	# append, append.782
	cltq
	addq	%rax, %rdx	# D.23107, D.23107
	movslq	%r12d, %rax	# cnt, D.23107
	addq	%rdx, %rax	# D.23107, D.23107
	addq	$2, %rax	#, D.23107
	movq	%rax, %rsi	# D.23107,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L1495:
	.loc 1 6309 0 is_stmt 1
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	(%rax), %rdx	# MEM[(struct XPV *)_320].xpv_pv, D.23102
	movq	-8408(%rbp), %rax	# bpx, tmp394
	leaq	(%rdx,%rax), %r14	#, bp
	.loc 1 6310 0
	jmp	.L1496	#
.L1493:
	.loc 1 6316 0
	movl	%r12d, %edx	# cnt,
	movq	%r15, %rsi	# ptr,
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_set_ptrcnt	#
	.loc 1 6326 0
	movq	%r13, %rdi	# fp,
	call	PerlIO_getc	#
	movl	%eax, -8468(%rbp)	# tmp395, i
	.loc 1 6333 0
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_get_cnt	#
	movl	%eax, %r12d	#, cnt
	.loc 1 6334 0
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_get_ptr	#
	movq	%rax, %r15	#, ptr
	.loc 1 6338 0
	cmpl	$-1, -8468(%rbp)	#, i
	jne	.L1497	#,
	.loc 1 6339 0
	jmp	.L1498	#
.L1497:
	.loc 1 6341 0
	movq	%r14, %rdx	# bp, bp.783
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XPV *)_327].xpv_pv, D.23102
	subq	%rax, %rdx	# D.23108, D.23108
	movq	%rdx, %rax	# D.23108, D.23108
	movq	%rax, -8408(%rbp)	# D.23108, bpx
	.loc 1 6342 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	-8408(%rbp), %rdx	# bpx, tmp396
	movq	%rdx, 8(%rax)	# tmp396, MEM[(struct XPV *)_332].xpv_cur
	.loc 1 6343 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	16(%rax), %rax	# MEM[(struct XPV *)_333].xpv_len, D.23107
	movslq	%r12d, %rcx	# cnt, D.23107
	movq	-8408(%rbp), %rdx	# bpx, tmp397
	addq	%rcx, %rdx	# D.23107, D.23107
	addq	$2, %rdx	#, D.23107
	cmpq	%rdx, %rax	# D.23107, D.23107
	jae	.L1500	#,
	.loc 1 6343 0 is_stmt 0 discriminator 1
	movslq	%r12d, %rdx	# cnt, D.23107
	movq	-8408(%rbp), %rax	# bpx, tmp398
	addq	%rdx, %rax	# D.23107, D.23107
	addq	$2, %rax	#, D.23107
	movq	%rax, %rsi	# D.23107,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L1500:
	.loc 1 6344 0 is_stmt 1
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	(%rax), %rdx	# MEM[(struct XPV *)_344].xpv_pv, D.23102
	movq	-8408(%rbp), %rax	# bpx, tmp399
	leaq	(%rdx,%rax), %r14	#, bp
	.loc 1 6346 0
	movq	%r14, %rax	# bp, bp.785
	leaq	1(%rax), %r14	#, bp
	movl	-8468(%rbp), %edx	# i, tmp400
	movb	%dl, (%rax)	# D.23112, *bp.785_347
	.loc 1 6348 0
	movq	-8448(%rbp), %rax	# rslen, rslen.786
	testq	%rax, %rax	# rslen.786
	je	.L1496	#,
	.loc 1 6348 0 is_stmt 0 discriminator 1
	movl	-8468(%rbp), %eax	# i, tmp401
	cmpb	-8485(%rbp), %al	# %sfp, D.23112
	jne	.L1496	#,
	.loc 1 6349 0 is_stmt 1
	jmp	.L1491	#
.L1496:
	.loc 1 6350 0
	jmp	.L1487	#
.L1491:
	.loc 1 6353 0
	movq	-8448(%rbp), %rax	# rslen, rslen.787
	cmpq	$1, %rax	#, rslen.787
	jbe	.L1501	#,
	.loc 1 6353 0 is_stmt 0 discriminator 1
	movq	%r14, %rdx	# bp, bp.788
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XPV *)_354].xpv_pv, D.23102
	subq	%rax, %rdx	# D.23108, D.23108
	movq	%rdx, %rax	# D.23108, D.23108
	movq	%rax, %rdx	# D.23108, D.23107
	movq	-8448(%rbp), %rax	# rslen, rslen.789
	cmpq	%rax, %rdx	# rslen.789, D.23107
	jb	.L1487	#,
.L1501:
	.loc 1 6354 0 is_stmt 1 discriminator 2
	movq	-8448(%rbp), %rdx	# rslen, rslen.790
	movq	-8448(%rbp), %rax	# rslen, rslen.791
	negq	%rax	# D.23110
	leaq	(%r14,%rax), %rcx	#, D.23113
	movq	-8440(%rbp), %rax	# rsptr, tmp402
	movq	%rax, %rsi	# tmp402,
	movq	%rcx, %rdi	# D.23113,
	call	memcmp	#
	.loc 1 6353 0 discriminator 2
	testl	%eax, %eax	# D.23105
	jne	.L1487	#,
.L1498:
	.loc 1 6357 0
	cmpl	$0, -8456(%rbp)	#, shortbuffered
	je	.L1502	#,
	.loc 1 6358 0
	movl	-8456(%rbp), %eax	# shortbuffered, tmp405
	addl	%r12d, %eax	# cnt, tmp404
	movl	%eax, %r12d	# tmp404, cnt
.L1502:
	.loc 1 6361 0
	movl	%r12d, %edx	# cnt,
	movq	%r15, %rsi	# ptr,
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_set_ptrcnt	#
	.loc 1 6366 0
	movb	$0, (%r14)	#, *bp_7
	.loc 1 6367 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	%r14, %rcx	# bp, bp.792
	movq	(%rbx), %rdx	# sv_53(D)->sv_any, D.23106
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_368].xpv_pv, D.23102
	subq	%rdx, %rcx	# D.23108, D.23108
	movq	%rcx, %rdx	# D.23108, D.23108
	movq	%rdx, 8(%rax)	# D.23107, MEM[(struct XPV *)_366].xpv_cur
.LBE77:
	jmp	.L1503	#
.L1477:
.LBB78:
	.loc 1 6394 0
	movq	-8448(%rbp), %rax	# rslen, rslen.793
	testq	%rax, %rax	# rslen.793
	je	.L1504	#,
.LBB79:
	.loc 1 6395 0
	leaq	-8256(%rbp), %r12	#, bpe
	addq	$8192, %r12	#, bpe
	.loc 1 6396 0
	leaq	-8256(%rbp), %r14	#, bp
.L1506:
	.loc 1 6397 0 discriminator 1
	movq	%r13, %rdi	# fp,
	call	PerlIO_getc	#
	movl	%eax, -8468(%rbp)	# tmp406, i
	cmpl	$-1, -8468(%rbp)	#, i
	je	.L1505	#,
	.loc 1 6397 0 is_stmt 0 discriminator 2
	movq	%r14, %rax	# bp, bp.794
	leaq	1(%rax), %r14	#, bp
	movl	-8468(%rbp), %edx	# i, tmp407
	movb	%dl, (%rax)	# D.23112, *bp.794_377
	movzbl	(%rax), %eax	# *bp.794_377, D.23112
	cmpb	-8485(%rbp), %al	# %sfp, D.23112
	je	.L1505	#,
	.loc 1 6397 0 discriminator 1
	cmpq	%r12, %r14	# bpe, bp
	jb	.L1506	#,
.L1505:
	.loc 1 6399 0 is_stmt 1
	movq	%r14, %rdx	# bp, bp.795
	leaq	-8256(%rbp), %rax	#, buf.796
	subq	%rax, %rdx	# buf.796, D.23108
	movq	%rdx, %rax	# D.23108, D.23108
	movl	%eax, %r12d	# D.23108, cnt
.LBE79:
	jmp	.L1507	#
.L1504:
	.loc 1 6402 0
	leaq	-8256(%rbp), %rax	#, tmp408
	movl	$8192, %edx	#,
	movq	%rax, %rsi	# tmp408,
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_read	#
	movl	%eax, %r12d	# D.23108, cnt
	.loc 1 6406 0
	testl	%r12d, %r12d	# cnt
	jle	.L1508	#,
	.loc 1 6407 0
	leal	-1(%r12), %eax	#, D.23105
	cltq
	movzbl	-8256(%rbp,%rax), %eax	# buf, D.23112
	movzbl	%al, %eax	# D.23114, tmp410
	movl	%eax, -8468(%rbp)	# tmp410, i
	jmp	.L1507	#
.L1508:
	.loc 1 6409 0
	movl	$-1, -8468(%rbp)	#, i
.L1507:
	.loc 1 6412 0
	testl	%r12d, %r12d	# cnt
	jns	.L1509	#,
	.loc 1 6413 0
	movl	$0, %r12d	#, cnt
.L1509:
	.loc 1 6414 0
	movl	-8484(%rbp), %eax	# append, append.797
	testl	%eax, %eax	# append.797
	je	.L1510	#,
	.loc 1 6415 0
	movslq	%r12d, %rdx	# cnt, D.23107
	leaq	-8256(%rbp), %rax	#, tmp411
	movl	$2, %ecx	#,
	movq	%rax, %rsi	# tmp411,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_catpvn_flags	#
	jmp	.L1511	#
.L1510:
	.loc 1 6417 0
	movslq	%r12d, %rdx	# cnt, D.23107
	leaq	-8256(%rbp), %rax	#, tmp412
	movq	%rax, %rsi	# tmp412,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setpvn	#
.L1511:
	.loc 1 6419 0
	cmpl	$-1, -8468(%rbp)	#, i
	je	.L1503	#,
	.loc 1 6420 0 discriminator 1
	movq	-8448(%rbp), %rax	# rslen, rslen.798
	.loc 1 6419 0 discriminator 1
	testq	%rax, %rax	# rslen.798
	je	.L1513	#,
	.loc 1 6421 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_397].xpv_cur, D.23107
	movq	-8448(%rbp), %rax	# rslen, rslen.799
	.loc 1 6420 0
	cmpq	%rax, %rdx	# rslen.799, D.23107
	jb	.L1513	#,
	.loc 1 6422 0
	movq	-8448(%rbp), %rdx	# rslen, rslen.800
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	(%rax), %rcx	# MEM[(struct XPV *)_401].xpv_pv, D.23102
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	8(%rax), %rsi	# MEM[(struct XPV *)_403].xpv_cur, D.23107
	movq	-8448(%rbp), %rax	# rslen, rslen.801
	subq	%rax, %rsi	# rslen.801, D.23110
	movq	%rsi, %rax	# D.23110, D.23110
	addq	%rax, %rcx	# D.23110, D.23102
	movq	-8440(%rbp), %rax	# rsptr, tmp413
	movq	%rax, %rsi	# tmp413,
	movq	%rcx, %rdi	# D.23102,
	call	memcmp	#
	.loc 1 6421 0
	testl	%eax, %eax	# D.23105
	je	.L1503	#,
.L1513:
	.loc 1 6424 0
	movl	$-1, -8484(%rbp)	#, append
	.loc 1 6436 0
	movl	%r12d, %eax	# cnt, cnt.802
	cmpl	$8191, %eax	#, cnt.802
	ja	.L1477	#,
	.loc 1 6436 0 is_stmt 0 discriminator 1
	movq	%r13, %rdi	# fp,
	call	Perl_PerlIO_eof	#
	testl	%eax, %eax	# D.23105
	je	.L1477	#,
.L1503:
.LBE78:
	.loc 1 6445 0 is_stmt 1
	cmpl	$0, -8464(%rbp)	#, rspara
	je	.L1447	#,
	.loc 1 6446 0
	jmp	.L1514	#
.L1515:
	.loc 1 6447 0
	movq	%r13, %rdi	# fp,
	call	PerlIO_getc	#
	movl	%eax, -8468(%rbp)	# tmp414, i
	.loc 1 6448 0
	cmpl	$10, -8468(%rbp)	#, i
	je	.L1514	#,
	.loc 1 6449 0
	movl	-8468(%rbp), %eax	# i, tmp415
	movl	%eax, %esi	# tmp415,
	movq	%r13, %rdi	# fp,
	call	PerlIO_ungetc	#
	.loc 1 6450 0
	jmp	.L1447	#
.L1514:
	.loc 1 6446 0 discriminator 1
	cmpl	$-1, -8468(%rbp)	#, i
	jne	.L1515	#,
.L1447:
	.loc 1 6456 0
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_412].xpv_cur, D.23107
	movl	-8484(%rbp), %eax	# append, append.804
	cltq
	cmpq	%rax, %rdx	# D.23107, D.23107
	je	.L1516	#,
	.loc 1 6456 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_53(D)->sv_any, D.23106
	movq	(%rax), %rax	# MEM[(struct XPV *)_416].xpv_pv, iftmp.803
	jmp	.L1517	#
.L1516:
	.loc 1 6456 0 discriminator 2
	movl	$0, %eax	#, iftmp.803
.L1517:
.L1518:
	.loc 1 6457 0 is_stmt 1
	movq	-56(%rbp), %rcx	# D.23115, tmp418
	xorq	%fs:40, %rcx	#, tmp418
	je	.L1519	#,
	call	__stack_chk_fail	#
.L1519:
	addq	$8456, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%r15	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE122:
	.size	Perl_sv_gets, .-Perl_sv_gets
	.globl	Perl_sv_inc
	.type	Perl_sv_inc, @function
Perl_sv_inc:
.LFB123:
	.loc 1 6470 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$32, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# sv, sv
	.loc 1 6474 0
	testq	%rbx, %rbx	# sv
	jne	.L1521	#,
	.loc 1 6475 0
	jmp	.L1520	#
.L1521:
	.loc 1 6476 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$8192, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1523	#,
	.loc 1 6477 0
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_get	#
.L1523:
	.loc 1 6478 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$9961472, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1524	#,
	.loc 1 6479 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$8388608, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1525	#,
	.loc 1 6479 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$1048576, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1525	#,
	.loc 1 6480 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L1525:
	.loc 1 6481 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$8388608, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1526	#,
	.loc 1 6482 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.805
	cmpq	$PL_compiling, %rax	#, PL_curcop.805
	je	.L1526	#,
	.loc 1 6483 0
	movl	$PL_no_modify, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1526:
	.loc 1 6485 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$524288, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1524	#,
.LBB80:
	.loc 1 6487 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$268435456, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1527	#,
	.loc 1 6487 0 is_stmt 0 discriminator 1
	movl	$9, %ecx	#,
	movl	$44, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_amagic_call	#
	testq	%rax, %rax	# D.23120
	je	.L1527	#,
	.loc 1 6488 0 is_stmt 1
	jmp	.L1520	#
.L1527:
	.loc 1 6489 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	(%rax), %rax	# MEM[(struct XRV *)_23].xrv_rv, D.23120
	movq	%rax, -24(%rbp)	# D.23120, i
	.loc 1 6490 0
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_unref	#
	.loc 1 6491 0
	movq	-24(%rbp), %rax	# i, tmp227
	movq	%rax, %rsi	# tmp227,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setiv	#
.L1524:
.LBE80:
	.loc 1 6494 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	movl	%eax, -32(%rbp)	# D.23119, flags
	.loc 1 6495 0
	movl	-32(%rbp), %eax	# flags, tmp228
	andl	$50331648, %eax	#, D.23122
	cmpl	$33554432, %eax	#, D.23122
	jne	.L1528	#,
	.loc 1 6498 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$65536, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	jne	.L1530	#,
	.loc 1 6498 0 is_stmt 0 discriminator 2
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_2iv	#
.L1530:
	.loc 1 6499 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	movl	%eax, -32(%rbp)	# D.23119, flags
.L1528:
	.loc 1 6501 0
	movl	-32(%rbp), %eax	# flags, tmp229
	andl	$65536, %eax	#, D.23122
	testl	%eax, %eax	# D.23122
	jne	.L1531	#,
	.loc 1 6501 0 is_stmt 0 discriminator 1
	movl	-32(%rbp), %eax	# flags, tmp230
	andl	$50331648, %eax	#, D.23122
	cmpl	$16777216, %eax	#, D.23122
	jne	.L1532	#,
.L1531:
	.loc 1 6506 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	testl	%eax, %eax	# D.23128
	jns	.L1533	#,
	.loc 1 6507 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_157].xuv_uv, D.23126
	cmpq	$-1, %rax	#, D.23126
	jne	.L1534	#,
	.loc 1 6508 0
	movabsq	$4895412794951729152, %rax	#, tmp231
	movq	%rax, -40(%rbp)	# tmp231, %sfp
	movsd	-40(%rbp), %xmm0	# %sfp,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setnv	#
	jmp	.L1535	#
.L1534:
	.loc 1 6510 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$-923729921, %eax	#, D.23119
	movl	%eax, 12(%rbx)	# D.23119, sv_6(D)->sv_flags
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$2097152, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1537	#,
	.loc 1 6510 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23122
	je	.L1537	#,
	.loc 1 6510 0
	nop
.L1537:
	.loc 1 6510 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	orl	$16842752, %eax	#, D.23119
	movl	%eax, 12(%rbx)	# D.23119, sv_6(D)->sv_flags
.L1535:
	.loc 1 6511 0 is_stmt 1 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	24(%rax), %rdx	# MEM[(struct XPVUV *)_168].xuv_uv, D.23126
	addq	$1, %rdx	#, D.23126
	movq	%rdx, 24(%rax)	# D.23126, MEM[(struct XPVUV *)_168].xuv_uv
	jmp	.L1538	#
.L1533:
	.loc 1 6513 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_171].xiv_iv, D.23129
	movabsq	$9223372036854775807, %rax	#, tmp232
	cmpq	%rax, %rdx	# tmp232, D.23129
	jne	.L1539	#,
	.loc 1 6514 0
	movabsq	$-9223372036854775808, %rsi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setuv	#
	jmp	.L1538	#
.L1539:
	.loc 1 6516 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$1223753727, %eax	#, D.23119
	movl	%eax, 12(%rbx)	# D.23119, sv_6(D)->sv_flags
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$2097152, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1541	#,
	.loc 1 6516 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23122
	je	.L1541	#,
	.loc 1 6516 0
	nop
.L1541:
	.loc 1 6516 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	orl	$16842752, %eax	#, D.23119
	movl	%eax, 12(%rbx)	# D.23119, sv_6(D)->sv_flags
	.loc 1 6517 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_182].xiv_iv, D.23129
	addq	$1, %rdx	#, D.23129
	movq	%rdx, 24(%rax)	# D.23129, MEM[(struct XPVIV *)_182].xiv_iv
	.loc 1 6520 0 discriminator 3
	jmp	.L1520	#
.L1538:
	.loc 1 6520 0 is_stmt 0
	jmp	.L1520	#
.L1532:
	.loc 1 6522 0 is_stmt 1
	movl	-32(%rbp), %eax	# flags, tmp233
	andl	$33554432, %eax	#, D.23122
	testl	%eax, %eax	# D.23122
	je	.L1542	#,
	.loc 1 6523 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$1223753727, %eax	#, D.23119
	movl	%eax, 12(%rbx)	# D.23119, sv_6(D)->sv_flags
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$2097152, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1544	#,
	.loc 1 6523 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23122
	je	.L1544	#,
	.loc 1 6523 0
	nop
.L1544:
	.loc 1 6523 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	orl	$33685504, %eax	#, D.23119
	movl	%eax, 12(%rbx)	# D.23119, sv_6(D)->sv_flags
	.loc 1 6524 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	(%rbx), %rdx	# sv_6(D)->sv_any, D.23121
	movsd	32(%rdx), %xmm1	# MEM[(struct XPVNV *)_49].xnv_nv, D.23123
	movsd	.LC57(%rip), %xmm0	#, tmp234
	addsd	%xmm1, %xmm0	# D.23123, D.23123
	movsd	%xmm0, 32(%rax)	# D.23123, MEM[(struct XPVNV *)_48].xnv_nv
	.loc 1 6525 0 discriminator 3
	jmp	.L1520	#
.L1542:
	.loc 1 6528 0
	movl	-32(%rbp), %eax	# flags, tmp235
	andl	$67108864, %eax	#, D.23122
	testl	%eax, %eax	# D.23122
	je	.L1545	#,
	.loc 1 6528 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	(%rax), %rax	# MEM[(struct XPV *)_53].xpv_pv, D.23124
	movzbl	(%rax), %eax	# *_54, D.23125
	testb	%al, %al	# D.23125
	jne	.L1546	#,
.L1545:
	.loc 1 6529 0 is_stmt 1
	movl	-32(%rbp), %eax	# flags, tmp236
	movzbl	%al, %eax	# tmp236, D.23122
	cmpl	$4, %eax	#, D.23122
	jg	.L1547	#,
	.loc 1 6530 0
	movl	$1, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L1547:
	.loc 1 6531 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$1223753727, %eax	#, D.23119
	movl	%eax, 12(%rbx)	# D.23119, sv_6(D)->sv_flags
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$2097152, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1549	#,
	.loc 1 6531 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23122
	je	.L1549	#,
	.loc 1 6531 0
	nop
.L1549:
	.loc 1 6531 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	orl	$16842752, %eax	#, D.23119
	movl	%eax, 12(%rbx)	# D.23119, sv_6(D)->sv_flags
	.loc 1 6532 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	$1, 24(%rax)	#, MEM[(struct XPVIV *)_154].xiv_iv
	.loc 1 6533 0 discriminator 3
	jmp	.L1520	#
.L1546:
	.loc 1 6535 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	(%rax), %r12	# MEM[(struct XPV *)_56].xpv_pv, d
	.loc 1 6536 0
	jmp	.L1550	#
.L1552:
	.loc 1 6536 0 is_stmt 0 discriminator 1
	addq	$1, %r12	#, d
.L1550:
	movzbl	(%r12), %eax	# *d_1, D.23125
	cmpb	$64, %al	#, D.23125
	jle	.L1551	#,
	.loc 1 6536 0 discriminator 2
	movzbl	(%r12), %eax	# *d_1, D.23125
	cmpb	$90, %al	#, D.23125
	jle	.L1552	#,
.L1551:
	.loc 1 6536 0 discriminator 3
	movzbl	(%r12), %eax	# *d_1, D.23125
	cmpb	$96, %al	#, D.23125
	jle	.L1553	#,
	.loc 1 6536 0 discriminator 1
	movzbl	(%r12), %eax	# *d_1, D.23125
	cmpb	$122, %al	#, D.23125
	jle	.L1552	#,
.L1553:
	.loc 1 6537 0 is_stmt 1
	jmp	.L1554	#
.L1556:
	.loc 1 6537 0 is_stmt 0 discriminator 1
	addq	$1, %r12	#, d
.L1554:
	movzbl	(%r12), %eax	# *d_2, D.23125
	cmpb	$47, %al	#, D.23125
	jle	.L1555	#,
	.loc 1 6537 0 discriminator 2
	movzbl	(%r12), %eax	# *d_2, D.23125
	cmpb	$57, %al	#, D.23125
	jle	.L1556	#,
.L1555:
	.loc 1 6538 0 is_stmt 1
	movzbl	(%r12), %eax	# *d_2, D.23125
	testb	%al, %al	# D.23125
	je	.L1557	#,
.LBB81:
	.loc 1 6543 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_66].xpv_cur, D.23126
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	(%rax), %rax	# MEM[(struct XPV *)_68].xpv_pv, D.23124
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# D.23126,
	movq	%rax, %rdi	# D.23124,
	call	Perl_grok_number	#
	movl	%eax, -28(%rbp)	# tmp237, numtype
	.loc 1 6544 0
	cmpl	$0, -28(%rbp)	#, numtype
	je	.L1558	#,
	.loc 1 6544 0 is_stmt 0 discriminator 1
	movl	-28(%rbp), %eax	# numtype, tmp238
	andl	$16, %eax	#, D.23122
	testl	%eax, %eax	# D.23122
	jne	.L1558	#,
	.loc 1 6552 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_2iv	#
	.loc 1 6553 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$65536, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1559	#,
	.loc 1 6554 0
	jmp	.L1531	#
.L1559:
	.loc 1 6557 0
	movl	-32(%rbp), %eax	# flags, tmp239
	andl	$33554432, %eax	#, D.23122
	testl	%eax, %eax	# D.23122
	je	.L1558	#,
	.loc 1 6558 0
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$1223753727, %eax	#, D.23119
	movl	%eax, 12(%rbx)	# D.23119, sv_6(D)->sv_flags
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	andl	$2097152, %eax	#, D.23119
	testl	%eax, %eax	# D.23119
	je	.L1561	#,
	.loc 1 6558 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23122
	je	.L1561	#,
	.loc 1 6558 0
	nop
.L1561:
	.loc 1 6558 0 discriminator 3
	movl	12(%rbx), %eax	# sv_6(D)->sv_flags, D.23119
	orl	$33685504, %eax	#, D.23119
	movl	%eax, 12(%rbx)	# D.23119, sv_6(D)->sv_flags
	.loc 1 6559 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	(%rbx), %rdx	# sv_6(D)->sv_any, D.23121
	movsd	32(%rdx), %xmm1	# MEM[(struct XPVNV *)_85].xnv_nv, D.23123
	movsd	.LC57(%rip), %xmm0	#, tmp240
	addsd	%xmm1, %xmm0	# D.23123, D.23123
	movsd	%xmm0, 32(%rax)	# D.23123, MEM[(struct XPVNV *)_84].xnv_nv
	.loc 1 6560 0 discriminator 3
	jmp	.L1520	#
.L1558:
	.loc 1 6574 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	(%rax), %rax	# MEM[(struct XPV *)_88].xpv_pv, D.23124
	movq	%rax, %rdi	# D.23124,
	call	Perl_my_atof	#
	movsd	.LC57(%rip), %xmm1	#, tmp241
	addsd	%xmm1, %xmm0	# tmp241, D.23123
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setnv	#
	.loc 1 6575 0
	jmp	.L1520	#
.L1557:
.LBE81:
	.loc 1 6577 0
	subq	$1, %r12	#, d
	.loc 1 6578 0
	jmp	.L1562	#
.L1568:
	.loc 1 6579 0
	movzbl	(%r12), %eax	# *d_3, D.23125
	cmpb	$47, %al	#, D.23125
	jle	.L1563	#,
	.loc 1 6579 0 is_stmt 0 discriminator 1
	movzbl	(%r12), %eax	# *d_3, D.23125
	cmpb	$57, %al	#, D.23125
	jg	.L1563	#,
	.loc 1 6580 0 is_stmt 1
	movzbl	(%r12), %eax	# *d_3, D.23125
	addl	$1, %eax	#, D.23125
	movb	%al, (%r12)	# D.23125, *d_3
	movzbl	(%r12), %eax	# *d_3, D.23125
	cmpb	$57, %al	#, D.23125
	jg	.L1564	#,
	.loc 1 6581 0
	jmp	.L1520	#
.L1564:
	.loc 1 6582 0
	movq	%r12, %rax	# d, d.812
	leaq	-1(%rax), %r12	#, d
	movb	$48, (%rax)	#, *d.812_100
	jmp	.L1562	#
.L1563:
	.loc 1 6598 0
	movzbl	(%r12), %eax	# *d_3, D.23125
	addl	$1, %eax	#, D.23125
	movb	%al, (%r12)	# D.23125, *d_3
	.loc 1 6599 0
	movzbl	(%r12), %eax	# *d_3, D.23125
	cmpb	$64, %al	#, D.23125
	jle	.L1565	#,
	.loc 1 6599 0 is_stmt 0 discriminator 1
	movzbl	(%r12), %eax	# *d_3, D.23125
	cmpb	$90, %al	#, D.23125
	jle	.L1566	#,
.L1565:
	.loc 1 6599 0 discriminator 2
	movzbl	(%r12), %eax	# *d_3, D.23125
	cmpb	$96, %al	#, D.23125
	jle	.L1567	#,
	.loc 1 6599 0 discriminator 1
	movzbl	(%r12), %eax	# *d_3, D.23125
	cmpb	$122, %al	#, D.23125
	jg	.L1567	#,
.L1566:
	.loc 1 6600 0 is_stmt 1
	jmp	.L1520	#
.L1567:
	.loc 1 6601 0
	movq	%r12, %rax	# d, d.813
	leaq	-1(%rax), %r12	#, d
	movzbl	(%rax), %edx	# *d.814_110, D.23125
	subl	$26, %edx	#, D.23127
	movb	%dl, (%rax)	# D.23125, *d.814_110
.L1562:
	.loc 1 6578 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	(%rax), %rax	# MEM[(struct XPV *)_93].xpv_pv, D.23124
	cmpq	%r12, %rax	# d, D.23124
	jbe	.L1568	#,
	.loc 1 6606 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_115].xpv_len, D.23126
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	8(%rax), %rax	# MEM[(struct XPV *)_117].xpv_cur, D.23126
	addq	$2, %rax	#, D.23126
	cmpq	%rax, %rdx	# D.23126, D.23126
	jae	.L1570	#,
	.loc 1 6606 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	8(%rax), %rax	# MEM[(struct XPV *)_120].xpv_cur, D.23126
	addq	$2, %rax	#, D.23126
	movq	%rax, %rsi	# D.23126,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_grow	#
.L1570:
	.loc 1 6607 0 is_stmt 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_126].xpv_cur, D.23126
	addq	$1, %rdx	#, D.23126
	movq	%rdx, 8(%rax)	# D.23126, MEM[(struct XPV *)_126].xpv_cur
	.loc 1 6608 0
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	(%rax), %rdx	# MEM[(struct XPV *)_129].xpv_pv, D.23124
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	8(%rax), %rax	# MEM[(struct XPV *)_131].xpv_cur, D.23126
	leaq	(%rdx,%rax), %r12	#, d
	jmp	.L1571	#
.L1572:
	.loc 1 6609 0 discriminator 2
	movzbl	-1(%r12), %eax	# MEM[(char *)d_4 + -1B], D.23125
	movb	%al, (%r12)	# D.23125, *d_4
	.loc 1 6608 0 discriminator 2
	subq	$1, %r12	#, d
.L1571:
	.loc 1 6608 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# sv_6(D)->sv_any, D.23121
	movq	(%rax), %rax	# MEM[(struct XPV *)_134].xpv_pv, D.23124
	cmpq	%r12, %rax	# d, D.23124
	jb	.L1572	#,
	.loc 1 6610 0 is_stmt 1
	leaq	1(%r12), %rax	#, D.23124
	movzbl	(%rax), %eax	# *_138, D.23125
	cmpb	$47, %al	#, D.23125
	jle	.L1573	#,
	.loc 1 6610 0 is_stmt 0 discriminator 1
	leaq	1(%r12), %rax	#, D.23124
	movzbl	(%rax), %eax	# *_140, D.23125
	cmpb	$57, %al	#, D.23125
	jg	.L1573	#,
	.loc 1 6611 0 is_stmt 1
	movb	$49, (%r12)	#, *d_4
	jmp	.L1520	#
.L1573:
	.loc 1 6613 0
	movzbl	1(%r12), %eax	# MEM[(char *)d_4 + 1B], D.23125
	movb	%al, (%r12)	# D.23125, *d_4
.L1520:
	.loc 1 6614 0
	addq	$32, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE123:
	.size	Perl_sv_inc, .-Perl_sv_inc
	.globl	Perl_sv_dec
	.type	Perl_sv_dec, @function
Perl_sv_dec:
.LFB124:
	.loc 1 6627 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	.loc 1 6630 0
	testq	%rbx, %rbx	# sv
	jne	.L1575	#,
	.loc 1 6631 0
	jmp	.L1574	#
.L1575:
	.loc 1 6632 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$8192, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1577	#,
	.loc 1 6633 0
	movq	%rbx, %rdi	# sv,
	call	Perl_mg_get	#
.L1577:
	.loc 1 6634 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$9961472, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1578	#,
	.loc 1 6635 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$8388608, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1579	#,
	.loc 1 6635 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$1048576, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1579	#,
	.loc 1 6636 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_force_normal	#
.L1579:
	.loc 1 6637 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$8388608, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1580	#,
	.loc 1 6638 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.816
	cmpq	$PL_compiling, %rax	#, PL_curcop.816
	je	.L1580	#,
	.loc 1 6639 0
	movl	$PL_no_modify, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1580:
	.loc 1 6641 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$524288, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1578	#,
.LBB82:
	.loc 1 6643 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$268435456, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1581	#,
	.loc 1 6643 0 is_stmt 0 discriminator 1
	movl	$9, %ecx	#,
	movl	$45, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_amagic_call	#
	testq	%rax, %rax	# D.23131
	je	.L1581	#,
	.loc 1 6644 0 is_stmt 1
	jmp	.L1574	#
.L1581:
	.loc 1 6645 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	(%rax), %rax	# MEM[(struct XRV *)_18].xrv_rv, D.23131
	movq	%rax, -24(%rbp)	# D.23131, i
	.loc 1 6646 0
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_unref	#
	.loc 1 6647 0
	movq	-24(%rbp), %rax	# i, tmp172
	movq	%rax, %rsi	# tmp172,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setiv	#
.L1578:
.LBE82:
	.loc 1 6652 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	movl	%eax, -32(%rbp)	# D.23130, flags
	.loc 1 6653 0
	movl	-32(%rbp), %eax	# flags, tmp173
	andl	$65536, %eax	#, D.23133
	testl	%eax, %eax	# D.23133
	jne	.L1582	#,
	.loc 1 6653 0 is_stmt 0 discriminator 1
	movl	-32(%rbp), %eax	# flags, tmp174
	andl	$50331648, %eax	#, D.23133
	cmpl	$16777216, %eax	#, D.23133
	jne	.L1583	#,
.L1582:
	.loc 1 6658 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	testl	%eax, %eax	# D.23137
	jns	.L1584	#,
	.loc 1 6659 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_79].xuv_uv, D.23135
	testq	%rax, %rax	# D.23135
	jne	.L1585	#,
	.loc 1 6660 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$1223753727, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$2097152, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1587	#,
	.loc 1 6660 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23133
	je	.L1587	#,
	.loc 1 6660 0
	nop
.L1587:
	.loc 1 6660 0 discriminator 3
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	orl	$16842752, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	.loc 1 6661 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	$-1, 24(%rax)	#, MEM[(struct XPVIV *)_90].xiv_iv
	jmp	.L1591	#
.L1585:
	.loc 1 6664 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$-923729921, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$2097152, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1590	#,
	.loc 1 6664 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23133
	je	.L1590	#,
	.loc 1 6664 0
	nop
.L1590:
	.loc 1 6664 0 discriminator 3
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	orl	$16842752, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	.loc 1 6665 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	24(%rax), %rdx	# MEM[(struct XPVUV *)_100].xuv_uv, D.23135
	subq	$1, %rdx	#, D.23135
	movq	%rdx, 24(%rax)	# D.23135, MEM[(struct XPVUV *)_100].xuv_uv
	.loc 1 6675 0 discriminator 3
	jmp	.L1574	#
.L1584:
	.loc 1 6668 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_103].xiv_iv, D.23138
	movabsq	$-9223372036854775808, %rax	#, tmp175
	cmpq	%rax, %rdx	# tmp175, D.23138
	jne	.L1592	#,
	.loc 1 6669 0
	movabsq	$-4332462841530417152, %rax	#, tmp176
	movq	%rax, -40(%rbp)	# tmp176, %sfp
	movsd	-40(%rbp), %xmm0	# %sfp,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setnv	#
	jmp	.L1591	#
.L1592:
	.loc 1 6671 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$1223753727, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$2097152, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1594	#,
	.loc 1 6671 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23133
	je	.L1594	#,
	.loc 1 6671 0
	nop
.L1594:
	.loc 1 6671 0 discriminator 3
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	orl	$16842752, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	.loc 1 6672 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_114].xiv_iv, D.23138
	subq	$1, %rdx	#, D.23138
	movq	%rdx, 24(%rax)	# D.23138, MEM[(struct XPVIV *)_114].xiv_iv
	.loc 1 6675 0 discriminator 3
	jmp	.L1574	#
.L1591:
	.loc 1 6675 0 is_stmt 0
	jmp	.L1574	#
.L1583:
	.loc 1 6677 0 is_stmt 1
	movl	-32(%rbp), %eax	# flags, tmp177
	andl	$33554432, %eax	#, D.23133
	testl	%eax, %eax	# D.23133
	je	.L1595	#,
	.loc 1 6678 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	(%rbx), %rdx	# sv_1(D)->sv_any, D.23132
	movsd	32(%rdx), %xmm0	# MEM[(struct XPVNV *)_27].xnv_nv, D.23134
	movsd	.LC57(%rip), %xmm1	#, tmp178
	subsd	%xmm1, %xmm0	# tmp178, D.23134
	movsd	%xmm0, 32(%rax)	# D.23134, MEM[(struct XPVNV *)_26].xnv_nv
	.loc 1 6679 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$1223753727, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$2097152, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1597	#,
	.loc 1 6679 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23133
	je	.L1597	#,
	.loc 1 6679 0
	nop
.L1597:
	.loc 1 6679 0 discriminator 3
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	orl	$33685504, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	.loc 1 6680 0 is_stmt 1 discriminator 3
	jmp	.L1574	#
.L1595:
	.loc 1 6682 0
	movl	-32(%rbp), %eax	# flags, tmp179
	andl	$67108864, %eax	#, D.23133
	testl	%eax, %eax	# D.23133
	jne	.L1598	#,
	.loc 1 6683 0
	movl	-32(%rbp), %eax	# flags, tmp180
	movzbl	%al, %eax	# tmp180, D.23133
	cmpl	$5, %eax	#, D.23133
	jg	.L1599	#,
	.loc 1 6684 0
	movl	$2, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
.L1599:
	.loc 1 6685 0
	movq	(%rbx), %rdx	# sv_1(D)->sv_any, D.23132
	movabsq	$-4616189618054758400, %rax	#, tmp181
	movq	%rax, 32(%rdx)	# tmp181, MEM[(struct XPVNV *)_41].xnv_nv
	.loc 1 6686 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$1223753727, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$2097152, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1601	#,
	.loc 1 6686 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23133
	je	.L1601	#,
	.loc 1 6686 0
	nop
.L1601:
	.loc 1 6686 0 discriminator 3
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	orl	$33685504, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	.loc 1 6687 0 is_stmt 1 discriminator 3
	jmp	.L1574	#
.L1598:
.LBB83:
	.loc 1 6691 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_51].xpv_cur, D.23135
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	(%rax), %rax	# MEM[(struct XPV *)_53].xpv_pv, D.23136
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# D.23135,
	movq	%rax, %rdi	# D.23136,
	call	Perl_grok_number	#
	movl	%eax, -28(%rbp)	# tmp182, numtype
	.loc 1 6692 0
	cmpl	$0, -28(%rbp)	#, numtype
	je	.L1602	#,
	.loc 1 6692 0 is_stmt 0 discriminator 1
	movl	-28(%rbp), %eax	# numtype, tmp183
	andl	$16, %eax	#, D.23133
	testl	%eax, %eax	# D.23133
	jne	.L1602	#,
	.loc 1 6700 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_2iv	#
	.loc 1 6701 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$65536, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1603	#,
	.loc 1 6702 0
	jmp	.L1582	#
.L1603:
	.loc 1 6705 0
	movl	-32(%rbp), %eax	# flags, tmp184
	andl	$33554432, %eax	#, D.23133
	testl	%eax, %eax	# D.23133
	je	.L1602	#,
	.loc 1 6706 0
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$1223753727, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	andl	$2097152, %eax	#, D.23130
	testl	%eax, %eax	# D.23130
	je	.L1605	#,
	.loc 1 6706 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23133
	je	.L1605	#,
	.loc 1 6706 0
	nop
.L1605:
	.loc 1 6706 0 discriminator 3
	movl	12(%rbx), %eax	# sv_1(D)->sv_flags, D.23130
	orl	$33685504, %eax	#, D.23130
	movl	%eax, 12(%rbx)	# D.23130, sv_1(D)->sv_flags
	.loc 1 6707 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	(%rbx), %rdx	# sv_1(D)->sv_any, D.23132
	movsd	32(%rdx), %xmm0	# MEM[(struct XPVNV *)_70].xnv_nv, D.23134
	movsd	.LC57(%rip), %xmm1	#, tmp185
	subsd	%xmm1, %xmm0	# tmp185, D.23134
	movsd	%xmm0, 32(%rax)	# D.23134, MEM[(struct XPVNV *)_69].xnv_nv
	.loc 1 6708 0 discriminator 3
	jmp	.L1574	#
.L1602:
.LBE83:
	.loc 1 6723 0
	movq	(%rbx), %rax	# sv_1(D)->sv_any, D.23132
	movq	(%rax), %rax	# MEM[(struct XPV *)_73].xpv_pv, D.23136
	movq	%rax, %rdi	# D.23136,
	call	Perl_my_atof	#
	movsd	.LC57(%rip), %xmm1	#, tmp186
	subsd	%xmm1, %xmm0	# tmp186, D.23134
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setnv	#
.L1574:
	.loc 1 6724 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE124:
	.size	Perl_sv_dec, .-Perl_sv_dec
	.globl	Perl_sv_mortalcopy
	.type	Perl_sv_mortalcopy, @function
Perl_sv_mortalcopy:
.LFB125:
	.loc 1 6744 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# oldstr, oldstr
.LBB84:
	.loc 1 6747 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.823
	testq	%rax, %rax	# PL_sv_root.823
	je	.L1607	#,
.LBB85:
	.loc 1 6747 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_3->sv_any, PL_sv_root.824
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.824, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.825
	addl	$1, %eax	#, PL_sv_count.826
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.826, PL_sv_count
.LBE85:
	jmp	.L1608	#
.L1607:
	.loc 1 6747 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1608:
	.loc 1 6747 0 discriminator 1
	movq	$0, (%rbx)	#, sv_1->sv_any
	movl	$1, 8(%rbx)	#, sv_1->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_1->sv_flags
.LBE84:
	.loc 1 6748 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# oldstr, tmp80
	movl	$2, %edx	#,
	movq	%rax, %rsi	# tmp80,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setsv_flags	#
	.loc 1 6749 0 discriminator 1
	movl	PL_tmps_ix(%rip), %eax	# PL_tmps_ix, PL_tmps_ix.827
	leal	1(%rax), %edx	#, D.23141
	movl	PL_tmps_max(%rip), %eax	# PL_tmps_max, PL_tmps_max.828
	cmpl	%eax, %edx	# PL_tmps_max.828, D.23141
	jl	.L1609	#,
	movl	$1, %edi	#,
	call	Perl_tmps_grow	#
.L1609:
	.loc 1 6750 0
	movq	PL_tmps_stack(%rip), %rax	# PL_tmps_stack, PL_tmps_stack.829
	movl	PL_tmps_ix(%rip), %edx	# PL_tmps_ix, PL_tmps_ix.830
	addl	$1, %edx	#, PL_tmps_ix.831
	movl	%edx, PL_tmps_ix(%rip)	# PL_tmps_ix.831, PL_tmps_ix
	movl	PL_tmps_ix(%rip), %edx	# PL_tmps_ix, PL_tmps_ix.832
	movslq	%edx, %rdx	# PL_tmps_ix.832, D.23142
	salq	$3, %rdx	#, D.23142
	addq	%rdx, %rax	# D.23142, D.23143
	movq	%rbx, (%rax)	# sv, *_20
	.loc 1 6751 0
	movl	12(%rbx), %eax	# sv_1->sv_flags, D.23144
	orb	$8, %ah	#, D.23144
	movl	%eax, 12(%rbx)	# D.23144, sv_1->sv_flags
	.loc 1 6752 0
	movq	%rbx, %rax	# sv, D.23145
	.loc 1 6753 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE125:
	.size	Perl_sv_mortalcopy, .-Perl_sv_mortalcopy
	.globl	Perl_sv_newmortal
	.type	Perl_sv_newmortal, @function
Perl_sv_newmortal:
.LFB126:
	.loc 1 6768 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
.LBB86:
	.loc 1 6771 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.833
	testq	%rax, %rax	# PL_sv_root.833
	je	.L1612	#,
.LBB87:
	.loc 1 6771 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_3->sv_any, PL_sv_root.834
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.834, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.835
	addl	$1, %eax	#, PL_sv_count.836
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.836, PL_sv_count
.LBE87:
	jmp	.L1613	#
.L1612:
	.loc 1 6771 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1613:
	.loc 1 6771 0 discriminator 1
	movq	$0, (%rbx)	#, sv_1->sv_any
	movl	$1, 8(%rbx)	#, sv_1->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_1->sv_flags
.LBE86:
	.loc 1 6772 0 is_stmt 1 discriminator 1
	movl	$2048, 12(%rbx)	#, sv_1->sv_flags
	.loc 1 6773 0 discriminator 1
	movl	PL_tmps_ix(%rip), %eax	# PL_tmps_ix, PL_tmps_ix.837
	leal	1(%rax), %edx	#, D.23148
	movl	PL_tmps_max(%rip), %eax	# PL_tmps_max, PL_tmps_max.838
	cmpl	%eax, %edx	# PL_tmps_max.838, D.23148
	jl	.L1614	#,
	movl	$1, %edi	#,
	call	Perl_tmps_grow	#
.L1614:
	.loc 1 6774 0
	movq	PL_tmps_stack(%rip), %rax	# PL_tmps_stack, PL_tmps_stack.839
	movl	PL_tmps_ix(%rip), %edx	# PL_tmps_ix, PL_tmps_ix.840
	addl	$1, %edx	#, PL_tmps_ix.841
	movl	%edx, PL_tmps_ix(%rip)	# PL_tmps_ix.841, PL_tmps_ix
	movl	PL_tmps_ix(%rip), %edx	# PL_tmps_ix, PL_tmps_ix.842
	movslq	%edx, %rdx	# PL_tmps_ix.842, D.23149
	salq	$3, %rdx	#, D.23149
	addq	%rdx, %rax	# D.23149, D.23150
	movq	%rbx, (%rax)	# sv, *_19
	.loc 1 6775 0
	movq	%rbx, %rax	# sv, D.23151
	.loc 1 6776 0
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE126:
	.size	Perl_sv_newmortal, .-Perl_sv_newmortal
	.globl	Perl_sv_2mortal
	.type	Perl_sv_2mortal, @function
Perl_sv_2mortal:
.LFB127:
	.loc 1 6792 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# sv, sv
	.loc 1 6793 0
	testq	%rbx, %rbx	# sv
	jne	.L1617	#,
	.loc 1 6794 0
	movq	%rbx, %rax	# sv, D.23152
	jmp	.L1618	#
.L1617:
	.loc 1 6795 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.23153
	andl	$8388608, %eax	#, D.23153
	testl	%eax, %eax	# D.23153
	je	.L1619	#,
	.loc 1 6795 0 is_stmt 0 discriminator 1
	cmpq	$PL_sv_undef, %rbx	#, sv
	je	.L1620	#,
	cmpq	$PL_sv_yes, %rbx	#, sv
	je	.L1620	#,
	cmpq	$PL_sv_no, %rbx	#, sv
	je	.L1620	#,
	cmpq	$PL_sv_placeholder, %rbx	#, sv
	jne	.L1619	#,
.L1620:
	.loc 1 6796 0 is_stmt 1
	movq	%rbx, %rax	# sv, D.23152
	jmp	.L1618	#
.L1619:
	.loc 1 6797 0
	movl	PL_tmps_ix(%rip), %eax	# PL_tmps_ix, PL_tmps_ix.843
	leal	1(%rax), %edx	#, D.23154
	movl	PL_tmps_max(%rip), %eax	# PL_tmps_max, PL_tmps_max.844
	cmpl	%eax, %edx	# PL_tmps_max.844, D.23154
	jl	.L1621	#,
	.loc 1 6797 0 is_stmt 0 discriminator 1
	movl	$1, %edi	#,
	call	Perl_tmps_grow	#
.L1621:
	.loc 1 6798 0 is_stmt 1
	movq	PL_tmps_stack(%rip), %rax	# PL_tmps_stack, PL_tmps_stack.845
	movl	PL_tmps_ix(%rip), %edx	# PL_tmps_ix, PL_tmps_ix.846
	addl	$1, %edx	#, PL_tmps_ix.847
	movl	%edx, PL_tmps_ix(%rip)	# PL_tmps_ix.847, PL_tmps_ix
	movl	PL_tmps_ix(%rip), %edx	# PL_tmps_ix, PL_tmps_ix.848
	movslq	%edx, %rdx	# PL_tmps_ix.848, D.23155
	salq	$3, %rdx	#, D.23155
	addq	%rdx, %rax	# D.23155, D.23156
	movq	%rbx, (%rax)	# sv, *_16
	.loc 1 6799 0
	movl	12(%rbx), %eax	# sv_2(D)->sv_flags, D.23153
	orb	$8, %ah	#, D.23153
	movl	%eax, 12(%rbx)	# D.23153, sv_2(D)->sv_flags
	.loc 1 6800 0
	movq	%rbx, %rax	# sv, D.23152
.L1618:
	.loc 1 6801 0
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE127:
	.size	Perl_sv_2mortal, .-Perl_sv_2mortal
	.globl	Perl_newSVpv
	.type	Perl_newSVpv, @function
Perl_newSVpv:
.LFB128:
	.loc 1 6815 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# s, s
	movq	%rsi, -32(%rbp)	# len, len
.LBB88:
	.loc 1 6818 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.849
	testq	%rax, %rax	# PL_sv_root.849
	je	.L1623	#,
.LBB89:
	.loc 1 6818 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_4->sv_any, PL_sv_root.850
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.850, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.851
	addl	$1, %eax	#, PL_sv_count.852
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.852, PL_sv_count
.LBE89:
	jmp	.L1624	#
.L1623:
	.loc 1 6818 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1624:
	.loc 1 6818 0 discriminator 1
	movq	$0, (%rbx)	#, sv_2->sv_any
	movl	$1, 8(%rbx)	#, sv_2->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_2->sv_flags
.LBE88:
	.loc 1 6819 0 is_stmt 1 discriminator 1
	cmpq	$0, -32(%rbp)	#, len
	jne	.L1625	#,
	.loc 1 6820 0
	movq	-24(%rbp), %rax	# s, tmp68
	movq	%rax, %rdi	# tmp68,
	call	strlen	#
	movq	%rax, -32(%rbp)	# tmp69, len
.L1625:
	.loc 1 6821 0
	movq	-32(%rbp), %rdx	# len, tmp70
	movq	-24(%rbp), %rax	# s, tmp71
	movq	%rax, %rsi	# tmp71,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setpvn	#
	.loc 1 6822 0
	movq	%rbx, %rax	# sv, D.23159
	.loc 1 6823 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE128:
	.size	Perl_newSVpv, .-Perl_newSVpv
	.globl	Perl_newSVpvn
	.type	Perl_newSVpvn, @function
Perl_newSVpvn:
.LFB129:
	.loc 1 6838 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# s, s
	movq	%rsi, -32(%rbp)	# len, len
.LBB90:
	.loc 1 6841 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.853
	testq	%rax, %rax	# PL_sv_root.853
	je	.L1628	#,
.LBB91:
	.loc 1 6841 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_3->sv_any, PL_sv_root.854
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.854, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.855
	addl	$1, %eax	#, PL_sv_count.856
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.856, PL_sv_count
.LBE91:
	jmp	.L1629	#
.L1628:
	.loc 1 6841 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1629:
	.loc 1 6841 0 discriminator 1
	movq	$0, (%rbx)	#, sv_1->sv_any
	movl	$1, 8(%rbx)	#, sv_1->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_1->sv_flags
.LBE90:
	.loc 1 6842 0 is_stmt 1 discriminator 1
	movq	-32(%rbp), %rdx	# len, tmp68
	movq	-24(%rbp), %rax	# s, tmp69
	movq	%rax, %rsi	# tmp69,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setpvn	#
	.loc 1 6843 0 discriminator 1
	movq	%rbx, %rax	# sv, D.23162
	.loc 1 6844 0 discriminator 1
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE129:
	.size	Perl_newSVpvn, .-Perl_newSVpvn
	.globl	Perl_newSVpvn_share
	.type	Perl_newSVpvn_share, @function
Perl_newSVpvn_share:
.LFB130:
	.loc 1 6862 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -56(%rbp)	# src, src
	movl	%esi, -60(%rbp)	# len, len
	movl	%edx, -64(%rbp)	# hash, hash
	.loc 1 6864 0
	movb	$0, -41(%rbp)	#, is_utf8
	.loc 1 6865 0
	cmpl	$0, -60(%rbp)	#, len
	jns	.L1632	#,
.LBB92:
	.loc 1 6866 0
	movl	-60(%rbp), %eax	# len, tmp104
	negl	%eax	# D.23163
	cltq
	movq	%rax, -40(%rbp)	# tmplen.857, tmplen
	.loc 1 6867 0
	movb	$1, -41(%rbp)	#, is_utf8
	.loc 1 6869 0
	leaq	-41(%rbp), %rdx	#, tmp105
	leaq	-40(%rbp), %rcx	#, tmp106
	movq	-56(%rbp), %rax	# src, tmp107
	movq	%rcx, %rsi	# tmp106,
	movq	%rax, %rdi	# tmp107,
	call	Perl_bytes_from_utf8	#
	movq	%rax, -56(%rbp)	# tmp108, src
	.loc 1 6870 0
	movq	-40(%rbp), %rax	# tmplen, tmplen.858
	movl	%eax, -60(%rbp)	# tmplen.858, len
.L1632:
.LBE92:
	.loc 1 6872 0
	cmpl	$0, -64(%rbp)	#, hash
	jne	.L1633	#,
.LBB93:
	.loc 1 6873 0
	movq	-56(%rbp), %rbx	# src, s_PeRlHaSh_tmp
	movq	%rbx, %r13	# s_PeRlHaSh_tmp, s_PeRlHaSh
	movl	-60(%rbp), %r12d	# len, i_PeRlHaSh
	movl	$0, %ebx	#, hash_PeRlHaSh
	jmp	.L1634	#
.L1635:
	.loc 1 6873 0 is_stmt 0 discriminator 2
	movq	%r13, %rax	# s_PeRlHaSh, s_PeRlHaSh.859
	leaq	1(%rax), %r13	#, s_PeRlHaSh
	movzbl	(%rax), %eax	# *s_PeRlHaSh.859_23, D.23164
	movzbl	%al, %eax	# D.23164, D.23165
	addl	%eax, %ebx	# D.23165, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.23165
	sall	$10, %eax	#, D.23165
	addl	%eax, %ebx	# D.23165, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.23165
	shrl	$6, %eax	#, D.23165
	xorl	%eax, %ebx	# D.23165, hash_PeRlHaSh
.L1634:
	.loc 1 6873 0 discriminator 1
	movl	%r12d, %eax	# i_PeRlHaSh, i_PeRlHaSh.860
	leal	-1(%rax), %r12d	#, i_PeRlHaSh
	testl	%eax, %eax	# i_PeRlHaSh.860
	jne	.L1635	#,
	.loc 1 6873 0 discriminator 3
	leal	0(,%rbx,8), %eax	#, D.23165
	addl	%eax, %ebx	# D.23165, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.23165
	shrl	$11, %eax	#, D.23165
	xorl	%eax, %ebx	# D.23165, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.23165
	sall	$15, %eax	#, D.23165
	addl	%ebx, %eax	# hash_PeRlHaSh, tmp109
	movl	%eax, -64(%rbp)	# tmp109, hash
.L1633:
.LBE93:
.LBB94:
	.loc 1 6874 0 is_stmt 1
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.861
	testq	%rax, %rax	# PL_sv_root.861
	je	.L1636	#,
.LBB95:
	.loc 1 6874 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_40->sv_any, PL_sv_root.862
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.862, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.863
	addl	$1, %eax	#, PL_sv_count.864
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.864, PL_sv_count
.LBE95:
	jmp	.L1637	#
.L1636:
	.loc 1 6874 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1637:
	.loc 1 6874 0 discriminator 1
	movq	$0, (%rbx)	#, sv_4->sv_any
	movl	$1, 8(%rbx)	#, sv_4->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_4->sv_flags
.LBE94:
	.loc 1 6875 0 is_stmt 1 discriminator 1
	movl	$5, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	.loc 1 6876 0 discriminator 1
	movq	(%rbx), %r12	# sv_4->sv_any, D.23168
	movzbl	-41(%rbp), %eax	# is_utf8, is_utf8.866
	testb	%al, %al	# is_utf8.866
	je	.L1638	#,
	movl	-60(%rbp), %eax	# len, tmp110
	negl	%eax	# iftmp.865
	jmp	.L1639	#
.L1638:
	.loc 1 6876 0 is_stmt 0 discriminator 2
	movl	-60(%rbp), %eax	# len, iftmp.865
.L1639:
	.loc 1 6876 0 discriminator 3
	movl	-64(%rbp), %edx	# hash, tmp111
	movq	-56(%rbp), %rcx	# src, tmp112
	movl	%eax, %esi	# iftmp.865,
	movq	%rcx, %rdi	# tmp112,
	call	Perl_share_hek	#
	addq	$8, %rax	#, D.23170
	movq	%rax, (%r12)	# D.23170, MEM[(struct XPV *)_47].xpv_pv
	.loc 1 6877 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# sv_4->sv_any, D.23168
	movl	-60(%rbp), %edx	# len, tmp113
	movslq	%edx, %rdx	# tmp113, D.23171
	movq	%rdx, 8(%rax)	# D.23171, MEM[(struct XPV *)_53].xpv_cur
	.loc 1 6878 0 discriminator 3
	movq	(%rbx), %rax	# sv_4->sv_any, D.23168
	movl	-64(%rbp), %edx	# hash, D.23171
	movq	%rdx, 24(%rax)	# D.23171, MEM[(struct XPVUV *)_55].xuv_uv
	.loc 1 6879 0 discriminator 3
	movq	(%rbx), %rax	# sv_4->sv_any, D.23168
	movq	$0, 16(%rax)	#, MEM[(struct XPV *)_57].xpv_len
	.loc 1 6880 0 discriminator 3
	movl	12(%rbx), %eax	# sv_4->sv_flags, D.23165
	orl	$8388608, %eax	#, D.23165
	movl	%eax, 12(%rbx)	# D.23165, sv_4->sv_flags
	.loc 1 6881 0 discriminator 3
	movl	12(%rbx), %eax	# sv_4->sv_flags, D.23165
	orl	$1048576, %eax	#, D.23165
	movl	%eax, 12(%rbx)	# D.23165, sv_4->sv_flags
	.loc 1 6882 0 discriminator 3
	movl	12(%rbx), %eax	# sv_4->sv_flags, D.23165
	orl	$67371008, %eax	#, D.23165
	movl	%eax, 12(%rbx)	# D.23165, sv_4->sv_flags
	.loc 1 6883 0 discriminator 3
	movzbl	-41(%rbp), %eax	# is_utf8, is_utf8.867
	testb	%al, %al	# is_utf8.867
	je	.L1640	#,
	.loc 1 6884 0
	movl	12(%rbx), %eax	# sv_4->sv_flags, D.23165
	orl	$536870912, %eax	#, D.23165
	movl	%eax, 12(%rbx)	# D.23165, sv_4->sv_flags
.L1640:
	.loc 1 6885 0
	movq	%rbx, %rax	# sv, D.23172
	.loc 1 6886 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE130:
	.size	Perl_newSVpvn_share, .-Perl_newSVpvn_share
	.globl	Perl_newSVpvf
	.type	Perl_newSVpvf, @function
Perl_newSVpvf:
.LFB131:
	.loc 1 6920 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$232, %rsp	#,
	.cfi_offset 3, -24
	movq	%rsi, -184(%rbp)	#,
	movq	%rdx, -176(%rbp)	#,
	movq	%rcx, -168(%rbp)	#,
	movq	%r8, -160(%rbp)	#,
	movq	%r9, -152(%rbp)	#,
	testb	%al, %al	#
	je	.L1643	#,
	.loc 1 6920 0
	movaps	%xmm0, -144(%rbp)	#,
	movaps	%xmm1, -128(%rbp)	#,
	movaps	%xmm2, -112(%rbp)	#,
	movaps	%xmm3, -96(%rbp)	#,
	movaps	%xmm4, -80(%rbp)	#,
	movaps	%xmm5, -64(%rbp)	#,
	movaps	%xmm6, -48(%rbp)	#,
	movaps	%xmm7, -32(%rbp)	#,
.L1643:
	movq	%rdi, -232(%rbp)	# pat, pat
	.loc 1 6923 0
	movl	$8, -216(%rbp)	#, MEM[(struct [1] *)&args].gp_offset
	movl	$48, -212(%rbp)	#, MEM[(struct [1] *)&args].fp_offset
	leaq	16(%rbp), %rax	#, tmp66
	movq	%rax, -208(%rbp)	# tmp66, MEM[(struct [1] *)&args].overflow_arg_area
	leaq	-192(%rbp), %rax	#, tmp67
	movq	%rax, -200(%rbp)	# tmp67, MEM[(struct [1] *)&args].reg_save_area
	.loc 1 6924 0
	leaq	-216(%rbp), %rdx	#, tmp63
	movq	-232(%rbp), %rax	# pat, tmp64
	movq	%rdx, %rsi	# tmp63,
	movq	%rax, %rdi	# tmp64,
	call	Perl_vnewSVpvf	#
	movq	%rax, %rbx	#, sv
	.loc 1 6926 0
	movq	%rbx, %rax	# sv, D.23173
	.loc 1 6927 0
	addq	$232, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE131:
	.size	Perl_newSVpvf, .-Perl_newSVpvf
	.globl	Perl_vnewSVpvf
	.type	Perl_vnewSVpvf, @function
Perl_vnewSVpvf:
.LFB132:
	.loc 1 6933 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# pat, pat
	movq	%rsi, -32(%rbp)	# args, args
.LBB96:
	.loc 1 6935 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.868
	testq	%rax, %rax	# PL_sv_root.868
	je	.L1646	#,
.LBB97:
	.loc 1 6935 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_3->sv_any, PL_sv_root.869
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.869, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.870
	addl	$1, %eax	#, PL_sv_count.871
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.871, PL_sv_count
.LBE97:
	jmp	.L1647	#
.L1646:
	.loc 1 6935 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1647:
	.loc 1 6935 0 discriminator 1
	movq	$0, (%rbx)	#, sv_1->sv_any
	movl	$1, 8(%rbx)	#, sv_1->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_1->sv_flags
.LBE96:
	.loc 1 6936 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# pat, tmp69
	movq	%rax, %rdi	# tmp69,
	call	strlen	#
	movq	%rax, %rdx	#, D.23178
	movq	-32(%rbp), %rcx	# args, tmp70
	movq	-24(%rbp), %rax	# pat, tmp71
	movq	$0, (%rsp)	#,
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rax, %rsi	# tmp71,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_vsetpvfn	#
	.loc 1 6937 0 discriminator 1
	movq	%rbx, %rax	# sv, D.23179
	.loc 1 6938 0 discriminator 1
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE132:
	.size	Perl_vnewSVpvf, .-Perl_vnewSVpvf
	.globl	Perl_newSVnv
	.type	Perl_newSVnv, @function
Perl_newSVnv:
.LFB133:
	.loc 1 6951 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movsd	%xmm0, -24(%rbp)	# n, n
.LBB98:
	.loc 1 6954 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.872
	testq	%rax, %rax	# PL_sv_root.872
	je	.L1650	#,
.LBB99:
	.loc 1 6954 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_3->sv_any, PL_sv_root.873
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.873, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.874
	addl	$1, %eax	#, PL_sv_count.875
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.875, PL_sv_count
.LBE99:
	jmp	.L1651	#
.L1650:
	.loc 1 6954 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1651:
	.loc 1 6954 0 discriminator 1
	movq	$0, (%rbx)	#, sv_1->sv_any
	movl	$1, 8(%rbx)	#, sv_1->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_1->sv_flags
.LBE98:
	.loc 1 6955 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# n, tmp68
	movq	%rax, -32(%rbp)	# tmp68, %sfp
	movsd	-32(%rbp), %xmm0	# %sfp,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setnv	#
	.loc 1 6956 0 discriminator 1
	movq	%rbx, %rax	# sv, D.23182
	.loc 1 6957 0 discriminator 1
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE133:
	.size	Perl_newSVnv, .-Perl_newSVnv
	.globl	Perl_newSViv
	.type	Perl_newSViv, @function
Perl_newSViv:
.LFB134:
	.loc 1 6970 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# i, i
.LBB100:
	.loc 1 6973 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.876
	testq	%rax, %rax	# PL_sv_root.876
	je	.L1654	#,
.LBB101:
	.loc 1 6973 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_3->sv_any, PL_sv_root.877
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.877, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.878
	addl	$1, %eax	#, PL_sv_count.879
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.879, PL_sv_count
.LBE101:
	jmp	.L1655	#
.L1654:
	.loc 1 6973 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1655:
	.loc 1 6973 0 discriminator 1
	movq	$0, (%rbx)	#, sv_1->sv_any
	movl	$1, 8(%rbx)	#, sv_1->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_1->sv_flags
.LBE100:
	.loc 1 6974 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# i, tmp68
	movq	%rax, %rsi	# tmp68,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setiv	#
	.loc 1 6975 0 discriminator 1
	movq	%rbx, %rax	# sv, D.23185
	.loc 1 6976 0 discriminator 1
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE134:
	.size	Perl_newSViv, .-Perl_newSViv
	.globl	Perl_newSVuv
	.type	Perl_newSVuv, @function
Perl_newSVuv:
.LFB135:
	.loc 1 6989 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# u, u
.LBB102:
	.loc 1 6992 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.880
	testq	%rax, %rax	# PL_sv_root.880
	je	.L1658	#,
.LBB103:
	.loc 1 6992 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_3->sv_any, PL_sv_root.881
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.881, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.882
	addl	$1, %eax	#, PL_sv_count.883
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.883, PL_sv_count
.LBE103:
	jmp	.L1659	#
.L1658:
	.loc 1 6992 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1659:
	.loc 1 6992 0 discriminator 1
	movq	$0, (%rbx)	#, sv_1->sv_any
	movl	$1, 8(%rbx)	#, sv_1->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_1->sv_flags
.LBE102:
	.loc 1 6993 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# u, tmp68
	movq	%rax, %rsi	# tmp68,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setuv	#
	.loc 1 6994 0 discriminator 1
	movq	%rbx, %rax	# sv, D.23188
	.loc 1 6995 0 discriminator 1
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE135:
	.size	Perl_newSVuv, .-Perl_newSVuv
	.globl	Perl_newRV_noinc
	.type	Perl_newRV_noinc, @function
Perl_newRV_noinc:
.LFB136:
	.loc 1 7008 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# tmpRef, tmpRef
.LBB104:
	.loc 1 7011 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.884
	testq	%rax, %rax	# PL_sv_root.884
	je	.L1662	#,
.LBB105:
	.loc 1 7011 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_3->sv_any, PL_sv_root.885
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.885, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.886
	addl	$1, %eax	#, PL_sv_count.887
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.887, PL_sv_count
.LBE105:
	jmp	.L1663	#
.L1662:
	.loc 1 7011 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1663:
	.loc 1 7011 0 discriminator 1
	movq	$0, (%rbx)	#, sv_1->sv_any
	movl	$1, 8(%rbx)	#, sv_1->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_1->sv_flags
.LBE104:
	.loc 1 7012 0 is_stmt 1 discriminator 1
	movl	$3, %esi	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_upgrade	#
	.loc 1 7013 0 discriminator 1
	movq	-24(%rbp), %rax	# tmpRef, tmp73
	movl	12(%rax), %eax	# tmpRef_10(D)->sv_flags, D.23191
	andb	$247, %ah	#, D.23191
	movl	%eax, %edx	# D.23191, D.23191
	movq	-24(%rbp), %rax	# tmpRef, tmp74
	movl	%edx, 12(%rax)	# D.23191, tmpRef_10(D)->sv_flags
	.loc 1 7014 0 discriminator 1
	movq	(%rbx), %rax	# sv_1->sv_any, D.23192
	movq	-24(%rbp), %rdx	# tmpRef, tmp75
	movq	%rdx, (%rax)	# tmp75, MEM[(struct XRV *)_13].xrv_rv
	.loc 1 7015 0 discriminator 1
	movl	12(%rbx), %eax	# sv_1->sv_flags, D.23191
	orl	$524288, %eax	#, D.23191
	movl	%eax, 12(%rbx)	# D.23191, sv_1->sv_flags
	.loc 1 7016 0 discriminator 1
	movq	%rbx, %rax	# sv, D.23193
	.loc 1 7017 0 discriminator 1
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE136:
	.size	Perl_newRV_noinc, .-Perl_newRV_noinc
	.globl	Perl_newRV
	.type	Perl_newRV, @function
Perl_newRV:
.LFB137:
	.loc 1 7025 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# tmpRef, tmpRef
	.loc 1 7026 0
	movq	-8(%rbp), %rax	# tmpRef, tmp69
	movq	%rax, PL_Sv(%rip)	# tmp69, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.889
	testq	%rax, %rax	# PL_Sv.889
	je	.L1667	#,
	.loc 1 7026 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.890
	movl	8(%rax), %edx	# PL_Sv.890_3->sv_refcnt, D.23194
	addl	$1, %edx	#, D.23194
	movl	%edx, 8(%rax)	# D.23194, PL_Sv.890_3->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.890_3->sv_refcnt, D.23194
	testl	%eax, %eax	# D.23194
	je	.L1667	#,
	.loc 1 7026 0
	nop
.L1667:
	.loc 1 7026 0 discriminator 4
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.891
	movq	%rax, %rdi	# PL_Sv.891,
	call	Perl_newRV_noinc	#
	.loc 1 7027 0 is_stmt 1 discriminator 4
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE137:
	.size	Perl_newRV, .-Perl_newRV
	.section	.rodata
	.align 8
.LC59:
	.string	"semi-panic: attempt to dup freed string"
	.text
	.globl	Perl_newSVsv
	.type	Perl_newSVsv, @function
Perl_newSVsv:
.LFB138:
	.loc 1 7040 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %r12	# old, old
	.loc 1 7043 0
	testq	%r12, %r12	# old
	jne	.L1670	#,
	.loc 1 7044 0
	movl	$0, %eax	#, D.23196
	jmp	.L1671	#
.L1670:
	.loc 1 7045 0
	movl	12(%r12), %eax	# old_3(D)->sv_flags, D.23197
	movzbl	%al, %eax	# D.23197, D.23197
	cmpl	$255, %eax	#, D.23197
	jne	.L1672	#,
	.loc 1 7046 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.892
	movq	80(%rax), %rax	# PL_curcop.892_7->cop_warnings, D.23196
	testq	%rax, %rax	# D.23196
	je	.L1673	#,
	.loc 1 7046 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.893
	movq	80(%rax), %rax	# PL_curcop.893_9->cop_warnings, D.23196
	cmpq	$16, %rax	#, D.23196
	je	.L1673	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.894
	movq	80(%rax), %rax	# PL_curcop.894_11->cop_warnings, D.23196
	cmpq	$32, %rax	#, D.23196
	je	.L1674	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.895
	movq	80(%rax), %rax	# PL_curcop.895_13->cop_warnings, D.23196
	movq	(%rax), %rax	# _14->sv_any, D.23198
	movq	(%rax), %rax	# MEM[(struct XPV *)_15].xpv_pv, D.23199
	addq	$6, %rax	#, D.23199
	movzbl	(%rax), %eax	# *_17, D.23200
	movsbl	%al, %eax	# D.23200, D.23201
	andl	$1, %eax	#, D.23201
	testl	%eax, %eax	# D.23201
	je	.L1674	#,
.L1673:
	.loc 1 7047 0 is_stmt 1
	movl	$.LC59, %esi	#,
	movl	$24, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1674:
	.loc 1 7048 0
	movl	$0, %eax	#, D.23196
	jmp	.L1671	#
.L1672:
.LBB106:
	.loc 1 7050 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.896
	testq	%rax, %rax	# PL_sv_root.896
	je	.L1675	#,
.LBB107:
	.loc 1 7050 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rbx	# PL_sv_root, sv
	movq	(%rbx), %rax	# sv_23->sv_any, PL_sv_root.897
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.897, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.898
	addl	$1, %eax	#, PL_sv_count.899
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.899, PL_sv_count
.LBE107:
	jmp	.L1676	#
.L1675:
	.loc 1 7050 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, %rbx	#, sv
.L1676:
	.loc 1 7050 0 discriminator 1
	movq	$0, (%rbx)	#, sv_1->sv_any
	movl	$1, 8(%rbx)	#, sv_1->sv_refcnt
	movl	$0, 12(%rbx)	#, sv_1->sv_flags
.LBE106:
	.loc 1 7054 0 is_stmt 1 discriminator 1
	movl	$18, %edx	#,
	movq	%r12, %rsi	# old,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_setsv_flags	#
	.loc 1 7055 0 discriminator 1
	movq	%rbx, %rax	# sv, D.23196
.L1671:
	.loc 1 7056 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE138:
	.size	Perl_newSVsv, .-Perl_newSVsv
	.globl	Perl_sv_reset
	.type	Perl_sv_reset, @function
Perl_sv_reset:
.LFB139:
	.loc 1 7069 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r15	#
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$296, %rsp	#,
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	movq	%rdi, %r12	# s, s
	movq	%rsi, -328(%rbp)	# stash, stash
	.loc 1 7069 0
	movq	%fs:40, %rax	#, tmp146
	movq	%rax, -56(%rbp)	# tmp146, D.23220
	xorl	%eax, %eax	# tmp146
	.loc 1 7078 0
	cmpq	$0, -328(%rbp)	#, stash
	jne	.L1678	#,
	.loc 1 7079 0
	jmp	.L1677	#
.L1678:
	.loc 1 7081 0
	movzbl	(%r12), %eax	# *s_8(D), D.23205
	testb	%al, %al	# D.23205
	jne	.L1680	#,
	.loc 1 7082 0
	movq	-328(%rbp), %rax	# stash, tmp139
	movq	(%rax), %rax	# stash_7(D)->sv_any, D.23206
	movq	72(%rax), %rbx	# _10->xhv_pmroot, pm
	jmp	.L1681	#
.L1682:
	.loc 1 7083 0 discriminator 2
	movzbl	96(%rbx), %eax	# pm_6->op_pmdynflags, D.23207
	andl	$-2, %eax	#, D.23207
	movb	%al, 96(%rbx)	# D.23207, pm_6->op_pmdynflags
	.loc 1 7082 0 discriminator 2
	movq	72(%rbx), %rbx	# pm_6->op_pmnext, pm
.L1681:
	.loc 1 7082 0 is_stmt 0 discriminator 1
	testq	%rbx, %rbx	# pm
	jne	.L1682	#,
	.loc 1 7085 0 is_stmt 1
	jmp	.L1677	#
.L1680:
	.loc 1 7090 0
	movq	-328(%rbp), %rax	# stash, tmp140
	movq	(%rax), %rax	# stash_7(D)->sv_any, D.23206
	movq	(%rax), %rax	# MEM[(struct HE * * *)_16], D.23209
	testq	%rax, %rax	# D.23209
	jne	.L1683	#,
	.loc 1 7091 0
	jmp	.L1677	#
.L1683:
	.loc 1 7093 0
	leaq	-320(%rbp), %rax	#, tmp141
	movl	$256, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp141,
	call	memset	#
	.loc 1 7094 0
	jmp	.L1684	#
.L1701:
	.loc 1 7095 0
	movzbl	(%r12), %eax	# *s_2, D.23205
	movzbl	%al, %r13d	# D.23207, i
	.loc 1 7096 0
	leaq	1(%r12), %rax	#, D.23210
	movzbl	(%rax), %eax	# *_22, D.23205
	cmpb	$45, %al	#, D.23205
	jne	.L1685	#,
	.loc 1 7097 0
	addq	$2, %r12	#, s
.L1685:
	.loc 1 7099 0
	movq	%r12, %rax	# s, s.900
	leaq	1(%rax), %r12	#, s
	movzbl	(%rax), %eax	# *s.900_25, D.23205
	movzbl	%al, %ebx	# D.23207, max
	.loc 1 7100 0
	jmp	.L1686	#
.L1687:
	.loc 1 7101 0 discriminator 2
	movslq	%r13d, %rax	# i, tmp142
	movb	$1, -320(%rbp,%rax)	#, todo
	.loc 1 7100 0 discriminator 2
	addl	$1, %r13d	#, i
.L1686:
	.loc 1 7100 0 is_stmt 0 discriminator 1
	cmpl	%ebx, %r13d	# max, i
	jle	.L1687	#,
	.loc 1 7103 0 is_stmt 1
	movl	$0, %r13d	#, i
	jmp	.L1688	#
.L1700:
	.loc 1 7104 0
	movq	-328(%rbp), %rax	# stash, tmp143
	movq	(%rax), %rax	# stash_7(D)->sv_any, D.23206
	movq	(%rax), %rax	# MEM[(struct HE * * *)_36], D.23209
	movslq	%r13d, %rdx	# i, D.23211
	salq	$3, %rdx	#, D.23211
	addq	%rdx, %rax	# D.23211, D.23209
	movq	(%rax), %r15	# *_40, entry
	jmp	.L1689	#
.L1699:
	.loc 1 7108 0
	movq	8(%r15), %rax	# entry_3->hent_hek, D.23213
	movzbl	8(%rax), %eax	# _42->hek_key, D.23205
	movzbl	%al, %eax	# D.23207, D.23212
	cltq
	movzbl	-320(%rbp,%rax), %eax	# todo, D.23205
	testb	%al, %al	# D.23205
	jne	.L1690	#,
	.loc 1 7109 0
	jmp	.L1691	#
.L1690:
	.loc 1 7110 0
	movq	16(%r15), %r14	# entry_3->hent_val, gv
	.loc 1 7111 0
	movq	(%r14), %rax	# gv_47->sv_any, D.23214
	movq	56(%rax), %rax	# _48->xgv_gp, D.23215
	movq	(%rax), %rbx	# _49->gp_sv, sv
	.loc 1 7112 0
	movl	12(%rbx), %eax	# sv_50->sv_flags, D.23216
	andl	$9961472, %eax	#, D.23216
	testl	%eax, %eax	# D.23216
	je	.L1692	#,
	.loc 1 7113 0
	movl	12(%rbx), %eax	# sv_50->sv_flags, D.23216
	andl	$8388608, %eax	#, D.23216
	testl	%eax, %eax	# D.23216
	jne	.L1693	#,
	.loc 1 7113 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# sv_50->sv_flags, D.23216
	andl	$524288, %eax	#, D.23216
	testl	%eax, %eax	# D.23216
	je	.L1693	#,
	.loc 1 7114 0 is_stmt 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_unref	#
	.loc 1 7115 0
	jmp	.L1691	#
.L1693:
	jmp	.L1691	#
.L1692:
	.loc 1 7117 0
	movl	12(%rbx), %eax	# sv_50->sv_flags, D.23216
	andl	$1223753727, %eax	#, D.23216
	movl	%eax, 12(%rbx)	# D.23216, sv_50->sv_flags
	movl	12(%rbx), %eax	# sv_50->sv_flags, D.23216
	andl	$2097152, %eax	#, D.23216
	testl	%eax, %eax	# D.23216
	je	.L1695	#,
	.loc 1 7117 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23212
	je	.L1695	#,
	.loc 1 7117 0
	nop
.L1695:
	.loc 1 7118 0 is_stmt 1
	movl	12(%rbx), %eax	# sv_50->sv_flags, D.23216
	movzbl	%al, %eax	# D.23216, D.23216
	cmpl	$3, %eax	#, D.23216
	jbe	.L1696	#,
	.loc 1 7119 0
	movq	(%rbx), %rax	# sv_50->sv_any, D.23217
	movq	$0, 8(%rax)	#, MEM[(struct XPV *)_66].xpv_cur
	.loc 1 7120 0
	movq	(%rbx), %rax	# sv_50->sv_any, D.23217
	movq	(%rax), %rax	# MEM[(struct XPV *)_67].xpv_pv, D.23210
	testq	%rax, %rax	# D.23210
	je	.L1697	#,
	.loc 1 7121 0
	movq	(%rbx), %rax	# sv_50->sv_any, D.23217
	movq	(%rax), %rax	# MEM[(struct XPV *)_69].xpv_pv, D.23210
	movb	$0, (%rax)	#, *_70
.L1697:
	.loc 1 7122 0
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.902
	testb	%al, %al	# PL_tainting.902
	je	.L1696	#,
	.loc 1 7122 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.903
	testb	%al, %al	# PL_tainted.903
	je	.L1696	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.904
	testb	%al, %al	# PL_tainting.904
	je	.L1696	#,
	movq	%rbx, %rdi	# sv,
	call	Perl_sv_taint	#
.L1696:
	.loc 1 7124 0 is_stmt 1
	movq	(%r14), %rax	# gv_47->sv_any, D.23214
	movq	56(%rax), %rax	# _74->xgv_gp, D.23215
	movq	32(%rax), %rax	# _75->gp_av, D.23218
	testq	%rax, %rax	# D.23218
	je	.L1698	#,
	.loc 1 7125 0
	movq	(%r14), %rax	# gv_47->sv_any, D.23214
	movq	56(%rax), %rax	# _77->xgv_gp, D.23215
	movq	32(%rax), %rax	# _78->gp_av, D.23218
	movq	%rax, %rdi	# D.23218,
	call	Perl_av_clear	#
.L1698:
	.loc 1 7127 0
	movq	(%r14), %rax	# gv_47->sv_any, D.23214
	movq	56(%rax), %rax	# _80->xgv_gp, D.23215
	movq	40(%rax), %rax	# _81->gp_hv, D.23219
	testq	%rax, %rax	# D.23219
	je	.L1691	#,
	.loc 1 7127 0 is_stmt 0 discriminator 1
	movq	(%r14), %rax	# gv_47->sv_any, D.23214
	movq	56(%rax), %rax	# _83->xgv_gp, D.23215
	movq	40(%rax), %rax	# _84->gp_hv, D.23219
	movq	(%rax), %rax	# _85->sv_any, D.23206
	movq	80(%rax), %rax	# _86->xhv_name, D.23210
	testq	%rax, %rax	# D.23210
	jne	.L1691	#,
	.loc 1 7128 0 is_stmt 1
	movq	(%r14), %rax	# gv_47->sv_any, D.23214
	movq	56(%rax), %rax	# _88->xgv_gp, D.23215
	movq	40(%rax), %rax	# _89->gp_hv, D.23219
	movq	%rax, %rdi	# D.23219,
	call	Perl_hv_clear	#
	.loc 1 7131 0
	movq	PL_envgv(%rip), %rax	# PL_envgv, PL_envgv.905
	cmpq	%rax, %r14	# PL_envgv.905, gv
	jne	.L1691	#,
	.loc 1 7137 0
	movq	environ(%rip), %rax	# environ, environ.906
	movq	$0, (%rax)	#, *environ.906_92
.L1691:
	.loc 1 7106 0
	movq	(%r15), %r15	# entry_3->hent_next, entry
.L1689:
	.loc 1 7104 0 discriminator 1
	testq	%r15, %r15	# entry
	jne	.L1699	#,
	.loc 1 7103 0
	addl	$1, %r13d	#, i
.L1688:
	.loc 1 7103 0 is_stmt 0 discriminator 1
	movq	-328(%rbp), %rax	# stash, tmp145
	movq	(%rax), %rax	# stash_7(D)->sv_any, D.23206
	movq	16(%rax), %rax	# _32->xhv_max, D.23211
	cmpl	%r13d, %eax	# i, D.23212
	jge	.L1700	#,
.L1684:
	.loc 1 7094 0 is_stmt 1 discriminator 1
	movzbl	(%r12), %eax	# *s_2, D.23205
	testb	%al, %al	# D.23205
	jne	.L1701	#,
.L1677:
	.loc 1 7145 0
	movq	-56(%rbp), %rax	# D.23220, tmp147
	xorq	%fs:40, %rax	#, tmp147
	je	.L1703	#,
	call	__stack_chk_fail	#
.L1703:
	addq	$296, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%r15	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE139:
	.size	Perl_sv_reset, .-Perl_sv_reset
	.section	.rodata
.LC60:
	.string	"Bad filehandle: %s"
.LC61:
	.string	"filehandle"
.LC62:
	.string	"Bad filehandle: %_"
	.text
	.globl	Perl_sv_2io
	.type	Perl_sv_2io, @function
Perl_sv_2io:
.LFB140:
	.loc 1 7159 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# sv, sv
	.loc 1 7164 0
	movq	-40(%rbp), %rax	# sv, tmp91
	movl	12(%rax), %eax	# sv_7(D)->sv_flags, D.23222
	movzbl	%al, %eax	# D.23222, D.23222
	cmpl	$13, %eax	#, D.23222
	je	.L1706	#,
	cmpl	$15, %eax	#, D.23222
	jne	.L1723	#,
	.loc 1 7166 0
	movq	-40(%rbp), %rax	# sv, tmp92
	movq	%rax, -16(%rbp)	# tmp92, io
	.loc 1 7167 0
	jmp	.L1708	#
.L1706:
	.loc 1 7169 0
	movq	-40(%rbp), %rax	# sv, tmp93
	movq	%rax, -8(%rbp)	# tmp93, gv
	.loc 1 7170 0
	cmpq	$0, -8(%rbp)	#, gv
	je	.L1709	#,
	.loc 1 7170 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# gv, tmp94
	movl	12(%rax), %eax	# MEM[(struct SV *)gv_11].sv_flags, D.23222
	movzbl	%al, %eax	# D.23222, D.23222
	cmpl	$13, %eax	#, D.23222
	jne	.L1709	#,
	movq	-8(%rbp), %rax	# gv, tmp95
	movq	(%rax), %rax	# gv_11->sv_any, D.23223
	movq	56(%rax), %rax	# _14->xgv_gp, D.23224
	testq	%rax, %rax	# D.23224
	je	.L1709	#,
	movq	-8(%rbp), %rax	# gv, tmp96
	movq	(%rax), %rax	# gv_11->sv_any, D.23223
	movq	56(%rax), %rax	# _16->xgv_gp, D.23224
	movq	16(%rax), %rax	# _17->gp_io, iftmp.907
	jmp	.L1710	#
.L1709:
	.loc 1 7170 0 discriminator 2
	movl	$0, %eax	#, iftmp.907
.L1710:
	.loc 1 7170 0 discriminator 3
	movq	%rax, -16(%rbp)	# iftmp.907, io
	.loc 1 7171 0 is_stmt 1 discriminator 3
	cmpq	$0, -16(%rbp)	#, io
	jne	.L1711	#,
	.loc 1 7172 0
	movq	-8(%rbp), %rax	# gv, tmp97
	movq	(%rax), %rax	# gv_11->sv_any, D.23223
	movq	64(%rax), %rax	# _21->xgv_name, D.23225
	movq	%rax, %rsi	# D.23225,
	movl	$.LC60, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 7173 0
	jmp	.L1708	#
.L1711:
	jmp	.L1708	#
.L1723:
	.loc 1 7175 0
	movq	-40(%rbp), %rax	# sv, tmp98
	movl	12(%rax), %eax	# sv_7(D)->sv_flags, D.23222
	andl	$118423552, %eax	#, D.23222
	testl	%eax, %eax	# D.23222
	jne	.L1712	#,
	.loc 1 7176 0
	movl	$.LC61, %esi	#,
	movl	$PL_no_usym, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1712:
	.loc 1 7177 0
	movq	-40(%rbp), %rax	# sv, tmp99
	movl	12(%rax), %eax	# sv_7(D)->sv_flags, D.23222
	andl	$524288, %eax	#, D.23222
	testl	%eax, %eax	# D.23222
	je	.L1713	#,
	.loc 1 7178 0
	movq	-40(%rbp), %rax	# sv, tmp100
	movq	(%rax), %rax	# sv_7(D)->sv_any, D.23226
	movq	(%rax), %rax	# MEM[(struct XRV *)_27].xrv_rv, D.23227
	movq	%rax, %rdi	# D.23227,
	call	Perl_sv_2io	#
	jmp	.L1722	#
.L1713:
	.loc 1 7179 0
	movq	-40(%rbp), %rax	# sv, tmp101
	movl	12(%rax), %eax	# sv_7(D)->sv_flags, D.23222
	andl	$262144, %eax	#, D.23222
	testl	%eax, %eax	# D.23222
	je	.L1715	#,
	.loc 1 7179 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp102
	movq	(%rax), %rax	# sv_7(D)->sv_any, D.23226
	movq	8(%rax), %rax	# MEM[(struct XPV *)_32].xpv_cur, n_a.909
	movq	%rax, -24(%rbp)	# n_a.909, n_a
	movq	-40(%rbp), %rax	# sv, tmp103
	movq	(%rax), %rax	# sv_7(D)->sv_any, D.23226
	movq	(%rax), %rax	# MEM[(struct XPV *)_34].xpv_pv, iftmp.908
	jmp	.L1716	#
.L1715:
	.loc 1 7179 0 discriminator 2
	leaq	-24(%rbp), %rcx	#, tmp104
	movq	-40(%rbp), %rax	# sv, tmp105
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp104,
	movq	%rax, %rdi	# tmp105,
	call	Perl_sv_2pv_flags	#
.L1716:
	.loc 1 7179 0 discriminator 3
	movl	$15, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# iftmp.908,
	call	Perl_gv_fetchpv	#
	movq	%rax, -8(%rbp)	# tmp106, gv
	.loc 1 7180 0 is_stmt 1 discriminator 3
	cmpq	$0, -8(%rbp)	#, gv
	je	.L1717	#,
	.loc 1 7181 0
	cmpq	$0, -8(%rbp)	#, gv
	je	.L1718	#,
	.loc 1 7181 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# gv, tmp107
	movl	12(%rax), %eax	# MEM[(struct SV *)gv_37].sv_flags, D.23222
	movzbl	%al, %eax	# D.23222, D.23222
	cmpl	$13, %eax	#, D.23222
	jne	.L1718	#,
	movq	-8(%rbp), %rax	# gv, tmp108
	movq	(%rax), %rax	# gv_37->sv_any, D.23223
	movq	56(%rax), %rax	# _40->xgv_gp, D.23224
	testq	%rax, %rax	# D.23224
	je	.L1718	#,
	movq	-8(%rbp), %rax	# gv, tmp109
	movq	(%rax), %rax	# gv_37->sv_any, D.23223
	movq	56(%rax), %rax	# _42->xgv_gp, D.23224
	movq	16(%rax), %rax	# _43->gp_io, iftmp.910
	jmp	.L1719	#
.L1718:
	.loc 1 7181 0 discriminator 2
	movl	$0, %eax	#, iftmp.910
.L1719:
	.loc 1 7181 0 discriminator 3
	movq	%rax, -16(%rbp)	# iftmp.910, io
	jmp	.L1720	#
.L1717:
	.loc 1 7183 0 is_stmt 1
	movq	$0, -16(%rbp)	#, io
.L1720:
	.loc 1 7184 0
	cmpq	$0, -16(%rbp)	#, io
	jne	.L1721	#,
	.loc 1 7185 0
	movq	-40(%rbp), %rax	# sv, tmp110
	movq	%rax, %rsi	# tmp110,
	movl	$.LC62, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 7186 0
	jmp	.L1724	#
.L1721:
.L1724:
	nop
.L1708:
	.loc 1 7188 0
	movq	-16(%rbp), %rax	# io, D.23221
.L1722:
	.loc 1 7189 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE140:
	.size	Perl_sv_2io, .-Perl_sv_2io
	.section	.rodata
	.align 8
.LC63:
	.string	"Overloaded dereference did not return a reference"
.LC64:
	.string	"Not a subroutine reference"
	.align 8
.LC65:
	.string	"Unable to create sub named \"%_\""
	.text
	.globl	Perl_sv_2cv
	.type	Perl_sv_2cv, @function
Perl_sv_2cv:
.LFB141:
	.loc 1 7202 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -88(%rbp)	# sv, sv
	movq	%rsi, -96(%rbp)	# st, st
	movq	%rdx, -104(%rbp)	# gvp, gvp
	movl	%ecx, -108(%rbp)	# lref, lref
	.loc 1 7203 0
	movq	$0, -64(%rbp)	#, gv
	.loc 1 7204 0
	movq	$0, -48(%rbp)	#, cv
	.loc 1 7207 0
	movq	-88(%rbp), %rax	# sv, sv.911
	testq	%rax, %rax	# sv.911
	jne	.L1726	#,
	.loc 1 7208 0
	movq	-104(%rbp), %rax	# gvp, tmp145
	movq	$0, (%rax)	#, *gvp_13(D)
	movl	$0, %eax	#, D.23231
	jmp	.L1756	#
.L1726:
	.loc 1 7209 0
	movq	-88(%rbp), %rax	# sv, sv.912
	movl	12(%rax), %eax	# sv.912_15->sv_flags, D.23232
	movzbl	%al, %eax	# D.23232, D.23232
	cmpl	$12, %eax	#, D.23232
	je	.L1729	#,
	cmpl	$12, %eax	#, D.23232
	ja	.L1730	#,
	cmpl	$10, %eax	#, D.23232
	jb	.L1728	#,
	jmp	.L1757	#
.L1730:
	cmpl	$13, %eax	#, D.23232
	je	.L1732	#,
	jmp	.L1728	#
.L1729:
	.loc 1 7211 0
	movq	-88(%rbp), %rax	# sv, sv.913
	movq	(%rax), %rax	# sv.913_18->sv_any, D.23233
	movq	56(%rax), %rdx	# MEM[(struct XPVCV *)_19].xcv_stash, D.23234
	movq	-96(%rbp), %rax	# st, tmp146
	movq	%rdx, (%rax)	# D.23234, *st_21(D)
	.loc 1 7212 0
	movq	-104(%rbp), %rax	# gvp, tmp147
	movq	$0, (%rax)	#, *gvp_13(D)
	.loc 1 7213 0
	movq	-88(%rbp), %rax	# sv, D.23231
	jmp	.L1756	#
.L1757:
	.loc 1 7216 0
	movq	-104(%rbp), %rax	# gvp, tmp148
	movq	$0, (%rax)	#, *gvp_13(D)
	.loc 1 7217 0
	movl	$0, %eax	#, D.23231
	jmp	.L1756	#
.L1732:
	.loc 1 7219 0
	movq	-88(%rbp), %rax	# sv, tmp149
	movq	%rax, -64(%rbp)	# tmp149, gv
	.loc 1 7220 0
	movq	-104(%rbp), %rax	# gvp, tmp150
	movq	-64(%rbp), %rdx	# gv, tmp151
	movq	%rdx, (%rax)	# tmp151, *gvp_13(D)
	.loc 1 7221 0
	movq	-64(%rbp), %rax	# gv, tmp152
	movq	(%rax), %rax	# gv_24->sv_any, D.23235
	movq	56(%rax), %rax	# _25->xgv_gp, D.23236
	movq	48(%rax), %rax	# _26->gp_egv, D.23237
	testq	%rax, %rax	# D.23237
	je	.L1733	#,
	.loc 1 7221 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# gv, tmp153
	movq	(%rax), %rax	# gv_24->sv_any, D.23235
	movq	56(%rax), %rax	# _28->xgv_gp, D.23236
	movq	48(%rax), %rax	# _29->gp_egv, iftmp.914
	jmp	.L1734	#
.L1733:
	.loc 1 7221 0 discriminator 2
	movq	-64(%rbp), %rax	# gv, iftmp.914
.L1734:
	.loc 1 7221 0 discriminator 3
	movq	(%rax), %rax	# iftmp.914_6->sv_any, D.23235
	movq	80(%rax), %rdx	# _32->xgv_stash, D.23234
	movq	-96(%rbp), %rax	# st, tmp154
	movq	%rdx, (%rax)	# D.23234, *st_21(D)
	.loc 1 7222 0 is_stmt 1 discriminator 3
	jmp	.L1735	#
.L1728:
	.loc 1 7225 0
	movq	-88(%rbp), %rax	# sv, sv.915
	movl	12(%rax), %eax	# sv.915_34->sv_flags, D.23232
	andl	$8192, %eax	#, D.23232
	testl	%eax, %eax	# D.23232
	je	.L1736	#,
	.loc 1 7226 0
	movq	-88(%rbp), %rax	# sv, sv.916
	movq	%rax, %rdi	# sv.916,
	call	Perl_mg_get	#
.L1736:
	.loc 1 7227 0
	movq	-88(%rbp), %rax	# sv, sv.917
	movl	12(%rax), %eax	# sv.917_38->sv_flags, D.23232
	andl	$524288, %eax	#, D.23232
	testl	%eax, %eax	# D.23232
	je	.L1737	#,
.LBB108:
	.loc 1 7228 0
	leaq	-88(%rbp), %rax	#, tmp155
	movq	%rax, -40(%rbp)	# tmp155, sp
	.loc 1 7229 0
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.918
	testq	%rax, %rax	# PL_amagic_generation.918
	je	.L1738	#,
.LBB109:
	.loc 1 7229 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sp, tmp156
	movq	(%rax), %rax	# *sp_41, tmp157
	movq	%rax, -56(%rbp)	# tmp157, arg
.L1739:
	.loc 1 7229 0 discriminator 2
	movq	-56(%rbp), %rax	# arg, tmp158
	movl	12(%rax), %eax	# arg_4->sv_flags, D.23232
	andl	$268435456, %eax	#, D.23232
	testl	%eax, %eax	# D.23232
	je	.L1738	#,
	.loc 1 7229 0 discriminator 1
	movq	-56(%rbp), %rax	# arg, tmp159
	movl	$9, %ecx	#,
	movl	$62, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp159,
	call	Perl_amagic_call	#
	movq	%rax, -32(%rbp)	# tmp160, tmpsv
	cmpq	$0, -32(%rbp)	#, tmpsv
	je	.L1738	#,
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, tmp161
	movq	%rax, -40(%rbp)	# tmp161, sp
.LBB110:
	movq	-32(%rbp), %rax	# tmpsv, tmp162
	movq	%rax, -88(%rbp)	# tmp162, sv
	movq	-32(%rbp), %rax	# tmpsv, tmp163
	movl	12(%rax), %eax	# tmpsv_46->sv_flags, D.23232
	andl	$524288, %eax	#, D.23232
	testl	%eax, %eax	# D.23232
	jne	.L1740	#,
	movl	$.LC63, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1740:
	.loc 1 7229 0 discriminator 2
	movq	-32(%rbp), %rax	# tmpsv, tmp164
	cmpq	-56(%rbp), %rax	# arg, tmp164
	je	.L1738	#,
	.loc 1 7229 0 discriminator 1
	movq	-32(%rbp), %rax	# tmpsv, tmp165
	movq	(%rax), %rax	# tmpsv_46->sv_any, D.23233
	movq	(%rax), %rdx	# MEM[(struct XRV *)_50].xrv_rv, D.23238
	movq	-56(%rbp), %rax	# arg, tmp166
	movq	(%rax), %rax	# arg_4->sv_any, D.23233
	movq	(%rax), %rax	# MEM[(struct XRV *)_52].xrv_rv, D.23238
	cmpq	%rax, %rdx	# D.23238, D.23238
	je	.L1738	#,
	movq	-32(%rbp), %rax	# tmpsv, tmp167
	movq	%rax, -56(%rbp)	# tmp167, arg
	jmp	.L1739	#
.L1738:
.LBE110:
.LBE109:
	.loc 1 7231 0 is_stmt 1
	movq	-88(%rbp), %rax	# sv, sv.919
	movq	(%rax), %rax	# sv.919_55->sv_any, D.23233
	movq	(%rax), %rax	# MEM[(struct XRV *)_56].xrv_rv, sv.920
	movq	%rax, -88(%rbp)	# sv.920, sv
	.loc 1 7232 0
	movq	-88(%rbp), %rax	# sv, sv.921
	movl	12(%rax), %eax	# sv.921_58->sv_flags, D.23232
	movzbl	%al, %eax	# D.23232, D.23232
	cmpl	$12, %eax	#, D.23232
	jne	.L1741	#,
	.loc 1 7233 0
	movq	-88(%rbp), %rax	# sv, tmp168
	movq	%rax, -48(%rbp)	# tmp168, cv
	.loc 1 7234 0
	movq	-104(%rbp), %rax	# gvp, tmp169
	movq	$0, (%rax)	#, *gvp_13(D)
	.loc 1 7235 0
	movq	-48(%rbp), %rax	# cv, tmp170
	movq	(%rax), %rax	# cv_61->sv_any, D.23239
	movq	56(%rax), %rdx	# _62->xcv_stash, D.23234
	movq	-96(%rbp), %rax	# st, tmp171
	movq	%rdx, (%rax)	# D.23234, *st_21(D)
	.loc 1 7236 0
	movq	-48(%rbp), %rax	# cv, D.23231
	jmp	.L1756	#
.L1741:
	.loc 1 7238 0
	movq	-88(%rbp), %rax	# sv, sv.922
	movl	12(%rax), %eax	# sv.922_65->sv_flags, D.23232
	movzbl	%al, %eax	# D.23232, D.23232
	cmpl	$13, %eax	#, D.23232
	jne	.L1742	#,
	.loc 1 7239 0
	movq	-88(%rbp), %rax	# sv, tmp172
	movq	%rax, -64(%rbp)	# tmp172, gv
	jmp	.L1744	#
.L1742:
	.loc 1 7241 0
	movl	$.LC64, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.LBE108:
	jmp	.L1744	#
.L1737:
	.loc 1 7243 0
	movq	-88(%rbp), %rax	# sv, sv.923
	movl	12(%rax), %eax	# sv.923_69->sv_flags, D.23232
	movzbl	%al, %eax	# D.23232, D.23232
	cmpl	$13, %eax	#, D.23232
	jne	.L1745	#,
	.loc 1 7244 0
	movq	-88(%rbp), %rax	# sv, tmp173
	movq	%rax, -64(%rbp)	# tmp173, gv
	jmp	.L1744	#
.L1745:
	.loc 1 7246 0
	movq	-88(%rbp), %rax	# sv, sv.925
	movl	12(%rax), %eax	# sv.925_73->sv_flags, D.23232
	andl	$262144, %eax	#, D.23232
	testl	%eax, %eax	# D.23232
	je	.L1746	#,
	.loc 1 7246 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# sv, sv.926
	movq	(%rax), %rax	# sv.926_76->sv_any, D.23233
	movq	8(%rax), %rax	# MEM[(struct XPV *)_77].xpv_cur, n_a.927
	movq	%rax, -72(%rbp)	# n_a.927, n_a
	movq	-88(%rbp), %rax	# sv, sv.928
	movq	(%rax), %rax	# sv.928_79->sv_any, D.23233
	movq	(%rax), %rax	# MEM[(struct XPV *)_80].xpv_pv, iftmp.924
	jmp	.L1747	#
.L1746:
	.loc 1 7246 0 discriminator 2
	movq	-88(%rbp), %rax	# sv, sv.929
	leaq	-72(%rbp), %rcx	#, tmp174
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp174,
	movq	%rax, %rdi	# sv.929,
	call	Perl_sv_2pv_flags	#
.L1747:
	.loc 1 7246 0 discriminator 3
	movl	-108(%rbp), %ecx	# lref, tmp175
	movl	$12, %edx	#,
	movl	%ecx, %esi	# tmp175,
	movq	%rax, %rdi	# iftmp.924,
	call	Perl_gv_fetchpv	#
	movq	%rax, -64(%rbp)	# tmp176, gv
.L1744:
	.loc 1 7247 0 is_stmt 1
	movq	-104(%rbp), %rax	# gvp, tmp177
	movq	-64(%rbp), %rdx	# gv, tmp178
	movq	%rdx, (%rax)	# tmp178, *gvp_13(D)
	.loc 1 7248 0
	cmpq	$0, -64(%rbp)	#, gv
	jne	.L1748	#,
	.loc 1 7249 0
	movl	$0, %eax	#, D.23231
	jmp	.L1756	#
.L1748:
	.loc 1 7250 0
	movq	-64(%rbp), %rax	# gv, tmp179
	movq	(%rax), %rax	# gv_2->sv_any, D.23235
	movq	56(%rax), %rax	# _87->xgv_gp, D.23236
	movq	48(%rax), %rax	# _88->gp_egv, D.23237
	testq	%rax, %rax	# D.23237
	je	.L1749	#,
	.loc 1 7250 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# gv, tmp180
	movq	(%rax), %rax	# gv_2->sv_any, D.23235
	movq	56(%rax), %rax	# _90->xgv_gp, D.23236
	movq	48(%rax), %rax	# _91->gp_egv, iftmp.930
	jmp	.L1750	#
.L1749:
	.loc 1 7250 0 discriminator 2
	movq	-64(%rbp), %rax	# gv, iftmp.930
.L1750:
	.loc 1 7250 0 discriminator 3
	movq	(%rax), %rax	# iftmp.930_8->sv_any, D.23235
	movq	80(%rax), %rdx	# _94->xgv_stash, D.23234
	movq	-96(%rbp), %rax	# st, tmp181
	movq	%rdx, (%rax)	# D.23234, *st_21(D)
.L1735:
	.loc 1 7252 0 is_stmt 1
	cmpl	$0, -108(%rbp)	#, lref
	je	.L1751	#,
	.loc 1 7252 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# gv, tmp182
	movq	(%rax), %rax	# gv_3->sv_any, D.23235
	movq	56(%rax), %rax	# _96->xgv_gp, D.23236
	movl	64(%rax), %eax	# _97->gp_cvgen, D.23232
	testl	%eax, %eax	# D.23232
	jne	.L1752	#,
	movq	-64(%rbp), %rax	# gv, tmp183
	movq	(%rax), %rax	# gv_3->sv_any, D.23235
	movq	56(%rax), %rax	# _99->xgv_gp, D.23236
	movq	56(%rax), %rax	# _100->gp_cv, D.23231
	testq	%rax, %rax	# D.23231
	jne	.L1751	#,
.L1752:
.LBB111:
	.loc 1 7254 0 is_stmt 1
	call	Perl_push_scope	#
	.loc 1 7255 0
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -24(%rbp)	# tmp184, tmpsv
	.loc 1 7256 0
	movq	-64(%rbp), %rsi	# gv, tmp185
	movq	-24(%rbp), %rax	# tmpsv, tmp186
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# tmp186,
	call	Perl_gv_efullname4	#
	.loc 1 7260 0
	movq	-24(%rbp), %rax	# tmpsv, tmp187
	movq	%rax, %rdx	# tmp187,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rbx	#, D.23240
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_start_subparse	#
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movq	%rbx, %rsi	# D.23240,
	movl	%eax, %edi	# D.23241,
	call	Perl_newSUB	#
	.loc 1 7264 0
	call	Perl_pop_scope	#
	.loc 1 7265 0
	movq	-64(%rbp), %rax	# gv, tmp188
	movq	(%rax), %rax	# gv_3->sv_any, D.23235
	movq	56(%rax), %rax	# _105->xgv_gp, D.23236
	movl	64(%rax), %eax	# _106->gp_cvgen, D.23232
	testl	%eax, %eax	# D.23232
	jne	.L1753	#,
	.loc 1 7265 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# gv, tmp189
	movq	(%rax), %rax	# gv_3->sv_any, D.23235
	movq	56(%rax), %rax	# _108->xgv_gp, D.23236
	movq	56(%rax), %rax	# _109->gp_cv, D.23231
	testq	%rax, %rax	# D.23231
	jne	.L1751	#,
.L1753:
	.loc 1 7266 0 is_stmt 1
	movq	-88(%rbp), %rax	# sv, sv.931
	movq	%rax, %rsi	# sv.931,
	movl	$.LC65, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1751:
.LBE111:
	.loc 1 7269 0
	movq	-64(%rbp), %rax	# gv, tmp190
	movq	(%rax), %rax	# gv_3->sv_any, D.23235
	movq	56(%rax), %rax	# _112->xgv_gp, D.23236
	movl	64(%rax), %eax	# _113->gp_cvgen, D.23232
	testl	%eax, %eax	# D.23232
	jne	.L1754	#,
	.loc 1 7269 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# gv, tmp191
	movq	(%rax), %rax	# gv_3->sv_any, D.23235
	movq	56(%rax), %rax	# _115->xgv_gp, D.23236
	movq	56(%rax), %rax	# _116->gp_cv, iftmp.932
	jmp	.L1755	#
.L1754:
	.loc 1 7269 0 discriminator 2
	movl	$0, %eax	#, iftmp.932
.L1755:
.L1756:
	.loc 1 7271 0 is_stmt 1
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE141:
	.size	Perl_sv_2cv, .-Perl_sv_2cv
	.globl	Perl_sv_true
	.type	Perl_sv_true, @function
Perl_sv_true:
.LFB142:
	.loc 1 7285 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rax	# sv, sv
	.loc 1 7286 0
	testq	%rax, %rax	# sv
	jne	.L1759	#,
	.loc 1 7287 0
	movl	$0, %eax	#, D.23246
	jmp	.L1760	#
.L1759:
	.loc 1 7288 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23247
	andl	$262144, %edx	#, D.23247
	testl	%edx, %edx	# D.23247
	je	.L1761	#,
.LBB112:
	.loc 1 7290 0
	movq	(%rax), %rbx	# sv_2(D)->sv_any, tXpv
	testq	%rbx, %rbx	# tXpv
	je	.L1762	#,
	.loc 1 7291 0 discriminator 1
	movq	8(%rbx), %rax	# tXpv_6->xpv_cur, D.23248
	.loc 1 7290 0 discriminator 1
	cmpq	$1, %rax	#, D.23248
	ja	.L1763	#,
	.loc 1 7292 0
	movq	8(%rbx), %rax	# tXpv_6->xpv_cur, D.23248
	.loc 1 7291 0
	testq	%rax, %rax	# D.23248
	je	.L1762	#,
	.loc 1 7292 0
	movq	(%rbx), %rax	# tXpv_6->xpv_pv, D.23249
	movzbl	(%rax), %eax	# *_9, D.23250
	cmpb	$48, %al	#, D.23250
	je	.L1762	#,
.L1763:
	.loc 1 7293 0
	movl	$1, %eax	#, D.23246
	jmp	.L1760	#
.L1762:
	.loc 1 7295 0
	movl	$0, %eax	#, D.23246
	jmp	.L1760	#
.L1761:
.LBE112:
	.loc 1 7298 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23247
	andl	$65536, %edx	#, D.23247
	testl	%edx, %edx	# D.23247
	je	.L1764	#,
	.loc 1 7299 0
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23251
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_15].xiv_iv, D.23252
	testq	%rax, %rax	# D.23252
	setne	%al	#, D.23253
	movzbl	%al, %eax	# D.23253, D.23246
	jmp	.L1760	#
.L1764:
	.loc 1 7301 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23247
	andl	$131072, %edx	#, D.23247
	testl	%edx, %edx	# D.23247
	je	.L1765	#,
	.loc 1 7302 0
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23251
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_21].xnv_nv, D.23254
	xorpd	%xmm1, %xmm1	# tmp81
	ucomisd	%xmm1, %xmm0	# tmp81, D.23254
	setp	%dl	#, tmp80
	movl	$1, %eax	#, tmp83
	xorpd	%xmm1, %xmm1	# tmp82
	ucomisd	%xmm1, %xmm0	# tmp82, D.23254
	cmove	%edx, %eax	# tmp80,, D.23253
	movzbl	%al, %eax	# D.23253, D.23246
	jmp	.L1760	#
.L1765:
	.loc 1 7304 0
	movq	%rax, %rdi	# sv,
	call	Perl_sv_2bool	#
	movsbl	%al, %eax	# D.23250, D.23246
.L1760:
	.loc 1 7307 0
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE142:
	.size	Perl_sv_true, .-Perl_sv_true
	.globl	Perl_sv_iv
	.type	Perl_sv_iv, @function
Perl_sv_iv:
.LFB143:
	.loc 1 7320 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, %rax	# sv, sv
	.loc 1 7321 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23256
	andl	$65536, %edx	#, D.23256
	testl	%edx, %edx	# D.23256
	je	.L1767	#,
	.loc 1 7322 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23256
	testl	%edx, %edx	# D.23257
	jns	.L1768	#,
	.loc 1 7323 0
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23258
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_7].xuv_uv, D.23259
	jmp	.L1769	#
.L1768:
	.loc 1 7324 0
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23258
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_10].xiv_iv, D.23255
	jmp	.L1769	#
.L1767:
	.loc 1 7326 0
	movq	%rax, %rdi	# sv,
	call	Perl_sv_2iv	#
.L1769:
	.loc 1 7327 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE143:
	.size	Perl_sv_iv, .-Perl_sv_iv
	.globl	Perl_sv_uv
	.type	Perl_sv_uv, @function
Perl_sv_uv:
.LFB144:
	.loc 1 7340 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, %rax	# sv, sv
	.loc 1 7341 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23261
	andl	$65536, %edx	#, D.23261
	testl	%edx, %edx	# D.23261
	je	.L1771	#,
	.loc 1 7342 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23261
	testl	%edx, %edx	# D.23262
	jns	.L1772	#,
	.loc 1 7343 0
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23263
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_7].xuv_uv, D.23260
	jmp	.L1773	#
.L1772:
	.loc 1 7344 0
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23263
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_9].xiv_iv, D.23264
	jmp	.L1773	#
.L1771:
	.loc 1 7346 0
	movq	%rax, %rdi	# sv,
	call	Perl_sv_2uv	#
.L1773:
	.loc 1 7347 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE144:
	.size	Perl_sv_uv, .-Perl_sv_uv
	.globl	Perl_sv_nv
	.type	Perl_sv_nv, @function
Perl_sv_nv:
.LFB145:
	.loc 1 7360 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, %rax	# sv, sv
	.loc 1 7361 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23266
	andl	$131072, %edx	#, D.23266
	testl	%edx, %edx	# D.23266
	je	.L1775	#,
	.loc 1 7362 0
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23267
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_5].xnv_nv, D.23265
	jmp	.L1776	#
.L1775:
	.loc 1 7363 0
	movq	%rax, %rdi	# sv,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -8(%rbp)	#, %sfp
	movq	-8(%rbp), %rax	# %sfp, D.23265
.L1776:
	.loc 1 7364 0
	movq	%rax, -8(%rbp)	# <retval>, %sfp
	movsd	-8(%rbp), %xmm0	# %sfp,
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE145:
	.size	Perl_sv_nv, .-Perl_sv_nv
	.globl	Perl_sv_pv
	.type	Perl_sv_pv, @function
Perl_sv_pv:
.LFB146:
	.loc 1 7372 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	.loc 1 7375 0
	movq	-24(%rbp), %rax	# sv, tmp64
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.23269
	andl	$262144, %eax	#, D.23269
	testl	%eax, %eax	# D.23269
	je	.L1778	#,
	.loc 1 7376 0
	movq	-24(%rbp), %rax	# sv, tmp65
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23270
	movq	(%rax), %rax	# MEM[(struct XPV *)_5].xpv_pv, D.23268
	jmp	.L1780	#
.L1778:
	.loc 1 7378 0
	leaq	-8(%rbp), %rcx	#, tmp66
	movq	-24(%rbp), %rax	# sv, tmp67
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp66,
	movq	%rax, %rdi	# tmp67,
	call	Perl_sv_2pv_flags	#
.L1780:
	.loc 1 7379 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE146:
	.size	Perl_sv_pv, .-Perl_sv_pv
	.globl	Perl_sv_pvn
	.type	Perl_sv_pvn, @function
Perl_sv_pvn:
.LFB147:
	.loc 1 7396 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# lp, lp
	.loc 1 7397 0
	movq	-8(%rbp), %rax	# sv, tmp66
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.23272
	andl	$262144, %eax	#, D.23272
	testl	%eax, %eax	# D.23272
	je	.L1782	#,
	.loc 1 7398 0
	movq	-8(%rbp), %rax	# sv, tmp67
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23273
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_5].xpv_cur, D.23274
	movq	-16(%rbp), %rax	# lp, tmp68
	movq	%rdx, (%rax)	# D.23274, *lp_7(D)
	.loc 1 7399 0
	movq	-8(%rbp), %rax	# sv, tmp69
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23273
	movq	(%rax), %rax	# MEM[(struct XPV *)_8].xpv_pv, D.23271
	jmp	.L1783	#
.L1782:
	.loc 1 7401 0
	movq	-16(%rbp), %rcx	# lp, tmp70
	movq	-8(%rbp), %rax	# sv, tmp71
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp70,
	movq	%rax, %rdi	# tmp71,
	call	Perl_sv_2pv_flags	#
.L1783:
	.loc 1 7402 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE147:
	.size	Perl_sv_pvn, .-Perl_sv_pvn
	.globl	Perl_sv_pvn_nomg
	.type	Perl_sv_pvn_nomg, @function
Perl_sv_pvn_nomg:
.LFB148:
	.loc 1 7407 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, %rax	# sv, sv
	movq	%rsi, -8(%rbp)	# lp, lp
	.loc 1 7408 0
	movl	12(%rax), %edx	# sv_2(D)->sv_flags, D.23276
	andl	$262144, %edx	#, D.23276
	testl	%edx, %edx	# D.23276
	je	.L1785	#,
	.loc 1 7409 0
	movq	(%rax), %rdx	# sv_2(D)->sv_any, D.23277
	movq	8(%rdx), %rcx	# MEM[(struct XPV *)_5].xpv_cur, D.23278
	movq	-8(%rbp), %rdx	# lp, tmp67
	movq	%rcx, (%rdx)	# D.23278, *lp_7(D)
	.loc 1 7410 0
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23277
	movq	(%rax), %rax	# MEM[(struct XPV *)_8].xpv_pv, D.23275
	jmp	.L1786	#
.L1785:
	.loc 1 7412 0
	movq	-8(%rbp), %rcx	# lp, tmp68
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp68,
	movq	%rax, %rdi	# sv,
	call	Perl_sv_2pv_flags	#
.L1786:
	.loc 1 7413 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE148:
	.size	Perl_sv_pvn_nomg, .-Perl_sv_pvn_nomg
	.globl	Perl_sv_pvn_force
	.type	Perl_sv_pvn_force, @function
Perl_sv_pvn_force:
.LFB149:
	.loc 1 7421 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# lp, lp
	.loc 1 7422 0
	movq	-16(%rbp), %rcx	# lp, tmp61
	movq	-8(%rbp), %rax	# sv, tmp62
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp61,
	movq	%rax, %rdi	# tmp62,
	call	Perl_sv_pvn_force_flags	#
	.loc 1 7423 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE149:
	.size	Perl_sv_pvn_force, .-Perl_sv_pvn_force
	.section	.rodata
	.align 8
.LC66:
	.string	"Can't coerce %s to string in %s"
	.text
	.globl	Perl_sv_pvn_force_flags
	.type	Perl_sv_pvn_force_flags, @function
Perl_sv_pvn_force_flags:
.LFB150:
	.loc 1 7446 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# sv, sv
	movq	%rsi, -48(%rbp)	# lp, lp
	movl	%edx, -52(%rbp)	# flags, flags
	.loc 1 7447 0
	movq	$0, -32(%rbp)	#, s
	.loc 1 7449 0
	movq	-40(%rbp), %rax	# sv, tmp113
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.23280
	andl	$9961472, %eax	#, D.23280
	testl	%eax, %eax	# D.23280
	je	.L1790	#,
	.loc 1 7449 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp114
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.23280
	andl	$524288, %eax	#, D.23280
	testl	%eax, %eax	# D.23280
	jne	.L1790	#,
	.loc 1 7450 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp115
	movq	%rax, %rdi	# tmp115,
	call	Perl_sv_force_normal	#
.L1790:
	.loc 1 7452 0
	movq	-40(%rbp), %rax	# sv, tmp116
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.23280
	andl	$262144, %eax	#, D.23280
	testl	%eax, %eax	# D.23280
	je	.L1791	#,
	.loc 1 7453 0
	movq	-40(%rbp), %rax	# sv, tmp117
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.23281
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_11].xpv_cur, D.23282
	movq	-48(%rbp), %rax	# lp, tmp118
	movq	%rdx, (%rax)	# D.23282, *lp_13(D)
	jmp	.L1792	#
.L1791:
	.loc 1 7456 0
	movq	-40(%rbp), %rax	# sv, tmp119
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.23280
	movzbl	%al, %eax	# D.23280, D.23280
	cmpl	$9, %eax	#, D.23280
	jbe	.L1793	#,
	.loc 1 7456 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp120
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.23280
	movzbl	%al, %eax	# D.23280, D.23280
	cmpl	$14, %eax	#, D.23280
	je	.L1793	#,
	.loc 1 7458 0 is_stmt 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.934
	movzwl	32(%rax), %eax	# PL_op.934_18->op_type, D.23283
	.loc 1 7457 0
	cmpw	$351, %ax	#, D.23283
	jne	.L1794	#,
	.loc 1 7458 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.935
	.loc 1 7457 0
	movq	%rax, %rdi	# PL_op.935,
	call	Perl_custom_op_name	#
	movq	%rax, %rbx	#, iftmp.933
	jmp	.L1795	#
.L1794:
	.loc 1 7458 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.936
	movzwl	32(%rax), %eax	# PL_op.936_22->op_type, D.23283
	movzwl	%ax, %eax	# D.23283, D.23284
	.loc 1 7457 0 discriminator 1
	cltq
	movq	PL_op_name(,%rax,8), %rbx	# PL_op_name, iftmp.933
.L1795:
	.loc 1 7457 0 is_stmt 0 discriminator 2
	movq	-40(%rbp), %rax	# sv, tmp122
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp122,
	call	Perl_sv_reftype	#
	movq	%rbx, %rdx	# iftmp.933,
	movq	%rax, %rsi	# D.23285,
	movl	$.LC66, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L1796	#
.L1793:
	.loc 1 7461 0 is_stmt 1
	movl	-52(%rbp), %edx	# flags, tmp123
	movq	-48(%rbp), %rcx	# lp, tmp124
	movq	-40(%rbp), %rax	# sv, tmp125
	movq	%rcx, %rsi	# tmp124,
	movq	%rax, %rdi	# tmp125,
	call	Perl_sv_2pv_flags	#
	movq	%rax, -32(%rbp)	# tmp126, s
.L1796:
	.loc 1 7462 0
	movq	-40(%rbp), %rax	# sv, tmp127
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.23281
	movq	(%rax), %rax	# MEM[(struct XPV *)_29].xpv_pv, D.23285
	cmpq	-32(%rbp), %rax	# s, D.23285
	je	.L1797	#,
.LBB113:
	.loc 1 7463 0
	movq	-48(%rbp), %rax	# lp, tmp128
	movq	(%rax), %rax	# *lp_13(D), tmp129
	movq	%rax, -24(%rbp)	# tmp129, len
	.loc 1 7465 0
	movq	-40(%rbp), %rax	# sv, tmp130
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.23280
	andl	$524288, %eax	#, D.23280
	testl	%eax, %eax	# D.23280
	je	.L1798	#,
	.loc 1 7466 0
	movq	-40(%rbp), %rax	# sv, tmp131
	movq	%rax, %rdi	# tmp131,
	call	Perl_sv_unref	#
.L1798:
	.loc 1 7467 0
	movq	-40(%rbp), %rax	# sv, tmp132
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.23280
	movzbl	%al, %eax	# D.23280, D.23280
	cmpl	$3, %eax	#, D.23280
	ja	.L1799	#,
	.loc 1 7467 0 is_stmt 0 discriminator 2
	movq	-40(%rbp), %rax	# sv, tmp133
	movl	$4, %esi	#,
	movq	%rax, %rdi	# tmp133,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.23286
	je	.L1801	#,
.L1799:
	.loc 1 7467 0 discriminator 1
	nop
.L1801:
	.loc 1 7468 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp134
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.23281
	movq	16(%rax), %rax	# MEM[(struct XPV *)_39].xpv_len, D.23282
	movq	-24(%rbp), %rdx	# len, tmp135
	addq	$1, %rdx	#, D.23282
	cmpq	%rdx, %rax	# D.23282, D.23282
	jae	.L1803	#,
	.loc 1 7468 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# len, tmp136
	leaq	1(%rax), %rdx	#, D.23282
	movq	-40(%rbp), %rax	# sv, tmp137
	movq	%rdx, %rsi	# D.23282,
	movq	%rax, %rdi	# tmp137,
	call	Perl_sv_grow	#
.L1803:
	.loc 1 7469 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp139
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.23281
	movq	(%rax), %rax	# MEM[(struct XPV *)_46].xpv_pv, D.23285
	movq	-24(%rbp), %rdx	# len, tmp140
	movq	-32(%rbp), %rcx	# s, tmp141
	movq	%rcx, %rsi	# tmp141,
	movq	%rax, %rdi	# D.23285,
	call	memmove	#
	.loc 1 7470 0
	movq	-40(%rbp), %rax	# sv, tmp142
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.23281
	movq	-24(%rbp), %rdx	# len, tmp143
	movq	%rdx, 8(%rax)	# tmp143, MEM[(struct XPV *)_48].xpv_cur
	.loc 1 7471 0
	movq	-40(%rbp), %rax	# sv, tmp144
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.23281
	movq	(%rax), %rdx	# MEM[(struct XPV *)_49].xpv_pv, D.23285
	movq	-40(%rbp), %rax	# sv, tmp145
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.23281
	movq	8(%rax), %rax	# MEM[(struct XPV *)_51].xpv_cur, D.23282
	addq	%rdx, %rax	# D.23285, D.23285
	movb	$0, (%rax)	#, *_53
.L1797:
.LBE113:
	.loc 1 7473 0
	movq	-40(%rbp), %rax	# sv, tmp146
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.23280
	andl	$262144, %eax	#, D.23280
	testl	%eax, %eax	# D.23280
	jne	.L1792	#,
	.loc 1 7474 0
	movq	-40(%rbp), %rax	# sv, tmp147
	movl	12(%rax), %eax	# sv_4(D)->sv_flags, D.23280
	orl	$67371008, %eax	#, D.23280
	movl	%eax, %edx	# D.23280, D.23280
	movq	-40(%rbp), %rax	# sv, tmp148
	movl	%edx, 12(%rax)	# D.23280, sv_4(D)->sv_flags
	.loc 1 7475 0
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.939
	testb	%al, %al	# PL_tainting.939
	je	.L1792	#,
	.loc 1 7475 0 is_stmt 0 discriminator 1
	movzbl	PL_tainted(%rip), %eax	# PL_tainted, PL_tainted.940
	testb	%al, %al	# PL_tainted.940
	je	.L1792	#,
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.941
	testb	%al, %al	# PL_tainting.941
	je	.L1792	#,
	movq	-40(%rbp), %rax	# sv, tmp149
	movq	%rax, %rdi	# tmp149,
	call	Perl_sv_taint	#
.L1792:
	.loc 1 7480 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp150
	movq	(%rax), %rax	# sv_4(D)->sv_any, D.23281
	movq	(%rax), %rax	# MEM[(struct XPV *)_61].xpv_pv, D.23285
	.loc 1 7481 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE150:
	.size	Perl_sv_pvn_force_flags, .-Perl_sv_pvn_force_flags
	.globl	Perl_sv_pvbyte
	.type	Perl_sv_pvbyte, @function
Perl_sv_pvbyte:
.LFB151:
	.loc 1 7489 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	.loc 1 7490 0
	movq	-8(%rbp), %rax	# sv, tmp65
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp65,
	call	Perl_sv_utf8_downgrade	#
	.loc 1 7491 0
	movq	-8(%rbp), %rax	# sv, tmp66
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.23288
	andl	$262144, %eax	#, D.23288
	testl	%eax, %eax	# D.23288
	je	.L1806	#,
	.loc 1 7491 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp67
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23289
	movq	(%rax), %rax	# MEM[(struct XPV *)_5].xpv_pv, iftmp.942
	jmp	.L1807	#
.L1806:
	.loc 1 7491 0 discriminator 2
	movq	-8(%rbp), %rax	# sv, tmp68
	movq	%rax, %rdi	# tmp68,
	call	Perl_sv_2pv_nolen	#
.L1807:
	.loc 1 7492 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE151:
	.size	Perl_sv_pvbyte, .-Perl_sv_pvbyte
	.globl	Perl_sv_pvbyten
	.type	Perl_sv_pvbyten, @function
Perl_sv_pvbyten:
.LFB152:
	.loc 1 7510 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# lp, lp
	.loc 1 7511 0
	movq	-8(%rbp), %rax	# sv, tmp61
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp61,
	call	Perl_sv_utf8_downgrade	#
	.loc 1 7512 0
	movq	-16(%rbp), %rdx	# lp, tmp62
	movq	-8(%rbp), %rax	# sv, tmp63
	movq	%rdx, %rsi	# tmp62,
	movq	%rax, %rdi	# tmp63,
	call	Perl_sv_pvn	#
	.loc 1 7513 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE152:
	.size	Perl_sv_pvbyten, .-Perl_sv_pvbyten
	.globl	Perl_sv_pvbyten_force
	.type	Perl_sv_pvbyten_force, @function
Perl_sv_pvbyten_force:
.LFB153:
	.loc 1 7527 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# lp, lp
	.loc 1 7528 0
	movq	-16(%rbp), %rcx	# lp, tmp64
	movq	-8(%rbp), %rax	# sv, tmp65
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp64,
	movq	%rax, %rdi	# tmp65,
	call	Perl_sv_pvn_force_flags	#
	.loc 1 7529 0
	movq	-8(%rbp), %rax	# sv, tmp66
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp66,
	call	Perl_sv_utf8_downgrade	#
	.loc 1 7530 0
	movq	-8(%rbp), %rax	# sv, tmp67
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23292
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_3].xpv_cur, D.23293
	movq	-16(%rbp), %rax	# lp, tmp68
	movq	%rdx, (%rax)	# D.23293, *lp_2(D)
	.loc 1 7531 0
	movq	-8(%rbp), %rax	# sv, tmp69
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23292
	movq	(%rax), %rax	# MEM[(struct XPV *)_5].xpv_pv, D.23294
	.loc 1 7532 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE153:
	.size	Perl_sv_pvbyten_force, .-Perl_sv_pvbyten_force
	.globl	Perl_sv_pvutf8
	.type	Perl_sv_pvutf8, @function
Perl_sv_pvutf8:
.LFB154:
	.loc 1 7540 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	.loc 1 7541 0
	movq	-8(%rbp), %rax	# sv, tmp65
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp65,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 7542 0
	movq	-8(%rbp), %rax	# sv, tmp66
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.23295
	andl	$262144, %eax	#, D.23295
	testl	%eax, %eax	# D.23295
	je	.L1814	#,
	.loc 1 7542 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp67
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23296
	movq	(%rax), %rax	# MEM[(struct XPV *)_5].xpv_pv, iftmp.943
	jmp	.L1815	#
.L1814:
	.loc 1 7542 0 discriminator 2
	movq	-8(%rbp), %rax	# sv, tmp68
	movq	%rax, %rdi	# tmp68,
	call	Perl_sv_2pv_nolen	#
.L1815:
	.loc 1 7543 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE154:
	.size	Perl_sv_pvutf8, .-Perl_sv_pvutf8
	.globl	Perl_sv_pvutf8n
	.type	Perl_sv_pvutf8n, @function
Perl_sv_pvutf8n:
.LFB155:
	.loc 1 7561 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# lp, lp
	.loc 1 7562 0
	movq	-8(%rbp), %rax	# sv, tmp61
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp61,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 7563 0
	movq	-16(%rbp), %rdx	# lp, tmp62
	movq	-8(%rbp), %rax	# sv, tmp63
	movq	%rdx, %rsi	# tmp62,
	movq	%rax, %rdi	# tmp63,
	call	Perl_sv_pvn	#
	.loc 1 7564 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE155:
	.size	Perl_sv_pvutf8n, .-Perl_sv_pvutf8n
	.globl	Perl_sv_pvutf8n_force
	.type	Perl_sv_pvutf8n_force, @function
Perl_sv_pvutf8n_force:
.LFB156:
	.loc 1 7578 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# lp, lp
	.loc 1 7579 0
	movq	-16(%rbp), %rcx	# lp, tmp64
	movq	-8(%rbp), %rax	# sv, tmp65
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp64,
	movq	%rax, %rdi	# tmp65,
	call	Perl_sv_pvn_force_flags	#
	.loc 1 7580 0
	movq	-8(%rbp), %rax	# sv, tmp66
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp66,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 7581 0
	movq	-8(%rbp), %rax	# sv, tmp67
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23299
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_3].xpv_cur, D.23300
	movq	-16(%rbp), %rax	# lp, tmp68
	movq	%rdx, (%rax)	# D.23300, *lp_2(D)
	.loc 1 7582 0
	movq	-8(%rbp), %rax	# sv, tmp69
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23299
	movq	(%rax), %rax	# MEM[(struct XPV *)_5].xpv_pv, D.23301
	.loc 1 7583 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE156:
	.size	Perl_sv_pvutf8n_force, .-Perl_sv_pvutf8n_force
	.globl	Perl_sv_reftype
	.type	Perl_sv_reftype, @function
Perl_sv_reftype:
.LFB157:
	.loc 1 7595 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)	# sv, sv
	movl	%esi, -28(%rbp)	# ob, ob
	.loc 1 7596 0
	cmpl	$0, -28(%rbp)	#, ob
	je	.L1822	#,
	.loc 1 7596 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp79
	movl	12(%rax), %eax	# sv_6(D)->sv_flags, D.23303
	andl	$4096, %eax	#, D.23303
	testl	%eax, %eax	# D.23303
	je	.L1822	#,
.LBB114:
	.loc 1 7597 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp80
	movq	(%rax), %rax	# sv_6(D)->sv_any, D.23304
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_9].xmg_stash, D.23305
	movq	(%rax), %rax	# _10->sv_any, D.23306
	movq	80(%rax), %rax	# _11->xhv_name, tmp81
	movq	%rax, -8(%rbp)	# tmp81, name
	.loc 1 7598 0
	cmpq	$0, -8(%rbp)	#, name
	je	.L1823	#,
	.loc 1 7598 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# name, iftmp.944
	jmp	.L1824	#
.L1823:
	.loc 1 7598 0 discriminator 2
	movl	$.LC31, %eax	#, iftmp.944
.L1824:
	.loc 1 7598 0 discriminator 3
	jmp	.L1825	#
.L1822:
.LBE114:
	.loc 1 7601 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp82
	movl	12(%rax), %eax	# sv_6(D)->sv_flags, D.23303
	movzbl	%al, %eax	# D.23303, D.23303
	cmpl	$15, %eax	#, D.23303
	ja	.L1826	#,
	movl	%eax, %eax	# D.23303, tmp83
	movq	.L1828(,%rax,8), %rax	#, tmp84
	jmp	*%rax	# tmp84
	.section	.rodata
	.align 8
	.align 4
.L1828:
	.quad	.L1827
	.quad	.L1827
	.quad	.L1827
	.quad	.L1827
	.quad	.L1827
	.quad	.L1827
	.quad	.L1827
	.quad	.L1827
	.quad	.L1827
	.quad	.L1829
	.quad	.L1830
	.quad	.L1831
	.quad	.L1832
	.quad	.L1833
	.quad	.L1834
	.quad	.L1835
	.text
.L1827:
	.loc 1 7611 0
	movq	-24(%rbp), %rax	# sv, tmp85
	movl	12(%rax), %eax	# sv_6(D)->sv_flags, D.23303
	andl	$524288, %eax	#, D.23303
	testl	%eax, %eax	# D.23303
	je	.L1836	#,
	.loc 1 7612 0
	movl	$.LC21, %eax	#, D.23302
	jmp	.L1825	#
.L1836:
	.loc 1 7614 0
	movl	$.LC22, %eax	#, D.23302
	jmp	.L1825	#
.L1829:
	.loc 1 7616 0
	movq	-24(%rbp), %rax	# sv, tmp86
	movl	12(%rax), %eax	# sv_6(D)->sv_flags, D.23303
	andl	$524288, %eax	#, D.23303
	.loc 1 7619 0
	testl	%eax, %eax	# D.23303
	jne	.L1837	#,
	.loc 1 7619 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp87
	movq	(%rax), %rax	# sv_6(D)->sv_any, D.23304
	movzbl	80(%rax), %eax	# MEM[(struct XPVLV *)_24].xlv_type, D.23307
	.loc 1 7620 0 is_stmt 1 discriminator 1
	cmpb	$116, %al	#, D.23307
	je	.L1838	#,
	.loc 1 7619 0
	movq	-24(%rbp), %rax	# sv, tmp88
	movq	(%rax), %rax	# sv_6(D)->sv_any, D.23304
	movzbl	80(%rax), %eax	# MEM[(struct XPVLV *)_26].xlv_type, D.23307
	cmpb	$84, %al	#, D.23307
	jne	.L1839	#,
.L1838:
	.loc 1 7620 0 discriminator 1
	movl	$.LC22, %eax	#, iftmp.946
	jmp	.L1840	#
.L1839:
	.loc 1 7620 0 is_stmt 0
	movl	$.LC23, %eax	#, iftmp.946
.L1840:
	jmp	.L1841	#
.L1837:
	.loc 1 7619 0 is_stmt 1 discriminator 2
	movl	$.LC21, %eax	#, iftmp.945
.L1841:
	.loc 1 7616 0
	jmp	.L1825	#
.L1830:
	.loc 1 7621 0
	movl	$.LC24, %eax	#, D.23302
	jmp	.L1825	#
.L1831:
	.loc 1 7622 0
	movl	$.LC25, %eax	#, D.23302
	jmp	.L1825	#
.L1832:
	.loc 1 7623 0
	movl	$.LC26, %eax	#, D.23302
	jmp	.L1825	#
.L1833:
	.loc 1 7624 0
	movl	$.LC27, %eax	#, D.23302
	jmp	.L1825	#
.L1834:
	.loc 1 7625 0
	movl	$.LC28, %eax	#, D.23302
	jmp	.L1825	#
.L1835:
	.loc 1 7626 0
	movl	$.LC29, %eax	#, D.23302
	jmp	.L1825	#
.L1826:
	.loc 1 7627 0
	movl	$.LC30, %eax	#, D.23302
.L1825:
	.loc 1 7630 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE157:
	.size	Perl_sv_reftype, .-Perl_sv_reftype
	.globl	Perl_sv_isobject
	.type	Perl_sv_isobject, @function
Perl_sv_isobject:
.LFB158:
	.loc 1 7644 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	.loc 1 7645 0
	cmpq	$0, -8(%rbp)	#, sv
	jne	.L1843	#,
	.loc 1 7646 0
	movl	$0, %eax	#, D.23308
	jmp	.L1844	#
.L1843:
	.loc 1 7647 0
	movq	-8(%rbp), %rax	# sv, tmp68
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.23309
	andl	$8192, %eax	#, D.23309
	testl	%eax, %eax	# D.23309
	je	.L1845	#,
	.loc 1 7648 0
	movq	-8(%rbp), %rax	# sv, tmp69
	movq	%rax, %rdi	# tmp69,
	call	Perl_mg_get	#
.L1845:
	.loc 1 7649 0
	movq	-8(%rbp), %rax	# sv, tmp70
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.23309
	andl	$524288, %eax	#, D.23309
	testl	%eax, %eax	# D.23309
	jne	.L1846	#,
	.loc 1 7650 0
	movl	$0, %eax	#, D.23308
	jmp	.L1844	#
.L1846:
	.loc 1 7651 0
	movq	-8(%rbp), %rax	# sv, tmp71
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23310
	movq	(%rax), %rax	# MEM[(struct XRV *)_9].xrv_rv, tmp72
	movq	%rax, -8(%rbp)	# tmp72, sv
	.loc 1 7652 0
	movq	-8(%rbp), %rax	# sv, tmp73
	movl	12(%rax), %eax	# sv_10->sv_flags, D.23309
	andl	$4096, %eax	#, D.23309
	testl	%eax, %eax	# D.23309
	jne	.L1847	#,
	.loc 1 7653 0
	movl	$0, %eax	#, D.23308
	jmp	.L1844	#
.L1847:
	.loc 1 7654 0
	movl	$1, %eax	#, D.23308
.L1844:
	.loc 1 7655 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE158:
	.size	Perl_sv_isobject, .-Perl_sv_isobject
	.globl	Perl_sv_isa
	.type	Perl_sv_isa, @function
Perl_sv_isa:
.LFB159:
	.loc 1 7669 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# name, name
	.loc 1 7670 0
	cmpq	$0, -8(%rbp)	#, sv
	jne	.L1849	#,
	.loc 1 7671 0
	movl	$0, %eax	#, D.23311
	jmp	.L1850	#
.L1849:
	.loc 1 7672 0
	movq	-8(%rbp), %rax	# sv, tmp78
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.23312
	andl	$8192, %eax	#, D.23312
	testl	%eax, %eax	# D.23312
	je	.L1851	#,
	.loc 1 7673 0
	movq	-8(%rbp), %rax	# sv, tmp79
	movq	%rax, %rdi	# tmp79,
	call	Perl_mg_get	#
.L1851:
	.loc 1 7674 0
	movq	-8(%rbp), %rax	# sv, tmp80
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.23312
	andl	$524288, %eax	#, D.23312
	testl	%eax, %eax	# D.23312
	jne	.L1852	#,
	.loc 1 7675 0
	movl	$0, %eax	#, D.23311
	jmp	.L1850	#
.L1852:
	.loc 1 7676 0
	movq	-8(%rbp), %rax	# sv, tmp81
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23313
	movq	(%rax), %rax	# MEM[(struct XRV *)_9].xrv_rv, tmp82
	movq	%rax, -8(%rbp)	# tmp82, sv
	.loc 1 7677 0
	movq	-8(%rbp), %rax	# sv, tmp83
	movl	12(%rax), %eax	# sv_10->sv_flags, D.23312
	andl	$4096, %eax	#, D.23312
	testl	%eax, %eax	# D.23312
	jne	.L1853	#,
	.loc 1 7678 0
	movl	$0, %eax	#, D.23311
	jmp	.L1850	#
.L1853:
	.loc 1 7679 0
	movq	-8(%rbp), %rax	# sv, tmp84
	movq	(%rax), %rax	# sv_10->sv_any, D.23313
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_14].xmg_stash, D.23314
	movq	(%rax), %rax	# _15->sv_any, D.23315
	movq	80(%rax), %rax	# _16->xhv_name, D.23316
	testq	%rax, %rax	# D.23316
	jne	.L1854	#,
	.loc 1 7680 0
	movl	$0, %eax	#, D.23311
	jmp	.L1850	#
.L1854:
	.loc 1 7682 0
	movq	-8(%rbp), %rax	# sv, tmp85
	movq	(%rax), %rax	# sv_10->sv_any, D.23313
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_19].xmg_stash, D.23314
	movq	(%rax), %rax	# _20->sv_any, D.23315
	movq	80(%rax), %rax	# _21->xhv_name, D.23316
	movq	-16(%rbp), %rdx	# name, tmp86
	movq	%rdx, %rsi	# tmp86,
	movq	%rax, %rdi	# D.23316,
	call	strcmp	#
	testl	%eax, %eax	# D.23311
	sete	%al	#, D.23317
	movzbl	%al, %eax	# D.23317, D.23311
.L1850:
	.loc 1 7683 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE159:
	.size	Perl_sv_isa, .-Perl_sv_isa
	.globl	Perl_newSVrv
	.type	Perl_newSVrv, @function
Perl_newSVrv:
.LFB160:
	.loc 1 7698 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# rv, rv
	movq	%rsi, -48(%rbp)	# classname, classname
.LBB115:
	.loc 1 7701 0
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, PL_sv_root.947
	testq	%rax, %rax	# PL_sv_root.947
	je	.L1856	#,
.LBB116:
	.loc 1 7701 0 is_stmt 0 discriminator 1
	movq	PL_sv_root(%rip), %rax	# PL_sv_root, tmp100
	movq	%rax, -16(%rbp)	# tmp100, sv
	movq	-16(%rbp), %rax	# sv, tmp101
	movq	(%rax), %rax	# sv_3->sv_any, PL_sv_root.948
	movq	%rax, PL_sv_root(%rip)	# PL_sv_root.948, PL_sv_root
	movl	PL_sv_count(%rip), %eax	# PL_sv_count, PL_sv_count.949
	addl	$1, %eax	#, PL_sv_count.950
	movl	%eax, PL_sv_count(%rip)	# PL_sv_count.950, PL_sv_count
.LBE116:
	jmp	.L1857	#
.L1856:
	.loc 1 7701 0 discriminator 2
	call	S_more_sv	#
	movq	%rax, -16(%rbp)	# tmp102, sv
.L1857:
	.loc 1 7701 0 discriminator 1
	movq	-16(%rbp), %rax	# sv, tmp103
	movq	$0, (%rax)	#, sv_1->sv_any
	movq	-16(%rbp), %rax	# sv, tmp104
	movl	$1, 8(%rax)	#, sv_1->sv_refcnt
	movq	-16(%rbp), %rax	# sv, tmp105
	movl	$0, 12(%rax)	#, sv_1->sv_flags
.LBE115:
	.loc 1 7703 0 is_stmt 1 discriminator 1
	movq	-40(%rbp), %rax	# rv, tmp107
	movl	12(%rax), %eax	# rv_10(D)->sv_flags, D.23320
	andl	$9961472, %eax	#, D.23320
	testl	%eax, %eax	# D.23320
	je	.L1858	#,
	movq	-40(%rbp), %rax	# rv, tmp108
	movq	%rax, %rdi	# tmp108,
	call	Perl_sv_force_normal	#
.L1858:
	.loc 1 7704 0
	movq	-40(%rbp), %rax	# rv, tmp109
	movl	12(%rax), %eax	# rv_10(D)->sv_flags, D.23320
	andl	$-268435457, %eax	#, D.23320
	movl	%eax, %edx	# D.23320, D.23320
	movq	-40(%rbp), %rax	# rv, tmp110
	movl	%edx, 12(%rax)	# D.23320, rv_10(D)->sv_flags
	.loc 1 7706 0
	movq	-40(%rbp), %rax	# rv, tmp111
	movl	12(%rax), %eax	# rv_10(D)->sv_flags, D.23320
	movzbl	%al, %eax	# D.23320, D.23320
	cmpl	$6, %eax	#, D.23320
	jbe	.L1859	#,
.LBB117:
	.loc 1 7707 0
	movq	-40(%rbp), %rax	# rv, tmp112
	movl	8(%rax), %eax	# rv_10(D)->sv_refcnt, tmp113
	movl	%eax, -20(%rbp)	# tmp113, refcnt
	.loc 1 7708 0
	movq	-40(%rbp), %rax	# rv, tmp114
	movl	$0, 8(%rax)	#, rv_10(D)->sv_refcnt
	.loc 1 7709 0
	movq	-40(%rbp), %rax	# rv, tmp115
	movq	%rax, %rdi	# tmp115,
	call	Perl_sv_clear	#
	.loc 1 7710 0
	movq	-40(%rbp), %rax	# rv, tmp116
	movl	$0, 12(%rax)	#, rv_10(D)->sv_flags
	.loc 1 7711 0
	movq	-40(%rbp), %rax	# rv, tmp117
	movl	-20(%rbp), %edx	# refcnt, tmp118
	movl	%edx, 8(%rax)	# tmp118, rv_10(D)->sv_refcnt
.L1859:
.LBE117:
	.loc 1 7714 0
	movq	-40(%rbp), %rax	# rv, tmp119
	movl	12(%rax), %eax	# rv_10(D)->sv_flags, D.23320
	movzbl	%al, %eax	# D.23320, D.23320
	cmpl	$2, %eax	#, D.23320
	ja	.L1860	#,
	.loc 1 7715 0
	movq	-40(%rbp), %rax	# rv, tmp120
	movl	$3, %esi	#,
	movq	%rax, %rdi	# tmp120,
	call	Perl_sv_upgrade	#
	jmp	.L1861	#
.L1860:
	.loc 1 7716 0
	movq	-40(%rbp), %rax	# rv, tmp121
	movl	12(%rax), %eax	# rv_10(D)->sv_flags, D.23320
	movzbl	%al, %eax	# D.23320, D.23320
	cmpl	$3, %eax	#, D.23320
	jbe	.L1861	#,
	.loc 1 7717 0
	movq	-40(%rbp), %rax	# rv, tmp122
	movl	12(%rax), %eax	# rv_10(D)->sv_flags, D.23320
	andl	$2097152, %eax	#, D.23320
	testl	%eax, %eax	# D.23320
	je	.L1863	#,
	.loc 1 7717 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# rv, tmp123
	movq	%rax, %rdi	# tmp123,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23321
	je	.L1863	#,
	.loc 1 7717 0
	nop
.L1863:
	.loc 1 7718 0 is_stmt 1
	movq	-40(%rbp), %rax	# rv, tmp124
	movq	(%rax), %rax	# rv_10(D)->sv_any, D.23322
	movq	(%rax), %rax	# MEM[(struct XPV *)_27].xpv_pv, D.23323
	testq	%rax, %rax	# D.23323
	je	.L1864	#,
	.loc 1 7718 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# rv, tmp125
	movq	(%rax), %rax	# rv_10(D)->sv_any, D.23322
	movq	16(%rax), %rax	# MEM[(struct XPV *)_29].xpv_len, D.23324
	testq	%rax, %rax	# D.23324
	je	.L1864	#,
	.loc 1 7719 0 is_stmt 1
	movq	-40(%rbp), %rax	# rv, tmp126
	movq	(%rax), %rax	# rv_10(D)->sv_any, D.23322
	movq	(%rax), %rax	# MEM[(struct XPV *)_31].xpv_pv, D.23323
	movq	%rax, %rdi	# D.23323,
	call	Perl_safesysfree	#
.L1864:
	.loc 1 7720 0
	movq	-40(%rbp), %rax	# rv, tmp127
	movq	(%rax), %rax	# rv_10(D)->sv_any, D.23322
	movq	$0, 8(%rax)	#, MEM[(struct XPV *)_33].xpv_cur
	.loc 1 7721 0
	movq	-40(%rbp), %rax	# rv, tmp128
	movq	(%rax), %rax	# rv_10(D)->sv_any, D.23322
	movq	$0, 16(%rax)	#, MEM[(struct XPV *)_34].xpv_len
.L1861:
	.loc 1 7724 0
	movq	-40(%rbp), %rax	# rv, tmp129
	movl	12(%rax), %eax	# rv_10(D)->sv_flags, D.23320
	andl	$1223753727, %eax	#, D.23320
	movl	%eax, %edx	# D.23320, D.23320
	movq	-40(%rbp), %rax	# rv, tmp130
	movl	%edx, 12(%rax)	# D.23320, rv_10(D)->sv_flags
	movq	-40(%rbp), %rax	# rv, tmp131
	movl	12(%rax), %eax	# rv_10(D)->sv_flags, D.23320
	andl	$2097152, %eax	#, D.23320
	testl	%eax, %eax	# D.23320
	je	.L1866	#,
	.loc 1 7724 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# rv, tmp132
	movq	%rax, %rdi	# tmp132,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23321
	je	.L1866	#,
	.loc 1 7724 0
	nop
.L1866:
	.loc 1 7725 0 is_stmt 1
	movq	-40(%rbp), %rax	# rv, tmp133
	movq	(%rax), %rax	# rv_10(D)->sv_any, D.23322
	movq	-16(%rbp), %rdx	# sv, tmp134
	movq	%rdx, (%rax)	# tmp134, MEM[(struct XRV *)_42].xrv_rv
	.loc 1 7726 0
	movq	-40(%rbp), %rax	# rv, tmp135
	movl	12(%rax), %eax	# rv_10(D)->sv_flags, D.23320
	orl	$524288, %eax	#, D.23320
	movl	%eax, %edx	# D.23320, D.23320
	movq	-40(%rbp), %rax	# rv, tmp136
	movl	%edx, 12(%rax)	# D.23320, rv_10(D)->sv_flags
	.loc 1 7728 0
	cmpq	$0, -48(%rbp)	#, classname
	je	.L1867	#,
.LBB118:
	.loc 1 7729 0
	movq	-48(%rbp), %rax	# classname, tmp137
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp137,
	call	Perl_gv_stashpv	#
	movq	%rax, -8(%rbp)	# tmp138, stash
	.loc 1 7730 0
	movq	-8(%rbp), %rdx	# stash, tmp139
	movq	-40(%rbp), %rax	# rv, tmp140
	movq	%rdx, %rsi	# tmp139,
	movq	%rax, %rdi	# tmp140,
	call	Perl_sv_bless	#
.L1867:
.LBE118:
	.loc 1 7732 0
	movq	-16(%rbp), %rax	# sv, D.23325
	.loc 1 7733 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE160:
	.size	Perl_newSVrv, .-Perl_newSVrv
	.globl	Perl_sv_setref_pv
	.type	Perl_sv_setref_pv, @function
Perl_sv_setref_pv:
.LFB161:
	.loc 1 7755 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# rv, rv
	movq	%rsi, -32(%rbp)	# classname, classname
	movq	%rdx, -40(%rbp)	# pv, pv
	.loc 1 7756 0
	cmpq	$0, -40(%rbp)	#, pv
	jne	.L1870	#,
	.loc 1 7757 0
	movq	-24(%rbp), %rax	# rv, tmp65
	movl	$2, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp65,
	call	Perl_sv_setsv_flags	#
	.loc 1 7758 0
	movq	-24(%rbp), %rax	# rv, tmp66
	movl	12(%rax), %eax	# rv_2(D)->sv_flags, D.23326
	andl	$16384, %eax	#, D.23326
	testl	%eax, %eax	# D.23326
	je	.L1872	#,
	.loc 1 7758 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# rv, tmp67
	movq	%rax, %rdi	# tmp67,
	call	Perl_mg_set	#
	jmp	.L1872	#
.L1870:
	.loc 1 7761 0 is_stmt 1
	movq	-40(%rbp), %rbx	# pv, pv.953
	movq	-32(%rbp), %rdx	# classname, tmp68
	movq	-24(%rbp), %rax	# rv, tmp69
	movq	%rdx, %rsi	# tmp68,
	movq	%rax, %rdi	# tmp69,
	call	Perl_newSVrv	#
	movq	%rbx, %rsi	# pv.953,
	movq	%rax, %rdi	# D.23327,
	call	Perl_sv_setiv	#
.L1872:
	.loc 1 7762 0
	movq	-24(%rbp), %rax	# rv, D.23327
	.loc 1 7763 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE161:
	.size	Perl_sv_setref_pv, .-Perl_sv_setref_pv
	.globl	Perl_sv_setref_iv
	.type	Perl_sv_setref_iv, @function
Perl_sv_setref_iv:
.LFB162:
	.loc 1 7779 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -8(%rbp)	# rv, rv
	movq	%rsi, -16(%rbp)	# classname, classname
	movq	%rdx, -24(%rbp)	# iv, iv
	.loc 1 7780 0
	movq	-16(%rbp), %rdx	# classname, tmp62
	movq	-8(%rbp), %rax	# rv, tmp63
	movq	%rdx, %rsi	# tmp62,
	movq	%rax, %rdi	# tmp63,
	call	Perl_newSVrv	#
	movq	-24(%rbp), %rdx	# iv, tmp64
	movq	%rdx, %rsi	# tmp64,
	movq	%rax, %rdi	# D.23328,
	call	Perl_sv_setiv	#
	.loc 1 7781 0
	movq	-8(%rbp), %rax	# rv, D.23328
	.loc 1 7782 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE162:
	.size	Perl_sv_setref_iv, .-Perl_sv_setref_iv
	.globl	Perl_sv_setref_uv
	.type	Perl_sv_setref_uv, @function
Perl_sv_setref_uv:
.LFB163:
	.loc 1 7798 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -8(%rbp)	# rv, rv
	movq	%rsi, -16(%rbp)	# classname, classname
	movq	%rdx, -24(%rbp)	# uv, uv
	.loc 1 7799 0
	movq	-16(%rbp), %rdx	# classname, tmp62
	movq	-8(%rbp), %rax	# rv, tmp63
	movq	%rdx, %rsi	# tmp62,
	movq	%rax, %rdi	# tmp63,
	call	Perl_newSVrv	#
	movq	-24(%rbp), %rdx	# uv, tmp64
	movq	%rdx, %rsi	# tmp64,
	movq	%rax, %rdi	# D.23329,
	call	Perl_sv_setuv	#
	.loc 1 7800 0
	movq	-8(%rbp), %rax	# rv, D.23329
	.loc 1 7801 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE163:
	.size	Perl_sv_setref_uv, .-Perl_sv_setref_uv
	.globl	Perl_sv_setref_nv
	.type	Perl_sv_setref_nv, @function
Perl_sv_setref_nv:
.LFB164:
	.loc 1 7817 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -8(%rbp)	# rv, rv
	movq	%rsi, -16(%rbp)	# classname, classname
	movsd	%xmm0, -24(%rbp)	# nv, nv
	.loc 1 7818 0
	movq	-16(%rbp), %rdx	# classname, tmp62
	movq	-8(%rbp), %rax	# rv, tmp63
	movq	%rdx, %rsi	# tmp62,
	movq	%rax, %rdi	# tmp63,
	call	Perl_newSVrv	#
	movq	%rax, %rdx	#, D.23330
	movq	-24(%rbp), %rax	# nv, tmp64
	movq	%rax, -32(%rbp)	# tmp64, %sfp
	movsd	-32(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# D.23330,
	call	Perl_sv_setnv	#
	.loc 1 7819 0
	movq	-8(%rbp), %rax	# rv, D.23330
	.loc 1 7820 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE164:
	.size	Perl_sv_setref_nv, .-Perl_sv_setref_nv
	.globl	Perl_sv_setref_pvn
	.type	Perl_sv_setref_pvn, @function
Perl_sv_setref_pvn:
.LFB165:
	.loc 1 7839 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -8(%rbp)	# rv, rv
	movq	%rsi, -16(%rbp)	# classname, classname
	movq	%rdx, -24(%rbp)	# pv, pv
	movq	%rcx, -32(%rbp)	# n, n
	.loc 1 7840 0
	movq	-16(%rbp), %rdx	# classname, tmp62
	movq	-8(%rbp), %rax	# rv, tmp63
	movq	%rdx, %rsi	# tmp62,
	movq	%rax, %rdi	# tmp63,
	call	Perl_newSVrv	#
	movq	-32(%rbp), %rdx	# n, tmp64
	movq	-24(%rbp), %rcx	# pv, tmp65
	movq	%rcx, %rsi	# tmp65,
	movq	%rax, %rdi	# D.23331,
	call	Perl_sv_setpvn	#
	.loc 1 7841 0
	movq	-8(%rbp), %rax	# rv, D.23331
	.loc 1 7842 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE165:
	.size	Perl_sv_setref_pvn, .-Perl_sv_setref_pvn
	.section	.rodata
	.align 8
.LC67:
	.string	"Can't bless non-reference value"
	.text
	.globl	Perl_sv_bless
	.type	Perl_sv_bless, @function
Perl_sv_bless:
.LFB166:
	.loc 1 7856 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	movq	%rsi, -32(%rbp)	# stash, stash
	.loc 1 7858 0
	movq	-24(%rbp), %rax	# sv, tmp106
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23332
	andl	$524288, %eax	#, D.23332
	testl	%eax, %eax	# D.23332
	jne	.L1883	#,
	.loc 1 7859 0
	movl	$.LC67, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1883:
	.loc 1 7860 0
	movq	-24(%rbp), %rax	# sv, tmp107
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23333
	movq	(%rax), %rax	# MEM[(struct XRV *)_4].xrv_rv, tmp108
	movq	%rax, -8(%rbp)	# tmp108, tmpRef
	.loc 1 7861 0
	movq	-8(%rbp), %rax	# tmpRef, tmp109
	movl	12(%rax), %eax	# tmpRef_5->sv_flags, D.23332
	andl	$8392704, %eax	#, D.23332
	testl	%eax, %eax	# D.23332
	je	.L1884	#,
	.loc 1 7862 0
	movq	-8(%rbp), %rax	# tmpRef, tmp110
	movl	12(%rax), %eax	# tmpRef_5->sv_flags, D.23332
	andl	$8388608, %eax	#, D.23332
	testl	%eax, %eax	# D.23332
	je	.L1885	#,
	.loc 1 7863 0
	movl	$PL_no_modify, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1885:
	.loc 1 7864 0
	movq	-8(%rbp), %rax	# tmpRef, tmp111
	movl	12(%rax), %eax	# tmpRef_5->sv_flags, D.23332
	andl	$4096, %eax	#, D.23332
	testl	%eax, %eax	# D.23332
	je	.L1884	#,
	.loc 1 7865 0
	movq	-8(%rbp), %rax	# tmpRef, tmp112
	movl	12(%rax), %eax	# tmpRef_5->sv_flags, D.23332
	movzbl	%al, %eax	# D.23332, D.23332
	cmpl	$15, %eax	#, D.23332
	je	.L1886	#,
	.loc 1 7866 0
	movl	PL_sv_objcount(%rip), %eax	# PL_sv_objcount, PL_sv_objcount.954
	subl	$1, %eax	#, PL_sv_objcount.955
	movl	%eax, PL_sv_objcount(%rip)	# PL_sv_objcount.955, PL_sv_objcount
.L1886:
	.loc 1 7867 0
	movq	-8(%rbp), %rax	# tmpRef, tmp113
	movq	(%rax), %rax	# tmpRef_5->sv_any, D.23333
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_16].xmg_stash, D.23334
	movq	%rax, %rdi	# D.23334,
	call	Perl_sv_free	#
.L1884:
	.loc 1 7870 0
	movq	-8(%rbp), %rax	# tmpRef, tmp114
	movl	12(%rax), %eax	# tmpRef_5->sv_flags, D.23332
	orb	$16, %ah	#, D.23332
	movl	%eax, %edx	# D.23332, D.23332
	movq	-8(%rbp), %rax	# tmpRef, tmp115
	movl	%edx, 12(%rax)	# D.23332, tmpRef_5->sv_flags
	.loc 1 7871 0
	movq	-8(%rbp), %rax	# tmpRef, tmp116
	movl	12(%rax), %eax	# tmpRef_5->sv_flags, D.23332
	movzbl	%al, %eax	# D.23332, D.23332
	cmpl	$15, %eax	#, D.23332
	je	.L1887	#,
	.loc 1 7872 0
	movl	PL_sv_objcount(%rip), %eax	# PL_sv_objcount, PL_sv_objcount.956
	addl	$1, %eax	#, PL_sv_objcount.957
	movl	%eax, PL_sv_objcount(%rip)	# PL_sv_objcount.957, PL_sv_objcount
.L1887:
	.loc 1 7873 0
	movq	-8(%rbp), %rax	# tmpRef, tmp117
	movl	12(%rax), %eax	# tmpRef_5->sv_flags, D.23332
	movzbl	%al, %eax	# D.23332, D.23332
	cmpl	$6, %eax	#, D.23332
	ja	.L1888	#,
	.loc 1 7873 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# tmpRef, tmp118
	movl	$7, %esi	#,
	movq	%rax, %rdi	# tmp118,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.23335
	je	.L1890	#,
.L1888:
	.loc 1 7873 0 discriminator 1
	nop
.L1890:
	.loc 1 7874 0 is_stmt 1
	movq	-32(%rbp), %rax	# stash, tmp119
	movq	%rax, PL_Sv(%rip)	# tmp119, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.960
	testq	%rax, %rax	# PL_Sv.960
	je	.L1892	#,
	.loc 1 7874 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.961
	movl	8(%rax), %edx	# PL_Sv.961_31->sv_refcnt, D.23332
	addl	$1, %edx	#, D.23332
	movl	%edx, 8(%rax)	# D.23332, PL_Sv.961_31->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.961_31->sv_refcnt, D.23332
	testl	%eax, %eax	# D.23332
	je	.L1892	#,
	.loc 1 7874 0
	nop
.L1892:
	.loc 1 7874 0 discriminator 4
	movq	-8(%rbp), %rax	# tmpRef, tmp120
	movq	(%rax), %rax	# tmpRef_5->sv_any, D.23333
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.962
	movq	%rdx, 48(%rax)	# PL_Sv.962, MEM[(struct XPVMG *)_37].xmg_stash
	.loc 1 7876 0 is_stmt 1 discriminator 4
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.963
	testq	%rax, %rax	# PL_amagic_generation.963
	je	.L1893	#,
	.loc 1 7876 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# stash, tmp121
	movq	%rax, %rdi	# tmp121,
	call	Perl_Gv_AMupdate	#
	testb	%al, %al	# D.23335
	je	.L1893	#,
	.loc 1 7877 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp122
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23332
	orl	$268435456, %eax	#, D.23332
	movl	%eax, %edx	# D.23332, D.23332
	movq	-24(%rbp), %rax	# sv, tmp123
	movl	%edx, 12(%rax)	# D.23332, sv_1(D)->sv_flags
	jmp	.L1894	#
.L1893:
	.loc 1 7879 0
	movq	-24(%rbp), %rax	# sv, tmp124
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23332
	andl	$-268435457, %eax	#, D.23332
	movl	%eax, %edx	# D.23332, D.23332
	movq	-24(%rbp), %rax	# sv, tmp125
	movl	%edx, 12(%rax)	# D.23332, sv_1(D)->sv_flags
.L1894:
	.loc 1 7881 0
	movq	-8(%rbp), %rax	# tmpRef, tmp126
	movl	12(%rax), %eax	# tmpRef_5->sv_flags, D.23332
	andl	$16384, %eax	#, D.23332
	testl	%eax, %eax	# D.23332
	je	.L1895	#,
	.loc 1 7882 0
	movq	-8(%rbp), %rax	# tmpRef, tmp127
	movl	$126, %esi	#,
	movq	%rax, %rdi	# tmp127,
	call	Perl_mg_find	#
	testq	%rax, %rax	# D.23336
	jne	.L1896	#,
	.loc 1 7882 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# tmpRef, tmp128
	movl	$85, %esi	#,
	movq	%rax, %rdi	# tmp128,
	call	Perl_mg_find	#
	testq	%rax, %rax	# D.23336
	je	.L1895	#,
.L1896:
	.loc 1 7883 0 is_stmt 1
	movq	-8(%rbp), %rax	# tmpRef, tmp129
	movq	%rax, %rdi	# tmp129,
	call	Perl_mg_set	#
.L1895:
	.loc 1 7887 0
	movq	-24(%rbp), %rax	# sv, D.23337
	.loc 1 7888 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE166:
	.size	Perl_sv_bless, .-Perl_sv_bless
	.type	S_sv_unglob, @function
S_sv_unglob:
.LFB167:
	.loc 1 7895 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	.loc 1 7899 0
	movq	-24(%rbp), %rax	# sv, tmp80
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23339
	andl	$-1048577, %eax	#, D.23339
	movl	%eax, %edx	# D.23339, D.23339
	movq	-24(%rbp), %rax	# sv, tmp81
	movl	%edx, 12(%rax)	# D.23339, sv_1(D)->sv_flags
	.loc 1 7900 0
	movq	-24(%rbp), %rax	# sv, tmp82
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23340
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_4].xgv_gp, D.23341
	testq	%rax, %rax	# D.23341
	je	.L1899	#,
	.loc 1 7901 0
	movq	-24(%rbp), %rax	# sv, tmp83
	movq	%rax, %rdi	# tmp83,
	call	Perl_gp_free	#
.L1899:
	.loc 1 7902 0
	movq	-24(%rbp), %rax	# sv, tmp84
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23340
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_6].xgv_stash, D.23342
	testq	%rax, %rax	# D.23342
	je	.L1900	#,
	.loc 1 7903 0
	movq	-24(%rbp), %rax	# sv, tmp85
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23340
	movq	80(%rax), %rax	# MEM[(struct XPVGV *)_8].xgv_stash, D.23342
	movq	%rax, %rdi	# D.23342,
	call	Perl_sv_free	#
	.loc 1 7904 0
	movq	-24(%rbp), %rax	# sv, tmp86
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23340
	movq	$0, 80(%rax)	#, MEM[(struct XPVGV *)_10].xgv_stash
.L1900:
	.loc 1 7906 0
	movq	-24(%rbp), %rax	# sv, tmp87
	movl	$42, %esi	#,
	movq	%rax, %rdi	# tmp87,
	call	Perl_sv_unmagic	#
	.loc 1 7907 0
	movq	-24(%rbp), %rax	# sv, tmp88
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23340
	movq	64(%rax), %rax	# MEM[(struct XPVGV *)_11].xgv_name, D.23343
	movq	%rax, %rdi	# D.23343,
	call	Perl_safesysfree	#
	.loc 1 7908 0
	movq	-24(%rbp), %rax	# sv, tmp89
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23340
	movq	-24(%rbp), %rdx	# sv, tmp90
	movq	(%rdx), %rdx	# sv_1(D)->sv_any, D.23340
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_14].xgv_flags, D.23344
	andl	$-3, %edx	#, D.23344
	movb	%dl, 88(%rax)	# D.23344, MEM[(struct XPVGV *)_13].xgv_flags
	.loc 1 7911 0
	call	S_new_xpvmg	#
	movq	%rax, -8(%rbp)	# tmp91, xpvmg
	.loc 1 7912 0
	movq	-24(%rbp), %rax	# sv, tmp92
	movq	(%rax), %rdx	# sv_1(D)->sv_any, D.23340
	movq	-8(%rbp), %rax	# xpvmg, tmp93
	movq	(%rdx), %rcx	# MEM[(struct XPVMG *)_18], tmp94
	movq	%rcx, (%rax)	# tmp94, MEM[(struct XPVMG *)xpvmg_17]
	movq	8(%rdx), %rcx	# MEM[(struct XPVMG *)_18], tmp95
	movq	%rcx, 8(%rax)	# tmp95, MEM[(struct XPVMG *)xpvmg_17]
	movq	16(%rdx), %rcx	# MEM[(struct XPVMG *)_18], tmp96
	movq	%rcx, 16(%rax)	# tmp96, MEM[(struct XPVMG *)xpvmg_17]
	movq	24(%rdx), %rcx	# MEM[(struct XPVMG *)_18], tmp97
	movq	%rcx, 24(%rax)	# tmp97, MEM[(struct XPVMG *)xpvmg_17]
	movq	32(%rdx), %rcx	# MEM[(struct XPVMG *)_18], tmp98
	movq	%rcx, 32(%rax)	# tmp98, MEM[(struct XPVMG *)xpvmg_17]
	movq	40(%rdx), %rcx	# MEM[(struct XPVMG *)_18], tmp99
	movq	%rcx, 40(%rax)	# tmp99, MEM[(struct XPVMG *)xpvmg_17]
	movq	48(%rdx), %rdx	# MEM[(struct XPVMG *)_18], tmp100
	movq	%rdx, 48(%rax)	# tmp100, MEM[(struct XPVMG *)xpvmg_17]
	.loc 1 7913 0
	movq	-24(%rbp), %rax	# sv, tmp101
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23340
	movq	%rax, %rdi	# D.23340,
	call	Perl_safesysfree	#
	.loc 1 7914 0
	movq	-24(%rbp), %rax	# sv, tmp102
	movq	-8(%rbp), %rdx	# xpvmg, tmp103
	movq	%rdx, (%rax)	# tmp103, sv_1(D)->sv_any
	.loc 1 7916 0
	movq	-24(%rbp), %rax	# sv, tmp104
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23339
	movb	$0, %al	#, D.23339
	movl	%eax, %edx	# D.23339, D.23339
	movq	-24(%rbp), %rax	# sv, tmp105
	movl	%edx, 12(%rax)	# D.23339, sv_1(D)->sv_flags
	.loc 1 7917 0
	movq	-24(%rbp), %rax	# sv, tmp106
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23339
	orl	$7, %eax	#, D.23339
	movl	%eax, %edx	# D.23339, D.23339
	movq	-24(%rbp), %rax	# sv, tmp107
	movl	%edx, 12(%rax)	# D.23339, sv_1(D)->sv_flags
	.loc 1 7918 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE167:
	.size	S_sv_unglob, .-S_sv_unglob
	.globl	Perl_sv_unref_flags
	.type	Perl_sv_unref_flags, @function
Perl_sv_unref_flags:
.LFB168:
	.loc 1 7936 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	movl	%esi, -28(%rbp)	# flags, flags
	.loc 1 7937 0
	movq	-24(%rbp), %rax	# sv, tmp70
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23345
	movq	(%rax), %rax	# MEM[(struct XRV *)_2].xrv_rv, tmp71
	movq	%rax, -8(%rbp)	# tmp71, rv
	.loc 1 7939 0
	movq	-24(%rbp), %rax	# sv, tmp72
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23346
	andl	$-2146959360, %eax	#, D.23346
	cmpl	$-2146959360, %eax	#, D.23346
	jne	.L1902	#,
	.loc 1 7940 0
	movq	-24(%rbp), %rax	# sv, tmp73
	movq	%rax, %rdi	# tmp73,
	call	S_sv_del_backref	#
	.loc 1 7941 0
	movq	-24(%rbp), %rax	# sv, tmp74
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23346
	andl	$2146959359, %eax	#, D.23346
	movl	%eax, %edx	# D.23346, D.23346
	movq	-24(%rbp), %rax	# sv, tmp75
	movl	%edx, 12(%rax)	# D.23346, sv_1(D)->sv_flags
	.loc 1 7942 0
	movq	-24(%rbp), %rax	# sv, tmp76
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23345
	movq	$0, (%rax)	#, MEM[(struct XRV *)_8].xrv_rv
	.loc 1 7943 0
	jmp	.L1901	#
.L1902:
	.loc 1 7945 0
	movq	-24(%rbp), %rax	# sv, tmp77
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23345
	movq	$0, (%rax)	#, MEM[(struct XRV *)_9].xrv_rv
	.loc 1 7946 0
	movq	-24(%rbp), %rax	# sv, tmp78
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23346
	andl	$-268959745, %eax	#, D.23346
	movl	%eax, %edx	# D.23346, D.23346
	movq	-24(%rbp), %rax	# sv, tmp79
	movl	%edx, 12(%rax)	# D.23346, sv_1(D)->sv_flags
	.loc 1 7949 0
	movq	-8(%rbp), %rax	# rv, tmp80
	movl	8(%rax), %eax	# rv_3->sv_refcnt, D.23346
	cmpl	$1, %eax	#, D.23346
	jne	.L1904	#,
	.loc 1 7949 0 is_stmt 0 discriminator 1
	movl	-28(%rbp), %eax	# flags, tmp81
	andl	$1, %eax	#, D.23346
	testl	%eax, %eax	# D.23346
	je	.L1905	#,
.L1904:
	.loc 1 7950 0 is_stmt 1
	movq	-8(%rbp), %rax	# rv, tmp82
	movq	%rax, %rdi	# tmp82,
	call	Perl_sv_free	#
	jmp	.L1901	#
.L1905:
	.loc 1 7952 0
	movq	-8(%rbp), %rax	# rv, tmp83
	movq	%rax, %rdi	# tmp83,
	call	Perl_sv_2mortal	#
.L1901:
	.loc 1 7953 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE168:
	.size	Perl_sv_unref_flags, .-Perl_sv_unref_flags
	.globl	Perl_sv_unref
	.type	Perl_sv_unref, @function
Perl_sv_unref:
.LFB169:
	.loc 1 7968 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	.loc 1 7969 0
	movq	-8(%rbp), %rax	# sv, tmp59
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp59,
	call	Perl_sv_unref_flags	#
	.loc 1 7970 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE169:
	.size	Perl_sv_unref, .-Perl_sv_unref
	.globl	Perl_sv_taint
	.type	Perl_sv_taint, @function
Perl_sv_taint:
.LFB170:
	.loc 1 7981 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	.loc 1 7982 0
	movq	-8(%rbp), %rax	# sv, tmp59
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$116, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp59,
	call	Perl_sv_magic	#
	.loc 1 7983 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE170:
	.size	Perl_sv_taint, .-Perl_sv_taint
	.globl	Perl_sv_untaint
	.type	Perl_sv_untaint, @function
Perl_sv_untaint:
.LFB171:
	.loc 1 7994 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	.loc 1 7995 0
	movq	-24(%rbp), %rax	# sv, tmp65
	movl	12(%rax), %eax	# sv_1(D)->sv_flags, D.23347
	movzbl	%al, %eax	# D.23347, D.23347
	cmpl	$6, %eax	#, D.23347
	jbe	.L1908	#,
	.loc 1 7995 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp66
	movq	(%rax), %rax	# sv_1(D)->sv_any, D.23348
	movq	40(%rax), %rax	# MEM[(struct XPVMG *)_4].xmg_magic, D.23349
	testq	%rax, %rax	# D.23349
	je	.L1908	#,
.LBB119:
	.loc 1 7996 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp67
	movl	$116, %esi	#,
	movq	%rax, %rdi	# tmp67,
	call	Perl_mg_find	#
	movq	%rax, -8(%rbp)	# tmp68, mg
	.loc 1 7997 0
	cmpq	$0, -8(%rbp)	#, mg
	je	.L1908	#,
	.loc 1 7998 0
	movq	-8(%rbp), %rax	# mg, tmp69
	movl	40(%rax), %eax	# mg_6->mg_len, D.23350
	andl	$-2, %eax	#, D.23350
	movl	%eax, %edx	# D.23350, D.23350
	movq	-8(%rbp), %rax	# mg, tmp70
	movl	%edx, 40(%rax)	# D.23350, mg_6->mg_len
.L1908:
.LBE119:
	.loc 1 8000 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE171:
	.size	Perl_sv_untaint, .-Perl_sv_untaint
	.globl	Perl_sv_tainted
	.type	Perl_sv_tainted, @function
Perl_sv_tainted:
.LFB172:
	.loc 1 8011 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	.loc 1 8012 0
	movq	-24(%rbp), %rax	# sv, tmp70
	movl	12(%rax), %eax	# sv_2(D)->sv_flags, D.23352
	movzbl	%al, %eax	# D.23352, D.23352
	cmpl	$6, %eax	#, D.23352
	jbe	.L1911	#,
	.loc 1 8012 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp71
	movq	(%rax), %rax	# sv_2(D)->sv_any, D.23353
	movq	40(%rax), %rax	# MEM[(struct XPVMG *)_5].xmg_magic, D.23354
	testq	%rax, %rax	# D.23354
	je	.L1911	#,
.LBB120:
	.loc 1 8013 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp72
	movl	$116, %esi	#,
	movq	%rax, %rdi	# tmp72,
	call	Perl_mg_find	#
	movq	%rax, -8(%rbp)	# tmp73, mg
	.loc 1 8014 0
	cmpq	$0, -8(%rbp)	#, mg
	je	.L1911	#,
	.loc 1 8014 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# mg, tmp74
	movl	40(%rax), %eax	# mg_7->mg_len, D.23355
	andl	$1, %eax	#, D.23355
	testl	%eax, %eax	# D.23355
	jne	.L1912	#,
	movq	-8(%rbp), %rax	# mg, tmp75
	movl	40(%rax), %eax	# mg_7->mg_len, D.23355
	andl	$2, %eax	#, D.23355
	testl	%eax, %eax	# D.23355
	je	.L1911	#,
	movq	-8(%rbp), %rax	# mg, tmp76
	movq	24(%rax), %rax	# mg_7->mg_obj, D.23356
	cmpq	-24(%rbp), %rax	# sv, D.23356
	jne	.L1911	#,
.L1912:
	.loc 1 8015 0 is_stmt 1
	movl	$1, %eax	#, D.23351
	jmp	.L1913	#
.L1911:
.LBE120:
	.loc 1 8017 0
	movl	$0, %eax	#, D.23351
.L1913:
	.loc 1 8018 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE172:
	.size	Perl_sv_tainted, .-Perl_sv_tainted
	.globl	Perl_sv_setpviv
	.type	Perl_sv_setpviv, @function
Perl_sv_setpviv:
.LFB173:
	.loc 1 8031 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -56(%rbp)	# sv, sv
	movq	%rsi, -64(%rbp)	# iv, iv
	.loc 1 8031 0
	movq	%fs:40, %rax	#, tmp70
	movq	%rax, -8(%rbp)	# tmp70, D.23359
	xorl	%eax, %eax	# tmp70
	.loc 1 8034 0
	leaq	-48(%rbp), %rdx	#, tmp64
	movq	-64(%rbp), %rsi	# iv, tmp65
	leaq	-32(%rbp), %rax	#, tmp66
	movq	%rdx, %r8	# tmp64,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# tmp66,
	call	uiv_2buf	#
	movq	%rax, -40(%rbp)	# tmp67, ptr
	.loc 1 8036 0
	movq	-48(%rbp), %rax	# ebuf, ebuf.964
	movq	%rax, %rdx	# ebuf.964, ebuf.965
	movq	-40(%rbp), %rax	# ptr, ptr.966
	subq	%rax, %rdx	# ptr.966, D.23357
	movq	%rdx, %rax	# D.23357, D.23357
	movq	%rax, %rdx	# D.23357, D.23358
	movq	-40(%rbp), %rcx	# ptr, tmp68
	movq	-56(%rbp), %rax	# sv, tmp69
	movq	%rcx, %rsi	# tmp68,
	movq	%rax, %rdi	# tmp69,
	call	Perl_sv_setpvn	#
	.loc 1 8037 0
	movq	-8(%rbp), %rax	# D.23359, tmp71
	xorq	%fs:40, %rax	#, tmp71
	je	.L1915	#,
	call	__stack_chk_fail	#
.L1915:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE173:
	.size	Perl_sv_setpviv, .-Perl_sv_setpviv
	.globl	Perl_sv_setpviv_mg
	.type	Perl_sv_setpviv_mg, @function
Perl_sv_setpviv_mg:
.LFB174:
	.loc 1 8049 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -56(%rbp)	# sv, sv
	movq	%rsi, -64(%rbp)	# iv, iv
	.loc 1 8049 0
	movq	%fs:40, %rax	#, tmp74
	movq	%rax, -8(%rbp)	# tmp74, D.23363
	xorl	%eax, %eax	# tmp74
	.loc 1 8052 0
	leaq	-48(%rbp), %rdx	#, tmp66
	movq	-64(%rbp), %rsi	# iv, tmp67
	leaq	-32(%rbp), %rax	#, tmp68
	movq	%rdx, %r8	# tmp66,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# tmp68,
	call	uiv_2buf	#
	movq	%rax, -40(%rbp)	# tmp69, ptr
	.loc 1 8054 0
	movq	-48(%rbp), %rax	# ebuf, ebuf.967
	movq	%rax, %rdx	# ebuf.967, ebuf.968
	movq	-40(%rbp), %rax	# ptr, ptr.969
	subq	%rax, %rdx	# ptr.969, D.23360
	movq	%rdx, %rax	# D.23360, D.23360
	movq	%rax, %rdx	# D.23360, D.23361
	movq	-40(%rbp), %rcx	# ptr, tmp70
	movq	-56(%rbp), %rax	# sv, tmp71
	movq	%rcx, %rsi	# tmp70,
	movq	%rax, %rdi	# tmp71,
	call	Perl_sv_setpvn	#
	.loc 1 8055 0
	movq	-56(%rbp), %rax	# sv, tmp72
	movl	12(%rax), %eax	# sv_8(D)->sv_flags, D.23362
	andl	$16384, %eax	#, D.23362
	testl	%eax, %eax	# D.23362
	je	.L1916	#,
	.loc 1 8055 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp73
	movq	%rax, %rdi	# tmp73,
	call	Perl_mg_set	#
.L1916:
	.loc 1 8056 0 is_stmt 1
	movq	-8(%rbp), %rax	# D.23363, tmp75
	xorq	%fs:40, %rax	#, tmp75
	je	.L1918	#,
	call	__stack_chk_fail	#
.L1918:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE174:
	.size	Perl_sv_setpviv_mg, .-Perl_sv_setpviv_mg
	.globl	Perl_sv_setpvf
	.type	Perl_sv_setpvf, @function
Perl_sv_setpvf:
.LFB175:
	.loc 1 8102 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$224, %rsp	#,
	movq	%rdi, -216(%rbp)	# sv, sv
	movq	%rdx, -160(%rbp)	#,
	movq	%rcx, -152(%rbp)	#,
	movq	%r8, -144(%rbp)	#,
	movq	%r9, -136(%rbp)	#,
	testb	%al, %al	#
	je	.L1920	#,
	.loc 1 8102 0
	movaps	%xmm0, -128(%rbp)	#,
	movaps	%xmm1, -112(%rbp)	#,
	movaps	%xmm2, -96(%rbp)	#,
	movaps	%xmm3, -80(%rbp)	#,
	movaps	%xmm4, -64(%rbp)	#,
	movaps	%xmm5, -48(%rbp)	#,
	movaps	%xmm6, -32(%rbp)	#,
	movaps	%xmm7, -16(%rbp)	#,
.L1920:
	movq	%rsi, -224(%rbp)	# pat, pat
	.loc 1 8104 0
	movl	$16, -200(%rbp)	#, MEM[(struct [1] *)&args].gp_offset
	movl	$48, -196(%rbp)	#, MEM[(struct [1] *)&args].fp_offset
	leaq	16(%rbp), %rax	#, tmp63
	movq	%rax, -192(%rbp)	# tmp63, MEM[(struct [1] *)&args].overflow_arg_area
	leaq	-176(%rbp), %rax	#, tmp64
	movq	%rax, -184(%rbp)	# tmp64, MEM[(struct [1] *)&args].reg_save_area
	.loc 1 8105 0
	leaq	-200(%rbp), %rdx	#, tmp60
	movq	-224(%rbp), %rcx	# pat, tmp61
	movq	-216(%rbp), %rax	# sv, tmp62
	movq	%rcx, %rsi	# tmp61,
	movq	%rax, %rdi	# tmp62,
	call	Perl_sv_vsetpvf	#
	.loc 1 8107 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE175:
	.size	Perl_sv_setpvf, .-Perl_sv_setpvf
	.globl	Perl_sv_vsetpvf
	.type	Perl_sv_vsetpvf, @function
Perl_sv_vsetpvf:
.LFB176:
	.loc 1 8122 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# pat, pat
	movq	%rdx, -24(%rbp)	# args, args
	.loc 1 8123 0
	movq	-16(%rbp), %rax	# pat, tmp60
	movq	%rax, %rdi	# tmp60,
	call	strlen	#
	movq	%rax, %rdx	#, D.23366
	movq	-24(%rbp), %rcx	# args, tmp61
	movq	-16(%rbp), %rsi	# pat, tmp62
	movq	-8(%rbp), %rax	# sv, tmp63
	movq	$0, (%rsp)	#,
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rax, %rdi	# tmp63,
	call	Perl_sv_vsetpvfn	#
	.loc 1 8124 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE176:
	.size	Perl_sv_vsetpvf, .-Perl_sv_vsetpvf
	.globl	Perl_sv_setpvf_mg
	.type	Perl_sv_setpvf_mg, @function
Perl_sv_setpvf_mg:
.LFB177:
	.loc 1 8136 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$224, %rsp	#,
	movq	%rdi, -216(%rbp)	# sv, sv
	movq	%rdx, -160(%rbp)	#,
	movq	%rcx, -152(%rbp)	#,
	movq	%r8, -144(%rbp)	#,
	movq	%r9, -136(%rbp)	#,
	testb	%al, %al	#
	je	.L1923	#,
	.loc 1 8136 0
	movaps	%xmm0, -128(%rbp)	#,
	movaps	%xmm1, -112(%rbp)	#,
	movaps	%xmm2, -96(%rbp)	#,
	movaps	%xmm3, -80(%rbp)	#,
	movaps	%xmm4, -64(%rbp)	#,
	movaps	%xmm5, -48(%rbp)	#,
	movaps	%xmm6, -32(%rbp)	#,
	movaps	%xmm7, -16(%rbp)	#,
.L1923:
	movq	%rsi, -224(%rbp)	# pat, pat
	.loc 1 8138 0
	movl	$16, -200(%rbp)	#, MEM[(struct [1] *)&args].gp_offset
	movl	$48, -196(%rbp)	#, MEM[(struct [1] *)&args].fp_offset
	leaq	16(%rbp), %rax	#, tmp63
	movq	%rax, -192(%rbp)	# tmp63, MEM[(struct [1] *)&args].overflow_arg_area
	leaq	-176(%rbp), %rax	#, tmp64
	movq	%rax, -184(%rbp)	# tmp64, MEM[(struct [1] *)&args].reg_save_area
	.loc 1 8139 0
	leaq	-200(%rbp), %rdx	#, tmp60
	movq	-224(%rbp), %rcx	# pat, tmp61
	movq	-216(%rbp), %rax	# sv, tmp62
	movq	%rcx, %rsi	# tmp61,
	movq	%rax, %rdi	# tmp62,
	call	Perl_sv_vsetpvf_mg	#
	.loc 1 8141 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE177:
	.size	Perl_sv_setpvf_mg, .-Perl_sv_setpvf_mg
	.globl	Perl_sv_vsetpvf_mg
	.type	Perl_sv_vsetpvf_mg, @function
Perl_sv_vsetpvf_mg:
.LFB178:
	.loc 1 8155 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# pat, pat
	movq	%rdx, -24(%rbp)	# args, args
	.loc 1 8156 0
	movq	-16(%rbp), %rax	# pat, tmp62
	movq	%rax, %rdi	# tmp62,
	call	strlen	#
	movq	%rax, %rdx	#, D.23369
	movq	-24(%rbp), %rcx	# args, tmp63
	movq	-16(%rbp), %rsi	# pat, tmp64
	movq	-8(%rbp), %rax	# sv, tmp65
	movq	$0, (%rsp)	#,
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rax, %rdi	# tmp65,
	call	Perl_sv_vsetpvfn	#
	.loc 1 8157 0
	movq	-8(%rbp), %rax	# sv, tmp66
	movl	12(%rax), %eax	# sv_3(D)->sv_flags, D.23370
	andl	$16384, %eax	#, D.23370
	testl	%eax, %eax	# D.23370
	je	.L1924	#,
	.loc 1 8157 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp67
	movq	%rax, %rdi	# tmp67,
	call	Perl_mg_set	#
.L1924:
	.loc 1 8158 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE178:
	.size	Perl_sv_vsetpvf_mg, .-Perl_sv_vsetpvf_mg
	.globl	Perl_sv_catpvf
	.type	Perl_sv_catpvf, @function
Perl_sv_catpvf:
.LFB179:
	.loc 1 8208 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$224, %rsp	#,
	movq	%rdi, -216(%rbp)	# sv, sv
	movq	%rdx, -160(%rbp)	#,
	movq	%rcx, -152(%rbp)	#,
	movq	%r8, -144(%rbp)	#,
	movq	%r9, -136(%rbp)	#,
	testb	%al, %al	#
	je	.L1927	#,
	.loc 1 8208 0
	movaps	%xmm0, -128(%rbp)	#,
	movaps	%xmm1, -112(%rbp)	#,
	movaps	%xmm2, -96(%rbp)	#,
	movaps	%xmm3, -80(%rbp)	#,
	movaps	%xmm4, -64(%rbp)	#,
	movaps	%xmm5, -48(%rbp)	#,
	movaps	%xmm6, -32(%rbp)	#,
	movaps	%xmm7, -16(%rbp)	#,
.L1927:
	movq	%rsi, -224(%rbp)	# pat, pat
	.loc 1 8210 0
	movl	$16, -200(%rbp)	#, MEM[(struct [1] *)&args].gp_offset
	movl	$48, -196(%rbp)	#, MEM[(struct [1] *)&args].fp_offset
	leaq	16(%rbp), %rax	#, tmp63
	movq	%rax, -192(%rbp)	# tmp63, MEM[(struct [1] *)&args].overflow_arg_area
	leaq	-176(%rbp), %rax	#, tmp64
	movq	%rax, -184(%rbp)	# tmp64, MEM[(struct [1] *)&args].reg_save_area
	.loc 1 8211 0
	leaq	-200(%rbp), %rdx	#, tmp60
	movq	-224(%rbp), %rcx	# pat, tmp61
	movq	-216(%rbp), %rax	# sv, tmp62
	movq	%rcx, %rsi	# tmp61,
	movq	%rax, %rdi	# tmp62,
	call	Perl_sv_vcatpvf	#
	.loc 1 8213 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE179:
	.size	Perl_sv_catpvf, .-Perl_sv_catpvf
	.globl	Perl_sv_vcatpvf
	.type	Perl_sv_vcatpvf, @function
Perl_sv_vcatpvf:
.LFB180:
	.loc 1 8228 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# pat, pat
	movq	%rdx, -24(%rbp)	# args, args
	.loc 1 8229 0
	movq	-16(%rbp), %rax	# pat, tmp60
	movq	%rax, %rdi	# tmp60,
	call	strlen	#
	movq	%rax, %rdx	#, D.23373
	movq	-24(%rbp), %rcx	# args, tmp61
	movq	-16(%rbp), %rsi	# pat, tmp62
	movq	-8(%rbp), %rax	# sv, tmp63
	movq	$0, (%rsp)	#,
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rax, %rdi	# tmp63,
	call	Perl_sv_vcatpvfn	#
	.loc 1 8230 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE180:
	.size	Perl_sv_vcatpvf, .-Perl_sv_vcatpvf
	.globl	Perl_sv_catpvf_mg
	.type	Perl_sv_catpvf_mg, @function
Perl_sv_catpvf_mg:
.LFB181:
	.loc 1 8242 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$224, %rsp	#,
	movq	%rdi, -216(%rbp)	# sv, sv
	movq	%rdx, -160(%rbp)	#,
	movq	%rcx, -152(%rbp)	#,
	movq	%r8, -144(%rbp)	#,
	movq	%r9, -136(%rbp)	#,
	testb	%al, %al	#
	je	.L1930	#,
	.loc 1 8242 0
	movaps	%xmm0, -128(%rbp)	#,
	movaps	%xmm1, -112(%rbp)	#,
	movaps	%xmm2, -96(%rbp)	#,
	movaps	%xmm3, -80(%rbp)	#,
	movaps	%xmm4, -64(%rbp)	#,
	movaps	%xmm5, -48(%rbp)	#,
	movaps	%xmm6, -32(%rbp)	#,
	movaps	%xmm7, -16(%rbp)	#,
.L1930:
	movq	%rsi, -224(%rbp)	# pat, pat
	.loc 1 8244 0
	movl	$16, -200(%rbp)	#, MEM[(struct [1] *)&args].gp_offset
	movl	$48, -196(%rbp)	#, MEM[(struct [1] *)&args].fp_offset
	leaq	16(%rbp), %rax	#, tmp63
	movq	%rax, -192(%rbp)	# tmp63, MEM[(struct [1] *)&args].overflow_arg_area
	leaq	-176(%rbp), %rax	#, tmp64
	movq	%rax, -184(%rbp)	# tmp64, MEM[(struct [1] *)&args].reg_save_area
	.loc 1 8245 0
	leaq	-200(%rbp), %rdx	#, tmp60
	movq	-224(%rbp), %rcx	# pat, tmp61
	movq	-216(%rbp), %rax	# sv, tmp62
	movq	%rcx, %rsi	# tmp61,
	movq	%rax, %rdi	# tmp62,
	call	Perl_sv_vcatpvf_mg	#
	.loc 1 8247 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE181:
	.size	Perl_sv_catpvf_mg, .-Perl_sv_catpvf_mg
	.globl	Perl_sv_vcatpvf_mg
	.type	Perl_sv_vcatpvf_mg, @function
Perl_sv_vcatpvf_mg:
.LFB182:
	.loc 1 8261 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# pat, pat
	movq	%rdx, -24(%rbp)	# args, args
	.loc 1 8262 0
	movq	-16(%rbp), %rax	# pat, tmp62
	movq	%rax, %rdi	# tmp62,
	call	strlen	#
	movq	%rax, %rdx	#, D.23376
	movq	-24(%rbp), %rcx	# args, tmp63
	movq	-16(%rbp), %rsi	# pat, tmp64
	movq	-8(%rbp), %rax	# sv, tmp65
	movq	$0, (%rsp)	#,
	movl	$0, %r9d	#,
	movl	$0, %r8d	#,
	movq	%rax, %rdi	# tmp65,
	call	Perl_sv_vcatpvfn	#
	.loc 1 8263 0
	movq	-8(%rbp), %rax	# sv, tmp66
	movl	12(%rax), %eax	# sv_3(D)->sv_flags, D.23377
	andl	$16384, %eax	#, D.23377
	testl	%eax, %eax	# D.23377
	je	.L1931	#,
	.loc 1 8263 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp67
	movq	%rax, %rdi	# tmp67,
	call	Perl_mg_set	#
.L1931:
	.loc 1 8264 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE182:
	.size	Perl_sv_vcatpvf_mg, .-Perl_sv_vcatpvf_mg
	.globl	Perl_sv_vsetpvfn
	.type	Perl_sv_vsetpvfn, @function
Perl_sv_vsetpvfn:
.LFB183:
	.loc 1 8279 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movq	%rdi, -8(%rbp)	# sv, sv
	movq	%rsi, -16(%rbp)	# pat, pat
	movq	%rdx, -24(%rbp)	# patlen, patlen
	movq	%rcx, -32(%rbp)	# args, args
	movq	%r8, -40(%rbp)	# svargs, svargs
	movl	%r9d, -44(%rbp)	# svmax, svmax
	.loc 1 8280 0
	movq	-8(%rbp), %rax	# sv, tmp59
	movl	$0, %edx	#,
	movl	$.LC1, %esi	#,
	movq	%rax, %rdi	# tmp59,
	call	Perl_sv_setpvn	#
	.loc 1 8281 0
	movl	-44(%rbp), %r9d	# svmax, tmp60
	movq	-40(%rbp), %r8	# svargs, tmp61
	movq	-32(%rbp), %rcx	# args, tmp62
	movq	-24(%rbp), %rdx	# patlen, tmp63
	movq	-16(%rbp), %rsi	# pat, tmp64
	movq	-8(%rbp), %rax	# sv, tmp65
	movq	16(%rbp), %rdi	# maybe_tainted, tmp66
	movq	%rdi, (%rsp)	# tmp66,
	movq	%rax, %rdi	# tmp65,
	call	Perl_sv_vcatpvfn	#
	.loc 1 8282 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE183:
	.size	Perl_sv_vsetpvfn, .-Perl_sv_vsetpvfn
	.type	S_expect_number, @function
S_expect_number:
.LFB184:
	.loc 1 8288 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)	# pattern, pattern
	.loc 1 8289 0
	movl	$0, -4(%rbp)	#, var
	.loc 1 8290 0
	movq	-24(%rbp), %rax	# pattern, tmp74
	movq	(%rax), %rax	# *pattern_4(D), D.23378
	movzbl	(%rax), %eax	# *_5, D.23379
	movsbl	%al, %eax	# D.23379, D.23380
	subl	$49, %eax	#, tmp75
	cmpl	$8, %eax	#, tmp75
	ja	.L1935	#,
	.loc 1 8294 0
	jmp	.L1937	#
.L1938:
	.loc 1 8295 0
	movl	-4(%rbp), %edx	# var, tmp76
	movl	%edx, %eax	# tmp76, tmp77
	sall	$2, %eax	#, tmp77
	addl	%edx, %eax	# tmp76, tmp77
	addl	%eax, %eax	# tmp78
	movl	%eax, %esi	# tmp77, D.23380
	movq	-24(%rbp), %rax	# pattern, tmp79
	movq	(%rax), %rax	# *pattern_4(D), D.23378
	leaq	1(%rax), %rcx	#, D.23378
	movq	-24(%rbp), %rdx	# pattern, tmp80
	movq	%rcx, (%rdx)	# D.23378, *pattern_4(D)
	movzbl	(%rax), %eax	# *_14, D.23379
	movsbl	%al, %eax	# D.23379, D.23380
	subl	$48, %eax	#, D.23380
	addl	%esi, %eax	# D.23380, tmp81
	movl	%eax, -4(%rbp)	# tmp81, var
.L1937:
	.loc 1 8294 0 discriminator 1
	movq	-24(%rbp), %rax	# pattern, tmp82
	movq	(%rax), %rax	# *pattern_4(D), D.23378
	movzbl	(%rax), %eax	# *_8, D.23379
	cmpb	$47, %al	#, D.23379
	jle	.L1935	#,
	.loc 1 8294 0 is_stmt 0 discriminator 2
	movq	-24(%rbp), %rax	# pattern, tmp83
	movq	(%rax), %rax	# *pattern_4(D), D.23378
	movzbl	(%rax), %eax	# *_10, D.23379
	cmpb	$57, %al	#, D.23379
	jle	.L1938	#,
.L1935:
	.loc 1 8297 0 is_stmt 1
	movl	-4(%rbp), %eax	# var, D.23381
	.loc 1 8298 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE184:
	.size	S_expect_number, .-S_expect_number
	.type	F0convert, @function
F0convert:
.LFB185:
	.loc 1 8303 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movsd	%xmm0, -40(%rbp)	# nv, nv
	movq	%rdi, -48(%rbp)	# endbuf, endbuf
	movq	%rsi, -56(%rbp)	# len, len
	.loc 1 8304 0
	xorpd	%xmm0, %xmm0	# tmp72
	ucomisd	-40(%rbp), %xmm0	# nv, tmp72
	seta	%al	#, D.23383
	movzbl	%al, %eax	# D.23383, tmp73
	movl	%eax, -24(%rbp)	# tmp73, neg
	.loc 1 8306 0
	movq	-48(%rbp), %rax	# endbuf, tmp74
	movq	%rax, -8(%rbp)	# tmp74, p
	.loc 1 8308 0
	cmpl	$0, -24(%rbp)	#, neg
	je	.L1941	#,
	.loc 1 8309 0
	movsd	-40(%rbp), %xmm1	# nv, tmp76
	movsd	.LC12(%rip), %xmm0	#, tmp77
	xorpd	%xmm1, %xmm0	# tmp76, tmp75
	movsd	%xmm0, -40(%rbp)	# tmp75, nv
.L1941:
	.loc 1 8310 0
	movsd	.LC10(%rip), %xmm0	#, tmp78
	ucomisd	-40(%rbp), %xmm0	# nv, tmp78
	jbe	.L1954	#,
	.loc 1 8311 0
	movsd	-40(%rbp), %xmm1	# nv, tmp80
	movsd	.LC68(%rip), %xmm0	#, tmp81
	addsd	%xmm1, %xmm0	# tmp80, tmp79
	movsd	%xmm0, -40(%rbp)	# tmp79, nv
	.loc 1 8312 0
	movsd	-40(%rbp), %xmm0	# nv, tmp82
	ucomisd	.LC11(%rip), %xmm0	#, tmp82
	jae	.L1944	#,
	movsd	-40(%rbp), %xmm0	# nv, tmp83
	cvttsd2siq	%xmm0, %rax	# tmp83, tmp84
	movq	%rax, -16(%rbp)	# tmp84, uv
	jmp	.L1945	#
.L1944:
	movsd	-40(%rbp), %xmm0	# nv, tmp86
	movsd	.LC11(%rip), %xmm1	#, tmp87
	subsd	%xmm1, %xmm0	# tmp87, tmp85
	cvttsd2siq	%xmm0, %rax	# tmp85, tmp88
	movq	%rax, -16(%rbp)	# tmp88, uv
	movabsq	$-9223372036854775808, %rax	#, tmp89
	xorq	%rax, -16(%rbp)	# tmp89, uv
.L1945:
	movq	-16(%rbp), %rax	# uv, tmp90
	movq	%rax, -16(%rbp)	# tmp90, uv
	.loc 1 8313 0
	movq	-16(%rbp), %rax	# uv, tmp91
	andl	$1, %eax	#, D.23384
	testq	%rax, %rax	# D.23384
	je	.L1946	#,
	.loc 1 8313 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# uv, tmp92
	testq	%rax, %rax	# tmp92
	js	.L1947	#,
	cvtsi2sdq	%rax, %xmm0	# tmp92, D.23385
	jmp	.L1948	#
.L1947:
	movq	%rax, %rdx	# tmp92, tmp94
	shrq	%rdx	# tmp94
	andl	$1, %eax	#, tmp95
	orq	%rax, %rdx	# tmp95, tmp94
	cvtsi2sdq	%rdx, %xmm0	# tmp94, tmp93
	addsd	%xmm0, %xmm0	# tmp93, D.23385
.L1948:
	ucomisd	-40(%rbp), %xmm0	# nv, D.23385
	jp	.L1946	#,
	ucomisd	-40(%rbp), %xmm0	# nv, D.23385
	jne	.L1946	#,
	.loc 1 8314 0 is_stmt 1
	subq	$1, -16(%rbp)	#, uv
.L1946:
.LBB121:
	.loc 1 8316 0 discriminator 1
	movq	-16(%rbp), %rcx	# uv, tmp96
	movabsq	$-3689348814741910323, %rdx	#, tmp98
	movq	%rcx, %rax	# tmp96, tmp110
	mulq	%rdx	# tmp98
	shrq	$3, %rdx	#, D.23384
	movq	%rdx, %rax	# D.23384, tmp99
	salq	$2, %rax	#, tmp99
	addq	%rdx, %rax	# D.23384, tmp99
	addq	%rax, %rax	# tmp100
	subq	%rax, %rcx	# tmp99, D.23384
	movq	%rcx, %rdx	# D.23384, D.23384
	movl	%edx, -20(%rbp)	# D.23384, dig
	.loc 1 8317 0 discriminator 1
	subq	$1, -8(%rbp)	#, p
	movl	-20(%rbp), %eax	# dig, tmp101
	addl	$48, %eax	#, D.23386
	movl	%eax, %edx	# D.23386, D.23387
	movq	-8(%rbp), %rax	# p, tmp102
	movb	%dl, (%rax)	# D.23387, *p_19
.LBE121:
	.loc 1 8318 0 discriminator 1
	movq	-16(%rbp), %rax	# uv, tmp104
	movabsq	$-3689348814741910323, %rdx	#, tmp106
	mulq	%rdx	# tmp106
	movq	%rdx, %rax	# tmp105, tmp103
	shrq	$3, %rax	#, tmp103
	movq	%rax, -16(%rbp)	# tmp103, uv
	cmpq	$0, -16(%rbp)	#, uv
	jne	.L1946	#,
	.loc 1 8319 0
	cmpl	$0, -24(%rbp)	#, neg
	je	.L1950	#,
	.loc 1 8320 0
	subq	$1, -8(%rbp)	#, p
	movq	-8(%rbp), %rax	# p, tmp107
	movb	$45, (%rax)	#, *p_24
.L1950:
	.loc 1 8321 0
	movq	-48(%rbp), %rdx	# endbuf, endbuf.970
	movq	-8(%rbp), %rax	# p, p.971
	subq	%rax, %rdx	# p.971, D.23388
	movq	%rdx, %rax	# D.23388, D.23388
	movq	%rax, %rdx	# D.23388, D.23384
	movq	-56(%rbp), %rax	# len, tmp108
	movq	%rdx, (%rax)	# D.23384, *len_29(D)
	.loc 1 8322 0
	movq	-8(%rbp), %rax	# p, D.23382
	jmp	.L1951	#
.L1954:
	.loc 1 8324 0
	movl	$0, %eax	#, D.23382
.L1951:
	.loc 1 8325 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE185:
	.size	F0convert, .-F0convert
	.section	.rodata
.LC69:
	.string	"."
.LC70:
	.string	"0123456789ABCDEF"
.LC71:
	.string	"0123456789abcdef"
.LC72:
	.string	"panic: frexp"
.LC73:
	.string	"s"
	.align 8
.LC74:
	.string	"Invalid conversion in %sprintf: "
.LC75:
	.string	"\"%%%c\""
.LC76:
	.string	"\"%%\\%03lo\""
.LC77:
	.string	"end of string"
.LC78:
	.string	"%_"
	.align 8
.LC79:
	.string	"Newline in left-justified string for %sprintf"
	.text
	.globl	Perl_sv_vcatpvfn
	.type	Perl_sv_vcatpvfn, @function
Perl_sv_vcatpvfn:
.LFB186:
	.loc 1 8344 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$600, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -520(%rbp)	# sv, sv
	movq	%rsi, -528(%rbp)	# pat, pat
	movq	%rdx, -536(%rbp)	# patlen, patlen
	movq	%rcx, -544(%rbp)	# args, args
	movq	%r8, -552(%rbp)	# svargs, svargs
	movl	%r9d, -556(%rbp)	# svmax, svmax
	movq	16(%rbp), %rax	# maybe_tainted, tmp1015
	movq	%rax, -568(%rbp)	# tmp1015, maybe_tainted
	.loc 1 8344 0
	movq	%fs:40, %rax	#, tmp1601
	movq	%rax, -24(%rbp)	# tmp1601, D.23413
	xorl	%eax, %eax	# tmp1601
	.loc 1 8349 0
	movl	$0, -492(%rbp)	#, svix
	.loc 1 8351 0
	movq	$0, -400(%rbp)	#, argsv
	.loc 1 8354 0
	movq	$0, -392(%rbp)	#, nsv
	.loc 1 8362 0
	movq	-520(%rbp), %rax	# sv, tmp1016
	movl	12(%rax), %eax	# sv_269(D)->sv_flags, D.23389
	andl	$536870912, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L1956	#,
	.loc 1 8362 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.973
	movzbl	37(%rax), %eax	# PL_curcop.973_272->op_private, D.23390
	movzbl	%al, %eax	# D.23390, D.23391
	andl	$8, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L1956	#,
	.loc 1 8362 0 discriminator 3
	movl	$1, %eax	#, iftmp.972
	jmp	.L1957	#
.L1956:
	.loc 1 8362 0 discriminator 2
	movl	$0, %eax	#, iftmp.972
.L1957:
	.loc 1 8362 0 discriminator 4
	movb	%al, -497(%rbp)	# iftmp.972, pat_utf8
	movzbl	-497(%rbp), %eax	# pat_utf8, tmp1017
	movb	%al, -509(%rbp)	# tmp1017, has_utf8
	.loc 1 8365 0 is_stmt 1 discriminator 4
	movq	-520(%rbp), %rax	# sv, tmp1018
	movl	12(%rax), %eax	# sv_269(D)->sv_flags, D.23389
	andl	$10223616, %eax	#, D.23389
	cmpl	$262144, %eax	#, D.23389
	jne	.L1958	#,
	.loc 1 8365 0 is_stmt 0 discriminator 1
	movq	-520(%rbp), %rax	# sv, tmp1019
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_282].xpv_cur, origlen.974
	movq	%rax, -448(%rbp)	# origlen.974, origlen
	jmp	.L1959	#
.L1958:
	.loc 1 8365 0 discriminator 2
	leaq	-448(%rbp), %rcx	#, tmp1021
	movq	-520(%rbp), %rax	# sv, tmp1022
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp1021,
	movq	%rax, %rdi	# tmp1022,
	call	Perl_sv_pvn_force_flags	#
.L1959:
	.loc 1 8368 0 is_stmt 1
	cmpq	$0, -536(%rbp)	#, patlen
	jne	.L1960	#,
	.loc 1 8369 0
	jmp	.L1955	#
.L1960:
	.loc 1 8370 0
	cmpq	$2, -536(%rbp)	#, patlen
	jne	.L1962	#,
	.loc 1 8370 0 is_stmt 0 discriminator 1
	movq	-528(%rbp), %rax	# pat, tmp1023
	movzbl	(%rax), %eax	# *pat_286(D), D.23393
	cmpb	$37, %al	#, D.23393
	jne	.L1962	#,
	.loc 1 8371 0 is_stmt 1
	movq	-528(%rbp), %rax	# pat, tmp1024
	addq	$1, %rax	#, D.23394
	movzbl	(%rax), %eax	# *_288, D.23393
	movsbl	%al, %eax	# D.23393, D.23391
	cmpl	$95, %eax	#, D.23391
	je	.L1963	#,
	cmpl	$115, %eax	#, D.23391
	jne	.L1962	#,
	.loc 1 8373 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L1965	#,
.LBB122:
	.loc 1 8374 0
	movq	-544(%rbp), %rax	# args, tmp1025
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L1966	#,
	.loc 1 8374 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1026
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1027
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.975
	movq	-544(%rbp), %rdx	# args, tmp1028
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1029
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L1967	#
.L1966:
	.loc 1 8374 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1030
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.975
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1031
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L1967:
	movq	(%rax), %rax	# MEM[(char * * {ref-all})addr.975_202], tmp1032
	movq	%rax, -272(%rbp)	# tmp1032, s
	.loc 1 8375 0 is_stmt 1 discriminator 1
	cmpq	$0, -272(%rbp)	#, s
	je	.L1968	#,
	movq	-272(%rbp), %rax	# s, iftmp.976
	jmp	.L1969	#
.L1968:
	.loc 1 8375 0 is_stmt 0 discriminator 2
	movl	$nullstr.11958, %eax	#, iftmp.976
.L1969:
	.loc 1 8375 0 discriminator 1
	movq	-520(%rbp), %rdx	# sv, tmp1033
	movq	%rax, %rsi	# iftmp.976,
	movq	%rdx, %rdi	# tmp1033,
	call	Perl_sv_catpv	#
.LBE122:
	jmp	.L1970	#
.L1965:
	.loc 1 8377 0 is_stmt 1
	movl	-492(%rbp), %eax	# svix, tmp1034
	cmpl	-556(%rbp), %eax	# svmax, tmp1034
	jge	.L1970	#,
	.loc 1 8378 0
	movq	-552(%rbp), %rax	# svargs, tmp1035
	movq	(%rax), %rcx	# *svargs_306(D), D.23396
	movq	-520(%rbp), %rax	# sv, tmp1036
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# D.23396,
	movq	%rax, %rdi	# tmp1036,
	call	Perl_sv_catsv_flags	#
	.loc 1 8379 0
	movq	-552(%rbp), %rax	# svargs, tmp1037
	movq	(%rax), %rax	# *svargs_306(D), D.23396
	movl	12(%rax), %eax	# _308->sv_flags, D.23389
	andl	$536870912, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L1970	#,
	.loc 1 8379 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.977
	movzbl	37(%rax), %eax	# PL_curcop.977_311->op_private, D.23390
	movzbl	%al, %eax	# D.23390, D.23391
	andl	$8, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L1970	#,
	.loc 1 8380 0 is_stmt 1
	movq	-520(%rbp), %rax	# sv, tmp1038
	movl	12(%rax), %eax	# sv_269(D)->sv_flags, D.23389
	orl	$536870912, %eax	#, D.23389
	movl	%eax, %edx	# D.23389, D.23389
	movq	-520(%rbp), %rax	# sv, tmp1039
	movl	%edx, 12(%rax)	# D.23389, sv_269(D)->sv_flags
	.loc 1 8382 0
	jmp	.L1955	#
.L1970:
	jmp	.L1955	#
.L1963:
	.loc 1 8384 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L1971	#,
	.loc 1 8385 0
	movq	-544(%rbp), %rax	# args, tmp1040
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L1972	#,
	.loc 1 8385 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1041
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1042
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.978
	movq	-544(%rbp), %rdx	# args, tmp1043
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1044
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L1973	#
.L1972:
	.loc 1 8385 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1045
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.978
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1046
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L1973:
	movq	(%rax), %rax	# MEM[(struct SV * * {ref-all})addr.978_204], tmp1047
	movq	%rax, -400(%rbp)	# tmp1047, argsv
	.loc 1 8386 0 is_stmt 1 discriminator 1
	movq	-400(%rbp), %rcx	# argsv, tmp1048
	movq	-520(%rbp), %rax	# sv, tmp1049
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp1048,
	movq	%rax, %rdi	# tmp1049,
	call	Perl_sv_catsv_flags	#
	.loc 1 8387 0 discriminator 1
	movq	-400(%rbp), %rax	# argsv, tmp1050
	movl	12(%rax), %eax	# argsv_327->sv_flags, D.23389
	andl	$536870912, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L1974	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.979
	movzbl	37(%rax), %eax	# PL_curcop.979_330->op_private, D.23390
	movzbl	%al, %eax	# D.23390, D.23391
	andl	$8, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L1974	#,
	.loc 1 8388 0
	movq	-520(%rbp), %rax	# sv, tmp1051
	movl	12(%rax), %eax	# sv_269(D)->sv_flags, D.23389
	orl	$536870912, %eax	#, D.23389
	movl	%eax, %edx	# D.23389, D.23389
	movq	-520(%rbp), %rax	# sv, tmp1052
	movl	%edx, 12(%rax)	# D.23389, sv_269(D)->sv_flags
	.loc 1 8389 0
	jmp	.L1955	#
.L1974:
	jmp	.L1955	#
.L1971:
	.loc 1 8392 0
	nop
.L1962:
	.loc 1 8398 0
	cmpq	$5, -536(%rbp)	#, patlen
	ja	.L1975	#,
	.loc 1 8398 0 is_stmt 0 discriminator 1
	movq	-528(%rbp), %rax	# pat, tmp1053
	movzbl	(%rax), %eax	# *pat_286(D), D.23393
	cmpb	$37, %al	#, D.23393
	jne	.L1975	#,
	movq	-528(%rbp), %rax	# pat, tmp1054
	addq	$1, %rax	#, D.23394
	movzbl	(%rax), %eax	# *_337, D.23393
	cmpb	$46, %al	#, D.23393
	jne	.L1975	#,
	.loc 1 8399 0 is_stmt 1
	movq	-536(%rbp), %rax	# patlen, tmp1055
	leaq	-1(%rax), %rdx	#, D.23395
	movq	-528(%rbp), %rax	# pat, tmp1056
	addq	%rdx, %rax	# D.23395, D.23394
	movzbl	(%rax), %eax	# *_340, D.23393
	cmpb	$103, %al	#, D.23393
	je	.L1976	#,
	.loc 1 8399 0 is_stmt 0 discriminator 1
	movq	-536(%rbp), %rax	# patlen, tmp1057
	leaq	-1(%rax), %rdx	#, D.23395
	movq	-528(%rbp), %rax	# pat, tmp1058
	addq	%rdx, %rax	# D.23395, D.23394
	movzbl	(%rax), %eax	# *_343, D.23393
	cmpb	$102, %al	#, D.23393
	jne	.L1975	#,
.L1976:
.LBB123:
	.loc 1 8400 0 is_stmt 1
	movl	$0, -488(%rbp)	#, digits
	.loc 1 8403 0
	movq	-528(%rbp), %rax	# pat, tmp1062
	addq	$2, %rax	#, tmp1061
	movq	%rax, -384(%rbp)	# tmp1061, pp
	.loc 1 8404 0
	jmp	.L1977	#
.L1979:
	.loc 1 8405 0
	movl	-488(%rbp), %edx	# digits, tmp1063
	movl	%edx, %eax	# tmp1063, tmp1064
	sall	$2, %eax	#, tmp1064
	addl	%edx, %eax	# tmp1063, tmp1064
	addl	%eax, %eax	# tmp1065
	movl	%eax, %ecx	# tmp1064, D.23389
	movq	-384(%rbp), %rax	# pp, pp.980
	leaq	1(%rax), %rdx	#, tmp1066
	movq	%rdx, -384(%rbp)	# tmp1066, pp
	movzbl	(%rax), %eax	# *pp.980_350, D.23393
	movsbl	%al, %eax	# D.23393, D.23389
	addl	%ecx, %eax	# D.23389, D.23389
	subl	$48, %eax	#, tmp1067
	movl	%eax, -488(%rbp)	# tmp1067, digits
.L1977:
	.loc 1 8404 0 discriminator 1
	movq	-384(%rbp), %rax	# pp, tmp1068
	movzbl	(%rax), %eax	# *pp_60, D.23393
	cmpb	$47, %al	#, D.23393
	jle	.L1978	#,
	.loc 1 8404 0 is_stmt 0 discriminator 2
	movq	-384(%rbp), %rax	# pp, tmp1069
	movzbl	(%rax), %eax	# *pp_60, D.23393
	cmpb	$57, %al	#, D.23393
	jle	.L1979	#,
.L1978:
	.loc 1 8406 0 is_stmt 1
	movq	-384(%rbp), %rdx	# pp, pp.981
	movq	-528(%rbp), %rax	# pat, pat.982
	subq	%rax, %rdx	# pat.982, D.23397
	movq	-536(%rbp), %rax	# patlen, tmp1070
	subl	$1, %eax	#, D.23391
	cltq
	cmpq	%rax, %rdx	# D.23397, D.23397
	jne	.L1975	#,
.LBB124:
	.loc 1 8409 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L1980	#,
	.loc 1 8410 0
	movq	-544(%rbp), %rax	# args, tmp1071
	movl	4(%rax), %eax	# args_291(D)->fp_offset, D.23389
	cmpl	$176, %eax	#, D.23389
	jae	.L1981	#,
	.loc 1 8410 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1072
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1073
	movl	4(%rax), %eax	# args_291(D)->fp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.983
	movq	-544(%rbp), %rdx	# args, tmp1074
	movl	4(%rdx), %edx	# args_291(D)->fp_offset, D.23389
	leal	16(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1075
	movl	%ecx, 4(%rdx)	# D.23389, args_291(D)->fp_offset
	jmp	.L1982	#
.L1981:
	.loc 1 8410 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1076
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.983
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1077
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L1982:
	movq	(%rax), %rax	# MEM[(double * {ref-all})addr.983_205], tmp1078
	movq	%rax, -376(%rbp)	# tmp1078, nv
	jmp	.L1983	#
.L1980:
	.loc 1 8411 0 is_stmt 1
	movl	-492(%rbp), %eax	# svix, tmp1079
	cmpl	-556(%rbp), %eax	# svmax, tmp1079
	jge	.L1984	#,
	.loc 1 8412 0
	movq	-552(%rbp), %rax	# svargs, tmp1080
	movq	(%rax), %rax	# *svargs_306(D), D.23396
	movl	12(%rax), %eax	# _373->sv_flags, D.23389
	andl	$131072, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L1985	#,
	.loc 1 8412 0 is_stmt 0 discriminator 1
	movq	-552(%rbp), %rax	# svargs, tmp1081
	movq	(%rax), %rax	# *svargs_306(D), D.23396
	movq	(%rax), %rax	# _376->sv_any, D.23392
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_377].xnv_nv, iftmp.984
	jmp	.L1986	#
.L1985:
	.loc 1 8412 0 discriminator 2
	movq	-552(%rbp), %rax	# svargs, tmp1082
	movq	(%rax), %rax	# *svargs_306(D), D.23396
	movq	%rax, %rdi	# D.23396,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -592(%rbp)	#, %sfp
	movq	-592(%rbp), %rax	# %sfp, iftmp.984
.L1986:
	.loc 1 8412 0 discriminator 1
	movq	%rax, -376(%rbp)	# iftmp.984, nv
	jmp	.L1983	#
.L1984:
	.loc 1 8414 0 is_stmt 1
	jmp	.L1955	#
.L1983:
	.loc 1 8415 0
	movq	-384(%rbp), %rax	# pp, tmp1083
	movzbl	(%rax), %eax	# *pp_60, D.23393
	cmpb	$103, %al	#, D.23393
	jne	.L1987	#,
	.loc 1 8419 0
	cmpl	$0, -488(%rbp)	#, digits
	je	.L1975	#,
	.loc 1 8419 0 is_stmt 0 discriminator 1
	cmpl	$101, -488(%rbp)	#, digits
	ja	.L1975	#,
	.loc 1 8421 0 is_stmt 1
	movl	-488(%rbp), %edx	# digits, digits.985
	leaq	-160(%rbp), %rcx	#, tmp1084
	movq	-376(%rbp), %rax	# nv, tmp1085
	movq	%rcx, %rsi	# tmp1084,
	movl	%edx, %edi	# digits.985,
	movq	%rax, -592(%rbp)	# tmp1085, %sfp
	movsd	-592(%rbp), %xmm0	# %sfp,
	call	gcvt	#
	.loc 1 8422 0
	leaq	-160(%rbp), %rdx	#, tmp1086
	movq	-520(%rbp), %rax	# sv, tmp1087
	movq	%rdx, %rsi	# tmp1086,
	movq	%rax, %rdi	# tmp1087,
	call	Perl_sv_catpv	#
	.loc 1 8423 0
	movzbl	-160(%rbp), %eax	# ebuf, D.23393
	testb	%al, %al	# D.23393
	je	.L1975	#,
	.loc 1 8424 0
	jmp	.L1955	#
.L1987:
	.loc 1 8426 0
	cmpl	$0, -488(%rbp)	#, digits
	jne	.L1975	#,
.LBB125:
	.loc 1 8429 0
	leaq	-416(%rbp), %rdx	#, tmp1088
	leaq	-160(%rbp), %rax	#, tmp1089
	leaq	127(%rax), %rcx	#, tmp1090
	movq	-376(%rbp), %rax	# nv, tmp1091
	movq	%rdx, %rsi	# tmp1088,
	movq	%rcx, %rdi	# tmp1090,
	movq	%rax, -592(%rbp)	# tmp1091, %sfp
	movsd	-592(%rbp), %xmm0	# %sfp,
	call	F0convert	#
	movq	%rax, -408(%rbp)	# tmp1092, p
	cmpq	$0, -408(%rbp)	#, p
	je	.L1975	#,
	.loc 1 8430 0
	movq	-416(%rbp), %rdx	# l, l.986
	movq	-408(%rbp), %rsi	# p, tmp1093
	movq	-520(%rbp), %rax	# sv, tmp1094
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp1094,
	call	Perl_sv_catpvn_flags	#
	jmp	.L1955	#
.L1975:
.LBE125:
.LBE124:
.LBE123:
	.loc 1 8438 0
	cmpq	$0, -544(%rbp)	#, args
	jne	.L1989	#,
	.loc 1 8438 0 is_stmt 0 discriminator 1
	movl	-492(%rbp), %eax	# svix, tmp1095
	cmpl	-556(%rbp), %eax	# svmax, tmp1095
	jge	.L1989	#,
	movq	-552(%rbp), %rax	# svargs, tmp1096
	movq	(%rax), %rax	# *svargs_306(D), D.23396
	movl	12(%rax), %eax	# _387->sv_flags, D.23389
	andl	$536870912, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L1989	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.987
	movzbl	37(%rax), %eax	# PL_curcop.987_390->op_private, D.23390
	movzbl	%al, %eax	# D.23390, D.23391
	andl	$8, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L1989	#,
	.loc 1 8439 0 is_stmt 1
	movb	$1, -509(%rbp)	#, has_utf8
.L1989:
	.loc 1 8441 0
	movq	-536(%rbp), %rax	# patlen, tmp1101
	movq	-528(%rbp), %rdx	# pat, tmp1102
	addq	%rdx, %rax	# tmp1102, tmp1100
	movq	%rax, -264(%rbp)	# tmp1100, patend
	.loc 1 8442 0
	movq	-528(%rbp), %rax	# pat, tmp1103
	movq	%rax, -408(%rbp)	# tmp1103, p
	jmp	.L1990	#
.L2321:
.LBB126:
	.loc 1 8443 0
	movb	$0, -508(%rbp)	#, alt
	.loc 1 8444 0
	movb	$0, -507(%rbp)	#, left
	.loc 1 8445 0
	movb	$0, -506(%rbp)	#, vectorize
	.loc 1 8446 0
	movb	$0, -505(%rbp)	#, vectorarg
	.loc 1 8447 0
	movb	$0, -504(%rbp)	#, vec_utf8
	.loc 1 8448 0
	movb	$32, -503(%rbp)	#, fill
	.loc 1 8449 0
	movb	$0, -502(%rbp)	#, plus
	.loc 1 8450 0
	movb	$0, -501(%rbp)	#, intsize
	.loc 1 8451 0
	movq	$0, -368(%rbp)	#, width
	.loc 1 8452 0
	movq	$0, -360(%rbp)	#, zeros
	.loc 1 8453 0
	movb	$0, -500(%rbp)	#, has_precis
	.loc 1 8454 0
	movq	$0, -352(%rbp)	#, precis
	.loc 1 8455 0
	movl	-492(%rbp), %eax	# svix, tmp1104
	movl	%eax, -468(%rbp)	# tmp1104, osvix
	.loc 1 8456 0
	movb	$0, -499(%rbp)	#, is_utf8
	.loc 1 8465 0
	movq	$0, -344(%rbp)	#, esignlen
	.loc 1 8467 0
	movq	$0, -336(%rbp)	#, eptr
	.loc 1 8468 0
	movq	$0, -440(%rbp)	#, elen
	.loc 1 8469 0
	movq	$0, -328(%rbp)	#, vecsv
	.loc 1 8470 0
	movq	$0, -320(%rbp)	#, vecstr
	.loc 1 8471 0
	movq	$0, -432(%rbp)	#, veclen
	.loc 1 8472 0
	movb	$0, -510(%rbp)	#, c
	.loc 1 8474 0
	movl	$0, -484(%rbp)	#, base
	.loc 1 8475 0
	movq	$0, -312(%rbp)	#, iv
	.loc 1 8476 0
	movq	$0, -304(%rbp)	#, uv
	.loc 1 8488 0
	movq	$.LC69, -288(%rbp)	#, dotstr
	.loc 1 8489 0
	movq	$1, -424(%rbp)	#, dotstrlen
	.loc 1 8490 0
	movl	$0, -480(%rbp)	#, efix
	.loc 1 8491 0
	movl	$0, -476(%rbp)	#, ewix
	.loc 1 8492 0
	movl	$0, -464(%rbp)	#, epix
	.loc 1 8493 0
	movl	$0, -472(%rbp)	#, evix
	.loc 1 8494 0
	movb	$0, -498(%rbp)	#, asterisk
	.loc 1 8497 0
	movq	-408(%rbp), %rax	# p, tmp1105
	movq	%rax, -456(%rbp)	# tmp1105, q
	jmp	.L1991	#
.L1993:
	.loc 1 8497 0 is_stmt 0 discriminator 1
	movq	-456(%rbp), %rax	# q, q.988
	addq	$1, %rax	#, q.989
	movq	%rax, -456(%rbp)	# q.989, q
.L1991:
	movq	-456(%rbp), %rax	# q, q.990
	cmpq	-264(%rbp), %rax	# patend, q.990
	jae	.L1992	#,
	.loc 1 8497 0 discriminator 2
	movq	-456(%rbp), %rax	# q, q.991
	movzbl	(%rax), %eax	# *q.991_425, D.23393
	cmpb	$37, %al	#, D.23393
	jne	.L1993	#,
.L1992:
	.loc 1 8498 0 is_stmt 1
	movq	-456(%rbp), %rax	# q, q.992
	cmpq	-408(%rbp), %rax	# p, q.992
	jbe	.L1994	#,
	.loc 1 8499 0
	cmpb	$0, -509(%rbp)	#, has_utf8
	je	.L1995	#,
	.loc 1 8499 0 is_stmt 0 discriminator 1
	cmpb	$0, -497(%rbp)	#, pat_utf8
	jne	.L1995	#,
.LBB127:
	.loc 1 8500 0 is_stmt 1
	cmpq	$0, -392(%rbp)	#, nsv
	jne	.L1996	#,
	.loc 1 8500 0 is_stmt 0 discriminator 1
	movq	-456(%rbp), %rax	# q, q.993
	movq	%rax, %rdx	# q.993, q.994
	movq	-408(%rbp), %rax	# p, p.995
	subq	%rax, %rdx	# p.995, D.23397
	movq	%rdx, %rax	# D.23397, D.23397
	movq	%rax, %rdx	# D.23397, D.23398
	movq	-408(%rbp), %rax	# p, tmp1106
	movq	%rdx, %rsi	# D.23398,
	movq	%rax, %rdi	# tmp1106,
	call	Perl_newSVpvn	#
	movq	%rax, %rdi	# D.23396,
	call	Perl_sv_2mortal	#
	movq	%rax, -392(%rbp)	# tmp1107, nsv
	jmp	.L1997	#
.L1996:
	.loc 1 8500 0 discriminator 2
	movq	-456(%rbp), %rax	# q, q.996
	movq	%rax, %rdx	# q.996, q.997
	movq	-408(%rbp), %rax	# p, p.998
	subq	%rax, %rdx	# p.998, D.23397
	movq	%rdx, %rax	# D.23397, D.23397
	movq	%rax, %rdx	# D.23397, D.23398
	movq	-408(%rbp), %rcx	# p, tmp1108
	movq	-392(%rbp), %rax	# nsv, tmp1109
	movq	%rcx, %rsi	# tmp1108,
	movq	%rax, %rdi	# tmp1109,
	call	Perl_sv_setpvn	#
.L1997:
	.loc 1 8500 0 discriminator 1
	movq	-392(%rbp), %rax	# nsv, tmp1110
	movl	12(%rax), %eax	# nsv_55->sv_flags, D.23389
	andl	$-536870913, %eax	#, D.23389
	movl	%eax, %edx	# D.23389, D.23389
	movq	-392(%rbp), %rax	# nsv, tmp1111
	movl	%edx, 12(%rax)	# D.23389, nsv_55->sv_flags
	movq	-392(%rbp), %rax	# nsv, tmp1112
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp1112,
	call	Perl_sv_utf8_upgrade_flags	#
	movq	-392(%rbp), %rcx	# nsv, tmp1113
	movq	-520(%rbp), %rax	# sv, tmp1114
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp1113,
	movq	%rax, %rdi	# tmp1114,
	call	Perl_sv_catsv_flags	#
.LBE127:
	jmp	.L1998	#
.L1995:
	.loc 1 8502 0 is_stmt 1
	movq	-456(%rbp), %rax	# q, q.999
	movq	%rax, %rdx	# q.999, q.1000
	movq	-408(%rbp), %rax	# p, p.1001
	subq	%rax, %rdx	# p.1001, D.23397
	movq	%rdx, %rax	# D.23397, D.23397
	movq	%rax, %rdx	# D.23397, D.23398
	movq	-408(%rbp), %rsi	# p, tmp1115
	movq	-520(%rbp), %rax	# sv, tmp1116
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp1116,
	call	Perl_sv_catpvn_flags	#
.L1998:
	.loc 1 8503 0
	movq	-456(%rbp), %rax	# q, tmp1117
	movq	%rax, -408(%rbp)	# tmp1117, p
.L1994:
	.loc 1 8505 0
	movq	-456(%rbp), %rax	# q, q.1002
	leaq	1(%rax), %rdx	#, q.1004
	movq	%rdx, -456(%rbp)	# q.1004, q
	cmpq	-264(%rbp), %rax	# patend, q.1003
	jb	.L1999	#,
.LBE126:
	jmp	.L1955	#
.L1999:
.LBB137:
	.loc 1 8519 0
	leaq	-456(%rbp), %rax	#, tmp1118
	movq	%rax, %rdi	# tmp1118,
	call	S_expect_number	#
	cltq
	movq	%rax, -368(%rbp)	# tmp1119, width
	cmpq	$0, -368(%rbp)	#, width
	je	.L2001	#,
	.loc 1 8520 0
	movq	-456(%rbp), %rax	# q, q.1005
	movzbl	(%rax), %eax	# *q.1005_455, D.23393
	cmpb	$36, %al	#, D.23393
	jne	.L2002	#,
	.loc 1 8521 0
	movq	-456(%rbp), %rax	# q, q.1006
	addq	$1, %rax	#, q.1007
	movq	%rax, -456(%rbp)	# q.1007, q
	.loc 1 8522 0
	movq	-368(%rbp), %rax	# width, tmp1120
	movl	%eax, -480(%rbp)	# tmp1120, efix
	jmp	.L2001	#
.L2002:
	.loc 1 8524 0
	jmp	.L2003	#
.L2001:
	.loc 1 8530 0
	jmp	.L2004	#
.L2012:
	.loc 1 8531 0
	movq	-456(%rbp), %rax	# q, q.1008
	movzbl	(%rax), %eax	# *q.1008_462, D.23393
	movsbl	%al, %eax	# D.23393, D.23391
	subl	$32, %eax	#, tmp1121
	cmpl	$16, %eax	#, tmp1121
	ja	.L2327	#,
	movl	%eax, %eax	# tmp1121, tmp1122
	movq	.L2007(,%rax,8), %rax	#, tmp1123
	jmp	*%rax	# tmp1123
	.section	.rodata
	.align 8
	.align 4
.L2007:
	.quad	.L2006
	.quad	.L2327
	.quad	.L2327
	.quad	.L2008
	.quad	.L2327
	.quad	.L2327
	.quad	.L2327
	.quad	.L2327
	.quad	.L2327
	.quad	.L2327
	.quad	.L2327
	.quad	.L2006
	.quad	.L2327
	.quad	.L2009
	.quad	.L2327
	.quad	.L2327
	.quad	.L2010
	.text
.L2006:
	.loc 1 8534 0
	movq	-456(%rbp), %rax	# q, q.1009
	leaq	1(%rax), %rdx	#, q.1011
	movq	%rdx, -456(%rbp)	# q.1011, q
	movzbl	(%rax), %eax	# *q.1010_466, tmp1124
	movb	%al, -502(%rbp)	# tmp1124, plus
	.loc 1 8535 0
	jmp	.L2004	#
.L2009:
	.loc 1 8538 0
	movb	$1, -507(%rbp)	#, left
	.loc 1 8539 0
	movq	-456(%rbp), %rax	# q, q.1012
	addq	$1, %rax	#, q.1013
	movq	%rax, -456(%rbp)	# q.1013, q
	.loc 1 8540 0
	jmp	.L2004	#
.L2010:
	.loc 1 8543 0
	movq	-456(%rbp), %rax	# q, q.1014
	leaq	1(%rax), %rdx	#, q.1016
	movq	%rdx, -456(%rbp)	# q.1016, q
	movzbl	(%rax), %eax	# *q.1015_473, tmp1125
	movb	%al, -503(%rbp)	# tmp1125, fill
	.loc 1 8544 0
	jmp	.L2004	#
.L2008:
	.loc 1 8547 0
	movb	$1, -508(%rbp)	#, alt
	.loc 1 8548 0
	movq	-456(%rbp), %rax	# q, q.1017
	addq	$1, %rax	#, q.1018
	movq	%rax, -456(%rbp)	# q.1018, q
	.loc 1 8549 0
	jmp	.L2004	#
.L2327:
	.loc 1 8552 0
	nop
	.loc 1 8554 0
	jmp	.L2011	#
.L2004:
	.loc 1 8530 0 discriminator 1
	movq	-456(%rbp), %rax	# q, q.1019
	movzbl	(%rax), %eax	# *q.1019_460, D.23393
	testb	%al, %al	# D.23393
	jne	.L2012	#,
.L2011:
	.loc 1 8558 0
	movq	-456(%rbp), %rax	# q, q.1020
	movzbl	(%rax), %eax	# *q.1020_479, D.23393
	cmpb	$42, %al	#, D.23393
	jne	.L2013	#,
	.loc 1 8559 0
	movq	-456(%rbp), %rax	# q, q.1021
	addq	$1, %rax	#, q.1022
	movq	%rax, -456(%rbp)	# q.1022, q
	.loc 1 8560 0
	leaq	-456(%rbp), %rax	#, tmp1126
	movq	%rax, %rdi	# tmp1126,
	call	S_expect_number	#
	movl	%eax, -476(%rbp)	# tmp1127, ewix
	cmpl	$0, -476(%rbp)	#, ewix
	je	.L2014	#,
	.loc 1 8561 0
	movq	-456(%rbp), %rax	# q, q.1023
	leaq	1(%rax), %rdx	#, q.1025
	movq	%rdx, -456(%rbp)	# q.1025, q
	movzbl	(%rax), %eax	# *q.1024_485, D.23393
	cmpb	$36, %al	#, D.23393
	je	.L2014	#,
	.loc 1 8562 0
	jmp	.L2015	#
.L2014:
	.loc 1 8563 0
	movb	$1, -498(%rbp)	#, asterisk
.L2013:
	.loc 1 8565 0
	movq	-456(%rbp), %rax	# q, q.1026
	movzbl	(%rax), %eax	# *q.1026_489, D.23393
	cmpb	$118, %al	#, D.23393
	jne	.L2016	#,
	.loc 1 8566 0
	movq	-456(%rbp), %rax	# q, q.1027
	addq	$1, %rax	#, q.1028
	movq	%rax, -456(%rbp)	# q.1028, q
	.loc 1 8567 0
	cmpb	$0, -506(%rbp)	#, vectorize
	je	.L2017	#,
	.loc 1 8568 0
	jmp	.L2015	#
.L2017:
	.loc 1 8569 0
	movzbl	-498(%rbp), %eax	# asterisk, tmp1128
	movb	%al, -505(%rbp)	# tmp1128, vectorarg
	cmpb	$0, -505(%rbp)	#, vectorarg
	je	.L2018	#,
	.loc 1 8570 0
	movl	-476(%rbp), %eax	# ewix, tmp1129
	movl	%eax, -472(%rbp)	# tmp1129, evix
	.loc 1 8571 0
	movl	$0, -476(%rbp)	#, ewix
	.loc 1 8572 0
	movb	$0, -498(%rbp)	#, asterisk
.L2018:
	.loc 1 8574 0
	movb	$1, -506(%rbp)	#, vectorize
	.loc 1 8575 0
	jmp	.L2011	#
.L2016:
	.loc 1 8578 0
	cmpb	$0, -498(%rbp)	#, asterisk
	jne	.L2019	#,
	.loc 1 8579 0
	movq	-456(%rbp), %rax	# q, q.1029
	movzbl	(%rax), %eax	# *q.1029_498, D.23393
	cmpb	$48, %al	#, D.23393
	jne	.L2019	#,
	.loc 1 8580 0
	movq	-456(%rbp), %rax	# q, q.1030
	leaq	1(%rax), %rdx	#, q.1032
	movq	%rdx, -456(%rbp)	# q.1032, q
	movzbl	(%rax), %eax	# *q.1031_501, tmp1130
	movb	%al, -503(%rbp)	# tmp1130, fill
.L2019:
	.loc 1 8581 0
	leaq	-456(%rbp), %rax	#, tmp1131
	movq	%rax, %rdi	# tmp1131,
	call	S_expect_number	#
	cltq
	movq	%rax, -368(%rbp)	# tmp1132, width
	.loc 1 8588 0
	cmpb	$0, -506(%rbp)	#, vectorize
	je	.L2020	#,
	.loc 1 8589 0
	cmpb	$0, -505(%rbp)	#, vectorarg
	je	.L2021	#,
	.loc 1 8590 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2022	#,
	.loc 1 8591 0
	movq	-544(%rbp), %rax	# args, tmp1133
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2023	#,
	.loc 1 8591 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1134
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1135
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1033
	movq	-544(%rbp), %rdx	# args, tmp1136
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1137
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2024	#
.L2023:
	.loc 1 8591 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1138
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1033
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1139
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2024:
	movq	(%rax), %rax	# MEM[(struct SV * * {ref-all})addr.1033_207], tmp1140
	movq	%rax, -328(%rbp)	# tmp1140, vecsv
	jmp	.L2025	#
.L2022:
	.loc 1 8593 0 is_stmt 1
	cmpl	$0, -472(%rbp)	#, evix
	je	.L2026	#,
	.loc 1 8593 0 is_stmt 0 discriminator 1
	movl	-472(%rbp), %eax	# evix, tmp1141
	cmpl	-556(%rbp), %eax	# svmax, tmp1141
	setle	%al	#, iftmp.1035
	jmp	.L2027	#
.L2026:
	.loc 1 8593 0 discriminator 2
	movl	-492(%rbp), %eax	# svix, tmp1142
	cmpl	-556(%rbp), %eax	# svmax, tmp1142
	setl	%al	#, iftmp.1035
.L2027:
	.loc 1 8594 0 is_stmt 1
	testb	%al, %al	# iftmp.1035
	je	.L2028	#,
	.loc 1 8594 0 is_stmt 0 discriminator 1
	cmpl	$0, -472(%rbp)	#, evix
	je	.L2029	#,
	movl	-472(%rbp), %eax	# evix, tmp1143
	subl	$1, %eax	#, D.23391
	cltq
	salq	$3, %rax	#, iftmp.1036
	jmp	.L2030	#
.L2029:
	.loc 1 8594 0 discriminator 2
	movl	-492(%rbp), %eax	# svix, svix.1037
	leal	1(%rax), %edx	#, tmp1144
	movl	%edx, -492(%rbp)	# tmp1144, svix
	cltq
	salq	$3, %rax	#, iftmp.1036
.L2030:
	.loc 1 8594 0 discriminator 1
	movq	-552(%rbp), %rdx	# svargs, tmp1145
	addq	%rdx, %rax	# tmp1145, D.23399
	movq	(%rax), %rax	# *_526, iftmp.1034
	jmp	.L2031	#
.L2028:
	.loc 1 8594 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.1034
.L2031:
	.loc 1 8593 0 is_stmt 1
	movq	%rax, -328(%rbp)	# iftmp.1034, vecsv
.L2025:
	.loc 1 8595 0
	movq	-328(%rbp), %rax	# vecsv, tmp1146
	movq	%rax, PL_Sv(%rip)	# tmp1146, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1039
	movl	12(%rax), %eax	# PL_Sv.1039_530->sv_flags, D.23389
	andl	$262144, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2032	#,
	.loc 1 8595 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1040
	movq	(%rax), %rax	# PL_Sv.1040_533->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_534].xpv_cur, dotstrlen.1041
	movq	%rax, -424(%rbp)	# dotstrlen.1041, dotstrlen
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1042
	movq	(%rax), %rax	# PL_Sv.1042_536->sv_any, D.23392
	movq	(%rax), %rax	# MEM[(struct XPV *)_537].xpv_pv, iftmp.1038
	jmp	.L2033	#
.L2032:
	.loc 1 8595 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1043
	leaq	-424(%rbp), %rcx	#, tmp1147
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp1147,
	movq	%rax, %rdi	# PL_Sv.1043,
	call	Perl_sv_2pv_flags	#
.L2033:
	.loc 1 8595 0 discriminator 3
	movq	%rax, -288(%rbp)	# iftmp.1038, dotstr
	.loc 1 8596 0 is_stmt 1 discriminator 3
	movq	-328(%rbp), %rax	# vecsv, tmp1148
	movl	12(%rax), %eax	# vecsv_153->sv_flags, D.23389
	andl	$536870912, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2021	#,
	.loc 1 8596 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1044
	movzbl	37(%rax), %eax	# PL_curcop.1044_544->op_private, D.23390
	movzbl	%al, %eax	# D.23390, D.23391
	andl	$8, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L2021	#,
	.loc 1 8597 0 is_stmt 1
	movb	$1, -499(%rbp)	#, is_utf8
.L2021:
	.loc 1 8599 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2034	#,
	.loc 1 8600 0
	movq	-544(%rbp), %rax	# args, tmp1149
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2035	#,
	.loc 1 8600 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1150
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1151
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1045
	movq	-544(%rbp), %rdx	# args, tmp1152
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1153
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2036	#
.L2035:
	.loc 1 8600 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1154
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1045
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1155
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2036:
	movq	(%rax), %rax	# MEM[(struct SV * * {ref-all})addr.1045_212], tmp1156
	movq	%rax, -328(%rbp)	# tmp1156, vecsv
	.loc 1 8601 0 is_stmt 1 discriminator 1
	movq	-328(%rbp), %rax	# vecsv, tmp1157
	movq	%rax, PL_Sv(%rip)	# tmp1157, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1047
	movl	12(%rax), %eax	# PL_Sv.1047_560->sv_flags, D.23389
	andl	$262144, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2037	#,
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1048
	movq	(%rax), %rax	# PL_Sv.1048_563->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_564].xpv_cur, veclen.1049
	movq	%rax, -432(%rbp)	# veclen.1049, veclen
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1050
	movq	(%rax), %rax	# PL_Sv.1050_566->sv_any, D.23392
	movq	(%rax), %rax	# MEM[(struct XPV *)_567].xpv_pv, iftmp.1046
	jmp	.L2038	#
.L2037:
	.loc 1 8601 0 is_stmt 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1051
	leaq	-432(%rbp), %rcx	#, tmp1158
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp1158,
	movq	%rax, %rdi	# PL_Sv.1051,
	call	Perl_sv_2pv_flags	#
.L2038:
	.loc 1 8601 0 discriminator 3
	movq	%rax, -320(%rbp)	# iftmp.1046, vecstr
	.loc 1 8602 0 is_stmt 1 discriminator 3
	movq	-328(%rbp), %rax	# vecsv, tmp1159
	movl	12(%rax), %eax	# vecsv_559->sv_flags, D.23389
	andl	$536870912, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2039	#,
	.loc 1 8602 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1053
	movzbl	37(%rax), %eax	# PL_curcop.1053_574->op_private, D.23390
	movzbl	%al, %eax	# D.23390, D.23391
	andl	$8, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L2039	#,
	.loc 1 8602 0 discriminator 3
	movl	$1, %eax	#, iftmp.1052
	jmp	.L2040	#
.L2039:
	.loc 1 8602 0 discriminator 2
	movl	$0, %eax	#, iftmp.1052
.L2040:
	.loc 1 8602 0 discriminator 4
	movb	%al, -504(%rbp)	# iftmp.1052, vec_utf8
	jmp	.L2020	#
.L2034:
	.loc 1 8604 0 is_stmt 1
	cmpl	$0, -480(%rbp)	#, efix
	je	.L2041	#,
	.loc 1 8604 0 is_stmt 0 discriminator 1
	movl	-480(%rbp), %eax	# efix, tmp1160
	cmpl	-556(%rbp), %eax	# svmax, tmp1160
	setle	%al	#, iftmp.1054
	jmp	.L2042	#
.L2041:
	.loc 1 8604 0 discriminator 2
	movl	-492(%rbp), %eax	# svix, tmp1161
	cmpl	-556(%rbp), %eax	# svmax, tmp1161
	setl	%al	#, iftmp.1054
.L2042:
	.loc 1 8604 0 discriminator 3
	testb	%al, %al	# iftmp.1054
	je	.L2043	#,
	.loc 1 8605 0 is_stmt 1
	cmpl	$0, -480(%rbp)	#, efix
	je	.L2044	#,
	.loc 1 8605 0 is_stmt 0 discriminator 1
	movl	-480(%rbp), %eax	# efix, tmp1162
	subl	$1, %eax	#, D.23391
	cltq
	salq	$3, %rax	#, iftmp.1055
	jmp	.L2045	#
.L2044:
	.loc 1 8605 0 discriminator 2
	movl	-492(%rbp), %eax	# svix, svix.1056
	leal	1(%rax), %edx	#, tmp1163
	movl	%edx, -492(%rbp)	# tmp1163, svix
	cltq
	salq	$3, %rax	#, iftmp.1055
.L2045:
	.loc 1 8605 0 discriminator 3
	movq	-552(%rbp), %rdx	# svargs, tmp1164
	addq	%rdx, %rax	# tmp1164, D.23399
	movq	(%rax), %rax	# *_590, tmp1165
	movq	%rax, -328(%rbp)	# tmp1165, vecsv
	.loc 1 8606 0 is_stmt 1 discriminator 3
	movq	-328(%rbp), %rax	# vecsv, tmp1166
	movq	%rax, PL_Sv(%rip)	# tmp1166, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1058
	movl	12(%rax), %eax	# PL_Sv.1058_592->sv_flags, D.23389
	andl	$262144, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2046	#,
	.loc 1 8606 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1059
	movq	(%rax), %rax	# PL_Sv.1059_595->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_596].xpv_cur, veclen.1060
	movq	%rax, -432(%rbp)	# veclen.1060, veclen
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1061
	movq	(%rax), %rax	# PL_Sv.1061_598->sv_any, D.23392
	movq	(%rax), %rax	# MEM[(struct XPV *)_599].xpv_pv, iftmp.1057
	jmp	.L2047	#
.L2046:
	.loc 1 8606 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1062
	leaq	-432(%rbp), %rcx	#, tmp1167
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp1167,
	movq	%rax, %rdi	# PL_Sv.1062,
	call	Perl_sv_2pv_flags	#
.L2047:
	.loc 1 8606 0 discriminator 3
	movq	%rax, -320(%rbp)	# iftmp.1057, vecstr
	.loc 1 8607 0 is_stmt 1 discriminator 3
	movq	-328(%rbp), %rax	# vecsv, tmp1168
	movl	12(%rax), %eax	# vecsv_591->sv_flags, D.23389
	andl	$536870912, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2048	#,
	.loc 1 8607 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1064
	movzbl	37(%rax), %eax	# PL_curcop.1064_606->op_private, D.23390
	movzbl	%al, %eax	# D.23390, D.23391
	andl	$8, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L2048	#,
	.loc 1 8607 0 discriminator 3
	movl	$1, %eax	#, iftmp.1063
	jmp	.L2049	#
.L2048:
	.loc 1 8607 0 discriminator 2
	movl	$0, %eax	#, iftmp.1063
.L2049:
	.loc 1 8607 0 discriminator 4
	movb	%al, -504(%rbp)	# iftmp.1063, vec_utf8
	jmp	.L2020	#
.L2043:
	.loc 1 8610 0 is_stmt 1
	movq	$.LC1, -320(%rbp)	#, vecstr
	.loc 1 8611 0
	movq	$0, -432(%rbp)	#, veclen
.L2020:
	.loc 1 8615 0
	cmpb	$0, -498(%rbp)	#, asterisk
	je	.L2003	#,
	.loc 1 8616 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2050	#,
	.loc 1 8617 0
	movq	-544(%rbp), %rax	# args, tmp1169
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2051	#,
	.loc 1 8617 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1170
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1171
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1065
	movq	-544(%rbp), %rdx	# args, tmp1172
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1173
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2052	#
.L2051:
	.loc 1 8617 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1174
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1065
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1175
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2052:
	movl	(%rax), %eax	# MEM[(int * {ref-all})addr.1065_219], i.1066
	movl	%eax, -496(%rbp)	# i.1066, i
	jmp	.L2053	#
.L2050:
	.loc 1 8619 0 is_stmt 1
	cmpl	$0, -476(%rbp)	#, ewix
	je	.L2054	#,
	.loc 1 8619 0 is_stmt 0 discriminator 1
	movl	-476(%rbp), %eax	# ewix, tmp1176
	cmpl	-556(%rbp), %eax	# svmax, tmp1176
	setle	%al	#, iftmp.1068
	jmp	.L2055	#
.L2054:
	.loc 1 8619 0 discriminator 2
	movl	-492(%rbp), %eax	# svix, tmp1177
	cmpl	-556(%rbp), %eax	# svmax, tmp1177
	setl	%al	#, iftmp.1068
.L2055:
	.loc 1 8619 0 discriminator 3
	testb	%al, %al	# iftmp.1068
	je	.L2056	#,
	.loc 1 8620 0 is_stmt 1
	cmpl	$0, -476(%rbp)	#, ewix
	je	.L2057	#,
	.loc 1 8620 0 is_stmt 0 discriminator 1
	movl	-476(%rbp), %eax	# ewix, tmp1178
	subl	$1, %eax	#, D.23391
	cltq
	salq	$3, %rax	#, iftmp.1069
	jmp	.L2058	#
.L2057:
	.loc 1 8620 0 discriminator 2
	movl	-492(%rbp), %eax	# svix, svix.1070
	leal	1(%rax), %edx	#, tmp1179
	movl	%edx, -492(%rbp)	# tmp1179, svix
	cltq
	salq	$3, %rax	#, iftmp.1069
.L2058:
	.loc 1 8620 0 discriminator 3
	movq	-552(%rbp), %rdx	# svargs, tmp1180
	addq	%rdx, %rax	# tmp1180, D.23399
	movq	(%rax), %rax	# *_634, PL_Sv.1071
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1071, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1073
	movl	12(%rax), %eax	# PL_Sv.1073_636->sv_flags, D.23389
	andl	$65536, %eax	#, D.23389
	.loc 1 8619 0 is_stmt 1 discriminator 3
	testl	%eax, %eax	# D.23389
	je	.L2059	#,
	.loc 1 8620 0
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1074
	movq	(%rax), %rax	# PL_Sv.1074_639->sv_any, D.23392
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_640].xiv_iv, D.23397
	jmp	.L2061	#
.L2059:
	.loc 1 8620 0 is_stmt 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1075
	movq	%rax, %rdi	# PL_Sv.1075,
	call	Perl_sv_2iv	#
	jmp	.L2061	#
.L2056:
	.loc 1 8619 0 is_stmt 1 discriminator 1
	movl	$0, %eax	#, iftmp.1067
.L2061:
	.loc 1 8619 0 is_stmt 0 discriminator 3
	movl	%eax, -496(%rbp)	# iftmp.1067, i
.L2053:
	.loc 1 8621 0 is_stmt 1
	movl	-496(%rbp), %eax	# i, i.1076
	shrl	$31, %eax	#, tmp1181
	orb	%al, -507(%rbp)	# D.23393, left
	.loc 1 8622 0
	movl	-496(%rbp), %eax	# i, i.1077
	cltd
	xorl	%edx, %eax	# tmp1182, D.23391
	subl	%edx, %eax	# tmp1182, D.23391
	cltq
	movq	%rax, -368(%rbp)	# tmp1183, width
.L2003:
	.loc 1 8628 0
	movq	-456(%rbp), %rax	# q, q.1078
	movzbl	(%rax), %eax	# *q.1078_655, D.23393
	cmpb	$46, %al	#, D.23393
	jne	.L2062	#,
	.loc 1 8629 0
	movq	-456(%rbp), %rax	# q, q.1079
	addq	$1, %rax	#, q.1080
	movq	%rax, -456(%rbp)	# q.1080, q
	.loc 1 8630 0
	movq	-456(%rbp), %rax	# q, q.1081
	movzbl	(%rax), %eax	# *q.1081_659, D.23393
	cmpb	$42, %al	#, D.23393
	jne	.L2063	#,
	.loc 1 8631 0
	movq	-456(%rbp), %rax	# q, q.1082
	addq	$1, %rax	#, q.1083
	movq	%rax, -456(%rbp)	# q.1083, q
	.loc 1 8632 0
	leaq	-456(%rbp), %rax	#, tmp1184
	movq	%rax, %rdi	# tmp1184,
	call	S_expect_number	#
	movl	%eax, -464(%rbp)	# tmp1185, epix
	cmpl	$0, -464(%rbp)	#, epix
	je	.L2064	#,
	.loc 1 8632 0 is_stmt 0 discriminator 1
	movq	-456(%rbp), %rax	# q, q.1084
	leaq	1(%rax), %rdx	#, q.1086
	movq	%rdx, -456(%rbp)	# q.1086, q
	movzbl	(%rax), %eax	# *q.1085_665, D.23393
	cmpb	$36, %al	#, D.23393
	je	.L2064	#,
	.loc 1 8633 0 is_stmt 1
	jmp	.L2015	#
.L2064:
	.loc 1 8635 0
	cmpl	$0, -464(%rbp)	#, epix
	je	.L2065	#,
	.loc 1 8636 0
	jmp	.L2015	#
.L2065:
	.loc 1 8637 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2066	#,
	.loc 1 8638 0
	movq	-544(%rbp), %rax	# args, tmp1186
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2067	#,
	.loc 1 8638 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1187
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1188
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1087
	movq	-544(%rbp), %rdx	# args, tmp1189
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1190
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2068	#
.L2067:
	.loc 1 8638 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1191
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1087
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1192
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2068:
	movl	(%rax), %eax	# MEM[(int * {ref-all})addr.1087_224], i.1088
	movl	%eax, -496(%rbp)	# i.1088, i
	jmp	.L2069	#
.L2066:
	.loc 1 8641 0 is_stmt 1
	cmpl	$0, -476(%rbp)	#, ewix
	je	.L2070	#,
	.loc 1 8641 0 is_stmt 0 discriminator 1
	movl	-476(%rbp), %eax	# ewix, tmp1193
	cmpl	-556(%rbp), %eax	# svmax, tmp1193
	setle	%al	#, iftmp.1090
	jmp	.L2071	#
.L2070:
	.loc 1 8641 0 discriminator 2
	movl	-492(%rbp), %eax	# svix, tmp1194
	cmpl	-556(%rbp), %eax	# svmax, tmp1194
	setl	%al	#, iftmp.1090
.L2071:
	.loc 1 8640 0 is_stmt 1
	testb	%al, %al	# iftmp.1090
	je	.L2072	#,
	.loc 1 8641 0
	cmpl	$0, -476(%rbp)	#, ewix
	je	.L2073	#,
	.loc 1 8641 0 is_stmt 0 discriminator 1
	movl	-476(%rbp), %eax	# ewix, tmp1195
	subl	$1, %eax	#, D.23391
	cltq
	salq	$3, %rax	#, iftmp.1091
	jmp	.L2074	#
.L2073:
	.loc 1 8641 0 discriminator 2
	movl	-492(%rbp), %eax	# svix, svix.1092
	leal	1(%rax), %edx	#, tmp1196
	movl	%edx, -492(%rbp)	# tmp1196, svix
	cltq
	salq	$3, %rax	#, iftmp.1091
.L2074:
	.loc 1 8641 0 discriminator 3
	movq	-552(%rbp), %rdx	# svargs, tmp1197
	addq	%rdx, %rax	# tmp1197, D.23399
	movq	(%rax), %rax	# *_688, PL_Sv.1093
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1093, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1095
	movl	12(%rax), %eax	# PL_Sv.1095_690->sv_flags, D.23389
	andl	$65536, %eax	#, D.23389
	.loc 1 8640 0 is_stmt 1 discriminator 3
	testl	%eax, %eax	# D.23389
	je	.L2075	#,
	.loc 1 8641 0
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1096
	movq	(%rax), %rax	# PL_Sv.1096_693->sv_any, D.23392
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_694].xiv_iv, D.23397
	jmp	.L2077	#
.L2075:
	.loc 1 8641 0 is_stmt 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1097
	movq	%rax, %rdi	# PL_Sv.1097,
	call	Perl_sv_2iv	#
	jmp	.L2077	#
.L2072:
	.loc 1 8640 0 is_stmt 1 discriminator 1
	movl	$0, %eax	#, iftmp.1089
.L2077:
	.loc 1 8640 0 is_stmt 0 discriminator 3
	movl	%eax, -496(%rbp)	# iftmp.1089, i
.L2069:
	.loc 1 8642 0 is_stmt 1 discriminator 3
	movl	-496(%rbp), %eax	# i, i.1098
	movl	$0, %edx	#, tmp1198
	testl	%eax, %eax	# i.1098
	cmovs	%edx, %eax	# i.1098,, tmp1198, D.23391
	cltq
	movq	%rax, -352(%rbp)	# tmp1199, precis
	jmp	.L2078	#
.L2063:
	.loc 1 8645 0
	movq	$0, -352(%rbp)	#, precis
	.loc 1 8646 0
	jmp	.L2079	#
.L2080:
	.loc 1 8647 0
	movq	-352(%rbp), %rdx	# precis, tmp1200
	movq	%rdx, %rax	# tmp1200, tmp1201
	salq	$2, %rax	#, tmp1201
	addq	%rdx, %rax	# tmp1200, tmp1201
	addq	%rax, %rax	# tmp1202
	movq	%rax, %rcx	# tmp1201, D.23398
	movq	-456(%rbp), %rax	# q, q.1099
	leaq	1(%rax), %rdx	#, q.1101
	movq	%rdx, -456(%rbp)	# q.1101, q
	movzbl	(%rax), %eax	# *q.1100_712, D.23393
	movsbl	%al, %eax	# D.23393, D.23391
	subl	$48, %eax	#, D.23391
	cltq
	addq	%rcx, %rax	# D.23398, tmp1203
	movq	%rax, -352(%rbp)	# tmp1203, precis
.L2079:
	.loc 1 8646 0 discriminator 1
	movq	-456(%rbp), %rax	# q, q.1102
	movzbl	(%rax), %eax	# *q.1102_706, D.23393
	cmpb	$47, %al	#, D.23393
	jle	.L2078	#,
	.loc 1 8646 0 is_stmt 0 discriminator 2
	movq	-456(%rbp), %rax	# q, q.1103
	movzbl	(%rax), %eax	# *q.1103_708, D.23393
	cmpb	$57, %al	#, D.23393
	jle	.L2080	#,
.L2078:
	.loc 1 8649 0 is_stmt 1
	movb	$1, -500(%rbp)	#, has_precis
.L2062:
	.loc 1 8654 0
	movq	-456(%rbp), %rax	# q, q.1104
	movzbl	(%rax), %eax	# *q.1104_720, D.23393
	movsbl	%al, %eax	# D.23393, D.23391
	subl	$76, %eax	#, tmp1204
	cmpl	$37, %eax	#, tmp1204
	ja	.L2081	#,
	movl	%eax, %eax	# tmp1204, tmp1205
	movq	.L2083(,%rax,8), %rax	#, tmp1206
	jmp	*%rax	# tmp1206
	.section	.rodata
	.align 8
	.align 4
.L2083:
	.quad	.L2082
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2084
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2084
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2085
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2081
	.quad	.L2082
	.text
.L2082:
	.loc 1 8680 0
	movb	$113, -501(%rbp)	#, intsize
	.loc 1 8681 0
	movq	-456(%rbp), %rax	# q, q.1105
	addq	$1, %rax	#, q.1106
	movq	%rax, -456(%rbp)	# q.1106, q
	.loc 1 8682 0
	jmp	.L2081	#
.L2085:
	.loc 1 8686 0
	movq	-456(%rbp), %rax	# q, q.1107
	addq	$1, %rax	#, D.23401
	movzbl	(%rax), %eax	# *_727, D.23393
	cmpb	$108, %al	#, D.23393
	jne	.L2084	#,
	.loc 1 8687 0
	movb	$113, -501(%rbp)	#, intsize
	.loc 1 8688 0
	movq	-456(%rbp), %rax	# q, q.1108
	addq	$2, %rax	#, q.1109
	movq	%rax, -456(%rbp)	# q.1109, q
	.loc 1 8689 0
	jmp	.L2081	#
.L2084:
	.loc 1 8696 0
	movq	-456(%rbp), %rax	# q, q.1110
	leaq	1(%rax), %rdx	#, q.1112
	movq	%rdx, -456(%rbp)	# q.1112, q
	movzbl	(%rax), %eax	# *q.1111_733, tmp1207
	movb	%al, -501(%rbp)	# tmp1207, intsize
	.loc 1 8697 0
	nop
.L2081:
	.loc 1 8702 0
	movq	-456(%rbp), %rax	# q, q.1113
	movzbl	(%rax), %eax	# *q.1113_736, D.23393
	cmpb	$37, %al	#, D.23393
	jne	.L2086	#,
	.loc 1 8703 0
	movq	-456(%rbp), %rax	# q, q.1114
	leaq	1(%rax), %rdx	#, q.1116
	movq	%rdx, -456(%rbp)	# q.1116, q
	movq	%rax, -336(%rbp)	# q.1115, eptr
	.loc 1 8704 0
	movq	$1, -440(%rbp)	#, elen
	.loc 1 8705 0
	jmp	.L2087	#
.L2086:
	.loc 1 8708 0
	cmpb	$0, -506(%rbp)	#, vectorize
	je	.L2088	#,
	.loc 1 8709 0
	movq	-328(%rbp), %rax	# vecsv, tmp1208
	movq	%rax, -400(%rbp)	# tmp1208, argsv
	jmp	.L2089	#
.L2088:
	.loc 1 8710 0
	cmpq	$0, -544(%rbp)	#, args
	jne	.L2089	#,
	.loc 1 8711 0
	cmpl	$0, -480(%rbp)	#, efix
	je	.L2090	#,
	.loc 1 8711 0 is_stmt 0 discriminator 1
	movl	-480(%rbp), %eax	# efix, tmp1209
	cmpl	-556(%rbp), %eax	# svmax, tmp1209
	setle	%al	#, iftmp.1118
	jmp	.L2091	#
.L2090:
	.loc 1 8711 0 discriminator 2
	movl	-492(%rbp), %eax	# svix, tmp1210
	cmpl	-556(%rbp), %eax	# svmax, tmp1210
	setl	%al	#, iftmp.1118
.L2091:
	.loc 1 8712 0 is_stmt 1
	testb	%al, %al	# iftmp.1118
	je	.L2092	#,
	.loc 1 8712 0 is_stmt 0 discriminator 1
	cmpl	$0, -480(%rbp)	#, efix
	je	.L2093	#,
	movl	-480(%rbp), %eax	# efix, tmp1211
	subl	$1, %eax	#, D.23391
	cltq
	salq	$3, %rax	#, iftmp.1119
	jmp	.L2094	#
.L2093:
	.loc 1 8712 0 discriminator 2
	movl	-492(%rbp), %eax	# svix, svix.1120
	leal	1(%rax), %edx	#, tmp1212
	movl	%edx, -492(%rbp)	# tmp1212, svix
	cltq
	salq	$3, %rax	#, iftmp.1119
.L2094:
	.loc 1 8712 0 discriminator 5
	movq	-552(%rbp), %rdx	# svargs, tmp1213
	addq	%rdx, %rax	# tmp1213, D.23399
	movq	(%rax), %rax	# *_752, iftmp.1117
	jmp	.L2095	#
.L2092:
	.loc 1 8712 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.1117
.L2095:
	.loc 1 8711 0 is_stmt 1
	movq	%rax, -400(%rbp)	# iftmp.1117, argsv
.L2089:
	.loc 1 8714 0
	movq	-456(%rbp), %rax	# q, q.1121
	leaq	1(%rax), %rdx	#, q.1123
	movq	%rdx, -456(%rbp)	# q.1123, q
	movzbl	(%rax), %eax	# *q.1122_757, c.1124
	movb	%al, -510(%rbp)	# c.1124, c
	movzbl	-510(%rbp), %eax	# c, c.1125
	movsbl	%al, %eax	# c.1125, D.23391
	subl	$68, %eax	#, tmp1214
	cmpl	$52, %eax	#, tmp1214
	ja	.L2015	#,
	movl	%eax, %eax	# tmp1214, tmp1215
	movq	.L2097(,%rax,8), %rax	#, tmp1216
	jmp	*%rax	# tmp1216
	.section	.rodata
	.align 8
	.align 4
.L2097:
	.quad	.L2096
	.quad	.L2098
	.quad	.L2099
	.quad	.L2098
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2100
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2101
	.quad	.L2015
	.quad	.L2015
	.quad	.L2102
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2103
	.quad	.L2015
	.quad	.L2015
	.quad	.L2104
	.quad	.L2105
	.quad	.L2106
	.quad	.L2098
	.quad	.L2098
	.quad	.L2098
	.quad	.L2015
	.quad	.L2106
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2015
	.quad	.L2107
	.quad	.L2108
	.quad	.L2109
	.quad	.L2015
	.quad	.L2015
	.quad	.L2110
	.quad	.L2015
	.quad	.L2111
	.quad	.L2015
	.quad	.L2015
	.quad	.L2102
	.text
.L2105:
	.loc 1 8719 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2112	#,
	.loc 1 8719 0 is_stmt 0 discriminator 1
	cmpb	$0, -506(%rbp)	#, vectorize
	jne	.L2112	#,
	movq	-544(%rbp), %rax	# args, tmp1217
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2113	#,
	.loc 1 8719 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1218
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1219
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1127
	movq	-544(%rbp), %rdx	# args, tmp1220
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1221
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2114	#
.L2113:
	.loc 1 8719 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1222
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1127
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1223
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2114:
	.loc 1 8719 0 discriminator 3
	movl	(%rax), %eax	# MEM[(int * {ref-all})addr.1127_233], D.23391
	cltq
	jmp	.L2115	#
.L2112:
	.loc 1 8719 0 discriminator 2
	movq	-400(%rbp), %rax	# argsv, tmp1224
	movq	%rax, PL_Sv(%rip)	# tmp1224, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1129
	movl	12(%rax), %eax	# PL_Sv.1129_774->sv_flags, D.23389
	andl	$65536, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2116	#,
	.loc 1 8719 0 discriminator 5
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1130
	movq	(%rax), %rax	# PL_Sv.1130_777->sv_any, D.23392
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_778].xiv_iv, D.23397
	jmp	.L2115	#
.L2116:
	.loc 1 8719 0 discriminator 6
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1131
	movq	%rax, %rdi	# PL_Sv.1131,
	call	Perl_sv_2iv	#
.L2115:
	.loc 1 8719 0 discriminator 4
	movq	%rax, -304(%rbp)	# iftmp.1126, uv
	.loc 1 8720 0 is_stmt 1 discriminator 4
	cmpq	$255, -304(%rbp)	#, uv
	ja	.L2118	#,
	.loc 1 8720 0 is_stmt 0 discriminator 1
	cmpq	$127, -304(%rbp)	#, uv
	jbe	.L2119	#,
	.loc 1 8721 0 is_stmt 1
	movq	-520(%rbp), %rax	# sv, tmp1225
	movl	12(%rax), %eax	# sv_269(D)->sv_flags, D.23389
	andl	$536870912, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2119	#,
.L2118:
	.loc 1 8722 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1132
	movzbl	37(%rax), %eax	# PL_curcop.1132_788->op_private, D.23390
	movzbl	%al, %eax	# D.23390, D.23391
	andl	$8, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L2119	#,
	.loc 1 8723 0
	leaq	-176(%rbp), %rax	#, tmp1226
	movq	%rax, -336(%rbp)	# tmp1226, eptr
	.loc 1 8724 0
	movq	-304(%rbp), %rdx	# uv, tmp1227
	movq	-336(%rbp), %rax	# eptr, tmp1228
	movq	%rdx, %rsi	# tmp1227,
	movq	%rax, %rdi	# tmp1228,
	call	Perl_uvuni_to_utf8	#
	movq	%rax, %rdx	# D.23402, D.23397
	leaq	-176(%rbp), %rax	#, utf8buf.1133
	subq	%rax, %rdx	# utf8buf.1133, D.23397
	movq	%rdx, %rax	# D.23397, D.23397
	movq	%rax, -440(%rbp)	# elen.1134, elen
	.loc 1 8725 0
	movb	$1, -499(%rbp)	#, is_utf8
	.loc 1 8732 0
	jmp	.L2087	#
.L2119:
	.loc 1 8728 0
	movq	-304(%rbp), %rax	# uv, tmp1229
	movb	%al, -510(%rbp)	# c.1135, c
	.loc 1 8729 0
	leaq	-510(%rbp), %rax	#, tmp1230
	movq	%rax, -336(%rbp)	# tmp1230, eptr
	.loc 1 8730 0
	movq	$1, -440(%rbp)	#, elen
	.loc 1 8732 0
	jmp	.L2087	#
.L2110:
	.loc 1 8735 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2121	#,
	.loc 1 8735 0 is_stmt 0 discriminator 1
	cmpb	$0, -506(%rbp)	#, vectorize
	jne	.L2121	#,
	.loc 1 8736 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1231
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2122	#,
	.loc 1 8736 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1232
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1233
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1136
	movq	-544(%rbp), %rdx	# args, tmp1234
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1235
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2123	#
.L2122:
	.loc 1 8736 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1236
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1136
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1237
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2123:
	movq	(%rax), %rax	# MEM[(char * * {ref-all})addr.1136_235], tmp1238
	movq	%rax, -336(%rbp)	# tmp1238, eptr
	.loc 1 8737 0 is_stmt 1 discriminator 1
	cmpq	$0, -336(%rbp)	#, eptr
	je	.L2124	#,
	.loc 1 8744 0
	movq	-336(%rbp), %rax	# eptr, tmp1239
	movq	%rax, %rdi	# tmp1239,
	call	strlen	#
	movq	%rax, -440(%rbp)	# elen.1137, elen
	.loc 1 8737 0
	jmp	.L2126	#
.L2124:
	.loc 1 8746 0
	movq	$nullstr.11958, -336(%rbp)	#, eptr
	.loc 1 8747 0
	movq	$6, -440(%rbp)	#, elen
	.loc 1 8737 0
	jmp	.L2126	#
.L2121:
	.loc 1 8751 0
	movq	-400(%rbp), %rax	# argsv, tmp1240
	movq	%rax, PL_Sv(%rip)	# tmp1240, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1139
	movl	12(%rax), %eax	# PL_Sv.1139_814->sv_flags, D.23389
	andl	$262144, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2127	#,
	.loc 1 8751 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1140
	movq	(%rax), %rax	# PL_Sv.1140_817->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_818].xpv_cur, elen.1141
	movq	%rax, -440(%rbp)	# elen.1141, elen
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1142
	movq	(%rax), %rax	# PL_Sv.1142_820->sv_any, D.23392
	movq	(%rax), %rax	# MEM[(struct XPV *)_821].xpv_pv, iftmp.1138
	jmp	.L2128	#
.L2127:
	.loc 1 8751 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1143
	leaq	-440(%rbp), %rcx	#, tmp1241
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp1241,
	movq	%rax, %rdi	# PL_Sv.1143,
	call	Perl_sv_2pv_flags	#
.L2128:
	.loc 1 8751 0 discriminator 3
	movq	%rax, -336(%rbp)	# iftmp.1138, eptr
	.loc 1 8752 0 is_stmt 1 discriminator 3
	movq	-400(%rbp), %rax	# argsv, tmp1242
	movl	12(%rax), %eax	# argsv_38->sv_flags, D.23389
	andl	$536870912, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2126	#,
	.loc 1 8752 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1144
	movzbl	37(%rax), %eax	# PL_curcop.1144_828->op_private, D.23390
	movzbl	%al, %eax	# D.23390, D.23391
	andl	$8, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L2126	#,
	.loc 1 8753 0 is_stmt 1
	cmpb	$0, -500(%rbp)	#, has_precis
	je	.L2129	#,
	.loc 1 8753 0 is_stmt 0 discriminator 1
	movq	-440(%rbp), %rax	# elen, elen.1145
	cmpq	%rax, -352(%rbp)	# elen.1145, precis
	jae	.L2129	#,
.LBB128:
	.loc 1 8754 0 is_stmt 1
	movq	-352(%rbp), %rax	# precis, tmp1243
	movl	%eax, -416(%rbp)	# p.1146, p
	.loc 1 8755 0
	leaq	-416(%rbp), %rcx	#, tmp1244
	movq	-400(%rbp), %rax	# argsv, tmp1245
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp1244,
	movq	%rax, %rdi	# tmp1245,
	call	Perl_sv_pos_u2b	#
	.loc 1 8756 0
	movl	-416(%rbp), %eax	# p, p.1147
	cltq
	movq	%rax, -352(%rbp)	# tmp1246, precis
.L2129:
.LBE128:
	.loc 1 8758 0
	cmpq	$0, -368(%rbp)	#, width
	je	.L2130	#,
	.loc 1 8759 0
	movq	-440(%rbp), %rbx	# elen, elen.1148
	movq	-400(%rbp), %rax	# argsv, tmp1247
	movq	%rax, %rdi	# tmp1247,
	call	Perl_sv_len_utf8	#
	subq	%rax, %rbx	# D.23398, D.23398
	movq	%rbx, %rax	# D.23398, D.23398
	addq	%rax, -368(%rbp)	# D.23398, width
.L2130:
	.loc 1 8761 0
	movb	$1, -499(%rbp)	#, is_utf8
	.loc 1 8764 0
	jmp	.L2087	#
.L2126:
	jmp	.L2087	#
.L2103:
	.loc 1 8775 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2015	#,
	.loc 1 8775 0 is_stmt 0 discriminator 1
	cmpb	$0, -506(%rbp)	#, vectorize
	jne	.L2015	#,
	.loc 1 8777 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1248
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2131	#,
	.loc 1 8777 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1249
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1250
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1149
	movq	-544(%rbp), %rdx	# args, tmp1251
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1252
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2132	#
.L2131:
	.loc 1 8777 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1253
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1149
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1254
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2132:
	movq	(%rax), %rax	# MEM[(struct SV * * {ref-all})addr.1149_237], tmp1255
	movq	%rax, -400(%rbp)	# tmp1255, argsv
	.loc 1 8778 0 is_stmt 1 discriminator 1
	movq	-400(%rbp), %rax	# argsv, tmp1256
	movq	%rax, PL_Sv(%rip)	# tmp1256, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1151
	movl	12(%rax), %eax	# PL_Sv.1151_852->sv_flags, D.23389
	andl	$262144, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2133	#,
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1152
	movq	(%rax), %rax	# PL_Sv.1152_855->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_856].xpv_cur, elen.1153
	movq	%rax, -440(%rbp)	# elen.1153, elen
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1154
	movq	(%rax), %rax	# PL_Sv.1154_858->sv_any, D.23392
	movq	(%rax), %rax	# MEM[(struct XPV *)_859].xpv_pv, iftmp.1150
	jmp	.L2134	#
.L2133:
	.loc 1 8778 0 is_stmt 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1155
	leaq	-440(%rbp), %rcx	#, tmp1257
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp1257,
	movq	%rax, %rdi	# PL_Sv.1155,
	call	Perl_sv_2pv_flags	#
.L2134:
	.loc 1 8778 0 discriminator 3
	movq	%rax, -336(%rbp)	# iftmp.1150, eptr
	.loc 1 8779 0 is_stmt 1 discriminator 3
	movq	-400(%rbp), %rax	# argsv, tmp1258
	movl	12(%rax), %eax	# argsv_851->sv_flags, D.23389
	andl	$536870912, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2087	#,
	.loc 1 8779 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1156
	movzbl	37(%rax), %eax	# PL_curcop.1156_866->op_private, D.23390
	movzbl	%al, %eax	# D.23390, D.23391
	andl	$8, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L2087	#,
	.loc 1 8780 0 is_stmt 1
	movb	$1, -499(%rbp)	#, is_utf8
.L2087:
	.loc 1 8783 0
	movb	$0, -506(%rbp)	#, vectorize
	.loc 1 8784 0
	cmpb	$0, -500(%rbp)	#, has_precis
	je	.L2135	#,
	.loc 1 8784 0 is_stmt 0 discriminator 1
	movq	-440(%rbp), %rax	# elen, elen.1157
	cmpq	-352(%rbp), %rax	# precis, elen.1157
	jbe	.L2135	#,
	.loc 1 8785 0 is_stmt 1
	movq	-352(%rbp), %rax	# precis, tmp1259
	movq	%rax, -440(%rbp)	# tmp1259, elen
	.loc 1 8786 0
	jmp	.L2136	#
.L2135:
	jmp	.L2136	#
.L2109:
	.loc 1 8806 0
	cmpb	$0, -508(%rbp)	#, alt
	jne	.L2015	#,
	.loc 1 8806 0 is_stmt 0 discriminator 1
	cmpb	$0, -506(%rbp)	#, vectorize
	jne	.L2015	#,
	.loc 1 8808 0 is_stmt 1
	cmpq	$0, -544(%rbp)	#, args
	je	.L2137	#,
	.loc 1 8808 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1260
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2138	#,
	.loc 1 8808 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1261
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1262
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1159
	movq	-544(%rbp), %rdx	# args, tmp1263
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1264
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2139	#
.L2138:
	.loc 1 8808 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1265
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1159
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1266
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2139:
	.loc 1 8808 0 discriminator 3
	movq	(%rax), %rax	# MEM[(void * * {ref-all})addr.1159_240], D.23392
	jmp	.L2140	#
.L2137:
	.loc 1 8808 0 discriminator 2
	movq	-400(%rbp), %rax	# argsv, iftmp.1158
.L2140:
	.loc 1 8808 0 discriminator 4
	movq	%rax, -304(%rbp)	# iftmp.1158, uv
	.loc 1 8809 0 is_stmt 1 discriminator 4
	movl	$16, -484(%rbp)	#, base
	.loc 1 8810 0 discriminator 4
	jmp	.L2141	#
.L2096:
	.loc 1 8814 0
	movb	$113, -501(%rbp)	#, intsize
.L2106:
	.loc 1 8824 0
	cmpb	$0, -506(%rbp)	#, vectorize
	je	.L2142	#,
.LBB129:
	.loc 1 8826 0
	movq	-432(%rbp), %rax	# veclen, veclen.1160
	testq	%rax, %rax	# veclen.1160
	je	.L2320	#,
	.loc 1 8828 0
	cmpb	$0, -504(%rbp)	#, vec_utf8
	je	.L2145	#,
	.loc 1 8829 0
	movq	-432(%rbp), %rsi	# veclen, veclen.1161
	leaq	-416(%rbp), %rdx	#, tmp1267
	movq	-320(%rbp), %rax	# vecstr, tmp1268
	movl	$105, %ecx	#,
	movq	%rax, %rdi	# tmp1268,
	call	Perl_utf8n_to_uvuni	#
	movq	%rax, -304(%rbp)	# tmp1269, uv
	jmp	.L2146	#
.L2145:
	.loc 1 8832 0
	movq	-320(%rbp), %rax	# vecstr, tmp1270
	movzbl	(%rax), %eax	# *vecstr_158, D.23390
	movzbl	%al, %eax	# D.23390, tmp1271
	movq	%rax, -304(%rbp)	# tmp1271, uv
	.loc 1 8833 0
	movq	$1, -416(%rbp)	#, ulen
.L2146:
	.loc 1 8835 0
	movq	-416(%rbp), %rax	# ulen, ulen.1162
	addq	%rax, -320(%rbp)	# ulen.1162, vecstr
	.loc 1 8836 0
	movq	-432(%rbp), %rdx	# veclen, veclen.1163
	movq	-416(%rbp), %rax	# ulen, ulen.1164
	subq	%rax, %rdx	# ulen.1164, veclen.1165
	movq	%rdx, %rax	# veclen.1165, veclen.1165
	movq	%rax, -432(%rbp)	# veclen.1165, veclen
	.loc 1 8837 0
	cmpb	$0, -502(%rbp)	#, plus
	je	.L2147	#,
	.loc 1 8838 0
	movq	-344(%rbp), %rax	# esignlen, esignlen.1166
	leaq	1(%rax), %rdx	#, tmp1272
	movq	%rdx, -344(%rbp)	# tmp1272, esignlen
	movzbl	-502(%rbp), %edx	# plus, tmp1273
	movb	%dl, -192(%rbp,%rax)	# tmp1273, esignbuf
.LBE129:
	jmp	.L2148	#
.L2147:
	jmp	.L2148	#
.L2142:
	.loc 1 8840 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2149	#,
	.loc 1 8841 0
	movsbl	-501(%rbp), %eax	# intsize, D.23391
	cmpl	$104, %eax	#, D.23391
	je	.L2151	#,
	cmpl	$104, %eax	#, D.23391
	jg	.L2152	#,
	cmpl	$86, %eax	#, D.23391
	je	.L2153	#,
	jmp	.L2150	#
.L2152:
	cmpl	$108, %eax	#, D.23391
	je	.L2154	#,
	cmpl	$113, %eax	#, D.23391
	je	.L2155	#,
	jmp	.L2150	#
.L2151:
	.loc 1 8842 0
	movq	-544(%rbp), %rax	# args, tmp1274
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2156	#,
	.loc 1 8842 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1275
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1276
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1167
	movq	-544(%rbp), %rdx	# args, tmp1277
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1278
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2157	#
.L2156:
	.loc 1 8842 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1279
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1167
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1280
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2157:
	movl	(%rax), %eax	# MEM[(int * {ref-all})addr.1167_241], D.23391
	movswq	%ax, %rax	# D.23403, tmp1281
	movq	%rax, -312(%rbp)	# tmp1281, iv
	jmp	.L2158	#
.L2154:
	.loc 1 8843 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1282
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2159	#,
	.loc 1 8843 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1283
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1284
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1168
	movq	-544(%rbp), %rdx	# args, tmp1285
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1286
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2160	#
.L2159:
	.loc 1 8843 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1287
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1168
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1288
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2160:
	movq	(%rax), %rax	# MEM[(long int * {ref-all})addr.1168_242], tmp1289
	movq	%rax, -312(%rbp)	# tmp1289, iv
	jmp	.L2158	#
.L2153:
	.loc 1 8844 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1290
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2161	#,
	.loc 1 8844 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1291
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1292
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1169
	movq	-544(%rbp), %rdx	# args, tmp1293
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1294
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2162	#
.L2161:
	.loc 1 8844 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1295
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1169
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1296
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2162:
	movq	(%rax), %rax	# MEM[(IV * {ref-all})addr.1169_243], tmp1297
	movq	%rax, -312(%rbp)	# tmp1297, iv
	jmp	.L2158	#
.L2150:
	.loc 1 8845 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1298
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2163	#,
	.loc 1 8845 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1299
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1300
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1170
	movq	-544(%rbp), %rdx	# args, tmp1301
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1302
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2164	#
.L2163:
	.loc 1 8845 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1303
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1170
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1304
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2164:
	movl	(%rax), %eax	# MEM[(int * {ref-all})addr.1170_244], D.23391
	cltq
	movq	%rax, -312(%rbp)	# tmp1305, iv
	jmp	.L2158	#
.L2155:
	.loc 1 8847 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1306
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2165	#,
	.loc 1 8847 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1307
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1308
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1171
	movq	-544(%rbp), %rdx	# args, tmp1309
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1310
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2166	#
.L2165:
	.loc 1 8847 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1311
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1171
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1312
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2166:
	movq	(%rax), %rax	# MEM[(long int * {ref-all})addr.1171_245], tmp1313
	movq	%rax, -312(%rbp)	# tmp1313, iv
	nop
.L2158:
	jmp	.L2148	#
.L2149:
.LBB130:
	.loc 1 8852 0 is_stmt 1
	movq	-400(%rbp), %rax	# argsv, tmp1314
	movq	%rax, PL_Sv(%rip)	# tmp1314, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1173
	movl	12(%rax), %eax	# PL_Sv.1173_958->sv_flags, D.23389
	andl	$65536, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2167	#,
	.loc 1 8852 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1174
	movq	(%rax), %rax	# PL_Sv.1174_961->sv_any, D.23392
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_962].xiv_iv, iftmp.1172
	jmp	.L2168	#
.L2167:
	.loc 1 8852 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1175
	movq	%rax, %rdi	# PL_Sv.1175,
	call	Perl_sv_2iv	#
.L2168:
	.loc 1 8852 0 discriminator 3
	movq	%rax, -256(%rbp)	# iftmp.1172, tiv
	.loc 1 8853 0 is_stmt 1 discriminator 3
	movsbl	-501(%rbp), %eax	# intsize, D.23391
	cmpl	$108, %eax	#, D.23391
	je	.L2170	#,
	cmpl	$113, %eax	#, D.23391
	je	.L2171	#,
	cmpl	$104, %eax	#, D.23391
	jne	.L2325	#,
	.loc 1 8854 0
	movq	-256(%rbp), %rax	# tiv, tmp1315
	movswq	%ax, %rax	# D.23403, tmp1316
	movq	%rax, -312(%rbp)	# tmp1316, iv
	jmp	.L2148	#
.L2170:
	.loc 1 8855 0
	movq	-256(%rbp), %rax	# tiv, tmp1317
	movq	%rax, -312(%rbp)	# tmp1317, iv
	jmp	.L2148	#
.L2325:
	.loc 1 8857 0
	movq	-256(%rbp), %rax	# tiv, tmp1318
	movq	%rax, -312(%rbp)	# tmp1318, iv
	jmp	.L2148	#
.L2171:
	.loc 1 8859 0
	movq	-256(%rbp), %rax	# tiv, tmp1319
	movq	%rax, -312(%rbp)	# tmp1319, iv
	nop
.L2148:
.LBE130:
	.loc 1 8863 0
	cmpb	$0, -506(%rbp)	#, vectorize
	jne	.L2173	#,
	.loc 1 8865 0
	cmpq	$0, -312(%rbp)	#, iv
	js	.L2174	#,
	.loc 1 8866 0
	movq	-312(%rbp), %rax	# iv, tmp1320
	movq	%rax, -304(%rbp)	# tmp1320, uv
	.loc 1 8867 0
	cmpb	$0, -502(%rbp)	#, plus
	je	.L2173	#,
	.loc 1 8868 0
	movq	-344(%rbp), %rax	# esignlen, esignlen.1176
	leaq	1(%rax), %rdx	#, tmp1321
	movq	%rdx, -344(%rbp)	# tmp1321, esignlen
	movzbl	-502(%rbp), %edx	# plus, tmp1322
	movb	%dl, -192(%rbp,%rax)	# tmp1322, esignbuf
	jmp	.L2173	#
.L2174:
	.loc 1 8871 0
	movq	-312(%rbp), %rax	# iv, tmp1323
	negq	%rax	# D.23397
	movq	%rax, -304(%rbp)	# D.23397, uv
	.loc 1 8872 0
	movq	-344(%rbp), %rax	# esignlen, esignlen.1177
	leaq	1(%rax), %rdx	#, tmp1324
	movq	%rdx, -344(%rbp)	# tmp1324, esignlen
	movb	$45, -192(%rbp,%rax)	#, esignbuf
.L2173:
	.loc 1 8875 0
	movl	$10, -484(%rbp)	#, base
	.loc 1 8876 0
	jmp	.L2141	#
.L2101:
	.loc 1 8880 0
	movb	$113, -501(%rbp)	#, intsize
.L2111:
	.loc 1 8886 0
	movl	$10, -484(%rbp)	#, base
	.loc 1 8887 0
	jmp	.L2176	#
.L2104:
	.loc 1 8890 0
	movl	$2, -484(%rbp)	#, base
	.loc 1 8891 0
	jmp	.L2176	#
.L2100:
	.loc 1 8895 0
	movb	$113, -501(%rbp)	#, intsize
.L2108:
	.loc 1 8901 0
	movl	$8, -484(%rbp)	#, base
	.loc 1 8902 0
	jmp	.L2176	#
.L2102:
	.loc 1 8906 0
	movl	$16, -484(%rbp)	#, base
.L2176:
	.loc 1 8909 0
	cmpb	$0, -506(%rbp)	#, vectorize
	je	.L2177	#,
.L2178:
.LBB131:
	.loc 1 8912 0
	movq	-432(%rbp), %rax	# veclen, veclen.1178
	testq	%rax, %rax	# veclen.1178
	je	.L2320	#,
	.loc 1 8914 0
	cmpb	$0, -504(%rbp)	#, vec_utf8
	je	.L2180	#,
	.loc 1 8915 0
	movq	-432(%rbp), %rsi	# veclen, veclen.1179
	leaq	-416(%rbp), %rdx	#, tmp1325
	movq	-320(%rbp), %rax	# vecstr, tmp1326
	movl	$105, %ecx	#,
	movq	%rax, %rdi	# tmp1326,
	call	Perl_utf8n_to_uvuni	#
	movq	%rax, -304(%rbp)	# tmp1327, uv
	jmp	.L2181	#
.L2180:
	.loc 1 8918 0
	movq	-320(%rbp), %rax	# vecstr, tmp1328
	movzbl	(%rax), %eax	# *vecstr_160, D.23390
	movzbl	%al, %eax	# D.23390, tmp1329
	movq	%rax, -304(%rbp)	# tmp1329, uv
	.loc 1 8919 0
	movq	$1, -416(%rbp)	#, ulen
.L2181:
	.loc 1 8921 0 discriminator 1
	movq	-416(%rbp), %rax	# ulen, ulen.1180
	addq	%rax, -320(%rbp)	# ulen.1180, vecstr
	.loc 1 8922 0 discriminator 1
	movq	-432(%rbp), %rdx	# veclen, veclen.1181
	movq	-416(%rbp), %rax	# ulen, ulen.1182
	subq	%rax, %rdx	# ulen.1182, veclen.1183
	movq	%rdx, %rax	# veclen.1183, veclen.1183
	movq	%rax, -432(%rbp)	# veclen.1183, veclen
.LBE131:
	jmp	.L2141	#
.L2177:
	.loc 1 8924 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2182	#,
	.loc 1 8925 0
	movsbl	-501(%rbp), %eax	# intsize, D.23391
	cmpl	$104, %eax	#, D.23391
	je	.L2184	#,
	cmpl	$104, %eax	#, D.23391
	jg	.L2185	#,
	cmpl	$86, %eax	#, D.23391
	je	.L2186	#,
	jmp	.L2183	#
.L2185:
	cmpl	$108, %eax	#, D.23391
	je	.L2187	#,
	cmpl	$113, %eax	#, D.23391
	je	.L2188	#,
	jmp	.L2183	#
.L2184:
	.loc 1 8926 0
	movq	-544(%rbp), %rax	# args, tmp1330
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2189	#,
	.loc 1 8926 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1331
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1332
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1184
	movq	-544(%rbp), %rdx	# args, tmp1333
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1334
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2190	#
.L2189:
	.loc 1 8926 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1335
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1184
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1336
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2190:
	movl	(%rax), %eax	# MEM[(unsigned int * {ref-all})addr.1184_247], D.23389
	movzwl	%ax, %eax	# D.23404, tmp1337
	movq	%rax, -304(%rbp)	# tmp1337, uv
	jmp	.L2191	#
.L2187:
	.loc 1 8927 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1338
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2192	#,
	.loc 1 8927 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1339
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1340
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1185
	movq	-544(%rbp), %rdx	# args, tmp1341
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1342
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2193	#
.L2192:
	.loc 1 8927 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1343
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1185
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1344
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2193:
	movq	(%rax), %rax	# MEM[(long unsigned int * {ref-all})addr.1185_248], tmp1345
	movq	%rax, -304(%rbp)	# tmp1345, uv
	jmp	.L2191	#
.L2186:
	.loc 1 8928 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1346
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2194	#,
	.loc 1 8928 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1347
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1348
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1186
	movq	-544(%rbp), %rdx	# args, tmp1349
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1350
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2195	#
.L2194:
	.loc 1 8928 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1351
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1186
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1352
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2195:
	movq	(%rax), %rax	# MEM[(UV * {ref-all})addr.1186_249], tmp1353
	movq	%rax, -304(%rbp)	# tmp1353, uv
	jmp	.L2191	#
.L2183:
	.loc 1 8929 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1354
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2196	#,
	.loc 1 8929 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1355
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1356
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1187
	movq	-544(%rbp), %rdx	# args, tmp1357
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1358
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2197	#
.L2196:
	.loc 1 8929 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1359
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1187
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1360
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2197:
	movl	(%rax), %eax	# MEM[(unsigned int * {ref-all})addr.1187_250], D.23389
	movl	%eax, %eax	# D.23389, tmp1621
	movq	%rax, -304(%rbp)	# tmp1621, uv
	jmp	.L2191	#
.L2188:
	.loc 1 8931 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1361
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2198	#,
	.loc 1 8931 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1362
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1363
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1188
	movq	-544(%rbp), %rdx	# args, tmp1364
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1365
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2199	#
.L2198:
	.loc 1 8931 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1366
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1188
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1367
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2199:
	movq	(%rax), %rax	# MEM[(long unsigned int * {ref-all})addr.1188_251], tmp1368
	movq	%rax, -304(%rbp)	# tmp1368, uv
	nop
.L2191:
	jmp	.L2141	#
.L2182:
.LBB132:
	.loc 1 8936 0 is_stmt 1
	movq	-400(%rbp), %rax	# argsv, tmp1369
	movq	%rax, PL_Sv(%rip)	# tmp1369, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1190
	movl	12(%rax), %eax	# PL_Sv.1190_1046->sv_flags, D.23389
	andl	$65536, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2200	#,
	.loc 1 8936 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1191
	movq	(%rax), %rax	# PL_Sv.1191_1049->sv_any, D.23392
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_1050].xuv_uv, iftmp.1189
	jmp	.L2201	#
.L2200:
	.loc 1 8936 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1192
	movq	%rax, %rdi	# PL_Sv.1192,
	call	Perl_sv_2uv	#
.L2201:
	.loc 1 8936 0 discriminator 3
	movq	%rax, -248(%rbp)	# iftmp.1189, tuv
	.loc 1 8937 0 is_stmt 1 discriminator 3
	movsbl	-501(%rbp), %eax	# intsize, D.23391
	cmpl	$108, %eax	#, D.23391
	je	.L2203	#,
	cmpl	$113, %eax	#, D.23391
	je	.L2204	#,
	cmpl	$104, %eax	#, D.23391
	jne	.L2326	#,
	.loc 1 8938 0
	movq	-248(%rbp), %rax	# tuv, tmp1370
	movzwl	%ax, %eax	# D.23404, tmp1371
	movq	%rax, -304(%rbp)	# tmp1371, uv
	jmp	.L2141	#
.L2203:
	.loc 1 8939 0
	movq	-248(%rbp), %rax	# tuv, tmp1372
	movq	%rax, -304(%rbp)	# tmp1372, uv
	jmp	.L2141	#
.L2326:
	.loc 1 8941 0
	movq	-248(%rbp), %rax	# tuv, tmp1373
	movq	%rax, -304(%rbp)	# tmp1373, uv
	jmp	.L2141	#
.L2204:
	.loc 1 8943 0
	movq	-248(%rbp), %rax	# tuv, tmp1374
	movq	%rax, -304(%rbp)	# tmp1374, uv
	nop
.L2141:
.LBE132:
	.loc 1 8949 0
	leaq	-160(%rbp), %rax	#, tmp1375
	addq	$127, %rax	#, tmp1376
	movq	%rax, -336(%rbp)	# tmp1376, eptr
	.loc 1 8950 0
	movl	-484(%rbp), %eax	# base, base
	cmpl	$8, %eax	#, base
	je	.L2207	#,
	cmpl	$16, %eax	#, base
	je	.L2208	#,
	cmpl	$2, %eax	#, base
	je	.L2209	#,
	jmp	.L2206	#
.L2208:
.LBB133:
	.loc 1 8953 0
	cmpq	$0, -304(%rbp)	#, uv
	jne	.L2210	#,
	.loc 1 8954 0
	movb	$0, -508(%rbp)	#, alt
.L2210:
	.loc 1 8955 0
	movzbl	-510(%rbp), %eax	# c, c.1194
	cmpb	$88, %al	#, c.1194
	jne	.L2211	#,
	.loc 1 8955 0 is_stmt 0 discriminator 1
	movl	$.LC70, %eax	#, iftmp.1193
	jmp	.L2212	#
.L2211:
	.loc 1 8955 0 discriminator 2
	movl	$.LC71, %eax	#, iftmp.1193
.L2212:
	.loc 1 8955 0 discriminator 3
	movq	%rax, -408(%rbp)	# iftmp.1193, p
.L2213:
	.loc 1 8958 0 is_stmt 1 discriminator 1
	movq	-304(%rbp), %rax	# uv, tmp1378
	andl	$15, %eax	#, tmp1379
	movl	%eax, -460(%rbp)	# tmp1379, dig
	.loc 1 8959 0 discriminator 1
	subq	$1, -336(%rbp)	#, eptr
	movl	-460(%rbp), %edx	# dig, D.23395
	movq	-408(%rbp), %rax	# p, tmp1380
	addq	%rdx, %rax	# D.23395, D.23401
	movzbl	(%rax), %edx	# *_1385, D.23393
	movq	-336(%rbp), %rax	# eptr, tmp1381
	movb	%dl, (%rax)	# D.23393, *eptr_1383
	.loc 1 8960 0 discriminator 1
	shrq	$4, -304(%rbp)	#, uv
	cmpq	$0, -304(%rbp)	#, uv
	jne	.L2213	#,
	.loc 1 8961 0
	cmpb	$0, -508(%rbp)	#, alt
	je	.L2214	#,
	.loc 1 8962 0
	movq	-344(%rbp), %rax	# esignlen, esignlen.1195
	leaq	1(%rax), %rdx	#, tmp1382
	movq	%rdx, -344(%rbp)	# tmp1382, esignlen
	movb	$48, -192(%rbp,%rax)	#, esignbuf
	.loc 1 8963 0
	movq	-344(%rbp), %rax	# esignlen, esignlen.1196
	leaq	1(%rax), %rdx	#, tmp1383
	movq	%rdx, -344(%rbp)	# tmp1383, esignlen
	movzbl	-510(%rbp), %edx	# c, c.1197
	movb	%dl, -192(%rbp,%rax)	# c.1197, esignbuf
	.loc 1 8965 0
	jmp	.L2215	#
.L2214:
	jmp	.L2215	#
.L2207:
	.loc 1 8968 0 discriminator 1
	movq	-304(%rbp), %rax	# uv, tmp1384
	andl	$7, %eax	#, tmp1385
	movl	%eax, -460(%rbp)	# tmp1385, dig
	.loc 1 8969 0 discriminator 1
	subq	$1, -336(%rbp)	#, eptr
	movl	-460(%rbp), %eax	# dig, tmp1386
	addl	$48, %eax	#, D.23406
	movl	%eax, %edx	# D.23406, D.23393
	movq	-336(%rbp), %rax	# eptr, tmp1387
	movb	%dl, (%rax)	# D.23393, *eptr_1395
	.loc 1 8970 0 discriminator 1
	shrq	$3, -304(%rbp)	#, uv
	cmpq	$0, -304(%rbp)	#, uv
	jne	.L2207	#,
	.loc 1 8971 0
	cmpb	$0, -508(%rbp)	#, alt
	je	.L2216	#,
	.loc 1 8971 0 is_stmt 0 discriminator 1
	movq	-336(%rbp), %rax	# eptr, tmp1388
	movzbl	(%rax), %eax	# *eptr_1395, D.23393
	cmpb	$48, %al	#, D.23393
	je	.L2216	#,
	.loc 1 8972 0 is_stmt 1
	subq	$1, -336(%rbp)	#, eptr
	movq	-336(%rbp), %rax	# eptr, tmp1389
	movb	$48, (%rax)	#, *eptr_1401
	.loc 1 8973 0
	jmp	.L2215	#
.L2216:
	jmp	.L2215	#
.L2209:
	.loc 1 8976 0 discriminator 1
	movq	-304(%rbp), %rax	# uv, tmp1390
	andl	$1, %eax	#, tmp1391
	movl	%eax, -460(%rbp)	# tmp1391, dig
	.loc 1 8977 0 discriminator 1
	subq	$1, -336(%rbp)	#, eptr
	movl	-460(%rbp), %eax	# dig, tmp1392
	addl	$48, %eax	#, D.23406
	movl	%eax, %edx	# D.23406, D.23393
	movq	-336(%rbp), %rax	# eptr, tmp1393
	movb	%dl, (%rax)	# D.23393, *eptr_1404
	.loc 1 8978 0 discriminator 1
	shrq	-304(%rbp)	# uv
	cmpq	$0, -304(%rbp)	#, uv
	jne	.L2209	#,
	.loc 1 8979 0
	cmpb	$0, -508(%rbp)	#, alt
	je	.L2217	#,
	.loc 1 8980 0
	movq	-344(%rbp), %rax	# esignlen, esignlen.1198
	leaq	1(%rax), %rdx	#, tmp1394
	movq	%rdx, -344(%rbp)	# tmp1394, esignlen
	movb	$48, -192(%rbp,%rax)	#, esignbuf
	.loc 1 8981 0
	movq	-344(%rbp), %rax	# esignlen, esignlen.1199
	leaq	1(%rax), %rdx	#, tmp1395
	movq	%rdx, -344(%rbp)	# tmp1395, esignlen
	movb	$98, -192(%rbp,%rax)	#, esignbuf
	.loc 1 8983 0
	jmp	.L2215	#
.L2217:
	jmp	.L2215	#
.L2206:
	.loc 1 8999 0 discriminator 1
	movl	-484(%rbp), %ecx	# base, D.23398
	movq	-304(%rbp), %rax	# uv, tmp1396
	movl	$0, %edx	#, tmp1397
	divq	%rcx	# D.23398
	movq	%rdx, %rax	# tmp1397, D.23398
	movl	%eax, -460(%rbp)	# D.23398, dig
	.loc 1 9000 0 discriminator 1
	subq	$1, -336(%rbp)	#, eptr
	movl	-460(%rbp), %eax	# dig, tmp1399
	addl	$48, %eax	#, D.23406
	movl	%eax, %edx	# D.23406, D.23393
	movq	-336(%rbp), %rax	# eptr, tmp1400
	movb	%dl, (%rax)	# D.23393, *eptr_1416
	.loc 1 9001 0 discriminator 1
	movl	-484(%rbp), %ebx	# base, D.23398
	movq	-304(%rbp), %rax	# uv, tmp1403
	movl	$0, %edx	#, tmp1402
	divq	%rbx	# D.23398
	movq	%rax, -304(%rbp)	# tmp1401, uv
	cmpq	$0, -304(%rbp)	#, uv
	jne	.L2206	#,
	.loc 1 9002 0
	nop
.L2215:
.LBE133:
	.loc 1 9004 0
	leaq	-160(%rbp), %rax	#, D.23397
	addq	$127, %rax	#, D.23397
	movq	-336(%rbp), %rdx	# eptr, eptr.1200
	subq	%rdx, %rax	# eptr.1200, D.23397
	movq	%rax, -440(%rbp)	# elen.1201, elen
	.loc 1 9005 0
	cmpb	$0, -500(%rbp)	#, has_precis
	je	.L2218	#,
	.loc 1 9006 0
	movq	-440(%rbp), %rax	# elen, elen.1202
	cmpq	%rax, -352(%rbp)	# elen.1202, precis
	jbe	.L2219	#,
	.loc 1 9007 0
	movq	-440(%rbp), %rax	# elen, elen.1203
	movq	-352(%rbp), %rdx	# precis, tmp1407
	subq	%rax, %rdx	# elen.1203, tmp1406
	movq	%rdx, %rax	# tmp1406, tmp1406
	movq	%rax, -360(%rbp)	# tmp1406, zeros
	jmp	.L2218	#
.L2219:
	.loc 1 9008 0
	cmpq	$0, -352(%rbp)	#, precis
	jne	.L2218	#,
	.loc 1 9008 0 is_stmt 0 discriminator 1
	movq	-440(%rbp), %rax	# elen, elen.1204
	cmpq	$1, %rax	#, elen.1204
	jne	.L2218	#,
	movq	-336(%rbp), %rax	# eptr, tmp1408
	movzbl	(%rax), %eax	# *eptr_139, D.23393
	cmpb	$48, %al	#, D.23393
	jne	.L2218	#,
	.loc 1 9009 0 is_stmt 1
	movq	$0, -440(%rbp)	#, elen
	.loc 1 9011 0
	jmp	.L2136	#
.L2218:
	jmp	.L2136	#
.L2099:
	.loc 1 9016 0
	movb	$102, -510(%rbp)	#, c
.L2098:
	.loc 1 9028 0
	movsbl	-501(%rbp), %eax	# intsize, D.23391
	cmpl	$104, %eax	#, D.23391
	je	.L2328	#,
	cmpl	$113, %eax	#, D.23391
	je	.L2329	#,
	cmpl	$86, %eax	#, D.23391
	je	.L2330	#,
	.loc 1 9041 0
	jmp	.L2224	#
.L2329:
	.loc 1 9044 0
	nop
	jmp	.L2224	#
.L2330:
	.loc 1 9033 0
	nop
.L2224:
	.loc 1 9061 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2225	#,
	.loc 1 9053 0
	cmpb	$0, -506(%rbp)	#, vectorize
	jne	.L2225	#,
	.loc 1 9056 0
	cmpb	$113, -501(%rbp)	#, intsize
	jne	.L2226	#,
	.loc 1 9056 0 is_stmt 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1409
	movq	8(%rax), %rax	# args_291(D)->overflow_arg_area, D.23392
	addq	$15, %rax	#, D.23392
	andq	$-16, %rax	#, D.23392
	movq	%rax, %rdx	# D.23392, addr.1207
	leaq	16(%rax), %rcx	#, D.23392
	movq	-544(%rbp), %rax	# args, tmp1410
	movq	%rcx, 8(%rax)	# D.23392, args_291(D)->overflow_arg_area
	movq	(%rdx), %rax	# MEM[(long double * {ref-all})addr.1207_1065],
	movl	8(%rdx), %edx	# MEM[(long double * {ref-all})addr.1207_1065],
	jmp	.L2227	#
.L2226:
	.loc 1 9057 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1411
	movl	4(%rax), %eax	# args_291(D)->fp_offset, D.23389
	cmpl	$176, %eax	#, D.23389
	jae	.L2228	#,
	.loc 1 9057 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1412
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1413
	movl	4(%rax), %eax	# args_291(D)->fp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1208
	movq	-544(%rbp), %rdx	# args, tmp1414
	movl	4(%rdx), %edx	# args_291(D)->fp_offset, D.23389
	leal	16(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1415
	movl	%ecx, 4(%rdx)	# D.23389, args_291(D)->fp_offset
	.loc 1 9056 0 is_stmt 1 discriminator 2
	jmp	.L2229	#
.L2228:
	.loc 1 9057 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1416
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1208
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1417
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2229:
	.loc 1 9057 0 is_stmt 0 discriminator 2
	movsd	(%rax), %xmm1	# MEM[(double * {ref-all})addr.1208_256], D.23405
	movsd	%xmm1, -592(%rbp)	# D.23405, %sfp
	.loc 1 9056 0 is_stmt 1 discriminator 2
	fldl	-592(%rbp)	# %sfp
	fstpt	-592(%rbp)	# %sfp
	movq	-592(%rbp), %rax	# %sfp,
	movl	-584(%rbp), %edx	# %sfp,
.L2227:
	.loc 1 9061 0
	jmp	.L2230	#
.L2225:
	.loc 1 9061 0 is_stmt 0 discriminator 1
	movq	-400(%rbp), %rax	# argsv, tmp1418
	movq	%rax, PL_Sv(%rip)	# tmp1418, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1210
	movl	12(%rax), %eax	# PL_Sv.1210_1081->sv_flags, D.23389
	andl	$131072, %eax	#, D.23389
	testl	%eax, %eax	# D.23389
	je	.L2231	#,
	.loc 1 9061 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1211
	movq	(%rax), %rax	# PL_Sv.1211_1084->sv_any, D.23392
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_1085].xnv_nv, iftmp.1209
	jmp	.L2232	#
.L2231:
	.loc 1 9061 0 discriminator 3
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1212
	movq	%rax, %rdi	# PL_Sv.1212,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -592(%rbp)	#, %sfp
	movq	-592(%rbp), %rax	# %sfp, iftmp.1209
.L2232:
	.loc 1 9061 0 discriminator 4
	movq	%rax, -592(%rbp)	# iftmp.1209, %sfp
	fldl	-592(%rbp)	# %sfp
	fstpt	-592(%rbp)	# %sfp
	movq	-592(%rbp), %rax	# %sfp,
	movl	-584(%rbp), %edx	# %sfp,
.L2230:
	.loc 1 9053 0 is_stmt 1
	movq	%rax, -208(%rbp)	#, nv
	movl	%edx, -200(%rbp)	#, nv
	.loc 1 9063 0
	movq	$0, -296(%rbp)	#, need
	.loc 1 9064 0
	movb	$0, -506(%rbp)	#, vectorize
	.loc 1 9065 0
	movzbl	-510(%rbp), %eax	# c, c.1213
	cmpb	$101, %al	#, c.1213
	je	.L2233	#,
	.loc 1 9065 0 is_stmt 0 discriminator 1
	movzbl	-510(%rbp), %eax	# c, c.1214
	cmpb	$69, %al	#, c.1214
	je	.L2233	#,
	.loc 1 9066 0 is_stmt 1
	movl	$-2147483648, -496(%rbp)	#, i
	.loc 1 9069 0
	fldt	-208(%rbp)	# nv
	fstpl	-576(%rbp)	#
	movsd	-576(%rbp), %xmm0	#, D.23405
	leaq	-496(%rbp), %rax	#, tmp1420
	movq	%rax, %rdi	# tmp1420,
	call	frexp	#
	.loc 1 9070 0
	movl	-496(%rbp), %eax	# i, i.1215
	cmpl	$-2147483648, %eax	#, i.1215
	jne	.L2234	#,
	.loc 1 9071 0
	movl	$.LC72, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
.L2234:
	.loc 1 9072 0
	movl	-496(%rbp), %eax	# i, i.1216
	testl	%eax, %eax	# i.1216
	jle	.L2233	#,
	.loc 1 9073 0
	movl	-496(%rbp), %eax	# i, i.1217
	imull	$146, %eax, %ecx	#, i.1217, D.23391
	movl	$-2027933011, %edx	#, tmp1422
	movl	%ecx, %eax	# D.23391, tmp1602
	imull	%edx	# tmp1422
	leal	(%rdx,%rcx), %eax	#, tmp1423
	sarl	$8, %eax	#, tmp1424
	movl	%eax, %edx	# tmp1424, tmp1424
	movl	%ecx, %eax	# D.23391, tmp1425
	sarl	$31, %eax	#, tmp1425
	subl	%eax, %edx	# tmp1425, D.23391
	movl	%edx, %eax	# D.23391, D.23391
	addl	$1, %eax	#, D.23391
	cltq
	movq	%rax, -296(%rbp)	# tmp1426, need
.L2233:
	.loc 1 9075 0
	cmpb	$0, -500(%rbp)	#, has_precis
	je	.L2235	#,
	.loc 1 9075 0 is_stmt 0 discriminator 1
	movq	-352(%rbp), %rax	# precis, iftmp.1218
	jmp	.L2236	#
.L2235:
	.loc 1 9075 0 discriminator 2
	movl	$6, %eax	#, iftmp.1218
.L2236:
	.loc 1 9075 0 discriminator 3
	addq	%rax, -296(%rbp)	# iftmp.1218, need
	.loc 1 9077 0 is_stmt 1 discriminator 3
	movq	-296(%rbp), %rax	# need, tmp1427
	cmpq	-368(%rbp), %rax	# width, tmp1427
	jae	.L2237	#,
	.loc 1 9078 0
	movq	-368(%rbp), %rax	# width, tmp1428
	movq	%rax, -296(%rbp)	# tmp1428, need
.L2237:
	.loc 1 9146 0
	addq	$20, -296(%rbp)	#, need
	.loc 1 9147 0
	movq	PL_efloatsize(%rip), %rax	# PL_efloatsize, PL_efloatsize.1219
	cmpq	-296(%rbp), %rax	# need, PL_efloatsize.1219
	jae	.L2238	#,
	.loc 1 9148 0
	movq	PL_efloatbuf(%rip), %rax	# PL_efloatbuf, PL_efloatbuf.1220
	movq	%rax, %rdi	# PL_efloatbuf.1220,
	call	Perl_safesysfree	#
	.loc 1 9149 0
	movq	-296(%rbp), %rax	# need, tmp1429
	addq	$20, %rax	#, PL_efloatsize.1221
	movq	%rax, PL_efloatsize(%rip)	# PL_efloatsize.1221, PL_efloatsize
	.loc 1 9150 0
	movq	PL_efloatsize(%rip), %rax	# PL_efloatsize, PL_efloatsize.1222
	movq	%rax, %rdi	# PL_efloatsize.1222,
	call	Perl_safesysmalloc	#
	movq	%rax, PL_efloatbuf(%rip)	# PL_efloatbuf.1223, PL_efloatbuf
	.loc 1 9151 0
	movq	PL_efloatbuf(%rip), %rax	# PL_efloatbuf, PL_efloatbuf.1224
	movb	$0, (%rax)	#, *PL_efloatbuf.1224_1113
.L2238:
	.loc 1 9154 0
	cmpq	$0, -368(%rbp)	#, width
	jne	.L2239	#,
	.loc 1 9154 0 is_stmt 0 discriminator 1
	cmpb	$0, -507(%rbp)	#, left
	jne	.L2239	#,
	cmpb	$0, -502(%rbp)	#, plus
	jne	.L2239	#,
	cmpb	$0, -508(%rbp)	#, alt
	jne	.L2239	#,
	cmpb	$48, -503(%rbp)	#, fill
	je	.L2239	#,
	.loc 1 9155 0 is_stmt 1
	cmpb	$0, -500(%rbp)	#, has_precis
	je	.L2239	#,
	.loc 1 9155 0 is_stmt 0 discriminator 1
	cmpb	$113, -501(%rbp)	#, intsize
	je	.L2239	#,
	.loc 1 9158 0 is_stmt 1
	movzbl	-510(%rbp), %eax	# c, c.1225
	cmpb	$103, %al	#, c.1225
	jne	.L2240	#,
	.loc 1 9158 0 is_stmt 0 discriminator 1
	cmpq	$0, -352(%rbp)	#, precis
	je	.L2240	#,
	.loc 1 9159 0 is_stmt 1
	movq	PL_efloatbuf(%rip), %rdx	# PL_efloatbuf, PL_efloatbuf.1226
	movq	-352(%rbp), %rax	# precis, tmp1430
	fldt	-208(%rbp)	# nv
	fstpl	-576(%rbp)	#
	movsd	-576(%rbp), %xmm0	#, D.23405
	movq	%rdx, %rsi	# PL_efloatbuf.1226,
	movl	%eax, %edi	# D.23391,
	call	gcvt	#
	.loc 1 9160 0
	movq	PL_efloatbuf(%rip), %rax	# PL_efloatbuf, PL_efloatbuf.1227
	movzbl	(%rax), %eax	# *PL_efloatbuf.1227_1118, D.23393
	testb	%al, %al	# D.23393
	je	.L2241	#,
	.loc 1 9161 0
	jmp	.L2242	#
.L2241:
	.loc 1 9160 0 discriminator 1
	jmp	.L2239	#
.L2240:
	.loc 1 9162 0
	movzbl	-510(%rbp), %eax	# c, c.1228
	cmpb	$102, %al	#, c.1228
	jne	.L2239	#,
	.loc 1 9162 0 is_stmt 0 discriminator 1
	cmpq	$0, -352(%rbp)	#, precis
	jne	.L2239	#,
	.loc 1 9163 0 is_stmt 1
	fldt	-208(%rbp)	# nv
	fstpl	-576(%rbp)	#
	movsd	-576(%rbp), %xmm0	#, D.23405
	leaq	-440(%rbp), %rax	#, tmp1433
	leaq	-160(%rbp), %rdx	#, tmp1434
	addq	$127, %rdx	#, tmp1435
	movq	%rax, %rsi	# tmp1433,
	movq	%rdx, %rdi	# tmp1435,
	call	F0convert	#
	movq	%rax, -336(%rbp)	# tmp1436, eptr
	cmpq	$0, -336(%rbp)	#, eptr
	je	.L2239	#,
	.loc 1 9164 0
	jmp	.L2136	#
.L2239:
	.loc 1 9167 0
	leaq	-160(%rbp), %rax	#, tmp1437
	addq	$127, %rax	#, tmp1438
	movq	%rax, -336(%rbp)	# tmp1438, eptr
	.loc 1 9168 0
	subq	$1, -336(%rbp)	#, eptr
	movq	-336(%rbp), %rax	# eptr, tmp1439
	movb	$0, (%rax)	#, *eptr_1124
	.loc 1 9169 0
	subq	$1, -336(%rbp)	#, eptr
	movzbl	-510(%rbp), %edx	# c, c.1229
	movq	-336(%rbp), %rax	# eptr, tmp1440
	movb	%dl, (%rax)	# c.1229, *eptr_1125
	.loc 1 9172 0
	cmpb	$113, -501(%rbp)	#, intsize
	jne	.L2243	#,
.LBB134:
	.loc 1 9177 0
	movq	$prifldbl.12115, -280(%rbp)	#, p
	.loc 1 9178 0
	jmp	.L2244	#
.L2245:
	.loc 1 9178 0 is_stmt 0 discriminator 2
	subq	$1, -336(%rbp)	#, eptr
	movq	-280(%rbp), %rax	# p, p.1230
	leaq	-1(%rax), %rdx	#, tmp1441
	movq	%rdx, -280(%rbp)	# tmp1441, p
	movzbl	(%rax), %edx	# *p.1230_1129, D.23393
	movq	-336(%rbp), %rax	# eptr, tmp1442
	movb	%dl, (%rax)	# D.23393, *eptr_1128
.L2244:
	.loc 1 9178 0 discriminator 1
	cmpq	$prifldbl.12115, -280(%rbp)	#, p
	jae	.L2245	#,
.L2243:
.LBE134:
	.loc 1 9181 0 is_stmt 1
	cmpb	$0, -500(%rbp)	#, has_precis
	je	.L2246	#,
	.loc 1 9182 0
	movq	-352(%rbp), %rax	# precis, tmp1443
	movl	%eax, -484(%rbp)	# tmp1443, base
.L2247:
	.loc 1 9183 0 discriminator 1
	subq	$1, -336(%rbp)	#, eptr
	movl	-484(%rbp), %ecx	# base, tmp1444
	movl	$-858993459, %edx	#, tmp1446
	movl	%ecx, %eax	# tmp1444, tmp1603
	mull	%edx	# tmp1446
	shrl	$3, %edx	#, D.23389
	movl	%edx, %eax	# D.23389, tmp1447
	sall	$2, %eax	#, tmp1447
	addl	%edx, %eax	# D.23389, tmp1447
	addl	%eax, %eax	# tmp1448
	subl	%eax, %ecx	# tmp1447, D.23389
	movl	%ecx, %edx	# D.23389, D.23389
	movl	%edx, %eax	# D.23389, D.23406
	addl	$48, %eax	#, D.23406
	movl	%eax, %edx	# D.23406, D.23393
	movq	-336(%rbp), %rax	# eptr, tmp1449
	movb	%dl, (%rax)	# D.23393, *eptr_1133
	movl	-484(%rbp), %eax	# base, tmp1451
	movl	$-858993459, %edx	#, tmp1453
	mull	%edx	# tmp1453
	movl	%edx, %eax	# tmp1452, tmp1450
	shrl	$3, %eax	#, tmp1450
	movl	%eax, -484(%rbp)	# tmp1450, base
	cmpl	$0, -484(%rbp)	#, base
	jne	.L2247	#,
	.loc 1 9184 0
	subq	$1, -336(%rbp)	#, eptr
	movq	-336(%rbp), %rax	# eptr, tmp1454
	movb	$46, (%rax)	#, *eptr_1139
.L2246:
	.loc 1 9186 0
	cmpq	$0, -368(%rbp)	#, width
	je	.L2248	#,
	.loc 1 9187 0
	movq	-368(%rbp), %rax	# width, tmp1455
	movl	%eax, -484(%rbp)	# tmp1455, base
.L2249:
	.loc 1 9188 0 discriminator 1
	subq	$1, -336(%rbp)	#, eptr
	movl	-484(%rbp), %ecx	# base, tmp1456
	movl	$-858993459, %edx	#, tmp1458
	movl	%ecx, %eax	# tmp1456, tmp1605
	mull	%edx	# tmp1458
	shrl	$3, %edx	#, D.23389
	movl	%edx, %eax	# D.23389, tmp1459
	sall	$2, %eax	#, tmp1459
	addl	%edx, %eax	# D.23389, tmp1459
	addl	%eax, %eax	# tmp1460
	subl	%eax, %ecx	# tmp1459, D.23389
	movl	%ecx, %edx	# D.23389, D.23389
	movl	%edx, %eax	# D.23389, D.23406
	addl	$48, %eax	#, D.23406
	movl	%eax, %edx	# D.23406, D.23393
	movq	-336(%rbp), %rax	# eptr, tmp1461
	movb	%dl, (%rax)	# D.23393, *eptr_1141
	movl	-484(%rbp), %eax	# base, tmp1463
	movl	$-858993459, %edx	#, tmp1465
	mull	%edx	# tmp1465
	movl	%edx, %eax	# tmp1464, tmp1462
	shrl	$3, %eax	#, tmp1462
	movl	%eax, -484(%rbp)	# tmp1462, base
	cmpl	$0, -484(%rbp)	#, base
	jne	.L2249	#,
.L2248:
	.loc 1 9190 0
	cmpb	$48, -503(%rbp)	#, fill
	jne	.L2250	#,
	.loc 1 9191 0
	subq	$1, -336(%rbp)	#, eptr
	movq	-336(%rbp), %rax	# eptr, tmp1466
	movzbl	-503(%rbp), %edx	# fill, tmp1467
	movb	%dl, (%rax)	# tmp1467, *eptr_1147
.L2250:
	.loc 1 9192 0
	cmpb	$0, -507(%rbp)	#, left
	je	.L2251	#,
	.loc 1 9193 0
	subq	$1, -336(%rbp)	#, eptr
	movq	-336(%rbp), %rax	# eptr, tmp1468
	movb	$45, (%rax)	#, *eptr_1148
.L2251:
	.loc 1 9194 0
	cmpb	$0, -502(%rbp)	#, plus
	je	.L2252	#,
	.loc 1 9195 0
	subq	$1, -336(%rbp)	#, eptr
	movq	-336(%rbp), %rax	# eptr, tmp1469
	movzbl	-502(%rbp), %edx	# plus, tmp1470
	movb	%dl, (%rax)	# tmp1470, *eptr_1149
.L2252:
	.loc 1 9196 0
	cmpb	$0, -508(%rbp)	#, alt
	je	.L2253	#,
	.loc 1 9197 0
	subq	$1, -336(%rbp)	#, eptr
	movq	-336(%rbp), %rax	# eptr, tmp1471
	movb	$35, (%rax)	#, *eptr_1150
.L2253:
	.loc 1 9198 0
	subq	$1, -336(%rbp)	#, eptr
	movq	-336(%rbp), %rax	# eptr, tmp1472
	movb	$37, (%rax)	#, *eptr_1151
	.loc 1 9204 0
	cmpb	$113, -501(%rbp)	#, intsize
	jne	.L2254	#,
	.loc 1 9205 0
	movq	PL_efloatbuf(%rip), %rcx	# PL_efloatbuf, PL_efloatbuf.1231
	movq	-336(%rbp), %rsi	# eptr, tmp1473
	movq	-208(%rbp), %rax	# nv,
	movl	-200(%rbp), %edx	# nv,
	movq	%rax, (%rsp)	#,
	movl	%edx, 8(%rsp)	#,
	movq	%rcx, %rdi	# PL_efloatbuf.1231,
	movl	$0, %eax	#,
	call	sprintf	#
	jmp	.L2242	#
.L2254:
	.loc 1 9207 0
	fldt	-208(%rbp)	# nv
	fstpl	-576(%rbp)	#
	movsd	-576(%rbp), %xmm0	#, D.23405
	movq	PL_efloatbuf(%rip), %rax	# PL_efloatbuf, PL_efloatbuf.1232
	movq	-336(%rbp), %rdx	# eptr, tmp1476
	movq	%rdx, %rsi	# tmp1476,
	movq	%rax, %rdi	# PL_efloatbuf.1232,
	movl	$1, %eax	#,
	call	sprintf	#
.L2242:
	.loc 1 9212 0
	movq	PL_efloatbuf(%rip), %rax	# PL_efloatbuf, tmp1477
	movq	%rax, -336(%rbp)	# tmp1477, eptr
	.loc 1 9213 0
	movq	PL_efloatbuf(%rip), %rax	# PL_efloatbuf, PL_efloatbuf.1233
	movq	%rax, %rdi	# PL_efloatbuf.1233,
	call	strlen	#
	movq	%rax, -440(%rbp)	# elen.1234, elen
	.loc 1 9214 0
	jmp	.L2136	#
.L2107:
	.loc 1 9219 0
	movq	-520(%rbp), %rax	# sv, tmp1478
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_1158].xpv_cur, D.23398
	movl	%eax, %edx	# D.23398, D.23407
	movq	-448(%rbp), %rax	# origlen, origlen.1235
	subl	%eax, %edx	# D.23407, D.23407
	movl	%edx, %eax	# D.23407, D.23407
	movl	%eax, -496(%rbp)	# i.1236, i
	.loc 1 9220 0
	cmpq	$0, -544(%rbp)	#, args
	je	.L2255	#,
	.loc 1 9220 0 is_stmt 0 discriminator 1
	cmpb	$0, -506(%rbp)	#, vectorize
	jne	.L2255	#,
	.loc 1 9221 0 is_stmt 1
	movsbl	-501(%rbp), %eax	# intsize, D.23391
	cmpl	$104, %eax	#, D.23391
	je	.L2257	#,
	cmpl	$104, %eax	#, D.23391
	jg	.L2258	#,
	cmpl	$86, %eax	#, D.23391
	je	.L2259	#,
	jmp	.L2256	#
.L2258:
	cmpl	$108, %eax	#, D.23391
	je	.L2260	#,
	cmpl	$113, %eax	#, D.23391
	je	.L2261	#,
	jmp	.L2256	#
.L2257:
	.loc 1 9222 0
	movq	-544(%rbp), %rax	# args, tmp1479
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2262	#,
	.loc 1 9222 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1480
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1481
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1237
	movq	-544(%rbp), %rdx	# args, tmp1482
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1483
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2263	#
.L2262:
	.loc 1 9222 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1484
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1237
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1485
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2263:
	movq	(%rax), %rax	# MEM[(short int * * {ref-all})addr.1237_259], D.23408
	movl	-496(%rbp), %edx	# i, i.1238
	movw	%dx, (%rax)	# D.23403, *_1176
	jmp	.L2264	#
.L2256:
	.loc 1 9223 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1486
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2265	#,
	.loc 1 9223 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1487
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1488
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1239
	movq	-544(%rbp), %rdx	# args, tmp1489
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1490
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2266	#
.L2265:
	.loc 1 9223 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1491
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1239
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1492
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2266:
	movq	(%rax), %rax	# MEM[(int * * {ref-all})addr.1239_260], D.23409
	movl	-496(%rbp), %edx	# i, i.1240
	movl	%edx, (%rax)	# i.1240, *_1189
	jmp	.L2264	#
.L2260:
	.loc 1 9224 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1493
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2267	#,
	.loc 1 9224 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1494
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1495
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1241
	movq	-544(%rbp), %rdx	# args, tmp1496
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1497
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2268	#
.L2267:
	.loc 1 9224 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1498
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1241
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1499
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2268:
	movq	(%rax), %rax	# MEM[(long int * * {ref-all})addr.1241_261], D.23410
	movl	-496(%rbp), %edx	# i, i.1242
	movslq	%edx, %rdx	# i.1242, D.23397
	movq	%rdx, (%rax)	# D.23397, *_1201
	jmp	.L2264	#
.L2259:
	.loc 1 9225 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1500
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2269	#,
	.loc 1 9225 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1501
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1502
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1243
	movq	-544(%rbp), %rdx	# args, tmp1503
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1504
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2270	#
.L2269:
	.loc 1 9225 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1505
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1243
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1506
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2270:
	movq	(%rax), %rax	# MEM[(IV * * {ref-all})addr.1243_262], D.23411
	movl	-496(%rbp), %edx	# i, i.1244
	movslq	%edx, %rdx	# i.1244, D.23397
	movq	%rdx, (%rax)	# D.23397, *_1214
	jmp	.L2264	#
.L2261:
	.loc 1 9227 0 is_stmt 1
	movq	-544(%rbp), %rax	# args, tmp1507
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	cmpl	$48, %eax	#, D.23389
	jae	.L2271	#,
	.loc 1 9227 0 is_stmt 0 discriminator 2
	movq	-544(%rbp), %rax	# args, tmp1508
	movq	16(%rax), %rdx	# args_291(D)->reg_save_area, D.23392
	movq	-544(%rbp), %rax	# args, tmp1509
	movl	(%rax), %eax	# args_291(D)->gp_offset, D.23389
	movl	%eax, %eax	# D.23389, D.23395
	addq	%rdx, %rax	# D.23392, addr.1245
	movq	-544(%rbp), %rdx	# args, tmp1510
	movl	(%rdx), %edx	# args_291(D)->gp_offset, D.23389
	leal	8(%rdx), %ecx	#, D.23389
	movq	-544(%rbp), %rdx	# args, tmp1511
	movl	%ecx, (%rdx)	# D.23389, args_291(D)->gp_offset
	jmp	.L2272	#
.L2271:
	.loc 1 9227 0 discriminator 1
	movq	-544(%rbp), %rax	# args, tmp1512
	movq	8(%rax), %rdx	# args_291(D)->overflow_arg_area, D.23392
	movq	%rdx, %rax	# D.23392, addr.1245
	leaq	8(%rdx), %rcx	#, D.23392
	movq	-544(%rbp), %rdx	# args, tmp1513
	movq	%rcx, 8(%rdx)	# D.23392, args_291(D)->overflow_arg_area
.L2272:
	movq	(%rax), %rax	# MEM[(long int * * {ref-all})addr.1245_263], D.23410
	movl	-496(%rbp), %edx	# i, i.1246
	movslq	%edx, %rdx	# i.1246, D.23397
	movq	%rdx, (%rax)	# D.23397, *_1227
	nop
.L2264:
	.loc 1 9230 0 is_stmt 1
	jmp	.L2273	#
.L2255:
	.loc 1 9232 0
	movl	-496(%rbp), %eax	# i, i.1247
	movslq	%eax, %rdx	# i.1247, D.23398
	movq	-400(%rbp), %rax	# argsv, tmp1514
	movq	%rdx, %rsi	# D.23398,
	movq	%rax, %rdi	# tmp1514,
	call	Perl_sv_setuv_mg	#
.L2273:
	.loc 1 9233 0
	movb	$0, -506(%rbp)	#, vectorize
	.loc 1 9234 0
	jmp	.L2320	#
.L2328:
	.loc 1 9049 0
	nop
.L2015:
	.loc 1 9240 0
	cmpq	$0, -544(%rbp)	#, args
	jne	.L2274	#,
	.loc 1 9240 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1248
	movq	80(%rax), %rax	# PL_curcop.1248_1431->cop_warnings, D.23396
	testq	%rax, %rax	# D.23396
	je	.L2275	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1249
	movq	80(%rax), %rax	# PL_curcop.1249_1433->cop_warnings, D.23396
	cmpq	$32, %rax	#, D.23396
	je	.L2275	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1250
	movq	80(%rax), %rax	# PL_curcop.1250_1435->cop_warnings, D.23396
	cmpq	$16, %rax	#, D.23396
	je	.L2276	#,
	.loc 1 9240 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1251
	movq	80(%rax), %rax	# PL_curcop.1251_1437->cop_warnings, D.23396
	movq	(%rax), %rax	# _1438->sv_any, D.23392
	movq	(%rax), %rax	# MEM[(struct XPV *)_1439].xpv_pv, D.23401
	addq	$8, %rax	#, D.23401
	movzbl	(%rax), %eax	# *_1441, D.23393
	movsbl	%al, %eax	# D.23393, D.23391
	andl	$16, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L2276	#,
.L2275:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1252
	movq	80(%rax), %rax	# PL_curcop.1252_1445->cop_warnings, D.23396
	testq	%rax, %rax	# D.23396
	jne	.L2274	#,
	.loc 1 9240 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1253
	movzbl	%al, %eax	# PL_dowarn.1253, D.23391
	andl	$1, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	je	.L2274	#,
.L2276:
	.loc 1 9241 0 is_stmt 1 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1254
	movzwl	32(%rax), %eax	# PL_op.1254_1450->op_type, D.23404
	.loc 1 9240 0 discriminator 1
	cmpw	$208, %ax	#, D.23404
	je	.L2277	#,
	.loc 1 9241 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1255
	movzwl	32(%rax), %eax	# PL_op.1255_1452->op_type, D.23404
	cmpw	$115, %ax	#, D.23404
	jne	.L2274	#,
.L2277:
.LBB135:
	.loc 1 9242 0
	call	Perl_sv_newmortal	#
	movq	%rax, -216(%rbp)	# tmp1515, msg
	.loc 1 9244 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1257
	movzwl	32(%rax), %eax	# PL_op.1257_1455->op_type, D.23404
	.loc 1 9243 0
	cmpw	$208, %ax	#, D.23404
	jne	.L2278	#,
	.loc 1 9243 0 is_stmt 0 discriminator 1
	movl	$.LC1, %eax	#, iftmp.1256
	jmp	.L2279	#
.L2278:
	.loc 1 9243 0 discriminator 2
	movl	$.LC73, %eax	#, iftmp.1256
.L2279:
	.loc 1 9243 0 discriminator 3
	movq	-216(%rbp), %rcx	# msg, tmp1516
	movq	%rax, %rdx	# iftmp.1256,
	movl	$.LC74, %esi	#,
	movq	%rcx, %rdi	# tmp1516,
	movl	$0, %eax	#,
	call	Perl_sv_setpvf	#
	.loc 1 9245 0 is_stmt 1 discriminator 3
	movzbl	-510(%rbp), %eax	# c, c.1258
	testb	%al, %al	# c.1258
	je	.L2280	#,
	.loc 1 9246 0
	movzbl	-510(%rbp), %eax	# c, c.1259
	cmpb	$32, %al	#, c.1259
	jle	.L2281	#,
	.loc 1 9246 0 is_stmt 0 discriminator 1
	movzbl	-510(%rbp), %eax	# c, c.1260
	cmpb	$127, %al	#, c.1260
	jne	.L2282	#,
.L2281:
	.loc 1 9246 0 discriminator 2
	movzbl	-510(%rbp), %eax	# c, c.1261
	cmpb	$32, %al	#, c.1261
	jne	.L2283	#,
.L2282:
	.loc 1 9247 0 is_stmt 1
	movzbl	-510(%rbp), %eax	# c, c.1262
	movsbl	%al, %eax	# c.1262, D.23391
	movzbl	%al, %edx	# D.23391, D.23391
	movq	-216(%rbp), %rax	# msg, tmp1517
	movl	$.LC75, %esi	#,
	movq	%rax, %rdi	# tmp1517,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L2285	#
.L2283:
	.loc 1 9252 0
	movzbl	-510(%rbp), %eax	# c, c.1263
	movsbq	%al, %rax	# c.1263, D.23398
	.loc 1 9250 0
	movzbl	%al, %edx	# D.23398, D.23398
	movq	-216(%rbp), %rax	# msg, tmp1518
	movl	$.LC76, %esi	#,
	movq	%rax, %rdi	# tmp1518,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L2285	#
.L2280:
	.loc 1 9254 0
	movq	-216(%rbp), %rax	# msg, tmp1519
	movl	$.LC77, %esi	#,
	movq	%rax, %rdi	# tmp1519,
	call	Perl_sv_catpv	#
.L2285:
	.loc 1 9255 0
	movq	-216(%rbp), %rax	# msg, tmp1520
	movq	%rax, %rdx	# tmp1520,
	movl	$.LC78, %esi	#,
	movl	$34, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L2274:
.LBE135:
	.loc 1 9259 0
	movzbl	-510(%rbp), %eax	# c, c.1264
	testb	%al, %al	# c.1264
	jne	.L2286	#,
	.loc 1 9260 0
	movq	-456(%rbp), %rax	# q, q.1265
	subq	$1, %rax	#, q.1266
	movq	%rax, -456(%rbp)	# q.1266, q
.L2286:
	.loc 1 9261 0
	movq	-408(%rbp), %rax	# p, tmp1521
	movq	%rax, -336(%rbp)	# tmp1521, eptr
	.loc 1 9262 0
	movq	-456(%rbp), %rax	# q, q.1267
	movq	%rax, %rdx	# q.1267, q.1268
	movq	-408(%rbp), %rax	# p, p.1269
	subq	%rax, %rdx	# p.1269, D.23397
	movq	%rdx, %rax	# D.23397, D.23397
	movq	%rax, -440(%rbp)	# elen.1270, elen
	.loc 1 9265 0
	movq	-520(%rbp), %rax	# sv, tmp1522
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_1478].xpv_len, D.23398
	movq	-520(%rbp), %rax	# sv, tmp1523
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_1480].xpv_cur, D.23398
	movq	-440(%rbp), %rax	# elen, elen.1272
	addq	%rcx, %rax	# D.23398, D.23398
	addq	$1, %rax	#, D.23398
	cmpq	%rax, %rdx	# D.23398, D.23398
	jae	.L2288	#,
	.loc 1 9265 0 is_stmt 0 discriminator 1
	movq	-520(%rbp), %rax	# sv, tmp1524
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_1485].xpv_cur, D.23398
	movq	-440(%rbp), %rax	# elen, elen.1273
	addq	%rdx, %rax	# D.23398, D.23398
	leaq	1(%rax), %rdx	#, D.23398
	movq	-520(%rbp), %rax	# sv, tmp1525
	movq	%rdx, %rsi	# D.23398,
	movq	%rax, %rdi	# tmp1525,
	call	Perl_sv_grow	#
.L2288:
	.loc 1 9266 0 is_stmt 1
	movq	-520(%rbp), %rax	# sv, tmp1527
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	(%rax), %rdx	# MEM[(struct XPV *)_1493].xpv_pv, D.23401
	movq	-520(%rbp), %rax	# sv, tmp1528
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_1495].xpv_cur, D.23398
	addq	%rdx, %rax	# D.23401, tmp1529
	movq	%rax, -408(%rbp)	# tmp1529, p
	.loc 1 9267 0
	movq	-440(%rbp), %rdx	# elen, elen.1274
	movq	-336(%rbp), %rcx	# eptr, tmp1530
	movq	-408(%rbp), %rax	# p, tmp1531
	movq	%rcx, %rsi	# tmp1530,
	movq	%rax, %rdi	# tmp1531,
	call	memcpy	#
	.loc 1 9268 0
	movq	-440(%rbp), %rax	# elen, elen.1275
	addq	%rax, -408(%rbp)	# elen.1275, p
	.loc 1 9269 0
	movq	-408(%rbp), %rax	# p, tmp1532
	movb	$0, (%rax)	#, *p_1500
	.loc 1 9270 0
	movq	-520(%rbp), %rax	# sv, tmp1533
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	-408(%rbp), %rcx	# p, p.1276
	movq	-520(%rbp), %rdx	# sv, tmp1534
	movq	(%rdx), %rdx	# sv_269(D)->sv_any, D.23392
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_1503].xpv_pv, D.23401
	subq	%rdx, %rcx	# D.23397, D.23397
	movq	%rcx, %rdx	# D.23397, D.23397
	movq	%rdx, 8(%rax)	# D.23398, MEM[(struct XPV *)_1501].xpv_cur
	.loc 1 9271 0
	movl	-468(%rbp), %eax	# osvix, tmp1535
	movl	%eax, -492(%rbp)	# tmp1535, svix
	.loc 1 9272 0
	jmp	.L2320	#
.L2136:
	.loc 1 9276 0
	movq	-360(%rbp), %rax	# zeros, tmp1536
	movq	-344(%rbp), %rdx	# esignlen, tmp1537
	addq	%rax, %rdx	# tmp1536, D.23398
	movq	-440(%rbp), %rax	# elen, elen.1277
	addq	%rdx, %rax	# D.23398, tmp1538
	movq	%rax, -240(%rbp)	# tmp1538, have
	.loc 1 9278 0
	movzbl	-499(%rbp), %eax	# is_utf8, tmp1539
	cmpb	-509(%rbp), %al	# has_utf8, tmp1539
	je	.L2289	#,
	.loc 1 9279 0
	cmpb	$0, -499(%rbp)	#, is_utf8
	je	.L2290	#,
	.loc 1 9280 0
	movq	-520(%rbp), %rax	# sv, tmp1540
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_1238].xpv_cur, D.23398
	testq	%rax, %rax	# D.23398
	je	.L2292	#,
	.loc 1 9281 0
	movq	-520(%rbp), %rax	# sv, tmp1541
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp1541,
	call	Perl_sv_utf8_upgrade_flags	#
	jmp	.L2292	#
.L2290:
.LBB136:
	.loc 1 9284 0
	movq	-440(%rbp), %rdx	# elen, elen.1278
	movq	-336(%rbp), %rax	# eptr, tmp1542
	movq	%rdx, %rsi	# elen.1278,
	movq	%rax, %rdi	# tmp1542,
	call	Perl_newSVpvn	#
	movq	%rax, %rdi	# D.23396,
	call	Perl_sv_2mortal	#
	movq	%rax, -232(%rbp)	# tmp1543, nsv
	.loc 1 9285 0
	movq	-232(%rbp), %rax	# nsv, tmp1544
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp1544,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 9286 0
	movq	-232(%rbp), %rax	# nsv, tmp1545
	movq	(%rax), %rax	# nsv_1242->sv_any, D.23392
	movq	(%rax), %rax	# MEM[(struct XPV *)_1243].xpv_pv, tmp1546
	movq	%rax, -336(%rbp)	# tmp1546, eptr
	.loc 1 9287 0
	movq	-232(%rbp), %rax	# nsv, tmp1547
	movq	(%rax), %rax	# nsv_1242->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_1245].xpv_cur, elen.1279
	movq	%rax, -440(%rbp)	# elen.1279, elen
.L2292:
.LBE136:
	.loc 1 9289 0
	movq	-520(%rbp), %rax	# sv, tmp1548
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_1247].xpv_len, D.23398
	movq	-520(%rbp), %rax	# sv, tmp1549
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_1249].xpv_cur, D.23398
	movq	-440(%rbp), %rax	# elen, elen.1281
	addq	%rcx, %rax	# D.23398, D.23398
	addq	$1, %rax	#, D.23398
	cmpq	%rax, %rdx	# D.23398, D.23398
	jae	.L2294	#,
	.loc 1 9289 0 is_stmt 0 discriminator 1
	movq	-520(%rbp), %rax	# sv, tmp1550
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_1254].xpv_cur, D.23398
	movq	-440(%rbp), %rax	# elen, elen.1282
	addq	%rdx, %rax	# D.23398, D.23398
	leaq	1(%rax), %rdx	#, D.23398
	movq	-520(%rbp), %rax	# sv, tmp1551
	movq	%rdx, %rsi	# D.23398,
	movq	%rax, %rdi	# tmp1551,
	call	Perl_sv_grow	#
.L2294:
	.loc 1 9290 0 is_stmt 1
	movq	-520(%rbp), %rax	# sv, tmp1553
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	(%rax), %rdx	# MEM[(struct XPV *)_1262].xpv_pv, D.23401
	movq	-520(%rbp), %rax	# sv, tmp1554
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_1264].xpv_cur, D.23398
	addq	%rdx, %rax	# D.23401, tmp1555
	movq	%rax, -408(%rbp)	# tmp1555, p
	.loc 1 9291 0
	movq	-408(%rbp), %rax	# p, tmp1556
	movb	$0, (%rax)	#, *p_1266
.L2289:
	.loc 1 9295 0
	cmpb	$0, -507(%rbp)	#, left
	je	.L2295	#,
	.loc 1 9295 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1283
	movq	80(%rax), %rax	# PL_curcop.1283_1267->cop_warnings, D.23396
	testq	%rax, %rax	# D.23396
	je	.L2296	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1284
	movq	80(%rax), %rax	# PL_curcop.1284_1269->cop_warnings, D.23396
	cmpq	$32, %rax	#, D.23396
	je	.L2296	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1285
	movq	80(%rax), %rax	# PL_curcop.1285_1271->cop_warnings, D.23396
	cmpq	$16, %rax	#, D.23396
	je	.L2297	#,
	.loc 1 9295 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1286
	movq	80(%rax), %rax	# PL_curcop.1286_1273->cop_warnings, D.23396
	movq	(%rax), %rax	# _1274->sv_any, D.23392
	movq	(%rax), %rax	# MEM[(struct XPV *)_1275].xpv_pv, D.23401
	addq	$8, %rax	#, D.23401
	movzbl	(%rax), %eax	# *_1277, D.23393
	movsbl	%al, %eax	# D.23393, D.23391
	andl	$16, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	jne	.L2297	#,
.L2296:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1287
	movq	80(%rax), %rax	# PL_curcop.1287_1281->cop_warnings, D.23396
	testq	%rax, %rax	# D.23396
	jne	.L2295	#,
	.loc 1 9295 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1288
	movzbl	%al, %eax	# PL_dowarn.1288, D.23391
	andl	$1, %eax	#, D.23391
	testl	%eax, %eax	# D.23391
	je	.L2295	#,
.L2297:
	movq	-440(%rbp), %rdx	# elen, elen.1289
	movq	-336(%rbp), %rax	# eptr, tmp1557
	movl	$10, %esi	#,
	movq	%rax, %rdi	# tmp1557,
	call	memchr	#
	testq	%rax, %rax	# D.23392
	je	.L2295	#,
	.loc 1 9296 0 is_stmt 1 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1290
	movzwl	32(%rax), %eax	# PL_op.1290_1288->op_type, D.23404
	.loc 1 9295 0 discriminator 1
	cmpw	$208, %ax	#, D.23404
	je	.L2298	#,
	.loc 1 9296 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1291
	movzwl	32(%rax), %eax	# PL_op.1291_1290->op_type, D.23404
	cmpw	$115, %ax	#, D.23404
	jne	.L2295	#,
.L2298:
	.loc 1 9299 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1293
	movzwl	32(%rax), %eax	# PL_op.1293_1292->op_type, D.23404
	.loc 1 9297 0
	cmpw	$208, %ax	#, D.23404
	jne	.L2299	#,
	.loc 1 9297 0 is_stmt 0 discriminator 1
	movl	$.LC1, %eax	#, iftmp.1292
	jmp	.L2300	#
.L2299:
	.loc 1 9297 0 discriminator 2
	movl	$.LC73, %eax	#, iftmp.1292
.L2300:
	.loc 1 9297 0 discriminator 3
	movq	%rax, %rdx	# iftmp.1292,
	movl	$.LC79, %esi	#,
	movl	$34, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L2295:
	.loc 1 9301 0 is_stmt 1
	movq	-240(%rbp), %rax	# have, tmp1559
	cmpq	%rax, -368(%rbp)	# tmp1559, width
	cmovae	-368(%rbp), %rax	# width,, tmp1558
	movq	%rax, -296(%rbp)	# tmp1558, need
	.loc 1 9302 0
	movq	-240(%rbp), %rax	# have, tmp1564
	movq	-296(%rbp), %rdx	# need, tmp1565
	subq	%rax, %rdx	# tmp1564, tmp1563
	movq	%rdx, %rax	# tmp1563, tmp1563
	movq	%rax, -224(%rbp)	# tmp1563, gap
	.loc 1 9304 0
	movq	-520(%rbp), %rax	# sv, tmp1566
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_1298].xpv_len, D.23398
	movq	-520(%rbp), %rax	# sv, tmp1567
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rcx	# MEM[(struct XPV *)_1300].xpv_cur, D.23398
	movq	-296(%rbp), %rax	# need, tmp1568
	addq	%rax, %rcx	# tmp1568, D.23398
	movq	-424(%rbp), %rax	# dotstrlen, dotstrlen.1295
	addq	%rcx, %rax	# D.23398, D.23398
	addq	$1, %rax	#, D.23398
	cmpq	%rax, %rdx	# D.23398, D.23398
	jae	.L2302	#,
	.loc 1 9304 0 is_stmt 0 discriminator 1
	movq	-520(%rbp), %rax	# sv, tmp1569
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_1306].xpv_cur, D.23398
	movq	-296(%rbp), %rax	# need, tmp1570
	addq	%rax, %rdx	# tmp1570, D.23398
	movq	-424(%rbp), %rax	# dotstrlen, dotstrlen.1296
	addq	%rdx, %rax	# D.23398, D.23398
	leaq	1(%rax), %rdx	#, D.23398
	movq	-520(%rbp), %rax	# sv, tmp1571
	movq	%rdx, %rsi	# D.23398,
	movq	%rax, %rdi	# tmp1571,
	call	Perl_sv_grow	#
.L2302:
	.loc 1 9305 0 is_stmt 1
	movq	-520(%rbp), %rax	# sv, tmp1573
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	(%rax), %rdx	# MEM[(struct XPV *)_1315].xpv_pv, D.23401
	movq	-520(%rbp), %rax	# sv, tmp1574
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	8(%rax), %rax	# MEM[(struct XPV *)_1317].xpv_cur, D.23398
	addq	%rdx, %rax	# D.23401, tmp1575
	movq	%rax, -408(%rbp)	# tmp1575, p
	.loc 1 9306 0
	cmpq	$0, -344(%rbp)	#, esignlen
	je	.L2303	#,
	.loc 1 9306 0 is_stmt 0 discriminator 1
	cmpb	$48, -503(%rbp)	#, fill
	jne	.L2303	#,
	.loc 1 9307 0 is_stmt 1
	movl	$0, -496(%rbp)	#, i
	jmp	.L2304	#
.L2305:
	.loc 1 9308 0 discriminator 2
	movq	-408(%rbp), %rax	# p, p.1297
	leaq	1(%rax), %rdx	#, tmp1576
	movq	%rdx, -408(%rbp)	# tmp1576, p
	movl	-496(%rbp), %edx	# i, i.1298
	movslq	%edx, %rdx	# i.1298, tmp1577
	movzbl	-192(%rbp,%rdx), %edx	# esignbuf, D.23393
	movb	%dl, (%rax)	# D.23393, *p.1297_1322
	.loc 1 9307 0 discriminator 2
	movl	-496(%rbp), %eax	# i, i.1299
	addl	$1, %eax	#, i.1300
	movl	%eax, -496(%rbp)	# i.1300, i
.L2304:
	.loc 1 9307 0 is_stmt 0 discriminator 1
	movq	-344(%rbp), %rax	# esignlen, tmp1578
	movl	%eax, %edx	# tmp1578, D.23391
	movl	-496(%rbp), %eax	# i, i.1301
	cmpl	%eax, %edx	# i.1301, D.23391
	jg	.L2305	#,
.L2303:
	.loc 1 9310 0 is_stmt 1
	cmpq	$0, -224(%rbp)	#, gap
	je	.L2306	#,
	.loc 1 9310 0 is_stmt 0 discriminator 1
	cmpb	$0, -507(%rbp)	#, left
	jne	.L2306	#,
	.loc 1 9311 0 is_stmt 1
	movsbl	-503(%rbp), %ecx	# fill, D.23391
	movq	-224(%rbp), %rdx	# gap, tmp1579
	movq	-408(%rbp), %rax	# p, tmp1580
	movl	%ecx, %esi	# D.23391,
	movq	%rax, %rdi	# tmp1580,
	call	memset	#
	.loc 1 9312 0
	movq	-224(%rbp), %rax	# gap, tmp1581
	addq	%rax, -408(%rbp)	# tmp1581, p
.L2306:
	.loc 1 9314 0
	cmpq	$0, -344(%rbp)	#, esignlen
	je	.L2307	#,
	.loc 1 9314 0 is_stmt 0 discriminator 1
	cmpb	$48, -503(%rbp)	#, fill
	je	.L2307	#,
	.loc 1 9315 0 is_stmt 1
	movl	$0, -496(%rbp)	#, i
	jmp	.L2308	#
.L2309:
	.loc 1 9316 0 discriminator 2
	movq	-408(%rbp), %rax	# p, p.1302
	leaq	1(%rax), %rdx	#, tmp1582
	movq	%rdx, -408(%rbp)	# tmp1582, p
	movl	-496(%rbp), %edx	# i, i.1303
	movslq	%edx, %rdx	# i.1303, tmp1583
	movzbl	-192(%rbp,%rdx), %edx	# esignbuf, D.23393
	movb	%dl, (%rax)	# D.23393, *p.1302_1332
	.loc 1 9315 0 discriminator 2
	movl	-496(%rbp), %eax	# i, i.1304
	addl	$1, %eax	#, i.1305
	movl	%eax, -496(%rbp)	# i.1305, i
.L2308:
	.loc 1 9315 0 is_stmt 0 discriminator 1
	movq	-344(%rbp), %rax	# esignlen, tmp1584
	movl	%eax, %edx	# tmp1584, D.23391
	movl	-496(%rbp), %eax	# i, i.1306
	cmpl	%eax, %edx	# i.1306, D.23391
	jg	.L2309	#,
.L2307:
	.loc 1 9318 0 is_stmt 1
	cmpq	$0, -360(%rbp)	#, zeros
	je	.L2310	#,
	.loc 1 9319 0
	movq	-360(%rbp), %rax	# zeros, tmp1585
	movl	%eax, -496(%rbp)	# i.1307, i
	jmp	.L2311	#
.L2312:
	.loc 1 9320 0 discriminator 2
	movq	-408(%rbp), %rax	# p, p.1308
	leaq	1(%rax), %rdx	#, tmp1586
	movq	%rdx, -408(%rbp)	# tmp1586, p
	movb	$48, (%rax)	#, *p.1308_1340
	.loc 1 9319 0 discriminator 2
	movl	-496(%rbp), %eax	# i, i.1309
	subl	$1, %eax	#, i.1310
	movl	%eax, -496(%rbp)	# i.1310, i
.L2311:
	.loc 1 9319 0 is_stmt 0 discriminator 1
	movl	-496(%rbp), %eax	# i, i.1311
	testl	%eax, %eax	# i.1311
	jne	.L2312	#,
.L2310:
	.loc 1 9322 0 is_stmt 1
	movq	-440(%rbp), %rax	# elen, elen.1312
	testq	%rax, %rax	# elen.1312
	je	.L2313	#,
	.loc 1 9323 0
	movq	-440(%rbp), %rdx	# elen, elen.1313
	movq	-336(%rbp), %rcx	# eptr, tmp1587
	movq	-408(%rbp), %rax	# p, tmp1588
	movq	%rcx, %rsi	# tmp1587,
	movq	%rax, %rdi	# tmp1588,
	call	memcpy	#
	.loc 1 9324 0
	movq	-440(%rbp), %rax	# elen, elen.1314
	addq	%rax, -408(%rbp)	# elen.1314, p
.L2313:
	.loc 1 9326 0
	cmpq	$0, -224(%rbp)	#, gap
	je	.L2314	#,
	.loc 1 9326 0 is_stmt 0 discriminator 1
	cmpb	$0, -507(%rbp)	#, left
	je	.L2314	#,
	.loc 1 9327 0 is_stmt 1
	movq	-224(%rbp), %rdx	# gap, tmp1589
	movq	-408(%rbp), %rax	# p, tmp1590
	movl	$32, %esi	#,
	movq	%rax, %rdi	# tmp1590,
	call	memset	#
	.loc 1 9328 0
	movq	-224(%rbp), %rax	# gap, tmp1591
	addq	%rax, -408(%rbp)	# tmp1591, p
.L2314:
	.loc 1 9330 0
	cmpb	$0, -506(%rbp)	#, vectorize
	je	.L2315	#,
	.loc 1 9331 0
	movq	-432(%rbp), %rax	# veclen, veclen.1315
	testq	%rax, %rax	# veclen.1315
	je	.L2316	#,
	.loc 1 9332 0
	movq	-424(%rbp), %rdx	# dotstrlen, dotstrlen.1316
	movq	-288(%rbp), %rcx	# dotstr, tmp1592
	movq	-408(%rbp), %rax	# p, tmp1593
	movq	%rcx, %rsi	# tmp1592,
	movq	%rax, %rdi	# tmp1593,
	call	memcpy	#
	.loc 1 9333 0
	movq	-424(%rbp), %rax	# dotstrlen, dotstrlen.1317
	addq	%rax, -408(%rbp)	# dotstrlen.1317, p
	jmp	.L2315	#
.L2316:
	.loc 1 9336 0
	movb	$0, -506(%rbp)	#, vectorize
.L2315:
	.loc 1 9338 0
	cmpb	$0, -499(%rbp)	#, is_utf8
	je	.L2317	#,
	.loc 1 9339 0
	movb	$1, -509(%rbp)	#, has_utf8
.L2317:
	.loc 1 9340 0
	cmpb	$0, -509(%rbp)	#, has_utf8
	je	.L2318	#,
	.loc 1 9341 0
	movq	-520(%rbp), %rax	# sv, tmp1594
	movl	12(%rax), %eax	# sv_269(D)->sv_flags, D.23389
	orl	$536870912, %eax	#, D.23389
	movl	%eax, %edx	# D.23389, D.23389
	movq	-520(%rbp), %rax	# sv, tmp1595
	movl	%edx, 12(%rax)	# D.23389, sv_269(D)->sv_flags
.L2318:
	.loc 1 9342 0
	movq	-408(%rbp), %rax	# p, tmp1596
	movb	$0, (%rax)	#, *p_11
	.loc 1 9343 0
	movq	-520(%rbp), %rax	# sv, tmp1597
	movq	(%rax), %rax	# sv_269(D)->sv_any, D.23392
	movq	-408(%rbp), %rcx	# p, p.1318
	movq	-520(%rbp), %rdx	# sv, tmp1598
	movq	(%rdx), %rdx	# sv_269(D)->sv_any, D.23392
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_1359].xpv_pv, D.23401
	subq	%rdx, %rcx	# D.23397, D.23397
	movq	%rcx, %rdx	# D.23397, D.23397
	movq	%rdx, 8(%rax)	# D.23398, MEM[(struct XPV *)_1357].xpv_cur
	.loc 1 9344 0
	cmpb	$0, -506(%rbp)	#, vectorize
	je	.L2320	#,
	.loc 1 9345 0
	movq	$0, -344(%rbp)	#, esignlen
	.loc 1 9346 0
	jmp	.L2178	#
.L2320:
.LBE137:
	.loc 1 8442 0
	movq	-456(%rbp), %rax	# q, tmp1599
	movq	%rax, -408(%rbp)	# tmp1599, p
.L1990:
	.loc 1 8442 0 is_stmt 0 discriminator 1
	movq	-408(%rbp), %rax	# p, tmp1600
	cmpq	-264(%rbp), %rax	# patend, tmp1600
	jb	.L2321	#,
.L1955:
	.loc 1 9349 0 is_stmt 1
	movq	-24(%rbp), %rax	# D.23413, tmp1607
	xorq	%fs:40, %rax	#, tmp1607
	je	.L2323	#,
	call	__stack_chk_fail	#
.L2323:
	addq	$600, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE186:
	.size	Perl_sv_vcatpvfn, .-Perl_sv_vcatpvfn
	.section	.rodata
.LC81:
	.string	"decode"
	.text
	.globl	Perl_sv_recode_to_utf8
	.type	Perl_sv_recode_to_utf8, @function
Perl_sv_recode_to_utf8:
.LFB187:
	.loc 1 11600 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# sv, sv
	movq	%rsi, -64(%rbp)	# encoding, encoding
	.loc 1 11601 0
	movq	-56(%rbp), %rax	# sv, tmp135
	movl	12(%rax), %eax	# sv_7(D)->sv_flags, D.23432
	andl	$262144, %eax	#, D.23432
	testl	%eax, %eax	# D.23432
	je	.L2332	#,
	.loc 1 11601 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp136
	movl	12(%rax), %eax	# sv_7(D)->sv_flags, D.23432
	andl	$536870912, %eax	#, D.23432
	testl	%eax, %eax	# D.23432
	jne	.L2332	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1319
	movzbl	37(%rax), %eax	# PL_curcop.1319_12->op_private, D.23433
	movzbl	%al, %eax	# D.23433, D.23434
	andl	$8, %eax	#, D.23434
	testl	%eax, %eax	# D.23434
	jne	.L2332	#,
	movq	-64(%rbp), %rax	# encoding, tmp137
	movl	12(%rax), %eax	# encoding_16(D)->sv_flags, D.23432
	andl	$524288, %eax	#, D.23432
	testl	%eax, %eax	# D.23432
	je	.L2332	#,
.LBB138:
	.loc 1 11605 0 is_stmt 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 11606 0
	call	Perl_push_scope	#
	.loc 1 11607 0
	movl	$PL_tmps_floor, %edi	#,
	call	Perl_save_int	#
	movl	PL_tmps_ix(%rip), %eax	# PL_tmps_ix, PL_tmps_ix.1320
	movl	%eax, PL_tmps_floor(%rip)	# PL_tmps_ix.1320, PL_tmps_floor
	.loc 1 11608 0
	call	Perl_save_re_context	#
.LBB139:
	.loc 1 11609 0
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1321
	addq	$4, %rax	#, PL_markstack_ptr.1322
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1322, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.1323
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.1324
	cmpq	%rax, %rdx	# PL_markstack_max.1324, PL_markstack_ptr.1323
	jne	.L2333	#,
	.loc 1 11609 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L2333:
	.loc 1 11609 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1325
	movq	%rbx, %rcx	# sp, sp.1326
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1327
	subq	%rdx, %rcx	# PL_stack_base.1328, D.23435
	movq	%rcx, %rdx	# D.23435, D.23435
	sarq	$3, %rdx	#, tmp138
	movl	%edx, (%rax)	# D.23434, *PL_markstack_ptr.1325_25
.LBE139:
	.loc 1 11610 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1329
	movq	%rax, %rdx	# PL_stack_max.1329, PL_stack_max.1330
	movq	%rbx, %rax	# sp, sp.1331
	subq	%rax, %rdx	# sp.1331, D.23435
	movq	%rdx, %rax	# D.23435, D.23435
	cmpq	$23, %rax	#, D.23435
	jg	.L2334	#,
	.loc 1 11610 0 is_stmt 0 discriminator 1
	movl	$3, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2334:
.LBB140:
	.loc 1 11611 0 is_stmt 1
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1332
	movq	%rax, %rdx	# PL_stack_max.1332, PL_stack_max.1333
	movq	%rbx, %rax	# sp, sp.1334
	subq	%rax, %rdx	# sp.1334, D.23435
	movq	%rdx, %rax	# D.23435, D.23435
	cmpq	$7, %rax	#, D.23435
	jg	.L2335	#,
	.loc 1 11611 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2335:
	.loc 1 11611 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-64(%rbp), %rax	# encoding, tmp139
	movq	%rax, (%rbx)	# tmp139, *sp_43
.LBE140:
.LBB141:
	.loc 1 11612 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1335
	movq	%rax, %rdx	# PL_stack_max.1335, PL_stack_max.1336
	movq	%rbx, %rax	# sp, sp.1337
	subq	%rax, %rdx	# sp.1337, D.23435
	movq	%rdx, %rax	# D.23435, D.23435
	cmpq	$7, %rax	#, D.23435
	jg	.L2336	#,
	.loc 1 11612 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2336:
	.loc 1 11612 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-56(%rbp), %rax	# sv, tmp140
	movq	%rax, (%rbx)	# tmp140, *sp_50
.LBE141:
	.loc 1 11623 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 11624 0 discriminator 2
	movl	$0, %esi	#,
	movl	$.LC81, %edi	#,
	call	Perl_call_method	#
	.loc 1 11625 0 discriminator 2
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 11626 0 discriminator 2
	movq	%rbx, %rax	# sp, sp.1338
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1338_53, tmp141
	movq	%rax, -32(%rbp)	# tmp141, uni
	.loc 1 11627 0 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 11628 0 discriminator 2
	movq	-32(%rbp), %rax	# uni, tmp142
	movl	12(%rax), %eax	# uni_55->sv_flags, D.23432
	andl	$262144, %eax	#, D.23432
	testl	%eax, %eax	# D.23432
	je	.L2337	#,
	.loc 1 11628 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# uni, tmp143
	movq	(%rax), %rax	# uni_55->sv_any, D.23438
	movq	8(%rax), %rax	# MEM[(struct XPV *)_58].xpv_cur, len.1340
	movq	%rax, -40(%rbp)	# len.1340, len
	movq	-32(%rbp), %rax	# uni, tmp144
	movq	(%rax), %rax	# uni_55->sv_any, D.23438
	movq	(%rax), %rax	# MEM[(struct XPV *)_60].xpv_pv, iftmp.1339
	jmp	.L2338	#
.L2337:
	.loc 1 11628 0 discriminator 2
	leaq	-40(%rbp), %rcx	#, tmp145
	movq	-32(%rbp), %rax	# uni, tmp146
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp145,
	movq	%rax, %rdi	# tmp146,
	call	Perl_sv_2pv_flags	#
.L2338:
	.loc 1 11628 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1339, s
	.loc 1 11629 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# sv, tmp147
	movq	(%rax), %rax	# sv_7(D)->sv_any, D.23438
	movq	(%rax), %rax	# MEM[(struct XPV *)_64].xpv_pv, D.23431
	cmpq	-24(%rbp), %rax	# s, D.23431
	je	.L2339	#,
	.loc 1 11630 0
	movq	-56(%rbp), %rax	# sv, tmp148
	movq	(%rax), %rax	# sv_7(D)->sv_any, D.23438
	movq	16(%rax), %rax	# MEM[(struct XPV *)_66].xpv_len, D.23439
	movq	-40(%rbp), %rdx	# len, len.1342
	addq	$1, %rdx	#, D.23439
	cmpq	%rdx, %rax	# D.23439, D.23439
	jae	.L2341	#,
	.loc 1 11630 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# len, len.1343
	leaq	1(%rax), %rdx	#, D.23439
	movq	-56(%rbp), %rax	# sv, tmp149
	movq	%rdx, %rsi	# D.23439,
	movq	%rax, %rdi	# tmp149,
	call	Perl_sv_grow	#
.L2341:
	.loc 1 11631 0 is_stmt 1
	movq	-40(%rbp), %rdx	# len, len.1344
	movq	-56(%rbp), %rax	# sv, tmp151
	movq	(%rax), %rax	# sv_7(D)->sv_any, D.23438
	movq	(%rax), %rax	# MEM[(struct XPV *)_76].xpv_pv, D.23431
	movq	-24(%rbp), %rcx	# s, tmp152
	movq	%rcx, %rsi	# tmp152,
	movq	%rax, %rdi	# D.23431,
	call	memmove	#
	.loc 1 11632 0
	movq	-56(%rbp), %rax	# sv, tmp153
	movq	(%rax), %rax	# sv_7(D)->sv_any, D.23438
	movq	-40(%rbp), %rdx	# len, len.1345
	movq	%rdx, 8(%rax)	# len.1345, MEM[(struct XPV *)_78].xpv_cur
	.loc 1 11633 0
	movq	-56(%rbp), %rax	# sv, tmp154
	movq	(%rax), %rax	# sv_7(D)->sv_any, D.23438
	movq	(%rax), %rdx	# MEM[(struct XPV *)_80].xpv_pv, D.23431
	movq	-40(%rbp), %rax	# len, len.1346
	addq	%rdx, %rax	# D.23431, D.23431
	movb	$0, (%rax)	#, *_83
.L2339:
	.loc 1 11635 0
	movl	PL_tmps_ix(%rip), %edx	# PL_tmps_ix, PL_tmps_ix.1347
	movl	PL_tmps_floor(%rip), %eax	# PL_tmps_floor, PL_tmps_floor.1348
	cmpl	%eax, %edx	# PL_tmps_floor.1348, PL_tmps_ix.1347
	jle	.L2342	#,
	.loc 1 11635 0 is_stmt 0 discriminator 1
	call	Perl_free_tmps	#
.L2342:
	.loc 1 11636 0 is_stmt 1
	call	Perl_pop_scope	#
	.loc 1 11637 0
	movq	-56(%rbp), %rax	# sv, tmp155
	movl	12(%rax), %eax	# sv_7(D)->sv_flags, D.23432
	orl	$536870912, %eax	#, D.23432
	movl	%eax, %edx	# D.23432, D.23432
	movq	-56(%rbp), %rax	# sv, tmp156
	movl	%edx, 12(%rax)	# D.23432, sv_7(D)->sv_flags
	.loc 1 11638 0
	movq	-56(%rbp), %rax	# sv, tmp157
	movq	(%rax), %rax	# sv_7(D)->sv_any, D.23438
	movq	(%rax), %rax	# MEM[(struct XPV *)_88].xpv_pv, D.23431
	jmp	.L2343	#
.L2332:
.LBE138:
	.loc 1 11640 0
	movq	-56(%rbp), %rax	# sv, tmp158
	movl	12(%rax), %eax	# sv_7(D)->sv_flags, D.23432
	andl	$67108864, %eax	#, D.23432
	testl	%eax, %eax	# D.23432
	je	.L2344	#,
	.loc 1 11640 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp159
	movq	(%rax), %rax	# sv_7(D)->sv_any, D.23438
	movq	(%rax), %rax	# MEM[(struct XPV *)_92].xpv_pv, iftmp.1349
	jmp	.L2345	#
.L2344:
	.loc 1 11640 0 discriminator 2
	movl	$0, %eax	#, iftmp.1349
.L2345:
.L2343:
	.loc 1 11641 0 is_stmt 1
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE187:
	.size	Perl_sv_recode_to_utf8, .-Perl_sv_recode_to_utf8
	.section	.rodata
.LC82:
	.string	"cat_decode"
	.align 8
.LC83:
	.string	"Invalid argument to sv_cat_decode"
	.text
	.globl	Perl_sv_cat_decode
	.type	Perl_sv_cat_decode, @function
Perl_sv_cat_decode:
.LFB188:
	.loc 1 11661 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# dsv, dsv
	movq	%rsi, -48(%rbp)	# encoding, encoding
	movq	%rdx, -56(%rbp)	# ssv, ssv
	movq	%rcx, -64(%rbp)	# offset, offset
	movq	%r8, -72(%rbp)	# tstr, tstr
	movl	%r9d, -76(%rbp)	# tlen, tlen
	.loc 1 11662 0
	movb	$0, -25(%rbp)	#, ret
	.loc 1 11663 0
	movq	-56(%rbp), %rax	# ssv, tmp158
	movl	12(%rax), %eax	# ssv_15(D)->sv_flags, D.23441
	andl	$262144, %eax	#, D.23441
	testl	%eax, %eax	# D.23441
	je	.L2347	#,
	.loc 1 11663 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# dsv, tmp159
	movl	12(%rax), %eax	# dsv_18(D)->sv_flags, D.23441
	andl	$262144, %eax	#, D.23441
	testl	%eax, %eax	# D.23441
	je	.L2347	#,
	movq	-48(%rbp), %rax	# encoding, tmp160
	movl	12(%rax), %eax	# encoding_21(D)->sv_flags, D.23441
	andl	$524288, %eax	#, D.23441
	testl	%eax, %eax	# D.23441
	je	.L2347	#,
	cmpq	$0, -64(%rbp)	#, offset
	je	.L2347	#,
.LBB142:
	.loc 1 11665 0 is_stmt 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 11666 0
	call	Perl_push_scope	#
	.loc 1 11667 0
	movl	$PL_tmps_floor, %edi	#,
	call	Perl_save_int	#
	movl	PL_tmps_ix(%rip), %eax	# PL_tmps_ix, PL_tmps_ix.1350
	movl	%eax, PL_tmps_floor(%rip)	# PL_tmps_ix.1350, PL_tmps_floor
	.loc 1 11668 0
	call	Perl_save_re_context	#
.LBB143:
	.loc 1 11669 0
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1351
	addq	$4, %rax	#, PL_markstack_ptr.1352
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1352, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.1353
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.1354
	cmpq	%rax, %rdx	# PL_markstack_max.1354, PL_markstack_ptr.1353
	jne	.L2348	#,
	.loc 1 11669 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L2348:
	.loc 1 11669 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1355
	movq	%rbx, %rcx	# sp, sp.1356
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1357
	subq	%rdx, %rcx	# PL_stack_base.1358, D.23442
	movq	%rcx, %rdx	# D.23442, D.23442
	sarq	$3, %rdx	#, tmp161
	movl	%edx, (%rax)	# D.23443, *PL_markstack_ptr.1355_31
.LBE143:
	.loc 1 11670 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1359
	movq	%rax, %rdx	# PL_stack_max.1359, PL_stack_max.1360
	movq	%rbx, %rax	# sp, sp.1361
	subq	%rax, %rdx	# sp.1361, D.23442
	movq	%rdx, %rax	# D.23442, D.23442
	cmpq	$47, %rax	#, D.23442
	jg	.L2349	#,
	.loc 1 11670 0 is_stmt 0 discriminator 1
	movl	$6, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2349:
.LBB144:
	.loc 1 11671 0 is_stmt 1
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1362
	movq	%rax, %rdx	# PL_stack_max.1362, PL_stack_max.1363
	movq	%rbx, %rax	# sp, sp.1364
	subq	%rax, %rdx	# sp.1364, D.23442
	movq	%rdx, %rax	# D.23442, D.23442
	cmpq	$7, %rax	#, D.23442
	jg	.L2350	#,
	.loc 1 11671 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2350:
	.loc 1 11671 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-48(%rbp), %rax	# encoding, tmp162
	movq	%rax, (%rbx)	# tmp162, *sp_49
.LBE144:
.LBB145:
	.loc 1 11672 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1365
	movq	%rax, %rdx	# PL_stack_max.1365, PL_stack_max.1366
	movq	%rbx, %rax	# sp, sp.1367
	subq	%rax, %rdx	# sp.1367, D.23442
	movq	%rdx, %rax	# D.23442, D.23442
	cmpq	$7, %rax	#, D.23442
	jg	.L2351	#,
	.loc 1 11672 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2351:
	.loc 1 11672 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# dsv, tmp163
	movq	%rax, (%rbx)	# tmp163, *sp_56
.LBE145:
.LBB146:
	.loc 1 11673 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1368
	movq	%rax, %rdx	# PL_stack_max.1368, PL_stack_max.1369
	movq	%rbx, %rax	# sp, sp.1370
	subq	%rax, %rdx	# sp.1370, D.23442
	movq	%rdx, %rax	# D.23442, D.23442
	cmpq	$7, %rax	#, D.23442
	jg	.L2352	#,
	.loc 1 11673 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2352:
	.loc 1 11673 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-56(%rbp), %rax	# ssv, tmp164
	movq	%rax, (%rbx)	# tmp164, *sp_63
.LBE146:
.LBB147:
	.loc 1 11674 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1371
	movq	%rax, %rdx	# PL_stack_max.1371, PL_stack_max.1372
	movq	%rbx, %rax	# sp, sp.1373
	subq	%rax, %rdx	# sp.1373, D.23442
	movq	%rdx, %rax	# D.23442, D.23442
	cmpq	$7, %rax	#, D.23442
	jg	.L2353	#,
	.loc 1 11674 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2353:
	.loc 1 11674 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-64(%rbp), %rax	# offset, tmp165
	movl	(%rax), %eax	# *offset_24(D), D.23443
	cltq
	movq	%rax, %rdi	# D.23442,
	call	Perl_newSViv	#
	movq	%rax, %rdi	# D.23445,
	call	Perl_sv_2mortal	#
	movq	%rax, -24(%rbp)	# tmp166, offsv
	movq	-24(%rbp), %rax	# offsv, tmp167
	movq	%rax, (%rbx)	# tmp167, *sp_70
.LBE147:
.LBB148:
	.loc 1 11675 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1374
	movq	%rax, %rdx	# PL_stack_max.1374, PL_stack_max.1375
	movq	%rbx, %rax	# sp, sp.1376
	subq	%rax, %rdx	# sp.1376, D.23442
	movq	%rdx, %rax	# D.23442, D.23442
	cmpq	$7, %rax	#, D.23442
	jg	.L2354	#,
	.loc 1 11675 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2354:
	.loc 1 11675 0 discriminator 2
	addq	$8, %rbx	#, sp
	movl	-76(%rbp), %eax	# tlen, tmp168
	movslq	%eax, %rdx	# tmp168, D.23446
	movq	-72(%rbp), %rax	# tstr, tmp169
	movq	%rdx, %rsi	# D.23446,
	movq	%rax, %rdi	# tmp169,
	call	Perl_newSVpvn	#
	movq	%rax, %rdi	# D.23445,
	call	Perl_sv_2mortal	#
	movq	%rax, (%rbx)	# D.23445, *sp_81
.LBE148:
	.loc 1 11676 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 11677 0 discriminator 2
	movl	$0, %esi	#,
	movl	$.LC82, %edi	#,
	call	Perl_call_method	#
	.loc 1 11678 0 discriminator 2
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 11679 0 discriminator 2
	movq	(%rbx), %rax	# *sp_88, D.23445
	testq	%rax, %rax	# D.23445
	je	.L2355	#,
	.loc 1 11679 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_88, D.23445
	movl	12(%rax), %eax	# _90->sv_flags, D.23441
	andl	$262144, %eax	#, D.23441
	testl	%eax, %eax	# D.23441
	je	.L2356	#,
	.loc 1 11679 0 discriminator 3
	movq	(%rbx), %rax	# *sp_88, D.23445
	movq	(%rax), %rax	# _93->sv_any, PL_Xpv.1380
	movq	%rax, PL_Xpv(%rip)	# PL_Xpv.1380, PL_Xpv
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.1381
	testq	%rax, %rax	# PL_Xpv.1381
	je	.L2357	#,
	.loc 1 11679 0 discriminator 1
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.1382
	movq	8(%rax), %rax	# PL_Xpv.1382_96->xpv_cur, D.23446
	cmpq	$1, %rax	#, D.23446
	ja	.L2358	#,
	.loc 1 11679 0 discriminator 4
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.1383
	movq	8(%rax), %rax	# PL_Xpv.1383_98->xpv_cur, D.23446
	testq	%rax, %rax	# D.23446
	je	.L2357	#,
	.loc 1 11679 0 discriminator 1
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.1384
	movq	(%rax), %rax	# PL_Xpv.1384_100->xpv_pv, D.23447
	movzbl	(%rax), %eax	# *_101, D.23448
	cmpb	$48, %al	#, D.23448
	je	.L2357	#,
.L2358:
	.loc 1 11679 0 discriminator 3
	movl	$1, %eax	#, iftmp.1379
	jmp	.L2359	#
.L2357:
	.loc 1 11679 0 discriminator 2
	movl	$0, %eax	#, iftmp.1379
.L2359:
	jmp	.L2365	#
.L2356:
	.loc 1 11679 0 discriminator 4
	movq	(%rbx), %rax	# *sp_88, D.23445
	movl	12(%rax), %eax	# _106->sv_flags, D.23441
	andl	$65536, %eax	#, D.23441
	testl	%eax, %eax	# D.23441
	je	.L2361	#,
	.loc 1 11679 0 discriminator 5
	movq	(%rbx), %rax	# *sp_88, D.23445
	movq	(%rax), %rax	# _109->sv_any, D.23449
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_110].xiv_iv, D.23442
	testq	%rax, %rax	# D.23442
	setne	%al	#, D.23450
	jmp	.L2365	#
.L2361:
	.loc 1 11679 0 discriminator 6
	movq	(%rbx), %rax	# *sp_88, D.23445
	movl	12(%rax), %eax	# _114->sv_flags, D.23441
	andl	$131072, %eax	#, D.23441
	testl	%eax, %eax	# D.23441
	je	.L2363	#,
	.loc 1 11679 0 discriminator 7
	movq	(%rbx), %rax	# *sp_88, D.23445
	movq	(%rax), %rax	# _117->sv_any, D.23449
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_118].xnv_nv, D.23451
	xorpd	%xmm1, %xmm1	# tmp171
	ucomisd	%xmm1, %xmm0	# tmp171, D.23451
	setp	%dl	#, tmp170
	movl	$1, %eax	#, tmp173
	xorpd	%xmm1, %xmm1	# tmp172
	ucomisd	%xmm1, %xmm0	# tmp172, D.23451
	cmove	%edx, %eax	# tmp170,, D.23450
	jmp	.L2365	#
.L2363:
	.loc 1 11679 0 discriminator 8
	movq	(%rbx), %rax	# *sp_88, D.23445
	movq	%rax, %rdi	# D.23445,
	call	Perl_sv_2bool	#
	jmp	.L2365	#
.L2355:
	.loc 1 11679 0 discriminator 2
	movl	$0, %eax	#, iftmp.1377
.L2365:
	.loc 1 11679 0 discriminator 11
	movb	%al, -25(%rbp)	# iftmp.1377, ret
	.loc 1 11680 0 is_stmt 1 discriminator 11
	movq	-24(%rbp), %rax	# offsv, tmp174
	movl	12(%rax), %eax	# offsv_74->sv_flags, D.23441
	andl	$65536, %eax	#, D.23441
	testl	%eax, %eax	# D.23441
	je	.L2366	#,
	.loc 1 11680 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# offsv, tmp175
	movq	(%rax), %rax	# offsv_74->sv_any, D.23449
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_131].xiv_iv, D.23442
	jmp	.L2367	#
.L2366:
	.loc 1 11680 0 discriminator 2
	movq	-24(%rbp), %rax	# offsv, tmp176
	movq	%rax, %rdi	# tmp176,
	call	Perl_sv_2iv	#
.L2367:
	.loc 1 11680 0 discriminator 3
	movq	-64(%rbp), %rdx	# offset, tmp177
	movl	%eax, (%rdx)	# iftmp.1387, *offset_24(D)
	.loc 1 11681 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 11682 0 discriminator 3
	movl	PL_tmps_ix(%rip), %edx	# PL_tmps_ix, PL_tmps_ix.1388
	movl	PL_tmps_floor(%rip), %eax	# PL_tmps_floor, PL_tmps_floor.1389
	cmpl	%eax, %edx	# PL_tmps_floor.1389, PL_tmps_ix.1388
	jle	.L2368	#,
	.loc 1 11682 0 is_stmt 0 discriminator 1
	call	Perl_free_tmps	#
.L2368:
	.loc 1 11683 0 is_stmt 1
	call	Perl_pop_scope	#
.LBE142:
	.loc 1 11663 0
	jmp	.L2369	#
.L2347:
	.loc 1 11686 0
	movl	$.LC83, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2369:
	.loc 1 11687 0
	movzbl	-25(%rbp), %eax	# ret, D.23448
	.loc 1 11688 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE188:
	.size	Perl_sv_cat_decode, .-Perl_sv_cat_decode
	.data
	.type	nullstr.11958, @object
	.size	nullstr.11958, 7
nullstr.11958:
	.string	"(null)"
	.section	.rodata
	.type	prifldbl.12115, @object
	.size	prifldbl.12115, 3
prifldbl.12115:
	.string	"Lf"
	.align 8
.LC9:
	.long	0
	.long	-1008730112
	.align 8
.LC10:
	.long	0
	.long	1139802112
	.align 8
.LC11:
	.long	0
	.long	1138753536
	.align 16
.LC12:
	.long	0
	.long	-2147483648
	.long	0
	.long	0
	.align 8
.LC57:
	.long	0
	.long	1072693248
	.align 8
.LC68:
	.long	0
	.long	1071644672
	.text
.Letext0:
	.file 2 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 3 "/usr/include/x86_64-linux-gnu/sys/types.h"
	.file 4 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
	.file 5 "/usr/include/time.h"
	.file 6 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h"
	.file 7 "<built-in>"
	.file 8 "/usr/include/x86_64-linux-gnu/bits/stat.h"
	.file 9 "/usr/include/dirent.h"
	.file 10 "perl.h"
	.file 11 "op.h"
	.file 12 "cop.h"
	.file 13 "sv.h"
	.file 14 "regexp.h"
	.file 15 "gv.h"
	.file 16 "mg.h"
	.file 17 "av.h"
	.file 18 "hv.h"
	.file 19 "cv.h"
	.file 20 "handy.h"
	.file 21 "perlio.h"
	.file 22 "regcomp.h"
	.file 23 "/usr/include/ctype.h"
	.file 24 "pad.h"
	.file 25 "utf8.h"
	.file 26 "opcode.h"
	.file 27 "intrpvar.h"
	.file 28 "thrdvar.h"
	.file 29 "perlvars.h"
	.file 30 "opnames.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x74f9
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF1269
	.byte	0x1
	.long	.LASF1270
	.long	.LASF1271
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.long	.LASF0
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.long	.LASF1
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.long	.LASF2
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF3
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x4
	.long	.LASF7
	.byte	0x2
	.byte	0x85
	.long	0x42
	.uleb128 0x4
	.long	.LASF8
	.byte	0x2
	.byte	0x86
	.long	0x3b
	.uleb128 0x4
	.long	.LASF9
	.byte	0x2
	.byte	0x87
	.long	0x3b
	.uleb128 0x4
	.long	.LASF10
	.byte	0x2
	.byte	0x88
	.long	0x42
	.uleb128 0x4
	.long	.LASF11
	.byte	0x2
	.byte	0x8a
	.long	0x3b
	.uleb128 0x4
	.long	.LASF12
	.byte	0x2
	.byte	0x8b
	.long	0x42
	.uleb128 0x4
	.long	.LASF13
	.byte	0x2
	.byte	0x8c
	.long	0x5e
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF14
	.uleb128 0x4
	.long	.LASF15
	.byte	0x2
	.byte	0x94
	.long	0x5e
	.uleb128 0x5
	.byte	0x8
	.uleb128 0x4
	.long	.LASF16
	.byte	0x2
	.byte	0xa2
	.long	0x5e
	.uleb128 0x4
	.long	.LASF17
	.byte	0x2
	.byte	0xa7
	.long	0x5e
	.uleb128 0x4
	.long	.LASF18
	.byte	0x2
	.byte	0xb5
	.long	0x5e
	.uleb128 0x4
	.long	.LASF19
	.byte	0x2
	.byte	0xb8
	.long	0x5e
	.uleb128 0x6
	.byte	0x8
	.long	0xf8
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF20
	.uleb128 0x4
	.long	.LASF21
	.byte	0x3
	.byte	0x56
	.long	0xa7
	.uleb128 0x4
	.long	.LASF22
	.byte	0x3
	.byte	0x6d
	.long	0xdc
	.uleb128 0x4
	.long	.LASF23
	.byte	0x4
	.byte	0xd4
	.long	0x42
	.uleb128 0x7
	.long	.LASF29
	.byte	0x10
	.byte	0x5
	.byte	0x78
	.long	0x145
	.uleb128 0x8
	.long	.LASF24
	.byte	0x5
	.byte	0x7a
	.long	0xb9
	.byte	0
	.uleb128 0x8
	.long	.LASF25
	.byte	0x5
	.byte	0x7b
	.long	0xe7
	.byte	0x8
	.byte	0
	.uleb128 0x9
	.long	0xf8
	.long	0x155
	.uleb128 0xa
	.long	0xb2
	.byte	0x3
	.byte	0
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF26
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF27
	.uleb128 0x4
	.long	.LASF28
	.byte	0x6
	.byte	0x28
	.long	0x16e
	.uleb128 0x9
	.long	0x17e
	.long	0x17e
	.uleb128 0xa
	.long	0xb2
	.byte	0
	.byte	0
	.uleb128 0x7
	.long	.LASF30
	.byte	0x18
	.byte	0x7
	.byte	0
	.long	0x1bb
	.uleb128 0x8
	.long	.LASF31
	.byte	0x7
	.byte	0
	.long	0x3b
	.byte	0
	.uleb128 0x8
	.long	.LASF32
	.byte	0x7
	.byte	0
	.long	0x3b
	.byte	0x4
	.uleb128 0x8
	.long	.LASF33
	.byte	0x7
	.byte	0
	.long	0xc4
	.byte	0x8
	.uleb128 0x8
	.long	.LASF34
	.byte	0x7
	.byte	0
	.long	0xc4
	.byte	0x10
	.byte	0
	.uleb128 0x4
	.long	.LASF35
	.byte	0x6
	.byte	0x62
	.long	0x163
	.uleb128 0xb
	.byte	0x4
	.byte	0x17
	.byte	0x30
	.long	0x222
	.uleb128 0xc
	.long	.LASF36
	.sleb128 256
	.uleb128 0xc
	.long	.LASF37
	.sleb128 512
	.uleb128 0xc
	.long	.LASF38
	.sleb128 1024
	.uleb128 0xc
	.long	.LASF39
	.sleb128 2048
	.uleb128 0xc
	.long	.LASF40
	.sleb128 4096
	.uleb128 0xc
	.long	.LASF41
	.sleb128 8192
	.uleb128 0xc
	.long	.LASF42
	.sleb128 16384
	.uleb128 0xc
	.long	.LASF43
	.sleb128 32768
	.uleb128 0xc
	.long	.LASF44
	.sleb128 1
	.uleb128 0xc
	.long	.LASF45
	.sleb128 2
	.uleb128 0xc
	.long	.LASF46
	.sleb128 4
	.uleb128 0xc
	.long	.LASF47
	.sleb128 8
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x228
	.uleb128 0xd
	.long	0xf8
	.uleb128 0x6
	.byte	0x8
	.long	0x57
	.uleb128 0x7
	.long	.LASF48
	.byte	0x90
	.byte	0x8
	.byte	0x2e
	.long	0x2f4
	.uleb128 0x8
	.long	.LASF49
	.byte	0x8
	.byte	0x30
	.long	0x65
	.byte	0
	.uleb128 0x8
	.long	.LASF50
	.byte	0x8
	.byte	0x35
	.long	0x86
	.byte	0x8
	.uleb128 0x8
	.long	.LASF51
	.byte	0x8
	.byte	0x3d
	.long	0x9c
	.byte	0x10
	.uleb128 0x8
	.long	.LASF52
	.byte	0x8
	.byte	0x3e
	.long	0x91
	.byte	0x18
	.uleb128 0x8
	.long	.LASF53
	.byte	0x8
	.byte	0x40
	.long	0x70
	.byte	0x1c
	.uleb128 0x8
	.long	.LASF54
	.byte	0x8
	.byte	0x41
	.long	0x7b
	.byte	0x20
	.uleb128 0x8
	.long	.LASF55
	.byte	0x8
	.byte	0x43
	.long	0x57
	.byte	0x24
	.uleb128 0x8
	.long	.LASF56
	.byte	0x8
	.byte	0x45
	.long	0x65
	.byte	0x28
	.uleb128 0x8
	.long	.LASF57
	.byte	0x8
	.byte	0x4a
	.long	0xa7
	.byte	0x30
	.uleb128 0x8
	.long	.LASF58
	.byte	0x8
	.byte	0x4e
	.long	0xc6
	.byte	0x38
	.uleb128 0x8
	.long	.LASF59
	.byte	0x8
	.byte	0x50
	.long	0xd1
	.byte	0x40
	.uleb128 0x8
	.long	.LASF60
	.byte	0x8
	.byte	0x5b
	.long	0x120
	.byte	0x48
	.uleb128 0x8
	.long	.LASF61
	.byte	0x8
	.byte	0x5c
	.long	0x120
	.byte	0x58
	.uleb128 0x8
	.long	.LASF62
	.byte	0x8
	.byte	0x5d
	.long	0x120
	.byte	0x68
	.uleb128 0x8
	.long	.LASF63
	.byte	0x8
	.byte	0x6a
	.long	0x2f4
	.byte	0x78
	.byte	0
	.uleb128 0x9
	.long	0xe7
	.long	0x304
	.uleb128 0xa
	.long	0xb2
	.byte	0x2
	.byte	0
	.uleb128 0x9
	.long	0xf8
	.long	0x314
	.uleb128 0xa
	.long	0xb2
	.byte	0xff
	.byte	0
	.uleb128 0xe
	.string	"DIR"
	.byte	0x9
	.byte	0x80
	.long	0x31f
	.uleb128 0xf
	.long	.LASF263
	.uleb128 0x10
	.string	"IV"
	.byte	0xa
	.value	0x52b
	.long	0x5e
	.uleb128 0x10
	.string	"UV"
	.byte	0xa
	.value	0x52c
	.long	0x42
	.uleb128 0x10
	.string	"NV"
	.byte	0xa
	.value	0x5f3
	.long	0x345
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.long	.LASF64
	.uleb128 0x11
	.long	.LASF65
	.byte	0xa
	.value	0x7d3
	.long	0x115
	.uleb128 0x10
	.string	"OP"
	.byte	0xa
	.value	0x7d5
	.long	0x363
	.uleb128 0x12
	.string	"op"
	.byte	0x28
	.byte	0xb
	.byte	0xe2
	.long	0x3cf
	.uleb128 0x8
	.long	.LASF66
	.byte	0xb
	.byte	0xe3
	.long	0x1417
	.byte	0
	.uleb128 0x8
	.long	.LASF67
	.byte	0xb
	.byte	0xe3
	.long	0x1417
	.byte	0x8
	.uleb128 0x8
	.long	.LASF68
	.byte	0xb
	.byte	0xe3
	.long	0x1e1a
	.byte	0x10
	.uleb128 0x8
	.long	.LASF69
	.byte	0xb
	.byte	0xe3
	.long	0x1490
	.byte	0x18
	.uleb128 0x8
	.long	.LASF70
	.byte	0xb
	.byte	0xe3
	.long	0x1238
	.byte	0x20
	.uleb128 0x8
	.long	.LASF71
	.byte	0xb
	.byte	0xe3
	.long	0x1238
	.byte	0x22
	.uleb128 0x8
	.long	.LASF72
	.byte	0xb
	.byte	0xe3
	.long	0x122e
	.byte	0x24
	.uleb128 0x8
	.long	.LASF73
	.byte	0xb
	.byte	0xe3
	.long	0x122e
	.byte	0x25
	.byte	0
	.uleb128 0x10
	.string	"COP"
	.byte	0xa
	.value	0x7d6
	.long	0x3db
	.uleb128 0x12
	.string	"cop"
	.byte	0x60
	.byte	0xc
	.byte	0x10
	.long	0x4a8
	.uleb128 0x8
	.long	.LASF66
	.byte	0xc
	.byte	0x11
	.long	0x1417
	.byte	0
	.uleb128 0x8
	.long	.LASF67
	.byte	0xc
	.byte	0x11
	.long	0x1417
	.byte	0x8
	.uleb128 0x8
	.long	.LASF68
	.byte	0xc
	.byte	0x11
	.long	0x1e1a
	.byte	0x10
	.uleb128 0x8
	.long	.LASF69
	.byte	0xc
	.byte	0x11
	.long	0x1490
	.byte	0x18
	.uleb128 0x8
	.long	.LASF70
	.byte	0xc
	.byte	0x11
	.long	0x1238
	.byte	0x20
	.uleb128 0x8
	.long	.LASF71
	.byte	0xc
	.byte	0x11
	.long	0x1238
	.byte	0x22
	.uleb128 0x8
	.long	.LASF72
	.byte	0xc
	.byte	0x11
	.long	0x122e
	.byte	0x24
	.uleb128 0x8
	.long	.LASF73
	.byte	0xc
	.byte	0x11
	.long	0x122e
	.byte	0x25
	.uleb128 0x8
	.long	.LASF74
	.byte	0xc
	.byte	0x12
	.long	0xf2
	.byte	0x28
	.uleb128 0x8
	.long	.LASF75
	.byte	0xc
	.byte	0x17
	.long	0x13ff
	.byte	0x30
	.uleb128 0x8
	.long	.LASF76
	.byte	0xc
	.byte	0x18
	.long	0x1434
	.byte	0x38
	.uleb128 0x8
	.long	.LASF77
	.byte	0xc
	.byte	0x1a
	.long	0x124e
	.byte	0x40
	.uleb128 0x8
	.long	.LASF78
	.byte	0xc
	.byte	0x1b
	.long	0x1243
	.byte	0x44
	.uleb128 0x8
	.long	.LASF79
	.byte	0xc
	.byte	0x1c
	.long	0x1259
	.byte	0x48
	.uleb128 0x8
	.long	.LASF80
	.byte	0xc
	.byte	0x1d
	.long	0x1276
	.byte	0x50
	.uleb128 0x8
	.long	.LASF81
	.byte	0xc
	.byte	0x1e
	.long	0x1276
	.byte	0x58
	.byte	0
	.uleb128 0x11
	.long	.LASF82
	.byte	0xa
	.value	0x7db
	.long	0x4b4
	.uleb128 0x7
	.long	.LASF83
	.byte	0x70
	.byte	0xb
	.byte	0xfd
	.long	0x5a2
	.uleb128 0x8
	.long	.LASF66
	.byte	0xb
	.byte	0xfe
	.long	0x1417
	.byte	0
	.uleb128 0x8
	.long	.LASF67
	.byte	0xb
	.byte	0xfe
	.long	0x1417
	.byte	0x8
	.uleb128 0x8
	.long	.LASF68
	.byte	0xb
	.byte	0xfe
	.long	0x1e1a
	.byte	0x10
	.uleb128 0x8
	.long	.LASF69
	.byte	0xb
	.byte	0xfe
	.long	0x1490
	.byte	0x18
	.uleb128 0x8
	.long	.LASF70
	.byte	0xb
	.byte	0xfe
	.long	0x1238
	.byte	0x20
	.uleb128 0x8
	.long	.LASF71
	.byte	0xb
	.byte	0xfe
	.long	0x1238
	.byte	0x22
	.uleb128 0x8
	.long	.LASF72
	.byte	0xb
	.byte	0xfe
	.long	0x122e
	.byte	0x24
	.uleb128 0x8
	.long	.LASF73
	.byte	0xb
	.byte	0xfe
	.long	0x122e
	.byte	0x25
	.uleb128 0x8
	.long	.LASF84
	.byte	0xb
	.byte	0xff
	.long	0x1417
	.byte	0x28
	.uleb128 0x13
	.long	.LASF85
	.byte	0xb
	.value	0x100
	.long	0x1417
	.byte	0x30
	.uleb128 0x13
	.long	.LASF86
	.byte	0xb
	.value	0x101
	.long	0x1417
	.byte	0x38
	.uleb128 0x13
	.long	.LASF87
	.byte	0xb
	.value	0x102
	.long	0x1417
	.byte	0x40
	.uleb128 0x13
	.long	.LASF88
	.byte	0xb
	.value	0x103
	.long	0x1e20
	.byte	0x48
	.uleb128 0x13
	.long	.LASF89
	.byte	0xb
	.value	0x107
	.long	0x1e26
	.byte	0x50
	.uleb128 0x13
	.long	.LASF90
	.byte	0xb
	.value	0x109
	.long	0x124e
	.byte	0x58
	.uleb128 0x13
	.long	.LASF91
	.byte	0xb
	.value	0x10a
	.long	0x124e
	.byte	0x5c
	.uleb128 0x13
	.long	.LASF92
	.byte	0xb
	.value	0x10b
	.long	0x122e
	.byte	0x60
	.uleb128 0x13
	.long	.LASF93
	.byte	0xb
	.value	0x10f
	.long	0x13ff
	.byte	0x68
	.byte	0
	.uleb128 0x11
	.long	.LASF94
	.byte	0xa
	.value	0x7e1
	.long	0x5ae
	.uleb128 0x14
	.long	.LASF95
	.byte	0x1
	.byte	0xa
	.value	0xea7
	.long	0x5c9
	.uleb128 0x13
	.long	.LASF96
	.byte	0xa
	.value	0xea8
	.long	0xf8
	.byte	0
	.byte	0
	.uleb128 0x10
	.string	"SV"
	.byte	0xa
	.value	0x7ea
	.long	0x5d4
	.uleb128 0x12
	.string	"sv"
	.byte	0x10
	.byte	0xd
	.byte	0x43
	.long	0x604
	.uleb128 0x8
	.long	.LASF97
	.byte	0xd
	.byte	0x44
	.long	0xc4
	.byte	0
	.uleb128 0x8
	.long	.LASF98
	.byte	0xd
	.byte	0x45
	.long	0x124e
	.byte	0x8
	.uleb128 0x8
	.long	.LASF99
	.byte	0xd
	.byte	0x46
	.long	0x124e
	.byte	0xc
	.byte	0
	.uleb128 0x10
	.string	"AV"
	.byte	0xa
	.value	0x7eb
	.long	0x60f
	.uleb128 0x12
	.string	"av"
	.byte	0x10
	.byte	0xd
	.byte	0x55
	.long	0x63f
	.uleb128 0x8
	.long	.LASF97
	.byte	0xd
	.byte	0x56
	.long	0x13e7
	.byte	0
	.uleb128 0x8
	.long	.LASF98
	.byte	0xd
	.byte	0x57
	.long	0x124e
	.byte	0x8
	.uleb128 0x8
	.long	.LASF99
	.byte	0xd
	.byte	0x58
	.long	0x124e
	.byte	0xc
	.byte	0
	.uleb128 0x10
	.string	"HV"
	.byte	0xa
	.value	0x7ec
	.long	0x64a
	.uleb128 0x12
	.string	"hv"
	.byte	0x10
	.byte	0xd
	.byte	0x5b
	.long	0x67a
	.uleb128 0x8
	.long	.LASF97
	.byte	0xd
	.byte	0x5c
	.long	0x13ed
	.byte	0
	.uleb128 0x8
	.long	.LASF98
	.byte	0xd
	.byte	0x5d
	.long	0x124e
	.byte	0x8
	.uleb128 0x8
	.long	.LASF99
	.byte	0xd
	.byte	0x5e
	.long	0x124e
	.byte	0xc
	.byte	0
	.uleb128 0x10
	.string	"CV"
	.byte	0xa
	.value	0x7ed
	.long	0x685
	.uleb128 0x12
	.string	"cv"
	.byte	0x10
	.byte	0xd
	.byte	0x4f
	.long	0x6b5
	.uleb128 0x8
	.long	.LASF97
	.byte	0xd
	.byte	0x50
	.long	0x13e1
	.byte	0
	.uleb128 0x8
	.long	.LASF98
	.byte	0xd
	.byte	0x51
	.long	0x124e
	.byte	0x8
	.uleb128 0x8
	.long	.LASF99
	.byte	0xd
	.byte	0x52
	.long	0x124e
	.byte	0xc
	.byte	0
	.uleb128 0x11
	.long	.LASF100
	.byte	0xa
	.value	0x7ee
	.long	0x6c1
	.uleb128 0x7
	.long	.LASF101
	.byte	0x68
	.byte	0xe
	.byte	0x1f
	.long	0x79a
	.uleb128 0x8
	.long	.LASF102
	.byte	0xe
	.byte	0x20
	.long	0x12e9
	.byte	0
	.uleb128 0x8
	.long	.LASF103
	.byte	0xe
	.byte	0x21
	.long	0x12e9
	.byte	0x8
	.uleb128 0x8
	.long	.LASF104
	.byte	0xe
	.byte	0x22
	.long	0x12ef
	.byte	0x10
	.uleb128 0x8
	.long	.LASF105
	.byte	0xe
	.byte	0x23
	.long	0x1310
	.byte	0x18
	.uleb128 0x8
	.long	.LASF106
	.byte	0xe
	.byte	0x24
	.long	0xf2
	.byte	0x20
	.uleb128 0x8
	.long	.LASF107
	.byte	0xe
	.byte	0x25
	.long	0x134b
	.byte	0x28
	.uleb128 0x8
	.long	.LASF108
	.byte	0xe
	.byte	0x26
	.long	0xf2
	.byte	0x30
	.uleb128 0x8
	.long	.LASF109
	.byte	0xe
	.byte	0x28
	.long	0x1351
	.byte	0x38
	.uleb128 0x8
	.long	.LASF110
	.byte	0xe
	.byte	0x29
	.long	0x1243
	.byte	0x40
	.uleb128 0x8
	.long	.LASF111
	.byte	0xe
	.byte	0x2a
	.long	0x1243
	.byte	0x44
	.uleb128 0x8
	.long	.LASF112
	.byte	0xe
	.byte	0x2b
	.long	0x1243
	.byte	0x48
	.uleb128 0x8
	.long	.LASF113
	.byte	0xe
	.byte	0x2c
	.long	0x1243
	.byte	0x4c
	.uleb128 0x8
	.long	.LASF114
	.byte	0xe
	.byte	0x2d
	.long	0x124e
	.byte	0x50
	.uleb128 0x8
	.long	.LASF115
	.byte	0xe
	.byte	0x2e
	.long	0x124e
	.byte	0x54
	.uleb128 0x8
	.long	.LASF116
	.byte	0xe
	.byte	0x2f
	.long	0x124e
	.byte	0x58
	.uleb128 0x8
	.long	.LASF117
	.byte	0xe
	.byte	0x30
	.long	0x124e
	.byte	0x5c
	.uleb128 0x8
	.long	.LASF118
	.byte	0xe
	.byte	0x32
	.long	0x1357
	.byte	0x60
	.byte	0
	.uleb128 0x10
	.string	"GP"
	.byte	0xa
	.value	0x7ef
	.long	0x7a5
	.uleb128 0x12
	.string	"gp"
	.byte	0x58
	.byte	0xf
	.byte	0xb
	.long	0x841
	.uleb128 0x8
	.long	.LASF119
	.byte	0xf
	.byte	0xc
	.long	0x1276
	.byte	0
	.uleb128 0x8
	.long	.LASF120
	.byte	0xf
	.byte	0xd
	.long	0x124e
	.byte	0x8
	.uleb128 0x8
	.long	.LASF121
	.byte	0xf
	.byte	0xe
	.long	0x1474
	.byte	0x10
	.uleb128 0x8
	.long	.LASF122
	.byte	0xf
	.byte	0xf
	.long	0x1428
	.byte	0x18
	.uleb128 0x8
	.long	.LASF123
	.byte	0xf
	.byte	0x10
	.long	0x143a
	.byte	0x20
	.uleb128 0x8
	.long	.LASF124
	.byte	0xf
	.byte	0x11
	.long	0x13ff
	.byte	0x28
	.uleb128 0x8
	.long	.LASF125
	.byte	0xf
	.byte	0x12
	.long	0x1434
	.byte	0x30
	.uleb128 0x8
	.long	.LASF126
	.byte	0xf
	.byte	0x13
	.long	0x1428
	.byte	0x38
	.uleb128 0x8
	.long	.LASF127
	.byte	0xf
	.byte	0x14
	.long	0x124e
	.byte	0x40
	.uleb128 0x8
	.long	.LASF128
	.byte	0xf
	.byte	0x15
	.long	0x124e
	.byte	0x44
	.uleb128 0x8
	.long	.LASF129
	.byte	0xf
	.byte	0x16
	.long	0x1259
	.byte	0x48
	.uleb128 0x8
	.long	.LASF130
	.byte	0xf
	.byte	0x17
	.long	0xf2
	.byte	0x50
	.byte	0
	.uleb128 0x10
	.string	"GV"
	.byte	0xa
	.value	0x7f0
	.long	0x84c
	.uleb128 0x12
	.string	"gv"
	.byte	0x10
	.byte	0xd
	.byte	0x49
	.long	0x87c
	.uleb128 0x8
	.long	.LASF97
	.byte	0xd
	.byte	0x4a
	.long	0x13db
	.byte	0
	.uleb128 0x8
	.long	.LASF98
	.byte	0xd
	.byte	0x4b
	.long	0x124e
	.byte	0x8
	.uleb128 0x8
	.long	.LASF99
	.byte	0xd
	.byte	0x4c
	.long	0x124e
	.byte	0xc
	.byte	0
	.uleb128 0x10
	.string	"IO"
	.byte	0xa
	.value	0x7f1
	.long	0x887
	.uleb128 0x12
	.string	"io"
	.byte	0x10
	.byte	0xd
	.byte	0x61
	.long	0x8b7
	.uleb128 0x8
	.long	.LASF97
	.byte	0xd
	.byte	0x62
	.long	0x13f3
	.byte	0
	.uleb128 0x8
	.long	.LASF98
	.byte	0xd
	.byte	0x63
	.long	0x124e
	.byte	0x8
	.uleb128 0x8
	.long	.LASF99
	.byte	0xd
	.byte	0x64
	.long	0x124e
	.byte	0xc
	.byte	0
	.uleb128 0x11
	.long	.LASF131
	.byte	0xa
	.value	0x7f2
	.long	0x8c3
	.uleb128 0x14
	.long	.LASF132
	.byte	0x90
	.byte	0xc
	.value	0x1a2
	.long	0x8eb
	.uleb128 0x13
	.long	.LASF133
	.byte	0xc
	.value	0x1a3
	.long	0x124e
	.byte	0
	.uleb128 0x13
	.long	.LASF134
	.byte	0xc
	.value	0x1a7
	.long	0x208d
	.byte	0x8
	.byte	0
	.uleb128 0x14
	.long	.LASF135
	.byte	0x88
	.byte	0xc
	.value	0x130
	.long	0x961
	.uleb128 0x13
	.long	.LASF136
	.byte	0xc
	.value	0x131
	.long	0x1243
	.byte	0
	.uleb128 0x13
	.long	.LASF137
	.byte	0xc
	.value	0x132
	.long	0x1fc3
	.byte	0x8
	.uleb128 0x13
	.long	.LASF138
	.byte	0xc
	.value	0x133
	.long	0x1243
	.byte	0x10
	.uleb128 0x13
	.long	.LASF139
	.byte	0xc
	.value	0x134
	.long	0x1243
	.byte	0x14
	.uleb128 0x13
	.long	.LASF140
	.byte	0xc
	.value	0x135
	.long	0x1243
	.byte	0x18
	.uleb128 0x13
	.long	.LASF141
	.byte	0xc
	.value	0x136
	.long	0x1e20
	.byte	0x20
	.uleb128 0x13
	.long	.LASF142
	.byte	0xc
	.value	0x137
	.long	0x122e
	.byte	0x28
	.uleb128 0x13
	.long	.LASF143
	.byte	0xc
	.value	0x13d
	.long	0x1f95
	.byte	0x30
	.byte	0
	.uleb128 0x11
	.long	.LASF144
	.byte	0xa
	.value	0x7f5
	.long	0x96d
	.uleb128 0x7
	.long	.LASF145
	.byte	0x30
	.byte	0x10
	.byte	0x1a
	.long	0x9da
	.uleb128 0x8
	.long	.LASF146
	.byte	0x10
	.byte	0x1b
	.long	0x13f9
	.byte	0
	.uleb128 0x8
	.long	.LASF147
	.byte	0x10
	.byte	0x1c
	.long	0x223c
	.byte	0x8
	.uleb128 0x8
	.long	.LASF148
	.byte	0x10
	.byte	0x1d
	.long	0x1238
	.byte	0x10
	.uleb128 0x8
	.long	.LASF149
	.byte	0x10
	.byte	0x1e
	.long	0xf8
	.byte	0x12
	.uleb128 0x8
	.long	.LASF150
	.byte	0x10
	.byte	0x1f
	.long	0x122e
	.byte	0x13
	.uleb128 0x8
	.long	.LASF151
	.byte	0x10
	.byte	0x20
	.long	0x1276
	.byte	0x18
	.uleb128 0x8
	.long	.LASF152
	.byte	0x10
	.byte	0x21
	.long	0xf2
	.byte	0x20
	.uleb128 0x8
	.long	.LASF153
	.byte	0x10
	.byte	0x22
	.long	0x1243
	.byte	0x28
	.byte	0
	.uleb128 0x10
	.string	"XRV"
	.byte	0xa
	.value	0x7f6
	.long	0x9e6
	.uleb128 0x12
	.string	"xrv"
	.byte	0x8
	.byte	0xd
	.byte	0xf5
	.long	0x9ff
	.uleb128 0x8
	.long	.LASF154
	.byte	0xd
	.byte	0xf6
	.long	0x1276
	.byte	0
	.byte	0
	.uleb128 0x10
	.string	"XPV"
	.byte	0xa
	.value	0x7f7
	.long	0xa0b
	.uleb128 0x12
	.string	"xpv"
	.byte	0x18
	.byte	0xd
	.byte	0xf9
	.long	0xa3c
	.uleb128 0x8
	.long	.LASF155
	.byte	0xd
	.byte	0xfa
	.long	0xf2
	.byte	0
	.uleb128 0x8
	.long	.LASF156
	.byte	0xd
	.byte	0xfb
	.long	0x34c
	.byte	0x8
	.uleb128 0x8
	.long	.LASF157
	.byte	0xd
	.byte	0xfc
	.long	0x34c
	.byte	0x10
	.byte	0
	.uleb128 0x11
	.long	.LASF158
	.byte	0xa
	.value	0x7f8
	.long	0xa48
	.uleb128 0x7
	.long	.LASF159
	.byte	0x20
	.byte	0xd
	.byte	0xff
	.long	0xa89
	.uleb128 0x13
	.long	.LASF155
	.byte	0xd
	.value	0x100
	.long	0xf2
	.byte	0
	.uleb128 0x13
	.long	.LASF156
	.byte	0xd
	.value	0x101
	.long	0x34c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF157
	.byte	0xd
	.value	0x102
	.long	0x34c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF160
	.byte	0xd
	.value	0x103
	.long	0x324
	.byte	0x18
	.byte	0
	.uleb128 0x11
	.long	.LASF161
	.byte	0xa
	.value	0x7f9
	.long	0xa95
	.uleb128 0x14
	.long	.LASF162
	.byte	0x20
	.byte	0xd
	.value	0x106
	.long	0xad7
	.uleb128 0x13
	.long	.LASF155
	.byte	0xd
	.value	0x107
	.long	0xf2
	.byte	0
	.uleb128 0x13
	.long	.LASF156
	.byte	0xd
	.value	0x108
	.long	0x34c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF157
	.byte	0xd
	.value	0x109
	.long	0x34c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF163
	.byte	0xd
	.value	0x10a
	.long	0x32f
	.byte	0x18
	.byte	0
	.uleb128 0x11
	.long	.LASF164
	.byte	0xa
	.value	0x7fa
	.long	0xae3
	.uleb128 0x14
	.long	.LASF165
	.byte	0x28
	.byte	0xd
	.value	0x10d
	.long	0xb32
	.uleb128 0x13
	.long	.LASF155
	.byte	0xd
	.value	0x10e
	.long	0xf2
	.byte	0
	.uleb128 0x13
	.long	.LASF156
	.byte	0xd
	.value	0x10f
	.long	0x34c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF157
	.byte	0xd
	.value	0x110
	.long	0x34c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF160
	.byte	0xd
	.value	0x111
	.long	0x324
	.byte	0x18
	.uleb128 0x13
	.long	.LASF166
	.byte	0xd
	.value	0x112
	.long	0x33a
	.byte	0x20
	.byte	0
	.uleb128 0x11
	.long	.LASF167
	.byte	0xa
	.value	0x7fb
	.long	0xb3e
	.uleb128 0x14
	.long	.LASF168
	.byte	0x38
	.byte	0xd
	.value	0x116
	.long	0xba7
	.uleb128 0x13
	.long	.LASF155
	.byte	0xd
	.value	0x117
	.long	0xf2
	.byte	0
	.uleb128 0x13
	.long	.LASF156
	.byte	0xd
	.value	0x118
	.long	0x34c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF157
	.byte	0xd
	.value	0x119
	.long	0x34c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF160
	.byte	0xd
	.value	0x11a
	.long	0x324
	.byte	0x18
	.uleb128 0x13
	.long	.LASF166
	.byte	0xd
	.value	0x11b
	.long	0x33a
	.byte	0x20
	.uleb128 0x13
	.long	.LASF169
	.byte	0xd
	.value	0x11c
	.long	0x13f9
	.byte	0x28
	.uleb128 0x13
	.long	.LASF170
	.byte	0xd
	.value	0x11d
	.long	0x13ff
	.byte	0x30
	.byte	0
	.uleb128 0x11
	.long	.LASF171
	.byte	0xa
	.value	0x7fc
	.long	0xbb3
	.uleb128 0x14
	.long	.LASF172
	.byte	0x58
	.byte	0xd
	.value	0x120
	.long	0xc50
	.uleb128 0x13
	.long	.LASF155
	.byte	0xd
	.value	0x121
	.long	0xf2
	.byte	0
	.uleb128 0x13
	.long	.LASF156
	.byte	0xd
	.value	0x122
	.long	0x34c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF157
	.byte	0xd
	.value	0x123
	.long	0x34c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF160
	.byte	0xd
	.value	0x124
	.long	0x324
	.byte	0x18
	.uleb128 0x13
	.long	.LASF166
	.byte	0xd
	.value	0x125
	.long	0x33a
	.byte	0x20
	.uleb128 0x13
	.long	.LASF169
	.byte	0xd
	.value	0x126
	.long	0x13f9
	.byte	0x28
	.uleb128 0x13
	.long	.LASF170
	.byte	0xd
	.value	0x127
	.long	0x13ff
	.byte	0x30
	.uleb128 0x13
	.long	.LASF173
	.byte	0xd
	.value	0x129
	.long	0x34c
	.byte	0x38
	.uleb128 0x13
	.long	.LASF174
	.byte	0xd
	.value	0x12a
	.long	0x34c
	.byte	0x40
	.uleb128 0x13
	.long	.LASF175
	.byte	0xd
	.value	0x12b
	.long	0x1276
	.byte	0x48
	.uleb128 0x13
	.long	.LASF176
	.byte	0xd
	.value	0x12c
	.long	0xf8
	.byte	0x50
	.byte	0
	.uleb128 0x11
	.long	.LASF177
	.byte	0xa
	.value	0x7fd
	.long	0xc5c
	.uleb128 0x7
	.long	.LASF178
	.byte	0x50
	.byte	0x11
	.byte	0xb
	.long	0xce1
	.uleb128 0x8
	.long	.LASF179
	.byte	0x11
	.byte	0xc
	.long	0xf2
	.byte	0
	.uleb128 0x8
	.long	.LASF180
	.byte	0x11
	.byte	0xd
	.long	0x10a
	.byte	0x8
	.uleb128 0x8
	.long	.LASF181
	.byte	0x11
	.byte	0xe
	.long	0x10a
	.byte	0x10
	.uleb128 0x8
	.long	.LASF182
	.byte	0x11
	.byte	0xf
	.long	0x324
	.byte	0x18
	.uleb128 0x8
	.long	.LASF166
	.byte	0x11
	.byte	0x10
	.long	0x33a
	.byte	0x20
	.uleb128 0x8
	.long	.LASF169
	.byte	0x11
	.byte	0x11
	.long	0x13f9
	.byte	0x28
	.uleb128 0x8
	.long	.LASF170
	.byte	0x11
	.byte	0x12
	.long	0x13ff
	.byte	0x30
	.uleb128 0x8
	.long	.LASF183
	.byte	0x11
	.byte	0x14
	.long	0x1f8f
	.byte	0x38
	.uleb128 0x8
	.long	.LASF184
	.byte	0x11
	.byte	0x15
	.long	0x1276
	.byte	0x40
	.uleb128 0x8
	.long	.LASF185
	.byte	0x11
	.byte	0x16
	.long	0x122e
	.byte	0x48
	.byte	0
	.uleb128 0x11
	.long	.LASF186
	.byte	0xa
	.value	0x7fe
	.long	0xced
	.uleb128 0x7
	.long	.LASF187
	.byte	0x58
	.byte	0x12
	.byte	0x22
	.long	0xd7e
	.uleb128 0x8
	.long	.LASF188
	.byte	0x12
	.byte	0x23
	.long	0xf2
	.byte	0
	.uleb128 0x8
	.long	.LASF189
	.byte	0x12
	.byte	0x24
	.long	0x34c
	.byte	0x8
	.uleb128 0x8
	.long	.LASF190
	.byte	0x12
	.byte	0x25
	.long	0x34c
	.byte	0x10
	.uleb128 0x8
	.long	.LASF191
	.byte	0x12
	.byte	0x26
	.long	0x324
	.byte	0x18
	.uleb128 0x8
	.long	.LASF166
	.byte	0x12
	.byte	0x27
	.long	0x33a
	.byte	0x20
	.uleb128 0x8
	.long	.LASF169
	.byte	0x12
	.byte	0x29
	.long	0x13f9
	.byte	0x28
	.uleb128 0x8
	.long	.LASF170
	.byte	0x12
	.byte	0x2a
	.long	0x13ff
	.byte	0x30
	.uleb128 0x8
	.long	.LASF192
	.byte	0x12
	.byte	0x2c
	.long	0x1243
	.byte	0x38
	.uleb128 0x8
	.long	.LASF193
	.byte	0x12
	.byte	0x2d
	.long	0x21b3
	.byte	0x40
	.uleb128 0x8
	.long	.LASF194
	.byte	0x12
	.byte	0x2e
	.long	0x1e20
	.byte	0x48
	.uleb128 0x8
	.long	.LASF195
	.byte	0x12
	.byte	0x2f
	.long	0xf2
	.byte	0x50
	.byte	0
	.uleb128 0x11
	.long	.LASF196
	.byte	0xa
	.value	0x7ff
	.long	0xd8a
	.uleb128 0x14
	.long	.LASF197
	.byte	0x60
	.byte	0xd
	.value	0x130
	.long	0xe34
	.uleb128 0x13
	.long	.LASF155
	.byte	0xd
	.value	0x131
	.long	0xf2
	.byte	0
	.uleb128 0x13
	.long	.LASF156
	.byte	0xd
	.value	0x132
	.long	0x34c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF157
	.byte	0xd
	.value	0x133
	.long	0x34c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF160
	.byte	0xd
	.value	0x134
	.long	0x324
	.byte	0x18
	.uleb128 0x13
	.long	.LASF166
	.byte	0xd
	.value	0x135
	.long	0x33a
	.byte	0x20
	.uleb128 0x13
	.long	.LASF169
	.byte	0xd
	.value	0x136
	.long	0x13f9
	.byte	0x28
	.uleb128 0x13
	.long	.LASF170
	.byte	0xd
	.value	0x137
	.long	0x13ff
	.byte	0x30
	.uleb128 0x13
	.long	.LASF198
	.byte	0xd
	.value	0x139
	.long	0x1405
	.byte	0x38
	.uleb128 0x13
	.long	.LASF199
	.byte	0xd
	.value	0x13a
	.long	0xf2
	.byte	0x40
	.uleb128 0x13
	.long	.LASF200
	.byte	0xd
	.value	0x13b
	.long	0x34c
	.byte	0x48
	.uleb128 0x13
	.long	.LASF201
	.byte	0xd
	.value	0x13c
	.long	0x13ff
	.byte	0x50
	.uleb128 0x13
	.long	.LASF202
	.byte	0xd
	.value	0x13d
	.long	0x122e
	.byte	0x58
	.byte	0
	.uleb128 0x11
	.long	.LASF203
	.byte	0xa
	.value	0x800
	.long	0xe40
	.uleb128 0x7
	.long	.LASF204
	.byte	0x90
	.byte	0x13
	.byte	0xe
	.long	0xf31
	.uleb128 0x8
	.long	.LASF155
	.byte	0x13
	.byte	0xf
	.long	0xf2
	.byte	0
	.uleb128 0x8
	.long	.LASF156
	.byte	0x13
	.byte	0x10
	.long	0x34c
	.byte	0x8
	.uleb128 0x8
	.long	.LASF157
	.byte	0x13
	.byte	0x11
	.long	0x34c
	.byte	0x10
	.uleb128 0x8
	.long	.LASF182
	.byte	0x13
	.byte	0x12
	.long	0x324
	.byte	0x18
	.uleb128 0x8
	.long	.LASF166
	.byte	0x13
	.byte	0x13
	.long	0x33a
	.byte	0x20
	.uleb128 0x8
	.long	.LASF169
	.byte	0x13
	.byte	0x14
	.long	0x13f9
	.byte	0x28
	.uleb128 0x8
	.long	.LASF170
	.byte	0x13
	.byte	0x15
	.long	0x13ff
	.byte	0x30
	.uleb128 0x8
	.long	.LASF205
	.byte	0x13
	.byte	0x17
	.long	0x13ff
	.byte	0x38
	.uleb128 0x8
	.long	.LASF206
	.byte	0x13
	.byte	0x18
	.long	0x1417
	.byte	0x40
	.uleb128 0x8
	.long	.LASF207
	.byte	0x13
	.byte	0x19
	.long	0x1417
	.byte	0x48
	.uleb128 0x8
	.long	.LASF208
	.byte	0x13
	.byte	0x1a
	.long	0x142e
	.byte	0x50
	.uleb128 0x8
	.long	.LASF209
	.byte	0x13
	.byte	0x1b
	.long	0x117f
	.byte	0x58
	.uleb128 0x8
	.long	.LASF210
	.byte	0x13
	.byte	0x1c
	.long	0x1434
	.byte	0x60
	.uleb128 0x8
	.long	.LASF211
	.byte	0x13
	.byte	0x1d
	.long	0xf2
	.byte	0x68
	.uleb128 0x8
	.long	.LASF212
	.byte	0x13
	.byte	0x1e
	.long	0x5e
	.byte	0x70
	.uleb128 0x8
	.long	.LASF213
	.byte	0x13
	.byte	0x1f
	.long	0x149b
	.byte	0x78
	.uleb128 0x8
	.long	.LASF214
	.byte	0x13
	.byte	0x20
	.long	0x1428
	.byte	0x80
	.uleb128 0x8
	.long	.LASF215
	.byte	0x13
	.byte	0x25
	.long	0x140b
	.byte	0x88
	.uleb128 0x8
	.long	.LASF216
	.byte	0x13
	.byte	0x26
	.long	0x124e
	.byte	0x8c
	.byte	0
	.uleb128 0x11
	.long	.LASF217
	.byte	0xa
	.value	0x801
	.long	0xf3d
	.uleb128 0x14
	.long	.LASF218
	.byte	0x40
	.byte	0xd
	.value	0x140
	.long	0xfcd
	.uleb128 0x13
	.long	.LASF155
	.byte	0xd
	.value	0x141
	.long	0xf2
	.byte	0
	.uleb128 0x13
	.long	.LASF156
	.byte	0xd
	.value	0x142
	.long	0x34c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF157
	.byte	0xd
	.value	0x143
	.long	0x34c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF160
	.byte	0xd
	.value	0x144
	.long	0x324
	.byte	0x18
	.uleb128 0x13
	.long	.LASF166
	.byte	0xd
	.value	0x145
	.long	0x33a
	.byte	0x20
	.uleb128 0x13
	.long	.LASF169
	.byte	0xd
	.value	0x146
	.long	0x13f9
	.byte	0x28
	.uleb128 0x13
	.long	.LASF170
	.byte	0xd
	.value	0x147
	.long	0x13ff
	.byte	0x30
	.uleb128 0x13
	.long	.LASF219
	.byte	0xd
	.value	0x149
	.long	0x1243
	.byte	0x38
	.uleb128 0x13
	.long	.LASF220
	.byte	0xd
	.value	0x14a
	.long	0x1238
	.byte	0x3c
	.uleb128 0x13
	.long	.LASF221
	.byte	0xd
	.value	0x14b
	.long	0x122e
	.byte	0x3e
	.byte	0
	.uleb128 0x11
	.long	.LASF222
	.byte	0xa
	.value	0x803
	.long	0xfd9
	.uleb128 0x14
	.long	.LASF223
	.byte	0xa8
	.byte	0xd
	.value	0x170
	.long	0x1112
	.uleb128 0x13
	.long	.LASF155
	.byte	0xd
	.value	0x171
	.long	0xf2
	.byte	0
	.uleb128 0x13
	.long	.LASF156
	.byte	0xd
	.value	0x172
	.long	0x34c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF157
	.byte	0xd
	.value	0x173
	.long	0x34c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF160
	.byte	0xd
	.value	0x174
	.long	0x324
	.byte	0x18
	.uleb128 0x13
	.long	.LASF166
	.byte	0xd
	.value	0x175
	.long	0x33a
	.byte	0x20
	.uleb128 0x13
	.long	.LASF169
	.byte	0xd
	.value	0x176
	.long	0x13f9
	.byte	0x28
	.uleb128 0x13
	.long	.LASF170
	.byte	0xd
	.value	0x177
	.long	0x13ff
	.byte	0x30
	.uleb128 0x13
	.long	.LASF224
	.byte	0xd
	.value	0x179
	.long	0x1468
	.byte	0x38
	.uleb128 0x13
	.long	.LASF225
	.byte	0xd
	.value	0x17a
	.long	0x1468
	.byte	0x40
	.uleb128 0x13
	.long	.LASF226
	.byte	0xd
	.value	0x187
	.long	0x1440
	.byte	0x48
	.uleb128 0x13
	.long	.LASF227
	.byte	0xd
	.value	0x188
	.long	0x324
	.byte	0x50
	.uleb128 0x13
	.long	.LASF228
	.byte	0xd
	.value	0x189
	.long	0x324
	.byte	0x58
	.uleb128 0x13
	.long	.LASF229
	.byte	0xd
	.value	0x18a
	.long	0x324
	.byte	0x60
	.uleb128 0x13
	.long	.LASF230
	.byte	0xd
	.value	0x18b
	.long	0x324
	.byte	0x68
	.uleb128 0x13
	.long	.LASF231
	.byte	0xd
	.value	0x18c
	.long	0xf2
	.byte	0x70
	.uleb128 0x13
	.long	.LASF232
	.byte	0xd
	.value	0x18d
	.long	0x1434
	.byte	0x78
	.uleb128 0x13
	.long	.LASF233
	.byte	0xd
	.value	0x18e
	.long	0xf2
	.byte	0x80
	.uleb128 0x13
	.long	.LASF234
	.byte	0xd
	.value	0x18f
	.long	0x1434
	.byte	0x88
	.uleb128 0x13
	.long	.LASF235
	.byte	0xd
	.value	0x190
	.long	0xf2
	.byte	0x90
	.uleb128 0x13
	.long	.LASF236
	.byte	0xd
	.value	0x191
	.long	0x1434
	.byte	0x98
	.uleb128 0x13
	.long	.LASF237
	.byte	0xd
	.value	0x192
	.long	0x50
	.byte	0xa0
	.uleb128 0x13
	.long	.LASF238
	.byte	0xd
	.value	0x193
	.long	0xf8
	.byte	0xa2
	.uleb128 0x13
	.long	.LASF239
	.byte	0xd
	.value	0x194
	.long	0xf8
	.byte	0xa3
	.byte	0
	.uleb128 0x11
	.long	.LASF240
	.byte	0xa
	.value	0x804
	.long	0x111e
	.uleb128 0x7
	.long	.LASF241
	.byte	0x38
	.byte	0x10
	.byte	0xe
	.long	0x117f
	.uleb128 0x8
	.long	.LASF242
	.byte	0x10
	.byte	0xf
	.long	0x21d3
	.byte	0
	.uleb128 0x8
	.long	.LASF243
	.byte	0x10
	.byte	0x10
	.long	0x21d3
	.byte	0x8
	.uleb128 0x8
	.long	.LASF244
	.byte	0x10
	.byte	0x11
	.long	0x21ed
	.byte	0x10
	.uleb128 0x8
	.long	.LASF245
	.byte	0x10
	.byte	0x12
	.long	0x21d3
	.byte	0x18
	.uleb128 0x8
	.long	.LASF246
	.byte	0x10
	.byte	0x13
	.long	0x21d3
	.byte	0x20
	.uleb128 0x8
	.long	.LASF247
	.byte	0x10
	.byte	0x14
	.long	0x2216
	.byte	0x28
	.uleb128 0x8
	.long	.LASF248
	.byte	0x10
	.byte	0x16
	.long	0x2236
	.byte	0x30
	.byte	0
	.uleb128 0x10
	.string	"ANY"
	.byte	0xa
	.value	0x805
	.long	0x118b
	.uleb128 0x15
	.string	"any"
	.byte	0x8
	.byte	0xa
	.value	0x9f1
	.long	0x11ed
	.uleb128 0x16
	.long	.LASF249
	.byte	0xa
	.value	0x9f2
	.long	0xc4
	.uleb128 0x16
	.long	.LASF250
	.byte	0xa
	.value	0x9f3
	.long	0x1243
	.uleb128 0x16
	.long	.LASF251
	.byte	0xa
	.value	0x9f4
	.long	0x324
	.uleb128 0x16
	.long	.LASF252
	.byte	0xa
	.value	0x9f5
	.long	0x5e
	.uleb128 0x16
	.long	.LASF253
	.byte	0xa
	.value	0x9f6
	.long	0xf8
	.uleb128 0x16
	.long	.LASF254
	.byte	0xa
	.value	0x9f7
	.long	0x1270
	.uleb128 0x16
	.long	.LASF255
	.byte	0xa
	.value	0x9f8
	.long	0x1270
	.byte	0
	.uleb128 0x11
	.long	.LASF256
	.byte	0xa
	.value	0x808
	.long	0x11f9
	.uleb128 0x14
	.long	.LASF257
	.byte	0x18
	.byte	0xd
	.value	0x4ed
	.long	0x122e
	.uleb128 0x13
	.long	.LASF258
	.byte	0xd
	.value	0x4ee
	.long	0x143a
	.byte	0
	.uleb128 0x13
	.long	.LASF259
	.byte	0xd
	.value	0x4ef
	.long	0x32f
	.byte	0x8
	.uleb128 0x13
	.long	.LASF260
	.byte	0xd
	.value	0x4f0
	.long	0x146e
	.byte	0x10
	.byte	0
	.uleb128 0xe
	.string	"U8"
	.byte	0x14
	.byte	0x85
	.long	0x2d
	.uleb128 0xe
	.string	"U16"
	.byte	0x14
	.byte	0x87
	.long	0x34
	.uleb128 0xe
	.string	"I32"
	.byte	0x14
	.byte	0x88
	.long	0x57
	.uleb128 0xe
	.string	"U32"
	.byte	0x14
	.byte	0x89
	.long	0x3b
	.uleb128 0x11
	.long	.LASF261
	.byte	0x14
	.value	0x209
	.long	0x124e
	.uleb128 0x17
	.long	0x1270
	.uleb128 0x18
	.long	0xc4
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1265
	.uleb128 0x6
	.byte	0x8
	.long	0x5c9
	.uleb128 0x9
	.long	0xf8
	.long	0x128c
	.uleb128 0xa
	.long	0xb2
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	.LASF262
	.byte	0x15
	.byte	0x63
	.long	0x1297
	.uleb128 0xf
	.long	.LASF264
	.uleb128 0x4
	.long	.LASF265
	.byte	0x15
	.byte	0x65
	.long	0x12a7
	.uleb128 0x6
	.byte	0x8
	.long	0x128c
	.uleb128 0x7
	.long	.LASF266
	.byte	0x4
	.byte	0xe
	.byte	0x13
	.long	0x12de
	.uleb128 0x8
	.long	.LASF259
	.byte	0xe
	.byte	0x14
	.long	0x122e
	.byte	0
	.uleb128 0x8
	.long	.LASF267
	.byte	0xe
	.byte	0x15
	.long	0x122e
	.byte	0x1
	.uleb128 0x8
	.long	.LASF268
	.byte	0xe
	.byte	0x16
	.long	0x1238
	.byte	0x2
	.byte	0
	.uleb128 0x4
	.long	.LASF266
	.byte	0xe
	.byte	0x19
	.long	0x12ad
	.uleb128 0x6
	.byte	0x8
	.long	0x1243
	.uleb128 0x6
	.byte	0x8
	.long	0x12de
	.uleb128 0x14
	.long	.LASF269
	.byte	0x48
	.byte	0x16
	.value	0x18a
	.long	0x1310
	.uleb128 0x13
	.long	.LASF107
	.byte	0x16
	.value	0x18b
	.long	0x2469
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x12f5
	.uleb128 0x14
	.long	.LASF270
	.byte	0x18
	.byte	0x16
	.value	0x17d
	.long	0x134b
	.uleb128 0x13
	.long	.LASF271
	.byte	0x16
	.value	0x17e
	.long	0x124e
	.byte	0
	.uleb128 0x13
	.long	.LASF272
	.byte	0x16
	.value	0x17f
	.long	0x2411
	.byte	0x8
	.uleb128 0x13
	.long	.LASF107
	.byte	0x16
	.value	0x180
	.long	0x2417
	.byte	0x10
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1316
	.uleb128 0x6
	.byte	0x8
	.long	0x124e
	.uleb128 0x9
	.long	0x12de
	.long	0x1367
	.uleb128 0xa
	.long	0xb2
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	.LASF101
	.byte	0xe
	.byte	0x33
	.long	0x6c1
	.uleb128 0xb
	.byte	0x4
	.byte	0xd
	.byte	0x2e
	.long	0x13db
	.uleb128 0xc
	.long	.LASF273
	.sleb128 0
	.uleb128 0xc
	.long	.LASF274
	.sleb128 1
	.uleb128 0xc
	.long	.LASF275
	.sleb128 2
	.uleb128 0xc
	.long	.LASF276
	.sleb128 3
	.uleb128 0xc
	.long	.LASF277
	.sleb128 4
	.uleb128 0xc
	.long	.LASF278
	.sleb128 5
	.uleb128 0xc
	.long	.LASF279
	.sleb128 6
	.uleb128 0xc
	.long	.LASF280
	.sleb128 7
	.uleb128 0xc
	.long	.LASF281
	.sleb128 8
	.uleb128 0xc
	.long	.LASF282
	.sleb128 9
	.uleb128 0xc
	.long	.LASF283
	.sleb128 10
	.uleb128 0xc
	.long	.LASF284
	.sleb128 11
	.uleb128 0xc
	.long	.LASF285
	.sleb128 12
	.uleb128 0xc
	.long	.LASF286
	.sleb128 13
	.uleb128 0xc
	.long	.LASF287
	.sleb128 14
	.uleb128 0xc
	.long	.LASF288
	.sleb128 15
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xd7e
	.uleb128 0x6
	.byte	0x8
	.long	0xe34
	.uleb128 0x6
	.byte	0x8
	.long	0xc50
	.uleb128 0x6
	.byte	0x8
	.long	0xce1
	.uleb128 0x6
	.byte	0x8
	.long	0xfcd
	.uleb128 0x6
	.byte	0x8
	.long	0x961
	.uleb128 0x6
	.byte	0x8
	.long	0x63f
	.uleb128 0x6
	.byte	0x8
	.long	0x79a
	.uleb128 0x11
	.long	.LASF289
	.byte	0xd
	.value	0x150
	.long	0x1238
	.uleb128 0x6
	.byte	0x8
	.long	0x358
	.uleb128 0x17
	.long	0x1428
	.uleb128 0x18
	.long	0x1428
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x67a
	.uleb128 0x6
	.byte	0x8
	.long	0x141d
	.uleb128 0x6
	.byte	0x8
	.long	0x841
	.uleb128 0x6
	.byte	0x8
	.long	0x604
	.uleb128 0x19
	.byte	0x8
	.byte	0xd
	.value	0x184
	.long	0x1462
	.uleb128 0x16
	.long	.LASF290
	.byte	0xd
	.value	0x185
	.long	0x1462
	.uleb128 0x16
	.long	.LASF291
	.byte	0xd
	.value	0x186
	.long	0xc4
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x314
	.uleb128 0x6
	.byte	0x8
	.long	0x129c
	.uleb128 0x6
	.byte	0x8
	.long	0x5a2
	.uleb128 0x6
	.byte	0x8
	.long	0x887
	.uleb128 0x4
	.long	.LASF292
	.byte	0x18
	.byte	0x13
	.long	0x604
	.uleb128 0xe
	.string	"PAD"
	.byte	0x18
	.byte	0x14
	.long	0x604
	.uleb128 0x4
	.long	.LASF293
	.byte	0x18
	.byte	0x1d
	.long	0x42
	.uleb128 0x6
	.byte	0x8
	.long	0x147a
	.uleb128 0x1a
	.long	.LASF1272
	.byte	0x4
	.byte	0x1e
	.byte	0xf
	.long	0x1e15
	.uleb128 0xc
	.long	.LASF294
	.sleb128 0
	.uleb128 0xc
	.long	.LASF295
	.sleb128 1
	.uleb128 0xc
	.long	.LASF296
	.sleb128 2
	.uleb128 0xc
	.long	.LASF297
	.sleb128 3
	.uleb128 0xc
	.long	.LASF298
	.sleb128 4
	.uleb128 0xc
	.long	.LASF299
	.sleb128 5
	.uleb128 0xc
	.long	.LASF300
	.sleb128 6
	.uleb128 0xc
	.long	.LASF301
	.sleb128 7
	.uleb128 0xc
	.long	.LASF302
	.sleb128 8
	.uleb128 0xc
	.long	.LASF303
	.sleb128 9
	.uleb128 0xc
	.long	.LASF304
	.sleb128 10
	.uleb128 0xc
	.long	.LASF305
	.sleb128 11
	.uleb128 0xc
	.long	.LASF306
	.sleb128 12
	.uleb128 0xc
	.long	.LASF307
	.sleb128 13
	.uleb128 0xc
	.long	.LASF308
	.sleb128 14
	.uleb128 0xc
	.long	.LASF309
	.sleb128 15
	.uleb128 0xc
	.long	.LASF310
	.sleb128 16
	.uleb128 0xc
	.long	.LASF311
	.sleb128 17
	.uleb128 0xc
	.long	.LASF312
	.sleb128 18
	.uleb128 0xc
	.long	.LASF313
	.sleb128 19
	.uleb128 0xc
	.long	.LASF314
	.sleb128 20
	.uleb128 0xc
	.long	.LASF315
	.sleb128 21
	.uleb128 0xc
	.long	.LASF316
	.sleb128 22
	.uleb128 0xc
	.long	.LASF317
	.sleb128 23
	.uleb128 0xc
	.long	.LASF318
	.sleb128 24
	.uleb128 0xc
	.long	.LASF319
	.sleb128 25
	.uleb128 0xc
	.long	.LASF320
	.sleb128 26
	.uleb128 0xc
	.long	.LASF321
	.sleb128 27
	.uleb128 0xc
	.long	.LASF322
	.sleb128 28
	.uleb128 0xc
	.long	.LASF323
	.sleb128 29
	.uleb128 0xc
	.long	.LASF324
	.sleb128 30
	.uleb128 0xc
	.long	.LASF325
	.sleb128 31
	.uleb128 0xc
	.long	.LASF326
	.sleb128 32
	.uleb128 0xc
	.long	.LASF327
	.sleb128 33
	.uleb128 0xc
	.long	.LASF328
	.sleb128 34
	.uleb128 0xc
	.long	.LASF329
	.sleb128 35
	.uleb128 0xc
	.long	.LASF330
	.sleb128 36
	.uleb128 0xc
	.long	.LASF331
	.sleb128 37
	.uleb128 0xc
	.long	.LASF332
	.sleb128 38
	.uleb128 0xc
	.long	.LASF333
	.sleb128 39
	.uleb128 0xc
	.long	.LASF334
	.sleb128 40
	.uleb128 0xc
	.long	.LASF335
	.sleb128 41
	.uleb128 0xc
	.long	.LASF336
	.sleb128 42
	.uleb128 0xc
	.long	.LASF337
	.sleb128 43
	.uleb128 0xc
	.long	.LASF338
	.sleb128 44
	.uleb128 0xc
	.long	.LASF339
	.sleb128 45
	.uleb128 0xc
	.long	.LASF340
	.sleb128 46
	.uleb128 0xc
	.long	.LASF341
	.sleb128 47
	.uleb128 0xc
	.long	.LASF342
	.sleb128 48
	.uleb128 0xc
	.long	.LASF343
	.sleb128 49
	.uleb128 0xc
	.long	.LASF344
	.sleb128 50
	.uleb128 0xc
	.long	.LASF345
	.sleb128 51
	.uleb128 0xc
	.long	.LASF346
	.sleb128 52
	.uleb128 0xc
	.long	.LASF347
	.sleb128 53
	.uleb128 0xc
	.long	.LASF348
	.sleb128 54
	.uleb128 0xc
	.long	.LASF349
	.sleb128 55
	.uleb128 0xc
	.long	.LASF350
	.sleb128 56
	.uleb128 0xc
	.long	.LASF351
	.sleb128 57
	.uleb128 0xc
	.long	.LASF352
	.sleb128 58
	.uleb128 0xc
	.long	.LASF353
	.sleb128 59
	.uleb128 0xc
	.long	.LASF354
	.sleb128 60
	.uleb128 0xc
	.long	.LASF355
	.sleb128 61
	.uleb128 0xc
	.long	.LASF356
	.sleb128 62
	.uleb128 0xc
	.long	.LASF357
	.sleb128 63
	.uleb128 0xc
	.long	.LASF358
	.sleb128 64
	.uleb128 0xc
	.long	.LASF359
	.sleb128 65
	.uleb128 0xc
	.long	.LASF360
	.sleb128 66
	.uleb128 0xc
	.long	.LASF361
	.sleb128 67
	.uleb128 0xc
	.long	.LASF362
	.sleb128 68
	.uleb128 0xc
	.long	.LASF363
	.sleb128 69
	.uleb128 0xc
	.long	.LASF364
	.sleb128 70
	.uleb128 0xc
	.long	.LASF365
	.sleb128 71
	.uleb128 0xc
	.long	.LASF366
	.sleb128 72
	.uleb128 0xc
	.long	.LASF367
	.sleb128 73
	.uleb128 0xc
	.long	.LASF368
	.sleb128 74
	.uleb128 0xc
	.long	.LASF369
	.sleb128 75
	.uleb128 0xc
	.long	.LASF370
	.sleb128 76
	.uleb128 0xc
	.long	.LASF371
	.sleb128 77
	.uleb128 0xc
	.long	.LASF372
	.sleb128 78
	.uleb128 0xc
	.long	.LASF373
	.sleb128 79
	.uleb128 0xc
	.long	.LASF374
	.sleb128 80
	.uleb128 0xc
	.long	.LASF375
	.sleb128 81
	.uleb128 0xc
	.long	.LASF376
	.sleb128 82
	.uleb128 0xc
	.long	.LASF377
	.sleb128 83
	.uleb128 0xc
	.long	.LASF378
	.sleb128 84
	.uleb128 0xc
	.long	.LASF379
	.sleb128 85
	.uleb128 0xc
	.long	.LASF380
	.sleb128 86
	.uleb128 0xc
	.long	.LASF381
	.sleb128 87
	.uleb128 0xc
	.long	.LASF382
	.sleb128 88
	.uleb128 0xc
	.long	.LASF383
	.sleb128 89
	.uleb128 0xc
	.long	.LASF384
	.sleb128 90
	.uleb128 0xc
	.long	.LASF385
	.sleb128 91
	.uleb128 0xc
	.long	.LASF386
	.sleb128 92
	.uleb128 0xc
	.long	.LASF387
	.sleb128 93
	.uleb128 0xc
	.long	.LASF388
	.sleb128 94
	.uleb128 0xc
	.long	.LASF389
	.sleb128 95
	.uleb128 0xc
	.long	.LASF390
	.sleb128 96
	.uleb128 0xc
	.long	.LASF391
	.sleb128 97
	.uleb128 0xc
	.long	.LASF392
	.sleb128 98
	.uleb128 0xc
	.long	.LASF393
	.sleb128 99
	.uleb128 0xc
	.long	.LASF394
	.sleb128 100
	.uleb128 0xc
	.long	.LASF395
	.sleb128 101
	.uleb128 0xc
	.long	.LASF396
	.sleb128 102
	.uleb128 0xc
	.long	.LASF397
	.sleb128 103
	.uleb128 0xc
	.long	.LASF398
	.sleb128 104
	.uleb128 0xc
	.long	.LASF399
	.sleb128 105
	.uleb128 0xc
	.long	.LASF400
	.sleb128 106
	.uleb128 0xc
	.long	.LASF401
	.sleb128 107
	.uleb128 0xc
	.long	.LASF402
	.sleb128 108
	.uleb128 0xc
	.long	.LASF403
	.sleb128 109
	.uleb128 0xc
	.long	.LASF404
	.sleb128 110
	.uleb128 0xc
	.long	.LASF405
	.sleb128 111
	.uleb128 0xc
	.long	.LASF406
	.sleb128 112
	.uleb128 0xc
	.long	.LASF407
	.sleb128 113
	.uleb128 0xc
	.long	.LASF408
	.sleb128 114
	.uleb128 0xc
	.long	.LASF409
	.sleb128 115
	.uleb128 0xc
	.long	.LASF410
	.sleb128 116
	.uleb128 0xc
	.long	.LASF411
	.sleb128 117
	.uleb128 0xc
	.long	.LASF412
	.sleb128 118
	.uleb128 0xc
	.long	.LASF413
	.sleb128 119
	.uleb128 0xc
	.long	.LASF414
	.sleb128 120
	.uleb128 0xc
	.long	.LASF415
	.sleb128 121
	.uleb128 0xc
	.long	.LASF416
	.sleb128 122
	.uleb128 0xc
	.long	.LASF417
	.sleb128 123
	.uleb128 0xc
	.long	.LASF418
	.sleb128 124
	.uleb128 0xc
	.long	.LASF419
	.sleb128 125
	.uleb128 0xc
	.long	.LASF420
	.sleb128 126
	.uleb128 0xc
	.long	.LASF421
	.sleb128 127
	.uleb128 0xc
	.long	.LASF422
	.sleb128 128
	.uleb128 0xc
	.long	.LASF423
	.sleb128 129
	.uleb128 0xc
	.long	.LASF424
	.sleb128 130
	.uleb128 0xc
	.long	.LASF425
	.sleb128 131
	.uleb128 0xc
	.long	.LASF426
	.sleb128 132
	.uleb128 0xc
	.long	.LASF427
	.sleb128 133
	.uleb128 0xc
	.long	.LASF428
	.sleb128 134
	.uleb128 0xc
	.long	.LASF429
	.sleb128 135
	.uleb128 0xc
	.long	.LASF430
	.sleb128 136
	.uleb128 0xc
	.long	.LASF431
	.sleb128 137
	.uleb128 0xc
	.long	.LASF432
	.sleb128 138
	.uleb128 0xc
	.long	.LASF433
	.sleb128 139
	.uleb128 0xc
	.long	.LASF434
	.sleb128 140
	.uleb128 0xc
	.long	.LASF435
	.sleb128 141
	.uleb128 0xc
	.long	.LASF436
	.sleb128 142
	.uleb128 0xc
	.long	.LASF437
	.sleb128 143
	.uleb128 0xc
	.long	.LASF438
	.sleb128 144
	.uleb128 0xc
	.long	.LASF439
	.sleb128 145
	.uleb128 0xc
	.long	.LASF440
	.sleb128 146
	.uleb128 0xc
	.long	.LASF441
	.sleb128 147
	.uleb128 0xc
	.long	.LASF442
	.sleb128 148
	.uleb128 0xc
	.long	.LASF443
	.sleb128 149
	.uleb128 0xc
	.long	.LASF444
	.sleb128 150
	.uleb128 0xc
	.long	.LASF445
	.sleb128 151
	.uleb128 0xc
	.long	.LASF446
	.sleb128 152
	.uleb128 0xc
	.long	.LASF447
	.sleb128 153
	.uleb128 0xc
	.long	.LASF448
	.sleb128 154
	.uleb128 0xc
	.long	.LASF449
	.sleb128 155
	.uleb128 0xc
	.long	.LASF450
	.sleb128 156
	.uleb128 0xc
	.long	.LASF451
	.sleb128 157
	.uleb128 0xc
	.long	.LASF452
	.sleb128 158
	.uleb128 0xc
	.long	.LASF453
	.sleb128 159
	.uleb128 0xc
	.long	.LASF454
	.sleb128 160
	.uleb128 0xc
	.long	.LASF455
	.sleb128 161
	.uleb128 0xc
	.long	.LASF456
	.sleb128 162
	.uleb128 0xc
	.long	.LASF457
	.sleb128 163
	.uleb128 0xc
	.long	.LASF458
	.sleb128 164
	.uleb128 0xc
	.long	.LASF459
	.sleb128 165
	.uleb128 0xc
	.long	.LASF460
	.sleb128 166
	.uleb128 0xc
	.long	.LASF461
	.sleb128 167
	.uleb128 0xc
	.long	.LASF462
	.sleb128 168
	.uleb128 0xc
	.long	.LASF463
	.sleb128 169
	.uleb128 0xc
	.long	.LASF464
	.sleb128 170
	.uleb128 0xc
	.long	.LASF465
	.sleb128 171
	.uleb128 0xc
	.long	.LASF466
	.sleb128 172
	.uleb128 0xc
	.long	.LASF467
	.sleb128 173
	.uleb128 0xc
	.long	.LASF468
	.sleb128 174
	.uleb128 0xc
	.long	.LASF469
	.sleb128 175
	.uleb128 0xc
	.long	.LASF470
	.sleb128 176
	.uleb128 0xc
	.long	.LASF471
	.sleb128 177
	.uleb128 0xc
	.long	.LASF472
	.sleb128 178
	.uleb128 0xc
	.long	.LASF473
	.sleb128 179
	.uleb128 0xc
	.long	.LASF474
	.sleb128 180
	.uleb128 0xc
	.long	.LASF475
	.sleb128 181
	.uleb128 0xc
	.long	.LASF476
	.sleb128 182
	.uleb128 0xc
	.long	.LASF477
	.sleb128 183
	.uleb128 0xc
	.long	.LASF478
	.sleb128 184
	.uleb128 0xc
	.long	.LASF479
	.sleb128 185
	.uleb128 0xc
	.long	.LASF480
	.sleb128 186
	.uleb128 0xc
	.long	.LASF481
	.sleb128 187
	.uleb128 0xc
	.long	.LASF482
	.sleb128 188
	.uleb128 0xc
	.long	.LASF483
	.sleb128 189
	.uleb128 0xc
	.long	.LASF484
	.sleb128 190
	.uleb128 0xc
	.long	.LASF485
	.sleb128 191
	.uleb128 0xc
	.long	.LASF486
	.sleb128 192
	.uleb128 0xc
	.long	.LASF487
	.sleb128 193
	.uleb128 0xc
	.long	.LASF488
	.sleb128 194
	.uleb128 0xc
	.long	.LASF489
	.sleb128 195
	.uleb128 0xc
	.long	.LASF490
	.sleb128 196
	.uleb128 0xc
	.long	.LASF491
	.sleb128 197
	.uleb128 0xc
	.long	.LASF492
	.sleb128 198
	.uleb128 0xc
	.long	.LASF493
	.sleb128 199
	.uleb128 0xc
	.long	.LASF494
	.sleb128 200
	.uleb128 0xc
	.long	.LASF495
	.sleb128 201
	.uleb128 0xc
	.long	.LASF496
	.sleb128 202
	.uleb128 0xc
	.long	.LASF497
	.sleb128 203
	.uleb128 0xc
	.long	.LASF498
	.sleb128 204
	.uleb128 0xc
	.long	.LASF499
	.sleb128 205
	.uleb128 0xc
	.long	.LASF500
	.sleb128 206
	.uleb128 0xc
	.long	.LASF501
	.sleb128 207
	.uleb128 0xc
	.long	.LASF502
	.sleb128 208
	.uleb128 0xc
	.long	.LASF503
	.sleb128 209
	.uleb128 0xc
	.long	.LASF504
	.sleb128 210
	.uleb128 0xc
	.long	.LASF505
	.sleb128 211
	.uleb128 0xc
	.long	.LASF506
	.sleb128 212
	.uleb128 0xc
	.long	.LASF507
	.sleb128 213
	.uleb128 0xc
	.long	.LASF508
	.sleb128 214
	.uleb128 0xc
	.long	.LASF509
	.sleb128 215
	.uleb128 0xc
	.long	.LASF510
	.sleb128 216
	.uleb128 0xc
	.long	.LASF511
	.sleb128 217
	.uleb128 0xc
	.long	.LASF512
	.sleb128 218
	.uleb128 0xc
	.long	.LASF513
	.sleb128 219
	.uleb128 0xc
	.long	.LASF514
	.sleb128 220
	.uleb128 0xc
	.long	.LASF515
	.sleb128 221
	.uleb128 0xc
	.long	.LASF516
	.sleb128 222
	.uleb128 0xc
	.long	.LASF517
	.sleb128 223
	.uleb128 0xc
	.long	.LASF518
	.sleb128 224
	.uleb128 0xc
	.long	.LASF519
	.sleb128 225
	.uleb128 0xc
	.long	.LASF520
	.sleb128 226
	.uleb128 0xc
	.long	.LASF521
	.sleb128 227
	.uleb128 0xc
	.long	.LASF522
	.sleb128 228
	.uleb128 0xc
	.long	.LASF523
	.sleb128 229
	.uleb128 0xc
	.long	.LASF524
	.sleb128 230
	.uleb128 0xc
	.long	.LASF525
	.sleb128 231
	.uleb128 0xc
	.long	.LASF526
	.sleb128 232
	.uleb128 0xc
	.long	.LASF527
	.sleb128 233
	.uleb128 0xc
	.long	.LASF528
	.sleb128 234
	.uleb128 0xc
	.long	.LASF529
	.sleb128 235
	.uleb128 0xc
	.long	.LASF530
	.sleb128 236
	.uleb128 0xc
	.long	.LASF531
	.sleb128 237
	.uleb128 0xc
	.long	.LASF532
	.sleb128 238
	.uleb128 0xc
	.long	.LASF533
	.sleb128 239
	.uleb128 0xc
	.long	.LASF534
	.sleb128 240
	.uleb128 0xc
	.long	.LASF535
	.sleb128 241
	.uleb128 0xc
	.long	.LASF536
	.sleb128 242
	.uleb128 0xc
	.long	.LASF537
	.sleb128 243
	.uleb128 0xc
	.long	.LASF538
	.sleb128 244
	.uleb128 0xc
	.long	.LASF539
	.sleb128 245
	.uleb128 0xc
	.long	.LASF540
	.sleb128 246
	.uleb128 0xc
	.long	.LASF541
	.sleb128 247
	.uleb128 0xc
	.long	.LASF542
	.sleb128 248
	.uleb128 0xc
	.long	.LASF543
	.sleb128 249
	.uleb128 0xc
	.long	.LASF544
	.sleb128 250
	.uleb128 0xc
	.long	.LASF545
	.sleb128 251
	.uleb128 0xc
	.long	.LASF546
	.sleb128 252
	.uleb128 0xc
	.long	.LASF547
	.sleb128 253
	.uleb128 0xc
	.long	.LASF548
	.sleb128 254
	.uleb128 0xc
	.long	.LASF549
	.sleb128 255
	.uleb128 0xc
	.long	.LASF550
	.sleb128 256
	.uleb128 0xc
	.long	.LASF551
	.sleb128 257
	.uleb128 0xc
	.long	.LASF552
	.sleb128 258
	.uleb128 0xc
	.long	.LASF553
	.sleb128 259
	.uleb128 0xc
	.long	.LASF554
	.sleb128 260
	.uleb128 0xc
	.long	.LASF555
	.sleb128 261
	.uleb128 0xc
	.long	.LASF556
	.sleb128 262
	.uleb128 0xc
	.long	.LASF557
	.sleb128 263
	.uleb128 0xc
	.long	.LASF558
	.sleb128 264
	.uleb128 0xc
	.long	.LASF559
	.sleb128 265
	.uleb128 0xc
	.long	.LASF560
	.sleb128 266
	.uleb128 0xc
	.long	.LASF561
	.sleb128 267
	.uleb128 0xc
	.long	.LASF562
	.sleb128 268
	.uleb128 0xc
	.long	.LASF563
	.sleb128 269
	.uleb128 0xc
	.long	.LASF564
	.sleb128 270
	.uleb128 0xc
	.long	.LASF565
	.sleb128 271
	.uleb128 0xc
	.long	.LASF566
	.sleb128 272
	.uleb128 0xc
	.long	.LASF567
	.sleb128 273
	.uleb128 0xc
	.long	.LASF568
	.sleb128 274
	.uleb128 0xc
	.long	.LASF569
	.sleb128 275
	.uleb128 0xc
	.long	.LASF570
	.sleb128 276
	.uleb128 0xc
	.long	.LASF571
	.sleb128 277
	.uleb128 0xc
	.long	.LASF572
	.sleb128 278
	.uleb128 0xc
	.long	.LASF573
	.sleb128 279
	.uleb128 0xc
	.long	.LASF574
	.sleb128 280
	.uleb128 0xc
	.long	.LASF575
	.sleb128 281
	.uleb128 0xc
	.long	.LASF576
	.sleb128 282
	.uleb128 0xc
	.long	.LASF577
	.sleb128 283
	.uleb128 0xc
	.long	.LASF578
	.sleb128 284
	.uleb128 0xc
	.long	.LASF579
	.sleb128 285
	.uleb128 0xc
	.long	.LASF580
	.sleb128 286
	.uleb128 0xc
	.long	.LASF581
	.sleb128 287
	.uleb128 0xc
	.long	.LASF582
	.sleb128 288
	.uleb128 0xc
	.long	.LASF583
	.sleb128 289
	.uleb128 0xc
	.long	.LASF584
	.sleb128 290
	.uleb128 0xc
	.long	.LASF585
	.sleb128 291
	.uleb128 0xc
	.long	.LASF586
	.sleb128 292
	.uleb128 0xc
	.long	.LASF587
	.sleb128 293
	.uleb128 0xc
	.long	.LASF588
	.sleb128 294
	.uleb128 0xc
	.long	.LASF589
	.sleb128 295
	.uleb128 0xc
	.long	.LASF590
	.sleb128 296
	.uleb128 0xc
	.long	.LASF591
	.sleb128 297
	.uleb128 0xc
	.long	.LASF592
	.sleb128 298
	.uleb128 0xc
	.long	.LASF593
	.sleb128 299
	.uleb128 0xc
	.long	.LASF594
	.sleb128 300
	.uleb128 0xc
	.long	.LASF595
	.sleb128 301
	.uleb128 0xc
	.long	.LASF596
	.sleb128 302
	.uleb128 0xc
	.long	.LASF597
	.sleb128 303
	.uleb128 0xc
	.long	.LASF598
	.sleb128 304
	.uleb128 0xc
	.long	.LASF599
	.sleb128 305
	.uleb128 0xc
	.long	.LASF600
	.sleb128 306
	.uleb128 0xc
	.long	.LASF601
	.sleb128 307
	.uleb128 0xc
	.long	.LASF602
	.sleb128 308
	.uleb128 0xc
	.long	.LASF603
	.sleb128 309
	.uleb128 0xc
	.long	.LASF604
	.sleb128 310
	.uleb128 0xc
	.long	.LASF605
	.sleb128 311
	.uleb128 0xc
	.long	.LASF606
	.sleb128 312
	.uleb128 0xc
	.long	.LASF607
	.sleb128 313
	.uleb128 0xc
	.long	.LASF608
	.sleb128 314
	.uleb128 0xc
	.long	.LASF609
	.sleb128 315
	.uleb128 0xc
	.long	.LASF610
	.sleb128 316
	.uleb128 0xc
	.long	.LASF611
	.sleb128 317
	.uleb128 0xc
	.long	.LASF612
	.sleb128 318
	.uleb128 0xc
	.long	.LASF613
	.sleb128 319
	.uleb128 0xc
	.long	.LASF614
	.sleb128 320
	.uleb128 0xc
	.long	.LASF615
	.sleb128 321
	.uleb128 0xc
	.long	.LASF616
	.sleb128 322
	.uleb128 0xc
	.long	.LASF617
	.sleb128 323
	.uleb128 0xc
	.long	.LASF618
	.sleb128 324
	.uleb128 0xc
	.long	.LASF619
	.sleb128 325
	.uleb128 0xc
	.long	.LASF620
	.sleb128 326
	.uleb128 0xc
	.long	.LASF621
	.sleb128 327
	.uleb128 0xc
	.long	.LASF622
	.sleb128 328
	.uleb128 0xc
	.long	.LASF623
	.sleb128 329
	.uleb128 0xc
	.long	.LASF624
	.sleb128 330
	.uleb128 0xc
	.long	.LASF625
	.sleb128 331
	.uleb128 0xc
	.long	.LASF626
	.sleb128 332
	.uleb128 0xc
	.long	.LASF627
	.sleb128 333
	.uleb128 0xc
	.long	.LASF628
	.sleb128 334
	.uleb128 0xc
	.long	.LASF629
	.sleb128 335
	.uleb128 0xc
	.long	.LASF630
	.sleb128 336
	.uleb128 0xc
	.long	.LASF631
	.sleb128 337
	.uleb128 0xc
	.long	.LASF632
	.sleb128 338
	.uleb128 0xc
	.long	.LASF633
	.sleb128 339
	.uleb128 0xc
	.long	.LASF634
	.sleb128 340
	.uleb128 0xc
	.long	.LASF635
	.sleb128 341
	.uleb128 0xc
	.long	.LASF636
	.sleb128 342
	.uleb128 0xc
	.long	.LASF637
	.sleb128 343
	.uleb128 0xc
	.long	.LASF638
	.sleb128 344
	.uleb128 0xc
	.long	.LASF639
	.sleb128 345
	.uleb128 0xc
	.long	.LASF640
	.sleb128 346
	.uleb128 0xc
	.long	.LASF641
	.sleb128 347
	.uleb128 0xc
	.long	.LASF642
	.sleb128 348
	.uleb128 0xc
	.long	.LASF643
	.sleb128 349
	.uleb128 0xc
	.long	.LASF644
	.sleb128 350
	.uleb128 0xc
	.long	.LASF645
	.sleb128 351
	.uleb128 0xc
	.long	.LASF646
	.sleb128 352
	.byte	0
	.uleb128 0x1b
	.long	0x1417
	.uleb128 0x6
	.byte	0x8
	.long	0x1e15
	.uleb128 0x6
	.byte	0x8
	.long	0x4a8
	.uleb128 0x6
	.byte	0x8
	.long	0x6b5
	.uleb128 0x7
	.long	.LASF647
	.byte	0x40
	.byte	0xc
	.byte	0x70
	.long	0x1ea3
	.uleb128 0x1c
	.string	"cv"
	.byte	0xc
	.byte	0x71
	.long	0x1428
	.byte	0
	.uleb128 0x1c
	.string	"gv"
	.byte	0xc
	.byte	0x72
	.long	0x1434
	.byte	0x8
	.uleb128 0x8
	.long	.LASF648
	.byte	0xc
	.byte	0x73
	.long	0x1434
	.byte	0x10
	.uleb128 0x8
	.long	.LASF649
	.byte	0xc
	.byte	0x75
	.long	0x143a
	.byte	0x18
	.uleb128 0x8
	.long	.LASF650
	.byte	0xc
	.byte	0x77
	.long	0x143a
	.byte	0x20
	.uleb128 0x8
	.long	.LASF651
	.byte	0xc
	.byte	0x78
	.long	0x5e
	.byte	0x28
	.uleb128 0x8
	.long	.LASF652
	.byte	0xc
	.byte	0x79
	.long	0x122e
	.byte	0x30
	.uleb128 0x8
	.long	.LASF653
	.byte	0xc
	.byte	0x7a
	.long	0x122e
	.byte	0x31
	.uleb128 0x8
	.long	.LASF654
	.byte	0xc
	.byte	0x7b
	.long	0x1ea3
	.byte	0x38
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1485
	.uleb128 0x7
	.long	.LASF655
	.byte	0x28
	.byte	0xc
	.byte	0xd3
	.long	0x1efd
	.uleb128 0x8
	.long	.LASF656
	.byte	0xc
	.byte	0xd4
	.long	0x1243
	.byte	0
	.uleb128 0x8
	.long	.LASF657
	.byte	0xc
	.byte	0xd5
	.long	0x1243
	.byte	0x4
	.uleb128 0x8
	.long	.LASF658
	.byte	0xc
	.byte	0xd6
	.long	0x1276
	.byte	0x8
	.uleb128 0x8
	.long	.LASF659
	.byte	0xc
	.byte	0xd7
	.long	0x1417
	.byte	0x10
	.uleb128 0x8
	.long	.LASF660
	.byte	0xc
	.byte	0xd8
	.long	0x1276
	.byte	0x18
	.uleb128 0x1c
	.string	"cv"
	.byte	0xc
	.byte	0xd9
	.long	0x1428
	.byte	0x20
	.byte	0
	.uleb128 0x7
	.long	.LASF661
	.byte	0x58
	.byte	0xc
	.byte	0xf0
	.long	0x1f8f
	.uleb128 0x8
	.long	.LASF662
	.byte	0xc
	.byte	0xf1
	.long	0xf2
	.byte	0
	.uleb128 0x8
	.long	.LASF663
	.byte	0xc
	.byte	0xf2
	.long	0x1243
	.byte	0x8
	.uleb128 0x8
	.long	.LASF664
	.byte	0xc
	.byte	0xf3
	.long	0x1417
	.byte	0x10
	.uleb128 0x8
	.long	.LASF665
	.byte	0xc
	.byte	0xf4
	.long	0x1417
	.byte	0x18
	.uleb128 0x8
	.long	.LASF666
	.byte	0xc
	.byte	0xf5
	.long	0x1417
	.byte	0x20
	.uleb128 0x8
	.long	.LASF667
	.byte	0xc
	.byte	0xfa
	.long	0x1f8f
	.byte	0x28
	.uleb128 0x8
	.long	.LASF668
	.byte	0xc
	.byte	0xfc
	.long	0x1276
	.byte	0x30
	.uleb128 0x8
	.long	.LASF669
	.byte	0xc
	.byte	0xfd
	.long	0x1276
	.byte	0x38
	.uleb128 0x8
	.long	.LASF670
	.byte	0xc
	.byte	0xfe
	.long	0x143a
	.byte	0x40
	.uleb128 0x8
	.long	.LASF671
	.byte	0xc
	.byte	0xff
	.long	0x324
	.byte	0x48
	.uleb128 0x13
	.long	.LASF672
	.byte	0xc
	.value	0x100
	.long	0x324
	.byte	0x50
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1276
	.uleb128 0x19
	.byte	0x58
	.byte	0xc
	.value	0x139
	.long	0x1fc3
	.uleb128 0x16
	.long	.LASF673
	.byte	0xc
	.value	0x13a
	.long	0x1e2c
	.uleb128 0x16
	.long	.LASF674
	.byte	0xc
	.value	0x13b
	.long	0x1ea9
	.uleb128 0x16
	.long	.LASF675
	.byte	0xc
	.value	0x13c
	.long	0x1efd
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x3cf
	.uleb128 0x14
	.long	.LASF676
	.byte	0x58
	.byte	0xc
	.value	0x16e
	.long	0x208d
	.uleb128 0x13
	.long	.LASF677
	.byte	0xc
	.value	0x16f
	.long	0x1243
	.byte	0
	.uleb128 0x13
	.long	.LASF678
	.byte	0xc
	.value	0x170
	.long	0x1243
	.byte	0x4
	.uleb128 0x13
	.long	.LASF679
	.byte	0xc
	.value	0x171
	.long	0x1243
	.byte	0x8
	.uleb128 0x13
	.long	.LASF680
	.byte	0xc
	.value	0x172
	.long	0x1243
	.byte	0xc
	.uleb128 0x13
	.long	.LASF681
	.byte	0xc
	.value	0x173
	.long	0xf8
	.byte	0x10
	.uleb128 0x13
	.long	.LASF682
	.byte	0xc
	.value	0x174
	.long	0xf8
	.byte	0x11
	.uleb128 0x13
	.long	.LASF683
	.byte	0xc
	.value	0x175
	.long	0xf2
	.byte	0x18
	.uleb128 0x13
	.long	.LASF684
	.byte	0xc
	.value	0x176
	.long	0x1276
	.byte	0x20
	.uleb128 0x13
	.long	.LASF685
	.byte	0xc
	.value	0x177
	.long	0x1276
	.byte	0x28
	.uleb128 0x13
	.long	.LASF686
	.byte	0xc
	.value	0x178
	.long	0xf2
	.byte	0x30
	.uleb128 0x13
	.long	.LASF687
	.byte	0xc
	.value	0x179
	.long	0xf2
	.byte	0x38
	.uleb128 0x13
	.long	.LASF688
	.byte	0xc
	.value	0x17a
	.long	0xf2
	.byte	0x40
	.uleb128 0x13
	.long	.LASF689
	.byte	0xc
	.value	0x17b
	.long	0xc4
	.byte	0x48
	.uleb128 0x13
	.long	.LASF690
	.byte	0xc
	.value	0x17c
	.long	0x1e26
	.byte	0x50
	.byte	0
	.uleb128 0x19
	.byte	0x88
	.byte	0xc
	.value	0x1a4
	.long	0x20af
	.uleb128 0x16
	.long	.LASF691
	.byte	0xc
	.value	0x1a5
	.long	0x8eb
	.uleb128 0x16
	.long	.LASF692
	.byte	0xc
	.value	0x1a6
	.long	0x1fc9
	.byte	0
	.uleb128 0x14
	.long	.LASF693
	.byte	0x38
	.byte	0xc
	.value	0x20c
	.long	0x2125
	.uleb128 0x13
	.long	.LASF694
	.byte	0xc
	.value	0x20d
	.long	0x143a
	.byte	0
	.uleb128 0x13
	.long	.LASF695
	.byte	0xc
	.value	0x20e
	.long	0x2125
	.byte	0x8
	.uleb128 0x13
	.long	.LASF696
	.byte	0xc
	.value	0x20f
	.long	0x1243
	.byte	0x10
	.uleb128 0x13
	.long	.LASF697
	.byte	0xc
	.value	0x210
	.long	0x1243
	.byte	0x14
	.uleb128 0x13
	.long	.LASF698
	.byte	0xc
	.value	0x211
	.long	0x1243
	.byte	0x18
	.uleb128 0x13
	.long	.LASF699
	.byte	0xc
	.value	0x212
	.long	0x212b
	.byte	0x20
	.uleb128 0x13
	.long	.LASF700
	.byte	0xc
	.value	0x213
	.long	0x212b
	.byte	0x28
	.uleb128 0x13
	.long	.LASF701
	.byte	0xc
	.value	0x214
	.long	0x1243
	.byte	0x30
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x8b7
	.uleb128 0x6
	.byte	0x8
	.long	0x20af
	.uleb128 0x11
	.long	.LASF702
	.byte	0xc
	.value	0x219
	.long	0x20af
	.uleb128 0xe
	.string	"HE"
	.byte	0x12
	.byte	0xc
	.long	0x2147
	.uleb128 0x12
	.string	"he"
	.byte	0x18
	.byte	0x12
	.byte	0x10
	.long	0x2177
	.uleb128 0x8
	.long	.LASF703
	.byte	0x12
	.byte	0x11
	.long	0x21b3
	.byte	0
	.uleb128 0x8
	.long	.LASF704
	.byte	0x12
	.byte	0x12
	.long	0x21b9
	.byte	0x8
	.uleb128 0x8
	.long	.LASF705
	.byte	0x12
	.byte	0x13
	.long	0x1276
	.byte	0x10
	.byte	0
	.uleb128 0xe
	.string	"HEK"
	.byte	0x12
	.byte	0xd
	.long	0x2182
	.uleb128 0x12
	.string	"hek"
	.byte	0xc
	.byte	0x12
	.byte	0x17
	.long	0x21b3
	.uleb128 0x8
	.long	.LASF706
	.byte	0x12
	.byte	0x18
	.long	0x124e
	.byte	0
	.uleb128 0x8
	.long	.LASF707
	.byte	0x12
	.byte	0x19
	.long	0x1243
	.byte	0x4
	.uleb128 0x8
	.long	.LASF708
	.byte	0x12
	.byte	0x1a
	.long	0x127c
	.byte	0x8
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x213d
	.uleb128 0x6
	.byte	0x8
	.long	0x2177
	.uleb128 0x1d
	.long	0x57
	.long	0x21d3
	.uleb128 0x18
	.long	0x1276
	.uleb128 0x18
	.long	0x13f9
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x21bf
	.uleb128 0x1d
	.long	0x124e
	.long	0x21ed
	.uleb128 0x18
	.long	0x1276
	.uleb128 0x18
	.long	0x13f9
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x21d9
	.uleb128 0x1d
	.long	0x57
	.long	0x2216
	.uleb128 0x18
	.long	0x1276
	.uleb128 0x18
	.long	0x13f9
	.uleb128 0x18
	.long	0x1276
	.uleb128 0x18
	.long	0x222
	.uleb128 0x18
	.long	0x57
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x21f3
	.uleb128 0x1d
	.long	0x57
	.long	0x2230
	.uleb128 0x18
	.long	0x13f9
	.uleb128 0x18
	.long	0x2230
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x11ed
	.uleb128 0x6
	.byte	0x8
	.long	0x221c
	.uleb128 0x6
	.byte	0x8
	.long	0x1112
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.long	.LASF709
	.uleb128 0x6
	.byte	0x8
	.long	0x224f
	.uleb128 0x17
	.long	0x225a
	.uleb128 0x18
	.long	0x1276
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1367
	.uleb128 0x11
	.long	.LASF710
	.byte	0xa
	.value	0xe6f
	.long	0x2249
	.uleb128 0x1e
	.byte	0x4
	.byte	0xa
	.value	0xfb1
	.long	0x240b
	.uleb128 0xc
	.long	.LASF711
	.sleb128 0
	.uleb128 0xc
	.long	.LASF712
	.sleb128 1
	.uleb128 0xc
	.long	.LASF713
	.sleb128 2
	.uleb128 0xc
	.long	.LASF714
	.sleb128 3
	.uleb128 0xc
	.long	.LASF715
	.sleb128 4
	.uleb128 0xc
	.long	.LASF716
	.sleb128 5
	.uleb128 0xc
	.long	.LASF717
	.sleb128 6
	.uleb128 0xc
	.long	.LASF718
	.sleb128 7
	.uleb128 0xc
	.long	.LASF719
	.sleb128 8
	.uleb128 0xc
	.long	.LASF720
	.sleb128 9
	.uleb128 0xc
	.long	.LASF721
	.sleb128 10
	.uleb128 0xc
	.long	.LASF722
	.sleb128 11
	.uleb128 0xc
	.long	.LASF723
	.sleb128 12
	.uleb128 0xc
	.long	.LASF724
	.sleb128 13
	.uleb128 0xc
	.long	.LASF725
	.sleb128 14
	.uleb128 0xc
	.long	.LASF726
	.sleb128 15
	.uleb128 0xc
	.long	.LASF727
	.sleb128 16
	.uleb128 0xc
	.long	.LASF728
	.sleb128 17
	.uleb128 0xc
	.long	.LASF729
	.sleb128 18
	.uleb128 0xc
	.long	.LASF730
	.sleb128 19
	.uleb128 0xc
	.long	.LASF731
	.sleb128 20
	.uleb128 0xc
	.long	.LASF732
	.sleb128 21
	.uleb128 0xc
	.long	.LASF733
	.sleb128 22
	.uleb128 0xc
	.long	.LASF734
	.sleb128 23
	.uleb128 0xc
	.long	.LASF735
	.sleb128 24
	.uleb128 0xc
	.long	.LASF736
	.sleb128 25
	.uleb128 0xc
	.long	.LASF737
	.sleb128 26
	.uleb128 0xc
	.long	.LASF738
	.sleb128 27
	.uleb128 0xc
	.long	.LASF739
	.sleb128 28
	.uleb128 0xc
	.long	.LASF740
	.sleb128 29
	.uleb128 0xc
	.long	.LASF741
	.sleb128 30
	.uleb128 0xc
	.long	.LASF742
	.sleb128 31
	.uleb128 0xc
	.long	.LASF743
	.sleb128 32
	.uleb128 0xc
	.long	.LASF744
	.sleb128 33
	.uleb128 0xc
	.long	.LASF745
	.sleb128 34
	.uleb128 0xc
	.long	.LASF746
	.sleb128 35
	.uleb128 0xc
	.long	.LASF747
	.sleb128 36
	.uleb128 0xc
	.long	.LASF748
	.sleb128 37
	.uleb128 0xc
	.long	.LASF749
	.sleb128 38
	.uleb128 0xc
	.long	.LASF750
	.sleb128 39
	.uleb128 0xc
	.long	.LASF751
	.sleb128 40
	.uleb128 0xc
	.long	.LASF752
	.sleb128 41
	.uleb128 0xc
	.long	.LASF753
	.sleb128 42
	.uleb128 0xc
	.long	.LASF754
	.sleb128 43
	.uleb128 0xc
	.long	.LASF755
	.sleb128 44
	.uleb128 0xc
	.long	.LASF756
	.sleb128 45
	.uleb128 0xc
	.long	.LASF757
	.sleb128 46
	.uleb128 0xc
	.long	.LASF758
	.sleb128 47
	.uleb128 0xc
	.long	.LASF759
	.sleb128 48
	.uleb128 0xc
	.long	.LASF760
	.sleb128 49
	.uleb128 0xc
	.long	.LASF761
	.sleb128 50
	.uleb128 0xc
	.long	.LASF762
	.sleb128 51
	.uleb128 0xc
	.long	.LASF763
	.sleb128 52
	.uleb128 0xc
	.long	.LASF764
	.sleb128 53
	.uleb128 0xc
	.long	.LASF765
	.sleb128 54
	.uleb128 0xc
	.long	.LASF766
	.sleb128 55
	.uleb128 0xc
	.long	.LASF767
	.sleb128 56
	.uleb128 0xc
	.long	.LASF768
	.sleb128 57
	.uleb128 0xc
	.long	.LASF769
	.sleb128 58
	.uleb128 0xc
	.long	.LASF770
	.sleb128 59
	.uleb128 0xc
	.long	.LASF771
	.sleb128 60
	.uleb128 0xc
	.long	.LASF772
	.sleb128 61
	.uleb128 0xc
	.long	.LASF773
	.sleb128 62
	.uleb128 0xc
	.long	.LASF774
	.sleb128 63
	.uleb128 0xc
	.long	.LASF775
	.sleb128 64
	.uleb128 0xc
	.long	.LASF776
	.sleb128 65
	.uleb128 0xc
	.long	.LASF777
	.sleb128 66
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xf2
	.uleb128 0x6
	.byte	0x8
	.long	0x122e
	.uleb128 0x9
	.long	0xc4
	.long	0x2427
	.uleb128 0xa
	.long	0xb2
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	.LASF778
	.byte	0x18
	.byte	0x16
	.value	0x183
	.long	0x2469
	.uleb128 0x13
	.long	.LASF779
	.byte	0x16
	.value	0x184
	.long	0x1243
	.byte	0
	.uleb128 0x13
	.long	.LASF780
	.byte	0x16
	.value	0x185
	.long	0x1243
	.byte	0x4
	.uleb128 0x13
	.long	.LASF781
	.byte	0x16
	.value	0x186
	.long	0x1276
	.byte	0x8
	.uleb128 0x13
	.long	.LASF782
	.byte	0x16
	.value	0x187
	.long	0x1276
	.byte	0x10
	.byte	0
	.uleb128 0x9
	.long	0x2427
	.long	0x2479
	.uleb128 0xa
	.long	0xb2
	.byte	0x2
	.byte	0
	.uleb128 0x1f
	.long	.LASF796
	.byte	0x1
	.value	0x112
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x24ef
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x112
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x21
	.long	.LASF783
	.byte	0x1
	.value	0x112
	.long	0x124e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x21
	.long	.LASF259
	.byte	0x1
	.value	0x112
	.long	0x124e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x22
	.string	"sva"
	.byte	0x1
	.value	0x114
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x115
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF784
	.byte	0x1
	.value	0x116
	.long	0x1276
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x24
	.long	.LASF786
	.byte	0x1
	.value	0x130
	.long	0x1276
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x2540
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x132
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x25
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.uleb128 0x23
	.long	.LASF785
	.byte	0x1
	.value	0x13a
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x24
	.long	.LASF787
	.byte	0x1
	.value	0x146
	.long	0x1243
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x25cb
	.uleb128 0x20
	.string	"f"
	.byte	0x1
	.value	0x146
	.long	0x2260
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x21
	.long	.LASF259
	.byte	0x1
	.value	0x146
	.long	0x124e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x21
	.long	.LASF788
	.byte	0x1
	.value	0x146
	.long	0x124e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x22
	.string	"sva"
	.byte	0x1
	.value	0x148
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x149
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF784
	.byte	0x1
	.value	0x14a
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF789
	.byte	0x1
	.value	0x14b
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x26
	.long	.LASF792
	.byte	0x1
	.value	0x173
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x27
	.long	.LASF790
	.byte	0x1
	.value	0x17d
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.long	0x2620
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x17d
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"rv"
	.byte	0x1
	.value	0x17f
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF791
	.byte	0x1
	.value	0x195
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x264d
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x195
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x28
	.long	.LASF793
	.byte	0x1
	.value	0x1af
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x27
	.long	.LASF794
	.byte	0x1
	.value	0x1bd
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.long	0x2694
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1bd
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x29
	.long	.LASF850
	.byte	0x1
	.value	0x1cf
	.long	0x1243
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x26c6
	.uleb128 0x23
	.long	.LASF795
	.byte	0x1
	.value	0x1d1
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x2a
	.long	.LASF797
	.byte	0x1
	.value	0x1e2
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.uleb128 0x1
	.byte	0x9c
	.long	0x2721
	.uleb128 0x22
	.string	"sva"
	.byte	0x1
	.value	0x1e4
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF798
	.byte	0x1
	.value	0x1e5
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF799
	.byte	0x1
	.value	0x1e6
	.long	0x2721
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x23
	.long	.LASF800
	.byte	0x1
	.value	0x1e6
	.long	0x2721
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x9ff
	.uleb128 0x28
	.long	.LASF801
	.byte	0x1
	.value	0x269
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x24
	.long	.LASF802
	.byte	0x1
	.value	0x275
	.long	0x2773
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x2773
	.uleb128 0x22
	.string	"xiv"
	.byte	0x1
	.value	0x277
	.long	0x2779
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xa3c
	.uleb128 0x6
	.byte	0x8
	.long	0x324
	.uleb128 0x2b
	.long	.LASF803
	.byte	0x1
	.value	0x287
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.long	0x27ba
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x287
	.long	0x2773
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"xiv"
	.byte	0x1
	.value	0x289
	.long	0x2779
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF804
	.byte	0x1
	.value	0x293
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.uleb128 0x1
	.byte	0x9c
	.long	0x2804
	.uleb128 0x22
	.string	"xiv"
	.byte	0x1
	.value	0x295
	.long	0x2779
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF805
	.byte	0x1
	.value	0x296
	.long	0x2779
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x22
	.string	"ptr"
	.byte	0x1
	.value	0x297
	.long	0x2721
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x24
	.long	.LASF806
	.byte	0x1
	.value	0x2aa
	.long	0x2836
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0x2836
	.uleb128 0x22
	.string	"xnv"
	.byte	0x1
	.value	0x2ac
	.long	0x283c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xad7
	.uleb128 0x6
	.byte	0x8
	.long	0x33a
	.uleb128 0x2b
	.long	.LASF807
	.byte	0x1
	.value	0x2b9
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x287d
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x2b9
	.long	0x2836
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"xnv"
	.byte	0x1
	.value	0x2bb
	.long	0x283c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF808
	.byte	0x1
	.value	0x2c5
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0x28c7
	.uleb128 0x22
	.string	"xnv"
	.byte	0x1
	.value	0x2c7
	.long	0x283c
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF809
	.byte	0x1
	.value	0x2c8
	.long	0x283c
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x22
	.string	"ptr"
	.byte	0x1
	.value	0x2c9
	.long	0x2721
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x24
	.long	.LASF810
	.byte	0x1
	.value	0x2dc
	.long	0x28f9
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0x28f9
	.uleb128 0x22
	.string	"xrv"
	.byte	0x1
	.value	0x2de
	.long	0x28f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x9da
	.uleb128 0x2b
	.long	.LASF811
	.byte	0x1
	.value	0x2eb
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x292b
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x2eb
	.long	0x28f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF812
	.byte	0x1
	.value	0x2f6
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.long	0x2975
	.uleb128 0x22
	.string	"xrv"
	.byte	0x1
	.value	0x2f8
	.long	0x28f9
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF813
	.byte	0x1
	.value	0x2f9
	.long	0x28f9
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x22
	.string	"ptr"
	.byte	0x1
	.value	0x2fa
	.long	0x2721
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x24
	.long	.LASF814
	.byte	0x1
	.value	0x30d
	.long	0x2721
	.quad	.LFB22
	.quad	.LFE22-.LFB22
	.uleb128 0x1
	.byte	0x9c
	.long	0x29a7
	.uleb128 0x22
	.string	"xpv"
	.byte	0x1
	.value	0x30f
	.long	0x2721
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2b
	.long	.LASF815
	.byte	0x1
	.value	0x31c
	.quad	.LFB23
	.quad	.LFE23-.LFB23
	.uleb128 0x1
	.byte	0x9c
	.long	0x29d3
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x31c
	.long	0x2721
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF816
	.byte	0x1
	.value	0x327
	.quad	.LFB24
	.quad	.LFE24-.LFB24
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a0e
	.uleb128 0x22
	.string	"xpv"
	.byte	0x1
	.value	0x329
	.long	0x2721
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF817
	.byte	0x1
	.value	0x32a
	.long	0x2721
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x24
	.long	.LASF818
	.byte	0x1
	.value	0x33b
	.long	0x2773
	.quad	.LFB25
	.quad	.LFE25-.LFB25
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a40
	.uleb128 0x23
	.long	.LASF159
	.byte	0x1
	.value	0x33d
	.long	0x2773
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2b
	.long	.LASF819
	.byte	0x1
	.value	0x34a
	.quad	.LFB26
	.quad	.LFE26-.LFB26
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a6c
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x34a
	.long	0x2773
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF820
	.byte	0x1
	.value	0x355
	.quad	.LFB27
	.quad	.LFE27-.LFB27
	.uleb128 0x1
	.byte	0x9c
	.long	0x2aa7
	.uleb128 0x23
	.long	.LASF159
	.byte	0x1
	.value	0x357
	.long	0x2773
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF821
	.byte	0x1
	.value	0x358
	.long	0x2773
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x24
	.long	.LASF822
	.byte	0x1
	.value	0x369
	.long	0x2836
	.quad	.LFB28
	.quad	.LFE28-.LFB28
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ad9
	.uleb128 0x23
	.long	.LASF165
	.byte	0x1
	.value	0x36b
	.long	0x2836
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2b
	.long	.LASF823
	.byte	0x1
	.value	0x378
	.quad	.LFB29
	.quad	.LFE29-.LFB29
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b05
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x378
	.long	0x2836
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF824
	.byte	0x1
	.value	0x383
	.quad	.LFB30
	.quad	.LFE30-.LFB30
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b40
	.uleb128 0x23
	.long	.LASF165
	.byte	0x1
	.value	0x385
	.long	0x2836
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF825
	.byte	0x1
	.value	0x386
	.long	0x2836
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x24
	.long	.LASF826
	.byte	0x1
	.value	0x397
	.long	0x13e1
	.quad	.LFB31
	.quad	.LFE31-.LFB31
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b72
	.uleb128 0x23
	.long	.LASF204
	.byte	0x1
	.value	0x399
	.long	0x13e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2b
	.long	.LASF827
	.byte	0x1
	.value	0x3a6
	.quad	.LFB32
	.quad	.LFE32-.LFB32
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b9e
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x3a6
	.long	0x13e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF828
	.byte	0x1
	.value	0x3b1
	.quad	.LFB33
	.quad	.LFE33-.LFB33
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bd9
	.uleb128 0x23
	.long	.LASF204
	.byte	0x1
	.value	0x3b3
	.long	0x13e1
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF829
	.byte	0x1
	.value	0x3b4
	.long	0x13e1
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x24
	.long	.LASF830
	.byte	0x1
	.value	0x3c5
	.long	0x13e7
	.quad	.LFB34
	.quad	.LFE34-.LFB34
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c0b
	.uleb128 0x23
	.long	.LASF178
	.byte	0x1
	.value	0x3c7
	.long	0x13e7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2b
	.long	.LASF831
	.byte	0x1
	.value	0x3d4
	.quad	.LFB35
	.quad	.LFE35-.LFB35
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c37
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x3d4
	.long	0x13e7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF832
	.byte	0x1
	.value	0x3df
	.quad	.LFB36
	.quad	.LFE36-.LFB36
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c72
	.uleb128 0x23
	.long	.LASF178
	.byte	0x1
	.value	0x3e1
	.long	0x13e7
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF833
	.byte	0x1
	.value	0x3e2
	.long	0x13e7
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x24
	.long	.LASF834
	.byte	0x1
	.value	0x3f3
	.long	0x13ed
	.quad	.LFB37
	.quad	.LFE37-.LFB37
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ca4
	.uleb128 0x23
	.long	.LASF187
	.byte	0x1
	.value	0x3f5
	.long	0x13ed
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2b
	.long	.LASF835
	.byte	0x1
	.value	0x402
	.quad	.LFB38
	.quad	.LFE38-.LFB38
	.uleb128 0x1
	.byte	0x9c
	.long	0x2cd0
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x402
	.long	0x13ed
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF836
	.byte	0x1
	.value	0x40d
	.quad	.LFB39
	.quad	.LFE39-.LFB39
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d0b
	.uleb128 0x23
	.long	.LASF187
	.byte	0x1
	.value	0x40f
	.long	0x13ed
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF837
	.byte	0x1
	.value	0x410
	.long	0x13ed
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x24
	.long	.LASF838
	.byte	0x1
	.value	0x421
	.long	0x2d3d
	.quad	.LFB40
	.quad	.LFE40-.LFB40
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d3d
	.uleb128 0x23
	.long	.LASF168
	.byte	0x1
	.value	0x423
	.long	0x2d3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xb32
	.uleb128 0x2b
	.long	.LASF839
	.byte	0x1
	.value	0x430
	.quad	.LFB41
	.quad	.LFE41-.LFB41
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d6f
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x430
	.long	0x2d3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF840
	.byte	0x1
	.value	0x43b
	.quad	.LFB42
	.quad	.LFE42-.LFB42
	.uleb128 0x1
	.byte	0x9c
	.long	0x2daa
	.uleb128 0x23
	.long	.LASF168
	.byte	0x1
	.value	0x43d
	.long	0x2d3d
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF841
	.byte	0x1
	.value	0x43e
	.long	0x2d3d
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x24
	.long	.LASF842
	.byte	0x1
	.value	0x44f
	.long	0x2ddc
	.quad	.LFB43
	.quad	.LFE43-.LFB43
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ddc
	.uleb128 0x23
	.long	.LASF172
	.byte	0x1
	.value	0x451
	.long	0x2ddc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xba7
	.uleb128 0x2b
	.long	.LASF843
	.byte	0x1
	.value	0x45e
	.quad	.LFB44
	.quad	.LFE44-.LFB44
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e0e
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x45e
	.long	0x2ddc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF844
	.byte	0x1
	.value	0x469
	.quad	.LFB45
	.quad	.LFE45-.LFB45
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e49
	.uleb128 0x23
	.long	.LASF172
	.byte	0x1
	.value	0x46b
	.long	0x2ddc
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF845
	.byte	0x1
	.value	0x46c
	.long	0x2ddc
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x24
	.long	.LASF846
	.byte	0x1
	.value	0x47d
	.long	0x2e7b
	.quad	.LFB46
	.quad	.LFE46-.LFB46
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e7b
	.uleb128 0x23
	.long	.LASF218
	.byte	0x1
	.value	0x47f
	.long	0x2e7b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xf31
	.uleb128 0x2b
	.long	.LASF847
	.byte	0x1
	.value	0x48c
	.quad	.LFB47
	.quad	.LFE47-.LFB47
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ead
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x48c
	.long	0x2e7b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF848
	.byte	0x1
	.value	0x497
	.quad	.LFB48
	.quad	.LFE48-.LFB48
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ee8
	.uleb128 0x23
	.long	.LASF218
	.byte	0x1
	.value	0x499
	.long	0x2e7b
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF849
	.byte	0x1
	.value	0x49a
	.long	0x2e7b
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x29
	.long	.LASF851
	.byte	0x1
	.value	0x50d
	.long	0xf8
	.quad	.LFB49
	.quad	.LFE49-.LFB49
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f90
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x50d
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"mt"
	.byte	0x1
	.value	0x50d
	.long	0x124e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x22
	.string	"pv"
	.byte	0x1
	.value	0x510
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x22
	.string	"cur"
	.byte	0x1
	.value	0x511
	.long	0x124e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x512
	.long	0x124e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x22
	.string	"iv"
	.byte	0x1
	.value	0x513
	.long	0x324
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x22
	.string	"nv"
	.byte	0x1
	.value	0x514
	.long	0x33a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x23
	.long	.LASF145
	.byte	0x1
	.value	0x515
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF852
	.byte	0x1
	.value	0x516
	.long	0x13ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x29
	.long	.LASF853
	.byte	0x1
	.value	0x612
	.long	0x57
	.quad	.LFB50
	.quad	.LFE50-.LFB50
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fdf
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x612
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x25
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0x616
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF854
	.byte	0x1
	.value	0x62b
	.long	0xf2
	.quad	.LFB51
	.quad	.LFE51-.LFB51
	.uleb128 0x1
	.byte	0x9c
	.long	0x3029
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x62b
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.long	.LASF855
	.byte	0x1
	.value	0x62b
	.long	0x34c
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0x62d
	.long	0xf2
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x2a
	.long	.LASF856
	.byte	0x1
	.value	0x672
	.quad	.LFB52
	.quad	.LFE52-.LFB52
	.uleb128 0x1
	.byte	0x9c
	.long	0x3062
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x672
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x672
	.long	0x324
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF857
	.byte	0x1
	.value	0x698
	.quad	.LFB53
	.quad	.LFE53-.LFB53
	.uleb128 0x1
	.byte	0x9c
	.long	0x309b
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x698
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x698
	.long	0x324
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF858
	.byte	0x1
	.value	0x6a8
	.quad	.LFB54
	.quad	.LFE54-.LFB54
	.uleb128 0x1
	.byte	0x9c
	.long	0x30d4
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x6a8
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"u"
	.byte	0x1
	.value	0x6a8
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF859
	.byte	0x1
	.value	0x6c4
	.quad	.LFB55
	.quad	.LFE55-.LFB55
	.uleb128 0x1
	.byte	0x9c
	.long	0x310d
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x6c4
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"u"
	.byte	0x1
	.value	0x6c4
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF860
	.byte	0x1
	.value	0x6e2
	.quad	.LFB56
	.quad	.LFE56-.LFB56
	.uleb128 0x1
	.byte	0x9c
	.long	0x3148
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x6e2
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"num"
	.byte	0x1
	.value	0x6e2
	.long	0x33a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF861
	.byte	0x1
	.value	0x707
	.quad	.LFB57
	.quad	.LFE57-.LFB57
	.uleb128 0x1
	.byte	0x9c
	.long	0x3183
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x707
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"num"
	.byte	0x1
	.value	0x707
	.long	0x33a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x27
	.long	.LASF862
	.byte	0x1
	.value	0x712
	.quad	.LFB58
	.quad	.LFE58-.LFB58
	.uleb128 0x1
	.byte	0x9c
	.long	0x324f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x712
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x22
	.string	"dsv"
	.byte	0x1
	.value	0x714
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x23
	.long	.LASF863
	.byte	0x1
	.value	0x715
	.long	0x324f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x22
	.string	"pv"
	.byte	0x1
	.value	0x716
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x25
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.uleb128 0x22
	.string	"d"
	.byte	0x1
	.value	0x71c
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x23
	.long	.LASF864
	.byte	0x1
	.value	0x71d
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0x721
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x22
	.string	"end"
	.byte	0x1
	.value	0x721
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.quad	.LBB6
	.quad	.LBE6-.LBB6
	.uleb128 0x22
	.string	"ch"
	.byte	0x1
	.value	0x723
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	0xf8
	.long	0x325f
	.uleb128 0xa
	.long	0xb2
	.byte	0x3f
	.byte	0
	.uleb128 0x29
	.long	.LASF865
	.byte	0x1
	.value	0x761
	.long	0x1243
	.quad	.LFB59
	.quad	.LFE59-.LFB59
	.uleb128 0x1
	.byte	0x9c
	.long	0x32ad
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x761
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x23
	.long	.LASF866
	.byte	0x1
	.value	0x763
	.long	0xf2
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x764
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x24
	.long	.LASF867
	.byte	0x1
	.value	0x7c6
	.long	0x57
	.quad	.LFB60
	.quad	.LFE60-.LFB60
	.uleb128 0x1
	.byte	0x9c
	.long	0x32ec
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x7c6
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.long	.LASF868
	.byte	0x1
	.value	0x7c6
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x29
	.long	.LASF869
	.byte	0x1
	.value	0x7fe
	.long	0x324
	.quad	.LFB61
	.quad	.LFE61-.LFB61
	.uleb128 0x1
	.byte	0x9c
	.long	0x3375
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x7fe
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2c
	.long	.LASF888
	.byte	0x1
	.value	0x86f
	.quad	.L352
	.uleb128 0x2d
	.quad	.LBB7
	.quad	.LBE7-.LBB7
	.long	0x3350
	.uleb128 0x23
	.long	.LASF870
	.byte	0x1
	.value	0x815
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2e
	.long	.Ldebug_ranges0+0
	.uleb128 0x23
	.long	.LASF871
	.byte	0x1
	.value	0x879
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF868
	.byte	0x1
	.value	0x87a
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF872
	.byte	0x1
	.value	0x928
	.long	0x32f
	.quad	.LFB62
	.quad	.LFE62-.LFB62
	.uleb128 0x1
	.byte	0x9c
	.long	0x33ee
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x928
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.quad	.LBB10
	.quad	.LBE10-.LBB10
	.long	0x33c9
	.uleb128 0x23
	.long	.LASF870
	.byte	0x1
	.value	0x93e
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2e
	.long	.Ldebug_ranges0+0x30
	.uleb128 0x23
	.long	.LASF871
	.byte	0x1
	.value	0x99d
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF868
	.byte	0x1
	.value	0x99e
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF873
	.byte	0x1
	.value	0xa40
	.long	0x33a
	.quad	.LFB63
	.quad	.LFE63-.LFB63
	.uleb128 0x1
	.byte	0x9c
	.long	0x349d
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xa40
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.quad	.LBB13
	.quad	.LBE13-.LBB13
	.long	0x3442
	.uleb128 0x23
	.long	.LASF870
	.byte	0x1
	.value	0xa5e
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2e
	.long	.Ldebug_ranges0+0x60
	.uleb128 0x23
	.long	.LASF871
	.byte	0x1
	.value	0xa97
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF868
	.byte	0x1
	.value	0xa98
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2e
	.long	.Ldebug_ranges0+0x90
	.uleb128 0x22
	.string	"nv"
	.byte	0x1
	.value	0xacb
	.long	0x33a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.quad	.LBB16
	.quad	.LBE16-.LBB16
	.uleb128 0x23
	.long	.LASF874
	.byte	0x1
	.value	0xadb
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x24
	.long	.LASF875
	.byte	0x1
	.value	0xb0a
	.long	0x324
	.quad	.LFB64
	.quad	.LFE64-.LFB64
	.uleb128 0x1
	.byte	0x9c
	.long	0x34ec
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xb0a
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF871
	.byte	0x1
	.value	0xb0c
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x23
	.long	.LASF868
	.byte	0x1
	.value	0xb0d
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x24
	.long	.LASF876
	.byte	0x1
	.value	0xb25
	.long	0x32f
	.quad	.LFB65
	.quad	.LFE65-.LFB65
	.uleb128 0x1
	.byte	0x9c
	.long	0x353b
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xb25
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF871
	.byte	0x1
	.value	0xb27
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x23
	.long	.LASF868
	.byte	0x1
	.value	0xb28
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x29
	.long	.LASF877
	.byte	0x1
	.value	0xb40
	.long	0xf2
	.quad	.LFB66
	.quad	.LFE66-.LFB66
	.uleb128 0x1
	.byte	0x9c
	.long	0x357a
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xb40
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x22
	.string	"n_a"
	.byte	0x1
	.value	0xb42
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2f
	.long	.LASF878
	.byte	0x1
	.value	0xb4e
	.long	0xf2
	.quad	.LFB67
	.quad	.LFE67-.LFB67
	.uleb128 0x1
	.byte	0x9c
	.long	0x3616
	.uleb128 0x20
	.string	"buf"
	.byte	0x1
	.value	0xb4e
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x20
	.string	"iv"
	.byte	0x1
	.value	0xb4e
	.long	0x324
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x20
	.string	"uv"
	.byte	0x1
	.value	0xb4e
	.long	0x32f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x21
	.long	.LASF879
	.byte	0x1
	.value	0xb4e
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x21
	.long	.LASF880
	.byte	0x1
	.value	0xb4e
	.long	0x240b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x22
	.string	"ptr"
	.byte	0x1
	.value	0xb50
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x23
	.long	.LASF881
	.byte	0x1
	.value	0xb51
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x23
	.long	.LASF882
	.byte	0x1
	.value	0xb52
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x29
	.long	.LASF883
	.byte	0x1
	.value	0xb6b
	.long	0xf2
	.quad	.LFB68
	.quad	.LFE68-.LFB68
	.uleb128 0x1
	.byte	0x9c
	.long	0x3654
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xb6b
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0xb6b
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x34c
	.uleb128 0x29
	.long	.LASF884
	.byte	0x1
	.value	0xb7d
	.long	0xf2
	.quad	.LFB69
	.quad	.LFE69-.LFB69
	.uleb128 0x1
	.byte	0x9c
	.long	0x3931
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xb7d
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0xb7d
	.long	0x3654
	.uleb128 0x3
	.byte	0x91
	.sleb128 -296
	.uleb128 0x21
	.long	.LASF259
	.byte	0x1
	.value	0xb7d
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -300
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0xb7f
	.long	0xf2
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x23
	.long	.LASF885
	.byte	0x1
	.value	0xb80
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -268
	.uleb128 0x22
	.string	"tsv"
	.byte	0x1
	.value	0xb81
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x23
	.long	.LASF886
	.byte	0x1
	.value	0xb81
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x23
	.long	.LASF887
	.byte	0x1
	.value	0xb82
	.long	0x324f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x23
	.long	.LASF863
	.byte	0x1
	.value	0xb83
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x2c
	.long	.LASF889
	.byte	0x1
	.value	0xc7f
	.quad	.L612
	.uleb128 0x2c
	.long	.LASF890
	.byte	0x1
	.value	0xc83
	.quad	.L663
	.uleb128 0x2d
	.quad	.LBB19
	.quad	.LBE19-.LBB19
	.long	0x389a
	.uleb128 0x23
	.long	.LASF870
	.byte	0x1
	.value	0xba8
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2d
	.quad	.LBB20
	.quad	.LBE20-.LBB20
	.long	0x376e
	.uleb128 0x22
	.string	"pv"
	.byte	0x1
	.value	0xbab
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.byte	0
	.uleb128 0x25
	.quad	.LBB21
	.quad	.LBE21-.LBB21
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0xbb7
	.long	0x13f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2d
	.quad	.LBB22
	.quad	.LBE22-.LBB22
	.long	0x3876
	.uleb128 0x22
	.string	"re"
	.byte	0x1
	.value	0xbbf
	.long	0x225a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x25
	.quad	.LBB23
	.quad	.LBE23-.LBB23
	.uleb128 0x23
	.long	.LASF891
	.byte	0x1
	.value	0xbc2
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x23
	.long	.LASF892
	.byte	0x1
	.value	0xbc3
	.long	0x3931
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x22
	.string	"ch"
	.byte	0x1
	.value	0xbc4
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -280
	.uleb128 0x23
	.long	.LASF893
	.byte	0x1
	.value	0xbc5
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -276
	.uleb128 0x23
	.long	.LASF894
	.byte	0x1
	.value	0xbc6
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.uleb128 0x23
	.long	.LASF895
	.byte	0x1
	.value	0xbc7
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -281
	.uleb128 0x23
	.long	.LASF117
	.byte	0x1
	.value	0xbc8
	.long	0x1238
	.uleb128 0x3
	.byte	0x91
	.sleb128 -278
	.uleb128 0x25
	.quad	.LBB24
	.quad	.LBE24-.LBB24
	.uleb128 0x23
	.long	.LASF896
	.byte	0x1
	.value	0xbea
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x25
	.quad	.LBB25
	.quad	.LBE25-.LBB25
	.uleb128 0x22
	.string	"c"
	.byte	0x1
	.value	0xbed
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -279
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB26
	.quad	.LBE26-.LBB26
	.uleb128 0x23
	.long	.LASF897
	.byte	0x1
	.value	0xc28
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2d
	.quad	.LBB27
	.quad	.LBE27-.LBB27
	.long	0x3900
	.uleb128 0x23
	.long	.LASF898
	.byte	0x1
	.value	0xc3d
	.long	0x124e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -264
	.uleb128 0x23
	.long	.LASF899
	.byte	0x1
	.value	0xc3e
	.long	0x124e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -260
	.uleb128 0x22
	.string	"buf"
	.byte	0x1
	.value	0xc3f
	.long	0x3941
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x23
	.long	.LASF881
	.byte	0x1
	.value	0xc40
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x22
	.string	"ptr"
	.byte	0x1
	.value	0xc40
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.byte	0
	.uleb128 0x25
	.quad	.LBB28
	.quad	.LBE28-.LBB28
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0xc8b
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x22
	.string	"t"
	.byte	0x1
	.value	0xc8c
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	0xf8
	.long	0x3941
	.uleb128 0xa
	.long	0xb2
	.byte	0x5
	.byte	0
	.uleb128 0x9
	.long	0xf8
	.long	0x3951
	.uleb128 0xa
	.long	0xb2
	.byte	0x15
	.byte	0
	.uleb128 0x2a
	.long	.LASF900
	.byte	0x1
	.value	0xcb5
	.quad	.LFB70
	.quad	.LFE70-.LFB70
	.uleb128 0x1
	.byte	0x9c
	.long	0x39a9
	.uleb128 0x20
	.string	"dsv"
	.byte	0x1
	.value	0xcb5
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x20
	.string	"ssv"
	.byte	0x1
	.value	0xcb5
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0xcb7
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0xcb8
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x29
	.long	.LASF901
	.byte	0x1
	.value	0xccd
	.long	0xf2
	.quad	.LFB71
	.quad	.LFE71-.LFB71
	.uleb128 0x1
	.byte	0x9c
	.long	0x39e8
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xccd
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x22
	.string	"n_a"
	.byte	0x1
	.value	0xccf
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x29
	.long	.LASF902
	.byte	0x1
	.value	0xce0
	.long	0xf2
	.quad	.LFB72
	.quad	.LFE72-.LFB72
	.uleb128 0x1
	.byte	0x9c
	.long	0x3a26
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xce0
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0xce0
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x29
	.long	.LASF903
	.byte	0x1
	.value	0xcf2
	.long	0xf2
	.quad	.LFB73
	.quad	.LFE73-.LFB73
	.uleb128 0x1
	.byte	0x9c
	.long	0x3a65
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xcf2
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x22
	.string	"n_a"
	.byte	0x1
	.value	0xcf4
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x29
	.long	.LASF904
	.byte	0x1
	.value	0xd04
	.long	0xf2
	.quad	.LFB74
	.quad	.LFE74-.LFB74
	.uleb128 0x1
	.byte	0x9c
	.long	0x3aa3
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xd04
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0xd04
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x29
	.long	.LASF905
	.byte	0x1
	.value	0xd14
	.long	0xf8
	.quad	.LFB75
	.quad	.LFE75-.LFB75
	.uleb128 0x1
	.byte	0x9c
	.long	0x3b18
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xd14
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.quad	.LBB29
	.quad	.LBE29-.LBB29
	.long	0x3af7
	.uleb128 0x23
	.long	.LASF906
	.byte	0x1
	.value	0xd1c
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x25
	.quad	.LBB30
	.quad	.LBE30-.LBB30
	.uleb128 0x23
	.long	.LASF907
	.byte	0x1
	.value	0xd23
	.long	0x2721
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF908
	.byte	0x1
	.value	0xd3e
	.long	0x34c
	.quad	.LFB76
	.quad	.LFE76-.LFB76
	.uleb128 0x1
	.byte	0x9c
	.long	0x3b48
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xd3e
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x29
	.long	.LASF909
	.byte	0x1
	.value	0xd5e
	.long	0x34c
	.quad	.LFB77
	.quad	.LFE77-.LFB77
	.uleb128 0x1
	.byte	0x9c
	.long	0x3c2a
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xd5e
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.long	.LASF259
	.byte	0x1
	.value	0xd5e
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0xd60
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"t"
	.byte	0x1
	.value	0xd60
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x22
	.string	"e"
	.byte	0x1
	.value	0xd60
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF910
	.byte	0x1
	.value	0xd61
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2d
	.quad	.LBB31
	.quad	.LBE31-.LBB31
	.long	0x3be3
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0xd66
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x2d
	.quad	.LBB32
	.quad	.LBE32-.LBB32
	.long	0x3c08
	.uleb128 0x22
	.string	"ch"
	.byte	0x1
	.value	0xd83
	.long	0x122e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -69
	.byte	0
	.uleb128 0x25
	.quad	.LBB33
	.quad	.LBE33-.LBB33
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0xd88
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF911
	.byte	0x1
	.value	0xda7
	.long	0xf8
	.quad	.LFB78
	.quad	.LFE78-.LFB78
	.uleb128 0x1
	.byte	0x9c
	.long	0x3c97
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xda7
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.long	.LASF912
	.byte	0x1
	.value	0xda7
	.long	0xf8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x25
	.quad	.LBB34
	.quad	.LBE34-.LBB34
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0xdab
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0xdac
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF913
	.byte	0x1
	.value	0xdcd
	.quad	.LFB79
	.quad	.LFE79-.LFB79
	.uleb128 0x1
	.byte	0x9c
	.long	0x3cc3
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xdcd
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF914
	.byte	0x1
	.value	0xde6
	.long	0xf8
	.quad	.LFB80
	.quad	.LFE80-.LFB80
	.uleb128 0x1
	.byte	0x9c
	.long	0x3d3f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0xde6
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x25
	.quad	.LBB35
	.quad	.LBE35-.LBB35
	.uleb128 0x22
	.string	"c"
	.byte	0x1
	.value	0xde9
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"e"
	.byte	0x1
	.value	0xdea
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.quad	.LBB36
	.quad	.LBE36-.LBB36
	.uleb128 0x22
	.string	"ch"
	.byte	0x1
	.value	0xdfa
	.long	0x122e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -49
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF915
	.byte	0x1
	.value	0xe09
	.quad	.LFB81
	.quad	.LFE81-.LFB81
	.uleb128 0x1
	.byte	0x9c
	.long	0x3d7b
	.uleb128 0x21
	.long	.LASF916
	.byte	0x1
	.value	0xe09
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.long	.LASF917
	.byte	0x1
	.value	0xe09
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x2a
	.long	.LASF918
	.byte	0x1
	.value	0xe32
	.quad	.LFB82
	.quad	.LFE82-.LFB82
	.uleb128 0x1
	.byte	0x9c
	.long	0x3ef5
	.uleb128 0x21
	.long	.LASF916
	.byte	0x1
	.value	0xe32
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x21
	.long	.LASF917
	.byte	0x1
	.value	0xe32
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.long	.LASF259
	.byte	0x1
	.value	0xe32
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x23
	.long	.LASF919
	.byte	0x1
	.value	0xe34
	.long	0x124e
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x23
	.long	.LASF920
	.byte	0x1
	.value	0xe35
	.long	0x57
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x23
	.long	.LASF921
	.byte	0x1
	.value	0xe36
	.long	0x57
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2c
	.long	.LASF922
	.byte	0x1
	.value	0xe4c
	.quad	.L794
	.uleb128 0x2c
	.long	.LASF923
	.byte	0x1
	.value	0xeab
	.quad	.L829
	.uleb128 0x2d
	.quad	.LBB37
	.quad	.LBE37-.LBB37
	.long	0x3e47
	.uleb128 0x23
	.long	.LASF897
	.byte	0x1
	.value	0xead
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0xeae
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x2d
	.quad	.LBB38
	.quad	.LBE38-.LBB38
	.long	0x3eae
	.uleb128 0x23
	.long	.LASF924
	.byte	0x1
	.value	0xee6
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x23
	.long	.LASF925
	.byte	0x1
	.value	0xee7
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x23
	.long	.LASF926
	.byte	0x1
	.value	0xee8
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x25
	.quad	.LBB39
	.quad	.LBE39-.LBB39
	.uleb128 0x22
	.string	"cv"
	.byte	0x1
	.value	0xf1c
	.long	0x1428
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.uleb128 0x2d
	.quad	.LBB40
	.quad	.LBE40-.LBB40
	.long	0x3ed3
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0xfab
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB41
	.quad	.LBE41-.LBB41
	.uleb128 0x22
	.string	"smg"
	.byte	0x1
	.value	0xfc4
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF927
	.byte	0x1
	.value	0xffb
	.quad	.LFB83
	.quad	.LFE83-.LFB83
	.uleb128 0x1
	.byte	0x9c
	.long	0x3f31
	.uleb128 0x21
	.long	.LASF916
	.byte	0x1
	.value	0xffb
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.long	.LASF917
	.byte	0x1
	.value	0xffb
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x2a
	.long	.LASF928
	.byte	0x1
	.value	0x100c
	.quad	.LFB84
	.quad	.LFE84-.LFB84
	.uleb128 0x1
	.byte	0x9c
	.long	0x3fa7
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x100c
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x100c
	.long	0x222
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x100c
	.long	0x34c
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x23
	.long	.LASF929
	.byte	0x1
	.value	0x100e
	.long	0xf2
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x25
	.quad	.LBB42
	.quad	.LBE42-.LBB42
	.uleb128 0x22
	.string	"iv"
	.byte	0x1
	.value	0x1017
	.long	0x324
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF930
	.byte	0x1
	.value	0x102f
	.quad	.LFB85
	.quad	.LFE85-.LFB85
	.uleb128 0x1
	.byte	0x9c
	.long	0x3fef
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x102f
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x102f
	.long	0x222
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x102f
	.long	0x34c
	.uleb128 0x1
	.byte	0x51
	.byte	0
	.uleb128 0x2a
	.long	.LASF931
	.byte	0x1
	.value	0x103f
	.quad	.LFB86
	.quad	.LFE86-.LFB86
	.uleb128 0x1
	.byte	0x9c
	.long	0x4037
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x103f
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x103f
	.long	0x222
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x1041
	.long	0x34c
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x2a
	.long	.LASF932
	.byte	0x1
	.value	0x105b
	.quad	.LFB87
	.quad	.LFE87-.LFB87
	.uleb128 0x1
	.byte	0x9c
	.long	0x4071
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x105b
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x105b
	.long	0x222
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x2a
	.long	.LASF933
	.byte	0x1
	.value	0x1070
	.quad	.LFB88
	.quad	.LFE88-.LFB88
	.uleb128 0x1
	.byte	0x9c
	.long	0x40b9
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1070
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x1070
	.long	0xf2
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x1070
	.long	0x34c
	.uleb128 0x1
	.byte	0x5d
	.byte	0
	.uleb128 0x2a
	.long	.LASF934
	.byte	0x1
	.value	0x108d
	.quad	.LFB89
	.quad	.LFE89-.LFB89
	.uleb128 0x1
	.byte	0x9c
	.long	0x4101
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x108d
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x108d
	.long	0xf2
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x108d
	.long	0x34c
	.uleb128 0x1
	.byte	0x51
	.byte	0
	.uleb128 0x2a
	.long	.LASF935
	.byte	0x1
	.value	0x109f
	.quad	.LFB90
	.quad	.LFE90-.LFB90
	.uleb128 0x1
	.byte	0x9c
	.long	0x417c
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x109f
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.long	.LASF259
	.byte	0x1
	.value	0x109f
	.long	0x124e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x25
	.quad	.LBB43
	.quad	.LBE43-.LBB43
	.uleb128 0x22
	.string	"pvx"
	.byte	0x1
	.value	0x10a3
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x10a4
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF936
	.byte	0x1
	.value	0x10a5
	.long	0x124e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF937
	.byte	0x1
	.value	0x10c1
	.quad	.LFB91
	.quad	.LFE91-.LFB91
	.uleb128 0x1
	.byte	0x9c
	.long	0x41a8
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x10c1
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x2a
	.long	.LASF938
	.byte	0x1
	.value	0x10d4
	.quad	.LFB92
	.quad	.LFE92-.LFB92
	.uleb128 0x1
	.byte	0x9c
	.long	0x4220
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x10d4
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x10d4
	.long	0xf2
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x23
	.long	.LASF939
	.byte	0x1
	.value	0x10d6
	.long	0x34c
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x25
	.quad	.LBB44
	.quad	.LBE44-.LBB44
	.uleb128 0x22
	.string	"pvx"
	.byte	0x1
	.value	0x10e0
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x10e1
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF940
	.byte	0x1
	.value	0x10f8
	.quad	.LFB93
	.quad	.LFE93-.LFB93
	.uleb128 0x1
	.byte	0x9c
	.long	0x426c
	.uleb128 0x20
	.string	"dsv"
	.byte	0x1
	.value	0x10f8
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.long	.LASF917
	.byte	0x1
	.value	0x10f8
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x21
	.long	.LASF941
	.byte	0x1
	.value	0x10f8
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF942
	.byte	0x1
	.value	0x1112
	.quad	.LFB94
	.quad	.LFE94-.LFB94
	.uleb128 0x1
	.byte	0x9c
	.long	0x42e3
	.uleb128 0x20
	.string	"dsv"
	.byte	0x1
	.value	0x1112
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.long	.LASF917
	.byte	0x1
	.value	0x1112
	.long	0x222
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x21
	.long	.LASF941
	.byte	0x1
	.value	0x1112
	.long	0x34c
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x21
	.long	.LASF259
	.byte	0x1
	.value	0x1112
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x23
	.long	.LASF943
	.byte	0x1
	.value	0x1114
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF916
	.byte	0x1
	.value	0x1115
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2a
	.long	.LASF944
	.byte	0x1
	.value	0x112b
	.quad	.LFB95
	.quad	.LFE95-.LFB95
	.uleb128 0x1
	.byte	0x9c
	.long	0x432b
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x112b
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x112b
	.long	0x222
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x112b
	.long	0x34c
	.uleb128 0x1
	.byte	0x51
	.byte	0
	.uleb128 0x2a
	.long	.LASF945
	.byte	0x1
	.value	0x1136
	.quad	.LFB96
	.quad	.LFE96-.LFB96
	.uleb128 0x1
	.byte	0x9c
	.long	0x4367
	.uleb128 0x21
	.long	.LASF916
	.byte	0x1
	.value	0x1136
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.long	.LASF917
	.byte	0x1
	.value	0x1136
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x2a
	.long	.LASF946
	.byte	0x1
	.value	0x114c
	.quad	.LFB97
	.quad	.LFE97-.LFB97
	.uleb128 0x1
	.byte	0x9c
	.long	0x4423
	.uleb128 0x20
	.string	"dsv"
	.byte	0x1
	.value	0x114c
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x20
	.string	"ssv"
	.byte	0x1
	.value	0x114c
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.long	.LASF259
	.byte	0x1
	.value	0x114c
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x22
	.string	"spv"
	.byte	0x1
	.value	0x114e
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF941
	.byte	0x1
	.value	0x114f
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.quad	.LBB45
	.quad	.LBE45-.LBB45
	.uleb128 0x23
	.long	.LASF947
	.byte	0x1
	.value	0x115a
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF948
	.byte	0x1
	.value	0x115b
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x25
	.quad	.LBB46
	.quad	.LBE46-.LBB46
	.uleb128 0x22
	.string	"csv"
	.byte	0x1
	.value	0x1164
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF949
	.byte	0x1
	.value	0x1179
	.quad	.LFB98
	.quad	.LFE98-.LFB98
	.uleb128 0x1
	.byte	0x9c
	.long	0x445f
	.uleb128 0x20
	.string	"dsv"
	.byte	0x1
	.value	0x1179
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"ssv"
	.byte	0x1
	.value	0x1179
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x2a
	.long	.LASF950
	.byte	0x1
	.value	0x1189
	.quad	.LFB99
	.quad	.LFE99-.LFB99
	.uleb128 0x1
	.byte	0x9c
	.long	0x44c5
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1189
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x1189
	.long	0x222
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x118b
	.long	0x34c
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x23
	.long	.LASF951
	.byte	0x1
	.value	0x118c
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF952
	.byte	0x1
	.value	0x118d
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2a
	.long	.LASF953
	.byte	0x1
	.value	0x11a5
	.quad	.LFB100
	.quad	.LFE100-.LFB100
	.uleb128 0x1
	.byte	0x9c
	.long	0x44ff
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x11a5
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"ptr"
	.byte	0x1
	.value	0x11a5
	.long	0x222
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x29
	.long	.LASF954
	.byte	0x1
	.value	0x11b6
	.long	0x1276
	.quad	.LFB101
	.quad	.LFE101-.LFB101
	.uleb128 0x1
	.byte	0x9c
	.long	0x453e
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x11b6
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x11b8
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF955
	.byte	0x1
	.value	0x11d5
	.long	0x13f9
	.quad	.LFB102
	.quad	.LFE102-.LFB102
	.uleb128 0x1
	.byte	0x9c
	.long	0x45c9
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x11d5
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x20
	.string	"obj"
	.byte	0x1
	.value	0x11d5
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x20
	.string	"how"
	.byte	0x1
	.value	0x11d5
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x21
	.long	.LASF956
	.byte	0x1
	.value	0x11d5
	.long	0x223c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x21
	.long	.LASF897
	.byte	0x1
	.value	0x11d6
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x21
	.long	.LASF957
	.byte	0x1
	.value	0x11d6
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0x11d8
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2a
	.long	.LASF958
	.byte	0x1
	.value	0x1229
	.quad	.LFB103
	.quad	.LFE103-.LFB103
	.uleb128 0x1
	.byte	0x9c
	.long	0x464f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1229
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"obj"
	.byte	0x1
	.value	0x1229
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x20
	.string	"how"
	.byte	0x1
	.value	0x1229
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x21
	.long	.LASF897
	.byte	0x1
	.value	0x1229
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x21
	.long	.LASF957
	.byte	0x1
	.value	0x1229
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0x122b
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF956
	.byte	0x1
	.value	0x122c
	.long	0x223c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x29
	.long	.LASF959
	.byte	0x1
	.value	0x12d2
	.long	0x57
	.quad	.LFB104
	.quad	.LFE104-.LFB104
	.uleb128 0x1
	.byte	0x9c
	.long	0x46cd
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x12d2
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x21
	.long	.LASF267
	.byte	0x1
	.value	0x12d2
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0x12d4
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"mgp"
	.byte	0x1
	.value	0x12d5
	.long	0x46cd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x25
	.quad	.LBB49
	.quad	.LBE49-.LBB49
	.uleb128 0x23
	.long	.LASF960
	.byte	0x1
	.value	0x12db
	.long	0x223c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x13f9
	.uleb128 0x29
	.long	.LASF961
	.byte	0x1
	.value	0x1302
	.long	0x1276
	.quad	.LFB105
	.quad	.LFE105-.LFB105
	.uleb128 0x1
	.byte	0x9c
	.long	0x4713
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1302
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"tsv"
	.byte	0x1
	.value	0x1304
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF962
	.byte	0x1
	.value	0x131a
	.quad	.LFB106
	.quad	.LFE106-.LFB106
	.uleb128 0x1
	.byte	0x9c
	.long	0x4799
	.uleb128 0x20
	.string	"tsv"
	.byte	0x1
	.value	0x131a
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x131a
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x22
	.string	"av"
	.byte	0x1
	.value	0x131c
	.long	0x143a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0x131d
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x25
	.quad	.LBB50
	.quad	.LBE50-.LBB50
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.value	0x1328
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x22
	.string	"svp"
	.byte	0x1
	.value	0x1329
	.long	0x1f8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x27
	.long	.LASF963
	.byte	0x1
	.value	0x1339
	.quad	.LFB107
	.quad	.LFE107-.LFB107
	.uleb128 0x1
	.byte	0x9c
	.long	0x480e
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1339
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x22
	.string	"av"
	.byte	0x1
	.value	0x133b
	.long	0x143a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x22
	.string	"svp"
	.byte	0x1
	.value	0x133c
	.long	0x1f8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.value	0x133d
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x22
	.string	"tsv"
	.byte	0x1
	.value	0x133e
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0x133f
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x2a
	.long	.LASF964
	.byte	0x1
	.value	0x1352
	.quad	.LFB108
	.quad	.LFE108-.LFB108
	.uleb128 0x1
	.byte	0x9c
	.long	0x48d1
	.uleb128 0x21
	.long	.LASF965
	.byte	0x1
	.value	0x1352
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x21
	.long	.LASF966
	.byte	0x1
	.value	0x1352
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x1352
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x21
	.long	.LASF967
	.byte	0x1
	.value	0x1352
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x21
	.long	.LASF968
	.byte	0x1
	.value	0x1352
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x22
	.string	"big"
	.byte	0x1
	.value	0x1354
	.long	0xf2
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x22
	.string	"mid"
	.byte	0x1
	.value	0x1355
	.long	0xf2
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x23
	.long	.LASF969
	.byte	0x1
	.value	0x1356
	.long	0xf2
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF970
	.byte	0x1
	.value	0x1357
	.long	0xf2
	.uleb128 0x1
	.byte	0x5f
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.value	0x1358
	.long	0x1243
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x23
	.long	.LASF971
	.byte	0x1
	.value	0x1359
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x2a
	.long	.LASF972
	.byte	0x1
	.value	0x13b4
	.quad	.LFB109
	.quad	.LFE109-.LFB109
	.uleb128 0x1
	.byte	0x9c
	.long	0x491a
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x13b4
	.long	0x1276
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x20
	.string	"nsv"
	.byte	0x1
	.value	0x13b4
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF111
	.byte	0x1
	.value	0x13b6
	.long	0x124e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x2a
	.long	.LASF973
	.byte	0x1
	.value	0x13dd
	.quad	.LFB110
	.quad	.LFE110-.LFB110
	.uleb128 0x1
	.byte	0x9c
	.long	0x4a08
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x13dd
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF852
	.byte	0x1
	.value	0x13df
	.long	0x13ff
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2c
	.long	.LASF974
	.byte	0x1
	.value	0x144f
	.quad	.L1228
	.uleb128 0x25
	.quad	.LBB52
	.quad	.LBE52-.LBB52
	.uleb128 0x22
	.string	"sp"
	.byte	0x1
	.value	0x13e5
	.long	0x1f8f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x23
	.long	.LASF975
	.byte	0x1
	.value	0x13e6
	.long	0x1428
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.quad	.LBB53
	.quad	.LBE53-.LBB53
	.uleb128 0x23
	.long	.LASF976
	.byte	0x1
	.value	0x13ee
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.quad	.LBB54
	.quad	.LBE54-.LBB54
	.long	0x49d7
	.uleb128 0x23
	.long	.LASF977
	.byte	0x1
	.value	0x13f1
	.long	0x4a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB57
	.quad	.LBE57-.LBB57
	.uleb128 0x22
	.string	"sp"
	.byte	0x1
	.value	0x13f9
	.long	0x1f8f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x23
	.long	.LASF978
	.byte	0x1
	.value	0x13f9
	.long	0x4a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x2131
	.uleb128 0x30
	.long	.LASF979
	.byte	0x1
	.value	0x14b0
	.long	0x1276
	.quad	.LFB111
	.quad	.LFE111-.LFB111
	.uleb128 0x1
	.byte	0x9c
	.long	0x4a3f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x14b0
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2a
	.long	.LASF980
	.byte	0x1
	.value	0x14c3
	.quad	.LFB112
	.quad	.LFE112-.LFB112
	.uleb128 0x1
	.byte	0x9c
	.long	0x4a7b
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x14c3
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF981
	.byte	0x1
	.value	0x14c5
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x29
	.long	.LASF982
	.byte	0x1
	.value	0x14fb
	.long	0x34c
	.quad	.LFB113
	.quad	.LFE113-.LFB113
	.uleb128 0x1
	.byte	0x9c
	.long	0x4aba
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x14fb
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x14fd
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x29
	.long	.LASF983
	.byte	0x1
	.value	0x151a
	.long	0x34c
	.quad	.LFB114
	.quad	.LFE114-.LFB114
	.uleb128 0x1
	.byte	0x9c
	.long	0x4b35
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x151a
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x25
	.quad	.LBB60
	.quad	.LBE60-.LBB60
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x1523
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF984
	.byte	0x1
	.value	0x1523
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0x1524
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0x1525
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x24
	.long	.LASF985
	.byte	0x1
	.value	0x1546
	.long	0xf8
	.quad	.LFB115
	.quad	.LFE115-.LFB115
	.uleb128 0x1
	.byte	0x9c
	.long	0x4bcd
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1546
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x20
	.string	"mgp"
	.byte	0x1
	.value	0x1546
	.long	0x46cd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x21
	.long	.LASF986
	.byte	0x1
	.value	0x1546
	.long	0x4bcd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x1546
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x21
	.long	.LASF987
	.byte	0x1
	.value	0x1546
	.long	0x12e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x20
	.string	"s"
	.byte	0x1
	.value	0x1546
	.long	0x2411
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x21
	.long	.LASF988
	.byte	0x1
	.value	0x1546
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x23
	.long	.LASF989
	.byte	0x1
	.value	0x1548
	.long	0xf8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x3654
	.uleb128 0x24
	.long	.LASF990
	.byte	0x1
	.value	0x1567
	.long	0xf8
	.quad	.LFB116
	.quad	.LFE116-.LFB116
	.uleb128 0x1
	.byte	0x9c
	.long	0x4cec
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1567
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x20
	.string	"mgp"
	.byte	0x1
	.value	0x1567
	.long	0x46cd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x21
	.long	.LASF986
	.byte	0x1
	.value	0x1567
	.long	0x4bcd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x1567
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x21
	.long	.LASF987
	.byte	0x1
	.value	0x1567
	.long	0x12e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x21
	.long	.LASF991
	.byte	0x1
	.value	0x1567
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x20
	.string	"sp"
	.byte	0x1
	.value	0x1567
	.long	0x4cec
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.long	.LASF988
	.byte	0x1
	.value	0x1567
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.long	.LASF992
	.byte	0x1
	.value	0x1567
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x23
	.long	.LASF989
	.byte	0x1
	.value	0x1569
	.long	0xf8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -49
	.uleb128 0x25
	.quad	.LBB61
	.quad	.LBE61-.LBB61
	.uleb128 0x23
	.long	.LASF993
	.byte	0x1
	.value	0x1574
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF994
	.byte	0x1
	.value	0x1575
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"p"
	.byte	0x1
	.value	0x1576
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x25
	.quad	.LBB62
	.quad	.LBE62-.LBB62
	.uleb128 0x23
	.long	.LASF984
	.byte	0x1
	.value	0x1589
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x2411
	.uleb128 0x2a
	.long	.LASF995
	.byte	0x1
	.value	0x15e9
	.quad	.LFB117
	.quad	.LFE117-.LFB117
	.uleb128 0x1
	.byte	0x9c
	.long	0x4dfb
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x15e9
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.long	.LASF987
	.byte	0x1
	.value	0x15e9
	.long	0x12e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x21
	.long	.LASF996
	.byte	0x1
	.value	0x15e9
	.long	0x12e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x23
	.long	.LASF988
	.byte	0x1
	.value	0x15eb
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0x15ec
	.long	0x2411
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x15ed
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x23
	.long	.LASF997
	.byte	0x1
	.value	0x15ee
	.long	0x3654
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x23
	.long	.LASF998
	.byte	0x1
	.value	0x15ef
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.quad	.LBB63
	.quad	.LBE63-.LBB63
	.uleb128 0x23
	.long	.LASF999
	.byte	0x1
	.value	0x15f6
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x23
	.long	.LASF992
	.byte	0x1
	.value	0x15f7
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0x15f8
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF989
	.byte	0x1
	.value	0x15f9
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -97
	.uleb128 0x25
	.quad	.LBB64
	.quad	.LBE64-.LBB64
	.uleb128 0x23
	.long	.LASF984
	.byte	0x1
	.value	0x160e
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF1000
	.byte	0x1
	.value	0x1635
	.quad	.LFB118
	.quad	.LFE118-.LFB118
	.uleb128 0x1
	.byte	0x9c
	.long	0x4f18
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1635
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.long	.LASF987
	.byte	0x1
	.value	0x1635
	.long	0x12e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0x1637
	.long	0x2411
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x1638
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x25
	.quad	.LBB65
	.quad	.LBE65-.LBB65
	.uleb128 0x23
	.long	.LASF992
	.byte	0x1
	.value	0x1641
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0x1642
	.long	0x13f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x23
	.long	.LASF997
	.byte	0x1
	.value	0x1643
	.long	0x3654
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2d
	.quad	.LBB66
	.quad	.LBE66-.LBB66
	.long	0x4ef6
	.uleb128 0x23
	.long	.LASF993
	.byte	0x1
	.value	0x165d
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF994
	.byte	0x1
	.value	0x165e
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.quad	.LBB67
	.quad	.LBE67-.LBB67
	.uleb128 0x22
	.string	"p"
	.byte	0x1
	.value	0x1661
	.long	0x2411
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF1001
	.byte	0x1
	.value	0x1662
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB68
	.quad	.LBE68-.LBB68
	.uleb128 0x22
	.string	"n"
	.byte	0x1
	.value	0x167e
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF1002
	.byte	0x1
	.value	0x16b1
	.long	0x1243
	.quad	.LFB119
	.quad	.LFE119-.LFB119
	.uleb128 0x1
	.byte	0x9c
	.long	0x502a
	.uleb128 0x20
	.string	"sv1"
	.byte	0x1
	.value	0x16b1
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"sv2"
	.byte	0x1
	.value	0x16b1
	.long	0x1276
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x22
	.string	"pv1"
	.byte	0x1
	.value	0x16b3
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x23
	.long	.LASF1003
	.byte	0x1
	.value	0x16b4
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x22
	.string	"pv2"
	.byte	0x1
	.value	0x16b5
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x23
	.long	.LASF1004
	.byte	0x1
	.value	0x16b6
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x22
	.string	"eq"
	.byte	0x1
	.value	0x16b7
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x22
	.string	"tpv"
	.byte	0x1
	.value	0x16b8
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF1005
	.byte	0x1
	.value	0x16b9
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.quad	.LBB69
	.quad	.LBE69-.LBB69
	.uleb128 0x23
	.long	.LASF1006
	.byte	0x1
	.value	0x16de
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -101
	.uleb128 0x2d
	.quad	.LBB70
	.quad	.LBE70-.LBB70
	.long	0x5008
	.uleb128 0x22
	.string	"pv"
	.byte	0x1
	.value	0x16e3
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x25
	.quad	.LBB71
	.quad	.LBE71-.LBB71
	.uleb128 0x22
	.string	"pv"
	.byte	0x1
	.value	0x16eb
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF1007
	.byte	0x1
	.value	0x170f
	.long	0x1243
	.quad	.LFB120
	.quad	.LFE120-.LFB120
	.uleb128 0x1
	.byte	0x9c
	.long	0x50f7
	.uleb128 0x20
	.string	"sv1"
	.byte	0x1
	.value	0x170f
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"sv2"
	.byte	0x1
	.value	0x170f
	.long	0x1276
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x23
	.long	.LASF1003
	.byte	0x1
	.value	0x1711
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x23
	.long	.LASF1004
	.byte	0x1
	.value	0x1711
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x22
	.string	"pv1"
	.byte	0x1
	.value	0x1712
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x22
	.string	"pv2"
	.byte	0x1
	.value	0x1712
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x22
	.string	"tpv"
	.byte	0x1
	.value	0x1712
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"cmp"
	.byte	0x1
	.value	0x1713
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x23
	.long	.LASF1005
	.byte	0x1
	.value	0x1714
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.quad	.LBB72
	.quad	.LBE72-.LBB72
	.uleb128 0x23
	.long	.LASF1008
	.byte	0x1
	.value	0x1742
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF1009
	.byte	0x1
	.value	0x1761
	.long	0x1243
	.quad	.LFB121
	.quad	.LFE121-.LFB121
	.uleb128 0x1
	.byte	0x9c
	.long	0x5136
	.uleb128 0x20
	.string	"sv1"
	.byte	0x1
	.value	0x1761
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x20
	.string	"sv2"
	.byte	0x1
	.value	0x1761
	.long	0x1276
	.uleb128 0x1
	.byte	0x51
	.byte	0
	.uleb128 0x29
	.long	.LASF1010
	.byte	0x1
	.value	0x17d8
	.long	0xf2
	.quad	.LFB122
	.quad	.LFE122-.LFB122
	.uleb128 0x1
	.byte	0x9c
	.long	0x537f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x17d8
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x20
	.string	"fp"
	.byte	0x1
	.value	0x17d8
	.long	0x1468
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x21
	.long	.LASF1011
	.byte	0x1
	.value	0x17d8
	.long	0x1243
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8500
	.uleb128 0x23
	.long	.LASF1012
	.byte	0x1
	.value	0x17da
	.long	0xf2
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8456
	.uleb128 0x23
	.long	.LASF1013
	.byte	0x1
	.value	0x17db
	.long	0x34c
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8464
	.uleb128 0x31
	.long	.LASF1273
	.byte	0x1
	.value	0x17dc
	.long	0x49
	.uleb128 0x22
	.string	"bp"
	.byte	0x1
	.value	0x17dd
	.long	0x537f
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x22
	.string	"cnt"
	.byte	0x1
	.value	0x17de
	.long	0x1243
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.value	0x17df
	.long	0x1243
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8484
	.uleb128 0x23
	.long	.LASF1014
	.byte	0x1
	.value	0x17e0
	.long	0x1243
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8480
	.uleb128 0x23
	.long	.LASF1015
	.byte	0x1
	.value	0x17e1
	.long	0x1243
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8468
	.uleb128 0x2c
	.long	.LASF1016
	.byte	0x1
	.value	0x1937
	.quad	.L1447
	.uleb128 0x2c
	.long	.LASF1017
	.byte	0x1
	.value	0x188e
	.quad	.L1487
	.uleb128 0x2c
	.long	.LASF1018
	.byte	0x1
	.value	0x18d0
	.quad	.L1491
	.uleb128 0x2c
	.long	.LASF1019
	.byte	0x1
	.value	0x18d4
	.quad	.L1498
	.uleb128 0x2c
	.long	.LASF1020
	.byte	0x1
	.value	0x18f9
	.quad	.L1477
	.uleb128 0x2d
	.quad	.LBB73
	.quad	.LBE73-.LBB73
	.long	0x5274
	.uleb128 0x22
	.string	"tsv"
	.byte	0x1
	.value	0x17f5
	.long	0x1276
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8448
	.byte	0
	.uleb128 0x2d
	.quad	.LBB74
	.quad	.LBE74-.LBB74
	.long	0x52bd
	.uleb128 0x22
	.string	"st"
	.byte	0x1
	.value	0x180e
	.long	0x233
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8416
	.uleb128 0x25
	.quad	.LBB75
	.quad	.LBE75-.LBB75
	.uleb128 0x23
	.long	.LASF966
	.byte	0x1
	.value	0x1810
	.long	0xff
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8440
	.byte	0
	.byte	0
	.uleb128 0x2d
	.quad	.LBB76
	.quad	.LBE76-.LBB76
	.long	0x52f5
	.uleb128 0x23
	.long	.LASF1021
	.byte	0x1
	.value	0x1819
	.long	0x1243
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8476
	.uleb128 0x23
	.long	.LASF1022
	.byte	0x1
	.value	0x181a
	.long	0xf2
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8432
	.byte	0
	.uleb128 0x2d
	.quad	.LBB77
	.quad	.LBE77-.LBB77
	.long	0x533b
	.uleb128 0x22
	.string	"ptr"
	.byte	0x1
	.value	0x1862
	.long	0x537f
	.uleb128 0x1
	.byte	0x5f
	.uleb128 0x22
	.string	"bpx"
	.byte	0x1
	.value	0x1863
	.long	0x34c
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8424
	.uleb128 0x23
	.long	.LASF1023
	.byte	0x1
	.value	0x1864
	.long	0x1243
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8472
	.byte	0
	.uleb128 0x25
	.quad	.LBB78
	.quad	.LBE78-.LBB78
	.uleb128 0x22
	.string	"buf"
	.byte	0x1
	.value	0x18f6
	.long	0x5385
	.uleb128 0x4
	.byte	0x91
	.sleb128 -8272
	.uleb128 0x25
	.quad	.LBB79
	.quad	.LBE79-.LBB79
	.uleb128 0x22
	.string	"bpe"
	.byte	0x1
	.value	0x18fb
	.long	0x537f
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x49
	.uleb128 0x9
	.long	0x49
	.long	0x5396
	.uleb128 0x32
	.long	0xb2
	.value	0x1fff
	.byte	0
	.uleb128 0x2a
	.long	.LASF1024
	.byte	0x1
	.value	0x1945
	.quad	.LFB123
	.quad	.LFE123-.LFB123
	.uleb128 0x1
	.byte	0x9c
	.long	0x5431
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1945
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x22
	.string	"d"
	.byte	0x1
	.value	0x1947
	.long	0xf2
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x23
	.long	.LASF259
	.byte	0x1
	.value	0x1948
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2c
	.long	.LASF1025
	.byte	0x1
	.value	0x1968
	.quad	.L1531
	.uleb128 0x2d
	.quad	.LBB80
	.quad	.LBE80-.LBB80
	.long	0x540f
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.value	0x1956
	.long	0x324
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x25
	.quad	.LBB81
	.quad	.LBE81-.LBB81
	.uleb128 0x23
	.long	.LASF868
	.byte	0x1
	.value	0x198f
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF1026
	.byte	0x1
	.value	0x19e2
	.quad	.LFB124
	.quad	.LFE124-.LFB124
	.uleb128 0x1
	.byte	0x9c
	.long	0x54c0
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x19e2
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF259
	.byte	0x1
	.value	0x19e4
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2c
	.long	.LASF1025
	.byte	0x1
	.value	0x1a00
	.quad	.L1582
	.uleb128 0x2d
	.quad	.LBB82
	.quad	.LBE82-.LBB82
	.long	0x549e
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.value	0x19f2
	.long	0x324
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x25
	.quad	.LBB83
	.quad	.LBE83-.LBB83
	.uleb128 0x23
	.long	.LASF868
	.byte	0x1
	.value	0x1a23
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF1027
	.byte	0x1
	.value	0x1a57
	.long	0x1276
	.quad	.LFB125
	.quad	.LFE125-.LFB125
	.uleb128 0x1
	.byte	0x9c
	.long	0x54ff
	.uleb128 0x21
	.long	.LASF1028
	.byte	0x1
	.value	0x1a57
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1a59
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF1029
	.byte	0x1
	.value	0x1a6f
	.long	0x1276
	.quad	.LFB126
	.quad	.LFE126-.LFB126
	.uleb128 0x1
	.byte	0x9c
	.long	0x552f
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1a71
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF1030
	.byte	0x1
	.value	0x1a87
	.long	0x1276
	.quad	.LFB127
	.quad	.LFE127-.LFB127
	.uleb128 0x1
	.byte	0x9c
	.long	0x555f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1a87
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF1031
	.byte	0x1
	.value	0x1a9e
	.long	0x1276
	.quad	.LFB128
	.quad	.LFE128-.LFB128
	.uleb128 0x1
	.byte	0x9c
	.long	0x55ab
	.uleb128 0x20
	.string	"s"
	.byte	0x1
	.value	0x1a9e
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x1a9e
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1aa0
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF1032
	.byte	0x1
	.value	0x1ab5
	.long	0x1276
	.quad	.LFB129
	.quad	.LFE129-.LFB129
	.uleb128 0x1
	.byte	0x9c
	.long	0x55f7
	.uleb128 0x20
	.string	"s"
	.byte	0x1
	.value	0x1ab5
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x1ab5
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1ab7
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF1033
	.byte	0x1
	.value	0x1acd
	.long	0x1276
	.quad	.LFB130
	.quad	.LFE130-.LFB130
	.uleb128 0x1
	.byte	0x9c
	.long	0x56d5
	.uleb128 0x20
	.string	"src"
	.byte	0x1
	.value	0x1acd
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x1acd
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x21
	.long	.LASF936
	.byte	0x1
	.value	0x1acd
	.long	0x124e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1acf
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF1006
	.byte	0x1
	.value	0x1ad0
	.long	0xf8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -57
	.uleb128 0x2d
	.quad	.LBB92
	.quad	.LBE92-.LBB92
	.long	0x568a
	.uleb128 0x23
	.long	.LASF1034
	.byte	0x1
	.value	0x1ad2
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB93
	.quad	.LBE93-.LBB93
	.uleb128 0x23
	.long	.LASF1035
	.byte	0x1
	.value	0x1ad9
	.long	0x222
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF1036
	.byte	0x1
	.value	0x1ad9
	.long	0x56d5
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x23
	.long	.LASF1037
	.byte	0x1
	.value	0x1ad9
	.long	0x1243
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x23
	.long	.LASF1038
	.byte	0x1
	.value	0x1ad9
	.long	0x124e
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x56db
	.uleb128 0xd
	.long	0x2d
	.uleb128 0x29
	.long	.LASF1039
	.byte	0x1
	.value	0x1b07
	.long	0x1276
	.quad	.LFB131
	.quad	.LFE131-.LFB131
	.uleb128 0x1
	.byte	0x9c
	.long	0x5731
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x1b07
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x33
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1b09
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF1040
	.byte	0x1
	.value	0x1b0a
	.long	0x1bb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.byte	0
	.uleb128 0x29
	.long	.LASF1041
	.byte	0x1
	.value	0x1b14
	.long	0x1276
	.quad	.LFB132
	.quad	.LFE132-.LFB132
	.uleb128 0x1
	.byte	0x9c
	.long	0x577f
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x1b14
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF1040
	.byte	0x1
	.value	0x1b14
	.long	0x577f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1b16
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1bb
	.uleb128 0x29
	.long	.LASF1042
	.byte	0x1
	.value	0x1b26
	.long	0x1276
	.quad	.LFB133
	.quad	.LFE133-.LFB133
	.uleb128 0x1
	.byte	0x9c
	.long	0x57c2
	.uleb128 0x20
	.string	"n"
	.byte	0x1
	.value	0x1b26
	.long	0x33a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1b28
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF1043
	.byte	0x1
	.value	0x1b39
	.long	0x1276
	.quad	.LFB134
	.quad	.LFE134-.LFB134
	.uleb128 0x1
	.byte	0x9c
	.long	0x57ff
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x1b39
	.long	0x324
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1b3b
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF1044
	.byte	0x1
	.value	0x1b4c
	.long	0x1276
	.quad	.LFB135
	.quad	.LFE135-.LFB135
	.uleb128 0x1
	.byte	0x9c
	.long	0x583c
	.uleb128 0x20
	.string	"u"
	.byte	0x1
	.value	0x1b4c
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1b4e
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF1045
	.byte	0x1
	.value	0x1b5f
	.long	0x1276
	.quad	.LFB136
	.quad	.LFE136-.LFB136
	.uleb128 0x1
	.byte	0x9c
	.long	0x587b
	.uleb128 0x21
	.long	.LASF1046
	.byte	0x1
	.value	0x1b5f
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1b61
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x29
	.long	.LASF1047
	.byte	0x1
	.value	0x1b70
	.long	0x1276
	.quad	.LFB137
	.quad	.LFE137-.LFB137
	.uleb128 0x1
	.byte	0x9c
	.long	0x58ad
	.uleb128 0x21
	.long	.LASF1046
	.byte	0x1
	.value	0x1b70
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x29
	.long	.LASF1048
	.byte	0x1
	.value	0x1b7f
	.long	0x1276
	.quad	.LFB138
	.quad	.LFE138-.LFB138
	.uleb128 0x1
	.byte	0x9c
	.long	0x58eb
	.uleb128 0x20
	.string	"old"
	.byte	0x1
	.value	0x1b7f
	.long	0x1276
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1b81
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x2a
	.long	.LASF1049
	.byte	0x1
	.value	0x1b9c
	.quad	.LFB139
	.quad	.LFE139-.LFB139
	.uleb128 0x1
	.byte	0x9c
	.long	0x5985
	.uleb128 0x20
	.string	"s"
	.byte	0x1
	.value	0x1b9c
	.long	0xf2
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x21
	.long	.LASF852
	.byte	0x1
	.value	0x1b9c
	.long	0x13ff
	.uleb128 0x3
	.byte	0x91
	.sleb128 -344
	.uleb128 0x23
	.long	.LASF1050
	.byte	0x1
	.value	0x1b9e
	.long	0x21b3
	.uleb128 0x1
	.byte	0x5f
	.uleb128 0x22
	.string	"gv"
	.byte	0x1
	.value	0x1b9f
	.long	0x1434
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1ba0
	.long	0x1276
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.value	0x1ba1
	.long	0x1243
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x22
	.string	"pm"
	.byte	0x1
	.value	0x1ba2
	.long	0x1e20
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x22
	.string	"max"
	.byte	0x1
	.value	0x1ba3
	.long	0x1243
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF1051
	.byte	0x1
	.value	0x1ba4
	.long	0x304
	.uleb128 0x3
	.byte	0x91
	.sleb128 -336
	.byte	0
	.uleb128 0x29
	.long	.LASF1052
	.byte	0x1
	.value	0x1bf6
	.long	0x59e1
	.quad	.LFB140
	.quad	.LFE140-.LFB140
	.uleb128 0x1
	.byte	0x9c
	.long	0x59e1
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1bf6
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x22
	.string	"io"
	.byte	0x1
	.value	0x1bf8
	.long	0x59e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x22
	.string	"gv"
	.byte	0x1
	.value	0x1bf9
	.long	0x1434
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x22
	.string	"n_a"
	.byte	0x1
	.value	0x1bfa
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x87c
	.uleb128 0x29
	.long	.LASF1053
	.byte	0x1
	.value	0x1c21
	.long	0x1428
	.quad	.LFB141
	.quad	.LFE141-.LFB141
	.uleb128 0x1
	.byte	0x9c
	.long	0x5b0b
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1c21
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x20
	.string	"st"
	.byte	0x1
	.value	0x1c21
	.long	0x5b0b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x20
	.string	"gvp"
	.byte	0x1
	.value	0x1c21
	.long	0x5b11
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x21
	.long	.LASF1054
	.byte	0x1
	.value	0x1c21
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x22
	.string	"gv"
	.byte	0x1
	.value	0x1c23
	.long	0x1434
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x22
	.string	"cv"
	.byte	0x1
	.value	0x1c24
	.long	0x1428
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x22
	.string	"n_a"
	.byte	0x1
	.value	0x1c25
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2c
	.long	.LASF1055
	.byte	0x1
	.value	0x1c53
	.quad	.L1735
	.uleb128 0x2c
	.long	.LASF1056
	.byte	0x1
	.value	0x1c3d
	.quad	.L1739
	.uleb128 0x2d
	.quad	.LBB108
	.quad	.LBE108-.LBB108
	.long	0x5ae9
	.uleb128 0x22
	.string	"sp"
	.byte	0x1
	.value	0x1c3c
	.long	0x1f8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.quad	.LBB109
	.quad	.LBE109-.LBB109
	.uleb128 0x23
	.long	.LASF906
	.byte	0x1
	.value	0x1c3d
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"arg"
	.byte	0x1
	.value	0x1c3d
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB111
	.quad	.LBE111-.LBB111
	.uleb128 0x23
	.long	.LASF906
	.byte	0x1
	.value	0x1c55
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x13ff
	.uleb128 0x6
	.byte	0x8
	.long	0x1434
	.uleb128 0x29
	.long	.LASF1057
	.byte	0x1
	.value	0x1c74
	.long	0x1243
	.quad	.LFB142
	.quad	.LFE142-.LFB142
	.uleb128 0x1
	.byte	0x9c
	.long	0x5b67
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1c74
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x25
	.quad	.LBB112
	.quad	.LBE112-.LBB112
	.uleb128 0x23
	.long	.LASF1058
	.byte	0x1
	.value	0x1c79
	.long	0x2721
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF1059
	.byte	0x1
	.value	0x1c97
	.long	0x324
	.quad	.LFB143
	.quad	.LFE143-.LFB143
	.uleb128 0x1
	.byte	0x9c
	.long	0x5b97
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1c97
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x29
	.long	.LASF1060
	.byte	0x1
	.value	0x1cab
	.long	0x32f
	.quad	.LFB144
	.quad	.LFE144-.LFB144
	.uleb128 0x1
	.byte	0x9c
	.long	0x5bc7
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1cab
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x29
	.long	.LASF1061
	.byte	0x1
	.value	0x1cbf
	.long	0x33a
	.quad	.LFB145
	.quad	.LFE145-.LFB145
	.uleb128 0x1
	.byte	0x9c
	.long	0x5bf7
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1cbf
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.byte	0
	.uleb128 0x29
	.long	.LASF1062
	.byte	0x1
	.value	0x1ccb
	.long	0xf2
	.quad	.LFB146
	.quad	.LFE146-.LFB146
	.uleb128 0x1
	.byte	0x9c
	.long	0x5c37
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1ccb
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"n_a"
	.byte	0x1
	.value	0x1ccd
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x29
	.long	.LASF1063
	.byte	0x1
	.value	0x1ce3
	.long	0xf2
	.quad	.LFB147
	.quad	.LFE147-.LFB147
	.uleb128 0x1
	.byte	0x9c
	.long	0x5c76
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1ce3
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0x1ce3
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x29
	.long	.LASF1064
	.byte	0x1
	.value	0x1cee
	.long	0xf2
	.quad	.LFB148
	.quad	.LFE148-.LFB148
	.uleb128 0x1
	.byte	0x9c
	.long	0x5cb4
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1cee
	.long	0x1276
	.uleb128 0x1
	.byte	0x50
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0x1cee
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x29
	.long	.LASF1065
	.byte	0x1
	.value	0x1cfc
	.long	0xf2
	.quad	.LFB149
	.quad	.LFE149-.LFB149
	.uleb128 0x1
	.byte	0x9c
	.long	0x5cf3
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1cfc
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0x1cfc
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x29
	.long	.LASF1066
	.byte	0x1
	.value	0x1d15
	.long	0xf2
	.quad	.LFB150
	.quad	.LFE150-.LFB150
	.uleb128 0x1
	.byte	0x9c
	.long	0x5d70
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1d15
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0x1d15
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x21
	.long	.LASF259
	.byte	0x1
	.value	0x1d15
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0x1d17
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.quad	.LBB113
	.quad	.LBE113-.LBB113
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x1d27
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF1067
	.byte	0x1
	.value	0x1d40
	.long	0xf2
	.quad	.LFB151
	.quad	.LFE151-.LFB151
	.uleb128 0x1
	.byte	0x9c
	.long	0x5da1
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1d40
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x29
	.long	.LASF1068
	.byte	0x1
	.value	0x1d55
	.long	0xf2
	.quad	.LFB152
	.quad	.LFE152-.LFB152
	.uleb128 0x1
	.byte	0x9c
	.long	0x5de0
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1d55
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0x1d55
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x29
	.long	.LASF1069
	.byte	0x1
	.value	0x1d66
	.long	0xf2
	.quad	.LFB153
	.quad	.LFE153-.LFB153
	.uleb128 0x1
	.byte	0x9c
	.long	0x5e1f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1d66
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0x1d66
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x29
	.long	.LASF1070
	.byte	0x1
	.value	0x1d73
	.long	0xf2
	.quad	.LFB154
	.quad	.LFE154-.LFB154
	.uleb128 0x1
	.byte	0x9c
	.long	0x5e50
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1d73
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x29
	.long	.LASF1071
	.byte	0x1
	.value	0x1d88
	.long	0xf2
	.quad	.LFB155
	.quad	.LFE155-.LFB155
	.uleb128 0x1
	.byte	0x9c
	.long	0x5e8f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1d88
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0x1d88
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x29
	.long	.LASF1072
	.byte	0x1
	.value	0x1d99
	.long	0xf2
	.quad	.LFB156
	.quad	.LFE156-.LFB156
	.uleb128 0x1
	.byte	0x9c
	.long	0x5ece
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1d99
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"lp"
	.byte	0x1
	.value	0x1d99
	.long	0x3654
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x30
	.long	.LASF1073
	.byte	0x1
	.value	0x1daa
	.long	0xf2
	.quad	.LFB157
	.quad	.LFE157-.LFB157
	.uleb128 0x1
	.byte	0x9c
	.long	0x5f2e
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1daa
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x20
	.string	"ob"
	.byte	0x1
	.value	0x1daa
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x25
	.quad	.LBB114
	.quad	.LBE114-.LBB114
	.uleb128 0x23
	.long	.LASF897
	.byte	0x1
	.value	0x1dad
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF1074
	.byte	0x1
	.value	0x1ddb
	.long	0x57
	.quad	.LFB158
	.quad	.LFE158-.LFB158
	.uleb128 0x1
	.byte	0x9c
	.long	0x5f5f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1ddb
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x29
	.long	.LASF1075
	.byte	0x1
	.value	0x1df4
	.long	0x57
	.quad	.LFB159
	.quad	.LFE159-.LFB159
	.uleb128 0x1
	.byte	0x9c
	.long	0x5f9f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1df4
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.long	.LASF897
	.byte	0x1
	.value	0x1df4
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x29
	.long	.LASF1076
	.byte	0x1
	.value	0x1e11
	.long	0x1276
	.quad	.LFB160
	.quad	.LFE160-.LFB160
	.uleb128 0x1
	.byte	0x9c
	.long	0x6033
	.uleb128 0x20
	.string	"rv"
	.byte	0x1
	.value	0x1e11
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x21
	.long	.LASF1077
	.byte	0x1
	.value	0x1e11
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x22
	.string	"sv"
	.byte	0x1
	.value	0x1e13
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2d
	.quad	.LBB117
	.quad	.LBE117-.LBB117
	.long	0x6011
	.uleb128 0x23
	.long	.LASF111
	.byte	0x1
	.value	0x1e1b
	.long	0x124e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x25
	.quad	.LBB118
	.quad	.LBE118-.LBB118
	.uleb128 0x23
	.long	.LASF852
	.byte	0x1
	.value	0x1e31
	.long	0x13ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF1078
	.byte	0x1
	.value	0x1e4a
	.long	0x1276
	.quad	.LFB161
	.quad	.LFE161-.LFB161
	.uleb128 0x1
	.byte	0x9c
	.long	0x6081
	.uleb128 0x20
	.string	"rv"
	.byte	0x1
	.value	0x1e4a
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF1077
	.byte	0x1
	.value	0x1e4a
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x20
	.string	"pv"
	.byte	0x1
	.value	0x1e4a
	.long	0xc4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x29
	.long	.LASF1079
	.byte	0x1
	.value	0x1e62
	.long	0x1276
	.quad	.LFB162
	.quad	.LFE162-.LFB162
	.uleb128 0x1
	.byte	0x9c
	.long	0x60cf
	.uleb128 0x20
	.string	"rv"
	.byte	0x1
	.value	0x1e62
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.long	.LASF1077
	.byte	0x1
	.value	0x1e62
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x20
	.string	"iv"
	.byte	0x1
	.value	0x1e62
	.long	0x324
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x29
	.long	.LASF1080
	.byte	0x1
	.value	0x1e75
	.long	0x1276
	.quad	.LFB163
	.quad	.LFE163-.LFB163
	.uleb128 0x1
	.byte	0x9c
	.long	0x611d
	.uleb128 0x20
	.string	"rv"
	.byte	0x1
	.value	0x1e75
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.long	.LASF1077
	.byte	0x1
	.value	0x1e75
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x20
	.string	"uv"
	.byte	0x1
	.value	0x1e75
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x29
	.long	.LASF1081
	.byte	0x1
	.value	0x1e88
	.long	0x1276
	.quad	.LFB164
	.quad	.LFE164-.LFB164
	.uleb128 0x1
	.byte	0x9c
	.long	0x616b
	.uleb128 0x20
	.string	"rv"
	.byte	0x1
	.value	0x1e88
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.long	.LASF1077
	.byte	0x1
	.value	0x1e88
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x20
	.string	"nv"
	.byte	0x1
	.value	0x1e88
	.long	0x33a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x29
	.long	.LASF1082
	.byte	0x1
	.value	0x1e9e
	.long	0x1276
	.quad	.LFB165
	.quad	.LFE165-.LFB165
	.uleb128 0x1
	.byte	0x9c
	.long	0x61c6
	.uleb128 0x20
	.string	"rv"
	.byte	0x1
	.value	0x1e9e
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.long	.LASF1077
	.byte	0x1
	.value	0x1e9e
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x20
	.string	"pv"
	.byte	0x1
	.value	0x1e9e
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x20
	.string	"n"
	.byte	0x1
	.value	0x1e9e
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x29
	.long	.LASF1083
	.byte	0x1
	.value	0x1eaf
	.long	0x1276
	.quad	.LFB166
	.quad	.LFE166-.LFB166
	.uleb128 0x1
	.byte	0x9c
	.long	0x6215
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1eaf
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF852
	.byte	0x1
	.value	0x1eaf
	.long	0x13ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF1046
	.byte	0x1
	.value	0x1eb1
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	.LASF1084
	.byte	0x1
	.value	0x1ed6
	.quad	.LFB167
	.quad	.LFE167-.LFB167
	.uleb128 0x1
	.byte	0x9c
	.long	0x6251
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1ed6
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF168
	.byte	0x1
	.value	0x1ed8
	.long	0xc4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2a
	.long	.LASF1085
	.byte	0x1
	.value	0x1eff
	.quad	.LFB168
	.quad	.LFE168-.LFB168
	.uleb128 0x1
	.byte	0x9c
	.long	0x629b
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1eff
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF259
	.byte	0x1
	.value	0x1eff
	.long	0x124e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x22
	.string	"rv"
	.byte	0x1
	.value	0x1f01
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2a
	.long	.LASF1086
	.byte	0x1
	.value	0x1f1f
	.quad	.LFB169
	.quad	.LFE169-.LFB169
	.uleb128 0x1
	.byte	0x9c
	.long	0x62c8
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1f1f
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2a
	.long	.LASF1087
	.byte	0x1
	.value	0x1f2c
	.quad	.LFB170
	.quad	.LFE170-.LFB170
	.uleb128 0x1
	.byte	0x9c
	.long	0x62f5
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1f2c
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2a
	.long	.LASF1088
	.byte	0x1
	.value	0x1f39
	.quad	.LFB171
	.quad	.LFE171-.LFB171
	.uleb128 0x1
	.byte	0x9c
	.long	0x6342
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1f39
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.quad	.LBB119
	.quad	.LBE119-.LBB119
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0x1f3c
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF1089
	.byte	0x1
	.value	0x1f4a
	.long	0xf8
	.quad	.LFB172
	.quad	.LFE172-.LFB172
	.uleb128 0x1
	.byte	0x9c
	.long	0x6393
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1f4a
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.quad	.LBB120
	.quad	.LBE120-.LBB120
	.uleb128 0x22
	.string	"mg"
	.byte	0x1
	.value	0x1f4d
	.long	0x13f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF1090
	.byte	0x1
	.value	0x1f5e
	.quad	.LFB173
	.quad	.LFE173-.LFB173
	.uleb128 0x1
	.byte	0x9c
	.long	0x63fd
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1f5e
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x20
	.string	"iv"
	.byte	0x1
	.value	0x1f5e
	.long	0x324
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x22
	.string	"buf"
	.byte	0x1
	.value	0x1f60
	.long	0x3941
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF881
	.byte	0x1
	.value	0x1f61
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x22
	.string	"ptr"
	.byte	0x1
	.value	0x1f62
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2a
	.long	.LASF1091
	.byte	0x1
	.value	0x1f70
	.quad	.LFB174
	.quad	.LFE174-.LFB174
	.uleb128 0x1
	.byte	0x9c
	.long	0x6467
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1f70
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x20
	.string	"iv"
	.byte	0x1
	.value	0x1f70
	.long	0x324
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x22
	.string	"buf"
	.byte	0x1
	.value	0x1f72
	.long	0x3941
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF881
	.byte	0x1
	.value	0x1f73
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x22
	.string	"ptr"
	.byte	0x1
	.value	0x1f74
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x2a
	.long	.LASF1092
	.byte	0x1
	.value	0x1fa5
	.quad	.LFB175
	.quad	.LFE175-.LFB175
	.uleb128 0x1
	.byte	0x9c
	.long	0x64b6
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1fa5
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x1fa5
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x33
	.uleb128 0x23
	.long	.LASF1040
	.byte	0x1
	.value	0x1fa7
	.long	0x1bb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.byte	0
	.uleb128 0x2a
	.long	.LASF1093
	.byte	0x1
	.value	0x1fb9
	.quad	.LFB176
	.quad	.LFE176-.LFB176
	.uleb128 0x1
	.byte	0x9c
	.long	0x6501
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1fb9
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x1fb9
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x21
	.long	.LASF1040
	.byte	0x1
	.value	0x1fb9
	.long	0x577f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF1094
	.byte	0x1
	.value	0x1fc7
	.quad	.LFB177
	.quad	.LFE177-.LFB177
	.uleb128 0x1
	.byte	0x9c
	.long	0x6550
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1fc7
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x1fc7
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x33
	.uleb128 0x23
	.long	.LASF1040
	.byte	0x1
	.value	0x1fc9
	.long	0x1bb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.byte	0
	.uleb128 0x2a
	.long	.LASF1095
	.byte	0x1
	.value	0x1fda
	.quad	.LFB178
	.quad	.LFE178-.LFB178
	.uleb128 0x1
	.byte	0x9c
	.long	0x659b
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x1fda
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x1fda
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x21
	.long	.LASF1040
	.byte	0x1
	.value	0x1fda
	.long	0x577f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF1096
	.byte	0x1
	.value	0x200f
	.quad	.LFB179
	.quad	.LFE179-.LFB179
	.uleb128 0x1
	.byte	0x9c
	.long	0x65ea
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x200f
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x200f
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x33
	.uleb128 0x23
	.long	.LASF1040
	.byte	0x1
	.value	0x2011
	.long	0x1bb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.byte	0
	.uleb128 0x2a
	.long	.LASF1097
	.byte	0x1
	.value	0x2023
	.quad	.LFB180
	.quad	.LFE180-.LFB180
	.uleb128 0x1
	.byte	0x9c
	.long	0x6635
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x2023
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x2023
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x21
	.long	.LASF1040
	.byte	0x1
	.value	0x2023
	.long	0x577f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF1098
	.byte	0x1
	.value	0x2031
	.quad	.LFB181
	.quad	.LFE181-.LFB181
	.uleb128 0x1
	.byte	0x9c
	.long	0x6684
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x2031
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x2031
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x33
	.uleb128 0x23
	.long	.LASF1040
	.byte	0x1
	.value	0x2033
	.long	0x1bb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.byte	0
	.uleb128 0x2a
	.long	.LASF1099
	.byte	0x1
	.value	0x2044
	.quad	.LFB182
	.quad	.LFE182-.LFB182
	.uleb128 0x1
	.byte	0x9c
	.long	0x66cf
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x2044
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x2044
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x21
	.long	.LASF1040
	.byte	0x1
	.value	0x2044
	.long	0x577f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF1100
	.byte	0x1
	.value	0x2056
	.quad	.LFB183
	.quad	.LFE183-.LFB183
	.uleb128 0x1
	.byte	0x9c
	.long	0x6756
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x2056
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x2056
	.long	0x222
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x21
	.long	.LASF1101
	.byte	0x1
	.value	0x2056
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.long	.LASF1040
	.byte	0x1
	.value	0x2056
	.long	0x577f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x21
	.long	.LASF1102
	.byte	0x1
	.value	0x2056
	.long	0x1f8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x21
	.long	.LASF1103
	.byte	0x1
	.value	0x2056
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x21
	.long	.LASF1104
	.byte	0x1
	.value	0x2056
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2f
	.long	.LASF1105
	.byte	0x1
	.value	0x205f
	.long	0x1243
	.quad	.LFB184
	.quad	.LFE184-.LFB184
	.uleb128 0x1
	.byte	0x9c
	.long	0x6797
	.uleb128 0x21
	.long	.LASF1106
	.byte	0x1
	.value	0x205f
	.long	0x240b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"var"
	.byte	0x1
	.value	0x2061
	.long	0x1243
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x2f
	.long	.LASF1107
	.byte	0x1
	.value	0x206e
	.long	0xf2
	.quad	.LFB185
	.quad	.LFE185-.LFB185
	.uleb128 0x1
	.byte	0x9c
	.long	0x6832
	.uleb128 0x20
	.string	"nv"
	.byte	0x1
	.value	0x206e
	.long	0x33a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x21
	.long	.LASF1108
	.byte	0x1
	.value	0x206e
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x20
	.string	"len"
	.byte	0x1
	.value	0x206e
	.long	0x3654
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x22
	.string	"neg"
	.byte	0x1
	.value	0x2070
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"uv"
	.byte	0x1
	.value	0x2071
	.long	0x32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x22
	.string	"p"
	.byte	0x1
	.value	0x2072
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x25
	.quad	.LBB121
	.quad	.LBE121-.LBB121
	.uleb128 0x22
	.string	"dig"
	.byte	0x1
	.value	0x207c
	.long	0x3b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF1109
	.byte	0x1
	.value	0x2097
	.quad	.LFB186
	.quad	.LFE186-.LFB186
	.uleb128 0x1
	.byte	0x9c
	.long	0x6e4f
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x2097
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -536
	.uleb128 0x20
	.string	"pat"
	.byte	0x1
	.value	0x2097
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -544
	.uleb128 0x21
	.long	.LASF1101
	.byte	0x1
	.value	0x2097
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -552
	.uleb128 0x21
	.long	.LASF1040
	.byte	0x1
	.value	0x2097
	.long	0x577f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -560
	.uleb128 0x21
	.long	.LASF1102
	.byte	0x1
	.value	0x2097
	.long	0x1f8f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -568
	.uleb128 0x21
	.long	.LASF1103
	.byte	0x1
	.value	0x2097
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -572
	.uleb128 0x21
	.long	.LASF1104
	.byte	0x1
	.value	0x2097
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -584
	.uleb128 0x22
	.string	"p"
	.byte	0x1
	.value	0x2099
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -424
	.uleb128 0x22
	.string	"q"
	.byte	0x1
	.value	0x209a
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -472
	.uleb128 0x23
	.long	.LASF1110
	.byte	0x1
	.value	0x209b
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -280
	.uleb128 0x23
	.long	.LASF1111
	.byte	0x1
	.value	0x209c
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -464
	.uleb128 0x23
	.long	.LASF1112
	.byte	0x1
	.value	0x209d
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -508
	.uleb128 0x23
	.long	.LASF1113
	.byte	0x1
	.value	0x209e
	.long	0x6e4f
	.uleb128 0x9
	.byte	0x3
	.quad	nullstr.11958
	.uleb128 0x23
	.long	.LASF1114
	.byte	0x1
	.value	0x209f
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -416
	.uleb128 0x23
	.long	.LASF1115
	.byte	0x1
	.value	0x20a0
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -525
	.uleb128 0x23
	.long	.LASF1116
	.byte	0x1
	.value	0x20a1
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -513
	.uleb128 0x22
	.string	"nsv"
	.byte	0x1
	.value	0x20a2
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -408
	.uleb128 0x23
	.long	.LASF881
	.byte	0x1
	.value	0x20a6
	.long	0x6e5f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x2c
	.long	.LASF1117
	.byte	0x1
	.value	0x21b0
	.quad	.L2003
	.uleb128 0x2c
	.long	.LASF1118
	.byte	0x1
	.value	0x216d
	.quad	.L2011
	.uleb128 0x2c
	.long	.LASF1119
	.byte	0x1
	.value	0x2417
	.quad	.L2015
	.uleb128 0x2c
	.long	.LASF1120
	.byte	0x1
	.value	0x224e
	.quad	.L2087
	.uleb128 0x2c
	.long	.LASF1121
	.byte	0x1
	.value	0x22f4
	.quad	.L2141
	.uleb128 0x2c
	.long	.LASF1122
	.byte	0x1
	.value	0x22cc
	.quad	.L2176
	.uleb128 0x2c
	.long	.LASF1123
	.byte	0x1
	.value	0x22cf
	.quad	.L2178
	.uleb128 0x2c
	.long	.LASF1124
	.byte	0x1
	.value	0x23fb
	.quad	.L2242
	.uleb128 0x2d
	.quad	.LBB122
	.quad	.LBE122-.LBB122
	.long	0x6a15
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0x20b6
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -288
	.byte	0
	.uleb128 0x2d
	.quad	.LBB123
	.quad	.LBE123-.LBB123
	.long	0x6a8b
	.uleb128 0x23
	.long	.LASF1125
	.byte	0x1
	.value	0x20d0
	.long	0x3b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -504
	.uleb128 0x22
	.string	"pp"
	.byte	0x1
	.value	0x20d1
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -400
	.uleb128 0x25
	.quad	.LBB124
	.quad	.LBE124-.LBB124
	.uleb128 0x22
	.string	"nv"
	.byte	0x1
	.value	0x20d7
	.long	0x33a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -392
	.uleb128 0x25
	.quad	.LBB125
	.quad	.LBE125-.LBB125
	.uleb128 0x22
	.string	"l"
	.byte	0x1
	.value	0x20eb
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -432
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2e
	.long	.Ldebug_ranges0+0xc0
	.uleb128 0x22
	.string	"alt"
	.byte	0x1
	.value	0x20fb
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -524
	.uleb128 0x23
	.long	.LASF893
	.byte	0x1
	.value	0x20fc
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -523
	.uleb128 0x23
	.long	.LASF1126
	.byte	0x1
	.value	0x20fd
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -522
	.uleb128 0x23
	.long	.LASF1127
	.byte	0x1
	.value	0x20fe
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -521
	.uleb128 0x23
	.long	.LASF1128
	.byte	0x1
	.value	0x20ff
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -520
	.uleb128 0x23
	.long	.LASF1129
	.byte	0x1
	.value	0x2100
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -519
	.uleb128 0x23
	.long	.LASF1130
	.byte	0x1
	.value	0x2101
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -518
	.uleb128 0x23
	.long	.LASF1131
	.byte	0x1
	.value	0x2102
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -517
	.uleb128 0x23
	.long	.LASF1132
	.byte	0x1
	.value	0x2103
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -384
	.uleb128 0x23
	.long	.LASF1133
	.byte	0x1
	.value	0x2104
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -376
	.uleb128 0x23
	.long	.LASF1134
	.byte	0x1
	.value	0x2105
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -516
	.uleb128 0x23
	.long	.LASF1135
	.byte	0x1
	.value	0x2106
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -368
	.uleb128 0x23
	.long	.LASF1136
	.byte	0x1
	.value	0x2107
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -484
	.uleb128 0x23
	.long	.LASF1006
	.byte	0x1
	.value	0x2108
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -515
	.uleb128 0x23
	.long	.LASF1137
	.byte	0x1
	.value	0x210f
	.long	0x145
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x23
	.long	.LASF1138
	.byte	0x1
	.value	0x2110
	.long	0x6e6f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x23
	.long	.LASF1139
	.byte	0x1
	.value	0x2111
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -360
	.uleb128 0x23
	.long	.LASF1140
	.byte	0x1
	.value	0x2113
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -352
	.uleb128 0x23
	.long	.LASF1141
	.byte	0x1
	.value	0x2114
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -456
	.uleb128 0x23
	.long	.LASF1142
	.byte	0x1
	.value	0x2115
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -344
	.uleb128 0x23
	.long	.LASF1143
	.byte	0x1
	.value	0x2116
	.long	0x2411
	.uleb128 0x3
	.byte	0x91
	.sleb128 -336
	.uleb128 0x23
	.long	.LASF1144
	.byte	0x1
	.value	0x2117
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -448
	.uleb128 0x22
	.string	"c"
	.byte	0x1
	.value	0x2118
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -526
	.uleb128 0x22
	.string	"i"
	.byte	0x1
	.value	0x2119
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -512
	.uleb128 0x23
	.long	.LASF1145
	.byte	0x1
	.value	0x211a
	.long	0x3b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -500
	.uleb128 0x22
	.string	"iv"
	.byte	0x1
	.value	0x211b
	.long	0x324
	.uleb128 0x3
	.byte	0x91
	.sleb128 -328
	.uleb128 0x22
	.string	"uv"
	.byte	0x1
	.value	0x211c
	.long	0x32f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -320
	.uleb128 0x22
	.string	"nv"
	.byte	0x1
	.value	0x2121
	.long	0x6e7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x23
	.long	.LASF1146
	.byte	0x1
	.value	0x2125
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x23
	.long	.LASF1147
	.byte	0x1
	.value	0x2126
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -312
	.uleb128 0x22
	.string	"gap"
	.byte	0x1
	.value	0x2127
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x23
	.long	.LASF1148
	.byte	0x1
	.value	0x2128
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x23
	.long	.LASF1149
	.byte	0x1
	.value	0x2129
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -440
	.uleb128 0x23
	.long	.LASF1150
	.byte	0x1
	.value	0x212a
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -496
	.uleb128 0x23
	.long	.LASF1151
	.byte	0x1
	.value	0x212b
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -492
	.uleb128 0x23
	.long	.LASF1152
	.byte	0x1
	.value	0x212c
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -480
	.uleb128 0x23
	.long	.LASF1153
	.byte	0x1
	.value	0x212d
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -488
	.uleb128 0x23
	.long	.LASF1154
	.byte	0x1
	.value	0x212e
	.long	0xf8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -514
	.uleb128 0x2d
	.quad	.LBB128
	.quad	.LBE128-.LBB128
	.long	0x6d0d
	.uleb128 0x22
	.string	"p"
	.byte	0x1
	.value	0x2232
	.long	0x1243
	.uleb128 0x3
	.byte	0x91
	.sleb128 -432
	.byte	0
	.uleb128 0x2d
	.quad	.LBB129
	.quad	.LBE129-.LBB129
	.long	0x6d33
	.uleb128 0x23
	.long	.LASF984
	.byte	0x1
	.value	0x2279
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -432
	.byte	0
	.uleb128 0x2d
	.quad	.LBB130
	.quad	.LBE130-.LBB130
	.long	0x6d59
	.uleb128 0x22
	.string	"tiv"
	.byte	0x1
	.value	0x2294
	.long	0x324
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.byte	0
	.uleb128 0x2d
	.quad	.LBB131
	.quad	.LBE131-.LBB131
	.long	0x6d7f
	.uleb128 0x23
	.long	.LASF984
	.byte	0x1
	.value	0x22ce
	.long	0x34c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -432
	.byte	0
	.uleb128 0x2d
	.quad	.LBB132
	.quad	.LBE132-.LBB132
	.long	0x6da5
	.uleb128 0x22
	.string	"tuv"
	.byte	0x1
	.value	0x22e8
	.long	0x32f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -264
	.byte	0
	.uleb128 0x2d
	.quad	.LBB133
	.quad	.LBE133-.LBB133
	.long	0x6dcb
	.uleb128 0x22
	.string	"dig"
	.byte	0x1
	.value	0x22f7
	.long	0x3b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -476
	.byte	0
	.uleb128 0x2d
	.quad	.LBB134
	.quad	.LBE134-.LBB134
	.long	0x6e05
	.uleb128 0x23
	.long	.LASF1155
	.byte	0x1
	.value	0x23d8
	.long	0x6e96
	.uleb128 0x9
	.byte	0x3
	.quad	prifldbl.12115
	.uleb128 0x22
	.string	"p"
	.byte	0x1
	.value	0x23d9
	.long	0x222
	.uleb128 0x3
	.byte	0x91
	.sleb128 -296
	.byte	0
	.uleb128 0x2d
	.quad	.LBB135
	.quad	.LBE135-.LBB135
	.long	0x6e2b
	.uleb128 0x22
	.string	"msg"
	.byte	0x1
	.value	0x241a
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.byte	0
	.uleb128 0x25
	.quad	.LBB136
	.quad	.LBE136-.LBB136
	.uleb128 0x22
	.string	"nsv"
	.byte	0x1
	.value	0x2444
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	0xf8
	.long	0x6e5f
	.uleb128 0xa
	.long	0xb2
	.byte	0x6
	.byte	0
	.uleb128 0x9
	.long	0xf8
	.long	0x6e6f
	.uleb128 0xa
	.long	0xb2
	.byte	0x7e
	.byte	0
	.uleb128 0x9
	.long	0x122e
	.long	0x6e7f
	.uleb128 0xa
	.long	0xb2
	.byte	0xd
	.byte	0
	.uleb128 0x2
	.byte	0x10
	.byte	0x4
	.long	.LASF1156
	.uleb128 0x9
	.long	0xf8
	.long	0x6e96
	.uleb128 0xa
	.long	0xb2
	.byte	0x2
	.byte	0
	.uleb128 0xd
	.long	0x6e86
	.uleb128 0x29
	.long	.LASF1157
	.byte	0x1
	.value	0x2d4f
	.long	0xf2
	.quad	.LFB187
	.quad	.LFE187-.LFB187
	.uleb128 0x1
	.byte	0x9c
	.long	0x6f27
	.uleb128 0x20
	.string	"sv"
	.byte	0x1
	.value	0x2d4f
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x21
	.long	.LASF1158
	.byte	0x1
	.value	0x2d4f
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.quad	.LBB138
	.quad	.LBE138-.LBB138
	.uleb128 0x22
	.string	"uni"
	.byte	0x1
	.value	0x2d52
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x22
	.string	"len"
	.byte	0x1
	.value	0x2d53
	.long	0x34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x22
	.string	"s"
	.byte	0x1
	.value	0x2d54
	.long	0xf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"sp"
	.byte	0x1
	.value	0x2d55
	.long	0x1f8f
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	.LASF1159
	.byte	0x1
	.value	0x2d8b
	.long	0xf8
	.quad	.LFB188
	.quad	.LFE188-.LFB188
	.uleb128 0x1
	.byte	0x9c
	.long	0x6fe5
	.uleb128 0x20
	.string	"dsv"
	.byte	0x1
	.value	0x2d8b
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x21
	.long	.LASF1158
	.byte	0x1
	.value	0x2d8b
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x20
	.string	"ssv"
	.byte	0x1
	.value	0x2d8c
	.long	0x1276
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x21
	.long	.LASF966
	.byte	0x1
	.value	0x2d8c
	.long	0x22d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x21
	.long	.LASF1160
	.byte	0x1
	.value	0x2d8c
	.long	0xf2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x21
	.long	.LASF951
	.byte	0x1
	.value	0x2d8c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x22
	.string	"ret"
	.byte	0x1
	.value	0x2d8e
	.long	0xf8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -41
	.uleb128 0x25
	.quad	.LBB142
	.quad	.LBE142-.LBB142
	.uleb128 0x23
	.long	.LASF1161
	.byte	0x1
	.value	0x2d90
	.long	0x1276
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x22
	.string	"sp"
	.byte	0x1
	.value	0x2d91
	.long	0x1f8f
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	0x2d
	.long	0x6ff0
	.uleb128 0x34
	.byte	0
	.uleb128 0x35
	.long	.LASF1162
	.byte	0x19
	.byte	0x29
	.long	0x6ffb
	.uleb128 0xd
	.long	0x6fe5
	.uleb128 0x36
	.long	.LASF1163
	.byte	0xa
	.value	0xcdd
	.long	0x240b
	.uleb128 0x9
	.long	0xf8
	.long	0x7017
	.uleb128 0x34
	.byte	0
	.uleb128 0x36
	.long	.LASF1164
	.byte	0xa
	.value	0xce5
	.long	0x7023
	.uleb128 0xd
	.long	0x700c
	.uleb128 0x36
	.long	.LASF1165
	.byte	0xa
	.value	0xcf1
	.long	0x7034
	.uleb128 0xd
	.long	0x700c
	.uleb128 0x36
	.long	.LASF1166
	.byte	0xa
	.value	0xcf7
	.long	0x7045
	.uleb128 0xd
	.long	0x700c
	.uleb128 0x9
	.long	0xf2
	.long	0x7055
	.uleb128 0x34
	.byte	0
	.uleb128 0x35
	.long	.LASF1167
	.byte	0x1a
	.byte	0x1e
	.long	0x704a
	.uleb128 0x36
	.long	.LASF1168
	.byte	0x1a
	.value	0x185
	.long	0x704a
	.uleb128 0x35
	.long	.LASF1169
	.byte	0x1b
	.byte	0x16
	.long	0x1434
	.uleb128 0x35
	.long	.LASF1170
	.byte	0x1b
	.byte	0x34
	.long	0x122e
	.uleb128 0x35
	.long	.LASF1171
	.byte	0x1b
	.byte	0x51
	.long	0x1434
	.uleb128 0x35
	.long	.LASF1172
	.byte	0x1b
	.byte	0x89
	.long	0x124e
	.uleb128 0x35
	.long	.LASF1173
	.byte	0x1b
	.byte	0x8c
	.long	0x1243
	.uleb128 0x35
	.long	.LASF1174
	.byte	0x1b
	.byte	0x8d
	.long	0x1243
	.uleb128 0x35
	.long	.LASF1175
	.byte	0x1b
	.byte	0x8e
	.long	0x1276
	.uleb128 0x35
	.long	.LASF1176
	.byte	0x1b
	.byte	0x8f
	.long	0x1276
	.uleb128 0x35
	.long	.LASF1177
	.byte	0x1b
	.byte	0x98
	.long	0xf8
	.uleb128 0x35
	.long	.LASF1178
	.byte	0x1b
	.byte	0xcf
	.long	0x3cf
	.uleb128 0x35
	.long	.LASF1179
	.byte	0x1b
	.byte	0xe0
	.long	0xf8
	.uleb128 0x35
	.long	.LASF1180
	.byte	0x1b
	.byte	0xe1
	.long	0xf8
	.uleb128 0x36
	.long	.LASF1181
	.byte	0x1b
	.value	0x101
	.long	0x2721
	.uleb128 0x36
	.long	.LASF1182
	.byte	0x1b
	.value	0x102
	.long	0x2779
	.uleb128 0x36
	.long	.LASF1183
	.byte	0x1b
	.value	0x103
	.long	0x283c
	.uleb128 0x36
	.long	.LASF1184
	.byte	0x1b
	.value	0x104
	.long	0x28f9
	.uleb128 0x36
	.long	.LASF1185
	.byte	0x1b
	.value	0x105
	.long	0x2721
	.uleb128 0x36
	.long	.LASF1186
	.byte	0x1b
	.value	0x106
	.long	0x2773
	.uleb128 0x36
	.long	.LASF1187
	.byte	0x1b
	.value	0x107
	.long	0x2836
	.uleb128 0x36
	.long	.LASF1188
	.byte	0x1b
	.value	0x108
	.long	0x13e1
	.uleb128 0x36
	.long	.LASF1189
	.byte	0x1b
	.value	0x109
	.long	0x13e7
	.uleb128 0x36
	.long	.LASF1190
	.byte	0x1b
	.value	0x10a
	.long	0x13ed
	.uleb128 0x36
	.long	.LASF1191
	.byte	0x1b
	.value	0x10b
	.long	0x2d3d
	.uleb128 0x36
	.long	.LASF1192
	.byte	0x1b
	.value	0x10c
	.long	0x2ddc
	.uleb128 0x36
	.long	.LASF1193
	.byte	0x1b
	.value	0x10d
	.long	0x2e7b
	.uleb128 0x36
	.long	.LASF1194
	.byte	0x1b
	.value	0x10e
	.long	0x21b3
	.uleb128 0x36
	.long	.LASF1195
	.byte	0x1b
	.value	0x10f
	.long	0xf2
	.uleb128 0x36
	.long	.LASF1196
	.byte	0x1b
	.value	0x110
	.long	0x124e
	.uleb128 0x36
	.long	.LASF1197
	.byte	0x1b
	.value	0x125
	.long	0x5c9
	.uleb128 0x36
	.long	.LASF1198
	.byte	0x1b
	.value	0x126
	.long	0x5c9
	.uleb128 0x36
	.long	.LASF1199
	.byte	0x1b
	.value	0x127
	.long	0x5c9
	.uleb128 0x36
	.long	.LASF1200
	.byte	0x1b
	.value	0x166
	.long	0x5e
	.uleb128 0x36
	.long	.LASF1201
	.byte	0x1b
	.value	0x1d2
	.long	0x2721
	.uleb128 0x36
	.long	.LASF1202
	.byte	0x1b
	.value	0x1d3
	.long	0x2721
	.uleb128 0x36
	.long	.LASF1203
	.byte	0x1b
	.value	0x1d4
	.long	0x2721
	.uleb128 0x36
	.long	.LASF1204
	.byte	0x1b
	.value	0x1d5
	.long	0x2773
	.uleb128 0x36
	.long	.LASF1205
	.byte	0x1b
	.value	0x1d6
	.long	0x2836
	.uleb128 0x36
	.long	.LASF1206
	.byte	0x1b
	.value	0x1d7
	.long	0x13e1
	.uleb128 0x36
	.long	.LASF1207
	.byte	0x1b
	.value	0x1d8
	.long	0x13e7
	.uleb128 0x36
	.long	.LASF1208
	.byte	0x1b
	.value	0x1d9
	.long	0x13ed
	.uleb128 0x36
	.long	.LASF1209
	.byte	0x1b
	.value	0x1da
	.long	0x2d3d
	.uleb128 0x36
	.long	.LASF1210
	.byte	0x1b
	.value	0x1db
	.long	0x2ddc
	.uleb128 0x36
	.long	.LASF1211
	.byte	0x1b
	.value	0x1dc
	.long	0x2e7b
	.uleb128 0x36
	.long	.LASF1212
	.byte	0x1b
	.value	0x1dd
	.long	0x2721
	.uleb128 0x36
	.long	.LASF1213
	.byte	0x1b
	.value	0x1ff
	.long	0x1276
	.uleb128 0x35
	.long	.LASF1214
	.byte	0x1c
	.byte	0x22
	.long	0x1f8f
	.uleb128 0x35
	.long	.LASF1215
	.byte	0x1c
	.byte	0x26
	.long	0x1417
	.uleb128 0x35
	.long	.LASF1216
	.byte	0x1c
	.byte	0x2a
	.long	0x1f8f
	.uleb128 0x35
	.long	.LASF1217
	.byte	0x1c
	.byte	0x2b
	.long	0x1f8f
	.uleb128 0x35
	.long	.LASF1218
	.byte	0x1c
	.byte	0x36
	.long	0x1f8f
	.uleb128 0x35
	.long	.LASF1219
	.byte	0x1c
	.byte	0x37
	.long	0x1243
	.uleb128 0x35
	.long	.LASF1220
	.byte	0x1c
	.byte	0x38
	.long	0x1243
	.uleb128 0x35
	.long	.LASF1221
	.byte	0x1c
	.byte	0x39
	.long	0x1243
	.uleb128 0x35
	.long	.LASF1222
	.byte	0x1c
	.byte	0x3c
	.long	0x12e9
	.uleb128 0x35
	.long	.LASF1223
	.byte	0x1c
	.byte	0x3d
	.long	0x12e9
	.uleb128 0x35
	.long	.LASF1224
	.byte	0x1c
	.byte	0x43
	.long	0x1276
	.uleb128 0x35
	.long	.LASF1225
	.byte	0x1c
	.byte	0x44
	.long	0x2721
	.uleb128 0x35
	.long	.LASF1226
	.byte	0x1c
	.byte	0x5f
	.long	0xf8
	.uleb128 0x35
	.long	.LASF1227
	.byte	0x1c
	.byte	0x73
	.long	0x1276
	.uleb128 0x35
	.long	.LASF1228
	.byte	0x1c
	.byte	0x7d
	.long	0x13ff
	.uleb128 0x35
	.long	.LASF1229
	.byte	0x1c
	.byte	0x81
	.long	0x732c
	.uleb128 0x37
	.long	0x1fc3
	.uleb128 0x35
	.long	.LASF1230
	.byte	0x1c
	.byte	0x85
	.long	0x57
	.uleb128 0x35
	.long	.LASF1231
	.byte	0x1c
	.byte	0x87
	.long	0x143a
	.uleb128 0x35
	.long	.LASF1232
	.byte	0x1c
	.byte	0x88
	.long	0x4a08
	.uleb128 0x35
	.long	.LASF1233
	.byte	0x1c
	.byte	0x95
	.long	0x21b3
	.uleb128 0x35
	.long	.LASF1234
	.byte	0x1c
	.byte	0x9d
	.long	0x1417
	.uleb128 0x35
	.long	.LASF1235
	.byte	0x1c
	.byte	0xa4
	.long	0xf2
	.uleb128 0x35
	.long	.LASF1236
	.byte	0x1c
	.byte	0xa5
	.long	0x34c
	.uleb128 0x35
	.long	.LASF1237
	.byte	0x1c
	.byte	0xf0
	.long	0x57
	.uleb128 0x35
	.long	.LASF1238
	.byte	0x1d
	.byte	0x42
	.long	0x5c9
	.uleb128 0x36
	.long	.LASF1239
	.byte	0xa
	.value	0xf85
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1240
	.byte	0xa
	.value	0xf86
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1241
	.byte	0xa
	.value	0xf87
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1242
	.byte	0xa
	.value	0xf88
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1243
	.byte	0xa
	.value	0xf89
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1244
	.byte	0xa
	.value	0xf8a
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1245
	.byte	0xa
	.value	0xf8b
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1246
	.byte	0xa
	.value	0xf8c
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1247
	.byte	0xa
	.value	0xf8d
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1248
	.byte	0xa
	.value	0xf8e
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1249
	.byte	0xa
	.value	0xf8f
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1250
	.byte	0xa
	.value	0xf90
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1251
	.byte	0xa
	.value	0xf91
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1252
	.byte	0xa
	.value	0xf92
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1253
	.byte	0xa
	.value	0xf93
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1254
	.byte	0xa
	.value	0xf94
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1255
	.byte	0xa
	.value	0xf95
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1256
	.byte	0xa
	.value	0xf96
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1257
	.byte	0xa
	.value	0xf97
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1258
	.byte	0xa
	.value	0xf98
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1259
	.byte	0xa
	.value	0xf99
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1260
	.byte	0xa
	.value	0xf9a
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1261
	.byte	0xa
	.value	0xfa0
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1262
	.byte	0xa
	.value	0xfa1
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1263
	.byte	0xa
	.value	0xfa2
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1264
	.byte	0xa
	.value	0xfa3
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1265
	.byte	0xa
	.value	0xfa9
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1266
	.byte	0xa
	.value	0xfaa
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1267
	.byte	0xa
	.value	0xfac
	.long	0x1112
	.uleb128 0x36
	.long	.LASF1268
	.byte	0xa
	.value	0xfad
	.long	0x1112
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x17
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x15
	.byte	0
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0xa
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x34
	.uleb128 0x21
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x35
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x36
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x37
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.LBB8-.Ltext0
	.quad	.LBE8-.Ltext0
	.quad	.LBB9-.Ltext0
	.quad	.LBE9-.Ltext0
	.quad	0
	.quad	0
	.quad	.LBB11-.Ltext0
	.quad	.LBE11-.Ltext0
	.quad	.LBB12-.Ltext0
	.quad	.LBE12-.Ltext0
	.quad	0
	.quad	0
	.quad	.LBB14-.Ltext0
	.quad	.LBE14-.Ltext0
	.quad	.LBB18-.Ltext0
	.quad	.LBE18-.Ltext0
	.quad	0
	.quad	0
	.quad	.LBB15-.Ltext0
	.quad	.LBE15-.Ltext0
	.quad	.LBB17-.Ltext0
	.quad	.LBE17-.Ltext0
	.quad	0
	.quad	0
	.quad	.LBB126-.Ltext0
	.quad	.LBE126-.Ltext0
	.quad	.LBB137-.Ltext0
	.quad	.LBE137-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF628:
	.string	"OP_ESERVENT"
.LASF804:
	.string	"S_more_xiv"
.LASF553:
	.string	"OP_FTSVTX"
.LASF106:
	.string	"precomp"
.LASF506:
	.string	"OP_SYSREAD"
.LASF825:
	.string	"xpvnvend"
.LASF1060:
	.string	"Perl_sv_uv"
.LASF1113:
	.string	"nullstr"
.LASF138:
	.string	"blku_oldretsp"
.LASF523:
	.string	"OP_SHUTDOWN"
.LASF764:
	.string	"repeat_ass_amg"
.LASF732:
	.string	"rshift_ass_amg"
.LASF1250:
	.string	"PL_vtbl_glob"
.LASF599:
	.string	"OP_MSGRCV"
.LASF699:
	.string	"si_prev"
.LASF945:
	.string	"Perl_sv_catsv"
.LASF950:
	.string	"Perl_sv_catpv"
.LASF1058:
	.string	"tXpv"
.LASF641:
	.string	"OP_LOCK"
.LASF895:
	.string	"need_newline"
.LASF646:
	.string	"OP_max"
.LASF1185:
	.string	"PL_xpv_root"
.LASF66:
	.string	"op_next"
.LASF291:
	.string	"xiou_any"
.LASF557:
	.string	"OP_CHDIR"
.LASF130:
	.string	"gp_file"
.LASF1050:
	.string	"entry"
.LASF1046:
	.string	"tmpRef"
.LASF471:
	.string	"OP_ENTER"
.LASF1090:
	.string	"Perl_sv_setpviv"
.LASF882:
	.string	"sign"
.LASF1207:
	.string	"PL_xpvav_arenaroot"
.LASF322:
	.string	"OP_REGCMAYBE"
.LASF981:
	.string	"refcount_is_zero"
.LASF135:
	.string	"block"
.LASF452:
	.string	"OP_FLOP"
.LASF949:
	.string	"Perl_sv_catsv_mg"
.LASF490:
	.string	"OP_BINMODE"
.LASF1247:
	.string	"PL_vtbl_isa"
.LASF197:
	.string	"xpvgv"
.LASF809:
	.string	"xnvend"
.LASF780:
	.string	"max_offset"
.LASF224:
	.string	"xio_ifp"
.LASF382:
	.string	"OP_SEQ"
.LASF81:
	.string	"cop_io"
.LASF693:
	.string	"stackinfo"
.LASF1119:
	.string	"unknown"
.LASF908:
	.string	"Perl_sv_utf8_upgrade"
.LASF1056:
	.string	"am_again"
.LASF734:
	.string	"band_ass_amg"
.LASF741:
	.string	"gt_amg"
.LASF1051:
	.string	"todo"
.LASF1147:
	.string	"need"
.LASF1053:
	.string	"Perl_sv_2cv"
.LASF878:
	.string	"uiv_2buf"
.LASF544:
	.string	"OP_FTSOCK"
.LASF191:
	.string	"xhv_keys"
.LASF239:
	.string	"xio_flags"
.LASF620:
	.string	"OP_GSERVENT"
.LASF46:
	.string	"_ISpunct"
.LASF243:
	.string	"svt_set"
.LASF187:
	.string	"xpvhv"
.LASF766:
	.string	"concat_ass_amg"
.LASF1054:
	.string	"lref"
.LASF956:
	.string	"vtable"
.LASF819:
	.string	"S_del_xpviv"
.LASF1271:
	.string	"/home/yunqi/SPEC2006/benchspec/CPU2006/400.perlbench/build/build_base_amd64-m64-gcc43-nn.0000"
.LASF511:
	.string	"OP_TELL"
.LASF583:
	.string	"OP_SETPGRP"
.LASF887:
	.string	"tbuf"
.LASF1256:
	.string	"PL_vtbl_pos"
.LASF1110:
	.string	"patend"
.LASF538:
	.string	"OP_FTROWNED"
.LASF855:
	.string	"newlen"
.LASF124:
	.string	"gp_hv"
.LASF223:
	.string	"xpvio"
.LASF872:
	.string	"Perl_sv_2uv"
.LASF527:
	.string	"OP_GETPEERNAME"
.LASF381:
	.string	"OP_SGE"
.LASF159:
	.string	"xpviv"
.LASF961:
	.string	"Perl_sv_rvweaken"
.LASF758:
	.string	"cos_amg"
.LASF972:
	.string	"Perl_sv_replace"
.LASF685:
	.string	"sbu_targ"
.LASF33:
	.string	"overflow_arg_area"
.LASF521:
	.string	"OP_LISTEN"
.LASF379:
	.string	"OP_SGT"
.LASF1260:
	.string	"PL_vtbl_ovrld"
.LASF593:
	.string	"OP_SHMCTL"
.LASF1126:
	.string	"vectorize"
.LASF977:
	.string	"next"
.LASF971:
	.string	"curlen"
.LASF351:
	.string	"OP_DIVIDE"
.LASF1045:
	.string	"Perl_newRV_noinc"
.LASF34:
	.string	"reg_save_area"
.LASF206:
	.string	"xcv_start"
.LASF1145:
	.string	"base"
.LASF13:
	.string	"__off_t"
.LASF121:
	.string	"gp_io"
.LASF1093:
	.string	"Perl_sv_vsetpvf"
.LASF980:
	.string	"Perl_sv_free"
.LASF125:
	.string	"gp_egv"
.LASF1263:
	.string	"PL_vtbl_regdata"
.LASF57:
	.string	"st_size"
.LASF677:
	.string	"sbu_iters"
.LASF396:
	.string	"OP_SRAND"
.LASF993:
	.string	"forw"
.LASF808:
	.string	"S_more_xnv"
.LASF706:
	.string	"hek_hash"
.LASF745:
	.string	"ncmp_amg"
.LASF79:
	.string	"cop_line"
.LASF205:
	.string	"xcv_stash"
.LASF362:
	.string	"OP_LEFT_SHIFT"
.LASF1182:
	.string	"PL_xiv_root"
.LASF953:
	.string	"Perl_sv_catpv_mg"
.LASF960:
	.string	"vtbl"
.LASF1057:
	.string	"Perl_sv_true"
.LASF963:
	.string	"S_sv_del_backref"
.LASF1226:
	.string	"PL_tainted"
.LASF1118:
	.string	"tryasterisk"
.LASF629:
	.string	"OP_GPWNAM"
.LASF1141:
	.string	"elen"
.LASF1133:
	.string	"zeros"
.LASF761:
	.string	"log_amg"
.LASF1241:
	.string	"PL_vtbl_envelem"
.LASF210:
	.string	"xcv_gv"
.LASF492:
	.string	"OP_UNTIE"
.LASF393:
	.string	"OP_SIN"
.LASF700:
	.string	"si_next"
.LASF1114:
	.string	"argsv"
.LASF580:
	.string	"OP_KILL"
.LASF156:
	.string	"xpv_cur"
.LASF913:
	.string	"Perl_sv_utf8_encode"
.LASF1168:
	.string	"PL_op_desc"
.LASF1085:
	.string	"Perl_sv_unref_flags"
.LASF885:
	.string	"olderrno"
.LASF320:
	.string	"OP_READLINE"
.LASF333:
	.string	"OP_SCHOP"
.LASF149:
	.string	"mg_type"
.LASF566:
	.string	"OP_READLINK"
.LASF457:
	.string	"OP_ANDASSIGN"
.LASF58:
	.string	"st_blksize"
.LASF1123:
	.string	"vector"
.LASF886:
	.string	"origsv"
.LASF172:
	.string	"xpvlv"
.LASF155:
	.string	"xpv_pv"
.LASF927:
	.string	"Perl_sv_setsv_mg"
.LASF816:
	.string	"S_more_xpv"
.LASF1009:
	.string	"Perl_sv_cmp_locale"
.LASF788:
	.string	"mask"
.LASF1272:
	.string	"opcode"
.LASF459:
	.string	"OP_METHOD"
.LASF976:
	.string	"tmpref"
.LASF876:
	.string	"S_asUV"
.LASF1143:
	.string	"vecstr"
.LASF1092:
	.string	"Perl_sv_setpvf"
.LASF1165:
	.string	"PL_no_usym"
.LASF336:
	.string	"OP_DEFINED"
.LASF837:
	.string	"xpvhvend"
.LASF168:
	.string	"xpvmg"
.LASF684:
	.string	"sbu_dstr"
.LASF743:
	.string	"eq_amg"
.LASF54:
	.string	"st_gid"
.LASF574:
	.string	"OP_CLOSEDIR"
.LASF601:
	.string	"OP_SEMCTL"
.LASF477:
	.string	"OP_LEAVELOOP"
.LASF568:
	.string	"OP_RMDIR"
.LASF507:
	.string	"OP_SYSWRITE"
.LASF289:
	.string	"cv_flags_t"
.LASF1033:
	.string	"Perl_newSVpvn_share"
.LASF129:
	.string	"gp_line"
.LASF638:
	.string	"OP_EGRENT"
.LASF676:
	.string	"subst"
.LASF19:
	.string	"__syscall_slong_t"
.LASF229:
	.string	"xio_page_len"
.LASF335:
	.string	"OP_SCHOMP"
.LASF1086:
	.string	"Perl_sv_unref"
.LASF869:
	.string	"Perl_sv_2iv"
.LASF740:
	.string	"le_amg"
.LASF787:
	.string	"S_visit"
.LASF830:
	.string	"S_new_xpvav"
.LASF1067:
	.string	"Perl_sv_pvbyte"
.LASF501:
	.string	"OP_LEAVEWRITE"
.LASF51:
	.string	"st_nlink"
.LASF380:
	.string	"OP_SLE"
.LASF165:
	.string	"xpvnv"
.LASF974:
	.string	"freescalar"
.LASF198:
	.string	"xgv_gp"
.LASF30:
	.string	"__va_list_tag"
.LASF378:
	.string	"OP_SLT"
.LASF434:
	.string	"OP_JOIN"
.LASF1069:
	.string	"Perl_sv_pvbyten_force"
.LASF148:
	.string	"mg_private"
.LASF1224:
	.string	"PL_Sv"
.LASF334:
	.string	"OP_CHOMP"
.LASF62:
	.string	"st_ctim"
.LASF770:
	.string	"to_av_amg"
.LASF683:
	.string	"sbu_orig"
.LASF427:
	.string	"OP_EXISTS"
.LASF184:
	.string	"xav_arylen"
.LASF118:
	.string	"program"
.LASF846:
	.string	"S_new_xpvbm"
.LASF207:
	.string	"xcv_root"
.LASF803:
	.string	"S_del_xiv"
.LASF1037:
	.string	"i_PeRlHaSh"
.LASF656:
	.string	"old_in_eval"
.LASF704:
	.string	"hent_hek"
.LASF849:
	.string	"xpvbmend"
.LASF1213:
	.string	"PL_encoding"
.LASF147:
	.string	"mg_virtual"
.LASF1134:
	.string	"has_precis"
.LASF1100:
	.string	"Perl_sv_vsetpvfn"
.LASF476:
	.string	"OP_ENTERLOOP"
.LASF295:
	.string	"OP_STUB"
.LASF175:
	.string	"xlv_targ"
.LASF760:
	.string	"exp_amg"
.LASF1083:
	.string	"Perl_sv_bless"
.LASF962:
	.string	"S_sv_add_backref"
.LASF767:
	.string	"copy_amg"
.LASF1175:
	.string	"PL_sv_root"
.LASF1144:
	.string	"veclen"
.LASF785:
	.string	"chunk"
.LASF77:
	.string	"cop_seq"
.LASF486:
	.string	"OP_CLOSE"
.LASF932:
	.string	"Perl_sv_setpv_mg"
.LASF777:
	.string	"max_amg_code"
.LASF826:
	.string	"S_new_xpvcv"
.LASF383:
	.string	"OP_SNE"
.LASF99:
	.string	"sv_flags"
.LASF733:
	.string	"band_amg"
.LASF590:
	.string	"OP_ALARM"
.LASF371:
	.string	"OP_I_GE"
.LASF715:
	.string	"string_amg"
.LASF896:
	.string	"endptr"
.LASF367:
	.string	"OP_I_GT"
.LASF96:
	.string	"broiled"
.LASF234:
	.string	"xio_fmt_gv"
.LASF986:
	.string	"cachep"
.LASF1095:
	.string	"Perl_sv_vsetpvf_mg"
.LASF907:
	.string	"Xpvtmp"
.LASF60:
	.string	"st_atim"
.LASF925:
	.string	"dref"
.LASF1162:
	.string	"PL_utf8skip"
.LASF491:
	.string	"OP_TIE"
.LASF324:
	.string	"OP_REGCOMP"
.LASF128:
	.string	"gp_flags"
.LASF134:
	.string	"cx_u"
.LASF969:
	.string	"midend"
.LASF332:
	.string	"OP_CHOP"
.LASF1239:
	.string	"PL_vtbl_sv"
.LASF120:
	.string	"gp_refcnt"
.LASF667:
	.string	"itervar"
.LASF786:
	.string	"S_more_sv"
.LASF1003:
	.string	"cur1"
.LASF1004:
	.string	"cur2"
.LASF114:
	.string	"nparens"
.LASF606:
	.string	"OP_LEAVEEVAL"
.LASF267:
	.string	"type"
.LASF850:
	.string	"Perl_sv_clean_all"
.LASF495:
	.string	"OP_DBMCLOSE"
.LASF1211:
	.string	"PL_xpvbm_arenaroot"
.LASF349:
	.string	"OP_MULTIPLY"
.LASF458:
	.string	"OP_ORASSIGN"
.LASF917:
	.string	"sstr"
.LASF8:
	.string	"__uid_t"
.LASF524:
	.string	"OP_GSOCKOPT"
.LASF228:
	.string	"xio_page"
.LASF891:
	.string	"fptr"
.LASF622:
	.string	"OP_SNETENT"
.LASF1027:
	.string	"Perl_sv_mortalcopy"
.LASF464:
	.string	"OP_WARN"
.LASF592:
	.string	"OP_SHMGET"
.LASF1116:
	.string	"pat_utf8"
.LASF842:
	.string	"S_new_xpvlv"
.LASF400:
	.string	"OP_INT"
.LASF614:
	.string	"OP_GNETENT"
.LASF973:
	.string	"Perl_sv_clear"
.LASF1176:
	.string	"PL_sv_arenaroot"
.LASF581:
	.string	"OP_GETPPID"
.LASF873:
	.string	"Perl_sv_2nv"
.LASF404:
	.string	"OP_LENGTH"
.LASF325:
	.string	"OP_MATCH"
.LASF213:
	.string	"xcv_padlist"
.LASF1151:
	.string	"ewix"
.LASF549:
	.string	"OP_FTPIPE"
.LASF889:
	.string	"tokensave"
.LASF28:
	.string	"__gnuc_va_list"
.LASF1012:
	.string	"rsptr"
.LASF836:
	.string	"S_more_xpvhv"
.LASF781:
	.string	"substr"
.LASF790:
	.string	"do_clean_objs"
.LASF675:
	.string	"blku_loop"
.LASF935:
	.string	"Perl_sv_force_normal_flags"
.LASF1210:
	.string	"PL_xpvlv_arenaroot"
.LASF714:
	.string	"nomethod_amg"
.LASF1153:
	.string	"evix"
.LASF388:
	.string	"OP_NEGATE"
.LASF875:
	.string	"S_asIV"
.LASF807:
	.string	"S_del_xnv"
.LASF119:
	.string	"gp_sv"
.LASF44:
	.string	"_ISblank"
.LASF0:
	.string	"unsigned char"
.LASF445:
	.string	"OP_REVERSE"
.LASF1169:
	.string	"PL_envgv"
.LASF627:
	.string	"OP_EPROTOENT"
.LASF403:
	.string	"OP_ABS"
.LASF265:
	.string	"PerlIO"
.LASF929:
	.string	"dptr"
.LASF686:
	.string	"sbu_s"
.LASF1236:
	.string	"PL_efloatsize"
.LASF17:
	.string	"__blkcnt_t"
.LASF820:
	.string	"S_more_xpviv"
.LASF617:
	.string	"OP_GPROTOENT"
.LASF417:
	.string	"OP_LC"
.LASF709:
	.string	"float"
.LASF1228:
	.string	"PL_defstash"
.LASF883:
	.string	"Perl_sv_2pv"
.LASF668:
	.string	"itersave"
.LASF797:
	.string	"Perl_sv_free_arenas"
.LASF834:
	.string	"S_new_xpvhv"
.LASF162:
	.string	"xpvuv"
.LASF97:
	.string	"sv_any"
.LASF1138:
	.string	"utf8buf"
.LASF438:
	.string	"OP_ANONHASH"
.LASF369:
	.string	"OP_I_LE"
.LASF1139:
	.string	"esignlen"
.LASF637:
	.string	"OP_SGRENT"
.LASF655:
	.string	"block_eval"
.LASF365:
	.string	"OP_I_LT"
.LASF747:
	.string	"slt_amg"
.LASF456:
	.string	"OP_COND_EXPR"
.LASF550:
	.string	"OP_FTLINK"
.LASF117:
	.string	"reganch"
.LASF258:
	.string	"stashes"
.LASF484:
	.string	"OP_EXIT"
.LASF103:
	.string	"endp"
.LASF21:
	.string	"off_t"
.LASF600:
	.string	"OP_SEMGET"
.LASF327:
	.string	"OP_SUBST"
.LASF818:
	.string	"S_new_xpviv"
.LASF450:
	.string	"OP_RANGE"
.LASF296:
	.string	"OP_SCALAR"
.LASF38:
	.string	"_ISalpha"
.LASF1105:
	.string	"S_expect_number"
.LASF904:
	.string	"Perl_sv_2pvutf8"
.LASF623:
	.string	"OP_SPROTOENT"
.LASF598:
	.string	"OP_MSGSND"
.LASF11:
	.string	"__mode_t"
.LASF1246:
	.string	"PL_vtbl_dbline"
.LASF1265:
	.string	"PL_vtbl_amagic"
.LASF941:
	.string	"slen"
.LASF423:
	.string	"OP_EACH"
.LASF813:
	.string	"xrvend"
.LASF595:
	.string	"OP_SHMWRITE"
.LASF424:
	.string	"OP_VALUES"
.LASF446:
	.string	"OP_GREPSTART"
.LASF798:
	.string	"svanext"
.LASF23:
	.string	"size_t"
.LASF1130:
	.string	"plus"
.LASF313:
	.string	"OP_PROTOTYPE"
.LASF1192:
	.string	"PL_xpvlv_root"
.LASF1215:
	.string	"PL_op"
.LASF1203:
	.string	"PL_xpv_arenaroot"
.LASF174:
	.string	"xlv_targlen"
.LASF375:
	.string	"OP_I_NE"
.LASF42:
	.string	"_ISprint"
.LASF844:
	.string	"S_more_xpvlv"
.LASF914:
	.string	"Perl_sv_utf8_decode"
.LASF318:
	.string	"OP_BACKTICK"
.LASF47:
	.string	"_ISalnum"
.LASF1245:
	.string	"PL_vtbl_packelem"
.LASF567:
	.string	"OP_MKDIR"
.LASF865:
	.string	"Perl_looks_like_number"
.LASF910:
	.string	"hibit"
.LASF286:
	.string	"SVt_PVGV"
.LASF811:
	.string	"S_del_xrv"
.LASF674:
	.string	"blku_eval"
.LASF1181:
	.string	"PL_xiv_arenaroot"
.LASF110:
	.string	"sublen"
.LASF840:
	.string	"S_more_xpvmg"
.LASF1180:
	.string	"PL_in_clean_all"
.LASF472:
	.string	"OP_LEAVE"
.LASF180:
	.string	"xav_fill"
.LASF41:
	.string	"_ISspace"
.LASF558:
	.string	"OP_CHOWN"
.LASF584:
	.string	"OP_GETPRIORITY"
.LASF665:
	.string	"next_op"
.LASF532:
	.string	"OP_FTREXEC"
.LASF146:
	.string	"mg_moremagic"
.LASF1201:
	.string	"PL_xnv_arenaroot"
.LASF563:
	.string	"OP_RENAME"
.LASF688:
	.string	"sbu_strend"
.LASF856:
	.string	"Perl_sv_setiv"
.LASF78:
	.string	"cop_arybase"
.LASF1112:
	.string	"svix"
.LASF1222:
	.string	"PL_markstack_ptr"
.LASF959:
	.string	"Perl_sv_unmagic"
.LASF35:
	.string	"va_list"
.LASF406:
	.string	"OP_VEC"
.LASF697:
	.string	"si_cxmax"
.LASF499:
	.string	"OP_READ"
.LASF467:
	.string	"OP_LINESEQ"
.LASF152:
	.string	"mg_ptr"
.LASF1021:
	.string	"bytesread"
.LASF792:
	.string	"Perl_sv_report_used"
.LASF493:
	.string	"OP_TIED"
.LASF344:
	.string	"OP_POSTINC"
.LASF1073:
	.string	"Perl_sv_reftype"
.LASF672:
	.string	"itermax"
.LASF824:
	.string	"S_more_xpvnv"
.LASF1101:
	.string	"patlen"
.LASF431:
	.string	"OP_UNPACK"
.LASF588:
	.string	"OP_LOCALTIME"
.LASF237:
	.string	"xio_subprocess"
.LASF782:
	.string	"utf8_substr"
.LASF1030:
	.string	"Perl_sv_2mortal"
.LASF831:
	.string	"S_del_xpvav"
.LASF838:
	.string	"S_new_xpvmg"
.LASF1068:
	.string	"Perl_sv_pvbyten"
.LASF547:
	.string	"OP_FTFILE"
.LASF108:
	.string	"subbeg"
.LASF102:
	.string	"startp"
.LASF894:
	.string	"right"
.LASF771:
	.string	"to_hv_amg"
.LASF1035:
	.string	"s_PeRlHaSh_tmp"
.LASF967:
	.string	"little"
.LASF634:
	.string	"OP_GGRNAM"
.LASF40:
	.string	"_ISxdigit"
.LASF1270:
	.string	"sv.c"
.LASF1043:
	.string	"Perl_newSViv"
.LASF1063:
	.string	"Perl_sv_pvn"
.LASF847:
	.string	"S_del_xpvbm"
.LASF1204:
	.string	"PL_xpviv_arenaroot"
.LASF1269:
	.string	"GNU C 4.8.1 -mtune=generic -march=x86-64 -g -fno-strict-aliasing -fstack-protector"
.LASF358:
	.string	"OP_SUBTRACT"
.LASF1041:
	.string	"Perl_vnewSVpvf"
.LASF1020:
	.string	"screamer2"
.LASF534:
	.string	"OP_FTEWRITE"
.LASF772:
	.string	"to_gv_amg"
.LASF822:
	.string	"S_new_xpvnv"
.LASF560:
	.string	"OP_UNLINK"
.LASF101:
	.string	"regexp"
.LASF643:
	.string	"OP_SETSTATE"
.LASF480:
	.string	"OP_NEXT"
.LASF515:
	.string	"OP_IOCTL"
.LASF1177:
	.string	"PL_tainting"
.LASF1267:
	.string	"PL_vtbl_backref"
.LASF100:
	.string	"REGEXP"
.LASF1070:
	.string	"Perl_sv_pvutf8"
.LASF98:
	.string	"sv_refcnt"
.LASF958:
	.string	"Perl_sv_magic"
.LASF475:
	.string	"OP_ITER"
.LASF552:
	.string	"OP_FTSGID"
.LASF307:
	.string	"OP_PUSHRE"
.LASF726:
	.string	"modulo_ass_amg"
.LASF305:
	.string	"OP_PADHV"
.LASF575:
	.string	"OP_FORK"
.LASF968:
	.string	"littlelen"
.LASF244:
	.string	"svt_len"
.LASF827:
	.string	"S_del_xpvcv"
.LASF278:
	.string	"SVt_PVIV"
.LASF268:
	.string	"next_off"
.LASF905:
	.string	"Perl_sv_2bool"
.LASF469:
	.string	"OP_DBSTATE"
.LASF1261:
	.string	"PL_vtbl_defelem"
.LASF72:
	.string	"op_flags"
.LASF1243:
	.string	"PL_vtbl_sigelem"
.LASF63:
	.string	"__unused"
.LASF80:
	.string	"cop_warnings"
.LASF702:
	.string	"PERL_SI"
.LASF845:
	.string	"xpvlvend"
.LASF105:
	.string	"substrs"
.LASF1074:
	.string	"Perl_sv_isobject"
.LASF1234:
	.string	"PL_sortcop"
.LASF630:
	.string	"OP_GPWUID"
.LASF1163:
	.string	"environ"
.LASF338:
	.string	"OP_STUDY"
.LASF405:
	.string	"OP_SUBSTR"
.LASF851:
	.string	"Perl_sv_upgrade"
.LASF866:
	.string	"sbegin"
.LASF140:
	.string	"blku_oldscopesp"
.LASF283:
	.string	"SVt_PVAV"
.LASF881:
	.string	"ebuf"
.LASF611:
	.string	"OP_GHOSTENT"
.LASF696:
	.string	"si_cxix"
.LASF1173:
	.string	"PL_sv_count"
.LASF188:
	.string	"xhv_array"
.LASF613:
	.string	"OP_GNBYADDR"
.LASF728:
	.string	"pow_ass_amg"
.LASF1103:
	.string	"svmax"
.LASF987:
	.string	"offsetp"
.LASF109:
	.string	"offsets"
.LASF751:
	.string	"seq_amg"
.LASF439:
	.string	"OP_SPLICE"
.LASF1214:
	.string	"PL_stack_sp"
.LASF384:
	.string	"OP_SCMP"
.LASF571:
	.string	"OP_TELLDIR"
.LASF979:
	.string	"Perl_sv_newref"
.LASF841:
	.string	"xpvmgend"
.LASF235:
	.string	"xio_bottom_name"
.LASF985:
	.string	"S_utf8_mg_pos_init"
.LASF385:
	.string	"OP_BIT_AND"
.LASF1091:
	.string	"Perl_sv_setpviv_mg"
.LASF1129:
	.string	"fill"
.LASF281:
	.string	"SVt_PVBM"
.LASF1010:
	.string	"Perl_sv_gets"
.LASF801:
	.string	"Perl_report_uninit"
.LASF919:
	.string	"sflags"
.LASF12:
	.string	"__nlink_t"
.LASF711:
	.string	"fallback_amg"
.LASF1197:
	.string	"PL_sv_undef"
.LASF50:
	.string	"st_ino"
.LASF52:
	.string	"st_mode"
.LASF144:
	.string	"MAGIC"
.LASF1252:
	.string	"PL_vtbl_nkeys"
.LASF74:
	.string	"cop_label"
.LASF150:
	.string	"mg_flags"
.LASF660:
	.string	"cur_text"
.LASF177:
	.string	"XPVAV"
.LASF1059:
	.string	"Perl_sv_iv"
.LASF285:
	.string	"SVt_PVCV"
.LASF937:
	.string	"Perl_sv_force_normal"
.LASF341:
	.string	"OP_I_PREINC"
.LASF1005:
	.string	"svrecode"
.LASF1025:
	.string	"oops_its_int"
.LASF113:
	.string	"prelen"
.LASF45:
	.string	"_IScntrl"
.LASF1229:
	.string	"PL_curcop"
.LASF447:
	.string	"OP_GREPWHILE"
.LASF481:
	.string	"OP_REDO"
.LASF69:
	.string	"op_targ"
.LASF217:
	.string	"XPVBM"
.LASF36:
	.string	"_ISupper"
.LASF871:
	.string	"value"
.LASF340:
	.string	"OP_PREINC"
.LASF989:
	.string	"found"
.LASF236:
	.string	"xio_bottom_gv"
.LASF1171:
	.string	"PL_stderrgv"
.LASF1124:
	.string	"float_converted"
.LASF337:
	.string	"OP_UNDEF"
.LASF390:
	.string	"OP_NOT"
.LASF488:
	.string	"OP_FILENO"
.LASF139:
	.string	"blku_oldmarksp"
.LASF453:
	.string	"OP_AND"
.LASF605:
	.string	"OP_ENTEREVAL"
.LASF821:
	.string	"xpvivend"
.LASF1190:
	.string	"PL_xpvhv_root"
.LASF1167:
	.string	"PL_op_name"
.LASF115:
	.string	"lastparen"
.LASF1191:
	.string	"PL_xpvmg_root"
.LASF1184:
	.string	"PL_xrv_root"
.LASF736:
	.string	"bor_ass_amg"
.LASF203:
	.string	"XPVCV"
.LASF670:
	.string	"iterary"
.LASF387:
	.string	"OP_BIT_OR"
.LASF522:
	.string	"OP_ACCEPT"
.LASF494:
	.string	"OP_DBMOPEN"
.LASF639:
	.string	"OP_GETLOGIN"
.LASF18:
	.string	"__ssize_t"
.LASF835:
	.string	"S_del_xpvhv"
.LASF270:
	.string	"reg_data"
.LASF233:
	.string	"xio_fmt_name"
.LASF705:
	.string	"hent_val"
.LASF470:
	.string	"OP_UNSTACK"
.LASF988:
	.string	"start"
.LASF221:
	.string	"xbm_rare"
.LASF166:
	.string	"xnv_nv"
.LASF29:
	.string	"timespec"
.LASF703:
	.string	"hent_next"
.LASF512:
	.string	"OP_SEEK"
.LASF731:
	.string	"rshift_amg"
.LASF176:
	.string	"xlv_type"
.LASF1142:
	.string	"vecsv"
.LASF246:
	.string	"svt_free"
.LASF92:
	.string	"op_pmdynflags"
.LASF1157:
	.string	"Perl_sv_recode_to_utf8"
.LASF774:
	.string	"iter_amg"
.LASF1031:
	.string	"Perl_newSVpv"
.LASF749:
	.string	"sgt_amg"
.LASF805:
	.string	"xivend"
.LASF287:
	.string	"SVt_PVFM"
.LASF796:
	.string	"Perl_sv_add_arena"
.LASF442:
	.string	"OP_SHIFT"
.LASF468:
	.string	"OP_NEXTSTATE"
.LASF257:
	.string	"clone_params"
.LASF1082:
	.string	"Perl_sv_setref_pvn"
.LASF1255:
	.string	"PL_vtbl_vec"
.LASF636:
	.string	"OP_GGRENT"
.LASF738:
	.string	"bxor_ass_amg"
.LASF377:
	.string	"OP_I_NCMP"
.LASF355:
	.string	"OP_REPEAT"
.LASF1098:
	.string	"Perl_sv_catpvf_mg"
.LASF415:
	.string	"OP_LCFIRST"
.LASF554:
	.string	"OP_FTTTY"
.LASF944:
	.string	"Perl_sv_catpvn_mg"
.LASF360:
	.string	"OP_CONCAT"
.LASF860:
	.string	"Perl_sv_setnv"
.LASF53:
	.string	"st_uid"
.LASF687:
	.string	"sbu_m"
.LASF214:
	.string	"xcv_outside"
.LASF292:
	.string	"PADLIST"
.LASF255:
	.string	"any_dxptr"
.LASF1160:
	.string	"tstr"
.LASF970:
	.string	"bigend"
.LASF1220:
	.string	"PL_tmps_floor"
.LASF443:
	.string	"OP_UNSHIFT"
.LASF899:
	.string	"isUIOK"
.LASF202:
	.string	"xgv_flags"
.LASF145:
	.string	"magic"
.LASF975:
	.string	"destructor"
.LASF586:
	.string	"OP_TIME"
.LASF535:
	.string	"OP_FTEEXEC"
.LASF1199:
	.string	"PL_sv_yes"
.LASF710:
	.string	"SVFUNC_t"
.LASF632:
	.string	"OP_SPWENT"
.LASF1076:
	.string	"Perl_newSVrv"
.LASF1023:
	.string	"shortbuffered"
.LASF537:
	.string	"OP_FTEOWNED"
.LASF352:
	.string	"OP_I_DIVIDE"
.LASF373:
	.string	"OP_I_EQ"
.LASF284:
	.string	"SVt_PVHV"
.LASF802:
	.string	"S_new_xiv"
.LASF862:
	.string	"S_not_a_number"
.LASF879:
	.string	"is_uv"
.LASF273:
	.string	"SVt_NULL"
.LASF603:
	.string	"OP_REQUIRE"
.LASF241:
	.string	"mgvtbl"
.LASF1159:
	.string	"Perl_sv_cat_decode"
.LASF319:
	.string	"OP_GLOB"
.LASF572:
	.string	"OP_SEEKDIR"
.LASF1172:
	.string	"PL_sub_generation"
.LASF196:
	.string	"XPVGV"
.LASF1189:
	.string	"PL_xpvav_root"
.LASF791:
	.string	"do_clean_named_objs"
.LASF1158:
	.string	"encoding"
.LASF502:
	.string	"OP_PRTF"
.LASF1238:
	.string	"PL_sv_placeholder"
.LASF690:
	.string	"sbu_rx"
.LASF240:
	.string	"MGVTBL"
.LASF1001:
	.string	"ubackw"
.LASF612:
	.string	"OP_GNBYNAME"
.LASF692:
	.string	"cx_subst"
.LASF32:
	.string	"fp_offset"
.LASF691:
	.string	"cx_blk"
.LASF288:
	.string	"SVt_PVIO"
.LASF15:
	.string	"__time_t"
.LASF843:
	.string	"S_del_xpvlv"
.LASF31:
	.string	"gp_offset"
.LASF398:
	.string	"OP_LOG"
.LASF111:
	.string	"refcnt"
.LASF345:
	.string	"OP_I_POSTINC"
.LASF773:
	.string	"to_cv_amg"
.LASF1036:
	.string	"s_PeRlHaSh"
.LASF682:
	.string	"sbu_rxtainted"
.LASF952:
	.string	"junk"
.LASF564:
	.string	"OP_LINK"
.LASF448:
	.string	"OP_MAPSTART"
.LASF742:
	.string	"ge_amg"
.LASF186:
	.string	"XPVHV"
.LASF463:
	.string	"OP_CALLER"
.LASF14:
	.string	"sizetype"
.LASF372:
	.string	"OP_EQ"
.LASF839:
	.string	"S_del_xpvmg"
.LASF299:
	.string	"OP_CONST"
.LASF911:
	.string	"Perl_sv_utf8_downgrade"
.LASF922:
	.string	"undef_sstr"
.LASF88:
	.string	"op_pmnext"
.LASF181:
	.string	"xav_max"
.LASF520:
	.string	"OP_CONNECT"
.LASF208:
	.string	"xcv_xsub"
.LASF587:
	.string	"OP_TMS"
.LASF652:
	.string	"hasargs"
.LASF462:
	.string	"OP_LEAVESUBLV"
.LASF526:
	.string	"OP_GETSOCKNAME"
.LASF73:
	.string	"op_private"
.LASF302:
	.string	"OP_GELEM"
.LASF412:
	.string	"OP_CHR"
.LASF756:
	.string	"dec_amg"
.LASF916:
	.string	"dstr"
.LASF249:
	.string	"any_ptr"
.LASF1:
	.string	"short unsigned int"
.LASF1077:
	.string	"classname"
.LASF4:
	.string	"signed char"
.LASF1024:
	.string	"Perl_sv_inc"
.LASF1216:
	.string	"PL_stack_base"
.LASF361:
	.string	"OP_STRINGIFY"
.LASF1034:
	.string	"tmplen"
.LASF1079:
	.string	"Perl_sv_setref_iv"
.LASF579:
	.string	"OP_EXEC"
.LASF359:
	.string	"OP_I_SUBTRACT"
.LASF222:
	.string	"XPVIO"
.LASF16:
	.string	"__blksize_t"
.LASF1193:
	.string	"PL_xpvbm_root"
.LASF158:
	.string	"XPVIV"
.LASF183:
	.string	"xav_alloc"
.LASF356:
	.string	"OP_ADD"
.LASF1032:
	.string	"Perl_newSVpvn"
.LASF1044:
	.string	"Perl_newSVuv"
.LASF300:
	.string	"OP_GVSV"
.LASF680:
	.string	"sbu_oldsave"
.LASF190:
	.string	"xhv_max"
.LASF823:
	.string	"S_del_xpvnv"
.LASF861:
	.string	"Perl_sv_setnv_mg"
.LASF112:
	.string	"minlen"
.LASF931:
	.string	"Perl_sv_setpv"
.LASF331:
	.string	"OP_AASSIGN"
.LASF271:
	.string	"count"
.LASF1017:
	.string	"screamer"
.LASF991:
	.string	"uoff"
.LASF505:
	.string	"OP_SYSSEEK"
.LASF170:
	.string	"xmg_stash"
.LASF602:
	.string	"OP_SEMOP"
.LASF679:
	.string	"sbu_rflags"
.LASF1026:
	.string	"Perl_sv_dec"
.LASF852:
	.string	"stash"
.LASF918:
	.string	"Perl_sv_setsv_flags"
.LASF104:
	.string	"regstclass"
.LASF370:
	.string	"OP_GE"
.LASF193:
	.string	"xhv_eiter"
.LASF829:
	.string	"xpvcvend"
.LASF436:
	.string	"OP_LSLICE"
.LASF500:
	.string	"OP_ENTERWRITE"
.LASF366:
	.string	"OP_GT"
.LASF301:
	.string	"OP_GV"
.LASF528:
	.string	"OP_LSTAT"
.LASF497:
	.string	"OP_SELECT"
.LASF591:
	.string	"OP_SLEEP"
.LASF282:
	.string	"SVt_PVLV"
.LASF1154:
	.string	"asterisk"
.LASF1120:
	.string	"string"
.LASF269:
	.string	"reg_substr_data"
.LASF748:
	.string	"sle_amg"
.LASF653:
	.string	"lval"
.LASF649:
	.string	"savearray"
.LASF669:
	.string	"iterlval"
.LASF1268:
	.string	"PL_vtbl_utf8"
.LASF673:
	.string	"blku_sub"
.LASF912:
	.string	"fail_ok"
.LASF717:
	.string	"add_amg"
.LASF298:
	.string	"OP_WANTARRAY"
.LASF1217:
	.string	"PL_stack_max"
.LASF1208:
	.string	"PL_xpvhv_arenaroot"
.LASF363:
	.string	"OP_RIGHT_SHIFT"
.LASF1127:
	.string	"vectorarg"
.LASF1121:
	.string	"integer"
.LASF618:
	.string	"OP_GSBYNAME"
.LASF143:
	.string	"blk_u"
.LASF280:
	.string	"SVt_PVMG"
.LASF182:
	.string	"xof_off"
.LASF585:
	.string	"OP_SETPRIORITY"
.LASF1223:
	.string	"PL_markstack_max"
.LASF1150:
	.string	"efix"
.LASF720:
	.string	"subtr_ass_amg"
.LASF1248:
	.string	"PL_vtbl_isaelem"
.LASF635:
	.string	"OP_GGRGID"
.LASF200:
	.string	"xgv_namelen"
.LASF898:
	.string	"isIOK"
.LASF85:
	.string	"op_last"
.LASF304:
	.string	"OP_PADAV"
.LASF263:
	.string	"__dirstream"
.LASF432:
	.string	"OP_PACK"
.LASF812:
	.string	"S_more_xrv"
.LASF252:
	.string	"any_long"
.LASF1183:
	.string	"PL_xnv_root"
.LASF171:
	.string	"XPVLV"
.LASF485:
	.string	"OP_OPEN"
.LASF1002:
	.string	"Perl_sv_eq"
.LASF1014:
	.string	"rspara"
.LASF71:
	.string	"op_seq"
.LASF753:
	.string	"not_amg"
.LASF1231:
	.string	"PL_curstack"
.LASF616:
	.string	"OP_GPBYNUMBER"
.LASF1013:
	.string	"rslen"
.LASF955:
	.string	"Perl_sv_magicext"
.LASF173:
	.string	"xlv_targoff"
.LASF1011:
	.string	"append"
.LASF279:
	.string	"SVt_PVNV"
.LASF82:
	.string	"PMOP"
.LASF915:
	.string	"Perl_sv_setsv"
.LASF419:
	.string	"OP_RV2AV"
.LASF503:
	.string	"OP_PRINT"
.LASF1161:
	.string	"offsv"
.LASF220:
	.string	"xbm_previous"
.LASF508:
	.string	"OP_SEND"
.LASF546:
	.string	"OP_FTBLK"
.LASF116:
	.string	"lastcloseparen"
.LASF167:
	.string	"XPVMG"
.LASF712:
	.string	"abs_amg"
.LASF559:
	.string	"OP_CHROOT"
.LASF238:
	.string	"xio_type"
.LASF995:
	.string	"Perl_sv_pos_u2b"
.LASF533:
	.string	"OP_FTEREAD"
.LASF778:
	.string	"reg_substr_datum"
.LASF6:
	.string	"long int"
.LASF245:
	.string	"svt_clear"
.LASF923:
	.string	"glob_assign"
.LASF943:
	.string	"dlen"
.LASF1249:
	.string	"PL_vtbl_arylen"
.LASF225:
	.string	"xio_ofp"
.LASF201:
	.string	"xgv_stash"
.LASF402:
	.string	"OP_OCT"
.LASF657:
	.string	"old_op_type"
.LASF357:
	.string	"OP_I_ADD"
.LASF86:
	.string	"op_pmreplroot"
.LASF1029:
	.string	"Perl_sv_newmortal"
.LASF1075:
	.string	"Perl_sv_isa"
.LASF1042:
	.string	"Perl_newSVnv"
.LASF864:
	.string	"limit"
.LASF1140:
	.string	"eptr"
.LASF1081:
	.string	"Perl_sv_setref_nv"
.LASF212:
	.string	"xcv_depth"
.LASF127:
	.string	"gp_cvgen"
.LASF164:
	.string	"XPVNV"
.LASF1096:
	.string	"Perl_sv_catpvf"
.LASF192:
	.string	"xhv_riter"
.LASF142:
	.string	"blku_gimme"
.LASF662:
	.string	"label"
.LASF940:
	.string	"Perl_sv_catpvn"
.LASF858:
	.string	"Perl_sv_setuv"
.LASF311:
	.string	"OP_RV2CV"
.LASF132:
	.string	"context"
.LASF648:
	.string	"dfoutgv"
.LASF746:
	.string	"scmp_amg"
.LASF545:
	.string	"OP_FTCHR"
.LASF1106:
	.string	"pattern"
.LASF1198:
	.string	"PL_sv_no"
.LASF984:
	.string	"ulen"
.LASF874:
	.string	"nv_as_uv"
.LASF444:
	.string	"OP_SORT"
.LASF219:
	.string	"xbm_useful"
.LASF867:
	.string	"S_sv_2iuv_non_preserve"
.LASF368:
	.string	"OP_LE"
.LASF870:
	.string	"tmpstr"
.LASF619:
	.string	"OP_GSBYPORT"
.LASF87:
	.string	"op_pmreplstart"
.LASF645:
	.string	"OP_CUSTOM"
.LASF364:
	.string	"OP_LT"
.LASF386:
	.string	"OP_BIT_XOR"
.LASF465:
	.string	"OP_DIE"
.LASF328:
	.string	"OP_SUBSTCONT"
.LASF1242:
	.string	"PL_vtbl_sig"
.LASF274:
	.string	"SVt_IV"
.LASF350:
	.string	"OP_I_MULTIPLY"
.LASF266:
	.string	"regnode"
.LASF721:
	.string	"mult_amg"
.LASF394:
	.string	"OP_COS"
.LASF1156:
	.string	"long double"
.LASF947:
	.string	"sutf8"
.LASF1186:
	.string	"PL_xpviv_root"
.LASF67:
	.string	"op_sibling"
.LASF226:
	.string	"xio_dirpu"
.LASF1006:
	.string	"is_utf8"
.LASF957:
	.string	"namlen"
.LASF251:
	.string	"any_iv"
.LASF421:
	.string	"OP_AELEM"
.LASF1227:
	.string	"PL_rs"
.LASF1164:
	.string	"PL_warn_uninit"
.LASF194:
	.string	"xhv_pmroot"
.LASF730:
	.string	"lshift_ass_amg"
.LASF391:
	.string	"OP_COMPLEMENT"
.LASF1065:
	.string	"Perl_sv_pvn_force"
.LASF466:
	.string	"OP_RESET"
.LASF1195:
	.string	"PL_nice_chunk"
.LASF3:
	.string	"long unsigned int"
.LASF83:
	.string	"pmop"
.LASF543:
	.string	"OP_FTCTIME"
.LASF449:
	.string	"OP_MAPWHILE"
.LASF1008:
	.string	"retval"
.LASF541:
	.string	"OP_FTMTIME"
.LASF433:
	.string	"OP_SPLIT"
.LASF681:
	.string	"sbu_once"
.LASF389:
	.string	"OP_I_NEGATE"
.LASF570:
	.string	"OP_READDIR"
.LASF775:
	.string	"int_amg"
.LASF94:
	.string	"PerlInterpreter"
.LASF716:
	.string	"numer_amg"
.LASF725:
	.string	"modulo_amg"
.LASF1253:
	.string	"PL_vtbl_taint"
.LASF374:
	.string	"OP_NE"
.LASF762:
	.string	"sqrt_amg"
.LASF765:
	.string	"concat_amg"
.LASF610:
	.string	"OP_GHBYADDR"
.LASF1251:
	.string	"PL_vtbl_mglob"
.LASF718:
	.string	"add_ass_amg"
.LASF20:
	.string	"char"
.LASF1117:
	.string	"gotwidth"
.LASF1194:
	.string	"PL_he_root"
.LASF455:
	.string	"OP_XOR"
.LASF530:
	.string	"OP_FTRREAD"
.LASF650:
	.string	"argarray"
.LASF737:
	.string	"bxor_amg"
.LASF1273:
	.string	"rslast"
.LASF231:
	.string	"xio_top_name"
.LASF578:
	.string	"OP_SYSTEM"
.LASF1219:
	.string	"PL_tmps_ix"
.LASF868:
	.string	"numtype"
.LASF153:
	.string	"mg_len"
.LASF504:
	.string	"OP_SYSOPEN"
.LASF290:
	.string	"xiou_dirp"
.LASF909:
	.string	"Perl_sv_utf8_upgrade_flags"
.LASF853:
	.string	"Perl_sv_backoff"
.LASF199:
	.string	"xgv_name"
.LASF999:
	.string	"uoffset"
.LASF321:
	.string	"OP_RCATLINE"
.LASF454:
	.string	"OP_OR"
.LASF920:
	.string	"dtype"
.LASF990:
	.string	"S_utf8_mg_pos"
.LASF346:
	.string	"OP_POSTDEC"
.LASF724:
	.string	"div_ass_amg"
.LASF647:
	.string	"block_sub"
.LASF7:
	.string	"__dev_t"
.LASF514:
	.string	"OP_FCNTL"
.LASF1244:
	.string	"PL_vtbl_pack"
.LASF1259:
	.string	"PL_vtbl_uvar"
.LASF994:
	.string	"backw"
.LASF539:
	.string	"OP_FTZERO"
.LASF308:
	.string	"OP_RV2GV"
.LASF435:
	.string	"OP_LIST"
.LASF478:
	.string	"OP_RETURN"
.LASF1061:
	.string	"Perl_sv_nv"
.LASF227:
	.string	"xio_lines"
.LASF936:
	.string	"hash"
.LASF536:
	.string	"OP_FTIS"
.LASF1230:
	.string	"PL_localizing"
.LASF695:
	.string	"si_cxstack"
.LASF294:
	.string	"OP_NULL"
.LASF157:
	.string	"xpv_len"
.LASF70:
	.string	"op_type"
.LASF428:
	.string	"OP_RV2HV"
.LASF1187:
	.string	"PL_xpvnv_root"
.LASF1022:
	.string	"buffer"
.LASF65:
	.string	"STRLEN"
.LASF1166:
	.string	"PL_no_modify"
.LASF551:
	.string	"OP_FTSUID"
.LASF1052:
	.string	"Perl_sv_2io"
.LASF326:
	.string	"OP_QR"
.LASF410:
	.string	"OP_FORMLINE"
.LASF658:
	.string	"old_namesv"
.LASF854:
	.string	"Perl_sv_grow"
.LASF789:
	.string	"visited"
.LASF577:
	.string	"OP_WAITPID"
.LASF275:
	.string	"SVt_NV"
.LASF407:
	.string	"OP_INDEX"
.LASF1018:
	.string	"thats_all_folks"
.LASF1078:
	.string	"Perl_sv_setref_pv"
.LASF43:
	.string	"_ISgraph"
.LASF408:
	.string	"OP_RINDEX"
.LASF708:
	.string	"hek_key"
.LASF625:
	.string	"OP_EHOSTENT"
.LASF1016:
	.string	"return_string_or_null"
.LASF354:
	.string	"OP_I_MODULO"
.LASF776:
	.string	"DESTROY_amg"
.LASF1080:
	.string	"Perl_sv_setref_uv"
.LASF783:
	.string	"size"
.LASF211:
	.string	"xcv_file"
.LASF848:
	.string	"S_more_xpvbm"
.LASF1131:
	.string	"intsize"
.LASF161:
	.string	"XPVUV"
.LASF55:
	.string	"__pad0"
.LASF859:
	.string	"Perl_sv_setuv_mg"
.LASF260:
	.string	"proto_perl"
.LASF659:
	.string	"old_eval_root"
.LASF430:
	.string	"OP_HSLICE"
.LASF1064:
	.string	"Perl_sv_pvn_nomg"
.LASF353:
	.string	"OP_MODULO"
.LASF1254:
	.string	"PL_vtbl_substr"
.LASF903:
	.string	"Perl_sv_2pvutf8_nolen"
.LASF594:
	.string	"OP_SHMREAD"
.LASF548:
	.string	"OP_FTDIR"
.LASF992:
	.string	"send"
.LASF624:
	.string	"OP_SSERVENT"
.LASF1146:
	.string	"have"
.LASF1102:
	.string	"svargs"
.LASF757:
	.string	"atan2_amg"
.LASF1089:
	.string	"Perl_sv_tainted"
.LASF293:
	.string	"PADOFFSET"
.LASF779:
	.string	"min_offset"
.LASF90:
	.string	"op_pmflags"
.LASF272:
	.string	"what"
.LASF163:
	.string	"xuv_uv"
.LASF95:
	.string	"interpreter"
.LASF141:
	.string	"blku_oldpm"
.LASF794:
	.string	"do_clean_all"
.LASF951:
	.string	"tlen"
.LASF750:
	.string	"sge_amg"
.LASF1062:
	.string	"Perl_sv_pv"
.LASF84:
	.string	"op_first"
.LASF64:
	.string	"double"
.LASF91:
	.string	"op_pmpermflags"
.LASF1136:
	.string	"osvix"
.LASF154:
	.string	"xrv_rv"
.LASF56:
	.string	"st_rdev"
.LASF828:
	.string	"S_more_xpvcv"
.LASF1000:
	.string	"Perl_sv_pos_b2u"
.LASF1111:
	.string	"origlen"
.LASF49:
	.string	"st_dev"
.LASF22:
	.string	"ssize_t"
.LASF68:
	.string	"op_ppaddr"
.LASF642:
	.string	"OP_THREADSV"
.LASF754:
	.string	"compl_amg"
.LASF1040:
	.string	"args"
.LASF250:
	.string	"any_i32"
.LASF755:
	.string	"inc_amg"
.LASF768:
	.string	"neg_amg"
.LASF1048:
	.string	"Perl_newSVsv"
.LASF277:
	.string	"SVt_PV"
.LASF76:
	.string	"cop_filegv"
.LASF253:
	.string	"any_bool"
.LASF440:
	.string	"OP_PUSH"
.LASF1071:
	.string	"Perl_sv_pvutf8n"
.LASF416:
	.string	"OP_UC"
.LASF216:
	.string	"xcv_outside_seq"
.LASF1205:
	.string	"PL_xpvnv_arenaroot"
.LASF1152:
	.string	"epix"
.LASF343:
	.string	"OP_I_PREDEC"
.LASF107:
	.string	"data"
.LASF519:
	.string	"OP_BIND"
.LASF626:
	.string	"OP_ENETENT"
.LASF1088:
	.string	"Perl_sv_untaint"
.LASF573:
	.string	"OP_REWINDDIR"
.LASF698:
	.string	"si_type"
.LASF179:
	.string	"xav_array"
.LASF276:
	.string	"SVt_RV"
.LASF1170:
	.string	"PL_dowarn"
.LASF924:
	.string	"sref"
.LASF256:
	.string	"CLONE_PARAMS"
.LASF473:
	.string	"OP_SCOPE"
.LASF609:
	.string	"OP_GHBYNAME"
.LASF342:
	.string	"OP_PREDEC"
.LASF663:
	.string	"resetsp"
.LASF131:
	.string	"PERL_CONTEXT"
.LASF37:
	.string	"_ISlower"
.LASF189:
	.string	"xhv_fill"
.LASF1107:
	.string	"F0convert"
.LASF1155:
	.string	"prifldbl"
.LASF160:
	.string	"xiv_iv"
.LASF939:
	.string	"delta"
.LASF815:
	.string	"S_del_xpv"
.LASF1132:
	.string	"width"
.LASF1038:
	.string	"hash_PeRlHaSh"
.LASF893:
	.string	"left"
.LASF795:
	.string	"cleaned"
.LASF136:
	.string	"blku_oldsp"
.LASF729:
	.string	"lshift_amg"
.LASF930:
	.string	"Perl_sv_setpvn_mg"
.LASF1108:
	.string	"endbuf"
.LASF806:
	.string	"S_new_xnv"
.LASF1109:
	.string	"Perl_sv_vcatpvfn"
.LASF576:
	.string	"OP_WAIT"
.LASF482:
	.string	"OP_DUMP"
.LASF763:
	.string	"repeat_amg"
.LASF799:
	.string	"arena"
.LASF9:
	.string	"__gid_t"
.LASF330:
	.string	"OP_SASSIGN"
.LASF784:
	.string	"svend"
.LASF722:
	.string	"mult_ass_amg"
.LASF664:
	.string	"redo_op"
.LASF420:
	.string	"OP_AELEMFAST"
.LASF921:
	.string	"stype"
.LASF707:
	.string	"hek_len"
.LASF938:
	.string	"Perl_sv_chop"
.LASF414:
	.string	"OP_UCFIRST"
.LASF565:
	.string	"OP_SYMLINK"
.LASF399:
	.string	"OP_SQRT"
.LASF863:
	.string	"tmpbuf"
.LASF1047:
	.string	"Perl_newRV"
.LASF597:
	.string	"OP_MSGCTL"
.LASF1179:
	.string	"PL_in_clean_objs"
.LASF24:
	.string	"tv_sec"
.LASF1039:
	.string	"Perl_newSVpvf"
.LASF1087:
	.string	"Perl_sv_taint"
.LASF540:
	.string	"OP_FTSIZE"
.LASF26:
	.string	"long long unsigned int"
.LASF966:
	.string	"offset"
.LASF928:
	.string	"Perl_sv_setpvn"
.LASF739:
	.string	"lt_amg"
.LASF510:
	.string	"OP_EOF"
.LASF666:
	.string	"last_op"
.LASF1202:
	.string	"PL_xrv_arenaroot"
.LASF1209:
	.string	"PL_xpvmg_arenaroot"
.LASF1099:
	.string	"Perl_sv_vcatpvf_mg"
.LASF1122:
	.string	"uns_integer"
.LASF556:
	.string	"OP_FTBINARY"
.LASF529:
	.string	"OP_STAT"
.LASF1237:
	.string	"PL_reginterp_cnt"
.LASF429:
	.string	"OP_HELEM"
.LASF59:
	.string	"st_blocks"
.LASF814:
	.string	"S_new_xpv"
.LASF954:
	.string	"Perl_newSV"
.LASF1019:
	.string	"thats_really_all_folks"
.LASF306:
	.string	"OP_PADANY"
.LASF310:
	.string	"OP_AV2ARYLEN"
.LASF516:
	.string	"OP_FLOCK"
.LASF411:
	.string	"OP_ORD"
.LASF248:
	.string	"svt_dup"
.LASF701:
	.string	"si_markoff"
.LASF1055:
	.string	"fix_gv"
.LASF297:
	.string	"OP_PUSHMARK"
.LASF900:
	.string	"Perl_sv_copypv"
.LASF942:
	.string	"Perl_sv_catpvn_flags"
.LASF901:
	.string	"Perl_sv_2pvbyte_nolen"
.LASF604:
	.string	"OP_DOFILE"
.LASF232:
	.string	"xio_top_gv"
.LASF723:
	.string	"div_amg"
.LASF1218:
	.string	"PL_tmps_stack"
.LASF1200:
	.string	"PL_amagic_generation"
.LASF1097:
	.string	"Perl_sv_vcatpvf"
.LASF426:
	.string	"OP_DELETE"
.LASF1262:
	.string	"PL_vtbl_regexp"
.LASF719:
	.string	"subtr_amg"
.LASF1221:
	.string	"PL_tmps_max"
.LASF689:
	.string	"sbu_rxres"
.LASF1115:
	.string	"has_utf8"
.LASF1232:
	.string	"PL_curstackinfo"
.LASF892:
	.string	"reflags"
.LASF1212:
	.string	"PL_he_arenaroot"
.LASF1125:
	.string	"digits"
.LASF461:
	.string	"OP_LEAVESUB"
.LASF1233:
	.string	"PL_hv_fetch_ent_mh"
.LASF964:
	.string	"Perl_sv_insert"
.LASF810:
	.string	"S_new_xrv"
.LASF303:
	.string	"OP_PADSV"
.LASF315:
	.string	"OP_SREFGEN"
.LASF880:
	.string	"peob"
.LASF483:
	.string	"OP_GOTO"
.LASF897:
	.string	"name"
.LASF93:
	.string	"op_pmstash"
.LASF242:
	.string	"svt_get"
.LASF122:
	.string	"gp_form"
.LASF347:
	.string	"OP_I_POSTDEC"
.LASF948:
	.string	"dutf8"
.LASF983:
	.string	"Perl_sv_len_utf8"
.LASF982:
	.string	"Perl_sv_len"
.LASF832:
	.string	"S_more_xpvav"
.LASF309:
	.string	"OP_RV2SV"
.LASF137:
	.string	"blku_oldcop"
.LASF1174:
	.string	"PL_sv_objcount"
.LASF75:
	.string	"cop_stash"
.LASF317:
	.string	"OP_BLESS"
.LASF589:
	.string	"OP_GMTIME"
.LASF27:
	.string	"long long int"
.LASF261:
	.string	"line_t"
.LASF195:
	.string	"xhv_name"
.LASF555:
	.string	"OP_FTTEXT"
.LASF744:
	.string	"ne_amg"
.LASF998:
	.string	"boffset"
.LASF694:
	.string	"si_stack"
.LASF542:
	.string	"OP_FTATIME"
.LASF247:
	.string	"svt_copy"
.LASF1196:
	.string	"PL_nice_chunk_size"
.LASF441:
	.string	"OP_POP"
.LASF339:
	.string	"OP_POS"
.LASF1149:
	.string	"dotstrlen"
.LASF348:
	.string	"OP_POW"
.LASF474:
	.string	"OP_ENTERITER"
.LASF314:
	.string	"OP_REFGEN"
.LASF25:
	.string	"tv_nsec"
.LASF877:
	.string	"Perl_sv_2pv_nolen"
.LASF1257:
	.string	"PL_vtbl_bm"
.LASF531:
	.string	"OP_FTRWRITE"
.LASF817:
	.string	"xpvend"
.LASF525:
	.string	"OP_SSOCKOPT"
.LASF926:
	.string	"intro"
.LASF133:
	.string	"cx_type"
.LASF185:
	.string	"xav_flags"
.LASF631:
	.string	"OP_GPWENT"
.LASF1206:
	.string	"PL_xpvcv_arenaroot"
.LASF39:
	.string	"_ISdigit"
.LASF800:
	.string	"arenanext"
.LASF671:
	.string	"iterix"
.LASF946:
	.string	"Perl_sv_catsv_flags"
.LASF621:
	.string	"OP_SHOSTENT"
.LASF10:
	.string	"__ino_t"
.LASF479:
	.string	"OP_LAST"
.LASF169:
	.string	"xmg_magic"
.LASF425:
	.string	"OP_KEYS"
.LASF902:
	.string	"Perl_sv_2pvbyte"
.LASF151:
	.string	"mg_obj"
.LASF978:
	.string	"prev"
.LASF1264:
	.string	"PL_vtbl_regdatum"
.LASF608:
	.string	"OP_LEAVETRY"
.LASF254:
	.string	"any_dptr"
.LASF451:
	.string	"OP_FLIP"
.LASF769:
	.string	"to_sv_amg"
.LASF569:
	.string	"OP_OPEN_DIR"
.LASF884:
	.string	"Perl_sv_2pv_flags"
.LASF833:
	.string	"xpvavend"
.LASF178:
	.string	"xpvav"
.LASF89:
	.string	"op_pmregexp"
.LASF316:
	.string	"OP_REF"
.LASF518:
	.string	"OP_SOCKPAIR"
.LASF1188:
	.string	"PL_xpvcv_root"
.LASF498:
	.string	"OP_GETC"
.LASF934:
	.string	"Perl_sv_usepvn_mg"
.LASF1148:
	.string	"dotstr"
.LASF615:
	.string	"OP_GPBYNAME"
.LASF209:
	.string	"xcv_xsubany"
.LASF1266:
	.string	"PL_vtbl_amagicelem"
.LASF996:
	.string	"lenp"
.LASF489:
	.string	"OP_UMASK"
.LASF230:
	.string	"xio_lines_left"
.LASF1135:
	.string	"precis"
.LASF509:
	.string	"OP_RECV"
.LASF965:
	.string	"bigstr"
.LASF1007:
	.string	"Perl_sv_cmp"
.LASF1015:
	.string	"recsize"
.LASF123:
	.string	"gp_av"
.LASF713:
	.string	"bool__amg"
.LASF218:
	.string	"xpvbm"
.LASF513:
	.string	"OP_TRUNCATE"
.LASF487:
	.string	"OP_PIPE_OP"
.LASF633:
	.string	"OP_EPWENT"
.LASF1066:
	.string	"Perl_sv_pvn_force_flags"
.LASF793:
	.string	"Perl_sv_clean_objs"
.LASF1084:
	.string	"S_sv_unglob"
.LASF857:
	.string	"Perl_sv_setiv_mg"
.LASF1094:
	.string	"Perl_sv_setpvf_mg"
.LASF997:
	.string	"cache"
.LASF1235:
	.string	"PL_efloatbuf"
.LASF661:
	.string	"block_loop"
.LASF312:
	.string	"OP_ANONCODE"
.LASF1128:
	.string	"vec_utf8"
.LASF1049:
	.string	"Perl_sv_reset"
.LASF727:
	.string	"pow_amg"
.LASF329:
	.string	"OP_TRANS"
.LASF933:
	.string	"Perl_sv_usepvn"
.LASF640:
	.string	"OP_SYSCALL"
.LASF1225:
	.string	"PL_Xpv"
.LASF215:
	.string	"xcv_flags"
.LASF644:
	.string	"OP_METHOD_NAMED"
.LASF2:
	.string	"unsigned int"
.LASF678:
	.string	"sbu_maxiters"
.LASF204:
	.string	"xpvcv"
.LASF392:
	.string	"OP_ATAN2"
.LASF437:
	.string	"OP_ANONLIST"
.LASF517:
	.string	"OP_SOCKET"
.LASF422:
	.string	"OP_ASLICE"
.LASF890:
	.string	"tokensaveref"
.LASF395:
	.string	"OP_RAND"
.LASF401:
	.string	"OP_HEX"
.LASF654:
	.string	"oldcomppad"
.LASF264:
	.string	"_PerlIO"
.LASF61:
	.string	"st_mtim"
.LASF496:
	.string	"OP_SSELECT"
.LASF735:
	.string	"bor_amg"
.LASF752:
	.string	"sne_amg"
.LASF596:
	.string	"OP_MSGGET"
.LASF5:
	.string	"short int"
.LASF1240:
	.string	"PL_vtbl_env"
.LASF126:
	.string	"gp_cv"
.LASF1258:
	.string	"PL_vtbl_fm"
.LASF1072:
	.string	"Perl_sv_pvutf8n_force"
.LASF1104:
	.string	"maybe_tainted"
.LASF418:
	.string	"OP_QUOTEMETA"
.LASF582:
	.string	"OP_GETPGRP"
.LASF651:
	.string	"olddepth"
.LASF1178:
	.string	"PL_compiling"
.LASF376:
	.string	"OP_NCMP"
.LASF607:
	.string	"OP_ENTERTRY"
.LASF888:
	.string	"ret_iv_max"
.LASF1137:
	.string	"esignbuf"
.LASF561:
	.string	"OP_CHMOD"
.LASF397:
	.string	"OP_EXP"
.LASF413:
	.string	"OP_CRYPT"
.LASF562:
	.string	"OP_UTIME"
.LASF759:
	.string	"sin_amg"
.LASF48:
	.string	"stat"
.LASF262:
	.string	"PerlIOl"
.LASF460:
	.string	"OP_ENTERSUB"
.LASF259:
	.string	"flags"
.LASF409:
	.string	"OP_SPRINTF"
.LASF323:
	.string	"OP_REGCRESET"
.LASF906:
	.string	"tmpsv"
.LASF1028:
	.string	"oldstr"
	.ident	"GCC: (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1"
	.section	.note.GNU-stack,"",@progbits
