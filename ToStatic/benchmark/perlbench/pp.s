	.file	"pp.c"
# GNU C (Ubuntu/Linaro 4.8.1-10ubuntu9) version 4.8.1 (x86_64-linux-gnu)
#	compiled by GNU C version 4.8.1, GMP version 5.1.2, MPFR version 3.1.1-p2, MPC version 1.0.1
# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
# options passed:  -imultiarch x86_64-linux-gnu -D SPEC_CPU -D NDEBUG
# -D PERL_CORE -D SPEC_CPU_LP64 -D SPEC_CPU_LINUX_X64 pp.c -mtune=generic
# -march=x86-64 -g -fverbose-asm -fno-strict-aliasing -fstack-protector
# -Wformat -Wformat-security
# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg -fcommon
# -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
# -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
# -fident -finline-atomics -fira-hoist-pressure -fira-share-save-slots
# -fira-share-spill-slots -fivopts -fkeep-static-consts
# -fleading-underscore -fmath-errno -fmerge-debug-strings
# -fmove-loop-invariants -fpeephole -fprefetch-loop-arrays
# -freg-struct-return -fsched-critical-path-heuristic
# -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
# -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
# -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fshow-column
# -fsigned-zeros -fsplit-ivs-in-unroller -fstack-protector
# -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
# -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
# -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
# -ftree-parallelize-loops= -ftree-phiprop -ftree-pta -ftree-reassoc
# -ftree-scev-cprop -ftree-slp-vectorize -ftree-vect-loop-version
# -funit-at-a-time -funwind-tables -fverbose-asm -fzero-initialized-in-bss
# -m128bit-long-double -m64 -m80387 -maccumulate-outgoing-args
# -malign-stringops -mfancy-math-387 -mfp-ret-in-387 -mfxsr -mglibc
# -mieee-fp -mlong-double-80 -mmmx -mno-sse4 -mpush-args -mred-zone -msse
# -msse2 -mtls-direct-seg-refs

	.text
.Ltext0:
	.globl	Perl_pp_stub
	.type	Perl_pp_stub, @function
Perl_pp_stub:
.LFB2:
	.file 1 "pp.c"
	.loc 1 45 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 46 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 47 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.0
	movzbl	36(%rax), %eax	# PL_op.0_4->op_flags, D.23708
	movzbl	%al, %eax	# D.23708, D.23709
	andl	$3, %eax	#, D.23709
	cmpl	$1, %eax	#, D.23709
	je	.L2	#,
	.loc 1 47 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1
	movzbl	36(%rax), %eax	# PL_op.1_8->op_flags, D.23708
	movzbl	%al, %eax	# D.23708, D.23709
	andl	$3, %eax	#, D.23709
	cmpl	$2, %eax	#, D.23709
	je	.L3	#,
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2
	movzbl	36(%rax), %eax	# PL_op.2_12->op_flags, D.23708
	movzbl	%al, %eax	# D.23708, D.23709
	andl	$3, %eax	#, D.23709
	cmpl	$3, %eax	#, D.23709
	je	.L2	#,
	.loc 1 47 0 discriminator 2
	call	Perl_block_gimme	#
	testl	%eax, %eax	# D.23709
	jne	.L2	#,
.L3:
.LBB2:
	.loc 1 48 0 is_stmt 1
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.3
	movq	%rax, %rdx	# PL_stack_max.3, PL_stack_max.4
	movq	%rbx, %rax	# sp, sp.5
	subq	%rax, %rdx	# sp.5, D.23710
	movq	%rdx, %rax	# D.23710, D.23710
	cmpq	$7, %rax	#, D.23710
	jg	.L4	#,
	.loc 1 48 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L4:
	.loc 1 48 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	$PL_sv_undef, (%rbx)	#, *sp_22
.L2:
.LBE2:
	.loc 1 49 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.6
	movq	(%rax), %rax	# PL_op.6_24->op_next, D.23712
	.loc 1 50 0
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	Perl_pp_stub, .-Perl_pp_stub
	.globl	Perl_pp_scalar
	.type	Perl_pp_scalar, @function
Perl_pp_scalar:
.LFB3:
	.loc 1 53 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 54 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.7
	movq	(%rax), %rax	# PL_op.7_1->op_next, D.23713
	.loc 1 55 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	Perl_pp_scalar, .-Perl_pp_scalar
	.section	.rodata
	.align 8
.LC0:
	.string	"Can't return array to lvalue scalar context"
	.text
	.globl	Perl_pp_padav
	.type	Perl_pp_padav, @function
Perl_pp_padav:
.LFB4:
	.loc 1 60 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 61 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.8
	movq	PL_op(%rip), %rax	# PL_op, PL_op.9
	movq	24(%rax), %rax	# PL_op.9_15->op_targ, D.23715
	salq	$3, %rax	#, D.23715
	addq	%rdx, %rax	# PL_curpad.8, D.23716
	movq	(%rax), %rax	# *_18, tmp159
	movq	%rax, -40(%rbp)	# tmp159, targ
	.loc 1 63 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.10
	movzbl	37(%rax), %eax	# PL_op.10_20->op_private, D.23717
	testb	%al, %al	# D.23718
	jns	.L9	#,
	.loc 1 64 0
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.11
	movq	PL_op(%rip), %rax	# PL_op, PL_op.12
	movq	24(%rax), %rax	# PL_op.12_24->op_targ, D.23715
	salq	$3, %rax	#, D.23715
	addq	%rdx, %rax	# PL_curpad.11, D.23716
	movq	%rax, %rdi	# D.23716,
	call	Perl_save_clearsv	#
.L9:
	.loc 1 65 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.13
	movq	%rax, %rdx	# PL_stack_max.13, PL_stack_max.14
	movq	%rbx, %rax	# sp, sp.15
	subq	%rax, %rdx	# sp.15, D.23719
	movq	%rdx, %rax	# D.23719, D.23719
	cmpq	$7, %rax	#, D.23719
	jg	.L10	#,
	.loc 1 65 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L10:
	.loc 1 66 0 is_stmt 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.16
	movzbl	36(%rax), %eax	# PL_op.16_33->op_flags, D.23717
	movzbl	%al, %eax	# D.23717, D.23720
	andl	$16, %eax	#, D.23720
	testl	%eax, %eax	# D.23720
	je	.L11	#,
	.loc 1 67 0
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp160
	movq	%rax, (%rbx)	# tmp160, *sp_37
	.loc 1 68 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.17
	movq	(%rax), %rax	# PL_op.17_38->op_next, D.23714
	jmp	.L12	#
.L11:
	.loc 1 69 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.18
	movzbl	37(%rax), %eax	# PL_op.18_40->op_private, D.23717
	movzbl	%al, %eax	# D.23717, D.23720
	andl	$8, %eax	#, D.23720
	testl	%eax, %eax	# D.23720
	je	.L13	#,
	.loc 1 69 0 is_stmt 0 discriminator 1
	call	Perl_is_lvalue_sub	#
	testl	%eax, %eax	# D.23720
	je	.L13	#,
	.loc 1 70 0 is_stmt 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.20
	movzbl	36(%rax), %eax	# PL_op.20_45->op_flags, D.23717
	movzbl	%al, %eax	# D.23717, D.23720
	andl	$3, %eax	#, D.23720
	testl	%eax, %eax	# D.23720
	je	.L14	#,
	.loc 1 70 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.21
	movzbl	36(%rax), %eax	# PL_op.21_49->op_flags, D.23717
	movzbl	%al, %eax	# D.23717, D.23720
	andl	$3, %eax	#, D.23720
	cmpl	$3, %eax	#, D.23720
	setne	%al	#, iftmp.19
	jmp	.L15	#
.L14:
	.loc 1 70 0 discriminator 2
	call	Perl_dowantarray	#
	testl	%eax, %eax	# D.23720
	sete	%al	#, iftmp.19
.L15:
	.loc 1 70 0 discriminator 3
	testb	%al, %al	# iftmp.19
	je	.L16	#,
	.loc 1 71 0 is_stmt 1
	movl	$.LC0, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L16:
	.loc 1 72 0
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp161
	movq	%rax, (%rbx)	# tmp161, *sp_56
	.loc 1 73 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.22
	movq	(%rax), %rax	# PL_op.22_57->op_next, D.23714
	jmp	.L12	#
.L13:
	.loc 1 75 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.24
	movzbl	36(%rax), %eax	# PL_op.24_59->op_flags, D.23717
	movzbl	%al, %eax	# D.23717, D.23720
	andl	$3, %eax	#, D.23720
	cmpl	$1, %eax	#, D.23720
	je	.L17	#,
	.loc 1 75 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.26
	movzbl	36(%rax), %eax	# PL_op.26_63->op_flags, D.23717
	movzbl	%al, %eax	# D.23717, D.23720
	andl	$3, %eax	#, D.23720
	cmpl	$2, %eax	#, D.23720
	je	.L18	#,
	movq	PL_op(%rip), %rax	# PL_op, PL_op.28
	movzbl	36(%rax), %eax	# PL_op.28_67->op_flags, D.23717
	movzbl	%al, %eax	# D.23717, D.23720
	andl	$3, %eax	#, D.23720
	cmpl	$3, %eax	#, D.23720
	je	.L19	#,
	call	Perl_block_gimme	#
	jmp	.L22	#
.L19:
	.loc 1 75 0 discriminator 2
	movl	$1, %eax	#, iftmp.27
	jmp	.L22	#
.L18:
	movl	$0, %eax	#, iftmp.25
	jmp	.L22	#
.L17:
	movl	$128, %eax	#, iftmp.23
.L22:
	.loc 1 75 0 discriminator 3
	movl	%eax, -52(%rbp)	# iftmp.23, gimme
	.loc 1 76 0 is_stmt 1 discriminator 3
	cmpl	$1, -52(%rbp)	#, gimme
	jne	.L23	#,
.LBB3:
	.loc 1 77 0
	movq	-40(%rbp), %rax	# targ, tmp162
	movl	12(%rax), %eax	# targ_19->sv_flags, D.23721
	andl	$32768, %eax	#, D.23721
	testl	%eax, %eax	# D.23721
	je	.L24	#,
	.loc 1 77 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp163
	movq	%rax, %rdi	# tmp163,
	call	Perl_mg_size	#
	addl	$1, %eax	#, D.23722
	jmp	.L25	#
.L24:
	.loc 1 77 0 discriminator 2
	movq	-40(%rbp), %rax	# targ, tmp164
	movq	(%rax), %rax	# MEM[(struct AV *)targ_19].sv_any, D.23723
	movq	8(%rax), %rax	# _84->xav_fill, D.23719
	addl	$1, %eax	#, D.23722
.L25:
	.loc 1 77 0 discriminator 3
	movl	%eax, -48(%rbp)	# iftmp.29, maxarg
	.loc 1 78 0 is_stmt 1 discriminator 3
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.30
	movq	%rax, %rdx	# PL_stack_max.30, PL_stack_max.31
	movq	%rbx, %rax	# sp, sp.32
	subq	%rax, %rdx	# sp.32, D.23719
	movq	%rdx, %rax	# D.23719, D.23719
	sarq	$3, %rax	#, tmp165
	movq	%rax, %rdx	# tmp165, D.23719
	movl	-48(%rbp), %eax	# maxarg, tmp166
	cltq
	cmpq	%rax, %rdx	# D.23719, D.23719
	jge	.L26	#,
	.loc 1 78 0 is_stmt 0 discriminator 1
	movl	-48(%rbp), %eax	# maxarg, tmp167
	movl	%eax, %edx	# tmp167,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L26:
	.loc 1 79 0 is_stmt 1
	movq	-40(%rbp), %rax	# targ, tmp168
	movl	12(%rax), %eax	# targ_19->sv_flags, D.23721
	andl	$57344, %eax	#, D.23721
	testl	%eax, %eax	# D.23721
	je	.L27	#,
.LBB4:
	.loc 1 81 0
	movl	$0, -56(%rbp)	#, i
	jmp	.L28	#
.L31:
.LBB5:
	.loc 1 82 0
	movl	-56(%rbp), %ecx	# i, i.33
	movq	-40(%rbp), %rax	# targ, tmp169
	movl	$0, %edx	#,
	movl	%ecx, %esi	# i.33,
	movq	%rax, %rdi	# tmp169,
	call	Perl_av_fetch	#
	movq	%rax, -32(%rbp)	# tmp170, svp
	.loc 1 83 0
	movl	-56(%rbp), %eax	# i, tmp171
	addl	$1, %eax	#, D.23721
	movl	%eax, %eax	# D.23721, D.23715
	salq	$3, %rax	#, D.23715
	leaq	(%rbx,%rax), %rdx	#, D.23716
	cmpq	$0, -32(%rbp)	#, svp
	je	.L29	#,
	.loc 1 83 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# svp, tmp172
	movq	(%rax), %rax	# *svp_102, iftmp.34
	jmp	.L30	#
.L29:
	.loc 1 83 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.34
.L30:
	.loc 1 83 0 discriminator 3
	movq	%rax, (%rdx)	# iftmp.34, *_106
.LBE5:
	.loc 1 81 0 is_stmt 1 discriminator 3
	addl	$1, -56(%rbp)	#, i
.L28:
	.loc 1 81 0 is_stmt 0 discriminator 1
	movl	-48(%rbp), %eax	# maxarg, maxarg.35
	cmpl	-56(%rbp), %eax	# i, maxarg.35
	ja	.L31	#,
.LBE4:
	jmp	.L32	#
.L27:
	.loc 1 87 0 is_stmt 1
	movl	-48(%rbp), %eax	# maxarg, tmp173
	cltq
	leaq	0(,%rax,8), %rdx	#, D.23715
	movq	-40(%rbp), %rax	# targ, tmp174
	movq	(%rax), %rax	# MEM[(struct AV *)targ_19].sv_any, D.23723
	movq	(%rax), %rcx	# _112->xav_array, D.23724
	leaq	8(%rbx), %rax	#, D.23724
	movq	%rcx, %rsi	# D.23724,
	movq	%rax, %rdi	# D.23724,
	call	memcpy	#
.L32:
	.loc 1 89 0 discriminator 1
	movl	-48(%rbp), %eax	# maxarg, tmp175
	cltq
	salq	$3, %rax	#, D.23715
	addq	%rax, %rbx	# D.23715, sp
.LBE3:
	jmp	.L33	#
.L23:
	.loc 1 91 0
	cmpl	$0, -52(%rbp)	#, gimme
	jne	.L33	#,
.LBB6:
	.loc 1 92 0
	call	Perl_sv_newmortal	#
	movq	%rax, -24(%rbp)	# tmp176, sv
	.loc 1 93 0
	movq	-40(%rbp), %rax	# targ, tmp177
	movl	12(%rax), %eax	# targ_19->sv_flags, D.23721
	andl	$32768, %eax	#, D.23721
	testl	%eax, %eax	# D.23721
	je	.L34	#,
	.loc 1 93 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp178
	movq	%rax, %rdi	# tmp178,
	call	Perl_mg_size	#
	addl	$1, %eax	#, D.23722
	jmp	.L35	#
.L34:
	.loc 1 93 0 discriminator 2
	movq	-40(%rbp), %rax	# targ, tmp179
	movq	(%rax), %rax	# MEM[(struct AV *)targ_19].sv_any, D.23723
	movq	8(%rax), %rax	# _125->xav_fill, D.23719
	addl	$1, %eax	#, D.23722
.L35:
	.loc 1 93 0 discriminator 3
	movl	%eax, -44(%rbp)	# iftmp.36, maxarg
	.loc 1 94 0 is_stmt 1 discriminator 3
	movl	-44(%rbp), %eax	# maxarg, tmp180
	movslq	%eax, %rdx	# tmp180, D.23719
	movq	-24(%rbp), %rax	# sv, tmp181
	movq	%rdx, %rsi	# D.23719,
	movq	%rax, %rdi	# tmp181,
	call	Perl_sv_setiv	#
	.loc 1 95 0 discriminator 3
	addq	$8, %rbx	#, sp
	movq	-24(%rbp), %rax	# sv, tmp182
	movq	%rax, (%rbx)	# tmp182, *sp_132
.L33:
.LBE6:
	.loc 1 97 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.37
	movq	(%rax), %rax	# PL_op.37_133->op_next, D.23714
.L12:
	.loc 1 98 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	Perl_pp_padav, .-Perl_pp_padav
	.section	.rodata
	.align 8
.LC1:
	.string	"Can't return hash to lvalue scalar context"
	.text
	.globl	Perl_pp_padhv
	.type	Perl_pp_padhv, @function
Perl_pp_padhv:
.LFB5:
	.loc 1 101 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 102 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.38
	movq	PL_op(%rip), %rax	# PL_op, PL_op.39
	movq	24(%rax), %rax	# PL_op.39_9->op_targ, D.23727
	salq	$3, %rax	#, D.23727
	addq	%rdx, %rax	# PL_curpad.38, D.23728
	movq	(%rax), %rax	# *_12, tmp117
	movq	%rax, -32(%rbp)	# tmp117, targ
.LBB7:
	.loc 1 105 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.40
	movq	%rax, %rdx	# PL_stack_max.40, PL_stack_max.41
	movq	%rbx, %rax	# sp, sp.42
	subq	%rax, %rdx	# sp.42, D.23729
	movq	%rdx, %rax	# D.23729, D.23729
	cmpq	$7, %rax	#, D.23729
	jg	.L37	#,
	.loc 1 105 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L37:
	.loc 1 105 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-32(%rbp), %rax	# targ, tmp118
	movq	%rax, (%rbx)	# tmp118, *sp_19
.LBE7:
	.loc 1 106 0 is_stmt 1 discriminator 2
	movq	PL_op(%rip), %rax	# PL_op, PL_op.43
	movzbl	37(%rax), %eax	# PL_op.43_21->op_private, D.23731
	testb	%al, %al	# D.23732
	jns	.L38	#,
	.loc 1 107 0
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.44
	movq	PL_op(%rip), %rax	# PL_op, PL_op.45
	movq	24(%rax), %rax	# PL_op.45_25->op_targ, D.23727
	salq	$3, %rax	#, D.23727
	addq	%rdx, %rax	# PL_curpad.44, D.23728
	movq	%rax, %rdi	# D.23728,
	call	Perl_save_clearsv	#
.L38:
	.loc 1 108 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.46
	movzbl	36(%rax), %eax	# PL_op.46_29->op_flags, D.23731
	movzbl	%al, %eax	# D.23731, D.23733
	andl	$16, %eax	#, D.23733
	testl	%eax, %eax	# D.23733
	je	.L39	#,
	.loc 1 109 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.47
	movq	(%rax), %rax	# PL_op.47_33->op_next, D.23726
	jmp	.L40	#
.L39:
	.loc 1 110 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.48
	movzbl	37(%rax), %eax	# PL_op.48_35->op_private, D.23731
	movzbl	%al, %eax	# D.23731, D.23733
	andl	$8, %eax	#, D.23733
	testl	%eax, %eax	# D.23733
	je	.L41	#,
	.loc 1 110 0 is_stmt 0 discriminator 1
	call	Perl_is_lvalue_sub	#
	testl	%eax, %eax	# D.23733
	je	.L41	#,
	.loc 1 111 0 is_stmt 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.50
	movzbl	36(%rax), %eax	# PL_op.50_40->op_flags, D.23731
	movzbl	%al, %eax	# D.23731, D.23733
	andl	$3, %eax	#, D.23733
	testl	%eax, %eax	# D.23733
	je	.L42	#,
	.loc 1 111 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.51
	movzbl	36(%rax), %eax	# PL_op.51_44->op_flags, D.23731
	movzbl	%al, %eax	# D.23731, D.23733
	andl	$3, %eax	#, D.23733
	cmpl	$3, %eax	#, D.23733
	setne	%al	#, iftmp.49
	jmp	.L43	#
.L42:
	.loc 1 111 0 discriminator 2
	call	Perl_dowantarray	#
	testl	%eax, %eax	# D.23733
	sete	%al	#, iftmp.49
.L43:
	.loc 1 111 0 discriminator 3
	testb	%al, %al	# iftmp.49
	je	.L44	#,
	.loc 1 112 0 is_stmt 1
	movl	$.LC1, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L44:
	.loc 1 113 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.52
	movq	(%rax), %rax	# PL_op.52_51->op_next, D.23726
	jmp	.L40	#
.L41:
	.loc 1 115 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.54
	movzbl	36(%rax), %eax	# PL_op.54_53->op_flags, D.23731
	movzbl	%al, %eax	# D.23731, D.23733
	andl	$3, %eax	#, D.23733
	cmpl	$1, %eax	#, D.23733
	je	.L45	#,
	.loc 1 115 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.56
	movzbl	36(%rax), %eax	# PL_op.56_57->op_flags, D.23731
	movzbl	%al, %eax	# D.23731, D.23733
	andl	$3, %eax	#, D.23733
	cmpl	$2, %eax	#, D.23733
	je	.L46	#,
	movq	PL_op(%rip), %rax	# PL_op, PL_op.58
	movzbl	36(%rax), %eax	# PL_op.58_61->op_flags, D.23731
	movzbl	%al, %eax	# D.23731, D.23733
	andl	$3, %eax	#, D.23733
	cmpl	$3, %eax	#, D.23733
	je	.L47	#,
	call	Perl_block_gimme	#
	jmp	.L50	#
.L47:
	.loc 1 115 0 discriminator 2
	movl	$1, %eax	#, iftmp.57
	jmp	.L50	#
.L46:
	movl	$0, %eax	#, iftmp.55
	jmp	.L50	#
.L45:
	movl	$128, %eax	#, iftmp.53
.L50:
	.loc 1 115 0 discriminator 3
	movl	%eax, -36(%rbp)	# iftmp.53, gimme
	.loc 1 116 0 is_stmt 1 discriminator 3
	cmpl	$1, -36(%rbp)	#, gimme
	jne	.L51	#,
	.loc 1 117 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	call	Perl_do_kv	#
	jmp	.L40	#
.L51:
	.loc 1 119 0
	cmpl	$0, -36(%rbp)	#, gimme
	jne	.L52	#,
.LBB8:
	.loc 1 120 0
	movq	-32(%rbp), %rax	# targ, tmp119
	movq	%rax, %rdi	# tmp119,
	call	Perl_hv_scalar	#
	movq	%rax, -24(%rbp)	# tmp120, sv
	.loc 1 121 0
	movq	-24(%rbp), %rax	# sv, tmp121
	movq	%rax, (%rbx)	# tmp121, *sp_19
.L52:
.LBE8:
	.loc 1 123 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.59
	movq	(%rax), %rax	# PL_op.59_74->op_next, D.23726
.L40:
	.loc 1 124 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	Perl_pp_padhv, .-Perl_pp_padhv
	.section	.rodata
.LC2:
	.string	"NOT IMPL LINE %d"
	.text
	.globl	Perl_pp_padany
	.type	Perl_pp_padany, @function
Perl_pp_padany:
.LFB6:
	.loc 1 127 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 128 0
	movl	$128, %esi	#,
	movl	$.LC2, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	.loc 1 129 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	Perl_pp_padany, .-Perl_pp_padany
	.section	.rodata
	.align 8
.LC3:
	.string	"Overloaded dereference did not return a reference"
.LC4:
	.string	""
.LC5:
	.string	"Not a GLOB reference"
.LC6:
	.string	"a symbol"
	.text
	.globl	Perl_pp_rv2gv
	.type	Perl_pp_rv2gv, @function
Perl_pp_rv2gv:
.LFB7:
	.loc 1 134 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 135 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	(%rbx), %rax	# *sp_16, tmp201
	movq	%rax, -80(%rbp)	# tmp201, sv
	.loc 1 137 0
	movq	-80(%rbp), %rax	# sv, tmp202
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	andl	$524288, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	je	.L56	#,
.L57:
	.loc 1 139 0
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.60
	testq	%rax, %rax	# PL_amagic_generation.60
	je	.L58	#,
.LBB9:
	.loc 1 139 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_16, tmp203
	movq	%rax, -72(%rbp)	# tmp203, arg
.L59:
	.loc 1 139 0 discriminator 2
	movq	-72(%rbp), %rax	# arg, tmp204
	movl	12(%rax), %eax	# arg_9->sv_flags, D.23738
	andl	$268435456, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	je	.L58	#,
	.loc 1 139 0 discriminator 1
	movq	-72(%rbp), %rax	# arg, tmp205
	movl	$9, %ecx	#,
	movl	$61, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp205,
	call	Perl_amagic_call	#
	movq	%rax, -32(%rbp)	# tmp206, tmpsv
	cmpq	$0, -32(%rbp)	#, tmpsv
	je	.L58	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
.LBB10:
	movq	-32(%rbp), %rax	# tmpsv, tmp207
	movq	%rax, -80(%rbp)	# tmp207, sv
	movq	-32(%rbp), %rax	# tmpsv, tmp208
	movl	12(%rax), %eax	# tmpsv_145->sv_flags, D.23738
	andl	$524288, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	jne	.L60	#,
	movl	$.LC3, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L60:
	.loc 1 139 0 discriminator 2
	movq	-32(%rbp), %rax	# tmpsv, tmp209
	cmpq	-72(%rbp), %rax	# arg, tmp209
	je	.L58	#,
	.loc 1 139 0 discriminator 1
	movq	-32(%rbp), %rax	# tmpsv, tmp210
	movq	(%rax), %rax	# tmpsv_145->sv_any, D.23743
	movq	(%rax), %rdx	# MEM[(struct XRV *)_150].xrv_rv, D.23747
	movq	-72(%rbp), %rax	# arg, tmp211
	movq	(%rax), %rax	# arg_9->sv_any, D.23743
	movq	(%rax), %rax	# MEM[(struct XRV *)_152].xrv_rv, D.23747
	cmpq	%rax, %rdx	# D.23747, D.23747
	je	.L58	#,
	movq	-32(%rbp), %rax	# tmpsv, tmp212
	movq	%rax, -72(%rbp)	# tmp212, arg
	jmp	.L59	#
.L58:
.LBE10:
.LBE9:
	.loc 1 141 0 is_stmt 1
	movq	-80(%rbp), %rax	# sv, tmp213
	movq	(%rax), %rax	# sv_5->sv_any, D.23743
	movq	(%rax), %rax	# MEM[(struct XRV *)_155].xrv_rv, tmp214
	movq	%rax, -80(%rbp)	# tmp214, sv
	.loc 1 142 0
	movq	-80(%rbp), %rax	# sv, tmp215
	movl	12(%rax), %eax	# sv_156->sv_flags, D.23738
	movzbl	%al, %eax	# D.23738, D.23738
	cmpl	$15, %eax	#, D.23738
	jne	.L61	#,
.LBB11:
	.loc 1 143 0
	call	Perl_sv_newmortal	#
	movq	%rax, -24(%rbp)	# tmp216, gv
	.loc 1 144 0
	movq	-24(%rbp), %rax	# gv, tmp217
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$.LC4, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp217,
	call	Perl_gv_init	#
	.loc 1 145 0
	movq	-24(%rbp), %rax	# gv, tmp218
	movq	(%rax), %rax	# gv_159->sv_any, D.23750
	movq	56(%rax), %rax	# _160->xgv_gp, D.23751
	movq	-80(%rbp), %rdx	# sv, tmp219
	movq	%rdx, 16(%rax)	# tmp219, _161->gp_io
	.loc 1 146 0
	movq	-80(%rbp), %rax	# sv, tmp220
	movq	%rax, PL_Sv(%rip)	# tmp220, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.62
	testq	%rax, %rax	# PL_Sv.62
	je	.L63	#,
	.loc 1 146 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.63
	movl	8(%rax), %edx	# PL_Sv.63_163->sv_refcnt, D.23738
	addl	$1, %edx	#, D.23738
	movl	%edx, 8(%rax)	# D.23738, PL_Sv.63_163->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.63_163->sv_refcnt, D.23738
	testl	%eax, %eax	# D.23738
	je	.L63	#,
	.loc 1 146 0
	nop
.L63:
	.loc 1 147 0 is_stmt 1
	movq	-24(%rbp), %rax	# gv, tmp221
	movq	%rax, -80(%rbp)	# tmp221, sv
.LBE11:
	jmp	.L64	#
.L61:
	.loc 1 149 0
	movq	-80(%rbp), %rax	# sv, tmp222
	movl	12(%rax), %eax	# sv_156->sv_flags, D.23738
	movzbl	%al, %eax	# D.23738, D.23738
	cmpl	$13, %eax	#, D.23738
	je	.L64	#,
	.loc 1 150 0
	movl	$.LC5, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L65	#
.L56:
	.loc 1 153 0
	movq	-80(%rbp), %rax	# sv, tmp223
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	movzbl	%al, %eax	# D.23738, D.23738
	cmpl	$13, %eax	#, D.23738
	je	.L64	#,
.LBB12:
	.loc 1 157 0
	movq	-80(%rbp), %rax	# sv, tmp224
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	andl	$8192, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	je	.L66	#,
	.loc 1 158 0
	movq	-80(%rbp), %rax	# sv, tmp225
	movq	%rax, %rdi	# tmp225,
	call	Perl_mg_get	#
	.loc 1 159 0
	movq	-80(%rbp), %rax	# sv, tmp226
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	andl	$524288, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	je	.L66	#,
	.loc 1 160 0
	jmp	.L57	#
.L66:
	.loc 1 162 0
	movq	-80(%rbp), %rax	# sv, tmp227
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	andl	$118423552, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	jne	.L68	#,
	.loc 1 162 0 is_stmt 0 discriminator 1
	cmpq	$PL_sv_undef, -80(%rbp)	#, sv
	je	.L68	#,
	.loc 1 166 0 is_stmt 1
	movq	-80(%rbp), %rax	# sv, tmp228
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	andl	$8388608, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	je	.L69	#,
	.loc 1 167 0
	movl	$PL_no_modify, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L69:
	.loc 1 168 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.64
	movzbl	37(%rax), %eax	# PL_op.64_30->op_private, D.23739
	movzbl	%al, %eax	# D.23739, D.23740
	andl	$96, %eax	#, D.23740
	testl	%eax, %eax	# D.23740
	je	.L70	#,
.LBB13:
	.loc 1 171 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.65
	movq	24(%rax), %rax	# MEM[(struct UNOP *)PL_op.65_34].op_targ, D.23741
	testq	%rax, %rax	# D.23741
	je	.L71	#,
.LBB14:
	.loc 1 173 0
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.66
	movq	PL_op(%rip), %rax	# PL_op, PL_op.67
	movq	24(%rax), %rax	# MEM[(struct UNOP *)PL_op.67_37].op_targ, D.23741
	salq	$3, %rax	#, D.23741
	addq	%rdx, %rax	# PL_curpad.66, D.23742
	movq	(%rax), %rax	# *_40, tmp229
	movq	%rax, -56(%rbp)	# tmp229, namesv
	.loc 1 174 0
	movq	-56(%rbp), %rax	# namesv, tmp230
	movl	12(%rax), %eax	# namesv_41->sv_flags, D.23738
	andl	$262144, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	je	.L72	#,
	.loc 1 174 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# namesv, tmp231
	movq	(%rax), %rax	# namesv_41->sv_any, D.23743
	movq	8(%rax), %rax	# MEM[(struct XPV *)_44].xpv_cur, len.69
	movq	%rax, -88(%rbp)	# len.69, len
	movq	-56(%rbp), %rax	# namesv, tmp232
	movq	(%rax), %rax	# namesv_41->sv_any, D.23743
	movq	(%rax), %rax	# MEM[(struct XPV *)_46].xpv_pv, iftmp.68
	jmp	.L73	#
.L72:
	.loc 1 174 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp233
	movq	-56(%rbp), %rax	# namesv, tmp234
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp233,
	movq	%rax, %rdi	# tmp234,
	call	Perl_sv_2pv_flags	#
.L73:
	.loc 1 174 0 discriminator 1
	movq	%rax, -48(%rbp)	# iftmp.68, name
	.loc 1 175 0 is_stmt 1 discriminator 1
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -64(%rbp)	# tmp235, gv
	.loc 1 176 0 discriminator 1
	movq	-88(%rbp), %rcx	# len, len.70
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.71
	movq	48(%rax), %rsi	# PL_curcop.71_52->cop_stash, D.23744
	movq	-48(%rbp), %rdx	# name, tmp236
	movq	-64(%rbp), %rax	# gv, tmp237
	movl	$0, %r8d	#,
	movq	%rax, %rdi	# tmp237,
	call	Perl_gv_init	#
.LBE14:
	jmp	.L74	#
.L71:
	.loc 1 179 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.73
	movq	48(%rax), %rax	# PL_curcop.73_54->cop_stash, D.23744
	testq	%rax, %rax	# D.23744
	je	.L75	#,
	.loc 1 179 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.74
	movq	48(%rax), %rax	# PL_curcop.74_56->cop_stash, D.23744
	movq	(%rax), %rax	# _57->sv_any, D.23745
	movq	80(%rax), %rax	# _58->xhv_name, iftmp.72
	jmp	.L76	#
.L75:
	.loc 1 179 0 discriminator 2
	movl	$0, %eax	#, iftmp.72
.L76:
	.loc 1 179 0 discriminator 3
	movq	%rax, -48(%rbp)	# iftmp.72, name
	.loc 1 180 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# name, tmp238
	movq	%rax, %rdi	# tmp238,
	call	Perl_newGVgen	#
	movq	%rax, -64(%rbp)	# tmp239, gv
.L74:
	.loc 1 182 0
	movq	-80(%rbp), %rax	# sv, tmp240
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	movzbl	%al, %eax	# D.23738, D.23738
	cmpl	$2, %eax	#, D.23738
	ja	.L77	#,
	.loc 1 183 0
	movq	-80(%rbp), %rax	# sv, tmp241
	movl	$3, %esi	#,
	movq	%rax, %rdi	# tmp241,
	call	Perl_sv_upgrade	#
.L77:
	.loc 1 184 0
	movq	-80(%rbp), %rax	# sv, tmp242
	movq	(%rax), %rax	# sv_17->sv_any, D.23743
	movq	(%rax), %rax	# MEM[(struct XPV *)_65].xpv_pv, D.23746
	testq	%rax, %rax	# D.23746
	je	.L78	#,
	.loc 1 185 0
	movq	-80(%rbp), %rax	# sv, tmp243
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	andl	$2097152, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	je	.L80	#,
	.loc 1 185 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# sv, tmp244
	movq	%rax, %rdi	# tmp244,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23740
	je	.L80	#,
	.loc 1 185 0
	nop
.L80:
	.loc 1 186 0 is_stmt 1
	movq	-80(%rbp), %rax	# sv, tmp245
	movq	(%rax), %rax	# sv_17->sv_any, D.23743
	movq	16(%rax), %rax	# MEM[(struct XPV *)_72].xpv_len, D.23741
	testq	%rax, %rax	# D.23741
	je	.L81	#,
	.loc 1 187 0
	movq	-80(%rbp), %rax	# sv, tmp246
	movq	(%rax), %rax	# sv_17->sv_any, D.23743
	movq	(%rax), %rax	# MEM[(struct XPV *)_74].xpv_pv, D.23746
	movq	%rax, %rdi	# D.23746,
	call	Perl_safesysfree	#
.L81:
	.loc 1 188 0
	movq	-80(%rbp), %rax	# sv, tmp247
	movq	(%rax), %rdx	# sv_17->sv_any, D.23743
	movq	-80(%rbp), %rax	# sv, tmp248
	movq	(%rax), %rax	# sv_17->sv_any, D.23743
	movq	$0, 8(%rax)	#, MEM[(struct XPV *)_77].xpv_cur
	movq	8(%rax), %rax	# MEM[(struct XPV *)_77].xpv_cur, D.23741
	movq	%rax, 16(%rdx)	# D.23741, MEM[(struct XPV *)_76].xpv_len
.L78:
	.loc 1 190 0
	movq	-80(%rbp), %rax	# sv, tmp249
	movq	(%rax), %rax	# sv_17->sv_any, D.23743
	movq	-64(%rbp), %rdx	# gv, tmp250
	movq	%rdx, (%rax)	# tmp250, MEM[(struct XRV *)_79].xrv_rv
	.loc 1 191 0
	movq	-80(%rbp), %rax	# sv, tmp251
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	orl	$524288, %eax	#, D.23738
	movl	%eax, %edx	# D.23738, D.23738
	movq	-80(%rbp), %rax	# sv, tmp252
	movl	%edx, 12(%rax)	# D.23738, sv_17->sv_flags
	.loc 1 192 0
	movq	-80(%rbp), %rax	# sv, tmp253
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	andl	$16384, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	je	.L82	#,
	.loc 1 192 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# sv, tmp254
	movq	%rax, %rdi	# tmp254,
	call	Perl_mg_set	#
	.loc 1 193 0 is_stmt 1 discriminator 1
	jmp	.L57	#
.L82:
	.loc 1 193 0 is_stmt 0
	nop
	jmp	.L57	#
.L70:
.LBE13:
	.loc 1 195 0 is_stmt 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.76
	movzbl	36(%rax), %eax	# PL_op.76_84->op_flags, D.23739
	movzbl	%al, %eax	# D.23739, D.23740
	andl	$16, %eax	#, D.23740
	testl	%eax, %eax	# D.23740
	jne	.L83	#,
	.loc 1 196 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.77
	movzbl	37(%rax), %eax	# PL_op.77_88->op_private, D.23739
	movzbl	%al, %eax	# D.23739, D.23740
	andl	$2, %eax	#, D.23740
	.loc 1 195 0 discriminator 1
	testl	%eax, %eax	# D.23740
	je	.L84	#,
.L83:
	.loc 1 197 0
	movl	$.LC6, %esi	#,
	movl	$PL_no_usym, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L65	#
.L84:
	.loc 1 198 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.78
	movq	80(%rax), %rax	# PL_curcop.78_92->cop_warnings, D.23747
	testq	%rax, %rax	# D.23747
	je	.L86	#,
	.loc 1 198 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.79
	movq	80(%rax), %rax	# PL_curcop.79_94->cop_warnings, D.23747
	cmpq	$32, %rax	#, D.23747
	je	.L86	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.80
	movq	80(%rax), %rax	# PL_curcop.80_96->cop_warnings, D.23747
	cmpq	$16, %rax	#, D.23747
	je	.L87	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.81
	movq	80(%rax), %rax	# PL_curcop.81_98->cop_warnings, D.23747
	movq	(%rax), %rax	# _99->sv_any, D.23743
	movq	(%rax), %rax	# MEM[(struct XPV *)_100].xpv_pv, D.23746
	addq	$10, %rax	#, D.23746
	movzbl	(%rax), %eax	# *_102, D.23748
	movsbl	%al, %eax	# D.23748, D.23740
	andl	$4, %eax	#, D.23740
	testl	%eax, %eax	# D.23740
	jne	.L87	#,
.L86:
	.loc 1 198 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.82
	movq	80(%rax), %rax	# PL_curcop.82_106->cop_warnings, D.23747
	testq	%rax, %rax	# D.23747
	jne	.L88	#,
	.loc 1 198 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.83
	movzbl	%al, %eax	# PL_dowarn.83, D.23740
	andl	$1, %eax	#, D.23740
	testl	%eax, %eax	# D.23740
	je	.L88	#,
.L87:
	.loc 1 199 0 is_stmt 1
	call	Perl_report_uninit	#
.L88:
	.loc 1 200 0
	movq	$PL_sv_undef, (%rbx)	#, *sp_16
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.84
	movq	(%rax), %rax	# PL_op.84_111->op_next, D.23737
	jmp	.L65	#
.L68:
	.loc 1 202 0
	movq	-80(%rbp), %rax	# sv, tmp255
	movl	12(%rax), %eax	# sv_17->sv_flags, D.23738
	andl	$262144, %eax	#, D.23738
	testl	%eax, %eax	# D.23738
	je	.L89	#,
	.loc 1 202 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# sv, tmp256
	movq	(%rax), %rax	# sv_17->sv_any, D.23743
	movq	8(%rax), %rax	# MEM[(struct XPV *)_116].xpv_cur, len.86
	movq	%rax, -88(%rbp)	# len.86, len
	movq	-80(%rbp), %rax	# sv, tmp257
	movq	(%rax), %rax	# sv_17->sv_any, D.23743
	movq	(%rax), %rax	# MEM[(struct XPV *)_118].xpv_pv, iftmp.85
	jmp	.L90	#
.L89:
	.loc 1 202 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp258
	movq	-80(%rbp), %rax	# sv, tmp259
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp258,
	movq	%rax, %rdi	# tmp259,
	call	Perl_sv_2pv_flags	#
.L90:
	.loc 1 202 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.85, sym
	.loc 1 203 0 is_stmt 1 discriminator 3
	movq	PL_op(%rip), %rax	# PL_op, PL_op.87
	movzbl	36(%rax), %eax	# PL_op.87_122->op_flags, D.23739
	testb	%al, %al	# D.23749
	jns	.L91	#,
	.loc 1 204 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.88
	movzbl	36(%rax), %eax	# PL_op.88_125->op_flags, D.23739
	movzbl	%al, %eax	# D.23739, D.23740
	andl	$32, %eax	#, D.23740
	.loc 1 203 0 discriminator 1
	testl	%eax, %eax	# D.23740
	jne	.L91	#,
	.loc 1 206 0
	movq	-40(%rbp), %rax	# sym, tmp260
	movl	$13, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp260,
	call	Perl_gv_fetchpv	#
	movq	%rax, -80(%rbp)	# tmp261, sv
	.loc 1 207 0
	cmpq	$0, -80(%rbp)	#, sv
	jne	.L92	#,
	.loc 1 208 0
	movq	-88(%rbp), %rcx	# len, len.89
	movq	-40(%rbp), %rax	# sym, tmp262
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# len.89,
	movq	%rax, %rdi	# tmp262,
	call	Perl_is_gv_magical	#
	testb	%al, %al	# D.23748
	je	.L93	#,
	.loc 1 209 0
	movq	-40(%rbp), %rax	# sym, tmp263
	movl	$13, %edx	#,
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp263,
	call	Perl_gv_fetchpv	#
	movq	%rax, -80(%rbp)	# tmp264, sv
	cmpq	$0, -80(%rbp)	#, sv
	jne	.L92	#,
.L93:
	.loc 1 211 0
	movq	$PL_sv_undef, (%rbx)	#, *sp_16
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.90
	movq	(%rax), %rax	# PL_op.90_133->op_next, D.23737
	jmp	.L65	#
.L92:
	.loc 1 207 0 discriminator 1
	nop
	jmp	.L64	#
.L91:
	.loc 1 215 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.91
	movzbl	37(%rax), %eax	# PL_op.91_135->op_private, D.23739
	movzbl	%al, %eax	# D.23739, D.23740
	andl	$2, %eax	#, D.23740
	testl	%eax, %eax	# D.23740
	je	.L95	#,
	.loc 1 216 0
	movq	-40(%rbp), %rax	# sym, tmp265
	movl	$.LC6, %edx	#,
	movq	%rax, %rsi	# tmp265,
	movl	$PL_no_symref, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L65	#
.L95:
	.loc 1 217 0
	movq	-40(%rbp), %rax	# sym, tmp266
	movl	$13, %edx	#,
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp266,
	call	Perl_gv_fetchpv	#
	movq	%rax, -80(%rbp)	# tmp267, sv
.L64:
.LBE12:
	.loc 1 221 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.92
	movzbl	37(%rax), %eax	# PL_op.92_173->op_private, D.23739
	testb	%al, %al	# D.23749
	jns	.L96	#,
	.loc 1 222 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.93
	movzbl	36(%rax), %eax	# PL_op.93_176->op_flags, D.23739
	notl	%eax	# tmp268
	shrb	$7, %al	#, D.23752
	movzbl	%al, %edx	# D.23752, D.23740
	movq	-80(%rbp), %rax	# sv, tmp269
	movl	%edx, %esi	# D.23740,
	movq	%rax, %rdi	# tmp269,
	call	Perl_save_gp	#
.L96:
	.loc 1 223 0
	movq	-80(%rbp), %rax	# sv, tmp270
	movq	%rax, (%rbx)	# tmp270, *sp_3
	.loc 1 224 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.94
	movq	(%rax), %rax	# PL_op.94_181->op_next, D.23737
.L65:
	.loc 1 225 0
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	Perl_pp_rv2gv, .-Perl_pp_rv2gv
	.section	.rodata
.LC7:
	.string	"Not a SCALAR reference"
.LC8:
	.string	"a SCALAR"
	.text
	.globl	Perl_pp_rv2sv
	.type	Perl_pp_rv2sv, @function
Perl_pp_rv2sv:
.LFB8:
	.loc 1 228 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 229 0
	movq	$0, -56(%rbp)	#, gv
	.loc 1 230 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	(%rbx), %rax	# *sp_18, tmp154
	movq	%rax, -48(%rbp)	# tmp154, sv
	.loc 1 232 0
	movq	-48(%rbp), %rax	# sv, tmp155
	movl	12(%rax), %eax	# sv_19->sv_flags, D.23759
	andl	$524288, %eax	#, D.23759
	testl	%eax, %eax	# D.23759
	je	.L98	#,
.L99:
	.loc 1 234 0
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.95
	testq	%rax, %rax	# PL_amagic_generation.95
	je	.L100	#,
.LBB15:
	.loc 1 234 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_18, tmp156
	movq	%rax, -40(%rbp)	# tmp156, arg
.L101:
	.loc 1 234 0 discriminator 2
	movq	-40(%rbp), %rax	# arg, tmp157
	movl	12(%rax), %eax	# arg_13->sv_flags, D.23759
	andl	$268435456, %eax	#, D.23759
	testl	%eax, %eax	# D.23759
	je	.L100	#,
	.loc 1 234 0 discriminator 1
	movq	-40(%rbp), %rax	# arg, tmp158
	movl	$9, %ecx	#,
	movl	$58, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp158,
	call	Perl_amagic_call	#
	movq	%rax, -24(%rbp)	# tmp159, tmpsv
	cmpq	$0, -24(%rbp)	#, tmpsv
	je	.L100	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
.LBB16:
	movq	-24(%rbp), %rax	# tmpsv, tmp160
	movq	%rax, -48(%rbp)	# tmp160, sv
	movq	-24(%rbp), %rax	# tmpsv, tmp161
	movl	12(%rax), %eax	# tmpsv_95->sv_flags, D.23759
	andl	$524288, %eax	#, D.23759
	testl	%eax, %eax	# D.23759
	jne	.L102	#,
	movl	$.LC3, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L102:
	.loc 1 234 0 discriminator 2
	movq	-24(%rbp), %rax	# tmpsv, tmp162
	cmpq	-40(%rbp), %rax	# arg, tmp162
	je	.L100	#,
	.loc 1 234 0 discriminator 1
	movq	-24(%rbp), %rax	# tmpsv, tmp163
	movq	(%rax), %rax	# tmpsv_95->sv_any, D.23763
	movq	(%rax), %rdx	# MEM[(struct XRV *)_100].xrv_rv, D.23762
	movq	-40(%rbp), %rax	# arg, tmp164
	movq	(%rax), %rax	# arg_13->sv_any, D.23763
	movq	(%rax), %rax	# MEM[(struct XRV *)_102].xrv_rv, D.23762
	cmpq	%rax, %rdx	# D.23762, D.23762
	je	.L100	#,
	movq	-24(%rbp), %rax	# tmpsv, tmp165
	movq	%rax, -40(%rbp)	# tmp165, arg
	jmp	.L101	#
.L100:
.LBE16:
.LBE15:
	.loc 1 236 0 is_stmt 1
	movq	-48(%rbp), %rax	# sv, tmp166
	movq	(%rax), %rax	# sv_9->sv_any, D.23763
	movq	(%rax), %rax	# MEM[(struct XRV *)_105].xrv_rv, tmp167
	movq	%rax, -48(%rbp)	# tmp167, sv
	.loc 1 237 0
	movq	-48(%rbp), %rax	# sv, tmp168
	movl	12(%rax), %eax	# sv_106->sv_flags, D.23759
	movzbl	%al, %eax	# D.23759, D.23759
	subl	$10, %eax	#, tmp169
	cmpl	$2, %eax	#, tmp169
	ja	.L106	#,
	.loc 1 241 0
	movl	$.LC7, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L105	#
.L98:
.LBB17:
	.loc 1 247 0
	movq	-48(%rbp), %rax	# sv, tmp170
	movq	%rax, -56(%rbp)	# tmp170, gv
	.loc 1 249 0
	movq	-56(%rbp), %rax	# gv, tmp171
	movl	12(%rax), %eax	# gv_22->sv_flags, D.23759
	movzbl	%al, %eax	# D.23759, D.23759
	cmpl	$13, %eax	#, D.23759
	je	.L107	#,
	.loc 1 250 0
	movq	-48(%rbp), %rax	# sv, tmp172
	movl	12(%rax), %eax	# sv_19->sv_flags, D.23759
	andl	$8192, %eax	#, D.23759
	testl	%eax, %eax	# D.23759
	je	.L108	#,
	.loc 1 251 0
	movq	-48(%rbp), %rax	# sv, tmp173
	movq	%rax, %rdi	# tmp173,
	call	Perl_mg_get	#
	.loc 1 252 0
	movq	-48(%rbp), %rax	# sv, tmp174
	movl	12(%rax), %eax	# sv_19->sv_flags, D.23759
	andl	$524288, %eax	#, D.23759
	testl	%eax, %eax	# D.23759
	jne	.L99	#,
.L108:
	.loc 1 255 0
	movq	-48(%rbp), %rax	# sv, tmp175
	movl	12(%rax), %eax	# sv_19->sv_flags, D.23759
	andl	$118423552, %eax	#, D.23759
	testl	%eax, %eax	# D.23759
	jne	.L109	#,
	.loc 1 256 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.96
	movzbl	36(%rax), %eax	# PL_op.96_31->op_flags, D.23760
	movzbl	%al, %eax	# D.23760, D.23761
	andl	$16, %eax	#, D.23761
	testl	%eax, %eax	# D.23761
	jne	.L110	#,
	.loc 1 257 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.97
	movzbl	37(%rax), %eax	# PL_op.97_35->op_private, D.23760
	movzbl	%al, %eax	# D.23760, D.23761
	andl	$2, %eax	#, D.23761
	.loc 1 256 0 discriminator 1
	testl	%eax, %eax	# D.23761
	je	.L111	#,
.L110:
	.loc 1 258 0
	movl	$.LC8, %esi	#,
	movl	$PL_no_usym, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L105	#
.L111:
	.loc 1 259 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.98
	movq	80(%rax), %rax	# PL_curcop.98_39->cop_warnings, D.23762
	testq	%rax, %rax	# D.23762
	je	.L113	#,
	.loc 1 259 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.99
	movq	80(%rax), %rax	# PL_curcop.99_41->cop_warnings, D.23762
	cmpq	$32, %rax	#, D.23762
	je	.L113	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.100
	movq	80(%rax), %rax	# PL_curcop.100_43->cop_warnings, D.23762
	cmpq	$16, %rax	#, D.23762
	je	.L114	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.101
	movq	80(%rax), %rax	# PL_curcop.101_45->cop_warnings, D.23762
	movq	(%rax), %rax	# _46->sv_any, D.23763
	movq	(%rax), %rax	# MEM[(struct XPV *)_47].xpv_pv, D.23764
	addq	$10, %rax	#, D.23764
	movzbl	(%rax), %eax	# *_49, D.23765
	movsbl	%al, %eax	# D.23765, D.23761
	andl	$4, %eax	#, D.23761
	testl	%eax, %eax	# D.23761
	jne	.L114	#,
.L113:
	.loc 1 259 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.102
	movq	80(%rax), %rax	# PL_curcop.102_53->cop_warnings, D.23762
	testq	%rax, %rax	# D.23762
	jne	.L115	#,
	.loc 1 259 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.103
	movzbl	%al, %eax	# PL_dowarn.103, D.23761
	andl	$1, %eax	#, D.23761
	testl	%eax, %eax	# D.23761
	je	.L115	#,
.L114:
	.loc 1 260 0 is_stmt 1
	call	Perl_report_uninit	#
.L115:
	.loc 1 261 0
	movq	$PL_sv_undef, (%rbx)	#, *sp_18
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.104
	movq	(%rax), %rax	# PL_op.104_58->op_next, D.23758
	jmp	.L105	#
.L109:
	.loc 1 263 0
	movq	-48(%rbp), %rax	# sv, tmp176
	movl	12(%rax), %eax	# sv_19->sv_flags, D.23759
	andl	$262144, %eax	#, D.23759
	testl	%eax, %eax	# D.23759
	je	.L116	#,
	.loc 1 263 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# sv, tmp177
	movq	(%rax), %rax	# sv_19->sv_any, D.23763
	movq	8(%rax), %rax	# MEM[(struct XPV *)_63].xpv_cur, len.106
	movq	%rax, -64(%rbp)	# len.106, len
	movq	-48(%rbp), %rax	# sv, tmp178
	movq	(%rax), %rax	# sv_19->sv_any, D.23763
	movq	(%rax), %rax	# MEM[(struct XPV *)_65].xpv_pv, iftmp.105
	jmp	.L117	#
.L116:
	.loc 1 263 0 discriminator 2
	leaq	-64(%rbp), %rcx	#, tmp179
	movq	-48(%rbp), %rax	# sv, tmp180
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp179,
	movq	%rax, %rdi	# tmp180,
	call	Perl_sv_2pv_flags	#
.L117:
	.loc 1 263 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.105, sym
	.loc 1 264 0 is_stmt 1 discriminator 3
	movq	PL_op(%rip), %rax	# PL_op, PL_op.107
	movzbl	36(%rax), %eax	# PL_op.107_69->op_flags, D.23760
	testb	%al, %al	# D.23766
	jns	.L118	#,
	.loc 1 265 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.108
	movzbl	36(%rax), %eax	# PL_op.108_72->op_flags, D.23760
	movzbl	%al, %eax	# D.23760, D.23761
	andl	$32, %eax	#, D.23761
	.loc 1 264 0 discriminator 1
	testl	%eax, %eax	# D.23761
	jne	.L118	#,
	.loc 1 267 0
	movq	-32(%rbp), %rax	# sym, tmp181
	movl	$4, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp181,
	call	Perl_gv_fetchpv	#
	movq	%rax, -56(%rbp)	# tmp182, gv
	.loc 1 268 0
	cmpq	$0, -56(%rbp)	#, gv
	jne	.L119	#,
	.loc 1 269 0
	movq	-64(%rbp), %rcx	# len, len.109
	movq	-32(%rbp), %rax	# sym, tmp183
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# len.109,
	movq	%rax, %rdi	# tmp183,
	call	Perl_is_gv_magical	#
	testb	%al, %al	# D.23765
	je	.L120	#,
	.loc 1 270 0
	movq	-32(%rbp), %rax	# sym, tmp184
	movl	$4, %edx	#,
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp184,
	call	Perl_gv_fetchpv	#
	movq	%rax, -56(%rbp)	# tmp185, gv
	cmpq	$0, -56(%rbp)	#, gv
	jne	.L119	#,
.L120:
	.loc 1 272 0
	movq	$PL_sv_undef, (%rbx)	#, *sp_18
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.110
	movq	(%rax), %rax	# PL_op.110_80->op_next, D.23758
	jmp	.L105	#
.L119:
	.loc 1 268 0 discriminator 1
	jmp	.L107	#
.L118:
	.loc 1 276 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.111
	movzbl	37(%rax), %eax	# PL_op.111_82->op_private, D.23760
	movzbl	%al, %eax	# D.23760, D.23761
	andl	$2, %eax	#, D.23761
	testl	%eax, %eax	# D.23761
	je	.L121	#,
	.loc 1 277 0
	movq	-32(%rbp), %rax	# sym, tmp186
	movl	$.LC8, %edx	#,
	movq	%rax, %rsi	# tmp186,
	movl	$PL_no_symref, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L105	#
.L121:
	.loc 1 278 0
	movq	-32(%rbp), %rax	# sym, tmp187
	movl	$4, %edx	#,
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp187,
	call	Perl_gv_fetchpv	#
	movq	%rax, -56(%rbp)	# tmp188, gv
.L107:
	.loc 1 281 0
	movq	-56(%rbp), %rax	# gv, tmp189
	movq	(%rax), %rax	# gv_3->sv_any, D.23767
	movq	56(%rax), %rax	# _88->xgv_gp, D.23768
	movq	(%rax), %rax	# _89->gp_sv, tmp190
	movq	%rax, -48(%rbp)	# tmp190, sv
.L106:
.LBE17:
	.loc 1 283 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.112
	movzbl	36(%rax), %eax	# PL_op.112_110->op_flags, D.23760
	movzbl	%al, %eax	# D.23760, D.23761
	andl	$32, %eax	#, D.23761
	testl	%eax, %eax	# D.23761
	je	.L122	#,
	.loc 1 284 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.113
	movzbl	37(%rax), %eax	# PL_op.113_114->op_private, D.23760
	testb	%al, %al	# D.23766
	jns	.L123	#,
	.loc 1 285 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.114
	movq	40(%rax), %rax	# MEM[(struct UNOP *)PL_op.114_117].op_first, D.23758
	movzwl	32(%rax), %eax	# _118->op_type, D.23769
	testw	%ax, %ax	# D.23769
	jne	.L124	#,
	.loc 1 286 0
	movq	(%rbx), %rax	# *sp_7, D.23762
	movq	%rax, %rdi	# D.23762,
	call	Perl_save_scalar	#
	movq	%rax, -48(%rbp)	# tmp191, sv
	jmp	.L122	#
.L124:
	.loc 1 287 0
	cmpq	$0, -56(%rbp)	#, gv
	je	.L126	#,
	.loc 1 288 0
	movq	-56(%rbp), %rax	# gv, tmp192
	movq	%rax, %rdi	# tmp192,
	call	Perl_save_scalar	#
	movq	%rax, -48(%rbp)	# tmp193, sv
	jmp	.L122	#
.L126:
	.loc 1 290 0
	movl	$PL_no_localize_ref, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L122	#
.L123:
	.loc 1 292 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.115
	movzbl	37(%rax), %eax	# PL_op.115_123->op_private, D.23760
	movzbl	%al, %eax	# D.23760, D.23761
	andl	$96, %eax	#, D.23761
	testl	%eax, %eax	# D.23761
	je	.L122	#,
	.loc 1 293 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.116
	movzbl	37(%rax), %eax	# PL_op.116_127->op_private, D.23760
	movzbl	%al, %eax	# D.23760, D.23759
	andl	$96, %eax	#, D.23759
	movl	%eax, %edx	# D.23759, D.23759
	movq	-48(%rbp), %rax	# sv, tmp194
	movl	%edx, %esi	# D.23759,
	movq	%rax, %rdi	# tmp194,
	call	Perl_vivify_ref	#
.L122:
	.loc 1 295 0
	movq	-48(%rbp), %rax	# sv, tmp195
	movq	%rax, (%rbx)	# tmp195, *sp_7
	.loc 1 296 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.117
	movq	(%rax), %rax	# PL_op.117_131->op_next, D.23758
.L105:
	.loc 1 297 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	Perl_pp_rv2sv, .-Perl_pp_rv2sv
	.globl	Perl_pp_av2arylen
	.type	Perl_pp_av2arylen, @function
Perl_pp_av2arylen:
.LFB9:
	.loc 1 300 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 301 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 302 0
	movq	(%rbx), %rax	# *sp_2, tmp65
	movq	%rax, -24(%rbp)	# tmp65, av
	.loc 1 303 0
	movq	-24(%rbp), %rax	# av, tmp66
	movq	(%rax), %rax	# av_3->sv_any, D.23772
	movq	64(%rax), %rax	# _4->xav_arylen, tmp67
	movq	%rax, -32(%rbp)	# tmp67, sv
	.loc 1 304 0
	cmpq	$0, -32(%rbp)	#, sv
	jne	.L128	#,
	.loc 1 305 0
	movq	-24(%rbp), %rax	# av, tmp68
	movq	(%rax), %r12	# av_3->sv_any, D.23772
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -32(%rbp)	# tmp69, sv
	movq	-32(%rbp), %rax	# sv, tmp70
	movq	%rax, 64(%r12)	# tmp70, _6->xav_arylen
	.loc 1 306 0
	movq	-32(%rbp), %rax	# sv, tmp71
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp71,
	call	Perl_sv_upgrade	#
	.loc 1 307 0
	movq	-24(%rbp), %rsi	# av, tmp72
	movq	-32(%rbp), %rax	# sv, tmp73
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$35, %edx	#,
	movq	%rax, %rdi	# tmp73,
	call	Perl_sv_magic	#
.L128:
	.loc 1 309 0
	movq	-32(%rbp), %rax	# sv, tmp74
	movq	%rax, (%rbx)	# tmp74, *sp_2
	.loc 1 310 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.118
	movq	(%rax), %rax	# PL_op.118_8->op_next, D.23773
	.loc 1 311 0
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	Perl_pp_av2arylen, .-Perl_pp_av2arylen
	.globl	Perl_pp_pos
	.type	Perl_pp_pos, @function
Perl_pp_pos:
.LFB10:
	.loc 1 314 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 315 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.119
	movq	PL_op(%rip), %rax	# PL_op, PL_op.120
	movq	24(%rax), %rax	# PL_op.120_4->op_targ, D.23775
	salq	$3, %rax	#, D.23775
	addq	%rdx, %rax	# PL_curpad.119, D.23776
	movq	(%rax), %rax	# *_7, tmp118
	movq	%rax, -40(%rbp)	# tmp118, targ
	movq	%rbx, %rax	# sp, sp.121
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.121_9, tmp119
	movq	%rax, -32(%rbp)	# tmp119, sv
	.loc 1 317 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.122
	movzbl	36(%rax), %eax	# PL_op.122_12->op_flags, D.23777
	movzbl	%al, %eax	# D.23777, D.23778
	andl	$32, %eax	#, D.23778
	testl	%eax, %eax	# D.23778
	jne	.L131	#,
	.loc 1 317 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.123
	movzbl	37(%rax), %eax	# PL_op.123_16->op_private, D.23777
	movzbl	%al, %eax	# D.23777, D.23778
	andl	$8, %eax	#, D.23778
	testl	%eax, %eax	# D.23778
	je	.L132	#,
	call	Perl_is_lvalue_sub	#
	testl	%eax, %eax	# D.23778
	je	.L132	#,
.L131:
	.loc 1 318 0 is_stmt 1
	movq	-40(%rbp), %rax	# targ, tmp120
	movl	12(%rax), %eax	# targ_8->sv_flags, D.23779
	movzbl	%al, %eax	# D.23779, D.23779
	cmpl	$8, %eax	#, D.23779
	ja	.L133	#,
	.loc 1 319 0
	movq	-40(%rbp), %rax	# targ, tmp121
	movl	$9, %esi	#,
	movq	%rax, %rdi	# tmp121,
	call	Perl_sv_upgrade	#
	.loc 1 320 0
	movq	-40(%rbp), %rax	# targ, tmp122
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$46, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp122,
	call	Perl_sv_magic	#
.L133:
	.loc 1 323 0
	movq	-40(%rbp), %rax	# targ, tmp123
	movq	(%rax), %rax	# targ_8->sv_any, D.23780
	movb	$46, 80(%rax)	#, MEM[(struct XPVLV *)_50].xlv_type
	.loc 1 324 0
	movq	-40(%rbp), %rax	# targ, tmp124
	movq	(%rax), %rax	# targ_8->sv_any, D.23780
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_51].xlv_targ, D.23783
	cmpq	-32(%rbp), %rax	# sv, D.23783
	je	.L134	#,
	.loc 1 325 0
	movq	-40(%rbp), %rax	# targ, tmp125
	movq	(%rax), %rax	# targ_8->sv_any, D.23780
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_53].xlv_targ, D.23783
	testq	%rax, %rax	# D.23783
	je	.L135	#,
	.loc 1 326 0
	movq	-40(%rbp), %rax	# targ, tmp126
	movq	(%rax), %rax	# targ_8->sv_any, D.23780
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_55].xlv_targ, D.23783
	movq	%rax, %rdi	# D.23783,
	call	Perl_sv_free	#
.L135:
	.loc 1 327 0
	movq	-32(%rbp), %rax	# sv, tmp127
	movq	%rax, PL_Sv(%rip)	# tmp127, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.125
	testq	%rax, %rax	# PL_Sv.125
	je	.L137	#,
	.loc 1 327 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.126
	movl	8(%rax), %edx	# PL_Sv.126_58->sv_refcnt, D.23779
	addl	$1, %edx	#, D.23779
	movl	%edx, 8(%rax)	# D.23779, PL_Sv.126_58->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.126_58->sv_refcnt, D.23779
	testl	%eax, %eax	# D.23779
	je	.L137	#,
	.loc 1 327 0
	nop
.L137:
	.loc 1 327 0 discriminator 4
	movq	-40(%rbp), %rax	# targ, tmp128
	movq	(%rax), %rax	# targ_8->sv_any, D.23780
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.127
	movq	%rdx, 72(%rax)	# PL_Sv.127, MEM[(struct XPVLV *)_64].xlv_targ
.L134:
	.loc 1 329 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp129
	movq	%rax, (%rbx)	# tmp129, *sp_66
	.loc 1 330 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.128
	movq	(%rax), %rax	# PL_op.128_67->op_next, D.23774
	jmp	.L138	#
.L132:
.LBB18:
	.loc 1 335 0
	movq	-32(%rbp), %rax	# sv, tmp130
	movl	12(%rax), %eax	# sv_11->sv_flags, D.23779
	movzbl	%al, %eax	# D.23779, D.23779
	cmpl	$6, %eax	#, D.23779
	jbe	.L139	#,
	.loc 1 335 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp131
	movq	(%rax), %rax	# sv_11->sv_any, D.23780
	movq	40(%rax), %rax	# MEM[(struct XPVMG *)_23].xmg_magic, D.23781
	testq	%rax, %rax	# D.23781
	je	.L139	#,
	.loc 1 336 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp132
	movl	$103, %esi	#,
	movq	%rax, %rdi	# tmp132,
	call	Perl_mg_find	#
	movq	%rax, -24(%rbp)	# tmp133, mg
	.loc 1 337 0
	cmpq	$0, -24(%rbp)	#, mg
	je	.L139	#,
	.loc 1 337 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# mg, tmp134
	movl	40(%rax), %eax	# mg_25->mg_len, D.23778
	testl	%eax, %eax	# D.23778
	js	.L139	#,
.LBB19:
	.loc 1 338 0 is_stmt 1
	movq	-24(%rbp), %rax	# mg, tmp135
	movl	40(%rax), %eax	# mg_25->mg_len, i.129
	movl	%eax, -44(%rbp)	# i.129, i
	.loc 1 339 0
	movq	-32(%rbp), %rax	# sv, tmp136
	movl	12(%rax), %eax	# sv_11->sv_flags, D.23779
	andl	$536870912, %eax	#, D.23779
	testl	%eax, %eax	# D.23779
	je	.L140	#,
	.loc 1 339 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.130
	movzbl	37(%rax), %eax	# PL_curcop.130_30->op_private, D.23777
	movzbl	%al, %eax	# D.23777, D.23778
	andl	$8, %eax	#, D.23778
	testl	%eax, %eax	# D.23778
	jne	.L140	#,
	.loc 1 340 0 is_stmt 1
	leaq	-44(%rbp), %rdx	#, tmp137
	movq	-32(%rbp), %rax	# sv, tmp138
	movq	%rdx, %rsi	# tmp137,
	movq	%rax, %rdi	# tmp138,
	call	Perl_sv_pos_b2u	#
.L140:
.LBB20:
	.loc 1 341 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.131
	movl	68(%rax), %edx	# PL_curcop.131_34->cop_arybase, D.23778
	movl	-44(%rbp), %eax	# i, i.132
	addl	%edx, %eax	# D.23778, D.23778
	movslq	%eax, %rdx	# D.23778, D.23782
	movq	-40(%rbp), %rax	# targ, tmp139
	movq	%rdx, %rsi	# D.23782,
	movq	%rax, %rdi	# tmp139,
	call	Perl_sv_setiv	#
.LBB21:
	movq	-40(%rbp), %rax	# targ, tmp140
	movl	12(%rax), %eax	# targ_8->sv_flags, D.23779
	andl	$16384, %eax	#, D.23779
	testl	%eax, %eax	# D.23779
	je	.L141	#,
	.loc 1 341 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp141
	movq	%rax, %rdi	# tmp141,
	call	Perl_mg_set	#
.L141:
	.loc 1 341 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp142
	movq	%rax, (%rbx)	# tmp142, *sp_41
.LBE21:
.LBE20:
	.loc 1 342 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.133
	movq	(%rax), %rax	# PL_op.133_43->op_next, D.23774
	jmp	.L138	#
.L139:
.LBE19:
	.loc 1 345 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_undef, (%rbx)	#, *sp_45
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.134
	movq	(%rax), %rax	# PL_op.134_46->op_next, D.23774
.L138:
.LBE18:
	.loc 1 347 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	Perl_pp_pos, .-Perl_pp_pos
	.section	.rodata
	.align 8
.LC9:
	.string	"Can't modify non-lvalue subroutine call"
	.text
	.globl	Perl_pp_rv2cv
	.type	Perl_pp_rv2cv, @function
Perl_pp_rv2cv:
.LFB11:
	.loc 1 350 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 351 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 357 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.135
	movzbl	36(%rax), %eax	# PL_op.135_6->op_flags, D.23785
	notl	%eax	# tmp100
	shrb	$7, %al	#, D.23787
	movzbl	%al, %ecx	# D.23787, D.23788
	movq	(%rbx), %rax	# *sp_5, D.23789
	leaq	-40(%rbp), %rdx	#, tmp101
	leaq	-32(%rbp), %rsi	#, tmp102
	movq	%rax, %rdi	# D.23789,
	call	Perl_sv_2cv	#
	movq	%rax, -24(%rbp)	# tmp103, cv
	.loc 1 358 0
	cmpq	$0, -24(%rbp)	#, cv
	je	.L143	#,
	.loc 1 359 0
	movq	-24(%rbp), %rax	# cv, tmp104
	movq	(%rax), %rax	# cv_12->sv_any, D.23790
	movzwl	136(%rax), %eax	# _13->xcv_flags, D.23791
	movzwl	%ax, %eax	# D.23791, D.23788
	andl	$1, %eax	#, D.23788
	testl	%eax, %eax	# D.23788
	je	.L144	#,
	.loc 1 360 0
	movq	-24(%rbp), %rax	# cv, tmp105
	movq	%rax, %rdi	# tmp105,
	call	Perl_cv_clone	#
	movq	%rax, %rdi	# D.23792,
	call	Perl_sv_2mortal	#
	movq	%rax, -24(%rbp)	# tmp106, cv
.L144:
	.loc 1 361 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.136
	movzbl	37(%rax), %eax	# PL_op.136_19->op_private, D.23785
	testb	%al, %al	# D.23786
	jns	.L145	#,
	.loc 1 362 0
	movq	-40(%rbp), %rax	# gv, gv.137
	testq	%rax, %rax	# gv.137
	je	.L146	#,
	.loc 1 362 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# gv, gv.138
	movq	(%rax), %rax	# gv.138_23->sv_any, D.23793
	movq	56(%rax), %rax	# _24->xgv_gp, D.23794
	movq	56(%rax), %rax	# _25->gp_cv, D.23792
	cmpq	-24(%rbp), %rax	# cv, D.23792
	jne	.L146	#,
	movq	-40(%rbp), %rax	# gv, gv.139
	movq	(%rax), %rax	# gv.139_27->sv_any, D.23793
	movq	72(%rax), %rdx	# _28->xgv_namelen, D.23795
	movq	-40(%rbp), %rax	# gv, gv.140
	movq	(%rax), %rax	# gv.140_30->sv_any, D.23793
	movq	64(%rax), %rsi	# _31->xgv_name, D.23796
	movq	-40(%rbp), %rax	# gv, gv.141
	movq	(%rax), %rax	# gv.141_33->sv_any, D.23793
	movq	80(%rax), %rax	# _34->xgv_stash, D.23797
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# D.23797,
	call	Perl_gv_autoload4	#
	movq	%rax, -40(%rbp)	# gv.142, gv
	movq	-40(%rbp), %rax	# gv, gv.143
	testq	%rax, %rax	# gv.143
	je	.L146	#,
	.loc 1 363 0 is_stmt 1
	movq	-40(%rbp), %rax	# gv, gv.144
	movq	(%rax), %rax	# gv.144_38->sv_any, D.23793
	movq	56(%rax), %rax	# _39->xgv_gp, D.23794
	movq	56(%rax), %rax	# _40->gp_cv, tmp107
	movq	%rax, -24(%rbp)	# tmp107, cv
.L146:
	.loc 1 364 0
	movq	-24(%rbp), %rax	# cv, tmp108
	movq	(%rax), %rax	# cv_2->sv_any, D.23790
	movzwl	136(%rax), %eax	# _42->xcv_flags, D.23791
	movzwl	%ax, %eax	# D.23791, D.23788
	andl	$256, %eax	#, D.23788
	testl	%eax, %eax	# D.23788
	jne	.L145	#,
	.loc 1 365 0
	movl	$.LC9, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L148	#
.L143:
	.loc 1 369 0
	movq	$PL_sv_undef, -24(%rbp)	#, cv
.L145:
	.loc 1 370 0
	movq	-24(%rbp), %rax	# cv, tmp109
	movq	%rax, (%rbx)	# tmp109, *sp_5
	.loc 1 371 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.145
	movq	(%rax), %rax	# PL_op.145_48->op_next, D.23784
.L148:
	.loc 1 372 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	Perl_pp_rv2cv, .-Perl_pp_rv2cv
	.section	.rodata
.LC10:
	.string	"CORE::"
	.align 8
.LC12:
	.string	"Can't find an opnumber for \"%s\""
.LC11:
	.string	"?$@@%&*$"
	.text
	.globl	Perl_pp_prototype
	.type	Perl_pp_prototype, @function
Perl_pp_prototype:
.LFB12:
	.loc 1 375 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 375 0
	movq	%fs:40, %rax	#, tmp149
	movq	%rax, -24(%rbp)	# tmp149, D.23810
	xorl	%eax, %eax	# tmp149
	.loc 1 376 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 382 0
	movq	$PL_sv_undef, -72(%rbp)	#, ret
	.loc 1 383 0
	movq	(%rbx), %rax	# *sp_11, D.23800
	movl	12(%rax), %eax	# _13->sv_flags, D.23801
	andl	$262144, %eax	#, D.23801
	testl	%eax, %eax	# D.23801
	je	.L150	#,
	.loc 1 383 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_11, D.23800
	movq	(%rax), %rax	# _16->sv_any, D.23802
	movq	8(%rax), %rax	# MEM[(struct XPV *)_17].xpv_cur, D.23803
	cmpq	$6, %rax	#, D.23803
	jbe	.L150	#,
.LBB22:
	.loc 1 384 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_11, D.23800
	movq	(%rax), %rax	# _19->sv_any, D.23802
	movq	(%rax), %rax	# MEM[(struct XPV *)_20].xpv_pv, tmp110
	movq	%rax, -64(%rbp)	# tmp110, s
	.loc 1 385 0
	movq	-64(%rbp), %rax	# s, tmp111
	movl	$6, %edx	#,
	movl	$.LC10, %esi	#,
	movq	%rax, %rdi	# tmp111,
	call	strncmp	#
	testl	%eax, %eax	# D.23804
	jne	.L150	#,
.LBB23:
	.loc 1 388 0
	movq	(%rbx), %rax	# *sp_11, D.23800
	movq	(%rax), %rax	# _23->sv_any, D.23802
	movq	8(%rax), %rax	# MEM[(struct XPV *)_24].xpv_cur, D.23803
	subl	$6, %eax	#, D.23805
	movq	-64(%rbp), %rdx	# s, tmp112
	addq	$6, %rdx	#, D.23806
	movl	%eax, %esi	# D.23804,
	movq	%rdx, %rdi	# D.23806,
	call	Perl_keyword	#
	movl	%eax, -92(%rbp)	# tmp113, code
	.loc 1 389 0
	cmpl	$0, -92(%rbp)	#, code
	jns	.L151	#,
.LBB24:
	.loc 1 391 0
	movl	$0, -108(%rbp)	#, i
	movl	$0, -104(%rbp)	#, n
	movl	$0, -100(%rbp)	#, seen_question
	.loc 1 395 0
	cmpl	$-25, -92(%rbp)	#, code
	je	.L162	#,
	.loc 1 395 0 is_stmt 0 discriminator 1
	cmpl	$-24, -92(%rbp)	#, code
	je	.L162	#,
	.loc 1 397 0 is_stmt 1
	jmp	.L153	#
.L155:
	.loc 1 398 0
	movl	-108(%rbp), %eax	# i, tmp115
	cltq
	movq	PL_op_name(,%rax,8), %rax	# PL_op_name, D.23806
	movq	-64(%rbp), %rdx	# s, tmp116
	addq	$6, %rdx	#, D.23807
	movq	%rax, %rsi	# D.23806,
	movq	%rdx, %rdi	# D.23807,
	call	strcmp	#
	testl	%eax, %eax	# D.23804
	je	.L154	#,
	.loc 1 399 0
	movl	-108(%rbp), %eax	# i, tmp118
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.23806
	movq	-64(%rbp), %rdx	# s, tmp119
	addq	$6, %rdx	#, D.23807
	movq	%rax, %rsi	# D.23806,
	movq	%rdx, %rdi	# D.23807,
	call	strcmp	#
	testl	%eax, %eax	# D.23804
	je	.L154	#,
	.loc 1 403 0
	addl	$1, -108(%rbp)	#, i
.L153:
	.loc 1 397 0 discriminator 1
	cmpl	$351, -108(%rbp)	#, i
	jle	.L155	#,
	jmp	.L156	#
.L154:
	.loc 1 407 0
	movl	-108(%rbp), %eax	# i, tmp121
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.23801
	shrl	$13, %eax	#, D.23801
	movl	%eax, -96(%rbp)	# D.23801, oa
	.loc 1 408 0
	jmp	.L157	#
.L161:
	.loc 1 409 0
	movl	-96(%rbp), %eax	# oa, tmp122
	andl	$8, %eax	#, D.23804
	testl	%eax, %eax	# D.23804
	je	.L158	#,
	.loc 1 409 0 is_stmt 0 discriminator 1
	cmpl	$0, -100(%rbp)	#, seen_question
	jne	.L158	#,
	.loc 1 410 0 is_stmt 1
	movl	$1, -100(%rbp)	#, seen_question
	.loc 1 411 0
	movl	-104(%rbp), %eax	# n, n.146
	leal	1(%rax), %edx	#, tmp123
	movl	%edx, -104(%rbp)	# tmp123, n
	cltq
	movb	$59, -48(%rbp,%rax)	#, str
	jmp	.L159	#
.L158:
	.loc 1 413 0
	cmpl	$0, -104(%rbp)	#, n
	je	.L159	#,
	.loc 1 413 0 is_stmt 0 discriminator 1
	movzbl	-48(%rbp), %eax	# str, D.23808
	cmpb	$59, %al	#, D.23808
	jne	.L159	#,
	cmpl	$0, -100(%rbp)	#, seen_question
	je	.L159	#,
	.loc 1 414 0 is_stmt 1
	nop
	jmp	.L162	#
.L159:
	.loc 1 415 0
	movl	-96(%rbp), %eax	# oa, tmp125
	andl	$7, %eax	#, D.23804
	cmpl	$2, %eax	#, D.23804
	jle	.L160	#,
	.loc 1 416 0
	movl	-96(%rbp), %eax	# oa, tmp126
	andl	$7, %eax	#, D.23804
	cmpl	$7, %eax	#, D.23804
	jg	.L160	#,
	.loc 1 418 0
	movl	-96(%rbp), %eax	# oa, tmp127
	andl	$7, %eax	#, D.23804
	cmpl	$6, %eax	#, D.23804
	je	.L160	#,
	.loc 1 420 0
	movl	-104(%rbp), %eax	# n, n.147
	leal	1(%rax), %edx	#, tmp128
	movl	%edx, -104(%rbp)	# tmp128, n
	cltq
	movb	$92, -48(%rbp,%rax)	#, str
.L160:
	.loc 1 422 0
	movl	-104(%rbp), %eax	# n, n.148
	leal	1(%rax), %edx	#, tmp130
	movl	%edx, -104(%rbp)	# tmp130, n
	movl	-96(%rbp), %edx	# oa, tmp131
	andl	$7, %edx	#, D.23804
	movslq	%edx, %rdx	# D.23804, tmp132
	movzbl	.LC11(%rdx), %edx	#, D.23808
	cltq
	movb	%dl, -48(%rbp,%rax)	# D.23808, str
	.loc 1 423 0
	sarl	$4, -96(%rbp)	#, oa
.L157:
	.loc 1 408 0 discriminator 1
	cmpl	$0, -96(%rbp)	#, oa
	jne	.L161	#,
	.loc 1 425 0
	movl	-104(%rbp), %eax	# n, n.149
	leal	1(%rax), %edx	#, tmp134
	movl	%edx, -104(%rbp)	# tmp134, n
	cltq
	movb	$0, -48(%rbp,%rax)	#, str
	.loc 1 426 0
	movl	-104(%rbp), %eax	# n, tmp136
	subl	$1, %eax	#, D.23804
	movslq	%eax, %rdx	# D.23804, D.23803
	leaq	-48(%rbp), %rax	#, tmp137
	movq	%rdx, %rsi	# D.23803,
	movq	%rax, %rdi	# tmp137,
	call	Perl_newSVpvn	#
	movq	%rax, %rdi	# D.23800,
	call	Perl_sv_2mortal	#
	movq	%rax, -72(%rbp)	# tmp138, ret
.LBE24:
	jmp	.L150	#
.L151:
	.loc 1 428 0
	cmpl	$0, -92(%rbp)	#, code
	je	.L156	#,
	.loc 1 429 0
	jmp	.L162	#
.L156:
	.loc 1 432 0
	movq	-64(%rbp), %rax	# s, tmp139
	addq	$6, %rax	#, D.23806
	movq	%rax, %rsi	# D.23806,
	movl	$.LC12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L164	#
.L150:
.LBE23:
.LBE22:
	.loc 1 436 0
	movq	(%rbx), %rax	# *sp_11, D.23800
	leaq	-80(%rbp), %rdx	#, tmp140
	leaq	-88(%rbp), %rsi	#, tmp141
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# D.23800,
	call	Perl_sv_2cv	#
	movq	%rax, -56(%rbp)	# tmp142, cv
	.loc 1 437 0
	cmpq	$0, -56(%rbp)	#, cv
	je	.L162	#,
	.loc 1 437 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# cv, tmp143
	movl	12(%rax), %eax	# cv_68->sv_flags, D.23801
	andl	$262144, %eax	#, D.23801
	testl	%eax, %eax	# D.23801
	je	.L162	#,
	.loc 1 438 0 is_stmt 1
	movq	-56(%rbp), %rax	# cv, tmp144
	movq	(%rax), %rax	# cv_68->sv_any, D.23809
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_71].xpv_cur, D.23803
	movq	-56(%rbp), %rax	# cv, tmp145
	movq	(%rax), %rax	# cv_68->sv_any, D.23809
	movq	(%rax), %rax	# MEM[(struct XPV *)_73].xpv_pv, D.23806
	movq	%rdx, %rsi	# D.23803,
	movq	%rax, %rdi	# D.23806,
	call	Perl_newSVpvn	#
	movq	%rax, %rdi	# D.23800,
	call	Perl_sv_2mortal	#
	movq	%rax, -72(%rbp)	# tmp146, ret
.L162:
	.loc 1 440 0
	movq	-72(%rbp), %rax	# ret, tmp147
	movq	%rax, (%rbx)	# tmp147, *sp_11
	.loc 1 441 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.150
	movq	(%rax), %rax	# PL_op.150_77->op_next, D.23799
.L164:
	.loc 1 442 0
	movq	-24(%rbp), %rcx	# D.23810, tmp150
	xorq	%fs:40, %rcx	#, tmp150
	je	.L165	#,
	call	__stack_chk_fail	#
.L165:
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	Perl_pp_prototype, .-Perl_pp_prototype
	.globl	Perl_pp_anoncode
	.type	Perl_pp_anoncode, @function
Perl_pp_anoncode:
.LFB13:
	.loc 1 445 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 446 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 447 0
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.151
	movq	PL_op(%rip), %rax	# PL_op, PL_op.152
	movq	24(%rax), %rax	# PL_op.152_5->op_targ, D.23816
	salq	$3, %rax	#, D.23816
	addq	%rdx, %rax	# PL_curpad.151, D.23817
	movq	(%rax), %rax	# *_8, tmp77
	movq	%rax, -24(%rbp)	# tmp77, cv
	.loc 1 448 0
	movq	-24(%rbp), %rax	# cv, tmp78
	movq	(%rax), %rax	# cv_9->sv_any, D.23818
	movzwl	136(%rax), %eax	# _10->xcv_flags, D.23819
	movzwl	%ax, %eax	# D.23819, D.23820
	andl	$1, %eax	#, D.23820
	testl	%eax, %eax	# D.23820
	je	.L167	#,
	.loc 1 449 0
	movq	-24(%rbp), %rax	# cv, tmp79
	movq	%rax, %rdi	# tmp79,
	call	Perl_cv_clone	#
	movq	%rax, %rdi	# D.23821,
	call	Perl_sv_2mortal	#
	movq	%rax, -24(%rbp)	# tmp80, cv
.L167:
	.loc 1 450 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.153
	movq	%rax, %rdx	# PL_stack_max.153, PL_stack_max.154
	movq	%rbx, %rax	# sp, sp.155
	subq	%rax, %rdx	# sp.155, D.23822
	movq	%rdx, %rax	# D.23822, D.23822
	cmpq	$7, %rax	#, D.23822
	jg	.L168	#,
	.loc 1 450 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L168:
	.loc 1 451 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	-24(%rbp), %rax	# cv, tmp81
	movq	%rax, (%rbx)	# tmp81, *sp_21
	.loc 1 452 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.156
	movq	(%rax), %rax	# PL_op.156_22->op_next, D.23823
	.loc 1 453 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE13:
	.size	Perl_pp_anoncode, .-Perl_pp_anoncode
	.globl	Perl_pp_srefgen
	.type	Perl_pp_srefgen, @function
Perl_pp_srefgen:
.LFB14:
	.loc 1 456 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 457 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 458 0
	movq	(%rbx), %rax	# *sp_1, D.23824
	movq	%rax, %rdi	# D.23824,
	call	S_refto	#
	movq	%rax, (%rbx)	# D.23824, *sp_1
	.loc 1 459 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.157
	movq	(%rax), %rax	# PL_op.157_4->op_next, D.23825
	.loc 1 460 0
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE14:
	.size	Perl_pp_srefgen, .-Perl_pp_srefgen
	.globl	Perl_pp_refgen
	.type	Perl_pp_refgen, @function
Perl_pp_refgen:
.LFB15:
	.loc 1 463 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 464 0
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.158
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.159
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.161
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.161, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.160_7, D.23827
	cltq
	salq	$3, %rax	#, D.23828
	leaq	(%rcx,%rax), %rbx	#, mark
	.loc 1 465 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.163
	movzbl	36(%rax), %eax	# PL_op.163_13->op_flags, D.23829
	movzbl	%al, %eax	# D.23829, D.23827
	andl	$3, %eax	#, D.23827
	testl	%eax, %eax	# D.23827
	je	.L173	#,
	.loc 1 465 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.164
	movzbl	36(%rax), %eax	# PL_op.164_17->op_flags, D.23829
	movzbl	%al, %eax	# D.23829, D.23827
	andl	$3, %eax	#, D.23827
	cmpl	$3, %eax	#, D.23827
	setne	%al	#, iftmp.162
	jmp	.L174	#
.L173:
	.loc 1 465 0 discriminator 2
	call	Perl_dowantarray	#
	cmpl	$1, %eax	#, D.23827
	setne	%al	#, iftmp.162
.L174:
	.loc 1 465 0 discriminator 3
	testb	%al, %al	# iftmp.162
	je	.L175	#,
	.loc 1 466 0 is_stmt 1
	addq	$8, %rbx	#, mark
	cmpq	%r12, %rbx	# sp, mark
	ja	.L176	#,
	.loc 1 467 0
	movq	(%r12), %rax	# *sp_4, D.23830
	movq	%rax, (%rbx)	# D.23830, *mark_24
	jmp	.L177	#
.L176:
	.loc 1 469 0
	movq	$PL_sv_undef, (%rbx)	#, *mark_24
.L177:
	.loc 1 470 0
	movq	(%rbx), %rax	# *mark_24, D.23830
	movq	%rax, %rdi	# D.23830,
	call	S_refto	#
	movq	%rax, (%rbx)	# D.23830, *mark_24
	.loc 1 471 0
	movq	%rbx, %r12	# mark, sp
	.loc 1 472 0
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.165
	movq	(%rax), %rax	# PL_op.165_29->op_next, D.23826
	jmp	.L178	#
.L175:
	.loc 1 474 0
	movl	PL_tmps_ix(%rip), %eax	# PL_tmps_ix, PL_tmps_ix.166
	movslq	%eax, %rdx	# PL_tmps_ix.166, D.23831
	movq	%r12, %rcx	# sp, sp.167
	movq	%rbx, %rax	# mark, mark.168
	subq	%rax, %rcx	# mark.168, D.23831
	movq	%rcx, %rax	# D.23831, D.23831
	sarq	$3, %rax	#, tmp101
	addq	%rax, %rdx	# D.23831, D.23831
	movl	PL_tmps_max(%rip), %eax	# PL_tmps_max, PL_tmps_max.169
	cltq
	cmpq	%rax, %rdx	# D.23831, D.23831
	jl	.L179	#,
	.loc 1 474 0 is_stmt 0 discriminator 1
	movq	%r12, %rdx	# sp, sp.170
	movq	%rbx, %rax	# mark, mark.171
	subq	%rax, %rdx	# mark.171, D.23831
	movq	%rdx, %rax	# D.23831, D.23831
	sarq	$3, %rax	#, tmp102
	movl	%eax, %edi	# D.23827,
	call	Perl_tmps_grow	#
	.loc 1 475 0 is_stmt 1 discriminator 1
	jmp	.L180	#
.L179:
	.loc 1 475 0 is_stmt 0
	jmp	.L180	#
.L181:
	.loc 1 476 0 is_stmt 1
	movq	(%rbx), %rax	# *mark_45, D.23830
	movq	%rax, %rdi	# D.23830,
	call	S_refto	#
	movq	%rax, (%rbx)	# D.23830, *mark_45
.L180:
	.loc 1 475 0 discriminator 1
	addq	$8, %rbx	#, mark
	cmpq	%r12, %rbx	# sp, mark
	jbe	.L181	#,
	.loc 1 477 0
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.172
	movq	(%rax), %rax	# PL_op.172_48->op_next, D.23826
.L178:
	.loc 1 478 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE15:
	.size	Perl_pp_refgen, .-Perl_pp_refgen
	.type	S_refto, @function
S_refto:
.LFB16:
	.loc 1 482 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# sv, sv
	.loc 1 485 0
	movq	-24(%rbp), %rax	# sv, tmp108
	movl	12(%rax), %eax	# sv_3(D)->sv_flags, D.23832
	movzbl	%al, %eax	# D.23832, D.23832
	cmpl	$9, %eax	#, D.23832
	jne	.L183	#,
	.loc 1 485 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp109
	movq	(%rax), %rax	# sv_3(D)->sv_any, D.23833
	movzbl	80(%rax), %eax	# MEM[(struct XPVLV *)_6].xlv_type, D.23834
	cmpb	$121, %al	#, D.23834
	jne	.L183	#,
	.loc 1 486 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp110
	movq	(%rax), %rax	# sv_3(D)->sv_any, D.23833
	movq	64(%rax), %rax	# MEM[(struct XPVLV *)_8].xlv_targlen, D.23835
	testq	%rax, %rax	# D.23835
	je	.L184	#,
	.loc 1 487 0
	movq	-24(%rbp), %rax	# sv, tmp111
	movq	%rax, %rdi	# tmp111,
	call	Perl_vivify_defelem	#
.L184:
	.loc 1 488 0
	movq	-24(%rbp), %rax	# sv, tmp112
	movq	(%rax), %rax	# sv_3(D)->sv_any, D.23833
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_10].xlv_targ, tmp113
	movq	%rax, -24(%rbp)	# tmp113, sv
	cmpq	$0, -24(%rbp)	#, sv
	jne	.L185	#,
	.loc 1 489 0
	movq	$PL_sv_undef, -24(%rbp)	#, sv
	jmp	.L186	#
.L185:
	.loc 1 491 0
	movq	-24(%rbp), %rax	# sv, tmp114
	movq	%rax, PL_Sv(%rip)	# tmp114, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.174
	testq	%rax, %rax	# PL_Sv.174
	je	.L187	#,
	.loc 1 491 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.175
	movl	8(%rax), %edx	# PL_Sv.175_14->sv_refcnt, D.23832
	addl	$1, %edx	#, D.23832
	movl	%edx, 8(%rax)	# D.23832, PL_Sv.175_14->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.175_14->sv_refcnt, D.23832
	testl	%eax, %eax	# D.23832
	je	.L187	#,
	.loc 1 491 0 discriminator 3
	jmp	.L186	#
.L187:
	.loc 1 488 0 is_stmt 1 discriminator 2
	jmp	.L188	#
.L186:
	.loc 1 488 0 is_stmt 0
	jmp	.L188	#
.L183:
	.loc 1 493 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp115
	movl	12(%rax), %eax	# sv_3(D)->sv_flags, D.23832
	movzbl	%al, %eax	# D.23832, D.23832
	cmpl	$10, %eax	#, D.23832
	jne	.L189	#,
	.loc 1 494 0
	movq	-24(%rbp), %rax	# sv, tmp116
	movq	(%rax), %rax	# MEM[(struct AV *)sv_3(D)].sv_any, D.23836
	movzbl	72(%rax), %eax	# _22->xav_flags, D.23837
	movzbl	%al, %eax	# D.23837, D.23838
	andl	$1, %eax	#, D.23838
	testl	%eax, %eax	# D.23838
	jne	.L190	#,
	.loc 1 494 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp117
	movq	(%rax), %rax	# MEM[(struct AV *)sv_3(D)].sv_any, D.23836
	movzbl	72(%rax), %eax	# _26->xav_flags, D.23837
	movzbl	%al, %eax	# D.23837, D.23838
	andl	$2, %eax	#, D.23838
	testl	%eax, %eax	# D.23838
	je	.L190	#,
	.loc 1 495 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp118
	movq	%rax, %rdi	# tmp118,
	call	Perl_av_reify	#
.L190:
	.loc 1 496 0
	movq	-24(%rbp), %rax	# sv, tmp119
	movl	12(%rax), %eax	# sv_3(D)->sv_flags, D.23832
	andb	$247, %ah	#, D.23832
	movl	%eax, %edx	# D.23832, D.23832
	movq	-24(%rbp), %rax	# sv, tmp120
	movl	%edx, 12(%rax)	# D.23832, sv_3(D)->sv_flags
	.loc 1 497 0
	movq	-24(%rbp), %rax	# sv, tmp121
	movq	%rax, PL_Sv(%rip)	# tmp121, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.177
	testq	%rax, %rax	# PL_Sv.177
	je	.L188	#,
	.loc 1 497 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.178
	movl	8(%rax), %edx	# PL_Sv.178_33->sv_refcnt, D.23832
	addl	$1, %edx	#, D.23832
	movl	%edx, 8(%rax)	# D.23832, PL_Sv.178_33->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.178_33->sv_refcnt, D.23832
	testl	%eax, %eax	# D.23832
	je	.L188	#,
	.loc 1 497 0 discriminator 3
	jmp	.L188	#
.L189:
	.loc 1 499 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp122
	movl	12(%rax), %eax	# sv_3(D)->sv_flags, D.23832
	andl	$512, %eax	#, D.23832
	testl	%eax, %eax	# D.23832
	je	.L193	#,
	.loc 1 500 0
	movq	-24(%rbp), %rax	# sv, tmp123
	movq	%rax, %rdi	# tmp123,
	call	Perl_newSVsv	#
	movq	%rax, -24(%rbp)	# tmp124, sv
	jmp	.L188	#
.L193:
	.loc 1 502 0
	movq	-24(%rbp), %rax	# sv, tmp125
	movl	12(%rax), %eax	# sv_3(D)->sv_flags, D.23832
	andb	$247, %ah	#, D.23832
	movl	%eax, %edx	# D.23832, D.23832
	movq	-24(%rbp), %rax	# sv, tmp126
	movl	%edx, 12(%rax)	# D.23832, sv_3(D)->sv_flags
	.loc 1 503 0
	movq	-24(%rbp), %rax	# sv, tmp127
	movq	%rax, PL_Sv(%rip)	# tmp127, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.180
	testq	%rax, %rax	# PL_Sv.180
	je	.L188	#,
	.loc 1 503 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.181
	movl	8(%rax), %edx	# PL_Sv.181_45->sv_refcnt, D.23832
	addl	$1, %edx	#, D.23832
	movl	%edx, 8(%rax)	# D.23832, PL_Sv.181_45->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.181_45->sv_refcnt, D.23832
	testl	%eax, %eax	# D.23832
	je	.L188	#,
	.loc 1 503 0
	nop
.L188:
	.loc 1 505 0 is_stmt 1
	call	Perl_sv_newmortal	#
	movq	%rax, -8(%rbp)	# tmp128, rv
	.loc 1 506 0
	movq	-8(%rbp), %rax	# rv, tmp129
	movl	$3, %esi	#,
	movq	%rax, %rdi	# tmp129,
	call	Perl_sv_upgrade	#
	.loc 1 507 0
	movq	-8(%rbp), %rax	# rv, tmp130
	movq	(%rax), %rax	# rv_51->sv_any, D.23833
	movq	-24(%rbp), %rdx	# sv, tmp131
	movq	%rdx, (%rax)	# tmp131, MEM[(struct XRV *)_52].xrv_rv
	.loc 1 508 0
	movq	-8(%rbp), %rax	# rv, tmp132
	movl	12(%rax), %eax	# rv_51->sv_flags, D.23832
	orl	$524288, %eax	#, D.23832
	movl	%eax, %edx	# D.23832, D.23832
	movq	-8(%rbp), %rax	# rv, tmp133
	movl	%edx, 12(%rax)	# D.23832, rv_51->sv_flags
	.loc 1 509 0
	movq	-8(%rbp), %rax	# rv, D.23839
	.loc 1 510 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE16:
	.size	S_refto, .-S_refto
	.globl	Perl_pp_ref
	.type	Perl_pp_ref, @function
Perl_pp_ref:
.LFB17:
	.loc 1 513 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 514 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.182
	movq	PL_op(%rip), %rax	# PL_op, PL_op.183
	movq	24(%rax), %rax	# PL_op.183_4->op_targ, D.23841
	salq	$3, %rax	#, D.23841
	addq	%rdx, %rax	# PL_curpad.182, D.23842
	movq	(%rax), %rax	# *_7, tmp79
	movq	%rax, -40(%rbp)	# tmp79, targ
	.loc 1 518 0
	movq	%rbx, %rax	# sp, sp.184
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.184_9, tmp80
	movq	%rax, -32(%rbp)	# tmp80, sv
	.loc 1 520 0
	cmpq	$0, -32(%rbp)	#, sv
	je	.L197	#,
	.loc 1 520 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp81
	movl	12(%rax), %eax	# sv_11->sv_flags, D.23843
	andl	$8192, %eax	#, D.23843
	testl	%eax, %eax	# D.23843
	je	.L197	#,
	.loc 1 521 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp82
	movq	%rax, %rdi	# tmp82,
	call	Perl_mg_get	#
.L197:
	.loc 1 523 0
	cmpq	$0, -32(%rbp)	#, sv
	je	.L198	#,
	.loc 1 523 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp83
	movl	12(%rax), %eax	# sv_11->sv_flags, D.23843
	andl	$524288, %eax	#, D.23843
	testl	%eax, %eax	# D.23843
	jne	.L199	#,
.L198:
	.loc 1 524 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	$PL_sv_no, (%rbx)	#, *sp_26
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.185
	movq	(%rax), %rax	# PL_op.185_27->op_next, D.23840
	jmp	.L200	#
.L199:
	.loc 1 526 0
	movq	-32(%rbp), %rax	# sv, tmp84
	movq	(%rax), %rax	# sv_11->sv_any, D.23844
	movq	(%rax), %rax	# MEM[(struct XRV *)_16].xrv_rv, tmp85
	movq	%rax, -32(%rbp)	# tmp85, sv
	.loc 1 527 0
	movq	-32(%rbp), %rax	# sv, tmp86
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp86,
	call	Perl_sv_reftype	#
	movq	%rax, -24(%rbp)	# tmp87, pv
.LBB25:
	.loc 1 528 0
	movq	-24(%rbp), %rax	# pv, tmp88
	movq	%rax, %rdi	# tmp88,
	call	strlen	#
	movq	%rax, %rdx	#, D.23841
	movq	-24(%rbp), %rcx	# pv, tmp89
	movq	-40(%rbp), %rax	# targ, tmp90
	movq	%rcx, %rsi	# tmp89,
	movq	%rax, %rdi	# tmp90,
	call	Perl_sv_setpvn	#
.LBB26:
	movq	-40(%rbp), %rax	# targ, tmp91
	movl	12(%rax), %eax	# targ_8->sv_flags, D.23843
	andl	$16384, %eax	#, D.23843
	testl	%eax, %eax	# D.23843
	je	.L201	#,
	.loc 1 528 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp92
	movq	%rax, %rdi	# tmp92,
	call	Perl_mg_set	#
.L201:
	.loc 1 528 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp93
	movq	%rax, (%rbx)	# tmp93, *sp_22
.LBE26:
.LBE25:
	.loc 1 529 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.186
	movq	(%rax), %rax	# PL_op.186_24->op_next, D.23840
.L200:
	.loc 1 530 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE17:
	.size	Perl_pp_ref, .-Perl_pp_ref
	.section	.rodata
	.align 8
.LC13:
	.string	"Attempt to bless into a reference"
	.align 8
.LC14:
	.string	"Explicit blessing to '' (assuming package main)"
	.text
	.globl	Perl_pp_bless
	.type	Perl_pp_bless, @function
Perl_pp_bless:
.LFB18:
	.loc 1 533 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 534 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 537 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.187
	movzbl	37(%rax), %eax	# PL_op.187_5->op_private, D.23846
	movzbl	%al, %eax	# D.23846, D.23847
	andl	$15, %eax	#, D.23847
	cmpl	$1, %eax	#, D.23847
	jne	.L203	#,
	.loc 1 538 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.188
	movq	48(%rax), %rax	# PL_curcop.188_9->cop_stash, tmp104
	movq	%rax, -40(%rbp)	# tmp104, stash
	jmp	.L204	#
.L203:
.LBB27:
	.loc 1 540 0
	movq	%rbx, %rax	# sp, sp.189
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.189_11, tmp105
	movq	%rax, -32(%rbp)	# tmp105, ssv
	.loc 1 544 0
	cmpq	$0, -32(%rbp)	#, ssv
	je	.L205	#,
	.loc 1 544 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# ssv, tmp106
	movl	12(%rax), %eax	# ssv_13->sv_flags, D.23848
	andl	$8192, %eax	#, D.23848
	testl	%eax, %eax	# D.23848
	jne	.L205	#,
	movq	-32(%rbp), %rax	# ssv, tmp107
	movl	12(%rax), %eax	# ssv_13->sv_flags, D.23848
	andl	$268435456, %eax	#, D.23848
	testl	%eax, %eax	# D.23848
	jne	.L205	#,
	movq	-32(%rbp), %rax	# ssv, tmp108
	movl	12(%rax), %eax	# ssv_13->sv_flags, D.23848
	andl	$524288, %eax	#, D.23848
	testl	%eax, %eax	# D.23848
	je	.L205	#,
	.loc 1 545 0 is_stmt 1
	movl	$.LC13, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L205:
	.loc 1 546 0
	movq	-32(%rbp), %rax	# ssv, tmp109
	movl	12(%rax), %eax	# ssv_13->sv_flags, D.23848
	andl	$262144, %eax	#, D.23848
	testl	%eax, %eax	# D.23848
	je	.L206	#,
	.loc 1 546 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# ssv, tmp110
	movq	(%rax), %rax	# ssv_13->sv_any, D.23849
	movq	8(%rax), %rax	# MEM[(struct XPV *)_22].xpv_cur, len.191
	movq	%rax, -48(%rbp)	# len.191, len
	movq	-32(%rbp), %rax	# ssv, tmp111
	movq	(%rax), %rax	# ssv_13->sv_any, D.23849
	movq	(%rax), %rax	# MEM[(struct XPV *)_24].xpv_pv, iftmp.190
	jmp	.L207	#
.L206:
	.loc 1 546 0 discriminator 2
	leaq	-48(%rbp), %rcx	#, tmp112
	movq	-32(%rbp), %rax	# ssv, tmp113
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp112,
	movq	%rax, %rdi	# tmp113,
	call	Perl_sv_2pv_flags	#
.L207:
	.loc 1 546 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.190, ptr
	.loc 1 547 0 is_stmt 1 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.192
	movq	80(%rax), %rax	# PL_curcop.192_28->cop_warnings, D.23850
	testq	%rax, %rax	# D.23850
	je	.L208	#,
	.loc 1 547 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.193
	movq	80(%rax), %rax	# PL_curcop.193_30->cop_warnings, D.23850
	cmpq	$32, %rax	#, D.23850
	je	.L208	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.194
	movq	80(%rax), %rax	# PL_curcop.194_32->cop_warnings, D.23850
	cmpq	$16, %rax	#, D.23850
	je	.L209	#,
	.loc 1 547 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.195
	movq	80(%rax), %rax	# PL_curcop.195_34->cop_warnings, D.23850
	movq	(%rax), %rax	# _35->sv_any, D.23849
	movq	(%rax), %rax	# MEM[(struct XPV *)_36].xpv_pv, D.23851
	addq	$3, %rax	#, D.23851
	movzbl	(%rax), %eax	# *_38, D.23852
	movsbl	%al, %eax	# D.23852, D.23847
	andl	$1, %eax	#, D.23847
	testl	%eax, %eax	# D.23847
	jne	.L209	#,
.L208:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.196
	movq	80(%rax), %rax	# PL_curcop.196_42->cop_warnings, D.23850
	testq	%rax, %rax	# D.23850
	jne	.L210	#,
	.loc 1 547 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.197
	movzbl	%al, %eax	# PL_dowarn.197, D.23847
	andl	$1, %eax	#, D.23847
	testl	%eax, %eax	# D.23847
	je	.L210	#,
.L209:
	movq	-48(%rbp), %rax	# len, len.198
	testq	%rax, %rax	# len.198
	jne	.L210	#,
	.loc 1 548 0 is_stmt 1
	movl	$.LC14, %esi	#,
	movl	$12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L210:
	.loc 1 550 0
	movq	-48(%rbp), %rax	# len, len.199
	movl	%eax, %ecx	# len.199, D.23848
	movq	-24(%rbp), %rax	# ptr, tmp114
	movl	$1, %edx	#,
	movl	%ecx, %esi	# D.23848,
	movq	%rax, %rdi	# tmp114,
	call	Perl_gv_stashpvn	#
	movq	%rax, -40(%rbp)	# tmp115, stash
.L204:
.LBE27:
	.loc 1 553 0
	movq	(%rbx), %rax	# *sp_1, D.23850
	movq	-40(%rbp), %rdx	# stash, tmp116
	movq	%rdx, %rsi	# tmp116,
	movq	%rax, %rdi	# D.23850,
	call	Perl_sv_bless	#
	.loc 1 554 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.200
	movq	(%rax), %rax	# PL_op.200_52->op_next, D.23853
	.loc 1 555 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE18:
	.size	Perl_pp_bless, .-Perl_pp_bless
	.section	.rodata
.LC15:
	.string	"RRAY"
.LC16:
	.string	"ODE"
.LC17:
	.string	"ILEHANDLE"
.LC18:
	.string	"*glob{FILEHANDLE}"
.LC19:
	.string	"ORMAT"
.LC20:
	.string	"LOB"
.LC21:
	.string	"ASH"
.LC22:
	.string	"AME"
.LC23:
	.string	"ACKAGE"
.LC24:
	.string	"__ANON__"
.LC25:
	.string	"CALAR"
	.text
	.globl	Perl_pp_gelem
	.type	Perl_pp_gelem, @function
Perl_pp_gelem:
.LFB19:
	.loc 1 558 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 563 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 566 0
	movq	%rbx, %rax	# sp, sp.201
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.201_19, tmp116
	movq	%rax, -64(%rbp)	# tmp116, sv
	.loc 1 567 0
	movq	-64(%rbp), %rax	# sv, tmp117
	movl	12(%rax), %eax	# sv_21->sv_flags, D.23856
	andl	$262144, %eax	#, D.23856
	testl	%eax, %eax	# D.23856
	je	.L213	#,
	.loc 1 567 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# sv, tmp118
	movq	(%rax), %rax	# sv_21->sv_any, D.23857
	movq	8(%rax), %rax	# MEM[(struct XPV *)_24].xpv_cur, n_a.203
	movq	%rax, -72(%rbp)	# n_a.203, n_a
	movq	-64(%rbp), %rax	# sv, tmp119
	movq	(%rax), %rax	# sv_21->sv_any, D.23857
	movq	(%rax), %rax	# MEM[(struct XPV *)_26].xpv_pv, iftmp.202
	jmp	.L214	#
.L213:
	.loc 1 567 0 discriminator 2
	leaq	-72(%rbp), %rcx	#, tmp120
	movq	-64(%rbp), %rax	# sv, tmp121
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp120,
	movq	%rax, %rdi	# tmp121,
	call	Perl_sv_2pv_flags	#
.L214:
	.loc 1 567 0 discriminator 3
	movq	%rax, -48(%rbp)	# iftmp.202, elem
	.loc 1 568 0 is_stmt 1 discriminator 3
	movq	%rbx, %rax	# sp, sp.204
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.204_30, tmp122
	movq	%rax, -40(%rbp)	# tmp122, gv
	.loc 1 569 0 discriminator 3
	movq	$0, -56(%rbp)	#, tmpRef
	.loc 1 570 0 discriminator 3
	movq	$0, -64(%rbp)	#, sv
	.loc 1 571 0 discriminator 3
	cmpq	$0, -48(%rbp)	#, elem
	je	.L215	#,
.LBB28:
	.loc 1 573 0
	movq	-48(%rbp), %rax	# elem, tmp126
	addq	$1, %rax	#, tmp125
	movq	%rax, -32(%rbp)	# tmp125, elem2
	.loc 1 574 0
	movq	-48(%rbp), %rax	# elem, tmp127
	movzbl	(%rax), %eax	# *elem_29, D.23858
	movsbl	%al, %eax	# D.23858, D.23859
	subl	$65, %eax	#, tmp128
	cmpl	$18, %eax	#, tmp128
	ja	.L215	#,
	movl	%eax, %eax	# tmp128, tmp129
	movq	.L217(,%rax,8), %rax	#, tmp130
	jmp	*%rax	# tmp130
	.section	.rodata
	.align 8
	.align 4
.L217:
	.quad	.L216
	.quad	.L215
	.quad	.L218
	.quad	.L215
	.quad	.L215
	.quad	.L219
	.quad	.L220
	.quad	.L221
	.quad	.L222
	.quad	.L215
	.quad	.L215
	.quad	.L215
	.quad	.L215
	.quad	.L223
	.quad	.L215
	.quad	.L224
	.quad	.L215
	.quad	.L215
	.quad	.L225
	.text
.L216:
	.loc 1 576 0
	movq	-32(%rbp), %rax	# elem2, tmp131
	movl	$.LC15, %esi	#,
	movq	%rax, %rdi	# tmp131,
	call	strcmp	#
	testl	%eax, %eax	# D.23859
	jne	.L226	#,
	.loc 1 577 0
	movq	-40(%rbp), %rax	# gv, tmp132
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	56(%rax), %rax	# _39->xgv_gp, D.23861
	movq	32(%rax), %rax	# _40->gp_av, tmp133
	movq	%rax, -56(%rbp)	# tmp133, tmpRef
	.loc 1 578 0
	jmp	.L215	#
.L226:
	jmp	.L215	#
.L218:
	.loc 1 580 0
	movq	-32(%rbp), %rax	# elem2, tmp134
	movl	$.LC16, %esi	#,
	movq	%rax, %rdi	# tmp134,
	call	strcmp	#
	testl	%eax, %eax	# D.23859
	jne	.L227	#,
	.loc 1 581 0
	movq	-40(%rbp), %rax	# gv, tmp135
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	56(%rax), %rax	# _43->xgv_gp, D.23861
	movl	64(%rax), %eax	# _44->gp_cvgen, D.23856
	testl	%eax, %eax	# D.23856
	jne	.L228	#,
	.loc 1 581 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# gv, tmp136
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	56(%rax), %rax	# _46->xgv_gp, D.23861
	movq	56(%rax), %rax	# _47->gp_cv, iftmp.205
	jmp	.L229	#
.L228:
	.loc 1 581 0 discriminator 2
	movl	$0, %eax	#, iftmp.205
.L229:
	.loc 1 581 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.205, tmpRef
	.loc 1 582 0 is_stmt 1 discriminator 3
	jmp	.L215	#
.L227:
	.loc 1 582 0 is_stmt 0
	jmp	.L215	#
.L219:
	.loc 1 584 0 is_stmt 1
	movq	-32(%rbp), %rax	# elem2, tmp137
	movl	$.LC17, %esi	#,
	movq	%rax, %rdi	# tmp137,
	call	strcmp	#
	testl	%eax, %eax	# D.23859
	jne	.L230	#,
	.loc 1 586 0
	movl	$.LC18, %edi	#,
	call	Perl_deprecate	#
	.loc 1 587 0
	movq	-40(%rbp), %rax	# gv, tmp138
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	56(%rax), %rax	# _52->xgv_gp, D.23861
	movq	16(%rax), %rax	# _53->gp_io, tmp139
	movq	%rax, -56(%rbp)	# tmp139, tmpRef
	jmp	.L231	#
.L230:
	.loc 1 590 0
	movq	-32(%rbp), %rax	# elem2, tmp140
	movl	$.LC19, %esi	#,
	movq	%rax, %rdi	# tmp140,
	call	strcmp	#
	testl	%eax, %eax	# D.23859
	jne	.L231	#,
	.loc 1 591 0
	movq	-40(%rbp), %rax	# gv, tmp141
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	56(%rax), %rax	# _56->xgv_gp, D.23861
	movq	24(%rax), %rax	# _57->gp_form, tmp142
	movq	%rax, -56(%rbp)	# tmp142, tmpRef
	.loc 1 592 0
	jmp	.L215	#
.L231:
	jmp	.L215	#
.L220:
	.loc 1 594 0
	movq	-32(%rbp), %rax	# elem2, tmp143
	movl	$.LC20, %esi	#,
	movq	%rax, %rdi	# tmp143,
	call	strcmp	#
	testl	%eax, %eax	# D.23859
	jne	.L232	#,
	.loc 1 595 0
	movq	-40(%rbp), %rax	# gv, tmp144
	movq	%rax, -56(%rbp)	# tmp144, tmpRef
	.loc 1 596 0
	jmp	.L215	#
.L232:
	jmp	.L215	#
.L221:
	.loc 1 598 0
	movq	-32(%rbp), %rax	# elem2, tmp145
	movl	$.LC21, %esi	#,
	movq	%rax, %rdi	# tmp145,
	call	strcmp	#
	testl	%eax, %eax	# D.23859
	jne	.L233	#,
	.loc 1 599 0
	movq	-40(%rbp), %rax	# gv, tmp146
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	56(%rax), %rax	# _62->xgv_gp, D.23861
	movq	40(%rax), %rax	# _63->gp_hv, tmp147
	movq	%rax, -56(%rbp)	# tmp147, tmpRef
	.loc 1 600 0
	jmp	.L215	#
.L233:
	jmp	.L215	#
.L222:
	.loc 1 602 0
	movq	-32(%rbp), %rax	# elem2, tmp148
	movzbl	(%rax), %eax	# *elem2_35, D.23858
	cmpb	$79, %al	#, D.23858
	jne	.L234	#,
	.loc 1 602 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# elem, tmp149
	addq	$2, %rax	#, D.23862
	movzbl	(%rax), %eax	# *_66, D.23858
	testb	%al, %al	# D.23858
	jne	.L234	#,
	.loc 1 603 0 is_stmt 1
	movq	-40(%rbp), %rax	# gv, tmp150
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	56(%rax), %rax	# _68->xgv_gp, D.23861
	movq	16(%rax), %rax	# _69->gp_io, tmp151
	movq	%rax, -56(%rbp)	# tmp151, tmpRef
	.loc 1 604 0
	jmp	.L215	#
.L234:
	jmp	.L215	#
.L223:
	.loc 1 606 0
	movq	-32(%rbp), %rax	# elem2, tmp152
	movl	$.LC22, %esi	#,
	movq	%rax, %rdi	# tmp152,
	call	strcmp	#
	testl	%eax, %eax	# D.23859
	jne	.L235	#,
	.loc 1 607 0
	movq	-40(%rbp), %rax	# gv, tmp153
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	72(%rax), %rdx	# _72->xgv_namelen, D.23863
	movq	-40(%rbp), %rax	# gv, tmp154
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	64(%rax), %rax	# _74->xgv_name, D.23862
	movq	%rdx, %rsi	# D.23863,
	movq	%rax, %rdi	# D.23862,
	call	Perl_newSVpvn	#
	movq	%rax, -64(%rbp)	# tmp155, sv
	.loc 1 608 0
	jmp	.L215	#
.L235:
	jmp	.L215	#
.L224:
	.loc 1 610 0
	movq	-32(%rbp), %rax	# elem2, tmp156
	movl	$.LC23, %esi	#,
	movq	%rax, %rdi	# tmp156,
	call	strcmp	#
	testl	%eax, %eax	# D.23859
	jne	.L236	#,
.LBB29:
	.loc 1 611 0
	movq	-40(%rbp), %rax	# gv, tmp157
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	80(%rax), %rax	# _78->xgv_stash, D.23864
	movq	(%rax), %rax	# _79->sv_any, D.23865
	movq	80(%rax), %rax	# _80->xhv_name, tmp158
	movq	%rax, -24(%rbp)	# tmp158, name
	.loc 1 612 0
	cmpq	$0, -24(%rbp)	#, name
	je	.L237	#,
	.loc 1 612 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# name, iftmp.206
	jmp	.L238	#
.L237:
	.loc 1 612 0 discriminator 2
	movl	$.LC24, %eax	#, iftmp.206
.L238:
	.loc 1 612 0 discriminator 3
	movl	$0, %esi	#,
	movq	%rax, %rdi	# iftmp.206,
	call	Perl_newSVpv	#
	movq	%rax, -64(%rbp)	# tmp159, sv
.LBE29:
	.loc 1 614 0 is_stmt 1 discriminator 3
	jmp	.L215	#
.L236:
	.loc 1 614 0 is_stmt 0
	jmp	.L215	#
.L225:
	.loc 1 616 0 is_stmt 1
	movq	-32(%rbp), %rax	# elem2, tmp160
	movl	$.LC25, %esi	#,
	movq	%rax, %rdi	# tmp160,
	call	strcmp	#
	testl	%eax, %eax	# D.23859
	jne	.L239	#,
	.loc 1 617 0
	movq	-40(%rbp), %rax	# gv, tmp161
	movq	(%rax), %rax	# gv_32->sv_any, D.23860
	movq	56(%rax), %rax	# _86->xgv_gp, D.23861
	movq	(%rax), %rax	# _87->gp_sv, tmp162
	movq	%rax, -56(%rbp)	# tmp162, tmpRef
	.loc 1 618 0
	jmp	.L245	#
.L239:
.L245:
	nop
.L215:
.LBE28:
	.loc 1 621 0
	cmpq	$0, -56(%rbp)	#, tmpRef
	je	.L240	#,
	.loc 1 622 0
	movq	-56(%rbp), %rax	# tmpRef, tmp163
	movq	%rax, %rdi	# tmp163,
	call	Perl_newRV	#
	movq	%rax, -64(%rbp)	# tmp164, sv
.L240:
	.loc 1 623 0
	cmpq	$0, -64(%rbp)	#, sv
	je	.L241	#,
	.loc 1 624 0
	movq	-64(%rbp), %rax	# sv, tmp165
	movq	%rax, %rdi	# tmp165,
	call	Perl_sv_2mortal	#
	jmp	.L242	#
.L241:
	.loc 1 626 0
	movq	$PL_sv_undef, -64(%rbp)	#, sv
.L242:
.LBB30:
	.loc 1 627 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.207
	movq	%rax, %rdx	# PL_stack_max.207, PL_stack_max.208
	movq	%rbx, %rax	# sp, sp.209
	subq	%rax, %rdx	# sp.209, D.23866
	movq	%rdx, %rax	# D.23866, D.23866
	cmpq	$7, %rax	#, D.23866
	jg	.L243	#,
	.loc 1 627 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L243:
	.loc 1 627 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-64(%rbp), %rax	# sv, tmp166
	movq	%rax, (%rbx)	# tmp166, *sp_96
.LBE30:
	.loc 1 628 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.210
	movq	(%rax), %rax	# PL_op.210_98->op_next, D.23868
	.loc 1 629 0 discriminator 2
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE19:
	.size	Perl_pp_gelem, .-Perl_pp_gelem
	.section	.rodata
.LC26:
	.string	"do_study: out of memory"
	.text
	.globl	Perl_pp_study
	.type	Perl_pp_study, @function
Perl_pp_study:
.LFB20:
	.loc 1 634 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r15	#
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	.loc 1 635 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.211
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.211_7, tmp135
	movq	%rax, -56(%rbp)	# tmp135, sv
	.loc 1 643 0
	movq	PL_lastscream(%rip), %rax	# PL_lastscream, PL_lastscream.212
	cmpq	%rax, -56(%rbp)	# PL_lastscream.212, sv
	jne	.L247	#,
	.loc 1 644 0
	movq	-56(%rbp), %rax	# sv, tmp136
	movl	12(%rax), %eax	# sv_9->sv_flags, D.23881
	andl	$134217728, %eax	#, D.23881
	testl	%eax, %eax	# D.23881
	je	.L248	#,
	.loc 1 645 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_13
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.213
	movq	(%rax), %rax	# PL_op.213_14->op_next, D.23880
	jmp	.L266	#
.L247:
	.loc 1 648 0
	movq	PL_lastscream(%rip), %rax	# PL_lastscream, PL_lastscream.214
	testq	%rax, %rax	# PL_lastscream.214
	je	.L250	#,
	.loc 1 649 0
	movq	PL_lastscream(%rip), %rax	# PL_lastscream, PL_lastscream.215
	movq	PL_lastscream(%rip), %rdx	# PL_lastscream, PL_lastscream.216
	movl	12(%rdx), %edx	# PL_lastscream.216_18->sv_flags, D.23881
	andl	$-134217729, %edx	#, D.23881
	movl	%edx, 12(%rax)	# D.23881, PL_lastscream.215_17->sv_flags
	.loc 1 650 0
	movq	PL_lastscream(%rip), %rax	# PL_lastscream, PL_lastscream.217
	movq	%rax, %rdi	# PL_lastscream.217,
	call	Perl_sv_free	#
.L250:
	.loc 1 652 0
	movq	-56(%rbp), %rax	# sv, tmp137
	movq	%rax, PL_Sv(%rip)	# tmp137, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.219
	testq	%rax, %rax	# PL_Sv.219
	je	.L252	#,
	.loc 1 652 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.220
	movl	8(%rax), %edx	# PL_Sv.220_23->sv_refcnt, D.23881
	addl	$1, %edx	#, D.23881
	movl	%edx, 8(%rax)	# D.23881, PL_Sv.220_23->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.220_23->sv_refcnt, D.23881
	testl	%eax, %eax	# D.23881
	je	.L252	#,
	.loc 1 652 0
	nop
.L252:
	.loc 1 652 0 discriminator 4
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.221
	movq	%rax, PL_lastscream(%rip)	# PL_Sv.221, PL_lastscream
.L248:
	.loc 1 655 0 is_stmt 1
	movq	-56(%rbp), %rax	# sv, tmp138
	movl	12(%rax), %eax	# sv_9->sv_flags, D.23881
	andl	$262144, %eax	#, D.23881
	testl	%eax, %eax	# D.23881
	je	.L253	#,
	.loc 1 655 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp139
	movq	(%rax), %rax	# sv_9->sv_any, D.23882
	movq	8(%rax), %rax	# MEM[(struct XPV *)_32].xpv_cur, len.223
	movq	%rax, -64(%rbp)	# len.223, len
	movq	-56(%rbp), %rax	# sv, tmp140
	movq	(%rax), %rax	# sv_9->sv_any, D.23882
	movq	(%rax), %rax	# MEM[(struct XPV *)_34].xpv_pv, iftmp.222
	jmp	.L254	#
.L253:
	.loc 1 655 0 discriminator 2
	leaq	-64(%rbp), %rcx	#, tmp141
	movq	-56(%rbp), %rax	# sv, tmp142
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp141,
	movq	%rax, %rdi	# tmp142,
	call	Perl_sv_2pv_flags	#
.L254:
	.loc 1 655 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.222, %sfp
	.loc 1 656 0 is_stmt 1 discriminator 3
	movq	-64(%rbp), %rax	# len, len.224
	movl	%eax, %r12d	# len.224, pos
	.loc 1 657 0 discriminator 3
	testl	%r12d, %r12d	# pos
	jg	.L255	#,
	.loc 1 658 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_no, (%rbx)	#, *sp_40
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.225
	movq	(%rax), %rax	# PL_op.225_41->op_next, D.23880
	jmp	.L266	#
.L255:
	.loc 1 659 0
	movl	PL_maxscream(%rip), %eax	# PL_maxscream, PL_maxscream.226
	cmpl	%eax, %r12d	# PL_maxscream.226, pos
	jle	.L256	#,
	.loc 1 660 0
	movl	PL_maxscream(%rip), %eax	# PL_maxscream, PL_maxscream.227
	testl	%eax, %eax	# PL_maxscream.227
	jns	.L257	#,
	.loc 1 661 0
	leal	80(%r12), %eax	#, PL_maxscream.228
	movl	%eax, PL_maxscream(%rip)	# PL_maxscream.228, PL_maxscream
	.loc 1 662 0
	movl	$1024, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, PL_screamfirst(%rip)	# PL_screamfirst.229, PL_screamfirst
	.loc 1 663 0
	movl	PL_maxscream(%rip), %eax	# PL_maxscream, PL_maxscream.230
	cltq
	salq	$2, %rax	#, D.23883
	movq	%rax, %rdi	# D.23883,
	call	Perl_safesysmalloc	#
	movq	%rax, PL_screamnext(%rip)	# PL_screamnext.231, PL_screamnext
	jmp	.L256	#
.L257:
	.loc 1 666 0
	movl	%r12d, %eax	# pos, tmp143
	leal	3(%rax), %edx	#, tmp144
	testl	%eax, %eax	# tmp143
	cmovs	%edx, %eax	# tmp144,, tmp143
	sarl	$2, %eax	#, tmp145
	addl	%r12d, %eax	# pos, PL_maxscream.232
	movl	%eax, PL_maxscream(%rip)	# PL_maxscream.232, PL_maxscream
	.loc 1 667 0
	movl	PL_maxscream(%rip), %eax	# PL_maxscream, PL_maxscream.233
	cltq
	leaq	0(,%rax,4), %rdx	#, D.23883
	movq	PL_screamnext(%rip), %rax	# PL_screamnext, PL_screamnext.234
	movq	%rdx, %rsi	# D.23883,
	movq	%rax, %rdi	# PL_screamnext.234,
	call	Perl_safesysrealloc	#
	movq	%rax, PL_screamnext(%rip)	# PL_screamnext.235, PL_screamnext
.L256:
	.loc 1 671 0
	movq	PL_screamfirst(%rip), %r13	# PL_screamfirst, sfirst
	.loc 1 672 0
	movq	PL_screamnext(%rip), %r15	# PL_screamnext, snext
	.loc 1 674 0
	testq	%r13, %r13	# sfirst
	je	.L258	#,
	.loc 1 674 0 is_stmt 0 discriminator 1
	testq	%r15, %r15	# snext
	jne	.L259	#,
.L258:
	.loc 1 675 0 is_stmt 1
	movl	$.LC26, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L266	#
.L259:
	.loc 1 677 0
	movl	$256, %r14d	#, ch
	jmp	.L260	#
.L261:
	.loc 1 678 0 discriminator 2
	movq	%r13, %rax	# sfirst, sfirst.236
	leaq	4(%rax), %r13	#, sfirst
	movl	$-1, (%rax)	#, *sfirst.236_61
	.loc 1 677 0 discriminator 2
	subl	$1, %r14d	#, ch
.L260:
	.loc 1 677 0 is_stmt 0 discriminator 1
	testl	%r14d, %r14d	# ch
	jne	.L261	#,
	.loc 1 679 0 is_stmt 1
	subq	$1024, %r13	#, sfirst
	.loc 1 681 0
	jmp	.L262	#
.L265:
	.loc 1 682 0
	movslq	%r12d, %rax	# pos, D.23885
	addq	-72(%rbp), %rax	# %sfp, D.23886
	movzbl	(%rax), %eax	# *_67, D.23887
	movzbl	%al, %r14d	# D.23887, ch
	.loc 1 683 0
	movslq	%r14d, %rax	# ch, D.23883
	salq	$2, %rax	#, D.23883
	addq	%r13, %rax	# sfirst, D.23888
	movl	(%rax), %eax	# *_72, D.23884
	testl	%eax, %eax	# D.23884
	js	.L263	#,
	.loc 1 684 0
	movslq	%r12d, %rax	# pos, D.23883
	salq	$2, %rax	#, D.23883
	addq	%r15, %rax	# snext, D.23888
	movslq	%r14d, %rdx	# ch, D.23883
	salq	$2, %rdx	#, D.23883
	addq	%r13, %rdx	# sfirst, D.23888
	movl	(%rdx), %edx	# *_79, D.23884
	subl	%r12d, %edx	# pos, D.23884
	movl	%edx, (%rax)	# D.23884, *_76
	jmp	.L264	#
.L263:
	.loc 1 686 0
	movslq	%r12d, %rax	# pos, D.23883
	salq	$2, %rax	#, D.23883
	addq	%r15, %rax	# snext, D.23888
	movl	%r12d, %edx	# pos, D.23884
	negl	%edx	# D.23884
	movl	%edx, (%rax)	# D.23884, *_84
.L264:
	.loc 1 687 0
	movslq	%r14d, %rax	# ch, D.23883
	salq	$2, %rax	#, D.23883
	addq	%r13, %rax	# sfirst, D.23888
	movl	%r12d, (%rax)	# pos, *_88
.L262:
	.loc 1 681 0 discriminator 1
	subl	$1, %r12d	#, pos
	testl	%r12d, %r12d	# pos
	jns	.L265	#,
	.loc 1 690 0
	movq	-56(%rbp), %rax	# sv, tmp146
	movl	12(%rax), %eax	# sv_9->sv_flags, D.23881
	orl	$134217728, %eax	#, D.23881
	movl	%eax, %edx	# D.23881, D.23881
	movq	-56(%rbp), %rax	# sv, tmp147
	movl	%edx, 12(%rax)	# D.23881, sv_9->sv_flags
	.loc 1 692 0
	movq	-56(%rbp), %rax	# sv, tmp148
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$103, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp148,
	call	Perl_sv_magic	#
	.loc 1 693 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_91
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.237
	movq	(%rax), %rax	# PL_op.237_92->op_next, D.23880
.L266:
	.loc 1 694 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%r15	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE20:
	.size	Perl_pp_study, .-Perl_pp_study
	.globl	Perl_pp_trans
	.type	Perl_pp_trans, @function
Perl_pp_trans:
.LFB21:
	.loc 1 697 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 698 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 701 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.238
	movzbl	36(%rax), %eax	# PL_op.238_4->op_flags, D.23891
	movzbl	%al, %eax	# D.23891, D.23892
	andl	$64, %eax	#, D.23892
	testl	%eax, %eax	# D.23892
	je	.L268	#,
	.loc 1 702 0
	movq	%rbx, %rax	# sp, sp.239
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.239_8, tmp80
	movq	%rax, -32(%rbp)	# tmp80, sv
	jmp	.L269	#
.L268:
	.loc 1 704 0
	movq	PL_defgv(%rip), %rax	# PL_defgv, PL_defgv.240
	movq	(%rax), %rax	# PL_defgv.240_11->sv_any, D.23893
	movq	56(%rax), %rax	# _12->xgv_gp, D.23894
	movq	(%rax), %rax	# _13->gp_sv, tmp81
	movq	%rax, -32(%rbp)	# tmp81, sv
	.loc 1 705 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.241
	movq	%rax, %rdx	# PL_stack_max.241, PL_stack_max.242
	movq	%rbx, %rax	# sp, sp.243
	subq	%rax, %rdx	# sp.243, D.23895
	movq	%rdx, %rax	# D.23895, D.23895
	cmpq	$7, %rax	#, D.23895
	jg	.L269	#,
	.loc 1 705 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L269:
	.loc 1 707 0 is_stmt 1
	call	Perl_sv_newmortal	#
	movq	%rax, -24(%rbp)	# tmp82, targ
.LBB31:
	.loc 1 708 0
	movq	-32(%rbp), %rax	# sv, tmp83
	movq	%rax, %rdi	# tmp83,
	call	Perl_do_trans	#
	movslq	%eax, %rdx	# D.23892, D.23895
	movq	-24(%rbp), %rax	# targ, tmp84
	movq	%rdx, %rsi	# D.23895,
	movq	%rax, %rdi	# tmp84,
	call	Perl_sv_setiv	#
.LBB32:
	movq	-24(%rbp), %rax	# targ, tmp85
	movl	12(%rax), %eax	# targ_20->sv_flags, D.23896
	andl	$16384, %eax	#, D.23896
	testl	%eax, %eax	# D.23896
	je	.L270	#,
	.loc 1 708 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# targ, tmp86
	movq	%rax, %rdi	# tmp86,
	call	Perl_mg_set	#
.L270:
	.loc 1 708 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-24(%rbp), %rax	# targ, tmp87
	movq	%rax, (%rbx)	# tmp87, *sp_25
.LBE32:
.LBE31:
	.loc 1 709 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.244
	movq	(%rax), %rax	# PL_op.244_27->op_next, D.23898
	.loc 1 710 0 discriminator 2
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE21:
	.size	Perl_pp_trans, .-Perl_pp_trans
	.globl	Perl_pp_schop
	.type	Perl_pp_schop, @function
Perl_pp_schop:
.LFB22:
	.loc 1 715 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 716 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.245
	movq	PL_op(%rip), %rax	# PL_op, PL_op.246
	movq	24(%rax), %rax	# PL_op.246_3->op_targ, D.23899
	salq	$3, %rax	#, D.23899
	addq	%rdx, %rax	# PL_curpad.245, D.23900
	movq	(%rax), %rax	# *_6, tmp72
	movq	%rax, -24(%rbp)	# tmp72, targ
	.loc 1 717 0
	movq	(%rbx), %rdx	# *sp_1, D.23901
	movq	-24(%rbp), %rax	# targ, tmp73
	movq	%rdx, %rsi	# D.23901,
	movq	%rax, %rdi	# tmp73,
	call	Perl_do_chop	#
.LBB33:
	.loc 1 718 0
	movq	-24(%rbp), %rax	# targ, tmp74
	movl	12(%rax), %eax	# targ_7->sv_flags, D.23902
	andl	$16384, %eax	#, D.23902
	testl	%eax, %eax	# D.23902
	je	.L273	#,
	.loc 1 718 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# targ, tmp75
	movq	%rax, %rdi	# tmp75,
	call	Perl_mg_set	#
.L273:
	.loc 1 718 0 discriminator 2
	movq	-24(%rbp), %rax	# targ, tmp76
	movq	%rax, (%rbx)	# tmp76, *sp_1
.LBE33:
	.loc 1 719 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.247
	movq	(%rax), %rax	# PL_op.247_12->op_next, D.23903
	.loc 1 720 0 discriminator 2
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE22:
	.size	Perl_pp_schop, .-Perl_pp_schop
	.globl	Perl_pp_chop
	.type	Perl_pp_chop, @function
Perl_pp_chop:
.LFB23:
	.loc 1 723 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 724 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.248
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.249
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.251
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.251, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.250_5, D.23904
	cltq
	salq	$3, %rax	#, D.23905
	leaq	(%rcx,%rax), %r12	#, mark
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.252
	movq	PL_op(%rip), %rax	# PL_op, PL_op.253
	movq	24(%rax), %rax	# PL_op.253_12->op_targ, D.23905
	salq	$3, %rax	#, D.23905
	addq	%rdx, %rax	# PL_curpad.252, D.23906
	movq	(%rax), %rax	# *_15, tmp88
	movq	%rax, -24(%rbp)	# tmp88, targ
	movq	%r12, %rdx	# mark, mark.254
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.255
	subq	%rax, %rdx	# PL_stack_base.256, D.23907
	movq	%rdx, %rax	# D.23907, D.23907
	sarq	$3, %rax	#, tmp89
	movl	%eax, -28(%rbp)	# D.23907, origmark
	.loc 1 725 0
	jmp	.L276	#
.L277:
	.loc 1 726 0
	addq	$8, %r12	#, mark
	movq	(%r12), %rdx	# *mark_23, D.23908
	movq	-24(%rbp), %rax	# targ, tmp90
	movq	%rdx, %rsi	# D.23908,
	movq	%rax, %rdi	# tmp90,
	call	Perl_do_chop	#
.L276:
	.loc 1 725 0 discriminator 1
	cmpq	%rbx, %r12	# sp, mark
	jb	.L277	#,
	.loc 1 727 0
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.257
	movl	-28(%rbp), %edx	# origmark, tmp91
	movslq	%edx, %rdx	# tmp91, D.23905
	salq	$3, %rdx	#, D.23905
	leaq	(%rax,%rdx), %rbx	#, sp
.LBB34:
	.loc 1 728 0
	movq	-24(%rbp), %rax	# targ, tmp92
	movl	12(%rax), %eax	# targ_16->sv_flags, D.23909
	andl	$16384, %eax	#, D.23909
	testl	%eax, %eax	# D.23909
	je	.L278	#,
	.loc 1 728 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# targ, tmp93
	movq	%rax, %rdi	# tmp93,
	call	Perl_mg_set	#
.L278:
	.loc 1 728 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-24(%rbp), %rax	# targ, tmp94
	movq	%rax, (%rbx)	# tmp94, *sp_31
.LBE34:
	.loc 1 729 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.258
	movq	(%rax), %rax	# PL_op.258_33->op_next, D.23910
	.loc 1 730 0 discriminator 2
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE23:
	.size	Perl_pp_chop, .-Perl_pp_chop
	.globl	Perl_pp_schomp
	.type	Perl_pp_schomp, @function
Perl_pp_schomp:
.LFB24:
	.loc 1 733 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 734 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.259
	movq	PL_op(%rip), %rax	# PL_op, PL_op.260
	movq	24(%rax), %rax	# PL_op.260_3->op_targ, D.23911
	salq	$3, %rax	#, D.23911
	addq	%rdx, %rax	# PL_curpad.259, D.23912
	movq	(%rax), %rax	# *_6, tmp74
	movq	%rax, -24(%rbp)	# tmp74, targ
.LBB35:
	.loc 1 735 0
	movq	(%rbx), %rax	# *sp_1, D.23913
	movq	%rax, %rdi	# D.23913,
	call	Perl_do_chomp	#
	movslq	%eax, %rdx	# D.23914, D.23915
	movq	-24(%rbp), %rax	# targ, tmp75
	movq	%rdx, %rsi	# D.23915,
	movq	%rax, %rdi	# tmp75,
	call	Perl_sv_setiv	#
.LBB36:
	movq	-24(%rbp), %rax	# targ, tmp76
	movl	12(%rax), %eax	# targ_7->sv_flags, D.23916
	andl	$16384, %eax	#, D.23916
	testl	%eax, %eax	# D.23916
	je	.L281	#,
	.loc 1 735 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# targ, tmp77
	movq	%rax, %rdi	# tmp77,
	call	Perl_mg_set	#
.L281:
	.loc 1 735 0 discriminator 2
	movq	-24(%rbp), %rax	# targ, tmp78
	movq	%rax, (%rbx)	# tmp78, *sp_1
.LBE36:
.LBE35:
	.loc 1 736 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.261
	movq	(%rax), %rax	# PL_op.261_14->op_next, D.23917
	.loc 1 737 0 discriminator 2
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE24:
	.size	Perl_pp_schomp, .-Perl_pp_schomp
	.globl	Perl_pp_chomp
	.type	Perl_pp_chomp, @function
Perl_pp_chomp:
.LFB25:
	.loc 1 740 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	.loc 1 741 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.262
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.263
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.265
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.265, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.264_6, D.23918
	cltq
	salq	$3, %rax	#, D.23919
	leaq	(%rcx,%rax), %r13	#, mark
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.266
	movq	PL_op(%rip), %rax	# PL_op, PL_op.267
	movq	24(%rax), %rax	# PL_op.267_13->op_targ, D.23919
	salq	$3, %rax	#, D.23919
	addq	%rdx, %rax	# PL_curpad.266, D.23920
	movq	(%rax), %rax	# *_16, tmp84
	movq	%rax, -40(%rbp)	# tmp84, targ
	.loc 1 742 0
	movl	$0, %r12d	#, count
	.loc 1 744 0
	jmp	.L284	#
.L285:
	.loc 1 745 0
	movq	%rbx, %rax	# sp, sp.268
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.268_19, D.23921
	movq	%rax, %rdi	# D.23921,
	call	Perl_do_chomp	#
	addl	%eax, %r12d	# D.23918, count
.L284:
	.loc 1 744 0 discriminator 1
	cmpq	%r13, %rbx	# mark, sp
	ja	.L285	#,
.LBB37:
	.loc 1 746 0
	movslq	%r12d, %rdx	# count, D.23922
	movq	-40(%rbp), %rax	# targ, tmp85
	movq	%rdx, %rsi	# D.23922,
	movq	%rax, %rdi	# tmp85,
	call	Perl_sv_setiv	#
.LBB38:
	movq	-40(%rbp), %rax	# targ, tmp86
	movl	12(%rax), %eax	# targ_17->sv_flags, D.23923
	andl	$16384, %eax	#, D.23923
	testl	%eax, %eax	# D.23923
	je	.L286	#,
	.loc 1 746 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp87
	movq	%rax, %rdi	# tmp87,
	call	Perl_mg_set	#
.L286:
	.loc 1 746 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp88
	movq	%rax, (%rbx)	# tmp88, *sp_27
.LBE38:
.LBE37:
	.loc 1 747 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.269
	movq	(%rax), %rax	# PL_op.269_29->op_next, D.23924
	.loc 1 748 0 discriminator 2
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE25:
	.size	Perl_pp_chomp, .-Perl_pp_chomp
	.globl	Perl_pp_defined
	.type	Perl_pp_defined, @function
Perl_pp_defined:
.LFB26:
	.loc 1 751 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 752 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 755 0
	movq	%rbx, %rax	# sp, sp.270
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %r12	# *sp.270_3, sv
	.loc 1 756 0
	testq	%r12, %r12	# sv
	je	.L289	#,
	.loc 1 756 0 is_stmt 0 discriminator 1
	movq	(%r12), %rax	# sv_5->sv_any, D.23926
	testq	%rax, %rax	# D.23926
	jne	.L290	#,
.L289:
	.loc 1 757 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	$PL_sv_no, (%rbx)	#, *sp_47
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.271
	movq	(%rax), %rax	# PL_op.271_48->op_next, D.23925
	jmp	.L291	#
.L290:
	.loc 1 758 0
	movl	12(%r12), %eax	# sv_5->sv_flags, D.23927
	movzbl	%al, %eax	# D.23927, D.23927
	cmpl	$11, %eax	#, D.23927
	je	.L293	#,
	cmpl	$12, %eax	#, D.23927
	je	.L294	#,
	cmpl	$10, %eax	#, D.23927
	jne	.L304	#,
	.loc 1 760 0
	movq	(%r12), %rax	# sv_5->sv_any, D.23926
	movq	16(%rax), %rax	# MEM[(struct XPVAV *)_9].xav_max, D.23928
	testq	%rax, %rax	# D.23928
	jns	.L296	#,
	.loc 1 760 0 is_stmt 0 discriminator 1
	movl	12(%r12), %eax	# sv_5->sv_flags, D.23927
	andl	$8192, %eax	#, D.23927
	testl	%eax, %eax	# D.23927
	jne	.L296	#,
	.loc 1 761 0 is_stmt 1
	movl	12(%r12), %eax	# sv_5->sv_flags, D.23927
	andl	$32768, %eax	#, D.23927
	testl	%eax, %eax	# D.23927
	je	.L297	#,
	.loc 1 761 0 is_stmt 0 discriminator 1
	movl	$80, %esi	#,
	movq	%r12, %rdi	# sv,
	call	Perl_mg_find	#
	testq	%rax, %rax	# D.23929
	je	.L297	#,
.L296:
	.loc 1 762 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_16
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.272
	movq	(%rax), %rax	# PL_op.272_17->op_next, D.23925
	jmp	.L291	#
.L297:
	.loc 1 763 0
	jmp	.L298	#
.L293:
	.loc 1 765 0
	movq	(%r12), %rax	# sv_5->sv_any, D.23926
	movq	(%rax), %rax	# MEM[(struct HE * * *)_20], D.23931
	testq	%rax, %rax	# D.23931
	jne	.L299	#,
	.loc 1 765 0 is_stmt 0 discriminator 1
	movl	12(%r12), %eax	# sv_5->sv_flags, D.23927
	andl	$8192, %eax	#, D.23927
	testl	%eax, %eax	# D.23927
	jne	.L299	#,
	.loc 1 766 0 is_stmt 1
	movl	12(%r12), %eax	# sv_5->sv_flags, D.23927
	andl	$32768, %eax	#, D.23927
	testl	%eax, %eax	# D.23927
	je	.L300	#,
	.loc 1 766 0 is_stmt 0 discriminator 1
	movl	$80, %esi	#,
	movq	%r12, %rdi	# sv,
	call	Perl_mg_find	#
	testq	%rax, %rax	# D.23929
	je	.L300	#,
.L299:
	.loc 1 767 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_27
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.273
	movq	(%rax), %rax	# PL_op.273_28->op_next, D.23925
	jmp	.L291	#
.L300:
	.loc 1 768 0
	jmp	.L298	#
.L294:
	.loc 1 770 0
	movq	(%r12), %rax	# sv_5->sv_any, D.23926
	movq	72(%rax), %rax	# MEM[(struct XPVCV *)_30].xcv_root, D.23925
	testq	%rax, %rax	# D.23925
	jne	.L301	#,
	.loc 1 770 0 is_stmt 0 discriminator 1
	movq	(%r12), %rax	# sv_5->sv_any, D.23926
	movq	80(%rax), %rax	# MEM[(struct XPVCV *)_32].xcv_xsub, D.23932
	testq	%rax, %rax	# D.23932
	je	.L302	#,
.L301:
	.loc 1 771 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_34
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.274
	movq	(%rax), %rax	# PL_op.274_35->op_next, D.23925
	jmp	.L291	#
.L302:
	.loc 1 772 0
	jmp	.L298	#
.L304:
	.loc 1 774 0
	movl	12(%r12), %eax	# sv_5->sv_flags, D.23927
	andl	$8192, %eax	#, D.23927
	testl	%eax, %eax	# D.23927
	je	.L303	#,
	.loc 1 775 0
	movq	%r12, %rdi	# sv,
	call	Perl_mg_get	#
.L303:
	.loc 1 776 0
	movl	12(%r12), %eax	# sv_5->sv_flags, D.23927
	andl	$118423552, %eax	#, D.23927
	testl	%eax, %eax	# D.23927
	je	.L298	#,
	.loc 1 777 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_41
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.275
	movq	(%rax), %rax	# PL_op.275_42->op_next, D.23925
	jmp	.L291	#
.L298:
	.loc 1 779 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_no, (%rbx)	#, *sp_44
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.276
	movq	(%rax), %rax	# PL_op.276_45->op_next, D.23925
.L291:
	.loc 1 780 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE26:
	.size	Perl_pp_defined, .-Perl_pp_defined
	.section	.rodata
.LC27:
	.string	"(anonymous)"
	.align 8
.LC28:
	.string	"Constant subroutine %s undefined"
	.text
	.globl	Perl_pp_undef
	.type	Perl_pp_undef, @function
Perl_pp_undef:
.LFB27:
	.loc 1 783 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$32, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 784 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 787 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.277
	movzbl	37(%rax), %eax	# PL_op.277_6->op_private, D.23934
	testb	%al, %al	# D.23934
	jne	.L306	#,
	.loc 1 788 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.278
	movq	%rax, %rdx	# PL_stack_max.278, PL_stack_max.279
	movq	%rbx, %rax	# sp, sp.280
	subq	%rax, %rdx	# sp.280, D.23935
	movq	%rdx, %rax	# D.23935, D.23935
	cmpq	$7, %rax	#, D.23935
	jg	.L307	#,
	.loc 1 788 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L307:
	.loc 1 789 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	$PL_sv_undef, (%rbx)	#, *sp_13
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.281
	movq	(%rax), %rax	# PL_op.281_14->op_next, D.23933
	jmp	.L308	#
.L306:
	.loc 1 792 0
	movq	%rbx, %rax	# sp, sp.282
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.282_16, tmp158
	movq	%rax, -40(%rbp)	# tmp158, sv
	.loc 1 793 0
	cmpq	$0, -40(%rbp)	#, sv
	jne	.L309	#,
	.loc 1 794 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_undef, (%rbx)	#, *sp_19
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.283
	movq	(%rax), %rax	# PL_op.283_20->op_next, D.23933
	jmp	.L308	#
.L309:
	.loc 1 796 0
	movq	-40(%rbp), %rax	# sv, tmp159
	movl	12(%rax), %eax	# sv_18->sv_flags, D.23936
	andl	$9961472, %eax	#, D.23936
	testl	%eax, %eax	# D.23936
	je	.L310	#,
	.loc 1 797 0
	movq	-40(%rbp), %rax	# sv, tmp160
	movq	%rax, %rdi	# tmp160,
	call	Perl_sv_force_normal	#
.L310:
	.loc 1 799 0
	movq	-40(%rbp), %rax	# sv, tmp161
	movl	12(%rax), %eax	# sv_18->sv_flags, D.23936
	movzbl	%al, %eax	# D.23936, D.23936
	cmpl	$14, %eax	#, D.23936
	ja	.L311	#,
	movl	%eax, %eax	# D.23936, tmp162
	movq	.L313(,%rax,8), %rax	#, tmp163
	jmp	*%rax	# tmp163
	.section	.rodata
	.align 8
	.align 4
.L313:
	.quad	.L334
	.quad	.L311
	.quad	.L311
	.quad	.L311
	.quad	.L311
	.quad	.L311
	.quad	.L311
	.quad	.L311
	.quad	.L311
	.quad	.L311
	.quad	.L314
	.quad	.L315
	.quad	.L316
	.quad	.L317
	.quad	.L318
	.text
.L314:
	.loc 1 803 0
	movq	-40(%rbp), %rax	# sv, tmp164
	movq	%rax, %rdi	# tmp164,
	call	Perl_av_undef	#
	.loc 1 804 0
	jmp	.L319	#
.L315:
	.loc 1 806 0
	movq	-40(%rbp), %rax	# sv, tmp165
	movq	%rax, %rdi	# tmp165,
	call	Perl_hv_undef	#
	.loc 1 807 0
	jmp	.L319	#
.L316:
	.loc 1 809 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.284
	movq	80(%rax), %rax	# PL_curcop.284_26->cop_warnings, D.23937
	testq	%rax, %rax	# D.23937
	je	.L320	#,
	.loc 1 809 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.285
	movq	80(%rax), %rax	# PL_curcop.285_28->cop_warnings, D.23937
	cmpq	$32, %rax	#, D.23937
	je	.L320	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.286
	movq	80(%rax), %rax	# PL_curcop.286_30->cop_warnings, D.23937
	cmpq	$16, %rax	#, D.23937
	je	.L321	#,
	.loc 1 809 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.287
	movq	80(%rax), %rax	# PL_curcop.287_32->cop_warnings, D.23937
	movq	(%rax), %rax	# _33->sv_any, D.23938
	movq	(%rax), %rax	# MEM[(struct XPV *)_34].xpv_pv, D.23939
	addq	$3, %rax	#, D.23939
	movzbl	(%rax), %eax	# *_36, D.23940
	movsbl	%al, %eax	# D.23940, D.23941
	andl	$1, %eax	#, D.23941
	testl	%eax, %eax	# D.23941
	jne	.L321	#,
.L320:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.288
	movq	80(%rax), %rax	# PL_curcop.288_40->cop_warnings, D.23937
	testq	%rax, %rax	# D.23937
	jne	.L318	#,
	.loc 1 809 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.289
	movzbl	%al, %eax	# PL_dowarn.289, D.23941
	andl	$1, %eax	#, D.23941
	testl	%eax, %eax	# D.23941
	je	.L318	#,
.L321:
	movq	-40(%rbp), %rax	# sv, tmp166
	movq	%rax, %rdi	# tmp166,
	call	Perl_cv_const_sv	#
	testq	%rax, %rax	# D.23937
	je	.L318	#,
	.loc 1 811 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp167
	movq	(%rax), %rax	# MEM[(struct CV *)sv_18].sv_any, D.23942
	movzwl	136(%rax), %eax	# _46->xcv_flags, D.23943
	movzwl	%ax, %eax	# D.23943, D.23941
	andl	$4, %eax	#, D.23941
	.loc 1 810 0
	testl	%eax, %eax	# D.23941
	jne	.L322	#,
	.loc 1 811 0
	movq	-40(%rbp), %rax	# sv, tmp168
	movq	(%rax), %rax	# MEM[(struct CV *)sv_18].sv_any, D.23942
	movq	96(%rax), %rax	# _50->xcv_gv, D.23944
	movq	(%rax), %rax	# _51->sv_any, D.23945
	movq	56(%rax), %rax	# _52->xgv_gp, D.23946
	movq	48(%rax), %rax	# _53->gp_egv, D.23944
	testq	%rax, %rax	# D.23944
	je	.L323	#,
	.loc 1 811 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp169
	movq	(%rax), %rax	# MEM[(struct CV *)sv_18].sv_any, D.23942
	movq	96(%rax), %rax	# _55->xcv_gv, D.23944
	movq	(%rax), %rax	# _56->sv_any, D.23945
	movq	56(%rax), %rax	# _57->xgv_gp, D.23946
	movq	48(%rax), %rax	# _58->gp_egv, iftmp.291
	jmp	.L324	#
.L323:
	.loc 1 811 0 discriminator 2
	movq	-40(%rbp), %rax	# sv, tmp170
	movq	(%rax), %rax	# MEM[(struct CV *)sv_18].sv_any, D.23942
	movq	96(%rax), %rax	# _60->xcv_gv, iftmp.291
.L324:
	.loc 1 811 0 discriminator 1
	movq	(%rax), %rax	# iftmp.291_4->sv_any, D.23945
	.loc 1 810 0 is_stmt 1 discriminator 1
	movq	64(%rax), %rax	# _62->xgv_name, iftmp.290
	jmp	.L325	#
.L322:
	movl	$.LC27, %eax	#, iftmp.290
.L325:
	.loc 1 810 0 is_stmt 0 discriminator 2
	movq	%rax, %rdx	# iftmp.290,
	movl	$.LC28, %esi	#,
	movl	$12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L318:
.LBB39:
	.loc 1 816 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp171
	movq	(%rax), %rax	# MEM[(struct CV *)sv_18].sv_any, D.23942
	movq	96(%rax), %rax	# _65->xcv_gv, tmp172
	movq	%rax, -32(%rbp)	# tmp172, gv
	.loc 1 817 0
	movq	-40(%rbp), %rax	# sv, tmp173
	movq	%rax, %rdi	# tmp173,
	call	Perl_cv_undef	#
	.loc 1 818 0
	movq	-40(%rbp), %rax	# sv, tmp174
	movq	(%rax), %rax	# MEM[(struct CV *)sv_18].sv_any, D.23942
	movq	-32(%rbp), %rdx	# gv, tmp175
	movq	%rdx, 96(%rax)	# tmp175, _67->xcv_gv
.LBE39:
	.loc 1 820 0
	jmp	.L319	#
.L317:
	.loc 1 822 0
	movq	-40(%rbp), %rax	# sv, tmp176
	movl	12(%rax), %eax	# sv_18->sv_flags, D.23936
	andl	$1048576, %eax	#, D.23936
	testl	%eax, %eax	# D.23936
	je	.L326	#,
	.loc 1 823 0
	cmpq	$PL_sv_undef, -40(%rbp)	#, sv
	je	.L328	#,
	.loc 1 823 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp177
	movl	$2, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp177,
	call	Perl_sv_setsv_flags	#
	movq	-40(%rbp), %rax	# sv, tmp178
	movl	12(%rax), %eax	# sv_18->sv_flags, D.23936
	andl	$16384, %eax	#, D.23936
	testl	%eax, %eax	# D.23936
	je	.L328	#,
	movq	-40(%rbp), %rax	# sv, tmp179
	movq	%rax, %rdi	# tmp179,
	call	Perl_mg_set	#
	.loc 1 834 0 is_stmt 1 discriminator 1
	jmp	.L319	#
.L326:
.LBB40:
	.loc 1 826 0
	movq	-40(%rbp), %rax	# sv, tmp180
	movq	%rax, %rdi	# tmp180,
	call	Perl_gp_free	#
	.loc 1 827 0
	movl	$88, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -24(%rbp)	# tmp181, gp
	movq	-24(%rbp), %rax	# gp, tmp182
	movl	$88, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp182,
	call	memset	#
	.loc 1 828 0
	movq	-40(%rbp), %rax	# sv, tmp183
	movq	(%rax), %r12	# sv_18->sv_any, D.23938
	movq	-24(%rbp), %rax	# gp, tmp184
	movq	%rax, %rdi	# tmp184,
	call	Perl_gp_ref	#
	movq	%rax, 56(%r12)	# D.23946, MEM[(struct XPVGV *)_73].xgv_gp
	.loc 1 829 0
	movq	-40(%rbp), %rax	# sv, tmp185
	movq	(%rax), %rax	# sv_18->sv_any, D.23938
	movq	56(%rax), %r12	# MEM[(struct XPVGV *)_75].xgv_gp, D.23946
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, (%r12)	# D.23937, _76->gp_sv
	.loc 1 830 0
	movq	-40(%rbp), %rax	# sv, tmp186
	movq	(%rax), %rax	# sv_18->sv_any, D.23938
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_78].xgv_gp, D.23946
	movq	PL_curcop(%rip), %rdx	# PL_curcop, PL_curcop.292
	movl	72(%rdx), %edx	# PL_curcop.292_80->cop_line, D.23936
	movl	%edx, 72(%rax)	# D.23936, _79->gp_line
	.loc 1 831 0
	movq	-40(%rbp), %rax	# sv, tmp187
	movq	(%rax), %rax	# sv_18->sv_any, D.23938
	movq	56(%rax), %rax	# MEM[(struct XPVGV *)_82].xgv_gp, D.23946
	movq	-40(%rbp), %rdx	# sv, tmp188
	movq	%rdx, 48(%rax)	# tmp188, _83->gp_egv
	.loc 1 832 0
	movq	-40(%rbp), %rax	# sv, tmp189
	movq	(%rax), %rax	# sv_18->sv_any, D.23938
	movq	-40(%rbp), %rdx	# sv, tmp190
	movq	(%rdx), %rdx	# sv_18->sv_any, D.23938
	movzbl	88(%rdx), %edx	# MEM[(struct XPVGV *)_85].xgv_flags, D.23934
	orl	$2, %edx	#, D.23934
	movb	%dl, 88(%rax)	# D.23934, MEM[(struct XPVGV *)_84].xgv_flags
.LBE40:
	.loc 1 834 0
	jmp	.L319	#
.L328:
	jmp	.L319	#
.L311:
	.loc 1 836 0
	movq	-40(%rbp), %rax	# sv, tmp191
	movl	12(%rax), %eax	# sv_18->sv_flags, D.23936
	movzbl	%al, %eax	# D.23936, D.23936
	cmpl	$3, %eax	#, D.23936
	jbe	.L329	#,
	.loc 1 836 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp192
	movq	(%rax), %rax	# sv_18->sv_any, D.23938
	movq	(%rax), %rax	# MEM[(struct XPV *)_90].xpv_pv, D.23939
	testq	%rax, %rax	# D.23939
	je	.L329	#,
	movq	-40(%rbp), %rax	# sv, tmp193
	movq	(%rax), %rax	# sv_18->sv_any, D.23938
	movq	16(%rax), %rax	# MEM[(struct XPV *)_92].xpv_len, D.23947
	testq	%rax, %rax	# D.23947
	je	.L329	#,
	.loc 1 837 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp194
	movl	12(%rax), %eax	# sv_18->sv_flags, D.23936
	andl	$2097152, %eax	#, D.23936
	testl	%eax, %eax	# D.23936
	je	.L331	#,
	.loc 1 837 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp195
	movq	%rax, %rdi	# tmp195,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23941
	je	.L331	#,
	.loc 1 837 0
	nop
.L331:
	.loc 1 838 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp196
	movq	(%rax), %rax	# sv_18->sv_any, D.23938
	movq	(%rax), %rax	# MEM[(struct XPV *)_99].xpv_pv, D.23939
	movq	%rax, %rdi	# D.23939,
	call	Perl_safesysfree	#
	.loc 1 839 0
	movq	-40(%rbp), %rax	# sv, tmp197
	movq	(%rax), %rax	# sv_18->sv_any, D.23938
	movq	$0, (%rax)	#, MEM[(struct XPV *)_101].xpv_pv
	.loc 1 840 0
	movq	-40(%rbp), %rax	# sv, tmp198
	movq	(%rax), %rax	# sv_18->sv_any, D.23938
	movq	$0, 16(%rax)	#, MEM[(struct XPV *)_102].xpv_len
.L329:
	.loc 1 842 0
	movq	-40(%rbp), %rax	# sv, tmp199
	movl	12(%rax), %eax	# sv_18->sv_flags, D.23936
	andl	$1223753727, %eax	#, D.23936
	movl	%eax, %edx	# D.23936, D.23936
	movq	-40(%rbp), %rax	# sv, tmp200
	movl	%edx, 12(%rax)	# D.23936, sv_18->sv_flags
	movq	-40(%rbp), %rax	# sv, tmp201
	movl	12(%rax), %eax	# sv_18->sv_flags, D.23936
	andl	$2097152, %eax	#, D.23936
	testl	%eax, %eax	# D.23936
	je	.L333	#,
	.loc 1 842 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp202
	movq	%rax, %rdi	# tmp202,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.23941
	je	.L333	#,
	.loc 1 842 0
	nop
.L333:
	.loc 1 843 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp203
	movl	12(%rax), %eax	# sv_18->sv_flags, D.23936
	andl	$16384, %eax	#, D.23936
	testl	%eax, %eax	# D.23936
	je	.L319	#,
	.loc 1 843 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp204
	movq	%rax, %rdi	# tmp204,
	call	Perl_mg_set	#
	jmp	.L319	#
.L334:
	.loc 1 801 0 is_stmt 1
	nop
.L319:
	.loc 1 846 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_undef, (%rbx)	#, *sp_112
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.295
	movq	(%rax), %rax	# PL_op.295_113->op_next, D.23933
.L308:
	.loc 1 847 0
	addq	$32, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE27:
	.size	Perl_pp_undef, .-Perl_pp_undef
	.globl	Perl_pp_predec
	.type	Perl_pp_predec, @function
Perl_pp_predec:
.LFB28:
	.loc 1 850 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$8, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 851 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 852 0
	movq	(%rbx), %rax	# *sp_2, D.23951
	movl	12(%rax), %eax	# _3->sv_flags, D.23952
	movzbl	%al, %eax	# D.23952, D.23952
	cmpl	$9, %eax	#, D.23952
	jbe	.L336	#,
	.loc 1 853 0
	movl	$PL_no_modify, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L337	#
.L336:
	.loc 1 854 0
	movq	(%rbx), %rax	# *sp_2, D.23951
	movl	12(%rax), %eax	# _7->sv_flags, D.23952
	andl	$8388608, %eax	#, D.23952
	testl	%eax, %eax	# D.23952
	jne	.L338	#,
	.loc 1 854 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_2, D.23951
	movl	12(%rax), %eax	# _10->sv_flags, D.23952
	andl	$-2147418112, %eax	#, D.23952
	cmpl	$65536, %eax	#, D.23952
	jne	.L338	#,
	movq	(%rbx), %rax	# *sp_2, D.23951
	movl	12(%rax), %eax	# _13->sv_flags, D.23952
	andl	$131072, %eax	#, D.23952
	testl	%eax, %eax	# D.23952
	jne	.L338	#,
	movq	(%rbx), %rax	# *sp_2, D.23951
	movl	12(%rax), %eax	# _16->sv_flags, D.23952
	andl	$262144, %eax	#, D.23952
	testl	%eax, %eax	# D.23952
	jne	.L338	#,
	.loc 1 855 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_2, D.23951
	movq	(%rax), %rax	# _19->sv_any, D.23953
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_20].xiv_iv, D.23954
	movabsq	$-9223372036854775808, %rax	#, tmp94
	cmpq	%rax, %rdx	# tmp94, D.23954
	je	.L338	#,
	.loc 1 857 0
	movq	(%rbx), %rax	# *sp_2, D.23951
	movq	(%rax), %rax	# _22->sv_any, D.23953
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_23].xiv_iv, D.23954
	subq	$1, %rdx	#, D.23954
	movq	%rdx, 24(%rax)	# D.23954, MEM[(struct XPVIV *)_23].xiv_iv
	.loc 1 858 0
	movq	(%rbx), %rax	# *sp_2, D.23951
	movq	(%rbx), %rdx	# *sp_2, D.23951
	movl	12(%rdx), %edx	# _27->sv_flags, D.23952
	andl	$-100663297, %edx	#, D.23952
	movl	%edx, 12(%rax)	# D.23952, _26->sv_flags
	jmp	.L339	#
.L338:
	.loc 1 861 0
	movq	(%rbx), %rax	# *sp_2, D.23951
	movq	%rax, %rdi	# D.23951,
	call	Perl_sv_dec	#
.L339:
	.loc 1 862 0
	movq	(%rbx), %rax	# *sp_2, D.23951
	movl	12(%rax), %eax	# _31->sv_flags, D.23952
	andl	$16384, %eax	#, D.23952
	testl	%eax, %eax	# D.23952
	je	.L340	#,
	.loc 1 862 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_2, D.23951
	movq	%rax, %rdi	# D.23951,
	call	Perl_mg_set	#
.L340:
	.loc 1 863 0 is_stmt 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.296
	movq	(%rax), %rax	# PL_op.296_35->op_next, D.23950
.L337:
	.loc 1 864 0
	addq	$8, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE28:
	.size	Perl_pp_predec, .-Perl_pp_predec
	.globl	Perl_pp_postinc
	.type	Perl_pp_postinc, @function
Perl_pp_postinc:
.LFB29:
	.loc 1 867 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 868 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.297
	movq	PL_op(%rip), %rax	# PL_op, PL_op.298
	movq	24(%rax), %rax	# PL_op.298_4->op_targ, D.23956
	salq	$3, %rax	#, D.23956
	addq	%rdx, %rax	# PL_curpad.297, D.23957
	movq	(%rax), %rax	# *_7, tmp102
	movq	%rax, -24(%rbp)	# tmp102, targ
	.loc 1 869 0
	movq	(%rbx), %rax	# *sp_2, D.23958
	movl	12(%rax), %eax	# _9->sv_flags, D.23959
	movzbl	%al, %eax	# D.23959, D.23959
	cmpl	$9, %eax	#, D.23959
	jbe	.L342	#,
	.loc 1 870 0
	movl	$PL_no_modify, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L343	#
.L342:
	.loc 1 871 0
	movq	(%rbx), %rcx	# *sp_2, D.23958
	movq	-24(%rbp), %rax	# targ, tmp103
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# D.23958,
	movq	%rax, %rdi	# tmp103,
	call	Perl_sv_setsv_flags	#
	.loc 1 872 0
	movq	(%rbx), %rax	# *sp_2, D.23958
	movl	12(%rax), %eax	# _14->sv_flags, D.23959
	andl	$8388608, %eax	#, D.23959
	testl	%eax, %eax	# D.23959
	jne	.L344	#,
	.loc 1 872 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_2, D.23958
	movl	12(%rax), %eax	# _17->sv_flags, D.23959
	andl	$-2147418112, %eax	#, D.23959
	cmpl	$65536, %eax	#, D.23959
	jne	.L344	#,
	movq	(%rbx), %rax	# *sp_2, D.23958
	movl	12(%rax), %eax	# _20->sv_flags, D.23959
	andl	$131072, %eax	#, D.23959
	testl	%eax, %eax	# D.23959
	jne	.L344	#,
	movq	(%rbx), %rax	# *sp_2, D.23958
	movl	12(%rax), %eax	# _23->sv_flags, D.23959
	andl	$262144, %eax	#, D.23959
	testl	%eax, %eax	# D.23959
	jne	.L344	#,
	.loc 1 873 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_2, D.23958
	movq	(%rax), %rax	# _26->sv_any, D.23960
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_27].xiv_iv, D.23961
	movabsq	$9223372036854775807, %rax	#, tmp104
	cmpq	%rax, %rdx	# tmp104, D.23961
	je	.L344	#,
	.loc 1 875 0
	movq	(%rbx), %rax	# *sp_2, D.23958
	movq	(%rax), %rax	# _29->sv_any, D.23960
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_30].xiv_iv, D.23961
	addq	$1, %rdx	#, D.23961
	movq	%rdx, 24(%rax)	# D.23961, MEM[(struct XPVIV *)_30].xiv_iv
	.loc 1 876 0
	movq	(%rbx), %rax	# *sp_2, D.23958
	movq	(%rbx), %rdx	# *sp_2, D.23958
	movl	12(%rdx), %edx	# _34->sv_flags, D.23959
	andl	$-100663297, %edx	#, D.23959
	movl	%edx, 12(%rax)	# D.23959, _33->sv_flags
	jmp	.L345	#
.L344:
	.loc 1 879 0
	movq	(%rbx), %rax	# *sp_2, D.23958
	movq	%rax, %rdi	# D.23958,
	call	Perl_sv_inc	#
.L345:
	.loc 1 880 0
	movq	(%rbx), %rax	# *sp_2, D.23958
	movl	12(%rax), %eax	# _38->sv_flags, D.23959
	andl	$16384, %eax	#, D.23959
	testl	%eax, %eax	# D.23959
	je	.L346	#,
	.loc 1 880 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_2, D.23958
	movq	%rax, %rdi	# D.23958,
	call	Perl_mg_set	#
.L346:
	.loc 1 882 0 is_stmt 1
	movq	-24(%rbp), %rax	# targ, tmp105
	movl	12(%rax), %eax	# targ_8->sv_flags, D.23959
	andl	$118423552, %eax	#, D.23959
	testl	%eax, %eax	# D.23959
	jne	.L347	#,
	.loc 1 883 0
	movq	-24(%rbp), %rax	# targ, tmp106
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp106,
	call	Perl_sv_setiv	#
.L347:
	.loc 1 884 0
	movq	-24(%rbp), %rax	# targ, tmp107
	movq	%rax, (%rbx)	# tmp107, *sp_2
	.loc 1 885 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.299
	movq	(%rax), %rax	# PL_op.299_44->op_next, D.23955
.L343:
	.loc 1 886 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE29:
	.size	Perl_pp_postinc, .-Perl_pp_postinc
	.globl	Perl_pp_postdec
	.type	Perl_pp_postdec, @function
Perl_pp_postdec:
.LFB30:
	.loc 1 889 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 890 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.300
	movq	PL_op(%rip), %rax	# PL_op, PL_op.301
	movq	24(%rax), %rax	# PL_op.301_4->op_targ, D.23963
	salq	$3, %rax	#, D.23963
	addq	%rdx, %rax	# PL_curpad.300, D.23964
	movq	(%rax), %rax	# *_7, tmp100
	movq	%rax, -24(%rbp)	# tmp100, targ
	.loc 1 891 0
	movq	(%rbx), %rax	# *sp_2, D.23965
	movl	12(%rax), %eax	# _9->sv_flags, D.23966
	movzbl	%al, %eax	# D.23966, D.23966
	cmpl	$9, %eax	#, D.23966
	jbe	.L349	#,
	.loc 1 892 0
	movl	$PL_no_modify, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L350	#
.L349:
	.loc 1 893 0
	movq	(%rbx), %rcx	# *sp_2, D.23965
	movq	-24(%rbp), %rax	# targ, tmp101
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# D.23965,
	movq	%rax, %rdi	# tmp101,
	call	Perl_sv_setsv_flags	#
	.loc 1 894 0
	movq	(%rbx), %rax	# *sp_2, D.23965
	movl	12(%rax), %eax	# _14->sv_flags, D.23966
	andl	$8388608, %eax	#, D.23966
	testl	%eax, %eax	# D.23966
	jne	.L351	#,
	.loc 1 894 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_2, D.23965
	movl	12(%rax), %eax	# _17->sv_flags, D.23966
	andl	$-2147418112, %eax	#, D.23966
	cmpl	$65536, %eax	#, D.23966
	jne	.L351	#,
	movq	(%rbx), %rax	# *sp_2, D.23965
	movl	12(%rax), %eax	# _20->sv_flags, D.23966
	andl	$131072, %eax	#, D.23966
	testl	%eax, %eax	# D.23966
	jne	.L351	#,
	movq	(%rbx), %rax	# *sp_2, D.23965
	movl	12(%rax), %eax	# _23->sv_flags, D.23966
	andl	$262144, %eax	#, D.23966
	testl	%eax, %eax	# D.23966
	jne	.L351	#,
	.loc 1 895 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_2, D.23965
	movq	(%rax), %rax	# _26->sv_any, D.23967
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_27].xiv_iv, D.23968
	movabsq	$-9223372036854775808, %rax	#, tmp102
	cmpq	%rax, %rdx	# tmp102, D.23968
	je	.L351	#,
	.loc 1 897 0
	movq	(%rbx), %rax	# *sp_2, D.23965
	movq	(%rax), %rax	# _29->sv_any, D.23967
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_30].xiv_iv, D.23968
	subq	$1, %rdx	#, D.23968
	movq	%rdx, 24(%rax)	# D.23968, MEM[(struct XPVIV *)_30].xiv_iv
	.loc 1 898 0
	movq	(%rbx), %rax	# *sp_2, D.23965
	movq	(%rbx), %rdx	# *sp_2, D.23965
	movl	12(%rdx), %edx	# _34->sv_flags, D.23966
	andl	$-100663297, %edx	#, D.23966
	movl	%edx, 12(%rax)	# D.23966, _33->sv_flags
	jmp	.L352	#
.L351:
	.loc 1 901 0
	movq	(%rbx), %rax	# *sp_2, D.23965
	movq	%rax, %rdi	# D.23965,
	call	Perl_sv_dec	#
.L352:
	.loc 1 902 0
	movq	(%rbx), %rax	# *sp_2, D.23965
	movl	12(%rax), %eax	# _38->sv_flags, D.23966
	andl	$16384, %eax	#, D.23966
	testl	%eax, %eax	# D.23966
	je	.L353	#,
	.loc 1 902 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_2, D.23965
	movq	%rax, %rdi	# D.23965,
	call	Perl_mg_set	#
.L353:
	.loc 1 903 0 is_stmt 1
	movq	-24(%rbp), %rax	# targ, tmp103
	movq	%rax, (%rbx)	# tmp103, *sp_2
	.loc 1 904 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.302
	movq	(%rax), %rax	# PL_op.302_42->op_next, D.23962
.L350:
	.loc 1 905 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE30:
	.size	Perl_pp_postdec, .-Perl_pp_postdec
	.globl	Perl_pp_pow
	.type	Perl_pp_pow, @function
Perl_pp_pow:
.LFB31:
	.loc 1 910 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r15	#
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	.loc 1 911 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.304
	movzbl	36(%rax), %eax	# PL_op.304_28->op_flags, D.23970
	movzbl	%al, %eax	# D.23970, D.23971
	andl	$64, %eax	#, D.23971
	testl	%eax, %eax	# D.23971
	je	.L355	#,
	.loc 1 911 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_27 + -8B], iftmp.303
	jmp	.L356	#
.L355:
	.loc 1 911 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.305
	movq	PL_op(%rip), %rax	# PL_op, PL_op.306
	movq	24(%rax), %rax	# PL_op.306_34->op_targ, D.23972
	salq	$3, %rax	#, D.23972
	addq	%rdx, %rax	# PL_curpad.305, D.23973
	movq	(%rax), %rax	# *_37, iftmp.303
.L356:
	.loc 1 911 0 discriminator 3
	movq	%rax, -120(%rbp)	# iftmp.303, targ
	.loc 1 913 0 is_stmt 1 discriminator 3
	movb	$0, -159(%rbp)	#, is_int
	.loc 1 915 0 discriminator 3
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.307
	testq	%rax, %rax	# PL_amagic_generation.307
	je	.L357	#,
.LBB41:
	.loc 1 915 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_27, tmp259
	movq	%rax, -112(%rbp)	# tmp259, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_27 + -8B], tmp260
	movq	%rax, -104(%rbp)	# tmp260, left
	movq	-104(%rbp), %rax	# left, tmp261
	movl	12(%rax), %eax	# left_43->sv_flags, D.23974
	andl	$268435456, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L358	#,
	.loc 1 915 0 discriminator 2
	movq	-112(%rbp), %rax	# right, tmp262
	movl	12(%rax), %eax	# right_42->sv_flags, D.23974
	andl	$268435456, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L357	#,
.L358:
	.loc 1 915 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.309
	movzbl	36(%rax), %eax	# PL_op.309_48->op_flags, D.23970
	movzbl	%al, %eax	# D.23970, D.23971
	andl	$64, %eax	#, D.23971
	testl	%eax, %eax	# D.23971
	je	.L359	#,
	movl	$4, %eax	#, iftmp.308
	jmp	.L360	#
.L359:
	.loc 1 915 0 discriminator 2
	movl	$0, %eax	#, iftmp.308
.L360:
	.loc 1 915 0 discriminator 3
	movq	-112(%rbp), %rsi	# right, tmp263
	movq	-104(%rbp), %rdi	# left, tmp264
	movl	%eax, %ecx	# iftmp.308,
	movl	$16, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -96(%rbp)	# tmp265, tmpsv
	cmpq	$0, -96(%rbp)	#, tmpsv
	je	.L357	#,
	.loc 1 915 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.310
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.311
	movzbl	36(%rax), %eax	# PL_op.311_58->op_flags, D.23970
	movzbl	%al, %eax	# D.23970, D.23971
	andl	$64, %eax	#, D.23971
	testl	%eax, %eax	# D.23971
	jne	.L361	#,
	.loc 1 915 0 discriminator 2
	movq	-120(%rbp), %rax	# targ, tmp266
	movl	12(%rax), %eax	# targ_39->sv_flags, D.23974
	andl	$1024, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L362	#,
.L361:
	.loc 1 915 0 discriminator 1
	movq	-96(%rbp), %rcx	# tmpsv, tmp267
	movq	-120(%rbp), %rax	# targ, tmp268
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp267,
	movq	%rax, %rdi	# tmp268,
	call	Perl_sv_setsv_flags	#
.LBB42:
	movq	-120(%rbp), %rax	# targ, tmp269
	movl	12(%rax), %eax	# targ_39->sv_flags, D.23974
	andl	$16384, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L363	#,
	movq	-120(%rbp), %rax	# targ, tmp270
	movq	%rax, %rdi	# tmp270,
	call	Perl_mg_set	#
.L363:
	.loc 1 915 0 discriminator 2
	movq	-120(%rbp), %rax	# targ, tmp271
	movq	%rax, (%rbx)	# tmp271, *sp_57
.LBE42:
	jmp	.L364	#
.L362:
	.loc 1 915 0 discriminator 1
	movq	-96(%rbp), %rax	# tmpsv, tmp272
	movq	%rax, (%rbx)	# tmp272, *sp_57
.L364:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.312
	movq	(%rax), %rax	# PL_op.312_67->op_next, D.23969
	jmp	.L365	#
.L357:
.LBE41:
	.loc 1 921 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.23973
	movq	(%rax), %rax	# *_69, D.23975
	movl	12(%rax), %eax	# _70->sv_flags, D.23974
	andl	$16777216, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L366	#,
	.loc 1 921 0 is_stmt 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.23973
	movq	(%rax), %rax	# *_73, D.23975
	movl	12(%rax), %eax	# _74->sv_flags, D.23974
	andl	$131072, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L367	#,
	.loc 1 921 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.23973
	movq	(%rax), %rax	# *_77, D.23975
	movl	12(%rax), %eax	# _78->sv_flags, D.23974
	andl	$262144, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L366	#,
.L367:
	.loc 1 921 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.23973
	movq	(%rax), %rax	# *_81, D.23975
	movl	12(%rax), %eax	# _82->sv_flags, D.23974
	andl	$65536, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L366	#,
	.loc 1 921 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.23973
	movq	(%rax), %rax	# *_89, D.23975
	movq	%rax, %rdi	# D.23975,
	call	Perl_sv_2iv	#
.L366:
	.loc 1 922 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.23973
	movq	(%rax), %rax	# *_92, D.23975
	movl	12(%rax), %eax	# _93->sv_flags, D.23974
	andl	$65536, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L369	#,
.LBB43:
	.loc 1 923 0
	leaq	-8(%rbx), %rax	#, D.23973
	movq	(%rax), %rax	# *_96, D.23975
	movl	12(%rax), %eax	# _97->sv_flags, D.23974
	andl	$-2147418112, %eax	#, D.23974
	cmpl	$-2147418112, %eax	#, D.23974
	sete	%al	#, D.23977
	movb	%al, -158(%rbp)	# D.23977, baseuok
	.loc 1 926 0
	cmpb	$0, -158(%rbp)	#, baseuok
	je	.L370	#,
	.loc 1 927 0
	leaq	-8(%rbx), %rax	#, D.23973
	movq	(%rax), %rax	# *_102, D.23975
	movq	(%rax), %rax	# _103->sv_any, D.23976
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_104].xuv_uv, tmp273
	movq	%rax, -152(%rbp)	# tmp273, baseuv
	jmp	.L371	#
.L370:
.LBB44:
	.loc 1 929 0
	leaq	-8(%rbx), %rax	#, D.23973
	movq	(%rax), %rax	# *_106, D.23975
	movq	(%rax), %rax	# _107->sv_any, D.23976
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_108].xiv_iv, tmp274
	movq	%rax, -88(%rbp)	# tmp274, iv
	.loc 1 930 0
	cmpq	$0, -88(%rbp)	#, iv
	js	.L372	#,
	.loc 1 931 0
	movq	-88(%rbp), %rax	# iv, tmp275
	movq	%rax, -152(%rbp)	# tmp275, baseuv
	.loc 1 932 0
	movb	$1, -158(%rbp)	#, baseuok
	jmp	.L371	#
.L372:
	.loc 1 934 0
	movq	-88(%rbp), %rax	# iv, tmp276
	negq	%rax	# D.23978
	movq	%rax, -152(%rbp)	# D.23978, baseuv
.L371:
.LBE44:
	.loc 1 937 0
	movq	(%rbx), %rax	# *sp_27, D.23975
	movl	12(%rax), %eax	# _114->sv_flags, D.23974
	andl	$16777216, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L373	#,
	.loc 1 937 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_27, D.23975
	movl	12(%rax), %eax	# _117->sv_flags, D.23974
	andl	$131072, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L374	#,
	.loc 1 937 0 discriminator 2
	movq	(%rbx), %rax	# *sp_27, D.23975
	movl	12(%rax), %eax	# _120->sv_flags, D.23974
	andl	$262144, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L373	#,
.L374:
	.loc 1 937 0 discriminator 1
	movq	(%rbx), %rax	# *sp_27, D.23975
	movl	12(%rax), %eax	# _123->sv_flags, D.23974
	andl	$65536, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L373	#,
	.loc 1 937 0 discriminator 2
	movq	(%rbx), %rax	# *sp_27, D.23975
	movq	%rax, %rdi	# D.23975,
	call	Perl_sv_2iv	#
.L373:
	.loc 1 938 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_27, D.23975
	movl	12(%rax), %eax	# _131->sv_flags, D.23974
	andl	$65536, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L369	#,
.LBB45:
	.loc 1 941 0
	movq	(%rbx), %rax	# *sp_27, D.23975
	movl	12(%rax), %eax	# _134->sv_flags, D.23974
	andl	$-2147418112, %eax	#, D.23974
	cmpl	$-2147418112, %eax	#, D.23974
	jne	.L376	#,
	.loc 1 942 0
	movq	(%rbx), %rax	# *sp_27, D.23975
	movq	(%rax), %rax	# _137->sv_any, D.23976
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_138].xuv_uv, tmp277
	movq	%rax, -144(%rbp)	# tmp277, power
	jmp	.L377	#
.L376:
.LBB46:
	.loc 1 944 0
	movq	(%rbx), %rax	# *sp_27, D.23975
	movq	(%rax), %rax	# _140->sv_any, D.23976
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_141].xiv_iv, tmp278
	movq	%rax, -80(%rbp)	# tmp278, iv
	.loc 1 945 0
	cmpq	$0, -80(%rbp)	#, iv
	js	.L378	#,
	.loc 1 946 0
	movq	-80(%rbp), %rax	# iv, tmp279
	movq	%rax, -144(%rbp)	# tmp279, power
	jmp	.L377	#
.L378:
	.loc 1 948 0
	jmp	.L369	#
.L377:
.LBE46:
	.loc 1 952 0
	movb	$1, -159(%rbp)	#, is_int
	.loc 1 955 0
	movq	-152(%rbp), %rax	# baseuv, tmp280
	subq	$1, %rax	#, D.23972
	andq	-152(%rbp), %rax	# baseuv, D.23972
	testq	%rax, %rax	# D.23972
	jne	.L379	#,
.LBB47:
	.loc 1 964 0
	movabsq	$4607182418800017408, %rax	#, tmp281
	movq	%rax, -136(%rbp)	# tmp281, result
	.loc 1 965 0
	cmpb	$0, -158(%rbp)	#, baseuok
	je	.L380	#,
	.loc 1 965 0 is_stmt 0 discriminator 1
	movq	-152(%rbp), %rax	# baseuv, tmp282
	testq	%rax, %rax	# tmp282
	js	.L381	#,
	cvtsi2sdq	%rax, %xmm0	# tmp282, iftmp.315
	jmp	.L383	#
.L381:
	movq	%rax, %rdx	# tmp282, tmp284
	shrq	%rdx	# tmp284
	andl	$1, %eax	#, tmp285
	orq	%rax, %rdx	# tmp285, tmp284
	cvtsi2sdq	%rdx, %xmm0	# tmp284, tmp283
	addsd	%xmm0, %xmm0	# tmp283, iftmp.315
	jmp	.L383	#
.L380:
	.loc 1 965 0 discriminator 2
	movq	-152(%rbp), %rax	# baseuv, tmp286
	testq	%rax, %rax	# tmp286
	js	.L384	#,
	cvtsi2sdq	%rax, %xmm0	# tmp286, D.23979
	jmp	.L385	#
.L384:
	movq	%rax, %rdx	# tmp286, tmp288
	shrq	%rdx	# tmp288
	andl	$1, %eax	#, tmp289
	orq	%rax, %rdx	# tmp289, tmp288
	cvtsi2sdq	%rdx, %xmm0	# tmp288, tmp287
	addsd	%xmm0, %xmm0	# tmp287, D.23979
.L385:
	movsd	.LC30(%rip), %xmm1	#, tmp290
	xorpd	%xmm1, %xmm0	# tmp290, iftmp.315
.L383:
	.loc 1 965 0 discriminator 3
	movsd	%xmm0, -128(%rbp)	# iftmp.315, base
	.loc 1 966 0 is_stmt 1 discriminator 3
	movl	$0, -156(%rbp)	#, n
	.loc 1 968 0 discriminator 3
	jmp	.L386	#
.L389:
.LBB48:
	.loc 1 971 0
	movl	-156(%rbp), %eax	# n, tmp291
	movl	$1, %edx	#, tmp292
	movl	%eax, %ecx	# tmp291, tmp341
	salq	%cl, %rdx	# tmp341, tmp293
	movq	%rdx, %rax	# tmp293, tmp293
	movq	%rax, -72(%rbp)	# tmp293, bit
	.loc 1 972 0
	movq	-72(%rbp), %rax	# bit, tmp294
	movq	-144(%rbp), %rdx	# power, tmp295
	andq	%rdx, %rax	# tmp295, D.23972
	testq	%rax, %rax	# D.23972
	je	.L387	#,
	.loc 1 973 0
	movsd	-136(%rbp), %xmm0	# result, tmp297
	mulsd	-128(%rbp), %xmm0	# base, tmp296
	movsd	%xmm0, -136(%rbp)	# tmp296, result
	.loc 1 975 0
	movq	-72(%rbp), %rax	# bit, tmp298
	subq	%rax, -144(%rbp)	# tmp298, power
	.loc 1 977 0
	cmpq	$0, -144(%rbp)	#, power
	jne	.L387	#,
	.loc 1 977 0 is_stmt 0 discriminator 1
	jmp	.L388	#
.L387:
.LBE48:
	.loc 1 968 0 is_stmt 1
	movsd	-128(%rbp), %xmm0	# base, tmp300
	mulsd	-128(%rbp), %xmm0	# base, tmp299
	movsd	%xmm0, -128(%rbp)	# tmp299, base
	addl	$1, -156(%rbp)	#, n
.L386:
	.loc 1 968 0 is_stmt 0 discriminator 1
	cmpq	$0, -144(%rbp)	#, power
	jne	.L389	#,
.L388:
	.loc 1 980 0 is_stmt 1
	subq	$8, %rbx	#, sp
.LBB49:
	.loc 1 981 0
	movq	-136(%rbp), %rax	# result, tmp301
	movq	-120(%rbp), %rdx	# targ, tmp302
	movq	%rax, -168(%rbp)	# tmp301, %sfp
	movsd	-168(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp302,
	call	Perl_sv_setnv	#
.LBB50:
	movq	-120(%rbp), %rax	# targ, tmp303
	movl	12(%rax), %eax	# targ_39->sv_flags, D.23974
	andl	$16384, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L390	#,
	.loc 1 981 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# targ, tmp304
	movq	%rax, %rdi	# tmp304,
	call	Perl_mg_set	#
.L390:
	.loc 1 981 0 discriminator 2
	movq	-120(%rbp), %rax	# targ, tmp305
	movq	%rax, (%rbx)	# tmp305, *sp_159
.LBE50:
.LBE49:
	.loc 1 982 0 is_stmt 1 discriminator 2
	movq	(%rbx), %rax	# *sp_159, D.23975
	movl	12(%rax), %eax	# _163->sv_flags, D.23974
	andl	$16777216, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L391	#,
	.loc 1 982 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_159, D.23975
	movl	12(%rax), %eax	# _166->sv_flags, D.23974
	andl	$131072, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L392	#,
	.loc 1 982 0 discriminator 2
	movq	(%rbx), %rax	# *sp_159, D.23975
	movl	12(%rax), %eax	# _169->sv_flags, D.23974
	andl	$262144, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L391	#,
.L392:
	.loc 1 982 0 discriminator 1
	movq	(%rbx), %rax	# *sp_159, D.23975
	movl	12(%rax), %eax	# _172->sv_flags, D.23974
	andl	$65536, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L391	#,
	.loc 1 982 0 discriminator 2
	movq	(%rbx), %rax	# *sp_159, D.23975
	movq	%rax, %rdi	# D.23975,
	call	Perl_sv_2iv	#
.L391:
	.loc 1 983 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.317
	movq	(%rax), %rax	# PL_op.317_180->op_next, D.23969
	jmp	.L365	#
.L379:
.LBE47:
.LBB51:
	.loc 1 985 0
	movl	$64, %r14d	#, highbit
	.loc 1 986 0
	movl	$0, %r13d	#, lowbit
	.loc 1 988 0
	movq	-144(%rbp), %rax	# power, tmp306
	andl	$1, %eax	#, tmp307
	movb	%al, -157(%rbp)	# tmp307, odd_power
	.loc 1 989 0
	jmp	.L394	#
.L396:
	.loc 1 990 0
	leal	0(%r13,%r12), %eax	#, D.23974
	movl	$1, %edx	#, tmp308
	movl	%eax, %ecx	# D.23971, tmp344
	sall	%cl, %edx	# tmp344, D.23971
	movl	%edx, %eax	# D.23971, D.23971
	negl	%eax	# D.23971
	cltq
	andq	-152(%rbp), %rax	# baseuv, D.23972
	testq	%rax, %rax	# D.23972
	je	.L395	#,
	.loc 1 991 0
	addl	%r12d, %r13d	# diff, lowbit
	jmp	.L394	#
.L395:
	.loc 1 993 0
	subl	%r12d, %r14d	# diff, highbit
.L394:
	.loc 1 989 0 discriminator 1
	movl	%r14d, %eax	# highbit, D.23974
	subl	%r13d, %eax	# lowbit, D.23974
	shrl	%eax	# diff
	movl	%eax, %r12d	# diff, diff
	testl	%r12d, %r12d	# diff
	jne	.L396	#,
	.loc 1 996 0
	movl	%r14d, %eax	# highbit, D.23972
	imulq	-144(%rbp), %rax	# power, D.23972
	cmpq	$64, %rax	#, D.23972
	ja	.L369	#,
.LBB52:
	.loc 1 999 0
	movl	$1, %r12d	#, result
	.loc 1 1000 0
	movq	-152(%rbp), %r13	# baseuv, base
	.loc 1 1001 0
	movl	$0, %r14d	#, n
	.loc 1 1002 0
	jmp	.L397	#
.L400:
.LBB53:
	.loc 1 1003 0
	movl	$1, %eax	#, tmp309
	movl	%r14d, %ecx	# n, tmp348
	salq	%cl, %rax	# tmp348, bit
	movq	%rax, %r15	# bit, bit
	.loc 1 1004 0
	movq	%r15, %rax	# bit, D.23972
	andq	-144(%rbp), %rax	# power, D.23972
	testq	%rax, %rax	# D.23972
	je	.L398	#,
	.loc 1 1005 0
	imulq	%r13, %r12	# base, result
	.loc 1 1006 0
	subq	%r15, -144(%rbp)	# bit, power
	.loc 1 1007 0
	cmpq	$0, -144(%rbp)	#, power
	jne	.L398	#,
	.loc 1 1007 0 is_stmt 0 discriminator 1
	jmp	.L399	#
.L398:
.LBE53:
	.loc 1 1002 0 is_stmt 1
	imulq	%r13, %r13	# base, base
	addl	$1, %r14d	#, n
.L397:
	.loc 1 1002 0 is_stmt 0 discriminator 1
	cmpq	$0, -144(%rbp)	#, power
	jne	.L400	#,
.L399:
	.loc 1 1010 0 is_stmt 1
	subq	$8, %rbx	#, sp
	.loc 1 1011 0
	cmpb	$0, -158(%rbp)	#, baseuok
	jne	.L401	#,
	.loc 1 1011 0 is_stmt 0 discriminator 1
	cmpb	$0, -157(%rbp)	#, odd_power
	jne	.L402	#,
.L401:
.LBB54:
	.loc 1 1013 0 is_stmt 1
	movq	-120(%rbp), %rax	# targ, tmp310
	movq	%r12, %rsi	# result,
	movq	%rax, %rdi	# tmp310,
	call	Perl_sv_setuv	#
.LBB55:
	movq	-120(%rbp), %rax	# targ, tmp311
	movl	12(%rax), %eax	# targ_39->sv_flags, D.23974
	andl	$16384, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L403	#,
	.loc 1 1013 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# targ, tmp312
	movq	%rax, %rdi	# tmp312,
	call	Perl_mg_set	#
.L403:
	.loc 1 1013 0 discriminator 2
	movq	-120(%rbp), %rax	# targ, tmp313
	movq	%rax, (%rbx)	# tmp313, *sp_207
.LBE55:
.LBE54:
	jmp	.L404	#
.L402:
	.loc 1 1014 0 is_stmt 1
	movq	%r12, %rax	# result, result.318
	testq	%rax, %rax	# result.318
	js	.L405	#,
.LBB56:
	.loc 1 1016 0
	movq	%r12, %rax	# result, result.319
	negq	%rax	# D.23978
	movq	%rax, %rdx	# D.23978, D.23978
	movq	-120(%rbp), %rax	# targ, tmp314
	movq	%rdx, %rsi	# D.23978,
	movq	%rax, %rdi	# tmp314,
	call	Perl_sv_setiv	#
.LBB57:
	movq	-120(%rbp), %rax	# targ, tmp315
	movl	12(%rax), %eax	# targ_39->sv_flags, D.23974
	andl	$16384, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L406	#,
	.loc 1 1016 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# targ, tmp316
	movq	%rax, %rdi	# tmp316,
	call	Perl_mg_set	#
.L406:
	.loc 1 1016 0 discriminator 2
	movq	-120(%rbp), %rax	# targ, tmp317
	movq	%rax, (%rbx)	# tmp317, *sp_207
.LBE57:
.LBE56:
	jmp	.L404	#
.L405:
	.loc 1 1017 0 is_stmt 1
	movabsq	$-9223372036854775808, %rax	#, tmp318
	cmpq	%rax, %r12	# tmp318, result
	jne	.L407	#,
.LBB58:
	.loc 1 1019 0
	movq	-120(%rbp), %rax	# targ, tmp319
	movabsq	$-9223372036854775808, %rsi	#,
	movq	%rax, %rdi	# tmp319,
	call	Perl_sv_setiv	#
.LBB59:
	movq	-120(%rbp), %rax	# targ, tmp320
	movl	12(%rax), %eax	# targ_39->sv_flags, D.23974
	andl	$16384, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L408	#,
	.loc 1 1019 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# targ, tmp321
	movq	%rax, %rdi	# tmp321,
	call	Perl_mg_set	#
.L408:
	.loc 1 1019 0 discriminator 2
	movq	-120(%rbp), %rax	# targ, tmp322
	movq	%rax, (%rbx)	# tmp322, *sp_207
.LBE59:
.LBE58:
	jmp	.L404	#
.L407:
.LBB60:
	.loc 1 1022 0 is_stmt 1
	testq	%r12, %r12	# result
	js	.L409	#,
	cvtsi2sdq	%r12, %xmm0	# result, D.23979
	jmp	.L410	#
.L409:
	movq	%r12, %rax	# result, tmp324
	shrq	%rax	# tmp324
	movq	%r12, %rdx	# result, tmp325
	andl	$1, %edx	#, tmp325
	orq	%rdx, %rax	# tmp325, tmp324
	cvtsi2sdq	%rax, %xmm0	# tmp324, tmp323
	addsd	%xmm0, %xmm0	# tmp323, D.23979
.L410:
	movsd	.LC30(%rip), %xmm1	#, tmp326
	xorpd	%xmm1, %xmm0	# tmp326, D.23979
	movq	-120(%rbp), %rax	# targ, tmp327
	movq	%rax, %rdi	# tmp327,
	call	Perl_sv_setnv	#
.LBB61:
	movq	-120(%rbp), %rax	# targ, tmp328
	movl	12(%rax), %eax	# targ_39->sv_flags, D.23974
	andl	$16384, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L411	#,
	.loc 1 1022 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# targ, tmp329
	movq	%rax, %rdi	# tmp329,
	call	Perl_mg_set	#
.L411:
	.loc 1 1022 0 discriminator 2
	movq	-120(%rbp), %rax	# targ, tmp330
	movq	%rax, (%rbx)	# tmp330, *sp_207
.L404:
.LBE61:
.LBE60:
	.loc 1 1023 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.320
	movq	(%rax), %rax	# PL_op.320_225->op_next, D.23969
	jmp	.L365	#
.L369:
.LBE52:
.LBE51:
.LBE45:
.LBE43:
.LBB62:
	.loc 1 1032 0
	movq	%rbx, %rax	# sp, sp.321
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.321_227, PL_Sv.322
	movq	%rax, PL_Sv(%rip)	# PL_Sv.322, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.324
	movl	12(%rax), %eax	# PL_Sv.324_230->sv_flags, D.23974
	andl	$131072, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L412	#,
	.loc 1 1032 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.325
	movq	(%rax), %rax	# PL_Sv.325_233->sv_any, D.23976
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_234].xnv_nv, iftmp.323
	jmp	.L413	#
.L412:
	.loc 1 1032 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.326
	movq	%rax, %rdi	# PL_Sv.326,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -168(%rbp)	#, %sfp
	movq	-168(%rbp), %rax	# %sfp, iftmp.323
.L413:
	.loc 1 1032 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.323, right
	movq	(%rbx), %rax	# *sp_228, D.23975
	movl	12(%rax), %eax	# _239->sv_flags, D.23974
	andl	$131072, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L414	#,
	.loc 1 1032 0 discriminator 1
	movq	(%rbx), %rax	# *sp_228, D.23975
	movq	(%rax), %rax	# _242->sv_any, D.23976
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_243].xnv_nv, iftmp.327
	jmp	.L415	#
.L414:
	.loc 1 1032 0 discriminator 2
	movq	(%rbx), %rax	# *sp_228, D.23975
	movq	%rax, %rdi	# D.23975,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -168(%rbp)	#, %sfp
	movq	-168(%rbp), %rax	# %sfp, iftmp.327
.L415:
	.loc 1 1032 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.327, left
.LBB63:
	.loc 1 1033 0 is_stmt 1 discriminator 3
	movq	-64(%rbp), %rdx	# right, tmp331
	movq	-56(%rbp), %rax	# left, tmp332
	movq	%rdx, -168(%rbp)	# tmp331, %sfp
	movsd	-168(%rbp), %xmm1	# %sfp,
	movq	%rax, -168(%rbp)	# tmp332, %sfp
	movsd	-168(%rbp), %xmm0	# %sfp,
	call	pow	#
	movsd	%xmm0, -168(%rbp)	#, %sfp
	movq	-168(%rbp), %rax	# %sfp, D.23979
	movq	-120(%rbp), %rdx	# targ, tmp333
	movq	%rax, -168(%rbp)	# D.23979, %sfp
	movsd	-168(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp333,
	call	Perl_sv_setnv	#
.LBB64:
	movq	-120(%rbp), %rax	# targ, tmp334
	movl	12(%rax), %eax	# targ_39->sv_flags, D.23974
	andl	$16384, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L416	#,
	.loc 1 1033 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# targ, tmp335
	movq	%rax, %rdi	# tmp335,
	call	Perl_mg_set	#
.L416:
	.loc 1 1033 0 discriminator 2
	movq	-120(%rbp), %rax	# targ, tmp336
	movq	%rax, (%rbx)	# tmp336, *sp_228
.LBE64:
.LBE63:
	.loc 1 1035 0 is_stmt 1 discriminator 2
	cmpb	$0, -159(%rbp)	#, is_int
	je	.L417	#,
	.loc 1 1036 0
	movq	(%rbx), %rax	# *sp_228, D.23975
	movl	12(%rax), %eax	# _252->sv_flags, D.23974
	andl	$16777216, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L417	#,
	.loc 1 1036 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_228, D.23975
	movl	12(%rax), %eax	# _255->sv_flags, D.23974
	andl	$131072, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L418	#,
	.loc 1 1036 0 discriminator 2
	movq	(%rbx), %rax	# *sp_228, D.23975
	movl	12(%rax), %eax	# _258->sv_flags, D.23974
	andl	$262144, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	je	.L417	#,
.L418:
	.loc 1 1036 0 discriminator 1
	movq	(%rbx), %rax	# *sp_228, D.23975
	movl	12(%rax), %eax	# _261->sv_flags, D.23974
	andl	$65536, %eax	#, D.23974
	testl	%eax, %eax	# D.23974
	jne	.L417	#,
	.loc 1 1036 0 discriminator 2
	movq	(%rbx), %rax	# *sp_228, D.23975
	movq	%rax, %rdi	# D.23975,
	call	Perl_sv_2iv	#
.L417:
	.loc 1 1038 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.329
	movq	(%rax), %rax	# PL_op.329_269->op_next, D.23969
.L365:
.LBE62:
	.loc 1 1040 0
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%r15	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE31:
	.size	Perl_pp_pow, .-Perl_pp_pow
	.globl	Perl_pp_multiply
	.type	Perl_pp_multiply, @function
Perl_pp_multiply:
.LFB32:
	.loc 1 1043 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$168, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 1044 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.331
	movzbl	36(%rax), %eax	# PL_op.331_14->op_flags, D.23982
	movzbl	%al, %eax	# D.23982, D.23983
	andl	$64, %eax	#, D.23983
	testl	%eax, %eax	# D.23983
	je	.L421	#,
	.loc 1 1044 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_13 + -8B], iftmp.330
	jmp	.L422	#
.L421:
	.loc 1 1044 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.332
	movq	PL_op(%rip), %rax	# PL_op, PL_op.333
	movq	24(%rax), %rax	# PL_op.333_20->op_targ, D.23984
	salq	$3, %rax	#, D.23984
	addq	%rdx, %rax	# PL_curpad.332, D.23985
	movq	(%rax), %rax	# *_23, iftmp.330
.L422:
	.loc 1 1044 0 discriminator 3
	movq	%rax, -128(%rbp)	# iftmp.330, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.334
	testq	%rax, %rax	# PL_amagic_generation.334
	je	.L423	#,
.LBB65:
	.loc 1 1044 0 discriminator 1
	movq	(%rbx), %rax	# *sp_13, tmp203
	movq	%rax, -120(%rbp)	# tmp203, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_13 + -8B], tmp204
	movq	%rax, -112(%rbp)	# tmp204, left
	movq	-112(%rbp), %rax	# left, tmp205
	movl	12(%rax), %eax	# left_28->sv_flags, D.23986
	andl	$268435456, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	jne	.L424	#,
	.loc 1 1044 0 discriminator 2
	movq	-120(%rbp), %rax	# right, tmp206
	movl	12(%rax), %eax	# right_27->sv_flags, D.23986
	andl	$268435456, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L423	#,
.L424:
	.loc 1 1044 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.336
	movzbl	36(%rax), %eax	# PL_op.336_33->op_flags, D.23982
	movzbl	%al, %eax	# D.23982, D.23983
	andl	$64, %eax	#, D.23983
	testl	%eax, %eax	# D.23983
	je	.L425	#,
	movl	$4, %eax	#, iftmp.335
	jmp	.L426	#
.L425:
	.loc 1 1044 0 discriminator 2
	movl	$0, %eax	#, iftmp.335
.L426:
	.loc 1 1044 0 discriminator 3
	movq	-120(%rbp), %rsi	# right, tmp207
	movq	-112(%rbp), %rdi	# left, tmp208
	movl	%eax, %ecx	# iftmp.335,
	movl	$10, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -104(%rbp)	# tmp209, tmpsv
	cmpq	$0, -104(%rbp)	#, tmpsv
	je	.L423	#,
	.loc 1 1044 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.337
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.338
	movzbl	36(%rax), %eax	# PL_op.338_43->op_flags, D.23982
	movzbl	%al, %eax	# D.23982, D.23983
	andl	$64, %eax	#, D.23983
	testl	%eax, %eax	# D.23983
	jne	.L427	#,
	.loc 1 1044 0 discriminator 2
	movq	-128(%rbp), %rax	# targ, tmp210
	movl	12(%rax), %eax	# targ_25->sv_flags, D.23986
	andl	$1024, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L428	#,
.L427:
	.loc 1 1044 0 discriminator 1
	movq	-104(%rbp), %rcx	# tmpsv, tmp211
	movq	-128(%rbp), %rax	# targ, tmp212
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp211,
	movq	%rax, %rdi	# tmp212,
	call	Perl_sv_setsv_flags	#
.LBB66:
	movq	-128(%rbp), %rax	# targ, tmp213
	movl	12(%rax), %eax	# targ_25->sv_flags, D.23986
	andl	$16384, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L429	#,
	movq	-128(%rbp), %rax	# targ, tmp214
	movq	%rax, %rdi	# tmp214,
	call	Perl_mg_set	#
.L429:
	.loc 1 1044 0 discriminator 2
	movq	-128(%rbp), %rax	# targ, tmp215
	movq	%rax, (%rbx)	# tmp215, *sp_42
.LBE66:
	jmp	.L430	#
.L428:
	.loc 1 1044 0 discriminator 1
	movq	-104(%rbp), %rax	# tmpsv, tmp216
	movq	%rax, (%rbx)	# tmp216, *sp_42
.L430:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.339
	movq	(%rax), %rax	# PL_op.339_52->op_next, D.23981
	jmp	.L431	#
.L423:
.LBE65:
	.loc 1 1046 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_13, D.23987
	movl	12(%rax), %eax	# _54->sv_flags, D.23986
	andl	$16777216, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	jne	.L432	#,
	.loc 1 1046 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_13, D.23987
	movl	12(%rax), %eax	# _57->sv_flags, D.23986
	andl	$131072, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	jne	.L433	#,
	.loc 1 1046 0 discriminator 2
	movq	(%rbx), %rax	# *sp_13, D.23987
	movl	12(%rax), %eax	# _60->sv_flags, D.23986
	andl	$262144, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L432	#,
.L433:
	.loc 1 1046 0 discriminator 1
	movq	(%rbx), %rax	# *sp_13, D.23987
	movl	12(%rax), %eax	# _63->sv_flags, D.23986
	andl	$65536, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	jne	.L432	#,
	.loc 1 1046 0 discriminator 2
	movq	(%rbx), %rax	# *sp_13, D.23987
	movq	%rax, %rdi	# D.23987,
	call	Perl_sv_2iv	#
.L432:
	.loc 1 1047 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_13, D.23987
	movl	12(%rax), %eax	# _71->sv_flags, D.23986
	andl	$65536, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L435	#,
	.loc 1 1052 0
	leaq	-8(%rbx), %rax	#, D.23985
	movq	(%rax), %rax	# *_74, D.23987
	movl	12(%rax), %eax	# _75->sv_flags, D.23986
	andl	$16777216, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	jne	.L436	#,
	.loc 1 1052 0 is_stmt 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.23985
	movq	(%rax), %rax	# *_78, D.23987
	movl	12(%rax), %eax	# _79->sv_flags, D.23986
	andl	$131072, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	jne	.L437	#,
	.loc 1 1052 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.23985
	movq	(%rax), %rax	# *_82, D.23987
	movl	12(%rax), %eax	# _83->sv_flags, D.23986
	andl	$262144, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L436	#,
.L437:
	.loc 1 1052 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.23985
	movq	(%rax), %rax	# *_86, D.23987
	movl	12(%rax), %eax	# _87->sv_flags, D.23986
	andl	$65536, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	jne	.L436	#,
	.loc 1 1052 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.23985
	movq	(%rax), %rax	# *_94, D.23987
	movq	%rax, %rdi	# D.23987,
	call	Perl_sv_2iv	#
.L436:
	.loc 1 1053 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.23985
	movq	(%rax), %rax	# *_97, D.23987
	movl	12(%rax), %eax	# _98->sv_flags, D.23986
	andl	$65536, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L435	#,
.LBB67:
	.loc 1 1054 0
	leaq	-8(%rbx), %rax	#, D.23985
	movq	(%rax), %rax	# *_101, D.23987
	movl	12(%rax), %eax	# _102->sv_flags, D.23986
	andl	$-2147418112, %eax	#, D.23986
	cmpl	$-2147418112, %eax	#, D.23986
	sete	%al	#, D.23989
	movb	%al, -154(%rbp)	# D.23989, auvok
	.loc 1 1055 0
	movq	(%rbx), %rax	# *sp_13, D.23987
	movl	12(%rax), %eax	# _107->sv_flags, D.23986
	andl	$-2147418112, %eax	#, D.23986
	cmpl	$-2147418112, %eax	#, D.23986
	sete	%al	#, D.23989
	movb	%al, -153(%rbp)	# D.23989, buvok
	.loc 1 1056 0
	movabsq	$-4294967296, %rax	#, tmp277
	movq	%rax, -96(%rbp)	# tmp277, topmask
	.loc 1 1057 0
	movl	$4294967295, %eax	#, tmp278
	movq	%rax, -88(%rbp)	# tmp278, botmask
	.loc 1 1063 0
	cmpb	$0, -154(%rbp)	#, auvok
	je	.L439	#,
	.loc 1 1064 0
	leaq	-8(%rbx), %rax	#, D.23985
	movq	(%rax), %rax	# *_114, D.23987
	movq	(%rax), %rax	# _115->sv_any, D.23988
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_116].xuv_uv, tmp217
	movq	%rax, -152(%rbp)	# tmp217, alow
	jmp	.L440	#
.L439:
.LBB68:
	.loc 1 1066 0
	leaq	-8(%rbx), %rax	#, D.23985
	movq	(%rax), %rax	# *_118, D.23987
	movq	(%rax), %rax	# _119->sv_any, D.23988
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_120].xiv_iv, tmp218
	movq	%rax, -80(%rbp)	# tmp218, aiv
	.loc 1 1067 0
	cmpq	$0, -80(%rbp)	#, aiv
	js	.L441	#,
	.loc 1 1068 0
	movq	-80(%rbp), %rax	# aiv, tmp219
	movq	%rax, -152(%rbp)	# tmp219, alow
	.loc 1 1069 0
	movb	$1, -154(%rbp)	#, auvok
	jmp	.L440	#
.L441:
	.loc 1 1071 0
	movq	-80(%rbp), %rax	# aiv, tmp220
	negq	%rax	# D.23990
	movq	%rax, -152(%rbp)	# D.23990, alow
.L440:
.LBE68:
	.loc 1 1074 0
	cmpb	$0, -153(%rbp)	#, buvok
	je	.L442	#,
	.loc 1 1075 0
	movq	(%rbx), %rax	# *sp_13, D.23987
	movq	(%rax), %rax	# _126->sv_any, D.23988
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_127].xuv_uv, tmp221
	movq	%rax, -136(%rbp)	# tmp221, blow
	jmp	.L443	#
.L442:
.LBB69:
	.loc 1 1077 0
	movq	(%rbx), %rax	# *sp_13, D.23987
	movq	(%rax), %rax	# _129->sv_any, D.23988
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_130].xiv_iv, tmp222
	movq	%rax, -72(%rbp)	# tmp222, biv
	.loc 1 1078 0
	cmpq	$0, -72(%rbp)	#, biv
	js	.L444	#,
	.loc 1 1079 0
	movq	-72(%rbp), %rax	# biv, tmp223
	movq	%rax, -136(%rbp)	# tmp223, blow
	.loc 1 1080 0
	movb	$1, -153(%rbp)	#, buvok
	jmp	.L443	#
.L444:
	.loc 1 1082 0
	movq	-72(%rbp), %rax	# biv, tmp224
	negq	%rax	# D.23990
	movq	%rax, -136(%rbp)	# D.23990, blow
.L443:
.LBE69:
	.loc 1 1087 0
	movq	-152(%rbp), %rax	# alow, tmp228
	shrq	$32, %rax	#, tmp227
	movq	%rax, -144(%rbp)	# tmp227, ahigh
	.loc 1 1088 0
	movq	-88(%rbp), %rax	# botmask, tmp229
	andq	%rax, -152(%rbp)	# tmp229, alow
	.loc 1 1089 0
	movq	-136(%rbp), %rax	# blow, tmp233
	shrq	$32, %rax	#, tmp232
	movq	%rax, -64(%rbp)	# tmp232, bhigh
	.loc 1 1090 0
	movq	-88(%rbp), %rax	# botmask, tmp234
	andq	%rax, -136(%rbp)	# tmp234, blow
	.loc 1 1091 0
	cmpq	$0, -144(%rbp)	#, ahigh
	je	.L445	#,
	.loc 1 1091 0 is_stmt 0 discriminator 1
	cmpq	$0, -64(%rbp)	#, bhigh
	je	.L445	#,
	jmp	.L435	#
.L445:
	.loc 1 1094 0 is_stmt 1
	cmpq	$0, -144(%rbp)	#, ahigh
	jne	.L446	#,
	.loc 1 1094 0 is_stmt 0 discriminator 1
	cmpq	$0, -64(%rbp)	#, bhigh
	jne	.L446	#,
.LBB70:
	.loc 1 1097 0 is_stmt 1
	movq	-152(%rbp), %rax	# alow, tmp236
	imulq	-136(%rbp), %rax	# blow, tmp235
	movq	%rax, -56(%rbp)	# tmp235, product
	.loc 1 1098 0
	movzbl	-154(%rbp), %eax	# auvok, tmp237
	cmpb	-153(%rbp), %al	# buvok, tmp237
	jne	.L447	#,
	.loc 1 1100 0
	subq	$8, %rbx	#, sp
.LBB71:
	.loc 1 1101 0
	movq	-56(%rbp), %rdx	# product, tmp238
	movq	-128(%rbp), %rax	# targ, tmp239
	movq	%rdx, %rsi	# tmp238,
	movq	%rax, %rdi	# tmp239,
	call	Perl_sv_setuv	#
.LBB72:
	movq	-128(%rbp), %rax	# targ, tmp240
	movl	12(%rax), %eax	# targ_25->sv_flags, D.23986
	andl	$16384, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L448	#,
	.loc 1 1101 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# targ, tmp241
	movq	%rax, %rdi	# tmp241,
	call	Perl_mg_set	#
.L448:
	.loc 1 1101 0 discriminator 2
	movq	-128(%rbp), %rax	# targ, tmp242
	movq	%rax, (%rbx)	# tmp242, *sp_141
.LBE72:
.LBE71:
	.loc 1 1102 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.342
	movq	(%rax), %rax	# PL_op.342_145->op_next, D.23981
	jmp	.L431	#
.L447:
	.loc 1 1103 0
	movabsq	$-9223372036854775808, %rax	#, tmp243
	cmpq	%rax, -56(%rbp)	# tmp243, product
	ja	.L449	#,
	.loc 1 1106 0
	subq	$8, %rbx	#, sp
.LBB73:
	.loc 1 1107 0
	movq	-56(%rbp), %rax	# product, product.343
	negq	%rax	# D.23990
	movq	%rax, %rdx	# D.23990, D.23990
	movq	-128(%rbp), %rax	# targ, tmp244
	movq	%rdx, %rsi	# D.23990,
	movq	%rax, %rdi	# tmp244,
	call	Perl_sv_setiv	#
.LBB74:
	movq	-128(%rbp), %rax	# targ, tmp245
	movl	12(%rax), %eax	# targ_25->sv_flags, D.23986
	andl	$16384, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L450	#,
	.loc 1 1107 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# targ, tmp246
	movq	%rax, %rdi	# tmp246,
	call	Perl_mg_set	#
.L450:
	.loc 1 1107 0 discriminator 2
	movq	-128(%rbp), %rax	# targ, tmp247
	movq	%rax, (%rbx)	# tmp247, *sp_147
.LBE74:
.LBE73:
	.loc 1 1108 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.344
	movq	(%rax), %rax	# PL_op.344_153->op_next, D.23981
	jmp	.L431	#
.L449:
.LBE70:
	.loc 1 1094 0
	jmp	.L435	#
.L446:
.LBB75:
	.loc 1 1113 0
	cmpq	$0, -64(%rbp)	#, bhigh
	je	.L451	#,
	.loc 1 1115 0
	movq	-64(%rbp), %rax	# bhigh, tmp248
	movq	%rax, -144(%rbp)	# tmp248, ahigh
	.loc 1 1116 0
	movq	-136(%rbp), %rax	# blow, tmp249
	movq	%rax, -64(%rbp)	# tmp249, bhigh
	.loc 1 1117 0
	movq	-152(%rbp), %rax	# alow, tmp250
	movq	%rax, -136(%rbp)	# tmp250, blow
	.loc 1 1118 0
	movq	-64(%rbp), %rax	# bhigh, tmp251
	movq	%rax, -152(%rbp)	# tmp251, alow
.L451:
	.loc 1 1122 0
	movq	-144(%rbp), %rax	# ahigh, tmp253
	imulq	-136(%rbp), %rax	# blow, tmp252
	movq	%rax, -48(%rbp)	# tmp252, product_middle
	.loc 1 1123 0
	movq	-96(%rbp), %rax	# topmask, tmp254
	movq	-48(%rbp), %rdx	# product_middle, tmp255
	andq	%rdx, %rax	# tmp255, D.23984
	testq	%rax, %rax	# D.23984
	jne	.L435	#,
.LBB76:
	.loc 1 1126 0
	salq	$32, -48(%rbp)	#, product_middle
	.loc 1 1127 0
	movq	-152(%rbp), %rax	# alow, tmp257
	imulq	-136(%rbp), %rax	# blow, tmp256
	movq	%rax, -40(%rbp)	# tmp256, product_low
	.loc 1 1132 0
	movq	-48(%rbp), %rax	# product_middle, tmp258
	addq	%rax, -40(%rbp)	# tmp258, product_low
	.loc 1 1133 0
	movq	-40(%rbp), %rax	# product_low, tmp259
	cmpq	-48(%rbp), %rax	# product_middle, tmp259
	jb	.L435	#,
	.loc 1 1135 0
	movzbl	-154(%rbp), %eax	# auvok, tmp260
	cmpb	-153(%rbp), %al	# buvok, tmp260
	jne	.L452	#,
	.loc 1 1137 0
	subq	$8, %rbx	#, sp
.LBB77:
	.loc 1 1138 0
	movq	-40(%rbp), %rdx	# product_low, tmp261
	movq	-128(%rbp), %rax	# targ, tmp262
	movq	%rdx, %rsi	# tmp261,
	movq	%rax, %rdi	# tmp262,
	call	Perl_sv_setuv	#
.LBB78:
	movq	-128(%rbp), %rax	# targ, tmp263
	movl	12(%rax), %eax	# targ_25->sv_flags, D.23986
	andl	$16384, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L453	#,
	.loc 1 1138 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# targ, tmp264
	movq	%rax, %rdi	# tmp264,
	call	Perl_mg_set	#
.L453:
	.loc 1 1138 0 discriminator 2
	movq	-128(%rbp), %rax	# targ, tmp265
	movq	%rax, (%rbx)	# tmp265, *sp_164
.LBE78:
.LBE77:
	.loc 1 1139 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.345
	movq	(%rax), %rax	# PL_op.345_168->op_next, D.23981
	jmp	.L431	#
.L452:
	.loc 1 1140 0
	movabsq	$-9223372036854775808, %rax	#, tmp266
	cmpq	%rax, -40(%rbp)	# tmp266, product_low
	ja	.L435	#,
	.loc 1 1143 0
	subq	$8, %rbx	#, sp
.LBB79:
	.loc 1 1144 0
	movq	-40(%rbp), %rax	# product_low, product_low.346
	negq	%rax	# D.23990
	movq	%rax, %rdx	# D.23990, D.23990
	movq	-128(%rbp), %rax	# targ, tmp267
	movq	%rdx, %rsi	# D.23990,
	movq	%rax, %rdi	# tmp267,
	call	Perl_sv_setiv	#
.LBB80:
	movq	-128(%rbp), %rax	# targ, tmp268
	movl	12(%rax), %eax	# targ_25->sv_flags, D.23986
	andl	$16384, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L454	#,
	.loc 1 1144 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# targ, tmp269
	movq	%rax, %rdi	# tmp269,
	call	Perl_mg_set	#
.L454:
	.loc 1 1144 0 discriminator 2
	movq	-128(%rbp), %rax	# targ, tmp270
	movq	%rax, (%rbx)	# tmp270, *sp_170
.LBE80:
.LBE79:
	.loc 1 1145 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.347
	movq	(%rax), %rax	# PL_op.347_176->op_next, D.23981
	jmp	.L431	#
.L435:
.LBE76:
.LBE75:
.LBE67:
.LBB81:
	.loc 1 1154 0
	movq	%rbx, %rax	# sp, sp.348
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.348_178, PL_Sv.349
	movq	%rax, PL_Sv(%rip)	# PL_Sv.349, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.351
	movl	12(%rax), %eax	# PL_Sv.351_181->sv_flags, D.23986
	andl	$131072, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L455	#,
	.loc 1 1154 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.352
	movq	(%rax), %rax	# PL_Sv.352_184->sv_any, D.23988
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_185].xnv_nv, iftmp.350
	jmp	.L456	#
.L455:
	.loc 1 1154 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.353
	movq	%rax, %rdi	# PL_Sv.353,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -168(%rbp)	#, %sfp
	movq	-168(%rbp), %rax	# %sfp, iftmp.350
.L456:
	.loc 1 1154 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.350, right
	movq	(%rbx), %rax	# *sp_179, D.23987
	movl	12(%rax), %eax	# _190->sv_flags, D.23986
	andl	$131072, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L457	#,
	.loc 1 1154 0 discriminator 1
	movq	(%rbx), %rax	# *sp_179, D.23987
	movq	(%rax), %rax	# _193->sv_any, D.23988
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_194].xnv_nv, iftmp.354
	jmp	.L458	#
.L457:
	.loc 1 1154 0 discriminator 2
	movq	(%rbx), %rax	# *sp_179, D.23987
	movq	%rax, %rdi	# D.23987,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -168(%rbp)	#, %sfp
	movq	-168(%rbp), %rax	# %sfp, iftmp.354
.L458:
	.loc 1 1154 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.354, left
.LBB82:
	.loc 1 1155 0 is_stmt 1 discriminator 3
	movsd	-24(%rbp), %xmm0	# left, tmp271
	mulsd	-32(%rbp), %xmm0	# right, D.23991
	movq	-128(%rbp), %rax	# targ, tmp272
	movq	%rax, %rdi	# tmp272,
	call	Perl_sv_setnv	#
.LBB83:
	movq	-128(%rbp), %rax	# targ, tmp273
	movl	12(%rax), %eax	# targ_25->sv_flags, D.23986
	andl	$16384, %eax	#, D.23986
	testl	%eax, %eax	# D.23986
	je	.L459	#,
	.loc 1 1155 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# targ, tmp274
	movq	%rax, %rdi	# tmp274,
	call	Perl_mg_set	#
.L459:
	.loc 1 1155 0 discriminator 2
	movq	-128(%rbp), %rax	# targ, tmp275
	movq	%rax, (%rbx)	# tmp275, *sp_179
.LBE83:
.LBE82:
	.loc 1 1156 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.355
	movq	(%rax), %rax	# PL_op.355_203->op_next, D.23981
.L431:
.LBE81:
	.loc 1 1158 0
	addq	$168, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE32:
	.size	Perl_pp_multiply, .-Perl_pp_multiply
	.section	.rodata
.LC31:
	.string	"Illegal division by zero"
	.text
	.globl	Perl_pp_divide
	.type	Perl_pp_divide, @function
Perl_pp_divide:
.LFB33:
	.loc 1 1161 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$120, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 1162 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.357
	movzbl	36(%rax), %eax	# PL_op.357_11->op_flags, D.23993
	movzbl	%al, %eax	# D.23993, D.23994
	andl	$64, %eax	#, D.23994
	testl	%eax, %eax	# D.23994
	je	.L461	#,
	.loc 1 1162 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_10 + -8B], iftmp.356
	jmp	.L462	#
.L461:
	.loc 1 1162 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.358
	movq	PL_op(%rip), %rax	# PL_op, PL_op.359
	movq	24(%rax), %rax	# PL_op.359_17->op_targ, D.23995
	salq	$3, %rax	#, D.23995
	addq	%rdx, %rax	# PL_curpad.358, D.23996
	movq	(%rax), %rax	# *_20, iftmp.356
.L462:
	.loc 1 1162 0 discriminator 3
	movq	%rax, -88(%rbp)	# iftmp.356, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.360
	testq	%rax, %rax	# PL_amagic_generation.360
	je	.L463	#,
.LBB84:
	.loc 1 1162 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, tmp200
	movq	%rax, -80(%rbp)	# tmp200, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_10 + -8B], tmp201
	movq	%rax, -72(%rbp)	# tmp201, left
	movq	-72(%rbp), %rax	# left, tmp202
	movl	12(%rax), %eax	# left_25->sv_flags, D.23997
	andl	$268435456, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	jne	.L464	#,
	.loc 1 1162 0 discriminator 2
	movq	-80(%rbp), %rax	# right, tmp203
	movl	12(%rax), %eax	# right_24->sv_flags, D.23997
	andl	$268435456, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L463	#,
.L464:
	.loc 1 1162 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.362
	movzbl	36(%rax), %eax	# PL_op.362_30->op_flags, D.23993
	movzbl	%al, %eax	# D.23993, D.23994
	andl	$64, %eax	#, D.23994
	testl	%eax, %eax	# D.23994
	je	.L465	#,
	movl	$4, %eax	#, iftmp.361
	jmp	.L466	#
.L465:
	.loc 1 1162 0 discriminator 2
	movl	$0, %eax	#, iftmp.361
.L466:
	.loc 1 1162 0 discriminator 3
	movq	-80(%rbp), %rsi	# right, tmp204
	movq	-72(%rbp), %rdi	# left, tmp205
	movl	%eax, %ecx	# iftmp.361,
	movl	$12, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -64(%rbp)	# tmp206, tmpsv
	cmpq	$0, -64(%rbp)	#, tmpsv
	je	.L463	#,
	.loc 1 1162 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.363
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.364
	movzbl	36(%rax), %eax	# PL_op.364_40->op_flags, D.23993
	movzbl	%al, %eax	# D.23993, D.23994
	andl	$64, %eax	#, D.23994
	testl	%eax, %eax	# D.23994
	jne	.L467	#,
	.loc 1 1162 0 discriminator 2
	movq	-88(%rbp), %rax	# targ, tmp207
	movl	12(%rax), %eax	# targ_22->sv_flags, D.23997
	andl	$1024, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L468	#,
.L467:
	.loc 1 1162 0 discriminator 1
	movq	-64(%rbp), %rcx	# tmpsv, tmp208
	movq	-88(%rbp), %rax	# targ, tmp209
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp208,
	movq	%rax, %rdi	# tmp209,
	call	Perl_sv_setsv_flags	#
.LBB85:
	movq	-88(%rbp), %rax	# targ, tmp210
	movl	12(%rax), %eax	# targ_22->sv_flags, D.23997
	andl	$16384, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L469	#,
	movq	-88(%rbp), %rax	# targ, tmp211
	movq	%rax, %rdi	# tmp211,
	call	Perl_mg_set	#
.L469:
	.loc 1 1162 0 discriminator 2
	movq	-88(%rbp), %rax	# targ, tmp212
	movq	%rax, (%rbx)	# tmp212, *sp_39
.LBE85:
	jmp	.L470	#
.L468:
	.loc 1 1162 0 discriminator 1
	movq	-64(%rbp), %rax	# tmpsv, tmp213
	movq	%rax, (%rbx)	# tmp213, *sp_39
.L470:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.365
	movq	(%rax), %rax	# PL_op.365_49->op_next, D.23992
	jmp	.L471	#
.L463:
.LBE84:
	.loc 1 1185 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_10, D.23998
	movl	12(%rax), %eax	# _51->sv_flags, D.23997
	andl	$16777216, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	jne	.L472	#,
	.loc 1 1185 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.23998
	movl	12(%rax), %eax	# _54->sv_flags, D.23997
	andl	$131072, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	jne	.L473	#,
	.loc 1 1185 0 discriminator 2
	movq	(%rbx), %rax	# *sp_10, D.23998
	movl	12(%rax), %eax	# _57->sv_flags, D.23997
	andl	$262144, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L472	#,
.L473:
	.loc 1 1185 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.23998
	movl	12(%rax), %eax	# _60->sv_flags, D.23997
	andl	$65536, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	jne	.L472	#,
	.loc 1 1185 0 discriminator 2
	movq	(%rbx), %rax	# *sp_10, D.23998
	movq	%rax, %rdi	# D.23998,
	call	Perl_sv_2iv	#
.L472:
	.loc 1 1186 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_10, D.23998
	movl	12(%rax), %eax	# _68->sv_flags, D.23997
	andl	$65536, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L475	#,
	.loc 1 1187 0
	leaq	-8(%rbx), %rax	#, D.23996
	movq	(%rax), %rax	# *_71, D.23998
	movl	12(%rax), %eax	# _72->sv_flags, D.23997
	andl	$16777216, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	jne	.L476	#,
	.loc 1 1187 0 is_stmt 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.23996
	movq	(%rax), %rax	# *_75, D.23998
	movl	12(%rax), %eax	# _76->sv_flags, D.23997
	andl	$131072, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	jne	.L477	#,
	.loc 1 1187 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.23996
	movq	(%rax), %rax	# *_79, D.23998
	movl	12(%rax), %eax	# _80->sv_flags, D.23997
	andl	$262144, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L476	#,
.L477:
	.loc 1 1187 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.23996
	movq	(%rax), %rax	# *_83, D.23998
	movl	12(%rax), %eax	# _84->sv_flags, D.23997
	andl	$65536, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	jne	.L476	#,
	.loc 1 1187 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.23996
	movq	(%rax), %rax	# *_91, D.23998
	movq	%rax, %rdi	# D.23998,
	call	Perl_sv_2iv	#
.L476:
	.loc 1 1188 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.23996
	movq	(%rax), %rax	# *_94, D.23998
	movl	12(%rax), %eax	# _95->sv_flags, D.23997
	andl	$65536, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L475	#,
.LBB86:
	.loc 1 1189 0
	leaq	-8(%rbx), %rax	#, D.23996
	movq	(%rax), %rax	# *_98, D.23998
	movl	12(%rax), %eax	# _99->sv_flags, D.23997
	andl	$-2147418112, %eax	#, D.23997
	cmpl	$-2147418112, %eax	#, D.23997
	sete	%al	#, D.24000
	movb	%al, -106(%rbp)	# D.24000, left_non_neg
	.loc 1 1190 0
	movq	(%rbx), %rax	# *sp_10, D.23998
	movl	12(%rax), %eax	# _104->sv_flags, D.23997
	andl	$-2147418112, %eax	#, D.23997
	cmpl	$-2147418112, %eax	#, D.23997
	sete	%al	#, D.24000
	movb	%al, -105(%rbp)	# D.24000, right_non_neg
	.loc 1 1194 0
	cmpb	$0, -105(%rbp)	#, right_non_neg
	je	.L479	#,
	.loc 1 1195 0
	movq	(%rbx), %rax	# *sp_10, D.23998
	movq	(%rax), %rax	# _109->sv_any, D.23999
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_110].xuv_uv, tmp214
	movq	%rax, -96(%rbp)	# tmp214, right
	jmp	.L480	#
.L479:
.LBB87:
	.loc 1 1198 0
	movq	(%rbx), %rax	# *sp_10, D.23998
	movq	(%rax), %rax	# _112->sv_any, D.23999
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_113].xiv_iv, tmp215
	movq	%rax, -56(%rbp)	# tmp215, biv
	.loc 1 1199 0
	cmpq	$0, -56(%rbp)	#, biv
	js	.L481	#,
	.loc 1 1200 0
	movq	-56(%rbp), %rax	# biv, tmp216
	movq	%rax, -96(%rbp)	# tmp216, right
	.loc 1 1201 0
	movb	$1, -105(%rbp)	#, right_non_neg
	jmp	.L480	#
.L481:
	.loc 1 1204 0
	movq	-56(%rbp), %rax	# biv, tmp217
	negq	%rax	# D.24001
	movq	%rax, -96(%rbp)	# D.24001, right
.L480:
.LBE87:
	.loc 1 1212 0
	cmpq	$0, -96(%rbp)	#, right
	jne	.L482	#,
	.loc 1 1213 0
	movl	$.LC31, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L471	#
.L482:
	.loc 1 1215 0
	cmpb	$0, -106(%rbp)	#, left_non_neg
	je	.L483	#,
	.loc 1 1216 0
	leaq	-8(%rbx), %rax	#, D.23996
	movq	(%rax), %rax	# *_120, D.23998
	movq	(%rax), %rax	# _121->sv_any, D.23999
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_122].xuv_uv, tmp218
	movq	%rax, -104(%rbp)	# tmp218, left
	jmp	.L484	#
.L483:
.LBB88:
	.loc 1 1219 0
	leaq	-8(%rbx), %rax	#, D.23996
	movq	(%rax), %rax	# *_124, D.23998
	movq	(%rax), %rax	# _125->sv_any, D.23999
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_126].xiv_iv, tmp219
	movq	%rax, -48(%rbp)	# tmp219, aiv
	.loc 1 1220 0
	cmpq	$0, -48(%rbp)	#, aiv
	js	.L485	#,
	.loc 1 1221 0
	movq	-48(%rbp), %rax	# aiv, tmp220
	movq	%rax, -104(%rbp)	# tmp220, left
	.loc 1 1222 0
	movb	$1, -106(%rbp)	#, left_non_neg
	jmp	.L484	#
.L485:
	.loc 1 1225 0
	movq	-48(%rbp), %rax	# aiv, tmp221
	negq	%rax	# D.24001
	movq	%rax, -104(%rbp)	# D.24001, left
.L484:
.LBE88:
	.loc 1 1229 0
	movq	-104(%rbp), %rax	# left, tmp222
	cmpq	-96(%rbp), %rax	# right, tmp222
	jb	.L475	#,
	.loc 1 1241 0
	movabsq	$4294967296, %rax	#, tmp223
	cmpq	%rax, -104(%rbp)	# tmp223, left
	jbe	.L475	#,
.LBB89:
	.loc 1 1245 0
	movq	-104(%rbp), %rax	# left, tmp227
	movl	$0, %edx	#, tmp226
	divq	-96(%rbp)	# right
	movq	%rax, -40(%rbp)	# tmp225, result
	.loc 1 1246 0
	movq	-40(%rbp), %rax	# result, tmp228
	imulq	-96(%rbp), %rax	# right, D.23995
	cmpq	-104(%rbp), %rax	# left, D.23995
	jne	.L475	#,
	.loc 1 1247 0
	subq	$8, %rbx	#, sp
	.loc 1 1248 0
	movzbl	-106(%rbp), %eax	# left_non_neg, tmp229
	cmpb	-105(%rbp), %al	# right_non_neg, tmp229
	jne	.L486	#,
.LBB90:
	.loc 1 1250 0
	movq	-40(%rbp), %rdx	# result, tmp230
	movq	-88(%rbp), %rax	# targ, tmp231
	movq	%rdx, %rsi	# tmp230,
	movq	%rax, %rdi	# tmp231,
	call	Perl_sv_setuv	#
.LBB91:
	movq	-88(%rbp), %rax	# targ, tmp232
	movl	12(%rax), %eax	# targ_22->sv_flags, D.23997
	andl	$16384, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L487	#,
	.loc 1 1250 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# targ, tmp233
	movq	%rax, %rdi	# tmp233,
	call	Perl_mg_set	#
.L487:
	.loc 1 1250 0 discriminator 2
	movq	-88(%rbp), %rax	# targ, tmp234
	movq	%rax, (%rbx)	# tmp234, *sp_134
.LBE91:
.LBE90:
	.loc 1 1251 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.368
	movq	(%rax), %rax	# PL_op.368_138->op_next, D.23992
	jmp	.L471	#
.L486:
	.loc 1 1254 0
	movabsq	$-9223372036854775808, %rax	#, tmp235
	cmpq	%rax, -40(%rbp)	# tmp235, result
	ja	.L488	#,
.LBB92:
	.loc 1 1255 0
	movq	-40(%rbp), %rax	# result, result.369
	negq	%rax	# D.24001
	movq	%rax, %rdx	# D.24001, D.24001
	movq	-88(%rbp), %rax	# targ, tmp236
	movq	%rdx, %rsi	# D.24001,
	movq	%rax, %rdi	# tmp236,
	call	Perl_sv_setiv	#
.LBB93:
	movq	-88(%rbp), %rax	# targ, tmp237
	movl	12(%rax), %eax	# targ_22->sv_flags, D.23997
	andl	$16384, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L489	#,
	.loc 1 1255 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# targ, tmp238
	movq	%rax, %rdi	# tmp238,
	call	Perl_mg_set	#
.L489:
	.loc 1 1255 0 discriminator 2
	movq	-88(%rbp), %rax	# targ, tmp239
	movq	%rax, (%rbx)	# tmp239, *sp_134
.LBE93:
.LBE92:
	jmp	.L490	#
.L488:
.LBB94:
	.loc 1 1258 0 is_stmt 1
	movq	-40(%rbp), %rax	# result, tmp240
	testq	%rax, %rax	# tmp240
	js	.L491	#,
	cvtsi2sdq	%rax, %xmm0	# tmp240, D.24002
	jmp	.L492	#
.L491:
	movq	%rax, %rdx	# tmp240, tmp242
	shrq	%rdx	# tmp242
	andl	$1, %eax	#, tmp243
	orq	%rax, %rdx	# tmp243, tmp242
	cvtsi2sdq	%rdx, %xmm0	# tmp242, tmp241
	addsd	%xmm0, %xmm0	# tmp241, D.24002
.L492:
	movsd	.LC30(%rip), %xmm1	#, tmp244
	xorpd	%xmm1, %xmm0	# tmp244, D.24002
	movq	-88(%rbp), %rax	# targ, tmp245
	movq	%rax, %rdi	# tmp245,
	call	Perl_sv_setnv	#
.LBB95:
	movq	-88(%rbp), %rax	# targ, tmp246
	movl	12(%rax), %eax	# targ_22->sv_flags, D.23997
	andl	$16384, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L493	#,
	.loc 1 1258 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# targ, tmp247
	movq	%rax, %rdi	# tmp247,
	call	Perl_mg_set	#
.L493:
	.loc 1 1258 0 discriminator 2
	movq	-88(%rbp), %rax	# targ, tmp248
	movq	%rax, (%rbx)	# tmp248, *sp_134
.L490:
.LBE95:
.LBE94:
	.loc 1 1260 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.370
	movq	(%rax), %rax	# PL_op.370_150->op_next, D.23992
	jmp	.L471	#
.L475:
.LBE89:
.LBE86:
.LBB96:
	.loc 1 1267 0
	movq	%rbx, %rax	# sp, sp.371
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.371_152, PL_Sv.372
	movq	%rax, PL_Sv(%rip)	# PL_Sv.372, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.374
	movl	12(%rax), %eax	# PL_Sv.374_155->sv_flags, D.23997
	andl	$131072, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L494	#,
	.loc 1 1267 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.375
	movq	(%rax), %rax	# PL_Sv.375_158->sv_any, D.23999
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_159].xnv_nv, iftmp.373
	jmp	.L495	#
.L494:
	.loc 1 1267 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.376
	movq	%rax, %rdi	# PL_Sv.376,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -120(%rbp)	#, %sfp
	movq	-120(%rbp), %rax	# %sfp, iftmp.373
.L495:
	.loc 1 1267 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.373, right
	movq	%rbx, %rax	# sp, sp.377
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.377_164, PL_Sv.378
	movq	%rax, PL_Sv(%rip)	# PL_Sv.378, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.380
	movl	12(%rax), %eax	# PL_Sv.380_167->sv_flags, D.23997
	andl	$131072, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L496	#,
	.loc 1 1267 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.381
	movq	(%rax), %rax	# PL_Sv.381_170->sv_any, D.23999
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_171].xnv_nv, iftmp.379
	jmp	.L497	#
.L496:
	.loc 1 1267 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.382
	movq	%rax, %rdi	# PL_Sv.382,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -120(%rbp)	#, %sfp
	movq	-120(%rbp), %rax	# %sfp, iftmp.379
.L497:
	.loc 1 1267 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.379, left
	.loc 1 1268 0 is_stmt 1 discriminator 3
	xorpd	%xmm0, %xmm0	# tmp249
	ucomisd	-32(%rbp), %xmm0	# right, tmp249
	jp	.L498	#,
	xorpd	%xmm0, %xmm0	# tmp250
	ucomisd	-32(%rbp), %xmm0	# right, tmp250
	jne	.L498	#,
	.loc 1 1269 0
	movl	$.LC31, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L471	#
.L498:
.LBB97:
	.loc 1 1270 0
	movsd	-24(%rbp), %xmm0	# left, tmp251
	divsd	-32(%rbp), %xmm0	# right, D.24002
	movq	-88(%rbp), %rax	# targ, tmp252
	movq	%rax, %rdi	# tmp252,
	call	Perl_sv_setnv	#
.LBB98:
	movq	-88(%rbp), %rax	# targ, tmp253
	movl	12(%rax), %eax	# targ_22->sv_flags, D.23997
	andl	$16384, %eax	#, D.23997
	testl	%eax, %eax	# D.23997
	je	.L500	#,
	.loc 1 1270 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# targ, tmp254
	movq	%rax, %rdi	# tmp254,
	call	Perl_mg_set	#
.L500:
	.loc 1 1270 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-88(%rbp), %rax	# targ, tmp255
	movq	%rax, (%rbx)	# tmp255, *sp_180
.LBE98:
.LBE97:
	.loc 1 1271 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.383
	movq	(%rax), %rax	# PL_op.383_182->op_next, D.23992
.L471:
.LBE96:
	.loc 1 1273 0
	addq	$120, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE33:
	.size	Perl_pp_divide, .-Perl_pp_divide
	.section	.rodata
.LC35:
	.string	"Illegal modulus zero"
	.text
	.globl	Perl_pp_modulo
	.type	Perl_pp_modulo, @function
Perl_pp_modulo:
.LFB34:
	.loc 1 1276 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 1277 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.385
	movzbl	36(%rax), %eax	# PL_op.385_30->op_flags, D.24006
	movzbl	%al, %eax	# D.24006, D.24007
	andl	$64, %eax	#, D.24007
	testl	%eax, %eax	# D.24007
	je	.L503	#,
	.loc 1 1277 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_29 + -8B], iftmp.384
	jmp	.L504	#
.L503:
	.loc 1 1277 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.386
	movq	PL_op(%rip), %rax	# PL_op, PL_op.387
	movq	24(%rax), %rax	# PL_op.387_36->op_targ, D.24008
	salq	$3, %rax	#, D.24008
	addq	%rdx, %rax	# PL_curpad.386, D.24009
	movq	(%rax), %rax	# *_39, iftmp.384
.L504:
	.loc 1 1277 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.384, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.388
	testq	%rax, %rax	# PL_amagic_generation.388
	je	.L505	#,
.LBB99:
	.loc 1 1277 0 discriminator 1
	movq	(%rbx), %rax	# *sp_29, tmp188
	movq	%rax, -56(%rbp)	# tmp188, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_29 + -8B], tmp189
	movq	%rax, -48(%rbp)	# tmp189, left
	movq	-48(%rbp), %rax	# left, tmp190
	movl	12(%rax), %eax	# left_44->sv_flags, D.24010
	andl	$268435456, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	jne	.L506	#,
	.loc 1 1277 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp191
	movl	12(%rax), %eax	# right_43->sv_flags, D.24010
	andl	$268435456, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L505	#,
.L506:
	.loc 1 1277 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.390
	movzbl	36(%rax), %eax	# PL_op.390_49->op_flags, D.24006
	movzbl	%al, %eax	# D.24006, D.24007
	andl	$64, %eax	#, D.24007
	testl	%eax, %eax	# D.24007
	je	.L507	#,
	movl	$4, %eax	#, iftmp.389
	jmp	.L508	#
.L507:
	.loc 1 1277 0 discriminator 2
	movl	$0, %eax	#, iftmp.389
.L508:
	.loc 1 1277 0 discriminator 3
	movq	-56(%rbp), %rsi	# right, tmp192
	movq	-48(%rbp), %rdi	# left, tmp193
	movl	%eax, %ecx	# iftmp.389,
	movl	$14, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp194, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L505	#,
	.loc 1 1277 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.391
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.392
	movzbl	36(%rax), %eax	# PL_op.392_59->op_flags, D.24006
	movzbl	%al, %eax	# D.24006, D.24007
	andl	$64, %eax	#, D.24007
	testl	%eax, %eax	# D.24007
	jne	.L509	#,
	.loc 1 1277 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp195
	movl	12(%rax), %eax	# targ_41->sv_flags, D.24010
	andl	$1024, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L510	#,
.L509:
	.loc 1 1277 0 discriminator 1
	movq	-40(%rbp), %rcx	# tmpsv, tmp196
	movq	-64(%rbp), %rax	# targ, tmp197
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp196,
	movq	%rax, %rdi	# tmp197,
	call	Perl_sv_setsv_flags	#
.LBB100:
	movq	-64(%rbp), %rax	# targ, tmp198
	movl	12(%rax), %eax	# targ_41->sv_flags, D.24010
	andl	$16384, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L511	#,
	movq	-64(%rbp), %rax	# targ, tmp199
	movq	%rax, %rdi	# tmp199,
	call	Perl_mg_set	#
.L511:
	.loc 1 1277 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp200
	movq	%rax, (%rbx)	# tmp200, *sp_58
.LBE100:
	jmp	.L512	#
.L510:
	.loc 1 1277 0 discriminator 1
	movq	-40(%rbp), %rax	# tmpsv, tmp201
	movq	%rax, (%rbx)	# tmp201, *sp_58
.L512:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.393
	movq	(%rax), %rax	# PL_op.393_68->op_next, D.24005
	jmp	.L513	#
.L505:
.LBE99:
.LBB101:
	.loc 1 1279 0 is_stmt 1
	movq	$0, -112(%rbp)	#, left
	.loc 1 1280 0
	movq	$0, -104(%rbp)	#, right
	.loc 1 1281 0
	movb	$0, -116(%rbp)	#, left_neg
	.loc 1 1282 0
	movb	$0, -115(%rbp)	#, right_neg
	.loc 1 1283 0
	movb	$0, -114(%rbp)	#, use_double
	.loc 1 1284 0
	movb	$0, -113(%rbp)	#, dright_valid
	.loc 1 1285 0
	movl	$0, %eax	#, tmp202
	movq	%rax, -96(%rbp)	# tmp202, dright
	.loc 1 1286 0
	movl	$0, %eax	#, tmp203
	movq	%rax, -88(%rbp)	# tmp203, dleft
	.loc 1 1288 0
	movq	(%rbx), %rax	# *sp_29, D.24011
	movl	12(%rax), %eax	# _78->sv_flags, D.24010
	andl	$16777216, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	jne	.L514	#,
	.loc 1 1288 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_29, D.24011
	movl	12(%rax), %eax	# _81->sv_flags, D.24010
	andl	$131072, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	jne	.L515	#,
	.loc 1 1288 0 discriminator 2
	movq	(%rbx), %rax	# *sp_29, D.24011
	movl	12(%rax), %eax	# _84->sv_flags, D.24010
	andl	$262144, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L514	#,
.L515:
	.loc 1 1288 0 discriminator 1
	movq	(%rbx), %rax	# *sp_29, D.24011
	movl	12(%rax), %eax	# _87->sv_flags, D.24010
	andl	$65536, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	jne	.L514	#,
	.loc 1 1288 0 discriminator 2
	movq	(%rbx), %rax	# *sp_29, D.24011
	movq	%rax, %rdi	# D.24011,
	call	Perl_sv_2iv	#
.L514:
	.loc 1 1289 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_29, D.24011
	movl	12(%rax), %eax	# _95->sv_flags, D.24010
	andl	$65536, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L517	#,
	.loc 1 1290 0
	movq	(%rbx), %rax	# *sp_29, D.24011
	movl	12(%rax), %eax	# _98->sv_flags, D.24010
	andl	$-2147418112, %eax	#, D.24010
	cmpl	$-2147418112, %eax	#, D.24010
	setne	%al	#, D.24013
	movb	%al, -115(%rbp)	# D.24013, right_neg
	.loc 1 1291 0
	cmpb	$0, -115(%rbp)	#, right_neg
	jne	.L518	#,
	.loc 1 1292 0
	movq	%rbx, %rax	# sp, sp.395
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.395_103, D.24011
	movq	(%rax), %rax	# _105->sv_any, D.24012
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_106].xuv_uv, tmp204
	movq	%rax, -104(%rbp)	# tmp204, right
	jmp	.L521	#
.L518:
.LBB102:
	.loc 1 1294 0
	movq	%rbx, %rax	# sp, sp.396
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.396_108, D.24011
	movq	(%rax), %rax	# _110->sv_any, D.24012
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_111].xiv_iv, tmp205
	movq	%rax, -32(%rbp)	# tmp205, biv
	.loc 1 1295 0
	cmpq	$0, -32(%rbp)	#, biv
	js	.L520	#,
	.loc 1 1296 0
	movq	-32(%rbp), %rax	# biv, tmp206
	movq	%rax, -104(%rbp)	# tmp206, right
	.loc 1 1297 0
	movb	$0, -115(%rbp)	#, right_neg
	jmp	.L521	#
.L520:
	.loc 1 1299 0
	movq	-32(%rbp), %rax	# biv, tmp207
	negq	%rax	# D.24014
	movq	%rax, -104(%rbp)	# D.24014, right
.LBE102:
	jmp	.L521	#
.L517:
	.loc 1 1304 0
	movq	%rbx, %rax	# sp, sp.397
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.397_117, PL_Sv.398
	movq	%rax, PL_Sv(%rip)	# PL_Sv.398, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.400
	movl	12(%rax), %eax	# PL_Sv.400_120->sv_flags, D.24010
	andl	$131072, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L522	#,
	.loc 1 1304 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.401
	movq	(%rax), %rax	# PL_Sv.401_123->sv_any, D.24012
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_124].xnv_nv, iftmp.399
	jmp	.L523	#
.L522:
	.loc 1 1304 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.402
	movq	%rax, %rdi	# PL_Sv.402,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, iftmp.399
.L523:
	.loc 1 1304 0 discriminator 3
	movq	%rax, -96(%rbp)	# iftmp.399, dright
	.loc 1 1305 0 is_stmt 1 discriminator 3
	xorpd	%xmm0, %xmm0	# tmp208
	ucomisd	-96(%rbp), %xmm0	# dright, tmp208
	seta	%al	#, D.24013
	movb	%al, -115(%rbp)	# D.24013, right_neg
	.loc 1 1306 0 discriminator 3
	cmpb	$0, -115(%rbp)	#, right_neg
	je	.L524	#,
	.loc 1 1307 0
	movsd	-96(%rbp), %xmm1	# dright, tmp210
	movsd	.LC30(%rip), %xmm0	#, tmp211
	xorpd	%xmm1, %xmm0	# tmp210, tmp209
	movsd	%xmm0, -96(%rbp)	# tmp209, dright
.L524:
	.loc 1 1308 0
	movsd	.LC33(%rip), %xmm0	#, tmp212
	ucomisd	-96(%rbp), %xmm0	# dright, tmp212
	jbe	.L562	#,
	.loc 1 1309 0
	movq	-96(%rbp), %rax	# dright, tmp213
	movq	%rax, -136(%rbp)	# tmp213, %sfp
	movsd	-136(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movq	%rax, -104(%rbp)	# tmp214, right
	.loc 1 1310 0
	movb	$1, -113(%rbp)	#, dright_valid
	jmp	.L521	#
.L562:
	.loc 1 1312 0
	movb	$1, -114(%rbp)	#, use_double
.L521:
	.loc 1 1319 0
	movq	(%rbx), %rax	# *sp_2, D.24011
	movl	12(%rax), %eax	# _135->sv_flags, D.24010
	andl	$16777216, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	jne	.L527	#,
	.loc 1 1319 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_2, D.24011
	movl	12(%rax), %eax	# _138->sv_flags, D.24010
	andl	$131072, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	jne	.L528	#,
	.loc 1 1319 0 discriminator 2
	movq	(%rbx), %rax	# *sp_2, D.24011
	movl	12(%rax), %eax	# _141->sv_flags, D.24010
	andl	$262144, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L527	#,
.L528:
	.loc 1 1319 0 discriminator 1
	movq	(%rbx), %rax	# *sp_2, D.24011
	movl	12(%rax), %eax	# _144->sv_flags, D.24010
	andl	$65536, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	jne	.L527	#,
	.loc 1 1319 0 discriminator 2
	movq	(%rbx), %rax	# *sp_2, D.24011
	movq	%rax, %rdi	# D.24011,
	call	Perl_sv_2iv	#
.L527:
	.loc 1 1320 0 is_stmt 1
	cmpb	$0, -114(%rbp)	#, use_double
	jne	.L530	#,
	.loc 1 1320 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_2, D.24011
	movl	12(%rax), %eax	# _152->sv_flags, D.24010
	andl	$65536, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L530	#,
	.loc 1 1321 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_2, D.24011
	movl	12(%rax), %eax	# _155->sv_flags, D.24010
	andl	$65536, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L531	#,
	.loc 1 1322 0
	movq	(%rbx), %rax	# *sp_2, D.24011
	movl	12(%rax), %eax	# _158->sv_flags, D.24010
	andl	$-2147418112, %eax	#, D.24010
	cmpl	$-2147418112, %eax	#, D.24010
	setne	%al	#, D.24013
	movb	%al, -116(%rbp)	# D.24013, left_neg
	.loc 1 1323 0
	cmpb	$0, -116(%rbp)	#, left_neg
	jne	.L532	#,
	.loc 1 1324 0
	movq	%rbx, %rax	# sp, sp.404
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.404_163, D.24011
	movq	(%rax), %rax	# _165->sv_any, D.24012
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_166].xuv_uv, tmp215
	movq	%rax, -112(%rbp)	# tmp215, left
	jmp	.L531	#
.L532:
.LBB103:
	.loc 1 1326 0
	movq	%rbx, %rax	# sp, sp.405
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.405_168, D.24011
	movq	(%rax), %rax	# _170->sv_any, D.24012
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_171].xiv_iv, tmp216
	movq	%rax, -24(%rbp)	# tmp216, aiv
	.loc 1 1327 0
	cmpq	$0, -24(%rbp)	#, aiv
	js	.L533	#,
	.loc 1 1328 0
	movq	-24(%rbp), %rax	# aiv, tmp217
	movq	%rax, -112(%rbp)	# tmp217, left
	.loc 1 1329 0
	movb	$0, -116(%rbp)	#, left_neg
	jmp	.L531	#
.L533:
	.loc 1 1331 0
	movq	-24(%rbp), %rax	# aiv, tmp218
	negq	%rax	# D.24014
	movq	%rax, -112(%rbp)	# D.24014, left
.LBE103:
	.loc 1 1321 0
	jmp	.L534	#
.L531:
	.loc 1 1321 0 is_stmt 0 discriminator 1
	jmp	.L534	#
.L530:
	.loc 1 1337 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.406
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.406_177, PL_Sv.407
	movq	%rax, PL_Sv(%rip)	# PL_Sv.407, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.409
	movl	12(%rax), %eax	# PL_Sv.409_180->sv_flags, D.24010
	andl	$131072, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L535	#,
	.loc 1 1337 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.410
	movq	(%rax), %rax	# PL_Sv.410_183->sv_any, D.24012
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_184].xnv_nv, iftmp.408
	jmp	.L536	#
.L535:
	.loc 1 1337 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.411
	movq	%rax, %rdi	# PL_Sv.411,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, iftmp.408
.L536:
	.loc 1 1337 0 discriminator 3
	movq	%rax, -88(%rbp)	# iftmp.408, dleft
	.loc 1 1338 0 is_stmt 1 discriminator 3
	xorpd	%xmm0, %xmm0	# tmp219
	ucomisd	-88(%rbp), %xmm0	# dleft, tmp219
	seta	%al	#, D.24013
	movb	%al, -116(%rbp)	# D.24013, left_neg
	.loc 1 1339 0 discriminator 3
	cmpb	$0, -116(%rbp)	#, left_neg
	je	.L537	#,
	.loc 1 1340 0
	movsd	-88(%rbp), %xmm1	# dleft, tmp221
	movsd	.LC30(%rip), %xmm0	#, tmp222
	xorpd	%xmm1, %xmm0	# tmp221, tmp220
	movsd	%xmm0, -88(%rbp)	# tmp220, dleft
.L537:
	.loc 1 1344 0
	cmpb	$0, -114(%rbp)	#, use_double
	jne	.L534	#,
	.loc 1 1345 0
	movsd	.LC33(%rip), %xmm0	#, tmp223
	ucomisd	-88(%rbp), %xmm0	# dleft, tmp223
	jbe	.L563	#,
	.loc 1 1348 0
	movq	-88(%rbp), %rax	# dleft, tmp224
	movq	%rax, -136(%rbp)	# tmp224, %sfp
	movsd	-136(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movq	%rax, -112(%rbp)	# tmp225, left
	jmp	.L534	#
.L563:
	.loc 1 1356 0
	movsd	-88(%rbp), %xmm1	# dleft, tmp226
	movsd	.LC34(%rip), %xmm0	#, tmp227
	addsd	%xmm1, %xmm0	# tmp226, D.24015
	call	floor	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, tmp228
	movq	%rax, -88(%rbp)	# tmp228, dleft
	.loc 1 1357 0
	movb	$1, -114(%rbp)	#, use_double
	.loc 1 1358 0
	cmpb	$0, -113(%rbp)	#, dright_valid
	je	.L540	#,
	.loc 1 1359 0
	movsd	-96(%rbp), %xmm1	# dright, tmp229
	movsd	.LC34(%rip), %xmm0	#, tmp230
	addsd	%xmm1, %xmm0	# tmp229, D.24015
	call	floor	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, tmp231
	movq	%rax, -96(%rbp)	# tmp231, dright
	jmp	.L534	#
.L540:
	.loc 1 1361 0
	movq	-104(%rbp), %rax	# right, tmp233
	testq	%rax, %rax	# tmp233
	js	.L541	#,
	cvtsi2sdq	%rax, %xmm0	# tmp233, tmp232
	jmp	.L542	#
.L541:
	movq	%rax, %rdx	# tmp233, tmp235
	shrq	%rdx	# tmp235
	andl	$1, %eax	#, tmp236
	orq	%rax, %rdx	# tmp236, tmp235
	cvtsi2sdq	%rdx, %xmm0	# tmp235, tmp234
	addsd	%xmm0, %xmm0	# tmp234, tmp232
.L542:
	movsd	%xmm0, -96(%rbp)	# tmp232, dright
.L534:
	.loc 1 1365 0
	cmpb	$0, -114(%rbp)	#, use_double
	je	.L543	#,
.LBB104:
	.loc 1 1368 0
	xorpd	%xmm0, %xmm0	# tmp237
	ucomisd	-96(%rbp), %xmm0	# dright, tmp237
	jp	.L544	#,
	xorpd	%xmm0, %xmm0	# tmp238
	ucomisd	-96(%rbp), %xmm0	# dright, tmp238
	jne	.L544	#,
	.loc 1 1369 0
	movl	$.LC35, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L513	#
.L544:
	.loc 1 1371 0
	movq	-96(%rbp), %rdx	# dright, tmp239
	movq	-88(%rbp), %rax	# dleft, tmp240
	movq	%rdx, -136(%rbp)	# tmp239, %sfp
	movsd	-136(%rbp), %xmm1	# %sfp,
	movq	%rax, -136(%rbp)	# tmp240, %sfp
	movsd	-136(%rbp), %xmm0	# %sfp,
	call	fmod	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, tmp241
	movq	%rax, -80(%rbp)	# tmp241, dans
	.loc 1 1372 0
	movzbl	-116(%rbp), %eax	# left_neg, tmp242
	cmpb	-115(%rbp), %al	# right_neg, tmp242
	je	.L546	#,
	.loc 1 1372 0 is_stmt 0 discriminator 1
	xorpd	%xmm0, %xmm0	# tmp243
	ucomisd	-80(%rbp), %xmm0	# dans, tmp243
	jp	.L561	#,
	xorpd	%xmm0, %xmm0	# tmp244
	ucomisd	-80(%rbp), %xmm0	# dans, tmp244
	je	.L546	#,
.L561:
	.loc 1 1373 0 is_stmt 1
	movsd	-96(%rbp), %xmm0	# dright, tmp246
	subsd	-80(%rbp), %xmm0	# dans, tmp245
	movsd	%xmm0, -80(%rbp)	# tmp245, dans
.L546:
	.loc 1 1374 0
	cmpb	$0, -115(%rbp)	#, right_neg
	je	.L548	#,
	.loc 1 1375 0
	movsd	-80(%rbp), %xmm1	# dans, tmp248
	movsd	.LC30(%rip), %xmm0	#, tmp249
	xorpd	%xmm1, %xmm0	# tmp248, tmp247
	movsd	%xmm0, -80(%rbp)	# tmp247, dans
.L548:
	.loc 1 1376 0
	movq	-80(%rbp), %rax	# dans, tmp250
	movq	-64(%rbp), %rdx	# targ, tmp251
	movq	%rax, -136(%rbp)	# tmp250, %sfp
	movsd	-136(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp251,
	call	Perl_sv_setnv	#
.LBE104:
	jmp	.L549	#
.L543:
.LBB105:
	.loc 1 1381 0
	cmpq	$0, -104(%rbp)	#, right
	jne	.L550	#,
	.loc 1 1382 0
	movl	$.LC35, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L513	#
.L550:
	.loc 1 1384 0
	movq	-112(%rbp), %rax	# left, tmp253
	movl	$0, %edx	#, tmp254
	divq	-104(%rbp)	# right
	movq	%rdx, -72(%rbp)	# tmp254, ans
	.loc 1 1385 0
	movzbl	-116(%rbp), %eax	# left_neg, tmp256
	cmpb	-115(%rbp), %al	# right_neg, tmp256
	je	.L551	#,
	.loc 1 1385 0 is_stmt 0 discriminator 1
	cmpq	$0, -72(%rbp)	#, ans
	je	.L551	#,
	.loc 1 1386 0 is_stmt 1
	movq	-72(%rbp), %rax	# ans, tmp261
	movq	-104(%rbp), %rdx	# right, tmp262
	subq	%rax, %rdx	# tmp261, tmp260
	movq	%rdx, %rax	# tmp260, tmp260
	movq	%rax, -72(%rbp)	# tmp260, ans
.L551:
	.loc 1 1387 0
	cmpb	$0, -115(%rbp)	#, right_neg
	je	.L552	#,
	.loc 1 1390 0
	movabsq	$-9223372036854775807, %rax	#, tmp263
	cmpq	%rax, -72(%rbp)	# tmp263, ans
	ja	.L553	#,
	.loc 1 1391 0
	movq	-72(%rbp), %rax	# ans, tmp264
	negq	%rax	# D.24008
	movq	%rax, %rdx	# D.24008, D.24014
	movq	-64(%rbp), %rax	# targ, tmp265
	movq	%rdx, %rsi	# D.24014,
	movq	%rax, %rdi	# tmp265,
	call	Perl_sv_setiv	#
	jmp	.L549	#
.L553:
	.loc 1 1393 0
	movq	-72(%rbp), %rax	# ans, tmp266
	testq	%rax, %rax	# tmp266
	js	.L555	#,
	cvtsi2sdq	%rax, %xmm0	# tmp266, D.24015
	jmp	.L556	#
.L555:
	movq	%rax, %rdx	# tmp266, tmp268
	shrq	%rdx	# tmp268
	andl	$1, %eax	#, tmp269
	orq	%rax, %rdx	# tmp269, tmp268
	cvtsi2sdq	%rdx, %xmm0	# tmp268, tmp267
	addsd	%xmm0, %xmm0	# tmp267, D.24015
.L556:
	movsd	.LC30(%rip), %xmm1	#, tmp270
	xorpd	%xmm1, %xmm0	# tmp270, D.24015
	movq	-64(%rbp), %rax	# targ, tmp271
	movq	%rax, %rdi	# tmp271,
	call	Perl_sv_setnv	#
	jmp	.L549	#
.L552:
	.loc 1 1396 0
	movq	-72(%rbp), %rdx	# ans, tmp272
	movq	-64(%rbp), %rax	# targ, tmp273
	movq	%rdx, %rsi	# tmp272,
	movq	%rax, %rdi	# tmp273,
	call	Perl_sv_setuv	#
.L549:
.LBE105:
.LBB106:
	.loc 1 1398 0
	movq	-64(%rbp), %rax	# targ, tmp274
	movl	12(%rax), %eax	# targ_41->sv_flags, D.24010
	andl	$16384, %eax	#, D.24010
	testl	%eax, %eax	# D.24010
	je	.L557	#,
	.loc 1 1398 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp275
	movq	%rax, %rdi	# tmp275,
	call	Perl_mg_set	#
.L557:
	.loc 1 1398 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-64(%rbp), %rax	# targ, tmp276
	movq	%rax, (%rbx)	# tmp276, *sp_212
.LBE106:
	.loc 1 1399 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.412
	movq	(%rax), %rax	# PL_op.412_214->op_next, D.24005
.L513:
.LBE101:
	.loc 1 1401 0
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE34:
	.size	Perl_pp_modulo, .-Perl_pp_modulo
	.globl	Perl_pp_repeat
	.type	Perl_pp_repeat, @function
Perl_pp_repeat:
.LFB35:
	.loc 1 1404 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	.loc 1 1405 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.414
	movzbl	36(%rax), %eax	# PL_op.414_20->op_flags, D.24019
	movzbl	%al, %eax	# D.24019, D.24020
	andl	$64, %eax	#, D.24020
	testl	%eax, %eax	# D.24020
	je	.L565	#,
	.loc 1 1405 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_19 + -8B], iftmp.413
	jmp	.L566	#
.L565:
	.loc 1 1405 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.415
	movq	PL_op(%rip), %rax	# PL_op, PL_op.416
	movq	24(%rax), %rax	# PL_op.416_26->op_targ, D.24021
	salq	$3, %rax	#, D.24021
	addq	%rdx, %rax	# PL_curpad.415, D.24022
	movq	(%rax), %rax	# *_29, iftmp.413
.L566:
	.loc 1 1405 0 discriminator 3
	movq	%rax, -112(%rbp)	# iftmp.413, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.417
	testq	%rax, %rax	# PL_amagic_generation.417
	je	.L567	#,
.LBB107:
	.loc 1 1405 0 discriminator 1
	movq	(%rbx), %rax	# *sp_19, tmp258
	movq	%rax, -104(%rbp)	# tmp258, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_19 + -8B], tmp259
	movq	%rax, -96(%rbp)	# tmp259, left
	movq	-96(%rbp), %rax	# left, tmp260
	movl	12(%rax), %eax	# left_34->sv_flags, D.24023
	andl	$268435456, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	jne	.L568	#,
	.loc 1 1405 0 discriminator 2
	movq	-104(%rbp), %rax	# right, tmp261
	movl	12(%rax), %eax	# right_33->sv_flags, D.24023
	andl	$268435456, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L567	#,
.L568:
	.loc 1 1405 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.419
	movzbl	36(%rax), %eax	# PL_op.419_39->op_flags, D.24019
	movzbl	%al, %eax	# D.24019, D.24020
	andl	$64, %eax	#, D.24020
	testl	%eax, %eax	# D.24020
	je	.L569	#,
	movl	$4, %eax	#, iftmp.418
	jmp	.L570	#
.L569:
	.loc 1 1405 0 discriminator 2
	movl	$0, %eax	#, iftmp.418
.L570:
	.loc 1 1405 0 discriminator 3
	movq	-104(%rbp), %rsi	# right, tmp262
	movq	-96(%rbp), %rdi	# left, tmp263
	movl	%eax, %ecx	# iftmp.418,
	movl	$52, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -88(%rbp)	# tmp264, tmpsv
	cmpq	$0, -88(%rbp)	#, tmpsv
	je	.L567	#,
	.loc 1 1405 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.420
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.421
	movzbl	36(%rax), %eax	# PL_op.421_49->op_flags, D.24019
	movzbl	%al, %eax	# D.24019, D.24020
	andl	$64, %eax	#, D.24020
	testl	%eax, %eax	# D.24020
	jne	.L571	#,
	.loc 1 1405 0 discriminator 2
	movq	-112(%rbp), %rax	# targ, tmp265
	movl	12(%rax), %eax	# targ_31->sv_flags, D.24023
	andl	$1024, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L572	#,
.L571:
	.loc 1 1405 0 discriminator 1
	movq	-88(%rbp), %rcx	# tmpsv, tmp266
	movq	-112(%rbp), %rax	# targ, tmp267
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp266,
	movq	%rax, %rdi	# tmp267,
	call	Perl_sv_setsv_flags	#
.LBB108:
	movq	-112(%rbp), %rax	# targ, tmp268
	movl	12(%rax), %eax	# targ_31->sv_flags, D.24023
	andl	$16384, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L573	#,
	movq	-112(%rbp), %rax	# targ, tmp269
	movq	%rax, %rdi	# tmp269,
	call	Perl_mg_set	#
.L573:
	.loc 1 1405 0 discriminator 2
	movq	-112(%rbp), %rax	# targ, tmp270
	movq	%rax, (%rbx)	# tmp270, *sp_48
.LBE108:
	jmp	.L574	#
.L572:
	.loc 1 1405 0 discriminator 1
	movq	-88(%rbp), %rax	# tmpsv, tmp271
	movq	%rax, (%rbx)	# tmp271, *sp_48
.L574:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.422
	movq	(%rax), %rax	# PL_op.422_58->op_next, D.24018
	jmp	.L575	#
.L567:
.LBE107:
.LBB109:
	.loc 1 1408 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.423
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.423_60, tmp272
	movq	%rax, -80(%rbp)	# tmp272, sv
	.loc 1 1409 0
	movq	-80(%rbp), %rax	# sv, tmp273
	movl	12(%rax), %eax	# sv_62->sv_flags, D.24023
	andl	$8192, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L576	#,
	.loc 1 1410 0
	movq	-80(%rbp), %rax	# sv, tmp274
	movq	%rax, %rdi	# tmp274,
	call	Perl_mg_get	#
.L576:
	.loc 1 1411 0
	movq	-80(%rbp), %rax	# sv, tmp275
	movl	12(%rax), %eax	# sv_62->sv_flags, D.24023
	andl	$16777216, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L577	#,
	.loc 1 1412 0
	movq	-80(%rbp), %rax	# sv, tmp276
	movl	12(%rax), %eax	# sv_62->sv_flags, D.24023
	andl	$-2147418112, %eax	#, D.24023
	cmpl	$-2147418112, %eax	#, D.24023
	jne	.L578	#,
.LBB110:
	.loc 1 1413 0
	movq	-80(%rbp), %rax	# sv, tmp277
	movl	12(%rax), %eax	# sv_62->sv_flags, D.24023
	andl	$65536, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L579	#,
	.loc 1 1413 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# sv, tmp278
	movq	(%rax), %rax	# sv_62->sv_any, D.24025
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_71].xuv_uv, iftmp.424
	jmp	.L580	#
.L579:
	.loc 1 1413 0 discriminator 2
	movq	-80(%rbp), %rax	# sv, tmp279
	movq	%rax, %rdi	# tmp279,
	call	Perl_sv_2uv	#
.L580:
	.loc 1 1413 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.424, uv
	.loc 1 1414 0 is_stmt 1 discriminator 3
	movq	-72(%rbp), %rax	# uv, uv.425
	testq	%rax, %rax	# uv.425
	jns	.L581	#,
	.loc 1 1415 0
	movabsq	$9223372036854775807, %r12	#, count
	jmp	.L587	#
.L581:
	.loc 1 1417 0
	movq	-72(%rbp), %r12	# uv, count
.LBE110:
	jmp	.L587	#
.L578:
.LBB111:
	.loc 1 1419 0
	movq	-80(%rbp), %rax	# sv, tmp280
	movl	12(%rax), %eax	# sv_62->sv_flags, D.24023
	andl	$65536, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L584	#,
	.loc 1 1419 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# sv, tmp281
	movq	(%rax), %rax	# sv_62->sv_any, D.24025
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_80].xiv_iv, iftmp.426
	jmp	.L585	#
.L584:
	.loc 1 1419 0 discriminator 2
	movq	-80(%rbp), %rax	# sv, tmp282
	movq	%rax, %rdi	# tmp282,
	call	Perl_sv_2iv	#
.L585:
	.loc 1 1419 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.426, iv
	.loc 1 1420 0 is_stmt 1 discriminator 3
	cmpq	$0, -64(%rbp)	#, iv
	jns	.L586	#,
	.loc 1 1421 0
	movl	$0, %r12d	#, count
	jmp	.L587	#
.L586:
	.loc 1 1423 0
	movq	-64(%rbp), %r12	# iv, count
.LBE111:
	jmp	.L587	#
.L577:
	.loc 1 1426 0
	movq	-80(%rbp), %rax	# sv, tmp283
	movl	12(%rax), %eax	# sv_62->sv_flags, D.24023
	andl	$33554432, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L588	#,
.LBB112:
	.loc 1 1427 0
	movq	-80(%rbp), %rax	# sv, tmp284
	movl	12(%rax), %eax	# sv_62->sv_flags, D.24023
	andl	$131072, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L589	#,
	.loc 1 1427 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# sv, tmp285
	movq	(%rax), %rax	# sv_62->sv_any, D.24025
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_90].xnv_nv, iftmp.427
	jmp	.L590	#
.L589:
	.loc 1 1427 0 discriminator 2
	movq	-80(%rbp), %rax	# sv, tmp286
	movq	%rax, %rdi	# tmp286,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -152(%rbp)	#, %sfp
	movq	-152(%rbp), %rax	# %sfp, iftmp.427
.L590:
	.loc 1 1427 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.427, nv
	.loc 1 1428 0 is_stmt 1 discriminator 3
	xorpd	%xmm0, %xmm0	# tmp287
	ucomisd	-56(%rbp), %xmm0	# nv, tmp287
	jbe	.L624	#,
	.loc 1 1429 0
	movl	$0, %r12d	#, count
	jmp	.L587	#
.L624:
	.loc 1 1431 0
	movsd	-56(%rbp), %xmm0	# nv, tmp288
	cvttsd2siq	%xmm0, %r12	# tmp288, count
.LBE112:
	jmp	.L587	#
.L588:
	.loc 1 1434 0
	movq	-80(%rbp), %rax	# sv, tmp289
	movq	%rax, PL_Sv(%rip)	# tmp289, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.429
	movl	12(%rax), %eax	# PL_Sv.429_96->sv_flags, D.24023
	andl	$65536, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L594	#,
	.loc 1 1434 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.430
	movq	(%rax), %rax	# PL_Sv.430_99->sv_any, D.24025
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_100].xiv_iv, iftmp.428
	jmp	.L595	#
.L594:
	.loc 1 1434 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.431
	movq	%rax, %rdi	# PL_Sv.431,
	call	Perl_sv_2iv	#
.L595:
	.loc 1 1434 0 discriminator 3
	movq	%rax, %r12	# iftmp.428, count
.L587:
	.loc 1 1435 0 is_stmt 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.432
	movzbl	36(%rax), %eax	# PL_op.432_105->op_flags, D.24019
	movzbl	%al, %eax	# D.24019, D.24020
	andl	$3, %eax	#, D.24020
	testl	%eax, %eax	# D.24020
	je	.L596	#,
	.loc 1 1435 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.433
	movzbl	36(%rax), %eax	# PL_op.433_109->op_flags, D.24019
	movzbl	%al, %eax	# D.24019, D.24020
	andl	$3, %eax	#, D.24020
	cmpl	$3, %eax	#, D.24020
	je	.L597	#,
	jmp	.L598	#
.L596:
	.loc 1 1435 0 discriminator 2
	call	Perl_dowantarray	#
	cmpl	$1, %eax	#, D.24020
	jne	.L598	#,
.L597:
	.loc 1 1435 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.434
	movzbl	37(%rax), %eax	# PL_op.434_114->op_private, D.24019
	movzbl	%al, %eax	# D.24019, D.24020
	andl	$64, %eax	#, D.24020
	testl	%eax, %eax	# D.24020
	je	.L598	#,
.LBB113:
	.loc 1 1436 0 is_stmt 1
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.435
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.436
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.438
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.438, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.437_120, D.24020
	cltq
	salq	$3, %rax	#, D.24021
	leaq	(%rcx,%rax), %r13	#, mark
	.loc 1 1437 0
	movq	%rbx, %rdx	# sp, sp.439
	movq	%r13, %rax	# mark, mark.440
	subq	%rax, %rdx	# mark.440, D.24026
	movq	%rdx, %rax	# D.24026, D.24026
	sarq	$3, %rax	#, tmp290
	movl	%eax, -132(%rbp)	# D.24026, items
	.loc 1 1442 0
	movl	%r12d, %edx	# count, D.24027
	movl	-132(%rbp), %eax	# items, items.441
	imull	%edx, %eax	# D.24027, D.24027
	movl	%eax, -128(%rbp)	# D.24027, max
	.loc 1 1445 0
	cmpl	$0, -132(%rbp)	#, items
	jle	.L599	#,
	.loc 1 1445 0 is_stmt 0 discriminator 1
	cmpl	$0, -128(%rbp)	#, max
	jle	.L599	#,
	movl	-128(%rbp), %eax	# max, tmp291
	cmpl	-132(%rbp), %eax	# items, tmp291
	jl	.L600	#,
	movl	-128(%rbp), %eax	# max, tmp292
	cltq
	cmpq	%r12, %rax	# count, D.24026
	jge	.L599	#,
.L600:
	.loc 1 1446 0 is_stmt 1
	movl	$oom_list_extend.10698, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L599:
	.loc 1 1447 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.442
	movq	%rax, %rdx	# PL_stack_max.442, PL_stack_max.443
	movq	%r13, %rax	# mark, mark.444
	subq	%rax, %rdx	# mark.444, D.24026
	movq	%rdx, %rax	# D.24026, D.24026
	sarq	$3, %rax	#, tmp293
	movq	%rax, %rdx	# tmp293, D.24026
	movl	-128(%rbp), %eax	# max, tmp294
	cltq
	cmpq	%rax, %rdx	# D.24026, D.24026
	jge	.L601	#,
.LBB114:
	.loc 1 1447 0 is_stmt 0 discriminator 1
	movq	%r13, %rdx	# mark, mark.445
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.446
	subq	%rax, %rdx	# PL_stack_base.447, D.24026
	movq	%rdx, %rax	# D.24026, D.24026
	sarq	$3, %rax	#, tmp295
	movl	%eax, -124(%rbp)	# D.24026, markoff
	movl	-128(%rbp), %eax	# max, tmp296
	movl	%eax, %edx	# tmp296,
	movq	%r13, %rsi	# mark,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.448
	movl	-124(%rbp), %edx	# markoff, tmp297
	movslq	%edx, %rdx	# tmp297, D.24021
	salq	$3, %rdx	#, D.24021
	leaq	(%rax,%rdx), %r13	#, mark
.L601:
.LBE114:
	.loc 1 1448 0 is_stmt 1
	cmpq	$1, %r12	#, count
	jle	.L602	#,
	.loc 1 1449 0
	jmp	.L603	#
.L605:
	.loc 1 1474 0
	movq	(%rbx), %rax	# *sp_2, D.24024
	testq	%rax, %rax	# D.24024
	je	.L604	#,
	.loc 1 1475 0
	movq	(%rbx), %rax	# *sp_2, D.24024
	movq	(%rbx), %rdx	# *sp_2, D.24024
	movl	12(%rdx), %edx	# _155->sv_flags, D.24023
	andb	$247, %dh	#, D.24023
	movl	%edx, 12(%rax)	# D.24023, _154->sv_flags
.L604:
	.loc 1 1477 0
	subq	$8, %rbx	#, sp
.L603:
	.loc 1 1449 0 discriminator 1
	cmpq	%r13, %rbx	# mark, sp
	ja	.L605	#,
	.loc 1 1479 0
	addq	$8, %r13	#, mark
	.loc 1 1480 0
	movl	%r12d, %eax	# count, D.24027
	subl	$1, %eax	#, D.24027
	movl	%eax, %edx	# D.24027, D.24020
	movl	-132(%rbp), %eax	# items, items.449
	sall	$3, %eax	#, D.24027
	movl	-132(%rbp), %ecx	# items, tmp298
	movslq	%ecx, %rcx	# tmp298, D.24021
	salq	$3, %rcx	#, D.24021
	leaq	0(%r13,%rcx), %rdi	#, D.24028
	movl	%edx, %ecx	# D.24020,
	movl	%eax, %edx	# D.24020,
	movq	%r13, %rsi	# mark,
	call	Perl_repeatcpy	#
	.loc 1 1482 0
	movl	-128(%rbp), %eax	# max, tmp299
	cltq
	salq	$3, %rax	#, D.24021
	addq	%rax, %rbx	# D.24021, sp
	jmp	.L606	#
.L602:
	.loc 1 1484 0
	testq	%r12, %r12	# count
	jg	.L606	#,
	.loc 1 1485 0
	movl	-132(%rbp), %eax	# items, tmp300
	cltq
	salq	$3, %rax	#, D.24021
	negq	%rax	# D.24029
	addq	%rax, %rbx	# D.24029, sp
.LBE113:
	.loc 1 1435 0
	jmp	.L607	#
.L606:
	jmp	.L607	#
.L598:
.LBB115:
	.loc 1 1488 0
	movq	%rbx, %rax	# sp, sp.450
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.450_176, tmp301
	movq	%rax, -48(%rbp)	# tmp301, tmpstr
	.loc 1 1494 0
	movq	-112(%rbp), %rax	# targ, tmp302
	cmpq	-48(%rbp), %rax	# tmpstr, tmp302
	je	.L608	#,
	.loc 1 1494 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rcx	# tmpstr, tmp303
	movq	-112(%rbp), %rax	# targ, tmp304
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp303,
	movq	%rax, %rdi	# tmp304,
	call	Perl_sv_setsv_flags	#
.L608:
	.loc 1 1495 0 is_stmt 1
	movq	-112(%rbp), %rax	# targ, tmp305
	movl	12(%rax), %eax	# targ_31->sv_flags, D.24023
	andl	$10223616, %eax	#, D.24023
	cmpl	$262144, %eax	#, D.24023
	jne	.L609	#,
	.loc 1 1495 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# targ, tmp306
	movq	(%rax), %rax	# targ_31->sv_any, D.24025
	movq	8(%rax), %rax	# MEM[(struct XPV *)_181].xpv_cur, len.452
	movq	%rax, -120(%rbp)	# len.452, len
	jmp	.L610	#
.L609:
	.loc 1 1495 0 discriminator 2
	leaq	-120(%rbp), %rcx	#, tmp308
	movq	-112(%rbp), %rax	# targ, tmp309
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp308,
	movq	%rax, %rdi	# tmp309,
	call	Perl_sv_pvn_force_flags	#
.L610:
	.loc 1 1496 0 is_stmt 1
	movq	-112(%rbp), %rax	# targ, tmp310
	movl	12(%rax), %eax	# targ_31->sv_flags, D.24023
	andl	$536870912, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L611	#,
	.loc 1 1496 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.454
	movzbl	37(%rax), %eax	# PL_curcop.454_188->op_private, D.24019
	movzbl	%al, %eax	# D.24019, D.24020
	andl	$8, %eax	#, D.24020
	testl	%eax, %eax	# D.24020
	jne	.L611	#,
	.loc 1 1496 0 discriminator 3
	movl	$1, %eax	#, iftmp.453
	jmp	.L612	#
.L611:
	.loc 1 1496 0 discriminator 2
	movl	$0, %eax	#, iftmp.453
.L612:
	.loc 1 1496 0 discriminator 4
	movb	%al, -133(%rbp)	# iftmp.453, isutf
	.loc 1 1497 0 is_stmt 1 discriminator 4
	cmpq	$1, %r12	#, count
	je	.L613	#,
	.loc 1 1498 0
	testq	%r12, %r12	# count
	jg	.L614	#,
	.loc 1 1499 0
	movq	-112(%rbp), %rax	# targ, tmp311
	movq	(%rax), %rax	# targ_31->sv_any, D.24025
	movq	$0, 8(%rax)	#, MEM[(struct XPV *)_195].xpv_cur
	jmp	.L615	#
.L614:
.LBB116:
	.loc 1 1501 0
	movq	%r12, %rdx	# count, count.455
	movq	-120(%rbp), %rax	# len, len.456
	imulq	%rdx, %rax	# count.455, tmp312
	movq	%rax, -40(%rbp)	# tmp312, max
	.loc 1 1502 0
	movq	%r12, %rsi	# count, count.457
	movq	$-1, %rax	#, tmp315
	movl	$0, %edx	#, tmp314
	divq	%rsi	# count.457
	movq	%rax, %rdx	# tmp313, D.24021
	movq	-120(%rbp), %rax	# len, len.458
	cmpq	%rax, %rdx	# len.458, D.24021
	jae	.L616	#,
	.loc 1 1503 0
	movl	$oom_string_extend.10706, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L616:
	.loc 1 1505 0
	movq	-112(%rbp), %rax	# targ, tmp316
	movq	(%rax), %rax	# targ_31->sv_any, D.24025
	movq	16(%rax), %rax	# MEM[(struct XPV *)_202].xpv_len, D.24021
	movq	-40(%rbp), %rdx	# max, tmp317
	addq	$1, %rdx	#, D.24021
	cmpq	%rdx, %rax	# D.24021, D.24021
	jae	.L618	#,
	.loc 1 1505 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# max, tmp318
	leaq	1(%rax), %rdx	#, D.24021
	movq	-112(%rbp), %rax	# targ, tmp319
	movq	%rdx, %rsi	# D.24021,
	movq	%rax, %rdi	# tmp319,
	call	Perl_sv_grow	#
.L618:
	.loc 1 1506 0 is_stmt 1
	movl	%r12d, %eax	# count, D.24027
	subl	$1, %eax	#, D.24027
	movl	%eax, %ecx	# D.24027, D.24020
	movq	-120(%rbp), %rax	# len, len.460
	movl	%eax, %edx	# len.460, D.24020
	movq	-112(%rbp), %rax	# targ, tmp321
	movq	(%rax), %rax	# targ_31->sv_any, D.24025
	movq	(%rax), %rax	# MEM[(struct XPV *)_214].xpv_pv, D.24028
	movq	-112(%rbp), %rsi	# targ, tmp322
	movq	(%rsi), %rsi	# targ_31->sv_any, D.24025
	movq	(%rsi), %rdi	# MEM[(struct XPV *)_216].xpv_pv, D.24028
	movq	-120(%rbp), %rsi	# len, len.461
	addq	%rsi, %rdi	# len.461, D.24028
	movq	%rax, %rsi	# D.24028,
	call	Perl_repeatcpy	#
	.loc 1 1507 0
	movq	-112(%rbp), %rax	# targ, tmp323
	movq	(%rax), %rax	# targ_31->sv_any, D.24025
	movq	-112(%rbp), %rdx	# targ, tmp324
	movq	(%rdx), %rdx	# targ_31->sv_any, D.24025
	movq	8(%rdx), %rcx	# MEM[(struct XPV *)_221].xpv_cur, D.24021
	movq	%r12, %rdx	# count, count.462
	imulq	%rcx, %rdx	# D.24021, D.24021
	movq	%rdx, 8(%rax)	# D.24021, MEM[(struct XPV *)_220].xpv_cur
.L615:
.LBE116:
	.loc 1 1509 0
	movq	-112(%rbp), %rax	# targ, tmp325
	movq	(%rax), %rax	# targ_31->sv_any, D.24025
	movq	(%rax), %rdx	# MEM[(struct XPV *)_225].xpv_pv, D.24028
	movq	-112(%rbp), %rax	# targ, tmp326
	movq	(%rax), %rax	# targ_31->sv_any, D.24025
	movq	8(%rax), %rax	# MEM[(struct XPV *)_227].xpv_cur, D.24021
	addq	%rdx, %rax	# D.24028, D.24028
	movb	$0, (%rax)	#, *_229
.L613:
	.loc 1 1511 0
	cmpb	$0, -133(%rbp)	#, isutf
	je	.L619	#,
	.loc 1 1512 0
	movq	-112(%rbp), %rax	# targ, tmp327
	movl	12(%rax), %eax	# targ_31->sv_flags, D.24023
	andl	$1760624639, %eax	#, D.24023
	movl	%eax, %edx	# D.24023, D.24023
	movq	-112(%rbp), %rax	# targ, tmp328
	movl	%edx, 12(%rax)	# D.24023, targ_31->sv_flags
	movq	-112(%rbp), %rax	# targ, tmp329
	movl	12(%rax), %eax	# targ_31->sv_flags, D.24023
	orl	$67371008, %eax	#, D.24023
	movl	%eax, %edx	# D.24023, D.24023
	movq	-112(%rbp), %rax	# targ, tmp330
	movl	%edx, 12(%rax)	# D.24023, targ_31->sv_flags
	jmp	.L620	#
.L619:
	.loc 1 1514 0
	movq	-112(%rbp), %rax	# targ, tmp331
	movl	12(%rax), %eax	# targ_31->sv_flags, D.24023
	andl	$1223753727, %eax	#, D.24023
	movl	%eax, %edx	# D.24023, D.24023
	movq	-112(%rbp), %rax	# targ, tmp332
	movl	%edx, 12(%rax)	# D.24023, targ_31->sv_flags
	movq	-112(%rbp), %rax	# targ, tmp333
	movl	12(%rax), %eax	# targ_31->sv_flags, D.24023
	orl	$67371008, %eax	#, D.24023
	movl	%eax, %edx	# D.24023, D.24023
	movq	-112(%rbp), %rax	# targ, tmp334
	movl	%edx, 12(%rax)	# D.24023, targ_31->sv_flags
.L620:
	.loc 1 1516 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.463
	movzbl	37(%rax), %eax	# PL_op.463_238->op_private, D.24019
	movzbl	%al, %eax	# D.24019, D.24020
	andl	$64, %eax	#, D.24020
	testl	%eax, %eax	# D.24020
	je	.L621	#,
.LBB117:
	.loc 1 1522 0
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.464
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.465
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.467
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.467, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.466_244, D.24020
	cltq
	salq	$3, %rax	#, D.24021
	leaq	(%rcx,%rax), %rbx	#, mark
.L621:
.LBE117:
.LBB118:
	.loc 1 1525 0
	movq	-112(%rbp), %rax	# targ, tmp335
	movl	12(%rax), %eax	# targ_31->sv_flags, D.24023
	andl	$16384, %eax	#, D.24023
	testl	%eax, %eax	# D.24023
	je	.L622	#,
	.loc 1 1525 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# targ, tmp336
	movq	%rax, %rdi	# tmp336,
	call	Perl_mg_set	#
.L622:
	.loc 1 1525 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-112(%rbp), %rax	# targ, tmp337
	movq	%rax, (%rbx)	# tmp337, *sp_253
.L607:
.LBE118:
.LBE115:
	.loc 1 1527 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.468
	movq	(%rax), %rax	# PL_op.468_255->op_next, D.24018
.L575:
.LBE109:
	.loc 1 1529 0
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE35:
	.size	Perl_pp_repeat, .-Perl_pp_repeat
	.globl	Perl_pp_subtract
	.type	Perl_pp_subtract, @function
Perl_pp_subtract:
.LFB36:
	.loc 1 1532 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	.loc 1 1533 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.470
	movzbl	36(%rax), %eax	# PL_op.470_21->op_flags, D.24031
	movzbl	%al, %eax	# D.24031, D.24032
	andl	$64, %eax	#, D.24032
	testl	%eax, %eax	# D.24032
	je	.L626	#,
	.loc 1 1533 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_20 + -8B], iftmp.469
	jmp	.L627	#
.L626:
	.loc 1 1533 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.471
	movq	PL_op(%rip), %rax	# PL_op, PL_op.472
	movq	24(%rax), %rax	# PL_op.472_27->op_targ, D.24033
	salq	$3, %rax	#, D.24033
	addq	%rdx, %rax	# PL_curpad.471, D.24034
	movq	(%rax), %rax	# *_30, iftmp.469
.L627:
	.loc 1 1533 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.469, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.473
	testq	%rax, %rax	# PL_amagic_generation.473
	je	.L628	#,
.LBB119:
	.loc 1 1533 0 discriminator 1
	movq	(%rbx), %rax	# *sp_20, tmp232
	movq	%rax, -64(%rbp)	# tmp232, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_20 + -8B], tmp233
	movq	%rax, -56(%rbp)	# tmp233, left
	movq	-56(%rbp), %rax	# left, tmp234
	movl	12(%rax), %eax	# left_35->sv_flags, D.24035
	andl	$268435456, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L629	#,
	.loc 1 1533 0 discriminator 2
	movq	-64(%rbp), %rax	# right, tmp235
	movl	12(%rax), %eax	# right_34->sv_flags, D.24035
	andl	$268435456, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L628	#,
.L629:
	.loc 1 1533 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.475
	movzbl	36(%rax), %eax	# PL_op.475_40->op_flags, D.24031
	movzbl	%al, %eax	# D.24031, D.24032
	andl	$64, %eax	#, D.24032
	testl	%eax, %eax	# D.24032
	je	.L630	#,
	movl	$4, %eax	#, iftmp.474
	jmp	.L631	#
.L630:
	.loc 1 1533 0 discriminator 2
	movl	$0, %eax	#, iftmp.474
.L631:
	.loc 1 1533 0 discriminator 3
	movq	-64(%rbp), %rsi	# right, tmp236
	movq	-56(%rbp), %rdi	# left, tmp237
	movl	%eax, %ecx	# iftmp.474,
	movl	$8, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -48(%rbp)	# tmp238, tmpsv
	cmpq	$0, -48(%rbp)	#, tmpsv
	je	.L628	#,
	.loc 1 1533 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.476
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.477
	movzbl	36(%rax), %eax	# PL_op.477_50->op_flags, D.24031
	movzbl	%al, %eax	# D.24031, D.24032
	andl	$64, %eax	#, D.24032
	testl	%eax, %eax	# D.24032
	jne	.L632	#,
	.loc 1 1533 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp239
	movl	12(%rax), %eax	# targ_32->sv_flags, D.24035
	andl	$1024, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L633	#,
.L632:
	.loc 1 1533 0 discriminator 1
	movq	-48(%rbp), %rcx	# tmpsv, tmp240
	movq	-72(%rbp), %rax	# targ, tmp241
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp240,
	movq	%rax, %rdi	# tmp241,
	call	Perl_sv_setsv_flags	#
.LBB120:
	movq	-72(%rbp), %rax	# targ, tmp242
	movl	12(%rax), %eax	# targ_32->sv_flags, D.24035
	andl	$16384, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L634	#,
	movq	-72(%rbp), %rax	# targ, tmp243
	movq	%rax, %rdi	# tmp243,
	call	Perl_mg_set	#
.L634:
	.loc 1 1533 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp244
	movq	%rax, (%rbx)	# tmp244, *sp_49
.LBE120:
	jmp	.L635	#
.L633:
	.loc 1 1533 0 discriminator 1
	movq	-48(%rbp), %rax	# tmpsv, tmp245
	movq	%rax, (%rbx)	# tmp245, *sp_49
.L635:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.478
	movq	(%rax), %rax	# PL_op.478_59->op_next, D.24030
	jmp	.L636	#
.L628:
.LBE119:
	.loc 1 1534 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_61, D.24036
	movl	12(%rax), %eax	# _62->sv_flags, D.24035
	andl	$118423552, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L637	#,
	.loc 1 1534 0 is_stmt 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_65, D.24036
	movl	12(%rax), %eax	# _66->sv_flags, D.24035
	andl	$8192, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L637	#,
	.loc 1 1534 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.480
	movzbl	36(%rax), %eax	# PL_op.480_69->op_flags, D.24031
	movzbl	%al, %eax	# D.24031, D.24032
	andl	$64, %eax	#, D.24032
	testl	%eax, %eax	# D.24032
	jne	.L638	#,
.L637:
	movl	$1, %eax	#, iftmp.479
	jmp	.L639	#
.L638:
	.loc 1 1534 0 discriminator 3
	movl	$0, %eax	#, iftmp.479
.L639:
	.loc 1 1534 0 discriminator 4
	movb	%al, -81(%rbp)	# iftmp.479, useleft
	.loc 1 1538 0 is_stmt 1 discriminator 4
	movq	(%rbx), %rax	# *sp_20, D.24036
	movl	12(%rax), %eax	# _76->sv_flags, D.24035
	andl	$16777216, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L640	#,
	.loc 1 1538 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_20, D.24036
	movl	12(%rax), %eax	# _79->sv_flags, D.24035
	andl	$131072, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L641	#,
	.loc 1 1538 0 discriminator 2
	movq	(%rbx), %rax	# *sp_20, D.24036
	movl	12(%rax), %eax	# _82->sv_flags, D.24035
	andl	$262144, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L640	#,
.L641:
	.loc 1 1538 0 discriminator 1
	movq	(%rbx), %rax	# *sp_20, D.24036
	movl	12(%rax), %eax	# _85->sv_flags, D.24035
	andl	$65536, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L640	#,
	.loc 1 1538 0 discriminator 2
	movq	(%rbx), %rax	# *sp_20, D.24036
	movq	%rax, %rdi	# D.24036,
	call	Perl_sv_2iv	#
.L640:
	.loc 1 1539 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_20, D.24036
	movl	12(%rax), %eax	# _93->sv_flags, D.24035
	andl	$65536, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L643	#,
.LBB121:
	.loc 1 1543 0
	movl	$0, %r12d	#, auv
	.loc 1 1544 0
	movb	$0, -85(%rbp)	#, auvok
	.loc 1 1545 0
	movb	$0, -84(%rbp)	#, a_valid
	.loc 1 1547 0
	cmpb	$0, -81(%rbp)	#, useleft
	jne	.L644	#,
	.loc 1 1548 0
	movl	$0, %r12d	#, auv
	.loc 1 1549 0
	movb	$1, -85(%rbp)	#, auvok
	movzbl	-85(%rbp), %eax	# auvok, tmp246
	movb	%al, -84(%rbp)	# tmp246, a_valid
	jmp	.L645	#
.L644:
	.loc 1 1553 0
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_102, D.24036
	movl	12(%rax), %eax	# _103->sv_flags, D.24035
	andl	$16777216, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L646	#,
	.loc 1 1553 0 is_stmt 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_106, D.24036
	movl	12(%rax), %eax	# _107->sv_flags, D.24035
	andl	$131072, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L647	#,
	.loc 1 1553 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_110, D.24036
	movl	12(%rax), %eax	# _111->sv_flags, D.24035
	andl	$262144, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L646	#,
.L647:
	.loc 1 1553 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_114, D.24036
	movl	12(%rax), %eax	# _115->sv_flags, D.24035
	andl	$65536, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L646	#,
	.loc 1 1553 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_122, D.24036
	movq	%rax, %rdi	# D.24036,
	call	Perl_sv_2iv	#
.L646:
	.loc 1 1554 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_125, D.24036
	movl	12(%rax), %eax	# _126->sv_flags, D.24035
	andl	$65536, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L645	#,
	.loc 1 1555 0
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_129, D.24036
	movl	12(%rax), %eax	# _130->sv_flags, D.24035
	andl	$-2147418112, %eax	#, D.24035
	cmpl	$-2147418112, %eax	#, D.24035
	sete	%al	#, D.24038
	movb	%al, -85(%rbp)	# D.24038, auvok
	cmpb	$0, -85(%rbp)	#, auvok
	je	.L649	#,
	.loc 1 1556 0
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_135, D.24036
	movq	(%rax), %rax	# _136->sv_any, D.24037
	movq	24(%rax), %r12	# MEM[(struct XPVUV *)_137].xuv_uv, auv
	jmp	.L650	#
.L649:
.LBB122:
	.loc 1 1558 0
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_139, D.24036
	movq	(%rax), %rax	# _140->sv_any, D.24037
	movq	24(%rax), %r12	# MEM[(struct XPVIV *)_141].xiv_iv, aiv
	.loc 1 1559 0
	testq	%r12, %r12	# aiv
	js	.L651	#,
	.loc 1 1561 0
	movb	$1, -85(%rbp)	#, auvok
	jmp	.L650	#
.L651:
	.loc 1 1563 0
	movq	%r12, %rax	# aiv, D.24039
	negq	%rax	# D.24039
	movq	%rax, %r12	# D.24039, auv
.L650:
.LBE122:
	.loc 1 1566 0
	movb	$1, -84(%rbp)	#, a_valid
.L645:
	.loc 1 1569 0
	cmpb	$0, -84(%rbp)	#, a_valid
	je	.L643	#,
.LBB123:
	.loc 1 1570 0
	movb	$0, -83(%rbp)	#, result_good
	.loc 1 1573 0
	movq	(%rbx), %rax	# *sp_20, D.24036
	movl	12(%rax), %eax	# _149->sv_flags, D.24035
	andl	$-2147418112, %eax	#, D.24035
	cmpl	$-2147418112, %eax	#, D.24035
	sete	%al	#, D.24038
	movb	%al, -82(%rbp)	# D.24038, buvok
	.loc 1 1575 0
	cmpb	$0, -82(%rbp)	#, buvok
	je	.L652	#,
	.loc 1 1576 0
	movq	(%rbx), %rax	# *sp_20, D.24036
	movq	(%rax), %rax	# _154->sv_any, D.24037
	movq	24(%rax), %r13	# MEM[(struct XPVUV *)_155].xuv_uv, buv
	jmp	.L653	#
.L652:
.LBB124:
	.loc 1 1578 0
	movq	(%rbx), %rax	# *sp_20, D.24036
	movq	(%rax), %rax	# _157->sv_any, D.24037
	movq	24(%rax), %r13	# MEM[(struct XPVIV *)_158].xiv_iv, biv
	.loc 1 1579 0
	testq	%r13, %r13	# biv
	js	.L654	#,
	.loc 1 1581 0
	movb	$1, -82(%rbp)	#, buvok
	jmp	.L653	#
.L654:
	.loc 1 1583 0
	movq	%r13, %rax	# biv, D.24039
	negq	%rax	# D.24039
	movq	%rax, %r13	# D.24039, buv
.L653:
.LBE124:
	.loc 1 1595 0
	movzbl	-85(%rbp), %eax	# auvok, tmp247
	cmpb	-82(%rbp), %al	# buvok, tmp247
	je	.L655	#,
	.loc 1 1597 0
	leaq	(%r12,%r13), %rax	#, tmp248
	movq	%rax, -80(%rbp)	# tmp248, result
	.loc 1 1598 0
	cmpq	%r12, -80(%rbp)	# auv, result
	jb	.L657	#,
	.loc 1 1599 0
	movb	$1, -83(%rbp)	#, result_good
	jmp	.L657	#
.L655:
	.loc 1 1602 0
	cmpq	%r13, %r12	# buv, auv
	jb	.L658	#,
	.loc 1 1603 0
	movq	%r12, %rax	# auv, tmp249
	subq	%r13, %rax	# buv, tmp249
	movq	%rax, -80(%rbp)	# tmp249, result
	.loc 1 1605 0
	cmpq	%r12, -80(%rbp)	# auv, result
	ja	.L657	#,
	.loc 1 1606 0
	movb	$1, -83(%rbp)	#, result_good
	jmp	.L657	#
.L658:
	.loc 1 1608 0
	movq	%r13, %rax	# buv, tmp250
	subq	%r12, %rax	# auv, tmp250
	movq	%rax, -80(%rbp)	# tmp250, result
	.loc 1 1609 0
	cmpq	%r13, -80(%rbp)	# buv, result
	ja	.L657	#,
	.loc 1 1612 0
	cmpb	$0, -85(%rbp)	#, auvok
	sete	%al	#, D.24038
	movb	%al, -85(%rbp)	# D.24038, auvok
	.loc 1 1613 0
	movb	$1, -83(%rbp)	#, result_good
.L657:
	.loc 1 1617 0
	cmpb	$0, -83(%rbp)	#, result_good
	je	.L643	#,
	.loc 1 1618 0
	subq	$8, %rbx	#, sp
	.loc 1 1619 0
	cmpb	$0, -85(%rbp)	#, auvok
	je	.L660	#,
.LBB125:
	.loc 1 1620 0
	movq	-80(%rbp), %rdx	# result, tmp251
	movq	-72(%rbp), %rax	# targ, tmp252
	movq	%rdx, %rsi	# tmp251,
	movq	%rax, %rdi	# tmp252,
	call	Perl_sv_setuv	#
.LBB126:
	movq	-72(%rbp), %rax	# targ, tmp253
	movl	12(%rax), %eax	# targ_32->sv_flags, D.24035
	andl	$16384, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L661	#,
	.loc 1 1620 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp254
	movq	%rax, %rdi	# tmp254,
	call	Perl_mg_set	#
.L661:
	.loc 1 1620 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp255
	movq	%rax, (%rbx)	# tmp255, *sp_172
.LBE126:
.LBE125:
	jmp	.L662	#
.L660:
	.loc 1 1623 0 is_stmt 1
	movabsq	$-9223372036854775808, %rax	#, tmp256
	cmpq	%rax, -80(%rbp)	# tmp256, result
	ja	.L663	#,
.LBB127:
	.loc 1 1624 0
	movq	-80(%rbp), %rax	# result, result.483
	negq	%rax	# D.24039
	movq	%rax, %rdx	# D.24039, D.24039
	movq	-72(%rbp), %rax	# targ, tmp257
	movq	%rdx, %rsi	# D.24039,
	movq	%rax, %rdi	# tmp257,
	call	Perl_sv_setiv	#
.LBB128:
	movq	-72(%rbp), %rax	# targ, tmp258
	movl	12(%rax), %eax	# targ_32->sv_flags, D.24035
	andl	$16384, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L664	#,
	.loc 1 1624 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp259
	movq	%rax, %rdi	# tmp259,
	call	Perl_mg_set	#
.L664:
	.loc 1 1624 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp260
	movq	%rax, (%rbx)	# tmp260, *sp_172
.LBE128:
.LBE127:
	jmp	.L662	#
.L663:
.LBB129:
	.loc 1 1627 0 is_stmt 1
	movq	-80(%rbp), %rax	# result, tmp261
	testq	%rax, %rax	# tmp261
	js	.L665	#,
	cvtsi2sdq	%rax, %xmm0	# tmp261, D.24040
	jmp	.L666	#
.L665:
	movq	%rax, %rdx	# tmp261, tmp263
	shrq	%rdx	# tmp263
	andl	$1, %eax	#, tmp264
	orq	%rax, %rdx	# tmp264, tmp263
	cvtsi2sdq	%rdx, %xmm0	# tmp263, tmp262
	addsd	%xmm0, %xmm0	# tmp262, D.24040
.L666:
	movsd	.LC30(%rip), %xmm1	#, tmp265
	xorpd	%xmm1, %xmm0	# tmp265, D.24040
	movq	-72(%rbp), %rax	# targ, tmp266
	movq	%rax, %rdi	# tmp266,
	call	Perl_sv_setnv	#
.LBB130:
	movq	-72(%rbp), %rax	# targ, tmp267
	movl	12(%rax), %eax	# targ_32->sv_flags, D.24035
	andl	$16384, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L667	#,
	.loc 1 1627 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp268
	movq	%rax, %rdi	# tmp268,
	call	Perl_mg_set	#
.L667:
	.loc 1 1627 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp269
	movq	%rax, (%rbx)	# tmp269, *sp_172
.L662:
.LBE130:
.LBE129:
	.loc 1 1630 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.484
	movq	(%rax), %rax	# PL_op.484_186->op_next, D.24030
	jmp	.L636	#
.L643:
.LBE123:
.LBE121:
	.loc 1 1635 0
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_188, D.24036
	movl	12(%rax), %eax	# _189->sv_flags, D.24035
	andl	$118423552, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L668	#,
	.loc 1 1635 0 is_stmt 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24034
	movq	(%rax), %rax	# *_192, D.24036
	movl	12(%rax), %eax	# _193->sv_flags, D.24035
	andl	$8192, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	jne	.L668	#,
	.loc 1 1635 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.486
	movzbl	36(%rax), %eax	# PL_op.486_196->op_flags, D.24031
	movzbl	%al, %eax	# D.24031, D.24032
	andl	$64, %eax	#, D.24032
	testl	%eax, %eax	# D.24032
	jne	.L669	#,
.L668:
	movl	$1, %eax	#, iftmp.485
	jmp	.L670	#
.L669:
	.loc 1 1635 0 discriminator 3
	movl	$0, %eax	#, iftmp.485
.L670:
	.loc 1 1635 0 discriminator 4
	movb	%al, -81(%rbp)	# iftmp.485, useleft
.LBB131:
	.loc 1 1637 0 is_stmt 1 discriminator 4
	movq	%rbx, %rax	# sp, sp.487
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.487_203, PL_Sv.488
	movq	%rax, PL_Sv(%rip)	# PL_Sv.488, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.490
	movl	12(%rax), %eax	# PL_Sv.490_206->sv_flags, D.24035
	andl	$131072, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L671	#,
	.loc 1 1637 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.491
	movq	(%rax), %rax	# PL_Sv.491_209->sv_any, D.24037
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_210].xnv_nv, iftmp.489
	jmp	.L672	#
.L671:
	.loc 1 1637 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.492
	movq	%rax, %rdi	# PL_Sv.492,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -104(%rbp)	#, %sfp
	movq	-104(%rbp), %rax	# %sfp, iftmp.489
.L672:
	.loc 1 1637 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.489, value
	.loc 1 1638 0 is_stmt 1 discriminator 3
	cmpb	$0, -81(%rbp)	#, useleft
	jne	.L673	#,
.LBB132:
	.loc 1 1640 0
	movsd	-40(%rbp), %xmm1	# value, tmp270
	movsd	.LC30(%rip), %xmm0	#, tmp271
	xorpd	%xmm1, %xmm0	# tmp270, D.24040
	movq	-72(%rbp), %rax	# targ, tmp272
	movq	%rax, %rdi	# tmp272,
	call	Perl_sv_setnv	#
.LBB133:
	movq	-72(%rbp), %rax	# targ, tmp273
	movl	12(%rax), %eax	# targ_32->sv_flags, D.24035
	andl	$16384, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L674	#,
	.loc 1 1640 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp274
	movq	%rax, %rdi	# tmp274,
	call	Perl_mg_set	#
.L674:
	.loc 1 1640 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp275
	movq	%rax, (%rbx)	# tmp275, *sp_204
.LBE133:
.LBE132:
	.loc 1 1641 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.493
	movq	(%rax), %rax	# PL_op.493_219->op_next, D.24030
	jmp	.L636	#
.L673:
.LBB134:
	.loc 1 1643 0
	movq	(%rbx), %rax	# *sp_204, D.24036
	movl	12(%rax), %eax	# _221->sv_flags, D.24035
	andl	$131072, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L675	#,
	.loc 1 1643 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_204, D.24036
	movq	(%rax), %rax	# _224->sv_any, D.24037
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_225].xnv_nv, iftmp.494
	jmp	.L676	#
.L675:
	.loc 1 1643 0 discriminator 2
	movq	(%rbx), %rax	# *sp_204, D.24036
	movq	%rax, %rdi	# D.24036,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -104(%rbp)	#, %sfp
	movq	-104(%rbp), %rax	# %sfp, iftmp.494
.L676:
	.loc 1 1643 0 discriminator 3
	movq	%rax, -104(%rbp)	# iftmp.494, %sfp
	movsd	-104(%rbp), %xmm0	# %sfp, D.24040
	subsd	-40(%rbp), %xmm0	# value, D.24040
	movq	-72(%rbp), %rax	# targ, tmp276
	movq	%rax, %rdi	# tmp276,
	call	Perl_sv_setnv	#
.LBB135:
	movq	-72(%rbp), %rax	# targ, tmp277
	movl	12(%rax), %eax	# targ_32->sv_flags, D.24035
	andl	$16384, %eax	#, D.24035
	testl	%eax, %eax	# D.24035
	je	.L677	#,
	.loc 1 1643 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp278
	movq	%rax, %rdi	# tmp278,
	call	Perl_mg_set	#
.L677:
	.loc 1 1643 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp279
	movq	%rax, (%rbx)	# tmp279, *sp_204
.LBE135:
.LBE134:
	.loc 1 1644 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.495
	movq	(%rax), %rax	# PL_op.495_233->op_next, D.24030
.L636:
.LBE131:
	.loc 1 1646 0
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE36:
	.size	Perl_pp_subtract, .-Perl_pp_subtract
	.globl	Perl_pp_left_shift
	.type	Perl_pp_left_shift, @function
Perl_pp_left_shift:
.LFB37:
	.loc 1 1649 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 1650 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.497
	movzbl	36(%rax), %eax	# PL_op.497_8->op_flags, D.24042
	movzbl	%al, %eax	# D.24042, D.24043
	andl	$64, %eax	#, D.24043
	testl	%eax, %eax	# D.24043
	je	.L679	#,
	.loc 1 1650 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_7 + -8B], iftmp.496
	jmp	.L680	#
.L679:
	.loc 1 1650 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.498
	movq	PL_op(%rip), %rax	# PL_op, PL_op.499
	movq	24(%rax), %rax	# PL_op.499_14->op_targ, D.24044
	salq	$3, %rax	#, D.24044
	addq	%rdx, %rax	# PL_curpad.498, D.24045
	movq	(%rax), %rax	# *_17, iftmp.496
.L680:
	.loc 1 1650 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.496, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.500
	testq	%rax, %rax	# PL_amagic_generation.500
	je	.L681	#,
.LBB136:
	.loc 1 1650 0 discriminator 1
	movq	(%rbx), %rax	# *sp_7, tmp131
	movq	%rax, -64(%rbp)	# tmp131, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_7 + -8B], tmp132
	movq	%rax, -56(%rbp)	# tmp132, left
	movq	-56(%rbp), %rax	# left, tmp133
	movl	12(%rax), %eax	# left_22->sv_flags, D.24046
	andl	$268435456, %eax	#, D.24046
	testl	%eax, %eax	# D.24046
	jne	.L682	#,
	.loc 1 1650 0 discriminator 2
	movq	-64(%rbp), %rax	# right, tmp134
	movl	12(%rax), %eax	# right_21->sv_flags, D.24046
	andl	$268435456, %eax	#, D.24046
	testl	%eax, %eax	# D.24046
	je	.L681	#,
.L682:
	.loc 1 1650 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.502
	movzbl	36(%rax), %eax	# PL_op.502_27->op_flags, D.24042
	movzbl	%al, %eax	# D.24042, D.24043
	andl	$64, %eax	#, D.24043
	testl	%eax, %eax	# D.24043
	je	.L683	#,
	movl	$4, %eax	#, iftmp.501
	jmp	.L684	#
.L683:
	.loc 1 1650 0 discriminator 2
	movl	$0, %eax	#, iftmp.501
.L684:
	.loc 1 1650 0 discriminator 3
	movq	-64(%rbp), %rsi	# right, tmp135
	movq	-56(%rbp), %rdi	# left, tmp136
	movl	%eax, %ecx	# iftmp.501,
	movl	$18, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -48(%rbp)	# tmp137, tmpsv
	cmpq	$0, -48(%rbp)	#, tmpsv
	je	.L681	#,
	.loc 1 1650 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.503
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.504
	movzbl	36(%rax), %eax	# PL_op.504_37->op_flags, D.24042
	movzbl	%al, %eax	# D.24042, D.24043
	andl	$64, %eax	#, D.24043
	testl	%eax, %eax	# D.24043
	jne	.L685	#,
	.loc 1 1650 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp138
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24046
	andl	$1024, %eax	#, D.24046
	testl	%eax, %eax	# D.24046
	je	.L686	#,
.L685:
	.loc 1 1650 0 discriminator 1
	movq	-48(%rbp), %rcx	# tmpsv, tmp139
	movq	-72(%rbp), %rax	# targ, tmp140
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp139,
	movq	%rax, %rdi	# tmp140,
	call	Perl_sv_setsv_flags	#
.LBB137:
	movq	-72(%rbp), %rax	# targ, tmp141
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24046
	andl	$16384, %eax	#, D.24046
	testl	%eax, %eax	# D.24046
	je	.L687	#,
	movq	-72(%rbp), %rax	# targ, tmp142
	movq	%rax, %rdi	# tmp142,
	call	Perl_mg_set	#
.L687:
	.loc 1 1650 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp143
	movq	%rax, (%rbx)	# tmp143, *sp_36
.LBE137:
	jmp	.L688	#
.L686:
	.loc 1 1650 0 discriminator 1
	movq	-48(%rbp), %rax	# tmpsv, tmp144
	movq	%rax, (%rbx)	# tmp144, *sp_36
.L688:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.505
	movq	(%rax), %rax	# PL_op.505_46->op_next, D.24041
	jmp	.L689	#
.L681:
.LBE136:
.LBB138:
	.loc 1 1652 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.506
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.506_48, PL_Sv.507
	movq	%rax, PL_Sv(%rip)	# PL_Sv.507, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.509
	movl	12(%rax), %eax	# PL_Sv.509_51->sv_flags, D.24046
	andl	$65536, %eax	#, D.24046
	testl	%eax, %eax	# D.24046
	je	.L690	#,
	.loc 1 1652 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.510
	movq	(%rax), %rax	# PL_Sv.510_54->sv_any, D.24048
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_55].xiv_iv, iftmp.508
	jmp	.L691	#
.L690:
	.loc 1 1652 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.511
	movq	%rax, %rdi	# PL_Sv.511,
	call	Perl_sv_2iv	#
.L691:
	.loc 1 1652 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.508, shift
	.loc 1 1653 0 is_stmt 1 discriminator 3
	movq	PL_op(%rip), %rax	# PL_op, PL_op.512
	movzbl	37(%rax), %eax	# PL_op.512_60->op_private, D.24042
	movzbl	%al, %eax	# D.24042, D.24043
	andl	$1, %eax	#, D.24043
	testl	%eax, %eax	# D.24043
	je	.L692	#,
.LBB139:
	.loc 1 1654 0
	movq	(%rbx), %rax	# *sp_49, D.24047
	movl	12(%rax), %eax	# _64->sv_flags, D.24046
	andl	$65536, %eax	#, D.24046
	testl	%eax, %eax	# D.24046
	je	.L693	#,
	.loc 1 1654 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_49, D.24047
	movq	(%rax), %rax	# _67->sv_any, D.24048
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_68].xiv_iv, iftmp.513
	jmp	.L694	#
.L693:
	.loc 1 1654 0 discriminator 2
	movq	(%rbx), %rax	# *sp_49, D.24047
	movq	%rax, %rdi	# D.24047,
	call	Perl_sv_2iv	#
.L694:
	.loc 1 1654 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.513, i
.LBB140:
	.loc 1 1655 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# shift, tmp145
	movq	-32(%rbp), %rdx	# i, tmp146
	movl	%eax, %ecx	# D.24043, tmp158
	salq	%cl, %rdx	# tmp158, D.24049
	movq	-72(%rbp), %rax	# targ, tmp147
	movq	%rdx, %rsi	# D.24049,
	movq	%rax, %rdi	# tmp147,
	call	Perl_sv_setiv	#
.LBB141:
	movq	-72(%rbp), %rax	# targ, tmp148
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24046
	andl	$16384, %eax	#, D.24046
	testl	%eax, %eax	# D.24046
	je	.L695	#,
	.loc 1 1655 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp149
	movq	%rax, %rdi	# tmp149,
	call	Perl_mg_set	#
.L695:
	.loc 1 1655 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp150
	movq	%rax, (%rbx)	# tmp150, *sp_49
.LBE141:
.LBE140:
.LBE139:
	jmp	.L696	#
.L692:
.LBB142:
	.loc 1 1658 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_49, D.24047
	movl	12(%rax), %eax	# _78->sv_flags, D.24046
	andl	$65536, %eax	#, D.24046
	testl	%eax, %eax	# D.24046
	je	.L697	#,
	.loc 1 1658 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_49, D.24047
	movq	(%rax), %rax	# _81->sv_any, D.24048
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_82].xuv_uv, iftmp.514
	jmp	.L698	#
.L697:
	.loc 1 1658 0 discriminator 2
	movq	(%rbx), %rax	# *sp_49, D.24047
	movq	%rax, %rdi	# D.24047,
	call	Perl_sv_2uv	#
.L698:
	.loc 1 1658 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.514, u
.LBB143:
	.loc 1 1659 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# shift, tmp151
	movq	-24(%rbp), %rdx	# u, tmp152
	movl	%eax, %ecx	# D.24043, tmp159
	salq	%cl, %rdx	# tmp159, D.24044
	movq	-72(%rbp), %rax	# targ, tmp153
	movq	%rdx, %rsi	# D.24044,
	movq	%rax, %rdi	# tmp153,
	call	Perl_sv_setuv	#
.LBB144:
	movq	-72(%rbp), %rax	# targ, tmp154
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24046
	andl	$16384, %eax	#, D.24046
	testl	%eax, %eax	# D.24046
	je	.L699	#,
	.loc 1 1659 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp155
	movq	%rax, %rdi	# tmp155,
	call	Perl_mg_set	#
.L699:
	.loc 1 1659 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp156
	movq	%rax, (%rbx)	# tmp156, *sp_49
.L696:
.LBE144:
.LBE143:
.LBE142:
	.loc 1 1661 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.515
	movq	(%rax), %rax	# PL_op.515_92->op_next, D.24041
.L689:
.LBE138:
	.loc 1 1663 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE37:
	.size	Perl_pp_left_shift, .-Perl_pp_left_shift
	.globl	Perl_pp_right_shift
	.type	Perl_pp_right_shift, @function
Perl_pp_right_shift:
.LFB38:
	.loc 1 1666 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 1667 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.517
	movzbl	36(%rax), %eax	# PL_op.517_8->op_flags, D.24051
	movzbl	%al, %eax	# D.24051, D.24052
	andl	$64, %eax	#, D.24052
	testl	%eax, %eax	# D.24052
	je	.L701	#,
	.loc 1 1667 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_7 + -8B], iftmp.516
	jmp	.L702	#
.L701:
	.loc 1 1667 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.518
	movq	PL_op(%rip), %rax	# PL_op, PL_op.519
	movq	24(%rax), %rax	# PL_op.519_14->op_targ, D.24053
	salq	$3, %rax	#, D.24053
	addq	%rdx, %rax	# PL_curpad.518, D.24054
	movq	(%rax), %rax	# *_17, iftmp.516
.L702:
	.loc 1 1667 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.516, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.520
	testq	%rax, %rax	# PL_amagic_generation.520
	je	.L703	#,
.LBB145:
	.loc 1 1667 0 discriminator 1
	movq	(%rbx), %rax	# *sp_7, tmp131
	movq	%rax, -64(%rbp)	# tmp131, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_7 + -8B], tmp132
	movq	%rax, -56(%rbp)	# tmp132, left
	movq	-56(%rbp), %rax	# left, tmp133
	movl	12(%rax), %eax	# left_22->sv_flags, D.24055
	andl	$268435456, %eax	#, D.24055
	testl	%eax, %eax	# D.24055
	jne	.L704	#,
	.loc 1 1667 0 discriminator 2
	movq	-64(%rbp), %rax	# right, tmp134
	movl	12(%rax), %eax	# right_21->sv_flags, D.24055
	andl	$268435456, %eax	#, D.24055
	testl	%eax, %eax	# D.24055
	je	.L703	#,
.L704:
	.loc 1 1667 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.522
	movzbl	36(%rax), %eax	# PL_op.522_27->op_flags, D.24051
	movzbl	%al, %eax	# D.24051, D.24052
	andl	$64, %eax	#, D.24052
	testl	%eax, %eax	# D.24052
	je	.L705	#,
	movl	$4, %eax	#, iftmp.521
	jmp	.L706	#
.L705:
	.loc 1 1667 0 discriminator 2
	movl	$0, %eax	#, iftmp.521
.L706:
	.loc 1 1667 0 discriminator 3
	movq	-64(%rbp), %rsi	# right, tmp135
	movq	-56(%rbp), %rdi	# left, tmp136
	movl	%eax, %ecx	# iftmp.521,
	movl	$20, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -48(%rbp)	# tmp137, tmpsv
	cmpq	$0, -48(%rbp)	#, tmpsv
	je	.L703	#,
	.loc 1 1667 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.523
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.524
	movzbl	36(%rax), %eax	# PL_op.524_37->op_flags, D.24051
	movzbl	%al, %eax	# D.24051, D.24052
	andl	$64, %eax	#, D.24052
	testl	%eax, %eax	# D.24052
	jne	.L707	#,
	.loc 1 1667 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp138
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24055
	andl	$1024, %eax	#, D.24055
	testl	%eax, %eax	# D.24055
	je	.L708	#,
.L707:
	.loc 1 1667 0 discriminator 1
	movq	-48(%rbp), %rcx	# tmpsv, tmp139
	movq	-72(%rbp), %rax	# targ, tmp140
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp139,
	movq	%rax, %rdi	# tmp140,
	call	Perl_sv_setsv_flags	#
.LBB146:
	movq	-72(%rbp), %rax	# targ, tmp141
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24055
	andl	$16384, %eax	#, D.24055
	testl	%eax, %eax	# D.24055
	je	.L709	#,
	movq	-72(%rbp), %rax	# targ, tmp142
	movq	%rax, %rdi	# tmp142,
	call	Perl_mg_set	#
.L709:
	.loc 1 1667 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp143
	movq	%rax, (%rbx)	# tmp143, *sp_36
.LBE146:
	jmp	.L710	#
.L708:
	.loc 1 1667 0 discriminator 1
	movq	-48(%rbp), %rax	# tmpsv, tmp144
	movq	%rax, (%rbx)	# tmp144, *sp_36
.L710:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.525
	movq	(%rax), %rax	# PL_op.525_46->op_next, D.24050
	jmp	.L711	#
.L703:
.LBE145:
.LBB147:
	.loc 1 1669 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.526
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.526_48, PL_Sv.527
	movq	%rax, PL_Sv(%rip)	# PL_Sv.527, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.529
	movl	12(%rax), %eax	# PL_Sv.529_51->sv_flags, D.24055
	andl	$65536, %eax	#, D.24055
	testl	%eax, %eax	# D.24055
	je	.L712	#,
	.loc 1 1669 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.530
	movq	(%rax), %rax	# PL_Sv.530_54->sv_any, D.24057
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_55].xiv_iv, iftmp.528
	jmp	.L713	#
.L712:
	.loc 1 1669 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.531
	movq	%rax, %rdi	# PL_Sv.531,
	call	Perl_sv_2iv	#
.L713:
	.loc 1 1669 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.528, shift
	.loc 1 1670 0 is_stmt 1 discriminator 3
	movq	PL_op(%rip), %rax	# PL_op, PL_op.532
	movzbl	37(%rax), %eax	# PL_op.532_60->op_private, D.24051
	movzbl	%al, %eax	# D.24051, D.24052
	andl	$1, %eax	#, D.24052
	testl	%eax, %eax	# D.24052
	je	.L714	#,
.LBB148:
	.loc 1 1671 0
	movq	(%rbx), %rax	# *sp_49, D.24056
	movl	12(%rax), %eax	# _64->sv_flags, D.24055
	andl	$65536, %eax	#, D.24055
	testl	%eax, %eax	# D.24055
	je	.L715	#,
	.loc 1 1671 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_49, D.24056
	movq	(%rax), %rax	# _67->sv_any, D.24057
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_68].xiv_iv, iftmp.533
	jmp	.L716	#
.L715:
	.loc 1 1671 0 discriminator 2
	movq	(%rbx), %rax	# *sp_49, D.24056
	movq	%rax, %rdi	# D.24056,
	call	Perl_sv_2iv	#
.L716:
	.loc 1 1671 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.533, i
.LBB149:
	.loc 1 1672 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# shift, tmp145
	movq	-32(%rbp), %rdx	# i, tmp146
	movl	%eax, %ecx	# D.24052, tmp158
	sarq	%cl, %rdx	# tmp158, D.24058
	movq	-72(%rbp), %rax	# targ, tmp147
	movq	%rdx, %rsi	# D.24058,
	movq	%rax, %rdi	# tmp147,
	call	Perl_sv_setiv	#
.LBB150:
	movq	-72(%rbp), %rax	# targ, tmp148
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24055
	andl	$16384, %eax	#, D.24055
	testl	%eax, %eax	# D.24055
	je	.L717	#,
	.loc 1 1672 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp149
	movq	%rax, %rdi	# tmp149,
	call	Perl_mg_set	#
.L717:
	.loc 1 1672 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp150
	movq	%rax, (%rbx)	# tmp150, *sp_49
.LBE150:
.LBE149:
.LBE148:
	jmp	.L718	#
.L714:
.LBB151:
	.loc 1 1675 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_49, D.24056
	movl	12(%rax), %eax	# _78->sv_flags, D.24055
	andl	$65536, %eax	#, D.24055
	testl	%eax, %eax	# D.24055
	je	.L719	#,
	.loc 1 1675 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_49, D.24056
	movq	(%rax), %rax	# _81->sv_any, D.24057
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_82].xuv_uv, iftmp.534
	jmp	.L720	#
.L719:
	.loc 1 1675 0 discriminator 2
	movq	(%rbx), %rax	# *sp_49, D.24056
	movq	%rax, %rdi	# D.24056,
	call	Perl_sv_2uv	#
.L720:
	.loc 1 1675 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.534, u
.LBB152:
	.loc 1 1676 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# shift, tmp151
	movq	-24(%rbp), %rdx	# u, tmp152
	movl	%eax, %ecx	# D.24052, tmp159
	shrq	%cl, %rdx	# tmp159, D.24053
	movq	-72(%rbp), %rax	# targ, tmp153
	movq	%rdx, %rsi	# D.24053,
	movq	%rax, %rdi	# tmp153,
	call	Perl_sv_setuv	#
.LBB153:
	movq	-72(%rbp), %rax	# targ, tmp154
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24055
	andl	$16384, %eax	#, D.24055
	testl	%eax, %eax	# D.24055
	je	.L721	#,
	.loc 1 1676 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp155
	movq	%rax, %rdi	# tmp155,
	call	Perl_mg_set	#
.L721:
	.loc 1 1676 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp156
	movq	%rax, (%rbx)	# tmp156, *sp_49
.L718:
.LBE153:
.LBE152:
.LBE151:
	.loc 1 1678 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.535
	movq	(%rax), %rax	# PL_op.535_92->op_next, D.24050
.L711:
.LBE147:
	.loc 1 1680 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE38:
	.size	Perl_pp_right_shift, .-Perl_pp_right_shift
	.globl	Perl_pp_lt
	.type	Perl_pp_lt, @function
Perl_pp_lt:
.LFB39:
	.loc 1 1683 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 1684 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.536
	testq	%rax, %rax	# PL_amagic_generation.536
	je	.L723	#,
.LBB154:
	.loc 1 1684 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, tmp197
	movq	%rax, -112(%rbp)	# tmp197, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_10 + -8B], tmp198
	movq	%rax, -104(%rbp)	# tmp198, left
	movq	-104(%rbp), %rax	# left, tmp199
	movl	12(%rax), %eax	# left_13->sv_flags, D.24060
	andl	$268435456, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	jne	.L724	#,
	.loc 1 1684 0 discriminator 2
	movq	-112(%rbp), %rax	# right, tmp200
	movl	12(%rax), %eax	# right_12->sv_flags, D.24060
	andl	$268435456, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	je	.L723	#,
.L724:
	.loc 1 1684 0 discriminator 1
	movq	-112(%rbp), %rsi	# right, tmp201
	movq	-104(%rbp), %rax	# left, tmp202
	movl	$0, %ecx	#,
	movl	$28, %edx	#,
	movq	%rax, %rdi	# tmp202,
	call	Perl_amagic_call	#
	movq	%rax, -96(%rbp)	# tmp203, tmpsv
	cmpq	$0, -96(%rbp)	#, tmpsv
	je	.L723	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.537
	leaq	-8(%rax), %rbx	#, sp
	movq	-96(%rbp), %rax	# tmpsv, tmp204
	movq	%rax, (%rbx)	# tmp204, *sp_21
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.538
	movq	(%rax), %rax	# PL_op.538_22->op_next, D.24059
	jmp	.L725	#
.L723:
.LBE154:
	.loc 1 1686 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_10, D.24061
	movl	12(%rax), %eax	# _24->sv_flags, D.24060
	andl	$16777216, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	jne	.L726	#,
	.loc 1 1686 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24061
	movl	12(%rax), %eax	# _27->sv_flags, D.24060
	andl	$131072, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	jne	.L727	#,
	.loc 1 1686 0 discriminator 2
	movq	(%rbx), %rax	# *sp_10, D.24061
	movl	12(%rax), %eax	# _30->sv_flags, D.24060
	andl	$262144, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	je	.L726	#,
.L727:
	.loc 1 1686 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24061
	movl	12(%rax), %eax	# _33->sv_flags, D.24060
	andl	$65536, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	jne	.L726	#,
	.loc 1 1686 0 discriminator 2
	movq	(%rbx), %rax	# *sp_10, D.24061
	movq	%rax, %rdi	# D.24061,
	call	Perl_sv_2iv	#
.L726:
	.loc 1 1687 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_10, D.24061
	movl	12(%rax), %eax	# _41->sv_flags, D.24060
	andl	$65536, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	je	.L729	#,
	.loc 1 1688 0
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_44, D.24061
	movl	12(%rax), %eax	# _45->sv_flags, D.24060
	andl	$16777216, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	jne	.L730	#,
	.loc 1 1688 0 is_stmt 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_48, D.24061
	movl	12(%rax), %eax	# _49->sv_flags, D.24060
	andl	$131072, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	jne	.L731	#,
	.loc 1 1688 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_52, D.24061
	movl	12(%rax), %eax	# _53->sv_flags, D.24060
	andl	$262144, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	je	.L730	#,
.L731:
	.loc 1 1688 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_56, D.24061
	movl	12(%rax), %eax	# _57->sv_flags, D.24060
	andl	$65536, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	jne	.L730	#,
	.loc 1 1688 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_64, D.24061
	movq	%rax, %rdi	# D.24061,
	call	Perl_sv_2iv	#
.L730:
	.loc 1 1689 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_67, D.24061
	movl	12(%rax), %eax	# _68->sv_flags, D.24060
	andl	$65536, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	je	.L733	#,
.LBB155:
	.loc 1 1690 0
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_71, D.24061
	movl	12(%rax), %eax	# _72->sv_flags, D.24060
	andl	$-2147418112, %eax	#, D.24060
	cmpl	$-2147418112, %eax	#, D.24060
	sete	%al	#, D.24064
	movb	%al, -114(%rbp)	# D.24064, auvok
	.loc 1 1691 0
	movq	(%rbx), %rax	# *sp_10, D.24061
	movl	12(%rax), %eax	# _77->sv_flags, D.24060
	andl	$-2147418112, %eax	#, D.24060
	cmpl	$-2147418112, %eax	#, D.24060
	sete	%al	#, D.24064
	movb	%al, -113(%rbp)	# D.24064, buvok
	.loc 1 1693 0
	cmpb	$0, -114(%rbp)	#, auvok
	jne	.L734	#,
	.loc 1 1693 0 is_stmt 0 discriminator 1
	cmpb	$0, -113(%rbp)	#, buvok
	jne	.L734	#,
.LBB156:
	.loc 1 1694 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_82, D.24061
	movq	(%rax), %rax	# _83->sv_any, D.24062
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_84].xiv_iv, tmp205
	movq	%rax, -88(%rbp)	# tmp205, aiv
	.loc 1 1695 0
	movq	(%rbx), %rax	# *sp_10, D.24061
	movq	(%rax), %rax	# _86->sv_any, D.24062
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_87].xiv_iv, tmp206
	movq	%rax, -80(%rbp)	# tmp206, biv
	.loc 1 1697 0
	subq	$8, %rbx	#, sp
	.loc 1 1698 0
	movq	-88(%rbp), %rax	# aiv, tmp207
	cmpq	-80(%rbp), %rax	# biv, tmp207
	jge	.L735	#,
	.loc 1 1698 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.541
	jmp	.L736	#
.L735:
	.loc 1 1698 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.541
.L736:
	.loc 1 1698 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.541, *sp_89
	.loc 1 1699 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.542
	movq	(%rax), %rax	# PL_op.542_92->op_next, D.24059
	jmp	.L725	#
.L734:
.LBE156:
	.loc 1 1701 0
	cmpb	$0, -114(%rbp)	#, auvok
	je	.L737	#,
	.loc 1 1701 0 is_stmt 0 discriminator 1
	cmpb	$0, -113(%rbp)	#, buvok
	je	.L737	#,
.LBB157:
	.loc 1 1702 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_94, D.24061
	movq	(%rax), %rax	# _95->sv_any, D.24062
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_96].xuv_uv, tmp208
	movq	%rax, -72(%rbp)	# tmp208, auv
	.loc 1 1703 0
	movq	(%rbx), %rax	# *sp_10, D.24061
	movq	(%rax), %rax	# _98->sv_any, D.24062
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_99].xuv_uv, tmp209
	movq	%rax, -64(%rbp)	# tmp209, buv
	.loc 1 1705 0
	subq	$8, %rbx	#, sp
	.loc 1 1706 0
	movq	-72(%rbp), %rax	# auv, tmp210
	cmpq	-64(%rbp), %rax	# buv, tmp210
	jae	.L738	#,
	.loc 1 1706 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.543
	jmp	.L739	#
.L738:
	.loc 1 1706 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.543
.L739:
	.loc 1 1706 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.543, *sp_101
	.loc 1 1707 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.544
	movq	(%rax), %rax	# PL_op.544_104->op_next, D.24059
	jmp	.L725	#
.L737:
.LBE157:
	.loc 1 1709 0
	cmpb	$0, -114(%rbp)	#, auvok
	je	.L740	#,
.LBB158:
	.loc 1 1713 0
	movq	(%rbx), %rax	# *sp_10, D.24061
	movq	(%rax), %rax	# _106->sv_any, D.24062
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_107].xiv_iv, tmp211
	movq	%rax, -56(%rbp)	# tmp211, biv
	.loc 1 1714 0
	subq	$8, %rbx	#, sp
	.loc 1 1715 0
	cmpq	$0, -56(%rbp)	#, biv
	jns	.L741	#,
	.loc 1 1717 0
	movq	$PL_sv_no, (%rbx)	#, *sp_109
	.loc 1 1718 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.545
	movq	(%rax), %rax	# PL_op.545_110->op_next, D.24059
	jmp	.L725	#
.L741:
	.loc 1 1720 0
	movq	(%rbx), %rax	# *sp_109, D.24061
	movq	(%rax), %rax	# _112->sv_any, D.24062
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_113].xuv_uv, tmp212
	movq	%rax, -48(%rbp)	# tmp212, auv
	.loc 1 1721 0
	movq	-56(%rbp), %rax	# biv, biv.547
	cmpq	-48(%rbp), %rax	# auv, biv.547
	jbe	.L742	#,
	.loc 1 1721 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.546
	jmp	.L743	#
.L742:
	.loc 1 1721 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.546
.L743:
	.loc 1 1721 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.546, *sp_109
	.loc 1 1722 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.548
	movq	(%rax), %rax	# PL_op.548_118->op_next, D.24059
	jmp	.L725	#
.L740:
.LBE158:
.LBB159:
	.loc 1 1728 0
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_120, D.24061
	movq	(%rax), %rax	# _121->sv_any, D.24062
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_122].xiv_iv, tmp213
	movq	%rax, -40(%rbp)	# tmp213, aiv
	.loc 1 1729 0
	cmpq	$0, -40(%rbp)	#, aiv
	jns	.L744	#,
	.loc 1 1731 0
	subq	$8, %rbx	#, sp
	.loc 1 1732 0
	movq	$PL_sv_yes, (%rbx)	#, *sp_124
	.loc 1 1733 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.549
	movq	(%rax), %rax	# PL_op.549_125->op_next, D.24059
	jmp	.L725	#
.L744:
	.loc 1 1735 0
	movq	(%rbx), %rax	# *sp_10, D.24061
	movq	(%rax), %rax	# _127->sv_any, D.24062
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_128].xuv_uv, tmp214
	movq	%rax, -32(%rbp)	# tmp214, buv
	.loc 1 1736 0
	subq	$8, %rbx	#, sp
	.loc 1 1737 0
	movq	-40(%rbp), %rax	# aiv, aiv.551
	cmpq	-32(%rbp), %rax	# buv, aiv.551
	jae	.L745	#,
	.loc 1 1737 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.550
	jmp	.L746	#
.L745:
	.loc 1 1737 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.550
.L746:
	.loc 1 1737 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.550, *sp_130
	.loc 1 1738 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.552
	movq	(%rax), %rax	# PL_op.552_134->op_next, D.24059
	jmp	.L725	#
.L729:
.LBE159:
.LBE155:
	.loc 1 1747 0
	movq	(%rbx), %rax	# *sp_10, D.24061
	movl	12(%rax), %eax	# _136->sv_flags, D.24060
	andl	$524288, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	je	.L733	#,
	.loc 1 1747 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24061
	movl	12(%rax), %eax	# _139->sv_flags, D.24060
	andl	$268435456, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	jne	.L733	#,
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_142, D.24061
	movl	12(%rax), %eax	# _143->sv_flags, D.24060
	andl	$524288, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	je	.L733	#,
	leaq	-8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_146, D.24061
	movl	12(%rax), %eax	# _147->sv_flags, D.24060
	andl	$268435456, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	jne	.L733	#,
	.loc 1 1748 0 is_stmt 1
	subq	$8, %rbx	#, sp
	.loc 1 1749 0
	movq	(%rbx), %rax	# *sp_150, D.24061
	movq	(%rax), %rax	# _151->sv_any, D.24062
	movq	(%rax), %rdx	# MEM[(struct XRV *)_152].xrv_rv, D.24061
	leaq	8(%rbx), %rax	#, D.24063
	movq	(%rax), %rax	# *_154, D.24061
	movq	(%rax), %rax	# _155->sv_any, D.24062
	movq	(%rax), %rax	# MEM[(struct XRV *)_156].xrv_rv, D.24061
	cmpq	%rax, %rdx	# D.24061, D.24061
	jae	.L747	#,
	.loc 1 1749 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.553
	jmp	.L748	#
.L747:
	.loc 1 1749 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.553
.L748:
	.loc 1 1749 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.553, *sp_150
	.loc 1 1750 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.554
	movq	(%rax), %rax	# PL_op.554_160->op_next, D.24059
	jmp	.L725	#
.L733:
.LBB160:
	.loc 1 1754 0
	movq	%rbx, %rax	# sp, sp.555
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.555_162, PL_Sv.556
	movq	%rax, PL_Sv(%rip)	# PL_Sv.556, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.558
	movl	12(%rax), %eax	# PL_Sv.558_165->sv_flags, D.24060
	andl	$131072, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	je	.L749	#,
	.loc 1 1754 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.559
	movq	(%rax), %rax	# PL_Sv.559_168->sv_any, D.24062
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_169].xnv_nv, iftmp.557
	jmp	.L750	#
.L749:
	.loc 1 1754 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.560
	movq	%rax, %rdi	# PL_Sv.560,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, iftmp.557
.L750:
	.loc 1 1754 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.557, value
	.loc 1 1755 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# *sp_163, D.24061
	movl	12(%rax), %eax	# _174->sv_flags, D.24060
	andl	$131072, %eax	#, D.24060
	testl	%eax, %eax	# D.24060
	je	.L751	#,
	.loc 1 1755 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_163, D.24061
	movq	(%rax), %rax	# _177->sv_any, D.24062
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_178].xnv_nv, iftmp.562
	jmp	.L752	#
.L751:
	.loc 1 1755 0 discriminator 2
	movq	(%rbx), %rax	# *sp_163, D.24061
	movq	%rax, %rdi	# D.24061,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, iftmp.562
.L752:
	.loc 1 1755 0 discriminator 3
	movsd	-24(%rbp), %xmm0	# value, tmp215
	movq	%rax, -136(%rbp)	# iftmp.562, %sfp
	movsd	-136(%rbp), %xmm1	# %sfp, iftmp.562
	ucomisd	%xmm1, %xmm0	# iftmp.562, tmp215
	jbe	.L757	#,
	.loc 1 1755 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.561
	jmp	.L755	#
.L757:
	.loc 1 1755 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.561
.L755:
	.loc 1 1755 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.561, *sp_163
	.loc 1 1756 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.563
	movq	(%rax), %rax	# PL_op.563_184->op_next, D.24059
.L725:
.LBE160:
	.loc 1 1758 0
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE39:
	.size	Perl_pp_lt, .-Perl_pp_lt
	.globl	Perl_pp_gt
	.type	Perl_pp_gt, @function
Perl_pp_gt:
.LFB40:
	.loc 1 1761 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 1762 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.564
	testq	%rax, %rax	# PL_amagic_generation.564
	je	.L759	#,
.LBB161:
	.loc 1 1762 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, tmp197
	movq	%rax, -112(%rbp)	# tmp197, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_10 + -8B], tmp198
	movq	%rax, -104(%rbp)	# tmp198, left
	movq	-104(%rbp), %rax	# left, tmp199
	movl	12(%rax), %eax	# left_13->sv_flags, D.24066
	andl	$268435456, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	jne	.L760	#,
	.loc 1 1762 0 discriminator 2
	movq	-112(%rbp), %rax	# right, tmp200
	movl	12(%rax), %eax	# right_12->sv_flags, D.24066
	andl	$268435456, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	je	.L759	#,
.L760:
	.loc 1 1762 0 discriminator 1
	movq	-112(%rbp), %rsi	# right, tmp201
	movq	-104(%rbp), %rax	# left, tmp202
	movl	$0, %ecx	#,
	movl	$30, %edx	#,
	movq	%rax, %rdi	# tmp202,
	call	Perl_amagic_call	#
	movq	%rax, -96(%rbp)	# tmp203, tmpsv
	cmpq	$0, -96(%rbp)	#, tmpsv
	je	.L759	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.565
	leaq	-8(%rax), %rbx	#, sp
	movq	-96(%rbp), %rax	# tmpsv, tmp204
	movq	%rax, (%rbx)	# tmp204, *sp_21
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.566
	movq	(%rax), %rax	# PL_op.566_22->op_next, D.24065
	jmp	.L761	#
.L759:
.LBE161:
	.loc 1 1764 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_10, D.24067
	movl	12(%rax), %eax	# _24->sv_flags, D.24066
	andl	$16777216, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	jne	.L762	#,
	.loc 1 1764 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24067
	movl	12(%rax), %eax	# _27->sv_flags, D.24066
	andl	$131072, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	jne	.L763	#,
	.loc 1 1764 0 discriminator 2
	movq	(%rbx), %rax	# *sp_10, D.24067
	movl	12(%rax), %eax	# _30->sv_flags, D.24066
	andl	$262144, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	je	.L762	#,
.L763:
	.loc 1 1764 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24067
	movl	12(%rax), %eax	# _33->sv_flags, D.24066
	andl	$65536, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	jne	.L762	#,
	.loc 1 1764 0 discriminator 2
	movq	(%rbx), %rax	# *sp_10, D.24067
	movq	%rax, %rdi	# D.24067,
	call	Perl_sv_2iv	#
.L762:
	.loc 1 1765 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_10, D.24067
	movl	12(%rax), %eax	# _41->sv_flags, D.24066
	andl	$65536, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	je	.L765	#,
	.loc 1 1766 0
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_44, D.24067
	movl	12(%rax), %eax	# _45->sv_flags, D.24066
	andl	$16777216, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	jne	.L766	#,
	.loc 1 1766 0 is_stmt 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_48, D.24067
	movl	12(%rax), %eax	# _49->sv_flags, D.24066
	andl	$131072, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	jne	.L767	#,
	.loc 1 1766 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_52, D.24067
	movl	12(%rax), %eax	# _53->sv_flags, D.24066
	andl	$262144, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	je	.L766	#,
.L767:
	.loc 1 1766 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_56, D.24067
	movl	12(%rax), %eax	# _57->sv_flags, D.24066
	andl	$65536, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	jne	.L766	#,
	.loc 1 1766 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_64, D.24067
	movq	%rax, %rdi	# D.24067,
	call	Perl_sv_2iv	#
.L766:
	.loc 1 1767 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_67, D.24067
	movl	12(%rax), %eax	# _68->sv_flags, D.24066
	andl	$65536, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	je	.L769	#,
.LBB162:
	.loc 1 1768 0
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_71, D.24067
	movl	12(%rax), %eax	# _72->sv_flags, D.24066
	andl	$-2147418112, %eax	#, D.24066
	cmpl	$-2147418112, %eax	#, D.24066
	sete	%al	#, D.24070
	movb	%al, -114(%rbp)	# D.24070, auvok
	.loc 1 1769 0
	movq	(%rbx), %rax	# *sp_10, D.24067
	movl	12(%rax), %eax	# _77->sv_flags, D.24066
	andl	$-2147418112, %eax	#, D.24066
	cmpl	$-2147418112, %eax	#, D.24066
	sete	%al	#, D.24070
	movb	%al, -113(%rbp)	# D.24070, buvok
	.loc 1 1771 0
	cmpb	$0, -114(%rbp)	#, auvok
	jne	.L770	#,
	.loc 1 1771 0 is_stmt 0 discriminator 1
	cmpb	$0, -113(%rbp)	#, buvok
	jne	.L770	#,
.LBB163:
	.loc 1 1772 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_82, D.24067
	movq	(%rax), %rax	# _83->sv_any, D.24068
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_84].xiv_iv, tmp205
	movq	%rax, -88(%rbp)	# tmp205, aiv
	.loc 1 1773 0
	movq	(%rbx), %rax	# *sp_10, D.24067
	movq	(%rax), %rax	# _86->sv_any, D.24068
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_87].xiv_iv, tmp206
	movq	%rax, -80(%rbp)	# tmp206, biv
	.loc 1 1775 0
	subq	$8, %rbx	#, sp
	.loc 1 1776 0
	movq	-88(%rbp), %rax	# aiv, tmp207
	cmpq	-80(%rbp), %rax	# biv, tmp207
	jle	.L771	#,
	.loc 1 1776 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.569
	jmp	.L772	#
.L771:
	.loc 1 1776 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.569
.L772:
	.loc 1 1776 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.569, *sp_89
	.loc 1 1777 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.570
	movq	(%rax), %rax	# PL_op.570_92->op_next, D.24065
	jmp	.L761	#
.L770:
.LBE163:
	.loc 1 1779 0
	cmpb	$0, -114(%rbp)	#, auvok
	je	.L773	#,
	.loc 1 1779 0 is_stmt 0 discriminator 1
	cmpb	$0, -113(%rbp)	#, buvok
	je	.L773	#,
.LBB164:
	.loc 1 1780 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_94, D.24067
	movq	(%rax), %rax	# _95->sv_any, D.24068
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_96].xuv_uv, tmp208
	movq	%rax, -72(%rbp)	# tmp208, auv
	.loc 1 1781 0
	movq	(%rbx), %rax	# *sp_10, D.24067
	movq	(%rax), %rax	# _98->sv_any, D.24068
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_99].xuv_uv, tmp209
	movq	%rax, -64(%rbp)	# tmp209, buv
	.loc 1 1783 0
	subq	$8, %rbx	#, sp
	.loc 1 1784 0
	movq	-72(%rbp), %rax	# auv, tmp210
	cmpq	-64(%rbp), %rax	# buv, tmp210
	jbe	.L774	#,
	.loc 1 1784 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.571
	jmp	.L775	#
.L774:
	.loc 1 1784 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.571
.L775:
	.loc 1 1784 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.571, *sp_101
	.loc 1 1785 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.572
	movq	(%rax), %rax	# PL_op.572_104->op_next, D.24065
	jmp	.L761	#
.L773:
.LBE164:
	.loc 1 1787 0
	cmpb	$0, -114(%rbp)	#, auvok
	je	.L776	#,
.LBB165:
	.loc 1 1791 0
	movq	(%rbx), %rax	# *sp_10, D.24067
	movq	(%rax), %rax	# _106->sv_any, D.24068
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_107].xiv_iv, tmp211
	movq	%rax, -56(%rbp)	# tmp211, biv
	.loc 1 1792 0
	subq	$8, %rbx	#, sp
	.loc 1 1793 0
	cmpq	$0, -56(%rbp)	#, biv
	jns	.L777	#,
	.loc 1 1795 0
	movq	$PL_sv_yes, (%rbx)	#, *sp_109
	.loc 1 1796 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.573
	movq	(%rax), %rax	# PL_op.573_110->op_next, D.24065
	jmp	.L761	#
.L777:
	.loc 1 1798 0
	movq	(%rbx), %rax	# *sp_109, D.24067
	movq	(%rax), %rax	# _112->sv_any, D.24068
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_113].xuv_uv, tmp212
	movq	%rax, -48(%rbp)	# tmp212, auv
	.loc 1 1799 0
	movq	-56(%rbp), %rax	# biv, biv.575
	cmpq	-48(%rbp), %rax	# auv, biv.575
	jae	.L778	#,
	.loc 1 1799 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.574
	jmp	.L779	#
.L778:
	.loc 1 1799 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.574
.L779:
	.loc 1 1799 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.574, *sp_109
	.loc 1 1800 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.576
	movq	(%rax), %rax	# PL_op.576_118->op_next, D.24065
	jmp	.L761	#
.L776:
.LBE165:
.LBB166:
	.loc 1 1806 0
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_120, D.24067
	movq	(%rax), %rax	# _121->sv_any, D.24068
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_122].xiv_iv, tmp213
	movq	%rax, -40(%rbp)	# tmp213, aiv
	.loc 1 1807 0
	cmpq	$0, -40(%rbp)	#, aiv
	jns	.L780	#,
	.loc 1 1809 0
	subq	$8, %rbx	#, sp
	.loc 1 1810 0
	movq	$PL_sv_no, (%rbx)	#, *sp_124
	.loc 1 1811 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.577
	movq	(%rax), %rax	# PL_op.577_125->op_next, D.24065
	jmp	.L761	#
.L780:
	.loc 1 1813 0
	movq	(%rbx), %rax	# *sp_10, D.24067
	movq	(%rax), %rax	# _127->sv_any, D.24068
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_128].xuv_uv, tmp214
	movq	%rax, -32(%rbp)	# tmp214, buv
	.loc 1 1814 0
	subq	$8, %rbx	#, sp
	.loc 1 1815 0
	movq	-40(%rbp), %rax	# aiv, aiv.579
	cmpq	-32(%rbp), %rax	# buv, aiv.579
	jbe	.L781	#,
	.loc 1 1815 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.578
	jmp	.L782	#
.L781:
	.loc 1 1815 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.578
.L782:
	.loc 1 1815 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.578, *sp_130
	.loc 1 1816 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.580
	movq	(%rax), %rax	# PL_op.580_134->op_next, D.24065
	jmp	.L761	#
.L765:
.LBE166:
.LBE162:
	.loc 1 1825 0
	movq	(%rbx), %rax	# *sp_10, D.24067
	movl	12(%rax), %eax	# _136->sv_flags, D.24066
	andl	$524288, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	je	.L769	#,
	.loc 1 1825 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24067
	movl	12(%rax), %eax	# _139->sv_flags, D.24066
	andl	$268435456, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	jne	.L769	#,
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_142, D.24067
	movl	12(%rax), %eax	# _143->sv_flags, D.24066
	andl	$524288, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	je	.L769	#,
	leaq	-8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_146, D.24067
	movl	12(%rax), %eax	# _147->sv_flags, D.24066
	andl	$268435456, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	jne	.L769	#,
	.loc 1 1826 0 is_stmt 1
	subq	$8, %rbx	#, sp
	.loc 1 1827 0
	movq	(%rbx), %rax	# *sp_150, D.24067
	movq	(%rax), %rax	# _151->sv_any, D.24068
	movq	(%rax), %rdx	# MEM[(struct XRV *)_152].xrv_rv, D.24067
	leaq	8(%rbx), %rax	#, D.24069
	movq	(%rax), %rax	# *_154, D.24067
	movq	(%rax), %rax	# _155->sv_any, D.24068
	movq	(%rax), %rax	# MEM[(struct XRV *)_156].xrv_rv, D.24067
	cmpq	%rax, %rdx	# D.24067, D.24067
	jbe	.L783	#,
	.loc 1 1827 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.581
	jmp	.L784	#
.L783:
	.loc 1 1827 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.581
.L784:
	.loc 1 1827 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.581, *sp_150
	.loc 1 1828 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.582
	movq	(%rax), %rax	# PL_op.582_160->op_next, D.24065
	jmp	.L761	#
.L769:
.LBB167:
	.loc 1 1832 0
	movq	%rbx, %rax	# sp, sp.583
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.583_162, PL_Sv.584
	movq	%rax, PL_Sv(%rip)	# PL_Sv.584, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.586
	movl	12(%rax), %eax	# PL_Sv.586_165->sv_flags, D.24066
	andl	$131072, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	je	.L785	#,
	.loc 1 1832 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.587
	movq	(%rax), %rax	# PL_Sv.587_168->sv_any, D.24068
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_169].xnv_nv, iftmp.585
	jmp	.L786	#
.L785:
	.loc 1 1832 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.588
	movq	%rax, %rdi	# PL_Sv.588,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, iftmp.585
.L786:
	.loc 1 1832 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.585, value
	.loc 1 1833 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# *sp_163, D.24067
	movl	12(%rax), %eax	# _174->sv_flags, D.24066
	andl	$131072, %eax	#, D.24066
	testl	%eax, %eax	# D.24066
	je	.L787	#,
	.loc 1 1833 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_163, D.24067
	movq	(%rax), %rax	# _177->sv_any, D.24068
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_178].xnv_nv, iftmp.590
	jmp	.L788	#
.L787:
	.loc 1 1833 0 discriminator 2
	movq	(%rbx), %rax	# *sp_163, D.24067
	movq	%rax, %rdi	# D.24067,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, iftmp.590
.L788:
	.loc 1 1833 0 discriminator 3
	movq	%rax, -136(%rbp)	# iftmp.590, %sfp
	movsd	-136(%rbp), %xmm1	# %sfp, iftmp.590
	ucomisd	-24(%rbp), %xmm1	# value, iftmp.590
	jbe	.L793	#,
	.loc 1 1833 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.589
	jmp	.L791	#
.L793:
	.loc 1 1833 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.589
.L791:
	.loc 1 1833 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.589, *sp_163
	.loc 1 1834 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.591
	movq	(%rax), %rax	# PL_op.591_184->op_next, D.24065
.L761:
.LBE167:
	.loc 1 1836 0
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE40:
	.size	Perl_pp_gt, .-Perl_pp_gt
	.globl	Perl_pp_le
	.type	Perl_pp_le, @function
Perl_pp_le:
.LFB41:
	.loc 1 1839 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 1840 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.592
	testq	%rax, %rax	# PL_amagic_generation.592
	je	.L795	#,
.LBB168:
	.loc 1 1840 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, tmp197
	movq	%rax, -112(%rbp)	# tmp197, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_10 + -8B], tmp198
	movq	%rax, -104(%rbp)	# tmp198, left
	movq	-104(%rbp), %rax	# left, tmp199
	movl	12(%rax), %eax	# left_13->sv_flags, D.24072
	andl	$268435456, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	jne	.L796	#,
	.loc 1 1840 0 discriminator 2
	movq	-112(%rbp), %rax	# right, tmp200
	movl	12(%rax), %eax	# right_12->sv_flags, D.24072
	andl	$268435456, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	je	.L795	#,
.L796:
	.loc 1 1840 0 discriminator 1
	movq	-112(%rbp), %rsi	# right, tmp201
	movq	-104(%rbp), %rax	# left, tmp202
	movl	$0, %ecx	#,
	movl	$29, %edx	#,
	movq	%rax, %rdi	# tmp202,
	call	Perl_amagic_call	#
	movq	%rax, -96(%rbp)	# tmp203, tmpsv
	cmpq	$0, -96(%rbp)	#, tmpsv
	je	.L795	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.593
	leaq	-8(%rax), %rbx	#, sp
	movq	-96(%rbp), %rax	# tmpsv, tmp204
	movq	%rax, (%rbx)	# tmp204, *sp_21
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.594
	movq	(%rax), %rax	# PL_op.594_22->op_next, D.24071
	jmp	.L797	#
.L795:
.LBE168:
	.loc 1 1842 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_10, D.24073
	movl	12(%rax), %eax	# _24->sv_flags, D.24072
	andl	$16777216, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	jne	.L798	#,
	.loc 1 1842 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24073
	movl	12(%rax), %eax	# _27->sv_flags, D.24072
	andl	$131072, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	jne	.L799	#,
	.loc 1 1842 0 discriminator 2
	movq	(%rbx), %rax	# *sp_10, D.24073
	movl	12(%rax), %eax	# _30->sv_flags, D.24072
	andl	$262144, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	je	.L798	#,
.L799:
	.loc 1 1842 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24073
	movl	12(%rax), %eax	# _33->sv_flags, D.24072
	andl	$65536, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	jne	.L798	#,
	.loc 1 1842 0 discriminator 2
	movq	(%rbx), %rax	# *sp_10, D.24073
	movq	%rax, %rdi	# D.24073,
	call	Perl_sv_2iv	#
.L798:
	.loc 1 1843 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_10, D.24073
	movl	12(%rax), %eax	# _41->sv_flags, D.24072
	andl	$65536, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	je	.L801	#,
	.loc 1 1844 0
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_44, D.24073
	movl	12(%rax), %eax	# _45->sv_flags, D.24072
	andl	$16777216, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	jne	.L802	#,
	.loc 1 1844 0 is_stmt 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_48, D.24073
	movl	12(%rax), %eax	# _49->sv_flags, D.24072
	andl	$131072, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	jne	.L803	#,
	.loc 1 1844 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_52, D.24073
	movl	12(%rax), %eax	# _53->sv_flags, D.24072
	andl	$262144, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	je	.L802	#,
.L803:
	.loc 1 1844 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_56, D.24073
	movl	12(%rax), %eax	# _57->sv_flags, D.24072
	andl	$65536, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	jne	.L802	#,
	.loc 1 1844 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_64, D.24073
	movq	%rax, %rdi	# D.24073,
	call	Perl_sv_2iv	#
.L802:
	.loc 1 1845 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_67, D.24073
	movl	12(%rax), %eax	# _68->sv_flags, D.24072
	andl	$65536, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	je	.L805	#,
.LBB169:
	.loc 1 1846 0
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_71, D.24073
	movl	12(%rax), %eax	# _72->sv_flags, D.24072
	andl	$-2147418112, %eax	#, D.24072
	cmpl	$-2147418112, %eax	#, D.24072
	sete	%al	#, D.24076
	movb	%al, -114(%rbp)	# D.24076, auvok
	.loc 1 1847 0
	movq	(%rbx), %rax	# *sp_10, D.24073
	movl	12(%rax), %eax	# _77->sv_flags, D.24072
	andl	$-2147418112, %eax	#, D.24072
	cmpl	$-2147418112, %eax	#, D.24072
	sete	%al	#, D.24076
	movb	%al, -113(%rbp)	# D.24076, buvok
	.loc 1 1849 0
	cmpb	$0, -114(%rbp)	#, auvok
	jne	.L806	#,
	.loc 1 1849 0 is_stmt 0 discriminator 1
	cmpb	$0, -113(%rbp)	#, buvok
	jne	.L806	#,
.LBB170:
	.loc 1 1850 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_82, D.24073
	movq	(%rax), %rax	# _83->sv_any, D.24074
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_84].xiv_iv, tmp205
	movq	%rax, -88(%rbp)	# tmp205, aiv
	.loc 1 1851 0
	movq	(%rbx), %rax	# *sp_10, D.24073
	movq	(%rax), %rax	# _86->sv_any, D.24074
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_87].xiv_iv, tmp206
	movq	%rax, -80(%rbp)	# tmp206, biv
	.loc 1 1853 0
	subq	$8, %rbx	#, sp
	.loc 1 1854 0
	movq	-88(%rbp), %rax	# aiv, tmp207
	cmpq	-80(%rbp), %rax	# biv, tmp207
	jg	.L807	#,
	.loc 1 1854 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.597
	jmp	.L808	#
.L807:
	.loc 1 1854 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.597
.L808:
	.loc 1 1854 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.597, *sp_89
	.loc 1 1855 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.598
	movq	(%rax), %rax	# PL_op.598_92->op_next, D.24071
	jmp	.L797	#
.L806:
.LBE170:
	.loc 1 1857 0
	cmpb	$0, -114(%rbp)	#, auvok
	je	.L809	#,
	.loc 1 1857 0 is_stmt 0 discriminator 1
	cmpb	$0, -113(%rbp)	#, buvok
	je	.L809	#,
.LBB171:
	.loc 1 1858 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_94, D.24073
	movq	(%rax), %rax	# _95->sv_any, D.24074
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_96].xuv_uv, tmp208
	movq	%rax, -72(%rbp)	# tmp208, auv
	.loc 1 1859 0
	movq	(%rbx), %rax	# *sp_10, D.24073
	movq	(%rax), %rax	# _98->sv_any, D.24074
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_99].xuv_uv, tmp209
	movq	%rax, -64(%rbp)	# tmp209, buv
	.loc 1 1861 0
	subq	$8, %rbx	#, sp
	.loc 1 1862 0
	movq	-72(%rbp), %rax	# auv, tmp210
	cmpq	-64(%rbp), %rax	# buv, tmp210
	ja	.L810	#,
	.loc 1 1862 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.599
	jmp	.L811	#
.L810:
	.loc 1 1862 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.599
.L811:
	.loc 1 1862 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.599, *sp_101
	.loc 1 1863 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.600
	movq	(%rax), %rax	# PL_op.600_104->op_next, D.24071
	jmp	.L797	#
.L809:
.LBE171:
	.loc 1 1865 0
	cmpb	$0, -114(%rbp)	#, auvok
	je	.L812	#,
.LBB172:
	.loc 1 1869 0
	movq	(%rbx), %rax	# *sp_10, D.24073
	movq	(%rax), %rax	# _106->sv_any, D.24074
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_107].xiv_iv, tmp211
	movq	%rax, -56(%rbp)	# tmp211, biv
	.loc 1 1870 0
	subq	$8, %rbx	#, sp
	.loc 1 1871 0
	cmpq	$0, -56(%rbp)	#, biv
	jns	.L813	#,
	.loc 1 1873 0
	movq	$PL_sv_no, (%rbx)	#, *sp_109
	.loc 1 1874 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.601
	movq	(%rax), %rax	# PL_op.601_110->op_next, D.24071
	jmp	.L797	#
.L813:
	.loc 1 1876 0
	movq	(%rbx), %rax	# *sp_109, D.24073
	movq	(%rax), %rax	# _112->sv_any, D.24074
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_113].xuv_uv, tmp212
	movq	%rax, -48(%rbp)	# tmp212, auv
	.loc 1 1877 0
	movq	-56(%rbp), %rax	# biv, biv.603
	cmpq	-48(%rbp), %rax	# auv, biv.603
	jb	.L814	#,
	.loc 1 1877 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.602
	jmp	.L815	#
.L814:
	.loc 1 1877 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.602
.L815:
	.loc 1 1877 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.602, *sp_109
	.loc 1 1878 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.604
	movq	(%rax), %rax	# PL_op.604_118->op_next, D.24071
	jmp	.L797	#
.L812:
.LBE172:
.LBB173:
	.loc 1 1884 0
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_120, D.24073
	movq	(%rax), %rax	# _121->sv_any, D.24074
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_122].xiv_iv, tmp213
	movq	%rax, -40(%rbp)	# tmp213, aiv
	.loc 1 1885 0
	cmpq	$0, -40(%rbp)	#, aiv
	jns	.L816	#,
	.loc 1 1887 0
	subq	$8, %rbx	#, sp
	.loc 1 1888 0
	movq	$PL_sv_yes, (%rbx)	#, *sp_124
	.loc 1 1889 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.605
	movq	(%rax), %rax	# PL_op.605_125->op_next, D.24071
	jmp	.L797	#
.L816:
	.loc 1 1891 0
	movq	(%rbx), %rax	# *sp_10, D.24073
	movq	(%rax), %rax	# _127->sv_any, D.24074
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_128].xuv_uv, tmp214
	movq	%rax, -32(%rbp)	# tmp214, buv
	.loc 1 1892 0
	subq	$8, %rbx	#, sp
	.loc 1 1893 0
	movq	-40(%rbp), %rax	# aiv, aiv.607
	cmpq	-32(%rbp), %rax	# buv, aiv.607
	ja	.L817	#,
	.loc 1 1893 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.606
	jmp	.L818	#
.L817:
	.loc 1 1893 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.606
.L818:
	.loc 1 1893 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.606, *sp_130
	.loc 1 1894 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.608
	movq	(%rax), %rax	# PL_op.608_134->op_next, D.24071
	jmp	.L797	#
.L801:
.LBE173:
.LBE169:
	.loc 1 1903 0
	movq	(%rbx), %rax	# *sp_10, D.24073
	movl	12(%rax), %eax	# _136->sv_flags, D.24072
	andl	$524288, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	je	.L805	#,
	.loc 1 1903 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24073
	movl	12(%rax), %eax	# _139->sv_flags, D.24072
	andl	$268435456, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	jne	.L805	#,
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_142, D.24073
	movl	12(%rax), %eax	# _143->sv_flags, D.24072
	andl	$524288, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	je	.L805	#,
	leaq	-8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_146, D.24073
	movl	12(%rax), %eax	# _147->sv_flags, D.24072
	andl	$268435456, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	jne	.L805	#,
	.loc 1 1904 0 is_stmt 1
	subq	$8, %rbx	#, sp
	.loc 1 1905 0
	movq	(%rbx), %rax	# *sp_150, D.24073
	movq	(%rax), %rax	# _151->sv_any, D.24074
	movq	(%rax), %rdx	# MEM[(struct XRV *)_152].xrv_rv, D.24073
	leaq	8(%rbx), %rax	#, D.24075
	movq	(%rax), %rax	# *_154, D.24073
	movq	(%rax), %rax	# _155->sv_any, D.24074
	movq	(%rax), %rax	# MEM[(struct XRV *)_156].xrv_rv, D.24073
	cmpq	%rax, %rdx	# D.24073, D.24073
	ja	.L819	#,
	.loc 1 1905 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.609
	jmp	.L820	#
.L819:
	.loc 1 1905 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.609
.L820:
	.loc 1 1905 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.609, *sp_150
	.loc 1 1906 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.610
	movq	(%rax), %rax	# PL_op.610_160->op_next, D.24071
	jmp	.L797	#
.L805:
.LBB174:
	.loc 1 1910 0
	movq	%rbx, %rax	# sp, sp.611
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.611_162, PL_Sv.612
	movq	%rax, PL_Sv(%rip)	# PL_Sv.612, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.614
	movl	12(%rax), %eax	# PL_Sv.614_165->sv_flags, D.24072
	andl	$131072, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	je	.L821	#,
	.loc 1 1910 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.615
	movq	(%rax), %rax	# PL_Sv.615_168->sv_any, D.24074
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_169].xnv_nv, iftmp.613
	jmp	.L822	#
.L821:
	.loc 1 1910 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.616
	movq	%rax, %rdi	# PL_Sv.616,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, iftmp.613
.L822:
	.loc 1 1910 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.613, value
	.loc 1 1911 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# *sp_163, D.24073
	movl	12(%rax), %eax	# _174->sv_flags, D.24072
	andl	$131072, %eax	#, D.24072
	testl	%eax, %eax	# D.24072
	je	.L823	#,
	.loc 1 1911 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_163, D.24073
	movq	(%rax), %rax	# _177->sv_any, D.24074
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_178].xnv_nv, iftmp.618
	jmp	.L824	#
.L823:
	.loc 1 1911 0 discriminator 2
	movq	(%rbx), %rax	# *sp_163, D.24073
	movq	%rax, %rdi	# D.24073,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, iftmp.618
.L824:
	.loc 1 1911 0 discriminator 3
	movsd	-24(%rbp), %xmm0	# value, tmp215
	movq	%rax, -136(%rbp)	# iftmp.618, %sfp
	movsd	-136(%rbp), %xmm1	# %sfp, iftmp.618
	ucomisd	%xmm1, %xmm0	# iftmp.618, tmp215
	jb	.L829	#,
	.loc 1 1911 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.617
	jmp	.L827	#
.L829:
	.loc 1 1911 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.617
.L827:
	.loc 1 1911 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.617, *sp_163
	.loc 1 1912 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.619
	movq	(%rax), %rax	# PL_op.619_184->op_next, D.24071
.L797:
.LBE174:
	.loc 1 1914 0
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE41:
	.size	Perl_pp_le, .-Perl_pp_le
	.globl	Perl_pp_ge
	.type	Perl_pp_ge, @function
Perl_pp_ge:
.LFB42:
	.loc 1 1917 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 1918 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.620
	testq	%rax, %rax	# PL_amagic_generation.620
	je	.L831	#,
.LBB175:
	.loc 1 1918 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, tmp197
	movq	%rax, -112(%rbp)	# tmp197, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_10 + -8B], tmp198
	movq	%rax, -104(%rbp)	# tmp198, left
	movq	-104(%rbp), %rax	# left, tmp199
	movl	12(%rax), %eax	# left_13->sv_flags, D.24078
	andl	$268435456, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	jne	.L832	#,
	.loc 1 1918 0 discriminator 2
	movq	-112(%rbp), %rax	# right, tmp200
	movl	12(%rax), %eax	# right_12->sv_flags, D.24078
	andl	$268435456, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	je	.L831	#,
.L832:
	.loc 1 1918 0 discriminator 1
	movq	-112(%rbp), %rsi	# right, tmp201
	movq	-104(%rbp), %rax	# left, tmp202
	movl	$0, %ecx	#,
	movl	$31, %edx	#,
	movq	%rax, %rdi	# tmp202,
	call	Perl_amagic_call	#
	movq	%rax, -96(%rbp)	# tmp203, tmpsv
	cmpq	$0, -96(%rbp)	#, tmpsv
	je	.L831	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.621
	leaq	-8(%rax), %rbx	#, sp
	movq	-96(%rbp), %rax	# tmpsv, tmp204
	movq	%rax, (%rbx)	# tmp204, *sp_21
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.622
	movq	(%rax), %rax	# PL_op.622_22->op_next, D.24077
	jmp	.L833	#
.L831:
.LBE175:
	.loc 1 1920 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_10, D.24079
	movl	12(%rax), %eax	# _24->sv_flags, D.24078
	andl	$16777216, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	jne	.L834	#,
	.loc 1 1920 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24079
	movl	12(%rax), %eax	# _27->sv_flags, D.24078
	andl	$131072, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	jne	.L835	#,
	.loc 1 1920 0 discriminator 2
	movq	(%rbx), %rax	# *sp_10, D.24079
	movl	12(%rax), %eax	# _30->sv_flags, D.24078
	andl	$262144, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	je	.L834	#,
.L835:
	.loc 1 1920 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24079
	movl	12(%rax), %eax	# _33->sv_flags, D.24078
	andl	$65536, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	jne	.L834	#,
	.loc 1 1920 0 discriminator 2
	movq	(%rbx), %rax	# *sp_10, D.24079
	movq	%rax, %rdi	# D.24079,
	call	Perl_sv_2iv	#
.L834:
	.loc 1 1921 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_10, D.24079
	movl	12(%rax), %eax	# _41->sv_flags, D.24078
	andl	$65536, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	je	.L837	#,
	.loc 1 1922 0
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_44, D.24079
	movl	12(%rax), %eax	# _45->sv_flags, D.24078
	andl	$16777216, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	jne	.L838	#,
	.loc 1 1922 0 is_stmt 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_48, D.24079
	movl	12(%rax), %eax	# _49->sv_flags, D.24078
	andl	$131072, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	jne	.L839	#,
	.loc 1 1922 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_52, D.24079
	movl	12(%rax), %eax	# _53->sv_flags, D.24078
	andl	$262144, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	je	.L838	#,
.L839:
	.loc 1 1922 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_56, D.24079
	movl	12(%rax), %eax	# _57->sv_flags, D.24078
	andl	$65536, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	jne	.L838	#,
	.loc 1 1922 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_64, D.24079
	movq	%rax, %rdi	# D.24079,
	call	Perl_sv_2iv	#
.L838:
	.loc 1 1923 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_67, D.24079
	movl	12(%rax), %eax	# _68->sv_flags, D.24078
	andl	$65536, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	je	.L841	#,
.LBB176:
	.loc 1 1924 0
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_71, D.24079
	movl	12(%rax), %eax	# _72->sv_flags, D.24078
	andl	$-2147418112, %eax	#, D.24078
	cmpl	$-2147418112, %eax	#, D.24078
	sete	%al	#, D.24082
	movb	%al, -114(%rbp)	# D.24082, auvok
	.loc 1 1925 0
	movq	(%rbx), %rax	# *sp_10, D.24079
	movl	12(%rax), %eax	# _77->sv_flags, D.24078
	andl	$-2147418112, %eax	#, D.24078
	cmpl	$-2147418112, %eax	#, D.24078
	sete	%al	#, D.24082
	movb	%al, -113(%rbp)	# D.24082, buvok
	.loc 1 1927 0
	cmpb	$0, -114(%rbp)	#, auvok
	jne	.L842	#,
	.loc 1 1927 0 is_stmt 0 discriminator 1
	cmpb	$0, -113(%rbp)	#, buvok
	jne	.L842	#,
.LBB177:
	.loc 1 1928 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_82, D.24079
	movq	(%rax), %rax	# _83->sv_any, D.24080
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_84].xiv_iv, tmp205
	movq	%rax, -88(%rbp)	# tmp205, aiv
	.loc 1 1929 0
	movq	(%rbx), %rax	# *sp_10, D.24079
	movq	(%rax), %rax	# _86->sv_any, D.24080
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_87].xiv_iv, tmp206
	movq	%rax, -80(%rbp)	# tmp206, biv
	.loc 1 1931 0
	subq	$8, %rbx	#, sp
	.loc 1 1932 0
	movq	-88(%rbp), %rax	# aiv, tmp207
	cmpq	-80(%rbp), %rax	# biv, tmp207
	jl	.L843	#,
	.loc 1 1932 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.625
	jmp	.L844	#
.L843:
	.loc 1 1932 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.625
.L844:
	.loc 1 1932 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.625, *sp_89
	.loc 1 1933 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.626
	movq	(%rax), %rax	# PL_op.626_92->op_next, D.24077
	jmp	.L833	#
.L842:
.LBE177:
	.loc 1 1935 0
	cmpb	$0, -114(%rbp)	#, auvok
	je	.L845	#,
	.loc 1 1935 0 is_stmt 0 discriminator 1
	cmpb	$0, -113(%rbp)	#, buvok
	je	.L845	#,
.LBB178:
	.loc 1 1936 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_94, D.24079
	movq	(%rax), %rax	# _95->sv_any, D.24080
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_96].xuv_uv, tmp208
	movq	%rax, -72(%rbp)	# tmp208, auv
	.loc 1 1937 0
	movq	(%rbx), %rax	# *sp_10, D.24079
	movq	(%rax), %rax	# _98->sv_any, D.24080
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_99].xuv_uv, tmp209
	movq	%rax, -64(%rbp)	# tmp209, buv
	.loc 1 1939 0
	subq	$8, %rbx	#, sp
	.loc 1 1940 0
	movq	-72(%rbp), %rax	# auv, tmp210
	cmpq	-64(%rbp), %rax	# buv, tmp210
	jb	.L846	#,
	.loc 1 1940 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.627
	jmp	.L847	#
.L846:
	.loc 1 1940 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.627
.L847:
	.loc 1 1940 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.627, *sp_101
	.loc 1 1941 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.628
	movq	(%rax), %rax	# PL_op.628_104->op_next, D.24077
	jmp	.L833	#
.L845:
.LBE178:
	.loc 1 1943 0
	cmpb	$0, -114(%rbp)	#, auvok
	je	.L848	#,
.LBB179:
	.loc 1 1947 0
	movq	(%rbx), %rax	# *sp_10, D.24079
	movq	(%rax), %rax	# _106->sv_any, D.24080
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_107].xiv_iv, tmp211
	movq	%rax, -56(%rbp)	# tmp211, biv
	.loc 1 1948 0
	subq	$8, %rbx	#, sp
	.loc 1 1949 0
	cmpq	$0, -56(%rbp)	#, biv
	jns	.L849	#,
	.loc 1 1951 0
	movq	$PL_sv_yes, (%rbx)	#, *sp_109
	.loc 1 1952 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.629
	movq	(%rax), %rax	# PL_op.629_110->op_next, D.24077
	jmp	.L833	#
.L849:
	.loc 1 1954 0
	movq	(%rbx), %rax	# *sp_109, D.24079
	movq	(%rax), %rax	# _112->sv_any, D.24080
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_113].xuv_uv, tmp212
	movq	%rax, -48(%rbp)	# tmp212, auv
	.loc 1 1955 0
	movq	-56(%rbp), %rax	# biv, biv.631
	cmpq	-48(%rbp), %rax	# auv, biv.631
	ja	.L850	#,
	.loc 1 1955 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.630
	jmp	.L851	#
.L850:
	.loc 1 1955 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.630
.L851:
	.loc 1 1955 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.630, *sp_109
	.loc 1 1956 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.632
	movq	(%rax), %rax	# PL_op.632_118->op_next, D.24077
	jmp	.L833	#
.L848:
.LBE179:
.LBB180:
	.loc 1 1962 0
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_120, D.24079
	movq	(%rax), %rax	# _121->sv_any, D.24080
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_122].xiv_iv, tmp213
	movq	%rax, -40(%rbp)	# tmp213, aiv
	.loc 1 1963 0
	cmpq	$0, -40(%rbp)	#, aiv
	jns	.L852	#,
	.loc 1 1965 0
	subq	$8, %rbx	#, sp
	.loc 1 1966 0
	movq	$PL_sv_no, (%rbx)	#, *sp_124
	.loc 1 1967 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.633
	movq	(%rax), %rax	# PL_op.633_125->op_next, D.24077
	jmp	.L833	#
.L852:
	.loc 1 1969 0
	movq	(%rbx), %rax	# *sp_10, D.24079
	movq	(%rax), %rax	# _127->sv_any, D.24080
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_128].xuv_uv, tmp214
	movq	%rax, -32(%rbp)	# tmp214, buv
	.loc 1 1970 0
	subq	$8, %rbx	#, sp
	.loc 1 1971 0
	movq	-40(%rbp), %rax	# aiv, aiv.635
	cmpq	-32(%rbp), %rax	# buv, aiv.635
	jb	.L853	#,
	.loc 1 1971 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.634
	jmp	.L854	#
.L853:
	.loc 1 1971 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.634
.L854:
	.loc 1 1971 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.634, *sp_130
	.loc 1 1972 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.636
	movq	(%rax), %rax	# PL_op.636_134->op_next, D.24077
	jmp	.L833	#
.L837:
.LBE180:
.LBE176:
	.loc 1 1981 0
	movq	(%rbx), %rax	# *sp_10, D.24079
	movl	12(%rax), %eax	# _136->sv_flags, D.24078
	andl	$524288, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	je	.L841	#,
	.loc 1 1981 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, D.24079
	movl	12(%rax), %eax	# _139->sv_flags, D.24078
	andl	$268435456, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	jne	.L841	#,
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_142, D.24079
	movl	12(%rax), %eax	# _143->sv_flags, D.24078
	andl	$524288, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	je	.L841	#,
	leaq	-8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_146, D.24079
	movl	12(%rax), %eax	# _147->sv_flags, D.24078
	andl	$268435456, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	jne	.L841	#,
	.loc 1 1982 0 is_stmt 1
	subq	$8, %rbx	#, sp
	.loc 1 1983 0
	movq	(%rbx), %rax	# *sp_150, D.24079
	movq	(%rax), %rax	# _151->sv_any, D.24080
	movq	(%rax), %rdx	# MEM[(struct XRV *)_152].xrv_rv, D.24079
	leaq	8(%rbx), %rax	#, D.24081
	movq	(%rax), %rax	# *_154, D.24079
	movq	(%rax), %rax	# _155->sv_any, D.24080
	movq	(%rax), %rax	# MEM[(struct XRV *)_156].xrv_rv, D.24079
	cmpq	%rax, %rdx	# D.24079, D.24079
	jb	.L855	#,
	.loc 1 1983 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.637
	jmp	.L856	#
.L855:
	.loc 1 1983 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.637
.L856:
	.loc 1 1983 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.637, *sp_150
	.loc 1 1984 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.638
	movq	(%rax), %rax	# PL_op.638_160->op_next, D.24077
	jmp	.L833	#
.L841:
.LBB181:
	.loc 1 1988 0
	movq	%rbx, %rax	# sp, sp.639
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.639_162, PL_Sv.640
	movq	%rax, PL_Sv(%rip)	# PL_Sv.640, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.642
	movl	12(%rax), %eax	# PL_Sv.642_165->sv_flags, D.24078
	andl	$131072, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	je	.L857	#,
	.loc 1 1988 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.643
	movq	(%rax), %rax	# PL_Sv.643_168->sv_any, D.24080
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_169].xnv_nv, iftmp.641
	jmp	.L858	#
.L857:
	.loc 1 1988 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.644
	movq	%rax, %rdi	# PL_Sv.644,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, iftmp.641
.L858:
	.loc 1 1988 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.641, value
	.loc 1 1989 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# *sp_163, D.24079
	movl	12(%rax), %eax	# _174->sv_flags, D.24078
	andl	$131072, %eax	#, D.24078
	testl	%eax, %eax	# D.24078
	je	.L859	#,
	.loc 1 1989 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_163, D.24079
	movq	(%rax), %rax	# _177->sv_any, D.24080
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_178].xnv_nv, iftmp.646
	jmp	.L860	#
.L859:
	.loc 1 1989 0 discriminator 2
	movq	(%rbx), %rax	# *sp_163, D.24079
	movq	%rax, %rdi	# D.24079,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -136(%rbp)	#, %sfp
	movq	-136(%rbp), %rax	# %sfp, iftmp.646
.L860:
	.loc 1 1989 0 discriminator 3
	movq	%rax, -136(%rbp)	# iftmp.646, %sfp
	movsd	-136(%rbp), %xmm1	# %sfp, iftmp.646
	ucomisd	-24(%rbp), %xmm1	# value, iftmp.646
	jb	.L865	#,
	.loc 1 1989 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.645
	jmp	.L863	#
.L865:
	.loc 1 1989 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.645
.L863:
	.loc 1 1989 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.645, *sp_163
	.loc 1 1990 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.647
	movq	(%rax), %rax	# PL_op.647_184->op_next, D.24077
.L833:
.LBE181:
	.loc 1 1992 0
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE42:
	.size	Perl_pp_ge, .-Perl_pp_ge
	.globl	Perl_pp_ne
	.type	Perl_pp_ne, @function
Perl_pp_ne:
.LFB43:
	.loc 1 1995 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 1996 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.648
	testq	%rax, %rax	# PL_amagic_generation.648
	je	.L867	#,
.LBB182:
	.loc 1 1996 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_11, tmp188
	movq	%rax, -64(%rbp)	# tmp188, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_11 + -8B], tmp189
	movq	%rax, -56(%rbp)	# tmp189, left
	movq	-56(%rbp), %rax	# left, tmp190
	movl	12(%rax), %eax	# left_14->sv_flags, D.24084
	andl	$268435456, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	jne	.L868	#,
	.loc 1 1996 0 discriminator 2
	movq	-64(%rbp), %rax	# right, tmp191
	movl	12(%rax), %eax	# right_13->sv_flags, D.24084
	andl	$268435456, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	je	.L867	#,
.L868:
	.loc 1 1996 0 discriminator 1
	movq	-64(%rbp), %rsi	# right, tmp192
	movq	-56(%rbp), %rax	# left, tmp193
	movl	$0, %ecx	#,
	movl	$33, %edx	#,
	movq	%rax, %rdi	# tmp193,
	call	Perl_amagic_call	#
	movq	%rax, -48(%rbp)	# tmp194, tmpsv
	cmpq	$0, -48(%rbp)	#, tmpsv
	je	.L867	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.649
	leaq	-8(%rax), %rbx	#, sp
	movq	-48(%rbp), %rax	# tmpsv, tmp195
	movq	%rax, (%rbx)	# tmp195, *sp_22
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.650
	movq	(%rax), %rax	# PL_op.650_23->op_next, D.24083
	jmp	.L869	#
.L867:
.LBE182:
	.loc 1 1998 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_11, D.24085
	movl	12(%rax), %eax	# _25->sv_flags, D.24084
	andl	$524288, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	je	.L870	#,
	.loc 1 1998 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_11, D.24085
	movl	12(%rax), %eax	# _28->sv_flags, D.24084
	andl	$268435456, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	jne	.L870	#,
	leaq	-8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_31, D.24085
	movl	12(%rax), %eax	# _32->sv_flags, D.24084
	andl	$524288, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	je	.L870	#,
	leaq	-8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_35, D.24085
	movl	12(%rax), %eax	# _36->sv_flags, D.24084
	andl	$268435456, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	jne	.L870	#,
	.loc 1 1999 0 is_stmt 1
	subq	$8, %rbx	#, sp
	.loc 1 2000 0
	movq	(%rbx), %rax	# *sp_39, D.24085
	movq	(%rax), %rax	# _40->sv_any, D.24087
	movq	(%rax), %rdx	# MEM[(struct XRV *)_41].xrv_rv, D.24085
	leaq	8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_43, D.24085
	movq	(%rax), %rax	# _44->sv_any, D.24087
	movq	(%rax), %rax	# MEM[(struct XRV *)_45].xrv_rv, D.24085
	cmpq	%rax, %rdx	# D.24085, D.24085
	je	.L871	#,
	.loc 1 2000 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.651
	jmp	.L872	#
.L871:
	.loc 1 2000 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.651
.L872:
	.loc 1 2000 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.651, *sp_39
	.loc 1 2001 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.652
	movq	(%rax), %rax	# PL_op.652_49->op_next, D.24083
	jmp	.L869	#
.L870:
	.loc 1 2005 0
	movq	(%rbx), %rax	# *sp_11, D.24085
	movl	12(%rax), %eax	# _51->sv_flags, D.24084
	andl	$16777216, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	jne	.L873	#,
	.loc 1 2005 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_11, D.24085
	movl	12(%rax), %eax	# _54->sv_flags, D.24084
	andl	$131072, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	jne	.L874	#,
	.loc 1 2005 0 discriminator 2
	movq	(%rbx), %rax	# *sp_11, D.24085
	movl	12(%rax), %eax	# _57->sv_flags, D.24084
	andl	$262144, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	je	.L873	#,
.L874:
	.loc 1 2005 0 discriminator 1
	movq	(%rbx), %rax	# *sp_11, D.24085
	movl	12(%rax), %eax	# _60->sv_flags, D.24084
	andl	$65536, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	jne	.L873	#,
	.loc 1 2005 0 discriminator 2
	movq	(%rbx), %rax	# *sp_11, D.24085
	movq	%rax, %rdi	# D.24085,
	call	Perl_sv_2iv	#
.L873:
	.loc 1 2006 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_11, D.24085
	movl	12(%rax), %eax	# _68->sv_flags, D.24084
	andl	$65536, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	je	.L876	#,
	.loc 1 2007 0
	leaq	-8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_71, D.24085
	movl	12(%rax), %eax	# _72->sv_flags, D.24084
	andl	$16777216, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	jne	.L877	#,
	.loc 1 2007 0 is_stmt 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_75, D.24085
	movl	12(%rax), %eax	# _76->sv_flags, D.24084
	andl	$131072, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	jne	.L878	#,
	.loc 1 2007 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_79, D.24085
	movl	12(%rax), %eax	# _80->sv_flags, D.24084
	andl	$262144, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	je	.L877	#,
.L878:
	.loc 1 2007 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_83, D.24085
	movl	12(%rax), %eax	# _84->sv_flags, D.24084
	andl	$65536, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	jne	.L877	#,
	.loc 1 2007 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_91, D.24085
	movq	%rax, %rdi	# D.24085,
	call	Perl_sv_2iv	#
.L877:
	.loc 1 2008 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_94, D.24085
	movl	12(%rax), %eax	# _95->sv_flags, D.24084
	andl	$65536, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	je	.L876	#,
.LBB183:
	.loc 1 2009 0
	leaq	-8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_98, D.24085
	movl	12(%rax), %eax	# _99->sv_flags, D.24084
	andl	$-2147418112, %eax	#, D.24084
	cmpl	$-2147418112, %eax	#, D.24084
	sete	%al	#, D.24088
	movb	%al, -82(%rbp)	# D.24088, auvok
	.loc 1 2010 0
	movq	(%rbx), %rax	# *sp_11, D.24085
	movl	12(%rax), %eax	# _104->sv_flags, D.24084
	andl	$-2147418112, %eax	#, D.24084
	cmpl	$-2147418112, %eax	#, D.24084
	sete	%al	#, D.24088
	movb	%al, -81(%rbp)	# D.24088, buvok
	.loc 1 2012 0
	movzbl	-82(%rbp), %eax	# auvok, tmp196
	cmpb	-81(%rbp), %al	# buvok, tmp196
	jne	.L880	#,
.LBB184:
	.loc 1 2019 0
	movq	%rbx, %rax	# sp, sp.655
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.655_109, D.24085
	movq	(%rax), %rax	# _111->sv_any, D.24087
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_112].xuv_uv, tmp197
	movq	%rax, -40(%rbp)	# tmp197, buv
	.loc 1 2020 0
	movq	(%rbx), %rax	# *sp_110, D.24085
	movq	(%rax), %rax	# _114->sv_any, D.24087
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_115].xuv_uv, tmp198
	movq	%rax, -32(%rbp)	# tmp198, auv
	.loc 1 2022 0
	movq	-32(%rbp), %rax	# auv, tmp199
	cmpq	-40(%rbp), %rax	# buv, tmp199
	je	.L881	#,
	.loc 1 2022 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.656
	jmp	.L882	#
.L881:
	.loc 1 2022 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.656
.L882:
	.loc 1 2022 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.656, *sp_110
	.loc 1 2023 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.657
	movq	(%rax), %rax	# PL_op.657_119->op_next, D.24083
	jmp	.L869	#
.L880:
.LBE184:
.LBB185:
	.loc 1 2030 0
	cmpb	$0, -82(%rbp)	#, auvok
	je	.L883	#,
	.loc 1 2032 0
	movq	(%rbx), %rax	# *sp_11, D.24085
	movq	(%rax), %rax	# _121->sv_any, D.24087
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_122].xiv_iv, tmp200
	movq	%rax, -80(%rbp)	# tmp200, iv
	.loc 1 2033 0
	subq	$8, %rbx	#, sp
	.loc 1 2034 0
	cmpq	$0, -80(%rbp)	#, iv
	jns	.L884	#,
	.loc 1 2036 0
	movq	$PL_sv_yes, (%rbx)	#, *sp_124
	.loc 1 2037 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.658
	movq	(%rax), %rax	# PL_op.658_125->op_next, D.24083
	jmp	.L869	#
.L884:
	.loc 1 2039 0
	movq	(%rbx), %rax	# *sp_124, D.24085
	movq	(%rax), %rax	# _127->sv_any, D.24087
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_128].xuv_uv, tmp201
	movq	%rax, -72(%rbp)	# tmp201, uv
	jmp	.L885	#
.L883:
	.loc 1 2041 0
	leaq	-8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_130, D.24085
	movq	(%rax), %rax	# _131->sv_any, D.24087
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_132].xiv_iv, tmp202
	movq	%rax, -80(%rbp)	# tmp202, iv
	.loc 1 2042 0
	subq	$8, %rbx	#, sp
	.loc 1 2043 0
	cmpq	$0, -80(%rbp)	#, iv
	jns	.L886	#,
	.loc 1 2045 0
	movq	$PL_sv_yes, (%rbx)	#, *sp_134
	.loc 1 2046 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.659
	movq	(%rax), %rax	# PL_op.659_135->op_next, D.24083
	jmp	.L869	#
.L886:
	.loc 1 2048 0
	leaq	8(%rbx), %rax	#, D.24086
	movq	(%rax), %rax	# *_137, D.24085
	movq	(%rax), %rax	# _138->sv_any, D.24087
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_139].xuv_uv, tmp203
	movq	%rax, -72(%rbp)	# tmp203, uv
.L885:
	.loc 1 2050 0
	movq	-80(%rbp), %rax	# iv, iv.661
	cmpq	-72(%rbp), %rax	# uv, iv.661
	je	.L887	#,
	.loc 1 2050 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.660
	jmp	.L888	#
.L887:
	.loc 1 2050 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.660
.L888:
	.loc 1 2050 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.660, *sp_1
	.loc 1 2051 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.662
	movq	(%rax), %rax	# PL_op.662_144->op_next, D.24083
	jmp	.L869	#
.L876:
.LBE185:
.LBE183:
.LBB186:
	.loc 1 2057 0
	movq	%rbx, %rax	# sp, sp.663
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.663_146, PL_Sv.664
	movq	%rax, PL_Sv(%rip)	# PL_Sv.664, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.666
	movl	12(%rax), %eax	# PL_Sv.666_149->sv_flags, D.24084
	andl	$131072, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	je	.L889	#,
	.loc 1 2057 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.667
	movq	(%rax), %rax	# PL_Sv.667_152->sv_any, D.24087
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_153].xnv_nv, iftmp.665
	jmp	.L890	#
.L889:
	.loc 1 2057 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.668
	movq	%rax, %rdi	# PL_Sv.668,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -104(%rbp)	#, %sfp
	movq	-104(%rbp), %rax	# %sfp, iftmp.665
.L890:
	.loc 1 2057 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.665, value
	.loc 1 2058 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# *sp_147, D.24085
	movl	12(%rax), %eax	# _158->sv_flags, D.24084
	andl	$131072, %eax	#, D.24084
	testl	%eax, %eax	# D.24084
	je	.L891	#,
	.loc 1 2058 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_147, D.24085
	movq	(%rax), %rax	# _161->sv_any, D.24087
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_162].xnv_nv, iftmp.670
	jmp	.L892	#
.L891:
	.loc 1 2058 0 discriminator 2
	movq	(%rbx), %rax	# *sp_147, D.24085
	movq	%rax, %rdi	# D.24085,
	call	Perl_sv_2nv	#
.L892:
	.loc 1 2058 0 discriminator 3
	ucomisd	-24(%rbp), %xmm0	# value, iftmp.670
	jp	.L896	#,
	ucomisd	-24(%rbp), %xmm0	# value, iftmp.670
	je	.L897	#,
.L896:
	.loc 1 2058 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.669
	jmp	.L895	#
.L897:
	.loc 1 2058 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.669
.L895:
	.loc 1 2058 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.669, *sp_147
	.loc 1 2059 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.671
	movq	(%rax), %rax	# PL_op.671_168->op_next, D.24083
.L869:
.LBE186:
	.loc 1 2061 0
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE43:
	.size	Perl_pp_ne, .-Perl_pp_ne
	.globl	Perl_pp_ncmp
	.type	Perl_pp_ncmp, @function
Perl_pp_ncmp:
.LFB44:
	.loc 1 2064 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$168, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2065 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.672
	movq	PL_op(%rip), %rax	# PL_op, PL_op.673
	movq	24(%rax), %rax	# PL_op.673_10->op_targ, D.24090
	salq	$3, %rax	#, D.24090
	addq	%rdx, %rax	# PL_curpad.672, D.24091
	movq	(%rax), %rax	# *_13, tmp227
	movq	%rax, -144(%rbp)	# tmp227, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.674
	testq	%rax, %rax	# PL_amagic_generation.674
	je	.L899	#,
.LBB187:
	.loc 1 2065 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_8, tmp228
	movq	%rax, -136(%rbp)	# tmp228, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_8 + -8B], tmp229
	movq	%rax, -128(%rbp)	# tmp229, left
	movq	-128(%rbp), %rax	# left, tmp230
	movl	12(%rax), %eax	# left_17->sv_flags, D.24092
	andl	$268435456, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	jne	.L900	#,
	.loc 1 2065 0 discriminator 2
	movq	-136(%rbp), %rax	# right, tmp231
	movl	12(%rax), %eax	# right_16->sv_flags, D.24092
	andl	$268435456, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L899	#,
.L900:
	.loc 1 2065 0 discriminator 1
	movq	-136(%rbp), %rsi	# right, tmp232
	movq	-128(%rbp), %rax	# left, tmp233
	movl	$0, %ecx	#,
	movl	$34, %edx	#,
	movq	%rax, %rdi	# tmp233,
	call	Perl_amagic_call	#
	movq	%rax, -120(%rbp)	# tmp234, tmpsv
	cmpq	$0, -120(%rbp)	#, tmpsv
	je	.L899	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.675
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.676
	movzbl	36(%rax), %eax	# PL_op.676_26->op_flags, D.24093
	movzbl	%al, %eax	# D.24093, D.24094
	andl	$64, %eax	#, D.24094
	testl	%eax, %eax	# D.24094
	jne	.L901	#,
	.loc 1 2065 0 discriminator 2
	movq	-144(%rbp), %rax	# targ, tmp235
	movl	12(%rax), %eax	# targ_14->sv_flags, D.24092
	andl	$1024, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L902	#,
.L901:
	.loc 1 2065 0 discriminator 1
	movq	-120(%rbp), %rcx	# tmpsv, tmp236
	movq	-144(%rbp), %rax	# targ, tmp237
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp236,
	movq	%rax, %rdi	# tmp237,
	call	Perl_sv_setsv_flags	#
.LBB188:
	movq	-144(%rbp), %rax	# targ, tmp238
	movl	12(%rax), %eax	# targ_14->sv_flags, D.24092
	andl	$16384, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L903	#,
	movq	-144(%rbp), %rax	# targ, tmp239
	movq	%rax, %rdi	# tmp239,
	call	Perl_mg_set	#
.L903:
	.loc 1 2065 0 discriminator 2
	movq	-144(%rbp), %rax	# targ, tmp240
	movq	%rax, (%rbx)	# tmp240, *sp_25
.LBE188:
	jmp	.L904	#
.L902:
	.loc 1 2065 0 discriminator 1
	movq	-120(%rbp), %rax	# tmpsv, tmp241
	movq	%rax, (%rbx)	# tmp241, *sp_25
.L904:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.677
	movq	(%rax), %rax	# PL_op.677_35->op_next, D.24089
	jmp	.L905	#
.L899:
.LBE187:
	.loc 1 2067 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_8, D.24095
	movl	12(%rax), %eax	# _37->sv_flags, D.24092
	andl	$524288, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L906	#,
	.loc 1 2067 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_8, D.24095
	movl	12(%rax), %eax	# _40->sv_flags, D.24092
	andl	$268435456, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	jne	.L906	#,
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_43, D.24095
	movl	12(%rax), %eax	# _44->sv_flags, D.24092
	andl	$524288, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L906	#,
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_47, D.24095
	movl	12(%rax), %eax	# _48->sv_flags, D.24092
	andl	$268435456, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	jne	.L906	#,
.LBB189:
	.loc 1 2068 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.678
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.678_51, D.24095
	movq	(%rax), %rax	# _53->sv_any, D.24096
	movq	(%rax), %rax	# MEM[(struct XRV *)_54].xrv_rv, D.24095
	movq	%rax, -112(%rbp)	# D.24095, right
	.loc 1 2069 0
	movq	(%rbx), %rax	# *sp_52, D.24095
	movq	(%rax), %rax	# _57->sv_any, D.24096
	movq	(%rax), %rax	# MEM[(struct XRV *)_58].xrv_rv, D.24095
	movq	%rax, -104(%rbp)	# D.24095, left
.LBB190:
	.loc 1 2070 0
	movq	-104(%rbp), %rax	# left, tmp242
	cmpq	-112(%rbp), %rax	# right, tmp242
	seta	%al	#, D.24097
	movzbl	%al, %edx	# D.24097, D.24094
	movq	-104(%rbp), %rax	# left, tmp243
	cmpq	-112(%rbp), %rax	# right, tmp243
	setb	%al	#, D.24097
	movzbl	%al, %eax	# D.24097, D.24094
	subl	%eax, %edx	# D.24094, D.24094
	movl	%edx, %eax	# D.24094, D.24094
	movslq	%eax, %rdx	# D.24094, D.24098
	movq	-144(%rbp), %rax	# targ, tmp244
	movq	%rdx, %rsi	# D.24098,
	movq	%rax, %rdi	# tmp244,
	call	Perl_sv_setiv	#
.LBB191:
	movq	-144(%rbp), %rax	# targ, tmp245
	movl	12(%rax), %eax	# targ_14->sv_flags, D.24092
	andl	$16384, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L907	#,
	.loc 1 2070 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rax	# targ, tmp246
	movq	%rax, %rdi	# tmp246,
	call	Perl_mg_set	#
.L907:
	.loc 1 2070 0 discriminator 2
	movq	-144(%rbp), %rax	# targ, tmp247
	movq	%rax, (%rbx)	# tmp247, *sp_52
.LBE191:
.LBE190:
	.loc 1 2071 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.679
	movq	(%rax), %rax	# PL_op.679_70->op_next, D.24089
	jmp	.L905	#
.L906:
.LBE189:
	.loc 1 2076 0
	movq	(%rbx), %rax	# *sp_8, D.24095
	movl	12(%rax), %eax	# _72->sv_flags, D.24092
	andl	$16777216, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	jne	.L908	#,
	.loc 1 2076 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_8, D.24095
	movl	12(%rax), %eax	# _75->sv_flags, D.24092
	andl	$131072, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	jne	.L909	#,
	.loc 1 2076 0 discriminator 2
	movq	(%rbx), %rax	# *sp_8, D.24095
	movl	12(%rax), %eax	# _78->sv_flags, D.24092
	andl	$262144, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L908	#,
.L909:
	.loc 1 2076 0 discriminator 1
	movq	(%rbx), %rax	# *sp_8, D.24095
	movl	12(%rax), %eax	# _81->sv_flags, D.24092
	andl	$65536, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	jne	.L908	#,
	.loc 1 2076 0 discriminator 2
	movq	(%rbx), %rax	# *sp_8, D.24095
	movq	%rax, %rdi	# D.24095,
	call	Perl_sv_2iv	#
.L908:
	.loc 1 2077 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_8, D.24095
	movl	12(%rax), %eax	# _89->sv_flags, D.24092
	andl	$65536, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L911	#,
	.loc 1 2078 0
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_92, D.24095
	movl	12(%rax), %eax	# _93->sv_flags, D.24092
	andl	$16777216, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	jne	.L912	#,
	.loc 1 2078 0 is_stmt 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_96, D.24095
	movl	12(%rax), %eax	# _97->sv_flags, D.24092
	andl	$131072, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	jne	.L913	#,
	.loc 1 2078 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_100, D.24095
	movl	12(%rax), %eax	# _101->sv_flags, D.24092
	andl	$262144, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L912	#,
.L913:
	.loc 1 2078 0 discriminator 1
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_104, D.24095
	movl	12(%rax), %eax	# _105->sv_flags, D.24092
	andl	$65536, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	jne	.L912	#,
	.loc 1 2078 0 discriminator 2
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_112, D.24095
	movq	%rax, %rdi	# D.24095,
	call	Perl_sv_2iv	#
.L912:
	.loc 1 2079 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_115, D.24095
	movl	12(%rax), %eax	# _116->sv_flags, D.24092
	andl	$65536, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L911	#,
.LBB192:
	.loc 1 2080 0
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_119, D.24095
	movl	12(%rax), %eax	# _120->sv_flags, D.24092
	andl	$-2147418112, %eax	#, D.24092
	cmpl	$-2147418112, %eax	#, D.24092
	sete	%al	#, D.24097
	movb	%al, -154(%rbp)	# D.24097, leftuvok
	.loc 1 2081 0
	movq	(%rbx), %rax	# *sp_8, D.24095
	movl	12(%rax), %eax	# _125->sv_flags, D.24092
	andl	$-2147418112, %eax	#, D.24092
	cmpl	$-2147418112, %eax	#, D.24092
	sete	%al	#, D.24097
	movb	%al, -153(%rbp)	# D.24097, rightuvok
	.loc 1 2083 0
	cmpb	$0, -154(%rbp)	#, leftuvok
	jne	.L915	#,
	.loc 1 2083 0 is_stmt 0 discriminator 1
	cmpb	$0, -153(%rbp)	#, rightuvok
	jne	.L915	#,
.LBB193:
	.loc 1 2084 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_130, D.24095
	movq	(%rax), %rax	# _131->sv_any, D.24096
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_132].xiv_iv, tmp248
	movq	%rax, -96(%rbp)	# tmp248, leftiv
	.loc 1 2085 0
	movq	(%rbx), %rax	# *sp_8, D.24095
	movq	(%rax), %rax	# _134->sv_any, D.24096
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_135].xiv_iv, tmp249
	movq	%rax, -88(%rbp)	# tmp249, rightiv
	.loc 1 2087 0
	movq	-96(%rbp), %rax	# leftiv, tmp250
	cmpq	-88(%rbp), %rax	# rightiv, tmp250
	jle	.L916	#,
	.loc 1 2088 0
	movl	$1, -152(%rbp)	#, value
	jmp	.L917	#
.L916:
	.loc 1 2089 0
	movq	-96(%rbp), %rax	# leftiv, tmp251
	cmpq	-88(%rbp), %rax	# rightiv, tmp251
	jge	.L918	#,
	.loc 1 2090 0
	movl	$-1, -152(%rbp)	#, value
	jmp	.L917	#
.L918:
	.loc 1 2092 0
	movl	$0, -152(%rbp)	#, value
.LBE193:
	.loc 1 2083 0
	jmp	.L919	#
.L917:
	jmp	.L919	#
.L915:
	.loc 1 2093 0
	cmpb	$0, -154(%rbp)	#, leftuvok
	je	.L920	#,
	.loc 1 2093 0 is_stmt 0 discriminator 1
	cmpb	$0, -153(%rbp)	#, rightuvok
	je	.L920	#,
.LBB194:
	.loc 1 2094 0 is_stmt 1
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_140, D.24095
	movq	(%rax), %rax	# _141->sv_any, D.24096
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_142].xuv_uv, tmp252
	movq	%rax, -80(%rbp)	# tmp252, leftuv
	.loc 1 2095 0
	movq	(%rbx), %rax	# *sp_8, D.24095
	movq	(%rax), %rax	# _144->sv_any, D.24096
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_145].xuv_uv, tmp253
	movq	%rax, -72(%rbp)	# tmp253, rightuv
	.loc 1 2097 0
	movq	-80(%rbp), %rax	# leftuv, tmp254
	cmpq	-72(%rbp), %rax	# rightuv, tmp254
	jbe	.L921	#,
	.loc 1 2098 0
	movl	$1, -152(%rbp)	#, value
	jmp	.L922	#
.L921:
	.loc 1 2099 0
	movq	-80(%rbp), %rax	# leftuv, tmp255
	cmpq	-72(%rbp), %rax	# rightuv, tmp255
	jae	.L923	#,
	.loc 1 2100 0
	movl	$-1, -152(%rbp)	#, value
	jmp	.L922	#
.L923:
	.loc 1 2102 0
	movl	$0, -152(%rbp)	#, value
.LBE194:
	.loc 1 2093 0
	jmp	.L919	#
.L922:
	jmp	.L919	#
.L920:
	.loc 1 2103 0
	cmpb	$0, -154(%rbp)	#, leftuvok
	je	.L924	#,
.LBB195:
	.loc 1 2107 0
	movq	(%rbx), %rax	# *sp_8, D.24095
	movq	(%rax), %rax	# _150->sv_any, D.24096
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_151].xiv_iv, tmp256
	movq	%rax, -64(%rbp)	# tmp256, rightiv
	.loc 1 2108 0
	cmpq	$0, -64(%rbp)	#, rightiv
	jns	.L925	#,
	.loc 1 2110 0
	movl	$1, -152(%rbp)	#, value
	jmp	.L926	#
.L925:
	.loc 1 2112 0
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_154, D.24095
	movq	(%rax), %rax	# _155->sv_any, D.24096
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_156].xuv_uv, tmp257
	movq	%rax, -56(%rbp)	# tmp257, leftuv
	.loc 1 2113 0
	movq	-64(%rbp), %rax	# rightiv, rightiv.682
	cmpq	-56(%rbp), %rax	# leftuv, rightiv.682
	jae	.L927	#,
	.loc 1 2114 0
	movl	$1, -152(%rbp)	#, value
	jmp	.L926	#
.L927:
	.loc 1 2115 0
	movq	-64(%rbp), %rax	# rightiv, rightiv.683
	cmpq	-56(%rbp), %rax	# leftuv, rightiv.683
	jbe	.L928	#,
	.loc 1 2116 0
	movl	$-1, -152(%rbp)	#, value
	jmp	.L926	#
.L928:
	.loc 1 2118 0
	movl	$0, -152(%rbp)	#, value
.LBE195:
	jmp	.L919	#
.L926:
	jmp	.L919	#
.L924:
.LBB196:
	.loc 1 2125 0
	leaq	-8(%rbx), %rax	#, D.24091
	movq	(%rax), %rax	# *_163, D.24095
	movq	(%rax), %rax	# _164->sv_any, D.24096
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_165].xiv_iv, tmp258
	movq	%rax, -48(%rbp)	# tmp258, leftiv
	.loc 1 2126 0
	cmpq	$0, -48(%rbp)	#, leftiv
	jns	.L929	#,
	.loc 1 2128 0
	movl	$-1, -152(%rbp)	#, value
	jmp	.L919	#
.L929:
	.loc 1 2130 0
	movq	(%rbx), %rax	# *sp_8, D.24095
	movq	(%rax), %rax	# _168->sv_any, D.24096
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_169].xuv_uv, tmp259
	movq	%rax, -40(%rbp)	# tmp259, rightuv
	.loc 1 2131 0
	movq	-48(%rbp), %rax	# leftiv, leftiv.684
	cmpq	-40(%rbp), %rax	# rightuv, leftiv.684
	jbe	.L930	#,
	.loc 1 2132 0
	movl	$1, -152(%rbp)	#, value
	jmp	.L919	#
.L930:
	.loc 1 2133 0
	movq	-48(%rbp), %rax	# leftiv, leftiv.685
	cmpq	-40(%rbp), %rax	# rightuv, leftiv.685
	jae	.L931	#,
	.loc 1 2134 0
	movl	$-1, -152(%rbp)	#, value
	jmp	.L919	#
.L931:
	.loc 1 2136 0
	movl	$0, -152(%rbp)	#, value
.L919:
.LBE196:
	.loc 1 2140 0
	subq	$8, %rbx	#, sp
.LBB197:
	.loc 1 2141 0
	movl	-152(%rbp), %eax	# value, tmp260
	movslq	%eax, %rdx	# tmp260, D.24098
	movq	-144(%rbp), %rax	# targ, tmp261
	movq	%rdx, %rsi	# D.24098,
	movq	%rax, %rdi	# tmp261,
	call	Perl_sv_setiv	#
.LBB198:
	movq	-144(%rbp), %rax	# targ, tmp262
	movl	12(%rax), %eax	# targ_14->sv_flags, D.24092
	andl	$16384, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L932	#,
	.loc 1 2141 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rax	# targ, tmp263
	movq	%rax, %rdi	# tmp263,
	call	Perl_mg_set	#
.L932:
	.loc 1 2141 0 discriminator 2
	movq	-144(%rbp), %rax	# targ, tmp264
	movq	%rax, (%rbx)	# tmp264, *sp_176
.LBE198:
.LBE197:
	.loc 1 2142 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.686
	movq	(%rax), %rax	# PL_op.686_181->op_next, D.24089
	jmp	.L905	#
.L911:
.LBE192:
.LBB199:
	.loc 1 2147 0
	movq	%rbx, %rax	# sp, sp.687
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.687_183, PL_Sv.688
	movq	%rax, PL_Sv(%rip)	# PL_Sv.688, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.690
	movl	12(%rax), %eax	# PL_Sv.690_186->sv_flags, D.24092
	andl	$131072, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L933	#,
	.loc 1 2147 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.691
	movq	(%rax), %rax	# PL_Sv.691_189->sv_any, D.24096
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_190].xnv_nv, iftmp.689
	jmp	.L934	#
.L933:
	.loc 1 2147 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.692
	movq	%rax, %rdi	# PL_Sv.692,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -168(%rbp)	#, %sfp
	movq	-168(%rbp), %rax	# %sfp, iftmp.689
.L934:
	.loc 1 2147 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.689, right
	movq	(%rbx), %rax	# *sp_184, D.24095
	movl	12(%rax), %eax	# _195->sv_flags, D.24092
	andl	$131072, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L935	#,
	.loc 1 2147 0 discriminator 1
	movq	(%rbx), %rax	# *sp_184, D.24095
	movq	(%rax), %rax	# _198->sv_any, D.24096
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_199].xnv_nv, iftmp.693
	jmp	.L936	#
.L935:
	.loc 1 2147 0 discriminator 2
	movq	(%rbx), %rax	# *sp_184, D.24095
	movq	%rax, %rdi	# D.24095,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -168(%rbp)	#, %sfp
	movq	-168(%rbp), %rax	# %sfp, iftmp.693
.L936:
	.loc 1 2147 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.693, left
	.loc 1 2151 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# left, tmp265
	movq	%rax, -168(%rbp)	# tmp265, %sfp
	movsd	-168(%rbp), %xmm0	# %sfp,
	call	__isnan	#
	testl	%eax, %eax	# D.24094
	jne	.L937	#,
	.loc 1 2151 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# right, tmp266
	movq	%rax, -168(%rbp)	# tmp266, %sfp
	movsd	-168(%rbp), %xmm0	# %sfp,
	call	__isnan	#
	testl	%eax, %eax	# D.24094
	je	.L938	#,
.L937:
	.loc 1 2152 0 is_stmt 1
	movq	$PL_sv_undef, (%rbx)	#, *sp_184
	.loc 1 2153 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.694
	movq	(%rax), %rax	# PL_op.694_217->op_next, D.24089
	jmp	.L905	#
.L938:
	.loc 1 2155 0
	movsd	-24(%rbp), %xmm0	# left, tmp267
	ucomisd	-32(%rbp), %xmm0	# right, tmp267
	seta	%al	#, D.24097
	movzbl	%al, %edx	# D.24097, D.24094
	movsd	-32(%rbp), %xmm0	# right, tmp268
	ucomisd	-24(%rbp), %xmm0	# left, tmp268
	seta	%al	#, D.24097
	movzbl	%al, %eax	# D.24097, D.24094
	subl	%eax, %edx	# D.24094, tmp269
	movl	%edx, %eax	# tmp269, tmp269
	movl	%eax, -148(%rbp)	# tmp269, value
.LBB200:
	.loc 1 2168 0
	movl	-148(%rbp), %eax	# value, tmp270
	movslq	%eax, %rdx	# tmp270, D.24098
	movq	-144(%rbp), %rax	# targ, tmp271
	movq	%rdx, %rsi	# D.24098,
	movq	%rax, %rdi	# tmp271,
	call	Perl_sv_setiv	#
.LBB201:
	movq	-144(%rbp), %rax	# targ, tmp272
	movl	12(%rax), %eax	# targ_14->sv_flags, D.24092
	andl	$16384, %eax	#, D.24092
	testl	%eax, %eax	# D.24092
	je	.L939	#,
	.loc 1 2168 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rax	# targ, tmp273
	movq	%rax, %rdi	# tmp273,
	call	Perl_mg_set	#
.L939:
	.loc 1 2168 0 discriminator 2
	movq	-144(%rbp), %rax	# targ, tmp274
	movq	%rax, (%rbx)	# tmp274, *sp_184
.LBE201:
.LBE200:
	.loc 1 2169 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.695
	movq	(%rax), %rax	# PL_op.695_215->op_next, D.24089
.L905:
.LBE199:
	.loc 1 2171 0
	addq	$168, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE44:
	.size	Perl_pp_ncmp, .-Perl_pp_ncmp
	.globl	Perl_pp_slt
	.type	Perl_pp_slt, @function
Perl_pp_slt:
.LFB45:
	.loc 1 2174 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2175 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.696
	testq	%rax, %rax	# PL_amagic_generation.696
	je	.L941	#,
.LBB202:
	.loc 1 2175 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_3, tmp72
	movq	%rax, -56(%rbp)	# tmp72, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_3 + -8B], tmp73
	movq	%rax, -48(%rbp)	# tmp73, left
	movq	-48(%rbp), %rax	# left, tmp74
	movl	12(%rax), %eax	# left_6->sv_flags, D.24100
	andl	$268435456, %eax	#, D.24100
	testl	%eax, %eax	# D.24100
	jne	.L942	#,
	.loc 1 2175 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp75
	movl	12(%rax), %eax	# right_5->sv_flags, D.24100
	andl	$268435456, %eax	#, D.24100
	testl	%eax, %eax	# D.24100
	je	.L941	#,
.L942:
	.loc 1 2175 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp76
	movq	-48(%rbp), %rax	# left, tmp77
	movl	$0, %ecx	#,
	movl	$36, %edx	#,
	movq	%rax, %rdi	# tmp77,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp78, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L941	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.697
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp79
	movq	%rax, (%rbx)	# tmp79, *sp_14
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.698
	movq	(%rax), %rax	# PL_op.698_15->op_next, D.24099
	jmp	.L943	#
.L941:
.LBE202:
.LBB203:
	.loc 1 2177 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.699
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.699_17, tmp80
	movq	%rax, -32(%rbp)	# tmp80, right
	movq	(%rbx), %rax	# *sp_18, tmp81
	movq	%rax, -24(%rbp)	# tmp81, left
	.loc 1 2178 0
	movq	-32(%rbp), %rdx	# right, tmp82
	movq	-24(%rbp), %rax	# left, tmp83
	movq	%rdx, %rsi	# tmp82,
	movq	%rax, %rdi	# tmp83,
	call	Perl_sv_cmp	#
	movl	%eax, -60(%rbp)	# tmp84, cmp
	.loc 1 2181 0
	cmpl	$0, -60(%rbp)	#, cmp
	jns	.L944	#,
	.loc 1 2181 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.700
	jmp	.L945	#
.L944:
	.loc 1 2181 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.700
.L945:
	.loc 1 2181 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.700, *sp_18
	.loc 1 2182 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.701
	movq	(%rax), %rax	# PL_op.701_24->op_next, D.24099
.L943:
.LBE203:
	.loc 1 2184 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE45:
	.size	Perl_pp_slt, .-Perl_pp_slt
	.globl	Perl_pp_sgt
	.type	Perl_pp_sgt, @function
Perl_pp_sgt:
.LFB46:
	.loc 1 2187 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2188 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.702
	testq	%rax, %rax	# PL_amagic_generation.702
	je	.L947	#,
.LBB204:
	.loc 1 2188 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_3, tmp72
	movq	%rax, -56(%rbp)	# tmp72, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_3 + -8B], tmp73
	movq	%rax, -48(%rbp)	# tmp73, left
	movq	-48(%rbp), %rax	# left, tmp74
	movl	12(%rax), %eax	# left_6->sv_flags, D.24102
	andl	$268435456, %eax	#, D.24102
	testl	%eax, %eax	# D.24102
	jne	.L948	#,
	.loc 1 2188 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp75
	movl	12(%rax), %eax	# right_5->sv_flags, D.24102
	andl	$268435456, %eax	#, D.24102
	testl	%eax, %eax	# D.24102
	je	.L947	#,
.L948:
	.loc 1 2188 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp76
	movq	-48(%rbp), %rax	# left, tmp77
	movl	$0, %ecx	#,
	movl	$38, %edx	#,
	movq	%rax, %rdi	# tmp77,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp78, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L947	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.703
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp79
	movq	%rax, (%rbx)	# tmp79, *sp_14
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.704
	movq	(%rax), %rax	# PL_op.704_15->op_next, D.24101
	jmp	.L949	#
.L947:
.LBE204:
.LBB205:
	.loc 1 2190 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.705
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.705_17, tmp80
	movq	%rax, -32(%rbp)	# tmp80, right
	movq	(%rbx), %rax	# *sp_18, tmp81
	movq	%rax, -24(%rbp)	# tmp81, left
	.loc 1 2191 0
	movq	-32(%rbp), %rdx	# right, tmp82
	movq	-24(%rbp), %rax	# left, tmp83
	movq	%rdx, %rsi	# tmp82,
	movq	%rax, %rdi	# tmp83,
	call	Perl_sv_cmp	#
	movl	%eax, -60(%rbp)	# tmp84, cmp
	.loc 1 2194 0
	cmpl	$0, -60(%rbp)	#, cmp
	jle	.L950	#,
	.loc 1 2194 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.706
	jmp	.L951	#
.L950:
	.loc 1 2194 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.706
.L951:
	.loc 1 2194 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.706, *sp_18
	.loc 1 2195 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.707
	movq	(%rax), %rax	# PL_op.707_24->op_next, D.24101
.L949:
.LBE205:
	.loc 1 2197 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE46:
	.size	Perl_pp_sgt, .-Perl_pp_sgt
	.globl	Perl_pp_sle
	.type	Perl_pp_sle, @function
Perl_pp_sle:
.LFB47:
	.loc 1 2200 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2201 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.708
	testq	%rax, %rax	# PL_amagic_generation.708
	je	.L953	#,
.LBB206:
	.loc 1 2201 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_3, tmp72
	movq	%rax, -56(%rbp)	# tmp72, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_3 + -8B], tmp73
	movq	%rax, -48(%rbp)	# tmp73, left
	movq	-48(%rbp), %rax	# left, tmp74
	movl	12(%rax), %eax	# left_6->sv_flags, D.24104
	andl	$268435456, %eax	#, D.24104
	testl	%eax, %eax	# D.24104
	jne	.L954	#,
	.loc 1 2201 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp75
	movl	12(%rax), %eax	# right_5->sv_flags, D.24104
	andl	$268435456, %eax	#, D.24104
	testl	%eax, %eax	# D.24104
	je	.L953	#,
.L954:
	.loc 1 2201 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp76
	movq	-48(%rbp), %rax	# left, tmp77
	movl	$0, %ecx	#,
	movl	$37, %edx	#,
	movq	%rax, %rdi	# tmp77,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp78, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L953	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.709
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp79
	movq	%rax, (%rbx)	# tmp79, *sp_14
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.710
	movq	(%rax), %rax	# PL_op.710_15->op_next, D.24103
	jmp	.L955	#
.L953:
.LBE206:
.LBB207:
	.loc 1 2203 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.711
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.711_17, tmp80
	movq	%rax, -32(%rbp)	# tmp80, right
	movq	(%rbx), %rax	# *sp_18, tmp81
	movq	%rax, -24(%rbp)	# tmp81, left
	.loc 1 2204 0
	movq	-32(%rbp), %rdx	# right, tmp82
	movq	-24(%rbp), %rax	# left, tmp83
	movq	%rdx, %rsi	# tmp82,
	movq	%rax, %rdi	# tmp83,
	call	Perl_sv_cmp	#
	movl	%eax, -60(%rbp)	# tmp84, cmp
	.loc 1 2207 0
	cmpl	$0, -60(%rbp)	#, cmp
	jg	.L956	#,
	.loc 1 2207 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.712
	jmp	.L957	#
.L956:
	.loc 1 2207 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.712
.L957:
	.loc 1 2207 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.712, *sp_18
	.loc 1 2208 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.713
	movq	(%rax), %rax	# PL_op.713_24->op_next, D.24103
.L955:
.LBE207:
	.loc 1 2210 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE47:
	.size	Perl_pp_sle, .-Perl_pp_sle
	.globl	Perl_pp_sge
	.type	Perl_pp_sge, @function
Perl_pp_sge:
.LFB48:
	.loc 1 2213 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2214 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.714
	testq	%rax, %rax	# PL_amagic_generation.714
	je	.L959	#,
.LBB208:
	.loc 1 2214 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_3, tmp72
	movq	%rax, -56(%rbp)	# tmp72, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_3 + -8B], tmp73
	movq	%rax, -48(%rbp)	# tmp73, left
	movq	-48(%rbp), %rax	# left, tmp74
	movl	12(%rax), %eax	# left_6->sv_flags, D.24106
	andl	$268435456, %eax	#, D.24106
	testl	%eax, %eax	# D.24106
	jne	.L960	#,
	.loc 1 2214 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp75
	movl	12(%rax), %eax	# right_5->sv_flags, D.24106
	andl	$268435456, %eax	#, D.24106
	testl	%eax, %eax	# D.24106
	je	.L959	#,
.L960:
	.loc 1 2214 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp76
	movq	-48(%rbp), %rax	# left, tmp77
	movl	$0, %ecx	#,
	movl	$39, %edx	#,
	movq	%rax, %rdi	# tmp77,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp78, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L959	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.715
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp79
	movq	%rax, (%rbx)	# tmp79, *sp_14
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.716
	movq	(%rax), %rax	# PL_op.716_15->op_next, D.24105
	jmp	.L961	#
.L959:
.LBE208:
.LBB209:
	.loc 1 2216 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.717
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.717_17, tmp80
	movq	%rax, -32(%rbp)	# tmp80, right
	movq	(%rbx), %rax	# *sp_18, tmp81
	movq	%rax, -24(%rbp)	# tmp81, left
	.loc 1 2217 0
	movq	-32(%rbp), %rdx	# right, tmp82
	movq	-24(%rbp), %rax	# left, tmp83
	movq	%rdx, %rsi	# tmp82,
	movq	%rax, %rdi	# tmp83,
	call	Perl_sv_cmp	#
	movl	%eax, -60(%rbp)	# tmp84, cmp
	.loc 1 2220 0
	cmpl	$0, -60(%rbp)	#, cmp
	js	.L962	#,
	.loc 1 2220 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.718
	jmp	.L963	#
.L962:
	.loc 1 2220 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.718
.L963:
	.loc 1 2220 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.718, *sp_18
	.loc 1 2221 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.719
	movq	(%rax), %rax	# PL_op.719_24->op_next, D.24105
.L961:
.LBE209:
	.loc 1 2223 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE48:
	.size	Perl_pp_sge, .-Perl_pp_sge
	.globl	Perl_pp_seq
	.type	Perl_pp_seq, @function
Perl_pp_seq:
.LFB49:
	.loc 1 2226 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2227 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.720
	testq	%rax, %rax	# PL_amagic_generation.720
	je	.L965	#,
.LBB210:
	.loc 1 2227 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_3, tmp73
	movq	%rax, -56(%rbp)	# tmp73, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_3 + -8B], tmp74
	movq	%rax, -48(%rbp)	# tmp74, left
	movq	-48(%rbp), %rax	# left, tmp75
	movl	12(%rax), %eax	# left_6->sv_flags, D.24108
	andl	$268435456, %eax	#, D.24108
	testl	%eax, %eax	# D.24108
	jne	.L966	#,
	.loc 1 2227 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp76
	movl	12(%rax), %eax	# right_5->sv_flags, D.24108
	andl	$268435456, %eax	#, D.24108
	testl	%eax, %eax	# D.24108
	je	.L965	#,
.L966:
	.loc 1 2227 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp77
	movq	-48(%rbp), %rax	# left, tmp78
	movl	$0, %ecx	#,
	movl	$40, %edx	#,
	movq	%rax, %rdi	# tmp78,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp79, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L965	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.721
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp80
	movq	%rax, (%rbx)	# tmp80, *sp_14
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.722
	movq	(%rax), %rax	# PL_op.722_15->op_next, D.24107
	jmp	.L967	#
.L965:
.LBE210:
.LBB211:
	.loc 1 2229 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.723
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.723_17, tmp81
	movq	%rax, -32(%rbp)	# tmp81, right
	movq	(%rbx), %rax	# *sp_18, tmp82
	movq	%rax, -24(%rbp)	# tmp82, left
	.loc 1 2230 0
	movq	-32(%rbp), %rdx	# right, tmp83
	movq	-24(%rbp), %rax	# left, tmp84
	movq	%rdx, %rsi	# tmp83,
	movq	%rax, %rdi	# tmp84,
	call	Perl_sv_eq	#
	testl	%eax, %eax	# D.24109
	je	.L968	#,
	.loc 1 2230 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.724
	jmp	.L969	#
.L968:
	.loc 1 2230 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.724
.L969:
	.loc 1 2230 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.724, *sp_18
	.loc 1 2231 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.725
	movq	(%rax), %rax	# PL_op.725_24->op_next, D.24107
.L967:
.LBE211:
	.loc 1 2233 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE49:
	.size	Perl_pp_seq, .-Perl_pp_seq
	.globl	Perl_pp_sne
	.type	Perl_pp_sne, @function
Perl_pp_sne:
.LFB50:
	.loc 1 2236 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2237 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.726
	testq	%rax, %rax	# PL_amagic_generation.726
	je	.L971	#,
.LBB212:
	.loc 1 2237 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_3, tmp73
	movq	%rax, -56(%rbp)	# tmp73, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_3 + -8B], tmp74
	movq	%rax, -48(%rbp)	# tmp74, left
	movq	-48(%rbp), %rax	# left, tmp75
	movl	12(%rax), %eax	# left_6->sv_flags, D.24111
	andl	$268435456, %eax	#, D.24111
	testl	%eax, %eax	# D.24111
	jne	.L972	#,
	.loc 1 2237 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp76
	movl	12(%rax), %eax	# right_5->sv_flags, D.24111
	andl	$268435456, %eax	#, D.24111
	testl	%eax, %eax	# D.24111
	je	.L971	#,
.L972:
	.loc 1 2237 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp77
	movq	-48(%rbp), %rax	# left, tmp78
	movl	$0, %ecx	#,
	movl	$41, %edx	#,
	movq	%rax, %rdi	# tmp78,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp79, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L971	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.727
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp80
	movq	%rax, (%rbx)	# tmp80, *sp_14
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.728
	movq	(%rax), %rax	# PL_op.728_15->op_next, D.24110
	jmp	.L973	#
.L971:
.LBE212:
.LBB213:
	.loc 1 2239 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.729
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.729_17, tmp81
	movq	%rax, -32(%rbp)	# tmp81, right
	movq	(%rbx), %rax	# *sp_18, tmp82
	movq	%rax, -24(%rbp)	# tmp82, left
	.loc 1 2240 0
	movq	-32(%rbp), %rdx	# right, tmp83
	movq	-24(%rbp), %rax	# left, tmp84
	movq	%rdx, %rsi	# tmp83,
	movq	%rax, %rdi	# tmp84,
	call	Perl_sv_eq	#
	testl	%eax, %eax	# D.24112
	jne	.L974	#,
	.loc 1 2240 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.730
	jmp	.L975	#
.L974:
	.loc 1 2240 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.730
.L975:
	.loc 1 2240 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.730, *sp_18
	.loc 1 2241 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.731
	movq	(%rax), %rax	# PL_op.731_24->op_next, D.24110
.L973:
.LBE213:
	.loc 1 2243 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE50:
	.size	Perl_pp_sne, .-Perl_pp_sne
	.globl	Perl_pp_scmp
	.type	Perl_pp_scmp, @function
Perl_pp_scmp:
.LFB51:
	.loc 1 2246 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2247 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.732
	movq	PL_op(%rip), %rax	# PL_op, PL_op.733
	movq	24(%rax), %rax	# PL_op.733_4->op_targ, D.24114
	salq	$3, %rax	#, D.24114
	addq	%rdx, %rax	# PL_curpad.732, D.24115
	movq	(%rax), %rax	# *_7, tmp89
	movq	%rax, -64(%rbp)	# tmp89, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.734
	testq	%rax, %rax	# PL_amagic_generation.734
	je	.L977	#,
.LBB214:
	.loc 1 2247 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_2, tmp90
	movq	%rax, -56(%rbp)	# tmp90, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_2 + -8B], tmp91
	movq	%rax, -48(%rbp)	# tmp91, left
	movq	-48(%rbp), %rax	# left, tmp92
	movl	12(%rax), %eax	# left_11->sv_flags, D.24116
	andl	$268435456, %eax	#, D.24116
	testl	%eax, %eax	# D.24116
	jne	.L978	#,
	.loc 1 2247 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp93
	movl	12(%rax), %eax	# right_10->sv_flags, D.24116
	andl	$268435456, %eax	#, D.24116
	testl	%eax, %eax	# D.24116
	je	.L977	#,
.L978:
	.loc 1 2247 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp94
	movq	-48(%rbp), %rax	# left, tmp95
	movl	$0, %ecx	#,
	movl	$35, %edx	#,
	movq	%rax, %rdi	# tmp95,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp96, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L977	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.735
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.736
	movzbl	36(%rax), %eax	# PL_op.736_20->op_flags, D.24117
	movzbl	%al, %eax	# D.24117, D.24118
	andl	$64, %eax	#, D.24118
	testl	%eax, %eax	# D.24118
	jne	.L979	#,
	.loc 1 2247 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp97
	movl	12(%rax), %eax	# targ_8->sv_flags, D.24116
	andl	$1024, %eax	#, D.24116
	testl	%eax, %eax	# D.24116
	je	.L980	#,
.L979:
	.loc 1 2247 0 discriminator 1
	movq	-40(%rbp), %rcx	# tmpsv, tmp98
	movq	-64(%rbp), %rax	# targ, tmp99
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp98,
	movq	%rax, %rdi	# tmp99,
	call	Perl_sv_setsv_flags	#
.LBB215:
	movq	-64(%rbp), %rax	# targ, tmp100
	movl	12(%rax), %eax	# targ_8->sv_flags, D.24116
	andl	$16384, %eax	#, D.24116
	testl	%eax, %eax	# D.24116
	je	.L981	#,
	movq	-64(%rbp), %rax	# targ, tmp101
	movq	%rax, %rdi	# tmp101,
	call	Perl_mg_set	#
.L981:
	.loc 1 2247 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp102
	movq	%rax, (%rbx)	# tmp102, *sp_19
.LBE215:
	jmp	.L982	#
.L980:
	.loc 1 2247 0 discriminator 1
	movq	-40(%rbp), %rax	# tmpsv, tmp103
	movq	%rax, (%rbx)	# tmp103, *sp_19
.L982:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.737
	movq	(%rax), %rax	# PL_op.737_29->op_next, D.24113
	jmp	.L983	#
.L977:
.LBE214:
.LBB216:
	.loc 1 2249 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.738
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.738_31, tmp104
	movq	%rax, -32(%rbp)	# tmp104, right
	movq	(%rbx), %rax	# *sp_32, tmp105
	movq	%rax, -24(%rbp)	# tmp105, left
	.loc 1 2250 0
	movq	-32(%rbp), %rdx	# right, tmp106
	movq	-24(%rbp), %rax	# left, tmp107
	movq	%rdx, %rsi	# tmp106,
	movq	%rax, %rdi	# tmp107,
	call	Perl_sv_cmp	#
	movl	%eax, -68(%rbp)	# tmp108, cmp
.LBB217:
	.loc 1 2253 0
	movl	-68(%rbp), %eax	# cmp, tmp109
	movslq	%eax, %rdx	# tmp109, D.24120
	movq	-64(%rbp), %rax	# targ, tmp110
	movq	%rdx, %rsi	# D.24120,
	movq	%rax, %rdi	# tmp110,
	call	Perl_sv_setiv	#
.LBB218:
	movq	-64(%rbp), %rax	# targ, tmp111
	movl	12(%rax), %eax	# targ_8->sv_flags, D.24116
	andl	$16384, %eax	#, D.24116
	testl	%eax, %eax	# D.24116
	je	.L984	#,
	.loc 1 2253 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp112
	movq	%rax, %rdi	# tmp112,
	call	Perl_mg_set	#
.L984:
	.loc 1 2253 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp113
	movq	%rax, (%rbx)	# tmp113, *sp_32
.LBE218:
.LBE217:
	.loc 1 2254 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.739
	movq	(%rax), %rax	# PL_op.739_40->op_next, D.24113
.L983:
.LBE216:
	.loc 1 2256 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE51:
	.size	Perl_pp_scmp, .-Perl_pp_scmp
	.globl	Perl_pp_bit_and
	.type	Perl_pp_bit_and, @function
Perl_pp_bit_and:
.LFB52:
	.loc 1 2259 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$64, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 2260 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.741
	movzbl	36(%rax), %eax	# PL_op.741_9->op_flags, D.24122
	movzbl	%al, %eax	# D.24122, D.24123
	andl	$64, %eax	#, D.24123
	testl	%eax, %eax	# D.24123
	je	.L986	#,
	.loc 1 2260 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_8 + -8B], iftmp.740
	jmp	.L987	#
.L986:
	.loc 1 2260 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.742
	movq	PL_op(%rip), %rax	# PL_op, PL_op.743
	movq	24(%rax), %rax	# PL_op.743_15->op_targ, D.24124
	salq	$3, %rax	#, D.24124
	addq	%rdx, %rax	# PL_curpad.742, D.24125
	movq	(%rax), %rax	# *_18, iftmp.740
.L987:
	.loc 1 2260 0 discriminator 3
	movq	%rax, -80(%rbp)	# iftmp.740, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.744
	testq	%rax, %rax	# PL_amagic_generation.744
	je	.L988	#,
.LBB219:
	.loc 1 2260 0 discriminator 1
	movq	(%rbx), %rax	# *sp_8, tmp131
	movq	%rax, -72(%rbp)	# tmp131, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_8 + -8B], tmp132
	movq	%rax, -64(%rbp)	# tmp132, left
	movq	-64(%rbp), %rax	# left, tmp133
	movl	12(%rax), %eax	# left_23->sv_flags, D.24126
	andl	$268435456, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	jne	.L989	#,
	.loc 1 2260 0 discriminator 2
	movq	-72(%rbp), %rax	# right, tmp134
	movl	12(%rax), %eax	# right_22->sv_flags, D.24126
	andl	$268435456, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L988	#,
.L989:
	.loc 1 2260 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.746
	movzbl	36(%rax), %eax	# PL_op.746_28->op_flags, D.24122
	movzbl	%al, %eax	# D.24122, D.24123
	andl	$64, %eax	#, D.24123
	testl	%eax, %eax	# D.24123
	je	.L990	#,
	movl	$4, %eax	#, iftmp.745
	jmp	.L991	#
.L990:
	.loc 1 2260 0 discriminator 2
	movl	$0, %eax	#, iftmp.745
.L991:
	.loc 1 2260 0 discriminator 3
	movq	-72(%rbp), %rsi	# right, tmp135
	movq	-64(%rbp), %rdi	# left, tmp136
	movl	%eax, %ecx	# iftmp.745,
	movl	$22, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -56(%rbp)	# tmp137, tmpsv
	cmpq	$0, -56(%rbp)	#, tmpsv
	je	.L988	#,
	.loc 1 2260 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.747
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.748
	movzbl	36(%rax), %eax	# PL_op.748_38->op_flags, D.24122
	movzbl	%al, %eax	# D.24122, D.24123
	andl	$64, %eax	#, D.24123
	testl	%eax, %eax	# D.24123
	jne	.L992	#,
	.loc 1 2260 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp138
	movl	12(%rax), %eax	# targ_20->sv_flags, D.24126
	andl	$1024, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L993	#,
.L992:
	.loc 1 2260 0 discriminator 1
	movq	-56(%rbp), %rcx	# tmpsv, tmp139
	movq	-80(%rbp), %rax	# targ, tmp140
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp139,
	movq	%rax, %rdi	# tmp140,
	call	Perl_sv_setsv_flags	#
.LBB220:
	movq	-80(%rbp), %rax	# targ, tmp141
	movl	12(%rax), %eax	# targ_20->sv_flags, D.24126
	andl	$16384, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L994	#,
	movq	-80(%rbp), %rax	# targ, tmp142
	movq	%rax, %rdi	# tmp142,
	call	Perl_mg_set	#
.L994:
	.loc 1 2260 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp143
	movq	%rax, (%rbx)	# tmp143, *sp_37
.LBE220:
	jmp	.L995	#
.L993:
	.loc 1 2260 0 discriminator 1
	movq	-56(%rbp), %rax	# tmpsv, tmp144
	movq	%rax, (%rbx)	# tmp144, *sp_37
.L995:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.749
	movq	(%rax), %rax	# PL_op.749_47->op_next, D.24121
	jmp	.L996	#
.L988:
.LBE219:
.LBB221:
	.loc 1 2262 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.750
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.750_49, tmp145
	movq	%rax, -48(%rbp)	# tmp145, right
	movq	(%rbx), %rax	# *sp_50, tmp146
	movq	%rax, -40(%rbp)	# tmp146, left
	.loc 1 2263 0
	movq	-40(%rbp), %rax	# left, tmp147
	movl	12(%rax), %eax	# left_52->sv_flags, D.24126
	andl	$50331648, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	jne	.L997	#,
	.loc 1 2263 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# right, tmp148
	movl	12(%rax), %eax	# right_51->sv_flags, D.24126
	andl	$50331648, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L998	#,
.L997:
	.loc 1 2264 0 is_stmt 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.751
	movzbl	37(%rax), %eax	# PL_op.751_63->op_private, D.24122
	movzbl	%al, %eax	# D.24122, D.24123
	andl	$1, %eax	#, D.24123
	testl	%eax, %eax	# D.24123
	je	.L999	#,
.LBB222:
	.loc 1 2265 0
	movq	-40(%rbp), %rax	# left, tmp149
	movl	12(%rax), %eax	# left_52->sv_flags, D.24126
	andl	$65536, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L1000	#,
	.loc 1 2265 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# left, tmp150
	movq	(%rax), %rax	# left_52->sv_any, D.24129
	movq	24(%rax), %r12	# MEM[(struct XPVIV *)_69].xiv_iv, iftmp.752
	jmp	.L1001	#
.L1000:
	.loc 1 2265 0 discriminator 2
	movq	-40(%rbp), %rax	# left, tmp151
	movq	%rax, %rdi	# tmp151,
	call	Perl_sv_2iv	#
	movq	%rax, %r12	#, iftmp.752
.L1001:
	.loc 1 2265 0 discriminator 3
	movq	-48(%rbp), %rax	# right, tmp152
	movl	12(%rax), %eax	# right_51->sv_flags, D.24126
	andl	$65536, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L1002	#,
	.loc 1 2265 0 discriminator 1
	movq	-48(%rbp), %rax	# right, tmp153
	movq	(%rax), %rax	# right_51->sv_any, D.24129
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_74].xiv_iv, iftmp.753
	jmp	.L1003	#
.L1002:
	.loc 1 2265 0 discriminator 2
	movq	-48(%rbp), %rax	# right, tmp154
	movq	%rax, %rdi	# tmp154,
	call	Perl_sv_2iv	#
.L1003:
	.loc 1 2265 0 discriminator 3
	andq	%r12, %rax	# iftmp.752, tmp155
	movq	%rax, -32(%rbp)	# tmp155, i
.LBB223:
	.loc 1 2266 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rdx	# i, tmp156
	movq	-80(%rbp), %rax	# targ, tmp157
	movq	%rdx, %rsi	# tmp156,
	movq	%rax, %rdi	# tmp157,
	call	Perl_sv_setiv	#
.LBB224:
	movq	-80(%rbp), %rax	# targ, tmp158
	movl	12(%rax), %eax	# targ_20->sv_flags, D.24126
	andl	$16384, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L1004	#,
	.loc 1 2266 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# targ, tmp159
	movq	%rax, %rdi	# tmp159,
	call	Perl_mg_set	#
.L1004:
	.loc 1 2266 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp160
	movq	%rax, (%rbx)	# tmp160, *sp_50
.LBE224:
.LBE223:
.LBE222:
	.loc 1 2264 0 is_stmt 1 discriminator 2
	jmp	.L1011	#
.L999:
.LBB225:
	.loc 1 2269 0
	movq	-40(%rbp), %rax	# left, tmp161
	movl	12(%rax), %eax	# left_52->sv_flags, D.24126
	andl	$65536, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L1006	#,
	.loc 1 2269 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# left, tmp162
	movq	(%rax), %rax	# left_52->sv_any, D.24129
	movq	24(%rax), %r12	# MEM[(struct XPVUV *)_83].xuv_uv, iftmp.754
	jmp	.L1007	#
.L1006:
	.loc 1 2269 0 discriminator 2
	movq	-40(%rbp), %rax	# left, tmp163
	movq	%rax, %rdi	# tmp163,
	call	Perl_sv_2uv	#
	movq	%rax, %r12	#, iftmp.754
.L1007:
	.loc 1 2269 0 discriminator 3
	movq	-48(%rbp), %rax	# right, tmp164
	movl	12(%rax), %eax	# right_51->sv_flags, D.24126
	andl	$65536, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L1008	#,
	.loc 1 2269 0 discriminator 1
	movq	-48(%rbp), %rax	# right, tmp165
	movq	(%rax), %rax	# right_51->sv_any, D.24129
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_88].xuv_uv, iftmp.755
	jmp	.L1009	#
.L1008:
	.loc 1 2269 0 discriminator 2
	movq	-48(%rbp), %rax	# right, tmp166
	movq	%rax, %rdi	# tmp166,
	call	Perl_sv_2uv	#
.L1009:
	.loc 1 2269 0 discriminator 3
	andq	%r12, %rax	# iftmp.754, tmp167
	movq	%rax, -24(%rbp)	# tmp167, u
.LBB226:
	.loc 1 2270 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rdx	# u, tmp168
	movq	-80(%rbp), %rax	# targ, tmp169
	movq	%rdx, %rsi	# tmp168,
	movq	%rax, %rdi	# tmp169,
	call	Perl_sv_setuv	#
.LBB227:
	movq	-80(%rbp), %rax	# targ, tmp170
	movl	12(%rax), %eax	# targ_20->sv_flags, D.24126
	andl	$16384, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L1010	#,
	.loc 1 2270 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# targ, tmp171
	movq	%rax, %rdi	# tmp171,
	call	Perl_mg_set	#
.L1010:
	.loc 1 2270 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp172
	movq	%rax, (%rbx)	# tmp172, *sp_50
.LBE227:
.LBE226:
.LBE225:
	.loc 1 2264 0 is_stmt 1 discriminator 2
	jmp	.L1011	#
.L998:
	.loc 1 2274 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.756
	movzwl	32(%rax), %eax	# PL_op.756_57->op_type, D.24128
	movzwl	%ax, %eax	# D.24128, D.24123
	movq	-48(%rbp), %rcx	# right, tmp173
	movq	-40(%rbp), %rdx	# left, tmp174
	movq	-80(%rbp), %rsi	# targ, tmp175
	movl	%eax, %edi	# D.24123,
	call	Perl_do_vop	#
.LBB228:
	.loc 1 2275 0
	movq	-80(%rbp), %rax	# targ, tmp176
	movl	12(%rax), %eax	# targ_20->sv_flags, D.24126
	andl	$16384, %eax	#, D.24126
	testl	%eax, %eax	# D.24126
	je	.L1012	#,
	.loc 1 2275 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# targ, tmp177
	movq	%rax, %rdi	# tmp177,
	call	Perl_mg_set	#
.L1012:
	.loc 1 2275 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp178
	movq	%rax, (%rbx)	# tmp178, *sp_50
.L1011:
.LBE228:
	.loc 1 2277 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.757
	movq	(%rax), %rax	# PL_op.757_95->op_next, D.24121
.L996:
.LBE221:
	.loc 1 2279 0
	addq	$64, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE52:
	.size	Perl_pp_bit_and, .-Perl_pp_bit_and
	.globl	Perl_pp_bit_xor
	.type	Perl_pp_bit_xor, @function
Perl_pp_bit_xor:
.LFB53:
	.loc 1 2282 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$64, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 2283 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.759
	movzbl	36(%rax), %eax	# PL_op.759_11->op_flags, D.24131
	movzbl	%al, %eax	# D.24131, D.24132
	andl	$64, %eax	#, D.24132
	testl	%eax, %eax	# D.24132
	je	.L1014	#,
	.loc 1 2283 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_10 + -8B], iftmp.758
	jmp	.L1015	#
.L1014:
	.loc 1 2283 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.760
	movq	PL_op(%rip), %rax	# PL_op, PL_op.761
	movq	24(%rax), %rax	# PL_op.761_17->op_targ, D.24133
	salq	$3, %rax	#, D.24133
	addq	%rdx, %rax	# PL_curpad.760, D.24134
	movq	(%rax), %rax	# *_20, iftmp.758
.L1015:
	.loc 1 2283 0 discriminator 3
	movq	%rax, -80(%rbp)	# iftmp.758, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.762
	testq	%rax, %rax	# PL_amagic_generation.762
	je	.L1016	#,
.LBB229:
	.loc 1 2283 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, tmp149
	movq	%rax, -72(%rbp)	# tmp149, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_10 + -8B], tmp150
	movq	%rax, -64(%rbp)	# tmp150, left
	movq	-64(%rbp), %rax	# left, tmp151
	movl	12(%rax), %eax	# left_25->sv_flags, D.24135
	andl	$268435456, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	jne	.L1017	#,
	.loc 1 2283 0 discriminator 2
	movq	-72(%rbp), %rax	# right, tmp152
	movl	12(%rax), %eax	# right_24->sv_flags, D.24135
	andl	$268435456, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1016	#,
.L1017:
	.loc 1 2283 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.764
	movzbl	36(%rax), %eax	# PL_op.764_30->op_flags, D.24131
	movzbl	%al, %eax	# D.24131, D.24132
	andl	$64, %eax	#, D.24132
	testl	%eax, %eax	# D.24132
	je	.L1018	#,
	movl	$4, %eax	#, iftmp.763
	jmp	.L1019	#
.L1018:
	.loc 1 2283 0 discriminator 2
	movl	$0, %eax	#, iftmp.763
.L1019:
	.loc 1 2283 0 discriminator 3
	movq	-72(%rbp), %rsi	# right, tmp153
	movq	-64(%rbp), %rdi	# left, tmp154
	movl	%eax, %ecx	# iftmp.763,
	movl	$26, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -56(%rbp)	# tmp155, tmpsv
	cmpq	$0, -56(%rbp)	#, tmpsv
	je	.L1016	#,
	.loc 1 2283 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.765
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.766
	movzbl	36(%rax), %eax	# PL_op.766_40->op_flags, D.24131
	movzbl	%al, %eax	# D.24131, D.24132
	andl	$64, %eax	#, D.24132
	testl	%eax, %eax	# D.24132
	jne	.L1020	#,
	.loc 1 2283 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp156
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24135
	andl	$1024, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1021	#,
.L1020:
	.loc 1 2283 0 discriminator 1
	movq	-56(%rbp), %rcx	# tmpsv, tmp157
	movq	-80(%rbp), %rax	# targ, tmp158
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp157,
	movq	%rax, %rdi	# tmp158,
	call	Perl_sv_setsv_flags	#
.LBB230:
	movq	-80(%rbp), %rax	# targ, tmp159
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24135
	andl	$16384, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1022	#,
	movq	-80(%rbp), %rax	# targ, tmp160
	movq	%rax, %rdi	# tmp160,
	call	Perl_mg_set	#
.L1022:
	.loc 1 2283 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp161
	movq	%rax, (%rbx)	# tmp161, *sp_39
.LBE230:
	jmp	.L1023	#
.L1021:
	.loc 1 2283 0 discriminator 1
	movq	-56(%rbp), %rax	# tmpsv, tmp162
	movq	%rax, (%rbx)	# tmp162, *sp_39
.L1023:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.767
	movq	(%rax), %rax	# PL_op.767_49->op_next, D.24130
	jmp	.L1024	#
.L1016:
.LBE229:
.LBB231:
	.loc 1 2285 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.768
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.768_51, tmp163
	movq	%rax, -48(%rbp)	# tmp163, right
	movq	(%rbx), %rax	# *sp_52, tmp164
	movq	%rax, -40(%rbp)	# tmp164, left
	.loc 1 2286 0
	movq	-40(%rbp), %rax	# left, tmp165
	movl	12(%rax), %eax	# left_54->sv_flags, D.24135
	andl	$50331648, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	jne	.L1025	#,
	.loc 1 2286 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# right, tmp166
	movl	12(%rax), %eax	# right_53->sv_flags, D.24135
	andl	$50331648, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1026	#,
.L1025:
	.loc 1 2287 0 is_stmt 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.769
	movzbl	37(%rax), %eax	# PL_op.769_65->op_private, D.24131
	movzbl	%al, %eax	# D.24131, D.24132
	andl	$1, %eax	#, D.24132
	testl	%eax, %eax	# D.24132
	je	.L1027	#,
.LBB232:
	.loc 1 2288 0
	movq	-40(%rbp), %rax	# left, tmp167
	movl	12(%rax), %eax	# left_54->sv_flags, D.24135
	andl	$118423552, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	jne	.L1028	#,
	.loc 1 2288 0 is_stmt 0 discriminator 2
	movq	-40(%rbp), %rax	# left, tmp168
	movl	12(%rax), %eax	# left_54->sv_flags, D.24135
	andl	$8192, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	jne	.L1028	#,
	.loc 1 2288 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.771
	movzbl	36(%rax), %eax	# PL_op.771_73->op_flags, D.24131
	movzbl	%al, %eax	# D.24131, D.24132
	andl	$64, %eax	#, D.24132
	testl	%eax, %eax	# D.24132
	jne	.L1029	#,
.L1028:
	movq	-40(%rbp), %rax	# left, tmp169
	movl	12(%rax), %eax	# left_54->sv_flags, D.24135
	andl	$65536, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1030	#,
	movq	-40(%rbp), %rax	# left, tmp170
	movq	(%rax), %rax	# left_54->sv_any, D.24138
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_80].xiv_iv, iftmp.772
	jmp	.L1031	#
.L1030:
	.loc 1 2288 0 discriminator 2
	movq	-40(%rbp), %rax	# left, tmp171
	movq	%rax, %rdi	# tmp171,
	call	Perl_sv_2iv	#
.L1031:
	.loc 1 2288 0 discriminator 3
	movq	%rax, %r12	# iftmp.772, iftmp.770
	jmp	.L1032	#
.L1029:
	.loc 1 2288 0 discriminator 1
	movl	$0, %r12d	#, iftmp.770
.L1032:
	.loc 1 2288 0 discriminator 3
	movq	-48(%rbp), %rax	# right, tmp172
	movl	12(%rax), %eax	# right_53->sv_flags, D.24135
	andl	$65536, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1033	#,
	.loc 1 2288 0 discriminator 1
	movq	-48(%rbp), %rax	# right, tmp173
	movq	(%rax), %rax	# right_53->sv_any, D.24138
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_86].xiv_iv, iftmp.773
	jmp	.L1034	#
.L1033:
	.loc 1 2288 0 discriminator 2
	movq	-48(%rbp), %rax	# right, tmp174
	movq	%rax, %rdi	# tmp174,
	call	Perl_sv_2iv	#
.L1034:
	.loc 1 2288 0 discriminator 3
	xorq	%r12, %rax	# iftmp.770, tmp175
	movq	%rax, -32(%rbp)	# tmp175, i
.LBB233:
	.loc 1 2289 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rdx	# i, tmp176
	movq	-80(%rbp), %rax	# targ, tmp177
	movq	%rdx, %rsi	# tmp176,
	movq	%rax, %rdi	# tmp177,
	call	Perl_sv_setiv	#
.LBB234:
	movq	-80(%rbp), %rax	# targ, tmp178
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24135
	andl	$16384, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1035	#,
	.loc 1 2289 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# targ, tmp179
	movq	%rax, %rdi	# tmp179,
	call	Perl_mg_set	#
.L1035:
	.loc 1 2289 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp180
	movq	%rax, (%rbx)	# tmp180, *sp_52
.LBE234:
.LBE233:
.LBE232:
	.loc 1 2287 0 is_stmt 1 discriminator 2
	jmp	.L1045	#
.L1027:
.LBB235:
	.loc 1 2292 0
	movq	-40(%rbp), %rax	# left, tmp181
	movl	12(%rax), %eax	# left_54->sv_flags, D.24135
	andl	$118423552, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	jne	.L1037	#,
	.loc 1 2292 0 is_stmt 0 discriminator 2
	movq	-40(%rbp), %rax	# left, tmp182
	movl	12(%rax), %eax	# left_54->sv_flags, D.24135
	andl	$8192, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	jne	.L1037	#,
	.loc 1 2292 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.775
	movzbl	36(%rax), %eax	# PL_op.775_97->op_flags, D.24131
	movzbl	%al, %eax	# D.24131, D.24132
	andl	$64, %eax	#, D.24132
	testl	%eax, %eax	# D.24132
	jne	.L1038	#,
.L1037:
	movq	-40(%rbp), %rax	# left, tmp183
	movl	12(%rax), %eax	# left_54->sv_flags, D.24135
	andl	$65536, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1039	#,
	movq	-40(%rbp), %rax	# left, tmp184
	movq	(%rax), %rax	# left_54->sv_any, D.24138
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_104].xuv_uv, iftmp.776
	jmp	.L1040	#
.L1039:
	.loc 1 2292 0 discriminator 2
	movq	-40(%rbp), %rax	# left, tmp185
	movq	%rax, %rdi	# tmp185,
	call	Perl_sv_2uv	#
.L1040:
	.loc 1 2292 0 discriminator 3
	movq	%rax, %r12	# iftmp.776, iftmp.774
	jmp	.L1041	#
.L1038:
	.loc 1 2292 0 discriminator 1
	movl	$0, %r12d	#, iftmp.774
.L1041:
	.loc 1 2292 0 discriminator 3
	movq	-48(%rbp), %rax	# right, tmp186
	movl	12(%rax), %eax	# right_53->sv_flags, D.24135
	andl	$65536, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1042	#,
	.loc 1 2292 0 discriminator 1
	movq	-48(%rbp), %rax	# right, tmp187
	movq	(%rax), %rax	# right_53->sv_any, D.24138
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_110].xuv_uv, iftmp.777
	jmp	.L1043	#
.L1042:
	.loc 1 2292 0 discriminator 2
	movq	-48(%rbp), %rax	# right, tmp188
	movq	%rax, %rdi	# tmp188,
	call	Perl_sv_2uv	#
.L1043:
	.loc 1 2292 0 discriminator 3
	xorq	%r12, %rax	# iftmp.774, tmp189
	movq	%rax, -24(%rbp)	# tmp189, u
.LBB236:
	.loc 1 2293 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rdx	# u, tmp190
	movq	-80(%rbp), %rax	# targ, tmp191
	movq	%rdx, %rsi	# tmp190,
	movq	%rax, %rdi	# tmp191,
	call	Perl_sv_setuv	#
.LBB237:
	movq	-80(%rbp), %rax	# targ, tmp192
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24135
	andl	$16384, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1044	#,
	.loc 1 2293 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# targ, tmp193
	movq	%rax, %rdi	# tmp193,
	call	Perl_mg_set	#
.L1044:
	.loc 1 2293 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp194
	movq	%rax, (%rbx)	# tmp194, *sp_52
.LBE237:
.LBE236:
.LBE235:
	.loc 1 2287 0 is_stmt 1 discriminator 2
	jmp	.L1045	#
.L1026:
	.loc 1 2297 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.778
	movzwl	32(%rax), %eax	# PL_op.778_59->op_type, D.24137
	movzwl	%ax, %eax	# D.24137, D.24132
	movq	-48(%rbp), %rcx	# right, tmp195
	movq	-40(%rbp), %rdx	# left, tmp196
	movq	-80(%rbp), %rsi	# targ, tmp197
	movl	%eax, %edi	# D.24132,
	call	Perl_do_vop	#
.LBB238:
	.loc 1 2298 0
	movq	-80(%rbp), %rax	# targ, tmp198
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24135
	andl	$16384, %eax	#, D.24135
	testl	%eax, %eax	# D.24135
	je	.L1046	#,
	.loc 1 2298 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# targ, tmp199
	movq	%rax, %rdi	# tmp199,
	call	Perl_mg_set	#
.L1046:
	.loc 1 2298 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp200
	movq	%rax, (%rbx)	# tmp200, *sp_52
.L1045:
.LBE238:
	.loc 1 2300 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.779
	movq	(%rax), %rax	# PL_op.779_117->op_next, D.24130
.L1024:
.LBE231:
	.loc 1 2302 0
	addq	$64, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE53:
	.size	Perl_pp_bit_xor, .-Perl_pp_bit_xor
	.globl	Perl_pp_bit_or
	.type	Perl_pp_bit_or, @function
Perl_pp_bit_or:
.LFB54:
	.loc 1 2305 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$64, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 2306 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.781
	movzbl	36(%rax), %eax	# PL_op.781_11->op_flags, D.24140
	movzbl	%al, %eax	# D.24140, D.24141
	andl	$64, %eax	#, D.24141
	testl	%eax, %eax	# D.24141
	je	.L1048	#,
	.loc 1 2306 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_10 + -8B], iftmp.780
	jmp	.L1049	#
.L1048:
	.loc 1 2306 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.782
	movq	PL_op(%rip), %rax	# PL_op, PL_op.783
	movq	24(%rax), %rax	# PL_op.783_17->op_targ, D.24142
	salq	$3, %rax	#, D.24142
	addq	%rdx, %rax	# PL_curpad.782, D.24143
	movq	(%rax), %rax	# *_20, iftmp.780
.L1049:
	.loc 1 2306 0 discriminator 3
	movq	%rax, -80(%rbp)	# iftmp.780, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.784
	testq	%rax, %rax	# PL_amagic_generation.784
	je	.L1050	#,
.LBB239:
	.loc 1 2306 0 discriminator 1
	movq	(%rbx), %rax	# *sp_10, tmp149
	movq	%rax, -72(%rbp)	# tmp149, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_10 + -8B], tmp150
	movq	%rax, -64(%rbp)	# tmp150, left
	movq	-64(%rbp), %rax	# left, tmp151
	movl	12(%rax), %eax	# left_25->sv_flags, D.24144
	andl	$268435456, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	jne	.L1051	#,
	.loc 1 2306 0 discriminator 2
	movq	-72(%rbp), %rax	# right, tmp152
	movl	12(%rax), %eax	# right_24->sv_flags, D.24144
	andl	$268435456, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1050	#,
.L1051:
	.loc 1 2306 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.786
	movzbl	36(%rax), %eax	# PL_op.786_30->op_flags, D.24140
	movzbl	%al, %eax	# D.24140, D.24141
	andl	$64, %eax	#, D.24141
	testl	%eax, %eax	# D.24141
	je	.L1052	#,
	movl	$4, %eax	#, iftmp.785
	jmp	.L1053	#
.L1052:
	.loc 1 2306 0 discriminator 2
	movl	$0, %eax	#, iftmp.785
.L1053:
	.loc 1 2306 0 discriminator 3
	movq	-72(%rbp), %rsi	# right, tmp153
	movq	-64(%rbp), %rdi	# left, tmp154
	movl	%eax, %ecx	# iftmp.785,
	movl	$24, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -56(%rbp)	# tmp155, tmpsv
	cmpq	$0, -56(%rbp)	#, tmpsv
	je	.L1050	#,
	.loc 1 2306 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.787
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.788
	movzbl	36(%rax), %eax	# PL_op.788_40->op_flags, D.24140
	movzbl	%al, %eax	# D.24140, D.24141
	andl	$64, %eax	#, D.24141
	testl	%eax, %eax	# D.24141
	jne	.L1054	#,
	.loc 1 2306 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp156
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24144
	andl	$1024, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1055	#,
.L1054:
	.loc 1 2306 0 discriminator 1
	movq	-56(%rbp), %rcx	# tmpsv, tmp157
	movq	-80(%rbp), %rax	# targ, tmp158
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp157,
	movq	%rax, %rdi	# tmp158,
	call	Perl_sv_setsv_flags	#
.LBB240:
	movq	-80(%rbp), %rax	# targ, tmp159
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24144
	andl	$16384, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1056	#,
	movq	-80(%rbp), %rax	# targ, tmp160
	movq	%rax, %rdi	# tmp160,
	call	Perl_mg_set	#
.L1056:
	.loc 1 2306 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp161
	movq	%rax, (%rbx)	# tmp161, *sp_39
.LBE240:
	jmp	.L1057	#
.L1055:
	.loc 1 2306 0 discriminator 1
	movq	-56(%rbp), %rax	# tmpsv, tmp162
	movq	%rax, (%rbx)	# tmp162, *sp_39
.L1057:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.789
	movq	(%rax), %rax	# PL_op.789_49->op_next, D.24139
	jmp	.L1058	#
.L1050:
.LBE239:
.LBB241:
	.loc 1 2308 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.790
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.790_51, tmp163
	movq	%rax, -48(%rbp)	# tmp163, right
	movq	(%rbx), %rax	# *sp_52, tmp164
	movq	%rax, -40(%rbp)	# tmp164, left
	.loc 1 2309 0
	movq	-40(%rbp), %rax	# left, tmp165
	movl	12(%rax), %eax	# left_54->sv_flags, D.24144
	andl	$50331648, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	jne	.L1059	#,
	.loc 1 2309 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# right, tmp166
	movl	12(%rax), %eax	# right_53->sv_flags, D.24144
	andl	$50331648, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1060	#,
.L1059:
	.loc 1 2310 0 is_stmt 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.791
	movzbl	37(%rax), %eax	# PL_op.791_65->op_private, D.24140
	movzbl	%al, %eax	# D.24140, D.24141
	andl	$1, %eax	#, D.24141
	testl	%eax, %eax	# D.24141
	je	.L1061	#,
.LBB242:
	.loc 1 2311 0
	movq	-40(%rbp), %rax	# left, tmp167
	movl	12(%rax), %eax	# left_54->sv_flags, D.24144
	andl	$118423552, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	jne	.L1062	#,
	.loc 1 2311 0 is_stmt 0 discriminator 2
	movq	-40(%rbp), %rax	# left, tmp168
	movl	12(%rax), %eax	# left_54->sv_flags, D.24144
	andl	$8192, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	jne	.L1062	#,
	.loc 1 2311 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.793
	movzbl	36(%rax), %eax	# PL_op.793_73->op_flags, D.24140
	movzbl	%al, %eax	# D.24140, D.24141
	andl	$64, %eax	#, D.24141
	testl	%eax, %eax	# D.24141
	jne	.L1063	#,
.L1062:
	movq	-40(%rbp), %rax	# left, tmp169
	movl	12(%rax), %eax	# left_54->sv_flags, D.24144
	andl	$65536, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1064	#,
	movq	-40(%rbp), %rax	# left, tmp170
	movq	(%rax), %rax	# left_54->sv_any, D.24147
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_80].xiv_iv, iftmp.794
	jmp	.L1065	#
.L1064:
	.loc 1 2311 0 discriminator 2
	movq	-40(%rbp), %rax	# left, tmp171
	movq	%rax, %rdi	# tmp171,
	call	Perl_sv_2iv	#
.L1065:
	.loc 1 2311 0 discriminator 3
	movq	%rax, %r12	# iftmp.794, iftmp.792
	jmp	.L1066	#
.L1063:
	.loc 1 2311 0 discriminator 1
	movl	$0, %r12d	#, iftmp.792
.L1066:
	.loc 1 2311 0 discriminator 3
	movq	-48(%rbp), %rax	# right, tmp172
	movl	12(%rax), %eax	# right_53->sv_flags, D.24144
	andl	$65536, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1067	#,
	.loc 1 2311 0 discriminator 1
	movq	-48(%rbp), %rax	# right, tmp173
	movq	(%rax), %rax	# right_53->sv_any, D.24147
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_86].xiv_iv, iftmp.795
	jmp	.L1068	#
.L1067:
	.loc 1 2311 0 discriminator 2
	movq	-48(%rbp), %rax	# right, tmp174
	movq	%rax, %rdi	# tmp174,
	call	Perl_sv_2iv	#
.L1068:
	.loc 1 2311 0 discriminator 3
	orq	%r12, %rax	# iftmp.792, tmp175
	movq	%rax, -32(%rbp)	# tmp175, i
.LBB243:
	.loc 1 2312 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rdx	# i, tmp176
	movq	-80(%rbp), %rax	# targ, tmp177
	movq	%rdx, %rsi	# tmp176,
	movq	%rax, %rdi	# tmp177,
	call	Perl_sv_setiv	#
.LBB244:
	movq	-80(%rbp), %rax	# targ, tmp178
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24144
	andl	$16384, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1069	#,
	.loc 1 2312 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# targ, tmp179
	movq	%rax, %rdi	# tmp179,
	call	Perl_mg_set	#
.L1069:
	.loc 1 2312 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp180
	movq	%rax, (%rbx)	# tmp180, *sp_52
.LBE244:
.LBE243:
.LBE242:
	.loc 1 2310 0 is_stmt 1 discriminator 2
	jmp	.L1079	#
.L1061:
.LBB245:
	.loc 1 2315 0
	movq	-40(%rbp), %rax	# left, tmp181
	movl	12(%rax), %eax	# left_54->sv_flags, D.24144
	andl	$118423552, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	jne	.L1071	#,
	.loc 1 2315 0 is_stmt 0 discriminator 2
	movq	-40(%rbp), %rax	# left, tmp182
	movl	12(%rax), %eax	# left_54->sv_flags, D.24144
	andl	$8192, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	jne	.L1071	#,
	.loc 1 2315 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.797
	movzbl	36(%rax), %eax	# PL_op.797_97->op_flags, D.24140
	movzbl	%al, %eax	# D.24140, D.24141
	andl	$64, %eax	#, D.24141
	testl	%eax, %eax	# D.24141
	jne	.L1072	#,
.L1071:
	movq	-40(%rbp), %rax	# left, tmp183
	movl	12(%rax), %eax	# left_54->sv_flags, D.24144
	andl	$65536, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1073	#,
	movq	-40(%rbp), %rax	# left, tmp184
	movq	(%rax), %rax	# left_54->sv_any, D.24147
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_104].xuv_uv, iftmp.798
	jmp	.L1074	#
.L1073:
	.loc 1 2315 0 discriminator 2
	movq	-40(%rbp), %rax	# left, tmp185
	movq	%rax, %rdi	# tmp185,
	call	Perl_sv_2uv	#
.L1074:
	.loc 1 2315 0 discriminator 3
	movq	%rax, %r12	# iftmp.798, iftmp.796
	jmp	.L1075	#
.L1072:
	.loc 1 2315 0 discriminator 1
	movl	$0, %r12d	#, iftmp.796
.L1075:
	.loc 1 2315 0 discriminator 3
	movq	-48(%rbp), %rax	# right, tmp186
	movl	12(%rax), %eax	# right_53->sv_flags, D.24144
	andl	$65536, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1076	#,
	.loc 1 2315 0 discriminator 1
	movq	-48(%rbp), %rax	# right, tmp187
	movq	(%rax), %rax	# right_53->sv_any, D.24147
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_110].xuv_uv, iftmp.799
	jmp	.L1077	#
.L1076:
	.loc 1 2315 0 discriminator 2
	movq	-48(%rbp), %rax	# right, tmp188
	movq	%rax, %rdi	# tmp188,
	call	Perl_sv_2uv	#
.L1077:
	.loc 1 2315 0 discriminator 3
	orq	%r12, %rax	# iftmp.796, tmp189
	movq	%rax, -24(%rbp)	# tmp189, u
.LBB246:
	.loc 1 2316 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rdx	# u, tmp190
	movq	-80(%rbp), %rax	# targ, tmp191
	movq	%rdx, %rsi	# tmp190,
	movq	%rax, %rdi	# tmp191,
	call	Perl_sv_setuv	#
.LBB247:
	movq	-80(%rbp), %rax	# targ, tmp192
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24144
	andl	$16384, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1078	#,
	.loc 1 2316 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# targ, tmp193
	movq	%rax, %rdi	# tmp193,
	call	Perl_mg_set	#
.L1078:
	.loc 1 2316 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp194
	movq	%rax, (%rbx)	# tmp194, *sp_52
.LBE247:
.LBE246:
.LBE245:
	.loc 1 2310 0 is_stmt 1 discriminator 2
	jmp	.L1079	#
.L1060:
	.loc 1 2320 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.800
	movzwl	32(%rax), %eax	# PL_op.800_59->op_type, D.24146
	movzwl	%ax, %eax	# D.24146, D.24141
	movq	-48(%rbp), %rcx	# right, tmp195
	movq	-40(%rbp), %rdx	# left, tmp196
	movq	-80(%rbp), %rsi	# targ, tmp197
	movl	%eax, %edi	# D.24141,
	call	Perl_do_vop	#
.LBB248:
	.loc 1 2321 0
	movq	-80(%rbp), %rax	# targ, tmp198
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24144
	andl	$16384, %eax	#, D.24144
	testl	%eax, %eax	# D.24144
	je	.L1080	#,
	.loc 1 2321 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# targ, tmp199
	movq	%rax, %rdi	# tmp199,
	call	Perl_mg_set	#
.L1080:
	.loc 1 2321 0 discriminator 2
	movq	-80(%rbp), %rax	# targ, tmp200
	movq	%rax, (%rbx)	# tmp200, *sp_52
.L1079:
.LBE248:
	.loc 1 2323 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.801
	movq	(%rax), %rax	# PL_op.801_117->op_next, D.24139
.L1058:
.LBE241:
	.loc 1 2325 0
	addq	$64, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE54:
	.size	Perl_pp_bit_or, .-Perl_pp_bit_or
	.section	.rodata
.LC36:
	.string	"-"
	.text
	.globl	Perl_pp_negate
	.type	Perl_pp_negate, @function
Perl_pp_negate:
.LFB55:
	.loc 1 2328 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2329 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.802
	movq	PL_op(%rip), %rax	# PL_op, PL_op.803
	movq	24(%rax), %rax	# PL_op.803_11->op_targ, D.24149
	salq	$3, %rax	#, D.24149
	addq	%rdx, %rax	# PL_curpad.802, D.24150
	movq	(%rax), %rax	# *_14, tmp207
	movq	%rax, -56(%rbp)	# tmp207, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.804
	testq	%rax, %rax	# PL_amagic_generation.804
	je	.L1082	#,
.LBB249:
	.loc 1 2329 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_9, tmp208
	movq	%rax, -48(%rbp)	# tmp208, arg
.L1083:
	movq	-48(%rbp), %rax	# arg, tmp209
	movl	12(%rax), %eax	# arg_17->sv_flags, D.24151
	andl	$268435456, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1082	#,
	movq	-48(%rbp), %rax	# arg, tmp210
	movl	$9, %ecx	#,
	movl	$57, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp210,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp211, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1082	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-56(%rbp), %rax	# targ, tmp212
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24151
	andl	$1024, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1084	#,
	movq	-40(%rbp), %rcx	# tmpsv, tmp213
	movq	-56(%rbp), %rax	# targ, tmp214
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp213,
	movq	%rax, %rdi	# tmp214,
	call	Perl_sv_setsv_flags	#
.LBB250:
	movq	-56(%rbp), %rax	# targ, tmp215
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24151
	andl	$16384, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1085	#,
	movq	-56(%rbp), %rax	# targ, tmp216
	movq	%rax, %rdi	# tmp216,
	call	Perl_mg_set	#
.L1085:
	.loc 1 2329 0 discriminator 2
	movq	-56(%rbp), %rax	# targ, tmp217
	movq	%rax, (%rbx)	# tmp217, *sp_21
.LBE250:
	jmp	.L1086	#
.L1084:
	movq	-40(%rbp), %rax	# tmpsv, tmp218
	movq	%rax, (%rbx)	# tmp218, *sp_21
.L1086:
	.loc 1 2329 0 discriminator 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.805
	movq	(%rax), %rax	# PL_op.805_27->op_next, D.24148
	jmp	.L1087	#
.L1082:
.LBE249:
.LBB251:
	.loc 1 2331 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_9, tmp219
	movq	%rax, -32(%rbp)	# tmp219, sv
	.loc 1 2332 0
	movq	-32(%rbp), %rax	# sv, tmp220
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	movl	%eax, -68(%rbp)	# D.24151, flags
	.loc 1 2333 0
	movq	-32(%rbp), %rax	# sv, tmp221
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$8192, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1088	#,
	.loc 1 2334 0
	movq	-32(%rbp), %rax	# sv, tmp222
	movq	%rax, %rdi	# tmp222,
	call	Perl_mg_get	#
.L1088:
	.loc 1 2335 0
	movl	-68(%rbp), %eax	# flags, tmp223
	andl	$65536, %eax	#, D.24153
	testl	%eax, %eax	# D.24153
	jne	.L1089	#,
	.loc 1 2335 0 is_stmt 0 discriminator 1
	movl	-68(%rbp), %eax	# flags, tmp224
	andl	$50331648, %eax	#, D.24153
	cmpl	$16777216, %eax	#, D.24153
	jne	.L1090	#,
.L1089:
	.loc 1 2338 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp225
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	testl	%eax, %eax	# D.24158
	jns	.L1091	#,
	.loc 1 2339 0
	movq	-32(%rbp), %rax	# sv, tmp226
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_140].xiv_iv, D.24159
	movabsq	$-9223372036854775808, %rax	#, tmp227
	cmpq	%rax, %rdx	# tmp227, D.24159
	jne	.L1092	#,
.LBB252:
	.loc 1 2341 0
	movq	-32(%rbp), %rax	# sv, tmp228
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_142].xiv_iv, D.24159
	movq	-56(%rbp), %rax	# targ, tmp229
	movq	%rdx, %rsi	# D.24159,
	movq	%rax, %rdi	# tmp229,
	call	Perl_sv_setiv	#
.LBB253:
	movq	-56(%rbp), %rax	# targ, tmp230
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24151
	andl	$16384, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1093	#,
	.loc 1 2341 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp231
	movq	%rax, %rdi	# tmp231,
	call	Perl_mg_set	#
.L1093:
	.loc 1 2341 0 discriminator 2
	movq	-56(%rbp), %rax	# targ, tmp232
	movq	%rax, (%rbx)	# tmp232, *sp_9
.LBE253:
.LBE252:
	.loc 1 2342 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.806
	movq	(%rax), %rax	# PL_op.806_147->op_next, D.24148
	jmp	.L1087	#
.L1092:
	.loc 1 2344 0
	movq	-32(%rbp), %rax	# sv, tmp233
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_149].xuv_uv, D.24149
	testq	%rax, %rax	# D.24160
	js	.L1090	#,
.LBB254:
	.loc 1 2345 0
	movq	-32(%rbp), %rax	# sv, tmp234
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_152].xiv_iv, D.24159
	negq	%rax	# D.24159
	movq	%rax, %rdx	# D.24159, D.24159
	movq	-56(%rbp), %rax	# targ, tmp235
	movq	%rdx, %rsi	# D.24159,
	movq	%rax, %rdi	# tmp235,
	call	Perl_sv_setiv	#
.LBB255:
	movq	-56(%rbp), %rax	# targ, tmp236
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24151
	andl	$16384, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1094	#,
	.loc 1 2345 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp237
	movq	%rax, %rdi	# tmp237,
	call	Perl_mg_set	#
.L1094:
	.loc 1 2345 0 discriminator 2
	movq	-56(%rbp), %rax	# targ, tmp238
	movq	%rax, (%rbx)	# tmp238, *sp_9
.LBE255:
.LBE254:
	.loc 1 2346 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.807
	movq	(%rax), %rax	# PL_op.807_158->op_next, D.24148
	jmp	.L1087	#
.L1091:
	.loc 1 2349 0
	movq	-32(%rbp), %rax	# sv, tmp239
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movq	24(%rax), %rdx	# MEM[(struct XPVIV *)_160].xiv_iv, D.24159
	movabsq	$-9223372036854775808, %rax	#, tmp240
	cmpq	%rax, %rdx	# tmp240, D.24159
	je	.L1095	#,
.LBB256:
	.loc 1 2350 0
	movq	-32(%rbp), %rax	# sv, tmp241
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_162].xiv_iv, D.24159
	negq	%rax	# D.24159
	movq	%rax, %rdx	# D.24159, D.24159
	movq	-56(%rbp), %rax	# targ, tmp242
	movq	%rdx, %rsi	# D.24159,
	movq	%rax, %rdi	# tmp242,
	call	Perl_sv_setiv	#
.LBB257:
	movq	-56(%rbp), %rax	# targ, tmp243
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24151
	andl	$16384, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1096	#,
	.loc 1 2350 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp244
	movq	%rax, %rdi	# tmp244,
	call	Perl_mg_set	#
.L1096:
	.loc 1 2350 0 discriminator 2
	movq	-56(%rbp), %rax	# targ, tmp245
	movq	%rax, (%rbx)	# tmp245, *sp_9
.LBE257:
.LBE256:
	.loc 1 2351 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.808
	movq	(%rax), %rax	# PL_op.808_168->op_next, D.24148
	jmp	.L1087	#
.L1095:
.LBB258:
	.loc 1 2355 0
	movq	-56(%rbp), %rax	# targ, tmp246
	movabsq	$-9223372036854775808, %rsi	#,
	movq	%rax, %rdi	# tmp246,
	call	Perl_sv_setuv	#
.LBB259:
	movq	-56(%rbp), %rax	# targ, tmp247
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24151
	andl	$16384, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1097	#,
	.loc 1 2355 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp248
	movq	%rax, %rdi	# tmp248,
	call	Perl_mg_set	#
.L1097:
	.loc 1 2355 0 discriminator 2
	movq	-56(%rbp), %rax	# targ, tmp249
	movq	%rax, (%rbx)	# tmp249, *sp_9
.LBE259:
.LBE258:
	.loc 1 2356 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.809
	movq	(%rax), %rax	# PL_op.809_173->op_next, D.24148
	jmp	.L1087	#
.L1090:
	.loc 1 2360 0
	movq	-32(%rbp), %rax	# sv, tmp250
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$50331648, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1098	#,
.LBB260:
	.loc 1 2361 0
	movq	-32(%rbp), %rax	# sv, tmp251
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$131072, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1099	#,
	.loc 1 2361 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp252
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_40].xnv_nv, D.24155
	movsd	.LC30(%rip), %xmm0	#, tmp253
	xorpd	%xmm1, %xmm0	# D.24155, iftmp.810
	jmp	.L1100	#
.L1099:
	.loc 1 2361 0 discriminator 2
	movq	-32(%rbp), %rax	# sv, tmp254
	movq	%rax, %rdi	# tmp254,
	call	Perl_sv_2nv	#
	movsd	.LC30(%rip), %xmm1	#, tmp255
	xorpd	%xmm1, %xmm0	# tmp255, iftmp.810
.L1100:
	.loc 1 2361 0 discriminator 3
	movq	-56(%rbp), %rax	# targ, tmp256
	movq	%rax, %rdi	# tmp256,
	call	Perl_sv_setnv	#
.LBB261:
	movq	-56(%rbp), %rax	# targ, tmp257
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24151
	andl	$16384, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1101	#,
	.loc 1 2361 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp258
	movq	%rax, %rdi	# tmp258,
	call	Perl_mg_set	#
.L1101:
	.loc 1 2361 0 discriminator 2
	movq	-56(%rbp), %rax	# targ, tmp259
	movq	%rax, (%rbx)	# tmp259, *sp_9
.LBE261:
.LBE260:
	jmp	.L1102	#
.L1098:
	.loc 1 2362 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp260
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$67108864, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1103	#,
.LBB262:
	.loc 1 2364 0
	movq	-32(%rbp), %rax	# sv, tmp261
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$262144, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1104	#,
	.loc 1 2364 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp262
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movq	8(%rax), %rax	# MEM[(struct XPV *)_52].xpv_cur, len.812
	movq	%rax, -64(%rbp)	# len.812, len
	movq	-32(%rbp), %rax	# sv, tmp263
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movq	(%rax), %rax	# MEM[(struct XPV *)_54].xpv_pv, iftmp.811
	jmp	.L1105	#
.L1104:
	.loc 1 2364 0 discriminator 2
	leaq	-64(%rbp), %rcx	#, tmp264
	movq	-32(%rbp), %rax	# sv, tmp265
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp264,
	movq	%rax, %rdi	# tmp265,
	call	Perl_sv_2pv_flags	#
.L1105:
	.loc 1 2364 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.811, s
	.loc 1 2365 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# s, tmp266
	movzbl	(%rax), %eax	# *s_57, D.24156
	cmpb	$64, %al	#, D.24156
	jle	.L1106	#,
	.loc 1 2365 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# s, tmp267
	movzbl	(%rax), %eax	# *s_57, D.24156
	cmpb	$90, %al	#, D.24156
	jle	.L1107	#,
.L1106:
	.loc 1 2365 0 discriminator 2
	movq	-24(%rbp), %rax	# s, tmp268
	movzbl	(%rax), %eax	# *s_57, D.24156
	cmpb	$96, %al	#, D.24156
	jle	.L1108	#,
	.loc 1 2365 0 discriminator 1
	movq	-24(%rbp), %rax	# s, tmp269
	movzbl	(%rax), %eax	# *s_57, D.24156
	cmpb	$122, %al	#, D.24156
	jle	.L1107	#,
.L1108:
	.loc 1 2365 0 discriminator 2
	movq	-24(%rbp), %rax	# s, tmp270
	movzbl	(%rax), %eax	# *s_57, D.24156
	cmpb	$95, %al	#, D.24156
	jne	.L1109	#,
.L1107:
	.loc 1 2366 0 is_stmt 1
	movq	-56(%rbp), %rax	# targ, tmp271
	movl	$1, %edx	#,
	movl	$.LC36, %esi	#,
	movq	%rax, %rdi	# tmp271,
	call	Perl_sv_setpvn	#
	.loc 1 2367 0
	movq	-32(%rbp), %rcx	# sv, tmp272
	movq	-56(%rbp), %rax	# targ, tmp273
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp272,
	movq	%rax, %rdi	# tmp273,
	call	Perl_sv_catsv_flags	#
	jmp	.L1110	#
.L1109:
	.loc 1 2369 0
	movq	-24(%rbp), %rax	# s, tmp274
	movzbl	(%rax), %eax	# *s_57, D.24156
	cmpb	$43, %al	#, D.24156
	je	.L1111	#,
	.loc 1 2369 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# s, tmp275
	movzbl	(%rax), %eax	# *s_57, D.24156
	cmpb	$45, %al	#, D.24156
	jne	.L1112	#,
.L1111:
	.loc 1 2370 0 is_stmt 1
	movq	-32(%rbp), %rcx	# sv, tmp276
	movq	-56(%rbp), %rax	# targ, tmp277
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp276,
	movq	%rax, %rdi	# tmp277,
	call	Perl_sv_setsv_flags	#
	.loc 1 2371 0
	movq	-56(%rbp), %rax	# targ, tmp278
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24151
	andl	$10223616, %eax	#, D.24151
	cmpl	$262144, %eax	#, D.24151
	jne	.L1113	#,
	.loc 1 2371 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp279
	movq	(%rax), %rax	# targ_15->sv_any, D.24154
	movq	8(%rax), %rax	# MEM[(struct XPV *)_115].xpv_cur, len.814
	movq	%rax, -64(%rbp)	# len.814, len
	movq	-56(%rbp), %rax	# targ, tmp280
	movq	(%rax), %rax	# targ_15->sv_any, D.24154
	movq	(%rax), %rax	# MEM[(struct XPV *)_117].xpv_pv, iftmp.813
	jmp	.L1114	#
.L1113:
	.loc 1 2371 0 discriminator 2
	leaq	-64(%rbp), %rcx	#, tmp281
	movq	-56(%rbp), %rax	# targ, tmp282
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp281,
	movq	%rax, %rdi	# tmp282,
	call	Perl_sv_pvn_force_flags	#
.L1114:
	.loc 1 2371 0 discriminator 3
	movq	-24(%rbp), %rdx	# s, tmp283
	movzbl	(%rdx), %edx	# *s_57, D.24156
	cmpb	$45, %dl	#, D.24156
	jne	.L1115	#,
	.loc 1 2371 0 discriminator 1
	movl	$43, %edx	#, iftmp.815
	jmp	.L1116	#
.L1115:
	.loc 1 2371 0 discriminator 2
	movl	$45, %edx	#, iftmp.815
.L1116:
	.loc 1 2371 0 discriminator 3
	movb	%dl, (%rax)	# iftmp.815, *iftmp.813_4
	jmp	.L1110	#
.L1112:
	.loc 1 2373 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp284
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$536870912, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1117	#,
	.loc 1 2373 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.816
	movzbl	37(%rax), %eax	# PL_curcop.816_67->op_private, D.24157
	movzbl	%al, %eax	# D.24157, D.24153
	andl	$8, %eax	#, D.24153
	testl	%eax, %eax	# D.24153
	jne	.L1117	#,
	.loc 1 2374 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp285
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$16777216, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	jne	.L1118	#,
	.loc 1 2374 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp286
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$131072, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	jne	.L1119	#,
	.loc 1 2374 0 discriminator 2
	movq	-32(%rbp), %rax	# sv, tmp287
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$262144, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1118	#,
.L1119:
	.loc 1 2374 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp288
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$65536, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	jne	.L1118	#,
	.loc 1 2374 0 discriminator 2
	movq	-32(%rbp), %rax	# sv, tmp290
	movq	%rax, %rdi	# tmp290,
	call	Perl_sv_2iv	#
.L1118:
	.loc 1 2375 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp291
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$65536, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1121	#,
	.loc 1 2376 0
	jmp	.L1089	#
.L1121:
	.loc 1 2377 0
	movq	-32(%rbp), %rax	# sv, tmp292
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$131072, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1123	#,
	.loc 1 2378 0
	movq	-32(%rbp), %rax	# sv, tmp293
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$131072, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1124	#,
	.loc 1 2378 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp294
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_88].xnv_nv, D.24155
	movsd	.LC30(%rip), %xmm0	#, tmp295
	xorpd	%xmm1, %xmm0	# D.24155, iftmp.818
	jmp	.L1125	#
.L1124:
	.loc 1 2378 0 discriminator 2
	movq	-32(%rbp), %rax	# sv, tmp296
	movq	%rax, %rdi	# tmp296,
	call	Perl_sv_2nv	#
	movsd	.LC30(%rip), %xmm1	#, tmp297
	xorpd	%xmm1, %xmm0	# tmp297, iftmp.818
.L1125:
	.loc 1 2378 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp298
	movq	%rax, %rdi	# tmp298,
	call	Perl_sv_setnv	#
	.loc 1 2377 0 is_stmt 1 discriminator 1
	jmp	.L1110	#
.L1123:
	.loc 1 2380 0
	movq	-56(%rbp), %rax	# targ, tmp299
	movl	$1, %edx	#,
	movl	$.LC36, %esi	#,
	movq	%rax, %rdi	# tmp299,
	call	Perl_sv_setpvn	#
	.loc 1 2381 0
	movq	-32(%rbp), %rcx	# sv, tmp300
	movq	-56(%rbp), %rax	# targ, tmp301
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp300,
	movq	%rax, %rdi	# tmp301,
	call	Perl_sv_catsv_flags	#
	.loc 1 2377 0
	jmp	.L1110	#
.L1117:
	.loc 1 2385 0
	movq	-32(%rbp), %rax	# sv, tmp302
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$16777216, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	jne	.L1127	#,
	.loc 1 2385 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp303
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$131072, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	jne	.L1128	#,
	.loc 1 2385 0 discriminator 2
	movq	-32(%rbp), %rax	# sv, tmp304
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$262144, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1127	#,
.L1128:
	.loc 1 2385 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp305
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$65536, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	jne	.L1127	#,
	.loc 1 2385 0 discriminator 2
	movq	-32(%rbp), %rax	# sv, tmp307
	movq	%rax, %rdi	# tmp307,
	call	Perl_sv_2iv	#
.L1127:
	.loc 1 2386 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp308
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$65536, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1130	#,
	.loc 1 2387 0
	nop
	jmp	.L1089	#
.L1130:
	.loc 1 2388 0
	movq	-32(%rbp), %rax	# sv, tmp309
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$131072, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1131	#,
	.loc 1 2388 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp310
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_108].xnv_nv, D.24155
	movsd	.LC30(%rip), %xmm0	#, tmp311
	xorpd	%xmm1, %xmm0	# D.24155, iftmp.820
	jmp	.L1132	#
.L1131:
	.loc 1 2388 0 discriminator 2
	movq	-32(%rbp), %rax	# sv, tmp312
	movq	%rax, %rdi	# tmp312,
	call	Perl_sv_2nv	#
	movsd	.LC30(%rip), %xmm1	#, tmp313
	xorpd	%xmm1, %xmm0	# tmp313, iftmp.820
.L1132:
	.loc 1 2388 0 discriminator 3
	movq	-56(%rbp), %rax	# targ, tmp314
	movq	%rax, %rdi	# tmp314,
	call	Perl_sv_setnv	#
.L1110:
.LBB263:
	.loc 1 2390 0 is_stmt 1
	movq	-56(%rbp), %rax	# targ, tmp315
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24151
	andl	$16384, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1133	#,
	.loc 1 2390 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp316
	movq	%rax, %rdi	# tmp316,
	call	Perl_mg_set	#
.L1133:
	.loc 1 2390 0 discriminator 2
	movq	-56(%rbp), %rax	# targ, tmp317
	movq	%rax, (%rbx)	# tmp317, *sp_9
.LBE263:
.LBE262:
	jmp	.L1102	#
.L1103:
.LBB264:
	.loc 1 2393 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp318
	movl	12(%rax), %eax	# sv_29->sv_flags, D.24151
	andl	$131072, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1134	#,
	.loc 1 2393 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp319
	movq	(%rax), %rax	# sv_29->sv_any, D.24154
	movsd	32(%rax), %xmm1	# MEM[(struct XPVNV *)_128].xnv_nv, D.24155
	movsd	.LC30(%rip), %xmm0	#, tmp320
	xorpd	%xmm1, %xmm0	# D.24155, iftmp.821
	jmp	.L1135	#
.L1134:
	.loc 1 2393 0 discriminator 2
	movq	-32(%rbp), %rax	# sv, tmp321
	movq	%rax, %rdi	# tmp321,
	call	Perl_sv_2nv	#
	movsd	.LC30(%rip), %xmm1	#, tmp322
	xorpd	%xmm1, %xmm0	# tmp322, iftmp.821
.L1135:
	.loc 1 2393 0 discriminator 3
	movq	-56(%rbp), %rax	# targ, tmp323
	movq	%rax, %rdi	# tmp323,
	call	Perl_sv_setnv	#
.LBB265:
	movq	-56(%rbp), %rax	# targ, tmp324
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24151
	andl	$16384, %eax	#, D.24151
	testl	%eax, %eax	# D.24151
	je	.L1136	#,
	.loc 1 2393 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp325
	movq	%rax, %rdi	# tmp325,
	call	Perl_mg_set	#
.L1136:
	.loc 1 2393 0 discriminator 2
	movq	-56(%rbp), %rax	# targ, tmp326
	movq	%rax, (%rbx)	# tmp326, *sp_9
.L1102:
.LBE265:
.LBE264:
.LBE251:
	.loc 1 2395 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.822
	movq	(%rax), %rax	# PL_op.822_136->op_next, D.24148
.L1087:
	.loc 1 2396 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE55:
	.size	Perl_pp_negate, .-Perl_pp_negate
	.globl	Perl_pp_not
	.type	Perl_pp_not, @function
Perl_pp_not:
.LFB56:
	.loc 1 2399 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2400 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.823
	testq	%rax, %rax	# PL_amagic_generation.823
	je	.L1138	#,
.LBB266:
	.loc 1 2400 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_8, tmp110
	movq	%rax, -32(%rbp)	# tmp110, arg
.L1139:
	movq	-32(%rbp), %rax	# arg, tmp111
	movl	12(%rax), %eax	# arg_10->sv_flags, D.24163
	andl	$268435456, %eax	#, D.24163
	testl	%eax, %eax	# D.24163
	je	.L1138	#,
	movq	-32(%rbp), %rax	# arg, tmp112
	movl	$9, %ecx	#,
	movl	$42, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp112,
	call	Perl_amagic_call	#
	movq	%rax, -24(%rbp)	# tmp113, tmpsv
	cmpq	$0, -24(%rbp)	#, tmpsv
	je	.L1138	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-24(%rbp), %rax	# tmpsv, tmp114
	movq	%rax, (%rbx)	# tmp114, *sp_14
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.824
	movq	(%rax), %rax	# PL_op.824_15->op_next, D.24162
	jmp	.L1140	#
.L1138:
.LBE266:
	.loc 1 2401 0 is_stmt 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, PL_stack_sp.825
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, PL_stack_sp.828
	movq	(%rax), %rax	# *PL_stack_sp.828_18, D.24164
	testq	%rax, %rax	# D.24164
	je	.L1141	#,
	.loc 1 2401 0 is_stmt 0 discriminator 1
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, PL_stack_sp.830
	movq	(%rax), %rax	# *PL_stack_sp.830_20, D.24164
	movl	12(%rax), %eax	# _21->sv_flags, D.24163
	andl	$262144, %eax	#, D.24163
	testl	%eax, %eax	# D.24163
	je	.L1142	#,
	.loc 1 2401 0 discriminator 3
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, PL_stack_sp.832
	movq	(%rax), %rax	# *PL_stack_sp.832_24, D.24164
	movq	(%rax), %rax	# _25->sv_any, PL_Xpv.833
	movq	%rax, PL_Xpv(%rip)	# PL_Xpv.833, PL_Xpv
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.834
	testq	%rax, %rax	# PL_Xpv.834
	je	.L1143	#,
	.loc 1 2401 0 discriminator 6
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.835
	movq	8(%rax), %rax	# PL_Xpv.835_28->xpv_cur, D.24165
	cmpq	$1, %rax	#, D.24165
	ja	.L1144	#,
	.loc 1 2401 0 discriminator 7
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.836
	movq	8(%rax), %rax	# PL_Xpv.836_30->xpv_cur, D.24165
	testq	%rax, %rax	# D.24165
	je	.L1143	#,
	.loc 1 2401 0 discriminator 1
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.837
	movq	(%rax), %rax	# PL_Xpv.837_32->xpv_pv, D.24166
	movzbl	(%rax), %eax	# *_33, D.24167
	cmpb	$48, %al	#, D.24167
	jne	.L1144	#,
.L1143:
	.loc 1 2401 0 discriminator 5
	movl	$1, %eax	#, iftmp.831
	jmp	.L1145	#
.L1144:
	.loc 1 2401 0 discriminator 8
	movl	$0, %eax	#, iftmp.831
.L1145:
	.loc 1 2401 0 discriminator 9
	andl	$1, %eax	#, iftmp.829
	jmp	.L1151	#
.L1142:
	.loc 1 2401 0 discriminator 4
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, PL_stack_sp.839
	movq	(%rax), %rax	# *PL_stack_sp.839_38, D.24164
	movl	12(%rax), %eax	# _39->sv_flags, D.24163
	andl	$65536, %eax	#, D.24163
	testl	%eax, %eax	# D.24163
	je	.L1147	#,
	.loc 1 2401 0 discriminator 10
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, PL_stack_sp.840
	movq	(%rax), %rax	# *PL_stack_sp.840_42, D.24164
	movq	(%rax), %rax	# _43->sv_any, D.24168
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_44].xiv_iv, D.24169
	testq	%rax, %rax	# D.24169
	sete	%al	#, iftmp.838
	jmp	.L1151	#
.L1147:
	.loc 1 2401 0 discriminator 11
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, PL_stack_sp.842
	movq	(%rax), %rax	# *PL_stack_sp.842_47, D.24164
	movl	12(%rax), %eax	# _48->sv_flags, D.24163
	andl	$131072, %eax	#, D.24163
	testl	%eax, %eax	# D.24163
	je	.L1149	#,
	.loc 1 2401 0 discriminator 12
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, PL_stack_sp.843
	movq	(%rax), %rax	# *PL_stack_sp.843_51, D.24164
	movq	(%rax), %rax	# _52->sv_any, D.24168
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_53].xnv_nv, D.24170
	xorpd	%xmm1, %xmm1	# tmp116
	ucomisd	%xmm1, %xmm0	# tmp116, D.24170
	setnp	%dl	#, tmp115
	movl	$0, %eax	#, tmp118
	xorpd	%xmm1, %xmm1	# tmp117
	ucomisd	%xmm1, %xmm0	# tmp117, D.24170
	cmove	%edx, %eax	# tmp115,, iftmp.841
	jmp	.L1151	#
.L1149:
	.loc 1 2401 0 discriminator 13
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, PL_stack_sp.844
	movq	(%rax), %rax	# *PL_stack_sp.844_56, D.24164
	movq	%rax, %rdi	# D.24164,
	call	Perl_sv_2bool	#
	testb	%al, %al	# D.24167
	sete	%al	#, iftmp.841
	jmp	.L1151	#
.L1141:
	.loc 1 2401 0 discriminator 2
	movl	$1, %eax	#, iftmp.827
.L1151:
	.loc 1 2401 0 discriminator 16
	testb	%al, %al	# iftmp.827
	je	.L1152	#,
	.loc 1 2401 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.826
	jmp	.L1153	#
.L1152:
	.loc 1 2401 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.826
.L1153:
	.loc 1 2401 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.826, *PL_stack_sp.825_17
	.loc 1 2402 0 is_stmt 1 discriminator 3
	movq	PL_op(%rip), %rax	# PL_op, PL_op.845
	movq	(%rax), %rax	# PL_op.845_66->op_next, D.24162
.L1140:
	.loc 1 2403 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE56:
	.size	Perl_pp_not, .-Perl_pp_not
	.globl	Perl_pp_complement
	.type	Perl_pp_complement, @function
Perl_pp_complement:
.LFB57:
	.loc 1 2406 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	.loc 1 2407 0
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.846
	movq	PL_op(%rip), %rax	# PL_op, PL_op.847
	movq	24(%rax), %rax	# PL_op.847_29->op_targ, D.24172
	salq	$3, %rax	#, D.24172
	addq	%rdx, %rax	# PL_curpad.846, D.24173
	movq	(%rax), %rax	# *_32, tmp174
	movq	%rax, -104(%rbp)	# tmp174, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.848
	testq	%rax, %rax	# PL_amagic_generation.848
	je	.L1155	#,
.LBB267:
	.loc 1 2407 0 is_stmt 0 discriminator 1
	movq	(%r12), %rax	# *sp_27, tmp175
	movq	%rax, -96(%rbp)	# tmp175, arg
.L1156:
	movq	-96(%rbp), %rax	# arg, tmp176
	movl	12(%rax), %eax	# arg_35->sv_flags, D.24174
	andl	$268435456, %eax	#, D.24174
	testl	%eax, %eax	# D.24174
	je	.L1155	#,
	movq	-96(%rbp), %rax	# arg, tmp177
	movl	$9, %ecx	#,
	movl	$43, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp177,
	call	Perl_amagic_call	#
	movq	%rax, -88(%rbp)	# tmp178, tmpsv
	cmpq	$0, -88(%rbp)	#, tmpsv
	je	.L1155	#,
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	movq	-104(%rbp), %rax	# targ, tmp179
	movl	12(%rax), %eax	# targ_33->sv_flags, D.24174
	andl	$1024, %eax	#, D.24174
	testl	%eax, %eax	# D.24174
	je	.L1157	#,
	movq	-88(%rbp), %rcx	# tmpsv, tmp180
	movq	-104(%rbp), %rax	# targ, tmp181
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp180,
	movq	%rax, %rdi	# tmp181,
	call	Perl_sv_setsv_flags	#
.LBB268:
	movq	-104(%rbp), %rax	# targ, tmp182
	movl	12(%rax), %eax	# targ_33->sv_flags, D.24174
	andl	$16384, %eax	#, D.24174
	testl	%eax, %eax	# D.24174
	je	.L1158	#,
	movq	-104(%rbp), %rax	# targ, tmp183
	movq	%rax, %rdi	# tmp183,
	call	Perl_mg_set	#
.L1158:
	.loc 1 2407 0 discriminator 2
	movq	-104(%rbp), %rax	# targ, tmp184
	movq	%rax, (%r12)	# tmp184, *sp_39
.LBE268:
	jmp	.L1159	#
.L1157:
	movq	-88(%rbp), %rax	# tmpsv, tmp185
	movq	%rax, (%r12)	# tmp185, *sp_39
.L1159:
	.loc 1 2407 0 discriminator 1
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.849
	movq	(%rax), %rax	# PL_op.849_45->op_next, D.24171
	jmp	.L1160	#
.L1155:
.LBE267:
.LBB269:
	.loc 1 2409 0 is_stmt 1
	movq	(%r12), %rax	# *sp_27, tmp186
	movq	%rax, -80(%rbp)	# tmp186, sv
	.loc 1 2410 0
	movq	-80(%rbp), %rax	# sv, tmp187
	movl	12(%rax), %eax	# sv_47->sv_flags, D.24174
	andl	$50331648, %eax	#, D.24174
	testl	%eax, %eax	# D.24174
	je	.L1161	#,
	.loc 1 2411 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.850
	movzbl	37(%rax), %eax	# PL_op.850_50->op_private, D.24176
	movzbl	%al, %eax	# D.24176, D.24177
	andl	$1, %eax	#, D.24177
	testl	%eax, %eax	# D.24177
	je	.L1162	#,
.LBB270:
	.loc 1 2412 0
	movq	-80(%rbp), %rax	# sv, tmp188
	movl	12(%rax), %eax	# sv_47->sv_flags, D.24174
	andl	$65536, %eax	#, D.24174
	testl	%eax, %eax	# D.24174
	je	.L1163	#,
	.loc 1 2412 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# sv, tmp189
	movq	(%rax), %rax	# sv_47->sv_any, D.24178
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_56].xiv_iv, D.24179
	notq	%rax	# iftmp.851
	jmp	.L1164	#
.L1163:
	.loc 1 2412 0 discriminator 2
	movq	-80(%rbp), %rax	# sv, tmp190
	movq	%rax, %rdi	# tmp190,
	call	Perl_sv_2iv	#
	notq	%rax	# iftmp.851
.L1164:
	.loc 1 2412 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.851, i
.LBB271:
	.loc 1 2413 0 is_stmt 1 discriminator 3
	movq	-72(%rbp), %rdx	# i, tmp191
	movq	-104(%rbp), %rax	# targ, tmp192
	movq	%rdx, %rsi	# tmp191,
	movq	%rax, %rdi	# tmp192,
	call	Perl_sv_setiv	#
.LBB272:
	movq	-104(%rbp), %rax	# targ, tmp193
	movl	12(%rax), %eax	# targ_33->sv_flags, D.24174
	andl	$16384, %eax	#, D.24174
	testl	%eax, %eax	# D.24174
	je	.L1165	#,
	.loc 1 2413 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# targ, tmp194
	movq	%rax, %rdi	# tmp194,
	call	Perl_mg_set	#
.L1165:
	.loc 1 2413 0 discriminator 2
	movq	-104(%rbp), %rax	# targ, tmp195
	movq	%rax, (%r12)	# tmp195, *sp_27
.LBE272:
.LBE271:
.LBE270:
	jmp	.L1170	#
.L1162:
.LBB273:
	.loc 1 2416 0 is_stmt 1
	movq	-80(%rbp), %rax	# sv, tmp196
	movl	12(%rax), %eax	# sv_47->sv_flags, D.24174
	andl	$65536, %eax	#, D.24174
	testl	%eax, %eax	# D.24174
	je	.L1167	#,
	.loc 1 2416 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# sv, tmp197
	movq	(%rax), %rax	# sv_47->sv_any, D.24178
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_67].xuv_uv, D.24172
	notq	%rax	# iftmp.852
	jmp	.L1168	#
.L1167:
	.loc 1 2416 0 discriminator 2
	movq	-80(%rbp), %rax	# sv, tmp198
	movq	%rax, %rdi	# tmp198,
	call	Perl_sv_2uv	#
	notq	%rax	# iftmp.852
.L1168:
	.loc 1 2416 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.852, u
.LBB274:
	.loc 1 2417 0 is_stmt 1 discriminator 3
	movq	-64(%rbp), %rdx	# u, tmp199
	movq	-104(%rbp), %rax	# targ, tmp200
	movq	%rdx, %rsi	# tmp199,
	movq	%rax, %rdi	# tmp200,
	call	Perl_sv_setuv	#
.LBB275:
	movq	-104(%rbp), %rax	# targ, tmp201
	movl	12(%rax), %eax	# targ_33->sv_flags, D.24174
	andl	$16384, %eax	#, D.24174
	testl	%eax, %eax	# D.24174
	je	.L1169	#,
	.loc 1 2417 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# targ, tmp202
	movq	%rax, %rdi	# tmp202,
	call	Perl_mg_set	#
.L1169:
	.loc 1 2417 0 discriminator 2
	movq	-104(%rbp), %rax	# targ, tmp203
	movq	%rax, (%r12)	# tmp203, *sp_27
	jmp	.L1170	#
.L1161:
.LBE275:
.LBE274:
.LBE273:
.LBB276:
	.loc 1 2425 0 is_stmt 1
	movq	-80(%rbp), %rax	# sv, tmp204
	movl	12(%rax), %eax	# sv_47->sv_flags, D.24174
	andl	$262144, %eax	#, D.24174
	testl	%eax, %eax	# D.24174
	je	.L1171	#,
	.loc 1 2425 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# sv, tmp205
	movq	(%rax), %rax	# sv_47->sv_any, D.24178
	movq	8(%rax), %rax	# MEM[(struct XPV *)_78].xpv_cur, len.853
	movq	%rax, -152(%rbp)	# len.853, len
	jmp	.L1172	#
.L1171:
	.loc 1 2425 0 discriminator 2
	leaq	-152(%rbp), %rcx	#, tmp207
	movq	-80(%rbp), %rax	# sv, tmp208
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp207,
	movq	%rax, %rdi	# tmp208,
	call	Perl_sv_2pv_flags	#
.L1172:
	.loc 1 2426 0 is_stmt 1
	movq	-104(%rbp), %rax	# targ, tmp209
	cmpq	-80(%rbp), %rax	# sv, tmp209
	je	.L1173	#,
	.loc 1 2426 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rcx	# sv, tmp210
	movq	-104(%rbp), %rax	# targ, tmp211
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp210,
	movq	%rax, %rdi	# tmp211,
	call	Perl_sv_setsv_flags	#
.L1173:
	.loc 1 2427 0 is_stmt 1
	movq	-104(%rbp), %rax	# targ, tmp212
	movl	12(%rax), %eax	# targ_33->sv_flags, D.24174
	andl	$10223616, %eax	#, D.24174
	cmpl	$262144, %eax	#, D.24174
	jne	.L1174	#,
	.loc 1 2427 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# targ, tmp213
	movq	(%rax), %rax	# targ_33->sv_any, D.24178
	movq	8(%rax), %rax	# MEM[(struct XPV *)_83].xpv_cur, len.855
	movq	%rax, -152(%rbp)	# len.855, len
	movq	-104(%rbp), %rax	# targ, tmp214
	movq	(%rax), %rax	# targ_33->sv_any, D.24178
	movq	(%rax), %rax	# MEM[(struct XPV *)_85].xpv_pv, iftmp.854
	jmp	.L1175	#
.L1174:
	.loc 1 2427 0 discriminator 2
	leaq	-152(%rbp), %rcx	#, tmp215
	movq	-104(%rbp), %rax	# targ, tmp216
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp215,
	movq	%rax, %rdi	# tmp216,
	call	Perl_sv_pvn_force_flags	#
.L1175:
	.loc 1 2427 0 discriminator 3
	movq	%rax, %rbx	# iftmp.854, tmps
	.loc 1 2428 0 is_stmt 1 discriminator 3
	movq	-152(%rbp), %rax	# len, len.856
	movl	%eax, %r13d	# len.856, anum
	.loc 1 2429 0 discriminator 3
	movq	-104(%rbp), %rax	# targ, tmp217
	movl	12(%rax), %eax	# targ_33->sv_flags, D.24174
	andl	$536870912, %eax	#, D.24174
	testl	%eax, %eax	# D.24174
	je	.L1176	#,
.LBB277:
	.loc 1 2431 0
	movq	$0, -136(%rbp)	#, targlen
	.loc 1 2435 0
	movq	$0, -120(%rbp)	#, nchar
	.loc 1 2436 0
	movq	$0, -112(%rbp)	#, nwide
	.loc 1 2438 0
	movq	-152(%rbp), %rax	# len, len.857
	addq	%rbx, %rax	# tmps, tmp218
	movq	%rax, -56(%rbp)	# tmp218, send
	.loc 1 2439 0
	jmp	.L1177	#
.L1192:
.LBB278:
	.loc 1 2440 0
	movq	-56(%rbp), %rdx	# send, send.858
	movq	%rbx, %rax	# tmps, tmps.859
	subq	%rax, %rdx	# tmps.859, D.24179
	movq	%rdx, %rax	# D.24179, D.24179
	leaq	-144(%rbp), %rdx	#, tmp219
	movl	$105, %ecx	#,
	movq	%rax, %rsi	# D.24172,
	movq	%rbx, %rdi	# tmps,
	call	Perl_utf8n_to_uvuni	#
	movq	%rax, -48(%rbp)	# tmp220, c
	.loc 1 2441 0
	movzbl	(%rbx), %eax	# *tmps_1, D.24176
	movzbl	%al, %eax	# D.24176, D.24177
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.24176
	movzbl	%al, %eax	# D.24176, D.24180
	addq	%rax, %rbx	# D.24180, tmps
	.loc 1 2442 0
	cmpq	$-129, -48(%rbp)	#, c
	ja	.L1178	#,
	.loc 1 2442 0 is_stmt 0 discriminator 1
	cmpq	$-2049, -48(%rbp)	#, c
	ja	.L1179	#,
	.loc 1 2442 0 discriminator 3
	cmpq	$-65537, -48(%rbp)	#, c
	ja	.L1180	#,
	.loc 1 2442 0 discriminator 5
	cmpq	$-2097153, -48(%rbp)	#, c
	ja	.L1181	#,
	.loc 1 2442 0 discriminator 7
	cmpq	$-67108865, -48(%rbp)	#, c
	ja	.L1182	#,
	.loc 1 2442 0 discriminator 9
	movabsq	$-2147483649, %rax	#, tmp222
	cmpq	%rax, -48(%rbp)	# tmp222, c
	ja	.L1183	#,
	.loc 1 2442 0 discriminator 11
	movabsq	$-68719476737, %rax	#, tmp223
	cmpq	%rax, -48(%rbp)	# tmp223, c
	jbe	.L1184	#,
	.loc 1 2442 0 discriminator 13
	movl	$7, %eax	#, iftmp.866
	jmp	.L1191	#
.L1184:
	.loc 1 2442 0 discriminator 14
	movl	$13, %eax	#, iftmp.866
	jmp	.L1191	#
.L1183:
	.loc 1 2442 0 discriminator 12
	movl	$6, %eax	#, iftmp.865
	jmp	.L1191	#
.L1182:
	.loc 1 2442 0 discriminator 10
	movl	$5, %eax	#, iftmp.864
	jmp	.L1191	#
.L1181:
	.loc 1 2442 0 discriminator 8
	movl	$4, %eax	#, iftmp.863
	jmp	.L1191	#
.L1180:
	.loc 1 2442 0 discriminator 6
	movl	$3, %eax	#, iftmp.862
	jmp	.L1191	#
.L1179:
	.loc 1 2442 0 discriminator 4
	movl	$2, %eax	#, iftmp.861
	jmp	.L1191	#
.L1178:
	.loc 1 2442 0 discriminator 2
	movl	$1, %eax	#, iftmp.860
.L1191:
	.loc 1 2442 0 discriminator 15
	addq	%rax, -136(%rbp)	# iftmp.860, targlen
	.loc 1 2443 0 is_stmt 1 discriminator 15
	addq	$1, -120(%rbp)	#, nchar
	.loc 1 2444 0 discriminator 15
	cmpq	$255, -48(%rbp)	#, c
	jbe	.L1177	#,
	.loc 1 2445 0
	addq	$1, -112(%rbp)	#, nwide
.L1177:
.LBE278:
	.loc 1 2439 0 discriminator 1
	cmpq	-56(%rbp), %rbx	# send, tmps
	jb	.L1192	#,
	.loc 1 2449 0
	movq	-152(%rbp), %rax	# len, len.867
	negq	%rax	# D.24180
	addq	%rax, %rbx	# D.24180, tmps
	.loc 1 2451 0
	cmpq	$0, -112(%rbp)	#, nwide
	je	.L1193	#,
	.loc 1 2452 0
	movq	-136(%rbp), %rax	# targlen, tmp224
	addq	$1, %rax	#, D.24172
	movq	%rax, %rdi	# D.24172,
	call	Perl_safesysmalloc	#
	movq	%rax, -128(%rbp)	# tmp225, result
	movq	-136(%rbp), %rax	# targlen, tmp226
	leaq	1(%rax), %rdx	#, D.24172
	movq	-128(%rbp), %rax	# result, tmp227
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp227,
	call	memset	#
	.loc 1 2453 0
	jmp	.L1194	#
.L1195:
.LBB279:
	.loc 1 2454 0
	movq	-56(%rbp), %rdx	# send, send.868
	movq	%rbx, %rax	# tmps, tmps.869
	subq	%rax, %rdx	# tmps.869, D.24179
	movq	%rdx, %rax	# D.24179, D.24179
	leaq	-144(%rbp), %rdx	#, tmp228
	movl	$105, %ecx	#,
	movq	%rax, %rsi	# D.24172,
	movq	%rbx, %rdi	# tmps,
	call	Perl_utf8n_to_uvuni	#
	movq	%rax, -40(%rbp)	# tmp229, c
	.loc 1 2455 0
	movzbl	(%rbx), %eax	# *tmps_2, D.24176
	movzbl	%al, %eax	# D.24176, D.24177
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.24176
	movzbl	%al, %eax	# D.24176, D.24180
	addq	%rax, %rbx	# D.24180, tmps
	.loc 1 2456 0
	movq	-40(%rbp), %rax	# c, tmp231
	notq	%rax	# D.24172
	movq	%rax, %rcx	# D.24172, D.24172
	movq	-128(%rbp), %rax	# result, tmp232
	movl	$15, %edx	#,
	movq	%rcx, %rsi	# D.24172,
	movq	%rax, %rdi	# tmp232,
	call	Perl_uvchr_to_utf8_flags	#
	movq	%rax, -128(%rbp)	# tmp233, result
.L1194:
.LBE279:
	.loc 1 2453 0 discriminator 1
	cmpq	-56(%rbp), %rbx	# send, tmps
	jb	.L1195	#,
	.loc 1 2458 0
	movq	-128(%rbp), %rax	# result, tmp234
	movb	$0, (%rax)	#, *result_10
	.loc 1 2459 0
	movq	-136(%rbp), %rax	# targlen, tmp235
	negq	%rax	# D.24180
	addq	%rax, -128(%rbp)	# D.24180, result
	.loc 1 2460 0
	movq	-136(%rbp), %rdx	# targlen, tmp236
	movq	-128(%rbp), %rcx	# result, tmp237
	movq	-104(%rbp), %rax	# targ, tmp238
	movq	%rcx, %rsi	# tmp237,
	movq	%rax, %rdi	# tmp238,
	call	Perl_sv_setpvn	#
	.loc 1 2461 0
	movq	-104(%rbp), %rax	# targ, tmp239
	movl	12(%rax), %eax	# targ_33->sv_flags, D.24174
	orl	$536870912, %eax	#, D.24174
	movl	%eax, %edx	# D.24174, D.24174
	movq	-104(%rbp), %rax	# targ, tmp240
	movl	%edx, 12(%rax)	# D.24174, targ_33->sv_flags
	jmp	.L1196	#
.L1193:
	.loc 1 2464 0
	movq	-120(%rbp), %rax	# nchar, tmp241
	addq	$1, %rax	#, D.24172
	movq	%rax, %rdi	# D.24172,
	call	Perl_safesysmalloc	#
	movq	%rax, -128(%rbp)	# tmp242, result
	movq	-120(%rbp), %rax	# nchar, tmp243
	leaq	1(%rax), %rdx	#, D.24172
	movq	-128(%rbp), %rax	# result, tmp244
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp244,
	call	memset	#
	.loc 1 2465 0
	jmp	.L1197	#
.L1198:
.LBB280:
	.loc 1 2466 0
	leaq	-144(%rbp), %rax	#, tmp245
	movl	$255, %ecx	#,
	movq	%rax, %rdx	# tmp245,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# tmps,
	call	Perl_utf8n_to_uvuni	#
	movb	%al, -153(%rbp)	# D.24172, c
	.loc 1 2467 0
	movzbl	(%rbx), %eax	# *tmps_3, D.24176
	movzbl	%al, %eax	# D.24176, D.24177
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.24176
	movzbl	%al, %eax	# D.24176, D.24180
	addq	%rax, %rbx	# D.24180, tmps
	.loc 1 2468 0
	movq	-128(%rbp), %rax	# result, result.870
	leaq	1(%rax), %rdx	#, tmp247
	movq	%rdx, -128(%rbp)	# tmp247, result
	movzbl	-153(%rbp), %edx	# c, tmp248
	notl	%edx	# D.24176
	movb	%dl, (%rax)	# D.24176, *result.870_157
.L1197:
.LBE280:
	.loc 1 2465 0 discriminator 1
	cmpq	-56(%rbp), %rbx	# send, tmps
	jb	.L1198	#,
	.loc 1 2470 0
	movq	-128(%rbp), %rax	# result, tmp249
	movb	$0, (%rax)	#, *result_11
	.loc 1 2471 0
	movq	-120(%rbp), %rax	# nchar, tmp250
	negq	%rax	# D.24180
	addq	%rax, -128(%rbp)	# D.24180, result
	.loc 1 2472 0
	movq	-120(%rbp), %rdx	# nchar, tmp251
	movq	-128(%rbp), %rcx	# result, tmp252
	movq	-104(%rbp), %rax	# targ, tmp253
	movq	%rcx, %rsi	# tmp252,
	movq	%rax, %rdi	# tmp253,
	call	Perl_sv_setpvn	#
	.loc 1 2473 0
	movq	-104(%rbp), %rax	# targ, tmp254
	movl	12(%rax), %eax	# targ_33->sv_flags, D.24174
	andl	$-536870913, %eax	#, D.24174
	movl	%eax, %edx	# D.24174, D.24174
	movq	-104(%rbp), %rax	# targ, tmp255
	movl	%edx, 12(%rax)	# D.24174, targ_33->sv_flags
.L1196:
	.loc 1 2475 0
	movq	-128(%rbp), %rax	# result, tmp256
	movq	%rax, %rdi	# tmp256,
	call	Perl_safesysfree	#
	.loc 1 2476 0
	movq	-104(%rbp), %rax	# targ, tmp257
	movq	%rax, (%r12)	# tmp257, *sp_27
	.loc 1 2477 0
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.871
	movq	(%rax), %rax	# PL_op.871_164->op_next, D.24171
	jmp	.L1160	#
.L1176:
.LBE277:
.LBB281:
	.loc 1 2482 0
	jmp	.L1199	#
.L1201:
	.loc 1 2483 0 discriminator 1
	movzbl	(%rbx), %eax	# *tmps_4, D.24176
	notl	%eax	# D.24176
	movb	%al, (%rbx)	# D.24176, *tmps_4
	.loc 1 2482 0 discriminator 1
	subl	$1, %r13d	#, anum
	addq	$1, %rbx	#, tmps
.L1199:
	testl	%r13d, %r13d	# anum
	je	.L1200	#,
	.loc 1 2482 0 is_stmt 0 discriminator 2
	movq	%rbx, %rax	# tmps, tmps.872
	andl	$7, %eax	#, D.24172
	testq	%rax, %rax	# D.24172
	jne	.L1201	#,
.L1200:
	.loc 1 2485 0 is_stmt 1
	jmp	.L1202	#
.L1203:
	.loc 1 2486 0 discriminator 2
	movq	(%rbx), %rax	# *tmpl_15, D.24179
	notq	%rax	# D.24179
	movq	%rax, (%rbx)	# D.24179, *tmpl_15
	.loc 1 2485 0 discriminator 2
	movl	%r13d, %eax	# anum, anum.873
	subl	$8, %eax	#, D.24181
	movl	%eax, %r13d	# D.24181, anum
	addq	$8, %rbx	#, tmpl
.L1202:
	.loc 1 2485 0 is_stmt 0 discriminator 1
	movl	%r13d, %eax	# anum, anum.874
	cmpl	$7, %eax	#, anum.874
	ja	.L1203	#,
.LBE281:
	.loc 1 2490 0 is_stmt 1
	jmp	.L1204	#
.L1205:
	.loc 1 2491 0 discriminator 2
	movzbl	(%rbx), %eax	# *tmps_5, D.24176
	notl	%eax	# D.24176
	movb	%al, (%rbx)	# D.24176, *tmps_5
	.loc 1 2490 0 discriminator 2
	subl	$1, %r13d	#, anum
	addq	$1, %rbx	#, tmps
.L1204:
	.loc 1 2490 0 is_stmt 0 discriminator 1
	testl	%r13d, %r13d	# anum
	jg	.L1205	#,
	.loc 1 2493 0 is_stmt 1
	movq	-104(%rbp), %rax	# targ, tmp258
	movq	%rax, (%r12)	# tmp258, *sp_27
.L1170:
.LBE276:
	.loc 1 2495 0
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.875
	movq	(%rax), %rax	# PL_op.875_185->op_next, D.24171
.L1160:
.LBE269:
	.loc 1 2497 0
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE57:
	.size	Perl_pp_complement, .-Perl_pp_complement
	.globl	Perl_pp_i_multiply
	.type	Perl_pp_i_multiply, @function
Perl_pp_i_multiply:
.LFB58:
	.loc 1 2502 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2503 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.877
	movzbl	36(%rax), %eax	# PL_op.877_7->op_flags, D.24183
	movzbl	%al, %eax	# D.24183, D.24184
	andl	$64, %eax	#, D.24184
	testl	%eax, %eax	# D.24184
	je	.L1207	#,
	.loc 1 2503 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_6 + -8B], iftmp.876
	jmp	.L1208	#
.L1207:
	.loc 1 2503 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.878
	movq	PL_op(%rip), %rax	# PL_op, PL_op.879
	movq	24(%rax), %rax	# PL_op.879_13->op_targ, D.24185
	salq	$3, %rax	#, D.24185
	addq	%rdx, %rax	# PL_curpad.878, D.24186
	movq	(%rax), %rax	# *_16, iftmp.876
.L1208:
	.loc 1 2503 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.876, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.880
	testq	%rax, %rax	# PL_amagic_generation.880
	je	.L1209	#,
.LBB282:
	.loc 1 2503 0 discriminator 1
	movq	(%rbx), %rax	# *sp_6, tmp114
	movq	%rax, -56(%rbp)	# tmp114, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_6 + -8B], tmp115
	movq	%rax, -48(%rbp)	# tmp115, left
	movq	-48(%rbp), %rax	# left, tmp116
	movl	12(%rax), %eax	# left_21->sv_flags, D.24187
	andl	$268435456, %eax	#, D.24187
	testl	%eax, %eax	# D.24187
	jne	.L1210	#,
	.loc 1 2503 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp117
	movl	12(%rax), %eax	# right_20->sv_flags, D.24187
	andl	$268435456, %eax	#, D.24187
	testl	%eax, %eax	# D.24187
	je	.L1209	#,
.L1210:
	.loc 1 2503 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.882
	movzbl	36(%rax), %eax	# PL_op.882_26->op_flags, D.24183
	movzbl	%al, %eax	# D.24183, D.24184
	andl	$64, %eax	#, D.24184
	testl	%eax, %eax	# D.24184
	je	.L1211	#,
	movl	$4, %eax	#, iftmp.881
	jmp	.L1212	#
.L1211:
	.loc 1 2503 0 discriminator 2
	movl	$0, %eax	#, iftmp.881
.L1212:
	.loc 1 2503 0 discriminator 3
	movq	-56(%rbp), %rsi	# right, tmp118
	movq	-48(%rbp), %rdi	# left, tmp119
	movl	%eax, %ecx	# iftmp.881,
	movl	$10, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp120, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1209	#,
	.loc 1 2503 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.883
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.884
	movzbl	36(%rax), %eax	# PL_op.884_36->op_flags, D.24183
	movzbl	%al, %eax	# D.24183, D.24184
	andl	$64, %eax	#, D.24184
	testl	%eax, %eax	# D.24184
	jne	.L1213	#,
	.loc 1 2503 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp121
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24187
	andl	$1024, %eax	#, D.24187
	testl	%eax, %eax	# D.24187
	je	.L1214	#,
.L1213:
	.loc 1 2503 0 discriminator 1
	movq	-40(%rbp), %rcx	# tmpsv, tmp122
	movq	-64(%rbp), %rax	# targ, tmp123
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp122,
	movq	%rax, %rdi	# tmp123,
	call	Perl_sv_setsv_flags	#
.LBB283:
	movq	-64(%rbp), %rax	# targ, tmp124
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24187
	andl	$16384, %eax	#, D.24187
	testl	%eax, %eax	# D.24187
	je	.L1215	#,
	movq	-64(%rbp), %rax	# targ, tmp125
	movq	%rax, %rdi	# tmp125,
	call	Perl_mg_set	#
.L1215:
	.loc 1 2503 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp126
	movq	%rax, (%rbx)	# tmp126, *sp_35
.LBE283:
	jmp	.L1216	#
.L1214:
	.loc 1 2503 0 discriminator 1
	movq	-40(%rbp), %rax	# tmpsv, tmp127
	movq	%rax, (%rbx)	# tmp127, *sp_35
.L1216:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.885
	movq	(%rax), %rax	# PL_op.885_45->op_next, D.24182
	jmp	.L1217	#
.L1209:
.LBE282:
.LBB284:
	.loc 1 2505 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.886
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.886_47, PL_Sv.887
	movq	%rax, PL_Sv(%rip)	# PL_Sv.887, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.889
	movl	12(%rax), %eax	# PL_Sv.889_50->sv_flags, D.24187
	andl	$65536, %eax	#, D.24187
	testl	%eax, %eax	# D.24187
	je	.L1218	#,
	.loc 1 2505 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.890
	movq	(%rax), %rax	# PL_Sv.890_53->sv_any, D.24189
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_54].xiv_iv, iftmp.888
	jmp	.L1219	#
.L1218:
	.loc 1 2505 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.891
	movq	%rax, %rdi	# PL_Sv.891,
	call	Perl_sv_2iv	#
.L1219:
	.loc 1 2505 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.888, right
	movq	(%rbx), %rax	# *sp_48, D.24188
	movl	12(%rax), %eax	# _59->sv_flags, D.24187
	andl	$65536, %eax	#, D.24187
	testl	%eax, %eax	# D.24187
	je	.L1220	#,
	.loc 1 2505 0 discriminator 1
	movq	(%rbx), %rax	# *sp_48, D.24188
	movq	(%rax), %rax	# _62->sv_any, D.24189
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_63].xiv_iv, iftmp.892
	jmp	.L1221	#
.L1220:
	.loc 1 2505 0 discriminator 2
	movq	(%rbx), %rax	# *sp_48, D.24188
	movq	%rax, %rdi	# D.24188,
	call	Perl_sv_2iv	#
.L1221:
	.loc 1 2505 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.892, left
.LBB285:
	.loc 1 2506 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# left, tmp128
	imulq	-32(%rbp), %rax	# right, D.24190
	movq	%rax, %rdx	# D.24190, D.24190
	movq	-64(%rbp), %rax	# targ, tmp129
	movq	%rdx, %rsi	# D.24190,
	movq	%rax, %rdi	# tmp129,
	call	Perl_sv_setiv	#
.LBB286:
	movq	-64(%rbp), %rax	# targ, tmp130
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24187
	andl	$16384, %eax	#, D.24187
	testl	%eax, %eax	# D.24187
	je	.L1222	#,
	.loc 1 2506 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp131
	movq	%rax, %rdi	# tmp131,
	call	Perl_mg_set	#
.L1222:
	.loc 1 2506 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp132
	movq	%rax, (%rbx)	# tmp132, *sp_48
.LBE286:
.LBE285:
	.loc 1 2507 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.893
	movq	(%rax), %rax	# PL_op.893_72->op_next, D.24182
.L1217:
.LBE284:
	.loc 1 2509 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE58:
	.size	Perl_pp_i_multiply, .-Perl_pp_i_multiply
	.globl	Perl_pp_i_divide
	.type	Perl_pp_i_divide, @function
Perl_pp_i_divide:
.LFB59:
	.loc 1 2512 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2513 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.895
	movzbl	36(%rax), %eax	# PL_op.895_7->op_flags, D.24192
	movzbl	%al, %eax	# D.24192, D.24193
	andl	$64, %eax	#, D.24193
	testl	%eax, %eax	# D.24193
	je	.L1224	#,
	.loc 1 2513 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_6 + -8B], iftmp.894
	jmp	.L1225	#
.L1224:
	.loc 1 2513 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.896
	movq	PL_op(%rip), %rax	# PL_op, PL_op.897
	movq	24(%rax), %rax	# PL_op.897_13->op_targ, D.24194
	salq	$3, %rax	#, D.24194
	addq	%rdx, %rax	# PL_curpad.896, D.24195
	movq	(%rax), %rax	# *_16, iftmp.894
.L1225:
	.loc 1 2513 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.894, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.898
	testq	%rax, %rax	# PL_amagic_generation.898
	je	.L1226	#,
.LBB287:
	.loc 1 2513 0 discriminator 1
	movq	(%rbx), %rax	# *sp_6, tmp115
	movq	%rax, -48(%rbp)	# tmp115, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_6 + -8B], tmp116
	movq	%rax, -40(%rbp)	# tmp116, left
	movq	-40(%rbp), %rax	# left, tmp117
	movl	12(%rax), %eax	# left_21->sv_flags, D.24196
	andl	$268435456, %eax	#, D.24196
	testl	%eax, %eax	# D.24196
	jne	.L1227	#,
	.loc 1 2513 0 discriminator 2
	movq	-48(%rbp), %rax	# right, tmp118
	movl	12(%rax), %eax	# right_20->sv_flags, D.24196
	andl	$268435456, %eax	#, D.24196
	testl	%eax, %eax	# D.24196
	je	.L1226	#,
.L1227:
	.loc 1 2513 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.900
	movzbl	36(%rax), %eax	# PL_op.900_26->op_flags, D.24192
	movzbl	%al, %eax	# D.24192, D.24193
	andl	$64, %eax	#, D.24193
	testl	%eax, %eax	# D.24193
	je	.L1228	#,
	movl	$4, %eax	#, iftmp.899
	jmp	.L1229	#
.L1228:
	.loc 1 2513 0 discriminator 2
	movl	$0, %eax	#, iftmp.899
.L1229:
	.loc 1 2513 0 discriminator 3
	movq	-48(%rbp), %rsi	# right, tmp119
	movq	-40(%rbp), %rdi	# left, tmp120
	movl	%eax, %ecx	# iftmp.899,
	movl	$12, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -32(%rbp)	# tmp121, tmpsv
	cmpq	$0, -32(%rbp)	#, tmpsv
	je	.L1226	#,
	.loc 1 2513 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.901
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.902
	movzbl	36(%rax), %eax	# PL_op.902_36->op_flags, D.24192
	movzbl	%al, %eax	# D.24192, D.24193
	andl	$64, %eax	#, D.24193
	testl	%eax, %eax	# D.24193
	jne	.L1230	#,
	.loc 1 2513 0 discriminator 2
	movq	-56(%rbp), %rax	# targ, tmp122
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24196
	andl	$1024, %eax	#, D.24196
	testl	%eax, %eax	# D.24196
	je	.L1231	#,
.L1230:
	.loc 1 2513 0 discriminator 1
	movq	-32(%rbp), %rcx	# tmpsv, tmp123
	movq	-56(%rbp), %rax	# targ, tmp124
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp123,
	movq	%rax, %rdi	# tmp124,
	call	Perl_sv_setsv_flags	#
.LBB288:
	movq	-56(%rbp), %rax	# targ, tmp125
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24196
	andl	$16384, %eax	#, D.24196
	testl	%eax, %eax	# D.24196
	je	.L1232	#,
	movq	-56(%rbp), %rax	# targ, tmp126
	movq	%rax, %rdi	# tmp126,
	call	Perl_mg_set	#
.L1232:
	.loc 1 2513 0 discriminator 2
	movq	-56(%rbp), %rax	# targ, tmp127
	movq	%rax, (%rbx)	# tmp127, *sp_35
.LBE288:
	jmp	.L1233	#
.L1231:
	.loc 1 2513 0 discriminator 1
	movq	-32(%rbp), %rax	# tmpsv, tmp128
	movq	%rax, (%rbx)	# tmp128, *sp_35
.L1233:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.903
	movq	(%rax), %rax	# PL_op.903_45->op_next, D.24191
	jmp	.L1234	#
.L1226:
.LBE287:
.LBB289:
	.loc 1 2515 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.904
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.904_47, PL_Sv.905
	movq	%rax, PL_Sv(%rip)	# PL_Sv.905, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.907
	movl	12(%rax), %eax	# PL_Sv.907_50->sv_flags, D.24196
	andl	$65536, %eax	#, D.24196
	testl	%eax, %eax	# D.24196
	je	.L1235	#,
	.loc 1 2515 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.908
	movq	(%rax), %rax	# PL_Sv.908_53->sv_any, D.24198
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_54].xiv_iv, iftmp.906
	jmp	.L1236	#
.L1235:
	.loc 1 2515 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.909
	movq	%rax, %rdi	# PL_Sv.909,
	call	Perl_sv_2iv	#
.L1236:
	.loc 1 2515 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.906, value
	.loc 1 2516 0 is_stmt 1 discriminator 3
	cmpq	$0, -24(%rbp)	#, value
	jne	.L1237	#,
	.loc 1 2517 0
	movl	$.LC31, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L1234	#
.L1237:
	.loc 1 2518 0
	movq	%rbx, %rax	# sp, sp.910
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.910_60, PL_Sv.911
	movq	%rax, PL_Sv(%rip)	# PL_Sv.911, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.913
	movl	12(%rax), %eax	# PL_Sv.913_63->sv_flags, D.24196
	andl	$65536, %eax	#, D.24196
	testl	%eax, %eax	# D.24196
	je	.L1238	#,
	.loc 1 2518 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.914
	movq	(%rax), %rax	# PL_Sv.914_66->sv_any, D.24198
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_67].xiv_iv, iftmp.912
	jmp	.L1239	#
.L1238:
	.loc 1 2518 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.915
	movq	%rax, %rdi	# PL_Sv.915,
	call	Perl_sv_2iv	#
.L1239:
	.loc 1 2518 0 discriminator 3
	cqto
	idivq	-24(%rbp)	# value
	movq	%rax, -24(%rbp)	# tmp130, value
.LBB290:
	.loc 1 2519 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rdx	# value, tmp132
	movq	-56(%rbp), %rax	# targ, tmp133
	movq	%rdx, %rsi	# tmp132,
	movq	%rax, %rdi	# tmp133,
	call	Perl_sv_setiv	#
.LBB291:
	movq	-56(%rbp), %rax	# targ, tmp134
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24196
	andl	$16384, %eax	#, D.24196
	testl	%eax, %eax	# D.24196
	je	.L1240	#,
	.loc 1 2519 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp135
	movq	%rax, %rdi	# tmp135,
	call	Perl_mg_set	#
.L1240:
	.loc 1 2519 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-56(%rbp), %rax	# targ, tmp136
	movq	%rax, (%rbx)	# tmp136, *sp_74
.LBE291:
.LBE290:
	.loc 1 2520 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.916
	movq	(%rax), %rax	# PL_op.916_76->op_next, D.24191
.L1234:
.LBE289:
	.loc 1 2522 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE59:
	.size	Perl_pp_i_divide, .-Perl_pp_i_divide
	.type	Perl_pp_i_modulo_0, @function
Perl_pp_i_modulo_0:
.LFB60:
	.loc 1 2526 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2528 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.918
	movzbl	36(%rax), %eax	# PL_op.918_7->op_flags, D.24201
	movzbl	%al, %eax	# D.24201, D.24202
	andl	$64, %eax	#, D.24202
	testl	%eax, %eax	# D.24202
	je	.L1242	#,
	.loc 1 2528 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_6 + -8B], iftmp.917
	jmp	.L1243	#
.L1242:
	.loc 1 2528 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.919
	movq	PL_op(%rip), %rax	# PL_op, PL_op.920
	movq	24(%rax), %rax	# PL_op.920_13->op_targ, D.24203
	salq	$3, %rax	#, D.24203
	addq	%rdx, %rax	# PL_curpad.919, D.24204
	movq	(%rax), %rax	# *_16, iftmp.917
.L1243:
	.loc 1 2528 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.917, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.921
	testq	%rax, %rax	# PL_amagic_generation.921
	je	.L1244	#,
.LBB292:
	.loc 1 2528 0 discriminator 1
	movq	(%rbx), %rax	# *sp_6, tmp114
	movq	%rax, -56(%rbp)	# tmp114, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_6 + -8B], tmp115
	movq	%rax, -48(%rbp)	# tmp115, left
	movq	-48(%rbp), %rax	# left, tmp116
	movl	12(%rax), %eax	# left_21->sv_flags, D.24205
	andl	$268435456, %eax	#, D.24205
	testl	%eax, %eax	# D.24205
	jne	.L1245	#,
	.loc 1 2528 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp117
	movl	12(%rax), %eax	# right_20->sv_flags, D.24205
	andl	$268435456, %eax	#, D.24205
	testl	%eax, %eax	# D.24205
	je	.L1244	#,
.L1245:
	.loc 1 2528 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.923
	movzbl	36(%rax), %eax	# PL_op.923_26->op_flags, D.24201
	movzbl	%al, %eax	# D.24201, D.24202
	andl	$64, %eax	#, D.24202
	testl	%eax, %eax	# D.24202
	je	.L1246	#,
	movl	$4, %eax	#, iftmp.922
	jmp	.L1247	#
.L1246:
	.loc 1 2528 0 discriminator 2
	movl	$0, %eax	#, iftmp.922
.L1247:
	.loc 1 2528 0 discriminator 3
	movq	-56(%rbp), %rsi	# right, tmp118
	movq	-48(%rbp), %rdi	# left, tmp119
	movl	%eax, %ecx	# iftmp.922,
	movl	$14, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp120, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1244	#,
	.loc 1 2528 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.924
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.925
	movzbl	36(%rax), %eax	# PL_op.925_36->op_flags, D.24201
	movzbl	%al, %eax	# D.24201, D.24202
	andl	$64, %eax	#, D.24202
	testl	%eax, %eax	# D.24202
	jne	.L1248	#,
	.loc 1 2528 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp121
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24205
	andl	$1024, %eax	#, D.24205
	testl	%eax, %eax	# D.24205
	je	.L1249	#,
.L1248:
	.loc 1 2528 0 discriminator 1
	movq	-40(%rbp), %rcx	# tmpsv, tmp122
	movq	-64(%rbp), %rax	# targ, tmp123
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp122,
	movq	%rax, %rdi	# tmp123,
	call	Perl_sv_setsv_flags	#
.LBB293:
	movq	-64(%rbp), %rax	# targ, tmp124
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24205
	andl	$16384, %eax	#, D.24205
	testl	%eax, %eax	# D.24205
	je	.L1250	#,
	movq	-64(%rbp), %rax	# targ, tmp125
	movq	%rax, %rdi	# tmp125,
	call	Perl_mg_set	#
.L1250:
	.loc 1 2528 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp126
	movq	%rax, (%rbx)	# tmp126, *sp_35
.LBE293:
	jmp	.L1251	#
.L1249:
	.loc 1 2528 0 discriminator 1
	movq	-40(%rbp), %rax	# tmpsv, tmp127
	movq	%rax, (%rbx)	# tmp127, *sp_35
.L1251:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.926
	movq	(%rax), %rax	# PL_op.926_45->op_next, D.24200
	jmp	.L1252	#
.L1244:
.LBE292:
.LBB294:
	.loc 1 2530 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.927
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.927_47, PL_Sv.928
	movq	%rax, PL_Sv(%rip)	# PL_Sv.928, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.930
	movl	12(%rax), %eax	# PL_Sv.930_50->sv_flags, D.24205
	andl	$65536, %eax	#, D.24205
	testl	%eax, %eax	# D.24205
	je	.L1253	#,
	.loc 1 2530 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.931
	movq	(%rax), %rax	# PL_Sv.931_53->sv_any, D.24207
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_54].xiv_iv, iftmp.929
	jmp	.L1254	#
.L1253:
	.loc 1 2530 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.932
	movq	%rax, %rdi	# PL_Sv.932,
	call	Perl_sv_2iv	#
.L1254:
	.loc 1 2530 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.929, right
	movq	(%rbx), %rax	# *sp_48, D.24206
	movl	12(%rax), %eax	# _59->sv_flags, D.24205
	andl	$65536, %eax	#, D.24205
	testl	%eax, %eax	# D.24205
	je	.L1255	#,
	.loc 1 2530 0 discriminator 1
	movq	(%rbx), %rax	# *sp_48, D.24206
	movq	(%rax), %rax	# _62->sv_any, D.24207
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_63].xiv_iv, iftmp.933
	jmp	.L1256	#
.L1255:
	.loc 1 2530 0 discriminator 2
	movq	(%rbx), %rax	# *sp_48, D.24206
	movq	%rax, %rdi	# D.24206,
	call	Perl_sv_2iv	#
.L1256:
	.loc 1 2530 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.933, left
	.loc 1 2531 0 is_stmt 1 discriminator 3
	cmpq	$0, -32(%rbp)	#, right
	jne	.L1257	#,
	.loc 1 2532 0
	movl	$.LC35, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L1252	#
.L1257:
.LBB295:
	.loc 1 2533 0
	movq	-24(%rbp), %rax	# left, tmp128
	cqto
	idivq	-32(%rbp)	# right
	movq	-64(%rbp), %rax	# targ, tmp131
	movq	%rdx, %rsi	# D.24208,
	movq	%rax, %rdi	# tmp131,
	call	Perl_sv_setiv	#
.LBB296:
	movq	-64(%rbp), %rax	# targ, tmp132
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24205
	andl	$16384, %eax	#, D.24205
	testl	%eax, %eax	# D.24205
	je	.L1258	#,
	.loc 1 2533 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp133
	movq	%rax, %rdi	# tmp133,
	call	Perl_mg_set	#
.L1258:
	.loc 1 2533 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp134
	movq	%rax, (%rbx)	# tmp134, *sp_48
.LBE296:
.LBE295:
	.loc 1 2534 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.934
	movq	(%rax), %rax	# PL_op.934_73->op_next, D.24200
.L1252:
.LBE294:
	.loc 1 2536 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE60:
	.size	Perl_pp_i_modulo_0, .-Perl_pp_i_modulo_0
	.type	Perl_pp_i_modulo_1, @function
Perl_pp_i_modulo_1:
.LFB61:
	.loc 1 2541 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2545 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.936
	movzbl	36(%rax), %eax	# PL_op.936_7->op_flags, D.24211
	movzbl	%al, %eax	# D.24211, D.24212
	andl	$64, %eax	#, D.24212
	testl	%eax, %eax	# D.24212
	je	.L1260	#,
	.loc 1 2545 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_6 + -8B], iftmp.935
	jmp	.L1261	#
.L1260:
	.loc 1 2545 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.937
	movq	PL_op(%rip), %rax	# PL_op, PL_op.938
	movq	24(%rax), %rax	# PL_op.938_13->op_targ, D.24213
	salq	$3, %rax	#, D.24213
	addq	%rdx, %rax	# PL_curpad.937, D.24214
	movq	(%rax), %rax	# *_16, iftmp.935
.L1261:
	.loc 1 2545 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.935, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.939
	testq	%rax, %rax	# PL_amagic_generation.939
	je	.L1262	#,
.LBB297:
	.loc 1 2545 0 discriminator 1
	movq	(%rbx), %rax	# *sp_6, tmp115
	movq	%rax, -56(%rbp)	# tmp115, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_6 + -8B], tmp116
	movq	%rax, -48(%rbp)	# tmp116, left
	movq	-48(%rbp), %rax	# left, tmp117
	movl	12(%rax), %eax	# left_21->sv_flags, D.24215
	andl	$268435456, %eax	#, D.24215
	testl	%eax, %eax	# D.24215
	jne	.L1263	#,
	.loc 1 2545 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp118
	movl	12(%rax), %eax	# right_20->sv_flags, D.24215
	andl	$268435456, %eax	#, D.24215
	testl	%eax, %eax	# D.24215
	je	.L1262	#,
.L1263:
	.loc 1 2545 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.941
	movzbl	36(%rax), %eax	# PL_op.941_26->op_flags, D.24211
	movzbl	%al, %eax	# D.24211, D.24212
	andl	$64, %eax	#, D.24212
	testl	%eax, %eax	# D.24212
	je	.L1264	#,
	movl	$4, %eax	#, iftmp.940
	jmp	.L1265	#
.L1264:
	.loc 1 2545 0 discriminator 2
	movl	$0, %eax	#, iftmp.940
.L1265:
	.loc 1 2545 0 discriminator 3
	movq	-56(%rbp), %rsi	# right, tmp119
	movq	-48(%rbp), %rdi	# left, tmp120
	movl	%eax, %ecx	# iftmp.940,
	movl	$14, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp121, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1262	#,
	.loc 1 2545 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.942
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.943
	movzbl	36(%rax), %eax	# PL_op.943_36->op_flags, D.24211
	movzbl	%al, %eax	# D.24211, D.24212
	andl	$64, %eax	#, D.24212
	testl	%eax, %eax	# D.24212
	jne	.L1266	#,
	.loc 1 2545 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp122
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24215
	andl	$1024, %eax	#, D.24215
	testl	%eax, %eax	# D.24215
	je	.L1267	#,
.L1266:
	.loc 1 2545 0 discriminator 1
	movq	-40(%rbp), %rcx	# tmpsv, tmp123
	movq	-64(%rbp), %rax	# targ, tmp124
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp123,
	movq	%rax, %rdi	# tmp124,
	call	Perl_sv_setsv_flags	#
.LBB298:
	movq	-64(%rbp), %rax	# targ, tmp125
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24215
	andl	$16384, %eax	#, D.24215
	testl	%eax, %eax	# D.24215
	je	.L1268	#,
	movq	-64(%rbp), %rax	# targ, tmp126
	movq	%rax, %rdi	# tmp126,
	call	Perl_mg_set	#
.L1268:
	.loc 1 2545 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp127
	movq	%rax, (%rbx)	# tmp127, *sp_35
.LBE298:
	jmp	.L1269	#
.L1267:
	.loc 1 2545 0 discriminator 1
	movq	-40(%rbp), %rax	# tmpsv, tmp128
	movq	%rax, (%rbx)	# tmp128, *sp_35
.L1269:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.944
	movq	(%rax), %rax	# PL_op.944_45->op_next, D.24210
	jmp	.L1270	#
.L1262:
.LBE297:
.LBB299:
	.loc 1 2547 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.945
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.945_47, PL_Sv.946
	movq	%rax, PL_Sv(%rip)	# PL_Sv.946, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.948
	movl	12(%rax), %eax	# PL_Sv.948_50->sv_flags, D.24215
	andl	$65536, %eax	#, D.24215
	testl	%eax, %eax	# D.24215
	je	.L1271	#,
	.loc 1 2547 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.949
	movq	(%rax), %rax	# PL_Sv.949_53->sv_any, D.24217
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_54].xiv_iv, iftmp.947
	jmp	.L1272	#
.L1271:
	.loc 1 2547 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.950
	movq	%rax, %rdi	# PL_Sv.950,
	call	Perl_sv_2iv	#
.L1272:
	.loc 1 2547 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.947, right
	movq	(%rbx), %rax	# *sp_48, D.24216
	movl	12(%rax), %eax	# _59->sv_flags, D.24215
	andl	$65536, %eax	#, D.24215
	testl	%eax, %eax	# D.24215
	je	.L1273	#,
	.loc 1 2547 0 discriminator 1
	movq	(%rbx), %rax	# *sp_48, D.24216
	movq	(%rax), %rax	# _62->sv_any, D.24217
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_63].xiv_iv, iftmp.951
	jmp	.L1274	#
.L1273:
	.loc 1 2547 0 discriminator 2
	movq	(%rbx), %rax	# *sp_48, D.24216
	movq	%rax, %rdi	# D.24216,
	call	Perl_sv_2iv	#
.L1274:
	.loc 1 2547 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.951, left
	.loc 1 2548 0 is_stmt 1 discriminator 3
	cmpq	$0, -32(%rbp)	#, right
	jne	.L1275	#,
	.loc 1 2549 0
	movl	$.LC35, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L1270	#
.L1275:
.LBB300:
	.loc 1 2550 0
	movq	-32(%rbp), %rax	# right, tmp130
	sarq	$63, %rax	#, tmp129
	movq	%rax, %rdx	# tmp129, D.24218
	xorq	-32(%rbp), %rdx	# right, D.24218
	movq	%rdx, %rcx	# D.24218, D.24218
	subq	%rax, %rcx	# tmp129, D.24218
	movq	-24(%rbp), %rax	# left, tmp131
	cqto
	idivq	%rcx	# D.24218
	movq	%rdx, %rcx	# tmp132, tmp132
	movq	%rcx, %rdx	# tmp132, D.24218
	movq	-64(%rbp), %rax	# targ, tmp134
	movq	%rdx, %rsi	# D.24218,
	movq	%rax, %rdi	# tmp134,
	call	Perl_sv_setiv	#
.LBB301:
	movq	-64(%rbp), %rax	# targ, tmp135
	movl	12(%rax), %eax	# targ_18->sv_flags, D.24215
	andl	$16384, %eax	#, D.24215
	testl	%eax, %eax	# D.24215
	je	.L1276	#,
	.loc 1 2550 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp136
	movq	%rax, %rdi	# tmp136,
	call	Perl_mg_set	#
.L1276:
	.loc 1 2550 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp137
	movq	%rax, (%rbx)	# tmp137, *sp_48
.LBE301:
.LBE300:
	.loc 1 2551 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.952
	movq	(%rax), %rax	# PL_op.952_74->op_next, D.24210
.L1270:
.LBE299:
	.loc 1 2553 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE61:
	.size	Perl_pp_i_modulo_1, .-Perl_pp_i_modulo_1
	.globl	Perl_pp_i_modulo
	.type	Perl_pp_i_modulo, @function
Perl_pp_i_modulo:
.LFB62:
	.loc 1 2557 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2558 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.954
	movzbl	36(%rax), %eax	# PL_op.954_8->op_flags, D.24220
	movzbl	%al, %eax	# D.24220, D.24221
	andl	$64, %eax	#, D.24221
	testl	%eax, %eax	# D.24221
	je	.L1278	#,
	.loc 1 2558 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_7 + -8B], iftmp.953
	jmp	.L1279	#
.L1278:
	.loc 1 2558 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.955
	movq	PL_op(%rip), %rax	# PL_op, PL_op.956
	movq	24(%rax), %rax	# PL_op.956_14->op_targ, D.24222
	salq	$3, %rax	#, D.24222
	addq	%rdx, %rax	# PL_curpad.955, D.24223
	movq	(%rax), %rax	# *_17, iftmp.953
.L1279:
	.loc 1 2558 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.953, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.957
	testq	%rax, %rax	# PL_amagic_generation.957
	je	.L1280	#,
.LBB302:
	.loc 1 2558 0 discriminator 1
	movq	(%rbx), %rax	# *sp_7, tmp119
	movq	%rax, -64(%rbp)	# tmp119, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_7 + -8B], tmp120
	movq	%rax, -56(%rbp)	# tmp120, left
	movq	-56(%rbp), %rax	# left, tmp121
	movl	12(%rax), %eax	# left_22->sv_flags, D.24224
	andl	$268435456, %eax	#, D.24224
	testl	%eax, %eax	# D.24224
	jne	.L1281	#,
	.loc 1 2558 0 discriminator 2
	movq	-64(%rbp), %rax	# right, tmp122
	movl	12(%rax), %eax	# right_21->sv_flags, D.24224
	andl	$268435456, %eax	#, D.24224
	testl	%eax, %eax	# D.24224
	je	.L1280	#,
.L1281:
	.loc 1 2558 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.959
	movzbl	36(%rax), %eax	# PL_op.959_27->op_flags, D.24220
	movzbl	%al, %eax	# D.24220, D.24221
	andl	$64, %eax	#, D.24221
	testl	%eax, %eax	# D.24221
	je	.L1282	#,
	movl	$4, %eax	#, iftmp.958
	jmp	.L1283	#
.L1282:
	.loc 1 2558 0 discriminator 2
	movl	$0, %eax	#, iftmp.958
.L1283:
	.loc 1 2558 0 discriminator 3
	movq	-64(%rbp), %rsi	# right, tmp123
	movq	-56(%rbp), %rdi	# left, tmp124
	movl	%eax, %ecx	# iftmp.958,
	movl	$14, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -48(%rbp)	# tmp125, tmpsv
	cmpq	$0, -48(%rbp)	#, tmpsv
	je	.L1280	#,
	.loc 1 2558 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.960
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.961
	movzbl	36(%rax), %eax	# PL_op.961_37->op_flags, D.24220
	movzbl	%al, %eax	# D.24220, D.24221
	andl	$64, %eax	#, D.24221
	testl	%eax, %eax	# D.24221
	jne	.L1284	#,
	.loc 1 2558 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp126
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24224
	andl	$1024, %eax	#, D.24224
	testl	%eax, %eax	# D.24224
	je	.L1285	#,
.L1284:
	.loc 1 2558 0 discriminator 1
	movq	-48(%rbp), %rcx	# tmpsv, tmp127
	movq	-72(%rbp), %rax	# targ, tmp128
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp127,
	movq	%rax, %rdi	# tmp128,
	call	Perl_sv_setsv_flags	#
.LBB303:
	movq	-72(%rbp), %rax	# targ, tmp129
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24224
	andl	$16384, %eax	#, D.24224
	testl	%eax, %eax	# D.24224
	je	.L1286	#,
	movq	-72(%rbp), %rax	# targ, tmp130
	movq	%rax, %rdi	# tmp130,
	call	Perl_mg_set	#
.L1286:
	.loc 1 2558 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp131
	movq	%rax, (%rbx)	# tmp131, *sp_36
.LBE303:
	jmp	.L1287	#
.L1285:
	.loc 1 2558 0 discriminator 1
	movq	-48(%rbp), %rax	# tmpsv, tmp132
	movq	%rax, (%rbx)	# tmp132, *sp_36
.L1287:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.962
	movq	(%rax), %rax	# PL_op.962_46->op_next, D.24219
	jmp	.L1288	#
.L1280:
.LBE302:
.LBB304:
	.loc 1 2560 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.963
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.963_48, PL_Sv.964
	movq	%rax, PL_Sv(%rip)	# PL_Sv.964, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.966
	movl	12(%rax), %eax	# PL_Sv.966_51->sv_flags, D.24224
	andl	$65536, %eax	#, D.24224
	testl	%eax, %eax	# D.24224
	je	.L1289	#,
	.loc 1 2560 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.967
	movq	(%rax), %rax	# PL_Sv.967_54->sv_any, D.24226
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_55].xiv_iv, iftmp.965
	jmp	.L1290	#
.L1289:
	.loc 1 2560 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.968
	movq	%rax, %rdi	# PL_Sv.968,
	call	Perl_sv_2iv	#
.L1290:
	.loc 1 2560 0 discriminator 3
	movq	%rax, -80(%rbp)	# iftmp.965, right
	movq	(%rbx), %rax	# *sp_49, D.24225
	movl	12(%rax), %eax	# _60->sv_flags, D.24224
	andl	$65536, %eax	#, D.24224
	testl	%eax, %eax	# D.24224
	je	.L1291	#,
	.loc 1 2560 0 discriminator 1
	movq	(%rbx), %rax	# *sp_49, D.24225
	movq	(%rax), %rax	# _63->sv_any, D.24226
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_64].xiv_iv, iftmp.969
	jmp	.L1292	#
.L1291:
	.loc 1 2560 0 discriminator 2
	movq	(%rbx), %rax	# *sp_49, D.24225
	movq	%rax, %rdi	# D.24225,
	call	Perl_sv_2iv	#
.L1292:
	.loc 1 2560 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.969, left
	.loc 1 2561 0 is_stmt 1 discriminator 3
	cmpq	$0, -80(%rbp)	#, right
	jne	.L1293	#,
	.loc 1 2562 0
	movl	$.LC35, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L1288	#
.L1293:
	.loc 1 2564 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.970
	.loc 1 2565 0
	movq	$Perl_pp_i_modulo_0, PL_ppaddr+480(%rip)	#, PL_ppaddr
	movq	PL_ppaddr+480(%rip), %rdx	# PL_ppaddr, D.24227
	.loc 1 2564 0
	movq	%rdx, 16(%rax)	# D.24227, PL_op.970_70->op_ppaddr
.LBB305:
	.loc 1 2576 0
	movq	$3, -32(%rbp)	#, l
	.loc 1 2577 0
	movq	$-10, -24(%rbp)	#, r
	.loc 1 2580 0
	movq	-32(%rbp), %rax	# l, tmp133
	cqto
	idivq	-24(%rbp)	# r
	movq	%rdx, %rax	# tmp134, D.24228
	cmpq	$-3, %rax	#, D.24228
	jne	.L1294	#,
	.loc 1 2583 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.971
	.loc 1 2584 0
	movq	$Perl_pp_i_modulo_1, PL_ppaddr+480(%rip)	#, PL_ppaddr
	movq	PL_ppaddr+480(%rip), %rdx	# PL_ppaddr, D.24227
	.loc 1 2583 0
	movq	%rdx, 16(%rax)	# D.24227, PL_op.971_75->op_ppaddr
	.loc 1 2587 0
	movq	-80(%rbp), %rax	# right, tmp137
	sarq	$63, %rax	#, tmp136
	xorq	%rax, -80(%rbp)	# tmp136, right
	subq	%rax, -80(%rbp)	# tmp136, right
.L1294:
.LBE305:
.LBB306:
	.loc 1 2591 0
	movq	-40(%rbp), %rax	# left, tmp138
	cqto
	idivq	-80(%rbp)	# right
	movq	-72(%rbp), %rax	# targ, tmp141
	movq	%rdx, %rsi	# D.24228,
	movq	%rax, %rdi	# tmp141,
	call	Perl_sv_setiv	#
.LBB307:
	movq	-72(%rbp), %rax	# targ, tmp142
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24224
	andl	$16384, %eax	#, D.24224
	testl	%eax, %eax	# D.24224
	je	.L1295	#,
	.loc 1 2591 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp143
	movq	%rax, %rdi	# tmp143,
	call	Perl_mg_set	#
.L1295:
	.loc 1 2591 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp144
	movq	%rax, (%rbx)	# tmp144, *sp_49
.LBE307:
.LBE306:
	.loc 1 2592 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.972
	movq	(%rax), %rax	# PL_op.972_82->op_next, D.24219
.L1288:
.LBE304:
	.loc 1 2594 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE62:
	.size	Perl_pp_i_modulo, .-Perl_pp_i_modulo
	.globl	Perl_pp_i_add
	.type	Perl_pp_i_add, @function
Perl_pp_i_add:
.LFB63:
	.loc 1 2597 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2598 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.974
	movzbl	36(%rax), %eax	# PL_op.974_8->op_flags, D.24230
	movzbl	%al, %eax	# D.24230, D.24231
	andl	$64, %eax	#, D.24231
	testl	%eax, %eax	# D.24231
	je	.L1297	#,
	.loc 1 2598 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_7 + -8B], iftmp.973
	jmp	.L1298	#
.L1297:
	.loc 1 2598 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.975
	movq	PL_op(%rip), %rax	# PL_op, PL_op.976
	movq	24(%rax), %rax	# PL_op.976_14->op_targ, D.24232
	salq	$3, %rax	#, D.24232
	addq	%rdx, %rax	# PL_curpad.975, D.24233
	movq	(%rax), %rax	# *_17, iftmp.973
.L1298:
	.loc 1 2598 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.973, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.977
	testq	%rax, %rax	# PL_amagic_generation.977
	je	.L1299	#,
.LBB308:
	.loc 1 2598 0 discriminator 1
	movq	(%rbx), %rax	# *sp_7, tmp120
	movq	%rax, -64(%rbp)	# tmp120, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_7 + -8B], tmp121
	movq	%rax, -56(%rbp)	# tmp121, left
	movq	-56(%rbp), %rax	# left, tmp122
	movl	12(%rax), %eax	# left_22->sv_flags, D.24234
	andl	$268435456, %eax	#, D.24234
	testl	%eax, %eax	# D.24234
	jne	.L1300	#,
	.loc 1 2598 0 discriminator 2
	movq	-64(%rbp), %rax	# right, tmp123
	movl	12(%rax), %eax	# right_21->sv_flags, D.24234
	andl	$268435456, %eax	#, D.24234
	testl	%eax, %eax	# D.24234
	je	.L1299	#,
.L1300:
	.loc 1 2598 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.979
	movzbl	36(%rax), %eax	# PL_op.979_27->op_flags, D.24230
	movzbl	%al, %eax	# D.24230, D.24231
	andl	$64, %eax	#, D.24231
	testl	%eax, %eax	# D.24231
	je	.L1301	#,
	movl	$4, %eax	#, iftmp.978
	jmp	.L1302	#
.L1301:
	.loc 1 2598 0 discriminator 2
	movl	$0, %eax	#, iftmp.978
.L1302:
	.loc 1 2598 0 discriminator 3
	movq	-64(%rbp), %rsi	# right, tmp124
	movq	-56(%rbp), %rdi	# left, tmp125
	movl	%eax, %ecx	# iftmp.978,
	movl	$6, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -48(%rbp)	# tmp126, tmpsv
	cmpq	$0, -48(%rbp)	#, tmpsv
	je	.L1299	#,
	.loc 1 2598 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.980
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.981
	movzbl	36(%rax), %eax	# PL_op.981_37->op_flags, D.24230
	movzbl	%al, %eax	# D.24230, D.24231
	andl	$64, %eax	#, D.24231
	testl	%eax, %eax	# D.24231
	jne	.L1303	#,
	.loc 1 2598 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp127
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24234
	andl	$1024, %eax	#, D.24234
	testl	%eax, %eax	# D.24234
	je	.L1304	#,
.L1303:
	.loc 1 2598 0 discriminator 1
	movq	-48(%rbp), %rcx	# tmpsv, tmp128
	movq	-72(%rbp), %rax	# targ, tmp129
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp128,
	movq	%rax, %rdi	# tmp129,
	call	Perl_sv_setsv_flags	#
.LBB309:
	movq	-72(%rbp), %rax	# targ, tmp130
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24234
	andl	$16384, %eax	#, D.24234
	testl	%eax, %eax	# D.24234
	je	.L1305	#,
	movq	-72(%rbp), %rax	# targ, tmp131
	movq	%rax, %rdi	# tmp131,
	call	Perl_mg_set	#
.L1305:
	.loc 1 2598 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp132
	movq	%rax, (%rbx)	# tmp132, *sp_36
.LBE309:
	jmp	.L1306	#
.L1304:
	.loc 1 2598 0 discriminator 1
	movq	-48(%rbp), %rax	# tmpsv, tmp133
	movq	%rax, (%rbx)	# tmp133, *sp_36
.L1306:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.982
	movq	(%rax), %rax	# PL_op.982_46->op_next, D.24229
	jmp	.L1307	#
.L1299:
.LBE308:
.LBB310:
	.loc 1 2600 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.983
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.983_48, PL_Sv.984
	movq	%rax, PL_Sv(%rip)	# PL_Sv.984, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.986
	movl	12(%rax), %eax	# PL_Sv.986_51->sv_flags, D.24234
	andl	$65536, %eax	#, D.24234
	testl	%eax, %eax	# D.24234
	je	.L1308	#,
	.loc 1 2600 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.987
	movq	(%rax), %rax	# PL_Sv.987_54->sv_any, D.24236
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_55].xiv_iv, iftmp.985
	jmp	.L1309	#
.L1308:
	.loc 1 2600 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.988
	movq	%rax, %rdi	# PL_Sv.988,
	call	Perl_sv_2iv	#
.L1309:
	.loc 1 2600 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.985, right
	movq	(%rbx), %rax	# *sp_49, tmp134
	movq	%rax, -32(%rbp)	# tmp134, leftsv
	movq	-32(%rbp), %rax	# leftsv, tmp135
	movl	12(%rax), %eax	# leftsv_60->sv_flags, D.24234
	andl	$118423552, %eax	#, D.24234
	testl	%eax, %eax	# D.24234
	jne	.L1310	#,
	.loc 1 2600 0 discriminator 2
	movq	-32(%rbp), %rax	# leftsv, tmp136
	movl	12(%rax), %eax	# leftsv_60->sv_flags, D.24234
	andl	$8192, %eax	#, D.24234
	testl	%eax, %eax	# D.24234
	jne	.L1310	#,
	.loc 1 2600 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.990
	movzbl	36(%rax), %eax	# PL_op.990_65->op_flags, D.24230
	movzbl	%al, %eax	# D.24230, D.24231
	andl	$64, %eax	#, D.24231
	testl	%eax, %eax	# D.24231
	jne	.L1311	#,
.L1310:
	movq	-32(%rbp), %rax	# leftsv, tmp137
	movl	12(%rax), %eax	# leftsv_60->sv_flags, D.24234
	andl	$65536, %eax	#, D.24234
	testl	%eax, %eax	# D.24234
	je	.L1312	#,
	movq	-32(%rbp), %rax	# leftsv, tmp138
	movq	(%rax), %rax	# leftsv_60->sv_any, D.24236
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_72].xiv_iv, iftmp.991
	jmp	.L1313	#
.L1312:
	.loc 1 2600 0 discriminator 2
	movq	-32(%rbp), %rax	# leftsv, tmp139
	movq	%rax, %rdi	# tmp139,
	call	Perl_sv_2iv	#
.L1313:
	.loc 1 2600 0 discriminator 3
	jmp	.L1314	#
.L1311:
	.loc 1 2600 0 discriminator 1
	movl	$0, %eax	#, iftmp.989
.L1314:
	.loc 1 2600 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.989, left
.LBB311:
	.loc 1 2601 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# right, tmp140
	movq	-24(%rbp), %rdx	# left, tmp141
	addq	%rax, %rdx	# tmp140, D.24237
	movq	-72(%rbp), %rax	# targ, tmp142
	movq	%rdx, %rsi	# D.24237,
	movq	%rax, %rdi	# tmp142,
	call	Perl_sv_setiv	#
.LBB312:
	movq	-72(%rbp), %rax	# targ, tmp143
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24234
	andl	$16384, %eax	#, D.24234
	testl	%eax, %eax	# D.24234
	je	.L1315	#,
	.loc 1 2601 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp144
	movq	%rax, %rdi	# tmp144,
	call	Perl_mg_set	#
.L1315:
	.loc 1 2601 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp145
	movq	%rax, (%rbx)	# tmp145, *sp_49
.LBE312:
.LBE311:
	.loc 1 2602 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.992
	movq	(%rax), %rax	# PL_op.992_81->op_next, D.24229
.L1307:
.LBE310:
	.loc 1 2604 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE63:
	.size	Perl_pp_i_add, .-Perl_pp_i_add
	.globl	Perl_pp_i_subtract
	.type	Perl_pp_i_subtract, @function
Perl_pp_i_subtract:
.LFB64:
	.loc 1 2607 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2608 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.994
	movzbl	36(%rax), %eax	# PL_op.994_8->op_flags, D.24239
	movzbl	%al, %eax	# D.24239, D.24240
	andl	$64, %eax	#, D.24240
	testl	%eax, %eax	# D.24240
	je	.L1317	#,
	.loc 1 2608 0 is_stmt 0 discriminator 1
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_7 + -8B], iftmp.993
	jmp	.L1318	#
.L1317:
	.loc 1 2608 0 discriminator 2
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.995
	movq	PL_op(%rip), %rax	# PL_op, PL_op.996
	movq	24(%rax), %rax	# PL_op.996_14->op_targ, D.24241
	salq	$3, %rax	#, D.24241
	addq	%rdx, %rax	# PL_curpad.995, D.24242
	movq	(%rax), %rax	# *_17, iftmp.993
.L1318:
	.loc 1 2608 0 discriminator 3
	movq	%rax, -72(%rbp)	# iftmp.993, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.997
	testq	%rax, %rax	# PL_amagic_generation.997
	je	.L1319	#,
.LBB313:
	.loc 1 2608 0 discriminator 1
	movq	(%rbx), %rax	# *sp_7, tmp120
	movq	%rax, -64(%rbp)	# tmp120, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_7 + -8B], tmp121
	movq	%rax, -56(%rbp)	# tmp121, left
	movq	-56(%rbp), %rax	# left, tmp122
	movl	12(%rax), %eax	# left_22->sv_flags, D.24243
	andl	$268435456, %eax	#, D.24243
	testl	%eax, %eax	# D.24243
	jne	.L1320	#,
	.loc 1 2608 0 discriminator 2
	movq	-64(%rbp), %rax	# right, tmp123
	movl	12(%rax), %eax	# right_21->sv_flags, D.24243
	andl	$268435456, %eax	#, D.24243
	testl	%eax, %eax	# D.24243
	je	.L1319	#,
.L1320:
	.loc 1 2608 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.999
	movzbl	36(%rax), %eax	# PL_op.999_27->op_flags, D.24239
	movzbl	%al, %eax	# D.24239, D.24240
	andl	$64, %eax	#, D.24240
	testl	%eax, %eax	# D.24240
	je	.L1321	#,
	movl	$4, %eax	#, iftmp.998
	jmp	.L1322	#
.L1321:
	.loc 1 2608 0 discriminator 2
	movl	$0, %eax	#, iftmp.998
.L1322:
	.loc 1 2608 0 discriminator 3
	movq	-64(%rbp), %rsi	# right, tmp124
	movq	-56(%rbp), %rdi	# left, tmp125
	movl	%eax, %ecx	# iftmp.998,
	movl	$8, %edx	#,
	call	Perl_amagic_call	#
	movq	%rax, -48(%rbp)	# tmp126, tmpsv
	cmpq	$0, -48(%rbp)	#, tmpsv
	je	.L1319	#,
	.loc 1 2608 0 discriminator 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.1000
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1001
	movzbl	36(%rax), %eax	# PL_op.1001_37->op_flags, D.24239
	movzbl	%al, %eax	# D.24239, D.24240
	andl	$64, %eax	#, D.24240
	testl	%eax, %eax	# D.24240
	jne	.L1323	#,
	.loc 1 2608 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp127
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24243
	andl	$1024, %eax	#, D.24243
	testl	%eax, %eax	# D.24243
	je	.L1324	#,
.L1323:
	.loc 1 2608 0 discriminator 1
	movq	-48(%rbp), %rcx	# tmpsv, tmp128
	movq	-72(%rbp), %rax	# targ, tmp129
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp128,
	movq	%rax, %rdi	# tmp129,
	call	Perl_sv_setsv_flags	#
.LBB314:
	movq	-72(%rbp), %rax	# targ, tmp130
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24243
	andl	$16384, %eax	#, D.24243
	testl	%eax, %eax	# D.24243
	je	.L1325	#,
	movq	-72(%rbp), %rax	# targ, tmp131
	movq	%rax, %rdi	# tmp131,
	call	Perl_mg_set	#
.L1325:
	.loc 1 2608 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp132
	movq	%rax, (%rbx)	# tmp132, *sp_36
.LBE314:
	jmp	.L1326	#
.L1324:
	.loc 1 2608 0 discriminator 1
	movq	-48(%rbp), %rax	# tmpsv, tmp133
	movq	%rax, (%rbx)	# tmp133, *sp_36
.L1326:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1002
	movq	(%rax), %rax	# PL_op.1002_46->op_next, D.24238
	jmp	.L1327	#
.L1319:
.LBE313:
.LBB315:
	.loc 1 2610 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1003
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1003_48, PL_Sv.1004
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1004, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1006
	movl	12(%rax), %eax	# PL_Sv.1006_51->sv_flags, D.24243
	andl	$65536, %eax	#, D.24243
	testl	%eax, %eax	# D.24243
	je	.L1328	#,
	.loc 1 2610 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1007
	movq	(%rax), %rax	# PL_Sv.1007_54->sv_any, D.24245
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_55].xiv_iv, iftmp.1005
	jmp	.L1329	#
.L1328:
	.loc 1 2610 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1008
	movq	%rax, %rdi	# PL_Sv.1008,
	call	Perl_sv_2iv	#
.L1329:
	.loc 1 2610 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.1005, right
	movq	(%rbx), %rax	# *sp_49, tmp134
	movq	%rax, -32(%rbp)	# tmp134, leftsv
	movq	-32(%rbp), %rax	# leftsv, tmp135
	movl	12(%rax), %eax	# leftsv_60->sv_flags, D.24243
	andl	$118423552, %eax	#, D.24243
	testl	%eax, %eax	# D.24243
	jne	.L1330	#,
	.loc 1 2610 0 discriminator 2
	movq	-32(%rbp), %rax	# leftsv, tmp136
	movl	12(%rax), %eax	# leftsv_60->sv_flags, D.24243
	andl	$8192, %eax	#, D.24243
	testl	%eax, %eax	# D.24243
	jne	.L1330	#,
	.loc 1 2610 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1010
	movzbl	36(%rax), %eax	# PL_op.1010_65->op_flags, D.24239
	movzbl	%al, %eax	# D.24239, D.24240
	andl	$64, %eax	#, D.24240
	testl	%eax, %eax	# D.24240
	jne	.L1331	#,
.L1330:
	movq	-32(%rbp), %rax	# leftsv, tmp137
	movl	12(%rax), %eax	# leftsv_60->sv_flags, D.24243
	andl	$65536, %eax	#, D.24243
	testl	%eax, %eax	# D.24243
	je	.L1332	#,
	movq	-32(%rbp), %rax	# leftsv, tmp138
	movq	(%rax), %rax	# leftsv_60->sv_any, D.24245
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_72].xiv_iv, iftmp.1011
	jmp	.L1333	#
.L1332:
	.loc 1 2610 0 discriminator 2
	movq	-32(%rbp), %rax	# leftsv, tmp139
	movq	%rax, %rdi	# tmp139,
	call	Perl_sv_2iv	#
.L1333:
	.loc 1 2610 0 discriminator 3
	jmp	.L1334	#
.L1331:
	.loc 1 2610 0 discriminator 1
	movl	$0, %eax	#, iftmp.1009
.L1334:
	.loc 1 2610 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1009, left
.LBB316:
	.loc 1 2611 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# right, tmp140
	movq	-24(%rbp), %rdx	# left, tmp141
	subq	%rax, %rdx	# tmp140, D.24246
	movq	-72(%rbp), %rax	# targ, tmp142
	movq	%rdx, %rsi	# D.24246,
	movq	%rax, %rdi	# tmp142,
	call	Perl_sv_setiv	#
.LBB317:
	movq	-72(%rbp), %rax	# targ, tmp143
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24243
	andl	$16384, %eax	#, D.24243
	testl	%eax, %eax	# D.24243
	je	.L1335	#,
	.loc 1 2611 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp144
	movq	%rax, %rdi	# tmp144,
	call	Perl_mg_set	#
.L1335:
	.loc 1 2611 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp145
	movq	%rax, (%rbx)	# tmp145, *sp_49
.LBE317:
.LBE316:
	.loc 1 2612 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1012
	movq	(%rax), %rax	# PL_op.1012_81->op_next, D.24238
.L1327:
.LBE315:
	.loc 1 2614 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE64:
	.size	Perl_pp_i_subtract, .-Perl_pp_i_subtract
	.globl	Perl_pp_i_lt
	.type	Perl_pp_i_lt, @function
Perl_pp_i_lt:
.LFB65:
	.loc 1 2617 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2618 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1013
	testq	%rax, %rax	# PL_amagic_generation.1013
	je	.L1337	#,
.LBB318:
	.loc 1 2618 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, tmp87
	movq	%rax, -56(%rbp)	# tmp87, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_5 + -8B], tmp88
	movq	%rax, -48(%rbp)	# tmp88, left
	movq	-48(%rbp), %rax	# left, tmp89
	movl	12(%rax), %eax	# left_8->sv_flags, D.24248
	andl	$268435456, %eax	#, D.24248
	testl	%eax, %eax	# D.24248
	jne	.L1338	#,
	.loc 1 2618 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp90
	movl	12(%rax), %eax	# right_7->sv_flags, D.24248
	andl	$268435456, %eax	#, D.24248
	testl	%eax, %eax	# D.24248
	je	.L1337	#,
.L1338:
	.loc 1 2618 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp91
	movq	-48(%rbp), %rax	# left, tmp92
	movl	$0, %ecx	#,
	movl	$28, %edx	#,
	movq	%rax, %rdi	# tmp92,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp93, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1337	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.1014
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp94
	movq	%rax, (%rbx)	# tmp94, *sp_16
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1015
	movq	(%rax), %rax	# PL_op.1015_17->op_next, D.24247
	jmp	.L1339	#
.L1337:
.LBE318:
.LBB319:
	.loc 1 2620 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1016
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1016_19, PL_Sv.1017
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1017, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1019
	movl	12(%rax), %eax	# PL_Sv.1019_22->sv_flags, D.24248
	andl	$65536, %eax	#, D.24248
	testl	%eax, %eax	# D.24248
	je	.L1340	#,
	.loc 1 2620 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1020
	movq	(%rax), %rax	# PL_Sv.1020_25->sv_any, D.24249
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_26].xiv_iv, iftmp.1018
	jmp	.L1341	#
.L1340:
	.loc 1 2620 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1021
	movq	%rax, %rdi	# PL_Sv.1021,
	call	Perl_sv_2iv	#
.L1341:
	.loc 1 2620 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1018, right
	movq	(%rbx), %rax	# *sp_20, D.24250
	movl	12(%rax), %eax	# _31->sv_flags, D.24248
	andl	$65536, %eax	#, D.24248
	testl	%eax, %eax	# D.24248
	je	.L1342	#,
	.loc 1 2620 0 discriminator 1
	movq	(%rbx), %rax	# *sp_20, D.24250
	movq	(%rax), %rax	# _34->sv_any, D.24249
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_35].xiv_iv, iftmp.1022
	jmp	.L1343	#
.L1342:
	.loc 1 2620 0 discriminator 2
	movq	(%rbx), %rax	# *sp_20, D.24250
	movq	%rax, %rdi	# D.24250,
	call	Perl_sv_2iv	#
.L1343:
	.loc 1 2620 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1022, left
	.loc 1 2621 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# left, tmp95
	cmpq	-32(%rbp), %rax	# right, tmp95
	jge	.L1344	#,
	.loc 1 2621 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.1023
	jmp	.L1345	#
.L1344:
	.loc 1 2621 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.1023
.L1345:
	.loc 1 2621 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1023, *sp_20
	.loc 1 2622 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1024
	movq	(%rax), %rax	# PL_op.1024_42->op_next, D.24247
.L1339:
.LBE319:
	.loc 1 2624 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE65:
	.size	Perl_pp_i_lt, .-Perl_pp_i_lt
	.globl	Perl_pp_i_gt
	.type	Perl_pp_i_gt, @function
Perl_pp_i_gt:
.LFB66:
	.loc 1 2627 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2628 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1025
	testq	%rax, %rax	# PL_amagic_generation.1025
	je	.L1347	#,
.LBB320:
	.loc 1 2628 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, tmp87
	movq	%rax, -56(%rbp)	# tmp87, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_5 + -8B], tmp88
	movq	%rax, -48(%rbp)	# tmp88, left
	movq	-48(%rbp), %rax	# left, tmp89
	movl	12(%rax), %eax	# left_8->sv_flags, D.24252
	andl	$268435456, %eax	#, D.24252
	testl	%eax, %eax	# D.24252
	jne	.L1348	#,
	.loc 1 2628 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp90
	movl	12(%rax), %eax	# right_7->sv_flags, D.24252
	andl	$268435456, %eax	#, D.24252
	testl	%eax, %eax	# D.24252
	je	.L1347	#,
.L1348:
	.loc 1 2628 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp91
	movq	-48(%rbp), %rax	# left, tmp92
	movl	$0, %ecx	#,
	movl	$30, %edx	#,
	movq	%rax, %rdi	# tmp92,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp93, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1347	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.1026
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp94
	movq	%rax, (%rbx)	# tmp94, *sp_16
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1027
	movq	(%rax), %rax	# PL_op.1027_17->op_next, D.24251
	jmp	.L1349	#
.L1347:
.LBE320:
.LBB321:
	.loc 1 2630 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1028
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1028_19, PL_Sv.1029
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1029, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1031
	movl	12(%rax), %eax	# PL_Sv.1031_22->sv_flags, D.24252
	andl	$65536, %eax	#, D.24252
	testl	%eax, %eax	# D.24252
	je	.L1350	#,
	.loc 1 2630 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1032
	movq	(%rax), %rax	# PL_Sv.1032_25->sv_any, D.24253
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_26].xiv_iv, iftmp.1030
	jmp	.L1351	#
.L1350:
	.loc 1 2630 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1033
	movq	%rax, %rdi	# PL_Sv.1033,
	call	Perl_sv_2iv	#
.L1351:
	.loc 1 2630 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1030, right
	movq	(%rbx), %rax	# *sp_20, D.24254
	movl	12(%rax), %eax	# _31->sv_flags, D.24252
	andl	$65536, %eax	#, D.24252
	testl	%eax, %eax	# D.24252
	je	.L1352	#,
	.loc 1 2630 0 discriminator 1
	movq	(%rbx), %rax	# *sp_20, D.24254
	movq	(%rax), %rax	# _34->sv_any, D.24253
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_35].xiv_iv, iftmp.1034
	jmp	.L1353	#
.L1352:
	.loc 1 2630 0 discriminator 2
	movq	(%rbx), %rax	# *sp_20, D.24254
	movq	%rax, %rdi	# D.24254,
	call	Perl_sv_2iv	#
.L1353:
	.loc 1 2630 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1034, left
	.loc 1 2631 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# left, tmp95
	cmpq	-32(%rbp), %rax	# right, tmp95
	jle	.L1354	#,
	.loc 1 2631 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.1035
	jmp	.L1355	#
.L1354:
	.loc 1 2631 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.1035
.L1355:
	.loc 1 2631 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1035, *sp_20
	.loc 1 2632 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1036
	movq	(%rax), %rax	# PL_op.1036_42->op_next, D.24251
.L1349:
.LBE321:
	.loc 1 2634 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE66:
	.size	Perl_pp_i_gt, .-Perl_pp_i_gt
	.globl	Perl_pp_i_le
	.type	Perl_pp_i_le, @function
Perl_pp_i_le:
.LFB67:
	.loc 1 2637 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2638 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1037
	testq	%rax, %rax	# PL_amagic_generation.1037
	je	.L1357	#,
.LBB322:
	.loc 1 2638 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, tmp87
	movq	%rax, -56(%rbp)	# tmp87, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_5 + -8B], tmp88
	movq	%rax, -48(%rbp)	# tmp88, left
	movq	-48(%rbp), %rax	# left, tmp89
	movl	12(%rax), %eax	# left_8->sv_flags, D.24256
	andl	$268435456, %eax	#, D.24256
	testl	%eax, %eax	# D.24256
	jne	.L1358	#,
	.loc 1 2638 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp90
	movl	12(%rax), %eax	# right_7->sv_flags, D.24256
	andl	$268435456, %eax	#, D.24256
	testl	%eax, %eax	# D.24256
	je	.L1357	#,
.L1358:
	.loc 1 2638 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp91
	movq	-48(%rbp), %rax	# left, tmp92
	movl	$0, %ecx	#,
	movl	$29, %edx	#,
	movq	%rax, %rdi	# tmp92,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp93, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1357	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.1038
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp94
	movq	%rax, (%rbx)	# tmp94, *sp_16
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1039
	movq	(%rax), %rax	# PL_op.1039_17->op_next, D.24255
	jmp	.L1359	#
.L1357:
.LBE322:
.LBB323:
	.loc 1 2640 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1040
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1040_19, PL_Sv.1041
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1041, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1043
	movl	12(%rax), %eax	# PL_Sv.1043_22->sv_flags, D.24256
	andl	$65536, %eax	#, D.24256
	testl	%eax, %eax	# D.24256
	je	.L1360	#,
	.loc 1 2640 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1044
	movq	(%rax), %rax	# PL_Sv.1044_25->sv_any, D.24257
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_26].xiv_iv, iftmp.1042
	jmp	.L1361	#
.L1360:
	.loc 1 2640 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1045
	movq	%rax, %rdi	# PL_Sv.1045,
	call	Perl_sv_2iv	#
.L1361:
	.loc 1 2640 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1042, right
	movq	(%rbx), %rax	# *sp_20, D.24258
	movl	12(%rax), %eax	# _31->sv_flags, D.24256
	andl	$65536, %eax	#, D.24256
	testl	%eax, %eax	# D.24256
	je	.L1362	#,
	.loc 1 2640 0 discriminator 1
	movq	(%rbx), %rax	# *sp_20, D.24258
	movq	(%rax), %rax	# _34->sv_any, D.24257
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_35].xiv_iv, iftmp.1046
	jmp	.L1363	#
.L1362:
	.loc 1 2640 0 discriminator 2
	movq	(%rbx), %rax	# *sp_20, D.24258
	movq	%rax, %rdi	# D.24258,
	call	Perl_sv_2iv	#
.L1363:
	.loc 1 2640 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1046, left
	.loc 1 2641 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# left, tmp95
	cmpq	-32(%rbp), %rax	# right, tmp95
	jg	.L1364	#,
	.loc 1 2641 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.1047
	jmp	.L1365	#
.L1364:
	.loc 1 2641 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.1047
.L1365:
	.loc 1 2641 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1047, *sp_20
	.loc 1 2642 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1048
	movq	(%rax), %rax	# PL_op.1048_42->op_next, D.24255
.L1359:
.LBE323:
	.loc 1 2644 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE67:
	.size	Perl_pp_i_le, .-Perl_pp_i_le
	.globl	Perl_pp_i_ge
	.type	Perl_pp_i_ge, @function
Perl_pp_i_ge:
.LFB68:
	.loc 1 2647 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2648 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1049
	testq	%rax, %rax	# PL_amagic_generation.1049
	je	.L1367	#,
.LBB324:
	.loc 1 2648 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, tmp87
	movq	%rax, -56(%rbp)	# tmp87, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_5 + -8B], tmp88
	movq	%rax, -48(%rbp)	# tmp88, left
	movq	-48(%rbp), %rax	# left, tmp89
	movl	12(%rax), %eax	# left_8->sv_flags, D.24260
	andl	$268435456, %eax	#, D.24260
	testl	%eax, %eax	# D.24260
	jne	.L1368	#,
	.loc 1 2648 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp90
	movl	12(%rax), %eax	# right_7->sv_flags, D.24260
	andl	$268435456, %eax	#, D.24260
	testl	%eax, %eax	# D.24260
	je	.L1367	#,
.L1368:
	.loc 1 2648 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp91
	movq	-48(%rbp), %rax	# left, tmp92
	movl	$0, %ecx	#,
	movl	$31, %edx	#,
	movq	%rax, %rdi	# tmp92,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp93, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1367	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.1050
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp94
	movq	%rax, (%rbx)	# tmp94, *sp_16
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1051
	movq	(%rax), %rax	# PL_op.1051_17->op_next, D.24259
	jmp	.L1369	#
.L1367:
.LBE324:
.LBB325:
	.loc 1 2650 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1052
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1052_19, PL_Sv.1053
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1053, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1055
	movl	12(%rax), %eax	# PL_Sv.1055_22->sv_flags, D.24260
	andl	$65536, %eax	#, D.24260
	testl	%eax, %eax	# D.24260
	je	.L1370	#,
	.loc 1 2650 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1056
	movq	(%rax), %rax	# PL_Sv.1056_25->sv_any, D.24261
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_26].xiv_iv, iftmp.1054
	jmp	.L1371	#
.L1370:
	.loc 1 2650 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1057
	movq	%rax, %rdi	# PL_Sv.1057,
	call	Perl_sv_2iv	#
.L1371:
	.loc 1 2650 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1054, right
	movq	(%rbx), %rax	# *sp_20, D.24262
	movl	12(%rax), %eax	# _31->sv_flags, D.24260
	andl	$65536, %eax	#, D.24260
	testl	%eax, %eax	# D.24260
	je	.L1372	#,
	.loc 1 2650 0 discriminator 1
	movq	(%rbx), %rax	# *sp_20, D.24262
	movq	(%rax), %rax	# _34->sv_any, D.24261
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_35].xiv_iv, iftmp.1058
	jmp	.L1373	#
.L1372:
	.loc 1 2650 0 discriminator 2
	movq	(%rbx), %rax	# *sp_20, D.24262
	movq	%rax, %rdi	# D.24262,
	call	Perl_sv_2iv	#
.L1373:
	.loc 1 2650 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1058, left
	.loc 1 2651 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# left, tmp95
	cmpq	-32(%rbp), %rax	# right, tmp95
	jl	.L1374	#,
	.loc 1 2651 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.1059
	jmp	.L1375	#
.L1374:
	.loc 1 2651 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.1059
.L1375:
	.loc 1 2651 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1059, *sp_20
	.loc 1 2652 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1060
	movq	(%rax), %rax	# PL_op.1060_42->op_next, D.24259
.L1369:
.LBE325:
	.loc 1 2654 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE68:
	.size	Perl_pp_i_ge, .-Perl_pp_i_ge
	.globl	Perl_pp_i_eq
	.type	Perl_pp_i_eq, @function
Perl_pp_i_eq:
.LFB69:
	.loc 1 2657 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2658 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1061
	testq	%rax, %rax	# PL_amagic_generation.1061
	je	.L1377	#,
.LBB326:
	.loc 1 2658 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, tmp87
	movq	%rax, -56(%rbp)	# tmp87, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_5 + -8B], tmp88
	movq	%rax, -48(%rbp)	# tmp88, left
	movq	-48(%rbp), %rax	# left, tmp89
	movl	12(%rax), %eax	# left_8->sv_flags, D.24264
	andl	$268435456, %eax	#, D.24264
	testl	%eax, %eax	# D.24264
	jne	.L1378	#,
	.loc 1 2658 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp90
	movl	12(%rax), %eax	# right_7->sv_flags, D.24264
	andl	$268435456, %eax	#, D.24264
	testl	%eax, %eax	# D.24264
	je	.L1377	#,
.L1378:
	.loc 1 2658 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp91
	movq	-48(%rbp), %rax	# left, tmp92
	movl	$0, %ecx	#,
	movl	$32, %edx	#,
	movq	%rax, %rdi	# tmp92,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp93, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1377	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.1062
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp94
	movq	%rax, (%rbx)	# tmp94, *sp_16
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1063
	movq	(%rax), %rax	# PL_op.1063_17->op_next, D.24263
	jmp	.L1379	#
.L1377:
.LBE326:
.LBB327:
	.loc 1 2660 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1064
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1064_19, PL_Sv.1065
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1065, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1067
	movl	12(%rax), %eax	# PL_Sv.1067_22->sv_flags, D.24264
	andl	$65536, %eax	#, D.24264
	testl	%eax, %eax	# D.24264
	je	.L1380	#,
	.loc 1 2660 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1068
	movq	(%rax), %rax	# PL_Sv.1068_25->sv_any, D.24265
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_26].xiv_iv, iftmp.1066
	jmp	.L1381	#
.L1380:
	.loc 1 2660 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1069
	movq	%rax, %rdi	# PL_Sv.1069,
	call	Perl_sv_2iv	#
.L1381:
	.loc 1 2660 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1066, right
	movq	(%rbx), %rax	# *sp_20, D.24266
	movl	12(%rax), %eax	# _31->sv_flags, D.24264
	andl	$65536, %eax	#, D.24264
	testl	%eax, %eax	# D.24264
	je	.L1382	#,
	.loc 1 2660 0 discriminator 1
	movq	(%rbx), %rax	# *sp_20, D.24266
	movq	(%rax), %rax	# _34->sv_any, D.24265
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_35].xiv_iv, iftmp.1070
	jmp	.L1383	#
.L1382:
	.loc 1 2660 0 discriminator 2
	movq	(%rbx), %rax	# *sp_20, D.24266
	movq	%rax, %rdi	# D.24266,
	call	Perl_sv_2iv	#
.L1383:
	.loc 1 2660 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1070, left
	.loc 1 2661 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# left, tmp95
	cmpq	-32(%rbp), %rax	# right, tmp95
	jne	.L1384	#,
	.loc 1 2661 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.1071
	jmp	.L1385	#
.L1384:
	.loc 1 2661 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.1071
.L1385:
	.loc 1 2661 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1071, *sp_20
	.loc 1 2662 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1072
	movq	(%rax), %rax	# PL_op.1072_42->op_next, D.24263
.L1379:
.LBE327:
	.loc 1 2664 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE69:
	.size	Perl_pp_i_eq, .-Perl_pp_i_eq
	.globl	Perl_pp_i_ne
	.type	Perl_pp_i_ne, @function
Perl_pp_i_ne:
.LFB70:
	.loc 1 2667 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2668 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1073
	testq	%rax, %rax	# PL_amagic_generation.1073
	je	.L1387	#,
.LBB328:
	.loc 1 2668 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, tmp87
	movq	%rax, -56(%rbp)	# tmp87, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_5 + -8B], tmp88
	movq	%rax, -48(%rbp)	# tmp88, left
	movq	-48(%rbp), %rax	# left, tmp89
	movl	12(%rax), %eax	# left_8->sv_flags, D.24268
	andl	$268435456, %eax	#, D.24268
	testl	%eax, %eax	# D.24268
	jne	.L1388	#,
	.loc 1 2668 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp90
	movl	12(%rax), %eax	# right_7->sv_flags, D.24268
	andl	$268435456, %eax	#, D.24268
	testl	%eax, %eax	# D.24268
	je	.L1387	#,
.L1388:
	.loc 1 2668 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp91
	movq	-48(%rbp), %rax	# left, tmp92
	movl	$0, %ecx	#,
	movl	$33, %edx	#,
	movq	%rax, %rdi	# tmp92,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp93, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1387	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.1074
	leaq	-8(%rax), %rbx	#, sp
	movq	-40(%rbp), %rax	# tmpsv, tmp94
	movq	%rax, (%rbx)	# tmp94, *sp_16
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1075
	movq	(%rax), %rax	# PL_op.1075_17->op_next, D.24267
	jmp	.L1389	#
.L1387:
.LBE328:
.LBB329:
	.loc 1 2670 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1076
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1076_19, PL_Sv.1077
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1077, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1079
	movl	12(%rax), %eax	# PL_Sv.1079_22->sv_flags, D.24268
	andl	$65536, %eax	#, D.24268
	testl	%eax, %eax	# D.24268
	je	.L1390	#,
	.loc 1 2670 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1080
	movq	(%rax), %rax	# PL_Sv.1080_25->sv_any, D.24269
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_26].xiv_iv, iftmp.1078
	jmp	.L1391	#
.L1390:
	.loc 1 2670 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1081
	movq	%rax, %rdi	# PL_Sv.1081,
	call	Perl_sv_2iv	#
.L1391:
	.loc 1 2670 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1078, right
	movq	(%rbx), %rax	# *sp_20, D.24270
	movl	12(%rax), %eax	# _31->sv_flags, D.24268
	andl	$65536, %eax	#, D.24268
	testl	%eax, %eax	# D.24268
	je	.L1392	#,
	.loc 1 2670 0 discriminator 1
	movq	(%rbx), %rax	# *sp_20, D.24270
	movq	(%rax), %rax	# _34->sv_any, D.24269
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_35].xiv_iv, iftmp.1082
	jmp	.L1393	#
.L1392:
	.loc 1 2670 0 discriminator 2
	movq	(%rbx), %rax	# *sp_20, D.24270
	movq	%rax, %rdi	# D.24270,
	call	Perl_sv_2iv	#
.L1393:
	.loc 1 2670 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1082, left
	.loc 1 2671 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# left, tmp95
	cmpq	-32(%rbp), %rax	# right, tmp95
	je	.L1394	#,
	.loc 1 2671 0 is_stmt 0 discriminator 1
	movl	$PL_sv_yes, %eax	#, iftmp.1083
	jmp	.L1395	#
.L1394:
	.loc 1 2671 0 discriminator 2
	movl	$PL_sv_no, %eax	#, iftmp.1083
.L1395:
	.loc 1 2671 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1083, *sp_20
	.loc 1 2672 0 is_stmt 1 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1084
	movq	(%rax), %rax	# PL_op.1084_42->op_next, D.24267
.L1389:
.LBE329:
	.loc 1 2674 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE70:
	.size	Perl_pp_i_ne, .-Perl_pp_i_ne
	.globl	Perl_pp_i_ncmp
	.type	Perl_pp_i_ncmp, @function
Perl_pp_i_ncmp:
.LFB71:
	.loc 1 2677 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2678 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1085
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1086
	movq	24(%rax), %rax	# PL_op.1086_7->op_targ, D.24272
	salq	$3, %rax	#, D.24272
	addq	%rdx, %rax	# PL_curpad.1085, D.24273
	movq	(%rax), %rax	# *_10, tmp104
	movq	%rax, -64(%rbp)	# tmp104, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1087
	testq	%rax, %rax	# PL_amagic_generation.1087
	je	.L1397	#,
.LBB330:
	.loc 1 2678 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, tmp105
	movq	%rax, -56(%rbp)	# tmp105, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_5 + -8B], tmp106
	movq	%rax, -48(%rbp)	# tmp106, left
	movq	-48(%rbp), %rax	# left, tmp107
	movl	12(%rax), %eax	# left_14->sv_flags, D.24274
	andl	$268435456, %eax	#, D.24274
	testl	%eax, %eax	# D.24274
	jne	.L1398	#,
	.loc 1 2678 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp108
	movl	12(%rax), %eax	# right_13->sv_flags, D.24274
	andl	$268435456, %eax	#, D.24274
	testl	%eax, %eax	# D.24274
	je	.L1397	#,
.L1398:
	.loc 1 2678 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp109
	movq	-48(%rbp), %rax	# left, tmp110
	movl	$0, %ecx	#,
	movl	$34, %edx	#,
	movq	%rax, %rdi	# tmp110,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp111, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1397	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.1088
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1089
	movzbl	36(%rax), %eax	# PL_op.1089_23->op_flags, D.24275
	movzbl	%al, %eax	# D.24275, D.24276
	andl	$64, %eax	#, D.24276
	testl	%eax, %eax	# D.24276
	jne	.L1399	#,
	.loc 1 2678 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp112
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24274
	andl	$1024, %eax	#, D.24274
	testl	%eax, %eax	# D.24274
	je	.L1400	#,
.L1399:
	.loc 1 2678 0 discriminator 1
	movq	-40(%rbp), %rcx	# tmpsv, tmp113
	movq	-64(%rbp), %rax	# targ, tmp114
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp113,
	movq	%rax, %rdi	# tmp114,
	call	Perl_sv_setsv_flags	#
.LBB331:
	movq	-64(%rbp), %rax	# targ, tmp115
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24274
	andl	$16384, %eax	#, D.24274
	testl	%eax, %eax	# D.24274
	je	.L1401	#,
	movq	-64(%rbp), %rax	# targ, tmp116
	movq	%rax, %rdi	# tmp116,
	call	Perl_mg_set	#
.L1401:
	.loc 1 2678 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp117
	movq	%rax, (%rbx)	# tmp117, *sp_22
.LBE331:
	jmp	.L1402	#
.L1400:
	.loc 1 2678 0 discriminator 1
	movq	-40(%rbp), %rax	# tmpsv, tmp118
	movq	%rax, (%rbx)	# tmp118, *sp_22
.L1402:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1090
	movq	(%rax), %rax	# PL_op.1090_32->op_next, D.24271
	jmp	.L1403	#
.L1397:
.LBE330:
.LBB332:
	.loc 1 2680 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1091
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1091_34, PL_Sv.1092
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1092, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1094
	movl	12(%rax), %eax	# PL_Sv.1094_37->sv_flags, D.24274
	andl	$65536, %eax	#, D.24274
	testl	%eax, %eax	# D.24274
	je	.L1404	#,
	.loc 1 2680 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1095
	movq	(%rax), %rax	# PL_Sv.1095_40->sv_any, D.24278
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_41].xiv_iv, iftmp.1093
	jmp	.L1405	#
.L1404:
	.loc 1 2680 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1096
	movq	%rax, %rdi	# PL_Sv.1096,
	call	Perl_sv_2iv	#
.L1405:
	.loc 1 2680 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1093, right
	movq	(%rbx), %rax	# *sp_35, D.24277
	movl	12(%rax), %eax	# _46->sv_flags, D.24274
	andl	$65536, %eax	#, D.24274
	testl	%eax, %eax	# D.24274
	je	.L1406	#,
	.loc 1 2680 0 discriminator 1
	movq	(%rbx), %rax	# *sp_35, D.24277
	movq	(%rax), %rax	# _49->sv_any, D.24278
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_50].xiv_iv, iftmp.1097
	jmp	.L1407	#
.L1406:
	.loc 1 2680 0 discriminator 2
	movq	(%rbx), %rax	# *sp_35, D.24277
	movq	%rax, %rdi	# D.24277,
	call	Perl_sv_2iv	#
.L1407:
	.loc 1 2680 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1097, left
	.loc 1 2683 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# left, tmp119
	cmpq	-32(%rbp), %rax	# right, tmp119
	jle	.L1408	#,
	.loc 1 2684 0
	movl	$1, -68(%rbp)	#, value
	jmp	.L1409	#
.L1408:
	.loc 1 2685 0
	movq	-24(%rbp), %rax	# left, tmp120
	cmpq	-32(%rbp), %rax	# right, tmp120
	jge	.L1410	#,
	.loc 1 2686 0
	movl	$-1, -68(%rbp)	#, value
	jmp	.L1409	#
.L1410:
	.loc 1 2688 0
	movl	$0, -68(%rbp)	#, value
.L1409:
.LBB333:
	.loc 1 2689 0
	movl	-68(%rbp), %eax	# value, tmp121
	movslq	%eax, %rdx	# tmp121, D.24279
	movq	-64(%rbp), %rax	# targ, tmp122
	movq	%rdx, %rsi	# D.24279,
	movq	%rax, %rdi	# tmp122,
	call	Perl_sv_setiv	#
.LBB334:
	movq	-64(%rbp), %rax	# targ, tmp123
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24274
	andl	$16384, %eax	#, D.24274
	testl	%eax, %eax	# D.24274
	je	.L1411	#,
	.loc 1 2689 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp124
	movq	%rax, %rdi	# tmp124,
	call	Perl_mg_set	#
.L1411:
	.loc 1 2689 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp125
	movq	%rax, (%rbx)	# tmp125, *sp_35
.LBE334:
.LBE333:
	.loc 1 2690 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1098
	movq	(%rax), %rax	# PL_op.1098_62->op_next, D.24271
.L1403:
.LBE332:
	.loc 1 2692 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE71:
	.size	Perl_pp_i_ncmp, .-Perl_pp_i_ncmp
	.globl	Perl_pp_i_negate
	.type	Perl_pp_i_negate, @function
Perl_pp_i_negate:
.LFB72:
	.loc 1 2695 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2696 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1099
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1100
	movq	24(%rax), %rax	# PL_op.1100_5->op_targ, D.24281
	salq	$3, %rax	#, D.24281
	addq	%rdx, %rax	# PL_curpad.1099, D.24282
	movq	(%rax), %rax	# *_8, tmp89
	movq	%rax, -40(%rbp)	# tmp89, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1101
	testq	%rax, %rax	# PL_amagic_generation.1101
	je	.L1413	#,
.LBB335:
	.loc 1 2696 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_3, tmp90
	movq	%rax, -32(%rbp)	# tmp90, arg
.L1414:
	movq	-32(%rbp), %rax	# arg, tmp91
	movl	12(%rax), %eax	# arg_11->sv_flags, D.24283
	andl	$268435456, %eax	#, D.24283
	testl	%eax, %eax	# D.24283
	je	.L1413	#,
	movq	-32(%rbp), %rax	# arg, tmp92
	movl	$9, %ecx	#,
	movl	$57, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp92,
	call	Perl_amagic_call	#
	movq	%rax, -24(%rbp)	# tmp93, tmpsv
	cmpq	$0, -24(%rbp)	#, tmpsv
	je	.L1413	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-40(%rbp), %rax	# targ, tmp94
	movl	12(%rax), %eax	# targ_9->sv_flags, D.24283
	andl	$1024, %eax	#, D.24283
	testl	%eax, %eax	# D.24283
	je	.L1415	#,
	movq	-24(%rbp), %rcx	# tmpsv, tmp95
	movq	-40(%rbp), %rax	# targ, tmp96
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp95,
	movq	%rax, %rdi	# tmp96,
	call	Perl_sv_setsv_flags	#
.LBB336:
	movq	-40(%rbp), %rax	# targ, tmp97
	movl	12(%rax), %eax	# targ_9->sv_flags, D.24283
	andl	$16384, %eax	#, D.24283
	testl	%eax, %eax	# D.24283
	je	.L1416	#,
	movq	-40(%rbp), %rax	# targ, tmp98
	movq	%rax, %rdi	# tmp98,
	call	Perl_mg_set	#
.L1416:
	.loc 1 2696 0 discriminator 2
	movq	-40(%rbp), %rax	# targ, tmp99
	movq	%rax, (%rbx)	# tmp99, *sp_15
.LBE336:
	jmp	.L1417	#
.L1415:
	movq	-24(%rbp), %rax	# tmpsv, tmp100
	movq	%rax, (%rbx)	# tmp100, *sp_15
.L1417:
	.loc 1 2696 0 discriminator 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1102
	movq	(%rax), %rax	# PL_op.1102_21->op_next, D.24280
	jmp	.L1418	#
.L1413:
.LBE335:
.LBB337:
	.loc 1 2697 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_3, D.24284
	movl	12(%rax), %eax	# _23->sv_flags, D.24283
	andl	$65536, %eax	#, D.24283
	testl	%eax, %eax	# D.24283
	je	.L1419	#,
	.loc 1 2697 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_3, D.24284
	movq	(%rax), %rax	# _26->sv_any, D.24285
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_27].xiv_iv, D.24286
	negq	%rax	# iftmp.1103
	jmp	.L1420	#
.L1419:
	.loc 1 2697 0 discriminator 2
	movq	(%rbx), %rax	# *sp_3, D.24284
	movq	%rax, %rdi	# D.24284,
	call	Perl_sv_2iv	#
	negq	%rax	# iftmp.1103
.L1420:
	.loc 1 2697 0 discriminator 3
	movq	-40(%rbp), %rdx	# targ, tmp101
	movq	%rax, %rsi	# iftmp.1103,
	movq	%rdx, %rdi	# tmp101,
	call	Perl_sv_setiv	#
.LBB338:
	movq	-40(%rbp), %rax	# targ, tmp102
	movl	12(%rax), %eax	# targ_9->sv_flags, D.24283
	andl	$16384, %eax	#, D.24283
	testl	%eax, %eax	# D.24283
	je	.L1421	#,
	.loc 1 2697 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp103
	movq	%rax, %rdi	# tmp103,
	call	Perl_mg_set	#
.L1421:
	.loc 1 2697 0 discriminator 2
	movq	-40(%rbp), %rax	# targ, tmp104
	movq	%rax, (%rbx)	# tmp104, *sp_3
.LBE338:
.LBE337:
	.loc 1 2698 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1104
	movq	(%rax), %rax	# PL_op.1104_36->op_next, D.24280
.L1418:
	.loc 1 2699 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE72:
	.size	Perl_pp_i_negate, .-Perl_pp_i_negate
	.globl	Perl_pp_atan2
	.type	Perl_pp_atan2, @function
Perl_pp_atan2:
.LFB73:
	.loc 1 2704 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2705 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1105
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1106
	movq	24(%rax), %rax	# PL_op.1106_6->op_targ, D.24288
	salq	$3, %rax	#, D.24288
	addq	%rdx, %rax	# PL_curpad.1105, D.24289
	movq	(%rax), %rax	# *_9, tmp104
	movq	%rax, -64(%rbp)	# tmp104, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1107
	testq	%rax, %rax	# PL_amagic_generation.1107
	je	.L1423	#,
.LBB339:
	.loc 1 2705 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_4, tmp105
	movq	%rax, -56(%rbp)	# tmp105, right
	movq	-8(%rbx), %rax	# MEM[(struct SV * *)sp_4 + -8B], tmp106
	movq	%rax, -48(%rbp)	# tmp106, left
	movq	-48(%rbp), %rax	# left, tmp107
	movl	12(%rax), %eax	# left_13->sv_flags, D.24290
	andl	$268435456, %eax	#, D.24290
	testl	%eax, %eax	# D.24290
	jne	.L1424	#,
	.loc 1 2705 0 discriminator 2
	movq	-56(%rbp), %rax	# right, tmp108
	movl	12(%rax), %eax	# right_12->sv_flags, D.24290
	andl	$268435456, %eax	#, D.24290
	testl	%eax, %eax	# D.24290
	je	.L1423	#,
.L1424:
	.loc 1 2705 0 discriminator 1
	movq	-56(%rbp), %rsi	# right, tmp109
	movq	-48(%rbp), %rax	# left, tmp110
	movl	$0, %ecx	#,
	movl	$46, %edx	#,
	movq	%rax, %rdi	# tmp110,
	call	Perl_amagic_call	#
	movq	%rax, -40(%rbp)	# tmp111, tmpsv
	cmpq	$0, -40(%rbp)	#, tmpsv
	je	.L1423	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	%rbx, %rax	# sp, sp.1108
	leaq	-8(%rax), %rbx	#, sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1109
	movzbl	36(%rax), %eax	# PL_op.1109_22->op_flags, D.24291
	movzbl	%al, %eax	# D.24291, D.24292
	andl	$64, %eax	#, D.24292
	testl	%eax, %eax	# D.24292
	jne	.L1425	#,
	.loc 1 2705 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp112
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24290
	andl	$1024, %eax	#, D.24290
	testl	%eax, %eax	# D.24290
	je	.L1426	#,
.L1425:
	.loc 1 2705 0 discriminator 1
	movq	-40(%rbp), %rcx	# tmpsv, tmp113
	movq	-64(%rbp), %rax	# targ, tmp114
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp113,
	movq	%rax, %rdi	# tmp114,
	call	Perl_sv_setsv_flags	#
.LBB340:
	movq	-64(%rbp), %rax	# targ, tmp115
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24290
	andl	$16384, %eax	#, D.24290
	testl	%eax, %eax	# D.24290
	je	.L1427	#,
	movq	-64(%rbp), %rax	# targ, tmp116
	movq	%rax, %rdi	# tmp116,
	call	Perl_mg_set	#
.L1427:
	.loc 1 2705 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp117
	movq	%rax, (%rbx)	# tmp117, *sp_21
.LBE340:
	jmp	.L1428	#
.L1426:
	.loc 1 2705 0 discriminator 1
	movq	-40(%rbp), %rax	# tmpsv, tmp118
	movq	%rax, (%rbx)	# tmp118, *sp_21
.L1428:
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1110
	movq	(%rax), %rax	# PL_op.1110_31->op_next, D.24287
	jmp	.L1429	#
.L1423:
.LBE339:
.LBB341:
	.loc 1 2707 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1111
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1111_33, PL_Sv.1112
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1112, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1114
	movl	12(%rax), %eax	# PL_Sv.1114_36->sv_flags, D.24290
	andl	$131072, %eax	#, D.24290
	testl	%eax, %eax	# D.24290
	je	.L1430	#,
	.loc 1 2707 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1115
	movq	(%rax), %rax	# PL_Sv.1115_39->sv_any, D.24294
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_40].xnv_nv, iftmp.1113
	jmp	.L1431	#
.L1430:
	.loc 1 2707 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1116
	movq	%rax, %rdi	# PL_Sv.1116,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, iftmp.1113
.L1431:
	.loc 1 2707 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1113, right
	movq	(%rbx), %rax	# *sp_34, D.24293
	movl	12(%rax), %eax	# _45->sv_flags, D.24290
	andl	$131072, %eax	#, D.24290
	testl	%eax, %eax	# D.24290
	je	.L1432	#,
	.loc 1 2707 0 discriminator 1
	movq	(%rbx), %rax	# *sp_34, D.24293
	movq	(%rax), %rax	# _48->sv_any, D.24294
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_49].xnv_nv, iftmp.1117
	jmp	.L1433	#
.L1432:
	.loc 1 2707 0 discriminator 2
	movq	(%rbx), %rax	# *sp_34, D.24293
	movq	%rax, %rdi	# D.24293,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, iftmp.1117
.L1433:
	.loc 1 2707 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1117, left
.LBB342:
	.loc 1 2708 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rdx	# right, tmp119
	movq	-24(%rbp), %rax	# left, tmp120
	movq	%rdx, -72(%rbp)	# tmp119, %sfp
	movsd	-72(%rbp), %xmm1	# %sfp,
	movq	%rax, -72(%rbp)	# tmp120, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	call	atan2	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.24295
	movq	-64(%rbp), %rdx	# targ, tmp121
	movq	%rax, -72(%rbp)	# D.24295, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp121,
	call	Perl_sv_setnv	#
.LBB343:
	movq	-64(%rbp), %rax	# targ, tmp122
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24290
	andl	$16384, %eax	#, D.24290
	testl	%eax, %eax	# D.24290
	je	.L1434	#,
	.loc 1 2708 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp123
	movq	%rax, %rdi	# tmp123,
	call	Perl_mg_set	#
.L1434:
	.loc 1 2708 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp124
	movq	%rax, (%rbx)	# tmp124, *sp_34
.LBE343:
.LBE342:
	.loc 1 2709 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1118
	movq	(%rax), %rax	# PL_op.1118_58->op_next, D.24287
.L1429:
.LBE341:
	.loc 1 2711 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE73:
	.size	Perl_pp_atan2, .-Perl_pp_atan2
	.globl	Perl_pp_sin
	.type	Perl_pp_sin, @function
Perl_pp_sin:
.LFB74:
	.loc 1 2714 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2715 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1119
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1120
	movq	24(%rax), %rax	# PL_op.1120_6->op_targ, D.24297
	salq	$3, %rax	#, D.24297
	addq	%rdx, %rax	# PL_curpad.1119, D.24298
	movq	(%rax), %rax	# *_9, tmp93
	movq	%rax, -48(%rbp)	# tmp93, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1121
	testq	%rax, %rax	# PL_amagic_generation.1121
	je	.L1436	#,
.LBB344:
	.loc 1 2715 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_4, tmp94
	movq	%rax, -40(%rbp)	# tmp94, arg
.L1437:
	movq	-40(%rbp), %rax	# arg, tmp95
	movl	12(%rax), %eax	# arg_12->sv_flags, D.24299
	andl	$268435456, %eax	#, D.24299
	testl	%eax, %eax	# D.24299
	je	.L1436	#,
	movq	-40(%rbp), %rax	# arg, tmp96
	movl	$9, %ecx	#,
	movl	$48, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp96,
	call	Perl_amagic_call	#
	movq	%rax, -32(%rbp)	# tmp97, tmpsv
	cmpq	$0, -32(%rbp)	#, tmpsv
	je	.L1436	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-48(%rbp), %rax	# targ, tmp98
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24299
	andl	$1024, %eax	#, D.24299
	testl	%eax, %eax	# D.24299
	je	.L1438	#,
	movq	-32(%rbp), %rcx	# tmpsv, tmp99
	movq	-48(%rbp), %rax	# targ, tmp100
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp99,
	movq	%rax, %rdi	# tmp100,
	call	Perl_sv_setsv_flags	#
.LBB345:
	movq	-48(%rbp), %rax	# targ, tmp101
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24299
	andl	$16384, %eax	#, D.24299
	testl	%eax, %eax	# D.24299
	je	.L1439	#,
	movq	-48(%rbp), %rax	# targ, tmp102
	movq	%rax, %rdi	# tmp102,
	call	Perl_mg_set	#
.L1439:
	.loc 1 2715 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp103
	movq	%rax, (%rbx)	# tmp103, *sp_16
.LBE345:
	jmp	.L1440	#
.L1438:
	movq	-32(%rbp), %rax	# tmpsv, tmp104
	movq	%rax, (%rbx)	# tmp104, *sp_16
.L1440:
	.loc 1 2715 0 discriminator 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1122
	movq	(%rax), %rax	# PL_op.1122_22->op_next, D.24296
	jmp	.L1441	#
.L1436:
.LBE344:
.LBB346:
	.loc 1 2718 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1123
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1123_24, PL_Sv.1124
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1124, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1126
	movl	12(%rax), %eax	# PL_Sv.1126_27->sv_flags, D.24299
	andl	$131072, %eax	#, D.24299
	testl	%eax, %eax	# D.24299
	je	.L1442	#,
	.loc 1 2718 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1127
	movq	(%rax), %rax	# PL_Sv.1127_30->sv_any, D.24301
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_31].xnv_nv, iftmp.1125
	jmp	.L1443	#
.L1442:
	.loc 1 2718 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1128
	movq	%rax, %rdi	# PL_Sv.1128,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, iftmp.1125
.L1443:
	.loc 1 2718 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1125, value
	.loc 1 2719 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# value, tmp105
	movq	%rax, -56(%rbp)	# tmp105, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	sin	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, tmp106
	movq	%rax, -24(%rbp)	# tmp106, value
.LBB347:
	.loc 1 2720 0 discriminator 3
	movq	-24(%rbp), %rax	# value, tmp107
	movq	-48(%rbp), %rdx	# targ, tmp108
	movq	%rax, -56(%rbp)	# tmp107, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp108,
	call	Perl_sv_setnv	#
.LBB348:
	movq	-48(%rbp), %rax	# targ, tmp109
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24299
	andl	$16384, %eax	#, D.24299
	testl	%eax, %eax	# D.24299
	je	.L1444	#,
	.loc 1 2720 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp110
	movq	%rax, %rdi	# tmp110,
	call	Perl_mg_set	#
.L1444:
.LBB349:
	.loc 1 2720 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1129
	movq	%rax, %rdx	# PL_stack_max.1129, PL_stack_max.1130
	movq	%rbx, %rax	# sp, sp.1131
	subq	%rax, %rdx	# sp.1131, D.24302
	movq	%rdx, %rax	# D.24302, D.24302
	cmpq	$7, %rax	#, D.24302
	jg	.L1445	#,
	.loc 1 2720 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1445:
	.loc 1 2720 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-48(%rbp), %rax	# targ, tmp111
	movq	%rax, (%rbx)	# tmp111, *sp_44
.LBE349:
.LBE348:
.LBE347:
	.loc 1 2721 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1132
	movq	(%rax), %rax	# PL_op.1132_46->op_next, D.24296
.L1441:
.LBE346:
	.loc 1 2723 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE74:
	.size	Perl_pp_sin, .-Perl_pp_sin
	.globl	Perl_pp_cos
	.type	Perl_pp_cos, @function
Perl_pp_cos:
.LFB75:
	.loc 1 2726 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2727 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1133
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1134
	movq	24(%rax), %rax	# PL_op.1134_6->op_targ, D.24304
	salq	$3, %rax	#, D.24304
	addq	%rdx, %rax	# PL_curpad.1133, D.24305
	movq	(%rax), %rax	# *_9, tmp93
	movq	%rax, -48(%rbp)	# tmp93, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1135
	testq	%rax, %rax	# PL_amagic_generation.1135
	je	.L1447	#,
.LBB350:
	.loc 1 2727 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_4, tmp94
	movq	%rax, -40(%rbp)	# tmp94, arg
.L1448:
	movq	-40(%rbp), %rax	# arg, tmp95
	movl	12(%rax), %eax	# arg_12->sv_flags, D.24306
	andl	$268435456, %eax	#, D.24306
	testl	%eax, %eax	# D.24306
	je	.L1447	#,
	movq	-40(%rbp), %rax	# arg, tmp96
	movl	$9, %ecx	#,
	movl	$47, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp96,
	call	Perl_amagic_call	#
	movq	%rax, -32(%rbp)	# tmp97, tmpsv
	cmpq	$0, -32(%rbp)	#, tmpsv
	je	.L1447	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-48(%rbp), %rax	# targ, tmp98
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24306
	andl	$1024, %eax	#, D.24306
	testl	%eax, %eax	# D.24306
	je	.L1449	#,
	movq	-32(%rbp), %rcx	# tmpsv, tmp99
	movq	-48(%rbp), %rax	# targ, tmp100
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp99,
	movq	%rax, %rdi	# tmp100,
	call	Perl_sv_setsv_flags	#
.LBB351:
	movq	-48(%rbp), %rax	# targ, tmp101
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24306
	andl	$16384, %eax	#, D.24306
	testl	%eax, %eax	# D.24306
	je	.L1450	#,
	movq	-48(%rbp), %rax	# targ, tmp102
	movq	%rax, %rdi	# tmp102,
	call	Perl_mg_set	#
.L1450:
	.loc 1 2727 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp103
	movq	%rax, (%rbx)	# tmp103, *sp_16
.LBE351:
	jmp	.L1451	#
.L1449:
	movq	-32(%rbp), %rax	# tmpsv, tmp104
	movq	%rax, (%rbx)	# tmp104, *sp_16
.L1451:
	.loc 1 2727 0 discriminator 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1136
	movq	(%rax), %rax	# PL_op.1136_22->op_next, D.24303
	jmp	.L1452	#
.L1447:
.LBE350:
.LBB352:
	.loc 1 2730 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1137
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1137_24, PL_Sv.1138
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1138, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1140
	movl	12(%rax), %eax	# PL_Sv.1140_27->sv_flags, D.24306
	andl	$131072, %eax	#, D.24306
	testl	%eax, %eax	# D.24306
	je	.L1453	#,
	.loc 1 2730 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1141
	movq	(%rax), %rax	# PL_Sv.1141_30->sv_any, D.24308
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_31].xnv_nv, iftmp.1139
	jmp	.L1454	#
.L1453:
	.loc 1 2730 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1142
	movq	%rax, %rdi	# PL_Sv.1142,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, iftmp.1139
.L1454:
	.loc 1 2730 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1139, value
	.loc 1 2731 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# value, tmp105
	movq	%rax, -56(%rbp)	# tmp105, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	cos	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, tmp106
	movq	%rax, -24(%rbp)	# tmp106, value
.LBB353:
	.loc 1 2732 0 discriminator 3
	movq	-24(%rbp), %rax	# value, tmp107
	movq	-48(%rbp), %rdx	# targ, tmp108
	movq	%rax, -56(%rbp)	# tmp107, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp108,
	call	Perl_sv_setnv	#
.LBB354:
	movq	-48(%rbp), %rax	# targ, tmp109
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24306
	andl	$16384, %eax	#, D.24306
	testl	%eax, %eax	# D.24306
	je	.L1455	#,
	.loc 1 2732 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp110
	movq	%rax, %rdi	# tmp110,
	call	Perl_mg_set	#
.L1455:
.LBB355:
	.loc 1 2732 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1143
	movq	%rax, %rdx	# PL_stack_max.1143, PL_stack_max.1144
	movq	%rbx, %rax	# sp, sp.1145
	subq	%rax, %rdx	# sp.1145, D.24309
	movq	%rdx, %rax	# D.24309, D.24309
	cmpq	$7, %rax	#, D.24309
	jg	.L1456	#,
	.loc 1 2732 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1456:
	.loc 1 2732 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-48(%rbp), %rax	# targ, tmp111
	movq	%rax, (%rbx)	# tmp111, *sp_44
.LBE355:
.LBE354:
.LBE353:
	.loc 1 2733 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1146
	movq	(%rax), %rax	# PL_op.1146_46->op_next, D.24303
.L1452:
.LBE352:
	.loc 1 2735 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE75:
	.size	Perl_pp_cos, .-Perl_pp_cos
	.globl	Perl_pp_rand
	.type	Perl_pp_rand, @function
Perl_pp_rand:
.LFB76:
	.loc 1 2753 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2754 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1147
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1148
	movq	24(%rax), %rax	# PL_op.1148_8->op_targ, D.24310
	salq	$3, %rax	#, D.24310
	addq	%rdx, %rax	# PL_curpad.1147, D.24311
	movq	(%rax), %rax	# *_11, tmp92
	movq	%rax, -24(%rbp)	# tmp92, targ
	.loc 1 2756 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1149
	movzbl	37(%rax), %eax	# PL_op.1149_13->op_private, D.24312
	movzbl	%al, %eax	# D.24312, D.24313
	andl	$15, %eax	#, D.24313
	testl	%eax, %eax	# D.24313
	jg	.L1458	#,
	.loc 1 2757 0
	movabsq	$4607182418800017408, %rax	#, tmp93
	movq	%rax, -32(%rbp)	# tmp93, value
	jmp	.L1459	#
.L1458:
	.loc 1 2759 0
	movq	%rbx, %rax	# sp, sp.1150
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1150_18, PL_Sv.1151
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1151, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1153
	movl	12(%rax), %eax	# PL_Sv.1153_21->sv_flags, D.24314
	andl	$131072, %eax	#, D.24314
	testl	%eax, %eax	# D.24314
	je	.L1460	#,
	.loc 1 2759 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1154
	movq	(%rax), %rax	# PL_Sv.1154_24->sv_any, D.24315
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_25].xnv_nv, iftmp.1152
	jmp	.L1461	#
.L1460:
	.loc 1 2759 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1155
	movq	%rax, %rdi	# PL_Sv.1155,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -40(%rbp)	#, %sfp
	movq	-40(%rbp), %rax	# %sfp, iftmp.1152
.L1461:
	.loc 1 2759 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1152, value
.L1459:
	.loc 1 2760 0 is_stmt 1
	xorpd	%xmm0, %xmm0	# tmp94
	ucomisd	-32(%rbp), %xmm0	# value, tmp94
	jp	.L1462	#,
	xorpd	%xmm0, %xmm0	# tmp95
	ucomisd	-32(%rbp), %xmm0	# value, tmp95
	jne	.L1462	#,
	.loc 1 2761 0
	movabsq	$4607182418800017408, %rax	#, tmp96
	movq	%rax, -32(%rbp)	# tmp96, value
.L1462:
	.loc 1 2762 0
	movzbl	PL_srand_called(%rip), %eax	# PL_srand_called, PL_srand_called.1156
	testb	%al, %al	# PL_srand_called.1156
	jne	.L1464	#,
	.loc 1 2763 0
	call	Perl_seed	#
	movl	%eax, %edi	# D.24313,
	call	spec_srand	#
	.loc 1 2764 0
	movb	$1, PL_srand_called(%rip)	#, PL_srand_called
.L1464:
	.loc 1 2766 0
	call	spec_rand	#
	movsd	-32(%rbp), %xmm1	# value, tmp98
	mulsd	%xmm1, %xmm0	# tmp98, tmp97
	movsd	%xmm0, -32(%rbp)	# tmp97, value
.LBB356:
	.loc 1 2767 0
	movq	-32(%rbp), %rax	# value, tmp99
	movq	-24(%rbp), %rdx	# targ, tmp100
	movq	%rax, -40(%rbp)	# tmp99, %sfp
	movsd	-40(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp100,
	call	Perl_sv_setnv	#
.LBB357:
	movq	-24(%rbp), %rax	# targ, tmp101
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24314
	andl	$16384, %eax	#, D.24314
	testl	%eax, %eax	# D.24314
	je	.L1465	#,
	.loc 1 2767 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# targ, tmp102
	movq	%rax, %rdi	# tmp102,
	call	Perl_mg_set	#
.L1465:
.LBB358:
	.loc 1 2767 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1157
	movq	%rax, %rdx	# PL_stack_max.1157, PL_stack_max.1158
	movq	%rbx, %rax	# sp, sp.1159
	subq	%rax, %rdx	# sp.1159, D.24317
	movq	%rdx, %rax	# D.24317, D.24317
	cmpq	$7, %rax	#, D.24317
	jg	.L1466	#,
	.loc 1 2767 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1466:
	.loc 1 2767 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-24(%rbp), %rax	# targ, tmp103
	movq	%rax, (%rbx)	# tmp103, *sp_43
.LBE358:
.LBE357:
.LBE356:
	.loc 1 2768 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1160
	movq	(%rax), %rax	# PL_op.1160_45->op_next, D.24319
	.loc 1 2769 0 discriminator 2
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE76:
	.size	Perl_pp_rand, .-Perl_pp_rand
	.globl	Perl_pp_srand
	.type	Perl_pp_srand, @function
Perl_pp_srand:
.LFB77:
	.loc 1 2772 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2773 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 2775 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1161
	movzbl	37(%rax), %eax	# PL_op.1161_6->op_private, D.24320
	movzbl	%al, %eax	# D.24320, D.24321
	andl	$15, %eax	#, D.24321
	testl	%eax, %eax	# D.24321
	jg	.L1470	#,
	.loc 1 2776 0
	call	Perl_seed	#
	movl	%eax, %eax	# D.24322, tmp84
	movq	%rax, -24(%rbp)	# tmp84, anum
	jmp	.L1471	#
.L1470:
	.loc 1 2778 0
	movq	%rbx, %rax	# sp, sp.1162
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1162_12, PL_Sv.1163
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1163, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1165
	movl	12(%rax), %eax	# PL_Sv.1165_15->sv_flags, D.24322
	andl	$65536, %eax	#, D.24322
	testl	%eax, %eax	# D.24322
	je	.L1472	#,
	.loc 1 2778 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1166
	movq	(%rax), %rax	# PL_Sv.1166_18->sv_any, D.24323
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_19].xuv_uv, iftmp.1164
	jmp	.L1473	#
.L1472:
	.loc 1 2778 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1167
	movq	%rax, %rdi	# PL_Sv.1167,
	call	Perl_sv_2uv	#
.L1473:
	.loc 1 2778 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1164, anum
.L1471:
	.loc 1 2779 0 is_stmt 1
	movq	-24(%rbp), %rax	# anum, tmp82
	movl	%eax, %edi	# D.24321,
	call	spec_srand	#
	.loc 1 2780 0
	movb	$1, PL_srand_called(%rip)	#, PL_srand_called
	.loc 1 2781 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1168
	movq	%rax, %rdx	# PL_stack_max.1168, PL_stack_max.1169
	movq	%rbx, %rax	# sp, sp.1170
	subq	%rax, %rdx	# sp.1170, D.24324
	movq	%rdx, %rax	# D.24324, D.24324
	cmpq	$7, %rax	#, D.24324
	jg	.L1474	#,
	.loc 1 2781 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1474:
	.loc 1 2782 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_30
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1171
	movq	(%rax), %rax	# PL_op.1171_31->op_next, D.24325
	.loc 1 2783 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE77:
	.size	Perl_pp_srand, .-Perl_pp_srand
	.globl	Perl_pp_exp
	.type	Perl_pp_exp, @function
Perl_pp_exp:
.LFB78:
	.loc 1 2786 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2787 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1172
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1173
	movq	24(%rax), %rax	# PL_op.1173_6->op_targ, D.24327
	salq	$3, %rax	#, D.24327
	addq	%rdx, %rax	# PL_curpad.1172, D.24328
	movq	(%rax), %rax	# *_9, tmp93
	movq	%rax, -48(%rbp)	# tmp93, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1174
	testq	%rax, %rax	# PL_amagic_generation.1174
	je	.L1477	#,
.LBB359:
	.loc 1 2787 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_4, tmp94
	movq	%rax, -40(%rbp)	# tmp94, arg
.L1478:
	movq	-40(%rbp), %rax	# arg, tmp95
	movl	12(%rax), %eax	# arg_12->sv_flags, D.24329
	andl	$268435456, %eax	#, D.24329
	testl	%eax, %eax	# D.24329
	je	.L1477	#,
	movq	-40(%rbp), %rax	# arg, tmp96
	movl	$9, %ecx	#,
	movl	$49, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp96,
	call	Perl_amagic_call	#
	movq	%rax, -32(%rbp)	# tmp97, tmpsv
	cmpq	$0, -32(%rbp)	#, tmpsv
	je	.L1477	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-48(%rbp), %rax	# targ, tmp98
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24329
	andl	$1024, %eax	#, D.24329
	testl	%eax, %eax	# D.24329
	je	.L1479	#,
	movq	-32(%rbp), %rcx	# tmpsv, tmp99
	movq	-48(%rbp), %rax	# targ, tmp100
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp99,
	movq	%rax, %rdi	# tmp100,
	call	Perl_sv_setsv_flags	#
.LBB360:
	movq	-48(%rbp), %rax	# targ, tmp101
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24329
	andl	$16384, %eax	#, D.24329
	testl	%eax, %eax	# D.24329
	je	.L1480	#,
	movq	-48(%rbp), %rax	# targ, tmp102
	movq	%rax, %rdi	# tmp102,
	call	Perl_mg_set	#
.L1480:
	.loc 1 2787 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp103
	movq	%rax, (%rbx)	# tmp103, *sp_16
.LBE360:
	jmp	.L1481	#
.L1479:
	movq	-32(%rbp), %rax	# tmpsv, tmp104
	movq	%rax, (%rbx)	# tmp104, *sp_16
.L1481:
	.loc 1 2787 0 discriminator 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1175
	movq	(%rax), %rax	# PL_op.1175_22->op_next, D.24326
	jmp	.L1482	#
.L1477:
.LBE359:
.LBB361:
	.loc 1 2790 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1176
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1176_24, PL_Sv.1177
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1177, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1179
	movl	12(%rax), %eax	# PL_Sv.1179_27->sv_flags, D.24329
	andl	$131072, %eax	#, D.24329
	testl	%eax, %eax	# D.24329
	je	.L1483	#,
	.loc 1 2790 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1180
	movq	(%rax), %rax	# PL_Sv.1180_30->sv_any, D.24331
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_31].xnv_nv, iftmp.1178
	jmp	.L1484	#
.L1483:
	.loc 1 2790 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1181
	movq	%rax, %rdi	# PL_Sv.1181,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, iftmp.1178
.L1484:
	.loc 1 2790 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1178, value
	.loc 1 2791 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# value, tmp105
	movq	%rax, -56(%rbp)	# tmp105, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	exp	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, tmp106
	movq	%rax, -24(%rbp)	# tmp106, value
.LBB362:
	.loc 1 2792 0 discriminator 3
	movq	-24(%rbp), %rax	# value, tmp107
	movq	-48(%rbp), %rdx	# targ, tmp108
	movq	%rax, -56(%rbp)	# tmp107, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp108,
	call	Perl_sv_setnv	#
.LBB363:
	movq	-48(%rbp), %rax	# targ, tmp109
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24329
	andl	$16384, %eax	#, D.24329
	testl	%eax, %eax	# D.24329
	je	.L1485	#,
	.loc 1 2792 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp110
	movq	%rax, %rdi	# tmp110,
	call	Perl_mg_set	#
.L1485:
.LBB364:
	.loc 1 2792 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1182
	movq	%rax, %rdx	# PL_stack_max.1182, PL_stack_max.1183
	movq	%rbx, %rax	# sp, sp.1184
	subq	%rax, %rdx	# sp.1184, D.24332
	movq	%rdx, %rax	# D.24332, D.24332
	cmpq	$7, %rax	#, D.24332
	jg	.L1486	#,
	.loc 1 2792 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1486:
	.loc 1 2792 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-48(%rbp), %rax	# targ, tmp111
	movq	%rax, (%rbx)	# tmp111, *sp_44
.LBE364:
.LBE363:
.LBE362:
	.loc 1 2793 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1185
	movq	(%rax), %rax	# PL_op.1185_46->op_next, D.24326
.L1482:
.LBE361:
	.loc 1 2795 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE78:
	.size	Perl_pp_exp, .-Perl_pp_exp
	.section	.rodata
.LC37:
	.string	"Can't take log of %g"
	.text
	.globl	Perl_pp_log
	.type	Perl_pp_log, @function
Perl_pp_log:
.LFB79:
	.loc 1 2798 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2799 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1186
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1187
	movq	24(%rax), %rax	# PL_op.1187_6->op_targ, D.24334
	salq	$3, %rax	#, D.24334
	addq	%rdx, %rax	# PL_curpad.1186, D.24335
	movq	(%rax), %rax	# *_9, tmp93
	movq	%rax, -48(%rbp)	# tmp93, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1188
	testq	%rax, %rax	# PL_amagic_generation.1188
	je	.L1488	#,
.LBB365:
	.loc 1 2799 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_4, tmp94
	movq	%rax, -40(%rbp)	# tmp94, arg
.L1489:
	movq	-40(%rbp), %rax	# arg, tmp95
	movl	12(%rax), %eax	# arg_12->sv_flags, D.24336
	andl	$268435456, %eax	#, D.24336
	testl	%eax, %eax	# D.24336
	je	.L1488	#,
	movq	-40(%rbp), %rax	# arg, tmp96
	movl	$9, %ecx	#,
	movl	$50, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp96,
	call	Perl_amagic_call	#
	movq	%rax, -32(%rbp)	# tmp97, tmpsv
	cmpq	$0, -32(%rbp)	#, tmpsv
	je	.L1488	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-48(%rbp), %rax	# targ, tmp98
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24336
	andl	$1024, %eax	#, D.24336
	testl	%eax, %eax	# D.24336
	je	.L1490	#,
	movq	-32(%rbp), %rcx	# tmpsv, tmp99
	movq	-48(%rbp), %rax	# targ, tmp100
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp99,
	movq	%rax, %rdi	# tmp100,
	call	Perl_sv_setsv_flags	#
.LBB366:
	movq	-48(%rbp), %rax	# targ, tmp101
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24336
	andl	$16384, %eax	#, D.24336
	testl	%eax, %eax	# D.24336
	je	.L1491	#,
	movq	-48(%rbp), %rax	# targ, tmp102
	movq	%rax, %rdi	# tmp102,
	call	Perl_mg_set	#
.L1491:
	.loc 1 2799 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp103
	movq	%rax, (%rbx)	# tmp103, *sp_16
.LBE366:
	jmp	.L1492	#
.L1490:
	movq	-32(%rbp), %rax	# tmpsv, tmp104
	movq	%rax, (%rbx)	# tmp104, *sp_16
.L1492:
	.loc 1 2799 0 discriminator 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1189
	movq	(%rax), %rax	# PL_op.1189_22->op_next, D.24333
	jmp	.L1493	#
.L1488:
.LBE365:
.LBB367:
	.loc 1 2802 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1190
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1190_24, PL_Sv.1191
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1191, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1193
	movl	12(%rax), %eax	# PL_Sv.1193_27->sv_flags, D.24336
	andl	$131072, %eax	#, D.24336
	testl	%eax, %eax	# D.24336
	je	.L1494	#,
	.loc 1 2802 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1194
	movq	(%rax), %rax	# PL_Sv.1194_30->sv_any, D.24338
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_31].xnv_nv, iftmp.1192
	jmp	.L1495	#
.L1494:
	.loc 1 2802 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1195
	movq	%rax, %rdi	# PL_Sv.1195,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, iftmp.1192
.L1495:
	.loc 1 2802 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1192, value
	.loc 1 2803 0 is_stmt 1 discriminator 3
	xorpd	%xmm0, %xmm0	# tmp105
	ucomisd	-24(%rbp), %xmm0	# value, tmp105
	jb	.L1501	#,
	.loc 1 2805 0
	movq	-24(%rbp), %rax	# value, tmp106
	movq	%rax, -56(%rbp)	# tmp106, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	movl	$.LC37, %edi	#,
	movl	$1, %eax	#,
	call	Perl_die	#
	jmp	.L1493	#
.L1501:
	.loc 1 2807 0
	movq	-24(%rbp), %rax	# value, tmp107
	movq	%rax, -56(%rbp)	# tmp107, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	log	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, tmp108
	movq	%rax, -24(%rbp)	# tmp108, value
.LBB368:
	.loc 1 2808 0
	movq	-24(%rbp), %rax	# value, tmp109
	movq	-48(%rbp), %rdx	# targ, tmp110
	movq	%rax, -56(%rbp)	# tmp109, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp110,
	call	Perl_sv_setnv	#
.LBB369:
	movq	-48(%rbp), %rax	# targ, tmp111
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24336
	andl	$16384, %eax	#, D.24336
	testl	%eax, %eax	# D.24336
	je	.L1498	#,
	.loc 1 2808 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp112
	movq	%rax, %rdi	# tmp112,
	call	Perl_mg_set	#
.L1498:
.LBB370:
	.loc 1 2808 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1196
	movq	%rax, %rdx	# PL_stack_max.1196, PL_stack_max.1197
	movq	%rbx, %rax	# sp, sp.1198
	subq	%rax, %rdx	# sp.1198, D.24339
	movq	%rdx, %rax	# D.24339, D.24339
	cmpq	$7, %rax	#, D.24339
	jg	.L1499	#,
	.loc 1 2808 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1499:
	.loc 1 2808 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-48(%rbp), %rax	# targ, tmp113
	movq	%rax, (%rbx)	# tmp113, *sp_45
.LBE370:
.LBE369:
.LBE368:
	.loc 1 2809 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1199
	movq	(%rax), %rax	# PL_op.1199_47->op_next, D.24333
.L1493:
.LBE367:
	.loc 1 2811 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE79:
	.size	Perl_pp_log, .-Perl_pp_log
	.section	.rodata
.LC38:
	.string	"Can't take sqrt of %g"
	.text
	.globl	Perl_pp_sqrt
	.type	Perl_pp_sqrt, @function
Perl_pp_sqrt:
.LFB80:
	.loc 1 2814 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2815 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1200
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1201
	movq	24(%rax), %rax	# PL_op.1201_6->op_targ, D.24342
	salq	$3, %rax	#, D.24342
	addq	%rdx, %rax	# PL_curpad.1200, D.24343
	movq	(%rax), %rax	# *_9, tmp93
	movq	%rax, -48(%rbp)	# tmp93, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1202
	testq	%rax, %rax	# PL_amagic_generation.1202
	je	.L1503	#,
.LBB371:
	.loc 1 2815 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_4, tmp94
	movq	%rax, -40(%rbp)	# tmp94, arg
.L1504:
	movq	-40(%rbp), %rax	# arg, tmp95
	movl	12(%rax), %eax	# arg_12->sv_flags, D.24344
	andl	$268435456, %eax	#, D.24344
	testl	%eax, %eax	# D.24344
	je	.L1503	#,
	movq	-40(%rbp), %rax	# arg, tmp96
	movl	$9, %ecx	#,
	movl	$51, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp96,
	call	Perl_amagic_call	#
	movq	%rax, -32(%rbp)	# tmp97, tmpsv
	cmpq	$0, -32(%rbp)	#, tmpsv
	je	.L1503	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-48(%rbp), %rax	# targ, tmp98
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24344
	andl	$1024, %eax	#, D.24344
	testl	%eax, %eax	# D.24344
	je	.L1505	#,
	movq	-32(%rbp), %rcx	# tmpsv, tmp99
	movq	-48(%rbp), %rax	# targ, tmp100
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp99,
	movq	%rax, %rdi	# tmp100,
	call	Perl_sv_setsv_flags	#
.LBB372:
	movq	-48(%rbp), %rax	# targ, tmp101
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24344
	andl	$16384, %eax	#, D.24344
	testl	%eax, %eax	# D.24344
	je	.L1506	#,
	movq	-48(%rbp), %rax	# targ, tmp102
	movq	%rax, %rdi	# tmp102,
	call	Perl_mg_set	#
.L1506:
	.loc 1 2815 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp103
	movq	%rax, (%rbx)	# tmp103, *sp_16
.LBE372:
	jmp	.L1507	#
.L1505:
	movq	-32(%rbp), %rax	# tmpsv, tmp104
	movq	%rax, (%rbx)	# tmp104, *sp_16
.L1507:
	.loc 1 2815 0 discriminator 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1203
	movq	(%rax), %rax	# PL_op.1203_22->op_next, D.24341
	jmp	.L1508	#
.L1503:
.LBE371:
.LBB373:
	.loc 1 2818 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1204
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1204_24, PL_Sv.1205
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1205, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1207
	movl	12(%rax), %eax	# PL_Sv.1207_27->sv_flags, D.24344
	andl	$131072, %eax	#, D.24344
	testl	%eax, %eax	# D.24344
	je	.L1509	#,
	.loc 1 2818 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1208
	movq	(%rax), %rax	# PL_Sv.1208_30->sv_any, D.24346
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_31].xnv_nv, iftmp.1206
	jmp	.L1510	#
.L1509:
	.loc 1 2818 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1209
	movq	%rax, %rdi	# PL_Sv.1209,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, iftmp.1206
.L1510:
	.loc 1 2818 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1206, value
	.loc 1 2819 0 is_stmt 1 discriminator 3
	xorpd	%xmm0, %xmm0	# tmp105
	ucomisd	-24(%rbp), %xmm0	# value, tmp105
	jbe	.L1516	#,
	.loc 1 2821 0
	movq	-24(%rbp), %rax	# value, tmp106
	movq	%rax, -56(%rbp)	# tmp106, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	movl	$.LC38, %edi	#,
	movl	$1, %eax	#,
	call	Perl_die	#
	jmp	.L1508	#
.L1516:
	.loc 1 2823 0
	movq	-24(%rbp), %rax	# value, tmp107
	movq	%rax, -56(%rbp)	# tmp107, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	call	sqrt	#
	movsd	%xmm0, -56(%rbp)	#, %sfp
	movq	-56(%rbp), %rax	# %sfp, tmp108
	movq	%rax, -24(%rbp)	# tmp108, value
.LBB374:
	.loc 1 2824 0
	movq	-24(%rbp), %rax	# value, tmp109
	movq	-48(%rbp), %rdx	# targ, tmp110
	movq	%rax, -56(%rbp)	# tmp109, %sfp
	movsd	-56(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp110,
	call	Perl_sv_setnv	#
.LBB375:
	movq	-48(%rbp), %rax	# targ, tmp111
	movl	12(%rax), %eax	# targ_10->sv_flags, D.24344
	andl	$16384, %eax	#, D.24344
	testl	%eax, %eax	# D.24344
	je	.L1513	#,
	.loc 1 2824 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp112
	movq	%rax, %rdi	# tmp112,
	call	Perl_mg_set	#
.L1513:
.LBB376:
	.loc 1 2824 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1210
	movq	%rax, %rdx	# PL_stack_max.1210, PL_stack_max.1211
	movq	%rbx, %rax	# sp, sp.1212
	subq	%rax, %rdx	# sp.1212, D.24347
	movq	%rdx, %rax	# D.24347, D.24347
	cmpq	$7, %rax	#, D.24347
	jg	.L1514	#,
	.loc 1 2824 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1514:
	.loc 1 2824 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-48(%rbp), %rax	# targ, tmp113
	movq	%rax, (%rbx)	# tmp113, *sp_45
.LBE376:
.LBE375:
.LBE374:
	.loc 1 2825 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1213
	movq	(%rax), %rax	# PL_op.1213_47->op_next, D.24341
.L1508:
.LBE373:
	.loc 1 2827 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE80:
	.size	Perl_pp_sqrt, .-Perl_pp_sqrt
	.globl	Perl_pp_int
	.type	Perl_pp_int, @function
Perl_pp_int:
.LFB81:
	.loc 1 2830 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2831 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1214
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1215
	movq	24(%rax), %rax	# PL_op.1215_7->op_targ, D.24350
	salq	$3, %rax	#, D.24350
	addq	%rdx, %rax	# PL_curpad.1214, D.24351
	movq	(%rax), %rax	# *_10, tmp132
	movq	%rax, -64(%rbp)	# tmp132, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1216
	testq	%rax, %rax	# PL_amagic_generation.1216
	je	.L1518	#,
.LBB377:
	.loc 1 2831 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, tmp133
	movq	%rax, -56(%rbp)	# tmp133, arg
.L1519:
	movq	-56(%rbp), %rax	# arg, tmp134
	movl	12(%rax), %eax	# arg_13->sv_flags, D.24352
	andl	$268435456, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1518	#,
	movq	-56(%rbp), %rax	# arg, tmp135
	movl	$9, %ecx	#,
	movl	$64, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp135,
	call	Perl_amagic_call	#
	movq	%rax, -48(%rbp)	# tmp136, tmpsv
	cmpq	$0, -48(%rbp)	#, tmpsv
	je	.L1518	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-64(%rbp), %rax	# targ, tmp137
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24352
	andl	$1024, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1520	#,
	movq	-48(%rbp), %rcx	# tmpsv, tmp138
	movq	-64(%rbp), %rax	# targ, tmp139
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp138,
	movq	%rax, %rdi	# tmp139,
	call	Perl_sv_setsv_flags	#
.LBB378:
	movq	-64(%rbp), %rax	# targ, tmp140
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24352
	andl	$16384, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1521	#,
	movq	-64(%rbp), %rax	# targ, tmp141
	movq	%rax, %rdi	# tmp141,
	call	Perl_mg_set	#
.L1521:
	.loc 1 2831 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp142
	movq	%rax, (%rbx)	# tmp142, *sp_17
.LBE378:
	jmp	.L1522	#
.L1520:
	movq	-48(%rbp), %rax	# tmpsv, tmp143
	movq	%rax, (%rbx)	# tmp143, *sp_17
.L1522:
	.loc 1 2831 0 discriminator 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1217
	movq	(%rax), %rax	# PL_op.1217_23->op_next, D.24349
	jmp	.L1523	#
.L1518:
.LBE377:
.LBB379:
	.loc 1 2834 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_5, D.24353
	movl	12(%rax), %eax	# _25->sv_flags, D.24352
	andl	$65536, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1524	#,
	.loc 1 2834 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, D.24353
	movq	(%rax), %rax	# _28->sv_any, D.24354
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_29].xiv_iv, iftmp.1218
	jmp	.L1525	#
.L1524:
	.loc 1 2834 0 discriminator 2
	movq	(%rbx), %rax	# *sp_5, D.24353
	movq	%rax, %rdi	# D.24353,
	call	Perl_sv_2iv	#
.L1525:
	.loc 1 2834 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.1218, iv
	.loc 1 2840 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# *sp_5, D.24353
	movl	12(%rax), %eax	# _34->sv_flags, D.24352
	andl	$118423552, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	jne	.L1526	#,
.LBB380:
	.loc 1 2841 0
	movq	-64(%rbp), %rax	# targ, tmp144
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp144,
	call	Perl_sv_setuv	#
.LBB381:
	movq	-64(%rbp), %rax	# targ, tmp145
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24352
	andl	$16384, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1527	#,
	.loc 1 2841 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp146
	movq	%rax, %rdi	# tmp146,
	call	Perl_mg_set	#
.L1527:
	.loc 1 2841 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp147
	movq	%rax, (%rbx)	# tmp147, *sp_5
.LBE381:
.LBE380:
	jmp	.L1528	#
.L1526:
	.loc 1 2842 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_5, D.24353
	movl	12(%rax), %eax	# _40->sv_flags, D.24352
	andl	$65536, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1529	#,
	.loc 1 2843 0
	movq	(%rbx), %rax	# *sp_5, D.24353
	movl	12(%rax), %eax	# _43->sv_flags, D.24352
	testl	%eax, %eax	# D.24355
	jns	.L1530	#,
.LBB382:
	.loc 1 2844 0
	movq	(%rbx), %rax	# *sp_5, D.24353
	movl	12(%rax), %eax	# _46->sv_flags, D.24352
	andl	$65536, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1531	#,
	.loc 1 2844 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, D.24353
	movq	(%rax), %rax	# _49->sv_any, D.24354
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_50].xuv_uv, iftmp.1219
	jmp	.L1532	#
.L1531:
	.loc 1 2844 0 discriminator 2
	movq	(%rbx), %rax	# *sp_5, D.24353
	movq	%rax, %rdi	# D.24353,
	call	Perl_sv_2uv	#
.L1532:
	.loc 1 2844 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1219, uv
.LBB383:
	.loc 1 2845 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rdx	# uv, tmp148
	movq	-64(%rbp), %rax	# targ, tmp149
	movq	%rdx, %rsi	# tmp148,
	movq	%rax, %rdi	# tmp149,
	call	Perl_sv_setuv	#
.LBB384:
	movq	-64(%rbp), %rax	# targ, tmp150
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24352
	andl	$16384, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1533	#,
	.loc 1 2845 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp151
	movq	%rax, %rdi	# tmp151,
	call	Perl_mg_set	#
.L1533:
	.loc 1 2845 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp152
	movq	%rax, (%rbx)	# tmp152, *sp_5
.LBE384:
.LBE383:
.LBE382:
	jmp	.L1528	#
.L1530:
.LBB385:
	.loc 1 2847 0 is_stmt 1
	movq	-40(%rbp), %rdx	# iv, tmp153
	movq	-64(%rbp), %rax	# targ, tmp154
	movq	%rdx, %rsi	# tmp153,
	movq	%rax, %rdi	# tmp154,
	call	Perl_sv_setiv	#
.LBB386:
	movq	-64(%rbp), %rax	# targ, tmp155
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24352
	andl	$16384, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1535	#,
	.loc 1 2847 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp156
	movq	%rax, %rdi	# tmp156,
	call	Perl_mg_set	#
.L1535:
	.loc 1 2847 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp157
	movq	%rax, (%rbx)	# tmp157, *sp_5
	jmp	.L1528	#
.L1529:
.LBE386:
.LBE385:
	.loc 1 2849 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_5, D.24353
	movl	12(%rax), %eax	# _61->sv_flags, D.24352
	andl	$131072, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1536	#,
	.loc 1 2849 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_5, D.24353
	movq	(%rax), %rax	# _64->sv_any, D.24354
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_65].xnv_nv, iftmp.1220
	jmp	.L1537	#
.L1536:
	.loc 1 2849 0 discriminator 2
	movq	(%rbx), %rax	# *sp_5, D.24353
	movq	%rax, %rdi	# D.24353,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, iftmp.1220
.L1537:
	.loc 1 2849 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1220, value
	.loc 1 2850 0 is_stmt 1 discriminator 3
	movsd	-24(%rbp), %xmm0	# value, tmp158
	xorpd	%xmm1, %xmm1	# tmp159
	ucomisd	%xmm1, %xmm0	# tmp159, tmp158
	jb	.L1552	#,
	.loc 1 2851 0
	movsd	.LC33(%rip), %xmm0	#, tmp160
	ucomisd	-24(%rbp), %xmm0	# value, tmp160
	jbe	.L1553	#,
.LBB387:
	.loc 1 2852 0
	movq	-24(%rbp), %rax	# value, tmp161
	movq	%rax, -72(%rbp)	# tmp161, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	call	Perl_cast_uv	#
	movq	%rax, %rdx	#, D.24350
	movq	-64(%rbp), %rax	# targ, tmp162
	movq	%rdx, %rsi	# D.24350,
	movq	%rax, %rdi	# tmp162,
	call	Perl_sv_setuv	#
.LBB388:
	movq	-64(%rbp), %rax	# targ, tmp163
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24352
	andl	$16384, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1542	#,
	.loc 1 2852 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp164
	movq	%rax, %rdi	# tmp164,
	call	Perl_mg_set	#
.L1542:
	.loc 1 2852 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp165
	movq	%rax, (%rbx)	# tmp165, *sp_5
.LBE388:
.LBE387:
	jmp	.L1528	#
.L1553:
.LBB389:
	.loc 1 2854 0 is_stmt 1
	movq	-24(%rbp), %rax	# value, tmp166
	movq	%rax, -72(%rbp)	# tmp166, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	call	floor	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.24356
	movq	-64(%rbp), %rdx	# targ, tmp167
	movq	%rax, -72(%rbp)	# D.24356, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp167,
	call	Perl_sv_setnv	#
.LBB390:
	movq	-64(%rbp), %rax	# targ, tmp168
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24352
	andl	$16384, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1544	#,
	.loc 1 2854 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp169
	movq	%rax, %rdi	# tmp169,
	call	Perl_mg_set	#
.L1544:
	.loc 1 2854 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp170
	movq	%rax, (%rbx)	# tmp170, *sp_5
	jmp	.L1528	#
.L1552:
.LBE390:
.LBE389:
	.loc 1 2858 0 is_stmt 1
	movsd	-24(%rbp), %xmm0	# value, tmp171
	ucomisd	.LC39(%rip), %xmm0	#, tmp171
	jbe	.L1554	#,
.LBB391:
	.loc 1 2859 0
	movq	-24(%rbp), %rax	# value, tmp172
	movq	%rax, -72(%rbp)	# tmp172, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	call	Perl_cast_iv	#
	movq	%rax, %rdx	#, D.24357
	movq	-64(%rbp), %rax	# targ, tmp173
	movq	%rdx, %rsi	# D.24357,
	movq	%rax, %rdi	# tmp173,
	call	Perl_sv_setiv	#
.LBB392:
	movq	-64(%rbp), %rax	# targ, tmp174
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24352
	andl	$16384, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1547	#,
	.loc 1 2859 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp175
	movq	%rax, %rdi	# tmp175,
	call	Perl_mg_set	#
.L1547:
	.loc 1 2859 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp176
	movq	%rax, (%rbx)	# tmp176, *sp_5
.LBE392:
.LBE391:
	jmp	.L1528	#
.L1554:
.LBB393:
	.loc 1 2861 0 is_stmt 1
	movq	-24(%rbp), %rax	# value, tmp177
	movq	%rax, -72(%rbp)	# tmp177, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	call	ceil	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, D.24356
	movq	-64(%rbp), %rdx	# targ, tmp178
	movq	%rax, -72(%rbp)	# D.24356, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp178,
	call	Perl_sv_setnv	#
.LBB394:
	movq	-64(%rbp), %rax	# targ, tmp179
	movl	12(%rax), %eax	# targ_11->sv_flags, D.24352
	andl	$16384, %eax	#, D.24352
	testl	%eax, %eax	# D.24352
	je	.L1548	#,
	.loc 1 2861 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp180
	movq	%rax, %rdi	# tmp180,
	call	Perl_mg_set	#
.L1548:
	.loc 1 2861 0 discriminator 2
	movq	-64(%rbp), %rax	# targ, tmp181
	movq	%rax, (%rbx)	# tmp181, *sp_5
.L1528:
.LBE394:
.LBE393:
.LBE379:
	.loc 1 2866 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1221
	movq	(%rax), %rax	# PL_op.1221_86->op_next, D.24349
.L1523:
	.loc 1 2867 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE81:
	.size	Perl_pp_int, .-Perl_pp_int
	.globl	Perl_pp_abs
	.type	Perl_pp_abs, @function
Perl_pp_abs:
.LFB82:
	.loc 1 2870 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2871 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1222
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1223
	movq	24(%rax), %rax	# PL_op.1223_8->op_targ, D.24359
	salq	$3, %rax	#, D.24359
	addq	%rdx, %rax	# PL_curpad.1222, D.24360
	movq	(%rax), %rax	# *_11, tmp126
	movq	%rax, -48(%rbp)	# tmp126, targ
	movq	PL_amagic_generation(%rip), %rax	# PL_amagic_generation, PL_amagic_generation.1224
	testq	%rax, %rax	# PL_amagic_generation.1224
	je	.L1556	#,
.LBB395:
	.loc 1 2871 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_6, tmp127
	movq	%rax, -40(%rbp)	# tmp127, arg
.L1557:
	movq	-40(%rbp), %rax	# arg, tmp128
	movl	12(%rax), %eax	# arg_14->sv_flags, D.24361
	andl	$268435456, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1556	#,
	movq	-40(%rbp), %rax	# arg, tmp129
	movl	$9, %ecx	#,
	movl	$1, %edx	#,
	movl	$PL_sv_undef, %esi	#,
	movq	%rax, %rdi	# tmp129,
	call	Perl_amagic_call	#
	movq	%rax, -32(%rbp)	# tmp130, tmpsv
	cmpq	$0, -32(%rbp)	#, tmpsv
	je	.L1556	#,
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-48(%rbp), %rax	# targ, tmp131
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24361
	andl	$1024, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1558	#,
	movq	-32(%rbp), %rcx	# tmpsv, tmp132
	movq	-48(%rbp), %rax	# targ, tmp133
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp132,
	movq	%rax, %rdi	# tmp133,
	call	Perl_sv_setsv_flags	#
.LBB396:
	movq	-48(%rbp), %rax	# targ, tmp134
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24361
	andl	$16384, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1559	#,
	movq	-48(%rbp), %rax	# targ, tmp135
	movq	%rax, %rdi	# tmp135,
	call	Perl_mg_set	#
.L1559:
	.loc 1 2871 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp136
	movq	%rax, (%rbx)	# tmp136, *sp_18
.LBE396:
	jmp	.L1560	#
.L1558:
	movq	-32(%rbp), %rax	# tmpsv, tmp137
	movq	%rax, (%rbx)	# tmp137, *sp_18
.L1560:
	.loc 1 2871 0 discriminator 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1225
	movq	(%rax), %rax	# PL_op.1225_24->op_next, D.24358
	jmp	.L1561	#
.L1556:
.LBE395:
.LBB397:
	.loc 1 2874 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_6, D.24362
	movl	12(%rax), %eax	# _26->sv_flags, D.24361
	andl	$65536, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1562	#,
	.loc 1 2874 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_6, D.24362
	movq	(%rax), %rax	# _29->sv_any, D.24363
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_30].xiv_iv, iftmp.1226
	jmp	.L1563	#
.L1562:
	.loc 1 2874 0 discriminator 2
	movq	(%rbx), %rax	# *sp_6, D.24362
	movq	%rax, %rdi	# D.24362,
	call	Perl_sv_2iv	#
.L1563:
	.loc 1 2874 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1226, iv
	.loc 1 2876 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# *sp_6, D.24362
	movl	12(%rax), %eax	# _35->sv_flags, D.24361
	andl	$118423552, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	jne	.L1564	#,
.LBB398:
	.loc 1 2877 0
	movq	-48(%rbp), %rax	# targ, tmp138
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp138,
	call	Perl_sv_setuv	#
.LBB399:
	movq	-48(%rbp), %rax	# targ, tmp139
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24361
	andl	$16384, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1565	#,
	.loc 1 2877 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp140
	movq	%rax, %rdi	# tmp140,
	call	Perl_mg_set	#
.L1565:
	.loc 1 2877 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp141
	movq	%rax, (%rbx)	# tmp141, *sp_6
.LBE399:
.LBE398:
	jmp	.L1566	#
.L1564:
	.loc 1 2878 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_6, D.24362
	movl	12(%rax), %eax	# _41->sv_flags, D.24361
	andl	$65536, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1567	#,
	.loc 1 2880 0
	movq	(%rbx), %rax	# *sp_6, D.24362
	movl	12(%rax), %eax	# _44->sv_flags, D.24361
	testl	%eax, %eax	# D.24364
	jns	.L1568	#,
.LBB400:
	.loc 1 2881 0
	movq	(%rbx), %rax	# *sp_6, D.24362
	movl	12(%rax), %eax	# _47->sv_flags, D.24361
	andl	$65536, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1569	#,
	.loc 1 2881 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_6, D.24362
	movq	(%rax), %rax	# _50->sv_any, D.24363
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_51].xuv_uv, iftmp.1227
	jmp	.L1570	#
.L1569:
	.loc 1 2881 0 discriminator 2
	movq	(%rbx), %rax	# *sp_6, D.24362
	movq	%rax, %rdi	# D.24362,
	call	Perl_sv_2uv	#
.L1570:
	.loc 1 2881 0 discriminator 3
	movq	-48(%rbp), %rdx	# targ, tmp142
	movq	%rax, %rsi	# iftmp.1227,
	movq	%rdx, %rdi	# tmp142,
	call	Perl_sv_setuv	#
.LBB401:
	movq	-48(%rbp), %rax	# targ, tmp143
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24361
	andl	$16384, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1571	#,
	.loc 1 2881 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp144
	movq	%rax, %rdi	# tmp144,
	call	Perl_mg_set	#
.L1571:
	.loc 1 2881 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp145
	movq	%rax, (%rbx)	# tmp145, *sp_6
.LBE401:
.LBE400:
	jmp	.L1566	#
.L1568:
	.loc 1 2883 0 is_stmt 1
	cmpq	$0, -24(%rbp)	#, iv
	js	.L1573	#,
.LBB402:
	.loc 1 2884 0
	movq	-24(%rbp), %rdx	# iv, tmp146
	movq	-48(%rbp), %rax	# targ, tmp147
	movq	%rdx, %rsi	# tmp146,
	movq	%rax, %rdi	# tmp147,
	call	Perl_sv_setiv	#
.LBB403:
	movq	-48(%rbp), %rax	# targ, tmp148
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24361
	andl	$16384, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1574	#,
	.loc 1 2884 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp149
	movq	%rax, %rdi	# tmp149,
	call	Perl_mg_set	#
.L1574:
	.loc 1 2884 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp150
	movq	%rax, (%rbx)	# tmp150, *sp_6
.LBE403:
.LBE402:
	jmp	.L1566	#
.L1573:
	.loc 1 2886 0 is_stmt 1
	movabsq	$-9223372036854775808, %rax	#, tmp151
	cmpq	%rax, -24(%rbp)	# tmp151, iv
	je	.L1575	#,
.LBB404:
	.loc 1 2887 0
	movq	-24(%rbp), %rax	# iv, tmp152
	negq	%rax	# D.24365
	movq	%rax, %rdx	# D.24365, D.24365
	movq	-48(%rbp), %rax	# targ, tmp153
	movq	%rdx, %rsi	# D.24365,
	movq	%rax, %rdi	# tmp153,
	call	Perl_sv_setiv	#
.LBB405:
	movq	-48(%rbp), %rax	# targ, tmp154
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24361
	andl	$16384, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1576	#,
	.loc 1 2887 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp155
	movq	%rax, %rdi	# tmp155,
	call	Perl_mg_set	#
.L1576:
	.loc 1 2887 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp156
	movq	%rax, (%rbx)	# tmp156, *sp_6
.LBE405:
.LBE404:
	jmp	.L1566	#
.L1575:
.LBB406:
	.loc 1 2891 0 is_stmt 1
	movq	-48(%rbp), %rax	# targ, tmp157
	movabsq	$-9223372036854775808, %rsi	#,
	movq	%rax, %rdi	# tmp157,
	call	Perl_sv_setuv	#
.LBB407:
	movq	-48(%rbp), %rax	# targ, tmp158
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24361
	andl	$16384, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1577	#,
	.loc 1 2891 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp159
	movq	%rax, %rdi	# tmp159,
	call	Perl_mg_set	#
.L1577:
	.loc 1 2891 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp160
	movq	%rax, (%rbx)	# tmp160, *sp_6
	jmp	.L1566	#
.L1567:
.LBE407:
.LBE406:
.LBB408:
	.loc 1 2896 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_6, D.24362
	movl	12(%rax), %eax	# _68->sv_flags, D.24361
	andl	$131072, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1578	#,
	.loc 1 2896 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_6, D.24362
	movq	(%rax), %rax	# _71->sv_any, D.24363
	movq	32(%rax), %rax	# MEM[(struct XPVNV *)_72].xnv_nv, iftmp.1228
	jmp	.L1579	#
.L1578:
	.loc 1 2896 0 discriminator 2
	movq	(%rbx), %rax	# *sp_6, D.24362
	movq	%rax, %rdi	# D.24362,
	call	Perl_sv_2nv	#
	movsd	%xmm0, -72(%rbp)	#, %sfp
	movq	-72(%rbp), %rax	# %sfp, iftmp.1228
.L1579:
	.loc 1 2896 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.1228, value
	.loc 1 2897 0 is_stmt 1 discriminator 3
	xorpd	%xmm0, %xmm0	# tmp161
	ucomisd	-56(%rbp), %xmm0	# value, tmp161
	jbe	.L1580	#,
	.loc 1 2898 0
	movsd	-56(%rbp), %xmm1	# value, tmp163
	movsd	.LC30(%rip), %xmm0	#, tmp164
	xorpd	%xmm1, %xmm0	# tmp163, tmp162
	movsd	%xmm0, -56(%rbp)	# tmp162, value
.L1580:
.LBB409:
	.loc 1 2899 0
	movq	-56(%rbp), %rax	# value, tmp165
	movq	-48(%rbp), %rdx	# targ, tmp166
	movq	%rax, -72(%rbp)	# tmp165, %sfp
	movsd	-72(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp166,
	call	Perl_sv_setnv	#
.LBB410:
	movq	-48(%rbp), %rax	# targ, tmp167
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24361
	andl	$16384, %eax	#, D.24361
	testl	%eax, %eax	# D.24361
	je	.L1582	#,
	.loc 1 2899 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp168
	movq	%rax, %rdi	# tmp168,
	call	Perl_mg_set	#
.L1582:
	.loc 1 2899 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp169
	movq	%rax, (%rbx)	# tmp169, *sp_6
.L1566:
.LBE410:
.LBE409:
.LBE408:
.LBE397:
	.loc 1 2902 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1229
	movq	(%rax), %rax	# PL_op.1229_81->op_next, D.24358
.L1561:
	.loc 1 2903 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE82:
	.size	Perl_pp_abs, .-Perl_pp_abs
	.globl	Perl_pp_hex
	.type	Perl_pp_hex, @function
Perl_pp_hex:
.LFB83:
	.loc 1 2907 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2908 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1230
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1231
	movq	24(%rax), %rax	# PL_op.1231_8->op_targ, D.24366
	salq	$3, %rax	#, D.24366
	addq	%rdx, %rax	# PL_curpad.1230, D.24367
	movq	(%rax), %rax	# *_11, tmp106
	movq	%rax, -48(%rbp)	# tmp106, targ
	.loc 1 2910 0
	movl	$1, -76(%rbp)	#, flags
	.loc 1 2914 0
	movq	%rbx, %rax	# sp, sp.1232
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1232_13, tmp107
	movq	%rax, -40(%rbp)	# tmp107, sv
	.loc 1 2916 0
	movq	-40(%rbp), %rax	# sv, tmp108
	movq	%rax, PL_Sv(%rip)	# tmp108, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1234
	movl	12(%rax), %eax	# PL_Sv.1234_16->sv_flags, D.24368
	andl	$262144, %eax	#, D.24368
	testl	%eax, %eax	# D.24368
	je	.L1585	#,
	.loc 1 2916 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1235
	movq	(%rax), %rax	# PL_Sv.1235_19->sv_any, D.24369
	movq	8(%rax), %rax	# MEM[(struct XPV *)_20].xpv_cur, len.1236
	movq	%rax, -72(%rbp)	# len.1236, len
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1237
	movq	(%rax), %rax	# PL_Sv.1237_22->sv_any, D.24369
	movq	(%rax), %rax	# MEM[(struct XPV *)_23].xpv_pv, iftmp.1233
	jmp	.L1586	#
.L1585:
	.loc 1 2916 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1238
	leaq	-72(%rbp), %rcx	#, tmp109
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp109,
	movq	%rax, %rdi	# PL_Sv.1238,
	call	Perl_sv_2pv_flags	#
.L1586:
	.loc 1 2916 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.1233, tmps
	.loc 1 2917 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# sv, tmp110
	movl	12(%rax), %eax	# sv_15->sv_flags, D.24368
	andl	$536870912, %eax	#, D.24368
	testl	%eax, %eax	# D.24368
	je	.L1587	#,
	.loc 1 2917 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1239
	movzbl	37(%rax), %eax	# PL_curcop.1239_30->op_private, D.24370
	movzbl	%al, %eax	# D.24370, D.24371
	andl	$8, %eax	#, D.24371
	testl	%eax, %eax	# D.24371
	jne	.L1587	#,
.LBB411:
	.loc 1 2920 0 is_stmt 1
	movq	-40(%rbp), %rax	# sv, tmp111
	movq	%rax, %rdi	# tmp111,
	call	Perl_newSVsv	#
	movq	%rax, %rdi	# D.24372,
	call	Perl_sv_2mortal	#
	movq	%rax, -32(%rbp)	# tmp112, tsv
	.loc 1 2922 0
	movq	-32(%rbp), %rax	# tsv, tmp113
	movl	12(%rax), %eax	# tsv_35->sv_flags, D.24368
	orl	$536870912, %eax	#, D.24368
	movl	%eax, %edx	# D.24368, D.24368
	movq	-32(%rbp), %rax	# tsv, tmp114
	movl	%edx, 12(%rax)	# D.24368, tsv_35->sv_flags
	.loc 1 2923 0
	movq	-32(%rbp), %rax	# tsv, tmp115
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp115,
	call	Perl_sv_utf8_downgrade	#
	.loc 1 2924 0
	movq	-32(%rbp), %rax	# tsv, tmp116
	movq	(%rax), %rax	# tsv_35->sv_any, D.24369
	movq	(%rax), %rax	# MEM[(struct XPV *)_38].xpv_pv, tmp117
	movq	%rax, -56(%rbp)	# tmp117, tmps
.L1587:
.LBE411:
	.loc 1 2926 0
	leaq	-64(%rbp), %rcx	#, tmp118
	leaq	-76(%rbp), %rdx	#, tmp119
	leaq	-72(%rbp), %rsi	#, tmp120
	movq	-56(%rbp), %rax	# tmps, tmp121
	movq	%rax, %rdi	# tmp121,
	call	Perl_grok_hex	#
	movq	%rax, -24(%rbp)	# tmp122, result_uv
	.loc 1 2927 0
	movl	-76(%rbp), %eax	# flags, flags.1240
	andl	$2, %eax	#, D.24371
	testl	%eax, %eax	# D.24371
	je	.L1588	#,
.LBB412:
	.loc 1 2928 0
	movq	-64(%rbp), %rax	# result_nv, result_nv.1241
	movq	-48(%rbp), %rdx	# targ, tmp123
	movq	%rax, -88(%rbp)	# result_nv.1241, %sfp
	movsd	-88(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp123,
	call	Perl_sv_setnv	#
.LBB413:
	movq	-48(%rbp), %rax	# targ, tmp124
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24368
	andl	$16384, %eax	#, D.24368
	testl	%eax, %eax	# D.24368
	je	.L1589	#,
	.loc 1 2928 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp125
	movq	%rax, %rdi	# tmp125,
	call	Perl_mg_set	#
.L1589:
.LBB414:
	.loc 1 2928 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1242
	movq	%rax, %rdx	# PL_stack_max.1242, PL_stack_max.1243
	movq	%rbx, %rax	# sp, sp.1244
	subq	%rax, %rdx	# sp.1244, D.24373
	movq	%rdx, %rax	# D.24373, D.24373
	cmpq	$7, %rax	#, D.24373
	jg	.L1590	#,
	.loc 1 2928 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1590:
	.loc 1 2928 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-48(%rbp), %rax	# targ, tmp126
	movq	%rax, (%rbx)	# tmp126, *sp_51
.LBE414:
.LBE413:
.LBE412:
	jmp	.L1591	#
.L1588:
.LBB415:
	.loc 1 2931 0 is_stmt 1
	movq	-24(%rbp), %rdx	# result_uv, tmp127
	movq	-48(%rbp), %rax	# targ, tmp128
	movq	%rdx, %rsi	# tmp127,
	movq	%rax, %rdi	# tmp128,
	call	Perl_sv_setuv	#
.LBB416:
	movq	-48(%rbp), %rax	# targ, tmp129
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24368
	andl	$16384, %eax	#, D.24368
	testl	%eax, %eax	# D.24368
	je	.L1592	#,
	.loc 1 2931 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp130
	movq	%rax, %rdi	# tmp130,
	call	Perl_mg_set	#
.L1592:
.LBB417:
	.loc 1 2931 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1245
	movq	%rax, %rdx	# PL_stack_max.1245, PL_stack_max.1246
	movq	%rbx, %rax	# sp, sp.1247
	subq	%rax, %rdx	# sp.1247, D.24373
	movq	%rdx, %rax	# D.24373, D.24373
	cmpq	$7, %rax	#, D.24373
	jg	.L1593	#,
	.loc 1 2931 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1593:
	.loc 1 2931 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-48(%rbp), %rax	# targ, tmp131
	movq	%rax, (%rbx)	# tmp131, *sp_60
.L1591:
.LBE417:
.LBE416:
.LBE415:
	.loc 1 2933 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1248
	movq	(%rax), %rax	# PL_op.1248_62->op_next, D.24374
	.loc 1 2934 0
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE83:
	.size	Perl_pp_hex, .-Perl_pp_hex
	.globl	Perl_pp_oct
	.type	Perl_pp_oct, @function
Perl_pp_oct:
.LFB84:
	.loc 1 2937 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2938 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1249
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1250
	movq	24(%rax), %rax	# PL_op.1250_11->op_targ, D.24375
	salq	$3, %rax	#, D.24375
	addq	%rdx, %rax	# PL_curpad.1249, D.24376
	movq	(%rax), %rax	# *_14, tmp120
	movq	%rax, -40(%rbp)	# tmp120, targ
	.loc 1 2940 0
	movl	$1, -76(%rbp)	#, flags
	.loc 1 2944 0
	movq	%rbx, %rax	# sp, sp.1251
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1251_16, tmp121
	movq	%rax, -32(%rbp)	# tmp121, sv
	.loc 1 2946 0
	movq	-32(%rbp), %rax	# sv, tmp122
	movq	%rax, PL_Sv(%rip)	# tmp122, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1253
	movl	12(%rax), %eax	# PL_Sv.1253_19->sv_flags, D.24377
	andl	$262144, %eax	#, D.24377
	testl	%eax, %eax	# D.24377
	je	.L1596	#,
	.loc 1 2946 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1254
	movq	(%rax), %rax	# PL_Sv.1254_22->sv_any, D.24378
	movq	8(%rax), %rax	# MEM[(struct XPV *)_23].xpv_cur, len.1255
	movq	%rax, -72(%rbp)	# len.1255, len
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1256
	movq	(%rax), %rax	# PL_Sv.1256_25->sv_any, D.24378
	movq	(%rax), %rax	# MEM[(struct XPV *)_26].xpv_pv, iftmp.1252
	jmp	.L1597	#
.L1596:
	.loc 1 2946 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1257
	leaq	-72(%rbp), %rcx	#, tmp123
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp123,
	movq	%rax, %rdi	# PL_Sv.1257,
	call	Perl_sv_2pv_flags	#
.L1597:
	.loc 1 2946 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.1252, tmps
	.loc 1 2947 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rax	# sv, tmp124
	movl	12(%rax), %eax	# sv_18->sv_flags, D.24377
	andl	$536870912, %eax	#, D.24377
	testl	%eax, %eax	# D.24377
	je	.L1598	#,
	.loc 1 2947 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1258
	movzbl	37(%rax), %eax	# PL_curcop.1258_33->op_private, D.24379
	movzbl	%al, %eax	# D.24379, D.24380
	andl	$8, %eax	#, D.24380
	testl	%eax, %eax	# D.24380
	jne	.L1598	#,
.LBB418:
	.loc 1 2950 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp125
	movq	%rax, %rdi	# tmp125,
	call	Perl_newSVsv	#
	movq	%rax, %rdi	# D.24381,
	call	Perl_sv_2mortal	#
	movq	%rax, -24(%rbp)	# tmp126, tsv
	.loc 1 2952 0
	movq	-24(%rbp), %rax	# tsv, tmp127
	movl	12(%rax), %eax	# tsv_38->sv_flags, D.24377
	orl	$536870912, %eax	#, D.24377
	movl	%eax, %edx	# D.24377, D.24377
	movq	-24(%rbp), %rax	# tsv, tmp128
	movl	%edx, 12(%rax)	# D.24377, tsv_38->sv_flags
	.loc 1 2953 0
	movq	-24(%rbp), %rax	# tsv, tmp129
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp129,
	call	Perl_sv_utf8_downgrade	#
	.loc 1 2954 0
	movq	-24(%rbp), %rax	# tsv, tmp130
	movq	(%rax), %rax	# tsv_38->sv_any, D.24378
	movq	(%rax), %rax	# MEM[(struct XPV *)_41].xpv_pv, tmp131
	movq	%rax, -56(%rbp)	# tmp131, tmps
.LBE418:
	.loc 1 2956 0
	jmp	.L1599	#
.L1598:
	jmp	.L1599	#
.L1601:
	.loc 1 2957 0
	addq	$1, -56(%rbp)	#, tmps
	movq	-72(%rbp), %rax	# len, len.1259
	subq	$1, %rax	#, len.1260
	movq	%rax, -72(%rbp)	# len.1260, len
.L1599:
	.loc 1 2956 0 discriminator 1
	movq	-56(%rbp), %rax	# tmps, tmp132
	movzbl	(%rax), %eax	# *tmps_5, D.24382
	testb	%al, %al	# D.24382
	je	.L1600	#,
	.loc 1 2956 0 is_stmt 0 discriminator 2
	movq	-72(%rbp), %rax	# len, len.1261
	testq	%rax, %rax	# len.1261
	je	.L1600	#,
	.loc 1 2956 0 discriminator 1
	movq	-56(%rbp), %rax	# tmps, tmp133
	movzbl	(%rax), %eax	# *tmps_5, D.24382
	cmpb	$32, %al	#, D.24382
	je	.L1601	#,
	movq	-56(%rbp), %rax	# tmps, tmp134
	movzbl	(%rax), %eax	# *tmps_5, D.24382
	cmpb	$9, %al	#, D.24382
	je	.L1601	#,
	movq	-56(%rbp), %rax	# tmps, tmp135
	movzbl	(%rax), %eax	# *tmps_5, D.24382
	cmpb	$10, %al	#, D.24382
	je	.L1601	#,
	movq	-56(%rbp), %rax	# tmps, tmp136
	movzbl	(%rax), %eax	# *tmps_5, D.24382
	cmpb	$13, %al	#, D.24382
	je	.L1601	#,
	movq	-56(%rbp), %rax	# tmps, tmp137
	movzbl	(%rax), %eax	# *tmps_5, D.24382
	cmpb	$12, %al	#, D.24382
	je	.L1601	#,
.L1600:
	.loc 1 2958 0 is_stmt 1
	movq	-56(%rbp), %rax	# tmps, tmp138
	movzbl	(%rax), %eax	# *tmps_5, D.24382
	cmpb	$48, %al	#, D.24382
	jne	.L1602	#,
	.loc 1 2959 0
	addq	$1, -56(%rbp)	#, tmps
	movq	-72(%rbp), %rax	# len, len.1262
	subq	$1, %rax	#, len.1263
	movq	%rax, -72(%rbp)	# len.1263, len
.L1602:
	.loc 1 2960 0
	movq	-56(%rbp), %rax	# tmps, tmp139
	movzbl	(%rax), %eax	# *tmps_6, D.24382
	cmpb	$120, %al	#, D.24382
	jne	.L1603	#,
	.loc 1 2961 0
	leaq	-64(%rbp), %rcx	#, tmp140
	leaq	-76(%rbp), %rdx	#, tmp141
	leaq	-72(%rbp), %rsi	#, tmp142
	movq	-56(%rbp), %rax	# tmps, tmp143
	movq	%rax, %rdi	# tmp143,
	call	Perl_grok_hex	#
	movq	%rax, -48(%rbp)	# tmp144, result_uv
	jmp	.L1604	#
.L1603:
	.loc 1 2962 0
	movq	-56(%rbp), %rax	# tmps, tmp145
	movzbl	(%rax), %eax	# *tmps_6, D.24382
	cmpb	$98, %al	#, D.24382
	jne	.L1605	#,
	.loc 1 2963 0
	leaq	-64(%rbp), %rcx	#, tmp146
	leaq	-76(%rbp), %rdx	#, tmp147
	leaq	-72(%rbp), %rsi	#, tmp148
	movq	-56(%rbp), %rax	# tmps, tmp149
	movq	%rax, %rdi	# tmp149,
	call	Perl_grok_bin	#
	movq	%rax, -48(%rbp)	# tmp150, result_uv
	jmp	.L1604	#
.L1605:
	.loc 1 2965 0
	leaq	-64(%rbp), %rcx	#, tmp151
	leaq	-76(%rbp), %rdx	#, tmp152
	leaq	-72(%rbp), %rsi	#, tmp153
	movq	-56(%rbp), %rax	# tmps, tmp154
	movq	%rax, %rdi	# tmp154,
	call	Perl_grok_oct	#
	movq	%rax, -48(%rbp)	# tmp155, result_uv
.L1604:
	.loc 1 2967 0
	movl	-76(%rbp), %eax	# flags, flags.1264
	andl	$2, %eax	#, D.24380
	testl	%eax, %eax	# D.24380
	je	.L1606	#,
.LBB419:
	.loc 1 2968 0
	movq	-64(%rbp), %rax	# result_nv, result_nv.1265
	movq	-40(%rbp), %rdx	# targ, tmp156
	movq	%rax, -88(%rbp)	# result_nv.1265, %sfp
	movsd	-88(%rbp), %xmm0	# %sfp,
	movq	%rdx, %rdi	# tmp156,
	call	Perl_sv_setnv	#
.LBB420:
	movq	-40(%rbp), %rax	# targ, tmp157
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24377
	andl	$16384, %eax	#, D.24377
	testl	%eax, %eax	# D.24377
	je	.L1607	#,
	.loc 1 2968 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp158
	movq	%rax, %rdi	# tmp158,
	call	Perl_mg_set	#
.L1607:
.LBB421:
	.loc 1 2968 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1266
	movq	%rax, %rdx	# PL_stack_max.1266, PL_stack_max.1267
	movq	%rbx, %rax	# sp, sp.1268
	subq	%rax, %rdx	# sp.1268, D.24383
	movq	%rdx, %rax	# D.24383, D.24383
	cmpq	$7, %rax	#, D.24383
	jg	.L1608	#,
	.loc 1 2968 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1608:
	.loc 1 2968 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp159
	movq	%rax, (%rbx)	# tmp159, *sp_72
.LBE421:
.LBE420:
.LBE419:
	jmp	.L1609	#
.L1606:
.LBB422:
	.loc 1 2971 0 is_stmt 1
	movq	-48(%rbp), %rdx	# result_uv, tmp160
	movq	-40(%rbp), %rax	# targ, tmp161
	movq	%rdx, %rsi	# tmp160,
	movq	%rax, %rdi	# tmp161,
	call	Perl_sv_setuv	#
.LBB423:
	movq	-40(%rbp), %rax	# targ, tmp162
	movl	12(%rax), %eax	# targ_15->sv_flags, D.24377
	andl	$16384, %eax	#, D.24377
	testl	%eax, %eax	# D.24377
	je	.L1610	#,
	.loc 1 2971 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp163
	movq	%rax, %rdi	# tmp163,
	call	Perl_mg_set	#
.L1610:
.LBB424:
	.loc 1 2971 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1269
	movq	%rax, %rdx	# PL_stack_max.1269, PL_stack_max.1270
	movq	%rbx, %rax	# sp, sp.1271
	subq	%rax, %rdx	# sp.1271, D.24383
	movq	%rdx, %rax	# D.24383, D.24383
	cmpq	$7, %rax	#, D.24383
	jg	.L1611	#,
	.loc 1 2971 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1611:
	.loc 1 2971 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp164
	movq	%rax, (%rbx)	# tmp164, *sp_81
.L1609:
.LBE424:
.LBE423:
.LBE422:
	.loc 1 2973 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1272
	movq	(%rax), %rax	# PL_op.1272_83->op_next, D.24384
	.loc 1 2974 0
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE84:
	.size	Perl_pp_oct, .-Perl_pp_oct
	.globl	Perl_pp_length
	.type	Perl_pp_length, @function
Perl_pp_length:
.LFB85:
	.loc 1 2979 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2980 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1273
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1274
	movq	24(%rax), %rax	# PL_op.1274_3->op_targ, D.24385
	salq	$3, %rax	#, D.24385
	addq	%rdx, %rax	# PL_curpad.1273, D.24386
	movq	(%rax), %rax	# *_6, tmp84
	movq	%rax, -32(%rbp)	# tmp84, targ
	.loc 1 2981 0
	movq	(%rbx), %rax	# *sp_1, tmp85
	movq	%rax, -24(%rbp)	# tmp85, sv
	.loc 1 2983 0
	movq	-24(%rbp), %rax	# sv, tmp86
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24387
	andl	$536870912, %eax	#, D.24387
	testl	%eax, %eax	# D.24387
	je	.L1614	#,
	.loc 1 2983 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1275
	movzbl	37(%rax), %eax	# PL_curcop.1275_11->op_private, D.24388
	movzbl	%al, %eax	# D.24388, D.24389
	andl	$8, %eax	#, D.24389
	testl	%eax, %eax	# D.24389
	jne	.L1614	#,
.LBB425:
	.loc 1 2984 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp87
	movq	%rax, %rdi	# tmp87,
	call	Perl_sv_len_utf8	#
	movq	%rax, %rdx	# D.24385, D.24390
	movq	-32(%rbp), %rax	# targ, tmp88
	movq	%rdx, %rsi	# D.24390,
	movq	%rax, %rdi	# tmp88,
	call	Perl_sv_setiv	#
.LBB426:
	movq	-32(%rbp), %rax	# targ, tmp89
	movl	12(%rax), %eax	# targ_7->sv_flags, D.24387
	andl	$16384, %eax	#, D.24387
	testl	%eax, %eax	# D.24387
	je	.L1615	#,
	.loc 1 2984 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# targ, tmp90
	movq	%rax, %rdi	# tmp90,
	call	Perl_mg_set	#
.L1615:
	.loc 1 2984 0 discriminator 2
	movq	-32(%rbp), %rax	# targ, tmp91
	movq	%rax, (%rbx)	# tmp91, *sp_1
.LBE426:
.LBE425:
	jmp	.L1616	#
.L1614:
.LBB427:
	.loc 1 2986 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp92
	movq	%rax, %rdi	# tmp92,
	call	Perl_sv_len	#
	movq	%rax, %rdx	# D.24385, D.24390
	movq	-32(%rbp), %rax	# targ, tmp93
	movq	%rdx, %rsi	# D.24390,
	movq	%rax, %rdi	# tmp93,
	call	Perl_sv_setiv	#
.LBB428:
	movq	-32(%rbp), %rax	# targ, tmp94
	movl	12(%rax), %eax	# targ_7->sv_flags, D.24387
	andl	$16384, %eax	#, D.24387
	testl	%eax, %eax	# D.24387
	je	.L1617	#,
	.loc 1 2986 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# targ, tmp95
	movq	%rax, %rdi	# tmp95,
	call	Perl_mg_set	#
.L1617:
	.loc 1 2986 0 discriminator 2
	movq	-32(%rbp), %rax	# targ, tmp96
	movq	%rax, (%rbx)	# tmp96, *sp_1
.L1616:
.LBE428:
.LBE427:
	.loc 1 2987 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1276
	movq	(%rax), %rax	# PL_op.1276_25->op_next, D.24392
	.loc 1 2988 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE85:
	.size	Perl_pp_length, .-Perl_pp_length
	.section	.rodata
.LC40:
	.string	"substr outside of string"
	.align 8
.LC41:
	.string	"Attempt to use reference as lvalue in substr"
	.text
	.globl	Perl_pp_substr
	.type	Perl_pp_substr, @function
Perl_pp_substr:
.LFB86:
	.loc 1 2991 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$136, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 2992 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1277
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1278
	movq	24(%rax), %rax	# PL_op.1278_31->op_targ, D.24394
	salq	$3, %rax	#, D.24394
	addq	%rdx, %rax	# PL_curpad.1277, D.24395
	movq	(%rax), %rax	# *_34, tmp309
	movq	%rax, -72(%rbp)	# tmp309, targ
	.loc 1 2994 0
	movl	$0, -124(%rbp)	#, len
	.loc 1 3000 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1280
	movzbl	36(%rax), %eax	# PL_op.1280_37->op_flags, D.24396
	movzbl	%al, %eax	# D.24396, D.24397
	andl	$32, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	jne	.L1620	#,
	.loc 1 3000 0 is_stmt 0 discriminator 2
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1281
	movzbl	37(%rax), %eax	# PL_op.1281_41->op_private, D.24396
	movzbl	%al, %eax	# D.24396, D.24397
	andl	$8, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	je	.L1621	#,
	.loc 1 3000 0 discriminator 3
	call	Perl_is_lvalue_sub	#
	testl	%eax, %eax	# D.24397
	je	.L1621	#,
.L1620:
	.loc 1 3000 0 discriminator 1
	movl	$1, %eax	#, iftmp.1279
	jmp	.L1622	#
.L1621:
	.loc 1 3000 0 discriminator 4
	movl	$0, %eax	#, iftmp.1279
.L1622:
	.loc 1 3000 0 discriminator 5
	movl	%eax, -116(%rbp)	# iftmp.1279, lvalue
	.loc 1 3002 0 is_stmt 1 discriminator 5
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1282
	movl	68(%rax), %eax	# PL_curcop.1282_49->cop_arybase, tmp310
	movl	%eax, -112(%rbp)	# tmp310, arybase
	.loc 1 3003 0 discriminator 5
	movq	$0, -56(%rbp)	#, repl_sv
	.loc 1 3004 0 discriminator 5
	movq	$0, -48(%rbp)	#, repl
	.loc 1 3006 0 discriminator 5
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1283
	movzbl	37(%rax), %eax	# PL_op.1283_53->op_private, D.24396
	movzbl	%al, %eax	# D.24396, D.24397
	andl	$7, %eax	#, tmp311
	movl	%eax, -108(%rbp)	# tmp311, num_args
	.loc 1 3007 0 discriminator 5
	movb	$0, -134(%rbp)	#, repl_need_utf8_upgrade
	.loc 1 3008 0 discriminator 5
	movb	$0, -133(%rbp)	#, repl_is_utf8
	.loc 1 3010 0 discriminator 5
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.1284
	testb	%al, %al	# PL_tainting.1284
	je	.L1623	#,
	.loc 1 3010 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp312
	movq	%rax, %rdi	# tmp312,
	call	Perl_sv_untaint	#
.L1623:
	.loc 1 3011 0 is_stmt 1
	movq	-72(%rbp), %rax	# targ, tmp313
	movl	12(%rax), %eax	# targ_35->sv_flags, D.24398
	andl	$-536870913, %eax	#, D.24398
	movl	%eax, %edx	# D.24398, D.24398
	movq	-72(%rbp), %rax	# targ, tmp314
	movl	%edx, 12(%rax)	# D.24398, targ_35->sv_flags
	.loc 1 3012 0
	cmpl	$2, -108(%rbp)	#, num_args
	jle	.L1624	#,
	.loc 1 3013 0
	cmpl	$3, -108(%rbp)	#, num_args
	jle	.L1625	#,
	.loc 1 3014 0
	movq	%rbx, %rax	# sp, sp.1285
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1285_62, tmp315
	movq	%rax, -56(%rbp)	# tmp315, repl_sv
	.loc 1 3015 0
	movq	-56(%rbp), %rax	# repl_sv, tmp316
	movl	12(%rax), %eax	# repl_sv_64->sv_flags, D.24398
	andl	$262144, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1626	#,
	.loc 1 3015 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# repl_sv, tmp317
	movq	(%rax), %rax	# repl_sv_64->sv_any, D.24399
	movq	8(%rax), %rax	# MEM[(struct XPV *)_67].xpv_cur, repl_len.1287
	movq	%rax, -88(%rbp)	# repl_len.1287, repl_len
	movq	-56(%rbp), %rax	# repl_sv, tmp318
	movq	(%rax), %rax	# repl_sv_64->sv_any, D.24399
	movq	(%rax), %rax	# MEM[(struct XPV *)_69].xpv_pv, iftmp.1286
	jmp	.L1627	#
.L1626:
	.loc 1 3015 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp319
	movq	-56(%rbp), %rax	# repl_sv, tmp320
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp319,
	movq	%rax, %rdi	# tmp320,
	call	Perl_sv_2pv_flags	#
.L1627:
	.loc 1 3015 0 discriminator 3
	movq	%rax, -48(%rbp)	# iftmp.1286, repl
	.loc 1 3016 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# repl_sv, tmp321
	movl	12(%rax), %eax	# repl_sv_64->sv_flags, D.24398
	andl	$536870912, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1628	#,
	.loc 1 3016 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1289
	movzbl	37(%rax), %eax	# PL_curcop.1289_75->op_private, D.24396
	movzbl	%al, %eax	# D.24396, D.24397
	andl	$8, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	jne	.L1628	#,
	movq	-56(%rbp), %rax	# repl_sv, tmp322
	movq	(%rax), %rax	# repl_sv_64->sv_any, D.24399
	movq	8(%rax), %rax	# MEM[(struct XPV *)_79].xpv_cur, D.24394
	testq	%rax, %rax	# D.24394
	je	.L1628	#,
	.loc 1 3016 0 discriminator 3
	movl	$1, %eax	#, iftmp.1288
	jmp	.L1629	#
.L1628:
	.loc 1 3016 0 discriminator 2
	movl	$0, %eax	#, iftmp.1288
.L1629:
	.loc 1 3016 0 discriminator 4
	movb	%al, -133(%rbp)	# iftmp.1288, repl_is_utf8
.L1625:
	.loc 1 3018 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1290
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1290_84, PL_Sv.1291
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1291, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1293
	movl	12(%rax), %eax	# PL_Sv.1293_87->sv_flags, D.24398
	andl	$65536, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1630	#,
	.loc 1 3018 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1294
	movq	(%rax), %rax	# PL_Sv.1294_90->sv_any, D.24399
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_91].xiv_iv, D.24400
	jmp	.L1631	#
.L1630:
	.loc 1 3018 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1295
	movq	%rax, %rdi	# PL_Sv.1295,
	call	Perl_sv_2iv	#
.L1631:
	.loc 1 3018 0 discriminator 3
	movl	%eax, -124(%rbp)	# iftmp.1292, len
.L1624:
	.loc 1 3020 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1296
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1296_98, PL_Sv.1297
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1297, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1299
	movl	12(%rax), %eax	# PL_Sv.1299_101->sv_flags, D.24398
	andl	$65536, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1632	#,
	.loc 1 3020 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1300
	movq	(%rax), %rax	# PL_Sv.1300_104->sv_any, D.24399
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_105].xiv_iv, D.24400
	jmp	.L1633	#
.L1632:
	.loc 1 3020 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1301
	movq	%rax, %rdi	# PL_Sv.1301,
	call	Perl_sv_2iv	#
.L1633:
	.loc 1 3020 0 discriminator 3
	movl	%eax, -132(%rbp)	# iftmp.1298, pos
	.loc 1 3021 0 is_stmt 1 discriminator 3
	movq	%rbx, %rax	# sp, sp.1302
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1302_111, tmp323
	movq	%rax, -32(%rbp)	# tmp323, sv
	.loc 1 3022 0 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 3023 0 discriminator 3
	cmpq	$0, -56(%rbp)	#, repl_sv
	je	.L1634	#,
	.loc 1 3024 0
	cmpb	$0, -133(%rbp)	#, repl_is_utf8
	je	.L1635	#,
	.loc 1 3025 0
	movq	-32(%rbp), %rax	# sv, tmp324
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	andl	$536870912, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1636	#,
	.loc 1 3025 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1303
	movzbl	37(%rax), %eax	# PL_curcop.1303_116->op_private, D.24396
	movzbl	%al, %eax	# D.24396, D.24397
	andl	$8, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	je	.L1634	#,
.L1636:
	.loc 1 3026 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp325
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp325,
	call	Perl_sv_utf8_upgrade_flags	#
	jmp	.L1634	#
.L1635:
	.loc 1 3028 0
	movq	-32(%rbp), %rax	# sv, tmp326
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	andl	$536870912, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1634	#,
	.loc 1 3028 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1304
	movzbl	37(%rax), %eax	# PL_curcop.1304_122->op_private, D.24396
	movzbl	%al, %eax	# D.24396, D.24397
	andl	$8, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	jne	.L1634	#,
	.loc 1 3029 0 is_stmt 1
	movb	$1, -134(%rbp)	#, repl_need_utf8_upgrade
.L1634:
	.loc 1 3031 0
	movq	-32(%rbp), %rax	# sv, tmp327
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	andl	$262144, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1638	#,
	.loc 1 3031 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp328
	movq	(%rax), %rax	# sv_113->sv_any, D.24399
	movq	8(%rax), %rax	# MEM[(struct XPV *)_129].xpv_cur, curlen.1306
	movq	%rax, -96(%rbp)	# curlen.1306, curlen
	movq	-32(%rbp), %rax	# sv, tmp329
	movq	(%rax), %rax	# sv_113->sv_any, D.24399
	movq	(%rax), %rax	# MEM[(struct XPV *)_131].xpv_pv, iftmp.1305
	jmp	.L1639	#
.L1638:
	.loc 1 3031 0 discriminator 2
	leaq	-96(%rbp), %rcx	#, tmp330
	movq	-32(%rbp), %rax	# sv, tmp331
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp330,
	movq	%rax, %rdi	# tmp331,
	call	Perl_sv_2pv_flags	#
.L1639:
	.loc 1 3031 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1305, tmps
	.loc 1 3032 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rax	# sv, tmp332
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	andl	$536870912, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1640	#,
	.loc 1 3032 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1307
	movzbl	37(%rax), %eax	# PL_curcop.1307_137->op_private, D.24396
	movzbl	%al, %eax	# D.24396, D.24397
	andl	$8, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	jne	.L1640	#,
	.loc 1 3033 0 is_stmt 1
	movq	-32(%rbp), %rax	# sv, tmp333
	movq	%rax, %rdi	# tmp333,
	call	Perl_sv_len_utf8	#
	movq	%rax, -64(%rbp)	# tmp334, utf8_curlen
	.loc 1 3034 0
	movq	-96(%rbp), %rax	# curlen, curlen.1308
	cmpq	%rax, -64(%rbp)	# curlen.1308, utf8_curlen
	jne	.L1641	#,
	.loc 1 3035 0
	movq	$0, -64(%rbp)	#, utf8_curlen
	.loc 1 3034 0
	jmp	.L1643	#
.L1641:
	.loc 1 3037 0
	movq	-64(%rbp), %rax	# utf8_curlen, tmp335
	movq	%rax, -96(%rbp)	# tmp335, curlen
	.loc 1 3034 0
	jmp	.L1643	#
.L1640:
	.loc 1 3040 0
	movq	$0, -64(%rbp)	#, utf8_curlen
.L1643:
	.loc 1 3042 0
	movl	-132(%rbp), %eax	# pos, pos.1309
	cmpl	-112(%rbp), %eax	# arybase, pos.1309
	jl	.L1644	#,
	.loc 1 3043 0
	movl	-132(%rbp), %eax	# pos, pos.1310
	subl	-112(%rbp), %eax	# arybase, pos.1311
	movl	%eax, -132(%rbp)	# pos.1311, pos
	.loc 1 3044 0
	movq	-96(%rbp), %rax	# curlen, curlen.1312
	movl	%eax, %edx	# curlen.1312, D.24401
	movl	-132(%rbp), %eax	# pos, pos.1313
	subl	%eax, %edx	# pos.1314, D.24401
	movl	%edx, %eax	# D.24401, D.24401
	movl	%eax, -128(%rbp)	# rem.1315, rem
	.loc 1 3045 0
	movl	-128(%rbp), %eax	# rem, tmp336
	movl	%eax, -120(%rbp)	# tmp336, fail
	.loc 1 3046 0
	cmpl	$2, -108(%rbp)	#, num_args
	jle	.L1648	#,
	.loc 1 3047 0
	cmpl	$0, -124(%rbp)	#, len
	jns	.L1646	#,
	.loc 1 3048 0
	movl	-128(%rbp), %edx	# rem, rem.1316
	movl	-124(%rbp), %eax	# len, tmp337
	addl	%edx, %eax	# rem.1316, rem.1317
	movl	%eax, -128(%rbp)	# rem.1317, rem
	.loc 1 3049 0
	movl	-128(%rbp), %eax	# rem, rem.1318
	testl	%eax, %eax	# rem.1318
	jns	.L1648	#,
	.loc 1 3050 0
	movl	$0, -128(%rbp)	#, rem
	jmp	.L1648	#
.L1646:
	.loc 1 3052 0
	movl	-128(%rbp), %eax	# rem, rem.1319
	cmpl	-124(%rbp), %eax	# len, rem.1319
	jle	.L1648	#,
	.loc 1 3053 0
	movl	-124(%rbp), %eax	# len, tmp338
	movl	%eax, -128(%rbp)	# tmp338, rem
	jmp	.L1648	#
.L1644:
	.loc 1 3057 0
	movq	-96(%rbp), %rax	# curlen, curlen.1320
	movl	%eax, %edx	# curlen.1320, D.24401
	movl	-132(%rbp), %eax	# pos, pos.1321
	addl	%edx, %eax	# D.24401, D.24401
	movl	%eax, -132(%rbp)	# pos.1323, pos
	.loc 1 3058 0
	cmpl	$2, -108(%rbp)	#, num_args
	jg	.L1649	#,
	.loc 1 3059 0
	movq	-96(%rbp), %rax	# curlen, curlen.1324
	movl	%eax, -128(%rbp)	# rem.1325, rem
	jmp	.L1650	#
.L1649:
	.loc 1 3060 0
	cmpl	$0, -124(%rbp)	#, len
	js	.L1651	#,
	.loc 1 3061 0
	movl	-132(%rbp), %edx	# pos, pos.1326
	movl	-124(%rbp), %eax	# len, tmp339
	addl	%edx, %eax	# pos.1326, rem.1327
	movl	%eax, -128(%rbp)	# rem.1327, rem
	.loc 1 3062 0
	movq	-96(%rbp), %rax	# curlen, curlen.1328
	movl	%eax, %edx	# curlen.1328, D.24397
	movl	-128(%rbp), %eax	# rem, rem.1329
	cmpl	%eax, %edx	# rem.1329, D.24397
	jge	.L1650	#,
	.loc 1 3063 0
	movq	-96(%rbp), %rax	# curlen, curlen.1330
	movl	%eax, -128(%rbp)	# rem.1331, rem
	jmp	.L1650	#
.L1651:
	.loc 1 3066 0
	movq	-96(%rbp), %rax	# curlen, curlen.1332
	movl	%eax, %edx	# curlen.1332, D.24401
	movl	-124(%rbp), %eax	# len, len.1333
	addl	%edx, %eax	# D.24401, D.24401
	movl	%eax, -128(%rbp)	# rem.1334, rem
	.loc 1 3067 0
	movl	-128(%rbp), %edx	# rem, rem.1335
	movl	-132(%rbp), %eax	# pos, pos.1336
	cmpl	%eax, %edx	# pos.1336, rem.1335
	jge	.L1650	#,
	.loc 1 3068 0
	movl	-132(%rbp), %eax	# pos, pos.1337
	movl	%eax, -128(%rbp)	# pos.1337, rem
.L1650:
	.loc 1 3070 0
	movl	-132(%rbp), %eax	# pos, pos.1338
	testl	%eax, %eax	# pos.1338
	jns	.L1653	#,
	.loc 1 3071 0
	movl	$0, -132(%rbp)	#, pos
.L1653:
	.loc 1 3072 0
	movl	-128(%rbp), %eax	# rem, tmp340
	movl	%eax, -120(%rbp)	# tmp340, fail
	.loc 1 3073 0
	movl	-128(%rbp), %edx	# rem, rem.1339
	movl	-132(%rbp), %eax	# pos, pos.1340
	subl	%eax, %edx	# pos.1340, rem.1341
	movl	%edx, %eax	# rem.1341, rem.1341
	movl	%eax, -128(%rbp)	# rem.1341, rem
.L1648:
	.loc 1 3075 0
	cmpl	$0, -120(%rbp)	#, fail
	jns	.L1654	#,
	.loc 1 3076 0
	cmpl	$0, -116(%rbp)	#, lvalue
	jne	.L1655	#,
	.loc 1 3076 0 is_stmt 0 discriminator 1
	cmpq	$0, -48(%rbp)	#, repl
	je	.L1656	#,
.L1655:
	.loc 1 3077 0 is_stmt 1
	movl	$.LC40, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1656:
	.loc 1 3078 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1342
	movq	80(%rax), %rax	# PL_curcop.1342_187->cop_warnings, D.24402
	testq	%rax, %rax	# D.24402
	je	.L1657	#,
	.loc 1 3078 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1343
	movq	80(%rax), %rax	# PL_curcop.1343_189->cop_warnings, D.24402
	cmpq	$32, %rax	#, D.24402
	je	.L1657	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1344
	movq	80(%rax), %rax	# PL_curcop.1344_191->cop_warnings, D.24402
	cmpq	$16, %rax	#, D.24402
	je	.L1658	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1345
	movq	80(%rax), %rax	# PL_curcop.1345_193->cop_warnings, D.24402
	movq	(%rax), %rax	# _194->sv_any, D.24399
	movq	(%rax), %rax	# MEM[(struct XPV *)_195].xpv_pv, D.24403
	addq	$6, %rax	#, D.24403
	movzbl	(%rax), %eax	# *_197, D.24404
	movsbl	%al, %eax	# D.24404, D.24397
	andl	$64, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	jne	.L1658	#,
.L1657:
	.loc 1 3078 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1346
	movq	80(%rax), %rax	# PL_curcop.1346_201->cop_warnings, D.24402
	testq	%rax, %rax	# D.24402
	jne	.L1659	#,
	.loc 1 3078 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1347
	movzbl	%al, %eax	# PL_dowarn.1347, D.24397
	andl	$1, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	je	.L1659	#,
.L1658:
	.loc 1 3079 0 is_stmt 1
	movl	$.LC40, %esi	#,
	movl	$27, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1659:
	.loc 1 3080 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_undef, (%rbx)	#, *sp_206
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1348
	movq	(%rax), %rax	# PL_op.1348_207->op_next, D.24393
	jmp	.L1693	#
.L1654:
.LBB429:
	.loc 1 3083 0
	movl	-132(%rbp), %eax	# pos, tmp341
	movl	%eax, -104(%rbp)	# tmp341, upos
	.loc 1 3084 0
	movl	-128(%rbp), %eax	# rem, tmp342
	movl	%eax, -100(%rbp)	# tmp342, urem
	.loc 1 3085 0
	cmpq	$0, -64(%rbp)	#, utf8_curlen
	je	.L1661	#,
	.loc 1 3086 0
	leaq	-128(%rbp), %rdx	#, tmp343
	leaq	-132(%rbp), %rcx	#, tmp344
	movq	-32(%rbp), %rax	# sv, tmp345
	movq	%rcx, %rsi	# tmp344,
	movq	%rax, %rdi	# tmp345,
	call	Perl_sv_pos_u2b	#
.L1661:
	.loc 1 3087 0
	movl	-132(%rbp), %eax	# pos, pos.1349
	cltq
	addq	%rax, -24(%rbp)	# D.24405, tmps
	.loc 1 3092 0
	movq	-72(%rbp), %rax	# targ, tmp346
	movl	12(%rax), %eax	# targ_35->sv_flags, D.24398
	movzbl	%al, %eax	# D.24398, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1662	#,
	.loc 1 3093 0
	movq	-72(%rbp), %rax	# targ, tmp347
	movl	12(%rax), %eax	# targ_35->sv_flags, D.24398
	movzbl	%al, %eax	# D.24398, D.24398
	cmpl	$9, %eax	#, D.24398
	jne	.L1663	#,
	.loc 1 3094 0
	cmpl	$0, -116(%rbp)	#, lvalue
	je	.L1664	#,
	.loc 1 3094 0 is_stmt 0 discriminator 2
	movq	-72(%rbp), %rax	# targ, tmp348
	movl	8(%rax), %eax	# targ_35->sv_refcnt, D.24398
	cmpl	$1, %eax	#, D.24398
	jbe	.L1665	#,
.L1664:
	.loc 1 3094 0 discriminator 1
	movl	$1, %eax	#, iftmp.1351
	jmp	.L1666	#
.L1665:
	.loc 1 3094 0 discriminator 3
	movl	$0, %eax	#, iftmp.1351
.L1666:
	.loc 1 3093 0 is_stmt 1
	andl	$1, %eax	#, iftmp.1350
	jmp	.L1667	#
.L1663:
	.loc 1 3093 0 is_stmt 0 discriminator 1
	cmpl	$0, -116(%rbp)	#, lvalue
	setne	%al	#, iftmp.1350
.L1667:
	.loc 1 3093 0 discriminator 2
	testb	%al, %al	# iftmp.1350
	je	.L1662	#,
	.loc 1 3097 0 is_stmt 1
	call	Perl_sv_newmortal	#
	movq	%rax, -72(%rbp)	# tmp349, targ
.L1662:
	.loc 1 3101 0
	movl	-128(%rbp), %eax	# rem, rem.1352
	movslq	%eax, %rdx	# rem.1352, D.24394
	movq	-24(%rbp), %rcx	# tmps, tmp350
	movq	-72(%rbp), %rax	# targ, tmp351
	movq	%rcx, %rsi	# tmp350,
	movq	%rax, %rdi	# tmp351,
	call	Perl_sv_setpvn	#
	.loc 1 3105 0
	cmpq	$0, -64(%rbp)	#, utf8_curlen
	je	.L1668	#,
	.loc 1 3106 0
	movq	-72(%rbp), %rax	# targ, tmp352
	movl	12(%rax), %eax	# targ_3->sv_flags, D.24398
	orl	$536870912, %eax	#, D.24398
	movl	%eax, %edx	# D.24398, D.24398
	movq	-72(%rbp), %rax	# targ, tmp353
	movl	%edx, 12(%rax)	# D.24398, targ_3->sv_flags
.L1668:
	.loc 1 3107 0
	cmpq	$0, -48(%rbp)	#, repl
	je	.L1669	#,
.LBB430:
	.loc 1 3108 0
	movq	$0, -40(%rbp)	#, repl_sv_copy
	.loc 1 3110 0
	cmpb	$0, -134(%rbp)	#, repl_need_utf8_upgrade
	je	.L1670	#,
	.loc 1 3111 0
	movq	-56(%rbp), %rax	# repl_sv, tmp354
	movq	%rax, %rdi	# tmp354,
	call	Perl_newSVsv	#
	movq	%rax, -40(%rbp)	# tmp355, repl_sv_copy
	.loc 1 3112 0
	movq	-40(%rbp), %rax	# repl_sv_copy, tmp356
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp356,
	call	Perl_sv_utf8_upgrade_flags	#
	.loc 1 3113 0
	movq	-40(%rbp), %rax	# repl_sv_copy, tmp357
	movl	12(%rax), %eax	# repl_sv_copy_229->sv_flags, D.24398
	andl	$262144, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1671	#,
	.loc 1 3113 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# repl_sv_copy, tmp358
	movq	(%rax), %rax	# repl_sv_copy_229->sv_any, D.24399
	movq	8(%rax), %rax	# MEM[(struct XPV *)_232].xpv_cur, repl_len.1354
	movq	%rax, -88(%rbp)	# repl_len.1354, repl_len
	movq	-40(%rbp), %rax	# repl_sv_copy, tmp359
	movq	(%rax), %rax	# repl_sv_copy_229->sv_any, D.24399
	movq	(%rax), %rax	# MEM[(struct XPV *)_234].xpv_pv, iftmp.1353
	jmp	.L1672	#
.L1671:
	.loc 1 3113 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp360
	movq	-40(%rbp), %rax	# repl_sv_copy, tmp361
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp360,
	movq	%rax, %rdi	# tmp361,
	call	Perl_sv_2pv_flags	#
.L1672:
	.loc 1 3113 0 discriminator 3
	movq	%rax, -48(%rbp)	# iftmp.1353, repl
	.loc 1 3114 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# repl_sv_copy, tmp362
	movl	12(%rax), %eax	# repl_sv_copy_229->sv_flags, D.24398
	andl	$536870912, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1673	#,
	.loc 1 3114 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1356
	movzbl	37(%rax), %eax	# PL_curcop.1356_240->op_private, D.24396
	movzbl	%al, %eax	# D.24396, D.24397
	andl	$8, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	jne	.L1673	#,
	movq	-32(%rbp), %rax	# sv, tmp363
	movq	(%rax), %rax	# sv_113->sv_any, D.24399
	movq	8(%rax), %rax	# MEM[(struct XPV *)_244].xpv_cur, D.24394
	testq	%rax, %rax	# D.24394
	je	.L1673	#,
	.loc 1 3114 0 discriminator 3
	movl	$1, %eax	#, iftmp.1355
	jmp	.L1674	#
.L1673:
	.loc 1 3114 0 discriminator 2
	movl	$0, %eax	#, iftmp.1355
.L1674:
	.loc 1 3114 0 discriminator 4
	movb	%al, -133(%rbp)	# iftmp.1355, repl_is_utf8
.L1670:
	.loc 1 3116 0 is_stmt 1
	movq	-88(%rbp), %rdi	# repl_len, repl_len.1357
	movl	-128(%rbp), %eax	# rem, rem.1358
	movslq	%eax, %rdx	# rem.1358, D.24394
	movl	-132(%rbp), %eax	# pos, pos.1359
	movslq	%eax, %rsi	# pos.1359, D.24394
	movq	-48(%rbp), %rcx	# repl, tmp364
	movq	-32(%rbp), %rax	# sv, tmp365
	movq	%rdi, %r8	# repl_len.1357,
	movq	%rax, %rdi	# tmp365,
	call	Perl_sv_insert	#
	.loc 1 3117 0
	cmpb	$0, -133(%rbp)	#, repl_is_utf8
	je	.L1675	#,
	.loc 1 3118 0
	movq	-32(%rbp), %rax	# sv, tmp366
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	orl	$536870912, %eax	#, D.24398
	movl	%eax, %edx	# D.24398, D.24398
	movq	-32(%rbp), %rax	# sv, tmp367
	movl	%edx, 12(%rax)	# D.24398, sv_113->sv_flags
.L1675:
	.loc 1 3119 0
	cmpq	$0, -40(%rbp)	#, repl_sv_copy
	je	.L1676	#,
	.loc 1 3120 0
	movq	-40(%rbp), %rax	# repl_sv_copy, tmp368
	movq	%rax, %rdi	# tmp368,
	call	Perl_sv_free	#
.LBE430:
	jmp	.L1677	#
.L1676:
	jmp	.L1677	#
.L1669:
	.loc 1 3122 0
	cmpl	$0, -116(%rbp)	#, lvalue
	je	.L1677	#,
	.loc 1 3123 0
	movq	-32(%rbp), %rax	# sv, tmp369
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	andl	$8192, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	jne	.L1678	#,
	.loc 1 3124 0
	movq	-32(%rbp), %rax	# sv, tmp370
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	andl	$524288, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1679	#,
.LBB431:
	.loc 1 3126 0
	movq	-32(%rbp), %rax	# sv, tmp371
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	andl	$10223616, %eax	#, D.24398
	cmpl	$262144, %eax	#, D.24398
	jne	.L1680	#,
	.loc 1 3126 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# sv, tmp372
	movq	(%rax), %rax	# sv_113->sv_any, D.24399
	movq	8(%rax), %rax	# MEM[(struct XPV *)_262].xpv_cur, n_a.1361
	movq	%rax, -80(%rbp)	# n_a.1361, n_a
	jmp	.L1681	#
.L1680:
	.loc 1 3126 0 discriminator 2
	leaq	-80(%rbp), %rcx	#, tmp374
	movq	-32(%rbp), %rax	# sv, tmp375
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp374,
	movq	%rax, %rdi	# tmp375,
	call	Perl_sv_pvn_force_flags	#
.L1681:
	.loc 1 3127 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1362
	movq	80(%rax), %rax	# PL_curcop.1362_267->cop_warnings, D.24402
	testq	%rax, %rax	# D.24402
	je	.L1682	#,
	.loc 1 3127 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1363
	movq	80(%rax), %rax	# PL_curcop.1363_269->cop_warnings, D.24402
	cmpq	$32, %rax	#, D.24402
	je	.L1682	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1364
	movq	80(%rax), %rax	# PL_curcop.1364_271->cop_warnings, D.24402
	cmpq	$16, %rax	#, D.24402
	je	.L1683	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1365
	movq	80(%rax), %rax	# PL_curcop.1365_273->cop_warnings, D.24402
	movq	(%rax), %rax	# _274->sv_any, D.24399
	movq	(%rax), %rax	# MEM[(struct XPV *)_275].xpv_pv, D.24403
	addq	$6, %rax	#, D.24403
	movzbl	(%rax), %eax	# *_277, D.24404
	movsbl	%al, %eax	# D.24404, D.24397
	andl	$64, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	jne	.L1683	#,
.L1682:
	.loc 1 3127 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1366
	movq	80(%rax), %rax	# PL_curcop.1366_281->cop_warnings, D.24402
	testq	%rax, %rax	# D.24402
	jne	.L1679	#,
	.loc 1 3127 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1367
	movzbl	%al, %eax	# PL_dowarn.1367, D.24397
	andl	$1, %eax	#, D.24397
	testl	%eax, %eax	# D.24397
	je	.L1679	#,
.L1683:
	.loc 1 3128 0 is_stmt 1
	movl	$.LC41, %esi	#,
	movl	$27, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1679:
.LBE431:
	.loc 1 3131 0
	movq	-32(%rbp), %rax	# sv, tmp376
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	andl	$118423552, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1685	#,
	.loc 1 3132 0
	movq	-32(%rbp), %rax	# sv, tmp377
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	andl	$1760624639, %eax	#, D.24398
	movl	%eax, %edx	# D.24398, D.24398
	movq	-32(%rbp), %rax	# sv, tmp378
	movl	%edx, 12(%rax)	# D.24398, sv_113->sv_flags
	movq	-32(%rbp), %rax	# sv, tmp379
	movl	12(%rax), %eax	# sv_113->sv_flags, D.24398
	orl	$67371008, %eax	#, D.24398
	movl	%eax, %edx	# D.24398, D.24398
	movq	-32(%rbp), %rax	# sv, tmp380
	movl	%edx, 12(%rax)	# D.24398, sv_113->sv_flags
	jmp	.L1678	#
.L1685:
	.loc 1 3134 0
	movq	-32(%rbp), %rax	# sv, tmp381
	movl	$0, %edx	#,
	movl	$.LC4, %esi	#,
	movq	%rax, %rdi	# tmp381,
	call	Perl_sv_setpvn	#
.L1678:
	.loc 1 3137 0
	movq	-72(%rbp), %rax	# targ, tmp382
	movl	12(%rax), %eax	# targ_3->sv_flags, D.24398
	movzbl	%al, %eax	# D.24398, D.24398
	cmpl	$8, %eax	#, D.24398
	ja	.L1686	#,
	.loc 1 3138 0
	movq	-72(%rbp), %rax	# targ, tmp383
	movl	$9, %esi	#,
	movq	%rax, %rdi	# tmp383,
	call	Perl_sv_upgrade	#
	.loc 1 3139 0
	movq	-72(%rbp), %rax	# targ, tmp384
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$120, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp384,
	call	Perl_sv_magic	#
	jmp	.L1687	#
.L1686:
	.loc 1 3142 0
	movq	-72(%rbp), %rax	# targ, tmp385
	movl	12(%rax), %eax	# targ_3->sv_flags, D.24398
	andl	$1223753727, %eax	#, D.24398
	movl	%eax, %edx	# D.24398, D.24398
	movq	-72(%rbp), %rax	# targ, tmp386
	movl	%edx, 12(%rax)	# D.24398, targ_3->sv_flags
	movq	-72(%rbp), %rax	# targ, tmp387
	movl	12(%rax), %eax	# targ_3->sv_flags, D.24398
	andl	$2097152, %eax	#, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1687	#,
	.loc 1 3142 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# targ, tmp388
	movq	%rax, %rdi	# tmp388,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.24397
	je	.L1687	#,
	.loc 1 3142 0
	nop
.L1687:
	.loc 1 3144 0 is_stmt 1
	movq	-72(%rbp), %rax	# targ, tmp389
	movq	(%rax), %rax	# targ_3->sv_any, D.24399
	movb	$120, 80(%rax)	#, MEM[(struct XPVLV *)_301].xlv_type
	.loc 1 3145 0
	movq	-72(%rbp), %rax	# targ, tmp390
	movq	(%rax), %rax	# targ_3->sv_any, D.24399
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_302].xlv_targ, D.24402
	cmpq	-32(%rbp), %rax	# sv, D.24402
	je	.L1689	#,
	.loc 1 3146 0
	movq	-72(%rbp), %rax	# targ, tmp391
	movq	(%rax), %rax	# targ_3->sv_any, D.24399
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_304].xlv_targ, D.24402
	testq	%rax, %rax	# D.24402
	je	.L1690	#,
	.loc 1 3147 0
	movq	-72(%rbp), %rax	# targ, tmp392
	movq	(%rax), %rax	# targ_3->sv_any, D.24399
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_306].xlv_targ, D.24402
	movq	%rax, %rdi	# D.24402,
	call	Perl_sv_free	#
.L1690:
	.loc 1 3148 0
	movq	-32(%rbp), %rax	# sv, tmp393
	movq	%rax, PL_Sv(%rip)	# tmp393, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1370
	testq	%rax, %rax	# PL_Sv.1370
	je	.L1692	#,
	.loc 1 3148 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1371
	movl	8(%rax), %edx	# PL_Sv.1371_309->sv_refcnt, D.24398
	addl	$1, %edx	#, D.24398
	movl	%edx, 8(%rax)	# D.24398, PL_Sv.1371_309->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.1371_309->sv_refcnt, D.24398
	testl	%eax, %eax	# D.24398
	je	.L1692	#,
	.loc 1 3148 0
	nop
.L1692:
	.loc 1 3148 0 discriminator 4
	movq	-72(%rbp), %rax	# targ, tmp394
	movq	(%rax), %rax	# targ_3->sv_any, D.24399
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.1372
	movq	%rdx, 72(%rax)	# PL_Sv.1372, MEM[(struct XPVLV *)_315].xlv_targ
.L1689:
	.loc 1 3150 0 is_stmt 1
	movq	-72(%rbp), %rax	# targ, tmp395
	movq	(%rax), %rax	# targ_3->sv_any, D.24399
	movl	-104(%rbp), %edx	# upos, tmp396
	movslq	%edx, %rdx	# tmp396, D.24394
	movq	%rdx, 56(%rax)	# D.24394, MEM[(struct XPVLV *)_317].xlv_targoff
	.loc 1 3151 0
	movq	-72(%rbp), %rax	# targ, tmp397
	movq	(%rax), %rax	# targ_3->sv_any, D.24399
	movl	-100(%rbp), %edx	# urem, tmp398
	movslq	%edx, %rdx	# tmp398, D.24394
	movq	%rdx, 64(%rax)	# D.24394, MEM[(struct XPVLV *)_319].xlv_targlen
.L1677:
.LBE429:
	.loc 1 3154 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 3155 0
	addq	$8, %rbx	#, sp
	movq	-72(%rbp), %rax	# targ, tmp399
	movq	%rax, (%rbx)	# tmp399, *sp_322
	.loc 1 3156 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1373
	movq	(%rax), %rax	# PL_op.1373_323->op_next, D.24393
.L1693:
	.loc 1 3157 0
	addq	$136, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE86:
	.size	Perl_pp_substr, .-Perl_pp_substr
	.globl	Perl_pp_vec
	.type	Perl_pp_vec, @function
Perl_pp_vec:
.LFB87:
	.loc 1 3160 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 14, -24
	.cfi_offset 13, -32
	.cfi_offset 12, -40
	.cfi_offset 3, -48
	.loc 1 3161 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1374
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1375
	movq	24(%rax), %rax	# PL_op.1375_8->op_targ, D.24408
	salq	$3, %rax	#, D.24408
	addq	%rdx, %rax	# PL_curpad.1374, D.24409
	movq	(%rax), %rax	# *_11, tmp127
	movq	%rax, -40(%rbp)	# tmp127, targ
	.loc 1 3162 0
	movq	%rbx, %rax	# sp, sp.1376
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1376_13, PL_Sv.1377
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1377, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1379
	movl	12(%rax), %eax	# PL_Sv.1379_16->sv_flags, D.24410
	andl	$65536, %eax	#, D.24410
	testl	%eax, %eax	# D.24410
	je	.L1695	#,
	.loc 1 3162 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1380
	movq	(%rax), %rax	# PL_Sv.1380_19->sv_any, D.24411
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_20].xiv_iv, iftmp.1378
	jmp	.L1696	#
.L1695:
	.loc 1 3162 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1381
	movq	%rax, %rdi	# PL_Sv.1381,
	call	Perl_sv_2iv	#
.L1696:
	.loc 1 3162 0 discriminator 3
	movq	%rax, %r14	# iftmp.1378, size
	.loc 1 3163 0 is_stmt 1 discriminator 3
	movq	%rbx, %rax	# sp, sp.1382
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1382_25, PL_Sv.1383
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1383, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1385
	movl	12(%rax), %eax	# PL_Sv.1385_28->sv_flags, D.24410
	andl	$65536, %eax	#, D.24410
	testl	%eax, %eax	# D.24410
	je	.L1697	#,
	.loc 1 3163 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1386
	movq	(%rax), %rax	# PL_Sv.1386_31->sv_any, D.24411
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_32].xiv_iv, iftmp.1384
	jmp	.L1698	#
.L1697:
	.loc 1 3163 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1387
	movq	%rax, %rdi	# PL_Sv.1387,
	call	Perl_sv_2iv	#
.L1698:
	.loc 1 3163 0 discriminator 3
	movq	%rax, %r13	# iftmp.1384, offset
	.loc 1 3164 0 is_stmt 1 discriminator 3
	movq	%rbx, %rax	# sp, sp.1388
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %r12	# *sp.1388_37, src
	.loc 1 3165 0 discriminator 3
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1390
	movzbl	36(%rax), %eax	# PL_op.1390_40->op_flags, D.24412
	movzbl	%al, %eax	# D.24412, D.24413
	andl	$32, %eax	#, D.24413
	testl	%eax, %eax	# D.24413
	jne	.L1699	#,
	.loc 1 3165 0 is_stmt 0 discriminator 2
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1391
	movzbl	37(%rax), %eax	# PL_op.1391_44->op_private, D.24412
	movzbl	%al, %eax	# D.24412, D.24413
	andl	$8, %eax	#, D.24413
	testl	%eax, %eax	# D.24413
	je	.L1700	#,
	.loc 1 3165 0 discriminator 3
	call	Perl_is_lvalue_sub	#
	testl	%eax, %eax	# D.24413
	je	.L1700	#,
.L1699:
	.loc 1 3165 0 discriminator 1
	movl	$1, %eax	#, iftmp.1389
	jmp	.L1701	#
.L1700:
	.loc 1 3165 0 discriminator 4
	movl	$0, %eax	#, iftmp.1389
.L1701:
	.loc 1 3165 0 discriminator 5
	movl	%eax, -44(%rbp)	# iftmp.1389, lvalue
	.loc 1 3167 0 is_stmt 1 discriminator 5
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.1392
	testb	%al, %al	# PL_tainting.1392
	je	.L1702	#,
	.loc 1 3167 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp128
	movq	%rax, %rdi	# tmp128,
	call	Perl_sv_untaint	#
.L1702:
	.loc 1 3168 0 is_stmt 1
	cmpl	$0, -44(%rbp)	#, lvalue
	je	.L1703	#,
	.loc 1 3169 0
	movq	-40(%rbp), %rax	# targ, tmp129
	movl	8(%rax), %eax	# targ_12->sv_refcnt, D.24410
	cmpl	$1, %eax	#, D.24410
	jbe	.L1704	#,
	.loc 1 3170 0
	call	Perl_sv_newmortal	#
	movq	%rax, -40(%rbp)	# tmp130, targ
.L1704:
	.loc 1 3171 0
	movq	-40(%rbp), %rax	# targ, tmp131
	movl	12(%rax), %eax	# targ_1->sv_flags, D.24410
	movzbl	%al, %eax	# D.24410, D.24410
	cmpl	$8, %eax	#, D.24410
	ja	.L1705	#,
	.loc 1 3172 0
	movq	-40(%rbp), %rax	# targ, tmp132
	movl	$9, %esi	#,
	movq	%rax, %rdi	# tmp132,
	call	Perl_sv_upgrade	#
	.loc 1 3173 0
	movq	-40(%rbp), %rax	# targ, tmp133
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$118, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp133,
	call	Perl_sv_magic	#
.L1705:
	.loc 1 3175 0
	movq	-40(%rbp), %rax	# targ, tmp134
	movq	(%rax), %rax	# targ_1->sv_any, D.24411
	movb	$118, 80(%rax)	#, MEM[(struct XPVLV *)_57].xlv_type
	.loc 1 3176 0
	movq	-40(%rbp), %rax	# targ, tmp135
	movq	(%rax), %rax	# targ_1->sv_any, D.24411
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_58].xlv_targ, D.24414
	cmpq	%r12, %rax	# src, D.24414
	je	.L1706	#,
	.loc 1 3177 0
	movq	-40(%rbp), %rax	# targ, tmp136
	movq	(%rax), %rax	# targ_1->sv_any, D.24411
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_60].xlv_targ, D.24414
	testq	%rax, %rax	# D.24414
	je	.L1707	#,
	.loc 1 3178 0
	movq	-40(%rbp), %rax	# targ, tmp137
	movq	(%rax), %rax	# targ_1->sv_any, D.24411
	movq	72(%rax), %rax	# MEM[(struct XPVLV *)_62].xlv_targ, D.24414
	movq	%rax, %rdi	# D.24414,
	call	Perl_sv_free	#
.L1707:
	.loc 1 3179 0
	movq	%r12, PL_Sv(%rip)	# src, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1394
	testq	%rax, %rax	# PL_Sv.1394
	je	.L1709	#,
	.loc 1 3179 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1395
	movl	8(%rax), %edx	# PL_Sv.1395_65->sv_refcnt, D.24410
	addl	$1, %edx	#, D.24410
	movl	%edx, 8(%rax)	# D.24410, PL_Sv.1395_65->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.1395_65->sv_refcnt, D.24410
	testl	%eax, %eax	# D.24410
	je	.L1709	#,
	.loc 1 3179 0
	nop
.L1709:
	.loc 1 3179 0 discriminator 4
	movq	-40(%rbp), %rax	# targ, tmp138
	movq	(%rax), %rax	# targ_1->sv_any, D.24411
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.1396
	movq	%rdx, 72(%rax)	# PL_Sv.1396, MEM[(struct XPVLV *)_71].xlv_targ
.L1706:
	.loc 1 3181 0 is_stmt 1
	movq	-40(%rbp), %rax	# targ, tmp139
	movq	(%rax), %rax	# targ_1->sv_any, D.24411
	movq	%r13, %rdx	# offset, offset.1397
	movq	%rdx, 56(%rax)	# offset.1397, MEM[(struct XPVLV *)_73].xlv_targoff
	.loc 1 3182 0
	movq	-40(%rbp), %rax	# targ, tmp140
	movq	(%rax), %rax	# targ_1->sv_any, D.24411
	movq	%r14, %rdx	# size, size.1398
	movq	%rdx, 64(%rax)	# size.1398, MEM[(struct XPVLV *)_75].xlv_targlen
.L1703:
	.loc 1 3185 0
	movl	%r14d, %edx	# size, D.24413
	movl	%r13d, %eax	# offset, D.24413
	movl	%eax, %esi	# D.24413,
	movq	%r12, %rdi	# src,
	call	Perl_do_vecget	#
	movq	%rax, %rdx	#, D.24408
	movq	-40(%rbp), %rax	# targ, tmp141
	movq	%rdx, %rsi	# D.24408,
	movq	%rax, %rdi	# tmp141,
	call	Perl_sv_setuv	#
	.loc 1 3186 0
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp142
	movq	%rax, (%rbx)	# tmp142, *sp_80
	.loc 1 3187 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1399
	movq	(%rax), %rax	# PL_op.1399_81->op_next, D.24415
	.loc 1 3188 0
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE87:
	.size	Perl_pp_vec, .-Perl_pp_vec
	.globl	Perl_pp_index
	.type	Perl_pp_index, @function
Perl_pp_index:
.LFB88:
	.loc 1 3191 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 3192 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1400
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1401
	movq	24(%rax), %rax	# PL_op.1401_17->op_targ, D.24416
	salq	$3, %rax	#, D.24416
	addq	%rdx, %rax	# PL_curpad.1400, D.24417
	movq	(%rax), %rax	# *_20, tmp140
	movq	%rax, -56(%rbp)	# tmp140, targ
	.loc 1 3195 0
	movq	$0, -64(%rbp)	#, temp
	.loc 1 3201 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1402
	movl	68(%rax), %eax	# PL_curcop.1402_23->cop_arybase, tmp141
	movl	%eax, -96(%rbp)	# tmp141, arybase
	.loc 1 3205 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1403
	movzbl	37(%rax), %eax	# PL_op.1403_25->op_private, D.24418
	movzbl	%al, %eax	# D.24418, D.24419
	andl	$15, %eax	#, D.24419
	cmpl	$2, %eax	#, D.24419
	jg	.L1712	#,
	.loc 1 3206 0
	movl	$0, -108(%rbp)	#, offset
	jmp	.L1713	#
.L1712:
	.loc 1 3208 0
	movq	%rbx, %rax	# sp, sp.1404
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1404_29, PL_Sv.1405
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1405, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1407
	movl	12(%rax), %eax	# PL_Sv.1407_32->sv_flags, D.24420
	andl	$65536, %eax	#, D.24420
	testl	%eax, %eax	# D.24420
	je	.L1714	#,
	.loc 1 3208 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1408
	movq	(%rax), %rax	# PL_Sv.1408_35->sv_any, D.24421
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_36].xiv_iv, iftmp.1406
	jmp	.L1715	#
.L1714:
	.loc 1 3208 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1409
	movq	%rax, %rdi	# PL_Sv.1409,
	call	Perl_sv_2iv	#
.L1715:
	.loc 1 3208 0 discriminator 3
	movl	-96(%rbp), %edx	# arybase, tmp142
	movslq	%edx, %rdx	# tmp142, D.24422
	subq	%rdx, %rax	# D.24422, D.24422
	movl	%eax, -108(%rbp)	# offset.1410, offset
.L1713:
	.loc 1 3209 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1411
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1411_43, tmp143
	movq	%rax, -72(%rbp)	# tmp143, little
	.loc 1 3210 0
	movq	%rbx, %rax	# sp, sp.1412
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1412_46, tmp144
	movq	%rax, -80(%rbp)	# tmp144, big
	.loc 1 3211 0
	movq	-80(%rbp), %rax	# big, tmp145
	movl	12(%rax), %eax	# big_48->sv_flags, D.24420
	andl	$536870912, %eax	#, D.24420
	testl	%eax, %eax	# D.24420
	je	.L1716	#,
	.loc 1 3211 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1414
	movzbl	37(%rax), %eax	# PL_curcop.1414_51->op_private, D.24418
	movzbl	%al, %eax	# D.24418, D.24419
	andl	$8, %eax	#, D.24419
	testl	%eax, %eax	# D.24419
	jne	.L1716	#,
	.loc 1 3211 0 discriminator 3
	movl	$1, %eax	#, iftmp.1413
	jmp	.L1717	#
.L1716:
	.loc 1 3211 0 discriminator 2
	movl	$0, %eax	#, iftmp.1413
.L1717:
	.loc 1 3211 0 discriminator 4
	movl	%eax, -100(%rbp)	# iftmp.1413, big_utf8
	.loc 1 3212 0 is_stmt 1 discriminator 4
	movq	-72(%rbp), %rax	# little, tmp146
	movl	12(%rax), %eax	# little_45->sv_flags, D.24420
	andl	$536870912, %eax	#, D.24420
	testl	%eax, %eax	# D.24420
	je	.L1718	#,
	.loc 1 3212 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1416
	movzbl	37(%rax), %eax	# PL_curcop.1416_60->op_private, D.24418
	movzbl	%al, %eax	# D.24418, D.24419
	andl	$8, %eax	#, D.24419
	testl	%eax, %eax	# D.24419
	jne	.L1718	#,
	.loc 1 3212 0 discriminator 3
	movl	$1, %eax	#, iftmp.1415
	jmp	.L1719	#
.L1718:
	.loc 1 3212 0 discriminator 2
	movl	$0, %eax	#, iftmp.1415
.L1719:
	.loc 1 3212 0 discriminator 4
	movl	%eax, -92(%rbp)	# iftmp.1415, little_utf8
	.loc 1 3213 0 is_stmt 1 discriminator 4
	movl	-100(%rbp), %eax	# big_utf8, tmp147
	cmpl	-92(%rbp), %eax	# little_utf8, tmp147
	je	.L1720	#,
.LBB432:
	.loc 1 3215 0
	cmpl	$0, -92(%rbp)	#, little_utf8
	je	.L1721	#,
	.loc 1 3215 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# big, iftmp.1417
	jmp	.L1722	#
.L1721:
	.loc 1 3215 0 discriminator 2
	movq	-72(%rbp), %rax	# little, iftmp.1417
.L1722:
	.loc 1 3215 0 discriminator 3
	movq	%rax, -48(%rbp)	# iftmp.1417, bytes
	.loc 1 3217 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# bytes, tmp148
	movl	12(%rax), %eax	# bytes_69->sv_flags, D.24420
	andl	$262144, %eax	#, D.24420
	testl	%eax, %eax	# D.24420
	je	.L1723	#,
	.loc 1 3217 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# bytes, tmp149
	movq	(%rax), %rax	# bytes_69->sv_any, D.24421
	movq	8(%rax), %rax	# MEM[(struct XPV *)_72].xpv_cur, len.1419
	movq	%rax, -88(%rbp)	# len.1419, len
	movq	-48(%rbp), %rax	# bytes, tmp150
	movq	(%rax), %rax	# bytes_69->sv_any, D.24421
	movq	(%rax), %rax	# MEM[(struct XPV *)_74].xpv_pv, iftmp.1418
	jmp	.L1724	#
.L1723:
	.loc 1 3217 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp151
	movq	-48(%rbp), %rax	# bytes, tmp152
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp151,
	movq	%rax, %rdi	# tmp152,
	call	Perl_sv_2pv_flags	#
.L1724:
	.loc 1 3217 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.1418, p
	.loc 1 3219 0 is_stmt 1 discriminator 3
	movq	-88(%rbp), %rdx	# len, len.1420
	movq	-40(%rbp), %rax	# p, tmp153
	movq	%rdx, %rsi	# len.1420,
	movq	%rax, %rdi	# tmp153,
	call	Perl_newSVpvn	#
	movq	%rax, -64(%rbp)	# tmp154, temp
	.loc 1 3221 0 discriminator 3
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.1421
	testq	%rax, %rax	# PL_encoding.1421
	je	.L1725	#,
	.loc 1 3222 0
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.1422
	movq	-64(%rbp), %rax	# temp, tmp155
	movq	%rdx, %rsi	# PL_encoding.1422,
	movq	%rax, %rdi	# tmp155,
	call	Perl_sv_recode_to_utf8	#
	jmp	.L1726	#
.L1725:
	.loc 1 3224 0
	movq	-64(%rbp), %rax	# temp, tmp156
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp156,
	call	Perl_sv_utf8_upgrade_flags	#
.L1726:
	.loc 1 3226 0
	cmpl	$0, -92(%rbp)	#, little_utf8
	je	.L1727	#,
	.loc 1 3227 0
	movq	-64(%rbp), %rax	# temp, tmp157
	movq	%rax, -80(%rbp)	# tmp157, big
	.loc 1 3228 0
	movl	$1, -100(%rbp)	#, big_utf8
	jmp	.L1720	#
.L1727:
	.loc 1 3230 0
	movq	-64(%rbp), %rax	# temp, tmp158
	movq	%rax, -72(%rbp)	# tmp158, little
.L1720:
.LBE432:
	.loc 1 3233 0
	cmpl	$0, -100(%rbp)	#, big_utf8
	je	.L1729	#,
	.loc 1 3233 0 is_stmt 0 discriminator 1
	movl	-108(%rbp), %eax	# offset, offset.1423
	testl	%eax, %eax	# offset.1423
	jle	.L1729	#,
	.loc 1 3234 0 is_stmt 1
	leaq	-108(%rbp), %rcx	#, tmp159
	movq	-80(%rbp), %rax	# big, tmp160
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp159,
	movq	%rax, %rdi	# tmp160,
	call	Perl_sv_pos_u2b	#
.L1729:
	.loc 1 3235 0
	movq	-80(%rbp), %rax	# big, tmp161
	movl	12(%rax), %eax	# big_3->sv_flags, D.24420
	andl	$262144, %eax	#, D.24420
	testl	%eax, %eax	# D.24420
	je	.L1730	#,
	.loc 1 3235 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# big, tmp162
	movq	(%rax), %rax	# big_3->sv_any, D.24421
	movq	8(%rax), %rax	# MEM[(struct XPV *)_88].xpv_cur, biglen.1425
	movq	%rax, -88(%rbp)	# biglen.1425, biglen
	movq	-80(%rbp), %rax	# big, tmp163
	movq	(%rax), %rax	# big_3->sv_any, D.24421
	movq	(%rax), %rax	# MEM[(struct XPV *)_90].xpv_pv, iftmp.1424
	jmp	.L1731	#
.L1730:
	.loc 1 3235 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp164
	movq	-80(%rbp), %rax	# big, tmp165
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp164,
	movq	%rax, %rdi	# tmp165,
	call	Perl_sv_2pv_flags	#
.L1731:
	.loc 1 3235 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1424, tmps
	.loc 1 3236 0 is_stmt 1 discriminator 3
	movl	-108(%rbp), %eax	# offset, offset.1426
	testl	%eax, %eax	# offset.1426
	jns	.L1732	#,
	.loc 1 3237 0
	movl	$0, -108(%rbp)	#, offset
	jmp	.L1733	#
.L1732:
	.loc 1 3238 0
	movq	-88(%rbp), %rax	# biglen, biglen.1427
	movl	%eax, %edx	# biglen.1427, D.24419
	movl	-108(%rbp), %eax	# offset, offset.1428
	cmpl	%eax, %edx	# offset.1428, D.24419
	jge	.L1733	#,
	.loc 1 3239 0
	movq	-88(%rbp), %rax	# biglen, biglen.1429
	movl	%eax, -108(%rbp)	# offset.1430, offset
.L1733:
	.loc 1 3240 0
	movq	-88(%rbp), %rdx	# biglen, biglen.1431
	movq	-32(%rbp), %rax	# tmps, tmp166
	leaq	(%rdx,%rax), %rsi	#, D.24423
	movl	-108(%rbp), %eax	# offset, offset.1432
	movslq	%eax, %rdx	# offset.1432, D.24424
	movq	-32(%rbp), %rax	# tmps, tmp167
	leaq	(%rdx,%rax), %rdi	#, D.24423
	movq	-72(%rbp), %rax	# little, tmp168
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# tmp168,
	call	Perl_fbm_instr	#
	movq	%rax, -24(%rbp)	# tmp169, tmps2
	cmpq	$0, -24(%rbp)	#, tmps2
	jne	.L1734	#,
	.loc 1 3242 0
	movl	$-1, -104(%rbp)	#, retval
	jmp	.L1735	#
.L1734:
	.loc 1 3244 0
	movq	-24(%rbp), %rdx	# tmps2, tmps2.1433
	movq	-32(%rbp), %rax	# tmps, tmps.1434
	subq	%rax, %rdx	# tmps.1434, D.24422
	movq	%rdx, %rax	# D.24422, D.24422
	movl	%eax, -104(%rbp)	# retval.1435, retval
.L1735:
	.loc 1 3245 0
	movl	-104(%rbp), %eax	# retval, retval.1436
	testl	%eax, %eax	# retval.1436
	jle	.L1736	#,
	.loc 1 3245 0 is_stmt 0 discriminator 1
	cmpl	$0, -100(%rbp)	#, big_utf8
	je	.L1736	#,
	.loc 1 3246 0 is_stmt 1
	leaq	-104(%rbp), %rdx	#, tmp170
	movq	-80(%rbp), %rax	# big, tmp171
	movq	%rdx, %rsi	# tmp170,
	movq	%rax, %rdi	# tmp171,
	call	Perl_sv_pos_b2u	#
.L1736:
	.loc 1 3247 0
	cmpq	$0, -64(%rbp)	#, temp
	je	.L1737	#,
	.loc 1 3248 0
	movq	-64(%rbp), %rax	# temp, tmp172
	movq	%rax, %rdi	# tmp172,
	call	Perl_sv_free	#
.L1737:
.LBB433:
	.loc 1 3249 0
	movl	-104(%rbp), %edx	# retval, retval.1437
	movl	-96(%rbp), %eax	# arybase, tmp173
	addl	%edx, %eax	# retval.1437, D.24419
	movslq	%eax, %rdx	# D.24419, D.24422
	movq	-56(%rbp), %rax	# targ, tmp174
	movq	%rdx, %rsi	# D.24422,
	movq	%rax, %rdi	# tmp174,
	call	Perl_sv_setiv	#
.LBB434:
	movq	-56(%rbp), %rax	# targ, tmp175
	movl	12(%rax), %eax	# targ_21->sv_flags, D.24420
	andl	$16384, %eax	#, D.24420
	testl	%eax, %eax	# D.24420
	je	.L1738	#,
	.loc 1 3249 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp176
	movq	%rax, %rdi	# tmp176,
	call	Perl_mg_set	#
.L1738:
	.loc 1 3249 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-56(%rbp), %rax	# targ, tmp177
	movq	%rax, (%rbx)	# tmp177, *sp_116
.LBE434:
.LBE433:
	.loc 1 3250 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1438
	movq	(%rax), %rax	# PL_op.1438_118->op_next, D.24426
	.loc 1 3251 0 discriminator 2
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE88:
	.size	Perl_pp_index, .-Perl_pp_index
	.globl	Perl_pp_rindex
	.type	Perl_pp_rindex, @function
Perl_pp_rindex:
.LFB89:
	.loc 1 3254 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$120, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 3255 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1439
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1440
	movq	24(%rax), %rax	# PL_op.1440_18->op_targ, D.24428
	salq	$3, %rax	#, D.24428
	addq	%rdx, %rax	# PL_curpad.1439, D.24429
	movq	(%rax), %rax	# *_21, tmp158
	movq	%rax, -56(%rbp)	# tmp158, targ
	.loc 1 3258 0
	movq	$0, -64(%rbp)	#, temp
	.loc 1 3265 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1441
	movl	68(%rax), %eax	# PL_curcop.1441_24->cop_arybase, tmp159
	movl	%eax, -104(%rbp)	# tmp159, arybase
	.loc 1 3269 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1442
	movzbl	37(%rax), %eax	# PL_op.1442_26->op_private, D.24430
	movzbl	%al, %eax	# D.24430, D.24431
	andl	$15, %eax	#, D.24431
	cmpl	$2, %eax	#, D.24431
	jle	.L1741	#,
	.loc 1 3270 0
	movq	%rbx, %rax	# sp, sp.1443
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1443_30, PL_Sv.1444
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1444, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1446
	movl	12(%rax), %eax	# PL_Sv.1446_33->sv_flags, D.24432
	andl	$65536, %eax	#, D.24432
	testl	%eax, %eax	# D.24432
	je	.L1742	#,
	.loc 1 3270 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1447
	movq	(%rax), %rax	# PL_Sv.1447_36->sv_any, D.24433
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_37].xiv_iv, D.24434
	jmp	.L1743	#
.L1742:
	.loc 1 3270 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1448
	movq	%rax, %rdi	# PL_Sv.1448,
	call	Perl_sv_2iv	#
.L1743:
	.loc 1 3270 0 discriminator 3
	movl	%eax, -116(%rbp)	# iftmp.1445, offset
.L1741:
	.loc 1 3271 0 is_stmt 1
	movq	%rbx, %rax	# sp, sp.1449
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1449_43, tmp160
	movq	%rax, -72(%rbp)	# tmp160, little
	.loc 1 3272 0
	movq	%rbx, %rax	# sp, sp.1450
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1450_46, tmp161
	movq	%rax, -80(%rbp)	# tmp161, big
	.loc 1 3273 0
	movq	-80(%rbp), %rax	# big, tmp162
	movl	12(%rax), %eax	# big_48->sv_flags, D.24432
	andl	$536870912, %eax	#, D.24432
	testl	%eax, %eax	# D.24432
	je	.L1744	#,
	.loc 1 3273 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1452
	movzbl	37(%rax), %eax	# PL_curcop.1452_51->op_private, D.24430
	movzbl	%al, %eax	# D.24430, D.24431
	andl	$8, %eax	#, D.24431
	testl	%eax, %eax	# D.24431
	jne	.L1744	#,
	.loc 1 3273 0 discriminator 3
	movl	$1, %eax	#, iftmp.1451
	jmp	.L1745	#
.L1744:
	.loc 1 3273 0 discriminator 2
	movl	$0, %eax	#, iftmp.1451
.L1745:
	.loc 1 3273 0 discriminator 4
	movl	%eax, -108(%rbp)	# iftmp.1451, big_utf8
	.loc 1 3274 0 is_stmt 1 discriminator 4
	movq	-72(%rbp), %rax	# little, tmp163
	movl	12(%rax), %eax	# little_45->sv_flags, D.24432
	andl	$536870912, %eax	#, D.24432
	testl	%eax, %eax	# D.24432
	je	.L1746	#,
	.loc 1 3274 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1454
	movzbl	37(%rax), %eax	# PL_curcop.1454_60->op_private, D.24430
	movzbl	%al, %eax	# D.24430, D.24431
	andl	$8, %eax	#, D.24431
	testl	%eax, %eax	# D.24431
	jne	.L1746	#,
	.loc 1 3274 0 discriminator 3
	movl	$1, %eax	#, iftmp.1453
	jmp	.L1747	#
.L1746:
	.loc 1 3274 0 discriminator 2
	movl	$0, %eax	#, iftmp.1453
.L1747:
	.loc 1 3274 0 discriminator 4
	movl	%eax, -100(%rbp)	# iftmp.1453, little_utf8
	.loc 1 3275 0 is_stmt 1 discriminator 4
	movl	-108(%rbp), %eax	# big_utf8, tmp164
	cmpl	-100(%rbp), %eax	# little_utf8, tmp164
	je	.L1748	#,
.LBB435:
	.loc 1 3277 0
	cmpl	$0, -100(%rbp)	#, little_utf8
	je	.L1749	#,
	.loc 1 3277 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# big, iftmp.1455
	jmp	.L1750	#
.L1749:
	.loc 1 3277 0 discriminator 2
	movq	-72(%rbp), %rax	# little, iftmp.1455
.L1750:
	.loc 1 3277 0 discriminator 3
	movq	%rax, -48(%rbp)	# iftmp.1455, bytes
	.loc 1 3279 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# bytes, tmp165
	movl	12(%rax), %eax	# bytes_69->sv_flags, D.24432
	andl	$262144, %eax	#, D.24432
	testl	%eax, %eax	# D.24432
	je	.L1751	#,
	.loc 1 3279 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# bytes, tmp166
	movq	(%rax), %rax	# bytes_69->sv_any, D.24433
	movq	8(%rax), %rax	# MEM[(struct XPV *)_72].xpv_cur, len.1457
	movq	%rax, -88(%rbp)	# len.1457, len
	movq	-48(%rbp), %rax	# bytes, tmp167
	movq	(%rax), %rax	# bytes_69->sv_any, D.24433
	movq	(%rax), %rax	# MEM[(struct XPV *)_74].xpv_pv, iftmp.1456
	jmp	.L1752	#
.L1751:
	.loc 1 3279 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp168
	movq	-48(%rbp), %rax	# bytes, tmp169
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp168,
	movq	%rax, %rdi	# tmp169,
	call	Perl_sv_2pv_flags	#
.L1752:
	.loc 1 3279 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.1456, p
	.loc 1 3281 0 is_stmt 1 discriminator 3
	movq	-88(%rbp), %rdx	# len, len.1458
	movq	-40(%rbp), %rax	# p, tmp170
	movq	%rdx, %rsi	# len.1458,
	movq	%rax, %rdi	# tmp170,
	call	Perl_newSVpvn	#
	movq	%rax, -64(%rbp)	# tmp171, temp
	.loc 1 3283 0 discriminator 3
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.1459
	testq	%rax, %rax	# PL_encoding.1459
	je	.L1753	#,
	.loc 1 3284 0
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.1460
	movq	-64(%rbp), %rax	# temp, tmp172
	movq	%rdx, %rsi	# PL_encoding.1460,
	movq	%rax, %rdi	# tmp172,
	call	Perl_sv_recode_to_utf8	#
	jmp	.L1754	#
.L1753:
	.loc 1 3286 0
	movq	-64(%rbp), %rax	# temp, tmp173
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp173,
	call	Perl_sv_utf8_upgrade_flags	#
.L1754:
	.loc 1 3288 0
	cmpl	$0, -100(%rbp)	#, little_utf8
	je	.L1755	#,
	.loc 1 3289 0
	movq	-64(%rbp), %rax	# temp, tmp174
	movq	%rax, -80(%rbp)	# tmp174, big
	.loc 1 3290 0
	movl	$1, -108(%rbp)	#, big_utf8
	jmp	.L1748	#
.L1755:
	.loc 1 3292 0
	movq	-64(%rbp), %rax	# temp, tmp175
	movq	%rax, -72(%rbp)	# tmp175, little
.L1748:
.LBE435:
	.loc 1 3295 0
	movq	-72(%rbp), %rax	# little, tmp176
	movl	12(%rax), %eax	# little_5->sv_flags, D.24432
	andl	$262144, %eax	#, D.24432
	testl	%eax, %eax	# D.24432
	je	.L1757	#,
	.loc 1 3295 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# little, tmp177
	movq	(%rax), %rax	# little_5->sv_any, D.24433
	movq	8(%rax), %rax	# MEM[(struct XPV *)_87].xpv_cur, llen.1462
	movq	%rax, -88(%rbp)	# llen.1462, llen
	movq	-72(%rbp), %rax	# little, tmp178
	movq	(%rax), %rax	# little_5->sv_any, D.24433
	movq	(%rax), %rax	# MEM[(struct XPV *)_89].xpv_pv, iftmp.1461
	jmp	.L1758	#
.L1757:
	.loc 1 3295 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp179
	movq	-72(%rbp), %rax	# little, tmp180
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp179,
	movq	%rax, %rdi	# tmp180,
	call	Perl_sv_2pv_flags	#
.L1758:
	.loc 1 3295 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1461, tmps2
	.loc 1 3296 0 is_stmt 1 discriminator 3
	movq	-80(%rbp), %rax	# big, tmp181
	movl	12(%rax), %eax	# big_3->sv_flags, D.24432
	andl	$262144, %eax	#, D.24432
	testl	%eax, %eax	# D.24432
	je	.L1759	#,
	.loc 1 3296 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# big, tmp182
	movq	(%rax), %rax	# big_3->sv_any, D.24433
	movq	8(%rax), %rax	# MEM[(struct XPV *)_95].xpv_cur, blen.1464
	movq	%rax, -96(%rbp)	# blen.1464, blen
	movq	-80(%rbp), %rax	# big, tmp183
	movq	(%rax), %rax	# big_3->sv_any, D.24433
	movq	(%rax), %rax	# MEM[(struct XPV *)_97].xpv_pv, iftmp.1463
	jmp	.L1760	#
.L1759:
	.loc 1 3296 0 discriminator 2
	leaq	-96(%rbp), %rcx	#, tmp184
	movq	-80(%rbp), %rax	# big, tmp185
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp184,
	movq	%rax, %rdi	# tmp185,
	call	Perl_sv_2pv_flags	#
.L1760:
	.loc 1 3296 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.1463, tmps
	.loc 1 3298 0 is_stmt 1 discriminator 3
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1465
	movzbl	37(%rax), %eax	# PL_op.1465_101->op_private, D.24430
	movzbl	%al, %eax	# D.24430, D.24431
	andl	$15, %eax	#, D.24431
	cmpl	$2, %eax	#, D.24431
	jg	.L1761	#,
	.loc 1 3299 0
	movq	-96(%rbp), %rax	# blen, blen.1466
	movl	%eax, -116(%rbp)	# offset.1467, offset
	jmp	.L1762	#
.L1761:
	.loc 1 3301 0
	movl	-116(%rbp), %eax	# offset, offset.1468
	testl	%eax, %eax	# offset.1468
	jle	.L1763	#,
	.loc 1 3301 0 is_stmt 0 discriminator 1
	cmpl	$0, -108(%rbp)	#, big_utf8
	je	.L1763	#,
	.loc 1 3302 0 is_stmt 1
	leaq	-116(%rbp), %rcx	#, tmp186
	movq	-80(%rbp), %rax	# big, tmp187
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp186,
	movq	%rax, %rdi	# tmp187,
	call	Perl_sv_pos_u2b	#
.L1763:
	.loc 1 3303 0
	movl	-116(%rbp), %eax	# offset, offset.1469
	subl	-104(%rbp), %eax	# arybase, D.24431
	movl	%eax, %edx	# D.24431, D.24435
	movq	-88(%rbp), %rax	# llen, llen.1470
	addl	%edx, %eax	# D.24435, D.24435
	movl	%eax, -116(%rbp)	# offset.1471, offset
.L1762:
	.loc 1 3305 0
	movl	-116(%rbp), %eax	# offset, offset.1472
	testl	%eax, %eax	# offset.1472
	jns	.L1764	#,
	.loc 1 3306 0
	movl	$0, -116(%rbp)	#, offset
	jmp	.L1765	#
.L1764:
	.loc 1 3307 0
	movq	-96(%rbp), %rax	# blen, blen.1473
	movl	%eax, %edx	# blen.1473, D.24431
	movl	-116(%rbp), %eax	# offset, offset.1474
	cmpl	%eax, %edx	# offset.1474, D.24431
	jge	.L1765	#,
	.loc 1 3308 0
	movq	-96(%rbp), %rax	# blen, blen.1475
	movl	%eax, -116(%rbp)	# offset.1476, offset
.L1765:
	.loc 1 3309 0
	movq	-88(%rbp), %rdx	# llen, llen.1477
	movq	-32(%rbp), %rax	# tmps2, tmp188
	leaq	(%rdx,%rax), %rcx	#, D.24436
	movl	-116(%rbp), %eax	# offset, offset.1478
	movslq	%eax, %rdx	# offset.1478, D.24437
	movq	-24(%rbp), %rax	# tmps, tmp189
	leaq	(%rdx,%rax), %rsi	#, D.24436
	movq	-32(%rbp), %rdx	# tmps2, tmp190
	movq	-24(%rbp), %rax	# tmps, tmp191
	movq	%rax, %rdi	# tmp191,
	call	Perl_rninstr	#
	movq	%rax, -32(%rbp)	# tmp192, tmps2
	cmpq	$0, -32(%rbp)	#, tmps2
	jne	.L1766	#,
	.loc 1 3311 0
	movl	$-1, -112(%rbp)	#, retval
	jmp	.L1767	#
.L1766:
	.loc 1 3313 0
	movq	-32(%rbp), %rdx	# tmps2, tmps2.1479
	movq	-24(%rbp), %rax	# tmps, tmps.1480
	subq	%rax, %rdx	# tmps.1480, D.24434
	movq	%rdx, %rax	# D.24434, D.24434
	movl	%eax, -112(%rbp)	# retval.1481, retval
.L1767:
	.loc 1 3314 0
	movl	-112(%rbp), %eax	# retval, retval.1482
	testl	%eax, %eax	# retval.1482
	jle	.L1768	#,
	.loc 1 3314 0 is_stmt 0 discriminator 1
	cmpl	$0, -108(%rbp)	#, big_utf8
	je	.L1768	#,
	.loc 1 3315 0 is_stmt 1
	leaq	-112(%rbp), %rdx	#, tmp193
	movq	-80(%rbp), %rax	# big, tmp194
	movq	%rdx, %rsi	# tmp193,
	movq	%rax, %rdi	# tmp194,
	call	Perl_sv_pos_b2u	#
.L1768:
	.loc 1 3316 0
	cmpq	$0, -64(%rbp)	#, temp
	je	.L1769	#,
	.loc 1 3317 0
	movq	-64(%rbp), %rax	# temp, tmp195
	movq	%rax, %rdi	# tmp195,
	call	Perl_sv_free	#
.L1769:
.LBB436:
	.loc 1 3318 0
	movl	-112(%rbp), %edx	# retval, retval.1483
	movl	-104(%rbp), %eax	# arybase, tmp196
	addl	%edx, %eax	# retval.1483, D.24431
	movslq	%eax, %rdx	# D.24431, D.24434
	movq	-56(%rbp), %rax	# targ, tmp197
	movq	%rdx, %rsi	# D.24434,
	movq	%rax, %rdi	# tmp197,
	call	Perl_sv_setiv	#
.LBB437:
	movq	-56(%rbp), %rax	# targ, tmp198
	movl	12(%rax), %eax	# targ_22->sv_flags, D.24432
	andl	$16384, %eax	#, D.24432
	testl	%eax, %eax	# D.24432
	je	.L1770	#,
	.loc 1 3318 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp199
	movq	%rax, %rdi	# tmp199,
	call	Perl_mg_set	#
.L1770:
	.loc 1 3318 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-56(%rbp), %rax	# targ, tmp200
	movq	%rax, (%rbx)	# tmp200, *sp_137
.LBE437:
.LBE436:
	.loc 1 3319 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1484
	movq	(%rax), %rax	# PL_op.1484_139->op_next, D.24439
	.loc 1 3320 0 discriminator 2
	addq	$120, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE89:
	.size	Perl_pp_rindex, .-Perl_pp_rindex
	.globl	Perl_pp_sprintf
	.type	Perl_pp_sprintf, @function
Perl_pp_sprintf:
.LFB90:
	.loc 1 3323 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 3324 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1485
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1486
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1488
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1488, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1487_4, D.24441
	cltq
	salq	$3, %rax	#, D.24442
	leaq	(%rcx,%rax), %r12	#, mark
	movq	%r12, %rdx	# mark, mark.1489
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1490
	subq	%rax, %rdx	# PL_stack_base.1491, D.24443
	movq	%rdx, %rax	# D.24443, D.24443
	sarq	$3, %rax	#, tmp106
	movl	%eax, -28(%rbp)	# D.24443, origmark
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1492
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1493
	movq	24(%rax), %rax	# PL_op.1493_17->op_targ, D.24442
	salq	$3, %rax	#, D.24442
	addq	%rdx, %rax	# PL_curpad.1492, D.24444
	movq	(%rax), %rax	# *_20, tmp107
	movq	%rax, -24(%rbp)	# tmp107, targ
	.loc 1 3325 0
	leaq	8(%r12), %rdx	#, D.24444
	movq	%rbx, %rcx	# sp, sp.1494
	movq	%r12, %rax	# mark, mark.1495
	subq	%rax, %rcx	# mark.1495, D.24443
	movq	%rcx, %rax	# D.24443, D.24443
	sarq	$3, %rax	#, tmp108
	movl	%eax, %ecx	# D.24443, D.24441
	movq	-24(%rbp), %rax	# targ, tmp109
	movl	%ecx, %esi	# D.24441,
	movq	%rax, %rdi	# tmp109,
	call	Perl_do_sprintf	#
	.loc 1 3326 0
	movq	-24(%rbp), %rax	# targ, tmp110
	movl	12(%rax), %eax	# targ_21->sv_flags, D.24445
	andl	$57344, %eax	#, D.24445
	testl	%eax, %eax	# D.24445
	je	.L1773	#,
	.loc 1 3326 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# targ, tmp111
	movq	%rax, %rdi	# tmp111,
	call	Perl_sv_tainted	#
	testb	%al, %al	# D.24446
	je	.L1773	#,
	movb	$1, PL_tainted(%rip)	#, PL_tainted
.L1773:
	.loc 1 3327 0 is_stmt 1
	leaq	8(%r12), %rax	#, D.24444
	movq	(%rax), %rax	# *_31, D.24447
	movl	12(%rax), %eax	# _32->sv_flags, D.24445
	andl	$536870912, %eax	#, D.24445
	testl	%eax, %eax	# D.24445
	je	.L1774	#,
	.loc 1 3327 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1496
	movzbl	37(%rax), %eax	# PL_curcop.1496_35->op_private, D.24448
	movzbl	%al, %eax	# D.24448, D.24441
	andl	$8, %eax	#, D.24441
	testl	%eax, %eax	# D.24441
	jne	.L1774	#,
	.loc 1 3328 0 is_stmt 1
	movq	-24(%rbp), %rax	# targ, tmp112
	movl	12(%rax), %eax	# targ_21->sv_flags, D.24445
	orl	$536870912, %eax	#, D.24445
	movl	%eax, %edx	# D.24445, D.24445
	movq	-24(%rbp), %rax	# targ, tmp113
	movl	%edx, 12(%rax)	# D.24445, targ_21->sv_flags
.L1774:
	.loc 1 3329 0
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1497
	movl	-28(%rbp), %edx	# origmark, tmp114
	movslq	%edx, %rdx	# tmp114, D.24442
	salq	$3, %rdx	#, D.24442
	leaq	(%rax,%rdx), %rbx	#, sp
.LBB438:
	.loc 1 3330 0
	movq	-24(%rbp), %rax	# targ, tmp115
	movl	12(%rax), %eax	# targ_21->sv_flags, D.24445
	andl	$16384, %eax	#, D.24445
	testl	%eax, %eax	# D.24445
	je	.L1775	#,
	.loc 1 3330 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# targ, tmp116
	movq	%rax, %rdi	# tmp116,
	call	Perl_mg_set	#
.L1775:
	.loc 1 3330 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-24(%rbp), %rax	# targ, tmp117
	movq	%rax, (%rbx)	# tmp117, *sp_47
.LBE438:
	.loc 1 3331 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1498
	movq	(%rax), %rax	# PL_op.1498_49->op_next, D.24449
	.loc 1 3332 0 discriminator 2
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE90:
	.size	Perl_pp_sprintf, .-Perl_pp_sprintf
	.globl	Perl_pp_ord
	.type	Perl_pp_ord, @function
Perl_pp_ord:
.LFB91:
	.loc 1 3335 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 3336 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1499
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1500
	movq	24(%rax), %rax	# PL_op.1500_8->op_targ, D.24450
	salq	$3, %rax	#, D.24450
	addq	%rdx, %rax	# PL_curpad.1499, D.24451
	movq	(%rax), %rax	# *_11, tmp105
	movq	%rax, -32(%rbp)	# tmp105, targ
	.loc 1 3337 0
	movq	%rbx, %rax	# sp, sp.1501
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1501_13, tmp106
	movq	%rax, -48(%rbp)	# tmp106, argsv
	.loc 1 3339 0
	movq	-48(%rbp), %rax	# argsv, tmp107
	movq	%rax, PL_Sv(%rip)	# tmp107, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1503
	movl	12(%rax), %eax	# PL_Sv.1503_16->sv_flags, D.24452
	andl	$262144, %eax	#, D.24452
	testl	%eax, %eax	# D.24452
	je	.L1778	#,
	.loc 1 3339 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1504
	movq	(%rax), %rax	# PL_Sv.1504_19->sv_any, D.24453
	movq	8(%rax), %rax	# MEM[(struct XPV *)_20].xpv_cur, len.1505
	movq	%rax, -56(%rbp)	# len.1505, len
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1506
	movq	(%rax), %rax	# PL_Sv.1506_22->sv_any, D.24453
	movq	(%rax), %rax	# MEM[(struct XPV *)_23].xpv_pv, iftmp.1502
	jmp	.L1779	#
.L1778:
	.loc 1 3339 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1507
	leaq	-56(%rbp), %rcx	#, tmp108
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp108,
	movq	%rax, %rdi	# PL_Sv.1507,
	call	Perl_sv_2pv_flags	#
.L1779:
	.loc 1 3339 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.1502, s
	.loc 1 3342 0 is_stmt 1 discriminator 3
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.1508
	testq	%rax, %rax	# PL_encoding.1508
	je	.L1780	#,
	.loc 1 3342 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# argsv, tmp109
	movl	12(%rax), %eax	# argsv_15->sv_flags, D.24452
	andl	$262144, %eax	#, D.24452
	testl	%eax, %eax	# D.24452
	je	.L1780	#,
	movq	-48(%rbp), %rax	# argsv, tmp110
	movl	12(%rax), %eax	# argsv_15->sv_flags, D.24452
	andl	$536870912, %eax	#, D.24452
	testl	%eax, %eax	# D.24452
	je	.L1781	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1509
	movzbl	37(%rax), %eax	# PL_curcop.1509_33->op_private, D.24454
	movzbl	%al, %eax	# D.24454, D.24455
	andl	$8, %eax	#, D.24455
	testl	%eax, %eax	# D.24455
	je	.L1780	#,
.L1781:
	.loc 1 3343 0 is_stmt 1
	movq	-48(%rbp), %rax	# argsv, tmp111
	movq	%rax, %rdi	# tmp111,
	call	Perl_newSVsv	#
	movq	%rax, %rdi	# D.24456,
	call	Perl_sv_2mortal	#
	movq	%rax, -24(%rbp)	# tmp112, tmpsv
	.loc 1 3344 0
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.1510
	movq	-24(%rbp), %rax	# tmpsv, tmp113
	movq	%rdx, %rsi	# PL_encoding.1510,
	movq	%rax, %rdi	# tmp113,
	call	Perl_sv_recode_to_utf8	#
	movq	%rax, -40(%rbp)	# tmp114, s
	.loc 1 3345 0
	movq	-24(%rbp), %rax	# tmpsv, tmp115
	movq	%rax, -48(%rbp)	# tmp115, argsv
.L1780:
.LBB439:
	.loc 1 3348 0
	movq	-48(%rbp), %rax	# argsv, tmp116
	movl	12(%rax), %eax	# argsv_2->sv_flags, D.24452
	andl	$536870912, %eax	#, D.24452
	testl	%eax, %eax	# D.24452
	je	.L1782	#,
	.loc 1 3348 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1512
	movzbl	37(%rax), %eax	# PL_curcop.1512_44->op_private, D.24454
	movzbl	%al, %eax	# D.24454, D.24455
	andl	$8, %eax	#, D.24455
	testl	%eax, %eax	# D.24455
	jne	.L1782	#,
	movq	-40(%rbp), %rax	# s, tmp117
	movl	$105, %ecx	#,
	movl	$0, %edx	#,
	movl	$13, %esi	#,
	movq	%rax, %rdi	# tmp117,
	call	Perl_utf8n_to_uvuni	#
	jmp	.L1783	#
.L1782:
	.loc 1 3348 0 discriminator 2
	movq	-40(%rbp), %rax	# s, tmp118
	movzbl	(%rax), %eax	# *s_3, D.24454
	movzbl	%al, %eax	# D.24454, iftmp.1511
.L1783:
	.loc 1 3348 0 discriminator 3
	movq	-32(%rbp), %rdx	# targ, tmp119
	movq	%rax, %rsi	# iftmp.1511,
	movq	%rdx, %rdi	# tmp119,
	call	Perl_sv_setuv	#
.LBB440:
	movq	-32(%rbp), %rax	# targ, tmp120
	movl	12(%rax), %eax	# targ_12->sv_flags, D.24452
	andl	$16384, %eax	#, D.24452
	testl	%eax, %eax	# D.24452
	je	.L1784	#,
	.loc 1 3348 0 discriminator 1
	movq	-32(%rbp), %rax	# targ, tmp121
	movq	%rax, %rdi	# tmp121,
	call	Perl_mg_set	#
.L1784:
.LBB441:
	.loc 1 3348 0 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1513
	movq	%rax, %rdx	# PL_stack_max.1513, PL_stack_max.1514
	movq	%rbx, %rax	# sp, sp.1515
	subq	%rax, %rdx	# sp.1515, D.24457
	movq	%rdx, %rax	# D.24457, D.24457
	cmpq	$7, %rax	#, D.24457
	jg	.L1785	#,
	.loc 1 3348 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1785:
	.loc 1 3348 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-32(%rbp), %rax	# targ, tmp122
	movq	%rax, (%rbx)	# tmp122, *sp_58
.LBE441:
.LBE440:
.LBE439:
	.loc 1 3352 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1516
	movq	(%rax), %rax	# PL_op.1516_60->op_next, D.24458
	.loc 1 3353 0 discriminator 2
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE91:
	.size	Perl_pp_ord, .-Perl_pp_ord
	.section	.rodata
.LC42:
	.string	"\357\277\275"
	.string	""
	.text
	.globl	Perl_pp_chr
	.type	Perl_pp_chr, @function
Perl_pp_chr:
.LFB92:
	.loc 1 3356 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 3357 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1517
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1518
	movq	24(%rax), %rax	# PL_op.1518_21->op_targ, D.24460
	salq	$3, %rax	#, D.24460
	addq	%rdx, %rax	# PL_curpad.1517, D.24461
	movq	(%rax), %rax	# *_24, tmp175
	movq	%rax, -40(%rbp)	# tmp175, targ
	.loc 1 3359 0
	movq	%rbx, %rax	# sp, sp.1519
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1519_26, PL_Sv.1520
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1520, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1522
	movl	12(%rax), %eax	# PL_Sv.1522_29->sv_flags, D.24462
	andl	$65536, %eax	#, D.24462
	testl	%eax, %eax	# D.24462
	je	.L1788	#,
	.loc 1 3359 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1523
	movq	(%rax), %rax	# PL_Sv.1523_32->sv_any, D.24463
	movq	24(%rax), %rax	# MEM[(struct XPVUV *)_33].xuv_uv, iftmp.1521
	jmp	.L1789	#
.L1788:
	.loc 1 3359 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1524
	movq	%rax, %rdi	# PL_Sv.1524,
	call	Perl_sv_2uv	#
.L1789:
	.loc 1 3359 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.1521, value
	.loc 1 3361 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# targ, tmp176
	movl	12(%rax), %eax	# targ_25->sv_flags, D.24462
	movzbl	%al, %eax	# D.24462, D.24462
	cmpl	$3, %eax	#, D.24462
	ja	.L1790	#,
	.loc 1 3361 0 is_stmt 0 discriminator 2
	movq	-40(%rbp), %rax	# targ, tmp177
	movl	$4, %esi	#,
	movq	%rax, %rdi	# tmp177,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.24464
	je	.L1792	#,
.L1790:
	.loc 1 3361 0 discriminator 1
	nop
.L1792:
	.loc 1 3363 0 is_stmt 1
	cmpq	$255, -32(%rbp)	#, value
	jbe	.L1793	#,
	.loc 1 3363 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1526
	movzbl	37(%rax), %eax	# PL_curcop.1526_43->op_private, D.24465
	movzbl	%al, %eax	# D.24465, D.24466
	andl	$8, %eax	#, D.24466
	testl	%eax, %eax	# D.24466
	jne	.L1793	#,
	.loc 1 3364 0 is_stmt 1
	movq	-40(%rbp), %rax	# targ, tmp178
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	16(%rax), %rdx	# MEM[(struct XPV *)_47].xpv_len, D.24460
	cmpq	$127, -32(%rbp)	#, value
	jbe	.L1794	#,
	.loc 1 3364 0 is_stmt 0 discriminator 1
	cmpq	$2047, -32(%rbp)	#, value
	jbe	.L1795	#,
	.loc 1 3364 0 discriminator 3
	cmpq	$65535, -32(%rbp)	#, value
	jbe	.L1796	#,
	.loc 1 3364 0 discriminator 5
	cmpq	$2097151, -32(%rbp)	#, value
	jbe	.L1797	#,
	.loc 1 3364 0 discriminator 7
	cmpq	$67108863, -32(%rbp)	#, value
	jbe	.L1798	#,
	.loc 1 3364 0 discriminator 9
	cmpq	$2147483647, -32(%rbp)	#, value
	jbe	.L1799	#,
	.loc 1 3364 0 discriminator 11
	movabsq	$68719476735, %rax	#, tmp179
	cmpq	%rax, -32(%rbp)	# tmp179, value
	ja	.L1800	#,
	.loc 1 3364 0 discriminator 13
	movl	$8, %eax	#, iftmp.1534
	jmp	.L1807	#
.L1800:
	.loc 1 3364 0 discriminator 14
	movl	$14, %eax	#, iftmp.1534
	jmp	.L1807	#
.L1799:
	.loc 1 3364 0 discriminator 12
	movl	$7, %eax	#, iftmp.1533
	jmp	.L1807	#
.L1798:
	.loc 1 3364 0 discriminator 10
	movl	$6, %eax	#, iftmp.1532
	jmp	.L1807	#
.L1797:
	.loc 1 3364 0 discriminator 8
	movl	$5, %eax	#, iftmp.1531
	jmp	.L1807	#
.L1796:
	.loc 1 3364 0 discriminator 6
	movl	$4, %eax	#, iftmp.1530
	jmp	.L1807	#
.L1795:
	.loc 1 3364 0 discriminator 4
	movl	$3, %eax	#, iftmp.1529
	jmp	.L1807	#
.L1794:
	.loc 1 3364 0 discriminator 2
	movl	$2, %eax	#, iftmp.1528
.L1807:
	.loc 1 3364 0 discriminator 15
	cmpq	%rax, %rdx	# iftmp.1528, D.24460
	jae	.L1823	#,
	.loc 1 3364 0 discriminator 1
	cmpq	$127, -32(%rbp)	#, value
	jbe	.L1809	#,
	cmpq	$2047, -32(%rbp)	#, value
	jbe	.L1810	#,
	cmpq	$65535, -32(%rbp)	#, value
	jbe	.L1811	#,
	.loc 1 3364 0 discriminator 3
	cmpq	$2097151, -32(%rbp)	#, value
	jbe	.L1812	#,
	.loc 1 3364 0 discriminator 5
	cmpq	$67108863, -32(%rbp)	#, value
	jbe	.L1813	#,
	.loc 1 3364 0 discriminator 7
	cmpq	$2147483647, -32(%rbp)	#, value
	jbe	.L1814	#,
	.loc 1 3364 0 discriminator 9
	movabsq	$68719476735, %rax	#, tmp180
	cmpq	%rax, -32(%rbp)	# tmp180, value
	ja	.L1815	#,
	.loc 1 3364 0 discriminator 11
	movl	$8, %eax	#, iftmp.1541
	jmp	.L1822	#
.L1815:
	.loc 1 3364 0 discriminator 12
	movl	$14, %eax	#, iftmp.1541
	jmp	.L1822	#
.L1814:
	.loc 1 3364 0 discriminator 10
	movl	$7, %eax	#, iftmp.1540
	jmp	.L1822	#
.L1813:
	.loc 1 3364 0 discriminator 8
	movl	$6, %eax	#, iftmp.1539
	jmp	.L1822	#
.L1812:
	.loc 1 3364 0 discriminator 6
	movl	$5, %eax	#, iftmp.1538
	jmp	.L1822	#
.L1811:
	.loc 1 3364 0 discriminator 4
	movl	$4, %eax	#, iftmp.1537
	jmp	.L1822	#
.L1810:
	.loc 1 3364 0 discriminator 2
	movl	$3, %eax	#, iftmp.1536
	jmp	.L1822	#
.L1809:
	movl	$2, %eax	#, iftmp.1535
.L1822:
	.loc 1 3364 0 discriminator 13
	movq	-40(%rbp), %rdx	# targ, tmp181
	movq	%rax, %rsi	# iftmp.1535,
	movq	%rdx, %rdi	# tmp181,
	call	Perl_sv_grow	#
.L1823:
	.loc 1 3365 0 is_stmt 1
	movq	-40(%rbp), %rax	# targ, tmp183
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	(%rax), %rax	# MEM[(struct XPV *)_80].xpv_pv, D.24467
	movq	-32(%rbp), %rcx	# value, tmp184
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp184,
	movq	%rax, %rdi	# D.24467,
	call	Perl_uvchr_to_utf8_flags	#
	movq	%rax, -24(%rbp)	# tmp185, tmps
	.loc 1 3366 0
	movq	-40(%rbp), %rax	# targ, tmp186
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	-24(%rbp), %rcx	# tmps, tmps.1542
	movq	-40(%rbp), %rdx	# targ, tmp187
	movq	(%rdx), %rdx	# targ_25->sv_any, D.24463
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_85].xpv_pv, D.24467
	subq	%rdx, %rcx	# D.24468, D.24468
	movq	%rcx, %rdx	# D.24468, D.24468
	movq	%rdx, 8(%rax)	# D.24460, MEM[(struct XPV *)_83].xpv_cur
	.loc 1 3367 0
	movq	-24(%rbp), %rax	# tmps, tmp188
	movb	$0, (%rax)	#, *tmps_82
	.loc 1 3368 0
	movq	-40(%rbp), %rax	# targ, tmp189
	movl	12(%rax), %eax	# targ_25->sv_flags, D.24462
	andl	$1223753727, %eax	#, D.24462
	movl	%eax, %edx	# D.24462, D.24462
	movq	-40(%rbp), %rax	# targ, tmp190
	movl	%edx, 12(%rax)	# D.24462, targ_25->sv_flags
	movq	-40(%rbp), %rax	# targ, tmp191
	movl	12(%rax), %eax	# targ_25->sv_flags, D.24462
	orl	$67371008, %eax	#, D.24462
	movl	%eax, %edx	# D.24462, D.24462
	movq	-40(%rbp), %rax	# targ, tmp192
	movl	%edx, 12(%rax)	# D.24462, targ_25->sv_flags
	.loc 1 3369 0
	movq	-40(%rbp), %rax	# targ, tmp193
	movl	12(%rax), %eax	# targ_25->sv_flags, D.24462
	orl	$536870912, %eax	#, D.24462
	movl	%eax, %edx	# D.24462, D.24462
	movq	-40(%rbp), %rax	# targ, tmp194
	movl	%edx, 12(%rax)	# D.24462, targ_25->sv_flags
.LBB442:
	.loc 1 3370 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1543
	movq	%rax, %rdx	# PL_stack_max.1543, PL_stack_max.1544
	movq	%rbx, %rax	# sp, sp.1545
	subq	%rax, %rdx	# sp.1545, D.24468
	movq	%rdx, %rax	# D.24468, D.24468
	cmpq	$7, %rax	#, D.24468
	jg	.L1824	#,
	.loc 1 3370 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1824:
	.loc 1 3370 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp195
	movq	%rax, (%rbx)	# tmp195, *sp_101
.LBE442:
	.loc 1 3371 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1546
	movq	(%rax), %rax	# PL_op.1546_103->op_next, D.24459
	jmp	.L1825	#
.L1793:
	.loc 1 3374 0
	movq	-40(%rbp), %rax	# targ, tmp196
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	16(%rax), %rax	# MEM[(struct XPV *)_105].xpv_len, D.24460
	cmpq	$1, %rax	#, D.24460
	ja	.L1827	#,
	.loc 1 3374 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp197
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp197,
	call	Perl_sv_grow	#
.L1827:
	.loc 1 3375 0 is_stmt 1
	movq	-40(%rbp), %rax	# targ, tmp199
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	$1, 8(%rax)	#, MEM[(struct XPV *)_110].xpv_cur
	.loc 1 3376 0
	movq	-40(%rbp), %rax	# targ, tmp200
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	(%rax), %rax	# MEM[(struct XPV *)_111].xpv_pv, tmp201
	movq	%rax, -24(%rbp)	# tmp201, tmps
	.loc 1 3377 0
	movq	-24(%rbp), %rax	# tmps, tmps.1548
	leaq	1(%rax), %rdx	#, tmp202
	movq	%rdx, -24(%rbp)	# tmp202, tmps
	movq	-32(%rbp), %rdx	# value, tmp203
	movb	%dl, (%rax)	# D.24464, *tmps.1548_113
	.loc 1 3378 0
	movq	-24(%rbp), %rax	# tmps, tmp204
	movb	$0, (%rax)	#, *tmps_114
	.loc 1 3379 0
	movq	-40(%rbp), %rax	# targ, tmp205
	movl	12(%rax), %eax	# targ_25->sv_flags, D.24462
	andl	$1223753727, %eax	#, D.24462
	movl	%eax, %edx	# D.24462, D.24462
	movq	-40(%rbp), %rax	# targ, tmp206
	movl	%edx, 12(%rax)	# D.24462, targ_25->sv_flags
	movq	-40(%rbp), %rax	# targ, tmp207
	movl	12(%rax), %eax	# targ_25->sv_flags, D.24462
	orl	$67371008, %eax	#, D.24462
	movl	%eax, %edx	# D.24462, D.24462
	movq	-40(%rbp), %rax	# targ, tmp208
	movl	%edx, 12(%rax)	# D.24462, targ_25->sv_flags
	.loc 1 3380 0
	movq	PL_encoding(%rip), %rax	# PL_encoding, PL_encoding.1549
	testq	%rax, %rax	# PL_encoding.1549
	je	.L1828	#,
	.loc 1 3380 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1550
	movzbl	37(%rax), %eax	# PL_curcop.1550_121->op_private, D.24465
	movzbl	%al, %eax	# D.24465, D.24466
	andl	$8, %eax	#, D.24466
	testl	%eax, %eax	# D.24466
	jne	.L1828	#,
	.loc 1 3381 0 is_stmt 1
	movq	PL_encoding(%rip), %rdx	# PL_encoding, PL_encoding.1551
	movq	-40(%rbp), %rax	# targ, tmp209
	movq	%rdx, %rsi	# PL_encoding.1551,
	movq	%rax, %rdi	# tmp209,
	call	Perl_sv_recode_to_utf8	#
	.loc 1 3382 0
	movq	-40(%rbp), %rax	# targ, tmp210
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	(%rax), %rax	# MEM[(struct XPV *)_126].xpv_pv, tmp211
	movq	%rax, -24(%rbp)	# tmp211, tmps
	.loc 1 3383 0
	movq	-40(%rbp), %rax	# targ, tmp212
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	8(%rax), %rax	# MEM[(struct XPV *)_128].xpv_cur, D.24460
	testq	%rax, %rax	# D.24460
	je	.L1829	#,
	.loc 1 3383 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp213
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_130].xpv_cur, D.24460
	movq	-24(%rbp), %rax	# tmps, tmp214
	movq	%rdx, %rsi	# D.24460,
	movq	%rax, %rdi	# tmp214,
	call	Perl_is_utf8_string	#
	testb	%al, %al	# D.24464
	je	.L1829	#,
	.loc 1 3384 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# tmps, tmp215
	movl	$4, %edx	#,
	movl	$.LC42, %esi	#,
	movq	%rax, %rdi	# tmp215,
	call	memcmp	#
	.loc 1 3383 0 discriminator 1
	testl	%eax, %eax	# D.24466
	jne	.L1828	#,
.L1829:
	.loc 1 3385 0
	movq	-40(%rbp), %rax	# targ, tmp216
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	16(%rax), %rax	# MEM[(struct XPV *)_134].xpv_len, D.24460
	cmpq	$2, %rax	#, D.24460
	ja	.L1831	#,
	.loc 1 3385 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# targ, tmp217
	movl	$3, %esi	#,
	movq	%rax, %rdi	# tmp217,
	call	Perl_sv_grow	#
.L1831:
	.loc 1 3386 0 is_stmt 1
	movq	-40(%rbp), %rax	# targ, tmp219
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	(%rax), %rax	# MEM[(struct XPV *)_139].xpv_pv, tmp220
	movq	%rax, -24(%rbp)	# tmp220, tmps
	.loc 1 3387 0
	movq	-40(%rbp), %rax	# targ, tmp221
	movq	(%rax), %rax	# targ_25->sv_any, D.24463
	movq	$2, 8(%rax)	#, MEM[(struct XPV *)_141].xpv_cur
	.loc 1 3388 0
	movq	-24(%rbp), %rax	# tmps, tmps.1553
	leaq	1(%rax), %rdx	#, tmp222
	movq	%rdx, -24(%rbp)	# tmp222, tmps
	movq	-32(%rbp), %rdx	# value, tmp223
	shrb	$6, %dl	#, D.24465
	orl	$-64, %edx	#, D.24470
	movb	%dl, (%rax)	# D.24470, *tmps.1553_142
	.loc 1 3389 0
	movq	-24(%rbp), %rax	# tmps, tmps.1554
	leaq	1(%rax), %rdx	#, tmp224
	movq	%rdx, -24(%rbp)	# tmp224, tmps
	movq	-32(%rbp), %rdx	# value, tmp225
	andl	$63, %edx	#, D.24470
	orl	$-128, %edx	#, D.24470
	movb	%dl, (%rax)	# D.24470, *tmps.1554_148
	.loc 1 3390 0
	movq	-24(%rbp), %rax	# tmps, tmp226
	movb	$0, (%rax)	#, *tmps_149
	.loc 1 3391 0
	movq	-40(%rbp), %rax	# targ, tmp227
	movl	12(%rax), %eax	# targ_25->sv_flags, D.24462
	orl	$536870912, %eax	#, D.24462
	movl	%eax, %edx	# D.24462, D.24462
	movq	-40(%rbp), %rax	# targ, tmp228
	movl	%edx, 12(%rax)	# D.24462, targ_25->sv_flags
.L1828:
.LBB443:
	.loc 1 3394 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1555
	movq	%rax, %rdx	# PL_stack_max.1555, PL_stack_max.1556
	movq	%rbx, %rax	# sp, sp.1557
	subq	%rax, %rdx	# sp.1557, D.24468
	movq	%rdx, %rax	# D.24468, D.24468
	cmpq	$7, %rax	#, D.24468
	jg	.L1832	#,
	.loc 1 3394 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L1832:
	.loc 1 3394 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# targ, tmp229
	movq	%rax, (%rbx)	# tmp229, *sp_160
.LBE443:
	.loc 1 3395 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1558
	movq	(%rax), %rax	# PL_op.1558_162->op_next, D.24459
.L1825:
	.loc 1 3396 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE92:
	.size	Perl_pp_chr, .-Perl_pp_chr
	.section	.rodata
	.align 8
.LC43:
	.string	"The crypt() function is unimplemented due to excessive paranoia."
	.text
	.globl	Perl_pp_crypt
	.type	Perl_pp_crypt, @function
Perl_pp_crypt:
.LFB93:
	.loc 1 3399 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	.loc 1 3400 0
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1559
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1560
	movq	24(%rax), %rax	# PL_op.1560_3->op_targ, D.24472
	salq	$3, %rax	#, D.24472
	addq	%rdx, %rax	# PL_curpad.1559, D.24473
	movq	(%rax), %rax	# *_6, tmp67
	movq	%rax, -8(%rbp)	# tmp67, targ
	.loc 1 3443 0
	movl	$.LC43, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	.loc 1 3446 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE93:
	.size	Perl_pp_crypt, .-Perl_pp_crypt
	.globl	Perl_pp_ucfirst
	.type	Perl_pp_ucfirst, @function
Perl_pp_ucfirst:
.LFB94:
	.loc 1 3449 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$64, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 3449 0
	movq	%fs:40, %rax	#, tmp176
	movq	%rax, -24(%rbp)	# tmp176, D.24484
	xorl	%eax, %eax	# tmp176
	.loc 1 3450 0
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	.loc 1 3451 0
	movq	(%r12), %rax	# *sp_7, tmp131
	movq	%rax, -56(%rbp)	# tmp131, sv
	.loc 1 3455 0
	movq	-56(%rbp), %rax	# sv, tmp132
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24476
	andl	$8192, %eax	#, D.24476
	testl	%eax, %eax	# D.24476
	je	.L1836	#,
	.loc 1 3455 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp133
	movq	%rax, %rdi	# tmp133,
	call	Perl_mg_get	#
.L1836:
	.loc 1 3456 0 is_stmt 1
	movq	-56(%rbp), %rax	# sv, tmp134
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24476
	andl	$536870912, %eax	#, D.24476
	testl	%eax, %eax	# D.24476
	je	.L1837	#,
	.loc 1 3456 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1561
	movzbl	37(%rax), %eax	# PL_curcop.1561_13->op_private, D.24477
	movzbl	%al, %eax	# D.24477, D.24478
	andl	$8, %eax	#, D.24478
	testl	%eax, %eax	# D.24478
	jne	.L1837	#,
	.loc 1 3457 0 is_stmt 1
	movq	-56(%rbp), %rax	# sv, tmp135
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24476
	andl	$262144, %eax	#, D.24476
	testl	%eax, %eax	# D.24476
	je	.L1838	#,
	.loc 1 3457 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp136
	movq	(%rax), %rax	# sv_8->sv_any, D.24479
	movq	8(%rax), %rax	# MEM[(struct XPV *)_19].xpv_cur, slen.1563
	movq	%rax, -80(%rbp)	# slen.1563, slen
	movq	-56(%rbp), %rax	# sv, tmp137
	movq	(%rax), %rax	# sv_8->sv_any, D.24479
	movq	(%rax), %rax	# MEM[(struct XPV *)_21].xpv_pv, iftmp.1562
	jmp	.L1839	#
.L1838:
	.loc 1 3457 0 discriminator 2
	leaq	-80(%rbp), %rcx	#, tmp138
	movq	-56(%rbp), %rax	# sv, tmp139
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp138,
	movq	%rax, %rdi	# tmp139,
	call	Perl_sv_2pv_flags	#
.L1839:
	.loc 1 3457 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1562, s
	.loc 1 3456 0 is_stmt 1 discriminator 3
	testq	%rbx, %rbx	# s
	je	.L1837	#,
	.loc 1 3457 0
	movq	-80(%rbp), %rax	# slen, slen.1564
	testq	%rax, %rax	# slen.1564
	je	.L1837	#,
	.loc 1 3458 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_24, D.24477
	.loc 1 3457 0 discriminator 1
	cmpb	$-65, %al	#, D.24477
	jbe	.L1837	#,
	.loc 1 3458 0
	movzbl	(%rbx), %eax	# *s_24, D.24477
	cmpb	$-3, %al	#, D.24477
	ja	.L1837	#,
.LBB444:
	.loc 1 3463 0
	leaq	-72(%rbp), %rax	#, tmp140
	movq	%rax, %rsi	# tmp140,
	movq	%rbx, %rdi	# s,
	call	Perl_utf8_to_uvchr	#
	.loc 1 3464 0
	leaq	-64(%rbp), %rdx	#, tmp141
	leaq	-32(%rbp), %rax	#, tmp142
	movq	%rax, %rsi	# tmp142,
	movq	%rbx, %rdi	# s,
	call	Perl_to_utf8_title	#
	.loc 1 3465 0
	leaq	-32(%rbp), %rax	#, tmp143
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp143,
	call	Perl_utf8_to_uvchr	#
	.loc 1 3467 0
	movq	-56(%rbp), %rax	# sv, tmp144
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24476
	andl	$512, %eax	#, D.24476
	testl	%eax, %eax	# D.24476
	je	.L1840	#,
	.loc 1 3467 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp145
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24476
	andl	$8388608, %eax	#, D.24476
	testl	%eax, %eax	# D.24476
	je	.L1841	#,
.L1840:
.LBB445:
	.loc 1 3468 0 is_stmt 1
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1565
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1566
	movq	24(%rax), %rax	# PL_op.1566_42->op_targ, D.24480
	salq	$3, %rax	#, D.24480
	addq	%rdx, %rax	# PL_curpad.1565, D.24481
	movq	(%rax), %rax	# *_45, tmp146
	movq	%rax, -48(%rbp)	# tmp146, targ
	.loc 1 3476 0
	movq	-64(%rbp), %rdx	# tculen, tculen.1567
	leaq	-32(%rbp), %rcx	#, tmp147
	movq	-48(%rbp), %rax	# targ, tmp148
	movq	%rcx, %rsi	# tmp147,
	movq	%rax, %rdi	# tmp148,
	call	Perl_sv_setpvn	#
	.loc 1 3477 0
	movq	-80(%rbp), %rdx	# slen, slen.1568
	movq	-72(%rbp), %rax	# ulen, ulen.1569
	cmpq	%rax, %rdx	# ulen.1569, slen.1568
	jbe	.L1842	#,
	.loc 1 3478 0
	movq	-80(%rbp), %rdx	# slen, slen.1570
	movq	-72(%rbp), %rax	# ulen, ulen.1571
	subq	%rax, %rdx	# ulen.1571, D.24480
	movq	-72(%rbp), %rax	# ulen, ulen.1572
	leaq	(%rbx,%rax), %rsi	#, D.24482
	movq	-48(%rbp), %rax	# targ, tmp149
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp149,
	call	Perl_sv_catpvn_flags	#
.L1842:
	.loc 1 3479 0
	movq	-48(%rbp), %rax	# targ, tmp150
	movl	12(%rax), %eax	# targ_46->sv_flags, D.24476
	orl	$536870912, %eax	#, D.24476
	movl	%eax, %edx	# D.24476, D.24476
	movq	-48(%rbp), %rax	# targ, tmp151
	movl	%edx, 12(%rax)	# D.24476, targ_46->sv_flags
	.loc 1 3480 0
	movq	-48(%rbp), %rax	# targ, tmp152
	movq	%rax, (%r12)	# tmp152, *sp_7
.LBE445:
	.loc 1 3467 0
	nop
.LBE444:
	.loc 1 3458 0
	jmp	.L1846	#
.L1841:
.LBB446:
	.loc 1 3483 0
	movq	-56(%rbp), %rax	# sv, tmp153
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24476
	andl	$10223616, %eax	#, D.24476
	cmpl	$262144, %eax	#, D.24476
	jne	.L1844	#,
	.loc 1 3483 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp154
	movq	(%rax), %rax	# sv_8->sv_any, D.24479
	movq	8(%rax), %rax	# MEM[(struct XPV *)_34].xpv_cur, slen.1574
	movq	%rax, -80(%rbp)	# slen.1574, slen
	movq	-56(%rbp), %rax	# sv, tmp155
	movq	(%rax), %rax	# sv_8->sv_any, D.24479
	movq	(%rax), %rax	# MEM[(struct XPV *)_36].xpv_pv, iftmp.1573
	jmp	.L1845	#
.L1844:
	.loc 1 3483 0 discriminator 2
	leaq	-80(%rbp), %rcx	#, tmp156
	movq	-56(%rbp), %rax	# sv, tmp157
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp156,
	movq	%rax, %rdi	# tmp157,
	call	Perl_sv_pvn_force_flags	#
.L1845:
	.loc 1 3483 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1573, s
	.loc 1 3484 0 is_stmt 1 discriminator 3
	movq	-64(%rbp), %rdx	# tculen, tculen.1575
	leaq	-32(%rbp), %rax	#, tmp158
	movq	%rax, %rsi	# tmp158,
	movq	%rbx, %rdi	# s,
	call	memcpy	#
.LBE446:
	.loc 1 3458 0 discriminator 3
	jmp	.L1846	#
.L1837:
	.loc 1 3488 0
	movq	-56(%rbp), %rax	# sv, tmp159
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24476
	andl	$512, %eax	#, D.24476
	testl	%eax, %eax	# D.24476
	je	.L1847	#,
	.loc 1 3488 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp160
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24476
	andl	$8388608, %eax	#, D.24476
	testl	%eax, %eax	# D.24476
	je	.L1848	#,
.L1847:
.LBB447:
	.loc 1 3489 0 is_stmt 1
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1576
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1577
	movq	24(%rax), %rax	# PL_op.1577_62->op_targ, D.24480
	salq	$3, %rax	#, D.24480
	addq	%rdx, %rax	# PL_curpad.1576, D.24481
	movq	(%rax), %rax	# *_65, tmp161
	movq	%rax, -40(%rbp)	# tmp161, targ
	.loc 1 3490 0
	movq	-40(%rbp), %rax	# targ, tmp162
	movl	12(%rax), %eax	# targ_66->sv_flags, D.24476
	andl	$-536870913, %eax	#, D.24476
	movl	%eax, %edx	# D.24476, D.24476
	movq	-40(%rbp), %rax	# targ, tmp163
	movl	%edx, 12(%rax)	# D.24476, targ_66->sv_flags
	.loc 1 3491 0
	movq	-56(%rbp), %rcx	# sv, tmp164
	movq	-40(%rbp), %rax	# targ, tmp165
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp164,
	movq	%rax, %rdi	# tmp165,
	call	Perl_sv_setsv_flags	#
	.loc 1 3492 0
	movq	-40(%rbp), %rax	# targ, tmp166
	movq	%rax, -56(%rbp)	# tmp166, sv
	.loc 1 3493 0
	movq	-56(%rbp), %rax	# sv, tmp167
	movq	%rax, (%r12)	# tmp167, *sp_7
.L1848:
.LBE447:
	.loc 1 3495 0
	movq	-56(%rbp), %rax	# sv, tmp168
	movl	12(%rax), %eax	# sv_1->sv_flags, D.24476
	andl	$10223616, %eax	#, D.24476
	cmpl	$262144, %eax	#, D.24476
	jne	.L1849	#,
	.loc 1 3495 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp169
	movq	(%rax), %rax	# sv_1->sv_any, D.24479
	movq	8(%rax), %rax	# MEM[(struct XPV *)_72].xpv_cur, slen.1579
	movq	%rax, -80(%rbp)	# slen.1579, slen
	movq	-56(%rbp), %rax	# sv, tmp170
	movq	(%rax), %rax	# sv_1->sv_any, D.24479
	movq	(%rax), %rax	# MEM[(struct XPV *)_74].xpv_pv, iftmp.1578
	jmp	.L1850	#
.L1849:
	.loc 1 3495 0 discriminator 2
	leaq	-80(%rbp), %rcx	#, tmp171
	movq	-56(%rbp), %rax	# sv, tmp172
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp171,
	movq	%rax, %rdi	# tmp172,
	call	Perl_sv_pvn_force_flags	#
.L1850:
	.loc 1 3495 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1578, s
	.loc 1 3496 0 is_stmt 1 discriminator 3
	movzbl	(%rbx), %eax	# *s_77, D.24477
	testb	%al, %al	# D.24477
	je	.L1846	#,
	.loc 1 3503 0
	movzbl	(%rbx), %eax	# *s_77, D.24477
	cmpb	$96, %al	#, D.24477
	jbe	.L1851	#,
	.loc 1 3503 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_77, D.24477
	cmpb	$122, %al	#, D.24477
	ja	.L1851	#,
	movzbl	(%rbx), %eax	# *s_77, D.24477
	subl	$32, %eax	#, iftmp.1581
	jmp	.L1852	#
.L1851:
	.loc 1 3503 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_77, iftmp.1581
.L1852:
	.loc 1 3503 0 discriminator 3
	movb	%al, (%rbx)	# iftmp.1581, *s_77
.L1846:
	.loc 1 3506 0 is_stmt 1
	movq	-56(%rbp), %rax	# sv, tmp173
	movl	12(%rax), %eax	# sv_2->sv_flags, D.24476
	andl	$16384, %eax	#, D.24476
	testl	%eax, %eax	# D.24476
	je	.L1853	#,
	.loc 1 3506 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# sv, tmp174
	movq	%rax, %rdi	# tmp174,
	call	Perl_mg_set	#
.L1853:
	.loc 1 3507 0 is_stmt 1
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1582
	movq	(%rax), %rax	# PL_op.1582_86->op_next, D.24483
	.loc 1 3508 0
	movq	-24(%rbp), %rcx	# D.24484, tmp177
	xorq	%fs:40, %rcx	#, tmp177
	je	.L1855	#,
	call	__stack_chk_fail	#
.L1855:
	addq	$64, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE94:
	.size	Perl_pp_ucfirst, .-Perl_pp_ucfirst
	.globl	Perl_pp_lcfirst
	.type	Perl_pp_lcfirst, @function
Perl_pp_lcfirst:
.LFB95:
	.loc 1 3511 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$80, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 3511 0
	movq	%fs:40, %rax	#, tmp187
	movq	%rax, -24(%rbp)	# tmp187, D.24494
	xorl	%eax, %eax	# tmp187
	.loc 1 3512 0
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	.loc 1 3513 0
	movq	(%r12), %rax	# *sp_7, tmp139
	movq	%rax, -72(%rbp)	# tmp139, sv
	.loc 1 3517 0
	movq	-72(%rbp), %rax	# sv, tmp140
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24485
	andl	$8192, %eax	#, D.24485
	testl	%eax, %eax	# D.24485
	je	.L1857	#,
	.loc 1 3517 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# sv, tmp141
	movq	%rax, %rdi	# tmp141,
	call	Perl_mg_get	#
.L1857:
	.loc 1 3518 0 is_stmt 1
	movq	-72(%rbp), %rax	# sv, tmp142
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24485
	andl	$536870912, %eax	#, D.24485
	testl	%eax, %eax	# D.24485
	je	.L1858	#,
	.loc 1 3518 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1583
	movzbl	37(%rax), %eax	# PL_curcop.1583_13->op_private, D.24486
	movzbl	%al, %eax	# D.24486, D.24487
	andl	$8, %eax	#, D.24487
	testl	%eax, %eax	# D.24487
	jne	.L1858	#,
	.loc 1 3519 0 is_stmt 1
	movq	-72(%rbp), %rax	# sv, tmp143
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24485
	andl	$262144, %eax	#, D.24485
	testl	%eax, %eax	# D.24485
	je	.L1859	#,
	.loc 1 3519 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# sv, tmp144
	movq	(%rax), %rax	# sv_8->sv_any, D.24488
	movq	8(%rax), %rax	# MEM[(struct XPV *)_19].xpv_cur, slen.1585
	movq	%rax, -88(%rbp)	# slen.1585, slen
	movq	-72(%rbp), %rax	# sv, tmp145
	movq	(%rax), %rax	# sv_8->sv_any, D.24488
	movq	(%rax), %rax	# MEM[(struct XPV *)_21].xpv_pv, iftmp.1584
	jmp	.L1860	#
.L1859:
	.loc 1 3519 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp146
	movq	-72(%rbp), %rax	# sv, tmp147
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp146,
	movq	%rax, %rdi	# tmp147,
	call	Perl_sv_2pv_flags	#
.L1860:
	.loc 1 3519 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1584, s
	.loc 1 3518 0 is_stmt 1 discriminator 3
	testq	%rbx, %rbx	# s
	je	.L1858	#,
	.loc 1 3519 0
	movq	-88(%rbp), %rax	# slen, slen.1586
	testq	%rax, %rax	# slen.1586
	je	.L1858	#,
	.loc 1 3520 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_24, D.24486
	.loc 1 3519 0 discriminator 1
	cmpb	$-65, %al	#, D.24486
	jbe	.L1858	#,
	.loc 1 3520 0
	movzbl	(%rbx), %eax	# *s_24, D.24486
	cmpb	$-3, %al	#, D.24486
	ja	.L1858	#,
.LBB448:
	.loc 1 3526 0
	leaq	-80(%rbp), %rdx	#, tmp148
	leaq	-32(%rbp), %rax	#, tmp149
	movq	%rax, %rsi	# tmp149,
	movq	%rbx, %rdi	# s,
	call	Perl_to_utf8_lower	#
	.loc 1 3527 0
	leaq	-32(%rbp), %rax	#, tmp150
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp150,
	call	Perl_utf8_to_uvchr	#
	movq	%rax, -64(%rbp)	# tmp151, uv
	.loc 1 3528 0
	movq	-64(%rbp), %rdx	# uv, tmp152
	leaq	-32(%rbp), %rax	#, tmp153
	movq	%rdx, %rsi	# tmp152,
	movq	%rax, %rdi	# tmp153,
	call	Perl_uvuni_to_utf8	#
	movq	%rax, -56(%rbp)	# tmp154, tend
	.loc 1 3530 0
	movq	-72(%rbp), %rax	# sv, tmp155
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24485
	andl	$512, %eax	#, D.24485
	testl	%eax, %eax	# D.24485
	je	.L1861	#,
	.loc 1 3530 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rdx	# tend, tend.1587
	leaq	-32(%rbp), %rax	#, tmpbuf.1588
	subq	%rax, %rdx	# tmpbuf.1588, D.24489
	movq	%rdx, %rax	# D.24489, D.24489
	movq	%rax, %rdx	# D.24489, D.24490
	movq	-80(%rbp), %rax	# ulen, ulen.1589
	cmpq	%rax, %rdx	# ulen.1589, D.24490
	jne	.L1861	#,
	movq	-72(%rbp), %rax	# sv, tmp156
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24485
	andl	$8388608, %eax	#, D.24485
	testl	%eax, %eax	# D.24485
	je	.L1862	#,
.L1861:
.LBB449:
	.loc 1 3531 0 is_stmt 1
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1590
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1591
	movq	24(%rax), %rax	# PL_op.1591_49->op_targ, D.24490
	salq	$3, %rax	#, D.24490
	addq	%rdx, %rax	# PL_curpad.1590, D.24491
	movq	(%rax), %rax	# *_52, tmp157
	movq	%rax, -48(%rbp)	# tmp157, targ
	.loc 1 3532 0
	movq	-56(%rbp), %rdx	# tend, tend.1592
	leaq	-32(%rbp), %rax	#, tmpbuf.1593
	subq	%rax, %rdx	# tmpbuf.1593, D.24489
	movq	%rdx, %rax	# D.24489, D.24489
	movq	%rax, %rdx	# D.24489, D.24490
	leaq	-32(%rbp), %rcx	#, tmp158
	movq	-48(%rbp), %rax	# targ, tmp159
	movq	%rcx, %rsi	# tmp158,
	movq	%rax, %rdi	# tmp159,
	call	Perl_sv_setpvn	#
	.loc 1 3533 0
	movq	-88(%rbp), %rdx	# slen, slen.1594
	movq	-80(%rbp), %rax	# ulen, ulen.1595
	cmpq	%rax, %rdx	# ulen.1595, slen.1594
	jbe	.L1863	#,
	.loc 1 3534 0
	movq	-88(%rbp), %rdx	# slen, slen.1596
	movq	-80(%rbp), %rax	# ulen, ulen.1597
	subq	%rax, %rdx	# ulen.1597, D.24490
	movq	-80(%rbp), %rax	# ulen, ulen.1598
	leaq	(%rbx,%rax), %rsi	#, D.24492
	movq	-48(%rbp), %rax	# targ, tmp160
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp160,
	call	Perl_sv_catpvn_flags	#
.L1863:
	.loc 1 3535 0
	movq	-48(%rbp), %rax	# targ, tmp161
	movl	12(%rax), %eax	# targ_53->sv_flags, D.24485
	orl	$536870912, %eax	#, D.24485
	movl	%eax, %edx	# D.24485, D.24485
	movq	-48(%rbp), %rax	# targ, tmp162
	movl	%edx, 12(%rax)	# D.24485, targ_53->sv_flags
	.loc 1 3536 0
	movq	-48(%rbp), %rax	# targ, tmp163
	movq	%rax, (%r12)	# tmp163, *sp_7
.LBE449:
	.loc 1 3530 0
	nop
.LBE448:
	.loc 1 3520 0
	jmp	.L1867	#
.L1862:
.LBB450:
	.loc 1 3539 0
	movq	-72(%rbp), %rax	# sv, tmp164
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24485
	andl	$10223616, %eax	#, D.24485
	cmpl	$262144, %eax	#, D.24485
	jne	.L1865	#,
	.loc 1 3539 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# sv, tmp165
	movq	(%rax), %rax	# sv_8->sv_any, D.24488
	movq	8(%rax), %rax	# MEM[(struct XPV *)_41].xpv_cur, slen.1600
	movq	%rax, -88(%rbp)	# slen.1600, slen
	movq	-72(%rbp), %rax	# sv, tmp166
	movq	(%rax), %rax	# sv_8->sv_any, D.24488
	movq	(%rax), %rax	# MEM[(struct XPV *)_43].xpv_pv, iftmp.1599
	jmp	.L1866	#
.L1865:
	.loc 1 3539 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp167
	movq	-72(%rbp), %rax	# sv, tmp168
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp167,
	movq	%rax, %rdi	# tmp168,
	call	Perl_sv_pvn_force_flags	#
.L1866:
	.loc 1 3539 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1599, s
	.loc 1 3540 0 is_stmt 1 discriminator 3
	movq	-80(%rbp), %rdx	# ulen, ulen.1601
	leaq	-32(%rbp), %rax	#, tmp169
	movq	%rax, %rsi	# tmp169,
	movq	%rbx, %rdi	# s,
	call	memcpy	#
.LBE450:
	.loc 1 3520 0 discriminator 3
	jmp	.L1867	#
.L1858:
	.loc 1 3544 0
	movq	-72(%rbp), %rax	# sv, tmp170
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24485
	andl	$512, %eax	#, D.24485
	testl	%eax, %eax	# D.24485
	je	.L1868	#,
	.loc 1 3544 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# sv, tmp171
	movl	12(%rax), %eax	# sv_8->sv_flags, D.24485
	andl	$8388608, %eax	#, D.24485
	testl	%eax, %eax	# D.24485
	je	.L1869	#,
.L1868:
.LBB451:
	.loc 1 3545 0 is_stmt 1
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1602
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1603
	movq	24(%rax), %rax	# PL_op.1603_72->op_targ, D.24490
	salq	$3, %rax	#, D.24490
	addq	%rdx, %rax	# PL_curpad.1602, D.24491
	movq	(%rax), %rax	# *_75, tmp172
	movq	%rax, -40(%rbp)	# tmp172, targ
	.loc 1 3546 0
	movq	-40(%rbp), %rax	# targ, tmp173
	movl	12(%rax), %eax	# targ_76->sv_flags, D.24485
	andl	$-536870913, %eax	#, D.24485
	movl	%eax, %edx	# D.24485, D.24485
	movq	-40(%rbp), %rax	# targ, tmp174
	movl	%edx, 12(%rax)	# D.24485, targ_76->sv_flags
	.loc 1 3547 0
	movq	-72(%rbp), %rcx	# sv, tmp175
	movq	-40(%rbp), %rax	# targ, tmp176
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp175,
	movq	%rax, %rdi	# tmp176,
	call	Perl_sv_setsv_flags	#
	.loc 1 3548 0
	movq	-40(%rbp), %rax	# targ, tmp177
	movq	%rax, -72(%rbp)	# tmp177, sv
	.loc 1 3549 0
	movq	-72(%rbp), %rax	# sv, tmp178
	movq	%rax, (%r12)	# tmp178, *sp_7
.L1869:
.LBE451:
	.loc 1 3551 0
	movq	-72(%rbp), %rax	# sv, tmp179
	movl	12(%rax), %eax	# sv_1->sv_flags, D.24485
	andl	$10223616, %eax	#, D.24485
	cmpl	$262144, %eax	#, D.24485
	jne	.L1870	#,
	.loc 1 3551 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# sv, tmp180
	movq	(%rax), %rax	# sv_1->sv_any, D.24488
	movq	8(%rax), %rax	# MEM[(struct XPV *)_82].xpv_cur, slen.1605
	movq	%rax, -88(%rbp)	# slen.1605, slen
	movq	-72(%rbp), %rax	# sv, tmp181
	movq	(%rax), %rax	# sv_1->sv_any, D.24488
	movq	(%rax), %rax	# MEM[(struct XPV *)_84].xpv_pv, iftmp.1604
	jmp	.L1871	#
.L1870:
	.loc 1 3551 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp182
	movq	-72(%rbp), %rax	# sv, tmp183
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp182,
	movq	%rax, %rdi	# tmp183,
	call	Perl_sv_pvn_force_flags	#
.L1871:
	.loc 1 3551 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1604, s
	.loc 1 3552 0 is_stmt 1 discriminator 3
	movzbl	(%rbx), %eax	# *s_87, D.24486
	testb	%al, %al	# D.24486
	je	.L1867	#,
	.loc 1 3559 0
	movzbl	(%rbx), %eax	# *s_87, D.24486
	cmpb	$64, %al	#, D.24486
	jbe	.L1872	#,
	.loc 1 3559 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_87, D.24486
	cmpb	$90, %al	#, D.24486
	ja	.L1872	#,
	movzbl	(%rbx), %eax	# *s_87, D.24486
	addl	$32, %eax	#, iftmp.1607
	jmp	.L1873	#
.L1872:
	.loc 1 3559 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_87, iftmp.1607
.L1873:
	.loc 1 3559 0 discriminator 3
	movb	%al, (%rbx)	# iftmp.1607, *s_87
.L1867:
	.loc 1 3562 0 is_stmt 1
	movq	-72(%rbp), %rax	# sv, tmp184
	movl	12(%rax), %eax	# sv_2->sv_flags, D.24485
	andl	$16384, %eax	#, D.24485
	testl	%eax, %eax	# D.24485
	je	.L1874	#,
	.loc 1 3562 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# sv, tmp185
	movq	%rax, %rdi	# tmp185,
	call	Perl_mg_set	#
.L1874:
	.loc 1 3563 0 is_stmt 1
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1608
	movq	(%rax), %rax	# PL_op.1608_96->op_next, D.24493
	.loc 1 3564 0
	movq	-24(%rbp), %rcx	# D.24494, tmp188
	xorq	%fs:40, %rcx	#, tmp188
	je	.L1876	#,
	call	__stack_chk_fail	#
.L1876:
	addq	$80, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE95:
	.size	Perl_pp_lcfirst, .-Perl_pp_lcfirst
	.globl	Perl_pp_uc
	.type	Perl_pp_uc, @function
Perl_pp_uc:
.LFB96:
	.loc 1 3567 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$120, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	.loc 1 3567 0
	movq	%fs:40, %rax	#, tmp226
	movq	%rax, -40(%rbp)	# tmp226, D.24505
	xorl	%eax, %eax	# tmp226
	.loc 1 3568 0
	movq	PL_stack_sp(%rip), %r13	# PL_stack_sp, sp
	.loc 1 3569 0
	movq	0(%r13), %rax	# *sp_12, tmp161
	movq	%rax, -120(%rbp)	# tmp161, sv
	.loc 1 3573 0
	movq	-120(%rbp), %rax	# sv, tmp162
	movl	12(%rax), %eax	# sv_13->sv_flags, D.24495
	andl	$8192, %eax	#, D.24495
	testl	%eax, %eax	# D.24495
	je	.L1878	#,
	.loc 1 3573 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# sv, tmp163
	movq	%rax, %rdi	# tmp163,
	call	Perl_mg_get	#
.L1878:
	.loc 1 3574 0 is_stmt 1
	movq	-120(%rbp), %rax	# sv, tmp164
	movl	12(%rax), %eax	# sv_13->sv_flags, D.24495
	andl	$536870912, %eax	#, D.24495
	testl	%eax, %eax	# D.24495
	je	.L1879	#,
	.loc 1 3574 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1609
	movzbl	37(%rax), %eax	# PL_curcop.1609_18->op_private, D.24496
	movzbl	%al, %eax	# D.24496, D.24497
	andl	$8, %eax	#, D.24497
	testl	%eax, %eax	# D.24497
	jne	.L1879	#,
.LBB452:
	.loc 1 3575 0 is_stmt 1
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1610
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1611
	movq	24(%rax), %rax	# PL_op.1611_23->op_targ, D.24498
	salq	$3, %rax	#, D.24498
	addq	%rdx, %rax	# PL_curpad.1610, D.24499
	movq	(%rax), %rax	# *_26, tmp165
	movq	%rax, -104(%rbp)	# tmp165, targ
	.loc 1 3581 0
	movq	-120(%rbp), %rax	# sv, tmp166
	movl	12(%rax), %eax	# sv_13->sv_flags, D.24495
	andl	$262144, %eax	#, D.24495
	testl	%eax, %eax	# D.24495
	je	.L1880	#,
	.loc 1 3581 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# sv, tmp167
	movq	(%rax), %rax	# sv_13->sv_any, D.24500
	movq	8(%rax), %rax	# MEM[(struct XPV *)_30].xpv_cur, len.1613
	movq	%rax, -136(%rbp)	# len.1613, len
	movq	-120(%rbp), %rax	# sv, tmp168
	movq	(%rax), %rax	# sv_13->sv_any, D.24500
	movq	(%rax), %rax	# MEM[(struct XPV *)_32].xpv_pv, iftmp.1612
	jmp	.L1881	#
.L1880:
	.loc 1 3581 0 discriminator 2
	leaq	-136(%rbp), %rcx	#, tmp169
	movq	-120(%rbp), %rax	# sv, tmp170
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp169,
	movq	%rax, %rdi	# tmp170,
	call	Perl_sv_2pv_flags	#
.L1881:
	.loc 1 3581 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1612, s
	.loc 1 3582 0 is_stmt 1 discriminator 3
	movq	-136(%rbp), %rax	# len, len.1614
	testq	%rax, %rax	# len.1614
	jne	.L1882	#,
	.loc 1 3583 0
	movq	-104(%rbp), %rax	# targ, tmp171
	movl	12(%rax), %eax	# targ_27->sv_flags, D.24495
	andl	$-536870913, %eax	#, D.24495
	movl	%eax, %edx	# D.24495, D.24495
	movq	-104(%rbp), %rax	# targ, tmp172
	movl	%edx, 12(%rax)	# D.24495, targ_27->sv_flags
	.loc 1 3584 0
	movq	-104(%rbp), %rax	# targ, tmp173
	movl	$0, %edx	#,
	movl	$.LC4, %esi	#,
	movq	%rax, %rdi	# tmp173,
	call	Perl_sv_setpvn	#
	.loc 1 3585 0
	movq	-104(%rbp), %rax	# targ, tmp174
	movq	%rax, 0(%r13)	# tmp174, *sp_12
.LBE452:
	.loc 1 3574 0
	jmp	.L1894	#
.L1882:
.LBB456:
.LBB453:
	.loc 1 3588 0
	movq	-136(%rbp), %rax	# len, len.1615
	addq	$1, %rax	#, tmp175
	movq	%rax, -112(%rbp)	# tmp175, min
	.loc 1 3590 0
	movq	-104(%rbp), %rax	# targ, tmp176
	movl	12(%rax), %eax	# targ_27->sv_flags, D.24495
	movzbl	%al, %eax	# D.24495, D.24495
	cmpl	$3, %eax	#, D.24495
	ja	.L1884	#,
	.loc 1 3590 0 is_stmt 0 discriminator 2
	movq	-104(%rbp), %rax	# targ, tmp177
	movl	$4, %esi	#,
	movq	%rax, %rdi	# tmp177,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.24501
	je	.L1886	#,
.L1884:
	.loc 1 3590 0 discriminator 1
	nop
.L1886:
	.loc 1 3591 0 is_stmt 1
	movq	-104(%rbp), %rax	# targ, tmp178
	movq	(%rax), %rax	# targ_27->sv_any, D.24500
	movq	16(%rax), %rax	# MEM[(struct XPV *)_46].xpv_len, D.24498
	cmpq	-112(%rbp), %rax	# min, D.24498
	jae	.L1888	#,
	.loc 1 3591 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rdx	# min, tmp179
	movq	-104(%rbp), %rax	# targ, tmp180
	movq	%rdx, %rsi	# tmp179,
	movq	%rax, %rdi	# tmp180,
	call	Perl_sv_grow	#
.L1888:
	.loc 1 3592 0 is_stmt 1
	movq	-104(%rbp), %rax	# targ, tmp182
	movl	12(%rax), %eax	# targ_27->sv_flags, D.24495
	andl	$1223753727, %eax	#, D.24495
	movl	%eax, %edx	# D.24495, D.24495
	movq	-104(%rbp), %rax	# targ, tmp183
	movl	%edx, 12(%rax)	# D.24495, targ_27->sv_flags
	movq	-104(%rbp), %rax	# targ, tmp184
	movl	12(%rax), %eax	# targ_27->sv_flags, D.24495
	orl	$67371008, %eax	#, D.24495
	movl	%eax, %edx	# D.24495, D.24495
	movq	-104(%rbp), %rax	# targ, tmp185
	movl	%edx, 12(%rax)	# D.24495, targ_27->sv_flags
	.loc 1 3593 0
	movq	-104(%rbp), %rax	# targ, tmp186
	movq	(%rax), %rax	# targ_27->sv_any, D.24500
	movq	(%rax), %r12	# MEM[(struct XPV *)_55].xpv_pv, d
	.loc 1 3594 0
	movq	-136(%rbp), %rax	# len, len.1618
	addq	%rbx, %rax	# s, tmp187
	movq	%rax, -96(%rbp)	# tmp187, send
	.loc 1 3595 0
	jmp	.L1889	#
.L1893:
.LBB454:
	.loc 1 3596 0
	movzbl	(%rbx), %eax	# *s_3, D.24496
	movzbl	%al, %eax	# D.24496, D.24497
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.24496
	movzbl	%al, %eax	# D.24496, tmp189
	movq	%rax, -88(%rbp)	# tmp189, u
	.loc 1 3598 0
	leaq	-128(%rbp), %rdx	#, tmp190
	leaq	-64(%rbp), %rax	#, tmp191
	movq	%rax, %rsi	# tmp191,
	movq	%rbx, %rdi	# s,
	call	Perl_to_utf8_upper	#
	.loc 1 3599 0
	movq	-128(%rbp), %rax	# ulen, ulen.1619
	cmpq	-88(%rbp), %rax	# u, ulen.1619
	jbe	.L1890	#,
	.loc 1 3599 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# targ, tmp192
	movq	(%rax), %rax	# targ_27->sv_any, D.24500
	movq	16(%rax), %rax	# MEM[(struct XPV *)_64].xpv_len, D.24498
	movq	-128(%rbp), %rdx	# ulen, ulen.1620
	subq	-88(%rbp), %rdx	# u, D.24498
	addq	%rdx, -112(%rbp)	# D.24498, min
	cmpq	-112(%rbp), %rax	# min, D.24498
	jae	.L1890	#,
.LBB455:
	.loc 1 3602 0 is_stmt 1
	movq	%r12, %rdx	# d, d.1621
	movq	-104(%rbp), %rax	# targ, tmp193
	movq	(%rax), %rax	# targ_27->sv_any, D.24500
	movq	(%rax), %rax	# MEM[(struct XPV *)_70].xpv_pv, D.24502
	subq	%rax, %rdx	# D.24503, D.24503
	movq	%rdx, %rax	# D.24503, D.24503
	movq	%rax, -80(%rbp)	# D.24503, o
	.loc 1 3608 0
	movq	-104(%rbp), %rax	# targ, tmp194
	movq	(%rax), %rax	# targ_27->sv_any, D.24500
	movq	16(%rax), %rax	# MEM[(struct XPV *)_75].xpv_len, D.24498
	cmpq	-112(%rbp), %rax	# min, D.24498
	jae	.L1892	#,
	.loc 1 3608 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rdx	# min, tmp195
	movq	-104(%rbp), %rax	# targ, tmp196
	movq	%rdx, %rsi	# tmp195,
	movq	%rax, %rdi	# tmp196,
	call	Perl_sv_grow	#
.L1892:
	.loc 1 3609 0 is_stmt 1
	movq	-104(%rbp), %rax	# targ, tmp198
	movq	(%rax), %rax	# targ_27->sv_any, D.24500
	movq	(%rax), %rdx	# MEM[(struct XPV *)_80].xpv_pv, D.24502
	movq	-80(%rbp), %rax	# o, tmp199
	leaq	(%rdx,%rax), %r12	#, d
.L1890:
.LBE455:
	.loc 1 3611 0
	movq	-128(%rbp), %rdx	# ulen, ulen.1623
	leaq	-64(%rbp), %rax	#, tmp200
	movq	%rax, %rsi	# tmp200,
	movq	%r12, %rdi	# d,
	call	memcpy	#
	.loc 1 3612 0
	movq	-128(%rbp), %rax	# ulen, ulen.1624
	addq	%rax, %r12	# ulen.1624, d
	.loc 1 3613 0
	movq	-88(%rbp), %rax	# u, tmp203
	addq	%rbx, %rax	# s, tmp202
	movq	%rax, %rbx	# tmp202, s
.L1889:
.LBE454:
	.loc 1 3595 0 discriminator 1
	cmpq	-96(%rbp), %rbx	# send, s
	jb	.L1893	#,
	.loc 1 3615 0
	movb	$0, (%r12)	#, *d_6
	.loc 1 3616 0
	movq	-104(%rbp), %rax	# targ, tmp204
	movl	12(%rax), %eax	# targ_27->sv_flags, D.24495
	orl	$536870912, %eax	#, D.24495
	movl	%eax, %edx	# D.24495, D.24495
	movq	-104(%rbp), %rax	# targ, tmp205
	movl	%edx, 12(%rax)	# D.24495, targ_27->sv_flags
	.loc 1 3617 0
	movq	-104(%rbp), %rax	# targ, tmp206
	movq	(%rax), %rax	# targ_27->sv_any, D.24500
	movq	%r12, %rcx	# d, d.1625
	movq	-104(%rbp), %rdx	# targ, tmp207
	movq	(%rdx), %rdx	# targ_27->sv_any, D.24500
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_91].xpv_pv, D.24502
	subq	%rdx, %rcx	# D.24503, D.24503
	movq	%rcx, %rdx	# D.24503, D.24503
	movq	%rdx, 8(%rax)	# D.24498, MEM[(struct XPV *)_89].xpv_cur
	.loc 1 3618 0
	movq	-104(%rbp), %rax	# targ, tmp208
	movq	%rax, 0(%r13)	# tmp208, *sp_12
.LBE453:
.LBE456:
	.loc 1 3574 0
	jmp	.L1894	#
.L1879:
	.loc 1 3622 0
	movq	-120(%rbp), %rax	# sv, tmp209
	movl	12(%rax), %eax	# sv_13->sv_flags, D.24495
	andl	$512, %eax	#, D.24495
	testl	%eax, %eax	# D.24495
	je	.L1895	#,
	.loc 1 3622 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# sv, tmp210
	movl	12(%rax), %eax	# sv_13->sv_flags, D.24495
	andl	$8388608, %eax	#, D.24495
	testl	%eax, %eax	# D.24495
	je	.L1896	#,
.L1895:
.LBB457:
	.loc 1 3623 0 is_stmt 1
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1626
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1627
	movq	24(%rax), %rax	# PL_op.1627_101->op_targ, D.24498
	salq	$3, %rax	#, D.24498
	addq	%rdx, %rax	# PL_curpad.1626, D.24499
	movq	(%rax), %rax	# *_104, tmp211
	movq	%rax, -72(%rbp)	# tmp211, targ
	.loc 1 3624 0
	movq	-72(%rbp), %rax	# targ, tmp212
	movl	12(%rax), %eax	# targ_105->sv_flags, D.24495
	andl	$-536870913, %eax	#, D.24495
	movl	%eax, %edx	# D.24495, D.24495
	movq	-72(%rbp), %rax	# targ, tmp213
	movl	%edx, 12(%rax)	# D.24495, targ_105->sv_flags
	.loc 1 3625 0
	movq	-120(%rbp), %rcx	# sv, tmp214
	movq	-72(%rbp), %rax	# targ, tmp215
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp214,
	movq	%rax, %rdi	# tmp215,
	call	Perl_sv_setsv_flags	#
	.loc 1 3626 0
	movq	-72(%rbp), %rax	# targ, tmp216
	movq	%rax, -120(%rbp)	# tmp216, sv
	.loc 1 3627 0
	movq	-120(%rbp), %rax	# sv, tmp217
	movq	%rax, 0(%r13)	# tmp217, *sp_12
.L1896:
.LBE457:
	.loc 1 3629 0
	movq	-120(%rbp), %rax	# sv, tmp218
	movl	12(%rax), %eax	# sv_1->sv_flags, D.24495
	andl	$10223616, %eax	#, D.24495
	cmpl	$262144, %eax	#, D.24495
	jne	.L1897	#,
	.loc 1 3629 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# sv, tmp219
	movq	(%rax), %rax	# sv_1->sv_any, D.24500
	movq	8(%rax), %rax	# MEM[(struct XPV *)_111].xpv_cur, len.1629
	movq	%rax, -136(%rbp)	# len.1629, len
	movq	-120(%rbp), %rax	# sv, tmp220
	movq	(%rax), %rax	# sv_1->sv_any, D.24500
	movq	(%rax), %rax	# MEM[(struct XPV *)_113].xpv_pv, iftmp.1628
	jmp	.L1898	#
.L1897:
	.loc 1 3629 0 discriminator 2
	leaq	-136(%rbp), %rcx	#, tmp221
	movq	-120(%rbp), %rax	# sv, tmp222
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp221,
	movq	%rax, %rdi	# tmp222,
	call	Perl_sv_pvn_force_flags	#
.L1898:
	.loc 1 3629 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1628, s
	.loc 1 3630 0 is_stmt 1 discriminator 3
	movq	-136(%rbp), %rax	# len, len.1630
	testq	%rax, %rax	# len.1630
	je	.L1894	#,
.LBB458:
	.loc 1 3631 0
	movq	-136(%rbp), %rax	# len, len.1631
	leaq	(%rbx,%rax), %r12	#, send
	.loc 1 3640 0
	jmp	.L1899	#
.L1902:
	.loc 1 3641 0
	movzbl	(%rbx), %eax	# *s_4, D.24496
	cmpb	$96, %al	#, D.24496
	jbe	.L1900	#,
	.loc 1 3641 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_4, D.24496
	cmpb	$122, %al	#, D.24496
	ja	.L1900	#,
	movzbl	(%rbx), %eax	# *s_4, D.24496
	subl	$32, %eax	#, iftmp.1633
	jmp	.L1901	#
.L1900:
	.loc 1 3641 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4, iftmp.1633
.L1901:
	.loc 1 3641 0 discriminator 3
	movb	%al, (%rbx)	# iftmp.1633, *s_4
	.loc 1 3640 0 is_stmt 1 discriminator 3
	addq	$1, %rbx	#, s
.L1899:
	.loc 1 3640 0 is_stmt 0 discriminator 1
	cmpq	%r12, %rbx	# send, s
	jb	.L1902	#,
.L1894:
.LBE458:
	.loc 1 3645 0 is_stmt 1
	movq	-120(%rbp), %rax	# sv, tmp223
	movl	12(%rax), %eax	# sv_2->sv_flags, D.24495
	andl	$16384, %eax	#, D.24495
	testl	%eax, %eax	# D.24495
	je	.L1903	#,
	.loc 1 3645 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# sv, tmp224
	movq	%rax, %rdi	# tmp224,
	call	Perl_mg_set	#
.L1903:
	.loc 1 3646 0 is_stmt 1
	movq	%r13, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1634
	movq	(%rax), %rax	# PL_op.1634_128->op_next, D.24504
	.loc 1 3647 0
	movq	-40(%rbp), %rsi	# D.24505, tmp227
	xorq	%fs:40, %rsi	#, tmp227
	je	.L1905	#,
	call	__stack_chk_fail	#
.L1905:
	addq	$120, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE96:
	.size	Perl_pp_uc, .-Perl_pp_uc
	.globl	Perl_pp_lc
	.type	Perl_pp_lc, @function
Perl_pp_lc:
.LFB97:
	.loc 1 3650 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	.loc 1 3650 0
	movq	%fs:40, %rax	#, tmp227
	movq	%rax, -40(%rbp)	# tmp227, D.24516
	xorl	%eax, %eax	# tmp227
	.loc 1 3651 0
	movq	PL_stack_sp(%rip), %r13	# PL_stack_sp, sp
	.loc 1 3652 0
	movq	0(%r13), %rax	# *sp_12, tmp161
	movq	%rax, -112(%rbp)	# tmp161, sv
	.loc 1 3656 0
	movq	-112(%rbp), %rax	# sv, tmp162
	movl	12(%rax), %eax	# sv_13->sv_flags, D.24506
	andl	$8192, %eax	#, D.24506
	testl	%eax, %eax	# D.24506
	je	.L1907	#,
	.loc 1 3656 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# sv, tmp163
	movq	%rax, %rdi	# tmp163,
	call	Perl_mg_get	#
.L1907:
	.loc 1 3657 0 is_stmt 1
	movq	-112(%rbp), %rax	# sv, tmp164
	movl	12(%rax), %eax	# sv_13->sv_flags, D.24506
	andl	$536870912, %eax	#, D.24506
	testl	%eax, %eax	# D.24506
	je	.L1908	#,
	.loc 1 3657 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1635
	movzbl	37(%rax), %eax	# PL_curcop.1635_18->op_private, D.24507
	movzbl	%al, %eax	# D.24507, D.24508
	andl	$8, %eax	#, D.24508
	testl	%eax, %eax	# D.24508
	jne	.L1908	#,
.LBB459:
	.loc 1 3658 0 is_stmt 1
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1636
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1637
	movq	24(%rax), %rax	# PL_op.1637_23->op_targ, D.24509
	salq	$3, %rax	#, D.24509
	addq	%rdx, %rax	# PL_curpad.1636, D.24510
	movq	(%rax), %rax	# *_26, tmp165
	movq	%rax, -96(%rbp)	# tmp165, targ
	.loc 1 3664 0
	movq	-112(%rbp), %rax	# sv, tmp166
	movl	12(%rax), %eax	# sv_13->sv_flags, D.24506
	andl	$262144, %eax	#, D.24506
	testl	%eax, %eax	# D.24506
	je	.L1909	#,
	.loc 1 3664 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# sv, tmp167
	movq	(%rax), %rax	# sv_13->sv_any, D.24511
	movq	8(%rax), %rax	# MEM[(struct XPV *)_30].xpv_cur, len.1639
	movq	%rax, -128(%rbp)	# len.1639, len
	movq	-112(%rbp), %rax	# sv, tmp168
	movq	(%rax), %rax	# sv_13->sv_any, D.24511
	movq	(%rax), %rax	# MEM[(struct XPV *)_32].xpv_pv, iftmp.1638
	jmp	.L1910	#
.L1909:
	.loc 1 3664 0 discriminator 2
	leaq	-128(%rbp), %rcx	#, tmp169
	movq	-112(%rbp), %rax	# sv, tmp170
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp169,
	movq	%rax, %rdi	# tmp170,
	call	Perl_sv_2pv_flags	#
.L1910:
	.loc 1 3664 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1638, s
	.loc 1 3665 0 is_stmt 1 discriminator 3
	movq	-128(%rbp), %rax	# len, len.1640
	testq	%rax, %rax	# len.1640
	jne	.L1911	#,
	.loc 1 3666 0
	movq	-96(%rbp), %rax	# targ, tmp171
	movl	12(%rax), %eax	# targ_27->sv_flags, D.24506
	andl	$-536870913, %eax	#, D.24506
	movl	%eax, %edx	# D.24506, D.24506
	movq	-96(%rbp), %rax	# targ, tmp172
	movl	%edx, 12(%rax)	# D.24506, targ_27->sv_flags
	.loc 1 3667 0
	movq	-96(%rbp), %rax	# targ, tmp173
	movl	$0, %edx	#,
	movl	$.LC4, %esi	#,
	movq	%rax, %rdi	# tmp173,
	call	Perl_sv_setpvn	#
	.loc 1 3668 0
	movq	-96(%rbp), %rax	# targ, tmp174
	movq	%rax, 0(%r13)	# tmp174, *sp_12
.LBE459:
	.loc 1 3657 0
	jmp	.L1923	#
.L1911:
.LBB463:
.LBB460:
	.loc 1 3671 0
	movq	-128(%rbp), %rax	# len, len.1641
	addq	$1, %rax	#, tmp175
	movq	%rax, -104(%rbp)	# tmp175, min
	.loc 1 3673 0
	movq	-96(%rbp), %rax	# targ, tmp176
	movl	12(%rax), %eax	# targ_27->sv_flags, D.24506
	movzbl	%al, %eax	# D.24506, D.24506
	cmpl	$3, %eax	#, D.24506
	ja	.L1913	#,
	.loc 1 3673 0 is_stmt 0 discriminator 2
	movq	-96(%rbp), %rax	# targ, tmp177
	movl	$4, %esi	#,
	movq	%rax, %rdi	# tmp177,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.24512
	je	.L1915	#,
.L1913:
	.loc 1 3673 0 discriminator 1
	nop
.L1915:
	.loc 1 3674 0 is_stmt 1
	movq	-96(%rbp), %rax	# targ, tmp178
	movq	(%rax), %rax	# targ_27->sv_any, D.24511
	movq	16(%rax), %rax	# MEM[(struct XPV *)_46].xpv_len, D.24509
	cmpq	-104(%rbp), %rax	# min, D.24509
	jae	.L1917	#,
	.loc 1 3674 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rdx	# min, tmp179
	movq	-96(%rbp), %rax	# targ, tmp180
	movq	%rdx, %rsi	# tmp179,
	movq	%rax, %rdi	# tmp180,
	call	Perl_sv_grow	#
.L1917:
	.loc 1 3675 0 is_stmt 1
	movq	-96(%rbp), %rax	# targ, tmp182
	movl	12(%rax), %eax	# targ_27->sv_flags, D.24506
	andl	$1223753727, %eax	#, D.24506
	movl	%eax, %edx	# D.24506, D.24506
	movq	-96(%rbp), %rax	# targ, tmp183
	movl	%edx, 12(%rax)	# D.24506, targ_27->sv_flags
	movq	-96(%rbp), %rax	# targ, tmp184
	movl	12(%rax), %eax	# targ_27->sv_flags, D.24506
	orl	$67371008, %eax	#, D.24506
	movl	%eax, %edx	# D.24506, D.24506
	movq	-96(%rbp), %rax	# targ, tmp185
	movl	%edx, 12(%rax)	# D.24506, targ_27->sv_flags
	.loc 1 3676 0
	movq	-96(%rbp), %rax	# targ, tmp186
	movq	(%rax), %rax	# targ_27->sv_any, D.24511
	movq	(%rax), %r12	# MEM[(struct XPV *)_55].xpv_pv, d
	.loc 1 3677 0
	movq	-128(%rbp), %rax	# len, len.1644
	addq	%rbx, %rax	# s, tmp187
	movq	%rax, -88(%rbp)	# tmp187, send
	.loc 1 3678 0
	jmp	.L1918	#
.L1922:
.LBB461:
	.loc 1 3679 0
	movzbl	(%rbx), %eax	# *s_3, D.24507
	movzbl	%al, %eax	# D.24507, D.24508
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.24507
	movzbl	%al, %eax	# D.24507, tmp189
	movq	%rax, -80(%rbp)	# tmp189, u
	.loc 1 3680 0
	leaq	-120(%rbp), %rdx	#, tmp190
	leaq	-48(%rbp), %rax	#, tmp191
	movq	%rax, %rsi	# tmp191,
	movq	%rbx, %rdi	# s,
	call	Perl_to_utf8_lower	#
	movq	%rax, -72(%rbp)	# tmp192, uv
	.loc 1 3701 0
	movq	-120(%rbp), %rax	# ulen, ulen.1645
	cmpq	-80(%rbp), %rax	# u, ulen.1645
	jbe	.L1919	#,
	.loc 1 3701 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# targ, tmp193
	movq	(%rax), %rax	# targ_27->sv_any, D.24511
	movq	16(%rax), %rax	# MEM[(struct XPV *)_65].xpv_len, D.24509
	movq	-120(%rbp), %rdx	# ulen, ulen.1646
	subq	-80(%rbp), %rdx	# u, D.24509
	addq	%rdx, -104(%rbp)	# D.24509, min
	cmpq	-104(%rbp), %rax	# min, D.24509
	jae	.L1919	#,
.LBB462:
	.loc 1 3704 0 is_stmt 1
	movq	%r12, %rdx	# d, d.1647
	movq	-96(%rbp), %rax	# targ, tmp194
	movq	(%rax), %rax	# targ_27->sv_any, D.24511
	movq	(%rax), %rax	# MEM[(struct XPV *)_71].xpv_pv, D.24513
	subq	%rax, %rdx	# D.24514, D.24514
	movq	%rdx, %rax	# D.24514, D.24514
	movq	%rax, -64(%rbp)	# D.24514, o
	.loc 1 3710 0
	movq	-96(%rbp), %rax	# targ, tmp195
	movq	(%rax), %rax	# targ_27->sv_any, D.24511
	movq	16(%rax), %rax	# MEM[(struct XPV *)_76].xpv_len, D.24509
	cmpq	-104(%rbp), %rax	# min, D.24509
	jae	.L1921	#,
	.loc 1 3710 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rdx	# min, tmp196
	movq	-96(%rbp), %rax	# targ, tmp197
	movq	%rdx, %rsi	# tmp196,
	movq	%rax, %rdi	# tmp197,
	call	Perl_sv_grow	#
.L1921:
	.loc 1 3711 0 is_stmt 1
	movq	-96(%rbp), %rax	# targ, tmp199
	movq	(%rax), %rax	# targ_27->sv_any, D.24511
	movq	(%rax), %rdx	# MEM[(struct XPV *)_81].xpv_pv, D.24513
	movq	-64(%rbp), %rax	# o, tmp200
	leaq	(%rdx,%rax), %r12	#, d
.L1919:
.LBE462:
	.loc 1 3713 0
	movq	-120(%rbp), %rdx	# ulen, ulen.1649
	leaq	-48(%rbp), %rax	#, tmp201
	movq	%rax, %rsi	# tmp201,
	movq	%r12, %rdi	# d,
	call	memcpy	#
	.loc 1 3714 0
	movq	-120(%rbp), %rax	# ulen, ulen.1650
	addq	%rax, %r12	# ulen.1650, d
	.loc 1 3715 0
	movq	-80(%rbp), %rax	# u, tmp204
	addq	%rbx, %rax	# s, tmp203
	movq	%rax, %rbx	# tmp203, s
.L1918:
.LBE461:
	.loc 1 3678 0 discriminator 1
	cmpq	-88(%rbp), %rbx	# send, s
	jb	.L1922	#,
	.loc 1 3717 0
	movb	$0, (%r12)	#, *d_6
	.loc 1 3718 0
	movq	-96(%rbp), %rax	# targ, tmp205
	movl	12(%rax), %eax	# targ_27->sv_flags, D.24506
	orl	$536870912, %eax	#, D.24506
	movl	%eax, %edx	# D.24506, D.24506
	movq	-96(%rbp), %rax	# targ, tmp206
	movl	%edx, 12(%rax)	# D.24506, targ_27->sv_flags
	.loc 1 3719 0
	movq	-96(%rbp), %rax	# targ, tmp207
	movq	(%rax), %rax	# targ_27->sv_any, D.24511
	movq	%r12, %rcx	# d, d.1651
	movq	-96(%rbp), %rdx	# targ, tmp208
	movq	(%rdx), %rdx	# targ_27->sv_any, D.24511
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_92].xpv_pv, D.24513
	subq	%rdx, %rcx	# D.24514, D.24514
	movq	%rcx, %rdx	# D.24514, D.24514
	movq	%rdx, 8(%rax)	# D.24509, MEM[(struct XPV *)_90].xpv_cur
	.loc 1 3720 0
	movq	-96(%rbp), %rax	# targ, tmp209
	movq	%rax, 0(%r13)	# tmp209, *sp_12
.LBE460:
.LBE463:
	.loc 1 3657 0
	jmp	.L1923	#
.L1908:
	.loc 1 3724 0
	movq	-112(%rbp), %rax	# sv, tmp210
	movl	12(%rax), %eax	# sv_13->sv_flags, D.24506
	andl	$512, %eax	#, D.24506
	testl	%eax, %eax	# D.24506
	je	.L1924	#,
	.loc 1 3724 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# sv, tmp211
	movl	12(%rax), %eax	# sv_13->sv_flags, D.24506
	andl	$8388608, %eax	#, D.24506
	testl	%eax, %eax	# D.24506
	je	.L1925	#,
.L1924:
.LBB464:
	.loc 1 3725 0 is_stmt 1
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1652
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1653
	movq	24(%rax), %rax	# PL_op.1653_102->op_targ, D.24509
	salq	$3, %rax	#, D.24509
	addq	%rdx, %rax	# PL_curpad.1652, D.24510
	movq	(%rax), %rax	# *_105, tmp212
	movq	%rax, -56(%rbp)	# tmp212, targ
	.loc 1 3726 0
	movq	-56(%rbp), %rax	# targ, tmp213
	movl	12(%rax), %eax	# targ_106->sv_flags, D.24506
	andl	$-536870913, %eax	#, D.24506
	movl	%eax, %edx	# D.24506, D.24506
	movq	-56(%rbp), %rax	# targ, tmp214
	movl	%edx, 12(%rax)	# D.24506, targ_106->sv_flags
	.loc 1 3727 0
	movq	-112(%rbp), %rcx	# sv, tmp215
	movq	-56(%rbp), %rax	# targ, tmp216
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp215,
	movq	%rax, %rdi	# tmp216,
	call	Perl_sv_setsv_flags	#
	.loc 1 3728 0
	movq	-56(%rbp), %rax	# targ, tmp217
	movq	%rax, -112(%rbp)	# tmp217, sv
	.loc 1 3729 0
	movq	-112(%rbp), %rax	# sv, tmp218
	movq	%rax, 0(%r13)	# tmp218, *sp_12
.L1925:
.LBE464:
	.loc 1 3732 0
	movq	-112(%rbp), %rax	# sv, tmp219
	movl	12(%rax), %eax	# sv_1->sv_flags, D.24506
	andl	$10223616, %eax	#, D.24506
	cmpl	$262144, %eax	#, D.24506
	jne	.L1926	#,
	.loc 1 3732 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# sv, tmp220
	movq	(%rax), %rax	# sv_1->sv_any, D.24511
	movq	8(%rax), %rax	# MEM[(struct XPV *)_112].xpv_cur, len.1655
	movq	%rax, -128(%rbp)	# len.1655, len
	movq	-112(%rbp), %rax	# sv, tmp221
	movq	(%rax), %rax	# sv_1->sv_any, D.24511
	movq	(%rax), %rax	# MEM[(struct XPV *)_114].xpv_pv, iftmp.1654
	jmp	.L1927	#
.L1926:
	.loc 1 3732 0 discriminator 2
	leaq	-128(%rbp), %rcx	#, tmp222
	movq	-112(%rbp), %rax	# sv, tmp223
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp222,
	movq	%rax, %rdi	# tmp223,
	call	Perl_sv_pvn_force_flags	#
.L1927:
	.loc 1 3732 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1654, s
	.loc 1 3733 0 is_stmt 1 discriminator 3
	movq	-128(%rbp), %rax	# len, len.1656
	testq	%rax, %rax	# len.1656
	je	.L1923	#,
.LBB465:
	.loc 1 3734 0
	movq	-128(%rbp), %rax	# len, len.1657
	leaq	(%rbx,%rax), %r12	#, send
	.loc 1 3743 0
	jmp	.L1928	#
.L1931:
	.loc 1 3744 0
	movzbl	(%rbx), %eax	# *s_4, D.24507
	cmpb	$64, %al	#, D.24507
	jbe	.L1929	#,
	.loc 1 3744 0 is_stmt 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_4, D.24507
	cmpb	$90, %al	#, D.24507
	ja	.L1929	#,
	movzbl	(%rbx), %eax	# *s_4, D.24507
	addl	$32, %eax	#, iftmp.1659
	jmp	.L1930	#
.L1929:
	.loc 1 3744 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_4, iftmp.1659
.L1930:
	.loc 1 3744 0 discriminator 3
	movb	%al, (%rbx)	# iftmp.1659, *s_4
	.loc 1 3743 0 is_stmt 1 discriminator 3
	addq	$1, %rbx	#, s
.L1928:
	.loc 1 3743 0 is_stmt 0 discriminator 1
	cmpq	%r12, %rbx	# send, s
	jb	.L1931	#,
.L1923:
.LBE465:
	.loc 1 3748 0 is_stmt 1
	movq	-112(%rbp), %rax	# sv, tmp224
	movl	12(%rax), %eax	# sv_2->sv_flags, D.24506
	andl	$16384, %eax	#, D.24506
	testl	%eax, %eax	# D.24506
	je	.L1932	#,
	.loc 1 3748 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# sv, tmp225
	movq	%rax, %rdi	# tmp225,
	call	Perl_mg_set	#
.L1932:
	.loc 1 3749 0 is_stmt 1
	movq	%r13, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1660
	movq	(%rax), %rax	# PL_op.1660_129->op_next, D.24515
	.loc 1 3750 0
	movq	-40(%rbp), %rsi	# D.24516, tmp228
	xorq	%fs:40, %rsi	#, tmp228
	je	.L1934	#,
	call	__stack_chk_fail	#
.L1934:
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE97:
	.size	Perl_pp_lc, .-Perl_pp_lc
	.globl	Perl_pp_quotemeta
	.type	Perl_pp_quotemeta, @function
Perl_pp_quotemeta:
.LFB98:
	.loc 1 3753 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	.loc 1 3754 0
	movq	PL_stack_sp(%rip), %r13	# PL_stack_sp, sp
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1661
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1662
	movq	24(%rax), %rax	# PL_op.1662_15->op_targ, D.24517
	salq	$3, %rax	#, D.24517
	addq	%rdx, %rax	# PL_curpad.1661, D.24518
	movq	(%rax), %rax	# *_18, tmp157
	movq	%rax, -48(%rbp)	# tmp157, targ
	.loc 1 3755 0
	movq	0(%r13), %rax	# *sp_13, tmp158
	movq	%rax, -40(%rbp)	# tmp158, sv
	.loc 1 3757 0
	movq	-40(%rbp), %rax	# sv, tmp159
	movl	12(%rax), %eax	# sv_20->sv_flags, D.24519
	andl	$262144, %eax	#, D.24519
	testl	%eax, %eax	# D.24519
	je	.L1936	#,
	.loc 1 3757 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, tmp160
	movq	(%rax), %rax	# sv_20->sv_any, D.24520
	movq	8(%rax), %rax	# MEM[(struct XPV *)_23].xpv_cur, len.1664
	movq	%rax, -64(%rbp)	# len.1664, len
	movq	-40(%rbp), %rax	# sv, tmp161
	movq	(%rax), %rax	# sv_20->sv_any, D.24520
	movq	(%rax), %rax	# MEM[(struct XPV *)_25].xpv_pv, iftmp.1663
	jmp	.L1937	#
.L1936:
	.loc 1 3757 0 discriminator 2
	leaq	-64(%rbp), %rcx	#, tmp162
	movq	-40(%rbp), %rax	# sv, tmp163
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp162,
	movq	%rax, %rdi	# tmp163,
	call	Perl_sv_2pv_flags	#
.L1937:
	.loc 1 3757 0 discriminator 3
	movq	%rax, %rbx	# iftmp.1663, s
	.loc 1 3760 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# targ, tmp164
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24519
	andl	$-536870913, %eax	#, D.24519
	movl	%eax, %edx	# D.24519, D.24519
	movq	-48(%rbp), %rax	# targ, tmp165
	movl	%edx, 12(%rax)	# D.24519, targ_19->sv_flags
	.loc 1 3761 0 discriminator 3
	movq	-64(%rbp), %rax	# len, len.1665
	testq	%rax, %rax	# len.1665
	je	.L1938	#,
	.loc 1 3762 0
	movq	-48(%rbp), %rax	# targ, tmp166
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24519
	movzbl	%al, %eax	# D.24519, D.24519
	cmpl	$3, %eax	#, D.24519
	ja	.L1939	#,
	.loc 1 3762 0 is_stmt 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp167
	movl	$4, %esi	#,
	movq	%rax, %rdi	# tmp167,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.24521
	je	.L1941	#,
.L1939:
	.loc 1 3762 0 discriminator 1
	nop
.L1941:
	.loc 1 3763 0 is_stmt 1
	movq	-48(%rbp), %rax	# targ, tmp168
	movq	(%rax), %rax	# targ_19->sv_any, D.24520
	movq	16(%rax), %rax	# MEM[(struct XPV *)_37].xpv_len, D.24517
	movq	-64(%rbp), %rdx	# len, len.1668
	addq	%rdx, %rdx	# D.24517
	addq	$1, %rdx	#, D.24517
	cmpq	%rdx, %rax	# D.24517, D.24517
	jae	.L1943	#,
	.loc 1 3763 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# len, len.1669
	addq	%rax, %rax	# D.24517
	leaq	1(%rax), %rdx	#, D.24517
	movq	-48(%rbp), %rax	# targ, tmp169
	movq	%rdx, %rsi	# D.24517,
	movq	%rax, %rdi	# tmp169,
	call	Perl_sv_grow	#
.L1943:
	.loc 1 3764 0 is_stmt 1
	movq	-48(%rbp), %rax	# targ, tmp171
	movq	(%rax), %rax	# targ_19->sv_any, D.24520
	movq	(%rax), %r12	# MEM[(struct XPV *)_48].xpv_pv, d
	.loc 1 3765 0
	movq	-40(%rbp), %rax	# sv, tmp172
	movl	12(%rax), %eax	# sv_20->sv_flags, D.24519
	andl	$536870912, %eax	#, D.24519
	testl	%eax, %eax	# D.24519
	je	.L1944	#,
	.loc 1 3765 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1670
	movzbl	37(%rax), %eax	# PL_curcop.1670_52->op_private, D.24522
	movzbl	%al, %eax	# D.24522, D.24523
	andl	$8, %eax	#, D.24523
	testl	%eax, %eax	# D.24523
	jne	.L1944	#,
	.loc 1 3766 0 is_stmt 1
	jmp	.L1945	#
.L1954:
	.loc 1 3767 0
	movzbl	(%rbx), %eax	# *s_2, D.24521
	testb	%al, %al	# D.24521
	jns	.L1946	#,
.LBB466:
	.loc 1 3768 0
	movzbl	(%rbx), %eax	# MEM[(U8 *)s_2], D.24522
	movzbl	%al, %eax	# D.24522, D.24523
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.24522
	movzbl	%al, %eax	# D.24522, tmp174
	movq	%rax, -56(%rbp)	# tmp174, ulen
	.loc 1 3769 0
	movq	-64(%rbp), %rax	# len, len.1671
	cmpq	%rax, -56(%rbp)	# len.1671, ulen
	jbe	.L1947	#,
	.loc 1 3770 0
	movq	-64(%rbp), %rax	# len, tmp175
	movq	%rax, -56(%rbp)	# tmp175, ulen
.L1947:
	.loc 1 3771 0
	movq	-64(%rbp), %rax	# len, len.1672
	subq	-56(%rbp), %rax	# ulen, len.1673
	movq	%rax, -64(%rbp)	# len.1673, len
	.loc 1 3772 0
	jmp	.L1948	#
.L1949:
	.loc 1 3773 0
	movq	%r12, %rax	# d, d.1674
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.1675
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.1675_70, D.24521
	movb	%dl, (%rax)	# D.24521, *d.1674_68
.L1948:
	.loc 1 3772 0 discriminator 1
	movq	-56(%rbp), %rax	# ulen, ulen.1676
	leaq	-1(%rax), %rdx	#, tmp176
	movq	%rdx, -56(%rbp)	# tmp176, ulen
	testq	%rax, %rax	# ulen.1676
	jne	.L1949	#,
.LBE466:
	jmp	.L1945	#
.L1946:
	.loc 1 3776 0
	movzbl	(%rbx), %eax	# *s_2, D.24521
	cmpb	$64, %al	#, D.24521
	jle	.L1950	#,
	.loc 1 3776 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_2, D.24521
	cmpb	$90, %al	#, D.24521
	jle	.L1951	#,
.L1950:
	.loc 1 3776 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2, D.24521
	cmpb	$96, %al	#, D.24521
	jle	.L1952	#,
	.loc 1 3776 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_2, D.24521
	cmpb	$122, %al	#, D.24521
	jle	.L1951	#,
.L1952:
	.loc 1 3776 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2, D.24521
	cmpb	$47, %al	#, D.24521
	jle	.L1953	#,
	.loc 1 3776 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_2, D.24521
	cmpb	$57, %al	#, D.24521
	jle	.L1951	#,
.L1953:
	.loc 1 3776 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_2, D.24521
	cmpb	$95, %al	#, D.24521
	je	.L1951	#,
	.loc 1 3777 0 is_stmt 1
	movq	%r12, %rax	# d, d.1677
	leaq	1(%rax), %r12	#, d
	movb	$92, (%rax)	#, *d.1677_80
.L1951:
	.loc 1 3778 0
	movq	%r12, %rax	# d, d.1678
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.1679
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.1679_84, D.24521
	movb	%dl, (%rax)	# D.24521, *d.1678_82
	.loc 1 3779 0
	movq	-64(%rbp), %rax	# len, len.1680
	subq	$1, %rax	#, len.1681
	movq	%rax, -64(%rbp)	# len.1681, len
.L1945:
	.loc 1 3766 0 discriminator 1
	movq	-64(%rbp), %rax	# len, len.1682
	testq	%rax, %rax	# len.1682
	jne	.L1954	#,
	.loc 1 3782 0
	movq	-48(%rbp), %rax	# targ, tmp177
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24519
	orl	$536870912, %eax	#, D.24519
	movl	%eax, %edx	# D.24519, D.24519
	movq	-48(%rbp), %rax	# targ, tmp178
	movl	%edx, 12(%rax)	# D.24519, targ_19->sv_flags
	jmp	.L1955	#
.L1944:
	.loc 1 3785 0
	jmp	.L1956	#
.L1961:
	.loc 1 3786 0
	movzbl	(%rbx), %eax	# *s_3, D.24521
	cmpb	$64, %al	#, D.24521
	jle	.L1957	#,
	.loc 1 3786 0 is_stmt 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.24521
	cmpb	$90, %al	#, D.24521
	jle	.L1958	#,
.L1957:
	.loc 1 3786 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.24521
	cmpb	$96, %al	#, D.24521
	jle	.L1959	#,
	.loc 1 3786 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.24521
	cmpb	$122, %al	#, D.24521
	jle	.L1958	#,
.L1959:
	.loc 1 3786 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.24521
	cmpb	$47, %al	#, D.24521
	jle	.L1960	#,
	.loc 1 3786 0 discriminator 2
	movzbl	(%rbx), %eax	# *s_3, D.24521
	cmpb	$57, %al	#, D.24521
	jle	.L1958	#,
.L1960:
	.loc 1 3786 0 discriminator 1
	movzbl	(%rbx), %eax	# *s_3, D.24521
	cmpb	$95, %al	#, D.24521
	je	.L1958	#,
	.loc 1 3787 0 is_stmt 1
	movq	%r12, %rax	# d, d.1683
	leaq	1(%rax), %r12	#, d
	movb	$92, (%rax)	#, *d.1683_101
.L1958:
	.loc 1 3788 0
	movq	%r12, %rax	# d, d.1684
	leaq	1(%rax), %r12	#, d
	movq	%rbx, %rdx	# s, s.1685
	leaq	1(%rdx), %rbx	#, s
	movzbl	(%rdx), %edx	# *s.1685_105, D.24521
	movb	%dl, (%rax)	# D.24521, *d.1684_103
.L1956:
	.loc 1 3785 0 discriminator 1
	movq	-64(%rbp), %rax	# len, len.1686
	leaq	-1(%rax), %rdx	#, len.1688
	movq	%rdx, -64(%rbp)	# len.1688, len
	testq	%rax, %rax	# len.1687
	jne	.L1961	#,
.L1955:
	.loc 1 3791 0
	movb	$0, (%r12)	#, *d_9
	.loc 1 3792 0
	movq	-48(%rbp), %rax	# targ, tmp179
	movq	(%rax), %rax	# targ_19->sv_any, D.24520
	movq	%r12, %rcx	# d, d.1689
	movq	-48(%rbp), %rdx	# targ, tmp180
	movq	(%rdx), %rdx	# targ_19->sv_any, D.24520
	movq	(%rdx), %rdx	# MEM[(struct XPV *)_110].xpv_pv, D.24524
	subq	%rdx, %rcx	# D.24525, D.24525
	movq	%rcx, %rdx	# D.24525, D.24525
	movq	%rdx, 8(%rax)	# D.24517, MEM[(struct XPV *)_108].xpv_cur
	.loc 1 3793 0
	movq	-48(%rbp), %rax	# targ, tmp181
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24519
	andl	$1760624639, %eax	#, D.24519
	movl	%eax, %edx	# D.24519, D.24519
	movq	-48(%rbp), %rax	# targ, tmp182
	movl	%edx, 12(%rax)	# D.24519, targ_19->sv_flags
	movq	-48(%rbp), %rax	# targ, tmp183
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24519
	orl	$67371008, %eax	#, D.24519
	movl	%eax, %edx	# D.24519, D.24519
	movq	-48(%rbp), %rax	# targ, tmp184
	movl	%edx, 12(%rax)	# D.24519, targ_19->sv_flags
	jmp	.L1962	#
.L1938:
	.loc 1 3796 0
	movq	-64(%rbp), %rdx	# len, len.1690
	movq	-48(%rbp), %rax	# targ, tmp185
	movq	%rbx, %rsi	# s,
	movq	%rax, %rdi	# tmp185,
	call	Perl_sv_setpvn	#
.L1962:
	.loc 1 3797 0
	movq	-48(%rbp), %rax	# targ, tmp186
	movq	%rax, 0(%r13)	# tmp186, *sp_13
	.loc 1 3798 0
	movq	-48(%rbp), %rax	# targ, tmp187
	movl	12(%rax), %eax	# targ_19->sv_flags, D.24519
	andl	$16384, %eax	#, D.24519
	testl	%eax, %eax	# D.24519
	je	.L1963	#,
	.loc 1 3799 0
	movq	-48(%rbp), %rax	# targ, tmp188
	movq	%rax, %rdi	# tmp188,
	call	Perl_mg_set	#
.L1963:
	.loc 1 3800 0
	movq	%r13, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1691
	movq	(%rax), %rax	# PL_op.1691_122->op_next, D.24526
	.loc 1 3801 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE98:
	.size	Perl_pp_quotemeta, .-Perl_pp_quotemeta
	.globl	Perl_pp_aslice
	.type	Perl_pp_aslice, @function
Perl_pp_aslice:
.LFB99:
	.loc 1 3806 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r15	#
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	.loc 1 3807 0
	movq	PL_stack_sp(%rip), %r13	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1692
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1693
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1695
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1695, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1694_17, D.24528
	cltq
	salq	$3, %rax	#, D.24529
	leaq	(%rcx,%rax), %rbx	#, mark
	movq	%rbx, %rdx	# mark, mark.1696
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1697
	subq	%rax, %rdx	# PL_stack_base.1698, D.24530
	movq	%rdx, %rax	# D.24530, D.24530
	sarq	$3, %rax	#, tmp142
	movl	%eax, -56(%rbp)	# D.24530, origmark
	.loc 1 3809 0
	movq	%r13, %rax	# sp, sp.1699
	leaq	-8(%rax), %r13	#, sp
	movq	(%rax), %r14	# *sp.1699_29, av
	.loc 1 3810 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1701
	movzbl	36(%rax), %eax	# PL_op.1701_32->op_flags, D.24531
	movzbl	%al, %eax	# D.24531, D.24528
	andl	$32, %eax	#, D.24528
	testl	%eax, %eax	# D.24528
	jne	.L1966	#,
	.loc 1 3810 0 is_stmt 0 discriminator 2
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1702
	movzbl	37(%rax), %eax	# PL_op.1702_36->op_private, D.24531
	movzbl	%al, %eax	# D.24531, D.24528
	andl	$8, %eax	#, D.24528
	testl	%eax, %eax	# D.24528
	je	.L1967	#,
	.loc 1 3810 0 discriminator 3
	call	Perl_is_lvalue_sub	#
	testl	%eax, %eax	# D.24528
	je	.L1967	#,
.L1966:
	.loc 1 3810 0 discriminator 1
	movl	$1, %eax	#, iftmp.1700
	jmp	.L1968	#
.L1967:
	.loc 1 3810 0 discriminator 4
	movl	$0, %eax	#, iftmp.1700
.L1968:
	.loc 1 3810 0 discriminator 5
	movl	%eax, %r15d	# iftmp.1700, lval
	.loc 1 3811 0 is_stmt 1 discriminator 5
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1703
	movl	68(%rax), %eax	# PL_curcop.1703_44->cop_arybase, tmp143
	movl	%eax, -52(%rbp)	# tmp143, arybase
	.loc 1 3814 0 discriminator 5
	movl	12(%r14), %eax	# av_31->sv_flags, D.24532
	movzbl	%al, %eax	# D.24532, D.24532
	cmpl	$10, %eax	#, D.24532
	jne	.L1969	#,
	.loc 1 3815 0
	testl	%r15d, %r15d	# lval
	je	.L1970	#,
	.loc 1 3815 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1704
	movzbl	37(%rax), %eax	# PL_op.1704_48->op_private, D.24531
	testb	%al, %al	# D.24533
	jns	.L1970	#,
.LBB467:
	.loc 1 3816 0 is_stmt 1
	movl	$-1, -60(%rbp)	#, max
	.loc 1 3817 0
	leaq	8(%rbx), %r12	#, svp
	jmp	.L1971	#
.L1975:
	.loc 1 3818 0
	movq	(%r12), %rax	# *svp_3, PL_Sv.1705
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1705, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1707
	movl	12(%rax), %eax	# PL_Sv.1707_54->sv_flags, D.24532
	andl	$65536, %eax	#, D.24532
	testl	%eax, %eax	# D.24532
	je	.L1972	#,
	.loc 1 3818 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1708
	movq	(%rax), %rax	# PL_Sv.1708_57->sv_any, D.24534
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_58].xiv_iv, D.24530
	jmp	.L1973	#
.L1972:
	.loc 1 3818 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1709
	movq	%rax, %rdi	# PL_Sv.1709,
	call	Perl_sv_2iv	#
.L1973:
	.loc 1 3818 0 discriminator 3
	movl	%eax, -64(%rbp)	# iftmp.1706, elem
	.loc 1 3819 0 is_stmt 1 discriminator 3
	movl	-64(%rbp), %eax	# elem, tmp144
	cmpl	-60(%rbp), %eax	# max, tmp144
	jle	.L1974	#,
	.loc 1 3820 0
	movl	-64(%rbp), %eax	# elem, tmp145
	movl	%eax, -60(%rbp)	# tmp145, max
.L1974:
	.loc 1 3817 0
	addq	$8, %r12	#, svp
.L1971:
	.loc 1 3817 0 is_stmt 0 discriminator 1
	cmpq	%r13, %r12	# sp, svp
	jbe	.L1975	#,
	.loc 1 3822 0 is_stmt 1
	movl	-60(%rbp), %eax	# max, tmp146
	movslq	%eax, %rdx	# tmp146, D.24530
	movq	(%r14), %rax	# av_31->sv_any, D.24535
	movq	16(%rax), %rax	# _68->xav_max, D.24530
	cmpq	%rax, %rdx	# D.24530, D.24530
	jle	.L1970	#,
	.loc 1 3823 0
	movl	-60(%rbp), %eax	# max, tmp147
	movl	%eax, %esi	# tmp147,
	movq	%r14, %rdi	# av,
	call	Perl_av_extend	#
.LBE467:
	.loc 1 3825 0
	jmp	.L1976	#
.L1970:
	jmp	.L1976	#
.L1986:
	.loc 1 3826 0
	movq	(%rbx), %rax	# *mark_70, PL_Sv.1710
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1710, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1712
	movl	12(%rax), %eax	# PL_Sv.1712_72->sv_flags, D.24532
	andl	$65536, %eax	#, D.24532
	testl	%eax, %eax	# D.24532
	je	.L1977	#,
	.loc 1 3826 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1713
	movq	(%rax), %rax	# PL_Sv.1713_75->sv_any, D.24534
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_76].xiv_iv, D.24530
	jmp	.L1978	#
.L1977:
	.loc 1 3826 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1714
	movq	%rax, %rdi	# PL_Sv.1714,
	call	Perl_sv_2iv	#
.L1978:
	.loc 1 3826 0 discriminator 3
	movl	%eax, -64(%rbp)	# iftmp.1711, elem
	.loc 1 3828 0 is_stmt 1 discriminator 3
	cmpl	$0, -64(%rbp)	#, elem
	jle	.L1979	#,
	.loc 1 3829 0
	movl	-52(%rbp), %eax	# arybase, tmp148
	subl	%eax, -64(%rbp)	# tmp148, elem
.L1979:
	.loc 1 3830 0
	movl	-64(%rbp), %eax	# elem, tmp149
	movl	%r15d, %edx	# lval,
	movl	%eax, %esi	# tmp149,
	movq	%r14, %rdi	# av,
	call	Perl_av_fetch	#
	movq	%rax, %r12	#, svp
	.loc 1 3831 0
	testl	%r15d, %r15d	# lval
	je	.L1980	#,
	.loc 1 3832 0
	testq	%r12, %r12	# svp
	je	.L1981	#,
	.loc 1 3832 0 is_stmt 0 discriminator 1
	movq	(%r12), %rax	# *svp_84, D.24536
	cmpq	$PL_sv_undef, %rax	#, D.24536
	jne	.L1982	#,
.L1981:
	.loc 1 3833 0 is_stmt 1
	movl	-64(%rbp), %eax	# elem, tmp150
	movl	%eax, %esi	# tmp150,
	movl	$PL_no_aelem, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L1983	#
.L1982:
	.loc 1 3834 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1715
	movzbl	37(%rax), %eax	# PL_op.1715_86->op_private, D.24531
	testb	%al, %al	# D.24533
	jns	.L1980	#,
	.loc 1 3835 0
	movl	-64(%rbp), %eax	# elem, tmp151
	movq	%r12, %rdx	# svp,
	movl	%eax, %esi	# tmp151,
	movq	%r14, %rdi	# av,
	call	Perl_save_aelem	#
.L1980:
	.loc 1 3837 0
	testq	%r12, %r12	# svp
	je	.L1984	#,
	.loc 1 3837 0 is_stmt 0 discriminator 1
	movq	(%r12), %rax	# *svp_84, iftmp.1716
	jmp	.L1985	#
.L1984:
	.loc 1 3837 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.1716
.L1985:
	.loc 1 3837 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1716, *mark_70
.L1976:
	.loc 1 3825 0 is_stmt 1 discriminator 1
	addq	$8, %rbx	#, mark
	cmpq	%r13, %rbx	# sp, mark
	jbe	.L1986	#,
.L1969:
	.loc 1 3840 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1718
	movzbl	36(%rax), %eax	# PL_op.1718_92->op_flags, D.24531
	movzbl	%al, %eax	# D.24531, D.24528
	andl	$3, %eax	#, D.24528
	testl	%eax, %eax	# D.24528
	je	.L1987	#,
	.loc 1 3840 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1719
	movzbl	36(%rax), %eax	# PL_op.1719_96->op_flags, D.24531
	movzbl	%al, %eax	# D.24531, D.24528
	andl	$3, %eax	#, D.24528
	cmpl	$3, %eax	#, D.24528
	setne	%al	#, iftmp.1717
	jmp	.L1988	#
.L1987:
	.loc 1 3840 0 discriminator 2
	call	Perl_dowantarray	#
	cmpl	$1, %eax	#, D.24528
	setne	%al	#, iftmp.1717
.L1988:
	.loc 1 3840 0 discriminator 3
	testb	%al, %al	# iftmp.1717
	je	.L1989	#,
	.loc 1 3841 0 is_stmt 1
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1720
	movl	-56(%rbp), %edx	# origmark, tmp152
	movslq	%edx, %rdx	# tmp152, D.24529
	salq	$3, %rdx	#, D.24529
	leaq	(%rax,%rdx), %rbx	#, mark
	.loc 1 3842 0
	addq	$8, %rbx	#, mark
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1722
	movl	-56(%rbp), %edx	# origmark, tmp153
	movslq	%edx, %rdx	# tmp153, D.24529
	salq	$3, %rdx	#, D.24529
	addq	%rdx, %rax	# D.24529, D.24537
	cmpq	%r13, %rax	# sp, D.24537
	jae	.L1990	#,
	.loc 1 3842 0 is_stmt 0 discriminator 1
	movq	0(%r13), %rax	# *sp_30, iftmp.1721
	jmp	.L1991	#
.L1990:
	.loc 1 3842 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.1721
.L1991:
	.loc 1 3842 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1721, *mark_107
	.loc 1 3843 0 is_stmt 1 discriminator 3
	movq	%rbx, %r13	# mark, sp
.L1989:
	.loc 1 3845 0
	movq	%r13, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1723
	movq	(%rax), %rax	# PL_op.1723_115->op_next, D.24527
.L1983:
	.loc 1 3846 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%r15	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE99:
	.size	Perl_pp_aslice, .-Perl_pp_aslice
	.globl	Perl_pp_each
	.type	Perl_pp_each, @function
Perl_pp_each:
.LFB100:
	.loc 1 3851 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 3852 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 3853 0
	movq	%rbx, %rax	# sp, sp.1724
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1724_11, tmp89
	movq	%rax, -48(%rbp)	# tmp89, hash
	.loc 1 3855 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1726
	movzbl	36(%rax), %eax	# PL_op.1726_14->op_flags, D.24539
	movzbl	%al, %eax	# D.24539, D.24540
	andl	$3, %eax	#, D.24540
	cmpl	$1, %eax	#, D.24540
	je	.L1993	#,
	.loc 1 3855 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1728
	movzbl	36(%rax), %eax	# PL_op.1728_18->op_flags, D.24539
	movzbl	%al, %eax	# D.24539, D.24540
	andl	$3, %eax	#, D.24540
	cmpl	$2, %eax	#, D.24540
	je	.L1994	#,
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1730
	movzbl	36(%rax), %eax	# PL_op.1730_22->op_flags, D.24539
	movzbl	%al, %eax	# D.24539, D.24540
	andl	$3, %eax	#, D.24540
	cmpl	$3, %eax	#, D.24540
	je	.L1995	#,
	call	Perl_block_gimme	#
	jmp	.L1998	#
.L1995:
	.loc 1 3855 0 discriminator 2
	movl	$1, %eax	#, iftmp.1729
	jmp	.L1998	#
.L1994:
	movl	$0, %eax	#, iftmp.1727
	jmp	.L1998	#
.L1993:
	movl	$128, %eax	#, iftmp.1725
.L1998:
	.loc 1 3855 0 discriminator 3
	movl	%eax, -56(%rbp)	# iftmp.1725, gimme
	.loc 1 3856 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# hash, tmp90
	movl	12(%rax), %eax	# hash_13->sv_flags, D.24541
	movzbl	%al, %eax	# D.24541, D.24541
	cmpl	$11, %eax	#, D.24541
	sete	%al	#, D.24542
	movzbl	%al, %eax	# D.24542, tmp91
	movl	%eax, -52(%rbp)	# tmp91, realhv
	.loc 1 3858 0 discriminator 3
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 3860 0 discriminator 3
	cmpl	$0, -52(%rbp)	#, realhv
	je	.L1999	#,
	.loc 1 3860 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# hash, tmp92
	movq	%rax, %rdi	# tmp92,
	call	Perl_hv_iternext	#
	jmp	.L2000	#
.L1999:
	.loc 1 3860 0 discriminator 2
	movq	-48(%rbp), %rax	# hash, tmp93
	movq	%rax, %rdi	# tmp93,
	call	Perl_avhv_iternext	#
.L2000:
	.loc 1 3860 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.1731, entry
	.loc 1 3861 0 is_stmt 1 discriminator 3
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 3863 0 discriminator 3
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1732
	movq	%rax, %rdx	# PL_stack_max.1732, PL_stack_max.1733
	movq	%rbx, %rax	# sp, sp.1734
	subq	%rax, %rdx	# sp.1734, D.24543
	movq	%rdx, %rax	# D.24543, D.24543
	cmpq	$15, %rax	#, D.24543
	jg	.L2001	#,
	.loc 1 3863 0 is_stmt 0 discriminator 1
	movl	$2, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2001:
	.loc 1 3864 0 is_stmt 1
	cmpq	$0, -40(%rbp)	#, entry
	je	.L2002	#,
.LBB468:
	.loc 1 3865 0
	movq	-40(%rbp), %rax	# entry, tmp94
	movq	%rax, %rdi	# tmp94,
	call	Perl_hv_iterkeysv	#
	movq	%rax, -32(%rbp)	# tmp95, sv
	.loc 1 3866 0
	addq	$8, %rbx	#, sp
	movq	-32(%rbp), %rax	# sv, tmp96
	movq	%rax, (%rbx)	# tmp96, *sp_47
	.loc 1 3867 0
	cmpl	$1, -56(%rbp)	#, gimme
	jne	.L2003	#,
.LBB469:
	.loc 1 3869 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 3872 0
	cmpl	$0, -52(%rbp)	#, realhv
	je	.L2004	#,
	.loc 1 3872 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rdx	# entry, tmp97
	movq	-48(%rbp), %rax	# hash, tmp98
	movq	%rdx, %rsi	# tmp97,
	movq	%rax, %rdi	# tmp98,
	call	Perl_hv_iterval	#
	jmp	.L2005	#
.L2004:
	.loc 1 3872 0 discriminator 2
	movq	-40(%rbp), %rdx	# entry, tmp99
	movq	-48(%rbp), %rax	# hash, tmp100
	movq	%rdx, %rsi	# tmp99,
	movq	%rax, %rdi	# tmp100,
	call	Perl_avhv_iterval	#
.L2005:
	.loc 1 3871 0 is_stmt 1
	movq	%rax, -24(%rbp)	# iftmp.1735, val
	.loc 1 3873 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 3874 0
	addq	$8, %rbx	#, sp
	movq	-24(%rbp), %rax	# val, tmp101
	movq	%rax, (%rbx)	# tmp101, *sp_52
.LBE469:
.LBE468:
	jmp	.L2006	#
.L2003:
	jmp	.L2006	#
.L2002:
	.loc 1 3877 0
	cmpl	$0, -56(%rbp)	#, gimme
	jne	.L2006	#,
	.loc 1 3878 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_undef, (%rbx)	#, *sp_53
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1736
	movq	(%rax), %rax	# PL_op.1736_54->op_next, D.24538
	jmp	.L2007	#
.L2006:
	.loc 1 3880 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1737
	movq	(%rax), %rax	# PL_op.1737_56->op_next, D.24538
.L2007:
	.loc 1 3881 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE100:
	.size	Perl_pp_each, .-Perl_pp_each
	.globl	Perl_pp_values
	.type	Perl_pp_values, @function
Perl_pp_values:
.LFB101:
	.loc 1 3884 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 3885 0
	call	Perl_do_kv	#
	.loc 1 3886 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE101:
	.size	Perl_pp_values, .-Perl_pp_values
	.globl	Perl_pp_keys
	.type	Perl_pp_keys, @function
Perl_pp_keys:
.LFB102:
	.loc 1 3889 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 3890 0
	call	Perl_do_kv	#
	.loc 1 3891 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE102:
	.size	Perl_pp_keys, .-Perl_pp_keys
	.section	.rodata
.LC44:
	.string	"Not a HASH reference"
	.text
	.globl	Perl_pp_delete
	.type	Perl_pp_delete, @function
Perl_pp_delete:
.LFB103:
	.loc 1 3894 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$48, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 3895 0
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	.loc 1 3896 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1739
	movzbl	36(%rax), %eax	# PL_op.1739_21->op_flags, D.24547
	movzbl	%al, %eax	# D.24547, D.24548
	andl	$3, %eax	#, D.24548
	cmpl	$1, %eax	#, D.24548
	je	.L2013	#,
	.loc 1 3896 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1741
	movzbl	36(%rax), %eax	# PL_op.1741_25->op_flags, D.24547
	movzbl	%al, %eax	# D.24547, D.24548
	andl	$3, %eax	#, D.24548
	cmpl	$2, %eax	#, D.24548
	je	.L2014	#,
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1743
	movzbl	36(%rax), %eax	# PL_op.1743_29->op_flags, D.24547
	movzbl	%al, %eax	# D.24547, D.24548
	andl	$3, %eax	#, D.24548
	cmpl	$3, %eax	#, D.24548
	je	.L2015	#,
	call	Perl_block_gimme	#
	jmp	.L2018	#
.L2015:
	.loc 1 3896 0 discriminator 2
	movl	$1, %eax	#, iftmp.1742
	jmp	.L2018	#
.L2014:
	movl	$0, %eax	#, iftmp.1740
	jmp	.L2018	#
.L2013:
	movl	$128, %eax	#, iftmp.1738
.L2018:
	.loc 1 3896 0 discriminator 3
	movl	%eax, -56(%rbp)	# iftmp.1738, gimme
	.loc 1 3897 0 is_stmt 1 discriminator 3
	cmpl	$128, -56(%rbp)	#, gimme
	jne	.L2019	#,
	.loc 1 3897 0 is_stmt 0 discriminator 1
	movl	$2, %eax	#, iftmp.1744
	jmp	.L2020	#
.L2019:
	.loc 1 3897 0 discriminator 2
	movl	$0, %eax	#, iftmp.1744
.L2020:
	.loc 1 3897 0 discriminator 3
	movl	%eax, -52(%rbp)	# iftmp.1744, discard
	.loc 1 3901 0 is_stmt 1 discriminator 3
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1745
	movzbl	37(%rax), %eax	# PL_op.1745_43->op_private, D.24547
	movzbl	%al, %eax	# D.24547, D.24548
	andl	$64, %eax	#, D.24548
	testl	%eax, %eax	# D.24548
	je	.L2021	#,
.LBB470:
	.loc 1 3902 0
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1746
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1747
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1749
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1749, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1748_49, D.24548
	cltq
	salq	$3, %rax	#, D.24549
	leaq	(%rcx,%rax), %rbx	#, mark
	movq	%rbx, %rdx	# mark, mark.1750
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1751
	subq	%rax, %rdx	# PL_stack_base.1752, D.24550
	movq	%rdx, %rax	# D.24550, D.24550
	sarq	$3, %rax	#, tmp137
	movl	%eax, -48(%rbp)	# D.24550, origmark
	.loc 1 3904 0
	movq	%r12, %rax	# sp, sp.1753
	leaq	-8(%rax), %r12	#, sp
	movq	(%rax), %rax	# *sp.1753_61, tmp138
	movq	%rax, -32(%rbp)	# tmp138, hv
	.loc 1 3905 0
	movq	-32(%rbp), %rax	# hv, tmp139
	movl	12(%rax), %eax	# hv_63->sv_flags, D.24551
	andl	$255, %eax	#, tmp140
	movl	%eax, -44(%rbp)	# tmp140, hvtype
	.loc 1 3906 0
	cmpl	$11, -44(%rbp)	#, hvtype
	jne	.L2022	#,
	.loc 1 3907 0
	jmp	.L2023	#
.L2026:
	.loc 1 3908 0
	movq	(%rbx), %rsi	# *mark_66, D.24552
	movl	-52(%rbp), %edx	# discard, tmp141
	movq	-32(%rbp), %rax	# hv, tmp142
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp142,
	call	Perl_hv_delete_ent	#
	movq	%rax, -40(%rbp)	# tmp143, sv
	.loc 1 3909 0
	cmpq	$0, -40(%rbp)	#, sv
	je	.L2024	#,
	.loc 1 3909 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, iftmp.1754
	jmp	.L2025	#
.L2024:
	.loc 1 3909 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.1754
.L2025:
	.loc 1 3909 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1754, *mark_66
.L2023:
	.loc 1 3907 0 is_stmt 1 discriminator 1
	addq	$8, %rbx	#, mark
	cmpq	%r12, %rbx	# sp, mark
	jbe	.L2026	#,
	jmp	.L2027	#
.L2022:
	.loc 1 3912 0
	cmpl	$10, -44(%rbp)	#, hvtype
	jne	.L2028	#,
	.loc 1 3913 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1755
	movzbl	36(%rax), %eax	# PL_op.1755_71->op_flags, D.24547
	testb	%al, %al	# D.24553
	jns	.L2029	#,
	.loc 1 3914 0
	jmp	.L2030	#
.L2035:
	.loc 1 3915 0
	movq	(%rbx), %rax	# *mark_74, D.24552
	movl	12(%rax), %eax	# _75->sv_flags, D.24551
	andl	$65536, %eax	#, D.24551
	testl	%eax, %eax	# D.24551
	je	.L2031	#,
	.loc 1 3915 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *mark_74, D.24552
	movq	(%rax), %rax	# _78->sv_any, D.24554
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_79].xiv_iv, D.24550
	jmp	.L2032	#
.L2031:
	.loc 1 3915 0 discriminator 2
	movq	(%rbx), %rax	# *mark_74, D.24552
	movq	%rax, %rdi	# D.24552,
	call	Perl_sv_2iv	#
.L2032:
	.loc 1 3915 0 discriminator 3
	movl	-52(%rbp), %edx	# discard, tmp144
	movq	-32(%rbp), %rcx	# hv, tmp145
	movl	%eax, %esi	# iftmp.1756,
	movq	%rcx, %rdi	# tmp145,
	call	Perl_av_delete	#
	movq	%rax, -40(%rbp)	# tmp146, sv
	.loc 1 3916 0 is_stmt 1 discriminator 3
	cmpq	$0, -40(%rbp)	#, sv
	je	.L2033	#,
	.loc 1 3916 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, iftmp.1757
	jmp	.L2034	#
.L2033:
	.loc 1 3916 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.1757
.L2034:
	.loc 1 3916 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1757, *mark_74
.L2030:
	.loc 1 3914 0 is_stmt 1 discriminator 1
	addq	$8, %rbx	#, mark
	cmpq	%r12, %rbx	# sp, mark
	jbe	.L2035	#,
	jmp	.L2027	#
.L2029:
	.loc 1 3920 0
	jmp	.L2036	#
.L2039:
	.loc 1 3921 0
	movq	(%rbx), %rsi	# *mark_88, D.24552
	movl	-52(%rbp), %edx	# discard, tmp147
	movq	-32(%rbp), %rax	# hv, tmp148
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp148,
	call	Perl_avhv_delete_ent	#
	movq	%rax, -40(%rbp)	# tmp149, sv
	.loc 1 3922 0
	cmpq	$0, -40(%rbp)	#, sv
	je	.L2037	#,
	.loc 1 3922 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# sv, iftmp.1758
	jmp	.L2038	#
.L2037:
	.loc 1 3922 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.1758
.L2038:
	.loc 1 3922 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.1758, *mark_88
.L2036:
	.loc 1 3920 0 is_stmt 1 discriminator 1
	addq	$8, %rbx	#, mark
	cmpq	%r12, %rbx	# sp, mark
	jbe	.L2039	#,
	jmp	.L2027	#
.L2028:
	.loc 1 3927 0
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L2040	#
.L2027:
	.loc 1 3928 0
	cmpl	$0, -52(%rbp)	#, discard
	je	.L2041	#,
	.loc 1 3929 0
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1759
	movl	-48(%rbp), %edx	# origmark, tmp150
	movslq	%edx, %rdx	# tmp150, D.24549
	salq	$3, %rdx	#, D.24549
	leaq	(%rax,%rdx), %r12	#, sp
	jmp	.L2042	#
.L2041:
	.loc 1 3930 0
	cmpl	$0, -56(%rbp)	#, gimme
	jne	.L2042	#,
	.loc 1 3931 0
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1760
	movl	-48(%rbp), %edx	# origmark, tmp151
	movslq	%edx, %rdx	# tmp151, D.24549
	salq	$3, %rdx	#, D.24549
	leaq	(%rax,%rdx), %rbx	#, mark
	.loc 1 3932 0
	cmpq	%rbx, %r12	# mark, sp
	jbe	.L2043	#,
	.loc 1 3933 0
	addq	$8, %rbx	#, mark
	movq	(%r12), %rax	# *sp_62, D.24552
	movq	%rax, (%rbx)	# D.24552, *mark_102
	jmp	.L2044	#
.L2043:
	.loc 1 3935 0
	addq	$8, %rbx	#, mark
	movq	$PL_sv_undef, (%rbx)	#, *mark_104
.L2044:
	.loc 1 3936 0
	movq	%rbx, %r12	# mark, sp
.LBE470:
	jmp	.L2045	#
.L2042:
	jmp	.L2045	#
.L2021:
.LBB471:
	.loc 1 3940 0
	movq	%r12, %rax	# sp, sp.1761
	leaq	-8(%rax), %r12	#, sp
	movq	(%rax), %rax	# *sp.1761_106, tmp152
	movq	%rax, -24(%rbp)	# tmp152, keysv
	.loc 1 3941 0
	movq	%r12, %rax	# sp, sp.1762
	leaq	-8(%rax), %r12	#, sp
	movq	(%rax), %rax	# *sp.1762_109, tmp153
	movq	%rax, -32(%rbp)	# tmp153, hv
	.loc 1 3942 0
	movq	-32(%rbp), %rax	# hv, tmp154
	movl	12(%rax), %eax	# hv_111->sv_flags, D.24551
	movzbl	%al, %eax	# D.24551, D.24551
	cmpl	$11, %eax	#, D.24551
	jne	.L2046	#,
	.loc 1 3943 0
	movl	-52(%rbp), %edx	# discard, tmp155
	movq	-24(%rbp), %rsi	# keysv, tmp156
	movq	-32(%rbp), %rax	# hv, tmp157
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp157,
	call	Perl_hv_delete_ent	#
	movq	%rax, -40(%rbp)	# tmp158, sv
	jmp	.L2047	#
.L2046:
	.loc 1 3944 0
	movq	-32(%rbp), %rax	# hv, tmp159
	movl	12(%rax), %eax	# hv_111->sv_flags, D.24551
	movzbl	%al, %eax	# D.24551, D.24551
	cmpl	$10, %eax	#, D.24551
	jne	.L2048	#,
	.loc 1 3945 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1763
	movzbl	36(%rax), %eax	# PL_op.1763_117->op_flags, D.24547
	testb	%al, %al	# D.24553
	jns	.L2049	#,
	.loc 1 3946 0
	movq	-24(%rbp), %rax	# keysv, tmp160
	movl	12(%rax), %eax	# keysv_108->sv_flags, D.24551
	andl	$65536, %eax	#, D.24551
	testl	%eax, %eax	# D.24551
	je	.L2050	#,
	.loc 1 3946 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# keysv, tmp161
	movq	(%rax), %rax	# keysv_108->sv_any, D.24554
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_122].xiv_iv, D.24550
	jmp	.L2051	#
.L2050:
	.loc 1 3946 0 discriminator 2
	movq	-24(%rbp), %rax	# keysv, tmp162
	movq	%rax, %rdi	# tmp162,
	call	Perl_sv_2iv	#
.L2051:
	.loc 1 3946 0 discriminator 1
	movl	-52(%rbp), %edx	# discard, tmp163
	movq	-32(%rbp), %rcx	# hv, tmp164
	movl	%eax, %esi	# iftmp.1764,
	movq	%rcx, %rdi	# tmp164,
	call	Perl_av_delete	#
	movq	%rax, -40(%rbp)	# tmp165, sv
	jmp	.L2047	#
.L2049:
	.loc 1 3948 0 is_stmt 1
	movl	-52(%rbp), %edx	# discard, tmp166
	movq	-24(%rbp), %rsi	# keysv, tmp167
	movq	-32(%rbp), %rax	# hv, tmp168
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp168,
	call	Perl_avhv_delete_ent	#
	movq	%rax, -40(%rbp)	# tmp169, sv
	jmp	.L2047	#
.L2048:
	.loc 1 3951 0
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L2040	#
.L2047:
	.loc 1 3952 0
	cmpq	$0, -40(%rbp)	#, sv
	jne	.L2053	#,
	.loc 1 3953 0
	movq	$PL_sv_undef, -40(%rbp)	#, sv
.L2053:
	.loc 1 3954 0
	cmpl	$0, -52(%rbp)	#, discard
	jne	.L2045	#,
	.loc 1 3955 0
	addq	$8, %r12	#, sp
	movq	-40(%rbp), %rax	# sv, tmp170
	movq	%rax, (%r12)	# tmp170, *sp_131
.L2045:
.LBE471:
	.loc 1 3957 0
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1765
	movq	(%rax), %rax	# PL_op.1765_132->op_next, D.24546
.L2040:
	.loc 1 3958 0
	addq	$48, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE103:
	.size	Perl_pp_delete, .-Perl_pp_delete
	.globl	Perl_pp_exists
	.type	Perl_pp_exists, @function
Perl_pp_exists:
.LFB104:
	.loc 1 3961 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 3962 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 3966 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1766
	movzbl	37(%rax), %eax	# PL_op.1766_5->op_private, D.24557
	movzbl	%al, %eax	# D.24557, D.24558
	andl	$64, %eax	#, D.24558
	testl	%eax, %eax	# D.24558
	je	.L2055	#,
.LBB472:
	.loc 1 3969 0
	movq	%rbx, %rax	# sp, sp.1767
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1767_9, tmp110
	movq	%rax, -40(%rbp)	# tmp110, sv
	.loc 1 3970 0
	leaq	-48(%rbp), %rdx	#, tmp111
	leaq	-56(%rbp), %rsi	#, tmp112
	movq	-40(%rbp), %rax	# sv, tmp113
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp113,
	call	Perl_sv_2cv	#
	movq	%rax, -32(%rbp)	# tmp114, cv
	.loc 1 3971 0
	cmpq	$0, -32(%rbp)	#, cv
	je	.L2056	#,
	.loc 1 3972 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_13
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1768
	movq	(%rax), %rax	# PL_op.1768_14->op_next, D.24556
	jmp	.L2066	#
.L2056:
	.loc 1 3973 0
	movq	-48(%rbp), %rax	# gv, gv.1769
	testq	%rax, %rax	# gv.1769
	je	.L2058	#,
	.loc 1 3973 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# gv, gv.1770
	movl	12(%rax), %eax	# gv.1770_17->sv_flags, D.24559
	movzbl	%al, %eax	# D.24559, D.24559
	cmpl	$13, %eax	#, D.24559
	jne	.L2058	#,
	movq	-48(%rbp), %rax	# gv, gv.1771
	movq	(%rax), %rax	# gv.1771_20->sv_any, D.24560
	movq	56(%rax), %rax	# _21->xgv_gp, D.24561
	movq	56(%rax), %rax	# _22->gp_cv, D.24562
	testq	%rax, %rax	# D.24562
	je	.L2058	#,
	movq	-48(%rbp), %rax	# gv, gv.1772
	movq	(%rax), %rax	# gv.1772_24->sv_any, D.24560
	movq	56(%rax), %rax	# _25->xgv_gp, D.24561
	movl	64(%rax), %eax	# _26->gp_cvgen, D.24559
	testl	%eax, %eax	# D.24559
	jne	.L2058	#,
	.loc 1 3974 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_28
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1773
	movq	(%rax), %rax	# PL_op.1773_29->op_next, D.24556
	jmp	.L2066	#
.L2058:
	.loc 1 3975 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_no, (%rbx)	#, *sp_31
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1774
	movq	(%rax), %rax	# PL_op.1774_32->op_next, D.24556
	jmp	.L2066	#
.L2055:
.LBE472:
	.loc 1 3977 0
	movq	%rbx, %rax	# sp, sp.1775
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1775_34, tmp115
	movq	%rax, -24(%rbp)	# tmp115, tmpsv
	.loc 1 3978 0
	movq	%rbx, %rax	# sp, sp.1776
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1776_37, hv.1777
	movq	%rax, -56(%rbp)	# hv.1777, hv
	.loc 1 3979 0
	movq	-56(%rbp), %rax	# hv, hv.1778
	movl	12(%rax), %eax	# hv.1778_40->sv_flags, D.24559
	movzbl	%al, %eax	# D.24559, D.24559
	cmpl	$11, %eax	#, D.24559
	jne	.L2060	#,
	.loc 1 3980 0
	movq	-56(%rbp), %rax	# hv, hv.1779
	movq	-24(%rbp), %rcx	# tmpsv, tmp116
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp116,
	movq	%rax, %rdi	# hv.1779,
	call	Perl_hv_exists_ent	#
	testb	%al, %al	# D.24563
	je	.L2061	#,
	.loc 1 3981 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_45
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1780
	movq	(%rax), %rax	# PL_op.1780_46->op_next, D.24556
	jmp	.L2066	#
.L2060:
	.loc 1 3983 0
	movq	-56(%rbp), %rax	# hv, hv.1781
	movl	12(%rax), %eax	# hv.1781_48->sv_flags, D.24559
	movzbl	%al, %eax	# D.24559, D.24559
	cmpl	$10, %eax	#, D.24559
	jne	.L2062	#,
	.loc 1 3984 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1782
	movzbl	36(%rax), %eax	# PL_op.1782_51->op_flags, D.24557
	testb	%al, %al	# D.24564
	jns	.L2063	#,
	.loc 1 3985 0
	movq	-24(%rbp), %rax	# tmpsv, tmp117
	movl	12(%rax), %eax	# tmpsv_36->sv_flags, D.24559
	andl	$65536, %eax	#, D.24559
	testl	%eax, %eax	# D.24559
	je	.L2064	#,
	.loc 1 3985 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# tmpsv, tmp118
	movq	(%rax), %rax	# tmpsv_36->sv_any, D.24565
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_56].xiv_iv, D.24566
	jmp	.L2065	#
.L2064:
	.loc 1 3985 0 discriminator 2
	movq	-24(%rbp), %rax	# tmpsv, tmp119
	movq	%rax, %rdi	# tmp119,
	call	Perl_sv_2iv	#
.L2065:
	.loc 1 3985 0 discriminator 3
	movq	-56(%rbp), %rdx	# hv, hv.1784
	movl	%eax, %esi	# iftmp.1783,
	movq	%rdx, %rdi	# hv.1784,
	call	Perl_av_exists	#
	testb	%al, %al	# D.24563
	je	.L2061	#,
	.loc 1 3986 0 is_stmt 1
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_63
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1785
	movq	(%rax), %rax	# PL_op.1785_64->op_next, D.24556
	jmp	.L2066	#
.L2063:
	.loc 1 3988 0
	movq	-56(%rbp), %rax	# hv, hv.1786
	movq	-24(%rbp), %rcx	# tmpsv, tmp120
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp120,
	movq	%rax, %rdi	# hv.1786,
	call	Perl_avhv_exists_ent	#
	testb	%al, %al	# D.24563
	je	.L2061	#,
	.loc 1 3989 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_yes, (%rbx)	#, *sp_68
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1787
	movq	(%rax), %rax	# PL_op.1787_69->op_next, D.24556
	jmp	.L2066	#
.L2062:
	.loc 1 3992 0
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L2066	#
.L2061:
	.loc 1 3994 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_no, (%rbx)	#, *sp_72
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1788
	movq	(%rax), %rax	# PL_op.1788_73->op_next, D.24556
.L2066:
	.loc 1 3995 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE104:
	.size	Perl_pp_exists, .-Perl_pp_exists
	.section	.rodata
.LC45:
	.string	"EXISTS"
.LC46:
	.string	"DELETE"
	.align 8
.LC47:
	.string	"Can't localize pseudo-hash element"
	.text
	.globl	Perl_pp_hslice
	.type	Perl_pp_hslice, @function
Perl_pp_hslice:
.LFB105:
	.loc 1 3998 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r15	#
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	.loc 1 3999 0
	movq	PL_stack_sp(%rip), %r13	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1789
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1790
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1792
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1792, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1791_21, D.24568
	cltq
	salq	$3, %rax	#, D.24569
	leaq	(%rcx,%rax), %r12	#, mark
	movq	%r12, %rdx	# mark, mark.1793
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1794
	subq	%rax, %rdx	# PL_stack_base.1795, D.24570
	movq	%rdx, %rax	# D.24570, D.24570
	sarq	$3, %rax	#, tmp150
	movl	%eax, -112(%rbp)	# D.24570, origmark
	.loc 1 4000 0
	movq	%r13, %rax	# sp, sp.1796
	leaq	-8(%rax), %r13	#, sp
	movq	(%rax), %rbx	# *sp.1796_33, hv
	.loc 1 4001 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1798
	movzbl	36(%rax), %eax	# PL_op.1798_36->op_flags, D.24571
	movzbl	%al, %eax	# D.24571, D.24568
	andl	$32, %eax	#, D.24568
	testl	%eax, %eax	# D.24568
	jne	.L2068	#,
	.loc 1 4001 0 is_stmt 0 discriminator 2
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1799
	movzbl	37(%rax), %eax	# PL_op.1799_40->op_private, D.24571
	movzbl	%al, %eax	# D.24571, D.24568
	andl	$8, %eax	#, D.24568
	testl	%eax, %eax	# D.24568
	je	.L2069	#,
	.loc 1 4001 0 discriminator 3
	call	Perl_is_lvalue_sub	#
	testl	%eax, %eax	# D.24568
	je	.L2069	#,
.L2068:
	.loc 1 4001 0 discriminator 1
	movl	$1, %eax	#, iftmp.1797
	jmp	.L2070	#
.L2069:
	.loc 1 4001 0 discriminator 4
	movl	$0, %eax	#, iftmp.1797
.L2070:
	.loc 1 4001 0 discriminator 5
	movl	%eax, %r14d	# iftmp.1797, lval
	.loc 1 4002 0 is_stmt 1 discriminator 5
	movl	12(%rbx), %eax	# hv_35->sv_flags, D.24572
	movzbl	%al, %eax	# D.24572, D.24572
	cmpl	$11, %eax	#, D.24572
	sete	%al	#, D.24573
	movzbl	%al, %eax	# D.24573, tmp151
	movl	%eax, -108(%rbp)	# tmp151, realhv
	.loc 1 4003 0 discriminator 5
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1800
	movzbl	37(%rax), %eax	# PL_op.1800_52->op_private, D.24571
	shrb	$7, %al	#, D.24573
	movb	%al, -113(%rbp)	# D.24573, localizing
	.loc 1 4004 0 discriminator 5
	movb	$0, -115(%rbp)	#, other_magic
	.loc 1 4006 0 discriminator 5
	cmpb	$0, -113(%rbp)	#, localizing
	je	.L2071	#,
.LBB473:
	.loc 1 4010 0
	movl	$69, %esi	#,
	movq	%rbx, %rdi	# hv,
	call	Perl_mg_find	#
	testq	%rax, %rax	# D.24575
	jne	.L2072	#,
	.loc 1 4010 0 is_stmt 0 discriminator 2
	movl	$80, %esi	#,
	movq	%rbx, %rdi	# hv,
	call	Perl_mg_find	#
	movq	%rax, -88(%rbp)	# tmp152, mg
	cmpq	$0, -88(%rbp)	#, mg
	je	.L2073	#,
	.loc 1 4015 0 is_stmt 1
	movq	-88(%rbp), %rax	# mg, tmp153
	movq	24(%rax), %rax	# mg_59->mg_obj, D.24576
	testq	%rax, %rax	# D.24576
	je	.L2074	#,
	.loc 1 4015 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# mg, tmp154
	movq	24(%rax), %rax	# mg_59->mg_obj, iftmp.1802
	jmp	.L2075	#
.L2074:
	.loc 1 4015 0 discriminator 2
	movq	%rbx, %rdi	# hv,
	call	Perl_newRV	#
	movq	%rax, %rdi	# D.24576,
	call	Perl_sv_2mortal	#
.L2075:
	.loc 1 4015 0 discriminator 3
	movq	(%rax), %rax	# iftmp.1802_8->sv_any, D.24577
	movq	(%rax), %rax	# MEM[(struct XRV *)_64].xrv_rv, D.24576
	movq	(%rax), %rax	# _65->sv_any, D.24577
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_66].xmg_stash, tmp155
	movq	%rax, -80(%rbp)	# tmp155, stash
	cmpq	$0, -80(%rbp)	#, stash
	je	.L2073	#,
	.loc 1 4016 0 is_stmt 1
	movq	-80(%rbp), %rax	# stash, tmp156
	movl	$1, %edx	#,
	movl	$.LC45, %esi	#,
	movq	%rax, %rdi	# tmp156,
	call	Perl_gv_fetchmethod_autoload	#
	testq	%rax, %rax	# D.24578
	je	.L2073	#,
	.loc 1 4017 0
	movq	-80(%rbp), %rax	# stash, tmp157
	movl	$1, %edx	#,
	movl	$.LC46, %esi	#,
	movq	%rax, %rdi	# tmp157,
	call	Perl_gv_fetchmethod_autoload	#
	testq	%rax, %rax	# D.24578
	je	.L2073	#,
.L2072:
	.loc 1 4010 0 discriminator 1
	movl	$1, %eax	#, iftmp.1801
	jmp	.L2076	#
.L2073:
	.loc 1 4010 0 is_stmt 0 discriminator 3
	movl	$0, %eax	#, iftmp.1801
.L2076:
	.loc 1 4010 0 discriminator 4
	movb	%al, -115(%rbp)	# iftmp.1801, other_magic
.L2071:
.LBE473:
	.loc 1 4020 0 is_stmt 1
	cmpl	$0, -108(%rbp)	#, realhv
	jne	.L2077	#,
	.loc 1 4020 0 is_stmt 0 discriminator 1
	cmpb	$0, -113(%rbp)	#, localizing
	je	.L2077	#,
	.loc 1 4021 0 is_stmt 1
	movl	$.LC47, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L2078	#
.L2077:
	.loc 1 4023 0
	cmpl	$0, -108(%rbp)	#, realhv
	jne	.L2079	#,
	.loc 1 4023 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# hv_35->sv_flags, D.24572
	movzbl	%al, %eax	# D.24572, D.24572
	cmpl	$10, %eax	#, D.24572
	jne	.L2080	#,
.L2079:
	.loc 1 4024 0 is_stmt 1
	jmp	.L2081	#
.L2102:
.LBB474:
	.loc 1 4025 0
	movq	(%r12), %rax	# *mark_76, tmp158
	movq	%rax, -72(%rbp)	# tmp158, keysv
	.loc 1 4027 0
	movb	$0, -114(%rbp)	#, preeminent
	.loc 1 4029 0
	cmpb	$0, -113(%rbp)	#, localizing
	je	.L2082	#,
	.loc 1 4030 0
	movl	12(%rbx), %eax	# hv_35->sv_flags, D.24572
	andl	$32768, %eax	#, D.24572
	testl	%eax, %eax	# D.24572
	je	.L2083	#,
	.loc 1 4030 0 is_stmt 0 discriminator 2
	cmpb	$0, -115(%rbp)	#, other_magic
	je	.L2084	#,
.L2083:
	.loc 1 4030 0 discriminator 1
	cmpl	$0, -108(%rbp)	#, realhv
	je	.L2085	#,
	.loc 1 4030 0 discriminator 3
	movq	-72(%rbp), %rax	# keysv, tmp159
	movl	$0, %edx	#,
	movq	%rax, %rsi	# tmp159,
	movq	%rbx, %rdi	# hv,
	call	Perl_hv_exists_ent	#
	jmp	.L2086	#
.L2085:
	.loc 1 4030 0 discriminator 4
	movq	-72(%rbp), %rax	# keysv, tmp160
	movl	$0, %edx	#,
	movq	%rax, %rsi	# tmp160,
	movq	%rbx, %rdi	# hv,
	call	Perl_avhv_exists_ent	#
.L2086:
	.loc 1 4030 0 discriminator 5
	jmp	.L2087	#
.L2084:
	.loc 1 4030 0 discriminator 1
	movl	$1, %eax	#, iftmp.1803
.L2087:
	.loc 1 4030 0 discriminator 6
	movb	%al, -114(%rbp)	# iftmp.1803, preeminent
.L2082:
	.loc 1 4035 0 is_stmt 1
	cmpl	$0, -108(%rbp)	#, realhv
	je	.L2088	#,
.LBB475:
	.loc 1 4036 0
	movq	-72(%rbp), %rax	# keysv, tmp161
	movl	$0, %ecx	#,
	movl	%r14d, %edx	# lval,
	movq	%rax, %rsi	# tmp161,
	movq	%rbx, %rdi	# hv,
	call	Perl_hv_fetch_ent	#
	movq	%rax, -64(%rbp)	# tmp162, he
	.loc 1 4037 0
	cmpq	$0, -64(%rbp)	#, he
	je	.L2089	#,
	.loc 1 4037 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# he, tmp163
	addq	$16, %rax	#, iftmp.1805
	jmp	.L2090	#
.L2089:
	.loc 1 4037 0 discriminator 2
	movl	$0, %eax	#, iftmp.1805
.L2090:
	.loc 1 4037 0 discriminator 1
	movq	%rax, -96(%rbp)	# iftmp.1805, svp
.LBE475:
	jmp	.L2091	#
.L2088:
	.loc 1 4040 0 is_stmt 1
	movq	-72(%rbp), %rax	# keysv, tmp164
	movl	$0, %ecx	#,
	movl	%r14d, %edx	# lval,
	movq	%rax, %rsi	# tmp164,
	movq	%rbx, %rdi	# hv,
	call	Perl_avhv_fetch_ent	#
	movq	%rax, -96(%rbp)	# tmp165, svp
.L2091:
	.loc 1 4042 0
	testl	%r14d, %r14d	# lval
	je	.L2092	#,
	.loc 1 4043 0
	cmpq	$0, -96(%rbp)	#, svp
	je	.L2093	#,
	.loc 1 4043 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# svp, tmp166
	movq	(%rax), %rax	# *svp_4, D.24576
	cmpq	$PL_sv_undef, %rax	#, D.24576
	jne	.L2094	#,
.L2093:
.LBB476:
	.loc 1 4045 0 is_stmt 1
	movq	-72(%rbp), %rax	# keysv, tmp167
	movl	12(%rax), %eax	# keysv_77->sv_flags, D.24572
	andl	$262144, %eax	#, D.24572
	testl	%eax, %eax	# D.24572
	je	.L2095	#,
	.loc 1 4045 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# keysv, tmp168
	movq	(%rax), %rax	# keysv_77->sv_any, D.24577
	movq	8(%rax), %rax	# MEM[(struct XPV *)_107].xpv_cur, n_a.1807
	movq	%rax, -104(%rbp)	# n_a.1807, n_a
	movq	-72(%rbp), %rax	# keysv, tmp169
	movq	(%rax), %rax	# keysv_77->sv_any, D.24577
	movq	(%rax), %rax	# MEM[(struct XPV *)_109].xpv_pv, iftmp.1806
	jmp	.L2096	#
.L2095:
	.loc 1 4045 0 discriminator 2
	leaq	-104(%rbp), %rcx	#, tmp170
	movq	-72(%rbp), %rax	# keysv, tmp171
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp170,
	movq	%rax, %rdi	# tmp171,
	call	Perl_sv_2pv_flags	#
.L2096:
	.loc 1 4045 0 discriminator 3
	movq	%rax, %rsi	# iftmp.1806,
	movl	$PL_no_helem, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L2078	#
.L2094:
.LBE476:
	.loc 1 4047 0 is_stmt 1
	cmpb	$0, -113(%rbp)	#, localizing
	je	.L2092	#,
	.loc 1 4048 0
	cmpb	$0, -114(%rbp)	#, preeminent
	je	.L2097	#,
	.loc 1 4049 0
	movq	-96(%rbp), %rdx	# svp, tmp172
	movq	-72(%rbp), %rax	# keysv, tmp173
	movq	%rax, %rsi	# tmp173,
	movq	%rbx, %rdi	# hv,
	call	Perl_save_helem	#
	jmp	.L2092	#
.L2097:
.LBB477:
	.loc 1 4052 0
	movq	-72(%rbp), %rax	# keysv, tmp174
	movl	12(%rax), %eax	# keysv_77->sv_flags, D.24572
	andl	$262144, %eax	#, D.24572
	testl	%eax, %eax	# D.24572
	je	.L2098	#,
	.loc 1 4052 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# keysv, tmp175
	movq	(%rax), %rax	# keysv_77->sv_any, D.24577
	movq	8(%rax), %rax	# MEM[(struct XPV *)_94].xpv_cur, keylen.1809
	movq	%rax, -104(%rbp)	# keylen.1809, keylen
	movq	-72(%rbp), %rax	# keysv, tmp176
	movq	(%rax), %rax	# keysv_77->sv_any, D.24577
	movq	(%rax), %rax	# MEM[(struct XPV *)_96].xpv_pv, iftmp.1808
	jmp	.L2099	#
.L2098:
	.loc 1 4052 0 discriminator 2
	leaq	-104(%rbp), %rcx	#, tmp177
	movq	-72(%rbp), %rax	# keysv, tmp178
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp177,
	movq	%rax, %rdi	# tmp178,
	call	Perl_sv_2pv_flags	#
.L2099:
	.loc 1 4052 0 discriminator 1
	movq	%rax, -56(%rbp)	# iftmp.1808, key
	.loc 1 4053 0 is_stmt 1 discriminator 1
	movq	-104(%rbp), %rax	# keylen, keylen.1810
	movl	%eax, %r15d	# keylen.1810, D.24568
	movq	-104(%rbp), %rax	# keylen, keylen.1811
	movl	%eax, %edx	# keylen.1811, D.24568
	movq	-56(%rbp), %rax	# key, tmp179
	movl	%edx, %esi	# D.24568,
	movq	%rax, %rdi	# tmp179,
	call	Perl_savepvn	#
	movl	%r15d, %edx	# D.24568,
	movq	%rax, %rsi	# D.24579,
	movq	%rbx, %rdi	# hv,
	call	Perl_save_delete	#
.L2092:
.LBE477:
	.loc 1 4057 0
	cmpq	$0, -96(%rbp)	#, svp
	je	.L2100	#,
	.loc 1 4057 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# svp, tmp180
	movq	(%rax), %rax	# *svp_4, iftmp.1812
	jmp	.L2101	#
.L2100:
	.loc 1 4057 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.1812
.L2101:
	.loc 1 4057 0 discriminator 3
	movq	%rax, (%r12)	# iftmp.1812, *mark_76
.L2081:
.LBE474:
	.loc 1 4024 0 is_stmt 1 discriminator 1
	addq	$8, %r12	#, mark
	cmpq	%r13, %r12	# sp, mark
	jbe	.L2102	#,
.L2080:
	.loc 1 4060 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1814
	movzbl	36(%rax), %eax	# PL_op.1814_115->op_flags, D.24571
	movzbl	%al, %eax	# D.24571, D.24568
	andl	$3, %eax	#, D.24568
	testl	%eax, %eax	# D.24568
	je	.L2103	#,
	.loc 1 4060 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1815
	movzbl	36(%rax), %eax	# PL_op.1815_119->op_flags, D.24571
	movzbl	%al, %eax	# D.24571, D.24568
	andl	$3, %eax	#, D.24568
	cmpl	$3, %eax	#, D.24568
	setne	%al	#, iftmp.1813
	jmp	.L2104	#
.L2103:
	.loc 1 4060 0 discriminator 2
	call	Perl_dowantarray	#
	cmpl	$1, %eax	#, D.24568
	setne	%al	#, iftmp.1813
.L2104:
	.loc 1 4060 0 discriminator 3
	testb	%al, %al	# iftmp.1813
	je	.L2105	#,
	.loc 1 4061 0 is_stmt 1
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1816
	movl	-112(%rbp), %edx	# origmark, tmp181
	movslq	%edx, %rdx	# tmp181, D.24569
	salq	$3, %rdx	#, D.24569
	leaq	(%rax,%rdx), %r12	#, mark
	.loc 1 4062 0
	addq	$8, %r12	#, mark
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1818
	movl	-112(%rbp), %edx	# origmark, tmp182
	movslq	%edx, %rdx	# tmp182, D.24569
	salq	$3, %rdx	#, D.24569
	addq	%rdx, %rax	# D.24569, D.24580
	cmpq	%r13, %rax	# sp, D.24580
	jae	.L2106	#,
	.loc 1 4062 0 is_stmt 0 discriminator 1
	movq	0(%r13), %rax	# *sp_34, iftmp.1817
	jmp	.L2107	#
.L2106:
	.loc 1 4062 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.1817
.L2107:
	.loc 1 4062 0 discriminator 3
	movq	%rax, (%r12)	# iftmp.1817, *mark_130
	.loc 1 4063 0 is_stmt 1 discriminator 3
	movq	%r12, %r13	# mark, sp
.L2105:
	.loc 1 4065 0
	movq	%r13, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1819
	movq	(%rax), %rax	# PL_op.1819_138->op_next, D.24567
.L2078:
	.loc 1 4066 0
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%r15	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE105:
	.size	Perl_pp_hslice, .-Perl_pp_hslice
	.globl	Perl_pp_list
	.type	Perl_pp_list, @function
Perl_pp_list:
.LFB106:
	.loc 1 4071 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 4072 0
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1820
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1821
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1823
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1823, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1822_6, D.24585
	cltq
	salq	$3, %rax	#, D.24586
	leaq	(%rcx,%rax), %rbx	#, mark
	.loc 1 4073 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1825
	movzbl	36(%rax), %eax	# PL_op.1825_12->op_flags, D.24587
	movzbl	%al, %eax	# D.24587, D.24585
	andl	$3, %eax	#, D.24585
	testl	%eax, %eax	# D.24585
	je	.L2109	#,
	.loc 1 4073 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1826
	movzbl	36(%rax), %eax	# PL_op.1826_16->op_flags, D.24587
	movzbl	%al, %eax	# D.24587, D.24585
	andl	$3, %eax	#, D.24585
	cmpl	$3, %eax	#, D.24585
	setne	%al	#, iftmp.1824
	jmp	.L2110	#
.L2109:
	.loc 1 4073 0 discriminator 2
	call	Perl_dowantarray	#
	cmpl	$1, %eax	#, D.24585
	setne	%al	#, iftmp.1824
.L2110:
	.loc 1 4073 0 discriminator 3
	testb	%al, %al	# iftmp.1824
	je	.L2111	#,
	.loc 1 4074 0 is_stmt 1
	addq	$8, %rbx	#, mark
	cmpq	%r12, %rbx	# sp, mark
	ja	.L2112	#,
	.loc 1 4075 0
	movq	(%r12), %rax	# *sp_3, D.24588
	movq	%rax, (%rbx)	# D.24588, *mark_23
	jmp	.L2113	#
.L2112:
	.loc 1 4077 0
	movq	$PL_sv_undef, (%rbx)	#, *mark_23
.L2113:
	.loc 1 4078 0
	movq	%rbx, %r12	# mark, sp
.L2111:
	.loc 1 4080 0
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1827
	movq	(%rax), %rax	# PL_op.1827_26->op_next, D.24589
	.loc 1 4081 0
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE106:
	.size	Perl_pp_list, .-Perl_pp_list
	.globl	Perl_pp_lslice
	.type	Perl_pp_lslice, @function
Perl_pp_lslice:
.LFB107:
	.loc 1 4084 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$48, %rsp	#,
	.cfi_offset 14, -24
	.cfi_offset 13, -32
	.cfi_offset 12, -40
	.cfi_offset 3, -48
	.loc 1 4085 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4086 0
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, tmp131
	movq	%rax, -56(%rbp)	# tmp131, lastrelem
	.loc 1 4087 0
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1828
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1829
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1831
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1831, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1830_15, D.24591
	cltq
	salq	$3, %rax	#, D.24592
	addq	%rcx, %rax	# PL_stack_base.1828, tmp132
	movq	%rax, -48(%rbp)	# tmp132, lastlelem
	.loc 1 4088 0
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1832
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1833
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1835
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1835, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1834_23, D.24591
	cltq
	addq	$1, %rax	#, D.24593
	salq	$3, %rax	#, D.24593
	addq	%rcx, %rax	# PL_stack_base.1832, tmp133
	movq	%rax, -40(%rbp)	# tmp133, firstlelem
	.loc 1 4089 0
	movq	-48(%rbp), %rax	# lastlelem, tmp134
	leaq	8(%rax), %r14	#, firstrelem
	.loc 1 4090 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1836
	movl	68(%rax), %eax	# PL_curcop.1836_31->cop_arybase, tmp135
	movl	%eax, -64(%rbp)	# tmp135, arybase
	.loc 1 4091 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1837
	movzbl	36(%rax), %eax	# PL_op.1837_33->op_flags, D.24594
	movzbl	%al, %eax	# D.24594, D.24591
	andl	$32, %eax	#, tmp136
	movl	%eax, -60(%rbp)	# tmp136, lval
	.loc 1 4092 0
	movl	-60(%rbp), %eax	# lval, tmp137
	movl	%eax, -68(%rbp)	# tmp137, is_something_there
	.loc 1 4094 0
	movq	-56(%rbp), %rdx	# lastrelem, lastrelem.1838
	movq	-48(%rbp), %rax	# lastlelem, lastlelem.1839
	subq	%rax, %rdx	# lastlelem.1839, D.24595
	movq	%rdx, %rax	# D.24595, D.24595
	sarq	$3, %rax	#, tmp138
	movl	%eax, %r13d	# D.24595, max
	.loc 1 4098 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1841
	movzbl	36(%rax), %eax	# PL_op.1841_43->op_flags, D.24594
	movzbl	%al, %eax	# D.24594, D.24591
	andl	$3, %eax	#, D.24591
	testl	%eax, %eax	# D.24591
	je	.L2116	#,
	.loc 1 4098 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1842
	movzbl	36(%rax), %eax	# PL_op.1842_47->op_flags, D.24594
	movzbl	%al, %eax	# D.24594, D.24591
	andl	$3, %eax	#, D.24591
	cmpl	$3, %eax	#, D.24591
	setne	%al	#, iftmp.1840
	jmp	.L2117	#
.L2116:
	.loc 1 4098 0 discriminator 2
	call	Perl_dowantarray	#
	cmpl	$1, %eax	#, D.24591
	setne	%al	#, iftmp.1840
.L2117:
	.loc 1 4098 0 discriminator 3
	testb	%al, %al	# iftmp.1840
	je	.L2118	#,
	.loc 1 4099 0 is_stmt 1
	movq	-48(%rbp), %rax	# lastlelem, tmp139
	movq	(%rax), %rax	# *lastlelem_20, PL_Sv.1843
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1843, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1845
	movl	12(%rax), %eax	# PL_Sv.1845_55->sv_flags, D.24596
	andl	$65536, %eax	#, D.24596
	testl	%eax, %eax	# D.24596
	je	.L2119	#,
	.loc 1 4099 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1846
	movq	(%rax), %rax	# PL_Sv.1846_58->sv_any, D.24597
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_59].xiv_iv, D.24595
	jmp	.L2120	#
.L2119:
	.loc 1 4099 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1847
	movq	%rax, %rdi	# PL_Sv.1847,
	call	Perl_sv_2iv	#
.L2120:
	.loc 1 4099 0 discriminator 3
	movl	%eax, %ebx	# iftmp.1844, ix
	.loc 1 4100 0 is_stmt 1 discriminator 3
	testl	%ebx, %ebx	# ix
	jns	.L2121	#,
	.loc 1 4101 0
	addl	%r13d, %ebx	# max, ix
	jmp	.L2122	#
.L2121:
	.loc 1 4103 0
	subl	-64(%rbp), %ebx	# arybase, ix
.L2122:
	.loc 1 4104 0
	testl	%ebx, %ebx	# ix
	js	.L2123	#,
	.loc 1 4104 0 is_stmt 0 discriminator 1
	cmpl	%r13d, %ebx	# max, ix
	jl	.L2124	#,
.L2123:
	.loc 1 4105 0 is_stmt 1
	movq	-40(%rbp), %rax	# firstlelem, tmp140
	movq	$PL_sv_undef, (%rax)	#, *firstlelem_29
	jmp	.L2125	#
.L2124:
	.loc 1 4107 0
	movslq	%ebx, %rax	# ix, D.24592
	salq	$3, %rax	#, D.24592
	addq	%r14, %rax	# firstrelem, D.24598
	movq	(%rax), %rdx	# *_70, D.24599
	movq	-40(%rbp), %rax	# firstlelem, tmp141
	movq	%rdx, (%rax)	# D.24599, *firstlelem_29
.L2125:
	.loc 1 4108 0
	movq	-40(%rbp), %rbx	# firstlelem, sp
	.loc 1 4109 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1848
	movq	(%rax), %rax	# PL_op.1848_73->op_next, D.24590
	jmp	.L2126	#
.L2118:
	.loc 1 4112 0
	testl	%r13d, %r13d	# max
	jne	.L2127	#,
	.loc 1 4113 0
	movq	-40(%rbp), %rax	# firstlelem, tmp142
	leaq	-8(%rax), %rbx	#, sp
	.loc 1 4114 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1849
	movq	(%rax), %rax	# PL_op.1849_76->op_next, D.24590
	jmp	.L2126	#
.L2127:
	.loc 1 4117 0
	movq	-40(%rbp), %r12	# firstlelem, lelem
	jmp	.L2128	#
.L2136:
	.loc 1 4118 0
	movq	(%r12), %rax	# *lelem_4, PL_Sv.1850
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1850, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1852
	movl	12(%rax), %eax	# PL_Sv.1852_80->sv_flags, D.24596
	andl	$65536, %eax	#, D.24596
	testl	%eax, %eax	# D.24596
	je	.L2129	#,
	.loc 1 4118 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1853
	movq	(%rax), %rax	# PL_Sv.1853_83->sv_any, D.24597
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_84].xiv_iv, D.24595
	jmp	.L2130	#
.L2129:
	.loc 1 4118 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1854
	movq	%rax, %rdi	# PL_Sv.1854,
	call	Perl_sv_2iv	#
.L2130:
	.loc 1 4118 0 discriminator 3
	movl	%eax, %ebx	# iftmp.1851, ix
	.loc 1 4119 0 is_stmt 1 discriminator 3
	testl	%ebx, %ebx	# ix
	jns	.L2131	#,
	.loc 1 4120 0
	addl	%r13d, %ebx	# max, ix
	jmp	.L2132	#
.L2131:
	.loc 1 4122 0
	subl	-64(%rbp), %ebx	# arybase, ix
.L2132:
	.loc 1 4123 0
	testl	%ebx, %ebx	# ix
	js	.L2133	#,
	.loc 1 4123 0 is_stmt 0 discriminator 1
	cmpl	%r13d, %ebx	# max, ix
	jl	.L2134	#,
.L2133:
	.loc 1 4124 0 is_stmt 1
	movq	$PL_sv_undef, (%r12)	#, *lelem_4
	jmp	.L2135	#
.L2134:
	.loc 1 4126 0
	movl	$1, -68(%rbp)	#, is_something_there
	.loc 1 4127 0
	movslq	%ebx, %rax	# ix, D.24592
	salq	$3, %rax	#, D.24592
	addq	%r14, %rax	# firstrelem, D.24598
	movq	(%rax), %rax	# *_96, D.24599
	movq	%rax, (%r12)	# D.24599, *lelem_4
	movq	(%r12), %rax	# *lelem_4, D.24599
	testq	%rax, %rax	# D.24599
	jne	.L2135	#,
	.loc 1 4128 0
	movq	$PL_sv_undef, (%r12)	#, *lelem_4
.L2135:
	.loc 1 4117 0
	addq	$8, %r12	#, lelem
.L2128:
	.loc 1 4117 0 is_stmt 0 discriminator 1
	cmpq	-48(%rbp), %r12	# lastlelem, lelem
	jbe	.L2136	#,
	.loc 1 4131 0 is_stmt 1
	cmpl	$0, -68(%rbp)	#, is_something_there
	je	.L2137	#,
	.loc 1 4132 0
	movq	-48(%rbp), %rbx	# lastlelem, sp
	jmp	.L2138	#
.L2137:
	.loc 1 4134 0
	movq	-40(%rbp), %rax	# firstlelem, tmp143
	leaq	-8(%rax), %rbx	#, sp
.L2138:
	.loc 1 4135 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1855
	movq	(%rax), %rax	# PL_op.1855_102->op_next, D.24590
.L2126:
	.loc 1 4136 0
	addq	$48, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE107:
	.size	Perl_pp_lslice, .-Perl_pp_lslice
	.globl	Perl_pp_anonlist
	.type	Perl_pp_anonlist, @function
Perl_pp_anonlist:
.LFB108:
	.loc 1 4139 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 4140 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1856
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1857
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1859
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1859, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1858_5, D.24600
	cltq
	salq	$3, %rax	#, D.24601
	leaq	(%rcx,%rax), %r12	#, mark
	movq	%r12, %rdx	# mark, mark.1860
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1861
	subq	%rax, %rdx	# PL_stack_base.1862, D.24602
	movq	%rdx, %rax	# D.24602, D.24602
	sarq	$3, %rax	#, tmp90
	movl	%eax, -32(%rbp)	# D.24602, origmark
	.loc 1 4141 0
	movq	%rbx, %rdx	# sp, sp.1863
	movq	%r12, %rax	# mark, mark.1864
	subq	%rax, %rdx	# mark.1864, D.24602
	movq	%rdx, %rax	# D.24602, D.24602
	sarq	$3, %rax	#, tmp91
	movl	%eax, -28(%rbp)	# D.24602, items
	.loc 1 4142 0
	leaq	8(%r12), %rdx	#, D.24603
	movl	-28(%rbp), %eax	# items, tmp92
	movq	%rdx, %rsi	# D.24603,
	movl	%eax, %edi	# tmp92,
	call	Perl_av_make	#
	movq	%rax, %rdi	# D.24604,
	call	Perl_sv_2mortal	#
	movq	%rax, -24(%rbp)	# tmp93, av
	.loc 1 4143 0
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1865
	movl	-32(%rbp), %edx	# origmark, tmp94
	movslq	%edx, %rdx	# tmp94, D.24601
	salq	$3, %rdx	#, D.24601
	leaq	(%rax,%rdx), %rbx	#, sp
.LBB478:
	.loc 1 4144 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1866
	movq	%rax, %rdx	# PL_stack_max.1866, PL_stack_max.1867
	movq	%rbx, %rax	# sp, sp.1868
	subq	%rax, %rdx	# sp.1868, D.24602
	movq	%rdx, %rax	# D.24602, D.24602
	cmpq	$7, %rax	#, D.24602
	jg	.L2140	#,
	.loc 1 4144 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2140:
	.loc 1 4144 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-24(%rbp), %rax	# av, tmp95
	movq	%rax, (%rbx)	# tmp95, *sp_34
.LBE478:
	.loc 1 4145 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1869
	movq	(%rax), %rax	# PL_op.1869_36->op_next, D.24606
	.loc 1 4146 0 discriminator 2
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE108:
	.size	Perl_pp_anonlist, .-Perl_pp_anonlist
	.section	.rodata
	.align 8
.LC48:
	.string	"Odd number of elements in anonymous hash"
	.text
	.globl	Perl_pp_anonhash
	.type	Perl_pp_anonhash, @function
Perl_pp_anonhash:
.LFB109:
	.loc 1 4149 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$32, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	.loc 1 4150 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1870
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1871
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1873
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1873, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1872_7, D.24607
	cltq
	salq	$3, %rax	#, D.24608
	leaq	(%rcx,%rax), %r12	#, mark
	movq	%r12, %rdx	# mark, mark.1874
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1875
	subq	%rax, %rdx	# PL_stack_base.1876, D.24609
	movq	%rdx, %rax	# D.24609, D.24609
	sarq	$3, %rax	#, tmp105
	movl	%eax, -44(%rbp)	# D.24609, origmark
	.loc 1 4151 0
	call	Perl_newHV	#
	movq	%rax, %rdi	# D.24610,
	call	Perl_sv_2mortal	#
	movq	%rax, -40(%rbp)	# tmp106, hv
	.loc 1 4153 0
	jmp	.L2143	#
.L2148:
.LBB479:
	.loc 1 4154 0
	addq	$8, %r12	#, mark
	movq	(%r12), %rax	# *mark_21, tmp107
	movq	%rax, -32(%rbp)	# tmp107, key
	.loc 1 4155 0
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -24(%rbp)	# tmp108, val
	.loc 1 4156 0
	cmpq	%rbx, %r12	# sp, mark
	jae	.L2144	#,
	.loc 1 4157 0
	addq	$8, %r12	#, mark
	movq	(%r12), %rcx	# *mark_24, D.24611
	movq	-24(%rbp), %rax	# val, tmp109
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# D.24611,
	movq	%rax, %rdi	# tmp109,
	call	Perl_sv_setsv_flags	#
	jmp	.L2145	#
.L2144:
	.loc 1 4158 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1877
	movq	80(%rax), %rax	# PL_curcop.1877_26->cop_warnings, D.24611
	testq	%rax, %rax	# D.24611
	je	.L2146	#,
	.loc 1 4158 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1878
	movq	80(%rax), %rax	# PL_curcop.1878_28->cop_warnings, D.24611
	cmpq	$32, %rax	#, D.24611
	je	.L2146	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1879
	movq	80(%rax), %rax	# PL_curcop.1879_30->cop_warnings, D.24611
	cmpq	$16, %rax	#, D.24611
	je	.L2147	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1880
	movq	80(%rax), %rax	# PL_curcop.1880_32->cop_warnings, D.24611
	movq	(%rax), %rax	# _33->sv_any, D.24612
	movq	(%rax), %rax	# MEM[(struct XPV *)_34].xpv_pv, D.24613
	addq	$3, %rax	#, D.24613
	movzbl	(%rax), %eax	# *_36, D.24614
	movsbl	%al, %eax	# D.24614, D.24607
	andl	$1, %eax	#, D.24607
	testl	%eax, %eax	# D.24607
	jne	.L2147	#,
.L2146:
	.loc 1 4158 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1881
	movq	80(%rax), %rax	# PL_curcop.1881_40->cop_warnings, D.24611
	testq	%rax, %rax	# D.24611
	jne	.L2145	#,
	.loc 1 4158 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1882
	movzbl	%al, %eax	# PL_dowarn.1882, D.24607
	andl	$1, %eax	#, D.24607
	testl	%eax, %eax	# D.24607
	je	.L2145	#,
.L2147:
	.loc 1 4159 0 is_stmt 1
	movl	$.LC48, %esi	#,
	movl	$12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L2145:
	.loc 1 4160 0
	movq	-24(%rbp), %rdx	# val, tmp110
	movq	-32(%rbp), %rsi	# key, tmp111
	movq	-40(%rbp), %rax	# hv, tmp112
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp112,
	call	Perl_hv_store_ent	#
.L2143:
.LBE479:
	.loc 1 4153 0 discriminator 1
	cmpq	%rbx, %r12	# sp, mark
	jb	.L2148	#,
	.loc 1 4162 0
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1883
	movl	-44(%rbp), %edx	# origmark, tmp113
	movslq	%edx, %rdx	# tmp113, D.24608
	salq	$3, %rdx	#, D.24608
	leaq	(%rax,%rdx), %rbx	#, sp
.LBB480:
	.loc 1 4163 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1884
	movq	%rax, %rdx	# PL_stack_max.1884, PL_stack_max.1885
	movq	%rbx, %rax	# sp, sp.1886
	subq	%rax, %rdx	# sp.1886, D.24609
	movq	%rdx, %rax	# D.24609, D.24609
	cmpq	$7, %rax	#, D.24609
	jg	.L2149	#,
	.loc 1 4163 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2149:
	.loc 1 4163 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-40(%rbp), %rax	# hv, tmp114
	movq	%rax, (%rbx)	# tmp114, *sp_54
.LBE480:
	.loc 1 4164 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1887
	movq	(%rax), %rax	# PL_op.1887_56->op_next, D.24615
	.loc 1 4165 0 discriminator 2
	addq	$32, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE109:
	.size	Perl_pp_anonhash, .-Perl_pp_anonhash
	.section	.rodata
.LC49:
	.string	"SPLICE"
	.align 8
.LC50:
	.string	"splice() offset past end of array"
	.text
	.globl	Perl_pp_splice
	.type	Perl_pp_splice, @function
Perl_pp_splice:
.LFB110:
	.loc 1 4168 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r15	#
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	.loc 1 4169 0
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, sp
	movq	%rax, -112(%rbp)	# sp, %sfp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1888
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1889
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1891
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1891, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1890_46, D.24618
	cltq
	salq	$3, %rax	#, D.24619
	leaq	(%rcx,%rax), %r12	#, mark
	movq	%r12, %rdx	# mark, mark.1892
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1893
	subq	%rax, %rdx	# PL_stack_base.1894, D.24620
	movq	%rdx, %rax	# D.24620, D.24620
	sarq	$3, %rax	#, tmp456
	movl	%eax, -88(%rbp)	# D.24620, origmark
	.loc 1 4170 0
	addq	$8, %r12	#, mark
	movq	(%r12), %rbx	# *mark_58, ary
	.loc 1 4179 0
	movq	$0, -72(%rbp)	#, tmparyval
	.loc 1 4182 0
	movl	12(%rbx), %eax	# MEM[(struct SV *)ary_59].sv_flags, D.24621
	andl	$32768, %eax	#, D.24621
	testl	%eax, %eax	# D.24621
	je	.L2152	#,
	.loc 1 4182 0 is_stmt 0 discriminator 1
	movl	$80, %esi	#,
	movq	%rbx, %rdi	# ary,
	call	Perl_mg_find	#
	jmp	.L2153	#
.L2152:
	.loc 1 4182 0 discriminator 2
	movl	$0, %eax	#, iftmp.1895
.L2153:
	.loc 1 4182 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.1895, mg
	cmpq	$0, -64(%rbp)	#, mg
	je	.L2154	#,
	.loc 1 4183 0 is_stmt 1
	movq	%r12, %r13	# mark, mark.1896
	leaq	-8(%r13), %r12	#, mark
	movq	-64(%rbp), %rax	# mg, tmp457
	movq	24(%rax), %rax	# mg_65->mg_obj, D.24622
	testq	%rax, %rax	# D.24622
	je	.L2155	#,
	.loc 1 4183 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# mg, tmp458
	movq	24(%rax), %rax	# mg_65->mg_obj, iftmp.1897
	jmp	.L2156	#
.L2155:
	.loc 1 4183 0 discriminator 2
	movq	%rbx, %rdi	# ary,
	call	Perl_newRV	#
	movq	%rax, %rdi	# D.24622,
	call	Perl_sv_2mortal	#
.L2156:
	.loc 1 4183 0 discriminator 3
	movq	%rax, 0(%r13)	# iftmp.1897, *mark.1896_66
.LBB481:
	.loc 1 4184 0 is_stmt 1 discriminator 3
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1898
	addq	$4, %rax	#, PL_markstack_ptr.1899
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1899, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.1900
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.1901
	cmpq	%rax, %rdx	# PL_markstack_max.1901, PL_markstack_ptr.1900
	jne	.L2157	#,
	.loc 1 4184 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L2157:
	.loc 1 4184 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1902
	movq	%r12, %rcx	# mark, mark.1903
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1904
	subq	%rdx, %rcx	# PL_stack_base.1905, D.24620
	movq	%rcx, %rdx	# D.24620, D.24620
	sarq	$3, %rdx	#, tmp459
	movl	%edx, (%rax)	# D.24618, *PL_markstack_ptr.1902_76
.LBE481:
	.loc 1 4185 0 is_stmt 1 discriminator 2
	movq	-112(%rbp), %rax	# %sfp, sp
	movq	%rax, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4186 0 discriminator 2
	call	Perl_push_scope	#
	.loc 1 4187 0 discriminator 2
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1907
	movzbl	36(%rax), %eax	# PL_op.1907_84->op_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$3, %eax	#, D.24618
	cmpl	$1, %eax	#, D.24618
	je	.L2158	#,
	.loc 1 4187 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1909
	movzbl	36(%rax), %eax	# PL_op.1909_88->op_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$3, %eax	#, D.24618
	cmpl	$2, %eax	#, D.24618
	je	.L2159	#,
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1911
	movzbl	36(%rax), %eax	# PL_op.1911_92->op_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$3, %eax	#, D.24618
	cmpl	$3, %eax	#, D.24618
	je	.L2160	#,
	call	Perl_block_gimme	#
	jmp	.L2163	#
.L2160:
	.loc 1 4187 0 discriminator 2
	movl	$1, %eax	#, iftmp.1910
	jmp	.L2163	#
.L2159:
	movl	$0, %eax	#, iftmp.1908
	jmp	.L2163	#
.L2158:
	movl	$128, %eax	#, iftmp.1906
.L2163:
	.loc 1 4187 0 discriminator 3
	movl	%eax, %esi	# iftmp.1906,
	movl	$.LC49, %edi	#,
	call	Perl_call_method	#
	.loc 1 4188 0 is_stmt 1 discriminator 3
	call	Perl_pop_scope	#
	.loc 1 4189 0 discriminator 3
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, sp
	.loc 1 4190 0 discriminator 3
	movq	%rax, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1912
	movq	(%rax), %rax	# PL_op.1912_103->op_next, D.24617
	jmp	.L2164	#
.L2154:
	.loc 1 4193 0
	addq	$8, -112(%rbp)	#, %sfp
	.loc 1 4195 0
	addq	$8, %r12	#, mark
	cmpq	-112(%rbp), %r12	# %sfp, mark
	jae	.L2165	#,
	.loc 1 4196 0
	movq	(%r12), %rax	# *mark_106, PL_Sv.1913
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1913, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1915
	movl	12(%rax), %eax	# PL_Sv.1915_108->sv_flags, D.24621
	andl	$65536, %eax	#, D.24621
	testl	%eax, %eax	# D.24621
	je	.L2166	#,
	.loc 1 4196 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1916
	movq	(%rax), %rax	# PL_Sv.1916_111->sv_any, D.24625
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_112].xiv_iv, D.24620
	jmp	.L2167	#
.L2166:
	.loc 1 4196 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1917
	movq	%rax, %rdi	# PL_Sv.1917,
	call	Perl_sv_2iv	#
.L2167:
	.loc 1 4196 0 discriminator 3
	movl	%eax, %r14d	# iftmp.1914, i
	movl	%r14d, %eax	# i, offset
	movl	%eax, -100(%rbp)	# offset, %sfp
	.loc 1 4197 0 is_stmt 1 discriminator 3
	testl	%eax, %eax	# offset
	jns	.L2168	#,
	.loc 1 4198 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	8(%rax), %rax	# _120->xav_fill, D.24620
	movl	%eax, %edx	# D.24620, D.24627
	movl	-100(%rbp), %eax	# %sfp, offset.1918
	addl	%edx, %eax	# D.24627, D.24627
	addl	$1, %eax	#, D.24627
	movl	%eax, -100(%rbp)	# D.24627, %sfp
	jmp	.L2169	#
.L2168:
	.loc 1 4200 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1919
	movl	68(%rax), %eax	# PL_curcop.1919_127->cop_arybase, D.24618
	subl	%eax, -100(%rbp)	# D.24618, %sfp
.L2169:
	.loc 1 4201 0
	cmpl	$0, -100(%rbp)	#, %sfp
	jns	.L2170	#,
	.loc 1 4202 0
	movl	%r14d, %esi	# i,
	movl	$PL_no_aelem, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L2164	#
.L2170:
	.loc 1 4203 0
	addq	$8, %r12	#, mark
	cmpq	-112(%rbp), %r12	# %sfp, mark
	jae	.L2171	#,
	.loc 1 4204 0
	movq	%r12, %rax	# mark, mark.1920
	leaq	8(%rax), %r12	#, mark
	movq	(%rax), %rax	# *mark.1920_132, PL_Sv.1921
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1921, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1923
	movl	12(%rax), %eax	# PL_Sv.1923_135->sv_flags, D.24621
	andl	$65536, %eax	#, D.24621
	testl	%eax, %eax	# D.24621
	je	.L2172	#,
	.loc 1 4204 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1924
	movq	(%rax), %rax	# PL_Sv.1924_138->sv_any, D.24625
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_139].xiv_iv, D.24620
	jmp	.L2173	#
.L2172:
	.loc 1 4204 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1925
	movq	%rax, %rdi	# PL_Sv.1925,
	call	Perl_sv_2iv	#
.L2173:
	.loc 1 4204 0 discriminator 3
	movl	%eax, %r13d	# iftmp.1922, length
	.loc 1 4205 0 is_stmt 1 discriminator 3
	testl	%r13d, %r13d	# length
	jns	.L2176	#,
	.loc 1 4206 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	8(%rax), %rax	# _146->xav_fill, D.24620
	movl	%eax, %edx	# D.24620, D.24627
	movl	-100(%rbp), %eax	# %sfp, offset.1926
	subl	%eax, %edx	# offset.1926, D.24627
	movl	%r13d, %eax	# length, length.1927
	addl	%edx, %eax	# D.24627, D.24627
	addl	$1, %eax	#, D.24627
	movl	%eax, %r13d	# D.24627, length
	.loc 1 4207 0
	testl	%r13d, %r13d	# length
	jns	.L2176	#,
	.loc 1 4208 0
	movl	$0, %r13d	#, length
	jmp	.L2176	#
.L2171:
	.loc 1 4212 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	16(%rax), %rax	# _156->xav_max, D.24620
	addl	$1, %eax	#, D.24627
	movl	%eax, %r13d	# D.24627, length
	jmp	.L2176	#
.L2165:
	.loc 1 4215 0
	movl	$0, -100(%rbp)	#, %sfp
	.loc 1 4216 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	16(%rax), %rax	# _162->xav_max, D.24620
	addl	$1, %eax	#, D.24627
	movl	%eax, %r13d	# D.24627, length
.L2176:
	.loc 1 4218 0
	movslq	-100(%rbp), %rdx	# %sfp, D.24620
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	8(%rax), %rax	# _168->xav_fill, D.24620
	addq	$1, %rax	#, D.24620
	cmpq	%rax, %rdx	# D.24620, D.24620
	jle	.L2177	#,
	.loc 1 4219 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1928
	movq	80(%rax), %rax	# PL_curcop.1928_171->cop_warnings, D.24622
	testq	%rax, %rax	# D.24622
	je	.L2178	#,
	.loc 1 4219 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1929
	movq	80(%rax), %rax	# PL_curcop.1929_173->cop_warnings, D.24622
	cmpq	$32, %rax	#, D.24622
	je	.L2178	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1930
	movq	80(%rax), %rax	# PL_curcop.1930_175->cop_warnings, D.24622
	cmpq	$16, %rax	#, D.24622
	je	.L2179	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1931
	movq	80(%rax), %rax	# PL_curcop.1931_177->cop_warnings, D.24622
	movq	(%rax), %rax	# _178->sv_any, D.24625
	movq	(%rax), %rax	# MEM[(struct XPV *)_179].xpv_pv, D.24628
	addq	$3, %rax	#, D.24628
	movzbl	(%rax), %eax	# *_181, D.24629
	movsbl	%al, %eax	# D.24629, D.24618
	andl	$1, %eax	#, D.24618
	testl	%eax, %eax	# D.24618
	jne	.L2179	#,
.L2178:
	.loc 1 4219 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1932
	movq	80(%rax), %rax	# PL_curcop.1932_185->cop_warnings, D.24622
	testq	%rax, %rax	# D.24622
	jne	.L2180	#,
	.loc 1 4219 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1933
	movzbl	%al, %eax	# PL_dowarn.1933, D.24618
	andl	$1, %eax	#, D.24618
	testl	%eax, %eax	# D.24618
	je	.L2180	#,
.L2179:
	.loc 1 4220 0 is_stmt 1
	movl	$.LC50, %esi	#,
	movl	$12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L2180:
	.loc 1 4221 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	8(%rax), %rax	# _190->xav_fill, D.24620
	addl	$1, %eax	#, D.24627
	movl	%eax, -100(%rbp)	# D.24627, %sfp
.L2177:
	.loc 1 4223 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	8(%rax), %rax	# _195->xav_fill, D.24620
	movl	%eax, %edx	# D.24620, D.24627
	movl	-100(%rbp), %eax	# %sfp, offset
	addl	%r13d, %eax	# length, D.24618
	subl	%eax, %edx	# D.24627, D.24627
	movl	%edx, %eax	# D.24627, D.24627
	addl	$1, %eax	#, D.24627
	movl	%eax, -92(%rbp)	# D.24627, after
	.loc 1 4224 0
	cmpl	$0, -92(%rbp)	#, after
	jns	.L2181	#,
	.loc 1 4225 0
	movl	-92(%rbp), %eax	# after, tmp462
	addl	%r13d, %eax	# length, tmp461
	movl	%eax, %r13d	# tmp461, length
	.loc 1 4226 0
	movl	$0, -92(%rbp)	#, after
	.loc 1 4227 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	56(%rax), %rax	# _205->xav_alloc, D.24630
	testq	%rax, %rax	# D.24630
	jne	.L2181	#,
	.loc 1 4228 0
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# ary,
	call	Perl_av_extend	#
.L2181:
	.loc 1 4233 0
	movq	-112(%rbp), %rdx	# %sfp, sp.1934
	movq	%r12, %rax	# mark, mark.1935
	subq	%rax, %rdx	# mark.1935, D.24620
	movq	%rdx, %rax	# D.24620, D.24620
	sarq	$3, %rax	#, tmp463
	movl	%eax, -84(%rbp)	# D.24620, newlen
	.loc 1 4234 0
	movl	-84(%rbp), %eax	# newlen, tmp467
	subl	%r13d, %eax	# length, tmp466
	movl	%eax, -80(%rbp)	# tmp466, diff
	.loc 1 4235 0
	cmpl	$0, -84(%rbp)	#, newlen
	je	.L2182	#,
	.loc 1 4235 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movzbl	72(%rax), %eax	# _213->xav_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$1, %eax	#, D.24618
	testl	%eax, %eax	# D.24618
	jne	.L2182	#,
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movzbl	72(%rax), %eax	# _217->xav_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$2, %eax	#, D.24618
	testl	%eax, %eax	# D.24618
	je	.L2182	#,
	.loc 1 4236 0 is_stmt 1
	movq	%rbx, %rdi	# ary,
	call	Perl_av_reify	#
.L2182:
	.loc 1 4239 0
	movq	%r12, %r15	# mark, dst
	movl	-84(%rbp), %r14d	# newlen, i
	jmp	.L2183	#
.L2184:
.LBB482:
	.loc 1 4240 0 discriminator 2
	movq	(%r15), %rax	# *dst_8, tmp468
	movq	%rax, -56(%rbp)	# tmp468, h
	.loc 1 4241 0 discriminator 2
	movq	%r15, %rax	# dst, dst.1936
	movq	%rax, -120(%rbp)	# dst.1936, %sfp
	leaq	8(%rax), %r15	#, dst
	movq	-56(%rbp), %rax	# h, tmp469
	movq	%rax, %rdi	# tmp469,
	call	Perl_newSVsv	#
	movq	-120(%rbp), %rsi	# %sfp, dst.1936
	movq	%rax, (%rsi)	# D.24622, *dst.1936_224
.LBE482:
	.loc 1 4239 0 discriminator 2
	subl	$1, %r14d	#, i
.L2183:
	.loc 1 4239 0 is_stmt 0 discriminator 1
	testl	%r14d, %r14d	# i
	jne	.L2184	#,
	.loc 1 4244 0 is_stmt 1
	cmpl	$0, -80(%rbp)	#, diff
	jns	.L2185	#,
	.loc 1 4245 0
	cmpl	$0, -84(%rbp)	#, newlen
	je	.L2186	#,
	.loc 1 4246 0
	movl	-84(%rbp), %eax	# newlen, tmp470
	cltq
	salq	$3, %rax	#, D.24619
	movq	%rax, %rdi	# D.24619,
	call	Perl_safesysmalloc	#
	movq	%rax, -72(%rbp)	# tmp471, tmparyval
	.loc 1 4247 0
	movl	-84(%rbp), %eax	# newlen, tmp472
	cltq
	leaq	0(,%rax,8), %rdx	#, D.24619
	movq	-72(%rbp), %rax	# tmparyval, tmp473
	movq	%r12, %rsi	# mark,
	movq	%rax, %rdi	# tmp473,
	call	memcpy	#
.L2186:
	.loc 1 4250 0
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1937
	movl	-88(%rbp), %edx	# origmark, tmp474
	movslq	%edx, %rdx	# tmp474, D.24631
	addq	$1, %rdx	#, D.24631
	salq	$3, %rdx	#, D.24631
	leaq	(%rax,%rdx), %r12	#, mark
	.loc 1 4251 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1939
	movzbl	36(%rax), %eax	# PL_op.1939_238->op_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$3, %eax	#, D.24618
	testl	%eax, %eax	# D.24618
	je	.L2187	#,
	.loc 1 4251 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1940
	movzbl	36(%rax), %eax	# PL_op.1940_242->op_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$3, %eax	#, D.24618
	cmpl	$3, %eax	#, D.24618
	sete	%al	#, iftmp.1938
	jmp	.L2188	#
.L2187:
	.loc 1 4251 0 discriminator 2
	call	Perl_dowantarray	#
	cmpl	$1, %eax	#, D.24618
	sete	%al	#, iftmp.1938
.L2188:
	.loc 1 4251 0 discriminator 3
	testb	%al, %al	# iftmp.1938
	je	.L2189	#,
	.loc 1 4252 0 is_stmt 1
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1941
	movq	%rax, %rdx	# PL_stack_max.1941, PL_stack_max.1942
	movq	%r12, %rax	# mark, mark.1943
	subq	%rax, %rdx	# mark.1943, D.24620
	movq	%rdx, %rax	# D.24620, D.24620
	sarq	$3, %rax	#, tmp475
	movq	%rax, %rdx	# tmp475, D.24620
	movslq	%r13d, %rax	# length, D.24620
	cmpq	%rax, %rdx	# D.24620, D.24620
	jge	.L2190	#,
.LBB483:
	.loc 1 4252 0 is_stmt 0 discriminator 1
	movq	%r12, %rdx	# mark, mark.1944
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1945
	subq	%rax, %rdx	# PL_stack_base.1946, D.24620
	movq	%rdx, %rax	# D.24620, D.24620
	sarq	$3, %rax	#, tmp476
	movl	%eax, -76(%rbp)	# D.24620, markoff
	movl	%r13d, %edx	# length,
	movq	%r12, %rsi	# mark,
	movq	-112(%rbp), %rdi	# %sfp,
	call	Perl_stack_grow	#
	movq	%rax, -112(%rbp)	#, %sfp
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1947
	movl	-76(%rbp), %edx	# markoff, tmp477
	movslq	%edx, %rdx	# tmp477, D.24619
	salq	$3, %rdx	#, D.24619
	leaq	(%rax,%rdx), %r12	#, mark
.L2190:
.LBE483:
	.loc 1 4253 0 is_stmt 1
	movslq	%r13d, %rax	# length, D.24619
	leaq	0(,%rax,8), %rdx	#, D.24619
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rax	# _268->xav_array, D.24628
	movslq	-100(%rbp), %rcx	# %sfp, D.24619
	salq	$3, %rcx	#, D.24619
	addq	%rcx, %rax	# D.24619, D.24628
	movq	%rax, %rsi	# D.24628,
	movq	%r12, %rdi	# mark,
	call	memcpy	#
	.loc 1 4254 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movzbl	72(%rax), %eax	# _273->xav_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$1, %eax	#, D.24618
	testl	%eax, %eax	# D.24618
	je	.L2191	#,
	.loc 1 4255 0
	movl	PL_tmps_ix(%rip), %eax	# PL_tmps_ix, PL_tmps_ix.1948
	leal	(%rax,%r13), %edx	#, D.24618
	movl	PL_tmps_max(%rip), %eax	# PL_tmps_max, PL_tmps_max.1949
	cmpl	%eax, %edx	# PL_tmps_max.1949, D.24618
	jl	.L2192	#,
	.loc 1 4255 0 is_stmt 0 discriminator 1
	movl	%r13d, %edi	# length,
	call	Perl_tmps_grow	#
.L2192:
	.loc 1 4256 0 is_stmt 1
	movl	%r13d, %r14d	# length, i
	movq	%r12, %r15	# mark, dst
	jmp	.L2193	#
.L2194:
	.loc 1 4257 0 discriminator 2
	movq	(%r15), %rax	# *dst_9, D.24622
	movq	%rax, %rdi	# D.24622,
	call	Perl_sv_2mortal	#
	.loc 1 4258 0 discriminator 2
	addq	$8, %r15	#, dst
	.loc 1 4256 0 discriminator 2
	subl	$1, %r14d	#, i
.L2193:
	.loc 1 4256 0 is_stmt 0 discriminator 1
	testl	%r14d, %r14d	# i
	jne	.L2194	#,
.L2191:
	.loc 1 4261 0 is_stmt 1
	movslq	%r13d, %rax	# length, D.24619
	salq	$3, %rax	#, D.24619
	subq	$8, %rax	#, D.24631
	addq	%rax, %r12	# D.24631, mark
	jmp	.L2195	#
.L2189:
	.loc 1 4264 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rax	# _289->xav_array, D.24628
	movl	-100(%rbp), %edi	# %sfp, offset
	leal	(%rdi,%r13), %edx	#, D.24618
	movslq	%edx, %rdx	# D.24618, D.24619
	salq	$3, %rdx	#, D.24619
	subq	$8, %rdx	#, D.24631
	addq	%rdx, %rax	# D.24631, D.24630
	movq	(%rax), %rax	# *_295, D.24622
	movq	%rax, (%r12)	# D.24622, *mark_237
	.loc 1 4265 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movzbl	72(%rax), %eax	# _297->xav_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$1, %eax	#, D.24618
	testl	%eax, %eax	# D.24618
	je	.L2195	#,
	.loc 1 4266 0
	movq	(%r12), %rax	# *mark_237, D.24622
	movq	%rax, %rdi	# D.24622,
	call	Perl_sv_2mortal	#
	.loc 1 4267 0
	leal	-1(%r13), %r14d	#, i
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rax	# _303->xav_array, D.24628
	movslq	-100(%rbp), %rdx	# %sfp, D.24619
	salq	$3, %rdx	#, D.24619
	leaq	(%rax,%rdx), %r15	#, dst
	jmp	.L2196	#
.L2197:
	.loc 1 4268 0 discriminator 2
	movq	%r15, %rax	# dst, dst.1950
	leaq	8(%rax), %r15	#, dst
	movq	(%rax), %rax	# *dst.1950_308, D.24622
	movq	%rax, %rdi	# D.24622,
	call	Perl_sv_free	#
	.loc 1 4267 0 discriminator 2
	subl	$1, %r14d	#, i
.L2196:
	.loc 1 4267 0 is_stmt 0 discriminator 1
	testl	%r14d, %r14d	# i
	jg	.L2197	#,
.L2195:
	.loc 1 4271 0 is_stmt 1
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rbx), %rdx	# ary_59->sv_any, D.24626
	movq	8(%rdx), %rcx	# _313->xav_fill, D.24620
	movl	-80(%rbp), %edx	# diff, tmp478
	movslq	%edx, %rdx	# tmp478, D.24620
	addq	%rcx, %rdx	# D.24620, D.24620
	movq	%rdx, 8(%rax)	# D.24620, _312->xav_fill
	.loc 1 4275 0
	movl	-100(%rbp), %eax	# %sfp, offset
	cmpl	-92(%rbp), %eax	# after, offset
	jge	.L2198	#,
	.loc 1 4276 0
	cmpl	$0, -100(%rbp)	#, %sfp
	je	.L2199	#,
	.loc 1 4277 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rax	# _317->xav_array, D.24628
	movl	-100(%rbp), %r14d	# %sfp, offset
	movslq	%r14d, %rdx	# offset, D.24619
	salq	$3, %rdx	#, D.24619
	subq	$8, %rdx	#, D.24631
	addq	%rdx, %rax	# D.24631, src
	movq	%rax, %rsi	# src, src
	.loc 1 4278 0
	movl	-80(%rbp), %eax	# diff, tmp479
	cltq
	salq	$3, %rax	#, D.24619
	negq	%rax	# D.24631
	leaq	(%rsi,%rax), %r15	#, dst
	.loc 1 4279 0
	jmp	.L2200	#
.L2201:
	.loc 1 4280 0 discriminator 2
	movq	%r15, %rax	# dst, dst.1951
	leaq	-8(%rax), %r15	#, dst
	movq	%rsi, %rdx	# src, src.1952
	leaq	-8(%rdx), %rsi	#, src
	movq	(%rdx), %rdx	# *src.1952_330, D.24622
	movq	%rdx, (%rax)	# D.24622, *dst.1951_328
	.loc 1 4279 0 discriminator 2
	subl	$1, %r14d	#, i
.L2200:
	.loc 1 4279 0 is_stmt 0 discriminator 1
	testl	%r14d, %r14d	# i
	jg	.L2201	#,
.L2199:
	.loc 1 4282 0 is_stmt 1
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %r15	# _334->xav_array, dst
	.loc 1 4283 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rbx), %rdx	# ary_59->sv_any, D.24626
	movq	(%rdx), %rdx	# _337->xav_array, D.24628
	movl	-80(%rbp), %ecx	# diff, tmp480
	movslq	%ecx, %rcx	# tmp480, D.24619
	salq	$3, %rcx	#, D.24619
	negq	%rcx	# D.24631
	addq	%rcx, %rdx	# D.24631, D.24628
	movq	%rdx, (%rax)	# D.24628, MEM[(struct XPV *)_336].xpv_pv
	.loc 1 4284 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rbx), %rdx	# ary_59->sv_any, D.24626
	movq	16(%rdx), %rcx	# _344->xav_max, D.24620
	movl	-80(%rbp), %edx	# diff, tmp481
	movslq	%edx, %rdx	# tmp481, D.24620
	addq	%rcx, %rdx	# D.24620, D.24620
	movq	%rdx, 16(%rax)	# D.24620, _343->xav_max
	jmp	.L2202	#
.L2198:
	.loc 1 4287 0
	cmpl	$0, -92(%rbp)	#, after
	je	.L2203	#,
	.loc 1 4288 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rax	# _348->xav_array, D.24628
	movslq	-100(%rbp), %rcx	# %sfp, D.24631
	movslq	%r13d, %rdx	# length, D.24631
	addq	%rcx, %rdx	# D.24631, D.24631
	salq	$3, %rdx	#, D.24631
	addq	%rdx, %rax	# D.24631, src
	movq	%rax, %rsi	# src, src
	.loc 1 4289 0
	movl	-80(%rbp), %eax	# diff, tmp482
	cltq
	salq	$3, %rax	#, D.24619
	leaq	(%rsi,%rax), %r15	#, dst
	.loc 1 4290 0
	movl	-92(%rbp), %eax	# after, tmp483
	cltq
	salq	$3, %rax	#, D.24619
	movq	%rax, %rdx	# D.24619,
	movq	%r15, %rdi	# dst,
	call	memmove	#
.L2203:
	.loc 1 4292 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rdx	# _360->xav_array, D.24628
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	8(%rax), %rax	# _362->xav_fill, D.24620
	addq	$1, %rax	#, D.24631
	salq	$3, %rax	#, D.24631
	leaq	(%rdx,%rax), %r15	#, dst
.L2202:
	.loc 1 4295 0
	movl	-80(%rbp), %eax	# diff, tmp484
	negl	%eax	# i
	movl	%eax, %r14d	# i, i
	.loc 1 4296 0
	jmp	.L2204	#
.L2205:
	.loc 1 4297 0
	subl	$1, %r14d	#, i
	movslq	%r14d, %rax	# i, D.24619
	salq	$3, %rax	#, D.24619
	addq	%r15, %rax	# dst, D.24630
	movq	$PL_sv_undef, (%rax)	#, *_372
.L2204:
	.loc 1 4296 0 discriminator 1
	testl	%r14d, %r14d	# i
	jne	.L2205	#,
	.loc 1 4299 0
	cmpl	$0, -84(%rbp)	#, newlen
	je	.L2207	#,
	.loc 1 4300 0
	movl	-84(%rbp), %eax	# newlen, tmp485
	cltq
	leaq	0(,%rax,8), %rdx	#, D.24619
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rax	# _375->xav_array, D.24628
	movslq	-100(%rbp), %rcx	# %sfp, D.24619
	salq	$3, %rcx	#, D.24619
	addq	%rax, %rcx	# D.24628, D.24628
	movq	-72(%rbp), %rax	# tmparyval, tmp486
	movq	%rax, %rsi	# tmp486,
	movq	%rcx, %rdi	# D.24628,
	call	memcpy	#
	.loc 1 4301 0
	movq	-72(%rbp), %rax	# tmparyval, tmp487
	movq	%rax, %rdi	# tmp487,
	call	Perl_safesysfree	#
	jmp	.L2207	#
.L2185:
	.loc 1 4305 0
	testl	%r13d, %r13d	# length
	je	.L2208	#,
	.loc 1 4306 0
	movslq	%r13d, %rax	# length, D.24619
	salq	$3, %rax	#, D.24619
	movq	%rax, %rdi	# D.24619,
	call	Perl_safesysmalloc	#
	movq	%rax, -72(%rbp)	# tmp488, tmparyval
	.loc 1 4307 0
	movslq	%r13d, %rax	# length, D.24619
	leaq	0(,%rax,8), %rdx	#, D.24619
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rax	# _385->xav_array, D.24628
	movslq	-100(%rbp), %rcx	# %sfp, D.24619
	salq	$3, %rcx	#, D.24619
	addq	%rax, %rcx	# D.24628, D.24628
	movq	-72(%rbp), %rax	# tmparyval, tmp489
	movq	%rcx, %rsi	# D.24628,
	movq	%rax, %rdi	# tmp489,
	call	memcpy	#
.L2208:
	.loc 1 4310 0
	cmpl	$0, -80(%rbp)	#, diff
	jle	.L2209	#,
	.loc 1 4314 0
	movl	-100(%rbp), %eax	# %sfp, offset
	cmpl	-92(%rbp), %eax	# after, offset
	jge	.L2210	#,
	.loc 1 4314 0 is_stmt 0 discriminator 1
	movl	-80(%rbp), %eax	# diff, tmp490
	movslq	%eax, %rdx	# tmp490, D.24620
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rax	# _391->xav_array, D.24628
	movq	%rax, %rcx	# D.24628, D.24620
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	56(%rax), %rax	# _394->xav_alloc, D.24630
	subq	%rax, %rcx	# D.24620, D.24620
	movq	%rcx, %rax	# D.24620, D.24620
	sarq	$3, %rax	#, tmp491
	cmpq	%rax, %rdx	# D.24620, D.24620
	jg	.L2210	#,
	.loc 1 4315 0 is_stmt 1
	cmpl	$0, -100(%rbp)	#, %sfp
	je	.L2211	#,
	.loc 1 4316 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rax	# _399->xav_array, src
	movq	%rax, %rsi	# src, src
	.loc 1 4317 0
	movl	-80(%rbp), %eax	# diff, tmp492
	cltq
	salq	$3, %rax	#, D.24619
	negq	%rax	# D.24631
	leaq	(%rsi,%rax), %r15	#, dst
	.loc 1 4318 0
	movslq	-100(%rbp), %rax	# %sfp, D.24619
	salq	$3, %rax	#, D.24619
	movq	%rax, %rdx	# D.24619,
	movq	%r15, %rdi	# dst,
	call	memmove	#
.L2211:
	.loc 1 4320 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rbx), %rdx	# ary_59->sv_any, D.24626
	movq	(%rdx), %rdx	# _408->xav_array, D.24628
	movl	-80(%rbp), %ecx	# diff, tmp493
	movslq	%ecx, %rcx	# tmp493, D.24619
	salq	$3, %rcx	#, D.24619
	negq	%rcx	# D.24631
	addq	%rcx, %rdx	# D.24631, D.24628
	movq	%rdx, (%rax)	# D.24628, MEM[(struct XPV *)_407].xpv_pv
	.loc 1 4321 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rbx), %rdx	# ary_59->sv_any, D.24626
	movq	16(%rdx), %rcx	# _415->xav_max, D.24620
	movl	-80(%rbp), %edx	# diff, tmp494
	movslq	%edx, %rdx	# tmp494, D.24620
	addq	%rcx, %rdx	# D.24620, D.24620
	movq	%rdx, 16(%rax)	# D.24620, _414->xav_max
	.loc 1 4322 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rbx), %rdx	# ary_59->sv_any, D.24626
	movq	8(%rdx), %rcx	# _420->xav_fill, D.24620
	movl	-80(%rbp), %edx	# diff, tmp495
	movslq	%edx, %rdx	# tmp495, D.24620
	addq	%rcx, %rdx	# D.24620, D.24620
	movq	%rdx, 8(%rax)	# D.24620, _419->xav_fill
	jmp	.L2209	#
.L2210:
	.loc 1 4325 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	8(%rax), %rdx	# _424->xav_fill, D.24620
	movl	-80(%rbp), %eax	# diff, tmp496
	cltq
	addq	%rax, %rdx	# D.24620, D.24620
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	16(%rax), %rax	# _428->xav_max, D.24620
	cmpq	%rax, %rdx	# D.24620, D.24620
	jl	.L2212	#,
	.loc 1 4326 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	8(%rax), %rax	# _430->xav_fill, D.24620
	movl	%eax, %edx	# D.24620, D.24627
	movl	-80(%rbp), %eax	# diff, diff.1953
	addl	%edx, %eax	# D.24627, D.24627
	movl	%eax, %esi	# D.24618,
	movq	%rbx, %rdi	# ary,
	call	Perl_av_extend	#
.L2212:
	.loc 1 4327 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rbx), %rdx	# ary_59->sv_any, D.24626
	movq	8(%rdx), %rcx	# _437->xav_fill, D.24620
	movl	-80(%rbp), %edx	# diff, tmp497
	movslq	%edx, %rdx	# tmp497, D.24620
	addq	%rcx, %rdx	# D.24620, D.24620
	movq	%rdx, 8(%rax)	# D.24620, _436->xav_fill
	.loc 1 4329 0
	cmpl	$0, -92(%rbp)	#, after
	je	.L2209	#,
	.loc 1 4330 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rdx	# _441->xav_array, D.24628
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	8(%rax), %rax	# _443->xav_fill, D.24620
	salq	$3, %rax	#, D.24619
	leaq	(%rdx,%rax), %r15	#, dst
	.loc 1 4331 0
	movl	-80(%rbp), %eax	# diff, tmp498
	cltq
	salq	$3, %rax	#, D.24619
	negq	%rax	# D.24631
	addq	%r15, %rax	# dst, src
	movq	%rax, %rsi	# src, src
	.loc 1 4332 0
	movl	-92(%rbp), %r14d	# after, i
	jmp	.L2213	#
.L2214:
	.loc 1 4333 0 discriminator 2
	movq	%r15, %rax	# dst, dst.1954
	leaq	-8(%rax), %r15	#, dst
	movq	%rsi, %rdx	# src, src.1955
	leaq	-8(%rdx), %rdi	#, src
	movq	%rdi, %rsi	# src, src
	movq	(%rdx), %rdx	# *src.1955_455, D.24622
	movq	%rdx, (%rax)	# D.24622, *dst.1954_453
	.loc 1 4332 0 discriminator 2
	subl	$1, %r14d	#, i
.L2213:
	.loc 1 4332 0 is_stmt 0 discriminator 1
	testl	%r14d, %r14d	# i
	jne	.L2214	#,
.L2209:
	.loc 1 4339 0 is_stmt 1
	cmpl	$0, -84(%rbp)	#, newlen
	je	.L2215	#,
	.loc 1 4340 0
	movl	-84(%rbp), %eax	# newlen, tmp499
	cltq
	leaq	0(,%rax,8), %rdx	#, D.24619
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movq	(%rax), %rax	# _461->xav_array, D.24628
	movslq	-100(%rbp), %rcx	# %sfp, D.24619
	salq	$3, %rcx	#, D.24619
	addq	%rcx, %rax	# D.24619, D.24628
	movq	%r12, %rsi	# mark,
	movq	%rax, %rdi	# D.24628,
	call	memcpy	#
.L2215:
	.loc 1 4343 0
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1956
	movl	-88(%rbp), %edx	# origmark, tmp500
	movslq	%edx, %rdx	# tmp500, D.24631
	addq	$1, %rdx	#, D.24631
	salq	$3, %rdx	#, D.24631
	leaq	(%rax,%rdx), %r12	#, mark
	.loc 1 4344 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1958
	movzbl	36(%rax), %eax	# PL_op.1958_471->op_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$3, %eax	#, D.24618
	testl	%eax, %eax	# D.24618
	je	.L2216	#,
	.loc 1 4344 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1959
	movzbl	36(%rax), %eax	# PL_op.1959_475->op_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$3, %eax	#, D.24618
	cmpl	$3, %eax	#, D.24618
	sete	%al	#, iftmp.1957
	jmp	.L2217	#
.L2216:
	.loc 1 4344 0 discriminator 2
	call	Perl_dowantarray	#
	cmpl	$1, %eax	#, D.24618
	sete	%al	#, iftmp.1957
.L2217:
	.loc 1 4344 0 discriminator 3
	testb	%al, %al	# iftmp.1957
	je	.L2218	#,
	.loc 1 4345 0 is_stmt 1
	testl	%r13d, %r13d	# length
	je	.L2219	#,
	.loc 1 4346 0
	movslq	%r13d, %rax	# length, D.24619
	leaq	0(,%rax,8), %rdx	#, D.24619
	movq	-72(%rbp), %rax	# tmparyval, tmp501
	movq	%rax, %rsi	# tmp501,
	movq	%r12, %rdi	# mark,
	call	memcpy	#
	.loc 1 4347 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movzbl	72(%rax), %eax	# _484->xav_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$1, %eax	#, D.24618
	testl	%eax, %eax	# D.24618
	je	.L2220	#,
	.loc 1 4348 0
	movl	PL_tmps_ix(%rip), %eax	# PL_tmps_ix, PL_tmps_ix.1960
	leal	(%rax,%r13), %edx	#, D.24618
	movl	PL_tmps_max(%rip), %eax	# PL_tmps_max, PL_tmps_max.1961
	cmpl	%eax, %edx	# PL_tmps_max.1961, D.24618
	jl	.L2221	#,
	.loc 1 4348 0 is_stmt 0 discriminator 1
	movl	%r13d, %edi	# length,
	call	Perl_tmps_grow	#
.L2221:
	.loc 1 4349 0 is_stmt 1
	movl	%r13d, %r14d	# length, i
	movq	%r12, %r15	# mark, dst
	jmp	.L2222	#
.L2223:
	.loc 1 4350 0 discriminator 2
	movq	(%r15), %rax	# *dst_14, D.24622
	movq	%rax, %rdi	# D.24622,
	call	Perl_sv_2mortal	#
	.loc 1 4351 0 discriminator 2
	addq	$8, %r15	#, dst
	.loc 1 4349 0 discriminator 2
	subl	$1, %r14d	#, i
.L2222:
	.loc 1 4349 0 is_stmt 0 discriminator 1
	testl	%r14d, %r14d	# i
	jne	.L2223	#,
.L2220:
	.loc 1 4354 0 is_stmt 1
	movq	-72(%rbp), %rax	# tmparyval, tmp502
	movq	%rax, %rdi	# tmp502,
	call	Perl_safesysfree	#
.L2219:
	.loc 1 4356 0
	movslq	%r13d, %rax	# length, D.24619
	salq	$3, %rax	#, D.24619
	subq	$8, %rax	#, D.24631
	addq	%rax, %r12	# D.24631, mark
	jmp	.L2207	#
.L2218:
	.loc 1 4358 0
	movl	%r13d, %eax	# length, length.1962
	leal	-1(%rax), %r13d	#, length
	testl	%eax, %eax	# length.1962
	je	.L2224	#,
	.loc 1 4359 0
	movslq	%r13d, %rax	# length, D.24619
	leaq	0(,%rax,8), %rdx	#, D.24619
	movq	-72(%rbp), %rax	# tmparyval, tmp503
	addq	%rdx, %rax	# D.24619, D.24630
	movq	(%rax), %rax	# *_504, D.24622
	movq	%rax, (%r12)	# D.24622, *mark_470
	.loc 1 4360 0
	movq	(%rbx), %rax	# ary_59->sv_any, D.24626
	movzbl	72(%rax), %eax	# _506->xav_flags, D.24624
	movzbl	%al, %eax	# D.24624, D.24618
	andl	$1, %eax	#, D.24618
	testl	%eax, %eax	# D.24618
	je	.L2225	#,
	.loc 1 4361 0
	movq	(%r12), %rax	# *mark_470, D.24622
	movq	%rax, %rdi	# D.24622,
	call	Perl_sv_2mortal	#
	.loc 1 4362 0
	jmp	.L2226	#
.L2227:
	.loc 1 4363 0
	movslq	%r13d, %rax	# length, D.24619
	leaq	0(,%rax,8), %rdx	#, D.24619
	movq	-72(%rbp), %rax	# tmparyval, tmp504
	addq	%rdx, %rax	# D.24619, D.24630
	movq	(%rax), %rax	# *_515, D.24622
	movq	%rax, %rdi	# D.24622,
	call	Perl_sv_free	#
.L2226:
	.loc 1 4362 0 discriminator 1
	movl	%r13d, %eax	# length, length.1963
	leal	-1(%rax), %r13d	#, length
	testl	%eax, %eax	# length.1963
	jg	.L2227	#,
.L2225:
	.loc 1 4365 0
	movq	-72(%rbp), %rax	# tmparyval, tmp505
	movq	%rax, %rdi	# tmp505,
	call	Perl_safesysfree	#
	jmp	.L2207	#
.L2224:
	.loc 1 4368 0
	movq	$PL_sv_undef, (%r12)	#, *mark_470
.L2207:
	.loc 1 4370 0
	movq	%r12, %rax	# mark, sp
	.loc 1 4371 0
	movq	%rax, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1964
	movq	(%rax), %rax	# PL_op.1964_518->op_next, D.24617
.L2164:
	.loc 1 4372 0
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%r15	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE110:
	.size	Perl_pp_splice, .-Perl_pp_splice
	.section	.rodata
.LC51:
	.string	"PUSH"
	.text
	.globl	Perl_pp_push
	.type	Perl_pp_push, @function
Perl_pp_push:
.LFB111:
	.loc 1 4375 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$32, %rsp	#,
	.cfi_offset 14, -24
	.cfi_offset 13, -32
	.cfi_offset 12, -40
	.cfi_offset 3, -48
	.loc 1 4376 0
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1965
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1966
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1968
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1968, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1967_8, D.24634
	cltq
	salq	$3, %rax	#, D.24635
	leaq	(%rcx,%rax), %rbx	#, mark
	movq	%rbx, %rdx	# mark, mark.1969
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1970
	subq	%rax, %rdx	# PL_stack_base.1971, D.24636
	movq	%rdx, %rax	# D.24636, D.24636
	sarq	$3, %rax	#, tmp117
	movl	%eax, -52(%rbp)	# D.24636, origmark
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.1972
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1973
	movq	24(%rax), %rax	# PL_op.1973_21->op_targ, D.24635
	salq	$3, %rax	#, D.24635
	addq	%rdx, %rax	# PL_curpad.1972, D.24637
	movq	(%rax), %rax	# *_24, tmp118
	movq	%rax, -48(%rbp)	# tmp118, targ
	.loc 1 4377 0
	addq	$8, %rbx	#, mark
	movq	(%rbx), %r13	# *mark_26, ary
	.loc 1 4378 0
	movl	$PL_sv_undef, %r14d	#, sv
	.loc 1 4381 0
	movl	12(%r13), %eax	# MEM[(struct SV *)ary_27].sv_flags, D.24638
	andl	$32768, %eax	#, D.24638
	testl	%eax, %eax	# D.24638
	je	.L2229	#,
	.loc 1 4381 0 is_stmt 0 discriminator 1
	movl	$80, %esi	#,
	movq	%r13, %rdi	# ary,
	call	Perl_mg_find	#
	jmp	.L2230	#
.L2229:
	.loc 1 4381 0 discriminator 2
	movl	$0, %eax	#, iftmp.1974
.L2230:
	.loc 1 4381 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.1974, mg
	cmpq	$0, -40(%rbp)	#, mg
	je	.L2231	#,
	.loc 1 4382 0 is_stmt 1
	movq	%rbx, %r14	# mark, mark.1975
	leaq	-8(%r14), %rbx	#, mark
	movq	-40(%rbp), %rax	# mg, tmp119
	movq	24(%rax), %rax	# mg_33->mg_obj, D.24639
	testq	%rax, %rax	# D.24639
	je	.L2232	#,
	.loc 1 4382 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# mg, tmp120
	movq	24(%rax), %rax	# mg_33->mg_obj, iftmp.1976
	jmp	.L2233	#
.L2232:
	.loc 1 4382 0 discriminator 2
	movq	%r13, %rdi	# ary,
	call	Perl_newRV	#
	movq	%rax, %rdi	# D.24639,
	call	Perl_sv_2mortal	#
.L2233:
	.loc 1 4382 0 discriminator 3
	movq	%rax, (%r14)	# iftmp.1976, *mark.1975_34
.LBB484:
	.loc 1 4383 0 is_stmt 1 discriminator 3
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1977
	addq	$4, %rax	#, PL_markstack_ptr.1978
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1978, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.1979
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.1980
	cmpq	%rax, %rdx	# PL_markstack_max.1980, PL_markstack_ptr.1979
	jne	.L2234	#,
	.loc 1 4383 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L2234:
	.loc 1 4383 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1981
	movq	%rbx, %rcx	# mark, mark.1982
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.1983
	subq	%rdx, %rcx	# PL_stack_base.1984, D.24636
	movq	%rcx, %rdx	# D.24636, D.24636
	sarq	$3, %rdx	#, tmp121
	movl	%edx, (%rax)	# D.24634, *PL_markstack_ptr.1981_44
.LBE484:
	.loc 1 4384 0 is_stmt 1 discriminator 2
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4385 0 discriminator 2
	call	Perl_push_scope	#
	.loc 1 4386 0 discriminator 2
	movl	$2, %esi	#,
	movl	$.LC51, %edi	#,
	call	Perl_call_method	#
	.loc 1 4387 0 discriminator 2
	call	Perl_pop_scope	#
	.loc 1 4388 0 discriminator 2
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	jmp	.L2235	#
.L2231:
	.loc 1 4392 0
	addq	$8, %rbx	#, mark
	jmp	.L2236	#
.L2238:
	.loc 1 4393 0
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, %r14	#, sv
	.loc 1 4394 0
	movq	(%rbx), %rax	# *mark_1, D.24639
	testq	%rax, %rax	# D.24639
	je	.L2237	#,
	.loc 1 4395 0
	movq	(%rbx), %rax	# *mark_1, D.24639
	movl	$2, %edx	#,
	movq	%rax, %rsi	# D.24639,
	movq	%r14, %rdi	# sv,
	call	Perl_sv_setsv_flags	#
.L2237:
	.loc 1 4396 0
	movq	%r14, %rsi	# sv,
	movq	%r13, %rdi	# ary,
	call	Perl_av_push	#
	.loc 1 4392 0
	addq	$8, %rbx	#, mark
.L2236:
	.loc 1 4392 0 is_stmt 0 discriminator 1
	cmpq	%r12, %rbx	# sp, mark
	jbe	.L2238	#,
.L2235:
	.loc 1 4399 0 is_stmt 1
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1985
	movl	-52(%rbp), %edx	# origmark, tmp122
	movslq	%edx, %rdx	# tmp122, D.24635
	salq	$3, %rdx	#, D.24635
	leaq	(%rax,%rdx), %r12	#, sp
.LBB485:
	.loc 1 4400 0
	movl	12(%r13), %eax	# MEM[(struct SV *)ary_27].sv_flags, D.24638
	andl	$32768, %eax	#, D.24638
	testl	%eax, %eax	# D.24638
	je	.L2239	#,
	.loc 1 4400 0 is_stmt 0 discriminator 1
	movq	%r13, %rdi	# ary,
	call	Perl_mg_size	#
	cltq
	addq	$1, %rax	#, iftmp.1986
	jmp	.L2240	#
.L2239:
	.loc 1 4400 0 discriminator 2
	movq	0(%r13), %rax	# ary_27->sv_any, D.24641
	movq	8(%rax), %rax	# _67->xav_fill, D.24636
	addq	$1, %rax	#, iftmp.1986
.L2240:
	.loc 1 4400 0 discriminator 3
	movq	-48(%rbp), %rdx	# targ, tmp123
	movq	%rax, %rsi	# iftmp.1986,
	movq	%rdx, %rdi	# tmp123,
	call	Perl_sv_setiv	#
.LBB486:
	movq	-48(%rbp), %rax	# targ, tmp124
	movl	12(%rax), %eax	# targ_25->sv_flags, D.24638
	andl	$16384, %eax	#, D.24638
	testl	%eax, %eax	# D.24638
	je	.L2241	#,
	.loc 1 4400 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp125
	movq	%rax, %rdi	# tmp125,
	call	Perl_mg_set	#
.L2241:
	.loc 1 4400 0 discriminator 2
	addq	$8, %r12	#, sp
	movq	-48(%rbp), %rax	# targ, tmp126
	movq	%rax, (%r12)	# tmp126, *sp_72
.LBE486:
.LBE485:
	.loc 1 4401 0 is_stmt 1 discriminator 2
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1987
	movq	(%rax), %rax	# PL_op.1987_74->op_next, D.24642
	.loc 1 4402 0 discriminator 2
	addq	$32, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE111:
	.size	Perl_pp_push, .-Perl_pp_push
	.globl	Perl_pp_pop
	.type	Perl_pp_pop, @function
Perl_pp_pop:
.LFB112:
	.loc 1 4405 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 4406 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4407 0
	movq	%rbx, %rax	# sp, sp.1988
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1988_2, tmp68
	movq	%rax, -32(%rbp)	# tmp68, av
	.loc 1 4408 0
	movq	-32(%rbp), %rax	# av, tmp69
	movq	%rax, %rdi	# tmp69,
	call	Perl_av_pop	#
	movq	%rax, -24(%rbp)	# tmp70, sv
	.loc 1 4409 0
	movq	-32(%rbp), %rax	# av, tmp71
	movq	(%rax), %rax	# av_4->sv_any, D.24644
	movzbl	72(%rax), %eax	# _6->xav_flags, D.24645
	movzbl	%al, %eax	# D.24645, D.24646
	andl	$1, %eax	#, D.24646
	testl	%eax, %eax	# D.24646
	je	.L2244	#,
	.loc 1 4410 0
	movq	-24(%rbp), %rax	# sv, tmp72
	movq	%rax, %rdi	# tmp72,
	call	Perl_sv_2mortal	#
.L2244:
	.loc 1 4411 0
	addq	$8, %rbx	#, sp
	movq	-24(%rbp), %rax	# sv, tmp73
	movq	%rax, (%rbx)	# tmp73, *sp_10
	.loc 1 4412 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1989
	movq	(%rax), %rax	# PL_op.1989_11->op_next, D.24647
	.loc 1 4413 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE112:
	.size	Perl_pp_pop, .-Perl_pp_pop
	.globl	Perl_pp_shift
	.type	Perl_pp_shift, @function
Perl_pp_shift:
.LFB113:
	.loc 1 4416 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 4417 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4418 0
	movq	%rbx, %rax	# sp, sp.1990
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.1990_4, tmp73
	movq	%rax, -32(%rbp)	# tmp73, av
	.loc 1 4419 0
	movq	-32(%rbp), %rax	# av, tmp74
	movq	%rax, %rdi	# tmp74,
	call	Perl_av_shift	#
	movq	%rax, -24(%rbp)	# tmp75, sv
	.loc 1 4420 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1991
	movq	%rax, %rdx	# PL_stack_max.1991, PL_stack_max.1992
	movq	%rbx, %rax	# sp, sp.1993
	subq	%rax, %rdx	# sp.1993, D.24649
	movq	%rdx, %rax	# D.24649, D.24649
	cmpq	$7, %rax	#, D.24649
	jg	.L2247	#,
	.loc 1 4420 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2247:
	.loc 1 4421 0 is_stmt 1
	cmpq	$0, -24(%rbp)	#, sv
	jne	.L2248	#,
	.loc 1 4422 0
	addq	$8, %rbx	#, sp
	movq	$PL_sv_undef, (%rbx)	#, *sp_13
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1994
	movq	(%rax), %rax	# PL_op.1994_14->op_next, D.24648
	jmp	.L2249	#
.L2248:
	.loc 1 4423 0
	movq	-32(%rbp), %rax	# av, tmp76
	movq	(%rax), %rax	# av_6->sv_any, D.24650
	movzbl	72(%rax), %eax	# _16->xav_flags, D.24651
	movzbl	%al, %eax	# D.24651, D.24652
	andl	$1, %eax	#, D.24652
	testl	%eax, %eax	# D.24652
	je	.L2250	#,
	.loc 1 4424 0
	movq	-24(%rbp), %rax	# sv, tmp77
	movq	%rax, %rdi	# tmp77,
	call	Perl_sv_2mortal	#
.L2250:
	.loc 1 4425 0
	addq	$8, %rbx	#, sp
	movq	-24(%rbp), %rax	# sv, tmp78
	movq	%rax, (%rbx)	# tmp78, *sp_20
	.loc 1 4426 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1995
	movq	(%rax), %rax	# PL_op.1995_21->op_next, D.24648
.L2249:
	.loc 1 4427 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE113:
	.size	Perl_pp_shift, .-Perl_pp_shift
	.section	.rodata
.LC52:
	.string	"UNSHIFT"
	.text
	.globl	Perl_pp_unshift
	.type	Perl_pp_unshift, @function
Perl_pp_unshift:
.LFB114:
	.loc 1 4430 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r15	#
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	.loc 1 4431 0
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1996
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1997
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1999
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1999, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1998_9, D.24653
	cltq
	salq	$3, %rax	#, D.24654
	leaq	(%rcx,%rax), %rbx	#, mark
	movq	%rbx, %rdx	# mark, mark.2000
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.2001
	subq	%rax, %rdx	# PL_stack_base.2002, D.24655
	movq	%rdx, %rax	# D.24655, D.24655
	sarq	$3, %rax	#, tmp123
	movl	%eax, -68(%rbp)	# D.24655, origmark
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.2003
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2004
	movq	24(%rax), %rax	# PL_op.2004_22->op_targ, D.24654
	salq	$3, %rax	#, D.24654
	addq	%rdx, %rax	# PL_curpad.2003, D.24656
	movq	(%rax), %rax	# *_25, tmp124
	movq	%rax, -64(%rbp)	# tmp124, targ
	.loc 1 4432 0
	addq	$8, %rbx	#, mark
	movq	(%rbx), %r13	# *mark_27, ary
	.loc 1 4434 0
	movl	$0, %r14d	#, i
	.loc 1 4437 0
	movl	12(%r13), %eax	# MEM[(struct SV *)ary_28].sv_flags, D.24657
	andl	$32768, %eax	#, D.24657
	testl	%eax, %eax	# D.24657
	je	.L2252	#,
	.loc 1 4437 0 is_stmt 0 discriminator 1
	movl	$80, %esi	#,
	movq	%r13, %rdi	# ary,
	call	Perl_mg_find	#
	jmp	.L2253	#
.L2252:
	.loc 1 4437 0 discriminator 2
	movl	$0, %eax	#, iftmp.2005
.L2253:
	.loc 1 4437 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.2005, mg
	cmpq	$0, -56(%rbp)	#, mg
	je	.L2254	#,
	.loc 1 4438 0 is_stmt 1
	movq	%rbx, %r14	# mark, mark.2006
	leaq	-8(%r14), %rbx	#, mark
	movq	-56(%rbp), %rax	# mg, tmp125
	movq	24(%rax), %rax	# mg_34->mg_obj, D.24658
	testq	%rax, %rax	# D.24658
	je	.L2255	#,
	.loc 1 4438 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# mg, tmp126
	movq	24(%rax), %rax	# mg_34->mg_obj, iftmp.2007
	jmp	.L2256	#
.L2255:
	.loc 1 4438 0 discriminator 2
	movq	%r13, %rdi	# ary,
	call	Perl_newRV	#
	movq	%rax, %rdi	# D.24658,
	call	Perl_sv_2mortal	#
.L2256:
	.loc 1 4438 0 discriminator 3
	movq	%rax, (%r14)	# iftmp.2007, *mark.2006_35
.LBB487:
	.loc 1 4439 0 is_stmt 1 discriminator 3
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.2008
	addq	$4, %rax	#, PL_markstack_ptr.2009
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.2009, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.2010
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.2011
	cmpq	%rax, %rdx	# PL_markstack_max.2011, PL_markstack_ptr.2010
	jne	.L2257	#,
	.loc 1 4439 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L2257:
	.loc 1 4439 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.2012
	movq	%rbx, %rcx	# mark, mark.2013
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.2014
	subq	%rdx, %rcx	# PL_stack_base.2015, D.24655
	movq	%rcx, %rdx	# D.24655, D.24655
	sarq	$3, %rdx	#, tmp127
	movl	%edx, (%rax)	# D.24653, *PL_markstack_ptr.2012_45
.LBE487:
	.loc 1 4440 0 is_stmt 1 discriminator 2
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4441 0 discriminator 2
	call	Perl_push_scope	#
	.loc 1 4442 0 discriminator 2
	movl	$2, %esi	#,
	movl	$.LC52, %edi	#,
	call	Perl_call_method	#
	.loc 1 4443 0 discriminator 2
	call	Perl_pop_scope	#
	.loc 1 4444 0 discriminator 2
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
	jmp	.L2258	#
.L2254:
	.loc 1 4447 0
	movq	%r12, %rdx	# sp, sp.2016
	movq	%rbx, %rax	# mark, mark.2017
	subq	%rax, %rdx	# mark.2017, D.24655
	movq	%rdx, %rax	# D.24655, D.24655
	sarq	$3, %rax	#, tmp128
	movl	%eax, %esi	# D.24653,
	movq	%r13, %rdi	# ary,
	call	Perl_av_unshift	#
	.loc 1 4448 0
	jmp	.L2259	#
.L2260:
	.loc 1 4449 0
	addq	$8, %rbx	#, mark
	movq	(%rbx), %rax	# *mark_59, D.24658
	movq	%rax, %rdi	# D.24658,
	call	Perl_newSVsv	#
	movq	%rax, %r15	#, sv
	.loc 1 4450 0
	movl	%r14d, %eax	# i, i.2018
	leal	1(%rax), %r14d	#, i
	movq	%r15, %rdx	# sv,
	movl	%eax, %esi	# i.2018,
	movq	%r13, %rdi	# ary,
	call	Perl_av_store	#
.L2259:
	.loc 1 4448 0 discriminator 1
	cmpq	%r12, %rbx	# sp, mark
	jb	.L2260	#,
.L2258:
	.loc 1 4453 0
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.2019
	movl	-68(%rbp), %edx	# origmark, tmp129
	movslq	%edx, %rdx	# tmp129, D.24654
	salq	$3, %rdx	#, D.24654
	leaq	(%rax,%rdx), %r12	#, sp
.LBB488:
	.loc 1 4454 0
	movl	12(%r13), %eax	# MEM[(struct SV *)ary_28].sv_flags, D.24657
	andl	$32768, %eax	#, D.24657
	testl	%eax, %eax	# D.24657
	je	.L2261	#,
	.loc 1 4454 0 is_stmt 0 discriminator 1
	movq	%r13, %rdi	# ary,
	call	Perl_mg_size	#
	cltq
	addq	$1, %rax	#, iftmp.2020
	jmp	.L2262	#
.L2261:
	.loc 1 4454 0 discriminator 2
	movq	0(%r13), %rax	# ary_28->sv_any, D.24660
	movq	8(%rax), %rax	# _73->xav_fill, D.24655
	addq	$1, %rax	#, iftmp.2020
.L2262:
	.loc 1 4454 0 discriminator 3
	movq	-64(%rbp), %rdx	# targ, tmp130
	movq	%rax, %rsi	# iftmp.2020,
	movq	%rdx, %rdi	# tmp130,
	call	Perl_sv_setiv	#
.LBB489:
	movq	-64(%rbp), %rax	# targ, tmp131
	movl	12(%rax), %eax	# targ_26->sv_flags, D.24657
	andl	$16384, %eax	#, D.24657
	testl	%eax, %eax	# D.24657
	je	.L2263	#,
	.loc 1 4454 0 discriminator 1
	movq	-64(%rbp), %rax	# targ, tmp132
	movq	%rax, %rdi	# tmp132,
	call	Perl_mg_set	#
.L2263:
	.loc 1 4454 0 discriminator 2
	addq	$8, %r12	#, sp
	movq	-64(%rbp), %rax	# targ, tmp133
	movq	%rax, (%r12)	# tmp133, *sp_78
.LBE489:
.LBE488:
	.loc 1 4455 0 is_stmt 1 discriminator 2
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2021
	movq	(%rax), %rax	# PL_op.2021_80->op_next, D.24661
	.loc 1 4456 0 discriminator 2
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%r15	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE114:
	.size	Perl_pp_unshift, .-Perl_pp_unshift
	.globl	Perl_pp_reverse
	.type	Perl_pp_reverse, @function
Perl_pp_reverse:
.LFB115:
	.loc 1 4459 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$48, %rsp	#,
	.cfi_offset 14, -24
	.cfi_offset 13, -32
	.cfi_offset 12, -40
	.cfi_offset 3, -48
	.loc 1 4460 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.2022
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.2023
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.2025
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.2025, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.2024_16, D.24663
	cltq
	salq	$3, %rax	#, D.24664
	leaq	(%rcx,%rax), %r12	#, mark
	.loc 1 4462 0
	movq	%rbx, -56(%rbp)	# sp, oldsp
	.loc 1 4464 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2027
	movzbl	36(%rax), %eax	# PL_op.2027_23->op_flags, D.24665
	movzbl	%al, %eax	# D.24665, D.24663
	andl	$3, %eax	#, D.24663
	testl	%eax, %eax	# D.24663
	je	.L2266	#,
	.loc 1 4464 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2028
	movzbl	36(%rax), %eax	# PL_op.2028_27->op_flags, D.24665
	movzbl	%al, %eax	# D.24665, D.24663
	andl	$3, %eax	#, D.24663
	cmpl	$3, %eax	#, D.24663
	sete	%al	#, iftmp.2026
	jmp	.L2267	#
.L2266:
	.loc 1 4464 0 discriminator 2
	call	Perl_dowantarray	#
	cmpl	$1, %eax	#, D.24663
	sete	%al	#, iftmp.2026
.L2267:
	.loc 1 4464 0 discriminator 3
	testb	%al, %al	# iftmp.2026
	je	.L2268	#,
	.loc 1 4465 0 is_stmt 1
	addq	$8, %r12	#, mark
	.loc 1 4466 0
	jmp	.L2269	#
.L2270:
	.loc 1 4467 0
	movq	(%r12), %r13	# *mark_3, tmp
	.loc 1 4468 0
	movq	%r12, %rax	# mark, mark.2029
	leaq	8(%rax), %r12	#, mark
	movq	(%rbx), %rdx	# *sp_1, D.24666
	movq	%rdx, (%rax)	# D.24666, *mark.2029_36
	.loc 1 4469 0
	movq	%rbx, %rax	# sp, sp.2030
	leaq	-8(%rax), %rbx	#, sp
	movq	%r13, (%rax)	# tmp, *sp.2030_39
.L2269:
	.loc 1 4466 0 discriminator 1
	cmpq	%rbx, %r12	# sp, mark
	jb	.L2270	#,
	.loc 1 4472 0
	movq	-56(%rbp), %rbx	# oldsp, sp
	jmp	.L2271	#
.L2268:
.LBB490:
	.loc 1 4478 0
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.2031
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2032
	movq	24(%rax), %rax	# PL_op.2032_43->op_targ, D.24664
	salq	$3, %rax	#, D.24664
	addq	%rdx, %rax	# PL_curpad.2031, D.24667
	movq	(%rax), %rax	# *_46, tmp146
	movq	%rax, -48(%rbp)	# tmp146, targ
	.loc 1 4481 0
	movq	-48(%rbp), %rax	# targ, tmp147
	movl	12(%rax), %eax	# targ_47->sv_flags, D.24668
	andl	$-536870913, %eax	#, D.24668
	movl	%eax, %edx	# D.24668, D.24668
	movq	-48(%rbp), %rax	# targ, tmp148
	movl	%edx, 12(%rax)	# D.24668, targ_47->sv_flags
	.loc 1 4482 0
	movq	%rbx, %rdx	# sp, sp.2033
	movq	%r12, %rax	# mark, mark.2034
	subq	%rax, %rdx	# mark.2034, D.24669
	movq	%rdx, %rax	# D.24669, D.24669
	cmpq	$15, %rax	#, D.24669
	jle	.L2272	#,
	.loc 1 4483 0
	movq	-48(%rbp), %rax	# targ, tmp149
	movq	%rbx, %rcx	# sp,
	movq	%r12, %rdx	# mark,
	movl	$PL_sv_no, %esi	#,
	movq	%rax, %rdi	# tmp149,
	call	Perl_do_join	#
	jmp	.L2273	#
.L2272:
	.loc 1 4485 0
	cmpq	%r12, %rbx	# mark, sp
	jbe	.L2274	#,
	.loc 1 4485 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# *sp_13, iftmp.2035
	jmp	.L2275	#
.L2274:
	.loc 1 4485 0 discriminator 2
	movq	PL_defgv(%rip), %rax	# PL_defgv, PL_defgv.2036
	movq	(%rax), %rax	# PL_defgv.2036_54->sv_any, D.24670
	movq	56(%rax), %rax	# _55->xgv_gp, D.24671
	movq	(%rax), %rax	# _56->gp_sv, iftmp.2035
.L2275:
	.loc 1 4485 0 discriminator 3
	movq	-48(%rbp), %rcx	# targ, tmp150
	movl	$2, %edx	#,
	movq	%rax, %rsi	# iftmp.2035,
	movq	%rcx, %rdi	# tmp150,
	call	Perl_sv_setsv_flags	#
.L2273:
	.loc 1 4486 0 is_stmt 1
	movq	-48(%rbp), %rax	# targ, tmp151
	movl	12(%rax), %eax	# targ_47->sv_flags, D.24668
	andl	$10223616, %eax	#, D.24668
	cmpl	$262144, %eax	#, D.24668
	jne	.L2276	#,
	.loc 1 4486 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp152
	movq	(%rax), %rax	# targ_47->sv_any, D.24672
	movq	8(%rax), %rax	# MEM[(struct XPV *)_60].xpv_cur, len.2038
	movq	%rax, -72(%rbp)	# len.2038, len
	movq	-48(%rbp), %rax	# targ, tmp153
	movq	(%rax), %rax	# targ_47->sv_any, D.24672
	movq	(%rax), %rax	# MEM[(struct XPV *)_62].xpv_pv, iftmp.2037
	jmp	.L2277	#
.L2276:
	.loc 1 4486 0 discriminator 2
	leaq	-72(%rbp), %rcx	#, tmp154
	movq	-48(%rbp), %rax	# targ, tmp155
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp154,
	movq	%rax, %rdi	# tmp155,
	call	Perl_sv_pvn_force_flags	#
.L2277:
	.loc 1 4486 0 discriminator 3
	movq	%rax, %rbx	# iftmp.2037, up
	.loc 1 4487 0 is_stmt 1 discriminator 3
	movq	-72(%rbp), %rax	# len, len.2039
	cmpq	$1, %rax	#, len.2039
	jbe	.L2278	#,
	.loc 1 4488 0
	movq	-48(%rbp), %rax	# targ, tmp156
	movl	12(%rax), %eax	# targ_47->sv_flags, D.24668
	andl	$536870912, %eax	#, D.24668
	testl	%eax, %eax	# D.24668
	je	.L2279	#,
	.loc 1 4488 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2040
	movzbl	37(%rax), %eax	# PL_curcop.2040_69->op_private, D.24665
	movzbl	%al, %eax	# D.24665, D.24663
	andl	$8, %eax	#, D.24663
	testl	%eax, %eax	# D.24663
	jne	.L2279	#,
.LBB491:
	.loc 1 4489 0 is_stmt 1
	movq	-48(%rbp), %rax	# targ, tmp157
	movq	(%rax), %rax	# targ_47->sv_any, D.24672
	movq	(%rax), %rax	# MEM[(struct XPV *)_73].xpv_pv, tmp158
	movq	%rax, -64(%rbp)	# tmp158, s
	.loc 1 4490 0
	movq	-72(%rbp), %rdx	# len, len.2041
	movq	-64(%rbp), %rax	# s, tmp162
	addq	%rdx, %rax	# len.2041, tmp161
	movq	%rax, -40(%rbp)	# tmp161, send
	.loc 1 4491 0
	jmp	.L2280	#
.L2286:
	.loc 1 4492 0
	movq	-64(%rbp), %rax	# s, tmp163
	movzbl	(%rax), %eax	# *s_9, D.24665
	testb	%al, %al	# D.24673
	js	.L2281	#,
	.loc 1 4493 0
	addq	$1, -64(%rbp)	#, s
	.loc 1 4494 0
	jmp	.L2280	#
.L2281:
	.loc 1 4497 0
	movq	-64(%rbp), %rax	# s, tmp164
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp164,
	call	Perl_utf8_to_uvchr	#
	testq	%rax, %rax	# D.24664
	jne	.L2282	#,
	.loc 1 4498 0
	jmp	.L2283	#
.L2282:
	.loc 1 4499 0
	movq	-64(%rbp), %rbx	# s, up
	.loc 1 4500 0
	movq	-64(%rbp), %rax	# s, tmp165
	movzbl	(%rax), %eax	# *s_9, D.24665
	movzbl	%al, %eax	# D.24665, D.24663
	cltq
	movzbl	PL_utf8skip(%rax), %eax	# PL_utf8skip, D.24665
	movzbl	%al, %eax	# D.24665, D.24674
	addq	%rax, -64(%rbp)	# D.24674, s
	.loc 1 4501 0
	movq	-64(%rbp), %rax	# s, tmp167
	leaq	-1(%rax), %r13	#, down
	.loc 1 4503 0
	jmp	.L2284	#
.L2285:
	.loc 1 4504 0
	movzbl	(%rbx), %eax	# *up_4, D.24675
	movsbl	%al, %r14d	# D.24675, tmp
	.loc 1 4505 0
	movq	%rbx, %rax	# up, up.2042
	leaq	1(%rax), %rbx	#, up
	movzbl	0(%r13), %edx	# *down_7, D.24675
	movb	%dl, (%rax)	# D.24675, *up.2042_90
	.loc 1 4506 0
	movq	%r13, %rax	# down, down.2043
	leaq	-1(%rax), %r13	#, down
	movl	%r14d, %edx	# tmp, D.24675
	movb	%dl, (%rax)	# D.24675, *down.2043_93
.L2284:
	.loc 1 4503 0 discriminator 1
	cmpq	%rbx, %r13	# up, down
	ja	.L2285	#,
.L2280:
	.loc 1 4491 0 discriminator 1
	movq	-64(%rbp), %rax	# s, tmp168
	cmpq	-40(%rbp), %rax	# send, tmp168
	jb	.L2286	#,
.L2283:
	.loc 1 4510 0
	movq	-48(%rbp), %rax	# targ, tmp169
	movq	(%rax), %rax	# targ_47->sv_any, D.24672
	movq	(%rax), %rbx	# MEM[(struct XPV *)_96].xpv_pv, up
.L2279:
.LBE491:
	.loc 1 4512 0
	movq	-48(%rbp), %rax	# targ, tmp170
	movq	(%rax), %rax	# targ_47->sv_any, D.24672
	movq	(%rax), %rax	# MEM[(struct XPV *)_98].xpv_pv, D.24676
	movq	-72(%rbp), %rdx	# len, len.2044
	subq	$1, %rdx	#, D.24674
	leaq	(%rax,%rdx), %r13	#, down
	.loc 1 4513 0
	jmp	.L2287	#
.L2288:
	.loc 1 4514 0
	movzbl	(%rbx), %eax	# *up_6, D.24675
	movsbl	%al, %r14d	# D.24675, tmp
	.loc 1 4515 0
	movq	%rbx, %rax	# up, up.2045
	leaq	1(%rax), %rbx	#, up
	movzbl	0(%r13), %edx	# *down_8, D.24675
	movb	%dl, (%rax)	# D.24675, *up.2045_105
	.loc 1 4516 0
	movq	%r13, %rax	# down, down.2046
	leaq	-1(%rax), %r13	#, down
	movl	%r14d, %edx	# tmp, D.24675
	movb	%dl, (%rax)	# D.24675, *down.2046_108
.L2287:
	.loc 1 4513 0 discriminator 1
	cmpq	%rbx, %r13	# up, down
	ja	.L2288	#,
	.loc 1 4518 0
	movq	-48(%rbp), %rax	# targ, tmp171
	movl	12(%rax), %eax	# targ_47->sv_flags, D.24668
	andl	$1760624639, %eax	#, D.24668
	movl	%eax, %edx	# D.24668, D.24668
	movq	-48(%rbp), %rax	# targ, tmp172
	movl	%edx, 12(%rax)	# D.24668, targ_47->sv_flags
	movq	-48(%rbp), %rax	# targ, tmp173
	movl	12(%rax), %eax	# targ_47->sv_flags, D.24668
	orl	$67371008, %eax	#, D.24668
	movl	%eax, %edx	# D.24668, D.24668
	movq	-48(%rbp), %rax	# targ, tmp174
	movl	%edx, 12(%rax)	# D.24668, targ_47->sv_flags
.L2278:
	.loc 1 4520 0
	leaq	8(%r12), %rbx	#, sp
.LBB492:
	.loc 1 4521 0
	movq	-48(%rbp), %rax	# targ, tmp175
	movl	12(%rax), %eax	# targ_47->sv_flags, D.24668
	andl	$16384, %eax	#, D.24668
	testl	%eax, %eax	# D.24668
	je	.L2289	#,
	.loc 1 4521 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# targ, tmp176
	movq	%rax, %rdi	# tmp176,
	call	Perl_mg_set	#
.L2289:
	.loc 1 4521 0 discriminator 2
	movq	-48(%rbp), %rax	# targ, tmp177
	movq	%rax, (%rbx)	# tmp177, *sp_115
.L2271:
.LBE492:
.LBE490:
	.loc 1 4523 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2047
	movq	(%rax), %rax	# PL_op.2047_119->op_next, D.24677
	.loc 1 4524 0
	addq	$48, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE115:
	.size	Perl_pp_reverse, .-Perl_pp_reverse
	.section	.rodata
.LC53:
	.string	"panic: pp_split"
.LC54:
	.string	"Split loop"
	.text
	.globl	Perl_pp_split
	.type	Perl_pp_split, @function
Perl_pp_split:
.LFB116:
	.loc 1 4527 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r15	#
	pushq	%r14	#
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$184, %rsp	#,
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	.loc 1 4528 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4530 0
	movq	%rbx, %rax	# sp, sp.2048
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.2048_82, PL_Sv.2049
	movq	%rax, PL_Sv(%rip)	# PL_Sv.2049, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.2051
	movl	12(%rax), %eax	# PL_Sv.2051_85->sv_flags, D.24679
	andl	$65536, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2292	#,
	.loc 1 4530 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.2052
	movq	(%rax), %rax	# PL_Sv.2052_88->sv_any, D.24680
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_89].xiv_iv, iftmp.2050
	jmp	.L2293	#
.L2292:
	.loc 1 4530 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.2053
	movq	%rax, %rdi	# PL_Sv.2053,
	call	Perl_sv_2iv	#
.L2293:
	.loc 1 4530 0 discriminator 3
	movq	%rax, -200(%rbp)	# iftmp.2050, %sfp
	.loc 1 4531 0 is_stmt 1 discriminator 3
	movq	%rbx, %rax	# sp, sp.2054
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %rax	# *sp.2054_94, tmp527
	movq	%rax, -96(%rbp)	# tmp527, sv
	.loc 1 4533 0 discriminator 3
	movq	-96(%rbp), %rax	# sv, tmp528
	movl	12(%rax), %eax	# sv_96->sv_flags, D.24679
	andl	$262144, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2294	#,
	.loc 1 4533 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# sv, tmp529
	movq	(%rax), %rax	# sv_96->sv_any, D.24680
	movq	8(%rax), %rax	# MEM[(struct XPV *)_99].xpv_cur, len.2056
	movq	%rax, -144(%rbp)	# len.2056, len
	movq	-96(%rbp), %rax	# sv, tmp530
	movq	(%rax), %rax	# sv_96->sv_any, D.24680
	movq	(%rax), %rax	# MEM[(struct XPV *)_101].xpv_pv, iftmp.2055
	jmp	.L2295	#
.L2294:
	.loc 1 4533 0 discriminator 2
	leaq	-144(%rbp), %rcx	#, tmp531
	movq	-96(%rbp), %rax	# sv, tmp532
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp531,
	movq	%rax, %rdi	# tmp532,
	call	Perl_sv_2pv_flags	#
.L2295:
	.loc 1 4533 0 discriminator 3
	movq	%rax, %r12	# iftmp.2055, s
	.loc 1 4534 0 is_stmt 1 discriminator 3
	movq	-96(%rbp), %rax	# sv, tmp533
	movl	12(%rax), %eax	# sv_96->sv_flags, D.24679
	andl	$536870912, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2296	#,
	.loc 1 4534 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.2058
	movzbl	37(%rax), %eax	# PL_curcop.2058_107->op_private, D.24681
	movzbl	%al, %eax	# D.24681, D.24682
	andl	$8, %eax	#, D.24682
	testl	%eax, %eax	# D.24682
	jne	.L2296	#,
	.loc 1 4534 0 discriminator 3
	movl	$1, %eax	#, iftmp.2057
	jmp	.L2297	#
.L2296:
	.loc 1 4534 0 discriminator 2
	movl	$0, %eax	#, iftmp.2057
.L2297:
	.loc 1 4534 0 discriminator 4
	movb	%al, -186(%rbp)	# iftmp.2057, do_utf8
	.loc 1 4535 0 is_stmt 1 discriminator 4
	movq	-144(%rbp), %rax	# len, len.2059
	addq	%r12, %rax	# s, tmp534
	movq	%rax, -120(%rbp)	# tmp534, strend
	.loc 1 4540 0 discriminator 4
	movl	$0, -184(%rbp)	#, iters
	.loc 1 4541 0 discriminator 4
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2298	#,
	.loc 1 4541 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# strend, tmp535
	movq	%rax, %rsi	# tmp535,
	movq	%r12, %rdi	# s,
	call	Perl_utf8_length	#
	jmp	.L2299	#
.L2298:
	.loc 1 4541 0 discriminator 2
	movq	-120(%rbp), %rdx	# strend, strend.2061
	movq	%r12, %rax	# s, s.2062
	subq	%rax, %rdx	# s.2062, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
.L2299:
	.loc 1 4541 0 discriminator 3
	movq	%rax, -88(%rbp)	# iftmp.2060, slen
	.loc 1 4542 0 is_stmt 1 discriminator 3
	movq	-88(%rbp), %rax	# slen, tmp536
	addl	$10, %eax	#, D.24684
	movl	%eax, -180(%rbp)	# D.24684, maxiters
	.loc 1 4545 0 discriminator 3
	movl	-200(%rbp), %eax	# %sfp, tmp615
	movl	%eax, -164(%rbp)	# tmp615, origlimit
	.loc 1 4546 0 discriminator 3
	movl	$0, -172(%rbp)	#, realarray
	.loc 1 4548 0 discriminator 3
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2064
	movzbl	36(%rax), %eax	# PL_op.2064_128->op_flags, D.24681
	movzbl	%al, %eax	# D.24681, D.24682
	andl	$3, %eax	#, D.24682
	cmpl	$1, %eax	#, D.24682
	je	.L2300	#,
	.loc 1 4548 0 is_stmt 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2066
	movzbl	36(%rax), %eax	# PL_op.2066_132->op_flags, D.24681
	movzbl	%al, %eax	# D.24681, D.24682
	andl	$3, %eax	#, D.24682
	cmpl	$2, %eax	#, D.24682
	je	.L2301	#,
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2068
	movzbl	36(%rax), %eax	# PL_op.2068_136->op_flags, D.24681
	movzbl	%al, %eax	# D.24681, D.24682
	andl	$3, %eax	#, D.24682
	cmpl	$3, %eax	#, D.24682
	je	.L2302	#,
	call	Perl_block_gimme	#
	jmp	.L2305	#
.L2302:
	.loc 1 4548 0 discriminator 2
	movl	$1, %eax	#, iftmp.2067
	jmp	.L2305	#
.L2301:
	movl	$0, %eax	#, iftmp.2065
	jmp	.L2305	#
.L2300:
	movl	$128, %eax	#, iftmp.2063
.L2305:
	.loc 1 4548 0 discriminator 3
	movl	%eax, -160(%rbp)	# iftmp.2063, gimme
	.loc 1 4549 0 is_stmt 1 discriminator 3
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, tmp537
	movl	%eax, -156(%rbp)	# tmp537, oldsave
	.loc 1 4550 0 discriminator 3
	movl	$1, -168(%rbp)	#, make_mortal
	.loc 1 4551 0 discriminator 3
	movq	$0, -104(%rbp)	#, mg
	.loc 1 4556 0 discriminator 3
	movq	%rbx, %rax	# sp, sp.2069
	leaq	-8(%rax), %rbx	#, sp
	movq	(%rax), %r15	# *sp.2069_150, pm
	.loc 1 4558 0 discriminator 3
	testq	%r15, %r15	# pm
	je	.L2306	#,
	.loc 1 4558 0 is_stmt 0 discriminator 1
	testq	%r12, %r12	# s
	jne	.L2307	#,
.L2306:
	.loc 1 4559 0 is_stmt 1
	movl	$.LC53, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L2437	#
.L2307:
	.loc 1 4560 0
	movq	80(%r15), %r14	# pm_152->op_pmregexp, rx
	.loc 1 4562 0
	movl	88(%r15), %eax	# pm_152->op_pmflags, D.24679
	andl	$2048, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2309	#,
	.loc 1 4562 0 is_stmt 0 discriminator 1
	movl	88(%r15), %eax	# pm_152->op_pmflags, D.24679
	andl	$48, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2309	#,
	movb	$1, PL_tainted(%rip)	#, PL_tainted
.L2309:
	.loc 1 4565 0 is_stmt 1
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2310	#,
	.loc 1 4565 0 is_stmt 0 discriminator 1
	movl	92(%r14), %eax	# rx_153->reganch, D.24679
	orl	$268435456, %eax	#, D.24679
	movl	%eax, 92(%r14)	# D.24679, rx_153->reganch
	movb	$1, PL_reg_match_utf8(%rip)	#, PL_reg_match_utf8
	jmp	.L2311	#
.L2310:
	.loc 1 4565 0 discriminator 2
	movl	92(%r14), %eax	# rx_153->reganch, D.24679
	andl	$-268435457, %eax	#, D.24679
	movl	%eax, 92(%r14)	# D.24679, rx_153->reganch
	movb	$0, PL_reg_match_utf8(%rip)	#, PL_reg_match_utf8
.L2311:
	.loc 1 4567 0 is_stmt 1
	movq	56(%r15), %rax	# pm_152->op_pmreplroot, D.24678
	testq	%rax, %rax	# D.24678
	je	.L2312	#,
	.loc 1 4571 0
	movq	56(%r15), %rax	# pm_152->op_pmreplroot, D.24678
	movq	(%rax), %rax	# MEM[(struct GV *)_165].sv_any, D.24685
	movq	56(%rax), %rax	# _166->xgv_gp, D.24686
	movq	32(%rax), %rax	# _167->gp_av, D.24687
	testq	%rax, %rax	# D.24687
	je	.L2313	#,
	.loc 1 4571 0 is_stmt 0 discriminator 1
	movq	56(%r15), %rax	# pm_152->op_pmreplroot, D.24678
	movq	(%rax), %rax	# MEM[(struct GV *)_169].sv_any, D.24685
	movq	56(%rax), %rax	# _170->xgv_gp, D.24686
	movq	32(%rax), %rax	# _171->gp_av, iftmp.2071
	jmp	.L2314	#
.L2313:
	.loc 1 4571 0 discriminator 2
	movq	56(%r15), %rax	# pm_152->op_pmreplroot, D.24678
	movq	%rax, %rdi	# D.24678,
	call	Perl_gv_AVadd	#
	movq	(%rax), %rax	# _174->sv_any, D.24685
	movq	56(%rax), %rax	# _175->xgv_gp, D.24686
	movq	32(%rax), %rax	# _176->gp_av, iftmp.2071
.L2314:
	.loc 1 4571 0 discriminator 3
	movq	%rax, -128(%rbp)	# iftmp.2071, ary
	jmp	.L2315	#
.L2312:
	.loc 1 4574 0 is_stmt 1
	cmpl	$1, -160(%rbp)	#, gimme
	je	.L2316	#,
	.loc 1 4578 0
	movq	PL_defgv(%rip), %rax	# PL_defgv, PL_defgv.2073
	movq	(%rax), %rax	# PL_defgv.2073_179->sv_any, D.24685
	movq	56(%rax), %rax	# _180->xgv_gp, D.24686
	movq	32(%rax), %rax	# _181->gp_av, D.24687
	testq	%rax, %rax	# D.24687
	je	.L2317	#,
	.loc 1 4578 0 is_stmt 0 discriminator 1
	movq	PL_defgv(%rip), %rax	# PL_defgv, PL_defgv.2074
	movq	(%rax), %rax	# PL_defgv.2074_183->sv_any, D.24685
	movq	56(%rax), %rax	# _184->xgv_gp, D.24686
	movq	32(%rax), %rax	# _185->gp_av, iftmp.2072
	jmp	.L2318	#
.L2317:
	.loc 1 4578 0 discriminator 2
	movq	PL_defgv(%rip), %rax	# PL_defgv, PL_defgv.2075
	movq	%rax, %rdi	# PL_defgv.2075,
	call	Perl_gv_AVadd	#
	movq	(%rax), %rax	# _188->sv_any, D.24685
	movq	56(%rax), %rax	# _189->xgv_gp, D.24686
	movq	32(%rax), %rax	# _190->gp_av, iftmp.2072
.L2318:
	.loc 1 4578 0 discriminator 4
	movq	%rax, -128(%rbp)	# iftmp.2072, ary
	jmp	.L2315	#
.L2316:
	.loc 1 4581 0 is_stmt 1
	movq	$0, -128(%rbp)	#, ary
.L2315:
	.loc 1 4582 0
	cmpq	$0, -128(%rbp)	#, ary
	je	.L2319	#,
	.loc 1 4582 0 is_stmt 0 discriminator 1
	cmpl	$1, -160(%rbp)	#, gimme
	jne	.L2320	#,
	movl	88(%r15), %eax	# pm_152->op_pmflags, D.24679
	andl	$2, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2319	#,
.L2320:
	.loc 1 4583 0 is_stmt 1
	movl	$1, -172(%rbp)	#, realarray
	.loc 1 4584 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4585 0
	movq	-128(%rbp), %rax	# ary, tmp538
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp538,
	call	Perl_av_extend	#
	.loc 1 4586 0
	movq	-128(%rbp), %rax	# ary, tmp539
	movq	%rax, %rdi	# tmp539,
	call	Perl_av_clear	#
	.loc 1 4587 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4588 0
	movq	-128(%rbp), %rax	# ary, tmp540
	movl	12(%rax), %eax	# MEM[(struct SV *)ary_26].sv_flags, D.24679
	andl	$32768, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2321	#,
	.loc 1 4588 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# ary, tmp541
	movl	$80, %esi	#,
	movq	%rax, %rdi	# tmp541,
	call	Perl_mg_find	#
	jmp	.L2322	#
.L2321:
	.loc 1 4588 0 discriminator 2
	movl	$0, %eax	#, iftmp.2076
.L2322:
	.loc 1 4588 0 discriminator 3
	movq	%rax, -104(%rbp)	# iftmp.2076, mg
	cmpq	$0, -104(%rbp)	#, mg
	je	.L2323	#,
.LBB493:
	.loc 1 4589 0 is_stmt 1
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.2077
	addq	$4, %rax	#, PL_markstack_ptr.2078
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.2078, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.2079
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.2080
	cmpq	%rax, %rdx	# PL_markstack_max.2080, PL_markstack_ptr.2079
	jne	.L2324	#,
	.loc 1 4589 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L2324:
	.loc 1 4589 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.2081
	movq	%rbx, %rcx	# sp, sp.2082
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.2083
	subq	%rdx, %rcx	# PL_stack_base.2084, D.24683
	movq	%rcx, %rdx	# D.24683, D.24683
	sarq	$3, %rdx	#, tmp542
	movl	%edx, (%rax)	# D.24682, *PL_markstack_ptr.2081_207
.LBE493:
.LBB494:
	.loc 1 4590 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.2085
	movq	%rax, %rdx	# PL_stack_max.2085, PL_stack_max.2086
	movq	%rbx, %rax	# sp, sp.2087
	subq	%rax, %rdx	# sp.2087, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	cmpq	$7, %rax	#, D.24683
	jg	.L2325	#,
	.loc 1 4590 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2325:
	.loc 1 4590 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-104(%rbp), %rax	# mg, tmp543
	movq	24(%rax), %rax	# mg_202->mg_obj, D.24690
	testq	%rax, %rax	# D.24690
	je	.L2326	#,
	.loc 1 4590 0 discriminator 1
	movq	-104(%rbp), %rax	# mg, tmp544
	movq	24(%rax), %rax	# mg_202->mg_obj, iftmp.2088
	jmp	.L2327	#
.L2326:
	.loc 1 4590 0 discriminator 2
	movq	-128(%rbp), %rax	# ary, tmp545
	movq	%rax, %rdi	# tmp545,
	call	Perl_newRV	#
	movq	%rax, %rdi	# D.24690,
	call	Perl_sv_2mortal	#
.L2327:
	.loc 1 4590 0 discriminator 1
	movq	%rax, (%rbx)	# iftmp.2088, *sp_220
.LBE494:
	jmp	.L2319	#
.L2323:
	.loc 1 4593 0 is_stmt 1
	movq	-128(%rbp), %rax	# ary, tmp546
	movq	(%rax), %rax	# ary_26->sv_any, D.24691
	movzbl	72(%rax), %eax	# _226->xav_flags, D.24681
	movzbl	%al, %eax	# D.24681, D.24682
	andl	$1, %eax	#, D.24682
	testl	%eax, %eax	# D.24682
	jne	.L2328	#,
	.loc 1 4594 0
	movq	-128(%rbp), %rax	# ary, tmp547
	movq	(%rax), %rax	# ary_26->sv_any, D.24691
	movq	-128(%rbp), %rdx	# ary, tmp548
	movq	(%rdx), %rdx	# ary_26->sv_any, D.24691
	movzbl	72(%rdx), %edx	# _231->xav_flags, D.24681
	orl	$1, %edx	#, D.24681
	movb	%dl, 72(%rax)	# D.24681, _230->xav_flags
	.loc 1 4595 0
	movq	-128(%rbp), %rax	# ary, tmp549
	movq	(%rax), %rax	# ary_26->sv_any, D.24691
	movq	-128(%rbp), %rdx	# ary, tmp550
	movq	(%rdx), %rdx	# ary_26->sv_any, D.24691
	movzbl	72(%rdx), %edx	# _235->xav_flags, D.24681
	andl	$-3, %edx	#, D.24681
	movb	%dl, 72(%rax)	# D.24681, _234->xav_flags
	.loc 1 4596 0
	movq	-128(%rbp), %rax	# ary, tmp551
	movq	(%rax), %rax	# ary_26->sv_any, D.24691
	movq	8(%rax), %rax	# _238->xav_fill, D.24683
	movl	%eax, -176(%rbp)	# D.24683, i
	jmp	.L2329	#
.L2330:
	.loc 1 4597 0 discriminator 2
	movq	-128(%rbp), %rax	# ary, tmp552
	movq	(%rax), %rax	# ary_26->sv_any, D.24691
	movq	(%rax), %rax	# _241->xav_array, D.24692
	movl	-176(%rbp), %edx	# i, tmp553
	movslq	%edx, %rdx	# tmp553, D.24693
	salq	$3, %rdx	#, D.24693
	addq	%rdx, %rax	# D.24693, D.24694
	movq	$PL_sv_undef, (%rax)	#, *_245
	.loc 1 4596 0 discriminator 2
	subl	$1, -176(%rbp)	#, i
.L2329:
	.loc 1 4596 0 is_stmt 0 discriminator 1
	cmpl	$0, -176(%rbp)	#, i
	jns	.L2330	#,
.L2328:
.LBB495:
	.loc 1 4600 0 is_stmt 1
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.2089
	leal	3(%rax), %edx	#, D.24682
	movl	PL_savestack_max(%rip), %eax	# PL_savestack_max, PL_savestack_max.2090
	cmpl	%eax, %edx	# PL_savestack_max.2090, D.24682
	jle	.L2331	#,
	.loc 1 4600 0 is_stmt 0 discriminator 1
	call	Perl_savestack_grow	#
.L2331:
	.loc 1 4600 0 discriminator 2
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.2091
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.2092
	leal	1(%rax), %edx	#, PL_savestack_ix.2094
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.2094, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.24693
	leaq	(%rcx,%rax), %rdx	#, D.24695
	movq	PL_curstack(%rip), %rax	# PL_curstack, PL_curstack.2095
	movq	%rax, (%rdx)	# PL_curstack.2095, _256->any_ptr
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.2096
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.2097
	leal	1(%rax), %edx	#, PL_savestack_ix.2099
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.2099, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.24693
	leaq	(%rcx,%rax), %rdx	#, D.24695
	movq	-128(%rbp), %rax	# ary, tmp554
	movq	%rax, (%rdx)	# tmp554, _264->any_ptr
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.2100
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.2101
	leal	1(%rax), %edx	#, PL_savestack_ix.2103
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.2103, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.24693
	addq	%rcx, %rax	# PL_savestack.2100, D.24695
	movl	$40, (%rax)	#, _271->any_i32
.LBB496:
	movq	PL_curstack(%rip), %rax	# PL_curstack, PL_curstack.2104
	movq	(%rax), %rax	# PL_curstack.2104_272->sv_any, D.24691
	movq	%rbx, %rcx	# sp, sp.2105
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.2106
	subq	%rdx, %rcx	# PL_stack_base.2107, D.24683
	movq	%rcx, %rdx	# D.24683, D.24683
	sarq	$3, %rdx	#, tmp555
	movq	%rdx, 8(%rax)	# D.24683, _273->xav_fill
	movq	-128(%rbp), %rax	# ary, tmp556
	movq	(%rax), %rax	# ary_26->sv_any, D.24691
	movq	(%rax), %rax	# _279->xav_array, PL_stack_base.2108
	movq	%rax, PL_stack_base(%rip)	# PL_stack_base.2108, PL_stack_base
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.2109
	movq	-128(%rbp), %rax	# ary, tmp557
	movq	(%rax), %rax	# ary_26->sv_any, D.24691
	movq	16(%rax), %rax	# _282->xav_max, D.24683
	salq	$3, %rax	#, D.24693
	addq	%rdx, %rax	# PL_stack_base.2109, PL_stack_max.2110
	movq	%rax, PL_stack_max(%rip)	# PL_stack_max.2110, PL_stack_max
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.2111
	movq	-128(%rbp), %rax	# ary, tmp558
	movq	(%rax), %rax	# ary_26->sv_any, D.24691
	movq	8(%rax), %rax	# _288->xav_fill, D.24683
	salq	$3, %rax	#, D.24693
	addq	%rdx, %rax	# PL_stack_base.2111, PL_stack_sp.2112
	movq	%rax, PL_stack_sp(%rip)	# PL_stack_sp.2112, PL_stack_sp
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	-128(%rbp), %rax	# ary, tmp559
	movq	%rax, PL_curstack(%rip)	# tmp559, PL_curstack
.LBE496:
	movq	PL_curstackinfo(%rip), %rax	# PL_curstackinfo, PL_curstackinfo.2113
	movq	-128(%rbp), %rdx	# ary, tmp560
	movq	%rdx, (%rax)	# tmp560, PL_curstackinfo.2113_295->si_stack
.LBE495:
	.loc 1 4601 0 is_stmt 1 discriminator 2
	movl	$0, -168(%rbp)	#, make_mortal
.L2319:
	.loc 1 4604 0
	movq	%rbx, %rdx	# sp, sp.2114
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.2115
	subq	%rax, %rdx	# PL_stack_base.2116, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	sarq	$3, %rax	#, tmp561
	movl	%eax, -152(%rbp)	# D.24683, base
	.loc 1 4605 0
	movq	%r12, -112(%rbp)	# s, orig
	.loc 1 4606 0
	movl	88(%r15), %eax	# pm_152->op_pmflags, D.24679
	andl	$16, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2332	#,
	.loc 1 4607 0
	movl	88(%r15), %eax	# pm_152->op_pmflags, D.24679
	andl	$2048, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2333	#,
	.loc 1 4608 0
	jmp	.L2334	#
.L2335:
	.loc 1 4609 0
	addq	$1, %r12	#, s
.L2334:
	.loc 1 4608 0 discriminator 1
	movzbl	(%r12), %eax	# *s_33, D.24696
	testb	%al, %al	# D.24696
	js	.L2332	#,
	.loc 1 4608 0 is_stmt 0 discriminator 2
	call	__ctype_b_loc	#
	movq	(%rax), %rax	# *_310, D.24698
	movzbl	(%r12), %edx	# *s_33, D.24696
	movsbq	%dl, %rdx	# D.24696, D.24693
	addq	%rdx, %rdx	# D.24693
	addq	%rdx, %rax	# D.24693, D.24698
	movzwl	(%rax), %eax	# *_315, D.24699
	movzwl	%ax, %eax	# D.24699, D.24682
	andl	$8192, %eax	#, D.24682
	testl	%eax, %eax	# D.24682
	jne	.L2335	#,
	jmp	.L2332	#
.L2333:
	.loc 1 4612 0 is_stmt 1
	jmp	.L2336	#
.L2337:
	.loc 1 4613 0
	addq	$1, %r12	#, s
.L2336:
	.loc 1 4612 0 discriminator 1
	movzbl	(%r12), %eax	# *s_34, D.24696
	cmpb	$32, %al	#, D.24696
	je	.L2337	#,
	.loc 1 4612 0 is_stmt 0 discriminator 2
	movzbl	(%r12), %eax	# *s_34, D.24696
	cmpb	$9, %al	#, D.24696
	je	.L2337	#,
	.loc 1 4612 0 discriminator 1
	movzbl	(%r12), %eax	# *s_34, D.24696
	cmpb	$10, %al	#, D.24696
	je	.L2337	#,
	movzbl	(%r12), %eax	# *s_34, D.24696
	cmpb	$13, %al	#, D.24696
	je	.L2337	#,
	movzbl	(%r12), %eax	# *s_34, D.24696
	cmpb	$12, %al	#, D.24696
	je	.L2337	#,
.L2332:
	.loc 1 4616 0 is_stmt 1
	movl	88(%r15), %eax	# pm_152->op_pmflags, D.24679
	andl	$12288, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2338	#,
	.loc 1 4617 0
	movl	$PL_multiline, %edi	#,
	call	Perl_save_int	#
	.loc 1 4618 0
	movl	88(%r15), %eax	# pm_152->op_pmflags, D.24679
	andl	$4096, %eax	#, PL_multiline.2117
	movl	%eax, PL_multiline(%rip)	# PL_multiline.2117, PL_multiline
.L2338:
	.loc 1 4621 0
	cmpq	$0, -200(%rbp)	#, %sfp
	jne	.L2339	#,
	.loc 1 4622 0
	movl	-180(%rbp), %eax	# maxiters, tmp562
	addl	$2, %eax	#, D.24682
	cltq
	movq	%rax, -200(%rbp)	# limit, %sfp
.L2339:
	.loc 1 4623 0
	movl	88(%r15), %eax	# pm_152->op_pmflags, D.24679
	andl	$32, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2340	#,
	.loc 1 4624 0
	jmp	.L2341	#
.L2364:
	.loc 1 4625 0
	movq	%r12, %r13	# s, m
	.loc 1 4626 0
	jmp	.L2342	#
.L2348:
	.loc 1 4629 0
	addq	$1, %r13	#, m
.L2342:
	.loc 1 4626 0 discriminator 1
	cmpq	-120(%rbp), %r13	# strend, m
	jae	.L2343	#,
	.loc 1 4627 0 discriminator 2
	movl	88(%r15), %eax	# pm_152->op_pmflags, D.24679
	andl	$2048, %eax	#, D.24679
	.loc 1 4626 0 discriminator 2
	testl	%eax, %eax	# D.24679
	je	.L2344	#,
	.loc 1 4628 0
	movzbl	0(%r13), %eax	# *m_49, D.24696
	testb	%al, %al	# D.24696
	js	.L2345	#,
	.loc 1 4628 0 is_stmt 0 discriminator 2
	call	__ctype_b_loc	#
	movq	(%rax), %rax	# *_340, D.24698
	movzbl	0(%r13), %edx	# *m_49, D.24696
	movsbq	%dl, %rdx	# D.24696, D.24693
	addq	%rdx, %rdx	# D.24693
	addq	%rdx, %rax	# D.24693, D.24698
	movzwl	(%rax), %eax	# *_345, D.24699
	movzwl	%ax, %eax	# D.24699, D.24682
	andl	$8192, %eax	#, D.24682
	testl	%eax, %eax	# D.24682
	jne	.L2346	#,
.L2345:
	.loc 1 4628 0 discriminator 1
	movl	$1, %eax	#, iftmp.2118
	jmp	.L2347	#
.L2346:
	.loc 1 4628 0 discriminator 3
	movl	$0, %eax	#, iftmp.2118
.L2347:
	.loc 1 4626 0 is_stmt 1
	andl	$1, %eax	#, D.24700
	testb	%al, %al	# D.24700
	jne	.L2348	#,
	jmp	.L2343	#
.L2344:
	.loc 1 4628 0
	movzbl	0(%r13), %eax	# *m_49, D.24696
	cmpb	$32, %al	#, D.24696
	je	.L2349	#,
	.loc 1 4628 0 is_stmt 0 discriminator 1
	movzbl	0(%r13), %eax	# *m_49, D.24696
	cmpb	$9, %al	#, D.24696
	je	.L2349	#,
	movzbl	0(%r13), %eax	# *m_49, D.24696
	cmpb	$10, %al	#, D.24696
	je	.L2349	#,
	movzbl	0(%r13), %eax	# *m_49, D.24696
	cmpb	$13, %al	#, D.24696
	je	.L2349	#,
	movzbl	0(%r13), %eax	# *m_49, D.24696
	cmpb	$12, %al	#, D.24696
	je	.L2349	#,
	.loc 1 4628 0 discriminator 3
	movl	$1, %eax	#, iftmp.2119
	jmp	.L2350	#
.L2349:
	.loc 1 4628 0 discriminator 2
	movl	$0, %eax	#, iftmp.2119
.L2350:
	.loc 1 4626 0 is_stmt 1
	andl	$1, %eax	#, D.24700
	testb	%al, %al	# D.24700
	jne	.L2348	#,
.L2343:
	.loc 1 4630 0
	cmpq	-120(%rbp), %r13	# strend, m
	jb	.L2351	#,
	.loc 1 4631 0
	nop
	jmp	.L2365	#
.L2351:
	.loc 1 4633 0
	movq	%r13, %rdx	# m, m.2120
	movq	%r12, %rax	# s, s.2121
	subq	%rax, %rdx	# s.2121, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	movq	%rax, %rsi	# D.24693,
	movq	%r12, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, %r12	#, dstr
	.loc 1 4634 0
	cmpl	$0, -168(%rbp)	#, make_mortal
	je	.L2353	#,
	.loc 1 4635 0
	movq	%r12, %rdi	# dstr,
	call	Perl_sv_2mortal	#
.L2353:
	.loc 1 4636 0
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2354	#,
	.loc 1 4637 0
	movl	12(%r12), %eax	# dstr_365->sv_flags, D.24679
	orl	$536870912, %eax	#, D.24679
	movl	%eax, 12(%r12)	# D.24679, dstr_365->sv_flags
.L2354:
.LBB497:
	.loc 1 4638 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.2122
	movq	%rax, %rdx	# PL_stack_max.2122, PL_stack_max.2123
	movq	%rbx, %rax	# sp, sp.2124
	subq	%rax, %rdx	# sp.2124, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	cmpq	$7, %rax	#, D.24683
	jg	.L2355	#,
	.loc 1 4638 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2355:
	.loc 1 4638 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	%r12, (%rbx)	# dstr, *sp_373
.LBE497:
	.loc 1 4640 0 is_stmt 1 discriminator 2
	leaq	1(%r13), %r12	#, s
	.loc 1 4641 0 discriminator 2
	jmp	.L2356	#
.L2360:
	.loc 1 4644 0
	addq	$1, %r12	#, s
.L2356:
	.loc 1 4641 0 discriminator 1
	cmpq	-120(%rbp), %r12	# strend, s
	jae	.L2341	#,
	.loc 1 4642 0 discriminator 2
	movl	88(%r15), %eax	# pm_152->op_pmflags, D.24679
	andl	$2048, %eax	#, D.24679
	.loc 1 4641 0 discriminator 2
	testl	%eax, %eax	# D.24679
	je	.L2357	#,
	.loc 1 4643 0
	movzbl	(%r12), %eax	# *s_36, D.24696
	testb	%al, %al	# D.24696
	js	.L2358	#,
	.loc 1 4643 0 is_stmt 0 discriminator 1
	call	__ctype_b_loc	#
	movq	(%rax), %rax	# *_379, D.24698
	movzbl	(%r12), %edx	# *s_36, D.24696
	movsbq	%dl, %rdx	# D.24696, D.24693
	addq	%rdx, %rdx	# D.24693
	addq	%rdx, %rax	# D.24693, D.24698
	movzwl	(%rax), %eax	# *_384, D.24699
	movzwl	%ax, %eax	# D.24699, D.24682
	andl	$8192, %eax	#, D.24682
	testl	%eax, %eax	# D.24682
	je	.L2358	#,
	.loc 1 4643 0 discriminator 3
	movl	$1, %eax	#, iftmp.2125
	jmp	.L2359	#
.L2358:
	.loc 1 4643 0 discriminator 2
	movl	$0, %eax	#, iftmp.2125
.L2359:
	.loc 1 4641 0 is_stmt 1
	andl	$1, %eax	#, D.24700
	testb	%al, %al	# D.24700
	jne	.L2360	#,
	jmp	.L2341	#
.L2357:
	.loc 1 4643 0
	movzbl	(%r12), %eax	# *s_36, D.24696
	cmpb	$32, %al	#, D.24696
	je	.L2361	#,
	.loc 1 4643 0 is_stmt 0 discriminator 2
	movzbl	(%r12), %eax	# *s_36, D.24696
	cmpb	$9, %al	#, D.24696
	je	.L2361	#,
	.loc 1 4643 0 discriminator 1
	movzbl	(%r12), %eax	# *s_36, D.24696
	cmpb	$10, %al	#, D.24696
	je	.L2361	#,
	movzbl	(%r12), %eax	# *s_36, D.24696
	cmpb	$13, %al	#, D.24696
	je	.L2361	#,
	movzbl	(%r12), %eax	# *s_36, D.24696
	cmpb	$12, %al	#, D.24696
	jne	.L2362	#,
.L2361:
	movl	$1, %eax	#, iftmp.2126
	jmp	.L2363	#
.L2362:
	.loc 1 4643 0 discriminator 3
	movl	$0, %eax	#, iftmp.2126
.L2363:
	.loc 1 4641 0 is_stmt 1
	andl	$1, %eax	#, D.24700
	testb	%al, %al	# D.24700
	jne	.L2360	#,
.L2341:
	.loc 1 4624 0 discriminator 1
	subq	$1, -200(%rbp)	#, %sfp
	cmpq	$0, -200(%rbp)	#, %sfp
	jne	.L2364	#,
	jmp	.L2365	#
.L2340:
	.loc 1 4647 0
	movq	32(%r14), %rax	# rx_153->precomp, D.24692
	movzbl	(%rax), %eax	# *_400, D.24696
	cmpb	$94, %al	#, D.24696
	jne	.L2366	#,
	.loc 1 4647 0 is_stmt 0 discriminator 1
	movq	32(%r14), %rax	# rx_153->precomp, D.24692
	addq	$1, %rax	#, D.24692
	movzbl	(%rax), %eax	# *_403, D.24696
	testb	%al, %al	# D.24696
	jne	.L2366	#,
	.loc 1 4648 0 is_stmt 1
	jmp	.L2367	#
.L2376:
	.loc 1 4650 0
	movq	%r12, %r13	# s, m
	jmp	.L2368	#
.L2370:
	.loc 1 4650 0 is_stmt 0 discriminator 1
	addq	$1, %r13	#, m
.L2368:
	cmpq	-120(%rbp), %r13	# strend, m
	jae	.L2369	#,
	.loc 1 4650 0 discriminator 2
	movzbl	0(%r13), %eax	# *m_50, D.24696
	cmpb	$10, %al	#, D.24696
	jne	.L2370	#,
.L2369:
	.loc 1 4651 0 is_stmt 1
	addq	$1, %r13	#, m
	.loc 1 4652 0
	cmpq	-120(%rbp), %r13	# strend, m
	jb	.L2371	#,
	.loc 1 4653 0
	jmp	.L2372	#
.L2371:
	.loc 1 4654 0
	movq	%r13, %rdx	# m, m.2127
	movq	%r12, %rax	# s, s.2128
	subq	%rax, %rdx	# s.2128, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	movq	%rax, %rsi	# D.24693,
	movq	%r12, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, %r12	#, dstr
	.loc 1 4655 0
	cmpl	$0, -168(%rbp)	#, make_mortal
	je	.L2373	#,
	.loc 1 4656 0
	movq	%r12, %rdi	# dstr,
	call	Perl_sv_2mortal	#
.L2373:
	.loc 1 4657 0
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2374	#,
	.loc 1 4658 0
	movl	12(%r12), %eax	# dstr_414->sv_flags, D.24679
	orl	$536870912, %eax	#, D.24679
	movl	%eax, 12(%r12)	# D.24679, dstr_414->sv_flags
.L2374:
.LBB498:
	.loc 1 4659 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.2129
	movq	%rax, %rdx	# PL_stack_max.2129, PL_stack_max.2130
	movq	%rbx, %rax	# sp, sp.2131
	subq	%rax, %rdx	# sp.2131, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	cmpq	$7, %rax	#, D.24683
	jg	.L2375	#,
	.loc 1 4659 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2375:
	.loc 1 4659 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	%r12, (%rbx)	# dstr, *sp_422
.LBE498:
	.loc 1 4660 0 is_stmt 1 discriminator 2
	movq	%r13, %r12	# m, s
.L2367:
	.loc 1 4648 0 discriminator 1
	subq	$1, -200(%rbp)	#, %sfp
	cmpq	$0, -200(%rbp)	#, %sfp
	jne	.L2376	#,
.L2372:
	.loc 1 4647 0
	jmp	.L2365	#
.L2366:
	.loc 1 4663 0
	movsbl	-186(%rbp), %edx	# do_utf8, D.24682
	movl	92(%r14), %eax	# rx_153->reganch, D.24679
	andl	$65536, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	setne	%al	#, D.24700
	movzbl	%al, %eax	# D.24700, D.24682
	cmpl	%eax, %edx	# D.24682, D.24682
	jne	.L2377	#,
	.loc 1 4664 0 discriminator 1
	movl	92(%r14), %eax	# rx_153->reganch, D.24679
	andl	$3145728, %eax	#, D.24679
	.loc 1 4663 0 discriminator 1
	testl	%eax, %eax	# D.24679
	je	.L2377	#,
	.loc 1 4664 0
	movl	80(%r14), %eax	# rx_153->nparens, D.24679
	testl	%eax, %eax	# D.24679
	jne	.L2377	#,
	.loc 1 4665 0
	movl	92(%r14), %eax	# rx_153->reganch, D.24679
	andl	$256, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2377	#,
	.loc 1 4666 0
	movl	92(%r14), %eax	# rx_153->reganch, D.24679
	andl	$15, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	jne	.L2377	#,
.LBB499:
	.loc 1 4667 0
	movl	92(%r14), %eax	# rx_153->reganch, D.24679
	andl	$134217728, %eax	#, tmp563
	movl	%eax, -148(%rbp)	# tmp563, tail
	.loc 1 4668 0
	movq	PL_regint_string(%rip), %rax	# PL_regint_string, PL_regint_string.2132
	movq	%r14, %rdi	# rx,
	call	*%rax	# PL_regint_string.2132
	movq	%rax, -80(%rbp)	# tmp564, csv
	.loc 1 4670 0
	movl	72(%r14), %eax	# rx_153->minlen, D.24682
	cltq
	movq	%rax, -144(%rbp)	# len.2133, len
	.loc 1 4671 0
	movq	-144(%rbp), %rax	# len, len.2134
	cmpq	$1, %rax	#, len.2134
	jne	.L2378	#,
	.loc 1 4671 0 is_stmt 0 discriminator 1
	movl	92(%r14), %eax	# rx_153->reganch, D.24679
	andl	$65536, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	jne	.L2378	#,
	cmpl	$0, -148(%rbp)	#, tail
	jne	.L2378	#,
.LBB500:
	.loc 1 4673 0 is_stmt 1
	movq	-80(%rbp), %rax	# csv, tmp565
	movl	12(%rax), %eax	# csv_441->sv_flags, D.24679
	andl	$262144, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2379	#,
	.loc 1 4673 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# csv, tmp566
	movq	(%rax), %rax	# csv_441->sv_any, D.24680
	movq	8(%rax), %rax	# MEM[(struct XPV *)_449].xpv_cur, n_a.2136
	movq	%rax, -136(%rbp)	# n_a.2136, n_a
	movq	-80(%rbp), %rax	# csv, tmp567
	movq	(%rax), %rax	# csv_441->sv_any, D.24680
	movq	(%rax), %rax	# MEM[(struct XPV *)_451].xpv_pv, iftmp.2135
	jmp	.L2380	#
.L2379:
	.loc 1 4673 0 discriminator 2
	leaq	-136(%rbp), %rcx	#, tmp568
	movq	-80(%rbp), %rax	# csv, tmp569
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp568,
	movq	%rax, %rdi	# tmp569,
	call	Perl_sv_2pv_flags	#
.L2380:
	.loc 1 4673 0 discriminator 3
	movzbl	(%rax), %eax	# *iftmp.2135_79, tmp570
	movb	%al, -185(%rbp)	# tmp570, c
	.loc 1 4674 0 is_stmt 1 discriminator 3
	jmp	.L2381	#
.L2391:
	.loc 1 4676 0
	movq	%r12, %r13	# s, m
	jmp	.L2382	#
.L2384:
	.loc 1 4676 0 is_stmt 0 discriminator 1
	addq	$1, %r13	#, m
.L2382:
	cmpq	-120(%rbp), %r13	# strend, m
	jae	.L2383	#,
	.loc 1 4676 0 discriminator 2
	movzbl	0(%r13), %eax	# *m_51, D.24696
	cmpb	-185(%rbp), %al	# c, D.24696
	jne	.L2384	#,
.L2383:
	.loc 1 4677 0 is_stmt 1
	cmpq	-120(%rbp), %r13	# strend, m
	jb	.L2385	#,
	.loc 1 4678 0
	jmp	.L2386	#
.L2385:
	.loc 1 4679 0
	movq	%r13, %rdx	# m, m.2137
	movq	%r12, %rax	# s, s.2138
	subq	%rax, %rdx	# s.2138, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	movq	%rax, %rsi	# D.24693,
	movq	%r12, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, %r12	#, dstr
	.loc 1 4680 0
	cmpl	$0, -168(%rbp)	#, make_mortal
	je	.L2387	#,
	.loc 1 4681 0
	movq	%r12, %rdi	# dstr,
	call	Perl_sv_2mortal	#
.L2387:
	.loc 1 4682 0
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2388	#,
	.loc 1 4683 0
	movl	12(%r12), %eax	# dstr_463->sv_flags, D.24679
	orl	$536870912, %eax	#, D.24679
	movl	%eax, 12(%r12)	# D.24679, dstr_463->sv_flags
.L2388:
.LBB501:
	.loc 1 4684 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.2139
	movq	%rax, %rdx	# PL_stack_max.2139, PL_stack_max.2140
	movq	%rbx, %rax	# sp, sp.2141
	subq	%rax, %rdx	# sp.2141, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	cmpq	$7, %rax	#, D.24683
	jg	.L2389	#,
	.loc 1 4684 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2389:
	.loc 1 4684 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	%r12, (%rbx)	# dstr, *sp_471
.LBE501:
	.loc 1 4687 0 is_stmt 1 discriminator 2
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2390	#,
	.loc 1 4688 0
	movq	-144(%rbp), %rax	# len, len.2142
	movl	%eax, %esi	# D.24682,
	movq	%r13, %rdi	# m,
	call	Perl_utf8_hop	#
	movq	%rax, %r12	#, s
	jmp	.L2381	#
.L2390:
	.loc 1 4690 0
	movq	-144(%rbp), %rax	# len, len.2143
	leaq	0(%r13,%rax), %r12	#, s
.L2381:
	.loc 1 4674 0 discriminator 1
	subq	$1, -200(%rbp)	#, %sfp
	cmpq	$0, -200(%rbp)	#, %sfp
	jne	.L2391	#,
.L2386:
.LBE500:
	.loc 1 4671 0
	jmp	.L2392	#
.L2378:
	.loc 1 4695 0
	jmp	.L2393	#
.L2398:
	.loc 1 4700 0
	movq	%r13, %rdx	# m, m.2144
	movq	%r12, %rax	# s, s.2145
	subq	%rax, %rdx	# s.2145, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	movq	%rax, %rsi	# D.24693,
	movq	%r12, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, %r12	#, dstr
	.loc 1 4701 0
	cmpl	$0, -168(%rbp)	#, make_mortal
	je	.L2394	#,
	.loc 1 4702 0
	movq	%r12, %rdi	# dstr,
	call	Perl_sv_2mortal	#
.L2394:
	.loc 1 4703 0
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2395	#,
	.loc 1 4704 0
	movl	12(%r12), %eax	# dstr_487->sv_flags, D.24679
	orl	$536870912, %eax	#, D.24679
	movl	%eax, 12(%r12)	# D.24679, dstr_487->sv_flags
.L2395:
.LBB502:
	.loc 1 4705 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.2146
	movq	%rax, %rdx	# PL_stack_max.2146, PL_stack_max.2147
	movq	%rbx, %rax	# sp, sp.2148
	subq	%rax, %rdx	# sp.2148, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	cmpq	$7, %rax	#, D.24683
	jg	.L2396	#,
	.loc 1 4705 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2396:
	.loc 1 4705 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	%r12, (%rbx)	# dstr, *sp_495
.LBE502:
	.loc 1 4708 0 is_stmt 1 discriminator 2
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2397	#,
	.loc 1 4709 0
	movq	-144(%rbp), %rax	# len, len.2149
	movl	%eax, %esi	# D.24682,
	movq	%r13, %rdi	# m,
	call	Perl_utf8_hop	#
	movq	%rax, %r12	#, s
	jmp	.L2393	#
.L2397:
	.loc 1 4711 0
	movq	-144(%rbp), %rax	# len, len.2150
	leaq	0(%r13,%rax), %r12	#, s
.L2393:
	.loc 1 4695 0 discriminator 1
	cmpq	-120(%rbp), %r12	# strend, s
	jae	.L2392	#,
	.loc 1 4695 0 is_stmt 0 discriminator 2
	subq	$1, -200(%rbp)	#, %sfp
	cmpq	$0, -200(%rbp)	#, %sfp
	je	.L2392	#,
	.loc 1 4696 0 is_stmt 1 discriminator 1
	movl	PL_multiline(%rip), %eax	# PL_multiline, PL_multiline.2151
	testl	%eax, %eax	# PL_multiline.2151
	setne	%al	#, D.24700
	movzbl	%al, %ecx	# D.24700, D.24679
	.loc 1 4695 0 discriminator 1
	movq	-80(%rbp), %rdx	# csv, tmp571
	movq	-120(%rbp), %rax	# strend, tmp572
	movq	%rax, %rsi	# tmp572,
	movq	%r12, %rdi	# s,
	call	Perl_fbm_instr	#
	movq	%rax, %r13	#, m
	testq	%r13, %r13	# m
	jne	.L2398	#,
.L2392:
.LBE499:
	.loc 1 4666 0
	jmp	.L2365	#
.L2377:
	.loc 1 4716 0
	movl	80(%r14), %edx	# rx_153->nparens, D.24679
	movq	-88(%rbp), %rax	# slen, tmp573
	imull	%eax, %edx	# D.24684, D.24684
	movl	-180(%rbp), %eax	# maxiters, maxiters.2152
	addl	%edx, %eax	# D.24684, D.24684
	movl	%eax, -180(%rbp)	# D.24684, maxiters
	.loc 1 4717 0
	jmp	.L2399	#
.L2414:
	.loc 1 4719 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4720 0
	movq	PL_regexecp(%rip), %rax	# PL_regexecp, PL_regexecp.2153
	movq	-96(%rbp), %rsi	# sv, tmp574
	movq	-112(%rbp), %rcx	# orig, tmp575
	movq	-120(%rbp), %rdx	# strend, tmp576
	movl	$0, 8(%rsp)	#,
	movq	$0, (%rsp)	#,
	movq	%rsi, %r9	# tmp574,
	movl	$1, %r8d	#,
	movq	%r12, %rsi	# s,
	movq	%r14, %rdi	# rx,
	call	*%rax	# PL_regexecp.2153
	movl	%eax, -176(%rbp)	# tmp577, i
	.loc 1 4721 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4722 0
	cmpl	$0, -176(%rbp)	#, i
	jne	.L2400	#,
	.loc 1 4723 0
	jmp	.L2365	#
.L2400:
	.loc 1 4724 0
	movl	92(%r14), %eax	# rx_153->reganch, D.24679
	andl	$524288, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2401	#,
	.loc 1 4724 0 is_stmt 0 discriminator 1
	movb	$1, PL_tainted(%rip)	#, PL_tainted
.L2401:
	.loc 1 4725 0 is_stmt 1
	movl	92(%r14), %eax	# rx_153->reganch, D.24679
	andl	$262144, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2402	#,
	.loc 1 4725 0 is_stmt 0 discriminator 1
	movq	48(%r14), %rax	# rx_153->subbeg, D.24692
	cmpq	-112(%rbp), %rax	# orig, D.24692
	je	.L2402	#,
	.loc 1 4726 0 is_stmt 1
	movq	%r12, %r13	# s, m
	.loc 1 4727 0
	movq	-112(%rbp), %r12	# orig, s
	.loc 1 4728 0
	movq	48(%r14), %rax	# rx_153->subbeg, tmp578
	movq	%rax, -112(%rbp)	# tmp578, orig
	.loc 1 4729 0
	movq	%r13, %rdx	# m, m.2154
	movq	%r12, %rax	# s, s.2155
	subq	%rax, %rdx	# s.2155, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	movq	%rax, %rdx	# D.24683, D.24701
	movq	-112(%rbp), %rax	# orig, tmp579
	leaq	(%rdx,%rax), %r12	#, s
	.loc 1 4730 0
	movq	-120(%rbp), %rdx	# strend, strend.2156
	movq	%r13, %rax	# m, m.2157
	subq	%rax, %rdx	# m.2157, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	addq	%r12, %rax	# s, tmp580
	movq	%rax, -120(%rbp)	# tmp580, strend
.L2402:
	.loc 1 4732 0
	movq	(%r14), %rax	# rx_153->startp, D.24702
	movl	(%rax), %eax	# *_530, D.24682
	movslq	%eax, %rdx	# D.24682, D.24701
	movq	-112(%rbp), %rax	# orig, tmp581
	leaq	(%rdx,%rax), %r13	#, m
	.loc 1 4733 0
	movq	%r13, %rdx	# m, m.2158
	movq	%r12, %rax	# s, s.2159
	subq	%rax, %rdx	# s.2159, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	movq	%rax, %rsi	# D.24693,
	movq	%r12, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, %r12	#, dstr
	.loc 1 4734 0
	cmpl	$0, -168(%rbp)	#, make_mortal
	je	.L2403	#,
	.loc 1 4735 0
	movq	%r12, %rdi	# dstr,
	call	Perl_sv_2mortal	#
.L2403:
	.loc 1 4736 0
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2404	#,
	.loc 1 4737 0
	movl	12(%r12), %eax	# dstr_538->sv_flags, D.24679
	orl	$536870912, %eax	#, D.24679
	movl	%eax, 12(%r12)	# D.24679, dstr_538->sv_flags
.L2404:
.LBB503:
	.loc 1 4738 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.2160
	movq	%rax, %rdx	# PL_stack_max.2160, PL_stack_max.2161
	movq	%rbx, %rax	# sp, sp.2162
	subq	%rax, %rdx	# sp.2162, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	cmpq	$7, %rax	#, D.24683
	jg	.L2405	#,
	.loc 1 4738 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2405:
	.loc 1 4738 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	%r12, (%rbx)	# dstr, *sp_546
.LBE503:
	.loc 1 4739 0 is_stmt 1 discriminator 2
	movl	80(%r14), %eax	# rx_153->nparens, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2406	#,
	.loc 1 4740 0
	movl	$1, -176(%rbp)	#, i
	jmp	.L2407	#
.L2413:
	.loc 1 4741 0
	movq	(%r14), %rax	# rx_153->startp, D.24702
	movl	-176(%rbp), %edx	# i, tmp582
	movslq	%edx, %rdx	# tmp582, D.24693
	salq	$2, %rdx	#, D.24693
	addq	%rdx, %rax	# D.24693, D.24702
	movl	(%rax), %eax	# *_555, D.24682
	movslq	%eax, %rdx	# D.24682, D.24701
	movq	-112(%rbp), %rax	# orig, tmp583
	leaq	(%rdx,%rax), %r12	#, s
	.loc 1 4742 0
	movq	8(%r14), %rax	# rx_153->endp, D.24702
	movl	-176(%rbp), %edx	# i, tmp584
	movslq	%edx, %rdx	# tmp584, D.24693
	salq	$2, %rdx	#, D.24693
	addq	%rdx, %rax	# D.24693, D.24702
	movl	(%rax), %eax	# *_562, D.24682
	movslq	%eax, %rdx	# D.24682, D.24701
	movq	-112(%rbp), %rax	# orig, tmp585
	leaq	(%rdx,%rax), %r13	#, m
	.loc 1 4747 0
	cmpq	-112(%rbp), %r13	# orig, m
	jb	.L2408	#,
	.loc 1 4747 0 is_stmt 0 discriminator 1
	cmpq	-112(%rbp), %r12	# orig, s
	jb	.L2408	#,
	.loc 1 4748 0 is_stmt 1
	movq	%r13, %rdx	# m, m.2163
	movq	%r12, %rax	# s, s.2164
	subq	%rax, %rdx	# s.2164, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	movq	%rax, %rsi	# D.24693,
	movq	%r12, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, %r12	#, dstr
	jmp	.L2409	#
.L2408:
	.loc 1 4751 0
	movl	$PL_sv_undef, %r12d	#, dstr
.L2409:
	.loc 1 4752 0
	cmpl	$0, -168(%rbp)	#, make_mortal
	je	.L2410	#,
	.loc 1 4753 0
	movq	%r12, %rdi	# dstr,
	call	Perl_sv_2mortal	#
.L2410:
	.loc 1 4754 0
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2411	#,
	.loc 1 4755 0
	movl	12(%r12), %eax	# dstr_48->sv_flags, D.24679
	orl	$536870912, %eax	#, D.24679
	movl	%eax, 12(%r12)	# D.24679, dstr_48->sv_flags
.L2411:
.LBB504:
	.loc 1 4756 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.2165
	movq	%rax, %rdx	# PL_stack_max.2165, PL_stack_max.2166
	movq	%rbx, %rax	# sp, sp.2167
	subq	%rax, %rdx	# sp.2167, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	cmpq	$7, %rax	#, D.24683
	jg	.L2412	#,
	.loc 1 4756 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2412:
	.loc 1 4756 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	%r12, (%rbx)	# dstr, *sp_579
.LBE504:
	.loc 1 4740 0 is_stmt 1 discriminator 2
	addl	$1, -176(%rbp)	#, i
.L2407:
	.loc 1 4740 0 is_stmt 0 discriminator 1
	movl	80(%r14), %eax	# rx_153->nparens, D.24679
	cmpl	-176(%rbp), %eax	# i, D.24682
	jge	.L2413	#,
.L2406:
	.loc 1 4759 0 is_stmt 1
	movq	8(%r14), %rax	# rx_153->endp, D.24702
	movl	(%rax), %eax	# *_582, D.24682
	movslq	%eax, %rdx	# D.24682, D.24701
	movq	-112(%rbp), %rax	# orig, tmp586
	leaq	(%rdx,%rax), %r12	#, s
.L2399:
	.loc 1 4717 0 discriminator 1
	cmpq	-120(%rbp), %r12	# strend, s
	jae	.L2365	#,
	.loc 1 4717 0 is_stmt 0 discriminator 2
	subq	$1, -200(%rbp)	#, %sfp
	cmpq	$0, -200(%rbp)	#, %sfp
	jne	.L2414	#,
.L2365:
	.loc 1 4763 0 is_stmt 1
	movq	%rbx, %rdx	# sp, sp.2168
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.2169
	subq	%rax, %rdx	# PL_stack_base.2170, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	sarq	$3, %rax	#, tmp587
	movl	%eax, %edx	# D.24683, D.24684
	movl	-152(%rbp), %eax	# base, base.2171
	subl	%eax, %edx	# base.2171, D.24684
	movl	%edx, %eax	# D.24684, D.24684
	movl	%eax, -184(%rbp)	# D.24684, iters
	.loc 1 4764 0
	movl	-184(%rbp), %eax	# iters, tmp588
	cmpl	-180(%rbp), %eax	# maxiters, tmp588
	jle	.L2415	#,
	.loc 1 4765 0
	movl	$.LC54, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	jmp	.L2437	#
.L2415:
	.loc 1 4768 0
	cmpq	-120(%rbp), %r12	# strend, s
	jb	.L2416	#,
	.loc 1 4768 0 is_stmt 0 discriminator 1
	cmpl	$0, -184(%rbp)	#, iters
	je	.L2417	#,
	cmpl	$0, -164(%rbp)	#, origlimit
	je	.L2417	#,
.L2416:
.LBB505:
	.loc 1 4769 0 is_stmt 1
	movq	-120(%rbp), %rdx	# strend, strend.2172
	movq	%r12, %rax	# s, s.2173
	subq	%rax, %rdx	# s.2173, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	movq	%rax, -72(%rbp)	# D.24683, l
	.loc 1 4770 0
	movq	-72(%rbp), %rax	# l, tmp589
	movq	%rax, %rsi	# tmp589,
	movq	%r12, %rdi	# s,
	call	Perl_newSVpvn	#
	movq	%rax, %r12	#, dstr
	.loc 1 4771 0
	cmpl	$0, -168(%rbp)	#, make_mortal
	je	.L2418	#,
	.loc 1 4772 0
	movq	%r12, %rdi	# dstr,
	call	Perl_sv_2mortal	#
.L2418:
	.loc 1 4773 0
	cmpb	$0, -186(%rbp)	#, do_utf8
	je	.L2419	#,
	.loc 1 4774 0
	movl	12(%r12), %eax	# dstr_611->sv_flags, D.24679
	orl	$536870912, %eax	#, D.24679
	movl	%eax, 12(%r12)	# D.24679, dstr_611->sv_flags
.L2419:
.LBB506:
	.loc 1 4775 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.2174
	movq	%rax, %rdx	# PL_stack_max.2174, PL_stack_max.2175
	movq	%rbx, %rax	# sp, sp.2176
	subq	%rax, %rdx	# sp.2176, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	cmpq	$7, %rax	#, D.24683
	jg	.L2420	#,
	.loc 1 4775 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2420:
	.loc 1 4775 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	%r12, (%rbx)	# dstr, *sp_619
.LBE506:
	.loc 1 4776 0 is_stmt 1 discriminator 2
	addl	$1, -184(%rbp)	#, iters
.LBE505:
	.loc 1 4768 0 discriminator 2
	jmp	.L2421	#
.L2417:
	.loc 1 4778 0
	cmpl	$0, -164(%rbp)	#, origlimit
	jne	.L2421	#,
	.loc 1 4779 0
	jmp	.L2422	#
.L2424:
	.loc 1 4780 0
	movq	(%rbx), %rax	# *sp_19, D.24690
	testq	%rax, %rax	# D.24690
	je	.L2423	#,
	.loc 1 4780 0 is_stmt 0 discriminator 1
	cmpl	$0, -168(%rbp)	#, make_mortal
	jne	.L2423	#,
	.loc 1 4781 0 is_stmt 1
	movq	(%rbx), %rax	# *sp_19, D.24690
	movq	%rax, %rdi	# D.24690,
	call	Perl_sv_2mortal	#
.L2423:
	.loc 1 4782 0
	subl	$1, -184(%rbp)	#, iters
	.loc 1 4783 0
	movq	%rbx, %rax	# sp, sp.2177
	leaq	-8(%rax), %rbx	#, sp
	movq	$PL_sv_undef, (%rax)	#, *sp.2177_605
.L2422:
	.loc 1 4779 0 discriminator 1
	cmpl	$0, -184(%rbp)	#, iters
	jle	.L2421	#,
	.loc 1 4779 0 is_stmt 0 discriminator 2
	movq	(%rbx), %rax	# *sp_19, D.24690
	testq	%rax, %rax	# D.24690
	je	.L2424	#,
	.loc 1 4779 0 discriminator 1
	movq	(%rbx), %rax	# *sp_19, D.24690
	movq	(%rax), %rax	# _597->sv_any, D.24680
	testq	%rax, %rax	# D.24680
	je	.L2424	#,
	movq	(%rbx), %rax	# *sp_19, D.24690
	movq	(%rax), %rax	# _599->sv_any, D.24680
	movq	8(%rax), %rax	# MEM[(struct XPV *)_600].xpv_cur, D.24693
	testq	%rax, %rax	# D.24693
	je	.L2424	#,
.L2421:
	.loc 1 4787 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4788 0
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.2178
	cmpl	-156(%rbp), %eax	# oldsave, PL_savestack_ix.2178
	jle	.L2425	#,
	.loc 1 4788 0 is_stmt 0 discriminator 1
	movl	-156(%rbp), %eax	# oldsave, tmp590
	movl	%eax, %edi	# tmp590,
	call	Perl_leave_scope	#
.L2425:
	.loc 1 4789 0 is_stmt 1
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4790 0
	cmpl	$0, -172(%rbp)	#, realarray
	je	.L2426	#,
	.loc 1 4791 0
	cmpq	$0, -104(%rbp)	#, mg
	jne	.L2427	#,
	.loc 1 4792 0
	movq	-128(%rbp), %rax	# ary, tmp591
	movl	12(%rax), %eax	# ary_26->sv_flags, D.24679
	andl	$16384, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2428	#,
	.loc 1 4793 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4794 0
	movq	-128(%rbp), %rax	# ary, tmp592
	movq	%rax, %rdi	# tmp592,
	call	Perl_mg_set	#
	.loc 1 4795 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
.L2428:
	.loc 1 4797 0
	cmpl	$1, -160(%rbp)	#, gimme
	jne	.L2429	#,
	.loc 1 4798 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.2179
	movq	%rax, %rdx	# PL_stack_max.2179, PL_stack_max.2180
	movq	%rbx, %rax	# sp, sp.2181
	subq	%rax, %rdx	# sp.2181, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	sarq	$3, %rax	#, tmp593
	movq	%rax, %rdx	# tmp593, D.24683
	movl	-184(%rbp), %eax	# iters, tmp594
	cltq
	cmpq	%rax, %rdx	# D.24683, D.24683
	jge	.L2430	#,
	.loc 1 4798 0 is_stmt 0 discriminator 1
	movl	-184(%rbp), %eax	# iters, tmp595
	movl	%eax, %edx	# tmp595,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2430:
	.loc 1 4799 0 is_stmt 1
	movl	-184(%rbp), %eax	# iters, tmp596
	cltq
	leaq	0(,%rax,8), %rdx	#, D.24693
	movq	-128(%rbp), %rax	# ary, tmp597
	movq	(%rax), %rax	# ary_26->sv_any, D.24691
	movq	(%rax), %rcx	# _636->xav_array, D.24692
	leaq	8(%rbx), %rax	#, D.24692
	movq	%rcx, %rsi	# D.24692,
	movq	%rax, %rdi	# D.24692,
	call	memcpy	#
	.loc 1 4800 0
	movl	-184(%rbp), %eax	# iters, tmp598
	cltq
	salq	$3, %rax	#, D.24693
	addq	%rax, %rbx	# D.24693, sp
	.loc 1 4801 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2182
	movq	(%rax), %rax	# PL_op.2182_642->op_next, D.24678
	jmp	.L2437	#
.L2427:
	.loc 1 4805 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4806 0
	call	Perl_push_scope	#
	.loc 1 4807 0
	movl	$2, %esi	#,
	movl	$.LC51, %edi	#,
	call	Perl_call_method	#
	.loc 1 4808 0
	call	Perl_pop_scope	#
	.loc 1 4809 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4810 0
	cmpl	$1, -160(%rbp)	#, gimme
	jne	.L2429	#,
	.loc 1 4812 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.2183
	movq	%rax, %rdx	# PL_stack_max.2183, PL_stack_max.2184
	movq	%rbx, %rax	# sp, sp.2185
	subq	%rax, %rdx	# sp.2185, D.24683
	movq	%rdx, %rax	# D.24683, D.24683
	sarq	$3, %rax	#, tmp599
	movq	%rax, %rdx	# tmp599, D.24683
	movl	-184(%rbp), %eax	# iters, tmp600
	cltq
	cmpq	%rax, %rdx	# D.24683, D.24683
	jge	.L2431	#,
	.loc 1 4812 0 is_stmt 0 discriminator 1
	movl	-184(%rbp), %eax	# iters, tmp601
	movl	%eax, %edx	# tmp601,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2431:
	.loc 1 4813 0 is_stmt 1
	movl	$0, -176(%rbp)	#, i
	jmp	.L2432	#
.L2435:
.LBB507:
	.loc 1 4814 0
	movl	-176(%rbp), %ecx	# i, tmp602
	movq	-128(%rbp), %rax	# ary, tmp603
	movl	$0, %edx	#,
	movl	%ecx, %esi	# tmp602,
	movq	%rax, %rdi	# tmp603,
	call	Perl_av_fetch	#
	movq	%rax, -64(%rbp)	# tmp604, svp
	.loc 1 4815 0
	addq	$8, %rbx	#, sp
	cmpq	$0, -64(%rbp)	#, svp
	je	.L2433	#,
	.loc 1 4815 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# svp, tmp605
	movq	(%rax), %rax	# *svp_653, iftmp.2186
	jmp	.L2434	#
.L2433:
	.loc 1 4815 0 discriminator 2
	movl	$PL_sv_undef, %eax	#, iftmp.2186
.L2434:
	.loc 1 4815 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.2186, *sp_654
.LBE507:
	.loc 1 4813 0 is_stmt 1 discriminator 3
	addl	$1, -176(%rbp)	#, i
.L2432:
	.loc 1 4813 0 is_stmt 0 discriminator 1
	movl	-176(%rbp), %eax	# i, tmp606
	cmpl	-184(%rbp), %eax	# iters, tmp606
	jl	.L2435	#,
	.loc 1 4817 0 is_stmt 1
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2187
	movq	(%rax), %rax	# PL_op.2187_658->op_next, D.24678
	jmp	.L2437	#
.L2426:
	.loc 1 4822 0
	cmpl	$1, -160(%rbp)	#, gimme
	jne	.L2429	#,
	.loc 1 4823 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2188
	movq	(%rax), %rax	# PL_op.2188_660->op_next, D.24678
	jmp	.L2437	#
.L2429:
	.loc 1 4826 0
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.2189
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2190
	movq	24(%rax), %rax	# PL_op.2190_663->op_targ, D.24693
	salq	$3, %rax	#, D.24693
	addq	%rdx, %rax	# PL_curpad.2189, D.24694
	movq	(%rax), %rax	# *_666, tmp607
	movq	%rax, -56(%rbp)	# tmp607, targ
.LBB508:
	.loc 1 4827 0
	movl	-184(%rbp), %eax	# iters, tmp608
	movslq	%eax, %rdx	# tmp608, D.24683
	movq	-56(%rbp), %rax	# targ, tmp609
	movq	%rdx, %rsi	# D.24683,
	movq	%rax, %rdi	# tmp609,
	call	Perl_sv_setiv	#
.LBB509:
	movq	-56(%rbp), %rax	# targ, tmp610
	movl	12(%rax), %eax	# targ_667->sv_flags, D.24679
	andl	$16384, %eax	#, D.24679
	testl	%eax, %eax	# D.24679
	je	.L2436	#,
	.loc 1 4827 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# targ, tmp611
	movq	%rax, %rdi	# tmp611,
	call	Perl_mg_set	#
.L2436:
	.loc 1 4827 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	-56(%rbp), %rax	# targ, tmp612
	movq	%rax, (%rbx)	# tmp612, *sp_671
.LBE509:
.LBE508:
	.loc 1 4828 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2191
	movq	(%rax), %rax	# PL_op.2191_673->op_next, D.24678
.L2437:
	.loc 1 4829 0
	addq	$184, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%r14	#
	popq	%r15	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE116:
	.size	Perl_pp_split, .-Perl_pp_split
	.globl	Perl_pp_lock
	.type	Perl_pp_lock, @function
Perl_pp_lock:
.LFB117:
	.loc 1 4851 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	.loc 1 4852 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	.loc 1 4853 0
	movq	(%rbx), %rax	# *sp_2, tmp70
	movq	%rax, -24(%rbp)	# tmp70, sv
	.loc 1 4854 0
	movq	-24(%rbp), %rax	# sv, tmp71
	movq	%rax, -32(%rbp)	# tmp71, retsv
	.loc 1 4855 0
	movq	PL_lockhook(%rip), %rax	# PL_lockhook, PL_lockhook.2192
	movq	-24(%rbp), %rdx	# sv, tmp72
	movq	%rdx, %rdi	# tmp72,
	call	*%rax	# PL_lockhook.2192
	.loc 1 4856 0
	movq	-32(%rbp), %rax	# retsv, tmp73
	movl	12(%rax), %eax	# retsv_4->sv_flags, D.24705
	movzbl	%al, %eax	# D.24705, D.24705
	cmpl	$10, %eax	#, D.24705
	je	.L2439	#,
	.loc 1 4856 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# retsv, tmp74
	movl	12(%rax), %eax	# retsv_4->sv_flags, D.24705
	movzbl	%al, %eax	# D.24705, D.24705
	cmpl	$11, %eax	#, D.24705
	je	.L2439	#,
	.loc 1 4857 0 is_stmt 1
	movq	-32(%rbp), %rax	# retsv, tmp75
	movl	12(%rax), %eax	# retsv_4->sv_flags, D.24705
	movzbl	%al, %eax	# D.24705, D.24705
	cmpl	$12, %eax	#, D.24705
	jne	.L2440	#,
.L2439:
	.loc 1 4858 0
	movq	-32(%rbp), %rax	# retsv, tmp76
	movq	%rax, %rdi	# tmp76,
	call	S_refto	#
	movq	%rax, -32(%rbp)	# tmp77, retsv
.L2440:
	.loc 1 4860 0
	movq	-32(%rbp), %rax	# retsv, tmp78
	movq	%rax, (%rbx)	# tmp78, *sp_2
	.loc 1 4861 0
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	movq	PL_op(%rip), %rax	# PL_op, PL_op.2193
	movq	(%rax), %rax	# PL_op.2193_13->op_next, D.24706
	.loc 1 4862 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE117:
	.size	Perl_pp_lock, .-Perl_pp_lock
	.section	.rodata
	.align 8
.LC55:
	.string	"tried to access per-thread data in non-threaded perl"
	.text
	.globl	Perl_pp_threadsv
	.type	Perl_pp_threadsv, @function
Perl_pp_threadsv:
.LFB118:
	.loc 1 4865 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 4875 0
	movl	$.LC55, %edi	#,
	movl	$0, %eax	#,
	call	Perl_die	#
	.loc 1 4877 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE118:
	.size	Perl_pp_threadsv, .-Perl_pp_threadsv
	.section	.rodata
	.align 32
	.type	oom_list_extend.10698, @object
	.size	oom_list_extend.10698, 33
oom_list_extend.10698:
	.string	"Out of memory during list extend"
	.align 32
	.type	oom_string_extend.10706, @object
	.size	oom_string_extend.10706, 35
oom_string_extend.10706:
	.string	"Out of memory during string extend"
	.align 16
.LC30:
	.long	0
	.long	-2147483648
	.long	0
	.long	0
	.align 8
.LC33:
	.long	0
	.long	1139802112
	.align 8
.LC34:
	.long	0
	.long	1071644672
	.align 8
.LC39:
	.long	0
	.long	-1008730112
	.text
.Letext0:
	.file 2 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 3 "/usr/include/x86_64-linux-gnu/sys/types.h"
	.file 4 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
	.file 5 "/usr/include/dirent.h"
	.file 6 "perl.h"
	.file 7 "op.h"
	.file 8 "cop.h"
	.file 9 "sv.h"
	.file 10 "regexp.h"
	.file 11 "gv.h"
	.file 12 "mg.h"
	.file 13 "av.h"
	.file 14 "hv.h"
	.file 15 "cv.h"
	.file 16 "handy.h"
	.file 17 "perlio.h"
	.file 18 "/usr/include/ctype.h"
	.file 19 "pad.h"
	.file 20 "utf8.h"
	.file 21 "opcode.h"
	.file 22 "intrpvar.h"
	.file 23 "thrdvar.h"
	.file 24 "opnames.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x7d9a
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF1050
	.byte	0x1
	.long	.LASF1051
	.long	.LASF1052
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.long	.LASF0
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.long	.LASF1
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.long	.LASF2
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF3
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF7
	.uleb128 0x4
	.byte	0x8
	.uleb128 0x5
	.long	.LASF9
	.byte	0x2
	.byte	0xb5
	.long	0x5e
	.uleb128 0x6
	.byte	0x8
	.long	0x7f
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF8
	.uleb128 0x5
	.long	.LASF10
	.byte	0x3
	.byte	0x6d
	.long	0x6e
	.uleb128 0x5
	.long	.LASF11
	.byte	0x4
	.byte	0xd4
	.long	0x42
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF12
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF13
	.uleb128 0x7
	.byte	0x4
	.byte	0x12
	.byte	0x30
	.long	0x106
	.uleb128 0x8
	.long	.LASF14
	.sleb128 256
	.uleb128 0x8
	.long	.LASF15
	.sleb128 512
	.uleb128 0x8
	.long	.LASF16
	.sleb128 1024
	.uleb128 0x8
	.long	.LASF17
	.sleb128 2048
	.uleb128 0x8
	.long	.LASF18
	.sleb128 4096
	.uleb128 0x8
	.long	.LASF19
	.sleb128 8192
	.uleb128 0x8
	.long	.LASF20
	.sleb128 16384
	.uleb128 0x8
	.long	.LASF21
	.sleb128 32768
	.uleb128 0x8
	.long	.LASF22
	.sleb128 1
	.uleb128 0x8
	.long	.LASF23
	.sleb128 2
	.uleb128 0x8
	.long	.LASF24
	.sleb128 4
	.uleb128 0x8
	.long	.LASF25
	.sleb128 8
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x10c
	.uleb128 0x9
	.long	0x7f
	.uleb128 0xa
	.long	0x7f
	.long	0x121
	.uleb128 0xb
	.long	0x65
	.byte	0xd
	.byte	0
	.uleb128 0xc
	.string	"DIR"
	.byte	0x5
	.byte	0x80
	.long	0x12c
	.uleb128 0xd
	.long	.LASF222
	.uleb128 0xe
	.string	"IV"
	.byte	0x6
	.value	0x52b
	.long	0x5e
	.uleb128 0xe
	.string	"UV"
	.byte	0x6
	.value	0x52c
	.long	0x42
	.uleb128 0xe
	.string	"NV"
	.byte	0x6
	.value	0x5f3
	.long	0x152
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.long	.LASF26
	.uleb128 0xf
	.long	.LASF27
	.byte	0x6
	.value	0x7d3
	.long	0x91
	.uleb128 0xe
	.string	"OP"
	.byte	0x6
	.value	0x7d5
	.long	0x170
	.uleb128 0x10
	.string	"op"
	.byte	0x28
	.byte	0x7
	.byte	0xe2
	.long	0x1dc
	.uleb128 0x11
	.long	.LASF28
	.byte	0x7
	.byte	0xe3
	.long	0x11c7
	.byte	0
	.uleb128 0x11
	.long	.LASF29
	.byte	0x7
	.byte	0xe3
	.long	0x11c7
	.byte	0x8
	.uleb128 0x11
	.long	.LASF30
	.byte	0x7
	.byte	0xe3
	.long	0x1bca
	.byte	0x10
	.uleb128 0x11
	.long	.LASF31
	.byte	0x7
	.byte	0xe3
	.long	0x1240
	.byte	0x18
	.uleb128 0x11
	.long	.LASF32
	.byte	0x7
	.byte	0xe3
	.long	0x102e
	.byte	0x20
	.uleb128 0x11
	.long	.LASF33
	.byte	0x7
	.byte	0xe3
	.long	0x102e
	.byte	0x22
	.uleb128 0x11
	.long	.LASF34
	.byte	0x7
	.byte	0xe3
	.long	0x1024
	.byte	0x24
	.uleb128 0x11
	.long	.LASF35
	.byte	0x7
	.byte	0xe3
	.long	0x1024
	.byte	0x25
	.byte	0
	.uleb128 0xe
	.string	"COP"
	.byte	0x6
	.value	0x7d6
	.long	0x1e8
	.uleb128 0x10
	.string	"cop"
	.byte	0x60
	.byte	0x8
	.byte	0x10
	.long	0x2b5
	.uleb128 0x11
	.long	.LASF28
	.byte	0x8
	.byte	0x11
	.long	0x11c7
	.byte	0
	.uleb128 0x11
	.long	.LASF29
	.byte	0x8
	.byte	0x11
	.long	0x11c7
	.byte	0x8
	.uleb128 0x11
	.long	.LASF30
	.byte	0x8
	.byte	0x11
	.long	0x1bca
	.byte	0x10
	.uleb128 0x11
	.long	.LASF31
	.byte	0x8
	.byte	0x11
	.long	0x1240
	.byte	0x18
	.uleb128 0x11
	.long	.LASF32
	.byte	0x8
	.byte	0x11
	.long	0x102e
	.byte	0x20
	.uleb128 0x11
	.long	.LASF33
	.byte	0x8
	.byte	0x11
	.long	0x102e
	.byte	0x22
	.uleb128 0x11
	.long	.LASF34
	.byte	0x8
	.byte	0x11
	.long	0x1024
	.byte	0x24
	.uleb128 0x11
	.long	.LASF35
	.byte	0x8
	.byte	0x11
	.long	0x1024
	.byte	0x25
	.uleb128 0x11
	.long	.LASF36
	.byte	0x8
	.byte	0x12
	.long	0x79
	.byte	0x28
	.uleb128 0x11
	.long	.LASF37
	.byte	0x8
	.byte	0x17
	.long	0x11af
	.byte	0x30
	.uleb128 0x11
	.long	.LASF38
	.byte	0x8
	.byte	0x18
	.long	0x11e4
	.byte	0x38
	.uleb128 0x11
	.long	.LASF39
	.byte	0x8
	.byte	0x1a
	.long	0x1044
	.byte	0x40
	.uleb128 0x11
	.long	.LASF40
	.byte	0x8
	.byte	0x1b
	.long	0x1039
	.byte	0x44
	.uleb128 0x11
	.long	.LASF41
	.byte	0x8
	.byte	0x1c
	.long	0x104f
	.byte	0x48
	.uleb128 0x11
	.long	.LASF42
	.byte	0x8
	.byte	0x1d
	.long	0x106c
	.byte	0x50
	.uleb128 0x11
	.long	.LASF43
	.byte	0x8
	.byte	0x1e
	.long	0x106c
	.byte	0x58
	.byte	0
	.uleb128 0xf
	.long	.LASF44
	.byte	0x6
	.value	0x7d7
	.long	0x2c1
	.uleb128 0x12
	.long	.LASF45
	.byte	0x30
	.byte	0x7
	.byte	0xe6
	.long	0x33a
	.uleb128 0x11
	.long	.LASF28
	.byte	0x7
	.byte	0xe7
	.long	0x11c7
	.byte	0
	.uleb128 0x11
	.long	.LASF29
	.byte	0x7
	.byte	0xe7
	.long	0x11c7
	.byte	0x8
	.uleb128 0x11
	.long	.LASF30
	.byte	0x7
	.byte	0xe7
	.long	0x1bca
	.byte	0x10
	.uleb128 0x11
	.long	.LASF31
	.byte	0x7
	.byte	0xe7
	.long	0x1240
	.byte	0x18
	.uleb128 0x11
	.long	.LASF32
	.byte	0x7
	.byte	0xe7
	.long	0x102e
	.byte	0x20
	.uleb128 0x11
	.long	.LASF33
	.byte	0x7
	.byte	0xe7
	.long	0x102e
	.byte	0x22
	.uleb128 0x11
	.long	.LASF34
	.byte	0x7
	.byte	0xe7
	.long	0x1024
	.byte	0x24
	.uleb128 0x11
	.long	.LASF35
	.byte	0x7
	.byte	0xe7
	.long	0x1024
	.byte	0x25
	.uleb128 0x11
	.long	.LASF46
	.byte	0x7
	.byte	0xe8
	.long	0x11c7
	.byte	0x28
	.byte	0
	.uleb128 0xf
	.long	.LASF47
	.byte	0x6
	.value	0x7db
	.long	0x346
	.uleb128 0x12
	.long	.LASF48
	.byte	0x70
	.byte	0x7
	.byte	0xfd
	.long	0x434
	.uleb128 0x11
	.long	.LASF28
	.byte	0x7
	.byte	0xfe
	.long	0x11c7
	.byte	0
	.uleb128 0x11
	.long	.LASF29
	.byte	0x7
	.byte	0xfe
	.long	0x11c7
	.byte	0x8
	.uleb128 0x11
	.long	.LASF30
	.byte	0x7
	.byte	0xfe
	.long	0x1bca
	.byte	0x10
	.uleb128 0x11
	.long	.LASF31
	.byte	0x7
	.byte	0xfe
	.long	0x1240
	.byte	0x18
	.uleb128 0x11
	.long	.LASF32
	.byte	0x7
	.byte	0xfe
	.long	0x102e
	.byte	0x20
	.uleb128 0x11
	.long	.LASF33
	.byte	0x7
	.byte	0xfe
	.long	0x102e
	.byte	0x22
	.uleb128 0x11
	.long	.LASF34
	.byte	0x7
	.byte	0xfe
	.long	0x1024
	.byte	0x24
	.uleb128 0x11
	.long	.LASF35
	.byte	0x7
	.byte	0xfe
	.long	0x1024
	.byte	0x25
	.uleb128 0x11
	.long	.LASF46
	.byte	0x7
	.byte	0xff
	.long	0x11c7
	.byte	0x28
	.uleb128 0x13
	.long	.LASF49
	.byte	0x7
	.value	0x100
	.long	0x11c7
	.byte	0x30
	.uleb128 0x13
	.long	.LASF50
	.byte	0x7
	.value	0x101
	.long	0x11c7
	.byte	0x38
	.uleb128 0x13
	.long	.LASF51
	.byte	0x7
	.value	0x102
	.long	0x11c7
	.byte	0x40
	.uleb128 0x13
	.long	.LASF52
	.byte	0x7
	.value	0x103
	.long	0x1bd0
	.byte	0x48
	.uleb128 0x13
	.long	.LASF53
	.byte	0x7
	.value	0x107
	.long	0x1bd6
	.byte	0x50
	.uleb128 0x13
	.long	.LASF54
	.byte	0x7
	.value	0x109
	.long	0x1044
	.byte	0x58
	.uleb128 0x13
	.long	.LASF55
	.byte	0x7
	.value	0x10a
	.long	0x1044
	.byte	0x5c
	.uleb128 0x13
	.long	.LASF56
	.byte	0x7
	.value	0x10b
	.long	0x1024
	.byte	0x60
	.uleb128 0x13
	.long	.LASF57
	.byte	0x7
	.value	0x10f
	.long	0x11af
	.byte	0x68
	.byte	0
	.uleb128 0xf
	.long	.LASF58
	.byte	0x6
	.value	0x7e1
	.long	0x440
	.uleb128 0x14
	.long	.LASF59
	.byte	0x1
	.byte	0x6
	.value	0xea7
	.long	0x45b
	.uleb128 0x13
	.long	.LASF60
	.byte	0x6
	.value	0xea8
	.long	0x7f
	.byte	0
	.byte	0
	.uleb128 0xe
	.string	"SV"
	.byte	0x6
	.value	0x7ea
	.long	0x466
	.uleb128 0x10
	.string	"sv"
	.byte	0x10
	.byte	0x9
	.byte	0x43
	.long	0x496
	.uleb128 0x11
	.long	.LASF61
	.byte	0x9
	.byte	0x44
	.long	0x6c
	.byte	0
	.uleb128 0x11
	.long	.LASF62
	.byte	0x9
	.byte	0x45
	.long	0x1044
	.byte	0x8
	.uleb128 0x11
	.long	.LASF63
	.byte	0x9
	.byte	0x46
	.long	0x1044
	.byte	0xc
	.byte	0
	.uleb128 0xe
	.string	"AV"
	.byte	0x6
	.value	0x7eb
	.long	0x4a1
	.uleb128 0x10
	.string	"av"
	.byte	0x10
	.byte	0x9
	.byte	0x55
	.long	0x4d1
	.uleb128 0x11
	.long	.LASF61
	.byte	0x9
	.byte	0x56
	.long	0x1197
	.byte	0
	.uleb128 0x11
	.long	.LASF62
	.byte	0x9
	.byte	0x57
	.long	0x1044
	.byte	0x8
	.uleb128 0x11
	.long	.LASF63
	.byte	0x9
	.byte	0x58
	.long	0x1044
	.byte	0xc
	.byte	0
	.uleb128 0xe
	.string	"HV"
	.byte	0x6
	.value	0x7ec
	.long	0x4dc
	.uleb128 0x10
	.string	"hv"
	.byte	0x10
	.byte	0x9
	.byte	0x5b
	.long	0x50c
	.uleb128 0x11
	.long	.LASF61
	.byte	0x9
	.byte	0x5c
	.long	0x119d
	.byte	0
	.uleb128 0x11
	.long	.LASF62
	.byte	0x9
	.byte	0x5d
	.long	0x1044
	.byte	0x8
	.uleb128 0x11
	.long	.LASF63
	.byte	0x9
	.byte	0x5e
	.long	0x1044
	.byte	0xc
	.byte	0
	.uleb128 0xe
	.string	"CV"
	.byte	0x6
	.value	0x7ed
	.long	0x517
	.uleb128 0x10
	.string	"cv"
	.byte	0x10
	.byte	0x9
	.byte	0x4f
	.long	0x547
	.uleb128 0x11
	.long	.LASF61
	.byte	0x9
	.byte	0x50
	.long	0x1191
	.byte	0
	.uleb128 0x11
	.long	.LASF62
	.byte	0x9
	.byte	0x51
	.long	0x1044
	.byte	0x8
	.uleb128 0x11
	.long	.LASF63
	.byte	0x9
	.byte	0x52
	.long	0x1044
	.byte	0xc
	.byte	0
	.uleb128 0xf
	.long	.LASF64
	.byte	0x6
	.value	0x7ee
	.long	0x553
	.uleb128 0x12
	.long	.LASF65
	.byte	0x68
	.byte	0xa
	.byte	0x1f
	.long	0x62c
	.uleb128 0x11
	.long	.LASF66
	.byte	0xa
	.byte	0x20
	.long	0x10df
	.byte	0
	.uleb128 0x11
	.long	.LASF67
	.byte	0xa
	.byte	0x21
	.long	0x10df
	.byte	0x8
	.uleb128 0x11
	.long	.LASF68
	.byte	0xa
	.byte	0x22
	.long	0x10e5
	.byte	0x10
	.uleb128 0x11
	.long	.LASF69
	.byte	0xa
	.byte	0x23
	.long	0x10f0
	.byte	0x18
	.uleb128 0x11
	.long	.LASF70
	.byte	0xa
	.byte	0x24
	.long	0x79
	.byte	0x20
	.uleb128 0x11
	.long	.LASF71
	.byte	0xa
	.byte	0x25
	.long	0x10fb
	.byte	0x28
	.uleb128 0x11
	.long	.LASF72
	.byte	0xa
	.byte	0x26
	.long	0x79
	.byte	0x30
	.uleb128 0x11
	.long	.LASF73
	.byte	0xa
	.byte	0x28
	.long	0x1101
	.byte	0x38
	.uleb128 0x11
	.long	.LASF74
	.byte	0xa
	.byte	0x29
	.long	0x1039
	.byte	0x40
	.uleb128 0x11
	.long	.LASF75
	.byte	0xa
	.byte	0x2a
	.long	0x1039
	.byte	0x44
	.uleb128 0x11
	.long	.LASF76
	.byte	0xa
	.byte	0x2b
	.long	0x1039
	.byte	0x48
	.uleb128 0x11
	.long	.LASF77
	.byte	0xa
	.byte	0x2c
	.long	0x1039
	.byte	0x4c
	.uleb128 0x11
	.long	.LASF78
	.byte	0xa
	.byte	0x2d
	.long	0x1044
	.byte	0x50
	.uleb128 0x11
	.long	.LASF79
	.byte	0xa
	.byte	0x2e
	.long	0x1044
	.byte	0x54
	.uleb128 0x11
	.long	.LASF80
	.byte	0xa
	.byte	0x2f
	.long	0x1044
	.byte	0x58
	.uleb128 0x11
	.long	.LASF81
	.byte	0xa
	.byte	0x30
	.long	0x1044
	.byte	0x5c
	.uleb128 0x11
	.long	.LASF82
	.byte	0xa
	.byte	0x32
	.long	0x1107
	.byte	0x60
	.byte	0
	.uleb128 0xe
	.string	"GP"
	.byte	0x6
	.value	0x7ef
	.long	0x637
	.uleb128 0x10
	.string	"gp"
	.byte	0x58
	.byte	0xb
	.byte	0xb
	.long	0x6d3
	.uleb128 0x11
	.long	.LASF83
	.byte	0xb
	.byte	0xc
	.long	0x106c
	.byte	0
	.uleb128 0x11
	.long	.LASF84
	.byte	0xb
	.byte	0xd
	.long	0x1044
	.byte	0x8
	.uleb128 0x11
	.long	.LASF85
	.byte	0xb
	.byte	0xe
	.long	0x1224
	.byte	0x10
	.uleb128 0x11
	.long	.LASF86
	.byte	0xb
	.byte	0xf
	.long	0x11d8
	.byte	0x18
	.uleb128 0x11
	.long	.LASF87
	.byte	0xb
	.byte	0x10
	.long	0x11ea
	.byte	0x20
	.uleb128 0x11
	.long	.LASF88
	.byte	0xb
	.byte	0x11
	.long	0x11af
	.byte	0x28
	.uleb128 0x11
	.long	.LASF89
	.byte	0xb
	.byte	0x12
	.long	0x11e4
	.byte	0x30
	.uleb128 0x11
	.long	.LASF90
	.byte	0xb
	.byte	0x13
	.long	0x11d8
	.byte	0x38
	.uleb128 0x11
	.long	.LASF91
	.byte	0xb
	.byte	0x14
	.long	0x1044
	.byte	0x40
	.uleb128 0x11
	.long	.LASF92
	.byte	0xb
	.byte	0x15
	.long	0x1044
	.byte	0x44
	.uleb128 0x11
	.long	.LASF93
	.byte	0xb
	.byte	0x16
	.long	0x104f
	.byte	0x48
	.uleb128 0x11
	.long	.LASF94
	.byte	0xb
	.byte	0x17
	.long	0x79
	.byte	0x50
	.byte	0
	.uleb128 0xe
	.string	"GV"
	.byte	0x6
	.value	0x7f0
	.long	0x6de
	.uleb128 0x10
	.string	"gv"
	.byte	0x10
	.byte	0x9
	.byte	0x49
	.long	0x70e
	.uleb128 0x11
	.long	.LASF61
	.byte	0x9
	.byte	0x4a
	.long	0x118b
	.byte	0
	.uleb128 0x11
	.long	.LASF62
	.byte	0x9
	.byte	0x4b
	.long	0x1044
	.byte	0x8
	.uleb128 0x11
	.long	.LASF63
	.byte	0x9
	.byte	0x4c
	.long	0x1044
	.byte	0xc
	.byte	0
	.uleb128 0xe
	.string	"IO"
	.byte	0x6
	.value	0x7f1
	.long	0x719
	.uleb128 0x10
	.string	"io"
	.byte	0x10
	.byte	0x9
	.byte	0x61
	.long	0x749
	.uleb128 0x11
	.long	.LASF61
	.byte	0x9
	.byte	0x62
	.long	0x11a3
	.byte	0
	.uleb128 0x11
	.long	.LASF62
	.byte	0x9
	.byte	0x63
	.long	0x1044
	.byte	0x8
	.uleb128 0x11
	.long	.LASF63
	.byte	0x9
	.byte	0x64
	.long	0x1044
	.byte	0xc
	.byte	0
	.uleb128 0xf
	.long	.LASF95
	.byte	0x6
	.value	0x7f2
	.long	0x755
	.uleb128 0x14
	.long	.LASF96
	.byte	0x90
	.byte	0x8
	.value	0x1a2
	.long	0x77d
	.uleb128 0x13
	.long	.LASF97
	.byte	0x8
	.value	0x1a3
	.long	0x1044
	.byte	0
	.uleb128 0x13
	.long	.LASF98
	.byte	0x8
	.value	0x1a7
	.long	0x1e3d
	.byte	0x8
	.byte	0
	.uleb128 0x14
	.long	.LASF99
	.byte	0x88
	.byte	0x8
	.value	0x130
	.long	0x7f3
	.uleb128 0x13
	.long	.LASF100
	.byte	0x8
	.value	0x131
	.long	0x1039
	.byte	0
	.uleb128 0x13
	.long	.LASF101
	.byte	0x8
	.value	0x132
	.long	0x1d73
	.byte	0x8
	.uleb128 0x13
	.long	.LASF102
	.byte	0x8
	.value	0x133
	.long	0x1039
	.byte	0x10
	.uleb128 0x13
	.long	.LASF103
	.byte	0x8
	.value	0x134
	.long	0x1039
	.byte	0x14
	.uleb128 0x13
	.long	.LASF104
	.byte	0x8
	.value	0x135
	.long	0x1039
	.byte	0x18
	.uleb128 0x13
	.long	.LASF105
	.byte	0x8
	.value	0x136
	.long	0x1bd0
	.byte	0x20
	.uleb128 0x13
	.long	.LASF106
	.byte	0x8
	.value	0x137
	.long	0x1024
	.byte	0x28
	.uleb128 0x13
	.long	.LASF107
	.byte	0x8
	.value	0x13d
	.long	0x1d45
	.byte	0x30
	.byte	0
	.uleb128 0xf
	.long	.LASF108
	.byte	0x6
	.value	0x7f5
	.long	0x7ff
	.uleb128 0x12
	.long	.LASF109
	.byte	0x30
	.byte	0xc
	.byte	0x1a
	.long	0x86c
	.uleb128 0x11
	.long	.LASF110
	.byte	0xc
	.byte	0x1b
	.long	0x11a9
	.byte	0
	.uleb128 0x11
	.long	.LASF111
	.byte	0xc
	.byte	0x1c
	.long	0x1fec
	.byte	0x8
	.uleb128 0x11
	.long	.LASF112
	.byte	0xc
	.byte	0x1d
	.long	0x102e
	.byte	0x10
	.uleb128 0x11
	.long	.LASF113
	.byte	0xc
	.byte	0x1e
	.long	0x7f
	.byte	0x12
	.uleb128 0x11
	.long	.LASF114
	.byte	0xc
	.byte	0x1f
	.long	0x1024
	.byte	0x13
	.uleb128 0x11
	.long	.LASF115
	.byte	0xc
	.byte	0x20
	.long	0x106c
	.byte	0x18
	.uleb128 0x11
	.long	.LASF116
	.byte	0xc
	.byte	0x21
	.long	0x79
	.byte	0x20
	.uleb128 0x11
	.long	.LASF117
	.byte	0xc
	.byte	0x22
	.long	0x1039
	.byte	0x28
	.byte	0
	.uleb128 0xe
	.string	"XRV"
	.byte	0x6
	.value	0x7f6
	.long	0x878
	.uleb128 0x10
	.string	"xrv"
	.byte	0x8
	.byte	0x9
	.byte	0xf5
	.long	0x891
	.uleb128 0x11
	.long	.LASF118
	.byte	0x9
	.byte	0xf6
	.long	0x106c
	.byte	0
	.byte	0
	.uleb128 0xe
	.string	"XPV"
	.byte	0x6
	.value	0x7f7
	.long	0x89d
	.uleb128 0x10
	.string	"xpv"
	.byte	0x18
	.byte	0x9
	.byte	0xf9
	.long	0x8ce
	.uleb128 0x11
	.long	.LASF119
	.byte	0x9
	.byte	0xfa
	.long	0x79
	.byte	0
	.uleb128 0x11
	.long	.LASF120
	.byte	0x9
	.byte	0xfb
	.long	0x159
	.byte	0x8
	.uleb128 0x11
	.long	.LASF121
	.byte	0x9
	.byte	0xfc
	.long	0x159
	.byte	0x10
	.byte	0
	.uleb128 0xf
	.long	.LASF122
	.byte	0x6
	.value	0x7f8
	.long	0x8da
	.uleb128 0x12
	.long	.LASF123
	.byte	0x20
	.byte	0x9
	.byte	0xff
	.long	0x91b
	.uleb128 0x13
	.long	.LASF119
	.byte	0x9
	.value	0x100
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF120
	.byte	0x9
	.value	0x101
	.long	0x159
	.byte	0x8
	.uleb128 0x13
	.long	.LASF121
	.byte	0x9
	.value	0x102
	.long	0x159
	.byte	0x10
	.uleb128 0x13
	.long	.LASF124
	.byte	0x9
	.value	0x103
	.long	0x131
	.byte	0x18
	.byte	0
	.uleb128 0xf
	.long	.LASF125
	.byte	0x6
	.value	0x7f9
	.long	0x927
	.uleb128 0x14
	.long	.LASF126
	.byte	0x20
	.byte	0x9
	.value	0x106
	.long	0x969
	.uleb128 0x13
	.long	.LASF119
	.byte	0x9
	.value	0x107
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF120
	.byte	0x9
	.value	0x108
	.long	0x159
	.byte	0x8
	.uleb128 0x13
	.long	.LASF121
	.byte	0x9
	.value	0x109
	.long	0x159
	.byte	0x10
	.uleb128 0x13
	.long	.LASF127
	.byte	0x9
	.value	0x10a
	.long	0x13c
	.byte	0x18
	.byte	0
	.uleb128 0xf
	.long	.LASF128
	.byte	0x6
	.value	0x7fa
	.long	0x975
	.uleb128 0x14
	.long	.LASF129
	.byte	0x28
	.byte	0x9
	.value	0x10d
	.long	0x9c4
	.uleb128 0x13
	.long	.LASF119
	.byte	0x9
	.value	0x10e
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF120
	.byte	0x9
	.value	0x10f
	.long	0x159
	.byte	0x8
	.uleb128 0x13
	.long	.LASF121
	.byte	0x9
	.value	0x110
	.long	0x159
	.byte	0x10
	.uleb128 0x13
	.long	.LASF124
	.byte	0x9
	.value	0x111
	.long	0x131
	.byte	0x18
	.uleb128 0x13
	.long	.LASF130
	.byte	0x9
	.value	0x112
	.long	0x147
	.byte	0x20
	.byte	0
	.uleb128 0xf
	.long	.LASF131
	.byte	0x6
	.value	0x7fb
	.long	0x9d0
	.uleb128 0x14
	.long	.LASF132
	.byte	0x38
	.byte	0x9
	.value	0x116
	.long	0xa39
	.uleb128 0x13
	.long	.LASF119
	.byte	0x9
	.value	0x117
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF120
	.byte	0x9
	.value	0x118
	.long	0x159
	.byte	0x8
	.uleb128 0x13
	.long	.LASF121
	.byte	0x9
	.value	0x119
	.long	0x159
	.byte	0x10
	.uleb128 0x13
	.long	.LASF124
	.byte	0x9
	.value	0x11a
	.long	0x131
	.byte	0x18
	.uleb128 0x13
	.long	.LASF130
	.byte	0x9
	.value	0x11b
	.long	0x147
	.byte	0x20
	.uleb128 0x13
	.long	.LASF133
	.byte	0x9
	.value	0x11c
	.long	0x11a9
	.byte	0x28
	.uleb128 0x13
	.long	.LASF134
	.byte	0x9
	.value	0x11d
	.long	0x11af
	.byte	0x30
	.byte	0
	.uleb128 0xf
	.long	.LASF135
	.byte	0x6
	.value	0x7fc
	.long	0xa45
	.uleb128 0x14
	.long	.LASF136
	.byte	0x58
	.byte	0x9
	.value	0x120
	.long	0xae2
	.uleb128 0x13
	.long	.LASF119
	.byte	0x9
	.value	0x121
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF120
	.byte	0x9
	.value	0x122
	.long	0x159
	.byte	0x8
	.uleb128 0x13
	.long	.LASF121
	.byte	0x9
	.value	0x123
	.long	0x159
	.byte	0x10
	.uleb128 0x13
	.long	.LASF124
	.byte	0x9
	.value	0x124
	.long	0x131
	.byte	0x18
	.uleb128 0x13
	.long	.LASF130
	.byte	0x9
	.value	0x125
	.long	0x147
	.byte	0x20
	.uleb128 0x13
	.long	.LASF133
	.byte	0x9
	.value	0x126
	.long	0x11a9
	.byte	0x28
	.uleb128 0x13
	.long	.LASF134
	.byte	0x9
	.value	0x127
	.long	0x11af
	.byte	0x30
	.uleb128 0x13
	.long	.LASF137
	.byte	0x9
	.value	0x129
	.long	0x159
	.byte	0x38
	.uleb128 0x13
	.long	.LASF138
	.byte	0x9
	.value	0x12a
	.long	0x159
	.byte	0x40
	.uleb128 0x13
	.long	.LASF139
	.byte	0x9
	.value	0x12b
	.long	0x106c
	.byte	0x48
	.uleb128 0x13
	.long	.LASF140
	.byte	0x9
	.value	0x12c
	.long	0x7f
	.byte	0x50
	.byte	0
	.uleb128 0xf
	.long	.LASF141
	.byte	0x6
	.value	0x7fd
	.long	0xaee
	.uleb128 0x12
	.long	.LASF142
	.byte	0x50
	.byte	0xd
	.byte	0xb
	.long	0xb73
	.uleb128 0x11
	.long	.LASF143
	.byte	0xd
	.byte	0xc
	.long	0x79
	.byte	0
	.uleb128 0x11
	.long	.LASF144
	.byte	0xd
	.byte	0xd
	.long	0x86
	.byte	0x8
	.uleb128 0x11
	.long	.LASF145
	.byte	0xd
	.byte	0xe
	.long	0x86
	.byte	0x10
	.uleb128 0x11
	.long	.LASF146
	.byte	0xd
	.byte	0xf
	.long	0x131
	.byte	0x18
	.uleb128 0x11
	.long	.LASF130
	.byte	0xd
	.byte	0x10
	.long	0x147
	.byte	0x20
	.uleb128 0x11
	.long	.LASF133
	.byte	0xd
	.byte	0x11
	.long	0x11a9
	.byte	0x28
	.uleb128 0x11
	.long	.LASF134
	.byte	0xd
	.byte	0x12
	.long	0x11af
	.byte	0x30
	.uleb128 0x11
	.long	.LASF147
	.byte	0xd
	.byte	0x14
	.long	0x1d3f
	.byte	0x38
	.uleb128 0x11
	.long	.LASF148
	.byte	0xd
	.byte	0x15
	.long	0x106c
	.byte	0x40
	.uleb128 0x11
	.long	.LASF149
	.byte	0xd
	.byte	0x16
	.long	0x1024
	.byte	0x48
	.byte	0
	.uleb128 0xf
	.long	.LASF150
	.byte	0x6
	.value	0x7fe
	.long	0xb7f
	.uleb128 0x12
	.long	.LASF151
	.byte	0x58
	.byte	0xe
	.byte	0x22
	.long	0xc10
	.uleb128 0x11
	.long	.LASF152
	.byte	0xe
	.byte	0x23
	.long	0x79
	.byte	0
	.uleb128 0x11
	.long	.LASF153
	.byte	0xe
	.byte	0x24
	.long	0x159
	.byte	0x8
	.uleb128 0x11
	.long	.LASF154
	.byte	0xe
	.byte	0x25
	.long	0x159
	.byte	0x10
	.uleb128 0x11
	.long	.LASF155
	.byte	0xe
	.byte	0x26
	.long	0x131
	.byte	0x18
	.uleb128 0x11
	.long	.LASF130
	.byte	0xe
	.byte	0x27
	.long	0x147
	.byte	0x20
	.uleb128 0x11
	.long	.LASF133
	.byte	0xe
	.byte	0x29
	.long	0x11a9
	.byte	0x28
	.uleb128 0x11
	.long	.LASF134
	.byte	0xe
	.byte	0x2a
	.long	0x11af
	.byte	0x30
	.uleb128 0x11
	.long	.LASF156
	.byte	0xe
	.byte	0x2c
	.long	0x1039
	.byte	0x38
	.uleb128 0x11
	.long	.LASF157
	.byte	0xe
	.byte	0x2d
	.long	0x1f63
	.byte	0x40
	.uleb128 0x11
	.long	.LASF158
	.byte	0xe
	.byte	0x2e
	.long	0x1bd0
	.byte	0x48
	.uleb128 0x11
	.long	.LASF159
	.byte	0xe
	.byte	0x2f
	.long	0x79
	.byte	0x50
	.byte	0
	.uleb128 0xf
	.long	.LASF160
	.byte	0x6
	.value	0x7ff
	.long	0xc1c
	.uleb128 0x14
	.long	.LASF161
	.byte	0x60
	.byte	0x9
	.value	0x130
	.long	0xcc6
	.uleb128 0x13
	.long	.LASF119
	.byte	0x9
	.value	0x131
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF120
	.byte	0x9
	.value	0x132
	.long	0x159
	.byte	0x8
	.uleb128 0x13
	.long	.LASF121
	.byte	0x9
	.value	0x133
	.long	0x159
	.byte	0x10
	.uleb128 0x13
	.long	.LASF124
	.byte	0x9
	.value	0x134
	.long	0x131
	.byte	0x18
	.uleb128 0x13
	.long	.LASF130
	.byte	0x9
	.value	0x135
	.long	0x147
	.byte	0x20
	.uleb128 0x13
	.long	.LASF133
	.byte	0x9
	.value	0x136
	.long	0x11a9
	.byte	0x28
	.uleb128 0x13
	.long	.LASF134
	.byte	0x9
	.value	0x137
	.long	0x11af
	.byte	0x30
	.uleb128 0x13
	.long	.LASF162
	.byte	0x9
	.value	0x139
	.long	0x11b5
	.byte	0x38
	.uleb128 0x13
	.long	.LASF163
	.byte	0x9
	.value	0x13a
	.long	0x79
	.byte	0x40
	.uleb128 0x13
	.long	.LASF164
	.byte	0x9
	.value	0x13b
	.long	0x159
	.byte	0x48
	.uleb128 0x13
	.long	.LASF165
	.byte	0x9
	.value	0x13c
	.long	0x11af
	.byte	0x50
	.uleb128 0x13
	.long	.LASF166
	.byte	0x9
	.value	0x13d
	.long	0x1024
	.byte	0x58
	.byte	0
	.uleb128 0xf
	.long	.LASF167
	.byte	0x6
	.value	0x800
	.long	0xcd2
	.uleb128 0x12
	.long	.LASF168
	.byte	0x90
	.byte	0xf
	.byte	0xe
	.long	0xdc3
	.uleb128 0x11
	.long	.LASF119
	.byte	0xf
	.byte	0xf
	.long	0x79
	.byte	0
	.uleb128 0x11
	.long	.LASF120
	.byte	0xf
	.byte	0x10
	.long	0x159
	.byte	0x8
	.uleb128 0x11
	.long	.LASF121
	.byte	0xf
	.byte	0x11
	.long	0x159
	.byte	0x10
	.uleb128 0x11
	.long	.LASF146
	.byte	0xf
	.byte	0x12
	.long	0x131
	.byte	0x18
	.uleb128 0x11
	.long	.LASF130
	.byte	0xf
	.byte	0x13
	.long	0x147
	.byte	0x20
	.uleb128 0x11
	.long	.LASF133
	.byte	0xf
	.byte	0x14
	.long	0x11a9
	.byte	0x28
	.uleb128 0x11
	.long	.LASF134
	.byte	0xf
	.byte	0x15
	.long	0x11af
	.byte	0x30
	.uleb128 0x11
	.long	.LASF169
	.byte	0xf
	.byte	0x17
	.long	0x11af
	.byte	0x38
	.uleb128 0x11
	.long	.LASF170
	.byte	0xf
	.byte	0x18
	.long	0x11c7
	.byte	0x40
	.uleb128 0x11
	.long	.LASF171
	.byte	0xf
	.byte	0x19
	.long	0x11c7
	.byte	0x48
	.uleb128 0x11
	.long	.LASF172
	.byte	0xf
	.byte	0x1a
	.long	0x11de
	.byte	0x50
	.uleb128 0x11
	.long	.LASF173
	.byte	0xf
	.byte	0x1b
	.long	0xf75
	.byte	0x58
	.uleb128 0x11
	.long	.LASF174
	.byte	0xf
	.byte	0x1c
	.long	0x11e4
	.byte	0x60
	.uleb128 0x11
	.long	.LASF175
	.byte	0xf
	.byte	0x1d
	.long	0x79
	.byte	0x68
	.uleb128 0x11
	.long	.LASF176
	.byte	0xf
	.byte	0x1e
	.long	0x5e
	.byte	0x70
	.uleb128 0x11
	.long	.LASF177
	.byte	0xf
	.byte	0x1f
	.long	0x124b
	.byte	0x78
	.uleb128 0x11
	.long	.LASF178
	.byte	0xf
	.byte	0x20
	.long	0x11d8
	.byte	0x80
	.uleb128 0x11
	.long	.LASF179
	.byte	0xf
	.byte	0x25
	.long	0x11bb
	.byte	0x88
	.uleb128 0x11
	.long	.LASF180
	.byte	0xf
	.byte	0x26
	.long	0x1044
	.byte	0x8c
	.byte	0
	.uleb128 0xf
	.long	.LASF181
	.byte	0x6
	.value	0x803
	.long	0xdcf
	.uleb128 0x14
	.long	.LASF182
	.byte	0xa8
	.byte	0x9
	.value	0x170
	.long	0xf08
	.uleb128 0x13
	.long	.LASF119
	.byte	0x9
	.value	0x171
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF120
	.byte	0x9
	.value	0x172
	.long	0x159
	.byte	0x8
	.uleb128 0x13
	.long	.LASF121
	.byte	0x9
	.value	0x173
	.long	0x159
	.byte	0x10
	.uleb128 0x13
	.long	.LASF124
	.byte	0x9
	.value	0x174
	.long	0x131
	.byte	0x18
	.uleb128 0x13
	.long	.LASF130
	.byte	0x9
	.value	0x175
	.long	0x147
	.byte	0x20
	.uleb128 0x13
	.long	.LASF133
	.byte	0x9
	.value	0x176
	.long	0x11a9
	.byte	0x28
	.uleb128 0x13
	.long	.LASF134
	.byte	0x9
	.value	0x177
	.long	0x11af
	.byte	0x30
	.uleb128 0x13
	.long	.LASF183
	.byte	0x9
	.value	0x179
	.long	0x1218
	.byte	0x38
	.uleb128 0x13
	.long	.LASF184
	.byte	0x9
	.value	0x17a
	.long	0x1218
	.byte	0x40
	.uleb128 0x13
	.long	.LASF185
	.byte	0x9
	.value	0x187
	.long	0x11f0
	.byte	0x48
	.uleb128 0x13
	.long	.LASF186
	.byte	0x9
	.value	0x188
	.long	0x131
	.byte	0x50
	.uleb128 0x13
	.long	.LASF187
	.byte	0x9
	.value	0x189
	.long	0x131
	.byte	0x58
	.uleb128 0x13
	.long	.LASF188
	.byte	0x9
	.value	0x18a
	.long	0x131
	.byte	0x60
	.uleb128 0x13
	.long	.LASF189
	.byte	0x9
	.value	0x18b
	.long	0x131
	.byte	0x68
	.uleb128 0x13
	.long	.LASF190
	.byte	0x9
	.value	0x18c
	.long	0x79
	.byte	0x70
	.uleb128 0x13
	.long	.LASF191
	.byte	0x9
	.value	0x18d
	.long	0x11e4
	.byte	0x78
	.uleb128 0x13
	.long	.LASF192
	.byte	0x9
	.value	0x18e
	.long	0x79
	.byte	0x80
	.uleb128 0x13
	.long	.LASF193
	.byte	0x9
	.value	0x18f
	.long	0x11e4
	.byte	0x88
	.uleb128 0x13
	.long	.LASF194
	.byte	0x9
	.value	0x190
	.long	0x79
	.byte	0x90
	.uleb128 0x13
	.long	.LASF195
	.byte	0x9
	.value	0x191
	.long	0x11e4
	.byte	0x98
	.uleb128 0x13
	.long	.LASF196
	.byte	0x9
	.value	0x192
	.long	0x50
	.byte	0xa0
	.uleb128 0x13
	.long	.LASF197
	.byte	0x9
	.value	0x193
	.long	0x7f
	.byte	0xa2
	.uleb128 0x13
	.long	.LASF198
	.byte	0x9
	.value	0x194
	.long	0x7f
	.byte	0xa3
	.byte	0
	.uleb128 0xf
	.long	.LASF199
	.byte	0x6
	.value	0x804
	.long	0xf14
	.uleb128 0x12
	.long	.LASF200
	.byte	0x38
	.byte	0xc
	.byte	0xe
	.long	0xf75
	.uleb128 0x11
	.long	.LASF201
	.byte	0xc
	.byte	0xf
	.long	0x1f83
	.byte	0
	.uleb128 0x11
	.long	.LASF202
	.byte	0xc
	.byte	0x10
	.long	0x1f83
	.byte	0x8
	.uleb128 0x11
	.long	.LASF203
	.byte	0xc
	.byte	0x11
	.long	0x1f9d
	.byte	0x10
	.uleb128 0x11
	.long	.LASF204
	.byte	0xc
	.byte	0x12
	.long	0x1f83
	.byte	0x18
	.uleb128 0x11
	.long	.LASF205
	.byte	0xc
	.byte	0x13
	.long	0x1f83
	.byte	0x20
	.uleb128 0x11
	.long	.LASF206
	.byte	0xc
	.byte	0x14
	.long	0x1fc6
	.byte	0x28
	.uleb128 0x11
	.long	.LASF207
	.byte	0xc
	.byte	0x16
	.long	0x1fe6
	.byte	0x30
	.byte	0
	.uleb128 0xe
	.string	"ANY"
	.byte	0x6
	.value	0x805
	.long	0xf81
	.uleb128 0x15
	.string	"any"
	.byte	0x8
	.byte	0x6
	.value	0x9f1
	.long	0xfe3
	.uleb128 0x16
	.long	.LASF208
	.byte	0x6
	.value	0x9f2
	.long	0x6c
	.uleb128 0x16
	.long	.LASF209
	.byte	0x6
	.value	0x9f3
	.long	0x1039
	.uleb128 0x16
	.long	.LASF210
	.byte	0x6
	.value	0x9f4
	.long	0x131
	.uleb128 0x16
	.long	.LASF211
	.byte	0x6
	.value	0x9f5
	.long	0x5e
	.uleb128 0x16
	.long	.LASF212
	.byte	0x6
	.value	0x9f6
	.long	0x7f
	.uleb128 0x16
	.long	.LASF213
	.byte	0x6
	.value	0x9f7
	.long	0x1066
	.uleb128 0x16
	.long	.LASF214
	.byte	0x6
	.value	0x9f8
	.long	0x1066
	.byte	0
	.uleb128 0xf
	.long	.LASF215
	.byte	0x6
	.value	0x808
	.long	0xfef
	.uleb128 0x14
	.long	.LASF216
	.byte	0x18
	.byte	0x9
	.value	0x4ed
	.long	0x1024
	.uleb128 0x13
	.long	.LASF217
	.byte	0x9
	.value	0x4ee
	.long	0x11ea
	.byte	0
	.uleb128 0x13
	.long	.LASF218
	.byte	0x9
	.value	0x4ef
	.long	0x13c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF219
	.byte	0x9
	.value	0x4f0
	.long	0x121e
	.byte	0x10
	.byte	0
	.uleb128 0xc
	.string	"U8"
	.byte	0x10
	.byte	0x85
	.long	0x2d
	.uleb128 0xc
	.string	"U16"
	.byte	0x10
	.byte	0x87
	.long	0x34
	.uleb128 0xc
	.string	"I32"
	.byte	0x10
	.byte	0x88
	.long	0x57
	.uleb128 0xc
	.string	"U32"
	.byte	0x10
	.byte	0x89
	.long	0x3b
	.uleb128 0xf
	.long	.LASF220
	.byte	0x10
	.value	0x209
	.long	0x1044
	.uleb128 0x17
	.long	0x1066
	.uleb128 0x18
	.long	0x6c
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x105b
	.uleb128 0x6
	.byte	0x8
	.long	0x45b
	.uleb128 0xa
	.long	0x7f
	.long	0x1082
	.uleb128 0xb
	.long	0x65
	.byte	0
	.byte	0
	.uleb128 0x5
	.long	.LASF221
	.byte	0x11
	.byte	0x63
	.long	0x108d
	.uleb128 0xd
	.long	.LASF223
	.uleb128 0x5
	.long	.LASF224
	.byte	0x11
	.byte	0x65
	.long	0x109d
	.uleb128 0x6
	.byte	0x8
	.long	0x1082
	.uleb128 0x12
	.long	.LASF225
	.byte	0x4
	.byte	0xa
	.byte	0x13
	.long	0x10d4
	.uleb128 0x11
	.long	.LASF218
	.byte	0xa
	.byte	0x14
	.long	0x1024
	.byte	0
	.uleb128 0x11
	.long	.LASF226
	.byte	0xa
	.byte	0x15
	.long	0x1024
	.byte	0x1
	.uleb128 0x11
	.long	.LASF227
	.byte	0xa
	.byte	0x16
	.long	0x102e
	.byte	0x2
	.byte	0
	.uleb128 0x5
	.long	.LASF225
	.byte	0xa
	.byte	0x19
	.long	0x10a3
	.uleb128 0x6
	.byte	0x8
	.long	0x1039
	.uleb128 0x6
	.byte	0x8
	.long	0x10d4
	.uleb128 0xd
	.long	.LASF228
	.uleb128 0x6
	.byte	0x8
	.long	0x10eb
	.uleb128 0xd
	.long	.LASF229
	.uleb128 0x6
	.byte	0x8
	.long	0x10f6
	.uleb128 0x6
	.byte	0x8
	.long	0x1044
	.uleb128 0xa
	.long	0x10d4
	.long	0x1117
	.uleb128 0xb
	.long	0x65
	.byte	0
	.byte	0
	.uleb128 0x5
	.long	.LASF65
	.byte	0xa
	.byte	0x33
	.long	0x553
	.uleb128 0x7
	.byte	0x4
	.byte	0x9
	.byte	0x2e
	.long	0x118b
	.uleb128 0x8
	.long	.LASF230
	.sleb128 0
	.uleb128 0x8
	.long	.LASF231
	.sleb128 1
	.uleb128 0x8
	.long	.LASF232
	.sleb128 2
	.uleb128 0x8
	.long	.LASF233
	.sleb128 3
	.uleb128 0x8
	.long	.LASF234
	.sleb128 4
	.uleb128 0x8
	.long	.LASF235
	.sleb128 5
	.uleb128 0x8
	.long	.LASF236
	.sleb128 6
	.uleb128 0x8
	.long	.LASF237
	.sleb128 7
	.uleb128 0x8
	.long	.LASF238
	.sleb128 8
	.uleb128 0x8
	.long	.LASF239
	.sleb128 9
	.uleb128 0x8
	.long	.LASF240
	.sleb128 10
	.uleb128 0x8
	.long	.LASF241
	.sleb128 11
	.uleb128 0x8
	.long	.LASF242
	.sleb128 12
	.uleb128 0x8
	.long	.LASF243
	.sleb128 13
	.uleb128 0x8
	.long	.LASF244
	.sleb128 14
	.uleb128 0x8
	.long	.LASF245
	.sleb128 15
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xc10
	.uleb128 0x6
	.byte	0x8
	.long	0xcc6
	.uleb128 0x6
	.byte	0x8
	.long	0xae2
	.uleb128 0x6
	.byte	0x8
	.long	0xb73
	.uleb128 0x6
	.byte	0x8
	.long	0xdc3
	.uleb128 0x6
	.byte	0x8
	.long	0x7f3
	.uleb128 0x6
	.byte	0x8
	.long	0x4d1
	.uleb128 0x6
	.byte	0x8
	.long	0x62c
	.uleb128 0xf
	.long	.LASF246
	.byte	0x9
	.value	0x150
	.long	0x102e
	.uleb128 0x6
	.byte	0x8
	.long	0x165
	.uleb128 0x17
	.long	0x11d8
	.uleb128 0x18
	.long	0x11d8
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x50c
	.uleb128 0x6
	.byte	0x8
	.long	0x11cd
	.uleb128 0x6
	.byte	0x8
	.long	0x6d3
	.uleb128 0x6
	.byte	0x8
	.long	0x496
	.uleb128 0x19
	.byte	0x8
	.byte	0x9
	.value	0x184
	.long	0x1212
	.uleb128 0x16
	.long	.LASF247
	.byte	0x9
	.value	0x185
	.long	0x1212
	.uleb128 0x16
	.long	.LASF248
	.byte	0x9
	.value	0x186
	.long	0x6c
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x121
	.uleb128 0x6
	.byte	0x8
	.long	0x1092
	.uleb128 0x6
	.byte	0x8
	.long	0x434
	.uleb128 0x6
	.byte	0x8
	.long	0x719
	.uleb128 0x5
	.long	.LASF249
	.byte	0x13
	.byte	0x13
	.long	0x496
	.uleb128 0xc
	.string	"PAD"
	.byte	0x13
	.byte	0x14
	.long	0x496
	.uleb128 0x5
	.long	.LASF250
	.byte	0x13
	.byte	0x1d
	.long	0x42
	.uleb128 0x6
	.byte	0x8
	.long	0x122a
	.uleb128 0x1a
	.long	.LASF1053
	.byte	0x4
	.byte	0x18
	.byte	0xf
	.long	0x1bc5
	.uleb128 0x8
	.long	.LASF251
	.sleb128 0
	.uleb128 0x8
	.long	.LASF252
	.sleb128 1
	.uleb128 0x8
	.long	.LASF253
	.sleb128 2
	.uleb128 0x8
	.long	.LASF254
	.sleb128 3
	.uleb128 0x8
	.long	.LASF255
	.sleb128 4
	.uleb128 0x8
	.long	.LASF256
	.sleb128 5
	.uleb128 0x8
	.long	.LASF257
	.sleb128 6
	.uleb128 0x8
	.long	.LASF258
	.sleb128 7
	.uleb128 0x8
	.long	.LASF259
	.sleb128 8
	.uleb128 0x8
	.long	.LASF260
	.sleb128 9
	.uleb128 0x8
	.long	.LASF261
	.sleb128 10
	.uleb128 0x8
	.long	.LASF262
	.sleb128 11
	.uleb128 0x8
	.long	.LASF263
	.sleb128 12
	.uleb128 0x8
	.long	.LASF264
	.sleb128 13
	.uleb128 0x8
	.long	.LASF265
	.sleb128 14
	.uleb128 0x8
	.long	.LASF266
	.sleb128 15
	.uleb128 0x8
	.long	.LASF267
	.sleb128 16
	.uleb128 0x8
	.long	.LASF268
	.sleb128 17
	.uleb128 0x8
	.long	.LASF269
	.sleb128 18
	.uleb128 0x8
	.long	.LASF270
	.sleb128 19
	.uleb128 0x8
	.long	.LASF271
	.sleb128 20
	.uleb128 0x8
	.long	.LASF272
	.sleb128 21
	.uleb128 0x8
	.long	.LASF273
	.sleb128 22
	.uleb128 0x8
	.long	.LASF274
	.sleb128 23
	.uleb128 0x8
	.long	.LASF275
	.sleb128 24
	.uleb128 0x8
	.long	.LASF276
	.sleb128 25
	.uleb128 0x8
	.long	.LASF277
	.sleb128 26
	.uleb128 0x8
	.long	.LASF278
	.sleb128 27
	.uleb128 0x8
	.long	.LASF279
	.sleb128 28
	.uleb128 0x8
	.long	.LASF280
	.sleb128 29
	.uleb128 0x8
	.long	.LASF281
	.sleb128 30
	.uleb128 0x8
	.long	.LASF282
	.sleb128 31
	.uleb128 0x8
	.long	.LASF283
	.sleb128 32
	.uleb128 0x8
	.long	.LASF284
	.sleb128 33
	.uleb128 0x8
	.long	.LASF285
	.sleb128 34
	.uleb128 0x8
	.long	.LASF286
	.sleb128 35
	.uleb128 0x8
	.long	.LASF287
	.sleb128 36
	.uleb128 0x8
	.long	.LASF288
	.sleb128 37
	.uleb128 0x8
	.long	.LASF289
	.sleb128 38
	.uleb128 0x8
	.long	.LASF290
	.sleb128 39
	.uleb128 0x8
	.long	.LASF291
	.sleb128 40
	.uleb128 0x8
	.long	.LASF292
	.sleb128 41
	.uleb128 0x8
	.long	.LASF293
	.sleb128 42
	.uleb128 0x8
	.long	.LASF294
	.sleb128 43
	.uleb128 0x8
	.long	.LASF295
	.sleb128 44
	.uleb128 0x8
	.long	.LASF296
	.sleb128 45
	.uleb128 0x8
	.long	.LASF297
	.sleb128 46
	.uleb128 0x8
	.long	.LASF298
	.sleb128 47
	.uleb128 0x8
	.long	.LASF299
	.sleb128 48
	.uleb128 0x8
	.long	.LASF300
	.sleb128 49
	.uleb128 0x8
	.long	.LASF301
	.sleb128 50
	.uleb128 0x8
	.long	.LASF302
	.sleb128 51
	.uleb128 0x8
	.long	.LASF303
	.sleb128 52
	.uleb128 0x8
	.long	.LASF304
	.sleb128 53
	.uleb128 0x8
	.long	.LASF305
	.sleb128 54
	.uleb128 0x8
	.long	.LASF306
	.sleb128 55
	.uleb128 0x8
	.long	.LASF307
	.sleb128 56
	.uleb128 0x8
	.long	.LASF308
	.sleb128 57
	.uleb128 0x8
	.long	.LASF309
	.sleb128 58
	.uleb128 0x8
	.long	.LASF310
	.sleb128 59
	.uleb128 0x8
	.long	.LASF311
	.sleb128 60
	.uleb128 0x8
	.long	.LASF312
	.sleb128 61
	.uleb128 0x8
	.long	.LASF313
	.sleb128 62
	.uleb128 0x8
	.long	.LASF314
	.sleb128 63
	.uleb128 0x8
	.long	.LASF315
	.sleb128 64
	.uleb128 0x8
	.long	.LASF316
	.sleb128 65
	.uleb128 0x8
	.long	.LASF317
	.sleb128 66
	.uleb128 0x8
	.long	.LASF318
	.sleb128 67
	.uleb128 0x8
	.long	.LASF319
	.sleb128 68
	.uleb128 0x8
	.long	.LASF320
	.sleb128 69
	.uleb128 0x8
	.long	.LASF321
	.sleb128 70
	.uleb128 0x8
	.long	.LASF322
	.sleb128 71
	.uleb128 0x8
	.long	.LASF323
	.sleb128 72
	.uleb128 0x8
	.long	.LASF324
	.sleb128 73
	.uleb128 0x8
	.long	.LASF325
	.sleb128 74
	.uleb128 0x8
	.long	.LASF326
	.sleb128 75
	.uleb128 0x8
	.long	.LASF327
	.sleb128 76
	.uleb128 0x8
	.long	.LASF328
	.sleb128 77
	.uleb128 0x8
	.long	.LASF329
	.sleb128 78
	.uleb128 0x8
	.long	.LASF330
	.sleb128 79
	.uleb128 0x8
	.long	.LASF331
	.sleb128 80
	.uleb128 0x8
	.long	.LASF332
	.sleb128 81
	.uleb128 0x8
	.long	.LASF333
	.sleb128 82
	.uleb128 0x8
	.long	.LASF334
	.sleb128 83
	.uleb128 0x8
	.long	.LASF335
	.sleb128 84
	.uleb128 0x8
	.long	.LASF336
	.sleb128 85
	.uleb128 0x8
	.long	.LASF337
	.sleb128 86
	.uleb128 0x8
	.long	.LASF338
	.sleb128 87
	.uleb128 0x8
	.long	.LASF339
	.sleb128 88
	.uleb128 0x8
	.long	.LASF340
	.sleb128 89
	.uleb128 0x8
	.long	.LASF341
	.sleb128 90
	.uleb128 0x8
	.long	.LASF342
	.sleb128 91
	.uleb128 0x8
	.long	.LASF343
	.sleb128 92
	.uleb128 0x8
	.long	.LASF344
	.sleb128 93
	.uleb128 0x8
	.long	.LASF345
	.sleb128 94
	.uleb128 0x8
	.long	.LASF346
	.sleb128 95
	.uleb128 0x8
	.long	.LASF347
	.sleb128 96
	.uleb128 0x8
	.long	.LASF348
	.sleb128 97
	.uleb128 0x8
	.long	.LASF349
	.sleb128 98
	.uleb128 0x8
	.long	.LASF350
	.sleb128 99
	.uleb128 0x8
	.long	.LASF351
	.sleb128 100
	.uleb128 0x8
	.long	.LASF352
	.sleb128 101
	.uleb128 0x8
	.long	.LASF353
	.sleb128 102
	.uleb128 0x8
	.long	.LASF354
	.sleb128 103
	.uleb128 0x8
	.long	.LASF355
	.sleb128 104
	.uleb128 0x8
	.long	.LASF356
	.sleb128 105
	.uleb128 0x8
	.long	.LASF357
	.sleb128 106
	.uleb128 0x8
	.long	.LASF358
	.sleb128 107
	.uleb128 0x8
	.long	.LASF359
	.sleb128 108
	.uleb128 0x8
	.long	.LASF360
	.sleb128 109
	.uleb128 0x8
	.long	.LASF361
	.sleb128 110
	.uleb128 0x8
	.long	.LASF362
	.sleb128 111
	.uleb128 0x8
	.long	.LASF363
	.sleb128 112
	.uleb128 0x8
	.long	.LASF364
	.sleb128 113
	.uleb128 0x8
	.long	.LASF365
	.sleb128 114
	.uleb128 0x8
	.long	.LASF366
	.sleb128 115
	.uleb128 0x8
	.long	.LASF367
	.sleb128 116
	.uleb128 0x8
	.long	.LASF368
	.sleb128 117
	.uleb128 0x8
	.long	.LASF369
	.sleb128 118
	.uleb128 0x8
	.long	.LASF370
	.sleb128 119
	.uleb128 0x8
	.long	.LASF371
	.sleb128 120
	.uleb128 0x8
	.long	.LASF372
	.sleb128 121
	.uleb128 0x8
	.long	.LASF373
	.sleb128 122
	.uleb128 0x8
	.long	.LASF374
	.sleb128 123
	.uleb128 0x8
	.long	.LASF375
	.sleb128 124
	.uleb128 0x8
	.long	.LASF376
	.sleb128 125
	.uleb128 0x8
	.long	.LASF377
	.sleb128 126
	.uleb128 0x8
	.long	.LASF378
	.sleb128 127
	.uleb128 0x8
	.long	.LASF379
	.sleb128 128
	.uleb128 0x8
	.long	.LASF380
	.sleb128 129
	.uleb128 0x8
	.long	.LASF381
	.sleb128 130
	.uleb128 0x8
	.long	.LASF382
	.sleb128 131
	.uleb128 0x8
	.long	.LASF383
	.sleb128 132
	.uleb128 0x8
	.long	.LASF384
	.sleb128 133
	.uleb128 0x8
	.long	.LASF385
	.sleb128 134
	.uleb128 0x8
	.long	.LASF386
	.sleb128 135
	.uleb128 0x8
	.long	.LASF387
	.sleb128 136
	.uleb128 0x8
	.long	.LASF388
	.sleb128 137
	.uleb128 0x8
	.long	.LASF389
	.sleb128 138
	.uleb128 0x8
	.long	.LASF390
	.sleb128 139
	.uleb128 0x8
	.long	.LASF391
	.sleb128 140
	.uleb128 0x8
	.long	.LASF392
	.sleb128 141
	.uleb128 0x8
	.long	.LASF393
	.sleb128 142
	.uleb128 0x8
	.long	.LASF394
	.sleb128 143
	.uleb128 0x8
	.long	.LASF395
	.sleb128 144
	.uleb128 0x8
	.long	.LASF396
	.sleb128 145
	.uleb128 0x8
	.long	.LASF397
	.sleb128 146
	.uleb128 0x8
	.long	.LASF398
	.sleb128 147
	.uleb128 0x8
	.long	.LASF399
	.sleb128 148
	.uleb128 0x8
	.long	.LASF400
	.sleb128 149
	.uleb128 0x8
	.long	.LASF401
	.sleb128 150
	.uleb128 0x8
	.long	.LASF402
	.sleb128 151
	.uleb128 0x8
	.long	.LASF403
	.sleb128 152
	.uleb128 0x8
	.long	.LASF404
	.sleb128 153
	.uleb128 0x8
	.long	.LASF405
	.sleb128 154
	.uleb128 0x8
	.long	.LASF406
	.sleb128 155
	.uleb128 0x8
	.long	.LASF407
	.sleb128 156
	.uleb128 0x8
	.long	.LASF408
	.sleb128 157
	.uleb128 0x8
	.long	.LASF409
	.sleb128 158
	.uleb128 0x8
	.long	.LASF410
	.sleb128 159
	.uleb128 0x8
	.long	.LASF411
	.sleb128 160
	.uleb128 0x8
	.long	.LASF412
	.sleb128 161
	.uleb128 0x8
	.long	.LASF413
	.sleb128 162
	.uleb128 0x8
	.long	.LASF414
	.sleb128 163
	.uleb128 0x8
	.long	.LASF415
	.sleb128 164
	.uleb128 0x8
	.long	.LASF416
	.sleb128 165
	.uleb128 0x8
	.long	.LASF417
	.sleb128 166
	.uleb128 0x8
	.long	.LASF418
	.sleb128 167
	.uleb128 0x8
	.long	.LASF419
	.sleb128 168
	.uleb128 0x8
	.long	.LASF420
	.sleb128 169
	.uleb128 0x8
	.long	.LASF421
	.sleb128 170
	.uleb128 0x8
	.long	.LASF422
	.sleb128 171
	.uleb128 0x8
	.long	.LASF423
	.sleb128 172
	.uleb128 0x8
	.long	.LASF424
	.sleb128 173
	.uleb128 0x8
	.long	.LASF425
	.sleb128 174
	.uleb128 0x8
	.long	.LASF426
	.sleb128 175
	.uleb128 0x8
	.long	.LASF427
	.sleb128 176
	.uleb128 0x8
	.long	.LASF428
	.sleb128 177
	.uleb128 0x8
	.long	.LASF429
	.sleb128 178
	.uleb128 0x8
	.long	.LASF430
	.sleb128 179
	.uleb128 0x8
	.long	.LASF431
	.sleb128 180
	.uleb128 0x8
	.long	.LASF432
	.sleb128 181
	.uleb128 0x8
	.long	.LASF433
	.sleb128 182
	.uleb128 0x8
	.long	.LASF434
	.sleb128 183
	.uleb128 0x8
	.long	.LASF435
	.sleb128 184
	.uleb128 0x8
	.long	.LASF436
	.sleb128 185
	.uleb128 0x8
	.long	.LASF437
	.sleb128 186
	.uleb128 0x8
	.long	.LASF438
	.sleb128 187
	.uleb128 0x8
	.long	.LASF439
	.sleb128 188
	.uleb128 0x8
	.long	.LASF440
	.sleb128 189
	.uleb128 0x8
	.long	.LASF441
	.sleb128 190
	.uleb128 0x8
	.long	.LASF442
	.sleb128 191
	.uleb128 0x8
	.long	.LASF443
	.sleb128 192
	.uleb128 0x8
	.long	.LASF444
	.sleb128 193
	.uleb128 0x8
	.long	.LASF445
	.sleb128 194
	.uleb128 0x8
	.long	.LASF446
	.sleb128 195
	.uleb128 0x8
	.long	.LASF447
	.sleb128 196
	.uleb128 0x8
	.long	.LASF448
	.sleb128 197
	.uleb128 0x8
	.long	.LASF449
	.sleb128 198
	.uleb128 0x8
	.long	.LASF450
	.sleb128 199
	.uleb128 0x8
	.long	.LASF451
	.sleb128 200
	.uleb128 0x8
	.long	.LASF452
	.sleb128 201
	.uleb128 0x8
	.long	.LASF453
	.sleb128 202
	.uleb128 0x8
	.long	.LASF454
	.sleb128 203
	.uleb128 0x8
	.long	.LASF455
	.sleb128 204
	.uleb128 0x8
	.long	.LASF456
	.sleb128 205
	.uleb128 0x8
	.long	.LASF457
	.sleb128 206
	.uleb128 0x8
	.long	.LASF458
	.sleb128 207
	.uleb128 0x8
	.long	.LASF459
	.sleb128 208
	.uleb128 0x8
	.long	.LASF460
	.sleb128 209
	.uleb128 0x8
	.long	.LASF461
	.sleb128 210
	.uleb128 0x8
	.long	.LASF462
	.sleb128 211
	.uleb128 0x8
	.long	.LASF463
	.sleb128 212
	.uleb128 0x8
	.long	.LASF464
	.sleb128 213
	.uleb128 0x8
	.long	.LASF465
	.sleb128 214
	.uleb128 0x8
	.long	.LASF466
	.sleb128 215
	.uleb128 0x8
	.long	.LASF467
	.sleb128 216
	.uleb128 0x8
	.long	.LASF468
	.sleb128 217
	.uleb128 0x8
	.long	.LASF469
	.sleb128 218
	.uleb128 0x8
	.long	.LASF470
	.sleb128 219
	.uleb128 0x8
	.long	.LASF471
	.sleb128 220
	.uleb128 0x8
	.long	.LASF472
	.sleb128 221
	.uleb128 0x8
	.long	.LASF473
	.sleb128 222
	.uleb128 0x8
	.long	.LASF474
	.sleb128 223
	.uleb128 0x8
	.long	.LASF475
	.sleb128 224
	.uleb128 0x8
	.long	.LASF476
	.sleb128 225
	.uleb128 0x8
	.long	.LASF477
	.sleb128 226
	.uleb128 0x8
	.long	.LASF478
	.sleb128 227
	.uleb128 0x8
	.long	.LASF479
	.sleb128 228
	.uleb128 0x8
	.long	.LASF480
	.sleb128 229
	.uleb128 0x8
	.long	.LASF481
	.sleb128 230
	.uleb128 0x8
	.long	.LASF482
	.sleb128 231
	.uleb128 0x8
	.long	.LASF483
	.sleb128 232
	.uleb128 0x8
	.long	.LASF484
	.sleb128 233
	.uleb128 0x8
	.long	.LASF485
	.sleb128 234
	.uleb128 0x8
	.long	.LASF486
	.sleb128 235
	.uleb128 0x8
	.long	.LASF487
	.sleb128 236
	.uleb128 0x8
	.long	.LASF488
	.sleb128 237
	.uleb128 0x8
	.long	.LASF489
	.sleb128 238
	.uleb128 0x8
	.long	.LASF490
	.sleb128 239
	.uleb128 0x8
	.long	.LASF491
	.sleb128 240
	.uleb128 0x8
	.long	.LASF492
	.sleb128 241
	.uleb128 0x8
	.long	.LASF493
	.sleb128 242
	.uleb128 0x8
	.long	.LASF494
	.sleb128 243
	.uleb128 0x8
	.long	.LASF495
	.sleb128 244
	.uleb128 0x8
	.long	.LASF496
	.sleb128 245
	.uleb128 0x8
	.long	.LASF497
	.sleb128 246
	.uleb128 0x8
	.long	.LASF498
	.sleb128 247
	.uleb128 0x8
	.long	.LASF499
	.sleb128 248
	.uleb128 0x8
	.long	.LASF500
	.sleb128 249
	.uleb128 0x8
	.long	.LASF501
	.sleb128 250
	.uleb128 0x8
	.long	.LASF502
	.sleb128 251
	.uleb128 0x8
	.long	.LASF503
	.sleb128 252
	.uleb128 0x8
	.long	.LASF504
	.sleb128 253
	.uleb128 0x8
	.long	.LASF505
	.sleb128 254
	.uleb128 0x8
	.long	.LASF506
	.sleb128 255
	.uleb128 0x8
	.long	.LASF507
	.sleb128 256
	.uleb128 0x8
	.long	.LASF508
	.sleb128 257
	.uleb128 0x8
	.long	.LASF509
	.sleb128 258
	.uleb128 0x8
	.long	.LASF510
	.sleb128 259
	.uleb128 0x8
	.long	.LASF511
	.sleb128 260
	.uleb128 0x8
	.long	.LASF512
	.sleb128 261
	.uleb128 0x8
	.long	.LASF513
	.sleb128 262
	.uleb128 0x8
	.long	.LASF514
	.sleb128 263
	.uleb128 0x8
	.long	.LASF515
	.sleb128 264
	.uleb128 0x8
	.long	.LASF516
	.sleb128 265
	.uleb128 0x8
	.long	.LASF517
	.sleb128 266
	.uleb128 0x8
	.long	.LASF518
	.sleb128 267
	.uleb128 0x8
	.long	.LASF519
	.sleb128 268
	.uleb128 0x8
	.long	.LASF520
	.sleb128 269
	.uleb128 0x8
	.long	.LASF521
	.sleb128 270
	.uleb128 0x8
	.long	.LASF522
	.sleb128 271
	.uleb128 0x8
	.long	.LASF523
	.sleb128 272
	.uleb128 0x8
	.long	.LASF524
	.sleb128 273
	.uleb128 0x8
	.long	.LASF525
	.sleb128 274
	.uleb128 0x8
	.long	.LASF526
	.sleb128 275
	.uleb128 0x8
	.long	.LASF527
	.sleb128 276
	.uleb128 0x8
	.long	.LASF528
	.sleb128 277
	.uleb128 0x8
	.long	.LASF529
	.sleb128 278
	.uleb128 0x8
	.long	.LASF530
	.sleb128 279
	.uleb128 0x8
	.long	.LASF531
	.sleb128 280
	.uleb128 0x8
	.long	.LASF532
	.sleb128 281
	.uleb128 0x8
	.long	.LASF533
	.sleb128 282
	.uleb128 0x8
	.long	.LASF534
	.sleb128 283
	.uleb128 0x8
	.long	.LASF535
	.sleb128 284
	.uleb128 0x8
	.long	.LASF536
	.sleb128 285
	.uleb128 0x8
	.long	.LASF537
	.sleb128 286
	.uleb128 0x8
	.long	.LASF538
	.sleb128 287
	.uleb128 0x8
	.long	.LASF539
	.sleb128 288
	.uleb128 0x8
	.long	.LASF540
	.sleb128 289
	.uleb128 0x8
	.long	.LASF541
	.sleb128 290
	.uleb128 0x8
	.long	.LASF542
	.sleb128 291
	.uleb128 0x8
	.long	.LASF543
	.sleb128 292
	.uleb128 0x8
	.long	.LASF544
	.sleb128 293
	.uleb128 0x8
	.long	.LASF545
	.sleb128 294
	.uleb128 0x8
	.long	.LASF546
	.sleb128 295
	.uleb128 0x8
	.long	.LASF547
	.sleb128 296
	.uleb128 0x8
	.long	.LASF548
	.sleb128 297
	.uleb128 0x8
	.long	.LASF549
	.sleb128 298
	.uleb128 0x8
	.long	.LASF550
	.sleb128 299
	.uleb128 0x8
	.long	.LASF551
	.sleb128 300
	.uleb128 0x8
	.long	.LASF552
	.sleb128 301
	.uleb128 0x8
	.long	.LASF553
	.sleb128 302
	.uleb128 0x8
	.long	.LASF554
	.sleb128 303
	.uleb128 0x8
	.long	.LASF555
	.sleb128 304
	.uleb128 0x8
	.long	.LASF556
	.sleb128 305
	.uleb128 0x8
	.long	.LASF557
	.sleb128 306
	.uleb128 0x8
	.long	.LASF558
	.sleb128 307
	.uleb128 0x8
	.long	.LASF559
	.sleb128 308
	.uleb128 0x8
	.long	.LASF560
	.sleb128 309
	.uleb128 0x8
	.long	.LASF561
	.sleb128 310
	.uleb128 0x8
	.long	.LASF562
	.sleb128 311
	.uleb128 0x8
	.long	.LASF563
	.sleb128 312
	.uleb128 0x8
	.long	.LASF564
	.sleb128 313
	.uleb128 0x8
	.long	.LASF565
	.sleb128 314
	.uleb128 0x8
	.long	.LASF566
	.sleb128 315
	.uleb128 0x8
	.long	.LASF567
	.sleb128 316
	.uleb128 0x8
	.long	.LASF568
	.sleb128 317
	.uleb128 0x8
	.long	.LASF569
	.sleb128 318
	.uleb128 0x8
	.long	.LASF570
	.sleb128 319
	.uleb128 0x8
	.long	.LASF571
	.sleb128 320
	.uleb128 0x8
	.long	.LASF572
	.sleb128 321
	.uleb128 0x8
	.long	.LASF573
	.sleb128 322
	.uleb128 0x8
	.long	.LASF574
	.sleb128 323
	.uleb128 0x8
	.long	.LASF575
	.sleb128 324
	.uleb128 0x8
	.long	.LASF576
	.sleb128 325
	.uleb128 0x8
	.long	.LASF577
	.sleb128 326
	.uleb128 0x8
	.long	.LASF578
	.sleb128 327
	.uleb128 0x8
	.long	.LASF579
	.sleb128 328
	.uleb128 0x8
	.long	.LASF580
	.sleb128 329
	.uleb128 0x8
	.long	.LASF581
	.sleb128 330
	.uleb128 0x8
	.long	.LASF582
	.sleb128 331
	.uleb128 0x8
	.long	.LASF583
	.sleb128 332
	.uleb128 0x8
	.long	.LASF584
	.sleb128 333
	.uleb128 0x8
	.long	.LASF585
	.sleb128 334
	.uleb128 0x8
	.long	.LASF586
	.sleb128 335
	.uleb128 0x8
	.long	.LASF587
	.sleb128 336
	.uleb128 0x8
	.long	.LASF588
	.sleb128 337
	.uleb128 0x8
	.long	.LASF589
	.sleb128 338
	.uleb128 0x8
	.long	.LASF590
	.sleb128 339
	.uleb128 0x8
	.long	.LASF591
	.sleb128 340
	.uleb128 0x8
	.long	.LASF592
	.sleb128 341
	.uleb128 0x8
	.long	.LASF593
	.sleb128 342
	.uleb128 0x8
	.long	.LASF594
	.sleb128 343
	.uleb128 0x8
	.long	.LASF595
	.sleb128 344
	.uleb128 0x8
	.long	.LASF596
	.sleb128 345
	.uleb128 0x8
	.long	.LASF597
	.sleb128 346
	.uleb128 0x8
	.long	.LASF598
	.sleb128 347
	.uleb128 0x8
	.long	.LASF599
	.sleb128 348
	.uleb128 0x8
	.long	.LASF600
	.sleb128 349
	.uleb128 0x8
	.long	.LASF601
	.sleb128 350
	.uleb128 0x8
	.long	.LASF602
	.sleb128 351
	.uleb128 0x8
	.long	.LASF603
	.sleb128 352
	.byte	0
	.uleb128 0x1b
	.long	0x11c7
	.uleb128 0x6
	.byte	0x8
	.long	0x1bc5
	.uleb128 0x6
	.byte	0x8
	.long	0x33a
	.uleb128 0x6
	.byte	0x8
	.long	0x547
	.uleb128 0x12
	.long	.LASF604
	.byte	0x40
	.byte	0x8
	.byte	0x70
	.long	0x1c53
	.uleb128 0x1c
	.string	"cv"
	.byte	0x8
	.byte	0x71
	.long	0x11d8
	.byte	0
	.uleb128 0x1c
	.string	"gv"
	.byte	0x8
	.byte	0x72
	.long	0x11e4
	.byte	0x8
	.uleb128 0x11
	.long	.LASF605
	.byte	0x8
	.byte	0x73
	.long	0x11e4
	.byte	0x10
	.uleb128 0x11
	.long	.LASF606
	.byte	0x8
	.byte	0x75
	.long	0x11ea
	.byte	0x18
	.uleb128 0x11
	.long	.LASF607
	.byte	0x8
	.byte	0x77
	.long	0x11ea
	.byte	0x20
	.uleb128 0x11
	.long	.LASF608
	.byte	0x8
	.byte	0x78
	.long	0x5e
	.byte	0x28
	.uleb128 0x11
	.long	.LASF609
	.byte	0x8
	.byte	0x79
	.long	0x1024
	.byte	0x30
	.uleb128 0x11
	.long	.LASF610
	.byte	0x8
	.byte	0x7a
	.long	0x1024
	.byte	0x31
	.uleb128 0x11
	.long	.LASF611
	.byte	0x8
	.byte	0x7b
	.long	0x1c53
	.byte	0x38
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1235
	.uleb128 0x12
	.long	.LASF612
	.byte	0x28
	.byte	0x8
	.byte	0xd3
	.long	0x1cad
	.uleb128 0x11
	.long	.LASF613
	.byte	0x8
	.byte	0xd4
	.long	0x1039
	.byte	0
	.uleb128 0x11
	.long	.LASF614
	.byte	0x8
	.byte	0xd5
	.long	0x1039
	.byte	0x4
	.uleb128 0x11
	.long	.LASF615
	.byte	0x8
	.byte	0xd6
	.long	0x106c
	.byte	0x8
	.uleb128 0x11
	.long	.LASF616
	.byte	0x8
	.byte	0xd7
	.long	0x11c7
	.byte	0x10
	.uleb128 0x11
	.long	.LASF617
	.byte	0x8
	.byte	0xd8
	.long	0x106c
	.byte	0x18
	.uleb128 0x1c
	.string	"cv"
	.byte	0x8
	.byte	0xd9
	.long	0x11d8
	.byte	0x20
	.byte	0
	.uleb128 0x12
	.long	.LASF618
	.byte	0x58
	.byte	0x8
	.byte	0xf0
	.long	0x1d3f
	.uleb128 0x11
	.long	.LASF619
	.byte	0x8
	.byte	0xf1
	.long	0x79
	.byte	0
	.uleb128 0x11
	.long	.LASF620
	.byte	0x8
	.byte	0xf2
	.long	0x1039
	.byte	0x8
	.uleb128 0x11
	.long	.LASF621
	.byte	0x8
	.byte	0xf3
	.long	0x11c7
	.byte	0x10
	.uleb128 0x11
	.long	.LASF622
	.byte	0x8
	.byte	0xf4
	.long	0x11c7
	.byte	0x18
	.uleb128 0x11
	.long	.LASF623
	.byte	0x8
	.byte	0xf5
	.long	0x11c7
	.byte	0x20
	.uleb128 0x11
	.long	.LASF624
	.byte	0x8
	.byte	0xfa
	.long	0x1d3f
	.byte	0x28
	.uleb128 0x11
	.long	.LASF625
	.byte	0x8
	.byte	0xfc
	.long	0x106c
	.byte	0x30
	.uleb128 0x11
	.long	.LASF626
	.byte	0x8
	.byte	0xfd
	.long	0x106c
	.byte	0x38
	.uleb128 0x11
	.long	.LASF627
	.byte	0x8
	.byte	0xfe
	.long	0x11ea
	.byte	0x40
	.uleb128 0x11
	.long	.LASF628
	.byte	0x8
	.byte	0xff
	.long	0x131
	.byte	0x48
	.uleb128 0x13
	.long	.LASF629
	.byte	0x8
	.value	0x100
	.long	0x131
	.byte	0x50
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x106c
	.uleb128 0x19
	.byte	0x58
	.byte	0x8
	.value	0x139
	.long	0x1d73
	.uleb128 0x16
	.long	.LASF630
	.byte	0x8
	.value	0x13a
	.long	0x1bdc
	.uleb128 0x16
	.long	.LASF631
	.byte	0x8
	.value	0x13b
	.long	0x1c59
	.uleb128 0x16
	.long	.LASF632
	.byte	0x8
	.value	0x13c
	.long	0x1cad
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1dc
	.uleb128 0x14
	.long	.LASF633
	.byte	0x58
	.byte	0x8
	.value	0x16e
	.long	0x1e3d
	.uleb128 0x13
	.long	.LASF634
	.byte	0x8
	.value	0x16f
	.long	0x1039
	.byte	0
	.uleb128 0x13
	.long	.LASF635
	.byte	0x8
	.value	0x170
	.long	0x1039
	.byte	0x4
	.uleb128 0x13
	.long	.LASF636
	.byte	0x8
	.value	0x171
	.long	0x1039
	.byte	0x8
	.uleb128 0x13
	.long	.LASF637
	.byte	0x8
	.value	0x172
	.long	0x1039
	.byte	0xc
	.uleb128 0x13
	.long	.LASF638
	.byte	0x8
	.value	0x173
	.long	0x7f
	.byte	0x10
	.uleb128 0x13
	.long	.LASF639
	.byte	0x8
	.value	0x174
	.long	0x7f
	.byte	0x11
	.uleb128 0x13
	.long	.LASF640
	.byte	0x8
	.value	0x175
	.long	0x79
	.byte	0x18
	.uleb128 0x13
	.long	.LASF641
	.byte	0x8
	.value	0x176
	.long	0x106c
	.byte	0x20
	.uleb128 0x13
	.long	.LASF642
	.byte	0x8
	.value	0x177
	.long	0x106c
	.byte	0x28
	.uleb128 0x13
	.long	.LASF643
	.byte	0x8
	.value	0x178
	.long	0x79
	.byte	0x30
	.uleb128 0x13
	.long	.LASF644
	.byte	0x8
	.value	0x179
	.long	0x79
	.byte	0x38
	.uleb128 0x13
	.long	.LASF645
	.byte	0x8
	.value	0x17a
	.long	0x79
	.byte	0x40
	.uleb128 0x13
	.long	.LASF646
	.byte	0x8
	.value	0x17b
	.long	0x6c
	.byte	0x48
	.uleb128 0x13
	.long	.LASF647
	.byte	0x8
	.value	0x17c
	.long	0x1bd6
	.byte	0x50
	.byte	0
	.uleb128 0x19
	.byte	0x88
	.byte	0x8
	.value	0x1a4
	.long	0x1e5f
	.uleb128 0x16
	.long	.LASF648
	.byte	0x8
	.value	0x1a5
	.long	0x77d
	.uleb128 0x16
	.long	.LASF649
	.byte	0x8
	.value	0x1a6
	.long	0x1d79
	.byte	0
	.uleb128 0x14
	.long	.LASF650
	.byte	0x38
	.byte	0x8
	.value	0x20c
	.long	0x1ed5
	.uleb128 0x13
	.long	.LASF651
	.byte	0x8
	.value	0x20d
	.long	0x11ea
	.byte	0
	.uleb128 0x13
	.long	.LASF652
	.byte	0x8
	.value	0x20e
	.long	0x1ed5
	.byte	0x8
	.uleb128 0x13
	.long	.LASF653
	.byte	0x8
	.value	0x20f
	.long	0x1039
	.byte	0x10
	.uleb128 0x13
	.long	.LASF654
	.byte	0x8
	.value	0x210
	.long	0x1039
	.byte	0x14
	.uleb128 0x13
	.long	.LASF655
	.byte	0x8
	.value	0x211
	.long	0x1039
	.byte	0x18
	.uleb128 0x13
	.long	.LASF656
	.byte	0x8
	.value	0x212
	.long	0x1edb
	.byte	0x20
	.uleb128 0x13
	.long	.LASF657
	.byte	0x8
	.value	0x213
	.long	0x1edb
	.byte	0x28
	.uleb128 0x13
	.long	.LASF658
	.byte	0x8
	.value	0x214
	.long	0x1039
	.byte	0x30
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x749
	.uleb128 0x6
	.byte	0x8
	.long	0x1e5f
	.uleb128 0xf
	.long	.LASF659
	.byte	0x8
	.value	0x219
	.long	0x1e5f
	.uleb128 0xc
	.string	"HE"
	.byte	0xe
	.byte	0xc
	.long	0x1ef7
	.uleb128 0x10
	.string	"he"
	.byte	0x18
	.byte	0xe
	.byte	0x10
	.long	0x1f27
	.uleb128 0x11
	.long	.LASF660
	.byte	0xe
	.byte	0x11
	.long	0x1f63
	.byte	0
	.uleb128 0x11
	.long	.LASF661
	.byte	0xe
	.byte	0x12
	.long	0x1f69
	.byte	0x8
	.uleb128 0x11
	.long	.LASF662
	.byte	0xe
	.byte	0x13
	.long	0x106c
	.byte	0x10
	.byte	0
	.uleb128 0xc
	.string	"HEK"
	.byte	0xe
	.byte	0xd
	.long	0x1f32
	.uleb128 0x10
	.string	"hek"
	.byte	0xc
	.byte	0xe
	.byte	0x17
	.long	0x1f63
	.uleb128 0x11
	.long	.LASF663
	.byte	0xe
	.byte	0x18
	.long	0x1044
	.byte	0
	.uleb128 0x11
	.long	.LASF664
	.byte	0xe
	.byte	0x19
	.long	0x1039
	.byte	0x4
	.uleb128 0x11
	.long	.LASF665
	.byte	0xe
	.byte	0x1a
	.long	0x1072
	.byte	0x8
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1eed
	.uleb128 0x6
	.byte	0x8
	.long	0x1f27
	.uleb128 0x1d
	.long	0x57
	.long	0x1f83
	.uleb128 0x18
	.long	0x106c
	.uleb128 0x18
	.long	0x11a9
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1f6f
	.uleb128 0x1d
	.long	0x1044
	.long	0x1f9d
	.uleb128 0x18
	.long	0x106c
	.uleb128 0x18
	.long	0x11a9
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1f89
	.uleb128 0x1d
	.long	0x57
	.long	0x1fc6
	.uleb128 0x18
	.long	0x106c
	.uleb128 0x18
	.long	0x11a9
	.uleb128 0x18
	.long	0x106c
	.uleb128 0x18
	.long	0x106
	.uleb128 0x18
	.long	0x57
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1fa3
	.uleb128 0x1d
	.long	0x57
	.long	0x1fe0
	.uleb128 0x18
	.long	0x11a9
	.uleb128 0x18
	.long	0x1fe0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xfe3
	.uleb128 0x6
	.byte	0x8
	.long	0x1fcc
	.uleb128 0x6
	.byte	0x8
	.long	0xf08
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.long	.LASF666
	.uleb128 0xf
	.long	.LASF667
	.byte	0x6
	.value	0xcc2
	.long	0x2005
	.uleb128 0x6
	.byte	0x8
	.long	0x200b
	.uleb128 0x17
	.long	0x2016
	.uleb128 0x18
	.long	0x106c
	.byte	0
	.uleb128 0xa
	.long	0x1bca
	.long	0x2021
	.uleb128 0x1e
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1117
	.uleb128 0xf
	.long	.LASF668
	.byte	0x6
	.value	0xe63
	.long	0x2033
	.uleb128 0x6
	.byte	0x8
	.long	0x2039
	.uleb128 0x1d
	.long	0x1039
	.long	0x206b
	.uleb128 0x18
	.long	0x2021
	.uleb128 0x18
	.long	0x79
	.uleb128 0x18
	.long	0x79
	.uleb128 0x18
	.long	0x79
	.uleb128 0x18
	.long	0x1039
	.uleb128 0x18
	.long	0x106c
	.uleb128 0x18
	.long	0x6c
	.uleb128 0x18
	.long	0x1044
	.byte	0
	.uleb128 0xf
	.long	.LASF669
	.byte	0x6
	.value	0xe6a
	.long	0x2077
	.uleb128 0x6
	.byte	0x8
	.long	0x207d
	.uleb128 0x1d
	.long	0x106c
	.long	0x208c
	.uleb128 0x18
	.long	0x2021
	.byte	0
	.uleb128 0x1f
	.byte	0x4
	.byte	0x6
	.value	0xfb1
	.long	0x222b
	.uleb128 0x8
	.long	.LASF670
	.sleb128 0
	.uleb128 0x8
	.long	.LASF671
	.sleb128 1
	.uleb128 0x8
	.long	.LASF672
	.sleb128 2
	.uleb128 0x8
	.long	.LASF673
	.sleb128 3
	.uleb128 0x8
	.long	.LASF674
	.sleb128 4
	.uleb128 0x8
	.long	.LASF675
	.sleb128 5
	.uleb128 0x8
	.long	.LASF676
	.sleb128 6
	.uleb128 0x8
	.long	.LASF677
	.sleb128 7
	.uleb128 0x8
	.long	.LASF678
	.sleb128 8
	.uleb128 0x8
	.long	.LASF679
	.sleb128 9
	.uleb128 0x8
	.long	.LASF680
	.sleb128 10
	.uleb128 0x8
	.long	.LASF681
	.sleb128 11
	.uleb128 0x8
	.long	.LASF682
	.sleb128 12
	.uleb128 0x8
	.long	.LASF683
	.sleb128 13
	.uleb128 0x8
	.long	.LASF684
	.sleb128 14
	.uleb128 0x8
	.long	.LASF685
	.sleb128 15
	.uleb128 0x8
	.long	.LASF686
	.sleb128 16
	.uleb128 0x8
	.long	.LASF687
	.sleb128 17
	.uleb128 0x8
	.long	.LASF688
	.sleb128 18
	.uleb128 0x8
	.long	.LASF689
	.sleb128 19
	.uleb128 0x8
	.long	.LASF690
	.sleb128 20
	.uleb128 0x8
	.long	.LASF691
	.sleb128 21
	.uleb128 0x8
	.long	.LASF692
	.sleb128 22
	.uleb128 0x8
	.long	.LASF693
	.sleb128 23
	.uleb128 0x8
	.long	.LASF694
	.sleb128 24
	.uleb128 0x8
	.long	.LASF695
	.sleb128 25
	.uleb128 0x8
	.long	.LASF696
	.sleb128 26
	.uleb128 0x8
	.long	.LASF697
	.sleb128 27
	.uleb128 0x8
	.long	.LASF698
	.sleb128 28
	.uleb128 0x8
	.long	.LASF699
	.sleb128 29
	.uleb128 0x8
	.long	.LASF700
	.sleb128 30
	.uleb128 0x8
	.long	.LASF701
	.sleb128 31
	.uleb128 0x8
	.long	.LASF702
	.sleb128 32
	.uleb128 0x8
	.long	.LASF703
	.sleb128 33
	.uleb128 0x8
	.long	.LASF704
	.sleb128 34
	.uleb128 0x8
	.long	.LASF705
	.sleb128 35
	.uleb128 0x8
	.long	.LASF706
	.sleb128 36
	.uleb128 0x8
	.long	.LASF707
	.sleb128 37
	.uleb128 0x8
	.long	.LASF708
	.sleb128 38
	.uleb128 0x8
	.long	.LASF709
	.sleb128 39
	.uleb128 0x8
	.long	.LASF710
	.sleb128 40
	.uleb128 0x8
	.long	.LASF711
	.sleb128 41
	.uleb128 0x8
	.long	.LASF712
	.sleb128 42
	.uleb128 0x8
	.long	.LASF713
	.sleb128 43
	.uleb128 0x8
	.long	.LASF714
	.sleb128 44
	.uleb128 0x8
	.long	.LASF715
	.sleb128 45
	.uleb128 0x8
	.long	.LASF716
	.sleb128 46
	.uleb128 0x8
	.long	.LASF717
	.sleb128 47
	.uleb128 0x8
	.long	.LASF718
	.sleb128 48
	.uleb128 0x8
	.long	.LASF719
	.sleb128 49
	.uleb128 0x8
	.long	.LASF720
	.sleb128 50
	.uleb128 0x8
	.long	.LASF721
	.sleb128 51
	.uleb128 0x8
	.long	.LASF722
	.sleb128 52
	.uleb128 0x8
	.long	.LASF723
	.sleb128 53
	.uleb128 0x8
	.long	.LASF724
	.sleb128 54
	.uleb128 0x8
	.long	.LASF725
	.sleb128 55
	.uleb128 0x8
	.long	.LASF726
	.sleb128 56
	.uleb128 0x8
	.long	.LASF727
	.sleb128 57
	.uleb128 0x8
	.long	.LASF728
	.sleb128 58
	.uleb128 0x8
	.long	.LASF729
	.sleb128 59
	.uleb128 0x8
	.long	.LASF730
	.sleb128 60
	.uleb128 0x8
	.long	.LASF731
	.sleb128 61
	.uleb128 0x8
	.long	.LASF732
	.sleb128 62
	.uleb128 0x8
	.long	.LASF733
	.sleb128 63
	.uleb128 0x8
	.long	.LASF734
	.sleb128 64
	.uleb128 0x8
	.long	.LASF735
	.sleb128 65
	.uleb128 0x8
	.long	.LASF736
	.sleb128 66
	.byte	0
	.uleb128 0x20
	.long	.LASF737
	.byte	0x1
	.byte	0x2c
	.long	0x11c7
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x2259
	.uleb128 0x21
	.string	"sp"
	.byte	0x1
	.byte	0x2e
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x22
	.long	.LASF743
	.byte	0x1
	.byte	0x34
	.long	0x11c7
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x20
	.long	.LASF738
	.byte	0x1
	.byte	0x3b
	.long	0x11c7
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x2351
	.uleb128 0x21
	.string	"sp"
	.byte	0x1
	.byte	0x3d
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF739
	.byte	0x1
	.byte	0x3d
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x23
	.long	.LASF740
	.byte	0x1
	.byte	0x3e
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x24
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.long	0x2323
	.uleb128 0x23
	.long	.LASF741
	.byte	0x1
	.byte	0x4d
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.uleb128 0x21
	.string	"i"
	.byte	0x1
	.byte	0x50
	.long	0x1044
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.uleb128 0x21
	.string	"svp"
	.byte	0x1
	.byte	0x52
	.long	0x1d3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB6
	.quad	.LBE6-.LBB6
	.uleb128 0x21
	.string	"sv"
	.byte	0x1
	.byte	0x5c
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.long	.LASF741
	.byte	0x1
	.byte	0x5d
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.uleb128 0x20
	.long	.LASF742
	.byte	0x1
	.byte	0x64
	.long	0x11c7
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x23ba
	.uleb128 0x21
	.string	"sp"
	.byte	0x1
	.byte	0x66
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF739
	.byte	0x1
	.byte	0x66
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x23
	.long	.LASF740
	.byte	0x1
	.byte	0x67
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x25
	.quad	.LBB8
	.quad	.LBE8-.LBB8
	.uleb128 0x21
	.string	"sv"
	.byte	0x1
	.byte	0x78
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x26
	.long	.LASF744
	.byte	0x1
	.byte	0x7e
	.long	0x11c7
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x20
	.long	.LASF745
	.byte	0x1
	.byte	0x85
	.long	0x11c7
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x2514
	.uleb128 0x21
	.string	"sp"
	.byte	0x1
	.byte	0x87
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.string	"sv"
	.byte	0x1
	.byte	0x87
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x27
	.long	.LASF746
	.byte	0x1
	.byte	0x8a
	.quad	.L57
	.uleb128 0x27
	.long	.LASF747
	.byte	0x1
	.byte	0x8b
	.quad	.L59
	.uleb128 0x24
	.quad	.LBB9
	.quad	.LBE9-.LBB9
	.long	0x2463
	.uleb128 0x23
	.long	.LASF748
	.byte	0x1
	.byte	0x8b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x21
	.string	"arg"
	.byte	0x1
	.byte	0x8b
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x24
	.quad	.LBB11
	.quad	.LBE11-.LBB11
	.long	0x2486
	.uleb128 0x21
	.string	"gv"
	.byte	0x1
	.byte	0x8f
	.long	0x11e4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x25
	.quad	.LBB12
	.quad	.LBE12-.LBB12
	.uleb128 0x21
	.string	"sym"
	.byte	0x1
	.byte	0x9a
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x21
	.string	"len"
	.byte	0x1
	.byte	0x9b
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.quad	.LBB13
	.quad	.LBE13-.LBB13
	.uleb128 0x23
	.long	.LASF749
	.byte	0x1
	.byte	0xa9
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x21
	.string	"gv"
	.byte	0x1
	.byte	0xaa
	.long	0x11e4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.quad	.LBB14
	.quad	.LBE14-.LBB14
	.uleb128 0x21
	.string	"len"
	.byte	0x1
	.byte	0xac
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x23
	.long	.LASF750
	.byte	0x1
	.byte	0xad
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x20
	.long	.LASF751
	.byte	0x1
	.byte	0xe3
	.long	0x11c7
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.long	0x25dc
	.uleb128 0x21
	.string	"gv"
	.byte	0x1
	.byte	0xe5
	.long	0x11e4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x21
	.string	"sp"
	.byte	0x1
	.byte	0xe6
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x21
	.string	"sv"
	.byte	0x1
	.byte	0xe6
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x27
	.long	.LASF746
	.byte	0x1
	.byte	0xe9
	.quad	.L99
	.uleb128 0x27
	.long	.LASF747
	.byte	0x1
	.byte	0xea
	.quad	.L101
	.uleb128 0x24
	.quad	.LBB15
	.quad	.LBE15-.LBB15
	.long	0x25ac
	.uleb128 0x23
	.long	.LASF748
	.byte	0x1
	.byte	0xea
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x21
	.string	"arg"
	.byte	0x1
	.byte	0xea
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB17
	.quad	.LBE17-.LBB17
	.uleb128 0x21
	.string	"sym"
	.byte	0x1
	.byte	0xf5
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x21
	.string	"len"
	.byte	0x1
	.byte	0xf6
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF752
	.byte	0x1
	.value	0x12b
	.long	0x11c7
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.long	0x2628
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x12d
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"av"
	.byte	0x1
	.value	0x12e
	.long	0x11ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x12f
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x28
	.long	.LASF753
	.byte	0x1
	.value	0x139
	.long	0x11c7
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x26b4
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x13b
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x13b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x13b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.quad	.LBB18
	.quad	.LBE18-.LBB18
	.uleb128 0x29
	.string	"mg"
	.byte	0x1
	.value	0x14d
	.long	0x11a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.quad	.LBB19
	.quad	.LBE19-.LBB19
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x152
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF754
	.byte	0x1
	.value	0x15d
	.long	0x11c7
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.uleb128 0x1
	.byte	0x9c
	.long	0x270f
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x15f
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"gv"
	.byte	0x1
	.value	0x160
	.long	0x11e4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF755
	.byte	0x1
	.value	0x161
	.long	0x11af
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"cv"
	.byte	0x1
	.value	0x165
	.long	0x11d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF756
	.byte	0x1
	.value	0x176
	.long	0x11c7
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x284b
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x178
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"cv"
	.byte	0x1
	.value	0x179
	.long	0x11d8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF755
	.byte	0x1
	.value	0x17a
	.long	0x11af
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x29
	.string	"gv"
	.byte	0x1
	.value	0x17b
	.long	0x11e4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x29
	.string	"ret"
	.byte	0x1
	.value	0x17c
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2b
	.string	"set"
	.byte	0x1
	.value	0x1b7
	.quad	.L162
	.uleb128 0x2c
	.long	.LASF757
	.byte	0x1
	.value	0x196
	.quad	.L154
	.uleb128 0x2c
	.long	.LASF758
	.byte	0x1
	.value	0x1af
	.quad	.L156
	.uleb128 0x25
	.quad	.LBB22
	.quad	.LBE22-.LBB22
	.uleb128 0x29
	.string	"s"
	.byte	0x1
	.value	0x180
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.quad	.LBB23
	.quad	.LBE23-.LBB23
	.uleb128 0x2a
	.long	.LASF759
	.byte	0x1
	.value	0x182
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x25
	.quad	.LBB24
	.quad	.LBE24-.LBB24
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x187
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x29
	.string	"n"
	.byte	0x1
	.value	0x187
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2a
	.long	.LASF760
	.byte	0x1
	.value	0x187
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x29
	.string	"oa"
	.byte	0x1
	.value	0x188
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x29
	.string	"str"
	.byte	0x1
	.value	0x189
	.long	0x111
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF761
	.byte	0x1
	.value	0x1bc
	.long	0x11c7
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x2889
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x1be
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"cv"
	.byte	0x1
	.value	0x1bf
	.long	0x11d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF762
	.byte	0x1
	.value	0x1c7
	.long	0x11c7
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.long	0x28b9
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x1c9
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x28
	.long	.LASF763
	.byte	0x1
	.value	0x1ce
	.long	0x11c7
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.uleb128 0x1
	.byte	0x9c
	.long	0x28f7
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x1d0
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x1d0
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x2d
	.long	.LASF873
	.byte	0x1
	.value	0x1e1
	.long	0x106c
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0x2936
	.uleb128 0x2e
	.string	"sv"
	.byte	0x1
	.value	0x1e1
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"rv"
	.byte	0x1
	.value	0x1e3
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x28
	.long	.LASF765
	.byte	0x1
	.value	0x200
	.long	0x11c7
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x2991
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x202
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x202
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x203
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"pv"
	.byte	0x1
	.value	0x204
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF766
	.byte	0x1
	.value	0x214
	.long	0x11c7
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a0f
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x216
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF755
	.byte	0x1
	.value	0x217
	.long	0x11af
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.quad	.LBB27
	.quad	.LBE27-.LBB27
	.uleb128 0x29
	.string	"ssv"
	.byte	0x1
	.value	0x21c
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0x21d
	.long	0x159
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"ptr"
	.byte	0x1
	.value	0x21e
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF767
	.byte	0x1
	.value	0x22d
	.long	0x11c7
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0x2acd
	.uleb128 0x29
	.string	"gv"
	.byte	0x1
	.value	0x22f
	.long	0x11e4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x230
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF768
	.byte	0x1
	.value	0x231
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF769
	.byte	0x1
	.value	0x232
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x233
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"n_a"
	.byte	0x1
	.value	0x234
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.quad	.LBB28
	.quad	.LBE28-.LBB28
	.uleb128 0x2a
	.long	.LASF770
	.byte	0x1
	.value	0x23d
	.long	0x106
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.quad	.LBB29
	.quad	.LBE29-.LBB29
	.uleb128 0x2a
	.long	.LASF749
	.byte	0x1
	.value	0x263
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF771
	.byte	0x1
	.value	0x279
	.long	0x11c7
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b5d
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x27b
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x27b
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2f
	.string	"s"
	.byte	0x1
	.value	0x27c
	.long	0x2b5d
	.uleb128 0x29
	.string	"pos"
	.byte	0x1
	.value	0x27d
	.long	0x1039
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x29
	.string	"ch"
	.byte	0x1
	.value	0x27e
	.long	0x1039
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x2a
	.long	.LASF772
	.byte	0x1
	.value	0x27f
	.long	0x10df
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF773
	.byte	0x1
	.value	0x280
	.long	0x10df
	.uleb128 0x1
	.byte	0x5f
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0x281
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x2d
	.uleb128 0x28
	.long	.LASF774
	.byte	0x1
	.value	0x2b8
	.long	0x11c7
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bb0
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x2ba
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x2ba
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x2bb
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x28
	.long	.LASF775
	.byte	0x1
	.value	0x2ca
	.long	0x11c7
	.quad	.LFB22
	.quad	.LFE22-.LFB22
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bef
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x2cc
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x2cc
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF776
	.byte	0x1
	.value	0x2d2
	.long	0x11c7
	.quad	.LFB23
	.quad	.LFE23-.LFB23
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c4b
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x2d4
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x2d4
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x2d4
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.long	.LASF777
	.byte	0x1
	.value	0x2d4
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.uleb128 0x28
	.long	.LASF778
	.byte	0x1
	.value	0x2dc
	.long	0x11c7
	.quad	.LFB24
	.quad	.LFE24-.LFB24
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c8a
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x2de
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x2de
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF779
	.byte	0x1
	.value	0x2e3
	.long	0x11c7
	.quad	.LFB25
	.quad	.LFE25-.LFB25
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ce5
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x2e5
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x2e5
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x2e5
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF780
	.byte	0x1
	.value	0x2e6
	.long	0x1039
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x28
	.long	.LASF781
	.byte	0x1
	.value	0x2ee
	.long	0x11c7
	.quad	.LFB26
	.quad	.LFE26-.LFB26
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d22
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x2f0
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x2f1
	.long	0x106c
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x28
	.long	.LASF782
	.byte	0x1
	.value	0x30e
	.long	0x11c7
	.quad	.LFB27
	.quad	.LFE27-.LFB27
	.uleb128 0x1
	.byte	0x9c
	.long	0x2da4
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x310
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x311
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.quad	.LBB39
	.quad	.LBE39-.LBB39
	.long	0x2d83
	.uleb128 0x29
	.string	"gv"
	.byte	0x1
	.value	0x330
	.long	0x11e4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x25
	.quad	.LBB40
	.quad	.LBE40-.LBB40
	.uleb128 0x29
	.string	"gp"
	.byte	0x1
	.value	0x339
	.long	0x11b5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF783
	.byte	0x1
	.value	0x351
	.long	0x11c7
	.quad	.LFB28
	.quad	.LFE28-.LFB28
	.uleb128 0x1
	.byte	0x9c
	.long	0x2dd4
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x353
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x28
	.long	.LASF784
	.byte	0x1
	.value	0x362
	.long	0x11c7
	.quad	.LFB29
	.quad	.LFE29-.LFB29
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e13
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x364
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x364
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF785
	.byte	0x1
	.value	0x378
	.long	0x11c7
	.quad	.LFB30
	.quad	.LFE30-.LFB30
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e52
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x37a
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x37a
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF786
	.byte	0x1
	.value	0x38d
	.long	0x11c7
	.quad	.LFB31
	.quad	.LFE31-.LFB31
	.uleb128 0x1
	.byte	0x9c
	.long	0x30d8
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x38f
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x38f
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2a
	.long	.LASF787
	.byte	0x1
	.value	0x391
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -175
	.uleb128 0x2c
	.long	.LASF788
	.byte	0x1
	.value	0x405
	.quad	.L369
	.uleb128 0x24
	.quad	.LBB41
	.quad	.LBE41-.LBB41
	.long	0x2ef7
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x393
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x393
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x393
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x24
	.quad	.LBB43
	.quad	.LBE43-.LBB43
	.long	0x30a5
	.uleb128 0x2a
	.long	.LASF791
	.byte	0x1
	.value	0x39b
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -174
	.uleb128 0x2a
	.long	.LASF792
	.byte	0x1
	.value	0x39c
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x24
	.quad	.LBB44
	.quad	.LBE44-.LBB44
	.long	0x2f51
	.uleb128 0x29
	.string	"iv"
	.byte	0x1
	.value	0x3a1
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.uleb128 0x25
	.quad	.LBB45
	.quad	.LBE45-.LBB45
	.uleb128 0x2a
	.long	.LASF793
	.byte	0x1
	.value	0x3ab
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x24
	.quad	.LBB46
	.quad	.LBE46-.LBB46
	.long	0x2f97
	.uleb128 0x29
	.string	"iv"
	.byte	0x1
	.value	0x3b0
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x24
	.quad	.LBB47
	.quad	.LBE47-.LBB47
	.long	0x2ffd
	.uleb128 0x2a
	.long	.LASF794
	.byte	0x1
	.value	0x3c4
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2a
	.long	.LASF795
	.byte	0x1
	.value	0x3c5
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x29
	.string	"n"
	.byte	0x1
	.value	0x3c6
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x25
	.quad	.LBB48
	.quad	.LBE48-.LBB48
	.uleb128 0x29
	.string	"bit"
	.byte	0x1
	.value	0x3cb
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB51
	.quad	.LBE51-.LBB51
	.uleb128 0x2a
	.long	.LASF796
	.byte	0x1
	.value	0x3d9
	.long	0x3b
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x2a
	.long	.LASF797
	.byte	0x1
	.value	0x3da
	.long	0x3b
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF798
	.byte	0x1
	.value	0x3db
	.long	0x3b
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF799
	.byte	0x1
	.value	0x3dc
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -173
	.uleb128 0x25
	.quad	.LBB52
	.quad	.LBE52-.LBB52
	.uleb128 0x2a
	.long	.LASF794
	.byte	0x1
	.value	0x3e7
	.long	0x13c
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF795
	.byte	0x1
	.value	0x3e8
	.long	0x13c
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x29
	.string	"n"
	.byte	0x1
	.value	0x3e9
	.long	0x57
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x25
	.quad	.LBB53
	.quad	.LBE53-.LBB53
	.uleb128 0x29
	.string	"bit"
	.byte	0x1
	.value	0x3eb
	.long	0x13c
	.uleb128 0x1
	.byte	0x5f
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB62
	.quad	.LBE62-.LBB62
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x408
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x408
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF800
	.byte	0x1
	.value	0x412
	.long	0x11c7
	.quad	.LFB32
	.quad	.LFE32-.LFB32
	.uleb128 0x1
	.byte	0x9c
	.long	0x32d8
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x414
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x414
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x24
	.quad	.LBB65
	.quad	.LBE65-.LBB65
	.long	0x315d
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x414
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x414
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x414
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.byte	0
	.uleb128 0x24
	.quad	.LBB67
	.quad	.LBE67-.LBB67
	.long	0x32a7
	.uleb128 0x2a
	.long	.LASF801
	.byte	0x1
	.value	0x41e
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -170
	.uleb128 0x2a
	.long	.LASF802
	.byte	0x1
	.value	0x41f
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -169
	.uleb128 0x2a
	.long	.LASF803
	.byte	0x1
	.value	0x420
	.long	0x32d8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF804
	.byte	0x1
	.value	0x421
	.long	0x32d8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.long	.LASF805
	.byte	0x1
	.value	0x422
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2a
	.long	.LASF806
	.byte	0x1
	.value	0x423
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2a
	.long	.LASF807
	.byte	0x1
	.value	0x424
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2a
	.long	.LASF808
	.byte	0x1
	.value	0x425
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.quad	.LBB68
	.quad	.LBE68-.LBB68
	.long	0x3218
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x42a
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x24
	.quad	.LBB69
	.quad	.LBE69-.LBB69
	.long	0x323e
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x435
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x24
	.quad	.LBB70
	.quad	.LBE70-.LBB70
	.long	0x3264
	.uleb128 0x2a
	.long	.LASF809
	.byte	0x1
	.value	0x449
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB75
	.quad	.LBE75-.LBB75
	.uleb128 0x2a
	.long	.LASF810
	.byte	0x1
	.value	0x458
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.quad	.LBB76
	.quad	.LBE76-.LBB76
	.uleb128 0x2a
	.long	.LASF811
	.byte	0x1
	.value	0x465
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB81
	.quad	.LBE81-.LBB81
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x482
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x482
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	0x13c
	.uleb128 0x28
	.long	.LASF812
	.byte	0x1
	.value	0x488
	.long	0x11c7
	.quad	.LFB33
	.quad	.LFE33-.LFB33
	.uleb128 0x1
	.byte	0x9c
	.long	0x3455
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x48a
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x48a
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x24
	.quad	.LBB84
	.quad	.LBE84-.LBB84
	.long	0x3362
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x48a
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x48a
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x48a
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x24
	.quad	.LBB86
	.quad	.LBE86-.LBB86
	.long	0x3424
	.uleb128 0x2a
	.long	.LASF813
	.byte	0x1
	.value	0x4a5
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -122
	.uleb128 0x2a
	.long	.LASF814
	.byte	0x1
	.value	0x4a6
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -121
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x4a7
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x4a8
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x24
	.quad	.LBB87
	.quad	.LBE87-.LBB87
	.long	0x33dd
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x4ae
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x24
	.quad	.LBB88
	.quad	.LBE88-.LBB88
	.long	0x3402
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x4c3
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB89
	.quad	.LBE89-.LBB89
	.uleb128 0x2a
	.long	.LASF794
	.byte	0x1
	.value	0x4dd
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB96
	.quad	.LBE96-.LBB96
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x4f3
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x4f3
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF815
	.byte	0x1
	.value	0x4fb
	.long	0x11c7
	.quad	.LFB34
	.quad	.LFE34-.LFB34
	.uleb128 0x1
	.byte	0x9c
	.long	0x35fd
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x4fd
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x4fd
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.quad	.LBB99
	.quad	.LBE99-.LBB99
	.long	0x34d8
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x4fd
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x4fd
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x4fd
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB101
	.quad	.LBE101-.LBB101
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x4ff
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x500
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2a
	.long	.LASF816
	.byte	0x1
	.value	0x501
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x2a
	.long	.LASF817
	.byte	0x1
	.value	0x502
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -131
	.uleb128 0x2a
	.long	.LASF818
	.byte	0x1
	.value	0x503
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -130
	.uleb128 0x2a
	.long	.LASF819
	.byte	0x1
	.value	0x504
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -129
	.uleb128 0x2a
	.long	.LASF820
	.byte	0x1
	.value	0x505
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF821
	.byte	0x1
	.value	0x506
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x24
	.quad	.LBB102
	.quad	.LBE102-.LBB102
	.long	0x358e
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x50e
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x24
	.quad	.LBB103
	.quad	.LBE103-.LBB103
	.long	0x35b3
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x52e
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x24
	.quad	.LBB104
	.quad	.LBE104-.LBB104
	.long	0x35d9
	.uleb128 0x2a
	.long	.LASF822
	.byte	0x1
	.value	0x556
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x25
	.quad	.LBB105
	.quad	.LBE105-.LBB105
	.uleb128 0x29
	.string	"ans"
	.byte	0x1
	.value	0x563
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF823
	.byte	0x1
	.value	0x57b
	.long	0x11c7
	.quad	.LFB35
	.quad	.LFE35-.LFB35
	.uleb128 0x1
	.byte	0x9c
	.long	0x3839
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x57d
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x57d
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x24
	.quad	.LBB107
	.quad	.LBE107-.LBB107
	.long	0x3682
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x57d
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x57d
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x57d
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.byte	0
	.uleb128 0x25
	.quad	.LBB109
	.quad	.LBE109-.LBB109
	.uleb128 0x2a
	.long	.LASF780
	.byte	0x1
	.value	0x57f
	.long	0x131
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x580
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x24
	.quad	.LBB110
	.quad	.LBE110-.LBB110
	.long	0x36d5
	.uleb128 0x29
	.string	"uv"
	.byte	0x1
	.value	0x585
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x24
	.quad	.LBB111
	.quad	.LBE111-.LBB111
	.long	0x36fa
	.uleb128 0x29
	.string	"iv"
	.byte	0x1
	.value	0x58b
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x24
	.quad	.LBB112
	.quad	.LBE112-.LBB112
	.long	0x371f
	.uleb128 0x29
	.string	"nv"
	.byte	0x1
	.value	0x593
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x24
	.quad	.LBB113
	.quad	.LBE113-.LBB113
	.long	0x379b
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x59c
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF824
	.byte	0x1
	.value	0x59d
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x29
	.string	"max"
	.byte	0x1
	.value	0x59e
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2a
	.long	.LASF825
	.byte	0x1
	.value	0x59f
	.long	0x3849
	.uleb128 0x9
	.byte	0x3
	.quad	oom_list_extend.10698
	.uleb128 0x25
	.quad	.LBB114
	.quad	.LBE114-.LBB114
	.uleb128 0x2a
	.long	.LASF826
	.byte	0x1
	.value	0x5a7
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB115
	.quad	.LBE115-.LBB115
	.uleb128 0x2a
	.long	.LASF827
	.byte	0x1
	.value	0x5d0
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0x5d1
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2a
	.long	.LASF828
	.byte	0x1
	.value	0x5d2
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -149
	.uleb128 0x2a
	.long	.LASF829
	.byte	0x1
	.value	0x5d3
	.long	0x385e
	.uleb128 0x9
	.byte	0x3
	.quad	oom_string_extend.10706
	.uleb128 0x24
	.quad	.LBB116
	.quad	.LBE116-.LBB116
	.long	0x3816
	.uleb128 0x29
	.string	"max"
	.byte	0x1
	.value	0x5dd
	.long	0x159
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB117
	.quad	.LBE117-.LBB117
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x5f2
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x7f
	.long	0x3849
	.uleb128 0xb
	.long	0x65
	.byte	0x20
	.byte	0
	.uleb128 0x9
	.long	0x3839
	.uleb128 0xa
	.long	0x7f
	.long	0x385e
	.uleb128 0xb
	.long	0x65
	.byte	0x22
	.byte	0
	.uleb128 0x9
	.long	0x384e
	.uleb128 0x28
	.long	.LASF830
	.byte	0x1
	.value	0x5fb
	.long	0x11c7
	.quad	.LFB36
	.quad	.LFE36-.LFB36
	.uleb128 0x1
	.byte	0x9c
	.long	0x39f1
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x5fd
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x5fd
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2a
	.long	.LASF831
	.byte	0x1
	.value	0x5fd
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -97
	.uleb128 0x24
	.quad	.LBB119
	.quad	.LBE119-.LBB119
	.long	0x38f7
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x5fd
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x5fd
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x5fd
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x24
	.quad	.LBB121
	.quad	.LBE121-.LBB121
	.long	0x39cf
	.uleb128 0x29
	.string	"auv"
	.byte	0x1
	.value	0x607
	.long	0x13c
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF801
	.byte	0x1
	.value	0x608
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -101
	.uleb128 0x2a
	.long	.LASF832
	.byte	0x1
	.value	0x609
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x24
	.quad	.LBB122
	.quad	.LBE122-.LBB122
	.long	0x395e
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x616
	.long	0x131
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x25
	.quad	.LBB123
	.quad	.LBE123-.LBB123
	.uleb128 0x2a
	.long	.LASF833
	.byte	0x1
	.value	0x622
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -99
	.uleb128 0x2a
	.long	.LASF794
	.byte	0x1
	.value	0x623
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x29
	.string	"buv"
	.byte	0x1
	.value	0x624
	.long	0x13c
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF802
	.byte	0x1
	.value	0x625
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -98
	.uleb128 0x25
	.quad	.LBB124
	.quad	.LBE124-.LBB124
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x62a
	.long	0x131
	.uleb128 0x1
	.byte	0x5d
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB131
	.quad	.LBE131-.LBB131
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0x665
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF835
	.byte	0x1
	.value	0x670
	.long	0x11c7
	.quad	.LFB37
	.quad	.LFE37-.LFB37
	.uleb128 0x1
	.byte	0x9c
	.long	0x3ad9
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x672
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x672
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.quad	.LBB136
	.quad	.LBE136-.LBB136
	.long	0x3a75
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x672
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x672
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x672
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB138
	.quad	.LBE138-.LBB138
	.uleb128 0x2a
	.long	.LASF836
	.byte	0x1
	.value	0x674
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.quad	.LBB139
	.quad	.LBE139-.LBB139
	.long	0x3ab8
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x676
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x25
	.quad	.LBB142
	.quad	.LBE142-.LBB142
	.uleb128 0x29
	.string	"u"
	.byte	0x1
	.value	0x67a
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF837
	.byte	0x1
	.value	0x681
	.long	0x11c7
	.quad	.LFB38
	.quad	.LFE38-.LFB38
	.uleb128 0x1
	.byte	0x9c
	.long	0x3bc1
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x683
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x683
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.quad	.LBB145
	.quad	.LBE145-.LBB145
	.long	0x3b5d
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x683
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x683
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x683
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB147
	.quad	.LBE147-.LBB147
	.uleb128 0x2a
	.long	.LASF836
	.byte	0x1
	.value	0x685
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.quad	.LBB148
	.quad	.LBE148-.LBB148
	.long	0x3ba0
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x687
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x25
	.quad	.LBB151
	.quad	.LBE151-.LBB151
	.uleb128 0x29
	.string	"u"
	.byte	0x1
	.value	0x68b
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF838
	.byte	0x1
	.value	0x692
	.long	0x11c7
	.quad	.LFB39
	.quad	.LFE39-.LFB39
	.uleb128 0x1
	.byte	0x9c
	.long	0x3d5f
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x694
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB154
	.quad	.LBE154-.LBB154
	.long	0x3c36
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x694
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x694
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x694
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x24
	.quad	.LBB155
	.quad	.LBE155-.LBB155
	.long	0x3d3d
	.uleb128 0x2a
	.long	.LASF801
	.byte	0x1
	.value	0x69a
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -130
	.uleb128 0x2a
	.long	.LASF802
	.byte	0x1
	.value	0x69b
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -129
	.uleb128 0x24
	.quad	.LBB156
	.quad	.LBE156-.LBB156
	.long	0x3ca1
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x69e
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x69f
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x24
	.quad	.LBB157
	.quad	.LBE157-.LBB157
	.long	0x3cd7
	.uleb128 0x29
	.string	"auv"
	.byte	0x1
	.value	0x6a6
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.string	"buv"
	.byte	0x1
	.value	0x6a7
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x24
	.quad	.LBB158
	.quad	.LBE158-.LBB158
	.long	0x3d0c
	.uleb128 0x29
	.string	"auv"
	.byte	0x1
	.value	0x6ae
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x6af
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB159
	.quad	.LBE159-.LBB159
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x6bd
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"buv"
	.byte	0x1
	.value	0x6be
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB160
	.quad	.LBE160-.LBB160
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0x6da
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF839
	.byte	0x1
	.value	0x6e0
	.long	0x11c7
	.quad	.LFB40
	.quad	.LFE40-.LFB40
	.uleb128 0x1
	.byte	0x9c
	.long	0x3efd
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x6e2
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB161
	.quad	.LBE161-.LBB161
	.long	0x3dd4
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x6e2
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x6e2
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x6e2
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x24
	.quad	.LBB162
	.quad	.LBE162-.LBB162
	.long	0x3edb
	.uleb128 0x2a
	.long	.LASF801
	.byte	0x1
	.value	0x6e8
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -130
	.uleb128 0x2a
	.long	.LASF802
	.byte	0x1
	.value	0x6e9
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -129
	.uleb128 0x24
	.quad	.LBB163
	.quad	.LBE163-.LBB163
	.long	0x3e3f
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x6ec
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x6ed
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x24
	.quad	.LBB164
	.quad	.LBE164-.LBB164
	.long	0x3e75
	.uleb128 0x29
	.string	"auv"
	.byte	0x1
	.value	0x6f4
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.string	"buv"
	.byte	0x1
	.value	0x6f5
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x24
	.quad	.LBB165
	.quad	.LBE165-.LBB165
	.long	0x3eaa
	.uleb128 0x29
	.string	"auv"
	.byte	0x1
	.value	0x6fc
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x6fd
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB166
	.quad	.LBE166-.LBB166
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x70b
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"buv"
	.byte	0x1
	.value	0x70c
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB167
	.quad	.LBE167-.LBB167
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0x728
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF840
	.byte	0x1
	.value	0x72e
	.long	0x11c7
	.quad	.LFB41
	.quad	.LFE41-.LFB41
	.uleb128 0x1
	.byte	0x9c
	.long	0x409b
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x730
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB168
	.quad	.LBE168-.LBB168
	.long	0x3f72
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x730
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x730
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x730
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x24
	.quad	.LBB169
	.quad	.LBE169-.LBB169
	.long	0x4079
	.uleb128 0x2a
	.long	.LASF801
	.byte	0x1
	.value	0x736
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -130
	.uleb128 0x2a
	.long	.LASF802
	.byte	0x1
	.value	0x737
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -129
	.uleb128 0x24
	.quad	.LBB170
	.quad	.LBE170-.LBB170
	.long	0x3fdd
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x73a
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x73b
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x24
	.quad	.LBB171
	.quad	.LBE171-.LBB171
	.long	0x4013
	.uleb128 0x29
	.string	"auv"
	.byte	0x1
	.value	0x742
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.string	"buv"
	.byte	0x1
	.value	0x743
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x24
	.quad	.LBB172
	.quad	.LBE172-.LBB172
	.long	0x4048
	.uleb128 0x29
	.string	"auv"
	.byte	0x1
	.value	0x74a
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x74b
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB173
	.quad	.LBE173-.LBB173
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x759
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"buv"
	.byte	0x1
	.value	0x75a
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB174
	.quad	.LBE174-.LBB174
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0x776
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF841
	.byte	0x1
	.value	0x77c
	.long	0x11c7
	.quad	.LFB42
	.quad	.LFE42-.LFB42
	.uleb128 0x1
	.byte	0x9c
	.long	0x4239
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x77e
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB175
	.quad	.LBE175-.LBB175
	.long	0x4110
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x77e
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x77e
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x77e
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x24
	.quad	.LBB176
	.quad	.LBE176-.LBB176
	.long	0x4217
	.uleb128 0x2a
	.long	.LASF801
	.byte	0x1
	.value	0x784
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -130
	.uleb128 0x2a
	.long	.LASF802
	.byte	0x1
	.value	0x785
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -129
	.uleb128 0x24
	.quad	.LBB177
	.quad	.LBE177-.LBB177
	.long	0x417b
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x788
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x789
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x24
	.quad	.LBB178
	.quad	.LBE178-.LBB178
	.long	0x41b1
	.uleb128 0x29
	.string	"auv"
	.byte	0x1
	.value	0x790
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.string	"buv"
	.byte	0x1
	.value	0x791
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x24
	.quad	.LBB179
	.quad	.LBE179-.LBB179
	.long	0x41e6
	.uleb128 0x29
	.string	"auv"
	.byte	0x1
	.value	0x798
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"biv"
	.byte	0x1
	.value	0x799
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB180
	.quad	.LBE180-.LBB180
	.uleb128 0x29
	.string	"aiv"
	.byte	0x1
	.value	0x7a7
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"buv"
	.byte	0x1
	.value	0x7a8
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB181
	.quad	.LBE181-.LBB181
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0x7c4
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF842
	.byte	0x1
	.value	0x7ca
	.long	0x11c7
	.quad	.LFB43
	.quad	.LFE43-.LFB43
	.uleb128 0x1
	.byte	0x9c
	.long	0x4369
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x7cc
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB182
	.quad	.LBE182-.LBB182
	.long	0x42ad
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x7cc
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x7cc
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x7cc
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x24
	.quad	.LBB183
	.quad	.LBE183-.LBB183
	.long	0x4347
	.uleb128 0x2a
	.long	.LASF801
	.byte	0x1
	.value	0x7d9
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -98
	.uleb128 0x2a
	.long	.LASF802
	.byte	0x1
	.value	0x7da
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -97
	.uleb128 0x24
	.quad	.LBB184
	.quad	.LBE184-.LBB184
	.long	0x4316
	.uleb128 0x29
	.string	"buv"
	.byte	0x1
	.value	0x7e3
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"auv"
	.byte	0x1
	.value	0x7e4
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x25
	.quad	.LBB185
	.quad	.LBE185-.LBB185
	.uleb128 0x29
	.string	"iv"
	.byte	0x1
	.value	0x7ea
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x29
	.string	"uv"
	.byte	0x1
	.value	0x7eb
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB186
	.quad	.LBE186-.LBB186
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0x809
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF843
	.byte	0x1
	.value	0x80f
	.long	0x11c7
	.quad	.LFB44
	.quad	.LFE44-.LFB44
	.uleb128 0x1
	.byte	0x9c
	.long	0x457d
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x811
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x811
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x24
	.quad	.LBB187
	.quad	.LBE187-.LBB187
	.long	0x43ee
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x811
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x811
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x811
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.byte	0
	.uleb128 0x24
	.quad	.LBB189
	.quad	.LBE189-.LBB189
	.long	0x4424
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x814
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x815
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x24
	.quad	.LBB192
	.quad	.LBE192-.LBB192
	.long	0x453c
	.uleb128 0x2a
	.long	.LASF844
	.byte	0x1
	.value	0x820
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -170
	.uleb128 0x2a
	.long	.LASF845
	.byte	0x1
	.value	0x821
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -169
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0x822
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x24
	.quad	.LBB193
	.quad	.LBE193-.LBB193
	.long	0x449f
	.uleb128 0x2a
	.long	.LASF846
	.byte	0x1
	.value	0x824
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF847
	.byte	0x1
	.value	0x825
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.uleb128 0x24
	.quad	.LBB194
	.quad	.LBE194-.LBB194
	.long	0x44d5
	.uleb128 0x2a
	.long	.LASF848
	.byte	0x1
	.value	0x82e
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2a
	.long	.LASF849
	.byte	0x1
	.value	0x82f
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x24
	.quad	.LBB195
	.quad	.LBE195-.LBB195
	.long	0x450b
	.uleb128 0x2a
	.long	.LASF848
	.byte	0x1
	.value	0x838
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF847
	.byte	0x1
	.value	0x839
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x25
	.quad	.LBB196
	.quad	.LBE196-.LBB196
	.uleb128 0x2a
	.long	.LASF846
	.byte	0x1
	.value	0x84a
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF849
	.byte	0x1
	.value	0x84b
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB199
	.quad	.LBE199-.LBB199
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x863
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x863
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0x864
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF850
	.byte	0x1
	.value	0x87d
	.long	0x11c7
	.quad	.LFB45
	.quad	.LFE45-.LFB45
	.uleb128 0x1
	.byte	0x9c
	.long	0x4631
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x87f
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB202
	.quad	.LBE202-.LBB202
	.long	0x45f0
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x87f
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x87f
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x87f
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB203
	.quad	.LBE203-.LBB203
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x881
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x881
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"cmp"
	.byte	0x1
	.value	0x882
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF851
	.byte	0x1
	.value	0x88a
	.long	0x11c7
	.quad	.LFB46
	.quad	.LFE46-.LFB46
	.uleb128 0x1
	.byte	0x9c
	.long	0x46e5
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x88c
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB204
	.quad	.LBE204-.LBB204
	.long	0x46a4
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x88c
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x88c
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x88c
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB205
	.quad	.LBE205-.LBB205
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x88e
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x88e
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"cmp"
	.byte	0x1
	.value	0x88f
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF852
	.byte	0x1
	.value	0x897
	.long	0x11c7
	.quad	.LFB47
	.quad	.LFE47-.LFB47
	.uleb128 0x1
	.byte	0x9c
	.long	0x4799
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x899
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB206
	.quad	.LBE206-.LBB206
	.long	0x4758
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x899
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x899
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x899
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB207
	.quad	.LBE207-.LBB207
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x89b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x89b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"cmp"
	.byte	0x1
	.value	0x89c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF853
	.byte	0x1
	.value	0x8a4
	.long	0x11c7
	.quad	.LFB48
	.quad	.LFE48-.LFB48
	.uleb128 0x1
	.byte	0x9c
	.long	0x484d
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x8a6
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB208
	.quad	.LBE208-.LBB208
	.long	0x480c
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x8a6
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8a6
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8a6
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB209
	.quad	.LBE209-.LBB209
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8a8
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8a8
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"cmp"
	.byte	0x1
	.value	0x8a9
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF854
	.byte	0x1
	.value	0x8b1
	.long	0x11c7
	.quad	.LFB49
	.quad	.LFE49-.LFB49
	.uleb128 0x1
	.byte	0x9c
	.long	0x48f1
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x8b3
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB210
	.quad	.LBE210-.LBB210
	.long	0x48c0
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x8b3
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8b3
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8b3
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB211
	.quad	.LBE211-.LBB211
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8b5
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8b5
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF855
	.byte	0x1
	.value	0x8bb
	.long	0x11c7
	.quad	.LFB50
	.quad	.LFE50-.LFB50
	.uleb128 0x1
	.byte	0x9c
	.long	0x4995
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x8bd
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB212
	.quad	.LBE212-.LBB212
	.long	0x4964
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x8bd
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8bd
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8bd
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB213
	.quad	.LBE213-.LBB213
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8bf
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8bf
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF856
	.byte	0x1
	.value	0x8c5
	.long	0x11c7
	.quad	.LFB51
	.quad	.LFE51-.LFB51
	.uleb128 0x1
	.byte	0x9c
	.long	0x4a59
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x8c7
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x8c7
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.quad	.LBB214
	.quad	.LBE214-.LBB214
	.long	0x4a18
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x8c7
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8c7
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8c7
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB216
	.quad	.LBE216-.LBB216
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8c9
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8c9
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"cmp"
	.byte	0x1
	.value	0x8ca
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF857
	.byte	0x1
	.value	0x8d2
	.long	0x11c7
	.quad	.LFB52
	.quad	.LFE52-.LFB52
	.uleb128 0x1
	.byte	0x9c
	.long	0x4b51
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x8d4
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x8d4
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x24
	.quad	.LBB219
	.quad	.LBE219-.LBB219
	.long	0x4ade
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x8d4
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8d4
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8d4
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x25
	.quad	.LBB221
	.quad	.LBE221-.LBB221
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8d6
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8d6
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.quad	.LBB222
	.quad	.LBE222-.LBB222
	.long	0x4b30
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x8d9
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x25
	.quad	.LBB225
	.quad	.LBE225-.LBB225
	.uleb128 0x29
	.string	"u"
	.byte	0x1
	.value	0x8dd
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF858
	.byte	0x1
	.value	0x8e9
	.long	0x11c7
	.quad	.LFB53
	.quad	.LFE53-.LFB53
	.uleb128 0x1
	.byte	0x9c
	.long	0x4c49
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x8eb
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x8eb
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x24
	.quad	.LBB229
	.quad	.LBE229-.LBB229
	.long	0x4bd6
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x8eb
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8eb
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8eb
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x25
	.quad	.LBB231
	.quad	.LBE231-.LBB231
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x8ed
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x8ed
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.quad	.LBB232
	.quad	.LBE232-.LBB232
	.long	0x4c28
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x8f0
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x25
	.quad	.LBB235
	.quad	.LBE235-.LBB235
	.uleb128 0x29
	.string	"u"
	.byte	0x1
	.value	0x8f4
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF859
	.byte	0x1
	.value	0x900
	.long	0x11c7
	.quad	.LFB54
	.quad	.LFE54-.LFB54
	.uleb128 0x1
	.byte	0x9c
	.long	0x4d41
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x902
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x902
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x24
	.quad	.LBB239
	.quad	.LBE239-.LBB239
	.long	0x4cce
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x902
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x902
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x902
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x25
	.quad	.LBB241
	.quad	.LBE241-.LBB241
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x904
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x904
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.quad	.LBB242
	.quad	.LBE242-.LBB242
	.long	0x4d20
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x907
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x25
	.quad	.LBB245
	.quad	.LBE245-.LBB245
	.uleb128 0x29
	.string	"u"
	.byte	0x1
	.value	0x90b
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF860
	.byte	0x1
	.value	0x917
	.long	0x11c7
	.quad	.LFB55
	.quad	.LFE55-.LFB55
	.uleb128 0x1
	.byte	0x9c
	.long	0x4e34
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x919
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x919
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0x919
	.quad	.L1083
	.uleb128 0x2c
	.long	.LASF861
	.byte	0x1
	.value	0x921
	.quad	.L1089
	.uleb128 0x24
	.quad	.LBB249
	.quad	.LBE249-.LBB249
	.long	0x4dd4
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x919
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0x919
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB251
	.quad	.LBE251-.LBB251
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x91b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF218
	.byte	0x1
	.value	0x91c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x25
	.quad	.LBB262
	.quad	.LBE262-.LBB262
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0x93b
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x29
	.string	"s"
	.byte	0x1
	.value	0x93c
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF862
	.byte	0x1
	.value	0x95e
	.long	0x11c7
	.quad	.LFB56
	.quad	.LFE56-.LFB56
	.uleb128 0x1
	.byte	0x9c
	.long	0x4ea4
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x960
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0x960
	.quad	.L1139
	.uleb128 0x25
	.quad	.LBB266
	.quad	.LBE266-.LBB266
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x960
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0x960
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF863
	.byte	0x1
	.value	0x965
	.long	0x11c7
	.quad	.LFB57
	.quad	.LFE57-.LFB57
	.uleb128 0x1
	.byte	0x9c
	.long	0x50cb
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x967
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x967
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0x967
	.quad	.L1156
	.uleb128 0x24
	.quad	.LBB267
	.quad	.LBE267-.LBB267
	.long	0x4f29
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x967
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0x967
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.byte	0
	.uleb128 0x25
	.quad	.LBB269
	.quad	.LBE269-.LBB269
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x969
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x24
	.quad	.LBB270
	.quad	.LBE270-.LBB270
	.long	0x4f6d
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x96c
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x24
	.quad	.LBB273
	.quad	.LBE273-.LBB273
	.long	0x4f91
	.uleb128 0x29
	.string	"u"
	.byte	0x1
	.value	0x970
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x25
	.quad	.LBB276
	.quad	.LBE276-.LBB276
	.uleb128 0x2a
	.long	.LASF864
	.byte	0x1
	.value	0x975
	.long	0x50cb
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF865
	.byte	0x1
	.value	0x976
	.long	0x1039
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0x977
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x24
	.quad	.LBB277
	.quad	.LBE277-.LBB277
	.long	0x50a8
	.uleb128 0x2a
	.long	.LASF866
	.byte	0x1
	.value	0x97f
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2a
	.long	.LASF794
	.byte	0x1
	.value	0x980
	.long	0x50cb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2a
	.long	.LASF867
	.byte	0x1
	.value	0x981
	.long	0x50cb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.string	"l"
	.byte	0x1
	.value	0x982
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2a
	.long	.LASF868
	.byte	0x1
	.value	0x983
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2a
	.long	.LASF869
	.byte	0x1
	.value	0x984
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x24
	.quad	.LBB278
	.quad	.LBE278-.LBB278
	.long	0x5064
	.uleb128 0x29
	.string	"c"
	.byte	0x1
	.value	0x988
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x24
	.quad	.LBB279
	.quad	.LBE279-.LBB279
	.long	0x5087
	.uleb128 0x29
	.string	"c"
	.byte	0x1
	.value	0x996
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB280
	.quad	.LBE280-.LBB280
	.uleb128 0x29
	.string	"c"
	.byte	0x1
	.value	0x9a2
	.long	0x1024
	.uleb128 0x3
	.byte	0x91
	.sleb128 -169
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB281
	.quad	.LBE281-.LBB281
	.uleb128 0x2a
	.long	.LASF870
	.byte	0x1
	.value	0x9b1
	.long	0x50d1
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1024
	.uleb128 0x6
	.byte	0x8
	.long	0x5e
	.uleb128 0x28
	.long	.LASF871
	.byte	0x1
	.value	0x9c5
	.long	0x11c7
	.quad	.LFB58
	.quad	.LFE58-.LFB58
	.uleb128 0x1
	.byte	0x9c
	.long	0x518b
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x9c7
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x9c7
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.quad	.LBB282
	.quad	.LBE282-.LBB282
	.long	0x515a
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x9c7
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x9c7
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x9c7
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB284
	.quad	.LBE284-.LBB284
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x9c9
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x9c9
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF872
	.byte	0x1
	.value	0x9cf
	.long	0x11c7
	.quad	.LFB59
	.quad	.LFE59-.LFB59
	.uleb128 0x1
	.byte	0x9c
	.long	0x522f
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x9d1
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x9d1
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x24
	.quad	.LBB287
	.quad	.LBE287-.LBB287
	.long	0x520d
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x9d1
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x9d1
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x9d1
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB289
	.quad	.LBE289-.LBB289
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0x9d3
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF874
	.byte	0x1
	.value	0x9dd
	.long	0x11c7
	.quad	.LFB60
	.quad	.LFE60-.LFB60
	.uleb128 0x1
	.byte	0x9c
	.long	0x52e3
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x9e0
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x9e0
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.quad	.LBB292
	.quad	.LBE292-.LBB292
	.long	0x52b2
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x9e0
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x9e0
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x9e0
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB294
	.quad	.LBE294-.LBB294
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x9e2
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x9e2
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2d
	.long	.LASF875
	.byte	0x1
	.value	0x9ec
	.long	0x11c7
	.quad	.LFB61
	.quad	.LFE61-.LFB61
	.uleb128 0x1
	.byte	0x9c
	.long	0x5397
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x9f1
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x9f1
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.quad	.LBB297
	.quad	.LBE297-.LBB297
	.long	0x5366
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x9f1
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x9f1
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x9f1
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB299
	.quad	.LBE299-.LBB299
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x9f3
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x9f3
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF876
	.byte	0x1
	.value	0x9fc
	.long	0x11c7
	.quad	.LFB62
	.quad	.LFE62-.LFB62
	.uleb128 0x1
	.byte	0x9c
	.long	0x5479
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x9fe
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x9fe
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.quad	.LBB302
	.quad	.LBE302-.LBB302
	.long	0x541b
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0x9fe
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0x9fe
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0x9fe
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB304
	.quad	.LBE304-.LBB304
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa00
	.long	0x131
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa00
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.quad	.LBB305
	.quad	.LBE305-.LBB305
	.uleb128 0x29
	.string	"l"
	.byte	0x1
	.value	0xa10
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"r"
	.byte	0x1
	.value	0xa11
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF877
	.byte	0x1
	.value	0xa24
	.long	0x11c7
	.quad	.LFB63
	.quad	.LFE63-.LFB63
	.uleb128 0x1
	.byte	0x9c
	.long	0x553d
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa26
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xa26
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.quad	.LBB308
	.quad	.LBE308-.LBB308
	.long	0x54fd
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa26
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa26
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa26
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB310
	.quad	.LBE310-.LBB310
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa28
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF878
	.byte	0x1
	.value	0xa28
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa28
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF879
	.byte	0x1
	.value	0xa2e
	.long	0x11c7
	.quad	.LFB64
	.quad	.LFE64-.LFB64
	.uleb128 0x1
	.byte	0x9c
	.long	0x5601
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa30
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xa30
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.quad	.LBB313
	.quad	.LBE313-.LBB313
	.long	0x55c1
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa30
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa30
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa30
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB315
	.quad	.LBE315-.LBB315
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa32
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF878
	.byte	0x1
	.value	0xa32
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa32
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF880
	.byte	0x1
	.value	0xa38
	.long	0x11c7
	.quad	.LFB65
	.quad	.LFE65-.LFB65
	.uleb128 0x1
	.byte	0x9c
	.long	0x56a5
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa3a
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB318
	.quad	.LBE318-.LBB318
	.long	0x5674
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa3a
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa3a
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa3a
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB319
	.quad	.LBE319-.LBB319
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa3c
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa3c
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF881
	.byte	0x1
	.value	0xa42
	.long	0x11c7
	.quad	.LFB66
	.quad	.LFE66-.LFB66
	.uleb128 0x1
	.byte	0x9c
	.long	0x5749
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa44
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB320
	.quad	.LBE320-.LBB320
	.long	0x5718
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa44
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa44
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa44
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB321
	.quad	.LBE321-.LBB321
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa46
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa46
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF882
	.byte	0x1
	.value	0xa4c
	.long	0x11c7
	.quad	.LFB67
	.quad	.LFE67-.LFB67
	.uleb128 0x1
	.byte	0x9c
	.long	0x57ed
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa4e
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB322
	.quad	.LBE322-.LBB322
	.long	0x57bc
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa4e
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa4e
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa4e
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB323
	.quad	.LBE323-.LBB323
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa50
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa50
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF883
	.byte	0x1
	.value	0xa56
	.long	0x11c7
	.quad	.LFB68
	.quad	.LFE68-.LFB68
	.uleb128 0x1
	.byte	0x9c
	.long	0x5891
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa58
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB324
	.quad	.LBE324-.LBB324
	.long	0x5860
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa58
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa58
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa58
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB325
	.quad	.LBE325-.LBB325
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa5a
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa5a
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF884
	.byte	0x1
	.value	0xa60
	.long	0x11c7
	.quad	.LFB69
	.quad	.LFE69-.LFB69
	.uleb128 0x1
	.byte	0x9c
	.long	0x5935
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa62
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB326
	.quad	.LBE326-.LBB326
	.long	0x5904
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa62
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa62
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa62
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB327
	.quad	.LBE327-.LBB327
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa64
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa64
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF885
	.byte	0x1
	.value	0xa6a
	.long	0x11c7
	.quad	.LFB70
	.quad	.LFE70-.LFB70
	.uleb128 0x1
	.byte	0x9c
	.long	0x59d9
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa6c
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x24
	.quad	.LBB328
	.quad	.LBE328-.LBB328
	.long	0x59a8
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa6c
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa6c
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa6c
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB329
	.quad	.LBE329-.LBB329
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa6e
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa6e
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF886
	.byte	0x1
	.value	0xa74
	.long	0x11c7
	.quad	.LFB71
	.quad	.LFE71-.LFB71
	.uleb128 0x1
	.byte	0x9c
	.long	0x5a9d
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa76
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xa76
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.quad	.LBB330
	.quad	.LBE330-.LBB330
	.long	0x5a5c
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa76
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa76
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa76
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB332
	.quad	.LBE332-.LBB332
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa78
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa78
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0xa79
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF887
	.byte	0x1
	.value	0xa86
	.long	0x11c7
	.quad	.LFB72
	.quad	.LFE72-.LFB72
	.uleb128 0x1
	.byte	0x9c
	.long	0x5b1c
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa88
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xa88
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0xa88
	.quad	.L1414
	.uleb128 0x25
	.quad	.LBB335
	.quad	.LBE335-.LBB335
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa88
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0xa88
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF888
	.byte	0x1
	.value	0xa8f
	.long	0x11c7
	.quad	.LFB73
	.quad	.LFE73-.LFB73
	.uleb128 0x1
	.byte	0x9c
	.long	0x5bd0
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa91
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xa91
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.quad	.LBB339
	.quad	.LBE339-.LBB339
	.long	0x5b9f
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa91
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa91
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa91
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x25
	.quad	.LBB341
	.quad	.LBE341-.LBB341
	.uleb128 0x2a
	.long	.LASF789
	.byte	0x1
	.value	0xa93
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF790
	.byte	0x1
	.value	0xa93
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF889
	.byte	0x1
	.value	0xa99
	.long	0x11c7
	.quad	.LFB74
	.quad	.LFE74-.LFB74
	.uleb128 0x1
	.byte	0x9c
	.long	0x5c74
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xa9b
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xa9b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0xa9b
	.quad	.L1437
	.uleb128 0x24
	.quad	.LBB344
	.quad	.LBE344-.LBB344
	.long	0x5c52
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xa9b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0xa9b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB346
	.quad	.LBE346-.LBB346
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0xa9d
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF890
	.byte	0x1
	.value	0xaa5
	.long	0x11c7
	.quad	.LFB75
	.quad	.LFE75-.LFB75
	.uleb128 0x1
	.byte	0x9c
	.long	0x5d18
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xaa7
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xaa7
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0xaa7
	.quad	.L1448
	.uleb128 0x24
	.quad	.LBB350
	.quad	.LBE350-.LBB350
	.long	0x5cf6
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xaa7
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0xaa7
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB352
	.quad	.LBE352-.LBB352
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0xaa9
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF891
	.byte	0x1
	.value	0xac0
	.long	0x11c7
	.quad	.LFB76
	.quad	.LFE76-.LFB76
	.uleb128 0x1
	.byte	0x9c
	.long	0x5d66
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xac2
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xac2
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0xac3
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x28
	.long	.LASF892
	.byte	0x1
	.value	0xad3
	.long	0x11c7
	.quad	.LFB77
	.quad	.LFE77-.LFB77
	.uleb128 0x1
	.byte	0x9c
	.long	0x5da5
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xad5
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF865
	.byte	0x1
	.value	0xad6
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF893
	.byte	0x1
	.value	0xae1
	.long	0x11c7
	.quad	.LFB78
	.quad	.LFE78-.LFB78
	.uleb128 0x1
	.byte	0x9c
	.long	0x5e49
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xae3
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xae3
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0xae3
	.quad	.L1478
	.uleb128 0x24
	.quad	.LBB359
	.quad	.LBE359-.LBB359
	.long	0x5e27
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xae3
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0xae3
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB361
	.quad	.LBE361-.LBB361
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0xae5
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF894
	.byte	0x1
	.value	0xaed
	.long	0x11c7
	.quad	.LFB79
	.quad	.LFE79-.LFB79
	.uleb128 0x1
	.byte	0x9c
	.long	0x5eed
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xaef
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xaef
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0xaef
	.quad	.L1489
	.uleb128 0x24
	.quad	.LBB365
	.quad	.LBE365-.LBB365
	.long	0x5ecb
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xaef
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0xaef
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB367
	.quad	.LBE367-.LBB367
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0xaf1
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF895
	.byte	0x1
	.value	0xafd
	.long	0x11c7
	.quad	.LFB80
	.quad	.LFE80-.LFB80
	.uleb128 0x1
	.byte	0x9c
	.long	0x5f91
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xaff
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xaff
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0xaff
	.quad	.L1504
	.uleb128 0x24
	.quad	.LBB371
	.quad	.LBE371-.LBB371
	.long	0x5f6f
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xaff
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0xaff
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB373
	.quad	.LBE373-.LBB373
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0xb01
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF896
	.byte	0x1
	.value	0xb0d
	.long	0x11c7
	.quad	.LFB81
	.quad	.LFE81-.LFB81
	.uleb128 0x1
	.byte	0x9c
	.long	0x6065
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xb0f
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xb0f
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0xb0f
	.quad	.L1519
	.uleb128 0x24
	.quad	.LBB377
	.quad	.LBE377-.LBB377
	.long	0x6015
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xb0f
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0xb0f
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB379
	.quad	.LBE379-.LBB379
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0xb11
	.long	0x147
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"iv"
	.byte	0x1
	.value	0xb12
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.quad	.LBB382
	.quad	.LBE382-.LBB382
	.uleb128 0x29
	.string	"uv"
	.byte	0x1
	.value	0xb1c
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF897
	.byte	0x1
	.value	0xb35
	.long	0x11c7
	.quad	.LFB82
	.quad	.LFE82-.LFB82
	.uleb128 0x1
	.byte	0x9c
	.long	0x612a
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xb37
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xb37
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.long	.LASF747
	.byte	0x1
	.value	0xb37
	.quad	.L1557
	.uleb128 0x24
	.quad	.LBB395
	.quad	.LBE395-.LBB395
	.long	0x60e7
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xb37
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"arg"
	.byte	0x1
	.value	0xb37
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB397
	.quad	.LBE397-.LBB397
	.uleb128 0x29
	.string	"iv"
	.byte	0x1
	.value	0xb3a
	.long	0x131
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.quad	.LBB408
	.quad	.LBE408-.LBB408
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0xb50
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF898
	.byte	0x1
	.value	0xb5a
	.long	0x11c7
	.quad	.LFB83
	.quad	.LFE83-.LFB83
	.uleb128 0x1
	.byte	0x9c
	.long	0x61e7
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xb5c
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xb5c
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF864
	.byte	0x1
	.value	0xb5d
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF218
	.byte	0x1
	.value	0xb5e
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0xb5f
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2a
	.long	.LASF899
	.byte	0x1
	.value	0xb60
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF900
	.byte	0x1
	.value	0xb61
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xb62
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.quad	.LBB411
	.quad	.LBE411-.LBB411
	.uleb128 0x29
	.string	"tsv"
	.byte	0x1
	.value	0xb68
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF901
	.byte	0x1
	.value	0xb78
	.long	0x11c7
	.quad	.LFB84
	.quad	.LFE84-.LFB84
	.uleb128 0x1
	.byte	0x9c
	.long	0x62a4
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xb7a
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xb7a
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF864
	.byte	0x1
	.value	0xb7b
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF218
	.byte	0x1
	.value	0xb7c
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0xb7d
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2a
	.long	.LASF899
	.byte	0x1
	.value	0xb7e
	.long	0x147
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF900
	.byte	0x1
	.value	0xb7f
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xb80
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.quad	.LBB418
	.quad	.LBE418-.LBB418
	.uleb128 0x29
	.string	"tsv"
	.byte	0x1
	.value	0xb86
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF902
	.byte	0x1
	.value	0xba2
	.long	0x11c7
	.quad	.LFB85
	.quad	.LFE85-.LFB85
	.uleb128 0x1
	.byte	0x9c
	.long	0x62f1
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xba4
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xba4
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xba5
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF903
	.byte	0x1
	.value	0xbae
	.long	0x11c7
	.quad	.LFB86
	.quad	.LFE86-.LFB86
	.uleb128 0x1
	.byte	0x9c
	.long	0x64a6
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xbb0
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xbb0
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xbb1
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0xbb2
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x2a
	.long	.LASF904
	.byte	0x1
	.value	0xbb3
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF905
	.byte	0x1
	.value	0xbb4
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x29
	.string	"pos"
	.byte	0x1
	.value	0xbb5
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x29
	.string	"rem"
	.byte	0x1
	.value	0xbb6
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2a
	.long	.LASF906
	.byte	0x1
	.value	0xbb7
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2a
	.long	.LASF907
	.byte	0x1
	.value	0xbb8
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x2a
	.long	.LASF864
	.byte	0x1
	.value	0xbb9
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.long	.LASF908
	.byte	0x1
	.value	0xbba
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.long	.LASF909
	.byte	0x1
	.value	0xbbb
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF910
	.byte	0x1
	.value	0xbbc
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF911
	.byte	0x1
	.value	0xbbd
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.long	.LASF912
	.byte	0x1
	.value	0xbbe
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x2a
	.long	.LASF913
	.byte	0x1
	.value	0xbbf
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -150
	.uleb128 0x2a
	.long	.LASF914
	.byte	0x1
	.value	0xbc0
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -149
	.uleb128 0x25
	.quad	.LBB429
	.quad	.LBE429-.LBB429
	.uleb128 0x2a
	.long	.LASF915
	.byte	0x1
	.value	0xc0b
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2a
	.long	.LASF916
	.byte	0x1
	.value	0xc0c
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x24
	.quad	.LBB430
	.quad	.LBE430-.LBB430
	.long	0x6482
	.uleb128 0x2a
	.long	.LASF917
	.byte	0x1
	.value	0xc24
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x25
	.quad	.LBB431
	.quad	.LBE431-.LBB431
	.uleb128 0x29
	.string	"n_a"
	.byte	0x1
	.value	0xc35
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF918
	.byte	0x1
	.value	0xc57
	.long	0x11c7
	.quad	.LFB87
	.quad	.LFE87-.LFB87
	.uleb128 0x1
	.byte	0x9c
	.long	0x651e
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xc59
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xc59
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF919
	.byte	0x1
	.value	0xc5a
	.long	0x131
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x2a
	.long	.LASF920
	.byte	0x1
	.value	0xc5b
	.long	0x131
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x29
	.string	"src"
	.byte	0x1
	.value	0xc5c
	.long	0x106c
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF907
	.byte	0x1
	.value	0xc5d
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.uleb128 0x28
	.long	.LASF921
	.byte	0x1
	.value	0xc76
	.long	0x11c7
	.quad	.LFB88
	.quad	.LFE88-.LFB88
	.uleb128 0x1
	.byte	0x9c
	.long	0x664a
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xc78
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xc78
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.string	"big"
	.byte	0x1
	.value	0xc79
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2a
	.long	.LASF922
	.byte	0x1
	.value	0xc7a
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2a
	.long	.LASF923
	.byte	0x1
	.value	0xc7b
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF920
	.byte	0x1
	.value	0xc7c
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x2a
	.long	.LASF924
	.byte	0x1
	.value	0xc7d
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2a
	.long	.LASF864
	.byte	0x1
	.value	0xc7e
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF925
	.byte	0x1
	.value	0xc7f
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.long	.LASF926
	.byte	0x1
	.value	0xc80
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.long	.LASF908
	.byte	0x1
	.value	0xc81
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF927
	.byte	0x1
	.value	0xc82
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x2a
	.long	.LASF928
	.byte	0x1
	.value	0xc83
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x25
	.quad	.LBB432
	.quad	.LBE432-.LBB432
	.uleb128 0x2a
	.long	.LASF929
	.byte	0x1
	.value	0xc8f
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0xc90
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x29
	.string	"p"
	.byte	0x1
	.value	0xc91
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF930
	.byte	0x1
	.value	0xcb5
	.long	0x11c7
	.quad	.LFB89
	.quad	.LFE89-.LFB89
	.uleb128 0x1
	.byte	0x9c
	.long	0x6786
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xcb7
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xcb7
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.string	"big"
	.byte	0x1
	.value	0xcb8
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2a
	.long	.LASF922
	.byte	0x1
	.value	0xcb9
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2a
	.long	.LASF923
	.byte	0x1
	.value	0xcba
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF931
	.byte	0x1
	.value	0xcbb
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF932
	.byte	0x1
	.value	0xcbc
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.long	.LASF920
	.byte	0x1
	.value	0xcbd
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x2a
	.long	.LASF924
	.byte	0x1
	.value	0xcbe
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.long	.LASF864
	.byte	0x1
	.value	0xcbf
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.long	.LASF925
	.byte	0x1
	.value	0xcc0
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF908
	.byte	0x1
	.value	0xcc1
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2a
	.long	.LASF927
	.byte	0x1
	.value	0xcc2
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x2a
	.long	.LASF928
	.byte	0x1
	.value	0xcc3
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x25
	.quad	.LBB435
	.quad	.LBE435-.LBB435
	.uleb128 0x2a
	.long	.LASF929
	.byte	0x1
	.value	0xccd
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0xcce
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x29
	.string	"p"
	.byte	0x1
	.value	0xccf
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF933
	.byte	0x1
	.value	0xcfa
	.long	0x11c7
	.quad	.LFB90
	.quad	.LFE90-.LFB90
	.uleb128 0x1
	.byte	0x9c
	.long	0x67e2
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xcfc
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0xcfc
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF777
	.byte	0x1
	.value	0xcfc
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xcfc
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF934
	.byte	0x1
	.value	0xd06
	.long	0x11c7
	.quad	.LFB91
	.quad	.LFE91-.LFB91
	.uleb128 0x1
	.byte	0x9c
	.long	0x685c
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xd08
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xd08
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF935
	.byte	0x1
	.value	0xd09
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0xd0a
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.string	"s"
	.byte	0x1
	.value	0xd0b
	.long	0x50cb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xd0c
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF936
	.byte	0x1
	.value	0xd1b
	.long	0x11c7
	.quad	.LFB92
	.quad	.LFE92-.LFB92
	.uleb128 0x1
	.byte	0x9c
	.long	0x68b9
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xd1d
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xd1d
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF864
	.byte	0x1
	.value	0xd1e
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.long	.LASF834
	.byte	0x1
	.value	0xd1f
	.long	0x13c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x28
	.long	.LASF937
	.byte	0x1
	.value	0xd46
	.long	0x11c7
	.quad	.LFB93
	.quad	.LFE93-.LFB93
	.uleb128 0x1
	.byte	0x9c
	.long	0x68f6
	.uleb128 0x2f
	.string	"sp"
	.byte	0x1
	.value	0xd48
	.long	0x1d3f
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xd48
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x28
	.long	.LASF938
	.byte	0x1
	.value	0xd78
	.long	0x11c7
	.quad	.LFB94
	.quad	.LFE94-.LFB94
	.uleb128 0x1
	.byte	0x9c
	.long	0x69cc
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xd7a
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xd7b
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.string	"s"
	.byte	0x1
	.value	0xd7c
	.long	0x50cb
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF939
	.byte	0x1
	.value	0xd7d
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x30
	.long	.Ldebug_ranges0+0
	.long	0x69aa
	.uleb128 0x2a
	.long	.LASF940
	.byte	0x1
	.value	0xd83
	.long	0x69cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF941
	.byte	0x1
	.value	0xd84
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2a
	.long	.LASF942
	.byte	0x1
	.value	0xd85
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.quad	.LBB445
	.quad	.LBE445-.LBB445
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xd8c
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB447
	.quad	.LBE447-.LBB447
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xda1
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x1024
	.long	0x69dc
	.uleb128 0xb
	.long	0x65
	.byte	0x6
	.byte	0
	.uleb128 0x28
	.long	.LASF943
	.byte	0x1
	.value	0xdb6
	.long	0x11c7
	.quad	.LFB95
	.quad	.LFE95-.LFB95
	.uleb128 0x1
	.byte	0x9c
	.long	0x6ac1
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xdb8
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xdb9
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.string	"s"
	.byte	0x1
	.value	0xdba
	.long	0x50cb
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF939
	.byte	0x1
	.value	0xdbb
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x30
	.long	.Ldebug_ranges0+0x30
	.long	0x6a9f
	.uleb128 0x2a
	.long	.LASF941
	.byte	0x1
	.value	0xdc1
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2a
	.long	.LASF940
	.byte	0x1
	.value	0xdc2
	.long	0x69cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF944
	.byte	0x1
	.value	0xdc3
	.long	0x50cb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.string	"uv"
	.byte	0x1
	.value	0xdc4
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.quad	.LBB449
	.quad	.LBE449-.LBB449
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xdcb
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x25
	.quad	.LBB451
	.quad	.LBE451-.LBB451
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xdd9
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF945
	.byte	0x1
	.value	0xdee
	.long	0x11c7
	.quad	.LFB96
	.quad	.LFE96-.LFB96
	.uleb128 0x1
	.byte	0x9c
	.long	0x6c1a
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xdf0
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xdf1
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x29
	.string	"s"
	.byte	0x1
	.value	0xdf2
	.long	0x50cb
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0xdf3
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x30
	.long	.Ldebug_ranges0+0x60
	.long	0x6bd3
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xdf7
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2a
	.long	.LASF941
	.byte	0x1
	.value	0xdf8
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x29
	.string	"d"
	.byte	0x1
	.value	0xdf9
	.long	0x50cb
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF867
	.byte	0x1
	.value	0xdfa
	.long	0x50cb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF940
	.byte	0x1
	.value	0xdfb
	.long	0x6c1a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.quad	.LBB453
	.quad	.LBE453-.LBB453
	.uleb128 0x29
	.string	"min"
	.byte	0x1
	.value	0xe04
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x25
	.quad	.LBB454
	.quad	.LBE454-.LBB454
	.uleb128 0x29
	.string	"u"
	.byte	0x1
	.value	0xe0c
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x25
	.quad	.LBB455
	.quad	.LBE455-.LBB455
	.uleb128 0x29
	.string	"o"
	.byte	0x1
	.value	0xe12
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x24
	.quad	.LBB457
	.quad	.LBE457-.LBB457
	.long	0x6bf9
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xe27
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x25
	.quad	.LBB458
	.quad	.LBE458-.LBB458
	.uleb128 0x2a
	.long	.LASF867
	.byte	0x1
	.value	0xe2f
	.long	0x50cb
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x1024
	.long	0x6c2a
	.uleb128 0xb
	.long	0x65
	.byte	0xd
	.byte	0
	.uleb128 0x28
	.long	.LASF946
	.byte	0x1
	.value	0xe41
	.long	0x11c7
	.quad	.LFB97
	.quad	.LFE97-.LFB97
	.uleb128 0x1
	.byte	0x9c
	.long	0x6d91
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xe43
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xe44
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x29
	.string	"s"
	.byte	0x1
	.value	0xe45
	.long	0x50cb
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0xe46
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x30
	.long	.Ldebug_ranges0+0x90
	.long	0x6d4a
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xe4a
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF941
	.byte	0x1
	.value	0xe4b
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x29
	.string	"d"
	.byte	0x1
	.value	0xe4c
	.long	0x50cb
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF867
	.byte	0x1
	.value	0xe4d
	.long	0x50cb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.long	.LASF940
	.byte	0x1
	.value	0xe4e
	.long	0x69cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x25
	.quad	.LBB460
	.quad	.LBE460-.LBB460
	.uleb128 0x29
	.string	"min"
	.byte	0x1
	.value	0xe57
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x25
	.quad	.LBB461
	.quad	.LBE461-.LBB461
	.uleb128 0x29
	.string	"u"
	.byte	0x1
	.value	0xe5f
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x29
	.string	"uv"
	.byte	0x1
	.value	0xe60
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.quad	.LBB462
	.quad	.LBE462-.LBB462
	.uleb128 0x29
	.string	"o"
	.byte	0x1
	.value	0xe78
	.long	0x13c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x24
	.quad	.LBB464
	.quad	.LBE464-.LBB464
	.long	0x6d70
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xe8d
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB465
	.quad	.LBE465-.LBB465
	.uleb128 0x2a
	.long	.LASF867
	.byte	0x1
	.value	0xe96
	.long	0x50cb
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF947
	.byte	0x1
	.value	0xea8
	.long	0x11c7
	.quad	.LFB98
	.quad	.LFE98-.LFB98
	.uleb128 0x1
	.byte	0x9c
	.long	0x6e28
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xeaa
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0xeaa
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xeab
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0xeac
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x29
	.string	"s"
	.byte	0x1
	.value	0xead
	.long	0x79
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"d"
	.byte	0x1
	.value	0xeae
	.long	0x79
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x25
	.quad	.LBB466
	.quad	.LBE466-.LBB466
	.uleb128 0x2a
	.long	.LASF941
	.byte	0x1
	.value	0xeb8
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF948
	.byte	0x1
	.value	0xedd
	.long	0x11c7
	.quad	.LFB99
	.quad	.LFE99-.LFB99
	.uleb128 0x1
	.byte	0x9c
	.long	0x6ee1
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xedf
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0xedf
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF777
	.byte	0x1
	.value	0xedf
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.string	"svp"
	.byte	0x1
	.value	0xee0
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x29
	.string	"av"
	.byte	0x1
	.value	0xee1
	.long	0x11ea
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x2a
	.long	.LASF610
	.byte	0x1
	.value	0xee2
	.long	0x1039
	.uleb128 0x1
	.byte	0x5f
	.uleb128 0x2a
	.long	.LASF908
	.byte	0x1
	.value	0xee3
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2a
	.long	.LASF769
	.byte	0x1
	.value	0xee4
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x25
	.quad	.LBB467
	.quad	.LBE467-.LBB467
	.uleb128 0x29
	.string	"max"
	.byte	0x1
	.value	0xee8
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF949
	.byte	0x1
	.value	0xf0a
	.long	0x11c7
	.quad	.LFB100
	.quad	.LFE100-.LFB100
	.uleb128 0x1
	.byte	0x9c
	.long	0x6f90
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xf0c
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF950
	.byte	0x1
	.value	0xf0d
	.long	0x11af
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF951
	.byte	0x1
	.value	0xf0e
	.long	0x1f63
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF740
	.byte	0x1
	.value	0xf0f
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF952
	.byte	0x1
	.value	0xf10
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x25
	.quad	.LBB468
	.quad	.LBE468-.LBB468
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xf19
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x25
	.quad	.LBB469
	.quad	.LBE469-.LBB469
	.uleb128 0x29
	.string	"val"
	.byte	0x1
	.value	0xf1c
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF953
	.byte	0x1
	.value	0xf2b
	.long	0x11c7
	.quad	.LFB101
	.quad	.LFE101-.LFB101
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x31
	.long	.LASF954
	.byte	0x1
	.value	0xf30
	.long	0x11c7
	.quad	.LFB102
	.quad	.LFE102-.LFB102
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x28
	.long	.LASF955
	.byte	0x1
	.value	0xf35
	.long	0x11c7
	.quad	.LFB103
	.quad	.LFE103-.LFB103
	.uleb128 0x1
	.byte	0x9c
	.long	0x709b
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xf37
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF740
	.byte	0x1
	.value	0xf38
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF956
	.byte	0x1
	.value	0xf39
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xf3a
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"hv"
	.byte	0x1
	.value	0xf3b
	.long	0x11af
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.quad	.LBB470
	.quad	.LBE470-.LBB470
	.long	0x7079
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0xf3e
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF777
	.byte	0x1
	.value	0xf3e
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF957
	.byte	0x1
	.value	0xf3f
	.long	0x1044
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.uleb128 0x25
	.quad	.LBB471
	.quad	.LBE471-.LBB471
	.uleb128 0x2a
	.long	.LASF958
	.byte	0x1
	.value	0xf64
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF959
	.byte	0x1
	.value	0xf78
	.long	0x11c7
	.quad	.LFB104
	.quad	.LFE104-.LFB104
	.uleb128 0x1
	.byte	0x9c
	.long	0x7125
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xf7a
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF748
	.byte	0x1
	.value	0xf7b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.string	"hv"
	.byte	0x1
	.value	0xf7c
	.long	0x11af
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.quad	.LBB472
	.quad	.LBE472-.LBB472
	.uleb128 0x29
	.string	"gv"
	.byte	0x1
	.value	0xf7f
	.long	0x11e4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"cv"
	.byte	0x1
	.value	0xf80
	.long	0x11d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0xf81
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF960
	.byte	0x1
	.value	0xf9d
	.long	0x11c7
	.quad	.LFB105
	.quad	.LFE105-.LFB105
	.uleb128 0x1
	.byte	0x9c
	.long	0x72b2
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xf9f
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0xf9f
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF777
	.byte	0x1
	.value	0xf9f
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x29
	.string	"hv"
	.byte	0x1
	.value	0xfa0
	.long	0x11af
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF610
	.byte	0x1
	.value	0xfa1
	.long	0x1039
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x2a
	.long	.LASF952
	.byte	0x1
	.value	0xfa2
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x2a
	.long	.LASF961
	.byte	0x1
	.value	0xfa3
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -129
	.uleb128 0x2a
	.long	.LASF962
	.byte	0x1
	.value	0xfa4
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -131
	.uleb128 0x24
	.quad	.LBB473
	.quad	.LBE473-.LBB473
	.long	0x71f2
	.uleb128 0x29
	.string	"mg"
	.byte	0x1
	.value	0xfa7
	.long	0x11a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.long	.LASF755
	.byte	0x1
	.value	0xfa8
	.long	0x11af
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x25
	.quad	.LBB474
	.quad	.LBE474-.LBB474
	.uleb128 0x2a
	.long	.LASF958
	.byte	0x1
	.value	0xfb9
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.string	"svp"
	.byte	0x1
	.value	0xfba
	.long	0x1d3f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2a
	.long	.LASF963
	.byte	0x1
	.value	0xfbb
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -130
	.uleb128 0x24
	.quad	.LBB475
	.quad	.LBE475-.LBB475
	.long	0x7258
	.uleb128 0x29
	.string	"he"
	.byte	0x1
	.value	0xfc4
	.long	0x1f63
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x24
	.quad	.LBB476
	.quad	.LBE476-.LBB476
	.long	0x727e
	.uleb128 0x29
	.string	"n_a"
	.byte	0x1
	.value	0xfcc
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x25
	.quad	.LBB477
	.quad	.LBE477-.LBB477
	.uleb128 0x2a
	.long	.LASF964
	.byte	0x1
	.value	0xfd3
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x29
	.string	"key"
	.byte	0x1
	.value	0xfd4
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF965
	.byte	0x1
	.value	0xfe6
	.long	0x11c7
	.quad	.LFB106
	.quad	.LFE106-.LFB106
	.uleb128 0x1
	.byte	0x9c
	.long	0x72f0
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xfe8
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0xfe8
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x28
	.long	.LASF966
	.byte	0x1
	.value	0xff3
	.long	0x11c7
	.quad	.LFB107
	.quad	.LFE107-.LFB107
	.uleb128 0x1
	.byte	0x9c
	.long	0x73b5
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0xff5
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF967
	.byte	0x1
	.value	0xff6
	.long	0x1d3f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.long	.LASF968
	.byte	0x1
	.value	0xff7
	.long	0x1d3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2a
	.long	.LASF969
	.byte	0x1
	.value	0xff8
	.long	0x1d3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.long	.LASF970
	.byte	0x1
	.value	0xff9
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x2a
	.long	.LASF908
	.byte	0x1
	.value	0xffa
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF610
	.byte	0x1
	.value	0xffb
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2a
	.long	.LASF971
	.byte	0x1
	.value	0xffc
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x29
	.string	"max"
	.byte	0x1
	.value	0xffe
	.long	0x1039
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF972
	.byte	0x1
	.value	0xfff
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x29
	.string	"ix"
	.byte	0x1
	.value	0x1000
	.long	0x1039
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x28
	.long	.LASF973
	.byte	0x1
	.value	0x102a
	.long	0x11c7
	.quad	.LFB108
	.quad	.LFE108-.LFB108
	.uleb128 0x1
	.byte	0x9c
	.long	0x741f
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x102c
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x102c
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF777
	.byte	0x1
	.value	0x102c
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.long	.LASF824
	.byte	0x1
	.value	0x102d
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x29
	.string	"av"
	.byte	0x1
	.value	0x102e
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF974
	.byte	0x1
	.value	0x1034
	.long	0x11c7
	.quad	.LFB109
	.quad	.LFE109-.LFB109
	.uleb128 0x1
	.byte	0x9c
	.long	0x74aa
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x1036
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x1036
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF777
	.byte	0x1
	.value	0x1036
	.long	0x1039
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x29
	.string	"hv"
	.byte	0x1
	.value	0x1037
	.long	0x11af
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x25
	.quad	.LBB479
	.quad	.LBE479-.LBB479
	.uleb128 0x29
	.string	"key"
	.byte	0x1
	.value	0x103a
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"val"
	.byte	0x1
	.value	0x103b
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF975
	.byte	0x1
	.value	0x1047
	.long	0x11c7
	.quad	.LFB110
	.quad	.LFE110-.LFB110
	.uleb128 0x1
	.byte	0x9c
	.long	0x75db
	.uleb128 0x2f
	.string	"sp"
	.byte	0x1
	.value	0x1049
	.long	0x1d3f
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x1049
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF777
	.byte	0x1
	.value	0x1049
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x29
	.string	"ary"
	.byte	0x1
	.value	0x104a
	.long	0x11ea
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"src"
	.byte	0x1
	.value	0x104b
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x29
	.string	"dst"
	.byte	0x1
	.value	0x104c
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5f
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x104d
	.long	0x1039
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x32
	.long	.LASF920
	.byte	0x1
	.value	0x104e
	.long	0x1039
	.uleb128 0x2a
	.long	.LASF976
	.byte	0x1
	.value	0x104f
	.long	0x1039
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF977
	.byte	0x1
	.value	0x1050
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x2a
	.long	.LASF978
	.byte	0x1
	.value	0x1051
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x2a
	.long	.LASF798
	.byte	0x1
	.value	0x1052
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2a
	.long	.LASF979
	.byte	0x1
	.value	0x1053
	.long	0x1d3f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.string	"mg"
	.byte	0x1
	.value	0x1054
	.long	0x11a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x24
	.quad	.LBB482
	.quad	.LBE482-.LBB482
	.long	0x75b8
	.uleb128 0x29
	.string	"h"
	.byte	0x1
	.value	0x1090
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x25
	.quad	.LBB483
	.quad	.LBE483-.LBB483
	.uleb128 0x2a
	.long	.LASF826
	.byte	0x1
	.value	0x109c
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF980
	.byte	0x1
	.value	0x1116
	.long	0x11c7
	.quad	.LFB111
	.quad	.LFE111-.LFB111
	.uleb128 0x1
	.byte	0x9c
	.long	0x7661
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x1118
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x1118
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF777
	.byte	0x1
	.value	0x1118
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x1118
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"ary"
	.byte	0x1
	.value	0x1119
	.long	0x11ea
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x111a
	.long	0x106c
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x29
	.string	"mg"
	.byte	0x1
	.value	0x111b
	.long	0x11a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x28
	.long	.LASF981
	.byte	0x1
	.value	0x1134
	.long	0x11c7
	.quad	.LFB112
	.quad	.LFE112-.LFB112
	.uleb128 0x1
	.byte	0x9c
	.long	0x76ad
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x1136
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"av"
	.byte	0x1
	.value	0x1137
	.long	0x11ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x1138
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF982
	.byte	0x1
	.value	0x113f
	.long	0x11c7
	.quad	.LFB113
	.quad	.LFE113-.LFB113
	.uleb128 0x1
	.byte	0x9c
	.long	0x76f9
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x1141
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"av"
	.byte	0x1
	.value	0x1142
	.long	0x11ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x1143
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x28
	.long	.LASF983
	.byte	0x1
	.value	0x114d
	.long	0x11c7
	.quad	.LFB114
	.quad	.LFE114-.LFB114
	.uleb128 0x1
	.byte	0x9c
	.long	0x778d
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x114f
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x114f
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF777
	.byte	0x1
	.value	0x114f
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x114f
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x29
	.string	"ary"
	.byte	0x1
	.value	0x1150
	.long	0x11ea
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x1151
	.long	0x106c
	.uleb128 0x1
	.byte	0x5f
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x1152
	.long	0x1039
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x29
	.string	"mg"
	.byte	0x1
	.value	0x1153
	.long	0x11a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x28
	.long	.LASF984
	.byte	0x1
	.value	0x116a
	.long	0x11c7
	.quad	.LFB115
	.quad	.LFE115-.LFB115
	.uleb128 0x1
	.byte	0x9c
	.long	0x7872
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x116c
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF764
	.byte	0x1
	.value	0x116c
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x29
	.string	"tmp"
	.byte	0x1
	.value	0x116d
	.long	0x106c
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF985
	.byte	0x1
	.value	0x116e
	.long	0x1d3f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x25
	.quad	.LBB490
	.quad	.LBE490-.LBB490
	.uleb128 0x29
	.string	"up"
	.byte	0x1
	.value	0x117b
	.long	0x79
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF986
	.byte	0x1
	.value	0x117c
	.long	0x79
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x29
	.string	"tmp"
	.byte	0x1
	.value	0x117d
	.long	0x1039
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x117e
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0x117f
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x25
	.quad	.LBB491
	.quad	.LBE491-.LBB491
	.uleb128 0x29
	.string	"s"
	.byte	0x1
	.value	0x1189
	.long	0x50cb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.long	.LASF867
	.byte	0x1
	.value	0x118a
	.long	0x50cb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF987
	.byte	0x1
	.value	0x11ae
	.long	0x11c7
	.quad	.LFB116
	.quad	.LFE116-.LFB116
	.uleb128 0x1
	.byte	0x9c
	.long	0x7ab6
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x11b0
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2a
	.long	.LASF739
	.byte	0x1
	.value	0x11b0
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.string	"ary"
	.byte	0x1
	.value	0x11b1
	.long	0x11ea
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x32
	.long	.LASF988
	.byte	0x1
	.value	0x11b2
	.long	0x131
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x11b3
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x29
	.string	"len"
	.byte	0x1
	.value	0x11b4
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x29
	.string	"s"
	.byte	0x1
	.value	0x11b5
	.long	0x79
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2a
	.long	.LASF989
	.byte	0x1
	.value	0x11b6
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -202
	.uleb128 0x2a
	.long	.LASF990
	.byte	0x1
	.value	0x11b7
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x29
	.string	"pm"
	.byte	0x1
	.value	0x11b8
	.long	0x1bd0
	.uleb128 0x1
	.byte	0x5f
	.uleb128 0x29
	.string	"rx"
	.byte	0x1
	.value	0x11b9
	.long	0x1bd6
	.uleb128 0x1
	.byte	0x5e
	.uleb128 0x2a
	.long	.LASF991
	.byte	0x1
	.value	0x11ba
	.long	0x106c
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x29
	.string	"m"
	.byte	0x1
	.value	0x11bb
	.long	0x79
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2a
	.long	.LASF992
	.byte	0x1
	.value	0x11bc
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x2a
	.long	.LASF939
	.byte	0x1
	.value	0x11bd
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.long	.LASF993
	.byte	0x1
	.value	0x11be
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.value	0x11bf
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2a
	.long	.LASF994
	.byte	0x1
	.value	0x11c0
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2a
	.long	.LASF995
	.byte	0x1
	.value	0x11c1
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x2a
	.long	.LASF996
	.byte	0x1
	.value	0x11c2
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x2a
	.long	.LASF795
	.byte	0x1
	.value	0x11c3
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2a
	.long	.LASF740
	.byte	0x1
	.value	0x11c4
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x2a
	.long	.LASF997
	.byte	0x1
	.value	0x11c5
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x2a
	.long	.LASF998
	.byte	0x1
	.value	0x11c6
	.long	0x1039
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x29
	.string	"mg"
	.byte	0x1
	.value	0x11c7
	.long	0x11a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x24
	.quad	.LBB499
	.quad	.LBE499-.LBB499
	.long	0x7a6f
	.uleb128 0x2a
	.long	.LASF999
	.byte	0x1
	.value	0x123b
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x29
	.string	"csv"
	.byte	0x1
	.value	0x123c
	.long	0x106c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x25
	.quad	.LBB500
	.quad	.LBE500-.LBB500
	.uleb128 0x29
	.string	"n_a"
	.byte	0x1
	.value	0x1240
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x29
	.string	"c"
	.byte	0x1
	.value	0x1241
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -201
	.byte	0
	.byte	0
	.uleb128 0x24
	.quad	.LBB505
	.quad	.LBE505-.LBB505
	.long	0x7a93
	.uleb128 0x29
	.string	"l"
	.byte	0x1
	.value	0x12a1
	.long	0x159
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x25
	.quad	.LBB507
	.quad	.LBE507-.LBB507
	.uleb128 0x29
	.string	"svp"
	.byte	0x1
	.value	0x12ce
	.long	0x1d3f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF1000
	.byte	0x1
	.value	0x12f2
	.long	0x11c7
	.quad	.LFB117
	.quad	.LFE117-.LFB117
	.uleb128 0x1
	.byte	0x9c
	.long	0x7b03
	.uleb128 0x29
	.string	"sp"
	.byte	0x1
	.value	0x12f4
	.long	0x1d3f
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.string	"sv"
	.byte	0x1
	.value	0x12f5
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2a
	.long	.LASF1001
	.byte	0x1
	.value	0x12f6
	.long	0x106c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x31
	.long	.LASF1002
	.byte	0x1
	.value	0x1300
	.long	0x11c7
	.quad	.LFB118
	.quad	.LFE118-.LFB118
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xa
	.long	0x2d
	.long	0x7b2c
	.uleb128 0x1e
	.byte	0
	.uleb128 0x33
	.long	.LASF1003
	.byte	0x14
	.byte	0x29
	.long	0x7b37
	.uleb128 0x9
	.long	0x7b21
	.uleb128 0xa
	.long	0x7f
	.long	0x7b47
	.uleb128 0x1e
	.byte	0
	.uleb128 0x34
	.long	.LASF1004
	.byte	0x6
	.value	0xcef
	.long	0x7b53
	.uleb128 0x9
	.long	0x7b3c
	.uleb128 0x34
	.long	.LASF1005
	.byte	0x6
	.value	0xcf1
	.long	0x7b64
	.uleb128 0x9
	.long	0x7b3c
	.uleb128 0x34
	.long	.LASF1006
	.byte	0x6
	.value	0xcf3
	.long	0x7b75
	.uleb128 0x9
	.long	0x7b3c
	.uleb128 0x34
	.long	.LASF1007
	.byte	0x6
	.value	0xcf5
	.long	0x7b86
	.uleb128 0x9
	.long	0x7b3c
	.uleb128 0x34
	.long	.LASF1008
	.byte	0x6
	.value	0xcf7
	.long	0x7b97
	.uleb128 0x9
	.long	0x7b3c
	.uleb128 0x34
	.long	.LASF1009
	.byte	0x6
	.value	0xd05
	.long	0x7ba8
	.uleb128 0x9
	.long	0x7b3c
	.uleb128 0xa
	.long	0x79
	.long	0x7bb8
	.uleb128 0x1e
	.byte	0
	.uleb128 0x33
	.long	.LASF1010
	.byte	0x15
	.byte	0x1e
	.long	0x7bad
	.uleb128 0x34
	.long	.LASF1011
	.byte	0x15
	.value	0x185
	.long	0x7bad
	.uleb128 0x34
	.long	.LASF1012
	.byte	0x15
	.value	0x2f1
	.long	0x2016
	.uleb128 0xa
	.long	0x1044
	.long	0x7be6
	.uleb128 0x1e
	.byte	0
	.uleb128 0x34
	.long	.LASF1013
	.byte	0x15
	.value	0x5be
	.long	0x7bdb
	.uleb128 0x33
	.long	.LASF1014
	.byte	0x16
	.byte	0x34
	.long	0x1024
	.uleb128 0x33
	.long	.LASF1015
	.byte	0x16
	.byte	0x48
	.long	0x57
	.uleb128 0x33
	.long	.LASF1016
	.byte	0x16
	.byte	0x52
	.long	0x11e4
	.uleb128 0x33
	.long	.LASF1017
	.byte	0x16
	.byte	0x98
	.long	0x7f
	.uleb128 0x34
	.long	.LASF1018
	.byte	0x16
	.value	0x125
	.long	0x45b
	.uleb128 0x34
	.long	.LASF1019
	.byte	0x16
	.value	0x126
	.long	0x45b
	.uleb128 0x34
	.long	.LASF1020
	.byte	0x16
	.value	0x127
	.long	0x45b
	.uleb128 0x34
	.long	.LASF1021
	.byte	0x16
	.value	0x166
	.long	0x5e
	.uleb128 0x34
	.long	.LASF1022
	.byte	0x16
	.value	0x19f
	.long	0x7f
	.uleb128 0x34
	.long	.LASF1023
	.byte	0x16
	.value	0x1ff
	.long	0x106c
	.uleb128 0x34
	.long	.LASF1024
	.byte	0x16
	.value	0x222
	.long	0x1ff9
	.uleb128 0x33
	.long	.LASF1025
	.byte	0x17
	.byte	0x22
	.long	0x1d3f
	.uleb128 0x33
	.long	.LASF1026
	.byte	0x17
	.byte	0x26
	.long	0x11c7
	.uleb128 0x33
	.long	.LASF1027
	.byte	0x17
	.byte	0x28
	.long	0x1d3f
	.uleb128 0x33
	.long	.LASF1028
	.byte	0x17
	.byte	0x2a
	.long	0x1d3f
	.uleb128 0x33
	.long	.LASF1029
	.byte	0x17
	.byte	0x2b
	.long	0x1d3f
	.uleb128 0x33
	.long	.LASF1030
	.byte	0x17
	.byte	0x31
	.long	0x7cb4
	.uleb128 0x6
	.byte	0x8
	.long	0xf75
	.uleb128 0x33
	.long	.LASF1031
	.byte	0x17
	.byte	0x33
	.long	0x1039
	.uleb128 0x33
	.long	.LASF1032
	.byte	0x17
	.byte	0x34
	.long	0x1039
	.uleb128 0x33
	.long	.LASF1033
	.byte	0x17
	.byte	0x37
	.long	0x1039
	.uleb128 0x33
	.long	.LASF1034
	.byte	0x17
	.byte	0x39
	.long	0x1039
	.uleb128 0x33
	.long	.LASF1035
	.byte	0x17
	.byte	0x3c
	.long	0x10df
	.uleb128 0x33
	.long	.LASF1036
	.byte	0x17
	.byte	0x3d
	.long	0x10df
	.uleb128 0x33
	.long	.LASF1037
	.byte	0x17
	.byte	0x43
	.long	0x106c
	.uleb128 0x33
	.long	.LASF1038
	.byte	0x17
	.byte	0x44
	.long	0x7d12
	.uleb128 0x6
	.byte	0x8
	.long	0x891
	.uleb128 0x33
	.long	.LASF1039
	.byte	0x17
	.byte	0x5f
	.long	0x7f
	.uleb128 0x33
	.long	.LASF1040
	.byte	0x17
	.byte	0x81
	.long	0x7d2e
	.uleb128 0x35
	.long	0x1d73
	.uleb128 0x33
	.long	.LASF1041
	.byte	0x17
	.byte	0x87
	.long	0x11ea
	.uleb128 0x33
	.long	.LASF1042
	.byte	0x17
	.byte	0x88
	.long	0x7d49
	.uleb128 0x6
	.byte	0x8
	.long	0x1ee1
	.uleb128 0x33
	.long	.LASF1043
	.byte	0x17
	.byte	0xa9
	.long	0x10df
	.uleb128 0x33
	.long	.LASF1044
	.byte	0x17
	.byte	0xaa
	.long	0x10df
	.uleb128 0x33
	.long	.LASF1045
	.byte	0x17
	.byte	0xab
	.long	0x1039
	.uleb128 0x33
	.long	.LASF1046
	.byte	0x17
	.byte	0xac
	.long	0x106c
	.uleb128 0x33
	.long	.LASF1047
	.byte	0x17
	.byte	0xe7
	.long	0x2027
	.uleb128 0x33
	.long	.LASF1048
	.byte	0x17
	.byte	0xeb
	.long	0x206b
	.uleb128 0x34
	.long	.LASF1049
	.byte	0x17
	.value	0x113
	.long	0x7f
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x17
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x15
	.byte	0
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x21
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0xa
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0xa
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0xa
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x34
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x35
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.LBB444-.Ltext0
	.quad	.LBE444-.Ltext0
	.quad	.LBB446-.Ltext0
	.quad	.LBE446-.Ltext0
	.quad	0
	.quad	0
	.quad	.LBB448-.Ltext0
	.quad	.LBE448-.Ltext0
	.quad	.LBB450-.Ltext0
	.quad	.LBE450-.Ltext0
	.quad	0
	.quad	0
	.quad	.LBB452-.Ltext0
	.quad	.LBE452-.Ltext0
	.quad	.LBB456-.Ltext0
	.quad	.LBE456-.Ltext0
	.quad	0
	.quad	0
	.quad	.LBB459-.Ltext0
	.quad	.LBE459-.Ltext0
	.quad	.LBB463-.Ltext0
	.quad	.LBE463-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF585:
	.string	"OP_ESERVENT"
.LASF1022:
	.string	"PL_srand_called"
.LASF510:
	.string	"OP_FTSVTX"
.LASF70:
	.string	"precomp"
.LASF782:
	.string	"Perl_pp_undef"
.LASF463:
	.string	"OP_SYSREAD"
.LASF102:
	.string	"blku_oldretsp"
.LASF480:
	.string	"OP_SHUTDOWN"
.LASF723:
	.string	"repeat_ass_amg"
.LASF691:
	.string	"rshift_ass_amg"
.LASF556:
	.string	"OP_MSGRCV"
.LASF656:
	.string	"si_prev"
.LASF752:
	.string	"Perl_pp_av2arylen"
.LASF741:
	.string	"maxarg"
.LASF598:
	.string	"OP_LOCK"
.LASF603:
	.string	"OP_max"
.LASF945:
	.string	"Perl_pp_uc"
.LASF28:
	.string	"op_next"
.LASF248:
	.string	"xiou_any"
.LASF514:
	.string	"OP_CHDIR"
.LASF966:
	.string	"Perl_pp_lslice"
.LASF832:
	.string	"a_valid"
.LASF951:
	.string	"entry"
.LASF768:
	.string	"tmpRef"
.LASF428:
	.string	"OP_ENTER"
.LASF898:
	.string	"Perl_pp_hex"
.LASF933:
	.string	"Perl_pp_sprintf"
.LASF279:
	.string	"OP_REGCMAYBE"
.LASF99:
	.string	"block"
.LASF409:
	.string	"OP_FLOP"
.LASF856:
	.string	"Perl_pp_scmp"
.LASF447:
	.string	"OP_BINMODE"
.LASF161:
	.string	"xpvgv"
.LASF183:
	.string	"xio_ifp"
.LASF339:
	.string	"OP_SEQ"
.LASF43:
	.string	"cop_io"
.LASF650:
	.string	"stackinfo"
.LASF1002:
	.string	"Perl_pp_threadsv"
.LASF747:
	.string	"am_again"
.LASF758:
	.string	"nonesuch"
.LASF693:
	.string	"band_ass_amg"
.LASF700:
	.string	"gt_amg"
.LASF895:
	.string	"Perl_pp_sqrt"
.LASF971:
	.string	"is_something_there"
.LASF870:
	.string	"tmpl"
.LASF501:
	.string	"OP_FTSOCK"
.LASF155:
	.string	"xhv_keys"
.LASF864:
	.string	"tmps"
.LASF198:
	.string	"xio_flags"
.LASF577:
	.string	"OP_GSERVENT"
.LASF893:
	.string	"Perl_pp_exp"
.LASF24:
	.string	"_ISpunct"
.LASF202:
	.string	"svt_set"
.LASF151:
	.string	"xpvhv"
.LASF725:
	.string	"concat_ass_amg"
.LASF1052:
	.string	"/home/yunqi/SPEC2006/benchspec/CPU2006/400.perlbench/build/build_base_amd64-m64-gcc43-nn.0000"
.LASF994:
	.string	"orig"
.LASF468:
	.string	"OP_TELL"
.LASF754:
	.string	"Perl_pp_rv2cv"
.LASF540:
	.string	"OP_SETPGRP"
.LASF495:
	.string	"OP_FTROWNED"
.LASF977:
	.string	"newlen"
.LASF88:
	.string	"gp_hv"
.LASF182:
	.string	"xpvio"
.LASF484:
	.string	"OP_GETPEERNAME"
.LASF338:
	.string	"OP_SGE"
.LASF123:
	.string	"xpviv"
.LASF717:
	.string	"cos_amg"
.LASF872:
	.string	"Perl_pp_i_divide"
.LASF642:
	.string	"sbu_targ"
.LASF420:
	.string	"OP_CALLER"
.LASF478:
	.string	"OP_LISTEN"
.LASF336:
	.string	"OP_SGT"
.LASF550:
	.string	"OP_SHMCTL"
.LASF904:
	.string	"curlen"
.LASF308:
	.string	"OP_DIVIDE"
.LASF1007:
	.string	"PL_no_helem"
.LASF976:
	.string	"length"
.LASF816:
	.string	"left_neg"
.LASF170:
	.string	"xcv_start"
.LASF85:
	.string	"gp_io"
.LASF825:
	.string	"oom_list_extend"
.LASF874:
	.string	"Perl_pp_i_modulo_0"
.LASF89:
	.string	"gp_egv"
.LASF950:
	.string	"hash"
.LASF634:
	.string	"sbu_iters"
.LASF353:
	.string	"OP_SRAND"
.LASF663:
	.string	"hek_hash"
.LASF859:
	.string	"Perl_pp_bit_or"
.LASF704:
	.string	"ncmp_amg"
.LASF41:
	.string	"cop_line"
.LASF169:
	.string	"xcv_stash"
.LASF319:
	.string	"OP_LEFT_SHIFT"
.LASF854:
	.string	"Perl_pp_seq"
.LASF964:
	.string	"keylen"
.LASF1039:
	.string	"PL_tainted"
.LASF586:
	.string	"OP_GPWNAM"
.LASF769:
	.string	"elem"
.LASF720:
	.string	"log_amg"
.LASF174:
	.string	"xcv_gv"
.LASF449:
	.string	"OP_UNTIE"
.LASF350:
	.string	"OP_SIN"
.LASF668:
	.string	"regexec_t"
.LASF657:
	.string	"si_next"
.LASF935:
	.string	"argsv"
.LASF537:
	.string	"OP_KILL"
.LASF764:
	.string	"mark"
.LASF750:
	.string	"namesv"
.LASF120:
	.string	"xpv_cur"
.LASF1011:
	.string	"PL_op_desc"
.LASF738:
	.string	"Perl_pp_padav"
.LASF277:
	.string	"OP_READLINE"
.LASF290:
	.string	"OP_SCHOP"
.LASF113:
	.string	"mg_type"
.LASF523:
	.string	"OP_READLINK"
.LASF44:
	.string	"UNOP"
.LASF414:
	.string	"OP_ANDASSIGN"
.LASF136:
	.string	"xpvlv"
.LASF119:
	.string	"xpv_pv"
.LASF911:
	.string	"repl_len"
.LASF740:
	.string	"gimme"
.LASF1053:
	.string	"opcode"
.LASF1013:
	.string	"PL_opargs"
.LASF416:
	.string	"OP_METHOD"
.LASF871:
	.string	"Perl_pp_i_multiply"
.LASF853:
	.string	"Perl_pp_sge"
.LASF667:
	.string	"share_proc_t"
.LASF745:
	.string	"Perl_pp_rv2gv"
.LASF1005:
	.string	"PL_no_usym"
.LASF970:
	.string	"firstrelem"
.LASF851:
	.string	"Perl_pp_sgt"
.LASF293:
	.string	"OP_DEFINED"
.LASF132:
	.string	"xpvmg"
.LASF641:
	.string	"sbu_dstr"
.LASF702:
	.string	"eq_amg"
.LASF531:
	.string	"OP_CLOSEDIR"
.LASF558:
	.string	"OP_SEMCTL"
.LASF434:
	.string	"OP_LEAVELOOP"
.LASF525:
	.string	"OP_RMDIR"
.LASF464:
	.string	"OP_SYSWRITE"
.LASF246:
	.string	"cv_flags_t"
.LASF773:
	.string	"snext"
.LASF93:
	.string	"gp_line"
.LASF595:
	.string	"OP_EGRENT"
.LASF954:
	.string	"Perl_pp_keys"
.LASF1012:
	.string	"PL_ppaddr"
.LASF633:
	.string	"subst"
.LASF188:
	.string	"xio_page_len"
.LASF292:
	.string	"OP_SCHOMP"
.LASF699:
	.string	"le_amg"
.LASF963:
	.string	"preeminent"
.LASF458:
	.string	"OP_LEAVEWRITE"
.LASF337:
	.string	"OP_SLE"
.LASF129:
	.string	"xpvnv"
.LASF162:
	.string	"xgv_gp"
.LASF457:
	.string	"OP_ENTERWRITE"
.LASF335:
	.string	"OP_SLT"
.LASF391:
	.string	"OP_JOIN"
.LASF112:
	.string	"mg_private"
.LASF1037:
	.string	"PL_Sv"
.LASF291:
	.string	"OP_CHOMP"
.LASF729:
	.string	"to_av_amg"
.LASF640:
	.string	"sbu_orig"
.LASF889:
	.string	"Perl_pp_sin"
.LASF384:
	.string	"OP_EXISTS"
.LASF148:
	.string	"xav_arylen"
.LASF784:
	.string	"Perl_pp_postinc"
.LASF82:
	.string	"program"
.LASF171:
	.string	"xcv_root"
.LASF613:
	.string	"old_in_eval"
.LASF661:
	.string	"hent_hek"
.LASF1023:
	.string	"PL_encoding"
.LASF111:
	.string	"mg_virtual"
.LASF433:
	.string	"OP_ENTERLOOP"
.LASF983:
	.string	"Perl_pp_unshift"
.LASF252:
	.string	"OP_STUB"
.LASF139:
	.string	"xlv_targ"
.LASF719:
	.string	"exp_amg"
.LASF726:
	.string	"copy_amg"
.LASF905:
	.string	"utf8_curlen"
.LASF39:
	.string	"cop_seq"
.LASF443:
	.string	"OP_CLOSE"
.LASF340:
	.string	"OP_SNE"
.LASF63:
	.string	"sv_flags"
.LASF990:
	.string	"strend"
.LASF692:
	.string	"band_amg"
.LASF547:
	.string	"OP_ALARM"
.LASF328:
	.string	"OP_I_GE"
.LASF674:
	.string	"string_amg"
.LASF987:
	.string	"Perl_pp_split"
.LASF324:
	.string	"OP_I_GT"
.LASF60:
	.string	"broiled"
.LASF193:
	.string	"xio_fmt_gv"
.LASF843:
	.string	"Perl_pp_ncmp"
.LASF448:
	.string	"OP_TIE"
.LASF281:
	.string	"OP_REGCOMP"
.LASF92:
	.string	"gp_flags"
.LASF98:
	.string	"cx_u"
.LASF289:
	.string	"OP_CHOP"
.LASF930:
	.string	"Perl_pp_rindex"
.LASF986:
	.string	"down"
.LASF993:
	.string	"maxiters"
.LASF84:
	.string	"gp_refcnt"
.LASF624:
	.string	"itervar"
.LASF78:
	.string	"nparens"
.LASF563:
	.string	"OP_LEAVEEVAL"
.LASF226:
	.string	"type"
.LASF452:
	.string	"OP_DBMCLOSE"
.LASF850:
	.string	"Perl_pp_slt"
.LASF909:
	.string	"repl_sv"
.LASF306:
	.string	"OP_MULTIPLY"
.LASF415:
	.string	"OP_ORASSIGN"
.LASF815:
	.string	"Perl_pp_modulo"
.LASF94:
	.string	"gp_file"
.LASF481:
	.string	"OP_GSOCKOPT"
.LASF187:
	.string	"xio_page"
.LASF579:
	.string	"OP_SNETENT"
.LASF921:
	.string	"Perl_pp_index"
.LASF421:
	.string	"OP_WARN"
.LASF549:
	.string	"OP_SHMGET"
.LASF357:
	.string	"OP_INT"
.LASF571:
	.string	"OP_GNETENT"
.LASF761:
	.string	"Perl_pp_anoncode"
.LASF538:
	.string	"OP_GETPPID"
.LASF742:
	.string	"Perl_pp_padhv"
.LASF1000:
	.string	"Perl_pp_lock"
.LASF1049:
	.string	"PL_reg_match_utf8"
.LASF361:
	.string	"OP_LENGTH"
.LASF282:
	.string	"OP_MATCH"
.LASF177:
	.string	"xcv_padlist"
.LASF973:
	.string	"Perl_pp_anonlist"
.LASF506:
	.string	"OP_FTPIPE"
.LASF435:
	.string	"OP_RETURN"
.LASF887:
	.string	"Perl_pp_i_negate"
.LASF944:
	.string	"tend"
.LASF855:
	.string	"Perl_pp_sne"
.LASF770:
	.string	"elem2"
.LASF632:
	.string	"blku_loop"
.LASF673:
	.string	"nomethod_amg"
.LASF345:
	.string	"OP_NEGATE"
.LASF83:
	.string	"gp_sv"
.LASF22:
	.string	"_ISblank"
.LASF0:
	.string	"unsigned char"
.LASF402:
	.string	"OP_REVERSE"
.LASF969:
	.string	"firstlelem"
.LASF802:
	.string	"buvok"
.LASF584:
	.string	"OP_EPROTOENT"
.LASF360:
	.string	"OP_ABS"
.LASF224:
	.string	"PerlIO"
.LASF1024:
	.string	"PL_lockhook"
.LASF643:
	.string	"sbu_s"
.LASF941:
	.string	"ulen"
.LASF574:
	.string	"OP_GPROTOENT"
.LASF892:
	.string	"Perl_pp_srand"
.LASF666:
	.string	"float"
.LASF625:
	.string	"itersave"
.LASF126:
	.string	"xpvuv"
.LASF61:
	.string	"sv_any"
.LASF783:
	.string	"Perl_pp_predec"
.LASF913:
	.string	"repl_need_utf8_upgrade"
.LASF884:
	.string	"Perl_pp_i_eq"
.LASF395:
	.string	"OP_ANONHASH"
.LASF326:
	.string	"OP_I_LE"
.LASF879:
	.string	"Perl_pp_i_subtract"
.LASF594:
	.string	"OP_SGRENT"
.LASF612:
	.string	"block_eval"
.LASF322:
	.string	"OP_I_LT"
.LASF706:
	.string	"slt_amg"
.LASF413:
	.string	"OP_COND_EXPR"
.LASF507:
	.string	"OP_FTLINK"
.LASF81:
	.string	"reganch"
.LASF217:
	.string	"stashes"
.LASF896:
	.string	"Perl_pp_int"
.LASF806:
	.string	"ahigh"
.LASF441:
	.string	"OP_EXIT"
.LASF67:
	.string	"endp"
.LASF313:
	.string	"OP_ADD"
.LASF557:
	.string	"OP_SEMGET"
.LASF284:
	.string	"OP_SUBST"
.LASF407:
	.string	"OP_RANGE"
.LASF253:
	.string	"OP_SCALAR"
.LASF824:
	.string	"items"
.LASF16:
	.string	"_ISalpha"
.LASF580:
	.string	"OP_SPROTOENT"
.LASF555:
	.string	"OP_MSGSND"
.LASF890:
	.string	"Perl_pp_cos"
.LASF939:
	.string	"slen"
.LASF380:
	.string	"OP_EACH"
.LASF552:
	.string	"OP_SHMWRITE"
.LASF381:
	.string	"OP_VALUES"
.LASF403:
	.string	"OP_GREPSTART"
.LASF11:
	.string	"size_t"
.LASF270:
	.string	"OP_PROTOTYPE"
.LASF883:
	.string	"Perl_pp_i_ge"
.LASF1026:
	.string	"PL_op"
.LASF138:
	.string	"xlv_targlen"
.LASF846:
	.string	"leftiv"
.LASF332:
	.string	"OP_I_NE"
.LASF881:
	.string	"Perl_pp_i_gt"
.LASF20:
	.string	"_ISprint"
.LASF1031:
	.string	"PL_savestack_ix"
.LASF897:
	.string	"Perl_pp_abs"
.LASF985:
	.string	"oldsp"
.LASF275:
	.string	"OP_BACKTICK"
.LASF25:
	.string	"_ISalnum"
.LASF848:
	.string	"leftuv"
.LASF910:
	.string	"repl"
.LASF1016:
	.string	"PL_defgv"
.LASF243:
	.string	"SVt_PVGV"
.LASF631:
	.string	"blku_eval"
.LASF74:
	.string	"sublen"
.LASF831:
	.string	"useleft"
.LASF429:
	.string	"OP_LEAVE"
.LASF144:
	.string	"xav_fill"
.LASF19:
	.string	"_ISspace"
.LASF515:
	.string	"OP_CHOWN"
.LASF672:
	.string	"bool__amg"
.LASF622:
	.string	"next_op"
.LASF489:
	.string	"OP_FTREXEC"
.LASF110:
	.string	"mg_moremagic"
.LASF744:
	.string	"Perl_pp_padany"
.LASF520:
	.string	"OP_RENAME"
.LASF751:
	.string	"Perl_pp_rv2sv"
.LASF645:
	.string	"sbu_strend"
.LASF669:
	.string	"re_intuit_string_t"
.LASF40:
	.string	"cop_arybase"
.LASF1035:
	.string	"PL_markstack_ptr"
.LASF363:
	.string	"OP_VEC"
.LASF654:
	.string	"si_cxmax"
.LASF456:
	.string	"OP_READ"
.LASF424:
	.string	"OP_LINESEQ"
.LASF116:
	.string	"mg_ptr"
.LASF450:
	.string	"OP_TIED"
.LASF301:
	.string	"OP_POSTINC"
.LASF629:
	.string	"itermax"
.LASF805:
	.string	"alow"
.LASF878:
	.string	"leftsv"
.LASF388:
	.string	"OP_UNPACK"
.LASF836:
	.string	"shift"
.LASF955:
	.string	"Perl_pp_delete"
.LASF545:
	.string	"OP_LOCALTIME"
.LASF196:
	.string	"xio_subprocess"
.LASF798:
	.string	"diff"
.LASF504:
	.string	"OP_FTFILE"
.LASF72:
	.string	"subbeg"
.LASF66:
	.string	"startp"
.LASF978:
	.string	"after"
.LASF789:
	.string	"right"
.LASF730:
	.string	"to_hv_amg"
.LASF820:
	.string	"dright"
.LASF922:
	.string	"little"
.LASF591:
	.string	"OP_GGRNAM"
.LASF18:
	.string	"_ISxdigit"
.LASF1050:
	.string	"GNU C 4.8.1 -mtune=generic -march=x86-64 -g -fno-strict-aliasing -fstack-protector"
.LASF315:
	.string	"OP_SUBTRACT"
.LASF997:
	.string	"oldsave"
.LASF863:
	.string	"Perl_pp_complement"
.LASF491:
	.string	"OP_FTEWRITE"
.LASF731:
	.string	"to_gv_amg"
.LASF900:
	.string	"result_uv"
.LASF517:
	.string	"OP_UNLINK"
.LASF65:
	.string	"regexp"
.LASF600:
	.string	"OP_SETSTATE"
.LASF437:
	.string	"OP_NEXT"
.LASF472:
	.string	"OP_IOCTL"
.LASF992:
	.string	"iters"
.LASF841:
	.string	"Perl_pp_ge"
.LASF64:
	.string	"REGEXP"
.LASF62:
	.string	"sv_refcnt"
.LASF799:
	.string	"odd_power"
.LASF432:
	.string	"OP_ITER"
.LASF509:
	.string	"OP_FTSGID"
.LASF264:
	.string	"OP_PUSHRE"
.LASF262:
	.string	"OP_PADHV"
.LASF532:
	.string	"OP_FORK"
.LASF203:
	.string	"svt_len"
.LASF736:
	.string	"max_amg_code"
.LASF227:
	.string	"next_off"
.LASF785:
	.string	"Perl_pp_postdec"
.LASF426:
	.string	"OP_DBSTATE"
.LASF763:
	.string	"Perl_pp_refgen"
.LASF34:
	.string	"op_flags"
.LASF737:
	.string	"Perl_pp_stub"
.LASF42:
	.string	"cop_warnings"
.LASF659:
	.string	"PERL_SI"
.LASF880:
	.string	"Perl_pp_i_lt"
.LASF777:
	.string	"origmark"
.LASF69:
	.string	"substrs"
.LASF587:
	.string	"OP_GPWUID"
.LASF295:
	.string	"OP_STUDY"
.LASF362:
	.string	"OP_SUBSTR"
.LASF104:
	.string	"blku_oldscopesp"
.LASF240:
	.string	"SVt_PVAV"
.LASF568:
	.string	"OP_GHOSTENT"
.LASF653:
	.string	"si_cxix"
.LASF152:
	.string	"xhv_array"
.LASF570:
	.string	"OP_GNBYADDR"
.LASF687:
	.string	"pow_ass_amg"
.LASF73:
	.string	"offsets"
.LASF710:
	.string	"seq_amg"
.LASF396:
	.string	"OP_SPLICE"
.LASF1025:
	.string	"PL_stack_sp"
.LASF947:
	.string	"Perl_pp_quotemeta"
.LASF796:
	.string	"highbit"
.LASF341:
	.string	"OP_SCMP"
.LASF852:
	.string	"Perl_pp_sle"
.LASF528:
	.string	"OP_TELLDIR"
.LASF194:
	.string	"xio_bottom_name"
.LASF342:
	.string	"OP_BIT_AND"
.LASF238:
	.string	"SVt_PVBM"
.LASF759:
	.string	"code"
.LASF776:
	.string	"Perl_pp_chop"
.LASF670:
	.string	"fallback_amg"
.LASF1018:
	.string	"PL_sv_undef"
.LASF817:
	.string	"right_neg"
.LASF885:
	.string	"Perl_pp_i_ne"
.LASF792:
	.string	"baseuv"
.LASF108:
	.string	"MAGIC"
.LASF36:
	.string	"cop_label"
.LASF114:
	.string	"mg_flags"
.LASF617:
	.string	"cur_text"
.LASF141:
	.string	"XPVAV"
.LASF766:
	.string	"Perl_pp_bless"
.LASF967:
	.string	"lastrelem"
.LASF242:
	.string	"SVt_PVCV"
.LASF298:
	.string	"OP_I_PREINC"
.LASF77:
	.string	"prelen"
.LASF23:
	.string	"_IScntrl"
.LASF1040:
	.string	"PL_curcop"
.LASF998:
	.string	"make_mortal"
.LASF404:
	.string	"OP_GREPWHILE"
.LASF438:
	.string	"OP_REDO"
.LASF31:
	.string	"op_targ"
.LASF14:
	.string	"_ISupper"
.LASF834:
	.string	"value"
.LASF1045:
	.string	"PL_maxscream"
.LASF861:
	.string	"oops_its_an_int"
.LASF297:
	.string	"OP_PREINC"
.LASF810:
	.string	"product_middle"
.LASF757:
	.string	"found"
.LASF195:
	.string	"xio_bottom_gv"
.LASF948:
	.string	"Perl_pp_aslice"
.LASF294:
	.string	"OP_UNDEF"
.LASF347:
	.string	"OP_NOT"
.LASF445:
	.string	"OP_FILENO"
.LASF103:
	.string	"blku_oldmarksp"
.LASF410:
	.string	"OP_AND"
.LASF562:
	.string	"OP_ENTEREVAL"
.LASF1010:
	.string	"PL_op_name"
.LASF79:
	.string	"lastparen"
.LASF695:
	.string	"bor_ass_amg"
.LASF167:
	.string	"XPVCV"
.LASF627:
	.string	"iterary"
.LASF917:
	.string	"repl_sv_copy"
.LASF1032:
	.string	"PL_savestack_max"
.LASF344:
	.string	"OP_BIT_OR"
.LASF479:
	.string	"OP_ACCEPT"
.LASF1027:
	.string	"PL_curpad"
.LASF451:
	.string	"OP_DBMOPEN"
.LASF1043:
	.string	"PL_screamfirst"
.LASF596:
	.string	"OP_GETLOGIN"
.LASF9:
	.string	"__ssize_t"
.LASF229:
	.string	"reg_data"
.LASF192:
	.string	"xio_fmt_name"
.LASF833:
	.string	"result_good"
.LASF662:
	.string	"hent_val"
.LASF427:
	.string	"OP_UNSTACK"
.LASF804:
	.string	"botmask"
.LASF828:
	.string	"isutf"
.LASF130:
	.string	"xnv_nv"
.LASF660:
	.string	"hent_next"
.LASF469:
	.string	"OP_SEEK"
.LASF690:
	.string	"rshift_amg"
.LASF140:
	.string	"xlv_type"
.LASF205:
	.string	"svt_free"
.LASF56:
	.string	"op_pmdynflags"
.LASF733:
	.string	"iter_amg"
.LASF800:
	.string	"Perl_pp_multiply"
.LASF708:
	.string	"sgt_amg"
.LASF244:
	.string	"SVt_PVFM"
.LASF399:
	.string	"OP_SHIFT"
.LASF1009:
	.string	"PL_no_localize_ref"
.LASF425:
	.string	"OP_NEXTSTATE"
.LASF216:
	.string	"clone_params"
.LASF932:
	.string	"llen"
.LASF803:
	.string	"topmask"
.LASF593:
	.string	"OP_GGRENT"
.LASF697:
	.string	"bxor_ass_amg"
.LASF334:
	.string	"OP_I_NCMP"
.LASF312:
	.string	"OP_REPEAT"
.LASF888:
	.string	"Perl_pp_atan2"
.LASF372:
	.string	"OP_LCFIRST"
.LASF511:
	.string	"OP_FTTTY"
.LASF774:
	.string	"Perl_pp_trans"
.LASF317:
	.string	"OP_CONCAT"
.LASF460:
	.string	"OP_PRINT"
.LASF644:
	.string	"sbu_m"
.LASF178:
	.string	"xcv_outside"
.LASF249:
	.string	"PADLIST"
.LASF214:
	.string	"any_dxptr"
.LASF400:
	.string	"OP_UNSHIFT"
.LASF166:
	.string	"xgv_flags"
.LASF109:
	.string	"magic"
.LASF543:
	.string	"OP_TIME"
.LASF492:
	.string	"OP_FTEEXEC"
.LASF1020:
	.string	"PL_sv_yes"
.LASF866:
	.string	"targlen"
.LASF589:
	.string	"OP_SPWENT"
.LASF882:
	.string	"Perl_pp_i_le"
.LASF794:
	.string	"result"
.LASF494:
	.string	"OP_FTEOWNED"
.LASF926:
	.string	"biglen"
.LASF309:
	.string	"OP_I_DIVIDE"
.LASF330:
	.string	"OP_I_EQ"
.LASF1017:
	.string	"PL_tainting"
.LASF241:
	.string	"SVt_PVHV"
.LASF230:
	.string	"SVt_NULL"
.LASF560:
	.string	"OP_REQUIRE"
.LASF200:
	.string	"mgvtbl"
.LASF276:
	.string	"OP_GLOB"
.LASF938:
	.string	"Perl_pp_ucfirst"
.LASF529:
	.string	"OP_SEEKDIR"
.LASF937:
	.string	"Perl_pp_crypt"
.LASF160:
	.string	"XPVGV"
.LASF459:
	.string	"OP_PRTF"
.LASF809:
	.string	"product"
.LASF647:
	.string	"sbu_rx"
.LASF199:
	.string	"MGVTBL"
.LASF569:
	.string	"OP_GNBYNAME"
.LASF649:
	.string	"cx_subst"
.LASF648:
	.string	"cx_blk"
.LASF245:
	.string	"SVt_PVIO"
.LASF235:
	.string	"SVt_PVIV"
.LASF355:
	.string	"OP_LOG"
.LASF996:
	.string	"realarray"
.LASF75:
	.string	"refcnt"
.LASF819:
	.string	"dright_valid"
.LASF974:
	.string	"Perl_pp_anonhash"
.LASF302:
	.string	"OP_I_POSTINC"
.LASF732:
	.string	"to_cv_amg"
.LASF639:
	.string	"sbu_rxtainted"
.LASF521:
	.string	"OP_LINK"
.LASF405:
	.string	"OP_MAPSTART"
.LASF701:
	.string	"ge_amg"
.LASF150:
	.string	"XPVHV"
.LASF869:
	.string	"nwide"
.LASF7:
	.string	"sizetype"
.LASF972:
	.string	"lelem"
.LASF329:
	.string	"OP_EQ"
.LASF256:
	.string	"OP_CONST"
.LASF52:
	.string	"op_pmnext"
.LASF541:
	.string	"OP_GETPRIORITY"
.LASF477:
	.string	"OP_CONNECT"
.LASF172:
	.string	"xcv_xsub"
.LASF812:
	.string	"Perl_pp_divide"
.LASF544:
	.string	"OP_TMS"
.LASF609:
	.string	"hasargs"
.LASF419:
	.string	"OP_LEAVESUBLV"
.LASF483:
	.string	"OP_GETSOCKNAME"
.LASF35:
	.string	"op_private"
.LASF259:
	.string	"OP_GELEM"
.LASF369:
	.string	"OP_CHR"
.LASF715:
	.string	"dec_amg"
.LASF991:
	.string	"dstr"
.LASF746:
	.string	"wasref"
.LASF208:
	.string	"any_ptr"
.LASF1:
	.string	"short unsigned int"
.LASF968:
	.string	"lastlelem"
.LASF4:
	.string	"signed char"
.LASF1028:
	.string	"PL_stack_base"
.LASF318:
	.string	"OP_STRINGIFY"
.LASF536:
	.string	"OP_EXEC"
.LASF316:
	.string	"OP_I_SUBTRACT"
.LASF181:
	.string	"XPVIO"
.LASF813:
	.string	"left_non_neg"
.LASF122:
	.string	"XPVIV"
.LASF147:
	.string	"xav_alloc"
.LASF257:
	.string	"OP_GVSV"
.LASF637:
	.string	"sbu_oldsave"
.LASF912:
	.string	"num_args"
.LASF154:
	.string	"xhv_max"
.LASF1048:
	.string	"PL_regint_string"
.LASF76:
	.string	"minlen"
.LASF288:
	.string	"OP_AASSIGN"
.LASF780:
	.string	"count"
.LASF462:
	.string	"OP_SYSSEEK"
.LASF134:
	.string	"xmg_stash"
.LASF559:
	.string	"OP_SEMOP"
.LASF636:
	.string	"sbu_rflags"
.LASF755:
	.string	"stash"
.LASF68:
	.string	"regstclass"
.LASF327:
	.string	"OP_GE"
.LASF157:
	.string	"xhv_eiter"
.LASF393:
	.string	"OP_LSLICE"
.LASF323:
	.string	"OP_GT"
.LASF258:
	.string	"OP_GV"
.LASF485:
	.string	"OP_LSTAT"
.LASF454:
	.string	"OP_SELECT"
.LASF548:
	.string	"OP_SLEEP"
.LASF239:
	.string	"SVt_PVLV"
.LASF228:
	.string	"reg_substr_data"
.LASF707:
	.string	"sle_amg"
.LASF610:
	.string	"lval"
.LASF606:
	.string	"savearray"
.LASF626:
	.string	"iterlval"
.LASF630:
	.string	"blku_sub"
.LASF676:
	.string	"add_amg"
.LASF255:
	.string	"OP_WANTARRAY"
.LASF1029:
	.string	"PL_stack_max"
.LASF1038:
	.string	"PL_Xpv"
.LASF894:
	.string	"Perl_pp_log"
.LASF320:
	.string	"OP_RIGHT_SHIFT"
.LASF906:
	.string	"fail"
.LASF575:
	.string	"OP_GSBYNAME"
.LASF107:
	.string	"blk_u"
.LASF237:
	.string	"SVt_PVMG"
.LASF928:
	.string	"little_utf8"
.LASF146:
	.string	"xof_off"
.LASF542:
	.string	"OP_SETPRIORITY"
.LASF1036:
	.string	"PL_markstack_max"
.LASF679:
	.string	"subtr_ass_amg"
.LASF592:
	.string	"OP_GGRGID"
.LASF808:
	.string	"bhigh"
.LASF164:
	.string	"xgv_namelen"
.LASF957:
	.string	"hvtype"
.LASF49:
	.string	"op_last"
.LASF261:
	.string	"OP_PADAV"
.LASF222:
	.string	"__dirstream"
.LASF949:
	.string	"Perl_pp_each"
.LASF389:
	.string	"OP_PACK"
.LASF936:
	.string	"Perl_pp_chr"
.LASF211:
	.string	"any_long"
.LASF135:
	.string	"XPVLV"
.LASF442:
	.string	"OP_OPEN"
.LASF1033:
	.string	"PL_tmps_ix"
.LASF33:
	.string	"op_seq"
.LASF712:
	.string	"not_amg"
.LASF1041:
	.string	"PL_curstack"
.LASF573:
	.string	"OP_GPBYNUMBER"
.LASF137:
	.string	"xlv_targoff"
.LASF236:
	.string	"SVt_PVNV"
.LASF47:
	.string	"PMOP"
.LASF376:
	.string	"OP_RV2AV"
.LASF524:
	.string	"OP_MKDIR"
.LASF778:
	.string	"Perl_pp_schomp"
.LASF465:
	.string	"OP_SEND"
.LASF503:
	.string	"OP_FTBLK"
.LASF791:
	.string	"baseuok"
.LASF80:
	.string	"lastcloseparen"
.LASF131:
	.string	"XPVMG"
.LASF671:
	.string	"abs_amg"
.LASF45:
	.string	"unop"
.LASF516:
	.string	"OP_CHROOT"
.LASF197:
	.string	"xio_type"
.LASF830:
	.string	"Perl_pp_subtract"
.LASF829:
	.string	"oom_string_extend"
.LASF490:
	.string	"OP_FTEREAD"
.LASF6:
	.string	"long int"
.LASF204:
	.string	"svt_clear"
.LASF902:
	.string	"Perl_pp_length"
.LASF184:
	.string	"xio_ofp"
.LASF165:
	.string	"xgv_stash"
.LASF359:
	.string	"OP_OCT"
.LASF614:
	.string	"old_op_type"
.LASF959:
	.string	"Perl_pp_exists"
.LASF314:
	.string	"OP_I_ADD"
.LASF50:
	.string	"op_pmreplroot"
.LASF865:
	.string	"anum"
.LASF988:
	.string	"limit"
.LASF844:
	.string	"leftuvok"
.LASF176:
	.string	"xcv_depth"
.LASF91:
	.string	"gp_cvgen"
.LASF775:
	.string	"Perl_pp_schop"
.LASF128:
	.string	"XPVNV"
.LASF907:
	.string	"lvalue"
.LASF156:
	.string	"xhv_riter"
.LASF106:
	.string	"blku_gimme"
.LASF619:
	.string	"label"
.LASF268:
	.string	"OP_RV2CV"
.LASF96:
	.string	"context"
.LASF605:
	.string	"dfoutgv"
.LASF705:
	.string	"scmp_amg"
.LASF502:
	.string	"OP_FTCHR"
.LASF1019:
	.string	"PL_sv_no"
.LASF401:
	.string	"OP_SORT"
.LASF374:
	.string	"OP_LC"
.LASF325:
	.string	"OP_LE"
.LASF827:
	.string	"tmpstr"
.LASF576:
	.string	"OP_GSBYPORT"
.LASF960:
	.string	"Perl_pp_hslice"
.LASF51:
	.string	"op_pmreplstart"
.LASF602:
	.string	"OP_CUSTOM"
.LASF321:
	.string	"OP_LT"
.LASF343:
	.string	"OP_BIT_XOR"
.LASF422:
	.string	"OP_DIE"
.LASF285:
	.string	"OP_SUBSTCONT"
.LASF931:
	.string	"blen"
.LASF231:
	.string	"SVt_IV"
.LASF307:
	.string	"OP_I_MULTIPLY"
.LASF225:
	.string	"regnode"
.LASF680:
	.string	"mult_amg"
.LASF351:
	.string	"OP_COS"
.LASF29:
	.string	"op_sibling"
.LASF185:
	.string	"xio_dirpu"
.LASF1044:
	.string	"PL_screamnext"
.LASF210:
	.string	"any_iv"
.LASF378:
	.string	"OP_AELEM"
.LASF1004:
	.string	"PL_no_symref"
.LASF158:
	.string	"xhv_pmroot"
.LASF689:
	.string	"lshift_ass_amg"
.LASF348:
	.string	"OP_COMPLEMENT"
.LASF423:
	.string	"OP_RESET"
.LASF3:
	.string	"long unsigned int"
.LASF48:
	.string	"pmop"
.LASF953:
	.string	"Perl_pp_values"
.LASF500:
	.string	"OP_FTCTIME"
.LASF406:
	.string	"OP_MAPWHILE"
.LASF498:
	.string	"OP_FTMTIME"
.LASF390:
	.string	"OP_SPLIT"
.LASF638:
	.string	"sbu_once"
.LASF346:
	.string	"OP_I_NEGATE"
.LASF527:
	.string	"OP_READDIR"
.LASF734:
	.string	"int_amg"
.LASF58:
	.string	"PerlInterpreter"
.LASF779:
	.string	"Perl_pp_chomp"
.LASF793:
	.string	"power"
.LASF675:
	.string	"numer_amg"
.LASF901:
	.string	"Perl_pp_oct"
.LASF684:
	.string	"modulo_amg"
.LASF331:
	.string	"OP_NE"
.LASF721:
	.string	"sqrt_amg"
.LASF724:
	.string	"concat_amg"
.LASF567:
	.string	"OP_GHBYADDR"
.LASF677:
	.string	"add_ass_amg"
.LASF8:
	.string	"char"
.LASF412:
	.string	"OP_XOR"
.LASF487:
	.string	"OP_FTRREAD"
.LASF607:
	.string	"argarray"
.LASF696:
	.string	"bxor_amg"
.LASF190:
	.string	"xio_top_name"
.LASF767:
	.string	"Perl_pp_gelem"
.LASF535:
	.string	"OP_SYSTEM"
.LASF117:
	.string	"mg_len"
.LASF461:
	.string	"OP_SYSOPEN"
.LASF247:
	.string	"xiou_dirp"
.LASF1030:
	.string	"PL_savestack"
.LASF163:
	.string	"xgv_name"
.LASF278:
	.string	"OP_RCATLINE"
.LASF411:
	.string	"OP_OR"
.LASF303:
	.string	"OP_POSTDEC"
.LASF683:
	.string	"div_ass_amg"
.LASF604:
	.string	"block_sub"
.LASF471:
	.string	"OP_FCNTL"
.LASF822:
	.string	"dans"
.LASF496:
	.string	"OP_FTZERO"
.LASF265:
	.string	"OP_RV2GV"
.LASF392:
	.string	"OP_LIST"
.LASF860:
	.string	"Perl_pp_negate"
.LASF186:
	.string	"xio_lines"
.LASF877:
	.string	"Perl_pp_i_add"
.LASF756:
	.string	"Perl_pp_prototype"
.LASF961:
	.string	"localizing"
.LASF958:
	.string	"keysv"
.LASF847:
	.string	"rightiv"
.LASF979:
	.string	"tmparyval"
.LASF493:
	.string	"OP_FTIS"
.LASF652:
	.string	"si_cxstack"
.LASF251:
	.string	"OP_NULL"
.LASF121:
	.string	"xpv_len"
.LASF32:
	.string	"op_type"
.LASF385:
	.string	"OP_RV2HV"
.LASF27:
	.string	"STRLEN"
.LASF1008:
	.string	"PL_no_modify"
.LASF508:
	.string	"OP_FTSUID"
.LASF283:
	.string	"OP_QR"
.LASF367:
	.string	"OP_FORMLINE"
.LASF615:
	.string	"old_namesv"
.LASF534:
	.string	"OP_WAITPID"
.LASF818:
	.string	"use_double"
.LASF232:
	.string	"SVt_NV"
.LASF364:
	.string	"OP_INDEX"
.LASF21:
	.string	"_ISgraph"
.LASF365:
	.string	"OP_RINDEX"
.LASF665:
	.string	"hek_key"
.LASF835:
	.string	"Perl_pp_left_shift"
.LASF582:
	.string	"OP_EHOSTENT"
.LASF311:
	.string	"OP_I_MODULO"
.LASF735:
	.string	"DESTROY_amg"
.LASF919:
	.string	"size"
.LASF175:
	.string	"xcv_file"
.LASF868:
	.string	"nchar"
.LASF821:
	.string	"dleft"
.LASF876:
	.string	"Perl_pp_i_modulo"
.LASF125:
	.string	"XPVUV"
.LASF1047:
	.string	"PL_regexecp"
.LASF219:
	.string	"proto_perl"
.LASF616:
	.string	"old_eval_root"
.LASF387:
	.string	"OP_HSLICE"
.LASF310:
	.string	"OP_MODULO"
.LASF551:
	.string	"OP_SHMREAD"
.LASF505:
	.string	"OP_FTDIR"
.LASF867:
	.string	"send"
.LASF581:
	.string	"OP_SSERVENT"
.LASF716:
	.string	"atan2_amg"
.LASF899:
	.string	"result_nv"
.LASF250:
	.string	"PADOFFSET"
.LASF54:
	.string	"op_pmflags"
.LASF811:
	.string	"product_low"
.LASF685:
	.string	"modulo_ass_amg"
.LASF127:
	.string	"xuv_uv"
.LASF59:
	.string	"interpreter"
.LASF105:
	.string	"blku_oldpm"
.LASF1015:
	.string	"PL_multiline"
.LASF709:
	.string	"sge_amg"
.LASF999:
	.string	"tail"
.LASF995:
	.string	"origlimit"
.LASF46:
	.string	"op_first"
.LASF26:
	.string	"double"
.LASF862:
	.string	"Perl_pp_not"
.LASF989:
	.string	"do_utf8"
.LASF55:
	.string	"op_pmpermflags"
.LASF118:
	.string	"xrv_rv"
.LASF145:
	.string	"xav_max"
.LASF10:
	.string	"ssize_t"
.LASF30:
	.string	"op_ppaddr"
.LASF599:
	.string	"OP_THREADSV"
.LASF713:
	.string	"compl_amg"
.LASF209:
	.string	"any_i32"
.LASF714:
	.string	"inc_amg"
.LASF727:
	.string	"neg_amg"
.LASF234:
	.string	"SVt_PV"
.LASF38:
	.string	"cop_filegv"
.LASF212:
	.string	"any_bool"
.LASF397:
	.string	"OP_PUSH"
.LASF373:
	.string	"OP_UC"
.LASF180:
	.string	"xcv_outside_seq"
.LASF300:
	.string	"OP_I_PREDEC"
.LASF71:
	.string	"data"
.LASF476:
	.string	"OP_BIND"
.LASF583:
	.string	"OP_ENETENT"
.LASF530:
	.string	"OP_REWINDDIR"
.LASF655:
	.string	"si_type"
.LASF839:
	.string	"Perl_pp_gt"
.LASF143:
	.string	"xav_array"
.LASF233:
	.string	"SVt_RV"
.LASF1014:
	.string	"PL_dowarn"
.LASF943:
	.string	"Perl_pp_lcfirst"
.LASF215:
	.string	"CLONE_PARAMS"
.LASF430:
	.string	"OP_SCOPE"
.LASF772:
	.string	"sfirst"
.LASF566:
	.string	"OP_GHBYNAME"
.LASF299:
	.string	"OP_PREDEC"
.LASF826:
	.string	"markoff"
.LASF620:
	.string	"resetsp"
.LASF915:
	.string	"upos"
.LASF95:
	.string	"PERL_CONTEXT"
.LASF15:
	.string	"_ISlower"
.LASF743:
	.string	"Perl_pp_scalar"
.LASF153:
	.string	"xhv_fill"
.LASF124:
	.string	"xiv_iv"
.LASF795:
	.string	"base"
.LASF790:
	.string	"left"
.LASF807:
	.string	"blow"
.LASF100:
	.string	"blku_oldsp"
.LASF688:
	.string	"lshift_amg"
.LASF929:
	.string	"bytes"
.LASF533:
	.string	"OP_WAIT"
.LASF439:
	.string	"OP_DUMP"
.LASF722:
	.string	"repeat_amg"
.LASF942:
	.string	"tculen"
.LASF287:
	.string	"OP_SASSIGN"
.LASF1046:
	.string	"PL_lastscream"
.LASF681:
	.string	"mult_ass_amg"
.LASF621:
	.string	"redo_op"
.LASF377:
	.string	"OP_AELEMFAST"
.LASF916:
	.string	"urem"
.LASF664:
	.string	"hek_len"
.LASF371:
	.string	"OP_UCFIRST"
.LASF522:
	.string	"OP_SYMLINK"
.LASF356:
	.string	"OP_SQRT"
.LASF940:
	.string	"tmpbuf"
.LASF554:
	.string	"OP_MSGCTL"
.LASF781:
	.string	"Perl_pp_defined"
.LASF497:
	.string	"OP_FTSIZE"
.LASF12:
	.string	"long long unsigned int"
.LASF920:
	.string	"offset"
.LASF698:
	.string	"lt_amg"
.LASF467:
	.string	"OP_EOF"
.LASF623:
	.string	"last_op"
.LASF513:
	.string	"OP_FTBINARY"
.LASF486:
	.string	"OP_STAT"
.LASF386:
	.string	"OP_HELEM"
.LASF1001:
	.string	"retsv"
.LASF797:
	.string	"lowbit"
.LASF903:
	.string	"Perl_pp_substr"
.LASF263:
	.string	"OP_PADANY"
.LASF267:
	.string	"OP_AV2ARYLEN"
.LASF473:
	.string	"OP_FLOCK"
.LASF975:
	.string	"Perl_pp_splice"
.LASF368:
	.string	"OP_ORD"
.LASF207:
	.string	"svt_dup"
.LASF658:
	.string	"si_markoff"
.LASF254:
	.string	"OP_PUSHMARK"
.LASF923:
	.string	"temp"
.LASF561:
	.string	"OP_DOFILE"
.LASF191:
	.string	"xio_top_gv"
.LASF682:
	.string	"div_amg"
.LASF814:
	.string	"right_non_neg"
.LASF1021:
	.string	"PL_amagic_generation"
.LASF383:
	.string	"OP_DELETE"
.LASF946:
	.string	"Perl_pp_lc"
.LASF840:
	.string	"Perl_pp_le"
.LASF678:
	.string	"subtr_amg"
.LASF1034:
	.string	"PL_tmps_max"
.LASF646:
	.string	"sbu_rxres"
.LASF1042:
	.string	"PL_curstackinfo"
.LASF838:
	.string	"Perl_pp_lt"
.LASF418:
	.string	"OP_LEAVESUB"
.LASF1006:
	.string	"PL_no_aelem"
.LASF952:
	.string	"realhv"
.LASF873:
	.string	"S_refto"
.LASF260:
	.string	"OP_PADSV"
.LASF272:
	.string	"OP_SREFGEN"
.LASF440:
	.string	"OP_GOTO"
.LASF1051:
	.string	"pp.c"
.LASF749:
	.string	"name"
.LASF57:
	.string	"op_pmstash"
.LASF201:
	.string	"svt_get"
.LASF858:
	.string	"Perl_pp_bit_xor"
.LASF86:
	.string	"gp_form"
.LASF304:
	.string	"OP_I_POSTDEC"
.LASF1003:
	.string	"PL_utf8skip"
.LASF908:
	.string	"arybase"
.LASF924:
	.string	"retval"
.LASF266:
	.string	"OP_RV2SV"
.LASF101:
	.string	"blku_oldcop"
.LASF37:
	.string	"cop_stash"
.LASF274:
	.string	"OP_BLESS"
.LASF546:
	.string	"OP_GMTIME"
.LASF849:
	.string	"rightuv"
.LASF13:
	.string	"long long int"
.LASF220:
	.string	"line_t"
.LASF771:
	.string	"Perl_pp_study"
.LASF159:
	.string	"xhv_name"
.LASF512:
	.string	"OP_FTTEXT"
.LASF703:
	.string	"ne_amg"
.LASF842:
	.string	"Perl_pp_ne"
.LASF651:
	.string	"si_stack"
.LASF499:
	.string	"OP_FTATIME"
.LASF206:
	.string	"svt_copy"
.LASF965:
	.string	"Perl_pp_list"
.LASF398:
	.string	"OP_POP"
.LASF914:
	.string	"repl_is_utf8"
.LASF296:
	.string	"OP_POS"
.LASF305:
	.string	"OP_POW"
.LASF431:
	.string	"OP_ENTERITER"
.LASF271:
	.string	"OP_REFGEN"
.LASF934:
	.string	"Perl_pp_ord"
.LASF739:
	.string	"targ"
.LASF455:
	.string	"OP_GETC"
.LASF886:
	.string	"Perl_pp_i_ncmp"
.LASF488:
	.string	"OP_FTRWRITE"
.LASF482:
	.string	"OP_SSOCKOPT"
.LASF97:
	.string	"cx_type"
.LASF149:
	.string	"xav_flags"
.LASF984:
	.string	"Perl_pp_reverse"
.LASF588:
	.string	"OP_GPWENT"
.LASF17:
	.string	"_ISdigit"
.LASF787:
	.string	"is_int"
.LASF628:
	.string	"iterix"
.LASF962:
	.string	"other_magic"
.LASF578:
	.string	"OP_SHOSTENT"
.LASF436:
	.string	"OP_LAST"
.LASF133:
	.string	"xmg_magic"
.LASF382:
	.string	"OP_KEYS"
.LASF115:
	.string	"mg_obj"
.LASF801:
	.string	"auvok"
.LASF565:
	.string	"OP_LEAVETRY"
.LASF213:
	.string	"any_dptr"
.LASF408:
	.string	"OP_FLIP"
.LASF728:
	.string	"to_sv_amg"
.LASF526:
	.string	"OP_OPEN_DIR"
.LASF760:
	.string	"seen_question"
.LASF142:
	.string	"xpvav"
.LASF53:
	.string	"op_pmregexp"
.LASF273:
	.string	"OP_REF"
.LASF475:
	.string	"OP_SOCKPAIR"
.LASF956:
	.string	"discard"
.LASF823:
	.string	"Perl_pp_repeat"
.LASF925:
	.string	"tmps2"
.LASF572:
	.string	"OP_GPBYNAME"
.LASF173:
	.string	"xcv_xsubany"
.LASF891:
	.string	"Perl_pp_rand"
.LASF857:
	.string	"Perl_pp_bit_and"
.LASF446:
	.string	"OP_UMASK"
.LASF189:
	.string	"xio_lines_left"
.LASF875:
	.string	"Perl_pp_i_modulo_1"
.LASF466:
	.string	"OP_RECV"
.LASF87:
	.string	"gp_av"
.LASF470:
	.string	"OP_TRUNCATE"
.LASF444:
	.string	"OP_PIPE_OP"
.LASF590:
	.string	"OP_EPWENT"
.LASF927:
	.string	"big_utf8"
.LASF918:
	.string	"Perl_pp_vec"
.LASF845:
	.string	"rightuvok"
.LASF618:
	.string	"block_loop"
.LASF269:
	.string	"OP_ANONCODE"
.LASF686:
	.string	"pow_amg"
.LASF286:
	.string	"OP_TRANS"
.LASF981:
	.string	"Perl_pp_pop"
.LASF597:
	.string	"OP_SYSCALL"
.LASF753:
	.string	"Perl_pp_pos"
.LASF179:
	.string	"xcv_flags"
.LASF786:
	.string	"Perl_pp_pow"
.LASF601:
	.string	"OP_METHOD_NAMED"
.LASF2:
	.string	"unsigned int"
.LASF635:
	.string	"sbu_maxiters"
.LASF168:
	.string	"xpvcv"
.LASF349:
	.string	"OP_ATAN2"
.LASF394:
	.string	"OP_ANONLIST"
.LASF788:
	.string	"float_it"
.LASF474:
	.string	"OP_SOCKET"
.LASF379:
	.string	"OP_ASLICE"
.LASF352:
	.string	"OP_RAND"
.LASF358:
	.string	"OP_HEX"
.LASF611:
	.string	"oldcomppad"
.LASF223:
	.string	"_PerlIO"
.LASF453:
	.string	"OP_SSELECT"
.LASF694:
	.string	"bor_amg"
.LASF711:
	.string	"sne_amg"
.LASF553:
	.string	"OP_MSGGET"
.LASF5:
	.string	"short int"
.LASF90:
	.string	"gp_cv"
.LASF375:
	.string	"OP_QUOTEMETA"
.LASF539:
	.string	"OP_GETPGRP"
.LASF608:
	.string	"olddepth"
.LASF333:
	.string	"OP_NCMP"
.LASF564:
	.string	"OP_ENTERTRY"
.LASF982:
	.string	"Perl_pp_shift"
.LASF518:
	.string	"OP_CHMOD"
.LASF765:
	.string	"Perl_pp_ref"
.LASF354:
	.string	"OP_EXP"
.LASF370:
	.string	"OP_CRYPT"
.LASF519:
	.string	"OP_UTIME"
.LASF718:
	.string	"sin_amg"
.LASF980:
	.string	"Perl_pp_push"
.LASF221:
	.string	"PerlIOl"
.LASF417:
	.string	"OP_ENTERSUB"
.LASF218:
	.string	"flags"
.LASF366:
	.string	"OP_SPRINTF"
.LASF280:
	.string	"OP_REGCRESET"
.LASF748:
	.string	"tmpsv"
.LASF762:
	.string	"Perl_pp_srefgen"
.LASF837:
	.string	"Perl_pp_right_shift"
	.ident	"GCC: (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1"
	.section	.note.GNU-stack,"",@progbits
